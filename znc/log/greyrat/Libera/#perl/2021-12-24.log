[00:01:31] * GumbyPAN CPAN Upload: Text-Layout-0.027 by JV https://metacpan.org/release/JV/Text-Layout-0.027
[00:08:17] *** Quits: yzhernand (~yzhernand@2607:fb90:5501:e9a6:4037:6dff:fe56:2980) (Ping timeout: 240 seconds)
[00:11:13] *** Joins: ztx (~ztx@user/ztx)
[00:11:21] *** Joins: yzhernand (~yzhernand@64-18-144-8.starry-inc.net)
[00:12:54] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Remote host closed the connection)
[00:20:01] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Remote host closed the connection)
[00:20:17] *** Quits: yzhernand (~yzhernand@64-18-144-8.starry-inc.net) (Ping timeout: 240 seconds)
[00:20:31] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[00:29:17] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 240 seconds)
[00:32:03] *** Joins: rgrinberg (~textual@187.223.250.159)
[00:38:27] *** Joins: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com)
[00:41:35] * GumbyPAN CPAN Upload: Perl-Critic-Community-v1.0.2 by DBOOK https://metacpan.org/release/DBOOK/Perl-Critic-Community-v1.0.2
[00:43:24] *** Joins: whynot (~whynot@37.73.36.63)
[00:44:17] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[00:45:55] *** Joins: rgrinberg (~textual@187.223.144.204)
[00:53:08] *** Joins: toastloopex (toastloop@user/toastloop)
[00:54:29] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[00:56:26] *** Quits: toastloop (toastloop@user/toastloop) (Ping timeout: 268 seconds)
[00:56:40] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[00:59:46] *** Quits: martinus__ (~martin@2.56.202.77.rev.sfr.net) (Ping timeout: 260 seconds)
[01:01:37] *** Joins: monkey_ (~user@190.104.116.153)
[01:03:50] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 268 seconds)
[01:12:37] *** Quits: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com) (Ping timeout: 240 seconds)
[01:12:45] *** Joins: rgrinberg (~textual@187.223.250.159)
[01:16:05] *** Quits: morte_ (~user@190.148.157.89) (Quit: ERC (IRC client for Emacs 27.2))
[01:17:53] *** Joins: morte_ (~user@190.104.116.153)
[01:27:05] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 250 seconds)
[01:31:03] *** Joins: rgrinberg (~textual@187.223.250.159)
[01:35:47] *** Joins: HvszrStykp (~X@81.171.62.82)
[01:35:57] <HvszrStykp> eval: print 1
[01:35:59] *** Quits: rgrinberg (~textual@187.223.250.159) (Read error: Connection reset by peer)
[01:35:59] <perlbot> HvszrStykp: 1
[01:36:36] *** Joins: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com)
[01:36:56] <HvszrStykp> eval: print ((join "-", (map { sprintf("%x", int(rand(15))); } [0..4]))."\n");
[01:36:57] <perlbot> HvszrStykp: 2 
[01:37:09] *** Joins: toastlooply (toastloop@user/toastloop)
[01:37:46] <HvszrStykp> Nevermind, just answered my own question when typing it out. I just forgot that [0..4] is a reference
[01:37:53] <HvszrStykp> eval: print ((join "-", (map { sprintf("%x", int(rand(15))); } (0..4)))."\n");
[01:37:55] <perlbot> HvszrStykp: e-b-8-e-8 
[01:40:23] *** Quits: toastloopex (toastloop@user/toastloop) (Ping timeout: 256 seconds)
[01:45:06] *** Joins: rgrinberg (~textual@187.223.144.204)
[01:48:09] *** Joins: toastloopex (~toastloop@user/toastloop)
[01:50:57] *** Quits: toastlooply (toastloop@user/toastloop) (Ping timeout: 240 seconds)
[01:53:59] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[01:56:50] *** Joins: rgrinberg (~textual@187.223.248.37)
[02:07:27] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[02:08:31] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[02:09:49] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 268 seconds)
[02:10:15] *** Quits: toastloopex (~toastloop@user/toastloop) (Remote host closed the connection)
[02:10:36] *** Joins: toastloopex (~toastloop@user/toastloop)
[02:16:13] *** Quits: Darkcoal (~user@143.92.183.183) (Quit: Darkcoal)
[02:20:37] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[02:25:57] *** Quits: morte_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[02:30:21] *** Joins: rgrinberg (~textual@187.223.250.159)
[02:32:10] *** Quits: bluray (~bluray@user/zapdos) (Quit: Konversation terminated!)
[02:33:37] *** Quits: pizdets (~pizdets@183.182.114.214) (Ping timeout: 240 seconds)
[02:33:50] *** Joins: pizdets_ (~pizdets@183.182.111.24)
[02:33:52] *** Quits: rgrinberg (~textual@187.223.250.159) (Client Quit)
[02:44:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[02:56:50] * GumbyPAN CPAN Upload: DateTime-1.55 by DROLSKY https://metacpan.org/release/DROLSKY/DateTime-1.55
[02:58:13] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[03:03:29] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 268 seconds)
[03:11:54] <gloin> Weird thing - I'm using Net::OpenSSH to a nonstandard shell calling itself "SMASH!" (it's an IPMI thing) and when I do something like $ssh->capture("version"); nothing happens until I hit ctrl-c
[03:12:33] <gloin> so how do I capture output from an oddball shell? SSHing in by hand and typing "version" and hitting enter works as expected
[03:14:04] <gloin> When I set $Net::OpenSSH::Debug |= 16 the ssh output says _waitpid which says somehow ->capture isn't seeing the newline
[03:14:13] <gloin> s/says/suggests
[03:16:24] <gloin> hoping I don't have to march down the path of open_ex
[03:31:03] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[03:32:50] *** Joins: morte_ (~user@190.104.116.153)
[03:33:04] *** Quits: solarbunny (~sol@2001:778:200:302:20c:29ff:fe8a:4af7) (Ping timeout: 268 seconds)
[03:35:25] *** Quits: toastloopex (~toastloop@user/toastloop) (Remote host closed the connection)
[03:36:02] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 240 seconds)
[03:40:37] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 240 seconds)
[03:42:33] <gloin> For the sake of future searchers, the answer was $ssh->capture({stdin_data => "version\n"});
[03:45:39] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[03:45:39] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[03:45:39] *** finn_elija is now known as FinnElija
[03:47:33] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[03:50:15] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[03:52:49] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 268 seconds)
[03:55:30] *** Quits: magla (~gelignite@55d4c16b.access.ecotel.net) (Quit: Stay safe!)
[03:58:27] <gloin> (of course now I'm dealing with Pseudo-terminal will not be allocated", sigh)
[04:02:31] *** Quits: whynot (~whynot@37.73.36.63) (Quit: leaving)
[04:03:07] <aquanight> hmm
[04:04:21] <gloin> passing -t to master_opts
[04:05:01] <aquanight> gloin: does your shell respond to EOF in the expected way?
[04:05:31] <gloin> aquanight: I really don't know. I'm literally just trying to log in and see if a command returns successfully.
[04:05:57] <gloin> SMASH is one of those limited weird vendor shells more or less
[04:06:01] <aquanight> you said you can SSH in by hand
[04:06:05] <gloin> yeah
[04:07:15] <aquanight> actually wait
[04:07:21] <aquanight> doesn't ssh bypass the shell when you're using a command?
[04:07:40] <aquanight> what happens if you do ssh <host> version from your shell?
[04:08:37] <aquanight> if you need to execute a shell command, rather than a normal runnable binary, you might need to explicitly call the shell in your ->capture() command
[04:08:51] <gloin> the command doesn't get passed
[04:08:55] <aquanight> e.g. if this was bash I might do ->capture("sh -c 'version'")
[04:09:16] <aquanight> it should
[04:09:18] <gloin> sh won't work remotely
[04:09:22] <gloin> it's a weird shell
[04:09:24] <gloin> hah
[04:09:25] <aquanight> get passed that is
[04:09:32] <gloin> "? command not support now"
[04:09:45] <aquanight> if you're not able to run a command by doing: ssh <host> command
[04:09:51] <gloin> I'm not
[04:09:53] <aquanight> then it's possible the remote server has disabled command execution
[04:10:10] <aquanight> I believe this is a thing sshd can do
[04:10:22] <gloin> I'm able to get it to work with capture({stdin_data =>
[04:10:35] <gloin> just need to silence the no tty warning
[04:10:55] <aquanight> for example in sshd_config there is the "ForceCommand" option which overrides the ssh client's requested command
[04:11:41] <gloin> https://www.dtmf.org/standards/smash
[04:11:43] <aquanight> you can do tty => 1 in your option hash
[04:11:48] <gloin> the device is embedded
[04:11:59] <aquanight> yes
[04:12:08] <aquanight> ssh uses an inline mechanism to communicate the desired command
[04:12:17] <aquanight> it's not simply passed to a shell, it has to be supported by sshd
[04:12:24] <aquanight> if it's not, this happens.
[04:12:56] <gloin> yeah, tty => 1 failed
[04:13:09] <gloin> master process exited unexpectedly
[04:13:20] <aquanight> then you might need to go the other way
[04:13:25] <aquanight> and do tty => 0
[04:13:27] <gloin> wish $ssh->capture supported tty
[04:13:35] <aquanight> you likely don't need a proper tty anyway
[04:14:01] <gloin> also failed, same way
[04:14:24] <gloin> the interesting thing is that the "Pseudo-terminal" warning doesn't show until the actual command gets executed
[04:14:48] <gloin> I build the connection and nothing, then $ssh->capture and there's the warn
[04:16:16] *** Quits: morte_ (~user@190.104.116.153) (Remote host closed the connection)
[04:21:30] <gloin> I stuck a print statement in between my $ssh = netopenssh->new yadda yadda and the $ssh->capture and the print statement comes before the pseudo-terminal warn
[04:21:46] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[04:26:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 240 seconds)
[04:27:28] * gloin decides this can wait until after the holidays. Best to all, until next year!
[04:31:47] <gloin> >2 /dev/null haha, forget it
[04:31:59] * GumbyPAN CPAN Upload: Alien-Meson-0.01_01 by ZMUGHAL https://metacpan.org/release/ZMUGHAL/Alien-Meson-0.01_01
[04:36:22] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[04:36:31] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[04:40:17] *** Quits: brunoramoslu (~brunoramo@94.252.122.182) (Ping timeout: 240 seconds)
[04:47:17] *** Joins: morte_ (~user@190.104.116.153)
[04:54:19] *** Joins: brunoramoslu (~brunoramo@94.252.122.9)
[05:02:02] * GumbyPAN CPAN Upload: SPVM-0.9021 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-0.9021
[05:02:02] * GumbyPAN CPAN Upload: SPVM-Math-0.04 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-Math-0.04
[05:02:54] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[05:07:37] *** Quits: KnoP (~KnoP@p4ff56d9d.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:12:03] * GumbyPAN CPAN Upload: SPVM-Math-0.05 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-Math-0.05
[05:17:28] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[05:27:04] * GumbyPAN CPAN Upload: Devel-IPerl-0.011 by ZMUGHAL https://metacpan.org/release/ZMUGHAL/Devel-IPerl-0.011
[05:30:52] *** Quits: G_SabinoMullane (~G_SabinoM@107-145-092-033.res.spectrum.com) (Ping timeout: 268 seconds)
[05:55:37] *** Quits: morte_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[05:57:00] *** Quits: Su-Shee (~Susanne@p508943e2.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:58:50] *** Joins: morte_ (~user@190.148.157.89)
[05:58:51] *** Joins: Su-Shee (~Susanne@p508946a3.dip0.t-ipconnect.de)
[05:59:25] <buu> perlbot: utf8 
[05:59:26] <perlbot> buu: U+F1DE (ef 87 9e):  [] 
[05:59:48] <aquanight> sub assert { shift or Carp::confess "ASSERT FAIL"; } ## I sometimes like how simple debug aids can be with perl.
[06:00:49] <aquanight> I should add this to my AOC template. Sure it'll only get two more days of it until next year but still.
[06:02:08] * GumbyPAN CPAN Upload: App-sdif-4.21.0 by UTASHIRO https://metacpan.org/release/UTASHIRO/App-sdif-4.21.0
[06:18:39] *** Joins: gast0n (~g4570n@user/gast0n)
[06:22:59] <aquanight> hmmm
[06:23:08] <aquanight> I doubt it matters but:
[06:23:35] <aquanight> grep { stuff($array[$_]) } @index_list; vs grep { stuff($_) } @array[@index_list];
[06:24:38] <aquanight> admittedly in my particular case, the former lets me go further with abusing "these operators act on $_ by default" fun
[06:25:05] <aquanight> e.g. grep { ref || !length } @array[@indexes];
[06:33:11] <aquanight> sweval: [ "A" x 2 ]
[06:33:12] <perlbot> aquanight: ["AA"]
[06:33:15] <aquanight> sweval: [ ("A") x 2 ]
[06:33:16] <perlbot> aquanight: ["A","A"]
[06:36:16] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[06:38:57] *** Joins: rgrinberg (~textual@2806:101e:1:83af:d58f:1e2d:50a:b565)
[06:40:23] <aquanight> BAH fucks sakes
[06:40:32] <aquanight> LeoNerd: when can we have BEGIN expressions already
[06:40:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 240 seconds)
[06:56:34] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:56:34] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:56:34] *** finn_elija is now known as FinnElija
[07:09:20] *** Joins: stanrifkin (~stanrifki@p200300dbcf1b6600d1e4c1069abd856d.dip0.t-ipconnect.de)
[07:10:15] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[07:10:36] <stanrifkin> when a function returns an array, how can i index only one element? something like say ${getpwuid(0)}[1]? <- does not work.
[07:14:29] <stanrifkin> i mean i can do it with @a = getpwuid(0); $a[1]; but i want it in one statement.
[07:15:26] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 260 seconds)
[07:16:33] <Adura> eval: (stat '/etc/hosts')[7]
[07:16:35] <perlbot> Adura: 109
[07:16:55] <Adura> Sufficient, stanrifkin?
[07:18:44] <stanrifkin> Adura: exactly what i want... but perl -E'say (stat "/etc/hosts")[7]' does not work
[07:19:02] <stanrifkin> so it has something to do with my shell escapes...
[07:19:07] <Adura> eval: say((stat '/etc/hosts')[7]);
[07:19:09] <perlbot> Adura: 109 
[07:19:36] <Adura> If that doesn't work, think you get the idea anyway.
[07:19:41] <stanrifkin> Adura: thank you. that solved it...
[07:19:58] <Adura> Good, good.
[07:26:56] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[07:31:44] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 268 seconds)
[07:32:31] <stanrifkin> Adura: can you explain the evaluation here? i can do $a = (stat '/etc/hosts')[7]; say $a but not directly using say.
[07:42:20] <stanrifkin> Adura: i think i understand. say expects a list argument.
[07:43:53] <Adura> Avoid using $a and $b, heh
[07:44:12] <Adura> They're related to sort
[07:44:17] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 240 seconds)
[07:44:30] *** Joins: krismatrix (~krismatri@38.80.149.51)
[07:44:31] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[07:45:52] <stanrifkin> yes. i know :)
[07:48:36] <Adura> They're related to sort
[07:48:45] <Adura> Oops'd
[07:48:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 240 seconds)
[07:49:37] <krismatrix> So...I was looking into Net::Stripe, and realized that while it has the functions/methods to do things manually, I would prefer to design my site, to simple redirect to stripe and let them collect the payment, and redirect back to me. This way, my server doesn't have to keep any private data. But Net::Stripe doesn't have the methods to do this.
[07:50:13] <krismatrix> The APi docs show curl commands to do this, which I want to emulate.  what module do I use to emulate curl within mojo?
[07:51:29] <zgu> Mojo::UserAgent?
[07:53:02] <krismatrix> umm..ok. I'll take a look.
[07:53:36] <zgu> assuming you just need an HTTP client
[07:53:46] <krismatrix> https
[07:55:31] *** Quits: Pali (~pali@user/pali) (Ping timeout: 256 seconds)
[07:59:55] *** Joins: morte_` (~user@190.104.116.153)
[08:00:37] *** Quits: Martchus (~martchus@2a01:c22:6f7b:7c00:d250:99ff:fe49:3cce) (Ping timeout: 240 seconds)
[08:01:25] *** Joins: Martchus (~martchus@2a01:c23:c145:c100:d250:99ff:fe49:3cce)
[08:02:17] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[08:03:44] *** Quits: morte_ (~user@190.148.157.89) (Ping timeout: 252 seconds)
[08:05:50] *** Quits: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com) (Quit: leaving)
[08:06:53] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 268 seconds)
[08:08:29] <krismatrix> with Mojo::UserAgent. I think I want to do the transaction tx. I assume the -d [key]=[value] of curl will be within the {} json style block in mojo::UserAgent.
[08:08:50] <krismatrix> But what is the equivalent of the -u flag in curl to UserAgent?
[08:11:17] <zgu> might have to put a user@ in the URL
[08:12:15] <krismatrix> umm.
[08:14:34] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[08:14:34] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[08:14:34] *** finn_elija is now known as FinnElija
[08:17:00] <zgu> oh there's ->userinfo in Mojo::URL
[08:20:05] <krismatrix> yeah..i am trying to understand that
[08:20:39] <zgu> the documentation is surprisingly vague about what Mojo::URL actually does though
[08:20:42] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[08:23:18] <krismatrix> I think you are on the right track about using userinfo.
[08:23:30] <krismatrix> but it looks like I still need to do something else.
[08:25:26] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 260 seconds)
[08:26:22] *** Joins: stanrifkin_ (~stanrifki@p200300dbcf197100dfba0ea6c6dbcbaf.dip0.t-ipconnect.de)
[08:29:41] *** Quits: stanrifkin (~stanrifki@p200300dbcf1b6600d1e4c1069abd856d.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[08:34:37] *** Quits: rgrinberg (~textual@2806:101e:1:83af:d58f:1e2d:50a:b565) (Ping timeout: 240 seconds)
[08:36:16] <krismatrix> hmm...it looks like the way I am trying to use useragent to send data is wrong.
[08:36:54] *** Joins: jetchisel (jetchisel@user/jetchisel)
[08:45:10] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[08:45:10] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[08:45:10] *** finn_elija is now known as FinnElija
[08:46:10] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[08:51:11] *** Joins: rgrinberg (~textual@200.68.178.24)
[08:55:25] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[08:56:09] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 256 seconds)
[09:01:07] *** Quits: stanrifkin_ (~stanrifki@p200300dbcf197100dfba0ea6c6dbcbaf.dip0.t-ipconnect.de) (Quit: Leaving)
[09:06:04] *** Quits: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com) (Ping timeout: 268 seconds)
[09:14:52] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[09:14:52] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[09:14:52] *** finn_elija is now known as FinnElija
[09:16:27] * GumbyPAN CPAN Upload: SPVM-0.9101 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-0.9101
[09:18:05] <buu> SPVM is Static Perl Virtual Machine. SPVM is a programming language which has Perlish syntax. SPVM provides fast Calculation & easy C/C++ Binding.
[09:18:08] <buu> woo
[09:19:25] *** Joins: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com)
[09:19:37] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:20:35] *** Quits: rgrinberg (~textual@200.68.178.24) (Read error: Connection reset by peer)
[09:25:03] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:27:15] <dimbag> interested
[09:31:25] <xenu> it's a not very useful toy
[09:32:10] <xenu> also its author is umm... special
[09:36:29] * GumbyPAN CPAN Upload: SPVM-0.9102 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-0.9102
[09:45:37] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[10:02:58] *** Quits: proller (~p@62.76.32.253) (Ping timeout: 260 seconds)
[10:06:32] * GumbyPAN CPAN Upload: MarpaX-ESLIF-6.0.8-TRIAL by JDDPAUSE https://metacpan.org/release/JDDPAUSE/MarpaX-ESLIF-6.0.8-TRIAL
[10:13:15] *** Quits: bmeneg (~bmeneg@2804:828:f233:9cc5:490c:1eed:bae1:d0f1) (Remote host closed the connection)
[10:13:19] *** Joins: bmeneg_ (~bmeneg@2804:828:f233:9cc5:490c:1eed:bae1:d0f1)
[10:25:37] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Read error: Connection reset by peer)
[10:29:02] *** Quits: randir (~randir@95-26-4-13.broadband.corbina.ru) (Remote host closed the connection)
[10:34:02] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[10:34:39] <manjaroi3> while my $line (<$fh>), this declare does not work now?
[10:40:14] <xenu> this syntax never was valid
[10:40:43] <xenu> while (my $line = <$fh>)  or for my $line (<$fh>) { }
[10:42:04] <xenu> although the latter has a caveat: it reads the whole file into the memory, so it's not suitable for very large files
[10:42:51] *** Joins: randir (~randir@93.159.239.42)
[10:44:35] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[10:44:36] <manjaroi3> oh.... thanks :>
[10:48:53] <Adura> There's always cperl, unless that's also bad.
[10:51:37] * GumbyPAN CPAN Upload: HarfBuzz-Shaper-0.025 by JV https://metacpan.org/release/JV/HarfBuzz-Shaper-0.025
[10:55:42] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[10:56:43] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[10:57:07] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Remote host closed the connection)
[10:57:28] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[11:01:38] * GumbyPAN CPAN Upload: DBD-Oracle-1.81 by DJZORT https://metacpan.org/release/DJZORT/DBD-Oracle-1.81
[11:02:03] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[11:09:50] <Grinnz> Adura: not so much bad as "its entire development and ecosystem consists of one person"
[11:10:16] <Grinnz> "because that person refuses to work with anyone else who develops perl"
[11:19:19] <xenu> also its development isn't very active these days, it's two major releases behind the standard perl
[11:19:23] <xenu> (5.30)
[11:28:51] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[11:31:41] * GumbyPAN CPAN Upload: Catalyst-Plugin-CachedUriForAction-1.000 by ARISTOTLE https://metacpan.org/release/ARISTOTLE/Catalyst-Plugin-CachedUriForAction-1.000
[11:38:33] *** Joins: rgrinberg (~textual@2806:101e:1:83af:d9bb:a7ba:7414:84f2)
[11:54:11] *** Joins: toastloop (toastloop@user/toastloop)
[11:55:47] *** Quits: HvszrStykp (~X@81.171.62.82) (Ping timeout: 256 seconds)
[12:09:25] *** Joins: martinus__ (~martin@2.56.202.77.rev.sfr.net)
[12:12:55] *** Quits: toastloop (toastloop@user/toastloop) (Ping timeout: 268 seconds)
[12:13:30] *** Quits: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw) (Quit: Ping timeout (120 seconds))
[12:13:57] *** Joins: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw)
[12:14:49] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[12:23:37] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Ping timeout: 240 seconds)
[12:27:38] *** Quits: morte_` (~user@190.104.116.153) (Read error: Connection reset by peer)
[12:28:01] *** Joins: morte_` (~user@190.104.116.153)
[12:30:20] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[12:34:57] *** Joins: KnoP (~KnoP@p4ff56d9d.dip0.t-ipconnect.de)
[12:41:40] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[12:41:55] *** Quits: rgrinberg (~textual@2806:101e:1:83af:d9bb:a7ba:7414:84f2) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:43:59] *** Joins: tobybl (~tobybl@213.31.132.151)
[12:46:48] * GumbyPAN CPAN Upload: HTTP-Request-FromCurl-0.37 by CORION https://metacpan.org/release/CORION/HTTP-Request-FromCurl-0.37
[12:51:47] *** Quits: morte_` (~user@190.104.116.153) (Read error: Connection reset by peer)
[12:52:06] *** Joins: morte_` (~user@190.104.116.153)
[13:25:17] *** Quits: morte_` (~user@190.104.116.153) (Read error: Connection reset by peer)
[13:25:45] *** Joins: morte_` (~user@190.104.116.153)
[13:43:17] *** Quits: morte_` (~user@190.104.116.153) (Read error: Connection reset by peer)
[13:43:44] *** Joins: morte_` (~user@190.104.116.153)
[13:47:18] *** Joins: Darkcoal (~user@143.92.183.183)
[13:49:57] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Read error: Connection reset by peer)
[13:50:46] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[13:58:23] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 268 seconds)
[13:58:59] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[14:00:20] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[14:11:27] *** Joins: irfan (~irfan@user/irfan)
[14:17:25] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[14:17:25] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[14:17:25] *** finn_elija is now known as FinnElija
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:59] *** Joins: csrf (~csrf@user/csrf)
[14:40:17] *** Quits: morte_` (~user@190.104.116.153) (Read error: Connection reset by peer)
[14:40:41] *** Joins: morte_` (~user@190.104.116.153)
[14:52:46] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[14:53:16] *** Joins: furrymcgee (~devuan@cgn-89-1-208-9.nc.de)
[15:01:29] *** Joins: sbrothy (~sbrothy@23.102.41.137)
[15:03:57] *** Joins: humky (~humky@user/humky)
[15:06:41] *** Joins: tobybl_ (~tobybl@213.31.132.151)
[15:07:09] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Quit: Leaving)
[15:08:57] *** Quits: tobybl (~tobybl@213.31.132.151) (Ping timeout: 240 seconds)
[15:09:52] *** Joins: henry404086 (~henry4040@175.181.186.198)
[15:10:18] *** Quits: tobybl_ (~tobybl@213.31.132.151) (Remote host closed the connection)
[15:11:51] *** Quits: henry40408 (~henry4040@123-204-134-230.adsl.dynamic.seed.net.tw) (Ping timeout: 256 seconds)
[15:11:51] *** henry404086 is now known as henry40408
[15:18:59] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[15:23:45] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 256 seconds)
[15:29:17] *** Quits: morte_` (~user@190.104.116.153) (Read error: Connection reset by peer)
[15:30:38] *** Joins: morte_` (~user@190.104.116.153)
[15:31:43] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[15:33:04] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:e182:9e47:91db:c531)
[15:37:02] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[15:37:31] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[15:38:41] *** Joins: HvszrStykp (~X@81.171.62.82)
[15:52:52] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f444:a000:2421:137f:dee3:7f7d)
[15:53:15] *** Joins: tobybl (~tobybl@213.31.132.151)
[15:53:18] *** Joins: Pixi_ (~Pixi@user/pixi)
[15:55:01] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:e182:9e47:91db:c531) (Ping timeout: 240 seconds)
[15:55:25] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 240 seconds)
[15:57:45] *** Quits: Pixi_ (~Pixi@user/pixi) (Ping timeout: 256 seconds)
[16:00:00] *** Joins: Pali (~pali@user/pali)
[16:11:28] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[16:31:03] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[16:46:11] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f444:a000:2421:137f:dee3:7f7d) (Ping timeout: 245 seconds)
[16:47:01] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:48:11] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:2421:137f:dee3:7f7d)
[16:57:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 240 seconds)
[16:58:12] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[17:18:47] *** Joins: krismatrix (~krismatri@38.80.149.51)
[17:24:45] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 250 seconds)
[17:30:56] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[17:36:10] *** Quits: morte_` (~user@190.104.116.153) (Quit: ERC (IRC client for Emacs 27.2))
[17:36:13] *** Joins: xenial-user5 (~androirc@20014C4C17E1D2005D3863A85B8423A7.catv.pool.telekom.hu)
[17:36:17] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[17:36:55] *** Joins: morte_ (~user@190.104.116.153)
[17:48:49] *** Quits: HvszrStykp (~X@81.171.62.82) (Ping timeout: 256 seconds)
[17:49:50] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[17:52:26] <aquanight> sweval: my @z; my $x = 4; push @z, $x; { local $x = 99; push @z, $x; } push @z, $x; \@z;
[17:52:27] <perlbot> aquanight: ERROR: Can't localize lexical variable $x at (IRC) line 1. 
[17:52:54] <aquanight> sweval: my @z; my @x = (4); push @z, @x; { local $x[0] = 99; push @z, @x; } push @z, @x; \@z;
[17:52:56] <perlbot> aquanight: [4,99,4]
[17:53:02] <aquanight> ... well that's interesting
[17:53:23] <aquanight> why can you not 'local' lexicals but you can local single elements of a lexical array?
[17:54:12] <Botje> Larry said so.
[17:56:37] *** Quits: morte_ (~user@190.104.116.153) (Read error: Connection reset by peer)
[17:56:58] *** Joins: morte_ (~user@190.104.116.153)
[18:01:35] *** Quits: morte_ (~user@190.104.116.153) (Read error: Connection reset by peer)
[18:01:56] *** Joins: morte_ (~user@190.104.116.153)
[18:03:14] *** skyl4rk is now known as tlvb
[18:03:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[18:04:25] *** tlvb is now known as skyl4rk
[18:06:01] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[18:07:54] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Client Quit)
[18:08:51] <rindolf> Botje: Larry Wall has been changing the world by modifying its very source code. ;)
[18:10:58] <lopid> "Mouse also works without XS, although it has an XS backend to make it much faster." how can i tell if xs is in use?
[18:11:30] <rindolf> perlbot: mouse
[18:11:30] <perlbot> rindolf: Only for clicking. https://shadow.cat/blog/matt-s-trout/moo-versus-any-moose/
[18:11:30] *** Joins: HvszrStykp (~X@81.171.62.82)
[18:11:57] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[18:13:31] *** Joins: ztx (~ztx@user/ztx)
[18:13:53] <rindolf> lopid: ^^^
[18:15:01] <rindolf> lopid: "Moo" worked well for me so far
[18:15:34] <lopid> not sure how this answers the question
[18:15:53] <rindolf> perlbot: %INC
[18:15:54] <perlbot> rindolf: No factoid found. Did you mean one of these: [@inc] [ingy] [iank] [.in] [inf] [.int] [inop] [tinc] [im] [ime]
[18:16:07] <rindolf> perlbot: -v %INC
[18:16:07] <perlbot> rindolf: https://perldoc.perl.org/variables/%25INC
[18:19:26] <rindolf> lopid: maybe https://metacpan.org/pod/perlvar#%INC will work, but why does it matter?
[18:19:27] <Paperbot> Link title(s): [ perlvar - Perl predefined variables - metacpan.org ]
[18:19:36] <rindolf> perlbot: xy
[18:19:37] <perlbot> rindolf: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that, either. So, you ask about Y in order to solve X, which doesn't make sense. Just ask about X!
[18:20:47] * lopid adds another filter
[18:21:32] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Ping timeout: 240 seconds)
[18:21:32] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[18:22:19] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 268 seconds)
[18:22:30] <haarg> Mouse::Util::MOUSE_XS
[18:22:33] <Botje> lopid: Mouse::Util::MOUSE_XS
[18:22:57] <Botje> or you could check if $INC{"Mouse/PurePerl.pm"} exists
[18:23:11] <Botje> (I _just_ found that in the source :()
[18:23:39] <lopid> thanks
[18:25:55] *** Quits: morte_ (~user@190.104.116.153) (Remote host closed the connection)
[18:25:59] *** Joins: zgu|skaro (~zgu@2603-7080-b704-0800-832f-b7d5-7b90-f547.res6.spectrum.com)
[18:26:38] *** Joins: morte_ (~user@190.104.116.153)
[18:27:26] <LeoNerd> Hello world - I am back.
[18:27:43] <LeoNerd> My internet router machine died this morning so I've spent all day so far trying to bodge up a fix with gaffertape and string
[18:28:10] <LeoNerd> Turns out you can't buy replacement computer hardware on Chirstmas Eve
[18:30:37] *** Quits: morte_ (~user@190.104.116.153) (Read error: Connection reset by peer)
[18:31:02] *** Joins: morte_ (~user@190.104.116.153)
[18:33:41] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[18:34:01] *** Quits: xenial-user5 (~androirc@20014C4C17E1D2005D3863A85B8423A7.catv.pool.telekom.hu) (Ping timeout: 268 seconds)
[18:36:36] <aquanight> "Processing line eql x 0 from 5438340 states" ugh simulating quantum ALUs is always fun.
[18:37:11] <aquanight>   PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
[18:37:11] <aquanight>  1315 aquanig+  20   0 3280300   3.1g   5212 R 100.0  12.4  10:57.10 perl      
[18:37:40] <aquanight> and this is just part 1. I have the bad feeling this is going to blow up for part 2. Again. I never fucking learn.
[18:37:43] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 268 seconds)
[18:38:02] <Altreus> LeoNerd: welcome back
[18:38:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 240 seconds)
[18:40:17] *** Quits: morte_ (~user@190.104.116.153) (Read error: Connection reset by peer)
[18:40:35] *** Joins: morte_ (~user@190.104.116.153)
[18:40:41] *** Joins: Woodzy (~quassel@198.204.246.228)
[18:44:03] *** Joins: randir (~randir@95-26-4-13.broadband.corbina.ru)
[18:44:57] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Ping timeout: 240 seconds)
[18:46:06] <aquanight> ... I think I'm an idiot.
[18:47:28] <Altreus> your words not ours!
[18:48:53] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[18:49:46] <aquanight> what I really should do is group together all the non-inp instructions and run them all at once through a single input state
[18:49:52] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[18:54:12] <aquanight> this is one of those times I wish I could just splice code
[18:54:23] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 252 seconds)
[18:54:26] <aquanight> use sub definitions as a template to build a string eval
[18:54:52] <aquanight> I suppose I could do it via Deparse
[18:58:11] <Altreus> sounds like you want haskell
[19:02:36] <rindolf> Altreus: s
[19:02:48] <rindolf> Altreus: s/ask// ;)
[19:04:36] *** Joins: monkey_ (~user@190.104.116.153)
[19:06:05] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[19:07:02] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[19:09:54] <rindolf> LeoNerd: hi
[19:09:57] <aquanight> sweval: use integer; my $x = 9999; my $y = 99999999; [ $x * $y ]
[19:09:59] <perlbot> aquanight: ['999899990001'] 🎄
[19:10:04] <aquanight> sweval: use integer; my $x = 999999999; my $y = 99999999; [ $x * $y ]
[19:10:05] <perlbot> aquanight: ['99999998900000001']
[19:10:12] <aquanight> sweval: use integer; my $x = 999999999999; my $y = 99999999999; [ $x * $y ]
[19:10:14] <perlbot> aquanight: ['200375320520689665']
[19:10:46] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 245 seconds)
[19:10:57] <aquanight> sweval: use integer; my $x = 2**63; [ $x * 1 ]
[19:10:59] <perlbot> aquanight: ['-9223372036854775808'] 🎄
[19:11:02] <aquanight> sweval: use integer; my $x = 2**63; [ $x + 1 ]
[19:11:04] <perlbot> aquanight: ['-9223372036854775807']
[19:11:27] <aquanight> this is only ever adding, multiplying, and dividing
[19:11:37] <aquanight> oh negative constants though
[19:11:55] <aquanight> so where and why the hell is it overflowing
[19:11:57] <aquanight> it wasn't before
[19:13:38] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[19:16:32] <aquanight> always the dumbest thing
[19:22:46] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[19:26:30] * GumbyPAN CPAN Upload: Test-DBIC-SQLite-0.99_02 by ABELTJE https://metacpan.org/release/ABELTJE/Test-DBIC-SQLite-0.99_02
[19:27:23] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 250 seconds)
[19:30:38] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b)
[19:32:24] *** Joins: Pixi (~Pixi@user/pixi)
[19:33:01] *** Quits: irfan (~irfan@user/irfan) (Quit: leaving)
[19:34:47] *** Quits: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net) (Ping timeout: 256 seconds)
[19:36:29] *** Quits: Darkcoal (~user@143.92.183.183) (Ping timeout: 256 seconds)
[19:37:59] *** Joins: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net)
[19:38:35] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[19:41:22] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:41:31] * GumbyPAN CPAN Upload: Antsy-0.902 by BDFOY https://metacpan.org/release/BDFOY/Antsy-0.902
[19:49:37] *** Quits: morte_ (~user@190.104.116.153) (Read error: Connection reset by peer)
[19:50:20] *** Joins: morte_ (~user@190.104.116.153)
[19:51:32] * GumbyPAN CPAN Upload: Antsy-0.903 by BDFOY https://metacpan.org/release/BDFOY/Antsy-0.903
[19:52:55] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[19:54:35] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:00:02] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[20:01:17] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:01:20] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[20:02:57] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:08:26] <pragma-> I have stumbled across http://www.ebb.org/bkuhn/articles/thesis.pdf somehow. It's from 2001 and is about considerations on porting Perl to the Java virtual machine. Apparently Larry Wall was on the committee that sponsored this thesis. There's some interesting paragraphs.
[20:16:35] * GumbyPAN CPAN Upload: Catalyst-TraitFor-Request-StructuredParameters-0.007 by JJNAPIORK https://metacpan.org/release/JJNAPIORK/Catalyst-TraitFor-Request-StructuredParameters-0.007
[20:20:18] *** Quits: morte_ (~user@190.104.116.153) (Read error: Connection reset by peer)
[20:20:33] *** Joins: morte_ (~user@190.104.116.153)
[20:20:40] <xenu> even if we ignore the fact that too many things rely on XS (perl's C API)
[20:21:12] <xenu> jvm is a terrible fit for perl because of garbage collection
[20:21:31] <xenu> perl is reference counted, it isn't merely an implementation detail
[20:21:48] <xenu> many things rely on deterministic destruction
[20:28:13] *** Joins: morte_` (~user@190.56.51.233)
[20:29:01] *** Quits: morte_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[20:29:17] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[20:29:20] *** morte_` is now known as morte_
[20:30:11] *** Quits: pizdets_ (~pizdets@183.182.111.24) (Quit: pizdets)
[20:30:51] *** Joins: pizdets (~pizdets@183.182.111.24)
[20:32:56] <LeoNerd> Yah that's just entirely pointless. Don't do it
[20:33:21] <LeoNerd> In unrelated news: I think one of my main server disks died in last night's powercut :(
[20:33:27] <LeoNerd> Which is Annoying to say the least
[20:37:41] *** Quits: martinus__ (~martin@2.56.202.77.rev.sfr.net) (Ping timeout: 256 seconds)
[20:41:08] *** Joins: tobybl (~tobybl@213.31.132.151)
[20:44:37] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[20:45:22] *** Quits: HvszrStykp (~X@81.171.62.82) (Ping timeout: 268 seconds)
[20:54:09] *** Joins: monkey_ (~user@190.104.116.153)
[20:57:17] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[20:58:20] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:01:08] *** Quits: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[21:02:57] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[21:07:31] <rindolf> LeoNerd: that sucks! :(
[21:10:19] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca)
[21:14:57] *** Quits: zgu|skaro (~zgu@2603-7080-b704-0800-832f-b7d5-7b90-f547.res6.spectrum.com) (Ping timeout: 240 seconds)
[21:23:20] *** Joins: HvszrStykp (~X@81.171.62.82)
[21:27:01] <Yaakov> Since I have been installing (way too much) email server related software, I have come to the conclusion that people who send email telling other people perl is dead are about as ironic as you can get.
[21:27:17] <daemon> Yaakov, you got a fax number? :)
[21:27:31] <Yaakov> So many of the dependencies are perl thingies.
[21:27:35] <Yaakov> I do, yes.
[21:27:50] <daemon> I was joking, but honestly you still have a fax?
[21:28:12] <daemon> I thought the only places that still used them was law enforcement and medical services
[21:28:29] <Yaakov> I have a fax number, and can send and receive fax but I don't have a fax machine because... I don't need one.'
[21:28:41] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[21:28:48] <daemon> ah right, weirdly I have a printer that can do fax, but an optical internet connection so nothing to connect it to
[21:29:40] <Yaakov> VoIP.ms is where all my telephony action takes place. I love being my own company. I was a minor phone phreak in the POTS heyday.
[21:30:25] <Yaakov> I *hate* seeing the state of the Bell System copper plant today. It makes me very sad. They are purposely abandoning it and I think it's a big mistake.
[21:30:28] <daemon> ah I never evolved passed 13mm hex wrenches and bt phone cabinets and backcalling premium numbers from the line mans socket (back in the day - I was 13)
[21:31:23] <Yaakov> I mostly did what could be done from a dial or a touchtone pad but I was all over the network. Good times...
[21:31:38] <Yaakov> Oh, I did some hardware too. But that was risky.
[21:32:20] <daemon> I lived quite rural >.>
[21:32:31] <Yaakov> Anyway, yes, I can send and receive faxes and I've done it a handful of time over the last few years.
[21:32:48] <daemon> the last fax I ever sent I think was ... yikes 
[21:32:53] <daemon> 2008 I think
[21:33:08] <daemon> and the only reason for that is that the company I was dealing with had b0rked their email service
[21:33:15] <daemon> quite handy really
[21:33:25] <daemon> no other customers could really get in contact
[21:33:37] <Yaakov> When I registered my first domain it was 120 bucks a year for a .com and the only way to communicate with Network Solutions, the exclusive registrar, was fax.
[21:34:01] <daemon> I remember those days :)
[21:34:19] <Yaakov> 1995, I think.
[21:34:21] <daemon> shame did not have a little more foresight would have bought a few choice domains and held on to them for the value
[21:34:31] <daemon> then again the same could be said for ipv4 blocks
[21:34:36] <LeoNerd> My main server suffered a powersurge last night and fried its disks. I'm working today on recovering most of the services elsewhere, but beware I currently can't receive any email. For urgent matters, it's best to contact me by other means - e.g. here on IRC
[21:34:37] <Yaakov> I sold mine for a few grand.
[21:34:54] <Yaakov> LeoNerd: That's horrifying.
[21:34:57] <daemon> LeoNerd, frying disks is rare, psu died?
[21:35:13] <daemon> especially now days
[21:35:28] <LeoNerd> Yaakov: Eh... as compared some folks suffering a terrible infection that's spreading around at the moment, it's not that bad :P
[21:35:53] <Yaakov> For you, that's on top of the pandemic backdrop.
[21:35:59] <LeoNerd> daemon: We had a power outage of over an hour long. When it came back, one machine's disks aren't working, and another machine just doens't power on at all
[21:36:00] <daemon> LeoNerd, I have a server in germany with a few T spare if you need a temporary store
[21:36:13] <Yaakov> Losing server disks is part of my memories-I-don't-want.
[21:36:39] <daemon> to fry disks in multiple servers, but assumedly not the PSU
[21:36:41] <daemon> how do you even get that
[21:36:49] <daemon> any power surge should have been filtered
[21:36:50] <Yaakov> A big surge.
[21:36:55] <daemon> mobo survived though
[21:37:13] <daemon> oh wait one of them is not powering on at all
[21:37:30] <daemon> I really need to get a UPS even if it operates in bypass mode >.>
[21:37:39] <LeoNerd> Well, these disks have been spinning for maybe 2 years now without a cycle. It's possible that something somewhere has been quite marginal for a long time and this power event just nudged it over the edge.
[21:38:01] <Yaakov> I have several UPSs on desktop computers because I don't want to lose the data or the machine.
[21:38:13] <Yaakov> I have it backed up, but the work to recover.
[21:38:15] <Yaakov> ...
[21:38:38] <daemon> I run one server explicitly (differnet location) for backup purposes, with nextcloud and OneDrive running alongside my desktops as 'primary backups'
[21:39:55] <daemon> got to admit over the last 5 years or so ... I do not think I have actual had any hardware failure at all
[21:40:06] <daemon> had an ssd start throwing warnings, but it did not die
[21:40:13] <daemon> just swapped it
[21:41:05] <Yaakov> For the last couple of days I have been building a replacement for my VPS which does everything "out there" for me and my various family members, and is about 3 years past EOL. I have Apache, Postfix, and Dovecot installed and baseline configured. They work, and they are clean. Now I have to work out the migration plan for the email accounts. I can have SOME outage but not too much.
[21:41:45] <daemon> domain level migration
[21:42:01] <daemon> just set it up on the new server, add it to the MTA list, spf dkim etc
[21:42:23] <daemon> then one day joint cname it over
[21:42:56] <daemon> though moving the mail folders ... will probably need a bit of an atomic action
[21:43:00] <Yaakov> Oh that part's not too hard, the mailbox migration is not obvious to me. I am going to try it with a small account that isn't important first.
[21:43:37] <Yaakov> Since everything is in /var/mail/ I might be able to use tar and just dump it all in.
[21:43:55] <daemon> if you are using zfs on both machines send/recv should do a good job
[21:44:07] <daemon> elsewhere you could just while(sleep 1) rsync
[21:44:35] <daemon> check your domain ttl's then deny access to the older server, kill the rsync loop
[21:44:40] <daemon> and it should all be correct ... I think
[21:44:46] <Yaakov> I was thinking about rsync, then a planned N minute shutdown.
[21:45:17] <daemon> oooh how about this, mount /var/mail on the new server with sshfs, move the domain so people can connect to either
[21:45:23] <daemon> after all access to the old server is dead
[21:45:30] <daemon> sync /var/mail (sshfs) to the real /var/mail
[21:45:46] <daemon> however you do it, symlink mail1 mail2 etc./
[21:45:57] <Yaakov> That sounds... brittle.
[21:46:01] <daemon> how so
[21:46:22] <daemon> that should really be seemless transition
[21:46:43] <aquanight> sweval: my %x = (what => 42); { my %newx = (hello => 97); \%x = \%newx; } \%x;
[21:46:45] <perlbot> aquanight: {hello => 97}
[21:46:51] <Yaakov> My previous experience with sshfs was less than optimal.
[21:46:56] <daemon> ah :)
[21:47:01] <daemon> does not have to be sshfs
[21:47:03] <daemon> nfs over vpn
[21:47:08] <daemon> possible an option
[21:47:35] <Yaakov> The two servers are in the same datacenter and have private addresses in the same subnet.
[21:47:56] <Yaakov> theoretically, NFS might do it.
[21:48:18] <daemon> it is kind of what it is meant for (ok not mail server moves)
[21:48:34] <daemon> but making <directory> be somewhere else easily
[21:49:16] <Yaakov> But I am thinking that rsync has its attractive aspects. If I run it frequently, by the time for the cutover syncing will take no time at all. I can set the MX records to very low TTLs and just change them.
[21:49:36] <daemon> remember you have rogue elements with nameservers
[21:49:44] <daemon> isp's sometimes do 'cache however the fuck we like'
[21:49:45] <rindolf> aquanight: hmmm...
[21:49:49] <aquanight> sweval: my %x = (what => 42); { my %newx = (hello => 97, something => 44); \%x = \%newx; } \%x;
[21:49:50] <perlbot> aquanight: {hello => 97,something => 44}
[21:50:00] <aquanight> ok yeah this is what I expect to happen
[21:50:00] <Yaakov> Also, I intend to have people reconfigure their email clients so it's not going to be seamless anyway.
[21:50:07] <daemon> ah
[21:50:12] <daemon> yeah then rsync will be fine
[21:50:15] <aquanight> so why the fuck is it that I change %state = %newstate; to \%state = \%newstate;
[21:50:18] <aquanight> everything fucking breaks
[21:50:52] <Yaakov> daemon: Yes, but I can set the TTL to 1 minute and if it takes a bit for it to work again, everyone else has something like an iCloud or Gmail address they can fall back on.
[21:51:25] <daemon> Yaakov, yeah my point was do not trust that your TTL will be noticed or even adhered to by some isps
[21:51:43] <daemon> some of your clients will not know about it changing for a long long time (given enough clients)
[21:52:02] <daemon> but if you are requiring them to update there clients ...
[21:52:04] <aquanight> it's as if the assignment just isn't happening at all
[21:52:10] <Yaakov> I can actually share IP addresses between the machines so if they don't do the right th8ig it will still work.
[21:52:13] <daemon> its really a moot point, as I assume it will be a different hostname anyway
[21:52:16] <aquanight> what the actual shit
[21:53:00] <aquanight> it *has* to be happening. It cannot possibly be not happening.
[21:53:09] <aquanight> But for some strange damn reason the hash comes out completely unchanged.
[21:54:09] <aquanight> what's the ods I change this to use anonymous hashes and refswap *that* way instead of trying to be clever with refaliasing and it'll work perfectly cromulent
[21:54:20] *** Quits: bmeneg_ (~bmeneg@2804:828:f233:9cc5:490c:1eed:bae1:d0f1) (Remote host closed the connection)
[21:58:28] <aquanight> rindolf: maybe you have an idea what's going on here?
[21:58:50] <aquanight> what I'm trying to avoid is doing %state = %newstate; with some 5 million keys in there
[21:59:11] <aquanight> because that's adding several seconds to this whole thing
[21:59:53] <aquanight> and the natural idea is to just do a ref-swap
[21:59:55] <rindolf> aquanight: maybe \%foo = ... changes the reference too
[22:00:22] <aquanight> what reference does it change though?
[22:00:38] <Yaakov> Do you have warnings on?
[22:00:38] *** Joins: EGD (~egd@user/egd)
[22:00:40] <aquanight> when I tried it on perlbot it properly changed %x to the new hash
[22:00:47] <aquanight> Yaakov: FATAL => 'all'
[22:01:31] <rindolf> aquanight: it changes \%foo
[22:01:39] <aquanight> yes?
[22:01:45] <aquanight> hmm
[22:01:57] <aquanight> are you saying that '%foo' itself will not change?
[22:02:10] <aquanight> sweval: my %x = (what => 42); { my %newx = (hello => 97, something => 44); \%x = \%newx; } { %x };
[22:02:12] <perlbot> aquanight: 2
[22:02:20] <aquanight> sweval: my %x = (what => 42); { my %newx = (hello => 97, something => 44); \%x = \%newx; }; +{ %x };
[22:02:21] <perlbot> aquanight: {hello => 97,something => 44}
[22:02:55] <aquanight> ...
[22:02:59] <aquanight> ducking hell
[22:03:10] <aquanight> FUCKING NAMED SUBS GODDAMMIT
[22:03:29] <aquanight> there it was
[22:04:48] <aquanight> so the problem was the variable was a normal toplevel 'my' variable
[22:04:59] <aquanight> and there were two different places I'm doing this refswap trick
[22:05:06] <aquanight> one of which was a *named sub*
[22:05:12] <aquanight> s/my/our/
[22:05:16] <aquanight> works like a charm
[22:05:30] <aquanight> 'state' probably would've worked too
[22:06:36] <aquanight> I'm not even sure if it would be possible for perl to detect this and trigger a closure warning
[22:09:12] <aquanight> hmmm
[22:09:20] *** Joins: zgu|skaro (~zgu@2603-7080-a040-3100-0000-0000-0000-000b.res6.spectrum.com)
[22:09:42] <aquanight> perhaps refaliasing should trigger a warning if the destroyed reference has a >1 SvREFCNT
[22:19:48] *** Joins: bmeneg_ (~bmeneg@131.100.62.34)
[22:20:28] *** Joins: dsrt^ (~dsrt@207.5.54.6)
[22:22:48] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[22:32:25] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[22:32:41] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[22:43:29] <nuclightq> perl -E 'package My::org.telegram::Some; say 1'
[22:43:29] <nuclightq> Invalid version format (0 before decimal required) at -e line 1, near "package My::org"
[22:43:43] <nuclightq> why <i>this</i> error?
[22:44:01] <nuclightq> and package My::org-telegram::Some; -> Invalid version format (negative version number)
[22:44:34] <nuclightq> and what limits are for module name/parts, e.g. length?
[22:46:53] <daemon> yo LeoNerd, you are likely busy fighting server re-birth but a curious aside if you have a moment, is there anyway you could use effective 'sessions' like as is present in POE with async, say I was using three async modules Net::Async::IRC Net::Async::HTTP and err IO::Async::Timer::Periodic, could I somehow make it that each was absolutely isolated from one another and have delays and posted events within their own scope
[22:59:49] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 268 seconds)
[23:00:18] <LeoNerd> ??
[23:00:26] <LeoNerd> What do you mean "events posted"? That makes no sense
[23:00:48] <daemon> trying best to describe what I am looking for and how to write it
[23:00:52] <LeoNerd> You're doing that thing where you take the complicated and weird invented structure that is very specific to POE, and believing it is a more general concept that applies elsewhere
[23:01:25] <daemon> is it realy that weird
[23:01:54] <daemon> it seems so neatly packaged
[23:15:38] *** Quits: morte_ (~user@190.56.51.233) (Read error: Connection reset by peer)
[23:15:55] *** Joins: proller (~p@2a02:6b8:b081:8818::1:d)
[23:16:00] *** Joins: morte_ (~user@190.56.51.233)
[23:21:54] *** Joins: G_SabinoMullane (~G_SabinoM@107-145-092-033.res.spectrum.com)
[23:27:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:c901:71e0:4716:476b) (Ping timeout: 240 seconds)
[23:29:32] *** Joins: pabogr (uid27497@id-27497.tinside.irccloud.com)
[23:31:54] * GumbyPAN CPAN Upload: Test-DBIC-SQLite-0.99_03 by ABELTJE https://metacpan.org/release/ABELTJE/Test-DBIC-SQLite-0.99_03
[23:34:22] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[23:35:50] *** Joins: diskin (~diskin@188.114.63.151)
[23:36:03] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:5c9e:b916:30fd:4234)
[23:38:37] *** Quits: proller (~p@2a02:6b8:b081:8818::1:d) (Ping timeout: 240 seconds)
[23:42:27] *** Quits: morte_ (~user@190.56.51.233) (Read error: Connection reset by peer)
[23:42:51] *** Joins: morte_ (~user@190.56.51.233)
[23:45:37] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[23:47:05] <aquanight> LeoNerd: you haven't been kidding about entersub/leavesub overhead
[23:47:25] *** Quits: G_SabinoMullane (~G_SabinoM@107-145-092-033.res.spectrum.com) (Ping timeout: 240 seconds)
[23:47:48] <aquanight> I switched from generating sub calls to just writing the operations into the string directly. On 5.3M records it shaved 5 whole seconds.
[23:47:59] * pragma- nods.
[23:48:30] * pragma- eloquently and in great detail recounts his experience trying to apply the concepts from the "Higher Order Perl" book to real-world programs.
[23:49:00] <aquanight> sadly, there's one level of entersub/leavesub in the procedure I can't so easily filter out
[23:49:32] <aquanight> but I'm not sure if I'll gain enough
[23:50:05] *** Quits: GEttR (~GEttR@user/gettr) (Quit: GEttR)
[23:51:38] <aquanight>   PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
[23:51:38] <aquanight>  1342 aquanig+  20   0   20.3g  20.3g   5076 R 100.0  81.2   5:05.12 perl
[23:51:45] <aquanight> there's still this frickin problem
[23:51:59] <aquanight> but i don't know if or how I can get around it.
[23:52:59] <aquanight> 11 inputs in and 58M unique states. It could be worse.
[23:53:40] <aquanight> sweval: 58130460/(9**11)
[23:53:42] <perlbot> aquanight: 0.00185240590102089
[23:53:48] <aquanight> wow.
[23:54:34] <aquanight> ...well shit.
[23:54:54] <aquanight> okay I managed to save some time not *copying* hashes but apparently I've forgotten about *destroying* hashes.
[23:55:26] <aquanight> I imagine it should not take 26.7 seconds to destroy a single hash.
[23:56:22] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[23:58:33] *** Quits: morte_ (~user@190.56.51.233) (Read error: Connection reset by peer)
[23:58:57] *** Joins: morte_ (~user@190.56.51.233)
