[00:04:20] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[00:08:38] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[00:09:52] *** Joins: sam_1 (~sam_1@87.51.251.118)
[00:13:03] *** Joins: fcjsx (~fcjsx@2800:a4:831:a800:ccdd:5940:bddb:ce90)
[00:13:06] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:e99f:a306:8474:47e0)
[00:13:11] *** Quits: fcjsx (~fcjsx@2800:a4:831:a800:ccdd:5940:bddb:ce90) (Remote host closed the connection)
[00:14:44] *** Quits: llorllale (~llorllale@97.108.193.189) (Quit: WeeChat 3.3)
[00:15:38] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[00:15:57] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[00:17:20] <ljharb> xochilpili: it looks like you're mocking way too many things
[00:17:26] <ljharb> xochilpili: mocking makes tests more brittle.
[00:20:26] <xochilpili> ljharb, thanks for answer
[00:21:01] <xochilpili> i needed to mock those producer() constructors since i have 2 different instances that sends different things :/
[00:21:07] *** Joins: pulse_ (~pulse@user/pulse)
[00:22:21] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[00:23:47] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1171:762:e4bb:3aa0) (Ping timeout: 264 seconds)
[00:24:18] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[00:25:42] *** Joins: bedefaced[m] (~bedefaced@2001:470:69fc:105::1:2899)
[00:25:58] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:27:39] *** Joins: incognito (~relativit@user/incognito)
[00:29:30] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:33:46] <xochilpili> ljharb, is that possible ?
[00:34:14] *** Quits: pulse_ (~pulse@user/pulse) (Quit: pulse_)
[00:34:17] *** Joins: zebrag (~chris@user/zebrag)
[00:38:00] <systemfault> xochilpili: I'm not sure what that code is trying to test, if Kafka works?
[00:39:25] <xochilpili> systemfault, in my implementation i have 2 produers, then one in particular it's sending a protobuf message, while the other one, it's just sending a JSON object, that's what i need to test
[00:39:53] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[00:40:11] <xochilpili> so, i needed to have a mock for each producers, and assert if the message send it's a protobuf and is equal to what im sending, and the same for the other (json)
[00:40:16] *** Joins: darklands (~darklands@69.43.65.116)
[00:41:35] <xochilpili> * that's why i need to test each separately
[00:42:47] *** Quits: darklands (~darklands@69.43.65.116) (Remote host closed the connection)
[00:43:35] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 260 seconds)
[00:45:38] <systemfault> Makes sense, I just don't get the design of the thing...
[00:46:14] <systemfault> Why are the two producer implementations tested at the same time? Why don't they have their own file?
[00:46:55] <systemfault> Can't you use an interface somewhere and inject the implementation instead of mocking?
[00:47:31] <systemfault> Can the parts using protobuf/json be isolated further so you don't need to test the sending?
[00:48:35] <systemfault> Is your implementation of Kafka actually patched with your functions?
[00:54:16] *** Joins: fassl (~fassl@2a02:8388:1987:9380:3c09:fe63:5d7e:3687)
[00:57:16] <xochilpili> systemfault, Why are the two producer implementations tested at the same time? because im sending the same "message" (proto/json) to an specific topic(s) at same time, then i have in that method both calls
[00:57:44] <xochilpili> systemfault, let me paste some snippet of what i have, just to clear some doubts
[00:57:54] *** Parts: bedefaced[m] (~bedefaced@2001:470:69fc:105::1:2899) ()
[01:03:38] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[01:09:32] <xochilpili> systemfault, https://pastebin.com/zcDDVSkC < can you please take a look
[01:10:03] <xochilpili> systemfault, i avoid extra noisy dependencies, just to clarify what/why im trying to do...
[01:10:56] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[01:12:05] *** Quits: jamea (~jamea@189.237.48.29) (Read error: Connection reset by peer)
[01:12:21] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[01:12:29] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Quit: arthur_melo)
[01:12:30] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[01:12:57] *** Joins: jamea (~jamea@189.237.48.29)
[01:13:24] <systemfault> Looking
[01:13:33] <xochilpili> systemfault, thank you
[01:14:33] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[01:17:01] <systemfault> xochilpili: Does IManager have more methods in the real implementation?
[01:17:46] <xochilpili> systemfault, no, just those: connect, disconnect, and sendToTopic
[01:22:03] <systemfault> What I would personally do is to rename IManager (doesn't mean anything really...) to IProducer, then wrap each of the producer in concrete implementations (Kafka could be injected by constructor if you want) that I would test separately... Once it's done
[01:22:37] <ThePendulum> anyone else getting a messed up cursor position at the bottom of the JS part? https://jsfiddle.net/ThePendulum/2yc951xq/
[01:22:45] <systemfault> I'd create another class called something like "CompositeProducer that takes an array of IProducers and do the same job that your Manager class is currently doing
[01:23:35] <xochilpili> systemfault, not sure i follow...
[01:24:35] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a584:300e:8b6:5c5d) (Ping timeout: 256 seconds)
[01:26:17] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:1d19:ac87:3b13:4cf) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:26:34] <systemfault> xochilpili: The way I see it, you're missing a small abstraction.
[01:26:50] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:27:55] <deltab> I would split line 45 across multiple lines, to make it clear that two sends are happening there
[01:28:40] <xochilpili> systemfault, can you please share a pseudo code ? Iknow it's asking too much of your time... But i will appreciated (trying to learn here)
[01:28:51] <systemfault> xochilpili: https://tsplay.dev/NBPgxW
[01:29:16] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a584:300e:8b6:5c5d)
[01:29:20] <systemfault> Oops... I broke my example a bit...
[01:31:44] <systemfault> xochilpili: Of course, in your code, the kafka instance would be injected via DI container
[01:32:21] <xochilpili> systemfault, looking
[01:32:36] <systemfault> And the composite version can probably be assembled using some DI container factory function (I don't know much about your DI container)
[01:32:52] <systemfault> (I just know that they all work similarly)
[01:34:18] *** Quits: spinningCat (~spinningC@about/web/muscles) (Ping timeout: 260 seconds)
[01:34:51] <xochilpili> systemfault, Ah! got it, but what about testing ?
[01:35:53] <xochilpili> systemfault, i wont be testing Composite but instead each of IProducer(s) ?
[01:35:59] <systemfault> Yeah
[01:36:13] <systemfault> And to be honest, I wouldn't personally go crazy if I didn't test those at all...
[01:36:26] <systemfault> They absolutely have no logic.. no ifs... nothing
[01:36:44] <xochilpili> systemfault, gotcha, thanks a lot, i entirely appreciate :D
[01:36:52] <systemfault> But you definitely want to test the class using the IProducer
[01:37:14] <systemfault> And then... if you want to test that class, you can basically create a class inline :P
[01:38:36] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[01:38:59] <xochilpili> got it, the only question i have left, it's related to DI container, is a pain. dunno how to inject both producers in Composite via @inject()
[01:39:31] *** Joins: zebrag (~chris@user/zebrag)
[01:39:42] <xochilpili> and the main question, why is not possible to mock both producers at the same time, like the first example i pasted ?
[01:39:56] <xochilpili> bad practice ? is there another reason ?
[01:40:04] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[01:40:50] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[01:41:16] *** Joins: electrostatic (~electrost@65.113.243.234)
[01:41:35] <xochilpili> systemfault, ^
[01:41:41] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:e99f:a306:8474:47e0) (Quit: you are feeeling very sleeeeeepyy......)
[01:43:03] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:e99f:a306:8474:47e0)
[01:46:14] <systemfault> Like a said, there's probably a way to create the value. What DI container are you using again? inversify?
[01:46:39] <systemfault> Well, it goes back to the good old "a class/function/module/whatever should do a single thing and do it well.
[01:46:46] <systemfault> " saying
[01:47:46] <xochilpili> systemfault, yes, using inversify
[01:47:47] <systemfault> If you ever need to log what is sent.... then you take 2 minutes to write a class LoggingProducer implements IProducer {} and pass it as another param to the CompositeProducer constructor
[01:50:54] <systemfault> xochilpili: https://github.com/inversify/InversifyJS/blob/master/wiki/multi_injection.md
[01:52:26] <xochilpili> systemfault, that's exactly what im start doing ^
[01:52:29] <systemfault> xochilpili: TL;DR (Don't use the spread operator in the constructor, use an array)
[01:52:43] *** Joins: zebrag (~chris@user/zebrag)
[01:52:54] *** Quits: zsoc (~zsoc@cpe-24-168-59-34.hvc.res.rr.com) (Ping timeout: 260 seconds)
[01:52:58] <xochilpili> systemfault, thanks a lot, let you know if i could accomplish...
[01:53:07] <systemfault> So, the CompositeProducer in my example would simply be constructor(private producers: IProducer[]) {}
[01:54:45] *** Joins: nomic2 (~nomic@185.192.69.57)
[01:54:48] <xochilpili> systemfault, but in CompositeProducer should have multi_injection in the constructor, isn't ?
[01:55:07] <systemfault> Yeah, like the last example on the page
[01:56:50] <systemfault> constructor(@multiInject("IProducer") producers: IProducer[]) { this.producers = producers } I believe
[01:56:50] <xochilpili> systemfault, gotcha
[01:57:15] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:98a:6da6:8044:af0f) (Ping timeout: 260 seconds)
[02:00:50] *** nomic2 is now known as nomic
[02:01:21] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:ecf7:1521:506c:53cc)
[02:01:56] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:07:22] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[02:10:09] <Slade> https://betterprogramming.pub/7-advanced-usages-of-typescript-f9abb0dd64ff
[02:10:23] *** Quits: electrostatic (~electrost@65.113.243.234) (Ping timeout: 260 seconds)
[02:14:40] *** Joins: thojanssens (~thojansse@ptr-178-51-89-29.dyn.mobistar.be)
[02:15:10] *** Quits: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl) (Ping timeout: 268 seconds)
[02:16:18] *** Quits: thojanssens_ (~thojansse@ptr-178-51-89-29.dyn.mobistar.be) (Ping timeout: 260 seconds)
[02:16:31] *** Joins: electrostatic (~electrost@65.113.243.234)
[02:16:53] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:21:09] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:e99f:a306:8474:47e0) (Quit: you are feeeling very sleeeeeepyy......)
[02:25:45] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Quit: Ping timeout (120 seconds))
[02:26:59] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:29:38] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:21] *** Joins: Gumshoe (~whoa@cpe-107-184-42-236.socal.res.rr.com)
[02:30:44] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:33:16] *** Quits: pizdets (~pizdets@183.182.115.247) (Ping timeout: 250 seconds)
[02:34:03] *** Joins: pizdets (~pizdets@183.182.111.19)
[02:35:26] *** Quits: thojanssens (~thojansse@ptr-178-51-89-29.dyn.mobistar.be) (Ping timeout: 260 seconds)
[02:35:54] *** Quits: gaqwas (~john@dynamic-095-117-012-008.95.117.pool.telefonica.de) (Ping timeout: 260 seconds)
[02:37:35] *** Quits: electrostatic (~electrost@65.113.243.234) (Ping timeout: 264 seconds)
[02:39:05] <xochilpili> systemfault, not able to inject both producers, it only calls for 'default' json one, not protobuf
[02:39:13] *** Joins: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl)
[02:42:43] *** Joins: summersault (~summersau@2804:7f0:3887:5392:ec54:85c6:7e3c:f364)
[02:43:57] *** Parts: velix (~velix@user/velix) (Leaving)
[02:44:10] <systemfault> How do you wire it?
[02:44:11] *** Quits: rcoote (~rcoote@2a02:908:69a:58a0:c0fa:b325:32b5:6689) (Quit: Konversation terminated!)
[02:44:33] <xochilpili> systemfault, im using a separated (easy) project, just to test injection
[02:44:40] <xochilpili> let me paste what i have done...
[02:48:39] *** Joins: sam_1 (~sam_1@87.51.251.118)
[02:49:11] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[02:49:29] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[02:52:14] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[02:53:29] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 264 seconds)
[02:53:47] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 264 seconds)
[02:54:41] *** Quits: src (~src@user/src) (Quit: Leaving)
[02:55:58] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[02:55:58] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[02:55:58] *** Joins: wroathe (~wroathe@user/wroathe)
[03:01:40] <xochilpili> systemfault, https://pastebin.com/Cb2NbhJb <<
[03:06:26] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Read error: Connection reset by peer)
[03:11:03] *** Quits: summersault (~summersau@2804:7f0:3887:5392:ec54:85c6:7e3c:f364) (Remote host closed the connection)
[03:12:25] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[03:13:30] *** Joins: johnjay (~pi@192.142.100.50)
[03:13:43] <systemfault> xochilpili: Shouldn't @multiInject(Types.Katana) be @multiInject('IWeapon') ?
[03:13:43] <xochilpili> systemfault, were you able to see it?
[03:13:57] <xochilpili> systemfault, let me check that!
[03:14:00] <systemfault> Yeah, had weird things I needed to take care of, just came back to my computer
[03:14:53] <xochilpili> systemfault, no prob
[03:14:59] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:15:08] <xochilpili> tried with  @multiInject('IWeapon') and got: No matching bindings found for serviceIdentifier: IWeapon
[03:15:28] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[03:16:43] *** Quits: nomic (~nomic@185.192.69.57) (Quit: Leaving)
[03:17:58] <systemfault> That example feels so complex for nothing...
[03:18:19] <systemfault> So, you have CompositeWeapon... I get that.
[03:18:25] <xochilpili> systemfault, trying to replicate the definitive one
[03:18:35] <systemfault> THen you have DefaultWeapon and SpecialWeapon, right?
[03:18:40] <xochilpili> yes
[03:19:02] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Quit: Leaving...)
[03:20:29] <systemfault> What I don't get is that your example should be pretty much like the first one on this page... https://github.com/inversify/InversifyJS/blob/master/wiki/multi_injection.md
[03:20:38] <systemfault> Yours takes a billion lines :/
[03:21:16] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:212b:5c1:c8d9:eeb1)
[03:21:20] <xochilpili> systemfault, because im using a katana.module.ts to bind dynamic value for @named tag :/
[03:23:55] <systemfault> When you do it without tags, is it working?
[03:24:16] *** Joins: realies0 (~realies@user/realies)
[03:24:50] <xochilpili> do you mean in special-weapon.ts ?
[03:24:59] *** Quits: realies (~realies@user/realies) (Ping timeout: 264 seconds)
[03:24:59] *** realies0 is now known as realies
[03:25:15] *** Joins: X-Scale` (~ARM@92.250.98.212)
[03:25:19] *** Quits: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[03:26:14] *** Quits: X-Scale (~ARM@31.22.147.35) (Ping timeout: 260 seconds)
[03:27:02] *** Joins: summersault (~summersau@2804:7f0:3887:5392:ec54:85c6:7e3c:f364)
[03:27:03] *** X-Scale` is now known as X-Scale
[03:27:29] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:30:02] *** Quits: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f) (Quit: Oops)
[03:30:26] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[03:30:35] <sickdyd> when autoimporting React exports like useEffect VSCode imports them like 'hoist-non-react-statics/node_modules/@types/react'... can't figure out how to fix this
[03:30:49] <sickdyd> sorry, like `import { useEffect } from 'hoist-non-react-statics/node_modules/@types/react'`
[03:31:02] *** Joins: zopsi (~zopsi@irc.dir.ac)
[03:31:05] <sickdyd> I suspect it has something to do with the version of TS I'm using
[03:31:28] <xochilpili> systemfault, i did it manually using appContainer.bind<IWeapon>(Types.Weapon).to(DefaultWeapon) and the same for SpecialWeapon, now im getting `ambiguous match found for serviceIdentifier`
[03:31:31] <systemfault> xochilpili: All of this seems so abstract to me... and I don't understand where the actual Katana comes from, I'm also trying to figure out where you add Special/DefaultWeapon to the container
[03:33:20] <xochilpili> systemfault, not sure that i needed to add Special/Default to container when using ContainerModule, but please see my last comment, i did it manually, and complains
[03:33:30] <sickdyd> oh, it's a bug with TS https://github.com/microsoft/TypeScript/issues/45784
[03:33:48] <systemfault> xochilpili: I'm no inversify expert :/
[03:34:04] <xochilpili> systemfault, me too
[03:35:05] <xochilpili> systemfault, will start over, replicating the example in github... :/
[03:35:34] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:c89f:fa7:de86:f8e2)
[03:35:41] <systemfault> If you get it working... start changing the names to something closer to what you want...
[03:35:50] <systemfault> No katana and ninja and weapons
[03:35:56] <xochilpili> systemfault, yes
[03:36:09] <xochilpili> systemfault, will share to you, just a sec
[03:45:59] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[03:46:05] *** audiocat is now known as audio
[03:46:18] *** Quits: summersault (~summersau@2804:7f0:3887:5392:ec54:85c6:7e3c:f364) (Ping timeout: 260 seconds)
[03:46:32] *** Quits: audio (~audio@2603-8081-1800-1546-0768-f6c4-f0f5-0017.res6.spectrum.com) (Changing host)
[03:46:32] *** Joins: audio (~audio@user/audio)
[03:48:26] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:48:33] *** deadk is now known as edk
[03:59:22] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Quit: Ping timeout (120 seconds))
[04:00:45] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[04:02:36] *** Quits: jamea (~jamea@189.237.48.29) (Ping timeout: 245 seconds)
[04:06:09] *** audio is now known as audiocat
[04:10:34] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[04:11:33] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[04:12:21] <xochilpili> systemfault, i started piece by piece, and worked until added that module
[04:12:45] <xochilpili> seems like multiInject doesnt like dynamics ?
[04:12:50] <xochilpili> :/
[04:13:14] <systemfault> I don't know... not sure why it would care though, hmm
[04:14:51] <xochilpili> systemfault, not sure what im doing wrong :/
[04:15:22] <xochilpili> systemfault, can i share it to you ? perhaps you can see something that i dont
[04:15:32] <systemfault> Yeah, sure
[04:15:37] <xochilpili> systemfault, thanks
[04:16:46] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[04:17:48] <xochilpili> systemfault, https://github.com/xochilpili/example-inversify/tree/master/src/producer
[04:17:53] <xochilpili> there's the interesting part
[04:18:10] <xochilpili> and https://github.com/xochilpili/example-inversify/blob/master/src/index.ts < running part
[04:18:27] <xochilpili> https://github.com/xochilpili/example-inversify/blob/master/src/inversify.config.ts < container configuration
[04:19:06] <xochilpili> systemfault, please omit all unnecessary imports, this repo was created as a test
[04:19:21] <systemfault> Okay!
[04:19:57] <xochilpili> systemfault, thanks
[04:21:46] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:c89f:fa7:de86:f8e2) (Ping timeout: 245 seconds)
[04:25:25] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (Remote host closed the connection)
[04:27:34] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:27:34] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:27:34] *** Joins: wroathe (~wroathe@user/wroathe)
[04:31:57] <systemfault> xochilpili: Yeah, so... multiinject seems to only use the default since the name is not specified..
[04:32:10] <systemfault> If you remove both constraints, it works.
[04:32:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[04:32:18] <xochilpili> correct
[04:32:43] <xochilpili> or if you use it manually in container configuration with that dynamicValue
[04:34:07] *** Quits: FoodMan (~glucose@user/foodman) (Ping timeout: 260 seconds)
[04:34:43] <systemfault> I guess you can dynamicValue create the composite..
[04:34:53] <xochilpili> systemfault, updated and working, insted of using multiInject
[04:34:54] <systemfault> Looking for an official workaround though
[04:35:32] <systemfault> The point of using multi inject was to support as many producers as you want though
[04:35:42] <xochilpili> https://github.com/xochilpili/example-inversify/blob/master/src/producer/composite-producer.ts <
[04:36:43] <xochilpili> systemfault, so, do you think there's a workaround for this?
[04:37:06] <systemfault> Well, you can wire CompositeProducer yourself... 2 seconds
[04:41:36] <systemfault> xochilpili: https://jsfiddle.net/d51f4t0z/
[04:49:59] *** Joins: incognito (~relativit@user/incognito)
[04:50:37] <theskillwithin> there should be a tsfiddle.net
[04:50:55] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[04:52:39] <theskillwithin> ðŸŽƒ
[04:52:49] <systemfault> There kind of is... it's just me being dumb
[04:52:51] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Quit: Must not waste too much time here...)
[04:53:36] *** Joins: zerothule (~eric@2601:602:8d80:4e50:1171:762:e4bb:3aa0)
[04:53:51] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 245 seconds)
[04:54:11] <xochilpili> systemfault, looking
[04:55:57] <xochilpili> systemfault, ah, i see, yes, but there's no composite with @named for special IProducer
[04:56:04] <xochilpili> systemfault, but see your point
[04:56:14] <xochilpili> let me pass this to the original project
[04:56:51] <xochilpili> and start with the testings, will you continue here ?
[04:57:10] <systemfault> What do you mean?
[04:59:17] <systemfault> To be honest, I never understood why you used names
[05:01:50] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[05:05:06] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 245 seconds)
[05:07:06] *** Joins: sam_1 (~sam_1@87.51.251.118)
[05:09:23] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:09:47] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[05:12:42] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 260 seconds)
[05:14:21] <theskillwithin> Happy Halloween!
[05:14:43] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[05:24:09] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[05:26:24] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Client Quit)
[05:26:40] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[05:26:44] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[05:27:41] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a584:300e:8b6:5c5d) (Ping timeout: 256 seconds)
[05:31:35] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 264 seconds)
[05:32:43] *** Quits: busybusybusy (~BUSY@user/busy) (Read error: Connection reset by peer)
[05:44:02] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[05:44:16] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 245 seconds)
[05:44:37] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-3856-c4d5-c4a0-19be.res6.spectrum.com)
[05:45:06] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:48:26] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 245 seconds)
[05:48:27] *** Quits: nrl^ (~nrl@wsip-98-188-242-6.mc.at.cox.net) (Remote host closed the connection)
[05:53:24] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:1552:c369:6ea3:d895)
[05:54:38] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[05:54:38] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[05:56:06] *** Joins: codeminster (~codemin@212.102.63.33)
[06:00:37] *** Quits: codeminster (~codemin@212.102.63.33) (Client Quit)
[06:01:29] *** Quits: federico_it (~textual@151.95.125.195) (Quit: Textual IRC Client: www.textualapp.com)
[06:01:31] *** Joins: lloo^ (~lloo@wsip-98-188-242-6.mc.at.cox.net)
[06:03:02] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1171:762:e4bb:3aa0) (Ping timeout: 260 seconds)
[06:05:21] *** Joins: wo0f (~wo0f@user/wo0f)
[06:18:01] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[06:19:03] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:212b:5c1:c8d9:eeb1) (Quit: you are feeeling very sleeeeeepyy......)
[06:20:53] *** Joins: The_Jag_ (~The_Jag@host-87-16-87-93.retail.telecomitalia.it)
[06:21:42] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[06:23:33] *** Quits: faktor (~factor@72.192.71.12) (Quit: Leaving)
[06:23:34] *** Quits: The_Jag (~The_Jag@host-82-56-115-92.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[06:24:02] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:ccf0:81e8:ce87:8a2c)
[06:24:53] <WishBoy> theskillwithin happy halloween \o/
[06:25:10] *** Quits: noarb- (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[06:27:11] *** Joins: jamea (~jamea@177.239.80.39)
[06:29:17] *** Joins: Rockwood (~Rocky@user/rocky)
[06:30:58] *** Joins: noarb (~noarb@user/noarb)
[06:32:39] <xochilpili> systemfault, what do you mean ?
[06:32:50] <xochilpili> i cant make it work in original project
[06:32:52] <xochilpili> :/
[06:42:47] <deltab> why do you need to involve the container anyway? isn't it possible to construct the composite producer directly?
[06:48:31] <deltab> or is the test of the container?
[06:51:59] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:1552:c369:6ea3:d895) (Ping timeout: 264 seconds)
[06:54:05] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:1552:c369:6ea3:d895)
[07:05:31] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 245 seconds)
[07:07:37] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:11:04] *** Quits: w0ng (~w0ng@185.218.127.39) (Quit: w0ng)
[07:12:13] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:12:13] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:12:13] *** Joins: wroathe (~wroathe@user/wroathe)
[07:18:40] *** Joins: zerothule (~eric@2601:602:8d80:4e50:2d90:cea1:2537:d671)
[07:21:14] *** Joins: noarb (~noarb@user/noarb)
[07:26:05] *** Joins: mexijoe (~Android@97.115.177.65)
[07:27:43] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[07:31:46] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[07:33:57] *** Quits: darkstarx (~darkstard@2601:1c2:300:c8a0::6c32) (Quit: Leaving)
[07:34:21] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a584:300e:8b6:5c5d)
[07:34:47] *** Quits: mexijoe (~Android@97.115.177.65) (Quit: -a- IRC for Android 2.1.59)
[07:35:31] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:1552:c369:6ea3:d895) (Ping timeout: 245 seconds)
[07:41:56] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32)
[07:42:26] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[07:43:49] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32) (Remote host closed the connection)
[07:44:14] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32)
[07:44:44] *** Joins: trms (~trms@176.88.76.146)
[07:46:03] <xochilpili> deltab, thanks for answer
[07:46:19] <xochilpili> i didnt realize that you wrote
[07:47:11] *** Quits: Kdev (~KDev@cpe-98-10-64-75.rochester.res.rr.com) (Ping timeout: 264 seconds)
[07:47:25] <xochilpili> deltab, originaly i asked if was possible to do this:  https://pastebin.com/J1TtAr4V
[07:50:40] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[07:52:43] *** Quits: xochilpili (~xochilpil@fixed-187-189-47-16.totalplay.net) (Quit: Leaving)
[08:01:20] *** trms is now known as lorenzo
[08:01:52] *** lorenzo is now known as trms
[08:10:16] *** Quits: trms (~trms@176.88.76.146) (Quit: Leaving...)
[08:10:50] *** Joins: trms (~trms@176.88.76.146)
[08:17:49] *** Joins: x-x_ (~x@user/x-x)
[08:19:34] *** Joins: zeromule (~eric@2601:602:8d80:4e50:2014:5dcf:9b0b:1e94)
[08:19:50] *** Quits: trms (~trms@176.88.76.146) (Remote host closed the connection)
[08:20:34] *** Joins: electrostatic (~electrost@2601:600:104:f95e:bdf5:1249:88de:91f3)
[08:20:42] *** Quits: Gumshoe (~whoa@cpe-107-184-42-236.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:21:46] *** Quits: zerothule (~eric@2601:602:8d80:4e50:2d90:cea1:2537:d671) (Ping timeout: 245 seconds)
[08:23:51] *** Quits: zeromule (~eric@2601:602:8d80:4e50:2014:5dcf:9b0b:1e94) (Ping timeout: 245 seconds)
[08:29:10] *** Quits: jamea (~jamea@177.239.80.39) (Ping timeout: 260 seconds)
[08:29:37] *** Joins: trms (~trms@176.88.76.146)
[08:38:26] *** Quits: electrostatic (~electrost@2601:600:104:f95e:bdf5:1249:88de:91f3) (Ping timeout: 245 seconds)
[08:39:06] *** Quits: trms (~trms@176.88.76.146) (Remote host closed the connection)
[08:40:20] *** Joins: trms (~trms@176.88.76.146)
[08:40:31] *** Joins: sam_1 (~sam_1@87.51.251.118)
[08:42:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:43:03] *** Quits: trms (~trms@176.88.76.146) (Client Quit)
[08:44:58] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[08:45:02] *** Joins: electrostatic (~electrost@2601:600:10a:f41a:70d8:2f63:b550:5ae9)
[08:49:34] <sickdyd> OMG nodes and edges on GraphQL when trying to match them with TS types...
[08:52:36] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-3856-c4d5-c4a0-19be.res6.spectrum.com) (Ping timeout: 245 seconds)
[08:54:09] *** Quits: wo0f (~wo0f@user/wo0f) (Remote host closed the connection)
[08:54:26] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:54:41] *** Joins: zeromule (~eric@2601:602:8d80:4e50:2014:5dcf:9b0b:1e94)
[08:55:55] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[08:57:20] *** Joins: electrostatic1 (~electrost@2601:600:10a:f41a:7d46:6474:ac79:791b)
[08:58:26] *** Quits: electrostatic (~electrost@2601:600:10a:f41a:70d8:2f63:b550:5ae9) (Ping timeout: 245 seconds)
[09:00:22] *** Quits: x-x_ (~x@user/x-x) (Ping timeout: 260 seconds)
[09:02:02] *** Joins: x-x (~x@user/x-x)
[09:08:11] *** Quits: zeromule (~eric@2601:602:8d80:4e50:2014:5dcf:9b0b:1e94) (Ping timeout: 264 seconds)
[09:12:17] *** Joins: earendel (uid498179@user/earendel)
[09:13:06] *** Joins: trms[m] (~trmsmatri@2001:470:69fc:105::1:28d2)
[09:16:07] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[09:16:19] <theskillwithin> https://i.redd.it/0tuk8rphduw71.jpg
[09:16:38] *** Joins: w0ng (~w0ng@185.218.127.39)
[09:16:39] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[09:17:45] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[09:18:00] <deltab> haha!
[09:18:21] <systemfault> That's some scary pumpkin
[09:19:00] <systemfault> poor xochilpill.. I tried to help but he couldn't fix their actual code...
[09:19:21] <systemfault> Too bad NestJS forces their DI crap on devs.
[09:20:00] <systemfault> (I think it does...)
[09:20:56] <ljharb> ew
[09:22:33] *** Joins: wo0f (~wo0f@vps-7f6eecbb.vps.ovh.net)
[09:22:33] *** Quits: wo0f (~wo0f@vps-7f6eecbb.vps.ovh.net) (Changing host)
[09:22:33] *** Joins: wo0f (~wo0f@user/wo0f)
[09:24:10] <systemfault> I'm wrong, they don't use inversify... but their own stuff
[09:24:12] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (*.net *.split)
[09:24:12] *** Quits: jushi (~j@himitsu.moe) (*.net *.split)
[09:24:12] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (*.net *.split)
[09:24:12] *** Quits: brw (~bas@static.66.39.12.49.clients.your-server.de) (*.net *.split)
[09:24:12] *** Quits: robertparkerx (~robertpar@user/robertparkerx) (*.net *.split)
[09:24:12] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (*.net *.split)
[09:24:12] *** Quits: _0x1d3 (sid43116@tinside.irccloud.com) (*.net *.split)
[09:24:12] *** Quits: owlbynight (sid501016@tinside.irccloud.com) (*.net *.split)
[09:24:12] *** Quits: Argorok (sid195487@hampstead.irccloud.com) (*.net *.split)
[09:24:12] *** Quits: jsatk (sid304796@helmsley.irccloud.com) (*.net *.split)
[09:24:12] *** Quits: DrowningElysium (sid190788@user/drowningelysium) (*.net *.split)
[09:24:12] *** Quits: codebam (~codebam@user/codebam) (*.net *.split)
[09:24:12] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[09:24:12] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[09:24:12] *** Quits: spike_spiegel3 (~spike_spi@static.200.4.251.148.clients.your-server.de) (*.net *.split)
[09:24:12] *** Quits: fkm (~fkm@user/fkm) (*.net *.split)
[09:24:12] *** Quits: dfg (dfg@user/dfg) (*.net *.split)
[09:24:12] *** Quits: Lewix_ (sid158496@tinside.irccloud.com) (*.net *.split)
[09:24:12] *** Quits: Anonamy (~Anonamy@node-1w7jr9qsmpnqx5s3vo4msg2dy.ipv6.telus.net) (*.net *.split)
[09:24:12] *** Quits: fakuve (~fakuve@192.210.243.250) (*.net *.split)
[09:24:12] *** Quits: bin4ry (~bin4ry@128.199.135.148) (*.net *.split)
[09:24:12] *** Quits: Fusl (fusl@1.0.0.127.in-addr.arpa.li) (*.net *.split)
[09:24:12] *** Quits: skillbot (~skillbot@user/skillbot) (*.net *.split)
[09:24:12] *** Quits: DK3 (~DK3@rs000042.fastrootserver.de) (*.net *.split)
[09:24:12] *** Quits: francis (francis@user/francis) (*.net *.split)
[09:24:20] *** Joins: Lewix_ (sid158496@id-158496.tinside.irccloud.com)
[09:24:21] *** Joins: francis (francis@user/francis)
[09:24:21] *** Joins: Argorok (sid195487@id-195487.hampstead.irccloud.com)
[09:24:22] *** Joins: spike_spiegel3 (~spike_spi@static.200.4.251.148.clients.your-server.de)
[09:24:22] *** Joins: robertparkerx (~robertpar@2001:19f0:5:6262:5400:3ff:fe40:6b40)
[09:24:26] *** Joins: skillbot (~skillbot@li1200-69.members.linode.com)
[09:24:27] *** Joins: codebam (~codebam@user/codebam)
[09:24:30] *** Joins: _0x1d3 (sid43116@id-43116.tinside.irccloud.com)
[09:24:30] *** Joins: Fusl (fusl@1.0.0.127.in-addr.arpa.li)
[09:24:32] *** Joins: DrowningElysium (sid190788@user/drowningelysium)
[09:24:34] *** Joins: fakuve (~fakuve@192.210.243.250)
[09:24:35] *** Joins: Anonamy (~Anonamy@node-1w7jr9qsmpnqx5s3vo4msg2dy.ipv6.telus.net)
[09:24:37] *** Joins: jsatk (sid304796@id-304796.helmsley.irccloud.com)
[09:24:37] *** Quits: robertparkerx (~robertpar@2001:19f0:5:6262:5400:3ff:fe40:6b40) (Changing host)
[09:24:37] *** Joins: robertparkerx (~robertpar@user/robertparkerx)
[09:24:43] *** Quits: skillbot (~skillbot@li1200-69.members.linode.com) (Changing host)
[09:24:43] *** Joins: skillbot (~skillbot@user/skillbot)
[09:24:43] *** ChanServ sets mode: +v skillbot
[09:24:44] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[09:24:49] *** Joins: jushi (~j@2a01:4f9:c010:8455::1)
[09:24:57] <WishBoy> LOOOOL netsplited
[09:24:58] *** Joins: fkm (~fkm@user/fkm)
[09:24:58] *** Joins: owlbynight (sid501016@id-501016.tinside.irccloud.com)
[09:25:02] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[09:25:15] *** Joins: brw (~bas@static.66.39.12.49.clients.your-server.de)
[09:25:28] *** Joins: dfg (~dfg@li490-89.members.linode.com)
[09:25:31] *** Quits: dfg (~dfg@li490-89.members.linode.com) (Changing host)
[09:25:31] *** Joins: dfg (~dfg@user/dfg)
[09:25:42] *** Joins: wyre (~wyre@user/wyre)
[09:25:44] *** Joins: tccki (~tccki@box.webslate.co.nz)
[09:25:57] *** Joins: hexology (~hexology@user/hexology)
[09:27:32] *** Quits: wo0f (~wo0f@user/wo0f) (Quit: Leaving)
[09:28:13] *** Joins: wo0f (~wo0f@vps-7f6eecbb.vps.ovh.net)
[09:28:13] *** Quits: wo0f (~wo0f@vps-7f6eecbb.vps.ovh.net) (Changing host)
[09:28:13] *** Joins: wo0f (~wo0f@user/wo0f)
[09:28:39] *** Joins: wo0f_ (~wo0f@vps-7f6eecbb.vps.ovh.net)
[09:29:46] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[09:30:33] *** Joins: sam_1 (~sam_1@87.51.251.118)
[09:30:46] *** Quits: kmh (~kmh@2a00:6020:5004:6800:8458:e16c:2252:6b0b) (Read error: Connection reset by peer)
[09:31:53] *** Quits: wo0f (~wo0f@user/wo0f) (Client Quit)
[09:32:00] *** Joins: wo0f__ (~wo0f@vps-7f6eecbb.vps.ovh.net)
[09:32:10] *** Quits: pmercado (~pmercado@190.22.183.232) (Ping timeout: 260 seconds)
[09:32:50] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (*.net *.split)
[09:32:50] *** Quits: queue[m] (~queue-@2001:470:69fc:105::1:1892) (*.net *.split)
[09:32:50] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (*.net *.split)
[09:32:50] *** Quits: volgar1x (~volgar1xm@2001:470:69fc:105::e61d) (*.net *.split)
[09:32:50] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (*.net *.split)
[09:32:50] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (*.net *.split)
[09:32:50] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[09:32:50] *** Quits: merced (merced@user/merced) (*.net *.split)
[09:32:50] *** Quits: FightingFalcon (~none@user/fightingfalcon) (*.net *.split)
[09:32:50] *** Quits: Selicre (~x@hello.i.am.selic.re) (*.net *.split)
[09:32:50] *** Quits: wez (~wyoung@about/web/wez) (*.net *.split)
[09:32:50] *** Quits: Woet (~me@irc.woet.me) (*.net *.split)
[09:32:50] *** Quits: joepie91 (~joepie91p@user/joepie91) (*.net *.split)
[09:33:00] *** Joins: FightingFalcon (~none@mail.bodytr.com)
[09:33:00] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[09:33:03] *** Quits: wo0f__ (~wo0f@vps-7f6eecbb.vps.ovh.net) (Client Quit)
[09:33:10] *** Quits: wo0f_ (~wo0f@vps-7f6eecbb.vps.ovh.net) (Client Quit)
[09:33:22] *** Joins: merced (merced@2600:3c00::f03c:91ff:fee7:3535)
[09:33:23] *** Joins: wez (~wyoung@about/web/wez)
[09:33:27] *** Quits: merced (merced@2600:3c00::f03c:91ff:fee7:3535) (Signing in (merced))
[09:33:27] *** Joins: merced (merced@user/merced)
[09:33:30] *** Joins: Woet (~me@irc.woet.me)
[09:33:43] *** Joins: joepie91 (~joepie91p@user/joepie91)
[09:33:52] *** Joins: Selicre (~x@hello.i.am.selic.re)
[09:33:58] *** Joins: wo0f (~wo0f@vps-7f6eecbb.vps.ovh.net)
[09:33:59] *** merced is now known as Guest1173
[09:34:00] *** Joins: Henry151 (~bishop@user/henry151)
[09:34:29] *** Quits: wo0f (~wo0f@vps-7f6eecbb.vps.ovh.net) (Remote host closed the connection)
[09:35:14] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[09:35:46] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[09:36:54] *** Joins: zeromule (~eric@2601:602:8d80:4e50:c8ec:532e:af93:70b0)
[09:39:14] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[09:40:10] <systemfault> Yeah, the joys of IRC...
[09:41:10] *** Joins: volgar1x (~volgar1xm@2001:470:69fc:105::e61d)
[09:41:16] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[09:41:26] *** Joins: queue[m] (~queue-@2001:470:69fc:105::1:1892)
[09:41:38] *** Joins: nomic (~nomic@185.192.69.57)
[09:45:34] *** Quits: realies (~realies@user/realies) (Quit: Ping timeout (120 seconds))
[09:47:33] *** Joins: realies (~realies@user/realies)
[09:48:26] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[09:50:59] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:53:01] *** Quits: electrostatic1 (~electrost@2601:600:10a:f41a:7d46:6474:ac79:791b) (Ping timeout: 245 seconds)
[09:58:27] <Cork> systemfault: the joys of irc is to be on the other site of a netsplit and sit on a server with 10 other ppl :D
[10:00:48] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[10:16:36] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:17:50] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[10:18:56] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[10:22:00] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:a86f:1f20:803d:2891)
[10:25:35] *** Quits: silly (~silly@user/silly) (Ping timeout: 264 seconds)
[10:32:56] *** Joins: silly (~silly@user/silly)
[10:33:26] *** Quits: Jaran (~mail@user/jaran) (Remote host closed the connection)
[10:34:10] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[10:34:35] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[10:35:56] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:ccf0:81e8:ce87:8a2c) (Quit: you are feeeling very sleeeeeepyy......)
[10:36:16] *** Skeleswant is now known as Swant
[10:38:51] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[10:41:42] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:42:01] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[10:42:02] *** Joins: Jaran (~mail@p2e515106.dip0.t-ipconnect.de)
[10:42:02] *** Quits: Jaran (~mail@p2e515106.dip0.t-ipconnect.de) (Changing host)
[10:42:02] *** Joins: Jaran (~mail@user/jaran)
[10:42:49] *** Quits: Jaran (~mail@user/jaran) (Remote host closed the connection)
[10:43:25] *** Joins: Jaran (~mail@p2e515106.dip0.t-ipconnect.de)
[10:43:26] *** Quits: Jaran (~mail@p2e515106.dip0.t-ipconnect.de) (Changing host)
[10:43:26] *** Joins: Jaran (~mail@user/jaran)
[10:44:50] *** Quits: zeromule (~eric@2601:602:8d80:4e50:c8ec:532e:af93:70b0) (Ping timeout: 268 seconds)
[10:52:15] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:54:21] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:54:56] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[10:55:10] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:55:37] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:58:02] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 260 seconds)
[10:59:41] *** Joins: derjanni (~textual@p4ff808a3.dip0.t-ipconnect.de)
[11:07:01] *** Joins: gaqwas (~john@dynamic-077-004-000-013.77.4.pool.telefonica.de)
[11:21:20] *** Quits: Jaran (~mail@user/jaran) (Remote host closed the connection)
[11:21:55] *** Joins: Jaran (~mail@p2e515106.dip0.t-ipconnect.de)
[11:21:55] *** Quits: Jaran (~mail@p2e515106.dip0.t-ipconnect.de) (Changing host)
[11:21:55] *** Joins: Jaran (~mail@user/jaran)
[11:24:10] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 260 seconds)
[11:24:31] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[11:28:46] *** Quits: x-x (~x@user/x-x) (Ping timeout: 260 seconds)
[11:33:03] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[11:34:02] *** Joins: x-x (~x@user/x-x)
[11:34:02] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:7862:d949:4fe3:77fd)
[11:34:23] *** Joins: amcsi_ (~amcsi@2E8BA2D1.catv.pool.telekom.hu)
[11:35:33] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:37:24] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[11:39:06] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:39:07] *** Quits: silly (~silly@user/silly) (Ping timeout: 268 seconds)
[11:41:29] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:42:59] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[11:44:11] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[11:48:22] *** Quits: x-x (~x@user/x-x) (Ping timeout: 268 seconds)
[11:50:09] *** Joins: x-x (~x@user/x-x)
[12:08:33] *** Quits: derjanni (~textual@p4ff808a3.dip0.t-ipconnect.de) (Quit: Textual IRC Client: www.textualapp.com)
[12:11:32] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[12:15:34] *** Quits: x-x (~x@user/x-x) (Quit: leaving)
[12:16:07] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 268 seconds)
[12:20:05] *** Quits: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl) (Remote host closed the connection)
[12:37:13] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:a584:300e:8b6:5c5d) (Ping timeout: 256 seconds)
[12:39:19] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[12:41:22] *** Joins: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl)
[12:47:31] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[12:52:07] <qswz> trying to think of a better way than most css libs spacng helpers like mt-1, mt-2, ...
[12:52:37] <qswz> <div data-mt=".5rem">
[12:52:55] *** Quits: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net) (Ping timeout: 260 seconds)
[12:53:02] *** Quits: Albright (~Albright@2001:19f0:8001:ca4:c9c9:9450:c028:8dd0) (Quit: ZNC 1.8.2 - https://znc.in)
[12:53:05] <qswz> hm, it can't be dynamic unfortunately, using css attr
[12:53:15] *** Joins: Albright (~Albright@2001:19f0:8001:ca4:1b5c:1bd6:918c:5122)
[12:53:28] <theskillwithin> i find using helper classes difficult
[12:53:33] <AlbertLast> did you try something like tailwind?
[12:53:41] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:53:46] *** Joins: incognito (~relativit@user/incognito)
[12:54:14] <theskillwithin> for me im like, well how about just learn css?
[12:56:14] <qswz> not yet, using bootstrap  https://getbootstrap.com/docs/5.1/utilities/spacing/
[12:56:54] *** Joins: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-188-127.pool.digikabel.hu)
[12:56:54] <qswz> huh, they define all the m-* from 1 to 100 r what
[12:56:58] <theskillwithin> i hate bootcrap,  but i don't judge
[12:57:00] <qswz> sounds ridiculous
[12:57:18] <qswz> multiplied by all the props (padding, top, left, ..
[12:57:36] <AlbertLast> so work tailwind and it's fine my eyes
[12:57:44] <qswz> right, it's purging the rules
[12:58:14] <qswz> I think the point in having less rules is to ensure consistency
[12:58:36] <qswz> if you have only m-{1-5} for example
[12:59:29] <theskillwithin> how did something using utility classes become so popular.  maybe good reason, but also maybe bad
[13:00:25] *** Quits: nomic (~nomic@185.192.69.57) (Quit: Leaving)
[13:00:54] <AlbertLast> you could read the intro of tailwind to understand what the motivation are.
[13:00:54] *** Quits: lloo^ (~lloo@wsip-98-188-242-6.mc.at.cox.net) (Remote host closed the connection)
[13:01:45] *** Quits: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com) (Read error: Connection reset by peer)
[13:02:01] <theskillwithin> AlbertLast or u already know css, and seems silly
[13:02:05] *** Joins: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com)
[13:02:46] <theskillwithin> people who know css, don't need a framework
[13:02:55] <AlbertLast> to work with ultity class you need to know css in before head in my eyes
[13:04:39] <theskillwithin> to work with utility classes,  you need to know those classes, which have nothing to do with knowledge of css directly
[13:05:09] <qswz> I know about sailing, does it help for tailwind?
[13:05:51] <AlbertLast> maybe we speak from different thinks, but to work with tailwind you to know the css directly since you do this by this way
[13:07:34] <theskillwithin> if you know css, why use tailwind
[13:07:48] *** stenno is now known as stenno\OK
[13:08:19] <kalen> tailwind is one of the grossest things i've ever seen
[13:09:27] <theskillwithin> because i know css, i can create a lot of components from scratch
[13:09:58] *** Joins: thojanssens (~thojansse@ptr-178-51-234-77.dyn.mobistar.be)
[13:13:54] <AlbertLast> and how add the point to the con/pro to tailwind?
[13:13:55] <qswz> https://css-tricks.com/need-css-utility-library/
[13:14:09] *** Joins: rcoote (~rcoote@2a02:908:69a:58a0:6826:5ff6:9e7:be31)
[13:14:33] <qswz> there are many variants, like tachyons, ..
[13:16:42] <qswz> kalen: I guess you're using sass
[13:17:22] <qswz> usually css preprocessors fan are resistant to those and css-in-js
[13:18:50] *** Quits: daoudr (~daoudr@178.197.208.229) (Remote host closed the connection)
[13:21:45] *** Quits: thojanssens (~thojansse@ptr-178-51-234-77.dyn.mobistar.be) (Quit: Leaving)
[13:22:41] <kalen> right on all counts
[13:22:44] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[13:24:52] <kalen> everything on that page is an abomination to me
[13:25:13] <kalen> only marginally better than using inline styles everywhere
[13:26:22] <AlbertLast> inline css got different specify, which make working with it harder
[13:27:26] *** Parts: karjala (sid176588@lymington.irccloud.com) ()
[13:29:01] *** Parts: shurane_ (sid132556@id-132556.helmsley.irccloud.com) ()
[13:30:21] *** Quits: fassl (~fassl@2a02:8388:1987:9380:3c09:fe63:5d7e:3687) (Quit: Leaving)
[13:30:50] *** Quits: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-188-127.pool.digikabel.hu) (Quit: leaving)
[13:31:25] *** Joins: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-188-127.pool.digikabel.hu)
[13:31:41] *** Joins: shurane (sid132556@id-132556.helmsley.irccloud.com)
[13:33:35] <qswz> deep nested sass rules can have annoyingly high specifity too
[13:35:23] <AlbertLast> end of the day somekind of mix is good
[13:41:54] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[13:44:07] <qswz> I'm mixing them all, I use bootstrap and import their scss and tune up variables etc in sass, I use @emotion/styled as css in js (bootstrap generates css variables so it can be accessed there), and bootstrap have css helpers like tailwind
[13:48:11] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-3856-c4d5-c4a0-19be.res6.spectrum.com)
[13:52:22] *** Joins: Alex8532 (~Alex8532@user/alex8532)
[13:57:33] *** Joins: kogepan (~kogepan@user/kogepan)
[14:01:33] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:7862:d949:4fe3:77fd) (Ping timeout: 268 seconds)
[14:05:34] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:07:04] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[14:07:43] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[14:08:17] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:08:31] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[14:09:04] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:11:36] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[14:12:28] *** Joins: voltage_ (voltage@user/voltage)
[14:14:15] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:15:18] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[14:15:51] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:18:41] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[14:19:16] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:20:01] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[14:20:56] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:38d3:9326:aa1c:e2f4)
[14:27:25] *** Quits: kogepan (~kogepan@user/kogepan) (Read error: Connection reset by peer)
[14:29:02] *** Joins: kogepan (~kogepan@user/kogepan)
[14:30:58] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:32:21] *** Quits: g00fy78 (~g00fy@user/g00fy) (Quit: Ping timeout (120 seconds))
[14:32:44] *** Joins: g00fy78 (~g00fy@user/g00fy)
[14:33:31] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[14:33:54] <qswz> the new chrome devtools tool arrow for changing css values suck
[14:34:39] *** Quits: Nachtgespenst (~user@user/siracusa) (Quit: Bye!)
[14:34:42] <qswz> when I have .25rem, I would like small steps instead of 1rem up or down
[14:35:00] <qswz> let me address thesse complaints to chromium rather
[14:38:01] *** Joins: bugs (~bugs@49.36.222.253)
[14:39:56] *** Quits: bugs (~bugs@49.36.222.253) (Client Quit)
[14:40:43] *** Joins: bugs (~bugs@2405:201:6802:3168:e286:5bd4:c476:c493)
[14:41:26] *** Quits: bugs (~bugs@2405:201:6802:3168:e286:5bd4:c476:c493) (Client Quit)
[14:42:20] *** Quits: kogepan (~kogepan@user/kogepan) (Read error: Connection reset by peer)
[14:44:02] *** Joins: tdwamdors^ (~tdwamdors@wsip-98-188-242-6.mc.at.cox.net)
[14:47:20] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:47:20] *** Joins: cth (~Cthulchu@193.194.107.250)
[14:50:24] *** Joins: kmh (~kmh@2a00:6020:5004:6800:c8b7:6e2b:764b:7b1d)
[14:58:29] *** Joins: bugs_ (~bugs@49.36.222.253)
[14:59:03] <thykka> qswz, hold down alt for smaller steps
[14:59:16] *** Quits: bugs_ (~bugs@49.36.222.253) (Client Quit)
[15:04:49] *** Joins: fassl (~fassl@2a02:8388:1987:9380:3c09:fe63:5d7e:3687)
[15:05:12] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:05:18] *** Quits: stenno\OK (~stenno@user/stenno) (Ping timeout: 260 seconds)
[15:07:18] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[15:07:43] <qswz> oh thx
[15:07:50] <qswz> nice
[15:09:07] <qswz> Q of the day: efficient way to count the number of significant digits of a sumber
[15:09:10] <qswz> number*
[15:09:14] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:2cdd:3462:8bbb:a197)
[15:11:00] <qswz> n> const n = -123.456987; n.toExponential().split(/[.+]/)[1].length
[15:11:01] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[15:11:09] <jellobot> (timeout)
[15:12:02] <qswz> n> (2).toExponential
[15:12:06] <jellobot> (okay) [Function: toExponential]
[15:12:46] *** Joins: src (~src@user/src)
[15:13:09] <qswz> n> const n = -123.456987; n.toExponential().split(/[.e]/)[1].length
[15:13:10] <jellobot> (okay) 8
[15:13:21] <qswz> except that cheat way
[15:13:33] <qswz> n> /.+/
[15:13:34] <jellobot> (okay) /.+/
[15:16:44] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[15:21:57] *** Joins: masber (~masber@213.55.226.102)
[15:22:03] *** Joins: x-x (~x@user/x-x)
[15:22:07] <qswz> function significantDigitsCheat(n) { if (n === 0) return 0; const parts = n.toExponential().split('.', 2); return parts[1] ? parts[1].split('e')[0].length + 1 : 1; }
[15:27:17] <qswz> narrower question, if you know a number is an integer, you can know the number of digits using  Math.log10(n)+1 (ofc we're not supposed to use n.toString().length)
[15:27:37] <qswz> now how would you do if the number is in the form 0.{numbers}
[15:27:43] <qswz> a number < 1
[15:27:56] <qswz> but >= 0.1
[15:28:41] <qswz> Math.log10 won't work there, what's the way to go?
[15:28:52] <qswz> the new chrome devtools tool arrow for changing css values suck
[15:29:05] <qswz> * well it's probably XY question*
[15:29:34] *** Joins: stenno\OK (~stenno@user/stenno)
[15:29:39] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[15:31:49] <qswz> how to obtain with maths, 1234 from 0.1234 ?
[15:32:43] <stenno\OK> n> Math.log10(0.1234)
[15:32:44] <jellobot> (okay) -0.9086848403027772
[15:33:04] <stenno\OK> dunno if there is a good way
[15:33:31] <stenno\OK> dunno if there is a good way
[15:33:40] <stenno\OK> gotta get the length by casting to string or so
[15:33:55] <stenno\OK> also it will get nasty for stuff that cannot be represented as float
[15:34:10] <stenno\OK> assuming arbitrary length of numbers after the decimal point
[15:34:33] <qswz> I asked ##math
[15:34:35] <edk> multiply it by 10 until it's an integer, but it isn't guaranteed ever to happen in maths, while it always will with floats
[15:34:45] <qswz> edk: oh yea
[15:34:55] <qswz> but asserting if it's an integer is heay
[15:34:57] <stenno\OK> well yeah
[15:35:18] <qswz> heavy (either x%1===x or Number.isInteger)
[15:35:38] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[15:37:17] *** Joins: guniberas (~guniberas@42.191.188.121)
[15:37:18] <stenno\OK> you can just multiply by 10 until its an integer but thats really nasty to program
[15:37:31] <stenno\OK> wouldn't know an ecmascript way to do it elegant
[15:37:37] <stenno\OK> ecmasports way
[15:37:40] <qswz> n> [1.2, 2].map(Number.isInteger)
[15:37:41] <edk> i think if you want to do it efficiently you need to take advantage of how floats work, but i don't think javascript gives you the tools to do that
[15:37:41] <jellobot> (okay) [ false, true ]
[15:38:05] <stenno\OK> oh yeah
[15:38:14] <stenno\OK> we can check the bits of the mantisse
[15:39:17] <edk> yes, if you can find the lowest set bit of the mantissa you've got it
[15:43:04] <qswz> n> 0.0034 * 10 // damnit
[15:43:05] <jellobot> (okay) 0.033999999999999996
[15:43:17] <Decker> exactly
[15:43:32] <stenno\OK> yeah as i said, gets nasty for float imprecisions
[15:43:39] <stenno\OK> kinda makes it impossible without rounding
[15:45:48] <thykka> n> Math.fround(1.337) === 1.337
[15:45:49] <jellobot> (okay) false
[15:45:57] *** Quits: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-188-127.pool.digikabel.hu) (Quit: leaving)
[15:46:08] <thykka> n> Math.fround(1.337)
[15:46:09] <jellobot> (okay) 1.3370000123977661
[15:46:09] <qswz> !mdn Math.fround
[15:46:11] <jellobot> qswz, Math.fround() - The Math.fround() function returns the nearest 32-bit single precision float representation of a Number. https://mdn.io/math.fround
[15:46:31] <qswz> n> Math.fround(.0034*10)
[15:46:32] <jellobot> (okay) 0.03400000184774399
[15:47:06] <Decker> n> (0.0034*10).toFixed(4)
[15:47:08] <jellobot> (okay) '0.0340'
[15:47:30] <qswz> Decker: yea, but the conversion to string is heavy, I wanted to avoid it, thanks tho
[15:47:53] <stenno\OK> oh yeah .fround
[15:47:54] <Decker> well... the only reason to care about the digits is to put it in a string so...
[15:47:56] *** Joins: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation)
[15:48:28] <qswz> n> const x=0.0034*10; Math.round(x*1e16)/1e16
[15:48:29] <jellobot> (okay) 0.034
[15:48:33] <stenno\OK> qswz: can we always expectt the number to be a fraction of 1?
[15:48:36] <qswz> feels hacky too
[15:48:48] <stenno\OK> so 0 <= x < 1 ?
[15:49:33] <qswz> stenno\OK: well ignore that now
[15:49:35] <stenno\OK> i wonder if we can just do bitmasking
[15:49:39] <qswz> let's handle any number
[15:49:42] <stenno\OK> ok
[15:50:15] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Quit: ZNC 1.8.1 - https://znc.in :: Raspberry Pi 4 B)
[15:50:27] <Decker> ya that probably works too ... Math.log10( 1/(0.0034))
[15:50:43] <stenno\OK> n> 0.1423 & 0b00000000011111111111111111111111
[15:50:44] <jellobot> (okay) 0
[15:50:53] <Decker> still kinda hokey to count along the way though...
[15:50:54] <stenno\OK> ah damn binary operation cast to 32bit unsigned
[15:51:00] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[15:51:00] <Decker> stenno\OK :) convert with a typedarray
[15:51:28] <Decker> and no... N/3 will give lots of bits you don't care about
[15:51:37] <Decker> otherwise you end up with a truncated value
[15:51:56] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:2cdd:3462:8bbb:a197) (Ping timeout: 268 seconds)
[15:52:00] <Decker> at some fixed point of decimals... which you might as well just mod( 1/N ) digits
[15:52:27] <Decker> 1/10^n?
[15:56:01] <qswz> but I'm not sure toFixed works too
[15:56:36] <qswz> what do I pass as arg? 16, and then i convert to number back right, but see
[15:57:03] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[15:57:06] <qswz> n> [0.0034 * 10, 2.34 * 10].map(x => +x.toFixed(16))
[15:57:08] <jellobot> (okay) [ 0.034, 23.4 ]
[15:57:14] <qswz> hmm, wait
[15:58:10] <stenno\OK> n> 1.2345.toString(2)
[15:58:11] <jellobot> (okay) '1.0011110000001000001100010010011011101001011110001101'
[15:58:31] <stenno\OK> n> 1.25.toString(2)
[15:58:33] <jellobot> (okay) '1.01'
[15:58:47] *** Joins: nomic (~nomic@185.192.69.57)
[16:00:14] <qswz> see https://replit.com/@caub/signif-digits#index.js
[16:00:33] <qswz> it's failing one test
[16:00:35] <stenno\OK> hmm
[16:01:25] <stenno\OK> ah while loop
[16:01:30] <stenno\OK> not very ecmasporty
[16:01:54] <qswz> I'm not ecmasport customer :p
[16:01:55] <stenno\OK> ok lets see
[16:02:40] <stenno\OK> actually lets don't i got some work to do lol
[16:09:54] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[16:11:57] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:12:40] <qswz> n> const x = 1120.5e+50; [x/10, (x/10).toFixed(16), (x/10).toFixed(54)]
[16:12:41] <jellobot> (okay) [ 1.1205000000000001e+52, '1.1205000000000001e+52', '1.1205000000000001e+52' ]
[16:16:31] <pagios> can i use browserfiy with reactjs ?
[16:17:58] *** Quits: masber (~masber@213.55.226.102) (Quit: Client closed)
[16:23:38] <qswz> !tyas @ pagios
[16:23:45] <qswz> i'd guess so
[16:24:01] <pagios> i am having a problem with socketlicnet.io and react can i ask here
[16:25:06] *** Quits: stenno\OK (~stenno@user/stenno) (Ping timeout: 260 seconds)
[16:26:28] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:30:21] *** Joins: harpia (~harpia@2804:2aec:204:f500:4906:c4ad:bdbe:1b9d)
[16:33:35] *** Joins: stenno\OK (~stenno@user/stenno)
[16:41:20] *** Quits: fassl (~fassl@2a02:8388:1987:9380:3c09:fe63:5d7e:3687) (Quit: Leaving)
[16:42:57] *** Joins: realies8 (~realies@user/realies)
[16:43:31] *** Joins: rostero (uid236576@id-236576.lymington.irccloud.com)
[16:43:38] *** Quits: fjmorazan_ (~quassel@user/fjmorazan) (Quit: fjmorazan_)
[16:44:06] *** Quits: Vooloo (~Vooloo@user/vooloo) (Quit: Client closed)
[16:44:13] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[16:44:22] *** Quits: realies (~realies@user/realies) (Ping timeout: 268 seconds)
[16:44:22] *** realies8 is now known as realies
[16:47:02] *** Quits: stenno\OK (~stenno@user/stenno) (Ping timeout: 260 seconds)
[16:55:38] *** Joins: pulse (~pulse@user/pulse)
[17:01:15] *** Jackal-o-lantern is now known as octav1a
[17:04:39] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:07:47] *** Joins: kill (~killown@user/killown)
[17:09:51] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:11:02] *** Joins: jamea (~jamea@187.185.190.209)
[17:12:57] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:13:06] *** Joins: stenno\OK (~stenno@user/stenno)
[17:13:26] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[17:13:44] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:38d3:9326:aa1c:e2f4) (Quit: you are feeeling very sleeeeeepyy......)
[17:14:34] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 260 seconds)
[17:25:26] *** Quits: nomic (~nomic@185.192.69.57) (Quit: Leaving)
[17:25:45] *** Joins: nomic (~nomic@185.192.69.57)
[17:26:12] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:26:54] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-3856-c4d5-c4a0-19be.res6.spectrum.com) (Ping timeout: 268 seconds)
[17:30:02] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 260 seconds)
[17:30:32] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[17:31:13] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 268 seconds)
[17:35:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[17:35:55] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[17:35:55] *** Joins: wroathe (~wroathe@user/wroathe)
[17:36:09] *** Quits: x-x (~x@user/x-x) (Quit: leaving)
[17:36:38] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-3856-c4d5-c4a0-19be.res6.spectrum.com)
[17:39:15] *** Joins: zsoc (~zsoc@cpe-24-168-59-34.hvc.res.rr.com)
[17:43:10] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[17:45:09] *** Joins: kogepan (~kogepan@user/kogepan)
[17:45:39] <qswz> !ask @ pagios
[17:45:39] <jellobot> pagios, Don't ask to ask, nor if anyone is here or alive or uses something. Just ask your question. http://www.mikeash.com/getting_answers.html
[17:47:55] <pagios> qswz: https://dpaste.com/8GHVNT9HE
[17:48:19] <pagios> i am trying to get websocket towork between my reactapp and node, the ssl is on lets encrypt and valid i always getting websocket disconnected on client side
[17:48:59] <Decker> what'sthe code and reason you get in the close event?
[17:50:01] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Ping timeout: 256 seconds)
[17:52:01] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:56:34] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 260 seconds)
[17:57:16] *** Joins: incognito (~relativit@user/incognito)
[18:02:01] *** Joins: Kdev (~KDev@cpe-98-10-64-75.rochester.res.rr.com)
[18:03:02] <zsoc> what's the currently recommended way to get eslint to play nice with import/export (in the /src dir of a node project, but where /src is a react project that is being bundled)
[18:03:11] <zsoc> is it just to use plugin:import ?
[18:03:23] <zsoc> i dunno why i assumed the react plugin would take care of that heh
[18:03:53] <stenno\OK> webpack
[18:04:27] <zsoc> to... use some sort of webpack resolver plugin for eslint you mean?
[18:05:30] <zsoc> or i guess i could use the babel parser for it also, i seem to recall there being one of those before it could handle parsing modern es
[18:05:37] <stenno\OK> oh eslint
[18:05:57] <stenno\OK> https://www.npmjs.com/package/eslint-plugin-import ?
[18:06:09] <stenno\OK> but i never needed to add that
[18:06:11] <stenno\OK> i think
[18:07:35] <pagios> anyone?
[18:09:08] <zsoc> Oh, I can just add sourceType: module to the local eslint of the /src dir.... that feels a little wrong tho... but i don't need it to *resolve* the imports, just not complain about it heh, maybe i'll try it
[18:10:06] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[18:10:15] <zsoc> pagios: "always getting websocket disconnected on client side" is not really an actionable error. it doesn't describe whether it connects at all, or for how long. It could be something as simple as just timing out.
[18:10:38] <zsoc> Also those aren't.... "websockets", per se, it's socket.io which is a whole other can of worms (that also sort of includes websockets)
[18:10:53] <pagios> zsoc:  i was suspecting an ssl issue, but i did sign them fine now and they show as secure in the browser
[18:11:16] <zsoc> If the handshake shakes, then it's not an ssl problem.
[18:11:22] <stenno\OK> are you using wss ?
[18:11:24] *** Quits: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net) (Remote host closed the connection)
[18:11:31] <stenno\OK> wss protocol
[18:11:33] <pagios> i am using socket.io wss
[18:11:56] <stenno\OK> also SOP applies
[18:12:10] <pagios>     transports: ["websocket"],
[18:12:10] <pagios>       secure: true,
[18:12:37] <Decker> do you get any frames on either side?  do you really know it's the client?  Are you just dropping the socket without actually setting any callbacks for it?
[18:12:58] *** Joins: lilmonkey` (~lilmonkey@user/lilmonkey)
[18:13:37] <pagios> on node i get "client connect" on client side i get that object with connected: false
[18:14:05] *** Quits: lilmonkey (~lilmonkey@user/lilmonkey) (Ping timeout: 268 seconds)
[18:14:32] <qswz> pagios: you're using react-scripts there right? not browserify
[18:14:38] <pagios> yes
[18:14:46] <pagios> import SocketIO from "socket.io-client";
[18:15:04] <pagios> i even tried browserify with require 'socket.io-client' same
[18:15:05] *** Joins: trms (~trms@176.88.78.96)
[18:15:11] <stenno\OK> maybe an async issue
[18:15:12] <AlbertLast> is websocket still a thing, when http 2 is available?
[18:15:25] <stenno\OK> AlbertLast: http/2 is not a replacement for websockets
[18:15:36] <qswz> and what's your issue? the socket gets closed? when does it happen? as a timeout, or after the webpck-dev-server updates the view for example?
[18:15:59] <stenno\OK> AlbertLast: https://stackoverflow.com/questions/28582935/does-http-2-make-websockets-obsolete
[18:16:00] <qswz> AlbertLast: it's more http3/spdy nowadays
[18:16:02] <pagios> qswz: as soonas the page loads i get that object with disconnected
[18:16:10] <AlbertLast> stenno\OK: sure is not, but i got many of the features?
[18:16:17] <stenno\OK> some features yes
[18:16:20] <stenno\OK> read the SO post
[18:16:23] *** Quits: trms (~trms@176.88.78.96) (Client Quit)
[18:16:27] <Decker> websocket is not related to http2 - whether either is a 'thing'
[18:16:46] <zsoc> http2 doesn't replace websockets or anything even like it
[18:16:54] <pagios> qswz: https://dpaste.com/CXG6L7V6G
[18:17:10] <pagios> thats the client side
[18:17:27] <stenno\OK> and connect doesn't return a promise?
[18:17:57] <pagios> it returnas the object i pasted
[18:18:07] <AlbertLast> k
[18:18:18] <zsoc> You should really be setting your connect object into a useState var there...
[18:18:28] <zsoc> sorry, the `socket` i mean
[18:18:34] <pagios> ah!
[18:18:41] <zsoc> otherwise you have no way of having your component be reactive based on the socket state
[18:18:42] <pagios> you think its re-rendering and losing its state
[18:18:53] <pagios> let me try that
[18:18:59] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:19:12] <pagios> zsoc: but it is in a useEffect, running once
[18:19:16] <pagios> shouldnt lose the state no ?
[18:19:20] <zsoc> yes, and it's stuck in there forever :p
[18:19:35] <pagios> what do you mean stuck in useEffect?
[18:19:37] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[18:19:39] <zsoc> useEffect is basically a black box, you have no access to that after it runs (except in the cleanup function sort of that you aren't using)
[18:20:07] <zsoc> if you're doing `let socket =....` and magically expecting that variable to be available outside of the useEffect fn, you are... wrong lol
[18:20:32] <pagios> zsoc: i am doing a console.logsocket inside useEffect
[18:20:40] <Decker> is there an onopen event?
[18:20:47] <Decker> it says (data) not (socket)
[18:20:52] <zsoc> right, which runs way before anything connects (although there's "live" console, but who knows wtf that shows)
[18:21:15] <pagios> zsoc: so what is your suggestion
[18:21:43] <zsoc> const [socket, setSocket] = useState(null); or something like that... even if just for debugging since i have no idea what you're actually doing
[18:21:55] <pagios> https://imgur.com/a/4fqFCzl <--- socket
[18:22:08] <zsoc> and set some events for connect / disconnect / message so you can stop *guessing* what is happening lol
[18:22:27] <pagios> i am simply connecting to a socket.io , nothing more
[18:22:29] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[18:22:34] <Decker> right - since it's non async it has to return and cannot be connected
[18:23:30] <pagios> huh
[18:23:38] <Decker> new Websocket() is non-wait... it doesn't block until it connects
[18:23:38] <zsoc> You should start by understanding how react hooks work
[18:23:44] <pagios>  let socket = SocketIO(serverUrl, opts); <-- rtgis is sync not async
[18:23:56] <pagios> zsoc:  i do understand it
[18:23:58] <zsoc> Literally every single useEffect example i can find shows setting what is happening in useEffect into a useState var :p
[18:24:28] <zsoc> The creation of the SOCKET is sync, not the socket connecting to anything / doing anything
[18:24:30] <pagios> i dont understand why you want the socket in a state though
[18:25:04] <pagios> zsoc:  yes i have a async function callback to get the events and communicate later on with socket.io server
[18:25:06] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 260 seconds)
[18:26:02] *** Quits: brachamh (~brachamh@user/brachamh) (Ping timeout: 260 seconds)
[18:26:29] *** Joins: brachamh (~brachamh@user/brachamh)
[18:26:33] <zsoc> i mean, why not just don't something like socket.onAny((name, ...args) => console.log(`event: ${name}, args:`, args)) or something? Unless socket.io magically shoves everything into the console already or has a debug mode.
[18:26:41] <zsoc> you don't seem to know what is happening past you do a console.log and see "Disconnected"
[18:26:51] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:26:51] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:26:51] *** Joins: wroathe (~wroathe@user/wroathe)
[18:26:58] <zsoc> is there any connection event? does the  handshake happen? what is the disconnection code? is there a frame sent from the server? etc
[18:27:40] <Decker> looks like a canddiate for GC to me... does react reinterpret code and rewrite the functions to have other states available somehow?
[18:27:54] *** Joins: johnjay (~pi@192.142.100.50)
[18:28:34] <zsoc> Right, for all i know that socket gets destroyed if it's in useEffect and then not added to the component state anywhere... i have no idea because I've never bothered to do something that odd :p
[18:28:52] *** Joins: REZZ (~rezz@185.214.141.38)
[18:29:31] *** Quits: tdwamdors^ (~tdwamdors@wsip-98-188-242-6.mc.at.cox.net) (Remote host closed the connection)
[18:31:34] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[18:31:48] <Decker> it is expectd that immediately after creating the socket it's in a closed state - that 'disconnected' seems to be just !connected,rather than 'was connected and is NOW disconnected' would make more sense... BUT you're not then handling an on-open with a callback, so GC should sweep it up
[18:32:03] <Decker> the open will probably mostly happen to the server but some point along the handshake the close will happen
[18:32:49] *** Quits: harpia (~harpia@2804:2aec:204:f500:4906:c4ad:bdbe:1b9d) (Quit: harpia)
[18:34:42] <pagios> i get multiple https://imgur.com/a/A4m4vYd on node
[18:34:50] <pagios> weird..
[18:38:40] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[18:45:57] *** Joins: zeromule (~eric@2601:602:8d80:4e50:c8ec:532e:af93:70b0)
[18:47:38] <zsoc> did you do... any of the things i suggested?
[18:48:01] <zsoc> it should take less < 30 seconds to add the component state to store the socket in and then add the onAny listening so you can get the actual events happening in the client console
[18:50:30] <pagios> yes i tried
[18:50:31] <pagios> same
[18:50:42] <zsoc> right but what did the *console* show?
[18:50:51] <pagios> one object only and disconnected state
[18:51:03] *** Quits: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[18:51:06] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[18:51:24] <zsoc> if you added a socket.onAny listener then you would also see all of the events... including the connecting and disconnecting ones (assuming it's doing any of that)
[18:51:33] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[18:59:21] <pagios> zsoc: the client is not connected so cant receive anything yet
[18:59:31] <pagios> it refuses to connect
[19:00:20] <zsoc> But before you said it connects and then disconnects. So which is it? The easy well to tell would be adding the onAny and then showing us the full output of all the events that happen as it attempts to connect. This is probably why people weren't willing to help you earlier.
[19:02:01] <pagios> zsoc: on node side it says connected, not sure if it really connects coz on react side it says disconnected
[19:02:10] <pagios> many events fire on node side, like 5 onnects in a row
[19:02:59] <zsoc> Great, now show me what the client says *on the browser side* (not a simple log of the socket object, that is useless) - show me the client events in the order they happen (and also check network tab for something like OPTIONS / preflight / CORS issues)
[19:04:56] <pagios> zsoc: https://dpaste.com/AM5MJYVQ9
[19:05:01] <pagios> thats the network tab
[19:05:12] <pagios> on react side the events are not triggered even the "any"
[19:06:12] <zsoc> IMMEDIATELY after creating the socket object, on the next line, if you do "socket.onAny((eventName, ...args) => { console.log(eventName, args) });" you're telling me you get no additional console output?
[19:07:55] <Decker> so it iddn't get the http reply? ... the browser (chrome) throws an error log message when sockets fail because of secuity
[19:07:58] <Decker> firefox used to
[19:08:03] <zsoc> alternatively, you can start your node app with `DEBUG=engine,socket.io* node server.js` (or whatever your entry point is) to get additional debug output on the server console... but the client data is really more useful here
[19:08:51] <zsoc> ^ Right, all that is is the network REQUEST for the socket upgrade request... it doesn't tell us much :p
[19:09:11] <pagios> zsoc:  yes no output with the onANy
[19:09:55] <pagios> zsoc: the socket.ios servers works with other clients , not with my create-app
[19:10:24] <pagios> i am using firefox only
[19:12:12] *** Joins: leviathan (~leviathan@2600:1700:dad0:9870:c5d0:e6a5:8be:5a4c)
[19:12:31] <zsoc> and there's NOTHING else in your browser console? You have the console "level" set the highest? "debug" or whatever. There's no CORS error message?
[19:13:31] <Decker> websockets doesn't cors afaict
[19:13:42] <pagios> zsoc:  Decker https://imgur.com/a/gNIWXxF
[19:13:45] <pagios> with debugging
[19:13:58] <pagios> i dunno why i am getting a flood of these
[19:14:03] <zsoc> @Decker: afaik, it does, but only on the original upgrade request
[19:14:22] <pagios> zsoc: no CORS no
[19:14:33] <zsoc> @pagios: do you have other active clients currently on this server besides this one you're testing in the browser?
[19:14:34] *** Joins: daoudr (~daoudr@2a02:1205:c690:ca10:1d6:6982:9414:1a59)
[19:14:40] <pagios> no zsoc
[19:14:56] <zsoc> then it looks like it's connecting successfuly... and repeatedly :p
[19:15:22] <pagios> but i cant catch it on react side
[19:15:26] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[19:15:28] <pagios> the eents are not firing...
[19:15:35] <Decker> it does have a reconnect option enabled
[19:15:36] <zsoc> can you show the entire react component as it currently is
[19:15:45] <pagios> u think its a redneing issue on react? reloading the components? but i tried to console.log to see if i have re-renders and it is not
[19:15:48] <pagios> sure
[19:16:19] <Decker> but then that's all writes and not nessecarily any reads - they could be queued events still waiting to go out the network... (I know 0 about socketio)
[19:16:28] <pagios> zsoc: https://dpaste.com/G7KV68A6G
[19:17:10] <Decker> but that other one was the server side - client is still logging nothing?
[19:17:18] <pagios> yes
[19:17:20] <pagios> client logging nothing!
[19:17:21] <Decker> crazy.
[19:17:26] <zsoc> pagios: .... you're creating the socket in the main body of the component
[19:17:28] <pagios> been on this for 2 days
[19:17:33] <zsoc> it will recreate every time the component reloads
[19:17:34] <Decker> totally cra-cra
[19:17:48] <pagios> zsoc:  i know, i included before in a useEffect
[19:17:53] <pagios> to run once too, same
[19:17:55] <zsoc> so change it back, then show me that code
[19:18:01] <pagios> the component is not getting re-rendered
[19:18:09] <pagios> ok
[19:20:01] <pagios> zsoc: https://dpaste.com/C6WKMZ3L7
[19:20:41] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Ping timeout: 256 seconds)
[19:20:52] <pagios> on client side my code: https://dpaste.com/C6WKMZ3L7 ,    on node side i get this: https://imgur.com/a/gNIWXxF.      on client side none of the callbacks are called
[19:21:41] *** Joins: Harlin (~DonQixote@75-163-172-250.clsp.qwest.net)
[19:22:45] *** Joins: WishBoy (~WishBoy@user/wishboy)
[19:23:18] <zsoc> fwiw i don't see any support for a wild card event like "*" OR an "open" event, so i don't know where you got those ideas from
[19:23:42] <zsoc> usually you want the "connection" event but the .onAny should cover everything
[19:26:22] <zsoc> ah it's actually "connect" and not "connection".... socket io docs are *so bad* lol
[19:27:24] <pagios> i give up
[19:31:13] *** Joins: ckdCreations (~ckdCreati@147.55.133.137)
[19:32:15] *** Joins: voltage_ (voltage@user/voltage)
[19:32:30] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:35:45] <pagios> zsoc: progress, https://pasteboard.co/yAMgApZobqFN.png i see it in the client Buffers but not getting into the callbacks
[19:36:07] <pagios> and not sure why getting "2" replies
[19:36:29] <zsoc> Then this is just a failure somewhere in the docs, maybe the version of socket io isn't the same one you're looking at the docs for... i dunno, but if you have all of these event listeners and none of them are giving you any output, then there's a disconnect somewhere
[19:36:49] <zsoc> maybe you're connecting them to the wrong object or something, i dunno, socket io is a mess and i refuse to use it for websockets partially because of the docs and version breaking heh
[19:37:35] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:37:39] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[19:43:11] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 246 seconds)
[19:43:25] <jaawerth> looking for opinions; when interviewing for a non-junior fullstack dev position, how much would you weigh someone getting stumped on avoiding prototype collisions (user input where one of the entries is, say, `toString`)? I threw it out there as a curveball after they solved the initial problem I gave them in a way that worked but had that as an edge case, but they hit a wall finding a way
[19:43:27] <jaawerth> around it, which surprised me...
[19:43:41] <jaawerth> It's something you can learn easily if you've got logic down, but I would expect someone with a lot of JS experience to be at least be able to describe a one of the ways to avoid it. Am I being too harsh?
[19:43:57] <jaawerth> (well, strict, rather than harsh)
[19:45:02] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 268 seconds)
[19:45:21] <samsch> jaawerth, tbh, I don't know that I'd expect a mid-level dev to necessarily know that one.
[19:46:55] <zsoc> I assume your actual question was more detailed than what you just described?
[19:46:57] <samsch> It seems pretty plausible to have done significant JS work without running into that as ap roblem
[19:47:10] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:48:35] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[19:50:04] <jaawerth> zsoc: well the actual question was building up a structure counting occurrences of words in a sentence, which they were able to do pretty cleanly
[19:50:06] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[19:50:35] *** Quits: zeromule (~eric@2601:602:8d80:4e50:c8ec:532e:af93:70b0) (Ping timeout: 268 seconds)
[19:50:40] <jaawerth> so I wasn't expecting them to have already done it in a way that wouldn't have that as a bug, it was more the running into a wall that took me by surprise
[19:51:12] <jaawerth> samsch: thanks, i was convincing myself as much but I wanted a second opinion before I let it slide
[19:51:50] <zsoc> Ah so... they were like reducing over an array of words, keeping the total count on a property of the word itself on the accumulator? that makes sense then ya
[19:52:01] <jaawerth> yeah exactly
[19:52:08] <jaawerth> so I was like "ok now what if toString is in the sentence"
[19:52:30] <jaawerth> well I explained it better than that haha
[19:52:31] <zsoc> Honestly I think I'm pretty like... you know... okay at this javascript stuff. My immediate answer would be to pass in the starting accum object as null prototype
[19:52:57] <jaawerth> yep, I would either use a Map or do that, with my third option being to .hasOwnProperty
[19:53:18] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[19:53:28] <zsoc> Ah okay, I wasn't positive my gut was even decent... i could think of reasons you would never want null prototype objects lol. Map maybe would have come to me after a minute... I could see being stumped on it purely from nerves tho.
[19:54:33] <jaawerth> yeah same, just wanted to bounce it off folks before I rolled with that interpretation
[19:54:40] <samsch> Took me a second to figure out how it would actually fail, but it's on the check for initial existence, yeah. Map is my preference too
[19:55:31] <jaawerth> it was actually pretty funny how it ended up looking in practice
[19:55:33] <samsch> Even then though, `typeof obj[word] === 'number'` would still pass.
[19:55:41] <jaawerth> we ended up tinkering with it together
[19:56:42] *** Joins: shoky_ (uuuggg@141.226.193.67)
[19:57:05] <jaawerth> yeah any of hte above would work. fortunately I was also the first of 3 interviews so I don't have to be the only one making a call as the first one of the day, too. we ended up losing more it time to that live-code example than I'd planned for (which I try to keep simple since I mostly just want to see if people can JS on the fly at all)
[19:57:26] <qswz> Symbol is my way to avoid name collisions
[19:57:51] <qswz> or just a proper schemas, and subdivisions
[19:58:04] <zsoc> symbol is generally my way to make sure no one can arbitrarily change a thing on my things lol
[19:58:07] <jaawerth> Symbol.for would be a unique solution to that haha
[19:58:48] <jaawerth> I think a Map is a better structure for this usecase than a POJO but it's not something I'd fight people over
[19:59:32] <jaawerth> and Object.create(null) would IMO be the cleanest ES5 way but using .hasOwnProperty to do the presence check before setting a count would also be totally legit. Symbol.for would be a fun way to watch someone write though
[20:00:35] <qswz> yea before records
[20:01:04] <qswz> record should be the new Object.create(null)
[20:01:10] *** Quits: stenno\OK (~stenno@user/stenno) (Ping timeout: 260 seconds)
[20:01:10] *** Joins: harpia (~harpia@143.208.84.235)
[20:01:38] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-3856-c4d5-c4a0-19be.res6.spectrum.com) (Ping timeout: 260 seconds)
[20:02:35] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-3856-c4d5-c4a0-19be.res6.spectrum.com)
[20:03:32] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[20:08:03] <samsch> The worst part of Map is that it doesn't have an immutable form
[20:09:50] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:c4a9:c7ba:9c0c:503b)
[20:10:33] <jaawerth> well, nothing in JS does except primitives :P
[20:10:54] <jaawerth> I'd say the biggest reason folks don't use it is the lack of bidirectional JSON serialization out of the box
[20:11:04] <samsch> That is also a bummer
[20:11:53] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:12:58] <samsch> Also not being able to create a map from an object directly is kinda a bummer. Have to add in the extra Object.entries call.
[20:14:27] <jaawerth> I see that as pretty minor by comparison to the JSON thing since the JSON thing also means you have to come up with a custom way to express it in serialized JSON so you know hot to turn it back into a Map (or just do it in context of what you're parsing)
[20:14:28] <Decker> so use a {} instead of new Map(); and freeze it :)
[20:15:15] <Decker> (JSOX added a custom 'map{}' tag to revive maps as maps)
[20:15:26] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:15:43] <jaawerth> yeah there are for sure JSON supersets that handle it fine
[20:16:05] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 246 seconds)
[20:16:53] *** Joins: DnzAtWrk (~DnzAtWrk@1175.pc.puv.fi)
[20:16:54] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[20:16:58] <qswz> yea Map is the answer for the specific counting question you had
[20:17:07] <qswz> surprising they didn't use it
[20:17:46] <samsch> I've been using both Map and Set more recently, for denormalizing
[20:20:09] *** Joins: zeromule (~eric@2601:602:8d80:4e50:c8ec:532e:af93:70b0)
[20:20:17] *** Joins: stenno\OK (~stenno@user/stenno)
[20:22:02] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[20:22:11] <qswz> there's Object.fromEntries/entries for denormalizing too
[20:22:23] <qswz> or Record.fromEntries
[20:22:37] <qswz> b> Record.fromEntries
[20:22:40] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[20:23:23] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[20:24:00] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[20:24:30] *** Quits: DnzAtWrk (~DnzAtWrk@1175.pc.puv.fi) (Ping timeout: 260 seconds)
[20:25:11] <jaawerth> I would have been fine with any solution tbh
[20:26:21] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[20:26:34] <jaawerth> well it would have been weird to replace it with a sorted a ray + binary search but that would get novelty points lol
[20:27:23] <samsch> Use an object, but the count is the key, and the word is the property value, so you never conflict with toString, but you also can't have two words with the same count, and you have to iterator over the whole thing to find by the word
[20:29:09] <qswz> lol is it serious?
[20:29:39] <samsch> nah, just shitposting
[20:30:21] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:30:25] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[20:30:37] <qswz> as an interview, I'd ask to make a quick recurive descent json parser
[20:31:22] <qswz> and then to make a json-line streaming parser
[20:31:43] <qswz> that gives values as soon as possible during receiving
[20:31:45] *** Joins: DnzAtWrk3 (~DnzAtWrk@1175.pc.puv.fi)
[20:31:54] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:c4a9:c7ba:9c0c:503b) (Ping timeout: 268 seconds)
[20:31:55] <samsch> As a candidate, I be like... y tho?
[20:32:23] <qswz> "to test your gray matter boy"
[20:32:29] <systemfault> I'd be more like... "Bye!"
[20:32:51] <Kirjava> does a streaming json parser only make sense when your top level item is an array
[20:33:07] <Kirjava> I guess you could just do it for top level objects too
[20:33:11] <qswz> Kirjava: yes
[20:33:14] <Kirjava> just properties being added in anj ad hoc way
[20:33:35] <qswz> json-line is just a spreaded array over lines
[20:33:43] <Kirjava> righto
[20:34:00] <Kirjava> I mean I remember implementing json in parser combinators and it definitely took over an hour :P
[20:34:02] <qswz> {"x": 3}\n{"x": 2}\n...
[20:34:11] <Kirjava> aha yeah i think i've even seen that before
[20:34:52] <qswz> it's way to go when you've long processing sending or reception
[20:35:14] <Kirjava> yea makes sense as a non-binary format
[20:36:14] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[20:38:12] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:39:02] *** Quits: DnzAtWrk3 (~DnzAtWrk@1175.pc.puv.fi) (Ping timeout: 260 seconds)
[20:39:35] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[20:40:31] *** Quits: c4017_ (~c4017@2604:3d08:747f:7c90:6046:e4ad:26c5:665) (Ping timeout: 245 seconds)
[20:41:08] *** Joins: zyweo (~Svew@user/zyweo)
[20:42:09] *** Joins: realies3 (~realies@user/realies)
[20:42:26] *** Joins: Rockwood (~Rocky@user/rocky)
[20:43:37] *** Quits: realies (~realies@user/realies) (Ping timeout: 268 seconds)
[20:43:37] *** realies3 is now known as realies
[20:46:33] *** Joins: jbiggs (~quassel@mta.banff.ca)
[20:48:46] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[20:48:49] <jaawerth> lol, that's hardcore. I love parsing so I would enjoy that but it would be a very mean question otherwise assuming the project didn't involve any ;-)
[20:49:05] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Ping timeout: 256 seconds)
[20:49:21] <fweht> the `getBBox()` method returns a thing which i can console log but `JSON.stringify()` on it returns an empty  object?  maybe because of setters/getters?
[20:50:22] <qswz> yes
[20:50:31] <fweht> cool thx
[20:50:54] <qswz> !mdn getBoundingClientRect
[20:51:02] <jaawerth> that isn't the same as getBoundingClientRect
[20:51:08] <jaawerth> I think getBBox is an svg method
[20:51:41] <jaawerth> yeah https://developer.mozilla.org/en-US/docs/Web/API/SVGGraphicsElement/getBBox#return_value
[20:51:43] <qswz> yer right
[20:52:02] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[20:52:38] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[20:52:43] <jaawerth> I would expect the x and y to be ennumerable on the returned SVGRect so TIL it isn't lol
[20:52:47] <qswz> n> Object.seal({src: 'https://www.youtube.com/watch?v=WXgZVpMG4wE'})
[20:53:22] <qswz> what's the point of getters there?
[20:53:41] <qswz> cnat's those method on getBBox or bounding rect return an immutable object, weird
[20:53:59] <qswz> they don't even have setters
[20:54:16] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[20:54:54] *** Joins: Rockwood (~Rocky@user/rocky)
[20:55:21] <jaawerth> well it doesn't say in the docs that they're getters so I still don't know if they are? and since they're supposed to be values at that point in time I rather than live I don't know what the benefit of getters would be -if they were live it'd make sense that they're getters I suppose, and maybe for the snapshot version it keeps the same interface
[20:56:10] <qswz> yea, so just strangely hidden fields, to complicate dev lives
[20:56:57] <fweht> aah cool  maybe getBoundingClienRect solves my problem, will check it out1
[20:57:11] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[20:57:33] <qswz> r = document.body.getBoundingClientRect(); Object.keys(r) // []
[20:57:55] <fweht> https://www.irccloud.com/pastebin/MuidjnST/
[20:58:23] <fweht> sorry i dont know why this got pastebinned, anyway jaawerth
[20:59:21] <qswz> n> `${new class{ toSting(){return 'https://www.youtube.com/watch?v=C3lWwBslWqg'} }}`
[20:59:55] <qswz> toString(){return this.toSting()}
[21:05:06] *** Quits: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl) (Ping timeout: 260 seconds)
[21:05:12] <jaawerth> fweht: ah it's because not only are they getters but they're getters on SVGRect.prototype - JSON.stringify wouldn't wouldn't them by default because they aren't "own properties" but inherited ones
[21:05:25] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:a584:300e:8b6:5c5d)
[21:05:42] <qswz> .toJSON works well getBoundingClientRect
[21:05:46] *** Quits: harpia (~harpia@143.208.84.235) (Quit: harpia)
[21:05:56] <qswz> yea because it's inherited as you say
[21:06:30] *** Quits: zeromule (~eric@2601:602:8d80:4e50:c8ec:532e:af93:70b0) (Ping timeout: 260 seconds)
[21:06:47] <qswz> actually using rect.toJSON() is pretty neat
[21:07:05] <qswz> gives exactly what you're after as an object
[21:07:45] <qswz> will try to remind this, other scenario where I use  .toJSON is date.toJSON.slice(0,10)
[21:07:51] <qswz> ()*
[21:09:01] <jaawerth> doesn't appear to exist on SVGRect or JSON.stringify would also work since JSON.stringify should invoke toJSON if present
[21:09:21] <qswz> oh, only for DOMRect
[21:09:35] <qswz> SVG is old shit often
[21:10:07] <jaawerth> yeah the fact that it's treated as XML not HTML can lead to some odd differences sometimes
[21:10:44] <qswz> man, marked is annoying ~ triggers strikethrough instead of ~~, we had some text "bla (~60%), or shit (~70%) and marked stroke it lol
[21:10:54] *** Joins: zero (~z@user/zero)
[21:10:58] <qswz> gonna try to replace it by marldown-it which is much saner
[21:11:36] <qswz> although marked maintance is pretty good, lots of upgrades, but well, not as flexible as markdown-it
[21:12:53] <qswz> if I make amarkdown lib, will name it Marquise
[21:12:56] *** Joins: sam_1 (~sam_1@87.51.251.118)
[21:13:15] *** Quits: rostero (uid236576@id-236576.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:13:25] <qswz> marquessa
[21:13:52] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:14:02] <jaawerth> can you put a marquee in the marquise output
[21:14:09] <zero> just to make sure: it's ok to do something like `function (a, b = a?.p) { return b }` right?
[21:14:11] <qswz> hah
[21:14:12] <zero> it seems to work
[21:14:18] <qswz> jaawerth: with GFM
[21:14:29] <qswz> zero: yea ofc
[21:14:41] <jaawerth> zero: it's legal but whether it's a good idea is an open question :)
[21:14:42] <zero> ok thanks
[21:14:42] <qswz> you can even make cool things like:
[21:14:55] <jaawerth> from a readability perspective I mean
[21:15:32] <jaawerth> looks fine to me in that context but I couldsee it getting gnarly in a more complex function
[21:15:41] *** Joins: harpia (~harpia@2804:2aec:204:f500:4906:c4ad:bdbe:1b9d)
[21:15:52] <qswz> n> (({a: {b, c}, a, b = a?.b}) => [a, b, c])({a: {b:'b', c:'c'}})
[21:15:55] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[21:16:00] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[21:16:08] <qswz> look at how a is twice at the root
[21:16:12] <qswz> one destructured one not
[21:16:28] <qswz> I love the bot silent mode
[21:16:45] <qswz> Uncaught SyntaxError: Duplicate parameter name not allowed in this context hmmshit
[21:17:14] <qswz> it used to work I think
[21:17:19] <qswz> interersting
[21:17:30] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[21:17:33] *** Quits: amcsi_ (~amcsi@2E8BA2D1.catv.pool.telekom.hu) (Ping timeout: 268 seconds)
[21:18:15] *** Joins: DnzAtWrk (~DnzAtWrk@1175.pc.puv.fi)
[21:19:00] <qswz> (({a: {b}, a}) => [a, b])({a: {b:'b', c:'c'}}) // works
[21:19:14] *** Joins: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl)
[21:19:58] <qswz> (({a: {b}, a, c=a?.b}) => [a, b, c])({a: {b:'b', c:'c'}}) // works, so I don't know what I messed up before
[21:20:16] <qswz> oh I see, duplicate c, sry
[21:20:22] <qswz> duplucate b*
[21:20:38] *** Quits: harpia (~harpia@2804:2aec:204:f500:4906:c4ad:bdbe:1b9d) (Ping timeout: 268 seconds)
[21:24:10] *** Joins: zeromule (~eric@2601:602:8d80:4e50:c8ec:532e:af93:70b0)
[21:25:33] *** Quits: DnzAtWrk (~DnzAtWrk@1175.pc.puv.fi) (Ping timeout: 268 seconds)
[21:26:47] *** Quits: guniberas (~guniberas@42.191.188.121) (Ping timeout: 268 seconds)
[21:26:53] *** Joins: node1 (~node1@user/node1)
[21:27:21] <qswz> imagine HTML introduce a markdown element <mark>
[21:28:02] <zero> i div not kill her
[21:28:45] <qswz> not in your life span
[21:28:55] *** Quits: kmh (~kmh@2a00:6020:5004:6800:c8b7:6e2b:764b:7b1d) (Read error: Connection reset by peer)
[21:29:08] *** Joins: kmh (~kmh@2a00:6020:5004:6800:c8b7:6e2b:764b:7b1d)
[21:29:39] *** Joins: jamea77 (~jamea@10.189-202-213.bestelclientes.com.mx)
[21:29:53] *** Quits: stenno\OK (~stenno@user/stenno) (Ping timeout: 268 seconds)
[21:31:26] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:31:44] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[21:31:47] <zero> :)
[21:32:14] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 260 seconds)
[21:33:41] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[21:35:08] <pagios> whats a good alternative to this ugly scoket.io, its full of shit and bugs
[21:35:23] <pagios> each version behaves in a different way
[21:35:25] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-3856-c4d5-c4a0-19be.res6.spectrum.com) (Ping timeout: 268 seconds)
[21:35:38] *** Joins: paule32 (~paule32@user/paule32)
[21:35:50] <qswz> try vanilla js
[21:35:59] <qswz> just 0.2kB
[21:36:07] <qswz> includes WebSocket
[21:36:33] <qswz> and also fetch that you can use with long polling
[21:36:39] <qswz> long life vanilla
[21:36:50] *** Quits: jamea77 (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 260 seconds)
[21:36:57] <pagios> qswz: i need the server and client side
[21:37:10] <qswz> node.js isthere for you
[21:37:11] <pagios> can you .emit and broadcast ?
[21:37:29] <pagios> need the features of socket.io
[21:37:39] <Rockwood> nn
[21:37:43] <qswz> there's a ws lib, or for long-polling, nodejs express does it
[21:38:13] <ljharb> pagios: let's move that to #node.js, and please don't cross-post in the future
[21:38:13] <Rockwood> nodejs is similar like socket.lo?
[21:38:29] <ljharb> Rockwood: lol what
[21:39:19] <ljharb> qswz: .toSting() , lol
[21:39:22] <Rockwood> are nodejs express and socket.lo similar thing?
[21:41:00] *** Joins: Guest497 (~Guest49@pool-173-66-93-68.washdc.fios.verizon.net)
[21:41:47] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:43:09] <ljharb> annnd they quit
[21:43:12] <qswz> https://replit.com/@caub/markdown-it-lins#index.js
[21:43:26] <qswz> I didn't quit yet
[21:43:32] <ljharb> btw anyone who maintains a lot of repos may find https://twitter.com/ljharb/status/1455235051239530496 interesting
[21:43:33] *** Joins: earendel (uid498179@user/earendel)
[21:44:36] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[21:45:00] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:45:21] *** Quits: abirkill (snoopy@d172-218-198-90.bchsia.telus.net) (Quit: Let us prepare to grapple with the ineffable itself, and see if we may not eff it after all.)
[21:45:27] <qswz> makes sense, helpful for students and for maintainers as long as they don't do shit
[21:45:54] <qswz> like injecting malwares :D
[21:46:07] *** Joins: stenno (~stenno@user/stenno)
[21:46:26] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:47:50] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:48:46] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:50:11] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:50:47] *** stenno is now known as stenno\OK
[21:51:35] *** Quits: stwange (~j@82.21.202.140) (Quit: Leaving)
[21:53:30] *** Joins: abirkill (snoopy@d172-218-198-90.bchsia.telus.net)
[21:54:29] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[21:55:15] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[21:58:13] *** Joins: jazzy (~jaziz@user/jaziz)
[21:58:59] *** Joins: tonelo (~tonelo@host-95-252-57-185.retail.telecomitalia.it)
[22:00:29] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Quit: Leaving)
[22:00:34] <lantech19446> qswz: you were helping me with this on Friday or Saturday with the jquery shit, I get an error now that says jquery is undefined but I thought you said it didn't have to be defined anywhere. Should I just ignore that?
[22:01:14] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[22:01:29] <qswz> lantech19446: what guves this error?
[22:01:34] <qswz> gives*
[22:01:36] <lantech19446> console
[22:01:57] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[22:02:08] <qswz> I know but more precisely, try to identify what lib or thing emits it
[22:03:17] <qswz> you might have some 3rd oarty lib that needs it, so yea you could add jquery, just before that lib
[22:03:27] <qswz> but you might not need jquery on every pages
[22:03:56] <lantech19446> it's still that email script that pertains to mailchimp. I thought you rewrote that for me without jquery in it
[22:06:04] <lantech19446> i could have sworn you did but i can't find it searching for it
[22:07:32] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[22:07:49] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[22:08:17] *** gitesh is now known as g1t3sh
[22:08:22] *** Joins: silly (~silly@user/silly)
[22:10:37] <peteyboy1> anyone willing to answer my Q in #css?
[22:11:07] <peteyboy1> ahh of course, you might not see it if you enter there after the message is left...
[22:12:02] <lantech19446> I saw your question pete but I don't know the answer :(
[22:12:24] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[22:16:13] <lantech19446> qswz: it seems like all our messages from the other day were purged which I don't understand because my server should keep them until I restart it
[22:16:39] *** g1t3sh is now known as gitesh
[22:17:00] *** Quits: Harlin (~DonQixote@75-163-172-250.clsp.qwest.net) (Quit: Leaving)
[22:17:37] <peteyboy1> lantech19446, no worries
[22:19:13] <lantech19446> yea i'm just still really new to everything and I know nothing about scss
[22:19:26] <lantech19446> beyond the fact that it requires a preprocessor at least
[22:21:24] <qswz> oh man
[22:21:39] <qswz> the moment you realize repl.it is running node v12
[22:21:53] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[22:22:37] <qswz> lantech19446: it's easy to rewrite without jquery
[22:22:43] <qswz> show the original again
[22:23:43] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[22:23:58] <lantech19446> qswz: I was right you did rewrite it for me it's in my vscode it never made it to the production site it must have been in the wrong branch
[22:24:00] *** Joins: Harlin (~DonQixote@75-163-172-250.clsp.qwest.net)
[22:24:56] *** Quits: Guest497 (~Guest49@pool-173-66-93-68.washdc.fios.verizon.net) (Quit: giving up)
[22:27:10] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:27:48] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[22:28:11] <lantech19446> qswz: yep it's in my changes branch and somehow i was never given the ability to merge it
[22:32:47] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[22:36:18] <lantech19446> sometimes i really fucking hate git
[22:39:38] *** Joins: Nachtgespenst (~user@user/siracusa)
[22:44:36] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[22:45:03] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:43] *** Quits: zeromule (~eric@2601:602:8d80:4e50:c8ec:532e:af93:70b0) (Ping timeout: 268 seconds)
[22:47:40] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[22:49:17] *** Quits: nomic (~nomic@185.192.69.57) (Quit: Leaving)
[22:52:12] <ljharb> git is awesome
[22:52:21] <ljharb> "ability to merge" is a github thing tho, not a git thing
[22:54:25] <qswz> and it's better to be late merging than too early
[22:55:36] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:a86f:1f20:803d:2891) (Ping timeout: 268 seconds)
[22:58:05] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d482:ac12:2161:fb6a)
[22:58:22] *** Joins: zeromule (~eric@2601:602:8d80:4e50:c8ec:532e:af93:70b0)
[22:59:05] <qswz> https://twitter.com/gitlost
[22:59:06] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Read error: Connection reset by peer)
[22:59:59] *** Joins: nomic (~nomic@185.192.69.57)
[23:00:22] <stenno\OK> https://git-man-page-generator.lokaltog.net/
[23:01:05] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[23:01:38] <qswz> git-whisper-creds
[23:02:40] *** Joins: incognito (~relativit@user/incognito)
[23:03:09] <stenno\OK> git-lessen-tip should be used when you want to lessen the current tip of a downstream value and the file, and only want to reflog to a deep delta.
[23:04:37] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[23:08:30] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:12:04] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Bye)
[23:15:54] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[23:16:14] <qswz> haha
[23:16:21] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[23:16:32] <qswz> git lvl over 9000
[23:16:33] *** Quits: realies (~realies@user/realies) (Ping timeout: 268 seconds)
[23:16:34] *** realies1 is now known as realies
[23:16:44] <qswz> I can reflog a bit
[23:16:56] <stenno\OK> love that manpage generator
[23:17:06] <stenno\OK> its so close to the truth if you read the actual git manpages lol
[23:17:44] <qswz> oh, didn't even realize it's a joke
[23:18:16] <stenno\OK> lmao
[23:18:24] <stenno\OK> refresh the page :)
[23:18:32] *** Server sets mode: +Ccntz 
[23:18:35] <stenno\OK> those are autogenerated
[23:18:41] <qswz> it sounded so legit
[23:18:47] <qswz> I'm naive
[23:18:49] <stenno\OK> it really does, thats the amazing thing
[23:19:02] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[23:19:04] <stenno\OK> especially for a git-notexpert like me
[23:19:42] <stenno\OK> git-brace-root braces local roots using indexed upstream patches, while importing suitable stages to swing the given roots.
[23:23:05] *** Joins: jellobot2 (~jellobot@li334-26.members.linode.com)
[23:23:06] *** ChanServ sets mode: +v jellobot2
[23:23:06] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Killed (calcium.libera.chat (Nickname regained by services)))
[23:23:06] *** jellobot2 is now known as jellobot
[23:23:11] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[23:23:37] *** Joins: kalen- (~kalen@gateway/vpn/pia/kalen)
[23:25:38] *** Joins: lain6141 (~lain6141@119.224.72.222)
[23:26:44] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 260 seconds)
[23:26:44] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 260 seconds)
[23:26:48] *** kalen- is now known as kalen
[23:27:33] <ljharb> qswz: i just did a bot deploy without a restart; lmk if your changes aren't there and i can do a restart
[23:32:27] *** Joins: kogepan_ (~kogepan@user/kogepan)
[23:32:47] *** Parts: Alex8532 (~Alex8532@user/alex8532) (Closing Window)
[23:32:55] *** Joins: audiocat (~audio@user/audio)
[23:33:31] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:36:38] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Read error: Connection reset by peer)
[23:37:05] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[23:37:43] *** Quits: Kanibal (~Kanibal@next-hop.space) (Quit: WeeChat 3.3)
[23:38:09] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Read error: Connection reset by peer)
[23:38:14] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[23:38:26] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[23:40:10] <qswz> ljharb: ah thanks, I'll check if it works
[23:40:27] <qswz> !npm @emotionstyled
[23:40:41] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Read error: Connection reset by peer)
[23:40:42] <qswz> !npm @emotion/styled
[23:40:49] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[23:42:23] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:42:53] <ljharb> seems like no, one sec
[23:43:15] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (Remote host closed the connection)
[23:43:23] *** Joins: jellobot (~jellobot@li334-26.members.linode.com)
[23:43:23] *** ChanServ sets mode: +v jellobot
[23:44:09] *** Joins: sfields (~sfields@2605:a601:adea:7a00:5fcc:d1b3:a00e:11b8)
[23:49:23] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[23:51:05] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[23:58:29] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 268 seconds)
[23:58:42] <hassoon> what a joke..
[23:59:06] <hassoon> i did thell that HR woman that i write code in angular and vanilla js and it sent me a react test
[23:59:24] *** Joins: harpia (~harpia@2804:2aec:204:d500:9872:ddd6:959:57d4)
[23:59:28] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
