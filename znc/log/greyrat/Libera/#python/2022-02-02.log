[00:00:04] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:02:33] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:02:51] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:02:55] *** Quits: spiderma1 (~spiderman@user/spiderman) (Quit: WeeChat 3.2)
[00:03:17] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[00:03:21] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:04:18] *** Joins: mossman93 (~quassel@user/mossman93)
[00:05:13] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[00:05:19] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:05:22] *** Quits: Nutte35 (~Nutte@202.153.81.130) (Read error: Connection reset by peer)
[00:06:17] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:06:45] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:06:47] <mike18> hi
[00:06:54] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[00:06:57] <mike18> is there a way to impelement that better? https://ideone.com/UNEMT5
[00:07:00] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 276 seconds)
[00:07:13] <mike18> i cant use index here...
[00:07:24] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[00:08:14] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[00:08:17] <Repiphany> Convert to a list or use next(data) to get one item from the generator
[00:08:32] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:09:27] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:09:33] <mike18> @Repiphany i only have one item in here just need the first one
[00:12:15] <mike18> self.settings = next(data) ?
[00:12:19] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:13:06] *** Quits: chronon (~chronon@user/chronon) (Remote host closed the connection)
[00:13:27] <Repiphany> https://bpa.st/QSVQ
[00:13:35] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:13:50] *** Joins: Betal (~Betal@user/betal)
[00:14:21] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:14:32] *** Quits: Z-cat (~Z-cat@user/z-cat) (Read error: Connection reset by peer)
[00:14:57] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:15:44] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:16:22] *** Parts: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Leaving)
[00:16:28] *** Joins: Z-cat (~Z-cat@user/z-cat)
[00:16:40] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 250 seconds)
[00:17:56] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[00:18:42] <mefistofeles> wait, how does this work? https://devguide.python.org/#status-of-python-branches project "should" still be supporting security branches, correct?
[00:19:17] <SnoopJ> mefistofeles, can you clarify what your question is?
[00:20:53] <SnoopJ> 3.7/3.8 are still receiving security updates, so targeting them is 'okay' but there's no expectation that any given project will do so
[00:20:54] *** Quits: johnjaye (~pi@173.209.65.233) (Read error: Connection reset by peer)
[00:21:34] <mefistofeles> SnoopJ: I see hmm, I think that answers my question. I guess it also depends on the project/package itself, right?
[00:21:39] <SnoopJ> yes
[00:21:59] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[00:22:07] <SnoopJ> mefistofeles, and it's not verboten to target <3.7 either, although it's not a great idea since those are *not* getting security updates
[00:22:23] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[00:22:47] <mefistofeles> yeah, I understand
[00:22:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:24:19] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:25:25] <stewie925> how do I suppress the NaN values from my `df.loc[filt_python, ['LanguageWorkedWith', 'Salary']] ` where some salaries show NaN?
[00:25:48] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:26:05] *** Joins: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net)
[00:26:16] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[00:26:33] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:26:39] *** Joins: johnjaye (~pi@173.209.65.233)
[00:27:19] *** Joins: FunkyELF (~FunkyELF@76-217-82-15.lightspeed.chrlnc.sbcglobal.net)
[00:27:26] <FunkyELF> is it a bad idea to subclass dataclasses?
[00:27:34] <stewie925> Oh sorry, here is my pandas code snippet https://bpa.st/NJKA
[00:27:48] <SnoopJ> FunkyELF, it's not disallowed in general, no
[00:27:54] *** Quits: ntropy (~ntropy@146.70.21.22) (Ping timeout: 256 seconds)
[00:28:07] <zumba_addict> is it possible to find out where a package dep came from?
[00:28:33] <zumba_addict> like in node, we can do npm info somepackage and it shows dependency tree
[00:28:38] <mefistofeles> stewie925: I guess you can use DataFrame.notna
[00:28:43] <zumba_addict> npm ls package rather
[00:29:18] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:30:11] <FunkyELF> I've got a wordle game.  I'd like to modify my game to also play "nerdle"... it's like Wordle but with equations instead of words.  I have a dataclass called Result which needs to be different for wordle and nerdle... [continued]
[00:30:56] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[00:31:02] <zumba_addict> I think this worked `pipdeptree -fl`
[00:31:04] *** Joins: mojtaba (~mojtaba@142.59.165.199)
[00:31:05] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[00:31:09] <FunkyELF> I was thinking I'd create a ResultBase abstract class and then a WordleResult and a NerdleResult class.  Differences would be an attribute called "allowed_characters", which would be string.ascii_lowercase for wordle
[00:31:28] *** Joins: duuude (~user@user/duuude)
[00:31:34] <FunkyELF> How would I do this... here's my class now: https://github.com/ericfrederich/wordle/blob/main/src/wordle/game.py#L25
[00:31:37] <stewie925> mefistofeles:  how do I apply it to my code https://bpa.st/NJKA
[00:32:02] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:32:13] *** Quits: jay-m126 (~jay-m@154.72.167.222) (Ping timeout: 256 seconds)
[00:32:15] <mojtaba> Hello, I am using Selenium, and I want to click on a button; the problem is that I can find it and its x position is a big negative number, so even when I wait, after executing the click() method it says it is not in the view.
[00:32:16] *** Quits: jay-m1261 (~jay-m@154.72.167.222) (Ping timeout: 250 seconds)
[00:32:26] *** Quits: jay-m126_ (~jay-m@154.72.167.222) (Ping timeout: 256 seconds)
[00:33:04] <mojtaba> I tried the javascript execute method, but the problem with that is the button is supposed to display a drop-down list after you click on it, and using javascript method, it does not get populated.
[00:33:13] <mojtaba> Anybody know what could be the best approach?
[00:33:27] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:33:32] <mojtaba> I have also tried explicit wait using EC, but no luck as well.
[00:33:44] *** Quits: andreasbuhr (~quassel@p549db65a.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:33:47] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:33:52] <jinsun__> stewie925: in your filt line add another condition & df['Salary'].notna()
[00:34:02] <zumba_addict> so dependency of gosecrets is artist at 130. pip index shows artist 130 rather than one I need which is 131. Maybe I'll have to redeploy again
[00:34:12] <stewie925> jinsun - oh appreciate it!
[00:34:41] *** Quits: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:551:c2e6:db21:385c) (Quit: monkeyPlus)
[00:34:42] *** Quits: x_kuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[00:35:08] <jinsun__> FunkyELF: private repo? gives 404 here
[00:35:26] <FunkyELF> jinsun__: whoops... gimmie a sec
[00:35:27] <mike18> Repiphany: but converting to list allocates memory and next might be faster?
[00:36:32] <Repiphany> Yes, you need to decide if making a list is an issue or not
[00:36:54] <mike18> i dont need list
[00:36:59] <mike18> i just need first element :)
[00:37:14] <mike18> so next can might work and a, *_ = my_generator too
[00:37:15] *** Joins: xkuru (~xkuru@user/xkuru)
[00:37:28] *** Quits: magla (~gelignite@55d4daf5.access.ecotel.net) (Read error: Connection reset by peer)
[00:37:30] *** Joins: geli (~gelignite@55d4daf5.access.ecotel.net)
[00:37:36] *** Joins: kosh (~kosh@user/kosh)
[00:37:39] <mike18> the generator only has one element in it
[00:37:39] <Repiphany> *_ also makes a list out of the rest of the generator
[00:37:46] <FunkyELF> jinsun__: should work now but look at this branch instead: https://github.com/ericfrederich/wordle/blob/29e7f22e3137980d342ce004ddf29c7a5da1cf27/src/wordle/game.py#L25
[00:38:00] <Repiphany> If the generator only has one element, making a list out of it is also not an issue performance-wise
[00:38:03] <mike18> @Repiphany and next?
[00:38:58] <Repiphany> next only gets one element from the generator
[00:39:26] *** Joins: sambauer64 (~sambauer6@86.121.131.207)
[00:39:28] <FunkyELF> so the only difference will be on line 44, the WordleResult should use string.ascii_lowercase and NerdleResult would be string.digits + "+-*/="
[00:39:30] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[00:39:43] <FunkyELF> Is a subclass the right thing to do here or something else?
[00:39:43] <stewie925> jinsun_:  I tried it, and the Salary results still shows NaN
[00:40:04] *** Seto_Kaiba is now known as Hunterkll
[00:40:26] <stewie925> jinsun_: `filt2 = (df['LanguageWorkedWith'].str.contains('Python', na=False)) & (df['Salary'] >= 80000 & df['Salary'].notna()) `
[00:40:59] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[00:41:12] <jinsun__> stewie925: looks like wrong placement of parens
[00:41:40] <zumba_addict> i think the f*cking issue in our packages is the version numbering. My teammate jumped from 1.129 to 130. I think that's the reason it cannot find my 1.131
[00:41:51] <zumba_addict> and not 1.130
[00:42:09] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:42:19] <zumba_addict> that's why our registry server thinks 130 is the latest and not  1.131
[00:42:51] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[00:43:02] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:43:10] <jinsun__> stewie925: should be something like `filt2 = ((df['LanguageWorkedWith'].str.contains('Python', na=False)) & df['Salary'] >= 80000) & df['Salary'].notna()) `
[00:43:50] <stewie925> jinsun_: thanks again!
[00:44:01] *** Parts: sambauer64 (~sambauer6@86.121.131.207) ()
[00:44:27] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:44:30] <jinsun__> also might need extra parens around the >=
[00:44:56] <jinsun__> & precedence is a bit high I think
[00:45:42] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[00:45:59] <stewie925> yes, let me try that
[00:46:20] *** Quits: geli (~gelignite@55d4daf5.access.ecotel.net) (Quit: Stay safe!)
[00:46:53] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[00:46:53] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[00:46:53] *** Joins: hams (~hams@user/hams)
[00:47:08] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[00:47:31] *** Joins: jay-m126 (~jay-m@154.72.167.222)
[00:47:35] *** Joins: jay-m126_ (~jay-m@154.72.167.222)
[00:47:36] *** Joins: jay-m1261 (~jay-m@154.72.167.222)
[00:47:37] <mojtaba> Hello, I am using Selenium, and I want to click on a button; the problem is that I can find it and its x position is a big negative number, so even when I wait, after executing the click() method it says it is not in the view.
[00:47:37] <mojtaba> I tried the javascript execute method, but the problem with that is the button is supposed to display a drop-down list after you click on it, and using javascript method, it does not get populated. I have also tried explicit wait using EC, but no luck as well.
[00:47:37] <mojtaba> Anybody know what could be the best approach?
[00:47:58] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:48:18] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 260 seconds)
[00:48:21] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[00:48:39] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[00:49:05] *** Quits: fsoc (~shynerd@bison.alphaw0lf.xyz) (Quit: leaving)
[00:49:10] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 250 seconds)
[00:49:41] <stewie925> jinsun_: it works, thanks so much
[00:50:34] <zumba_addict> will pip make largest number it pulls the latest version?
[00:50:49] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:51:19] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:51:24] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[00:51:49] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[00:52:07] <SnoopJ> zumba_addict, not always, because the requirement specifier might not allows that.
[00:52:12] *** Joins: ustedes (~whaley@2603-6080-a301-33d1-7846-e44d-41fc-c7f5.res6.spectrum.com)
[00:53:11] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[00:53:27] *** Joins: raxor2k (~raxor2k@78.158.254.123)
[00:53:53] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[00:54:29] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[00:54:53] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[00:55:27] <raxor2k> question 1: could someone explain me if there is an different between using await and NOT await here? both functions work for me. question 2: is there a other way to write this function here or does it look good? https://bpa.st/VEGA
[00:55:35] <TML> zumba_addict: Just specify <=2.0
[00:55:58] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[00:56:00] <zumba_addict> thank you SnoopJ. I'm trying to figure out how my teammate upload version 130 in our central registry. I couldn't even find it in the project
[00:56:07] <zumba_addict> uploaded
[00:56:08] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[00:56:39] *** Quits: ustedes (~whaley@2603-6080-a301-33d1-7846-e44d-41fc-c7f5.res6.spectrum.com) (Client Quit)
[00:56:54] <jwhisnant> mojtaba: odd, probably pastebin your code. (I do remember EC being tricky, but I seem to remember that buttons were accessible by name). But that may have just been particular to the pages I was gathering.
[00:57:18] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[00:57:20] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[00:59:36] *** Quits: sawk (~quassel@151.81.119.74) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:00:20] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[01:00:29] *** Joins: neachdainn (~nate@user/neachdainn)
[01:00:41] *** Joins: fling (~fling@user/fling)
[01:00:43] <neachdainn> What is the correct exception type for "this key exists but it is marked as read-only"?
[01:01:03] <neachdainn> Is it just a `RuntimeError`?
[01:01:07] <CrtxReavr> YOu re-writing your own dict type?
[01:01:32] <neachdainn> It's an extension type
[01:01:36] <neachdainn> So, kind of?
[01:01:37] <zumba_addict> weird zsh is failing on pip install artist<=2.0 Am I doing it wrong?
[01:01:55] <CrtxReavr> There was a module for creating read-only dicts. . .
[01:02:15] <CrtxReavr> Not aware of one that does per-key stuff.
[01:02:35] <neachdainn> It's much more than a dict - it just looks like one in the Python API
[01:02:40] <SnoopJ> neachdainn, hmm, yea, I suppose I'd just use RuntimeError for that
[01:02:47] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:02:52] *** Joins: Leolo_2 (~fil@184-75-132-167.resi.cgocable.ca)
[01:02:56] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:03:06] <SnoopJ> Or `class ReadOnlyException(Exception): ...`
[01:03:11] <zerosum> han-solo thank you that did it
[01:03:13] <jinsun__> zumba_addict: might have to quote "artist<=2.0"
[01:03:48] *** Quits: duds- (~duds-@146.70.31.116) (Changing host)
[01:03:48] *** Joins: duds- (~duds-@user/duds)
[01:03:49] <neachdainn> SnoopJ: Sounds good! I was debating between a `RuntimeError` and an `AttributeError` (because "raised when ... assignment fails") but the latter seemed potentially confusing.
[01:03:54] <Leolo_2> I'm trying to use zeroconf.  I'm running one of the examples.  I get AttributeError: module 'asyncio' has no attribute 'get_running_loop'
[01:04:09] <zumba_addict> yeah, it worked now after wrapping it with quotes
[01:04:10] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (Read error: Connection reset by peer)
[01:04:14] <neachdainn> I might make an error type for this specifically later but that's a lot of boilerplate when writing an extension
[01:04:14] <zumba_addict> thank you
[01:04:20] <Leolo_2> how do I fix this ?
[01:04:23] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:04:35] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[01:04:36] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:04:46] <jinsun__> Leolo_2: what version of python?
[01:05:12] <Leolo_2> 3.6
[01:05:12] <SnoopJ> neachdainn, AttributeError would be for assignment to an attribute so I wouldn't use that. TypeError miiight make sense. I'd probably check what attrs/dataclasses/etc. do here
[01:05:28] <jinsun__> Leolo_2: get_running_loop is 3.7+
[01:05:35] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:8077:c59f:a01d:f390)
[01:05:52] <Leolo_2> :-/
[01:06:02] <Leolo_2> so zeroconf doesn't work on 3.6?
[01:06:04] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f1:bb6d:a86c:154c:bd0d:ad65)
[01:06:58] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[01:07:02] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[01:07:22] <SnoopJ> neachdainn, oh, dataclasses subclasses AttributeError, but presumably because I'm checking modification of attributes on a frozen class. This seems like a 'missing stair' in the exception hierarchy for errors related to a key that aren't "not found"
[01:07:25] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[01:07:26] *** Quits: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Ping timeout: 260 seconds)
[01:08:02] *** Joins: pepper (~pepper@user/pepper)
[01:08:05] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:08:08] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[01:09:16] <FunkyELF> Okay, need help with this one.  I need a class attribute which controls the length of some other attributes.  Here's the code which doesn't work... https://github.com/ericfrederich/wordle/blob/busted/src/wordle/game.py#L125  ... NameError: name 'WORD_LENGTH' is not defined
[01:10:11] <FunkyELF> I'm in the middle of a refactor, the code was working prior to this change.  I introduced the ClassVar for word length and didn't realize default values for some other fields were done in terms of that length
[01:10:14] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:8077:c59f:a01d:f390) (Ping timeout: 260 seconds)
[01:10:46] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:b018:fec8:a7e4:5428) (Remote host closed the connection)
[01:11:02] <jinsun__> Leolo_2: zeroconf might work with 3.6, but the guide you are following seems to be assuming 3.7+
[01:11:20] *** Joins: sydbarret (~anton@static-186-121-195-51.acelerate.net)
[01:12:40] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[01:12:50] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[01:13:02] <sydbarret> I created a new branch in git and when I do git add it shows pipfile and pipfile.lock . If I commit these files and return to master branch with those files will be replaced or not?
[01:13:06] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[01:13:15] <jinsun__> FunkyELF: you can just keep list as the default_factory, and update it in __post__init__
[01:13:19] <SnoopJ> FunkyELF, the error is correct: WORD_LENGTH is not defined at the point of use, because it's a field. Perhaps you want to write a __post_init__ for this class.
[01:13:22] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[01:13:36] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[01:13:52] <FunkyELF> jinsun__: ah... forgot about __post_init__
[01:14:09] *** Quits: jay-m1261 (~jay-m@154.72.167.222) (Ping timeout: 256 seconds)
[01:14:09] *** Quits: jay-m126_ (~jay-m@154.72.167.222) (Ping timeout: 256 seconds)
[01:14:09] *** Quits: jay-m126 (~jay-m@154.72.167.222) (Ping timeout: 256 seconds)
[01:14:40] *** Joins: mdemo (~mdemo@user/mdemo22)
[01:15:21] *** Joins: pepper (~pepper@user/pepper)
[01:15:37] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:5964:9756:f802:18c2) (Quit: Client closed)
[01:16:04] *** Joins: jay-m126 (~jay-m@129.0.99.22)
[01:16:12] *** Joins: jay-m126_ (~jay-m@129.0.99.22)
[01:16:28] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[01:16:54] <zumba_addict> what could be the reason why pip install -r requirements is installing every version of botocore?
[01:17:42] <FunkyELF> jinsun__: thanks... https://github.com/ericfrederich/wordle/blob/nerdle/src/wordle/game.py#L125
[01:17:59] <FunkyELF> zumba_addict: you'd have to paste your requirements file
[01:18:09] <FunkyELF> zumba_addict: ... actually, pastebin, not paste ;-)
[01:18:32] *** Quits: aslicedbanjo (~aslicedba@host86-148-108-224.range86-148.btcentralplus.com) (Quit: Leaving.)
[01:19:15] *** Quits: elias117 (~elias117@user/elias117) (Ping timeout: 256 seconds)
[01:21:16] *** Joins: jay-m1261 (~jay-m@129.0.99.22)
[01:23:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:23:59] <zumba_addict> FunkyELF - https://bpa.st/7X2Q
[01:24:30] *** Joins: zebrag (~chris@user/zebrag)
[01:24:38] <zumba_addict> the botocore being installed starts at a high number and decrements
[01:24:38] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f1:bb6d:a86c:154c:bd0d:ad65) (Read error: Network is unreachable)
[01:24:57] <zumba_addict> and the requirements.txt file has never had any change for the last 4 years
[01:25:03] <zumba_addict> so many something in my laptop config
[01:25:08] *** Quits: Guddu (~Guddu@59.88.90.189) (Quit: Leaving)
[01:25:18] <zumba_addict> many->maybe
[01:25:39] <zumba_addict> I already deactivated, rm -rf venv and created a new one
[01:25:45] <zumba_addict> same thing happens
[01:25:57] *** Joins: Fiji_ (~Fiji@user/fiji)
[01:26:16] *** Quits: Moosadee (~Moosadee@198.248.96.42) (Ping timeout: 256 seconds)
[01:26:36] *** Quits: greedom (~greedom@p200300de671a4800578aa727440fe621.dip0.t-ipconnect.de) ()
[01:26:50] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:26:51] *** Quits: raxor2k (~raxor2k@78.158.254.123) (Remote host closed the connection)
[01:27:21] *** Quits: zebrag (~chris@user/zebrag) (Client Quit)
[01:27:22] <zumba_addict> this is just a few of them - https://bpa.st/OWQQ
[01:27:22] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Remote host closed the connection)
[01:27:36] <FunkyELF> zumba_addict: you're using a private package repository?... for gaf, vacpu_py, composer?
[01:27:46] <zumba_addict> yes
[01:28:15] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[01:28:32] *** Quits: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:28:42] <FunkyELF> you'd have to paste the full output of your pip install, but perhaps it's one of those packages.  They're not pinned (i.e. you don't specify a particular version), so perhaps someone published a new version of one of those packages
[01:28:42] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[01:28:54] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[01:29:09] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:29:13] <zumba_addict> got it, I'll try removing one by one
[01:29:27] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[01:29:29] <FunkyELF> zumba_addict: I did it without those 3 and it installed fine
[01:29:50] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[01:31:07] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:31:28] <zumba_addict> got it
[01:31:34] <zumba_addict> so it could be one of them
[01:32:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[01:32:26] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[01:32:45] <jinsun__> what is your pip version?
[01:32:55] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[01:33:04] *** byzandula is now known as byzafk
[01:33:05] *** Joins: esther (~esther@2607:fb90:5feb:4f22:4439:d6b7:4276:f99e)
[01:33:08] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:33:25] <zumba_addict> 21.3.1
[01:33:27] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[01:34:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[01:34:45] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:34:46] <jinsun__> okay, not too old, I was going to suggest upgrading if it was old, because there were lots of backtracking and solver logic improvements in part few months
[01:35:07] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:35:19] <zumba_addict> k
[01:36:02] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[01:36:13] <FunkyELF> I need another ClassVar on my dataclass which should hold another class.  I can't do... results_cls: ClassVar[class].  Is there something in typing to denote passing another class?
[01:36:23] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:37:02] <KirkMcDonald> FunkyELF: type, perhaps.
[01:37:34] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:37:35] <FunkyELF> KirkMcDonald: I'll try typing.Type
[01:37:37] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[01:38:13] *** Quits: Deaygo (~Deaygo@let.deaygo.in) (Quit: Ping timeout (120 seconds))
[01:38:18] *** Joins: georgios (~georgios@user/georgios)
[01:38:24] *** Joins: Deaygo (~Deaygo@let.deaygo.in)
[01:38:28] *** Joins: hsatera (~hsatera@2804:431:e7cc:484c:cd0c:8ac9:ebdd:3c07)
[01:38:39] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:39:26] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[01:39:38] *** Quits: hsatera (~hsatera@2804:431:e7cc:484c:cd0c:8ac9:ebdd:3c07) (Client Quit)
[01:40:12] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:40:16] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[01:40:43] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[01:41:34] *** Parts: neachdainn (~nate@user/neachdainn) (WeeChat 3.4)
[01:41:43] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[01:43:12] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[01:43:32] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:e0a8:b0fc:676d:dc5d) (Ping timeout: 252 seconds)
[01:43:53] *** Joins: hsatera (~hsatera@2804:431:e7cc:484c:cd0c:8ac9:ebdd:3c07)
[01:44:28] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[01:45:19] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 256 seconds)
[01:45:48] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[01:46:48] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[01:47:02] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[01:47:19] <whatsupdoc> Hi, does anyone know what's the best way to quickly initialize a 2D array to all -1's in Python?
[01:47:36] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:48:36] <lz_> whatsupdoc: numpy?
[01:48:44] *** Quits: hsatera (~hsatera@2804:431:e7cc:484c:cd0c:8ac9:ebdd:3c07) (Client Quit)
[01:48:49] <whatsupdoc> python standard
[01:49:21] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Remote host closed the connection)
[01:49:52] <SnoopJ> by "array" do you mean list?
[01:50:00] <grym> whatsupdoc: [[-1 for _ in range(ncols)] for _ in range(nrows)] will make you a list of lists anyway
[01:50:04] *** Quits: jay-m1261 (~jay-m@129.0.99.22) (Ping timeout: 256 seconds)
[01:50:04] *** Quits: jay-m126 (~jay-m@129.0.99.22) (Ping timeout: 256 seconds)
[01:50:04] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[01:50:20] *** Joins: Atque (~Atque@user/atque)
[01:50:25] *** Quits: jay-m126_ (~jay-m@129.0.99.22) (Ping timeout: 256 seconds)
[01:50:40] *** Quits: ekathva (~ekathva@2001:999:51:be01:35a5:6efe:4821:a5c8) (Remote host closed the connection)
[01:51:17] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[01:52:33] <kosh> whatsupdoc, the standard way to do this in python is to use numpy
[01:52:50] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:53:00] <kosh> whatsupdoc,  you can make a list of lists and that is not remotely as efficient depending on the size and what you want to do with it
[01:53:01] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:53:59] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[01:54:33] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[01:54:50] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[01:54:55] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:c1ad:5567:c947:cef7)
[01:57:08] *** Quits: meltedbrain_y2k (~tekserf@87.125.156.8) (Quit: Leaving.)
[01:57:26] <whatsupdoc> Damn, why can't I just do: int array[100][50] = {-1};
[01:58:03] <SnoopJ> for a whole bunch of reasons that come down to "you are writing Python, not C"
[01:58:36] <whatsupdoc> Can you request features in Python?
[01:58:53] <SnoopJ> yep
[01:59:03] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:59:07] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 250 seconds)
[01:59:11] <whatsupdoc> Where?
[01:59:13] <kosh> whatsupdoc, people use numpy for this
[01:59:14] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 260 seconds)
[01:59:29] *** Joins: Moosadee (~Moosadee@2603-8090-0b01-5842-4ced-776f-f80c-00f0.res6.spectrum.com)
[01:59:30] <kosh> whatsupdoc, nobody is going to build that into python when numpy works really well and numpy is not going to be integrated into core python
[01:59:43] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 268 seconds)
[01:59:58] *** Joins: nomic (~nomic@185.192.69.3)
[02:00:04] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[02:00:06] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[02:00:06] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[02:00:09] <whatsupdoc> You don't need to build anything, just use memset
[02:00:16] <SnoopJ> (and lists aren't arrays nor are they homogeneous, and the type system isn't static, and initializers aren't a thing in Python, and...)
[02:00:16] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[02:00:43] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[02:00:47] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[02:01:01] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[02:01:05] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[02:01:43] <jinsun__> since you want integers, you can do with one loop instead of two, [[-1] * ncols for _ in range(nrows)]
[02:01:51] <jinsun__> but can't do better than that
[02:01:53] <kosh> whatsupdoc, you would have to build it because that does not exist in python and it doesn't have multidimensional arrays
[02:02:04] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[02:02:06] <kosh> whatsupdoc, why don't you just use numpy?
[02:02:23] <whatsupdoc> Cuz I don't want to learning anything new lol
[02:02:32] * SnoopJ nods
[02:02:35] <whatsupdoc> It'll take me years to learn numpy
[02:02:35] <kosh> you don't even want to learn python
[02:02:47] <kosh> years? most phd students pick up enough to be useful in a few hours
[02:02:58] <kosh> and they are not even programmers usually
[02:03:04] *** Joins: Schrostfutz (~Schrostfu@55d4f092.access.ecotel.net)
[02:03:10] <SnoopJ> it'll certainly take longer to turn Python into C than it will to learn C, or to use the solution to your problem that was already given above.
[02:03:20] <SnoopJ> There's no accounting for what solutions you find unacceptable for aesthetic reasons, though.
[02:03:41] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 256 seconds)
[02:03:53] <whatsupdoc> Whatever, I'll just use dictionaries for 2D arrays then
[02:04:06] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:04:14] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:04:23] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:04:33] <whatsupdoc> Bad idea?
[02:04:55] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[02:04:57] *** Joins: MrFantastik (~f@2607:f598:bbda:90:e757:712b:4010:9afa)
[02:05:08] <kosh> yeah it is a horrible idea
[02:05:14] <kosh> why are you using python?
[02:05:28] <kosh> you don't want to learn it
[02:05:30] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[02:05:46] <KirkMcDonald> Not necessarily a bad idea. A dict with 2-tuple keys can be a reasonable representation of a sparse set of data.
[02:05:58] <kosh> if sparse but not for something dense
[02:06:24] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:06:24] <kosh> and nobody else is going to be able to work with it because it does not remotely follow any standard way of doing this
[02:06:29] *** Joins: aphysically (~aphysical@user/aphysically)
[02:06:30] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:06:35] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[02:06:45] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:06:54] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:07:19] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[02:07:31] <zumba_addict> ah SnoopJ jinsun_ I got more errors displayed this time. I used docker build which is what they use to run pip-compile - https://bpa.st/U6BA I hope it now gives a clearer view of why it's failing. Do I have have to go inside of each packages and make sure match the same gosecrets version?
[02:09:44] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:7690:918e:23c0:bdae)
[02:10:05] <jinsun__> zumba_addict: just change the == to >= for the problematic packages and try again, except artist, since you really want to pin that one (I think?)
[02:10:27] <zumba_addict> artist was also looking for gosecrets too
[02:10:47] <zumba_addict> I'll update all projects and use >=
[02:10:48] <zumba_addict> cool
[02:11:02] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 252 seconds)
[02:12:13] *** Quits: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[02:12:56] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:14:26] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:32] *** Joins: mickey8 (~user@user/mickey)
[02:15:57] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:16] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-cdff-5348-04ff-b4e2.res6.spectrum.com) (Read error: Connection reset by peer)
[02:16:36] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[02:16:39] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[02:17:52] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[02:20:10] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:20:51] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:21:19] <jancoow> I'm using pysimple gui, but im unable to set properly full screen. It's possible in tkinter, but I've no clue how to do it in pysimplegui
[02:22:14] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[02:22:34] *** Joins: moose (~moose@user/moose)
[02:23:08] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[02:23:37] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Quit: Leaving)
[02:23:54] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:24:04] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 250 seconds)
[02:24:05] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:5964:9756:f802:18c2)
[02:25:07] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:27:28] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:27:46] <TML> window.Maximize()
[02:27:51] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[02:28:44] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:29:27] *** Quits: Moosadee (~Moosadee@2603-8090-0b01-5842-4ced-776f-f80c-00f0.res6.spectrum.com) (Ping timeout: 250 seconds)
[02:29:44] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:30:13] <mefistofeles> https://bpa.st/PK2A I'm having to do this to check some arguments in a method and it seems so ugly, I can't think of better alternatives, ideas/help appreciated
[02:30:45] *** Joins: nicode (~nic@45.72.195.35)
[02:31:42] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:31:51] <jancoow> TML that does not work
[02:31:55] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:32:17] <jancoow> TML and yes I finalised the widnow
[02:32:34] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[02:32:59] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[02:33:22] <jancoow> TML which is strange, because the maximized function sets the attribute fullscreen..
[02:33:35] <jancoow> this works if I create a tkinter windows myself tho.
[02:33:47] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:34:08] *** Quits: Juhaz (juhaz@hilla.kapsi.fi) (Ping timeout: 252 seconds)
[02:34:33] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[02:36:03] <jinsun__> mefistofeles: why that some_var = some_var branch?
[02:37:09] <mefistofeles> jinsun__: well, if it's of the expected instance, I want to preserve that... I guess I could use a different variable name
[02:37:13] <jinsun__> I mean why not just `elif not isinstance(some_var, SomeClass): raise ValueError` and have no else
[02:37:30] <mefistofeles> ah sure, that works... haha
[02:37:36] <mefistofeles> thanks
[02:37:59] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[02:38:07] <jancoow> TML ah........... resizable must be set to true..
[02:38:22] *** Joins: TFKyle (~kyle@64.201.205.70)
[02:38:27] <TML> jancoow: Glad you found it, I was really scratching my head on that one
[02:38:35] <TML> I was pretty confident that's what I used to do
[02:38:46] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[02:38:55] <jancoow> TML I actually searched for a solution way to long
[02:39:08] <jancoow> this was really not clear for me lol
[02:39:16] *** Joins: Juhaz (juhaz@hilla.kapsi.fi)
[02:39:21] *** Joins: brookesy66 (~will@203.220.123.174)
[02:39:51] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[02:40:27] <jancoow> TML oh and it neither works when setting  no_titlebar=True,
[02:40:30] <mefistofeles> jinsun__: I knew it was looking uglier than expected haha, thanks again
[02:40:41] <jancoow> that is really not documentated
[02:41:04] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:41:28] *** Quits: bomb-on_ (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:41:50] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 252 seconds)
[02:42:18] *** Quits: kli (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Quit: Leaving)
[02:42:32] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:42:34] *** Joins: kli (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[02:43:08] *** Joins: elias117 (~elias117@47.55.112.181)
[02:43:08] *** Quits: elias117 (~elias117@47.55.112.181) (Changing host)
[02:43:08] *** Joins: elias117 (~elias117@user/elias117)
[02:43:14] <jinsun__> mefistofeles: if the SomeClass objects cannot be falsy you can shorten a bit more, if isinstance(some_var, (SomeClass, None)): some_var = some_var or SomeClass(); else: raise valueError
[02:43:28] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:44:07] <jinsun__> uh NoneType or type(None) in the isinstance there
[02:44:29] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:45:37] <jinsun__> oh well not really much shorter, the other way was more clearer
[02:45:54] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:46:13] *** Quits: gnoirzox (~gnoirzox@user/gnoirzox) (Ping timeout: 240 seconds)
[02:46:38] <mefistofeles> jinsun__: yeah, I think I prefer the other, specially because SomeClass have some arguments as well, so it's more readable the other way
[02:46:41] <mefistofeles> thanks
[02:46:41] <jinsun__> raise being statement prevents any trickery to one-liner it unfortunately
[02:47:20] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[02:47:28] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:50:06] *** Quits: giusb (~giusb@user/giusb) (Read error: Connection reset by peer)
[02:51:23] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[02:51:38] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[02:51:56] *** Quits: maxzor (~maxzor@2a01cb04054faa002eb932dcfc1ca4dd.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:52:43] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:6467:c9ec:5037:de45) (Quit: Konversation terminated!)
[02:52:50] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 252 seconds)
[02:53:10] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:54:57] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:55:06] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[02:55:17] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[02:55:52] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:56:05] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:56:21] *** Parts: kli (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Leaving)
[02:57:21] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[02:57:58] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[02:58:36] *** Joins: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[02:58:40] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:58:58] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:59:16] <whatsupdoc> How do you do this in one line? for i in range(m): dp[i][0] = 1
[02:59:31] <whatsupdoc> Basically make the entire column all 1's
[02:59:33] *** Quits: smrtz (~smrtz@user/smrtz) (Ping timeout: 256 seconds)
[02:59:41] <Repiphany> That is one line
[02:59:53] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[03:00:36] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:01:14] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:01:16] *** Joins: Barones (~Barones@user/Barones)
[03:02:19] <whatsupdoc> Is it possible to do it in the format dp[i][0] = blah
[03:02:40] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[03:02:48] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[03:03:08] *** Quits: fedenix__ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:03:09] *** CatchyDespot is now known as Roey
[03:03:11] <Repiphany> If you use something like numpy, sure
[03:03:17] *** Joins: cosimone` (~user@5.170.240.195)
[03:04:06] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 260 seconds)
[03:04:12] <jinsun__> if dp was numpy array then it would be something like dp[:, 0] = 1
[03:05:26] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[03:06:19] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Read error: Connection reset by peer)
[03:06:24] <TML> whatsupdoc: dp = [[1] for i in range(m)] ?
[03:06:24] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[03:06:27] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[03:07:03] <whatsupdoc> Damn maybe I should learn numpy
[03:07:13] *** Joins: qpdb (~qpdb@user/qpdb)
[03:07:44] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:5964:9756:f802:18c2) (Quit: Client closed)
[03:09:25] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:09:52] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[03:10:07] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[03:10:17] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[03:10:20] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:10:26] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 252 seconds)
[03:10:43] <jinsun__> it is not too hard, there is a beginners page which is not too large and covers a lot of stuff https://numpy.org/doc/stable/user/absolute_beginners.html
[03:10:47] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:10:51] *** Joins: gnoirzox (~gnoirzox@178.170.103.136)
[03:11:17] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-f115-bdeb-6e14-09bb.res6.spectrum.com)
[03:11:41] <jinsun__> if you've used MATLAB before it is even easier to pick up
[03:12:32] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:13:20] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:14:31] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Client Quit)
[03:15:49] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[03:16:33] *** Joins: duuude (~user@user/duuude)
[03:16:48] *** Quits: kmh (~kmh@2a00:6020:5004:6800:5d99:6627:d23c:6f74) (Ping timeout: 268 seconds)
[03:17:03] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:17:30] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[03:17:55] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[03:18:10] *** Joins: Barones (~Barones@user/Barones)
[03:18:24] *** Joins: arinov (~arinov@213.194.126.155)
[03:19:36] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: Goodbye.)
[03:20:10] *** Joins: kmh (~kmh@94.31.106.215)
[03:20:41] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[03:23:45] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[03:24:24] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:24:30] *** Joins: mharig (~mharig@181.188.143.133)
[03:26:07] *** Guest1199 is now known as az
[03:26:27] *** Quits: az (az@stable.bnc.by.bnc4you.xyz) (Changing host)
[03:26:27] *** Joins: az (az@user/azz)
[03:26:27] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[03:26:51] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[03:27:43] *** Joins: kmh_ (~kmh@94.31.106.215)
[03:27:54] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[03:28:12] *** Quits: kmh (~kmh@94.31.106.215) (Ping timeout: 250 seconds)
[03:28:48] *** Joins: Betal (~Betal@user/betal)
[03:29:32] *** Joins: Azem (~haise01@user/haise01)
[03:30:25] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:31:58] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:32:00] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:32:06] *** Quits: nanonyme (nanonyme@kapsi.fi) (Ping timeout: 250 seconds)
[03:32:22] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[03:32:26] *** Quits: tazle (tazle@kapsi.fi) (Ping timeout: 252 seconds)
[03:32:32] *** Quits: Juhaz (juhaz@hilla.kapsi.fi) (Ping timeout: 250 seconds)
[03:33:15] *** Quits: mattfoxxx (~mattfoxxx@200116b822e2c300ae7c305570064fab.dip.versatel-1u1.de) (Quit: WeeChat 3.4)
[03:33:28] *** Joins: mattfoxxx (~mattfoxxx@200116b822e2c300ae7c305570064fab.dip.versatel-1u1.de)
[03:33:57] *** Quits: esther (~esther@2607:fb90:5feb:4f22:4439:d6b7:4276:f99e) (Ping timeout: 240 seconds)
[03:34:14] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[03:34:26] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[03:35:44] *** Joins: nanonyme (nanonyme@kapsi.fi)
[03:36:37] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:36:57] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:37:10] *** Joins: mickey86 (~user@user/mickey)
[03:38:01] *** Joins: Juhaz (~juhaz@hilla.kapsi.fi)
[03:38:06] *** Joins: tazle (tazle@kapsi.fi)
[03:38:55] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:39:14] *** Quits: marduk4 (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[03:40:12] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[03:40:12] *** mickey86 is now known as mickey8
[03:40:20] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:40:41] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:e0a8:b0fc:676d:dc5d)
[03:42:22] *** Joins: qlixed (~qlixed@181.44.129.13)
[03:42:25] *** Quits: five64333 (~five6@8.40.26.70) (Quit: The Lounge - https://thelounge.chat)
[03:43:00] *** Joins: marduk4 (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[03:46:50] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:48:16] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[03:48:31] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[03:49:09] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[03:49:12] *** Joins: james (~james@2607:b400:24:0:6911:fb23:ae44:9a00)
[03:49:22] *** Quits: cosimone` (~user@5.170.240.195) (Quit: ERC (IRC client for Emacs 27.1))
[03:49:59] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[03:50:25] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[03:51:28] *** Joins: five643333 (~five6@8.40.26.70)
[03:51:54] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[03:52:00] *** Quits: five643333 (~five6@8.40.26.70) (Client Quit)
[03:52:26] <jim> hi... I have a loop I don't understand completely, it's an irc client (a really simple one, doesnm'
[03:52:51] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 245 seconds)
[03:53:04] <jim> doesn't do much except sends a pong to the server when it gets a ping... the code is at https://github.com/jwlynch/IRCnames-improved-parser.git
[03:53:32] <jim> in file rasP2.py, starting on line 241
[03:54:03] <jim> what I don't understand is why read_buffer is assigned twice
[03:54:20] *** Parts: james (~james@2607:b400:24:0:6911:fb23:ae44:9a00) (Good Bye)
[03:54:37] <jim> (and, maybe, should that be two variables)
[03:56:39] <MacGyver> That looks like it's a very "clever" way of handling the case where the first 1024 bytes did not contain \r\n.
[03:56:47] <MacGyver> As in, terribly unreadable.
[03:56:57] <MacGyver> And should at least've been commented.
[03:57:03] *** Joins: five643333 (~five6@8.40.26.21)
[03:57:16] <MacGyver> The assignment on line 242 is actually an append.
[03:57:45] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[03:59:00] <MacGyver> Ah, not just if the first 1024 bytes did not contain \r\n of course. Also carrying whatever's at the end over to the next iteration.
[03:59:16] *** Quits: qpdb (~qpdb@user/qpdb) (Quit: WeeChat 3.3)
[03:59:50] *** Quits: luva (~luva@45.141.152.54) (Quit: Ping timeout (120 seconds))
[03:59:55] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:00:05] <jim> right, it's doing a += which is an append to that variable...
[04:00:27] *** Joins: luva (~luva@45.141.152.54)
[04:00:43] <MacGyver> Yes. And it's handling network traffic. Which isn't line-buffered.
[04:00:46] <jim> another question, on line 244, it's doing a pop on lines, is that the last thing in the lines list, or the first?
[04:00:51] <Repiphany> Maybe I don't understand the IRC protocol well enough why is it (possibly) reading partial messages in the first place
[04:00:53] <MacGyver> The last.
[04:01:03] <MacGyver> Repiphany: Because network traffic isn't line buffered.
[04:01:12] <MacGyver> If you read 1024 bytes from a socket you get up to 1024 bytes.
[04:01:14] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:01:21] <MacGyver> socket don't care whether that's "partial" or not.
[04:01:43] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:01:48] <MacGyver> So you do need to do this.
[04:01:50] <Repiphany> IRC messages shouldn't be longer than whatever many characters though, (512?)
[04:01:55] <MacGyver> It's just such a nasty way of doing it.
[04:01:56] <jim> so one read might have gotten a partial line
[04:02:12] <MacGyver> Repiphany: Yes, but the socket also has no concept of "messages".
[04:02:24] <jim> so it's double
[04:02:25] <MacGyver> Repiphany: That's defined on the application layer. The socket just gets a TCP stream of bytes.
[04:02:54] <MacGyver> jim: No, it's not double.
[04:02:57] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[04:03:09] <jim> well the read max is
[04:03:16] <MacGyver> Oh, like that.
[04:03:29] <MacGyver> Look IRC messages could be 10.000 bytes long for all this code cares.
[04:03:45] <jim> ok
[04:04:05] *** Quits: mattfoxxx (~mattfoxxx@200116b822e2c300ae7c305570064fab.dip.versatel-1u1.de) (Quit: WeeChat 3.4)
[04:04:12] <Repiphany> Just checked to see how I wrote my first attempt at an ircbot and it just had a thread dedicated to putting messages in a queue using single `recv`s
[04:04:15] <MacGyver> It's reading whatever bytes are coming in on that socket in 1024 byte chunks, decoding them, and appending them to a string. If at any point that string contains \r\n, *that* signals a complete message has been received and it can start handling the rest.
[04:04:24] <jim> they made an example irc bot and stuck it in a raspberry pi owner's manual
[04:04:26] <MacGyver> handling that message and passing the rest on*
[04:04:50] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:05:33] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:725c:b0ca:9f98:4724)
[04:05:34] <MacGyver> The *really* worrying thing about that code is that naked call to decode().
[04:05:51] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:06:26] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[04:06:43] <jim> yeah, ok, so it reads and appends to a string, in read_buffer, then splits (what, what it can?) what's in read_buffer into a list in var lines
[04:06:50] <MacGyver> You can't just assume you've got the complete UTF8 encoding of whatever unicode codepoint is supposed to be at the end.
[04:06:59] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[04:07:12] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:07:16] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[04:07:37] <jim> probably best to rewrite this, because I gotta tell ya, I do not understand that code
[04:08:04] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 250 seconds)
[04:08:12] <Repiphany> If read_buffer doesn't have any '\r\n', lines ends up being `lines = [read_buffer]` and then they pop the incomplete read_buffer back out
[04:08:39] <Repiphany> Equivalent to `*lines, read_buffer = read_buffer.split('\r\n')`
[04:09:04] *** Joins: Wulf (~Wulf@user/wulf)
[04:09:10] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[04:09:41] <jim> at the very least, the code needs a lot more comment lines than lines that do stuff
[04:10:19] <jim> sorry; something came up... I need to respond. I'll be back in a bit
[04:10:23] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[04:11:06] *** Joins: dfkfs (~dfkfs@178.49.152.42)
[04:11:27] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:11:37] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:12:30] <zumba_addict> the never ending installation of botocore is also happening in our jenkins now :(
[04:12:46] <lola> o/ python... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/900a47d49618bdaaff831e38b75d773a1c69173b)
[04:12:47] <lola> https://git.replicant.us/contrib/irelativism/wiki-migration-scripts/log/?h=master
[04:12:50] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:13:15] <MacGyver> jim: That, we can agree on. It should also split the network reading into messages, and message parsing, and handling of parsed messages, ideally.
[04:14:15] <MacGyver> Urgh, so much http traffic for something that *would've* just fit in a single IRC message.
[04:14:23] <zumba_addict> oh, it's exactly the same like what was reported here - https://github.com/pypa/pip/issues/8713
[04:15:24] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Quit: Leaving)
[04:16:37] *** Parts: Leolo_2 (~fil@184-75-132-167.resi.cgocable.ca) ()
[04:16:55] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[04:17:24] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[04:17:47] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 250 seconds)
[04:17:55] *** Quits: Auron956 (Auron956@user/auron) ()
[04:18:59] <zumba_addict> wow, there's no solution :(
[04:19:27] *** Quits: grimvar (~grimvar@i5C75FE64.versanet.de) (Ping timeout: 256 seconds)
[04:19:46] *** Quits: dfkfs (~dfkfs@178.49.152.42) (Quit: Client closed)
[04:21:06] *** Joins: grimvar (~grimvar@i5C75F7E6.versanet.de)
[04:21:59] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:22:11] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[04:23:40] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:24:56] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:25:28] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:26:35] *** Quits: dbbr (~dbbr___@2804:5f80:70a0:3700:18f0:2297:dd6d:368a) (Read error: Connection reset by peer)
[04:27:16] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[04:27:43] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[04:28:26] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[04:28:28] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:29:08] *** Joins: panella32 (~panella32@154.6.22.15)
[04:29:25] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[04:29:47] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:30:15] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[04:30:47] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[04:30:51] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:31:25] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:32:31] *** Roey is now known as roey
[04:32:35] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[04:32:54] *** roey is now known as Roey
[04:34:15] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[04:34:44] *** Joins: Fiji- (~Fiji@user/fiji)
[04:35:35] *** Quits: Fiji- (~Fiji@user/fiji) (Client Quit)
[04:35:36] *** d1rewolf[m] is now known as d1rewolf_x
[04:36:02] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:7690:918e:23c0:bdae) (Remote host closed the connection)
[04:38:43] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[04:39:10] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[04:39:31] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[04:43:23] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 252 seconds)
[04:43:29] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:45:07] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:45:07] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[04:45:24] *** Joins: ano (~ano@user/ano)
[04:45:46] *** Quits: MrFantastik (~f@2607:f598:bbda:90:e757:712b:4010:9afa) (Ping timeout: 250 seconds)
[04:49:54] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[04:50:06] *** Joins: masoudd (~masoudd@user/masoudd)
[04:52:27] *** Quits: panella32 (~panella32@154.6.22.15) (Ping timeout: 250 seconds)
[04:53:06] *** Quits: Vision-_- (~Vision@097-087-115-181.res.spectrum.com) (Ping timeout: 256 seconds)
[04:53:08] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 250 seconds)
[04:53:17] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:5964:9756:f802:18c2)
[04:53:22] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[04:53:26] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[04:57:08] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[04:58:33] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[05:00:42] *** Joins: Xardas (~Xardas@2a02:3032:8:5e64:d47c:132e:2146:cf02)
[05:00:47] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:01:31] *** Quits: Xardas (~Xardas@2a02:3032:8:5e64:d47c:132e:2146:cf02) (Client Quit)
[05:03:12] *** Quits: mharig (~mharig@181.188.143.133) (Quit: WeeChat 3.4)
[05:03:32] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:05:04] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:05:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[05:06:01] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[05:06:50] *** Joins: crashrep (~crashrep@user/crashrep)
[05:08:45] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[05:09:02] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:09:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:09:55] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[05:10:02] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[05:10:21] *** Joins: Xardas (~Xardas@2a02:3032:8:5e64:d47c:132e:2146:cf02)
[05:10:48] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[05:10:55] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[05:11:13] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[05:11:19] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[05:11:21] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[05:13:02] *** Quits: sydbarret (~anton@static-186-121-195-51.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[05:14:21] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:15:37] *** Joins: Barones (~Barones@user/Barones)
[05:16:06] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 250 seconds)
[05:16:48] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:18:16] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 250 seconds)
[05:18:26] *** Quits: Barones (~Barones@user/Barones) (Client Quit)
[05:18:40] *** Joins: MrFantastik (~f@2607:f598:bbda:90:1a30:5f62:e8b:20f9)
[05:20:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:20:06] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: bbl)
[05:20:44] *** Joins: Betal (~Betal@user/betal)
[05:21:23] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:23:11] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:23:49] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[05:24:06] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:25:00] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[05:25:23] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:25:25] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:25:37] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-f115-bdeb-6e14-09bb.res6.spectrum.com) (Ping timeout: 240 seconds)
[05:25:41] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:26:04] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[05:26:09] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[05:27:03] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-b0d3-7195-52aa-dcdb.res6.spectrum.com)
[05:28:42] *** Joins: Schultz (~ivillarro@user/Schultz)
[05:28:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:29:01] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48bb4dg3tj94j5l.ipv6.telus.net) (Remote host closed the connection)
[05:29:46] *** Joins: naranja (~orange@user/orangeboxcutter)
[05:29:53] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:14] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:32:17] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:32:47] *** Quits: jancoow (~jancoow@user/jancoow) (Quit: The Lounge - https://thelounge.chat)
[05:32:48] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[05:32:52] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:32:58] *** Joins: vlm (~vlm@user/vlm)
[05:33:52] *** Quits: emf (~emf@2620:10d:c090:400::5:b471) (Ping timeout: 250 seconds)
[05:34:03] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 250 seconds)
[05:34:40] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:35:00] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:36:22] <zumba_addict> ok folks, i figured out the source of the endless loop. Once I enable this in requirements.txt, the never ending installation of boto3 and botocore happens - `requests==2.19.1`. What should I do?
[05:36:38] <grym> zumba_addict: not that, i suppose
[05:37:58] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[05:38:12] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-054e-44f9-b4c3-5179.res6.spectrum.com)
[05:38:37] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[05:38:50] <zumba_addict> I think i know why. It could be the changes I made in our registry
[05:39:00] *** Quits: xx (~xx@user/xx) (Ping timeout: 256 seconds)
[05:40:29] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[05:40:48] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-b0d3-7195-52aa-dcdb.res6.spectrum.com) (Ping timeout: 250 seconds)
[05:41:46] *** Joins: structoha1 (~structoha@gateway/tor-sasl/structoha)
[05:43:32] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[05:43:52] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[05:44:08] *** Quits: Schultz (~ivillarro@user/Schultz) (Quit: WeeChat 3.4)
[05:44:27] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:e0a8:b0fc:676d:dc5d) (Ping timeout: 250 seconds)
[05:45:14] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:46:07] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:46:13] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[05:46:28] *** Joins: pankid (~quassel@pankid.club)
[05:46:38] <zumba_addict> it's not our repository. I found out that it was docker configuration that I modified and not python
[05:47:04] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[05:47:29] *** Parts: mojtaba (~mojtaba@142.59.165.199) ()
[05:47:37] *** Joins: frost (~frost@user/frost)
[05:48:38] *** Quits: therufuser (~therufuse@p5b001fd0.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:48:39] <zumba_addict> I tried pip install -r requirements.txt again, and got this
[05:48:43] *** Joins: LiftLeft (~LiftLeft@187.170.244.154)
[05:48:56] <zumba_addict> grym - this was running more than 30 mins - https://bpa.st/WGDQ
[05:49:08] <zumba_addict> i had to cancel it
[05:49:38] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 250 seconds)
[05:49:52] *** Quits: HenryG (~quassel@180.ip-158-69-198.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[05:50:08] *** Joins: therufuser (~therufuse@p5b02e22b.dip0.t-ipconnect.de)
[05:51:10] *** Joins: cdown_ (~cdown@188.214.11.14)
[05:51:10] <zumba_addict> once I comment out requests==2.19.1, pip install completes
[05:51:18] <grym> zumba_addict: well, don't use that version of requests, then
[05:51:36] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[05:51:44] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:52:03] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:52:20] *** Joins: califax- (~califax@user/califx)
[05:52:24] <zumba_addict> looks like it is working now after changing it to >=
[05:52:33] <zumba_addict> yay, it really completed
[05:52:38] <zumba_addict> why was it doing that?
[05:53:23] <grym> ¯\_(ツ)_/¯
[05:53:47] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 250 seconds)
[05:53:57] *** cdown_ is now known as cdown
[05:54:04] <zumba_addict> :)
[05:54:10] *** Joins: mickey88 (~user@user/mickey)
[05:54:45] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[05:54:45] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:54:45] *** califax- is now known as califax
[05:54:46] *** mickey88 is now known as mickey8
[05:54:59] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:55:13] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 256 seconds)
[05:55:21] *** brabrax_ is now known as brabrax
[05:55:28] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-054e-44f9-b4c3-5179.res6.spectrum.com) (Quit: jarthur)
[05:55:55] *** Joins: Barones (~Barones@user/Barones)
[05:56:04] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:56:10] *** Quits: Barones (~Barones@user/Barones) (Client Quit)
[05:57:00] *** karlnashville is now known as karl_AFK
[05:57:21] *** Quits: structoha1 (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[05:57:25] *** Quits: jpaa (~jpaa@161.97.129.36) (Ping timeout: 240 seconds)
[05:58:04] *** Joins: bancroft (~bancroft@user/bancroft)
[05:58:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[05:58:39] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[05:58:46] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[05:58:57] <bancroft> I think it was in here that someone recommended a python lib to parse macho binaries, I can't remember what it was called. It was a long time ago, back on freenode #python and I deleted all those logs
[05:59:24] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[05:59:29] *** Joins: jpaa (~jpaa@161.97.129.36)
[05:59:52] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:00:24] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:01:38] <grym> bancroft: i got nothin'
[06:01:40] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[06:02:17] <bancroft> grym: thanks for checking, I'll just google the new hotness and try to work with it
[06:03:06] <nedbat> funny, my logs from feb 10 2020 show this:  <_alx_> grym: you'll get a kick out of this then https://github.com/penvirus/macho_parser/blob/master/macho_parser/macho_parser.py#L194
[06:03:29] *** Quits: Xardas (~Xardas@2a02:3032:8:5e64:d47c:132e:2146:cf02) (Quit: Client closed)
[06:03:38] <nedbat> bancroft: ^^
[06:03:51] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[06:04:28] <bancroft> nedbat: HAYA! That's the one!!!
[06:05:09] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[06:05:22] <bancroft> I change irc usernames every few years, just get bored with names
[06:05:25] *** Joins: LagSpike (~LagSpike@69.173.181.173)
[06:05:33] <grym> hah
[06:05:38] <grym> well, that'll be why
[06:05:53] *** Quits: Schrostfutz (~Schrostfu@55d4f092.access.ecotel.net) (Remote host closed the connection)
[06:05:58] <grym> shoulda grepped for macho only; i see it now
[06:06:06] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[06:06:33] *** Joins: jancoow (~jancoow@user/jancoow)
[06:06:39] *** Joins: nunggu (~q@user/nunggu)
[06:06:49] *** karl_AFK is now known as karlnashville
[06:07:37] *** Quits: ToAruShiroiNeko (~eva@user/toarushiroineko) (Ping timeout: 268 seconds)
[06:08:48] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[06:11:28] *** Joins: jazzy (~jaziz@user/jaziz)
[06:13:06] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:13:27] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:13:55] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 256 seconds)
[06:15:03] *** Quits: kts_ (~kts@103.73.237.158) (Ping timeout: 256 seconds)
[06:15:14] <d1rewolf_x> evening all. I'm using attrs to define fields in a class. For one particular field, I need to trigger a series of function calls after it is set to a value. I'm still learning attrs so i'm wondering what the best way to accomplish this might be, while not conflicting with its built-in features.
[06:15:42] <d1rewolf_x> I thought potentially defining a validator for the field, but using it to trigger the calls instead of validating
[06:15:51] <d1rewolf_x> any thoughts on this approach or other recommendations?
[06:16:24] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:16:34] <Repiphany> ls
[06:16:42] <grym> d1rewolf_x: you can trigger getters/setters on fields at creation and modification time if you need to
[06:16:44] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:16:46] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:16:55] <foo> We have a Flask template where we feed a TEMPLATE_BASE_DIR variable in from the web route. This was done about 30 times: TEMPLATE_BASE_DIR or 'dashboard' ... where 'dashboard' gets used when TEMPLATE_BASE_DIR doesn't exist. Can we agree that this is a bit overkill and this variable should be set once in the parent route? Thanks. I realize this is a little subjective but I'm open to being wrong.
[06:17:21] <d1rewolf_x> grym: yeah, that sounds ok....if I can do it after modification. What part of the docs should i read to find this functionality?
[06:17:29] <d1rewolf_x> do you know what this is called?
[06:19:22] <d1rewolf_x> grym are you referring to the property decorator that comes with python?
[06:19:36] <d1rewolf_x> I thought about using that but suspected it would cause weird behavior combined with attrs
[06:19:58] *** Joins: gimzmoe_ (~gimzmoe@user/gimzmoe)
[06:20:03] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Read error: Connection reset by peer)
[06:21:12] <grym> d1rewolf_x: @property and attrs work fine together
[06:21:58] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:22:27] <d1rewolf_x> grym: ok, thank you. i'll give that a shot. but one thing that threw me is that with a property, you'd typically set a private backing variable. for example, if I defined a property "x", i'd have a backing variable _x which actually stores the value
[06:22:30] <grym> but you can hit a validator on get/set; i think altendky found this first for how to do that; at creation time, it's simple, you just @fieldname.validator
[06:22:40] *** Quits: johnjaye (~pi@173.209.65.233) (Read error: Connection reset by peer)
[06:23:00] <grym> d1rewolf_x: yeah, so you'll `_x = attr.ib(...)` and it'll get mangled properly to x
[06:23:30] <zumba_addict> should I remove pip from requirements.txt?
[06:23:31] <d1rewolf_x> right...ok, so the functionality referred to here: https://www.attrs.org/en/stable/init.html#private-attributes
[06:23:39] *** Quits: dld (~davidlowr@2601:197:600:1210:9050:7c1d:b33c:2fa8) (Ping timeout: 268 seconds)
[06:24:20] <d1rewolf_x> I guess what I was thinking is that if I were to define a python @property, and then try to use _x as the backing variable, attrs would mangle it to "x" which would override my python @property "x"
[06:24:29] <d1rewolf_x> i know that sounds like gibberish
[06:25:59] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:26:56] *** Joins: katrix (~m-ucfpsh@static.151.67.161.5.clients.your-server.de)
[06:27:22] *** Quits: nehsou^ (~nehsou@128-092-164-034.biz.spectrum.com) (Remote host closed the connection)
[06:27:57] <grym> d1rewolf_x: no it makes sense, but it can work out
[06:28:13] *** Joins: johnjaye (~pi@173.209.65.233)
[06:28:23] <grym> i was trying to write you a MWE but i'm getting kind of beat today :(
[06:28:25] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:28:33] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[06:28:57] *** Quits: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[06:29:00] <d1rewolf_x> grym: ha! no worries..I appreciate the pointers and will explore further. thanks and get some rest :)
[06:29:20] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[06:30:20] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:30:41] *** Joins: chronon (~chronon@user/chronon)
[06:30:46] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 245 seconds)
[06:31:00] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[06:31:28] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:31:37] *** Joins: dsrt^ (~dsrt@128-092-164-034.biz.spectrum.com)
[06:32:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:32:50] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[06:33:00] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:33:14] *** Quits: humbertowoody (~humbertow@187.202.255.156) (Ping timeout: 250 seconds)
[06:33:35] *** Joins: defn (~n0b0dy@user/defn)
[06:33:58] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[06:34:16] *** Quits: MrFantastik (~f@2607:f598:bbda:90:1a30:5f62:e8b:20f9) (Remote host closed the connection)
[06:34:39] *** Joins: MrFantastik (~f@2607:f598:bbda:90:c5d3:26c:1b99:66dc)
[06:35:08] *** Joins: humbertowoody (~humbertow@187.202.255.156)
[06:35:40] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[06:37:03] <altendky> d1rewolf_x: want to summarize the high level goal here?
[06:38:00] <d1rewolf_x> altendky:  sure....I have a field that, when set, I need to trigger a set of function calls
[06:38:26] *** Joins: pycurious (~Adium@user/pycurious)
[06:38:31] <altendky> d1rewolf_x: pretty sure attrs added that.  lemme look
[06:38:34] <d1rewolf_x> basically, the field stores a large amount of text, and for performance reasons, other fields get set after it has a value
[06:39:29] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 250 seconds)
[06:39:37] <altendky> d1rewolf_x: https://www.attrs.org/en/stable/api.html#attr.ib `on_setattr=`.  though, i haven't played with that since they added it.  had my own thing before though.
[06:39:44] *** Quits: humbertowoody (~humbertow@187.202.255.156) (Ping timeout: 250 seconds)
[06:39:51] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:39:51] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:39:51] *** finn_elija is now known as FinnElija
[06:39:59] *** Quits: M3troidman (~buttler@196.196.203.108) (Ping timeout: 256 seconds)
[06:40:06] <altendky> d1rewolf_x: can you really not just wait until this attribute is known before creating the instance?
[06:40:54] *** Joins: humbertowoody (~humbertow@187.202.255.156)
[06:41:13] <d1rewolf_x> altendky:  I mean...anything is possible with time and coffee ;)
[06:41:15] *** Joins: esv (~esv@74.124.178.154)
[06:41:52] *** karlnashville is now known as karl_AFK
[06:42:02] <altendky> d1rewolf_x: well, sometimes it's not a big deal.  sometimes it's a major redesign.  but tending that way is generally good.  `Optional` attributes a really a pain
[06:43:06] <altendky> d1rewolf_x: an intermediate option might be to group these values in a second class so there's only one `Optional` attribute.  once you know the value you create the secondary class, including calculated values, and update that single `Optional` attribute on the first class.
[06:43:09] <d1rewolf_x> thanks...I'll mull this over. I really need to spend more time reading the attrs docs
[06:43:20] <altendky> (and yeah, this is all wild conjecture based on zero knowledge of your code)
[06:43:31] <d1rewolf_x> not a bad idea tbh
[06:43:36] *** Quits: novapy (~chronos@12.71.10.20) (Ping timeout: 256 seconds)
[06:43:38] *** Joins: M3troidman (~buttler@196.196.203.108)
[06:43:48] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:44:23] *** Joins: colo__work (~colo_work@046125249113.public.t-mobile.at)
[06:44:46] *** Joins: lastshell (~lastshell@user/lastshell)
[06:44:48] *** karl_AFK is now known as karlnashville
[06:45:32] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:45:52] *** Quits: humbertowoody (~humbertow@187.202.255.156) (Ping timeout: 256 seconds)
[06:46:22] *** Joins: dld (~davidlowr@2601:197:600:1210:942a:4683:ce04:8328)
[06:46:35] <zumba_addict> this is taking more than 5 mins and few other packages. Is it normal? `INFO: pip is looking at multiple versions of raven to determine which version is compatible with other requirements. This could take a while`
[06:46:37] *** Quits: colo_work (~colo_work@046125249046.public.t-mobile.at) (Ping timeout: 240 seconds)
[06:46:39] *** Joins: humbertowoody (~humbertow@187.202.255.156)
[06:47:04] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:50:12] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:50:59] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:52:21] *** Joins: Vonter (~Vonter@user/vonter)
[06:54:24] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[06:54:29] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:5964:9756:f802:18c2) (Quit: Client closed)
[06:54:56] *** Joins: defn (~n0b0dy@user/defn)
[06:54:59] <d1rewolf_x> altendky: grym as grym mentioned earlier, making this field a python @property seems to work: https://pastebin.com/pza5jzFw
[06:55:30] *** Joins: Trashlord (~trash@user/trashlord)
[06:55:40] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[06:56:00] *** Joins: novapy (~chronos@12.71.10.20)
[06:57:04] <altendky> d1rewolf_x: yes, that is an option as well.  i do often end up using the introspective features of attrs (like `attr.fields()`) which might look a bit funny for this showing the `._x` but not `.x`.  might not matter for you.
[06:57:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[06:57:41] <altendky> i wonder if they made an `on_setter` decorator...
[06:58:05] <d1rewolf_x> altendky: yeah...I'm using some of the introspection as well. good point. i need to experiment further
[06:58:20] <altendky> err, `on_setattr`
[06:58:37] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[06:58:40] <d1rewolf_x> altendky: you can create custom validators...so I think you could overload that concept to accomplish that
[06:59:04] <altendky> hmm, i don't see a decorator
[06:59:04] *** Joins: fedenix__ (~fedenix@gateway/tor-sasl/fedenix)
[06:59:09] <d1rewolf_x> use the validator to trigger behavior on the assignment to the variable, if that makes sense
[06:59:09] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:59:14] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[06:59:25] <altendky> d1rewolf_x: that's what `on_setattr` is for.
[06:59:31] <altendky> when it isn't validation
[06:59:33] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[06:59:51] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[06:59:58] <altendky> `@x.on_setattr` would be fun but i don't see it
[07:00:10] *** Joins: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269)
[07:00:34] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[07:00:46] *** Joins: de-facto_ (~de-facto@user/de-facto)
[07:00:48] *** Joins: califax- (~califax@user/califx)
[07:00:55] <d1rewolf_x> altendky: ok cool. I'll explore on_setattr. Yeah, it'd be really clean to have that as a decorator
[07:01:14] <altendky> hmm, or maybe `on_setattr` was superseding validator and everything else.  i forget.  there was some talk about a single general purpose path
[07:01:46] *** Joins: bindu_ (~bindu@user/bindu)
[07:01:46] <d1rewolf_x> altendky: have you seen any good comprehensive tutorials on attrs?
[07:01:50] <altendky> maybe this is the discussion https://github.com/python-attrs/attrs/issues/146
[07:01:57] <d1rewolf_x> aside from the attrs by example?
[07:02:10] <altendky> d1rewolf_x: not sure i ever looked.  learned it as i went.  sorry.
[07:02:12] *** Joins: adeliktas78 (~adeliktas@i59F5F5AE.versanet.de)
[07:02:21] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[07:02:21] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[07:02:21] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[07:02:21] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[07:02:21] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 276 seconds)
[07:02:21] *** califax- is now known as califax
[07:02:41] <d1rewolf_x> yep...doing the same here. no worries! I appreciate the help regardless
[07:03:01] <lastshell> I found this click library from some coworker, found clever how you can add files and run, but I wonder if this can also be bad practices because eval? https://click.palletsprojects.com/en/7.x/commands/#custom-multi-commands
[07:03:43] *** Joins: ano (~ano@user/ano)
[07:03:44] *** bindu_ is now known as bindu
[07:03:47] *** Quits: adeliktas (~adeliktas@i59F52538.versanet.de) (Ping timeout: 256 seconds)
[07:03:47] *** adeliktas78 is now known as adeliktas
[07:03:48] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:04:58] *** de-facto_ is now known as de-facto
[07:05:37] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[07:05:51] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:06:42] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:04] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:08:53] *** Quits: LiftLeft (~LiftLeft@187.170.244.154) (Ping timeout: 256 seconds)
[07:08:53] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[07:10:01] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:11:51] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:13:59] *** Joins: CoolerY (~CoolerX@user/coolerx)
[07:14:54] *** Joins: masoudd (~masoudd@user/masoudd)
[07:14:56] *** Quits: CoolerX (~CoolerX@user/coolerx) (Read error: Connection reset by peer)
[07:15:07] <SnoopJ> lastshell, eval() isn't necessarily a bad idea if you're loading code you're very sure of (like in that example where it comes from plugins in `commands/`), but there are other ways to go about it, too.
[07:15:14] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:15:28] <lastshell> thank you SnoopJ
[07:15:45] <SnoopJ> After all, importing any library is also evaluating the code in that library :)
[07:17:03] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:18:06] *** Joins: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com)
[07:19:13] *** Quits: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[07:19:35] *** Quits: vimart (~ketiv@cpc148896-sgyl44-2-0-cust233.18-2.cable.virginm.net) (Ping timeout: 252 seconds)
[07:20:35] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[07:20:52] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:725c:b0ca:9f98:4724) (Quit: Konversation terminated!)
[07:20:54] *** Quits: humbertowoody (~humbertow@187.202.255.156) (Ping timeout: 250 seconds)
[07:24:04] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4368:9dd6:c255:95c1)
[07:25:35] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:26:18] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:6013:7539:4fef:cd22)
[07:26:27] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:26:43] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[07:26:59] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:28:22] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[07:28:44] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:29:20] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[07:30:04] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:30:12] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:31:20] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:31:46] *** Quits: LagSpike (~LagSpike@69.173.181.173) (Ping timeout: 256 seconds)
[07:32:30] *** Joins: \mSg (mSg@user/msg/x-0285936)
[07:32:41] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:35:25] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:48] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[07:37:22] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:38:12] *** Quits: johnjaye (~pi@173.209.65.233) (Read error: Connection reset by peer)
[07:38:55] *** Quits: sreve (~quassel@p549d734b.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:38:58] *** Joins: mcpackey (~pm0001@p5dc1c7d2.dip0.t-ipconnect.de)
[07:39:12] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:39:21] *** Joins: sreve (~quassel@p4ff44dcd.dip0.t-ipconnect.de)
[07:39:22] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:39:58] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[07:40:09] <zumba_addict> SnoopJ jinsun_ sco1 grym after more than 8 hours of debugging the issues, I finally fixed it. The culprits are the internal dependencies's requirements.txt pointing to external packages but referencing different versions. Most likely the original owners of these projects didn't work together well. So what is a good way to do to make sure that an
[07:40:09] *** Joins: kts (~kts@103.73.237.109)
[07:40:10] <zumba_addict> external package like requests will have the same version through out our internal packages?
[07:40:20] *** Joins: Babar_ (~Babar@2405:4803:fccf:a720:3ccb:c7a6:c63c:8e57)
[07:40:20] *** Quits: Babar (~Babar@2405:4803:ff4d:98d0:6029:2ed5:d24a:8f68) (Killed (platinum.libera.chat (Nickname regained by services)))
[07:40:20] *** Babar_ is now known as Babar
[07:40:22] <zumba_addict> Should we repackage requests?
[07:40:24] *** Quits: davor_ (~davor@user/davor) (Ping timeout: 250 seconds)
[07:40:46] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[07:40:59] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:e0a8:b0fc:676d:dc5d)
[07:41:08] *** Joins: davor (~davor@user/davor)
[07:42:03] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:42:53] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (Ping timeout: 256 seconds)
[07:43:06] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[07:43:52] <zumba_addict> If I was confusing, this is what I mean, Parent app depends on internal-package-A, B, C, D and E. These internal-packages are pulling external deps like requests, jsonSchema, urllib, etc. However, these package's requirements.txt have different version of requests, jsonschema, etc. That's a lot of work if we'll always have to modify those
[07:43:53] <zumba_addict> internal-packages. We can also miss it too. What is the best way?
[07:44:04] *** Joins: johnjaye (~pi@173.209.65.233)
[07:45:00] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:45:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[07:46:03] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:47:33] *** Joins: bytehackr (~Sandipan@43.252.250.126)
[07:48:16] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 245 seconds)
[07:48:46] *** Quits: kts (~kts@103.73.237.109) (Ping timeout: 256 seconds)
[07:49:24] *** Joins: JordiGH (~jordi@user/jordigh)
[07:49:25] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:49:53] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:50:35] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:51:53] <d1rewolf_x> altendky: well, an attempt was made. here's my stab at on_setattr:
[07:52:25] <altendky> d1rewolf_x: bpa.st or gist.github.com or somesuch i presume?
[07:52:30] <d1rewolf_x> full_text: str = field(default="", on_setattr=(lambda instance, attr, value: setattr(instance, attr.name, value) and instance.launch_text_processors()))
[07:52:47] <d1rewolf_x> it almost works, but of course, setattr recurses here
[07:53:11] <d1rewolf_x> and if I don't call setattr, the field value doesn't get set
[07:53:35] *** Quits: bancroft (~bancroft@user/bancroft) (Ping timeout: 250 seconds)
[07:54:06] <d1rewolf_x> altendky: it was originally this:      full_text: str = field(default="", on_setattr=(lambda instance, attr, value: instance.launch_text_processors()))
[07:54:15] <d1rewolf_x> but that doesn't set the field value unfortunately
[07:54:21] <altendky> d1rewolf_x: that's a bit much to be `lambda`ing.  and are you supposed to return the value to set or something?
[07:55:00] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[07:55:27] <d1rewolf_x> let me try that. and yeah, I don't like lambda here either, but I wanted the callable passed to on_setattr to be a class method, and it apparently doesn't expect this. I think it expects a callable defined outside of the scope of the class
[07:56:14] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[07:56:42] <d1rewolf_x> altendky: and yes, per the docs "If no exception is raised, the attribute is set to the return value of the callable."
[07:56:49] <altendky> just found that too `:]`
[07:57:44] <altendky> i tried to make this happen but haven't succeeded so far.  does anyone know the specific cases where the warned behavior happens?  https://docs.python.org/3.10/library/asyncio-task.html#asyncio.create_task -- Important: Save a reference to the result of this function, to avoid a task disappearing mid execution.
[07:58:22] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[07:58:52] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[08:01:38] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[08:01:44] *** Joins: minip (~minip@user/minip)
[08:02:01] *** Joins: callq (~callq@2409:4062:2e9e:2081:73:e6d7:2365:394e)
[08:02:04] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:02:12] <d1rewolf_x> altendky: hacky, but works:     full_text: str = field(default="", on_setattr=(lambda instance, attr, value: instance.launch_text_processors(value)))
[08:02:32] <d1rewolf_x> launch_text_processors takes the value, calls the appropriate methods, and then returns that value
[08:02:37] <altendky> d1rewolf_x: `on_setattr` can take a list
[08:02:40] <d1rewolf_x> but...wait. that won't work either
[08:02:46] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Quit: Client limit exceeded: 20000)
[08:03:04] <d1rewolf_x> the returned value won't be set to the field until after the various items are launched
[08:03:19] <d1rewolf_x> altendky: k. i'll explore further :)
[08:03:37] <altendky> d1rewolf_x: don't forget the other design alternatives
[08:03:52] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[08:04:06] <d1rewolf_x> altendky: the problem I see is that whatever func on_setattr calls needs to be able to access the instance itself
[08:04:25] <d1rewolf_x> so preferably on_setattr=self.somedefinedmethod
[08:04:46] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[08:05:06] <callq> Hi. I would like to locally cache an API response, but only one particular GET call. Other GET and POST calls should behave normally. I see the requests-cache library, but that seems to work on a per-run basis.
[08:05:15] <altendky> d1rewolf_x: the instance is thefirst parameter passed so just referencing the method name would work (if you put the method before the attribute definition which...  meh)
[08:05:21] <d1rewolf_x> but of course, self is undefined when the field is defined
[08:05:45] <tm007> callq:  what do you mean by locally cache
[08:05:55] <altendky> d1rewolf_x: `Class.method(instance)` is the same as `instance.method()` (at least mostly)
[08:06:22] <altendky> d1rewolf_x: and you are already inside the class so it would be just `method` to refer to it.
[08:06:51] <altendky> d1rewolf_x: but the other options bypass this entirely by waiting until you have the needed info to create the object holding it and it's derivative data
[08:07:06] <callq> tm007 well I just want to be able to persist that cache between runs
[08:07:49] *** Quits: moog (~moog@107.126.53.56) (Ping timeout: 256 seconds)
[08:07:54] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 260 seconds)
[08:08:25] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[08:09:09] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[08:09:15] <d1rewolf_x> altendky: ok, you are correct. Moving the function definition before the field definition and then on_setattr=launch_text_processors seems to work
[08:10:06] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[08:10:16] <d1rewolf_x> altendky:  ain't the prettiest, but it'll do for now
[08:10:20] <d1rewolf_x> thanks for your help!
[08:10:42] <senoraraton> I'm trying to setup coqui, and I'm running into issues.  --> https://bpa.st/EQIA
[08:10:55] <senoraraton> Why is it trying to install 10 versions of the same program?
[08:11:05] <altendky> d1rewolf_x: sure thing.  do find time to see what the two-class approach looks like at least, if not the one-class-after-you-actually-have-all-the-data approach.
[08:11:17] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 252 seconds)
[08:11:43] <altendky> senoraraton: pip is backtracking to try to meet constraints that aren't straightforward.
[08:12:11] <d1rewolf_x> altendky: I will. the design currently is that this object is passed to a number of different functions which "assemble" it in different ways. the full_text assignment happens near the middle of this assembly
[08:12:15] <senoraraton> How do I fix it?
[08:12:30] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[08:12:33] <senoraraton> I read https://pip.pypa.io/en/latest/topics/dependency-resolution/#dealing-with-dependency-conflicts but I don't understand it.
[08:12:56] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[08:13:04] <altendky> senoraraton: what was the command you ran that induced this?
[08:13:23] <altendky> d1rewolf_x: partially constructed objects are a hassle, as you see
[08:13:44] <senoraraton> python -m pip install coqui-stt-model-manager
[08:13:46] *** Joins: CodeGeek (~codegeek@about/java/CodeGeek)
[08:13:49] <altendky> d1rewolf_x: you could at least just have a setter function for this non-trivial activity
[08:14:05] <d1rewolf_x> altendky:  indeed. any good books you know of that cover the whys of that?
[08:14:31] <altendky> d1rewolf_x: there's an attrs ticket discussing it
[08:14:34] <altendky> `:]`
[08:14:49] * d1rewolf_x nods and smiles
[08:15:07] <altendky> senoraraton: hmm, i get it too, let me look
[08:15:45] <senoraraton> I have a feeling that the answer is to build it from source.... >.>  They have a discussion area that talks about it, but the general response is "I fixed it, it shouldn't be a problem anymore"
[08:15:56] <altendky> d1rewolf_x: "here's an apple", ok, i'll go cut it up for a snack.  wait...  all i see is the sticker.  huh.
[08:16:40] <altendky> senoraraton: seems like they have some dependency messed up somewhere
[08:16:48] <altendky> like they need a bug report and fix
[08:17:14] <senoraraton> *sigh*
[08:18:08] <altendky> senoraraton: ah, you are on python3.10?  https://pypi.org/project/stt/#files
[08:18:11] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[08:18:15] <altendky> i see what you mean about building from source
[08:18:51] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[08:18:56] <altendky> it really would be nice if pip said "yo...  i tried and there are packages for other platforms but i can't find one for yours.  sorry."
[08:19:08] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[08:21:00] *** Joins: wonky (~joee@072-186-122-186.res.spectrum.com)
[08:22:08] *** Quits: wonky (~joee@072-186-122-186.res.spectrum.com) (Client Quit)
[08:24:39] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[08:25:05] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[08:26:04] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[08:26:27] *** Joins: Vision (~Vision@097-087-115-181.res.spectrum.com)
[08:26:51] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[08:26:54] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:e762:820b:16f3:d1dd)
[08:26:58] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:28:44] *** Joins: nunggu (~q@user/nunggu)
[08:30:29] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:30:53] <SnoopJ> altendky, platform like operating system, or platform like python version?
[08:31:08] <altendky> SnoopJ: platform like the combination of factors
[08:31:37] <SnoopJ> that explains my confusion then
[08:31:50] <altendky> yeah, lazy wording on my part
[08:31:54] <altendky> sorry
[08:31:59] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:81ef:2783:e876:303e)
[08:32:33] <SnoopJ> no that's okay, it just took me a minute to realize you didn't mean the same thing pip means when it says platform :)
[08:32:36] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[08:33:36] <MatthewG> Hey ya'll. Been stuck on this problem for hours. I'm baffled. Looking for help with IMAP issue: https://bpa.st/BA6Q ... what we're seeing: line 40 is calling the most recent uid (23) with the oldest email (the first email in the inbox). This is an odd behavior because the uid isn't matching with the email. Can someone help explain why this is happening?
[08:33:53] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 256 seconds)
[08:34:19] *** Joins: defn (~n0b0dy@user/defn)
[08:35:01] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 256 seconds)
[08:35:48] <MatthewG> BTW that code is taken from here: https://github.com/bamthomas/aioimaplib/blob/master/example/imap_fetch.py
[08:35:51] <SnoopJ> it'd be nice if pip elaborated there that "X depends on Y (uninstallable because...)" but I don't know exactly how the dependency resolver works, it's possible there isn't always a discernible 'reason' you could report?
[08:36:30] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[08:36:47] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:36:49] <whatsupdoc> Hi, does python have multiset?
[08:37:17] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[08:37:19] <callq> Hi. I would like to cache an API response, but only one particular GET call. Other GET and POST calls should behave normally. I see the requests-cache library, but that seems to work on a per-run basis.
[08:38:05] <SnoopJ> senoraraton, as far as why it's trying to install those, I believe the plain-english verison is: it's just going down the list of available `coqui-stt-model-manager` distributions and running into the unsatisfiable `stt` for each one, because the two projects have incompatible python-requires constraints (i.e. the former is more permissive than the latter)
[08:38:51] <SnoopJ> whatsupdoc, not in the stdlib. There are multiple implementations available on PyPI, though.
[08:39:01] *** Joins: goepsilongo_ (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com)
[08:39:31] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[08:39:46] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[08:41:16] *** Joins: analoq (~yashi@user/dies)
[08:41:28] *** Quits: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com) (Ping timeout: 256 seconds)
[08:41:52] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[08:42:06] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[08:44:59] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[08:45:11] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47)
[08:45:19] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[08:45:42] *** Joins: Ringtailed-Fox (~BoingBoin@2001:1970:5d2a:c500:1062:6ccc:6554:e08f)
[08:46:17] *** Joins: parv (~quass@user/parv)
[08:46:20] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:46:21] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.4)
[08:47:43] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[08:48:03] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[08:48:09] <whatsupdoc> ok thx
[08:48:16] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[08:48:52] *** Quits: RingtailedFox (~BoingBoin@2001:1970:5d2a:c500:7471:dedd:49c8:e483) (Ping timeout: 250 seconds)
[08:49:07] *** Joins: fsoc (~shynerd@bison.alphaw0lf.xyz)
[08:49:18] *** Quits: emerent (~quassel@p200300cd57044339ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[08:49:44] *** Joins: emerent (~quassel@p200300cd5704438cba27ebfffed28a59.dip0.t-ipconnect.de)
[08:51:59] *** Quits: MrFantastik (~f@2607:f598:bbda:90:c5d3:26c:1b99:66dc) (Ping timeout: 252 seconds)
[08:52:15] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:5964:9756:f802:18c2)
[08:52:40] *** Quits: fsoc (~shynerd@bison.alphaw0lf.xyz) (Client Quit)
[08:53:01] *** Joins: bluedust (~bluedust@59.89.212.127)
[08:53:43] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 256 seconds)
[09:01:24] *** Joins: f-chymera (~chymera@ns1000526.ip-51-81-46.us)
[09:01:39] *** Quits: chymera (~chymera@ns1000526.ip-51-81-46.us) (Ping timeout: 256 seconds)
[09:01:48] *** Quits: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553) (Quit: Client limit exceeded: 20000)
[09:02:52] *** f-chymera is now known as chymera
[09:04:27] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[09:05:45] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[09:06:09] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4368:9dd6:c255:95c1) (Quit: Leaving)
[09:06:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:07:05] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Quit: Client limit exceeded: 20000)
[09:07:14] *** Joins: cheater (~Username@user/cheater)
[09:07:19] *** Quits: luva (~luva@45.141.152.54) (Ping timeout: 256 seconds)
[09:08:12] *** Quits: analoq (~yashi@user/dies) (*.net *.split)
[09:08:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (*.net *.split)
[09:08:12] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (*.net *.split)
[09:08:12] *** Quits: supakeen (~user@python/site-packages/supakeen) (*.net *.split)
[09:08:12] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (*.net *.split)
[09:08:12] *** Quits: \mSg (mSg@user/msg/x-0285936) (*.net *.split)
[09:08:12] *** Quits: masoudd (~masoudd@user/masoudd) (*.net *.split)
[09:08:12] *** Quits: CoolerY (~CoolerX@user/coolerx) (*.net *.split)
[09:08:12] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (*.net *.split)
[09:08:12] *** Quits: novapy (~chronos@12.71.10.20) (*.net *.split)
[09:08:12] *** Quits: Vonter (~Vonter@user/vonter) (*.net *.split)
[09:08:12] *** Quits: M3troidman (~buttler@196.196.203.108) (*.net *.split)
[09:08:12] *** Quits: pycurious (~Adium@user/pycurious) (*.net *.split)
[09:08:12] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (*.net *.split)
[09:08:12] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (*.net *.split)
[09:08:12] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (*.net *.split)
[09:08:12] *** Quits: Wulf (~Wulf@user/wulf) (*.net *.split)
[09:08:12] *** Quits: Juhaz (~juhaz@hilla.kapsi.fi) (*.net *.split)
[09:08:12] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (*.net *.split)
[09:08:12] *** Quits: gnoirzox (~gnoirzox@178.170.103.136) (*.net *.split)
[09:08:12] *** Quits: dthpulse (~quassel@podciarou.sk) (*.net *.split)
[09:08:12] *** Quits: ckdCreations (~ckdCreati@147.55.133.138) (*.net *.split)
[09:08:12] *** Quits: hams (~hams@user/hams) (*.net *.split)
[09:08:12] *** Quits: mossman93 (~quassel@user/mossman93) (*.net *.split)
[09:08:12] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (*.net *.split)
[09:08:12] *** Quits: fikran (~fikran@user/fikran) (*.net *.split)
[09:08:12] *** Quits: ttys000 (~ttys000@user/ttys000) (*.net *.split)
[09:08:12] *** Quits: synic (~squish@li74-118.members.linode.com) (*.net *.split)
[09:08:12] *** Quits: KombuchaKip (~kip@192.252.230.5) (*.net *.split)
[09:08:12] *** Quits: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net) (*.net *.split)
[09:08:12] *** Quits: Sadale (~Sadale@user/sadale) (*.net *.split)
[09:08:12] *** Quits: waynew (~wayne@user/waynew) (*.net *.split)
[09:08:12] *** Quits: hyiltiz (~quassel@31.220.5.250) (*.net *.split)
[09:08:12] *** Quits: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net) (*.net *.split)
[09:08:12] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (*.net *.split)
[09:08:12] *** Quits: bloody (~bloody@user/bloody) (*.net *.split)
[09:08:12] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (*.net *.split)
[09:08:12] *** Quits: Phase (~phase@user/phase) (*.net *.split)
[09:08:12] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (*.net *.split)
[09:08:12] *** Quits: launchd (~launchd@bitbot/launchd) (*.net *.split)
[09:08:12] *** Quits: astiak (~astiak@ownage.biz) (*.net *.split)
[09:08:12] *** Quits: sokan (~sokan@85.73.227.251) (*.net *.split)
[09:08:12] *** Quits: w0rp (~w0rp@w0rp.com) (*.net *.split)
[09:08:12] *** Quits: Speed2u (~Speed2u@bnc.speed2u.nu) (*.net *.split)
[09:08:12] *** Quits: agireud (~agireud@user/agireud) (*.net *.split)
[09:08:12] *** Quits: RiFo (~RiFo@user/rifo) (*.net *.split)
[09:08:12] *** Quits: dude-x_ (~textual@72.76.74.165) (*.net *.split)
[09:08:12] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-69-77.poda.cz) (*.net *.split)
[09:08:12] *** Quits: Elodin (~elodin@user/elodin) (*.net *.split)
[09:08:12] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (*.net *.split)
[09:08:12] *** Quits: Roedy (Roedy@user/roedy) (*.net *.split)
[09:08:12] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (*.net *.split)
[09:08:12] *** Quits: seabre (~seabre@user/seabre) (*.net *.split)
[09:08:12] *** Quits: treefrob (~treefrob@p57a96ba4.dip0.t-ipconnect.de) (*.net *.split)
[09:08:12] *** Quits: rwbrambler (~Thunderbi@65.183.138.202) (*.net *.split)
[09:08:12] *** Quits: towel (~towel@user/towel) (*.net *.split)
[09:08:12] *** Quits: onur (~onur@user/onur) (*.net *.split)
[09:08:12] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[09:08:12] *** Quits: Leonarbro (~Leonet@user/leonarbro) (*.net *.split)
[09:08:12] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (*.net *.split)
[09:08:12] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (*.net *.split)
[09:08:12] *** Quits: erry (~erry@errietta.me) (*.net *.split)
[09:08:12] *** Quits: infernix (~nix@spirit.infernix.net) (*.net *.split)
[09:08:12] *** Quits: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com) (*.net *.split)
[09:08:12] *** Quits: MrC (~Ben@mrbenc.net) (*.net *.split)
[09:08:12] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (*.net *.split)
[09:08:12] *** Quits: libussa (~libussa@libussa.net) (*.net *.split)
[09:08:12] *** Quits: georgeisbot (~georgeisb@8.12.22.9) (*.net *.split)
[09:08:12] *** Quits: vbgunz (~vbgunz@35.141.71.47) (*.net *.split)
[09:08:12] *** Quits: SlicerDicer68 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net) (*.net *.split)
[09:08:12] *** Quits: wovixo (~wovixo@128.104.205.49) (*.net *.split)
[09:08:12] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (*.net *.split)
[09:08:12] *** Quits: iob (~iob@nat1.prg.suse.com) (*.net *.split)
[09:08:12] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[09:08:12] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (*.net *.split)
[09:08:12] *** Quits: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (*.net *.split)
[09:08:12] *** Quits: Joel (~jjshoe@user/joel) (*.net *.split)
[09:08:12] *** Quits: crunchy_david (~david@pgguru.net) (*.net *.split)
[09:08:12] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (*.net *.split)
[09:08:12] *** Quits: Viewday11 (~Viewday@user/viewday) (*.net *.split)
[09:08:12] *** Quits: d3sync (~d3sync@62.1.158.240) (*.net *.split)
[09:08:12] *** Quits: Mogget (~Mogget@vogon02.moshwire.com) (*.net *.split)
[09:08:12] *** Quits: tpr (~tpr@user/tpr) (*.net *.split)
[09:08:12] *** Quits: Pici (~bnrubin@li1014-36.members.linode.com) (*.net *.split)
[09:08:12] *** Quits: ghormoon (~ghormoon@ghorland.net) (*.net *.split)
[09:08:12] *** Quits: swistak (~swistak@185.21.216.141) (*.net *.split)
[09:08:12] *** Quits: foul_owl (~kerry@94.140.8.107) (*.net *.split)
[09:08:12] *** Quits: lumgwada (~lumgwada@user/lumgwada) (*.net *.split)
[09:08:12] *** Quits: kuahara (kuahara@072-182-135-032.res.spectrum.com) (*.net *.split)
[09:08:12] *** Quits: Dotz0cat (~Dotz0cat@h55.84.187.173.dynamic.ip.windstream.net) (*.net *.split)
[09:08:12] *** Quits: wilk (~wilk@user/wilk) (*.net *.split)
[09:08:12] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (*.net *.split)
[09:08:12] *** Quits: reset (~reset@user/reset) (*.net *.split)
[09:08:12] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[09:08:12] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (*.net *.split)
[09:08:12] *** Quits: dskull (~dskull@user/dskull) (*.net *.split)
[09:08:12] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (*.net *.split)
[09:08:12] *** Quits: kcrk (~kcrk@user/kcrk) (*.net *.split)
[09:08:12] *** Quits: martums5 (~martums@user/martums) (*.net *.split)
[09:08:12] *** Quits: fbiagent (~fbiagent@user/fbiagent) (*.net *.split)
[09:08:12] *** Quits: lifefir31 (~lifefir3@152.37.120.101) (*.net *.split)
[09:08:12] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-72.dsl.bell.ca) (*.net *.split)
[09:08:12] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (*.net *.split)
[09:08:12] *** Quits: jdmark (~jdmark@user/jdmark) (*.net *.split)
[09:08:12] *** Quits: justGhost (~justache@user/justache) (*.net *.split)
[09:08:13] *** Quits: mmalter (~mmalter@88.126.10.237) (*.net *.split)
[09:08:13] *** Quits: Hackerpcs (~user@user/hackerpcs) (*.net *.split)
[09:08:13] *** Quits: jjasghar (~jjasghar@idlerpg/player/jjasghar) (*.net *.split)
[09:08:13] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (*.net *.split)
[09:08:13] *** Quits: voidcat (~voidcat@user/voidcat) (*.net *.split)
[09:08:13] *** Quits: mcglk (~mcglk@131.191.49.120) (*.net *.split)
[09:08:13] *** Quits: Kraus (~quassel@075-141-246-250.res.spectrum.com) (*.net *.split)
[09:08:13] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (*.net *.split)
[09:08:13] *** Quits: arooni (~arooni@li1062-244.members.linode.com) (*.net *.split)
[09:08:13] *** Quits: gerty (~gerty@user/gerty) (*.net *.split)
[09:08:13] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (*.net *.split)
[09:08:13] *** Quits: sunyour (~sunyour@129.226.182.99) (*.net *.split)
[09:08:13] *** Quits: DXR (~lyrical@194.219.251.132) (*.net *.split)
[09:08:13] *** Quits: dodo (~dodo@user/dodo) (*.net *.split)
[09:08:13] *** Quits: ThomasJ (~ThomasJ@user/thomasj) (*.net *.split)
[09:08:13] *** Quits: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com) (*.net *.split)
[09:08:13] *** Quits: coc0nut (~coc0nut@user/coc0nut) (*.net *.split)
[09:08:13] *** Quits: Neopolitan (~tn5421@45.76.61.24) (*.net *.split)
[09:08:13] *** Quits: Dan39 (~dan@user/dan39) (*.net *.split)
[09:08:13] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (*.net *.split)
[09:08:13] *** Quits: purplex (~purplex@user/purplex) (*.net *.split)
[09:08:13] *** Quits: greatgatsby__ (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (*.net *.split)
[09:08:13] *** Quits: scoobydoo (~scooby@user/scoobydoo) (*.net *.split)
[09:08:13] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (*.net *.split)
[09:08:13] *** Quits: HvszrStykp (~X@81.171.62.84) (*.net *.split)
[09:08:13] *** Quits: naari (~naari@user/naari) (*.net *.split)
[09:08:13] *** Quits: xakan (~xakan@pnmx.zdx.fr) (*.net *.split)
[09:08:13] *** Quits: mage (~julien@orval.bbpf.belspo.be) (*.net *.split)
[09:08:13] *** Quits: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se) (*.net *.split)
[09:08:13] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (*.net *.split)
[09:08:13] *** Quits: dsp00 (~dsp00@20.79.249.135) (*.net *.split)
[09:08:13] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (*.net *.split)
[09:08:13] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (*.net *.split)
[09:08:13] *** Quits: _val_ (~valentin@82-169-14-137.biz.kpn.net) (*.net *.split)
[09:08:13] *** Quits: queue- (~nerd@user/queue/x-7267619) (*.net *.split)
[09:08:13] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[09:08:13] *** Quits: Melon_Bread (~Melon_Bre@li958-238.members.linode.com) (*.net *.split)
[09:08:13] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (*.net *.split)
[09:08:13] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (*.net *.split)
[09:08:13] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (*.net *.split)
[09:08:13] *** Quits: dminuoso (~dminuoso@user/dminuoso) (*.net *.split)
[09:08:13] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:08:13] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[09:08:13] *** Quits: nigelb (~nigel@zeus.nigelb.me) (*.net *.split)
[09:08:13] *** Quits: gjvc (~gjvc@user/gjvc) (*.net *.split)
[09:08:13] *** Quits: ecool (~ecool@ecool.dev) (*.net *.split)
[09:08:13] *** Quits: lidless (~lidless@user/lidless) (*.net *.split)
[09:08:13] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[09:08:13] *** Quits: n1000 (~n1000@user/n1000) (*.net *.split)
[09:08:13] *** Quits: stella (~aoei@nethackscoreboard/aoei) (*.net *.split)
[09:08:13] *** Quits: Helle (~helle@45.83.235.185) (*.net *.split)
[09:08:13] *** Quits: meejah (~meejah@rutas.meejah.ca) (*.net *.split)
[09:08:13] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[09:08:13] *** Quits: potatosal (~salad@user/potatosal) (*.net *.split)
[09:08:13] *** Quits: hrm (~hrm@nimbus.harmtemolder.nl) (*.net *.split)
[09:08:13] *** Quits: kolcon (~kolcon@v.kolouch.org) (*.net *.split)
[09:08:13] *** Quits: NOTevil (~notevil@user/notevil) (*.net *.split)
[09:08:13] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[09:08:13] *** Quits: peanuter_ (~peanuter@static.190.220.201.138.clients.your-server.de) (*.net *.split)
[09:08:13] *** Quits: streety (~streety@li761-24.members.linode.com) (*.net *.split)
[09:08:13] *** Quits: achilleas (~ach@user/achilleas) (*.net *.split)
[09:08:13] *** Quits: ntdll_ (~ntdll@shion.saiban.me) (*.net *.split)
[09:08:13] *** Quits: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net) (*.net *.split)
[09:08:13] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (*.net *.split)
[09:08:13] *** Quits: lantech19446 (~lantech19@144.202.10.138) (*.net *.split)
[09:08:13] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[09:08:13] *** Quits: AnimalFarmPig (~quassel@user/animalfarmpig) (*.net *.split)
[09:08:13] *** Quits: han-` (~han`@user/han-/x-0887595) (*.net *.split)
[09:08:13] *** Quits: nickodd (~nickodd@user/nickodd) (*.net *.split)
[09:08:13] *** Quits: Nei (~ailin@openSUSE/member/ailin-nemui) (*.net *.split)
[09:08:13] *** Quits: asix (~Anders@user/asix) (*.net *.split)
[09:08:13] *** Quits: emerent (~quassel@p200300cd5704438cba27ebfffed28a59.dip0.t-ipconnect.de) (*.net *.split)
[09:08:13] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (*.net *.split)
[09:08:13] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47) (*.net *.split)
[09:08:13] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:e762:820b:16f3:d1dd) (*.net *.split)
[09:08:13] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (*.net *.split)
[09:08:13] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (*.net *.split)
[09:08:13] *** Quits: bytehackr (~Sandipan@43.252.250.126) (*.net *.split)
[09:08:13] *** Quits: johnjaye (~pi@173.209.65.233) (*.net *.split)
[09:08:13] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:e0a8:b0fc:676d:dc5d) (*.net *.split)
[09:08:13] *** Quits: mcpackey (~pm0001@p5dc1c7d2.dip0.t-ipconnect.de) (*.net *.split)
[09:08:13] *** Quits: adeliktas (~adeliktas@i59F5F5AE.versanet.de) (*.net *.split)
[09:08:13] *** Quits: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269) (*.net *.split)
[09:08:13] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (*.net *.split)
[09:08:13] *** Quits: Trashlord (~trash@user/trashlord) (*.net *.split)
[09:08:13] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (*.net *.split)
[09:08:13] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (*.net *.split)
[09:08:13] *** Quits: jancoow (~jancoow@user/jancoow) (*.net *.split)
[09:08:13] *** Quits: brabrax (~brabrax@user/brabrax) (*.net *.split)
[09:08:13] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (*.net *.split)
[09:08:13] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (*.net *.split)
[09:08:13] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (*.net *.split)
[09:08:13] *** Quits: vlm (~vlm@user/vlm) (*.net *.split)
[09:08:14] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (*.net *.split)
[09:08:14] *** Quits: kmh_ (~kmh@94.31.106.215) (*.net *.split)
[09:08:14] *** Quits: luke-jr (~luke-jr@user/luke-jr) (*.net *.split)
[09:08:14] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (*.net *.split)
[09:08:14] *** Quits: brookesy66 (~will@203.220.123.174) (*.net *.split)
[09:08:14] *** Quits: aphysically (~aphysical@user/aphysically) (*.net *.split)
[09:08:14] *** Quits: mdemo (~mdemo@user/mdemo22) (*.net *.split)
[09:08:14] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (*.net *.split)
[09:08:14] *** Quits: FunkyELF (~FunkyELF@76-217-82-15.lightspeed.chrlnc.sbcglobal.net) (*.net *.split)
[09:08:14] *** Quits: clarjon_1 (~clarjon1@user/clarjon1) (*.net *.split)
[09:08:14] *** Quits: ubert (~Thunderbi@141.98.252.252) (*.net *.split)
[09:08:14] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (*.net *.split)
[09:08:14] *** Quits: maryo87 (~Maryo@user/maryo) (*.net *.split)
[09:08:14] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (*.net *.split)
[09:08:14] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (*.net *.split)
[09:08:14] *** Quits: rvalue (~rvalue@user/rvalue) (*.net *.split)
[09:08:14] *** Quits: Peng_ (~mnordhoff@user/Peng) (*.net *.split)
[09:08:14] *** Quits: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001) (*.net *.split)
[09:08:14] *** Quits: susam (~susam@user/susam) (*.net *.split)
[09:08:14] *** Quits: skipper (~whatsupbo@user/scobydoo) (*.net *.split)
[09:08:14] *** Quits: baakeydow (~baake@2001:41d0:203:b12c::) (*.net *.split)
[09:08:14] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:117c:703e:db5f:c029) (*.net *.split)
[09:08:14] *** Quits: alxndr (~alexander@ybti.net) (*.net *.split)
[09:08:14] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (*.net *.split)
[09:08:14] *** Quits: kehn (quassel@2600:3c03::f03c:92ff:fe9a:ad08) (*.net *.split)
[09:08:14] *** Quits: jw_dungeon (~quassel@2601:44:4380:4a10:4587:3637:b23f:ed34) (*.net *.split)
[09:08:14] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[09:08:14] *** Quits: hays (rootvegeta@fsf/member/hays) (*.net *.split)
[09:08:14] *** Quits: uuair (~quassel@user/uuair) (*.net *.split)
[09:08:14] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f824) (*.net *.split)
[09:08:14] *** Quits: vakera_pingveno_ (~dan@2600:1700:21f9:b150::40) (*.net *.split)
[09:08:14] *** Quits: truckasaurus (sid457088@id-457088.helmsley.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: r0bby (r0bby@user/r0bby) (*.net *.split)
[09:08:14] *** Quits: frodl (sid527064@user/frodl) (*.net *.split)
[09:08:14] *** Quits: Fingel (fingel@user/fingel) (*.net *.split)
[09:08:14] *** Quits: ravioli_ (sid83460@donger/pasta) (*.net *.split)
[09:08:14] *** Quits: bloodElk (~bloodElk@user/bloodelk) (*.net *.split)
[09:08:14] *** Quits: Pr0phet (sid505706@id-505706.hampstead.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: km_ (znc@user/km) (*.net *.split)
[09:08:14] *** Quits: josh_h (sid301834@id-301834.helmsley.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz) (*.net *.split)
[09:08:14] *** Quits: nhanb_ (522d4a25ea@2604:bf00:561:2000::13b) (*.net *.split)
[09:08:14] *** Quits: gildarts (16abab341f@user/gildarts) (*.net *.split)
[09:08:14] *** Quits: _sgen (~sgen@2607:fea8:7ce1:c8e0:ec63:8eee:4635:2aa8) (*.net *.split)
[09:08:14] *** Quits: saribro (~swinnenb@user/swinnenb) (*.net *.split)
[09:08:14] *** Quits: Fl1pFl0p (~FlipFlop@user/fl1pfl0p) (*.net *.split)
[09:08:14] *** Quits: Furai (~Furai@furai.pl) (*.net *.split)
[09:08:14] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (*.net *.split)
[09:08:14] *** Quits: dre (~dre@2001:8003:c932:c301:77c0:cff4:f6dd:6abf) (*.net *.split)
[09:08:14] *** Quits: XV8 (~XV8@2601:5cb:c001:50:f81d:9eae:67e3:1b35) (*.net *.split)
[09:08:14] *** Quits: oprypin (~irc@pryp.in) (*.net *.split)
[09:08:14] *** Quits: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e) (*.net *.split)
[09:08:14] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (*.net *.split)
[09:08:14] *** Quits: jtanner (sid194399@id-194399.helmsley.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: sidmitra (sid17533@id-17533.tinside.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: CrtxReavr (crtxreavr@shodan.trioptimum.com) (*.net *.split)
[09:08:14] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: coldmountain (sid484352@id-484352.helmsley.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: dunc (sid16@id-16.uxbridge.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[09:08:14] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (*.net *.split)
[09:08:14] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (*.net *.split)
[09:08:14] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (*.net *.split)
[09:08:14] *** Quits: Warped (~Warped@user/warped) (*.net *.split)
[09:08:14] *** Quits: trainsley69_ (~trainsley@c188-148-14-166.bredband.tele2.se) (*.net *.split)
[09:08:14] *** Quits: chowmeined (~chowmeine@user/chowmeined) (*.net *.split)
[09:08:14] *** Quits: dsc_ (~dsc@70.68.10.185.ro.ovo.sc) (*.net *.split)
[09:08:14] *** Quits: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de) (*.net *.split)
[09:08:14] *** Quits: waxfire6 (~waxfire@65.119.2.240) (*.net *.split)
[09:08:14] *** Quits: digilink (~digilink@user/digilink) (*.net *.split)
[09:08:14] *** Quits: xxyxx (~none@ip-037-024-160-145.um08.pools.vodafone-ip.de) (*.net *.split)
[09:08:14] *** Quits: SuperLag (~akulbe@user/superlag) (*.net *.split)
[09:08:14] *** Quits: adeliktas7 (~adeliktas@v15153.1blu.de) (*.net *.split)
[09:08:14] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (*.net *.split)
[09:08:14] *** Quits: sabet (~sabet@user/sabet) (*.net *.split)
[09:08:14] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (*.net *.split)
[09:08:14] *** Quits: Omega037 (~Omega037@047-233-057-109.res.spectrum.com) (*.net *.split)
[09:08:14] *** Quits: ndim (hun@moooo.n-dimensional.de) (*.net *.split)
[09:08:14] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (*.net *.split)
[09:08:14] *** Quits: gegensch1in (~james@ec2-54-210-169-253.compute-1.amazonaws.com) (*.net *.split)
[09:08:14] *** Quits: dupl0x (~duplox@137.220.127.235) (*.net *.split)
[09:08:14] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (*.net *.split)
[09:08:14] *** Quits: jbeimler_ (~quassel@75.183.82.166) (*.net *.split)
[09:08:14] *** Quits: rexbinary (~rexbinary@user/rexbinary) (*.net *.split)
[09:08:14] *** Quits: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se) (*.net *.split)
[09:08:14] *** Quits: visl (visl@user/visl) (*.net *.split)
[09:08:14] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (*.net *.split)
[09:08:14] *** Quits: zmotaj (~zmotaj@user/zmotaj) (*.net *.split)
[09:08:14] *** Quits: bidouille (~user_name@trois.potager.org) (*.net *.split)
[09:08:14] *** Quits: Throgkt (~Throgkt@user/throgkt) (*.net *.split)
[09:08:14] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (*.net *.split)
[09:08:14] *** Quits: lawt (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9) (*.net *.split)
[09:08:14] *** Quits: bambams (~bambams@user/bambams) (*.net *.split)
[09:08:14] *** Quits: edr (~edr@user/edr) (*.net *.split)
[09:08:14] *** Quits: grym (~grym@user/grym) (*.net *.split)
[09:08:14] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (*.net *.split)
[09:08:14] *** Quits: Alan (~alan@user/alan) (*.net *.split)
[09:08:14] *** Quits: ATAD (~ATAD@user/atad) (*.net *.split)
[09:08:14] *** Quits: NoxTurminal8 (~Noxturmin@user/noxturminal) (*.net *.split)
[09:08:14] *** Quits: davef (dave@user/davef) (*.net *.split)
[09:08:14] *** Quits: lambda (~weechat@cyka.blyat.vodka) (*.net *.split)
[09:08:14] *** Quits: fury (uid193779@id-193779.helmsley.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: fluter (~fluter@user/fluter) (*.net *.split)
[09:08:14] *** Quits: Abrax (~Abrax@user/abrax) (*.net *.split)
[09:08:14] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (*.net *.split)
[09:08:14] *** Quits: hexa- (~hexa-@juno.lossy.network) (*.net *.split)
[09:08:14] *** Quits: Myst3 (~Myst@user/myst) (*.net *.split)
[09:08:14] *** Quits: jessicant (~jessica@static.172.234.251.148.clients.your-server.de) (*.net *.split)
[09:08:14] *** Quits: nochi (~nochi@2a01:4f8:10b:3074::4) (*.net *.split)
[09:08:14] *** Quits: EtherMan (~quassel@inception.debokred.se) (*.net *.split)
[09:08:14] *** Quits: nicoz- (unixlab@ubuntu/member/nicoz) (*.net *.split)
[09:08:14] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (*.net *.split)
[09:08:14] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (*.net *.split)
[09:08:14] *** Quits: akimbo533 (~akimbo@customer-145-40-27-9.stosn.net) (*.net *.split)
[09:08:14] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (*.net *.split)
[09:08:14] *** Quits: wereii (~wereii@37.205.14.89) (*.net *.split)
[09:08:14] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (*.net *.split)
[09:08:14] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (*.net *.split)
[09:08:15] *** Quits: DK3 (~DK3@user/DK3) (*.net *.split)
[09:08:15] *** Quits: tf (~tf@user/tf) (*.net *.split)
[09:08:15] *** Quits: giesen (~ggiesen@ego.giesen.me) (*.net *.split)
[09:08:15] *** Quits: OPK (~OPK@user/opk) (*.net *.split)
[09:08:15] *** Quits: Common (~Common@096-033-221-075.res.spectrum.com) (*.net *.split)
[09:08:15] *** Quits: mixfix41 (~homefame@user/mixfix41) (*.net *.split)
[09:08:15] *** Quits: niv (~niv@limbo.cypherpunks.io) (*.net *.split)
[09:08:15] *** Quits: cdleonard (~cdleonard@ec2-52-70-55-94.compute-1.amazonaws.com) (*.net *.split)
[09:08:15] *** Quits: vigumnov (~victori@cpe-76-89-139-69.socal.res.rr.com) (*.net *.split)
[09:08:15] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (*.net *.split)
[09:08:15] *** Quits: introom (introom@2600:3c01::f03c:92ff:fea3:2cf) (*.net *.split)
[09:08:15] *** Quits: unyu (~pyon@user/pyon) (*.net *.split)
[09:08:15] *** Quits: nfc_ (nfc@tilde.institute) (*.net *.split)
[09:08:15] *** Quits: OverCoder (~OverCoder@user/overcoder) (*.net *.split)
[09:08:15] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (*.net *.split)
[09:08:15] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (*.net *.split)
[09:08:15] *** Quits: haasn (~nand@haasn.dev) (*.net *.split)
[09:08:15] *** Quits: mgedmin (~mg@user/mgedmin) (*.net *.split)
[09:08:15] *** Quits: avu (~jan@user/avu) (*.net *.split)
[09:08:15] *** Quits: sjk (~sjk@user/sjk) (*.net *.split)
[09:08:15] *** Quits: ST47 (~ST47@wikimedia/st47) (*.net *.split)
[09:08:15] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (*.net *.split)
[09:08:15] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (*.net *.split)
[09:08:15] *** Quits: Kebianizao (~Kebianiza@188.127.160.11) (*.net *.split)
[09:08:15] *** Quits: dharrigan (~dharrigan@user/dharrigan) (*.net *.split)
[09:08:15] *** Quits: Retr0id (~Retr0id@user/retr0id) (*.net *.split)
[09:08:15] *** Quits: luciusf1 (~luciusf@46.23.90.165) (*.net *.split)
[09:08:15] *** Quits: lew (c292bc13c9@2604:bf00:561:2000::27e) (*.net *.split)
[09:08:15] *** Quits: mrHedgehog0 (9658dbe103@2604:bf00:561:2000::a5) (*.net *.split)
[09:08:15] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (*.net *.split)
[09:08:15] *** Quits: akspecs (00cc8321af@sourcehut/user/akspecs) (*.net *.split)
[09:08:15] *** Quits: fluffyballoon (45ce440a48@2604:bf00:561:2000::e2) (*.net *.split)
[09:08:15] *** Quits: srstevenson (b46bf53c49@2604:bf00:561:2000::f3) (*.net *.split)
[09:08:15] *** Quits: colbyhub (411e4f2740@2604:bf00:561:2000::2de) (*.net *.split)
[09:08:15] *** Quits: akelly (24aca7a63b@2604:bf00:561:2000::152) (*.net *.split)
[09:08:15] *** Quits: srhm (dda3db84b5@user/srhm) (*.net *.split)
[09:08:15] *** Quits: andrea (3f138254b4@2604:bf00:561:2000::38) (*.net *.split)
[09:08:15] *** Quits: Hummer12007 (061e0434dc@2604:bf00:561:2000::16) (*.net *.split)
[09:08:15] *** Quits: sliwkr (1aac56ad72@2604:bf00:561:2000::251) (*.net *.split)
[09:08:15] *** Quits: sharktamer (9bafe1e1bb@2604:bf00:561:2000::17) (*.net *.split)
[09:08:15] *** Quits: spiderman (spiderman@spiderman.shelltalk.net) (*.net *.split)
[09:08:15] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (*.net *.split)
[09:08:15] *** Quits: ormiret (sid314108@id-314108.lymington.irccloud.com) (*.net *.split)
[09:08:15] *** Quits: FLHerne (flh@flherne.uk) (*.net *.split)
[09:08:15] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:08:15] *** Quits: duoi (~duoi@user/duoi) (*.net *.split)
[09:08:15] *** Quits: lewisje (~lewisje@72.49.207.113) (*.net *.split)
[09:08:15] *** Quits: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie) (*.net *.split)
[09:08:15] *** Quits: kujo (~kujo@188.166.12.52) (*.net *.split)
[09:08:15] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (*.net *.split)
[09:08:15] *** Quits: H4Z3 (~H4ZE@165.227.36.29) (*.net *.split)
[09:08:15] *** Quits: vishwin (~brioux@2001:470:1f07:302::1) (*.net *.split)
[09:08:15] *** Quits: Macuser (Macuser@here.for-the.chat) (*.net *.split)
[09:08:15] *** Quits: Andrew (andrew@andrewyu.org) (*.net *.split)
[09:08:15] *** Quits: Phoebus (sid422845@id-422845.ilkley.irccloud.com) (*.net *.split)
[09:08:15] *** Quits: be3uykpy (~ubuntu@141.144.233.89) (*.net *.split)
[09:08:15] *** Quits: EyeOfJupiter (~EyeOfJ@user/eyeofjupiter) (*.net *.split)
[09:08:15] *** Quits: Ninpo (~Ninpo@user/ninpo) (*.net *.split)
[09:08:15] *** Quits: ixjlyons (kenny@2600:3c01::f03c:91ff:fe80:22c6) (*.net *.split)
[09:08:15] *** Quits: byzafk (~byzandula@beerbq.net) (*.net *.split)
[09:08:15] *** Quits: grandfso_ (~quassel@199.232.237.35.bc.googleusercontent.com) (*.net *.split)
[09:08:15] *** Quits: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1) (*.net *.split)
[09:08:15] *** Quits: vegii (~quassel@2001:470:1f18:3aa:30f::5439) (*.net *.split)
[09:08:15] *** Quits: arti (~arti@2001:bb8:4008:2020::f) (*.net *.split)
[09:08:15] *** Quits: or4n_ (~or4n@gerbera.qkka.org) (*.net *.split)
[09:08:15] *** Quits: catbeard (~noise@user/catbeard) (*.net *.split)
[09:08:15] *** Quits: Chex (~Chex@user/chex) (*.net *.split)
[09:08:15] *** Quits: cole (~cole@user/cole) (*.net *.split)
[09:08:15] *** Quits: decartes (sid240036@id-240036.helmsley.irccloud.com) (*.net *.split)
[09:08:15] *** Quits: altendky (sid135382@id-135382.hampstead.irccloud.com) (*.net *.split)
[09:08:15] *** Quits: mrproper (sid382572@id-382572.uxbridge.irccloud.com) (*.net *.split)
[09:08:15] *** Quits: cpach (sid296028@id-296028.helmsley.irccloud.com) (*.net *.split)
[09:08:15] *** Quits: jcass4 (~jcass4@066-188-202-056.res.spectrum.com) (*.net *.split)
[09:08:15] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (*.net *.split)
[09:08:15] *** Quits: catdog (~quassel@2001:470:50f7:cdcd::cd1) (*.net *.split)
[09:08:15] *** Quits: overrider (~overrider@user/overrider) (*.net *.split)
[09:08:16] *** Quits: dwt__ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net) (*.net *.split)
[09:08:16] *** Quits: hifi (hifi@heisenbridge/hifi) (*.net *.split)
[09:08:16] *** Quits: dudebbn (~dudebbn@cpe-174-97-16-77.cinci.res.rr.com) (*.net *.split)
[09:08:16] *** Quits: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003) (*.net *.split)
[09:08:16] *** Quits: ryan-c (ryan-c@znc.rya.nc) (*.net *.split)
[09:08:16] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (*.net *.split)
[09:08:16] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (*.net *.split)
[09:08:16] *** Quits: e-snail (~pete@user/e-snail) (*.net *.split)
[09:08:16] *** Quits: Falcon| (andreas@user/falcon/x-0540249) (*.net *.split)
[09:08:16] *** Quits: cyberpear (uid364019@fedora/cyberpear) (*.net *.split)
[09:08:16] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (*.net *.split)
[09:08:16] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[09:08:16] *** Quits: rb (~augh@theguntretort.com) (*.net *.split)
[09:08:16] *** Quits: t2mkn (~t2mkn@user/t2mkn) (*.net *.split)
[09:08:16] *** Quits: dxrt (~dxrt@user/dxrt) (*.net *.split)
[09:08:16] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[09:08:16] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (*.net *.split)
[09:08:16] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (*.net *.split)
[09:08:16] *** Quits: m42e (~m42e@pb42.de) (*.net *.split)
[09:08:16] *** Quits: themill_ (~stuart@debian/stuart) (*.net *.split)
[09:08:16] *** Quits: sengy (~sangy@archlinux/trusteduser/sangy) (*.net *.split)
[09:08:16] *** Quits: Oddity (~Oddity@user/oddity) (*.net *.split)
[09:08:16] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (*.net *.split)
[09:08:16] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (*.net *.split)
[09:08:16] *** Quits: az (az@user/azz) (*.net *.split)
[09:08:16] *** Quits: Saxtheowl (~roro@78.192.226.182) (*.net *.split)
[09:08:16] *** Quits: dstein64 (~dstein64@dannyadam.com) (*.net *.split)
[09:08:16] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (*.net *.split)
[09:08:16] *** Quits: dv^_^ (~dv@eclipse.oxfordfun.com) (*.net *.split)
[09:08:16] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (*.net *.split)
[09:08:16] *** Quits: casastorta (~casastort@neo2.krivokuca.net) (*.net *.split)
[09:08:16] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (*.net *.split)
[09:08:16] *** Quits: runelind_ (~runelind@user/runelind) (*.net *.split)
[09:08:16] *** Quits: trashcatt (~trashcatt@znc.trashcat.xyz) (*.net *.split)
[09:08:16] *** Quits: Gerula (~Gerula@user/gerula) (*.net *.split)
[09:08:16] *** Quits: slackcals (~slackcals@user/slackcals) (*.net *.split)
[09:08:16] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (*.net *.split)
[09:08:16] *** Quits: jug (~jug@user/jug) (*.net *.split)
[09:08:16] *** Quits: noarb (~noarb@user/noarb) (*.net *.split)
[09:08:16] *** Quits: koo5_ (~quassel@51.140.155.227) (*.net *.split)
[09:08:16] *** Quits: Arw| (~Arwalk@lfbn-dij-1-961-160.w90-125.abo.wanadoo.fr) (*.net *.split)
[09:08:16] *** Quits: cyphase (~cyphase@user/cyphase) (*.net *.split)
[09:08:16] *** Quits: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com) (*.net *.split)
[09:08:16] *** Quits: deltab (~deltab@user/deltab) (*.net *.split)
[09:08:16] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (*.net *.split)
[09:08:16] *** Quits: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net) (*.net *.split)
[09:08:16] *** Quits: pacbard (~pacbard@user/pacbard) (*.net *.split)
[09:08:16] *** Quits: bmr (~bmr@user/bmr) (*.net *.split)
[09:08:16] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (*.net *.split)
[09:08:16] *** Quits: BillyZane (~BillyZane@185.202.221.36) (*.net *.split)
[09:08:16] *** Quits: dav1d (~dav1d@user/dav1d) (*.net *.split)
[09:08:16] *** Quits: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at) (*.net *.split)
[09:08:16] *** Quits: bdiddy_ (~bdiddy@li654-123.members.linode.com) (*.net *.split)
[09:08:16] *** Quits: grnman_ (~grnman@159.89.27.73) (*.net *.split)
[09:08:16] *** Quits: euidzero_ (~euidzero@158.101.10.150) (*.net *.split)
[09:08:16] *** Quits: alexyov (~alexyov@79.124.0.2) (*.net *.split)
[09:08:16] *** Quits: trashbird (~trashbird@user/trashbird) (*.net *.split)
[09:08:16] *** Quits: Cienisty (Cienisty@user/cienisty) (*.net *.split)
[09:08:16] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (*.net *.split)
[09:08:16] *** Quits: justm33 (~Username@84-84-41-7.fixed.kpn.net) (*.net *.split)
[09:08:16] *** Quits: abc_- (~abc@user/abc) (*.net *.split)
[09:08:16] *** Quits: nbin_ (~nbin@user/nbin) (*.net *.split)
[09:08:16] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (*.net *.split)
[09:08:16] *** Quits: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net) (*.net *.split)
[09:08:16] *** Quits: Axy (~Axy@user/axy) (*.net *.split)
[09:08:16] *** Quits: jladd (~jladd@c-71-63-157-185.hsd1.or.comcast.net) (*.net *.split)
[09:08:16] *** Quits: kr0nk (~kr0nk@user/kr0nk) (*.net *.split)
[09:08:16] *** Quits: elink (~elink@user/elink) (*.net *.split)
[09:08:16] *** Quits: driib2 (~driib@185.65.135.238) (*.net *.split)
[09:08:16] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[09:08:16] *** Quits: kiran (~kiranostr@78.40.148.178) (*.net *.split)
[09:08:16] *** Quits: notepad7 (~notepad@129.159.46.243) (*.net *.split)
[09:08:16] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (*.net *.split)
[09:08:16] *** Quits: novns (~novns@user/novns) (*.net *.split)
[09:08:16] *** Quits: snalty (~Shhh@user/snalty) (*.net *.split)
[09:08:16] *** Quits: {4144} (~{4144}@46.56.68.191) (*.net *.split)
[09:08:16] *** Quits: timmot (~timmot@207.148.85.201) (*.net *.split)
[09:08:16] *** Quits: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net) (*.net *.split)
[09:08:16] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (*.net *.split)
[09:08:16] *** Quits: syrius (syrius@titan.stormtek.net) (*.net *.split)
[09:08:16] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (*.net *.split)
[09:08:16] *** Quits: easter_egg (~jeffry@85.17.16.26) (*.net *.split)
[09:08:16] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[09:08:16] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (*.net *.split)
[09:08:16] *** Quits: ecdhe (~ecdhe@user/ecdhe) (*.net *.split)
[09:08:16] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (*.net *.split)
[09:08:16] *** Quits: dalan6 (~dalan@59-102-63-107.tpgi.com.au) (*.net *.split)
[09:08:16] *** Quits: kofuyu (~kofuyu@user/kofuyu) (*.net *.split)
[09:08:16] *** Quits: \\ (~\0x5c@miaow/nonantedeux) (*.net *.split)
[09:08:16] *** Quits: bkhl (~bkhl@user/bkhl) (*.net *.split)
[09:08:16] *** Quits: d3x (michal@bielaw.ski) (*.net *.split)
[09:08:16] *** Quits: Ranhir (~Ranhir@157.97.53.139) (*.net *.split)
[09:08:16] *** Quits: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net) (*.net *.split)
[09:08:16] *** Quits: monchi (~joints@143.198.92.132) (*.net *.split)
[09:08:16] *** Quits: Cyp (~cyp@213.237.88.120) (*.net *.split)
[09:08:16] *** Quits: Memory (~user_name@user/memory) (*.net *.split)
[09:08:16] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (*.net *.split)
[09:08:16] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (*.net *.split)
[09:08:16] *** Quits: yemel (~yemel@user/yemel) (*.net *.split)
[09:08:16] *** Quits: fuz (~fuz@user/fuz) (*.net *.split)
[09:08:16] *** Quits: bim9262 (~bim9262@user/bim9262) (*.net *.split)
[09:08:16] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (*.net *.split)
[09:08:16] *** Quits: chemsmith (~chemsmith@user/chemsmith) (*.net *.split)
[09:08:16] *** Quits: lyodaom (~user@host86-147-112-224.range86-147.btcentralplus.com) (*.net *.split)
[09:08:16] *** Quits: steam (~steam@user/steam) (*.net *.split)
[09:08:16] *** Quits: lyr (~lyr@user/lyr) (*.net *.split)
[09:08:17] *** Quits: sherlock_95 (~sherlock_@static.131.42.161.5.clients.your-server.de) (*.net *.split)
[09:08:17] *** Quits: minto (~mintograd@47.201.5.61) (*.net *.split)
[09:08:17] *** Quits: synbiose (~synbiose@user/synbiose) (*.net *.split)
[09:08:17] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (*.net *.split)
[09:08:17] *** Quits: phantomcircuit (~phantomci@192.241.205.97) (*.net *.split)
[09:08:17] *** Quits: MightyMu (~MightyMu@104.131.138.31) (*.net *.split)
[09:08:17] *** Quits: phylaz (~phylaz@82.51-174-55.customer.lyse.net) (*.net *.split)
[09:08:17] *** Quits: BUSY (~BUSY@user/busy) (*.net *.split)
[09:08:17] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[09:08:17] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (*.net *.split)
[09:08:17] *** Quits: Unode (~Unode@194.94.44.220) (*.net *.split)
[09:08:17] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (*.net *.split)
[09:08:17] *** Quits: macrobat (~beep@h-155-4-116-88.A785.priv.bahnhof.se) (*.net *.split)
[09:08:17] *** Quits: dodobrain (~dodobrain@user/dodobrain) (*.net *.split)
[09:08:17] *** Quits: Affliction (affliction@idlerpg/player/affliction) (*.net *.split)
[09:08:17] *** Quits: Spr0cket (sprocket@user/Spr0cket) (*.net *.split)
[09:08:17] *** Quits: kinabalu (~kinabalu@about/java/kinabalu) (*.net *.split)
[09:08:17] *** Quits: vince (~vince@75.127.14.76) (*.net *.split)
[09:08:17] *** Quits: Boarders_ (sid425905@id-425905.lymington.irccloud.com) (*.net *.split)
[09:08:17] *** Quits: ThothCastel (sid78195@id-78195.tinside.irccloud.com) (*.net *.split)
[09:08:17] *** Quits: lericson (~lericson@user/lericson) (*.net *.split)
[09:08:17] *** Quits: d1rewolf (sid312924@id-312924.helmsley.irccloud.com) (*.net *.split)
[09:08:17] *** Quits: Evolver (sid32215@user/evolver) (*.net *.split)
[09:08:17] *** Quits: hogarius (hogarius@id-222644.uxbridge.irccloud.com) (*.net *.split)
[09:08:17] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[09:08:17] *** Quits: koopman (sid466269@id-466269.ilkley.irccloud.com) (*.net *.split)
[09:08:17] *** Quits: eichin (sid27120@id-27120.tinside.irccloud.com) (*.net *.split)
[09:08:17] *** Quits: jessicara (~shirogits@user/jessicara) (*.net *.split)
[09:08:17] *** Quits: Tempesta (~Tempesta@user/tempesta) (*.net *.split)
[09:08:17] *** Quits: oakridge (~oakridge@user/oakridge) (*.net *.split)
[09:08:22] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Read error: Connection reset by peer)
[09:08:31] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[09:08:38] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[09:10:04] *** Quits: colo__work (~colo_work@046125249113.public.t-mobile.at) (Remote host closed the connection)
[09:10:36] *** Joins: marduk42 (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[09:10:43] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[09:10:55] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[09:10:56] *** Quits: marduk4 (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Read error: Connection reset by peer)
[09:10:56] *** marduk42 is now known as marduk4
[09:11:17] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Ping timeout: 256 seconds)
[09:11:17] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[09:11:17] *** Quits: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h) (Ping timeout: 256 seconds)
[09:11:51] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 256 seconds)
[09:11:51] *** Quits: davor (~davor@user/davor) (Ping timeout: 256 seconds)
[09:11:51] *** Quits: lastshell (~lastshell@user/lastshell) (Ping timeout: 256 seconds)
[09:12:25] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[09:12:25] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[09:12:25] *** Quits: bluedust (~bluedust@59.89.212.127) (Ping timeout: 256 seconds)
[09:12:25] *** Quits: goepsilongo_ (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com) (Ping timeout: 256 seconds)
[09:12:26] *** Joins: defn (~n0b0dy@user/defn)
[09:12:27] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 250 seconds)
[09:12:59] *** Quits: sreve (~quassel@p4ff44dcd.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[09:12:59] *** Quits: elias117 (~elias117@user/elias117) (Ping timeout: 256 seconds)
[09:12:59] *** Quits: dibas (~dibas@user/dibas) (Ping timeout: 256 seconds)
[09:13:02] *** Joins: sreve_ (~quassel@p4ff44dcd.dip0.t-ipconnect.de)
[09:13:51] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-f079-d115-4870-c583.res6.spectrum.com)
[09:14:30] *** Joins: upsala (~zcb@185.213.155.232)
[09:14:47] *** Joins: fef (~thedawn@user/thedawn)
[09:14:59] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-d8f8-04a8-a351-e8cb.res6.spectrum.com)
[09:16:22] *** Joins: bluedust (~bluedust@59.89.212.127)
[09:16:25] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:17:47] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
[09:18:05] *** Joins: slavfox (~slavfox@93.158.232.111)
[09:18:14] *** Joins: structoha1 (~structoha@gateway/tor-sasl/structoha)
[09:20:49] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[09:21:01] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[09:21:15] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[09:21:15] *** Joins: klotzhauer (~klotzhaue@gibtesnochklopapier.de)
[09:21:15] *** Joins: m42e (~m42e@pb42.de)
[09:21:15] *** Joins: themill_ (~stuart@debian/stuart)
[09:21:15] *** Joins: sengy (~sangy@archlinux/trusteduser/sangy)
[09:21:15] *** Joins: Oddity (~Oddity@user/oddity)
[09:21:15] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[09:21:15] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[09:21:15] *** Joins: az (az@user/azz)
[09:21:15] *** Joins: Saxtheowl (~roro@78.192.226.182)
[09:21:15] *** Joins: dstein64 (~dstein64@dannyadam.com)
[09:21:15] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[09:21:15] *** Joins: Memory (~user_name@user/memory)
[09:21:15] *** Joins: dv^_^ (~dv@eclipse.oxfordfun.com)
[09:21:15] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[09:21:15] *** Joins: casastorta (~casastort@neo2.krivokuca.net)
[09:21:15] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[09:21:15] *** Joins: runelind_ (~runelind@user/runelind)
[09:21:15] *** Joins: trashcatt (~trashcatt@znc.trashcat.xyz)
[09:21:15] *** Joins: Gerula (~Gerula@user/gerula)
[09:21:15] *** Joins: slackcals (~slackcals@user/slackcals)
[09:21:15] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[09:21:15] *** Joins: jug (~jug@user/jug)
[09:21:15] *** Joins: noarb (~noarb@user/noarb)
[09:21:15] *** Joins: koo5_ (~quassel@51.140.155.227)
[09:21:15] *** Joins: Arw| (~Arwalk@lfbn-dij-1-961-160.w90-125.abo.wanadoo.fr)
[09:21:15] *** Joins: cyphase (~cyphase@user/cyphase)
[09:21:15] *** Joins: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[09:21:15] *** Joins: deltab (~deltab@user/deltab)
[09:21:15] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[09:21:15] *** Joins: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net)
[09:21:15] *** Joins: pacbard (~pacbard@user/pacbard)
[09:21:15] *** Joins: bmr (~bmr@user/bmr)
[09:21:15] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[09:21:15] *** Joins: BillyZane (~BillyZane@185.202.221.36)
[09:21:15] *** Joins: dav1d (~dav1d@user/dav1d)
[09:21:15] *** Joins: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at)
[09:21:15] *** Joins: bdiddy_ (~bdiddy@li654-123.members.linode.com)
[09:21:15] *** Joins: grnman_ (~grnman@159.89.27.73)
[09:21:15] *** Joins: euidzero_ (~euidzero@158.101.10.150)
[09:21:15] *** Joins: Cienisty (Cienisty@user/cienisty)
[09:21:15] *** Joins: alexyov (~alexyov@79.124.0.2)
[09:21:15] *** Joins: trashbird (~trashbird@user/trashbird)
[09:21:15] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[09:21:15] *** Joins: justm33 (~Username@84-84-41-7.fixed.kpn.net)
[09:21:15] *** Joins: abc_- (~abc@user/abc)
[09:21:15] *** Joins: nbin_ (~nbin@user/nbin)
[09:21:15] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[09:21:15] *** Joins: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net)
[09:21:15] *** Joins: Axy (~Axy@user/axy)
[09:21:15] *** Joins: jladd (~jladd@c-71-63-157-185.hsd1.or.comcast.net)
[09:21:15] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[09:21:15] *** Joins: elink (~elink@user/elink)
[09:21:15] *** Joins: driib2 (~driib@185.65.135.238)
[09:21:15] *** Joins: macrobat (~beep@h-155-4-116-88.A785.priv.bahnhof.se)
[09:21:15] *** Joins: niko (~niko@libera/staff/niko)
[09:21:15] *** Joins: kiran (~kiranostr@78.40.148.178)
[09:21:15] *** Joins: notepad7 (~notepad@129.159.46.243)
[09:21:15] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[09:21:15] *** Joins: novns (~novns@user/novns)
[09:21:15] *** Joins: snalty (~Shhh@user/snalty)
[09:21:15] *** Joins: {4144} (~{4144}@46.56.68.191)
[09:21:15] *** Joins: timmot (~timmot@207.148.85.201)
[09:21:15] *** Joins: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net)
[09:21:15] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[09:21:15] *** Joins: syrius (syrius@titan.stormtek.net)
[09:21:15] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[09:21:15] *** Joins: easter_egg (~jeffry@85.17.16.26)
[09:21:15] *** Joins: deepy (deepy@user/deepy)
[09:21:15] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[09:21:15] *** Joins: ecdhe (~ecdhe@user/ecdhe)
[09:21:15] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[09:21:15] *** Joins: dalan6 (~dalan@59-102-63-107.tpgi.com.au)
[09:21:15] *** Joins: kofuyu (~kofuyu@user/kofuyu)
[09:21:15] *** Joins: \\ (~\0x5c@miaow/nonantedeux)
[09:21:15] *** Joins: bkhl (~bkhl@user/bkhl)
[09:21:15] *** Joins: d3x (michal@bielaw.ski)
[09:21:15] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[09:21:15] *** Joins: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net)
[09:21:15] *** Joins: monchi (~joints@143.198.92.132)
[09:21:15] *** Joins: Cyp (~cyp@213.237.88.120)
[09:21:15] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[09:21:15] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[09:21:15] *** Joins: yemel (~yemel@user/yemel)
[09:21:15] *** Joins: fuz (~fuz@user/fuz)
[09:21:15] *** Joins: bim9262 (~bim9262@user/bim9262)
[09:21:15] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[09:21:15] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[09:21:15] *** Joins: lyodaom (~user@host86-147-112-224.range86-147.btcentralplus.com)
[09:21:15] *** Joins: steam (~steam@user/steam)
[09:21:15] *** Joins: lyr (~lyr@user/lyr)
[09:21:15] *** Joins: sherlock_95 (~sherlock_@static.131.42.161.5.clients.your-server.de)
[09:21:15] *** Joins: minto (~mintograd@47.201.5.61)
[09:21:15] *** Joins: synbiose (~synbiose@user/synbiose)
[09:21:15] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[09:21:15] *** Joins: phantomcircuit (~phantomci@192.241.205.97)
[09:21:15] *** Joins: MightyMu (~MightyMu@104.131.138.31)
[09:21:15] *** Joins: phylaz (~phylaz@82.51-174-55.customer.lyse.net)
[09:21:15] *** Joins: BUSY (~BUSY@user/busy)
[09:21:15] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[09:21:15] *** Joins: Unode (~Unode@194.94.44.220)
[09:21:15] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[09:22:44] *** Joins: maxzor (~maxzor@2a01cb04054faa005fc964819d42af49.ipv6.abo.wanadoo.fr)
[09:22:44] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[09:22:44] *** Joins: dibas (~dibas@wild.uberspace.de)
[09:22:44] *** Joins: colo_work (~colo_work@046125249113.public.t-mobile.at)
[09:22:44] *** Joins: Habibismillah (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[09:22:44] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[09:22:44] *** Joins: elias117 (~elias117@47.55.112.181)
[09:22:44] *** Joins: emerent (~quassel@p200300cd5704438cba27ebfffed28a59.dip0.t-ipconnect.de)
[09:22:44] *** Joins: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47)
[09:22:44] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:e762:820b:16f3:d1dd)
[09:22:44] *** Joins: CodeGeek (~codegeek@about/java/CodeGeek)
[09:22:44] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[09:22:44] *** Joins: bytehackr (~Sandipan@43.252.250.126)
[09:22:44] *** Joins: johnjaye (~pi@173.209.65.233)
[09:22:44] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:e0a8:b0fc:676d:dc5d)
[09:22:44] *** Joins: mcpackey (~pm0001@p5dc1c7d2.dip0.t-ipconnect.de)
[09:22:44] *** Joins: adeliktas (~adeliktas@i59F5F5AE.versanet.de)
[09:22:44] *** Joins: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269)
[09:22:44] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:22:44] *** Joins: Trashlord (~trash@user/trashlord)
[09:22:44] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[09:22:44] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[09:22:44] *** Joins: jancoow (~jancoow@user/jancoow)
[09:22:44] *** Joins: brabrax (~brabrax@user/brabrax)
[09:22:44] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[09:22:44] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[09:22:44] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[09:22:44] *** Joins: vlm (~vlm@user/vlm)
[09:22:44] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[09:22:44] *** Joins: kmh_ (~kmh@94.31.106.215)
[09:22:44] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[09:22:44] *** Joins: brookesy66 (~will@203.220.123.174)
[09:22:44] *** Joins: aphysically (~aphysical@user/aphysically)
[09:22:44] *** Joins: mdemo (~mdemo@user/mdemo22)
[09:22:44] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[09:22:44] *** Joins: FunkyELF (~FunkyELF@76-217-82-15.lightspeed.chrlnc.sbcglobal.net)
[09:22:44] *** Joins: clarjon_1 (~clarjon1@user/clarjon1)
[09:22:44] *** Joins: ubert (~Thunderbi@141.98.252.252)
[09:22:44] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[09:22:44] *** Joins: maryo87 (~Maryo@user/maryo)
[09:22:44] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[09:22:44] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:22:44] *** Joins: rvalue (~rvalue@user/rvalue)
[09:22:44] *** Joins: Peng_ (~mnordhoff@user/Peng)
[09:22:44] *** Joins: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001)
[09:22:44] *** Joins: susam (~susam@user/susam)
[09:22:44] *** Joins: skipper (~whatsupbo@user/scobydoo)
[09:22:44] *** Joins: baakeydow (~baake@2001:41d0:203:b12c::)
[09:22:44] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:117c:703e:db5f:c029)
[09:22:44] *** Joins: alxndr (~alexander@ybti.net)
[09:22:44] *** Joins: kehn (quassel@2600:3c03::f03c:92ff:fe9a:ad08)
[09:22:44] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[09:22:44] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[09:22:44] *** Joins: jw_dungeon (~quassel@2601:44:4380:4a10:4587:3637:b23f:ed34)
[09:22:44] *** Joins: hays (rootvegeta@fsf/member/hays)
[09:22:44] *** Joins: uuair (~quassel@user/uuair)
[09:22:44] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::f824)
[09:22:44] *** Joins: r0bby (r0bby@user/r0bby)
[09:22:44] *** Joins: vakera_pingveno_ (~dan@2600:1700:21f9:b150::40)
[09:22:44] *** Joins: truckasaurus (sid457088@id-457088.helmsley.irccloud.com)
[09:22:44] *** Joins: frodl (sid527064@user/frodl)
[09:22:44] *** Joins: Fingel (fingel@user/fingel)
[09:22:44] *** Joins: ravioli_ (sid83460@donger/pasta)
[09:22:44] *** Joins: bloodElk (~bloodElk@user/bloodelk)
[09:22:44] *** Joins: km_ (znc@user/km)
[09:22:44] *** Joins: Pr0phet (sid505706@id-505706.hampstead.irccloud.com)
[09:22:44] *** Joins: josh_h (sid301834@id-301834.helmsley.irccloud.com)
[09:22:44] *** Joins: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz)
[09:22:44] *** Joins: nhanb_ (522d4a25ea@2604:bf00:561:2000::13b)
[09:22:44] *** Joins: gildarts (16abab341f@user/gildarts)
[09:22:44] *** Joins: _sgen (~sgen@2607:fea8:7ce1:c8e0:ec63:8eee:4635:2aa8)
[09:22:44] *** Joins: saribro (~swinnenb@user/swinnenb)
[09:22:44] *** Joins: Fl1pFl0p (~FlipFlop@user/fl1pfl0p)
[09:22:44] *** Joins: Furai (~Furai@furai.pl)
[09:22:44] *** Joins: dre (~dre@2001:8003:c932:c301:77c0:cff4:f6dd:6abf)
[09:22:44] *** Joins: XV8 (~XV8@2601:5cb:c001:50:f81d:9eae:67e3:1b35)
[09:22:44] *** Joins: oprypin (~irc@pryp.in)
[09:22:44] *** Joins: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e)
[09:22:44] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[09:22:44] *** Joins: jtanner (sid194399@id-194399.helmsley.irccloud.com)
[09:22:44] *** Joins: sidmitra (sid17533@id-17533.tinside.irccloud.com)
[09:22:44] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[09:22:44] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[09:22:44] *** Joins: coldmountain (sid484352@id-484352.helmsley.irccloud.com)
[09:22:44] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[09:22:44] *** Joins: dunc (sid16@id-16.uxbridge.irccloud.com)
[09:22:44] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[09:22:44] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[09:22:44] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[09:22:44] *** Joins: mbrndtgn (~mbrndtgn@undecidable.de)
[09:22:44] *** Joins: Warped (~Warped@user/warped)
[09:22:44] *** Joins: trainsley69_ (~trainsley@c188-148-14-166.bredband.tele2.se)
[09:22:44] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[09:22:44] *** Joins: dsc_ (~dsc@70.68.10.185.ro.ovo.sc)
[09:22:44] *** Joins: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de)
[09:22:44] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[09:22:44] *** Joins: digilink (~digilink@user/digilink)
[09:22:44] *** Joins: xxyxx (~none@ip-037-024-160-145.um08.pools.vodafone-ip.de)
[09:22:44] *** Joins: SuperLag (~akulbe@user/superlag)
[09:22:44] *** Joins: adeliktas7 (~adeliktas@v15153.1blu.de)
[09:22:44] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[09:22:44] *** Joins: sabet (~sabet@user/sabet)
[09:22:44] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[09:22:44] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[09:22:44] *** Joins: lawt (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9)
[09:22:44] *** Joins: ndim (hun@moooo.n-dimensional.de)
[09:22:44] *** Joins: qwedfg_ (~qwedfg@user/qwedfg)
[09:22:44] *** Joins: gegensch1in (~james@ec2-54-210-169-253.compute-1.amazonaws.com)
[09:22:44] *** Joins: dupl0x (~duplox@137.220.127.235)
[09:22:44] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[09:22:45] *** Joins: jbeimler_ (~quassel@75.183.82.166)
[09:22:45] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[09:22:45] *** Joins: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se)
[09:22:45] *** Joins: visl (visl@user/visl)
[09:22:45] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[09:22:45] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[09:22:45] *** Joins: bidouille (~user_name@trois.potager.org)
[09:22:45] *** Joins: Throgkt (~Throgkt@user/throgkt)
[09:22:45] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[09:22:45] *** Joins: bambams (~bambams@user/bambams)
[09:22:45] *** Joins: edr (~edr@user/edr)
[09:22:45] *** Joins: grym (~grym@user/grym)
[09:22:45] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[09:22:45] *** Joins: Alan (~alan@user/alan)
[09:22:45] *** Joins: ATAD (~ATAD@user/atad)
[09:22:45] *** Joins: NoxTurminal8 (~Noxturmin@user/noxturminal)
[09:22:45] *** Joins: davef (dave@user/davef)
[09:22:45] *** Joins: lambda (~weechat@cyka.blyat.vodka)
[09:22:45] *** Joins: fury (uid193779@id-193779.helmsley.irccloud.com)
[09:22:45] *** Joins: fluter (~fluter@user/fluter)
[09:22:45] *** Joins: Abrax (~Abrax@user/abrax)
[09:22:45] *** Joins: Ninja3047 (~Ninja3047@3047.ninja)
[09:22:45] *** Joins: hexa- (~hexa-@juno.lossy.network)
[09:22:45] *** Joins: Myst3 (~Myst@user/myst)
[09:22:45] *** Joins: jessicant (~jessica@static.172.234.251.148.clients.your-server.de)
[09:22:45] *** Joins: nochi (~nochi@2a01:4f8:10b:3074::4)
[09:22:45] *** Joins: EtherMan (~quassel@inception.debokred.se)
[09:22:45] *** Joins: Andrew (andrew@andrewyu.org)
[09:22:45] *** Joins: nicoz- (unixlab@ubuntu/member/nicoz)
[09:22:45] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[09:22:45] *** Joins: graingert (sid128301@id-128301.tinside.irccloud.com)
[09:22:45] *** Joins: akimbo533 (~akimbo@customer-145-40-27-9.stosn.net)
[09:22:45] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[09:22:45] *** Joins: wereii (~wereii@37.205.14.89)
[09:22:45] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[09:22:45] *** Joins: sjk (~sjk@user/sjk)
[09:22:45] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[09:22:45] *** Joins: DK3 (~DK3@user/DK3)
[09:22:45] *** Joins: tf (~tf@user/tf)
[09:22:45] *** Joins: giesen (~ggiesen@ego.giesen.me)
[09:22:45] *** Joins: Common (~Common@096-033-221-075.res.spectrum.com)
[09:22:45] *** Joins: mixfix41 (~homefame@user/mixfix41)
[09:22:45] *** Joins: niv (~niv@limbo.cypherpunks.io)
[09:22:45] *** Joins: cdleonard (~cdleonard@ec2-52-70-55-94.compute-1.amazonaws.com)
[09:22:45] *** Joins: vigumnov (~victori@cpe-76-89-139-69.socal.res.rr.com)
[09:22:45] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[09:22:45] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[09:22:45] *** Joins: unyu (~pyon@user/pyon)
[09:22:45] *** Joins: nfc_ (nfc@tilde.institute)
[09:22:45] *** Joins: OverCoder (~OverCoder@user/overcoder)
[09:22:45] *** Joins: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[09:22:45] *** Joins: cpach (sid296028@id-296028.helmsley.irccloud.com)
[09:22:45] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[09:22:45] *** Joins: haasn (~nand@haasn.dev)
[09:22:45] *** Joins: mgedmin (~mg@user/mgedmin)
[09:22:45] *** Joins: avu (~jan@user/avu)
[09:22:45] *** Joins: ST47 (~ST47@wikimedia/st47)
[09:22:45] *** Joins: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[09:22:45] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[09:22:45] *** Joins: Kebianizao (~Kebianiza@188.127.160.11)
[09:22:45] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[09:22:45] *** Joins: Retr0id (~Retr0id@user/retr0id)
[09:22:45] *** Joins: luciusf1 (~luciusf@46.23.90.165)
[09:22:45] *** Joins: mrHedgehog0 (9658dbe103@2604:bf00:561:2000::a5)
[09:22:45] *** Joins: lew (c292bc13c9@2604:bf00:561:2000::27e)
[09:22:45] *** Joins: akspecs (00cc8321af@sourcehut/user/akspecs)
[09:22:45] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[09:22:45] *** Joins: colbyhub (411e4f2740@2604:bf00:561:2000::2de)
[09:22:45] *** Joins: srstevenson (b46bf53c49@2604:bf00:561:2000::f3)
[09:22:45] *** Joins: fluffyballoon (45ce440a48@2604:bf00:561:2000::e2)
[09:22:45] *** Joins: srhm (dda3db84b5@user/srhm)
[09:22:45] *** Joins: akelly (24aca7a63b@2604:bf00:561:2000::152)
[09:22:45] *** Joins: andrea (3f138254b4@2604:bf00:561:2000::38)
[09:22:45] *** Joins: sliwkr (1aac56ad72@2604:bf00:561:2000::251)
[09:22:45] *** Joins: Hummer12007 (061e0434dc@2604:bf00:561:2000::16)
[09:22:45] *** Joins: sharktamer (9bafe1e1bb@2604:bf00:561:2000::17)
[09:22:45] *** Joins: spiderman (spiderman@spiderman.shelltalk.net)
[09:22:45] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[09:22:45] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[09:22:45] *** Joins: FLHerne (flh@flherne.uk)
[09:22:45] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:22:45] *** Joins: duoi (~duoi@user/duoi)
[09:22:45] *** Joins: lewisje (~lewisje@72.49.207.113)
[09:22:45] *** Joins: cyberjunkie (~cyberjunk@wireguard/tunneler/cyberjunkie)
[09:22:45] *** Joins: kujo (~kujo@188.166.12.52)
[09:22:45] *** Joins: H4Z3 (~H4ZE@165.227.36.29)
[09:22:45] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[09:22:45] *** Joins: vishwin (~brioux@2001:470:1f07:302::1)
[09:22:45] *** Joins: Macuser (Macuser@here.for-the.chat)
[09:22:45] *** Joins: Phoebus (sid422845@id-422845.ilkley.irccloud.com)
[09:22:45] *** Joins: be3uykpy (~ubuntu@141.144.233.89)
[09:22:45] *** Joins: Chex (~Chex@user/chex)
[09:22:45] *** Joins: EyeOfJupiter (~EyeOfJ@user/eyeofjupiter)
[09:22:45] *** Joins: Ninpo (~Ninpo@user/ninpo)
[09:22:45] *** Joins: ixjlyons (kenny@2600:3c01::f03c:91ff:fe80:22c6)
[09:22:45] *** Joins: byzafk (~byzandula@beerbq.net)
[09:22:45] *** Joins: grandfso_ (~quassel@199.232.237.35.bc.googleusercontent.com)
[09:22:45] *** Joins: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1)
[09:22:45] *** Joins: vegii (~quassel@2001:470:1f18:3aa:30f::5439)
[09:22:45] *** Joins: arti (~arti@2001:bb8:4008:2020::f)
[09:22:45] *** Joins: or4n_ (~or4n@gerbera.qkka.org)
[09:22:45] *** Joins: catbeard (~noise@user/catbeard)
[09:22:45] *** Joins: cole (~cole@user/cole)
[09:22:45] *** Joins: decartes (sid240036@id-240036.helmsley.irccloud.com)
[09:22:45] *** Joins: altendky (sid135382@id-135382.hampstead.irccloud.com)
[09:22:45] *** Joins: mrproper (sid382572@id-382572.uxbridge.irccloud.com)
[09:22:45] *** Joins: jcass4 (~jcass4@066-188-202-056.res.spectrum.com)
[09:22:45] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[09:22:45] *** Joins: catdog (~quassel@2001:470:50f7:cdcd::cd1)
[09:22:45] *** Joins: overrider (~overrider@user/overrider)
[09:22:45] *** Joins: dwt__ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net)
[09:22:45] *** Joins: hifi (hifi@heisenbridge/hifi)
[09:22:45] *** Joins: dudebbn (~dudebbn@cpe-174-97-16-77.cinci.res.rr.com)
[09:22:45] *** Joins: ryan-c (ryan-c@znc.rya.nc)
[09:22:45] *** Joins: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003)
[09:22:45] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[09:22:45] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[09:22:45] *** Joins: e-snail (~pete@user/e-snail)
[09:22:45] *** Joins: Falcon| (andreas@user/falcon/x-0540249)
[09:22:45] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[09:22:45] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[09:22:45] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[09:22:45] *** Joins: rb (~augh@theguntretort.com)
[09:22:45] *** Joins: t2mkn (~t2mkn@user/t2mkn)
[09:22:45] *** Joins: dxrt (~dxrt@user/dxrt)
[09:22:45] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[09:23:35] *** Joins: aaii (~aaii@185.212.201.73)
[09:23:35] *** Joins: Viewday11 (~Viewday@61.141.126.127)
[09:23:35] *** Joins: lastshell (~lastshell@ip68-104-107-93.lv.lv.cox.net)
[09:23:35] *** Joins: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de)
[09:23:35] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[09:23:35] *** Joins: fsoc (~shynerd@bison.alphaw0lf.xyz)
[09:23:35] *** Joins: analoq (~yashi@user/dies)
[09:23:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:23:35] *** Joins: Vision (~Vision@097-087-115-181.res.spectrum.com)
[09:23:35] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:23:35] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[09:23:35] *** Joins: \mSg (mSg@user/msg/x-0285936)
[09:23:35] *** Joins: masoudd (~masoudd@user/masoudd)
[09:23:35] *** Joins: CoolerY (~CoolerX@user/coolerx)
[09:23:35] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[09:23:35] *** Joins: novapy (~chronos@12.71.10.20)
[09:23:35] *** Joins: Vonter (~Vonter@user/vonter)
[09:23:35] *** Joins: M3troidman (~buttler@196.196.203.108)
[09:23:35] *** Joins: pycurious (~Adium@user/pycurious)
[09:23:35] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[09:23:35] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[09:23:35] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[09:23:35] *** Joins: Wulf (~Wulf@user/wulf)
[09:23:35] *** Joins: Juhaz (~juhaz@hilla.kapsi.fi)
[09:23:35] *** Joins: gnoirzox (~gnoirzox@178.170.103.136)
[09:23:35] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[09:23:35] *** Joins: dthpulse (~quassel@podciarou.sk)
[09:23:35] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[09:23:35] *** Joins: hams (~hams@user/hams)
[09:23:35] *** Joins: mossman93 (~quassel@user/mossman93)
[09:23:35] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[09:23:35] *** Joins: fikran (~fikran@user/fikran)
[09:23:35] *** Joins: ttys000 (~ttys000@user/ttys000)
[09:23:35] *** Joins: synic (~squish@li74-118.members.linode.com)
[09:23:35] *** Joins: KombuchaKip (~kip@192.252.230.5)
[09:23:35] *** Joins: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net)
[09:23:35] *** Joins: Sadale (~Sadale@user/sadale)
[09:23:35] *** Joins: waynew (~wayne@user/waynew)
[09:23:35] *** Joins: hyiltiz (~quassel@31.220.5.250)
[09:23:35] *** Joins: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net)
[09:23:35] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[09:23:35] *** Joins: bloody (~bloody@user/bloody)
[09:23:35] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[09:23:35] *** Joins: Phase (~phase@user/phase)
[09:23:35] *** Joins: launchd (~launchd@bitbot/launchd)
[09:23:35] *** Joins: astiak (~astiak@ownage.biz)
[09:23:35] *** Joins: sokan (~sokan@85.73.227.251)
[09:23:35] *** Joins: w0rp (~w0rp@w0rp.com)
[09:23:35] *** Joins: Speed2u (~Speed2u@bnc.speed2u.nu)
[09:23:35] *** Joins: agireud (~agireud@user/agireud)
[09:23:35] *** Joins: RiFo (~RiFo@user/rifo)
[09:23:35] *** Joins: dude-x_ (~textual@72.76.74.165)
[09:23:35] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-69-77.poda.cz)
[09:23:35] *** Joins: Elodin (~elodin@user/elodin)
[09:23:35] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[09:23:35] *** Joins: Roedy (Roedy@user/roedy)
[09:23:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[09:23:35] *** Joins: seabre (~seabre@user/seabre)
[09:23:35] *** Joins: treefrob (~treefrob@p57a96ba4.dip0.t-ipconnect.de)
[09:23:35] *** Joins: rwbrambler (~Thunderbi@65.183.138.202)
[09:23:35] *** Joins: towel (~towel@user/towel)
[09:23:35] *** Joins: onur (~onur@user/onur)
[09:23:35] *** Joins: Duckle (~Duckle@user/duckle)
[09:23:35] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[09:23:35] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[09:23:35] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[09:23:35] *** Joins: erry (~erry@errietta.me)
[09:23:35] *** Joins: infernix (~nix@spirit.infernix.net)
[09:23:35] *** Joins: axisys (~axisys@ec2-52-207-123-244.compute-1.amazonaws.com)
[09:23:35] *** Joins: MrC (~Ben@mrbenc.net)
[09:23:35] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[09:23:35] *** Joins: libussa (~libussa@libussa.net)
[09:23:35] *** Joins: georgeisbot (~georgeisb@8.12.22.9)
[09:23:35] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[09:23:35] *** Joins: SlicerDicer68 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net)
[09:23:35] *** Joins: wovixo (~wovixo@128.104.205.49)
[09:23:35] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[09:23:35] *** Joins: iob (~iob@nat1.prg.suse.com)
[09:23:35] *** Joins: cursey (~cursey@user/cursey)
[09:23:35] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[09:23:35] *** Joins: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[09:23:35] *** Joins: Joel (~jjshoe@user/joel)
[09:23:35] *** Joins: crunchy_david (~david@pgguru.net)
[09:23:35] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[09:23:35] *** Joins: d3sync (~d3sync@62.1.158.240)
[09:23:35] *** Joins: Mogget (~Mogget@vogon02.moshwire.com)
[09:23:35] *** Joins: tpr (~tpr@user/tpr)
[09:23:35] *** Joins: Pici (~bnrubin@li1014-36.members.linode.com)
[09:23:35] *** Joins: ghormoon (~ghormoon@ghorland.net)
[09:23:35] *** Joins: swistak (~swistak@185.21.216.141)
[09:23:35] *** Joins: foul_owl (~kerry@94.140.8.107)
[09:23:35] *** Joins: lumgwada (~lumgwada@user/lumgwada)
[09:23:35] *** Joins: kuahara (kuahara@072-182-135-032.res.spectrum.com)
[09:23:35] *** Joins: Dotz0cat (~Dotz0cat@h55.84.187.173.dynamic.ip.windstream.net)
[09:23:35] *** Joins: wilk (~wilk@user/wilk)
[09:23:35] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[09:23:35] *** Joins: reset (~reset@user/reset)
[09:23:35] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[09:23:35] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[09:23:35] *** Joins: dskull (~dskull@user/dskull)
[09:23:35] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[09:23:35] *** Joins: martums5 (~martums@user/martums)
[09:23:35] *** Joins: kcrk (~kcrk@user/kcrk)
[09:23:35] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[09:23:35] *** Joins: lifefir31 (~lifefir3@152.37.120.101)
[09:23:35] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-72.dsl.bell.ca)
[09:23:35] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[09:23:35] *** Joins: jdmark (~jdmark@user/jdmark)
[09:23:35] *** Joins: justGhost (~justache@user/justache)
[09:23:35] *** Joins: HvszrStykp (~X@81.171.62.84)
[09:23:35] *** Joins: mmalter (~mmalter@88.126.10.237)
[09:23:35] *** Joins: Hackerpcs (~user@user/hackerpcs)
[09:23:35] *** Joins: jjasghar (~jjasghar@idlerpg/player/jjasghar)
[09:23:35] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[09:23:35] *** Joins: voidcat (~voidcat@user/voidcat)
[09:23:35] *** Joins: mcglk (~mcglk@131.191.49.120)
[09:23:35] *** Joins: Kraus (~quassel@075-141-246-250.res.spectrum.com)
[09:23:35] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[09:23:35] *** Joins: arooni (~arooni@li1062-244.members.linode.com)
[09:23:35] *** Joins: gerty (~gerty@user/gerty)
[09:23:35] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[09:23:35] *** Joins: sunyour (~sunyour@129.226.182.99)
[09:23:35] *** Joins: DXR (~lyrical@194.219.251.132)
[09:23:35] *** Joins: ThomasJ (~ThomasJ@user/thomasj)
[09:23:35] *** Joins: dodo (~dodo@user/dodo)
[09:23:35] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[09:23:35] *** Joins: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com)
[09:23:35] *** Joins: Neopolitan (~tn5421@45.76.61.24)
[09:23:35] *** Joins: Dan39 (~dan@user/dan39)
[09:23:35] *** Joins: cryocaustik7 (~cryocaust@user/cryocaustik)
[09:23:35] *** Joins: purplex (~purplex@user/purplex)
[09:23:35] *** Joins: greatgatsby__ (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[09:23:35] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[09:23:35] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[09:23:35] *** Joins: naari (~naari@user/naari)
[09:23:35] *** Joins: xakan (~xakan@pnmx.zdx.fr)
[09:23:35] *** Joins: mage (~julien@orval.bbpf.belspo.be)
[09:23:35] *** Joins: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se)
[09:23:35] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[09:23:35] *** Joins: dsp00 (~dsp00@20.79.249.135)
[09:23:35] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[09:23:35] *** Joins: ethoxy (~root@bison.alphaw0lf.xyz)
[09:23:35] *** Joins: _val_ (~valentin@82-169-14-137.biz.kpn.net)
[09:23:35] *** Joins: queue- (~nerd@user/queue/x-7267619)
[09:23:35] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[09:23:35] *** Joins: Melon_Bread (~Melon_Bre@li958-238.members.linode.com)
[09:23:35] *** Joins: potatosal (~salad@user/potatosal)
[09:23:35] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[09:23:35] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[09:23:35] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[09:23:35] *** Joins: dminuoso (~dminuoso@user/dminuoso)
[09:23:35] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:23:35] *** Joins: simplicity (~yti@user/simplicity)
[09:23:35] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[09:23:35] *** Joins: gjvc (~gjvc@user/gjvc)
[09:23:35] *** Joins: ecool (~ecool@ecool.dev)
[09:23:35] *** Joins: lidless (~lidless@user/lidless)
[09:23:35] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[09:23:35] *** Joins: n1000 (~n1000@user/n1000)
[09:23:35] *** Joins: stella (~aoei@nethackscoreboard/aoei)
[09:23:35] *** Joins: Helle (~helle@45.83.235.185)
[09:23:35] *** Joins: meejah (~meejah@rutas.meejah.ca)
[09:23:35] *** Joins: dlam (~dlam@dlam.me)
[09:23:35] *** Joins: hrm (~hrm@nimbus.harmtemolder.nl)
[09:23:35] *** Joins: kolcon (~kolcon@v.kolouch.org)
[09:23:35] *** Joins: NOTevil (~notevil@user/notevil)
[09:23:35] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[09:23:35] *** Joins: peanuter_ (~peanuter@static.190.220.201.138.clients.your-server.de)
[09:23:35] *** Joins: streety (~streety@li761-24.members.linode.com)
[09:23:35] *** Joins: achilleas (~ach@user/achilleas)
[09:23:35] *** Joins: ntdll_ (~ntdll@shion.saiban.me)
[09:23:35] *** Joins: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net)
[09:23:35] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[09:23:35] *** Joins: lantech19446 (~lantech19@144.202.10.138)
[09:23:35] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[09:23:35] *** Joins: AnimalFarmPig (~quassel@user/animalfarmpig)
[09:23:35] *** Joins: han-` (~han`@user/han-/x-0887595)
[09:23:35] *** Joins: nickodd (~nickodd@user/nickodd)
[09:23:35] *** Joins: Nei (~ailin@openSUSE/member/ailin-nemui)
[09:23:35] *** Joins: asix (~Anders@user/asix)
[09:23:58] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Ping timeout: 256 seconds)
[09:24:07] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:24:07] *** Joins: Affliction (affliction@idlerpg/player/affliction)
[09:24:07] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[09:24:13] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[09:24:28] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:24:32] *** Quits: dibas (~dibas@wild.uberspace.de) (Changing host)
[09:24:32] *** Joins: dibas (~dibas@user/dibas)
[09:24:51] *** Joins: d1rewolf (sid312924@id-312924.helmsley.irccloud.com)
[09:24:51] *** Joins: Boarders_ (sid425905@id-425905.lymington.irccloud.com)
[09:24:51] *** Joins: kinabalu (~kinabalu@about/java/kinabalu)
[09:24:51] *** Joins: vince (~vince@75.127.14.76)
[09:24:51] *** Joins: ThothCastel (sid78195@id-78195.tinside.irccloud.com)
[09:24:51] *** Joins: lericson (~lericson@user/lericson)
[09:24:51] *** Joins: Evolver (sid32215@user/evolver)
[09:24:51] *** Joins: hogarius (hogarius@id-222644.uxbridge.irccloud.com)
[09:24:51] *** Joins: bjs (sid190364@user/bjs)
[09:24:51] *** Joins: koopman (sid466269@id-466269.ilkley.irccloud.com)
[09:24:51] *** Joins: eichin (sid27120@id-27120.tinside.irccloud.com)
[09:24:51] *** Joins: jessicara (~shirogits@user/jessicara)
[09:25:15] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[09:25:24] *** Joins: Tempesta (~Tempesta@user/tempesta)
[09:25:24] *** Joins: oakridge (~oakridge@user/oakridge)
[09:26:02] *** Habibismillah is now known as GreenHaze
[09:26:08] *** lastshell is now known as Guest2819
[09:26:27] *** GreenHaze is now known as psystemuppdate
[09:26:29] *** psystemuppdate is now known as psystemupdate
[09:26:34] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 250 seconds)
[09:26:47] *** psystemupdate is now known as GreenHaze
[09:27:19] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:27:26] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 250 seconds)
[09:27:43] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 256 seconds)
[09:27:43] *** Quits: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h) (Ping timeout: 256 seconds)
[09:27:47] *** Joins: r0bby (r0bby@user/r0bby)
[09:27:50] *** Quits: r0bby (r0bby@user/r0bby) (Client Quit)
[09:28:20] *** Joins: r0bby (r0bby@user/r0bby)
[09:28:21] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Quit: Leaving)
[09:28:51] *** Quits: bluedust (~bluedust@59.89.212.127) (Ping timeout: 256 seconds)
[09:28:51] *** Quits: upsala (~zcb@185.213.155.232) (Ping timeout: 256 seconds)
[09:28:52] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[09:28:56] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[09:29:08] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:29:25] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[09:29:26] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[09:29:35] *** Joins: slavfox (~slavfox@93.158.232.111)
[09:30:11] *** Joins: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h)
[09:30:43] *** Joins: upsala (~zcb@185.213.155.232)
[09:30:46] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:31:09] *** Joins: bluedust (~bluedust@59.89.212.127)
[09:31:51] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[09:33:12] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[09:34:19] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[09:35:54] <callq> Okay forget caching it. How do I save a list object such that I can reload it on the next program run?
[09:36:32] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:36:47] *** Joins: rowbots (~dirgeable@h64-17-89-214.arvdco.broadband.dynamic.tds.net)
[09:37:11] *** Joins: ekathva (~ekathva@2001:999:51:be01:ece4:95d6:ed47:f97a)
[09:38:28] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Remote host closed the connection)
[09:39:26] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[09:41:20] *** Joins: Guest14 (~Guest14@2601:845:c201:59b0::4c6a)
[09:41:35] *** GreenHaze is now known as RighteousRat
[09:42:30] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:43:48] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[09:43:50] <jinsun__> callq: if it has simple stuff like numbers and strings, then just json.dump in the first run, then json.load in the next run
[09:44:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:44:39] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[09:44:43] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[09:46:17] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[09:46:30] <RighteousRat> anyone interested in ratlike services?
[09:46:37] <RighteousRat> theres a consultation fee
[09:46:47] <RighteousRat> soz wrong channel
[09:46:52] *** Parts: Guest14 (~Guest14@2601:845:c201:59b0::4c6a) ()
[09:48:54] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:e762:820b:16f3:d1dd) (Quit: Konversation terminated!)
[09:49:11] <BrenBarn> does pip have a more full-featured dependency resolver these days?
[09:49:28] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:49:58] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:53:58] <dre> how do you do set differences ?
[09:54:20] <dre> (setA - setB) + (setB - setA) ?
[09:54:50] *** Joins: Alexer (~alexer@alexer.net)
[09:54:53] <RighteousRat> soz i don't know python, i only look for snakes
[09:54:55] <Repiphany> dre: setA ^ setB
[09:55:20] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[09:55:30] <dre> perfect, thanks
[09:55:50] <dre> I knew there had to be an operator for it
[09:56:14] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[09:56:31] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[09:57:12] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[09:57:51] *** Quits: fsoc (~shynerd@bison.alphaw0lf.xyz) (Quit: leaving)
[09:59:09] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[09:59:26] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[10:00:46] *** Joins: Trashlord__ (~trash@user/trashlord)
[10:00:52] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[10:01:12] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[10:01:50] *** Quits: dtux (~dtux@2601:646:8f00:3f2:ca4d:c18b:77e8:457) (Ping timeout: 252 seconds)
[10:01:57] *** Joins: Elodin (~elodin@user/elodin)
[10:03:11] *** Quits: njt (~njt@zaph.org) (Ping timeout: 268 seconds)
[10:03:24] *** RighteousRat is now known as psystemupdate
[10:03:37] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Ping timeout: 240 seconds)
[10:04:22] *** Parts: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) ()
[10:04:28] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[10:04:33] *** Joins: njt (~njt@zaph.org)
[10:05:11] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[10:05:19] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[10:05:55] *** Joins: rvalue (~rvalue@user/rvalue)
[10:06:49] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[10:07:19] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Client Quit)
[10:08:31] *** Quits: DrBrownBear (~Drbb@2600:1700:9aa1:6bc0::47) (Remote host closed the connection)
[10:09:20] *** Joins: fef (~thedawn@user/thedawn)
[10:09:45] *** Quits: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a) (Quit: Client limit exceeded: 20000)
[10:10:45] *** Joins: cheater (~Username@user/cheater)
[10:11:28] *** Joins: sawk (~quassel@5.171.36.236)
[10:12:29] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[10:13:25] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:6e8:39d8:3639:31ff)
[10:13:31] *** Joins: domicron0 (~domicron@gateway/tor-sasl/domicron)
[10:13:37] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 256 seconds)
[10:13:38] *** Joins: manti7 (~manti7@176.10.104.94)
[10:14:06] *** Joins: mat001 (~mat001@213.143.69.121)
[10:14:32] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[10:14:33] *** domicron0 is now known as domicron
[10:14:41] *** Joins: defn (~n0b0dy@user/defn)
[10:15:21] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[10:17:31] *** km_ is now known as km
[10:18:00] *** Quits: clarjon_1 (~clarjon1@user/clarjon1) (Quit: clarjon_1)
[10:19:23] *** Joins: mickey87 (~user@user/mickey)
[10:19:28] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[10:19:28] *** mickey87 is now known as mickey8
[10:22:33] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:6e8:39d8:3639:31ff) (Remote host closed the connection)
[10:23:39] *** Joins: f1se4 (~f1se4@213.195.113.45)
[10:24:38] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[10:25:19] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:26:39] *** Quits: f1se4 (~f1se4@213.195.113.45) (Client Quit)
[10:26:51] *** Joins: f1se4 (~f1se4@213.195.113.45)
[10:27:40] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[10:27:47] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:8a27:da07:ef7c:de99)
[10:27:49] *** Quits: f1se4 (~f1se4@213.195.113.45) (Client Quit)
[10:27:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:27:59] *** Joins: f1se4 (~f1se4@213.195.113.45)
[10:30:30] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:31:34] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 250 seconds)
[10:31:45] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:32:38] *** Joins: thevishy (~Nishant@2405:201:f005:c007:3c07:8d1a:dd0:be31)
[10:33:19] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[10:33:24] *** Joins: Nigma (~magnus@87.61.126.226)
[10:33:27] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[10:34:10] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[10:35:06] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[10:35:54] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 250 seconds)
[10:36:33] *** Joins: moto (~moto@user/moto)
[10:36:56] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 250 seconds)
[10:37:08] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[10:37:32] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[10:39:20] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[10:39:29] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[10:40:02] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:40:14] *** Quits: Elodin (~elodin@user/elodin) (Read error: Connection reset by peer)
[10:40:44] *** Joins: zamanf (~dev@user/zamanf)
[10:42:40] *** Emet-Selch is now known as Azem
[10:42:56] *** Joins: jazzy (~jaziz@user/jaziz)
[10:43:17] *** Quits: Trashlord (~trash@user/trashlord) (Quit: "True ignorance is not the absence of knowledge, but the refusal to acquire it.")
[10:43:33] *** Trashlord__ is now known as Trashlord
[10:44:33] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[10:46:13] *** Joins: Elodin (~elodin@user/elodin)
[10:49:05] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:49:26] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[10:51:48] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[10:53:07] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[10:53:24] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 250 seconds)
[10:53:31] *** Joins: nomic (~nomic@185.192.69.3)
[10:54:11] *** Quits: bluedust (~bluedust@59.89.212.127) (Read error: Connection reset by peer)
[10:54:17] *** Joins: nunggu (~q@user/nunggu)
[10:54:24] *** Joins: bluedust (~bluedust@103.160.194.110)
[10:54:31] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[10:55:16] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f1:bb6d:d057:c3a4:b9e0:579f)
[10:58:25] *** Quits: f1se4 (~f1se4@213.195.113.45) (Quit: WeeChat 3.4)
[10:59:05] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:59:31] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 256 seconds)
[10:59:48] *** Joins: ekathva_ (~ekathva@93-90-58-246.welcomnet.fi)
[11:00:15] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[11:00:52] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[11:02:34] *** Quits: maxzor (~maxzor@2a01cb04054faa005fc964819d42af49.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[11:03:45] <stewie925> hey guys, is there a way to get the data type of a Pandas column directly instead of running df.info() ?
[11:05:33] *** Joins: djapo (~archangel@user/djapo)
[11:05:34] *** Joins: MajorBiscuit (~MajorBisc@c-001-021-032.client.tudelft.eduvpn.nl)
[11:06:11] <stewie925> oh i got the answer - its `df.dtypes['<column>'] `, but thanks anyway :)
[11:06:12] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[11:06:47] <stewie925> good night
[11:06:54] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:5964:9756:f802:18c2) (Quit: Client closed)
[11:07:31] *** Joins: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net)
[11:07:33] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:07:51] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[11:10:14] *** Joins: Vonter (~Vonter@user/vonter)
[11:11:26] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:e0a8:b0fc:676d:dc5d) (Ping timeout: 250 seconds)
[11:11:53] *** Quits: demsh (srjgxif39q@hermod.demsh.org) (Quit: nyaa~)
[11:12:12] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Client Quit)
[11:12:35] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[11:15:49] *** Quits: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[11:15:52] *** Joins: demsh (dkkdg9hwnm@hermod.demsh.org)
[11:17:39] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 256 seconds)
[11:17:46] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:18:30] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[11:20:08] *** Quits: jdmark (~jdmark@user/jdmark) (Ping timeout: 256 seconds)
[11:20:19] *** Joins: noarb (~noarb@user/noarb)
[11:21:25] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:23:16] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:25:50] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:27:01] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-f079-d115-4870-c583.res6.spectrum.com) (Ping timeout: 245 seconds)
[11:27:54] *** Quits: kujo (~kujo@188.166.12.52) (Ping timeout: 250 seconds)
[11:28:19] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:28:29] *** Joins: palasso (~palasso@user/palasso)
[11:28:57] *** Joins: jdmark (~jdmark@user/jdmark)
[11:30:27] *** Joins: TheLastOne (~TheLastOn@103.203.72.53)
[11:30:49] <jazzy> why use pop instead of del?
[11:30:51] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:30:51] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-f079-d115-4870-c583.res6.spectrum.com)
[11:31:11] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:15] <deniska> jazzy: if you also want to get the value of the key you are removing
[11:31:23] <deniska> if you don't, use del
[11:31:28] <jazzy> oh cool, tahnks
[11:31:36] <jazzy> I thought I heard at some point that del was taboo for some reason
[11:31:48] <TheLastOne> Hi, I am having trouble with a Regex find and replace in an SVG file
[11:32:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:32:18] *** Joins: tinystoat (~squeek@user/tinystoat)
[11:32:39] <deniska> jazzy: del can do multiple things, one of them is unbounding local variables, which is… rarely a useful thing to do
[11:32:39] <TheLastOne> hello tinystoat
[11:32:53] <tinystoat> TheLastOne: hey there. :)
[11:32:58] *** Joins: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net)
[11:33:21] <jazzy> deniska, hmm would it not free up more memory than setting a variable to None?
[11:33:31] <tinystoat> okay to use this channel you will want to read the topic information so you know a bit of what to do and not to do.
[11:33:39] *** Joins: nunggu (~q@user/nunggu)
[11:33:47] <TheLastOne> I have this code, the last line is Replace and first 3 are FIND
[11:33:49] <TheLastOne>    class="bi bi-([^"]+)"
[11:33:49] <TheLastOne>      viewBox="0 0 16 16"
[11:33:50] <TheLastOne>      id="([^"]+)">
[11:33:51] <TheLastOne>       class="bi bi-$1)"\nviewBox="0 0 16 16"\nid="$1">\n<title id="$1">$1</title>
[11:33:54] <deniska> jazzy: not necesserily, only if it's the last reference, and it happens to get collected
[11:33:56] <TheLastOne> thanks tinystoat, will do
[11:34:07] <tinystoat> TheLastOne: don't code to channels.
[11:34:22] <tinystoat> TheLastOne: there is a pastebin in the topic - use that instad. :)
[11:34:26] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:34:31] <deniska> jazzy: oh, and it has no meaningful difference comparing to just setting a variable in question to something else like None
[11:34:33] <TheLastOne> ok
[11:34:40] <tinystoat> TheLastOne: thanks - that helps everyeon. :)
[11:34:42] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[11:34:43] <dav1d> TheLastOne, also please include runnable code with some example data
[11:35:01] <jazzy> deniska, I see
[11:35:05] <TheLastOne> sure dav1d
[11:35:18] <tinystoat> TheLastOne: follow instructions from the nice folks here and you're good to go. best of luck. :)
[11:35:23] <TheLastOne> what I posted is the code I used on text editor in Ubuntu
[11:35:25] <deniska> jazzy: preferably your code shouldn't be organized in a way that a local variable becomes a problem like that, a function will go out of scope, and each local variable essentially gets del'led anyway
[11:35:38] <TheLastOne> it works but the output is $1 instead of the intended text
[11:35:41] <jazzy> got it
[11:35:54] *** Joins: chele (~chele@user/chele)
[11:35:58] *** Joins: Atque (~Atque@user/atque)
[11:36:00] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Ping timeout: 256 seconds)
[11:36:30] *** Quits: ekathva_ (~ekathva@93-90-58-246.welcomnet.fi) (Remote host closed the connection)
[11:36:42] *** Quits: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com) (Read error: Connection reset by peer)
[11:36:45] <supakeen> Aside from that it's important to think about what micromanaging this actually means, memory is not released back to the OS until your program exits anyways.
[11:36:57] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[11:37:39] *** Joins: frost (~frost@user/frost)
[11:37:57] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:38:03] *** Joins: ekathva_ (~ekathva@93-90-58-246.welcomnet.fi)
[11:38:17] *** Joins: kujo (~kujo@188.166.12.52)
[11:38:21] <TheLastOne> https://pastebin.com/raw/5CewAkwc
[11:38:41] *** Joins: rendar (~rendar@user/rendar)
[11:38:41] <TheLastOne> I am trying to add <title> to this code so that Inkscape symbols will have them
[11:38:50] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:39:09] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:39:19] *** Joins: zaz\ (~zaz@poneybl.eu)
[11:39:55] *** Quits: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net) (Quit: leaving)
[11:41:14] *** Quits: resmo (~resmo@2a00:d420:9:8a00:2f63:152f:1768:d580) (Ping timeout: 268 seconds)
[11:41:55] <TheLastOne> This is the Regex code I am  using, without success : https://pastebin.com/raw/agwxacXU
[11:42:08] <TheLastOne> Tried VS Code and gedit
[11:42:22] <dav1d> TheLastOne, but that's not python code?
[11:43:00] <tinystoat> TheLastOne: you need to put the whole python script into the pastebin and share that.
[11:43:21] <tinystoat> dav1d: thanks for your patience, mate.
[11:43:26] <TheLastOne> I see. That is what worked last time for me
[11:43:43] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[11:43:45] <TheLastOne> that is all I have. I was told that Regex is part of Python
[11:44:09] <tinystoat> TheLastOne: it seems that there is a whole bunch of code missing and that is the real problem.
[11:44:21] <TheLastOne> I see
[11:44:23] <dav1d> TheLastOne, oh python can execute regular expression through its `re` module, but if you're not using python to execute your regular expressions, it might be hard to find help here
[11:44:27] <TheLastOne> Not sure what do next
[11:44:38] <dav1d> TheLastOne, how are you executing your regular expressions?
[11:44:41] <TheLastOne> ok dav1d thanks
[11:44:59] <TheLastOne> I am simply using gedit's  FIND and REPLACE option
[11:45:09] <TheLastOne> first 3 lines for FIND, which works fine
[11:45:26] <dav1d> TheLastOne, oh in your editor?
[11:45:34] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:45:42] <TheLastOne> but when I try the REPLACE code, it gives $1 instead of the class and title name
[11:45:49] <TheLastOne> yes dav1d, through editor
[11:45:52] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:45:58] *** Joins: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net)
[11:46:26] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[11:46:36] *** Joins: tristan_ (~tristan@223.38.22.212)
[11:47:42] *** Quits: maryo87 (~Maryo@user/maryo) (Quit: Leaving)
[11:48:41] *** Joins: Auron (Auron956@user/auron)
[11:49:13] <jinsun__> there is #regex for general regex help
[11:49:31] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[11:49:34] <TheLastOne> that would be great. Let me try :)
[11:50:00] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[11:50:28] *** Joins: fef (~thedawn@user/thedawn)
[11:50:30] *** Joins: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr)
[11:51:16] *** Joins: mrwick (~mrwick@user/mrwick)
[11:51:18] *** Quits: dreamon (~dreamon@pd9503a7e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[11:52:13] *** Joins: aniketgm (~aniketgm@49.36.56.177)
[11:52:29] *** Quits: aniketgm (~aniketgm@49.36.56.177) (Client Quit)
[11:52:33] *** Quits: pabed (~Thunderbi@89.37.15.34) (Read error: Connection reset by peer)
[11:52:48] <gitesh> bjs: do you declare data type while coding in python? I was looking for that kind of info in tutorial but didn't fing in docs
[11:52:52] *** Joins: pabed (~Thunderbi@89.37.15.34)
[11:53:04] <callq> How do I iterate over a dictionary and extract key-value pairs in which the value is greater than 0?
[11:53:17] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[11:53:19] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:53:25] *** Joins: aniketgm (~aniketgm@49.36.56.177)
[11:53:34] *** Quits: aaii (~aaii@185.212.201.73) (Ping timeout: 256 seconds)
[11:53:54] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 250 seconds)
[11:54:02] <jinsun__> gitesh: the docs for typing are here https://docs.python.org/3/library/typing.html, the tutorial doesn't cover them I think
[11:54:23] <deniska> callq: make a loop over all key value pairs (`for key, value in your_dict.items()`), then skip the pairs which value is smaller than 0 `if value <= 0: continue`
[11:54:44] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:9b95:f42d:983f:2e82)
[11:55:24] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[11:56:06] *** Parts: TheLastOne (~TheLastOn@103.203.72.53) ()
[11:56:10] *** Joins: MCSeekeri (~Thunderbi@140.250.205.203)
[11:56:27] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[11:58:25] <callq> that's the syntax I was looking for, thank you
[11:58:27] *** Quits: aniketgm (~aniketgm@49.36.56.177) (Ping timeout: 256 seconds)
[11:58:39] *** Joins: OPK (~OPK@user/opk)
[11:59:26] *** Joins: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch)
[11:59:50] *** Quits: bluedust (~bluedust@103.160.194.110) (Remote host closed the connection)
[12:00:16] *** Quits: MCSeekeri (~Thunderbi@140.250.205.203) (Quit: MCSeekeri)
[12:01:17] *** Quits: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[12:01:24] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[12:03:07] *** Joins: jay-m126 (~jay-m@129.0.99.22)
[12:03:11] *** Joins: jay-m126_ (~jay-m@129.0.99.22)
[12:03:12] *** Joins: jay-m1261 (~jay-m@129.0.99.22)
[12:05:15] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[12:06:55] *** Joins: kaivai_ (~kaivai@user/kaivai)
[12:09:02] *** Quits: kaivai (~kaivai@user/kaivai) (Ping timeout: 240 seconds)
[12:09:13] *** Joins: justyb11 (~justyb@64.253.212.72)
[12:09:30] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:e425:c408:c7f3:a201)
[12:09:43] <callq> If I'm doing a lot of appending, should I use a list of tuples, or a dictionary?
[12:11:10] <deniska> callq: the insertion cost in both is similar, depends on what you are going to do with the data later
[12:11:35] *** Joins: slav0nic (slav0nic@python.su)
[12:13:00] <tm007> if you need to search by key, dictionary is the way to go
[12:13:11] *** Quits: jdmark (~jdmark@user/jdmark) (Ping timeout: 256 seconds)
[12:13:21] <tm007> you need to find my the index, list of tuples could be the choice
[12:13:29] <tm007> deniska: correct me if I'm wrong
[12:14:22] <deniska> to use a dict, you should have a meaningful key in the first place, and if there is, you get fast lookups
[12:14:43] <deniska> if you don't have a meaningful key, or the index is one, then sure, use a list
[12:14:53] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[12:14:54] *** Joins: aniketgm (~aniketgm@49.36.56.177)
[12:15:08] <tm007> deniska: right you are
[12:15:30] *** Joins: jdmark (~jdmark@user/jdmark)
[12:15:32] <tm007> 10/10 for the great communication skill displayed
[12:15:47] *** Joins: ubert1 (~Thunderbi@p200300ecdf0994537358816310c1cf27.dip0.t-ipconnect.de)
[12:16:55] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:17:44] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 250 seconds)
[12:18:51] *** Joins: kosh (~kosh@user/kosh)
[12:20:05] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[12:23:42] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[12:28:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:28:55] *** Joins: shad (~shad@user/shad)
[12:29:01] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[12:29:29] *** Joins: xkuru (~xkuru@user/xkuru)
[12:29:44] *** Quits: gimzmoe_ (~gimzmoe@user/gimzmoe) (Quit: WeeChat 2.8)
[12:29:47] *** Joins: walterwhip (~www@user/walterwhip)
[12:30:14] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[12:30:58] *** Joins: nunggu (~q@user/nunggu)
[12:31:33] *** Joins: Trigraph (~dev@user/trigraph)
[12:32:02] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 250 seconds)
[12:32:27] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:32:51] *** Joins: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it)
[12:32:55] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[12:33:11] *** Joins: mrwick (~mrwick@user/mrwick)
[12:33:36] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[12:34:00] <Trigraph> Hi, i came across this string slicing example with a negative step, i am trying to reason about how string slices work (or a mental model of them)
[12:34:41] *** Joins: d0ku (~d0ku@178.43.19.180.ipv4.supernova.orange.pl)
[12:34:45] <kosh> negative step allows you to go backwards
[12:34:47] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[12:35:37] <kosh> Trigraph, "test"[::-1] == 'tset'
[12:35:41] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[12:35:41] *** Joins: lakrass (~lakrass@user/lakrass)
[12:35:45] <Jong> And the power to do that with such short commands is so elegant that it's art itself
[12:35:51] <kosh> Trigraph, this is useful if you need the last n items in a sequence in reverse order for instance
[12:35:57] <Jong> Python is art
[12:36:04] <Trigraph>  "abcdefgh"[::1] "abcdefgh", here the step is applied 'after' the first element of the string is fetched, this model does not seem to work when i think about a negative step, i.e. "abcdefgh"[::-1] = "hgfedcba" surely the first element was picked up from index -1 and not 9
[12:36:34] <Trigraph> s/not 9/not 0
[12:36:59] <Jong> When I first saw "::" I looked at that as a single thing, But it's not. It's actually _:_:_.  But when there's no number to fill in the blank, the blank is removed
[12:37:10] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:d9d2:2ac7:8aec:104)
[12:37:13] <kosh> Trigraph, the indexing is not quite symmetrical because of 0
[12:37:14] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[12:38:22] <Trigraph> in that case what's a good mental model for slice operations, specially for negative indices, say how to think about what "abcdefgh"[:5:-1] would produce
[12:38:34] *** Joins: andreasbuhr (~quassel@p549db637.dip0.t-ipconnect.de)
[12:38:37] <Jong> first : last : step_size_and_direction
[12:39:04] <jinsun__> Trigraph: it is explained in slightly more detail here https://docs.python.org/3/library/stdtypes.html#common-sequence-operations
[12:39:18] <deniska> Trigraph: it goes from the first index (incl) to the second index (not incl), getting step element at the time, if a step is negative, it goes backwards
[12:39:20] <jinsun__> search for "The slice of s from i to j with step k is defined as"
[12:39:23] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Quit: ZNC 1.8.2 - https://znc.in)
[12:39:39] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[12:39:45] <deniska> Trigraph: if a number is missing assume "the beginning" or "after the end" depending on what's the most, uhm, logical one for that position
[12:40:23] *** Joins: domicron0 (~domicron@gateway/tor-sasl/domicron)
[12:40:26] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 260 seconds)
[12:40:33] *** Quits: ekathva_ (~ekathva@93-90-58-246.welcomnet.fi) (Remote host closed the connection)
[12:40:46] <Trigraph> the simple stuff with no negative index is fairly clear i just cannot justify what "abcdefgh"[:5:-1] produces
[12:41:18] *** Joins: bluedust (~bluedust@103.160.194.110)
[12:41:32] *** Quits: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net) (Ping timeout: 240 seconds)
[12:41:39] <Jong> Trigraph  I think of slicing as grabbing a range out of a list or array and putting it in its own variable. I think of steps as an interleaved pattern
[12:41:59] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[12:42:14] *** Joins: roro_ (~roro@78.192.226.182)
[12:42:28] <Repiphany> Slicing doesn't include the end point
[12:42:30] *** Joins: xa0s (~xa0s@mab.sdf.org)
[12:42:35] <deniska> with strings it's rare to see any non-default step besides -1
[12:42:47] <Jong> like for RGB, you're grab every third element to extract one of the colors
[12:42:57] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Ping timeout: 276 seconds)
[12:42:58] *** domicron0 is now known as domicron
[12:43:07] <Trigraph> yes that part is clear, i used to think we first grab between [start:end) then apply step to yield start, start + step, start +2*step .... till end)
[12:43:26] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[12:43:32] *** Joins: arinov (~arinov@213.194.126.155)
[12:43:32] <deniska> (and even -1 step for strings is mostly seen in slicing examples, because reversing a string not something you do that often)
[12:43:47] <Trigraph> now this model i just described does not explain "abcdefgh"[:5:-1] = 'hg'
[12:44:17] <Repiphany> `start = None` is the special case where it's the end of the list or whatever for negative steps
[12:44:18] <deniska> Trigraph: yeah, if a step is negative, then "start" and "end" kinda swap places
[12:44:19] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[12:44:33] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Remote host closed the connection)
[12:44:41] <deniska> well, it's still start and end, but now end comes earlier than start indexing-wise
[12:44:58] <Trigraph> so it seems here the 'grabbing' model is not right, rather we start with -1 and go till 5 in reverse
[12:45:24] <Trigraph> ah deniska that's interesting
[12:45:35] *** Joins: vegg (~Stas@78.162.42.17)
[12:45:56] <roro_> Hello, I want to have my variable dictionary fill so that it contain the 15 value that is printed but I only got 5 key https://bpa.st/4TOQ
[12:46:03] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[12:46:08] <jinsun__> it starts from the end (since you specify -1 step), then goes back till you reach the 5th element from the start
[12:46:36] <Trigraph> and then there is "abcdefgh"[0:5:-1] = ''
[12:47:11] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[12:47:57] <deniska> Trigraph: it starts from the 0 and goes backwards until it reaches 5 which is an empty range
[12:48:05] <Trigraph> btw i am reading all the replies, sorry if i dont acknowledge.
[12:48:20] <Jong> But look at "abcdefgh"[5:0:-1]
[12:48:49] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[12:48:54] <Repiphany> More interestingly "abcefgh"[7::-2] and "abcdefgh"[8::-2] give the same thing
[12:49:08] <Jong> "abcdefgh"[5:0] = '' as well.
[12:49:33] *** Quits: mcpackey (~pm0001@p5dc1c7d2.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:49:44] <Repiphany> So if start is larger than the length of the string it's just treated as the endpoint, so [8::-2] might not give you the (8-2)th element
[12:49:46] <deniska> Repiphany: so does "abcefgh"[200::-2]
[12:50:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[12:50:03] *** Joins: mcpackey (~pm0001@p5dc1c7d2.dip0.t-ipconnect.de)
[12:51:03] <Jong> Repiphany it would be easier to play with "1234567" instead of letters. That way it's easy to see which index is used
[12:51:18] <deniska> except indices start from 0
[12:51:21] <Repiphany> Need to start with 0
[12:51:22] <Jong> "0123456"
[12:52:05] *** Joins: bluedust_ (~bluedust@59.89.212.127)
[12:52:32] *** Joins: LimeOn (~user@user/limeon)
[12:53:01] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[12:53:14] <Trigraph> okay, it seems to be useful to think of the slice as something like a range which produces a sequence of indices
[12:53:27] <dirtwash> if I split a string, why cant I do like print(string.split(' ')[3]) ? I get out of range error but if I print the array its pletny long
[12:53:43] <dirtwash> eh list or w/e it is
[12:53:52] *** Joins: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-0577-8cef-87ec-adae.res6.spectrum.com)
[12:54:00] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[12:54:08] <Repiphany> ['0'*100000000'] is a long list with only one element
[12:54:21] <Repiphany> minus the last '
[12:54:30] <Jong> btw, slicing does not clone the source object.  It points to the same underlying data
[12:54:38] <Trigraph> rather than my earlier way of thining where i applied start:end to extract a segment of string and then applied step unto the result of former to walk through elements of the string.
[12:54:40] <dirtwash> if I print it I get ['test','bla','more']
[12:54:48] <dirtwash> so if I do [2] on that i should get 'more' no?
[12:54:55] <Nigma> yes you should
[12:55:00] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-f079-d115-4870-c583.res6.spectrum.com) (Ping timeout: 250 seconds)
[12:55:07] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[12:55:08] <Nigma> but you're doing [3]
[12:55:35] * dirtwash facepalms
[12:55:38] <dirtwash> nvm input issue
[12:55:41] *** Quits: bluedust (~bluedust@103.160.194.110) (Ping timeout: 256 seconds)
[12:56:06] <dirtwash> file iw as testing one didnt have the right data in first line
[12:56:46] <Nigma> Heh
[12:56:52] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[12:57:10] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[12:57:14] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:57:53] <Trigraph> is it fair to think that in "0123456789"[:5:-1] the start is assumed to be len - 1
[12:57:55] *** Joins: Z-cat (~Z-cat@user/z-cat)
[12:57:57] *** Quits: waveform (~quassel@waveform.plus.com) (Ping timeout: 256 seconds)
[12:58:16] *** Joins: waveform (~quassel@waveform.plus.com)
[12:59:33] *** Joins: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553)
[12:59:55] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:00:19] <jinsun__> yeah or -1
[13:00:52] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[13:00:58] <Trigraph> wait, slicing does not clone ? then the clone is done as part of '+
[13:01:04] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[13:01:24] <Trigraph> in case of say newslice = slice[1:] + 'x'
[13:02:26] <jinsun__> slicing does create a copy
[13:03:22] <Trigraph> yeah id() seems to be unique for things created by slicing
[13:04:48] *** Joins: manti7 (~manti7@176.10.104.94)
[13:05:48] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[13:06:11] *** Joins: kevr (~kevr@user/kevr)
[13:06:21] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[13:07:18] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[13:07:54] *** Joins: Klinda (~superleag@user/klinda)
[13:08:42] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[13:09:51] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[13:09:58] <Trigraph> ty for the replies, the link posted above https://docs.python.org/3/library/stdtypes.html#common-sequence-operations has a clear explanation for negative indices
[13:10:41] *** Joins: plastico (~plastico@neomutt/plastico)
[13:11:12] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[13:11:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:13:35] *** Joins: someuser (~user@197.54.43.98)
[13:14:12] *** Quits: bluedust_ (~bluedust@59.89.212.127) (Remote host closed the connection)
[13:15:05] *** Quits: ckdCreations (~ckdCreati@147.55.133.138) (Read error: Connection reset by peer)
[13:15:28] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[13:15:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:16:56] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[13:18:00] *** Quits: Trigraph (~dev@user/trigraph) (Remote host closed the connection)
[13:18:24] *** Joins: Trigraph (~dev@68-251-63-205.lightspeed.sntcca.sbcglobal.net)
[13:19:40] *** Joins: newdimension (~newdimnes@user/newdimension)
[13:19:43] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[13:20:48] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:20:54] *** Quits: Trigraph (~dev@68-251-63-205.lightspeed.sntcca.sbcglobal.net) (Changing host)
[13:20:54] *** Joins: Trigraph (~dev@user/trigraph)
[13:21:03] *** Joins: luva (~luva@146.70.62.244)
[13:21:29] *** Joins: frost61 (~frost@user/frost)
[13:26:41] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:27:09] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[13:28:32] *** Quits: Lunatrius (~Lunatrius@77.38.76.5) (Ping timeout: 268 seconds)
[13:29:10] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[13:29:20] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:31:10] *** Joins: acresearch (~acresearc@user/acresearch)
[13:31:39] *** Joins: daniel3 (daniel@user/daniel2)
[13:32:20] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[13:32:20] <acresearch> i am re-visiting my will to code python as a freelancer, but worried i fail misirably. I have good experience in python, but i am a slow coder and very limited to algorithm development,,, nothing front end, graphics, website, games, etc...
[13:32:21] *** Quits: Unode (~Unode@194.94.44.220) (Quit: Not that cable)
[13:32:32] *** Quits: Xat`_ (~Xat`@ns300217.ip-91-121-29.eu) (Ping timeout: 240 seconds)
[13:32:34] *** Quits: ekathva (~ekathva@2001:999:51:be01:ece4:95d6:ed47:f97a) (Remote host closed the connection)
[13:32:39] *** Joins: Xat` (~Xat`@ns300217.ip-91-121-29.eu)
[13:32:53] *** Joins: ekathva (~ekathva@2001:999:51:be01:60a9:bdc2:476c:b11b)
[13:33:02] *** Joins: Unode (~Unode@194.94.44.220)
[13:33:05] *** Quits: tristan_ (~tristan@223.38.22.212) (Ping timeout: 256 seconds)
[13:33:10] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[13:33:19] *** Quits: unixcorn_ (unixcorne@applejack.urlab.be) (Ping timeout: 250 seconds)
[13:33:32] *** Quits: daniel2 (daniel@user/daniel2) (Ping timeout: 240 seconds)
[13:33:39] *** Joins: CombatVet_ (~c4@user/combatvet)
[13:33:45] *** Joins: palasso (~palasso@user/palasso)
[13:34:06] *** Quits: ekathva (~ekathva@2001:999:51:be01:60a9:bdc2:476c:b11b) (Read error: Connection reset by peer)
[13:34:30] *** Joins: VaniaPy (~VaniaPy@46.12.52.165.dsl.dyn.forthnet.gr)
[13:34:33] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[13:34:42] *** Quits: petemc (~pete@vps-80fad31a.vps.ovh.net) (Ping timeout: 268 seconds)
[13:34:56] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:34:57] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[13:34:57] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[13:34:58] *** CombatVet_ is now known as CombatVet
[13:35:09] <madprops> acresearch, i built a couple of system tools with python. if you're on linux you could use rofi as an easy way to provide a frontend sometimes. also there's implementing interesting web services, where you only provide an api
[13:35:43] *** Quits: sale (~sale@ypocit.initech.link) (Ping timeout: 250 seconds)
[13:36:08] *** Joins: petemc (~pete@vps-80fad31a.vps.ovh.net)
[13:36:29] *** Joins: sale (~sale@ypocit.initech.link)
[13:37:16] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[13:38:06] *** Parts: VaniaPy (~VaniaPy@46.12.52.165.dsl.dyn.forthnet.gr) ()
[13:39:08] *** Joins: tomg_ (~tomg@user/tomg)
[13:39:13] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[13:40:04] <acresearch> madprops: hmmmm interesting
[13:41:34] *** Joins: theprophet (~theprophe@85.114.228.184)
[13:41:36] *** Quits: tomg (~tomg@user/tomg) (Ping timeout: 245 seconds)
[13:42:17] *** Quits: justm33 (~Username@84-84-41-7.fixed.kpn.net) (Ping timeout: 240 seconds)
[13:42:20] <theprophet> guys can somebody please dumb down, line 15, and line 25 for me? what is exactly happening in there? https://dpaste.org/E4o6
[13:42:22] *** Quits: M3troidman (~buttler@196.196.203.108) (Ping timeout: 256 seconds)
[13:42:47] <Repiphany> Switching the places of elements in indices i and j
[13:43:50] <Repiphany> You can do it with normal names to see the effect; `a, b = 1, 2; print(a, b); a, b = b, a; print(a, b)`
[13:44:04] *** Quits: sawk (~quassel@5.171.36.236) (Ping timeout: 256 seconds)
[13:44:15] <theprophet> Repiphany ohh ,  i see,
[13:44:35] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:c1ad:5567:c947:cef7) (Ping timeout: 252 seconds)
[13:44:35] <theprophet> Repiphany this is still indexing tho?
[13:45:08] <Repiphany> I don't understand what you're asking
[13:45:10] <theprophet> Repiphany how do i reffer to it so i can master it?
[13:45:25] <theprophet> keyword
[13:46:20] <theprophet> Repiphany i know its working with lists but, is what you told me still called indexing? or something else? like how do i search for it in google so i can master it?
[13:46:35] *** Joins: unixcorn_ (unixcorne@applejack.urlab.be)
[13:47:03] <Repiphany> It's just tuple unpacking with points in a list rather than ordinary variables
[13:47:45] <theprophet> i see, so where do i go from there? like how can i learn that specific part? any suggestions?
[13:47:52] <Repiphany> The right side of the = assignment is evaluated independently of the left
[13:48:00] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[13:48:21] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:48:22] <Repiphany> So you just get the tuple of whatever elements (x[j], x[i]) refers to
[13:48:47] <theprophet> i see
[13:48:53] <Repiphany> and then you're unpacking them into something that also happens to be parts of x
[13:49:26] <theprophet> i see
[13:49:43] <Repiphany> I'm not sure what there is to "master" beyond this being a thing in python
[13:49:55] <theprophet> got it
[13:50:10] <theprophet> thank you
[13:50:13] <theprophet> very much
[13:50:28] <Repiphany> You can also unpack multiple items into a list, e.g. `first, *middle, last = [1,2,3,4,5,6]`
[13:50:40] <theprophet> yes that i know
[13:50:54] *** Joins: M3troidman (~buttler@196.196.203.108)
[13:52:16] <Repiphany> For assignment, the thing on the left can be a normal name, or a list index/dictionary key or whatever
[13:52:19] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[13:52:35] <Repiphany> Tuple unpacking is just letting you do multiple assignments at once
[13:53:03] *** Joins: rvalue (~rvalue@user/rvalue)
[13:53:15] <theprophet> so whatever i and j are its being replaced
[13:53:28] <theprophet> switched places
[13:53:30] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[13:54:25] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[13:54:31] <parv> Think of this as values switchroo sans temporary variables
[13:58:15] *** Quits: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it) (Ping timeout: 256 seconds)
[13:58:18] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[13:58:21] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[13:59:19] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 250 seconds)
[13:59:34] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[13:59:49] *** Joins: Lunatrius (~Lunatrius@77.38.76.5)
[13:59:55] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (platinum.libera.chat (Nickname regained by services)))
[13:59:55] *** vinleod is now known as vdamewood
[14:00:41] *** Joins: Lunatrius` (~Lunatrius@77.38.76.5)
[14:00:43] *** Joins: paul424 (~tom@ip-5-172-236-248.multi.internet.cyfrowypolsat.pl)
[14:02:35] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:02:54] *** Quits: brookesy66 (~will@203.220.123.174) (Quit: WeeChat 3.4)
[14:03:45] <callq> lol tm007  thanks
[14:04:15] *** Quits: Lunatrius (~Lunatrius@77.38.76.5) (Ping timeout: 256 seconds)
[14:04:15] *** Lunatrius` is now known as Lunatrius
[14:05:02] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[14:05:10] <callq> Hey so if I'm using an exchange-API, using REST, and I send a POST for placing an order -> it gives me "202 Order request received"
[14:05:23] *** Quits: jay-m1261 (~jay-m@129.0.99.22) (Ping timeout: 256 seconds)
[14:05:23] *** Quits: jay-m126_ (~jay-m@129.0.99.22) (Ping timeout: 256 seconds)
[14:05:23] *** Quits: jay-m126 (~jay-m@129.0.99.22) (Ping timeout: 256 seconds)
[14:05:37] <callq> But how do I then confirm that the order has been placed?
[14:05:56] <deniska> Consult the docs of that exchange
[14:06:10] <paul424> Do you know any library I could use when teaching the kids coding ?
[14:06:24] <paul424> apart from turtle graphics ...
[14:06:31] <deniska> paul424: maybe pygame?
[14:06:37] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:07:50] <paul424> deniska, yeah, but they are begginners so far they can only do if else , while loops basic variables constructs
[14:07:58] <paul424> what use pygame would have in my class ?
[14:08:07] *** Quits: CoolerY (~CoolerX@user/coolerx) (Quit: Leaving)
[14:09:02] *** Joins: bluedust (~bluedust@59.89.212.127)
[14:09:37] <deniska> paul424: I don't remember pygame requiring anything too advanced, seems like a probable next step above turtle graphics
[14:09:58] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[14:10:00] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-d8f8-04a8-a351-e8cb.res6.spectrum.com) (Quit: jarthur)
[14:12:00] *** Joins: Alexer (~alexer@alexer.net)
[14:12:17] *** Joins: rsx (~dummy@ppp-188-174-155-66.dynamic.mnet-online.de)
[14:12:57] <paul424> also I look for some loop excercies for them , the one I have in workbook is too dificult -- the ceasar cipher , the pi number approximation etx...
[14:13:11] *** Quits: frost61 (~frost@user/frost) (Ping timeout: 250 seconds)
[14:15:01] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[14:15:06] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[14:15:28] <lola> hey there
[14:15:30] <lola> o/ replicant
[14:17:10] <lola> https://bpa.st/XGPA
[14:17:10] <newdimension> Is there a way for me to define a logging file handler and pass it a variable file location?
[14:18:50] *** Joins: Vonter (~Vonter@user/vonter)
[14:19:30] *** Joins: evocatus (~evocatus@109.229.144.249)
[14:19:33] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:21:18] *** Quits: bluedust (~bluedust@59.89.212.127) (Remote host closed the connection)
[14:23:10] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:23:56] *** Joins: ld_ (~a0z1@185.200.118.184)
[14:24:05] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:24:28] *** Lord_of_Life_ is now known as Lord_of_Life
[14:24:39] *** Quits: Lunatrius (~Lunatrius@77.38.76.5) (Ping timeout: 256 seconds)
[14:26:34] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[14:26:42] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[14:26:50] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:d9d2:2ac7:8aec:104) (Ping timeout: 260 seconds)
[14:26:51] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[14:27:05] *** Joins: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it)
[14:29:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:29:55] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Remote host closed the connection)
[14:30:53] *** Quits: zamanf (~dev@user/zamanf) (Ping timeout: 256 seconds)
[14:32:48] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[14:33:22] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:37:16] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[14:37:41] *** Quits: Nigma (~magnus@87.61.126.226) (Ping timeout: 256 seconds)
[14:39:09] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:39:18] *** Joins: Nigma (~magnus@87.61.126.226)
[14:39:22] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[14:39:32] *** Quits: nepeat_ (~nepeat@79.110.170.60) (Ping timeout: 240 seconds)
[14:39:57] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[14:40:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:42:12] *** Joins: nepeat (~nepeat@79.110.170.60)
[14:42:13] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[14:42:33] *** Joins: karlcashville (~karl@c-69-243-207-235.hsd1.tn.comcast.net)
[14:44:26] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[14:44:42] *** Quits: someuser (~user@197.54.43.98) (Ping timeout: 256 seconds)
[14:45:16] *** Quits: M3troidman (~buttler@196.196.203.108) (Ping timeout: 256 seconds)
[14:46:07] *** Joins: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it)
[14:46:34] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:46:35] *** Joins: M3troidman (~buttler@196.196.203.108)
[14:47:26] *** Quits: karlcashville (~karl@c-69-243-207-235.hsd1.tn.comcast.net) (Ping timeout: 245 seconds)
[14:48:46] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 260 seconds)
[14:49:26] *** Joins: someuser (~user@197.54.43.98)
[14:49:33] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Client Quit)
[14:49:42] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[14:49:43] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[14:50:07] *** Quits: Z-cat (~Z-cat@user/z-cat) (Remote host closed the connection)
[14:50:23] *** Joins: Z-cat (~Z-cat@user/z-cat)
[14:50:30] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:52:23] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:54:06] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (Ping timeout: 245 seconds)
[14:54:17] *** Joins: bluedust (~bluedust@59.89.212.127)
[14:55:32] *** Quits: dTal (quassel@dragonbox/wizzard/dtal) (Ping timeout: 240 seconds)
[14:56:05] *** Quits: Trigraph (~dev@user/trigraph) (Ping timeout: 250 seconds)
[14:56:05] *** Joins: bluedust_ (~bluedust@185.206.227.142)
[14:56:08] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:57:13] *** Joins: dTal (~quassel@dragonbox/wizzard/dtal)
[14:58:05] *** Quits: evocatus (~evocatus@109.229.144.249) (Ping timeout: 256 seconds)
[14:59:47] *** Quits: bluedust (~bluedust@59.89.212.127) (Ping timeout: 256 seconds)
[15:01:41] *** Joins: Lunatrius (~Lunatrius@77.38.76.5)
[15:02:12] *** Joins: jay-m126 (~jay-m@129.0.99.22)
[15:02:23] *** Joins: jay-m126_ (~jay-m@129.0.99.22)
[15:02:25] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:18fd:c3b6:aec4:7a02)
[15:02:28] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[15:03:16] *** Joins: pro_z_ (~pro_z@37.214.55.61)
[15:03:35] *** Joins: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[15:03:45] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 256 seconds)
[15:05:55] *** Quits: Ringtailed-Fox (~BoingBoin@2001:1970:5d2a:c500:1062:6ccc:6554:e08f) (Read error: Connection reset by peer)
[15:06:33] *** Joins: Ringtailed-Fox (~BoingBoin@2001:1970:5d2a:c500:b1d7:e341:3a4a:bbf6)
[15:06:49] <sreve_> is there a one-liner for "return value from dict, but '' when key not existsd" ?
[15:07:31] *** Joins: jay-m1261 (~jay-m@129.0.99.22)
[15:08:03] <jinsun__> return d.get(key, "")
[15:08:32] <sreve_> oh, I didn't now the .get() before. perfect.
[15:09:47] *** Joins: bluedust (~bluedust@59.89.212.127)
[15:09:55] *** Joins: rah (rah@verain.settrans.net)
[15:10:02] <rah> can I do this in python?
[15:10:14] <rah> while (len(data = file.read(DATA_LENGTH)) > 0):
[15:10:24] <rah>    ...
[15:11:21] <jinsun__> you can do it with walrus, change = to :=
[15:11:31] <jinsun__> 3.8+ only
[15:12:02] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 252 seconds)
[15:12:31] <paul424> also  is that pygame module avaible in Visual Studio Code with python ...
[15:12:41] <paul424> I mean would I have to install some other new stuff ?
[15:12:45] <supakeen> e.g. `while (data := file.read(...)):` (unless < 0 indicates a failure).
[15:13:25] *** Quits: bluedust_ (~bluedust@185.206.227.142) (Ping timeout: 250 seconds)
[15:13:32] *** Joins: millido (~millido@84.210.150.128)
[15:14:16] *** Joins: nottorp (~none@89.39.71.114)
[15:15:01] <jinsun__> paul424: VS Code is an editor, it doesn't come with python packages, you have to install them yourself
[15:15:14] <paul424> aha great
[15:15:25] <paul424> but I have installed python already there
[15:15:33] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[15:15:57] <jinsun__> the python extension may prompt you to auto-install python and some packages like pytest and linters
[15:16:27] *** Joins: bancroft (~bancroft@user/bancroft)
[15:16:33] <jinsun__> and there might be another extension that can work like a gui for pip
[15:16:46] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f1:bb6d:d057:c3a4:b9e0:579f) (Ping timeout: 260 seconds)
[15:16:51] <jinsun__> but I don't trust those to not mess things up
[15:16:52] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[15:17:04] <jinsun__> so I'd recommend doing it from the terminal yourself
[15:17:13] <paul424> I don;t get it , why you don't trust pygame ?
[15:17:21] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:17:40] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[15:17:44] <jinsun__> I mean't I don't trust random VSCode extensions to install packages properly
[15:17:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:17:58] <jinsun__> pygame is fine, just install it yourself
[15:18:01] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[15:18:13] <paul424> oki thanks
[15:18:18] *** Quits: structoha1 (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[15:19:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:20:13] <rah> jinsun__: I'm using 3.6, is there a way to do something equivalent?
[15:20:15] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[15:20:50] *** Quits: bancroft (~bancroft@user/bancroft) (Ping timeout: 252 seconds)
[15:21:49] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:21:54] <jinsun__> rah: well the old school way is to do it in 3 lines, data = file.read before the loop, len(data) in the while condition, and then data = file.read again at the end of the loop
[15:22:38] <jinsun__> I mean end of the loop body, but inside the loop
[15:24:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[15:24:41] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[15:26:32] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:26:49] *** Quits: paul424 (~tom@ip-5-172-236-248.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:28:03] <lola> o/ replicant
[15:28:12] <lola> I have a question on how to improve this codebase
[15:28:32] *** Joins: zamanf (~dev@213.133.91.246)
[15:28:37] *** Joins: RayMarvo (~Rae@197.184.176.237)
[15:28:50] *** Quits: jay-m126_ (~jay-m@129.0.99.22) (Ping timeout: 250 seconds)
[15:28:54] *** Quits: jay-m126 (~jay-m@129.0.99.22) (Ping timeout: 256 seconds)
[15:29:16] *** Quits: jay-m1261 (~jay-m@129.0.99.22) (Ping timeout: 250 seconds)
[15:29:17] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[15:30:20] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:30:25] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:30:44] *** Joins: jay-m126 (~jay-m@129.0.76.213)
[15:31:00] *** Joins: jay-m126_ (~jay-m@129.0.76.213)
[15:31:40] <Wulf> lola: hello. Which one?
[15:31:52] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:32:00] <Wulf> lola: what's this "o/ ..." you keep typing here?
[15:32:14] <lola> o/ \o/\o
[15:32:27] <jinsun__> (and what is replicant?)
[15:32:31] <lola> Wulf: people raising hands saying hello
[15:32:32] *** Joins: rMdes (~rmdes@my.armada.digital)
[15:32:40] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[15:32:47] <lola> jinsun__: replicant is the first mobile OS
[15:32:55] *** Joins: vitali64 (~vitali64@user/vitali64)
[15:33:05] <jinsun__> okay, but this is #python
[15:33:05] <lola> based on GNU that is
[15:33:16] <lola> :s
[15:33:25] <lola> it is a python script
[15:33:29] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[15:33:41] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[15:33:42] <lola> that will ventually be included upstream on the git project
[15:33:50] <lola> more specifically git remotes
[15:33:54] *** Joins: Z-cat_ (~Z-cat@128-69-59-125.broadband.corbina.ru)
[15:34:02] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 250 seconds)
[15:34:04] <lola> I just need some help with the code if that would be possible
[15:34:13] <lola> given Im not that experienced with python
[15:34:20] * lola goes fetch code
[15:34:24] *** Joins: lakrass (~lakrass@user/lakrass)
[15:34:28] *** marduk4 is now known as marduk
[15:35:45] <nedbat> lola: jinsun__'s point is that no one knows what you mean when you type "o/ replicant".  You're better off saying something people understand.
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:03] *** Joins: jay-m1261 (~jay-m@129.0.76.213)
[15:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:48] <lola> I have explain o/
[15:36:57] <lola> is a person raising their arm
[15:37:02] *** Quits: nottorp (~none@89.39.71.114) (Quit: This computer has gone to sleep)
[15:37:08] <lola> so same as \o/ for both arms
[15:37:19] <lola> anyway back on topic
[15:37:19] <Wulf> lola: so it means "hello replicant"? Makes no sense to me.
[15:37:24] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[15:37:24] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[15:37:24] *** Joins: JordiGH (~jordi@user/jordigh)
[15:37:33] <lola> no hello python
[15:37:48] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[15:37:49] <lola> Wulf: noticed the quotes ""
[15:37:59] <lola> :s:S
[15:38:05] <lola> anyway back to topic
[15:38:07] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[15:39:11] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[15:40:05] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 252 seconds)
[15:40:13] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[15:41:53] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[15:42:44] *** Joins: frost (~frost@user/frost)
[15:43:23] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[15:43:26] *** Joins: structoha1 (~structoha@gateway/tor-sasl/structoha)
[15:44:13] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 256 seconds)
[15:44:57] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[15:45:32] *** Joins: lakrass (~lakrass@user/lakrass)
[15:46:31] <Wulf> ccccccnvunlrjlbrtckgvuelgvlhgirujgirttbifjrl
[15:46:53] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[15:47:25] <lola> o/ python
[15:47:25] <lola> I have a question on how to improve this codebase.
[15:47:53] <Wulf> lola: what code base, what question?
[15:48:00] <lola> cant we improve section on main:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/3c79d0c9406f74e06fc0720cea7ef0ce5913f5bf)
[15:48:30] <lola> https://bpa.st/OWYA
[15:48:51] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[15:49:33] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[15:50:01] <supakeen> You mean just shorter? `files = write_page(...) + write_attachments(...)`.
[15:50:31] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[15:50:35] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[15:50:42] <lola> no I mean the same way we improved bottom code supakeen
[15:50:51] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[15:51:11] <supakeen> There are no default context managers on lists, if you want to write your own because you like the syntax that'd be possible.
[15:51:15] <lola>     f = open(file_path, 'w')
[15:51:15] <lola>     f.write(page.text)
[15:51:15] <lola>     f.close()
[15:51:15] <lola>     with open(file_path, 'w') as file:file.write(page.text)
[15:51:19] <supakeen> But it'd be more confusing than what you have now.
[15:52:06] <Wulf> lola: upper and lower code are hardly related to each other.
[15:52:07] *** Joins: Alexer (~alexer@alexer.net)
[15:52:18] *** Joins: upsala (~zcb@185.213.155.232)
[15:52:20] <lola> I now
[15:52:24] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[15:52:30] <lola> regarding totally diferent things
[15:52:38] *** Joins: bancroft (~bancroft@user/bancroft)
[15:52:48] <lola> but isnt the a way to simplify bottom code in the same manner?
[15:52:49] *** Joins: elena_re (~elena@213.194.126.155)
[15:53:17] <Wulf> lola: no.
[15:55:01] <lola> thanks again
[15:55:21] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:e425:c408:c7f3:a201) (Ping timeout: 245 seconds)
[15:55:21] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[15:55:53] *** Quits: Spawns (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Ping timeout: 256 seconds)
[15:56:14] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[15:57:04] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f1:bb6d:d057:c3a4:b9e0:579f)
[15:57:33] *** Joins: Spawns (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[15:57:34] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[15:57:35] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 256 seconds)
[15:57:35] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 256 seconds)
[15:57:51] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:57:53] *** Quits: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269) (Remote host closed the connection)
[15:58:31] *** Quits: bluedust (~bluedust@59.89.212.127) (Remote host closed the connection)
[15:59:31] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[15:59:56] <rah> jinsun__: ooof
[16:02:07] <lola> ?
[16:02:53] *** Joins: duuude (~user@user/duuude)
[16:03:09] *** Quits: structoha1 (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[16:03:38] *** Joins: beco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[16:04:29] *** Joins: d1cor (~diego@179.63.242.120)
[16:04:50] *** Joins: cdown (~cdown@188.214.11.14)
[16:05:08] *** Quits: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[16:06:23] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[16:06:33] *** Joins: nottorp (~none@2a02:a58:8563:e400:9caa:a4d9:a4fc:7a66)
[16:07:33] *** Joins: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net)
[16:09:43] *** Joins: daidoji (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net)
[16:12:43] *** Quits: jay-m126 (~jay-m@129.0.76.213) (Read error: Connection reset by peer)
[16:12:51] *** Quits: jay-m1261 (~jay-m@129.0.76.213) (Read error: Connection reset by peer)
[16:12:58] *** Quits: jay-m126_ (~jay-m@129.0.76.213) (Read error: Connection reset by peer)
[16:13:29] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[16:13:43] *** Joins: mickey8 (~user@user/mickey)
[16:14:05] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[16:14:51] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[16:15:16] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:15:47] *** Joins: jay-m126 (~jay-m@129.0.76.218)
[16:15:49] *** Joins: evocatus (~evocatus@109.229.144.249)
[16:16:04] *** Quits: evocatus (~evocatus@109.229.144.249) (Remote host closed the connection)
[16:16:36] *** Joins: jay-m126_ (~jay-m@129.0.76.218)
[16:20:54] *** Joins: jay-m1261 (~jay-m@129.0.76.218)
[16:25:21] *** Joins: sawk (~quassel@5.170.141.127)
[16:26:36] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (Quit: Leaving)
[16:26:57] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[16:26:58] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[16:28:04] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[16:28:12] *** Quits: elias117 (~elias117@47.55.112.181) (Ping timeout: 250 seconds)
[16:28:35] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:29:23] *** Joins: SallyAhaj_ (~SallyAhaj@user/sallyahaj)
[16:29:57] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[16:30:14] *** Joins: mickey8 (~user@user/mickey)
[16:30:32] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[16:30:50] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:31:40] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 250 seconds)
[16:32:02] *** Quits: rich (~rich@2a03:4000:3f:f1:b859:16ff:fe45:e87f) (Quit: rich)
[16:34:38] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:35:39] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[16:36:07] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 256 seconds)
[16:36:11] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Ping timeout: 252 seconds)
[16:36:17] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[16:38:28] *** Joins: Alexer (~alexer@alexer.net)
[16:38:35] *** Joins: Gerula (~Gerula@user/gerula)
[16:38:49] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[16:39:25] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[16:39:29] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:40:04] *** Joins: dmenz (~dmenz@2804:14d:5cd4:8125:3f8d:e57c:e8cf:72ea)
[16:40:26] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Client Quit)
[16:40:30] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[16:40:48] *** Z-cat_ is now known as Z-cat
[16:40:49] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[16:41:16] *** Quits: Z-cat (~Z-cat@128-69-59-125.broadband.corbina.ru) (Changing host)
[16:41:16] *** Joins: Z-cat (~Z-cat@user/z-cat)
[16:42:45] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[16:43:16] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 245 seconds)
[16:43:19] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:44:27] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[16:45:04] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[16:45:06] *** Joins: elias117 (~elias117@host-24-224-142-233.public.eastlink.ca)
[16:45:06] *** Quits: elias117 (~elias117@host-24-224-142-233.public.eastlink.ca) (Changing host)
[16:45:06] *** Joins: elias117 (~elias117@user/elias117)
[16:45:41] *** Joins: jpic (~jpic@82.142.23.238)
[16:45:54] *** Quits: bancroft (~bancroft@user/bancroft) (Ping timeout: 260 seconds)
[16:45:54] *** Joins: goepsilongo (~goepsilon@cpe-74-73-86-74.nyc.res.rr.com)
[16:45:56] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[16:46:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[16:46:32] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[16:48:18] *** Joins: paul424 (~chatzilla@2a01:111f:e22:cc00:4e67:ac70:e798:bce8)
[16:48:27] <paul424> Hello  , hello how do I quickly install
[16:48:37] <paul424> the pygame for Visual Studio , the pip install does not work
[16:48:50] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-0577-8cef-87ec-adae.res6.spectrum.com) (Ping timeout: 252 seconds)
[16:48:51] *** Joins: esv (~esv@74.124.178.154)
[16:48:55] <paul424> shuld I restart the computer after the pip install ?
[16:49:10] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[16:49:32] *** Joins: shad (~shad@user/shad)
[16:50:08] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[16:50:14] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[16:50:25] *** Joins: mickey8 (~user@user/mickey)
[16:50:27] *** Quits: OPK (~OPK@user/opk) (Read error: Connection reset by peer)
[16:50:36] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[16:51:22] *** Joins: OPK (~OPK@user/opk)
[16:51:26] *** Joins: Stas_ (~Stas@78.162.42.17)
[16:51:41] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[16:52:29] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:53:20] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 256 seconds)
[16:53:41] *** Quits: vegg (~Stas@78.162.42.17) (Ping timeout: 256 seconds)
[16:53:47] *** Joins: bancroft (~bancroft@user/bancroft)
[16:55:15] *** Quits: M3troidman (~buttler@196.196.203.108) (Ping timeout: 250 seconds)
[16:56:36] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:56:40] *** Joins: SanchoPanza (~rose@2a03:ef42:4001:1f42:30ed:b0bd:701e:610)
[16:57:36] <SanchoPanza> Hi , how I store this db = {accountNumber:{'name':dAccount.name, 'address':dAccount.address,
[16:57:38] <SanchoPanza>  29                              'phone':dAccount.phone,'amount':dAccount.balance
[16:57:40] <SanchoPanza>  30                              ,'password':dAccount.password}}
[16:57:44] <SanchoPanza> to a csv file
[16:58:39] <SanchoPanza> I want to be able to recover information when I close the program and I start it again .
[16:59:33] *** Joins: han-solo (~hanish@user/han-solo)
[16:59:54] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 260 seconds)
[17:00:22] <SanchoPanza> I want to store something like this {'a':{'':''}} in a csv file
[17:01:04] *** Parts: SanchoPanza (~rose@2a03:ef42:4001:1f42:30ed:b0bd:701e:610) ()
[17:01:25] *** Quits: dmenz (~dmenz@2804:14d:5cd4:8125:3f8d:e57c:e8cf:72ea) (Quit: Leaving)
[17:02:11] *** Joins: structoha1 (~structoha@gateway/tor-sasl/structoha)
[17:03:00] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[17:03:15] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[17:04:19] *** Joins: revolve (~u0_a227@82-132-236-173.dab.02.net)
[17:05:39] *** Joins: theprophet (~theprophe@85.114.228.184)
[17:06:06] <theprophet> is there a way to limit pulling items from the list without while ? https://dpaste.org/hTc3
[17:06:11] *** Joins: bluedust (~bluedust@117.222.188.38)
[17:07:33] <theprophet> the first link is wrong, this is the correct one https://dpaste.org/DKnL#
[17:07:46] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:ce9b:72d3:193b:3816)
[17:07:52] <theprophet> i mean how can i achieve the same result without len here
[17:08:03] *** Joins: moldorcoder7 (~moldorcod@37.120.143.221)
[17:08:05] *** Quits: sawk (~quassel@5.170.141.127) (Ping timeout: 252 seconds)
[17:08:10] <theprophet> without len or while
[17:08:16] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[17:08:25] *** Quits: ld_ (~a0z1@185.200.118.184) (Ping timeout: 256 seconds)
[17:08:42] <theprophet> especially without while
[17:08:44] *** Joins: sagax (~sagax_nb@user/sagax)
[17:08:55] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[17:09:32] *** Joins: Sadale (~Sadale@user/sadale)
[17:09:39] *** Quits: greasybyte (~greasybyt@pool-98-116-192-195.nycmny.fios.verizon.net) (Quit: Client closed)
[17:09:55] *** Quits: nottorp (~none@2a02:a58:8563:e400:9caa:a4d9:a4fc:7a66) (Quit: This computer has gone to sleep)
[17:10:16] *** Quits: luva (~luva@146.70.62.244) (Read error: Connection reset by peer)
[17:11:17] <exarkun> theprophet: Sure.  Just use a for loop with difference choice logic (so that every iteration always takes 1 step towards completion).
[17:11:42] <exarkun> Or hide the loop entirely somewhere else.
[17:12:10] <exarkun> Make z a list (it should be anyway).  random.shuffle(z); winning_ticket = z[:4]
[17:12:36] *** Quits: moldorcoder7 (~moldorcod@37.120.143.221) (Ping timeout: 256 seconds)
[17:12:37] <exarkun> Or just random.sample(z, 4)
[17:12:43] *** Joins: luva (~luva@45.141.152.52)
[17:13:21] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[17:13:41] <theprophet> exarkun how do you make iteration to only take 1 step?
[17:15:04] <exarkun> theprophet: Yours doesn't because you have a conditional inside the loop that controls whether it takes a step or not.
[17:15:08] *** Quits: OPK (~OPK@user/opk) (Read error: Connection reset by peer)
[17:15:09] <exarkun> theprophet: So, get rid of the conditional.
[17:15:15] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.4)
[17:15:58] *** byzafk is now known as byzandula
[17:15:58] *** Joins: OPK (~OPK@user/opk)
[17:16:16] <han-solo> `for _ in iter(lambda : len(w), 4):..` # is a stupid way to it ':)
[17:16:28] *** Joins: Sadale (~Sadale@user/sadale)
[17:16:38] *** Joins: sawk (~quassel@5.170.141.127)
[17:17:01] *** Joins: Barones (~Barones@user/Barones)
[17:17:44] <exarkun> A very good way to confuse the heck out of any readers.
[17:18:04] <han-solo> all in good fun :D
[17:18:25] <theprophet> exarkun i did   what u suggested, but now it only adds first 4 items, not 4 random items.
[17:18:37] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[17:19:11] <han-solo> `random.sample(z, 4)` # does exactly what you want, no ? it's random
[17:19:31] <han-solo> "Chooses k unique random elements from a population sequence or set."
[17:19:37] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:81ef:2783:e876:303e) (Quit: pvergain)
[17:20:05] *** Joins: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net)
[17:20:21] <analoq> han-solo: is unique even a requirement in his code?
[17:20:32] *** herme5 is now known as el_kevino
[17:20:56] <theprophet> idk if you notice but i am already using random module han-solo
[17:21:18] <novapy> How would I go about checking if a file exists?
[17:21:48] <theprophet> han-solo choice() is a random module function.
[17:22:01] *** Quits: dfrey (~dfrey@172.103.152.101) (Ping timeout: 256 seconds)
[17:22:02] <analoq> novapy: iirc. os has an isfile function
[17:22:05] *** Quits: bluedust (~bluedust@117.222.188.38) (Remote host closed the connection)
[17:22:11] <analoq> it returns true if the file exists
[17:22:24] <han-solo> analoq: i assume so from the line `if pulled_item not in winning_ticket:`
[17:23:07] <analoq> han-solo: ah yes. i misunderstood the code
[17:23:15] <analoq> i thought it was checking z
[17:23:45] *** Quits: structoha1 (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 276 seconds)
[17:24:01] <novapy> analoq: not seeing it
[17:24:09] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[17:24:24] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[17:24:27] *** Joins: moldorcoder7 (~moldorcod@188.95.55.24)
[17:24:28] <han-solo> novapy: https://docs.python.org/3/library/pathlib.html#pathlib.Path.exists
[17:24:54] <analoq> novapy: google? os.path.isfile() ...
[17:25:01] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[17:25:17] *** Joins: slav0nic (slav0nic@python.su)
[17:25:19] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:25:56] <novapy> Ight, thanks, I got it.
[17:26:20] *** Joins: Vonter (~Vonter@user/vonter)
[17:27:41] *** Joins: bluedust (~bluedust@117.222.188.38)
[17:29:21] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:29:36] *** Quits: RayMarvo (~Rae@197.184.176.237) (Ping timeout: 256 seconds)
[17:31:19] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:31:26] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[17:31:51] *** Joins: kts (~kts@103.73.237.227)
[17:32:15] <ba> Hey, my google-fu is failing me on a cron question. If I set MAILTO, will an email be sent if *any* output is generated, either on stdout or stderr? Are they concatenated? Thanks
[17:32:26] <ba> Crap wrong channel, soz
[17:33:04] *** Joins: Gerula (~Gerula@user/gerula)
[17:33:49] *** Joins: greasybyte (~greasybyt@pool-98-116-192-195.nycmny.fios.verizon.net)
[17:34:42] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[17:34:58] *** Joins: mickey8 (~user@user/mickey)
[17:35:03] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:35:35] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[17:35:49] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 240 seconds)
[17:36:24] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[17:36:38] *** Joins: LagSpike (~LagSpike@69.173.181.173)
[17:37:17] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:38:04] *** Joins: mxp (~mxp@185.16.205.131)
[17:38:07] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:38:16] *** Quits: LagSpike (~LagSpike@69.173.181.173) (Remote host closed the connection)
[17:38:17] *** Joins: dfrey (~dfrey@172.103.152.101)
[17:38:20] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[17:39:03] <lola> o/ python
[17:39:08] <lola> on :">>> import redminelib... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/39e2f287beda7d2bdb84c44b34e6647874abcb6b)
[17:39:28] *** Quits: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net) (Remote host closed the connection)
[17:39:57] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[17:39:58] <lola> does anyone know this error is happening?
[17:39:59] <lola> thanks
[17:40:15] * lola wonder if it something on redmine module side or wrong variable initialization definition
[17:41:15] *** Joins: johnjaye (~pi@173.209.65.233)
[17:41:17] *** Quits: jay-m126 (~jay-m@129.0.76.218) (Ping timeout: 256 seconds)
[17:41:30] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[17:41:51] *** Quits: jay-m1261 (~jay-m@129.0.76.218) (Ping timeout: 256 seconds)
[17:42:02] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[17:42:18] *** Quits: jay-m126_ (~jay-m@129.0.76.218) (Ping timeout: 250 seconds)
[17:42:21] *** Joins: Atque (~Atque@user/atque)
[17:44:43] *** Quits: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it) (Remote host closed the connection)
[17:47:09] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[17:47:27] *** Joins: Vonter (~Vonter@user/vonter)
[17:47:54] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:d9d2:2ac7:8aec:104)
[17:49:40] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 250 seconds)
[17:49:42] <callq> DeMorgan... I need help... if minval is not None and new_int >= minval and maxval is not None and new_int <= maxval:
[17:49:45] <bjs> lola: redmine_instance is just a string, you're not using the `redminelib` thing you imported
[17:49:53] *** Joins: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it)
[17:49:53] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 252 seconds)
[17:50:15] <lola> hmm ok that makes sense
[17:50:20] <lola> how would I then?
[17:50:23] <lola> thanks
[17:50:35] <bjs> lola: is redminelib this thing https://python-redmine.com/ ?
[17:50:53] <lola> yes
[17:50:55] <lola> it is
[17:50:59] <lola> also doesnt author=redmine_instance.user.get(page.author.id)
[17:51:01] <bjs> lola: I'd do it the way the examples there do it :)
[17:51:04] <lola> use redmine?
[17:51:09] <bjs> lola: where?
[17:51:16] <lola> author=redmine_instance.user.get(page.author.id)
[17:51:24] <bjs> lola: which part is using redmine ?
[17:51:34] <lola> .user.get
[17:51:44] <bjs> lola: but redmine_instance isn't a redmine thing, it's just a string
[17:51:55] <bancroft> I want to do something like this instead of ModelInstance/ModelClass but get Mypy errors. It's identifying all the video models in VIDEO_MODEL_CLASSES as `Type[VideoModel]`, and if I try to use that type directly. How do I work around this? https://bpa.st/3OUA
[17:52:00] <bjs> lola: so there are no .user.get things for it, which is exactly the error you got
[17:52:16] <callq> How could I make this 1) better and 2) also work with floats without copying the whole function and changing one thing? https://hatebin.com/hmjhyuhjoh
[17:52:24] <lola> bjs: ok so I need to use redmine.user.get?
[17:52:49] <bjs> lola: looking at that link I gave you, maybe you wanted something like  redmine_instance = redminelib.Redmine('that url')
[17:53:01] <lola> and if so how do I connect that with the instance provided as a argument for scripts
[17:53:05] <bancroft> mypy complains that I can't use an abstract class
[17:53:18] <bjs> lola: because I dont see you use Redmine anywhere like in the link
[17:53:29] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-801c-a6a4-997f-0730.res6.spectrum.com)
[17:53:43] <lola> from redminelib import Redmine
[17:53:53] <lola> redmine_instance = Redmine(redmine_instance_url)
[17:53:55] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[17:54:23] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[17:54:26] <lola> and def main():
[17:54:26] <lola>     if len(sys.argv) != 5:
[17:54:26] <lola>         usage(sys.argv[0])
[17:54:26] <lola>     redmine_instance_url = sys.argv[1]
[17:54:37] *** Joins: noarb (~noarb@user/noarb)
[17:54:39] *** Joins: mickey8 (~user@user/mickey)
[17:55:13] <bjs> lola: what is this?
[17:55:24] *** Joins: cdown_ (~cdown@163.114.131.1)
[17:55:49] <lola> so redmine_instance_url is defined as a argument by script
[17:56:03] <lola> in redmine_instance_url = sys.argv[1]
[17:56:13] <bjs> Yes.
[17:56:16] <bjs> that's what that line says, sure
[17:56:18] <lola> the redmine_instance = Redmine(redmine_instance_url)
[17:56:21] <lola> in mains
[17:56:32] *** Joins: derek_v (~derek_v@cpe-70-95-160-136.san.res.rr.com)
[17:56:33] <lola> *main function
[17:56:46] <bjs> lola: that makes a Redmine instance, but look at the paste you gave me earlier. it didn't have the Redmine(...) stuff
[17:57:10] <lola> and then author=redmine_instance.user.get(page.author.id)
[17:57:21] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:8970:f3cf:299f:5cf8)
[17:57:23] <lola> so has you see REdmine module is being used
[17:57:37] *** Joins: luva6 (~luva@37.120.197.52)
[17:57:39] <bjs> lola: yes but that's not what you were doing in the paste you showed me earlier
[17:57:44] <lola> in https://git.replicant.us/contrib/irelativism/wiki-migration-scripts/tree/redmine2git.py
[17:57:57] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[17:58:01] *** cdown_ is now known as cdown
[17:58:04] <lola> bjs: it is, is just the error for this^
[17:58:17] *** Joins: jay-m126 (~jay-m@129.0.76.217)
[17:58:24] <bjs> lola: it's not. Do you see the difference between `redmine_instance = Redmine("url")` and `redmine_instance = "url"` ?
[17:58:38] *** Quits: foul_owl (~kerry@94.140.8.107) (Read error: Connection reset by peer)
[17:58:49] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:58:57] *** Quits: andreasbuhr (~quassel@p549db637.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:59:03] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[17:59:25] *** Quits: luva (~luva@45.141.152.52) (Ping timeout: 256 seconds)
[17:59:25] *** luva6 is now known as luva
[17:59:26] <bjs> lola: compare with what you showed me earlier and the error https://libera.ems.host/_matrix/media/r0/download/libera.chat/39e2f287beda7d2bdb84c44b34e6647874abcb6b  there is no Redmine()s
[17:59:51] *** Joins: charlz3 (~charlz3@cpc120806-nrwh12-2-0-cust326.4-4.cable.virginm.net)
[18:00:33] *** Quits: kurfen_ (~kurfen@176.119.195.10) (Ping timeout: 256 seconds)
[18:01:09] <trinli> Abuot structure of code: I am running scientific experiments and my codebase is getting large. I am organising it to better grasp what there is. Now, I run experiments from time to time and usually store them in separate files. They all import e.g. the metrics-file and IMO belongs to the same repository. If I want to put the experiment-files in their own directory, is the koscher way of running them
[18:01:15] <trinli> "python ./experiments/experiment_1.py"?
[18:01:40] <trinli> Or what would be the least hacky solution to this?
[18:02:01] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 245 seconds)
[18:02:09] <bjs> bancroft: is VideoModel an abstract class?
[18:02:21] <grym> trinli: you'll want to make a python package, and ideally install it in "development" mode in its own virtual environment that has all its dependencies in it
[18:02:22] *** Joins: structoha1 (~structoha@gateway/tor-sasl/structoha)
[18:02:30] *** Joins: kurfen (~kurfen@213.152.188.7)
[18:02:32] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[18:02:46] <grym> trinli: then you would `thevenv/bin/python -m yourpackagename.experiments.experiment1
[18:02:56] <grym> (or make a command line entry point that runs it)
[18:03:01] <bancroft> bjs: yes: class VideoModel(ABC):
[18:03:02] *** Quits: jay-m126 (~jay-m@129.0.76.217) (Ping timeout: 256 seconds)
[18:03:57] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[18:04:20] *** Joins: gusto (~Augustus@109.255.100.54)
[18:04:40] <grym> trinli: having a package solves bascially all of your namespacing and import problems along the way, too, and helps with making your code easier to replicate
[18:04:45] <bancroft> bjs: which is basically just a slotted ABCMeta
[18:05:13] <trinli> grym: oh, I did not know you could run python files like that without the .py. This solves it. Thank you!
[18:05:42] *** Quits: Ingvix (~Ingvix@user/ingvix) (Read error: Connection reset by peer)
[18:05:51] <trinli> any links for reading up on creating packages?
[18:05:58] <bjs> bancroft: for Type[C] if C is an abstract class (that is, one that is a subclass of ABC and has abstract methods) then itself and any abstract subclasses are not valid
[18:07:15] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[18:07:30] <novapy> How do I open a file in read and wright mode
[18:07:55] *** Quits: charlz3 (~charlz3@cpc120806-nrwh12-2-0-cust326.4-4.cable.virginm.net) (Read error: Connection reset by peer)
[18:08:17] <bjs> novapy: "r+"  see https://docs.python.org/3/library/functions.html#open
[18:08:28] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[18:08:42] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 256 seconds)
[18:08:45] *** Joins: Ingvix (~Ingvix@user/ingvix)
[18:08:50] <bjs> but quite often what you really want is to do the reading and writing separately as it's much simpler that way
[18:08:55] <exarkun> most files don't have a wright mode though
[18:08:59] *** Quits: BillyZane (~BillyZane@185.202.221.36) (Read error: No route to host)
[18:09:05] <bjs> exarkun: only if they fly?
[18:09:25] *** Quits: led_belly (~led_belly@83.97.23.14) (Ping timeout: 240 seconds)
[18:09:34] *** Joins: BillyZane (~BillyZane@185.202.221.34)
[18:09:43] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[18:09:46] *** Quits: Barones (~Barones@user/Barones) (Read error: Connection reset by peer)
[18:09:59] <exarkun> well, there's Margaret Wright, so maybe she could open files in wright mode, too
[18:11:19] *** Quits: moldorcoder7 (~moldorcod@188.95.55.24) (Ping timeout: 256 seconds)
[18:11:19] *** Quits: lakrass (~lakrass@user/lakrass) (Read error: Connection reset by peer)
[18:11:19] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:11:26] *** Joins: lakrass1 (~lakrass@user/lakrass)
[18:11:53] *** Joins: moldorcoder7 (~moldorcod@188.95.55.24)
[18:12:06] <Deneb> I am still working on getting my serial capture routine working in a GUI (this is the third day) and am nowhere near a solution. Essentially ser.read(1) with a timeout of None does not appear to block in a GUI environment. The function just runs on and returns an empty result. I have tried playing with asyncio but this does not appear to solve the problem. Code here: https://bpa.st/Y2CQ Can anyone suggest why this is happening or what I am doing
[18:12:06] <Deneb> wrong? Command line output returns  'bytearray(b'0\r\n')' without waiting for a response from ser.read(1)
[18:12:27] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[18:12:30] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[18:12:30] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:12:42] *** Joins: odoood (odoood@gateway/vpn/protonvpn/odoood)
[18:12:43] <exarkun> Deneb: `ser` is not defined anywhere in your paste
[18:13:18] <exarkun> Deneb: In principle, Twisted supports non-blocking serial access w/ a Tkinter GUI (which seems to be what you're using?)
[18:13:42] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[18:13:49] <exarkun> But Tkinter's mainloop is a mess so I won't try to convince you it supports this usage flawlessly
[18:15:04] *** Joins: foul_owl (~kerry@94.140.8.105)
[18:15:36] *** Quits: lakrass1 (~lakrass@user/lakrass) (Read error: Connection reset by peer)
[18:16:47] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Remote host closed the connection)
[18:16:49] *** Joins: led_belly (~led_belly@83.97.23.14)
[18:16:58] <Deneb> exarkun: its a global object because I need its state preserved between runs. Sorry, I missed adding it to the paste. Basically ser = serial.Serial(). Not come across Twisted before but will have a look.
[18:17:49] *** Joins: lakrass (~lakrass@user/lakrass)
[18:18:27] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[18:18:37] *** Quits: paul424 (~chatzilla@2a01:111f:e22:cc00:4e67:ac70:e798:bce8) (Ping timeout: 240 seconds)
[18:18:44] *** Quits: dsrt^ (~dsrt@128-092-164-034.biz.spectrum.com) (Remote host closed the connection)
[18:18:45] *** Joins: jay-m126 (~jay-m@129.0.76.217)
[18:18:51] *** Joins: jay-m126_ (~jay-m@129.0.76.217)
[18:18:56] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:9b95:f42d:983f:2e82) (Quit: Konversation terminated!)
[18:18:57] <varaindemian> can I somehow do a `import sys.argv[1]`?
[18:19:02] <exarkun> Deneb: https://github.com/twisted/twisted/blob/trunk/docs/core/examples/tkinterdemo.py gives a bit of flavor of how it integers Tkinter
[18:19:06] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[18:19:12] *** Joins: jay-m1261 (~jay-m@129.0.76.217)
[18:19:12] <bjs> varaindemian: I'm not sure what that would mean
[18:19:17] <bjs> varaindemian: what are you trying to do?
[18:20:11] <SnoopJ> varaindemian, to give a clear answer to your question: no, that's invalid syntax. But if you tell us what you were aiming for we might have suggestions.
[18:20:22] <han-solo> https://docs.python.org/3/library/importlib.html#importing-programmatically
[18:20:37] *** Quits: lakrass (~lakrass@user/lakrass) (Client Quit)
[18:20:52] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[18:21:30] <Deneb> exarkun: the problem I have is that I am reading data from a serial port, but in this case, the GUI has to wait for a user action, i.e. pressing a button on the instrument. This generates serial data. waitForPlotData() waits until it 'see's something on the serial port then collects the data into a bytearray. It works just fine if I call it on the command line. The prgram sits waiting until I press the button and after a second or three the
[18:21:30] <Deneb> plotdata bytearray is printed. It doesn't work in the GUI environment though, because the program just runs on and doesn't wait.
[18:21:58] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[18:22:41] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[18:24:32] *** Joins: lakrass (~lakrass@user/lakrass)
[18:24:35] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-72.dsl.bell.ca) (Ping timeout: 256 seconds)
[18:25:11] *** Joins: euouae (~euouae@user/euouae)
[18:25:30] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[18:25:32] <euouae> Hello I installed a package with `poetry install`, and then I modified it. How can I reinstall it?
[18:25:55] <euouae> running `poetry install` again seems to ignore my modifications. I.e. I inserted some nonsense in the source code and the installation command worked fine.
[18:26:04] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 250 seconds)
[18:26:53] *** Joins: defn (~n0b0dy@user/defn)
[18:28:00] <SnoopJ> euouae, is your "nonsense" something that would actually break the installation, or just something that would cause a runtime error?
[18:28:10] <euouae> break the installation
[18:28:18] <euouae> like calling a function that doesnt exist
[18:28:20] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:d9d2:2ac7:8aec:104) (Quit: Konversation terminated!)
[18:28:32] <SnoopJ> that won't cause an error at install time if the call is in application code
[18:28:41] <bancroft> euouae: how can you tell its now broken? are you creating a cli app and trying to command or is it a package?
[18:28:54] <euouae> Ah no, so `poetry install` works as intended?
[18:29:31] <euouae> What about importing something that doesn't exist? Shouldn't that cause an error?
[18:29:37] <SnoopJ> At runtime.
[18:29:53] *** Quits: yourfate (~yourfate@cabal.yourfate.org) (Quit: WeeChat 3.3)
[18:29:57] <euouae> Got it. Thanks, I'm too used to compilation errors
[18:30:38] *** Quits: kts (~kts@103.73.237.227) (Quit: Konversation terminated!)
[18:30:42] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[18:30:49] <SnoopJ> There are static analysis tools that will catch this kind of error (I like pylint) but poetry itself doesn't care about this kind of change and will happily install the garbage for you
[18:31:29] <euouae> Yes indeed that's how it is, I just checked. Thank you
[18:31:32] <SnoopJ> euouae, I just did a double-check and put `import doesnotexist` in a poetry project I have laying around. No error at install, but I get an error when I run that code. If I delete it and `poetry install` again, I get the changes :)
[18:31:36] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[18:31:43] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[18:31:49] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:31:49] <SnoopJ> so yep, poetry is doing what you asked for, but it's slightly different than what you may have been expecting
[18:31:51] <euouae> now another question is about crypto prng
[18:32:04] <euouae> I'm looking at code using os.urandom() and I want to argue that secrets.token_bytes() is better. Am I right?
[18:32:09] <euouae> this is for a crypto application
[18:32:17] *** Joins: dfkfs (~dfkfs@178.49.152.151)
[18:32:41] <dfkfs> what is the analog of chr() in python3?
[18:32:55] <SnoopJ> dfkfs, chr() is defined in Python 3
[18:33:06] <bjs> dfkfs: isn't it still chr?
[18:33:06] <dfkfs> but it works like unichr
[18:33:08] <euouae> My understanding is this: os.urandom() cannot guarantee its quality of implementation whereas secrets.token_bytes() will be 'the best crypto prng available in the system'
[18:33:16] <euouae> That's from reading the docs, but I wanted to make sure I get this right
[18:33:17] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[18:33:55] <bjs> dfkfs: you want to create some bytes object given some integer?
[18:33:59] *** Quits: Sadale (~Sadale@user/sadale) (Remote host closed the connection)
[18:34:13] *** Joins: yourfate (~yourfate@cabal.yourfate.org)
[18:34:24] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[18:34:29] *** Joins: pieguy128 (~pieguy128@bas8-montreal02-65-93-195-206.dsl.bell.ca)
[18:34:43] <dfkfs> i want turn 0x41 to b'A' for exampel
[18:34:44] <SnoopJ> euouae, token_bytes() will give you SystemRandom.randbytes() but secrets is more explicitly about cryptographic contexts so I would use it just for that clarity
[18:34:47] <bjs> dfkfs: bytes([n]) where n is 0-255 might be what you want
[18:35:02] *** Joins: Sadale (~Sadale@user/sadale)
[18:35:07] <SnoopJ> dfkfs, do you perhaps want to do: `b"\x41".decode("latin-1")` ?
[18:35:12] <euouae> SnoopJ thank you
[18:35:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[18:35:34] *** Joins: meltedbrain_y2k (~tekserf@47.61.115.91)
[18:35:40] <varaindemian> bjs trying to import a file that is stored in a variable as a string
[18:35:42] <SnoopJ> dfkfs, this article/talk is also a helpful review of what changed between 2.x and 3.x: https://nedbatchelder.com/text/unipain.html
[18:35:44] <bjs> dfkfs: b'ABC' is really just a pretty way of writing bytes([0x41, 0x42, 0x43])
[18:35:46] <lola> bjs: I went for lunch
[18:35:48] <varaindemian> bjs: ^
[18:35:56] <dfkfs> yes SnoopJ
[18:36:02] <varaindemian> SnoopJ: ^
[18:36:41] <dfkfs> bjs bytes() returns null byte string (apperently 0x41 long)
[18:36:44] <bjs> varaindemian: well, there's han-solo's suggestion (importlib) but it's a slightly unusual thing to do (because you can't really *use* the thing you imported that way easily...)
[18:36:50] <SnoopJ> varaindemian, you will want to use the importlib machinery (https://docs.python.org/3/library/importlib.html#importing-programmatically) to bring in the name given in sys.argv[1], then.
[18:36:53] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:36:57] <bjs> dfkfs: bytes without any argument does yes
[18:37:02] *** Joins: atomicwrites (~atomicwri@user/atomicwrites)
[18:37:09] <dfkfs> bytes(0x41)
[18:37:11] <bjs> dfkfs: oh no, bytes(0x41) != bytes([0x41])
[18:37:18] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[18:37:22] <lola> bjs: but it is a object so it shouelnd be a problem
[18:37:25] *** Joins: zeden (~zeden@user/zeden)
[18:37:28] <dfkfs> oh you meant literal []
[18:37:32] <bjs> yes
[18:37:48] <bjs> lola: okay but do you see the difference between  redmine_instance = "url"  and redmine_instance = Redmine("url")  ?
[18:37:55] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:38:00] <SnoopJ> bytes() with an integer argument is (unfortunately?) that many zero bytes
[18:38:02] <bjs> lola: the first is just a string object, the second is actually using redmine
[18:38:11] <lola> I was using python3 instead of my scripts
[18:38:12] <bjs> SnoopJ: I am yet to use this feature
[18:38:15] <lola> to debug issue
[18:38:19] <lola> that is all
[18:38:20] *** Joins: mickey8 (~user@user/mickey)
[18:38:27] *** Joins: Vonter (~Vonter@user/vonter)
[18:38:27] <lola> some steps were taken though
[18:38:54] <SnoopJ> bjs, I dunno what the purpose is since they aren't mutable, I guess it's convenient when you're building padding...?
[18:38:54] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[18:39:12] <lola> redmine_instance = Redmine("url") != author=redmine("url")
[18:39:59] <bjs> lola: yes, but here is the thing you showed me earlier: https://libera.ems.host/_matrix/media/r0/download/libera.chat/39e2f287beda7d2bdb84c44b34e6647874abcb6b  this code doesn't use redmine. There's no Redmine(...) anywhere.  So that's why you get that error there.
[18:40:11] <bjs> SnoopJ: idk, I think I have written '\x00'*n  before
[18:40:23] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:40:25] <bjs> oops b'\x00'*n :)
[18:40:33] <lola> bjs: I get the same error in https://git.replicant.us/contrib/irelativism/wiki-migration-scripts/tree/redmine2git.py
[18:40:46] <lola> that is just a simplefied version for debug
[18:40:50] <bjs> lola: okay then, what is the actual error you get?
[18:40:54] <SnoopJ> varaindemian, https://bpa.st/XKFA
[18:40:57] <lola> let me get lines for you
[18:41:00] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 256 seconds)
[18:41:03] <lola> bjs:
[18:41:16] <bjs> lola: just make a paste with the whole error
[18:41:20] <lola> I have shared it previously one seconf
[18:41:35] * lola goes look in backlog
[18:41:55] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[18:42:06] *** Joins: Sadale (~Sadale@user/sadale)
[18:42:13] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[18:42:26] <lola> but yeah shouldnt maker given it is same error
[18:42:28] <lola> here you go
[18:42:30] <lola> https://bpa.st/4GSQ
[18:43:03] *** Quits: lakrass (~lakrass@user/lakrass) (Ping timeout: 256 seconds)
[18:43:03] *** Quits: jay-m1261 (~jay-m@129.0.76.217) (Ping timeout: 256 seconds)
[18:43:16] <lola> thanks btw bjs nontheless for trying to help
[18:43:26] <bjs> lola: okay this is a very different error to the one you had earlier and is totally unrelated to redminelib.  The problem is that the variable "redmine_instance" doesn't exist in the `git_commit` function
[18:43:27] <lola> I appreciate a lot your time and energy
[18:43:30] <bjs> did you mean to pass it as an argument?
[18:43:37] *** Quits: jay-m126_ (~jay-m@129.0.76.217) (Ping timeout: 256 seconds)
[18:43:37] *** Quits: jay-m126 (~jay-m@129.0.76.217) (Ping timeout: 256 seconds)
[18:43:53] *** Joins: jay-m126 (~jay-m@129.0.76.217)
[18:43:56] *** Joins: redsith (~user@45.81.189.55)
[18:43:57] <lola> it is defined previously
[18:44:00] *** Joins: lakrass (~lakrass@user/lakrass)
[18:44:10] <bjs> lola: it's not defined in that function though.
[18:44:24] <lola> what do you mean by " "redmine_instance" doesn't exist in the `git_commit` function"
[18:44:25] *** Joins: jay-m126_ (~jay-m@129.0.76.217)
[18:44:35] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:44:41] <bjs> lola: well imagine this code https://bpa.st/QHOA
[18:44:49] <lola> bjs: ohh so in python you need to duplicate everything in each function?
[18:45:17] *** Joins: darshan (~darshan@2a0d:6fc2:4820:8f00:c1e7:bcbf:e0c1:df21)
[18:45:26] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 252 seconds)
[18:45:27] *** Joins: jay-m1261 (~jay-m@129.0.76.217)
[18:45:29] <bjs> lola: well no, Python uses the same scoping rules as almost every other language where variables inside functions aren't shared in other functions you call
[18:45:31] *** darshan is now known as bennydarshan
[18:45:45] <bjs> (the phrase to google is "lexical scoping");  the easiest solution is to pass things around
[18:45:59] <bjs> like `def git_commit(redmine_instance, ...)` then when you call it you pass redmine_instance to it.
[18:46:18] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[18:46:27] <lola> "pass things around" by this you mean duplication of code
[18:46:28] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[18:46:29] <kosh> the only language I can think of where everything is global is fortran
[18:46:39] <grym> kosh: many lisps
[18:46:45] <bjs> lola: not of code,  you don't have to duplicate the code that makes the instance.
[18:46:51] <kosh> lola, not duplicating code, just passing arguments to functions
[18:47:01] <novapy> is there to execute a specific block of code without executing others while using click? ie, like when you would add a --version or --help to a cli program and it output and exits?
[18:47:06] <kosh> grym, ah that is something I never learned
[18:47:25] <lola> ok how does one pass argument?
[18:47:25] <bennydarshan> Hi #python! I'm puzzled about this for a few days now and I was hoping for help. Is there a way to download the wheels for a specific requirements.txt file in a 'raw' form? without pip building them or checking for conflicts?
[18:47:31] *** Joins: Sadale (~Sadale@user/sadale)
[18:47:33] <lola> sorry still learning :S
[18:47:40] <grym> bennydarshan: `pip wheel`
[18:47:46] * lola goes look how to pass a argument in python
[18:47:48] <kosh> lola, I think you need to start with a basic tutorial
[18:47:58] <SnoopJ> bennydarshan, does `pip download` do what you want?
[18:48:02] <bjs> lola: like you do in the other functions or like how I say.  here's a fixed version of my previous example https://bpa.st/7GMA
[18:48:11] <grym> or, yeah
[18:48:15] <grym> that's the badger
[18:48:16] <kosh> lola, try this https://greenteapress.com/wp/think-python-2e/
[18:48:17] <bennydarshan> grym: I tried it, but tit still seems like wheel tries to build the package
[18:48:18] <bjs> lola: a tutorial or some kind of introduction will cover these things
[18:48:30] *** sengy is now known as sangy
[18:48:30] <SnoopJ> bennydarshan, yes, `pip wheel` is about building
[18:48:31] <bennydarshan> SnoopJ: Download does look for conflicts...
[18:48:32] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:48:48] <lola> kosh: I already taken CS50
[18:48:49] <lola> now I need practice like this
[18:48:59] <SnoopJ> bennydarshan, does it do that even if you pass --no-deps ?
[18:49:12] <CrtxReavr> You're calling pip from python?
[18:49:19] <bennydarshan> Um... I didn't think it will help, I'll try it!
[18:49:27] <novapy> is there to execute a specific block of code without executing others while using click? ie, like when you would add a --version or --help to a cli program and it output and exits?
[18:49:40] <SnoopJ> It might not, but that'd be my guess since it's basically saying "I don't care about the dependencies of each req"
[18:49:56] <kosh> lola, so you took a CS class and they did not cover functions with arguments?
[18:50:10] <SnoopJ> bennydarshan, it would probably still care about any constaints in each requirement (i.e. `somepkg>1.0` would avoid 1.0 of that package)
[18:50:10] <bennydarshan> SnoopJ:  still tries to build a package. yes
[18:50:26] <CrtxReavr> if '--version' in sys.argv:
[18:50:29] *** Parts: euouae (~euouae@user/euouae) ( )
[18:50:36] <SnoopJ> CrtxReavr, using sys.argv with click is an antipattern
[18:50:38] *** Quits: mcpackey (~pm0001@p5dc1c7d2.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:50:42] <lola> ok I see now
[18:50:54] <lola> so Ineed to pass function as an argument
[18:50:57] <SnoopJ> bennydarshan, hmm. what package is this? Are you sure a binary wheel is available?
[18:51:01] <novapy> CrtxReavr: Not using sys, I am using click
[18:51:16] <CrtxReavr> One does not preclude the other.
[18:51:25] <bennydarshan> A binary wheel is not available, but I don't want the executable, I actually want pip to download the source for that matter
[18:51:47] <bennydarshan> Basically, I have a list of requirements that I want to download myself and then ship to a different person, for them to build.
[18:52:40] <bjs> novapy: do you have like, a click group()? or just 1 big command() or what?
[18:52:52] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[18:53:04] <SnoopJ> bennydarshan, can you share the requirements with us? I'm not sure why download would do a build at all as I think about it
[18:53:40] <novapy> lola: If you have taken highschool algebra, python functions work the same: ie f(x) = <manipulate x>, or in python def f(x): <manipulate x>, and then call f(argument here)
[18:54:07] <novapy> bjs: just 1 big command()
[18:54:13] <SnoopJ> hmm, but it does do that, doesn't it 🤔
[18:54:16] <lola> I understand now
[18:54:24] <lola> I was a big confused
[18:54:31] *** Quits: Nigma (~magnus@87.61.126.226) (Ping timeout: 245 seconds)
[18:54:41] <lola> in regards to author
[18:54:53] <lola> I think I fix it now
[18:55:08] <lola> Thanks again, sorry for the lack of experience with python
[18:55:11] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[18:55:27] <lola> I just started learning python on my own ;)
[18:55:33] <bjs> novapy: then can't you just make an flag option() and then `if flag: return`
[18:55:36] <lola> I truly appreciate your help
[18:55:39] <lola> Cheers
[18:55:43] <SnoopJ> lola, no need to apologize for that, it's what #python is for :)
[18:56:04] <lola> cool
[18:56:24] *** Quits: duuude (~user@user/duuude) (Ping timeout: 250 seconds)
[18:57:19] <bjs> novapy: like https://bpa.st/DHWA ?
[18:57:27] <novapy> bjs: so if I wanted to change the way the program works, i should do `if version: <print version> \n exit()`
[18:57:28] <lola> hmm ...  git_commit(extension, output_directory, author, page, files) this should have fix it
[18:57:41] <lola> now I get author not defined error
[18:57:53] <bjs> novapy: I mean if you only have 1 command, then it's certainly by far the easiest thing to do isn't it?
[18:57:57] * lola goes watch cs50 class on this again
[18:58:18] <novapy> bjs: Yea
[18:59:23] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Max SendQ exceeded)
[18:59:30] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[19:00:53] <bjs> novapy: so I'd do it that way, click does have other ways of doing this but they mostly only apply when you have groups of commands
[19:01:05] <SnoopJ> bennydarshan, I gave it a shot locally with numpy and it looks like most of the build stuff that's happened was for the build chain (i.e. it didn't build the package itself). I'm not sure how to suppress that behavior, though.
[19:01:14] *** Parts: rah (rah@verain.settrans.net) (thanks)
[19:01:31] *** Quits: thevishy (~Nishant@2405:201:f005:c007:3c07:8d1a:dd0:be31) (Quit: Leaving)
[19:01:44] <novapy> bjs: Wondering if groups might make it a little neater and more extensible?
[19:02:02] <SnoopJ> it should still work for downloading the distribution, and I *think* that happens before any of the "set up the build chain" stuff, but yech.
[19:02:07] <bjs> novapy: I mean, what you described didn't have any groups
[19:02:28] *** Quits: pieguy128 (~pieguy128@bas8-montreal02-65-93-195-206.dsl.bell.ca) (Ping timeout: 250 seconds)
[19:02:28] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[19:02:34] <bjs> novapy: adding groups would just make it a different interface
[19:02:35] *** Joins: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de)
[19:02:46] *** Quits: angular_mike_ (sid45533@id-45533.ilkley.irccloud.com) (Ping timeout: 268 seconds)
[19:02:52] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[19:02:57] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[19:03:00] *** Joins: Pseudocr1 (~sudo@user/pseudocrat)
[19:03:31] *** Quits: Pseudocr1 (~sudo@user/pseudocrat) (Max SendQ exceeded)
[19:04:02] <novapy> bjs: Can I call a flag with arguments?
[19:04:05] <bjs> novapy: groups are when you have something like `foo cmd1 1 2 3` and `foo cmd2 4 5 6` which do different things. click then lets you put options and code on the group() itself (not just the command()s) so you can have `foo --version` as well as `foo cmd1 1 2 3`.
[19:04:07] *** Joins: Pseudocr1 (~sudo@user/pseudocrat)
[19:04:12] *** Joins: Vonter (~Vonter@user/vonter)
[19:04:12] <bjs> novapy: what does "call a flag" mean?
[19:04:24] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:04:31] <novapy> call the program with a flag
[19:04:36] <novapy> and have arguments
[19:04:37] *** Quits: pax_os__ (uid535114@id-535114.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[19:04:51] <bjs> novapy: the definition of a flag is an option without arguments
[19:04:52] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[19:04:55] <bjs> so yes, you can just not have it be a flag
[19:04:56] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 245 seconds)
[19:05:02] *** Quits: MootPoot (uid444585@id-444585.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[19:05:11] <bjs> an option without arguments but with arguments is just an option :P
[19:05:27] *** Joins: Knyght (sid365271@id-365271.helmsley.irccloud.com)
[19:05:30] <novapy> so what should I use?
[19:05:58] <bjs> novapy: I mean it depends, if you want a flag then use a flag if you want an option use an option. They are different things. I'm not really sure what the question is
[19:06:08] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[19:06:23] *** Joins: Sheilong (uid293653@ilkley.irccloud.com)
[19:06:29] <bjs> have you read the click documentation and tried some examples?  I think you get an idea for how you make commands and options pretty quickly
[19:07:03] *** Quits: koopman (sid466269@id-466269.ilkley.irccloud.com) (Ping timeout: 264 seconds)
[19:07:44] <novapy> What I'm wanting to do is to call my program like `feed --add link` so it adds the link to my config file, without running the feed fetcher
[19:07:59] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[19:08:08] *** Joins: angular_mike_ (sid45533@ilkley.irccloud.com)
[19:08:28] *** Joins: vitali64 (~vitali64@user/vitali64)
[19:08:32] <bennydarshan> SnoopJ: Oh... that exaplins it I suppose, I guess I'll need a different method then
[19:08:39] <bjs> novapy: take a read of the click docs, it explains what an option() is and how to use them quite well https://click.palletsprojects.com/en/8.0.x/options/
[19:08:50] *** Quits: Sheilong (uid293653@ilkley.irccloud.com) (Max SendQ exceeded)
[19:09:04] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[19:09:09] <novapy> bjs: I did read it, and I remember seeing something like a enthusiastic option or something like that...
[19:09:33] <bjs> novapy: what?
[19:09:36] *** Quits: angular_mike_ (sid45533@ilkley.irccloud.com) (Max SendQ exceeded)
[19:10:28] *** Joins: pax_os__ (uid535114@ilkley.irccloud.com)
[19:10:42] *** Joins: koopman (sid466269@ilkley.irccloud.com)
[19:10:50] *** Joins: angular_mike_ (sid45533@ilkley.irccloud.com)
[19:11:01] *** Joins: Sheilong (uid293653@ilkley.irccloud.com)
[19:11:06] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::3)
[19:11:08] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 250 seconds)
[19:11:12] <SnoopJ> bennydarshan, is the build chain stuff running on your machine an intolerable nuisance? Like I said, it does *not* build the package.
[19:11:13] *** daniel3 is now known as daniel2
[19:11:28] <SnoopJ> It's just doing some busywork as if it were going to do so
[19:11:37] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-199.dsl.bell.ca)
[19:11:41] <SnoopJ> (this almost seems like it has the makings of a feature request)
[19:11:50] *** Joins: MootPoot (uid444585@ilkley.irccloud.com)
[19:11:50] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[19:11:53] <bjs> novapy: you just add an @click.option("--link") and do the same thing as --version, if --link (is not None) then do the linking and then return
[19:12:18] *** Quits: vitali64 (~vitali64@user/vitali64) (Client Quit)
[19:12:35] <bennydarshan> SnoopJ: Well it simply indicates that a c++ compiler is missing, so it might just be checking for that?
[19:12:37] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 250 seconds)
[19:12:42] *** Joins: Sadale (~Sadale@user/sadale)
[19:12:45] *** Joins: junebug (~junebug@2600:1700:3db0:2540:11d6:6b43:33af:a788)
[19:12:49] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[19:12:51] <SnoopJ> bennydarshan, does it not download the sdist?
[19:13:14] *** Joins: Fiji (~Fiji@user/fiji)
[19:13:33] <bennydarshan> It hasn't yet it seems
[19:13:46] *** Quits: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it) (Quit: Leaving)
[19:13:49] <SnoopJ> hrm
[19:13:50] *** Quits: odoood (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 260 seconds)
[19:13:56] *** Joins: resmo (~resmo@2a00:d420:9:8a00:ea66:c398:9dde:b199)
[19:14:42] *** Joins: hqdruxn08_ (~hqdruxn08@user/hqdruxn08)
[19:15:17] <SnoopJ> bennydarshan, how sophisticated are your requirements? pypi.org/simple is pretty simple as the name suggests, so you could conceivably grab the sdists you need that way if you knew which ones you wanted (i.e. you don't have to write your own dependency resolver)
[19:16:07] <bennydarshan> Yeah, I suppose that is the vaiable solution, wanted to verify that something like that doesn't already exist :) thank you so much for your help SnoopJ!
[19:16:11] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[19:16:29] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[19:16:29] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[19:16:46] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (Ping timeout: 250 seconds)
[19:16:53] *** Joins: hqdruxn08__ (~hqdruxn08@user/hqdruxn08)
[19:17:03] <SnoopJ> bennydarshan, poking around in pip's issues on GitHub it seems like the maintainers are aware of it and open to some growth in this direction. This issue looks most relevant and links to several others: https://github.com/pypa/pip/issues/10589
[19:17:39] <bancroft> bjs: I'll need to rewrite probably, thanks
[19:17:57] *** Joins: zaquest (~notzaques@5.130.79.72)
[19:18:36] <bennydarshan> SnoopJ: yeah, it seems like the bottom line there is to use the repo api... so I'll try to dig into doing that. Thanks!
[19:19:14] <SnoopJ> bennydarshan, oh, actually... try with --no-build-isolation.
[19:19:20] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[19:19:38] <SnoopJ> that seems to skip this other step for me
[19:19:56] *** Quits: XV8 (~XV8@2601:5cb:c001:50:f81d:9eae:67e3:1b35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:20:45] <SnoopJ> bennydarshan, --no-use-pep517 appears to have the same effect and is probably more appropriate
[19:20:51] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 250 seconds)
[19:20:59] *** Joins: mat001 (~mat001@213.143.69.121)
[19:21:03] <bjs> bancroft: if you just have 1 big command then all the code will have to go inside the command
[19:21:35] *** Quits: sawk (~quassel@5.170.141.127) (Ping timeout: 256 seconds)
[19:21:46] <bjs> bancroft: click excels at building git-like interfaces. With separate sub-commands with their own sets of arguments. `git commit` and `git --version` and `git remote add` etc
[19:21:55] *** Joins: sawk (~quassel@5.170.140.237)
[19:22:24] <bennydarshan> SnoopJ: it still looks for the c++ compiler, so the build does take place still...
[19:22:24] <bancroft> bjs: about the mypy typing?
[19:22:29] <bjs> Oops
[19:22:34] <bjs> I meant ot ping novapy
[19:22:35] *** Quits: hqdruxn08__ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 250 seconds)
[19:22:37] <bjs> sorry
[19:22:54] <bancroft> lol! all good
[19:22:57] <bjs> novapy: click excels at building git-like interfaces. With separate sub-commands with their own sets of arguments. `git commit` and `git --version` and `git remote add` etc
[19:23:06] <bancroft> <3 click btw
[19:23:27] <bancroft> click and attrs are bae
[19:23:28] <bjs> bancroft: Yes, you'll have to redesign, at least re-design the type signatures.
[19:23:36] <SnoopJ> bennydarshan, hmm, maybe those dependencies are already satisfied in my outer environment, then.
[19:24:01] <bennydarshan> Yeah, that might be the case, because I'm using a clean docker as the base...
[19:24:24] *** Joins: panella32 (~panella32@154.6.22.12)
[19:24:33] <bjs> novapy: the further away from that kind of interface you get, the more logic you will have to build yourself inside the command()s
[19:24:42] <varaindemian> SnoopJ: thx, do I really need that `if __name__ == "__main__":`?
[19:25:10] <SnoopJ> bennydarshan, if you can share the output of `pip download -vvv --no-deps --no-binary=:all: --no-use-pep517 yourpkg` I would be happy to take a look and see if I can suss out some more information
[19:25:10] <varaindemian> can't I just run the script with `python3 my _script.py arg1`?
[19:25:26] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[19:25:32] <SnoopJ> varaindemian, it's not strictly necessary, but it's a good idea.
[19:25:46] <SnoopJ> It won't work if the argument is "something.py" though, because that's not how imports work.
[19:25:57] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[19:26:18] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[19:26:58] <bennydarshan> Now I'm getting disabling pep517 is invalid, project does not have setup.py
[19:27:11] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:27:12] <lola> bjs: ok I finally manage to fix it Cheers :)
[19:27:39] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[19:27:40] *** Joins: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com)
[19:27:49] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[19:28:13] <varaindemian> SnoopJ: got the following error:
[19:28:21] <varaindemian> https://www.irccloud.com/pastebin/GJNqt4WT/
[19:28:22] <SnoopJ> bennydarshan, hmm, that's unfortunate. How about: `pip download -vvv --no-deps --no-binary=:all: --no-build-isolation yourpkg` ?
[19:28:46] <SnoopJ> varaindemian, is `monitorr` with two 'r's a typo?
[19:28:51] <lola> could one use all as a way to pass all variables from that function?
[19:28:59] <lola> to a diferent funtion?
[19:29:01] <varaindemian> SnoopJ: it's not a typo
[19:29:08] <SnoopJ> varaindemian, I don't have any advice for you, then.
[19:30:49] <novapy> lola: what are you trying to do?
[19:30:50] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:18fd:c3b6:aec4:7a02) (Remote host closed the connection)
[19:31:03] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 250 seconds)
[19:31:05] <lola> nothing it worked
[19:31:09] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:18fd:c3b6:aec4:7a02)
[19:31:10] <lola> passing the argument
[19:31:42] <lola> I was just wondering if one could pass all variables invoqued in a specific function
[19:31:49] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:31:56] <lola> or one would need to manual introduce all needed arguments?
[19:32:12] <lola> ^^"could one use all as a way to pass all variables from that function?
[19:32:12] <lola> to a diferent funtion?"
[19:32:19] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:32:23] <lola> so like "all"
[19:32:30] <lola> f(all)
[19:32:32] *** Joins: cul8r (~cul8r@2601:8c3:4000:b0d0::e65c)
[19:32:44] <novapy> but to a different function?
[19:32:46] <lola> intead of f(a,b,c,d,etc,...)
[19:33:00] <lola> novapy: yes
[19:33:04] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Quit: Leaving)
[19:33:04] <varaindemian> SnoopJ: your script works as expected indeed. I even tried to add the path to that python file/module using `sys.path.append("path_to_module")`
[19:33:11] <lola> so main()
[19:33:12] <lola> f(all)
[19:33:19] <lola> def f(all)
[19:33:26] <lola> instead of
[19:33:32] <lola> def main()
[19:33:48] <lola> f(a,b,c,d,etc,...)
[19:34:02] <lola> def f(a,b,c,d,etc,...)
[19:34:16] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-199.dsl.bell.ca) (Ping timeout: 256 seconds)
[19:34:17] <lola> ! f(a,b,c,d,etc,...) != f(all)
[19:34:26] <novapy> lola: if you use def f(all), it will just create a funtion with which uses the variable all, but that can only be used in the scope off ()
[19:34:31] <lola> if you know what I mean
[19:34:56] <lola> novapy: indeed, thanks that was my question
[19:35:09] <novapy> you want f to inherit the values of main()?
[19:35:19] <lola> if one could use "all" to use all invoqued variables as arguments
[19:35:28] <lola> novapy: yeah
[19:35:45] <novapy> you might want to look into classes then
[19:35:45] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:18fd:c3b6:aec4:7a02) (Ping timeout: 256 seconds)
[19:35:50] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[19:35:54] <novapy> rather than functions
[19:36:11] <novapy> but you'll need both to work with python
[19:36:42] *** Joins: bluedust_ (~bluedust@185.206.227.142)
[19:36:50] *** Quits: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[19:37:25] *** Joins: Z-cat_ (~Z-cat@128-69-59-125.broadband.corbina.ru)
[19:37:41] *** Joins: mekhami (~mekhami@2603-8080-1201-1400-581f-0234-dfa5-dae2.res6.spectrum.com)
[19:37:49] *** SoniEx2 is now known as Soni
[19:38:08] <lola> why would classes be more usefull?
[19:38:12] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[19:38:28] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:38:37] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[19:38:46] <novapy> Classes have their own methods and they have inheritance
[19:38:50] <mekhami> i've just started a new job and I'm curious about something I saw. They have a class with a method in it whose function signature looks like: def run_thing(self, *, object_id, verbose=True) something like that. I know the * operator collects any other positional arguments, but I'm curious about why that would be used here, and how that would work with a positional argument being passed at the end
[19:38:52] <mekhami> etc
[19:39:17] <mekhami> is that just a matter of looking at the base class and how it's handling passing arguments? maybe the base class is calling this method with several positional arguments that are used in the base class?
[19:39:33] <waynew> when `*` doesn't appear with a parameter name it actually requires every argument after it to be a keyword-only argument
[19:39:51] *** Joins: Barones (~Barones@user/Barones)
[19:39:53] *** Quits: bluedust (~bluedust@117.222.188.38) (Ping timeout: 252 seconds)
[19:39:53] <mekhami> that's... not happening here, so I don't think that's true
[19:39:56] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[19:40:05] <waynew> so `def fnord(*all_the_args)` means that you can call `fnord(1,2,3)`
[19:40:06] <novapy> lola: Would you mind sharing what exactly you are trying?
[19:40:06] <mekhami> or, if it is true, soemthing else weird is happening
[19:40:26] <waynew> `def fnord(*, all, the, args)` means you cannot call it like `fnord(1,2,3)`
[19:40:29] <lola> novapy: how is that diferent from a function within a function, just the "inheritance" bit?
[19:40:29] <waynew> you'll get an error
[19:40:30] *** Quits: Guest2819 (~lastshell@ip68-104-107-93.lv.lv.cox.net) (Ping timeout: 256 seconds)
[19:40:37] *** Joins: johnjaye (~pi@173.209.65.233)
[19:40:45] <grym> mekhami: def foo(theobviousthing, *, option, option2) _compels_ the use of keyword arguments for option and option2
[19:40:50] <waynew> `fnord(all=1, the=2, args=3)` is how you have to call it
[19:40:53] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-105.dsl.bell.ca)
[19:41:06] <lola> novapy: I not trying anything is just a question, in order to understand better how python works
[19:41:07] <grym> mekhami: so foo(1,2,3) is impossible; foo(1, option=1, option2=3) works
[19:41:28] *** Joins: ivii (~ivan@user/ivii)
[19:41:36] <grym> it's more verbose, but it's a lot more clear
[19:41:38] <mekhami> grym: okay so that may be what is happening then, and that's fine. then, i'm really just curious about the motivation
[19:41:39] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[19:41:51] <waynew> it allows you the ability to not provide a default argument (i.e. verbose=True) in your case, but forces the keyword
[19:41:55] <novapy> lola: You cannot define a function within a function, the unique advantage of classes it having the special self argument
[19:42:08] <grym> mekhami: well, what does foo(image,12, [512,254], (255,255,0,100),"bar",True) do
[19:42:15] <grym> mekhami: (because i have no idea!)
[19:42:19] <ivii> Does anyone have experience with ProcessPoolExecutor? When I run submit the main thread is still blocked
[19:42:30] *** Joins: Guest2819 (~lastshell@user/lastshell)
[19:42:33] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[19:42:33] <bennydarshan> SnoopJ: ix.io/3Orw
[19:42:33] <ivii> executor.submit() *
[19:42:35] <lola> novapy: sure
[19:42:40] <grym> mekhami:neither do i know on inspection why  foo(image,[512,254],12,  (255,255,0,100),"bar",True) is wrong
[19:42:41] <waynew> mekhami: consider the following `do_something(5, 3, 2)`. Or gryms example :)
[19:42:45] * lola goes look up what a class is
[19:42:57] <waynew> it's not clear at all what either of those things do
[19:43:13] <lola> "You cannot define a function within a function" why is that? seams a usefull thing for me
[19:43:20] <jinsun__> mekhami: forcing keyword only allows your to shuffle your args order without breaking code too
[19:43:23] <waynew> but if I give you `do_something(height=5, width=3, length=2)` you're going to at *least* have an inkling of what's happening
[19:43:28] <lola> well maybe then struture would be a bit confusing
[19:43:33] <grym> it's easy to fatfinger an inversion of *args order, it's nice to read the names of the magic integers you're passing, ...
[19:43:36] <grym> etc
[19:43:39] *** Quits: panella32 (~panella32@154.6.22.12) (Quit: Textual IRC Client: www.textualapp.com)
[19:43:41] *** Joins: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net)
[19:43:43] <waynew> lola: you can
[19:43:52] <NoImNotNineVolt> novapy: you can totally define a function within a function
[19:44:00] * waynew wonders where you read that (:
[19:44:11] <grym> i'm very fond of `def foo(the_obvious_thing, *, ...)` if the number of things i want as kwargs only is > 2
[19:44:31] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:44:37] *** Joins: bluedust (~bluedust@117.222.188.38)
[19:44:38] <grym> and generally speaking, just kind of always...
[19:44:39] <waynew> oh. Yeah, in the middle of my other discussion :D - yeah, can definitely do that. Otherwise decorators wouldn't work
[19:44:44] *** Z-cat_ is now known as Z-cat
[19:44:49] *** Quits: Z-cat (~Z-cat@128-69-59-125.broadband.corbina.ru) (Changing host)
[19:44:49] *** Joins: Z-cat (~Z-cat@user/z-cat)
[19:44:53] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:44:58] * waynew is the same - keywords *all* the time
[19:45:01] <redsith> Does anyone know how to change the state of a pyqt widget to be selected on click?
[19:45:13] <FunkyELF> is it okay to mix abstract base classes and dataclasses?  One is done as inheritance, the other done as a decorator
[19:45:36] <waynew> I can tell you that I've never seen someone mismatch arguments when it's keyword arguments, and I've seen at least a half-dozen times where arguments have gotten mismatched just based on order
[19:45:45] <lola> 👍️
[19:45:49] *** Quits: pyevery__ (~pyeveryth@c-73-38-4-158.hsd1.ma.comcast.net) (Remote host closed the connection)
[19:45:57] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-105.dsl.bell.ca) (Ping timeout: 256 seconds)
[19:46:09] <NoImNotNineVolt> i think the solution there is to provide arguments in the correct order.
[19:46:13] <mekhami> grym: waynew: it seems to me that the motivation here is to enforce that subclasses using this method can only specify additional keyword arguments, and the baseclass is doing stuff with positional arguments that cannot be altered?
[19:46:15] <NoImNotNineVolt> easy fix :P
[19:47:03] <jinsun__> mekhami: no, subclasses can do whatever they want, the motivation has nothing to do with classes
[19:47:17] <waynew> agreed ^
[19:47:30] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Remote host closed the connection)
[19:47:33] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[19:47:34] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[19:47:35] <grym> mekhami: for your codebase, i have no idea; in general, no, i use this for module-level functions all the time and avoid inheritance, generally
[19:47:39] <novapy> NoImNotNineVolt: It would appear I'm wrong
[19:47:42] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[19:47:58] *** Quits: bluedust_ (~bluedust@185.206.227.142) (Ping timeout: 250 seconds)
[19:47:58] <waynew> mekhami: your subclass can completely do whatever the heck they want with that function name, including `def do_something(self, haha, now, positional, args, only):`
[19:47:59] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[19:48:07] <grym> i'm future proofing against my own stupidity, basically
[19:48:19] <novapy> not sure why you would want to define functions with functions though?
[19:48:22] <grym> in three weeks i will not remember my argument order, and i should never have to anyway, so now i don't
[19:48:36] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-50-65-93-192-46.dsl.bell.ca)
[19:48:53] <lola> novapy: why would you want to use clasess :P
[19:48:53] <SnoopJ> bennydarshan, that didn't download grpcio-1.36.1.tar.gz ?
[19:49:24] <bennydarshan> SnoopJ:  I don't see it in the target directory, no
[19:49:31] <novapy> lola: one second
[19:49:33] <waynew> novapy: look up closures and decorators
[19:49:39] <bennydarshan> It seems like nothing was downloaded to be honest
[19:50:01] <varaindemian> SnoopJ: so basically this is what I am trying to do:
[19:50:03] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[19:50:08] *** Quits: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[19:50:10] *** Quits: redsith (~user@45.81.189.55) (Read error: Connection reset by peer)
[19:50:15] <SnoopJ> bennydarshan, hmm, indeed, I can reproduce that if I move my c++ symlink. I guess that's the nail in the coffin for using pip-download for the time being.
[19:50:22] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:50:23] <lola> "not sure why you would want to define functions with functions though?" > " novapy  why would you want to use clasess :P"
[19:50:53] <varaindemian> https://www.irccloud.com/pastebin/ZUek7o0t/
[19:51:09] <bennydarshan> SnoopJ: Yeah, I think that scarping files from the repository myself will be the way to go.
[19:51:25] *** Joins: paul424 (~tom@apn-95-41-176-85.dynamic.gprs.plus.pl)
[19:51:25] <varaindemian> does it make sense?
[19:52:10] <paul424> Hello, hello, I tried to install pygame for VSC with pip install
[19:52:15] *** Joins: Fiji_ (~Fiji@user/fiji)
[19:52:19] *** Joins: redsith (~redsith@45.81.189.55)
[19:52:22] <paul424> on one machine with Windows 10 it works fine , on the other it doesn't
[19:52:27] <paul424> why it;s so whimpsy then ?
[19:52:34] <paul424> whimsy ?
[19:53:08] <SnoopJ> bennydarshan, you could also do `pip index versions -vv somepkg | grep -i "found link"`, but note that `index` is experimental and using -vv is cheating anyway :)
[19:53:15] <SnoopJ> paul424, share the complete error report
[19:53:38] <novapy> lola: making an example to show you
[19:53:41] *** Joins: jim87 (~quassel@93.55.249.30)
[19:53:43] <paul424> SnoopJ, how do I get it ?>
[19:53:55] <bennydarshan> SnoopJ: Hehe, I don't mind cheating if it means I have to work less hard myself ;) Thanks for the tip!
[19:53:56] <lola> no worries
[19:54:08] <paul424> complete is pip installs and the pygame is not recognizable as module in VSC
[19:54:34] *** Quits: bluedust (~bluedust@117.222.188.38) (Remote host closed the connection)
[19:54:38] <jinsun__> paul424: https://code.visualstudio.com/docs/python/environments
[19:54:40] <SnoopJ> paul424, oh, I see. sounds like VS Code on the machine where it doesn't work isn't aware of wherever you installed pygame,j then.
[19:54:51] <SnoopJ> s/,j/,/
[19:54:59] <lola> you said to use clasees instead of a function inside a function, given that wasnt a possibility, now it seams it is so there isnt a need for classes any longer
[19:55:03] *** Joins: argument (~0ptions@90.249.16.86)
[19:55:03] *** Quits: argument (~0ptions@90.249.16.86) (Changing host)
[19:55:03] *** Joins: argument (~0ptions@user/argument)
[19:55:03] <jinsun__> paul424: make sure that vscode is using the same environment where you installed the package
[19:55:07] <lola> novapy:
[19:55:08] *** Joins: Adoi (~Adoi@user/adoi)
[19:55:31] <novapy> lola: You'll see in a sec
[19:55:34] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Remote host closed the connection)
[19:55:35] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[19:55:35] <lola> "you said to use clasees instead of a function inside a function, given that wasnt a possibility, now it seams it is so there isnt a need for classes any longer"
[19:55:41] <lola> sure
[19:55:57] <lola> no worries have your time, no rush
[19:56:30] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[19:56:53] *** Joins: hqdruxn08_ (~hqdruxn08@user/hqdruxn08)
[19:56:59] <bennydarshan> SnoopJ: to get that feature I should build pip from git?
[19:57:51] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[19:58:00] <SnoopJ> bennydarshan, no, it's in recent releases. Just note that you get no guarantees about whether it'll change/disappear going forward
[19:58:11] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[19:58:57] <SnoopJ> which is not really here nor there since -vv is a hack in the first place
[19:59:19] *** Quits: glider (~glider@user/glider) (Quit: ZNC 1.9.x-git-111-f2cdc3db - https://znc.in)
[19:59:20] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (Quit: bye)
[19:59:28] <SnoopJ> looking for "found link" will work with verbose output of other pip commands, index just happens to be a convenient one to use here
[19:59:30] <FunkyELF> Is it possible to have a lazily computed module attribute?
[19:59:33] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-50-65-93-192-46.dsl.bell.ca) (Ping timeout: 256 seconds)
[19:59:34] <SnoopJ> FunkyELF, yea
[19:59:42] <paul424> SnoopJ, jinsun__ oki thanks , I will return to that tomorrow ....
[19:59:52] <SnoopJ> FunkyELF, you can define __getattr__ for a module and it's sometimes (rarely) meaningful to do so
[20:00:06] <jinsun__> SnoopJ: what does -vv do? verbose?
[20:00:17] <SnoopJ> jinsun__, yea, it's a verbosity flag that can be repeated
[20:00:35] <jinsun__> okay why is that hack?
[20:00:56] <SnoopJ> jinsun__, because the stuff in the log isn't really public API
[20:00:58] *** Quits: hqdruxn08 (~hqdruxn08@user/hqdruxn08) (Ping timeout: 260 seconds)
[20:00:59] *** Joins: sharksauce (sharksauce@user/sharksauce)
[20:01:05] *** Joins: Fiji- (~Fiji@user/fiji)
[20:01:12] *** Quits: Fiji- (~Fiji@user/fiji) (Remote host closed the connection)
[20:01:25] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[20:01:29] <SnoopJ> as hacks go, it errs on the side of "this probably won't break" but it *is* a hack :)
[20:01:32] *** Joins: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com)
[20:01:43] <jinsun__> ah okay, so internal stuff in addition to experimental command
[20:01:44] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:01:51] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:c1ad:5567:c947:cef7)
[20:02:17] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:18fd:c3b6:aec4:7a02)
[20:02:49] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[20:03:05] <FunkyELF> SnoopJ: if it were on a class it'd be decorated with @functools.cached_property, but I want it at the module level... basically, to return the lines of a large file.  Makes sense to leave in memory though.
[20:03:45] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (Ping timeout: 250 seconds)
[20:03:56] *** Quits: paul424 (~tom@apn-95-41-176-85.dynamic.gprs.plus.pl) (Quit: Leaving)
[20:04:06] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[20:04:14] <FunkyELF> I could leave it as a module level function decorated with @functools.cache() but then I couldn't access it like an attribute, I'd be calling it with parenthesis all the time
[20:04:22] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[20:04:35] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[20:04:37] *** Joins: Vonter (~Vonter@user/vonter)
[20:04:53] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[20:05:01] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[20:05:04] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:a529:1406:bd3:aa5d)
[20:05:04] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:a529:1406:bd3:aa5d) (Changing host)
[20:05:04] *** Joins: skapata (~Skapata@user/skapata)
[20:05:15] *** Quits: _sgen (~sgen@2607:fea8:7ce1:c8e0:ec63:8eee:4635:2aa8) (Quit: Leaving)
[20:05:27] <novapy> lola: almost done
[20:05:30] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:f141:ba0b:da0:3c4d)
[20:05:34] *** Joins: glider (~glider@user/glider)
[20:05:40] <lola> no worries
[20:05:42] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:f141:ba0b:da0:3c4d) (Read error: Connection reset by peer)
[20:05:43] <lola> thanks by the way
[20:05:54] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:f141:ba0b:da0:3c4d)
[20:06:55] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:18fd:c3b6:aec4:7a02) (Ping timeout: 256 seconds)
[20:07:03] <jinsun__> FunkyELF: you could do it the cached_property way and store an instance of the class in the module maybe, then do module.inst.prop to access it
[20:07:34] <novapy> lola: here https://bpaste.net/ZQRQ
[20:07:40] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[20:08:06] <lola> novapy: can you use bpa.st so I dont need to audit that
[20:08:12] <lola> cheers
[20:08:22] <novapy> lola: wym?
[20:08:27] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-69-77.poda.cz) (Quit: Leaving)
[20:08:27] *** Quits: sawk (~quassel@5.170.140.237) (Remote host closed the connection)
[20:08:34] <jinsun__> lola: it is the same site
[20:08:35] <lola> or paste.debian.net if you perfer
[20:08:49] <jinsun__> bpaste.net just redirects to bpa.st
[20:09:02] <novapy> lola: ^
[20:09:11] *** Quits: redsith (~redsith@45.81.189.55) (Ping timeout: 256 seconds)
[20:09:23] <lola> yes exactlt please use bpa.st
[20:09:36] <lola> or paste.debian.net
[20:09:40] <lola> Cheers
[20:09:46] <novapy> i cannot, sorry
[20:10:25] <lola> no woories
[20:10:29] <lola> Cheers
[20:10:38] <novapy> I'm only using CLI right now, I have no gui, and can't use a browser
[20:10:39] * lola will be back another time
[20:10:47] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-37-70-24-250-112.dsl.bell.ca)
[20:10:51] <varaindemian> anyone?
[20:11:07] <SnoopJ> FunkyELF, jinsun__ https://bpa.st/LNXQ
[20:11:11] <varaindemian> https://www.irccloud.com/pastebin/ZUek7o0t/ is it doable?
[20:11:25] *** Quits: Deneb (~johnch@23.143.9.51.dyn.plus.net) (Quit: Leaving)
[20:11:28] <novapy> lola: what's your issue with bpaste?
[20:11:59] *** Quits: elena_re (~elena@213.194.126.155) (Quit: Konversation terminated!)
[20:12:45] <novapy> lola: https://bpa.st/ZQRQ
[20:12:54] <jinsun__> SnoopJ: why that globals() thing?
[20:13:25] *** Quits: Pseudocr1 (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[20:13:30] *** Joins: elena_re (~elena@213.194.126.155)
[20:13:32] <SnoopJ> jinsun__, I think that's a mistake on my part now that you mention it
[20:13:54] <lola> Iyes novapy I see it
[20:13:58] <SnoopJ> I think it should probably be `raise AttributeError`
[20:14:35] *** Quits: elena_re (~elena@213.194.126.155) (Client Quit)
[20:14:49] *** Joins: f1se4 (~f1se4@213.195.113.45)
[20:14:53] <lola> novapy: why wouldnt you be able to do this whith functions?
[20:14:53] *** Joins: elena_re (~elena@213.194.126.155)
[20:15:01] <jinsun__> yeah, it enters getattr if it cannot find the attribute normally
[20:15:13] <jinsun__> so it won't be there in globals() too most likely
[20:15:16] <SnoopJ> yep, I goofed on that
[20:15:19] <novapy> lola: look at the developer class
[20:15:28] <lola> sure
[20:15:29] <lola>  yes
[20:15:39] <lola> ohh
[20:15:40] <novapy> is there any code in it?
[20:15:42] *** Quits: maxzor (~maxzor@laubervilliers-657-1-70-103.w90-63.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[20:15:42] *** Joins: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net)
[20:15:44] <lola> "pass?"
[20:16:03] <novapy> pass is a filler which does nothing
[20:16:13] *** Quits: callq (~callq@2409:4062:2e9e:2081:73:e6d7:2365:394e) (Quit: callq)
[20:16:42] <lola> why is class Developer(Employee):
[20:16:42] <lola>     pass necessary then?
[20:17:14] <novapy> but if you look, Developer and Engineer both inherit Employee's raise_pay() function
[20:17:18] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[20:17:34] <novapy> lola: pass is necessary so you don;t get a syntax error
[20:18:28] <lola> how is Developer conected to employee though?
[20:18:57] <lola> Developer doesnt seam to be defines :s
[20:19:01] <novapy> when the class is defined: `class Developer(Employee):`
[20:19:05] <lola> *defines=defined
[20:19:21] <lola> ohhh I seee
[20:19:31] <lola> Employee is used as a argument
[20:19:37] <novapy> no
[20:19:38] <lola> on developer class
[20:19:39] <NoImNotNineVolt> lol @ employee.raise_pay()
[20:20:01] <novapy> its extending the employee class
[20:20:26] <lola> yes that is what I said
[20:20:27] <lola> its usefull
[20:20:34] <novapy> yea
[20:20:38] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[20:20:40] <lola> I understand you point about classes now
[20:20:58] <novapy> lola: Do you ever use python in interactive mode?
[20:21:04] *** Quits: newdimension (~newdimnes@user/newdimension) (Read error: Connection reset by peer)
[20:21:11] <lola> intead of rewriting Developer the same as Employee
[20:21:32] <lola> I bet there is more eficient way to do this without classes though
[20:21:48] <novapy> why do you think that?
[20:22:10] <lola> if functions would be used both Emploee and developer would use the same function
[20:22:20] <NoImNotNineVolt> that's what's happening here.
[20:22:21] <lola> and then is just a matter of presenting the information
[20:22:33] <NoImNotNineVolt> they both use the same function.
[20:22:38] <lola> NoImNotNineVolt: function != class
[20:22:48] <NoImNotNineVolt> lola: that's correct. they don't both use the same class.
[20:23:02] <NoImNotNineVolt> lola: they use different classes, but share the same raise_pay function.
[20:23:03] <lola> but let me put in other words
[20:23:16] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-37-70-24-250-112.dsl.bell.ca) (Ping timeout: 245 seconds)
[20:23:17] <lola> why not use function
[20:23:28] <lola> for raise_pay
[20:23:30] <lola> with diferent arguments
[20:23:30] <NoImNotNineVolt> because then you have to explicitly define which functions your objects have.
[20:23:32] <NoImNotNineVolt> and that's annoying.
[20:23:38] <lola> seams more much eficient
[20:23:41] <NoImNotNineVolt> it's much easier to group sets of functions into classes.
[20:23:51] <NoImNotNineVolt> it's only more efficient if your class has only a single function.
[20:23:57] <NoImNotNineVolt> but most classes have many functions.
[20:24:06] <novapy> however, you would have to paste all the code in employee to developer, and engineer, and so on to get the same results
[20:24:07] <NoImNotNineVolt> and it's easier to inherit from a single class than to define a large number of functions.
[20:24:59] *** Joins: mat001 (~mat001@213.143.69.121)
[20:25:08] <NoImNotNineVolt> e.g. if parent_class has functions a, b, c, d, e, f, and g, it's easier to define child_class(parent_class) than to define a new object foo and set foo.function_a = a; foo.function_b = b; foo.function_c = c; etc.
[20:25:10] <lola> not really > "owever, you would have to paste all the code in employee to developer, and engineer, " just use main function and then printmessages to customize it to developer and employee
[20:25:14] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:ce9b:72d3:193b:3816) (Ping timeout: 260 seconds)
[20:25:40] <lola> you could even add a argument for pay_raise so said function is alterable
[20:25:43] <NoImNotNineVolt> look, if you think you've found a neater way of doing this than with inheritance, then you should share an example.
[20:25:45] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[20:25:46] <NoImNotNineVolt> but it's unlikely.
[20:26:03] <novapy> lola: again, notice how Developer has all the same functionality as Employee, but without much code at all
[20:26:12] * lola ignore NoImNotNineVolt on IRC
[20:26:19] <lola> do not appreciate egomania
[20:26:24] <NoImNotNineVolt> lol
[20:26:45] <NoImNotNineVolt> /me is the emote command. you're thinking of the /ignore command.
[20:26:48] <lola> novapy: sure but why would you need to have duplicated code?
[20:26:59] <lola> why not just use a central function
[20:27:13] <lola> and then print according to necessary implementations?
[20:27:18] *** Quits: lllh (~llh@198.48.244.21) (Quit: :::: ( UPP ) ::::)
[20:27:18] <NoImNotNineVolt> lola: i just explained why that's more verbose in all but the most trivial case.
[20:27:24] <novapy> lola: He's actually right though, however it really depends on what you need to do in you project
[20:27:25] <NoImNotNineVolt> and shared an example demonstrating this.
[20:27:41] <novapy> lola: less code > more code
[20:27:57] <lola> I cannot see "he's"
[20:28:08] <lola> "he's" is ignored
[20:28:12] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:28:17] <lola> dont appreciate arrogance
[20:28:21] * novapy Facepalm
[20:28:27] <NoImNotNineVolt> good luck, folks
[20:28:33] <lola> regardeless geting back on topic
[20:28:42] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[20:28:43] <NoImNotNineVolt> coming to a python help channel to ignore help
[20:28:44] * NoImNotNineVolt shurgs
[20:28:45] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[20:29:02] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:29:03] <lola> why would classes be necessary on this cenario?
[20:29:23] *** Joins: mat001 (~mat001@72.28.108.216)
[20:29:29] <lola> why cant you have a main function with functionality? and then print according to main argument
[20:29:38] <lola> for pay_raise
[20:29:54] <NoImNotNineVolt> classes are never necessary.
[20:29:55] *** Quits: hexa- (~hexa-@juno.lossy.network) (Quit: WeeChat 3.3)
[20:29:58] <lola> so pay_raise= 1.06 for Engineer
[20:30:01] <bjs> lola: classes are never *necessary*. You can do exactly that.
[20:30:15] <lola> ok
[20:30:19] *** Quits: junebug (~junebug@2600:1700:3db0:2540:11d6:6b43:33af:a788) (Quit: Leaving)
[20:30:23] <NoImNotNineVolt> bjs: the arrogance! :P
[20:30:25] <lola> it just seams unecessary bloat
[20:30:32] <bjs> lola: classes?
[20:30:34] <NoImNotNineVolt> lola: i remember my first program.
[20:31:02] <lola> isnt classes a much more highlevel python feature?
[20:31:08] <bjs> lola: yes
[20:31:13] *** Joins: qlixed (~qlixed@181.44.129.13)
[20:31:14] * lola needs to read more about classes
[20:31:20] <lola> though
[20:31:23] *** Joins: hexa- (~hexa-@juno.lossy.network)
[20:31:29] <novapy> You're asking, why not do something like this: https://bpa.st/B7NQ
[20:31:33] <bjs> they're an important part and useful part of Python,  but you can program without writing any classes happily
[20:31:38] *** Quits: vladoski (~vladoski@93-36-219-239.ip62.fastwebnet.it) (Remote host closed the connection)
[20:31:39] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[20:31:52] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-151.dsl.bell.ca)
[20:32:14] <lola> exactly novapy
[20:32:21] * lola unignores NoImNotNineVolt now
[20:32:43] *** Quits: revolve (~u0_a227@82-132-236-173.dab.02.net) (Read error: Connection reset by peer)
[20:32:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:33:15] <novapy> You could do that, and for the example, that might be better, however, what if you have a class with 5 functions?
[20:33:21] <NoImNotNineVolt> what an abbrasive fellow.
[20:33:28] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[20:33:34] <NoImNotNineVolt> -b\
[20:34:11] <lola> bjs: seams like a unecessary complexity raiser, not to speak about increased atack surface by rellying on a unecessary higherlevel feature
[20:34:34] <bjs> lola: it's hard to explain how, where and why you want to use classes;  but I think almost every programmer eventually agrees by the time you're writing programs that are tens, or hundreds of thousands or even millions of lines of Python you basically *need* something like classes to be able to manage the sheer amount of complexity in the data
[20:34:34] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[20:34:46] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[20:34:47] <lola> NoImNotNineVolt: abbrasion not intended, remeber said "abbrasiveness" was started by your own self ;)
[20:34:49] <SnoopJ> does anybody know what pip does with a pyproject.toml that doesn't define the [build-system] table? This is in the presence of a setup.py, it _seems_ like it just tries to use setuptools
[20:35:09] <SnoopJ> But the log mentions PEP 517 too so it doesn't seem like it is just ignoring the file.
[20:35:55] <lola> bjs: ok I can see that, is probably a sign people dont really understand the codebase no? or at least dont control it I would assume
[20:36:07] <lola> novapy: thanks a lot for your examples though
[20:36:11] *** Quits: ozoned (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 245 seconds)
[20:36:14] <bjs> lola: not really
[20:36:19] <lola> I will defenately read much more about classes
[20:36:25] <novapy> lola: yw
[20:36:36] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:36:45] <lola> "yw"? irelativism didnt understood that.
[20:37:03] <lola> bjs: why not really?
[20:37:08] <novapy> your welcome
[20:37:17] <lola> ohhh ok
[20:37:20] <lola> Cheers
[20:37:23] <bjs> lola: again I can't really explain very easily, I'm assuming you've only ever worked with code bases that aren't very "big"?
[20:37:26] <lola> trully appreciated
[20:37:41] *** Joins: yassernasc (~yassernas@177.37.144.34)
[20:37:43] <lola> bjs: that is indeed true
[20:37:47] <lola> 500 lines max
[20:37:58] <NoImNotNineVolt> lola: it's false that i started announcing ignores and unignores in channel, but that's not really on topic here anyway. thanks.
[20:38:01] <lola> I like simple stuff though
[20:38:11] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[20:38:14] <lola> is good to try to understand stuff you use I assume
[20:38:26] <lola> or at least I wish to one day
[20:38:29] <bjs> lola: one of the purposes of classes is (paradoxically perhaps) to help you write simpler programs.
[20:38:41] <lola> I see problems with monolithic codebases though
[20:38:53] <lola> classes might be usefull for modularity
[20:38:55] <bjs> but when your program is tiny and has 3 variables it makes things more complicated rather than simple
[20:39:07] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[20:39:13] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 256 seconds)
[20:39:15] <Evolver> Is there any good way for maintaining a hybrid python-cython project with multiple modules that are compiled? It seems like a pain to compile each of the modules.
[20:39:21] <novapy> lola: best way to learn is by doing, and reading tutorials along the way; find something to do and create it
[20:39:24] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[20:40:01] <bjs> lola: have you come across dictionaries yet?
[20:40:05] <lola> NoImNotNineVolt: maybe try to not be so egocentric on your replies, and I might be more interested in what youhave to say :), no personal atack intended, phylosophicaly I just reject ego
[20:40:34] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[20:40:35] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-151.dsl.bell.ca) (Ping timeout: 256 seconds)
[20:40:49] * novapy shake head
[20:40:54] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[20:41:01] <NoImNotNineVolt> lola: good luck in your oop studies.
[20:41:34] <lola> yes novapy I have been writing redmine git remote to help replicant project migrate their wiki for that reason :) thanks for suggestion though
[20:41:56] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[20:42:03] *** Quits: yassernasc (~yassernas@177.37.144.34) (Ping timeout: 256 seconds)
[20:42:07] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[20:42:18] <lola> bjs: I heard it on cs50 lectures
[20:42:23] <lola> but didnt really understood it
[20:42:25] <bjs> lola: okay, so no
[20:42:43] <novapy> dictionaries are my favorite data type
[20:42:55] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[20:42:56] *** Joins: XV8 (~XV8@2601:5cb:c001:50:b02a:1289:ddb1:fbc8)
[20:42:59] <lola> yes no :),today I was thinking of reviweing the whole CS50 lectures though
[20:42:59] <bjs> lola: It seems you are still very early on in your journey to learn programming,  don't worry about efficiency and bloat or complexity for now then
[20:43:14] <lola> now that Im a bit more confortable with it and python
[20:43:29] <lola> and I dont need the CS50 ide anymore
[20:43:53] <lola> bjs: sorry I will allways think about such things
[20:44:03] <lola> bjs: indeed I started last week
[20:44:05] <novapy> lola: if you want, use Pycharm IDE, it has a good debugger
[20:44:09] <bjs> lola: I'm going to take a gamble that you don't actually know how to measure efficiency of programs yet
[20:44:17] <bjs> so worrying about efficiency is a bit silly
[20:44:24] <lola> when I started work on replicant migration scipts
[20:44:39] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[20:44:40] <lola> bjs: thanks for suggestion but I perfer cgit and nano
[20:44:44] <bjs> lola: as a new programmer you are going to write some very inefficient programs, and that is okay
[20:44:48] <bjs> lola: I think you meant NoImNotNineVolt
[20:44:51] <bjs> oops novapy ^
[20:45:01] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[20:45:05] <bjs> I should learn to 3-char-<Tab> not 2-char :(
[20:45:07] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[20:45:23] *** Joins: Narrat (~omnius@p2e51179b.dip0.t-ipconnect.de)
[20:45:26] <lola> also that taht IDE will never be packaged for my distribution
[20:45:29] <lola> Hyperbola.info
[20:45:31] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[20:45:40] *** Joins: killswitch (~killswitc@217-120-19-98.cable.dynamic.v4.ziggo.nl)
[20:45:42] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[20:45:54] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[20:45:57] <lola> the is some freedom issues there, so they would include it even if I package it for them
[20:46:00] <lola> ;)
[20:46:19] <lola> thanks for suggestion nontheless I just cant use it ;)
[20:46:25] <lola> bjs:
[20:46:36] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:46:48] <bjs> lola: are you talking to novapy ?
[20:46:51] <novapy> lola: it's based on java
[20:46:59] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 252 seconds)
[20:47:08] <lola> "I think you meant NoImNotNineVolt
[20:47:08] <lola> oops novapy ^" indeed
[20:47:23] <lola> novapy: yeah java will not be packaged in hyperbola
[20:47:26] <novapy> meaning you download the community edition(the free one) and run via java
[20:47:50] <lola> I dont wish to run java on m system ;)
[20:47:56] <novapy> eh, building from src is ez
[20:47:56] <lola> thanks though
[20:48:14] <lola> the problem is not about building from source
[20:48:17] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[20:48:19] <lola> is about java itself
[20:48:36] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[20:48:37] <novapy> ah, well, ok
[20:48:38] <lola> KISS(keep it simple stupid)
[20:48:42] <lola> suckless.org
[20:48:45] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[20:49:09] <novapy> you said you use nano
[20:49:10] <lola> thanks though novapy
[20:49:12] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[20:49:12] <novapy> ?
[20:49:23] <lola> yes nano and cgit
[20:50:06] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:50:16] <novapy> I use vim
[20:50:33] <lola> yes I looked into vim
[20:50:33] <SnoopJ> lola, I would recommend against the suckless philosophy if you are a beginner programmer. They are abrasive to the point that I wonder if that isn't the main point
[20:51:03] <lola> SnoopJ: beginner programmer != sysadmin
[20:51:06] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-115.dsl.bell.ca)
[20:51:16] <lola> I just took to long to learn programming
[20:51:25] <SnoopJ> lola, I don't know what that has to do with the present topic, but sure
[20:51:26] *** Joins: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com)
[20:51:29] <lola> SnoopJ: look into hyperbola.info
[20:51:41] <lola> if you wish to understand my rational
[20:51:53] <SnoopJ> I have no objection to KISS, suckless just seems like a project organized around being jerks
[20:52:00] <novapy> lola: you're a sysadmin, but you don't know any programming languages?
[20:52:06] <lola> I do agree with abrasion
[20:52:14] <lola> novapy: indeed
[20:52:18] *** Quits: cul8r (~cul8r@2601:8c3:4000:b0d0::e65c) (Remote host closed the connection)
[20:52:21] <lola> I know sh that is it
[20:52:22] <novapy> not even bash?
[20:52:30] <novapy> nvm
[20:52:31] <lola> ^^
[20:52:45] <novapy> how long have you used linux?
[20:52:49] <lola> "nvm" :s
[20:52:57] <lola> novapy: 15 years
[20:53:07] <novapy> dang
[20:53:07] *** Joins: cul8r (~cul8r@2601:8c3:4000:b0d0::e65c)
[20:53:08] <lola> I dont use "linux" btw
[20:53:35] * novapy shakes his head at arch btw people
[20:53:44] *** Joins: teut (~teut@2401:4900:1c68:dbe1:6472:470:2bf2:ff35)
[20:53:49] * NoImNotNineVolt is a recovering arch user
[20:53:55] *** Joins: Pseudocr1 (~sudo@user/pseudocrat)
[20:53:56] <lola> sysadmin is just not my only ocupation
[20:54:13] <lola> Hyperbola will become HyperbolaBSD btw
[20:54:18] <lola> so not really arch
[20:54:31] *** Quits: rsx (~dummy@ppp-188-174-155-66.dynamic.mnet-online.de) (Quit: rsx)
[20:54:48] <novapy> still, after 15 years, of *nix you never got tired of manual tasks?
[20:54:55] <NoImNotNineVolt> https://en.wikipedia.org/wiki/ArchBSD
[20:55:11] <NoImNotNineVolt> (looks defunct)
[20:55:13] *** Quits: cul8r (~cul8r@2601:8c3:4000:b0d0::e65c) (Remote host closed the connection)
[20:55:14] <lola> anyway I use UNIX based system for the philosophy not so much because I like it, Im much more pationated about my other ocupations
[20:55:19] <waynew> I've decided that I like arch because at least I have a *chance* of fixing the broken things (:
[20:55:33] <SnoopJ> Perhaps operating system discussion would fit better in ##python-offtopic ?
[20:55:35] <TML> pationated?
[20:55:37] *** Joins: cul8r (~cul8r@2601:8c3:4000:b0d0::e65c)
[20:55:47] <lola> SnoopJ: true
[20:55:52] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:55:57] <jdavfsxd> possibly passionate*
[20:56:03] <novapy> waynew: I use hacked chromebookOS
[20:56:25] *** Joins: paul424 (~tom@ip-5-172-233-149.multi.internet.cyfrowypolsat.pl)
[20:56:34] <SnoopJ> however, speaking of OS trivia... TML, I learned last night that AIX has really wacky function pointers: they don't point to the function :)
[20:56:46] *** Joins: JorgeCastro[m] (~jcastroma@2001:470:69fc:105::1:71cf)
[20:56:47] <lola> anyway my point to conclude is computer are just a tool not really pationed about then, so I never got arround to learn programming
[20:57:29] <paul424> hmm on my windows 8 desktop computer after pip install pygame and launching VSC everything bells and whistles ...
[20:57:34] <lola> btw I have use UNIX based systems since 11years old because my parents believed in privacy<-security<-freedom
[20:57:36] <novapy> lola: s/pationed/passionate
[20:57:41] <TML> SnoopJ: What do they point to?
[20:57:43] <lola> that is why 15 years
[20:57:53] <lola> anyway
[20:57:55] *** Quits: sreve_ (~quassel@p4ff44dcd.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:58:01] <paul424> so what could have gond wrong on that previous laptop, SnoopJ you said something about the envioerment
[20:58:04] <lola> I will stop spaming :p
[20:58:05] *** Parts: JorgeCastro[m] (~jcastroma@2001:470:69fc:105::1:71cf) ()
[20:58:15] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:58:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:58:45] <SnoopJ> TML, a little descriptor that has the entry point and some other things: https://www.ibm.com/docs/en/xl-fortran-aix/15.1.2?topic=calls-pointers-functions
[20:59:06] <novapy> lola: I use *nix for the freedom and because I hate windows.
[20:59:09] <SnoopJ> has a pointer to* the entry point
[20:59:28] *** Joins: maxzor (~maxzor@2a01cb04054faa005845757de706397d.ipv6.abo.wanadoo.fr)
[20:59:31] <novapy> And i3-gaps > every other window manager
[20:59:38] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-115.dsl.bell.ca) (Ping timeout: 252 seconds)
[20:59:43] <TML> SnoopJ: Fascinating - I definitely never got that deep into the internals of AIX's runtime
[21:00:00] *** Joins: lbalhar (~lbalhar@2a00:102a:5005:e916:9c3d:5b5c:87fc:dda6)
[21:00:25] <SnoopJ> paul424, VS Code will only know about packages installed in the environment it's configured to use. If you have multiple versions installed or are using virtual environments, you might need to hold its hand to tell it which python to use
[21:00:38] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[21:00:41] <SnoopJ> It's really inconsistent in my experience
[21:01:01] *** Quits: Pseudocr1 (~sudo@user/pseudocrat) (Ping timeout: 240 seconds)
[21:01:30] <paul424> I don't have neither multiply versions nor virtual env ....
[21:01:31] <SnoopJ> this is the official Python extension I'm talking about, btw
[21:01:53] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[21:01:56] <SnoopJ> TML, I haven't either but happened to see a reference to this in a set of tweets about some really obscure PowerPC porting stuff :)
[21:01:59] *** Joins: sreve (~quassel@p4ff44dcd.dip0.t-ipconnect.de)
[21:02:00] <teut> you can use ctrl+shift+P  to link the location of python.exe
[21:02:03] <paul424> SnoopJ, where I set the settings of those env ? anyway ?
[21:02:13] <teut> thats for windows atleast
[21:02:17] <paul424> besue I have choosen setttings , and then typed env
[21:02:29] <paul424> and only some non-revelant settings shows up
[21:02:36] <SnoopJ> paul424, if you're using the official python extension, it's documented here: https://code.visualstudio.com/docs/python/python-tutorial#_select-a-python-interpreter
[21:02:54] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[21:03:11] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:03:24] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[21:05:20] *** Joins: Wanderer (~wanderer@user/wanderer)
[21:06:25] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[21:06:46] *** Quits: MajorBiscuit (~MajorBisc@c-001-021-032.client.tudelft.eduvpn.nl) (Ping timeout: 260 seconds)
[21:06:49] <azidhaka> Hi everyone, how to i split a string of arbitrary length into two variables so that the second variable contains the last 4 chars and the first variable contains everything up to the last 4 chars?
[21:07:00] <paul424> SnoopJ, also some of my students have such problem : when the program is typed in a window and saved to disc, the command Run->start without debugging actually tries to run ANOTHER program ... how it could be ?
[21:07:36] <azidhaka> like 12345678 -> first=1234, second=5678
[21:07:47] <grym> azidhaka: that's an integer
[21:08:02] <SnoopJ> azidhaka, `first, second = thestring[:-4], thestring[-4:]`
[21:08:07] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[21:08:08] <azidhaka> grym yep, but i am treating it as string in that case
[21:08:23] <jinsun__> you can do integers too with divmod
[21:08:25] <grym> azidhaka: first, second = x[:-4], x[-4:]
[21:08:28] <grym> dang
[21:08:39] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-175.dsl.bell.ca)
[21:08:47] <SnoopJ> paul424, sorry, I can't see enough of that problem to really understand what's going on or what might be causing it.
[21:08:48] <akk> azidhaka: The term to search for to understand this stuff is "slicing".
[21:09:12] <jinsun__> divmod(12345678, 10**4)
[21:09:19] *** Quits: dfkfs (~dfkfs@178.49.152.151) (Quit: Client closed)
[21:09:23] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[21:09:46] <SnoopJ> jinsun__, hehe
[21:09:52] *** Joins: cheater (~Username@user/cheater)
[21:10:38] <azidhaka> thanks everyone, that was the part i couldn't figure out: thestring[-4:]
[21:10:43] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl489frgf8qxakbms.ipv6.telus.net)
[21:11:20] *** Joins: psych3del1c (~psych3del@net031132118099.pskovline.ru)
[21:11:21] *** Quits: paul424 (~tom@ip-5-172-233-149.multi.internet.cyfrowypolsat.pl) (Read error: Connection reset by peer)
[21:11:45] *** Joins: dreamon (~dreamon@pd9503995.dip0.t-ipconnect.de)
[21:14:31] *** Joins: Vonter (~Vonter@user/vonter)
[21:14:45] *** Quits: mekhami (~mekhami@2603-8080-1201-1400-581f-0234-dfa5-dae2.res6.spectrum.com) (Quit: WeeChat 3.4)
[21:15:07] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Quit: Leaving)
[21:15:10] *** Quits: roro_ (~roro@78.192.226.182) (Ping timeout: 260 seconds)
[21:15:26] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[21:15:29] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-175.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:15:29] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 256 seconds)
[21:15:48] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[21:16:03] *** Quits: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com) (Ping timeout: 256 seconds)
[21:16:22] *** Quits: bytehackr (~Sandipan@43.252.250.126) (Ping timeout: 250 seconds)
[21:17:11] *** Quits: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 256 seconds)
[21:18:21] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[21:18:32] *** Quits: d0ku (~d0ku@178.43.19.180.ipv4.supernova.orange.pl) (Ping timeout: 256 seconds)
[21:18:55] <tmart> How can I truly capture stdin input at a prompt? `input()` does the normal thing where pressing a letter displays that letter, backspace removes a letter, etc. I want to capture all that, character by character. Use case is to show the characters with special terminal styling.
[21:19:02] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[21:19:06] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[21:19:09] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[21:19:12] *** Quits: SallyAhaj_ (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[21:19:20] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[21:19:59] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[21:20:01] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[21:20:11] *** Joins: ice9 (~ice9@user/ice9)
[21:20:11] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[21:20:42] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[21:21:08] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 250 seconds)
[21:21:38] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[21:21:43] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Quit: Leaving)
[21:21:54] *** Quits: meltedbrain_y2k (~tekserf@47.61.115.91) (Read error: Connection reset by peer)
[21:21:55] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[21:22:51] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[21:23:02] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[21:23:03] *** Joins: darksun (~darksun@user/darksun)
[21:23:06] <jinsun__> windows has msvcrt.getch, on linux you'd need somethig like curses for that I think
[21:23:25] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[21:23:54] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[21:24:02] *** Quits: sreve (~quassel@p4ff44dcd.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[21:24:10] *** Quits: lbalhar (~lbalhar@2a00:102a:5005:e916:9c3d:5b5c:87fc:dda6) (Ping timeout: 250 seconds)
[21:25:06] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[21:25:43] <tmart> i'll look at those, thank you @jinsun__
[21:25:45] *** Quits: killswitch (~killswitc@217-120-19-98.cable.dynamic.v4.ziggo.nl) (Quit: leaving)
[21:25:59] *** Joins: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[21:26:01] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:26:16] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-195.dsl.bell.ca)
[21:26:46] <MrElendig> don't have to use curses, but it it will probably make your life easier
[21:27:17] *** Joins: lakrass (~lakrass@user/lakrass)
[21:28:01] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Quit: Leaving)
[21:28:02] *** Joins: fef (~thedawn@user/thedawn)
[21:28:04] <tmart> found the getpass builtin module. getpass does special input handling too, if you think about it, and i will probably use something similar to their implementation for cross-platformness https://github.com/python/cpython/blob/3.10/Lib/getpass.py
[21:28:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:28:41] *** Joins: zamanf (~dev@213.133.91.246)
[21:29:07] <tmart> it does use msvcrt under the hood for windows and direct communication with the /dev/tty file on *nix
[21:29:20] <tmart> (from what i can tell)
[21:29:27] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:29:33] <ntome> tmart: set the tty in raw mode
[21:30:20] *** Quits: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:31:36] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Remote host closed the connection)
[21:31:58] *** Joins: aslicedbanjo (~aslicedba@host86-160-16-70.range86-160.btcentralplus.com)
[21:32:38] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10f5:7936:d057:c3a4:b9e0:579f)
[21:32:57] *** Quits: snalty (~Shhh@user/snalty) (Ping timeout: 240 seconds)
[21:33:03] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-45-67-70-24-195.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:33:03] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[21:33:19] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:33:26] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[21:33:36] *** Joins: ice9 (~ice9@user/ice9)
[21:33:58] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:f9e3:829c:218d:b5f3)
[21:34:04] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[21:35:26] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[21:35:37] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f1:bb6d:d057:c3a4:b9e0:579f) (Ping timeout: 250 seconds)
[21:36:49] <SnoopJ> tmart, I believe that's how getpass works, yes. If you're making an interface layer for the terminal, you might want to look at prompt_toolkit: https://python-prompt-toolkit.readthedocs.io/en/master/pages/asking_for_input.html
[21:36:59] *** Joins: Vonter (~Vonter@user/vonter)
[21:37:14] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:37:20] *** Joins: lbalhar (~lbalhar@2a00:102a:5002:8fc3:d083:fcd8:3b0e:8621)
[21:37:22] *** Joins: crashrep (~crashrep@user/crashrep)
[21:38:47] *** Joins: MrFantastik (~f@2607:f598:bbda:270:af90:c2f0:20b5:e42e)
[21:38:56] *** Joins: jmd (~user@de.cellform.com)
[21:39:17] *** Joins: vindex10 (~vindex10@gateway/tor-sasl/vindex10)
[21:39:46] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-53-65-93-195-206.dsl.bell.ca)
[21:40:26] *** Joins: bloody (~bloody@user/bloody)
[21:40:50] *** Joins: snalty (~Shhh@user/snalty)
[21:42:21] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[21:42:24] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::3)
[21:42:42] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:43:35] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:8a27:da07:ef7c:de99) (Quit: Leaving)
[21:43:48] *** ozoned is now known as odoood
[21:44:57] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Quit: Leaving)
[21:46:39] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-53-65-93-195-206.dsl.bell.ca) (Ping timeout: 256 seconds)
[21:47:51] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[21:48:53] *** runelind_ is now known as runelind
[21:49:37] *** Joins: d0pefishm (~d0pefishm@cpc120806-nrwh12-2-0-cust326.4-4.cable.virginm.net)
[21:49:48] *** Quits: d0pefishm (~d0pefishm@cpc120806-nrwh12-2-0-cust326.4-4.cable.virginm.net) (Read error: Connection reset by peer)
[21:50:51] *** Quits: vindex10 (~vindex10@gateway/tor-sasl/vindex10) (Quit: vindex10)
[21:51:47] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-a0a5-0adf-492c-b73b.res6.spectrum.com)
[21:53:03] *** Joins: SGautam (uid286066@ilkley.irccloud.com)
[21:53:34] <SGautam> Here's what I am doing
[21:53:50] <SGautam> a = class_name()
[21:54:09] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[21:54:11] <SGautam> append_to_list(a) where append_to_list is a function that does lst.append(a)
[21:54:25] <SGautam> So.. does the list have the object reference or does it have the object itself?
[21:54:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:54:43] <SGautam> Like if I then trash a, does it list also trash a ?
[21:54:56] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[21:55:48] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 250 seconds)
[21:56:04] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[21:56:11] <grym> SGautam: one way to find out!
[21:56:21] <SnoopJ> SGautam, lists hold references to their contents
[21:56:52] <SnoopJ> (in CPython a list is 'just' an array of object pointers)
[21:56:55] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[21:57:43] <SGautam> my fears are true
[21:57:58] <SGautam> It passes by reference not object. https://usercontent.irccloud-cdn.com/file/mXko2Oma/Screenshot%202022-02-02%20235739.png
[21:57:59] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca)
[21:58:48] <SGautam> so how do I append by making a copy?
[21:59:45] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b872:5e21:461f:e72c)
[21:59:52] <SnoopJ> `lst.append(copy.copy(a))` ?
[22:01:11] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[22:01:38] *** Joins: parv (~quass@user/parv)
[22:03:10] *** Joins: finsternis (~X@23.226.237.192)
[22:03:49] *** Joins: vitali64 (~vitali64@user/vitali64)
[22:04:27] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[22:05:38] *** Joins: aselman4 (~aselman4@ashpr008-p2.nls.ford.com)
[22:06:01] *** Joins: magla (~gelignite@55d436fa.access.ecotel.net)
[22:06:04] *** Joins: jim87_ (~quassel@93.55.249.30)
[22:06:30] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[22:06:36] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[22:07:32] <aselman4> Hello. if there is a need to keep going if an exception is raised and no intention to try to do anything about the exception, would except Exception be acceptable in this case or is there a better way?
[22:08:31] <Pici> Its always better to catch the specific exception you expect to see.
[22:08:48] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:08:51] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:09:29] *** Quits: jim87 (~quassel@93.55.249.30) (Ping timeout: 252 seconds)
[22:10:13] *** Quits: jim87_ (~quassel@93.55.249.30) (Client Quit)
[22:10:15] *** Joins: officerping (~officerpi@c-73-235-167-226.hsd1.ca.comcast.net)
[22:10:24] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:10:30] <tmart> Python Prompt Toolkit looks great, @SnoopJ. Thanks. I didn't want to do all that low-level plumbing
[22:11:11] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[22:11:23] *** Joins: emf (~emf@2620:10d:c090:400::5:b0fe)
[22:11:34] <officerping> Hi everyone, my file parser is suddenly throwing an error when parsing a file: "UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb0 in position 13: invalid start byte". The file was parsed with no problems literally a few minutes ago and I have not made any changes to my source code. The file itself is normal ASCII and doesn't contain any non-standard characters. Has anyone ever experienced
[22:11:34] <officerping> this? Am I experiencing some kind of filesystem corruption?
[22:11:57] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[22:11:57] <SnoopJ> aselman4, `try: something(); except Exception as exc: ...` is the spelling if you really don't know what kind of exception might occur. If you're going to swallow *any* exception it might be a good idea to log them when they occur (the `logging` library provides very helpful machinery for this)
[22:12:22] <officerping> (I'm new to this channel, but I've been writing Python for 15+ years, and I couldn't find an answer to this on Google...)
[22:12:28] <InPhase> officerping: It's not normal ascii, because 0xb0 is not ascii.
[22:12:50] <InPhase> officerping: It might be ISO-8859-1 or some other type of encoding.
[22:13:15] <InPhase> officerping: Is there a euro symbol in it if you open the file with something like a word processor?
[22:13:25] <officerping> Thanks, InPhase; I'm still not getting it because I was able to parse the exact same file as ascii a few minutes ago. The first line of the file is "Standard Electronic Orientation quadrupole field applied" in plaintext.
[22:13:37] *** Joins: off^ (~off@128-092-174-141.biz.spectrum.com)
[22:13:50] <InPhase> officerping: Are you on Linux?
[22:13:55] <officerping> Yes, this is on Linux.
[22:13:58] <MacGyver> officerping: How is the code reading the file?
[22:14:14] <InPhase> officerping: Install hexdump, and type:  hexdump -Cv myfilename | less
[22:14:28] <officerping> MacGyver: I'll put the traceback in a pastebin, one moment
[22:14:36] <SnoopJ> as InPhase says, 0xb0 isn't ASCII (176 > 128) so it's likely whatever previous decoding you mean was using something a little larger than ASCII
[22:14:49] *** Quits: aselman4 (~aselman4@ashpr008-p2.nls.ford.com) (Quit: Client closed)
[22:15:10] <InPhase> officerping: Then look for the b0 in the output of that hexdump command.
[22:15:18] <officerping> MacGyver: Here you go: https://pastebin.com/Wb17874n. I'm using open() to read it.
[22:15:27] <officerping> InPhase: I'll try hexdump, one moment.
[22:15:58] <SnoopJ> officerping, it's possible that the decoding is happening with some default behavior, and the default defined by your locale has changed between invocations, though
[22:16:32] *** Joins: Guddu (~Guddu@59.88.88.82)
[22:16:47] <parv> So were there any system updates?
[22:16:54] <officerping> InPhase: Hexdump results are here - https://pastebin.com/8RrNgGyu . I'm not seeing b0 anywhere
[22:17:54] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[22:18:11] <officerping> SnoopJ: Thank you. The strange thing is that this parser has been a working component of my codebase for years, and the file it was parsing, which came from another program, seemed completely normal.
[22:18:26] *** Quits: boolshit (jiggawatt@runs.on.ubuntu.crapping.cricket) (Quit: 🌘)
[22:18:32] <SnoopJ> officerping, that's the thing about behavior that ends up relying on the locale: it works great, until suddenly it doesn't
[22:18:38] <officerping> parv: No system updates that I know of. I experienced this error in the middle of running my program, no reboots, no logging out or back in
[22:18:41] <SnoopJ> (this is just a guess, though)
[22:19:00] *** Joins: Trigraph (~dev@68-251-63-205.lightspeed.sntcca.sbcglobal.net)
[22:19:02] <MacGyver> officerping: You say you were able to parse that file as ascii a few minutes ago.
[22:19:02] <bjs> officerping: something funky is happening; my first thought would be that the file you're looking at somehow isn't the one Python is reading
[22:19:05] <officerping> I could reboot the system and see if the problem goes away. But if it does go away, that would just leave me totally perplexed
[22:19:11] <MacGyver> officerping: Was that with the *exact* same code?
[22:19:20] <bjs> officerping: you can try open the file in binary mode, and print the contents of the file as Python sees it.
[22:19:22] <MacGyver> officerping: And the *exact* same file?
[22:19:24] <officerping> MacGyver: Yes, it was with the exact same code. I haven't made any changes to the source code.
[22:19:51] <MacGyver> officerping: What happens if you run `echo 3 | sudo tee /proc/sys/vm/drop_caches` and then re-run your code?
[22:20:01] <toma> [defaultdict, RuntimeError: dictionary changed size during iteration, https://bpa.st/IYDQ, lines 38-40] I was just wondering why does it matter if the dictionary changes sizes during iteration? How would I go about deleting all the elements individually from a defaultdict?
[22:20:08] <MacGyver> officerping: (That clears the in-memory filesystem cache, forcing the system to re-read from disk)
[22:20:13] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[22:20:32] * toma should have googled first. oops.
[22:20:37] <officerping> MacGyver: Yes, it's the exact same file.  To expand on it a bit more, I had a file (let's call it A.out) that I parsed a few minutes ago and I extracted some data from it. Then I ran a different program and saw this error for a different file, B.out. Then I returned to parse A.out and got this same error.
[22:20:38] <MacGyver> officerping: (It's unlikely that a memory error would trigger the exact same error in the exact same location if you do that)
[22:21:17] <bjs> toma: the problem is that once you delete an item from a dict, what is the "next" item in the iteration? after all, when you add or remove items from a dictionary it can change the order of things.  Usually the best thing to do is to save the ones you want to delete and then delete them later, or loop over a fixed list of things rather than the dictionary directly
[22:21:24] <officerping> bjs : I did try to open the file in binary mode and it looks correct. However, the rest of my code won't work if I open the file with 'rb'; I get a different error message that a "bytes-like object is expected, not str".
[22:21:35] <officerping> MacGyver: I will try dropping the caches and let you know what happens
[22:21:55] *** Joins: mharig (~mharig@181.188.143.133)
[22:22:08] <bjs> officerping: I didn't necessarily mean *instead*, but to open it in binary mode beforehand just as a debugging tool. can you show us what `with open(fnm, 'rb') as f: print(repr(f.read()))` outputs?
[22:22:21] <dba> is it possible to access a module without importing it using `import mod` ?
[22:22:22] <toma> bjs: I thought I did that when I did "ids = employees.keys()" and then iterated over ids and not the dict itself.
[22:22:23] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[22:22:46] <bjs> toma: do  id = list(employees.keys())  to make a fixed list
[22:23:00] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[22:23:00] <bjs> dba: no, how would you access things without importing it? and why do you not want to import it?
[22:23:17] <bjs> dba: do you just not want to write the word "import", or is there some more fundamental concern?
[22:23:30] *** Quits: aniketgm (~aniketgm@49.36.56.177) (Quit: signed off..)
[22:23:35] <officerping> bjs: Here's the leading content of that output: b' Standard Electronic Orientation quadrupole field applied\n Nucleus-field energy     =    -0.0000000144 hartrees\n Guess MOs from core Hamiltonian diagonalizat
[22:24:00] <officerping> I am pretty sure the problem is before the first \n, because if I delete that line, then the error appears again with a much higher number for the "position".
[22:25:04] <toma> bjs: thanks.
[22:25:07] <dba> bjs: my use case it that I have config file where all other parameters stored and in my code I dont want to show that I am pulling them from that particular file
[22:25:10] <bjs> officerping: very interesting,  try pass encoding='utf-8'  directly to the second open() to force it to use utf-8
[22:25:24] *** Quits: argument (~0ptions@user/argument) (Ping timeout: 256 seconds)
[22:25:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:25:46] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[22:25:52] <bjs> dba: don't want to "show" it?
[22:25:52] <officerping> MacGyver: I tried "echo 3 > /proc/sys/vm/drop_caches" and I got the same error message in the same position.
[22:26:02] <officerping> bjs: One moment
[22:26:04] *** Quits: f1se4 (~f1se4@213.195.113.45) (Quit: WeeChat 3.4)
[22:26:26] *** Joins: zamanf (~dev@213.133.91.246)
[22:27:19] <officerping> bjs: Here is the output of python -c "with open('run.1.out', encoding='utf-8') as f: print(repr(f.read()))"
[22:27:26] <parv> .oO( Smells like a secret file ... )
[22:27:28] <officerping> UnicodeDecodeError: 'utf-8' codec can't decode byte 0xb0 in position 16396: invalid start byte
[22:27:37] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 250 seconds)
[22:27:44] <bjs> officerping: why is the position suddenly different
[22:27:52] <InPhase> officerping: Excellent.  So if it's not in the file, then it's not processing the file that's causing the error, but something the code is doing to mutate the data before it gets decoded.
[22:28:10] <dba> bjs, setting.py is where all variable stored (API keys, password and other configs) right now to pull this parameters I have to `import setting
[22:28:35] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[22:28:43] <officerping> bjs: Yes, the position is different from when my program attempts to parse it. I am still able to get the old error message with position 12 if I run my code
[22:28:56] *** Joins: tom_ (~tom@ip-5-172-238-151.multi.internet.cyfrowypolsat.pl)
[22:29:12] <bjs> officerping: well, what is in your file at position 16396
[22:29:16] <bjs> :P
[22:29:22] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10f5:7936:d057:c3a4:b9e0:579f) (Ping timeout: 260 seconds)
[22:29:26] <dba> I have to use `import setting` then access them. not sure if there is a hack around it to make a bit confusing from where these paramters are pulled
[22:29:29] <InPhase> officerping: Okay, so stick to the one without your code.  Do hex dump again, and look at position 0x400C in that file.
[22:29:41] <bjs> officerping: if you open with 'rb' and do some exploring, or use hexdump or something and you can explore what the actual file contents are
[22:30:09] <bjs> dba: well it's slightly unusual to use .py files to store configuration, so there's no nice way. But there's plenty of ways to read json files or ini files or other configuration formats
[22:30:30] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[22:30:34] <officerping> bjs, InPhase: I think now I found the problem. The position 12 was a red herring because the "12" was relative to the start of the line.
[22:30:36] <bjs> dba: (but I'm still not sure what the "hack around" is exactly hacking around precisely, what's wrong with the import?)
[22:30:41] <InPhase> officerping: I figured.
[22:30:50] <InPhase> Once I saw the .read() error anyway.
[22:30:52] <officerping> Here is the offending line: 1\1\libra\JobtypUnspecified\ProcedureUnspecified\BasisUnspecified\o41720(°+,1)\.....
[22:30:58] <officerping> You can see the degree symbol there
[22:31:02] <officerping> That was causing the problem
[22:31:22] <officerping> Now I'm not sure why my code was ever able to parse this before, but I think the fix should be to prevent printing out this offending line because my parser doesn't use it anyway
[22:31:28] *** Joins: funhouse (~funhouse@user/funhouse)
[22:31:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:31:44] <Repiphany> Or use the correct encoding instead of defaulting to UTF8
[22:31:45] <InPhase> officerping: Or stop decoding as utf-8, and decode as iso-8859-1
[22:31:54] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[22:32:03] *** Joins: funhouse54 (~funhouse@user/funhouse)
[22:32:14] <officerping> InPhase: Happy to do that. But can you explain how you were able to determine the correct encoding?
[22:32:35] *** Quits: funhouse54 (~funhouse@user/funhouse) (Client Quit)
[22:32:42] <InPhase> officerping: Years of experieencee.  ;)
[22:33:01] <InPhase> That's the encoding that has 0xb0 as the degree symbol.  It's also very common.
[22:33:07] <SnoopJ> to know it's correct you'll need to know what encoding is being used by whatever is producing this output, since there is more than one possible, but it's probably iso-8859-1 :)
[22:33:11] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[22:33:17] <SnoopJ> latin-1 eats your lunch all the time
[22:33:38] *** Joins: RayMarvo (~Rae@197.184.176.237)
[22:33:42] *** tom_ is now known as paul424
[22:33:51] <grym> and cp1251 shows up for tea
[22:33:51] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:33:53] <InPhase> But yeah, there are a few derivatives that also have it, but -1 is the most commonly encountered, AND will not fail to parse this data, even if some characters get translated to the wrong thing.
[22:34:03] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[22:34:20] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Max SendQ exceeded)
[22:35:23] *** Quits: jay-m126_ (~jay-m@129.0.76.217) (Ping timeout: 256 seconds)
[22:35:37] *** Quits: jay-m1261 (~jay-m@129.0.76.217) (Ping timeout: 256 seconds)
[22:35:50] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[22:35:53] *** Quits: jay-m126 (~jay-m@129.0.76.217) (Ping timeout: 252 seconds)
[22:36:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[22:36:38] <officerping> InPhase: I think I understand now. When a file is opened with a given encoding, it will read in the bytes in sequential chunks, until something shows up that the encoding doesn't support? And I guess standard ASCII characters are represented the same way in all encodings, which is why I can use any encoding with a file that contains all standard character?
[22:37:03] <SnoopJ> not *all* encodings, but many will try to align themselves to be compatible with ASCII
[22:37:06] <InPhase> officerping: Standard ascii values don't go above 0x7f
[22:37:35] <SnoopJ> yea, ASCII itself is only 128 values so you can be absolutely positive that any byte above that is *not* ASCII, but sometimes people say "ASCII" and mean "ASCII + [one of the extensions]"
[22:37:39] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:37:39] <InPhase> officerping: utf-8 encodings require a certain pattern of bits, but overlap with ascii for all values <= 0x7f.
[22:37:49] *** Joins: michele_ (~eraser@user/michele)
[22:37:51] *** Joins: BillyZane2 (~BillyZane@185.202.221.34)
[22:38:09] *** Joins: R43 (~Rae@197.184.176.237)
[22:38:11] <officerping> InPhase: Right, because 7f is 128. That's reasonable. :)
[22:38:13] *** Quits: henistein (~henistein@2001:8a0:c18a:f601:f9e3:829c:218d:b5f3) (Ping timeout: 256 seconds)
[22:38:29] *** Quits: michele (~eraser@user/michele) (Quit: restart)
[22:38:29] *** Quits: RayMarvo (~Rae@197.184.176.237) (Remote host closed the connection)
[22:38:29] *** Quits: BillyZane (~BillyZane@185.202.221.34) (Remote host closed the connection)
[22:38:29] *** Quits: masterkorp (~masterkor@user/masterkorp) (Quit: Ping timeout (120 seconds))
[22:38:29] *** Quits: lxdr (~lxdr@user/lxdr) (Quit: Ping timeout (120 seconds))
[22:38:37] <InPhase> officerping: The other non-utf non-widechar encodings mostly just have mappings of the values from 0x80 through 0xff to characters and symbols of interest for some language or culture.
[22:38:49] *** Quits: paul424 (~tom@ip-5-172-238-151.multi.internet.cyfrowypolsat.pl) (Quit: GG)
[22:38:51] <InPhase> officerping: 127.  :)
[22:38:55] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[22:39:03] *** Joins: lxdr (~lxdr@user/lxdr)
[22:39:53] *** Joins: paul424 (~tom@ip-5-172-238-151.multi.internet.cyfrowypolsat.pl)
[22:40:04] *** Joins: michele (~eraser@user/michele)
[22:40:28] <officerping> Right, 127. :)  That makes sense, and Unicode is different in that it can perceive variable numbers of bytes as characters, and that probably comes from having a special delimiter byte or something
[22:40:41] <InPhase> officerping: Python starting with 3 is pretty strict with these encodings, which seems frustrating at times, but it is mostly there to keep you from processing data as garbage and not noticing it.
[22:40:52] *** Joins: masterkorp (~masterkor@user/masterkorp)
[22:40:58] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[22:41:03] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca) (Ping timeout: 256 seconds)
[22:41:03] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[22:41:37] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[22:41:44] *** Joins: snalty_ (~Shhh@user/snalty)
[22:41:44] *** Joins: rvalue- (~rvalue@user/rvalue)
[22:41:51] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-224.dsl.bell.ca)
[22:41:52] *** Joins: kurfen_ (~kurfen@213.152.188.7)
[22:41:52] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: Client closed)
[22:41:53] *** Joins: euouae (~euouae@user/euouae)
[22:42:11] *** Quits: kurfen (~kurfen@213.152.188.7) (Ping timeout: 256 seconds)
[22:42:11] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 256 seconds)
[22:42:19] <officerping> InPhase: Yeah, when I ported my code to Python 3 about 5 years ago, I had to make lots of code changes related to encodings, but at the time I didn't know what I was doing. One error message I got a lot was something like "Expected bytes, not str". But now I understand a bit better. :)
[22:42:23] *** Joins: Betal (~Betal@user/betal)
[22:42:25] *** Joins: ice9 (~ice9@user/ice9)
[22:42:31] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:42:45] *** Quits: snalty (~Shhh@user/snalty) (Ping timeout: 256 seconds)
[22:42:45] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Ping timeout: 256 seconds)
[22:42:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:42:56] *** Quits: arinov (~arinov@213.194.126.155) (Read error: Connection reset by peer)
[22:42:58] *** Quits: elena_re (~elena@213.194.126.155) (Read error: Connection reset by peer)
[22:43:13] *** Quits: teut (~teut@2401:4900:1c68:dbe1:6472:470:2bf2:ff35) (Quit: Client closed)
[22:43:19] *** Quits: michele_ (~eraser@user/michele) (Ping timeout: 256 seconds)
[22:43:28] *** Joins: jiggawatt (~jiggawatt@runs.on.ubuntu.crapping.cricket)
[22:43:30] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[22:43:31] <officerping> The problem is "officially" solved. Thanks a lot, InPhase, bjs and everyone here. :D
[22:43:35] <SnoopJ> officerping, this article/talk is a very helpful survival guide for getting your mental framing adjusted coming from 2.x to 3.x (and a good summary of text besides): https://nedbatchelder.com/text/unipain.html
[22:43:54] *** rvalue- is now known as rvalue
[22:44:29] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[22:44:29] <InPhase> officerping: Other good reading is this:  https://utf8everywhere.org/  and this page, which shows the byte formats allowed for utf-8, which can reveal to you why 0xb0 failed:  https://en.wikipedia.org/wiki/UTF-8
[22:44:34] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b872:5e21:461f:e72c) (Quit: Leaving)
[22:44:58] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[22:45:04] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:13] <FunkyELF> SnoopJ:     return globals()[name]
[22:45:14] <FunkyELF> E   KeyError: '__path__'
[22:45:24] <InPhase> officerping: In binary, 10xxxxxx is not an allowed starting value, but 11xxxxxx must occur first if the leftmost bit is 1.
[22:45:32] <SnoopJ> FunkyELF, that part is wrong anyway, it should just be `raise AttributeError`. See the PEP.
[22:45:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:45:42] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[22:46:13] <officerping> SnoopJ, InPhase, thanks for sharing. Makes sense for me to read up on encodings since this problem seems to crop up once every year or so, and potentially more often in the future.
[22:46:38] <FunkyELF> SnoopJ: ahh... I guess there's not a way to call something similar to super().  So if it's something I handle, return it, if it's in globals(), return it, else raise AttributeError?
[22:46:46] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[22:47:08] <officerping> InPhase, what standard decided that? Doesn't that reduce the number of representable values for a byte from 256 to 128?
[22:47:34] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[22:47:53] *** Joins: CoolerX (~CoolerX@user/coolerx)
[22:47:57] <bancroft> bjs: RE: the abstract mypy type checking thing earlier. I'm confused because this checks out https://bpa.st/PT5Q
[22:48:11] <officerping> InPhase: nvm, that was a dumb question. It's the UTF-8 standard of course
[22:48:15] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[22:48:25] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 256 seconds)
[22:48:33] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:48:41] <bjs> bancroft: C is not abstract.
[22:48:44] <InPhase> officerping: ISO-10646, and it allows utf-8 to represent all unicode values with a flexible storage size that ranges from 1 to 4 bytes.  And in the future it's easily extendable to larger numbers of characters up to the 4 billion limit of 32-bit.
[22:48:44] <officerping> I thought you were referring to something more general that 10xxxxxx is not allowed
[22:48:48] *** ouestbillie is now known as cedb
[22:49:04] <bjs> bancroft: it's not inherting from ABC that makes it abstract, it's the fact it has abstract methods. But C has no abstract methods.
[22:49:07] *** cedb is now known as ouestbillie
[22:49:11] *** Joins: arinov (~arinov@213.194.126.155)
[22:49:13] *** Joins: elena_re (~elena@213.194.126.155)
[22:49:15] <SnoopJ> FunkyELF, it's even simpler than that: you end up in __getattr__ *after* the module's dictionary is checked
[22:49:22] *** Joins: smrtz (~smrtz@user/smrtz)
[22:49:24] <bjs> (although I think inheriting from ABC is required anyway)
[22:49:46] *** Joins: ice99 (~ice9@user/ice9)
[22:49:47] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[22:49:48] <SnoopJ> FunkyELF, I remembered that module-level __getattr__() is a thing, but forgot this detail (probably because I've never used this for anything)
[22:49:57] <FunkyELF> SnoopJ: I just noticed that.  I had initialized that attribute to None and saw the function was never getting called.
[22:50:16] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[22:50:20] <SnoopJ> the PEP is well worth reading if you plan to solve your problem this way
[22:50:20] *** Quits: pro_z_ (~pro_z@37.214.55.61) (Ping timeout: 256 seconds)
[22:50:30] <InPhase> officerping: If you look at the table under Encoding on the wiki page, 10xxxxxx is the series of bytes after the first 11xxxxxx
[22:50:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[22:50:48] <InPhase> officerping: If this happens without the right pattern, it's a decoding failure.
[22:50:48] <FunkyELF> SnoopJ: I want to declare it in __all__ to make my IDE happy when importing it from other modules, but then on this module itself it doesn't like the __all__ because it see's it's not defined anywhere
[22:51:49] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:53:02] <officerping> InPhase: Yes, that makes sense, because the decoder needs to know the "context" of a given byte, ie whether it's the start of a 1-byte chunk, or 2-bytes etc., or in the middle of a chunk.
[22:53:12] <bancroft> bjs: A does though and I managed to annotate the type of x as Type[A].
[22:53:14] <officerping> That's very helpful.
[22:53:25] <bjs> bancroft: that's correct and intended behaviour
[22:53:36] *** Joins: ice9 (~ice9@user/ice9)
[22:53:54] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[22:54:21] *** Quits: ice99 (~ice9@user/ice9) (Read error: Connection reset by peer)
[22:54:28] <bjs> bancroft: I've never figured out what the precise rule actually is, there are some caveats but it's roughly: for Type[Cls]  if Cls is abstract (is an ABC with un-implemented abstract methods) then only concrete (where those methods are implemented) subclasses (as defined by issubclass()) of Cls are accepted.
[22:54:39] *** Joins: greedom (~greedom@p200300de670bd40051fc70826c4f164d.dip0.t-ipconnect.de)
[22:54:50] <officerping> My program is running normally again. I think what must have happened is that the line causing the parser error should have some kind of clock information, and when the clock struck a certain hour, it wrote some bytes that caused the UTF-8 decoder to fail.
[22:55:04] <officerping> That's much better than file corruption or getting hacked or something. :D
[22:55:29] *** Parts: euouae (~euouae@user/euouae) ( )
[22:55:30] <bjs> bancroft: you have this because you want to say something like `def make(cls: Type[A]) -> A` (or roughly similar) but accepting A itself would be unsafe.
[22:55:43] *** Joins: georgios (~georgios@user/georgios)
[22:55:54] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[22:55:55] <officerping> (it's running normally after adding 'iso-8859-1' to open().)
[22:56:23] *** Joins: vicfred (~vicfred@user/vicfred)
[22:56:51] <FunkyELF> SnoopJ: https://github.com/ericfrederich/wordle/blob/nerdle/src/wordle/nerdle_equations.py ... that's what I'm trying to do.  If you run the script it'll generate the data which takes like 20 seconds, so I keep it in a file alongside the script.
[22:57:20] <FunkyELF> SnoopJ: currently PyCharm is not happy with line 16 because it doesn't see any ALL_EQUATIONS defined anywhere
[22:57:22] *** Joins: ice99 (~ice9@user/ice9)
[22:58:05] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[22:58:12] <bancroft> bjs: thanks for taking the time to explain :)
[22:58:29] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[22:58:34] <zumba_addict> Good afternoon all. I am getting this error "AttributeError: module 'jsonschema._validators' has no attribute 'type_draft4'" Do I just downgrade our jsonScheme from 3.2.x to 2.6.x?
[22:58:36] *** Joins: arinov_ (~arinov@213.194.126.155)
[22:58:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[22:58:54] *** Quits: ice99 (~ice9@user/ice9) (Read error: Connection reset by peer)
[22:59:05] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[22:59:07] *** Joins: ice99 (~ice9@user/ice9)
[22:59:11] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[22:59:14] <MrElendig> update the code instead?
[22:59:54] <zumba_addict> I'll check. The owner of the code is no longer with the company
[23:00:08] *** Joins: Guest2036 (~Guest20@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com)
[23:00:14] *** Joins: ano (~ano@user/ano)
[23:00:26] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[23:00:46] *** Quits: Babar (~Babar@2405:4803:fccf:a720:3ccb:c7a6:c63c:8e57) (Ping timeout: 245 seconds)
[23:00:49] <SnoopJ> FunkyELF, does it still complain if you implement __dir__() (really, I can't stress enough that you should read the PEP if you're going to do this)
[23:01:23] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:27f:b8b6:8e3:a586)
[23:02:11] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[23:02:36] <Guest2036> Hi, I have list of lists, the inner lists are in changed sizes. for example: [ [1,2], [1,2,3], [1,2,3,4]], I want to create list of lists that the inner lists are with maximum size, the example result (with maxsize=5) should be: [ [1,2,1,2,3], [1,2,3,4]], there is any helper function (similar to itertools) in order ot achieve that? TY!
[23:02:46] *** Quits: elena_re (~elena@213.194.126.155) (Quit: Konversation terminated!)
[23:03:47] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[23:03:55] *** Joins: azidhaka (uid211322@user/azidhaka)
[23:04:13] <jwhisnant> Guest2036: what do these lists represent? (differently-sized iterables lead to pain in my experience) - maybe another structure better suits what the data represent ...
[23:04:22] <bjs> Guest2036: i'm confused by your example, why are there only 2 things in your output list and one of them doesn't even have 5 things in it? what are you trying to do?
[23:04:28] *** Joins: elena_re (~elena@213.194.126.155)
[23:04:42] *** Quits: elena_re (~elena@213.194.126.155) (Client Quit)
[23:04:42] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[23:04:45] <FunkyELF> SnoopJ: if I return __all__ from __dir__() it still complains
[23:04:49] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:04:53] <SnoopJ> FunkyELF, did you read the PEP
[23:04:58] <Guest2036> The first one in the output is with size 5
[23:05:08] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[23:05:14] <bjs> Guest2036: but the second isn't?  I don't see how you produced this output
[23:05:19] <SnoopJ> FunkyELF, ah, I see, you define the name in __all__ so you're doing what's in the PEP anyway.
[23:05:32] <SnoopJ> I guess your IDE isn't clever enough to follow that, then.
[23:05:45] <FunkyELF> SnoopJ: I've looked at it, everything is working... I'm guessing the IDE is failing me.  Similar to why my IDE thinks I can import cache from functools even though I'm on 3.8 and cache isn't there.
[23:05:50] <Guest2036> Yea, the second isnt due to the end of the list, for example: [ [1,2], [1,2], [1,2,3], [1,2] ] , with size of 5 will return: [ [1,2,1,2], [1,2,3,1,2]]
[23:06:06] <Guest2036> I want to merge lists until the size is 5, if can't merge them, start new inner list
[23:06:09] <bjs> Guest2036: maybe you can make an example where every list isn't just 1,2,3
[23:06:10] <jwhisnant> Guest2036: can you use unique variables in all locations? (I don't get it)
[23:06:18] <bjs> Guest2036: it's confusing because we can't see how they got combined
[23:06:33] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[23:06:35] <Guest2036> It's like take while the size is <= 5
[23:06:37] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[23:06:45] *** Quits: greasybyte (~greasybyt@pool-98-116-192-195.nycmny.fios.verizon.net) (Quit: Client closed)
[23:06:59] <bjs> Guest2036: but take while the size is <= 5 would've given you [ [1,2,1,2,1,2,3], [1,2]
[23:07:10] <Guest2036> [ [1,2], [3,4], [5,6,7], [8,9] ] , with size of 5 will return: [ [1,2,3,4], [5,6,7,8,9]]
[23:07:20] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:27f:b8b6:8e3:a586) (Remote host closed the connection)
[23:07:27] <Guest2036> Without breaking the original inner lists, the inner lists have to stay in the same output list
[23:07:37] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:40cb:ed11:5496:f541)
[23:08:01] <bjs> Guest2036: i mean this sounds like a relatively straight-forward little function that loops over the inner lists
[23:08:03] <jwhisnant> Guest2036: ok, with <=5, why not [ [1...5], [6...10]] ?
[23:08:22] *** Quits: Guest2036 (~Guest20@ec2-18-192-137-41.eu-central-1.compute.amazonaws.com) (Quit: Client closed)
[23:08:24] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl489frgf8qxakbms.ipv6.telus.net) (Quit: Leaving)
[23:08:32] <bjs> Guest2036: that's probably the simplest way, there might be something in itertools with groupby and chain but it's probably more complicated than just doing it
[23:08:32] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:08:53] <bjs> They quit?
[23:09:21] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[23:09:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:09:28] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 250 seconds)
[23:10:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:12:32] <jinsun__> what is <frozen importlib._bootstrap>?
[23:12:48] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[23:13:02] <jinsun__> I'm assuming the importlib._bootstrap part is https://github.com/python/cpython/blob/main/Lib/importlib/_bootstrap.py
[23:13:19] <jinsun__> what does frozen mean?
[23:13:31] <aphysically> hey jinsun
[23:13:46] *** Quits: paul424 (~tom@ip-5-172-238-151.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[23:13:53] <aphysically> I'm up to 3 cpython commits and my fourth (for dataclasses) is waiting review :^)
[23:14:51] *** Joins: ano (~ano@user/ano)
[23:14:52] <bjs> jinsun__: it's part of the implementation of import, so you can't import it so it has to be baked in somehow
[23:15:03] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 256 seconds)
[23:15:08] <jinsun__> aphysically: yeah saw those, congrats!
[23:15:21] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[23:15:22] *** Joins: mekhami (~mekhami@2603-8080-1201-1400-581f-0234-dfa5-dae2.res6.spectrum.com)
[23:15:27] *** Joins: cocalero (~cocalero@200-140-37-88.user3p.brasiltelecom.net.br)
[23:15:35] <bjs> jinsun__: that's what the frozen part of the repr is saying, that this was not one that came from importing the module but one that was baked into Python itself
[23:15:36] <jinsun__> aphysically: he typing stuff was done super fast with Guido, dataclassess thing taking longer
[23:15:38] *** Joins: Atque (~Atque@user/atque)
[23:15:38] <SnoopJ> jinsun__, what bjs said; best bet for more info than that might be the freeze tool: https://github.com/python/cpython/tree/main/Tools/freeze#readme
[23:16:09] <novapy> How can I store a list in a file?
[23:16:11] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 245 seconds)
[23:16:16] <mekhami> what's the idiomatic way to check if something's type is in a list of types? `if type(x) in list_of_types` causes a pylint unidiomatic typecheck error, which is annoying, but explicitly looping over the list of types is also annoying
[23:16:22] <SnoopJ> novapy, JSON is generally a good choice for serialization.
[23:16:41] <SnoopJ> mekhami, `isinstance(obj, list_of_types)`
[23:17:08] <aphysically> jinsun_: cpython was blocked for a while, and I think eric wants to take time for a more in depth review of stuff. Also he might want to wait for some decisions on the from __future__ annotations stuff, but I'm not sure. I don't think it touches that much
[23:17:09] <jinsun__> bjs: ah, so there is a frozen importlib in the interpreter for imports
[23:17:30] <mekhami> SnoopJ: the docs don't suggest that a list of types can be passed as the second argument
[23:17:40] <aphysically> the final patch ended up being pretty clean
[23:18:12] <SnoopJ> mekhami, oh, sorry, I guess it *has* to be a tuple, so tuple(list_of_types)
[23:18:17] <novapy> SnoopJ: How though?
[23:18:34] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[23:18:48] <novapy> What do I need to do to format it and store it?
[23:18:56] <mekhami> SnoopJ: that's also kinda awkward.
[23:19:04] <SnoopJ> novapy, json.dump() and json.load() are what you want: https://docs.python.org/3/library/json.html#basic-usage
[23:19:12] <SnoopJ> mekhami, it's less incorrect, at least
[23:19:20] <SnoopJ> checking type(obj) is going to miss subclasses
[23:19:27] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:19:40] *** Joins: Bakunin (~maplefing@user/lindis)
[23:19:52] <mekhami> that may be what you want sometimes though, right? thinking about exception types specifically
[23:20:05] <SnoopJ> if you want to know *exactly* what the type is, maybe
[23:20:22] * SnoopJ can't think of ever needing to care about the distinction
[23:21:53] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[23:22:25] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[23:22:40] <SnoopJ> jinsun__, there are a handful of things that will get frozen in a CPython build, generally stored in Python/frozen_modules: https://bpa.st/7IKQ
[23:23:03] <bjs> jinsun__: well if you think about it, if the importlib is the implementation of import, how is it supposed to be able to use it at runtime when you import things :P
[23:23:07] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[23:23:32] <SnoopJ> ^ largely the same reason for the other stuff in Python/frozen.c AFAIK
[23:24:09] <novapy> SnoopJ: json is saying that it doesn't want a list
[23:24:40] <bjs> jinsun__: so in the end _something_ funky has to happen with importlib :)
[23:25:36] <jinsun__> bjs: yeah, I just thought there is another magic thing in the interpreter other than importlib for imports, but makes sense that just a frozen copy of that in built in
[23:26:53] <bjs> jinsun__: you have found the other magic :P
[23:27:28] <FunkyELF> with Python typing, how would you define something like a from_string() classmethod that returns a type of the class itself.  With a single concrete class this works.  I can have a class Foo and a "def from_str(cls, s: str) -> Foo:" and it works fine.  But what if this Foo is an abstract class?
[23:27:36] <SnoopJ> novapy, https://bpa.st/CEHA
[23:27:44] *** Quits: ice99 (~ice9@user/ice9) (Remote host closed the connection)
[23:27:49] <bjs> FunkyELF: when you say "abstract" class, what do you mean?
[23:27:59] *** Joins: ice9 (~ice9@user/ice9)
[23:28:41] <FunkyELF> bjs, means if there is a "class Bar(Foo)", then Bar's from_str method should return a Bar, not a Foo... even though Bar is a subclass of Foo
[23:28:59] <bjs> FunkyELF: oh are you asking how to annotate @classmethods generally?
[23:29:06] <bjs> FunkyELF: see https://www.python.org/dev/peps/pep-0484/#annotating-instance-and-class-methods
[23:29:18] <bjs> specifically the factory example might be of interest
[23:29:44] <FunkyELF> really, what I want to define is a classmethod like "def from_str(cls, s: str) -> cls:" but cls isn't resolvable there
[23:30:25] *** Joins: Chucara (~Chucara@89.249.15.226)
[23:30:48] <FunkyELF> def factory(cls: Type[T]) -> T:
[23:31:33] <Chucara> Help! I need to update 20+ python projects due to a change source url. Is there any way (with pipenv) to apply the url change from pipfile to pipfile.lock without affecting locked versions? Since the file is hashed, I can't just change the URL...
[23:32:18] <FunkyELF> So to do that I need to define T above as TypeVar('T', bound='Foo')  ?
[23:32:33] <bjs> FunkyELF: yeah, that should work.
[23:34:07] *** Quits: Strom (strom@fedora/strom) ()
[23:34:13] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[23:34:20] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:34:54] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[23:34:54] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[23:35:48] *** Joins: Strom (~strom@fedora/strom)
[23:36:11] <FunkyELF> thanks, for now 'def from_str(cls, s: str) -> "Foo":' works.  Did they change it recently where you don't have to put the "Foo" in quotes?
[23:36:36] *** Quits: lbalhar (~lbalhar@2a00:102a:5002:8fc3:d083:fcd8:3b0e:8621) (Ping timeout: 245 seconds)
[23:36:51] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[23:37:07] <jinsun__> now Self type is accepted, so you would be able to do def factory(cls) -> Self:
[23:37:25] *** Quits: mekhami (~mekhami@2603-8080-1201-1400-581f-0234-dfa5-dae2.res6.spectrum.com) (Ping timeout: 240 seconds)
[23:37:25] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-a0a5-0adf-492c-b73b.res6.spectrum.com) (Quit: jarthur)
[23:37:51] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[23:37:54] <bjs> I am hesitant to suggest using changes to the language that haven't been released yet :P
[23:38:18] *** Joins: mekhami (~mekhami@2603-8080-1201-1400-581f-0234-dfa5-dae2.res6.spectrum.com)
[23:38:18] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[23:38:23] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Remote host closed the connection)
[23:38:35] <sco1> FunkyELF: it's related to https://www.python.org/dev/peps/pep-0563/
[23:38:44] <sco1> It's still a future import
[23:39:16] <jinsun__> it can be importedfrom typing_extensions, only pyright accepts it yet though
[23:39:36] <ssbr> I wish pytype were so bleeding edge
[23:39:37] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:39:55] *** Joins: lbalhar (~lbalhar@2a00:102a:5002:8fc3:d083:fcd8:3b0e:8621)
[23:40:08] *** Joins: Pickchea (~private@user/pickchea)
[23:40:09] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[23:40:52] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:41:58] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[23:42:37] *** Quits: mekhami (~mekhami@2603-8080-1201-1400-581f-0234-dfa5-dae2.res6.spectrum.com) (Ping timeout: 240 seconds)
[23:43:53] *** Joins: Harlin (~DonQixote@75-163-148-159.clsp.qwest.net)
[23:43:53] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:44:06] *** Quits: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[23:44:21] *** Joins: dmvrtx (~dmvrtx@znc.dmvrtx.me)
[23:44:31] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[23:45:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 240 seconds)
[23:46:37] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[23:47:42] <TML> Chucara: I don't use pipenv myself, but based on a read of their documentation, the hash is based on the contents of the dependency, not on the URL the dependency is fetched from
[23:48:23] *** Quits: mharig (~mharig@181.188.143.133) (Quit: WeeChat 3.4)
[23:48:31] <TML> so you should be able to change the URL as long as the resource behind that URL is literally the same resource as behind the previous URL
[23:48:38] <Chucara> Ok. I understood it as it is a hash also of the source, but before variable substitution
[23:48:53] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 250 seconds)
[23:49:10] *** Joins: rms2511 (~rrrrrrrrr@107-138-155-103.lightspeed.rlghnc.sbcglobal.net)
[23:49:20] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 250 seconds)
[23:49:29] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[23:49:35] <TML> Well, that's not what the documentation seems to say, but again - I don't use it, I don't really know for sure. It could be incorrectly documented.
[23:50:15] *** Joins: rvalue (~rvalue@user/rvalue)
[23:52:27] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[23:52:36] <Chucara> Ok. I can't rule out a different issue, but it doesn't appear to be working.
[23:52:56] *** Quits: Memory (~user_name@user/memory) (Remote host closed the connection)
[23:53:57] *** Joins: Masterphi (~Masterphi@user/masterphi)
[23:54:47] <Chucara> pipenv lock --keep-outdated seems to be okish. It still change the dependencies, but does not upgrade.
[23:55:00] *** Joins: mekhami (~mekhami@2603-8080-1201-1400-581f-0234-dfa5-dae2.res6.spectrum.com)
[23:55:07] *** Joins: nhartman (~Nathan22@206.223.160.26)
[23:55:29] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[23:55:50] *** Quits: jdmark (~jdmark@user/jdmark) (Quit: Leaving)
[23:55:56] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:56:18] *** nhartman is now known as SaltHillStroller
[23:56:41] *** Joins: theo (~theo@user/theo)
[23:57:14] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[23:59:04] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[23:59:09] *** Quits: SaltHillStroller (~Nathan22@206.223.160.26) (Client Quit)
[23:59:21] *** Quits: Chucara (~Chucara@89.249.15.226) (Quit: Client closed)
[23:59:33] *** Joins: nhartman (~Nathan22@206.223.160.26)
[23:59:37] *** Joins: rigid- (~rigid@user/rigid)
[23:59:49] *** Quits: rigid (~rigid@user/rigid) (Ping timeout: 240 seconds)
