[00:02:17] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[00:02:48] <Croran> hnn
[00:02:52] <Croran> hmm*
[00:04:08] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[00:04:11] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[00:05:19] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:06:39] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[00:08:25] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:08:35] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[00:08:54] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3961:4cf9:16b:5bf0) (Ping timeout: 256 seconds)
[00:09:49] *** Joins: Akiva (~Akiva@user/Akiva)
[00:09:54] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[00:11:31] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Quit: Leaving)
[00:11:40] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[00:12:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[00:12:24] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:13:07] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[00:13:33] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:14:11] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: going to sleep (too late))
[00:16:05] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Remote host closed the connection)
[00:17:11] *** Quits: AMPed (~user@ip70-175-68-208.tc.ph.cox.net) (Ping timeout: 268 seconds)
[00:17:17] *** Joins: enoq_ (~enoq@2a05:1141:1f5:5600:c134:6a7a:9835:f219)
[00:21:45] *** Quits: kogepan (~kogepan@user/kogepan) (Remote host closed the connection)
[00:22:22] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[00:29:19] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[00:30:25] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3961:4cf9:16b:5bf0)
[00:31:05] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[00:31:21] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:34:03] *** Quits: enoq_ (~enoq@2a05:1141:1f5:5600:c134:6a7a:9835:f219) (Quit: enoq_)
[00:35:27] <sybariten> ok so i'm solving a course exercise and i thought i had done it corectly. We have automatic tests through mocha (?) to test it though, and there it fails. In your view, does this look allright?
[00:35:34] *** Quits: pmercado (~pmercado@186.107.34.136) (Quit: Konversation terminated!)
[00:36:56] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 268 seconds)
[00:37:38] <sybariten> the goal is to test two sets. I made my own helper script to import this script+function, and there i'm calling it like this for instance:  res = utils.exercise08(['3','4','5','6'], ['1', '2', '3','4','5','6','7','8']);
[00:38:12] <sybariten> this gives true and if i instead add '16' to the first set i get false. But i guess i am defining the function badly in some way
[00:39:24] <Slade> whats the lightweight way of passing data between siblings/unrelated components in react?
[00:39:47] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[00:40:57] <Alexendoo> Slade: moving the state up into the parent
[00:41:05] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:41:32] <Slade> and passing with props? or a hook i guess
[00:42:01] <varrg> sybariten, no way to tell without seeing code
[00:42:23] <Alexendoo> Slade: Yeah, passing down the value and/or a function to change it
[00:42:51] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[00:43:00] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[00:43:59] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:44:05] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[00:44:05] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[00:44:44] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:45:37] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:45:53] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[00:46:06] <sybariten> varrg: i understood that. I am a bit unsure how to post the actual test code, but was hoping that if i had done any obvious mistakes in the code i did post , that it would be visible
[00:46:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:46:31] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[00:46:48] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:47:26] <varrg> sybariten, https://pastebin.mozilla.org/ use this and give us the link. I'm not sure what the function should compare, so the calling statement don't help.
[00:48:15] <varrg> sybariten, since you're not getting any parseerror, the importing code is not important, just the function definition
[00:48:53] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4dcf:ccf:63f0:7501)
[00:48:59] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[00:49:00] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:49:02] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[00:49:12] <sybariten> varrg: ah you didnt see the original paste?
[00:49:18] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:49:28] *** Joins: Betal (~Betal@user/betal)
[00:49:28] <varrg> oh. No, I recently connected. Sorry
[00:49:47] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[00:50:05] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[00:50:29] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[00:51:06] *** Quits: Pajus (~Pajus@user/pajus) (Ping timeout: 268 seconds)
[00:51:18] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[00:52:18] <sybariten> varrg: aha! https://pastebin.com/6hE8qMfg
[00:52:24] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[00:52:55] *** Joins: Pajus (~Pajus@user/pajus)
[00:53:00] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[00:53:16] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:55:10] *** Quits: comatory_ (~ondrejsyn@185.51.250.206) (Ping timeout: 260 seconds)
[00:55:27] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:56:10] <varrg> sybariten, looks good
[00:56:36] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Remote host closed the connection)
[00:57:07] <sybariten> varrg: thank you for giving it a pair of new eyes!
[00:57:21] <sybariten> Or whatever the english expression would be tere
[00:58:02] <varrg> it checks if the first argument (A = ['3', '4', '5'...]) is a subset (is contained within) the second argument (B = ['1', '2', '3'...]), so for the statement you wrote earlier that gives you true, that's what it's supposed to. If you then, as you describe, add '16' to the first set, being A, it should and does give you false, since the second argument B does not contain 16
[00:58:11] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Remote host closed the connection)
[00:59:00] *** Joins: pulse (~pulse@user/pulse)
[00:59:01] <varrg> otoh, if you would add '16' to the second set, B, the function should still return true, because B is the superset
[00:59:42] <Donitz> n> Number('a', 16)
[00:59:44] <jellobot> (okay) NaN
[00:59:48] <Donitz> n> Number('0xa', 16)
[00:59:49] <jellobot> (okay) 10
[00:59:51] <Donitz> pff, why
[00:59:52] <sheetjs> what are A and B sybariten
[00:59:56] <sybariten> varrg: yup. You know what, i think i found some clues in how the function is actuallly tested now, from the... uh... "mocha files" . Unit test maybe i should say?  I'll paste something
[01:00:45] <sheetjs> if A and B are both arrays, you can just loop with an indexOf test
[01:00:57] <sybariten> sheetjs: well i mean we have an external script auto-correcting these exercises, its running with a mocha setup. So basically i am not completely aware of how the function is tested, they are feedin A and B into it somehow, but i found a clue now
[01:01:49] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 265 seconds)
[01:02:51] <sybariten> this is taken from the test files, and seems to show actual numbers being used. Maybe that gives an idea of the syntax being fed into the function i write?  https://pastebin.com/WU2t7p8j
[01:03:22] <sheetjs> so they are passing sets
[01:03:53] <sheetjs> or iterables or something
[01:04:17] <varrg> sybariten, your function should pass the first 2 tests. The third one seem to not deem the same Set as a subset to itself
[01:04:26] <varrg> so you'll need to check equality in your function
[01:05:29] <sheetjs> "proper" subset, so you need to check if mixedSet is the same length as superSet and superSet length is bigger than subSet
[01:06:01] <sybariten> Hmm i'm sorry, could you explain again please
[01:06:21] <varrg> sybariten, the last test compares A to A, which according to them should return false
[01:06:25] <sybariten> my test is enough, i should also make sure that the sets are not the same length (from the beginning) ?
[01:06:26] <varrg> your function returns true for that
[01:06:31] <sheetjs> the goal is to test whether A is a "proper subset" of B
[01:07:07] <sheetjs> a set is not a proper subset of itself
[01:07:20] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[01:08:27] *** Quits: Cyp (~cyp@213.237.85.9) (Remote host closed the connection)
[01:08:54] *** Joins: Cyp (~cyp@213.237.85.9)
[01:09:24] *** Quits: ShAnk (Onur@45.80.175.15) ()
[01:09:28] *** Joins: Akiva (~Akiva@user/Akiva)
[01:11:02] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[01:11:10] <sybariten> aaah okay yeah i see now that i get a true for two identical sets. Hm, i never thought in that direction.  So basically , if A is 1 2 3 and B is 1 2 3, you'd say that i
[01:11:30] <austincheney> some form of schema is the poper automated component to determine subsets and supersets in an automated way
[01:11:31] <sybariten> i'm trying to test if A is a subset of "itself" ?  They are really, the same?
[01:12:51] <sybariten> Well we're in math territory here. But basically A can't be a subset of B, if they have the same content
[01:14:28] <biberu> *proper* subset
[01:15:07] <sybariten> gotcha
[01:15:30] <biberu> sybariten: see the first paragraph here: https://en.wikipedia.org/wiki/Subset
[01:18:46] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:19:19] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4dcf:ccf:63f0:7501) (Quit: Leaving)
[01:20:22] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[01:20:36] <sybariten> biberu: yep thanks
[01:21:21] <sheetjs> every set is a subset of itself, hence the distinction
[01:21:29] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[01:21:36] <sheetjs> if you look at subset like a <= relation, proper subset is <
[01:22:46] <sybariten> i added an extra line with a test, not the most elegant way to do it maybe but i got the impression that it worked for my own testscript (which has two identical sets at the moment). It didnt work for my given test script though, strangely :  https://pastebin.com/sNAGc32s
[01:23:03] <sheetjs> &&
[01:23:07] <sybariten> does this need to be a single AND-tesst on one line?
[01:23:18] <sheetjs> the second assignment masks the result of the first
[01:23:44] <sheetjs> so you can either use &= (which gives the same result since false is 0 and true is 1)
[01:23:51] <sheetjs> or you can use &&
[01:24:04] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:24:24] <sheetjs> newer browsers also support &&=
[01:24:30] <sheetjs> n> var x = true; x &&= true; x
[01:24:31] <jellobot> (okay) true
[01:25:23] *** Quits: sbrothy (~sbrothy@192038129024.mbb.telenor.dk) (Quit: leaving)
[01:25:39] <sheetjs> ljharb: wheres the logical xor and logical xor assignment?
[01:25:46] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:26:05] <sybariten> it works! Small advancements! Thank you guys!
[01:26:11] <ljharb> nowhere, because JS doesn't have a logical xor
[01:26:17] <ljharb> && and || already existed
[01:27:18] *** Joins: comatory_ (~ondrejsyn@185.51.250.206)
[01:28:18] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[01:32:10] <varrg> sybariten, I take it you are studying data structures. You should take an evening to study control flow and other basic mechanisms. It won't take long and will aid you
[01:32:14] <varrg> !eloquent @ sybariten
[01:32:15] <jellobot> sybariten, Eloquent JavaScript is a comprehensive introductory Web-based book with examples and a built-in interpreter. http://eloquentjavascript.net/
[01:32:25] *** Quits: comatory_ (~ondrejsyn@185.51.250.206) (Ping timeout: 268 seconds)
[01:33:10] <jmdaemon> ooh we're getting cs in here
[01:34:05] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[01:40:18] *** Joins: sbrothy (~sbrothy@192038129024.mbb.telenor.dk)
[01:41:15] *** Quits: df00z (~df00z@rrcs-50-75-26-170.nys.biz.rr.com) (Ping timeout: 256 seconds)
[01:41:19] *** Quits: itok_ (sid418430@id-418430.ilkley.irccloud.com) ()
[01:41:54] *** Joins: pavonia (~user@user/siracusa)
[01:41:57] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[01:44:48] *** Joins: kill (~killown@user/killown)
[01:46:12] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[01:46:41] <ljharb> ew, shoot it outside
[01:47:00] <epolanski> say I have a script that "does something", and while doing something I want to read the stdio input or something how could I test it
[01:47:14] <ljharb> *shoo
[01:47:21] <ljharb> epolanski: not easily
[01:47:40] <epolanski> the only thing I can thing of is creating a bridge like a file
[01:47:44] <ljharb> epolanski: you could invoke it and then assert on the output, but it'll be messy
[01:47:50] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 268 seconds)
[01:47:54] <ljharb> epolanski: invoke it with spawn/exec, i mean
[01:48:17] <epolanski> not really following
[01:49:03] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[01:51:29] <ljharb> epolanski: like shell out to it
[01:51:48] <ljharb> so it runs in a different process
[01:51:55] <epolanski> like, suppose I want to launch a dev environment with vite or create react app
[01:51:59] <epolanski> and listen to it's output
[01:52:14] <epolanski> and read it from node
[01:52:15] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[01:57:10] <ljharb> you don't want to do either of those things, but let's ignore that for the sake of the discussion
[01:57:14] <ljharb> epolanski: you do it with spawn
[01:57:21] <ljharb> epolanski: `require('child_process').spawn`
[01:57:27] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[01:57:36] <ljharb> you can provide it streams for stderr and stdout, and then you can assert on those.
[01:57:58] <epolanski> I'll try to google for it
[01:58:17] *** Joins: onosendi (~onosendi@user/onosendi)
[01:59:14] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:59:23] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[02:05:09] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Quit: Leaving)
[02:05:30] *** Quits: sbrothy (~sbrothy@192038129024.mbb.telenor.dk) (Quit: leaving)
[02:06:29] *** Joins: sbrothy (~sbrothy@192038129024.mbb.telenor.dk)
[02:09:18] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:09:56] <ThePendulum> who's doing advent of code here?
[02:12:32] <onosendi> Is that like a daily coding challenge?
[02:12:36] <ThePendulum> yeah
[02:12:45] <ThePendulum> https://adventofcode.com/2021
[02:13:42] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:13:47] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[02:14:59] <ljharb> i was underwhelmed doing it in 2019 and haven't done it since
[02:15:11] <epolanski> why where you?
[02:15:21] <ljharb> ?
[02:15:24] <epolanski> I always felt the opposite, they overwhelm me after some days
[02:15:36] <ljharb> i meant underwhelmed with the experience
[02:15:38] <ljharb> it was very difficult
[02:15:44] <ljharb> the niche puzzliness of it combines with the competition in a way that makes it not fun for me
[02:16:06] <ThePendulum> definitely not joining the global competition, but we have a private leaderboard with #web which is quite fun
[02:16:18] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[02:17:20] <ThePendulum> they release a new one at 6am my time and I indeed don't like being competitive to the point every second counts
[02:18:42] <dodobrain> what are you guys talking about? some kind of compo / problems-to-solve thingo ?
[02:19:17] <ThePendulum> first year for me, difficulty has been all over the place, I got stuck on day 5 and day 8, but 9 to 13 seemed relatively easy
[02:19:23] <ThePendulum> dodobrain: https://adventofcode.com/2021
[02:19:28] *** Quits: harriet_tubman (~harriet_t@209.202.223.146) (Quit: Client closed)
[02:20:25] *** Joins: junebug (~junebug@2600:1700:3db0:2540:5de2:338c:5115:bcfb)
[02:21:12] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[02:23:50] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 256 seconds)
[02:24:25] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[02:28:44] <dodobrain> ThePendulum, can one not do this anonymously without logging in at all?
[02:29:08] <dodobrain> i just want to fiddle with it randomly
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:32] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:52] <ThePendulum> you can hide your ID from others at least
[02:31:32] <ThePendulum> the tasks themselves are public, so I guess you can try to complete the samples
[02:32:03] <ThePendulum> you only really need to log in to get your personal input, and submit and verify the result
[02:32:25] <ThePendulum> although, no, I guess part 2 is missing from the public one
[02:32:42] *** Quits: pizdets_ (~pizdets@183.182.111.164) (Ping timeout: 250 seconds)
[02:33:46] *** Joins: pizdets (~pizdets@183.182.114.96)
[02:34:49] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 250 seconds)
[02:35:05] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 256 seconds)
[02:35:23] <dodobrain> meh, i dont get it.. am i supposed to be able to do the first part of each day without logging in? that doesnt seem to be the case
[02:38:04] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[02:39:24] *** Quits: nomic (~nomic@51.52.78.152) (Quit: Leaving)
[02:40:03] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:42:13] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[02:45:50] <systemfault> We do it at work for fun, there's no actual competition
[02:46:11] <systemfault> I used it this year to improve my FP a bit more
[02:47:03] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Ping timeout: 268 seconds)
[02:47:30] <dodobrain> systemfault, are you able to participate without ever logging in?
[02:47:55] <systemfault> I'm logged in.. pretty sure you have to since the inputs are user-specific
[02:48:10] <systemfault> I just used my github.. like most people I guess
[02:52:09] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 252 seconds)
[02:53:59] <ThePendulum> dodobrain: well if you go to this page you see the first part and an example I think? https://adventofcode.com/2021/day/1
[02:54:03] <sbrothy> Hah. I viewed the pagesource (view-source:https://adventofcode.com/2021/about) to find out which font was used cause it looked like Lucida (and Im a nerd). cute msg.
[02:54:12] <ThePendulum> you just can't get a personal input
[02:54:25] <ThePendulum> but they give the answer for the example they give
[02:54:37] <ThePendulum> so you can replicate that if you really don't want to sign in with github
[02:54:56] <dodobrain> so that first part of day1 is an already solved problem?
[02:56:02] <dodobrain> i dont understand how it works then. it says theres 2 parts, when im not logged in it gives me the solution for the first part?
[02:56:50] <ThePendulum> it gives the expected result for the example input. it does that for part 2 as well, but you can only see part 1 when you're not logged in
[02:57:12] <ThePendulum> so on day 1 it gives you that list of numbers, and it tells you that there are 7 increasing values in that number
[02:57:22] <ThePendulum> so you can write code that takes that example input and spits out 7
[02:58:33] <ThePendulum> I reckon most people write their script based on the sample input before switching it out for their personal input when they know it works
[02:58:52] <ThePendulum> so they don't have to keep submitting the answer to know if their code is right
[03:00:39] <systemfault> If you're not careful, you may use an inefficient approach to solve the problem and it's going to work just fine with the example input... but when you're going to feed your algorithm the actual input, it's going to take a few years to complete :)
[03:00:56] <ThePendulum> *shivers* lanternfish
[03:01:01] <systemfault> Haha
[03:03:21] <systemfault> I liked today's puzzle (Dec 13th)
[03:03:33] <ThePendulum> yeah, pretty easy with a futile part 2, but fun
[03:04:06] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 265 seconds)
[03:07:35] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[03:10:31] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[03:10:56] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[03:12:43] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:13:29] *** Joins: jmd (~jmdaemon@142.207.63.60)
[03:14:08] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[03:19:27] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[03:21:14] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[03:22:08] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[03:22:59] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[03:23:31] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[03:24:03] *** Quits: jmd (~jmdaemon@142.207.63.60) (Quit: ZNC 1.8.2 - https://znc.in)
[03:25:54] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Ping timeout: 260 seconds)
[03:27:28] *** Joins: comatory_ (~ondrejsyn@185.51.250.206)
[03:29:10] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:7ea8:53b7:13:e6db) (Ping timeout: 260 seconds)
[03:29:30] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:5c9b:338b:bb4b:5779) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:30:22] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:31:58] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[03:32:01] *** Quits: sbrothy (~sbrothy@192038129024.mbb.telenor.dk) (Quit: leaving)
[03:32:01] *** Quits: comatory_ (~ondrejsyn@185.51.250.206) (Ping timeout: 250 seconds)
[03:33:13] *** Quits: junebug (~junebug@2600:1700:3db0:2540:5de2:338c:5115:bcfb) (Ping timeout: 252 seconds)
[03:34:49] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[03:35:48] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[03:35:50] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[03:36:00] *** Quits: taupiqueur (~taupiqueu@64.197.204.77.rev.sfr.net) (Ping timeout: 265 seconds)
[03:36:38] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Ping timeout: 260 seconds)
[03:41:30] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:43:38] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[03:45:28] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:45:29] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:45:29] *** Joins: wroathe (~wroathe@user/wroathe)
[03:46:59] *** Joins: nomic (~nomic@51.52.78.152)
[03:47:36] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:48:37] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[03:53:00] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[03:53:16] *** Joins: junebug (~junebug@2600:1700:3db0:2540:df08:dc56:f221:1f9e)
[03:53:18] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:53:24] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Ping timeout: 265 seconds)
[03:56:58] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[03:58:13] *** Quits: junebug (~junebug@2600:1700:3db0:2540:df08:dc56:f221:1f9e) (Ping timeout: 240 seconds)
[03:58:41] *** Joins: spreadsheet (~shang@user/spreadsheet)
[03:59:12] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3d49:7e22:bc04:92ab) (Ping timeout: 265 seconds)
[03:59:36] *** Quits: spreadsheet (~shang@user/spreadsheet) (Client Quit)
[04:01:41] *** Quits: Ducki (~ducki@user/ducki) (Ping timeout: 250 seconds)
[04:03:00] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:03:28] *** Joins: anton (anton@user/anton)
[04:07:32] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[04:08:51] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 250 seconds)
[04:08:56] *** Joins: Ducki (~ducki@p54bba51d.dip0.t-ipconnect.de)
[04:08:57] *** Quits: Ducki (~ducki@p54bba51d.dip0.t-ipconnect.de) (Changing host)
[04:08:57] *** Joins: Ducki (~ducki@user/ducki)
[04:12:08] *** Joins: sickdyd (~sickd@FL1-118-108-146-55.tky.mesh.ad.jp)
[04:13:46] *** Quits: Ducki (~ducki@user/ducki) (Ping timeout: 256 seconds)
[04:13:57] *** Joins: Ducki (~ducki@p54bba1ba.dip0.t-ipconnect.de)
[04:13:58] *** Quits: Ducki (~ducki@p54bba1ba.dip0.t-ipconnect.de) (Changing host)
[04:13:58] *** Joins: Ducki (~ducki@user/ducki)
[04:14:48] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[04:18:52] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:19:14] *** Joins: h11[m] (~h11matrix@2001:470:69fc:105::1:4ebd)
[04:22:31] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[04:23:26] *** Joins: KDev (~KDev@cpe-98-10-92-139.rochester.res.rr.com)
[04:24:12] <KDev> I'm trying to learn how to name/write better endpoints for my API. Reading this: https://www.restapitutorial.com/lessons/restfulresourcenaming.html I have some questions, it is formatted in multiple lines.
[04:24:16] <KDev> https://pastebin.mozilla.org/XF6X5tdG#L1
[04:28:27] *** Parts: dysfigured (~dfg@li490-89.members.linode.com) ()
[04:29:39] *** Joins: dfg (~dfg@user/dfg)
[04:30:12] *** Quits: h11[m] (~h11matrix@2001:470:69fc:105::1:4ebd) (Quit: Reconnecting)
[04:30:27] *** Joins: h11[m] (~h11matrix@2001:470:69fc:105::1:4ebd)
[04:34:17] *** Joins: iomari892 (~iomari891@102.91.5.79)
[04:35:10] *** Quits: pulse (~pulse@user/pulse) (Quit: Join our gamedev community https://indiedevs.net/)
[04:37:27] *** Quits: iomari891 (~iomari891@102.91.5.185) (Ping timeout: 250 seconds)
[04:39:32] *** Quits: src (~src@user/src) (Quit: Leaving)
[04:40:39] *** Joins: junebug (~junebug@2600:1700:3db0:2540:ecd1:179f:7aa:862b)
[04:41:59] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 250 seconds)
[04:42:36] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[04:43:39] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:44:37] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[04:44:46] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 260 seconds)
[04:47:51] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 250 seconds)
[04:49:09] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[04:50:50] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:6696:810:d467:3be1)
[04:52:28] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[04:52:33] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[04:52:34] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[04:52:54] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[04:53:34] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[04:55:27] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:03:23] *** Quits: realies (~realies@user/realies) (Quit: Ping timeout (120 seconds))
[05:03:51] *** Joins: realies (~realies@user/realies)
[05:04:46] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[05:06:04] *** Quits: realies (~realies@user/realies) (Client Quit)
[05:06:05] *** Quits: pez (~pez@user/pez) (Quit: bye..)
[05:06:19] *** Joins: pez (~pez@user/pez)
[05:06:31] *** Quits: rosseaux (~BeRo@2a00:1828:2000:859::2) (Remote host closed the connection)
[05:06:58] *** Joins: rosseaux (~BeRo@2a00:1828:2000:859::2)
[05:09:32] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 240 seconds)
[05:09:36] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[05:15:49] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 240 seconds)
[05:16:06] *** Joins: realies (~realies@user/realies)
[05:16:20] <Slade> reactjs. i'm thinking about making a hook creates a use state and exposes a setstate, so i can pass it to a bunch of data around.   is this a good design? any example patterns?
[05:20:39] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[05:20:41] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[05:20:51] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[05:20:53] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[05:21:12] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[05:21:25] *** Quits: jmft2_ (~jmft2@222.158.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[05:21:32] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[05:21:41] <b0nn> I'm trying to learn svelte and I've got what I think is a javascript misunderstanding - I don't understand why the alert on line 13 only has data from the previous loadData invocation
[05:21:45] <b0nn> https://bpa.st/OQ2A
[05:22:06] <b0nn> as in, the first time it will be empty, the second time the data will be from the first time, and so on
[05:23:27] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[05:25:06] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3961:4cf9:16b:5bf0) (Ping timeout: 256 seconds)
[05:29:47] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[05:32:57] *** Joins: Rockwood (~Rocky@user/rocky)
[05:34:13] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 252 seconds)
[05:34:49] *** Joins: jmft2 (~jmft2@222.158.115.87.dyn.plus.net)
[05:35:12] <EdFletcher> b0nn: Because response.json() is async and only returns it’s value in the .then you have there, but the alert is executed immediately after you call response.json()
[05:37:55] *** Joins: onosendi (~onosendi@user/onosendi)
[05:38:02] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[05:38:38] <onosendi> Has anything replaced react-helmet?
[05:39:47] *** Joins: pulse (~pulse@user/pulse)
[05:42:26] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[05:42:37] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[05:44:58] *** Quits: rosseaux (~BeRo@2a00:1828:2000:859::2) (Remote host closed the connection)
[05:45:26] *** Joins: rosseaux (~BeRo@2a00:1828:2000:859::2)
[05:45:32] *** Quits: pez (~pez@user/pez) (Ping timeout: 240 seconds)
[05:45:37] <onosendi> Looks like react-helmet-async
[05:45:40] *** Joins: pez_ (~pez@user/pez)
[05:47:07] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Ping timeout: 268 seconds)
[05:48:51] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[05:49:34] <b0nn> EdFletcher: Ahhh, that makes sense
[05:49:45] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:50:10] <b0nn> How do I hold until the download has completed, or a timeout has occurred?
[05:50:18] <sickdyd> what's the appropriate http status for a resource that was not found but it's ok that it's not found?
[05:50:44] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[05:50:46] <sickdyd> something that sometimes is available, sometimes is not, and in both cases I'm happy
[05:50:51] <sickdyd> I suppose 404
[05:52:21] <onosendi> If it's not found, 404. If it is found, depends.
[05:52:56] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[05:52:57] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[05:53:02] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[05:53:26] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:53:48] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[05:53:53] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 268 seconds)
[05:54:45] <sickdyd> onosendi: I'm using 200 for found
[05:56:12] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[05:56:17] <onosendi> sickdyd: If it's a GET request, that's good.
[05:58:58] <b0nn> ok, if I do it this way https://bpa.st/NQMA it's still out of sync
[06:01:42] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[06:02:06] <velix> Hi there. Please don't beat me, I'm not frontend guy. I'm grabbing a token, which changes every ~10 minutes (doesn't need to be accurate). And I want to give it to "fetch" via header. Can I do this using a callback/function in line 143 or do I need to do it in the fetchImage function (lines 12 ff.)? https://bpa.st/3VHQ
[06:02:13] <velix> beat = hit ;)
[06:03:21] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:03:39] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[06:08:02] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Ping timeout: 240 seconds)
[06:08:19] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[06:08:22] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[06:08:30] <velix> urgs: https://github.com/geotools/geotools/pull/3703
[06:08:38] <velix> oops, wrong channel, sorry
[06:08:57] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[06:09:32] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:11:23] <b0nn> Got it, thanks, needed to "await" the response.json()
[06:11:42] * b0nn had thought the await on the fetch was covering things
[06:16:23] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 252 seconds)
[06:25:06] <velix> hmmm. I can't find a solution for my problem :(
[06:25:55] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:27:02] *** Joins: comatory_ (~ondrejsyn@185.51.250.206)
[06:27:26] *** Quits: junebug (~junebug@2600:1700:3db0:2540:ecd1:179f:7aa:862b) (Ping timeout: 260 seconds)
[06:28:23] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[06:30:37] <velix> I think I really need React for this. Or rxJS
[06:31:38] *** Quits: comatory_ (~ondrejsyn@185.51.250.206) (Ping timeout: 260 seconds)
[06:32:29] <velix> Let's go through jQuery
[06:33:02] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 240 seconds)
[06:35:24] <velix> maybe eval works?
[06:35:50] <ljharb> ew, never use eval, ever
[06:35:58] <ljharb> velix: and yes you should be using react
[06:36:01] <velix> ljharb: eval isn't evil. only people who use eval wrong.
[06:36:45] <velix> ljharb: eval is inevitable, as Thanos was.
[06:37:13] <phantomotap> so only kinda sorta
[06:37:14] <phantomotap> ?
[06:40:52] <ljharb> velix: it is evil.
[06:40:57] <ljharb> velix: no matter what you use it for.
[06:41:05] <ljharb> velix: and thanos wasn't inevitable, since they undid it
[06:41:27] <velix> ljharb: just in this timeline.
[06:41:30] <velix> buuuttt
[06:41:48] <velix> that's another story
[06:44:47] <velix> damn, I'm 6 hours on this now :D
[06:44:54] <velix> 04:20 am :D
[06:46:49] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[06:47:11] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[06:47:18] <ljharb> velix: the sacred timeline, clearly you haven't seen loki
[06:48:04] *** Quits: pulse (~pulse@user/pulse) (Quit: Join our gamedev community https://indiedevs.net/)
[06:49:36] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 256 seconds)
[06:50:24] <velix> ljharb: I did.
[06:51:17] <velix> ljharb: But nobody tells us that this timeline is the right one. It was designed to lead to the one, who remains.
[06:51:25] <velix> and the chaos will start next week
[06:51:34] <velix> with or without Tobey
[06:51:43] <ljharb> velix: sure. but thanos isn't inevitable unless he happens in every timeline. so ipso facto you are wrong, and eval is evil
[06:51:59] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[06:51:59] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 250 seconds)
[06:52:11] *** Quits: relms (~relms@user/relms) (Quit: Gay)
[06:52:15] <velix> ljharb: resetting Thanos has created a new nexus event.
[06:52:55] *** Joins: relms (~relms@user/relms)
[06:53:28] <velix> ljharb: They just didn't care about that in "Loki". They allowed it.
[06:53:40] <velix> ljharb: to not break the canon, like Star Trek does all the time.
[06:54:41] <velix> Star Trek authors are running with machetes through the canon forest, slaughtering anything on their way.
[06:58:01] <velix> Okay, I'm posting the problem on freelancer.com now.
[06:58:10] <velix> Thanks for help.
[06:58:50] <KevinX> You can mimic a "safer" eval using a function constructor which adds scoping.
[06:59:08] <velix> KevinX: I don't even think that eval will help me.
[06:59:20] <velix> I'm just googling and trying to understand, if JS is capable to solve my problem at all.
[06:59:24] <KevinX> Will affect CSP though
[06:59:46] <KevinX> I didn't read the problem
[06:59:59] *** Joins: ferdna (~ferdna@user/ferdna)
[07:00:05] <velix> the Canadian Ski Patrol?
[07:01:55] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:03:40] <KevinX> I read your code. Is this really for auth?
[07:05:19] <velix> Yep.
[07:05:45] <velix> I mean, it works if I add the global variable directly to the fetch header.
[07:06:03] <velix> But I'm curious if I could do it in fetchOptions (at the bottom), too.
[07:06:05] <ljharb> KevinX: it's still bad
[07:06:10] <ljharb> KevinX: just less reckless
[07:07:05] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[07:09:17] <KevinX> Yeah, shouldn't be used without mucho consideration
[07:10:07] <KevinX> velix I mean, seems like fake auth to me? Are you padding in credentials to get the token? Then checking it on the resource server with a private key or soemthing secure?
[07:10:15] <KevinX> passing*
[07:11:59] <ljharb> or, you know, at all ever for any reason
[07:12:02] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:12:17] <velix> Why do I *always* have to explain the hole history and storx behind my actions?
[07:12:24] <velix> I just asked for syntax help.
[07:12:33] <velix> I really really don't get it.
[07:12:51] <velix> Do you tell your privacy life to people you randomly meet on street?
[07:13:09] <KevinX> velix because I'm not going to help someone setup fake auth
[07:13:25] <velix> KevinX: You don't have to. Thanks.
[07:14:05] <velix> I really can't believe how conceited some people are here.
[07:14:09] <ljharb> !xy @ velix
[07:14:10] <jellobot> velix, The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/
[07:14:10] <ljharb> that's why
[07:14:19] <velix> ljharb: XY Problem ???
[07:14:22] <ljharb> because literally every question without exception is an xy problem
[07:14:33] <velix> when you're too lazy to read the lines and my code. Then just ... be quiet, like all 500 other users in here.
[07:14:38] <ljharb> meaning, you're not asking the right thing, and the only way we can ferret out the right question is to ask for your motives
[07:14:41] *** Joins: nomic2 (~nomic@85.203.34.145)
[07:14:43] <velix> Add me to your ignore list and you'vel silence.
[07:14:48] <ljharb> it's not conceit, it's reality.
[07:15:14] <velix> ljharb: When somebody askes me for help, I'm helping him and I don't discuss if he really needs THAT kind of help.
[07:15:16] <ljharb> velix: anyways, you should be using react, but provide a codesandbox if you still have an issue
[07:15:19] <velix> That's not reality, that's bullshit.
[07:15:21] <ljharb> velix: well then that's not that helpful
[07:15:36] <ljharb> velix: if someone asks you how to cut down a tree with a feather, it's not helpful to answer them, it's helpful to show them an axe or a chainsaw
[07:15:37] * wroathe eats popcorn
[07:15:42] <dodobrain> lawl
[07:15:47] <velix> Ah no, I don't wanna help you to carry the bags, but I want to discuss why you filled them that much.
[07:15:54] <velix> I don't support people, filling their bags THAT heavy.
[07:15:59] <velix> I'm feeling sorry for you.
[07:16:01] <ljharb> velix: sure. because that might obviate the problem
[07:16:04] <velix> But I don't help you carrying it.
[07:16:10] <velix> That's not reality, that's asshole.
[07:16:14] <ljharb> velix: the best help is what the person needs, not what they ask for
[07:16:20] <ljharb> velix: nobody asks for what they need
[07:16:28] <velix> "KevinX> velix because I'm not going to help someone setup fake auth"
[07:16:51] <ljharb> velix: there's some henry ford (inventor of the car) quote, if i'd asked my customers what they wanted, they'd have said a faster horse
[07:16:55] <KevinX> I stand by my statement
[07:17:01] *** Quits: nomic (~nomic@51.52.78.152) (Ping timeout: 240 seconds)
[07:17:09] <ljharb> velix: the least helpful thing you can do for anyone ever is just to blindly answer their question
[07:17:12] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[07:17:21] <KevinX> But I'm willing to help you set it up properly, which is why I started inquiring
[07:17:23] <velix> Henry Ford? Ford left most of his vast wealth to the Ford Foundation
[07:17:36] <ljharb> velix: how is that relevant to the quote or topic
[07:17:47] <wroathe> Fake news. Henry Ford is still alive.
[07:17:49] <ljharb> leaving most of your wealth to a foundation is generally a compliment
[07:17:54] <velix> ljharb: See, that's the point. It's not relevant.
[07:17:59] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[07:18:01] <ljharb> giving it to your stupid children is generally not a compliment
[07:18:07] <velix> It's also not relevant, if it's a true or a mocked auth.
[07:18:08] <ljharb> velix: lol you're speaking gibberish
[07:18:19] <ljharb> velix: but it is ALWAYS relevant why someone is asking a question. always, without exception.
[07:18:33] <velix> I've asked a javascript syntax question and not "can you help me to design a trusty auth algorithm".
[07:18:45] <ljharb> sure. but your actual problem isn't "get the syntax right"
[07:18:53] <ljharb> it's "solve the underlying problem"
[07:19:04] <velix> if KevinX needs a working auth to get off better, then he simply shouldn't try to help.
[07:19:09] <ljharb> just because you think you know how to solve it doesn't mean that's the best way to do so
[07:19:34] <ljharb> velix: you're asking for free expert help. that means BY DEFINITION we are smarter than you. so arguing with us is pretty silly.
[07:19:41] <velix> Experts?
[07:19:44] <velix> :D
[07:19:44] <ljharb> velix: if you knew better than us, you wouldn't be asking for our help
[07:19:50] <velix> How many people in here are "experts"?
[07:19:54] <velix> :D
[07:20:05] <velix> Here are like 4 experts in this channel.
[07:20:13] <ThePendulum> I'm flattered
[07:20:22] <ljharb> velix: and?
[07:20:26] <KevinX> you'd be surprised who is in here
[07:20:29] <velix> I didn't ask for "expert" help.
[07:20:32] <velix> I asked for normal help.
[07:20:35] <wroathe> I'm an expert in convincing other people that I'm an expert
[07:20:45] <ljharb> velix: the only kind of help available is the kind that knows better than you, which is why you're asking
[07:20:50] <dodobrain> wroathe, so about henry ford...
[07:20:51] <dodobrain> :p
[07:20:59] <ljharb> velix: if you don't want opinions, google's right over there
[07:21:15] <velix> ljharb: I don't want opinions. This is #javascript
[07:21:21] <wroathe> dodobrain: I said what I said. The government just wants us to think that Henry Ford is dead.
[07:21:24] <ljharb> velix: yes, an irc channel, full of people
[07:21:26] <wroathe> dodobrain: But we know better.
[07:21:26] <velix> Not #rightwing or #leftwing or Telegram!
[07:21:35] <velix> This is about javascript.
[07:21:36] <dodobrain> velix, might i suggest spending some time in answering questions to arrive at an answer that you most likely need ?
[07:21:37] <ljharb> velix: if you don't want human editorializing, you're in the wrong place.
[07:21:41] <velix> Not about opinion of people.
[07:21:45] <ljharb> velix: no, it's about using javascript to solve problems
[07:21:48] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[07:21:52] <velix> I don't care about human feelings, sorry. This is about code!
[07:22:02] <ljharb> velix: feelings matter way more than code.
[07:22:13] <dodobrain> yes, and the questions put to you were about code and what is it trying to accomplish
[07:22:17] <ljharb> velix: and your code is shit if you're solving your problem the wrong way, which is why we're asking about the problem.
[07:22:24] <dodobrain> no one asked if you were feeling better when you wrote that code
[07:22:30] <velix> ljharb: My code is shit?
[07:22:32] <ljharb> velix: good code solves the problem properly. we can't get you good code if we don't know about the actual problem
[07:22:36] <velix> okay, out of your asshole.
[07:22:40] *** Parts: velix (~velix@user/velix) (Leaving)
[07:22:40] <ThePendulum> if you don't care about human feelings you don't have to write code
[07:22:43] <ljharb> lol
[07:22:45] <dodobrain> lawl
[07:24:06] <wroathe> I don't brain what's happening with that dude. He was in here claiming that he's got money to hire developers, and that he pays a pretty good rate for his area. Supposedly he keeps finding duds, and he himself is a dud. Bad situation.
[07:24:13] <dodobrain> maybe he was a robot from the future and he had feelings only for the processing unit executing his code :D
[07:24:52] <ljharb> wroathe: agreed
[07:27:13] *** nomic2 is now known as nomic
[07:28:14] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 268 seconds)
[07:37:07] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[07:42:45] <b0nn> I, and I say this with humility, and the knowledge that it's accurate, am a GENIUS
[07:45:01] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[07:45:19] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[07:48:03] *** Joins: comatory_ (~ondrejsyn@185.51.250.206)
[07:48:26] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:49:40] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Ping timeout: 256 seconds)
[07:52:06] <silly> velix got banned? looks like ban notices are not cached in the bouncer while i'm offline
[07:52:20] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[07:53:03] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:53:31] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[07:53:31] *** Quits: comatory_ (~ondrejsyn@185.51.250.206) (Ping timeout: 268 seconds)
[07:53:34] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:54:07] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:56:06] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[07:56:55] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[07:57:12] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[07:58:10] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[07:58:20] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[07:58:29] <pavonia> silly: Why do you think he got banned?
[07:59:14] <silly> lol, that i can see
[08:00:54] <silly> the ban notice is an integral part of the conversation. i feel sorry that it's not visible to me after reconnecting
[08:01:52] <pavonia> I don't see a ban anywhere
[08:02:19] <ljharb> nobody got banned
[08:02:21] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:02:24] <silly> oh
[08:02:24] <ljharb> silly: they just ragequit
[08:02:28] <silly> oic
[08:03:01] *** Joins: xardas (~xardas@149.233.51.127)
[08:03:07] <silly> he told me in pvt that he got banned
[08:04:05] <ljharb> silly: lol no, he's an idiot
[08:04:35] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 250 seconds)
[08:04:41] <silly> hehe yea
[08:05:23] <silly> no need for such an escalation
[08:06:21] <ljharb> anyways channel policy remains as it always was; an op's ban can only ever be reversed by that op
[08:06:32] <ljharb> so complaining to somebody else won't ever help, it can only hurt
[08:06:44] <silly> what's  the problem with regular http sessions?
[08:07:52] <b0nn> ljharb: hrm, WRT that policy, what happens if Op A bans someone, then leaves the channel, for whatever reason, does that make their bans permanent?
[08:08:59] <ljharb> b0nn: yep. altho in that rarest of occasions exceptions might be made
[08:09:28] <ljharb> b0nn: it's like, stupidly easy to simply not fuck up in the first place, so nobody needs to be bending over backwards to help someone who crossed a line
[08:09:54] <b0nn> hmm, the problem with ops is that their ruling can depend on more than just an individual's behaviour
[08:10:36] <b0nn> not, I hasten to add, that I know of a better solution
[08:13:34] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[08:14:19] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[08:14:32] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[08:15:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[08:15:56] <ljharb> b0nn: sure, that's true as well
[08:16:15] <ljharb> b0nn: but there's social pressure to be unbiased or to correct bias later. it's not been a problem, historically.
[08:18:00] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[08:22:37] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 265 seconds)
[08:22:59] *** Joins: i0e (~is0ke3@user/is0ke3)
[08:27:25] *** Quits: tarek58 (~tarek58@user/tarek58) (Remote host closed the connection)
[08:32:10] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[08:34:42] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3961:4cf9:16b:5bf0)
[08:34:55] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[08:37:55] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[08:38:13] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:39:07] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3961:4cf9:16b:5bf0) (Client Quit)
[08:39:36] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3961:4cf9:16b:5bf0)
[08:40:02] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 240 seconds)
[08:42:21] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:47:47] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Read error: Connection reset by peer)
[08:47:59] *** Joins: tccki_ (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[08:49:25] *** tccki_ is now known as tccki
[08:51:42] *** Joins: tccki_ (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[08:51:47] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Read error: Connection reset by peer)
[08:51:48] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:52:19] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[08:53:10] *** tccki_ is now known as tccki
[08:56:24] *** Joins: gde33 (~gde33@109.38.157.41)
[08:57:01] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 250 seconds)
[08:57:21] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[08:57:34] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[08:59:25] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:01:21] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Ping timeout: 268 seconds)
[09:01:26] *** Quits: nomic (~nomic@85.203.34.145) (Quit: Leaving)
[09:01:49] *** Joins: nomic (~nomic@85.203.34.145)
[09:03:13] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 268 seconds)
[09:04:41] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[09:05:13] *** Quits: gde33 (~gde33@109.38.157.41) (Read error: Connection reset by peer)
[09:08:13] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:08:26] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[09:10:26] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[09:14:30] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[09:15:10] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[09:15:39] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 250 seconds)
[09:16:45] *** Quits: Talon_ (Talon@172.77.142.59) (Ping timeout: 265 seconds)
[09:17:46] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[09:18:33] *** Joins: audiocat (~audio@user/audio)
[09:18:38] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[09:20:31] *** Quits: camelCase (~camelCase@user/camelCase) (Quit: Leaving)
[09:20:38] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:22:54] *** Joins: mexen (uid495612@user/mexen)
[09:25:42] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[09:26:58] *** Joins: comatory_ (~ondrejsyn@185.51.250.206)
[09:31:27] *** Quits: comatory_ (~ondrejsyn@185.51.250.206) (Ping timeout: 250 seconds)
[09:32:30] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[09:33:52] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:34:32] <cthulchu> my wonderful folks, how do I find whether CSP allows third party scripts to execute evals?
[09:36:07] *** Quits: azizLIGHT (~azizLIGHT@user/azizlight) (Ping timeout: 256 seconds)
[09:37:20] *** Joins: azizLIGHT (~azizLIGHT@user/azizlight)
[09:37:22] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 260 seconds)
[09:38:06] <ljharb> cthulchu: if you have any CSP you probably disallow that
[09:38:11] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Ping timeout: 250 seconds)
[09:38:37] <cthulchu> yes, gotcha. So I disable it by default, however, I can allow it explicitly for a specific script, right
[09:38:49] <cthulchu> using the unsafe-eval
[09:39:19] <ljharb> cthulchu: you can, but why would you want to
[09:39:29] <cthulchu> for gTM
[09:39:31] <cthulchu> *GTM
[09:39:42] <ljharb> ew, google tag manager is terrible
[09:39:47] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[09:39:48] <cthulchu> and Launch. And any other tag management system
[09:39:53] <cthulchu> why is it terrible?
[09:39:54] <ljharb> you're basically handing control of your entire website to both google, and also to the incompetent PMs who can edit it
[09:40:06] <ljharb> nothing should be on your website unless engineers have reviewed and deployed it
[09:40:09] <cthulchu> first, PMs should never have access to it.
[09:40:20] <cthulchu> analytics developers should be the only one to edit it
[09:40:20] <ljharb> true enough
[09:40:24] <cthulchu> or the front-end devs
[09:40:34] <ljharb> what is it you're using GTM for?
[09:40:45] <cthulchu> for tracking mostly. All kinds of it.
[09:40:59] <cthulchu> front-end data rounting, too, sometimes.
[09:41:06] <ljharb> google analytics does that
[09:41:13] <cthulchu> no, not even close
[09:41:15] <ljharb> data routing is something your own code should be owning
[09:41:18] <cthulchu> GA is one of GTM's clients
[09:41:21] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[09:41:44] <ljharb> lol what
[09:41:46] <ljharb> GA predates GTM
[09:42:13] <cthulchu> so like, marketing buys traffic from facebook to our site. They pay, say, $100k/month to FB for that traffic. Now they want to know what traffic performs well and what traffic they should stop buying. Facebook says: hey! I have this api where you can send me info on every user I send to you!
[09:42:35] <ljharb> none of that sounds like something you want on your site
[09:42:44] <cthulchu> why?
[09:42:49] <cthulchu> where else would you have it?
[09:42:53] <cthulchu> on backend?
[09:42:54] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[09:42:54] <ljharb> sending info to facebook?
[09:42:56] <ljharb> nowhere
[09:43:13] <cthulchu> yes, where are you gonna send info to facebook from?
[09:43:20] <ljharb> nowhere. why would you want to send them info
[09:43:33] <ljharb> at any rate, you're asking how to enable eval (something that is horrifically bad and nothing should ever use for any reason) so you can have more ad tracking code (something that will incur GDPR and privacy obligations) on your site, and violate your users' privacy
[09:43:54] <cthulchu> it won't violate the privacy
[09:43:54] <ljharb> you can certainly do it by modifying your CSP settings, which is googleable. but you shouldn't.
[09:44:17] <cthulchu> I mean, I can do without it. I guess. But it sucks to not being able to code in GTM
[09:44:27] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Ping timeout: 250 seconds)
[09:44:33] <cthulchu> and it would mean a lot more work for FE
[09:44:39] <cthulchu> cuz all I can't code, they will code for me
[09:44:41] <ljharb> sometimes the right thing is a harder thing
[09:44:50] <cthulchu> I do agree with you
[09:45:11] <cthulchu> but FE will hang themselves if they have to do this much stuff that they don't want to understandf
[09:45:17] <cthulchu> also, it will be very expensive
[09:45:19] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[09:45:32] <cthulchu> cuz what I'm doing in an hour, a typical FE dev would do a few days
[09:45:45] <cthulchu> unless they embrace analytics and marketing, lol
[09:45:52] <cthulchu> they won't.
[09:46:03] <cthulchu> cuz FE is much more fun than this
[09:47:10] <cthulchu> anyhow, it becomes a business problem and not mine. I can do a lot without eval, but not everything. Asking devs to sanitize or normalize the data they're exposing in state just so that I could consume it without JS will be... uh... I try not to waste FE time.
[09:47:25] *** Joins: i0e (~is0ke3@user/is0ke3)
[09:49:13] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[09:51:29] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Read error: Connection reset by peer)
[09:55:11] *** Joins: tccki (~tccki@box.webslate.co.nz)
[09:55:31] *** Quits: nomic (~nomic@85.203.34.145) (Quit: Leaving)
[09:56:45] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 252 seconds)
[09:57:46] *** Joins: tccki_ (~tccki@box.webslate.co.nz)
[09:59:48] *** Joins: summersault (~summersau@179.221.251.16)
[10:00:47] *** Joins: julien (~julien@17.128.136.88.rev.sfr.net)
[10:00:47] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 252 seconds)
[10:00:48] *** tccki_ is now known as tccki
[10:00:52] *** Parts: julien (~julien@17.128.136.88.rev.sfr.net) ()
[10:01:08] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[10:02:50] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:07:11] *** Joins: nomic (~nomic@51.52.78.152)
[10:09:03] *** Joins: tccki_ (~tccki@box.webslate.co.nz)
[10:10:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[10:10:34] *** Joins: Akiva (~Akiva@user/Akiva)
[10:11:54] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 260 seconds)
[10:11:55] *** tccki_ is now known as tccki
[10:12:09] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:13:02] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[10:14:50] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:16:33] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[10:17:49] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[10:18:02] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[10:20:10] *** Joins: tarek58 (~tarek58@user/tarek58)
[10:21:52] *** Joins: nomic2 (~nomic@85.203.34.35)
[10:22:05] *** Joins: hemstock (~hemstock@194.59.250.234)
[10:24:02] *** Quits: nomic (~nomic@51.52.78.152) (Ping timeout: 240 seconds)
[10:24:57] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:29:31] *** Joins: ingo (~ingo@user/ingo)
[10:31:03] *** nomic2 is now known as nomic
[10:33:39] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[10:35:59] *** Quits: iffraff (~quassel@2605:a601:aae0:4a00:64d6:2e1a:7bf3:85f0) (Ping timeout: 252 seconds)
[10:36:57] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 268 seconds)
[10:37:33] *** Quits: cisme_ (~cisme_@108-218-190-101.lightspeed.frsnca.sbcglobal.net) (Ping timeout: 250 seconds)
[10:38:07] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:38:49] *** Joins: cisme_ (~cisme_@108-218-190-101.lightspeed.frsnca.sbcglobal.net)
[10:39:47] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:39:53] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[10:42:50] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:43:34] *** Quits: nomic (~nomic@85.203.34.35) (Remote host closed the connection)
[10:46:13] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:47:11] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:47:43] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 252 seconds)
[10:49:11] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[10:49:16] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[10:49:58] *** Quits: sickdyd (~sickd@FL1-118-108-146-55.tky.mesh.ad.jp) (Read error: No route to host)
[10:51:16] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:51:36] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[10:53:35] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 252 seconds)
[10:54:28] *** Joins: sickdyd (~sickd@FL1-118-108-146-55.tky.mesh.ad.jp)
[10:54:56] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:9067:6b49:7f00:dbc9)
[10:55:15] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:55:49] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[10:56:39] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[10:57:55] *** Joins: comatory_ (~ondrejsyn@185.176.138.241)
[11:09:46] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[11:10:07] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[11:11:27] *** Joins: EdFletcher (~PKD@user/edfletcher)
[11:11:56] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:17:47] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[11:19:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[11:21:19] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:21:36] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:29:53] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 252 seconds)
[11:31:19] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[11:33:11] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:35:12] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[11:35:37] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[11:36:55] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:49:14] *** Joins: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net)
[11:49:20] *** Joins: tccki_ (~tccki@box.webslate.co.nz)
[11:50:57] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[11:51:25] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (Remote host closed the connection)
[11:52:02] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[11:52:15] *** Quits: Fozzworth (~Fozzworth@user/fozzworth) (Ping timeout: 252 seconds)
[11:52:20] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:52:37] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 252 seconds)
[11:52:38] *** tccki_ is now known as tccki
[11:53:38] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 260 seconds)
[11:56:57] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3961:4cf9:16b:5bf0) (Quit: Client closed)
[11:57:19] *** Joins: jazzy (~jaziz@user/jaziz)
[12:02:52] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99)
[12:04:08] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[12:05:49] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[12:06:18] *** Joins: Naan` (~Naan@user/naan)
[12:09:23] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[12:09:25] *** Joins: Talon (~Talon@172.77.112.56)
[12:09:49] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Ping timeout: 240 seconds)
[12:16:54] *** Joins: tex (~super@user/dix)
[12:19:21] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[12:20:12] *** Joins: Guest98 (~Guest98@188.120.103.97)
[12:23:23] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:26:45] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[12:29:35] *** Joins: ccapndave (~ccapndave@80-218-93-134.dclient.hispeed.ch)
[12:37:31] <DnzAtWrk> https://github.com/romanoide/deltae
[12:37:35] <DnzAtWrk> who do people do this
[12:37:40] <DnzAtWrk> write super thin wrappers around real libraries
[12:37:59] <DnzAtWrk> https://github.com/zschuessler/DeltaE
[12:38:14] *** Quits: Guest98 (~Guest98@188.120.103.97) (Quit: Client closed)
[12:38:57] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[12:39:40] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[12:39:55] *** Quits: mat001 (~mat001@c-71-202-248-112.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[12:40:38] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[12:41:21] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:42:33] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[12:44:02] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Ping timeout: 240 seconds)
[12:45:02] *** Joins: taupiqueur (~taupiqueu@176.246.204.77.rev.sfr.net)
[12:45:48] *** Joins: jmd (~jmdaemon@142.207.63.60)
[12:46:07] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[12:47:20] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:52:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[12:54:47] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:55:55] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:56:16] *** Joins: Portugol9 (~Portugol9@user/portugol9)
[12:58:18] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[12:58:34] *** Quits: jmd (~jmdaemon@142.207.63.60) (Quit: ZNC 1.8.2 - https://znc.in)
[12:59:46] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[13:01:00] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[13:01:55] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[13:02:54] *** Joins: kogepan (~kogepan@user/kogepan)
[13:04:11] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:05:15] *** Quits: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[13:08:35] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[13:08:55] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[13:08:55] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.28)
[13:08:59] *** Joins: jonifen_ (~jonifen@user/jonifen)
[13:09:02] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[13:09:04] *** Quits: Alina-ma- (~Alina-mal@37.252.80.4) (Remote host closed the connection)
[13:09:17] *** Joins: vbgunz_ (~vbgunz@35.141.71.47)
[13:09:27] *** Joins: Portugol9_ (~Portugol9@user/portugol9)
[13:09:41] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Quit: ZNC 1.8.2 - https://znc.in)
[13:10:20] *** Joins: doc|home (~doc@user/doc)
[13:10:28] *** Joins: buu_ (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[13:10:38] *** Joins: teear_ (~teear@cbharraste.eu)
[13:10:43] *** Joins: ericP_ (~eric@jay.w3.org)
[13:10:49] *** Joins: Alina-ma- (~Alina-mal@37.252.80.4)
[13:10:53] *** Joins: Bish_ (~arne@b2b-37-24-1-41.unitymedia.biz)
[13:10:59] *** Joins: lockdown_ (~lockdown@ec2-3-236-147-4.compute-1.amazonaws.com)
[13:11:05] *** Joins: fakuve2 (~fakuve@192.210.243.250)
[13:11:09] *** Joins: erry_ (~erry@errietta.me)
[13:11:18] *** Joins: hassoon_ (hassoon@grape.ircnow.org)
[13:11:18] *** Joins: tfe_ (~tfe@ns328351.ip-37-187-113.eu)
[13:11:22] *** Joins: g2anj_ (~v@39.112.227.198)
[13:11:34] *** Server sets mode: +Ccntz 
[13:11:45] *** Joins: FlannelKing (~flannel@cpe-76-175-193-181.socal.res.rr.com)
[13:11:46] *** Joins: ox1eef_ (~0x1eef@user/rg)
[13:11:55] *** Joins: Linkandzelda_ (~Linkandze@cloudirc.laz.li)
[13:12:15] *** Joins: Nitrousoxide_ (~msdos@user/nitrousoxide)
[13:12:21] *** Quits: hemstock (~hemstock@194.59.250.234) (Ping timeout: 268 seconds)
[13:12:25] *** Joins: VX (~sunilaiya@user/vectorx)
[13:13:13] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[13:13:13] *** Joins: mikeputnam1 (~mikeputna@wilug/mikeputnam)
[13:13:13] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[13:14:42] *** Joins: CuriousErnestBri (~CuriousEr@user/curiousernestbro)
[13:14:45] *** Joins: dka_ (~code-is-a@ns3059207.ip-193-70-33.eu)
[13:15:03] *** Joins: tabakhase__ (tabakhase@user/tabakhase)
[13:15:42] *** Quits: Alina-ma- (~Alina-mal@37.252.80.4) (Remote host closed the connection)
[13:15:52] *** Joins: Scarecr0- (scarecr0w@user/scarecr0w)
[13:16:43] *** Quits: kogepan (~kogepan@user/kogepan) (*.net *.split)
[13:16:43] *** Quits: Portugol9 (~Portugol9@user/portugol9) (*.net *.split)
[13:16:43] *** Quits: ccapndave (~ccapndave@80-218-93-134.dclient.hispeed.ch) (*.net *.split)
[13:16:44] *** Quits: EdFletcher (~PKD@user/edfletcher) (*.net *.split)
[13:16:44] *** Quits: cisme_ (~cisme_@108-218-190-101.lightspeed.frsnca.sbcglobal.net) (*.net *.split)
[13:16:44] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[13:16:44] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (*.net *.split)
[13:16:44] *** Quits: jmft2 (~jmft2@222.158.115.87.dyn.plus.net) (*.net *.split)
[13:16:44] *** Quits: KDev (~KDev@cpe-98-10-92-139.rochester.res.rr.com) (*.net *.split)
[13:16:44] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (*.net *.split)
[13:16:44] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (*.net *.split)
[13:16:44] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[13:16:44] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (*.net *.split)
[13:16:44] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[13:16:44] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (*.net *.split)
[13:16:44] *** Quits: Flannel (~flannel@cpe-76-175-193-181.socal.res.rr.com) (*.net *.split)
[13:16:44] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (*.net *.split)
[13:16:44] *** Quits: erry (~erry@errietta.me) (*.net *.split)
[13:16:44] *** Quits: polyrob (~rob@user/polyrob) (*.net *.split)
[13:16:44] *** Quits: vbgunz (~vbgunz@35.141.71.47) (*.net *.split)
[13:16:44] *** Quits: w0ng (~w0ng@103.1.212.92) (*.net *.split)
[13:16:44] *** Quits: darkstardevx (~darkstard@50.39.115.145) (*.net *.split)
[13:16:44] *** Quits: codingcampbell (~codingcam@user/codingcampbell) (*.net *.split)
[13:16:44] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (*.net *.split)
[13:16:44] *** Quits: Croran (~Croran@71.231.214.173) (*.net *.split)
[13:16:44] *** Quits: hassoon (hassoon@user/hassoon) (*.net *.split)
[13:16:44] *** Quits: Axy (~Axy@user/axy) (*.net *.split)
[13:16:44] *** Quits: nexgen (~nexgen@li614-178.members.linode.com) (*.net *.split)
[13:16:44] *** Quits: Bish (~arne@b2b-37-24-1-41.unitymedia.biz) (*.net *.split)
[13:16:44] *** Quits: g2anj (~v@39.112.227.198) (*.net *.split)
[13:16:44] *** Quits: c4017w_ (~c4017@209.52.68.8) (*.net *.split)
[13:16:44] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (*.net *.split)
[13:16:44] *** Quits: pupskuchen (~pupskuche@user/pupskuchen) (*.net *.split)
[13:16:44] *** Quits: kapil (~kapil@o-k.website) (*.net *.split)
[13:16:44] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (*.net *.split)
[13:16:44] *** Quits: ox1eef (~0x1eef@user/rg) (*.net *.split)
[13:16:45] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[13:16:45] *** Quits: PigDude (~PigDude@159.203.16.199) (*.net *.split)
[13:16:45] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (*.net *.split)
[13:16:45] *** Quits: mishiranu (~mishiranu@78.129.171.229) (*.net *.split)
[13:16:45] *** Quits: doc (~doc@user/doc) (*.net *.split)
[13:16:45] *** Quits: eqw (~eqw@31.134.178.99) (*.net *.split)
[13:16:45] *** Quits: b0nn (~shane@user/b0nn) (*.net *.split)
[13:16:45] *** Quits: foo (~foo@user/foo/x-8763512) (*.net *.split)
[13:16:45] *** Quits: xisop (~xisop@bnull.net) (*.net *.split)
[13:16:45] *** Quits: azazul (~teresko@li1898-140.members.linode.com) (*.net *.split)
[13:16:45] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[13:16:45] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[13:16:45] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (*.net *.split)
[13:16:45] *** Quits: davve (davve@bsd.douchedata.com) (*.net *.split)
[13:16:45] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (*.net *.split)
[13:16:45] *** Quits: tabakhase (~tabakhase@user/tabakhase) (*.net *.split)
[13:16:45] *** Quits: Joel (~jjshoe@user/joel) (*.net *.split)
[13:16:45] *** Quits: fakuve1 (~fakuve@192.210.243.250) (*.net *.split)
[13:16:45] *** Quits: lockdown (~lockdown@ec2-3-236-147-4.compute-1.amazonaws.com) (*.net *.split)
[13:16:45] *** Quits: LIERO (~no@user/liero) (*.net *.split)
[13:16:45] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[13:16:45] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (*.net *.split)
[13:16:45] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (*.net *.split)
[13:16:45] *** Quits: teear (~teear@cbharraste.eu) (*.net *.split)
[13:16:45] *** Quits: ericP (~eric@jay.w3.org) (*.net *.split)
[13:16:45] *** Quits: jonifen (~jonifen@user/jonifen) (*.net *.split)
[13:16:45] *** Quits: mr_ab (~nobody@bnc.ab.hl9.net) (*.net *.split)
[13:16:45] *** Quits: tfe (~tfe@ns328351.ip-37-187-113.eu) (*.net *.split)
[13:16:45] *** Quits: xsznix9 (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net) (*.net *.split)
[13:16:45] *** Quits: mikeputnam (~mikeputna@wilug/mikeputnam) (*.net *.split)
[13:16:45] *** Quits: VectorX (~sunilaiya@user/vectorx) (*.net *.split)
[13:16:45] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[13:16:46] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[13:16:46] *** Quits: _var (~kdy@kiana.kdy.ch) (*.net *.split)
[13:16:46] *** codingcampbell7 is now known as codingcampbell
[13:16:46] *** VX is now known as VectorX
[13:16:46] *** polyrob_ is now known as polyrob
[13:16:46] *** Scarecr0- is now known as Scarecr0w
[13:16:46] *** kdy is now known as _var
[13:16:46] *** mr_ab9 is now known as mr_ab
[13:16:46] *** xsznix95 is now known as xsznix9
[13:16:56] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[13:17:00] *** Portugol9_ is now known as Portugol9
[13:18:42] *** Joins: pavonia (~user@user/siracusa)
[13:18:47] *** tabakhase__ is now known as tabakhase
[13:19:46] <sickdyd> I have a form that allows users to upload files and my endpoint that creates a ticket on a third party website. How can I pipe the uploaded files directly on the third party server without saving them on my server?
[13:21:25] *** Quits: Portugol9 (~Portugol9@user/portugol9) (Ping timeout: 240 seconds)
[13:21:51] *** Joins: kogepan (~kogepan@user/kogepan)
[13:21:51] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[13:21:51] *** Joins: jmft2 (~jmft2@222.158.115.87.dyn.plus.net)
[13:21:51] *** Joins: Croran (~Croran@71.231.214.173)
[13:21:51] *** Joins: w0ng (~w0ng@103.1.212.92)
[13:21:51] *** Joins: Axy (~Axy@user/axy)
[13:21:51] *** Joins: eqw (~eqw@31.134.178.99)
[13:21:51] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[13:21:51] *** Joins: pupskuchen (~pupskuche@user/pupskuchen)
[13:21:51] *** Joins: kapil (~kapil@o-k.website)
[13:21:51] *** Joins: b0nn (~shane@user/b0nn)
[13:21:51] *** Joins: PigDude (~PigDude@159.203.16.199)
[13:21:51] *** Joins: mishiranu (~mishiranu@78.129.171.229)
[13:21:51] *** Joins: foo (~foo@user/foo/x-8763512)
[13:21:51] *** Joins: xisop (~xisop@bnull.net)
[13:21:51] *** Joins: azazul (~teresko@li1898-140.members.linode.com)
[13:21:51] *** Joins: niko (~niko@libera/staff/niko)
[13:22:30] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[13:22:57] *** Joins: Colt (~Colt@user/colt)
[13:23:08] *** Joins: nexgen (~nexgen@li614-178.members.linode.com)
[13:23:26] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[13:23:33] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[13:25:31] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Quit: ZNC 1.8.2 - https://znc.in)
[13:26:07] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[13:32:24] *** Joins: s1b1 (~s1b1@user/s1b1)
[13:49:12] *** Joins: keypusher (keypusher@user/keypusher)
[13:54:42] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[13:55:08] *** Quits: trog (~trog@user/trog) (Quit: WeeChat 2.8)
[14:06:07] *** Joins: nomic (~nomic@85.203.46.65)
[14:07:30] *** Quits: taupiqueur (~taupiqueu@176.246.204.77.rev.sfr.net) (Quit: taupiqueur)
[14:10:56] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[14:12:38] *** Joins: OhTheCode (~OhTheCode@60-241-11-184.static.tpgi.com.au)
[14:14:20] *** Joins: jazzy2 (~jaziz@user/jaziz)
[14:14:28] *** jazzy is now known as Guest8217
[14:14:39] *** jazzy2 is now known as jazzy
[14:15:26] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:15:51] *** Quits: Guest8217 (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[14:33:58] *** Joins: McQuestionable (~McQuestio@82.8.188.24)
[14:42:49] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[14:48:38] *** Quits: sickdyd (~sickd@FL1-118-108-146-55.tky.mesh.ad.jp) (Ping timeout: 260 seconds)
[14:51:02] *** Joins: va5c0 (~vasco.nun@2001:818:e35b:6300:1a36:4b51:f4e7:d679)
[14:57:03] *** Quits: McQuestionable (~McQuestio@82.8.188.24) (Ping timeout: 252 seconds)
[14:57:39] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:59:48] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:2d80:8056:360:78d9)
[15:00:37] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:55e5:fdfd:ed49:6a99) (Ping timeout: 240 seconds)
[15:04:39] *** Quits: va5c0 (~vasco.nun@2001:818:e35b:6300:1a36:4b51:f4e7:d679) (Quit: WeeChat 3.0)
[15:06:07] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:98ec:5ebe:960a:f1a9)
[15:10:49] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[15:11:43] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 252 seconds)
[15:12:29] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:98ec:5ebe:960a:f1a9) (Ping timeout: 250 seconds)
[15:14:26] *** Joins: thiras (~thiras@user/thiras)
[15:15:01] *** Quits: KDev2 (~KDev@cpe-98-10-92-139.rochester.res.rr.com) (Ping timeout: 240 seconds)
[15:18:02] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[15:21:18] *** Quits: Croran (~Croran@71.231.214.173) (Ping timeout: 256 seconds)
[15:22:21] *** Joins: velix (~velix@user/velix)
[15:22:27] <velix> ljharb KevinX: Sorry.
[15:22:50] <velix> Javascript just makes me agressive.
[15:23:13] <velix> It's an evil, soulless language.
[15:23:48] *** Joins: D1nger (~Booster2o@91.183.83.5)
[15:26:23] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Ping timeout: 252 seconds)
[15:26:54] *** Parts: Camilo (~hugh@host-92-1-126-125.as13285.net) ()
[15:30:39] *** Quits: D1nger (~Booster2o@91.183.83.5) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[15:30:55] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[15:33:12] *** Joins: Croran (~Croran@71.231.214.173)
[15:34:57] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:36:02] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-55fc-484e-a347-decf.res6.spectrum.com)
[15:37:21] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3484:b12c:602f:bc2a)
[15:39:26] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[15:40:29] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[15:41:23] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-55fc-484e-a347-decf.res6.spectrum.com) (Quit: Client closed)
[15:42:09] *** Joins: pulse (~pulse@user/pulse)
[15:45:43] <DnzAtWrk> why do I so seldom see the true coalesce operator as opposed to falsy
[15:45:48] <DnzAtWrk> obviously it's the right way to do it
[15:47:13] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[15:48:04] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[15:50:49] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[15:54:37] *** Quits: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[15:55:01] *** Joins: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net)
[15:59:32] *** Joins: D4mned (~D1mned@212.101.251.27)
[16:00:07] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[16:04:17] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Ping timeout: 250 seconds)
[16:11:32] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[16:13:51] *** Quits: iomari892 (~iomari891@102.91.5.79) (Read error: Connection reset by peer)
[16:15:53] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[16:20:24] *** Joins: mohab (~mohab@45.243.92.35)
[16:20:54] *** Quits: mohab (~mohab@45.243.92.35) (Client Quit)
[16:21:09] *** Joins: mohab (~mohab@45.243.92.35)
[16:24:32] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[16:25:24] <mexen> Angular question really - is 700MB a normal size for an angular project? One of the devs here... his code base is that large and his list of dependencies is, well insane. I have never used Angular but I noticed his codebase size while helping him set up git... that cannot be an OK size? He must be doing something wrong, right?
[16:26:24] <D4mned> well node_module file
[16:26:36] <D4mned> i think 700mb is big
[16:26:54] <D4mned> never used angular but its probably the node_module files
[16:27:04] <D4mned> you need to add that to your gitignore
[16:28:33] <D4mned> node_module folder**
[16:28:49] <D4mned> +s
[16:28:52] <D4mned> lol
[16:28:55] <jaawerth> mexen: that most likely involves devdeps as well, which include build tooling and the like. that stuff can add up
[16:29:08] <jaawerth> it wouldn't be what actually ships with the built app though, just what you need to build it
[16:30:07] <mexen> yes the node_modules folder... yes, I guided him to add to gitignore and update his readme.... I was just surprised to see that folder that big is all LOL
[16:30:13] <mexen> Ok that clears it up
[16:31:41] *** Joins: src (~src@user/src)
[16:32:10] <mexen> This is my first time learning javascript proper... I plan on learning typescript next and picking up a framework. I am more inclined towards react myself but boss man wants us to use angular (+ spring boot at the back)
[16:33:10] <D4mned> cool
[16:33:16] <D4mned> good luck!
[16:33:42] <mexen> D4mned: TY :)
[16:35:00] *** Parts: LIERO_ (~no@vmi473477.contaboserver.net) ()
[16:35:23] *** Joins: LIERO (~no@user/liero)
[16:38:29] *** Joins: mat001 (~mat001@c-73-189-86-20.hsd1.ca.comcast.net)
[16:39:46] *** Joins: remote (~self@user/hackers)
[16:44:35] <stenno> zero-copying array buffers to web workers is awesome
[16:45:34] <stenno> DnzAtWrk: because its still a relatively new feature and not many people know about it
[16:52:18] *** Quits: mohab (~mohab@45.243.92.35) (Ping timeout: 260 seconds)
[16:52:51] *** Joins: mohab (~mohab@156.223.125.34)
[17:09:33] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[17:10:22] *** Joins: iomari892 (~iomari891@197.210.53.76)
[17:11:52] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[17:15:21] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[17:15:46] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[17:16:25] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[17:22:13] <OnkelTem> Hi folks
[17:22:53] <OnkelTem> I still have that serious question about using websockets instead of polling: is there a library which allows to replace fetch-based pollig with websockets?
[17:23:04] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:23:08] <OnkelTem> I mean, I couldn't find anything myself on this subject
[17:24:24] <OnkelTem> Imagine a device with limited computational resource. When a client connects to it, it should not only reply on requests, but also update the client with new data
[17:24:35] <OnkelTem> with the rate which depends on the current load of the device
[17:24:43] <OnkelTem> hence - websockets
[17:24:58] <samsch> OnkelTem, Websockets itself can do that, at that level of genericness, you wouldn't probably have a library over it.
[17:26:17] <samsch> If you're only pushing data though, you might also consider Server Sent Events (SSE), which is a simpler mechanism that lets the server push data as needed (the client can't send anything back over the stream though).
[17:28:23] <OnkelTem> samsch: yeah, I read a little about SSE and was frowned (can I say that lol?) by the inability of forward communication :)
[17:29:17] *** CuriousErnestBri is now known as CuriousErnestBro
[17:29:40] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[17:29:49] <samsch> If you need to send from the client more than just in the initial request, then yeah, websockets is what you want. But also worth noting that using SSE doesn't stop you from also sending other regular requests to the server, or closing and re-opening the SSE connection.
[17:30:24] *** Joins: sfields (~sfields@2605:a601:adea:7a00:e449:c9df:b6b1:9926)
[17:30:28] <OnkelTem> Yeah, I see. Worth reading more about it, thanks
[17:32:27] *** Joins: goddard (~goddard@user/goddard)
[17:35:42] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[17:41:08] <OnkelTem> An app of my dream: websockets/SSE for updating clients with the data, "real-time" charts, binary data format (Protocol Buffers or some other), server-menaged user sessions, infinite-scrolling in all the tabels (not rendering anything bellow the current view-port, what else... more crazy ideas
[17:41:13] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 268 seconds)
[17:42:07] <OnkelTem> ah, and of course no more CRA, use nextjs instead.
[17:43:17] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[17:43:54] <OnkelTem> but that of course too specific for my current use cases: firmwares for devices. For a regular website that might look weird
[17:47:16] <goddard> im trying to debug my websockets and wireshark shows nothing after the connection except for the disconnection, but the server gets the sent message
[17:51:35] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[17:51:45] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:51:57] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:53:29] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[17:54:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:55:00] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[17:55:21] *** Joins: onosendi (~onosendi@user/onosendi)
[17:55:58] *** Joins: Administrator_ (~Administr@114.221.231.53)
[17:58:08] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[17:58:56] <onosendi> ljharb: I was reading up on different ways to organize TypeScript types, and came across one artical where they liked to have their project-wide types in a *.d.ts file in their project root. This seems like it would be convenient, because you wouldn't have to explcitly import every type. However, you're always teaching explicit over implicit. Would this apply here?
[17:59:17] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Ping timeout: 252 seconds)
[18:00:27] <onosendi> I'd like to hear anyone else's input too :)
[18:01:11] *** Joins: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[18:03:12] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[18:04:47] *** Quits: Administrator_ (~Administr@114.221.231.53) (Quit: Leaving)
[18:05:48] *** Joins: voltage_ (voltage@user/voltage)
[18:07:26] <ljharb> onosendi: I’ve done that a few times, but it’s generally better to have them be explicitly imported yeah
[18:08:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[18:09:26] <ljharb> mexen: 700mb is pretty normal, since it includes linters and build and test tools
[18:10:04] *** Joins: stenno (~stenno@user/stenno)
[18:10:07] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:10:07] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:10:07] *** Joins: wroathe (~wroathe@user/wroathe)
[18:10:29] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:10:45] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 256 seconds)
[18:16:46] *** Quits: D4mned (~D1mned@212.101.251.27) (Read error: Connection reset by peer)
[18:16:50] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:18:07] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[18:19:16] *** Joins: D4mned (~D1mned@212.101.253.240)
[18:19:51] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:22:43] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[18:23:32] *** Joins: mohab1 (~mohab@45.243.92.35)
[18:23:48] *** Quits: mohab (~mohab@156.223.125.34) (Quit: Quit)
[18:25:02] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:2d80:8056:360:78d9) (Ping timeout: 240 seconds)
[18:25:10] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[18:25:16] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[18:27:16] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:27:42] *** Joins: enoq_ (~enoq@194-208-178-35.lampert.tv)
[18:28:10] *** Quits: skillbot2 (~skillbot@user/skillbot) (Remote host closed the connection)
[18:28:26] *** Joins: skillbot (~skillbot@user/skillbot)
[18:28:26] *** ChanServ sets mode: +v skillbot
[18:30:47] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[18:30:53] <Cheaterman> Ohai buddiez I hope y'all doing goodie
[18:31:13] <Cheaterman> I like const { a, b, c } = await something()
[18:31:41] <Cheaterman> But what if a, b and c are attributes of an existing object (eg "this"), is there a way I can do the multi assign unpacking magic?
[18:32:04] <Cheaterman> (because right now I have to do this.a = a; this.b = b etc, and it feels a bit repetitive/wasteful)
[18:33:38] *** Joins: pmercado (~pmercado@186.107.34.136)
[18:34:21] <Cheaterman> (possible duplicate of https://stackoverflow.com/questions/29620686/is-it-possible-to-destructure-onto-an-existing-object-javascript-es6 - but I'm not sure I like the options that are given there)
[18:34:28] *** Joins: Kingsy (~chris@kingsy.co.uk)
[18:34:33] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[18:34:57] <Kingsy> if I am going this -> el.val(6); <- where el == a input, why when I use the browser inspector is the input still "1" ?
[18:36:22] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[18:36:39] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:36:49] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:42:57] <Booster2ooo> Kingsy: can you reproduce the issue in a jsfiddle/codepen whatever ?
[18:45:01] *** Quits: comatory_ (~ondrejsyn@185.176.138.241) (Ping timeout: 240 seconds)
[18:47:26] *** Quits: enoq_ (~enoq@194-208-178-35.lampert.tv) (Quit: enoq_)
[18:51:23] *** Joins: zebrag (~chris@user/zebrag)
[18:53:10] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:53:10] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:53:10] *** Joins: wroathe (~wroathe@user/wroathe)
[18:57:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[19:00:08] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Ping timeout: 265 seconds)
[19:03:48] *** Joins: EdFletcher (~PKD@user/edfletcher)
[19:07:36] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:6696:810:d467:3be1) (Remote host closed the connection)
[19:07:58] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:6696:810:d467:3be1)
[19:08:08] *** Joins: \mSg (mSg@user/msg/x-0285936)
[19:12:59] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[19:15:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:15:35] *** Quits: D4mned (~D1mned@212.101.253.240) (Quit: Leaving)
[19:16:50] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:6696:810:d467:3be1) (Ping timeout: 252 seconds)
[19:18:40] <Kingsy> Booster2ooo: I'll have a go. I am tempted to bin it off. spent far too much time on an input! I'll com,e back to it.
[19:23:17] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 256 seconds)
[19:24:22] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:25:02] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[19:28:02] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[19:29:19] *** Quits: iomari892 (~iomari891@197.210.53.76) (Quit: WeeChat 3.3)
[19:29:20] *** Quits: nomic (~nomic@85.203.46.65) (Remote host closed the connection)
[19:31:38] *** Joins: iomari891 (~iomari891@197.210.52.156)
[19:31:50] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[19:32:55] <orbisvicis> can I be notified when a css rule changes?
[19:32:56] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[19:36:59] <stenno> orbisvicis: in which situation would a rule change?
[19:37:38] <orbisvicis> when <style> node is created or modified by a JS library
[19:37:50] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[19:38:14] <stenno> i don't think there is a good way to do that
[19:38:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[19:38:25] <stenno> mutationobserver comes to mind if anything
[19:38:47] <stenno> orbisvicis: maybe this helps? https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver
[19:38:57] <stenno> but i have to say that that is a strange thing to want in the first place
[19:39:03] <stenno> !xy
[19:39:03] <jellobot> stenno, The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/
[19:39:09] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[19:39:48] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:44:09] <silly> !getter @velix
[19:44:16] <silly> !getter/setter @velix
[19:44:17] <jellobot> velix, Getters and Setters are incompatible with the reflective semantics of JS. Using them will result in code that interacts in awkward (and error-prone!) ways with idiomatic JS libraries. They're also usually harder to optimise and reason about. Since JS isn't a message-passing language, using plain properties is usually a better idea.
[19:44:21] *** Joins: Rockwood (~Rocky@user/rocky)
[19:44:23] *** Quits: bliminse (~bliminse@host86-162-147-196.range86-162.btcentralplus.com) (Quit: leaving)
[19:45:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[19:45:17] <silly> why do tagged strings feel so getter like?
[19:45:33] <stenno> tagged template literals?
[19:45:40] <silly> yes
[19:45:44] <stenno> do they?
[19:45:48] <silly> to me
[19:45:50] <stenno> what makes you say that
[19:46:05] <silly> it's more or less just a function call
[19:46:10] <silly> isn't it?
[19:46:17] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[19:46:30] <stenno> yes, you can just call them
[19:46:40] <Rockwood> stenno, o/
[19:46:46] <silly> so... now you can call this function without parens?
[19:46:54] <stenno> tag`foo${bar}baz`
[19:47:08] <stenno> well the special thing is that we can hook into the string interpolation
[19:47:25] <stenno> but that function ^ is about the same as
[19:47:29] <silly> oh, in the call you can interpolate?
[19:47:42] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:47:50] <silly> ah, gotta look into it again
[19:48:05] <stenno> yes, its a bit like calling tag(['foo','bar'], baz)
[19:48:10] <stenno> i think thats the correct order
[19:49:34] <stenno> n> const tag = (strings, ...vars) => [strings, vars]; const foo = 23; tag`Hello ${foo} World`
[19:49:36] <jellobot> (okay) [ [ 'Hello ', ' World' ], [ 23 ] ]
[19:49:39] <stenno> yep
[19:49:51] <stenno> silly: ^
[19:50:43] <silly> huh?! it returns an array of arrays?
[19:50:45] *** Quits: mohab1 (~mohab@45.243.92.35) (Quit: WeeChat 3.3)
[19:50:59] <silly> oh, that was... yesyes
[19:51:46] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:51:47] <silly> i should look up @google some interesting use cases
[19:52:01] <stenno> i used it recently for HTML escaping
[19:52:45] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[19:54:08] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:54:22] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:54:58] <stenno> silly: https://gist.github.com/stenno/7e62fca7902c98f69ccd581f407567ec
[19:55:39] <silly> oh nice
[19:56:03] *** Joins: holeinmyshoe (~alatham@2.28.51.11)
[19:56:41] <stenno> oh actually thats not correct, at the moment, entities in the literal don't get escaped
[19:56:57] *** Joins: bliminse (~bliminse@host86-162-147-196.range86-162.btcentralplus.com)
[19:58:02] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3484:b12c:602f:bc2a) (Ping timeout: 240 seconds)
[19:58:59] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[19:59:54] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[20:00:17] <stenno> something isn't right there but you get the idea ^_^"
[20:00:33] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:01:57] *** Joins: trog (~trog@user/trog)
[20:02:43] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[20:03:39] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3484:b12c:602f:bc2a)
[20:04:18] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:05:30] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[20:06:55] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:10:02] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3484:b12c:602f:bc2a) (Ping timeout: 240 seconds)
[20:11:42] *** Joins: re (~user@user/re)
[20:11:50] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3484:b12c:602f:bc2a)
[20:13:02] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.3)
[20:13:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[20:15:20] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:16:28] *** Linkandzelda_ is now known as Linkandzelda
[20:17:13] *** Joins: onosendi (~onosendi@user/onosendi)
[20:18:15] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3484:b12c:602f:bc2a) (Ping timeout: 252 seconds)
[20:21:07] *** Joins: iffraff (~quassel@2605:a601:aae0:4a00:574d:a7da:5eb:a8f5)
[20:22:15] *** Joins: kogepan (~kogepan@user/kogepan)
[20:22:39] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[20:22:39] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[20:23:56] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[20:24:45] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:25:15] *** Joins: Rockwood_ (~Rocky@user/rocky)
[20:25:50] <stenno> just realized that a core piece of my software is nonstandard
[20:26:11] <stenno> either i find a polyfill or i just drop support for FF
[20:27:19] *** Quits: reallymemorable (~reallymem@91.75.74.154) (Ping timeout: 256 seconds)
[20:28:53] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 252 seconds)
[20:30:31] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[20:30:51] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:31:24] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[20:31:35] *** Quits: peterhil__ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[20:32:10] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:32:20] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[20:32:22] <ljharb> what piece
[20:32:31] <stenno> DecompressionStream
[20:32:34] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[20:32:43] <stenno> https://developer.mozilla.org/en-US/docs/Web/API/DecompressionStream
[20:32:47] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[20:33:13] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3484:b12c:602f:bc2a)
[20:33:20] <Kingsy> does anyone know of a resouce that has a base set of styles for the woocommerce checkout? that ISNT woocommerce itself? (I have disabled those)
[20:33:40] <Kingsy> not a theme here. something stupidly simple and basic.
[20:33:45] <stenno> https://wicg.github.io/compression/#compression-stream
[20:35:00] <ljharb> stenno: what are you using it for?
[20:35:21] <ljharb> stenno: dropping would be dropping support for FF and IE and also safari, so i'd assume that's a bit of a nonstarter
[20:36:18] <stenno> ljharb: i load a gzipped File either from the filesystem per <input type="file"> or via fetch(), then deflate it and parse it
[20:36:35] <stenno> but i can make gzip deflation optional i guess
[20:36:48] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[20:37:21] <ljharb> stenno: https://www.npmjs.com/package/unzip ?
[20:37:29] <ljharb> oh gzip you said
[20:37:30] <stenno> but polyfill should be straightforward with TransformStream
[20:38:08] <ljharb> stenno: doesn't seem like one exists; you could publish one
[20:38:51] *** Quits: voltage_ (voltage@user/voltage) (Read error: Connection reset by peer)
[20:39:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:39:31] <stenno> (straightforward for someone who knows how gzip deflation works)
[20:39:51] <stenno> (which i dont)
[20:40:33] <stenno> hmmm istr seeing some code on SO
[20:40:51] *** Joins: voltage_ (voltage@user/voltage)
[20:43:02] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 240 seconds)
[20:43:45] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[20:44:49] *** Joins: comatory_ (~ondrejsyn@185.51.250.206)
[20:44:54] <stenno> i guess i can feature detect DecompressionStream, and use https://www.npmjs.com/package/pako if it doesn't exist
[20:45:16] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3c37:87d4:4bc2:73ec)
[20:45:26] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:47:02] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Ping timeout: 260 seconds)
[20:48:28] <Slade> reactjs. i'm thinking about making a hook creates a use state and exposes a setstate, so i can pass it to a bunch of data around.   is this a good design? any example patterns?
[20:50:33] *** Quits: comatory_ (~ondrejsyn@185.51.250.206) (Ping timeout: 256 seconds)
[20:52:56] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[20:57:21] *** Joins: mohab (~mohab@156.223.125.34)
[20:57:21] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:02:45] *** Joins: PenguinMan98 (~PenguinMa@65.153.38.250)
[21:03:32] *** Quits: CiaoSen (~Jura@p200300c957347b002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[21:09:51] <stenno> ljharb: so how would i polyfill on feature detection? i could do a dynamic import
[21:10:22] <ljharb> stenno: you don't, generally, you unconditionally polyfill
[21:10:30] <ljharb> stenno: and for a polyfill to work it has to run before all other code
[21:10:43] <stenno> noted, thanks
[21:18:03] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Quit: Leaving)
[21:20:14] *** Rockwood_ is now known as Rockwood
[21:20:40] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[21:23:50] *** Joins: Akiva (~Akiva@user/Akiva)
[21:25:55] *** Joins: naan (~Naan@user/naan)
[21:26:40] *** Joins: bambanxx (~bambanx@2800:150:106:1061:6159:c74b:9d0c:4022)
[21:28:11] *** Joins: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de)
[21:29:25] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 240 seconds)
[21:31:47] *** naan is now known as Naan
[21:32:52] *** Joins: nomic (~nomic@51.52.78.152)
[21:35:16] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Quit: Leaving)
[21:35:33] *** Quits: mohab (~mohab@156.223.125.34) (Ping timeout: 250 seconds)
[21:35:57] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[21:35:57] <stenno> hmm, is me relying on a nonstandard api a bug
[21:36:00] <stenno> i guess it is
[21:36:42] <stenno> i gave the 'dont rely on decompressionstream' issue a 'bug' and 'enhancement' label, i think thats fair
[21:37:20] <onosendi> I wouldn't have thought `import { foo } from '...'` would have been wrapped with `someFunc`: `export const foo = () => {}; someFunc(foo);`
[21:37:47] *** Joins: mohab (~mohab@45.245.18.151)
[21:38:19] *** Quits: bambanxx (~bambanx@2800:150:106:1061:6159:c74b:9d0c:4022) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:39:25] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Read error: Connection reset by peer)
[21:39:51] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[21:40:35] <ljharb> onosendi: huh?
[21:40:46] *** Joins: bambanxx (~bambanx@2800:150:106:1061:6159:c74b:9d0c:4022)
[21:40:54] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[21:41:05] <onosendi> ljharb: sec, lemme put a dpaste together.
[21:42:16] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[21:42:26] *** Joins: faLUKE (~paolo@host-79-37-180-53.retail.telecomitalia.it)
[21:42:48] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:42:59] *** Joins: nomic2 (~nomic@85.203.46.65)
[21:45:12] <onosendi> ljharb: these seem to be the same? Using the second one, I didn't think `foo` would be `wrap`ped when `import { foo } from '...'`.
[21:45:15] <onosendi> https://github.com/fastify/fastify-plugin#Known%20Issue:%20TypeScript%20Contextual%20Inference
[21:45:18] <onosendi> Err, sorry
[21:45:24] <onosendi> https://dpaste.org/1KFO
[21:45:31] *** Quits: nomic (~nomic@51.52.78.152) (Ping timeout: 256 seconds)
[21:45:35] *** nomic2 is now known as nomic
[21:46:25] *** Quits: dskull (~dskull@user/dskull) (Quit: quit)
[21:46:28] *** Joins: dskullz (~dskull@user/dskull)
[21:47:31] <ljharb> onosendi: "wrap" usually means "make a new function that calls the original one". that's only possible in the first example
[21:47:44] <ljharb> onosendi: the second one could only be adding properties to the function, relaly
[21:47:45] <ljharb> *really
[21:48:02] *** dskullz is now known as dskull
[21:48:09] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[21:49:05] <onosendi> ljharb: The TypeScript issue at the bottom recommends option 2, except they're not exporting anywhere. https://github.com/fastify/fastify-plugin
[21:50:34] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:51:02] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:52:15] <ljharb> onosendi: nothing in there is exporting anything, indeed
[21:52:20] <ljharb> onosendi: which means you'd obviously export the wrapped one
[22:01:06] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[22:02:06] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:02:56] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:04:22] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:04:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:06:14] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:07:23] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[22:08:00] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[22:09:18] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[22:09:35] *** Quits: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[22:11:28] *** Joins: AtomicInteger (~primamate@159.48.53.160)
[22:13:43] *** Quits: PenguinMan98 (~PenguinMa@65.153.38.250) (Quit: Client closed)
[22:16:15] *** Joins: sbrothy (~sbrothy@192038129024.mbb.telenor.dk)
[22:23:02] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[22:23:29] *** Quits: holeinmyshoe (~alatham@2.28.51.11) (Ping timeout: 256 seconds)
[22:25:59] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[22:27:32] *** Joins: matsaman (~matsaman@user/matsaman)
[22:28:01] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:28:11] *** Joins: reallymemorable (~reallymem@91.75.74.154)
[22:28:32] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Ping timeout: 240 seconds)
[22:29:25] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[22:32:11] *** Joins: kalen` (~kalen@gateway/vpn/pia/kalen)
[22:35:51] *** Joins: haslo (uid390999@id-390999.uxbridge.irccloud.com)
[22:36:11] *** Quits: kalen- (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 265 seconds)
[22:36:16] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Quit: enoq)
[22:38:47] *** Quits: kmh (~kmh@2a00:6020:5004:6800:6500:bc30:b0fd:c100) (Quit: Leaving)
[22:40:58] *** Joins: obimod (~obimod@gateway/vpn/pia/obimod)
[22:40:59] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3484:b12c:602f:bc2a) (Ping timeout: 250 seconds)
[22:42:42] *** Quits: obimod (~obimod@gateway/vpn/pia/obimod) (Client Quit)
[22:44:23] *** Joins: Betal (~Betal@user/betal)
[22:45:39] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Quit: Leaving)
[22:45:56] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[22:50:17] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[22:51:25] *** Joins: sam_1 (~sam_1@87.51.251.118)
[22:53:22] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[22:53:25] *** Joins: enoq (~enoq@194-208-178-35.lampert.tv)
[22:58:58] *** Joins: holeinmyshoe (~alatham@2.28.51.11)
[22:58:59] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[22:59:23] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:6dcd:9cd9:967e:240a)
[23:02:03] *** Quits: brw (~bas@haring.bas.sh) (Quit: Ping timeout (120 seconds))
[23:02:30] *** Joins: brw (~bas@haring.bas.sh)
[23:03:43] *** Quits: holeinmyshoe (~alatham@2.28.51.11) (Ping timeout: 256 seconds)
[23:07:18] *** Joins: _wovixo_ (~wovixo@128.104.205.49)
[23:08:04] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[23:08:08] *** Joins: comatory_ (~ondrejsyn@185.51.250.206)
[23:08:44] <qswz> n> '12:30'.padEnd(':00Z', 9)
[23:08:45] <jellobot> (okay) '12:30'
[23:08:57] <qswz> n> '12:30'.padEnd(9, ':00Z')
[23:08:58] <jellobot> (okay) '12:30:00Z'
[23:09:09] <qswz> n> '12:30:00'.padEnd(9, ':00Z')
[23:09:10] <jellobot> (okay) '12:30:00:'
[23:09:22] <qswz> I'd like 12:30:00Z here
[23:09:31] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:09:37] <qswz> how to use the padded arg from the end?
[23:09:54] *** Joins: Administrator_ (~Administr@114.221.231.53)
[23:10:02] *** Quits: AtomicInteger (~primamate@159.48.53.160) (Quit: WeeChat 3.3)
[23:10:15] *** Quits: wovixo (~wovixo@128.104.205.49) (Ping timeout: 250 seconds)
[23:10:20] *** Quits: mohab (~mohab@45.245.18.151) (Quit: WeeChat 3.3)
[23:10:25] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3484:b12c:602f:bc2a)
[23:11:28] <qswz> should be an option of padEnd
[23:14:32] *** Quits: kogepan (~kogepan@user/kogepan) (Remote host closed the connection)
[23:14:34] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[23:14:54] <velix> Haha, everyone laught at me at McDonald's: https://imgur.com/a/8XOsQQR
[23:15:32] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[23:16:02] <ljharb> wth is that
[23:16:09] <ljharb> qswz: what do you mean from the end
[23:16:12] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[23:17:26] *** Joins: adsc (~adsc@2a02:1206:4524:8a30:9c1e:5a8:8b8c:df09)
[23:17:37] <qswz> 'abcd'.padEnd(6, 'efgh') // 'abcdgh'
[23:17:49] *** Joins: kmh (~kmh@2a00:6020:5004:6800:8408:cfde:c018:df22)
[23:17:53] <velix> ljharb: McChicken with 5 patties :D
[23:18:03] <velix> ljharb: Oh, you might not have this product in your country.
[23:18:05] <qswz> using the 2 arg from the right instead of from left
[23:18:31] *** Quits: Administrator_ (~Administr@114.221.231.53) (Quit: Leaving)
[23:18:34] *** Quits: leviathan (~leviathan@2600:1700:dad0:9870:d1b5:a970:c1df:86c2) (Remote host closed the connection)
[23:18:53] *** Joins: leviathan (~leviathan@2600:1700:dad0:9870:9849:ca91:6275:9285)
[23:19:21] *** Quits: sbrothy (~sbrothy@192038129024.mbb.telenor.dk) (Quit: leaving)
[23:19:29] <ljharb> velix: we have a mcchicken, but 5 patties when none of them are all that good seems silly
[23:19:42] <ljharb> qswz: i'm still not sure what you want
[23:19:57] <velix> ljharb: you highlighted silly ;)
[23:20:00] <qswz> string to pad: 'abcd'
[23:20:04] <qswz> length: 6
[23:20:10] <qswz> padder: '1234'
[23:20:15] <ljharb> velix: their fault for picking a word
[23:20:22] <velix> ljharb: she's a he.
[23:20:29] <qswz> padEnd will give abcd12 right? no I'd like abcd34
[23:20:30] <ljharb> velix: i said "their"
[23:20:45] <qswz> using the 2 last chars of 1234 instead of 2 first
[23:21:05] <velix> ljharb: There was a discount today and you can add 4 patties max... I'll add them to my salad tomorrow
[23:21:08] <ljharb> qswz: ah. no, in that case you'd have to do it manually
[23:21:42] <qswz> that sucks imo
[23:23:50] *** Joins: nick283z (b9cc01d8@67.205.143.82)
[23:24:32] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3484:b12c:602f:bc2a) (Ping timeout: 240 seconds)
[23:25:49] <nick283z> hi guys, trying to create a websocket wrapper for something, how does one emit events in like a `on` function that is returnt in the object when my function is called?
[23:26:59] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[23:27:32] *** Joins: kogepan (~kogepan@user/kogepan)
[23:28:59] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:29:17] <nick283z> like, i know that if i call .on('foo', bar) then when the foo event is fired i call that bar function, but how do i let the on function know it is called?
[23:29:26] *** Joins: junebug (~junebug@2600:1700:3db0:2540:1742:fab7:61dd:4a6)
[23:31:25] <qswz> n> let v='2022-00-00'; v.padEnd(20, 'T00:00:00Z'.slice(v.length-20))
[23:31:25] <ljharb> qswz: i mean it's a weird use case. you're not padding, you're blending two strings together
[23:31:26] <jellobot> (okay) '2022-00-00T00:00:00Z'
[23:31:38] <qswz> n> let v='2022-00-00T12:12'; v.padEnd(20, 'T00:00:00Z'.slice(v.length-20))
[23:31:40] <jellobot> (okay) '2022-00-00T12:12:00Z'
[23:32:05] <ljharb> qswz: basically it's `var x = desiredLength - str.length; str.padEnd(desiredLength, padder.slice(-x))`
[23:32:16] <qswz> yea sure
[23:33:37] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[23:33:50] <nick283z> do i have to store event listeners?
[23:34:16] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:37:02] <BinarySavior> if i call <a href='javascript:someFunction()'> will I be able to use $(this) selector from jquery to access attributes of the HTML element
[23:37:41] <nick283z> you can send `this`, yes
[23:38:16] *** Joins: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3484:b12c:602f:bc2a)
[23:38:34] <matsaman> pretty unlikely you're getting much out of using jQuery anymore
[23:38:54] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:39:07] <qswz> and inline handler as well
[23:39:14] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[23:39:18] <BinarySavior> oh okay haha
[23:39:20] <BinarySavior> it's been a while
[23:39:28] <matsaman> BinarySavior: yeah what's this function going to do?
[23:39:59] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[23:40:00] <qswz> buttonr.addEventListener('click', ev => {})
[23:40:07] <BinarySavior> on my nav bar I have a bunch of anchor tags that link to <section> via the page.html#section-id
[23:40:25] <BinarySavior> i want to smooth scroll instead of instant scroll
[23:40:31] <qswz> BinarySavior: you don't need js for that
[23:40:40] <qswz> put a name attribute on a
[23:40:51] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:40:51] <qswz> on heading I mean
[23:40:52] *** Quits: bambanxx (~bambanx@2800:150:106:1061:6159:c74b:9d0c:4022) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:40:59] <qswz> and < href="#heading"
[23:41:06] <nick283z> the url hash yes
[23:41:43] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3c37:87d4:4bc2:73ec) (Quit: Client closed)
[23:41:43] <BinarySavior> yea it's working already... the links work and scroll to appropriate section when clicked.  Desired behavior is a smooth scroll that lasts 0.5 second from scroll position A to scroll position B
[23:42:51] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:42:58] *** Joins: used____ (~used____@5-12-221-132.residential.rdsnet.ro)
[23:42:58] *** Quits: BaggersIO (~BaggersIO@2a02:810d:983f:b088:3484:b12c:602f:bc2a) (Ping timeout: 260 seconds)
[23:43:05] <nick283z> iirc css can solve that
[23:43:51] *** Joins: ttys000 (~ttys000@user/ttys000)
[23:43:52] <nick283z> https://codepen.io/cferdinandi/pen/LqGZrb see this BinarySavior
[23:44:31] <BinarySavior> thanks nick283z that's exactly what i need
[23:44:36] <nick283z> =D
[23:44:50] <qswz> BinarySavior: use scroll-behavior: smooth
[23:44:52] <qswz> cssprop
[23:45:36] <BinarySavior> qswz even better
[23:46:12] *** Joins: bambanxx (~bambanx@2800:150:106:1061:6159:c74b:9d0c:4022)
[23:46:14] <nick283z> it's what the codepen example uses, so yeah
[23:46:14] <qswz> nick283z said it first
[23:46:59] *** Joins: PenguinMan98 (~PenguinMa@65.153.38.250)
[23:47:04] *** Quits: enoq (~enoq@194-208-178-35.lampert.tv) (Quit: enoq)
[23:48:21] <ljharb> i just published http://npmjs.com/array.prototype.groupby, which is now stage 3
[23:48:37] <qswz> oh nice
[23:48:37] <nick283z> im still stuck on event logic, can someone assist?
[23:48:53] <qswz> I feel like proposals go fast now
[23:49:36] <onosendi> ljharb: our conversation about top level named functions last week... would you still do this with multiple returns, like: `const foo = () => () => {}`?
[23:50:07] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[23:50:37] <ljharb> onosendi: hard to know without the use case
[23:50:41] <ljharb> qswz: some do
[23:51:18] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[23:54:27] <PenguinMan98> Hey guys. I'm still trapped on a problem that needs solving and I'm not sure in which direction to enquire
[23:54:40] <onosendi> ljharb: hmm, what's the criteria for your decision? https://dpaste.org/bPqG
[23:55:16] <PenguinMan98> We have a webpage kitted out for mobile that uses webrtc to make video connections. On certain devices, the audio device selected by the phone is the internal speaker instead of the external speaker.
[23:55:34] <PenguinMan98> We need a way to guarantee it will use the external speaker
[23:56:28] <PenguinMan98> I don't think the browsers themselves support this yet. But our sales team reports our competitors have apps that do this 'download free'
[23:56:50] <PenguinMan98> Everything I've found over the last few days of searching suggests this is not possible
[23:56:55] <PenguinMan98> But it seems it is
[23:57:12] <PenguinMan98> I need to prove it one way or the other
[23:58:09] <PenguinMan98> The only things I know for sure are, if I ask any browser on mobile for getUserMediaDevices, then the list I get back does not show audio output devices.
[23:58:25] <PenguinMan98> The spec for adding those was published just last month
[23:58:32] <PenguinMan98> No browsers support it
[23:59:00] <qswz> ljharb: are we gonna have other lodash things?
[23:59:06] <qswz> pickBy, and co
[23:59:20] <qswz> mickBy isas useful as groupbVy
[23:59:21] <PenguinMan98> Almost all workarounds and solutions require passing the device id of the speaker into a 'sink'.  I cannot figure out a way to find this device id.
[23:59:30] <qswz> .mapValues
[23:59:36] <qswz> on object.prototype
