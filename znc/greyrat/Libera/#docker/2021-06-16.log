[00:03:00] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[00:03:17] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[00:04:38] *** Joins: rdrg109 (~rdrg109@51.195.232.80)
[00:19:54] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca)
[00:20:07] *** Quits: tang^ (~tangaloor@2604:3d09:47c:f970:d4a4:1bcb:7f0:9e8f) (Quit: Textual IRC Client: www.textualapp.com)
[00:33:29] *** m0nkey_ is now known as DavieDavieDave
[00:34:29] *** DavieDavieDave is now known as m0nkey_
[00:35:16] *** Joins: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net)
[00:36:01] <dman777> what is best convention for name/location when mounting a volume to a container? I have seen some examples using /home/app while others use /usr/src/app
[00:38:38] <artok> dman777: that is totally matter of taste... personally I keep persistent data inside /data, app itself is already built into image and lives inside /opt
[00:39:25] *** Joins: ausserz (~ausserz@user/ausserz)
[00:41:54] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca) (Ping timeout: 240 seconds)
[00:45:08] *** Quits: Haxxa (~Haxxa@122.199.47.41) (Quit: Haxxa flies away.)
[00:45:53] <programmerq> dman777 it varies by software. mysql's default location is /var/lib/mysql for its persistent data. /var/lib is listed in the Filesystem Hierarchy Standard as being used for "state information" https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard
[00:47:21] <programmerq> I wouldn't put stateful data into /usr/src since that's usually where source code and header files go. I like installing actual software in my containers to /opt/whatever so in development I'll bind mount my working copy to /opt/whatever in the container.
[00:47:56] <artok> has all distros kept that one on var/lib ? most wild scene might be where apache htdocs are defaulted on each distro
[00:48:04] <programmerq> also /home/ is really for user home directories, so it seems a little strange for a container's state info. It could make sense depending on what your specific software is doing of course.
[00:48:39] *** Joins: Haxxa (~Haxxa@122.199.47.41)
[00:48:41] <programmerq> I'm not aware of any mainstream distros that move mysql's /var/lib/mysql to another location.
[00:48:57] <Lutin> ok so this is weird, HAproxy can't resolve hosts when I set a resolver in the haproxy.conf to 127.0.0.11:53 and also define that one on the serverline
[00:49:15] <programmerq> I know there are tons of goofy projects out there that implement alternate file hierarchy standards
[00:49:39] <programmerq> Lutin is this container attached to a user defined network, or is it on the default legacy docker0 network? the 127.0.0.11 resolver isn't available on the docker0 network.
[00:50:00] <Lutin> user defined network, others can resolve
[00:51:13] *** Quits: useful_idiot (~useful_id@154.3.40.11) (Quit: Ping timeout (120 seconds))
[00:51:38] <programmerq> does haproxy log anything about a dns lookup failure, or is it just "not found" type errors?
[00:51:40] *** Joins: useful_idiot (~useful_id@154.3.40.11)
[00:52:20] *** Quits: petris (~quassel@user/petris) (Read error: Connection reset by peer)
[00:53:14] <Lutin> yap not found, sec
[00:53:29] *** Joins: petris (~quassel@user/petris)
[00:53:39] <Lutin> no simply "could not resolve address"
[00:57:31] *** Joins: patchie (~sdf@136.228.219.56)
[01:06:42] <patchie> artok, still there?
[01:09:35] *** Quits: alissa (~ryan@hashbang/bdfl) (Quit: WeeChat 2.9 <:3)~)
[01:10:49] *** Joins: daddy (~ryan@hashbang/bdfl)
[01:12:47] <patchie> i got a problem where WORKDIR and RUN doesnt seem to work
[01:12:52] <patchie> the logfile: https://pastebin.com/byyJPBck
[01:12:56] <patchie> anyone care to help?
[01:18:43] *** Quits: CB_JD (~Code_Bleu@user/code-bleu/x-6939963) (Read error: Connection reset by peer)
[01:18:44] <Lutin> programmerq so, weird
[01:18:57] <Lutin> patchie artok is sometimes a ghost
[01:18:59] *** Joins: CB_JD (~Code_Bleu@user/code-bleu/x-6939963)
[01:19:04] <ada_> patchie: what am I looking for in this log?
[01:19:23] <ada_> patchie: in what way does WORKDIR/RUN "not work"?  what did you expect to happen, and how does reality differ from expectations?
[01:20:15] <patchie> well, i want it to download the git repo, but it doesnt seem to :P
[01:20:32] <patchie> to the folder i create, but i think it already exists
[01:21:12] <patchie> what does cached mean? that it will not perform the action or something?
[01:21:39] <patchie> if i run the commands in the terminal without run and workdir first, then it works
[01:22:03] *** Joins: sathyabhat (~sathyabha@188.25.147.213)
[01:22:17] <patchie> if i only do "run git clone.....", then it puts the repo under / .....on the root
[01:22:47] <patchie> i also tried to do "RUN cd /workspaces/docker", but still didnt work
[01:23:04] <dman777> programmerq: what about for a web app? where would you put it's source code at?
[01:26:31] <patchie> ada_: still there?
[01:26:37] <patchie> or anyone else? :)
[01:28:23] *** Quits: sathyabhat (~sathyabha@188.25.147.213) (Quit: Client closed)
[01:30:15] *** Joins: sathy__ (~sathy@188.25.147.213)
[01:33:28] <artok> I'm ghost
[01:33:54] *** Quits: XV8 (~XV8@2601:5cb:c001:50:91ef:c6b5:cda7:9415) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:33:54] <patchie> artok: i got the logfile now, check the link above
[01:34:52] <artok> by the looks of the log, those commands were successfully run
[01:36:03] <patchie> but where? :P
[01:36:19] *** Quits: sathy__ (~sathy@188.25.147.213) (Ping timeout: 268 seconds)
[01:36:36] <artok> on that image 
[01:36:52] <patchie> but what folder?
[01:37:10] <patchie> shouldnt it be run inside the /workspace/docker ?
[01:37:36] <patchie> https://pastebin.com/gySvpZF8
[01:39:05] <artok> is that /workspace/docker inside container ?
[01:39:20] <artok> I don't really understand how that vscode is doing things
[01:39:33] <patchie> yes, correcy
[01:39:35] <patchie> correct
[01:39:53] <artok> ah
[01:40:05] <patchie> if the code in dockerfile is only: RUN git clone https://github.com/daniel-thompson/wasp-os
[01:40:13] <patchie> then it puts the repo under /
[01:40:14] <patchie> root
[01:40:22] <patchie> but i dont want it there :P
[01:40:43] <artok> but is there --mount on the run command which overrides that workspace dir
[01:41:03] <artok> yes
[01:41:08] <artok> hence you don't see that
[01:41:15] <patchie> what do you mean?
[01:41:20] <patchie> do you want the whole dockerfile code?
[01:41:25] <artok> no need
[01:41:29] <artok> I see it on that log 
[01:41:53] <patchie> yep
[01:41:59] <patchie> true
[01:42:17] <artok> log line 26 starts the container, where c:\Users\username\Google Drive\!programmering\!python\PineTime\docker is bind mount to /workspace/docker
[01:42:39] <patchie> yep
[01:43:01] <patchie> so i have 2 folders and one file there. .devcontainer folder.... .vscode folder... and run.py
[01:43:10] <patchie> those files are copied to the correct folder
[01:43:22] <patchie> now, i want the git repo to be downloaded every time i build.
[01:43:34] <patchie> its correct of me to put it in the dockerfile then, i guess?
[01:43:36] <artok> you need to invalidate the cache also
[01:43:51] <patchie> what is invalidate?
[01:43:56] <patchie> how do i do that?
[01:44:27] <artok> you need to add --no-cache to docker build command
[01:44:30] <patchie> the strange thing is that it works under root dir, but not when i change workdir, then i dont really know where it downloads the repo to on the disk at all actually. :P
[01:45:02] <artok> you can do WORKDIR /src
[01:45:10] <artok> then inside container, that will be inside /src
[01:45:20] <patchie> docker build command, where is that stored? in the dockerfile? or is that the command running the dockerfile?
[01:45:42] <artok> no, docker build command is run by vscode somehow, you need to check that manual and setting
[01:45:59] <artok> docker build is the command that makes image using dockerfile instructions
[01:46:02] *** Quits: PonyBlocks (ponyblocks@user/ponyblocks) (Read error: Connection reset by peer)
[01:47:15] <patchie> ah, yeah
[01:47:29] <patchie> must be in the .devcontainer.json then i guess
[01:49:00] <patchie> artok: what will the --no-cache actually do?
[01:50:21] <patchie> it will only force it to rebuild every time
[01:50:26] <patchie> thats not the problem?
[01:51:37] <programmerq> dman777▸ I like /opt/<application> for the code of a web app-- whether it's interpreted or compiled.
[01:52:08] <artok> that will ensure that every Dockerfile instruction is run, if you want that git clone to run every time, to get really the latest into that dir...
[01:52:44] <patchie> but if i delete the docker image, then it forces it anyway, right? and that still doesnt work
[01:52:47] <programmerq> but stateful data wouldn't go with the code.
[01:52:51] <artok> patchie: but again, I don't really know what is the use case of those things inside vscode, you'd need to consult it's manual =)
[01:53:04] <dman777> programmerq: ok, thank you
[01:53:13] <Lutin> so, haproxy doesn't resolve on the local resolver... what are my options to check this out ?
[01:54:32] <patchie> artok: doesnt really matter if its inside vscode or outside. i guess this is not actually related to vscode
[01:54:37] <artok> patchie: only if all cached layers are also deleted, so there is no other image using and so on.
[01:54:44] <patchie> as its the dockerfile that doesnt do what i tell it to do
[01:54:47] <artok> patchie: it is, since it is running that container
[01:55:05] <patchie> if i delete all container, image etc from docker, still have the problem
[01:55:30] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 240 seconds)
[01:55:59] <artok> it does, but vscode is the one that starts the container from the image, and --mount overrides with your host directory that /workspaces/docker where you previously did that git clone
[01:57:36] *** Joins: bouncy (~ben@user/benoit)
[01:57:56] *** Joins: pete443 (~pete443@2a01:c22:b05c:9800:d97b:946e:26ca:4ffb)
[01:57:58] <patchie> hmm, ok
[02:01:39] *** Joins: endigma5 (~endigma@134.41.87.209)
[02:03:38] *** Quits: endigma (~endigma@134.41.87.209) (Ping timeout: 252 seconds)
[02:03:38] *** endigma5 is now known as endigma
[02:05:33] <Lutin> has anyone a working haproxy example that resolves with docker ?
[02:05:47] <patchie> artok: thanks for taking your time, btw. appreciated!
[02:06:30] <Lutin> patchie you need to hug him, he likes that
[02:06:55] * patchie slaps Lutin :P
[02:07:07] <Lutin> patchie I like that as well ;)
[02:07:12] <patchie> hehe :P
[02:07:25] <patchie> ok, so long suckers. i am going to bed. ttl
[02:09:18] <Lutin> patchie you can't ask us to do that!
[02:09:30] <Lutin> sleep well tho
[02:16:19] *** Joins: Brunera (~lasseb@178.16.67.227)
[02:17:31] *** Quits: pete443 (~pete443@2a01:c22:b05c:9800:d97b:946e:26ca:4ffb) (Changing host)
[02:17:31] *** Joins: pete443 (~pete443@user/pete443)
[02:18:06] *** Quits: pete443 (~pete443@user/pete443) (Quit: Leaving)
[02:18:15] *** Joins: pete443 (~pete443@user/pete443)
[02:19:04] <ada_> patchie: was driving
[02:19:51] *** Joins: goose (goose@bucket.goose.ws)
[02:21:23] <Lutin> he this haproxy thing is annoying... all example show the same... doesn't resolve
[02:21:57] *** Joins: leoziri (~igloo@host81-159-129-48.range81-159.btcentralplus.com)
[02:21:59] *** Quits: leoziri (~igloo@host81-159-129-48.range81-159.btcentralplus.com) (Excess Flood)
[02:22:38] *** Quits: pete443 (~pete443@user/pete443) (Client Quit)
[02:22:42] *** Joins: Ivyy (~Ivyy@2001:a61:1374:1501:1d80:27fb:78e3:b367)
[02:24:39] *** Quits: Brunera (~lasseb@178.16.67.227) (Quit: WeeChat 3.1)
[02:28:03] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:28:31] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[02:28:41] <Lutin> OK this is weird... or I didn't add the network or I didn't add the network
[02:35:51] *** Joins: jeffg (~jeffg@yyz1do02.jeffg.org)
[02:39:13] <ada_> Lutin: whats the problem exactly
[02:41:49] <Lutin> ada_ haproxy didn't resolve but apperently I seem to have recreated the service but didn't add the network again
[02:41:53] <Lutin> so... bounche me!
[02:46:51] <Lutin> ada_ kick me kick me! :P
[03:04:41] <Lutin> ada_ where do you connect services on, they VIP's ?
[03:04:44] <Lutin> *their
[03:07:46] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca)
[03:09:33] <ada_> Lutin: wat
[03:09:42] <ada_> oh oh
[03:09:50] <ada_> yeah you resolve the service name to a VIP
[03:10:00] <ada_> and then the VIP is an ipvs loadbalancer to all the container IPs
[03:12:31] *** Quits: CB_JD (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 268 seconds)
[03:16:42] *** Joins: gearnode (~gearnode@2a01cb000ce2c1008ca2093f6cef466a.ipv6.abo.wanadoo.fr)
[03:16:44] *** Quits: thc202 (~thc202@user/thc202) (Quit: thc202)
[03:17:29] *** Joins: klltkr (~klltkr@host86-184-164-82.range86-184.btcentralplus.com)
[03:19:23] <Lutin> ada_ yeah servicename as in... service is named foo then you call it like foo.network ?
[03:19:31] <Lutin> I mean... what if it only has an ingress one
[03:19:47] <Lutin> I'm checking that out
[03:25:08] <ada_> you could just use the service name
[03:25:16] <ada_> you don't have to add the network name on the end
[03:25:21] <ada_> but docker does support that for docker networks
[03:25:30] <ada_> the ingress network is special, it doesn't have that
[03:27:18] *** Joins: CB_JD (~Code_Bleu@user/code-bleu/x-6939963)
[03:27:33] *** Quits: Ivyy (~Ivyy@2001:a61:1374:1501:1d80:27fb:78e3:b367) (Remote host closed the connection)
[03:40:20] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[03:41:32] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[03:43:23] <Lutin> ada_ not when you are in the same network indeed true
[03:44:15] *** Joins: jazzy (~jaziz@2600:380:4547:d128:8473:ff3e:752d:860f)
[03:44:31] *** Quits: tex (~super@user/dix) (Ping timeout: 244 seconds)
[03:44:47] <Lutin> ada_ yeah ingress is just there...to make swarm happen
[04:00:20] *** Quits: mike (~mike@45.126.44.146) (Quit: WeeChat 1.9.1)
[04:00:28] <Lutin> OK bedtime, cu tomorrow!
[04:00:39] *** Quits: Lutin (~Lutin@user/lutin) (Quit: Lutin)
[04:01:06] *** Quits: bradley (~bradley@user/bradley) (Ping timeout: 246 seconds)
[04:05:51] *** Joins: chasmo77 (~chas77@71.63.241.168)
[04:09:43] *** Joins: Cleverness (~clevernes@pool-100-2-45-18.nycmny.fios.verizon.net)
[04:19:24] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:19:58] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 244 seconds)
[04:22:31] *** Joins: haritz (~hrtz@user/haritz)
[04:22:39] *** Joins: Forkk (forkk@2600:3c00::f03c:91ff:fe84:de4d)
[04:40:17] *** Quits: ryuuji_ (~ryuuji@190.217.237.61) (Read error: Connection reset by peer)
[04:55:13] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[05:01:47] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:04:25] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[05:20:42] *** Quits: gearnode (~gearnode@2a01cb000ce2c1008ca2093f6cef466a.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[05:26:27] <matthewcroughan> Can anybody think of a way to run systemctl inside a docker container to manage host processes
[05:30:29] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:52] <matthewcroughan> Based on a few answers, it looks like this used to be possible until systemd changed the way it works.
[05:33:23] <matthewcroughan> https://developers.redhat.com/blog/2016/09/13/running-systemd-in-a-non-privileged-container#the_quest
[05:34:55] *** Joins: vlm (~vlm@user/vlm)
[05:36:12] *** Quits: Joel (~jjshoe@user/joel) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[05:38:44] *** Quits: klltkr (~klltkr@host86-184-164-82.range86-184.btcentralplus.com) (Ping timeout: 272 seconds)
[05:39:35] *** Joins: klltkr (~klltkr@2a00:23c5:d198:ad01:446:91f7:bf1d:4f76)
[05:41:40] *** Quits: klltkr (~klltkr@2a00:23c5:d198:ad01:446:91f7:bf1d:4f76) (Client Quit)
[05:42:32] *** gr8ron is now known as graytron
[05:43:53] *** Joins: FIGBERT (~FIGBERT@figbert.com)
[05:46:11] *** Joins: Joel (~jjshoe@user/joel)
[05:52:40] <dman777> in docker-compose I have volumes: - ./frontend/widgets:/usr/src/frontend-widgets:cached . How would I share that volume with another service in docker-compose.yml? 
[05:53:10] *** Quits: haritz (~hrtz@user/haritz) (Ping timeout: 244 seconds)
[05:57:40] *** Joins: jlbribeiro (~jlbribeir@user/jlbribeiro)
[06:00:42] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[06:02:48] *** Joins: c10l (~c10l@89.34.167.207)
[06:04:39] *** Quits: jlbribeiro (~jlbribeir@user/jlbribeiro) (Quit: Leaving)
[06:12:42] *** Quits: CB_JD (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 240 seconds)
[06:13:01] *** Joins: CB_JD (~Code_Bleu@user/code-bleu/x-6939963)
[06:25:26] *** Joins: iNeedKoffee (~ubuntu@public.sa-edbd-dsto-liva1.aarnet.net.au)
[06:27:44] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[06:33:38] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:40:25] <iNeedKoffee> I am using pymongo in a docker container to connect to a mongodb instance and am getting a ServerSelectionTimeoutError. It used to work, however I now have two connections in the application and this seems to have sparked this error. Does anyone have any idea how to solve this?
[06:56:35] *** pizza is now known as pizzaiolo
[07:02:34] *** Joins: d33cee (~decent@ip68-10-104-81.hr.hr.cox.net)
[07:07:20] *** pizzaiolo is now known as pizza
[07:10:05] *** Quits: iNeedKoffee (~ubuntu@public.sa-edbd-dsto-liva1.aarnet.net.au) (Quit: Konversation terminated!)
[07:12:34] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[07:13:55] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[07:19:41] *** Quits: Zelec94 (~Zelec@135-23-82-85.cpe.pppoe.ca) (Ping timeout: 272 seconds)
[07:22:39] *** Joins: Zelec94 (~Zelec@135-23-82-85.cpe.pppoe.ca)
[07:22:51] *** Quits: FIGBERT (~FIGBERT@figbert.com) (Quit: Ping timeout (120 seconds))
[07:23:04] *** Joins: FIGBERT (~FIGBERT@figbert.com)
[07:24:01] *** Joins: justyb11 (~justyb@2601:483:500:3ea:f6be:3dd8:f1b2:573a)
[07:25:25] *** Joins: Zelec941 (~Zelec@135-23-82-85.cpe.pppoe.ca)
[07:27:49] *** Quits: Zelec94 (~Zelec@135-23-82-85.cpe.pppoe.ca) (Ping timeout: 268 seconds)
[07:27:50] *** Zelec941 is now known as Zelec94
[07:27:50] *** Quits: dalan (~dalan@110-175-186-185.tpgi.com.au) (Quit: dalan)
[07:28:14] *** Joins: dalan (~dalan@110-175-186-185.tpgi.com.au)
[07:36:41] *** Joins: Zelec946 (~Zelec@135-23-82-85.cpe.pppoe.ca)
[07:37:41] *** Quits: Zelec94 (~Zelec@135-23-82-85.cpe.pppoe.ca) (Ping timeout: 268 seconds)
[07:37:42] *** Zelec946 is now known as Zelec94
[07:37:55] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca) (Remote host closed the connection)
[07:54:53] *** Quits: FIGBERT (~FIGBERT@figbert.com) (Quit: Signing off.)
[07:55:30] *** Joins: FIGBERT (~FIGBERT@figbert.com)
[08:14:49] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[08:19:34] *** Quits: FIGBERT (~FIGBERT@figbert.com) (Quit: Signing off.)
[08:20:38] *** Joins: FIGBERT (~FIGBERT@figbert.com)
[08:22:07] *** Quits: gschanuel (~gschanuel@200-181-252-244.user3p.brasiltelecom.net.br) (Read error: Connection reset by peer)
[08:22:35] *** Joins: gschanuel (~gschanuel@200-181-252-244.user3p.brasiltelecom.net.br)
[08:32:38] *** Quits: FIGBERT (~FIGBERT@figbert.com) (Quit: Signing off.)
[08:33:13] *** Joins: FIGBERT (~FIGBERT@figbert.com)
[08:33:25] *** Joins: waldo323_ (~waldo323@d149-67-45-83.clv.wideopenwest.com)
[08:36:16] *** Quits: waldo323__ (~waldo323@d149-67-45-83.clv.wideopenwest.com) (Ping timeout: 268 seconds)
[08:36:47] *** Joins: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29)
[08:38:18] <FIGBERT> Question: My host OS supports IPv6, and I can ping it over the internet. However, I can't figure out how to make it so that my containers are also reachable.
[08:38:33] <FIGBERT> I'm currently running my setup from a docker-compose file
[08:38:38] <richard_h> hi - there seem to be many ways to start a container. How can I see what method a given container uses?
[08:38:48] <richard_h> I didn't set it up, but it starts on boot
[08:39:22] <FIGBERT> I also just recently moved OSes (from Debian to Alpine). On Debian, the host wasn't reachable from IPv6 but the containers appeared to be listening over the IPv6. On Alpine, the inverse is true
[08:42:23] <richard_h> I see docs on 'Restart Policies', but that doesn't seem to relate particularly to boot-time of the host
[08:42:41] <richard_h> and if that is how it starts, how can I see what the current policy is?
[08:48:07] <richard_h> maybe I should be looking at containerd?
[08:50:50] <richard_h> the container seems to be running under containerd, but I can't see where it's configured 
[09:11:58] *** Quits: gschanuel (~gschanuel@200-181-252-244.user3p.brasiltelecom.net.br) (Read error: Connection reset by peer)
[09:12:12] *** Joins: gschanuel (~gschanuel@200-181-252-244.user3p.brasiltelecom.net.br)
[09:13:49] *** Quits: FIGBERT (~FIGBERT@figbert.com) (Quit: Signing off.)
[09:14:54] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[09:16:08] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:16:41] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[09:17:50] *** Joins: FIGBERT (~FIGBERT@figbert.com)
[09:21:25] <FIGBERT> Figured it out!
[09:25:41] *** Quits: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29) (Quit: Leaving.)
[09:25:43] *** Quits: artok (~azo@mobile-access-bcee6d-221.dhcp.inet.fi) (Ping timeout: 272 seconds)
[09:28:06] *** Quits: Cleverness (~clevernes@pool-100-2-45-18.nycmny.fios.verizon.net) (Quit: Leaving)
[09:33:29] *** Quits: yjftsjthsd (~yjftsjths@162.127.123.34.bc.googleusercontent.com) (Remote host closed the connection)
[09:34:16] *** Joins: yjftsjthsd (~yjftsjths@162.127.123.34.bc.googleusercontent.com)
[09:43:25] *** Joins: Lutin (~Lutin@user/lutin)
[10:00:03] *** Joins: artok (~azo@mobile-access-bcee6d-221.dhcp.inet.fi)
[10:03:07] *** Joins: thc202 (~thc202@user/thc202)
[10:05:05] *** Quits: artok (~azo@mobile-access-bcee6d-221.dhcp.inet.fi) (Ping timeout: 268 seconds)
[10:06:15] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[10:06:22] <ash_worksi> I need an example of running `docker-compose exec`
[10:15:38] *** Joins: realies (~realies@user/realies)
[10:21:45] <Lutin> ash_worksi google ?
[10:22:24] <ash_worksi> Lutin: I failed
[10:22:58] <ash_worksi> nonetheless, I am guessing I have to run a service using `up` to target a service by service name using `exec`
[10:25:00] <ash_worksi> now I have to figure out how I can run the psalm-language-server without using -i 
[10:32:42] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 240 seconds)
[10:35:47] *** Joins: bradley (~bradley@user/bradley)
[10:37:24] <ash_worksi> whaaat, stdin_open is a thing?
[10:40:24] *** Joins: artok (~azo@mobile-access-bcee6d-221.dhcp.inet.fi)
[10:54:02] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[10:54:22] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:03:03] *** Quits: patchie (~sdf@136.228.219.56) (Ping timeout: 268 seconds)
[11:07:06] *** Joins: tex (~super@user/dix)
[11:12:55] *** Joins: wattux (~wattux@212.51.23.106)
[11:17:36] *** Quits: Lutin (~Lutin@user/lutin) (Quit: Lutin)
[11:18:14] *** Joins: Lutin (~Lutin@user/lutin)
[11:19:02] <Lutin> ash_worksi just in command ?
[11:19:38] <ash_worksi> Lutin: not sure what "just in command" means.
[11:21:01] <Lutin> oh damn you need compose
[11:21:06] <Lutin> erm... entrypoint ?
[11:21:16] <Lutin> Just make your own freaking image ?
[11:24:21] *** Parts: etienneme (~etienne@176-149-215-214.abo.bbox.fr) ()
[11:24:22] <ash_worksi> Lutin: the reason I wanted an example of `exec` is because I was trying to setup my linter to use a running docker container (rather than spawn one on each lint)
[11:25:47] *** Joins: VaniaPy (~VaniaPy@46.12.191.195.dsl.dyn.forthnet.gr)
[11:25:53] <ash_worksi> Lutin: the problem that I have with just using `docker run ...` is that the image must be set statically then; I am using PHP, and so far am maintaining crap from PHP5,7,8, so I don't want to have to build 3 lint images for this purpose
[11:26:46] <ash_worksi> Lutin: so I had the brilliant idea of just using `docker-compose run ...` which worked great. Since it only needs a service name I can just specify everything in docker-compose.yml
[11:27:11] <ash_worksi> Lutin: however, that has to spawn a container on every lint (like I mentioned)
[11:27:36] *** Joins: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29)
[11:28:11] <ash_worksi> so I thought I could just set my linter like so `let g:ale_command_wrapper = 'docker-compose exec linter %*'`
[11:28:42] <ash_worksi> since docker-compose can reference service names then that takes care of both problems
[11:29:35] <ash_worksi> the problem I had after that was keeping the container open. I didn't realize that the linting program was designed to work specifically with STDIN, and as such would immediately die if not supplied with an interactive option
[11:29:55] *** Joins: etienneme (~etienne@176-149-215-214.abo.bbox.fr)
[11:31:02] <ash_worksi> but of course, I didn't think this through and just realized a moment ago that even holding the container open with STDIN wont do anything if I actually want to use the command the container is running (which I probably would since it's a language server)
[11:31:42] <ash_worksi> anyway, even if that were not the case (ie, the process is just held open, basically by a supervisor)
[11:32:01] <richard_h> trying to figure out how a container starts on boot
[11:32:20] <ash_worksi> then my command should (I would imagine) still work as a wrapper
[11:32:22] <ash_worksi> but it's not
[11:32:26] <ash_worksi> and I dont know why :\
[11:32:40] <ash_worksi> richard_h: what are you trying to do?
[11:35:04] <Lutin> ash_worksi eh ? I dont get it... why don't you use args with run ?
[11:35:17] <richard_h> I have a server, which I installed, on which somebody else set up a docker container
[11:35:33] <richard_h> That container starts on boot. I'm trying to find the configuration that achieves that
[11:35:55] <richard_h> I suspect it's not in a config file as I understand it, though ...
[11:36:10] <ash_worksi> Lutin: because I don't have that degree of aptitude to pass args dynamically from ALE to the wrapper
[11:36:42] <ash_worksi> richard_h: is the machine in a swarm?
[11:37:03] <richard_h> well there's only one, so I suspect not :-)
[11:37:35] <Lutin> ash_worksi why not ?
[11:37:43] <ash_worksi> richard_h: it could be a swarm manager
[11:37:49] <richard_h> the bigger picture is that I'm getting ready to upgrade the host from stretch to buster, and want to understand the setup better
[11:38:06] <ash_worksi> Lutin: because I have only dealt with ALE for like 2 days
[11:38:06] <richard_h> ash_worksi: where should I look to figure that out?
[11:38:30] <ash_worksi> richard_h: just run `docker service ls`, if you get an error, it's not in a swarm
[11:38:44] <Lutin> ALE?
[11:39:16] <Lutin> speak english my friend :P
[11:39:19] <ash_worksi> Lutin: ALE is the vim-plugin linter I am using. That is what should be calling `docker... <linter> $@`
[11:39:32] <ash_worksi> (in order to lint)
[11:39:36] <Lutin> ah ok
[11:39:45] <richard_h> ash_worksi: this node is not a swarm manager
[11:39:55] <Lutin> fake it until you make it
[11:40:08] <richard_h> ps mentions containerd, if that helps
[11:40:10] <ash_worksi> Lutin: that hasn't been working out for me very well thus far :P
[11:40:29] <Lutin> try harder!
[11:40:38] <ash_worksi> I think containerd is a 3rd party docker management system, no?
[11:40:53] <richard_h> it could be; I'm not sure
[11:41:30] <richard_h> the package is containerd.io
[11:41:41] <ash_worksi> yeah I don't have containerd.... that might be what's starting it; the other possibility is that the container has restart: always defined in it's config, but I'm not sure if that works outside of swarm
[11:42:00] <richard_h> where would I find that config?
[11:42:16] <ash_worksi> richard_h: first, what container is running? 
[11:42:45] <richard_h> how do you mean? The name of it? The image it's built from?
[11:42:53] <richard_h> it's a custom image, afaik
[11:43:09] <richard_h> it runs Atlassian bitbucket
[11:43:19] <ash_worksi> richard_h: if you run `docker ps` how many containers do you see running?
[11:43:33] <richard_h> one
[11:43:48] <ash_worksi> and what does it say for it's image?
[11:44:14] <ash_worksi> you can inspect the complete configuration using `docker inspect <container_name>` for the record
[11:44:17] <richard_h> I'm not sure that's public info - can I progress without that?
[11:44:18] *** Quits: RV06 (~RV@lfbn-nic-1-430-119.w90-116.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[11:44:20] <richard_h> ok
[11:44:41] <ash_worksi> you mean, you can't reveal that, or you don't know if it's revealed to you?
[11:44:59] <richard_h> I don't know if I can reveal it
[11:45:33] <richard_h> I now see something that might be json data
[11:45:36] <ash_worksi> okay, well it's not that big of a deal
[11:45:47] <ash_worksi> richard_h: it is most definitely json
[11:46:08] <richard_h> under State, it has "Restarting": false, if that's what I'm looking for
[11:46:26] <ash_worksi> no, that would just be true if the container were currently down
[11:46:33] <richard_h> oh, ok
[11:47:11] <ash_worksi> my guess is that you need to look into containerd -- I would bet there's some configuration there that's bringing up the container on start
[11:47:31] <richard_h> oh - "RestartPolicy": {  "Name": "unless-stopped", ... }
[11:48:33] <richard_h> ok, thanks. I'll try to find more info on that, if it's not on-topic here (or even if it is but no-one's commenting :-)
[11:48:39] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 272 seconds)
[11:48:53] <ash_worksi> richard_h: sorry I couldn't be more helpful
[11:48:59] *** Joins: cliluw (~cliluw@47.147.80.149)
[11:49:15] <richard_h> thanks - I've definitely learned stuff :-)
[11:49:18] <ash_worksi> richard_h: ftw, it might be easier to see bits of JSON using `jq` if you have that utility installed
[11:49:24] <ash_worksi> fwiw*
[11:50:15] <ash_worksi> Lutin: I am trying, but I am finding it difficult to really debug anything and I am not sure what ALE is doing
[11:50:31] *** Quits: artok (~azo@mobile-access-bcee6d-221.dhcp.inet.fi) (Ping timeout: 268 seconds)
[11:51:20] <richard_h> btw is that the same json, possibly re-ordered, that I found under /var/lib/docker/containers/xxx/config.v2.json ?
[11:52:03] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[11:52:25] <richard_h> jq could be useful, though the output of docker inspect seemed relatively nicely formatted, unlike the file above
[11:52:43] *** Joins: Hackerpcs (~user@user/hackerpcs)
[11:52:52] <richard_h> ... which I reformatted earlier by piping through json_pp
[11:52:57] *** Joins: patchie (~sdf@136.228.222.22)
[11:54:57] *** Joins: pvdp (~Pieter@static-n58-105-183-94.rdl4.qld.optusnet.com.au)
[11:55:56] <ash_worksi> richard_h: well, I tend to use it to navigate complex json trees by just printing keys n-levels deep. Not sure how useful it is in this case, but for example: `docker inspect <container> | jq '.[0] | keys'`
[11:56:18] <richard_h> ash_worksi: thanks.
[11:56:43] <richard_h> I now have bigger problems - I can't reach the server at all :-) But that's no longer a docker problem ...
[11:57:51] <ash_worksi> heh
[11:58:06] <ash_worksi> richard_h: json_pp is a perl utility?
[11:58:22] <richard_h> it appears to be - it comes with perl
[11:58:36] <ash_worksi> I see
[11:59:05] <richard_h> it's the tool I found earlier today (was suggested by someone on #debian)
[12:00:39] *** Parts: FIGBERT (~FIGBERT@figbert.com) (Signing off.)
[12:00:41] <ash_worksi> just putting this out there, again using jq: `... | jq 'paths | select(.[-1] == "RestartPolicy")'` will give you all the paths to reach that key (wherever it may be)
[12:01:11] <richard_h> thanks - I'll look back here if/when the server comes back :-)
[12:01:24] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[12:01:46] *** Joins: CombatVet (~c4@user/combatvet)
[12:02:36] <richard_h> can you remind me how to find the names of containers that _aren't_ running?
[12:02:51] <richard_h> (my test box has several of those)
[12:03:01] *** Joins: anandprabhu (~anandprab@87.201.97.214)
[12:03:28] <richard_h> docker container ls --all
[12:04:08] *** Joins: NeoCron (~NeoCron@p548a2a2e.dip0.t-ipconnect.de)
[12:05:16] <ash_worksi> yes
[12:05:22] <ash_worksi> richard_h: or just `docker ps -a`
[12:05:57] <richard_h> I'm guessing jq in this case has nothing to do with jquery
[12:06:34] <ash_worksi> richard_h: no
[12:06:47] <ash_worksi> richard_h: it's just a command-line utility for parsing JSON
[12:09:53] *** Joins: RV06 (~RV@pop.92-184-102-174.mobile.abo.orange.fr)
[12:12:18] *** Quits: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[12:13:03] *** Joins: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com)
[12:13:23] *** Joins: jonifen (~jonifen@user/jonifen)
[12:15:43] <richard_h> so your command pipeline above gives me (if my understanding of json is right) an array of 3 items, of which one is "RestartPolicy", but doesn't give me a value for it (ie the contents of the dictionary/hash/whatever)
[12:18:58] *** Quits: gschanuel (~gschanuel@200-181-252-244.user3p.brasiltelecom.net.br) (Read error: Connection reset by peer)
[12:19:20] *** Joins: gschanuel (~gschanuel@200-181-252-244.user3p.brasiltelecom.net.br)
[12:21:31] *** Quits: NeoCron (~NeoCron@p548a2a2e.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:22:08] *** Quits: Bebef_ (sbreit@phobos.bebef.de) (Quit: bye)
[12:22:40] *** Joins: Bebef_ (sbreit@phobos.bebef.de)
[12:34:15] <ash_worksi> richard_h: correct, that last pipeline was just to illustrate how to find the path to keys labelled "RestartPolicy"
[12:39:17] <ash_worksi> richard_h: a possibly more useful pipeline is: `docker inspect <container> | jq -r '.[0] | paths | select(.[-1] | tostring | test("restart";"i")) | ".[0]." + join(".")' | @sh`
[12:39:20] *** Quits: RV06 (~RV@pop.92-184-102-174.mobile.abo.orange.fr) (Read error: Connection reset by peer)
[12:40:21] <richard_h> ash_worksi: thanks - I think in fact, now that I think it's containerd I need to be studying, I ... may or may not come back to that later :-)
[12:40:37] <ash_worksi> heh
[12:40:43] <richard_h> IOW thanks for the tips, but no need to continue :-)
[12:41:22] *** Joins: RV06 (~RV@pop.92-184-102-174.mobile.abo.orange.fr)
[12:41:26] <richard_h> the guy who set it up should be online shortly, and can hopefully explain everything :-)
[12:42:35] <ash_worksi> richard_h: yes, well, to complete the thought, you should've ended up with something lines containing the following in the output: '.[0].HostConfig.RestartPolicy'
[12:43:10] <ash_worksi> richard_h: as it might be apparent, that would show you how to target all keys containing the word "restart"
[12:43:42] <ash_worksi> richard_h: so you could then just do something like `... | jq '.[0].HostConfig.RestartPolicy'`
[12:44:25] <richard_h> am I perhaps right to be reminded of xpath?
[12:45:58] <ash_worksi> um... as far as paths are concerned perhaps, but the similarities basically end there
[12:46:25] <ash_worksi> richard_h: if you'd like to play around with it: https://jqplay.org/s/8z7Kf_zYfK
[12:46:44] <richard_h> thanks
[12:48:49] *** Joins: gearnode (~gearnode@2a01cb000ce2c100b0b4e37bd756bdb4.ipv6.abo.wanadoo.fr)
[12:57:53] *** Quits: RV06 (~RV@pop.92-184-102-174.mobile.abo.orange.fr) (Read error: Connection reset by peer)
[13:05:33] *** Joins: vincent- (~vincent-@31.221.37.8)
[13:10:49] *** Joins: SystemC (~asdf@port-92-196-52-127.dynamic.as20676.net)
[13:14:03] <SystemC> Hey guys, I'm new to Docker and still figuring out how things working. Example: nginx docker file. How can I change nginx.conf permanently in the right way? Do I just create an nginx.config file on the host machine and share the folder to /etc/nginx/ ? This doesn't make sense does it?
[13:14:07] *** Parts: VaniaPy (~VaniaPy@46.12.191.195.dsl.dyn.forthnet.gr) ()
[13:16:32] <SystemC> I got it. It seems you have to create a new docker file out of the existing one and overwrite the config file for that container. It is permanent then :)
[13:19:29] *** Quits: Lutin (~Lutin@user/lutin) (Quit: Lutin)
[13:27:23] *** Joins: MC_Raw (uid504644@id-504644.charlton.irccloud.com)
[13:43:24] *** Joins: artok (~azo@mobile-access-bcee6d-221.dhcp.inet.fi)
[13:46:32] *** Joins: Lutin (~Lutin@user/lutin)
[13:47:44] *** Joins: vincent-- (~vincent-@31.221.37.8)
[13:50:03] *** Quits: vincent- (~vincent-@31.221.37.8) (Ping timeout: 244 seconds)
[13:50:42] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 240 seconds)
[13:52:48] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[14:03:00] *** Joins: lmat (~lawsa@c-68-58-60-231.hsd1.in.comcast.net)
[14:03:19] <lmat> Is there any way to add condition evaluation to a Dockerfile?
[14:03:35] <lmat> So, if a certain variable holds a particular value, run this dockerfile command, otherwise run that dockerfile command?
[14:07:11] <artok> you can do tests as with normal shell scripts
[14:10:45] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[14:14:12] <artok> RUN if [ "$VARIABLE" == "fooo" ]; then echo "yeah"; else echo "no"; fi
[14:14:28] <lmat> I'm needing something like RUN --mount=type=cache,target=/home/node/npm-cache npm install when doing development locally, but just RUN npm install on our CI server.
[14:14:50] <lmat> So I don't believe a shell script will help here. I need dockerfile-level conditional statements.
[14:14:58] <artok> oh in that case
[14:18:42] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 272 seconds)
[14:20:06] *** Quits: patchie (~sdf@136.228.222.22) (Ping timeout: 264 seconds)
[14:21:10] *** Joins: DM-Bot (~TheFather@user/dm-bot)
[14:21:12] *** Parts: DM-Bot (~TheFather@user/dm-bot) ()
[14:21:21] <artok> out of my head I've got only one answer, put CI to work with different Dockerfile than local dev
[14:24:10] <lmat> artok: Okay, thanks for helping!
[14:24:21] <lmat> artok: Another solution would be to write a script to pre-process the Dockerfile.
[14:26:02] <lmat> Of course, another solution would be if we can --mount=type=cache,uid=${UID}... UID is a build argument.
[14:26:18] <lmat> The reason we can't do the --mount=type=cache in CI is because the CI runner doesn't run as root.
[14:30:49] <artok> ./gen_dockerfile.sh that will take Dockerfile.in and populate things inside as needed.. create Dockerfile and Dockerfile.dev, where latter is then manually set as docker build -f Dockerfile.dev
[14:31:13] <lmat> Yes, right.
[14:31:49] <artok> but that uid thing could work actually, need to be tested
[14:38:19] <lmat> artok: It didn't work for me.
[14:41:54] <artok> so calls for that script, then
[14:43:14] *** Joins: thiras (~thiras@user/thiras)
[14:45:02] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[14:45:14] <lmat> Yes, appears so.
[14:47:39] <Fossil> Will placing a node in drain mode remove or just stop containers? And is it possible to change either behavior?
[14:51:53] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 272 seconds)
[15:00:11] *** Parts: SystemC (~asdf@port-92-196-52-127.dynamic.as20676.net) ()
[15:05:11] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[15:07:12] *** Joins: OPK (~OPK@user/opk)
[15:07:27] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Quit: Ping timeout (120 seconds))
[15:07:51] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[15:11:05] <tabakhase> lmat that more sounds like you should fix your dockerfile to cache layers correctly ;-) that npm-install layer you should usually be able to reuse "for weeks"
[15:12:02] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[15:13:44] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:15:07] *** Quits: anandprabhu (~anandprab@87.201.97.214) (Quit: Leaving)
[15:18:45] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca)
[15:20:27] <lmat> tabakhase: We're in a fairly early stage of development, and adding to package.json "scripts" fairly often.
[15:23:05] <tabakhase> lmat kk, just making sure youre not using the usual "COPY . ; RUN npm i " many get ont here first run that busts everything on every single change :D - if you already pick packages.json first ya all fine indeed
[15:25:25] *** Joins: Bardon (~Bardon@user/Bardon)
[15:29:26] <tabakhase> tho, if you are "only adding scripts" i wonder if one can cheese that somehow... like some fake-multistage shenanigans to optimize the install by reusing the modlues-tree of the prev. build...
[15:31:10] <tabakhase> idk if "docker build -t this:it" and a "COPY modules modules --from=this:it; COPY package.json; RUN npm i" works, or horribly breaks ;D
[15:31:38] <Lutin> this is weird... I run a docker container as root and it's running under someone else his username ?
[15:31:59] *** Joins: GoLiath_ (~GoLiath@80.179.69.241.cable.012.net.il)
[15:36:07] *** GoLiath_ is now known as Quizzicalliodd
[15:37:12] <sebastianos> Hi
[15:37:43] *** Quizzicalliodd is now known as WTaF
[15:38:22] <sebastianos> Anyone learning with online courses for docker.
[15:38:54] <lmat> Lutin: Using heroku? :vomit:
[15:38:57] <sebastianos> Pls share ur courses details
[15:39:24] <Lutin> lmat no just basic docker install on ubuntu
[15:40:14] <lmat> sebastianos: I use https://docs.docker.com/engine/reference/builder/ https://docs.docker.com/engine/reference/commandline/cli/ etc. good luck.
[15:40:33] <lmat> Lutin: I doubt you'll get help unless you provide more details :-)
[15:41:24] <Lutin> lmat can't say more that I just run it as root and it pops up under a user which I almost shot through his head... luckely for him he is 1200KM's away from me :D
[15:43:11] <Lutin> And I don't own a gun
[15:43:20] <Lutin> I probably would have bitchslapped him
[15:43:35] <Lutin> but he might have liked that so... not a good idea either
[15:45:57] <sebastianos> lmat: Thanks, I will try it.
[15:50:28] <lmat> Lutin: Still not following. You `docker run ... & ps -ef | grep docker;` and see that docker is running as non-root? Or the process that is running INSIDE docker is running as non-root?
[15:52:13] <Lutin> lmat ps on the node shows another user
[15:52:21] <Lutin> ps aux to be precise
[15:53:25] <tabakhase> Lutin what even means "run it as root" to ya?
[15:53:34] <tabakhase> but that all sounds perfectly as expected
[15:53:40] <tabakhase> shared kernel...
[15:53:47] <Lutin> tabakhase su'ed into root
[15:54:03] <tabakhase> that aint answering the question either
[15:54:04] <Lutin> tabakhase but just a random user ?
[15:54:39] <tabakhase> who sued into root where and how...
[15:55:15] *** Joins: _sean (~xsean@203.86.202.187)
[15:55:30] *** Joins: maret (~textual@nat-88-212-37-89.antik.sk)
[15:56:31] <maret> hi . I have a linux machine where I want to run docker image. I want docker image to use not / as a filesystem but mounted drives in raid which are mounted at /mnt/drives-raid. How do I do that?
[15:57:10] <tabakhase> maret what underlaying "problem" are you trying to solve there?
[15:57:32] <Lutin> tabakhase I did under my username
[15:57:37] <maret> tabakhase I want docker image to have access to faster raid drives rathern then slower OS one
[15:57:38] <ash_worksi> richard_h: did you get your problem solved
[15:57:40] <ash_worksi> ?
[15:57:42] <maret> which also has limited space
[15:58:05] <maret> although I guess thats just about adding volumes ? to docker container?
[15:59:00] <tabakhase> maret so youre saying "the disk where /var/lib/docker (what contains pretty much all the things) is on is slow"? - you can move that single thing either by mounting, or by setting the "datadir" in dockers daemon.json -- if were just talking "for single files you use" bind-mounts into the container can come from "wherever"
[15:59:17] <maret> I guess that would be enough although not sure how to make it so os (linux) running inside of docker mounts these as a drive
[15:59:50] <tabakhase> "there is no os running inside those" ;-) - its all the hosts kernel
[16:01:13] <Lutin> haproxy needs it's own dns resolver for docker, same for mysql in a galera cluster ?
[16:01:17] <tabakhase> "docker run -v /mnt/drives-raid/mydqb:/var/lib/mysql mysql" will "have the db on your fast disk, but not the rest from the container" so to say - to move "it all" see above mentioned datadir config
[16:02:06] <tabakhase> (((there is also a standalone plugin to "put volumes somewhere else" - but you likely want the actual image-layers as well likely anyhow, so full datadir likely most reasonable)
[16:03:08] <tabakhase> *but you likely want the actual image-layers somewhere  else as well anyhow - this way m(
[16:03:22] <richard_h> ash_worksi: I'm not sure - I ended up with broken grub, so I'm trying to fix that ...
[16:03:36] <ash_worksi> :\
[16:04:13] <maret> yeah I mean. -v /mnt/drives-raid:/mnt/drives-raid would give diocker image access to whole drives at /mnt/drives-raid path so thats all I really wanto although --datadir might be sueful because the drive really has limited space
[16:05:00] <tabakhase> neato
[16:05:30] <tabakhase> Lutin what "you" run a docker command as noone cares - heck, docker-daemon doesnt even "know" who called it, 2 different processes with an api inbetween
[16:06:01] <Lutin> tabakhase it could lookup who ran the command
[16:06:30] <tabakhase> Lutin then "what the container actually does" depends on the image - with the added funnyness that the container has its own passwd&groups files (so "names" differ!) - while the kernel actually uses just one UID tabel (nummeric) - so ps on the host may show the stupidest things, totally expected
[16:08:01] *** Quits: gearnode (~gearnode@2a01cb000ce2c100b0b4e37bd756bdb4.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[16:08:25] *** Joins: gearnode (~gearnode@2a01cb000ce2c1008ca2093f6cef466a.ipv6.abo.wanadoo.fr)
[16:09:10] <tabakhase> rel fun gets when you then have to mesh this with ACLs for bind-mounts | oh and ofc. all this is runtime, not "build" as your uid is different than mine :D -- and you land on tooling like https://github.com/boxboat/fixuid (a readme worth reading either way)
[16:10:05] <tabakhase> its all a little stupid - but it makes sense why things are that way in the end....
[16:13:48] <Lutin> tabakhase yap true... is there an option to run it @ userID ?
[16:13:55] * Lutin is lazy atm hot here
[16:17:49] *** Quits: CB_JD (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 272 seconds)
[16:18:09] *** Joins: CB_JD (~Code_Bleu@user/code-bleu/x-6939963)
[16:20:35] <tabakhase> --user?
[16:22:12] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 272 seconds)
[16:26:30] <Lutin> also for root ?
[16:26:55] <Lutin> I will try :D
[17:13:36] *** Joins: arinov_ (~arinov@212.156.215.30)
[17:17:49] *** Joins: trevors_ (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[17:18:34] *** Quits: ada_ (~ada@user/ada/x-9065485) (Read error: Connection reset by peer)
[17:19:27] *** Joins: pete443 (~pete443@user/pete443)
[17:21:04] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Ping timeout: 268 seconds)
[17:23:58] *** Joins: ada_ (~ada@user/ada/x-9065485)
[17:23:58] *** ChanServ sets mode: +o ada_
[17:28:14] *** Joins: bonhoeffer (~tim@159.63.128.50)
[17:28:37] <bonhoeffer> i messed up and changed all the files in my data directory to -type f -exec chmod 644 {} -- now the database won't load i'm trying to figure out how to make sure docker can access
[17:29:29] *** Quits: pvdp (~Pieter@static-n58-105-183-94.rdl4.qld.optusnet.com.au) (Remote host closed the connection)
[17:29:53] <gordonjcp> bonhoeffer: do you have a backup of your database?
[17:29:57] <bonhoeffer> yes
[17:30:28] <bonhoeffer> blow it away, rebuild via docker-compose and migrate in backup?
[17:30:32] <gordonjcp> is it recent enough that you can just blat the database you screwed up and reinstall?
[17:30:37] <bonhoeffer> yeah
[17:31:04] *** Quits: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29) (Quit: Leaving.)
[17:31:12] <bonhoeffer> and that will answer my question
[17:31:22] <bonhoeffer> i'll see what gets created
[17:31:33] * Lutin winks at ada_
[17:32:15] <gordonjcp> bonhoeffer: the other way of course if you hadn't got a recent enough backup is to create a new container with a new db in a new volume
[17:32:21] <gordonjcp> and then compare the two directories
[17:32:27] <bonhoeffer> yeah!
[17:32:44] <gordonjcp> but uh
[17:32:53] <gordonjcp> I've *never* done anything like that, no no no, not me
[17:32:54] <Lutin> gordonjcp you want a wink as well ?
[17:33:38] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[17:33:57] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[17:37:40] *** Joins: patchie (~sdf@136.228.211.49)
[17:38:56] <patchie> i am running a python script inside a docker container, where i get error message: "No available video device". i got some hint in the #python channel, and was hinted to this channel. The hint was: "-m /dev:/dev --privileged"
[17:38:58] <patchie> how do i do this?
[17:39:25] <patchie> running windows 10 on host, and official python docker inside the container
[17:39:40] <patchie> installed Xming on host
[17:40:39] <bonhoeffer> gordonjcp, its strange -- when i recreate i get permissions drwx------ 19 systemd-coredump root
[17:40:49] <bonhoeffer> which also doesn't have access
[17:42:40] <gordonjcp> patchie: that would be part of the command you use to start the container
[17:42:49] <gordonjcp> patchie: you're mounting /dev on the host as /dev on the container
[17:42:57] <gordonjcp> patchie: this is pretty insecure though
[17:43:15] <patchie> aha, how should i do this, to get gui from the docker image?
[17:45:42] <bonhoeffer> anyone know what ownership i should have on /var/lib/postgresql/data
[17:47:10] *** Joins: dcormier (~dcormier@rebuts.cricket)
[17:48:02] <artok> bonhoeffer: postgres
[17:48:29] <artok> or the one that is used on --user 
[17:51:17] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 268 seconds)
[17:51:48] *** Joins: cliluw (~cliluw@47.147.80.149)
[17:53:34] *** Joins: rsx (~dummy@ppp-188-174-130-150.dynamic.mnet-online.de)
[17:56:52] <Lutin> artok do you run SQL cluster or still everything in files ?
[17:56:55] <Lutin> *custers
[17:57:00] <Lutin> he damnit1
[17:57:05] <Lutin> *clusters
[17:58:20] <artok> mongodd/influxdb
[17:58:55] *** Quits: pete443 (~pete443@user/pete443) (Quit: Leaving)
[17:59:15] <artok> that is, no sql at the moment
[17:59:29] <Lutin> ok, but did you do ?
[18:00:39] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[18:01:04] *** Joins: c10l (~c10l@89.34.167.207)
[18:02:37] <artok> not in deployment
[18:04:27] <artok> spun up galera cluster in test env 
[18:05:47] *** Joins: pete443 (~pete@user/pete443)
[18:07:21] *** Quits: patchie (~sdf@136.228.211.49) (Ping timeout: 244 seconds)
[18:07:40] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[18:09:10] *** Quits: bonhoeffer (~tim@159.63.128.50) (Ping timeout: 268 seconds)
[18:14:46] *** Quits: pete443 (~pete@user/pete443) (Quit: ZNC 1.8.2 - https://znc.in)
[18:16:32] *** Joins: pete443 (~pete443@user/pete443)
[18:18:57] *** Quits: wattux (~wattux@212.51.23.106) (Quit: Client closed)
[18:19:14] *** Joins: ph88 (~ph88@ip5f5af6fd.dynamic.kabel-deutschland.de)
[18:19:24] <ph88> how can i get the dockerfile from this example ?  https://hub.docker.com/_/hello-world 
[18:23:32] <rawtaz> you click on one of the tag links
[18:24:21] *** Joins: impermanence (~impermane@72-50-218-169.fttp.usinternet.com)
[18:24:40] <impermanence> is it possible to run docker inside docker via --mount?
[18:25:02] <impermanence> of do I have to bind mount the docker.sock?
[18:25:16] <rawtaz> impermanence: what problem are you trying to solve by wanting to do that?
[18:25:24] <rawtaz> you can definitely always mount the docker.sock if you want to
[18:25:34] <rawtaz> i think e.g. traefik does that in its docker image
[18:27:00] <impermanence> rawtaz: i want to run linux on mac; i don't want to use vbox, vagrant or anything like that; i don't want to run dind really I mean I guess I could; I just want to do it raw basically :-)
[18:27:10] <impermanence> i have it working with a bind mount
[18:28:02] <impermanence> let me ask a different question: does running docker in docker always result in the guest docker service always basically just connecting back to the host docker service?
[18:28:15] <rawtaz> if you are running docker on mac, you are already running a virtualized linux VM on xhuve..
[18:28:17] <impermanence> i guess i was imagining two completely independent docker services
[18:28:18] <rawtaz> xhyve*
[18:28:35] <rawtaz> i have no idea, i never even contemplated running docker inside docker. why the heck would you do that
[18:29:01] <rawtaz> if you want to run a linux environment, rather than a docker environment, then for gods sake just use vmware fusion - it's free to use and it works very well
[18:29:07] *** Joins: stroopwafel (~stroopwaf@80-60-192-225.fixed.kpn.net)
[18:29:25] <impermanence> rawtaz: terraform providers are mainly written for linux; at work I use a mac.  i don't want to run fusion you have to do a ton of stuff to start maintaining that.
[18:29:35] <stroopwafel> hi, is there any way to change the default branch when setting up an autobuild on docker hub? 
[18:29:36] <impermanence> running d in d is cheaper and faster
[18:30:01] <impermanence> rawtaz: so how would i do it with just --mount?
[18:30:09] <rawtaz> impermanence: no, all you need to do is install fusion, then you install a vm by booting the linux iso of your choice and install it. theres not much maintenance to that
[18:30:28] <rawtaz> impermanence: if you want to run terraform in docker, why not just run it in docker? why are you talking about running docker inside docker?
[18:30:43] <rawtaz> just run tf in a docker image, they maybe have official ones somewhere?
[18:31:08] <impermanence> of course...but how about when terraform is going to spin docker lol?  then you need docker...in the tf container.
[18:31:19] <impermanence> and now we're here.
[18:31:31] <artok> wait what.. 
[18:31:36] <rawtaz> i dont get it. if you want to run tf in a docker container, run tf in a docker container? why would you try to start that docker container from within tf?
[18:32:06] <impermanence> what if my tf testing involves starting a docker container?
[18:32:07] <rawtaz> i mean, isnt it *tf* you want to run? are you saying you want to use something in tf that wants to start docker?
[18:32:15] <impermanence> bingo
[18:32:18] <impermanence> bango
[18:32:24] <rawtaz> alright, that is something i dont know about at all, sorry
[18:32:24] *** Joins: lemonzest (~lemonzest@user/lemonzest)
[18:32:35] <impermanence> rawtaz: k
[18:32:41] <rawtaz> what type of thing is that? some provider thing? you want to have tf test if it works so to speak?
[18:32:51] <impermanence> precisely
[18:32:54] <artok> docker daemon is already there, and you start terraform in container and that has socket mounted, so terraform can start containers
[18:33:04] <impermanence> artok: yeah
[18:33:10] <impermanence> how do I do that with --mount?
[18:33:12] <impermanence> is that possible?
[18:33:26] <impermanence> I have it working with -v but that is just connecting back to the host socket
[18:33:34] *** Joins: neilhwatson (~neilhwats@2001:470:b34d:0:f48d:80d1:f635:e96f)
[18:34:10] <impermanence> i see one point i am confused about now though lol
[18:34:19] <rawtaz> if you google  run docker in docker  theres plenty of hits :)
[18:34:33] <impermanence> i was confused as to why when i launched containers *from* docker it launched them on the host lol
[18:34:39] <impermanence> but of course this makes sense to me now
[18:34:42] <rawtaz> impermanence: check the traefik docker image i mentioned earlier, it does mount the docker.sock or similar afair
[18:35:05] <neilhwatson> I have this one node swarm setup, to use secrets, and my service fails to start with: pull access denied for core-jenkins, repository does not exist or may require 'docker login'  The image is local, there's nothing to pull. What might the cause be?
[18:35:11] <impermanence> rawtaz: okay.  though i have zero use for a servic mesh, but yeah i get your drift.
[18:35:38] <rawtaz> dude, wtf. im just telling you that the exact mounting thing you are asking for is examplified in that docker image. you dont have to run that docker image, just look at the one single mount line :P
[18:35:56] <artok> impermanence: thing is, that to get more 1:1 working that you will deploy, you might want to spin up linux containers
[18:35:57] <impermanence> haha no i get that totally
[18:36:07] <artok> in linux vm
[18:36:08] <impermanence> artok: i am yeah
[18:36:12] <impermanence> oh
[18:36:20] <impermanence> yeah that's what i'm complaining about
[18:36:32] <impermanence> if i was going to do that i would just use vagrant on my mac
[18:36:39] <artok> don't complain, enjoy docker-machine that provisions vm for you
[18:36:49] <impermanence> hm
[18:37:01] <impermanence> yeah that's interesting thanks artok 
[18:37:14] <impermanence> thanks rawtaz  and artok
[18:37:15] *** Quits: impermanence (~impermane@72-50-218-169.fttp.usinternet.com) (Quit: leaving)
[18:37:18] <rawtaz> yw
[18:41:42] *** Quits: mikeputnam (~mikeputna@wilug/mikeputnam) (Quit: WeeChat 2.8)
[18:44:24] *** Quits: CombatVet (~c4@user/combatvet) (Quit: suck it)
[18:45:00] *** Joins: CombatVet (~c4@user/combatvet)
[18:45:56] *** Quits: compuguy (ahall@194.71.225.74) (Quit: The Lounge - https://thelounge.chat)
[18:46:08] *** Joins: compuguy (ahall@194.71.225.74)
[18:47:53] <tabakhase> neilhwatson swarm generally expects a registry - but prog had posted some policy flags to make it never pull few days ago when someone asked that same question... dont remember what exactly, but thre was a thing :P
[18:49:02] <tabakhase> might been --resolve-image never or smth like this...
[18:49:13] <neilhwatson> It doesn't consistently try to pull. It worked for hours yesterday.
[18:51:04] *** Quits: justyb11 (~justyb@2601:483:500:3ea:f6be:3dd8:f1b2:573a) (Quit: Leaving)
[18:52:03] *** vincent-- is now known as vincent-
[19:00:17] *** Quits: maret (~textual@nat-88-212-37-89.antik.sk) (Quit: maret)
[19:03:27] *** Quits: f0rs3ti (~f0rs3ti@pivpn/maintainer/f0rs3ti) (Quit: I've been here, a long long time ago in a far far away ... whatever  .. i am gone)
[19:03:42] *** Joins: f0rs3ti (~f0rs3ti@pivpn/maintainer/f0rs3ti)
[19:11:04] *** Joins: vincent-- (~vincent-@31.221.37.8)
[19:11:11] *** Quits: vincent- (~vincent-@31.221.37.8) (Read error: Connection reset by peer)
[19:14:18] *** Joins: Thin_icE (~pgp@88.157.222.244)
[19:21:10] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:30:02] <neilhwatson> There's --no-resolve-image, but I'm already using that :(
[19:34:54] <ada_> neilhwatson: can you show a pastebin with the "service create" commands you used to start your service up?
[19:35:04] <ada_> neilhwatson: maybe your compse file if you're using "stack deploy"
[19:35:56] <neilhwatson> It's an ansible module, but I can paste the task. Might be able to pull up the actual command via debug
[19:37:15] *** Quits: stroopwafel (~stroopwaf@80-60-192-225.fixed.kpn.net) (Ping timeout: 244 seconds)
[19:37:27] <ExeciN> Hi people. I'm having a bit of trouble with my image. This is what I'm using https://hastebin.com/devahavebo.Dockerfile . Even though I'm supposedly copying `entrypoint.bash` I'm getting this error: `docker: Error response from daemon: OCI runtime create failed: container_linux.go:380: starting container process caused: exec:
[19:37:27] <ExeciN> "/code/entrypoint.bash": permission denied: unknown.`
[19:37:37] <ExeciN> what am I doing wrong?
[19:38:11] <neilhwatson> @ada_ https://gist.github.com/neilhwatson/dfc161082632ae025d7f2cf2da93d924
[19:38:14] *** Joins: maroloccio (~marolocci@200.243.99.194)
[19:38:21] <artok> ExeciN: do you have executable bit set on that entrypoint?
[19:39:48] <ExeciN> artok: oh, good point, that was the issue
[19:39:54] *** Quits: jazzy (~jaziz@2600:380:4547:d128:8473:ff3e:752d:860f) (Ping timeout: 264 seconds)
[19:40:11] *** Quits: maroloccio (~marolocci@200.243.99.194) (Quit: Client closed)
[19:48:41] *** Quits: ExeciN (~ExeciN@user/nicexe) (Quit: Client closed)
[19:49:14] *** Parts: velix (~velix@user/velix) (Leaving)
[19:49:37] *** Joins: maroloccio (~marolocci@200.243.99.194)
[19:50:18] *** Quits: CB_JD (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 268 seconds)
[19:54:02] *** Joins: jlang (~jlang@user/jlang)
[19:54:32] *** Quits: pete443 (~pete443@user/pete443) (Quit: Leaving)
[19:57:07] *** Joins: thiras (~thiras@user/thiras)
[19:57:17] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:57:19] *** Thin_icE is now known as pgp
[19:58:42] *** Joins: arinov (~arinov@5.24.125.219)
[19:58:56] *** Quits: arinov_ (~arinov@212.156.215.30) (Ping timeout: 268 seconds)
[19:59:56] *** Parts: dirtwash (~dirtwash@user/dirtwash) (WeeChat 2.8)
[20:00:57] <neilhwatson> @ada_ here's a docker cli command. Seems to do the same time, trying to pull a container that's local.   docker service create --no-resolve-image --env "CASC_JENKINS_CONFIG=/var/jenkins_home/casc.yaml" --secret jenkins_admin --secret jenkins_ldap_admin --secret jenkins_ssh_agent_pass --secret jenkins_ssh_agent_key -p 8443:8443 --mount
[20:00:58] <neilhwatson> 'type=volume,src=jenkins_home,dst=/var/jenkins_home' --name core-jenkins-controller core-jenkins "--httpPort=-1 --httpsPort=8443 --httpsKeyStore=/usr/share/jenkins/jenkins_keystore.jks --httpsKeyStorePassword=foobar"
[20:06:11] *** Joins: pete443 (~pete@user/pete443)
[20:08:48] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[20:10:10] *** Joins: CB_JD (~Code_Bleu@user/code-bleu/x-6939963)
[20:31:17] *** Joins: maret (~textual@nat-88-212-37-89.antik.sk)
[20:32:07] *** Quits: pgp (~pgp@88.157.222.244) (Quit: Leaving)
[20:34:27] *** Joins: waldo323__ (~waldo323@d149-67-45-83.clv.wideopenwest.com)
[20:36:40] *** Quits: waldo323_ (~waldo323@d149-67-45-83.clv.wideopenwest.com) (Ping timeout: 244 seconds)
[20:42:52] *** Quits: maroloccio (~marolocci@200.243.99.194) (Quit: Client closed)
[20:46:37] *** Joins: TomyWork (~TomyLobo@p200300e80f133c009dd79b4b96334160.dip0.t-ipconnect.de)
[20:46:39] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:47:34] <Lutin> is it true that when you create a network and you exclude the IP's that they are not always reserved ?
[20:48:27] *** Joins: djacobs (~IceChat95@109.133.171.241)
[20:52:42] *** Quits: JesterHead (~JesterHea@2620:149:e0:5002::968) (Ping timeout: 240 seconds)
[20:58:26] *** Joins: maroloccio (~marolocci@200.243.99.194)
[21:01:00] *** Quits: jonifen (~jonifen@user/jonifen) (Quit: Leaving)
[21:01:40] <ada_> Lutin: what
[21:02:17] <ada_> neilhwatson: can you show a "docker image ls" in your gist 
[21:02:50] <ada_> neilhwatson: I think in Compose syntax the right flag is "never" and not "no"
[21:03:03] <neilhwatson> root@distcc5:~# docker images
[21:03:04] <neilhwatson> REPOSITORY        TAG         IMAGE ID       CREATED       SIZE
[21:03:04] <neilhwatson> core-jenkins      latest      5c6e8c610792   3 hours ago   753MB
[21:03:05] <neilhwatson> jenkins/jenkins   lts-jdk11   416c6656c1cd   13 days ago   684MB
[21:04:02] <ada_> Lutin: can you rephrase your question?
[21:06:00] <Lutin> ada_ I exclude some IP's from IPAM to be handed out when I create a network... it seems that docker assigns the lb-network an IP that I excluded
[21:06:28] *** Quits: maroloccio (~marolocci@200.243.99.194) (Quit: Client closed)
[21:07:23] <ada_> how are you "excluding" IPs?
[21:07:57] <Lutin> ada_ --aux-address="etcd-01=10.1.63.2" \
[21:08:32] *** Quits: vincent-- (~vincent-@31.221.37.8) (Remote host closed the connection)
[21:08:38] <ada_> afaik this is only useful with macvlan networks
[21:08:51] <ada_> Lutin: can you describe your entire problem?
[21:09:24] <Lutin> ada_ it's not :) I need to make sure I can use the IP's for my containers
[21:09:38] <Lutin> etcd is picky on it
[21:09:41] <ada_> im confused
[21:09:49] <ada_> what problem are you trying to solve with etcd
[21:09:53] <ada_> this seems like an X/Y problem
[21:13:33] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 268 seconds)
[21:14:00] <Lutin> I need static IP's and I want them to be .2 .3 .4 but... .2 or .3 is assigned a lot, ot always, by docker to the lb- of a swarm network
[21:14:15] <ada_> you're not using macvlan?
[21:14:34] *** Joins: cliluw (~cliluw@47.147.80.149)
[21:14:44] <Lutin> nope, should I ? I was confused about it's usage
[21:14:56] <ada_> "should" or "shouldn't" really isn't the question here
[21:15:05] <ada_> you aren't right now, so the --aux-address flag is a no-op
[21:15:12] <ada_> so that's why that's not working for you
[21:15:22] <Lutin> mhh docs lack there then
[21:15:29] <ada_> well it's on the macvlan driver doc
[21:15:46] <Lutin> I was already thinking it was only or macvlan but wasn't sure
[21:15:47] <ada_> its not documented in the bridge driver doc
[21:15:58] <ada_> so "static IPs" are not generally a good pattern for docker
[21:16:02] <ada_> why do you want static IPs?
[21:16:17] <ada_> like, for the life of a service, the service VIP isn't going to change, even if the task IP changes.
[21:16:27] <ada_> so technically, if you're using services, you already have a "static" IP that won't hange 
[21:16:29] <ada_> change*
[21:16:57] <ada_> if you want to cluster etcd, the "best" way is to use 3 services so you have 3 service VIPs that won't change
[21:17:07] <Lutin> yeah true but etcd wants to know it upfront
[21:17:21] <Lutin> yeah good one
[21:17:25] <ada_> can you show me that problem?
[21:17:34] <Lutin> ada_ it's just in the docs
[21:17:35] <ada_> like, is there documentation for that constraint 
[21:17:42] *** Parts: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (when i leave, come together like butt cheeks)
[21:18:03] <Lutin> of etcd... when you don't set the IP's and and make them 0.0.0.0 it shuts down the container
[21:18:27] *** Parts: graytron (~tero@user/graytron) ()
[21:18:35] <Lutin> it complains even in the logs
[21:18:45] <Lutin> you can only set it to 0.0.0.0 if it's not a cluster node
[21:19:25] <ada_> I don't think the services API actually gives you a way to specify an IP for a service
[21:19:30] <Lutin> ada_ I thought it was overkill to use a service per container, that's why :)
[21:19:36] <ada_> so this might be a use case better served by "docker run" plain old containers
[21:19:43] *** Quits: jlang (~jlang@user/jlang) (Ping timeout: 268 seconds)
[21:19:55] <ada_> you could create a docker network with a given subnet, then do "docker run --ip x.x.x.x" to set an IP for that container
[21:20:02] <ada_> https://blog.cepharum.de/en/post/running-etcd-cluster-in-docker-swarm.html
[21:20:04] <Lutin> ada_ I do run but I thought to swarm them so I had a VIP :)
[21:20:17] <Lutin> nah attach them on a swarm scoped network
[21:20:21] <ada_> thats fine
[21:20:27] <ada_> you could still attach them to a swarm network
[21:20:32] <ada_> just make the swarm network --attachable=true
[21:20:49] <Lutin> I did...but then I need to make the IP's static... if it's not in use
[21:20:55] <ada_> docker run --ip
[21:21:03] <Lutin> yeah can check the VIP upfront of that swarm network
[21:21:10] <Lutin> that would work
[21:21:17] <Lutin> I know I use --ip
[21:22:10] <Lutin> but ada_ I just need to check what's in the network already
[21:22:22] <Lutin> I mean, even when there is nothing attached to it
[21:22:26] <Lutin> docker choses what it wants
[21:23:59] <ada_> you don't need ot pick .2
[21:24:06] <ada_> like, just pick a higher number
[21:24:19] <ada_> there is always going to be an IP address consumed on the network for the node
[21:24:29] <ada_> each node that is participating in a swarm network consumes an IP
[21:24:54] <ada_> generally, if you start from the large end of the subnet, those IPs will not already be used.  so I would recommend like, 100, 101, 102 or 201,202,203
[21:25:27] <ada_> and yes, docker chooses what it wants to use.  you don't really have any control over that
[21:28:09] *** Quits: arinov (~arinov@5.24.125.219) (Ping timeout: 272 seconds)
[21:30:06] <Lutin> ada_ yeah that was my idea as well
[21:30:22] <Lutin> I juets check upfront what it uses
[21:30:25] <Lutin> *just
[21:30:57] <Lutin> ada_ I don't do /24's on all... for these I do /28's
[21:31:00] <Lutin> so... hehe
[21:31:08] *** Joins: jlang (~jlang@user/jlang)
[21:32:36] *** Quits: lemonzest (~lemonzest@user/lemonzest) (Quit: Quitting)
[21:42:09] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:46:32] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[21:48:34] *** trevors_ is now known as trevors
[21:53:05] *** Quits: jlang (~jlang@user/jlang) (Quit: WeeChat 3.1)
[21:54:36] *** Joins: hendry (~hendry@210.23.22.2)
[22:06:48] *** Joins: patchie (~sdf@136.228.208.131)
[22:12:08] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 268 seconds)
[22:24:58] *** Joins: JesterHead (~JesterHea@2620:149:e0:5002::945)
[22:30:11] *** Quits: WTaF (~GoLiath@80.179.69.241.cable.012.net.il) (Read error: Connection reset by peer)
[22:30:39] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[22:31:28] *** Joins: GoLiath_ (~GoLiath@80.179.69.245.cable.012.net.il)
[22:32:58] <Lutin> ada_ but I'm reviewing some things again... I also noticed that sometimes .networkname is needed and sometimes containername is fine
[22:35:12] <ada_> I can't think of a situation where .networkname would be required
[22:35:16] <ada_> I'd be interested in debugging that 
[22:36:29] <Lutin> ada_ yeah I was debugging it a couple of times... let you know why I find a situation
[22:36:55] <Lutin> funny thing is... some hosts can't resolve a containername with .networkname 
[22:36:58] <ada_> I suppose if you have services with the same name on multiple networks
[22:37:18] <Lutin> nope
[22:37:22] <ada_> like, serviceA sits on lots of networks, and there might be a "serviceC.networkC" and "serviceC.networkD"
[22:37:34] <Lutin> nope
[22:37:43] <ada_> I mean thats the only thing I can think of, not trying to predict your use case
[22:38:05] <Lutin> yes I understand. I would like to know how docker resolves it
[22:38:24] <Lutin> you can't have duplicate names but still
[22:38:57] <ada_> oh right of course
[22:42:59] *** Joins: keypusher (keypusher@user/keypusher)
[22:44:02] *** Quits: GoLiath_ (~GoLiath@80.179.69.245.cable.012.net.il) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:44:35] *** Joins: GoLiath_ (~GoLiath@80.179.69.241.cable.012.net.il)
[22:46:15] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[22:47:09] <programmerq> if the container name is an autogenerated name, then it won't resolve that.
[22:48:40] *** Quits: neilhwatson (~neilhwats@2001:470:b34d:0:f48d:80d1:f635:e96f) (Quit: Client closed)
[22:50:19] *** Quits: patchie (~sdf@136.228.208.131) (Remote host closed the connection)
[22:50:51] <Lutin> ada_ programmerq mysql can't resolve container.network only container when you use galera
[22:50:54] <Lutin> pretty weird
[22:54:15] *** Joins: neilhwatson (~neilhwats@2001:470:b34d:0:f48d:80d1:f635:e96f)
[22:58:07] *** Joins: patchie (~sdf@136.228.209.39)
[23:00:05] *** Joins: maroloccio (~marolocci@200.243.99.194)
[23:02:11] *** Joins: Ivyy (~Ivyy@2001:a62:41d:fa01:b6b3:aa7c:7e25:abb1)
[23:04:33] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 268 seconds)
[23:07:21] *** Quits: patchie (~sdf@136.228.209.39) (Remote host closed the connection)
[23:10:12] *** Quits: maroloccio (~marolocci@200.243.99.194) (Quit: Client closed)
[23:10:30] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 264 seconds)
[23:11:27] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 268 seconds)
[23:12:55] *** Quits: rsx (~dummy@ppp-188-174-130-150.dynamic.mnet-online.de) (Quit: rsx)
[23:13:08] *** Joins: Dolor_Avis (~Dolor_Avi@user-5-173-11-95.play-internet.pl)
[23:13:21] *** Joins: iomari891 (~iomari891@197.210.77.213)
[23:19:32] *** Quits: Dolor_Avis (~Dolor_Avi@user-5-173-11-95.play-internet.pl) (Quit: Leaving)
[23:27:54] <rawtaz> whats the name of that woman who runs everything and her cat in docker and presents about it?
[23:35:45] *** Joins: travaldo (~travaldo@159.203.88.148)
[23:40:39] <akik> jess frazier
[23:41:00] <akik> frazelle
[23:41:23] <akik> https://blog.jessfraz.com/post/docker-containers-on-the-desktop/
[23:41:28] *** Quits: maret (~textual@nat-88-212-37-89.antik.sk) (Read error: Connection reset by peer)
[23:41:53] *** Joins: klltkr (~klltkr@host86-186-21-201.range86-186.btcentralplus.com)
[23:42:04] *** Joins: scadman (~scadman@cpc145252-maid8-2-0-cust473.20-1.cable.virginm.net)
[23:43:29] *** Quits: TomyWork (~TomyLobo@p200300e80f133c009dd79b4b96334160.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:44:21] <rawtaz> yes! thanks
[23:46:39] *** Joins: patchie (~sdf@136.228.222.22)
[23:52:59] <cim> jesus
[23:53:07] <cim> she has several dozens of dockerfile
[23:53:45] <cim> and here I thought I was a docker nerd with my docker hoodie
[23:53:55] <rawtaz> haha yeah
[23:53:58] <rawtaz> noone can bead jess :D
[23:54:01] <rawtaz> err beat*
[23:54:13] <rawtaz> neither bead, i guess
[23:54:30] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 268 seconds)
[23:59:08] <programmerq> I probably have 10+ docker shirts from over the years.
[23:59:13] <programmerq> probably closer to 20
