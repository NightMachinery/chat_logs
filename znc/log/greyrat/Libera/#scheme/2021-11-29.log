[00:11:40] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[00:12:07] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[00:13:31] *** Joins: seninha (~seninha@user/seninha)
[00:13:47] *** Joins: cjb (~cjb@user/cjb)
[00:14:45] *** Joins: nckx (~nckx@tobias.gr)
[00:30:10] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[00:38:12] *** Joins: sdu (~doo@185.44.146.165)
[00:40:16] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:54:00] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[00:54:41] *** Joins: badkins (~badkins@136.56.92.199)
[01:12:35] *** Quits: Doraemon (~NeoCron@p200300c4cf07d8007d174ac0d3b51364.dip0.t-ipconnect.de) (Quit: Leaving)
[01:12:51] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[01:12:56] *** Joins: NeoCron (~NeoCron@p200300c4cf07d8007d174ac0d3b51364.dip0.t-ipconnect.de)
[01:13:18] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:14:26] *** Joins: torbjornsd (~torbjorns@213.158.35.13)
[01:20:59] *** Quits: torbjornsd (~torbjorns@213.158.35.13) (Quit: Leaving)
[01:34:15] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 256 seconds)
[01:57:30] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[02:12:00] *** Quits: Inline (~Inline@aftr-37-201-240-2.unity-media.net) (Remote host closed the connection)
[02:17:13] *** Quits: NeoCron (~NeoCron@p200300c4cf07d8007d174ac0d3b51364.dip0.t-ipconnect.de) (Quit: Leaving)
[02:21:56] *** Joins: taiju (~taiju@240b:253:ec40:2400:2d48:f53f:bd4f:c325)
[02:38:30] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[02:45:13] *** mab is now known as bandali
[02:45:57] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[02:48:11] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:54:57] *** Joins: jrincayc1 (~Thunderbi@38.70.240.202.sumofiber.net)
[02:56:59] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 256 seconds)
[03:08:00] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[03:08:39] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 265 seconds)
[03:08:39] *** Joins: badkins (~badkins@136.56.92.199)
[03:15:44] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[03:20:21] *** Quits: jrincayc1 (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 268 seconds)
[03:31:23] *** Joins: s-liao (~s-liao@101.86.99.70)
[03:40:10] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[03:53:48] *** Joins: badkins (~badkins@136.56.92.199)
[03:54:28] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[03:54:38] *** Joins: badkins (~badkins@136.56.92.199)
[04:20:39] *** Joins: livoreno (~livoreno@user/notzmv)
[04:59:59] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[05:00:34] *** Joins: badkins (~badkins@136.56.92.199)
[05:05:48] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[05:06:04] *** Joins: jao (~jao@194.99.104.12)
[05:16:08] *** Quits: taiju (~taiju@240b:253:ec40:2400:2d48:f53f:bd4f:c325) (Ping timeout: 260 seconds)
[05:19:09] *** Joins: badkins (~badkins@136.56.92.199)
[05:24:22] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[05:25:55] *** Joins: badkins (~badkins@136.56.92.199)
[05:30:28] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[05:32:15] *** Quits: jao (~jao@194.99.104.12) (Ping timeout: 256 seconds)
[05:34:11] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[05:38:50] *** Joins: taiju (~taiju@240b:253:ec40:2400:2d48:f53f:bd4f:c325)
[05:50:45] *** Quits: daviid (~user@179.210.52.91) (Ping timeout: 250 seconds)
[05:51:01] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[05:51:03] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 265 seconds)
[06:15:08] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[06:15:45] *** Joins: badkins (~badkins@136.56.92.199)
[06:19:42] *** Joins: daviid (~user@177.79.121.168)
[06:22:49] *** Quits: daviid (~user@177.79.121.168) (Remote host closed the connection)
[06:23:03] *** Joins: daviid (~user@177.79.121.168)
[06:25:28] *** Quits: daviid (~user@177.79.121.168) (Remote host closed the connection)
[06:25:45] *** Joins: daviid (~user@177.79.116.186)
[06:26:44] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[06:26:59] *** Joins: badkins (~badkins@136.56.92.199)
[06:27:03] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[06:27:39] *** Joins: badkins (~badkins@136.56.92.199)
[06:28:14] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:32:22] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[06:40:29] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:41:57] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 256 seconds)
[06:47:35] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[06:49:32] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 265 seconds)
[06:54:25] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 256 seconds)
[07:05:41] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[07:28:20] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[07:47:49] <jcowan> https://htmlpreview.github.io/?https://raw.githubusercontent.com/johnwcowan/r7rs-work/master/srfi-135x.html is the current state of my hybrid SRFI 152/135 library
[07:52:02] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[07:56:29] *** Joins: mononote (~mononote@user/mononote)
[08:03:29] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 265 seconds)
[08:05:52] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:3086:126b:ad23:6938)
[08:05:52] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:3086:126b:ad23:6938) (Changing host)
[08:05:52] *** Joins: skapata (~Skapata@user/skapata)
[08:17:58] *** Quits: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte) (Quit: Leaving)
[08:22:30] *** Quits: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com) (Ping timeout: 265 seconds)
[08:22:31] *** Joins: shawn (~shawn_w@152.44.212.188)
[08:23:26] *** Quits: shawnw (~shawn_w@152.44.212.188) (Ping timeout: 256 seconds)
[08:26:04] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[08:28:08] *** Quits: daviid (~user@177.79.116.186) (Ping timeout: 265 seconds)
[08:41:26] *** Joins: badkins (~badkins@136.56.92.199)
[08:43:14] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:45:57] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[08:50:18] *** Joins: seninha (~seninha@user/seninha)
[09:01:35] *** Joins: poselyqualityles (poselyqual@user/poselyqualityles)
[09:23:45] *** Joins: livoreno (~livoreno@user/notzmv)
[09:32:02] *** Quits: j0ni (c79e08d4b1@2604:bf00:561:2000::2a) (*.net *.split)
[09:32:02] *** Quits: drakonis (drakonis@user/drakonis) (*.net *.split)
[09:32:02] *** Quits: DeeEff (~DeeEff@user/deeeff) (*.net *.split)
[09:32:02] *** Quits: even4void (even4void@came.here.for-some.fun) (*.net *.split)
[09:32:02] *** Quits: dpk (~dpk@xn--issum-vva.nonceword.org) (*.net *.split)
[09:32:02] *** Quits: eMBee (~eMBee@realss.com) (*.net *.split)
[09:32:03] *** Quits: Franciman (~Franciman@mx1.fracta.dev) (*.net *.split)
[09:32:03] *** Quits: sjamaan (~sjamaan@chicken/developer/sjamaan) (*.net *.split)
[09:32:10] *** Joins: j0ni (c79e08d4b1@2604:bf00:561:2000::2a)
[09:32:11] *** Joins: eMBee (~eMBee@realss.com)
[09:32:11] *** Joins: dpk (~dpk@xn--issum-vva.nonceword.org)
[09:32:21] *** Joins: DeeEff (~DeeEff@user/deeeff)
[09:32:33] *** Joins: drakonis (drakonis@2600:3c02::f03c:92ff:fe5e:b8bf)
[09:32:37] *** Joins: Franciman (~Franciman@mx1.fracta.dev)
[09:32:49] *** Quits: drakonis (drakonis@2600:3c02::f03c:92ff:fe5e:b8bf) (Signing in (drakonis))
[09:32:49] *** Joins: drakonis (drakonis@user/drakonis)
[09:34:03] *** Joins: even4void (even4void@came.here.for-some.fun)
[09:36:24] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[09:36:24] *** Quits: pyro_ (~root@zhaozhou.dcollins.info) (*.net *.split)
[09:36:24] *** Quits: topoi_ (~topoi@user/topoi) (*.net *.split)
[09:36:24] *** Quits: ggoes (~gregf@fsf/staff/ggoes) (*.net *.split)
[09:36:25] *** Quits: saorge (~saorge@ns378138.ip-5-196-67.eu) (*.net *.split)
[09:36:38] *** Joins: pyro (~root@zhaozhou.dcollins.info)
[09:36:42] *** Joins: mjsir911 (~bnc@sirabella.org)
[09:36:44] *** Quits: mjsir911 (~bnc@sirabella.org) (Changing host)
[09:36:44] *** Joins: mjsir911 (~bnc@user/mjsir911)
[09:36:47] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[09:36:47] *** Joins: topoi (~topoi@user/topoi)
[09:37:04] *** Joins: saorge (~saorge@ns378138.ip-5-196-67.eu)
[09:37:14] *** Joins: ggoes (~gregf@fsf/staff/ggoes)
[09:37:18] *** Joins: sjamaan (~sjamaan@chicken/developer/sjamaan)
[09:37:28] *** Quits: taiju (~taiju@240b:253:ec40:2400:2d48:f53f:bd4f:c325) (Ping timeout: 260 seconds)
[09:39:48] *** Joins: taiju (~taiju@240b:253:ec40:2400:2d48:f53f:bd4f:c325)
[09:43:17] *** Quits: poselyqualityles (poselyqual@user/poselyqualityles) (Ping timeout: 256 seconds)
[09:50:49] *** Quits: s-liao (~s-liao@101.86.99.70) (Quit: Client closed)
[10:35:44] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 265 seconds)
[10:42:01] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 265 seconds)
[10:43:28] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 265 seconds)
[10:48:17] *** Joins: gproto23 (~gproto23@user/gproto23)
[11:13:40] *** Joins: notzmv (~zmv@user/notzmv)
[11:34:34] <amazigh> say you have a FANTASTIC_LIBRARY_PATH=A:B:C where A, B, C are directories, where fantastic scheme looks up for library files, in that very order first it checks inside A, then B, then C
[11:35:15] <amazigh> what is the purpose of appending a directory to FANTASTIC_LIBRARY_PATH?
[11:35:46] <amazigh> I am trying to understand the purpose of -A in chibi-scheme --help
[11:35:52] <amazigh>   -A <dir>     - append a module search directory
[11:35:54] <amazigh>   -I <dir>     - prepend a module search directory
[11:36:02] <amazigh> I usually only use -I
[11:39:16] *** Quits: taiju (~taiju@240b:253:ec40:2400:2d48:f53f:bd4f:c325) (Ping timeout: 264 seconds)
[11:41:40] *** Joins: daviid (~user@179.210.52.91)
[11:51:54] <edgar-rft> amazigh: I'm not a chibi expert but that sounds as if "append" adds a fallback path in case no better match was found in A, B, or C
[11:53:28] <amazigh> yes, it adds a fallback, but I am not sure in what situation it is useful to have a fallback, I can't figure what a fallback can do, than a prepended library can't
[11:54:23] <sham1> It can be a fallback
[11:58:54] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[12:03:52] *** Joins: civodul (~user@guix/contributor/civodul)
[12:09:10] *** Joins: badkins (~badkins@136.56.92.199)
[12:13:30] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[12:30:08] <lockywol-> amazigh, $(chibi-scheme -A./my-library/ my-script.scm) vs $(chibi-scheme -I./my-override-system-module/ my-script.scm)?
[12:30:59] <lockywol-> you usually want to append unknown libraries to the path, so that your words work as expected, even if the library overrides them
[12:31:22] <lockywol-> however, sometimes you know that the library is intended to replace system words with more useful ones
[12:31:39] <lockywol-> and then you prepend the library
[12:32:42] <lockywol-> Has anyone seen a good "Bloom filter" implementation in Scheme?
[12:36:06] <amazigh> lockywol-: ty, idk about a bloom filter library.
[12:37:04] <amazigh> re library path, so, iiuc, the default behavior should be to append, except when one wants to override a builtin library, in that case one must use prepend?
[12:37:40] <dpk> the main problem with a Bloom filter implementation in Scheme would be getting/implementing the hash functions
[12:37:55] <lockywol-> "default" depends on what you want, but I think that you need append most of the time
[12:38:19] <dpk> apart from that it's a fairly simple application of a bitvector (SRFI 178 or roll your own)
[12:38:48] * dpk refuses to let herself be nerdsniped into spontaneously writing a Bloom filter today … must … resist … temptation …
[12:40:16] <lockywol-> I am tempted to write a censorship circumvention proxy in scheme. It would be a little too low-level for Scheme, generally speaking, but fairly non-reliant on external libraries.
[12:40:31] <lockywol-> And thus could potentially lead to popularization of Scheme.
[12:40:40] <lockywol-> (Which is not necessarily a good thing.)
[12:41:45] <dpk> it wouldn't be a bad thing for software written in Scheme to become popular
[12:41:54] <lockywol-> on the other hand, it would require http/3 ... which is not simple by any means
[12:43:02] *** Joins: mononote (~mononote@user/mononote)
[12:48:42] <lockywol-> but living without http/3 is not good as well, so I am still tempted
[12:51:56] <lockywol-> I love Bloom filters, because they are so much like my memory. 
[12:54:37] <amazigh> it will be simple they said...
[12:55:56] <amazigh> it is simple, when it is done ;)
[12:56:08] <amazigh> and most of the time, it may be simpler :D
[13:00:14] *** Joins: taiju (~taiju@240b:253:ec40:2400:2d48:f53f:bd4f:c325)
[13:17:17] *** Joins: s-liao (~s-liao@101.86.99.70)
[13:24:17] <wasamasa> I forgot http3 is a thing
[13:24:46] <wasamasa> lockywol-: why not implement it in one reasonably popular implementation and just forego portability
[13:25:08] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:26:41] <lockywol-> ....
[13:26:55] <lockywol-> Well, I just find fun in implementing things portably...
[13:27:10] <lockywol-> I'm not getting paid for Scheme, after all.
[13:27:12] <wasamasa> sure, some people find fun in solving a thousand piece puzzle
[13:27:19] * amazigh nods
[13:27:25] <wasamasa> but if you want to reach popularity or finish the actual task
[13:27:26] <lockywol-> most of the stuff I need, I code in bash
[13:27:41] <amazigh> bashed!
[13:27:51] * lockywol- grovels
[13:27:54] * amazigh take the exit door
[13:28:09] <lockywol-> no, http3 is a cool thing
[13:28:25] <lockywol-> not as cool as it could be, but still cool
[13:30:18] <wasamasa> doesn't it make TLS mandatory?
[13:35:05] *** Quits: j0ni (c79e08d4b1@2604:bf00:561:2000::2a) (Remote host closed the connection)
[13:35:44] *** Joins: j0ni (c79e08d4b1@2604:bf00:561:2000::2a)
[13:36:46] *** Quits: s-liao (~s-liao@101.86.99.70) (Ping timeout: 256 seconds)
[13:41:04] <wasamasa> yeah, http3 requires quic and quic requires TLS1.3
[13:41:21] *** Joins: s-liao (~s-liao@101.86.99.70)
[13:42:38] <wasamasa> not sure whether terribletls supports that
[13:43:10] <wasamasa> nope
[13:43:20] <wasamasa> it does TLS1.1
[13:44:09] <wasamasa> sorry for ruining those dreams :P
[13:48:40] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:8296:597c:f30b:5df3) (Ping timeout: 256 seconds)
[13:51:13] *** Quits: zwr (~zwr@2804:d45:b966:fb00:5323:266d:2c0f:d0ec) (Ping timeout: 268 seconds)
[13:51:30] *** Joins: zwr (~zwr@2804:d45:b966:fb00:3ac9:5265:a79e:4a2a)
[13:52:49] <amazigh> gerbil has generic dispatch library
[13:58:59] <amazigh> is there any portable implementation of continuation attachements?
[13:59:05] <amazigh> that is not a meta-evaluator?
[14:00:03] <amazigh> nvm, i think it is impossible WITHOUT having to pass a context variable around everywhere in the code.
[14:08:19] <sham1> So meta-evaluator it is
[14:09:47] <amazigh> or continuation-attachements :)
[14:10:00] <amazigh> they are available in racket.
[14:10:04] <amazigh> (and Kernel)
[14:26:56] *** Quits: kopiyka (~user@2001:983:fe8b:1:b26e:bfff:fe2b:503f) (Ping timeout: 265 seconds)
[14:29:31] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[14:29:45] *** Joins: madage (~madage@user/madage)
[14:32:52] *** Quits: s-liao (~s-liao@101.86.99.70) (Ping timeout: 256 seconds)
[14:34:43] <amazigh> net literate bindings for suckless 'surf' for gerbil https://github.com/drewc/gurf 
[14:48:59] <wasamasa> for a second I thought it's Drew Devault
[14:49:23] <wasamasa> but no, it's the smug one
[14:53:41] <sham1> Isn't Devault also smug?
[14:54:27] <wasamasa> he didn't write a software with that name
[15:07:21] *** Parts: solrize (~solrize@user/solrize) (Leaving)
[15:19:47] <ecraven> I've pondered a "browser" than can only be interacted with via a socket with s-expressions.. I'd like to drive it entirely from emacs
[15:19:58] *** Joins: kopiyka (~user@2001:983:fe8b:1:b26e:bfff:fe2b:503f)
[15:20:03] <ecraven> I've looked at nyxt, but that focuses a lot on its own UI. maybe this can do that ;)
[15:23:18] *** Joins: rito_ (~androirc@45.112.243.47)
[15:23:35] <rito_> Hi
[15:23:40] <rito_> Is anyone here?
[15:28:01] <amazigh> no
[15:28:08] <amazigh> rito_: welcome ;)
[15:28:22] <amazigh> ecraven: nyxt is mostly a keyboard driven browser
[15:29:00] <rito_> amazigh: thanks!
[15:29:08] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[15:29:20] <amazigh> duncanm: do you have an example r7rs program that rely on a custom library that works with mit-scheme? I tried and failed at https://github.com/scheme-live/live/issues/30#issuecomment-981415428
[15:29:49] <amazigh> maybe someone else is familiar with mit...
[15:29:58] <rito_> I am thinking of starting to use Emacs. And really pumped about it.
[15:33:45] <amazigh> there is also https://github.com/guenchi/Schemacs
[15:33:48] *** Joins: badkins (~badkins@136.56.92.199)
[15:34:00] <rito_> Cool
[15:34:05] <rito_> Do you use this?
[15:34:52] *** Joins: seninha (~seninha@user/seninha)
[15:38:30] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[15:45:26] <mdhughes> amazigh: Where's the script for that? There's no library or module system accessible for MIT Scheme. http://community.schemewiki.org/?module-example-mit-scheme
[15:49:33] <ecraven> amazigh: which is just not what I'd like, I want a *remote-controlled* browser 
[15:49:39] <ecraven> I don't need *any* of the UI, I'll use emacs for that
[15:49:50] <ecraven> (which is totally my problem, not nxyt's ;)
[15:51:04] <amazigh> mdhughes: it is complicated to explain at this time, I will try the mailing list at some point.
[15:51:05] <ecraven> rito_: if you *really* want Schemely Emacs, then probably Edwin is your best bet
[15:51:31] <ecraven> amazigh: that Schemacs looks like a very rough prototype at best 
[15:52:12] <amazigh> #true
[15:52:17] *** Joins: thevishy (~Nishant@2405:201:f005:c007:f92b:9823:fedf:deab)
[15:53:59] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[15:55:55] *** Joins: jao (~jao@45.152.183.52)
[15:59:12] <rito_> ecraven: thanks. the idea of a truly hackable text editor is really appealing to me. and yes, I checked out Schemacs, and it looks quite proto.
[15:59:42] <rito_> ecraven: I will limit myself to the vanilla emacs lisp then
[16:00:15] <ecraven> rito_: have a look at MIT/GNU Scheme's Edwin, it is a fully-featured editor in Scheme.
[16:00:32] <ecraven> However, it doesn't have support for some things that you might consider essential, like colours or faces.
[16:00:39] <ecraven> and maybe UTF-8 :-/
[16:01:02] <sham1> Not having UTF-8 would very much be a dealbreaker
[16:09:04] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[16:10:32] *** Joins: s-liao (~s-liao@101.86.99.70)
[16:13:10] *** Joins: ritogh (~rito_gh@45.112.243.47)
[16:14:10] *** Quits: rito_ (~androirc@45.112.243.47) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[16:20:35] <amazigh> re utf-8 it depends
[16:20:42] <amazigh> for code, ascii is enough ime
[16:21:24] <amazigh> except if you ought to use emojis :D
[16:27:00] <ritogh> have you ever seen anyone use emojis in code except for places where it is required by domain?
[16:27:18] *** Quits: ritogh (~rito_gh@45.112.243.47) (Quit: Leaving)
[16:27:47] *** Joins: taylan (~taylan@user/taylan)
[16:29:27] *** Joins: rito_ (~rito_gh@45.112.243.47)
[16:35:23] *** Quits: j0ni (c79e08d4b1@2604:bf00:561:2000::2a) (Remote host closed the connection)
[16:35:46] *** Joins: j0ni (c79e08d4b1@2604:bf00:561:2000::2a)
[16:50:40] <mdhughes> I use emoji for games, status indicators, and comments all the time.
[16:52:15] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 256 seconds)
[16:52:28] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 264 seconds)
[16:53:16] *** Joins: jobol (~jobol@2a01:e34:ee5c:ee50:d6be:d9ff:fea3:db03)
[17:00:06] <rgherdt> I have ocasionally math/logics stuff in my code, mostly when pretty-printing formulas (→, ¬, ∧ etc.). That falls in the "required by domain" use case though
[17:00:33] <rgherdt> and if latex counts as code, I use that all the time :)
[17:00:41] <rgherdt> but yes, pretty rare use cases
[17:00:57] <amazigh> how do you type → or ¬ 
[17:00:59] <amazigh> ?
[17:01:27] <rgherdt> I use the Neo2 keyboard layout: https://www.neo-layout.org/
[17:01:59] <rgherdt> it has 6 levels, some of them with math stuff
[17:02:08] <amazigh> great
[17:02:26] <amazigh> sounds like super powered keyboard layout
[17:02:43] <rgherdt> and also navigating stuff direct under the middle row (level 4)
[17:02:53] <rgherdt> I love it
[17:03:11] <rgherdt> but it took one to two months to relearn typing :)
[17:03:36] <rgherdt> the only letter that stays in place is 'M' :)
[17:07:49] <amazigh> what do you mean by "natigating"?
[17:07:58] <amazigh> middle row = home row?
[17:08:26] <amazigh> home row = asdfgh in qwerty keyboard layout
[17:09:19] <rgherdt> exactly. Under s, d, f, also e, r etc. Neo2 have navigation keys (left, right, backspace and so on)
[17:09:46] <rgherdt> the nice thing is that I use that everywhere (browser, emacs, vs etc) without the need to install plugins
[17:12:09] <rgherdt> theoretically Neo2 is optimized for german, but I personally think it works for english pretty well.
[17:12:42] <rgherdt> but yeah, one has to be really bored to learn it :) Was my case back then
[17:13:10] <rgherdt> even writing e-mails at work became a challenge :)
[17:28:02] *** Joins: livoreno (~livoreno@user/notzmv)
[17:31:41] *** Joins: badkins (~badkins@136.56.92.199)
[17:36:30] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[17:44:38] <lagash> rgherdt: if I have to learn a keyboard with that kind of complexity, I might as well learn stenotype!
[17:46:44] <rgherdt> lagash: sounds also as a fun project :)
[17:49:21] <lagash> way too much of a commitment, sadly - most up-and-coming stenographers quit school in less than a year, with lots of debt
[17:49:56] <lagash> not that I'm trying to use it professionally - I have a decent $100 stenotype, not some obscene multi-thousand piece of proprietary trash 
[17:52:28] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 264 seconds)
[17:53:32] <rgherdt> I had no idea how it works, just saw a video. Really cool! One kind of "plays chords" on the keyboard to write whole sentences. Why do people quit? Lack of perspective?
[17:53:49] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[17:54:08] *** Joins: madage (~madage@user/madage)
[17:54:36] <lagash> It's also quite programmable, although not in any Lisp that I know of, the particular stenotype I have, although I haven't really tried yet. 
[17:55:00] <lagash> They quit mostly because it's a LOT more effort than they initially thought.
[17:55:43] *** Joins: jrmu (jrmu@jrmu.lemon.ircnow.org)
[17:56:43] <lagash> I'd be very curious as to a custom Emacs setup with stenotypes, especially with this QMK firmware..
[18:10:06] *** Joins: badkins (~badkins@136.56.92.199)
[18:14:40] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 264 seconds)
[18:36:35] <ecraven> lagash: which stenotype do you have?
[18:36:50] <ecraven> I've been wanting to get one for years
[18:36:52] <ecraven> plover!
[18:37:06] *** Quits: s-liao (~s-liao@101.86.99.70) (Quit: Client closed)
[18:39:36] <lagash> ecraven: Georgi, from https://www.gboards.ca/product/georgi
[18:41:11] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 245 seconds)
[18:41:17] <mdhughes> On the Mac, Opt-L is ¬ which I use in a (not) macro, and I've bound Cmd-Y to λ so I can use it as lambda
[18:43:07] *** Joins: aeth (~aeth@user/aeth)
[18:47:36] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[18:50:08] <sham1> Does using ¬ for (not) make stuff easier to read?
[18:51:01] <ecraven> (¬ (≡ a b)) vs. (not (eq? a b))
[18:51:11] <ecraven> that way lies APL :D [not saying that's a *bad* thing..]
[18:56:35] *** Quits: jao (~jao@45.152.183.52) (Remote host closed the connection)
[19:00:03] *** Joins: jao (~jao@45.152.183.60)
[19:02:29] <sham1> I do actually find it interesting that there is no shorthand for (not (eq?)) or (not (equal?))
[19:03:08] <sham1> It can of course be composed but it's still a bit of an interesting thing
[19:06:28] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Quit: WeeChat 3.3)
[19:07:00] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[19:07:24] <rgherdt> also (not (null?))
[19:07:58] <rgherdt> although I'm already used to it
[19:08:56] *** Joins: badkins (~badkins@136.56.92.199)
[19:14:36] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:14:57] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[19:15:15] *** Joins: badkins (~badkins@136.56.92.199)
[19:18:11] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[19:20:23] <hexology> this is the kind of situation where i generally prefer a bigger standard library than a smaller one
[19:20:45] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:20:46] <sham1> ≢ as a symbol for (not (eq?))
[19:20:48] <hexology> it's a local minimum of sorts. it's too small to justify writing a helper function, but common enough that a convenience helper function would be convenient
[19:20:57] <hexology> heh, i was just thinking (not-eq?)
[19:21:19] <sham1> Well that or (neq?) are the obvious ones, but since we were talking about unicode glyphs...
[19:21:49] <hexology> oh i didn't scroll up :)
[19:22:05] <hexology> different equality symbols for different kinds of equality, that's a good one
[19:22:27] <hexology> vim digraphs make unicode input pretty easy, i like that kind of thing (in moderation)
[19:22:35] <hexology> too much becomes symbol sopu
[19:22:38] <hexology> soup*
[19:24:58] <sham1> Emacs has the TeX input mode, which also makes it easy to write these. \equiv and \nequiv. But yeah, it'd easily become "too many symbols"
[19:25:03] <sham1> It might even start looking like Haskel
[19:25:06] <sham1> Haskell
[19:26:19] <amazigh> georgi looks neat
[19:29:47] <mdhughes> sham1: My macro makes (¬ eq? a b) into (not (eq? a b)) which is a little nicer. Haven't bothered replacing eq? etc.
[19:30:09] <sham1> Hm
[19:30:27] <sham1> I don't know about that one
[19:31:57] <amazigh> the question is how much characters can we comprehend
[19:32:06] <amazigh> how big the alphabet should be?
[19:32:24] <amazigh> reminds me of the dot-based alphabet someone come up with... I do not remember the name of that said alphabet.
[19:32:26] <sham1> I mean, do you want to include APL symbols or not
[19:33:33] <amazigh> maybe that said alphabet is just braille
[19:33:35] <sham1> I do find many of the APL symbols very expressive for array operations, although they of course require one to know the operation
[19:33:43] <sham1> Braille probably
[19:34:27] <mdhughes> "APL symbols", no, I don't code in APL or even J, but a few more math & Greek alphabet symbols are useful.
[19:34:49] <sham1> Well \lambda is of course a fan favourite
[19:37:19] <amazigh> at least braille is very abstract. APL and J necessarly require some ethno-centric knowledge to remember, whereas braille everybody must deal the same with the abstractness
[19:37:31] <amazigh> and it works with blind people
[19:43:26] <sham1> Hmm, there's no way of escaping backslashes within |these kinds of identifiers, so one has to go with the hex escape|
[19:59:42] *** Joins: mononote (~mononote@user/mononote)
[20:04:03] *** Quits: webshinra (~shinra@2a01cb080779fc003f6926a195b6d607.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[20:07:08] *** Joins: webshinra (~shinra@2a01cb080779fc003f6926a195b6d607.ipv6.abo.wanadoo.fr)
[20:08:12] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[20:09:33] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[20:10:11] <Zipheir> rgherdt: pair? is often what you want there.
[20:11:40] <Zipheir> sham1: It might start looking like Agda!
[20:12:58] <sham1> Or Coq
[20:19:12] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[21:02:21] <rgherdt> Zipheir: thanks! Forgot about that one
[21:10:28] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 264 seconds)
[21:19:25] <amazigh> mdhughes: you deserve a 💖
[21:28:48] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:6dc1:f15c:f052:6c31)
[21:28:49] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:6dc1:f15c:f052:6c31) (Changing host)
[21:28:49] *** Joins: skapata (~Skapata@user/skapata)
[21:30:57] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[21:32:52] *** Quits: thevishy (~Nishant@2405:201:f005:c007:f92b:9823:fedf:deab) (Quit: Leaving)
[21:32:59] *** Joins: badkins (~badkins@136.56.92.199)
[21:37:20] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[22:18:51] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:20:31] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[22:22:38] *** Joins: badkins (~badkins@136.56.92.199)
[22:28:35] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[22:29:04] *** Joins: badkins (~badkins@136.56.92.199)
[22:34:27] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:36:16] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[22:38:17] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[22:45:04] *** Quits: jobol (~jobol@2a01:e34:ee5c:ee50:d6be:d9ff:fea3:db03) (Quit: Leaving)
[22:51:11] *** Quits: siiky (~siiky@2001:8a0:ff7d:dd00:1f5d:a8bd:3bdc:60a8) (Ping timeout: 245 seconds)
[22:54:57] <sham1> define-record-type is so nice
[22:57:07] *** Joins: badkins (~badkins@136.56.92.199)
[22:58:30] *** Joins: livoreno (~livoreno@user/notzmv)
[22:58:30] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[23:03:27] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 265 seconds)
[23:29:33] *** Joins: rgherdt_ (~rgherdt@2a02:8109:86c0:d8d:e16c:4540:80bf:ba53)
[23:29:33] *** Quits: rgherdt_ (~rgherdt@2a02:8109:86c0:d8d:e16c:4540:80bf:ba53) (Client Quit)
[23:29:51] *** Joins: rgherdt_ (~rgherdt@2a02:8109:86c0:d8d:e16c:4540:80bf:ba53)
[23:32:45] *** Quits: rgherdt_ (~rgherdt@2a02:8109:86c0:d8d:e16c:4540:80bf:ba53) (Client Quit)
[23:32:56] *** Quits: Franciman (~Franciman@mx1.fracta.dev) (Ping timeout: 265 seconds)
[23:33:04] *** Joins: rgherdt_ (~rgherdt@2a02:8109:86c0:d8d:e16c:4540:80bf:ba53)
[23:33:25] *** Quits: Irvise (~irvise@2001:470:69fc:105::84c) (Ping timeout: 265 seconds)
[23:33:54] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:c4e2:c62e:64a1:7bff) (Ping timeout: 265 seconds)
[23:33:54] *** Quits: Mrtn[m] (~mrtn@2001:470:69fc:105::1f44) (Ping timeout: 265 seconds)
[23:34:09] *** rgherdt_ is now known as rgherdt
[23:38:12] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[23:44:05] *** Joins: aeth_ (~aeth@user/aeth)
[23:44:06] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[23:44:08] *** aeth_ is now known as aeth
[23:44:26] *** Joins: Franciman (~Franciman@mx1.fracta.dev)
[23:47:33] *** Joins: tokie (~strtok@thales.strtok.net)
[23:47:54] *** Quits: sm2n (~sm2n@user/sm2n) (Quit: Leaving)
[23:48:44] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[23:49:29] *** Quits: taylan (~taylan@user/taylan) (Ping timeout: 252 seconds)
[23:50:37] *** Joins: taylan (~taylan@user/taylan)
[23:50:38] *** Joins: Mrtn[m] (~mrtn@2001:470:69fc:105::1f44)
[23:54:04] *** Joins: elderK (uid205007@id-205007.helmsley.irccloud.com)
[23:57:27] *** Quits: rito_ (~rito_gh@45.112.243.47) (Quit: Leaving)
