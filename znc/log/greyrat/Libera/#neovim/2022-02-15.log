[00:00:30] *** Joins: gcostigan (~glen.cost@h69-21-84-93.cncrtn.dedicated.static.tds.net)
[00:01:26] *** Joins: va5c0 (~vasco.nun@91.110.154.119)
[00:02:48] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[00:03:21] *** Joins: sliss (~sliss@109.136.165.60)
[00:04:58] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[00:06:12] *** Quits: va5c0 (~vasco.nun@91.110.154.119) (Ping timeout: 240 seconds)
[00:15:45] *** Joins: w0ng (~w0ng@103.1.212.190)
[00:17:47] *** Joins: Betal (~Betal@user/betal)
[00:22:56] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[00:23:26] *** Joins: sliss (~sliss@109.136.165.60)
[00:29:43] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[00:29:45] *** Quits: eroux (~eroux@102-65-81-186.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:31:39] *** Joins: wyre (~wyre@user/wyre)
[00:32:57] *** Quits: pvp (~pvp@p4ff13899.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[00:34:44] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 272 seconds)
[00:36:33] *** Joins: pvp (~pvp@p4ff13645.dip0.t-ipconnect.de)
[00:43:03] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[00:43:06] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[00:43:36] *** Joins: sliss (~sliss@109.136.165.60)
[00:44:39] <mechap[m]> What is tabline highlight tag >
[00:45:01] <mechap[m]> I tried hi! link TabLine ... but it does not work
[00:45:26] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[00:46:51] *** Joins: hololeap (~hololeap@user/hololeap)
[00:54:31] *** Quits: Pingerfowder (~Pingerfow@bishibosh.stronk.xyz) (Quit: ZNC - https://znc.in)
[00:54:45] *** Joins: Pingerfowder (~Pingerfow@bishibosh.stronk.xyz)
[00:58:12] *** Quits: nabaiste^ (~nabaiste@50.235.176.163) (Ping timeout: 240 seconds)
[01:02:19] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:5a6:fa3c:5451:e16b)
[01:03:11] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[01:03:41] *** Joins: sliss (~sliss@109.136.165.60)
[01:08:25] <BennyPowers[m]> Atom's `vim-mode-plus` has a `g,` action which is useful for splitting up lists, so in this javascript example, with cursor inside the object literal:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/7cf9b1c53fbaf110ed803be0e6be56b67f4d9898)
[01:09:11] <BennyPowers[m]>  * Atom's `vim-mode-plus` has a `g,` action which is useful for splitting up lists, so in this javascript example, with cursor inside the object literal:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/1f9338a524e038b192a4a7255c9e456d7ff4b293)
[01:09:24] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 240 seconds)
[01:10:17] *** Joins: nabaiste^ (~nabaiste@50.235.176.163)
[01:13:54] *** Joins: Roig[m] (~roigmatri@2001:470:69fc:105::1:becf)
[01:14:34] *** Joins: va5c0 (~vasco.nun@91.110.154.119)
[01:16:41] *** Quits: towb (~bwot@user/towb) (Quit: WeeChat 3.4)
[01:19:24] *** Quits: va5c0 (~vasco.nun@91.110.154.119) (Ping timeout: 240 seconds)
[01:23:18] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[01:23:50] *** Joins: sliss (~sliss@109.136.165.60)
[01:25:00] *** Quits: jacky (~jacky@47.202.64.169) (Ping timeout: 240 seconds)
[01:28:49] <mechap[m]> actually I figured it out on my own
[01:31:39] *** Joins: jacky (~jacky@47.202.64.169)
[01:36:58] *** Joins: pun (~weechat@user/pun)
[01:36:59] *** Quits: dynamicsamurai (~quassel@ec2-54-252-244-30.ap-southeast-2.compute.amazonaws.com) (Remote host closed the connection)
[01:37:26] *** Quits: cotko (~cotko@155.pool85-49-78.dynamic.orange.es) (Ping timeout: 272 seconds)
[01:38:13] *** Joins: dynamicsamurai (~quassel@ec2-54-252-244-30.ap-southeast-2.compute.amazonaws.com)
[01:40:40] *** Joins: AtomicLong (~primamate@p200300ee1713340034665eac106bc8bd.dip0.t-ipconnect.de)
[01:41:09] *** Quits: gcostigan (~glen.cost@h69-21-84-93.cncrtn.dedicated.static.tds.net) (Ping timeout: 252 seconds)
[01:41:45] *** Quits: Torgo (~Torgo@159.196.169.97) (Ping timeout: 256 seconds)
[01:43:00] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[01:43:26] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[01:43:55] *** Joins: sliss (~sliss@109.136.165.60)
[01:48:28] <jacekpoz[m]> is there any way to save all of my open files in tabs and splits and shit after closing nvim?
[01:48:41] <jacekpoz[m]> like so when I come back they're all the same as when I closed it
[01:50:15] <antfugue[m]> jacekpoz[m]: vim sessions via mksession
[01:51:48] *** Joins: va5c0 (~vasco.nun@91.110.154.119)
[01:52:31] <jacekpoz[m]> thanks
[01:53:38] <gpanders> https://github.com/tpope/vim-obsession is useful if you use that feature often
[01:56:58] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[01:58:28] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:01:57] <leiserfg[m]> https://github.com/AndrewRadev/splitjoin.vim
[02:07:50] *** Joins: sentriz (~sentriz@109.255.139.98)
[02:14:23] *** Joins: M (~M@105.67.133.201)
[02:14:41] *** Quits: M (~M@105.67.133.201) (Remote host closed the connection)
[02:15:46] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[02:26:48] *** Quits: jacky (~jacky@47.202.64.169) (Ping timeout: 252 seconds)
[02:28:05] *** Quits: ugubok (~ugubok@user/ugubok) (Remote host closed the connection)
[02:33:48] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 240 seconds)
[02:38:55] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[02:42:03] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Quit: WeeChat 3.3)
[02:54:13] *** Quits: sentriz (~sentriz@109.255.139.98) (Remote host closed the connection)
[02:54:22] *** Joins: sentriz (~sentriz@109.255.139.98)
[02:54:31] *** Quits: AtomicLong (~primamate@p200300ee1713340034665eac106bc8bd.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[02:54:39] *** Joins: jacky (~jacky@47.202.64.169)
[03:03:35] *** Quits: pun (~weechat@user/pun) (Quit: pun)
[03:10:49] *** Quits: guido (~weechat@host-95-238-252-12.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[03:15:57] *** Quits: hololeap (~hololeap@user/hololeap) (Excess Flood)
[03:19:31] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[03:24:43] *** Joins: crashrep (~crashrep@user/crashrep)
[03:25:43] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:33:09] *** Quits: hgc` (~hgc@time.does.time.and.i.do.mine.vg) (Ping timeout: 256 seconds)
[03:36:26] *** Joins: k8yun (~k8yun@user/k8yun)
[03:37:13] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[03:42:31] *** Joins: hgc (~hgc@time.does.time.and.i.do.mine.vg)
[03:44:17] *** Joins: hololeap (~hololeap@user/hololeap)
[03:47:45] *** Joins: jabster28_ (~jabster28@81.111.217.63)
[03:47:53] *** Quits: jabster28 (~jabster28@81.111.217.63) (Ping timeout: 256 seconds)
[03:48:41] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[03:58:36] *** Quits: jacky (~jacky@47.202.64.169) (Ping timeout: 240 seconds)
[03:59:08] *** Joins: jacky (~jacky@47.202.64.169)
[04:06:25] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:5a6:fa3c:5451:e16b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:11:00] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:5a6:fa3c:5451:e16b)
[04:24:58] *** Joins: ac5tin (~ac5tin@user/ac5tin)
[04:30:02] *** Quits: jacky (~jacky@47.202.64.169) (Read error: Connection reset by peer)
[04:30:15] *** Joins: jacky (~jacky@47.202.64.169)
[04:30:33] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 252 seconds)
[04:30:36] *** Quits: harryy (~harry@user/harryy) (Ping timeout: 240 seconds)
[04:31:43] *** Quits: jangho (~jangho@121.165.8.28) (Quit: znc)
[04:31:52] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[04:32:39] *** Joins: harryy (~harry@user/harryy)
[04:35:28] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[04:36:45] *** Joins: Betal (~Betal@user/betal)
[04:39:00] *** Quits: jacky (~jacky@47.202.64.169) (Ping timeout: 240 seconds)
[04:41:15] *** Joins: jangho (~jangho@121.165.8.28)
[05:04:15] *** Quits: va5c0 (~vasco.nun@91.110.154.119) (Quit: WeeChat 3.4)
[05:05:48] *** Quits: co1umbarius (~columbari@i5E86B357.versanet.de) (Ping timeout: 272 seconds)
[05:07:14] *** Joins: co1umbarius (~columbari@i577BC68E.versanet.de)
[05:11:29] *** Joins: qaph (~weechat@user/qaph)
[05:14:40] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 272 seconds)
[05:14:42] *** qaph is now known as kron
[05:25:42] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[05:36:33] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[05:43:59] *** Quits: kaivai (~kaivai@user/kaivai) (Ping timeout: 256 seconds)
[05:51:42] *** Quits: nanners (~nanners@157-131-247-70.fiber.dynamic.sonic.net) (Remote host closed the connection)
[06:06:15] *** Quits: nzeo (~nzeo@80.64.181.150) (Ping timeout: 252 seconds)
[06:10:12] *** Quits: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de) (Quit: WeeChat 3.4)
[06:15:49] *** Joins: kaivai (~kaivai@user/kaivai)
[06:17:38] *** Joins: elves-upstate (~elves-ups@129-2-180-37.wireless.umd.edu)
[06:18:25] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:25:30] *** Quits: kaivai (~kaivai@user/kaivai) (Ping timeout: 252 seconds)
[06:26:47] *** Joins: itsmeboy0[m] (~itsmeboy0@2001:470:69fc:105::1:beef)
[06:28:01] *** Joins: kaivai (~kaivai@user/kaivai)
[06:28:46] <bluemonksr[m]> is there a way to do `ftdetect` based on the first line of a file? I have many shell scripts for which I usually remove the `.sh` extension when I move it to `/someBinFolder` but later on when i try to edit it, vim does not see it as a shell file
[06:29:06] <bluemonksr[m]> if I could do have a conditional to recognize the shebang
[06:29:50] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:33:01] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[06:34:26] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[06:35:21] *** Joins: kaivai (~kaivai@user/kaivai)
[06:44:01] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[06:54:23] *** Joins: bmbufalo[m] (~bmbufalom@2001:470:69fc:105::bae1)
[06:56:37] *** Joins: k8yun (~k8yun@user/k8yun)
[06:57:57] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[06:58:38] *** Joins: cliluw (~cliluw@47.147.73.223)
[07:05:36] *** Quits: elves-upstate (~elves-ups@129-2-180-37.wireless.umd.edu) (Remote host closed the connection)
[07:08:10] *** Joins: utraciss (~utraciss@2001:e68:443c:a5fa:ca01:debe:f29f:351f)
[07:11:24] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:5a6:fa3c:5451:e16b) (Ping timeout: 240 seconds)
[07:12:01] <jaawerth> bluemonksr[m]: neovim alredy does that when the shebang is present, I believe it's in the shared `syntax/sh.vim` file
[07:12:11] <jaawerth> at least, it does for me in 0.6.x
[07:12:35] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:5cbe:f31d:a30b:eccd)
[07:12:41] <jaawerth> so does vim actully, for me at least
[07:13:31] <jaawerth> lose like it's just doing  regex search of `gegtline(1)` for known shells, with some attempts to read  simlinks to not be tricked as well
[07:15:08] <jaawerth> dunno what's dispatching to it though since there seems to be no ftdetect there. I'm sure it's documented... somewhere
[07:18:32] *** Joins: jacky (~jacky@47.202.64.169)
[07:28:18] *** Quits: jacky (~jacky@47.202.64.169) (Ping timeout: 272 seconds)
[07:29:58] *** Quits: nabaiste^ (~nabaiste@50.235.176.163) (Remote host closed the connection)
[07:35:37] *** Joins: angelacrust (~angelacru@182.68.208.211)
[07:36:43] <angelacrust> hello, I want to ask one thing: I'm using neovim to run python files, but neovim hangs when I press `<C-z>` and then I have to force close neovim and open the file again.
[07:38:02] <angelacrust> Also, I tried `:terminal` because of this issue, and although it works, the terminal also hangs after the program execution has finished.
[07:38:18] *** Joins: joeljuca (~joeljuca@2804:1eb0:c1:4036:8d25:a498:b540:323c)
[07:38:38] <angelacrust> I cannot move back to the code window for which I normally use `<C-w-k>`.
[07:41:04] *** Quits: angelacrust (~angelacru@182.68.208.211) (Quit: Client closed)
[07:42:03] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[07:42:13] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[07:42:43] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Max SendQ exceeded)
[07:42:44] *** Joins: angelacrust (~angelacru@182.68.208.211)
[07:42:52] <angelacrust> Seems like I got disconneted.
[07:43:10] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[07:44:35] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Remote host closed the connection)
[07:44:53] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[07:49:38] *** Joins: off^ (~off@50.235.176.163)
[07:51:11] *** Quits: joeljuca (~joeljuca@2804:1eb0:c1:4036:8d25:a498:b540:323c) (Quit: Client closed)
[07:51:33] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Quit: Ight Imma Head out)
[07:52:28] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[07:58:52] <ii14[m]> ctrl z by default puts vim in the background
[07:58:55] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:59:10] <ii14[m]> what are you using to run vim, terminal?
[07:59:22] <ii14[m]> or some gui
[08:00:25] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Quit: Ight Imma Head out)
[08:02:19] <angelacrust> It does. But it hangs on pressing `<C-z>` ii14[m]
[08:02:31] <angelacrust> I don't if it's only my system
[08:02:44] <ii14[m]> are you running nvim from a terminal?
[08:02:48] <angelacrust> I've tried using both--the gui and terminal
[08:03:34] <ii14[m]> are you on linux/mac or windows?
[08:03:39] <angelacrust> Windows, for now
[08:04:04] <angelacrust> I do have the option of switching to WSL if there is no solution to this problem.
[08:04:11] <ii14[m]> are you using wsl2 or neovim that's native to windows?
[08:04:30] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[08:04:44] <angelacrust> Neovim that's native to windows
[08:06:24] <ii14[m]> I have no idea then. it might be just an issue with windows, it's kinda like a second class citizen to be honest
[08:06:36] <ii14[m]> should work on WSL though
[08:09:48] <angelacrust> Okay I will try that on WSl
[08:11:01] <angelacrust> I could switch over to the program windows until Python was executing the program in the terminal. After that, I could not switch to the program window from the terminal
[08:11:55] <ii14[m]> I'm not sure if I'm following what you're saying
[08:12:00] <ii14[m]> it did work at some point?
[08:12:48] <angelacrust> Yes it did
[08:13:07] <angelacrust> I have to manually type `exit` to move back to the program window
[08:13:21] <ii14[m]> what is it, like powershell or something?
[08:13:33] <angelacrust> Tried both CMD and Powershell
[08:16:20] <ii14[m]> I don't know, I have no idea how job control works on windows, I'm not that familiar with the system
[08:16:23] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[08:16:26] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 272 seconds)
[08:16:35] <angelacrust> Welp
[08:18:15] <bluemonksr[m]> <jaawerth> "dunno what's dispatching to it..." <- thanks for your response. Yes I need to dig in to the documentation there. Becasue it shows me no filetype when the filname does not have `.sh` in it
[08:25:17] <bluemonksr[m]> ah I see the problem. there seems to be no lua ftdetect method for this. i have this variable `    vim.g.did_load_filetypes = 0` set. if I disable that then it detects just with shebang. if I dont, it cant
[08:25:45] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[08:34:54] *** Joins: nzeo (~nzeo@80.64.181.150)
[08:35:48] *** Joins: thetic[m] (~theticmat@2001:470:69fc:105::1:befe)
[08:40:03] *** Joins: pepper (~pepper@user/pepper)
[08:41:58] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[08:44:13] *** Joins: k8yun (~k8yun@user/k8yun)
[08:44:44] <rmagatti[m]> <jacekpoz[m]> "is there any way to save all..." <- or (shameless plug) https://github.com/rmagatti/auto-session 
[08:45:45] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[08:46:31] *** Quits: egality_ (~egality@185.21.216.158) (Ping timeout: 256 seconds)
[08:47:17] <rmagatti[m]> you know, something that made me real happy was seeing how fast this thing got implemented in vim/vim and then ported over to Neovim (in PR) 🎉
[08:47:18] <rmagatti[m]> https://github.com/neovim/neovim/pull/17363
[08:48:57] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:5cbe:f31d:a30b:eccd) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:51:24] *** Quits: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-cee7.res6.spectrum.com) (Ping timeout: 240 seconds)
[08:56:38] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[08:57:18] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[08:59:20] *** Joins: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-b071.res6.spectrum.com)
[08:59:20] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:b88f:75a6:8a:951)
[09:03:38] *** Joins: egality_ (~egality@185.21.216.158)
[09:13:24] *** Joins: buckaroo-banzai[ (~buckaroo-@2001:470:69fc:105::1:bf04)
[09:13:40] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[09:19:03] *** Quits: SirJitsu (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 256 seconds)
[09:19:18] *** Quits: SirJitsu1 (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 252 seconds)
[09:19:20] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[09:24:17] *** Joins: SirJitsu (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net)
[09:24:19] *** Joins: SirJitsu1 (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net)
[09:26:26] <p00f> yeah shebangs should work (`#!/usr/bin/fennel` does)
[09:31:41] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[09:42:04] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:b88f:75a6:8a:951) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:45:37] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Ping timeout: 250 seconds)
[09:49:24] *** Quits: alban771 (~alban@37.166.16.187) (Ping timeout: 240 seconds)
[09:54:30] *** Quits: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-b071.res6.spectrum.com) (Ping timeout: 252 seconds)
[09:55:41] *** Joins: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-cee7.res6.spectrum.com)
[10:11:13] *** Quits: hololeap (~hololeap@user/hololeap) (Excess Flood)
[10:12:39] *** Joins: hololeap (~hololeap@user/hololeap)
[10:12:42] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[10:16:22] *** Joins: guido (~weechat@host-79-18-252-81.retail.telecomitalia.it)
[10:40:53] *** Joins: augrim[m] (~augrimmat@2001:470:69fc:105::7016)
[10:49:41] *** Quits: guido (~weechat@host-79-18-252-81.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[11:04:38] *** Joins: sliss (~sliss@109.136.165.60)
[11:07:39] *** Quits: colordrops (~erahhal@2603-8001-9600-7b60-0010-0100-0001-cee7.res6.spectrum.com) (Quit: WeeChat 3.3)
[11:14:08] *** Joins: guido (~weechat@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[11:16:33] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[11:16:52] *** Joins: xsteadfastx (~marv@94.31.99.245)
[11:21:20] *** Joins: DibbTubberOne (~DibbDibbe@2a02:908:956:3ce0::3530)
[11:24:34] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[11:25:07] *** Joins: sliss (~sliss@109.136.165.60)
[11:33:23] <clason[m]> <bluemonksr[m]> "ah I see the problem. there..." <- Yes, the Lua filetype detection is not yet at parity with the legacy one (that's why it's not enabled by default, and you need to explicitly disable the old one even when you enable the Lua one).
[11:34:09] <clason[m]> it's exactly these complicated "need to run a complex script on the whole file to figure out the filetype" that aren't ported yet.
[11:36:10] <itsmeboy0[m]> Is it just me or https://github.com/blackCauldron7/surround.nvim suddenly disappeared?
[11:37:00] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[11:38:10] <JnValiska[m]> also me -> 404
[11:40:22] <clason[m]> yes
[11:40:36] <clason[m]> the user deleted their profile (and with it all their repos)
[11:40:46] <clason[m]> if you google around, you can probably find some forks or mirrors
[11:45:26] *** Joins: pepper (~pepper@user/pepper)
[11:47:16] *** Joins: cotko (~cotko@155.pool85-49-78.dynamic.orange.es)
[11:48:37] *** Joins: dontreallycare (~butler@adsl-178-38-36-59.adslplus.ch)
[11:48:57] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[11:49:34] *** Quits: dontreallycare (~butler@adsl-178-38-36-59.adslplus.ch) (Client Quit)
[11:53:18] *** Joins: dontreallycare (~butler@adsl-178-38-36-59.adslplus.ch)
[11:53:27] *** Quits: dontreallycare (~butler@adsl-178-38-36-59.adslplus.ch) (Client Quit)
[11:59:09] *** Joins: Guest88 (~textual@85.249.167.96)
[11:59:22] *** Quits: polve (~polve@user/polve) (Ping timeout: 272 seconds)
[12:02:04] *** Joins: polve (~polve@user/polve)
[12:07:45] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Ping timeout: 250 seconds)
[12:08:29] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[12:10:22] *** Joins: va5c0 (~vasco.nun@50.0.208.46.dyn.plus.net)
[12:14:10] *** Quits: Guest88 (~textual@85.249.167.96) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:14:36] *** Joins: Guest88 (~textual@85.249.167.96)
[12:17:06] *** Quits: irc_user (uid423822@id-423822.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[12:21:32] *** Quits: Guest88 (~textual@85.249.167.96) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:24:36] *** Quits: nzeo (~nzeo@80.64.181.150) (Ping timeout: 240 seconds)
[12:24:50] *** Joins: evanextreme (~evanextre@2604:4080:1000:8150:7950:a9e:9213:5d03)
[12:29:36] *** Quits: cotko (~cotko@155.pool85-49-78.dynamic.orange.es) (Ping timeout: 252 seconds)
[12:30:05] *** Quits: insecure[m] (~insecurek@2001:470:69fc:105::1:6685) (Quit: You have been kicked for being idle)
[12:30:14] *** Quits: hhhapz[m]1 (~hhhapzmat@2001:470:69fc:105::d45b) (Quit: You have been kicked for being idle)
[12:30:14] *** Quits: dakedo[m] (~dakedomat@2001:470:69fc:105::1:5dc7) (Quit: You have been kicked for being idle)
[12:30:14] *** Quits: barzo[m] (~barzomatr@2001:470:69fc:105::d11a) (Quit: You have been kicked for being idle)
[12:30:14] *** Quits: kpixeluk[m] (~kpixelukm@2001:470:69fc:105::1:6a7c) (Quit: You have been kicked for being idle)
[12:30:14] *** Quits: carlOS[m]1 (~rasterdog@2001:470:69fc:105::1:68c7) (Quit: You have been kicked for being idle)
[12:30:14] *** Quits: EirikBlekesaune[ (~eirikblek@2001:470:69fc:105::1:69be) (Quit: You have been kicked for being idle)
[12:31:09] *** Quits: arch-angel (~arch-ange@user/arch-angel) (Ping timeout: 250 seconds)
[12:33:20] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Read error: Connection reset by peer)
[12:33:32] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[12:36:00] *** Quits: evanextreme (~evanextre@2604:4080:1000:8150:7950:a9e:9213:5d03) (Quit: Heading out, seeya!)
[12:36:53] *** Joins: evanextreme (~evan@2604:4080:1000:8150:7950:a9e:9213:5d03)
[12:48:30] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Read error: Connection reset by peer)
[12:48:30] *** Quits: skyfall (~skyfall@user/skyfall) (Quit: Ping timeout (120 seconds))
[12:48:34] *** Joins: lordrishav_ (~LordRisha@user/lordrishav)
[12:48:43] *** Joins: skyfall (~skyfall@user/skyfall)
[12:48:44] *** Quits: rany (~rany@user/rany) (Killed (lead.libera.chat (Nickname regained by services)))
[12:48:45] *** Joins: rany (~rany@user/rany)
[12:48:48] *** Joins: m5zs7k_ (aquares@web10.mydevil.net)
[12:49:29] *** Quits: Moonspell (~moon@140.238.223.164) (Quit: #EOF!)
[12:49:42] *** Joins: Moonspell (~moon@140.238.223.164)
[12:49:59] <angelacrust> Can anyone share their compilation flags for C/C++ programs to run with Vim?
[12:50:36] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Ping timeout: 240 seconds)
[12:50:36] *** lordrishav_ is now known as LordRishav
[12:50:44] *** JOEROOT is now known as POLo
[12:50:51] *** POLo is now known as POLI
[12:51:07] *** POLI is now known as Polo
[12:51:14] *** Polo is now known as Guest8316
[12:53:56] *** Quits: evanextreme (~evan@2604:4080:1000:8150:7950:a9e:9213:5d03) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:54:54] *** Joins: evanextreme (~evan@2604:4080:1000:8150:7950:a9e:9213:5d03)
[12:55:44] *** Joins: Guest88_ (~textual@85.249.167.96)
[12:55:58] <kylo252[m]> <angelacrust> "Can anyone share their compilati..." <- can you clarify a bit more about your use-case?
[12:57:17] <angelacrust> I mostly participate in competitive programming contests, and I want to have a Vim setup that does not compromise on speed
[12:57:24] <angelacrust> kylo252[m]
[12:57:46] *** m5zs7k_ is now known as m5zs7k
[12:59:35] *** Quits: Guest88_ (~textual@85.249.167.96) (Client Quit)
[13:00:54] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Quit: Ight Imma Head out)
[13:01:52] *** evanextreme is now known as evanextreme[away
[13:01:52] *** Quits: evanextreme[away (~evan@2604:4080:1000:8150:7950:a9e:9213:5d03) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:02:40] <kylo252[m]> now I'm even more confused, because I don't see how vim fits in this. do you mean that you need to compile inside vim as fast as possible? 
[13:03:29] <angelacrust> Yeah
[13:04:09] *** Joins: evanextreme[away (~evan@2604:4080:1000:8150:7950:a9e:9213:5d03)
[13:04:24] *** Quits: evanextreme[away (~evan@2604:4080:1000:8150:7950:a9e:9213:5d03) (Client Quit)
[13:04:32] <angelacrust> Something like this guy's setup: https://youtu.be/vyRMSyPaj-o?t=4635
[13:04:40] <angelacrust> Starts from the given time
[13:05:02] <kylo252[m]> with c/c++ you'll probably get longer compile time with higher optimizations levels, but higher optimization generally means faster code execution. do you see the dilemma? 
[13:05:43] <angelacrust> yeah I do
[13:06:15] <kylo252[m]> and none of these should have any impact either way on the way you use vim, at least I don't think so
[13:06:43] <kylo252[m]> so it's more of a generic question about c/c++ with regards to compile flags 
[13:07:06] <angelacrust> The terminal which I'm using with Vim is really slow
[13:07:50] <kylo252[m]> you might be using something slow to trigger the build itself, but the build speed has nothing to do with vim either way
[13:08:52] <angelacrust> https://youtu.be/uGrBHohIgQY?t=45 what's this guy using to check output of this code?
[13:09:20] <angelacrust> Yeah, I'm not using any other special flags right now
[13:09:45] *** Quits: va5c0 (~vasco.nun@50.0.208.46.dyn.plus.net) (Ping timeout: 252 seconds)
[13:09:45] *** Joins: Guest88 (~textual@85.249.167.96)
[13:09:58] *** Quits: alerque (~caleb@2a01:4f8:150:6366::2) (Quit: WeeChat 3.4)
[13:10:17] <kylo252[m]> we'll the flags they'
[13:10:36] <kylo252[m]> they're using are pretty standard, and they're not even using the fastest tools out there
[13:11:04] <angelacrust> hmm...I'm not getting terminal in that style
[13:11:06] <kylo252[m]> but the code snippet is too small to matter at that scale, it's probably slower due to user's reaction more than anything
[13:11:06] <anniehallmoon> Converting my vimrc to init.lua... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/eb1af372ee455ea2d07c328a0c55ae0aa6759ebf)
[13:11:46] *** Joins: alerque (~caleb@2a01:4f8:150:6366::2)
[13:11:55] *** Joins: ardell (~ardell@user/ardell)
[13:12:31] *** Joins: JoseStoropoli[m] (~jstoropol@2001:470:69fc:105::1:bf42)
[13:12:38] <kylo252[m]> > <@freezingbest:matrix.org> Converting my vimrc to init.lua... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/ec45386b881888b2f87c5ab5c55bf833af54e74e)
[13:12:52] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[13:13:00] <kylo252[m]> angelacrust: they're also using windows
[13:13:06] <angelacrust> yeah
[13:13:15] *** Quits: Guest88 (~textual@85.249.167.96) (Client Quit)
[13:13:25] <angelacrust> What key did he press to run the program tho?
[13:14:09] <kylo252[m]> he probably had a vim shortcut to trigger `mkprg` or an external command
[13:14:21] <angelacrust> oh
[13:15:08] <angelacrust> I currently have this set up in my vimrc `autocmd vimEnter *.cpp map <F8> :w <CR> :!clear ; g++ --std=c++17 %; if [ -f a.out ]; then time ./a.out; rm a.out; fi <CR>`
[13:15:26] <kylo252[m]> if you want to be fancy, check this one out (disclaimer: probably overkill)
[13:15:26] <kylo252[m]> https://github.com/facebook/watchman
[13:16:09] <angelacrust> WOAH!
[13:17:14] <kylo252[m]> it works in a non-polling way, which should be more resource friendly, but I'm not sure it's actually faster
[13:17:51] <angelacrust> This looks really promising
[13:17:58] <angelacrust> I must get it running asap
[13:18:23] *** Joins: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk)
[13:18:46] <kylo252[m]> then again, the time difference is probably minuscule compared to the time wasted elsewhere
[13:18:59] <angelacrust> that's rigth
[13:19:00] <angelacrust> *right
[13:19:02] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Quit: "I am leaving the digital world till situations allow")
[13:19:06] <kylo252[m]> it just looks nice that it can monitor multiple things at once
[13:19:22] <kylo252[m]> so you just save the file, and let that one do the work
[13:19:47] <angelacrust> So it's going to build the file on its own?
[13:20:30] <kylo252[m]> another big disclaimer: I don't anything about the rules of these comps, so just take everything I say as is and do your own research!
[13:20:39] <kylo252[m]> don't know*
[13:21:44] <kylo252[m]> angelacrust: https://facebook.github.io/watchman/
[13:22:22] <angelacrust> yeah thanks
[13:22:45] <angelacrust> looks really promising
[13:24:58] *** Joins: eroux (~eroux@102-65-81-186.ftth.web.africa)
[13:32:19] *** Joins: Rue (~rue@2001-b011-1000-17d9-d616-1cce-b758-6ab8.dynamic-ip6.hinet.net)
[13:47:26] <anniehallmoon> > <@kylo252:matrix.org> not sure about path, but generally it's something like this:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/04143a0e55a8caaac5338189555742ce5e76dd9e)
[13:49:12] *** Joins: cotko (~cotko@155.pool85-49-78.dynamic.orange.es)
[13:49:31] *** Quits: ardell (~ardell@user/ardell) (Quit: Konversation terminated!)
[13:50:59] <coldspark29Jan[m> How to set the mapleader to space in Neovim?... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/81bb3db4185fc871fe619b4d90f02314aeaf46d8)
[13:52:47] *** Quits: DibbTubberOne (~DibbDibbe@2a02:908:956:3ce0::3530) (Quit: Leaving)
[14:01:26] *** Joins: Guest88 (~textual@85.249.167.96)
[14:09:45] *** Joins: szymon (~ugh@37.120.211.198)
[14:12:29] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[14:17:18] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Client Quit)
[14:17:50] *** Joins: nzeo (~nzeo@80.64.181.150)
[14:20:04] *** Joins: dhruvin (47b7573146@2604:bf00:561:2000::1e)
[14:32:09] *** Joins: angelacrust91 (~angelacru@182.68.208.211)
[14:33:00] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[14:33:25] *** Joins: cliluw (~cliluw@47.147.73.223)
[14:34:41] *** Quits: angelacrust (~angelacru@182.68.208.211) (Ping timeout: 256 seconds)
[14:35:44] *** Quits: Guest88 (~textual@85.249.167.96) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:36:16] *** Joins: arie20220215[m] (~arie20220@2001:470:69fc:105::1:bf4f)
[14:36:35] *** Joins: jklfds (~jklfds@user/jklfds)
[14:36:59] *** Joins: joeljuca (~joeljuca@2804:1eb0:c1:4036:755b:ae5b:f785:a038)
[14:53:23] *** Quits: baltazar (~baltazar@87-97-81-70.pool.digikabel.hu) (Ping timeout: 256 seconds)
[14:55:07] *** Joins: baltazar (~baltazar@178-164-240-26.pool.digikabel.hu)
[15:00:52] *** Quits: joeljuca (~joeljuca@2804:1eb0:c1:4036:755b:ae5b:f785:a038) (Quit: Client closed)
[15:09:46] *** Joins: walterwhip (~www@user/walterwhip)
[15:16:01] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[15:16:17] *** Quits: angelacrust91 (~angelacru@182.68.208.211) (Quit: Client closed)
[15:16:38] *** Joins: sliss (~sliss@109.136.165.60)
[15:19:00] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[15:22:12] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[15:24:51] *** Joins: pepper (~pepper@user/pepper)
[15:26:17] *** Quits: zwr (~zwr@2804:d45:b966:fb00:768b:56a2:a787:5841) (Ping timeout: 240 seconds)
[15:27:12] *** Joins: zwr (~zwr@2804:d45:b966:fb00:5d07:4fd9:1d9:2b23)
[15:31:01] *** Quits: szymon (~ugh@37.120.211.198) (Remote host closed the connection)
[15:35:07] *** Quits: dalan6 (~dalan@59-102-63-107.tpgi.com.au) (Quit: dalan6)
[15:35:37] *** Joins: dalan62 (~dalan@59-102-63-107.tpgi.com.au)
[15:37:22] *** Joins: jacky (~jacky@47.202.64.169)
[15:42:21] *** Joins: yuioup[m] (~yuioupmat@2001:470:69fc:105::1:bf78)
[15:44:45] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[15:46:45] *** Joins: Guest88 (~textual@85.249.167.96)
[15:49:34] *** Quits: Guest88 (~textual@85.249.167.96) (Client Quit)
[15:51:29] *** Quits: jacky (~jacky@47.202.64.169) (Quit: Iridium IRC Client)
[15:51:41] *** Joins: jacky (~jacky@47.202.64.169)
[15:56:12] *** Quits: walterwhip (~www@user/walterwhip) (Ping timeout: 240 seconds)
[16:01:54] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[16:03:56] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:11:48] *** Quits: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk) (Ping timeout: 240 seconds)
[16:15:02] *** Joins: va5c0 (~vasco.nun@91.110.154.119)
[16:16:35] *** Joins: Guest88 (~textual@85.249.167.96)
[16:17:13] *** Joins: guido_ (~weechat@host-79-18-252-81.retail.telecomitalia.it)
[16:19:49] *** Joins: polyrob_ (~rob@user/polyrob)
[16:22:32] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 240 seconds)
[16:22:32] *** polyrob_ is now known as polyrob
[16:23:28] *** Quits: harryy (~harry@user/harryy) (Quit: WeeChat 3.4)
[16:23:51] *** Joins: harryy (~harry@user/harryy)
[16:26:16] *** Quits: harryy (~harry@user/harryy) (Client Quit)
[16:26:54] <skdegm319[m]> <CleoMenezesJr[m]> "image.png" <- What color scheme is this? Looks beautiful 
[16:27:36] *** Quits: Guest88 (~textual@85.249.167.96) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:28:55] *** Quits: kron (~weechat@user/qaph) (Remote host closed the connection)
[16:29:28] *** Joins: kron (~weechat@user/qaph)
[16:32:32] *** Joins: harryy (~harry@user/harryy)
[16:33:32] *** Joins: towb (~bwot@user/towb)
[16:35:03] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Quit: Ight Imma Head out)
[16:43:41] *** Quits: Strom (strom@fedora/strom) ()
[16:45:21] *** Joins: Strom (strom@fedora/strom)
[16:46:18] *** Quits: jacky (~jacky@47.202.64.169) (Quit: Iridium IRC Client)
[16:46:30] *** Joins: jacky (~jacky@47.202.64.169)
[16:51:15] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 240 seconds)
[16:51:25] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[16:52:32] *** Joins: gcostigan (~glen.cost@h69-21-84-93.cncrtn.dedicated.static.tds.net)
[16:54:46] *** Quits: gcostigan (~glen.cost@h69-21-84-93.cncrtn.dedicated.static.tds.net) (Client Quit)
[16:59:11] *** Joins: SWISSMANN (~SWISSMANN@2001-4dd2-5e3c-0-df30-62d1-7594-7534.ipv6dyn.netcologne.de)
[17:00:19] *** Joins: jy (~jy@166.147.161.66.ded-dsl.fuse.net)
[17:03:09] *** Quits: ooGoop9 (~realident@user/oogoop9) (Ping timeout: 256 seconds)
[17:03:17] *** Joins: ooGoop9_ (~realident@user/oogoop9)
[17:05:11] *** Joins: arkurious (~arkurious@user/arkurious)
[17:07:17] *** Quits: jy (~jy@166.147.161.66.ded-dsl.fuse.net) (Remote host closed the connection)
[17:07:58] *** Joins: ooGoop9 (~realident@user/oogoop9)
[17:08:26] *** Quits: ooGoop9_ (~realident@user/oogoop9) (Ping timeout: 272 seconds)
[17:13:54] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:19:29] <syphar> <skdegm319[m]> "What color scheme is this? Looks..." <- If I'm not mistaken its kanagawa.nvim 
[17:27:00] *** Quits: xsteadfastx (~marv@94.31.99.245) (Ping timeout: 240 seconds)
[17:29:20] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:33:32] *** Joins: xsteadfastx (~marv@94.31.99.245)
[17:34:26] <LeoNerd> Hrm.. I seem to have failed at the first step of treesitter here.. I'm really not sure what I'm supposed to be doing to actually install something
[17:35:02] <LeoNerd> https://github.com/nvim-treesitter/nvim-treesitter#installation  -- says "you can use your favourite package manager". OK so I guess maybe just try apt; except there isn't an nvim-treesitter or neovim-treesitter debian package. So that's not going to fly
[17:35:49] <LeoNerd> There also isn't a vim-plug so I can't install that to get the :Plug command
[17:36:05] <bfredl> leonerd: it refers to vim packages, not system packages
[17:36:19] <LeoNerd> OK. that's an entirely new concept to me that I'd never heard of before
[17:36:23] <bfredl> so something like vim-plug or packer.nvim
[17:36:35] <clason[m]> wow ;)
[17:36:39] <LeoNerd> Those additionally are new. I feel I may need some more stepbystep instructions
[17:36:40] <bfredl> welcome to the club :]
[17:37:08] <bfredl> https://github.com/nvim-treesitter/nvim-treesitter/wiki/Installation 
[17:37:15] <clason[m]> you've never used any vim plugins? even tpope's?
[17:37:18] <LeoNerd> Yes I was reading that
[17:37:33] <bfredl> so more or less like any vim plugin. (you can ignore the new "package" concept. for now..)
[17:37:34] <LeoNerd> Correct. Nothing. I installed (n)vim from debian package then wrote my own files inside the .vim directory
[17:37:36] <LeoNerd> I've never done anything else
[17:38:11] <LeoNerd> I tried the :Plug command but I don't have that available either
[17:38:38] <bfredl> vim-plug is easy to install, basically drop one .vim file in the right folder
[17:38:41] <clason[m]> no, that's from a plugin itself
[17:38:49] <clason[m]> https://github.com/junegunn/vim-plug#vim
[17:38:58] <LeoNerd> Indeed so I think I need to bootstrap that somehow
[17:39:01] <clason[m]> s/vim/neovim/
[17:39:01] <LeoNerd> Ahah, progress
[17:39:23] <bfredl> https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim put this in an autoload/ folder
[17:39:25] <LeoNerd> Oooh boy let me just curl this script and run it as myself in bash. That's a great idea :/
[17:39:48] *** Joins: Guest88 (~textual@85.249.167.96)
[17:39:52] <sunjonSenghanBri> the things we do for perl 😖
[17:40:02] <bfredl> hmm, no need to curl|bash anything, just download the .vim file directly
[17:40:05] <LeoNerd> sunjonSenghanBri: Hah, I certainly don't :P
[17:40:12] <LeoNerd> Yeah that sounds more sensible
[17:41:56] <LeoNerd> Ahah, progress. I now have a :Plug command
[17:42:13] <LeoNerd> Perhaps someone could add that to the instructions - how to install that thing first
[17:42:25] <clason[m]> LeoNerd: that snippet does _not_ curl into bash, for the record; it just downloads it ;)
[17:42:35] <LeoNerd> The first one I found did
[17:42:41] <clason[m]> LeoNerd: That is precisely what the curl command does...
[17:43:34] <clason[m]> LeoNerd: I don't think so, it just spawns a new shell (for whatever reason; possibly to avoid dealing with fishes) to run that download command
[17:44:30] <bfredl> yea it just uses a shell to formulate the `$LOCATION/nvim/site/autoload/plug.vim` path
[17:44:35] *** Quits: Guest88 (~textual@85.249.167.96) (Client Quit)
[17:44:48] <bfredl> nothing downloaded gets executed by that command directly
[17:45:03] <LeoNerd> Hrmmm... so I still have no  :TSUpdate
[17:45:23] <clason[m]> no, you have to install `nvim-treesitter` first (via `vim-plug`)
[17:45:53] <LeoNerd> Oh I see Ihave to  :PlugInstall
[17:46:00] <clason[m]> yes
[17:46:15] <clason[m]> (and `:PlugUpdate` regularly)
[17:46:37] <LeoNerd> Ok so I see the .vim/plugged/nvim-treesitter  directory and it has put files in there.. I still have no :TSUpdate :(
[17:46:54] <clason[m]> did you restart Neovim after installing?
[17:46:58] <LeoNerd> Yup
[17:47:33] <clason[m]> and `:TSUpdate` returns an error?
[17:47:40] <LeoNerd> E492: Not an editor command: TSUpdate
[17:48:01] <clason[m]> hmm
[17:48:20] *** Quits: xsteadfastx (~marv@94.31.99.245) (Ping timeout: 272 seconds)
[17:48:45] <LeoNerd> My init.vim has both  call plug#begin('~/.vim/plugged')  and the  Plug 'nvim-treesitter/...  commands
[17:48:53] <muniter[m]> Need to require?
[17:48:56] <clason[m]> and the `plug#end`?
[17:49:08] <clason[m]> muniter[m]: not for the `:TSUpdate`
[17:49:27] <LeoNerd> Oooh it needs a begin and an end. oops
[17:49:36] <clason[m]> yup :)
[17:49:57] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:690a:d027:b8ea:dcab)
[17:50:07] <LeoNerd> All parsers are up-to-date!   :)
[17:50:32] <clason[m]> because you haven't actually installed any :]
[17:50:34] <clason[m]> do `:TSInstall perl`
[17:50:36] <LeoNerd> So perhaps your wiki instructions could add the curl + the *three* required init.vim lines
[17:50:44] <LeoNerd> Right; but at least it recognises the command, so progress
[17:51:03] <LeoNerd> [nvim-treesitter] [1/1] Treesitter parser for perl has been installed
[17:51:08] <bfredl> those are the instructions for for vim-plug tho
[17:51:09] <clason[m]> no, because the Wiki instructions assume familiarity with plugin managers and link to vim-plug's own
[17:51:15] <bfredl> and they are mentioned on vim-plugs README
[17:51:23] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:5c57:7f45:b808:8adb) (Ping timeout: 250 seconds)
[17:51:36] <LeoNerd> clason[m]: Right but also those instructions don't have a "I need more" back-pointer for people who aren't familiar. So it's hard to start
[17:51:57] <clason[m]> LeoNerd: nice, so now you can open a Perl file and `:TSEnableAll highlight`
[17:52:11] *** Quits: utraciss (~utraciss@2001:e68:443c:a5fa:ca01:debe:f29f:351f) (Quit: ZNC 1.8.2 - https://znc.in)
[17:52:27] <LeoNerd> Hrm.. I did that and it didn't error but doesn't appear to have had any effect
[17:52:40] <clason[m]> LeoNerd: sure, they link to the vim-plug readme. those are exactly the "i need more instructions"
[17:53:00] <LeoNerd> Oh.. huh.. I didn't notice the title was also a link.. sneaky
[17:53:04] <clason[m]> LeoNerd: the effect depends on your color scheme
[17:53:17] <clason[m]> but try `:e` to reload the file
[17:53:30] <LeoNerd> Ahah, yes now that's different
[17:53:31] <bfredl> you can try `TSPlaygroundToggle` also
[17:53:42] <bfredl> for quick verification that it parses things :]
[17:53:50] <LeoNerd> Ohdeardear this is... very far off :/
[17:53:54] <clason[m]> right, I forgot you need that if you enable highlighting manually
[17:54:28] <LeoNerd> It doesn't seem to understand POD for a start, so it's turned all my inline docs into simple comments
[17:54:51] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:690a:d027:b8ea:dcab) (Ping timeout: 250 seconds)
[17:55:09] <LeoNerd> And indeed no folding
[17:55:20] <bfredl> well, perl syntax is widely known to be, .. different
[17:55:33] <bfredl> you cannot parse all of perl5 without solving the halting problem :]
[17:55:39] <clason[m]> yeah, folding is missing (and would have needed to be enabled, too)
[17:55:43] <LeoNerd> No I mean, it's misunderstanding an *awful* lot of stuff that perl-vim gets correct
[17:56:02] <LeoNerd> It's hugely worse
[17:56:14] <clason[m]> with the help of all your `after` files, I'm sure ;)
[17:56:42] <LeoNerd> Eh; my 'after' edits add support for a bunch of more recent syntax I've been adding lately. This is getting really simple basic stuff wrong
[17:57:00] <clason[m]> define "wrong"
[17:57:05] <clason[m]> (and different color does not count ;))
[17:57:12] <LeoNerd> E.g.   $self->{field} = value;    the `$self->{` is yellow but the `}` is red
[17:57:18] <LeoNerd> The opening vs. closing braces aren't even the same colour
[17:57:33] <LeoNerd> (they happen to be a different colour than I'm used to but yes I am ignoring that
[17:58:30] <bfredl> poor at-Aren gets pinged a lot :P
[17:58:57] <LeoNerd> It seems to be very inconsistent on what it highlights as a variable at all, even. Half of the `$self`s are bold-yellow, half of them are totally plain
[17:59:18] *** Joins: Guest88 (~textual@85.249.167.96)
[17:59:48] <clason[m]> don't look at the color (your scheme might be missing ones that only tree-sitter uses)
[17:59:50] *** Joins: serxoz (~serxoz@user/serxoz)
[17:59:56] <LeoNerd> It's decided that `=` and `=~` are interesting enough operators to make them bold-yellow yet `+=` and `!~` are not, and again plain
[18:00:16] <LeoNerd> I'm not complaining about the colour itslf. I'm complaining that they are different
[18:00:21] <clason[m]> yes, the queries don't know about `+=` and `!~`
[18:00:23] <clason[m]> easy to add
[18:00:34] <clason[m]> no, I mean "missing color" != "missing syntax"
[18:00:35] <LeoNerd> *surely* the open and the close braces should be highlighted identically,.. whatever highlight that happens to be
[18:00:47] <clason[m]> that looks to be a parser bug, yes
[18:01:05] <LeoNerd> OK this is getting weird. Let me make you screenshot
[18:01:05] <clason[m]> it's capturing `->{` even though that's not specified in the query
[18:01:33] <LeoNerd> http://home.leonerd.org.uk/local/screenie/treesat-perl.png  -- e.g. compare lines 398 with 399
[18:02:00] <LeoNerd> On line 398 the `substr` is bold and it bold+yellows its variable args; but on line 399 it decides substr should still be cyan but not bold, and doesn't bother colouring any of the args
[18:02:01] <clason[m]> It's impossible for me (and the other team members) to test and improve highlights for >90 different languages
[18:02:18] <clason[m]> so if nobody uses it and helps fix these issues, this is what you get
[18:02:22] <LeoNerd> Sure. :)
[18:02:25] *** Quits: Guest88 (~textual@85.249.167.96) (Client Quit)
[18:02:43] <LeoNerd> So where do I start attempting to fix any of these?
[18:03:00] <LeoNerd> (I also imagine somewhere I'll work out some instructions to set my correct colours, but that's just a theming issue)
[18:03:08] <clason[m]> first, install the https://github.com/nvim-treesitter/playground
[18:03:32] *** Quits: serxoz (~serxoz@user/serxoz) (Quit: Client closed)
[18:03:36] <clason[m]> then `:TSHighlightCapturesUnderCursor` will show you exactly which highlight group is used
[18:04:01] <LeoNerd> Ah. nice
[18:04:11] <clason[m]> and `:TSPlaygroundToggle` will show you the full parsed tree (press `a` to also see anonymous nodes, which are captured literally)
[18:04:22] <LeoNerd> It appers i'll need a much wider window
[18:04:30] <clason[m]> this will tell you whether the problem is the queries or the parser
[18:04:48] <clason[m]> or open it in a horizontal split
[18:05:09] *** Joins: Guest88 (~textual@85.249.167.96)
[18:05:14] <clason[m]> then open issues; there's a special form for those: https://github.com/nvim-treesitter/nvim-treesitter/issues/new?assignees=&labels=highlights&template=highlighting_issue.yml
[18:05:50] <LeoNerd> Huhhh.. playground didn't install right
[18:05:59] <LeoNerd>     fatal: could not read Username for 'https://github.com': terminal prompts disabled                                                                  │     7 ¶                             
[18:06:14] <LeoNerd> (er, ignore the righthand bit theere, that's me forgetting I had a :vsplit)
[18:06:47] *** Joins: macscohen (~krypTon@port-92-201-74-120.dynamic.as20676.net)
[18:06:59] *** Quits: Guest88 (~textual@85.249.167.96) (Client Quit)
[18:07:02] <clason[m]> huh
[18:07:04] <clason[m]> try again?
[18:07:29] <LeoNerd> Same again
[18:07:30] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:95ea:d1ff:55f2:9ea6)
[18:08:02] <clason[m]> weird
[18:08:11] <LeoNerd> It hasn't created a ~/.vim/plugged/playground directory either
[18:08:17] <LeoNerd> So it didn't even start
[18:08:29] <clason[m]> yeah, it clearly failed
[18:08:52] <clason[m]> did you put... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/d857fe89580573012a273bbf72aefa55911b663f)
[18:08:55] <LeoNerd> Should I try a manual `git clone` in there/
[18:09:09] <LeoNerd> I did, yes
[18:09:43] <LeoNerd> OH! wait a moment
[18:10:10] <LeoNerd> Bah; stupid copypaste error.. now it's working
[18:10:28] <LeoNerd> There we go.. now I have the playground
[18:10:42] <clason[m]> but the `->{` thing is a definite bug, I can tell you this much already
[18:10:53] <LeoNerd> Yah.. I'll try to find that one first
[18:11:03] *** Joins: Guest88 (~textual@85.249.167.96)
[18:11:56] <clason[m]> just report a minimal example
[18:12:11] <LeoNerd> I expect I'll have dozens of them
[18:12:46] <clason[m]> I expect so, too :)
[18:13:03] *** Joins: jiploading (~jiploadin@user/vjipac)
[18:13:11] <LeoNerd> In the playground tree view thingy, what's the significance of the red names? Most names are in cyan but some are red
[18:13:36] <clason[m]> I don't have these colors
[18:14:06] <LeoNerd> E.g.   name: identifier [169, 4] - [169, 7]    <== the `name:` is in red
[18:14:25] <clason[m]> that's the group
[18:15:14] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:95ea:d1ff:55f2:9ea6)
[18:16:02] <clason[m]> so you can have a `name` that is of type `identifier`
[18:16:18] <clason[m]> this allows you to only capture `indentifiers` that are part of a `name`
[18:16:57] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:95ea:d1ff:55f2:9ea6) (Ping timeout: 250 seconds)
[18:17:22] <clason[m]> (this specific example is not very illuminating, granted. but think of an `argument` that could be used in function _declarations_  and _calls_, and this allows you to distinguish them.)
[18:17:58] <LeoNerd> There's quite a few ERROR things turning up in here. I think those are bits the parser just gives up on
[18:19:58] <LeoNerd> Ahh.. mm... So, it seems for example my line 398 above, all that yellow was some weird leakage from the `if` earlier... if I missspell that as `ifx` it all goes away...
[18:20:17] <clason[m]> yep, that can happen
[18:20:44] <clason[m]> it can usually recover more gracefully than a regex, but it all depends on the quality of the parser
[18:21:23] <clason[m]> (and the more I look into it, the lower my impression of this particular one...)
[18:21:28] <LeoNerd> OK so I think my first step will be a bunch of fixing up the colours of what it does parse, to closer match what I was expecting
[18:21:44] <LeoNerd> Which I guess will involve my adding a bunch of  :hi link  statements, ..er.. somewhere. where?
[18:22:50] <clason[m]> wherever you would put them otherwise
[18:22:56] <LeoNerd> Yah the more I look around the node tree it has parsed out of my file, the more I don't think the original author has a very good understanding of perl syntax...
[18:23:00] <clason[m]> your colorscheme, or a `ColorScheme` autocommand
[18:23:09] <LeoNerd> Well currently mine all live in my  after/syntax/perl.vim  file
[18:23:16] <clason[m]> here's the list of the used groups: https://github.com/nvim-treesitter/nvim-treesitter/blob/f476df31af4d6d4bbb6a34b3ca870564cfc39b83/doc/nvim-treesitter.txt#L468-L725
[18:23:40] <LeoNerd> Ooooh.. TS itself invents the group names?
[18:23:59] *** Joins: M0x55954[m] (~M0x55954m@2001:470:69fc:105::1:bf92)
[18:24:04] <clason[m]> ah, then the autocommand
[18:24:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[18:24:14] <clason[m]> or -- if it's your own color scheme -- just put them there
[18:24:28] <clason[m]> LeoNerd: actually, nvim-treesitter invents these group names
[18:24:56] <clason[m]> you can even invent your own, but that's a bit advanced
[18:25:05] <LeoNerd> I seeee
[18:25:12] *** Quits: Guest88 (~textual@85.249.167.96) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:25:15] <LeoNerd> Yes it's -possible- I might invent some new ones but we'll see, maybe these categories fit
[18:25:38] <clason[m]> all these group names are linked to standard groups by default, but this a) is lossy since there's more TS groups and b) might not be the groups you had before
[18:25:54] <LeoNerd> Righty.. well this is fine, I can work with this
[18:25:56] <clason[m]> so these are all you'll get from the builtin queries
[18:26:12] <clason[m]> any other ones have to be local customizations
[18:26:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:26:58] <clason[m]> LeoNerd: I think that is very likely
[18:27:18] <clason[m]> the parser itself lives here, btw: https://github.com/ganezdragon/tree-sitter-perl
[18:27:24] <LeoNerd> yeah I found that
[18:27:42] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:b88f:75a6:8a:951)
[18:28:13] <clason[m]> so the original goal for the parser was less highlighting and more generating a syntax tree for an LSP , in fact
[18:28:35] <LeoNerd> Hrmmm
[18:28:51] <LeoNerd> So parts of this might just need small tweaks, but parts of it are really fundamentally wrong
[18:29:43] <clason[m]> The big question is if these are just bugs/oversights (which may even be easy to fix) or deliberate design decisions
[18:29:52] <LeoNerd> Wellyeah, indeed
[18:30:14] <clason[m]> which I couldn't say
[18:33:03] <clason[m]> but my impression is that most of the time, people are eager to improve their parsers and are happy to hear from language experts about specific issues.
[18:34:05] <LeoNerd> Ahhhhhh I think I see what's going on in a lot of these cases
[18:34:25] <LeoNerd> It's conflating the idea of a highlight for a keyword that introduces some thing, from the entire thing
[18:34:41] <LeoNerd> So e.g. it's decided that `if` should be bold-yellow but it's applying that highlight to the entire  if(condition) { ... }  part
[18:34:46] <LeoNerd> Rather than just the two letters `if`
[18:35:57] <clason[m]> yes, that seems correct
[18:36:00] <LeoNerd> Yeah so all that bold-yellow on line 398 actually comes from the  TSConditional  group, which has leaked out from the `if` part
[18:36:15] <LeoNerd> whereas for whatever reason, `while` didn't leak
[18:36:28] <clason[m]> not "leaked out"; it's actually defined that way
[18:36:44] <LeoNerd> Wow, and it doesn't even think that `and` is an operator at all
[18:36:56] <clason[m]> (why, I couldn't say -- but for me at least the other parts are overwritten by their own highlight groups, so I don't see the color "leaking")
[18:37:08] <clason[m]> LeoNerd: indeed
[18:37:14] <clason[m]> nobody has missed it so far :)
[18:37:24] *** Joins: arch-angel (~arch-ange@user/arch-angel)
[18:37:28] <LeoNerd> Yeah I've been busily removing some of them... e.g. I didn't like the red showing through on TSPunctDelimiter or TSPunctBracket so I've removed those and now Ihave random boldyellor or not, as the case may be.
[18:37:46] <clason[m]> you must keep in mind that the queries were very likely written by somebody who doesn't write perl and was just trying to get something in
[18:37:58] <clason[m]> yes, that would explain it
[18:38:11] <LeoNerd> btw is   :hi link TSSomeGroup  NONE   the way to do that?
[18:38:21] <clason[m]> yep
[18:38:32] <clason[m]> I'd say so at least
[18:38:34] <LeoNerd> OK, good
[18:39:04] <clason[m]> so the `and` and `while` (and greedy `if`) stuff is definitely on the query side and easy to fix
[18:40:06] <LeoNerd> Hrm... so some questions about how :TSHighlightGroupsUnderCursor works.  It says "Treesitter", and then there's two lines.  @conditional -> 496 -> TSConditional  and  @function -> 493 -> TSFunction
[18:40:27] <LeoNerd> I see the third part is the highlight group.. I'm imagining the first is some name within treesitter. What's the number? It doesn't seem to relate to the line number in my own file
[18:41:58] <clason[m]> yes. the first is the capture group that you'd write in the query
[18:42:01] <clason[m]> I don't know what the second thing is, either
[18:42:07] *** Joins: Guest88 (~textual@85.249.167.96)
[18:43:35] <clason[m]> possibly some internal highlight group that is not exposed
[18:43:53] *** Joins: Pixelized[m] (~contactis@2001:470:69fc:105::1:276c)
[18:45:03] <LeoNerd> OK, so I think I've done about all I can by simple  :hi link  fixes. I think next I want to have a go fiddling with the parser grammar definition itself
[18:45:35] <LeoNerd> OHwait before I do that I should work out how to have this done with treesitter by default whenever I just open a perl file. Currently I type a bunch of commands
[18:45:42] <clason[m]> OK, that has to be done at the tree-sitter-perl repo
[18:46:01] <clason[m]> Lower-hanging fruit would be the stuff on the query side
[18:46:16] <clason[m]> which are here: https://github.com/nvim-treesitter/nvim-treesitter/blob/master/queries/perl/highlights.scm
[18:46:25] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:b88f:75a6:8a:951) (Remote host closed the connection)
[18:46:32] <clason[m]> you can already see the missing `"and"` and `while_statement`
[18:46:41] <LeoNerd> How do I default it on?
[18:47:19] <clason[m]> you mean, enable tree-sitter highlighting by default?
[18:47:23] <LeoNerd> Yeah
[18:47:35] <clason[m]> be aware that this will disable all builtin syntax features for perl
[18:47:41] <LeoNerd> if I quite and rerun  nvim foo.pm  it reverts back to the syntax/perl.vim
[18:47:57] <clason[m]> so if you rely on those, I'd recommend not doing that
[18:47:58] <LeoNerd> Yes. I want to wholesale swap to this, because I'm going to be doing a lot of quit/restart a lot I imagine
[18:48:05] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:b88f:75a6:8a:951)
[18:48:09] <clason[m]> OK
[18:48:40] <LeoNerd> I wouldn't say I "rely on" it. i've added a lot because the default was terrible. This default here is also terrible but perhaps if I can fix it in a better way than I did syntax/perl.vim that might be overall better
[18:48:44] <LeoNerd> For myself and others
[18:49:17] <clason[m]> then put the following in your `init.vim` after(!) the `plug` block:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/1034fd41fc59a8b3f0d7670050d622d4a9fdc737)
[18:49:52] <clason[m]> That would be much appreciated. I just wanted to give fair warning since that often trips people up.
[18:49:58] <LeoNerd> Ooooooff.. I imagine that would upset non-nvim
[18:50:30] <LeoNerd> I may have to pop it in my  if has("nvim")  block
[18:50:32] <clason[m]> LeoNerd: by "rely" I mean other features that depend (silently) on syntax
[18:50:44] <clason[m]> LeoNerd: oh, for sure. all this is very much Neovim only
[18:50:50] <clason[m]> LeoNerd: yes, that would be The Way.
[18:51:01] <LeoNerd> I don't usually run vim, just occasionally various other tools or bitsandpieces still boot it
[18:51:10] <clason[m]> just make sure it comes after the two `plug` calls
[18:51:17] *** Quits: Guest88 (~textual@85.249.167.96) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:51:39] <LeoNerd> Errr.. it really doesn't like this  lua  call
[18:51:43] <clason[m]> (also, wrap the plugins themselves in has("nvim"); I'm sure they will not play nice with Vim, either
[18:51:59] <clason[m]> "it" being...?
[18:52:06] <LeoNerd> E5107: Error loading lua [string ":lua"]:6: unexpected symbol near '<eof>'
[18:52:10] <LeoNerd> on next nvim startup
[18:52:40] <LeoNerd> Oh I think you're missing a }
[18:52:50] <LeoNerd> Theeeere we go :)
[18:52:59] <clason[m]> yes, sorry
[18:53:05] <clason[m]> (copy&paste from my config)
[18:53:21] <LeoNerd> OK good that seems to be applying by default now
[18:53:46] <clason[m]> (and once indents and folds are added, you'd just `enable` them exactly like `highlight`)
[18:53:58] <LeoNerd> Yeah I'm hoping to get folding quite soon
[18:54:15] <LeoNerd> Given this thing -actually- understands the treeshaped nature of the syntax that should hopefully be huuugely more reliable than the old method
[18:54:36] *** Quits: macscohen (~krypTon@port-92-201-74-120.dynamic.as20676.net) (Ping timeout: 240 seconds)
[18:54:40] <clason[m]> that was the general idea, yes :)
[18:55:14] *** Quits: jiploading (~jiploadin@user/vjipac) (Quit: leaving)
[18:55:24] <LeoNerd> OK so lets unwind the stack a moment. This highlights.scm file. that appears to be associating thnigs with other things. What are the things in this case?
[18:57:14] *** Joins: Guest88 (~textual@85.249.167.96)
[18:57:43] <clason[m]> basically, you just need to create a `fold.scm` that lists all the blocks -- which should be easy to see from the playground tree
[18:58:02] <LeoNerd> Oh I'll worry about fold later. I want to get the highlights right first
[18:58:11] <LeoNerd> I'm slightly concerned about how this `and` is going to work
[18:58:47] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[18:58:48] <clason[m]> it associates nodes (which you can see in the playground tree) with captures -- which are the output of tree-sitter running a query against a tree and can then be assigned to highlight groups (or manipulated in whatever way you want)
[18:59:34] <clason[m]> LeoNerd: well, that depends. you can just tell it that any `and` is a keyword
[18:59:44] <LeoNerd> Ah OK so there's three layers involved here... the treesitter outputs these nodes (e.g. "scalar_variable") which highlights.scm says is a "@variable", and then that goes off..er.. somewhere
[18:59:48] <clason[m]> s/keyword/operator/
[18:59:56] <clason[m]> `"and" @operator`
[19:00:34] *** Quits: Guest88 (~textual@85.249.167.96) (Client Quit)
[19:00:45] <clason[m]> LeoNerd: yep, exactly. ( the "somewhere" is the highlighting module in nvim-treesitter, which has a map -- which you can extend -- from @capture to TSHighlightGroup)
[19:00:49] <LeoNerd> Hrmmm... I was initially worried about that but testing with `or` doesn't break in the way I was worried about.  sub or { ... }  and  $self->or( ... )  both parse OK
[19:01:05] <LeoNerd> So maybe "and" in the same way is fine
[19:01:08] <clason[m]> yeah, because order matters
[19:01:18] <LeoNerd> Hmmmm
[19:01:23] <clason[m]> later statements in the scheme file override earlier ones
[19:01:29] <LeoNerd> Ah
[19:01:49] *** Joins: arch-angel_ (~quassel@2001:e68:5400:3249:2c0:4894:d1ba:a2ce)
[19:02:13] <clason[m]> if you press `a` in the playground, you can see the "anonymous" nodes -- of which `"and"` should be one -- and it is _those_ that you capture
[19:02:33] *** Quits: arch-angel_ (~quassel@2001:e68:5400:3249:2c0:4894:d1ba:a2ce) (Client Quit)
[19:02:35] <LeoNerd> Hoboy, lots m,re stuff
[19:02:43] <clason[m]> not just any old `and`
[19:03:10] *** Quits: arch-angel (~arch-ange@user/arch-angel) (Quit: Leaving)
[19:03:29] *** Joins: arch-angel (~quassel@user/arch-angel)
[19:04:05] <LeoNerd> Nice. OK, so lets add `and`. If I edit my local file on disk, I guess I can just restart and it'll work? Or what's required?
[19:04:13] *** arch-angel is now known as arch-angel_
[19:04:15] *** arch-angel_ is now known as arch-angel
[19:04:55] <clason[m]> yes, exactly
[19:05:46] <LeoNerd> I might as well add all of them while I'm here
[19:06:26] <clason[m]> if you press `o` with the playground open, you can directly add queries and they will be highlighted in your open file
[19:06:27] *** Quits: arch-angel (~quassel@user/arch-angel) (Client Quit)
[19:06:29] <clason[m]> useful for tuning queries
[19:06:40] <LeoNerd> Hrm.. wait.. Shouldn't the treesitter itself be doing this? Why does your highlights.scm need to maintain a list of all the binary infix operators?
[19:06:45] *** Joins: arch-angel (~quassel@user/arch-angel)
[19:06:46] <clason[m]> because the syntax is a bit finicky, at least for me
[19:08:32] <clason[m]> because highlights needs to keep track of everything it wants to highlight
[19:08:35] <LeoNerd> Imean yes it's now working, but it feels the wrong way to have gone about doing it
[19:08:53] <clason[m]> if you do folds, you don't care about most of the stuff, so you don't want to even touch it when walking through the tree
[19:08:53] <LeoNerd> Shouldn't the treesitter itself say "here's a binary infix operator", and then you just highlight anytihng it tells you
[19:09:05] <clason[m]> if the parser does that, sure
[19:09:11] <clason[m]> this one doesn't
[19:09:16] <LeoNerd> Ah.. So this is more of a workaround for that, I see
[19:09:38] <clason[m]> well, not necessarily. it might even be faster this way.
[19:09:38] <LeoNerd> Ultimately then that probably needs to go further upstream then, and have the perl treesitter tell you these things
[19:09:48] <clason[m]> possibly.
[19:09:52] <clason[m]> not necessarily
[19:09:53] <LeoNerd> It's going to be terrible. There's a *long* list of them you don't have here
[19:10:05] <clason[m]> this is a standard pattern I've seen through many languages
[19:10:38] <LeoNerd> I feel it's something the treesitter should be telling you though... that "here is a binary infix operator"
[19:10:54] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:11:18] <clason[m]> Maybe you want to not lump all of them together? I don't know; this is between you and whoever wrote the parser
[19:11:39] <clason[m]> It may very well be that your way is better; I just couldn't tell.
[19:13:01] <LeoNerd> Looking at the tree view of nodes that come from the treesitter, it doesn't appear to be telling you one
[19:13:07] <LeoNerd> So I guess that needs fixing there
[19:16:36] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[19:16:55] *** Joins: elves-upstate (~elves-ups@129-2-180-41.wireless.umd.edu)
[19:17:43] <clason[m]> yes, if you want a "binary infix operator" node, you need to add one to the grammar
[19:18:24] <LeoNerd> I expect that's the better longterm solution
[19:18:50] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:20:21] <LeoNerd> I guess time to work on that and work out how to make some edits to it
[19:20:44] *** Quits: arch-angel (~quassel@user/arch-angel) (Quit: Sayonara!)
[19:21:06] *** Joins: arch-angel (~quassel@user/arch-angel)
[19:22:43] <LeoNerd> Oh hmm... there's a compiled  parser/perl.so  file. This isn't easily source-editable
[19:24:27] *** Joins: Guest88 (~textual@85.249.167.96)
[19:28:27] *** Quits: arch-angel (~quassel@user/arch-angel) (Quit: Sayonara!)
[19:28:45] *** Joins: arch-angel (~quassel@user/arch-angel)
[19:30:05] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: harun_x9[m] (~harunx9ma@2001:470:69fc:105::3a15) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: aliensqueegee[m] (~aliensque@2001:470:69fc:105::1:1b59) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: Hotstoast[m] (~hotstoast@2001:470:69fc:105::d1a9) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: buz[m] (~buzseriou@2001:470:69fc:105::1:5d9b) (Quit: You have been kicked for being idle)
[19:30:42] <clason[m]> I'm just saying there might be a good reason for doing it differently. I'd approach it with this possibility in mind.
[19:31:19] *** Quits: va5c0 (~vasco.nun@91.110.154.119) (Ping timeout: 256 seconds)
[19:31:50] <LeoNerd> Currently I'm somewhat failing to work out how to grab, build, and apply a locally-modified copy of the actual perl treesitter parser
[19:32:18] *** Quits: arch-angel (~quassel@user/arch-angel) (Client Quit)
[19:32:35] *** Joins: arch-angel (~quassel@user/arch-angel)
[19:33:24] *** Quits: arch-angel (~quassel@user/arch-angel) (Client Quit)
[19:33:25] <clason[m]> No, the parser is generated from the `grammar.js` via the `tree-sitter` CLI and then compiled (possibly with the help of a hand-written `scanner.c`) to the `perl.so` that is installed.
[19:33:35] <clason[m]> All this is handled by `nvim-treesitter` for you.
[19:33:39] <LeoNerd> Ooooohhhh.. Right
[19:33:43] <003AAI78C> https://github.com/ganezdragon/tree-sitter-perl/blob/master/grammar.js is the grammar
[19:33:44] <LeoNerd> So I don't actually have to build its thing
[19:33:53] <clason[m]> beat me to it :)
[19:34:05] *** Joins: arch-angel (~quassel@user/arch-angel)
[19:34:08] *** Joins: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk)
[19:34:29] *** Joins: gpanders_ (~gpanders@user/gpanders)
[19:34:38] <LeoNerd> Yes, it handled it automatically on first install. But now I want a custom edited one. So if I have a custom edited file on my local disk, how do I make that apply intead?
[19:34:49] *** Quits: arch-angel (~quassel@user/arch-angel) (Client Quit)
[19:38:18] <LeoNerd> I'm now even more confused. I don't even *have* the tree-sitter cli command itself
[19:38:34] <LeoNerd> So I don't understand how this perl.so could have got built
[19:40:41] <clason[m]> oh, because the tree-sitter-perl repository has the generated `parser.c` commited
[19:40:42] <clason[m]> s/commited/committed/
[19:40:49] <clason[m]> so the cli is not needed for this parser
[19:40:50] <LeoNerd> Ahhhh
[19:41:04] <clason[m]> other parser do not commit the generated c code, in which case you need it
[19:41:07] <LeoNerd> Yes I did see a 22MiB sized .c file and decided that couldn't possibly have been hand-written
[19:41:20] <clason[m]> right :)
[19:41:30] <clason[m]> so messing with the parser is more involved
[19:41:43] <LeoNerd> So I guses I'll need that before I can edit this. which is fine. I seem to be failing to install that though
[19:41:55] <clason[m]> Look at https://github.com/nvim-treesitter/nvim-treesitter#adding-parsers
[19:42:01] <LeoNerd> https://paste.debian.net/1230989/  :(
[19:42:36] <clason[m]> you need to uninstall (and remove from the "ensure_installed" list) the perl parser and add your own like in the instructions
[19:43:06] <clason[m]> I wouldn't touch node if someone paid me for it...
[19:43:12] <clason[m]> can't you install it via apt?
[19:43:20] <LeoNerd> Nope
[19:43:24] <clason[m]> but it needs to be the latest version
[19:43:42] <clason[m]> (not always, but in this case earlier compatible versions had a nasty bug)
[19:44:04] <LeoNerd> There's various libtree-sitter-* style packages, but nothing that looks like it has a commandline tool
[19:44:05] *** Quits: JayDoubleu_ (sid339529@id-339529.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[19:45:11] <clason[m]> no, that's different (that's the "consumer" part, like the one compiled into Neovim)
[19:45:29] *** Quits: hughrawlinson_ (sid11243@ilkley.irccloud.com) (Ping timeout: 256 seconds)
[19:45:48] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:45:56] <clason[m]> I'd recommend sticking to the highlight queries for now, then, and just opening issues on the parser repo to ask the maintainer to fix things.
[19:46:06] <LeoNerd> Ah, let me install an npm that isn't 5-years ancient out of apt, first
[19:46:13] <LeoNerd> It turns out the one I had was in $HOME and terrible
[19:46:26] <LeoNerd> OK, there we go
[19:47:01] <LeoNerd> Excellent. I can now run its tests
[19:47:10] *** Joins: JayDoubleu_ (sid339529@id-339529.hampstead.irccloud.com)
[19:47:31] *** Joins: hughrawlinson_ (sid11243@id-11243.ilkley.irccloud.com)
[19:47:53] <clason[m]> Nice!
[19:48:00] <clason[m]> so `tree-sitter test` is always good
[19:48:21] <clason[m]> and you can run `tree-sitter query` directly against a perl file without having to go through Neovim
[19:48:28] <LeoNerd> Yuh
[19:48:36] <jamessan> LeoNerd: I've been working on packaging the tree-sitter stuff.  Almost have all the dependencies for tree-sitter-cli ready
[19:49:49] <LeoNerd> Ah :)
[19:49:56] <LeoNerd> Well no great worries; I have something working for now
[19:50:03] *** Joins: arch-angel (~quassel@user/arch-angel)
[19:51:18] <LeoNerd> Wait I'm now confused. There's a  grammar.js  and also a  src/grammar.json
[19:51:24] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[19:52:09] <clason[m]> yes. the former is what you want
[19:52:28] <LeoNerd> Ah
[19:52:41] <clason[m]> (I think some parser also use npm to generate the grammar.js, but you don't want to touch those...)
[19:54:18] <LeoNerd> Hmm.. So... we have some JavaScript that defines a grammar that gets compiled into C and then a real .so, and loaded by an nvim plugin that as far as I can tell is running in Scheme but configured in Lua, to parse some Perl...
[19:54:40] <LeoNerd> Are we *quite* sure we can't work some Haskell or Prolog perhaps in here too? ;)
[19:55:26] <clason[m]> I'm sure people have tried...
[19:55:33] <clason[m]> But, yeah, it's convoluted
[19:55:54] <Bowuigi[m]> Language interoperability is cool I guess
[19:56:04] <clason[m]> (except it's not the plugin that is running in Scheme, it's the .so that consumes it)
[19:59:10] <Mathias[m]1> I think the tooling involves some rust now as well? 
[19:59:33] <clason[m]> right, but only optionally
[19:59:47] <Mathias[m]1> Oh, how boring
[20:00:02] <clason[m]> (as in, tree-sitter provides a rust crate, but I don't think you have to use it unless you want to use tree-sitter in a Rust application)
[20:00:20] <clason[m]> yeah, missed opportunity to add some async/await
[20:00:26] <LeoNerd> We need a bingo card with a bunch of letters on it; see how many different letters we can find named languages with
[20:00:38] <LeoNerd> Perl has async/await too you know ;)
[20:01:16] <clason[m]> rewrite tree-sitter in Perl
[20:01:30] *** Quits: Guest88 (~textual@85.249.167.96) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:01:49] <LeoNerd> Mmm.. Perhaps. I feel it would be bad if it couldn't correctly parse even its own source code then.. So first it would be good to have it able to parse perl correctly :)
[20:02:13] *** Parts: gpanders_ (~gpanders@user/gpanders) (WeeChat 3.4)
[20:02:19] <clason[m]> Well, it probably would if it were written in Perl
[20:02:26] <clason[m]> Law of Sympathy and whatnot.
[20:02:28] *** Joins: Guest88 (~textual@85.249.167.96)
[20:02:43] <p00f> doesn't perl have variable variables
[20:03:04] <ii14[m]> variable variable variable variables even
[20:03:16] <LeoNerd> Ohdeargod... I made a -one line edit- to grammar.js and the `git diff` after generating is ... er... Just Shy of 1million lines long
[20:03:27] <LeoNerd> 965-thousand lines
[20:04:00] <LeoNerd> p00f: Only if you run it in 1980s-era "I'm a fancy awk script" mode. When writing /real/ programs you turn that kind of crap off
[20:04:16] <p00f> i see
[20:04:27] <LeoNerd> I wonder if I can tell git diff to ignore the generated files, like you can on github
[20:04:37] <clason[m]> oh no don't do that!
[20:04:39] *** Quits: Guest88 (~textual@85.249.167.96) (Client Quit)
[20:05:57] <clason[m]> maybe with `git diff ... -- ':!parser.c'`?
[20:07:23] *** Joins: Guest88 (~textual@85.249.167.96)
[20:07:25] *** Quits: cotko (~cotko@155.pool85-49-78.dynamic.orange.es) (Quit: Konversation terminated!)
[20:09:32] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[20:10:04] *** Joins: sliss (~sliss@109.136.165.60)
[20:11:13] *** Quits: Guest88 (~textual@85.249.167.96) (Client Quit)
[20:12:11] <LeoNerd> Mmm well this seems easy enough. I've now added  package NAME VERSION;  and  package NAME {BLOCK...}  to the parser
[20:15:03] <jaawerth[m]> LeoNerd: you can add -diff to .gitattributes to make it treat it like a binary but I don't know for sure whether that will have other, less desireable impacts than the purely presentational mark-as-generated
[20:15:13] <jaawerth[m]> I really wish git had a builtin equivalent for exactly that purpose (also for vendored)
[20:18:54] <jaawerth[m]> using a git magic pathspecb clason is suggesting is probably a better idea. but it's anoying to have to remember to do that every time for projects
[20:19:14] <bfredl> variable variables? is that like `g:foo_{g:spam}_bar` in vim?
[20:19:41] <jaawerth[m]> ew
[20:20:10] <clason[m]> "yo dawg"
[20:20:30] <clason[m]> "we heard you like variables"
[20:21:09] *** Joins: angelacrust (~angelacru@182.68.208.211)
[20:23:06] <angelacrust> Hi, I mapped the <Esc> key to switch to normal mode in terminal buffer, and `<C-v><Esc>` to map to the Esc key.
[20:23:07] <angelacrust> Even though I have removed those lines from the config, the change because of those mappings still persists. What have I done wrong?
[20:23:33] * CleoMenezesJr[m] uploaded an image: (11KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/sQdePTuVXApCWByxwZvdiSYB/image.png >
[20:23:33] <ii14[m]> check `:verbose tmap <Esc>`
[20:23:44] <clason[m]> CleoMenezesJr[m]: yep, it's gone
[20:23:51] <ii14[m]> Cleo Menezes Jr.: apparently dude removed his gh account
[20:23:54] <angelacrust> Okay
[20:24:12] *** Quits: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk) (Ping timeout: 240 seconds)
[20:24:17] <CleoMenezesJr[m]> CleoMenezesJr[m]: Apparently surround.nvim is out of maintainer :/
[20:24:25] <CleoMenezesJr[m]> It's so sad
[20:24:34] <angelacrust> `<Esc>       * <C-\><C-N>      <Space>                                                                                                     Last set from ~/.config/nvim/init.vim line 41` ii14[m]
[20:24:38] <CleoMenezesJr[m]> I really liked this plugin
[20:24:44] <clason[m]> I'm sure someone else will step up
[20:24:59] <ii14[m]> angelacrust: here you go, that's where it's set. init.vim, line 41
[20:24:59] <clason[m]> at least to host it
[20:25:09] <CleoMenezesJr[m]> clason[m]: I saw a fork
[20:25:29] <CleoMenezesJr[m]> But I'll still have a look at the reliability.
[20:26:07] <clason[m]> well, I mean, at this point anything is more reliable than someone who just deletes his whole Github presence without notive
[20:26:09] <clason[m]> s/anything/_anything_/, s/notive/notice/
[20:26:34] <angelacrust> ii14[m] what do you mean? there's nothing at line 41...
[20:27:02] <ii14[m]> are you doing something stupid like `:so $MYVIMRC` by any chance?
[20:27:10] <ii14[m]> or `:so%`
[20:27:19] <ii14[m]> restart vim
[20:27:19] *** Joins: va5c0 (~vasco.nun@91.110.154.119)
[20:27:22] <p00f> <bfredl> "variable variables? is that like..." <- TIL
[20:27:22] <Famiu[m]> CleoMenezesJr[m]: I mean if you don't have a hateful relationship with VimScript you could use `vim-surround`
[20:27:38] <Famiu[m]> and tpope is undoubtedly reliable
[20:27:41] <angelacrust> Yeah
[20:27:52] <angelacrust> I have a leader set command to source the vimrc file
[20:27:59] <clason[m]> angelacrust: that's funny, that's exactly what it says for me :]
[20:28:11] <ii14[m]> well don't do that then and just restart vim when you change something
[20:28:24] <angelacrust> welp
[20:28:40] <clason[m]> yeah, that's definitely not a good idea
[20:28:47] <Famiu[m]> clason[m]: this is why I think there should be a repository (official or community maintained) that stores clones of plugins
[20:28:59] <Famiu[m]> so plugins don't just get thanos'ed out of existenc
[20:29:01] <Famiu[m]> s/existenc/existence/
[20:29:06] <clason[m]> certainly not official
[20:29:14] <angelacrust> works now
[20:29:17] <clason[m]> I do not want to maintain such a thing
[20:29:18] <Famiu[m]> sorta like MELPA I guess
[20:29:29] <angelacrust> ii14[m] thank you again
[20:29:34] <Famiu[m]> clason[m]: understandable
[20:29:48] <clason[m]> this has been brought up repeatedly, but there's little interest in such a thing from the maintainers
[20:29:59] <Famiu[m]> yeah, I understand that
[20:30:04] <clason[m]> besides the burden of maintenance, it adds another single point of failure to the ecosystem
[20:30:05] <Famiu[m]> The maintainers already have a lot to deal with
[20:30:07] <angelacrust> vim-surround works the same tho
[20:30:19] <Famiu[m]> well if it's community maintained then it obviously has to be someone trustworthy
[20:30:37] *** Joins: gokkun (~gokkun@212.58.103.122)
[20:31:14] *** Quits: gokkun (~gokkun@212.58.103.122) (Client Quit)
[20:31:22] <angelacrust> Is it a good idea to do `tnoremap <Esc> <C-\><C-n>` and `tnoremap <C-v><Esc> <Esc>` to handle terminal buffers and normal mode?
[20:31:26] <clason[m]> I mean, look at nvim-treesitter, which already kinda acts like a centralized repository for parsers
[20:31:26] <sunjonSenghanBri> it feels like people are making a bigger deal of this than it actually is
[20:31:32] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[20:31:35] <clason[m]> and everyone involved can't wait to stop doing that ;)
[20:32:07] <ii14[m]> just a matter of preference
[20:32:17] <ii14[m]> I don't see anything wrong with it
[20:32:34] <Famiu[m]> clason[m]: I understand that it's going to extremely painful
[20:32:34] <angelacrust> Alright
[20:32:39] <Famiu[m]> one would have to be a masochist to willingly do such a thing
[20:32:47] <clason[m]> I don't see what the second would be for, but I do the first (knowing that I won't use terminal programs inside Neovim that itself use `<esc>`)
[20:32:51] <ii14[m]> except maybe that you maybe should also map `<c-v><c-v>` -> `<c-v>` so you can still use `<c-v>`
[20:33:01] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:b88f:75a6:8a:951) (Ping timeout: 250 seconds)
[20:33:14] <clason[m]> one would first have to have a very precise idea what one would actual wish to accomplish with such a thing
[20:33:25] <Famiu[m]> Famiu[m]: but there _are_ plenty of masochists in the world :V
[20:33:25] <ii14[m]> I mean pass `<c-v>` to the terminal emulator
[20:33:31] <clason[m]> and then ask whether it's worth it
[20:34:14] <CleoMenezesJr[m]> <Famiu[m]> "I mean if you don't have a..." <- No, I don't. lol
[20:34:14] <CleoMenezesJr[m]> Only that I choose plugins in Lua first. But I don't have this problem of hate against vimscript. lmao
[20:34:26] <Famiu[m]> well, at least we know it's not impossible per se, MELPA does it with Emacs. It's fine that the maintainers don't want to do it though, it's a totally respectable and understandable decision
[20:34:28] <CleoMenezesJr[m]> https://github.com/ur4ltz/surround.nvim
[20:34:47] <CleoMenezesJr[m]> Thats the fork I was talkingabout
[20:34:57] <Famiu[m]>  * well, at least we know it's not impossible per se, MELPA does it with Emacs. It's fine that the Neovim maintainers don't want to do it though, it's a totally respectable and understandable decision
[20:34:58] <clason[m]> of course it's not impossible. but you'd have to get buy-in from a lot of people to make it work
[20:35:19] <angelacrust> hmm, that's a good idea ii14[m]
[20:35:44] <Famiu[m]> > <@cleomenezesjr:matrix.org> No, I don't. lol
[20:35:44] <Famiu[m]> > Only that I choose plugins in Lua first. But I don't have this problem of hate against vimscript. lmao
[20:35:44] <Famiu[m]> I mean I prefer Lua but even before surround.nvim disappeared I used vim-surround simply because it was much simpler and stable imo
[20:36:24] <Famiu[m]> clason[m]: that's true
[20:36:36] <Famiu[m]> there's already sites that have curated lists of plugins I believ
[20:36:38] <Famiu[m]> s/believ/believe/
[20:36:44] <Famiu[m]>  * there's already sites that have curated lists of Neovim plugins I believe
[20:36:45] <CleoMenezesJr[m]> Famiu[m]: I used it too, but for some reason I started using surround.nvim and stuck with it.
[20:36:50] <clason[m]> sure, like https://github.com/rockerBOO/awesome-neovim
[20:36:55] <Famiu[m]> but actually cloning those plugins and managing versions is a whole new beast
[20:37:03] <Famiu[m]> clason[m]: yeah
[20:37:15] <clason[m]> yeah, MELPA is more like homebrew
[20:37:18] <clason[m]> a massive infrastructure
[20:37:27] <Famiu[m]> yeha
[20:37:30] <Famiu[m]>  * yeah
[20:37:33] <Famiu[m]> idk how the Emacs community does it
[20:37:39] <clason[m]> and why
[20:37:50] <angelacrust> does anyone know where I'm supposed to do `yarn install` for coc.nvim in WSL?
[20:38:53] <ii14[m]> run it from a terminal i assume
[20:39:06] <ii14[m]> you'll probably have to install yarn first
[20:39:12] <ii14[m]> if you haven't already
[20:39:28] <CleoMenezesJr[m]> clason[m]: good repo
[20:39:51] <angelacrust> Yarn is installed but I don't know where coc.nvim is located
[20:41:16] <ii14[m]> what's your plugin manager?
[20:41:31] <Famiu[m]> clason[m]: I'm convinced Emacs users have hacked into the Matrix or something. I don't know how distributions like Doom Emacs and Spacemacs can exist when there's a gazillion configuration options in Emacs
[20:41:51] <angelacrust> vim-plug
[20:41:53] <Famiu[m]> * in Emacs, not to mention there's hundreds of plugins at play, each breaking semi-frequently
[20:42:07] <angelacrust> and the plugged folder is not inside .config/nvim/
[20:42:14] <clason[m]> Isn't that the point?  To hide all these configuration options behind a much simpler set (and a shiny wallpaper)?
[20:42:37] <ii14[m]> check in `~/.local/share/nvim`
[20:42:43] <clason[m]> And, yes, they break frequently, and then you get low-quality bug reports.
[20:42:48] <angelacrust> hm
[20:42:57] <Famiu[m]> clason[m]: well yeah, what I'm saying is, how can a human (or even multiple humans) maintain all that
[20:43:22] <Famiu[m]> it's not possible unless they hacked the simulation and learned how to stop time or something
[20:43:51] <Famiu[m]> oh, I just realized this is more off-topic chat material
[20:44:27] *** Joins: lordrishav_ (~LordRisha@user/lordrishav)
[20:44:48] <angelacrust> ii14[m] nvim isn't present in that folder
[20:44:55] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Read error: Connection reset by peer)
[20:46:14] <ii14[m]> well that's weird. you're running neovim, not just vim? can you check `nvim --version`?
[20:46:59] <angelacrust> 0.4.3
[20:47:25] <ii14[m]> run `:echo stdpath('data')` in neovim
[20:48:31] <clason[m]> ouch
[20:48:36] <clason[m]> that's ancient
[20:48:41] <clason[m]> current version is 0.6.1
[20:48:42] <angelacrust> .local/share/nvim
[20:49:05] <clason[m]> might as well be rubbing two sticks together if you're on 0.4.3
[20:49:29] <angelacrust> Alright
[20:49:39] <angelacrust> I guess I know what's wrong
[20:51:57] <LeoNerd> So apparently I can do quick local testing with the `tree-sitter-cli query` command but I've yet to work out how it works. Does anyone have any docs/examples?
[20:52:24] *** Joins: rgrinberg (~textual@187.194.14.9)
[20:55:45] <LeoNerd> Ah; it's `parse`, not `query`
[20:56:04] <LeoNerd> And also it doesn't like parsing from /dev/stdin - it always thinks the input is zero-length. So you can't just parse stdin and type stuff :(
[20:56:27] <LeoNerd> Perhaps it is stat()ing the input to determine length before slurping it
[21:01:54] *** Joins: evanextreme (~evan@2604:4080:1000:8150:7950:a9e:9213:5d03)
[21:01:57] *** evanextreme is now known as evanextreme[away
[21:02:09] *** Quits: rgrinberg (~textual@187.194.14.9) (Read error: Connection reset by peer)
[21:02:47] *** Quits: guido_ (~weechat@host-79-18-252-81.retail.telecomitalia.it) (Quit: WeeChat 3.4)
[21:03:00] *** Joins: guido_ (~weechat@host-79-18-252-81.retail.telecomitalia.it)
[21:03:34] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5)
[21:05:20] <clason[m]> `parse` gives you the tree (and I think it does require an actual file)
[21:05:54] <LeoNerd> It does. I've +1'ed & commented on their bug to request it handle stdin properly
[21:06:23] <clason[m]> `tree-sitter query highlight.scm file.pl` allows you to run a query against a file
[21:06:52] <LeoNerd> Yes
[21:07:09] <LeoNerd> But so does parse. It was just confusing when it didn't work with stdin
[21:09:14] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:09:30] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:09:53] <angelacrust> `neovim is already the newest version (0.4.3-3). 0 upgraded, 0 newly installed, 0 to remove and 121 not upgraded.`
[21:09:56] <angelacrust> ?
[21:10:16] <LeoNerd> What debian version?
[21:10:21] <gpanders> are you on an older Ubuntu/Debian?
[21:10:27] <angelacrust> Yes
[21:10:32] <angelacrust> Not that old though
[21:12:24] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[21:12:57] *** Joins: sliss (~sliss@109.136.165.60)
[21:13:10] <clason[m]> but not the latest
[21:13:23] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:14:23] *** Quits: harryy (~harry@user/harryy) (Quit: WeeChat 3.4)
[21:15:55] *** Quits: lordrishav_ (~LordRisha@user/lordrishav) (Quit: Ight Imma Head out)
[21:16:12] <Friithian> there's a neovim nightly ppa which I use 
[21:16:14] <ii14[m]> you can use ppa: https://launchpad.net/~neovim-ppa/+archive/ubuntu/stable
[21:16:26] <Friithian> there you go
[21:20:08] <angelacrust> (y)
[21:20:21] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[21:21:25] *** Guest8316 is now known as Polo
[21:21:55] *** Polo is now known as Guest4829
[21:22:19] *** Joins: crashrep (~crashrep@user/crashrep)
[21:23:24] *** Quits: va5c0 (~vasco.nun@91.110.154.119) (Ping timeout: 240 seconds)
[21:25:45] *** Quits: arch-angel (~quassel@user/arch-angel) (Quit: Sayonara!)
[21:26:19] *** Joins: arch-angel (~quassel@user/arch-angel)
[21:31:45] <mrus> does anyone here know of a good alternative to vim-visual-multi that's *more like* Sublime's multi-cursor editing? Been struggling to get vim-visual-multi working for a while now, especially with VISUAL selections.
[21:39:40] *** Quits: cbus (~something@user/cbus) (Quit: reboot)
[21:44:05] *** Quits: angelacrust (~angelacru@182.68.208.211) (Quit: Client closed)
[21:46:34] <han-`> when I do something like `vimgrep asdf **/*` neovim starts hanging after I type ** and I have to ctrl-c
[21:46:45] <han-`> any suggestions where to poke around to resolve?
[21:47:05] <han-`> that's :vimgrep btw
[21:51:05] <gpanders> are you running it from your home directory or something?
[21:51:27] <clason[m]> doesn't happen for me
[21:51:36] <clason[m]> so check with `nvim --clean`
[21:52:05] <gpanders> doesn't happen for me either
[21:52:08] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:52:09] <clason[m]> (it shouldn't do _anything_ until you type the final `*` and `<cr>`)
[21:52:16] <gpanders> yea
[21:53:11] <jaawerth[m]> han-: this is a shot in the dark but maybe check whether*is in your setting for'wildchar'`
[21:53:59] <jaawerth[m]>  * han-`:  this is a shot in the dark but maybe check whether `*`is in your setting for `'wildchar'`
[21:54:11] <clason[m]> but even that should not hang for a long time...
[21:54:11] <jaawerth[m]> ok that tilde just breaks matrix apparently lol
[21:54:22] <clason[m]> (unless... you are on Windows?)
[21:54:23] <han-`> gpanders from a project directory
[21:54:31] <jaawerth[m]> yeah but it's the only thing I can think of that would cause.. something to happen on its own
[21:54:41] <han-`> jaawerth[m] will do
[21:55:07] <han-`> it is doing something, because there is autocompletion happening.
[21:55:11] <clason[m]> if it's `wildchar` in action, you should be seeing `**....` (dots)
[21:55:30] <jaawerth[m]> and if you have a wacky subtree (such as, oh, a big js/node project full of tiny filese and folders in node_modules), stranger things could happen than the expansion blowing up
[21:56:01] <clason[m]> (so if anything, it's `/` as `wildchar`)
[21:56:05] <han-`> this is in a web front-end
[21:56:10] <han-`> so highly possible
[21:56:17] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:56:17] <clason[m]> what web front-end
[21:56:24] <han-`> in-house
[21:56:33] <han-`> node and react
[21:56:34] <clason[m]> Neovim does not have a web front-end
[21:56:44] <jaawerth[m]> they mean the project folder
[21:56:48] <clason[m]> oh, you mean the project
[21:56:48] <han-`> oh I meant the project I'm in, yeah
[21:56:49] <clason[m]> sorry.
[21:57:05] <clason[m]> that makes more sense
[21:57:33] <han-`> ok maybe a better question, is there a way to fuzzy find into the quicklist
[21:57:46] *** Joins: cotko (~cotko@155.pool85-49-78.dynamic.orange.es)
[21:57:49] <han-`> or load telescope results into a quicklist. I might just be doing the wrong thing
[21:58:33] <han-`> quicklist/quickfix
[21:58:49] <basado[m]> fzf and telescope can do it
[21:59:02] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5)
[21:59:10] *** Quits: cotko (~cotko@155.pool85-49-78.dynamic.orange.es) (Client Quit)
[21:59:11] <clason[m]> for telescope, `<c-q>` will do it
[21:59:41] <han-`> oh wow that is so nice and way faster. thank you
[22:00:50] <clason[m]> yeah, for something of that size, you want an external tool, like fzf or telescope (with fzf-native)
[22:02:02] *** Joins: cbus (~something@user/cbus)
[22:02:04] <jaawerth[m]> I love that mapping
[22:04:54] <clason[m]> it's well-hidden 
[22:05:34] <clason[m]> essential telescope config:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/0ad645e604a9b3c32b22189c3d5703534c1d8a6a)
[22:08:04] *** Joins: va5c0 (~vasco.nun@91.110.154.119)
[22:11:02] *** Joins: Guest88 (~textual@85.249.167.96)
[22:11:49] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:13:12] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[22:13:57] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[22:17:41] *** Quits: cbus (~something@user/cbus) (Quit: reboot)
[22:18:08] *** Quits: va5c0 (~vasco.nun@91.110.154.119) (Ping timeout: 272 seconds)
[22:19:01] *** Joins: cbus (~something@user/cbus)
[22:22:12] <han-`> I was fuzzy finding, making changes, then fuzzy finding again for the next file(smacks forehead) - if only there was some way to quickly list out the files to fix...
[22:23:16] *** Quits: Guest88 (~textual@85.249.167.96) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:23:30] <daniel_ntk[m]> hi, does anyone here have experience with ToggleTerm, the plugin?
[22:23:46] *** Parts: jklfds (~jklfds@user/jklfds) (WeeChat 3.4)
[22:27:11] <han-`> clason[m]: I'm not sure I understand those mappings
[22:28:17] <clason[m]> the first just dismisses telescope on `<esc>` (instead of first leaving insert mode)
[22:28:33] <han-`> oh instead of pressing esc twice
[22:28:41] <clason[m]> the second shows a nice help window with all possible actions for the current finder
[22:28:51] <clason[m]> (like the which-key plugin, apparently)
[22:30:35] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[22:31:00] *** Joins: crashrep (~crashrep@user/crashrep)
[22:31:03] <gpanders> `<C-/>` also runs the `which_key` action by default
[22:31:17] *** Joins: va5c0 (~vasco.nun@91.110.154.119)
[22:35:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[22:35:39] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:37:45] *** Quits: veesh (~veesh@5.28.147.93) (Ping timeout: 256 seconds)
[22:37:46] *** Quits: SirJitsu (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 272 seconds)
[22:37:54] *** Quits: va5c0 (~vasco.nun@91.110.154.119) (Ping timeout: 252 seconds)
[22:37:57] *** Quits: cbus (~something@user/cbus) (Quit: reboot)
[22:38:12] *** Quits: SirJitsu1 (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 240 seconds)
[22:39:02] *** Joins: cbus (~something@user/cbus)
[22:40:15] *** Joins: angelacrust (~angelacru@182.68.208.211)
[22:41:19] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[22:43:06] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[22:43:55] *** Joins: mi6x3m (~mi6x3m@user/mi6x3m)
[22:44:42] *** Joins: Betal (~Betal@user/betal)
[22:45:09] <mi6x3m> bros, can someone tell me why new_thread here caues neovim to exit with an error?
[22:45:10] <mi6x3m> https://pastebin.com/BnPQA2KL
[22:48:22] <ii14[m]> not supported yet afaik
[22:49:12] <mi6x3m> what other way is there to start a thread?
[22:49:18] <mi6x3m> and let it post to the GUI loop
[22:50:17] <ii14[m]> run it as a separate process
[22:50:45] *** Joins: veesh (~veesh@89.237.109.60)
[22:50:49] <ii14[m]> assuming you actually need multithreading
[22:51:38] <mi6x3m> i do think so yes, are there vim.loop tools for forking?
[22:52:55] *** Joins: Guest88 (~textual@85.249.167.96)
[22:53:07] *** Joins: _The_ether_ (~hostname@user/The-ether/x-4348069)
[22:53:25] <angelacrust> Hi, so is there a way to have the same key to run two different kinds of operations based on conditions satisfied?
[22:53:25] <angelacrust> I have mapped <F7> to run the g++ compiler, but I also use the gcc compiler at times.
[22:53:28] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[22:53:59] *** Quits: angelacrust (~angelacru@182.68.208.211) (Quit: Client closed)
[22:54:06] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[22:54:18] *** Joins: angelacrust (~angelacru@182.68.208.211)
[22:55:38] <mi6x3m> angelacrust, checkout nnoremap <expr> <key> ....
[22:55:49] <angelacrust> hmm
[22:56:00] <angelacrust> thanks I'll check that out
[22:56:17] <mi6x3m> the magic part <expr> allows you to execute something
[22:57:25] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[22:57:32] <ii14[m]> yes, vim.loop.spawn
[22:57:36] <ii14[m]> https://github.com/luvit/luv/blob/master/docs.md
[22:57:45] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[22:57:56] *** Quits: Guest88 (~textual@85.249.167.96) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:57:57] <mi6x3m> thanks ii14[m] 
[22:59:09] <angelacrust> well...im not sure how to implement that
[22:59:12] *** Joins: Guest88 (~textual@85.249.167.96)
[23:01:22] <p00f> !h map-expression
[23:01:28] <nvim-bot[m]> No help found for:
[23:01:28] <nvim-bot[m]> * `map-expression`
[23:01:35] <p00f> !h :map-expression
[23:01:39] <p00f> ...
[23:01:49] <max397[m]> !h map-<expr>
[23:01:53] <nvim-bot[m]> * [`:map-expression`](https://neovim.io/doc/user/map.html#:map-expression) in *map.txt*
[23:02:02] <nvim-bot[m]> No help found for:
[23:02:02] <nvim-bot[m]> * `map-<expr>`
[23:02:14] <p00f> lmao
[23:02:18] <angelacrust> rip
[23:02:23] <max397[m]> that's what it's called in telescope :(
[23:02:31] *** Quits: mi6x3m (~mi6x3m@user/mi6x3m) (Quit: Leaving)
[23:02:48] * max397[m] uploaded an image: (261KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/nNAJifhcCjUgXTuxjOLMyDMc/Screenshot%202022-02-15%20at%2020.32.37.png >
[23:03:19] <angelacrust> I've read the docs but I still don't understand what it means
[23:04:11] *** Joins: SirJitsu (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net)
[23:04:13] <angelacrust> Replacing `g++` with `gcc` -- is it even possible?
[23:04:22] <p00f> yes
[23:04:30] <angelacrust> with the same key?
[23:05:01] <p00f> `nnoremap <expr> my-key condition1 ? gcc : g++`
[23:05:19] <p00f> s/condition1/condition-in-which-to-use-gcc/
[23:05:20] *** Quits: Guest88 (~textual@85.249.167.96) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:05:45] <angelacrust> what does the second line mean?
[23:05:53] <gpanders> p00f: put quotes around `gcc` and `g++`
[23:06:17] <gpanders> angelacrust: basically an <expr> mapping returns a string which is what gets used as the actual mapping that is executed
[23:06:19] <p00f> angelacrust: there's only one line
[23:06:22] <p00f> oh you use irc
[23:06:26] <p00f> ignore the first one then
[23:06:34] <gpanders> which means you can evaluate some condition and return different strings based on the condition
[23:06:38] <angelacrust> ohh
[23:06:55] <max397[m]> couldn't you do that with keymap.set now?
[23:07:19] <angelacrust> Never used that thing before
[23:07:22] <max397[m]>                    vim.keymap.set('i', '<Tab>', function()
[23:07:22] <max397[m]>                      return vim.fn.pumvisible() == 1 and "<C-n>" or "<Tab>"
[23:07:22] <max397[m]>                    end, { expr = true })
[23:07:55] <gpanders> for example `nnoremap <expr> <F5> line('.') % 2 == 0 ? 'dw' : 'db'` will delete forward on even numbered lines and backward on odd numbered lines
[23:07:56] <p00f> max397[m]: they use neovim 0.4.3
[23:07:56] <max397[m]> this is what it would be in lua (if you know lua)
[23:07:56] <max397[m]> condition and .. or ...
[23:08:06] <gpanders> that's of course a silly example but hopefully it's illustrative
[23:08:06] <max397[m]> p00f: oh
[23:08:22] <angelacrust> wow
[23:08:34] <angelacrust> gpanders I understand it now
[23:08:34] <max397[m]> I never used that
[23:08:34] <max397[m]> when I started using neovim there already was 0.5 nightly and because people said it's amazing I never used 0.4
[23:08:44] <angelacrust> I'm on 0.6.1 now
[23:08:47] <gpanders> angelacrust: for doing anything non-trivial though you likely want to use a function. That function can itself return a string
[23:08:54] <gpanders> `nnoremap <expr> <F5> MyCoolFunction()`
[23:09:21] <angelacrust> Alright, I'll try to implement that mapping
[23:09:28] <gpanders> !help :map-expression
[23:09:34] <nvim-bot[m]> * [`:map-expression`](https://neovim.io/doc/user/map.html#:map-expression) in *map.txt*
[23:09:38] <gpanders> lots of info in the docs too
[23:10:40] <angelacrust> Yeah, so I believe I've to match the filetype of the file. If it's '.c' then use gcc, otherwise use g++
[23:10:52] <angelacrust> Right?
[23:11:18] <p00f> ye
[23:12:57] <gpanders> yep
[23:13:02] <gpanders> although there is an easier way to do this
[23:13:08] <gpanders> use the `'makeprg'` option
[23:13:16] <gpanders> and set it in the ftplugin file
[23:13:46] <gpanders> in `~/.config/nvim/after/ftplugin/c.vim` put `set makeprg=gcc\ whatever`, and similarly for C++ (use `~/.config/nvim/after/ftplugin/cpp.vim`)
[23:13:56] <gpanders> then you can just run `:make`
[23:15:46] <angelacrust> Yeah, can I also use compilation flags with that option?
[23:16:29] <angelacrust> https://bpa.st/MGLQ this is the current mapping I use for g++
[23:16:31] <gpanders> yep
[23:16:44] <gpanders> you an either set them in the `'makeprg'` option directly if you want to make them "permanent"
[23:16:48] <gpanders> you can also pass options to `:make` itself
[23:16:56] <gpanders> e.g. `:make -g -O2 -o tmp`
[23:17:06] <angelacrust> That seems like a better alternative tbh
[23:18:15] <gpanders> the only drawback to the builtin `:make` command is that it is synchronous, so if your project takes a while to build then you won't be able to use your editor while it's building
[23:18:16] <gpanders> not ideal
[23:18:26] <gpanders> https://github.com/tpope/vim-dispatch is the solution to that
[23:18:28] <angelacrust> oh
[23:18:57] <gpanders> if you use vim-dispatch then the command simply becomes `:Make` instead (capital `M`)
[23:19:09] <p00f> ^solution to that and having to set makeprg
[23:20:04] <angelacrust> Okay, I'll try to do that
[23:20:21] *** Joins: LouisdeWardt[m] (~louismatr@2001:470:69fc:105::1:c052)
[23:20:45] <SeanDewar[m]> also there's a very nice mapping to :Make with m<CR> in normal mode
[23:21:32] <angelacrust> gotcha
[23:22:17] *** Joins: va5c0 (~vasco.nun@91.110.154.119)
[23:23:01] <p00f> SeanDewar[m]: omg
[23:23:05] *** Joins: Betal (~Betal@user/betal)
[23:23:23] *** Joins: Skaarj (~quassel@p5ddf0616.dip0.t-ipconnect.de)
[23:23:39] <gpanders> there's also `m<Space>`
[23:23:40] <SeanDewar[m]> its life changing
[23:24:00] <gpanders> and `<CR> for :Dispatch
[23:24:27] <p00f> omg (2)
[23:25:01] <gpanders> omg<sup>omg</sup>
[23:25:23] <SeanDewar[m]> <h1>omg</h1>
[23:25:30] <angelacrust> I think it's going to take at least a couple of hours to set this up
[23:26:01] <gpanders> hm it shouldn't
[23:26:10] <gpanders> if you set makeprg in the ftplugin files like I suggested, that should only take a few seconds
[23:26:30] <gpanders> you don't *have* to use vim-dispatch, but if you do just install it and start using `:Make` or the builtin `m<CR>` mapping
[23:26:31] <gpanders> done
[23:26:42] <gpanders> you can dive in to the more advanced features at a later time if you want to
[23:26:56] <angelacrust> yep
[23:27:00] <angelacrust> that's what I will do
[23:27:41] *** Joins: harryy (~harry@user/harryy)
[23:29:06] *** Joins: ublx (~ublx@user/ublx)
[23:29:59] <angelacrust> https://github.com/neomake/neomake
[23:30:00] <angelacrust> There is this plugin also...
[23:30:47] <gpanders> Yes
[23:30:47] <gpanders> I have used both
[23:30:55] <gpanders> they cover slightly different use cases I think
[23:31:06] <angelacrust> which one would you suggest?
[23:31:09] <gpanders> Neomake is more in the spirit of ALE, it runs linters in the background automatically for you
[23:31:17] <gpanders> I would suggest vim-dispatch
[23:31:25] <gpanders> it has less configuration and is much simpler
[23:31:47] <angelacrust> okay
[23:32:09] <angelacrust> I have to manually create the ftplugin directory since there's no such directory rn?
[23:32:26] <gpanders> yes
[23:32:44] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[23:33:30] <angelacrust> set makeprg=gcc in the c.vim file
[23:34:33] <gpanders> put all the options you want
[23:34:42] <gpanders> and `%` is replaced with filename of the current buffer
[23:34:49] <gpanders> so you probably want at the very least `set makeprg=gcc\ %`
[23:35:00] <gpanders> but you could also add `-Wall` and friends to that
[23:35:30] <skdegm319[m]> <syphar> "If I'm not mistaken its kanagawa..." <- Thanks. I thought there was a .vim file that I could copy and paste 
[23:36:17] <angelacrust> Okay
[23:36:42] <gpanders> angelacrust: btw this will set makeprg for *all* C files that you edit in Neovim. If you are working on a C source file in a project that uses a Makefile or some other build system, then you would probably want `'makeprg'` set to run that. I don't mean to overwhelm you with information, but it's just something to keep in mind
[23:37:07] <angelacrust> I appreciate that
[23:38:54] <angelacrust> I'm getting this very weird prompt at startup https://bpa.st/3LDQ
[23:39:46] *** Joins: Betal (~Betal@user/betal)
[23:43:59] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:1b5d:374a:816c:e903)
[23:46:48] *** Quits: va5c0 (~vasco.nun@91.110.154.119) (Ping timeout: 272 seconds)
[23:46:59] <gpanders> do you have a line in your init.vim that is just `map` ?
[23:47:22] <gpanders> or that has a double quote character? maybe `map n "something"` ?
[23:47:24] <angelacrust> oh, there's a nnoremap
[23:47:48] <gpanders> (remember that in Vimscript a double quote is the comment character, so a quote in the wrong place can be a very confusing source of bugs)
[23:48:29] <angelacrust> Got it
[23:49:11] <angelacrust> Am I supposed to use `\` to escape diff params in the the makeprg file? Sorry, I've never worked `:make` before.
[23:51:30] *** Joins: Guest88 (~textual@85.249.167.96)
[23:53:31] *** Quits: pepper (~pepper@user/pepper) (Read error: Connection reset by peer)
[23:53:48] *** Joins: va5c0 (~vasco.nun@91.110.154.119)
[23:54:44] <gpanders> that's probably it
[23:56:23] *** Quits: Guest88 (~textual@85.249.167.96) (Client Quit)
[23:56:36] <gpanders> if you use `:set makeprg=whatever` you have to escape spaces
[23:56:44] <gpanders> that is true of setting *any* option with `:set`, not just makeprg
[23:56:51] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:a506:183a:7675:98e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:57:01] <gpanders> so `set makeprg=gcc -Wall` is wrong, you must use `set makeprg=gcc\ -Wall`
[23:57:43] <angelacrust> how about using `let &makeprg="whatever"`
[23:57:51] *** Joins: pepper (~pepper@user/pepper)
[23:59:35] *** Joins: sliss (~sliss@109.136.165.60)
