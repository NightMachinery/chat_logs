[00:04:37] *** Joins: geeknix (~pi@2001:e68:5432:153f:a117:e5bd:94ba:3d25)
[00:10:31] *** Joins: jellie (~luv_panda@user/jellie)
[00:11:15] *** Joins: thad_the_man (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net)
[00:11:53] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 246 seconds)
[00:12:19] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[00:13:00] *** MarcoAlvarez[m] is now known as Surak
[00:13:33] *** Quits: Surak (~surakgnom@2001:470:69fc:105::2dc) (Quit: Reconnecting)
[00:13:47] *** Joins: Surak (~surakgnom@2001:470:69fc:105::2dc)
[00:15:23] *** Quits: dld (~davidlowr@2620:6e:6000:2900:38c1:e5a4:b065:9eb3) (Ping timeout: 260 seconds)
[00:15:32] *** Joins: V-ille (~ville@85-131-18-101.bb.dnainternet.fi)
[00:15:45] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[00:16:43] *** Joins: rgrinberg (~textual@177.248.158.166)
[00:18:55] *** Joins: rawley (~rawley@142.99.241.242)
[00:18:57] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[00:19:09] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[00:22:29] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:651d:53eb:593e:72b6)
[00:22:29] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:651d:53eb:593e:72b6) (Changing host)
[00:22:29] *** Joins: skapata (~Skapata@user/skapata)
[00:25:40] *** Joins: proller (~p@2a02:6b8:b081:1214::1:2d)
[00:27:57] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[00:28:25] *** Joins: Viewday1152 (~Viewday@user/viewday)
[00:29:15] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[00:29:48] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[00:29:58] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:29:58] *** Viewday1152 is now known as Viewday115
[00:31:43] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Client Quit)
[00:32:53] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:ac3f:bc36:fa50:982) (Ping timeout: 260 seconds)
[00:32:53] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 260 seconds)
[00:34:17] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 246 seconds)
[00:34:20] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Ping timeout: 260 seconds)
[00:34:20] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:ac3f:bc36:fa50:982)
[00:36:59] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[00:37:00] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[00:37:20] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:41:24] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Ping timeout: 240 seconds)
[00:43:13] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 248 seconds)
[00:43:17] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:d52e:866a:6f3a:60a1) (Ping timeout: 256 seconds)
[00:43:33] *** Joins: urdh_ (~urdh@user/urdh)
[00:43:46] *** Quits: urdh (~urdh@user/urdh) (Ping timeout: 260 seconds)
[00:43:46] *** urdh_ is now known as urdh
[00:47:02] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:ac3f:bc36:fa50:982) (Quit: Textual IRC Client: www.textualapp.com)
[00:56:26] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[00:59:08] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 260 seconds)
[01:00:44] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.4.1)
[01:01:43] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Changing host)
[01:01:43] *** Joins: yano (~yano@ircpuzzles///////////somanyslashes)
[01:01:50] *** Quits: yano (~yano@ircpuzzles///////////somanyslashes) (Changing host)
[01:01:50] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[01:02:18] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a660068ce34fc685655fd.ipv6.abo.wanadoo.fr)
[01:03:02] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Remote host closed the connection)
[01:03:23] *** Quits: makeyavelly (~Thunderbi@88.135.63.38) (Quit: makeyavelly)
[01:03:31] *** Quits: nvmd (~weechat@user/nvmd) (Quit: WeeChat 3.5)
[01:04:00] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[01:05:12] *** Joins: Rayke (rayke@user/rayke)
[01:09:59] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:10:08] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:11:22] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[01:14:27] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 256 seconds)
[01:15:11] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-170-9be0cae1 - https://znc.in)
[01:17:48] *** Quits: Posterdati (~posterdat@user/Posterdati) (Ping timeout: 260 seconds)
[01:18:59] *** Joins: Telvana (~capo@user/telvana)
[01:20:15] *** Quits: Telvana (~capo@user/telvana) (Remote host closed the connection)
[01:25:32] *** Quits: Tangent-Man (~Tang3nt-M@mutantalien.plus.com) (Ping timeout: 272 seconds)
[01:26:24] *** Joins: Telvana (~capo@user/telvana)
[01:26:31] *** Joins: karakedi (~eAC53C340@user/karakedi)
[01:27:09] *** Joins: eliasy (~user@2804:14c:4e6:85ba:8e12:ccb6:d537:9fe6)
[01:30:31] *** Joins: Posterdati (~posterdat@user/Posterdati)
[01:32:33] *** Joins: ivii (~ivan@user/ivii)
[01:32:54] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 268 seconds)
[01:33:53] *** Quits: magla (~gelignite@d5365b83.access.ecotel.net) (Quit: Stay safe!)
[01:43:16] *** Quits: rawley (~rawley@142.99.241.242) (Remote host closed the connection)
[01:44:57] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[01:47:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[01:50:17] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:52:32] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:53:25] <AliceMeows> https://godbolt.org/z/vnhP86bc7 why is this broken?
[01:54:31] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:56:38] *** Joins: abode (~abode@94.205.205.22)
[01:56:38] *** Joins: Brainium (~brainium@user/brainium)
[01:57:32] *** Quits: ko (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[01:57:56] <Alipha> AliceMeows: you can't return tmp because dynamic allocation cannot escape a constexpr context
[01:58:11] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Ping timeout: 268 seconds)
[01:58:51] *** Joins: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it)
[02:00:26] *** Joins: vin (~vin@user/crash)
[02:01:04] <vin> Hi, I am trying to compile c++ code using gcc because I wanted to use a custom glibc (I want __memmove_chk_avx512_no_vzeroupper) however I get an underfined reference error. I have tested this with c code and it works fine. Here is the command and ouput https://pastebin.com/raw/EgtV6Xtb
[02:01:28] <AliceMeows> Alipha: https://godbolt.org/z/EbqTjcrvh this works with gcc and msvc but not with clang
[02:03:00] <AliceMeows> vin: try asking in c++-general
[02:05:33] *** Quits: abode (~abode@94.205.205.22) (Remote host closed the connection)
[02:06:44] *** Joins: abode (~abode@94.205.205.22)
[02:09:24] <Alipha> AliceMeows: i'm not sure. PJBoy, you're the constexpr expert ;-)
[02:11:17] <PJBoy> clang hasn't implemented constexpr std::string
[02:12:07] *** Joins: vicfred (~vicfred@user/vicfred)
[02:12:20] <AliceMeows> https://godbolt.org/z/od1f3Wq15 this still breaks with clang
[02:13:10] <PJBoy> yeah I assume you need compiler support for constexpr string
[02:13:15] *** Quits: jsbach (~jsbach@2a01:c23:6018:f800:6f6c:d942:12b0:84da) (Ping timeout: 260 seconds)
[02:14:10] <AliceMeows> From what it seems you do because clang fails with both libstdc++ and libc++
[02:16:34] <AliceMeows> https://godbolt.org/z/361abGshb yet this works with clang but fails with gcc and msvc
[02:16:59] <AliceMeows> returning tmp however fails to compile with all of them
[02:17:20] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[02:19:04] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[02:19:17] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[02:19:51] <AliceMeows> At this point I have no idea what is legal and what isn't
[02:20:28] <ville> c. with classes.
[02:20:33] *** Quits: abode (~abode@94.205.205.22) (Read error: Connection reset by peer)
[02:20:51] *** Joins: abode (~abode@2a00:f28:4c1:349d:8230:49ff:fe6e:36b5)
[02:21:10] <AliceMeows> I tend to say that C++ is still C with classes
[02:22:43] <Eelis> there's no published C++ standard yet that has constexpr strings, right? so it's unsurprising that if it works at all anywhere, you can't rely on it
[02:23:06] <AliceMeows> I was mostly curious what can and cannot be done
[02:23:07] <PJBoy> clang hasn't fully implemented consteval either
[02:23:40] <PJBoy> Eelis, constexpr string is C++20
[02:24:00] <Eelis> oh wow
[02:24:10] <AliceMeows> Yes, C++20 support is mostly shit
[02:24:26] <PJBoy> also constexpr vector and allocator, and std::format
[02:24:48] <AliceMeows> Currently std::format is only supported by msvc
[02:24:54] <Eelis> geordi -c template<string>void f();
[02:24:54] <geordi> error: 'string' is not a valid type for a template non-type parameter because it is not structural
[02:24:58] <Eelis> hmm
[02:25:20] <AliceMeows> I couldn't get any compiler to accept that kind of code so I wasn't sure if its even legal or not
[02:27:01] *** Joins: abode_ (~abode@2a00:f28:4c1:ac2:8230:49ff:fe6e:36b5)
[02:29:21] *** Quits: abode (~abode@2a00:f28:4c1:349d:8230:49ff:fe6e:36b5) (Ping timeout: 248 seconds)
[02:36:17] *** Quits: jplejacq (~jplejacq@152.42.120.4) (Ping timeout: 248 seconds)
[02:37:53] *** Quits: ivii (~ivan@user/ivii) (Read error: Connection reset by peer)
[02:43:45] *** Joins: Quackers (~Quackers@2001:1284:f013:f6db:7088:238a:4bbe:4068)
[02:44:35] *** Joins: badone (~badone@209.132.189.152)
[02:44:54] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:44:57] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[02:45:04] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[02:45:04] *** ChanServ sets mode: +v npaperbot
[02:45:10] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[02:45:31] *** AbleBacon_ is now known as AbleBacon
[02:47:21] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:48:08] *** Quits: C-Man (~C-Man@static.88-198-34-209.clients.your-server.de) (Ping timeout: 268 seconds)
[02:48:34] *** Quits: Quackers (~Quackers@2001:1284:f013:f6db:7088:238a:4bbe:4068) (Quit: Leaving)
[02:50:37] *** Quits: bebyx (~Thunderbi@user/bebyx) (Quit: bebyx)
[02:52:14] *** Joins: rgrinberg (~textual@177.248.158.166)
[02:57:21] *** Joins: Bracco (~Bracco@37.161.35.131)
[02:57:22] *** Quits: zaratustra (~zaratustr@idlerpg/player/zaratustra) (Quit: 93,93/93!)
[02:58:04] <Bracco> j
[02:59:02] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:59:17] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:00:37] *** Joins: jplejacq (~jplejacq@68.71.169.160)
[03:01:47] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:03:52] *** Quits: Bracco (~Bracco@37.161.35.131) (Quit: Leaving)
[03:06:35] <Alipha> no, this is c++
[03:10:47] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[03:13:25] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Client Quit)
[03:14:48] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[03:17:25] *** Quits: Guest69 (~Guest69@ip68-105-113-105.sd.sd.cox.net) (Ping timeout: 256 seconds)
[03:18:23] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[03:21:41] *** Joins: unixpro1970 (~unixpro19@c-67-168-188-36.hsd1.wa.comcast.net)
[03:21:42] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[03:22:45] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[03:23:04] *** Joins: jkl (~jkl@user/jkl)
[03:23:55] *** Quits: henbruas (~henbruas@ti0003a400-6569.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[03:24:33] *** Joins: henbruas (~henbruas@ti0003a400-6569.bb.online.no)
[03:27:59] *** Joins: Quackers (~Quackers4@2001:1284:f013:f6db:7088:238a:4bbe:4068)
[03:28:09] <AliceMeows> https://godbolt.org/z/vvEGqdfYf guess msvc is buggy
[03:28:24] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:28:49] <AliceMeows> operator T() is the only reliable way to get source_location to extract the type but its internal code is buggy and return this junk
[03:29:01] <AliceMeows> returns*
[03:30:07] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 256 seconds)
[03:30:12] <Eelis> EBADTESTCASE: testcase fails to describe the problem.
[03:31:45] *** Quits: Quackers (~Quackers4@2001:1284:f013:f6db:7088:238a:4bbe:4068) (Quit: Leaving)
[03:31:55] <AliceMeows> Well the idea is to get operator T() to print out its name to steal the type but instead under msvc you get junk with std::string as it prints "allocator<char> > >"
[03:33:08] <Eelis> i'm not sure there are many msvc developers here. might be more fruitful to file a ticket in the msvc bug tracker
[03:33:48] *** Joins: pizdets (~pizdets@183.182.111.118)
[03:34:09] *** Quits: pizdets_ (~pizdets@183.182.115.90) (Ping timeout: 265 seconds)
[03:40:49] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 248 seconds)
[03:42:23] <AliceMeows> Eelis: here is a proper testcase https://godbolt.org/z/hq6d81sEn
[03:44:55] *** Quits: b_jonas (~x@catv-176-63-4-13.catv.fixed.vodafone.hu) (Quit: leaving)
[03:46:33] *** Joins: seninha (~seninha@user/seninha)
[03:47:59] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[03:48:18] *** Joins: immibis (~hexchat@62.156.144.218)
[03:50:35] *** Quits: teepee (~teepee@openscad/teepee) (Ping timeout: 240 seconds)
[03:52:46] <Eelis> AliceMeows: nah, it could be considerably shorter, like this: https://godbolt.org/z/e6Mjz19T4
[03:54:19] <Eelis> this testcase is less than half the size of yours, yet shows the same issue
[03:54:54] *** Quits: unixpro1970 (~unixpro19@c-67-168-188-36.hsd1.wa.comcast.net) (Remote host closed the connection)
[03:55:16] *** Joins: unixpro1970 (~unixpro19@c-67-168-188-36.hsd1.wa.comcast.net)
[03:55:21] *** Parts: AliceMeows (~AliceMeow@user/alicemeows) ()
[03:55:22] *** Joins: teepee (~teepee@openscad/teepee)
[03:55:30] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[03:55:49] *** Joins: cube1 (~cube1@89-160-183-39.du.xdsl.is)
[03:56:13] <AliceMeows> How interesting, in yours it prints "allocator<char> >" while in mine it prints "allocator<char> > >"
[03:56:35] <Eelis> to show that something is fucked up, any kind of bracket imbalance suffices :)
[03:57:02] <Eelis> whether it be 2 or 3 brackets
[03:57:15] <AliceMeows> Yes but I do wonder how it could actually differ
[03:57:23] <PJBoy> probably owed to the operator T() being a template in the original version
[03:57:32] <AliceMeows> Perhaps
[04:00:07] *** Quits: cube1 (~cube1@89-160-183-39.du.xdsl.is) (Client Quit)
[04:07:05] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[04:13:21] *** Joins: chenqisu12 (~chenqisu1@183.217.202.44)
[04:13:47] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[04:16:49] *** Joins: vitimiti_ (~Celtor@2a02:c7e:b41:3500:6e96:16d7:589e:e993)
[04:17:47] *** Quits: vitimiti (~Celtor@2a02:c7e:b41:3500:6e96:16d7:589e:e993) (Read error: Connection reset by peer)
[04:18:02] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Remote host closed the connection)
[04:19:45] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[04:26:04] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4.1)
[04:29:15] *** seifeslimene_ is now known as seifeslimene
[04:31:03] *** Joins: y0m0n (~NA@5-12-91-184.residential.rdsnet.ro)
[04:31:28] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 260 seconds)
[04:31:53] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:35:47] *** Quits: W_ (~W@90.250.59.88) (Ping timeout: 246 seconds)
[04:36:07] *** Joins: sam113102 (~sam@modemcable229.128-202-24.mc.videotron.ca)
[04:36:38] *** Joins: RazielZ (~Raziel@user/raziel)
[04:37:29] *** Quits: Spirit532 (~Spirit532@user/Spirit532) (Killed (NickServ (GHOST command used by Spirit5322)))
[04:37:29] *** Joins: raekye3 (~raekye@creatifcubed.com)
[04:37:30] *** Joins: Spirit532 (~Spirit532@user/Spirit532)
[04:37:33] *** Quits: aosync (~aws@mx1.aosync.me) (Ping timeout: 256 seconds)
[04:37:33] *** Quits: Dijky (~Dijky@user/dijky) (Ping timeout: 256 seconds)
[04:37:48] *** Joins: ralu1 (~ralu@static.211.245.203.116.clients.your-server.de)
[04:37:54] *** Joins: jancoow9 (~jancoow@user/jancoow)
[04:38:07] *** Quits: Perry (~perry@coffee-break.at) (Ping timeout: 256 seconds)
[04:38:08] *** Quits: kfv (~kfv@mail.kfv.io) (Read error: Connection reset by peer)
[04:38:20] *** Joins: kfv (~kfv@mail.kfv.io)
[04:38:27] *** Joins: Dijky (~Dijky@user/dijky)
[04:38:32] *** Quits: blinky42 (~quassel@user/blinky42) (Read error: Connection reset by peer)
[04:38:41] *** Quits: gdarko (~me@dg.mk) (Ping timeout: 256 seconds)
[04:38:41] *** Quits: sam113101 (~sam@modemcable229.128-202-24.mc.videotron.ca) (Ping timeout: 256 seconds)
[04:38:42] *** Joins: Perry (~perry@coffee-break.at)
[04:38:43] *** sam113102 is now known as sam113101
[04:38:54] *** Quits: mattgirv (quassel@apps.fossgalaxy.com) (Quit: No Ping reply in 180 seconds.)
[04:39:05] *** Joins: mattgirv (quassel@apps.fossgalaxy.com)
[04:39:15] *** Quits: bdt (~bdt@155.51-174-24.customer.lyse.net) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: Munnu (~timo@81-197-122-250.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: raekye (~raekye@creatifcubed.com) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: scruffyfurn (scruffyfur@turbous.xshellz.com) (Ping timeout: 256 seconds)
[04:39:15] *** ralu1 is now known as ralu
[04:39:15] *** raekye3 is now known as raekye
[04:39:15] *** jancoow9 is now known as jancoow
[04:39:19] *** Quits: Cyp_ (~cyp@213.237.84.236) (Read error: Connection reset by peer)
[04:39:41] *** Joins: blinky42 (~quassel@jabber.blinkylight.net)
[04:39:41] *** Quits: blinky42 (~quassel@jabber.blinkylight.net) (Changing host)
[04:39:41] *** Joins: blinky42 (~quassel@user/blinky42)
[04:39:43] *** Joins: Cyp_ (~cyp@213.237.84.236)
[04:39:49] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 256 seconds)
[04:40:24] *** Joins: gdarko (~me@dg.mk)
[04:40:59] *** Joins: bdt (~bdt@2a01:799:39f:9d00:e65f:1ff:fe08:8a88)
[04:41:24] *** Joins: rgrinberg (~textual@177.248.158.166)
[04:43:13] *** Quits: ville (~ville@user/ville) (Ping timeout: 256 seconds)
[04:43:13] *** Quits: Soliton (soliton@wesnoth/developer/soliton) (Ping timeout: 256 seconds)
[04:43:13] *** Quits: Aph3x-WL (~Aph3x@li616-175.members.linode.com) (Ping timeout: 256 seconds)
[04:43:13] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[04:43:37] *** Joins: ville (~ville@user/ville)
[04:43:46] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[04:43:47] *** Quits: sonic (~sonic@user/sonic) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: tayy (~tayy@ns502531.ip-142-4-214.net) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: lloda (~user@11-206-127-185.static.world-connect.ch) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: xisop (~xisop@bnull.net) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: mrec_ (~markus@user/mrec) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: Ekho (~Ekho@user/ekho) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: v4mp (~v4mp@user/v4mp) ()
[04:44:11] *** Joins: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090)
[04:44:16] *** Joins: scruffyfurn (scruffyfur@turbous.xshellz.com)
[04:44:21] *** Quits: obiwahn (~heini@user/obiwahn) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: cnsunyour (~sunyour@129.226.182.99) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: veverak (~veverak@89.102.98.161) (Ping timeout: 256 seconds)
[04:44:32] *** Joins: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[04:44:54] *** Joins: Soliton (soliton@wesnoth/developer/soliton)
[04:45:24] *** Joins: mrec (~markus@sundtek.de)
[04:45:25] *** Joins: tayy (~tayy@ns502531.ip-142-4-214.net)
[04:45:37] *** Joins: xisop (~xisop@bnull.net)
[04:45:45] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[04:45:55] *** Joins: veverak (~veverak@ip-89-102-98-161.net.upcbroadband.cz)
[04:46:00] *** Joins: cnsunyour (~sunyour@129.226.182.99)
[04:47:06] *** Joins: Ekho (~Ekho@user/ekho)
[04:47:44] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:52:13] *** Joins: Munnu (~timo@81-197-122-250.elisa-laajakaista.fi)
[04:56:57] *** Joins: obiwahn (~heini@user/obiwahn)
[04:57:14] *** Joins: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com)
[04:57:18] *** Joins: Aph3x-WL (~Aph3x@li616-175.members.linode.com)
[04:57:31] *** Joins: sonic (~sonic@user/sonic)
[04:57:49] *** Quits: seifeslimene (~seifeslim@197.2.10.72) (Quit: Konversation terminated!)
[05:02:10] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[05:02:12] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:04:58] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:05:52] *** Quits: sh00p (~z@89-253-71-70.customers.ownit.se) (Ping timeout: 260 seconds)
[05:11:22] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:17:56] *** Joins: seifeslimene (~seifeslim@197.2.10.72)
[05:18:13] *** Joins: rgrinberg (~textual@177.248.158.166)
[05:25:20] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[05:31:26] *** Quits: seifeslimene (~seifeslim@197.2.10.72) (Quit: Konversation terminated!)
[05:32:07] *** Joins: seifeslimene (~seifeslim@197.2.10.72)
[05:34:01] *** Joins: Viewday1156 (~Viewday@user/viewday)
[05:34:34] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[05:35:59] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 246 seconds)
[05:35:59] *** Viewday1156 is now known as Viewday115
[05:39:43] *** Quits: Yruama (~Yruama@2a01:cb15:8128:c100:6c61:6a53:9bf0:64ca) (Quit: Leaving)
[05:40:49] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[05:46:31] *** Quits: jplejacq (~jplejacq@68.71.169.160) (Ping timeout: 260 seconds)
[05:53:28] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Quit: Leaving.)
[06:03:27] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:08:42] <seifeslimene> What is C++ learning curve
[06:08:49] <seifeslimene> I want to learn all concepts of c++
[06:09:15] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[06:09:16] <SamuelMarks> hi
[06:09:41] <SamuelMarks> Are there any C/C++ libraries for constructing a C AST, modifying it, then emitting the C code? - libclang/LibTooling aren't equipped :(
[06:10:43] *** Quits: Spirit532 (~Spirit532@user/Spirit532) (Killed (NickServ (GHOST command used by Spirit5324)))
[06:10:44] *** Joins: Spirit532 (~Spirit532@user/Spirit532)
[06:11:45] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 248 seconds)
[06:12:58] *** Quits: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it) (Ping timeout: 260 seconds)
[06:16:44] *** Joins: Inline__ (~Inline@p200300cd470f5c00eeead6c89d51972a.dip0.t-ipconnect.de)
[06:19:00] *** Quits: Inline (~Inline@p200300cd47090700f6a7abc6bfc79784.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:20:12] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:20:49] <ncwbqcfe> !give SamuelMarks general
[06:20:50] <nolyc> SamuelMarks: #C++-general for algorithms, libraries, practices, projects, tools etc.
[06:23:20] <ncwbqcfe> seifeslimene: with a vertical asymptote
[06:23:59] <seifeslimene> :ncwbqcfe ?
[06:25:29] <ncwbqcfe> it approaches infinite as your life is reaching the end.
[06:25:46] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[06:25:52] *** Joins: b_jonas (~x@catv-176-63-3-240.catv.fixed.vodafone.hu)
[06:30:02] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Remote host closed the connection)
[06:30:26] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[06:32:46] <Alipha> seifeslimene: it'll take years to learn all the obscure parts of c++
[06:33:20] <seifeslimene> :Alipha wow this is scaring
[06:33:26] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[06:34:05] <SamuelMarks> Alipha - It's just C with classes, right?
[06:34:32] <Alipha> seifeslimene: c++ is THE most complex language that I know of
[06:35:23] *** Joins: zer0x (~zer0x@1.55.254.166)
[06:38:13] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a660068ce34fc685655fd.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[06:38:58] *** Joins: acidtonic_ (~acidtonic@162-17-146-153-static.hfc.comcastbusiness.net)
[06:39:23] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Ping timeout: 256 seconds)
[06:41:00] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[06:41:05] *** Quits: martiert (~martiert@ti0185q160-2775.bb.online.no) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: rouji (~rouji@x0.at) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: klys (~mdasoh@show.op8.us) (Ping timeout: 256 seconds)
[06:41:39] *** Quits: acidtonic (~acidtonic@162-17-146-153-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[06:41:39] *** Quits: Chaser (~Chaser@user/chaser) (Ping timeout: 256 seconds)
[06:41:39] *** Quits: malinus (~malinus@172.245.158.16) (Ping timeout: 256 seconds)
[06:42:56] *** Joins: martiert (~martiert@ti0185q160-2775.bb.online.no)
[06:42:58] *** Joins: klys (~mdasoh@show.op8.us)
[06:43:08] *** Joins: malinus (~malinus@172.245.158.16)
[06:43:50] <seifeslimene> :Alipha wow yes because most applications out there are already written in C++
[06:43:55] <seifeslimene> C++ is the goat
[06:44:47] <seifeslimene> Is there any roadmap for c++
[06:44:58] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[06:45:06] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[06:45:06] *** ChanServ sets mode: +v npaperbot
[06:45:09] <seifeslimene> like ones here https://roadmap.sh/
[06:45:24] <seifeslimene> but for c++ instead of frontend, backend..
[06:46:57] <Alipha> seifeslimene: you don't need to know every nook and cranny of c++ to be proficient in it. You can be decent in a couple months (for some definition of decent)
[06:47:09] *** Joins: aosync (~aws@mx1.aosync.me)
[06:47:35] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Ping timeout: 240 seconds)
[06:47:57] <Alipha> We really just recommend a good book
[06:48:15] <Alipha> !give seifeslimene books
[06:48:17] <nolyc> seifeslimene: A nice C++ book guide and list can be found at http://stackoverflow.com/q/388242/1090079
[06:50:33] <seifeslimene> :Alipha wow just what i'm looking for!
[06:50:35] <seifeslimene> :D
[06:51:14] <seifeslimene> I have my kindle I'm gonna purchase a kindle version of C++ Primer
[06:51:15] <seifeslimene> !
[06:52:14] *** Joins: rouji (~rouji@x0.at)
[06:54:48] *** Quits: trumae (~trumae@2804:18:86e:cd79:1:0:4570:9f01) (Remote host closed the connection)
[06:55:03] *** Joins: rgrinberg (~textual@177.248.158.166)
[06:55:28] *** Joins: Chaser (~Chaser@user/chaser)
[06:55:38] <Alipha> seifeslimene: have fun. Remember to code and play around with things AS you read. Just reading a programmer book straight through does jack shit for comprehension and retention
[06:57:08] <seifeslimene> yep!
[06:57:14] <seifeslimene> Gotcha
[07:01:35] *** Joins: ironman (~ironman@2405:201:1010:b051:aebb:ac9b:cf88:4008)
[07:02:32] <SamuelMarks> Is there a constexpr or other way of taking a std::unordered_map and inverting (make keys values and values keys) it? - I set the keys and values explicitly in source (.data)
[07:04:42] <kalven> unordered_map isn't constexpr capable at all, but you can of course write a runtime function that does it
[07:05:37] <Alipha> You could have a constexpr array or std::array that's sorted (or probably two arrays, mapping key to value and value to key)
[07:05:44] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[07:10:01] <SamuelMarks> Mmm it's for my keyword table - https://github.com/offscale/cdd-c/blob/c80a496/c_cdd/cst.h#L73 - I might just generate the inverse as a bunch of `switch(keyword) { case AUTO: return "auto"; …&etc/ }`
[07:19:44] *** Quits: mimorek (~mimorek@2a02:a463:6d13:1:8a22:4d45:1db4:6da) (Read error: Connection reset by peer)
[07:20:47] *** Joins: millido (~millido@84.210.150.128)
[07:24:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:25:44] <Alipha> SamuelMarks: i mean, your map there isn't constexpr anyway
[07:28:28] <Alipha> auto make_enum2keyword() { std::unordered_map<Keywords, std::string> result; for(auto &[str, keyword] : keyword2enum) result[keyword] = str; return result; } static const std::unordered_map<Keywords, std::string> enum2keyword = make_enum2keyword();
[07:33:53] <SamuelMarks> mmmm
[07:39:20] *** Joins: snake (~snake@user/snake)
[07:40:28] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 260 seconds)
[07:44:12] *** Quits: abode_ (~abode@2a00:f28:4c1:ac2:8230:49ff:fe6e:36b5) (Quit: Leaving)
[07:44:16] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 272 seconds)
[07:46:53] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[07:48:49] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 248 seconds)
[07:55:03] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:57:58] *** Quits: sreve_ (~quassel@p549d73f7.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[07:58:09] *** Joins: sreve (~quassel@p4ff44df3.dip0.t-ipconnect.de)
[08:00:18] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[08:02:54] *** Joins: smeso (~smeso@user/smeso)
[08:03:00] *** Quits: chenqisu12 (~chenqisu1@183.217.202.44) (Quit: Leaving)
[08:06:10] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[08:08:23] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[08:08:37] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Read error: Connection reset by peer)
[08:08:52] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[08:26:19] *** Quits: ckdCreations (~ckdCreati@147.55.133.135) (Read error: Connection reset by peer)
[08:27:04] *** Joins: ckdCreations (~ckdCreati@147.55.130.36)
[08:31:10] *** Quits: unlink2 (~unlink@p200300ebcf023c003405202aedecaeca.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[08:35:10] *** Joins: Viewday1151 (~Viewday@user/viewday)
[08:37:17] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 246 seconds)
[08:37:17] *** Viewday1151 is now known as Viewday115
[08:38:22] *** Joins: jbalint (~jbalint@071-090-119-177.res.spectrum.com)
[08:39:31] *** Quits: jbalint_ (~jbalint@071-090-119-177.res.spectrum.com) (Ping timeout: 256 seconds)
[08:39:48] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[08:45:15] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 240 seconds)
[08:46:17] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[08:48:04] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[08:49:16] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4ccc:8094:cf32:a009:2305:82c)
[08:58:45] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 268 seconds)
[09:00:36] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 268 seconds)
[09:05:43] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:07:53] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:08:47] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 246 seconds)
[09:11:40] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 272 seconds)
[09:15:05] *** Joins: noarb (~noarb@user/noarb)
[09:17:38] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[09:22:27] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Client Quit)
[09:24:08] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[09:28:49] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[09:31:41] *** Joins: Inline (~Inline@p4fedbc1e.dip0.t-ipconnect.de)
[09:33:28] *** Joins: KaitoDaumoto (Frat@user/kaitodaumoto)
[09:33:48] *** gentooclimax is now known as climax
[09:34:13] *** Quits: Inline__ (~Inline@p200300cd470f5c00eeead6c89d51972a.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[09:39:12] *** climax is now known as gentooclimax
[09:48:15] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 260 seconds)
[09:53:05] *** Quits: seifeslimene (~seifeslim@197.2.10.72) (Ping timeout: 248 seconds)
[09:54:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[09:56:07] *** Quits: llh (~UPP@user/llh) (Quit: :::: ( UPP ) ::::)
[09:56:17] *** Joins: zmt00 (~zmt00@user/zmt00)
[10:02:05] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[10:04:55] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[10:12:17] *** Quits: zer0x (~zer0x@1.55.254.166) (Ping timeout: 248 seconds)
[10:14:36] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[10:23:05] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[10:23:25] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:27:10] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[10:27:45] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Quit: Leaving)
[10:28:22] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[10:30:05] *** Joins: evangeline (~Eleanor@178.79.105.181)
[10:30:52] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) (Client Quit)
[10:37:57] *** Quits: osse (~osse@zsh/user/osse) (Ping timeout: 256 seconds)
[10:39:51] *** Joins: osse (~osse@zsh/user/osse)
[10:44:58] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[10:45:07] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[10:45:07] *** ChanServ sets mode: +v npaperbot
[10:45:37] *** Joins: JohnMS_WORK (~kvirc@194.110.240.100)
[10:49:35] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[11:03:32] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[11:07:00] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.222)
[11:09:21] *** Joins: zer0x (~zer0x@1.55.254.166)
[11:12:49] *** Joins: jsbach (~jsbach@2a01:c22:b00f:6a00:ac44:b596:cd28:d9c7)
[11:12:59] *** Joins: moose (~moose@user/moose)
[11:14:35] *** Quits: emerent (~quassel@p200300cd5743c3caba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[11:14:36] *** Joins: emerent_ (~quassel@p200300cd5743c37eba27ebfffed28a59.dip0.t-ipconnect.de)
[11:14:36] *** emerent_ is now known as emerent
[11:17:53] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[11:18:10] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[11:21:33] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 260 seconds)
[11:23:06] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[11:23:11] *** Joins: mixfix41 (~sdenynine@user/mixfix41)
[11:23:56] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 260 seconds)
[11:25:19] *** Joins: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it)
[11:26:07] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407)
[11:30:23] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[11:31:40] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[11:34:15] *** Joins: ivii (~ivan@user/ivii)
[11:36:01] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 248 seconds)
[11:36:05] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:36:49] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[11:41:21] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[11:45:00] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[11:45:50] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[11:46:19] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[11:49:45] *** Joins: chenqisu1 (~chenqisu1@183.217.202.44)
[11:53:11] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[11:55:57] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[11:57:32] *** Joins: Telvana2 (~capo@user/telvana)
[11:57:43] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 260 seconds)
[11:58:36] *** Joins: MajorBiscuit (~MajorBisc@c-001-028-054.client.tudelft.eduvpn.nl)
[12:05:31] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:06:37] *** Quits: MajorBiscuit (~MajorBisc@c-001-028-054.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[12:12:56] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[12:15:22] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:19:13] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[12:19:28] *** Joins: Viewday115 (~Viewday@user/viewday)
[12:20:29] *** Joins: epony (epony@user/epony)
[12:21:56] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[12:27:40] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[12:44:51] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[12:46:38] *** Quits: lawt (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9) (Ping timeout: 260 seconds)
[12:58:14] *** Quits: cosimone (~user@93-47-228-79.ip115.fastwebnet.it) (Remote host closed the connection)
[12:59:06] *** Joins: lawt (~lawt@2601:200:8200:6870:dea6:32ff:fea1:adf9)
[13:02:09] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:04:06] *** Joins: bobb_ (~bobb_@dslb-092-074-250-012.092.074.pools.vodafone-ip.de)
[13:05:42] *** Joins: sigma_ (~sigma@5.119.20.233)
[13:07:03] *** Joins: cosimone (~user@93-47-228-79.ip115.fastwebnet.it)
[13:08:43] *** Joins: plastico (~plastico@neomutt/plastico)
[13:09:31] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:4ccc:8094:cf32:a009:2305:82c) (Quit: Leaving)
[13:13:14] *** Parts: m_ben (~m_ben@user/m-ben/x-7429725) (WeeChat 3.4.1)
[13:16:12] *** Joins: seifeslimene (~seifeslim@197.244.201.38)
[13:17:27] *** Joins: wakeup (~wakeup@user/wakeup)
[13:18:34] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[13:18:37] *** Quits: reset (~reset@user/reset) (Quit: reset)
[13:20:47] *** Quits: ERROH (~mama@user/mama) (Quit: 42)
[13:23:03] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[13:23:22] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[13:23:34] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[13:31:22] *** Joins: PlasmaHH (~PlasamaHH@user/plasmahh)
[13:32:15] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:32:35] *** Joins: apollo13 (apollo13@django/moderator/apollo13)
[13:32:43] *** Parts: apollo13 (apollo13@django/moderator/apollo13) (Leaving)
[13:35:50] *** Quits: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it) (Ping timeout: 246 seconds)
[13:37:11] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:39:41] *** Quits: sigma_ (~sigma@5.119.20.233) (Quit: Konversation terminated!)
[13:43:05] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[13:50:24] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[13:51:01] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[13:52:10] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4ccc:8094:cf32:a009:2305:82c)
[13:54:30] *** Joins: jellie (~luv_panda@user/jellie)
[14:00:52] <GyrosGeier> hmm
[14:01:26] <GyrosGeier> is there a good way to pull in std::chrono_literals for constexpr static definitions inside a class?
[14:02:23] <GyrosGeier> class my_device { public: static constexpr auto timeout = 50ms; ... };
[14:02:42] <GyrosGeier> can I somehow avoid an "using namespace" in global scope here?
[14:03:53] *** Quits: kkd (uid425746@id-425746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[14:06:25] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Remote host closed the connection)
[14:09:18] *** Joins: andreasbuhr (~quassel@p549dba7d.dip0.t-ipconnect.de)
[14:10:03] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[14:10:50] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 246 seconds)
[14:12:14] *** Quits: belphegor666 (~satan@user/belphegor666) (Quit: WeeChat 3.4)
[14:12:56] *** Joins: jellie (~luv_panda@user/jellie)
[14:14:28] *** Joins: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de)
[14:15:04] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Changing host)
[14:15:04] *** Joins: belphegor666 (~satan@user/belphegor666)
[14:22:32] *** Parts: y0m0n (~NA@5-12-91-184.residential.rdsnet.ro) ()
[14:23:52] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[14:35:39] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:4ccc:8094:cf32:a009:2305:82c) (Remote host closed the connection)
[14:35:57] *** Joins: Prof_Dumbledore (~Prof_Dumb@2409:4042:4ccc:8094:d7b6:46ed:989b:387c)
[14:38:58] *** Joins: seninha (~seninha@user/seninha)
[14:41:28] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[14:43:35] *** Joins: wakeup (~wakeup@user/wakeup)
[14:43:50] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Quit: Client closed)
[14:44:59] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[14:45:07] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[14:45:07] *** ChanServ sets mode: +v npaperbot
[14:46:23] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[14:46:47] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[14:48:38] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 246 seconds)
[14:49:30] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[14:50:01] <AliceMeows> https://godbolt.org/z/Y3sEYd959 more bullshit...
[14:52:39] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[14:52:39] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[14:52:39] *** Joins: nortoh (~nortoh@user/nortoh)
[14:54:17] *** Quits: KaitoDaumoto (Frat@user/kaitodaumoto) (Remote host closed the connection)
[14:55:06] *** Quits: jellie (~luv_panda@user/jellie) (Quit: WeeChat 3.5)
[14:55:18] *** Joins: cart_man (~rynot@host-78-144-123-112.as13285.net)
[14:56:24] *** Joins: jellie (~luv_panda@user/jellie)
[14:58:59] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:00:35] <fluter> is there a way to have member methods for enums
[15:00:44] <fluter> obviously with the new class enums.
[15:01:30] <fluter> enum class E { A, B, C,  bool isBig() const { return e == B || e == C; } }; somethiing like this
[15:09:16] <AliceMeows> Not really but you can either wrap it or provide external functions
[15:09:32] <fluter> what do you mean wrap it?
[15:09:46] <AliceMeows> struct S { enum E {}; };
[15:10:15] <AliceMeows> struct S can have all the functions needed to manage E
[15:10:59] *** Joins: jplejacq (~jplejacq@152.42.120.127)
[15:12:01] *** Quits: proller (~p@2a02:6b8:b081:1214::1:2d) (Ping timeout: 248 seconds)
[15:12:11] <fluter> ah right
[15:12:13] <fluter> thanks
[15:12:20] <AliceMeows> Np
[15:16:09] *** Quits: cart_man (~rynot@host-78-144-123-112.as13285.net) (Ping timeout: 268 seconds)
[15:17:42] *** Joins: slidercrank (~slidercra@user/slidercrank)
[15:18:00] <AliceMeows> https://godbolt.org/z/Mcdbdx4nr easy way to crash msvc
[15:19:25] * PJBoy tries locally
[15:21:11] <PJBoy> confirmed
[15:21:36] <AliceMeows> ;)
[15:22:18] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[15:22:37] <PJBoy> I can submit the bug if you want
[15:22:44] <AliceMeows> You're welcome to
[15:22:52] <PJBoy> cool
[15:23:04] <AliceMeows> I don't have account to report any of this anyway
[15:23:14] <PJBoy> not even github?
[15:23:47] <AliceMeows> It has been a while since I've used github, I should have but I don't remember the password or email
[15:24:15] <PJBoy> and it doesn't crash in VS2019, so regression
[15:24:49] <AliceMeows> It depends if consteval was supported or treated as constexpr because with constexpr it wont crash
[15:24:56] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[15:25:29] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[15:26:01] <PJBoy> yeah I noticed that
[15:30:02] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Ping timeout: 260 seconds)
[15:33:20] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:34:05] <AliceMeows> https://godbolt.org/z/xacPf8vjP here is another broken thing in msvc
[15:34:50] <PJBoy> wow that's weird
[15:35:10] <PJBoy> considering it works perfectly well with explicit type template parameter
[15:35:21] <AliceMeows> auto breaks it
[15:35:51] *** Quits: ironman (~ironman@2405:201:1010:b051:aebb:ac9b:cf88:4008) (Quit: Leaving)
[15:36:09] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[15:36:46] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[15:38:33] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[15:39:16] <PJBoy> yup :(
[15:39:46] <AliceMeows> Wouldn't be the first time either
[15:41:47] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[15:41:51] <fluter> how do you find this kind of bugs?
[15:42:08] <fluter> looks amazing
[15:42:31] <AliceMeows> Doing crazy stuff haha
[15:43:01] <fluter> do you get a reward from MS for finding such bugs?
[15:43:04] <fluter> like a bounty?
[15:43:25] <AliceMeows> I don't bother with anything like that at all, nor do I care about any bounty
[15:43:35] *** Joins: unknow (~i.am@user/marlboro)
[15:44:24] <PJBoy> you get rewarded by the bug being fixed in a few months time
[15:44:36] <fluter> that'd be cool :D
[15:44:36] *** Quits: zoraj (~zoraj@vmi794994.contaboserver.net) (Read error: Connection reset by peer)
[15:44:51] <PJBoy> no bounties that I'm aware of
[15:45:49] *** Quits: jplejacq (~jplejacq@152.42.120.127) (Quit: Leaving.)
[15:46:07] <fluter> right, i guess this is not a security bug
[15:47:49] *** Quits: Khoyo (~khoyo@user/khoyo) (Quit: ZNC 1.8.2 - https://znc.in)
[15:48:16] *** Joins: zoraj (~zoraj@vmi794994.contaboserver.net)
[15:48:18] *** Joins: Khoyo (~khoyo@user/khoyo)
[15:50:29] *** Joins: jokoon (~eio@2a01:e0a:542:e160:70b6:eea:845c:cbe2)
[15:58:51] *** Joins: bebyx (~Thunderbi@user/bebyx)
[15:59:26] *** Joins: jplejacq (~jplejacq@152.42.120.68)
[16:00:07] <AliceMeows> https://godbolt.org/z/7K3Po9Mrv is this code even legal?
[16:00:32] <CarloWood> AliceMeows: I managed to change your code into: https://godbolt.org/z/8oqvWr6sW  where 'a' and A::foo are not constexpr (which they can't be)
[16:01:03] <CarloWood> However - the resulting -O3 assembly code does not contain the string literal "const int, unsigned char&" :/
[16:01:20] <CarloWood> So, that doesn't really look compile time evaluated then :(
[16:01:53] <AliceMeows> You probably shouldn't be using function_name() to do any manipulations, its extremely buggy
[16:02:18] <CarloWood> That too - it's bound to fail on 90% of the types :p
[16:02:53] <CarloWood> You'd need a full compiler to understand a type - and event then you might need context.
[16:03:05] <AliceMeows> CarloWood: https://godbolt.org/z/Y3sEYd959 if you'll check this you'll see how bad it is with gcc, while it sort of working with clang but fails in some cases with msvc such as with std::string
[16:04:18] <AliceMeows> Why can I have template<auto (T::*F)()> but not template<(T::*F)(auto)>?
[16:06:40] <CarloWood> I think the "std::string = std::__cxx11::basic_string<char>" is the result of using 'auto' on line 7
[16:08:00] <CarloWood> Not sure why it lost the "with T = " in the second case - that seems like a bug.
[16:08:23] <CarloWood> Also, it should show "get_type<T, B>" :/
[16:08:29] <CarloWood> So yeah - not very useful.
[16:08:56] <AliceMeows> Yeah, unfortunately its context sensitive
[16:09:44] *** Quits: bobb_ (~bobb_@dslb-092-074-250-012.092.074.pools.vodafone-ip.de) (Quit: Client closed)
[16:09:58] <AliceMeows> Even though ctor(auto l = std::source_location::current()) used locally should be identical to calling std::source_location::current() it really does not.  you can also try it with a lambda and see what happens
[16:11:53] <AliceMeows> CarloWood: https://godbolt.org/z/9dssM1ej1 this for example yields identical result even though there is no difference between it and the constexpr if version
[16:14:23] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[16:16:50] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[16:17:05] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[16:18:28] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.222) (Ping timeout: 260 seconds)
[16:20:46] *** Quits: mixfix41 (~sdenynine@user/mixfix41) (Quit: and the winter is outta here...)
[16:23:08] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.222)
[16:25:25] *** Quits: Posterdati (~posterdat@user/Posterdati) (Read error: Connection reset by peer)
[16:29:51] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[16:30:43] *** Joins: Posterdati (~posterdat@user/Posterdati)
[16:30:44] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:32:02] *** Joins: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it)
[16:33:11] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[16:34:23] *** Quits: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[16:34:57] *** Joins: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr)
[16:36:48] *** Joins: proller (~p@93.158.190.218)
[16:36:54] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[16:41:52] *** Quits: proller (~p@93.158.190.218) (Ping timeout: 268 seconds)
[16:43:13] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 248 seconds)
[16:43:50] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:44:47] *** RazielZ is now known as Raziel
[16:52:25] *** Joins: abode (~abode@91.75.87.246)
[16:52:56] *** Joins: proller (~p@2a02:6b8:0:408:a460:ef3c:f4ee:357e)
[16:56:30] *** Joins: bobb_ (~bobb_@dslb-092-074-250-012.092.074.pools.vodafone-ip.de)
[16:56:33] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 248 seconds)
[17:01:02] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 260 seconds)
[17:04:33] *** Quits: andreasbuhr (~quassel@p549dba7d.dip0.t-ipconnect.de) (Ping timeout: 248 seconds)
[17:04:53] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[17:04:58] *** Joins: andreasbuhr (~quassel@p549db8db.dip0.t-ipconnect.de)
[17:05:15] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[17:07:26] *** Quits: jokoon (~eio@2a01:e0a:542:e160:70b6:eea:845c:cbe2) (Quit: Leaving)
[17:09:55] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 240 seconds)
[17:12:08] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[17:17:53] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Ping timeout: 248 seconds)
[17:21:01] *** Joins: wakeup (~wakeup@user/wakeup)
[17:21:15] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 240 seconds)
[17:21:51] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 260 seconds)
[17:28:19] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:32:40] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:33:01] *** Quits: chenqisu1 (~chenqisu1@183.217.202.44) (Ping timeout: 240 seconds)
[17:33:40] <fiesh> I wish there were a way to explicitly instantiate a function template for a given range of values, say all values of an enum
[17:35:13] <ville> macros
[17:35:44] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[17:38:17] <fiesh> yeah, but that's not really satisfactory... I can instantiate them all in my code in the translation unit, but I can't tell the compiler to turn that somehow into a symbol of global linkage
[17:39:51] <ville> more macros?
[17:41:05] <fiesh> I guess if my cases involved enums of larger size, I'd opt for a macro... but with ranges of size like 4, I still prefer copy-pasta code here
[17:41:24] <AliceMeows> X-Macros
[17:41:36] <fiesh> yeah of course
[17:41:43] <ville> one macro to do the explicit instantiation declarations and another macro to do the explicit instantiations definitions?
[17:41:56] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:42:07] <fiesh> but that's, in this case, how the enum is defined to begin with to allow doing things like constexpr_foreach<EnumType>(functionObject)
[17:43:04] <AliceMeows> folding expression wont do?
[17:43:12] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[17:43:21] <fiesh> don't see how, that would be nice
[17:44:37] <AliceMeows> You could use xmacros to create a list of the enum values and then pass it to your constexpr_foreach and with folding expression you could call your functionObject
[17:46:03] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:46:36] *** Joins: JohnMS_AWAY (~kvirc@89-64-70-205.dynamic.chello.pl)
[17:48:22] <fiesh> well basically constexpr_foreach calls (f(std::integral_constant<IndexType, index>{}), ...); for the function object f and all values of index < N for some given N
[17:49:05] <fiesh> so that can be done entirely without macros, and you can do that for enums if they are contiguous from 0 on and you know their size
[17:49:19] <fiesh> so no preprocessor needed there...
[17:49:28] *** Quits: JohnMS_WORK (~kvirc@194.110.240.100) (Ping timeout: 260 seconds)
[17:50:00] <AliceMeows> You could always use magic_macros
[17:50:13] <fiesh> well anyhow, I'd like to not use macros ;-)
[17:50:20] <AliceMeows> Its a library
[17:50:25] <fiesh> like I said, for so small a range, I'd rather have code duplication than macros
[17:50:38] <AliceMeows> My bad its called magic enum
[17:50:50] <AliceMeows> https://github.com/Neargye/magic_enum
[17:51:05] <fiesh> yeah I know magic enum, we basically have our own implementation of something quite similar
[17:51:31] <fiesh> and the enum was just an example, think of instantiating a function template for all integers i < 128
[17:51:38] <AliceMeows> I'm surprised its even possible
[17:52:20] *** Joins: off^ (~off@c-24-99-107-170.hsd1.ga.comcast.net)
[17:53:43] <Alipha> GyrosGeier: you should be able to put `using namespace` inside your class definition
[17:54:38] *** Quits: Prof_Dumbledore (~Prof_Dumb@2409:4042:4ccc:8094:d7b6:46ed:989b:387c) (Ping timeout: 268 seconds)
[17:54:39] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[17:55:38] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[17:58:29] *** gentooclimax is now known as climax
[18:03:43] <PJBoy> {} struct S { using namespace std; };
[18:03:43] <geordi> error: expected nested-name-specifier before 'namespace'
[18:06:11] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Quit: Leaving.)
[18:07:30] <Alipha> Weird
[18:07:47] *** Quits: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it) (Ping timeout: 246 seconds)
[18:08:21] *** climax is now known as gentooclimax
[18:11:18] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:12:25] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[18:12:55] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:18:07] *** Joins: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it)
[18:21:51] *** gentooclimax is now known as climax
[18:23:35] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:70be:3437:d6be:b5ae) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:24:03] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:70be:3437:d6be:b5ae)
[18:24:34] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[18:26:11] *** Quits: vin (~vin@user/crash) (Quit: WeeChat 2.8)
[18:26:18] *** Quits: Inline (~Inline@p4fedbc1e.dip0.t-ipconnect.de) (Quit: Leaving)
[18:27:45] *** Joins: Inline (~Inline@p200300cd470f5c00eeead6c89d51972a.dip0.t-ipconnect.de)
[18:28:40] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[18:29:21] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 248 seconds)
[18:29:49] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[18:29:57] *** climax is now known as gentooclimax
[18:30:18] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:31:09] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[18:37:01] *** Quits: JohnMS_AWAY (~kvirc@89-64-70-205.dynamic.chello.pl) (Ping timeout: 245 seconds)
[18:37:11] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[18:38:07] *** Joins: CodePoint (~CodePoint@2607:fb90:c6c:212b:db7:c3d6:d4e7:5a73)
[18:38:40] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[18:40:13] *** Quits: dhch (~dhch@185.213.154.171) (Ping timeout: 260 seconds)
[18:44:59] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[18:45:07] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[18:45:07] *** ChanServ sets mode: +v npaperbot
[18:47:22] *** Quits: ville (~ville@user/ville) (Quit: ville)
[18:49:08] *** Joins: ville (~ville@user/ville)
[18:49:43] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Remote host closed the connection)
[18:49:58] *** Joins: unlink2 (~unlink@p200300ebcf023c003405202aedecaeca.dip0.t-ipconnect.de)
[18:50:30] *** Quits: nq (~nq@82.79.141.40) (Quit: Leaving)
[18:54:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[18:54:56] <urdh> lol how tf do you use std::error_code
[18:55:27] <PJBoy> ikr
[18:56:35] <PJBoy> it's confusing and overengineered
[18:56:56] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[18:57:00] <urdh> i want to check whether the error_code was EXDEV (errc::cross_device_link) so I can call copy instead
[18:57:04] <PJBoy> as far as I can tell std::error_code is pointless
[18:57:05] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[18:57:10] <PJBoy> and you want to convert to std::error_condition
[18:57:19] <ville> urdh: you read the spec, then decide that you don't
[18:57:24] *** Joins: nvmd (~weechat@user/nvmd)
[18:57:45] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:58:06] <urdh> :(
[18:59:05] *** Joins: [o (~istupy@2620:0:1003:206:58d2:8955:abdf:dd07)
[19:00:12] <PJBoy> I think you would check `if (some_error_code == std::make_error_code(std::errc::cross_device_link))`
[19:00:29] *** Joins: wakeup (~wakeup@user/wakeup)
[19:01:48] <urdh> let's try that and roll with it
[19:03:36] <[o> always check your errors :)
[19:03:54] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[19:08:42] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:19:07] *** Joins: rgrinberg (~textual@177.248.158.166)
[19:20:43] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving)
[19:21:50] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[19:24:09] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:25:31] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[19:30:19] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[19:30:20] *** Parts: jtm (~jtm@user/jtm) (Leaving)
[19:31:20] *** Joins: clime (~clime@78-80-97-243.customers.tmcz.cz)
[19:32:13] *** Joins: sigma_ (~sigma@5.119.20.233)
[19:35:26] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:41:11] *** Quits: lpotter (~quassel@180-150-104-92.b49668.bne.static.aussiebb.net) (Read error: Connection reset by peer)
[19:41:35] *** Joins: lpotter (~quassel@180-150-104-92.b49668.bne.static.aussiebb.net)
[19:42:27] *** Quits: unknow (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[19:42:38] *** Quits: zibolo (~quassel@global-deiInside018.dei.polimi.it) (Ping timeout: 246 seconds)
[19:43:57] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[19:44:13] *** Joins: bindu (~bindu@user/bindu)
[19:44:23] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 246 seconds)
[19:44:44] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving)
[19:45:37] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[19:45:37] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 248 seconds)
[19:47:49] *** Joins: Brainium (~brainium@user/brainium)
[19:48:49] *** Quits: CodePoint (~CodePoint@2607:fb90:c6c:212b:db7:c3d6:d4e7:5a73) (Ping timeout: 248 seconds)
[19:49:05] *** Joins: sigma__ (~sigma@2a01:5ec0:5818:f4db:d3dd:7b9c:f9c9:77cd)
[19:49:26] *** Quits: sigma_ (~sigma@5.119.20.233) (Ping timeout: 272 seconds)
[19:49:57] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[19:51:27] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[19:53:31] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[19:54:53] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 268 seconds)
[19:55:33] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[19:56:15] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[19:56:15] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[19:56:15] *** Joins: nortoh (~nortoh@user/nortoh)
[19:56:20] *** Joins: dld (~davidlowr@2601:180:204:17de:38c1:e5a4:b065:9eb3)
[19:56:36] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[19:58:12] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[19:59:29] *** Quits: zer0x (~zer0x@1.55.254.166) (Ping timeout: 248 seconds)
[20:00:12] *** Quits: nvmd (~weechat@user/nvmd) (Ping timeout: 272 seconds)
[20:00:17] *** Joins: tosemusername (~weechat@user/nvmd)
[20:00:26] *** Joins: ivii (~ivan@user/ivii)
[20:01:29] *** tosemusername is now known as nvmd
[20:01:34] *** Joins: martinthewildpig (~martinthe@2a02:a03f:d8ee:9d00:9c24:a80:3c31:737)
[20:03:30] *** Joins: magla (~gelignite@d5363ac5.access.ecotel.net)
[20:04:31] *** Quits: dld (~davidlowr@2601:180:204:17de:38c1:e5a4:b065:9eb3) (Ping timeout: 245 seconds)
[20:04:34] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[20:06:40] *** Joins: dld (~davidlowr@2601:197:600:1210:38c1:e5a4:b065:9eb3)
[20:06:40] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[20:07:47] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[20:08:13] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[20:08:39] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[20:08:54] *** Quits: martinthewildpig (~martinthe@2a02:a03f:d8ee:9d00:9c24:a80:3c31:737) (Quit: Client closed)
[20:11:10] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:11:57] *** Joins: JordiGH (~jordi@user/jordigh)
[20:12:05] <JordiGH> So std::print in C++23?
[20:12:10] <JordiGH> Is that already accepted?
[20:12:46] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[20:13:22] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[20:14:30] *** Joins: ivii (~ivan@user/ivii)
[20:15:55] <PJBoy> never heard of that one
[20:15:55] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[20:16:30] <JordiGH> http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2093r11.html#motivation
[20:16:44] <PJBoy> [p2093]
[20:16:45] <npaperbot> P2093R13: [Library] Formatted output <https://wg21.link/p2093r13> (by Victor Zverovich) (2022-02-09) (Related: https://wg21.link/p2093r13/github)
[20:17:22] <PJBoy> that looks C++23 approved, yeah
[20:17:46] <PJBoy> although it says r14 even though there's no r14
[20:19:36] <PJBoy> woah I wasn't aware python could print unicode to the windows command prompt
[20:19:49] *** Quits: magla (~gelignite@d5363ac5.access.ecotel.net) (Quit: Stay safe!)
[20:21:11] <PJBoy> yeah that looks pretty good :o
[20:21:21] <PJBoy> and it has really support for printing unicode
[20:23:15] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:24:34] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[20:25:36] *** Joins: ivii (~ivan@user/ivii)
[20:26:35] *** Quits: ckdCreations (~ckdCreati@147.55.130.36) (Read error: Connection reset by peer)
[20:26:43] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[20:26:57] *** Joins: sobkas (~sobkas@95.175.17.217)
[20:27:21] *** Joins: ckdCreations (~ckdCreati@147.55.133.129)
[20:28:15] <CarloWood> Does C++20 have a provision to get an unsigned integral type that can hold the constexpr int N?
[20:28:56] <CarloWood> That would be... uint32_t, uint16_t or uint8_t I guess.
[20:29:07] <PJBoy> uint64_t, done
[20:29:15] <CarloWood> I give me one of those types as function of the number of bits that I need to store.
[20:29:46] <CarloWood> I want to cram as much as possible in a cache line, so no uint64_t.
[20:30:44] <cbreak> CarloWood: so... do you want to be able to represent the negative values?
[20:32:27] <cbreak> CarloWood: there is https://en.cppreference.com/w/cpp/types/make_unsigned
[20:33:52] <CarloWood> No I want to convert something like 10 (1024) to uint16_t because 8 < 10 <= 16
[20:34:25] <CarloWood> Need something that returns one type or another type thus, based on a typetrait.
[20:35:54] <CarloWood> https://en.cppreference.com/w/cpp/types/conditional I guess will have to do.
[20:36:03] <cbreak> do you want a constexpr log2
[20:36:10] <cbreak> I think I wrote that some time ago...
[20:36:40] <CarloWood> I already have that
[20:37:18] <cbreak> then you can just select an appropriate type with some way. Like old school specialization
[20:38:47] *** Quits: sigma__ (~sigma@2a01:5ec0:5818:f4db:d3dd:7b9c:f9c9:77cd) (Ping timeout: 260 seconds)
[20:40:00] *** Quits: bobb_ (~bobb_@dslb-092-074-250-012.092.074.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[20:41:08] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 268 seconds)
[20:41:59] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:308b:ddf6:8a2a:9b9f)
[20:41:59] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:308b:ddf6:8a2a:9b9f) (Changing host)
[20:41:59] *** Joins: skapata (~Skapata@user/skapata)
[20:42:21] *** Joins: ivii (~ivan@user/ivii)
[20:43:47] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:44:36] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 240 seconds)
[20:44:44] <PJBoy> CarloWood, https://godbolt.org/z/d5b8cK8zz ?
[20:45:27] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:45:57] *** Joins: rgrinberg (~textual@177.248.158.166)
[20:46:15] <CarloWood> nice, thx
[20:46:18] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:48:39] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:48:54] *** Joins: sigma__ (~sigma@5.120.244.114)
[20:48:57] *** Quits: sigma__ (~sigma@5.120.244.114) (Client Quit)
[20:50:09] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 248 seconds)
[20:50:39] *** Joins: Yruama (~Yruama@2a01:cb15:8128:c100:6c61:6a53:9bf0:64ca)
[20:53:45] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[20:53:56] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[20:55:02] *** Joins: wakeup (~wakeup@user/wakeup)
[20:55:16] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[20:55:32] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[20:56:34] *** Quits: user24037 (~user47239@user/user282069) (Ping timeout: 272 seconds)
[20:59:19] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[21:01:19] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:5019:823:a50e:5ee6)
[21:02:20] *** Joins: Minvera (~Minvera@user/Minvera)
[21:02:29] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[21:04:37] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[21:09:35] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[21:10:12] *** Quits: sreve (~quassel@p4ff44df3.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[21:10:24] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:11:43] *** Joins: Dizidentu (~aresg@modemcable151.154-19-135.mc.videotron.ca)
[21:13:18] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[21:13:18] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[21:13:18] *** Joins: nortoh (~nortoh@user/nortoh)
[21:15:37] *** Joins: sreve (~quassel@p54a7110f.dip0.t-ipconnect.de)
[21:16:54] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 268 seconds)
[21:17:06] *** Quits: Telvana2 (~capo@user/telvana) (Read error: Connection reset by peer)
[21:18:08] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[21:20:23] *** Joins: Telvana (~capo@user/telvana)
[21:20:53] *** Quits: Telvana (~capo@user/telvana) (Remote host closed the connection)
[21:21:56] *** Joins: xkuru (~xkuru@user/xkuru)
[21:22:36] *** Quits: sreve (~quassel@p54a7110f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[21:22:41] *** Joins: Telvana (~capo@user/telvana)
[21:25:26] *** Joins: gproto23 (~gproto23@user/gproto23)
[21:25:31] *** Joins: user24037 (~user47239@mail.ultronoarena.com)
[21:25:32] *** Quits: user24037 (~user47239@mail.ultronoarena.com) (Changing host)
[21:25:32] *** Joins: user24037 (~user47239@user/user282069)
[21:28:49] *** Joins: rgrinberg (~textual@177.248.158.166)
[21:32:01] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[21:40:36] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Remote host closed the connection)
[21:41:09] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[21:43:46] *** Quits: Dizidentu (~aresg@modemcable151.154-19-135.mc.videotron.ca) (Quit: WeeChat 2.8)
[21:43:47] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[21:45:43] *** Quits: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d) (Ping timeout: 260 seconds)
[21:56:20] *** Quits: cation (cation@user/cation) (Quit: Leaving)
[21:56:40] *** Joins: cation (cation@user/cation)
[21:57:59] *** Joins: Mat_42 (~mat_42@2a02:21b0:644c:acc1:c812:5653:51cd:362d)
[21:58:52] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[21:59:27] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[21:59:34] *** Joins: sobkas (~sobkas@95.175.17.217)
[22:03:56] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[22:11:51] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[22:12:49] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 248 seconds)
[22:15:53] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[22:21:09] *** Parts: JordiGH (~jordi@user/jordigh) (Leaving)
[22:25:39] *** Joins: seninha (~seninha@user/seninha)
[22:26:26] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 246 seconds)
[22:31:44] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-e4f8-bd3f-9136-d580.res6.spectrum.com) (Ping timeout: 260 seconds)
[22:34:29] *** Quits: nortoh (~nortoh@user/nortoh) (Ping timeout: 246 seconds)
[22:36:25] *** Quits: proller (~p@2a02:6b8:0:408:a460:ef3c:f4ee:357e) (Remote host closed the connection)
[22:37:55] *** Joins: makeyavelly (~Thunderbi@88.135.62.96)
[22:42:29] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:44:14] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[22:44:14] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[22:44:14] *** Joins: nortoh (~nortoh@user/nortoh)
[22:44:21] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-f1ec-d7f3-37e1-032c.res6.spectrum.com)
[22:45:00] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[22:45:08] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[22:45:08] *** ChanServ sets mode: +v npaperbot
[22:45:13] *** Joins: vicfred (~vicfred@user/vicfred)
[22:45:25] *** Joins: shtrb (~shtrb@user/shtrb)
[22:45:31] *** Quits: cosimone (~user@93-47-228-79.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[22:46:01] <shtrb> Is there any syntactical difference between "(type_t) value"  and "type_t (value)" ?
[22:46:38] <AliceMeows> (T)var is a C cast T(var) is calling ctor
[22:47:00] <Alipha> they're almost effectively the same though
[22:47:18] <Alipha> << long(p); int *p = new int(3);
[22:47:18] <geordi> 21500352
[22:47:32] *** Joins: cosimone (~user@93-47-228-79.ip115.fastwebnet.it)
[22:47:38] <PJBoy> they're exactly the same except the former can name types that are more than one word
[22:48:06] <PJBoy> like unsigned long long int
[22:48:13] <shtrb> Thanks
[22:48:15] <Alipha> geordi: -w int x = 3; int main() { int(x); cout << x; }
[22:48:16] <geordi> 32767
[22:48:25] <Alipha> !vex
[22:48:26] <nolyc> T x(); and T y(U(z)); declare functions named x and y, the latter with a parameter named z. Also, T(a); declares a variable called a.
[22:48:56] <PJBoy> << (vector<int>) 4 // more people should write this way
[22:48:56] <geordi> {0, 0, 0, 0}
[22:49:28] <Alipha> geordi: -w int x = 3; int main() { (int)x; cout << x; }
[22:49:29] <geordi> 3
[22:49:46] <AliceMeows> PJBoy: how is that even legal?
[22:50:18] <PJBoy> because `(T) x` is identical to `T(x)`
[22:50:26] *** Joins: pulse (~pulse@user/pulse)
[22:50:36] <PJBoy> modulo most vexing parse and multitoken types
[22:50:42] <Alipha> `(vector<int>) 4` is an explicit conversion from int to std::vector<int>, which ends up calling the explicit vector(size_type n) constructor
[22:50:55] <AliceMeows> Interesting
[22:51:01] <AliceMeows> I've never seen it in use
[22:51:11] <Alipha> << vector<int>(4)
[22:51:12] <geordi> {0, 0, 0, 0}
[22:51:24] <PJBoy> << static_cast<vector<int>>(4) // also
[22:51:25] <geordi> {0, 0, 0, 0}
[22:51:32] <Alipha> << (vector<int>){4, 3}
[22:51:32] <geordi> error: ISO C++ forbids compound-literals
[22:51:36] <Alipha> boo
[22:51:55] <AliceMeows> << vector{4, 3}
[22:51:56] <geordi> {4, 3}
[22:52:02] <Alipha> << vector<int>({4, 3})
[22:52:03] <geordi> {4, 3}
[22:52:36] <PJBoy> all the above is the reason I don't tend to use static_cast outside of pointer and reference conversions
[22:52:39] <Alipha> that's a lot of differences for being "exactly the same" ;-)
[22:52:51] <PJBoy> it is the same
[22:53:09] <PJBoy> well
[22:53:19] <PJBoy> nah I misread
[22:53:21] <PJBoy> <_<
[22:53:37] <PJBoy> blame uniform initialisation
[22:53:49] <shtrb> Why did the Alipha first example gave a different result again ?
[22:54:02] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[22:54:04] <PJBoy> the !vex one?
[22:54:07] <shtrb> yes
[22:54:25] <PJBoy> `T obj;` and `T (obj);` are equivalent
[22:54:38] <Alipha> shtrb: `int(x);` is declaring a local variable named x of type int. the same as `int x;`. And so, the local x shadows the global x
[22:54:40] <PJBoy> so `int (x);` declares a new integer `x` that's uninitialised
[22:54:50] <shtrb> Alipha, ahh got it
[22:54:53] <shtrb> thanks , sorry
[22:55:29] <PJBoy> and the rationale for that syntax is to be able to do things like declare a reference/pointer to an array/function
[22:55:35] <Alipha> PJBoy: how about to amend your statement: if `T(x)` and `(T)x` both compile and perform a cast, the result is the same?
[22:55:48] <PJBoy> like `int (&arr_ref)[4] = arr;`
[22:56:27] <PJBoy> no, I like giving statements that are more simple and less correct
[22:56:43] <Alipha> !grab PJBoy
[22:56:44] <nolyc> Alipha: The operation succeeded.
[22:56:46] <PJBoy> then spending several lines of conversation clarifying that statement
[23:02:14] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[23:04:32] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:05:22] <ville> AliceMeows: you can't "call" a ctor. they don't have names. the compiler is able to find one however when you cast things
[23:07:15] <AliceMeows> Right
[23:13:37] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 248 seconds)
[23:15:13] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:16:21] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:17:10] <welder> How to create a character string consisting of text mixed with nullbytes?
[23:17:23] <AliceMeows> "str\0str"
[23:17:35] *** gentooclimax is now known as climax
[23:19:28] <Alipha> << "str\0str"s
[23:19:28] <geordi> str[\NUL]str
[23:20:00] <welder> doesnt seem to work when the character following the null is a number
[23:20:14] <welder> so like 123NUL789
[23:20:26] <ville> !testcase
[23:20:27] <nolyc> A testcase is the _least_ amount of code that replicates your problem. Paste it to: https://godbolt.org/ and make sure it really does replicate your problem. This does not mean that you dump all your code there. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[23:20:43] <AliceMeows> << "123\0789"s
[23:20:44] <geordi> 123*BEEP*89
