[00:14:35] <FromDiscord> <SecureThisShit> Can someone tell me how to echo LPSTR contents? I tried appending it into a string, casting to char, grabbing each char and append them which all failed.
[00:29:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[00:36:58] <FromDiscord> <0ffh> Does `$` not work?
[01:04:26] <FromDiscord> <kaddkaka> Custom numerical literals are neat 🙂
[01:05:07] <FromDiscord> <Solitude> yas
[01:07:04] <FromDiscord> <evoalg> In reply to @Shiba "i know that we": large chunks (not all) of the "behind the scenes" stuff will need to be done again
[01:08:40] *** Quits: lumo_e (~enrico@151.29.48.90) (Remote host closed the connection)
[01:09:13] *** Joins: lumo_e (~enrico@151.29.48.90)
[01:10:49] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[01:23:27] *** Joins: joast (~rick@cpe-98-146-112-4.natnow.res.rr.com)
[01:28:05] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[01:28:36] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[01:47:25] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:50:10] <FromDiscord> <gibson> Anyone familiar with tcc? I'm making a shared lib for python to load and not sure what all args nim needs to pass. Works with gcc/default.↵`nim c --cc:tcc -t:"-fPIC" -l:"-fPIC -rdynamic" --app:lib -o:pycache/nimfunc.so nimfunc.nim`
[01:50:36] *** Quits: lumo_e (~enrico@151.29.48.90) (Quit: Quit)
[01:51:00] <FromDiscord> <gibson> (edit) "nimfunc.nim`" => "nimfunc.nim`↵python loads the .so and segfaults when so is built with tcc."
[01:59:18] <FromDiscord> <creikey> how scuffed are nim threads on a scale of 1 to 10?
[02:00:55] <FromDiscord> <Elegantbeef> They're abstracted over OS threads and depending on what you're doing super easy to use
[02:00:58] <FromDiscord> <Elegantbeef> Channels are nice in my experience
[02:01:42] <nrds> <06Prestige99> Agreed
[02:05:06] <FromDiscord> <Elegantbeef> There is also https://github.com/mratsim/weave
[02:07:31] <FromDiscord> <Elegantbeef> @gibson\: i'm feeling like an idiot cause i cannot get it to even load the `.so`
[02:07:32] <FromDiscord> <Elegantbeef> dynlib sitting in the same directory as i'm working, and it cannot find it even with ld lib path set 😀
[02:09:31] <FromDiscord> <gibson> @ElegantBeef I'm using nimporter/nimpy. Turns out I can't even get tcc to build an executable, but it will make an o or so file just fine. "Invalid Relocation Entry" errors, that look like repeats of prior bugs in tcc. Still trying to figure out if this is my problem (how I built tcc?...) or a tcc inherent bug.
[02:09:57] <FromDiscord> <Elegantbeef> I'm using TCC from the ubuntu repository and it works fine for making executables
[02:10:31] <FromDiscord> <gibson> I'm jealous! I'm on solus, built it from scratch. Maybe I'll look if the ubuntu package contains build instructions in it..
[02:11:25] <FromDiscord> <Elegantbeef> I did manually move my lib to my lib folder and did get it to run but had a `cannot find fabs` issue
[02:12:52] <FromDiscord> <Elegantbeef> Oh got it to run now
[02:13:07] <FromDiscord> <Elegantbeef> All i had to do was `nim c --app:lib ./myLibFile`
[02:13:23] <FromDiscord> <Elegantbeef> Still had to move it to `/lib/` but that's just cause i havent used dynlib before
[02:14:13] <FromDiscord> <gibson> Nice! Thanks for the verification that I shouldn't have to add anything crazy. That's a big help.
[02:14:48] <FromDiscord> <Elegantbeef> I guess i left out `--cc:tcc` 😛
[02:15:03] <FromDiscord> <gibson> Oh, does that work?
[02:15:11] <FromDiscord> <Elegantbeef> Oh compiling the main program with tcc causes a shit fit
[02:15:25] <FromDiscord> <creikey> is there a nim iterator to count the size of an iterator? I can't find one
[02:15:26] <FromDiscord> <Elegantbeef> So the shared lib works with tcc but main lib in my test complains about lack of `fabs`
[02:15:34] <FromDiscord> <creikey> trying to count the number of keys in a loaded json
[02:15:47] <FromDiscord> <Elegantbeef> You'd need to iterate over it and count steps
[02:15:55] <FromDiscord> <creikey> just like that
[02:15:59] <FromDiscord> <creikey> sent a code paste, see https://play.nim-lang.org/#ix=3Ksr
[02:16:00] <FromDiscord> <Elegantbeef> `std/enumerate`  allows you to take an iterator and add `1`
[02:16:14] <FromDiscord> <Elegantbeef> "add 1" is my dumb way of saying add an index
[02:16:31] <FromDiscord> <Elegantbeef> You could make a `count` template
[02:16:56] <FromDiscord> <creikey> I have to put all of the values of the keys into a seq anyways so might as well just let seq dynamically stretch to the size of the keys necessary
[02:17:01] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Kss
[02:17:11] <FromDiscord> <creikey> iterate over the keys and using `games.add`
[02:18:04] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Kst
[02:18:12] <FromDiscord> <creikey> lol sugar
[02:18:16] <FromDiscord> <Elegantbeef> Or even `import std/sequtils` `yourIter.toSeq`
[02:18:38] *** Joins: nac4 (~nac@user/nac)
[02:18:42] <FromDiscord> <creikey> std/json can already convert the keys into an OrderedTable I think
[02:19:02] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[02:19:08] <FromDiscord> <creikey> yeah https://media.discordapp.net/attachments/371759389889003532/926970325273554944/unknown.png
[02:19:21] <FromDiscord> <creikey> not sure if ordered table has a count
[02:19:26] <FromDiscord> <creikey> I think just len
[02:19:36] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:19:38] <FromDiscord> <Elegantbeef> Same thing
[02:20:17] *** Quits: nac (~nac@user/nac) (Ping timeout: 256 seconds)
[02:20:17] *** nac4 is now known as nac
[02:20:28] <FromDiscord> <Isofruit> sent a code paste, see https://play.nim-lang.org/#ix=3Ksu
[02:20:56] <FromDiscord> <Elegantbeef> Templates in Nim are hygenic which means they only emit accessible variables when you tell theem
[02:21:35] <FromDiscord> <Isofruit> Ohhh alright, so if I give a template an output type, I can... do result = lalala and that template will return "lalala" as if it were a proc?
[02:21:40] <FromDiscord> <Isofruit> (edit) "lalala" => ""lalala""
[02:21:50] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Ksw
[02:22:00] <FromDiscord> <Isofruit> Ah! Inject pragma I see you once more!
[02:22:06] <FromDiscord> <Elegantbeef> No templates do not have a `result` hence why i use create `res` manually
[02:22:41] <FromDiscord> <Isofruit> What does the type that you put at the end of the template do, given that it's not a result?
[02:22:49] <FromDiscord> <Isofruit> the int in this case
[02:23:59] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[02:24:06] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Ksy
[02:25:29] *** Joins: thomasross (~thomasros@dyn-pppoe-142-51-227-74.vianet.ca)
[02:28:02] *** Quits: thomasross (~thomasros@dyn-pppoe-142-51-227-74.vianet.ca) (Remote host closed the connection)
[02:28:26] *** Joins: thomasross (~thomasros@dyn-pppoe-142-51-227-74.vianet.ca)
[02:28:27] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Remote host closed the connection)
[02:30:53] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[02:31:51] <FromDiscord> <Isofruit> sent a code paste, see https://paste.rs/Pqu
[02:32:04] <FromDiscord> <Isofruit> (edit) "https://play.nim-lang.org/#ix=3KsD" => "https://play.nim-lang.org/#ix=3KsE"
[02:32:07] <FromDiscord> <Elegantbeef> Yep you can even do `--expandMacro:count`
[02:32:10] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Remote host closed the connection)
[02:32:18] <FromDiscord> <Elegantbeef> actually no
[02:32:36] <FromDiscord> <creikey> the word macro shivers my timbers
[02:32:36] <FromDiscord> <Isofruit> (edit) "https://play.nim-lang.org/#ix=3KsE" => "https://play.nim-lang.org/#ix=3KsH"
[02:32:45] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/rNa
[02:32:48] <FromDiscord> <Elegantbeef> Eh i love macros so take it back
[02:33:46] <FromDiscord> <Isofruit> I can't really interpret the above unless I assume the part after `let x = ` executes as if it were in a proc, just that the way you return out of it is different
[02:34:19] <FromDiscord> <Elegantbeef> In Nim "everything" can be an expression
[02:34:33] <FromDiscord> <Isofruit> Ohhhh
[02:34:34] <FromDiscord> <Elegantbeef> For instance
[02:34:38] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3KsK
[02:34:41] <FromDiscord> <Isofruit> So it reads the entire code block as if it were an expression
[02:34:58] <FromDiscord> <Elegantbeef> Well it is one
[02:35:04] <FromDiscord> <Isofruit> Which means the last value in that code block is what that expression evaluates into
[02:35:18] <FromDiscord> <Elegantbeef> Yes
[02:36:14] <FromDiscord> <Isofruit> Hmmm and I can't use functions from outside of the template inside of the template if I understood documentation correctly so far
[02:36:40] <FromDiscord> <Elegantbeef> You can call functions in the templater
[02:36:42] <FromDiscord> <Elegantbeef> template\
[02:37:20] <FromDiscord> <Elegantbeef> Templates are just code substitution so you can do a lot with them
[02:38:25] <FromDiscord> <creikey> https://docs.python.org/3/library/collections.html#collections.Counter Is there anything like this?
[02:38:29] <FromDiscord> <creikey> (edit) "this?" => "this in nim std?"
[02:38:52] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3KsO
[02:39:30] <FromDiscord> <Isofruit> Assume showcaseMagic is in file a.nim and doThing is in file b.nim and the assert statement is in file c.nim
[02:39:31] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/tables.html#CountTable
[02:39:40] <FromDiscord> <creikey> In reply to @Elegantbeef "https://nim-lang.org/docs/tables.html#CountTable": nice
[02:39:41] <FromDiscord> <Isofruit> c.nim needs to import a.nim and b.nim and that#s it?
[02:40:00] <FromDiscord> <Elegantbeef> The point is that `doThing` is written after the template and resolved at `showcaseMagic()`
[02:40:15] <FromDiscord> <Elegantbeef> Which means you can override the logic at callsite unlike generics
[02:41:07] <FromDiscord> <Elegantbeef> Generics generate code on first instantiation so if you have a `proc showcaseMagic[T]` instead of the template when i first call `showcaseMagic[string]` any place that calls that procedure will get the same proc call
[02:41:13] <FromDiscord> <Elegantbeef> It makes sense but depending what you're doing it's odd
[02:43:05] <FromDiscord> <Isofruit> I've been trying to abstract away my interactions with my database through norm into a repository module and wanted to generalize that since I'll have very similar CRUD interactions where the only thing differes is the types I use.↵Generics had some weird behaviour that I didn't expect regarding what I needed to import where, so I'm trying to figure out whether I can make it work with templates, hmmmm
[02:44:44] <FromDiscord> <Isofruit> I think I've got enough of a grasp to play around with some code concepts, see them fail and then think about why they failed, so I'll be tackling that for now
[02:44:51] <FromDiscord> <Isofruit> (edit) "I think I've got enough of a grasp ... to" 03added "now"
[02:46:35] <FromDiscord> <Elegantbeef> Eh you can use `mixin` and `bind` with generics aswell
[02:46:49] <FromDiscord> <Elegantbeef> So you probably just need to plop a `mixin` in your generic
[02:47:09] <FromDiscord> <evoalg> In reply to @Elegantbeef "Generics generate code on": I don't understand this bit ... are you saying templates are always substituted into code at compile time, but generics are expanded to different proc's at CT ?
[02:47:55] <FromDiscord> <Elegantbeef> Well once the first proc is generated for a generic it's used for all instances of the generic regardless of the scope
[02:49:34] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3KsS
[02:50:09] <FromDiscord> <Elegantbeef> the call in `modb` is the same as the on in `moda` regardless of the `doThing` since the first instantiation of a generic is the one always used
[02:50:50] <FromDiscord> <evoalg> oh gotcha thx!
[02:50:53] <FromDiscord> <Elegantbeef> generics are only generate based of scope of the first instantiation
[02:50:54] <FromDiscord> <Elegantbeef> But if you replaced that with a template it'd call the `doThing` in scope
[02:51:27] <FromDiscord> <evoalg> nice 🙂 🙂
[02:55:20] <FromDiscord> <kaddkaka> sent a long message, see https://paste.rs/oTk
[02:55:34] <FromDiscord> <Elegantbeef> There is sadly no `all`
[02:56:12] <FromDiscord> <kaddkaka> In reply to @Elegantbeef "There is sadly no": Sure, I'm not even sure if `all` would make sense.
[02:56:12] <FromDiscord> <Elegantbeef> Distincts i think are exactly what you're after you can make this easier on yourself though
[02:57:22] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Kt3
[02:57:39] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Kt4
[02:58:07] <FromDiscord> <Isofruit> OH! Man that took a while until I understand between your comment and the docu what mixin is
[02:58:36] <FromDiscord> <Elegantbeef> The simple description is "Mixin forces symbols to be resolved at callsite instead of declaration"
[02:58:41] <FromDiscord> <Isofruit> So mixin tells it "Ignore the fact that within the file that this generic is in you don't know what this function/variable means, that'll be available from the context of whatever function will call you"
[02:59:07] <FromDiscord> <Elegantbeef> It does also consider any symbol accessible in the scope of the generic if it matches, but indeed
[02:59:18] <FromDiscord> <Elegantbeef> It's a "forced open symbol" which means it'll figure it out when it needs to
[03:00:20] <FromDiscord> <Isofruit> Could it be that this comes at a performance penalty?
[03:00:26] <FromDiscord> <Elegantbeef> Nope
[03:00:33] <FromDiscord> <Elegantbeef> it's all compile time reasoned
[03:00:40] <FromDiscord> <Elegantbeef> Nim's procedure calls are all statically dispatched
[03:01:09] <FromDiscord> <Isofruit> Right, right, I'm not doing methods, so no dynamic dispatch
[03:01:17] <FromDiscord> <Elegantbeef> Indeed
[03:01:17] <FromDiscord> <kaddkaka> sent a code paste, see https://paste.rs/EXc
[03:01:19] <FromDiscord> <Elegantbeef> No problem
[03:02:31] <FromDiscord> <Isofruit> for my own import reasoning as well:↵NIm only does relative imports of other modules, right?↵I've seen a SO answer that claimed you can also give absolute paths, but I've tried all variations of that that I could think of in one of my files and that did not work whatsoever
[03:02:45] <FromDiscord> <Elegantbeef> It does relative yes
[03:03:20] <FromDiscord> <Elegantbeef> no problem, templates solve many problems! 😀↵(@kaddkaka)
[03:03:48] <FromDiscord> <Elegantbeef> If your code is in a package and it's installed using nimble you can do it relative to the package root↵(@Isofruit)
[03:04:13] <FromDiscord> <Elegantbeef> So `import yourPackage/someDir/module`
[03:05:47] <FromDiscord> <creikey> hey uh I ctrl cd `nim r` mid running and now I can't delete a file in the nim cache because it's "still open"
[03:05:53] <FromDiscord> <creikey> (edit) "hey uh I ctrl cd `nim r` mid running and now I can't delete a file in the nim cache because it's "still open" ... " 03added "so nothing will compile"
[03:06:00] <FromDiscord> <creikey> (edit) "cd" => "c"
[03:06:54] <FromDiscord> <Elegantbeef> `killall -9 nim` if you're on \nix
[03:07:11] <FromDiscord> <Isofruit> First as a sidenote:↵Mixins solved my initial problem, which means I've resolved my silly import issue in that regard
[03:07:20] <FromDiscord> <Elegantbeef> Nice
[03:07:46] <FromDiscord> <Isofruit> Regarding imports... I'll need to setup a test project, It's not giving me absolute import paths whatsoever so I'm convinced it's something dumb on my end
[03:07:53] <FromDiscord> <creikey> In reply to @Elegantbeef "`killall -9 nim` if": back and fixed it had to restart windwos
[03:07:55] <FromDiscord> <creikey> (edit) "windwos" => "windows"
[03:08:15] <FromDiscord> <Elegantbeef> Ah
[03:08:19] <FromDiscord> <Elegantbeef> Figured it was winblows 😛
[03:08:41] <FromDiscord> <Elegantbeef> is your package `nimble develop`'d?↵(@Isofruit)
[03:08:52] <FromDiscord> <Elegantbeef> Atleast assuming you want absolute to the root
[03:09:17] <FromDiscord> <Isofruit> I... err I executed `nimble init nimstoryfont`
[03:09:38] <FromDiscord> <Elegantbeef> Yea that still doesnt throw it in your package list
[03:09:39] <FromDiscord> <Isofruit> which gave me a binary-executing project in a folder "nimstoryfont" with a src folder and a `nimstoryfont.nim` file
[03:09:59] <FromDiscord> <Elegantbeef> `nimble develop` currently symlinks it to your package registry
[03:09:59] <FromDiscord> <Elegantbeef> Which means it's "installed"
[03:10:17] <FromDiscord> <Isofruit> I read from the SO answer that "relative to main package" is possible,  I just never "got" how it determines the main package
[03:10:47] <FromDiscord> <Isofruit> Anyway, I'll try the nimble develop way, I think that'll make my life significantly easier
[03:11:30] <FromDiscord> <Elegantbeef> It should indeed
[03:11:59] <FromDiscord> <Isofruit> Ah, nimble develop doesn't really do it for you if you want to go for a binary, does it?
[03:12:20] <FromDiscord> <Isofruit> >        Tip: 1 messages have been suppressed, use --verbose to show them.↵>      Error: Cannot develop packages that are binaries only.
[03:12:27] <FromDiscord> <Elegantbeef> I guess not
[03:13:29] <FromDiscord> <Elegantbeef> So i guess relative paths for you
[03:13:40] <FromDiscord> <Isofruit> Living the relative life
[03:14:15] <FromDiscord> <Elegantbeef> Actually if you add a `config.nims` with `switch("path", "$projectDir/../src")` it should work
[03:14:19] <FromDiscord> <Isofruit> Ohhhh and with `bind` I can go into my generic and bind a function from another package there so I don't have to import that package everywhere I go
[03:14:27] <FromDiscord> <Elegantbeef> Indeed
[03:14:34] <FromDiscord> <Elegantbeef> Welcome to generic control!
[03:14:58] <FromDiscord> <Elegantbeef> I could be wrong about it working
[03:15:03] <FromDiscord> <Isofruit> Is there a best practice whether to write mixin at the top of a function or directly before it's being used?
[03:15:29] <FromDiscord> <Elegantbeef> No clue really, it's not a common thing to see 😀
[03:15:46] <FromDiscord> <Isofruit> I'm busy enough comprehending what's all happening and resolving that in my head, I'm running into a wall trying to contemplate what would be the most "readable"
[03:16:14] <FromDiscord> <Elegantbeef> I think at the top, might make the most sense as you can see what's getting mixin'd/bind'd
[03:16:25] <FromDiscord> <Isofruit> Yeh, makes sense to me
[03:32:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 260 seconds)
[03:32:11] <FromDiscord> <Isofruit> sent a code paste, see https://play.nim-lang.org/#ix=3Ktn
[03:33:38] <FromDiscord> <Elegantbeef> you can `export sqlite` if you need
[03:33:38] <FromDiscord> <Elegantbeef> What's the error without the import?
[03:35:19] <FromDiscord> <Isofruit> sent a long message, see http://ix.io/3Kts
[03:35:49] <FromDiscord> <Isofruit> At least I assume it#s trying to use std/sqlite3
[03:36:12] <FromDiscord> <Isofruit> (edit) "std/sqlite3" => "std/db_sqlite3"
[03:36:26] <FromDiscord> <Isofruit> (edit) "http://ix.io/3Kts" => "https://paste.rs/U5x"
[03:36:33] <FromDiscord> <Isofruit> (edit) "http://ix.io/3Ktv" => "https://paste.rs/clh"
[03:37:45] <FromDiscord> <Elegantbeef> `selectAll` is a generic aswell, so `bind select`
[03:37:46] <FromDiscord> <Isofruit> Actually, that first definition of select might be from norm/sqlite.... but then it should also recognize that dbConn is of type `DbConn` since norm/sqlite has a `using` statement inside of itself
[03:39:55] <FromDiscord> <Isofruit> sent a code paste, see https://play.nim-lang.org/#ix=3Kty
[03:40:16] <FromDiscord> <Isofruit> (edit) "https://play.nim-lang.org/#ix=3Kty" => "https://play.nim-lang.org/#ix=3Ktz"
[03:40:38] <FromDiscord> <Elegantbeef> What about with `bind select`?
[03:40:53] <FromDiscord> <Elegantbeef> I'm guessing no change
[03:41:19] <FromDiscord> <Isofruit> sent a long message, see http://ix.io/3KtA
[03:41:58] <FromDiscord> <Elegantbeef> Hmmm
[03:42:25] <FromDiscord> <Elegantbeef> Might be best to just add the `export sqlite` though i dont know
[03:43:17] <FromDiscord> <Isofruit> I'd love for `genericArticleRepository.nim` to provide the functions from norm/sqlite so that in all the other `.nim` files that will import that module, I'll no longe rhave to manually import `norm/sqlite`
[03:43:41] <FromDiscord> <Elegantbeef> I just told you to do that
[03:43:59] <FromDiscord> <Elegantbeef> You can export modules from modules
[03:44:02] <FromDiscord> <Isofruit> ... I really do notice it's 1 am once more
[03:44:16] <FromDiscord> <Isofruit> okay, let me read up a bit on export first, then I'll try that one
[03:44:30] <FromDiscord> <Elegantbeef> if you just do `export sqlite` in your one module it'll export all symbols from `sqlite` to other modules
[03:47:00] <FromDiscord> <Isofruit> Alright, and I can do export sqlite instead of export norm/sqlite because my import norm/[sqlite, model] statement has already brought "sqlite" into my scope, so I already have the module flying around and can thus just grab it by the name and export it
[03:47:13] <FromDiscord> <Elegantbeef> Correct!
[03:47:29] <FromDiscord> <Isofruit> (edit) "export sqlite" => "`export sqlite`" | "export norm/sqlite" => "`export norm/sqlite`" | "import" => "`import" | "model]" => "model]`"
[03:48:15] <FromDiscord> <Isofruit> Man, this feels like learning async coding again / learning how to use rxjs, head swirls a bit but slowly the individual bobs make sense
[03:48:37] <FromDiscord> <Isofruit> Thank you so much for the advice!
[03:49:04] <FromDiscord> <Elegantbeef> No problem
[03:53:13] <FromDiscord> <Isofruit> I wonder if writing C is like this, but with extra memory chaos on top
[03:53:32] <FromDiscord> <Elegantbeef> Nah C is simpler, no generics, no modules, no overloads
[03:53:40] <FromDiscord> <Elegantbeef> forgot the last no, which is no fun
[03:54:25] <FromDiscord> <Isofruit> .... overloads is the one thing that allows me to make the entire fetching of DB stuff through norm generic, I shudder to think if that weren't a thing
[03:54:35] <FromDiscord> <Isofruit> And the "no modules" thing seems like utter murder
[03:54:43] <FromDiscord> <Elegantbeef> you'd manually overload doing `doSomething_MyType`
[03:55:25] <FromDiscord> <Elegantbeef> I mean that's just how C is
[03:55:41] <FromDiscord> <Elegantbeef> Zig adds a few niceties ontop of what C has but is also still pretty primitive
[03:57:34] <FromDiscord> <Elegantbeef> random language facts no one asked for
[03:59:49] <FromDiscord> <Isofruit> It's nice to see, I've really not spent much time in languages that go this deep, I've made a living off of python, JS/TS, Groovy and Java so far, so getting to know more in that space is really interesting
[04:00:21] <FromDiscord> <Isofruit> I've, e.g. heard D so far only by name, really no idea what's behind it other than that it's also low level. I likely could look at it to get a deeper idea, but I've got my hands full with nim atm either wy
[04:00:23] <FromDiscord> <Isofruit> (edit) "wy" => "way"
[04:17:32] <FromDiscord> <Isofruit> Huh, decorating a piece of code with try catch through a template works pretty easily, nice
[04:31:59] <FromDiscord> <kaddkaka> sent a code paste, see https://play.nim-lang.org/#ix=3Ku2
[04:32:46] <FromDiscord> <kaddkaka> `for n in numbers:` yields immuatables
[04:32:54] <FromDiscord> <Elegantbeef> `.mitems`
[04:34:36] <FromDiscord> <kaddkaka> right, also, why does `pairs` seem to be optional? Is there a difference between `for i, n in pairs numbers:` and `for i, n in numbers:`?
[04:34:49] <FromDiscord> <Elegantbeef> `x, y` implicitly calls `pairs`
[04:34:54] <FromDiscord> <Elegantbeef> `x` calls `items`
[04:46:21] <FromDiscord> <kaddkaka> how does nim select between tuple unpacking and implicitly calling pairs? Is it noy possible to get implicit `pairs` for a sequence like `var numbers = @[(1, 2), (5, 7), (15, 18)]`?
[04:46:28] <FromDiscord> <kaddkaka> (edit) "noy" => "not"
[04:46:43] <FromDiscord> <Elegantbeef> `for (x, y) in numbers` if you want to unpack them
[04:46:50] <FromDiscord> <Elegantbeef> otherwise you'll get `index, tuple`
[04:49:32] <FromDiscord> <kaddkaka> oh right, not if I ust `mitems` though, then I can unpack without parentheses
[04:49:37] <FromDiscord> <kaddkaka> (edit) "ust" => "use"
[04:50:21] <FromDiscord> <kaddkaka> sent a code paste, see https://play.nim-lang.org/#ix=3Kub
[04:50:40] <FromDiscord> <kaddkaka> (edit) "https://play.nim-lang.org/#ix=3Kub" => "https://paste.rs/tCc"
[04:50:56] <FromDiscord> <kaddkaka> which seems surprising to me
[04:51:44] <FromDiscord> <Elegantbeef> The above works or doesnt?
[04:51:49] <FromDiscord> <kaddkaka> it works
[04:52:10] <FromDiscord> <kaddkaka> sent a code paste, see https://play.nim-lang.org/#ix=3Kud
[04:52:23] <FromDiscord> <Elegantbeef> Didnt expect it
[04:52:24] <FromDiscord> <Elegantbeef> Interesting
[04:55:04] <FromDiscord> <kaddkaka> sent a code paste, see https://play.nim-lang.org/#ix=3Kuf
[04:55:30] <FromDiscord> <Elegantbeef> Should be a proper error but it's not safe
[04:55:54] <FromDiscord> <kaddkaka> which is also strange, maybe? I'm too new Nimmer to know if I'm doing stupid stuff ^^'
[04:56:20] <FromDiscord> <kaddkaka> whats wrong/incorrect in the above snippet?
[04:57:51] <FromDiscord> <Elegantbeef> `mitems` yields `var (int, int)`
[04:58:30] <FromDiscord> <Elegantbeef> You cannot presently get what you want
[04:59:33] <FromDiscord> <ajusa> how do I parse an ISO8601 date? `"yyyy-MM-dd'T'HH:mm:ss'.'ffffff'Z'"`?
[05:02:25] <FromDiscord> <Elegantbeef> The issue is you'd need something to yield `(int, var int)`
[05:02:38] <FromDiscord> <Elegantbeef> sorry `(int, var (int, int))`
[05:02:57] <FromDiscord> <kaddkaka> In reply to @Elegantbeef "You cannot presently get": Hmm, ok, so no way to chain/combine mitems and pairs?
[05:02:59] <FromDiscord> <Elegantbeef> Which is not possible without `views`
[05:03:30] <FromDiscord> <kaddkaka> ok, I saw that being mentioned here before, is that a new language construct being worked on?
[05:04:03] <FromDiscord> <Elegantbeef> Yes presently it's experimental
[05:04:45] <FromDiscord> <kaddkaka> I would have expected `numbers.mitems.pairs` to maybe work, but pairs does accept an iterable I think (`expression 'mitems(numbers)' is of type: iterable[var (int, int)]`)
[05:05:05] <FromDiscord> <Elegantbeef> Checkout `std/enumerat`
[05:05:15] <FromDiscord> <Elegantbeef> `std/enumerate`
[05:06:35] <FromDiscord> <kaddkaka> (edit) "does" => "doesn't"
[05:09:37] <FromDiscord> <kaddkaka> Why does enumerate require `std/` ( `import std/enumerate`) while for example `import sequtils` works?
[05:11:10] <FromDiscord> <Elegantbeef> Legacy support, all stdlib should require `std` but for legacy support they dont
[05:12:46] <FromDiscord> <kaddkaka> ok
[05:18:06] <FromDiscord> <ajusa> In reply to @ajusa "how do I parse": oh god chrono doesn't support fractional timestamps in ISO8601, this is painful
[05:18:57] <FromDiscord> <kaddkaka> Looking at `enumerate`: I guess macros don't follow UFCS?
[05:19:32] <FromDiscord> <Elegantbeef> It's a for loop macro so no it does not
[05:22:48] <FromDiscord> <kaddkaka> Does that mean that other kinds of macros can support UFCS?
[05:22:57] <FromDiscord> <Elegantbeef> Yes
[05:33:46] *** Joins: bkay (~beshr@c-8b80e355.09-52-616c6b1.bbcust.telenor.se)
[05:34:39] <FromDiscord> <Alea> do you use .add() for sets?
[05:34:39] *** Quits: beshr (~beshr@user/beshr) (Ping timeout: 256 seconds)
[05:34:58] <FromDiscord> <Rosen> .incl() I think
[05:36:46] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[05:37:05] <FromDiscord> <kaddkaka> In reply to @Elegantbeef "Yes": Thanks for all the help, time to sleep 😴
[06:06:37] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[06:42:29] <nrds> <06Prestige99> Are there ways to have an error throw when some number is divided by zero, instead of returning infinity?
[06:43:10] <FromDiscord> <Rika> Huh I thought Nim did raise on divide by zero
[06:43:48] <nrds> <06Prestige99> So did i
[06:44:18] <nrds> <06Prestige99> https://play.nim-lang.org/#ix=3KuW
[06:44:49] <FromDiscord> <Rika> Ah that’s a constant probably because of that
[06:44:55] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Ping timeout: 256 seconds)
[06:45:04] <FromDiscord> <Rika> Even on let though huh
[06:45:21] <FromDiscord> <Rika> Dunno 😃
[06:45:28] <nrds> <06Prestige99> Threw me for a loop
[06:45:45] <FromDiscord> <Rika> Throw you a for loop? Okay
[06:45:52] <FromDiscord> <Rika> (It’s a joke)
[06:58:02] <nrds> <06Prestige99> Also was unaware we could not forward declare a template?
[06:59:03] <FromDiscord> <Elegantbeef> There is n oreason to
[06:59:16] <nrds> <06Prestige99> good point
[07:28:50] <FromDiscord> <creikey> sent a code paste, see https://play.nim-lang.org/#ix=3Kv7
[07:28:56] <FromDiscord> <creikey> why does parallel think that `spawn findWinLosses` is discarded?
[07:31:48] <FromDiscord> <Rika> Can you put this in a paste? I can’t read it because of the indent level
[07:33:00] <FromDiscord> <Rika> Ah I don’t see a problem here though I don’t use spawn often
[07:33:32] <FromDiscord> <Elegantbeef> I have a hypothesis so let's see 😀
[07:34:21] <FromDiscord> <Elegantbeef> It might be the assignment to a variable through `[]=`
[07:34:35] <FromDiscord> <creikey> I see parallel requires that it's an array/sequence indexed by integers
[07:34:35] <FromDiscord> <Rika> Yeah that’s one guess
[07:35:02] <FromDiscord> <creikey> I refactored it to be like that but parallel froze (some kind of race condition?) so I'm changing it to be spawn since parallel is experimental
[07:46:18] <FromDiscord> <creikey> sent a code paste, see https://play.nim-lang.org/#ix=3Kvt
[07:46:22] <FromDiscord> <creikey> how do I make it execute at the same time
[07:46:31] <FromDiscord> <Elegantbeef> `^` is blocking
[07:46:40] <FromDiscord> <creikey> right but while it's blocking for that shouldn't the other threads be executing?
[07:46:46] <FromDiscord> <creikey> or am I missing somethign
[07:46:48] <FromDiscord> <creikey> (edit) "somethign" => "something"
[07:47:01] <FromDiscord> <Elegantbeef> put a `sync()` after the first for loop
[07:47:51] <FromDiscord> <Elegantbeef> I havent used `spawn` or `parallel` so i'm just going off the examples and what i read
[07:47:53] <FromDiscord> <creikey> In reply to @Elegantbeef "put a `sync()` after": still happening one by one
[07:48:18] <FromDiscord> <creikey> the process is consuming 43% of 4 core 8 thread cpu and a lot of memory https://media.discordapp.net/attachments/371759389889003532/927053161317928980/unknown.png
[07:48:27] <FromDiscord> <creikey> memory might just be other stuff in the program though
[07:48:37] <FromDiscord> <creikey> well I mean it shouldn't be that much I dunno
[07:48:46] <FromDiscord> <creikey> maybe it's the garbage collector for each thread
[07:48:49] <FromDiscord> <Elegantbeef> References are deeply copied
[07:48:50] <FromDiscord> <creikey> of which 157 were spawned
[07:49:00] <FromDiscord> <creikey> In reply to @Elegantbeef "References are deeply copied": `findWinLosses(champ1: string, champ2: string, games: seq[Game])
[07:49:01] <FromDiscord> <creikey> (edit) "seq[Game])" => "seq[Game])`"
[07:49:02] <FromDiscord> <creikey> no refs
[07:49:03] <FromDiscord> <Elegantbeef> you can do `--gc:orc` after if that's concerning
[07:49:16] <FromDiscord> <creikey> seq isn't copied right
[07:49:18] <FromDiscord> <creikey> it's only read
[07:49:19] <FromDiscord> <creikey> (edit) "it's only read ... " 03added "from"
[07:49:31] <FromDiscord> <Elegantbeef> It hopefully isnt but idk
[07:50:50] <FromDiscord> <creikey> I guess I'll try a release build?
[07:50:54] <FromDiscord> <creikey> no idea what's going on
[07:51:02] <FromDiscord> <creikey> release build seems like multiple things are happening at once maybe
[07:51:04] <FromDiscord> <creikey> yeah
[07:51:10] <FromDiscord> <creikey> but it's only like two things
[07:51:27] <FromDiscord> <creikey> have to say not impressed with nim's thread pool so far
[07:51:56] <FromDiscord> <creikey> I'm definitely doing something wrong though
[07:52:06] <FromDiscord> <Yardanico> In reply to @creikey "have to say not": threadpool is kind of abandoned, so yes
[07:52:16] <FromDiscord> <creikey> In reply to @Yardanico "threadpool is kind of": only use `parallel:` or what?
[07:52:26] <FromDiscord> <Yardanico> parallel is a part of threadpool too and it's kind of abandoned as well :)
[07:52:38] <FromDiscord> <creikey> what is the new way of doing parallelism in nim that they've abandoned into
[07:52:51] <FromDiscord> <Yardanico> well you can always use the traditional threads way
[07:53:20] <FromDiscord> <Yardanico> current new things are arc/orc and they have shared heap, destructors, move semantics and other things, so threading is kind of reworked for them
[07:53:22] <FromDiscord> <Yardanico> e.g. https://github.com/nim-lang/threading
[07:53:35] <FromDiscord> <creikey> In reply to @Yardanico "current new things are": arc is that super performant gc right
[07:54:07] <FromDiscord> <Yardanico> https://nim-lang.org/blog/2020/10/15/introduction-to-arc-orc-in-nim.html and https://nim-lang.org/blog/2020/12/08/introducing-orc.html
[07:54:15] <FromDiscord> <Yardanico> and https://nim-lang.org/docs/destructors.html :)
[07:54:32] <FromDiscord> <creikey> wow a year ago and things still aren't stable?
[07:54:50] <FromDiscord> <Yardanico> well they are not 100% compatible with refc
[07:55:09] <FromDiscord> <Yardanico> orc is supposed to become default in 2.0 which will probably be the next release after 1.6, but I don't know for sure
[07:56:39] <FromDiscord> <Yardanico> but for most stuff ORC is already perfectly usable
[08:00:09] <FromDiscord> <Yardanico> also there's weave https://github.com/mratsim/weave, but seems like Status is making another lib which has some code from it (and mratsim seems like the one developing it mainly) - https://github.com/status-im/nim-taskpools
[08:00:19] <FromDiscord> <Yardanico> taskpools seems like it's pretty early in development though
[08:00:41] <FromDiscord> <creikey> weave is a work of art but idk if I want to add a nimble dependency
[08:03:52] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:15:21] <FromDiscord> <creikey> can nim thread procs take var arguments?
[08:15:50] <FromDiscord> <Elegantbeef> Nope
[08:16:42] <FromDiscord> <Elegantbeef> You'd need to pass a `ptr`
[08:16:46] <FromDiscord> <creikey> In reply to @Elegantbeef "Nope": so how can I get data from a thread
[08:16:50] <FromDiscord> <creikey> In reply to @Elegantbeef "You'd need to pass": I see
[08:17:09] <FromDiscord> <creikey> In reply to @Elegantbeef "You'd need to pass": I remember reading this somewhere on the threadpool docs but thought it was just for those not all threads
[08:17:17] <FromDiscord> <creikey> https://nim-lang.org/docs/threads.html this says nothinga bout that
[08:17:19] <FromDiscord> <creikey> (edit) "nothinga bout" => "nothing about"
[08:17:50] <FromDiscord> <Elegantbeef> Well `var T` isnt type valid outside of iterators and parameters
[08:17:58] <FromDiscord> <Elegantbeef> So `Thread[var int]` isnt valid
[08:18:15] <FromDiscord> <Elegantbeef> Dont know if it will be eventuall
[08:19:42] <FromDiscord> <Yardanico> In reply to @creikey "so how can I": channels or global variables + locks (with arc/orc)
[08:19:52] <FromDiscord> <creikey> ah yeah forgot about channels
[08:19:53] <FromDiscord> <Yardanico> also ptrs too but you need locks anyway
[08:20:09] <FromDiscord> <creikey> for ptrs you wouldn't need a lock if it's setting separate memory right?
[08:20:30] <FromDiscord> <Yardanico> if each thread gets separate memory location, then sure
[08:25:35] <FromDiscord> <creikey> In reply to @Yardanico "if each thread gets": new fun fact: this does not seem to be true
[08:25:40] <FromDiscord> <Yardanico> ?
[08:25:50] <FromDiscord> <creikey> sent a code paste, see https://play.nim-lang.org/#ix=3Kw2
[08:25:55] <FromDiscord> <creikey> ah wait
[08:26:00] <FromDiscord> <creikey> same thread object for both threds
[08:26:01] <FromDiscord> <creikey> (edit) "threds" => "threads"
[08:26:47] <FromDiscord> <creikey> no stacktrace or anything though just says execution failed
[08:29:19] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/B9A
[08:29:21] <FromDiscord> <Elegantbeef> With both `arc` and `refc`
[08:32:40] <FromDiscord> <creikey> sent a code paste, see https://paste.rs/Y89
[08:32:47] <FromDiscord> <creikey> I did
[08:50:32] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[08:58:30] <FromDiscord> <congusbongus> How can I check if homebrew is installed in nimscript?
[08:59:37] <FromDiscord> <Elegantbeef> `findExe`
[09:02:28] <FromDiscord> <congusbongus> `findExe("brew") != ""` works!
[09:05:43] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Remote host closed the connection)
[09:06:12] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[09:37:38] <FromDiscord> <Casey.McMahon> sent a code paste, see https://play.nim-lang.org/#ix=3Kx1
[09:38:16] <FromDiscord> <Elegantbeef> Do you need the `<>`?
[09:42:29] <FromDiscord> <Elegantbeef> You are sending a char through the uart right?
[09:43:32] <FromDiscord> <Casey.McMahon> usb serial
[09:43:55] <FromDiscord> <Casey.McMahon> Sorry, my usb got all screwed up, had to reboot my computer
[10:25:45] <FromDiscord> <Esther> Is it normal that windows defender complains about finish.exe in the nim zip from the website?
[10:26:07] <FromDiscord> <Elegantbeef> Ideal not, but it's "normal"
[10:26:24] <FromDiscord> <Esther> it's not a good look, hahah
[10:27:50] <FromDiscord> <Yardanico> if you are really really scared of windows defender doing false positives you might try https://github.com/nim-lang/nightlies/releases/tag/2021-12-14-version-1-6-48c62ca48bc1f0a0ff4bc891e720297b3e8e5c15
[10:27:53] <FromDiscord> <Yardanico> but yes it's just a false positive
[10:33:42] <FromDiscord> <Esther> alrighty, thanks
[10:53:37] *** Quits: thomasross (~thomasros@dyn-pppoe-142-51-227-74.vianet.ca) (Ping timeout: 240 seconds)
[12:45:37] *** Joins: Vladar (~Vladar@46.162.2.53)
[13:09:22] <FromDiscord> <dizzyliam> do either of the stdlib regex libraries compile the queries at compile-time?
[13:17:48] <FromDiscord> <Yardanico> no, they use pcre so the regexes are compiled at runtime
[13:18:06] <FromDiscord> <Yardanico> https://github.com/nitely/nim-regex is pure Nim and can compile regexes at compile time
[13:45:21] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[14:27:23] <FromDiscord> <kaddkaka> In reply to @glyh (Lyhokia) "I'm trying to create": How is it going with the treesitter grammar? According to [the manual](https://nim-lang.org/docs/manual.html#lexical-analysis-operators) `abc=>` is not an oeprator:↵"An operator is any combination of the following characters:"
[14:28:04] <FromDiscord> <kaddkaka> (edit) "characters:"" => "characters:"
[14:28:28] <FromDiscord> <kaddkaka> (edit) "In reply to @glyh (Lyhokia) "I'm trying to create": How is it going with the treesitter grammar? According to [the manual](https://nim-lang.org/docs/manual.html#lexical-analysis-operators) `abc=>` is not an oeprator:↵"An operator is any combination of the following characters:" => "sent a code paste, see https://play.nim-lang.org/#ix=3Kzi"
[14:28:56] <FromDiscord> <kaddkaka> (edit) "https://play.nim-lang.org/#ix=3Kzi" => "https://play.nim-lang.org/#ix=3Kzj"
[15:10:06] <NimEventer> New question by How2: nimble : Warning: Using project local deps mode, see https://stackoverflow.com/questions/70555624/nimble-warning-using-project-local-deps-mode
[15:27:10] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[15:35:25] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[15:42:50] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:44:53] <FromDiscord> <HJarausch (HJarausch)> Nim development on Android. Since a few weeks, if I build Nim development on Termux(Android), the build process succeeds but when I invoke Nim, it fails with loading.
[15:46:55] <FromDiscord> <Yardanico> is there any error?
[15:48:16] <FromDiscord> <HJarausch (HJarausch)> It can't load... /usr/lib/system.nim, since system.nim has been installed under ... /usr/lib/Nim as are all other files of Nim. How can I fix that the Nim compiler searches system.nim in the wrong place. Many thanks for a hint, Helmut
[15:59:50] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[16:03:25] *** Joins: Vladar (~Vladar@46.162.2.53)
[16:27:57] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[17:05:01] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:14:26] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[17:38:24] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[17:42:39] <FromDiscord> <demotomohiro> Did you build Nim from source on termux?
[17:46:06] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:51:49] <FromDiscord> <demotomohiro> Making symbolic link in the same way as Nim package in termux  might fix your problem.↵~ $ ls -l /data/data/com.termux/files/usr/bin/nim↵/data/data/com.termux/files/usr/bin/nim -> ../lib/nim/bin/nim
[17:54:16] *** Joins: neurocyte0132889 (~neurocyte@IP-185117068002.dynamic.medianet-world.de)
[17:54:16] *** Quits: neurocyte0132889 (~neurocyte@IP-185117068002.dynamic.medianet-world.de) (Changing host)
[17:54:16] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[17:54:44] <FromDiscord> <demotomohiro> usr/lib/nim/bin/nim search for system.nim in usr/lib/nim/lib
[18:08:24] *** Joins: PMunch (~PMunch@user/pmunch)
[18:08:37] *** Joins: arkurious (~arkurious@user/arkurious)
[18:38:56] *** neurocyte0132889 is now known as neurocyte
[18:40:17] <FromDiscord> <Isofruit> ... erm, question.↵So... I have a database containing hashed passwords among other things and I'm in the process of re-building my backend from using python (Django) to using nim (Prologue).↵Now what that also means is that I need to re-build for login purposes how I hash incoming passwords into hashes and compare them with what I have in my database
[18:40:36] <FromDiscord> <Isofruit> (edit) "I hash" => "Django hashes"
[18:47:21] <FromDiscord> <Isofruit> sent a long message, see http://ix.io/3KCT
[18:50:12] <FromDiscord> <enthus1ast> salt is usually concatinated to the input, eiter in front or back, for details i would read the django source
[18:50:16] <PMunch> Salt is basically just a little piece of random data appended or prepended to you password to make sure that the same password won't be hashed to the same thing
[18:50:31] <PMunch> So probably just try to add in on either end and run the hashing
[18:52:11] <FromDiscord> <planetis> how do i tell nim to search for dynamic library in the same directory as the executable?
[18:52:18] <FromDiscord> <Yardanico> that's OS-specific
[18:52:24] <FromDiscord> <Yardanico> on linux use LD_LIBRARY_PATH
[18:52:27] <PMunch> LD_LIBRARY_PATH=.
[18:52:35] <FromDiscord> <planetis> thank you
[18:58:24] <FromDiscord> <Isofruit> Thanks (to you as well PMunch)! Yeh I only knew that I needed a salt, not how exactly that was calculated in there. Thanks! I'll check out the source code
[18:58:49] <FromDiscord> <Isofruit> (edit) "Thanks (to you as well PMunch)!" => "Thanks!"
[18:59:01] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[18:59:03] *** Joins: neurocyte4 (~neurocyte@user/neurocyte)
[18:59:17] <FromDiscord> <Yardanico> In reply to @Isofruit "Thanks! Yeh I only": the main point of using the salt is that even if someone gets access to the hashes, they can't use existing rainbow tables to bruteforce them
[18:59:50] <FromDiscord> <Isofruit> Ohhh I had been wandering about that
[18:59:55] <FromDiscord> <Yardanico> and they can't really make a new rainbow table since each password has a different salt
[18:59:58] <FromDiscord> <Isofruit> (edit) "wandering" => "wondering"
[19:00:07] <FromDiscord> <Yardanico> so they have to do bruteforce the slower way
[19:00:42] <FromDiscord> <Isofruit> On the one hand, having to re-implement a lot of the stuff Django used to do for me is annoying.↵On the other, it's also pretty educational
[19:02:20] <PMunch> I thought Prologue had some login middleware already?
[19:03:06] <FromDiscord> <Isofruit> It has a basic auth middleware, I use JWTs↵So I glanced over that middleware and didn't really see anything in there that jumped out to my not-all-that-hashing-wise-trained eye
[19:03:15] <PMunch> But I guess it wouldn't be compatible to Djangos system..
[19:03:55] <FromDiscord> <enthus1ast> build it yourself and make pr to Prologues repo \:)
[19:04:35] <FromDiscord> <Isofruit> I'll build something alright.↵And then try to generalize it out
[19:04:51] <FromDiscord> <Isofruit> Damn, I do not consider myself competent enough to do this, but you gotta be the change you want to see in the world.
[19:07:45] <FromDiscord> <Isofruit> Wait a minute
[19:08:18] <FromDiscord> <Isofruit> If my Django hashes can contain +, / and = signs, that means they are not just hexadecimal
[19:09:10] <FromDiscord> <Isofruit> ... Yeah, I'm seeing the entire alphanumerical space + extra signs in there, wth is that encoded in
[19:14:08] <FromDiscord> <Isofruit> Does anyone have a different library or understands how to parse whatever they're computing into a string?
[19:14:16] <FromDiscord> <Yardanico> In reply to @Isofruit "... Yeah, I'm seeing": base64
[19:14:23] <FromDiscord> <Yardanico> https://nim-lang.org/docs/base64.html
[19:15:18] <FromDiscord> <Isofruit> Ah, fair, my brain was so settled on hex since the SHA256 lib offers a function for that
[19:16:27] <FromDiscord> <Isofruit> But yeah, this is what that library outputs, not sure what's going wrong there other than that the letter encoding doesn't seem to be working well https://media.discordapp.net/attachments/371759389889003532/927226340409749534/Screenshot_from_2022-01-02_16-45-20.png
[19:17:03] <FromDiscord> <Yardanico> you're trying to print binary data
[19:17:06] <FromDiscord> <enthus1ast> these are the plain bytes outputted to the terminal
[19:17:18] <FromDiscord> <Yardanico> that's why base64 is used in cases like this
[19:17:25] <FromDiscord> <Yardanico> to encode this binary data in printable ASCII characters
[19:17:56] <FromDiscord> <Isofruit> OH IT OUTPUTS the raw binaries... as string?
[19:18:14] <FromDiscord> <Yardanico> raw bytes, yes
[19:18:20] <FromDiscord> <Yardanico> it's a hash after all
[19:18:33] <FromDiscord> <Yardanico> the typical sha256 representation that you see is actually a hex representation of the bytes
[19:19:30] <FromDiscord> <Isofruit> Hmmmm
[19:20:42] <FromDiscord> <enthus1ast> and you should also do the repetitions on the binary data, then when you're done output as base64 and store in database
[19:21:15] <PMunch> How do I write a format for times.parse to handle a string like this: 2022-01-03T06:00:00.000+0000
[19:21:46] <FromDiscord> <enthus1ast> is this iso date?
[19:21:49] <PMunch> I tried yyyy-MM-ddTHH:mm:ss.fff+zzzz but it complains that Error: unhandled exception: 'T' is not a valid pattern [TimeFormatParseError]
[19:22:08] <FromDiscord> <enthus1ast> extra chars must be escaped
[19:22:11] <FromDiscord> <Yardanico> In reply to @PMunch "I tried yyyy-MM-ddTHH:mm:ss.fff+zzzz but": you need to escape T
[19:22:25] <FromDiscord> <Yardanico> > Other strings can be inserted by putting them in ''
[19:22:27] <FromDiscord> <Yardanico> so 'T'
[19:22:34] <PMunch> I tried to escape the T, then it said that '   ' was not a format
[19:23:05] <FromDiscord> <enthus1ast> https://github.com/nim-lang/Nim/blob/afa4bc34b41307c6c63e8c7c973afe295e9fedd8/lib/pure/times.nim#L2168
[19:23:33] <PMunch> Why the T and not the - and :?
[19:23:54] <FromDiscord> <Yardanico> "The following characters can be inserted without quoting them: : - ( ) / [ ] ,"
[19:23:56] <FromDiscord> <Yardanico> :P
[19:25:58] <FromDiscord> <Yardanico> also you should use ZZZ instead of zzzz without inserting + yourself
[19:26:03] <FromDiscord> <Yardanico> let dt = parse("2022-01-03T06:00:00.000+0000", "yyyy-MM-dd'T'HH:mm:ss'.'fffZZZ")
[19:29:21] <FromDiscord> <Isofruit> Hmmm
[19:29:36] <FromDiscord> <Isofruit> well, I'm getting a decent hash as output at least, which is really good!
[19:30:10] <FromDiscord> <Isofruit> I'm just not getting the correct hash =/↵I'll need to take a look at the django source again
[19:30:21] <FromDiscord> <Isofruit> `encode($computeSHA256(plainpw&salt, 180000))`↵That at least get's me where I want to go
[19:30:29] <FromDiscord> <Yardanico> do you require using 100% same hash as django ?
[19:30:30] <FromDiscord> <Yardanico> any reason why?
[19:31:14] <FromDiscord> <Yardanico> also obviously you will never get the same hash if you use random salts
[19:31:16] <FromDiscord> <Isofruit> Well, my current db is hosted via Django
[19:31:32] <FromDiscord> <Yardanico> oh you want to use an existing db
[19:31:35] <FromDiscord> <Isofruit> I effectively have around 20 entries that I need to be able to "recreate"
[19:31:56] <FromDiscord> <Isofruit> My usebase is like 6 people so that works out for me
[19:33:10] <FromDiscord> <Yardanico> also django is sha256 + PBKDF2
[19:33:11] <FromDiscord> <Yardanico> not just sha256
[19:34:00] <FromDiscord> <Isofruit> Wait that's a difference?
[19:34:03] <FromDiscord> <Yardanico> yes
[19:34:06] <FromDiscord> <Yardanico> https://github.com/cheatfate/nimcrypto can do both sha256 and pbkdf2
[19:34:06] <FromDiscord> <Isofruit> Dangit
[19:34:31] *** Joins: kenran (~kenran@2001:16b8:2b2c:e700:5566:4d6d:7b30:6bf3)
[19:35:37] <FromDiscord> <Isofruit> huh
[19:35:38] <FromDiscord> <Isofruit> er
[19:35:58] <FromDiscord> <Isofruit> I guess I'll brute force which combination of sha256, pbkdf2 and 18000 repetitions gives me my hashes ?
[19:36:12] <FromDiscord> <Isofruit> or get the django implementation, anyway
[19:36:23] <FromDiscord> <Isofruit> (edit) "or get ... the" 03added "a look at"
[19:37:13] <PMunch> Well that's just super confusing :P
[19:39:09] <FromDiscord> <enthus1ast> django can use multiple algos not just pbkdf2
[19:39:10] <FromDiscord> <enthus1ast> https://github.com/django/django/blob/b0d16d0129b7cc5978a8d55d2331a34cb369e6c7/django/contrib/auth/hashers.py
[19:39:18] <FromDiscord> <enthus1ast> also argon2
[19:39:23] <FromDiscord> <Yardanico> yes but pbkdf2 is the default
[19:39:45] <FromDiscord> <Isofruit> I Just double checked my settings.py file, I have not changed the default, it's pbkdf2
[19:39:56] <FromDiscord> <Isofruit> With sha 256
[19:40:20] <PMunch> Hmm, I wish there was a compare thing in times that could ignore parts of the DateTime..
[19:40:29] <PMunch> I guess I could just zero out those parts
[19:40:54] <FromDiscord> <Isofruit> Hm? You mean for parsing in?
[19:40:57] <FromDiscord> <Isofruit> Or for what?
[19:45:11] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[20:01:22] <NimEventer> New thread by Freeflow: Links to Std library lead to a 404, see https://forum.nim-lang.org/t/8761
[20:19:27] <FromDiscord> <Shiba>  https://media.discordapp.net/attachments/371759389889003532/927242194396528650/20220102_174846.JPG
[20:19:31] <FromDiscord> <Shiba> How does tht count as an error
[20:19:52] <nrds> <06Prestige99> ints can't be nil
[20:20:10] <FromDiscord> <Yardanico> In reply to @Shiba "": Nim value types are not "boxed"
[20:20:16] <FromDiscord> <Yardanico> ints are only numbers, they can't be nil
[20:20:37] <FromDiscord> <Shiba> Theb how i can check if an index in a tuble is nil
[20:20:44] <FromDiscord> <Shiba> (edit) "Theb" => "Then"
[20:20:49] <FromDiscord> <Yardanico> ??
[20:21:00] <FromDiscord> <Yardanico> can you explain what you want to do in this procedure?
[20:21:03] <FromDiscord> <Yardanico> what is it supposed to do
[20:21:11] <FromDiscord> <Yardanico> and please paste code as text or at least as screenshots (not as photos)\
[20:21:12] <FromDiscord> <Yardanico> (edit) "photos)\" => "photos)"
[20:22:09] <FromDiscord> <Shiba> Wait so myabe if i have a seq with @[2,5] and i wantvto check if index 3 of thta seq is nil or declared
[20:22:22] <FromDiscord> <Shiba> (edit) "wantvto" => "want to"
[20:22:26] <FromDiscord> <Yardanico> that's now how you do that in Nim
[20:22:30] <FromDiscord> <Yardanico> you check the length of the sequence
[20:22:55] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3KEg
[20:22:59] <FromDiscord> <Yardanico> myseq[2] is the third element in the seq
[20:24:06] <FromDiscord> <Shiba> I thought it works the same as lua,   😶
[20:24:27] <FromDiscord> <Yardanico> nim is not lua
[20:24:28] <FromDiscord> <Solitude> why would it
[20:24:32] <FromDiscord> <Shiba> But it's ok
[20:27:59] <FromDiscord> <apahl> @Yardanico: re your help yesterday with the LD_LIBRARY_PATH issue - I got it working.↵Had to play around a bit with the link paths for the compiler, but now I have a nice application using only Nim, marcomq's Webview and my bindings to the RDKit C++ toolkit:
[20:28:07] <FromDiscord> <apahl>  https://media.discordapp.net/attachments/371759389889003532/927244378576142346/unknown.png
[20:28:11] <FromDiscord> <Yardanico> wow, nice :)
[20:28:44] <FromDiscord> <apahl> Yes, I am quite happy as well. 😆
[20:52:25] <FromDiscord> <treeform> In reply to @Isofruit "Quick confirmation question regarding": Yes that is correct.
[20:53:04] <FromDiscord> <treeform> In reply to @Isofruit "Wait a minute, treeform": Yeah I am here most days. My work is 100% Nim and I am in this channel a lot.
[20:53:45] <FromDiscord> <treeform> In reply to @soundmodel "so I wonder if": Nimble can be very strange, I recommend to uninstall and reinstall what you need if stuff does not work or does not update.
[20:55:09] <FromDiscord> <treeform> In reply to @soundmodel "I also don't understand": Yeah that's just how templates work.
[20:56:36] <FromDiscord> <treeform> See here a slide from my upcoming talk: https://media.discordapp.net/attachments/371759389889003532/927251544565485638/unknown.png
[20:57:29] <FromDiscord> <treeform> Let me know if I can explain it better.
[20:57:58] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[20:58:16] <FromDiscord> <treeform> In reply to @apahl "": How do you generate the image of the molecule?
[21:02:55] <FromDiscord> <treeform> sent a code paste, see https://play.nim-lang.org/#ix=3KFe
[21:04:18] <FromDiscord> <apahl> @treeform : RDKit provides a toSVG method that I use. But the toolkit can also generate PNGs via cairo.
[21:04:44] <FromDiscord> <treeform> In reply to @enthus1ast "<@107140179025735680>\: what could it": This was this bug right? https://github.com/treeform/netty/issues/25
[21:06:07] <FromDiscord> <treeform> In reply to @Isofruit "God I love the": Thanks! I am glad you found jsony useful.
[21:07:11] <FromDiscord> <treeform> In reply to @apahl "<@!107140179025735680> : RDKit provides": Neat! RDKit looks like a huge project.
[21:08:26] *** Joins: Kit (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[21:08:57] *** Parts: Kit (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (WeeChat 3.0.1)
[21:10:22] <FromDiscord> <apahl> It definitely is. I use it a lot, mostly via the Python bindings, but I always wanted to try out some bindings to other compiled languages as well. And from everything I have tried so far, generating bindings from Nim works best.
[21:28:00] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:39:37] <NimEventer> New thread by Keks84: Help with metaprogramming, see https://forum.nim-lang.org/t/8762
[21:42:51] *** Quits: systemdsucks (~systemdsu@user/systemdsucks) (Remote host closed the connection)
[21:44:42] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[21:54:18] <FromDiscord> <Isofruit> What'll be funny is implementing some sort of system equivalent to Django's signal system
[22:07:14] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:08:49] *** Joins: thomasross (~thomasros@dyn-pppoe-142-51-227-74.vianet.ca)
[22:08:53] *** Quits: thomasross (~thomasros@dyn-pppoe-142-51-227-74.vianet.ca) (Remote host closed the connection)
[22:24:28] <FromDiscord> <kaddkaka> sent a code paste, see https://play.nim-lang.org/#ix=3KGT
[22:24:59] <FromDiscord> <kaddkaka> What's the canonical way of writing the above fold?
[22:25:49] <FromDiscord> <kaddkaka> (edit) "What's the canonical way" => "Are there other (preferred/reasonable) ways"
[22:28:14] <FromDiscord> <Solitude> In reply to @kaddkaka "Why the asymmetry between": https://nim-lang.org/docs/sequtils.html#allIt.t%2Cuntyped%2Cuntyped
[22:30:27] <FromDiscord> <kaddkaka> In reply to @Solitude "https://nim-lang.org/docs/sequtils.html#allIt.t%2Cu": ah so there was an option! Perhaps surprising that it uses `it` and not `a`.
[22:31:00] <FromDiscord> <Solitude> look at other thingIt templates
[22:31:45] <FromDiscord> <kaddkaka> I understand and guessed that it matches other `It` templates. But why is `foldl ` the odd one out
[22:32:43] <FromDiscord> <Solitude> rewrite foldl with `it` and `that`
[22:32:47] <FromDiscord> <Shiba> sent a code paste, see https://play.nim-lang.org/#ix=3KH6
[22:32:55] <FromDiscord> <huantian> I like `this` and `that` better :P
[22:33:00] <FromDiscord> <Shiba> (edit) "https://play.nim-lang.org/#ix=3KH6" => "https://play.nim-lang.org/#ix=3KH7"
[22:33:06] <FromDiscord> <Solitude> even better
[22:33:19] <FromDiscord> <kaddkaka> `sum` and `it`?
[22:33:37] <FromDiscord> <kaddkaka> `result` and `it`?
[22:33:38] <FromDiscord> <huantian> `cum` would probably be broader
[22:37:34] <FromDiscord> <kaddkaka> Suggestion `all` and `any `
[22:37:49] <FromDiscord> <kaddkaka> (edit) "`any `" => "`any` could have identity function as default proc."
[22:38:51] <FromDiscord> <Solitude> cool, why would you call them then
[22:41:36] <FromDiscord> <kaddkaka> @Solitude is the case?re a shorter way in that
[22:41:41] <FromDiscord> <kaddkaka> (edit) "the case?re" => "there" | "that" => "that?"
[22:41:45] <FromDiscord> <kaddkaka> (edit) "that?" => "that case?"
[22:42:35] <FromDiscord> <Solitude> what
[22:43:20] <FromDiscord> <Shiba> sent a code paste, see https://play.nim-lang.org/#ix=3KHf
[22:43:52] <FromDiscord> <Solitude> sorry, telepathy machine broke, wanna show actual error?
[22:44:55] <FromDiscord> <kaddkaka> In reply to @Solitude "what": My idea was to be able to reduce a seq like this:↵`any(@[true, true, false])`
[22:45:06] <FromDiscord> <Rosen> In reply to @Shiba "I don't understand why": what is `points`
[22:45:23] <FromDiscord> <kaddkaka> And skip the identity procedure `(a) => a`
[22:46:15] <FromDiscord> <Solitude> god gave you `allIt(it)` and you are trying to build hack on hacks
[22:46:40] <FromDiscord> <Solitude> you want to have as default argument something that only works on sequences of booleans?
[22:47:32] <FromDiscord> <Shiba> ?
[22:47:35] <FromDiscord> <kaddkaka> In reply to @Solitude "god gave you `allIt(it)`": That was the suggestion, that's how pythons `and` and `all` behave.
[22:47:58] <FromDiscord> <kaddkaka> (although they deal with truthy and falsey values)
[22:48:02] <FromDiscord> <Solitude> yes
[22:48:09] <FromDiscord> <Shiba> It's a 2d array so i need the index of each element to draw each tile
[22:48:24] <FromDiscord> <Shiba> (edit) "It's a 2d array so i need the index of each element to draw each tile ... " 03added "in it's position"
[22:48:27] <FromDiscord> <Solitude> In reply to @kaddkaka "(although they deal with": thats exactly why it doesnt make sense in nim
[22:48:46] <FromDiscord> <kaddkaka> could be 👍
[22:48:46] <FromDiscord> <Solitude> In reply to @Shiba "It's a 2d array": can you show error?
[22:49:16] <FromDiscord> <Shiba> ERROR: index -1 not in 0..49
[22:49:28] <FromDiscord> <Shiba> Index defect
[22:49:51] <FromDiscord> <el__maco> your array is empty?
[22:50:05] <FromDiscord> <kaddkaka> In reply to @Shiba "ERROR: index -1 not": But you are not even indexing anything in the snippet you pasted?
[22:53:29] <FromDiscord> <Rosen> To get a decent answer you need to provide enough context for people to understand what's wrong lmao. I'm assuming the dimensions of the array are 50x50? How are you accessing the array inside the loop? Is the type of `points` `array[50, array[50, int]]` or something else?
[22:54:32] <FromDiscord> <Shiba> In reply to @Rosen "To get a decent": Yes?
[22:55:28] <FromDiscord> <Rosen> the snippet you sent works fine, and that error has to do with accessing the array, so you didn't provide the context needed to understand the problem
[23:00:54] <FromDiscord> <Shiba> Ok fixed i was a little dump
[23:01:57] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[23:30:13] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[23:38:02] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[23:38:22] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[23:38:22] *** Joins: kayabaNerve_ (~kayabaNer@user/kayabanerve)
[23:39:58] *** Joins: dtomato2 (~dtomato@82-64-189-70.subs.proxad.net)
[23:41:54] *** Joins: jkl1337 (~jkl@user/jkl)
[23:41:59] *** Server sets mode: +nt 
[23:42:14] *** Joins: TechAspirer (~kayabaNer@user/kayabanerve)
[23:43:01] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[23:43:53] *** Quits: neurocyte4 (~neurocyte@user/neurocyte) (*.net *.split)
[23:43:54] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (*.net *.split)
[23:43:54] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[23:43:54] *** Quits: nac (~nac@user/nac) (*.net *.split)
[23:43:54] *** Quits: xet7 (~xet7@user/xet7) (*.net *.split)
[23:43:54] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (*.net *.split)
[23:43:54] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[23:43:54] *** Quits: anddam (~anddam@user/anddam) (*.net *.split)
[23:43:55] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (*.net *.split)
[23:43:55] *** dtomato2 is now known as dtomato
[23:44:53] *** Joins: perro_ (~perro@072-191-245-069.res.spectrum.com)
[23:45:31] *** Joins: neurocyte4 (~neurocyte@IP-185117068002.dynamic.medianet-world.de)
[23:45:35] *** Quits: perro (~perro@072-191-245-069.res.spectrum.com) (Ping timeout: 240 seconds)
[23:45:35] *** Quits: rb (~augh@theguntretort.com) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: kayabaNerve_ (~kayabaNer@user/kayabanerve) (Ping timeout: 240 seconds)
[23:45:36] *** Quits: mahlon_ (~mahlon@martini.nu) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: Goodbye_Vincent (cyvahl@freakshells.net) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: mal`` (~mal``@static.38.6.217.95.clients.your-server.de) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: nac6 (~nac@user/nac) (Ping timeout: 240 seconds)
[23:45:37] *** Quits: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com) (Ping timeout: 240 seconds)
[23:45:38] *** Quits: neurocyte4 (~neurocyte@IP-185117068002.dynamic.medianet-world.de) (Changing host)
[23:45:38] *** Joins: neurocyte4 (~neurocyte@user/neurocyte)
[23:45:57] *** Quits: kenran (~kenran@2001:16b8:2b2c:e700:5566:4d6d:7b30:6bf3) (Ping timeout: 240 seconds)
[23:46:00] *** Joins: rwb (~augh@theguntretort.com)
[23:46:07] *** Joins: Onionhammer (~onionhamm@23-88-146-29.fttp.usinternet.com)
[23:46:08] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[23:46:13] *** Joins: nac (~nac@user/nac)
[23:47:12] *** Joins: mahlon_ (~mahlon@martini.nu)
[23:47:15] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (*.net *.split)
[23:47:15] *** Quits: NimBot (~NimBot@mail.nim-lang.org) (*.net *.split)
[23:47:16] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[23:47:16] *** Quits: syl (~z@user/syl) (*.net *.split)
[23:50:17] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[23:52:44] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[23:53:23] *** Quits: xiamx (~xiamx@2001:470:69fc:105::1:5692) (Ping timeout: 250 seconds)
[23:54:00] *** Joins: nisstyre (~wes@user/nisstyre)
[23:54:45] *** Quits: kenran (~kenran@2001:16b8:2b2c:e700:5566:4d6d:7b30:6bf3) (Quit: WeeChat info:version)
[23:55:46] *** Joins: mal`` (~mal``@static.38.6.217.95.clients.your-server.de)
[23:56:13] *** Server sets mode: +nt 
[23:57:17] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
