[00:26:29] *** Joins: lumo_e (~enrico@2001:b07:5d38:4002:4608:be95:709d:5710)
[00:31:11] *** Quits: lumo_e (~enrico@2001:b07:5d38:4002:4608:be95:709d:5710) (Ping timeout: 268 seconds)
[00:34:00] *** Joins: lumo_e (~enrico@2001:b07:5d38:4002:d2bd:6cc2:c699:15a4)
[00:41:45] <FromDiscord> <Isofruit> sent a code paste, see https://play.nim-lang.org/#ix=3K7d
[00:42:23] <FromDiscord> <Isofruit> (edit) "https://play.nim-lang.org/#ix=3K7d" => "https://play.nim-lang.org/#ix=3K7f"
[01:59:21] *** Quits: lumo_e (~enrico@2001:b07:5d38:4002:d2bd:6cc2:c699:15a4) (Ping timeout: 250 seconds)
[02:00:05] <FromDiscord> <Isofruit> God why is it such a massive pain to deserialize DateTime into json
[02:40:54] *** Joins: xet7 (~xet7@user/xet7)
[02:46:14] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c4c6:c62c:ab52:6d38) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:03:31] <FromDiscord> <Elegantbeef> Really though you shouldn't use json and just use `format` from times
[03:03:32] <FromDiscord> <Elegantbeef> @Isofruit\: cause `timezone`  has procedures, you can quickly use `jsonutils` to serialize it https://play.nim-lang.org/#ix=3K7K
[03:03:32] <FromDiscord> <Elegantbeef> Since timestamps are standard
[03:17:32] <FromDiscord> <Isofruit> sent a code paste, see https://play.nim-lang.org/#ix=3K7P
[03:18:36] <FromDiscord> <Isofruit> I'm sorely tempted to just move DateTime back into "string" and deal with the hassle that creates elsewhere if it allows me to avoid custom serializers
[03:19:04] <FromDiscord> <Isofruit> (edit) "move DateTime back into "string"" => "use `string` instead of `DateTime` in th model"
[03:25:40] <FromDiscord> <Elegantbeef> I mean https://play.nim-lang.org/#ix=3K7Q works
[03:26:16] <FromDiscord> <Elegantbeef> The only issue is you need to handle the times not set, but that's easy in the serializer
[03:27:17] <FromDiscord> <Isofruit> One sec, if I can get this to work I'll be so effin relieved
[03:36:11] <FromDiscord> <Isofruit> God
[03:36:35] <FromDiscord> <Isofruit> Effin dammit, I have a problem but I'm getting fairly obvious vibes I don't understand my problem, one minute
[03:48:09] <FromDiscord> <Isofruit> In reply to @Elegantbeef "The only issue is": First of all, thanks! That does work!↵So if I'm understanding this right, any overload I write for toJsonHook and fromJsonHook is automatically applied if they are imported?
[03:48:24] <FromDiscord> <Isofruit> (edit) "imported?" => "imported and a given datatype that needs to be serialized fits?"
[03:57:58] <FromDiscord> <konsumlamm> `setLen` (for `seq`s) guaranteed to initialize the new elements? the documentation doesn't mention anything about that, but i'd assume so?
[03:58:06] <FromDiscord> <konsumlamm> is
[03:58:14] <PMunch> @Isofruit, that's pretty much it, yes
[03:58:35] <PMunch> @konsumlamm, it initialises them to zero, like normal in Nim
[04:06:57] <FromDiscord> <konsumlamm> what is the expected behaviour for shifting a negative amount?
[04:07:14] <FromDiscord> <konsumlamm> i'm getting 0, or is this undefined/backend-dependent?
[04:07:15] <PMunch> Like shl -1?
[04:07:18] <FromDiscord> <konsumlamm> ye
[04:07:49] <PMunch> Hmm, tbh I have no idea
[04:09:27] <PMunch> Hmm, looks like it would be backend dependent
[04:10:16] <PMunch> If you look in `compiler/ccgexprs.nim` at line 639 you can see the implementation for the shift left magic
[04:11:24] <FromDiscord> <konsumlamm> hmm k, so it's UB
[04:11:30] <FromDiscord> <konsumlamm> (with the C backend)
[04:11:47] <PMunch> And `compiler/jsgen.nim` for the JS backend
[04:16:47] <FromDiscord> <Isofruit> Head -> Desk
[04:17:41] <FromDiscord> <Isofruit> That moment when you realize your database stores Dates and Times as a string, but what `norm` believes you've got stored is a float... for some reason... no idea why. Are times stored in floats in some formats? I thought it was strings and integers?
[04:18:19] <FromDiscord> <Isofruit> (edit) "string," => "string (`"yyyy-MM-dd HH:mm:ss'.'ffffff"` format),"
[04:18:27] <FromDiscord> <Elegantbeef> unix float?
[04:18:37] <PMunch> floats for seconds and sub-second precision in unix timestamps
[04:19:38] <FromDiscord> <Isofruit> Ah, the sub second precision is likely why norm assumes this, alright, now to figure out if norm has something that can deal with my format or whether I have to custom do sth
[04:22:37] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[04:38:50] <FromDiscord> <Isofruit> I have to do something custom and I also messed up around half a year ago when I updated a few things and by doing so introduced a set of entries that have a differing datetime-string-format (they don't have the milliseconds)
[04:38:57] <FromDiscord> <Isofruit> shoooooot meeeeee
[04:43:59] <FromDiscord> <mattrb> In reply to @Elegantbeef "Yea do update me": Looks like the `{.packed.}` pragma adds `packed` attribute in the generated c code `struct attribute((packed)) tyObject_DMACNT2cV7m9bJ6vy1I9c3lXofHjQsg`. Otherwise, it generates identical code. I don't know enough about c to tell why `packed` is required when every field defines a number of bits, though. Guess I need to look at the asm now lol
[04:44:19] <FromDiscord> <mattrb> Unless anyone happens to know this offhand :p
[04:45:30] <FromDiscord> <Isofruit> Semantics question:↵Norm does this ↵`func to(dbVal; T: typedesc[string]): T = dbVal.s`↵I have not ever yet seen a semicolon in between parameters (nor have I seen the keyword func yet for that matter but I assume that's just one of those dynamic dispatcher keywords and leave it at that), how can that compile?
[04:48:11] <FromDiscord> <Elegantbeef> That shouldnt compile
[04:48:40] <FromDiscord> <Elegantbeef> `;` in proc headers is the same as as comma but just more clear
[04:48:58] <FromDiscord> <Elegantbeef> `proc doThing(a: int, b: float)` == `proc doThing(a: int; b: float)`
[04:49:18] <FromDiscord> <Isofruit> I found some documents that I'm not sure are official , "https://docs.w3cub.com/nim/manual.html", they talk about that the `using` keyword might have sth to do with this
[04:49:37] <FromDiscord> <Elegantbeef> Ah yes they're using the using keyword then
[04:49:46] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#statements-and-expressions-using-statement
[04:50:00] <FromDiscord> <Elegantbeef> That's the official language manual the first is a weird thing
[04:50:25] <FromDiscord> <Isofruit> Ohhhhh
[04:51:16] <FromDiscord> <Isofruit> Man, got to say, I love the fact that this language is actually somewhat comprehensive to me, but man do I wish I had like 3 weeks off work to get more consecutive time that I could sink into this
[05:04:17] <FromDiscord> <Isofruit> Can you redefine an existing func from a library to get it to use your own func instead?
[05:04:37] <FromDiscord> <Elegantbeef> Only if it's defined in such a way using generics/templates
[05:05:21] <FromDiscord> <Isofruit> I might just be shit out of luck, this smells like a database migration that I'll have to do to make the db compatible with norm
[05:07:10] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3K8o
[05:07:49] <FromDiscord> <Elegantbeef> the comment should say "to only instantiate once"
[05:08:02] <FromDiscord> <Elegantbeef> Which basically means `doOtherThing` is only overridable once per type
[05:08:37] <FromDiscord> <Elegantbeef> But using a template will overide it for every call using the one in scopep
[05:08:45] <FromDiscord> <Elegantbeef> Doesnt help you one bit presently
[05:09:07] <FromDiscord> <Isofruit> Give me a second to check what's happening here, I haven't touched templating yet (I know the high-level concept, never actually used it)
[05:09:54] <FromDiscord> <Elegantbeef> The only special thing is the `mixin` statement which says "We will use any procedure at callsite when we call this template"
[05:10:14] <FromDiscord> <Elegantbeef> It forces the symbol to be open is the technical term
[05:10:27] <FromDiscord> <Isofruit> I'm perfectly fine to generally override it, effectively the way norm did it is wrong for my project so I wouldn't want "their" way of converting `DateTime` from database-value into `DateTime`  to ever happen ever
[05:11:04] <FromDiscord> <Elegantbeef> Generally i just suggest to fork the repo when there are differences and possibly make a PR behind a flag
[05:15:14] *** Joins: oisota (~oisota@user/oisota)
[05:15:33] <FromDiscord> <Isofruit> I feel neither confident, nor competent enough for the PR strategy, particularly as I don't see a general solution to this one.↵There's at least dozens of ways you could store a datetime in your database and you can't really cover them all.↵The default behaviour they chose wasn't a bad one, just doesn't mesh well with how Django stores datetimes in sqlite by default
[05:15:45] <FromDiscord> <Isofruit> (edit) "I feel neither confident, nor competent enough for the PR strategy, particularly as I don't see a general solution to this one.↵There's at least dozens of ways you could store a datetime in your database and you can't really cover them all.↵The default behaviour they chose wasn't a bad one, just doesn't mesh well with how Django stores datetimes in sqlite by default ... " 03added "(That's how I initially created the databas
[05:16:25] <FromDiscord> <Elegantbeef> I have to look at the Norm API now to see
[05:16:39] <FromDiscord> <Isofruit> One sec, let me make your life easier
[05:17:36] <FromDiscord> <Isofruit> sent a code paste, see https://play.nim-lang.org/#ix=3K8r
[05:17:45] <FromDiscord> <Isofruit> (edit) 
[05:18:21] <FromDiscord> <Elegantbeef> Ah you want to see a cheat way to define your own type?
[05:18:23] <FromDiscord> <Isofruit> (edit) "https://play.nim-lang.org/#ix=3K8r" => "https://play.nim-lang.org/#ix=3K8s"
[05:18:31] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=
[05:18:34] <FromDiscord> <Elegantbeef> Shit 😀
[05:18:35] <FromDiscord> <Isofruit> (edit) "https://play.nim-lang.org/#ix=3K8s" => "https://play.nim-lang.org/#ix=3K8r"
[05:18:47] <FromDiscord> <Elegantbeef> There we go
[05:18:50] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3K8t
[05:19:07] <FromDiscord> <Elegantbeef> Now just implement the above and use the `MyDateTime` whenever you'd use `DateTime` and you're golden
[05:19:08] <FromDiscord> <Isofruit> Nah, more like I want the DateTime type (I just defined how to convert that to json and possibly needs it utils down the line)
[05:19:38] <FromDiscord> <Elegantbeef> That's the point of the above it allows you to use your own procs instead of the Norm provided
[05:19:48] <FromDiscord> <Isofruit> ideally I'd have a type that is only distinct for norm, but that would allow me to still use Datetime functions from the times lib
[05:20:15] <FromDiscord> <Elegantbeef> And you still can you just do `myDateTimeVal.DateTime.timesProcName`
[05:20:24] <FromDiscord> <Elegantbeef> Or you can borrow them from times
[05:20:59] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#distinct-type-modeling-currencies if you want to read more about `distinct`s
[05:21:02] <FromDiscord> <Isofruit> You can borrow functions? Sorry, it's really late where I'm at, I only know the term from Rust where it refers to memory borrowing
[05:21:23] <FromDiscord> <Isofruit> (Not that I'm any good at Rust mind you)
[05:21:28] <FromDiscord> <Elegantbeef> Well this is a distinct so "borrow" means to use the distinct base's functions
[05:21:49] <FromDiscord> <Elegantbeef> The above `MyDateTime` is internally `DateTime` but is a different type to the type system
[05:22:02] <FromDiscord> <Elegantbeef> So you do need to convert it or borrow from the base to use the functions from times
[05:22:51] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3K8u
[05:23:15] <FromDiscord> <Elegantbeef> Anyway use the distinct method and either borrow/wrap procs you need
[05:23:32] <FromDiscord> <Isofruit> That sounds way cleaner than any idea I've had so far, I'll try it
[05:23:44] <FromDiscord> <Isofruit> Though I'm not sure I'll get that done tonight, I likely should sleep at some point
[05:24:29] <FromDiscord> <Elegantbeef> It does suck that they didnt make it easier to override the time functions but alas
[05:25:15] <FromDiscord> <Elegantbeef> Given the way it's done you could make a PR which has a global function pointer for DateTime
[05:25:32] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[05:25:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:26:24] <FromDiscord> <Isofruit> I'm so far incredibly happy with the developer experience overall though
[05:26:34] <FromDiscord> <Isofruit> Yeah, this particular problem sucks a bit
[05:26:46] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3K8v
[05:27:12] <FromDiscord> <Elegantbeef> It's a non invasive PR imo, though YMMV
[05:27:41] <FromDiscord> <Elegantbeef> I guess it could just be `proc():string`
[05:28:07] <FromDiscord> <Elegantbeef> Or just a string 😛
[05:28:48] <FromDiscord> <Elegantbeef> the dbValue would be a proc certainly
[05:29:32] <FromDiscord> <Elegantbeef> "This has been another episode of beef's inane ramblings"
[05:31:55] <FromDiscord> <Isofruit> I'll try to parse this tomorrow, my brain shut down when it encountered that I apparently can't borrow time's `now()` for `MyDateTime`
[05:32:37] <FromDiscord> <Elegantbeef> You cant borrow stuff like that
[05:32:51] <FromDiscord> <Elegantbeef> you'd make a `proc now(): MyDateTime = MyDateTime(times.now())`
[05:37:03] <FromDiscord> <Isofruit> Yeh, tomorrow me's problem... or maybe even for the new year 😄
[05:37:10] <FromDiscord> <Isofruit> Thanks for the support !
[05:37:29] <FromDiscord> <Elegantbeef> No problem
[05:42:18] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[05:42:36] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:52:40] *** Joins: thomasross (~thomasros@dyn-pppoe-142-51-227-74.vianet.ca)
[06:08:17] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:23:13] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[06:44:04] *** Joins: rockcavera (~rc@192.12.112.96)
[06:44:04] *** Quits: rockcavera (~rc@192.12.112.96) (Changing host)
[06:44:04] *** Joins: rockcavera (~rc@user/rockcavera)
[08:26:04] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:28:05] <FromDiscord> <Zonifer> Hey everyone! Just started to learn nim and I had a quick question. I'm working on building a basic http server and I was curious what `{.async.}` is in `proc cb(req: Request) {.async.} =` would it be the return type?
[08:28:21] <FromDiscord> <Yardanico> In reply to @Zonifer "Hey everyone! Just started": that's a pragma
[08:28:35] <FromDiscord> <Yardanico> pragmas are generic annotations in nim that can be used for different things
[08:28:42] <FromDiscord> <Yardanico> https://nim-lang.org/docs/manual.html#pragmas
[08:28:57] <FromDiscord> <Yardanico> And specifically about async - https://nim-lang.org/docs/asyncdispatch.html#asynchronous-procedures
[08:29:16] <FromDiscord> <Zonifer> In reply to @Yardanico "that's a pragma": Cool thanks for the link! I'll read up 🙂
[10:04:16] <FromDiscord> <macintacos> Just want to make sure I'm not doing something very-obviously wrong before I open an issue or something, because I'm new to Nim. I'm trying out the very first basic example in the Testament docs (https://nim-lang.github.io/Nim/testament.html) and it doesn't seem to work at all. Running on macOS, v 1.6.2 https://media.discordapp.net/attachments/371759389889003532/926362600730689616/unknown.png
[10:09:46] <FromDiscord> <macintacos> If there's something wrong with my setup, that's fine, but I must say that error message is a tad puzzling. wish it was a bit more descriptive about the exact path it's looking for instead of what seems to be a placeholder path value
[10:13:54] <FromDiscord> <Elegantbeef> @macintacos\: what does `testament run` do?
[10:14:40] <FromDiscord> <macintacos> sent a code paste, see https://play.nim-lang.org/#ix=3Ka4
[10:22:33] <FromDiscord> <Elegantbeef> I've never used testament directly so i do not know
[10:23:07] <FromDiscord> <Elegantbeef> seems it wants the folder name
[10:23:19] <FromDiscord> <Elegantbeef> so like `testament tests`
[10:29:37] *** Joins: ayko-chan (~ayko-chan@178.132.170.105)
[10:29:49] <FromDiscord> <leorize> unfortunately testament is one of the tool that is not tested for use with anything that is not the nim compiler
[10:30:33] <FromDiscord> <leorize> to deal with this problem, put your test in `tests/<category name>/test0.nim` relative to the directory where you call testament
[10:31:07] <ayko-chan> how can i get Ctrl+key keys from a terminal in nim?
[10:33:23] <FromDiscord> <Elegantbeef> Dont they just come in as `char` from `getCh` and similar?
[10:35:17] *** Quits: thomasross (~thomasros@dyn-pppoe-142-51-227-74.vianet.ca) (Ping timeout: 240 seconds)
[10:56:33] <FromDiscord> <Rika> Kinda yes
[10:56:42] <FromDiscord> <Rika> Afaik they emit as escape codes
[10:56:50] <FromDiscord> <Rika> Rather control codes
[10:58:23] <ayko-chan> for example Ctrl-H gives aschi 8 that is BS aka. Backspace
[10:58:29] <ayko-chan> ok thx
[11:01:35] <FromDiscord> <Rika> https://en.m.wikipedia.org/wiki/ANSI_escape_code
[11:01:39] <FromDiscord> <Rika> Seems to be very helpful
[11:15:48] <FromDiscord> <fakubishes> #csindustrylounge\:nerdsin.space↵recently started aimed at people in software indstury career questions industry questions thoughts gossip etc
[11:18:22] <FromDiscord> <Rika> What
[11:19:32] <FromDiscord> <Elegantbeef> Matrix spam
[11:23:38] <FromDiscord> <Yardanico> Nice to see Nim being tried on retro computers, one of the advantages of having a C backend :)
[11:23:39] <FromDiscord> <Yardanico> https://eab.abime.net/showthread.php?t=94213
[11:23:45] <FromDiscord> <Yardanico> https://www.atari-forum.com/viewtopic.php?t=39930
[11:23:57] <FromDiscord> <Yardanico> just found a few
[11:24:47] <FromDiscord> <Yardanico> Ah I actually forgot that Nim has both of these in the platform list, but still
[12:08:54] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[12:19:22] <ayko-chan> can a 2Dseq be printed without the [] and "" ?
[12:20:58] <FromDiscord> <Rika> What?
[12:21:15] <FromDiscord> <Rika> You will need to make a custom $ proc for it I assume
[12:26:41] <FromDiscord> <evoalg> I don't understand, seq's aren't displayed with "" anyway?
[12:37:31] <FromDiscord> <evoalg> like this? https://play.nim-lang.org/#ix=3KaK
[12:38:36] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c4c6:c62c:ab52:6d38)
[13:06:51] <FromDiscord> <NOP0 (NOP0)> Checking out nim again after some years absence. Im confused about what to use, there's nim and there's nimskull. What's the difference? Thanks
[13:07:46] <FromDiscord> <Yardanico> nimskull is not related to nim in any way, it's a separate project by some people that are not happy with the main repository and development progress
[13:08:20] <FromDiscord> <Yardanico> just use Nim itself unless you have some specific issues that are fixed in nimskull
[13:08:39] <FromDiscord> <haxscramper> I wouldn't go as far as saying that it is not related "in any way", but if you want to just use then you should probably go with nim right now
[13:08:46] <FromDiscord> <haxscramper> (edit) "right now" => "for the time being"
[13:09:03] <FromDiscord> <Yardanico> yeah, I meant that it's not directly affiliated with Nim
[13:11:05] <FromDiscord> <NOP0 (NOP0)> Ok, so which one is more popular, I'm concerned about learning nim if nimskull is the future . Sorry if this is stupid questions or if I'm stepping on someone's toes.
[13:11:23] <FromDiscord> <Solitude> nim
[13:11:43] <FromDiscord> <Yardanico> just use nim
[13:12:17] <FromDiscord> <haxscramper> nimskull is not exactly ready for "users" anyway, we are busy fixing decade of the tech debt mainline has
[13:13:10] <FromDiscord> <NOP0 (NOP0)> Tech debt, what is it. Will it impact my code?
[13:13:35] <FromDiscord> <Solitude> maybe
[13:14:40] <FromDiscord> <haxscramper> `<insert default rant here>` most likely not at the start, so if you want to just use nim you can go with the mainline compiler and don't worry about implications
[13:14:56] <FromDiscord> <haxscramper> I mean it works, just not as good as I think it should
[13:16:38] <FromDiscord> <NOP0 (NOP0)> Ok. Theres some issues. I see. Thanks people 🙂
[13:31:46] <ayko-chan> can i use getch but without stoping the app for input?
[13:32:09] <FromDiscord> <Yardanico> you'll need to use threads for that
[13:32:19] <FromDiscord> <Yardanico> so that you do your work in the main thread and wait for the input in another
[13:35:24] <ayko-chan> sed
[13:41:13] <FromDiscord> <rforcen (roberto forcen)> how to compile nim from source on a 2GB SBC?
[13:42:01] <FromDiscord> <Yardanico> i think 2gb RAM is enough
[13:42:08] <FromDiscord> <Yardanico> to compile nim from source
[13:42:12] <FromDiscord> <Yardanico> @rforcen what architecture btw?
[13:42:17] <FromDiscord> <Yardanico> we have nightlies for quite a lot of architectures
[13:43:55] <FromDiscord> <rforcen (roberto forcen)> arm
[13:44:27] <NimEventer> New thread by Rforcen: Compiling nim from source on low memory SBC, see https://forum.nim-lang.org/t/8757
[13:44:30] <FromDiscord> <rforcen (roberto forcen)> issues an error & abort
[13:45:19] <FromDiscord> <Yardanico> what arm specifically?
[13:45:41] <FromDiscord> <rforcen (roberto forcen)> also tried on a 1gb rpi3b\: Linux asd 5.4.83-v7+ #1379 SMP Mon Dec 14 13\:08\:57 GMT 2020 armv7l GNU/Linux
[13:46:00] <FromDiscord> <rforcen (roberto forcen)> armv7l
[13:46:09] <FromDiscord> <Yardanico> https://github.com/nim-lang/nightlies/releases/tag/2021-12-14-version-1-6-48c62ca48bc1f0a0ff4bc891e720297b3e8e5c15
[13:46:14] <FromDiscord> <Yardanico> just grab https://github.com/nim-lang/nightlies/releases/download/2021-12-14-version-1-6-48c62ca48bc1f0a0ff4bc891e720297b3e8e5c15/nim-1.6.1-linux_armv7l.tar.xz from there
[13:46:19] <FromDiscord> <Yardanico> they're statically linked and all that
[13:47:02] <FromDiscord> <rforcen (roberto forcen)> just downloading & trying...
[13:48:00] <FromDiscord> <rforcen (roberto forcen)> nope\: nim\: ELF 64-bit LSB executable, ARM aarch64, version 1 (SYSV), statically linked, with debug\_info, not stripped
[13:48:28] <FromDiscord> <rforcen (roberto forcen)> required \: /bin/ls\: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-armhf.so.3, for GNU/Linux 3.2.0, BuildID[sha1]=67a394390830ea3ab4e83b5811c66fea9784ee69, stripped
[13:48:50] <FromDiscord> <Yardanico> ??
[13:48:55] <FromDiscord> <Yardanico> not sure what's the error
[13:49:46] <FromDiscord> <rforcen (roberto forcen)> trying w/7l...
[13:49:54] <FromDiscord> <Yardanico> wait, so did you download aarch64? i gave you a link to the armv7l one
[13:49:56] <FromDiscord> <Yardanico> those are different
[13:50:07] <FromDiscord> <Yardanico> armv7l binaries should usually work on aarch64 but not the other way
[13:50:20] <FromDiscord> <Yardanico> kind of like i386 and amd64
[13:50:55] <FromDiscord> <rforcen (roberto forcen)> yes!, the 7l works fine, thanx
[13:51:10] <FromDiscord> <Rika> In reply to @ayko-chan "can i use getch": What does this exactly mean? You want it to be non blocking?
[13:51:18] <FromDiscord> <Yardanico> also those nightlies are statically linked with musl so they don't really have any dependencies by themselves
[13:53:48] <ayko-chan> i want that getc() dosent wait for user input but if the key is pressed when getch() is running it gets the char
[13:53:53] <FromDiscord> <rforcen (roberto forcen)> now trying in a Linux mini 5.5.0-rc6-aml-s9xxx #rc1.037 SMP PREEMPT Wed Feb 5 15\:16\:17 MSK 2020 aarch64 aarch64 aarch64 GNU/Linux
[13:54:30] <FromDiscord> <Yardanico> yeah for that you'd want to get aarch64
[13:54:47] <FromDiscord> <Rika> In reply to @ayko-chan "i want that getc()": Are you trying for posix or multi platform
[13:54:59] <FromDiscord> <rforcen (roberto forcen)> yes the 64bit also works fine, THANX for all
[13:55:07] <FromDiscord> <Yardanico> no problem :)
[13:56:49] <FromDiscord> <Isofruit> Heyho! I've run into my next serialization issue where I think I'm not quite getting how to turn a JsonNode into a custom type with `fromJson`
[13:56:58] <ayko-chan> posx
[13:57:05] <ayko-chan> dont care about windows
[13:57:07] <FromDiscord> <Yardanico> In reply to @Isofruit "Heyho! I've run into": hm, can you show some code?
[13:57:13] <FromDiscord> <Isofruit> sent a code paste, see https://play.nim-lang.org/#ix=3Kbg
[13:57:35] <FromDiscord> <Isofruit> One sec, Copy pasting error
[13:57:50] <FromDiscord> <Isofruit> > Exception message: b.kind == JObject failed: JString
[13:57:59] <FromDiscord> <Isofruit> explodes somewhere in jsonutils
[13:59:13] <FromDiscord> <Elegantbeef> `parseJson` instead of `toJson`
[14:00:33] <FromDiscord> <Yardanico> also @Isofruit your json isn't valid
[14:00:37] <FromDiscord> <Yardanico> json strings are always double quoted
[14:01:05] <FromDiscord> <Elegantbeef> `"""{"name": "walumba"}"""`
[14:01:27] <FromDiscord> <Elegantbeef> Or manually escape `"` internally if you're a masochist
[14:01:49] <FromDiscord> <Isofruit> No kink shaming here!
[14:01:58] <FromDiscord> <Yardanico> also @Isofruit your code won't really work anyway because you're inheriting from Model
[14:02:04] <FromDiscord> <Yardanico> so you must supply parameters from Model too
[14:02:12] <FromDiscord> <Yardanico> i really don't know if this stuff is supported by norm or not
[14:02:46] <FromDiscord> <Yardanico> well, in this case it's just the id field
[14:02:47] <FromDiscord> <Yardanico>  https://media.discordapp.net/attachments/371759389889003532/926422629852794920/unknown.png
[14:03:21] <FromDiscord> <Yardanico> and then it says "Updated automatically, do not update manually!"
[14:07:42] <FromDiscord> <Isofruit> Hmmmmmm
[14:09:10] <FromDiscord> <Isofruit> First off, the `parseJson` swap worked out, thanks @ElegantBeef ... I'll need to read over the docs again to get a mental model on when to use what
[14:10:09] <FromDiscord> <Yardanico> In reply to @Isofruit "First off, the `parseJson`": you don't actually need jsonutils at all in your case
[14:10:12] <FromDiscord> <Yardanico> parseJson and json.to
[14:10:14] <FromDiscord> <Yardanico> are enough
[14:10:29] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3Kbl
[14:12:22] <FromDiscord> <Isofruit> That is really cool, thanks a lot @Yardanico ↵... so I'll also need to read over "to" again↵Either way though, the id issue persists so it's a matter of "do I need to define a new type for this that isn't a model or not"
[14:20:22] <FromDiscord> <qb> In reply to @Yardanico "so instead of nice": Does that still happen?
[14:20:42] <FromDiscord> <Yardanico> uh, i don't think i tried nimbleimgui after that :)
[14:20:44] <FromDiscord> <Yardanico> i can try now again
[14:20:56] <FromDiscord> <qb> would be great. Im on x11 aswell
[14:21:04] <FromDiscord> <qb> it's on nimble now aswell
[14:22:06] <FromDiscord> <Yardanico> In reply to @qb "would be great. Im": also, just a tip - change `assert` to `doAssert` - `assert`s are not compiled with -d:danger or --assertions:off, while `doAssert` are, and in your case you need them to be compiled in since you call various init procedures with asserts
[14:22:27] <FromDiscord> <qb> Sure, thanks 🙂
[14:24:11] <FromDiscord> <Yardanico> nope, still get a black background
[14:24:25] <FromDiscord> <Yardanico> also the default positions of the windows are kind of weird https://media.discordapp.net/attachments/371759389889003532/926428071119159336/unknown.png
[14:24:26] <FromDiscord> <qb> weird
[14:24:29] <FromDiscord> <Yardanico> they're all overlapping
[14:24:45] <FromDiscord> <qb> yea I should add a ui cfg
[14:25:34] <FromDiscord> <Isofruit> > -d:danger↵I love the fact that I have access to flags that scream "I like to live dangerously"
[14:25:49] <FromDiscord> <Yardanico> well it's not exactly "danger"
[14:25:52] <FromDiscord> <Yardanico> it just disables all runtime checks ;)
[14:25:59] <FromDiscord> <Isofruit> Yeh, it's just funny to think about ^^
[14:26:11] <FromDiscord> <Isofruit> Mostly a dev-prod difference in my eyes
[14:26:22] <FromDiscord> <Yardanico> in fact in nim < 0.20 -d:release was actually -d:danger
[14:26:28] <FromDiscord> <Yardanico> but then it got changed to the current state of things
[14:26:34] <FromDiscord> <Yardanico> so that -d:release became safer
[14:26:40] <FromDiscord> <Yardanico> (and a bit slower, but that's fine)
[14:26:56] <FromDiscord> <Yardanico> you can always disable checks in specific parts of your code or compile with some checks off or with -d:danger
[14:27:03] *** Joins: adigitoleo (~adigitole@2001:8003:1d19:4500:3f68:c2db:d0d3:3bb8)
[14:27:24] <FromDiscord> <Yardanico> @qb what DE are you on? maybe plasma doesn't support this kind of transparency?
[14:27:29] <FromDiscord> <Isofruit> I mean, if d:release is even thrice as slow as normal compiling it's still faster than Rust (which isn't really a great benchmark but... well it's what I moved away from anyway)
[14:27:47] <FromDiscord> <Yardanico> In reply to @Isofruit "I mean, if d:release": ah i was talking about runtime performance, not compilation speed :P
[14:27:56] <FromDiscord> <Isofruit> Ohhh check
[14:28:00] <FromDiscord> <Yardanico> -d:danger disables _runtime_ checks
[14:28:19] <FromDiscord> <qb> I'm on gnome
[14:28:22] <FromDiscord> <Yardanico> hm
[14:28:39] <FromDiscord> <Isofruit> ~~Look, I'm rewriting my backend on my hobby project solely for ego purposes, if I can get even 1 ms reduction in pageload it'll be worth it to my ego~~
[14:29:29] <FromDiscord> <qb> Could I add extra files to `nimble install` so the ui config will be copied aswell?
[14:29:48] <FromDiscord> <Yardanico> yes, nimble might complain but it'll install files
[14:30:00] <FromDiscord> <Yardanico> or you can just hardcode the ui config in the code ™️
[14:30:07] <FromDiscord> <qb> oh great idea
[14:30:51] <FromDiscord> <Solitude> In reply to @qb "I'm on gnome": on tiling wm it spawn fullscreen black window with imgui windows inside it https://media.discordapp.net/attachments/371759389889003532/926429689222934598/unknown.png
[14:31:04] <FromDiscord> <Yardanico> it always spawns a fullscreen window
[14:31:17] <FromDiscord> <Yardanico> it's just that on some DEs it becomes transparent so you're under the fake impression of it being multiple windows
[14:31:24] <FromDiscord> <Yardanico> when in fact it's one window with imgui
[14:31:25] <FromDiscord> <Solitude> yuck
[14:31:51] <FromDiscord> <qb> yup
[14:34:49] <FromDiscord> <Yardanico> also @qb about static linking with cimgui - it's possible, but not officially supported by cimgui and requires a bit of extra work
[14:34:57] <FromDiscord> <Yardanico> you might as well just compile with Nim's C++ backend, then you don't need cimgui
[14:35:24] <FromDiscord> <Yardanico> and yes, your app seems to compile fine with the C++ backend
[14:35:33] <FromDiscord> <Yardanico> just `nim cpp -r src/NimbleImGui.nim`
[14:35:45] <FromDiscord> <qb> yup default is cpp as backend on the nimble file now
[14:35:46] <FromDiscord> <Yardanico> then imgui is statically compiled into your binary without any additional layers like cimgui
[14:35:52] <FromDiscord> <Yardanico> but yeah, cimgui static compilation is possible
[14:36:08] <FromDiscord> <Yardanico> some time ago another person in this chat was wondering the same and eventually succeeded
[14:36:37] <FromDiscord> <Yardanico> In reply to @Yardanico "so @anddam to build": ^ this and above
[14:46:44] <adigitoleo> hi there, can I find a tutorial on using the FFI somewhere? I'd like to call a C lib from nim, nothing too complicated but I've never done that kind of thing
[14:50:06] <adigitoleo> Oh I just found the nim in action chapter: https://livebook.manning.com/book/nim-in-action/chapter-8/
[14:51:26] <FromDiscord> <el__maco> personally I just forward declare the procs with {.importc.} pragma and then pass the c library to the compiler using `--clib:mylib` command line argument
[14:52:57] <FromDiscord> <geekrelief> yeah the manual kind of covers it https://nim-lang.github.io/Nim/manual.html#foreign-function-interface, but dom's book looks like a good tutorial
[14:53:59] <FromDiscord> <geekrelief> For more complicated things you can try futhark https://github.com/PMunch/futhark or nimterop / c2nim.
[14:54:10] <FromDiscord> <geekrelief> (edit) "/" => "or"
[14:54:45] <FromDiscord> <NOP0 (NOP0)> Read up on nimskull situation. Kinda sad for nim, have been following nim since 2012. Not critizising anyone, I dont have the full reasons or context. Maybe Im overreacting I dont know
[14:55:27] <FromDiscord> <Rika> You probably are
[14:56:44] <adigitoleo> NOP0: care to elaborate?
[14:57:04] <FromDiscord> <Solitude> you are overreacting
[14:58:21] <adigitoleo> geekrelief: futhark looks cool, thanks for the link I'll keep an eye on it for future projects
[14:59:21] <FromDiscord> <geekrelief> np, thank PMunch 🙂  I personally use my fork of nimterop https://github.com/geekrelief/nimterop
[15:00:10] <FromDiscord> <geekrelief> but that's only because I started with it before futhark came out
[15:01:10] <adigitoleo> yeah looks too complicated for me just now, I'm from Python land so I've never been this low level before :)
[15:01:56] <FromDiscord> <geekrelief> I was in the same boat a couple months ago. I did have prior experience with C, but I was, maybe still am, rusty.
[15:02:07] <FromDiscord> <Yardanico> RUSTY?!!?!
[15:02:09] <FromDiscord> <geekrelief> If you have specific questions, feel free to ask
[15:03:02] <FromDiscord> <geekrelief> In reply to @Yardanico "**RUST**Y?!!?!": I don't know if you're making a pun about Rust or surprised that I said I'm not great with C.
[15:03:07] <FromDiscord> <Yardanico> the former :P
[15:03:12] <FromDiscord> <geekrelief> 🙂
[15:03:16] <FromDiscord> <Isofruit> TIL rust is a trigger word
[15:03:22] <FromDiscord> <Rika> Here yes
[15:03:46] <FromDiscord> <Isofruit> Fair
[15:04:19] <FromDiscord> <geekrelief> can't all languages try to interop?
[15:04:24] <FromDiscord> <geekrelief> 😄
[15:05:04] <FromDiscord> <Isofruit> The only thing fought more bloodily than the language wars are the wars in germany over what specifically is a pancake
[15:05:10] <FromDiscord> <Rika> Of course, the difficulty is what changes
[15:05:31] <FromDiscord> <NOP0 (NOP0)> Seems like a divide in the community because of difficulties getting things merged
[15:05:44] <FromDiscord> <Isofruit> Sounds like a
[15:05:45] <FromDiscord> <Rika> Skull? Kinda
[15:05:47] <FromDiscord> <Isofruit> merge conflict
[15:05:58] <FromDiscord> <Rika> Git out
[15:06:14] <FromDiscord> <Isofruit> 👉 👉
[15:06:49] <FromDiscord> <haxscramper> well, technically you can say that is due to troubles of getting things merged
[15:07:45] <FromDiscord> <qb> In reply to @Yardanico "nope, still get a": Sorry to bother you. Could you try again? 😄
[15:08:13] <FromDiscord> <Yardanico> still black :(
[15:08:17] <FromDiscord> <qb> god damnit
[15:08:21] <FromDiscord> <qb> 😄
[15:08:40] <FromDiscord> <qb> but the config works now huh
[15:09:49] <FromDiscord> <qb> Not sure what causes that. Just works fine here >.< https://media.discordapp.net/attachments/371759389889003532/926439496910770196/Bildschirmfoto_von_2021-12-31_12-39-23.png
[15:09:55] <FromDiscord> <haxscramper> In reply to @haxscramper "well, technically you can": Main issue is that we really don't agree with what things development should focus on right now
[15:14:20] <FromDiscord> <Rika> and it seems to be more work to get everyone to do one thing than to do things separately
[15:14:52] <ayko-chan> how can i get here only the 1'st row https://play.nim-lang.org/#ix=3KbB
[15:15:45] <FromDiscord> <Isofruit> Hmmm I wonder if you can deserialize into a type and just leave one of its fields empty...
[15:16:04] <FromDiscord> <Rika> @PMunch maybe needed but I think the playground is down
[15:16:20] <FromDiscord> <Rika> Or maybe it’s just this specific link
[15:16:35] <FromDiscord> <Rika> Nope the whole thing is 502
[15:17:58] <FromDiscord> <Isofruit> Ah, so it wasn't my cache or something
[15:19:55] <FromDiscord> <geekrelief> ayko-chan, can you post your code here?
[15:21:45] <ayko-chan> why 
[15:21:51] <ayko-chan> it will fill irc
[15:22:16] <FromDiscord> <Yardanico> use other paste services
[15:22:49] <FromDiscord> <Solitude> http://ix.io/3KbB
[15:22:59] <FromDiscord> <Yardanico> ah right
[15:23:13] <ayko-chan> https://pastebin.com/5RUCqGmF
[15:23:16] <ayko-chan> here
[15:23:58] <FromDiscord> <qb> https://logpasta.com/paste/80010654-ef6b-45f7-87d3-3b00324739d1
[15:23:59] <FromDiscord> <qb> btw 😄
[15:25:23] *** Joins: badsektor (~badsektor@user/badsektor)
[15:27:14] <FromDiscord> <sOkam!> https://tenor.com/view/respect-hat-cap-kid-gif-7551965
[15:27:21] <FromDiscord> <sOkam!> (edit) "https://tenor.com/view/respect-hat-cap-kid-gif-7551965" => "A moment of admiration for Nim's `div` and `/` behavior on ints↵So intuitive ↵https://tenor.com/view/respect-hat-cap-kid-gif-7551965"
[15:28:04] <FromDiscord> <sOkam!> (edit) "A moment of admiration for Nim's `div` and `/` ... behavior" 03added "default" | "↵https://tenor.com/view/respect-hat-cap-kid-gif-7551965" => "   :hatsoff: https://tenor.com/view/respect-hat-cap-kid-gif-7551965"
[15:29:39] <FromDiscord> <Rika> Sounds sarcastic
[15:29:43] <FromDiscord> <Rika> What’s wrong with it
[15:30:03] <FromDiscord> <Yardanico> in his case it's not sarcastic
[15:30:10] <FromDiscord> <Yardanico> @Rika check #gamedev
[15:30:36] <FromDiscord> <Rika> Ah I see, nice
[15:30:43] <FromDiscord> <sOkam!> In reply to @Rika "Sounds sarcastic": It's 100% legitimate. Its literally dope
[15:30:52] <FromDiscord> <Rika> Yeah I like it when operators are consistent to what they would do
[15:31:05] <FromDiscord> <Rika> Python has it too so I don’t really notice haha
[15:31:07] <FromDiscord> <sOkam!> Why on earth would I not want a float out of an int division by default 👀
[15:31:41] <FromDiscord> <sOkam!> I get it that you dont cast types... but its expected behavior on paper
[15:33:26] <FromDiscord> <Rika> I don’t know, it’s probably a preference thing, but yeah
[15:33:52] <FromDiscord> <Rika> I think you should be explicit when you want integer or float behaviour
[15:34:08] <FromDiscord> <Rika> No more int()/int()
[15:34:21] <FromDiscord> <Rika> So god damn long, that expression
[15:34:33] <FromDiscord> <sOkam!> yeah
[15:37:45] <FromDiscord> <evoalg> sent a code paste, see https://play.nim-lang.org/#ix=3KbL
[15:39:29] <ayko-chan> how can i get here only the 1'st row https://play.nim-lang.org/#ix=3KbB (HELP PLEASE)
[15:40:02] <FromDiscord> <Yardanico> 1st row of what?
[15:40:10] <ayko-chan> read the source
[15:40:19] <FromDiscord> <Yardanico> i did
[15:40:29] <FromDiscord> <Yardanico> you have multiple rows in all sequences
[15:40:30] <ayko-chan> of the a seq
[15:41:19] <FromDiscord> <Yardanico> http://ix.io/3KbB the direct code link if someone missed
[15:41:36] <FromDiscord> <Yardanico> In reply to @ayko-chan "of the a seq": a[0]
[15:41:45] <FromDiscord> <Yardanico> gives you the first "row" of the a seq
[15:41:48] <FromDiscord> <Yardanico> is this what you want or wat?
[15:41:50] <ayko-chan> oh ok
[15:41:51] <FromDiscord> <Yardanico> i'm honestly confused
[15:42:15] <FromDiscord> <Yardanico> don't you just want zip?
[15:45:42] <ayko-chan> oh thanks. :)
[15:45:50] *** Quits: ayko-chan (~ayko-chan@178.132.170.105) (Quit: Leaving)
[16:05:01] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[16:06:37] <FromDiscord> <Isofruit> sent a code paste, see https://play.nim-lang.org/#ix=3KbW
[16:07:26] <FromDiscord> <Yardanico> afaik jsony allows for similar stuff
[16:07:27] <FromDiscord> <Yardanico> https://github.com/treeform/jsony
[16:07:45] <FromDiscord> <Isofruit> Just slightly annoying that I can instantiate an object of that type without having the fields set (which is what norm is relying on to work), but can't convert json to one
[16:08:09] <FromDiscord> <Isofruit> I'll take a look at jsony!
[16:10:03] <FromDiscord> <Isofruit> I swear to christ if I manage to figure this one out I'll write an example up for norm and see if I can't get it throw into their docs or sth
[16:13:26] <FromDiscord> <hmmm> are you swearing upon the name of our lord and saviour over such petty concerns? 🧐
[16:13:42] <FromDiscord> <hmmm> I'm worried for the salvation of your soul 🧐
[16:32:00] <FromDiscord> <dom96> In reply to @adigitoleo "Oh I just found": yeah, this chapter is free. You can also download it from https://book.picheta.me/ as a PDF
[16:44:05] <FromDiscord> <Shiba> does anyone know anybook or video or article that covers every aspect of nim
[16:44:15] <FromDiscord> <Shiba> (edit) "does anyone know anybook or video or article that covers every aspect of nim ... " 03added "language"
[16:44:46] <FromDiscord> <Shiba> (edit) "anybook" => "any book"
[16:45:59] <FromDiscord> <Rika> The manual, probably
[16:46:06] <FromDiscord> <Rika> Every aspect is defined as?
[17:02:07] <FromDiscord> <Isofruit> sent a code paste, see https://play.nim-lang.org/#ix=3Kc8
[17:02:35] <FromDiscord> <NOP0 (NOP0)> How will nimskull differ from nim?
[17:03:18] <FromDiscord> <konsumlamm> have you read their readme?
[17:03:38] <FromDiscord> <haxscramper> for now we don't have any explicit directions where we want to change the implementation, we are solely focusing on the compiler stability, documentation and test improvements
[17:04:14] <FromDiscord> <haxscramper> there are some associated prerequisites, but the language-specific changes will happen way later
[17:05:57] <FromDiscord> <haxscramper> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/926468140609712188): for now we don't have any explicit directions where we want to change the implementation, we are solely focusing on the compiler stability and documentation as well as test improvements
[17:08:09] <FromDiscord> <NOP0 (NOP0)> Ok, interesting, which language pain points are you looking at?
[17:08:20] <FromDiscord> <konsumlamm> sent a code paste, see https://paste.rs/8OH
[17:08:22] <FromDiscord> <konsumlamm> you'll probably want to open an issue
[17:13:13] <FromDiscord> <enthus1ast> sent a code paste, see https://paste.rs/Hq9
[17:13:19] <FromDiscord> <haxscramper> Main pain point right now is an absolutely abysmal state of the compiler code base - once that is addressed at least somehow (by cleaning up the error reporting system, documenting implementation, rethinking some internal data management) we can start looking deeper. At the same time we want to improve the test suite - it is just a pile of randomly thrown together checks for random conditions, riddled with `disbled: true` or checks th
[17:14:15] <FromDiscord> <haxscramper> for example, nim compiler can output, in total 568 different error message diagnostics
[17:14:32] <FromDiscord> <haxscramper> welp, can you guess whether anyone checked for them all in test suite?
[17:15:32] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3Kcc
[17:16:00] <FromDiscord> <Solitude> In reply to @enthus1ast "is there a good": no, write a macro
[17:16:38] <FromDiscord> <haxscramper> https://forum.nim-lang.org/t/8723 related
[17:17:14] <FromDiscord> <NOP0 (NOP0)> Ok, so the nimskull improvements is then merged back?
[17:17:17] <FromDiscord> <enthus1ast> yeah thought that this might be the way. Thanks↵(@Solitude)
[17:17:41] <FromDiscord> <haxscramper> no, the main problem is that core devs don't see things I'm talking about right now as a problem
[17:18:02] <FromDiscord> <haxscramper> compare roadmaps https://github.com/nim-lang/RFCs/issues/437  https://github.com/nim-works/nimskull#near-term-development
[17:19:52] <FromDiscord> <haxscramper> right now we are in the blue area mostly, with high-level overvieew of the progress here https://github.com/nim-works/nimskull/discussions/142?sort=new
[17:19:53] <FromDiscord> <NOP0 (NOP0)> Ok
[17:20:07] <FromDiscord> <enthus1ast> found a bug in the img [haxscramper](https://matrix.to/#/@haxscramper:matrix.org) "Compiler on NodeJS" is doublicated
[17:22:34] <FromDiscord> <NOP0 (NOP0)> How is the speed of development nimskull vs nim?
[17:22:59] <FromDiscord> <Yardanico> as haxscramper mentioned, nimskull isn't focused much on actual development right now
[17:23:06] <FromDiscord> <Yardanico> they're making strategy and roadmap first
[17:23:28] <FromDiscord> <haxscramper> we've already made strategy and roadmap, but otherwise this is correct
[17:23:35] <FromDiscord> <haxscramper> feature-wise we are completely stale
[17:25:04] <FromDiscord> <haxscramper> maybe tooling-wise it will be faster a little
[17:25:21] <FromDiscord> <Isofruit> In reply to @konsumlamm "you'll probably want to": Opened a github issue and started praying I didn't mess up the reporting. Who knows
[17:25:28] <FromDiscord> <haxscramper> as in - some of the internal improvements would allow to write functioning nimpretty implementation for example
[17:25:50] <FromDiscord> <Isofruit> (edit) "knows" => "knows. Thanks for the hint though, I was 100% convinced that one was entirely on me"
[17:25:50] <FromDiscord> <haxscramper> instead of this joke we have right now
[17:39:32] <FromDiscord> <Shiba> In reply to @Rika "The manual, probably": can i download fit for offline reading
[17:39:38] <FromDiscord> <Shiba> (edit) "fit" => "it"
[17:40:51] <FromDiscord> <dom96> You can always print to PDF 😄
[17:44:20] <FromDiscord> <konsumlamm> In reply to @Isofruit "Opened a github issue": it's not so rare to find a bug in Nim, i found quite some bugs by just playing around
[17:54:35] <ozzz> Hi! I have issues with gcc11.1 <- Is it supported?
[17:54:51] <ozzz> or I should expect glitches
[17:55:05] <FromDiscord> <Isofruit> At least it's not crippling, though figuring out how else to format my custom data type will be annoying
[17:55:25] <FromDiscord> <Isofruit> (edit) "data" => "datetime"
[17:56:01] <FromDiscord> <Isofruit> In reply to @konsumlamm "it's not so rare": At least it's not crippling, though figuring out how else to format my custom datetime type will be annoying
[17:57:03] <FromDiscord> <Solitude> In reply to @Isofruit "At least it's not": whats stopping you from using original proc, just without the borrowing?
[17:58:06] *** Joins: xet7 (~xet7@user/xet7)
[17:58:18] *** Joins: arkurious (~arkurious@user/arkurious)
[17:59:38] <FromDiscord> <Isofruit> In reply to @Solitude "whats stopping you from": My datetime is distinct from normal datetime, the reason lies in the norm library.↵It converts output from dB queries into model types and already has something pre defined for Datetime that I can't override
[17:59:51] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[18:01:06] <FromDiscord> <Solitude> In reply to @Isofruit "My datetime is distinct": you can still use original proc on your distinct type if you jsut convert it
[18:01:27] <FromDiscord> <Isofruit> So I tell it to use my totally different neat custom datetime (their datetime assumes you store a unix timestamp float but my dB already stores it as strings formatted yyyy-Mm-dd HH:mm:ss and...)↵Wait I can?
[18:01:30] <FromDiscord> <Solitude> you dont need borrow for that
[18:01:38] <FromDiscord> <Solitude> would be pretty stupid if you couldnt
[18:01:51] <FromDiscord> <Solitude> just convert your distinct back to DateTime
[18:02:49] *** Joins: rockcavera (~rc@192.12.112.111)
[18:02:50] *** Quits: rockcavera (~rc@192.12.112.111) (Changing host)
[18:02:50] *** Joins: rockcavera (~rc@user/rockcavera)
[18:03:50] <FromDiscord> <NOP0 (NOP0)> How many people are working on nimskull vs nim?
[18:05:12] <FromDiscord> <haxscramper> nimskull does not have full-time developers, but it is me, saem and leorize for the most part. Nim has araq (full-time, paid), narimiran (full-time, paid) and a lot of other contirbutors
[18:05:31] <FromDiscord> <Solitude> In reply to @NOP0 (NOP0) "How many people are": https://matrix.to/#/#nimworks:envs.net
[18:05:50] <FromDiscord> <NOP0 (NOP0)> Ok, thanks 😊
[18:06:22] <FromDiscord> <Isofruit> In reply to @Solitude "just convert your distinct": I'll need to have a look once I'm back at my PC in a couple hours... Or tomorrow. That would definitely solve that problem though, thanks for the hint!
[18:07:43] *** Quits: adigitoleo (~adigitole@2001:8003:1d19:4500:3f68:c2db:d0d3:3bb8) (Quit: adigitoleo)
[18:12:32] *** Quits: ehmry (~quassel@2a03:3b40:fe:ab::1) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:13:33] *** Joins: ehmry (~quassel@2a03:3b40:fe:ab::1)
[19:18:25] <arkanoid> what's the difference from platform "standalone" and "any"?
[19:25:44] <arkanoid> if I have a proc that returns a proc that returns a proc, is it a closure of a closure? Do I have to define it explicitly?
[19:56:47] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[20:29:55] *** Joins: soundmodel (~soundmode@82-203-165-25.bb.dnainternet.fi)
[20:30:25] <soundmodel> any ideas where to ask help with Fidget?
[20:39:33] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[20:42:18] <FromDiscord> <Yardanico> @soundmodel don't really think there is a place like that
[20:42:25] <FromDiscord> <Yardanico> treeform has been remaking fidget from scratch for quite some time
[20:42:32] <FromDiscord> <Yardanico> so current fidget is in this weird state
[20:43:06] <soundmodel> I'm having trouble starting with it and understanding how it utilizes nim templates
[20:43:15] <soundmodel> might be standard nim though, but as a newbie it's confusing
[20:43:57] <soundmodel> so such as, how is the group template used here: https://github.com/treeform/fidget/blob/4e0f79ef0a3e6021ccb37af833715947274515cc/examples/minimal/minimal.nim#L9
[20:45:43] <soundmodel> I cannot find an instance of it which has one string argument
[20:45:49] <soundmodel> https://github.com/treeform/fidget/blob/28606653dc31f77730a88f7569da2d5040ad912b/src/fidget.nim#L81
[20:51:15] <soundmodel> nor do I understand how inner is used in https://github.com/treeform/fidget/blob/28606653dc31f77730a88f7569da2d5040ad912b/src/fidget.nim#L75
[20:54:03] <FromDiscord> <Yardanico> @soundmodel maybe you misunderstood templates
[20:54:09] <FromDiscord> <Yardanico> templates can take normal arguments but also code blocks
[20:54:15] <FromDiscord> <Yardanico> so the group template takes a string as the first parameter
[20:54:24] <FromDiscord> <Yardanico> and the code after : and indentation as the second parameter
[20:54:50] <FromDiscord> <Yardanico> i don't really know inner workings of fidget though, and I don't think that many people do :P
[20:55:23] <soundmodel> ahh I see, so inner : untyped refers to those blocks
[20:59:13] <soundmodel> I don't know, I found that syntax a bit odd, because that the block is used as an argument is a bit "implicit"
[21:03:27] <soundmodel> I also don't understand where the constructs that don't seem to be defined in a file may lie, such as: https://github.com/treeform/fidget/blob/28606653dc31f77730a88f7569da2d5040ad912b/src/fidget.nim#L19
[21:03:43] <FromDiscord> <Isofruit> Huh... Could it be that jsony doesn't like multiple levels of nesting? I noticed my norm models don't get properly desetialized if it has a field that contains more than 3 levels of nesting... I'll have to do some more testing in the new year to narrow the cause down
[21:03:45] <soundmodel> there's no earlier mention of nodeStack
[21:07:31] <soundmodel> it's defined in common, but I don't understand how does it look like it's modifying a variable defined in another .nim file
[21:07:40] <nixfreaknim[m]> ok so stupid question, what is the difference between importing a module like `import module/submodle` or `import module`  `import submodule`
[21:08:10] <nixfreaknim[m]> Is there a difference why one wouldn't work over the other one ?
[21:09:19] <FromDiscord> <Yardanico> yes, because in the first case you only import the submodule
[21:09:25] <FromDiscord> <Yardanico> "module" in this case is a directory
[21:09:33] <FromDiscord> <Yardanico> and in the latter case you import both module and submodule as two modules
[21:10:41] <soundmodel> it seems almost like it uses vars in another file as "global variables"
[21:10:47] <soundmodel> but this sounds like an odd design decision
[21:14:31] <soundmodel> https://nim-lang.org/docs/manual.html#modules-export-statement
[21:16:59] <soundmodel> what if MyObject was var?
[21:18:03] <nixfreaknim[m]> Yardanico oh ok thanks
[21:22:44] *** Joins: thomasross (~thomasros@dyn-pppoe-142-51-227-74.vianet.ca)
[21:28:09] <soundmodel> I'm also trying to compile some of the examples for fidget
[21:28:13] <soundmodel> and I get fatal error: X11/Xlib.h: No such file or directory
[21:28:19] <soundmodel> I wonder if I'm missing some dependencies
[21:28:54] <FromDiscord> <Yardanico> yep, you need X development libs for that
[21:34:29] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3KeN
[21:35:02] <FromDiscord> <treeform> I recommend returning some thing like a seq if its "variable count"
[21:35:59] <FromDiscord> <enthus1ast> i will just use this in a loop and i want to have the tuple unpacked
[21:36:31] <FromDiscord> <enthus1ast> but would the macro generate the WHOLE iterator?
[21:37:19] <FromDiscord> <treeform> with macros you can do basically anything
[21:38:00] <FromDiscord> <treeform> you probably will probably only have 1-5 components you want to do at once
[21:38:09] <FromDiscord> <treeform> I would just define the 1-5 iterators you will use
[21:38:13] <FromDiscord> <enthus1ast> yes
[21:38:18] <FromDiscord> <enthus1ast> was also thinking about this
[21:38:27] <FromDiscord> <treeform> probably simpler to debug
[21:38:32] <FromDiscord> <enthus1ast> yeah
[21:39:53] <FromDiscord> <enthus1ast> the only downside to this i see (except the code doublication) is that the returned tuple does not have the correct names
[21:40:04] <FromDiscord> <treeform> so `entities(a,b): tuple[a,b]`,  `entities(a,b,c) : tuple[a,b,c]`,  `entities(a,b,c,d): tuple[a,b,c,d]` etc...
[21:40:14] <FromDiscord> <enthus1ast> yes
[21:40:40] <FromDiscord> <treeform> I don't really use named tuples, or really tuples in general.
[21:41:00] <FromDiscord> <enthus1ast> i think i go with this route
[21:41:07] <FromDiscord> <enthus1ast> will take this route i mean \:)
[21:41:47] <soundmodel> I got the X11 libs
[21:41:51] <soundmodel> and now I'm stuck at /usr/bin/ld: cannot find -lGL
[21:44:06] <FromDiscord> <treeform> sent a code paste, see https://play.nim-lang.org/#ix=3KeQ
[21:44:37] <FromDiscord> <treeform> were `e.pos` does the `reg.getComponent(e, Pos)`
[21:46:04] <FromDiscord> <enthus1ast> mh
[21:46:17] <FromDiscord> <enthus1ast> e.pos would then be a closure?
[21:46:41] <FromDiscord> <treeform> I would not. Closures are kind of slow I would not use them for ECS.
[21:47:05] <FromDiscord> <enthus1ast> the thing is, i currently can have any type as a component
[21:47:14] <FromDiscord> <enthus1ast> no oop
[21:47:15] <FromDiscord> <tandy> u need to install libgl↵(<@709044657232936960_soundmodel=5b=49=52=43=5d>)
[21:47:19] <FromDiscord> <tandy> what distro?
[21:47:27] <FromDiscord> <tandy> i did this the other day for imgui
[21:47:40] <FromDiscord> <enthus1ast> so in your example this must also be a macro
[21:48:01] <FromDiscord> <enthus1ast> ah no, not true, they are components
[21:48:15] <FromDiscord> <treeform> See here: https://play.nim-lang.org/#ix=2nbR
[21:48:21] <FromDiscord> <treeform> they can be plain procs or templates for speed
[21:48:22] <FromDiscord> <enthus1ast> gotta know my code \:)
[21:49:06] <FromDiscord> <treeform> Its my "Entity Component System in 10 lines"
[21:49:53] <FromDiscord> <treeform> does not use macros, but does use advanced templates 🙂
[21:50:21] <soundmodel> already feeling so much nicer than C++
[21:50:40] <soundmodel> I hated having to use C++ for the tasks that I'm looking for Nim to do
[21:50:44] <FromDiscord> <enthus1ast> a clever @treeform
[21:50:56] <FromDiscord> <enthus1ast> did not know this syntax exists to be honest
[21:51:06] <FromDiscord> <enthus1ast> proc `has componentType`\
[21:51:18] <FromDiscord> <treeform> yeah its neat
[21:51:19] <FromDiscord> <enthus1ast> `proc `has componentType``
[21:51:40] <FromDiscord> <treeform> sent a code paste, see https://play.nim-lang.org/#ix=3KeT
[21:52:00] <FromDiscord> <enthus1ast> i've build this type of thing in my previous ecs but with macros, it was way to complicated
[21:52:16] <FromDiscord> <treeform> macros are always too complex
[21:52:26] <FromDiscord> <treeform> I would focus on the API you want the ECS to have first
[21:52:35] <FromDiscord> <treeform> my goal is to make it not feel like ECS at all
[21:52:40] <FromDiscord> <enthus1ast> yes
[21:52:43] <FromDiscord> <treeform> but still provide the benefits
[21:52:46] <FromDiscord> <treeform> (edit) "but still provide the benefits ... " 03added "of speed"
[21:53:11] <FromDiscord> <treeform> Its important to realize that different components should be stored in different data structures
[21:53:16] <FromDiscord> <treeform> some thing like array for common components
[21:53:28] <FromDiscord> <treeform> and something like hashtable or b-tree for less common ones
[21:53:50] <FromDiscord> <treeform> then there are all kind of shortcuts to iterating with them
[21:54:57] <FromDiscord> <enthus1ast> i do not know how well my ecs performs, speed is not yet an issue in my current project, i mainly use it to build up complex "objects"
[21:55:34] <FromDiscord> <enthus1ast> https://github.com/enthus1ast/ecs/blob/master/src/ecs.nim
[22:05:02] <FromDiscord> <deech> Is there a way to tell the difference between a argument passed in by the user and a default parameter, eg. in `proc p(s:string = "some string") ...` I'd like to know if the user explicitly passed in "some string".
[22:06:31] <soundmodel> Any idea where nimble may install /examples/ by default
[22:06:35] <soundmodel> that may come with some Github project
[22:06:48] <soundmodel> I cannot find it under ~/.nimble/pkgs where the package installed lies
[22:06:52] <soundmodel> but no /examples/ folder
[22:08:38] <soundmodel> then it says that to run examples one must clone again and do install
[22:08:47] <soundmodel> so I wonder if this would lead to having two fidgets in nimble?
[22:08:53] <soundmodel> https://github.com/treeform/fidget#how-to-run-the-examples
[22:08:59] <soundmodel> since I've already done nimble install fidget
[22:09:15] <FromDiscord> <huantian> In reply to @haxscramper "as in - some": No way good nimpretty would be awesome
[22:15:59] <FromDiscord> <Solitude> In reply to @deech "Is there a way": if its a single default argument, you could just introduce overload without that argument that assumes default value.
[22:16:33] <FromDiscord> <tandy> i thought araq was part time? didnt he have a job at some german firm?
[22:17:14] <FromDiscord> <deech> In reply to @Solitude "if its a single": That's a good idea but unfortunately wouldn't work in this case, there are a number of parameters. Thanks!
[22:17:54] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:18:02] <FromDiscord> <haxscramper> https://forum.nim-lang.org/t/8540#55418
[22:18:31] *** Joins: SebastianM (~seba@user/sebastianm)
[22:18:37] <FromDiscord> <tandy> interesting
[22:18:57] <FromDiscord> <tandy> hope everyone who does prs gets their bug bounties lol
[22:22:44] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[22:23:28] <FromDiscord> <treeform> In reply to @soundmodel "https://github.com/treeform/fidget#how-to-run-the-e": To get examples you will need to clone the repo with git, nimble does not install extra folders like examples
[22:24:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 260 seconds)
[22:39:57] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (Ping timeout: 256 seconds)
[22:58:37] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[23:16:12] <FromDiscord> <mattrb> Quick q, probably stupid. Is there a standard way to add a signed int to an unsigned int, or do I need to check the sign, convert it to an unsigned int, then add or subtract it?
[23:22:32] <FromDiscord> <mattrb> Guess I can just use the two's complement
[23:23:26] *** Quits: soundmodel (~soundmode@82-203-165-25.bb.dnainternet.fi) (Quit: Client closed)
[23:27:25] <FromDiscord> <Rosen> sent a code paste, see https://play.nim-lang.org/#ix=3KfV
[23:27:33] <FromDiscord> <Rosen> ignore me wait
[23:27:45] <FromDiscord> <Rosen> (edit) "ignore me wait ... " 03added "(i deleted last message)"
[23:30:09] <FromDiscord> <treeform> In reply to @mattrb "Quick q, probably stupid.": You should convert.
[23:31:35] <FromDiscord> <treeform> I also don't recommend using unsigned ints together. I would only use unsigned ints its when I am doing bit fiddling or doing optimizations and have benchmarks.
[23:31:42] <FromDiscord> <Solitude> In reply to @mattrb "Quick q, probably stupid.": you could just cast signed int to unsigned
[23:32:23] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[23:42:42] <FromDiscord> <mattrb> Ah yeah I could also just cast
[23:43:01] <FromDiscord> <mattrb> I do have a valid use for unsigned ints
[23:44:01] <FromDiscord> <mattrb> And I'm using ints because I need to apply need to add and subtract numbers from those uints, and it's faster to have a LUT for the values to add and subtract by
