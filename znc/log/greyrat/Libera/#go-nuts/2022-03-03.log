[00:00:44] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[00:01:38] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[00:07:15] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[00:09:31] *** Quits: Fossil (~Fossil@95.85.23.165) (Ping timeout: 245 seconds)
[00:10:50] *** Joins: Fossil (~Fossil@95.85.23.165)
[00:12:53] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[00:17:02] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[00:18:44] *** Quits: dalek_caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: dalek_caan)
[00:18:46] *** Quits: rostero (uid236576@id-236576.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:21:06] <seebs> i dunno, i think for and while are logically the same thing, switch/select feel a lot more different to me
[00:21:15] <seebs> switch is always immediate, select is a blocking operation
[00:23:23] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (Ping timeout: 272 seconds)
[00:23:56] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:27:49] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[00:28:18] <b0nn> I used to always mix them up and have little arguments with the compiler on who was right
[00:28:55] <b0nn> Altho, if we had one keyword for both types, things coule get very messy indeed
[00:29:08] <bpalmer> if they were spelled the same, you'd have to interpret switch a { case <- ch: /* ... */ } | does that match the first case only if the first item in the channel is == a ? If not, was it just a peek, or did you extract and discard an object from the queue?
[00:29:31] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[00:29:50] *** Quits: strubbl891941988 (~strubbl@ipbcc0c7cb.dynamic.kabel-deutschland.de) (Quit: The Lounge - https://thelounge.github.io)
[00:31:07] *** Joins: strubbl891941988 (~strubbl@ipbcc0c7cb.dynamic.kabel-deutschland.de)
[00:31:59] *** Quits: iryith1 (~iryith3@207.81-166-89.customer.lyse.net) (Quit: Leaving)
[00:32:16] *** Joins: iryith (~iryith3@207.81-166-89.customer.lyse.net)
[00:32:16] *** Quits: iryith (~iryith3@207.81-166-89.customer.lyse.net) (Changing host)
[00:32:16] *** Joins: iryith (~iryith3@user/iryith)
[00:40:09] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[00:41:40] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Remote host closed the connection)
[00:42:43] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[00:43:19] *** Joins: bluedust (~bluedust@103.165.167.61)
[00:44:44] *** Quits: bkircher_afk (~bkircher@2001:a61:246d:f401:4760:9a66:af72:3722) (Ping timeout: 250 seconds)
[00:47:25] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 240 seconds)
[00:49:43] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[00:54:17] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[00:56:00] <Mathisen> hello, if i want to concatenate two int,s should i just make them to strings so i just can do string1+string2 ? or is there a simple way for int,s to do this.
[00:56:53] <ikke> If you know the magnitude, you could multiply and add
[00:57:24] <ikke> 123, 456 -> 123 * 1000 + 456 = 123456
[00:57:59] *** Joins: henko (~henko@62-178-187-35.cable.dynamic.surfer.at)
[00:58:05] <Mathisen> yeah your way seems more logical
[00:58:12] <Mathisen> il try that
[01:00:57] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[01:01:10] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:02:36] *** Joins: wolfshappen_ (~waff@irc.furworks.de)
[01:02:39] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 272 seconds)
[01:02:56] <fizzie> It must be the national "concatenate two integers" day today, because a neighboring channel also had the same question at the same time. And came up with this "adaptive" approach when you don't know the magnitude: https://go.dev/play/p/DjiXf8fsfcm
[01:03:22] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:05:32] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:05:33] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[01:06:09] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:07:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[01:08:15] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:10:27] *** Quits: adip (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[01:11:01] *** Quits: adip_ (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[01:13:40] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[01:16:11] <bpalmer> what's wrong with math.Log10 ?
[01:16:45] <ikke> logarithms are scary :P
[01:17:04] <ikke> (not for me, mind you)
[01:17:04] <b0nn> heh, I've been sitting here thinking "Make them learn bit shifting like a proper developer!!"
[01:17:10] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[01:17:37] <ikke> b0nn: would that be usefull for powers of 10?
[01:17:40] <b0nn> (yes bit shifting will only work for binary
[01:17:43] <ikke> heh
[01:17:59] <bpalmer> also, the problem is vaguely defined; what is the concatenation of -1 and -2 ?
[01:18:13] <b0nn> -1-2-
[01:18:57] <bpalmer> what is the concatenation of math.MaxUint and 1 ?
[01:20:13] <bpalmer> concatenation going from int -> string is better defined, and for that fmt.Sprintf("%d%d", a, b) would probably suffice
[01:20:19] <b0nn> the definition was ints
[01:20:25] *** Joins: treeford (~charleste@user/treeford)
[01:20:33] <bpalmer> ok, math.MaxInt and 1
[01:21:29] *** Quits: henko (~henko@62-178-187-35.cable.dynamic.surfer.at) (Quit: WeeChat 3.4)
[01:23:11] <fizzie> Well, one thing that's wrong with math.Log10 is that a float64 can't represent all `int` values exactly on a 64-bit system.
[01:24:39] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:26:23] <b0nn> https://www.johndcook.com/blog/2009/04/06/numbers-are-a-leaky-abstraction/
[01:27:20] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 272 seconds)
[01:30:45] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:30:45] <bpalmer> fizzie: the Log10 would just be used to count how many digits are in a
[01:31:00] <fizzie> float64(99999999999999999) and float64(100000000000000000) are equal, so math.Log10 can't possibly distinguish between them, yet the latter has one more digit than the former.
[01:31:34] <bpalmer> hmm. OK, fair enough.
[01:32:00] *** Quits: ekathva (~ekathva@2001:999:51:19b8:865d:874e:7a83:9797) (Remote host closed the connection)
[01:34:57] *** Quits: Guest5916 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (Quit: Ping timeout (120 seconds))
[01:34:58] <KirkMcDonald> For a problem like this, it might also be nice if it could detect overflow and complain about it in some way.
[01:34:59] *** Joins: Guest5916 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[01:39:21] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:43:02] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[01:44:07] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:45:15] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[01:49:35] *** Joins: sagax (~sagax_nb@user/sagax)
[01:49:53] *** Joins: treeford (~charleste@user/treeford)
[01:52:19] *** Joins: khyr0n_ (~khyr0n@fixed-189-203-145-244.totalplay.net)
[01:54:12] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 240 seconds)
[01:54:19] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (Ping timeout: 256 seconds)
[01:55:30] *** Quits: khyr0n (~khyr0n@2806:2f0:9140:74dd:96ca:88f8:f549:5799) (Ping timeout: 252 seconds)
[01:55:47] *** Quits: khyr0n_ (~khyr0n@fixed-189-203-145-244.totalplay.net) (Read error: Connection reset by peer)
[01:56:48] *** Joins: khyr0n_ (~khyr0n@fixed-189-203-145-244.totalplay.net)
[01:59:20] *** Joins: khyr0n__ (~khyr0n@200.68.128.24)
[02:01:37] *** Quits: khyr0n_ (~khyr0n@fixed-189-203-145-244.totalplay.net) (Ping timeout: 240 seconds)
[02:03:20] <Mathisen> im new to go, and trying to learn. so i made this program that counts numbers 000 to 999 and the goal is that the number to the right need to be bigger then the one to the left. can some one give me an opinion on what i did >> https://bpa.st/KQ2Q
[02:03:41] <Mathisen> im not sure if this would be a "good" solusion for this or if it can be done in a smarter way
[02:05:46] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:06:12] *** Joins: rcernin (~rcernin@101.189.129.123)
[02:07:48] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[02:10:01] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[02:12:37] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:12:46] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Client Quit)
[02:12:55] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[02:37:38] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 272 seconds)
[02:39:04] *** Quits: redquasar (~redquasar@user/redquasar) (Quit: redquasar.xyz)
[02:42:38] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Quit: Client closed)
[02:42:51] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[02:43:47] <j416> Mathisen: https://go.dev/play/p/JE89wuuQOV5
[02:44:28] <j416> (I probably completely misunderstood what you are doing)
[02:44:56] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[02:45:52] <Mathisen> :) it should print numbers like 012 013... 023 024..034 035.. and so on.... so the the number to the right is always the biggest one.
[02:46:12] <j416> if I understand correctly though that you want to never have a number on the left be larger than one on the right, it looks to me like you could do it with just one num variable and divide it
[02:46:46] <Mathisen> i just found this exercise online and thought i give it a try.
[02:46:47] <j416> might make it a little bit more generic in that you could easily make it 4 digits, for instance
[02:47:30] <j416> these are fun exercises; the early days of each year aren't very difficult https://adventofcode.com/
[02:49:05] <j416> looks like you could probably achieve the same with nested loops, looping only the numbers needed
[02:49:20] <Mathisen> il take a look
[02:49:21] <j416> but, the way you did it might be just as readable, not sure.
[02:53:06] *** Joins: redquasar (~redquasar@user/redquasar)
[03:03:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[03:11:03] *** Joins: treeford (~charleste@user/treeford)
[03:13:41] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Leaving)
[03:18:48] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 272 seconds)
[03:25:33] *** Quits: albertito (~nil@37.228.204.251) (Ping timeout: 256 seconds)
[03:26:20] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[03:27:56] *** Joins: albertito (~nil@37.228.204.251)
[03:29:43] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:30:31] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[03:33:28] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:33:28] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[03:33:43] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:33:43] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[03:33:54] *** Joins: Garb0 (~Garb0@user/garb0)
[03:35:12] *** Quits: khyr0n__ (~khyr0n@200.68.128.24) (Read error: Connection reset by peer)
[03:37:21] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:37:21] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[03:38:18] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:38:18] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[03:43:07] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[03:43:27] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:43:27] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[03:43:42] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:43:42] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[03:45:39] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:45:39] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[03:49:59] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:49:59] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[03:50:59] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:50:59] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[03:51:14] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:51:14] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[03:51:44] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:51:44] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[03:52:13] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:52:13] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[03:53:11] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:53:11] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[03:55:11] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:55:11] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[03:55:39] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:55:39] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[03:56:01] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[03:56:53] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:56:53] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[03:58:04] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[03:58:04] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[03:59:19] *** Joins: krux02_ (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[03:59:53] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[04:00:01] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:00:01] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[04:02:13] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:02:13] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[04:03:41] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:03:41] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[04:05:08] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:05:08] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[04:05:53] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:05:53] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[04:06:51] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:06:51] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:07:44] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:08:19] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:08:19] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[04:08:50] *** Joins: Batzy (~quassel@user/batzy)
[04:09:04] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:09:04] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:11:14] *** Quits: moog (~moog@107.126.53.115) (Remote host closed the connection)
[04:11:47] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:11:47] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:12:46] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:12:46] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[04:14:16] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:14:16] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:15:00] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:15:00] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[04:15:30] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:15:30] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:15:34] *** Joins: troseman (~troseman@c-75-70-98-121.hsd1.co.comcast.net)
[04:16:00] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:16:00] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:16:44] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:16:44] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:17:13] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:17:13] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:17:57] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:17:57] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:18:27] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:18:27] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:19:11] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:19:11] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:19:19] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[04:19:26] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:19:26] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:19:50] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:20:04] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[04:20:12] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:20:12] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:22:11] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:22:11] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:22:55] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:22:55] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:24:08] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:24:08] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:25:08] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:25:08] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:25:51] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:25:51] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:26:06] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:26:06] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:26:21] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:26:21] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Remote host closed the connection)
[04:26:49] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:26:49] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (Read error: Connection reset by peer)
[04:27:19] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[04:32:12] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[04:32:57] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:42:59] *** Joins: alyx (alyx@atheme/alyx)
[04:44:18] *** Quits: krux02_ (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:37] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:50:29] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:50:38] *** Quits: hub (~hub@user/hub) (Quit: -)
[04:50:45] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[04:51:11] *** Joins: hub (~hub@user/hub)
[04:55:39] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:59:27] *** Joins: treeford (~charleste@user/treeford)
[05:06:45] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[05:20:37] *** Quits: tripfandango (~tripfanda@77.137.68.50) (Ping timeout: 240 seconds)
[05:22:56] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 272 seconds)
[05:30:32] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[05:31:21] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[05:36:36] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[05:41:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:41:48] *** Joins: rcernin (~rcernin@101.189.129.123)
[05:58:44] *** Praise- is now known as Praise
[06:01:38] *** Joins: ejjfunky (~ejjfunky@125.164.20.168)
[06:01:48] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 240 seconds)
[06:02:14] *** Joins: bluedust (~bluedust@103.165.167.61)
[06:04:55] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[06:05:32] *** Quits: pepee (~pepee@user/pepee) (Ping timeout: 240 seconds)
[06:06:38] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[06:07:51] *** Joins: pepee (~pepee@user/pepee)
[06:07:57] *** Joins: rcernin (~rcernin@101.189.129.123)
[06:10:27] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:11:34] *** Joins: hackers (~self@user/hackers)
[06:11:39] *** hackers is now known as remote
[06:11:46] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[06:13:18] *** Joins: justAstache (~justache@user/justache)
[06:18:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:20:52] *** Joins: sentriz_ (~sentriz@109.255.139.98)
[06:21:14] <b0nn> Mathisen: https://go.dev/play/p/L8Kz6SuJDJK
[06:21:25] <b0nn> because bored when I should be working
[06:21:47] *** Quits: sentriz (~sentriz@109.255.139.98) (Ping timeout: 256 seconds)
[06:21:47] *** sentriz_ is now known as sentriz
[06:22:02] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[06:24:07] *** Joins: jackneillll (~jackneill@20014C4E1805D5007FF2EE324C2DEE4E.dsl.pool.telekom.hu)
[06:26:46] *** Quits: jackneilll (~jackneill@86FF4560.dsl.pool.telekom.hu) (Ping timeout: 260 seconds)
[06:28:43] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Read error: Connection reset by peer)
[06:32:27] *** Joins: moog (~moog@107.126.53.115)
[06:34:27] *** Joins: khyr0n__ (~khyr0n@2806:2f0:9140:74dd:96ca:88f8:f549:5799)
[06:35:39] *** Joins: stormyyd (~stormyyd@58.35.205.51)
[06:37:29] *** Parts: stormyyd (~stormyyd@58.35.205.51) ()
[06:38:28] *** Quits: khyr0n__ (~khyr0n@2806:2f0:9140:74dd:96ca:88f8:f549:5799) (Client Quit)
[06:46:28] *** Joins: khyr0n (~khyr0n@2806:2f0:9140:74dd:96ca:88f8:f549:5799)
[06:47:38] *** Joins: treeford (~charleste@user/treeford)
[06:52:04] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[06:53:19] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Quit: ZNC 1.8.2 - https://znc.in)
[06:53:34] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[06:53:34] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[06:53:34] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[06:57:27] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:59:06] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 252 seconds)
[07:00:01] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[07:03:52] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:04:30] *** Joins: SteveR (~SteveR@4.53.131.109)
[07:07:23] *** Quits: andlabs (~andlabs@104.132.34.100) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:08:49] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[07:08:50] *** Quits: Garb0 (~Garb0@user/garb0) (Quit: WeeChat 3.0)
[07:16:37] *** Quits: pepee (~pepee@user/pepee) (Quit: WeeChat 2.8)
[07:26:20] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:30:05] *** Quits: mooff (mooff@awful.cooking) (Read error: Connection reset by peer)
[07:32:59] *** Joins: mooff (mooff@awful.cooking)
[07:36:00] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:41:59] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:44:26] *** Joins: irontom (~user@38.81.106.9)
[07:45:36] *** Joins: andlabs (~andlabs@2605:ef80:8050:42:f02c:7c1f:ff4:2427)
[08:04:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[08:06:31] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[08:11:43] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[08:15:16] *** Quits: RhinosF1 (uid339563@miraheze/RhinosF1) (Quit: Connection closed for inactivity)
[08:18:32] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:22:21] *** Joins: han-solo (~hanish@user/han-solo)
[08:22:22] <b0nn> In fact; all that mucking about with increments the easier way is to have three nested loops https://go.dev/play/p/83nnse9eDAe
[08:22:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[08:23:48] <b0nn> When the first loop runs - it's going to give 0 - 9, when the inside loop runs, it's always going to start immediately to the right of the first loop's position, and similar with the loop inside that
[08:25:11] <b0nn> I used an []string because 1) this is a display thing, not a math thing, and 2) it can be used for any symbol set (eg, a greek or latin alphabet)
[08:26:40] <b0nn> little tidy up (removed unused code and use the first character, not hardcode what that might be in the initial string https://go.dev/play/p/I1w1r3plxCS
[08:27:13] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[08:36:14] *** Joins: treeford (~charleste@user/treeford)
[08:38:41] *** Joins: rairden (~rairden@2603:9000:de04:9613::1a20)
[08:43:17] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 240 seconds)
[08:43:30] *** Joins: ghost08 (~ghost08@adsl-dyn50.78-99-213.t-com.sk)
[08:58:19] *** Quits: andlabs (~andlabs@2605:ef80:8050:42:f02c:7c1f:ff4:2427) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:02:57] *** Quits: irontom (~user@38.81.106.9) (Ping timeout: 240 seconds)
[09:23:46] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 268 seconds)
[09:25:18] *** Joins: Everything (~Everythin@37.115.210.35)
[09:27:53] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[09:28:18] *** Joins: jkl (~jkl@user/jkl)
[09:28:48] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:30:00] *** Quits: remote (~self@user/hackers) (Quit: leaving)
[09:33:05] *** Joins: treeford (~charleste@user/treeford)
[09:33:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[09:40:41] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[09:41:08] *** Quits: GJdan (~quassel@107-190-26-133.cpe.teksavvy.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:44:04] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[09:44:37] *** Joins: GJdan (~quassel@107-190-26-133.cpe.teksavvy.com)
[09:44:59] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[10:03:42] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:07:37] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[10:08:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[10:12:25] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[10:15:49] *** Quits: fhs (~fhs@pool-100-33-53-73.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[10:17:12] *** Joins: fef (~thedawn@user/thedawn)
[10:17:16] *** Joins: mrig (~mrig@user/mrig)
[10:20:17] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:25:17] *** Joins: RhinosF1 (uid339563@miraheze/RhinosF1)
[10:25:36] *** Joins: bkircher_afk (~bkircher@2001:a61:246d:f401:4760:9a66:af72:3722)
[10:26:54] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[10:28:26] *** bkircher_afk is now known as bkircher
[10:31:55] *** Quits: bkircher (~bkircher@2001:a61:246d:f401:4760:9a66:af72:3722) (Quit: Leaving)
[10:32:36] *** Quits: normen (~normen@p200300d71749cc0051a927f78ca16be9.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:32:55] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Remote host closed the connection)
[10:33:17] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[10:33:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[10:37:17] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[10:39:03] *** Quits: SteveR (~SteveR@4.53.131.109) (Ping timeout: 256 seconds)
[10:40:11] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[10:42:16] *** Joins: fhs (~fhs@pool-100-33-53-73.nycmny.fios.verizon.net)
[10:44:05] *** Quits: rcernin (~rcernin@101.189.129.123) (Quit: WeeChat 3.4)
[10:45:28] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:47:30] *** Quits: Natch (~natch@c-4db8e255.014-297-73746f25.bbcust.telenor.se) (Ping timeout: 250 seconds)
[10:55:54] *** Joins: saschagrunert (~saschagru@46.128.124.48)
[10:59:01] *** Joins: normen (~normen@p200300d71749cc00a8a6ea716d0dbb21.dip0.t-ipconnect.de)
[11:00:13] *** Joins: moto (~moto@user/moto)
[11:00:23] *** Joins: adip (~adip@den37.neoplus.adsl.tpnet.pl)
[11:00:25] *** Joins: adip_ (~adip@den37.neoplus.adsl.tpnet.pl)
[11:11:41] *** Joins: ajfriesen701 (~ajfriesen@cable-78-35-98-50.nc.de)
[11:12:39] *** Quits: ajfriesen70 (~ajfriesen@cable-78-35-98-50.nc.de) (Ping timeout: 252 seconds)
[11:12:39] *** ajfriesen701 is now known as ajfriesen70
[11:13:20] *** Joins: andlabs (~andlabs@70.107.171.168)
[11:15:36] *** Joins: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net)
[11:18:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:19:12] *** Joins: rendar (~rendar@user/rendar)
[11:20:16] *** bq is now known as nz
[11:21:19] *** Joins: treeford (~charleste@user/treeford)
[11:22:59] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[11:24:02] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:28:39] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[11:30:03] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:31:44] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[11:34:17] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[11:34:47] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[11:35:08] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[11:38:35] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[11:40:30] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[11:43:04] *** Joins: xsteadfastx (~marv@94.31.99.245)
[11:50:12] *** Joins: tripfandango (~tripfanda@2a02:6680:2106:9d0c:e8c4:f074:1193:f6d3)
[11:52:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:52:43] *** Quits: yuckey2d (~yuckey2d@gateway/vpn/pia/yuckey2d) (Ping timeout: 256 seconds)
[11:55:02] *** Joins: shka (~herr@109.231.3.55)
[11:56:17] *** Quits: xsteadfastx (~marv@94.31.99.245) (Ping timeout: 240 seconds)
[11:56:59] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[12:00:28] *** Joins: yuckey2d (~yuckey2d@gateway/vpn/pia/yuckey2d)
[12:08:31] *** Joins: arinov_ (~arinov@213.194.126.155)
[12:08:32] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[12:08:50] *** Joins: treeford (~charleste@user/treeford)
[12:09:19] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:13:07] *** Quits: foobaz21248 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[12:13:58] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[12:16:15] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 240 seconds)
[12:16:30] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 272 seconds)
[12:19:44] *** Joins: Natch (~natch@c83-254-0-119.bredband.tele2.se)
[12:19:46] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[12:20:55] *** Joins: absc (~absc@81.31.144.28)
[12:23:34] *** Joins: masoudd (~masoudd@user/masoudd)
[12:24:49] <aLeSD[m]> is the embedding the best way to implement inheritance in golang ?
[12:25:33] <b0nn> composition is what you are doing, it's similar to, but not the same as inheritance
[12:26:17] <aLeSD[m]> or maybe something like :
[12:26:17] <aLeSD[m]> type MyClass Parent
[12:26:17] <aLeSD[m]> func (b MyClass) f() {}
[12:27:39] <b0nn> I recommend you do some reading, maybe start with https://en.wikipedia.org/wiki/Composition_over_inheritance
[12:29:21] <b0nn> maybe https://www.journaldev.com/12086/composition-vs-inheritance too
[12:30:34] *** Quits: w[m]1 (~welt@2001:470:69fc:105::1:7409) (Quit: You have been kicked for being idle)
[12:34:56] <aLeSD[m]> b0nn: do you mean that embedding is composition ?
[12:35:03] <b0nn> yes
[12:35:54] <aLeSD[m]> but composition to not expose the public methods of the composing parts
[12:36:23] <aLeSD[m]> struct A { B } ... <--- this expose all the public parts of B
[12:36:52] <b0nn> yes, although you can prefer A's
[12:38:20] <aLeSD[m]> ok ... let's say that goLang designing idea is to avoid to implement the forwarding methods by that
[12:39:10] <aLeSD[m]> a private composition is
[12:39:10] <aLeSD[m]> struct A { b B }
[12:39:55] <aLeSD[m]> I think I am missing all the interface desing stuff
[12:40:10] <b0nn> struct A { b B} isn't composition
[12:40:34] <b0nn> at that point b is a field in A that you need to provide an instance of B when you build
[12:41:45] <b0nn> https://go.dev/play/p/PTUeV69qXc0
[12:41:45] <aLeSD[m]> mmm ... you make me doubt ... cause compostion in C++ is :
[12:41:46] <aLeSD[m]> class A { B b; }
[12:44:27] <aLeSD[m]> I see what you mean ... but in my opinion both are composition with the difference that the former create all the forwarding function
[12:45:03] <aLeSD[m]> s/create/avoid/, s/all/creating/, s/function/functions/
[12:45:17] *** Quits: tripfandango (~tripfanda@2a02:6680:2106:9d0c:e8c4:f074:1193:f6d3) (Ping timeout: 240 seconds)
[12:46:57] <aLeSD[m]> b0nn: https://go.dev/play/p/Gdk3F-8OAvu
[12:48:19] <b0nn> aLeSD[m]: In your example you are having to call the method from a
[12:48:43] *** Joins: tripfandango (~tripfanda@188.64.206.14)
[12:48:45] <b0nn> that is because b is a field, a is not "composed" of b
[12:49:40] <aLeSD[m]> I think we have a different concept of composing.
[12:50:10] <aLeSD[m]> I explain my concept .. maybe I am wrong and I want to fix it
[12:50:57] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (Ping timeout: 240 seconds)
[12:51:16] *** Joins: Snyp (~Snyp@49.207.217.84)
[12:51:51] <aLeSD[m]> My idea is that if you destroy the main struct all the composed part are destroyed ... <--- that's my composition idea.
[12:51:51] <aLeSD[m]> At the opposite aggragation is when if you destroy the main struct the aggregated still is alive
[12:52:42] <aLeSD[m]> aggregation : shared resource | compostion owner resource
[12:53:17] <aLeSD[m]> in the 2 snips of code we exposed, both are composition example
[12:53:23] <aLeSD[m]> (my way)
[12:54:06] * aLeSD[m] is sorry for his english
[12:54:20] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[12:55:11] <aLeSD[m]> however the design by composition implies lots of interfaces ... I don't get it very well
[12:56:38] <b0nn> Yeah - I think it's better if you spend some time reading Go's way of doing composition
[12:57:29] *** Quits: rairden (~rairden@2603:9000:de04:9613::1a20) (Quit: rairden)
[12:58:17] <aLeSD[m]> sometimes I find the code in go very confusing
[13:00:50] <han-solo> i thought, `type Some struct { Other }` was sugar for `type some struct { Other Other }` // :|
[13:01:38] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[13:01:48] <han-solo> so you could call `Other`'s attributes using `var s Some; s.somethingOnOther(); s.Other.somethingOnOther()`
[13:06:57] <aLeSD[m]> yes they were trying to avoid the implementation of forwarding methods
[13:07:52] <han-solo> which works seemlessly without having to `s.TheThing.SomeMethod` when i have to compose somethig, now i see
[13:08:07] <han-solo> my idea of composition was a field, but apparently i guess it is not
[13:10:06] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[13:12:20] *** Joins: Berlin36 (~Berlin36@user/berlin36)
[13:12:24] <Berlin36> yo
[13:17:57] <aLeSD[m]> <han-solo> "which works seemlessly without..." <- ah! you are right. The forwarding methods are need only if the attribute is private. In your case you can access it.
[13:18:30] *** Joins: bluedust (~bluedust@103.165.167.61)
[13:24:04] *** Joins: bluedust_ (~bluedust@185.248.85.10)
[13:25:31] *** Quits: bluedust (~bluedust@103.165.167.61) (Read error: Connection reset by peer)
[13:25:33] *** Joins: bluedus__ (~bluedust@103.165.167.61)
[13:26:12] *** Quits: Natch (~natch@c83-254-0-119.bredband.tele2.se) (Ping timeout: 240 seconds)
[13:26:51] *** Quits: Snyp (~Snyp@49.207.217.84) (Quit: Textual IRC Client: www.textualapp.com)
[13:28:37] *** Quits: bluedust_ (~bluedust@185.248.85.10) (Ping timeout: 240 seconds)
[13:29:33] *** Joins: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se)
[13:30:06] *** Quits: couchllama (~llama@2604:a880:400:d0::1f90:1) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[13:30:45] *** Joins: couchllama (~llama@2604:a880:400:d0::1f90:1)
[13:32:18] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[13:32:43] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:37:33] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[13:39:53] *** Quits: effprime (~effprime@user/effprime) (Read error: Connection reset by peer)
[13:40:46] *** Joins: effprime (~effprime@user/effprime)
[13:51:01] *** Quits: normen (~normen@p200300d71749cc00a8a6ea716d0dbb21.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[13:56:46] *** Joins: strNophix (~niku@86-83-36-18.fixed.kpn.net)
[13:58:44] *** Joins: foobaz21248 (~foobaz212@152.37.103.80)
[14:09:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:14:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[14:14:32] *** Parts: mickey8 (~user@user/mickey) ()
[14:16:38] *** Quits: absc (~absc@81.31.144.28) (Read error: Connection reset by peer)
[14:16:54] *** Joins: absc (~absc@81.31.144.28)
[14:22:05] *** Quits: shtirlic (~shtirlic@95-55-25-160.dynamic.avangarddsl.ru) (Ping timeout: 256 seconds)
[14:24:25] *** Joins: shtirlic (~shtirlic@95-55-25-160.dynamic.avangarddsl.ru)
[14:24:43] *** Quits: shtirlic (~shtirlic@95-55-25-160.dynamic.avangarddsl.ru) (Remote host closed the connection)
[14:35:55] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[14:36:02] *** Quits: vt (~vt@osa.vbc.su) (Remote host closed the connection)
[14:37:13] *** Joins: vt (~vt@osa.vbc.su)
[14:37:41] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[14:38:29] *** Quits: bluedus__ (~bluedust@103.165.167.61) (Remote host closed the connection)
[14:39:04] *** Joins: bluedust (~bluedust@103.165.167.61)
[14:42:26] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[14:43:49] *** Joins: novns (~novns@user/novns)
[14:44:25] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 256 seconds)
[14:45:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:50:05] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[14:52:58] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fb4d-184.dhcp.inet.fi)
[14:58:33] <aLeSD[m]> if a function returns more than 2 values (value1, error) do you think a custom type is needed ? (*CustomType, error) ?
[14:59:01] <chilversc> that really depends upon the function and the data types involved
[14:59:19] <chilversc> eg, I would suggest a custom struct if it were say returning (string, string, error) as that can get confusing
[14:59:41] *** Joins: bluedust (~bluedust@103.165.167.61)
[14:59:49] <chilversc> if its say some sort of lookup function that returns (string, bool, error), which would then be value, ok, error := ... then maybe not
[15:00:42] <aLeSD[m]> ok thanks
[15:02:02] <chilversc> also, I'd normally return it as a value type (CustomType, error) unless I have a good reason to make it a pointer, at which point the only difference between returning multiple values vs a struct is in how the code reads
[15:11:23] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:22:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:26:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[15:29:25] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[15:29:58] *** Joins: normen (~normen@pd9eecc5a.dip0.t-ipconnect.de)
[15:31:27] *** Quits: Berlin36 (~Berlin36@user/berlin36) (Ping timeout: 256 seconds)
[15:32:41] *** Quits: Icycle (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[15:34:01] <aLeSD[m]> chilversc: Interesting .. I usually return a pointer to point out that I am moving the ownership outside ... maybe it is more useful for factory functions
[15:34:44] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[15:35:38] <aLeSD[m]> yes ... I think it make sense only for New* functions. In the case of a member function it can be confused and it could seem that an internal is exposed
[15:36:08] <aLeSD[m]> s/make/makes/
[15:37:57] *** Quits: beholders_eye (~weechat@2804:7f3:686:2b5e:c356:e59:11fd:363b) (Ping timeout: 240 seconds)
[15:38:10] *** Joins: bluedust (~bluedust@103.165.167.61)
[15:40:27] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[15:42:06] *** Quits: nj (nicholas@stop.disconnecting.me) (Ping timeout: 260 seconds)
[15:42:50] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Quit: Ping timeout (120 seconds))
[15:42:52] *** Quits: zerok (~zerok@user/zerok) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[15:44:01] *** Joins: zerok (~zerok@user/zerok)
[15:49:53] *** Joins: mei (~mei@user/mei)
[15:52:35] *** Joins: keesj (~keesj@213-10-197-6.fixed.kpn.net)
[15:53:43] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:55:10] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e)
[15:56:41] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fb4d-184.dhcp.inet.fi) (Ping timeout: 256 seconds)
[15:58:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[15:59:17] *** Quits: keesj (~keesj@213-10-197-6.fixed.kpn.net) (Quit: WeeChat 2.8)
[15:59:42] *** Joins: Atque (~Atque@user/atque)
[16:07:34] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[16:12:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:13:25] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e)
[16:13:25] *** Joins: memes (~keesj@213-10-197-6.fixed.kpn.net)
[16:13:50] *** Joins: mickey (~user@user/mickey)
[16:14:46] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e) (Ping timeout: 260 seconds)
[16:15:01] *** Joins: Merwede (~Merwede@ip-217-103-32-110.ip.prioritytelecom.net)
[16:16:59] *** Joins: beholders_eye (~weechat@2804:7f3:686:2b5e:c356:e59:11fd:363b)
[16:17:21] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:19:55] <memes> Hi, I am .. using software called playwith docker written in go-lang and I am basically .. trying to tweak it a little bit for my needs. I there is a map[string]map[string]*oauth2.Config() object I am trying to .. initalize properly https://github.com/play-with-docker/play-with-docker/blob/master/config/config.go#L44 Basically I modified it to look like this https://pastebin.com/D9thXtyP
[16:19:57] <memes> The code that will read this is located here https://github.com/play-with-docker/play-with-docker/blob/master/handlers/login.go#L39 and I added a print statement to print config.Providers and this prints the following
[16:19:59] <memes> map[580ab234-e762-5f1c-abe5-1c61e9313428:map[]]
[16:20:01] <memes> Why is the last map empty do you think?
[16:22:00] *** Joins: henry40408 (~henry4040@175.181.153.66)
[16:22:03] *** Quits: mlaogd^ (~mlaogd@207.243.108.170) (Remote host closed the connection)
[16:23:59] <fizzie> Possibly some other piece of the code modifies the map after initialization. Because your pasted snippet extended with the minimal surrounding code to make it runnable prints what you'd expect: https://go.dev/play/p/YTB_ZMsMmqh
[16:24:47] *** Joins: nj (nicholas@stop.disconnecting.me)
[16:25:28] <fizzie> For example, this kind of line would overwrite whatever you initially put there with an empty map: https://github.com/play-with-docker/play-with-docker/blob/102c998/handlers/bootstrap.go#L250
[16:27:49] <memes> alright ! this is indeed probably what is going on..
[16:28:25] *** Quits: qilx (~quassel@62.201.21.8) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:30:39] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:35:09] *** Joins: llorllale (~llorllale@198.98.119.85)
[16:35:15] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:35:26] *** Quits: henry40408 (~henry4040@175.181.153.66) (Quit: The Lounge - https://thelounge.chat)
[16:35:54] *** Joins: henry40408 (~henry4040@175.181.153.66)
[16:46:19] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[16:46:52] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[16:46:53] <memes> fizzie: tanks I spend way to much time  scratching my head but things are starting to work
[16:47:00] *** Joins: bluedust (~bluedust@103.165.167.61)
[16:55:30] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[16:59:44] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[17:01:04] *** Quits: beholders_eye (~weechat@2804:7f3:686:2b5e:c356:e59:11fd:363b) (*.net *.split)
[17:01:04] *** Quits: Merwede (~Merwede@ip-217-103-32-110.ip.prioritytelecom.net) (*.net *.split)
[17:01:04] *** Quits: shka (~herr@109.231.3.55) (*.net *.split)
[17:01:04] *** Quits: RhinosF1 (uid339563@miraheze/RhinosF1) (*.net *.split)
[17:01:04] *** Quits: mooff (mooff@awful.cooking) (*.net *.split)
[17:01:04] *** Quits: sentriz (~sentriz@109.255.139.98) (*.net *.split)
[17:01:04] *** Quits: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net) (*.net *.split)
[17:01:04] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (*.net *.split)
[17:01:04] *** Quits: Guest5916 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (*.net *.split)
[17:01:04] *** Quits: wolfshappen_ (~waff@irc.furworks.de) (*.net *.split)
[17:01:04] *** Quits: Fossil (~Fossil@95.85.23.165) (*.net *.split)
[17:01:04] *** Quits: sailorCat (~sailorCat@mail2.gajsin.name) (*.net *.split)
[17:01:04] *** Quits: theo (~theo@user/theo) (*.net *.split)
[17:01:04] *** Quits: Techcable (~Techcable@168.235.93.147) (*.net *.split)
[17:01:04] *** Quits: dasrael (~rabbit@user/dasrael) (*.net *.split)
[17:01:04] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (*.net *.split)
[17:01:04] *** Quits: R2robot (~R2robot@user/r2robot) (*.net *.split)
[17:01:04] *** Quits: Wessie (~Wessie@static.226.41.47.78.clients.your-server.de) (*.net *.split)
[17:01:04] *** Quits: kadobanana (~mud@user/kadoban) (*.net *.split)
[17:01:04] *** Quits: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net) (*.net *.split)
[17:01:04] *** Quits: synfinatic (~synfinati@mail.synfin.net) (*.net *.split)
[17:01:04] *** Quits: Echoz (~chris@user/echoz) (*.net *.split)
[17:01:04] *** Quits: opcode (~opcode@user/opcode) (*.net *.split)
[17:01:04] *** Quits: baakeydow (~baake@2001:41d0:203:b12c::) (*.net *.split)
[17:01:04] *** Quits: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090) (*.net *.split)
[17:01:04] *** Quits: void09 (~void@150.230.21.57) (*.net *.split)
[17:01:04] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (*.net *.split)
[17:01:04] *** Quits: chripell (~chripell@147.80.76.34.bc.googleusercontent.com) (*.net *.split)
[17:01:04] *** Quits: whoami (~whoami@d118-75-54-10.try.wideopenwest.com) (*.net *.split)
[17:01:04] *** Quits: clee (~clee@209.198.135.112) (*.net *.split)
[17:01:04] *** Quits: connor_k (~connor_k@ip68-102-25-198.ks.ok.cox.net) (*.net *.split)
[17:01:04] *** Quits: snits (~quassel@ip98-179-76-75.ph.ph.cox.net) (*.net *.split)
[17:01:04] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[17:01:04] *** Quits: Cork (~Cork@user/cork) (*.net *.split)
[17:01:04] *** Quits: notevil (~notevil@user/notevil) (*.net *.split)
[17:01:04] *** Quits: avery (sid501608@id-501608.uxbridge.irccloud.com) (*.net *.split)
[17:01:04] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (*.net *.split)
[17:01:04] *** Quits: Balooga (sid407689@id-407689.lymington.irccloud.com) (*.net *.split)
[17:01:04] *** Quits: marlinc (~marlinc@user/marlinc) (*.net *.split)
[17:01:04] *** Quits: catbeard (~noise@user/catbeard) (*.net *.split)
[17:01:04] *** Quits: chimeracoder_ (sid230642@2a03:5180:f:1::3:84f2) (*.net *.split)
[17:01:04] *** Quits: Kaivo (~Kaivo@user/kaivo) (*.net *.split)
[17:01:04] *** Quits: mrtazz (~mrtazz@portal.unwiredcouch.com) (*.net *.split)
[17:01:04] *** Quits: seebs (~seebs@24.196.59.174) (*.net *.split)
[17:01:04] *** Quits: Herby (~quassel@merkur.graeber-clan.de) (*.net *.split)
[17:01:04] *** Quits: nucleargrave (~nucleargr@user/nuclearg1) (*.net *.split)
[17:01:04] *** Quits: seds (sid492514@user/seds) (*.net *.split)
[17:01:04] *** Quits: dfch (~dfch@user/dfch) (*.net *.split)
[17:01:04] *** Quits: amigan (dramoray@dtvax.dynatron.me) (*.net *.split)
[17:01:04] *** Quits: ssiyad (~ssiyad@user/ssiyad) (*.net *.split)
[17:01:04] *** Quits: syg_ (~syg@flamebot.net) (*.net *.split)
[17:01:04] *** Quits: zwindl (~abc@user/abc) (*.net *.split)
[17:01:04] *** Quits: rewt (~default@user/rewt) (*.net *.split)
[17:01:04] *** Quits: deepy (deepy@user/deepy) (*.net *.split)
[17:01:04] *** Quits: higgins (~higgins@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[17:01:04] *** Quits: anticw (~anticw@157-131-153-146.fiber.dynamic.sonic.net) (*.net *.split)
[17:01:04] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (*.net *.split)
[17:02:30] *** Joins: beholders_eye (~weechat@2804:7f3:686:2b5e:c356:e59:11fd:363b)
[17:02:30] *** Joins: Merwede (~Merwede@ip-217-103-32-110.ip.prioritytelecom.net)
[17:02:30] *** Joins: shka (~herr@109.231.3.55)
[17:02:30] *** Joins: RhinosF1 (uid339563@miraheze/RhinosF1)
[17:02:30] *** Joins: mooff (mooff@awful.cooking)
[17:02:30] *** Joins: sentriz (~sentriz@109.255.139.98)
[17:02:30] *** Joins: endigma (~endigma@drmons0552w-134-41-91-32.dhcp-dynamic.fibreop.ns.bellaliant.net)
[17:02:30] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[17:02:30] *** Joins: Guest5916 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[17:02:30] *** Joins: wolfshappen_ (~waff@irc.furworks.de)
[17:02:30] *** Joins: Fossil (~Fossil@95.85.23.165)
[17:02:30] *** Joins: sailorCat (~sailorCat@mail2.gajsin.name)
[17:02:30] *** Joins: theo (~theo@user/theo)
[17:02:30] *** Joins: dasrael (~rabbit@user/dasrael)
[17:02:30] *** Joins: Techcable (~Techcable@168.235.93.147)
[17:02:30] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[17:02:30] *** Joins: R2robot (~R2robot@user/r2robot)
[17:02:30] *** Joins: Wessie (~Wessie@static.226.41.47.78.clients.your-server.de)
[17:02:30] *** Joins: kadobanana (~mud@user/kadoban)
[17:02:30] *** Joins: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net)
[17:02:30] *** Joins: synfinatic (~synfinati@mail.synfin.net)
[17:02:30] *** Joins: mrtazz (~mrtazz@portal.unwiredcouch.com)
[17:02:30] *** Joins: Echoz (~chris@user/echoz)
[17:02:30] *** Joins: opcode (~opcode@user/opcode)
[17:02:30] *** Joins: baakeydow (~baake@2001:41d0:203:b12c::)
[17:02:30] *** Joins: packet_lozenge (~packet_lo@user/packet-lozenge/x-7125090)
[17:02:30] *** Joins: void09 (~void@150.230.21.57)
[17:02:30] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[17:02:30] *** Joins: chripell (~chripell@147.80.76.34.bc.googleusercontent.com)
[17:02:30] *** Joins: whoami (~whoami@d118-75-54-10.try.wideopenwest.com)
[17:02:30] *** Joins: clee (~clee@209.198.135.112)
[17:02:30] *** Joins: connor_k (~connor_k@ip68-102-25-198.ks.ok.cox.net)
[17:02:30] *** Joins: snits (~quassel@ip98-179-76-75.ph.ph.cox.net)
[17:02:30] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[17:02:30] *** Joins: Cork (~Cork@user/cork)
[17:02:30] *** Joins: notevil (~notevil@user/notevil)
[17:02:30] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[17:02:30] *** Joins: avery (sid501608@id-501608.uxbridge.irccloud.com)
[17:02:30] *** Joins: Balooga (sid407689@id-407689.lymington.irccloud.com)
[17:02:30] *** Joins: marlinc (~marlinc@user/marlinc)
[17:02:30] *** Joins: catbeard (~noise@user/catbeard)
[17:02:30] *** Joins: chimeracoder_ (sid230642@2a03:5180:f:1::3:84f2)
[17:02:30] *** Joins: Kaivo (~Kaivo@user/kaivo)
[17:02:30] *** Joins: seebs (~seebs@24.196.59.174)
[17:02:30] *** Joins: Herby (~quassel@merkur.graeber-clan.de)
[17:02:30] *** Joins: nucleargrave (~nucleargr@user/nuclearg1)
[17:02:30] *** Joins: seds (sid492514@user/seds)
[17:02:30] *** Joins: dfch (~dfch@user/dfch)
[17:02:30] *** Joins: amigan (dramoray@dtvax.dynatron.me)
[17:02:30] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[17:02:30] *** Joins: syg_ (~syg@flamebot.net)
[17:02:30] *** Joins: zwindl (~abc@user/abc)
[17:02:30] *** Joins: rewt (~default@user/rewt)
[17:02:30] *** Joins: deepy (deepy@user/deepy)
[17:02:30] *** Joins: higgins (~higgins@static.38.6.217.95.clients.your-server.de)
[17:02:30] *** Joins: anticw (~anticw@157-131-153-146.fiber.dynamic.sonic.net)
[17:02:30] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[17:03:16] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (Max SendQ exceeded)
[17:03:16] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Max SendQ exceeded)
[17:03:16] *** Quits: Techcable (~Techcable@168.235.93.147) (Max SendQ exceeded)
[17:03:16] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Max SendQ exceeded)
[17:03:16] *** Quits: deepy (deepy@user/deepy) (Max SendQ exceeded)
[17:03:16] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (Max SendQ exceeded)
[17:03:16] *** Quits: wolfshappen_ (~waff@irc.furworks.de) (Max SendQ exceeded)
[17:03:16] *** Quits: ssiyad (~ssiyad@user/ssiyad) (Max SendQ exceeded)
[17:03:24] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[17:03:24] *** Joins: Techcable (~Techcable@168.235.93.147)
[17:03:32] *** Joins: wolfshappen (~waff@irc.furworks.de)
[17:03:57] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[17:04:07] *** Joins: deepy (deepy@user/deepy)
[17:04:14] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[17:05:01] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:05:28] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[17:07:13] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[17:09:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[17:13:02] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[17:16:43] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[17:17:35] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:18:16] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e)
[17:20:46] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e) (Ping timeout: 245 seconds)
[17:21:04] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Quit: WeeChat 3.4)
[17:25:06] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[17:27:10] *** Joins: theo4 (~theo@user/theo)
[17:29:18] *** Joins: X-Scale` (~ARM@83.223.250.236)
[17:29:54] *** Joins: zwischenzug_ (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[17:30:11] *** Quits: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Ping timeout: 256 seconds)
[17:30:36] *** Quits: X-Scale (~ARM@135.232.28.37.rev.vodafone.pt) (Ping timeout: 240 seconds)
[17:30:38] *** X-Scale` is now known as X-Scale
[17:30:43] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[17:30:59] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:31:17] *** Quits: theo (~theo@user/theo) (Ping timeout: 240 seconds)
[17:31:17] *** theo4 is now known as theo
[17:42:58] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[17:43:23] *** Joins: masoudd (~masoudd@user/masoudd)
[17:51:10] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e)
[17:52:29] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e) (Ping timeout: 252 seconds)
[17:58:15] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[17:59:08] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 272 seconds)
[18:00:17] *** Joins: treeford (~charleste@user/treeford)
[18:07:35] *** Quits: zwischenzug_ (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Ping timeout: 256 seconds)
[18:10:05] *** Guest5916 is now known as gspbirel56
[18:17:04] *** Joins: zwischenzug_ (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[18:20:59] *** Quits: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (Killed (mercury.libera.chat (Nickname regained by services)))
[18:21:21] *** Joins: Guest3081 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[18:23:12] *** Quits: zwischenzug_ (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Ping timeout: 272 seconds)
[18:24:14] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e) (Ping timeout: 250 seconds)
[18:24:35] *** Quits: tripfandango (~tripfanda@188.64.206.14) (Ping timeout: 268 seconds)
[18:29:46] <mickey> im trying to port some nodejs app that uses firebase to watch a database and act on updates. i found https://pkg.go.dev/firebase.google.com/go/v4 but it doesnt seem to support some (basic?) functionality like apikey, authdomain, etc. are you aware of a decent module for that?
[18:30:10] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 272 seconds)
[18:32:18] *** Joins: arkurious (~arkurious@user/arkurious)
[18:33:36] <xb0o2> mickey: Might be misunderstanding but https://pkg.go.dev/google.golang.org/api/option#WithAPIKey ?
[18:41:28] *** Joins: dsrt^ (~dsrt@207.243.108.170)
[18:50:12] *** Joins: bluedust_ (~bluedust@185.248.85.10)
[18:50:13] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[18:50:27] *** Joins: rvalue (~rvalue@user/rvalue)
[18:53:11] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 256 seconds)
[18:53:31] *** Quits: henry40408 (~henry4040@175.181.153.66) (Quit: The Lounge - https://thelounge.chat)
[18:54:20] *** Joins: henry40408 (~henry4040@175.181.153.66)
[18:55:54] *** Quits: ghost08 (~ghost08@adsl-dyn50.78-99-213.t-com.sk) (Quit: WeeChat 3.4)
[18:55:58] *** Quits: bluedust_ (~bluedust@185.248.85.10) (Remote host closed the connection)
[18:57:49] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e)
[18:58:52] *** Joins: tripfandango (~tripfanda@5.29.15.59)
[19:01:45] <mickey> xb0o2 likely, yes, but there's authDomain as well and stuff
[19:03:00] *** Quits: tripfandango (~tripfanda@5.29.15.59) (Ping timeout: 240 seconds)
[19:05:16] *** Quits: t0xicCode (~t0xicCode@user/t0xiccode) (Quit: ZNC - https://znc.in)
[19:05:16] *** Quits: RhinosF1 (uid339563@miraheze/RhinosF1) (Quit: Connection closed for inactivity)
[19:07:01] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[19:07:16] *** Joins: t0xicCode (~t0xicCode@user/t0xiccode)
[19:12:37] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[19:18:49] <mickey> also, any recommendation for an SSE client implementation?
[19:26:00] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[19:26:32] *** Joins: tripfandango (~tripfanda@2a00:a040:19e:72a1:b4bf:6568:e1a6:6cf5)
[19:28:32] *** Joins: Guest30 (~textual@2a05:41c0:b:9600:c0a8:a327:dddc:d64d)
[19:28:37] *** Quits: tripfandango (~tripfanda@2a00:a040:19e:72a1:b4bf:6568:e1a6:6cf5) (Read error: Connection reset by peer)
[19:29:39] *** Joins: tripfandango (~tripfanda@77.137.77.22)
[19:30:50] *** Joins: k8yun (~k8yun@user/k8yun)
[19:32:42] *** Quits: Guest30 (~textual@2a05:41c0:b:9600:c0a8:a327:dddc:d64d) (Quit: Textual IRC Client: www.textualapp.com)
[19:33:01] *** Joins: RhinosF1 (uid339563@miraheze/RhinosF1)
[19:36:28] *** Quits: t0xicCode (~t0xicCode@user/t0xiccode) (Quit: ZNC - https://znc.in)
[19:36:37] *** Joins: crashrep (~crashrep@user/crashrep)
[19:37:34] *** Joins: t0xicCode (~t0xicCode@user/t0xiccode)
[19:41:13] <han-solo> hello, noob question, what do folks do in situations like this https://go.dev/play/p/9KQdDY6pp7n ?
[19:41:28] <han-solo> do they add another channel to wait for it ?
[19:41:45] <han-solo> or add a WaitGroup ?
[19:42:21] <han-solo> just wondering what's the usual thing to do ? wait group seems easier
[19:42:55] *** Joins: bluedust (~bluedust@185.195.232.154)
[19:45:38] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[19:46:35] *** Quits: saschagrunert (~saschagru@46.128.124.48) (Quit: Leaving)
[19:51:07] <seebs> i'm really not understanding what you mean by "situations like this". what is the goal?
[19:51:41] *** Quits: t0xicCode (~t0xicCode@user/t0xiccode) (Quit: ZNC - https://znc.in)
[19:51:57] <han-solo> the problem is, the receiver won't get all the data the sender sends
[19:52:40] <han-solo> well it's a bad example, but after the sender finishes the program exits
[19:52:52] *** Joins: t0xicCode (~t0xicCode@user/t0xiccode)
[19:53:36] <han-solo> so to synchronize that, i was wondering what's the usual thing to use ? or is that preference of some sorts
[19:58:29] *** Joins: jpw (~jpw@user/jpw)
[19:59:28] *** Quits: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net) (Quit: Konversation terminated!)
[20:05:42] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[20:07:38] *** Quits: t0xicCode (~t0xicCode@user/t0xiccode) (Quit: ZNC - https://znc.in)
[20:08:33] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:08:39] *** Joins: t0xicCode (~t0xicCode@user/t0xiccode)
[20:08:53] *** Quits: idstam (~idstam@185.176.247.102) (Quit: WeeChat 3.3)
[20:13:30] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Quit: WeeChat 3.4)
[20:15:16] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[20:15:18] *** Joins: idstam (~idstam@185.176.247.102)
[20:18:54] *** Joins: bluedust_ (~bluedust@103.165.167.61)
[20:22:02] *** Joins: Midjak (~Midjak@82.66.147.146)
[20:22:32] *** Quits: t0xicCode (~t0xicCode@user/t0xiccode) (Quit: ZNC - https://znc.in)
[20:22:34] *** Quits: bluedust (~bluedust@185.195.232.154) (Ping timeout: 260 seconds)
[20:24:54] *** Joins: bluedust (~bluedust@117.193.120.37)
[20:25:19] <crashrep> i think waitgroup would be a good option https://www.reply.com/alpha-reply/en/content/go-concurrency-with-waitgroup
[20:25:45] <rewt> yes, if you want to wait for your goroutines to finish, there should be a waitgroup
[20:26:51] <crashrep> https://go.dev/play/p/UBSU-9owy58
[20:27:04] <crashrep> han-solo: see if this is what you were intending for
[20:27:11] *** Joins: andlabs (~andlabs@2605:ef80:8093:2017:d472:2df2:f030:2706)
[20:27:57] *** Quits: bluedust_ (~bluedust@103.165.167.61) (Ping timeout: 240 seconds)
[20:29:28] <han-solo> crashrep: yep, https://go.dev/play/p/zMeZALccnW5 # but using a chan is also another option i guess
[20:29:44] <han-solo> but i see, waitgroup is the more preferred one ?
[20:33:25] <bookworm> both work, if you know the exact number of things to wait for waitgroup is fine, else doing it manually isn't the end of the world either
[20:34:00] <bookworm> both are common enough idioms and if you see a done channel that's pretty much self explaining is it?
[20:35:09] <han-solo> yeah
[20:42:21] *** Joins: t0xicCode (~t0xicCode@user/t0xiccode)
[20:46:25] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[20:46:54] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[20:53:45] *** Quits: bluedust (~bluedust@117.193.120.37) (Remote host closed the connection)
[20:59:37] *** Joins: dalek_caan (~Thunderbi@109.252.124.86)
[21:00:29] *** Quits: jespada_ (~jespada@85.255.234.170) (Quit: Textual IRC Client: www.textualapp.com)
[21:05:18] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Leaving)
[21:13:21] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[21:14:56] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[21:20:20] *** Joins: mncheck (~mncheck@193.224.205.254)
[21:20:39] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[21:29:49] *** Quits: leonarth (~leonarth@user/leonarth) (Read error: Connection reset by peer)
[21:31:19] *** Joins: k8yun (~k8yun@user/k8yun)
[21:32:13] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[21:32:28] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[21:35:39] *** Quits: dr0n (~nabromov@176.26.119.61) (Quit: WeeChat 3.3)
[21:42:56] *** Quits: andlabs (~andlabs@2605:ef80:8093:2017:d472:2df2:f030:2706) (Ping timeout: 252 seconds)
[21:44:06] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[21:45:07] *** Joins: bluedust (~bluedust@117.193.120.37)
[21:46:51] *** Quits: bluedust (~bluedust@117.193.120.37) (Remote host closed the connection)
[21:51:00] *** Joins: k8yun_ (~k8yun@user/k8yun)
[21:53:09] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[21:57:24] *** Quits: ejjfunky (~ejjfunky@125.164.20.168) (Ping timeout: 240 seconds)
[21:59:37] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[22:01:49] *** Quits: justAstache (~justache@user/justache) (Ping timeout: 240 seconds)
[22:09:41] *** Joins: justAstache (~justache@user/justache)
[22:11:59] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[22:12:01] *** Quits: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Remote host closed the connection)
[22:12:18] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[22:15:29] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[22:26:17] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[22:36:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[22:53:21] *** Joins: crashrep (~crashrep@user/crashrep)
[22:58:29] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[23:00:25] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:388f:f2a9:fad4:46c7)
[23:02:03] *** Quits: Merwede (~Merwede@ip-217-103-32-110.ip.prioritytelecom.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[23:09:04] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[23:11:57] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[23:12:36] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[23:14:57] *** Joins: Merwede (~Merwede@ip-217-103-32-110.ip.prioritytelecom.net)
[23:17:59] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[23:22:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:23:03] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 268 seconds)
[23:23:10] *** Joins: subj3ct (~brandon@99-36-164-204.lightspeed.snjsca.sbcglobal.net)
[23:23:33] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:24:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[23:26:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[23:32:48] *** Joins: crashrip (~crashrep@user/crashrep)
[23:33:45] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[23:33:48] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 240 seconds)
[23:38:15] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a12:7960:dc64:f4ff:9028)
[23:47:37] *** Quits: sleepingforest (~sleepingf@pool-96-235-63-235.pitbpa.east.verizon.net) (Ping timeout: 240 seconds)
[23:48:24] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[23:58:46] *** Quits: Merwede (~Merwede@ip-217-103-32-110.ip.prioritytelecom.net) (Quit: Textual IRC Client: www.textualapp.com)
[23:58:57] *** Joins: treeford (~charleste@user/treeford)
