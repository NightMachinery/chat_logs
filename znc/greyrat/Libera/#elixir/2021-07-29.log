[00:11:51] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[00:18:00] *** Quits: gitgoood (~gitgood@80-44-8-125.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[00:19:09] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[00:24:18] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 240 seconds)
[00:51:11] *** Joins: royo (~royo@user/royo)
[00:55:09] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[01:09:34] *** Joins: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[01:15:11] *** Quits: rhn (~rhn@user/rhn) (Ping timeout: 258 seconds)
[01:16:11] *** Quits: thojanssens_ (~thojansse@ptr-178-51-170-194.dyn.mobistar.be) (Ping timeout: 265 seconds)
[01:16:43] *** Quits: nullheroes (~danielvu@168.235.66.22) (Quit: WeeChat 3.1)
[01:32:02] *** Joins: jess (~jess@libera/staff/jess)
[01:33:06] *** Quits: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 240 seconds)
[01:56:05] *** Joins: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[02:05:25] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[02:11:46] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Remote host closed the connection)
[02:24:03] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[02:54:02] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[02:54:36] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[02:57:38] *** Quits: duane (~duane@69-148-45-178.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[03:13:16] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 272 seconds)
[03:14:46] *** Joins: gitgoood (~gitgood@80-44-8-125.dynamic.dsl.as9105.com)
[03:28:08] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 265 seconds)
[03:33:25] <hendursaga> Is there some sort of Ansible alternative in Elixir? The closest I see is Bootleg/SSHKit, any others?
[03:40:58] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[03:48:12] *** Quits: hoppity (~user@user/hoppity) (Ping timeout: 268 seconds)
[04:03:29] *** Joins: eber (~eber@189.29.140.207)
[04:05:01] <eber> Hey folks. I'm having this crazy idea of trying to implement the TEA on LiveViews with Gleam... I didn't start to write any code yet 'cause I can't think of a way to produce a template programatically. Are there any resources of what I could return from a render function inside a live view that could be produced with code alone and still be diffed
[04:05:02] <eber> and so on? Thanks!
[04:08:47] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[04:09:58] *** Joins: duane (~duane@75-35-193-117.lightspeed.nsvltn.sbcglobal.net)
[04:14:32] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[04:31:13] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[04:43:19] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Read error: Connection reset by peer)
[04:47:54] *** Quits: duane (~duane@75-35-193-117.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 240 seconds)
[04:48:23] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[04:49:00] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[04:49:13] *** Quits: jess (~jess@libera/staff/jess) ()
[04:50:04] *** Joins: duane (~duane@75-35-193-117.lightspeed.nsvltn.sbcglobal.net)
[04:54:10] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[04:55:08] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[04:59:46] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:00:35] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[05:23:44] *** Joins: mewfree[m] (~mewfreema@2001:470:69fc:105::c904)
[05:31:32] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[05:36:13] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[05:39:23] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[05:44:09] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[05:55:59] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[05:56:23] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[06:01:29] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 250 seconds)
[06:01:35] *** Joins: trestini (~trestini@177.25.195.33)
[06:04:26] *** Quits: trestini (~trestini@177.25.195.33) (Client Quit)
[06:05:54] *** Quits: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 240 seconds)
[06:17:58] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 256 seconds)
[06:18:22] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[06:21:16] *** Joins: trestini (~trestini@177.25.195.33)
[06:24:40] *** Joins: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[06:36:02] *** Quits: gitgoood (~gitgood@80-44-8-125.dynamic.dsl.as9105.com) (Ping timeout: 258 seconds)
[06:50:58] *** Quits: trestini (~trestini@177.25.195.33) (Ping timeout: 240 seconds)
[07:01:11] *** Joins: humbertowoody (~humbertow@2806:107e:f:6403:10aa:ff90:37bd:5627)
[07:03:04] *** Joins: trestini (~trestini@177.25.195.33)
[07:07:28] *** Quits: trestini (~trestini@177.25.195.33) (Ping timeout: 258 seconds)
[07:16:56] *** Joins: trestini (~trestini@177.25.195.33)
[07:20:33] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[07:25:29] *** Quits: trestini (~trestini@177.25.195.33) (Ping timeout: 258 seconds)
[07:26:38] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 258 seconds)
[07:37:20] *** Joins: trestini (~trestini@177.25.203.114)
[07:41:30] *** Quits: trestini (~trestini@177.25.203.114) (Ping timeout: 240 seconds)
[07:54:25] *** Joins: trestini (~trestini@177.25.203.114)
[08:02:34] *** Quits: trestini (~trestini@177.25.203.114) (Ping timeout: 240 seconds)
[08:03:03] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 258 seconds)
[08:06:52] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[08:16:17] *** Joins: trestini (~trestini@177.25.195.33)
[08:16:58] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 256 seconds)
[08:21:23] *** Quits: trestini (~trestini@177.25.195.33) (Ping timeout: 268 seconds)
[08:28:06] *** Joins: Guest85 (~Guest85@64-251-151-143.fidnet.com)
[08:34:07] *** Joins: trestini (~trestini@177.25.203.114)
[08:34:52] *** Quits: Guest85 (~Guest85@64-251-151-143.fidnet.com) (Quit: Client closed)
[08:42:10] *** Quits: trestini (~trestini@177.25.203.114) (Ping timeout: 240 seconds)
[08:42:30] *** Joins: notzmv (~zmv@user/notzmv)
[08:50:11] *** Joins: trestini (~trestini@177.25.203.114)
[09:04:29] *** Joins: beepbooptheory (~mik@c-73-13-112-194.hsd1.pa.comcast.net)
[09:05:08] *** Quits: trestini (~trestini@177.25.203.114) (Ping timeout: 256 seconds)
[09:05:08] *** Quits: beepbooptheory (~mik@c-73-13-112-194.hsd1.pa.comcast.net) (Client Quit)
[09:15:20] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 256 seconds)
[09:16:00] *** Joins: trestini (~trestini@177.25.195.33)
[09:18:04] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 265 seconds)
[09:18:29] *** Joins: trufas (~trufas@177.240.218.218)
[09:22:37] *** Joins: rhn (~rhn@user/rhn)
[09:24:02] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[09:24:42] *** Quits: trestini (~trestini@177.25.195.33) (Ping timeout: 258 seconds)
[09:25:16] <Nicd> eber: lemme find my DSL snippet for you
[09:26:53] <Nicd> generally check the Phoenix.LiveView.Rendered struct and its docs. I made a small DSL that doesn't use macros here, but it's a huge mess and I didn't write loop or component support yet since it was going to look really bad anyway: https://gitlab.com/-/snippets/2114257 (check the second file, the first is for plain EEx)
[09:28:42] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[09:28:58] *** Joins: trestini (~trestini@177.25.195.33)
[09:31:49] *** Joins: beepbooptheory (~mik@37.19.211.136)
[09:36:00] *** Quits: trestini (~trestini@177.25.195.33) (Ping timeout: 268 seconds)
[09:39:13] <beepbooptheory> l
[09:40:41] <Nicd> ok
[09:46:29] *** Joins: trestini (~trestini@177.25.203.114)
[09:50:11] *** Quits: beepbooptheory (~mik@37.19.211.136) (Ping timeout: 268 seconds)
[09:53:43] *** Joins: GLaDER (~GLaDER@185.213.154.168)
[09:55:17] *** Quits: trestini (~trestini@177.25.203.114) (Ping timeout: 265 seconds)
[10:04:54] *** Joins: beepbooptheory (~beepboopt@c-73-13-112-194.hsd1.pa.comcast.net)
[10:07:01] *** Joins: trestini (~trestini@177.25.203.114)
[10:11:27] *** Quits: trestini (~trestini@177.25.203.114) (Ping timeout: 252 seconds)
[10:14:51] *** Quits: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 268 seconds)
[10:19:07] *** Quits: beepbooptheory (~beepboopt@c-73-13-112-194.hsd1.pa.comcast.net) (Ping timeout: 246 seconds)
[10:23:31] *** Joins: trestini (~trestini@177.25.203.114)
[10:32:10] *** Quits: trestini (~trestini@177.25.203.114) (Ping timeout: 258 seconds)
[10:32:58] *** Quits: ryloric (~ryloric@2406:b400:d3::7bab) (Ping timeout: 240 seconds)
[10:42:23] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[10:44:17] *** Joins: trestini (~trestini@177.25.203.114)
[10:44:21] *** Joins: hendursaga (~weechat@user/hendursaga)
[10:48:56] *** Quits: trestini (~trestini@177.25.203.114) (Ping timeout: 265 seconds)
[10:52:13] *** Joins: phaleth (~phaleth@user/phaleth)
[11:02:09] *** Joins: trestini (~trestini@177.25.195.33)
[11:10:12] *** Joins: chgr (~ek@nat-91-137-26-20.net.encoline.de)
[11:10:18] *** Quits: trestini (~trestini@177.25.195.33) (Ping timeout: 240 seconds)
[11:22:15] *** Joins: trestini (~trestini@177.25.203.114)
[11:27:16] *** Quits: trestini (~trestini@177.25.203.114) (Ping timeout: 272 seconds)
[11:38:48] *** Joins: trestini (~trestini@177.25.203.114)
[11:47:09] *** Quits: trestini (~trestini@177.25.203.114) (Ping timeout: 252 seconds)
[11:48:35] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:00:04] *** Joins: trestini (~trestini@177.25.195.33)
[12:01:04] <serafeim> hello my friends
[12:02:05] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[12:08:10] *** Quits: trestini (~trestini@177.25.195.33) (Ping timeout: 240 seconds)
[12:09:36] <Nicd> greeting accepted
[12:14:41] *** Joins: trestini (~trestini@177.25.203.114)
[12:28:36] *** Joins: thojanssens_ (~thojansse@tribes-c1-dc.benkgroep.eu)
[12:35:24] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:38] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:38:52] *** Quits: trestini (~trestini@177.25.203.114) (Ping timeout: 245 seconds)
[12:49:48] *** Joins: rhn_mk1 (~rhn@user/rhn)
[12:50:33] *** Quits: rhn (~rhn@user/rhn) (Ping timeout: 258 seconds)
[13:02:51] *** Joins: glassofethanol (~ethanmorg@cpc78471-cwma11-2-0-cust81.7-3.cable.virginm.net)
[13:06:52] *** Joins: natrys (~natrys@user/natrys)
[13:34:33] *** Joins: nd__ (~nd@b2b-37-24-67-97.unitymedia.biz)
[13:57:48] *** Joins: Bounga (~nico@82-65-32-175.subs.proxad.net)
[14:10:26] *** Joins: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[14:15:56] *** Joins: optikfluffel (~optikfluf@200116b842d3d400645c3f34bb3b5e39.dip.versatel-1u1.de)
[14:19:43] *** Quits: optikfluffel (~optikfluf@200116b842d3d400645c3f34bb3b5e39.dip.versatel-1u1.de) (Client Quit)
[15:06:40] *** Quits: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22) (Quit: Bridge terminating on SIGTERM)
[15:06:40] *** Quits: tcit (~tcit@2001:470:69fc:105::8f) (Quit: Bridge terminating on SIGTERM)
[15:06:40] *** Quits: uhoreg (~uhoreg@2001:470:69fc:105::35f) (Quit: Bridge terminating on SIGTERM)
[15:06:40] *** Quits: ServerStatsDisco (~serversta@2001:470:69fc:105::1a) (Quit: Bridge terminating on SIGTERM)
[15:06:40] *** Quits: om_henners[m] (~omhenners@2001:470:69fc:105::2d11) (Quit: Bridge terminating on SIGTERM)
[15:06:41] *** Quits: mozinator[m] (~mozinator@2001:470:69fc:105::c053) (Quit: Bridge terminating on SIGTERM)
[15:06:41] *** Quits: monocursive[m] (~monocurs_@2001:470:69fc:105::b5c1) (Quit: Bridge terminating on SIGTERM)
[15:06:41] *** Quits: Jared[m] (~jaredbmat@2001:470:69fc:105::bf98) (Quit: Bridge terminating on SIGTERM)
[15:06:41] *** Quits: PatrikStenmark[m (~patrikste@2001:470:69fc:105::bfa1) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: punnie (~punniemat@2001:470:69fc:105::1193) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: Mayel[m] (~mayelmatr@2001:470:69fc:105::bf92) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (Quit: Bridge terminating on SIGTERM)
[15:06:42] *** Quits: kshlm (~kshlm@2001:470:69fc:105::b46b) (Quit: Bridge terminating on SIGTERM)
[15:06:45] *** Quits: EltonLeanderPint (~eltonpint@2001:470:69fc:105::c6c6) (Quit: Bridge terminating on SIGTERM)
[15:06:46] *** Quits: mewfree[m] (~mewfreema@2001:470:69fc:105::c904) (Quit: Bridge terminating on SIGTERM)
[15:08:58] *** Joins: MatrixTravelerbo (~voyagert2@2001:470:69fc:105::22)
[15:10:34] *** Joins: tcit (~tcit@2001:470:69fc:105::8f)
[15:10:34] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[15:10:34] *** Joins: om_henners[m] (~omhenners@2001:470:69fc:105::2d11)
[15:10:34] *** Joins: mewfree[m] (~mewfreema@2001:470:69fc:105::c904)
[15:10:34] *** Joins: Mayel[m] (~mayelmatr@2001:470:69fc:105::bf92)
[15:10:34] *** Joins: ServerStatsDisco (~serversta@2001:470:69fc:105::1a)
[15:10:45] *** Joins: mozinator[m] (~mozinator@2001:470:69fc:105::c053)
[15:10:46] *** Joins: PatrikStenmark[m (~patrikste@2001:470:69fc:105::bfa1)
[15:10:46] *** Joins: Jared[m] (~jaredbmat@2001:470:69fc:105::bf98)
[15:10:46] *** Joins: EltonLeanderPint (~eltonpint@2001:470:69fc:105::c6c6)
[15:10:47] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[15:10:48] *** Joins: monocursive[m] (~monocurs_@2001:470:69fc:105::b5c1)
[15:10:48] *** Joins: uhoreg (~uhoreg@2001:470:69fc:105::35f)
[15:10:49] *** Joins: kshlm (~kshlm@2001:470:69fc:105::b46b)
[15:14:25] *** Quits: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 250 seconds)
[15:19:31] *** Quits: chgr (~ek@nat-91-137-26-20.net.encoline.de) (Quit: WeeChat 3.2)
[15:27:22] <serafeim> do you know if there's a way to style a bootstrap modal to look like an error, info or success message ?
[15:50:01] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[15:57:34] *** Joins: mexen (uid495612@user/mexen)
[16:04:57] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[16:06:17] <rawtaz> CSS, i presume? :o
[16:12:05] <serafeim> yes but how
[16:12:47] <serafeim> the bootstrap doesn't have any examples for colored/alerted modals: https://getbootstrap.com/docs/5.0/components/modal/
[16:17:17] <azazel> serafeim: seems pretty basic with css with the examples on the page you posted
[16:17:34] <serafeim> azazel: :)
[16:17:47] <serafeim> i guess i don't even know basic css
[16:18:41] <azazel> you guess?
[16:21:31] <serafeim> yes
[16:21:36] <serafeim> it seems difficult to me
[16:23:15] <azazel> https://developer.mozilla.org/en-US/docs/Web/CSS/background-color
[16:30:06] <phaleth> serafeim: put an alert with class="danger ..." inside the modal https://getbootstrap.com/docs/5.0/components/alerts/
[16:31:12] <rawtaz> serafeim: screw bootstrap, just add your CSS to the webpage/site
[16:31:15] <serafeim> ha ha that seems like an easy but not ideal solution
[16:31:23] <serafeim> rawtaz: i don't want to bootstrap is good enough for me
[16:31:39] <rawtaz> serafeim: you can add CSS *to* the bootstrap stuff you have
[16:31:54] <serafeim> phaleth: i mean i would prefer the modal to have red borders around it and maybe a red exclamation icon
[16:33:46] <phaleth> serafeim: is-invalid class adds red border and exclamation icon to form fields https://getbootstrap.com/docs/5.0/forms/validation/#server-side doubt it works for modals, you can weed it out into your own css file and modify to your needs
[16:34:03] <eber> @Nicd thanks! I would definitely need some support for loops, conditionals, cases and so on... I'll try to look at those. I wonder if creating one template with those and inspecting the compiled result would give some idea of how to structure the data...
[16:36:41] <Nicd> yeah that one is a big hack written in a bout of inspiratoin
[16:37:03] <Nicd> I would have begun using it if it weren't for all those anonymous functions that are needed, really makes the syntax difficult without resorting to macros
[16:37:24] <serafeim> phaleth: hmmm ok i'll try it thank you
[16:37:36] <phaleth> np
[16:38:53] <eber> @Nicd yeah, the code gets a little convoluted... 
[16:39:29] <eber> But if I use that as an internal tool instead, it might work just fine
[16:45:44] <Nicd> the tricky part is that the dynamic and static parts are interleaved by LV. so the dynamic function needs to return a list and the static list should have that amount + 1 elements so that you can render static -> dynamic -> static -> dynamic -> static and so on.
[16:46:25] <Nicd> so any adjacent static parts need to be combined and any adjacent dynamic parts need to have "" added in between (in the static list)
[16:48:20] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 255 seconds)
[16:51:16] *** Joins: thojanssens (~thojansse@tribes-c1-dc.benkgroep.eu)
[17:14:51] *** Joins: mcint (mcint@user/mcint)
[17:35:29] *** Joins: Sgeo (~Sgeo@user/sgeo)
[17:43:44] *** Joins: trestini (~trestini@179.246.215.74)
[17:49:37] *** Quits: trestini (~trestini@179.246.215.74) (Read error: No route to host)
[17:53:08] *** Joins: trestini (~trestini@177.25.207.235)
[17:59:12] *** Quits: trestini (~trestini@177.25.207.235) (Ping timeout: 268 seconds)
[18:00:20] *** Joins: trestini (~trestini@177.25.207.235)
[18:00:34] *** Quits: pflanze (~pflanze@2001:1a88:19e:4500:a:13dd:7c09:9436) (Ping timeout: 240 seconds)
[18:04:54] *** Quits: trestini (~trestini@177.25.207.235) (Ping timeout: 265 seconds)
[18:14:28] *** Joins: trestini (~trestini@177.25.207.235)
[18:16:17] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:16:49] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:19:20] *** Quits: trestini (~trestini@177.25.207.235) (Ping timeout: 256 seconds)
[18:26:01] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[18:30:46] *** Joins: trestini (~trestini@177.25.207.235)
[18:34:56] *** Joins: beepbooptheory (~mik-wsl@50.216.98.94)
[18:39:42] *** Quits: trestini (~trestini@177.25.207.235) (Ping timeout: 265 seconds)
[18:45:55] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[18:50:28] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[18:50:56] *** Joins: sgn (~sgn@user/sgn)
[18:59:04] *** Joins: trestini (~trestini@177.25.198.148)
[18:59:22] *** Quits: beepbooptheory (~mik-wsl@50.216.98.94) (Quit: WeeChat 2.8)
[19:03:51] *** Quits: trestini (~trestini@177.25.198.148) (Ping timeout: 252 seconds)
[19:06:47] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[19:09:17] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 245 seconds)
[19:12:32] *** Joins: hoppity (~user@user/hoppity)
[19:15:21] *** Joins: trestini (~trestini@177.25.207.235)
[19:21:33] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 258 seconds)
[19:24:46] <eber> @Nicd that makes me wonder if the easier route would be to have actuall Gleam code, parse it and transform to (L)EEx and let Elixir compile it... 🤔
[19:25:03] <eber> re-compile, haha
[19:25:44] *** Quits: trestini (~trestini@177.25.207.235) (Ping timeout: 252 seconds)
[19:28:54] *** Joins: trestini (~trestini@177.25.207.235)
[19:29:51] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 268 seconds)
[19:30:14] *** Joins: mik-wsl (~mik-wsl@50.216.98.94)
[19:30:36] *** mik-wsl is now known as beepbooptheory
[19:32:25] *** Quits: glassofethanol (~ethanmorg@cpc78471-cwma11-2-0-cust81.7-3.cable.virginm.net) (Quit: leaving)
[19:33:06] *** Quits: trestini (~trestini@177.25.207.235) (Ping timeout: 240 seconds)
[19:35:33] *** Joins: trestini (~trestini@177.25.207.235)
[19:38:02] *** Quits: thojanssens_ (~thojansse@tribes-c1-dc.benkgroep.eu) (Ping timeout: 258 seconds)
[19:38:02] *** Quits: thojanssens (~thojansse@tribes-c1-dc.benkgroep.eu) (Ping timeout: 245 seconds)
[19:40:57] <hoppity> Guys, is there a way to make a field on a form be optionally required? I am envisioning having a checkbox that if checked gets a text field required and if not the text field is optional.
[19:42:10] <rawtaz> "optionally required" sounds an awful lot like "optional" to me :P
[19:42:23] <rawtaz> are you using liveview?
[19:44:48] <hoppity> rawtaz: yes I am using liveview
[19:45:08] <hoppity> what I mean is that the field can be required or not depending on a checkbox being checked or not
[19:45:50] <rawtaz> wouldnt you just write the template such that if the value of whatever the checkbox is bound to is checked, then you add a "required" html snippet to the text field?
[19:45:55] <rawtaz> yeah gotcha
[19:46:07] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 250 seconds)
[19:46:45] <hoppity> yes I thought about going the "required" route but then a sneaky user could inspect element and remove the "required" part so I am thinking how this can be achieved in the "back end"
[19:47:57] <rawtaz> hoppity: how is that relevant? a user can do a ton of things, they can completely screw up your form. if you want to validate something, you still *have* to do that server side. and with that, it doesnt matter what the user does client-side.
[19:48:52] <hoppity> yes, that is exactly my point.
[19:49:10] <hoppity> How do I achieve this in the back end is my question
[19:49:13] <rawtaz> but then your sneaky user removing the required part doesnt matter, right?
[19:49:30] <rawtaz> i would expect that you validate stuff before you try to save them
[19:49:44] <rawtaz> dont you use ecto for that stuff? :) i think so. assuming you use ecto of course
[19:49:59] <hoppity> yes, but how do I validate "optionally" in the way that I am describing
[19:51:35] <rawtaz> ok, so your question is about the backend validation, not about presenting the 'required' attribute in the html form, is that right?
[19:51:41] <hoppity> correct
[19:51:52] <rawtaz> i guess thats an ecto question, and i dont know, i havent used it yet :(
[19:51:53] <rawtaz> sorry
[19:52:11] <hoppity> no worries, thanks for engaging
[19:52:49] <rawtaz> im cleaning my house, im desperate for other things to "have" to engage in :-)
[19:53:01] <hoppity> haha, I know the feeling
[19:54:52] <phaleth> hoppity: <%= input_text f, :message, ["form-control", placeholder: "Message...", required: ""] %> should generate a required field, see if you can get the hang of the required attrib once the form is submitted or just ignore the input field if checkbox is not checked
[19:55:38] <hoppity> phaleth: thank you, but should I handle things at the changeset level to take advantage of live validations etc?
[19:55:45] <phaleth> I guess class: is missing there, copied it from the interwebz
[19:55:58] <hoppity> no worries
[19:56:55] <rawtaz> phaleth: we suck, clearly :P
[19:57:00] <phaleth> well, changeset depends on what comes in with the conn or socket or liveSocket object
[19:57:08] <phaleth> rawtaz: heh
[19:58:16] <beepbooptheory> Hi! learning about PETAL stack a little, along with everything elixir, and just curious if there is any good boilerplate-type thing someone has made to play around with this kind of stack?
[19:59:04] <beepbooptheory> I get that a phoenix project takes care of the P and E, and then adding the T and A is just a few changes to a default phoenix project?
[19:59:21] <hoppity> phaleth: correct, but in liveview (from what I understand) the changeset errors are what is displayed on the form when a user enters incorrect information. So I could have the browser enforce the field by using "required" and/or I could have the changeset enforce the field which also displays errors on the form plus ensures that wrong data does not go to the DB.
[19:59:36] <hoppity> Any way, I am a noob here so I may not be expressing myself properly
[20:01:59] <phaleth> hoppity: you are thinking about it correctly, you will validate with changeset, the thing you need to figure out is what comes in with the liveSocket or whatever object, if the required attrib is present there you will be able to add a custom function to the changeset validation pipeline that counts on the required attrib, if it's not there you will have to base the validation on the checked attribute of the
[20:02:01] <phaleth> checkbox
[20:02:26] <hoppity> gotcha, thank you
[20:03:08] <phaleth> np, and I called it an object
[20:03:14] * phaleth never learns
[20:03:35] <hoppity> haha, I know exactly what I need to do now
[20:03:40] <hoppity> so much appreciated
[20:05:24] <phaleth> beepbooptheory: hi, I've got PETAL projects set up locally, can't seem to find any example on github
[20:06:22] <hoppity> beepbooptheory: Look into Phoenix generators
[20:06:39] <hoppity> It is pretty much "THE" boiler plate
[20:07:00] *** Quits: trestini (~trestini@177.25.207.235) (Ping timeout: 256 seconds)
[20:07:08] <beepbooptheory> ok got it, ty!
[20:07:14] *** Joins: trestini (~trestini@177.25.207.235)
[20:07:15] <hoppity> np
[20:08:20] <phaleth> beepbooptheory: this seems outdated but should work on Node v14 https://github.com/edisonywh/backoffice/tree/main/assets
[20:10:33] <beepbooptheory> ok cool
[20:10:38] <hoppity> I would also play around with Chris Mccord's "Twitter clone in 15 mins" video on Youtube. A lot of good info quickly.
[20:14:37] <rawtaz> yeah that one is awesome
[20:16:49] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[20:17:24] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Read error: Connection reset by peer)
[20:24:44] *** Joins: nd___ (~nd@b2b-37-24-67-97.unitymedia.biz)
[20:25:30] *** Joins: amacgregor_ (~amacgrego@96.45.198.246)
[20:25:32] *** Joins: spencer (~s@user/spencer)
[20:25:44] *** spencer is now known as s_
[20:27:37] *** Quits: nd__ (~nd@b2b-37-24-67-97.unitymedia.biz) (Ping timeout: 245 seconds)
[20:28:15] *** Quits: amacgregor__ (~amacgrego@dhcp-198-2-103-168.cable.user.start.ca) (Ping timeout: 258 seconds)
[20:29:01] *** Quits: nd___ (~nd@b2b-37-24-67-97.unitymedia.biz) (Ping timeout: 250 seconds)
[20:30:29] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[20:32:58] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[20:34:26] *** Quits: eber (~eber@189.29.140.207) (Quit: Client closed)
[20:35:09] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[20:44:48] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[20:52:08] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[20:54:29] *** Quits: s_ (~s@user/spencer) (Quit: Textual IRC Client: www.textualapp.com)
[21:16:42] *** Quits: Bounga (~nico@82-65-32-175.subs.proxad.net) (Ping timeout: 240 seconds)
[21:20:37] *** Joins: nd__ (~nd@ip-176-199-210-130.hsi06.unitymediagroup.de)
[21:29:03] <azazel> hoppity: have you found your solution? In a similiar scenario I used a custom changeset validator
[21:34:08] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[21:41:48] <hoppity> azazel: I think I have it "mentally" figured out but haven't got around to coding it yet.
[21:42:07] <rawtaz> nice :)
[21:42:11] <rawtaz> thats a start!
[22:05:20] *** Joins: newton (james@user/newton)
[22:06:48] <newton> I'm fairly new to elixir and working on a project that involves handling data in UDP packets from :gen_udp. Is there a good resource I could read on understanding pattern matching on binary data, like what <<2::2>> means and what it's doing?
[22:11:05] *** Joins: gitgoood (~gitgood@80-44-8-125.dynamic.dsl.as9105.com)
[22:13:18] <benwilson512> newton: for the basics, the builtin docs are pretty solid
[22:13:37] <benwilson512> https://hexdocs.pm/elixir/Kernel.SpecialForms.html#%3C%3C%3E%3E/1
[22:14:49] <newton> benwilson512, thanks :)
[22:17:07] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 258 seconds)
[22:22:47] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[22:22:59] *** Joins: eber (~eber@189.29.140.207)
[22:35:57] *** Joins: thojanssens (~thojansse@ptr-178-51-170-194.dyn.mobistar.be)
[22:35:57] *** Joins: thojanssens_ (~thojansse@ptr-178-51-170-194.dyn.mobistar.be)
[22:38:57] *** Joins: thojanssens__ (~thojansse@ptr-178-51-170-194.dyn.mobistar.be)
[22:42:12] *** Quits: thojanssens (~thojansse@ptr-178-51-170-194.dyn.mobistar.be) (Ping timeout: 252 seconds)
[22:42:12] *** Quits: thojanssens_ (~thojansse@ptr-178-51-170-194.dyn.mobistar.be) (Ping timeout: 252 seconds)
[22:43:10] *** Joins: thojanssens (~thojansse@ptr-178-51-170-194.dyn.mobistar.be)
[22:52:00] *** Joins: mahmutov (~mahmutov@176.30.242.198)
[23:05:52] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[23:06:14] *** Joins: spencer (~s@user/spencer)
[23:06:27] *** spencer is now known as s_
[23:11:10] *** Quits: mahmutov (~mahmutov@176.30.242.198) (Ping timeout: 256 seconds)
[23:19:32] *** Quits: eber (~eber@189.29.140.207) (Quit: Client closed)
[23:20:42] *** Quits: Rubyn (~Rubyn@user/rubyn) (Quit: WeeChat 3.2)
[23:21:20] *** Joins: eber (~eber@189.29.140.207)
[23:23:26] *** Joins: mahmutov (~mahmutov@37.155.91.167)
[23:29:57] *** Quits: s_ (~s@user/spencer) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:34:57] *** Quits: trestini (~trestini@177.25.207.235) (Ping timeout: 276 seconds)
[23:35:08] *** Quits: carloratm (carloratm@tilde.club) (Ping timeout: 255 seconds)
[23:36:14] *** Joins: trestini (~trestini@177.25.198.69)
[23:36:44] *** Joins: carloratm (carloratm@tilde.club)
[23:46:55] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[23:50:31] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
