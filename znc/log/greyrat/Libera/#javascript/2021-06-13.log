[00:00:35] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[00:01:12] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 252 seconds)
[00:01:21] *** Joins: Akimb (~Akimb@86.100.13.100)
[00:06:56] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[00:11:33] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[00:16:03] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 252 seconds)
[00:22:35] *** Joins: silly_ (~silly@user/silly)
[00:24:06] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:24:08] *** Quits: Buttercat (~Buttercat@user/buttercat) (Quit: Leaving.)
[00:25:38] *** Quits: Guest9 (~Guest9@43.250.157.5) (Quit: Connection closed)
[00:26:35] *** Quits: silly (~silly@user/silly) (Ping timeout: 272 seconds)
[00:28:23] *** Quits: littleniki (~littlenik@2600:1700:7232:90:a549:a579:1c8c:2f77) (Quit: Client closed)
[00:29:50] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[00:34:46] *** Joins: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[00:35:51] *** Parts: wallbroken (wallbroken@user/wallbroken) ()
[00:35:52] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[00:38:00] <wroathe> acagastya: Did you end up getting answers?
[00:39:25] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Client Quit)
[00:40:34] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[00:48:46] *** Joins: jundran (~Guest82@65.110.8.118)
[00:49:29] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[00:53:11] *** Joins: zacts (~zak@user/zacts)
[00:53:35] *** Quits: zacts (~zak@user/zacts) (Client Quit)
[01:01:20] <jundran> I set a background image inside my div with the class "content-container" using javascript but how do I change the opacity of this image without changing the opacicty of the text in the div as well? https://bpa.st/FZLA
[01:02:28] <entuland> don't think you can do that with the image as the background
[01:02:42] <entuland> you'll likely need to fake it via an after / before pseudo element or the alike
[01:03:31] <jundran> I'll try that then, thanks
[01:03:35] <entuland> yw
[01:03:50] <entuland> also, this selector seems just wrong: ".content-container backgroundImage"
[01:04:06] *** Quits: benjamin1 (benjamin1@gateway/vpn/airvpn/benjamin1) (Quit: Leaving)
[01:04:30] <entuland> that selector means "an tag reading literally 'backgroundimage' contained by another element with class 'content-container'"
[01:04:38] <entuland> as if you had <backgroundimage> in your markup
[01:04:58] <acagastya> wroathe for cors?  Yes.  For the API, no.  Still divided on header vs json.
[01:05:25] *** Joins: diamondbond (~diamondbo@175.157.97.119)
[01:05:28] <acagastya> Are the headers encrypted when using https?
[01:06:16] *** Quits: diamondbond (~diamondbo@175.157.97.119) (Read error: Connection reset by peer)
[01:06:28] *** Joins: diamondbond (~diamondbo@175.157.97.119)
[01:06:53] *** Quits: diamondbond (~diamondbo@175.157.97.119) (Read error: Connection reset by peer)
[01:08:54] <jundran> entuland: ok, I guess background-image is just a property and not a tag
[01:09:37] *** Joins: Trieste_ (~T@user/pilgrim)
[01:11:06] *** Joins: Trieste- (T@user/pilgrim)
[01:11:06] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 264 seconds)
[01:12:40] <wroathe> acagastya: The whole message is encrypted
[01:13:12] *** Joins: jazzy (~jaziz@2600:380:4547:d128:788a:9261:efcd:4642)
[01:14:05] *** Quits: Trieste_ (~T@user/pilgrim) (Ping timeout: 245 seconds)
[01:14:11] <entuland> jundran, correct
[01:14:28] *** Quits: jundran (~Guest82@65.110.8.118) (Quit: Client closed)
[01:14:33] <wroathe> acagastya: For authentication I'd read up on Oauth 2.0 if I were you. When non-browsers are accessing your API a header should be fine (and it's the standard approach people use with tokens), but in the browser you should prefer HttpOnly cookies instead of headers
[01:16:28] *** Joins: jundran (~jundran@65.110.8.118)
[01:18:16] *** Quits: Trieste- (T@user/pilgrim) (Remote host closed the connection)
[01:19:09] *** Joins: Trieste (T@user/pilgrim)
[01:21:00] *** Joins: Liblx (~Alex@2a02:810c:280:59c:fda8:8fbe:8eef:34c6)
[01:21:20] *** Joins: Guest20 (~Guest20@89-24-40-63.nat.epc.tmcz.cz)
[01:21:34] <wroathe> acagastya: And keep in mind that sending a password in each API request to authenticate a user is a practice that's usually best avoided. There's a few ways to handle it, but one common approach is to have the user authenticate independently with an auth server, and to temporarily lease that user a token to access their resources with
[01:21:35] *** Quits: Guest20 (~Guest20@89-24-40-63.nat.epc.tmcz.cz) (Client Quit)
[01:22:32] <wroathe> acagastya: Or in some cases a longer-lasting token can be appropriate, whereby the user creates a token in your auth server and uses that to authenticate their requests for as long as they want it to be active for, but this approach is less secure than the temporarily leased token
[01:22:57] *** Joins: Ublx (~Alex@190-2-132-198.hosted-by-worldstream.net)
[01:23:20] *** Quits: Ublx (~Alex@190-2-132-198.hosted-by-worldstream.net) (Client Quit)
[01:23:21] <wroathe> acagastya: API authn/authz is a big topic. I'd encourage you to spend some time reading up on the field
[01:24:28] *** Joins: Ublx (~Alex@190-2-132-198.hosted-by-worldstream.net)
[01:25:30] *** Quits: Liblx (~Alex@2a02:810c:280:59c:fda8:8fbe:8eef:34c6) (Ping timeout: 264 seconds)
[01:40:11] *** Joins: sillyslux__ (~silly@user/silly)
[01:41:48] *** Joins: P1RATEZ (piratez@user/p1ratez)
[01:42:14] *** Quits: Ublx (~Alex@190-2-132-198.hosted-by-worldstream.net) (Quit: WeeChat 3.1)
[01:42:31] *** Joins: Liblx (~Alex@190-2-132-198.hosted-by-worldstream.net)
[01:43:59] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 272 seconds)
[01:45:09] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[01:45:33] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[01:45:52] *** Joins: z3rOR0ne (~brian@cpe-72-134-207-141.natsow.res.rr.com)
[01:50:53] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[01:54:27] *** Quits: heatwave (~heatwave@2601:641:480:5b30:ec11:5e66:a082:724) (Quit: WeeChat 3.1)
[01:55:20] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 245 seconds)
[02:04:52] *** Quits: amahl (~amahl@87-95-128-122.bb.dnainternet.fi) (Remote host closed the connection)
[02:05:11] *** Joins: silly_ (~silly@user/silly)
[02:08:19] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[02:09:20] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 272 seconds)
[02:15:33] *** Joins: summersault (~summersau@179.221.251.16)
[02:16:36] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[02:16:44] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[02:21:10] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 245 seconds)
[02:21:21] *** Parts: z3rOR0ne (~brian@cpe-72-134-207-141.natsow.res.rr.com) ()
[02:22:49] *** Parts: merryMellody (merry@2600:3c01::f03c:92ff:fe81:2475) ()
[02:25:10] *** Joins: sillyslux__ (~silly@user/silly)
[02:27:46] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:c102:96a7:b2d6:d0ec) (Remote host closed the connection)
[02:28:14] *** Joins: xsperry (~as@user/xsperry)
[02:28:54] *** Joins: martinrame (~leonardo@181.116.72.35)
[02:28:58] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 272 seconds)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:33] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:35] *** Quits: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[02:32:07] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 272 seconds)
[02:32:34] <martinrame> Hi, I'm building an application that lets interactively traverse an array of medical images by using the mouse wheel. What I would like to see is only the last image, but when I quicly move the mouse wheel from one way to the other there are un-ordered images displayed.
[02:33:20] <entuland> what do you mean with "un-ordered"?
[02:33:45] <entuland> if you want only the last image displayed you could add some kind of delay between the input and the output
[02:33:59] <entuland> as in, don't do anything if a mousewheel event gets triggered within 200ms or the alike
[02:34:30] <entuland> this can be easily done with a cancellable timeout or the alike
[02:37:15] <wroathe> Have you tried putting a bird on it?
[02:40:40] <martinrame> entuland: I'm playing with an abort signal to the currently running fetch, to discard it and allow the new image to be fetched instead.
[02:41:06] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[02:41:38] <martinrame> But what I would really like to find is a "best practice" for this.
[02:41:52] <entuland> is the fetch hitting a server immediately as the input happens?
[02:41:59] <martinrame> entuland: yes
[02:42:09] <entuland> don't do that, give it a little delay
[02:42:20] <entuland> say, issue a timeout that will call the fetch within 200ms
[02:42:44] <entuland> if any other input happens before those 200ms, don't issue that fetch at all (cancel the timeout) and schedule a new fetch with a new timeout
[02:43:02] <entuland> any other input that conflicts with that fetch, that is
[02:43:10] <entuland> in this case, a further mousewheel event
[02:43:22] <martinrame> entuland: thanks, I'll try that.
[02:44:05] <entuland> yw
[02:44:18] *** Quits: Guest4139 (~federico@151.51.89.77) (Quit: WeeChat 3.0)
[02:45:39] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[02:45:40] <martinrame> entuland: did you do something similar?, could you share your experience?.
[02:45:59] *** Quits: jundran (~jundran@65.110.8.118) (Quit: Client closed)
[02:46:53] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[02:46:55] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[02:49:37] <entuland> I definitely used that technique, but off the top of my head can't remember where exactly
[02:50:00] <entuland> it works nicely though, cause you often have lots of inputs that conflict with eachother in a user interface
[02:50:11] *** Joins: silly_ (~silly@user/silly)
[02:50:36] <entuland> and if the action to be taken is expensive for any reason, it's just easier to delay it a little and only act when the user has "made up their mind" so to speak
[02:51:09] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 252 seconds)
[02:51:15] <entuland> ah yes, now I rememner, martinrame
[02:51:21] <entuland> I use it in a filtering function
[02:51:31] <entuland> say, I have lots of objects in a list
[02:51:44] <entuland> and an input area where the user can enter some text to filter the results
[02:52:00] <entuland> if I act on every single keystroke, I'd be issuing lots of calls to the filtering code
[02:52:23] <martinrame> entuland: yes, currently this is just a proof of concept for a complete rewrite of our dicom image viewer (medical images). If it works it would be awesome.
[02:52:37] <entuland> if instead I allow the user to type multiple characters and only act after they stopped typing for 200ms or so, then I call the filtering function
[02:53:33] <wroathe> entuland: martinrame: This is commonly known as "debouncing"
[02:53:40] <entuland> I used it here for instance: https://entuland.com/creatisprites/
[02:53:47] <entuland> try typing "white" or "yellow" there
[02:53:51] <wroathe> https://lodash.com/docs/4.17.15#debounce
[02:54:03] <entuland> wroathe, nice, I didn't know about the name of the technique, I just knew it
[02:54:17] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 272 seconds)
[02:55:59] <martinrame> entuland: thanks!, I was looking for something to start reading about it. Knowing its "technical name" helps a lot.
[02:56:11] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[02:56:37] <entuland> the technique is easy enough to implement with vanilla facilities (settimeout, cleartimeout)
[02:56:49] <entuland> well, thanks to wroathe, I ignored the technical name :P
[02:57:31] *** Joins: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[02:59:13] <martinrame> I think I must use debouncing AND fetch abort, because if a fetch is triggered and the user changes the scrolling direction the current fetch must be discarded before the image is shown, letting the new called image be fetched and shown instead.
[02:59:26] *** Joins: carlino3 (~carlino3@159.48.55.249)
[02:59:41] *** Joins: sillyslux__ (~silly@user/silly)
[02:59:46] <entuland> yep, you can have two layers of that approach just fine
[03:00:07] <wroathe> martinrame: I don't think you need debouncing here. It's not what you're really trying to do
[03:00:08] <entuland> my "don't do that" only referred to immediately issuing the fetch
[03:00:33] <wroathe> Well, perhaps some light debouncing, anyway
[03:00:38] <martinrame> wroathe: what do you thing I should do?
[03:00:51] <wroathe> But basically the idea is to initiate the request as soon as they finish scrolling, right?
[03:00:52] <entuland> if I understood their scenario, a simple scroll on the list may issue tens if not more fetch / abort calls
[03:01:03] *** Quits: peteyboy1 (~peteyboy1@95.169.229.12) (Ping timeout: 252 seconds)
[03:01:07] <wroathe> Yeah, you'd need something akin to a debounce for that problem
[03:01:09] <entuland> yes, the idea is to give a little leeway in the input
[03:01:50] <wroathe> So debounce initiating the fetch until they finish scrolling, and then if they start scrolling another way abort and begin debouncing again
[03:02:25] <martinrame> Yes, in "paper" it looks good. I should implement it and test.
[03:02:50] *** Quits: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[03:03:47] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 272 seconds)
[03:05:12] <martinrame> Look at this video: https://www.youtube.com/watch?v=w6hZqwN3JaM is a very old version of a dicom viewer I made. At second 20 I traverse a stack of images with the mouse wheel.
[03:05:13] <skillbot> YouTube Title: fpGui based Dicom Viewer
[03:05:41] *** Quits: sgen (~sgen@142.186.76.30) (Read error: No route to host)
[03:06:14] <wroathe> martinrame: It's not going to be nearly that smooth if you have to debounce and fetch it from the server
[03:06:40] <martinrame> That was a desktop version of the viewer, then I made a web based version, that stores the image stack in memory. The problem is CT and MRI scanners currently generate thousands of images and that takes too long to load.
[03:07:01] <martinrame> wroathe: I know that, I'm trying to find a way to at least simulate it.
[03:08:52] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[03:10:56] <entuland> yep, hitting the server will lower the responsiveness there
[03:11:22] <martinrame> In my tests, the image download speed including latency on not so distant networks is acceptable. The only problem I'm facing right now is the awful efect of disordered images.
[03:11:56] <entuland> could it be that you're issuing aborts and they're not getting honored?
[03:12:11] <entuland> cause in theory, you should NOT get aborted requests to show there
[03:12:24] <martinrame> It might be that.
[03:12:44] *** ruhnet is now known as ruel
[03:12:46] <wroathe> martinrame: You would likely be able to speed this up to an acceptable level by using http/2, and by preloading the images in batches the longer they're on the page
[03:12:49] <entuland> but even if they were getting issued properly, the little debouncing is very trivial and would cut on requests a lot with a long scroll potentially issuing lots of fetches
[03:12:52] <martinrame> I'll debug the abort code and try to implement the debouncing.
[03:13:21] <martinrame> wroathe: yes, http/2 and/or websockets is my "plan B". But it should work with plain http also.
[03:13:25] <entuland> hacked up a small sample - the log and the fade will not be issued if you change your mind and click on a different button within 2 seconds from the latest click: https://jsfiddle.net/entuland/szr9bt63/
[03:13:42] <wroathe> martinrame: And by using service workers to cache images on the client, so that refreshing is near instant
[03:13:55] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 272 seconds)
[03:14:04] <entuland> if you can afford precaching, that would indeed improve UX a lot
[03:14:58] <martinrame> wroathe: yes, I thougt about caching, but I try to avoid that, because the behavior of the user is difficult to predict.
[03:15:31] <wroathe> Meaning?
[03:15:59] <wroathe> Also, with even 100s of images I'd expect regular HTTP loading to be an unabated disaster
[03:16:05] <martinrame> currently I'm not showing the real image, but a zoomed and cropped version of it. What if I cache, the 10 prior and 10 next images just in case the user scrolls them.
[03:16:43] <martinrame> But instead of continuing scrolling, the user zooms in?
[03:17:09] <martinrame> In that case I need to clear the cache, then re-cache the zoomed in version of the cached stack.
[03:17:22] <entuland> you can use both techniques
[03:17:23] *** Joins: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[03:17:50] <martinrame> entuland: I'll do that.
[03:17:55] <entuland> you can as well cache a smaller sample and only if they stay on the same image for long enough (again, debouncing 200ms or so) issue the request for the full-res image
[03:18:07] <wroathe> martinrame: https://imagekit.io/demo/http2-vs-http1
[03:18:56] <martinrame> wroathe: yes, I saw that example. After solving this issue I'll investigate http/2.
[03:19:11] <wroathe> martinrame: And, importantly, https://caniuse.com/http2 browser support is currently pretty great
[03:19:32] <wroathe> martinrame: So there shouldn't be much need to support regular HTTP for such an application (as long as you can talk your customers out of using IE11)
[03:19:42] <entuland> http2 and ssl are definitely the way to go
[03:20:23] <martinrame> I know that, but even with http2 I'll experience the same issue
[03:20:54] <entuland> oh sure, from my POV, it's both for added security and to shave performance off
[03:20:54] <martinrame> because I thing the problem is not so related to network speed, but application architecture.
[03:21:14] <entuland> take that as an aside advice since we were there
[03:21:22] <entuland> the issues are definitely disconnected
[03:21:23] <wroathe> Well, these problems sound orthogonal to eachother. I.e. the "out of order loading" versus the "it's too slow" problem
[03:21:33] <wroathe> The HTTP/2 thing helps with the latter, but not necessarily the former
[03:21:37] <martinrame> Exactly
[03:21:38] <wroathe> The former will require correct code :P
[03:22:00] <entuland> honestly not even sure that out of order was actually meant to be that
[03:22:15] <martinrame> let me try to explain
[03:22:19] <entuland> I interpreted it as "unwanted" (due to having been aborted) images, not out of order
[03:22:34] <wroathe> Well, w/e. Just fix it.
[03:22:36] <wroathe> :P
[03:22:37] <martinrame> entuland: well, yes.
[03:22:39] <entuland> eheheh
[03:22:51] <entuland> just a small comm hiccup, not a problem
[03:23:03] *** Quits: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[03:23:36] <martinrame> entuland: I know that, but I hate that!
[03:23:55] <wroathe> martinrame: To be clear, I wasn't suggesting HTTP/2 for the initial problem you asked about. Just for making an application that needs to load hundreds of images responsive.
[03:23:56] <entuland> I'm fine with these things as long as the main points come across
[03:24:37] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[03:25:28] <wroathe> martinrame: Is this something you're building for a company to sell to MRI shops? Or do you own this software? And are you selling it directly to the MRI shops?
[03:28:14] <martinrame> wroathe: I develop software for medical image centers. Currently I have some products based on open source frameworks like CornerstoneJs and Weasis, but as I'm allways trying improvements I'm currently trying this "streaming" mechanism.
[03:29:06] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[03:29:13] <wroathe> martinrame: Oh, so it's your company then? That sounds very lucrative.
[03:29:41] *** Joins: silly_ (~silly@user/silly)
[03:29:45] <martinrame> wroathe: yes and no. I live and my customers are from Argentina.
[03:30:25] * wroathe doesn't know anything about Argentinian economics 
[03:30:44] <martinrame> wroathe: big shops can afford "world class" software provided by big vendors. But there's a small and medium sized shops that can't afford those products.
[03:31:46] <martinrame> What I'm trying to build are not so expensive products, with world class quality, with the objective of selling them worldwide.
[03:32:39] *** Quits: BUSY (~BUSY@user/busy) (Remote host closed the connection)
[03:32:57] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 252 seconds)
[03:33:25] <wroathe> Impressive. I'd like to find a problem space like this that needs high quality software and do the same thing, but I have no idea where to even begin.
[03:34:08] <wroathe> Projects like yours seem like they come from a mix of serendipity and insider industry knowledge a lot of the time, i.e. the person was somehow connected to the space, saw a need, and capitalized on it
[03:34:59] <wroathe> But if you're not connecting to a particular industry just googling for spaces where the software needs an upgrade is a huge crapshoot
[03:35:09] <wroathe> connected*
[03:35:36] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[03:35:45] <martinrame> Exactly, I worked for a seller of CT and MRI equipments building administrative applications for 12 years before jumping into this.
[03:36:02] <wroathe> Makes sense
[03:40:38] <martinrame> Well, I must go to dinner. I hope to see you here during week days.
[03:41:04] <wroathe> Later
[03:41:10] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[03:41:16] *** Quits: martinrame (~leonardo@181.116.72.35) (Quit: leaving)
[03:44:59] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[03:46:09] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[03:49:46] *** Joins: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net)
[03:58:39] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[03:59:05] *** Quits: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 245 seconds)
[04:01:56] *** Quits: Deide (~Deide@user/deide) (Quit: Seeee yaaaa)
[04:03:58] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 272 seconds)
[04:09:16] *** Quits: tex (~super@user/dix) (Ping timeout: 244 seconds)
[04:13:08] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Remote host closed the connection)
[04:13:30] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[04:14:51] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[04:17:25] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[04:17:57] *** Joins: BUSY (~BUSY@user/busy)
[04:18:22] *** Joins: zacts (~zak@user/zacts)
[04:18:47] *** Quits: zacts (~zak@user/zacts) (Client Quit)
[04:19:48] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 272 seconds)
[04:22:20] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[04:27:18] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[04:32:00] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[04:37:33] *** Quits: deltab (~deltab@95.154.230.49) (Ping timeout: 264 seconds)
[04:43:57] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[04:47:47] *** Joins: deltab (~deltab@95.154.230.49)
[04:48:51] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[04:49:59] *** ruel is now known as lvlinux
[05:02:45] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[05:07:25] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[05:07:26] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 245 seconds)
[05:09:43] *** Quits: eck0_ (~Android@mobile-166-173-63-55.mycingular.net) (Read error: Connection reset by peer)
[05:10:00] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[05:11:16] *** Joins: eck0 (~Android@068-186-235-203.res.spectrum.com)
[05:19:57] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[05:24:36] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[05:35:43] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[05:40:20] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[05:45:46] *** Joins: gehn1 (~gehn@77.247.181.218)
[05:46:01] *** Quits: gehn (~gehn@109.201.152.164) (Read error: Connection reset by peer)
[05:46:23] *** Quits: Jaran (~mail@user/jaran) (Read error: Connection reset by peer)
[05:46:24] *** Quits: justBull (~justache@user/justache) (Remote host closed the connection)
[05:46:50] *** Joins: justBull (~justache@user/justache)
[05:48:03] *** Quits: carlino3 (~carlino3@159.48.55.249) (Quit: Client closed)
[05:51:29] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[05:56:30] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[06:06:19] <theskillwithin> ꧁꧂
[06:07:14] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[06:10:33] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[06:11:54] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[06:16:47] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:17:43] *** Joins: lenswipe (~lenswipe@pool-108-26-205-72.bstnma.fios.verizon.net)
[06:17:48] <lenswipe> hey folks
[06:18:12] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[06:20:49] <theskillwithin> o/
[06:22:37] <lenswipe> having a weird issue with a JS library
[06:22:41] <lenswipe> specifically PDFKit
[06:22:50] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 245 seconds)
[06:22:52] <lenswipe> if I pipe the output to res, I get a PDF with text in it
[06:22:58] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[06:23:12] <lenswipe> if I try to translate the output into a buffer and then return it, i get an empty PDF
[06:23:21] <lenswipe> So, this gives me an empty PDF: https://pastebin.com/a26b2TBj
[06:23:24] <lenswipe> I don't think it should
[06:24:39] <lenswipe> this however works: https://pastebin.com/ah99f6E0
[06:26:25] <GreenJello> ideally a duplex stream delays a tick before it starts writing output, but it's not required, or even the default behavior
[06:26:45] <lenswipe> GreenJello, was that addressed to me?
[06:26:49] <GreenJello> all of the events could be fired before .end() returns
[06:26:50] <GreenJello> yes
[06:26:53] <lenswipe> ah
[06:27:00] <lenswipe> so what are you suggesting?
[06:27:26] <GreenJello> store the promise in a variable, then call .end(), then return the promise
[06:27:27] <lenswipe> im figuring i have some kind of async weirdness going on, but i can't pin down what it is
[06:27:37] <lenswipe> Ahhh!
[06:27:51] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[06:28:37] <lenswipe> GreenJello, question...how does that work with async/await?
[06:28:56] <lenswipe> like, this is an async method....
[06:29:15] <lenswipe> does that mean it now returns Promise<Promise<T>>?
[06:29:15] *** Joins: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[06:31:31] <wroathe> I thought .end was supposed to be called _after_ receiving all of the data chunks, like in the 'end' or 'error' handlers...
[06:32:14] <GreenJello> wroathe, it looks to be a duplex stream
[06:32:21] <GreenJello> .end() ends the writing half
[06:32:43] <wroathe> Oh, right
[06:32:45] <GreenJello> lenswipe, promises are flattened automatically
[06:33:00] <GreenJello> you can't have a Promise<Promise<T>>
[06:33:40] *** Quits: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[06:34:05] <lenswipe> GreenJello, the language server disagrees
[06:34:08] <lenswipe> "Type '{}' is missing the following properties from type 'Buffer': write, toJSON, equals, compare, and 70 more.ts(2740)"
[06:34:38] <lenswipe> https://pastebin.com/HAHQ3bqz
[06:35:17] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[06:35:19] <GreenJello> inference bug?
[06:35:46] <lenswipe> maybe, but tsc won't compile it
[06:35:59] <lenswipe> the only way to fix it is to assign that to a variable, and then await the variable and return that
[06:37:14] *** Quits: P1RATEZ (piratez@user/p1ratez) ()
[06:37:33] <GreenJello> awaiting it at the end is harmless, so I guess that's fine
[06:38:02] <lenswipe> i take that back
[06:38:07] <lenswipe> that also doesn't compile anymore
[06:38:17] <lenswipe> it could just be the ts language server having a moment
[06:38:42] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[06:43:15] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[06:43:48] *** Quits: DigDug (~nocaps@ool-182dff22.dyn.optonline.net) (Ping timeout: 252 seconds)
[06:49:37] <acagastya> wroathe -- I understand autentication is a vast topic, but OAuth would be an overkill, imo.  Reason being -- I have made a custom HTML page, on my computer, which is acting as the homepage.  Every time I open a new tab, it is making a `fetch` POST to the server, updating the last tab open time.  I am not trying to brush off your points, though I don't know how I could make it as simple as possible, to make a POST request to the API to update th
[06:49:37] <acagastya> content received making that API call, it just makes a request to note when the tab was last opened.  It is possible I am not looking at something problematic; I can be short-sighted at times, but I don't see how a cookie would be able to better address this.  Since it is perpetual -- I feel, though I could be mistaken -- any benefit of a token would be lost.
[06:50:06] *** Joins: Dorward (~dorward@daviddorward.plus.com)
[06:50:59] *** Quits: Dorward_ (~dorward@daviddorward.plus.com) (Ping timeout: 244 seconds)
[06:54:54] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 268 seconds)
[06:55:12] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[06:56:27] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 252 seconds)
[06:59:29] *** Joins: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net)
[06:59:43] <lenswipe> GreenJello, i don't wanna speak too soon, but i think i fixed my inference problem
[06:59:45] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[06:59:56] <lenswipe> new Promise<Buffer> instead of new Promise
[07:00:05] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[07:00:44] <hassoon> is that ts ?
[07:00:55] <wroathe> acagastya: Well, being that this is all local only apparently I don't really have much to say :P I assumed you were looking to deploy something for other people to use in a production environment
[07:01:04] <lenswipe> hassoon, yes
[07:01:31] <lenswipe> (yes, I know that this is #javascript not ##typescript...but TypeScript is just whole grain JavaScript ;) )
[07:01:37] <wroathe> I would think TS would be able to infer that
[07:01:39] <wroathe> Odd that its' not
[07:01:41] <wroathe> it's not*
[07:01:46] <lenswipe> wroathe, it's because I'm using raw promise
[07:02:12] <hassoon> lenswipe: just asking, i have no problem at all with the channel topic in question
[07:02:26] <wroathe> lenswipe: As opposed to a cooked promise?
[07:02:26] <lenswipe> fair enough :)
[07:02:27] <hassoon> lenswipe: ts and js are like .. mheh, same thing
[07:02:36] <lenswipe> wroathe, as opposed to async/await
[07:02:48] <wroathe> lenswipe: That shouldn't matter
[07:03:04] <hassoon> lenswipe: some even call ts a better/enhanced version of js
[07:03:09] <hassoon> so meh.. whatever
[07:03:12] <wroathe> lenswipe: A Promise is a Promise. By default it should be Promise<any> and infer a more specific type based on what you resolve it with
[07:03:35] <wroathe> lenswipe: (or how you use it)
[07:05:01] <lenswipe> GreenJello, i still have a blank btw
[07:05:05] <lenswipe> blank PDF*
[07:05:44] <GreenJello> try opening it in a text editor, or using a pdf to text tool
[07:05:59] <lenswipe> im looking at it in a hex editor right now
[07:06:17] <acagastya> wroathe: that is still in prod, though.  Anyone who deploys, they will have the same use.  But only one user per server.  It is meant to be self-hosted by individuals, for individuals, not groups -- though I don't know if that fact changes anything.  It is prod, yes.  So should I change the authorisation pattern for that?
[07:06:24] <lenswipe> https://pastebin.com/H2GNxR45
[07:06:29] <lenswipe> that's my label class
[07:07:01] <GreenJello> is the file empty?
[07:07:10] <wroathe> acagastya: TBH I can't brain this right now :P It's fight night and this is one notch beyond where I want to be thinking right now :P
[07:07:31] <wroathe> Someone else might be able to help
[07:08:03] <GreenJello> lenswipe, like is it zero bytes in size, or displays blank in a pdf viewer?
[07:08:44] <lenswipe> GreenJello, it has PDF gunk in it, but nothing that I wrote. It looks like a common or garden empty PDF
[07:09:35] <GreenJello> lenswipe, try running it through a pdf to text tool just to verify
[07:10:01] <GreenJello> I vaguely remember that PDFs don't store text in a normal way
[07:10:25] <lenswipe> oh, interesting
[07:10:27] <lenswipe> ill try that
[07:10:28] <lenswipe> any suggestions?
[07:10:56] <lenswipe> ah, i just tried an online one and got an error
[07:11:01] <lenswipe> presumably that means its not a valid PDF
[07:11:08] <lenswipe> which would explain why my PDF reader is showing it as blank
[07:12:22] <GreenJello> hmm, what if you do the promise part before calling any methods on this.document?
[07:12:55] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[07:13:06] <lenswipe> interesting idea
[07:14:01] <lenswipe> GreenJello, nada
[07:17:07] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[07:17:25] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[07:19:43] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[07:28:47] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[07:31:12] *** Joins: Rockwood (~Rocky@2401:4900:2ee9:a126:f1d4:fd3a:7901:7388)
[07:33:15] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[07:41:26] *** Joins: ferdna (~ferdna@user/ferdna)
[07:41:45] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[07:46:21] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[07:46:55] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[07:50:54] *** Joins: DigDug (~nocaps@ool-182dff22.dyn.optonline.net)
[07:50:57] *** Joins: alystair2 (~alystair@user/alystair)
[07:51:03] *** Quits: alystair (alystair@user/alystair) (Killed (NickServ (GHOST command used by alystair2!~alystair@user/alystair)))
[07:51:04] *** alystair2 is now known as alystair
[07:51:35] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[07:53:05] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[07:53:21] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[07:56:23] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Client Quit)
[07:56:35] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[07:59:18] <Rockwood> o/
[07:59:28] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Client Quit)
[07:59:44] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[08:03:53] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[08:07:34] *** Quits: gehn1 (~gehn@77.247.181.218) (Quit: Leaving)
[08:08:30] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[08:10:39] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[08:13:41] *** Joins: R0b0t1` (~R0b0t1@74-209-15-101.dsl.dynamic.casstel.net)
[08:13:57] <R0b0t1`> hi, I have a for loop over an array of objects that I try to set the callbacks on
[08:13:59] <R0b0t1`> but
[08:14:08] <R0b0t1`> the callback body captures a variable that changes on ensuing loop iterations
[08:14:12] <R0b0t1`> what is the way to fix that
[08:14:13] <ljharb> don't use loops
[08:14:20] <ljharb> R0b0t1`: the fix is to use array iteration methods.
[08:14:30] <ljharb> Rockwood: but also, what do you mean "set the callbacks"
[08:14:30] <R0b0t1`> like
[08:14:41] <ljharb> !iterations @ R0b0t1`
[08:14:42] <jellobot> R0b0t1`, ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff
[08:14:53] <R0b0t1`> elem.on("idle", function() { elem.sniggleWiggle(); }
[08:14:58] <R0b0t1`> );
[08:15:40] <ljharb> R0b0t1`: so then yes, use .forEach instead of a loop
[08:15:43] <ljharb> !last @ R0b0t1`
[08:15:43] <R0b0t1`> I'm definitely aware what those are but you are sure they solve the problem? If elem is for(var elem in arrayofelem) then what happens is only the last object has a properly working callback because the captured elem value for all callbacks is now the last element
[08:15:43] <jellobot> R0b0t1`, If something is only being applied to the 'last' one of many, you might have a scoping problem. e.g.: in for (i=0; i<5; ++i) {doX(function(){ doY(i); });} `doY' might only receive 5 as a value. You can solve this using closures, so see !closures. For more info see http://web.archive.org/web/20161209211206/www.mennovanslooten.nl/blog/post/62/
[08:15:48] <R0b0t1`> ah yeah ok
[08:16:02] <ljharb> !loops are evil @ R0b0t1`
[08:16:02] <jellobot> R0b0t1`, Loops fail to clearly signal the intention of your code, and as such should be avoided whenever possible (prefer higher-order functions, such as .map, .reduce, .filter, ...). See also: http://qr.ae/RNMEGA and https://gist.github.com/robotlolita/7643014
[08:16:25] <R0b0t1`> alright well that is certaily short sighted, the real issue is a lack of explicit scoping
[08:16:30] <R0b0t1`> certainly*
[08:16:36] <ljharb> yes, it's part of why loops suck
[08:19:00] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[08:20:48] <Maxdamantus> R0b0t1`: alternatively, don't use var.
[08:21:11] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[08:21:16] <Maxdamantus> `for(const v of a){ .. }` will create a new `a` variable for each iteration.
[08:21:34] *** Joins: eck0_ (~Android@mobile-166-173-63-57.mycingular.net)
[08:21:51] <Maxdamantus> If you're seeing the same variable being reused, it's presumably because you're using `var` or worse, a global variable.
[08:23:45] <Maxdamantus> !var @ R0b0t1`
[08:23:46] <jellobot> R0b0t1`, `var` defines a variable in the current function-level scope, and should not be used when `const` or `let` are available (see !babel, !const, and !let). Always use a keyword to declare variables, otherwise you will pollute the global scope (a keyword is required in strict mode).
[08:23:54] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[08:23:54] *** Quits: eck0 (~Android@068-186-235-203.res.spectrum.com) (Ping timeout: 252 seconds)
[08:24:13] <wroathe> R0b0t1`: You could post more context for what you're trying to do, and we may be able to suggest a better way to do it
[08:26:10] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 272 seconds)
[08:27:35] <Rockwood> ljharb, ?
[08:29:15] <ljharb> Rockwood: what
[08:29:27] *** Joins: Snyp (~rksht@49.207.218.69)
[08:30:11] *** Quits: Snyp (~rksht@49.207.218.69) (Client Quit)
[08:30:18] <Rockwood> <ljharb> Rockwood: but also, what do you mean "set the callbacks"
[08:31:30] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 264 seconds)
[08:32:50] *** Quits: DigDug (~nocaps@ool-182dff22.dyn.optonline.net) (Ping timeout: 245 seconds)
[08:37:21] *** Quits: eck0_ (~Android@mobile-166-173-63-57.mycingular.net) (Read error: Connection reset by peer)
[08:37:35] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[08:37:41] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:31d0:be79:8bea:8cd9) (Quit: WeeChat 3.1)
[08:39:25] *** Joins: eck0 (~Android@047-007-119-133.res.spectrum.com)
[08:42:36] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[08:44:15] *** Quits: alystair (~alystair@user/alystair) (Remote host closed the connection)
[08:44:58] <shan> "It is not possible to write complex, efficient and easy to maintain UIs with vanilla JavaScript." agree or disagree?
[08:45:20] <leduyquang753> Kinda.
[08:46:26] <wroathe> shan: Disagree. Vanilla JS and the DOM APIs have evolved leaps and bounds over the last few years.
[08:46:39] *** Joins: eck0_ (~Android@047-007-119-133.res.spectrum.com)
[08:50:20] *** Quits: eck0 (~Android@047-007-119-133.res.spectrum.com) (Ping timeout: 245 seconds)
[08:53:21] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[08:55:59] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[08:56:02] <KevinX> I still think web apis aren't very user friendly. Look at mutation observer, intersection observer, etc. They are great, but don't necessarily produce code that's "easy to maintain" per se. That's why libraries like React and Vue, or even AlpineJs exist and are popular.
[08:56:20] <KevinX> Definitely better DX than 10 years ago though
[08:56:44] *** Joins: summersault (~summersau@179.221.251.16)
[08:59:05] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[09:01:06] <shan> i cant decide if i agree or disagree honestly
[09:01:56] *** Quits: justBull (~justache@user/justache) (Excess Flood)
[09:02:22] *** Joins: justBull (~justache@user/justache)
[09:03:06] <wroathe> KevinX: Not everything needs to be reactive. In some cases it's just as straightforward to do things imperatively.
[09:05:51] <shan> 1) efficient - yes 2) complex - yes (see GitHub) 3) maintainable ??? (Yes, it's possible, but how easy is it to do it, and is it easy enough for the average web dev to do it?)
[09:07:48] <KevinX> My favorite lately is AlpineJS which lets you sprinkle in declarative reactive interactions via html attributes wherever you need it. https://alpinejs.dev/
[09:08:08] <wroathe> shan: Well, if you're accounting for skill levels then the all bets are off, but your original quote said that it was _not possible_. I would say that it's certainly possible if you have a set of experienced developers who practice refactoring as they go to reduce duplication and establish strong abstractions
[09:11:36] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[09:12:18] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[09:13:44] *** Joins: Buttercat (~Buttercat@user/buttercat)
[09:14:26] <shan> wroathe: fair enough
[09:15:20] <wroathe> shan: For example, a createEl style helper for creating helpers with an object describing the attributes, the .classList API for adding/removing state classes, helpers that compose well and make event delegation trivial using the .matches API
[09:16:09] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[09:16:22] <KevinX> querySelector and querySelectorAll were pretty great additions too
[09:17:47] <wroathe> const on = (el, e, fn) => el.addEventListener(e, fn); const matchesSel = (sel, fn) => e => e.target.matches(sel) && fn(e);
[09:18:59] <wroathe> on('.tab-container', 'click', matchesSel('.tab', e => ...));
[09:19:13] <wroathe> Yup, qs and qsa are great too
[09:20:00] *** Joins: summersault (~summersau@179.221.251.16)
[09:20:44] <R0b0t1`> wroathe: I got it solved
[09:20:49] <R0b0t1`> I am controlling elevators on a web page
[09:20:52] <R0b0t1`> I am very happy now
[09:22:37] <shan> wroathe: just the other day i wrote this helper to build an HTML element from a json schema
[09:23:23] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[09:23:27] <shan> how do you guys avoid storing state in the DOM
[09:24:01] <shan> like for example putting a thing in the dom at one place in the code and then getting it back via querySelector
[09:24:58] <R0b0t1`> something you can get from your data model?
[09:25:52] <shan> i suppose, yes - i can't remember specific instances of this but i remember doing it in places and feeling bad about it
[09:29:29] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 272 seconds)
[09:30:32] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[09:34:09] <KevinX> You could store state in a Map() or WeakMap() maybe? Or just in a normal js object?
[09:34:19] <wroathe> shan: That goes more generally towards state management, which is a big topic
[09:34:25] <wroathe> shan: With lots of different approaches
[09:34:43] <KevinX> ^
[09:34:56] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[09:35:11] <wroathe> For a small application I favor just having a single "context" object that contains all of the state for the application
[09:40:10] *** Quits: lenswipe (~lenswipe@pool-108-26-205-72.bstnma.fios.verizon.net) (Remote host closed the connection)
[09:41:24] *** Quits: Rockwood (~Rocky@2401:4900:2ee9:a126:f1d4:fd3a:7901:7388) (Ping timeout: 268 seconds)
[09:43:32] *** Joins: Rockwood (~Rocky@2409:4050:2e0d:e8da:fd3a:649b:3f4:d785)
[09:48:11] *** Quits: Rockwood (~Rocky@2409:4050:2e0d:e8da:fd3a:649b:3f4:d785) (Ping timeout: 268 seconds)
[09:48:27] *** Joins: eck0 (~eck0@047-007-119-133.res.spectrum.com)
[09:48:43] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[09:53:33] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[09:54:38] <wroathe> shan: This maybe isn't a great example, but I recently built this plain JS, plain DOM POC for a zoomable and pannable kind of thing: https://github.com/JustinChristensen/connector-demo/blob/master/main.js https://justinchristensen.github.io/connector-demo/
[09:55:02] <wroathe> shan: And this is an example of that "context" object I'm referring to: https://github.com/JustinChristensen/connector-demo/blob/master/main.js#L52-L67
[10:01:42] *** Joins: fiend (~friend@c-73-43-171-169.hsd1.ga.comcast.net)
[10:04:33] *** Quits: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[10:09:25] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[10:12:58] *** Joins: Akimb (~Akimb@86.100.13.100)
[10:14:10] * shan reads
[10:14:14] <shan> thanks wroathe
[10:14:27] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[10:15:14] <theskillwithin> wroathe what does POC mean?
[10:15:38] <wroathe> theskillwithin: proof of concept
[10:15:44] <theskillwithin> ahhh
[10:19:48] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:24:21] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[10:24:49] *** Joins: DigDug (~nocaps@ool-182dff22.dyn.optonline.net)
[10:26:46] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[10:32:12] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 272 seconds)
[10:37:24] *** Quits: Buttercat (~Buttercat@user/buttercat) (Quit: Leaving.)
[10:38:59] <ashnur> the bigger your application the more it makes sense to have a single object with all the state
[10:39:27] <ashnur> at least and as long it's a single machine UI interface thing in the browser running javascript. not any random app
[10:40:29] <ljharb> that seems like the inverse of correct to me
[10:40:39] <ljharb> the larger the app, the less you want one big god object owning everything
[10:41:19] <ashnur> well, not necessarily a single object as in interface, since nested hashmaps is hard to work with, so I usually do some domain specific query language thing
[10:41:22] <theskillwithin> like in react, keep the state to just where u need it
[10:41:27] <ashnur> but it has to be shared globally
[10:42:05] <ljharb> it's best to avoid globals, and nested state, and god objects
[10:42:09] <ljharb> none of those things are good
[10:42:10] <wroathe> ashnur: Indeed
[10:42:11] <ashnur> "keep the state where you need it" is correct, you need it everywhere, so put it in a global shared space which is immutable so you don't have the old issue with mutable shared memory
[10:42:21] <wroathe> theskillwithin: That's the opposite of the approach that I think ashur and I are saying we favor :P
[10:42:37] <theskillwithin> im aware
[10:42:45] <wroathe> theskillwithin: I'm just not a fan of this pretending like every component is it's own little micro application
[10:42:48] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[10:43:08] <theskillwithin> that doesn't mean you throw everything into redux tho or global context for no reason
[10:43:16] <ashnur> ljharb, UI is different. think every piece of information that's directly or indirectly present on the screen as already being in a single shared memory space that's visible for the most important consumer of your data: the human
[10:43:19] <wroathe> I mean...
[10:43:30] <ljharb> ashnur: i don't think UI is different at all
[10:43:39] <ljharb> and you definitely do not need all the state everywhere
[10:44:00] <ashnur> if you want a proper UI with overarching themes then you will have to connect data that is not owned by the same business processes. either you change your business imperatives or do not fucking go to the problem space and just use shared data for UI data
[10:44:42] <wroathe> It's all their to manipulate the same global mutable DOM at the end of the day
[10:44:44] <ashnur> I just don't think you have relevant experience ljharb  :( I know you are good with lots of things, but I don't know about your work that was related to what I am saying
[10:44:52] <wroathe> Fighting that always leads to cognitive dissonance
[10:44:56] <ljharb> lol relevant experience?
[10:44:58] <ljharb> i've done UI work for a decade
[10:45:08] <ljharb> for some of the largest websites in the world
[10:45:14] <ashnur> yeah but did you do UI what I am talking about?
[10:45:22] <ljharb> but maybe let's just bail from the debate if you're going to immediately resort to logical fallacies
[10:45:25] <ashnur> or did you do it like large corporations do everything
[10:45:28] <ljharb> yes, i did UI for a decade
[10:45:28] <wroathe> there to manipulate*
[10:45:39] <ljharb> i don't know what you mean by "how the large corporations do everything"
[10:45:40] <ashnur> ljharb, obviously you are not differentiating where I am
[10:45:41] <ljharb> but i did good UI.
[10:45:49] <theskillwithin> oof, i was hoping he was being sarcastic.  but was srs
[10:45:53] <ljharb> which avoids a global god object like the plague, because that's always bad code
[10:46:03] <ljharb> only incompents would prefer that approach, to avoid mincing words.
[10:46:08] <wroathe> ashnur: At the last corporation I worked for the front end developers referred to the components as "apps"
[10:46:11] <ashnur> i trust your work was good, sure, the difference is not 100% generally present. one can do good UI with encapsulated data, it just sucks
[10:46:12] *** Joins: Ampersand (~ajbura@user/ajbura)
[10:46:25] <ljharb> the suckiest possible thing is using one massive global state object for the whole application
[10:46:35] <ashnur> yeah, obviously the dogmas are strong
[10:46:39] <ljharb> i've spent much of my career trying to unwind those specific mistakes
[10:46:44] <ashnur> ok
[10:46:45] *** Joins: adios (~adios@244.92.151.186.static.intelnet.net.gt)
[10:46:56] <wroathe> ashnur: They had this idea that multiple teams could safely work on their components in isolation, and then deploy them all to the same page, and that integration testing would turn up any problems along the way, but that they didn't expect there to be many problems
[10:46:58] <ljharb> something isn't necessarily dogma just because it's largely agreed with.
[10:47:11] <ljharb> and something isn't correct just because you feel like you're fighting the world.
[10:47:20] <ljharb> sometimes, when you're in the minority, it's because you're wrong.
[10:47:20] <ashnur> and I used to do mutable shared state and it sucked, then i tried to do what ljharb said and it sucks more, so i now do what others say and it doesn't suck at all
[10:47:21] <ashnur> :D
[10:47:27] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[10:47:33] <wroathe> Basically the attitude was, "Well, if we just pretend like we have our own isolated memory then it must be true, right?"
[10:47:43] <ashnur> ljharb, sometimes the majority can be wrong. like literally always.
[10:47:58] <ashnur> there is nothing that you can't do better than the majority if you pay more attention
[10:48:36] <ashnur> wroathe, yeah but in a UI it's funny to pretend that the data is isolated when it's clearly sharing visual space
[10:48:36] <ljharb> lol
[10:48:43] <ljharb> the majority is right much more often than it's wrong, sorry.
[10:48:51] <ashnur> yeah, again, dogmas
[10:48:54] <ljharb> and most of the time when you're defying the majority you
[10:48:59] <ljharb> you're making huge mistakes.*
[10:49:08] <ljharb> anyways, go ahead and build your massive god object
[10:49:25] <ljharb> but unless you've actually worked on an application large enough to support your claims, your claims hold no merit, and you should probably refrain from making them
[10:49:33] <theskillwithin> well, if you take the average of a groups guesses of how many jelly beans are in a jar.  that turns out to be more accurate more often than any single persons guess
[10:49:36] <wroathe> If you've got a global mutable DOM it makes a hell of a lot of sense to have a global store that track changes to and respond accordingly
[10:49:40] <ashnur> ljharb, you using derogatory terms doesn't help to sell that you are making decisions based on reason and not dogmas
[10:49:47] *** Joins: Jaran (~mail@user/jaran)
[10:50:02] <ljharb> ashnur: using the word "dogmas" means your argument already has no credibility.
[10:50:22] <ashnur> ok, so i used the wrong word, clearly 100% of everything i ever said can be dismissed
[10:50:25] <ljharb> ashnur: feel free to argue with reason, and when those reasons appear for the first time, i'll use reason to debate them.
[10:50:43] <ashnur> clearly the wrong word used in the future makes all past truths invalid
[10:50:53] <ljharb> that is the danger of words, yes
[10:51:08] <ashnur> ljharb, i stated very clearly the simple reason for my arguments, it's there. you didn't even mentioned it
[10:51:26] <ashnur> as long as you ignore my reasoning you saying i don't have one is not on me
[10:51:45] <ljharb> if it was stated clearly it wouldn't have been missed ¯\_(ツ)_/¯
[10:51:50] <ashnur> and lol at actually agreeing with my sarcastic remarks
[10:52:16] <ashnur> words are not true or false by themselves and your interpretation counts mroe than my intent.
[10:52:16] <theskillwithin> im bored, get to the point
[10:52:28] <ashnur> ljharb, yeah, because you never miss anything clear
[10:52:32] <ashnur> :)
[10:52:48] <ashnur> let me repeat then, so you can't miss it
[10:53:04] <ashnur> we write declarative UIs when we can because it works, right?
[10:53:46] <ljharb> "because it works" describes the motivation for literally everything everyone does. if it didn't work, and they knew that, they wouldn't do it.
[10:54:06] <ashnur> i am asking you to agree or disagree, not to pick apart the first thing you can find
[10:54:17] <ljharb> life isn't a simple yes or no question, i'm afraid
[10:54:27] <ashnur> it's not about life
[10:54:29] <ljharb> so then i disagree. your question is flawed on its premise, so i can't agree with it,
[10:54:32] <ljharb> try again?
[10:54:42] <ashnur> if your goal is not to engage in a discussion but to be as antagonistic as possible then again, why am I to blame that you don't see my arguments?
[10:54:43] <theskillwithin> i found the question a bit vague tbh
[10:55:00] <ashnur> try steelmanning once
[10:55:41] <ljharb> if you're going to show up and make a controversial argument and immediately proceed to defend it with logical fallacies, why would you expect a peaceful discussion?
[10:55:45] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[10:55:50] <wroathe> This is all also compounded by the fact that most corporate web pages are waaaaaaaaaaay more simple than the development team makes them out to be.
[10:56:43] <wroathe> You've got a team of 15 developers working to ship 300 components for pages that feature things like columns of text, navigation menus, a slider, and simple forms
[10:57:30] <ljharb> lol that sounds awfully close to the reddit hot takes of "psh, i could build X in a weekend"
[10:57:56] <theskillwithin> idk how thats relevant to global vs local state
[10:57:59] <ljharb> literally every company i've started working for has taught me that every website is infinitely more complex than it seems from the outside
[10:58:09] <ljharb> (also agree, it's not really relevant to the state discussion)
[10:58:21] <ashnur> ljharb, have you ever in your life tried steelmanning in any situation? i am seriously asking
[10:58:22] <wroathe> theskillwithin: As the complexity of the application grows you start getting into more debates about where and how to store your state
[10:58:36] <ljharb> ashnur: wtf is "steelmanning"
[10:58:42] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[10:58:43] <ashnur> right
[10:58:52] <theskillwithin> it means helping your opponents argument
[10:59:17] <ljharb> that only seems useful when the argument has potential merit in the first place
[10:59:31] <ashnur> lol
[10:59:32] <ljharb> and asking for your opponent's help to make your point kind of demonstrates that you don't have much of one
[10:59:33] <wroathe> theskillwithin: And soon enough what ends up happening is that you turn a simple web page that should only require a few hundred lines of HTML, Javascript, and CSS rapidly becomes FizzBuzzEnterpriseEdition
[10:59:51] <ashnur> ljharb, i am telling you, this attitude is zero sum
[11:00:09] <ljharb> maybe focus on what you can control
[11:00:14] <theskillwithin> well the point of steelmanning is, if you win the argument just because your opponent is incompetent,  that doesn't mean you have the truth
[11:00:15] <ljharb> like the quality of your own argument
[11:00:19] <ljharb> theskillwithin: sure, that's fair
[11:00:39] <ashnur> being uninterested in information only if it fits your existing narratives is dangerous at the least
[11:00:41] <wroathe> theskillwithin: I'm getting the feeling you weren't responding to me when you said "idk how that's relevant..." :P
[11:00:42] <ljharb> theskillwithin: but that also doesn't mean every argument deserves the time and energy of that kind of attention
[11:01:00] <theskillwithin> right, just explaining
[11:01:04] <ashnur> sry about the incorrect double negative :(
[11:01:09] <ljharb> theskillwithin: in fact if you try to steelman every argument then you end up exclusively feeding trolls and arguing nonsense :-)
[11:01:09] *** Joins: amahl (~amahl@dxv5skyhc49fswhfjlcpy-3.rev.dnainternet.fi)
[11:01:22] <wroathe> Anyway, the mission, should you choose to accept it, is to fight the urge to make https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition at all costs :P
[11:01:31] <theskillwithin> wroathe i was,  u didn't connect the thread to me back to the topic
[11:01:50] <wroathe> theskillwithin: I thought I just did?
[11:01:55] <wroathe> theskillwithin: Or are you not satisfied?
[11:02:11] <ljharb> wroathe: sure but most corporate websites aren't that, even remotely.
[11:02:19] <ljharb> it's not the 90s any more
[11:02:32] <ashnur> yeah
[11:02:59] <ashnur> let's just take a moment to consider the absolute clusterfuck current internet is and in which the kind of web development that you get 6 figure salaries in contributes to
[11:03:16] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[11:03:16] <ashnur> the bloated shit that is often useless
[11:03:27] <ashnur> but let's defend it because the majority can't be wrong
[11:03:33] <ljharb> there are so many unproven premises in those last sentences that i don't know where to begin
[11:04:55] <ashnur> unproven? saying as if this needs to be proven from you is just you expressing that you do not live in the same world i live, fucking google "the internet ..." sucks, clusterfuck and similar terms and see if the majority disagrees
[11:05:09] <ljharb> the internet doesn't suck and is not a clusterfuck, sorry
[11:05:17] <ashnur> ask around somewhere where you do not have colleagues and tech people
[11:05:26] <ljharb> so if you live in a world where it does suck, and you want to communicate, then you'll have to establish that first.
[11:05:26] <ashnur> what people you know think about the internet in general
[11:05:27] <wroathe> ashnur: I can actually agree with that assessment. There's been so many times that I bought in fully with what the current architectural wisdom was over the last decade, and then came to feel betrayed shortly thereafter
[11:05:36] <shan> ljharb: that is correct, the Web sucks and is a clusterfuck
[11:05:43] <ljharb> shan: you're welcome to think so. i don't agree.
[11:05:44] *** Joins: tex (~super@user/dix)
[11:05:53] <wroathe> ashnur: People do tend to follow the herd
[11:06:00] <ashnur> ljharb only agrees with the majority if the majority is correct :D
[11:06:06] <ljharb> following the herd is how evolution works.
[11:06:15] <ashnur> but obviously the majority is never incorrect when ljharb agrees with the majority :D
[11:06:27] <theskillwithin> we somehow slid into a new topic, instead of talking about the original one in detail.  the original one seemed mostly ansilary or meta talk.  so i don't see a path to agreement here
[11:06:29] <ljharb> what delightfully circular logic
[11:06:29] *** Quits: Ampersand (~ajbura@user/ajbura) (Quit: Quit)
[11:06:47] <ashnur> ljharb, i am being sarcastic since that's how you operate often :)
[11:06:54] <wroathe> theskillwithin: Well, I did make the point at the beginning that state management was a big topic :P
[11:06:59] <wroathe> theskillwithin: Looks like I was right about that
[11:07:01] <ljharb> there is no path to agreement. ashnur has very obscure and uncommon opinions about state management, and argues about it on the internet instead of writing a blog post or making a library or something.
[11:07:20] <ljharb> wroathe: it is indeed. but the only opinions on it worth listening to tend to be the ones that *do* something about it.
[11:07:46] <ljharb> ashnur: if you think you know how to best do state management, do something that might actually convince "the herd".
[11:07:49] <ashnur> your knowledge is unquestionable ljharb, i am not taking a general stance against you, but in specific stuff you are too ignorant, and you are ignorant in a way that you wouldn't be I think in real life, only here in chat. when we talked even on the phone or in real life, I never had this frustration :)
[11:08:24] <ashnur> ljharb, i am thinking about writing something, but right now i need to be looking for work :( so can't do anything else
[11:08:33] <ljharb> perhaps consider that you also, on the internet, might make the sort of statements you'd never dare to make on another medium
[11:08:33] <ashnur> writing something proper, like not just a blogpost
[11:08:37] <theskillwithin> for me, i like to find out EXACTLY where i disagree with someone in brutal detail.  clarity > agreement.  but no hope of this occuring here i feel like
[11:08:53] <wroathe> ashnur: Step 1. When looking for work: Just repeat what the current trend is back to the interviewers
[11:09:03] *** Quits: g00fy (~g00fy@user/g00fy) (Read error: Connection reset by peer)
[11:09:28] *** Joins: g00fy (~g00fy@user/g00fy)
[11:09:39] <wroathe> theskillwithin: Well, it's possible just to agree to disagree
[11:09:43] <ashnur> ljharb, that's not true of me, i say the same things in real life :) not that everyone likes me for it, but that's what we heterodox thinkers call "the skin in the game", i need people's earnest feedback, even if it's negative, I can't get it if I say what you or they or anyone wants to hear.
[11:10:11] <wroathe> theskillwithin: I think I've made my point about what I prefer, and I'm not really looking for feedback on that. I sense that that's the same for you, and that's ok! We can have our opinions and disagree.
[11:10:11] <theskillwithin> wroathe its also possible if we got into more details, we might find we agree more than we disagree. who knows
[11:10:30] <ashnur> ljharb, there is a whole programming language that is built on this idea though, why should I do anything?
[11:11:07] <wroathe> theskillwithin: To me, using Redux on the job, and then learning Haskell over the last couple of years has been a revelation in how I think about program state
[11:11:11] *** Joins: Buttercat (~Buttercat@user/buttercat)
[11:11:17] <wroathe> I'm sure I'll be on to the next thing a few years from now
[11:11:24] <ljharb> ashnur: one that matters?
[11:11:29] <ljharb> ashnur: most languages don't matter.
[11:11:35] <wroathe> Several years ago I thought everything about how Java operated was manna from heaven
[11:11:39] <ljharb> oof
[11:11:46] <wroathe> Totally bought in to the whole gang of four design patterns thing
[11:11:47] <ljharb> talk about stockholm syndrome
[11:12:02] *** Joins: summersault (~summersau@179.221.251.16)
[11:12:51] <wroathe> And over the last decade I've worked on some large applications with a variety of approaches to managing state and layering code, and my personal strongly held opinion is that keeping logic and state in the view layer leads to nothing but maintenance hell as the application grows
[11:13:22] <ljharb> my view is that thinking in terms of "the view layer" - ie, mvc - is the problem
[11:13:27] <ljharb> MVC is a terrible pattern for the web
[11:14:02] <theskillwithin> on new projects, I don't even reach for redux anymore most of the time
[11:14:50] <theskillwithin> i used to do this fancy write custom middleware for api's in redux and all the stuff.  but really its not needed for most things
[11:15:42] <ashnur> ljharb, ok, even if I agree that most languages don't matter, isn't this somehow a big switch in subject again? you were saying i should educate the masses, i was saying that's not how it works, obviously people could use already existing perfectly fine tools that many other people already use, the reason they are not doing it is not lack of information.
[11:16:24] <ljharb> ashnur: i'm saying that if you care about your opinion you would in fact try to educate the masses, yes
[11:16:34] <ljharb> ashnur: if it's because of lack of information, fix that
[11:16:40] <ljharb> ranting on irc won't accomplish that tho
[11:17:02] <ashnur> i care about your opinion :)
[11:17:04] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[11:17:20] <ashnur> i agree fully that ranting on irc is not helping :|
[11:17:33] <ashnur> been doing less of it lately though
[11:18:38] <ashnur> btw ljharb what people use is mostly due to anachronistic processes
[11:18:40] <theskillwithin> also even tho all of you are really smart in my opinion.  it was a convo that lead to nowhere somehow
[11:19:08] <ashnur> so if anyone wants to influence that, they have to influence the context people live in "over a long period of time"
[11:19:33] <ashnur> education should not be about influencing what people do, it should be about what people can choose to do
[11:20:14] <ashnur> theskillwithin, just because you felt lost and distant, doesn't mean that everyone had the same experience
[11:20:33] <wroathe> I'm feeling pretty good about this conversation overall
[11:21:36] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[11:23:07] <wroathe> Incidentally the single context object thing is how I prefer to write C code too
[11:23:16] <wroathe> But anyways, time for bed
[11:23:36] <theskillwithin> I don't believe we got to the crux of the matter, but if ur happy im happy
[11:24:12] <wroathe> theskillwithin: The crux of the matter is that state management is a large topic where lots of people have different approaches and strongly held beliefs about what works and what doesn't
[11:24:33] <theskillwithin> lets end on that note then
[11:24:48] *** Joins: itok (sid418430@id-418430.charlton.irccloud.com)
[11:25:46] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[11:32:01] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[11:33:40] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 245 seconds)
[11:34:42] *** Quits: Liblx (~Alex@190-2-132-198.hosted-by-worldstream.net) (Quit: WeeChat 3.1)
[11:39:09] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[11:46:11] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 245 seconds)
[11:52:24] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[11:58:41] *** Joins: summersault (~summersau@179.221.251.16)
[12:00:44] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[12:04:09] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:05:18] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 272 seconds)
[12:11:44] *** Joins: makara (~sol@196.223.138.9)
[12:12:42] *** Quits: amahl (~amahl@dxv5skyhc49fswhfjlcpy-3.rev.dnainternet.fi) (Remote host closed the connection)
[12:12:46] *** Joins: peteyboy1 (~peteyboy1@95.169.229.12)
[12:20:36] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[12:21:03] *** Joins: Dorward_ (~dorward@daviddorward.plus.com)
[12:21:35] *** Quits: Dorward (~dorward@daviddorward.plus.com) (Ping timeout: 245 seconds)
[12:22:29] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[12:26:59] *** Joins: Booster2ooo (~Booster2o@host-213-189-163-54.dynamic.voo.be)
[12:27:06] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[12:27:27] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[12:28:48] *** Joins: vdthi (~vdthi@dynamic-078-054-066-106.78.54.pool.telefonica.de)
[12:29:45] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[12:35:03] *** Joins: silly (~silly@user/silly)
[12:36:54] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 252 seconds)
[12:37:39] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:40:34] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[12:44:03] *** Quits: makara (~sol@196.223.138.9) (Ping timeout: 252 seconds)
[12:46:06] *** Quits: Buttercat (~Buttercat@user/buttercat) (Quit: Leaving.)
[12:50:49] *** Joins: summersault (~summersau@179.221.251.16)
[12:53:08] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[12:55:20] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 245 seconds)
[13:01:35] *** Joins: silly_ (~silly@user/silly)
[13:03:02] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[13:03:36] *** Joins: sillyslux__ (~silly@user/silly)
[13:05:27] *** Quits: silly (~silly@user/silly) (Ping timeout: 272 seconds)
[13:07:21] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 272 seconds)
[13:07:23] *** Joins: summersault (~summersau@179.221.251.16)
[13:08:45] *** Quits: kmh (~kmh@p200300df5f2f6b00b05a0be1bb89517c.dip0.t-ipconnect.de) (Quit: Leaving)
[13:10:01] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:12:55] *** Joins: subzidion (~subzidion@2604:4080:1367:8040:d7d:1ecd:ef29:20a4)
[13:14:13] *** Joins: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[13:16:35] <subzidion> I'm really struggling to understand mocking with Jest. I am building a module that calls an API and then processes the data. Trying to develop a test where I mock the response from the API, but ensure that the data processing is what I expect, but my Mocks aren't set up correctly and it's making the legit API call during every test. Does anyone have an example where they mock fetch that works
[13:16:37] <subzidion> when you import a module?
[13:17:08] *** Joins: kmh (~kmh@p200300df5f2f6b00b05a0be1bb89517c.dip0.t-ipconnect.de)
[13:19:30] *** Quits: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[13:19:31] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 245 seconds)
[13:21:20] *** Joins: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[13:25:51] *** Quits: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[13:27:07] *** Joins: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[13:32:03] *** Quits: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 272 seconds)
[13:32:53] *** Joins: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[13:33:06] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[13:38:23] *** Quits: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 272 seconds)
[13:41:08] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:44:53] *** Quits: subzidion (~subzidion@2604:4080:1367:8040:d7d:1ecd:ef29:20a4) (Quit: WeeChat 3.1)
[13:45:39] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 252 seconds)
[13:46:41] *** Joins: silly_ (~silly@user/silly)
[13:49:05] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 245 seconds)
[13:50:25] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 272 seconds)
[13:53:56] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[13:58:40] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 272 seconds)
[13:59:55] *** Quits: fiend (~friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 272 seconds)
[14:03:07] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[14:03:07] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[14:03:07] *** Joins: Heraes (~Heraes@user/romarain)
[14:06:46] *** Joins: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net)
[14:13:12] *** Joins: summersault (~summersau@179.221.251.16)
[14:18:20] *** Joins: federico (~federico@151.51.89.77)
[14:21:08] *** Joins: sillyslux__ (~silly@user/silly)
[14:21:15] *** federico is now known as Guest4058
[14:21:29] *** Joins: ssss (~ssss@95.111.44.7)
[14:24:11] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[14:26:20] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[14:30:30] *** Quits: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[14:30:30] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[14:31:20] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[14:32:14] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[14:36:50] *** Quits: Guest3240 (~willpitte@2001:470:69fc:105::1bf) (Quit: Reconnecting)
[14:37:09] *** Joins: Guest3240 (~willpitte@2001:470:69fc:105::1bf)
[14:46:47] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 272 seconds)
[14:47:51] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[14:48:03] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[14:52:09] *** Quits: Guest3240 (~willpitte@2001:470:69fc:105::1bf) (Quit: Reconnecting)
[14:52:27] *** Joins: Guest3240 (~willpitte@2001:470:69fc:105::1bf)
[14:55:23] *** Joins: entuland (~entuland@user/entuland)
[15:00:16] *** Joins: summersault (~summersau@179.221.251.16)
[15:05:16] *** Quits: Guest3240 (~willpitte@2001:470:69fc:105::1bf) (Quit: Reconnecting)
[15:05:32] *** Joins: Guest3240 (~willpitte@2001:470:69fc:105::1bf)
[15:08:17] *** Guest3240 is now known as WillPittenger
[15:08:35] *** Joins: tccki_ (~tccki@box.webslate.co.nz)
[15:10:30] *** Quits: tccki (~tccki@2406:e001:2:5a00:250:56ff:fe9e:8795) (Ping timeout: 264 seconds)
[15:10:31] *** tccki_ is now known as tccki
[15:14:25] *** Joins: dan01 (~dan01@2a02:2f09:3718:9700:b007:3f60:f787:4ccd)
[15:22:23] *** Joins: Crassus (~Crassus@user/crassus)
[15:23:07] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[15:23:42] *** Joins: mickey (~user@user/mickey)
[15:28:29] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[15:29:11] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[15:35:55] *** Quits: dreamreal (~joeo@user/dreamreal) (Quit: WeeChat 3.1)
[15:36:16] *** Joins: dreamreal (~joeo@user/dreamreal)
[15:39:30] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 252 seconds)
[15:43:15] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 245 seconds)
[15:43:24] *** Joins: MJCD (uid193337@user/mjcd)
[15:43:41] <MJCD> holla
[15:43:52] <MJCD> what's a fair price to pay per linkedin skill endorsement?
[15:44:13] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[15:44:19] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[15:44:20] <MJCD> I mean obviously it's a trivial activity, but especially if I want them from real people/accounts then there's a "cost for abstracted liability"
[15:44:31] <MJCD> ie they have no idea if I can/cannot do the thing
[15:45:54] <mickey> ask your friends.
[15:46:12] *** Jigsy` is now known as Jigsy
[15:46:21] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[15:46:47] *** Joins: straykitten (~straykitt@subs24-116-206-8-29.three.co.id)
[15:47:23] <MJCD> oh I will but i'm talking... scale lol
[15:47:34] <MJCD> and whether I should or not isn't really relevant
[15:49:19] *** Joins: fef (~thedawn@user/thedawn)
[15:53:50] <hassoon> 'morning
[16:05:45] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 264 seconds)
[16:07:35] *** Joins: summersault (~summersau@179.221.251.16)
[16:09:11] <entuland> o/
[16:19:21] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[16:19:32] <MJCD> holla hassoon, entuland
[16:19:57] *** Joins: zebrag (~chris@user/zebrag)
[16:20:45] *** Joins: pizdets (~pizdets@183.182.115.196)
[16:21:05] *** Joins: Deide (~Deide@user/deide)
[16:22:22] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[16:23:16] *** Joins: fef (~thedawn@user/thedawn)
[16:28:23] <entuland> yo
[16:28:25] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[16:30:33] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[16:32:50] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 245 seconds)
[16:34:16] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[16:35:11] *** Joins: earendel (uid498179@user/earendel)
[16:38:33] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[16:40:47] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 272 seconds)
[16:42:19] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:44:53] *** Joins: Akimb (~Akimb@86.100.13.100)
[16:45:24] *** Quits: Booster2ooo (~Booster2o@host-213-189-163-54.dynamic.voo.be) (Read error: Connection reset by peer)
[16:46:38] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[16:46:56] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[16:47:09] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 264 seconds)
[16:49:21] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[16:49:38] *** Joins: P1RATEZ (piratez@user/p1ratez)
[16:53:44] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Quit: leaving)
[16:55:02] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[16:58:32] *** Quits: vdthi (~vdthi@dynamic-078-054-066-106.78.54.pool.telefonica.de) (Ping timeout: 272 seconds)
[17:05:51] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[17:12:31] *** Joins: dix (~super@user/dix)
[17:14:05] *** Quits: tex (~super@user/dix) (Ping timeout: 245 seconds)
[17:14:46] *** Joins: tex (~super@user/dix)
[17:16:22] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[17:16:35] *** Joins: summersault (~summersau@179.221.251.16)
[17:18:10] *** Quits: dix (~super@user/dix) (Ping timeout: 272 seconds)
[17:21:13] *** Joins: dix (~super@user/dix)
[17:21:15] *** Quits: deltab (~deltab@95.154.230.49) (Ping timeout: 252 seconds)
[17:21:29] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[17:22:18] *** Joins: deltab (~deltab@95.154.230.49)
[17:22:33] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 264 seconds)
[17:22:44] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[17:22:55] *** Joins: dix_ (~super@user/dix)
[17:23:45] *** Quits: tex (~super@user/dix) (Ping timeout: 264 seconds)
[17:24:32] *** Jigsy` is now known as Jigsy
[17:25:45] *** Quits: dix (~super@user/dix) (Ping timeout: 245 seconds)
[17:28:33] *** Quits: straykitten (~straykitt@subs24-116-206-8-29.three.co.id) (Ping timeout: 264 seconds)
[17:32:35] *** Quits: jazzy (~jaziz@2600:380:4547:d128:788a:9261:efcd:4642) (Ping timeout: 272 seconds)
[17:35:33] *** Quits: ssss (~ssss@95.111.44.7) (Ping timeout: 252 seconds)
[17:37:28] *** Joins: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[17:41:19] *** Joins: straykitten (~straykitt@subs25-116-206-9-54.three.co.id)
[17:43:46] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:45:13] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:46:36] *** Quits: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[17:49:11] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 272 seconds)
[17:50:21] *** Quits: DigDug (~nocaps@ool-182dff22.dyn.optonline.net) (Ping timeout: 245 seconds)
[17:50:56] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:64ef:945a:d61f:344)
[17:52:20] *** Joins: DigDug (~nocaps@ool-182dff22.dyn.optonline.net)
[17:55:45] *** Quits: deltab (~deltab@95.154.230.49) (Ping timeout: 245 seconds)
[17:58:41] *** Quits: DigDug (~nocaps@ool-182dff22.dyn.optonline.net) (Ping timeout: 245 seconds)
[17:59:33] <ashnur> MJCD, i would never pay for an endorsement
[17:59:41] <ashnur> even the idea
[17:59:45] *** Quits: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 264 seconds)
[18:00:27] <MJCD> >and whether I should or not isn't really relevant
[18:00:30] <MJCD> ;p
[18:01:11] *** Joins: summersault (~summersau@179.221.251.16)
[18:01:30] *** Quits: MJCD (uid193337@user/mjcd) ()
[18:02:00] <ashnur> who talks about should? i am not australian
[18:02:02] *** Quits: dan01 (~dan01@2a02:2f09:3718:9700:b007:3f60:f787:4ccd) (Ping timeout: 252 seconds)
[18:02:15] <ashnur> i am saying that i would laugh at anyone offering such a service, even for free
[18:03:12] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:64ef:945a:d61f:344) (Quit: WeeChat 3.2)
[18:03:41] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[18:06:16] *** Joins: deltab (~deltab@95.154.230.49)
[18:07:13] *** LSD is now known as acidsys
[18:08:49] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 272 seconds)
[18:10:32] *** Joins: dan01 (~dan01@2a02:2f09:3718:9700:b007:3f60:f787:4ccd)
[18:11:09] <earendel> would you adjust anything for an endorsement?
[18:11:47] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:f8d6:632e:e88e:c51f)
[18:13:59] <earendel> lol
[18:15:13] <earendel> free endoresements.
[18:25:44] *** Joins: DigDug (~nocaps@ool-182dff22.dyn.optonline.net)
[18:29:12] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[18:33:57] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 264 seconds)
[18:34:30] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 245 seconds)
[18:36:57] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[18:39:16] *** Joins: Crassus (~Crassus@user/crassus)
[18:43:13] *** Joins: ferdna (~ferdna@user/ferdna)
[18:46:23] *** Quits: dix_ (~super@user/dix) (Read error: Connection reset by peer)
[18:48:34] *** Joins: Guest78 (~Guest78@ool-4a58c4f3.dyn.optonline.net)
[18:48:35] *** Joins: summersault (~summersau@179.221.251.16)
[18:50:33] <ashnur> yeah, obviously the people implementing the endorsement system do not know or care about Goodhart's law
[18:51:28] *** Quits: Guest78 (~Guest78@ool-4a58c4f3.dyn.optonline.net) (Quit: Client closed)
[18:52:50] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 245 seconds)
[19:06:57] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 264 seconds)
[19:07:10] *** Joins: retsi (~retsi@45.227.79.60)
[19:07:13] *** Joins: summersault (~summersau@179.221.251.16)
[19:13:33] *** Joins: onizu (uid373383@id-373383.highgate.irccloud.com)
[19:14:39] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[19:16:44] *** Joins: pavonia (~user@user/siracusa)
[19:17:42] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Read error: Connection reset by peer)
[19:19:16] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[19:19:16] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[19:19:16] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[19:27:43] *** Joins: thiras (~thiras@user/thiras)
[19:28:33] *** Quits: straykitten (~straykitt@subs25-116-206-9-54.three.co.id) (Ping timeout: 264 seconds)
[19:29:15] *** Joins: benjamin1 (benjamin1@gateway/vpn/airvpn/benjamin1)
[19:30:20] *** Joins: ef (~thedawn@user/thedawn)
[19:30:45] *** ef is now known as Guest1368
[19:32:10] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[19:33:04] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 252 seconds)
[19:34:04] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: leaving)
[19:34:16] *** Joins: thiras (~thiras@user/thiras)
[19:41:13] *** Joins: straykitten (~straykitt@subs25-116-206-9-8.three.co.id)
[19:42:32] *** Quits: straykitten (~straykitt@subs25-116-206-9-8.three.co.id) (Client Quit)
[19:45:43] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 272 seconds)
[19:46:28] *** Guest1368 is now known as feef
[19:47:22] *** feef is now known as keyboard
[19:47:29] *** keyboard is now known as keyboards
[19:48:23] *** Joins: jenhsun (uid342237@id-342237.stonehaven.irccloud.com)
[19:49:40] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[19:49:59] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[19:53:47] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[20:00:13] *** Quits: jenhsun (uid342237@id-342237.stonehaven.irccloud.com) ()
[20:10:51] *** Joins: iridescent (~iridescen@41337027.cst.lightpath.net)
[20:15:49] *** Joins: Guest9 (~Guest9@103.240.169.98)
[20:18:30] *** Joins: tex (~super@user/dix)
[20:19:17] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:20:16] *** Joins: summersault (~summersau@179.221.251.16)
[20:29:02] *** Joins: eck0__ (~Android@047-007-119-133.res.spectrum.com)
[20:30:19] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[20:30:22] *** Joins: eck0___ (~Android@mobile-166-173-62-237.mycingular.net)
[20:30:42] *** Quits: Guest9 (~Guest9@103.240.169.98) (Ping timeout: 272 seconds)
[20:30:46] *** Quits: eck0_ (~Android@047-007-119-133.res.spectrum.com) (Ping timeout: 245 seconds)
[20:31:33] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 252 seconds)
[20:33:45] *** Quits: eck0__ (~Android@047-007-119-133.res.spectrum.com) (Ping timeout: 252 seconds)
[20:35:07] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[20:36:23] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 272 seconds)
[20:39:21] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:49:30] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 245 seconds)
[20:50:06] *** Joins: Betal (~Beta@user/betal)
[20:52:33] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[20:55:37] <quesker> I can't remove this 'focus' class no matter what I try      https://codepen.io/vee5Aic2/pen/XWMyMEe
[20:57:06] <GreenJello> quesker, nothing here has a class named 'focus'
[20:57:18] <quesker> click the button and it will get one
[20:57:22] <quesker> either button
[20:58:02] <quesker> it will also get an 'active' class but the toggle removes it just fine
[20:58:36] *** Joins: Guest9 (~Guest9@103.240.169.98)
[20:59:07] <GreenJello> so probably a timing issue with whatever is adding the class
[20:59:29] <quesker> ah yeah.  so how can I delay until after that?
[20:59:44] <GreenJello> depends on the other code
[21:00:36] <quesker> is there something like onClassChange   where I could deal with it then?
[21:00:48] <GreenJello> mutation observers
[21:02:12] <quesker> ok I will try to figure that out thanks
[21:03:43] <entuland> a simple timeout can take care of that
[21:03:46] *** Joins: summersault (~summersau@179.221.251.16)
[21:04:45] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[21:04:50] <quesker> seems like whenever I try to learn some new stuff I immediately find the limitations
[21:04:56] <systemfault> Can't you just use CSS?
[21:05:05] <systemfault> What's the point of using JS for that?
[21:05:17] *** Joins: Rockwood (~Rocky@42.105.85.220)
[21:05:38] <entuland> I suspect they're fighting against bootstrap or jquery there
[21:05:59] <quesker> I don't know any css, I was trying to use bootstrap to style this radio.  but it leaves this annoying focus border on a radio that I'm using as more of a button than a radio
[21:06:01] <Rockwood> entuland, hi
[21:06:10] <Rockwood> h r u? bro
[21:06:24] <Rockwood> i know php every well
[21:06:42] <entuland> I hate codepen cause doesn't let you fork or share unless you're registered
[21:06:44] <Rockwood> but JS always confusing
[21:07:39] <quesker> the only reason I used codepen and I agree it is annoying is because it was in the /topic for #bootstrap
[21:07:58] <entuland> alter the last line to become this: https://bpa.st/M24Q
[21:08:06] <Rockwood> BT is down thing :P
[21:08:15] <quesker> thanks
[21:08:28] <entuland> not sure if that self thing is necessary, just making sure cause "this" is prone to being redefined in the callback
[21:08:36] *** Joins: makara (~sol@196.61.111.63)
[21:08:37] <Rockwood> quesker, don't pick dead ends :D
[21:08:57] <quesker> Rockwood:  I am putting you on ignore, nothing you say makes sense, sorry
[21:09:05] <wroathe> quesker: Yeah, that's button.js from bootstrap doing that
[21:09:21] <wroathe> quesker: They bind a focusin handler that uses jquery to toggle that class
[21:09:44] <Rockwood> your code also waste
[21:10:41] <Rockwood> query is ghost :D
[21:10:45] <systemfault> May be a good idea to just learn CSS...
[21:10:47] <Rockwood> jquery is ghost :D
[21:10:52] <wroathe> quesker: https://github.com/twbs/bootstrap/blob/v3.4.1/js/button.js#L122
[21:10:52] <systemfault> You'd just write... .btn-outline-secondary.focus, .btn-outline-secondary:focus {box-shadow: none; } ?
[21:11:07] <wroathe> Or just don't include the bootstrap JS if you don't need it
[21:11:11] <Rockwood> lol
[21:11:20] <Rockwood> i am going to sleep now
[21:11:38] <Rockwood> i drunk full day on Sunday
[21:11:48] <Rockwood> so i am tried and gn
[21:12:26] *** Quits: Rockwood (~Rocky@42.105.85.220) (Quit: The Time is Over)
[21:12:59] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[21:13:08] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 272 seconds)
[21:13:09] *** Quits: DigDug (~nocaps@ool-182dff22.dyn.optonline.net) (Remote host closed the connection)
[21:15:12] <quesker> can I use that to override whatever css they are doing for that focus border?  I don't want it anywhere
[21:16:09] *** Joins: dyslexic1t (~dyslexica@ymir.whatbox.ca)
[21:16:28] <quesker> yeah that seems to
[21:16:55] <quesker> thanks
[21:19:33] <wroathe> quesker: Do you want that focus class there?
[21:19:53] <wroathe> quesker: There's an easy way to remove it if you need to have the bootstrap js for whatever reason
[21:21:22] *** Quits: peteyboy1 (~peteyboy1@95.169.229.12) (Ping timeout: 272 seconds)
[21:22:09] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 252 seconds)
[21:22:16] <quesker> that css seems like the easiest fix
[21:22:24] <wroathe> $(document).on('focusin', '.btn', e => $(e.target).removeClass('focus'));
[21:22:30] <wroathe> Something like this should do it, but I haven't tested
[21:22:44] <quesker> ok I can try it out
[21:22:46] <wroathe> quesker: Also, do you actually _want_ the bootstrap Javascript?
[21:23:13] <wroathe> I think most people just use bootstrap for it's CSS only. It's a rare thing indeed to see someone use their javascript.
[21:23:18] <quesker> well the rest of the styling seems ok, and the rest of the js makes the other radio I have keep the choice a different color
[21:23:34] <quesker> hmm interesting
[21:25:16] <quesker> well then I would have to do something to set the class to show the selected radio.  I can do it but seems like extra work.  but if you suggest removing their js altogether I can try it and see how it goes
[21:25:49] <wroathe> I think that would be better, otherwise you'd be including a large-ish javascript library just for one feature that should only take a few lines of code
[21:26:37] *** Quits: dan01 (~dan01@2a02:2f09:3718:9700:b007:3f60:f787:4ccd) (Quit: Leaving)
[21:26:44] <quesker> ok
[21:26:44] <wroathe> 15.3 kB of Javascript according to my network panel
[21:27:15] <wroathe> Unless you've got other needs of the bootstrap JS? If this is part of something larger that needs more of it's features then it might be ok to keep it
[21:27:29] <wroathe> But yeah if it's only one small thing I'd skip it and do it myself
[21:27:44] <quesker> well all this work learning jquery/redis/flask/bootstrap/etc and I will be the only user   :)
[21:28:04] <wroathe> Unless you need it for work jquery really isn't worth learning anymore
[21:28:12] <wroathe> The rest are
[21:28:27] <wroathe> Although you're using an old version of Bootstrap in this paste. Bootstrap 5 is radically different.
[21:28:31] <quesker> so write plain js instead?
[21:28:58] <wroathe> in 98% of cases there are plain DOM equivalents to what JS provides
[21:29:02] <wroathe> err to what jquery provides
[21:29:10] <quesker> the flask-bootstrap is 4 I think
[21:29:37] <wroathe> But again, if you're part of a team that have made the decision to use jquery then there's not much you can do about that
[21:29:46] <wroathe> But if you're just learning it because someone said it would be worth learning, don't bother
[21:29:56] <quesker> no I don't do front end, this is just for fun and a personal project
[21:30:57] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:31:08] <wroathe> Hrm, there's this
[21:31:15] <wroathe> "You might not need jquery" site
[21:31:19] <wroathe> That has grown out of date
[21:31:31] <wroathe> They're still making the assumption that you need to support old IE
[21:32:54] <wroathe> quesker: Anyway: https://developer.mozilla.org/en-US/docs/Web/API/Element#methods
[21:33:03] <quesker> thanks
[21:33:25] <wroathe> quesker: querySelector/All give you most of what you like about $()
[21:33:54] <wroathe> quesker: .addEventListener instead of .on
[21:34:05] <wroathe> quesker: .matches for event delegation
[21:34:19] <quesker> ok hopefully the ajax is not too much harder
[21:34:44] <wroathe> quesker: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
[21:35:24] <wroathe> quesker: And don't forget to decide what browsers you intend to support and consult https://caniuse.com as you try out new browser features
[21:35:47] <quesker> ok
[21:37:28] *** Quits: benjamin1 (benjamin1@gateway/vpn/airvpn/benjamin1) (Quit: Leaving)
[21:41:07] <wroathe> quesker: There's a lot of history to unpack with jquery, but back around 2010 web API standardization wasn't nearly as organized as it is today, and older versions of IE were still in heavy use by users that didn't follow all of the web standards and in some instances had their own proprietary alternatives, and they were fighting with Chrome, Safari, Opera, and Firefox for market share. Because all of
[21:41:13] <wroathe> these browsers had varying degrees of standard compliance in many instances there weren't standard APIs a web programmer could rely on that would function correctly in all of the browsers. jQuery came along and provided an abstraction layer that "normalized" most of the common APIs people needed, and they handled browser compatibility behind the scenes
[21:41:28] *** Joins: dan01 (~dan01@2a02:2f09:3718:9700:ad93:1f1f:fb82:d901)
[21:41:28] <wroathe> quesker: So back around 2010 jQuery was essentially vital. JS was pretty much synonymous with it.
[21:41:53] <wroathe> quesker: But browser standard compliance has evolved leaps and bounds over the last decade, and now jQuery no longer has any heavy lifting to do in that area
[21:42:04] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[21:42:54] <quesker> ok.  I will dump it
[21:43:29] *** Quits: iridescent (~iridescen@41337027.cst.lightpath.net) (Quit: Client closed)
[21:44:01] <systemfault> Event delegation sucks without jQuery.... it's the only thing left that it does well
[21:44:18] <wroathe> systemfault: It's trivial to do without jquery
[21:44:18] <quesker> when I first made that codepen I didn't realize it could do jquery so I had converted everything to js but then when I saw how to enable jquery I put it all back
[21:44:37] *** Quits: happymeal (~happymeal@user/happymeal) (Read error: Connection reset by peer)
[21:44:38] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[21:44:56] <systemfault> wroathe: I'm pretty sure it's not.
[21:44:56] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[21:45:12] *** Joins: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[21:45:15] <wroathe> const matches = (sel, fn) => e => e.target.matches(sel) && fn(e); document.addEventListener('click', matches('.btn', e => ...));
[21:45:18] <wroathe> systemfault: ^
[21:45:44] <systemfault> wroathe: If you add a <span> in your button, it fails.
[21:45:56] <wroathe> systemfault: Huh?
[21:45:59] <wroathe> systemfault: How so?
[21:46:14] <systemfault> wroathe: Because e.target will be the span,  and won't match .btn
[21:46:32] <wroathe> systemfault: Oh, if you want that behavior you can use .closest instead of .matches
[21:46:38] <wroathe> Depends on how you define event delegation
[21:46:42] <systemfault> No, that's BS.
[21:46:47] <wroathe> Huh?
[21:46:54] <systemfault> There's "one way" if you use jQuery
[21:47:02] <systemfault> And it works in all cases.
[21:47:06] <systemfault> DOM should have the same.
[21:47:07] <wroathe> What about this doesn't work?
[21:47:37] <wroathe> const matches = (sel, fn) => e => e.target.closest(sel) && fn(e); document.addEventListener('click', matches('.btn', e => ...));
[21:47:38] <systemfault> I imagine that it could work with closest...
[21:47:52] <wroathe> It does. I've done it both ways.
[21:47:56] *** Joins: Booster2ooo (~Booster2o@host-213-189-163-54.dynamic.voo.be)
[21:48:13] <systemfault> But how do you get the actual node that matched?
[21:48:14] <GreenJello> if you changed it to use closest and pass the result of closest to the function, it would be fine
[21:48:49] <wroathe> systemfault: Attach the result of closest to the event object before calling fn
[21:49:27] <systemfault> wroathe: With jQuery, I use .on(eventName, selector, ....) no matter the scenario
[21:49:39] *** Quits: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[21:49:39] <systemfault> It works every time, the way I expect.
[21:49:46] <systemfault> No variation to remember.
[21:49:48] <wroathe> systemfault: The above works exactly the same. You could even define "on" if it makes you happy
[21:50:40] *** Joins: summersault (~summersau@179.221.251.16)
[21:50:53] <systemfault> IT👏SHOULD👏BE👏BUILTIN👏
[21:51:16] <wroathe> :/
[21:54:55] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 245 seconds)
[21:56:15] <wroathe> Side note, what does the clapping emoji mean here?
[21:56:45] *** Quits: dyslexic1t (~dyslexica@ymir.whatbox.ca) (Ping timeout: 264 seconds)
[21:56:52] <acagastya> Some sort of twitter meme.
[21:57:06] <acagastya> If you feel it should be built-in -- raise an issue, submit a PR.
[21:57:23] <wroathe> 100% they just share a one liner like I've done here and tell you it already exists
[21:57:28] *** fjmorazan_ is now known as fjmorazan
[22:00:27] <wroathe> systemfault: https://gist.github.com/JustinChristensen/652bedadc92cf0aff86cc5fbcde87732 this should get you where you wanna go
[22:00:39] <wroathe> systemfault: Granted, it's not built-in, but it's pretty dang simple
[22:01:27] <wroathe> (untested, YMMV)
[22:01:37] *** Joins: Buttercat (~Buttercat@user/buttercat)
[22:03:41] <wroathe> Actually, I just simplified it. Two two-liners.
[22:04:21] <hassoon> ^ 2 * 2 = 4 lines
[22:05:59] *** Joins: alystair (~alystair@user/alystair)
[22:07:47] *** Joins: summersault (~summersau@179.221.251.16)
[22:08:12] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:08:20] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[22:08:24] *** Joins: summersault (~summersau@179.221.251.16)
[22:10:08] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[22:12:03] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 272 seconds)
[22:12:28] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Remote host closed the connection)
[22:13:01] *** Joins: \mSg (~mSg@user/msg/x-0285936)
[22:16:17] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[22:26:10] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[22:30:46] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[22:35:20] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 245 seconds)
[22:35:40] *** Quits: keyboards (~thedawn@user/thedawn) (Ping timeout: 252 seconds)
[22:43:22] *** Quits: Guest9 (~Guest9@103.240.169.98) (Quit: Connection closed)
[22:44:39] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[22:57:46] *** Quits: dan01 (~dan01@2a02:2f09:3718:9700:ad93:1f1f:fb82:d901) (Quit: Leaving)
[22:57:50] *** Joins: subzidion (~subzidion@2604:4080:1367:8040:d7d:1ecd:ef29:20a4)
[22:58:04] *** Quits: P1RATEZ (piratez@user/p1ratez) ()
[22:58:44] <subzidion> Does anyone have an example jest test mocking fetch when you do a module import?
[23:10:40] <systemfault> RIP, Freenode just banned IRCCloud.
[23:12:24] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[23:12:37] *** Joins: Akimb (~Akimb@86.100.13.100)
[23:13:15] <systemfault> https://twitter.com/IRCCloud/status/1404141642798583814
[23:16:47] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:5d20:8abb:c69e:4e8f)
[23:22:24] <Donitz> finished another pure js game
[23:22:26] <Donitz> https://donitz.itch.io/boundscape
[23:23:01] <Donitz> made 100% with canvas primitives
[23:24:11] <acagastya> Donitz: will checkout first thing in the morning.
[23:24:20] <Donitz> danke :)
[23:24:35] <Donitz> there were 6000 entries to the gmtk game jam
[23:24:42] <Donitz> imagine 6000 new games being uploaded at once
[23:24:49] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[23:26:25] *** Quits: Buttercat (~Buttercat@user/buttercat) (Quit: Leaving.)
[23:27:34] *** Quits: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net) (Quit: Client closed)
[23:29:12] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[23:29:44] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[23:29:58] *** Parts: subzidion (~subzidion@2604:4080:1367:8040:d7d:1ecd:ef29:20a4) (WeeChat 3.1)
[23:30:31] <entuland> nice job, Donitz - just too tough for me at the level with the dots becoming spiky suns :P
[23:30:39] <entuland> gave up
[23:30:57] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[23:33:23] *** Joins: summersault (~summersau@179.221.251.16)
[23:34:12] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[23:40:50] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:5d20:8abb:c69e:4e8f) (Read error: Connection reset by peer)
[23:41:26] *** Joins: fbandov (~fbandov@ip5f5bd179.dynamic.kabel-deutschland.de)
[23:41:55] *** Joins: ferdna (~ferdna@user/ferdna)
[23:43:14] *** Quits: doc|home (~doc@user/doc) (Remote host closed the connection)
[23:43:21] *** Joins: mexen (uid495612@user/mexen)
[23:43:29] *** Joins: Celphi_ (sid97751@id-97751.brockwell.irccloud.com)
[23:43:54] *** Joins: doc (~doc@user/doc)
[23:49:56] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 245 seconds)
[23:50:53] *** Quits: fbandov (~fbandov@ip5f5bd179.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:50:55] <Donitz> thank you entuland
[23:51:01] <Donitz> yeah, that level was a bit hard
[23:51:14] <Donitz> I taught the basics of launching yourself early to make it a bit less difficult
