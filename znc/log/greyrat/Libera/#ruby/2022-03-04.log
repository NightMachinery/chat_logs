[00:03:33] *** Joins: oxfuxxx (~oxfuxxx@104.200.132.103)
[00:07:55] *** Quits: oxfuxxx (~oxfuxxx@104.200.132.103) (Client Quit)
[00:26:49] *** Joins: HyLian_ (~meron@140.red-79-145-114.dynamicip.rima-tde.net)
[00:27:23] *** Quits: HyLian (~meron@14.red-79-145-100.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[00:33:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:39:34] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:57:57] *** Quits: TomyWork (~TomyLobo@p200300e80f158200bdaa2a965951a208.dip0.t-ipconnect.de) (Quit: Leaving)
[01:11:38] *** Joins: orbyt (~textual@c-73-152-7-164.hsd1.va.comcast.net)
[01:35:32] *** Joins: FetidToot4 (~FetidToot@user/fetidtoot)
[01:37:34] *** Quits: FetidToot (~FetidToot@user/fetidtoot) (Ping timeout: 260 seconds)
[01:39:11] *** Joins: FetidToot (~FetidToot@user/fetidtoot)
[01:39:52] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:41:02] *** Quits: FetidToot4 (~FetidToot@user/fetidtoot) (Ping timeout: 250 seconds)
[01:59:15] *** Joins: davidw (~davidw@h72-35-148-100.bendor.broadband.dynamic.tds.net)
[02:03:18] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[02:03:38] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[02:05:08] *** Joins: In0perable (~PLAYER_1@fancydata.science)
[02:05:32] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (Ping timeout: 272 seconds)
[02:06:29] *** Quits: orbyt (~textual@c-73-152-7-164.hsd1.va.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:07:39] *** Server sets mode: +nt 
[02:08:25] <ox1eef> davidw: the latter looks like a singleton class of Foo::Bar
[02:09:28] <ox1eef> looks like there's singleton_class? method you can use to distinguish between them.
[02:09:45] <davidw> ox1eef, right... so how do I tell and filter them out? Ultimate goal here is to sort through everything that's loaded and find some classes with a name like Foo::Bar::Bee::Bop - and find all the Bop classes loaded
[02:10:03] <ox1eef> with the singleton_class? method.
[02:10:56] <davidw> aha, I didn't see that one in the docs I was looking at. Perfect, thanks!
[02:11:04] <ox1eef> welcome
[02:13:54] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Quit: Leaving)
[02:30:46] <mooff> :: module Foo; module Bar; end end
[02:30:46] <ruby-eval> => nil
[02:30:50] <mooff> :: Foo::Bar
[02:30:50] <ruby-eval> => Foo::Bar
[02:30:55] <mooff> :: Foo::Bar.singleton_class
[02:30:55] <ruby-eval> => #<Class:Foo::Bar>
[02:35:56] *** Quits: ua_ (~ua@public-gprs219536.centertel.pl) (Ping timeout: 272 seconds)
[02:39:24] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8) (Ping timeout: 240 seconds)
[02:39:41] *** Joins: TCZ (~tcz@91.150.178.124)
[02:41:00] <mooff> :: class Foo::Bar::Yay end; ObjectSpace.each_object(Class).count { |c| c.name == 'Foo::Bar::Yay' }
[02:41:00] <ruby-eval> => 1
[02:42:54] <mooff> :: [Class.new, Object.new.singleton_class].all? { |c| c.name.nil? }
[02:42:54] <ruby-eval> => true
[02:48:28] *** Joins: ua_ (~ua@public-gprs266162.centertel.pl)
[02:59:15] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:02:52] *** Quits: hololeap (~hololeap@user/hololeap) (Excess Flood)
[03:04:17] *** Joins: hololeap (~hololeap@user/hololeap)
[03:06:20] *** Quits: davidw (~davidw@h72-35-148-100.bendor.broadband.dynamic.tds.net) (Ping timeout: 272 seconds)
[03:08:11] *** Quits: ua_ (~ua@public-gprs266162.centertel.pl) (Ping timeout: 256 seconds)
[03:17:29] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Remote host closed the connection)
[03:19:51] *** Joins: ua_ (~ua@public-gprs219536.centertel.pl)
[03:48:12] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8)
[03:51:54] *** Quits: Guest3952 (~vit@chello085216193138.chello.sk) (Ping timeout: 250 seconds)
[03:55:57] *** Joins: weaksauc_ (~textual@ip68-5-101-101.oc.oc.cox.net)
[03:58:53] *** Quits: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net) (Ping timeout: 256 seconds)
[04:26:26] <adam12> mooff: Sometimes I like the module builder pattern. class Foobar < Module.
[04:26:55] <adam12> mooff: And sometimes I like to mod = Module.new; const_set(:some_const, mod); mod.define_method.
[04:27:57] <mooff> ooh, module builder sounds neat
[04:28:31] <adam12> I think there was a Rubyconf or Railsconf talk on it recently.
[04:29:44] <mooff> :: class Foobar < Module; def cool() end end; f = Foobar.new
[04:29:44] <ruby-eval> => #<Foobar:0x04426a90>
[04:30:02] <mooff> :: f.respond_to? :cool 
[04:30:02] <ruby-eval> => true
[04:30:19] <mooff> :: Object.new.extend f
[04:30:19] <ruby-eval> => #<Object:0x04435d10>
[04:30:28] <mooff> :: _.respond_to? :cool 
[04:30:28] <ruby-eval> => false
[04:36:44] <mooff> that's funky. you'd need some plumbing to define instance methods for the module, wouldn't you?
[04:37:49] <adam12> mooff: Yeah. Usually define_method inside initialize();
[04:41:36] <adam12> class IsAwesome < Module; def initialize(awesome = true); define_method(:awesome?) { awesome }; end; end; class Widget; include IsAwesome.new(true); end; Widget.new.awesome?
[04:42:48] <mooff> include AwesomeStruct.new(:ooh, :cool)
[04:44:44] <mooff> :: (0..Float::INFINITY).find { |i| rand(100).zero? }.then { |n| "Took #{n} times to roll a zero" }
[04:44:44] <ruby-eval> => "Took 124 times to roll a zero"
[04:45:43] <mooff> that one's useful at times. especially if you .lazy.map { turn it into something you want }.find { }
[04:46:37] <mooff> now there's (0..) instead of (0..Float::INFINITY) .. ahh
[04:54:58] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[04:56:17] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[04:58:58] <ox1eef> i like Module.new {} - great for creating modules on the fly, using const_set on the module is something i don't think i've done before, but interesting as well. 'class Foo < Module' is what crosses the line, too weird.
[05:12:53] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[05:14:21] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[05:23:03] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[05:23:26] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[05:24:05] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[05:34:45] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[05:44:57] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[06:17:09] *** Quits: ikowasz (~ikowasz@178235191078.dynamic-4-waw-k-3-3-0.vectranet.pl) (Ping timeout: 256 seconds)
[06:37:30] *** Joins: bluedust (~bluedust@117.193.120.37)
[07:59:37] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8) (Ping timeout: 240 seconds)
[08:29:48] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:55:49] <havenwood> mooff: and you can drop the |i|
[08:56:40] <havenwood> ox1eef: Both are occationally handy.
[08:58:49] <havenwood> ox1eef: How about some nested Module.news :P https://gist.github.com/havenwood/2588e1b62a611c722791b5b868bc161c#file-enum-rb-L5-L30
[09:29:41] <ox1eef> it is certainly clever code. in the past i've used it to group, or include - other modules which were named, then returning the anonymous module from a method. it has a nice style or way to it that would be great to see encouraged in ruby.
[09:36:08] *** Joins: bluedust_ (~bluedust@117.222.188.251)
[09:37:11] *** Quits: bluedust (~bluedust@117.193.120.37) (Ping timeout: 256 seconds)
[09:57:11] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[10:28:41] *** Joins: oxfuxxx (~oxfuxxx@89.40.183.139)
[10:32:27] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[10:48:53] *** Quits: oxfuxxx (~oxfuxxx@89.40.183.139) (Ping timeout: 256 seconds)
[11:05:16] <nakilon> IIRC I used Module.new to split logically some sets of methods I put together into a project autotests library defined in spec_helper.rb 
[11:05:44] <nakilon> there was no point in declaring a constant that won't even be used
[11:05:56] <nakilon> except of the immediate local inclusion
[11:36:35] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[11:37:45] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[11:42:25] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Ping timeout: 256 seconds)
[11:47:59] *** Joins: Rounin (~david@84.212.130.215)
[11:51:18] <ox1eef> it can make for appealing syntax, eg: include Foo.bar
[11:56:26] *** Quits: weaksauc_ (~textual@ip68-5-101-101.oc.oc.cox.net) (Ping timeout: 272 seconds)
[12:14:52] *** Joins: Guest3952 (~vit@chello085216193138.chello.sk)
[12:16:07] *** Joins: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net)
[12:21:20] *** Joins: bluedust (~bluedust@103.165.167.61)
[12:24:17] *** Quits: bluedust_ (~bluedust@117.222.188.251) (Ping timeout: 240 seconds)
[13:08:17] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[13:11:46] *** Joins: TCZ (~tcz@91.150.178.124)
[13:46:05] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[13:51:19] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:52:12] *** Joins: fercell (~ferr@78-63-4-13.static.zebra.lt)
[13:56:13] *** Joins: ferr_ (~ferr@185.65.50.70)
[13:57:35] *** Quits: fercell (~ferr@78-63-4-13.static.zebra.lt) (Ping timeout: 256 seconds)
[13:59:01] *** Joins: bluedust (~bluedust@103.165.167.61)
[13:59:33] *** Parts: roadie (~user@2a02:8108:5a40:1d87:3942:af28:94ec:15b0) (ERC (IRC client for Emacs 25.3.50.1))
[14:08:05] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[14:14:54] *** Joins: Guest2 (~Guest2@2001:ce8:131:5f61:e103:cf94:5e10:2214)
[14:15:47] *** Quits: Guest2 (~Guest2@2001:ce8:131:5f61:e103:cf94:5e10:2214) (Client Quit)
[14:52:42] *** Joins: Aylat (~Aylat@124.red-83-47-236.dynamicip.rima-tde.net)
[14:52:43] *** Quits: Aylat (~Aylat@124.red-83-47-236.dynamicip.rima-tde.net) (Changing host)
[14:52:43] *** Joins: Aylat (~Aylat@user/Aylat)
[14:57:15] *** Joins: Aylat_ (~Aylat@50.red-88-14-71.dynamicip.rima-tde.net)
[14:57:15] *** Quits: Aylat_ (~Aylat@50.red-88-14-71.dynamicip.rima-tde.net) (Changing host)
[14:57:15] *** Joins: Aylat_ (~Aylat@user/Aylat)
[15:00:44] *** Quits: Aylat (~Aylat@user/Aylat) (Ping timeout: 272 seconds)
[15:07:39] *** Joins: ikowasz (~ikowasz@178235191078.dynamic-4-waw-k-3-3-0.vectranet.pl)
[15:45:51] *** Quits: Aylat_ (~Aylat@user/Aylat) (Read error: Connection reset by peer)
[15:46:23] *** Quits: ua_ (~ua@public-gprs219536.centertel.pl) (Ping timeout: 256 seconds)
[15:53:47] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[16:25:23] *** Joins: Sheilong (uid293653@2a03:5180:f:3::4:7b15)
[16:38:08] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[16:38:24] *** Joins: ua_ (~ua@public-gprs231422.centertel.pl)
[16:42:46] *** Joins: bluedust (~bluedust@103.165.167.61)
[16:51:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[16:52:39] *** Joins: TCZ (~tcz@91.150.178.124)
[16:53:02] *** Quits: TCZ (~tcz@91.150.178.124) (Remote host closed the connection)
[16:55:42] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:59:48] *** Quits: jhawthorn (~jhawthorn@user/jhawthorn) (Quit: ZNC 1.8.2 - https://znc.in)
[17:00:07] *** Joins: jhawthorn (~jhawthorn@user/jhawthorn)
[17:25:12] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[17:42:36] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 240 seconds)
[17:52:11] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:52:31] *** Joins: gproto23_ (~gproto23@user/gproto23)
[17:53:00] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[18:22:40] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[18:23:01] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[18:23:27] *** Joins: pandabot_ (~pandabot@user/leftylink/bot/pandabot)
[18:24:03] *** Joins: Guest6 (~Guest6@2001:470:d8fe:2:9a7:14b2:7829:26cc)
[18:24:09] *** Joins: teclator_ (~quassel@85.155.180.70.dyn.user.ono.com)
[18:24:25] *** Joins: _ht_ (~quassel@231-169-21-31.ftth.glasoperator.nl)
[18:24:54] *** Quits: Guest6 (~Guest6@2001:470:d8fe:2:9a7:14b2:7829:26cc) (Client Quit)
[18:25:19] *** Joins: finstern1s (~X@23.226.237.192)
[18:27:01] *** Server sets mode: +nt 
[18:29:21] *** Joins: yos (~yossarian@ool-44c5f69e.dyn.optonline.net)
[18:29:21] *** Quits: yos (~yossarian@ool-44c5f69e.dyn.optonline.net) (Changing host)
[18:29:21] *** Joins: yos (~yossarian@user/yossarian)
[18:29:52] *** Quits: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net) (*.net *.split)
[18:29:52] *** Quits: Rounin (~david@84.212.130.215) (*.net *.split)
[18:29:52] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (*.net *.split)
[18:29:52] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (*.net *.split)
[18:29:52] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[18:29:52] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[18:29:52] *** Quits: yuckey2d (~yuckey2d@gateway/vpn/pia/yuckey2d) (*.net *.split)
[18:29:52] *** Quits: yossarian (~yossarian@user/yossarian) (*.net *.split)
[18:29:52] *** Quits: pandabot (~pandabot@user/leftylink/bot/pandabot) (*.net *.split)
[18:29:52] *** Quits: benjamin- (~benjaminw@benjaminwil.info) (*.net *.split)
[18:29:53] *** Quits: splud (~noneya.bi@user/splud) (*.net *.split)
[18:29:53] *** Quits: seabre (~seabre@user/seabre) (*.net *.split)
[18:29:53] *** Quits: basso (~basso@195.139.200.7) (*.net *.split)
[18:29:53] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (*.net *.split)
[18:29:53] *** Quits: entropie (~mit@ip5f599513.dynamic.kabel-deutschland.de) (*.net *.split)
[18:29:53] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (*.net *.split)
[18:29:53] *** Quits: Spitfire (spitfire@user/Spitfire) (*.net *.split)
[18:29:53] *** Quits: ollysmith (~ollysmith@88.212.177.103) (*.net *.split)
[18:29:53] *** Quits: finsternis (~X@23.226.237.192) (*.net *.split)
[18:29:53] *** Quits: whysthatso1250 (~whysthats@74-206-50-195.sta.estpak.ee) (*.net *.split)
[18:29:53] *** Quits: txdv (~bentkus@78-56-238-186.static.zebra.lt) (*.net *.split)
[18:29:53] *** yuckey2d9 is now known as yuckey2d
[18:29:53] *** entropy is now known as entropie
[18:29:53] *** whysthatso12507 is now known as whysthatso1250
[18:29:54] *** mbrndtgn4 is now known as mbrndtgn
[18:29:57] *** basso7 is now known as basso
[18:36:08] *** Joins: splud (~noneya.bi@user/splud)
[18:37:01] *** Joins: Rounin (~david@84.212.130.215)
[18:37:59] *** Joins: txdv (~bentkus@78-56-238-186.static.zebra.lt)
[18:38:15] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[18:50:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[18:50:17] *** Quits: gproto23_ (~gproto23@user/gproto23) (Remote host closed the connection)
[19:03:23] *** Joins: fef (~thedawn@user/thedawn)
[19:10:49] *** Joins: Pixi_ (~Pixi@user/pixi)
[19:13:29] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 256 seconds)
[19:21:53] <adam12> Morning
[19:24:36] <gr33n7007h> morning adam12 
[19:28:28] *** Quits: Pixi_ (~Pixi@user/pixi) (Quit: Leaving)
[19:31:29] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[19:39:19] <adam12> gr33n7007h: How goes
[19:40:02] *** Joins: Pixi (~Pixi@user/pixi)
[19:42:07] *** Joins: bluedust (~bluedust@103.165.167.61)
[19:45:57] *** Quits: ikowasz (~ikowasz@178235191078.dynamic-4-waw-k-3-3-0.vectranet.pl) (Ping timeout: 240 seconds)
[19:53:55] <gr33n7007h> adam12: not bad mate
[19:59:53] <adam12> gr33n7007h: Cool :)
[20:00:57] <gr33n7007h> adam12: you good?
[20:01:43] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[20:01:45] *** Quits: aeris (~aeris@user/aeris) (Remote host closed the connection)
[20:02:11] *** Joins: fef (~thedawn@user/thedawn)
[20:03:21] *** Joins: aeris (~aeris@user/aeris)
[20:06:04] <adam12> gr33n7007h: Not too bad. Happy Friday!
[20:07:04] <gr33n7007h> adam12: good, good. happy friday mate!
[20:12:10] *** Joins: ikowasz (~ikowasz@178235191078.dynamic-4-waw-k-3-3-0.vectranet.pl)
[20:52:01] *** Quits: ikowasz (~ikowasz@178235191078.dynamic-4-waw-k-3-3-0.vectranet.pl) (Ping timeout: 245 seconds)
[21:04:50] *** Joins: orbyt (~textual@c-73-152-7-164.hsd1.va.comcast.net)
[21:06:37] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[21:28:54] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:31:50] *** Joins: bluedust (~bluedust@103.165.167.61)
[21:36:38] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[22:07:35] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[22:08:13] *** Joins: mksybr (mksybr@tilde.team)
[22:09:49] <mksybr> is there any way i can make Regexp::new default to multiline mode? 
[22:10:14] *** Joins: bluedust (~bluedust@103.165.167.61)
[22:11:34] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[22:11:36] <mksybr> not really sure what im doing tbh https://www.toptal.com/developers/hastebin/qijinacela.rb
[22:12:07] <mooff> fwiw, Regexp#initialize isn't called for regex literals
[22:12:39] <mooff> (just tried to monkey patch it)
[22:12:58] *** Joins: bluedust (~bluedust@103.165.167.61)
[22:13:01] <mksybr> ahh, i was just about to ask if you knew what literals do
[22:13:29] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:13:36] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[22:14:20] <adam12> mksybr: Just curious why you want to default to multiline mode
[22:14:36] <mksybr> prefer typing ^ $ over \A \Z
[22:14:45] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[22:14:50] <adam12> Gotcha.
[22:15:26] <mooff> /^foo$/m aint so bad, surely
[22:15:46] <mksybr> that is true :)
[22:15:57] <adam12> I'd probably prefer the explicit modifier too...
[22:16:12] *** Joins: taupiqueur_ (~taupiqueu@130.247.204.77.rev.sfr.net)
[22:17:46] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[22:28:01] *** Quits: orbyt (~textual@c-73-152-7-164.hsd1.va.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:28:36] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 250 seconds)
[22:32:12] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:33:22] *** Quits: taupiqueur_ (~taupiqueu@130.247.204.77.rev.sfr.net) (Ping timeout: 250 seconds)
[22:33:59] *** Joins: orbyt (~textual@c-73-152-7-164.hsd1.va.comcast.net)
[22:41:01] *** Quits: teclator_ (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[22:48:20] <havenwood> mksybr: +1 just use Regexp::MULTILINE repeatedly. Make a helper function if you want to DRY it up rather than modifying the core class.
[22:58:12] *** Joins: taupiqueur_ (~taupiqueu@182.245.204.77.rev.sfr.net)
[22:59:21] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[23:02:33] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[23:05:29] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Remote host closed the connection)
[23:06:50] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[23:24:19] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Read error: Connection reset by peer)
[23:27:37] *** Quits: orbyt (~textual@c-73-152-7-164.hsd1.va.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:34:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[23:36:50] *** Quits: havenwood (~havenwood@about/ruby/havenwood) (Quit: The Lounge - https://thelounge.chat)
[23:37:06] *** Joins: havenwood (~havenwood@about/ruby/havenwood)
[23:37:26] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 245 seconds)
[23:39:09] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:40:23] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:56:35] <mooff> so i have a method which writes to a socket, and takes a block to call when a reply is received later.. asynchronously
[23:58:52] <mooff> how might i turn that into a 'synchronous' enumerator?
