[00:08:57] *** Joins: endlesseditions (~endlessed@199.19.117.167)
[00:32:37] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[00:50:44] *** Joins: [deleted] (~livoreno@user/notzmv)
[00:52:25] *** Joins: Celeo (~Celeo@user/celeo)
[00:52:33] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 258 seconds)
[00:54:54] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[01:24:04] *** Quits: [deleted] (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[01:24:23] *** Joins: livoreno (~livoreno@user/notzmv)
[01:34:54] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 276 seconds)
[01:36:43] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[01:45:37] *** Quits: endlesseditions (~endlessed@199.19.117.167) (Quit: Textual IRC Client: www.textualapp.com)
[01:53:06] <mhmd> is ~D sigil supposed to support other calendars too? or is it only for gregorian calendar?
[02:04:21] *** Joins: ur5us__ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[02:08:59] <mhmd> never mind, I found it, it's ~D[date calendar]
[02:16:42] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 256 seconds)
[02:21:29] *** Quits: ur5us__ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 258 seconds)
[02:28:58] *** Joins: ur5us__ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[02:41:13] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[02:49:51] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 258 seconds)
[03:12:16] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[03:13:28] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[03:16:29] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 250 seconds)
[03:18:15] *** Joins: notzmv (~zmv@user/notzmv)
[03:21:18] *** Quits: ur5us__ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 258 seconds)
[03:21:50] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[03:26:39] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 258 seconds)
[03:59:18] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[04:03:48] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 256 seconds)
[04:12:34] *** Joins: [deleted] (~livoreno@user/notzmv)
[04:14:59] *** Quits: mahmutov (~mahmutov@37.155.41.188) (Ping timeout: 250 seconds)
[04:16:08] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 272 seconds)
[04:22:37] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 245 seconds)
[04:23:22] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:24:21] *** Joins: flynn (~mcbloch@user/flynn)
[04:46:33] *** Joins: arpunk (~arpunk@dynamic-186-31-185-38.dynamic.etb.net.co)
[05:00:08] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[05:04:54] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 272 seconds)
[05:15:53] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[05:21:01] *** Joins: baroobob (~jwbwater@98.215.243.94)
[05:25:02] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[05:25:41] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[06:18:23] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 258 seconds)
[06:25:37] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[06:29:54] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 240 seconds)
[06:39:53] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[06:46:47] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 245 seconds)
[06:58:34] *** Joins: ur5us__ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[07:19:18] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 256 seconds)
[07:20:07] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[07:21:54] *** Quits: ur5us__ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 240 seconds)
[07:24:42] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 258 seconds)
[07:36:34] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[07:39:05] *** Quits: dbohdan (~dbohdan@user/dbohdan) (Read error: Connection reset by peer)
[07:39:19] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[08:17:09] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[08:33:26] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[08:36:50] *** Joins: ur5us__ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[08:47:36] *** sm2n_ is now known as sm2n
[08:49:59] *** Joins: livoreno (~livoreno@user/notzmv)
[08:51:06] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 256 seconds)
[09:01:52] *** Quits: ur5us__ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 256 seconds)
[09:13:38] *** Joins: phaleth (~phaleth@user/phaleth)
[09:32:44] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 258 seconds)
[09:49:38] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[09:49:57] *** Joins: livoreno (~livoreno@user/notzmv)
[10:08:03] *** Joins: endlesseditions (~endlessed@205.220.252.162)
[10:48:01] *** Parts: endlesseditions (~endlessed@205.220.252.162) (Textual IRC Client: www.textualapp.com)
[11:03:21] *** Quits: chenghiz_ (uid349735@id-349735.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[11:13:58] *** Joins: mahmutov (~mahmutov@37.155.41.188)
[11:17:21] *** Joins: rhn (~rhn@user/rhn)
[12:38:09] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:40:43] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:59:59] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[13:06:13] *** Joins: Guest77 (~Guest77@p200300c8cf22760017ceb0ec51323e51.dip0.t-ipconnect.de)
[13:06:50] <Guest77> hey guys, do phoenix context's provide a way {:ok, result} / {:error, error} return value?
[13:07:40] <Guest77> i want to use a case statement when trying to get a specific model using the model's id, e.g. Products.get_product(id) -> {:ok, product}
[13:08:01] <Guest77> is there a default method for this, or should i just create my own?
[13:11:49] <phaleth> Guest77: you can generate that function with say: mix phx.gen.live Products Product products name:string description:text price:decimal
[13:12:30] <Guest77> phaleth: i did use the context generator, but it only gives Products.get_product!/1
[13:12:32] <phaleth> after executing the command above it'll be located at lib/shop/products.ex as def get_product!(id), do: Repo.get!(Product, id)
[13:13:58] <Guest77> to give some context, i'm getting this error when trying to use Products.get_product! inside an absinthe resolver -> https://paste.ubuntu.com/p/cShkhns5Dz/
[13:15:02] <phaleth> yeah, after that function is generated the comment above says it can return Ecto.NoResultsError
[13:15:41] <Guest77> ah ok, so i just have to implement a custom case statement there then?
[13:15:44] <phaleth> I guess you will just have to rewrite the function
[13:15:49] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[13:16:27] <Guest77> cool, just wanted to make sure i wasn't missing anything, thanks man
[13:18:26] <phaleth> Guest77: I guess it's this one https://hexdocs.pm/ecto/Ecto.Repo.html#c:get!/3 not sure why the arity is 3
[13:22:52] <Guest77> phaleth: so then i would do something like `case Repo.get!(Product, id) do\n Ecto.NoResultsError -> {:error, "doesn't exist"}\n product -> {:ok, product} end`?
[13:24:43] <Guest77> hmm no that doesn't seem to catch it
[13:26:08] <phaleth> not sure, I guess simple pattern matching won't work, an error once raised kinda means crash of the program
[13:26:44] <phaleth> there might be something like try and catch in elixir I guess, still kinda new to elixir
[13:27:15] <Guest77> i must be missing something obvious here, there's definitely an easy way to do this
[13:27:58] <phaleth> no, I guess there is not, other than just catching the error like in all C style languages I can think of
[13:28:33] <Guest77> so what's the usual pattern that people implement when using absinthe and want to return a model instance, and it doesn't exist?
[13:28:34] <phaleth> you are trying to handle a so called side effect, errors should be expected
[13:29:54] <phaleth> Guest77: https://elixir-br.github.io/getting-started/try-catch-and-rescue.html
[13:31:11] <Guest77> Repo.get should return {:ok, ...} or {:error, ...}, why is it not?
[13:31:47] <phaleth> Guest77: no, the doc I linked above says it raises an error
[13:32:16] <Guest77> is that new then? because i swear that's how it used to be (rhetorical question seeing as you're new to elixir)
[13:33:11] <phaleth> Guest77: well, I can tell you that I went through like a hmm 4 years old tutorial by now and then pattern you describe was there
[13:33:51] <phaleth> Guest77: try get instead of get!
[13:33:52] <Guest77> yeah, pretty sure it's always been that way, i haven't touched phoenix in a while though
[13:34:12] <phaleth> that one returns nil if no record is found
[13:34:12] <Guest77> get returns either %Product or nil (if it doesn't exist)
[13:35:17] <phaleth> there is also exists?
[13:36:53] <phaleth> anyway, I'm not sure when Ecto version 3 came out and if it resulted in any drastic change like that, but I agree with you
[13:37:15] <phaleth> even tho I might be wrong
[13:37:38] <phaleth> good luck with whatever else you try, I'll be afk for an hour or two
[13:38:21] <Guest77> ok, thanks for the help phaleth
[13:38:58] <kpanic> Guest77: this might help you (the case part) https://hexdocs.pm/ecto/Ecto.Repo.html#c:insert_or_update/2-example 
[13:39:09] <Guest77> if anyone has some experience with ecto/absinthe, would appreciate some advice on this, or to know if there were some changes to Repo.get recently
[13:39:50] <Guest77> kpanic: i did try that, but i still get this error from absinthe: "Ecto.NoResultsError) expected at least one result but got none in query:\"
[13:40:33] <kpanic> Guest77: mmm, never used absinthe, however if you call that function with the case it should work
[13:47:26] <Guest77> kpanic: it still throws that error if no id matches
[13:47:48] <kpanic> Guest77: could you prepare a snippet on pastebin or similar?
[13:48:00] <Guest77> i'm quite new to graphql and absinthe, but  i'm pretty sure i shouldn't need catch an error to do this query
[13:48:01] <Guest77> yeah
[13:48:03] <Guest77> one sec
[13:48:26] <kpanic> and to answer to your question I think the Repo.get api did not change, for example https://hexdocs.pm/ecto/2.0.6/Ecto.Repo.html#c:get/3 (for 2.0.6 ecto version)
[13:48:40] *** Joins: ur5us__ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[13:53:28] <Guest77> hmm yeah looks like you're right, could've sworn it used to work that way
[13:53:33] <Guest77> ok here's the snippet -> https://paste.ubuntu.com/p/Rq4mN62Mzf/
[13:53:56] <Guest77> is absinthe meant to throw an error if you query for a product that does not exist?
[13:54:07] <Guest77> i'm new to it so maybe its meant to work that way
[13:54:13] <Guest77> just seems a bit odd
[13:58:59] <kpanic> Guest77: if you try to use directly the Repo.get on line 14 what happens? Because Product.get_product!/1 will raise an exception most probably
[14:04:04] <Guest77> kpanic: then it gives `Invalid value returned from resolver.`
[14:04:55] <Guest77> kpanic: ah, apparently {:ok, Repo.get(Product, id)} works!
[14:06:57] <Guest77> thanks dude, exactly what i needed, now it resolves properly
[14:13:07] <kpanic> Guest77: nice! regarding the `nil` returned by Repo.get maybe absinthe resolves it automatically. Just guessing
[14:16:56] *** Quits: derfj (sid19429@tinside.irccloud.com) (Ping timeout: 256 seconds)
[14:17:06] *** Quits: mjones (sid6844@id-6844.brockwell.irccloud.com) (Ping timeout: 272 seconds)
[14:17:06] *** Quits: joenoon (sid411732@id-411732.brockwell.irccloud.com) (Ping timeout: 272 seconds)
[14:17:14] *** Joins: mjones (sid6844@id-6844.brockwell.irccloud.com)
[14:17:44] *** Quits: Net (sid313265@id-313265.tooting.irccloud.com) (Ping timeout: 272 seconds)
[14:18:33] *** Joins: havenwood8 (~havenwood@about/ruby/havenwood)
[14:18:56] *** Quits: keyvan (sid7672@id-7672.brockwell.irccloud.com) (Ping timeout: 252 seconds)
[14:19:14] *** Joins: joenoon (sid411732@id-411732.brockwell.irccloud.com)
[14:19:29] *** Quits: jaydoane (sid66455@id-66455.stonehaven.irccloud.com) (Ping timeout: 252 seconds)
[14:19:29] *** Quits: DeX77 (~Admiral@dragonslave.de) (Ping timeout: 252 seconds)
[14:19:38] *** Quits: gmc (sid58314@id-58314.charlton.irccloud.com) (Ping timeout: 272 seconds)
[14:19:55] *** Quits: aaronrenner (sid475276@id-475276.charlton.irccloud.com) (Ping timeout: 250 seconds)
[14:20:16] *** Quits: Halcyonicstorm__ (sid174863@id-174863.brockwell.irccloud.com) (Ping timeout: 272 seconds)
[14:20:21] *** Quits: havenwood (~havenwood@about/ruby/havenwood) (Ping timeout: 250 seconds)
[14:20:21] *** Quits: josephl (sid146137@id-146137.tooting.irccloud.com) (Ping timeout: 250 seconds)
[14:20:21] *** havenwood8 is now known as havenwood
[14:20:54] *** Quits: guan (sid222713@id-222713.charlton.irccloud.com) (Ping timeout: 272 seconds)
[14:21:07] *** Joins: jaydoane (sid66455@id-66455.stonehaven.irccloud.com)
[14:21:14] *** Joins: Net (sid313265@id-313265.tooting.irccloud.com)
[14:21:29] <Guest77> kpanic: yeah i wrongly assumed it wanted the same format that the general `all_products` query wanted ({:ok, products} and {:error, error})
[14:21:32] *** Quits: johnhamelink (sid396829@id-396829.brockwell.irccloud.com) (Ping timeout: 272 seconds)
[14:21:32] *** Quits: mcrumm (sid467326@id-467326.charlton.irccloud.com) (Ping timeout: 272 seconds)
[14:22:02] *** Quits: wowi42 (~wowi42@5.30.23.58) (Ping timeout: 256 seconds)
[14:22:10] *** Quits: OliverMT (sid16701@id-16701.stonehaven.irccloud.com) (Ping timeout: 272 seconds)
[14:22:14] *** Quits: dzfranklin (sid448589@id-448589.charlton.irccloud.com) (Ping timeout: 252 seconds)
[14:22:38] *** Quits: lvlinux (~ruel@falcon.ruhnet.net) (Ping timeout: 245 seconds)
[14:22:48] *** Quits: termos (sid18647@id-18647.brockwell.irccloud.com) (Ping timeout: 272 seconds)
[14:23:23] *** Quits: asonge (sid129041@id-129041.highgate.irccloud.com) (Ping timeout: 250 seconds)
[14:23:26] *** Quits: hmanscloud (sid565@id-565.highgate.irccloud.com) (Ping timeout: 272 seconds)
[14:23:52] <Guest77> also, is there a way to seed a "test" database when running tests?
[14:25:26] *** Quits: rg (~rg@user/rg) (Ping timeout: 256 seconds)
[14:25:36] <kpanic> Guest77: globally? or per test
[14:26:08] <Guest77> er good question lol, which is better?
[14:26:19] <Guest77> or what is considered "best practice"?
[14:26:40] *** Quits: ur5us__ (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 272 seconds)
[14:26:47] <kpanic> Guest77: I guess it depends on your use case :)
[14:27:19] <Guest77> basically i want to run some tests which make sure my graphql output is correct
[14:28:02] *** Joins: Halcyonicstorm__ (sid174863@id-174863.brockwell.irccloud.com)
[14:28:45] <kpanic> Guest77: usually, in a single test suite the data is prepared in the `setup` function call or `setup_all` -- if you need it to do it globally this post looks good https://medium.com/geekculture/phoenix-understanding-how-to-seed-data-c2be863ddd1d
[14:30:33] *** Quits: m1dnight (~christoph@188.ip-51-91-158.eu) (Ping timeout: 245 seconds)
[14:30:41] *** Joins: guan (sid222713@id-222713.charlton.irccloud.com)
[14:31:00] *** Joins: m1dnight (~christoph@188.ip-51-91-158.eu)
[14:31:19] *** Joins: asonge (sid129041@id-129041.highgate.irccloud.com)
[14:31:22] *** Quits: carloratm (carloratm@tilde.club) (Ping timeout: 245 seconds)
[14:31:29] *** Joins: dzfranklin (sid448589@id-448589.charlton.irccloud.com)
[14:31:50] *** Joins: hmanscloud (sid565@id-565.highgate.irccloud.com)
[14:32:00] *** Joins: carloratm (carloratm@tilde.club)
[14:32:10] *** Joins: mcrumm (sid467326@id-467326.charlton.irccloud.com)
[14:32:12] *** Quits: Halcyonicstorm__ (sid174863@id-174863.brockwell.irccloud.com) (Ping timeout: 245 seconds)
[14:32:30] *** Joins: termos (sid18647@id-18647.brockwell.irccloud.com)
[14:32:37] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 245 seconds)
[14:32:57] *** Joins: Halcyonicstorm__ (sid174863@id-174863.brockwell.irccloud.com)
[14:33:02] *** Quits: phaleth (~phaleth@user/phaleth) (Ping timeout: 245 seconds)
[14:33:34] *** Joins: phaleth (~phaleth@user/phaleth)
[14:33:38] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[14:33:58] *** Joins: tofran (~tofran@37.189.158.134)
[14:34:38] *** Joins: ruel (~ruel@falcon.ruhnet.net)
[14:34:40] <Guest77> kpanic: perfect, thanks mate
[14:34:51] *** Joins: josephl (sid146137@id-146137.tooting.irccloud.com)
[14:35:03] *** Joins: aaronrenner (sid475276@id-475276.charlton.irccloud.com)
[14:35:56] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[14:35:57] *** Quits: asonge (sid129041@id-129041.highgate.irccloud.com) (Ping timeout: 245 seconds)
[14:36:21] *** Joins: gmc (sid58314@id-58314.charlton.irccloud.com)
[14:36:22] *** Quits: dzfranklin (sid448589@id-448589.charlton.irccloud.com) (Ping timeout: 245 seconds)
[14:37:46] *** Joins: OliverMT (sid16701@id-16701.stonehaven.irccloud.com)
[14:37:48] *** Joins: asonge (sid129041@id-129041.highgate.irccloud.com)
[14:37:49] *** Joins: DeX77 (~Admiral@dragonslave.de)
[14:38:04] *** Joins: johnhamelink (sid396829@id-396829.brockwell.irccloud.com)
[14:38:13] *** Joins: keyvan (sid7672@id-7672.brockwell.irccloud.com)
[14:38:55] *** Joins: dzfranklin (sid448589@id-448589.charlton.irccloud.com)
[14:41:38] *** Quits: Guest77 (~Guest77@p200300c8cf22760017ceb0ec51323e51.dip0.t-ipconnect.de) (Quit: Client closed)
[14:42:12] *** Quits: aaronrenner (sid475276@id-475276.charlton.irccloud.com) (Ping timeout: 245 seconds)
[14:42:20] *** Joins: aaronrenner (sid475276@id-475276.charlton.irccloud.com)
[14:42:37] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 245 seconds)
[14:42:37] *** Quits: tristan (~tristan@51.15.38.185) (Ping timeout: 245 seconds)
[14:42:47] *** Joins: tristan (~tristan@51.15.38.185)
[14:42:51] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 258 seconds)
[14:42:53] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[14:45:02] *** Joins: wowi42 (~wowi42@5.30.23.58)
[14:48:27] *** Quits: keyvan (sid7672@id-7672.brockwell.irccloud.com) (Ping timeout: 245 seconds)
[14:48:36] *** Quits: cdegroot (~quassel@209.5.238.85) (Ping timeout: 258 seconds)
[14:48:53] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[14:50:07] *** Joins: keyvan (sid7672@id-7672.brockwell.irccloud.com)
[14:59:07] *** Joins: rg (~rg@user/rg)
[15:01:26] *** Joins: cdegroot (~quassel@209.5.238.85)
[15:06:22] *** Joins: natrys (~natrys@user/natrys)
[15:14:06] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 272 seconds)
[15:15:34] *** Joins: Snyp (~rksht@49.207.202.63)
[15:43:33] *** Joins: LostKobrakai (~LostKobra@2001:16b8:2d6f:b300:794a:9181:635e:6545)
[16:12:56] *** Quits: rhn (~rhn@user/rhn) (Ping timeout: 258 seconds)
[16:13:26] *** Joins: rhn (~rhn@user/rhn)
[16:17:19] *** Quits: Snyp (~rksht@49.207.202.63) (Quit: WeeChat 3.2)
[16:41:16] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[16:45:05] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[16:46:04] *** Joins: Guest82 (~Guest82@p200300c8cf22760017ceb0ec51323e51.dip0.t-ipconnect.de)
[16:46:23] <Guest82> hey guys, what's the recommended authentication system for absinthe projects?
[16:46:49] *** Quits: rhn (~rhn@user/rhn) (Ping timeout: 250 seconds)
[16:46:49] <Guest82> can I use mix phx.gen.auth?
[16:47:47] *** Joins: rhn (~rhn@user/rhn)
[16:49:52] <Guest82> oh it doesn't support --no-html phoenix apps
[16:51:22] <Guest82> for those have use absinthe with phoenix, how do you handle authentication?
[16:55:07] *** Quits: rhn (~rhn@user/rhn) (Ping timeout: 245 seconds)
[17:11:21] <Guest82> gonna give pow a try
[17:11:24] *** Quits: Guest82 (~Guest82@p200300c8cf22760017ceb0ec51323e51.dip0.t-ipconnect.de) (Quit: Client closed)
[17:25:04] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 256 seconds)
[17:30:38] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Read error: Connection reset by peer)
[17:43:35] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[17:46:37] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Remote host closed the connection)
[17:49:08] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[17:51:05] *** Joins: rhn (~rhn@user/rhn)
[18:03:45] *** Joins: Guest85 (~Guest85@p200300c8cf22760017ceb0ec51323e51.dip0.t-ipconnect.de)
[18:04:11] <Guest85> anyone used pow with absinthe before? what's the correct way of creating users, authenticating, etc?
[18:04:32] <rawtaz> i think benwilson512 used absinthe at some point
[18:04:42] <rawtaz> i could swear he mentioned it the other day
[18:06:26] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 256 seconds)
[18:06:59] <Guest85> im pretty sure he created it dude
[18:09:28] <rawtaz> noooo, really? that's astonishing isnt it
[18:17:58] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[18:18:10] *** LostKobrakai is now known as LostKobrakai[awa
[18:18:10] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2d6f:b300:794a:9181:635e:6545) (Quit: LostKobrakai[awa)
[18:27:06] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Remote host closed the connection)
[18:27:49] *** Joins: gitgoood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[18:31:13] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-23.prtc.net)
[18:37:34] *** Joins: rhn_mk1 (~rhn@user/rhn)
[18:38:26] <Guest85> hey benwilson512, any advice on how to use absinthe with something like pow?
[18:38:44] *** Quits: rhn (~rhn@user/rhn) (Ping timeout: 256 seconds)
[18:46:25] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 250 seconds)
[19:04:20] *** Joins: chenghiz_ (uid349735@id-349735.charlton.irccloud.com)
[19:05:34] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-23.prtc.net) (Ping timeout: 246 seconds)
[19:34:58] *** Quits: Guest85 (~Guest85@p200300c8cf22760017ceb0ec51323e51.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[19:38:06] *** Joins: rhn (~rhn@user/rhn)
[19:39:22] *** Quits: rhn_mk1 (~rhn@user/rhn) (Ping timeout: 256 seconds)
[19:46:48] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[19:49:58] *** Joins: Guest85 (~Guest85@p200300c8cf22760048c263663174e9c2.dip0.t-ipconnect.de)
[20:17:37] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 245 seconds)
[20:18:10] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[20:20:36] <Mayel[m]> Guest85: dunno about recomm
[20:20:54] <Mayel[m]> *recommended but here's what we do: https://www.github.com/bonfire-networks/bonfire_api_graphql/tree/main/lib%2Fgraphql%2Fauth.ex
[20:21:27] <Mayel[m]> (+ other relevant bits in that repo) 
[20:23:01] *** Joins: rhn_mk1 (~rhn@user/rhn)
[20:24:16] <Mayel[m]> And in resolvers when wanting to authenticate a query or mutation, something like with {:ok, user} <- Bonfire.GraphQL.current_user_or_not_logged_in(info)
[20:24:17] *** Quits: rhn (~rhn@user/rhn) (Ping timeout: 245 seconds)
[20:31:30] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 240 seconds)
[20:32:51] *** Joins: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f)
[20:32:55] *** Quits: Rubyn (~Rubyn@user/rubyn) (Quit: WeeChat 3.2)
[20:34:59] <Guest85> man that looks quite complicated, but i'll get it a shot , thanks Mayel[m]
[20:36:28] <Mayel[m]> There's probably more in there than needed for your use case
[20:37:21] *** Quits: jess (~jess@libera/staff/jess) ()
[20:49:41] *** Joins: Rubyn (~Rubyn@user/rubyn)
[20:59:52] *** Joins: easbarbosa (~user@2804:1b2:80:694d:c0c7:72ec:d2a3:a66)
[21:05:03] *** Joins: rhn (~rhn@user/rhn)
[21:05:06] *** Quits: rhn_mk1 (~rhn@user/rhn) (Ping timeout: 240 seconds)
[21:12:18] *** Quits: rhn (~rhn@user/rhn) (Ping timeout: 240 seconds)
[21:12:27] *** Joins: rhn_mk1 (~rhn@user/rhn)
[21:37:07] *** Joins: mouseghost (~draco@user/mouseghost)
[21:39:45] *** Quits: rhn_mk1 (~rhn@user/rhn) (Ping timeout: 250 seconds)
[21:39:50] *** Joins: rhn (~rhn@user/rhn)
[21:51:20] *** Joins: rhn_mk1 (~rhn@user/rhn)
[21:52:12] *** Quits: rhn (~rhn@user/rhn) (Ping timeout: 245 seconds)
[22:00:48] *** Joins: rhn (~rhn@user/rhn)
[22:02:09] *** Quits: rhn_mk1 (~rhn@user/rhn) (Ping timeout: 252 seconds)
[22:08:21] *** Joins: Sgeo (~Sgeo@user/sgeo)
[22:19:15] *** Joins: rhn_mk1 (~rhn@user/rhn)
[22:20:07] *** Quits: rhn (~rhn@user/rhn) (Ping timeout: 245 seconds)
[22:24:11] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[22:24:50] *** Quits: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f) (Ping timeout: 272 seconds)
[22:26:33] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[22:49:02] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[22:49:26] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:56:12] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 258 seconds)
[23:10:07] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[23:10:18] *** Quits: rhn_mk1 (~rhn@user/rhn) (Ping timeout: 240 seconds)
[23:15:21] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[23:17:06] *** Quits: josevalim (sid250896@id-250896.stonehaven.irccloud.com) (Ping timeout: 240 seconds)
[23:17:23] *** Quits: OliverMT (sid16701@id-16701.stonehaven.irccloud.com) (Ping timeout: 252 seconds)
[23:17:54] *** Quits: ley (sid320610@id-320610.stonehaven.irccloud.com) (Ping timeout: 240 seconds)
[23:19:30] *** Quits: ehamberg (sid18208@id-18208.stonehaven.irccloud.com) (Ping timeout: 240 seconds)
[23:19:45] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) (Read error: Connection reset by peer)
[23:20:18] *** Quits: ericentin_ (sid134418@id-134418.stonehaven.irccloud.com) (Ping timeout: 240 seconds)
[23:21:07] *** Quits: jaydoane (sid66455@id-66455.stonehaven.irccloud.com) (Ping timeout: 258 seconds)
[23:21:31] *** Joins: ley (sid320610@id-320610.stonehaven.irccloud.com)
[23:21:32] *** Joins: OliverMT (sid16701@stonehaven.irccloud.com)
[23:21:46] *** Joins: jaydoane (sid66455@id-66455.stonehaven.irccloud.com)
[23:21:57] *** Joins: josevalim (sid250896@id-250896.stonehaven.irccloud.com)
[23:21:57] *** Joins: ehamberg (sid18208@stonehaven.irccloud.com)
[23:22:21] *** Joins: ericentin_ (sid134418@id-134418.stonehaven.irccloud.com)
[23:22:29] *** Joins: jakesyl (sid56879@id-56879.stonehaven.irccloud.com)
[23:46:32] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 252 seconds)
