[00:10:36] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:a0be:91d2:ac63:61de) (Ping timeout: 240 seconds)
[00:25:24] *** Quits: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern) (Ping timeout: 272 seconds)
[00:27:44] *** Quits: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:28:20] *** Joins: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com)
[00:28:21] *** Quits: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com) (Changing host)
[00:28:21] *** Joins: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern)
[01:15:55] *** Joins: cmiles74 (~miles@068-184-030-013.res.spectrum.com)
[01:19:07] *** Quits: silasfox (~sbv@p200300cec712b400b45e618d2b7703c5.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[01:19:46] *** Joins: patrice (~patrice@user/patrice)
[01:39:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[01:53:01] <cmiles74> \quit
[01:53:05] *** Quits: cmiles74 (~miles@068-184-030-013.res.spectrum.com) (Quit: WeeChat 2.8)
[01:53:19] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[01:58:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[02:34:06] *** Quits: wonko (~wjc@user/wonko) (Ping timeout: 252 seconds)
[02:35:25] *** Quits: patrice (~patrice@user/patrice) (Quit: Leaving)
[02:37:15] *** Joins: wonko (~wjc@user/wonko)
[02:43:14] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[02:47:09] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-b0ed-1a92-719b-f6c2.res6.spectrum.com)
[02:47:59] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 256 seconds)
[02:48:24] *** Quits: wonko- (~wjc@user/wonko) (Ping timeout: 252 seconds)
[02:49:07] *** Quits: wonko (~wjc@user/wonko) (Ping timeout: 256 seconds)
[02:50:17] *** Quits: wonko_ (~wjc@2a0e:1c80:11::50) (Ping timeout: 240 seconds)
[02:52:23] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:41b:9f3:a75a:9b8b)
[03:10:19] *** Joins: Tolstoy (~textual@71-36-117-11.ptld.qwest.net)
[03:15:40] *** Joins: yewscion (~yewscion@c-73-214-119-161.hsd1.pa.comcast.net)
[03:18:11] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[03:22:42] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 260 seconds)
[03:29:42] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 272 seconds)
[03:51:59] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[03:56:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[04:09:13] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[04:09:49] *** Quits: uncleyear (~ian@pppoe.178-66-157-18.dynamic.avangarddsl.ru) (Ping timeout: 256 seconds)
[04:11:21] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[04:15:04] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[04:15:29] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[04:50:24] *** Quits: yewscion (~yewscion@c-73-214-119-161.hsd1.pa.comcast.net) (Ping timeout: 250 seconds)
[05:28:37] *** Quits: Tolstoy (~textual@71-36-117-11.ptld.qwest.net) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:04:32] *** Quits: justGhost (~justache@user/justache) (Read error: Connection reset by peer)
[06:06:07] *** Joins: justGhost (~justache@user/justache)
[06:07:07] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[06:24:46] *** Joins: super-pizza-cat (~super-piz@h184-61-213-185.wtfrwi.broadband.dynamic.tds.net)
[06:36:23] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[06:36:39] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[07:10:19] *** Joins: SR-71 (~user@user/SR-71)
[07:12:33] <SR-71> What libraries do you guys use for web developement?
[07:15:54] <seebs> ooh, i'm looking forward to this one. i've never gotten the hang of web tooling libraries in any language really and i'm still not sure what people are looking for in them.
[07:19:42] <ToxicFrog> For my limited needs, ring/hiccup/compojure server-side, reagent client-side
[07:25:53] *** Quits: op2 (~op2@user/op2) (Ping timeout: 256 seconds)
[07:26:37] <SR-71> Did someone framewoks?
[07:27:11] <seebs> i have used a web framework ever, in another language, but i am still not sure they actually serve a meaningful function in most modern languages
[07:30:52] <SR-71> lol, I forgot the verb "try"
[07:32:33] <SR-71> what about clojurescript?
[07:57:57] <technomancy> ... ring.
[08:06:14] *** Joins: unyu (~pyon@user/pyon)
[08:08:58] <seebs> ring seems sort of low-level compared to what people usually mean by "frameworks", at least according to its docs?
[08:10:03] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[08:20:20] *** Quits: lagash (lagash@lagash.shelltalk.net) (Quit: ZNC - https://znc.in)
[08:25:16] *** Joins: lagash (lagash@lagash.shelltalk.net)
[08:38:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[08:43:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[08:48:49] <technomancy> well, that's the one I've used.
[08:48:52] <technomancy> it's pretty good
[08:50:42] <seebs> hmm. clojure-lanterna a good choice for curses-y things? i am not really sure what i'm looking for, just poking at the edges of likely options
[08:51:58] <seebs> it looks bitrotted, in that the links to the parent project docs go to long-dead code.google.com links.
[08:56:40] <seebs> hmm. lein seems sorta bitrotted too. "lein new [name]" says that it's making a library, if i want something else like plugin or app, lein help new will tell me what the something elses are. it does not.
[09:09:39] *** Joins: yauhsien (~Yau-Hsien@61-231-37-106.dynamic-ip.hinet.net)
[09:38:59] *** Joins: Tolstoy (~textual@71-36-117-11.ptld.qwest.net)
[09:47:22] <Para> seebs: Clojurists don't really use frameworks.
[09:47:38] <Para> I mean we do, but we're very library oriented.
[09:48:03] <Para> Anyway, for web frameworks there's compojure and luminus. Personally I go with aleph, used to use http-kit.
[10:14:26] *** Quits: RendySurvage (~rendysurv@64.72.216.39) (Quit: WeeChat 3.4)
[10:28:51] *** Joins: mbuf (~Shakthi@223.184.49.187)
[10:48:32] *** Joins: uncleyear (~ian@pppoe.178-66-157-18.dynamic.avangarddsl.ru)
[10:51:19] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[10:59:48] <seebs> i am never quite clear on the distinction between "library" and "framework", honestly.
[11:10:30] *** Joins: shiranaihito (~textual@111-249-197-68.dynamic-ip.hinet.net)
[11:17:22] *** Quits: mbuf (~Shakthi@223.184.49.187) (Quit: Leaving)
[11:20:17] *** Quits: Tolstoy (~textual@71-36-117-11.ptld.qwest.net) (Quit: My iMac has gone to sleep. ZZZzzz…)
[11:20:49] *** Joins: wonko_ (~wjc@2a0e:1c80:11::50)
[11:23:38] *** Quits: wonko_ (~wjc@2a0e:1c80:11::50) (Client Quit)
[11:29:08] *** Quits: turlando (~turlando@user/turlando) (Ping timeout: 272 seconds)
[11:37:57] *** Joins: op2 (~op2@user/op2)
[11:50:02] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[11:50:02] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[11:50:02] *** Joins: turlando (~turlando@user/turlando)
[11:50:52] *** Quits: turlando (~turlando@user/turlando) (Client Quit)
[11:51:19] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[11:51:19] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[11:51:19] *** Joins: turlando (~turlando@user/turlando)
[11:51:38] *** Quits: uncleyear (~ian@pppoe.178-66-157-18.dynamic.avangarddsl.ru) (Remote host closed the connection)
[11:52:47] *** Joins: uncleyear (~ian@pppoe.178-66-157-18.dynamic.avangarddsl.ru)
[11:57:53] *** Quits: turlando (~turlando@user/turlando) (Ping timeout: 256 seconds)
[12:03:44] *** Joins: yoonkn (~user@175.197.208.79)
[12:29:54] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[12:29:54] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[12:29:54] *** Joins: turlando (~turlando@user/turlando)
[12:39:32] *** Quits: shiranaihito (~textual@111-249-197-68.dynamic-ip.hinet.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:04:25] *** Joins: shiranaihito (~textual@2001-b011-4000-5f87-7ca5-bead-50a8-d4b5.dynamic-ip6.hinet.net)
[13:13:58] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[13:14:51] *** Joins: wonko (~wjc@user/wonko)
[13:19:32] *** Quits: henry40408 (~henry4040@175.181.177.116) (Quit: The Lounge - https://thelounge.chat)
[13:19:46] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[13:20:15] *** Joins: seschwar (~seschwar@user/seschwar)
[13:24:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[13:42:36] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[14:31:09] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:33:26] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[14:49:31] *** Joins: dalek_caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[15:16:34] *** Quits: wonko (~wjc@user/wonko) (Ping timeout: 250 seconds)
[15:20:06] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[15:24:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[15:27:18] *** Joins: ltriant (~ltriant@118.102.122.246)
[15:32:05] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[15:38:16] <sobel> the flavor distinction i have captured most reliably is a library doesn't try to take over your event loop or decide your next library for you
[15:38:25] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[15:39:11] <sobel> and tbh frameworks taking over the UI or event loop does feel like a thing of the past but the principle stands: libraries leave you in control, frameworks threaten to dictate architecture.
[15:39:48] <sobel> it's a little more insidious than just ecosystem lock-in with frameworks
[15:40:46] <sobel> like, i'm not at all sad about being "limited" to clojure based handlers in my http-kit based server. i'd be sad if those handlers in clojure were significantly different than plain old functions.
[15:41:38] <sobel> related: libraries and frameworks are often distinguished with the term, "opinionated"
[15:41:47] <sobel> frameworks are opinionated in this usage
[15:42:08] <sobel> this has been programming social hour w/sobel
[15:42:24] <sobel> (now 99.9% less social)
[15:42:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[16:00:01] *** Joins: RedNifre (~RedNifre@dslb-002-206-191-134.002.206.pools.vodafone-ip.de)
[16:00:46] <RedNifre> I lost the source code but still have the jar. Is it possible to decompile it into readable clojure? What's the best I can get out of the jar? (It's a runnable fat jar)
[16:02:15] <ridcully_> most likely the jar contains your clj files anyway.  have you looked into it?
[16:12:03] <ridcully_> ah sweet.  leiningen even puts the project.clj into the uberjar
[16:12:53] <sobel> <3
[16:13:27] <ridcully_> now i wonder what i would find in all those clojar jars...
[16:13:40] *** Joins: puchka (~marius@165.73.241.28)
[16:14:01] <sobel> hopefully fewer private keys than in my (private) project.clj
[16:14:48] <ridcully_> what group/artifact you said was that? ;p
[16:15:10] <sobel> good times: used to have a little jenkins+archiva regime in containers but after the log4j cve bombshell i just terminated those things
[16:15:57] <sobel> so now deploy.sh is a bit more...pedestrian
[16:18:28] <ridcully_> just "restored" the source of my uberjar
[16:19:43] <ridcully_> RedNifre: unzip your uberjar.  move META-INF/leinigen/<yourproject>/project.clj into the root; mkdir src and move <yourns> into src.  then rm **/*.class and get rid of all the directorties that are around
[16:42:08] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[16:56:00] <Para> ...oh my
[16:56:33] <Para> Now that you said it out loud, who wants to drop into Clojurians Slack' #clojars and ask them if they scan project.clj files within JARs containing secrets and whatnot.
[17:01:59] <ridcully_> well i for sure can't.  i enjoy my slack free life
[17:02:46] * goodger hisses like a vampire in sunlight
[17:06:55] *** Joins: azimut_ (~azimut@gateway/tor-sasl/azimut)
[17:07:25] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[17:08:55] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 240 seconds)
[17:24:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 256 seconds)
[17:24:45] <RedNifre> Awesome, I'll give it a try later today. Thanks!
[17:29:24] *** Quits: puchka (~marius@165.73.241.28) (Ping timeout: 240 seconds)
[17:31:58] *** Quits: Harlin (~DonQixote@75-163-174-136.clsp.qwest.net) (Quit: Leaving)
[17:32:15] *** Joins: Harlin (~DonQixote@75-163-174-136.clsp.qwest.net)
[17:33:14] *** Quits: Harlin (~DonQixote@75-163-174-136.clsp.qwest.net) (Read error: Connection reset by peer)
[17:42:58] * sobel scampers from slack
[17:43:11] <sobel> don't they have a discord yet?
[17:50:20] *** Joins: puchka (~marius@165.73.241.27)
[17:53:53] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[17:54:42] <Para> I think the latest split was zulip and people are still feeling fatigue from that.
[17:58:17] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[18:15:09] *** Joins: ltriant (~ltriant@118.102.122.246)
[18:20:23] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[18:51:53] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:41b:9f3:a75a:9b8b) (Ping timeout: 256 seconds)
[18:53:43] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:41b:9f3:a75a:9b8b)
[19:19:16] *** Joins: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[19:20:51] *** Joins: ltriant (~ltriant@118.102.122.246)
[19:23:03] *** Quits: shiranaihito (~textual@2001-b011-4000-5f87-7ca5-bead-50a8-d4b5.dynamic-ip6.hinet.net) (Ping timeout: 256 seconds)
[19:26:02] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 272 seconds)
[19:35:15] *** Joins: henry40408 (~henry4040@175.181.177.116)
[19:35:48] *** Quits: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net) (Ping timeout: 240 seconds)
[19:38:37] *** Quits: puchka (~marius@165.73.241.27) (Ping timeout: 240 seconds)
[19:39:57] *** justGhost is now known as justAstache
[20:11:31] <shem> there's a clojure channel in the functional programming discord
[20:12:18] <Para> Discord servers are dime a dozen.
[20:13:06] <technomancy> they're not even  servers
[20:13:36] <shem> serverless servers!
[20:14:06] <technomancy> >_<
[20:15:47] <Para> IRC over WebSocket
[20:19:20] *** Joins: ToxicFrog (~ToxicFrog@198-200-100-178.cpe.distributel.net)
[20:23:35] <shem> “our business model has no concept of ‘server’. we deploy in the cloud.”
[20:25:42] <shem> not talking of discord but the sentiment has passed my way a couple of times
[20:26:53] <technomancy> aka "I have no idea what a server is"
[20:31:34] <Frozenlock> You see ignorance, I see deception.
[20:33:45] <Para> Deception, lies!
[20:34:02] <Para> or the other way around
[20:40:39] *** Quits: SR-71 (~user@user/SR-71) (Remote host closed the connection)
[21:27:20] <seebs> note to self, create business model of making jar files in which the source has been Protected From Prying Eyes by some extremely secure technique like rot13, market it to companies that wish to ship clojure binaries without leaking their source.
[21:29:23] <ggb> I had a client once who asked "Can we ship encrypted binaries to our customers so they can't copy our desktop software?"
[21:29:51] <ggb> The immediate followup was "They use this software on non-networked machines, so can we just ship the decryption key to them as well, securely."
[21:30:55] <ggb> They had no concept of time in their plans. I.e., they wanted to send encrypted binaries and decryption keys (with unlimited validity period) to both live on the customer's machine. For security.
[21:31:24] *** Quits: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern) (Ping timeout: 240 seconds)
[21:32:52] *** Joins: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com)
[21:32:52] *** Quits: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com) (Changing host)
[21:32:52] *** Joins: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern)
[21:36:08] <sobel> i, too, would prefer to both have my cake and eat it
[21:37:27] <seebs> there continue to be people who believe that javascript which disables right-clicks makes it impossible to view a page's source
[21:37:43] <TimMc> Is that still a thing/
[21:38:01] <TimMc> (trying to prevent people from viewing page source)
[21:38:03] <ggb> Oh and the kicker! This solution, which I must emphasize was to deal with licensing desktop software on non-networked client machines, was *required* to be run on AWS. Because cloud makes everything better.
[21:38:21] <TimMc> hmmmmmm
[21:38:57] <seebs> long ago i worked on a toolchain which had a license manager check
[21:39:00] <seebs> it was... gcc
[21:39:11] <seebs> the complete source was provided to customers, along with working build scripts
[21:39:34] <seebs> the rationale was that some customers apparently genuinely *wanted* to run license manager checks, and demanded this feature, so we supported it for years
[21:39:52] <TimMc> hahaha
[21:39:55] <seebs> and then one day we botched a release handoff and shipped it with only the dummy "always return true" script, and without the actual license-checking binaries
[21:40:01] <seebs> and noticed six months later
[21:40:16] <seebs> so actually, the answer is, *one specific customer* had been requesting and apparently using this feature, and they'd gone out of business
[21:40:20] <ggb> Six months later when the burden of customer complaints for the missing feature grew too large?
[21:40:30] <seebs> no, no one ever complained, we just happened to spot the typo
[21:40:46] <seebs> anyway, "we accidentally shipped without this six months ago" was what we needed to finally drop it
[21:40:53] <Para> Back in the sweet late 90s/early 00s when license dongles were a thing for professional software a lot of companies used to store the dongles in a safe and just crack the software, because the license checks had 15-25% impact on performance :)
[21:41:10] <seebs> and yes we did get at least one customer who complained about the presence of the check and wanted to know how supplying them with source and build scripts could possibly comply with the GPL
[21:41:11] <ggb> That's actually my favorite method of decommissioning things. First do your due diligence. Then just turn the thing off and see if anyone screams.
[21:41:13] <Para> Which, at the time, wasn't worth paying for eg. 3D animation and rendering in tv ad space.
[21:41:22] <seebs> yeah
[21:41:39] <TimMc> seebs: So... how did this work? Did this company pay a developer to add the "feature"?
[21:41:59] <Para> A sort of semi secret is that most of the professional 2D/3D software originated from the industry itself :-)
[21:42:03] <TimMc> This doesn't seem like the kind of thing that an open source project would normally add just because someone asked.
[21:42:41] <Para> software piracy and cracks, I meant to say
[21:42:47] <TimMc> How does gcc have "customers"?
[21:43:01] <seebs> we had a Toolchain Vendor who did support contracts for gcc, and would implement custom features.
[21:43:15] <TimMc> got it
[21:43:19] <seebs> so we said "we need it to run a binary and exit if the binary returns non-zero" and they implemented that
[21:43:30] <seebs> the actual license check was in a separate binary for GPL reasons
[21:44:01] <TimMc> Reminiscent of how you can buy a license for SQLite if you *really* want to: https://www.sqlite.org/copyright.html
[21:44:05] <seebs> actually pretty reasonable in some contexts to have a support contract on gcc, and if they're still doing that, I can say the CodeSourcery people seriously impressed me with their ability to diagnose and fix bugs reliably.
[21:44:36] <seebs> one of the best things i ever did was use a spare incident in our contract to ask them to please make it so that #include failures didn't produce hundreds of pages of unrelated errors. :P
[21:45:18] <goodger> a ‘spare incident in the contract?’
[21:45:44] <ggb> The SQLite page linked actually lays out some good legal reasons a customer might want to purchase a license, even if something is already open source.
[21:46:38] <ggb> Especially given that it is in the public domain. My understanding is that some jurisdictions do not allow a copyright-holder to fully disown all copyright. Thus, it is impossible to actually *put* something in the public domain; works can only age into the public domain "naturally" (for lack of a better term).
[21:46:54] <TimMc> yep
[21:47:08] <TimMc> Or for indemnification.
[21:47:10] <ggb> Another, stupider, reason is that it gives a path for developers to get their companies to fund open projects.
[21:47:45] <TimMc> (Easy for them to offer indemnification in a contract because they don't take patches.)
[21:47:45] <seebs> we had a contract with the vendor to allow us to request N bug fixes per year or something
[21:47:57] <ggb> "Hey boss, we need to buy a license for this thing. It's four figures for a perpetual license." This is well within a director's or VP's personal signature limit.
[21:47:59] <seebs> and we didn't use all of them so i said "heyyyy how about this bug you can fix that right"
[21:48:08] <goodger> I see
[21:48:16] <TimMc> seebs: Nice. :-)
[21:48:20] <ggb> On the other hand, "Can we figure out how to donate to this random project?" is a surefire path to never getting money out of the company.
[21:48:28] <seebs> i think that may actually be how that got fixed in upstream gcc, not totally sure
[21:48:46] <seebs> we donate to support a project at work, it's called staticcheck and it's a very nice static analysis checker for Go
[21:48:58] <seebs> i just made a thing of asking management to make this happen every time it saved me at least a day of debugging
[21:49:23] <TimMc> I like that.
[21:50:26] <ggb> I do, too. At prior employers, this would have been a nonstarter.
[21:50:43] <ggb> It's awesome that your management is on board with that.
[21:51:00] <TimMc> Kyle Mitchell has some good blog posts about why it's difficult to get companies to pay open source projects. One of the main reasons surprised me: For financial regulation reasons it's really hard for companies to "donate".
[21:51:45] <TimMc> (everything on the ledger has to be justified, otherwise you make it too easy for embezzlement, money laundering, etc.)
[21:52:24] <TimMc> But also Finance wants to be able to send the money as a purchase order to an LLC rather than to an individual via Paypal, or whatever.
[21:52:43] <TimMc> So even companies that want to support open source they rely on have to go through some contortions to do it.
[21:52:50] <ggb> Companies understand invoices and license fees and support fees.
[21:52:53] <TimMc> yup
[21:53:25] <seebs> yeah, i think we use the github sponsorship thing
[21:53:27] <ggb> And "understand", here, means "have processes to trivially move money via, and controls to prevent money moving via not-those-processes".
[21:53:59] <seebs> i mean, our management is pretty cool. i'm using on-the-clock time to learn clojure even though we don't currently use it and it probably wouldn't be a good fit for our primary activities.
[21:54:10] <ggb> I heard a thing recently that applies here: "Stupid problems need stupid solutions sometimes."
[21:54:17] <seebs> but we get a time budget for Professional Development
[21:54:17] <TimMc> https://writing.kemitchell.com/2022/01/18/Payability-Form-Substance.html
[21:55:18] <TimMc> Tidelift is doing some interesting work in this space. I interviewed with them a couple years back and it seems like they're doing good work.
[21:55:19] *** Joins: ltriant (~ltriant@118.102.122.246)
[21:55:48] <TimMc> (They aggregate information about what a company relies on, and the company's support contract with Tidelift is distributed to professional maintainers for those projects.)
[21:56:26] <TimMc> But there are also just awkward questions like "if I give $500 to GnuPG, who gets the money, and how"?
[21:56:47] <TimMc> even if you solve the "who is sending" and "how are they sending" problems
[21:57:33] <ggb> This is one of those realms where there are some technical and process friction challenges, but the hard problems are outside of that domain.
[21:59:18] <TimMc> (Kyle Mitchell is also doing some innovative work on both open source and commercial software licenses.)
[21:59:24] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[22:01:50] *** Quits: op2 (~op2@user/op2) (Ping timeout: 272 seconds)
[22:02:00] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[22:02:26] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[22:12:30] <seebs> i'm still in awe of log4j
[22:12:49] <seebs> and very very curious as to whether the third-party who submitted that feature in the first place did it on purpose to achieve a backdoor in Basically Everything
[22:15:40] <Para> It's just from a different era, the height of Enterprise.
[22:15:50] <Para> Everything to everything, with everything.
[22:18:05] <seebs> i mean, it COULD be, but like. it's a pretty narrowly-targeted patch, it adds exactly one thing, i haven't heard of a real-world use case where it'd be intentional *except* the security hole.
[22:18:20] <seebs> on the other hand i think we'd have seen attacks in the intervening years.
[22:18:48] <ridcully_> the use case it to enrich your logging messages
[22:19:40] <seebs> no, like, they had lots of existing enriching of login messages. someone sent them a patch specifically to enable jndi code-loading from data being expanded into the message
[22:19:51] <seebs> which is a really weird thing and doesn't make *sense*
[22:20:14] <Para> Maybe you just don't understand how deeply indirect and configuration driven the Java EE ecosystem is :)
[22:20:19] <Para> It is _horrid_.
[22:20:21] <seebs> that's true
[22:21:21] *** Joins: patrikvrba[m] (~patrikvrb@2001:470:69fc:105::1:c549)
[22:22:01] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[22:23:31] <Para> I was going to explain how the basics work and I got this overwhelming feeling of exhaustion before even writing the first sentence.
[22:24:10] <ridcully_> when i was pulled back into the jvm there where one project that actually used jndi
[22:24:47] <ridcully_> the devs had to write deployment instructions for the ops... and usually one side botched the job at update-day
[22:25:27] <seebs> https://thedailywtf.com/articles/Symbolic_Installation
[22:25:37] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-b0ed-1a92-719b-f6c2.res6.spectrum.com) (Ping timeout: 240 seconds)
[22:26:17] *** Joins: op2 (~op2@user/op2)
[22:26:21] *** Joins: Tolstoy (~textual@71-36-117-11.ptld.qwest.net)
[22:26:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f) (Ping timeout: 240 seconds)
[22:27:03] <Para> seebs: have a gander at this to get an idea https://tomcat.apache.org/tomcat-10.0-doc/appdev/index.html
[22:27:31] <seebs> i once built a tomcat app
[22:28:03] <seebs> had people over for thanksgiving, the online cards-against-humanity someone made was overloaded and unusable, downloaded source and got eclipse running and spent about an hour and a half learning to build and run things
[22:28:15] <ridcully_> i hope the still keep it around... but now all must must run `s/javax/jakarta/g`
[22:29:27] <Para> Interestingly a lot of Clojure devs even still prefer Jetty.
[22:29:41] <Para> Which really is just an embeddable servlet container.
[22:30:04] *** Joins: johnjaye (~pi@173.209.64.74)
[22:30:10] <Para> ...well, a web server. It's been on diet for ages.
[22:30:31] <technomancy> is it surprising tho?
[22:30:46] <ridcully_> you still deploy just a uberjar.  and not hand over deploment docs and a war
[22:30:53] <seebs> there's a sort of minimal sense of "look i just want to get a request and respond to it and not think about the rest" that people tend to want because that mostly just works
[22:31:09] <technomancy> "need a web server, so ... use a web server"
[22:31:46] <Para> I find it dualistic. On the other hand, it's simple and easy to get going, but really it's...way more than one really should need. I guess it was partly lucky timing as well, at one point pretty much everyone went to Jetty because the XML fatigue started destroying companies.
[22:31:59] <Para> Could've been worse, of course.
[22:32:07] <technomancy> what do you mean way more?
[22:32:14] <Para> The whole servlet part.
[22:32:28] <Para> It's not just req/resp handler.
[22:32:47] <ridcully_> all the app containers got their fat trimmed (tomcat, jetty, the-redhat-one, ...)
[22:32:50] <technomancy> huh, ok. wasn't even aware of that.
[22:33:18] <Para> ridcully_: Netty or Undertow. Both are RH's IIRC.
[22:33:35] <Para> Undertow, in fact, is a a leaner version of Netty that specifically does Web stuff only.
[22:33:38] <ridcully_> i meant undertow, the servlet one
[22:38:06] <Para> Had to check, some sort of fatigue there as well. Aleph is built on Netty, Metosin has seemingly abandoned Undertow based project, I'm sure there's others.
[22:38:41] <Para> Netty was meant to be the savior, turns out stateful, event driven protocol modeling framework maybe isn't the way to go when people just want to GET stuff... :)
[22:38:59] <ridcully_> i think on the clojure end of things you just dont care.  if you hare on the non-clojure-world on the jvm you basically ask "do i need servlet"
[22:39:56] <Para> Yeah. That's one of the things I don't like in Java ecosystem, specifically. It is obviously built by engineers, to engineers, for _engineering_.
[22:41:16] <ridcully_> and there you can pick from "servlet" or "rx stuff we are figuring out right now"
[22:42:08] <Para> I wonder how Kotlin ecosystem has formed around this.
[22:46:14] <Para> hmm, spring boot, vert.x, micronaut...decent
[22:57:24] *** Joins: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909)
[23:01:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:a4fb:481a:7fa9:b909) (Ping timeout: 240 seconds)
[23:03:47] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[23:16:21] *** Joins: Null_A (~null_a@2601:645:8700:2290:890f:d3a0:aab0:f3f)
[23:22:34] *** Joins: paul_j` (~user@67.26.169.217.in-addr.arpa)
[23:23:20] *** Quits: paul_j` (~user@67.26.169.217.in-addr.arpa) (Remote host closed the connection)
[23:25:36] <sobel> i have a project i'm doing in vert.x because "java is a common skillset" and i love vert.x a lot now
[23:26:37] <sobel> it very much fits the library-not-framework model. it's still somewhat OO, but generics take the edge off.
[23:27:24] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[23:28:22] <sobel> i like how light it is on the resources, and i like how convenient it makes async-everything.
[23:53:37] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Ping timeout: 240 seconds)
