[00:04:33] *** Joins: samgranieri (~samgranie@user/samgranieri)
[00:08:57] *** Quits: samgranieri (~samgranie@user/samgranieri) (Ping timeout: 240 seconds)
[00:20:36] *** Joins: roadie (~user@2a02:8108:ec0:1427:986a:631c:40e8:5528)
[00:20:54] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[00:25:02] *** Quits: roadie (~user@2a02:8108:ec0:1427:986a:631c:40e8:5528) (Ping timeout: 240 seconds)
[00:25:58] *** Joins: roadie (~user@2a02:8108:ec0:1427:986a:631c:40e8:5528)
[00:28:32] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[00:33:03] *** Quits: walidvb (~walidvb@2804:14c:43:88e7:71f9:9477:9188:ecf1) (Quit: Client closed)
[00:33:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:48:37] *** Quits: roadie (~user@2a02:8108:ec0:1427:986a:631c:40e8:5528) (Ping timeout: 240 seconds)
[00:57:22] *** Joins: roadie (~user@2a02:8108:ec0:1427:986a:631c:40e8:5528)
[01:00:59] *** Joins: roadie` (~user@2a02:8108:ec0:1427:986a:631c:40e8:5528)
[01:01:43] *** Quits: roadie` (~user@2a02:8108:ec0:1427:986a:631c:40e8:5528) (Client Quit)
[01:04:57] *** Quits: roadie (~user@2a02:8108:ec0:1427:986a:631c:40e8:5528) (Ping timeout: 240 seconds)
[01:10:39] *** Joins: Vaevictus (~vae@user/vaevictus)
[01:11:36] <Vaevictus> if i've got two different array like objects... containing potentially a field that coordinates some records between the two ( a name )... what's a good way to get the venn diagram outputs of each one?
[01:11:47] <Vaevictus> like ... in A not B, in B not A, in both?
[01:12:52] <Vaevictus> i was doing a.select{ |au| b.select{ |bu| bu.thing == au.otherthing } } but it seems like i'm working too hard :D
[01:14:56] <weaksauce> Vaevictus intersection
[01:15:25] <weaksauce> and A - B, B - A
[01:16:16] <Vaevictus> do i need to coersce them to be a similar structure?
[01:16:27] <Vaevictus> one's from AD with all the AD bits and the other is a dump from a csv :|
[01:16:52] <weaksauce> oh those are just methods on arrays
[01:17:00] <Vaevictus> ahh
[01:17:25] <Vaevictus> these may just be arrays of objects i suppose
[01:17:54] <Vaevictus> gotta love writing administrative bits for enterprise services that don't exist 
[01:17:55] <weaksauce> you'd probably need to override equality 
[01:18:18] <weaksauce> not sure what they use? hash or ===
[01:19:30] <Vaevictus> my current testing code (that verified things actually do work somewhat was) A.each { b.select{ equality here}.length }  ( with some printing) which did actually get me what i hoped for 
[01:19:45] *** Joins: dstein64- (~dstein64@dannyadam.com)
[01:20:10] <Vaevictus> maybe i should rename the attributes in one of them to match the other?
[01:20:29] <Vaevictus> then i could hash compare the same field perhaps?
[01:20:33] <Vaevictus> not sure if that'd help, i suppose
[01:21:08] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 252 seconds)
[01:21:08] *** dstein64- is now known as dstein64
[01:21:44] <Vaevictus> oh... map
[01:24:10] <Vaevictus> i suppose i can merge them with map and do the logic in that and get my intersections and other bits that way.
[01:25:10] <weaksauce> yeah lots of paths
[01:26:07] <Vaevictus> probably wouldn't even be asking but my ruby books are at my house, and i'm rusty :D
[01:28:47] <Vaevictus> i wonder if i shouldn't convert the arrays of hashes into hashes of hashes
[01:28:49] <ccooke> Hmm. Probably the thing that would be easiest to read in six months when you have forgotten the why would be either a method turning the CSV into an AD-like hash, then something to diff the hashes? 
[01:28:51] *** Quits: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-8703-960c-aac7-5a22.ip6.gigabit.dk) (Remote host closed the connection)
[01:29:11] *** Joins: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-cfa8-be86-5a22-ee27.ip6.gigabit.dk)
[01:29:19] <ccooke> Or something that turns both into an idealised form, and again doing the comparison there
[01:29:30] <ccooke> You're basically only after the diff, right?
[01:29:33] <weaksauce> yeah that might make more sense
[01:29:35] <weaksauce> later
[01:29:35] <Vaevictus> yeah
[01:29:41] <weaksauce> make a class of #thing
[01:29:46] <weaksauce> build thing up 
[01:29:55] <Vaevictus> trying to determine which AD users need to be added to updox and which updox users who have been deleted from AD need to be deleted from updox
[01:30:41] <weaksauce> what is the commonality?
[01:30:49] <Vaevictus> just the name of the user.
[01:30:55] <weaksauce> just a username?
[01:30:58] <Vaevictus> and i suppose the email address.
[01:31:04] <ccooke> Vaevictus: https://github.com/liufengyun/hashdiff (or something like it) would be a good basis, if you have something comparable on both sides
[01:31:04] <weaksauce> just throw that in an array
[01:31:16] <weaksauce> and use the name with -  and intersect
[01:31:22] <Vaevictus> the AD mail attribute should match the updox emailaddr attribute
[01:31:23] <ccooke> yeah
[01:31:36] <weaksauce> and is it a oneoff script or a thing you need in the future
[01:31:44] <ccooke> the *simple* answer is a - b and b - a for those
[01:31:52] <Vaevictus> i'm gonna run it hourly and email me if there's work to do
[01:32:05] <ccooke> Vaevictus: https://xkcd.com/1205/ :-D
[01:32:18] <Vaevictus> almost, ccooke 
[01:32:32] <weaksauce> hah yeah i'd just dump the usernames into an array and do a diff with -
[01:32:38] <ccooke> weaksauce: yeah
[01:32:53] <weaksauce> maybe normalize it to downcase first
[01:32:54] <Vaevictus> the problem is that HIPAA is involved, so there's privacy issues... and also, different people doing deletions and additions on either system.
[01:33:00] <ccooke> The least *complex* code is a good principle for systems code.
[01:33:32] <Vaevictus> ahh...
[01:33:50] <Vaevictus> reduce each side to ONLY the relevant data in the sort and use that.  sounds so much better :D
[01:33:52] <ccooke> Vaevictus: How do the privacy issues affect the script you're writing? I presume you have the privileges to extract and process the data?
[01:34:00] <ccooke> Vaevictus: yes, exactly
[01:34:24] <Vaevictus> ccooke: if someone fires a person and deletes them from AD but fails to delete them from updox, they could see sensitive information post-employment 
[01:35:02] <ccooke> Vaevictus: That's a reason why the script (and the work it helps with) is important. It's not actually a direct concern in writing the code
[01:35:31] <weaksauce> it's a direct concern to get it completely right though
[01:35:36] <ccooke> oh yes
[01:36:51] <Vaevictus> which why i'm going to try and write all the logical bits of the diagram and compare the bits so that they add up to the whole, as part of this
[01:37:15] *** Joins: yark (~yarkt@2806:10b7:3:633e:b959:446f:19e:956a)
[01:37:42] <Vaevictus> updox users + missing users - yet-to-be-deleted users should equal current AD users
[01:38:17] <Vaevictus> we'll see
[01:42:06] *** Quits: yark (~yarkt@2806:10b7:3:633e:b959:446f:19e:956a) (Quit: Leaving)
[01:43:04] <Vaevictus> oh... some of my updox "users" in my dump are not users, they have data in the email field but no @ ... what should i use to test that?
[01:43:31] <Vaevictus> (users that i'm concerned with will have an @ in the email)
[01:44:04] <Vaevictus> foo["key"]["value"].include?"@" 
[01:44:05] <Vaevictus> ?
[01:47:16] <ccooke> Vaevictus: Possibly filter them out - foo.select { |u| u["key"]["value"].include? '@' }
[01:48:02] <ccooke> Thinking in terms of maintenance - a chain of filters can be quite good in the sense it's easy to add another filter to the end later, if you need one
[01:48:39] <ccooke> Vaevictus: You might want to consider writing some tests for this, though, given the importance of accuracy
[01:50:14] <Vaevictus> yeah, i'm building a chain of selects and honestly, several lists... whenever i diverge from one list to two, i'm keeping both parts and ensuring i still have all the pieces accounted for.
[02:01:55] *** Joins: TCZ (~tcz@91.150.178.124)
[02:14:17] <weaksauce> are you sure they are not valid users?
[02:17:00] *** Joins: apple (~apple@99-46-74-248.lightspeed.austtx.sbcglobal.net)
[02:17:16] *** Parts: apple (~apple@99-46-74-248.lightspeed.austtx.sbcglobal.net) ()
[02:17:19] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[02:22:56] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[02:46:17] *** Quits: geewiz (~geewiz@user/geewiz) (Ping timeout: 240 seconds)
[03:27:30] *** Parts: aphysically (~aphysical@user/aphysically) ()
[03:40:37] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 240 seconds)
[03:42:35] *** Joins: postmodern (~postmoder@user/postmodern)
[03:44:37] *** Quits: ur5us_ (~ur5us@2406:e002:6c7b:2301:1b18:b746:eaa9:fad6) (Ping timeout: 240 seconds)
[03:50:34] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (Quit: My Ex-Girlfriend once told me: I'm not a slut, I'm just popular)
[03:51:14] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[03:52:21] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[05:58:47] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[06:08:43] *** Joins: huma (~huma@202.44.216.123)
[07:06:14] *** Quits: hololeap (~hololeap@user/hololeap) (Quit: Bye)
[07:11:17] *** Quits: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Ping timeout: 240 seconds)
[08:06:51] *** Quits: huma (~huma@202.44.216.123) (Ping timeout: 256 seconds)
[08:36:59] *** Joins: jetchisel (jetchisel@user/jetchisel)
[08:57:29] *** Joins: bluedust (~bluedust@103.160.233.58)
[09:11:37] *** Quits: yxhuvud (~quassel@2001:1ba8:1424:ea00:4bec:e763:2f71:1d7f) (Ping timeout: 268 seconds)
[09:45:37] *** Joins: yxhuvud (~quassel@2001:1ba8:1424:ea00:b259:89c5:b047:784c)
[09:59:36] *** Joins: grvgr (uid165202@id-165202.uxbridge.irccloud.com)
[10:05:50] *** Quits: postmodern (~postmoder@user/postmodern) (Remote host closed the connection)
[10:21:07] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[10:22:26] *** Joins: roadie (~user@2a02:8108:ec0:1427:1875:6faf:33dc:867b)
[10:22:38] *** Joins: sagax (~sagax_nb@user/sagax)
[10:26:59] *** Joins: huma (~huma@49.230.244.133)
[10:33:54] *** Quits: goepsilongo (~goepsilon@2806:263:c404:8000:f42f:2a6e:3c81:2519) (Quit: Textual IRC Client: www.textualapp.com)
[10:48:55] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[10:55:42] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[10:56:43] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[10:57:07] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Remote host closed the connection)
[10:57:29] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[11:20:26] *** Quits: infernix (~nix@155.137.21.90) (Quit: ZNC - http://znc.sourceforge.net)
[12:09:50] *** Quits: huma (~huma@49.230.244.133) (Ping timeout: 268 seconds)
[12:28:36] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[12:33:44] *** Quits: bluedust (~bluedust@103.160.233.58) (Remote host closed the connection)
[12:40:08] *** Quits: aeris (~aeris@user/aeris) (Remote host closed the connection)
[12:40:22] *** Joins: aeris (~aeris@user/aeris)
[12:49:10] *** Quits: grvgr (uid165202@id-165202.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:13:25] *** Joins: bluedust (~bluedust@103.160.233.58)
[13:34:19] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.28) (Ping timeout: 268 seconds)
[13:41:09] *** Joins: moldorcoder7 (~moldorcod@37.120.143.29)
[13:47:57] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:00:33] *** Joins: Rounin (~david@84.212.130.215)
[14:11:41] *** Quits: bluedust (~bluedust@103.160.233.58) (Remote host closed the connection)
[14:32:10] *** Quits: aeris (~aeris@user/aeris) (Remote host closed the connection)
[14:32:23] *** Joins: aeris (~aeris@user/aeris)
[14:39:45] *** Quits: roadie (~user@2a02:8108:ec0:1427:1875:6faf:33dc:867b) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[14:49:22] *** Joins: geewiz (~geewiz@user/geewiz)
[14:56:29] *** Joins: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie)
[15:15:12] *** Joins: bluedust (~bluedust@103.160.233.58)
[15:17:57] *** Quits: moldorcoder7 (~moldorcod@37.120.143.29) (Ping timeout: 240 seconds)
[15:21:04] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[15:23:55] *** Quits: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-cfa8-be86-5a22-ee27.ip6.gigabit.dk) (Quit: Leaving)
[15:34:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:36:23] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:36:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[15:38:15] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:53:18] *** Joins: Pixi_ (~Pixi@user/pixi)
[15:55:25] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 240 seconds)
[15:57:45] *** Quits: Pixi_ (~Pixi@user/pixi) (Ping timeout: 256 seconds)
[16:00:30] *** Joins: bluedust_ (~bluedust@117.222.187.193)
[16:04:10] *** Quits: bluedust (~bluedust@103.160.233.58) (Ping timeout: 268 seconds)
[16:08:35] *** Joins: bluedust (~bluedust@194.37.96.152)
[16:11:49] *** Quits: bluedust_ (~bluedust@117.222.187.193) (Ping timeout: 240 seconds)
[16:24:49] *** Quits: bluedust (~bluedust@194.37.96.152) (Remote host closed the connection)
[16:26:22] *** Joins: abhijit (~abhijit@user/abhijit)
[16:27:05] <abhijit> Hi All. I have mix of CSvs with and without headers. how can I iterate over them all , and skip reading headers alltogether where it's present? do nothing where its absent?
[16:28:31] <abhijit> got it.
[16:30:12] <abhijit> actually.... i was looking for some inbuilt method in case i am missing it. 
[16:53:55] *** Joins: bluedust (~bluedust@194.37.96.152)
[17:41:58] *** Quits: abhijit (~abhijit@user/abhijit) (Quit: Leaving)
[17:49:17] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[17:55:34] <libsys> how do you handle types for development/documentation purposes on ruby? 
[17:56:46] <libsys> I've seen ruby 3 is doing some progress on this kind of things... but I'm using YARD and find it perfectly well for my purposes
[18:03:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[18:06:05] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[18:06:26] <nakilon> meh, no one helped him; there WAS an argument to eat the headers when reading CSV
[18:07:54] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Client Quit)
[18:48:12] <Vaevictus> hmm... i'm trying to use net-ssh ... apparently an upgrade moved my KEX I need into the "SUPPORTED BUT NOT DEFAULT ALLOWED" section (yay ancient cisco gear) ... 
[18:48:35] <Vaevictus> i can't quite grok the way to properly add the deprecated KEX to the allowed list ... (i don't really want to edit the library)
[18:59:44] <Vaevictus> nm... had to find a more up-to-date man page... and add "append_all_supported_algorithms: true"
[19:04:38] *** Quits: smp (~smp@user/smp) (Quit: ZNC 1.8.2 - https://znc.in)
[19:06:30] *** Joins: smp (~smp@user/smp)
[19:11:39] <nakilon> append_all_supported_algorithms sounds like a cool feature
[19:11:50] <nakilon> like append_solutions_to_all_problems
[19:29:01] *** Joins: huma (~huma@202.44.216.123)
[19:32:24] *** Joins: Pixi (~Pixi@user/pixi)
[19:36:39] *** Joins: goepsilongo (~goepsilon@2806:263:c404:8000:1841:9986:6b2b:10e6)
[20:25:25] *** Quits: TomyLobo (~TomyLobo@p200300e80f006700814dd77ec0a9f818.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[20:29:31] *** Joins: bluedust_ (~bluedust@89.238.143.232)
[20:29:57] *** Quits: bluedust (~bluedust@194.37.96.152) (Ping timeout: 240 seconds)
[20:32:35] *** Quits: huma (~huma@202.44.216.123) (Ping timeout: 256 seconds)
[20:33:39] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Quit: %bye mirc%)
[20:33:58] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[20:43:46] <Vaevictus> nakilon: except it's only adding in a couple of insecure algorithms :D
[20:44:06] <Vaevictus> previously supported, functional, deprecated, to be removed in 7.0
[20:56:45] *** Joins: infernix (nix@spirit.infernix.net)
[21:38:17] *** Quits: bluedust_ (~bluedust@89.238.143.232) (Remote host closed the connection)
[22:04:43] *** Joins: goldfish (~goldfish@user/goldfish)
[22:04:46] *** Joins: ur5us_ (~ur5us@203.86.198.200)
[22:09:02] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[22:25:19] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[22:30:07] *** Joins: goldfish (~goldfish@user/goldfish)
[22:43:37] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[22:43:46] *** Quits: ur5us_ (~ur5us@203.86.198.200) (Ping timeout: 268 seconds)
[22:47:39] *** Joins: goldfish (~goldfish@user/goldfish)
[22:48:09] <havenwood> libsys: Steep
[22:48:23] <havenwood> libsys: or Sorbet is the other popular option
[22:48:57] <havenwood> https://github.com/soutaro/steep
[23:02:03] *** Joins: ur5us_ (~ur5us@203.86.198.200)
[23:24:51] *** Quits: ur5us_ (~ur5us@203.86.198.200) (Ping timeout: 256 seconds)
