[00:07:53] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 265 seconds)
[00:08:08] *** Joins: derelict (~derelict@user/derelict)
[00:11:03] *** Joins: selwyn (~selwyn@user/selwyn)
[00:12:46] *** Quits: treflip (~user@95.79.32.99) (Quit: good night)
[00:15:46] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[00:17:58] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[00:32:55] *** Quits: sm2n (~sm2n@user/sm2n) (Read error: Connection reset by peer)
[00:33:17] *** Joins: sm2n (~sm2n@user/sm2n)
[01:02:06] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[01:30:16] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Quit: bbl)
[01:31:30] *** Joins: selwyn (~selwyn@user/selwyn)
[01:34:02] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:34:29] *** Joins: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com)
[01:39:24] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Ping timeout: 272 seconds)
[01:59:30] <selwyn> i am worried about my computer :( since i replaced the mounting screw, the fans go like crazy when i play fortnite
[01:59:58] <selwyn> and i have to keep it on its side otherwise it won´t starty
[02:23:23] <sm2n> zig is still very much not stable
[02:23:46] <sm2n> they're in the process of redoing the stdlib
[02:24:59] <waleee> well. I think andrewrk has stated that it's the self-hosted stage2 compiler that's the focus
[02:25:07] <waleee> (for the next release)
[02:25:43] <sm2n> yeah, and then the stdlib is the main focus for the release after that iirc
[02:25:58] <sm2n> but they're working on it on the side rn
[02:28:05] <waleee> the last 7 days of commits have been on astgen and/or the zld-linker for macos
[02:28:40] <waleee> with some occasional other stuff
[02:38:21] *** Quits: hayley (~theemacss@user/hayley) (Remote host closed the connection)
[02:38:27] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (Write error: Connection reset by peer)
[02:39:15] *** Joins: Gnuxie (~gnuxie@user/gnuxie)
[03:08:42] *** Quits: [deleted] (~zmv@user/notzmv) (Ping timeout: 272 seconds)
[03:14:43] *** Joins: hayley (~theemacss@user/hayley)
[03:17:23] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 244 seconds)
[03:19:36] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[03:29:58] *** Quits: elflng (~elflng@5.28.137.182) (Ping timeout: 258 seconds)
[03:47:39] *** Joins: elflng (~elflng@5.28.137.182)
[04:05:10] <hayley> https://www.graalvm.org/reference-manual/llvm/ GraalVM throwing hands
[04:05:11] -ixelp- GraalVM
[04:08:21] *** Quits: Alfr (~Alfr@user/alfr) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[04:08:26] *** Joins: Alfr (~Alfr@user/alfr)
[04:18:11] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[04:21:26] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[04:26:14] *** Quits: MichaelRaskin (~MichaelRa@ipb21b6221.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[04:41:44] <dave0> time for a walk! bbl
[04:42:01] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[04:43:07] <hayley> https://www.youtube.com/watch?v=4Kv0yLg4LBQ
[04:43:07] -ixelp- Airlane (Remastered 2009) - YouTube
[04:53:55] *** Quits: random-nick (~random-ni@87.116.181.229) (Ping timeout: 258 seconds)
[05:17:13] * hayley writes an email
[05:17:34] <hayley> "*quotes where the lecture notes mention Maven* In hindsight I feel misled by these statements, as we discussed how the VS Code, well, say "implementation" of Maven is not entirely compatible with the Apache implementation that is associated with the name Maven. I understand that it would be more of a hassle to state that only most of the features of Maven will work, moreso when it is not expected that any configuration files would be changed,
[05:17:34] <hayley> but this led me to the false deduction that there would be no problems would I test using the Apache implementation."
[05:17:44] <hayley> "I should also note that <project partner> was unable to build anything before any code generation was used in the assignment, which was only enabled in the last week. In any case, thank you for organising a meeting, and I apologise for having a mess that we needed to meet for."
[05:18:42] *** Joins: notzmv (~zmv@user/notzmv)
[05:40:40] <hayley> Huh, V ended up using Boehm for the non-autofreeable objects? This makes it less of a meme and something sensible like e.g Swift but with a reasonable strategy (i.e. one that isn't refcounting).
[06:03:24] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 268 seconds)
[06:04:01] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[06:26:01] <hayley> https://github.com/vlang/vinix wtf the V OS wasn't a joke
[06:26:01] -ixelp- GitHub - vlang/vinix: Vinix is an effort to write a modern, fast, and useful operating system in the V programming langu [...]
[06:43:30] <hayley> gilberth: https://github.com/no-defun-allowed/wasm2ps
[06:43:30] -ixelp- GitHub - no-defun-allowed/wasm2ps: ruin the sanctity of your printer with ONE WEIRD TRICK
[06:55:30] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[07:00:45] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:01:00] *** Quits: lucf117 (~lucf117@user/lucf117) (Remote host closed the connection)
[07:04:45] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 256 seconds)
[07:08:26] *** Joins: lad (~lad@user/lad)
[07:18:15] <dave0> maw
[07:19:51] <hayley> Hey dave0
[07:20:14] <dave0> maw hayley 
[07:31:42] <hayley> https://www.youtube.com/watch?v=6P4ELM0nB9M
[07:31:42] -ixelp- Messages (Remastered) - YouTube
[07:40:24] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[07:41:02] *** Joins: derelict (~derelict@user/derelict)
[07:43:59] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[07:47:37] <hayley> https://www.youtube.com/watch?v=4mLr4KkjOxg
[07:47:38] -ixelp- 21st Century Sussoid Baka - YouTube
[09:01:15] <gilberth> What kind of programming language is V?
[09:01:34] <hayley> Go but worse.
[09:03:03] <hayley> Aha, memoizing DERIVATIVE and NULLABLE gets me down to 30ms to construct a (pointless) DFA for a 26 character literal RE.
[09:11:27] <gilberth> lol
[09:12:09] <hayley> Yes, SBCL does not like :test 'equal hash tables.
[09:12:13] <gilberth> Memorize just nullable, have a NULLABLE-P, too. In my implementation it's a cache slot in the RE struct.
[09:13:14] <hayley> Suppose I should use slots, sure. And I now decided that everything is thread-local so it'd be no problem.
[09:14:01] <gilberth> Why do most libraries have bad taste? It's EXTERNAL-PROGRAM:START, why not RUN-PROGRAM like it always was? And I can't really :USE that package.
[09:14:58] <hayley> If you're looking at wasm2ps, note that not even I am following the project notifications.
[09:15:01] <gilberth> No wasm2wat for me. :-( It says: "fatal error: wasm.h: No such file or directory"
[09:15:11] <hayley> ):
[09:16:18] <gilberth> I doubt that gcc-11.1 would make difference. [gcc-4.9 default here.]
[09:16:27] <hayley> What is hash consing without a hash table? Slot consing?
[09:16:49] <gilberth> Slot consing?
[09:17:39] <gilberth> I am disappointed as I wanted to play with WASM in PS. On my printer too, but it doesn't talk to me, still.
[09:18:07] <hayley> Well, there is no implementation for anything that touches memory, only integers. /me wonders if that means wasm2ps is Turing-incomplete.
[09:18:37] <gilberth> There is no wasm.h in the repo at all. *sigh*
[09:18:40] <hayley> With mere naturals you could invent a representation for a tape, sure, but I guess we only have word-size integers.
[09:19:38] <gilberth> GS has an array size limit of 65535. Correct: 2^16 - 1
[09:20:45] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 256 seconds)
[09:20:56] <gilberth> hayley: How did you install wasm2wat?
[09:21:11] <hayley> Some package here. Let me check...
[09:21:26] <gilberth> Pre-packaged?
[09:21:42] <hayley> Handy site: <https://command-not-found.com/wasm2wat>
[09:21:42] -ixelp- command-not-found.com – wasm2wat
[09:21:52] <hayley> Indeed.
[09:22:01] <gilberth> Heh, nice domain name.
[09:23:14] <gilberth> Though not helpful.
[09:25:19] <gilberth> I could dig Debian repositories for sources.
[09:26:30] * hayley misses having a working clim.flamegraph
[09:29:11] <gilberth> hayley: Sure it will be Turing complete. At least as Turing complete as any machine could be. When we have no arrays/memory, just keep the whole [fixed size] tape in lexicals, one for each memory word. Use switch/case for read and write. Done.
[09:29:21] <hayley> Sure.
[09:29:42] <gilberth> CLOSOS on your printer, when?
[09:35:15] <hayley> How slow do you want CLOSOS?
[09:35:58] <gilberth> I was hoping that your compiler would make up for that.
[09:36:06] <hayley> No, my compiler stinks.
[09:36:16] <gilberth> Toy Lisp in PS isn't too slow.
[09:38:03] *** Joins: notzmv (~zmv@user/notzmv)
[09:38:37] <hayley> I got a function list, but the flame graph zoom is broken.
[09:39:14] <gilberth> What is a flame graph?
[09:39:24] <hayley> USED-TAGS and TAGS stick out. But at least those can be computed when the RE objects are made.
[09:40:26] <hayley> A visual representation of profiler output which is easier to draw conclusions from rather than the usual SB-SPROF output, e.g. http://www.brendangregg.com/FlameGraphs/cpu-mysql-updated.svg
[09:43:04] <aeth> gilberth: I mean, it's called PRINT
[09:43:07] <aeth> might as well print it
[09:43:22] <aeth> in fact, WRITE can just be hand-written
[09:43:55] <aeth> just slowly beep and write down the output based on transcribing it
[09:43:56] <hayley> https://www.reddit.com/r/LispMemes/comments/ga88ki/write_common_lisp_hyperspec_gang_pretty_very/
[09:43:57] -ixelp- (write "Common Lisp Hyperspec Gang" :pretty :very) : LispMemes
[09:44:22] <gilberth> aeth: ?
[09:44:28] <hayley> gilberth: https://i.redd.it/kfueo0n1be871.jpg
[09:46:01] <aeth> gilberth: <@gilberth> CLOSOS on your printer, when?
[09:46:35] <aeth> so effectively just https://en.wikipedia.org/wiki/Teleprinter I guess
[09:47:06] <gilberth> BTW Who broke completion in bash? Drives me crazy.
[09:49:33] <dave0> time for a nap!
[09:50:49] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[09:53:46] <hayley> 23ms now after caching USED-TAGS and TAGS.
[09:54:07] <gilberth> wabt sources from the Debian repo built. Now wasm2wat says: "0000004: error: bad magic value"
[09:54:16] <hayley> And I figured out how to use the new clim.flamegraph so I can actually tell what's going on now.
[09:54:47] <hayley> You sure you gave it a binary WASM module?
[09:55:39] <gilberth> I said: clang --target=wasm32-unknown-wasi -O3 -c fib.c # As hayley said.
[09:55:48] <hayley> Gotcha.
[09:56:21] <hayley> You sure you ran it on fib.o and not fib.c?
[09:56:23] <gilberth> I get an .o file, which is an ELF file of unknown architecture.
[09:56:44] *** Joins: Retropikzel (~Retropikz@2001:999:202:71f:2024:2d45:1a41:e4aa)
[09:57:01] <gilberth> hayley: I am not that stupid.
[09:57:06] <hayley> Weird, file tells me I have "fib.o: WebAssembly (wasm) binary module version 0x1 (MVP)"
[09:57:46] <hayley> gilberth: Sorry. But my instructor couldn't tell the difference between the words "build" and "package". /me self adjusts
[09:59:43] <hayley> Down to 20ms now; hottest now is UNIQUE-TAGS which I obviously cannot memoize.
[10:02:09] <gilberth> So, perhaps my clang is not doing what it should. 'lld' does not recognize that .o file, either.
[10:03:45] * hayley attempts to macroexpand the pattern matching macro in %SIMILAR and wonders if it is clever enough to signal early if the types differ.
[10:03:56] <gilberth> But I can pass anything to --target and it doesn't complain. Strange.
[10:03:57] <hayley> https://www.youtube.com/watch?v=fyKWArpq-Fk
[10:03:57] -ixelp- Are 'Friends' Electric? - YouTube
[10:06:08] <gilberth> *sigh* Last I tried to build clang and llvm, it needed >60GB disk space and trashed like crazy. Seems like 32GB RAM is not enough. :(
[10:07:02] <gilberth> hayley: Couldn't you have picked ARMv7 as your input? Or Thumb perhaps.
[10:07:37] <hayley> gilberth: No, not W E B S C A L E enough.
[10:08:03] <gilberth> Ok. If you wish.
[10:09:15] <hayley> It was an extension of a long-going joke with Gnuxie when she just found out about PS. I said "Rust doesn't run on a printer but PS does. So much for an 'embedded' language." and then I decided to port their favourite BC over for a joke.
[10:11:02] <gilberth> Yes, and I wanted to play with that. Perhaps I could compile XLISP or my own ulisp to wasm and then to PS. Would be fun. But I would need to find some libc.
[10:11:41] <hayley> Hm, is my DFA maker O(n^2) now? /me also thinks that UNIQUE-TAGS should at least memoize if REs have tags now.
[10:12:05] <gilberth> No, it's exp.
[10:12:13] <hayley> For a string of n characters.
[10:12:55] <gilberth> Constant? Then O(n^2) would be poor. But I don't know what my implementation has to say to that.
[10:13:14] <hayley> Yes. Owens never mentioned how you memoize things.
[10:13:37] <gilberth> I believe he did.
[10:14:04] <hayley> Not like "memoize the nullable and derivative functions or you will lose your shit during DFA generation"?
[10:14:53] <gilberth> Would Owen need to do that? *scratcheshead*
[10:15:41] <hayley> "need" is a strong word when it is only for performance. But I guess he might still do a lot of redundant derivatives and nullables.
[10:16:06] <hayley> Er, no, it looks linear to me. I just don't seem to be good at estimating string length that I type in to test.
[10:16:10] <gilberth> Anyhow, for each RE, I keep a version of it stripped of all tags in a cache^Wslot. Speeds up the reducible finder quite a bit.
[10:17:04] <gilberth> As stripped versions not #'eq => no unification possible at all.
[10:17:20] <hayley> Right, that's a good idea.
[10:17:34] <gilberth> Obvious. /me shrugs.
[10:19:21] <gilberth> BTW, I beat libc, even for one-time use. And my implementation is correct and does not crash, report wrong matches, or hangs.
[10:19:48] <hayley> Nice.
[10:20:33] <gilberth> Reminds me, that I should run my BFI test suite again. I have time ...
[10:21:29] <gilberth> But as $AMD was climbing today, I could effort a new machine. Dunno what CPU I should get, though.
[10:21:43] <hayley> It's some 30% faster on an 80 character string which is neat.
[10:23:08] <gilberth> I want good single thread performance and a lot of RAM. Perhaps a disk array again. *sigh*
[10:23:34] <hayley> https://www.youtube.com/watch?v=82uPvUL2SsI
[10:23:34] -ixelp- [YTP] Billy Mays Sells Green Now but is Unable to Control his Hatred for the Environment - YouTube
[10:26:56] <gilberth> My lawn always is green, more moss than grass, though. And how is that relevant?
[10:27:42] <hayley> Who said it was relevant?
[10:27:58] <gilberth> It was implied, not?
[10:28:05] <hayley> Okay, seems I have memoized everything of interest as now I just have DERIVATIVE and %SIMILAR at the top of the profiler output.
[10:40:39] <hayley> Right, down to 15ms. Funny that I started at 140ms.
[10:45:21] *** Quits: Retropikzel (~Retropikz@2001:999:202:71f:2024:2d45:1a41:e4aa) (Quit: Leaving)
[10:47:54] *** Joins: shka (~herr@109.231.62.239)
[10:48:12] * hayley uploaded an image: (57KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/JDfAOaeBVcdDuYDWDOrEjwgb/ab*.png >
[10:48:25] <hayley> ab* still works. /me continues to be uninterested in de-duplicating the end states.
[10:49:09] <hayley> Distinct lack of assignments from P here. sigh
[10:49:14] <hayley> I stand corrected.
[10:50:17] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 256 seconds)
[11:11:24] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[11:12:37] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[11:14:01] * hayley had a broken cache.
[11:14:17] <gilberth> I rather want direct stream buffer access, do I need to write a spec?
[11:14:53] <gilberth> CMUCL has that internally.
[11:15:05] <hayley> Perhaps so.
[11:15:49] <gilberth> Calling a GF, or the GF, for each byte/octet/character/rune/whatnot is too damn expensive.
[11:16:23] <hayley> Make faster GFs?
[11:16:38] <gilberth> Tricky part make this work with Gray streams, thus spec it in a compatible fashion.
[11:17:32] <shka> well, beach works on faster omitting GF dispatch, but that is still in the future
[11:17:36] <gilberth> hayley: I want no function call from within my lexer, say, at all. Nothing can beat an optimized AREF.
[11:17:36] <hayley> https://www.youtube.com/watch?v=WSDRnXBjeR4
[11:17:37] -ixelp- Emerson, Lake & Palmer - Live at Royal Albert Hall - 1992 [Full Concert] - YouTube
[11:19:31] <gilberth> And how would you omit dispatch, when you know nothing about the stream? I guess on the spot caches would help, or pulling the dispatch out of loops.
[11:20:32] <hayley> The approach I used in my stupid grep clone is that the client can provide a code generator function which generates the form, shifting dispatch to compile-time.
[11:20:32] <shka> gilberth: no, this would need the precise type to work
[11:20:51] <gilberth> See. Won't help at all.
[11:21:05] <hayley> So instead of (AREF vector position) we generate (CFFI:FOREIGN-AREF :CHAR vector position) or whatever it is.
[11:21:36] <hayley> (MEM-AREF vector :CHAR position)
[11:21:49] <gilberth> CFFI? And how would that work with any newly defined Gray stream?
[11:22:44] <hayley> It works if you mmap the file.
[11:23:22] <gilberth> Which file?
[11:24:17] <hayley> April uses a batch compiler, right?
[11:24:48] <gilberth> No, but I could perhaps hide the REPL well.
[11:25:17] <hayley> Hm.
[11:26:27] <gilberth> However: To be compatible to C++ I could demand that all sources are compiled in one batch, even if you changed a single line.
[11:30:36] <gilberth> Anyhow, milady, there is no file to mmap, but an extension to the Gray protocol to give me a buffer, a fill pointer, a read pointer, and an underflow function, would be all which would be needed. The default method could just give you a one-element buffer in the worst case. For the best case a default buffer implementation is FUNDAMENTAL-INPUT-STREAM or what ever that is called.
[11:33:30] <gilberth> A file octet stream could mmap, if it wishes. Though I never particular liked that.
[11:35:56] <gilberth> NFS servers could reboot, USB sticks pulled.
[11:37:17] <shka> https://www.youtube.com/watch?v=SMG1WCVff0I
[11:37:17] -ixelp- Blue Oyster Cult: ME 262 - YouTube
[11:51:50] <hayley> Oh, I am an idiot. I used (if (nullable r) (merge-sets ...) (derivative-classes r)) to compute derivative-classes of (join r s) and of course nullable always returns a RE and not a Boolean.
[11:56:12] <hayley> 3.93ms now that we compute derivative classes properly.
[12:03:30] *** Joins: MichaelRaskin (~MichaelRa@ipb21b6221.dynamic.kabel-deutschland.de)
[12:03:30] *** ChanServ sets mode: +o MichaelRaskin
[12:18:07] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[12:23:44] <gilberth> hayley: What is your overall speedup now?
[12:24:04] <hayley> 39x or so?
[12:24:26] <gilberth> What's your RE?
[12:24:58] <hayley> "Bombers fly at zero feet." And the speedup is compile time only.
[12:25:17] <hayley> And I guess we wrap in alpha^Wiota and grep.
[12:26:15] <hayley> Okay, something stupid is happening. Unless I reload tag-sets.lisp somehow I miss assignments.
[12:31:30] <gilberth> And w/o iota?
[12:31:51] <hayley> Come on, one thing at a time here.
[12:34:11] <gilberth> I just wanted to compare times. I have no iota anymore.
[12:36:01] *** Joins: terpri (~terpri@user/terpri)
[12:36:01] *** terpri is now known as robin
[12:45:46] *** Joins: selwyn (~selwyn@user/selwyn)
[12:45:48] <gilberth> Anyhow, I get around 60us to 100us, hard to tell. But this is grep only. ~64KB consed.
[13:01:17] <gilberth> And it seems to be almost O(n).
[13:07:30] *** Quits: robin (~terpri@user/terpri) (Ping timeout: 240 seconds)
[13:09:00] *** Joins: robin (~terpri@user/terpri)
[13:11:50] *** Joins: pjb (~pjb@user/pjb)
[13:39:37] <hayley> Up to 5ms now. But it's still way faster than it was before today.
[13:47:41] <hayley> gilberth: Again I agree now that replicating the history in iota was a red herring. DFA looks fine without it, though I still cannot figure what I messed up in the load order.
[13:49:30] *** Quits: robin (~terpri@user/terpri) (Ping timeout: 240 seconds)
[13:50:24] <hayley> I don't get complaints about redefining functions from SBCL so I am out of ideas :(
[13:57:36] *** Joins: robin (~terpri@user/terpri)
[14:14:15] <hayley> https://www.youtube.com/watch?v=KSrSA0FMuTY
[14:14:15] -ixelp- In the Court of the Crimson King (Full album COVER) - YouTube
[14:32:52] *** Joins: derelict (~derelict@user/derelict)
[14:43:30] *** Quits: robin (~terpri@user/terpri) (Ping timeout: 240 seconds)
[15:08:21] *** Joins: terpri (~terpri@user/terpri)
[15:09:21] *** Quits: terpri (~terpri@user/terpri) (Remote host closed the connection)
[15:09:39] *** Joins: terpri (~robin@user/terpri)
[15:09:57] *** terpri is now known as robin
[15:12:18] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[15:36:18] *** Joins: treflip (~user@95.79.32.99)
[15:40:25] *** Joins: random-nick (~random-ni@87.116.165.220)
[16:36:14] *** Joins: Alfr (~Alfr@user/alfr)
[16:44:12] *** Quits: treflip (~user@95.79.32.99) (Read error: Connection reset by peer)
[17:04:30] * hayley uploaded an image: (89KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/VkLTlWDfzmbkfOTZGXglmULm/directness-principle.jpeg >
[17:12:43] *** Joins: notzmv (~zmv@user/notzmv)
[17:46:30] *** Quits: lad (~lad@user/lad) (Ping timeout: 252 seconds)
[17:59:24] *** Joins: treflip (~user@95.79.32.99)
[18:03:47] *** Quits: pjb (~pjb@user/pjb) (Ping timeout: 256 seconds)
[18:06:52] *** Quits: Alfr (~Alfr@user/alfr) (Read error: Connection reset by peer)
[18:07:14] *** Joins: Alfr (~Alfr@user/alfr)
[18:09:51] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:59:19] *** Joins: selwyn_ (~selwyn@user/selwyn)
[19:02:24] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 252 seconds)
[19:27:01] *** Quits: selwyn_ (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[19:34:48] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 272 seconds)
[19:46:21] *** Quits: cond (~example@user/aeth/bot/cond) (Ping timeout: 256 seconds)
[19:47:51] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 258 seconds)
[19:48:58] *** Joins: aeth (~aeth@user/aeth)
[19:51:46] *** Joins: selwyn (~selwyn@user/selwyn)
[19:55:57] <aeth> that's the second 1 second power outage I've had so far this year, if not third; I'm going to need to get a UPS
[19:56:51] <shka> heh
[19:57:12] <shka> my family live in the village with the power line going trough the forest
[19:57:47] <aeth> It's not trees (this house used to be impacted by trees, many years ago)
[19:57:47] <shka> it used to blackout when there was snow or windy weather
[19:57:59] <aeth> it's just that any heat has a high percentage chance of losing power
[19:58:12] <aeth> (or snow in the case of Texas, I guess)
[20:07:51] <selwyn> what are the weak points of a power grid
[20:16:06] *** Quits: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[20:17:08] <shka> https://www.youtube.com/watch?v=wwia7N1kTv4
[20:17:08] -ixelp- Dido - Thank you (Slowed + Reverb) - YouTube
[20:34:29] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[20:34:54] *** Joins: selwyn (~selwyn@user/selwyn)
[20:42:28] *** Joins: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net)
[20:48:22] *** Joins: pjb (~pjb@user/pjb)
[20:53:22] *** Quits: treflip (~user@95.79.32.99) (Remote host closed the connection)
[21:11:09] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:44:42] *** Joins: lad (~lad@user/lad)
[22:09:04] *** Joins: selwyn (~selwyn@user/selwyn)
[22:25:01] *** Quits: pjb (~pjb@user/pjb) (Ping timeout: 256 seconds)
[22:46:18] *** Quits: robin (~robin@user/terpri) (Ping timeout: 240 seconds)
[23:04:36] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[23:22:42] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[23:23:06] <dave0> maw
[23:35:47] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[23:36:33] *** Joins: lad (~lad@user/lad)
[23:56:11] *** Joins: selwyn (~selwyn@user/selwyn)
[23:59:46] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 252 seconds)
