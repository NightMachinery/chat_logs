[00:00:07] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:00:19] <Grinnz> just reinvent the universe
[00:06:40] * GumbyPAN CPAN Upload: Redis-OpenTracing-v0.1.0 by VANHOESEL https://metacpan.org/release/VANHOESEL/Redis-OpenTracing-v0.1.0
[00:06:52] *** Joins: anthk_ (~anthk_@92.176.105.30)
[00:07:27] *** Joins: default__ (~rpath@gateway/tor-sasl/rpath)
[00:07:27] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Read error: Connection reset by peer)
[00:07:40] <gordonfish> LeoNerd: Interesting. I thought ACKs were always passed on, at least when using low level (C-ish) socket functions.
[00:09:03] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Ping timeout: 276 seconds)
[00:09:43] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[00:10:20] <gordonfish> LeoNerd: I'm curious as to what you are doing that necessitates getting at the ACKs.
[00:10:54] <rewt> doesn't that just signal that the host got the packet, but not necessarily the application running on the host?
[00:13:26] <gordonfish> I had understood that ACKs, SYNs, etc, were parts that firewalls and filters cared about (like netfilter/iptables, ipfw, pf, etc)
[00:19:41] *** Joins: emanuele6 (~emanuele6@37.160.39.209)
[00:19:59] *** Quits: emanuele6 (~emanuele6@37.160.39.209) (Changing host)
[00:19:59] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[00:20:38] *** Joins: CaptainKludge (~eric@66.23.205.226)
[00:21:13] *** Parts: CaptainKludge (~eric@66.23.205.226) ()
[00:26:48] *** Joins: vjuen_ (~Username@ru3.nestormedia.com)
[00:30:31] *** Quits: vjuen (~Username@leased-line-217-21-59-112.telecom.by) (Ping timeout: 268 seconds)
[00:32:24] *** Quits: vjuen_ (~Username@ru3.nestormedia.com) (Read error: Connection reset by peer)
[00:32:36] *** Joins: vjuen_ (~Username@ru3.nestormedia.com)
[00:32:40] *** vjuen_ is now known as vjuen
[00:43:16] <LeoNerd> gordonfish: What part of the BSD sockets API tells me about acks?
[00:43:38] *** Quits: magla (~gelignite@55d4261d.access.ecotel.net) (Quit: Stay safe!)
[00:43:51] <LeoNerd> rewt: Wellyes, that's also part of the problem. The host OS sends ACKs rather than making the application do it
[00:45:20] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 265 seconds)
[00:53:11] *** Joins: Manderson_ (~manderson@45.40.80.170)
[00:55:50] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 260 seconds)
[00:57:40] *** Quits: Medlir (~Medlir@user/medlir) (Ping timeout: 240 seconds)
[00:57:54] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 265 seconds)
[00:58:30] *** Joins: zakame (~zakame@user/zakame)
[01:05:30] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 260 seconds)
[01:06:05] *** Joins: Manderson (~manderson@45.40.80.170)
[01:09:37] <daemon> hey all, I just added $SIG{'INT'} = 'IGNORE'; ... and it worked ctrl-c now won't work, but I actually wanted to do some tidying up before exit, so I tried: $SIG{'INT'} = \&some_func; ... which never calls some_func, what am I missing here?
[01:10:12] <daemon> even, $SIG{'INT'} = sub {print "Caught One!\n"}; does not work
[01:10:21] <daemon> well it never prints anything
[01:11:17] <LeoNerd> Are signals blocked?
[01:11:31] <daemon> nope as I mentioned if I set it to 'IGNORE' its totally happy
[01:11:40] <daemon> it just does not seem to want to call out to functions
[01:11:47] <LeoNerd> That's not what I asked
[01:11:55] <daemon> I assume they are not blocked
[01:11:56] <LeoNerd> What is the process doing elsewise, while you're waiting?
[01:12:00] <daemon> its in sleep
[01:12:07] <LeoNerd> As in, the sleep() call?
[01:12:08] <daemon> yep
[01:12:25] <LeoNerd> I'd be looking at strace then to see what's happening
[01:14:10] <daemon> https://dpaste.org/mhgO
[01:14:11] <Paperbot_> Link title(s): [ dpaste/mhgO (Perl) ]
[01:14:17] <daemon> yep even a small example does exactly the same
[01:14:41] <LeoNerd> So what does strace say?
[01:14:52] <daemon> command not found
[01:14:56] <daemon> let me install it
[01:14:58] <daemon> never realy used it
[01:14:59] <LeoNerd> Well then install i.. yes
[01:15:26] <daemon> ok dokey compiling
[01:16:33] <daemon> right built
[01:17:35] <daemon> https://termbin.com/e51v
[01:19:03] <LeoNerd> Just to check: You know that Ctrl-C sends SIGTERM to the process group, not SIGINT, yes?
[01:19:07] <LeoNerd> So you'll want to catch -that- one
[01:19:14] <LeoNerd> I usually do both
[01:19:33] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[01:20:15] <daemon> yeah I was actually using term originally
[01:20:17] <daemon> then thought it mgiht be int
[01:20:26] <daemon> it makes no difference it still never triggers somehow
[01:20:28] <LeoNerd> I prettymuch always do  $SIG{TERM} = $SIG{INT} = sub { ... };
[01:20:37] <LeoNerd> Are you quite sure you're actually sending the signal, then?
[01:20:48] <LeoNerd> Try kill -TERM PID from another terminal
[01:20:48] <daemon> well I whacked ctrl-c on my keyboard
[01:20:51] <daemon> lete send it manually with kill
[01:21:03] <LeoNerd> Right.. there's about 15 layers of crazy between that and actually sending a signal
[01:21:08] <LeoNerd> Because according to this strace, there wasn't a signal
[01:21:42] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 268 seconds)
[01:22:19] <daemon> that worked
[01:22:25] <daemon> so wait a mo what the heck is ctrl-c doing
[01:22:38] <LeoNerd> Maybe your terminal isn't sending it
[01:22:43] <daemon> it kills the program
[01:22:46] <daemon> so its sending something
[01:23:04] <daemon> and when I did ${SIG} = 'IGNORE';
[01:23:08] <daemon> it could no longer kill it with ctrl-c
[01:23:22] <daemon> $SIG{'INT'} 
[01:23:22] <daemon> even
[01:24:06] <daemon> that was the confusing bit ... ${SIG} = 'IGNORE'; ... I can no longer ctrl-c it from terminal
[01:24:18] <LeoNerd> That does sound highly strange
[01:24:23] <daemon> however if I did $SIG{'INT'} = sub { ... }
[01:24:27] <daemon> it just did nothing totally ignored it
[01:24:30] <daemon> and killed the program
[01:24:56] <emanuele6> same behaviour with: use signal 'handler', sub { print "caught INT"; }, 'INT';
[01:24:58] <emanuele6> strange
[01:25:09] <daemon> oh so you have the same issue?
[01:25:14] <emanuele6> s/signal/sigtrap
[01:25:19] <emanuele6> daemon: yes
[01:25:24] <daemon> what perl?
[01:25:30] <daemon> This is perl 5, version 34, subversion 0 (v5.34.0) built for x86_64-linux
[01:25:34] <emanuele6> v5.34.0'}
[01:25:50] <emanuele6> mine is for x86_64-linux-thread-multi
[01:26:33] <daemon> hmmm do I have any old perls anywhere 
[01:26:37] <daemon> as I am quite sure this used to work totally fine
[01:26:48] * GumbyPAN CPAN Upload: fka9sxOL by SEGOMOS https://metacpan.org/release/SEGOMOS/fka9sxOL
[01:26:48] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Read error: Connection reset by peer)
[01:26:56] <Grinnz> $ perl -E'$SIG{INT} = sub { warn "foo" }; sleep 5'
[01:26:56] <Grinnz> ^Cfoo at -e line 1.
[01:26:58] <Grinnz> wfm
[01:27:07] <LeoNerd> $ perl -E '$SIG{INT} = $SIG{TERM} = sub { say "We got signal!"; }; sleep 10'
[01:27:09] <LeoNerd> WFM
[01:27:15] <LeoNerd> Bah just beat me to it
[01:27:56] <daemon>  $ perl -E'$SIG{INT} = sub { warn "foo" }; sleep 5;'
[01:27:56] <daemon> ^Cfoo at -e line 1.
[01:28:05] <daemon> and it works for me on perl 5.32
[01:28:28] <LeoNerd> Works for me also on 5.34 and blead
[01:28:59] <daemon> interesting the -e works on 5.34 too
[01:31:02] *** Joins: buZz (~buzz@sky.thebigblue.tk)
[01:31:26] *** buZz is now known as Guest1033
[01:31:32] <daemon> https://termbin.com/xymz
[01:31:38] <daemon> still not for this script though (the bigger one)
[01:31:41] <daemon> its not that fancy though
[01:32:06] <LeoNerd> Oh, yeah sending Ctrl-C to strace will kill strace itself too..
[01:32:14] <LeoNerd> Hah, so actually strace on this is probably not a fair test
[01:32:24] <daemon> ill send the term manually to the pid
[01:32:59] *** Joins: emanuele6 (~emanuele6@37.160.39.209)
[01:32:59] *** Quits: emanuele6 (~emanuele6@37.160.39.209) (Changing host)
[01:32:59] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[01:33:38] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 268 seconds)
[01:34:27] *** Guest1033 is now known as buZz
[01:35:40] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 240 seconds)
[01:36:44] *** Joins: zakame (~zakame@user/zakame)
[01:37:16] <daemon> https://termbin.com/6wj71
[01:37:44] *** Quits: chenxuezhao (~chenxuezh@120.244.238.69) (Ping timeout: 268 seconds)
[01:38:24] <daemon> I set sleep to 100
[01:38:26] <emanuele6> i just tried on 5.33.9 and i get the same behaviour
[01:38:40] <daemon> and after sending TERM to it, it exited - so it certainly did recieve it
[01:39:22] <daemon> --- SIGTERM {si_signo=SIGTERM, si_code=SI_USER, si_pid=20066, si_uid=1090} ---
[01:39:25] <daemon> I think that is it?
[01:40:56] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[01:41:00] <daemon> I did try to capture INT as well
[01:41:30] <emanuele6> did i miss something? why are you checking TERM?
[01:41:58] <emanuele6> i'm building 5.33.2 right now by the way
[01:42:45] <daemon> I went for both TERM and INT just to see, but it does not blocking either
[01:42:55] <daemon> well capturing either
[01:43:01] <daemon> though it will capture them if you do it via -e
[01:45:43] <emanuele6> in 5.33.2, i get the same behaviour also
[01:46:22] <emanuele6> `$SIG{INT} = sub { print "hi\n"; }' the script dies after printing "hi"
[01:48:26] <daemon> that is correct
[01:48:58] <emanuele6> that is the behaviour i get in every version
[01:49:03] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 268 seconds)
[01:49:18] <daemon> I have the problem where I get no 'hi'
[01:49:28] <daemon> it is refusing to capture signals on a particular script
[01:49:32] <daemon> https://termbin.com/6wj71
[01:49:40] <daemon> but there is nothing special at all about the script
[01:54:10] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 252 seconds)
[01:54:15] <emanuele6> why is that paste so long?
[01:54:33] <emanuele6> i don't get that much output from strace with a simple file
[01:54:57] <daemon> got it
[01:55:07] <gordonfish> daemon: What is your operating system?
[01:55:12] <daemon> gordonfish, linux/gentoo
[01:55:20] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[01:55:21] <daemon> what is causing it is this: exit do { main(@ARGV) };
[01:55:28] *** Joins: zakame (~zakame@user/zakame)
[01:55:31] <daemon> I swap that to main(@ARGV); and it works fine
[01:55:35] <gordonfish> perl -E'$SIG{INT} = sub { warn "foo" }; sleep 5;' works fine for me on Linux, Debian
[01:56:28] <emanuele6> i got confused because i expected that to only warn "foo" and let the program continue
[01:56:39] <gordonfish> The signal handler should still fire though
[01:56:47] <daemon> that is all I had to change
[01:56:48] <emanuele6> yes, it does
[01:56:54] <gordonfish> (Unless that main() sub is doing something quirky)
[01:57:28] <daemon> https://dpaste.org/NnHJ
[01:57:29] <Paperbot_> Link title(s): [ dpaste/NnHJ (Perl) ]
[01:57:37] <daemon> nothing really special
[01:58:34] <daemon> even making it 'exit main(@ARGV)' blocks it
[01:58:45] <gordonfish> emanuele6: It should continue if the handler isn'ting exiting/die'ing, It's the sleep that gets aborted.
[01:58:47] <daemon> i.e. ditching the do
[01:59:19] <gordonfish> perl -E'$SIG{INT} = sub { print qq{foo\n}; }; sleep 5; print qq{abc\n}; ' -> ^Cfoo<NL>abc<NL>
[01:59:43] <emanuele6> gordonfish: ah, i see
[01:59:47] <emanuele6> that makes sense
[01:59:57] <emanuele6> i really tought this a bug
[02:01:16] <daemon> yep its deffinetly that, if I have exit main, in anyway it blocks signals
[02:03:34] <gordonfish> The signals should still fire with exit there
[02:03:54] <daemon> gordonfish,  perl -E 'sub mx { sleep 10 }; $SIG{"TERM"} = sub { warn "yo" }; exit mx()'
[02:03:55] <daemon> try that
[02:04:05] <daemon> does not work for me
[02:05:18] <gordonfish> That works for me if I change TERM to INT
[02:06:36] <gordonfish> TERM works if I send kill $pid_of_perl in another window
[02:07:00] <ens> i learned that also Webmin software, which is written in perl, was exploited recently by a bug that allowed remote command execution via improperly filtered user input being passed into a call to open() a file...
[02:07:33] <ens> which comes just before the recent Sophos applicance hack of recent. 
[02:07:35] <gordonfish> Little bobby tables has been busy I see
[02:07:42] <daemon> INT does not work for me
[02:07:55] <daemon> well INT or TERM lol let me send it via kill
[02:08:03] <ens> which used the same problem... injecting pipe characters into input passed to open() in order to gain remote command execution
[02:08:25] <gordonfish> daemon: I would take a look at your terminal emulator's options, maybe it's doing something different with how it sends ctrl+C
[02:08:43] <gordonfish> This works for me on a variety of Linux systems I've logged into and tested
[02:08:44] <ens> this is really silly. perl has it's own special class of the worst security bug just because it wants to be backcompatible to oneliners written by sysadmins in the 90s.
[02:08:55] <daemon> gordonfish, even with kill its not triggering, for INT or TER
[02:08:56] <daemon> M
[02:09:40] <gordonfish> kill (without -9, mind you, which will kill stop it in it's tracks) is for TERM
[02:09:58] *** Joins: aspic (~shifty~~~@ppp121-44-124-204.syd-gls-har-bras39.tpg.internode.on.net)
[02:10:05] <daemon> https://dpaste.org/0200
[02:10:06] <Paperbot_> Link title(s): [ dpaste/0200 (Perl) ]
[02:10:31] <gordonfish> daemon: Run: perl -E 'say $$; sub mx { sleep 15; print "Done."; }; $SIG{"TERM"} = sub { warn "yo" }; exit mx()' In another window/tab: kill $printed_pid
[02:10:41] <daemon> just did that is what I pasted
[02:10:45] <daemon> those was in different tmux panes
[02:11:04] <daemon> oh I forgot the INT one
[02:11:06] *** Joins: Guest77y (~Guest77y@196.40.114.250)
[02:11:11] <daemon> it does the same anyhow
[02:11:18] <daemon> basically just makes perl exit without the warning
[02:11:23] <gordonfish> daemon: That looks like you're killing in the same window after the program finished
[02:11:48] <daemon> gordonfish, kinda difficult to split a single paste window
[02:12:01] <gordonfish> And the first pid killed doesn't match either of the printed ones
[02:12:29] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 268 seconds)
[02:12:55] <gordonfish> Is the program actually dying?
[02:13:04] <daemon> gordonfish, https://i.imgur.com/ZXi08ie.png
[02:13:05] <gordonfish> Do you have some sort of selinux type setup?
[02:13:10] <daemon> no selinux
[02:13:12] *** Joins: zakame (~zakame@user/zakame)
[02:13:17] <daemon> and if I remove the mx() away from that exit
[02:13:20] <daemon> it works as expected
[02:14:14] <gordonfish> Ah, tmux. I use that too, but I would recommend you try from outside tmux.
[02:14:24] <gordonfish> To make sure it's not doing something
[02:14:32] <daemon> https://i.imgur.com/ySWdrhk.png
[02:14:47] <daemon> it is not and I did do, I did this to make the screenshots easier lol
[02:15:17] <daemon> but if you look ... the only change to make it work is not running mx() from 'exit'
[02:15:22] *** Parts: Guest77y (~Guest77y@196.40.114.250) ()
[02:15:47] <gordonfish> Looks like the last two worked
[02:15:49] <gordonfish> Oh
[02:16:00] <gordonfish> What shell are you using?
[02:16:05] <daemon> err
[02:16:07] <daemon> is that zsh or badsh
[02:16:08] <daemon> one mop
[02:16:09] <daemon> mo
[02:16:14] <daemon> bash
[02:16:38] <daemon> but I have an actual perl script showing this exact behaviour as well
[02:16:43] <daemon> so I doubt the shell is involved here
[02:16:53] * GumbyPAN CPAN Upload: Git-Hooks-3.2.0 by GNUSTAVO https://metacpan.org/release/GNUSTAVO/Git-Hooks-3.2.0
[02:19:23] *** Quits: vjuen (~Username@ru3.nestormedia.com) (Quit: Going offline, see ya! (www.adiirc.com))
[02:20:14] <daemon> so if anyone has any ideas :)
[02:20:43] <daemon> I normally use 'exit do { main(@ARGV) }' kind of like an entry point, or well a bit c ish
[02:21:18] <daemon> I can swap it easily to something like: { my $exit_code = main(@ARGV) || 255; exit $exit_code }
[02:21:24] <daemon> but eh not as tidy
[02:26:03] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 268 seconds)
[02:26:06] <gordonfish> Err, if you try to exit normally (0) it's going to exit with 255 because of that ||
[02:26:19] <daemon> yep wanted // :)
[02:26:35] <gordonfish> Ooooookay
[02:26:54] * GumbyPAN CPAN Upload: Test-Pod-LinkCheck-Lite-0.007_01 by WYANT https://metacpan.org/release/WYANT/Test-Pod-LinkCheck-Lite-0.007_01
[02:26:56] <daemon> or something I don't know I have been using 'exit main(@ARGV)' for ages 
[02:26:57] * gordonfish moves a little to the side
[02:27:01] <daemon> never thought I would have to change it
[02:28:02] <gordonfish> You shouldn't have to, it works on every system I've tried it on (not counting windows, where signal handling is crap)
[02:28:20] <gordonfish> (or rather, non-existent, perl just emulates some of it)
[02:28:34] <daemon> so why is this one such a special baby its just a standard linux box
[02:28:41] <daemon> and nothing else weird is happening
[02:29:25] *** Joins: JNO (~JNO@c188-150-16-7.bredband.tele2.se)
[02:29:36] <gordonfish> Again I would check over your terminal emulator's config, as well as what $TERM is being set, and perhaps any input.rc, terminfo/termcap/etc stuff.
[02:29:58] <gordonfish> I would do a test from ctrl+alt+F1 or so console directly
[02:30:16] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[02:31:05] <daemon> just tested it on 3 other boxes ... all work fine
[02:36:21] <daemon> why do I always find the weird problems :|
[02:36:30] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[02:39:16] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 252 seconds)
[02:40:49] *** Joins: keir (~keir@user/keir)
[02:45:55] *** Joins: jlenz_ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[02:46:12] *** Quits: aspic (~shifty~~~@ppp121-44-124-204.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[02:48:33] <daemon> I guess, my $exit_code = main(@ARGV); exit do { defined $exit_code ? $exit_code : 255 }; is not to bad till I figure out what the deal is
[02:49:19] <gordonfish> Ah, misread { <daemon> yep wanted // :) } above earlier, yeah // would have worked fine in place of ||
[02:49:59] <gordonfish> (As long as you don't want default to be 0/normal when returning without an explicit value.)
[02:50:02] *** Quits: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Ping timeout: 265 seconds)
[02:50:07] <daemon> yeah its fine, I am just mystified how such a weird thing could occur overall, I rs-232's into the box and it does the exact same thing
[02:50:35] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[02:50:47] <gordonfish> ctrl+alt+F1..6 would have been enough, but serial doesn't hurt either
[02:51:11] *** rinkydink is now known as tirnanog
[02:51:53] <gordonfish> daemon: Don't suppose you can briefly open an ssh port (exchange info in PM) ?
[02:51:56] * GumbyPAN CPAN Upload: Alien-gdal-1.26 by SLAFFAN https://metacpan.org/release/SLAFFAN/Alien-gdal-1.26
[02:52:34] *** Quits: JNO (~JNO@c188-150-16-7.bredband.tele2.se) (Quit: Leaving)
[02:52:42] *** Joins: JNO (~JNO@c188-150-16-7.bredband.tele2.se)
[02:52:56] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 265 seconds)
[02:53:59] *** Quits: JNO (~JNO@c188-150-16-7.bredband.tele2.se) (Client Quit)
[02:54:50] *** Joins: JNO (~JNO@c188-150-16-7.bredband.tele2.se)
[02:55:17] *** Quits: JNO (~JNO@c188-150-16-7.bredband.tele2.se) (Client Quit)
[02:55:27] *** Joins: JNO (~JNO@c188-150-16-7.bredband.tele2.se)
[03:01:17] *** Quits: JNO (~JNO@c188-150-16-7.bredband.tele2.se) (Quit: Leaving)
[03:08:20] <madduck> On a regexp like 's/Foo(?:_bar_(\d+))?_baz/$1/', I get "Use of uninitialized value $1" if "bar_\d+" is not present. I understand why, but I must be doing something wrong, right? Or is there just no way to get $1 defined to be "" in this case, which I would have assumed.
[03:08:35] <madduck> (this is using /usr/bin/rename, so might be a peculiarity of the tool)
[03:11:19] *** Joins: whynot (~whynot@88.155.9.244)
[03:12:18] <Grinnz> $1 is the first capture group, and your regex only has one capture group: the parentheses around \d+
[03:12:58] <Grinnz> capture groups that are not part of the match will not define the number variable
[03:13:51] <Grinnz> so since that whole section is not matched the capture group is not part of it
[03:14:07] *** Joins: Markow (~Markow@176.122.215.103)
[03:14:44] <simcop2387> daemon: huh. fixing
[03:15:08] <Grinnz> 's|Foo(?:_bar_(\d+))?_baz|$1 // ""|e'
[03:16:45] <madduck> Grinnz: yeah, I understand, but how should I then create stable regexps?
[03:16:59] * GumbyPAN CPAN Upload: MediaWiki-Bot-5.006004 by SETH https://metacpan.org/release/SETH/MediaWiki-Bot-5.006004
[03:17:08] <Grinnz> don't depend on the var being defined, like i suggested
[03:17:12] <madduck> Like, let's take "s/Foo(?:_bar_(\d+))?_(.+)/$2/" → is that well-defined?
[03:17:28] <Grinnz> everything involved here is well-defined
[03:18:02] <Grinnz> undef and defined is a specific variable state in perl
[03:18:03] <madduck> okay, i guess it doesn't matter about $1 not being defined, but it is a bit surprising. Why couldn't is be ""?
[03:18:20] <simcop2387> daemon: back up.  looks like it didnt fully start properly after the vm crashed the other day
[03:18:26] <Grinnz> because the capture group was not part of the match, if it was '' that would mean it was part of the match and matched an empty string
[03:19:08] <daemon> simcop2387, :) np cheers
[03:19:18] <daemon> gordonfish++ # thank you once again
[03:19:28] <Grinnz> anyway, do you really want to replace the whole string with the empty string when there's no _bar_(\d+)?
[03:19:32] <madduck> it does make sense, but I want to get rid of the warning! ;) 
[03:19:48] <Grinnz> did you try what i suggested?
[03:20:28] <madduck> no, i only just saw that!
[03:20:58] <madduck> how would that work if the replacement was more complicated, e.g. "foo_$1_bar" ?
[03:21:10] <Grinnz> what do you want it to look like if $1 is undefined?
[03:21:30] <madduck> "foo__bar"
[03:21:54] <gordonfish> Foo(?:_bar_(\d+|))?_(.+)
[03:21:57] <Grinnz> also, if you're trying to replace it with what it already was surrounded with, you could just use lookaheads and lookbehinds instead
[03:22:29] <Grinnz> if it's different, then you have to account for the section being optional
[03:22:39] <madduck> yeah, it's optional
[03:23:02] <Grinnz> "foo_".($1 // "")."_bar"
[03:23:35] <Grinnz> the e modifier just makes it a perl expression instead of a string
[03:23:37] <madduck> okay, makes sense, I will try that. Not sure /usr/bin/rename will like it
[03:23:59] <Grinnz> it runs an arbitrary perl expression, it should be fine
[03:25:07] <madduck> works fine. Thank you for your help and patience!
[03:25:37] *** Joins: aspic (~shifty~~~@ppp121-44-124-204.syd-gls-har-bras39.tpg.internode.on.net)
[03:31:41] *** XV8 is now known as xv8
[03:31:42] *** Quits: aspic (~shifty~~~@ppp121-44-124-204.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[03:33:51] *** Joins: pizdets (~pizdets@183.182.115.177)
[03:33:58] *** Quits: pizdets_ (~pizdets@183.182.111.138) (Ping timeout: 250 seconds)
[03:35:20] *** Quits: gryphn (~gryphn@191.96.106.243) (Quit: kthxbye)
[03:36:09] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[03:37:38] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 260 seconds)
[03:38:51] *** Joins: anthk_ (~anthk_@92.176.105.30)
[03:43:14] *** Quits: anthk_ (~anthk_@92.176.105.30) (Ping timeout: 260 seconds)
[03:45:33] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[03:48:52] *** Quits: colin2 (~NoGare@node5.ranni.ca) (Ping timeout: 250 seconds)
[03:49:10] *** Quits: Pali (~pali@user/pali) (Ping timeout: 252 seconds)
[03:49:10] *** Joins: colin2 (~NoGare@node5.ranni.ca)
[03:50:14] *** Joins: chenxuezhao (~chenxuezh@120.244.238.69)
[03:50:18] *** Quits: chenxuezhao (~chenxuezh@120.244.238.69) (Read error: Connection reset by peer)
[03:57:04] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[04:02:36] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[04:12:01] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (Excess Flood)
[04:12:50] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Leaving)
[04:13:55] *** Quits: Somni (insomnia@77-88-237-24.gci.net) (Ping timeout: 252 seconds)
[04:14:00] *** Joins: Somni_ (insomnia@77-88-237-24.gci.net)
[04:14:36] *** xv8 is now known as XV8
[04:20:30] <daemon> hmm with IPC::Run how do you actually read from your child after you start it
[04:20:46] <daemon> looks like 'pump' would do it, but I seem to be only able to send data rather than receive it
[04:21:41] <daemon> ah code ref got it
[04:22:15] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[04:35:40] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[04:47:58] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 252 seconds)
[05:02:06] *** Quits: bs338 (~pi@host31-52-183-46.range31-52.btcentralplus.com) (Ping timeout: 260 seconds)
[05:03:51] *** Joins: bs338 (~pi@host81-140-173-0.range81-140.btcentralplus.com)
[05:10:49] <daemon> hmm
[05:11:13] <daemon> anyone give me a hand with this IPC::Run problem: https://dpaste.org/77R7
[05:11:13] <Paperbot_> Link title(s): [ dpaste/77R7 (Perl) ]
[05:11:49] <daemon> the program it calls sends on both STDERR and STDOUT, infact I quite literally written: say STDERR "STDERR engine starting"; say STDOUT "STDOUT ....
[05:11:54] <daemon> but the stdout is never captured
[05:12:07] <daemon> stderr does work fine
[05:15:25] *** Quits: waltman (waltman@2601:4a:701:4451:6491:5141:3040:6ea4) (Ping timeout: 260 seconds)
[05:15:47] *** Joins: waltman (waltman@2601:4a:701:4451:ffde:84f7:6349:8647)
[05:16:02] <daemon> oh I see it auto flushes both stderr and stdout at the same time when something is pumped
[05:16:03] <daemon> hmm
[05:39:44] *** Joins: Sleepy63 (~Sleepy63@user/sleepy63)
[05:48:48] *** Quits: default__ (~rpath@gateway/tor-sasl/rpath) (Quit: Leaving)
[05:57:26] *** Joins: tg_ (~tg@rockylinux/infra/tg)
[05:58:08] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[06:01:16] *** Quits: tg (~tg@rockylinux/infra/tg) (Ping timeout: 268 seconds)
[06:03:27] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:af60:4664:77ca:a745:8e99)
[06:12:11] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:15:46] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[06:18:25] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:af60:4664:77ca:a745:8e99) (Quit: Leaving)
[06:18:32] *** Quits: Su-Shee (~Susanne@p4ff4949f.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:19:34] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 260 seconds)
[06:20:01] *** Joins: Su-Shee (~Susanne@p4ff49527.dip0.t-ipconnect.de)
[06:20:15] *** Joins: aspic (~shifty~~~@ppp121-44-124-204.syd-gls-har-bras39.tpg.internode.on.net)
[06:25:44] *** Quits: Joel (~jjshoe@user/joel) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[06:28:59] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 265 seconds)
[06:31:24] *** Quits: castawayc (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net) (Ping timeout: 265 seconds)
[06:31:50] *** Joins: castawayc (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net)
[06:39:24] *** Quits: keir (~keir@user/keir) (Quit: keir)
[06:40:09] *** Joins: mattil (~mattil@87-92-19-113.bb.dnainternet.fi)
[06:40:32] *** XV8 is now known as xv8
[06:40:47] *** Joins: Joel (~jjshoe@user/joel)
[06:42:23] *** Joins: semeion (~semeion@user/semeion)
[06:44:34] *** Quits: mattil (~mattil@87-92-19-113.bb.dnainternet.fi) (Ping timeout: 252 seconds)
[06:49:19] *** semeion is now known as mnemonic
[06:49:27] *** Quits: aspic (~shifty~~~@ppp121-44-124-204.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[06:49:53] *** Joins: aspic (~shifty~~~@ppp121-44-123-227.syd-gls-har-bras39.tpg.internode.on.net)
[06:53:29] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[06:54:08] <Grinnz> surprised you're not using POE::Wheel::Run :P i would use IO::Async::Process for this
[06:54:34] *** Quits: zakame (~zakame@user/zakame) (Quit: WeeChat 2.9)
[06:55:07] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[06:57:45] *** Quits: whynot (~whynot@88.155.9.244) (Quit: leaving)
[07:02:11] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[07:02:57] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 245 seconds)
[07:04:21] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[07:08:16] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 268 seconds)
[07:10:33] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[07:11:37] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:13:42] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 260 seconds)
[07:26:51] *** xv8 is now known as XV8
[07:28:34] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 252 seconds)
[07:30:40] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:37:55] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[07:38:28] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[07:54:23] *** Quits: tg_ (~tg@rockylinux/infra/tg) (Quit: tg_)
[07:54:46] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[08:02:43] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[08:09:04] *** Quits: ShorTie (~ShorTie@71.sub-72-108-78.myvzw.com) (Remote host closed the connection)
[08:28:22] *** Joins: Martchus_ (~martchus@2a01:c22:7767:3900:d250:99ff:fe49:3cce)
[08:28:39] *** Quits: Martchus (~martchus@2a01:c22:77ff:ed00:d250:99ff:fe49:3cce) (Ping timeout: 268 seconds)
[08:38:02] *** Quits: tbcr (~tbcr@user/tbcr) (Ping timeout: 265 seconds)
[08:39:54] *** Joins: pucara (~i@181.90.255.66)
[08:42:57] *** Quits: TieUpYourCamel (~david@2600:1702:26a0:2000:3994:6852:518a:e292) (Ping timeout: 245 seconds)
[08:48:31] *** Joins: TieUpYourCamel (~david@2600:1702:26a0:2000:9050:c2f4:60c8:f9aa)
[08:59:37] *** Joins: __Manderson (manderson@gateway/vpn/protonvpn/manderson)
[09:01:09] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[09:02:54] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 260 seconds)
[09:04:16] *** Quits: __Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 252 seconds)
[09:04:31] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[09:07:02] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 265 seconds)
[09:07:10] *** Joins: __Manderson (manderson@gateway/vpn/protonvpn/manderson)
[09:09:46] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 252 seconds)
[09:10:28] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:15:01] *** Joins: R2robot (~R2robot@user/r2robot)
[09:16:20] *** Quits: nuclightq (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru) (Ping timeout: 260 seconds)
[09:18:33] *** Joins: mattil (~mattil@d1217gtrxbdz7kr762t-4.rev.dnainternet.fi)
[09:18:44] *** Quits: randir (~randir@95-25-59-33.broadband.corbina.ru) (Remote host closed the connection)
[09:25:09] *** Quits: mattil (~mattil@d1217gtrxbdz7kr762t-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:30:09] *** Joins: mattil (~mattil@d1217gtrxbdz7kr762t-4.rev.dnainternet.fi)
[09:30:33] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:33:14] *** Joins: nuclightq (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru)
[09:33:34] *** Quits: dwxreape1 (~quinn@192.155.91.76) (Remote host closed the connection)
[09:34:06] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 265 seconds)
[09:35:12] *** Joins: randir (~randir@93.159.239.42)
[09:35:31] *** Quits: mattil (~mattil@d1217gtrxbdz7kr762t-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:37:58] *** Joins: jplesnik (~jplesnik@83.240.62.176)
[09:44:38] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:44:54] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:4c15:d40c:52c8:5b34) (Ping timeout: 260 seconds)
[09:46:29] *** Joins: mnemonic (~semeion@user/semeion)
[09:47:13] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:47:45] *** Joins: Guest81 (~Guest81@KD106131181086.au-net.ne.jp)
[09:48:46] *** Quits: Guest81 (~Guest81@KD106131181086.au-net.ne.jp) (Client Quit)
[09:53:30] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[10:04:04] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 265 seconds)
[10:11:26] *** Joins: tbcr (~tbcr@75.183.195.9)
[10:11:58] *** Quits: eblip (~eb0t@90.209.54.144) (Ping timeout: 260 seconds)
[10:12:24] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:13:58] *** Joins: eblip (~eb0t@90.199.241.57)
[10:16:07] *** Joins: mnemonic (~semeion@user/semeion)
[10:20:40] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[10:35:53] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Quit: I Break D Ert)
[10:37:32] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[10:53:35] *** Joins: vjuen (~Username@ru3.nestormedia.com)
[11:00:04] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[11:03:31] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 265 seconds)
[11:09:19] *** Quits: pucara (~i@181.90.255.66) (Quit: Lost terminal)
[11:13:53] *** Joins: tobybl (~tobybl@208.193.115.87.dyn.plus.net)
[11:16:10] *** Joins: tobybl_ (~tobybl@208.193.115.87.dyn.plus.net)
[11:18:40] *** Quits: tobybl (~tobybl@208.193.115.87.dyn.plus.net) (Ping timeout: 240 seconds)
[11:20:18] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Quit: Connection closed)
[11:36:10] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[11:48:25] *** Joins: Pali (~pali@user/pali)
[11:51:41] *** Joins: anthk_ (~anthk_@92.176.105.30)
[12:02:28] *** Quits: Pali (~pali@user/pali) (Ping timeout: 252 seconds)
[12:29:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:31:38] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[12:31:47] *** Joins: art1 (~romeyke@p200300ccdf087600dfa53180489eb05d.dip0.t-ipconnect.de)
[12:34:29] *** Quits: __Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 268 seconds)
[12:34:30] *** Joins: gce108_ (~gce@64-250-5-223.gvec.net)
[12:36:38] *** Quits: gce108 (~gce@user/gce108) (Ping timeout: 260 seconds)
[12:55:40] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[13:01:41] *** Quits: mnemonic (~semeion@user/semeion) (Quit: WeeChat 3.2)
[13:02:47] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 240 seconds)
[13:04:21] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[13:06:09] *** Quits: buZz (~buzz@sky.thebigblue.tk) (Ping timeout: 268 seconds)
[13:06:55] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: No Ping reply in 180 seconds.)
[13:08:11] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[13:08:22] *** Quits: k-man (~jason@user/k-man) (Ping timeout: 260 seconds)
[13:08:47] *** Joins: k-man (~jason@user/k-man)
[13:20:27] *** Joins: pizdets_ (~pizdets@183.182.115.12)
[13:21:16] *** Quits: pizdets (~pizdets@183.182.115.177) (Ping timeout: 265 seconds)
[13:22:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[13:31:50] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:35:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Read error: Connection reset by peer)
[13:36:04] *** Quits: aspic (~shifty~~~@ppp121-44-123-227.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[13:36:49] *** Joins: aspic (~shifty~~~@ppp121-44-106-233.syd-gls-har-bras38.tpg.internode.on.net)
[13:49:45] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[14:00:47] *** Quits: vjuen (~Username@ru3.nestormedia.com) (Quit: Going offline, see ya! (www.adiirc.com))
[14:13:57] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 265 seconds)
[14:20:25] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Quit: I Break D Ert)
[14:20:44] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[14:24:06] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[14:25:04] *** Joins: Markow (~Markow@176.122.215.103)
[14:28:25] *** Joins: tobybl (~tobybl@198.202.200.146.dyn.plus.net)
[14:28:56] *** Quits: japh (~scp1@user/japh) (Ping timeout: 265 seconds)
[14:29:54] *** Quits: tobybl_ (~tobybl@208.193.115.87.dyn.plus.net) (Ping timeout: 265 seconds)
[14:30:17] *** Joins: japh (~scp1@host-95-192-221-95.mobileonline.telia.com)
[14:30:17] *** Quits: japh (~scp1@host-95-192-221-95.mobileonline.telia.com) (Changing host)
[14:30:17] *** Joins: japh (~scp1@user/japh)
[14:32:54] *** Joins: JNO (~JNO@c188-150-16-7.bredband.tele2.se)
[14:33:01] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:33:22] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:34:07] *** Joins: csrf (~csrf@user/csrf)
[14:37:30] *** Quits: ksham (Kays@user/kays) (Ping timeout: 256 seconds)
[14:38:24] *** Joins: ksham (Kays@user/kays)
[14:40:08] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[14:43:43] *** Joins: tobybl_ (~tobybl@198.202.200.146.dyn.plus.net)
[14:44:02] *** Quits: tobybl (~tobybl@198.202.200.146.dyn.plus.net) (Ping timeout: 260 seconds)
[14:49:22] *** Quits: klys (~mdasoh@show.op8.us) (Remote host closed the connection)
[14:49:37] <daemon> in perl what module or internal method would be best to check if another pid is still active and running
[14:54:31] *** Joins: klys (~mdasoh@show.op8.us)
[14:55:01] <ilmari> daemon: if the target process is running as the same user (or your are root), kill 0, $pid; 
[14:55:31] *** Quits: randir (~randir@93.159.239.42) (Read error: Connection reset by peer)
[14:55:39] <daemon> ilmari++ # ta
[14:56:00] *** Joins: randir (~randir@93.159.239.42)
[14:56:12] *** Quits: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net) (Remote host closed the connection)
[15:00:21] *** Quits: tobybl_ (~tobybl@198.202.200.146.dyn.plus.net) (Ping timeout: 265 seconds)
[15:17:04] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[15:20:54] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:20:55] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:23:35] *** Joins: tobybl (~tobybl@210.242.200.146.dyn.plus.net)
[15:25:00] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 265 seconds)
[15:25:04] *** Quits: tobybl (~tobybl@210.242.200.146.dyn.plus.net) (Client Quit)
[15:28:12] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Remote host closed the connection)
[15:28:20] *** Joins: tobybl (~tobybl@210.242.200.146.dyn.plus.net)
[15:42:15] * GumbyPAN CPAN Upload: Mail-AuthenticationResults-2.20210915 by MBRADSHAW https://metacpan.org/release/MBRADSHAW/Mail-AuthenticationResults-2.20210915
[15:44:59] <daemon> hmm ilmari, when I send kill -TERM to a process
[15:45:03] <daemon> I check if its alive with 0
[15:45:05] <daemon> and its in the state
[15:45:08] <daemon> paul.we+  2098  4.4  0.0      0     0 ?        Zs   11:41   0:00 [perl] <defunct>
[15:45:11] <daemon> so it seems to return '1'
[15:45:22] <daemon> it will close when the parent closes though
[15:45:28] <ilmari> the parent hasn't wait()ed for it
[15:45:47] <daemon> I think I still have the childrens STDOUT/STDERR open
[15:45:49] <daemon> would that cause it?
[15:47:07] *** Joins: vjuen (~Username@ru3.nestormedia.com)
[15:47:09] <ilmari> the parent needs to either set $SIG{CHLD}='IGNORE' or wait()/waitpid() to reap the child process after it exits
[15:47:22] <daemon> ah I seen something about waitpid in the docs
[15:47:59] <ilmari> search for "CHLD" in https://perldoc.perl.org/perlipc
[15:48:00] <Paperbot_> Link title(s): [ perlipc - Perl interprocess communication (signals, fifos, pipes, safe subprocesses, sockets, and... ]
[15:48:10] <daemon> ta
[15:50:16] <daemon> works perfect :)
[15:50:19] <daemon> ilmari++
[15:58:38] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:58:41] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:59:03] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:03:12] *** Joins: gggpkm (~gggpkm@111-251-123-57.dynamic-ip.hinet.net)
[16:03:28] *** Joins: vjuen_ (~Username@leased-line-217-21-59-112.telecom.by)
[16:07:27] *** Quits: vjuen (~Username@ru3.nestormedia.com) (Ping timeout: 268 seconds)
[16:07:32] *** vjuen_ is now known as vjuen
[16:11:18] * GumbyPAN CPAN Upload: Data-Text-0.04 by NHORNE https://metacpan.org/release/NHORNE/Data-Text-0.04
[16:11:28] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff)
[16:14:09] *** Joins: X-Scale` (~ARM@92.250.99.192)
[16:16:29] *** Quits: X-Scale (~ARM@46.50.0.45) (Ping timeout: 268 seconds)
[16:16:29] *** X-Scale` is now known as X-Scale
[16:35:55] *** Joins: anthk_ (~anthk_@92.176.105.30)
[16:55:51] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[16:57:15] *** Quits: vjuen (~Username@leased-line-217-21-59-112.telecom.by) (Quit: Going offline, see ya! (www.adiirc.com))
[17:02:59] *** Joins: vjuen (~Username@leased-line-217-21-59-112.telecom.by)
[17:03:55] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff) (Ping timeout: 252 seconds)
[17:18:52] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[17:22:28] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Read error: Connection reset by peer)
[17:22:50] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[17:25:20] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:25:52] *** Joins: mattil (~mattil@airio.portalify.com)
[17:27:41] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[17:27:56] *** Parts: samir (~azureuser@user/samir) (WeeChat 2.8)
[17:35:01] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[17:37:10] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 260 seconds)
[17:38:53] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[17:47:27] *** Quits: jplesnik (~jplesnik@83.240.62.176) (Quit: Leaving)
[17:48:04] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:49:59] *** Quits: JNO (~JNO@c188-150-16-7.bredband.tele2.se) (Quit: Leaving)
[17:58:08] *** Joins: Franciman (~Franciman@openglass.it)
[17:58:57] *** Parts: Franciman (~Franciman@openglass.it) (WeeChat 3.2)
[18:00:43] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Leaving)
[18:11:16] *** Joins: anthk_ (~anthk_@92.176.105.30)
[18:11:47] *** Joins: gryphn (~gryphn@191.96.106.247)
[18:12:27] *** Joins: dwxreaper (~quinn@192.155.91.76)
[18:22:45] *** Quits: gryphn (~gryphn@191.96.106.247) (Quit: kthxbye)
[18:23:48] <merpaderp> I was just doing kubernetes tutorial which uses some dark magic linux inside of browser where kube demo is running
[18:24:02] <merpaderp> got to the part where I execute commands inside of container and stuff
[18:24:10] <merpaderp> so naturally I did perl -V
[18:24:13] <merpaderp> it's there
[18:24:34] <merpaderp> so what the heck is it? some linux inside of browser where there is perl? what?
[18:25:00] <Altreus> thin client to a real linux, maybe?
[18:25:12] <merpaderp> I dont believe someone would just give shells on the internet
[18:25:18] <Altreus> you said it's a container
[18:25:55] <merpaderp> people would mine crypto in there in literally 0.1 since starting it
[18:26:31] <Altreus> they probably get killed quick
[18:26:33] <merpaderp> okay I did while(){} and my CPU didnt go brrr, so maybe it is running somewhere
[18:26:55] <merpaderp> in this day and age you just cant be sure whats going on anymore, they have OSes inside of browsers
[18:27:43] <merpaderp> I find it so awesome that Perl is installed in minimal docker images all the time
[18:28:08] <merpaderp> correct me if I am wrong but I think perl was in official python docker image just lurking there in shadow
[18:30:36] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[18:32:50] *** Joins: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net)
[18:37:13] *** Joins: buZz (~buzz@sky.thebigblue.tk)
[18:37:54] <Botje> merpaderp: are you talking about katacoda?
[18:38:31] <merpaderp> Botje: I think you are right, there was such logo in the corner obscuring view in their virtual terminal
[18:38:48] <merpaderp> cpuinfo says its some xeon, so maybe a real thing afterall
[18:38:59] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[18:41:17] <_73> is it possible to pipe local stdout to a Net::OpenSSH connection? For example the command I want to run is `btrfs subvol send /some/snap | ssh myHost "btrfs receive /some/path"`.
[18:41:35] * GumbyPAN CPAN Upload: Data-Record-Serialize-0.32 by DJERIUS https://metacpan.org/release/DJERIUS/Data-Record-Serialize-0.32
[18:44:11] <Botje> merpaderp: those are real boxes, yes. just heavily restricted.
[18:46:59] *** Joins: mattil (~mattil@87-92-19-113.bb.dnainternet.fi)
[18:47:00] <Botje> _73: how is your perl process involved in the "local stdout"?
[18:47:57] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[18:48:50] *** Quits: mattil (~mattil@87-92-19-113.bb.dnainternet.fi) (Read error: Connection reset by peer)
[18:49:23] <_73> Botje: perhaps this is the crux of the question. I don't know how I need to involve the perl process in the `btrfs subvol send` command.
[18:50:06] <merpaderp> why do you need perl for that command to execute?
[18:50:37] <_73> its part of a larger program
[18:50:53] <merpaderp> so your larger program does something with the output or checks exit code?
[18:51:02] <Botje> _73: pipe(), fork(), and then pass the reader end of your pipe as stdin_fh ?
[18:52:49] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 252 seconds)
[18:53:23] *** Joins: foolman (~henning@pool-100-8-114-30.nwrknj.fios.verizon.net)
[18:53:44] <Botje> _73: oh! https://metacpan.org/pod/Net::OpenSSH#stdin_file-=%3E-\@open_args
[18:53:45] <Paperbot_> Link title(s): [ Net::OpenSSH - Perl SSH client package implemented on top of OpenSSH - metacpan.org ]
[18:53:50] <Botje> that's pretty neat.
[18:55:32] *** Joins: randir (~randir@95-25-59-33.broadband.corbina.ru)
[18:56:09] <_73> Botje: ohh ok. So then $rcmd here would be `btrfs receive /some/path`, correct?
[18:58:05] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff)
[19:01:28] <Botje> _73: yes.
[19:01:45] <_73> ok thanks
[19:02:34] <Botje> I would probably throw in `pv` somewhere to get a nice progress bar, but that's up to you :)
[19:06:37] * GumbyPAN CPAN Upload: Text-Minify-XS-v0.4.7 by RRWO https://metacpan.org/release/RRWO/Text-Minify-XS-v0.4.7
[19:10:30] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b163:93c1:699b:16ff) (Ping timeout: 260 seconds)
[19:30:35] *** Quits: rorx (~rorx@cpe-65-24-160-111.columbus.res.rr.com) (Ping timeout: 260 seconds)
[19:31:12] *** Quits: aspic (~shifty~~~@ppp121-44-106-233.syd-gls-har-bras38.tpg.internode.on.net) (Ping timeout: 260 seconds)
[19:33:22] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 260 seconds)
[19:39:31] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:99f6:70a6:75e5:d1ce)
[19:40:14] *** Joins: thrig (~thrig@65.113.153.50)
[19:43:08] *** Quits: merpaderp (~nobody@89.111.36.243) (Quit: leaving)
[19:45:04] *** Quits: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[19:48:56] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:50:07] *** Joins: emanuele6 (~emanuele6@37.160.47.148)
[19:50:07] *** Quits: emanuele6 (~emanuele6@37.160.47.148) (Changing host)
[19:50:07] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[19:53:54] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[19:59:06] *** Joins: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1)
[20:06:29] *** Joins: gast0n (~g4570n@user/gast0n)
[20:06:29] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[20:07:55] *** Joins: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net)
[20:08:01] *** Joins: diskin (~diskin@87.117.58.246)
[20:13:26] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[20:14:37] *** Parts: _73 (~user@pool-96-252-123-136.bstnma.fios.verizon.net) (ERC (IRC client for Emacs 27.2))
[20:20:41] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 268 seconds)
[20:21:45] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[20:22:46] *** Joins: justache (~justache@user/justache)
[20:24:36] *** Quits: gggpkm (~gggpkm@111-251-123-57.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[20:36:19] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 252 seconds)
[20:44:14] *** Joins: YaoNai (~YaoNai@user/yaonai)
[20:49:59] *** Joins: Pali (~pali@user/pali)
[20:52:07] *** Quits: tobybl (~tobybl@210.242.200.146.dyn.plus.net) (Remote host closed the connection)
[20:54:43] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Remote host closed the connection)
[20:54:43] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Remote host closed the connection)
[21:00:40] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[21:08:14] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[21:12:20] *** Joins: proller (~p@2a02:6b8:0:40c:a671:c3f:1a4:e16e)
[21:17:54] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 260 seconds)
[21:35:55] *** Joins: tobybl (~tobybl@210.242.200.146.dyn.plus.net)
[21:36:04] *** Quits: humky (~humky@user/humky) (Read error: Connection reset by peer)
[21:36:18] *** Joins: humky (~humky@user/humky)
[21:40:09] *** Quits: gast0n (~g4570n@user/gast0n) (Read error: Connection reset by peer)
[21:42:01] *** Quits: Kimm0n0 (~Kimmono@195-159-198-100.customer.powertech.no) (Read error: Connection reset by peer)
[21:42:42] *** Parts: art1 (~romeyke@p200300ccdf087600dfa53180489eb05d.dip0.t-ipconnect.de) ()
[21:43:11] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[21:56:25] *** Joins: gast0n (~g4570n@user/gast0n)
[21:58:23] *** Joins: anthk_ (~anthk_@92.176.105.30)
[22:03:23] *** Joins: horsepatat (~horsepata@212.3.199.50)
[22:07:08] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Ping timeout: 265 seconds)
[22:07:32] *** Joins: rorx (~rorx@cpe-65-24-160-111.columbus.res.rr.com)
[22:07:58] *** Quits: tobybl (~tobybl@210.242.200.146.dyn.plus.net) (Remote host closed the connection)
[22:11:51] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[22:20:14] *** Quits: horsepatat (~horsepata@212.3.199.50) (Read error: Connection reset by peer)
[22:21:15] <mjgardner> The downside to crossposting your blog to a bunch of sites: when a reader finds a problem, you have to make crazy updates everywhere in stupidly different CMSes.
[22:21:45] <lopid> don't make problems. easy
[22:22:32] <mjgardner> Oh yah, I forgot that's what makes things fly by at work. I just skip the part where I add the bugs.
[22:23:08] <lopid> yup
[22:25:54] *** Joins: horsepatat (~horsepata@212.3.199.50)
[22:30:18] *** Martchus_ is now known as Martchus
[22:30:38] *** Joins: vjuen_ (~Username@ru3.nestormedia.com)
[22:31:58] *** Quits: horsepatat (~horsepata@212.3.199.50) (Read error: Connection reset by peer)
[22:31:58] * GumbyPAN CPAN Upload: Alien-PortMidi-0.02-TRIAL by JBARRETT https://metacpan.org/release/JBARRETT/Alien-PortMidi-0.02-TRIAL
[22:33:45] *** Quits: vjuen (~Username@leased-line-217-21-59-112.telecom.by) (Ping timeout: 260 seconds)
[22:33:52] *** vjuen_ is now known as vjuen
[22:49:11] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[23:01:50] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[23:02:53] *** Joins: magla (~gelignite@55d43f3e.access.ecotel.net)
[23:04:05] *** Joins: locrian9_ (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[23:04:59] <Kobaz> is there a way for Data::Dumper to only print out hash keys and array indexes
[23:05:24] <thrig> Dumper keys %...
[23:05:33] <thrig> probably Dumper [ keys %... ]
[23:05:53] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[23:05:57] <Kobaz> yeah but
[23:06:01] <Kobaz> i want it recursive
[23:06:35] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 265 seconds)
[23:07:46] <Kobaz> i can write something real quick
[23:08:21] <thrig> something like that would have values, yes
[23:08:43] *** Quits: anthk_ (~anthk_@92.176.105.30) (Quit: zzz)
[23:08:48] <Kobaz> like i want to only print the values if they are other hashes and arrays
[23:08:56] <Kobaz> basically i want to print the structure
[23:08:57] <Grinnz> "only keys and indexes" and "recursive" are conflicting requests
[23:09:03] *** Joins: anthk_ (~anthk_@92.176.105.30)
[23:09:06] <Kobaz> without any actual 'data'
[23:09:20] <Kobaz> so avoid leafs values that are not arrays and not hashes
[23:09:45] <thrig> print the keys, inspect values for hash-or-array, recurse on said
[23:09:49] <Kobaz> i'll bang something out real quick, it's one of those things that maaaybe has an option for
[23:09:49] <Kobaz> right
[23:09:52] <Kobaz> exactly
[23:09:59] *** Joins: Moonligh1 (~Moonlight@64.253.17.178)
[23:10:57] <thrig> probably faster to write than to look for on CPAN
[23:11:37] <Grinnz> yeah, very specific use case that is unlikely to have prior art
[23:11:37] <djerius> Kobaz: https://metacpan.org/pod/Data::Rmap
[23:11:37] <Paperbot_> Link title(s): [ Data::Rmap - recursive map, apply a block to a data structure - metacpan.org ]
[23:11:46] <Kobaz> haha
[23:11:53] <Kobaz> good ole cpan, wonderful
[23:12:19] <Grinnz> djerius: that'll traverse it but you need to structural context for this 
[23:13:16] <Kobaz> how would one get the primative type of a ref
[23:13:25] <Grinnz> ref()
[23:13:26] <Kobaz> ref($foo) = Something::Or:Other
[23:13:34] *** Quits: locrian9_ (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 268 seconds)
[23:13:37] <Grinnz> ref($foo) eq 'ARRAY'
[23:13:38] <Kobaz> but.. what's behind the scenes... is it a hash or array or what
[23:13:45] <Grinnz> you shouldn't care
[23:13:52] <Grinnz> if it's blessed, it has a defined interface
[23:13:56] <Kobaz> true
[23:14:09] <Kobaz> what if I reaaaaaaaly wanted to know
[23:14:16] <Grinnz> Data::Dumper dumping the internals of blessed objects are the source of many newbie traps
[23:14:17] <djerius> Ok, how about folding the structure? https://metacpan.org/pod/Hash::Fold
[23:14:17] <Paperbot_> Link title(s): [ Hash::Fold - flatten and unflatten nested hashrefs - metacpan.org ]
[23:14:56] <Grinnz> Scalar::Util::reftype or Ref::Util::is_blessed_hashref/is_blessed_arrayref
[23:15:02] <Kobaz> well it's not a trap in this case
[23:15:04] <Kobaz> very cool
[23:15:14] <Grinnz> it probably is
[23:15:16] <Kobaz> heh
[23:16:54] <thrig> admiral akbar is on line #2 sir
[23:23:29] <Kobaz> just so you don't think i'm going crazy here, this is for my own object, i just want a general way to show the structure for debugging
[23:26:19] <Grinnz> ah, well in that case you should know what the structure is
[23:26:45] <Kobaz> i do, but... in case it changes at some point, it's nice to 'just handle it'
[23:27:01] <Grinnz> if it changes at some point you'll have bigger problems than fixing your debug code
[23:27:20] <Kobaz> well, not necessarily 'changes' more like, new stuff i don't have to handle specially
[23:27:27] <Grinnz> YAGNI
[23:27:30] <Kobaz> just add new fields in there and poof i can still print the structure
[23:27:38] <Kobaz> doesn't matter what it is
[23:27:40] <Grinnz> sure, but that's fields, not the structure itself
[23:27:52] <thrig> or you could Object::Pad it and not care
[23:27:56] <Kobaz> ah
[23:28:32] <Grinnz> having debug code that can enumerate the fields is certainly valuable
[23:28:52] <Kobaz> yup
[23:28:52] <Grinnz> regardless of the several ways objects may store fields (sometimes not even within the object)
[23:30:14] *** XV8 is now known as xv8
[23:36:23] *** Quits: Moonligh1 (~Moonlight@64.253.17.178) (Ping timeout: 268 seconds)
[23:43:02] *** Quits: proller (~p@2a02:6b8:0:40c:a671:c3f:1a4:e16e) (Ping timeout: 260 seconds)
[23:44:02] * zgu looks through the Log:: namespace on CPAN and contemplates making a Log::SimpleEnough
[23:44:20] <thrig> ::SomewhatMaintained
[23:45:46] <zgu> Log::TooComplex::MissingCriticalFeatures::Abandoned
[23:46:25] *** xv8 is now known as XV8
[23:50:34] *** Quits: jlenz_ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[23:55:05] <zgu> perlbot: logging
[23:55:05] <perlbot> zgu: Mojo::Log for minimalism, Log4perl for maximum overkill, Log::Any for anything in between | Log::Dispatch, Log::Dispatchouli, Log::Contextual
