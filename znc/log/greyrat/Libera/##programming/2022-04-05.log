[00:00:04] <beachpeach> Assuming I develop a program and publish it on GitHub, is it reasonable to expect users to simply clone, build, and install themselves? Or should I go through the trouble of providing packages for all 3 (and possibly more) major package managers?
[00:00:24] *** Quits: operateur (~My_user_n@178-221-69-32.dynamic.isp.telekom.rs) (Ping timeout: 268 seconds)
[00:00:33] *** Quits: independent56 (~independe@2.25.26.98) (Ping timeout: 248 seconds)
[00:01:59] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[00:03:10] <sonny> depends on your users
[00:03:36] <nomagno> beachpeach: It's totally reasonable that if you provide a clear list of dependencies, once the project grows a bit more you'll just get people that want to do packaging for themselves and share it
[00:03:42] <flaqoniun> it is not reasonable to expect everyone to clone, you want to publish a tarball at least
[00:03:58] <nomagno> flaqoniun: GitHub already does that
[00:04:07] <nomagno> top right -> download -> .tar.gz
[00:04:11] <flaqoniun> i mean a version numbered release tarball
[00:04:16] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[00:04:17] <flaqoniun> not some adhoc microscript
[00:04:21] <beachpeach> nomagno: That's what I thought. Thanks
[00:04:28] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[00:04:36] <nomagno> flaqoniun: What microscript?
[00:04:41] *** Joins: geeknix (~pi@2001:e68:5432:153f:a117:e5bd:94ba:3d25)
[00:04:52] <flaqoniun> i'm not going to wade through your git commits to find the stable release snapshot
[00:04:56] *** Joins: audio (~audio@user/audio)
[00:05:04] <flaqoniun> thats absolute madness and unmanageable
[00:05:14] <beachpeach> What is a tarball again
[00:05:20] <flaqoniun> .tar
[00:05:24] <flaqoniun> or a zip
[00:05:34] <beachpeach> Isn't that just compressed files?
[00:05:39] <nomagno> a zip isn't a tarball, but it's a common compression format
[00:05:46] <flaqoniun> no shit
[00:06:30] <beachpeach> How does compressing files equal deployment of a program?
[00:06:33] <nomagno> beachpeach: tarballs are a specific family of similar Unixy formats, identified by files ending in '.tar'. They don't do any compression, they simple join all files in a directory into a single binary
[00:06:38] <flaqoniun> you need a verion number
[00:06:45] <flaqoniun> compression doesn't matter thats why i said tarball
[00:06:45] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[00:07:09] <beachpeach> I see. OK, thanks for answers!
[00:07:14] <nomagno> It is common to compress tarballs with the utility 'GNU Zip', which leaves you with the extension '.tar.gz'
[00:07:34] <nomagno> that is the most common way of distributing source code nowadays if not using git
[00:07:42] <flaqoniun> i think gitub lets you label snapshots
[00:07:51] <nomagno> flaqoniun: definitely does
[00:07:53] <flaqoniun> and zips/tar it for you
[00:07:55] <nomagno> multiple ways, in fact
[00:08:25] *** Quits: Psybur (~Psybur@2600:1003:b1a3:2343:f1fc:41cc:1190:cfb8) (Ping timeout: 268 seconds)
[00:08:48] <pyzozord> https://en.wikipedia.org/wiki/Tar
[00:08:48] <bayaz> Title: Tar - Wikipedia 
[00:08:51] *** Joins: Psybur (~Psybur@2603:3021:2541:80c1:19c2:a1cd:6600:38ba)
[00:09:01] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[00:09:05] *** Joins: morte_ (~user@181.114.17.106)
[00:09:09] <pyzozord> after looking at this now I remembered that I actually checked it out before
[00:09:19] <pyzozord> I am stuck forgetting and relearning the same things over and over
[00:09:25] <nomagno> pyzozord double check that URL :P
[00:09:29] <bomb> yeah also happens to me lately
[00:09:36] <pyzozord> nomagno: not that's intentional
[00:09:43] <flaqoniun> sorry i get cranky when i download the autogenerated github file and the code is buggy/in-development
[00:09:46] <pyzozord> I was wodering what does word "tar" mean
[00:10:03] <GeDaMo> If you go to a Github repository and add zipball/master or zipball/<branch-id> to the URL, it will give you a .zip file
[00:10:06] <bomb> tarball
[00:10:08] <kee> Tape archive.
[00:10:11] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[00:10:54] <bomb> nice try kee 
[00:11:03] <bomb> but in fact it's "tape archiving"
[00:11:15] <bomb> I'm tired of fixing you.
[00:11:36] <flaqoniun> what you're referring to as tape is actually gnu/magnets
[00:12:31] <beachpeach> Honestly, I find deployment on Linux really, really messy. I wish there was some kind of standard practice because it seems like there isn't any. Some people say build from source, others say provide packages, yet others say use FlatPak and on and on it goes
[00:13:10] <flaqoniun> it can be really messy depending on what language you're using
[00:13:12] <koollman> there are many standard practices. Maybe too many :)
[00:13:20] <pyzozord> like pretty much all computer words, the funny meaning is was the important one
[00:13:28] <pyzozord> and the serious meaning is an afterthrought :P
[00:13:31] <InPhase> beachpeach: If you want broad distribution without depending on a distro much, try AppImage.
[00:13:32] <pyzozord> same with elfs :P
[00:13:47] <pyzozord> even unix is a play on "multics"
[00:13:55] <bomb> systemd becomes a standard, so does dbus
[00:13:55] <GeDaMo> https://en.wikipedia.org/wiki/Shar
[00:13:56] <bayaz> Title: shar - Wikipedia 
[00:14:02] <kee> bomb: > The name is derived from "tape archive", as it was originally developed to write data to sequential I/O devices with no file system of their own.
[00:14:06] <bomb> Wayland, in a decade. PipeWire in a few years
[00:14:29] <InPhase> beachpeach: There are multiple answers because there are multiple important distribution avenues.  Repositories have a very important role in Linux.  But it takes a bit of work to integrate with the major repositories.
[00:14:35] <dTal> Not long now before Wayland becomes older than xorg was when they invented Wayland
[00:14:43] <nomagno> I think you're meant to do deployment with POSIX sh, make, variables and maybe a bit of curl here and there
[00:14:53] <flaqoniun> shots fired
[00:14:56] <nomagno> Not that you're MEANT to, but I find it least confusing
[00:15:14] <InPhase> beachpeach: For a smaller project's distribution, AppImage seems to be the easiest download-and-go solution.
[00:15:20] <beachpeach> I just think it's way less of a hassle on Windows .You make a simple inno script and just run it whenever you update, then share the resulting installer, and everything else is automatic. On Linux there's so many options and nobody can quite agree which one is the right one at any given time
[00:15:23] *** Quits: dld (~davidlowr@2620:6e:6000:2900:38c1:e5a4:b065:9eb3) (Ping timeout: 260 seconds)
[00:15:33] <dTal> did I say not long now? I meant "long since passed"
[00:15:33] <bomb> nomagno haha. please no more `curl blabla | sudo sh`
[00:15:39] <beachpeach> But TY for answers still, I will figure it out
[00:15:45] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:15:50] <flaqoniun> noooo windows packaging is literally hell
[00:15:50] <beachpeach> InPhase: I may try AppImage, thanks!
[00:15:58] <InPhase> beachpeach: It's not actually easier on Windows.  But there are a lot of strong opinions among Linux developers.  :)
[00:16:00] <nomagno> bomb: I said curl to get files I'm general, not scripts
[00:16:18] <bomb> beachpeach you need to buy expensive code signing cert for Windows distribution, otherwise it will show SmartScreen, etc. or even can't be downloaded
[00:16:19] <nomagno> You might have some URL such as mydomain.rocks/bigfile.bin
[00:16:31] <InPhase> beachpeach: Windows has less of a "This is the one true path" culture.  Linux has many one true paths that don't all agree.
[00:16:39] *** Joins: absc (~absc@dynamic-adsl-94-34-200-127.clienti.tiscali.it)
[00:16:46] <nomagno> That's a totally valid thing to download at deployement time
[00:17:20] <nomagno> InPhase: is it a path if there's only one way to do it?
[00:17:22] <bomb> nomagno aria2 is better than curl for downloading files
[00:18:10] <nomagno> That's nitpicking, I'm wasn't implying curl is the only way to download files
[00:18:20] <nomagno> It's just the most compatible
[00:19:00] <bomb> I didn't say you didn't say I didn't say you didn't say I didn't say you didn't say 
[00:19:18] <kee> Afaik wget is more common, except on Windows.
[00:19:28] <bomb> meanwhile I hope "curl | sh" isn't preferred anymore
[00:19:35] <sonny> curl is on windows
[00:19:53] <InPhase> nomagno: Judging from hiking trails...  yes?
[00:19:55] <sonny> powershell also has a curl like tool
[00:20:49] <kee> People install curl on Windows, but I don't know of anything else they commonly install.
[00:21:41] <InPhase> Every operating system should really be providing up-to-date python so that we can use it to make installer scripts.
[00:21:56] <flaqoniun> omg they finally posted the rust compiler tarballs instead of curl | sh instructions, i can finally build firefox again!
[00:22:00] <flaqoniun> thanks bomb
[00:22:15] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[00:22:32] <InPhase> Having a baseline python available everywhere would be an actually portable way to do installer tooling and all sorts of other baseline OS interaction.
[00:22:36] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[00:22:55] <flaqoniun> 332MB  0_o 
[00:22:58] <sonny> python is on windows
[00:22:59] *** Quits: berkhan (~berkhan@159.146.43.242) (Quit: Leaving for now. See you next time.)
[00:23:10] <sonny> but it's just a script that promts installation
[00:23:27] <oldlaptop> beachpeach: In one sense it's easier on linux: probably the most common "one true way" from a developer's perspective is that you publish your source, with a reasonable build system of some kind (autohell and cmake both make packagers reasonably non-miserable compared to the alternatives), and nothing else.
[00:23:30] <kee> Installation of the Windows Store build, as well.
[00:23:39] *** Joins: Toneloc (~Toneloc@cpc104770-belf12-2-0-cust612.2-1.cable.virginm.net)
[00:23:40] <pyzozord> damn, look at what i made https://imgur.com/a/DSCBKXE
[00:23:43] <sonny> yeah, as done by the python foundation
[00:23:44] <oldlaptop> Then, if your software is useful, people package it for their systems for you.
[00:24:01] <bomb> flaqoniun you're welcome :)
[00:24:40] <kee> But it's not in the conventional location; it's somewhere weird, and doesn't play nice with py.exe.
[00:24:42] <bomb> pyzozord nice mandelbutt
[00:24:46] <oldlaptop> The different linuxes (and BSDs, and whatever's left of opensolaris, and whatever else) all have their own one true ways that you don't have to care about, because you just publish source.
[00:24:49] <pyzozord> imaginary numbers are crazy
[00:25:19] <oldlaptop> (If they have to do anything intrusive, they'll probably even mail you the patches.)
[00:26:12] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Quit: Client closed)
[00:27:22] <beachpeach> oldlaptop: That's what I asked #linux about earlier, and one of the responses was something like "I wouldn't use the application because I have bad experience with building software from sources"
[00:27:31] <beachpeach> Which just confused me further honestly
[00:27:49] <oldlaptop> The people like that get their binaries from the people who package it for their systems for you.
[00:27:52] <beachpeach> I will publish my application and then let the community package it, if they so desire
[00:28:21] <oldlaptop> If the software is useful, someone packages it for debian (which works into ubuntu, mint, and many others), someone else packages it for fedora (centos, redhat, others), etc.
[00:29:00] <beachpeach> There's also AUR, and potentially others
[00:29:20] <beachpeach> I wonder if that becomes an issue at scale, who is actually responsible for maintaining updates for all those packages
[00:29:21] <oldlaptop> There are some implications to this; you will probably need to pay more attention to which features in your dependencies you're using, how new of versions you can reasonably depend on, etc.
[00:29:35] <oldlaptop> It will also take a while, sometimes, for newer versions to filter down to all the distributions.
[00:29:47] <oldlaptop> Generally whoever packaged it in the first place.
[00:29:57] <beachpeach> I guess the more popular an application ,the bigger the incentive to keep it up to date
[00:30:06] <beachpeach> Makes some sense. TY for answers!
[00:30:06] <oldlaptop> Not you, unless you did a package yourself.
[00:30:28] <oldlaptop> (Or unless you want to mail patches to debian, or whoever, updating it.)
[00:30:46] <beachpeach> I would consider packing myself if it was a do-it-once-and-forget-about-it type of deal, but it doesn't seem to be. Unless I use Flatpak or AppImage
[00:30:57] *** Quits: kariosfox (~kariosfox@87.116.234.22) (Ping timeout: 248 seconds)
[00:31:04] <beachpeach> Which also numerous people suggest
[00:31:08] <oldlaptop> Some developers seem to get hot and bothered about the likes of debian distributing old versions, but that will happen no matter what, if your software is useful and you publish its source (so they can package it in the first place)/
[00:31:13] <beachpeach> It's fairly confusing
[00:31:31] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[00:31:44] <oldlaptop> That is, it doesn't matter how many AppPackFlat things you make - if it's useful, and you publish the source, people will package it for their systems anyway.
[00:31:56] <oldlaptop> (Although if you make it hard for them that might not happen so easily.)
[00:32:21] <oldlaptop> The node.js ecosystem is an example of developers "making it hard for them", such that most node.js stuff really can't be packaged.
[00:32:54] <oldlaptop> (There are many reasons for this, which IMO boil down to "the node.js world closely resembles a flaming dumpster")
[00:33:54] *** Joins: hololeap (~hololeap@user/hololeap)
[00:34:07] <beachpeach> I honestly don't think it's unreasonable for end users to build and install the application themselves, although I'm still confused with the particulars
[00:34:17] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 246 seconds)
[00:34:24] <oldlaptop> It's as reasonable as you make it, up to a point.
[00:34:53] <kee> Does the build system require more than 10× the RAM than the program takes to run?
[00:34:55] *** Quits: hololeap_ (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[00:35:05] <oldlaptop> If it's ./configure && make && make install, it's reasonable-ish for users to do - but it's also much more likely that someone will just package it, because that also will be easy.
[00:35:11] <beachpeach> Some of the Linux systems I've tried seem to have more problems with dependencies than others, for some reason
[00:35:21] <oldlaptop> (Or mkdir build && cd build && cmake .. && make && make install)
[00:36:17] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 248 seconds)
[00:36:24] <beachpeach> (Why is there no "make uninstall"?)
[00:36:38] <oldlaptop> If your build process involves "first clone all my submodules of forked versions of random libraries", or "wait for cmake to download random stuff", that counts as making it harder to package.
[00:36:43] <oldlaptop> Sometimes there is make uninstall.
[00:37:10] <oldlaptop> It's somewhat limited by the fact that `make install` generally just copies stuff to places, it doesn't keep track of what it's doing the way a package manager does.
[00:37:23] <beachpeach> Yeah, I can see how the build system could arbitrarily increase in complexity
[00:37:27] <oldlaptop> (`make uninstall`, if it exists, just deletes all the stuff it figures it would have copied)
[00:37:54] <beachpeach> OK. Thanks a lot for answers!
[00:38:29] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[00:39:00] <oldlaptop> Custom makefiles, or (probably worse) custom build systems, also (arguably, sometimes) make it harder to package.
[00:39:16] <oldlaptop> If only because it's more necessary to actually read things and see what you're doing.
[00:39:31] <oldlaptop> custom makefiles tend to break relatively easy under portability pressure
[00:39:53] <beachpeach> I've also seen Windows-like installers for some applications on Linux
[00:39:53] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:b9e8:a9f4:c78b:2abc) (Quit: Textual IRC Client: www.textualapp.com)
[00:40:19] <oldlaptop> Unless you're some proprietary vendor shipping closed binaries, that's probably a bad plan.
[00:40:34] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 272 seconds)
[00:40:46] <edgar-rft> beachpeach: see "Linux from Scratch" where you can make your own Linux distro -> https://www.linuxfromscratch.org/
[00:40:47] <bayaz> Title: Welcome to Linux From Scratch! 
[00:40:54] <oldlaptop> It's still not a great plan, compared to FlatAppThinPack things, or carefully building your own RPM/.deb.
[00:42:16] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[00:42:22] <beachpeach> What if your application has to be configured during install? Linux doesn't seem to offer any capabilities in that space, other than basically actually using a Win-like installer
[00:42:25] <deniska> I personally like "unpack this tar.gz and run an executable" approach
[00:42:45] <beachpeach> Who decides what features of LibreOffice get installed when I install it on Linux for instance
[00:42:50] <oldlaptop> Why would the configuration need to take place during install, as opposed to the first run?
[00:43:00] <deniska> beachpeach: in a typical desktop distro it's "all of them"
[00:43:01] <oldlaptop> That part is up to the people packaging libreoffice.
[00:43:05] <beachpeach> Because you may skip features you don't need
[00:43:13] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 248 seconds)
[00:43:17] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:d52e:866a:6f3a:60a1) (Ping timeout: 256 seconds)
[00:43:29] <oldlaptop> If the user asked for "libreoffice", the user gets whatever the people who packaged it thinks is just about all of libreoffice that ought to be installed by default.
[00:43:44] <beachpeach> In LibreOffice example, you may decide to skip most of the dictionaries, but install only those you actually need
[00:43:46] <oldlaptop> If the user asked for "libreoffice-writer", then that'll probably be just enough for lowriter to work.
[00:44:06] <oldlaptop> Usually, each language will be its own package, in a case like that.
[00:44:14] <flaqoniun> beachpeach, you can detect the "first run" of the application and handle post-install there
[00:44:14] <beachpeach> I think Libre specifically handles it post-install on Linux, whereas it handles it during install on Windows
[00:44:27] <beachpeach> flaqoniun: That makes sense
[00:44:37] <flaqoniun> unless you need to overwrite a root owned file
[00:44:38] <beachpeach> OK, slightly less confused now. Thanks!
[00:44:41] <flaqoniun> then IDK
[00:44:44] <oldlaptop> libreoffice won't generally "handle" that at *all*, because it's the packagers' job.
[00:45:05] *** Quits: Haxxa (~Haxxa@202-65-73-230.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:45:18] <oldlaptop> If the user wants the Swahili dictionary, the user will install libreoffice-i18n-sw
[00:45:23] <oldlaptop> (or something to that effect)
[00:46:04] <beachpeach> Seems like a potential hassle to be honest, but I guess it works
[00:46:09] <deniska> installers are kinda a mistake, even if it's the programmer doing the packaging
[00:46:42] <deniska> I guess nowadays they're a bit less of a mess than in 90s
[00:46:43] <bomb> single JAR deployments still work like a charm most of the time
[00:46:47] <oldlaptop> It's how the system works. Done well, the user only needs to learn how to use the one package manager, not figure out how all the thousand blooming installer flowers work.
[00:46:48] <deniska> doing who knows what on your system
[00:47:11] *** Joins: Haxxa (~Haxxa@202-65-73-230.ip4.superloop.com)
[00:47:31] <beachpeach> oldlaptop: Well, on Windows a common practice is to include all the options in the installer. Even Git for Windows does this
[00:47:41] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:47:52] <oldlaptop> Even with libraries: if the user wants libstuff's headers, the user will install libstuff-devel. (Or use a system that doesn't split them into a separate package.)
[00:47:56] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[00:48:04] <vdamewood> oldlaptop: When I se 'lowriter', I think "All my friends know the lowriter..."
[00:48:16] <deniska> beachpeach: on linux each option just becomes a separate package
[00:48:23] <independent_> I'm thinking of a way to allow functions to be called from other languages, but can't decipher how to make returning work. What way, apart from files, can i use to transfer data across two languages?
[00:48:42] <deniska> independent_: how are you passing data in?
[00:48:43] <beachpeach> deniska: Makes sense, although from the developer point of view I'm not sure that's actually easier. Then you have even more packages to worry about
[00:48:44] <oldlaptop> It's also a common practice to have one broad "metapackage" that pulls in everything (maybe named libreoffice), and individual packages for components (libreoffice-writer). Maybe even a "libreoffice-core" that's a basic installation, and a "liberoffice-full" that pulls in everything.
[00:49:18] <oldlaptop> Internationalization and localization is often handled separately, with a separate package per translation (and maybe a broader fooapp-i18n that pulls in all the translations)
[00:49:34] <bomb> Firefox in Ubuntu 22.04 will be Snap
[00:49:39] <beachpeach> I'm just trying to parse all this information from the developer's point of view. I understand how this stuff works on Windows, but I find myself quite confused thinking in context of Linux
[00:49:56] <oldlaptop> (shows you how unified a topic those are, that my brain called the two one thing - "is" indeed. :| )
[00:49:57] <beachpeach> Since I'm trying to develop a cross-platform application, I'll have to look into how it's done
[00:49:59] <independent_> Using function calls, which go to an intermediate language, then to the language. The inital call is call(lang, file, function, [arg1, arg2]) with args being transffered  with the code invocation command.
[00:50:03] *** Joins: wonko-th1-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[00:50:18] <oldlaptop> Mostly you don't think about distribution too much, because that's someone else's job.
[00:50:24] *** Lord_of_Life_ is now known as Lord_of_Life
[00:50:33] <oldlaptop> Unless you choose to be that someone else for one or more systems.
[00:50:54] <oldlaptop> (Then you learn how it works on those particular systems, just as if you were packaging someone else's software)
[00:50:55] <duuude> :(
[00:50:55] *** Quits: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane) (Ping timeout: 240 seconds)
[00:51:37] <oldlaptop> If you're something like libreoffice, for example, your 'make install' should probably just install absolutely everything.
[00:51:56] <oldlaptop> If the packagers want to split out the separate dictionaries into separate packages, they'll do that.
[00:52:01] <beachpeach> What if "absolutely everything" is 10GB, when the user only really wants the core features which are 10MB
[00:52:12] *** Joins: stoneware (~stoneware@user/stoneware)
[00:52:34] <vdamewood> foopackge-core
[00:52:42] <oldlaptop> You install it all (at least all of it that makes sense based on the options to ./configure or the equivalent).
[00:52:55] <oldlaptop> Then packagers split things up into separate binary packages as they see fit.
[00:53:08] <beachpeach> Ah, so ./configure does configure the installation then?
[00:53:29] <vdamewood> ./configure configured the build. If it's not built, it doesn't get installed.
[00:53:34] <vdamewood> configures
[00:53:37] <oldlaptop> ./configure generates a makefile, generally - and usually does a whole lot of arcane tests to see how the system works
[00:53:48] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[00:53:53] <oldlaptop> it'll embed a bunch of compile-time options into that makefile too, generally
[00:54:09] <deniska> "Checking whether this system supports lowercase letters: YES
[00:54:14] <nomagno> beachpeach: configure if an extremely complex utility, I think it's part of GNU automake
[00:54:20] <nomagno> s/if/is/
[00:54:33] <vdamewood> nomagno: autoconf
[00:54:41] <oldlaptop> if there's a compile-time decision to be made as to whether to link to libfrob to support the optional widget-frobbing feature, that'll be a configure option
[00:54:55] <oldlaptop> ./configure is *itself* generated by autoconf, usually. :P
[00:54:56] <vdamewood> Or at least, it's generated by autoconf. Automake implements extra features in the resulting makefile.
[00:55:37] *** Joins: Pickchea (~private@user/pickchea)
[00:55:38] <vdamewood> Autoconf is really just s suite of M4 macros to generate ./configure scripts.
[00:55:48] <oldlaptop> (Debian, for one, will want to generate the ./configure themselves, even if you include one already generated in your release tarballs. Not making sure the autogen process works for each release is another way to make packagers' lives harder.)
[00:56:11] *** Quits: absc (~absc@dynamic-adsl-94-34-200-127.clienti.tiscali.it) (Quit: Leaving)
[00:56:31] *** Quits: jamea (~jamea@200.68.140.14) (Ping timeout: 268 seconds)
[00:56:38] <nomagno> If autoconf says your system supports X at compile time and X doesn't compile, you can safely call your local disease control agency to quarantine the site
[00:56:57] <vdamewood> Interestingly, CMake manages to do things  both the method with one installer with selectable options, and the Linux-style separate packages method.
[00:56:57] <nomagno> :D
[00:57:31] <vdamewood> both the method on Windows* with one installer....
[00:57:39] *** Quits: V (~v@anomalous.eu) (Changing host)
[00:57:39] *** Joins: V (~v@ircpuzzles/2022/april/winner/V)
[01:00:05] <deniska> nomagno: happens all the time when you mess up cross-compilation
[01:00:24] <deniska> (I guess quarantining a site might be still worth it at this point)
[01:00:32] <nomagno> deniska: it was a joke, duh
[01:00:44] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.4.1)
[01:00:52] <vdamewood> The letter Q is a oke.
[01:00:54] <vdamewood> joke
[01:01:49] <independent_> Let's say i had 3 backups, A, B, and C. C is the least reliable and may fail any moment, and B is the most reliable (with A being the computer). Should i keep C onsite or offsite?
[01:02:34] <kee> Need more info.
[01:02:36] <nomagno> I don't think most of Windows' ease of setup/packaging merits are on the OS itself as much as on it being, well, a monolithic project from start to end
[01:03:02] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Remote host closed the connection)
[01:03:17] <vdamewood> independent_:  How do you define reliability?
[01:03:31] *** Quits: nvmd (~weechat@user/nvmd) (Quit: WeeChat 3.5)
[01:03:39] <independent_> Backup C is slow, makes weird noises, and seems like it may fail any moment.
[01:03:50] <independent_> Backup B runs very smoothly and seems it may live a long time.
[01:04:00] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[01:04:04] <vdamewood> Well, how something 'seems' is irrelevent.
[01:04:25] *** Joins: jamea (~jamea@200.68.140.14)
[01:05:00] <independent_> What is relavant is your opinion on whether i should keep C as the offsite backup or not.
[01:05:12] *** Joins: Rayke (rayke@user/rayke)
[01:05:20] <kee> How important is it to be able to recover quickly?
[01:05:33] <kee> Will the on-site backup be fresher?
[01:06:23] <nomagno> I missing context on the ABC stuff, second
[01:06:24] <nomagno> Reading up
[01:06:29] <independent_> Yes, certanly. Offsite will only be accessible by an infrequent car ride to a rural location in Wales
[01:07:08] *** Quits: humanface (~humanface@20014C4E1C514C0000744A49CF99D587.dsl.pool.telekom.hu) (Quit: Client closed)
[01:07:14] <kee> Then keep C as the off-site backup.
[01:07:19] <independent_> Thanks
[01:07:20] <kee> And add some encrypted cloud backups.
[01:07:26] <kee> Because you don't ever want to rely on C.
[01:07:29] <independent_> Good idea
[01:07:33] *** Joins: hololeap_ (~hololeap@user/hololeap)
[01:07:39] *** Joins: pavonia (~user@user/siracusa)
[01:07:42] <independent_> I might make a D in the future and keep it with C.
[01:07:47] <kee> Good plan.
[01:07:49] <nomagno> Agreed
[01:08:09] <kee> Give C to somebody you don't like.
[01:08:35] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[01:08:50] <nomagno> hide C in a drawer and name your least favorite person as the heir
[01:09:13] <kee> You were on the will! Don't try to contest it.
[01:09:13] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[01:09:32] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:11:09] *** Quits: beachpeach (~beachpeac@89-212-17-146.static.t-2.net) (Remote host closed the connection)
[01:11:22] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[01:11:33] <nomagno> "I have always believed in your unconditional ~~uselessness~~ loyalty to the organization, and I henceforth delegate my most ~~shit~~ important responsibility to you"
[01:12:08] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-8d1d-0261-6422-184a.inf6.spectrum.com) (Remote host closed the connection)
[01:12:35] *** Quits: user51 (~user51@77.124.35.94) (Remote host closed the connection)
[01:12:39] <independent_> I'll be sure to insert <explosive commonly used in computers, likely battery acid> into C when it fails.
[01:12:45] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-8d1d-0261-6422-184a.inf6.spectrum.com)
[01:13:48] <nomagno> "On fridays computer C shortcircuits randomly at least thrice and you need to react by pressing the power button within the next 300 milliseconds, else some legacy nukes from [REDACTED] world government fire"
[01:14:21] <independent_> XD
[01:14:27] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 256 seconds)
[01:15:11] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-170-9be0cae1 - https://znc.in)
[01:15:12] *** Quits: Toneloc (~Toneloc@cpc104770-belf12-2-0-cust612.2-1.cable.virginm.net) (Ping timeout: 250 seconds)
[01:18:35] *** Quits: Tazy (~Tazmainia@2001:1c02:1708:6800:69aa:9de:e851:cacd) (Quit: Leaving)
[01:18:59] *** Joins: Telvana (~capo@user/telvana)
[01:19:29] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-c9dd-5a31-0f2b-f1f9.inf6.spectrum.com)
[01:20:15] *** Quits: Telvana (~capo@user/telvana) (Remote host closed the connection)
[01:21:18] *** Quits: bomb (~bomb@user/bomb) (Quit: ‎)
[01:21:42] <independent_> Is it also a good idea to have a travelling backup, which comes with my laptop wherever i go?
[01:21:59] <independent_> B is onsite, C and D is offsite, and E is travelling
[01:22:34] <flaqoniun> you will want to encrypt the travelling one if there are any secrets in there
[01:23:03] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-8d1d-0261-6422-184a.inf6.spectrum.com) (Ping timeout: 260 seconds)
[01:23:04] *** Joins: Pectic (~biskit@bzq-109-64-119-195.red.bezeqint.net)
[01:23:16] *** Joins: hololeap (~hololeap@user/hololeap)
[01:23:27] * vdamewood uses XOR 0x00 as his encryption technique.
[01:23:44] <independent_> makes sense
[01:24:04] <vdamewood> You should also encrypt your laptop, too.
[01:24:15] *** Quits: hololeap_ (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[01:24:48] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[01:24:50] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[01:24:53] *** Quits: Pectic (~biskit@bzq-109-64-119-195.red.bezeqint.net) (Client Quit)
[01:25:02] *** Joins: flaqoniun (~F@32.211.211.39)
[01:25:23] *** Quits: eXistenZ (~biskit@bzq-109-64-230-51.red.bezeqint.net) (Ping timeout: 246 seconds)
[01:25:32] *** Quits: Tangent-Man (~Tang3nt-M@mutantalien.plus.com) (Ping timeout: 272 seconds)
[01:25:53] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[01:26:25] *** Joins: Telvana (~capo@user/telvana)
[01:26:56] <flaqoniun> vdamewood, that's easy to remember at least if you lose the "key" heh
[01:27:17] *** Quits: Athas (athas@2a01:7c8:aaac:1cf:6914:1dfa:1871:fc52) (Quit: ZNC 1.8.2 - https://znc.in)
[01:27:23] <nomagno> There is a technique called 'xor zipping' used as a step to compress sprites in the original GameBoy Pokémon, but I don't remember the resource that talked about it
[01:27:26] *** Joins: Athas (athas@2a01:7c8:aaac:1cf:6914:1dfa:1871:fc52)
[01:27:28] <nomagno> Anyone know anything about it?
[01:27:32] <vdamewood> Just write the key on a post-it note on the screen.
[01:27:38] <flaqoniun> most crooks won't  bother trying to exfiltrate data, just resell the hardware
[01:27:59] *** Joins: hololeap_ (~hololeap@user/hololeap)
[01:28:11] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:28:29] <pyzozord> hey, why is my mandelbrot so jagged? https://imgur.com/a/NBclzxf I implemented subsampling and now it's all jagged http://bpa.st/JNZA
[01:28:31] <bayaz> Title: View paste JNZA 
[01:28:37] <pyzozord> sorry I mean supersampling
[01:28:46] <wedr> pyzozord, floating point precision?
[01:28:47] <vdamewood> flaqoniun: One doesn't need to worry about 'most' crooks. One needs to worry about the one that actually attacks them.
[01:28:55] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[01:29:05] <wedr> pyzozord, unless, you have used at least 128-bit to 256-bit float types
[01:29:15] <pyzozord> wedr: I mean I don't know, you tell me. I don't even know how to check if that is the cause
[01:29:19] <flaqoniun> though xor lock will fail to  miserably if they run basic analysis on the bits
[01:29:32] <vdamewood> flaqoniun: And if 9 out of 10 crooks just wipe the system, that doesn't do any good if you ge tthat 10th and they do extract the data.
[01:29:35] <flaqoniun> you can search for groups of bytes that are commonly strung together
[01:29:45] <flaqoniun> words, phrases etc
[01:29:58] <pyzozord> wedr: but without the supersampling it looks perfectly fine https://imgur.com/a/A8iVUMm
[01:30:03] <wedr> hmmm, you're using 128-bit float (complex128)....
[01:30:25] <wedr> i give up. I gotta go hit the gym
[01:30:54] <vdamewood> wedr: Don't hit Gym. He's a nice guy.
[01:31:14] <pyzozord> anyone else can help?
[01:31:19] <pyzozord> That's above my skill level
[01:31:20] <vdamewood> pyzozord: Looks like pixel-grid limitations to me.
[01:31:58] *** Quits: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net) (Quit: Leaving)
[01:32:29] <pyzozord> there is this strange stroke line artifact
[01:32:35] * vdamewood paints pyzozord purple.
[01:32:41] <pyzozord> where is that coming from?
[01:32:53] <pyzozord> https://i.imgur.com/hxWAvCi.png 
[01:32:53] <bayaz> Type: image/png Size: 132.3 kB 
[01:33:02] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[01:33:02] <pyzozord> and also it gets very jagged
[01:33:53] *** Quits: magla (~gelignite@d5365b83.access.ecotel.net) (Quit: Stay safe!)
[01:33:55] <vdamewood> Sorry, this is above my paygrade.
[01:34:41] *** Joins: om3ga (~oz@46.49.41.80)
[01:34:46] <davros> om3ga, hi
[01:34:51] <om3ga> davros, hello
[01:34:54] <davros> so [2] way more important is propper immutability
[01:35:02] <om3ga> so, who don't likes C here? :)
[01:35:17] <davros> its not "dislike C" its just "rust is cleaner"
[01:35:29] <davros> before rust there was no alternative to C, or C++ i would have used.
[01:35:34] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Remote host closed the connection)
[01:35:48] <davros> propper immutable: in rust, immmutable really means immutable, in C,C++ it just means "this pointer wont write it"
[01:35:56] <om3ga> davros, I never bothered by "absence" of immutability
[01:36:14] <davros> how much parallelism have you done
[01:36:19] <om3ga> a lot
[01:36:23] <pyzozord> here is 5k x 5k resolution https://i.imgur.com/f9bVVV2.png
[01:36:23] <bayaz> Type: image/png Size: 1.7 MB 
[01:36:37] <om3ga> fastcgi server for example
[01:36:38] <pyzozord> vdamewood: no worries, thanks for trying
[01:36:56] <davros> well in my opinion , true immutable makes parallel programming easier
[01:37:00] <om3ga> davros, using pthreads
[01:37:07] <davros> because you know immutable things dont need locks
[01:37:10] <davros> they are read only
[01:37:20] <davros> rust semantics make checking that easier
[01:37:21] <om3ga> I prefer to use locks, mutexes
[01:37:31] <davros> well, for fast fine grain parallelism, you need to avoid that
[01:37:49] <davros> locks & mutexes are expensive
[01:38:06] <om3ga> that depends on design too
[01:38:09] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 248 seconds)
[01:38:09] <davros> so if you're going to leverage multicores extensively, its helpful to have true immutability
[01:38:22] <davros> in rust you can write parallel iterators very easily
[01:38:37] <pyzozord> and here is the same resolution but without the "supersampling" https://i.imgur.com/BWXwHbk.png
[01:38:37] <bayaz> Type: image/png Size: 1.2 MB 
[01:38:48] <davros> foo.iter_mut().for_each(|x| ..)        foo.par_iter_mut().for_each(|x|...)
[01:39:09] <davros> om3ga, it also helps code maintainance when the side effects are clear
[01:39:09] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[01:39:37] <davros> in rust apart from unsafe{} , only things marked mut can be changed, so you can tell from a function signature more about what it does & doesn't do
[01:39:48] <davros> also immutability in rust is *transititve* unlike const.
[01:39:58] <om3ga> davros, from my experience all side effects come from bad design
[01:40:16] <davros> side effects are there, in rust you can see them more easily, as can the inbuilt static analyser
[01:40:19] <om3ga> we allways can do things differently
[01:40:21] <davros> om3ga,  [3]  Tagged Unions.   
[01:40:52] <om3ga> this is just text. but I will agree if we're talking about huge sized objects
[01:41:08] <davros> its a fusion of enum and union,   aand a version of  switch that works on them called match
[01:41:09] <om3ga> where you have to deal with tons of data
[01:41:13] <davros> a lot of rusts correctness comes from this
[01:41:21] *** Joins: biberao (~m@user/biberao)
[01:41:22] <om3ga> davros, yes, I understand
[01:41:25] <biberao> hi
[01:41:27] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[01:41:43] <davros> [4]  the macro system can roll serialisers in a clean way
[01:41:56] <om3ga> davros, elegancy is good, but all that constructions are just if-else like stuff
[01:42:03] <davros> you can make a macro in rust that goes through the fields , or parameters of something
[01:42:19] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[01:42:48] <davros> om3ga, there's nothing in rust you can't do in C. but it is more elegant. for a small program, C probably saves you time . as the program grows, rusts design decisions become more important
[01:42:49] <om3ga> I don't write code that uses huge objects, like they have with react, or java
[01:42:58] <davros> i never use react, java, js etc
[01:43:04] <davros> i'm comparing C, C++, Rust
[01:43:15] <om3ga> davros, same we can say about go, swift, fortran
[01:43:17] <davros> i only moved to Rust because i'm confidednt it can match C
[01:43:19] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:43:23] <davros> similarly i'd never use those
[01:43:33] <davros> go, swift can't do rusts job
[01:43:35] *** Quits: noteness_ (~noteness@user/noteness) (Ping timeout: 240 seconds)
[01:43:37] <davros> they can't do C++ 's job
[01:43:52] <davros> 3rd: traits
[01:43:55] *** Quits: hololeap_ (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[01:43:58] *** Joins: noteness (~noteness@user/noteness)
[01:44:09] <om3ga> you can integrate assembly code in it )
[01:44:10] <davros> [5] rather,  traits vs classes (ok, we're comparing Rust to C++ now, not C)
[01:44:12] *** Quits: Psybur (~Psybur@2603:3021:2541:80c1:19c2:a1cd:6600:38ba) (Read error: Connection reset by peer)
[01:44:25] <om3ga> but I don't like C++
[01:44:26] *** Joins: hololeap_ (~hololeap@user/hololeap)
[01:44:28] *** Joins: Psybur (~Psybur@2603:3021:2541:80c1:19c2:a1cd:6600:38ba)
[01:44:29] <om3ga> IT'S NOT MINE
[01:44:34] <om3ga> oops caps lock
[01:44:34] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[01:44:43] <davros> i like C++ ,its great for vector maths, and collection classes
[01:44:54] <om3ga> C has vector lib also
[01:44:58] <davros> but only so far
[01:45:08] <davros> i mean i like C++, but it has some caveats that rust fixes
[01:45:37] <vdamewood> davros: And C++ doesn't really have the option to fix its warts.
[01:45:39] <davros> rust organises code in Traits instead of classes, these allow true decoupling and extention of types, where inheritance fails
[01:46:02] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 246 seconds)
[01:46:05] <davros> also rust traits are used to constrain compile-time polymorphism so you can use that more extensively whilst keeping error messages sane
[01:46:23] <davros> it has the same RAII memory management (deterministic) but tagged unions know about it
[01:46:30] <om3ga> I use Nim for latest projects that should be done fast, and I'm happy
[01:46:48] <davros> rust is not competing with nim
[01:46:51] <davros> nim is more like rapid dev
[01:46:53] *** Joins: stagas (~stagas@2a02:587:c4b4:ded5:76a:eb16:1af3:aa79)
[01:46:58] <om3ga> python ike syntax
[01:47:08] <davros> rust is a competitor to C,C++,  not Go, Nim, Python, Java, Switft C# etc
[01:47:22] <davros> my interest is game engines. rust is perfect for this
[01:47:35] <davros> low level power plus high level abstractions
[01:47:42] <om3ga> davros, have you benchmarked rust vs C?
[01:47:52] <davros> its not a good "application language" like C# go swift
[01:47:55] <om3ga> I did with other langs
[01:48:06] <om3ga> C was clear winner
[01:48:17] <pyzozord> c++ is not a competitor to c imo
[01:48:21] <om3ga> ( I mean binary created with C)
[01:48:28] <davros> om3ga, rust and C are the same speed. you can translate C into Rust 1:1, same ops with different syntax.
[01:48:45] <pyzozord> if c++ is a competitor to c, then c# is competitor to c++
[01:48:49] <davros> the difference is in program organization and expressiveness
[01:49:01] *** Quits: Psybur (~Psybur@2603:3021:2541:80c1:19c2:a1cd:6600:38ba) (Ping timeout: 256 seconds)
[01:49:08] <vdamewood> pyzozord: I don't think that analogy holds.
[01:49:18] <davros> rust's implementation  is built around a C/C++ compiler backend, LLVM
[01:49:23] <pyzozord> vdamewood: why not
[01:49:30] <davros> it would be possible to make a backend that compiles rust to C even
[01:49:32] <om3ga> well, I will newer swap C for my DSP projects to something different
[01:49:50] <om3ga> what about controllers?
[01:49:55] <vdamewood> pyzozord: Because C# wasn't made to be a 'better C++'. It was made to be a "Java, but MS doesn't get sued for using it"
[01:49:55] <davros> C will live on i'm sure
[01:49:56] <om3ga> msp430
[01:50:10] <om3ga> C will never get old
[01:50:19] <davros> well C is old. but it will endure, i'm sure
[01:50:23] <vdamewood> And Java wasn't really made to be a replacement for C either.
[01:50:24] <davros> rust is too complex to replace C
[01:50:27] *** Joins: independent56 (~independe@2.25.26.98)
[01:50:37] *** Joins: Psybur (~Psybur@2600:1003:b1a3:2343:446a:e995:495d:c777)
[01:50:43] <vdamewood> davros: I could see rust replacing C for userland code.
[01:50:47] <om3ga> davros, C has long life, now it is at his 18's
[01:50:48] <om3ga> lol )
[01:50:52] <davros> C++ will also live on. rust will gradually get more adoption because its cleaner. kids learning to code have no reason to put up with C++ legacy, IMO, they should not tolerate it.
[01:51:02] <pyzozord> vdamewood: well i don't know, what programming language authors intend languages for and what people use them for don't align too well
[01:51:18] <davros> header files should just not exist
[01:51:25] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[01:51:35] <davros> C has them ,hence C++ as legacy, we should not have to put up with that for writing low level programs
[01:51:46] <davros> and there's a tonne of other things rust cleans up.
[01:51:50] * vdamewood hands davros a C++ module.
[01:51:53] <om3ga> C++ is the branch of C on steroids
[01:52:01] <om3ga> that's why I don't like it
[01:52:05] <vdamewood> Too bad support for modules is so bad.
[01:52:12] <davros> i came for "no headers, extentension methods", and i stayed for "enum/match"
[01:52:28] <pyzozord> c++ is not really c in any way other than superficially inherited the syntax
[01:52:37] <pyzozord> it has completely different philosophy and identity
[01:52:46] *** Quits: independent_ (~independe@2.25.26.98) (Ping timeout: 272 seconds)
[01:52:58] <davros> C++ has some features that are nice  , like, RAII , and  overloading is just nice for vector maths
[01:53:14] <vdamewood> pyzozord: It does, but it compiles to the same form, with the same ABI except for name mangling, and features not in C.
[01:53:17] <davros> rust keeps those, and does polymorphism in a more elegant way, with traits
[01:53:30] <vdamewood> pyzozord: Also, when C++ was originally developed, it was pitches as 'C with classes'.
[01:53:49] <davros> "modern c++" is a clumsy version of rust
[01:53:53] *** Quits: duuude (~user@user/duuude) (Ping timeout: 252 seconds)
[01:53:57] <vdamewood> C++ has virtually the same tooling as C.
[01:53:59] <davros> but its the best you can do with C++ backward compatability 
[01:54:00] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:54:20] *** Joins: kakysha (~kakysha@user/kakysha)
[01:54:20] <davros> i dont underestimate the importance of backward compatability.. its taken me a loooong time to get used to rust for sure
[01:54:31] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:54:35] <pyzozord> vdamewood: I think I recall Stroustrup explicitly saying that it was mostly for marketing
[01:54:58] <vdamewood> pyzozord: Not so much marketing, but for adoption. Slightly different things.
[01:55:01] <pyzozord> vdamewood: I got the impression that he could have forked any other language, just decided on c because it was the most popular
[01:55:08] *** Quits: Psybur (~Psybur@2600:1003:b1a3:2343:446a:e995:495d:c777) (Ping timeout: 260 seconds)
[01:55:11] <davros> but after being stuck with certain problems for 20 years, i figured we should have a better alternative for low level programming. i consider the "sunk cost" i have as a gift to the next gen of coders, giving mindshare to something more elegant
[01:55:14] <pyzozord> vdamewood: yes, adoption is maybe more precise
[01:55:28] <davros> "no one uses rust!" well, look, some experienced people are moving over. 
[01:55:29] <vdamewood> pyzozord: Well, when Stroustrup made CwC, he worked at the same company that made C.
[01:55:40] *** Joins: Psybur (~Psybur@2601:5c9:4201:3220:19c2:a1cd:6600:38ba)
[01:56:11] <pyzozord> for me the relationship between c++ and c is not that much closer than between javascript and java
[01:56:12] <vdamewood> And one the same campus. I htink his office was just a few doors from Ritchie's.
[01:56:18] <pyzozord> just slightly closer
[01:57:02] <davros> pyzozord,   you can with minor modification compile a C subset C89..c99 whatever  in C++
[01:57:03] <phogg> pyzozord: it's more like javascript and typescript.
[01:57:05] <vdamewood> To me, it's much closer. Developed by the same company, for the same environments, Java and JavaScript have curly braces, and that's it.
[01:57:17] *** Joins: jazzy (~jaziz@user/jaziz)
[01:57:38] <vdamewood> phogg: Your analogy is more apt, too, since C++ used to compile to C.
[01:57:38] <pyzozord> vdamewood: well ok, in those aspects yes
[01:57:48] <davros> the closeness of C++ to C is why it became popular
[01:57:54] <davros> it was a smooth transition, unlike rust
[01:58:12] <vdamewood> Also, there is no smooth transition from Java to JavaScript.
[01:58:35] *** Quits: hololeap_ (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[01:58:36] <davros> straight up, C and C++ have a common subset.
[01:58:42] <phogg> vdamewood: nor was there ever intended to be
[01:58:47] <phogg> designed to complement more than replace
[01:58:50] <pyzozord> but c has a strong stance on procedural programming, c++ wants to be multiparadigm
[01:58:51] *** Joins: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it)
[01:58:54] *** Joins: zaher_ (~zaher@37.48.178.64)
[01:59:05] <pyzozord> c has fairly weak typing, c++ has stronger typing
[01:59:08] <phogg> you know what else has a common subset? awk, shell, and perl
[01:59:20] *** Joins: wauterboi0 (~wauterboi@185.65.135.160)
[01:59:20] <pyzozord> they are a bit like water and fire
[01:59:30] <davros> clues in the name :)
[01:59:33] *** Quits: wauterboi (~wauterboi@185.65.135.160) (Read error: Connection reset by peer)
[01:59:34] *** wauterboi0 is now known as wauterboi
[01:59:34] <vdamewood> phogg: Indeed. I think Netscape wanted JavaScript to be able to *interact* with Java applets, but not compete with them.
[01:59:38] <davros> they are very close
[01:59:49] <om3ga> sorry need to go
[02:00:07] *** Joins: hololeap_ (~hololeap@user/hololeap)
[02:00:28] <phogg> vdamewood: I think that was more marketing spin. Java applets were obviously the future of the web, JavaScript was the glue between the old and the new.
[02:00:37] <pyzozord> stupid mandelbrot multisampling :(
[02:00:41] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[02:00:54] <nomagno> I like C (C99 specifically) because it is a tight, small language that doesn't allow analysis paralysis, but allows lots of neat tricks to help make programming less painful
[02:01:02] *** Quits: NeoFAT32_ (~NeoFAT32_@118.179.224.74) (Remote host closed the connection)
[02:01:04] <pyzozord> where can I ask for help with this if not here
[02:01:15] <vdamewood> phogg: You might be right. It's kind of hard to tell what the *developers* actually intended rather than what the marketing team came up with.
[02:01:38] <phogg> vdamewood: It's hard also because intentions differed depending on point of view
[02:02:39] <nomagno> pyzozord: ... What's Mandelbrot multi sampling? :P
[02:02:41] <phogg> vdamewood: (speculation, because I was not there): Sun thought it was glue to bridge web browsers to Java, Netscape thought it was a way to get Java programmers to be web developers, and the creator was not on board with any of that
[02:02:50] *** Quits: morte_ (~user@181.114.17.106) (Ping timeout: 246 seconds)
[02:03:23] <pyzozord> nomagno: it's just normal mandelbrot and normal multisampling. you compute mandelbrot at 2 times the actual resolution and you average 4 pixels to one
[02:03:50] <phogg> for what purpose?
[02:03:51] <pyzozord> nomagno: https://bpa.st/JNZA lines 28 40 an d46
[02:03:52] <bayaz> Title: View paste JNZA 
[02:04:20] <pyzozord> and here is the problem if you zoom in you see jagged edges https://i.imgur.com/f9bVVV2.png
[02:04:20] <bayaz> Type: image/png Size: 1.7 MB 
[02:04:45] <pyzozord> and here is the same mandelbrot without my "multisampling" https://i.imgur.com/BWXwHbk.png no jagged edges
[02:04:46] <bayaz> Type: image/png Size: 1.2 MB 
[02:05:33] <pyzozord> is there some a good place where I could ask for help with stuff like this?
[02:05:56] <pyzozord> less technology, more mathematics, algorith, and graphics
[02:06:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:06:52] <pyzozord> I bet this is a problem for mathematicians, I'm not sure though
[02:07:09] <pyzozord> some mathematician who also happens to know a lot about floats I guess
[02:08:11] <pyzozord> oh the jagged edges happen no matter the output image resolution
[02:08:22] <nomagno> Uh... #math, #haskell-offtopic?
[02:08:59] <nomagno> Those two seem to concentrate a lot of people who know what they're talking about
[02:09:01] <pyzozord> I asked in #math, lets see if they are up to the task
[02:09:13] <independent56> Is a perl subroutine equal to a standard function?
[02:10:42] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[02:11:12] <independent56> (of other languages)
[02:11:32] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4.1)
[02:12:07] *** Joins: vicfred (~vicfred@user/vicfred)
[02:12:13] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[02:12:50] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:13:50] <nomagno> subroutine and function are synonymous in the context of computing
[02:14:09] <pyzozord> yeah no I think this must be some niche stuff, looks like noone knows this off the top of head
[02:14:34] <nomagno> pyzozord: your images are too low res
[02:14:46] <nomagno> I don't see a difference
[02:14:52] <pyzozord> nomagno: you need to zoom in
[02:15:20] <nomagno> If I zoom in I see compression artifacts
[02:15:24] <nomagno> On both
[02:16:01] <pyzozord> maybe it's your device?
[02:16:20] <pyzozord> when I zoom in clearly see jagged edges on one but not the other
[02:16:24] <pyzozord> the res is 5k x 5k
[02:16:41] *** Quits: audio (~audio@user/audio) (Ping timeout: 268 seconds)
[02:17:05] <pyzozord> I'll generate 10k
[02:17:28] <nomagno> It renders better in desktop mode
[02:17:31] <nomagno> Imgur bad
[02:18:23] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[02:18:23] <nomagno> I can definitely see a difference
[02:19:03] <pyzozord> one stupid theory I have is that on those lines it there is a lot of complexity and it just comes through with multisampling
[02:19:24] <pyzozord> meaning if I would really zoom in on one of those lines it would show another mandelbrot
[02:20:02] <nomagno> Which part is the multi sampling?
[02:20:42] <pyzozord> but no that's wrong, I just zoomed in on one of the lines here https://math.hws.edu/eck/js/mandelbrot/MB.html and it keeps a single line
[02:20:44] <bayaz> Title: Mandelbrot Viewer 
[02:20:49] <pyzozord> then it must be artifact of my code
[02:21:05] <pyzozord> nomagno: https://bpa.st/JNZA lines 28-50
[02:21:06] <bayaz> Title: View paste JNZA 
[02:21:13] <pyzozord> specifically 40-43
[02:21:53] <pyzozord> notice I compute call 4 mandelbrots per pixel, each with sligtly different arguments
[02:22:16] <nomagno> Ah yeah
[02:23:24] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[02:23:57] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[02:24:44] <pyzozord> just no idea how to tackle this
[02:25:56] <pyzozord> i feel like I should be able to solve this myself if I want to program games
[02:26:08] <pyzozord> but maybe in few years, right now I have absolutely no clue
[02:26:53] *** Joins: hololeap (~hololeap@user/hololeap)
[02:27:29] <vdamewood> I hate it when educational videos say "In this video..."
[02:27:35] *** Quits: hololeap_ (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[02:28:49] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 248 seconds)
[02:31:49] *** Quits: chomwitt (~chomwitt@2a02:587:dc19:3600:aabd:edaf:cb83:4282) (Ping timeout: 240 seconds)
[02:32:36] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[02:33:17] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:33:17] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[02:33:25] <nomagno> pyzozord: I think I get it
[02:33:36] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[02:34:02] <pyzozord> waait a minute... why is there 3855 color
[02:34:09] <pyzozord> that's not a color in range 255
[02:34:33] <pyzozord> nomagno: what's your idea
[02:35:57] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: Ping timeout (120 seconds))
[02:36:16] *** Joins: stoneware (~stoneware@user/stoneware)
[02:36:27] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[02:36:29] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-c9dd-5a31-0f2b-f1f9.inf6.spectrum.com) (Read error: Connection reset by peer)
[02:36:48] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Ping timeout: 252 seconds)
[02:37:02] *** Quits: monr0e (~monr0e@mail.vixen.international) (Ping timeout: 268 seconds)
[02:37:03] *** Quits: om3ga (~oz@46.49.41.80) (Remote host closed the connection)
[02:37:09] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-c9dd-5a31-0f2b-f1f9.inf6.spectrum.com)
[02:37:13] *** Joins: ozzz (~oz@46.49.41.80)
[02:37:16] <pyzozord> ah, I get int overflows
[02:37:41] <nomagno> That makes more sense than my idea. Actually :P
[02:37:47] <pyzozord> .RGBA() returns 32bit ints, and I just conver them to 8bit
[02:37:53] *** Quits: pmercado (~pmercado@190.22.83.12) (Ping timeout: 248 seconds)
[02:38:15] *** Joins: duuude (~user@user/duuude)
[02:38:15] <nomagno> Yeah you should probably do some kind of approximation
[02:38:44] *** Quits: independent56 (~independe@2.25.26.98) (Remote host closed the connection)
[02:39:02] *** Joins: independent56 (~independe@2.25.26.98)
[02:39:29] *** Quits: eddof13 (~textual@2806:102e:12:64:251a:7d9c:896a:90df) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:39:35] *** Quits: yewscion (~yewscion@72-21-196-67.amazon.com) (Ping timeout: 246 seconds)
[02:40:35] *** Quits: jtgd (~jtgd@user/jtgd) (Quit: WeeChat 3.5)
[02:40:38] <pyzozord> so there was no mathgick after all
[02:40:43] <pyzozord> just overflows
[02:40:45] <pyzozord> as usual
[02:40:47] <epony> technically yes, some details might be different between terminology and context, but otherwise similar  Apr04 2243<nomagno> subroutine and function are synonymous in the context of computing
[02:41:07] <epony> the differences are in the low level implementation
[02:41:47] *** Joins: jtgd (~jtgd@user/jtgd)
[02:41:53] <epony> and in the capabilities that functions might have that simple branching and more middle level subroutines can not have that much developed as functions can
[02:42:06] *** Quits: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:42:39] <epony> the more similar equivalence could be "procedure"
[02:42:52] <epony> which are mostly done with functions ;-)
[02:43:05] <epony> in high level languages
[02:43:19] *** Joins: Quackers (~Quackers@2001:1284:f013:f6db:7088:238a:4bbe:4068)
[02:43:58] <epony> in free speak they are the same concept, in tech detail it might differ (or language specific context)
[02:44:01] <nomagno> a mathematical function or 'pure function' is of the form f(x) { return (deterministic xpression that doesn't use any global state) }
[02:44:33] <epony> yes, mathematical functions are the better way of thinking about functions
[02:45:31] *** AbleBacon_ is now known as AbleBacon
[02:47:21] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:47:29] <epony> perl development started from procedural to object oriented and functional programming capabilities added in consequent times.. https://en.wikipedia.org/wiki/Perl_language_structure#Subroutines
[02:47:30] <bayaz> Title: Perl language structure - Wikipedia 
[02:47:32] *** Joins: Amadiro__ (~Amadiro@45.154.138.41)
[02:47:39] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[02:48:10] *** Quits: Alex123 (~Adium@lib-07-subnet-138.rdns.cenic.net) (Quit: Leaving.)
[02:48:34] *** Quits: Quackers (~Quackers@2001:1284:f013:f6db:7088:238a:4bbe:4068) (Quit: Leaving)
[02:48:34] <epony> some general details  https://en.wikipedia.org/wiki/Subroutine#Functions
[02:48:35] <bayaz> Title: Subroutine - Wikipedia 
[02:48:45] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[02:50:13] *** Quits: Amadiro_ (~Amadiro@45.154.138.90) (Ping timeout: 256 seconds)
[02:50:36] *** Joins: hololeap_ (~hololeap@user/hololeap)
[02:50:58] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[02:51:50] *** Quits: independent56 (~independe@2.25.26.98) (Ping timeout: 246 seconds)
[02:51:55] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[02:52:24] <pyzozord> lesson learned: weird pixel artifacts? check your number overflows
[02:53:09] <pyzozord> still something off, but no more jaggeed edges https://imgur.com/a/5ZjbM9S
[02:55:24] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[02:55:44] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[02:56:13] <pyzozord> oh wow haha
[02:56:24] <pyzozord> had another overflow error
[02:56:30] <epony> sometimes can be memory faults in the graphic card / sub-system
[02:56:36] <pyzozord> lesson 2 learned: do not add stuff
[02:56:42] <epony> or driver defects
[02:57:14] <epony> but that would not be software corrected or caused by your program (typically)
[02:58:05] *** Quits: hololeap_ (~hololeap@user/hololeap) (Remote host closed the connection)
[02:58:30] <nomagno> How is currying supposed to work?
[02:58:37] <nomagno> I don't understand how you actually do currying
[02:58:41] * vdamewood gives pyzozord a cup cake
[02:58:56] <nomagno> Can anyone provide some kind of pseudo-code example?
[02:59:17] <nomagno> It seems like the kind of thing that works I'm theory but not actually possible to implement
[02:59:24] *** Joins: hololeap_ (~hololeap@user/hololeap)
[02:59:34] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[02:59:38] <epony> what is currying ;-)
[03:00:31] *** Quits: licksjp (~licksjp@pkos009-160.kcn.ne.jp) (Quit: Leaving...)
[03:00:52] *** Quits: Akuli (~Akuli@87-94-108-212.bb.dnainternet.fi) (Quit: Akuli)
[03:01:38] <pyzozord> nomagno: as far as I know function add(x,y) { return function (y) { return y + x } }
[03:01:47] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:03:15] <pyzozord> or sorrt kind of the opposite function curryAdd(x) { return function(y) { return add(x, y) }
[03:03:56] <nomagno> Hmmm...
[03:04:14] <pyzozord> just kind of wrapping functions to predefine some of the arguments
[03:04:35] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 260 seconds)
[03:06:30] *** Joins: Inst (~Liam@2601:6c4:4080:3f80:ed81:d418:758d:530d)
[03:06:51] <pyzozord> "In functional programming languages, and many others, it provides a way of automatically managing how arguments are passed to functions and exceptions. In theoretical computer science, it provides a way to study functions with multiple arguments in simpler theoretical models which provide only one argument."
[03:07:37] <pyzozord> looks like lambda calculus is one big curry
[03:07:39] *** Joins: audio (~audio@user/audio)
[03:07:43] <CuriousErnestBro> hi
[03:07:52] <CuriousErnestBro> any dutch people here?
[03:09:10] <pyzozord> why you wanna duble dutch?
[03:09:47] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[03:13:15] <pyzozord> god 
[03:13:34] *** Joins: wildo (~lain6141@202.180.111.143)
[03:13:35] <pyzozord> i just unignored everyone, I think I'll start ignoring even more aggressively
[03:13:44] <pyzozord> I have very short patience to trolls recently
[03:14:46] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[03:15:20] <nomagno> Aaaah, I get it
[03:17:05] *** Joins: InstX1 (~Liam@2601:6c4:4080:3f80:6189:32c1:ad22:f12d)
[03:17:25] *** Quits: Guest69 (~Guest69@ip68-105-113-105.sd.sd.cox.net) (Ping timeout: 256 seconds)
[03:17:39] *** Quits: Inst (~Liam@2601:6c4:4080:3f80:ed81:d418:758d:530d) (Ping timeout: 260 seconds)
[03:18:23] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[03:18:50] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[03:19:34] <nomagno> https://termbin.com/wk2g
[03:19:34] <bayaz> Type: text/plain; charset=utf-8 Size: 101 B 
[03:19:39] <nomagno> I can't believe this works lol
[03:20:04] <nomagno> Prints 3
[03:20:41] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[03:21:23] *** Quits: InstX1 (~Liam@2601:6c4:4080:3f80:6189:32c1:ad22:f12d) (Ping timeout: 256 seconds)
[03:21:41] *** Joins: unixpro1970 (~unixpro19@c-67-168-188-36.hsd1.wa.comcast.net)
[03:21:42] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[03:22:19] <nomagno> You do have to figure out how to infix and/or postfix ALL operations, which might not be syntactically possible
[03:22:32] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[03:23:04] *** Joins: jkl (~jkl@user/jkl)
[03:23:55] *** Quits: henbruas (~henbruas@ti0003a400-6569.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[03:24:33] *** Joins: henbruas (~henbruas@ti0003a400-6569.bb.online.no)
[03:24:49] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 248 seconds)
[03:26:22] *** Joins: Quackers (~Quackers4@2001:1284:f013:f6db:7088:238a:4bbe:4068)
[03:27:27] *** Quits: jaysicks (~jaysicks@62-165-243-204.pool.digikabel.hu) (Remote host closed the connection)
[03:28:24] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:30:53] *** Joins: cx_ (~cx@user/cx)
[03:31:45] *** Quits: Quackers (~Quackers4@2001:1284:f013:f6db:7088:238a:4bbe:4068) (Quit: Leaving)
[03:32:37] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[03:33:48] *** Joins: pizdets (~pizdets@183.182.111.118)
[03:34:09] *** Quits: pizdets_ (~pizdets@183.182.115.90) (Ping timeout: 265 seconds)
[03:34:42] *** Quits: cx_ (~cx@user/cx) (Client Quit)
[03:35:28] *** Joins: eddof13 (~textual@2806:102e:12:64:ed65:153f:4619:a0e9)
[03:37:34] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:39:31] *** Joins: NeoFAT32 (~UserNick@user/NeoFAT32)
[03:39:56] <vdamewood> pyzozord: Troll in the dungeon?
[03:45:31] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[03:47:59] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[03:48:17] *** Joins: immibis (~hexchat@62.156.144.218)
[03:49:33] <ProfSimm> pyzozord: I also accept one argument in mine, but that argument is often composite (tuple/record), and I return one (which also may be composite).
[03:49:44] <ProfSimm> pyzozord: even when you take one/return one the style differs
[03:49:49] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:50:19] <ProfSimm> pyzozord: but taking many arguments and returning one result was always an ugly hack.
[03:54:54] *** Quits: unixpro1970 (~unixpro19@c-67-168-188-36.hsd1.wa.comcast.net) (Remote host closed the connection)
[03:55:16] *** Joins: unixpro1970 (~unixpro19@c-67-168-188-36.hsd1.wa.comcast.net)
[03:56:29] *** Joins: operateur (~My_user_n@178-221-69-32.dynamic.isp.telekom.rs)
[03:57:46] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4.1)
[04:01:08] *** Quits: operateur (~My_user_n@178-221-69-32.dynamic.isp.telekom.rs) (Ping timeout: 246 seconds)
[04:05:53] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 248 seconds)
[04:18:24] <beaky> at last after months i have finished my tea database's succinct radix trie key value data structure in rust but i think i have a bug in indexing somewhere how do i prove it correct https://bpa.st/TMUQ
[04:18:26] <bayaz> Title: View paste TMUQ 
[04:19:45] *** Quits: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 256 seconds)
[04:20:25] *** Joins: urnebes (~urnebes@2605:8d80:665:ec32:2248:ee02:2cbe:35e0)
[04:20:44] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 246 seconds)
[04:20:53] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[04:22:03] *** Quits: NeoFAT32 (~UserNick@user/NeoFAT32) (Remote host closed the connection)
[04:22:51] *** Joins: NeoFAT32 (~UserNick@user/NeoFAT32)
[04:23:10] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[04:24:59] *** Joins: InstX1 (~Liam@c-98-208-218-119.hsd1.fl.comcast.net)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:26:57] <epony> no wonder it's unpopular as a term.. https://en.wikipedia.org/wiki/Currying#History
[04:26:57] <bayaz> Title: Currying - Wikipedia 
[04:27:25] *** Quits: audio (~audio@user/audio) (Ping timeout: 250 seconds)
[04:27:33] *** Quits: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp) (Quit: xff0x)
[04:28:01] <epony> https://en.wikipedia.org/wiki/Evaluation_strategy#Table
[04:28:01] <bayaz> Title: Evaluation strategy - Wikipedia 
[04:29:15] *** seifeslimene_ is now known as seifeslimene
[04:29:51] <epony> "Curried functions may be used in any programming language that supports closures; however, uncurried functions are generally preferred for efficiency reasons, since the overhead of partial application and closure creation can then be avoided for most function calls."
[04:30:16] *** Quits: antranigv (~antranigv@37.252.78.252) (Quit: ZNC 1.8.2 - https://znc.in)
[04:30:41] *** Joins: antranigv (~antranigv@37.252.78.252)
[04:31:08] *** Joins: y0m0n (~NA@5-12-91-184.residential.rdsnet.ro)
[04:31:13] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[04:31:28] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 260 seconds)
[04:31:53] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:32:13] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[04:32:16] <epony> https://en.wikipedia.org/wiki/Haskell_Curry#Work
[04:32:17] <bayaz> Title: Haskell Curry - Wikipedia 
[04:34:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[04:34:28] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:34:50] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:36:38] *** Joins: RazielZ (~Raziel@user/raziel)
[04:37:23] *** Joins: KDDLB9 (kevin@user/kddlb)
[04:37:23] *** feoh is now known as Guest2673
[04:37:24] *** Quits: Guest2673 (~feoh@idlerpg/player/feoh) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[04:37:24] *** Joins: brw7 (~bas@46.232.210.60)
[04:37:27] *** Joins: feoh (~feoh@idlerpg/player/feoh)
[04:37:28] *** Joins: scjosh7 (~scjosh@206.189.79.69)
[04:37:29] *** Joins: OverCoder8 (~OverCoder@user/overcoder)
[04:37:30] *** Joins: Malin8 (lounge@pirate.pt)
[04:37:33] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Ping timeout: 256 seconds)
[04:37:33] *** Quits: Dijky (~Dijky@user/dijky) (Ping timeout: 256 seconds)
[04:37:35] *** Joins: SoF9 (~skius@user/skius)
[04:37:35] *** Joins: Retr0id8 (~Retr0id@user/retr0id)
[04:37:36] *** Joins: haliucinas7 (~d5c5a67e@5.20.153.21)
[04:37:47] *** Joins: mven1 (~mven@ip68-104-39-54.lv.lv.cox.net)
[04:37:47] *** Quits: KDDLB (kevin@user/kddlb) (Killed (NickServ (GHOST command used by KDDLB9)))
[04:37:48] *** KDDLB9 is now known as KDDLB
[04:38:06] *** Quits: ebb (ebb@user/ebb) (Remote host closed the connection)
[04:38:07] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (Ping timeout: 256 seconds)
[04:38:07] *** Quits: lupi (~lupi@is.here.for-some.fun) (Ping timeout: 256 seconds)
[04:38:10] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Read error: Connection reset by peer)
[04:38:10] *** Quits: scjosh (~scjosh@206.189.79.69) (Read error: Connection reset by peer)
[04:38:10] *** scjosh7 is now known as scjosh
[04:38:10] *** Quits: extor (~xtor@192.99.217.240) (Remote host closed the connection)
[04:38:12] *** Joins: CalimeroTeknik (~calimero@ctkarch.org)
[04:38:16] *** Quits: jelly (~me@user/jelly) (Remote host closed the connection)
[04:38:19] *** Joins: extor (~xtor@192.99.217.240)
[04:38:21] *** Joins: lupi (~lupi@is.here.for-some.fun)
[04:38:25] <epony> https://en.wikipedia.org/wiki/Functional_programming#Comparison_to_imperative_programming ; https://en.wikipedia.org/wiki/Functional_programming#Efficiency_issues "
[04:38:25] <bayaz> Title: Functional programming - Wikipedia 
[04:38:26] <bayaz> Title: Functional programming - Wikipedia 
[04:38:27] *** Joins: Dijky (~Dijky@user/dijky)
[04:38:27] *** Quits: shodan45 (~quassel@107.161.22.155) (Remote host closed the connection)
[04:38:28] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[04:38:29] *** Quits: yitz (~yitz@exercism/yitz) (Remote host closed the connection)
[04:38:32] *** Quits: blinky42 (~quassel@user/blinky42) (Read error: Connection reset by peer)
[04:38:41] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[04:38:41] *** Quits: gdarko (~me@dg.mk) (Ping timeout: 256 seconds)
[04:38:42] *** Quits: spacenautx (~spacenaut@user/spacenautx) (Quit: WeeChat 3.4.1)
[04:38:42] *** Quits: brw (~bas@46.232.210.60) (Read error: Connection reset by peer)
[04:38:42] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Read error: Connection reset by peer)
[04:38:42] *** brw7 is now known as brw
[04:38:43] *** mven1 is now known as mven
[04:38:44] *** Quits: dTal (~quassel@dragonbox/wizzard/dtal) (Remote host closed the connection)
[04:38:45] *** Joins: yitz (~yitz@exercism/yitz)
[04:38:54] *** Quits: SoF (~skius@user/skius) (Read error: Connection reset by peer)
[04:38:54] *** Quits: Retr0id (~Retr0id@user/retr0id) (Read error: Connection reset by peer)
[04:38:54] *** SoF9 is now known as SoF
[04:38:54] *** Retr0id8 is now known as Retr0id
[04:38:56] *** Quits: OverCoder (~OverCoder@user/overcoder) (Read error: Connection reset by peer)
[04:38:57] *** OverCoder8 is now known as OverCoder
[04:39:06] *** Joins: joev (~joev@user/joev)
[04:39:07] *** Quits: wolfshappen (~waff@irc.furworks.de) (Read error: Connection reset by peer)
[04:39:11] *** Quits: Malin (lounge@pirate.pt) (Read error: Connection reset by peer)
[04:39:11] *** Malin8 is now known as Malin
[04:39:15] *** Quits: haliucinas (~d5c5a67e@5.20.153.21) (Ping timeout: 256 seconds)
[04:39:15] *** haliucinas7 is now known as haliucinas
[04:39:16] <sonny> beaky: good question
[04:39:19] *** Quits: Cyp_ (~cyp@213.237.84.236) (Read error: Connection reset by peer)
[04:39:22] <epony> "It is also not easy to create their equally efficient general-purpose immutable counterparts. For purely functional languages, the worst-case slowdown is logarithmic in the number of memory cells used"
[04:39:36] *** Joins: shodan45 (~quassel@107.161.22.155)
[04:39:41] *** Joins: blinky42 (~quassel@jabber.blinkylight.net)
[04:39:41] *** Quits: blinky42 (~quassel@jabber.blinkylight.net) (Changing host)
[04:39:41] *** Joins: blinky42 (~quassel@user/blinky42)
[04:39:43] *** Joins: Cyp_ (~cyp@213.237.84.236)
[04:39:49] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 256 seconds)
[04:39:53] *** Joins: dTal (quassel@dragonbox/wizzard/dtal)
[04:40:03] *** Joins: wolfshappen (~waff@irc.furworks.de)
[04:40:24] *** Joins: gdarko (~me@dg.mk)
[04:40:30] <epony> beaky, you would enumerate from the index and without the index sequentially and compare results for discrepancies
[04:40:38] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[04:40:50] <sonny> epony how to proove a program is correct?
[04:40:52] <beaky> yes good idea i will try that
[04:40:56] <epony> "walking" your data set
[04:41:52] <CuriousErnestBro> irc was down?
[04:41:53] <CuriousErnestBro> hi beaky what's up
[04:42:11] <epony> sonny, numerous methodologies, one trivial is empirical (use and validate), enumerative (brute force), the others are algorithmic and finally formal proofs, 
[04:42:39] *** Quits: ninjabanjo (~ninjabanj@107.150.45.163) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: alephalpha0 (~alephalph@192.227.193.105) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: AsenMx (~asen@user/asenmx) (Ping timeout: 256 seconds)
[04:42:39] *** Quits: zzz (~z@user/zero) (Ping timeout: 256 seconds)
[04:42:45] *** Joins: ebb (ebb@user/ebb)
[04:42:50] <sonny> I am thinking about proofs
[04:42:52] <epony> sonny, real proof is inability to prove it is incorrect
[04:42:54] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[04:42:57] *** Joins: Spr0cket- (sprocket@user/Spr0cket)
[04:42:58] *** Joins: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[04:43:00] <sonny> programs as predicates by hoare seems interesting
[04:43:00] *** Joins: zero (~z@user/zero)
[04:43:02] *** Joins: AsenMx (~asen@user/asenmx)
[04:43:13] *** Quits: apotheon (~apotheon@copyfree/founder/apotheon) (Ping timeout: 256 seconds)
[04:43:13] *** Quits: Aph3x-WL (~Aph3x@li616-175.members.linode.com) (Ping timeout: 256 seconds)
[04:43:13] *** Quits: Spr0cket (sprocket@user/Spr0cket) (Ping timeout: 256 seconds)
[04:43:19] <epony> matched with ability to prove it is correct
[04:43:21] *** Joins: alephalpha0 (~alephalph@192.227.193.105)
[04:43:42] <epony> correctness are various types from algebraic to logic
[04:43:47] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: Solak (~solak@86-87-47-28.fixed.kpn.net) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: Brando751 (~Brando753@ec2-34-218-254-59.us-west-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: JTL (~irc@user/jtl) (Ping timeout: 256 seconds)
[04:43:49] *** Spr0cket- is now known as Spr0cket
[04:43:57] *** Joins: derelict (~derelict@user/derelict)
[04:44:02] *** Joins: ninjabanjo (~ninjabanj@107.150.45.163)
[04:44:02] <epony> to specification alignment
[04:44:21] *** Quits: APic (apic@apic.name) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: bytefire (~bytefire@li1531-193.members.linode.com) (Ping timeout: 256 seconds)
[04:44:21] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Ping timeout: 256 seconds)
[04:44:29] *** Joins: fjmorazan_ (~quassel@user/fjmorazan)
[04:45:14] *** Joins: apotheon (~apotheon@copyfree/founder/apotheon)
[04:45:36] *** Joins: Solak (~solak@86-87-47-28.fixed.kpn.net)
[04:45:41] *** Joins: bytefire (~bytefire@li1531-193.members.linode.com)
[04:45:48] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 250 seconds)
[04:45:49] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[04:46:16] *** Joins: Thedarkb (~Thedarkb@92.40.196.0.threembb.co.uk)
[04:46:53] *** Joins: JTL (~irc@user/jtl)
[04:47:20] *** Joins: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[04:47:55] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:47:55] *** Quits: wonko-th1-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane) (Ping timeout: 240 seconds)
[04:48:00] *** Joins: flaqoniun (~F@32.211.211.39)
[04:50:25] <sonny> yeah, the type of logic is what I am curious about
[04:50:35] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[04:51:07] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[04:51:32] <epony> https://en.wikipedia.org/wiki/Formal_methods#Verification
[04:51:32] <bayaz> Title: Formal methods - Wikipedia 
[04:52:01] <epony> https://en.wikipedia.org/wiki/Correctness_(computer_science)
[04:52:02] <bayaz> Title: Correctness (computer science) - Wikipedia 
[04:52:10] <epony> https://en.wikipedia.org/wiki/Formal_verification#Approaches
[04:52:10] <bayaz> Title: Formal verification - Wikipedia 
[04:52:23] *** Joins: jelly (jelly@user/jelly)
[04:52:57] <epony> https://en.wikipedia.org/wiki/Software_verification_and_validation#Methodology
[04:52:57] <bayaz> Title: Software verification and validation - Wikipedia 
[04:53:52] <epony> https://en.wikipedia.org/wiki/Verification_and_validation#Categories_of_validation
[04:53:52] <bayaz> Title: Verification and validation - Wikipedia 
[04:54:29] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[04:55:24] *** Joins: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp)
[04:56:12] *** Joins: APic (~apic@apic.name)
[04:56:22] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[04:57:14] *** Joins: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com)
[04:57:18] *** Joins: Aph3x-WL (~Aph3x@li616-175.members.linode.com)
[04:57:31] <sonny> I was looking for this https://en.wikipedia.org/wiki/Predicative_programming
[04:57:32] <bayaz> Title: Predicative programming - Wikipedia 
[04:57:33] <duuude> whoever wrote this would commit suicide upon hearing about modern gnome http://hallofshame.gp.co.at/visual.html
[04:57:34] <bayaz> Title: interface hall of shame: visual elements [mirror of iarchitect.com] 
[04:57:49] *** Quits: seifeslimene (~seifeslim@197.2.10.72) (Quit: Konversation terminated!)
[04:57:54] *** Joins: Brando751 (~Brando753@ec2-34-218-254-59.us-west-2.compute.amazonaws.com)
[04:58:17] *** Quits: LtHummus (~lthummus@user/LtHummus) (Quit: ZNC 1.8.2 - https://znc.in)
[04:58:19] *** Joins: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net)
[04:58:48] <epony> sonny, before that, there is https://en.wikipedia.org/wiki/Program_derivation
[04:58:48] <bayaz> Title: Program derivation - Wikipedia 
[04:59:54] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com)
[05:01:54] <flaqoniun> LOL that VB5 dropdown animation
[05:02:10] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[05:02:11] *** Joins: LtHummus (~lthummus@user/LtHummus)
[05:03:23] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-c9dd-5a31-0f2b-f1f9.inf6.spectrum.com) (Ping timeout: 256 seconds)
[05:03:54] <epony> https://en.wikipedia.org/wiki/Formal_methods#Applications
[05:03:54] <bayaz> Title: Formal methods - Wikipedia 
[05:04:21] <duuude> flaqoniun: that is where i started thinking about gnome
[05:05:18] *** Quits: jamea (~jamea@200.68.140.14) (Ping timeout: 272 seconds)
[05:05:41] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[05:05:43] <sonny> epony formal methods are deemed to be too expensive?
[05:06:12] <epony> yeah
[05:06:19] <sonny> I see
[05:06:30] <epony> people are expensive
[05:06:36] <sonny> that's very interesting then
[05:06:51] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[05:06:53] <epony> formalisation starts from the specification, to implementation, to assurance
[05:06:59] <sonny> epony I was thinking this would require developers to undergo training as well
[05:07:16] <epony> first, application specification people
[05:07:22] <sonny> but then they would actually be doing 'software engineering'
[05:07:43] <epony> engineering is a bit of a complex term here..
[05:08:21] <epony> see https://en.wikipedia.org/wiki/Software_engineering#Definitions_and_terminology_controversies
[05:08:22] <bayaz> Title: Software engineering - Wikipedia 
[05:08:41] <epony> the key concept is "systemic"
[05:08:46] <sonny> ok, let me say making specifications and programs that are derived from them
[05:08:49] <epony> (or systems)
[05:08:57] <sonny> that are not broken
[05:09:47] <epony> in one of the linked articles the key concept was "applying mathematically correct methodologies"
[05:10:38] <epony> it's typically mostly pursued at implementation level, where the technical correctness of program and compiler make the core of the validity
[05:11:41] <epony> the previous stages can be done intuitively or logically at program design time (which is the real skill)
[05:12:02] <sonny> afk
[05:12:23] <epony> correction, formally "afk"
[05:13:17] * epony replaces formalism with formal formalism, formally
[05:15:33] *** Joins: lisp123 (~lisp123@143.238.171.43)
[05:16:45] *** Quits: InstX1 (~Liam@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[05:18:20] <epony> https://www.cs.utexas.edu/~EWD/transcriptions/EWD10xx/EWD1036.html  "The popularity of its name is enough to make it suspect. In what we denote as "primitive societies", the superstition that knowing someone's true name gives you magic power over him is not unusual. We are hardly less primitive: why do we persist here in answering the telephone with the most unhelpful "hello" instead of our name?"
[05:18:21] <bayaz> Title: E.W. Dijkstra Archive: On the cruelty of really teaching computing science (EWD 1036) 
[05:18:39] <epony> ^ recursion, ehm?
[05:19:46] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[05:19:58] *** Joins: flaqoniun (~F@32.211.211.39)
[05:20:01] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 248 seconds)
[05:21:23] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[05:22:15] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[05:25:21] *** Quits: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp) (Ping timeout: 248 seconds)
[05:25:50] <PlanckWalk> I answer with "hello" instead of my name since 1) if someone is calling me, then they damn well ought to know my name and 2) there are a lot of scammers out there.
[05:26:06] <PlanckWalk> If they don't know my name then they are probably a cold-calling scammer.
[05:26:06] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Ping timeout: 250 seconds)
[05:26:59] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[05:27:11] <epony> "So, if I look into my foggy crystal ball at the future of computing science education, I overwhelmingly see the depressing picture of "Business as usual". The universities will continue to lack the courage to teach hard science, they will continue to misguide the students, and each next stage of infantilization of the curriculum will be hailed as educational progress." .. "Teaching to unsuspecting youngsters the effective use of formal methods is one of 
[05:27:11] <epony> the joys of life because it is so extremely rewarding. Within a few months, they find their way in a new world with a justified degree of confidence that is radically novel for them; within a few months, their concept of intellectual culture has acquired a radically novel dimension. To my taste and style, that is what education is about. Universities should not be afraid of teaching radical novelties; on the contrary, it is their calling to welcome the 
[05:27:12] <epony> opportunity to do so. Their willingness to do so is our main safeguard against dictatorships, be they of the proletariat, of the scientific establishment, or of the corporate elite."
[05:27:24] <sonny> yeah, you would be on a first name basis already
[05:28:06] <epony> different times, caller ID was not really available everywhere on rotary dial telephone desk-sets
[05:28:27] <sonny> business as usuall  == java schools
[05:28:36] <sonny> epony oh yeah
[05:28:52] <epony> and then again, people acknowledging each others name on the phone is a protocol you will find the most endearing once you've been exposed to it
[05:29:05] <PlanckWalk> One of my courses taught formal methods.
[05:29:19] <epony> interesting ;-)
[05:29:21] <PlanckWalk> The pass rate was abyssmal.
[05:29:28] <epony> yes
[05:29:29] <sonny> oh :(
[05:29:36] <epony> you learned some of it so you pass
[05:29:39] <flaqoniun> only capitalist pig-dogs like edison would answer the phone with "hello" !
[05:29:45] <sonny> wasn't any at my last one, I just remember all the books in the library
[05:29:49] <epony> (some of the students that do not reject the concepts outright)
[05:30:02] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Ping timeout: 246 seconds)
[05:30:16] <flaqoniun> (/s) incase...
[05:31:59] *** Joins: InstX1 (~Liam@c-98-208-218-119.hsd1.fl.comcast.net)
[05:32:27] <epony> I think some of the details listed in that article are interesting and still valid or usable or points that are maintained over the couse of development of computer programming teaching and practice (lack of teaching) replacement for it.. however the radical position and seemingly bitter scepticism is more towards degradation of standards and quality, than against the notions and ideas, but the profane variants of those 'business practices' (at the time 
[05:32:27] <epony> education was being pulled from the process and the academic people vacuumed into businesses)
[05:32:38] <sonny> they still had a class on expert systems though xD
[05:33:59] <epony> but there are various levels of schooling and if we compare the development of technology, it provides more access to scientific tooling if needed, contrary to having to pass through a particular needle earhole (5-year coursework in a particular decade)
[05:34:33] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[05:35:08] <hans> if we could stop reffering to shit as "long" / "long long" /"short" etc, and just call them int16, int32, int64, that'd be great.
[05:35:25] <sonny> include <stdint.h>
[05:35:27] <flaqoniun> #include <stdint.h> ppl, its not too hard
[05:35:57] *** Joins: vysn (~vysn@user/vysn)
[05:36:00] <sonny> the others are required so you can move platforms
[05:36:11] <sonny> unless the compiler can handle arbitrary ranges
[05:36:49] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[05:36:58] <sonny> I'm curious about char being signed though, dunno why that would be the case
[05:37:06] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[05:37:12] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:37:18] *** Joins: flaqoniun (~F@32.211.211.39)
[05:37:52] <epony> the comparison of naive and realistic aspects of portability and machine / architecture independent porting
[05:38:10] *** Joins: bnchs (~bnchs@160.176.27.67)
[05:38:17] <epony> there was a time before p-code was the tooling ;-)
[05:38:23] <bnchs> hey guys i wanted to hear your opinion on something
[05:38:44] <flaqoniun> are you sure!?
[05:39:29] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[05:39:47] <bnchs> would you rather do: module[SOCKET_TEST_FUNC](arguments) or module.module_union.socket.test(arguments)
[05:39:51] <epony> sonny, control codes
[05:40:00] <bnchs> module.commands[SOCKET_TEST_FUNC](arguments)*
[05:40:15] *** Joins: Church (~aleph@72.80.0.136)
[05:40:48] <flaqoniun> the function pointer array one
[05:40:49] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[05:41:16] *** Quits: eddof13 (~textual@2806:102e:12:64:ed65:153f:4619:a0e9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:41:31] <bnchs> thanks
[05:41:41] <hans> module.commands[arguments](SOCKET_TEST_FUNC)
[05:41:54] <epony> https://en.wikipedia.org/wiki/Integer_(computer_science)#Common_integral_data_types
[05:41:54] <bayaz> Title: Integer (computer science) - Wikipedia 
[05:42:17] <hans> then you catch the invalid index exception and use that to 
[05:42:21] <hans> jesfjidge
[05:42:22] <bnchs> hans: ok so module.commands["data", 4](SOCKET_TEST_FUNC)
[05:42:24] <flaqoniun> ALTHOUGH,  is the array readonly?
[05:42:44] <bnchs> flaqoniun, yes
[05:42:47] <flaqoniun> ok cool
[05:42:51] <hans> bnchs: yeah no im just joking and its 3am and im practically drunk
[05:43:01] <bnchs> it's a constant
[05:43:17] <bnchs> i mean thanks for your opinion
[05:43:40] <bnchs> i want to make my program better
[05:46:58] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 268 seconds)
[05:47:28] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Quit: Client closed)
[05:48:51] <flaqoniun> the only reason is because using a union there looks kind of ugly to me
[05:49:26] <flaqoniun> just personal taste 
[05:50:11] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[05:50:54] <epony> https://en.wikipedia.org/wiki/Signedness#In_programming_languages  "The C programming language, along with its derivatives, implements a signedness for all integer data types, as well as for "character".. the C standard declares signed char, unsigned char, and char, to be three distinct types, but specifies that all three must have the same size and alignment. Further, char must have the same numeric range as either signed char or unsigned char, but the 
[05:50:54] <epony> choice of which depends on the platform." (endianness, byte order and conversion control)
[05:50:54] <bayaz> Title: Signedness - Wikipedia 
[05:51:10] <sonny> epony oh that makes a lot of sense then
[05:51:51] <flaqoniun> woah woah woah, three types of char
[05:51:54] <flaqoniun> wtf
[05:52:25] <epony> must work won various byte width, endianness and hardware word size and addressing mode bit width
[05:52:41] <epony> s/ won / with /g
[05:53:20] <epony> there is an assembler in it (pretty thinly covered)
[05:53:48] <sonny> epony non of the control codes need negative values?
[05:53:52] <epony> just enough to give you portability
[05:54:04] <sonny> starts at 0x0 (null)
[05:54:13] <epony> sonny, yeah, but if you know the HW you can toggle control bit flags like that
[05:54:24] <sonny> oh
[05:54:28] <epony> the high ones are 128+255
[05:55:01] <epony> s/+/÷/
[05:55:26] <flaqoniun> gcc doesn't seem to care if you assign signed char to a char
[05:55:31] <flaqoniun> with -Wconversion on
[05:56:33] <bnchs> flaqoniun, i mean yeah
[05:56:36] <flaqoniun> does that wikipage have a citation?
[05:56:38] <bnchs> the union is kinda ugly
[05:56:42] <bnchs> and too long
[05:57:26] <epony> flaqoniun, did not see it, but there is a link to follow..
[05:57:31] <flaqoniun> yup thats my biggest issue wihth unions, it kills my horizontal real-estate
[05:58:07] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[05:58:50] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[05:58:56] <epony> https://en.wikipedia.org/wiki/C_data_types#Basic_types
[05:58:56] <bayaz> Title: C data types - Wikipedia 
[05:59:14] <bnchs> epony: is your only purpose to quote wikipedia pages
[06:01:08] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[06:03:02] <epony> that's not a question, is it?
[06:03:04] <epony> ;-)
[06:03:24] <epony> nope (read backwards)
[06:03:38] *** Quits: swp (~Thunderbi@143.176.249.0) (Remote host closed the connection)
[06:03:44] <epony> (so I can put 2x more NO.)
[06:03:56] *** Joins: swp (~Thunderbi@143.176.249.0)
[06:04:49] *** Joins: yoyojambo (~yoyojambo@2806:108e:18:3670:2995:82d1:ef5a:4cc)
[06:06:08] *** Quits: urnebes (~urnebes@2605:8d80:665:ec32:2248:ee02:2cbe:35e0) (Read error: Connection reset by peer)
[06:07:34] *** Joins: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[06:07:52] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[06:08:17] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[06:09:52] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Ping timeout: 250 seconds)
[06:12:23] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[06:12:58] *** Quits: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it) (Ping timeout: 260 seconds)
[06:14:58] *** Joins: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp)
[06:16:14] *** Quits: bnchs (~bnchs@160.176.27.67) (Ping timeout: 246 seconds)
[06:16:44] *** Joins: Inline__ (~Inline@p200300cd470f5c00eeead6c89d51972a.dip0.t-ipconnect.de)
[06:17:03] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 260 seconds)
[06:17:19] <snake> flaqoniun, unions are actually pretty nifty and they are used with SDL_Event for example
[06:17:56] <flaqoniun> yeah i know but i'm one of those programmers that doesn't like to shorten variable names unless i realllly really have to
[06:18:06] <snake> no i get that
[06:18:20] <snake> honestly sometimes i write them a bit long
[06:18:21] <snake> hmm
[06:18:39] <snake> but what does a union type have to do with variable name length?
[06:19:00] *** Quits: Inline (~Inline@p200300cd47090700f6a7abc6bfc79784.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:19:13] <flaqoniun> they're pretty powerful though so i deal with it
[06:19:32] <snake> yeah, just gotta use em as a tool
[06:19:47] <snake> maybe it's not a tool you're fond of tho
[06:19:50] <snake> i suppose
[06:19:53] <flaqoniun> well you have the union object, then the name of the thing you want to access  instad of just one object
[06:20:05] <snake> flaqoniun, SDL_Event is a good example
[06:20:07] <flaqoniun> even if its just one letter, thats two additional charcters
[06:20:24] <snake> it only stores one type of Event
[06:20:34] <snake> but when you poll events you get a homogenous data type
[06:20:50] <snake> not having one function for polling each type of event, its always just SDL_Event union
[06:21:00] <snake> and then you switch on the type field which is an enumeration
[06:21:12] <snake> and you can access the specific event fields that way
[06:21:44] <snake> i prolly didnt say that very well
[06:21:50] <flaqoniun> another good thing is you can allocate a big block of unions and share them, instead of allocating a specific type
[06:21:53] <snake> but you porobably already know what it is so
[06:22:05] *** Joins: jasper1378 (~jasper137@bras-base-toroon0628w-grc-45-142-112-140-241.dsl.bell.ca)
[06:22:08] <epony> on regex, and scope of searching within files and groups of files..  https://en.wikipedia.org/wiki/Naming_convention_(programming)#Length_of_identifiers  it's your project and development environment that mandate that
[06:22:09] <bayaz> Title: Naming convention (programming) - Wikipedia 
[06:22:21] <snake> a block of unions and share them?
[06:22:43] <snake> well the point of a union is you save space, because the instance only contains one of the possible types
[06:22:44] <flaqoniun> yeah like mouse and keyboard events can just use and recycle the same objects
[06:23:08] <snake> yeah i think we're saying the same thing just worded differently
[06:23:34] <snake> anyways good luck on conquering your horizontal space
[06:24:02] <flaqoniun> i'm going to have to rename some fields, i have a few split lines i can't fix :(
[06:24:10] <snake> honestly i just make every line EXACTLY 80 characters long
[06:24:18] <snake> that way the file is nice and square and easier to read
[06:24:23] <snake> its also more vertically efficient that way
[06:25:09] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::7377)
[06:25:27] <snake> my boss kinda hates me for it tho and threatens to fire me if i dont cut it out, but i always make each line 80 characters long
[06:25:30] <epony> misread that as "each var ex. 80c long"
[06:25:43] <snake> and nothing bad ever happens :p
[06:25:54] <snake> guess if you get shit done then all else dont matter xD
[06:26:25] <snake> tho i suppose some others were complaining that i rewrote their code like this and they can no longer read it :v that might be why its hard to replace me
[06:26:26] <PlanckWalk> Hmm, I guess you need to make sure that each file has exactly 80 lines too.
[06:26:42] <snake> wow i didn't even consider that PlanckWalk 
[06:26:44] <PlanckWalk> And if you need more than that, then you need 80 files instead.
[06:26:54] * snake takes notes
[06:27:00] <PlanckWalk> With filenames that are also 80 characters long.
[06:27:05] <snake> LMAO
[06:27:08] <flaqoniun> well wait hold on, whats the width / height ratio on your fonts
[06:27:10] <epony> 80x60
[06:27:21] <snake> my font is just 8 pixels
[06:27:26] *** Quits: coaxing (~coaxing@user/coaxing) (Quit: WeeChat 3.4.1)
[06:27:29] <snake> dont wannt make that too complicated i got work to do ya know
[06:27:30] <epony> 6x13 here
[06:27:39] <snake> err 8pt
[06:27:41] <snake> dunno the pixels
[06:27:58] <epony> screens use px ;-) and ppi
[06:28:14] <epony> printers use pt and dpi
[06:28:46] <PlanckWalk> The ppi settings on my monitor are all wrong, so I'd need a ruler to work out the true point size.
[06:29:19] <epony> technically you want to have exactly 50 lines of text for pages
[06:29:41] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[06:29:41] <snake> PlanckWalk, nah rectangles are OK tho
[06:29:48] *** Parts: Themis3000 (~Thunderbi@user/themis3000) ()
[06:29:53] <snake> if i start making the files 80 lines long he will really fire me LOL
[06:30:03] <epony> so you trim that to your "screen lines wasted" by the editor and its header/minibuffer, line separator, status lines etc
[06:30:27] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[06:30:35] <snake> im laughing so hard right now
[06:30:46] <epony> for readability you need a bit more than 80, mostly in the 100-120 range
[06:31:06] <flaqoniun> it's fine c lets you #include .c files so just make a new one and include the previous!
[06:31:14] *** Quits: newwebdev13 (~newwebdev@78.135.91.54) (Quit: Leaving)
[06:31:22] <epony> if you sample most of the printer books you'll see the roughly 60 lines per page too..
[06:31:27] <epony> "printeD"
[06:31:49] <epony> guess where the 53 lines come from ;-)
[06:32:12] <epony> (you know about the tabulator 80c width)
[06:32:42] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[06:34:22] *** Joins: pmercado (~pmercado@190.22.83.12)
[06:35:08] <epony> https://en.wikipedia.org/wiki/Punched_card#IBM_80-column_format_and_character_codes
[06:35:09] <bayaz> Title: Punched card - Wikipedia 
[06:36:33] <flaqoniun> for the record, my screen is not a punch card, but i often have multiple terminals open
[06:37:57] <epony> yeah, it makes sense to use some constraints for portability and combined workloads
[06:38:02] *** Joins: NeoFAT32_ (~UserNick@118.179.224.74)
[06:39:12] *** Joins: abraham9 (~abraham@64.227.110.185)
[06:39:27] <epony> you might end up editing your work on an 80 column system (physical constraint) and with line editing tools (automation) that might cause you to curse your unfolded at that moment texts
[06:39:57] *** Quits: dademurphy (~dademurph@45.63.16.83) (Ping timeout: 256 seconds)
[06:40:06] *** Joins: dademurphy_ (~dademurph@45.63.16.83)
[06:40:11] *** Joins: dysfigured (~dfg@dfg.rocks)
[06:40:11] <epony> if that chance is low, you can safely spill to 96, 99, 100, 120, 132 widths
[06:40:31] *** Quits: dfg (~dfg@user/dfg) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: nupilios (~nupilios@user/nupilios) (Ping timeout: 256 seconds)
[06:40:31] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Ping timeout: 256 seconds)
[06:40:40] *** Joins: bartwe (bartwe_@77-172-76-187.fixed.kpn.net)
[06:40:48] <epony> or 161, 192, 256 if you want to be fancy about it
[06:41:05] *** Quits: bartwe_ (bartwe_@77-172-76-187.fixed.kpn.net) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: void09 (~void@150.230.21.57) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: tehenderz (~tehenderz@ti0018a400-8221.bb.online.no) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: fcser (~fcser@booty.farted.net) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: ario (~ario@159.65.220.102) (Ping timeout: 256 seconds)
[06:41:05] *** Quits: NeoFAT32 (~UserNick@user/NeoFAT32) (Remote host closed the connection)
[06:41:31] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[06:41:38] *** Joins: tehenderz (~tehenderz@ti0018a400-8221.bb.online.no)
[06:41:39] *** Quits: Crocodillian (~Crocodill@comply.posixsh.org) (Ping timeout: 256 seconds)
[06:41:39] *** Quits: jaskal (jaskal@user/jaskal) (Ping timeout: 256 seconds)
[06:41:39] *** Quits: abraham (~abraham@64.227.110.185) (Ping timeout: 256 seconds)
[06:41:39] *** Quits: tomate (~hubrecht@125.ip-51-178-27.eu) (Ping timeout: 256 seconds)
[06:41:39] *** abraham9 is now known as abraham
[06:41:41] <beaky> it is now time to implement the buffer manager and transaction handler of my tea database at long last after 6 hours of debugging i have eliminated most of the bugs of my tea database succinct radix trie key value store implementation in rust it is almost production ready https://bpa.st/A4EQ
[06:41:42] <bayaz> Title: View paste A4EQ 
[06:41:44] *** Joins: void09 (~void@150.230.21.57)
[06:41:46] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[06:41:54] <epony> on a 27" 100 PPI panel you might end up having 425x110 terminal in full screen no border
[06:42:08] <epony> (with a decent 6x13 font)
[06:42:41] <epony> the interesting part is the 100 lines of text you can have at any time, with overhead (decoration)
[06:42:43] *** Quits: NeoFAT32_ (~UserNick@118.179.224.74) (Quit: Le Soleil ne se couche pas !)
[06:42:55] *** Joins: ario (~ario@159.65.220.102)
[06:43:12] *** Joins: jaskal (jaskal@user/jaskal)
[06:43:19] *** Joins: Crocodillian (~Crocodill@comply.posixsh.org)
[06:43:22] *** Joins: tomate (~hubrecht@125.ip-51-178-27.eu)
[06:43:31] *** Joins: NeoFAT32 (~UserNick@user/NeoFAT32)
[06:44:23] *** dysfigured is now known as dfg
[06:44:32] *** Quits: dfg (~dfg@dfg.rocks) (Changing host)
[06:44:32] *** Joins: dfg (~dfg@user/dfg)
[06:46:09] *** Joins: fcser (~fcser@booty.farted.net)
[06:46:43] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[06:47:16] *** Joins: nupilios (~nupilios@user/nupilios)
[06:48:21] *** Quits: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp) (Quit: xff0x)
[06:49:08] <beaky> my tea database implementation does not look very elegant maybe i am using the wrong abstraction
[06:49:40] *** Joins: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp)
[06:50:57] <epony> What's your table structure?
[06:51:19] <epony> (schema)
[06:56:06] <beaky> i will have tables for each possible tea attribute (type, how much it costs, links, notes, how much i have, etc) keyed by tea name
[06:57:06] <snake> beaky, wow nice job man
[06:57:52] <beaky> yes now to benchmark it against the native rust btree
[06:58:00] <smallville7123> public const short NEGATIVE_INFINITY = (short)0xfc00;  // doesnt this overflow?
[06:58:08] <smallville7123> or is this specific to 16 bit float format? eg 0xfc00 is only ever valid as a NEGATIVE_INFINITY for F16, while as a short it is completely valid as an integer value
[06:58:26] <snake> beaky, one of my professors loves rust
[06:58:42] <snake> he is the machine learning and CS math teacher
[06:58:51] <snake> i had to tell him im not that into it :x
[06:59:38] <beaky> why dont you like rust
[07:00:25] <snake> i can get so much done in more pleb-like languages such as java
[07:00:36] <beaky> i liek rust tho i wish it had higher kinded types and dependent types so i wont have to use coq to prove my succinct radix trie correct
[07:00:41] <snake> but im also interested in c++ for when i wanna feel superior
[07:00:54] <snake> tf is a succint radix trie
[07:01:40] *** Joins: soapsudsxx (~soapsudsx@141.193.188.147)
[07:01:54] <beaky> a succinct radix trie is a radix trie that uses a succinct encoding with bitmaps and bit twiddling for traversal instead of needing to store a lot of pointers that use a lot of ram
[07:03:48] *** Joins: lisp123 (~lisp123@143.238.171.43)
[07:03:51] <beaky> like the adaptive radix tree is screaming-fast but it uses a lot of ram for pointers (even tho being 'adaptive' it only stores as many pointers as children)
[07:03:53] <snake> anyone know how i can fix this nonsense? https://postimg.cc/vg1V0gMh
[07:03:54] <bayaz> Title: Image ? Postimages 
[07:03:59] <sonny> smallville7123 what language etc
[07:03:59] <snake> prolly gonna ask in csharp channel actually
[07:04:05] <snake> or c++ even
[07:04:12] <smallville7123> java
[07:04:34] <sonny> snake there is a semicolon in the header
[07:04:50] <snake> beaky, i should probably google this but what is a trie lol
[07:05:02] <snake> sonny, that's the thing, there isn't but VS thinks there is lol
[07:05:18] <beaky> yes maybe there is some hidden character somewhere try deleting and rewriting all of it
[07:05:28] *** Quits: rcesptro (~rcesptro@2001:448a:50e1:9076:7cdb:eecd:de3e:930a) (Ping timeout: 260 seconds)
[07:05:29] <snake> sonny, actually they are suggesting i make that change (add a semicolon)
[07:05:31] <snake> its nonsense
[07:05:55] <snake> beaky, i will entertain this suggestion for everyone's amusement
[07:05:57] <sonny> snake check it in notepad
[07:06:11] *** Quits: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp) (Quit: xff0x)
[07:06:12] *** Joins: rcesptro (~rcesptro@180.246.14.92)
[07:06:23] <beaky> a trie is a node-based data structure where each node is connected to up to K children where K is the size of the input alphabet of the trie and it goes as deep as any possible string
[07:06:37] <sonny> smallville7123 big -> small in Java will just truncate iirc
[07:06:38] <snake> wtf, it worked
[07:06:42] <snake> red liens are gone at least
[07:07:25] <beaky> https://en.wikipedia.org/wiki/Radix_tree
[07:07:25] <bayaz> Title: Radix tree - Wikipedia 
[07:07:26] <snake> beaky, ah i see
[07:07:33] <snake> ah that's right
[07:07:41] <snake> i thought it was spelled Try for some reason
[07:07:55] <snake> like the data structure that's used for spell check
[07:08:02] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 246 seconds)
[07:08:40] <snake> git diff shows no changes. it seems simply rewriting it as it was removed the red squiggly lol
[07:08:43] <snake> oh microsoft
[07:09:01] <beaky> yes the same data structure
[07:09:09] <beaky> but with a succinct encoding
[07:09:27] <snake> nice nice
[07:09:31] <snake> yeah i forgot about that one
[07:09:52] <snake> beaky, what does that have to do with tea tho
[07:10:19] <beaky> each tea has a name that is a string so that string becomes the key of the trie
[07:10:33] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:3508:4678:64a6:f9b2)
[07:10:44] <beaky> so if i want to quickly look up teas by name i can build tries of all my teas
[07:10:52] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[07:10:56] <beaky> then store that in disk voila a tea database
[07:11:08] <snake> sugoi desu ne
[07:11:55] <beaky> but now i need to figure out the disk storing part in rust i will implement the datablocks format https://db.in.tum.de/downloads/publications/datablocks.pdf
[07:11:57] <bayaz> Type: application/pdf Size: 1.4 MB 
[07:13:06] <beaky> and then buffer management and transaction handling
[07:13:33] <beaky> then ill design the ultiamte query language that will use category theory and functors like in david spivak's lectures about databases & category theory
[07:14:41] *** Quits: wauterboi (~wauterboi@185.65.135.160) (Ping timeout: 246 seconds)
[07:16:17] *** Quits: LiftLeft (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Ping timeout: 248 seconds)
[07:18:45] *** Joins: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp)
[07:19:02] *** Quits: ellie (~ellie@user/ellie) (Remote host closed the connection)
[07:25:42] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Ping timeout: 250 seconds)
[07:28:22] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[07:30:34] *** Quits: InstX1 (~Liam@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[07:31:00] *** Joins: InstX1 (~Liam@2600:1006:b001:e27:388d:a695:9e26:c146)
[07:31:35] *** Joins: eddof13 (~textual@2806:102e:12:64:ed65:153f:4619:a0e9)
[07:32:39] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[07:34:01] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[07:35:28] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[07:36:14] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[07:36:18] *** Quits: biberao (~m@user/biberao) (Quit: WeeChat 2.3)
[07:37:09] *** Quits: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp) (Quit: xff0x)
[07:37:50] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[07:38:27] *** Joins: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp)
[07:39:18] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 260 seconds)
[07:40:28] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 260 seconds)
[07:41:13] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[07:43:50] *** Joins: InstX1_ (~Liam@2601:6c4:4080:3f80:715c:6e2e:e135:d0fa)
[07:44:19] *** Quits: Solak (~solak@86-87-47-28.fixed.kpn.net) (Ping timeout: 256 seconds)
[07:44:57] *** Joins: Solak (~solak@86-87-47-28.fixed.kpn.net)
[07:45:59] *** Quits: InstX1 (~Liam@2600:1006:b001:e27:388d:a695:9e26:c146) (Ping timeout: 268 seconds)
[07:46:50] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Remote host closed the connection)
[07:47:12] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[07:48:49] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 248 seconds)
[07:49:07] *** Quits: eddof13 (~textual@2806:102e:12:64:ed65:153f:4619:a0e9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:49:25] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[07:49:52] *** Joins: yiggityswaps (~yoyojambo@2806:108e:18:3670:2995:82d1:ef5a:4cc)
[07:50:46] *** Joins: anomal (~anomal@87.227.196.109)
[07:51:01] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[07:51:29] <BASHitup> I'm kinda short on time to research a basic script. Does anyone know how to run a script at startup on nix and pipe the output to a file in a directory? 
[07:51:41] <BASHitup> Essentially, I have a process I need to run and I wanna pipe the output to /tmp
[07:51:51] <BASHitup> Very basic sysadmin stuff
[07:53:01] <BASHitup> K, there's a place to do this in cron 
[07:53:02] <flaqoniun> echo "stuff" > /tmp/overherree
[07:53:23] *** Quits: yoyojambo (~yoyojambo@2806:108e:18:3670:2995:82d1:ef5a:4cc) (Ping timeout: 268 seconds)
[07:53:24] <sonny> systemd
[07:53:35] <BASHitup> Yeah ... you can do that anytime. I knew that. flaqoniun - this is limited to startup. Yes, systemd. Thought of that 
[07:54:05] <BASHitup> But systemd is reserved for full-fledged processes, like system processes which are integral for programs to run e.g., network manager. 
[07:54:16] <sonny> nah, can do user stuff too
[07:54:18] <BASHitup> https://smallbusiness.chron.com/run-command-startup-linux-27796.html
[07:54:18] <bayaz> Title: How to Run a Command on Startup in Linux 
[07:54:33] <BASHitup> Apparently cron will recognize a reboot command 
[07:54:46] * sonny shrugs
[07:55:03] <flaqoniun> could be any program really, just needs to be forked at startup
[07:55:32] <sonny> who benefits from complex APIs?
[07:55:59] <anomal> sonny: complex != complicated
[07:56:08] <BASHitup> Well, everything for me is backwards, regardless of how you look at it 
[07:56:17] <BASHitup> I learned about APIs first as a pentesting tool 
[07:56:19] <sonny> anomal how does that work?
[07:56:20] *** Joins: operateur (~My_user_n@178-221-69-32.dynamic.isp.telekom.rs)
[07:56:28] <BASHitup> Yet, that's not what they are intended for 
[07:56:54] <BASHitup> The nomenclature dates back to programs used to control mainframes 
[07:57:03] <BASHitup> So, the pentesting hacks ... those are several decades later. 
[07:57:05] <anomal> sonny: well complex doesn't imply they're bad or good. Your brain is complex. You benefit from it.
[07:57:24] <BASHitup> Seems to be the mantra in this channel that everyone is benefiting from it, LOL. 
[07:57:25] <sonny> anomal https://www.merriam-webster.com/dictionary/complex
[07:57:26] <bayaz> Title: Definition of COMPLEX 
[07:57:31] <sonny> hold this L
[07:57:37] <BASHitup> Yeah, so that's arbirary, bayaz 
[07:58:05] <BASHitup> I say this because anyone can create a definition in the Urban Dictionary but those aren't scholarly or official renditions of word use. 
[07:58:14] *** Joins: duuude (~user@user/duuude)
[07:58:32] <BASHitup> And, yet, I prefer Urban Dictionary in many cases. Especially if I want a good laugh in 
[08:00:19] *** Quits: anomal (~anomal@87.227.196.109) (Remote host closed the connection)
[08:01:05] *** Quits: operateur (~My_user_n@178-221-69-32.dynamic.isp.telekom.rs) (Ping timeout: 248 seconds)
[08:01:27] <kee> Complex means there's a lot to it.
[08:01:50] <kee> Complicated means it has been complicated, i.e. it could be simpler.
[08:03:13] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 248 seconds)
[08:04:37] <InstX1_> just broadening my questions
[08:04:39] *** InstX1_ is now known as InstX1
[08:04:52] <InstX1> I'm trying to set up a library for Haskellers for educational / training use
[08:05:03] <InstX1> what kind of sublibraries should be included?
[08:05:58] <kee> I don't know the answer to this question, but do you plan to share your library?
[08:06:19] <flaqoniun> does it have a curses-like UI ?
[08:06:36] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[08:07:15] <flaqoniun> TUI they call it
[08:07:21] <flaqoniun> i think
[08:08:25] <flaqoniun> Brick!
[08:08:37] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[08:10:41] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[08:15:57] <sonny> InstX1 you need more than prelude?
[08:19:27] <InstX1> kee: yes
[08:22:24] *** Joins: anomal (~anomal@87.227.196.109)
[08:23:44] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpzhrjfcgw2b8an.ipv6.telus.net) (Remote host closed the connection)
[08:23:53] *** Joins: SnakesAndStuff (~bob@108-196-6-251.lightspeed.ltrkar.sbcglobal.net)
[08:23:58] <SnakesAndStuff> Hi.
[08:24:58] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpwbe9bg1ox40v9.ipv6.telus.net)
[08:27:14] <SnakesAndStuff> I have a really stupid question... I deleted the project now, but think I realized my dumb error.
[08:28:00] <SnakesAndStuff> I was building a C++ program... it complained about not finding c++ compiler... I stupidly just used gcc in the GXX environment variable, and it compiled but didn't link.. and didn't work after fixing it and supplying g++ as the GXX environment variable.
[08:28:28] <SnakesAndStuff> I'm guessing some files built with gcc, and then of course would not link properly? And the object files were present so CMAKE didn't try to rebuild them....
[08:29:14] *** Quits: zaher_ (~zaher@37.48.178.64) (Ping timeout: 246 seconds)
[08:29:53] <InPhase> SnakesAndStuff: Regular clean building is a good policy.
[08:30:16] <InPhase> Especially whenever something confusing happens at a build.
[08:30:24] <SnakesAndStuff> InPhase: Yes. Stupid me trying to build meson to build a project that I should probably just install a debian sid chroot environment to test in anyway and use their packages.
[08:30:37] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[08:31:54] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Quit: Client closed)
[08:32:08] <InPhase> If you're on a team project, unless it's somehow completely prohibitively long, you should typically clean build before submitting any changes out to the rest of the team.  Every once in a while you'll stumble into a case where things will work only because some piece that you broke didn't rebuild.
[08:33:32] <SnakesAndStuff> Not a team project. A clean build of someone elses project. I'm not a contributor in any way
[08:37:15] *** Quits: b3z (~b3z@user/b3z) (Ping timeout: 256 seconds)
[08:37:53] *** Quits: duuude (~user@user/duuude) (Ping timeout: 248 seconds)
[08:38:15] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[08:38:17] *** Joins: b3z (~b3z@vmd41962.contaboserver.net)
[08:38:18] *** Quits: b3z (~b3z@vmd41962.contaboserver.net) (Changing host)
[08:38:18] *** Joins: b3z (~b3z@user/b3z)
[08:39:19] *** Joins: inhahe__ (~inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[08:39:31] *** Quits: inhahe (~inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[08:40:05] *** Quits: piou (~piou@user/piou) (Ping timeout: 256 seconds)
[08:41:49] *** Joins: piou (~piou@46.73.192.77.rev.sfr.net)
[08:42:13] *** suss` is now known as suss
[08:42:41] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 248 seconds)
[08:47:47] *** Quits: rcesptro (~rcesptro@180.246.14.92) (Read error: Connection reset by peer)
[08:48:32] *** Joins: rcesptro (~rcesptro@180.246.14.92)
[08:49:30] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[08:51:28] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[08:51:42] *** Joins: favadi (~favadi@2001:ee0:4081:610b:31ed:8a80:88bc:7e7b)
[08:52:07] *** Joins: lisp123 (~lisp123@143.238.171.43)
[08:55:08] *** Quits: soapsudsxx (~soapsudsx@141.193.188.147) (Ping timeout: 246 seconds)
[08:56:55] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 260 seconds)
[08:56:59] *** Joins: fe23 (~fe23@2409:8a34:465:ec80:ac4c:ea47:9bda:9c5e)
[08:57:34] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[09:02:23] *** Joins: wauterboi (~wauterboi@185.65.135.160)
[09:05:34] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[09:10:25] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[09:12:46] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[09:21:14] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[09:22:31] *** Joins: yoyojambo (~yoyojambo@2806:108e:18:3670:2995:82d1:ef5a:4cc)
[09:24:17] *** Quits: yiggityswaps (~yoyojambo@2806:108e:18:3670:2995:82d1:ef5a:4cc) (Ping timeout: 248 seconds)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:07] *** Quits: entropygain (levitate@2600:3c01::f03c:91ff:fecc:c443) (Changing host)
[09:30:07] *** Joins: entropygain (levitate@user/entropygain)
[09:31:00] *** Quits: danpg (~thelounge@shout.jpaglier.com) (Quit: bye bye)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:23] *** Joins: danpg (~thelounge@shout.jpaglier.com)
[09:31:41] *** Joins: Inline (~Inline@p4fedbc1e.dip0.t-ipconnect.de)
[09:32:03] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::7377) (Ping timeout: 268 seconds)
[09:33:04] *** Joins: KaitoDaumoto (Frat@user/kaitodaumoto)
[09:33:25] *** Joins: babubhai (~babubhai3@14.139.122.120)
[09:34:13] *** Quits: Inline__ (~Inline@p200300cd470f5c00eeead6c89d51972a.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[09:35:55] *** Quits: piou (~piou@46.73.192.77.rev.sfr.net) (Changing host)
[09:35:55] *** Joins: piou (~piou@user/piou)
[09:38:12] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[09:42:53] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[09:43:05] *** Quits: pmercado (~pmercado@190.22.83.12) (Ping timeout: 246 seconds)
[09:43:43] *** Quits: anomal (~anomal@87.227.196.109) (Remote host closed the connection)
[09:43:58] *** Joins: pmercado (~pmercado@186.11.83.86)
[09:44:39] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[09:45:30] <sonny> "It’s incredibly difficult to hire qualified software developers and software engineers." -- what does this mean? <https://binarynoggin.com/blog/tech-help-is-hard-to-find-overcoming-hiring-challenges-with-a-software-development-company/>
[09:46:03] <babubhai> That's why they get paid well ig
[09:46:39] <sonny> there has to be the most software developers there has every been and it's still a shortage?
[09:46:50] <sonny> I'm curious what the industry looks like from the inside
[09:47:33] <sonny> I don't think perl scripters are getting hired anymore either
[09:47:38] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Remote host closed the connection)
[09:47:59] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[09:48:09] <babubhai> Demand of software developers too have sky rocketed, even though more software developer exist
[09:49:05] <babubhai> Web developement is in boom rn as a fresher. Many jobs hire frontend developers
[09:49:17] <babubhai> IDK about the veterans
[09:49:22] <sonny> ok, it's good to know the demand is still high
[09:49:23] *** Joins: Jaami (~Jaami@182.185.176.225)
[09:49:43] <sonny> so you say it's browser related tech that is the majority of the demand?
[09:50:49] <babubhai> Yes, Even in internships there is preety good chance you will work in frontend, it has become a basic requirement if you want to not take chances
[09:51:24] <babubhai> Even at big tech
[09:51:59] <sonny> I see
[09:52:19] <babubhai> Almost every clg student is grinding leetcode xD
[09:52:48] <sonny> In my country it seems that other development roles like embedded is done by engineers (mechatronics etc), but I learned that too late
[09:53:05] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 248 seconds)
[09:53:13] <sonny> I don't like leetcode ... I use other things for problem solving
[09:53:23] <babubhai> like what
[09:53:44] *** Joins: chomwitt (~chomwitt@2a02:587:dc19:3600:a66b:8309:cc51:32)
[09:53:48] *** Quits: favadi (~favadi@2001:ee0:4081:610b:31ed:8a80:88bc:7e7b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:53:50] <sonny> implemented in an odd fashion if you use a 'non standard' language like Java, solutions made to trick you etc
[09:54:13] <sonny> babubhai problems I come across on the web, or stuff like projecteuler, adventofcode etc
[09:54:50] <sonny> if the place you are interviewing for doesn't use leetcode then you would have grinded for nothing
[09:55:13] *** Quits: kee (~wizzwizz4@user/wizzwizz4) (Ping timeout: 248 seconds)
[09:55:13] <sonny> out of my ~10 interviews only one had leetcode
[09:55:28] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[09:55:29] <babubhai> Oh, Must be senior role or something
[09:55:45] <sonny> my mistake was not to take the interview part seriously ... I've bombed them all
[09:55:55] <babubhai> Lol
[09:55:56] <sonny> s/interview/code test/
[09:56:07] *** Quits: llh (~UPP@user/llh) (Quit: :::: ( UPP ) ::::)
[09:56:16] <babubhai> lol, linux bro i see
[09:56:23] *** Joins: kee (~wizzwizz4@user/wizzwizz4)
[09:56:24] <sonny> e.g. picking the wrong language, not review stuff related to the domain etc
[09:56:49] *** Quits: yoyojambo (~yoyojambo@2806:108e:18:3670:2995:82d1:ef5a:4cc) (Ping timeout: 248 seconds)
[09:57:18] <sonny> once I heard do a binary tree, I was doing poor in C++, then they let me use C. After they said, no it's to be an n-ary tree
[09:57:24] <sonny> that's it, I was cooked
[09:57:41] <babubhai> lol
[09:57:48] <sonny> I could do something adhoc but it wasn't worth the time
[09:58:00] <sonny> e.g. arrays as children
[09:58:16] <babubhai> U must be up there. Im still a fresher. Landed an internship this summer
[09:58:27] <sonny> in that interview, no question related to the domain at all
[09:58:30] * sonny shrugs
[09:58:50] *** Quits: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 246 seconds)
[09:58:55] *** Quits: hololeap_ (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[09:59:14] <sonny> babubhai I've done a degrees worth of cs, but I did not graduate, I got those interviews over the duration of study
[09:59:34] <sonny> congrats on the internship
[09:59:44] <babubhai> THanks sonny
[10:00:04] <babubhai> U dropped?
[10:00:09] <sonny> yeah
[10:00:09] *** Joins: hololeap_ (~hololeap@user/hololeap)
[10:00:18] <sonny> I'm going to focus on the hardware more now
[10:00:19] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[10:00:30] <sonny> have stuff comming up in september
[10:01:45] <sonny> what I see folks doing at work is nothing to warrant comments such as "It’s incredibly difficult to hire qualified software developers and software engineers." lol
[10:02:14] <babubhai> lol
[10:02:21] <sonny> if folks saw this microchip pic insanity lmao
[10:03:49] <sonny> the most difficult thing I remember being asked was, "can you reverse engineer this proprietary protocol", the answer was no. "can you add security to this protocol", the answer was no.
[10:03:58] *** Quits: wauterboi (~wauterboi@185.65.135.160) (Ping timeout: 260 seconds)
[10:04:14] <sonny> in that case I'm pretty sure you would work with a research department
[10:04:34] <babubhai> That thing requires decoding Binary right?
[10:04:43] <sonny> yep
[10:05:06] <babubhai> My God ALready sounds horrifying
[10:05:16] <sonny> we had zero information so it would be a lot of guessing and sampling
[10:05:57] *** Joins: favadi (~favadi@2001:ee0:4081:610b:dd2e:cd79:159f:cf8d)
[10:05:57] <sonny> and the protocol to secure had only been done by some big corp that was selling stuff
[10:06:11] *** Joins: tangyQED (~tangy@user/tangy)
[10:07:22] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[10:07:24] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 272 seconds)
[10:07:26] <sonny> bluetooth networks was a (popular) request that would be a big job but they can do it with more resources
[10:07:28] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[10:07:47] *** Joins: wizzwizz4 (~wizzwizz4@user/wizzwizz4)
[10:07:56] *** Quits: kee (~wizzwizz4@user/wizzwizz4) (Ping timeout: 246 seconds)
[10:09:27] <sonny> oh, and some stuff related to real-time data was hard, but that's well known
[10:10:14] <sonny> and infosec people all into windows stuff?
[10:10:20] <sonny> s/and/are/
[10:10:33] *** Joins: duuude (~user@user/duuude)
[10:10:47] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[10:14:36] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[10:16:16] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[10:21:23] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[10:21:31] *** Joins: babubhai12 (~babubhai3@14.139.122.120)
[10:21:45] *** Quits: favadi (~favadi@2001:ee0:4081:610b:dd2e:cd79:159f:cf8d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:22:46] *** Joins: favadi (~favadi@2001:ee0:4081:610b:7121:c8f9:8c62:8f60)
[10:24:23] *** Quits: babubhai (~babubhai3@14.139.122.120) (Ping timeout: 260 seconds)
[10:24:43] *** Joins: babubhai123 (~babubhai3@49.14.165.145)
[10:24:55] *** babubhai123 is now known as babubhai
[10:26:31] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:26:56] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[10:27:08] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[10:27:11] *** Quits: babubhai12 (~babubhai3@14.139.122.120) (Ping timeout: 246 seconds)
[10:28:37] *** Joins: babubhai12 (~babubhai3@2405:204:8180:812f:33d6:595d:2ab6:ded7)
[10:30:13] *** Quits: babubhai (~babubhai3@49.14.165.145) (Ping timeout: 260 seconds)
[10:30:26] *** babubhai12 is now known as babubhai
[10:30:52] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) (Client Quit)
[10:32:13] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[10:35:41] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com)
[10:38:23] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com) (Ping timeout: 260 seconds)
[10:38:35] *** Joins: xythercoder (~xythecode@157.41.132.8)
[10:38:46] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:39:23] *** Quits: babubhai (~babubhai3@2405:204:8180:812f:33d6:595d:2ab6:ded7) (Read error: Connection reset by peer)
[10:40:19] *** Joins: lisp123 (~lisp123@143.238.171.43)
[10:41:37] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 248 seconds)
[10:45:26] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 268 seconds)
[10:46:58] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[10:48:32] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[10:48:44] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[10:53:11] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:54:16] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 272 seconds)
[10:59:22] *** Joins: InstX1_ (~Liam@2601:6c4:4080:3f80:99cb:ce04:4b4a:7252)
[10:59:37] *** Quits: InstX1 (~Liam@2601:6c4:4080:3f80:715c:6e2e:e135:d0fa) (Ping timeout: 268 seconds)
[11:01:31] *** Quits: favadi (~favadi@2001:ee0:4081:610b:7121:c8f9:8c62:8f60) (Ping timeout: 260 seconds)
[11:01:49] *** Joins: wonko-th1-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane)
[11:02:15] *** Quits: wonko-the-sane (~wonk-the-@gateway/tor-sasl/wonko-the-sane) (Ping timeout: 240 seconds)
[11:02:57] *** Quits: flaqoniun (~F@32.211.211.39) (Remote host closed the connection)
[11:03:32] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[11:03:47] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:d4a:2f72:9e46:d304)
[11:05:39] *** Joins: palasso (~palasso@user/palasso)
[11:07:00] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.222)
[11:10:57] *** Joins: user51 (~user51@77.124.35.94)
[11:12:59] *** Joins: moose (~moose@user/moose)
[11:14:57] *** Joins: anomal (~anomal@87.227.196.109)
[11:15:45] *** Joins: khach2 (~khach2@157.90.196.52)
[11:17:15] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Quit: Client closed)
[11:17:40] *** Joins: maxzor (~maxzor@2a01cb04054faa00039336efa77b9bc7.ipv6.abo.wanadoo.fr)
[11:17:57] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[11:18:57] *** Quits: pmercado (~pmercado@186.11.83.86) (Ping timeout: 248 seconds)
[11:18:57] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[11:19:27] <smallville7123> is this
[11:19:29] <smallville7123> z * sqrtf((double)x * x + (double)y * y);
[11:19:32] <smallville7123> the same as this?
[11:19:42] <smallville7123> (float)(z * Math.Sqrt((double)x * x + (double)y * y));
[11:19:58] *** Quits: xythercoder (~xythecode@157.41.132.8) (Ping timeout: 268 seconds)
[11:20:01] *** Quits: raym (~raym@user/raym) (Ping timeout: 248 seconds)
[11:20:11] *** Joins: xythercoder (~xythecode@157.41.44.34)
[11:20:15] <smallville7123> or          z * (float)Math.Sqrt((double)x * x + (double)y * y);
[11:20:37] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[11:21:00] *** Joins: raym (~raym@user/raym)
[11:21:47] *** Joins: bomb (~bomb@user/bomb)
[11:22:44] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[11:22:48] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Client Quit)
[11:23:06] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[11:24:35] *** Quits: xythercoder (~xythecode@157.41.44.34) (Ping timeout: 246 seconds)
[11:25:19] *** Joins: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it)
[11:25:55] *** Joins: xythercoder (~xythecode@157.41.77.33)
[11:30:11] *** Quits: xythercoder (~xythecode@157.41.77.33) (Ping timeout: 246 seconds)
[11:30:27] *** Joins: operateur (~My_user_n@178-221-69-32.dynamic.isp.telekom.rs)
[11:30:30] *** Joins: xythercoder (~xythecode@157.41.131.48)
[11:32:38] *** Quits: khach2 (~khach2@157.90.196.52) (Remote host closed the connection)
[11:32:57] *** Joins: khach2 (~khach2@157.90.196.52)
[11:33:00] *** Parts: khach2 (~khach2@157.90.196.52) ()
[11:34:57] *** Quits: operateur (~My_user_n@178-221-69-32.dynamic.isp.telekom.rs) (Ping timeout: 248 seconds)
[11:36:05] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:37:01] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[11:37:05] *** Joins: aradesh (~aradesh@user/aradesh)
[11:42:07] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 260 seconds)
[11:43:25] *** Joins: prompt32 (~kapad@user/kapad)
[11:47:59] <PlanckWalk> smallville7123: What languages are those?
[11:48:21] <smallville7123> C and java
[11:48:38] <PlanckWalk> What type does z have?
[11:48:58] *** Quits: Psybur (~Psybur@2601:5c9:4201:3220:19c2:a1cd:6600:38ba) (Ping timeout: 260 seconds)
[11:48:58] <PlanckWalk> All of those could be different
[11:50:00] <smallville7123> as java's Math.sqrt only accepts a double
[11:50:17] <smallville7123> but C uses sqrtf which accepts a float
[11:50:45] *** Joins: hexadecagram (acc@2604:a880:1:20::277a:8001)
[11:50:46] <smallville7123> and z is float
[11:51:36] *** Joins: Rounin (~david@84.212.130.215)
[11:53:59] <PlanckWalk> It's certainly not guaranteed that  (float)(z * Math.sqrt(whatever))  in Java evaluates to the same as  z * sqrtf(whatever)  in C.
[11:54:55] <PlanckWalk> Also  z * (float)someDouble  can evaluate to something different from  (float)(z * someDouble)  in Java.
[11:55:11] <PlanckWalk> So all three can be different.
[11:55:38] <smallville7123> ok
[11:55:39] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[11:55:50] <PlanckWalk> Likely only very slightly different
[11:56:09] <PlanckWalk> Well, unless one of them overflows
[11:56:13] *** Joins: Alex123 (~Adium@2603-8000-db00-10e5-8ded-8d12-b6b6-e58e.res6.spectrum.com)
[11:56:24] <smallville7123> https://elixir.bootlin.com/musl/v1.2.2/source/src/math/hypotf.c#L34
[11:56:25] <bayaz> Title: hypotf.c - src/math/hypotf.c - Musl source code (v1.2.2) - Bootlin 
[11:56:49] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 248 seconds)
[11:56:58] <PlanckWalk> What the...
[11:57:32] *** Joins: Telvana2 (~capo@user/telvana)
[11:57:43] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 260 seconds)
[11:58:09] <smallville7123> both x, y, and z are of type float
[11:58:39] <PlanckWalk> What sort of Cthulhu-spawned monstrosity is that?
[12:00:08] <smallville7123> lol
[12:00:27] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[12:00:55] *** Joins: joji (~jojo@86.4.72.180)
[12:02:35] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[12:04:01] <PlanckWalk> I can see vaguely what it is doing (but it doesn't seem to be quite right), but not why on Earth you want to do it that way.
[12:05:31] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:07:20] <smallville7123> is this NaN ?    (x - x) / (x - x)
[12:08:42] <PlanckWalk> It might be or might not
[12:08:59] <PlanckWalk> It could be a division by zero error
[12:09:10] <PlanckWalk> The compiler might disallow it
[12:09:46] <PlanckWalk> It would be legal C semantics for the computer to make demonds fly out your nose.
[12:09:51] <PlanckWalk> demons*
[12:11:57] <PlanckWalk> But I suppose that's not a problem since that's true of nearly every line of your pasted code :-p
[12:12:08] *** Joins: jaysicks (~jaysicks@62-165-243-204.pool.digikabel.hu)
[12:12:27] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[12:12:35] *** Quits: confluence_ (~quassel@2a01:4f8:c17:3ca::2) (Quit: No Ping reply in 180 seconds.)
[12:12:43] <anomal> I stole this from ChoHag in #proglangdesign:  "A programmer who doesn't want to type, is like a surgeon who doesn't want to see blood"
[12:12:55] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[12:13:07] *** Joins: vilhelmbergsoe (~vilhelmbe@185.19.132.203)
[12:13:07] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[12:13:19] <PlanckWalk> Yes, so use typed languages.
[12:13:31] <anomal> :P 
[12:13:37] <anomal> Meaning typing on a keyboard
[12:13:39] <anomal> But ok
[12:13:40] <anomal> :)
[12:13:51] <amigojapan> Good afternoon
[12:14:04] <PlanckWalk> Did ChoHag intend it to mean "they recognize that some typing is necessary, but lots of typing often indicates something has gone horribly wrong"?
[12:14:04] <vilhelmbergsoe> Hey there, can someone explain how you end a http request? The Content-Length header is only for the Content field right?
[12:14:22] <vilhelmbergsoe> is it just two newlines? "\r\n\r\n"
[12:15:22] <PlanckWalk> A request can include content
[12:15:26] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:15:31] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[12:15:32] <PlanckWalk> Two CRLFs ends the header, though
[12:16:08] <potatoxel[m]> content-length is just the length of th ebodty
[12:16:09] <potatoxel[m]> the body*
[12:16:24] <potatoxel[m]> so the length of what comes after two CRLFs
[12:16:34] *** Joins: confluence_ (~quassel@2a01:4f8:c17:3ca::2)
[12:18:10] *** Joins: Paramecium (~P.bursari@103.100.175.170)
[12:18:15] *** Joins: dvanloon3 (~dvanloon@user/dvanloon)
[12:18:28] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:18:43] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Ping timeout: 260 seconds)
[12:18:43] *** dvanloon3 is now known as dvanloon
[12:19:19] *** Joins: operateur (~My_user_n@91.143.220.230)
[12:20:39] *** Joins: epony (epony@user/epony)
[12:21:59] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Ping timeout: 252 seconds)
[12:24:18] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[12:25:01] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[12:25:14] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[12:25:33] *** Joins: bomb (~bomb@user/bomb)
[12:26:23] *** Quits: vilhelmbergsoe (~vilhelmbe@185.19.132.203) (Ping timeout: 252 seconds)
[12:26:23] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[12:26:53] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[12:27:45] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d)
[12:28:29] *** Joins: lisp123 (~lisp123@143.238.171.43)
[12:33:00] *** Quits: Paramecium (~P.bursari@103.100.175.170) (Remote host closed the connection)
[12:33:21] *** Quits: lisp123 (~lisp123@143.238.171.43) (Ping timeout: 268 seconds)
[12:33:53] *** Quits: NeoFAT32 (~UserNick@user/NeoFAT32) (Quit: Le Soleil ne se couche pas !)
[12:34:10] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[12:34:25] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[12:35:58] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[12:36:13] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[12:36:35] *** Quits: xythercoder (~xythecode@157.41.131.48) (Quit: Konversation terminated!)
[12:36:48] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 260 seconds)
[12:38:10] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[12:38:53] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[12:41:20] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:42:21] *** Quits: maxzor (~maxzor@2a01cb04054faa00039336efa77b9bc7.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[12:43:23] *** Joins: maxzor (~maxzor@2a01cb04054faa00a75904040f18d50a.ipv6.abo.wanadoo.fr)
[12:43:52] *** Joins: mattil (~mattil@helsinki.portalify.com)
[12:43:57] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[12:45:33] *** Joins: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[12:46:38] *** Quits: lawt (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9) (Ping timeout: 260 seconds)
[12:46:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Quit: Konversation terminated!)
[12:49:15] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[12:50:06] *** Joins: Psybur (~Psybur@c-76-123-45-25.hsd1.va.comcast.net)
[12:50:11] *** Joins: vilhelmbergsoe (~vilhelmbe@185.19.132.203)
[12:52:14] *** Quits: mweckbecker (~matthias@weckbecker.name) (Ping timeout: 260 seconds)
[12:52:24] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:53:04] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[12:53:23] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[12:53:37] <pyzozord> suggest programming music please
[12:54:43] <pyzozord> actually I think I will just go with the xx
[12:54:43] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[12:55:55] <pyzozord> unless someone has something better
[12:56:17] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[12:56:26] <merijn> Taylor Swift :p
[12:57:21] <bomb> https://www.youtube.com/watch?v=k2QPJ2xGMiY
[12:57:22] <bayaz> Title: The Bravery - Fearless 
[12:57:50] *** Joins: mweckbecker (~matthias@weckbecker.name)
[12:58:30] <bomb> I like Andrei Krylov's instrumental guitar albums for focusing
[12:58:33] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:58:38] *** Joins: kakysha (~kakysha@user/kakysha)
[12:58:41] <pyzozord> bomb: that actually is cool
[12:58:47] <pyzozord> kind of works with my mood now
[12:59:02] *** Joins: lawt (~lawt@2601:200:8200:6870:dea6:32ff:fea1:adf9)
[12:59:10] <bomb> The Bravery?
[12:59:15] <pyzozord> well that song
[12:59:29] <bomb> yeah I like that kind of rock
[12:59:53] <pyzozord> merijn: I low key like her :P But the music is just... I don't know, it doesn't do it for me :P
[12:59:58] <bomb> https://www.youtube.com/watch?v=CU3mc0yvRNk
[12:59:59] <bayaz> Title: The Dandy Warhols - Bohemian Like You 
[13:00:45] <pyzozord> yeah I guess I am in a rock mood right now, huh, who would have thought
[13:00:54] <merijn> pyzozord: Depends on the album. I kinda like folklore for programming, nice downtempo vibe
[13:01:34] *** Quits: anomal (~anomal@87.227.196.109) (Remote host closed the connection)
[13:02:28] <bomb> pyzozord https://www.youtube.com/watch?v=1uvwGmRf5M8
[13:02:30] <bayaz> Title: Godsmack - Keep Away (Official Music Video) 
[13:04:21] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Remote host closed the connection)
[13:05:15] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[13:06:07] *** GiverOfDomains is now known as Polo
[13:06:33] *** Quits: CalimeroTeknik (~calimero@ctkarch.org) (Changing host)
[13:06:33] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[13:07:01] <pyzozord> bomb: I like the guitar I'm not sure about the vocal, tad bit too violent
[13:07:14] <pyzozord> but the song is the bomb
[13:07:35] <pyzozord> kind of reminds of matrix soundtrack, which I will now listen to
[13:07:51] <Polo> Never heard it
[13:08:20] <bomb> pyzozord aye. both RatM and GodSmack sounds relies on Drop D tuning 
[13:08:43] *** Joins: plastico (~plastico@neomutt/plastico)
[13:08:47] <bomb> they're roughly similar, musically. "groove metal"
[13:09:15] *** Quits: en7ropy (~en7ropy@185.187.243.161) (Quit: Leaving)
[13:09:27] <bomb> if you like the guitars, there are billions of instrumental metal albums. I love hearing them in the background when working.
[13:10:10] <pyzozord> for me it's very mood dependent, I'll probably have enough after one album and a small headache
[13:10:18] <pyzozord> but sometimes you just gotta
[13:11:36] <bomb> yeah RatM does that
[13:11:44] <bomb> doom metal is relaxing
[13:12:24] <bomb> my favorite doom metal channel on YT: https://www.youtube.com/channel/UC7eKF0lPY8LNwfczq9UFlxg
[13:17:09] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:17:09] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:17:09] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:17:31] *** Joins: wakeup (~wakeup@user/wakeup)
[13:18:46] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[13:20:43] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:b44a:f768:9ead:27f)
[13:20:57] <dan01> Guys
[13:21:15] <pyzozord> ooh you know what I found it
[13:21:15] <dan01> Anyone here who knows to to create a .bak file with DataGrip
[13:21:33] <dan01> I have a SQL Server instance, and I can't seem to create a backup of a database
[13:21:35] <pyzozord> linking park instrumentals, I forget what was that album called
[13:21:43] <pyzozord> *linkin
[13:22:17] <pyzozord> yes! that scratches the itch perfectly
[13:22:59] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[13:23:07] <bomb> in the end it doesn't even matter
[13:23:45] <pyzozord> they are the beatles of 90s kids :P
[13:24:30] *** Joins: Klinda (~superleag@user/klinda)
[13:25:19] <pyzozord> I will put on the big headphones for this
[13:26:41] <Polo> nice
[13:26:52] *** Joins: rsx (~dummy@ppp-188-174-132-120.dynamic.mnet-online.de)
[13:29:42] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpwbe9bg1ox40v9.ipv6.telus.net) (Remote host closed the connection)
[13:31:30] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:35:50] *** Quits: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it) (Ping timeout: 246 seconds)
[13:37:10] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df076-245.dhcp.inet.fi)
[13:38:51] *** Joins: xythercoder (~xythecode@157.41.159.241)
[13:39:23] <pyzozord> whats the name for the sort that respects numbers? It's not "alphabetical sort", is it "natural sort"?
[13:40:53] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[13:41:07] <PlanckWalk> You mean a string sort that uses numerical values for numeral strings?
[13:41:44] <PlanckWalk> (But even that generally gets version string ordering wrong)
[13:43:02] <pyzozord> I want "hello2" to show up above "hello11"
[13:43:03] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[13:43:12] *** Quits: swp (~Thunderbi@143.176.249.0) (Quit: swp)
[13:43:17] <PlanckWalk> "Above" as in "earlier"?
[13:43:21] <pyzozord> yeah
[13:44:15] <PlanckWalk> Where do you want "hello3.2" to sort vs "hello3.11"?
[13:44:53] <PlanckWalk> But yeah, that sort of variant is called a natural sort
[13:45:37] *** Quits: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da) (Ping timeout: 248 seconds)
[13:46:32] <pyzozord> hello3.2 should go before hello3.11
[13:46:53] <pyzozord> ok, thanks
[13:47:57] <PlanckWalk> What about hello3.02?
[13:48:15] <pyzozord> before hello3.2
[13:48:46] <pyzozord> just has to parse numbers sparated by one or more non-digits and then compare each number
[13:48:47] <PlanckWalk> Interesting
[13:48:57] <PlanckWalk> So 02 < 2 < 11
[13:49:03] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 260 seconds)
[13:49:09] <PlanckWalk> I mean, I guess it's at least some sort of rule...
[13:49:26] <pyzozord> not 3.2 I think that's just a decimal number
[13:49:39] <pyzozord> but maybe not maybe you are right that 3.02 and 3.2 should be the same
[13:49:43] <pyzozord> this is for versioning
[13:50:27] *** Quits: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:50:52] <PlanckWalk> It looks like most implementations are different.  Why am I not surprised.
[13:51:01] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[13:51:10] <pyzozord> for example hello3hi2 and hello3hi02 should be at the same position but then alphabetic sort should kick in and put hello3hi02 first
[13:51:35] <Stefan26> should hellp2 be before hello1 ?
[13:51:51] <pyzozord> is p after o in alphabet? :P
[13:52:07] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[13:52:09] <Stefan26> yes
[13:52:25] <pyzozord> then yes
[13:52:32] <pyzozord> no sorry I mean then no
[13:52:43] <PlanckWalk> Some treat dots as decimal separators, some only do if there's exactly one dot, some treat leading zeroes as part of the string, not the number, others treat it as lexicographically larger, some lexicographically smaller, etc
[13:54:42] <PlanckWalk> Heh, apparently there's some custom implementation in a library that treats minus signs numerically.
[13:55:32] <Stefan26> i can recall having cheated around it, like v01.001.4003 and making each "string-number" same length.. not caring what happens if there's more than 100 major versions
[13:55:43] <Stefan26> and then falling back to lexi-sort
[13:56:24] <pyzozord> is there a difference between lexicographical sort and alphabetical sort?
[13:56:45] <Stefan26> I'm not aware of the difference
[13:56:59] <pyzozord> and what are lexemes
[13:57:01] <pyzozord> https://en.wikipedia.org/wiki/Lexeme
[13:57:01] <bayaz> Title: Lexeme - Wikipedia 
[13:57:02] <PlanckWalk> Well no, but in this case I meant relative to the rest of the numbers, not the strings
[13:57:09] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:d4a:2f72:9e46:d304) (Quit: My iMac has gone to sleep. ZZZzzz…)
[13:58:29] <PlanckWalk> So for example   ... < 0041 < 041 < 41 < 000042 < 00042 < ...
[13:59:13] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[13:59:18] *** Joins: lisp123 (~lisp123@143.238.171.43)
[13:59:41] *** Quits: lisp123 (~lisp123@143.238.171.43) (Read error: Connection reset by peer)
[13:59:47] <DnzAtWrk> does anyone use dropbox here?
[14:00:11] <DnzAtWrk> I want you to try something. Use 7z to archive a non-synced folder
[14:00:15] *** Joins: anomal (~anomal@87.227.196.109)
[14:00:18] <DnzAtWrk> and then try to unpack it
[14:00:20] <PlanckWalk> Put another way: resolve ties by the number of zeroes (one direction or another)
[14:00:54] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[14:00:58] <pyzozord> I think there is difference between alphabetical and lexicographical sort
[14:01:07] <pyzozord> seems like lexicographical sort is about "word order"
[14:01:09] <PlanckWalk> Yes, the latter is a more general term in math
[14:01:21] <pyzozord> so it seems it's more in line with the "natural sort" we talked about
[14:01:50] <PlanckWalk> Ehh, depends where you draw the boundaries within the string
[14:02:32] <pyzozord> my point is, alphabetical sort does not recognize words at all
[14:02:45] <PlanckWalk> That's right
[14:02:56] <PlanckWalk> Its boundaries are between characters
[14:03:11] <PlanckWalk> Not any other sort of tokens
[14:03:25] <DnzAtWrk> maybe you need an AI sort
[14:04:28] <pyzozord> we use words and we don't understand them
[14:04:29] <PlanckWalk> "Natural" groups number-like characters and sorts based on some semantics for them.
[14:05:00] *** Quits: Alex123 (~Adium@2603-8000-db00-10e5-8ded-8d12-b6b6-e58e.res6.spectrum.com) (Quit: Leaving.)
[14:05:41] <GeDaMo> Maybe you need to parse the strings into numbers and not-numbers :P
[14:06:25] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Remote host closed the connection)
[14:07:00] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[14:10:03] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[14:15:05] *** Quits: chomwitt (~chomwitt@2a02:587:dc19:3600:a66b:8309:cc51:32) (Read error: Connection reset by peer)
[14:15:19] *** Joins: chomwitt (~chomwitt@2a02:587:dc19:3600:a66b:8309:cc51:32)
[14:15:29] *** Quits: vilhelmbergsoe (~vilhelmbe@185.19.132.203) (Ping timeout: 248 seconds)
[14:17:31] * pyzozord sorts GeDaMo 
[14:17:39] <pyzozord> me gets DaGeMo
[14:18:12] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[14:18:22] <GeDaMo> Please, obviously I'm aDeGMo
[14:18:51] <GeDaMo> Unless it's a case sensitive sort in which case DGMaeo
[14:19:25] *** Joins: rtypo (~alex@user/rtypo)
[14:19:31] <pyzozord> I'd argue aeoDGM, small letters are smaller therefore lighter and bubble up in bubble sort
[14:19:48] <Stefan26> is the 'e' in your name the mathematical constant?
[14:19:57] * GeDaMo slaps pyzozord with an ASCII chart
[14:20:05] <GeDaMo> Not that I know of :|
[14:20:08] <deniska> bigger letters have higher buoyancy
[14:20:42] <pyzozord> I bet there is a bouancy chart of graphemes in unicode
[14:21:14] <Stefan26> what's your favorite ordered set?
[14:21:47] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Quit: Konversation terminated!)
[14:22:14] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:22:32] *** Quits: y0m0n (~NA@5-12-91-184.residential.rdsnet.ro) (Remote host closed the connection)
[14:23:38] *** Joins: Kechen (~Kechen@144.173.23.114)
[14:23:57] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[14:24:19] <pyzozord> Stefan26: my least favourite so far is prime numbers
[14:24:47] <GeDaMo> 0,1,10,11,100,101, ...
[14:24:59] *** Parts: Kechen (~Kechen@144.173.23.114) (Leaving)
[14:25:04] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[14:25:34] <deniska> https://oeis.org/ so many sequences to pick from
[14:25:35] <bayaz> Title: The On-Line Encyclopedia of Integer Sequences? (OEIS?) 
[14:28:20] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:29:07] *** Joins: kakysha (~kakysha@user/kakysha)
[14:29:19] <pyzozord> i'm trying to list all sequences on this website and i fail
[14:30:25] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:b44a:f768:9ead:27f) (Ping timeout: 248 seconds)
[14:30:38] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[14:30:47] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Quit: 🖖)
[14:32:08] *** Joins: kakysha_ (~kakysha@user/kakysha)
[14:32:22] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[14:32:31] <PlanckWalk> One of my favourites is the list of busy beaver numbers
[14:32:32] *** Joins: dvanloon (~dvanloon@user/dvanloon)
[14:32:33] *** Quits: swistak (~swistak@185.21.216.141) (Ping timeout: 256 seconds)
[14:32:53] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[14:32:58] <PlanckWalk> https://oeis.org/A060843
[14:32:58] <bayaz> Title: A060843 - OEIS 
[14:33:12] <PlanckWalk> There are only 4 entries on it
[14:34:37] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 260 seconds)
[14:34:46] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:b44a:f768:9ead:27f)
[14:35:02] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Remote host closed the connection)
[14:35:15] <DnzAtWrk> integers are great
[14:36:01] <PlanckWalk> List of integers in descending order of greatness...
[14:37:20] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:38:30] <DnzAtWrk> 594444325
[14:38:32] *** Quits: joji (~jojo@86.4.72.180) (Ping timeout: 268 seconds)
[14:38:33] <DnzAtWrk> 705955
[14:39:30] *** Joins: swistak (~swistak@185.21.216.141)
[14:39:40] <DnzAtWrk> mathematicians are just people who found a way to make their neat hobby their career
[14:40:15] <pyzozord> wait, damn I just realized one of my devices did not change the timezone
[14:40:24] <DnzAtWrk> yeah what the hell
[14:40:30] <DnzAtWrk> we already changed timezone a few weeks ago
[14:40:32] <DnzAtWrk> wtf is going on now
[14:40:51] <Stefan26> list of most un-interesting numbers
[14:41:21] *** Joins: menace (~someone@ppp-93-104-183-77.dynamic.mnet-online.de)
[14:41:21] *** Quits: menace (~someone@ppp-93-104-183-77.dynamic.mnet-online.de) (Changing host)
[14:41:21] *** Joins: menace (~someone@user/menace)
[14:41:28] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[14:41:35] *** menace is now known as Deknos
[14:42:14] <pyzozord> ah I see, the it probably change my timezone to the headquaters timezone
[14:43:25] <Bou> https://oeis.org/A004231
[14:43:26] <bayaz> Title: A004231 - OEIS 
[14:43:39] *** Joins: wakeup (~wakeup@user/wakeup)
[14:43:50] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Quit: Client closed)
[14:43:56] *** Quits: TheLinuxNerd (~tux@fsf/member/TheLinuxNerd) (Quit: ZNC - https://znc.in)
[14:44:17] *** Joins: TheLinuxNerd (~tux@fsf/member/TheLinuxNerd)
[14:45:01] <Bou> ofc people will laugh at this 50 years from now when we all have quantum computers in our phones
[14:45:08] *** Joins: monr0e (~monr0e@host-81-179-96-15.static.as13285.net)
[14:45:35] <DnzAtWrk> quantum computers will never work
[14:45:44] <DnzAtWrk> and even if they did, they wouldn't boost performance
[14:45:53] <DnzAtWrk> it would be a very specific gimmick
[14:46:47] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[14:46:53] <pyzozord> not for precise computations
[14:46:59] <pyzozord> but for ai it seems like a perfect match
[14:47:09] *** Joins: vilhelmbergsoe (~vilhelmbe@185.19.132.203)
[14:49:28] <pyzozord> I think the whole digital thing is terribly wasteful
[14:49:37] <Sqaure> I saw an Veritasium clip the other weak how AI is moving to analogue computers.
[14:49:58] <Sqaure> week*
[14:50:12] *** Joins: _mantra (~mantra@216.73.163.121)
[14:50:15] <pyzozord> we compute mountains of data just to end up with two pixels next to each other with indistinguishable colors
[14:50:27] <pyzozord> I think it's not very elegant engineering
[14:50:57] <pyzozord> it's very sophisticated, but also kind of crude
[14:50:58] *** Quits: mantra (~mantra@216.73.163.24) (Ping timeout: 260 seconds)
[14:52:02] <DnzAtWrk> as I said before, I disagree with veritasium that our current problem with ml is speed
[14:52:04] <DnzAtWrk> no, it's good models
[14:53:12] <pyzozord> as far as I know ai is very dependent on amount of data it can process. The first ai winter was because we didn't have enough computational power
[14:53:34] <pyzozord> so "not enough power" is pretty safe bet no matter the context
[14:53:53] <pyzozord> anyway my point about the digital engineering is not just about ai
[14:54:17] *** Quits: KaitoDaumoto (Frat@user/kaitodaumoto) (Remote host closed the connection)
[14:54:35] <DnzAtWrk> again I disagree. You don't need a massive amount of data to generalize
[14:54:41] <DnzAtWrk> you need better more robust models
[14:54:45] <DnzAtWrk> amounts*
[14:55:33] <pyzozord> eh I don't know anything about it, I heard from pretty smart people that computation and data is really what drives the neuralnets
[14:55:36] <DnzAtWrk> and data augmentation
[14:55:53] <DnzAtWrk> even smart people can have tunnel vision
[14:55:55] <koollman> DnzAtWrk: if they work (as in, "are usable industrially/by regular consumers"), they would boost performances for problems we don't even try to compute currently
[14:56:24] <pyzozord> anyway
[14:56:31] <DnzAtWrk> I mean hell, the field of machine learning is pretty much standing still 
[14:56:36] <DnzAtWrk> relatively speaking
[14:56:37] *** Joins: ifohancroft (~ifo@about/techtavern/ifohancroft)
[14:56:45] <koollman> what they may not do is make anything else faster. It's more like some problems/algorithms will go from 'slow and unusable' to 'usable, maybe fast'
[14:56:48] <pyzozord> we dedicate large amount of energy to compute very precise data and later discard most of the precisin
[14:56:51] <pyzozord> that's just bad engineering
[14:57:53] <ifohancroft> What would be a way to split a bitmask int to its members in as few operations as possible? For example splitting 7 to 4, 2 and 1
[14:58:35] *** Joins: coaxing (~coaxing@user/coaxing)
[14:59:29] *** Quits: xff0x (~xff0x@125x102x200x106.ap125.ftth.ucom.ne.jp) (Ping timeout: 246 seconds)
[15:00:17] *** Quits: maxzor (~maxzor@2a01cb04054faa00a75904040f18d50a.ipv6.abo.wanadoo.fr) (Ping timeout: 248 seconds)
[15:01:10] <PlanckWalk> Wait what?  ML is not anywhere near standing still.
[15:01:51] <GeDaMo> https://nautil.us/deep-learning-is-hitting-a-wall-14467/
[15:01:52] <bayaz> Title: Deep Learning Is Hitting a Wall 
[15:03:37] <PlanckWalk> ifohancroft: Average (based on some particular distribution of data), or worst case?
[15:04:07] <PlanckWalk> Best case is obviously 0
[15:04:27] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:04:29] <PlanckWalk> Worst case is every bit set so you need to generate a number for each bit position.
[15:04:33] <koollman> ifohancroft: not sure there's a much better way than dividing by 2 in a loop, or looking at each bit in a loop
[15:04:46] <PlanckWalk> You can do slightly better on soem intermediate cases
[15:05:35] <PlanckWalk> But simplest and no worse in the worst case, is to loop over each bit position.
[15:07:01] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com) (Read error: Connection reset by peer)
[15:07:09] <GeDaMo> You can mask off sections of an int easily enough, two operations per section: mask and shift
[15:07:41] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com)
[15:08:02] <PlanckWalk> Some intermediate cases can be faster with the  x & ~(x-1)  trick.
[15:08:49] <ifohancroft> Thank you everyone!
[15:10:06] <bomb> your wellcome
[15:10:25] <pyzozord> what's symbolic ai?
[15:10:48] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:b44a:f768:9ead:27f) (Ping timeout: 260 seconds)
[15:11:06] <bomb> no clue
[15:12:07] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[15:12:16] <ifohancroft> Btw just in-case I'm falling into the X Y problem, here's what I'm trying to do (although I was curious in general): execute a remote script on a server that lists my configuration files each with prefixed with an index from the binary sequence, then I give it a number like 7, then the script turns that number into its members and gives me just the corresponding config files
[15:12:51] <PlanckWalk> Well, the timing difference here is nanoseconds
[15:13:24] <GeDaMo> https://en.wikipedia.org/wiki/Symbolic_artificial_intelligence "based on high-level symbolic (human-readable) representations of problems, logic and search.[1] Symbolic AI used tools such as logic programming, production rules, semantic nets and frames"
[15:13:24] <bayaz> Title: Symbolic artificial intelligence - Wikipedia 
[15:13:42] <PlanckWalk> So any performance difference is likely to be utterly negligible.
[15:14:14] <pyzozord> hmm need to check what are production rules, and smenatic nets and frames
[15:14:26] <ifohancroft> Yeah, in this case probably it won't matter much and I can perhaps just keep looping over the options and check if each one is contained in the bitmask
[15:14:31] <pyzozord> but it really kind of sounds like a different take on programming languages
[15:15:32] <GeDaMo> Production rules are similar to grammar rules, they match patterns and trigger actions
[15:16:33] <pyzozord> yeah so this kind of sounds like a programming language, an interpreter for that language, and a self modifing program written in that language
[15:17:20] <ifohancroft> The other usecase I was thinking of is inside of a keyboard firmware, when scanning the switch matrix to write it down as a bit mask and hopefully in a single operation turn it into USB scan codes depending on the configured user keymap. Possibly also use it for macro assignment. Instead of doing a loop and checking if anything is set, sort of "pass" the bitmask values through the array (that
[15:17:22] <ifohancroft> would be empty if nothing is set) or another data structure and while passing it would "pick up" what's set where
[15:17:40] <pyzozord> oh I think lisp was originally developped for ai purposes
[15:17:40] <GeDaMo> Expert systems usually consist of a set of 'facts', facts are asserted or retracted which can trigger rules which in turn can assert or retract facts
[15:18:14] <pyzozord> maybe that's what it is, maybe symbolic ai is a sufficiently advanced lisp program with homoiconicity
[15:18:32] <GeDaMo> Prolog is also good at this sort of thing
[15:18:44] <ifohancroft> I guess it may be harder for the macro assignment but for the convertion of key press to scan code, I may be able to get away with just bit shifting or just simple binary arithmetic
[15:21:38] <GeDaMo> https://en.wikipedia.org/wiki/Eurisko
[15:21:38] <bayaz> Title: Eurisko - Wikipedia 
[15:22:18] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[15:26:05] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[15:26:05] *** Quits: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net) (Quit: ZNC - https://znc.in)
[15:26:28] *** Joins: firewyre (~firewyre@pool-71-184-153-62.bstnma.fios.verizon.net)
[15:27:35] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:27:44] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[15:28:14] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[15:28:51] <beaky> nice wish my tea database was an expert system
[15:29:00] *** Quits: prompt32 (~kapad@user/kapad) (Quit: Leaving)
[15:29:54] <deniska> Exper~tea~se
[15:30:20] <ifohancroft> btw since I always keep mixing little endian and big endian, if you convert decimal 2 to binary, big endian binary would be 10, while little endian binary would be 01, right? Or was it the other way around
[15:31:33] <GeDaMo> Endian-ness usually refers to how multi-byte values are stored in memory
[15:31:35] *** Quits: password (~password@user/password2) (Quit: Connection closed)
[15:32:20] *** Joins: NeoFAT32 (~UserNick@user/NeoFAT32)
[15:32:24] <GeDaMo> However, in big endian-ness, the most significant digit comes first, yes
[15:32:41] <ifohancroft> Thank you!
[15:32:48] *** Quits: vilhelmbergsoe (~vilhelmbe@185.19.132.203) (Ping timeout: 268 seconds)
[15:32:50] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:33:02] <deniska> ifohancroft: when you are just writing out numbers in binary, you follow the same "human" pattern which is, well, "big-endian"
[15:33:28] <deniska> just like in 1234 decimal the most significant digit is the rightmost one
[15:33:30] <ifohancroft> deniska: yeah, that's what I kept forgetting. If "human" is big-endian or little-endian
[15:34:18] <deniska> ifohancroft: in computers, endianness refers to how you pack multiple small things into a single big thing, like 4 8-bit bytes in a single 32 bit integer
[15:34:49] <GeDaMo> 123: big endian, one hundred and twenty three; little endian, three hundred and twenty one
[15:34:52] <DnzAtWrk> endianness be damned
[15:35:01] <DnzAtWrk> like how certain browsers think it's okay to just use different endian in js
[15:35:01] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[15:35:23] <ifohancroft> damn, had no idea browsers do that
[15:35:35] <DnzAtWrk> I remember typed arrays doing some wierd crap
[15:35:44] <DnzAtWrk> or was it array buffer
[15:36:13] <DnzAtWrk> "The current behaviour, is determined by the endianness of the underlying hardware. As almost all desktop computers are x86, this means little-endian. Most ARM OSes use little-endian mode (ARM processors are bi-endian and thus can operate in either)."
[15:36:26] <DnzAtWrk> https://stackoverflow.com/questions/7869752/javascript-typed-arrays-and-endianness
[15:36:27] <bayaz> Title: Javascript Typed Arrays and Endianness 
[15:36:34] *** Joins: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp)
[15:36:45] <ifohancroft> btw the endian-ness works on the full multibyte number as a whole, right, not separate on each single byte? I mean like 256512 would be 215652, not 652215?
[15:36:55] <DnzAtWrk> of course endianness is not bound by the CPU on a higher level
[15:37:18] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[15:37:20] <DnzAtWrk> endianness determines just that, how to handle multiple bytes
[15:37:26] <DnzAtWrk> not how to handle bits, or handle multiple vlaues
[15:37:27] <DnzAtWrk> values*
[15:37:35] <DnzAtWrk> well, maybe it determines how to handle multiple values too at some point
[15:38:33] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[15:38:55] <DnzAtWrk> so a16-bit value could be 00000010 00000001 or 00000001 00000010
[15:38:58] <DnzAtWrk> a 16*
[15:39:12] <GeDaMo> 0x12345678 stored as little endian, in ascending address order, would be 0x78 0x56 0x34 0x12
[15:39:40] <ifohancroft> GeDaMo: that's what I feared :D
[15:39:48] <ifohancroft> actually no, wait
[15:39:58] <ifohancroft> I keep forgetting that 2 characters are a single hex byte
[15:40:04] <GeDaMo> Yeah
[15:40:29] <GeDaMo> Generally, endian-ness doesn't affect bits within a byte
[15:40:30] <DnzAtWrk> fun times with RGBA, or was that ARGB
[15:40:37] <DnzAtWrk> or maybe ABGR
[15:41:00] <ifohancroft> Awesome! Is there an exception? You said generally
[15:41:02] <deniska> ifohancroft: imagine that we have a decimal computer and bytes go from 00 to 99. Now to write bigger numbers, we need more bytes. Like a number 1234 is written using bytes 12 and 34. Or is it 34 and 12? Dunno :)
[15:41:25] *** Joins: solobalbo (uid549465@id-549465.uxbridge.irccloud.com)
[15:41:27] <GeDaMo> There are always exceptions :P
[15:41:30] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[15:41:44] <DnzAtWrk> a long bitmap maybe would be affected by endian-ness
[15:41:47] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[15:41:49] <ifohancroft> Of course there are :D Because why would anything always work the same way :D
[15:41:58] <GeDaMo> I don't know of any off the top of my head but if I said 'always' someone would correct me :P
[15:43:21] *** Joins: newwebdev13 (~newwebdev@78.135.91.54)
[15:43:23] <ifohancroft> I recently started getting into USB stuff and trying to reverse engineer captured packets and input devices' firmware but wasn't sure if I should reverse the whole string to turn it from little to big endian or each byte on its own (or if I should even reverse anything since I couldn't remember which endian was which)
[15:43:34] <beaky> yes if you use little endian it is easier to write bigger numbers because you can recursively build your way up from the smallest number whereas with big endian you have to figure out what place you are for the correct magnitude
[15:44:36] <beaky> little endian the order in which grade school addition and multiplication arithmetic goes (but not long division for some reason)
[15:44:59] <beaky> why is long division big endian instead of little endian
[15:46:57] <bomb> I'm a React & React Native engineer, who are these Endian sisters you've been bickering about?
[15:47:49] *** Quits: Khoyo (~khoyo@user/khoyo) (Quit: ZNC 1.8.2 - https://znc.in)
[15:48:00] <beaky> nice i like react but i heard flutter is the new best ui framework
[15:48:18] *** Joins: Khoyo (~khoyo@user/khoyo)
[15:48:55] *** Joins: maxzor (~maxzor@2a01cb04054faa00817fec2f2541fffd.ipv6.abo.wanadoo.fr)
[15:49:06] *** Quits: operateur (~My_user_n@91.143.220.230) (Quit: WeeChat 3.4.1)
[15:49:08] <bomb> jus' kidn' never used React
[15:49:28] <bomb> Flutter is nice, but it has its own share of annoyances
[15:50:07] <bomb> still a good bet, since Fuchsia is going to replace Android and maybe embedded OSes too
[15:50:35] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:53:03] *** Joins: vilhelmbergsoe (~vilhelmbe@185.19.132.203)
[15:55:25] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[15:57:25] *** Quits: vilhelmbergsoe (~vilhelmbe@185.19.132.203) (Ping timeout: 240 seconds)
[15:58:02] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[15:58:59] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 246 seconds)
[15:59:02] *** Joins: Merwede (Merwede@gateway/vpn/protonvpn/merwede)
[16:00:54] *** Quits: Merwede (Merwede@gateway/vpn/protonvpn/merwede) (Client Quit)
[16:01:00] *** Joins: Twipply (~Twipply@user/twipply)
[16:04:53] <amigojapan> bomb: I like nativescript much better than react native. Altho it is not that well known
[16:05:34] <pyzozord> react is actually gearing up to do more in native space and vr space
[16:05:53] <pyzozord> I think zuckerberg did some investing in that area
[16:06:30] <amigojapan> I think react is a mess and is over hyped
[16:06:36] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[16:07:23] <pyzozord> is actually quite fun paradigm to code in after years and years of OOP
[16:07:36] <pyzozord> but then it gets kind of stale too after few years
[16:08:09] <amigojapan> pyzozord: there are other better cleaner MVC Frameworks
[16:08:52] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[16:08:55] <pyzozord> amigojapan: no but react is not an mvc, it's really quite different in how you think about your application
[16:09:17] <pyzozord> when I hear mvc I think of django or symfony
[16:09:43] <amigojapan> It uses MVC tho
[16:10:10] <Stefan26> why's it called model view controller framework
[16:10:24] <pyzozord> because it had three basic kinds of objects
[16:11:00] <amigojapan> Stefan26: because it has the idea that the controller's should have the logic. And the view just make the UI 
[16:11:04] <pyzozord> amigojapan: most applications I saw in react aren't really mvc. The separation of business logic from representation logic is very blury in react components in many projects
[16:11:36] <pyzozord> model as well, especially with react builtin state and reduce hooks and what not
[16:11:45] <deniska> the biggest problem about separating business logic is how business logic a totally made up construct :)
[16:11:46] <pyzozord> it really kind of became it's own thing as far as I know
[16:11:59] <pyzozord> (unless there was something similar in the past I am not aware of)
[16:12:05] <merijn> I'm a little endian, because anyone who cracks their eggs on the "big" side of the shell is a barbarian...
[16:12:35] <smallville7123> is `e` and `p` allowed to occur multiple times in the same expression ?
[16:13:01] <pyzozord> merijn: but the little side of the egg shell is the hardest part
[16:13:24] <pyzozord> i heard of an experiment where a human stood on a perfectly balanced egg without breaking it
[16:13:28] <deniska> I usually eat scrambled eggs, so the whole endianness argument is a moto
[16:13:29] <deniska> moot*
[16:13:43] <amigojapan> Brb 
[16:13:45] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[16:14:01] <merijn> deniska: I'm just dropping some pointless trivia about "little endian" and "big endian" originally referring to the side on which you cracked an egg :p
[16:14:06] <deniska> But if I do have to open a hard boiled egg, the big end has a small air pocket which makes it much easier to open
[16:14:10] *** Joins: wolfshappen (~waff@irc.furworks.de)
[16:14:23] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[16:14:44] <pyzozord> i open eggs from a side, that's the most optimal way
[16:15:19] <pyzozord> weird day today
[16:15:37] <ifohancroft> I don't really pay attention from which side I open the eggs if they are uncooked, but now that I think about it, even boiled eggs, I still open them from wherever.
[16:16:12] <pyzozord> i had the same about how I hang toilet paper
[16:16:25] <pyzozord> until I learned on the internet I am a barbarian and I do it wrong
[16:16:54] <amigojapan> The sharper tip of the egg is the hardest place to crack an egg
[16:17:09] <merijn> pyzozord: The "little endian" vs "big endian" name is originally from Gulliver's Travels, where two countries are at war over how you should open an egg
[16:17:10] <amigojapan> The equator is best
[16:17:12] *** Quits: newwebdev13 (~newwebdev@78.135.91.54) (Quit: Leaving)
[16:17:42] *** Quits: Jaami (~Jaami@182.185.176.225) (Quit: Nettalk6 - www.ntalk.de)
[16:18:14] <merijn> The paper introducing the terms for computers (with the, incidentally, brilliant title "On Holy Wars and a Plea for Peace") explicitly references Gulliver's Travels to make a point about the little vs big endian debate on computer science :)
[16:18:28] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.222) (Ping timeout: 260 seconds)
[16:18:54] <pyzozord> merijn: hmm I recognize that name
[16:19:01] *** Quits: wildo (~lain6141@202.180.111.143) (Quit: leaving)
[16:19:03] <user51> middle endian :)
[16:19:22] <deniska> NUXI system
[16:19:25] <bartwe> no, bad user51
[16:20:04] <smallville7123> should i just assume the order must be either e, p, or e...p but not p...e, and e and p cannot occur more than once ?
[16:20:09] *** Joins: tangy (~tangy@user/tangy)
[16:20:54] *** Quits: tangyQED (~tangy@user/tangy) (Ping timeout: 268 seconds)
[16:23:08] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.222)
[16:24:06] <DnzAtWrk> show do I tell wolfram alpha to not turn pi into a number
[16:24:13] <DnzAtWrk> how*
[16:25:01] <bartwe> replace it with a variable that isn't constrained ?
[16:25:28] <bartwe> dunno, likely will cause it to not simplify things
[16:26:56] *** Joins: joji (~jojo@86.4.72.180)
[16:27:33] <bomb> amigojapan do you use Capacitor.js too?
[16:28:39] <DnzAtWrk> uff
[16:28:45] <DnzAtWrk> what about that chrome based thing
[16:28:48] <DnzAtWrk> umm... wgjs
[16:28:52] <DnzAtWrk> something
[16:29:11] <bomb> nwjs
[16:29:15] <DnzAtWrk> nwjs
[16:29:16] <DnzAtWrk> yeah
[16:29:25] <bomb> I think it doesn't support ARM-based Macs
[16:29:29] <Sqaure> "Combat Agile"
[16:29:30] <DnzAtWrk> ah
[16:29:42] <DnzAtWrk> well, as far as I can tell, nwjs is the lesser of several evils
[16:30:13] <DnzAtWrk> it's still not a platform I would be comfortable to ship a product with
[16:30:16] <bomb> yeah it was more comfortable than Electron last time I checked, because it didn't enforce NPM-based project management
[16:30:29] <bomb> have you heard about Tauri?
[16:30:34] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[16:30:35] <DnzAtWrk> From stargate?
[16:30:40] <bomb> yes
[16:30:45] <amigojapan> bomb: I don't think so. Let me Google that
[16:30:53] <bomb> also nwjs without node.js but Rust
[16:30:57] *** Joins: vilhelmbergsoe (~vilhelmbe@185.19.132.203)
[16:31:00] <Sqaure> Did you know .js stands for "Just Shite"
[16:31:06] <bomb> exactly
[16:31:14] <DnzAtWrk> my main issue is that the core of these native javascript bundlers are quite bloated
[16:31:20] <DnzAtWrk> if only we could really start from scratch
[16:31:26] <DnzAtWrk> and only add the stuff you really need
[16:31:29] *** Quits: xythercoder (~xythecode@157.41.159.241) (Ping timeout: 248 seconds)
[16:31:29] <bomb> they are, yeah
[16:32:01] *** Quits: maxzor (~maxzor@2a01cb04054faa00817fec2f2541fffd.ipv6.abo.wanadoo.fr) (Ping timeout: 248 seconds)
[16:32:02] *** Joins: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it)
[16:32:11] <DnzAtWrk> damn shame, because javascript is a lovely development platform
[16:32:21] *** Joins: DarkTrick (~DarkTrick@219.100.78.65)
[16:32:28] *** Quits: Psybur (~Psybur@c-76-123-45-25.hsd1.va.comcast.net) (Ping timeout: 260 seconds)
[16:32:29] <bomb> check out Tauri
[16:32:32] <DnzAtWrk> I'd argue THE more versatile gamedev platform out there
[16:32:33] <Sqaure> "-Learn .JS and get a job in IT and earn good money. I did it and now we have 2 cars and a spacy house"
[16:32:35] <DnzAtWrk> I shall
[16:32:39] <bomb> it's not ready yet, but at least it saves you from NOde.js nonsense
[16:32:50] <DnzAtWrk> most*
[16:33:08] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[16:33:25] <bomb> Node.js used for CLI tooling in Tauri AFAIK
[16:33:49] <DarkTrick> Sqaure, you should exchange your cars for bicycles. It's good for your health :)
[16:33:55] <Sqaure> "-You dont care for IT but wants the salary of it? Learn .js!"
[16:33:56] *** Joins: yewscion (~yewscion@72-21-196-67.amazon.com)
[16:34:13] <beaky> hello how do i use custom memory allocators in rust
[16:34:18] <bomb> well, JS is on demand for sure
[16:34:23] *** Quits: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[16:34:23] <Sqaure> DarkTrick, i actually have no less than 5 bicycles. 2 recumbents
[16:34:35] <DnzAtWrk> the hatred for js is quite strange
[16:34:37] <DnzAtWrk> I mean, for PHP I get it
[16:34:38] <beaky> while also having the borrow checker check that my tea database is correctly borrowing memory
[16:34:43] <DnzAtWrk> php is an insecure nightmare compared to js
[16:34:57] *** Joins: Psybur (~Psybur@2600:1003:b138:112:6968:67e7:2717:bba0)
[16:35:00] <DarkTrick> Sqaure, half way there :D
[16:35:02] <DnzAtWrk> while js has some stupid quirks too, like prototype pollution
[16:35:03] *** Joins: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr)
[16:35:11] *** Quits: _mantra (~mantra@216.73.163.121) (Ping timeout: 260 seconds)
[16:35:11] <bomb> DnzAtWrk JavaScript is forced upon developers by browser makers. PHP can be a choice
[16:35:13] *** Quits: vilhelmbergsoe (~vilhelmbe@185.19.132.203) (Ping timeout: 248 seconds)
[16:35:18] <Sqaure> ...and own no car.
[16:35:22] *** Joins: mantra (~mantra@216.73.163.51)
[16:35:48] <DnzAtWrk> I may just like js because I grew up developing my own patterns in it, implementing classes back when they didn't exist
[16:35:55] <DnzAtWrk> and found ways to use it which didn't suck horribly
[16:35:59] <Sqaure> favorite language compiled to WASM. Done
[16:36:07] <DnzAtWrk> (use pretend encapsulation, it will save hair)
[16:36:22] <bomb> you also have the liberty to do whatever you want
[16:36:44] <DarkTrick> Q: Are there home routers that allow the WAN connection to be a wifi connection?
[16:36:46] <bomb> most devs have to develop business front-ends in JS< work with others, and such
[16:36:54] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[16:36:59] <DnzAtWrk> and why not
[16:37:03] <DnzAtWrk> what language would they prefer over that
[16:37:13] <DnzAtWrk> Hell, I go out of my way to develop html-based interfaces despite it being native
[16:37:16] <DnzAtWrk> because it sure as hell is easy
[16:37:57] <Sqaure> easy can mean lack of features resulting badly expressed ideas.
[16:38:04] <Sqaure> in*
[16:38:24] <bomb> web sucks altogether
[16:38:54] <bomb> it's 2022, and we don't have the same 3D capabilities on web as on "native" 10 years ago
[16:38:55] <DnzAtWrk> Naw I love web
[16:38:58] <bomb> because arbitrary limitations
[16:39:03] <DnzAtWrk> I can mix and match and render anything I want
[16:39:10] <DnzAtWrk> https://img2map3d.herokuapp.com
[16:39:38] <bomb> render Forza Horizon graphics on web
[16:39:50] *** Joins: DnzAtWrk2 (~DnzAtWrk@mobile-access-5672fb-80.dhcp.inet.fi)
[16:40:02] *** Joins: independent56 (~independe@2.25.26.98)
[16:40:09] <ifohancroft> Shouldn't it in theory be possible with webgl and webassembly?
[16:40:35] *** Joins: godSend23 (~journeyMa@2601:646:8900:6fe0:dcd5:dbae:f453:7233)
[16:40:36] <godSend23> hey all
[16:41:03] <bomb> ifohancroft nope. webgl is limited like old mobile graphics. WebGPU seems to be our only hope
[16:42:19] <DnzAtWrk2> old mobile graphics?
[16:42:22] <ifohancroft> oh, didn't know that. tnx! also haven't heard of WebGPU before
[16:42:23] <beaky> yes for years i wanted to learn opengl but then opengl became obsolete and now its vulkan but then there was webgl so then i tried to learn webgl and there were cool shader and raytracing tutorials in a weekend but hundreds of weekends later webgl is now obsolete now i have no idea what graphics programming api i am supposed to use to learn how to program graphics
[16:42:40] <DnzAtWrk2> I mean, learn one shader learn them all
[16:42:44] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[16:42:51] <DnzAtWrk2> except for raytracing
[16:43:11] <beaky> so then why not learn vulkan but then everyone says beginners must not learn vulkan so now im deadlocked with no way to learn graphics programming
[16:43:20] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:43:22] <bomb> beaky OpenGL is still a safe bet, because Zink and such
[16:43:35] <bomb> beaky Vulkan API is terrible
[16:43:45] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df076-245.dhcp.inet.fi) (Ping timeout: 248 seconds)
[16:43:46] <bomb> Metal is nice, but it's Apple-only
[16:43:55] <beaky> yes i tried opengl 2.0 but all the frameworks i tried are bitrotted i think
[16:44:06] <bomb> that's old
[16:44:22] <beaky> just installing the tutorials they say to install like 10 different gl<something> packages 
[16:44:35] <beaky> whereas with vulkan you just install vulkan and you're good to go i think
[16:44:42] <ifohancroft> either ignore them and just learn Vulkan or perhaps learn OpenGL, then move to Vulkan so by the time you start learning Vulkan you are no longer a beginner
[16:44:47] *** RazielZ is now known as Raziel
[16:45:05] <bomb> https://learnopengl.com/
[16:45:05] <bayaz> Title: Learn OpenGL, extensive tutorial resource for learning Modern OpenGL 
[16:45:09] <ifohancroft> But I'd say just learn Vulkan on its own, you are going to be bashing your head anyway, might as well bash a little more but just learn what's your endgoal anyway
[16:45:19] <ifohancroft> bomb: oh, cool!
[16:45:23] <ifohancroft> thanks for sharing
[16:45:29] <bomb> you're welcome :)
[16:45:33] <amigojapan> bomb: I did but know about capacitor but nativescript seems to be similar https://nativescript.org/
[16:45:34] <bayaz> Title: NativeScript 
[16:46:04] <beaky> yes that learnopengl.com website is where i alwawys get stuck
[16:46:06] <pyzozord> ugh I feel really lazy today
[16:46:18] <pyzozord> not tired, no headache, no bad mood
[16:46:22] <pyzozord> just the actual lazy lazy
[16:46:22] <bomb> last time I heard Godot team was unsure about Vulkan on mobile platforms
[16:46:24] *** Quits: anomal (~anomal@87.227.196.109) (Remote host closed the connection)
[16:46:31] <bomb> for the next version they've been developing for years
[16:46:42] *** Joins: anomal (~anomal@87.227.196.109)
[16:47:05] <beaky> every year once a month i go 'time to learn how to program graphics' so i open that learnopengl.com and then get stuck installing glfw because its obsolete or something
[16:47:30] <bomb> beaky is C++ your favorite language?
[16:47:38] <pyzozord> bomb: have you heard about nehe
[16:47:40] <beaky> i like rust now
[16:47:51] <pyzozord> it's a website that teaches opengl for at least 15 years now
[16:47:57] <bomb> you can pick anything, OpenGL is an ugly imperative API after all, you can use it from anything following those tutorials
[16:48:02] <pyzozord> I was first trying to learn opengl from it long ago
[16:48:09] <pyzozord> https://nehe.gamedev.net/
[16:48:09] <bayaz> Title: NeHe Productions - Everything OpenGL 
[16:48:17] <pyzozord> back then it was arguably the best
[16:48:37] <bomb> pyzozord nope, never heard
[16:48:42] <pyzozord> looks like latest news is from 2017 :(
[16:48:59] *** Joins: DarkTrick_ (~DarkTrick@219.100.78.65)
[16:49:01] <bomb> yeah, resembles early-00s websites :)
[16:49:09] <bomb> https://www.metal-archives.com/
[16:49:10] <bayaz> Title: Home - Encyclopaedia Metallum: The Metal Archives 
[16:50:10] <pyzozord> good design on that metal-archives
[16:50:17] <pyzozord> that's my favourite eara of web design
[16:50:30] <bomb> yeah, mine too
[16:50:35] <bomb> now it's all crappy
[16:50:46] <pyzozord> well we did made some improvements
[16:51:10] <pyzozord> we make are better about readability now, chosing fonts and font sizes a bit more carefully
[16:51:18] <amigojapan> bomb: I may look into capacitor, cause nativescript is pretty badly documented and their developers gather in slack which I have not been able to access
[16:51:29] *** Quits: DarkTrick (~DarkTrick@219.100.78.65) (Ping timeout: 246 seconds)
[16:56:33] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 248 seconds)
[16:58:15] <beaky> nice i like modern fonts but they always look fuzzy and need antialiasing
[16:58:33] <beaky> wish all websites used bitmap fonts instead like the classic iconic default xterm font 
[16:58:47] <beaky> but then i need unicode wish there was bitmap unicode
[17:00:01] *** Joins: lisp123 (~lisp123@143.238.171.43)
[17:00:19] *** Joins: jamea (~jamea@177.239.82.103)
[17:00:21] <bomb> I really like Roboto Mono in text editors and terminals
[17:00:22] *** Quits: godSend23 (~journeyMa@2601:646:8900:6fe0:dcd5:dbae:f453:7233) (Ping timeout: 268 seconds)
[17:00:59] *** Joins: DarkTrick__ (~DarkTrick@219.100.78.65)
[17:03:29] *** Quits: DarkTrick_ (~DarkTrick@219.100.78.65) (Ping timeout: 248 seconds)
[17:05:12] <pyzozord> I love the font that they used on machine typewriters in the 70s and80s
[17:05:21] <pyzozord> I think it's Courier but I'm not sure
[17:05:29] *** Joins: DarkTrick_ (~DarkTrick@219.100.78.65)
[17:05:31] <pyzozord> but those typerwriter documents just look very cool
[17:06:19] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[17:07:08] *** Quits: coaxing (~coaxing@user/coaxing) (Quit: WeeChat 3.4.1)
[17:07:56] *** Quits: DarkTrick__ (~DarkTrick@219.100.78.65) (Ping timeout: 246 seconds)
[17:08:17] *** Quits: suss (~user@user/suss) (Ping timeout: 246 seconds)
[17:08:51] *** Joins: coaxing (~coaxing@user/coaxing)
[17:09:43] <lisp123> i am starting to like javascript
[17:09:49] <lisp123> does that make me a bad programmer
[17:09:59] *** Quits: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp) (Quit: xff0x)
[17:10:15] <DnzAtWrk2> it means you're pragmatic
[17:11:26] <lisp123> DnzAtWrk2: :)
[17:11:26] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[17:11:59] <pyzozord> nah actually makes you a worse programmer if you trully believe something is utterly unusable and just no good at all
[17:12:18] <lisp123> yup
[17:12:51] <DnzAtWrk2> btw, play my new game
[17:12:52] <DnzAtWrk2> https://donitz.itch.io/the-scraps-of-victory
[17:12:53] <bayaz> Title: The Scraps of Victory by Donitz 
[17:12:56] <DnzAtWrk2> and rate!
[17:12:56] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[17:13:02] <lisp123> I have been dabbling in Python, DAX (PowerBI), JavaScript (quite a bit now) and Swift, together with my Lisp - even though I love Lisp, I want to actually achieve some real world results
[17:13:17] *** Quits: DarkTrick_ (~DarkTrick@219.100.78.65) (Ping timeout: 260 seconds)
[17:13:38] *** Joins: DarkTrick (~DarkTrick@219.100.78.65)
[17:13:44] <lisp123> I like that JS is quite functional though
[17:15:22] <lisp123> DnzAtWrk2: That was really good
[17:15:38] <lisp123> I thought I won when the food was put down ("forgot milk") but the cat knocked it off
[17:15:40] *** Quits: bomb (~bomb@user/bomb) (Quit: ‎)
[17:15:46] <lisp123> I didn't like the loud sound at the end
[17:15:58] <lisp123> Since I was listening music and it interuppted
[17:15:58] *** Joins: DarkTrick_ (~DarkTrick@219.100.78.65)
[17:16:37] *** Joins: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp)
[17:17:53] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Ping timeout: 248 seconds)
[17:19:00] *** Joins: DarkTrick__ (~DarkTrick@219.100.78.65)
[17:19:08] *** Quits: DarkTrick (~DarkTrick@219.100.78.65) (Ping timeout: 260 seconds)
[17:19:36] *** Joins: rsonx (~rakesh@user/rsonx)
[17:20:26] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[17:20:45] <logiz> lisp123: if you want to achieve real world results use clojure
[17:21:05] *** Joins: wakeup (~wakeup@user/wakeup)
[17:21:10] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[17:21:11] *** Joins: maxzor (~maxzor@2a01cb04054faa00b0d6c6caafc0c1f8.ipv6.abo.wanadoo.fr)
[17:21:27] *** Quits: DarkTrick_ (~DarkTrick@219.100.78.65) (Ping timeout: 260 seconds)
[17:22:19] <lisp123> logiz: Hmm maybe thats next on my list :)
[17:22:25] <lisp123> For now, sleep though...nights!
[17:22:30] *** Quits: lisp123 (~lisp123@143.238.171.43) (Quit: Leaving...)
[17:22:32] <pyzozord> damn I enjoy being good at my job sometimes
[17:22:35] <user51> huh. i just realized i can use something like 'dict[length(dict)] = data' to make indices in insertion order.
[17:22:40] <pyzozord> when everything flows it's amazing
[17:22:48] <user51> not sure where it's useful, though.
[17:23:02] <pyzozord> *being good sometimes, enjoying being good always
[17:24:39] <pyzozord> and linkin park instrumentals are going to be in much more heavy rotation now
[17:24:58] <user51> just until it starts playing 'numb' :P
[17:25:41] *** Quits: DarkTrick__ (~DarkTrick@219.100.78.65) (Ping timeout: 250 seconds)
[17:25:45] *** Joins: independent_ (~independe@2.25.26.98)
[17:26:33] <pyzozord> you kidding, that's the best one! :P
[17:26:37] *** Joins: f12 (~suss@user/suss)
[17:27:18] <pyzozord> it's a bit cringe especially for a guy my age to listen to this stuff so I'm not going to broadcasting it :P
[17:27:34] <pyzozord> and agreed numb is a bit worn out for me too
[17:27:38] *** Quits: Affliction (affliction@idlerpg/player/affliction) (Ping timeout: 250 seconds)
[17:27:42] <pyzozord> but not enough to not enjoy it
[17:28:06] <user51> just become numb to it bro :P
[17:28:33] *** Quits: independent56 (~independe@2.25.26.98) (Ping timeout: 248 seconds)
[17:28:35] *** Quits: f12 (~suss@user/suss) (Remote host closed the connection)
[17:29:00] *** Joins: f12 (~suss@user/suss)
[17:29:35] <pyzozord> also the vim shortcuts with vscode typescript autocompletion make things too easy
[17:30:44] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:31:11] *** Joins: wedr (~tom_mai78@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:31:31] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[17:32:00] *** Quits: joji (~jojo@86.4.72.180) (Ping timeout: 272 seconds)
[17:32:42] <pyzozord> can't wait for the work they to end so i can go back to learning go
[17:32:49] *** Quits: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 248 seconds)
[17:33:52] *** Quits: Deknos (~someone@user/menace) (Remote host closed the connection)
[17:34:09] *** Joins: Deknos (~someone@ppp-93-104-183-77.dynamic.mnet-online.de)
[17:34:30] <pyzozord> such a long day today
[17:34:38] *** Joins: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[17:34:56] *** Quits: rsonx (~rakesh@user/rsonx) (Quit: Konversation terminated!)
[17:35:04] *** Joins: rsonx2 (~rakesh@user/rsonx)
[17:35:14] <pyzozord> s/they/day
[17:41:18] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Ping timeout: 260 seconds)
[17:41:48] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[17:42:36] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[17:43:44] *** Joins: nshirelaptop (~nshire@user/nshire)
[17:44:50] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[17:45:31] *** Joins: xff0x_ (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp)
[17:47:11] <bartwe> +1 for phonetic typos
[17:47:39] *** Joins: sondre (~sondre@2001:700:200:f112::2a03)
[17:48:02] *** sondre is now known as sondr3
[17:48:13] *** Quits: nshirelaptop (~nshire@user/nshire) (Ping timeout: 250 seconds)
[17:49:08] <pyzozord> if I was a better speaker those would probably sound more different to me
[17:51:34] <pyzozord> also wow, new linking park instrumental stuff is also amazing, so good. I need to listen to some new linking park music
[17:52:08] *** Joins: off^ (~off@c-24-99-107-170.hsd1.ga.comcast.net)
[17:53:08] *** Quits: NeoFAT32 (~UserNick@user/NeoFAT32) (Quit: Le Soleil ne se couche pas !)
[17:54:42] *** Quits: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 260 seconds)
[17:55:08] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com) (Remote host closed the connection)
[17:55:43] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com)
[17:57:49] *** Joins: newwebdev13 (~newwebdev@78.135.91.54)
[17:58:49] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:00:11] *** Quits: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 268 seconds)
[18:00:33] *** Quits: Blackajack (~Blackajac@user/Blackajack) (Ping timeout: 248 seconds)
[18:00:57] *** Joins: jsmooth (~quassel@user/jsmooth)
[18:03:25] *** Joins: hiyori (~kaneko@user/hiyori)
[18:03:56] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 246 seconds)
[18:04:03] <wedr> Ok #programming, I'm at an en passe. I got a ticket assigned with only 1 commit, 1 code change basically. I'm tempted to just merge my code straight into the development branch without letting my team peer review it. Is this the wrong way of doing it, and you must adhere to the rules where other devs must peer review your code, even if your code is like a 1 line change?
[18:04:37] <hiyori> https://dpaste.com/AGFUEWAQF
[18:04:39] <GeDaMo> I think you mean impasse :P
[18:04:49] <wedr> oh, that's how you spell it.
[18:04:55] <hiyori> my C code: https://dpaste.com/DHDP29KY2
[18:05:21] <GeDaMo> En passant is a chess move, I think
[18:05:39] <yawkat> wedr: always follow peer review. if it is a tiny change, it wont be much work to review, either.
[18:05:55] <wedr> Yeah, I got that word in my head, but sometimes I mix those words up. Impasse, En Passant.
[18:06:26] <bartwe> yeah go for review
[18:06:37] <GeDaMo> hiyori: int main()
[18:06:42] <bartwe> don't get in the habit of bypassing, and don't allow others either
[18:07:03] *** Joins: urnebes (~urnebes@2605:8d80:64b:cbcd:b032:7e40:29b2:c819)
[18:07:43] <yawkat> the nice thing about async processes like code review is that they dont really hurt others' productivity either. they can do the review when they have free cycles
[18:07:47] *** Quits: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it) (Ping timeout: 246 seconds)
[18:08:11] *** Quits: kmh (~kmh@2a00:6020:5004:6800:2c38:c900:70ea:cd14) (Quit: Leaving)
[18:09:57] <bartwe> don't get too async with it or you're bound for endless merge madness
[18:10:07] *** Quits: rsonx2 (~rakesh@user/rsonx) (Remote host closed the connection)
[18:11:03] *** Joins: rsonx (~rakesh@user/rsonx)
[18:11:10] <pyzozord> wedr: don't
[18:11:37] <pyzozord> wedr: even single line, make a pr for it, let people know, people like to know
[18:11:43] <beaky> nice i love async
[18:11:58] <beaky> i love rust it does everything right 
[18:12:09] <beaky> even the turbofish::<operator>
[18:12:12] <wedr> ok, thanks for the tip. I'll just wait until someone peer reviews it.
[18:12:25] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[18:12:31] <beaky> its finally nice to have a language where everything is perfectly designed like rust
[18:12:51] <pyzozord> wedr: better not break protocol especially when there is no reason for it
[18:13:38] *** Joins: kmh (~kmh@2a00:6020:5004:6800:7cc4:ef37:712f:623d)
[18:18:07] *** Joins: kaph (~kaph@dynamic-adsl-78-12-162-98.clienti.tiscali.it)
[18:18:08] *** Quits: rsonx (~rakesh@user/rsonx) (Remote host closed the connection)
[18:18:36] *** Joins: rsonx (~rakesh@user/rsonx)
[18:18:42] *** Quits: monr0e (~monr0e@host-81-179-96-15.static.as13285.net) (Quit: Leaving)
[18:19:45] <anomal> beaky: do you really seee it this way
[18:20:55] <anomal> wedr: pyzozord: One accidentally duplicated line of code cause the biggest security vulnerability of Apple in the last few years
[18:21:39] *** Joins: tolot (~tolot@dynamic-078-049-112-061.78.49.pool.telefonica.de)
[18:21:50] <nomagno> What other functions do people usually join with map() as being similar or combining well?
[18:22:24] *** Quits: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp) (Quit: xff0x)
[18:26:00] *** Quits: Deknos (~someone@ppp-93-104-183-77.dynamic.mnet-online.de) (Quit: Deknos)
[18:26:18] *** Quits: Inline (~Inline@p4fedbc1e.dip0.t-ipconnect.de) (Quit: Leaving)
[18:26:42] *** Quits: Psybur (~Psybur@2600:1003:b138:112:6968:67e7:2717:bba0) (Ping timeout: 268 seconds)
[18:26:46] *** Joins: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp)
[18:26:57] <pyzozord> find(), some(), reduce() in js 
[18:27:09] <pyzozord> not sure if there is all() but there should be
[18:27:13] <beaky> yes when i use rust it feels like everything is designed correctly with zero warts
[18:27:34] <beaky> like they learned from 40 years of experience with c and c++ and pascal and java and c# and ml and haskell and python and 
[18:27:39] *** Joins: Psybur (~Psybur@2601:5c9:4201:3220:19c2:a1cd:6600:38ba)
[18:27:45] *** Joins: Inline (~Inline@p200300cd470f5c00eeead6c89d51972a.dip0.t-ipconnect.de)
[18:28:37] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[18:28:40] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[18:29:04] <pyzozord> except it doesnt have dependent and higher kinded types
[18:29:20] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[18:29:21] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 248 seconds)
[18:29:27] <beaky> yes except for those but soon they'll have something that is sorta like higher kinded types
[18:29:49] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[18:29:56] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Read error: Connection reset by peer)
[18:30:04] <GeDaMo> nomagno: zipWith can be seen as a kind of map
[18:30:38] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[18:31:06] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[18:31:08] <GeDaMo> fold/reduce, scan, filter
[18:32:14] <pyzozord> oh, also: sort :P
[18:32:24] *** Quits: rsonx (~rakesh@user/rsonx) (Quit: Konversation terminated!)
[18:33:11] <beaky> yes sort is a map between permutations i think
[18:33:49] <GeDaMo> https://en.wikipedia.org/wiki/Higher-order_function#General_examples
[18:33:50] <bayaz> Title: Higher-order function - Wikipedia 
[18:36:31] <pyzozord> if higher order function is a function that takes a function or returns a function then a lot of functions are higher order
[18:37:19] <pyzozord> sweet, all tests and build steps passed
[18:37:55] <pyzozord> did even try that hard, did it in few hours, out of being bored :P
[18:38:05] <pyzozord> *didn't
[18:38:07] *** Joins: CodePoint (~CodePoint@2607:fb90:c6c:212b:db7:c3d6:d4e7:5a73)
[18:38:40] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[18:39:10] <pyzozord> I'll write better description for the pr, I kind of winged that
[18:41:23] *** Quits: jamea (~jamea@177.239.82.103) (Ping timeout: 260 seconds)
[18:44:50] *** Quits: hiyori (~kaneko@user/hiyori) (Ping timeout: 272 seconds)
[18:45:15] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[18:47:08] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[18:49:25] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[18:49:43] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Remote host closed the connection)
[18:50:59] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[18:53:02] *** Quits: sondr3 (~sondre@2001:700:200:f112::2a03) (Quit: sondr3)
[18:53:38] *** Quits: urnebes (~urnebes@2605:8d80:64b:cbcd:b032:7e40:29b2:c819) (Ping timeout: 260 seconds)
[18:53:48] *** Joins: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[18:54:11] *** Joins: eddof13 (~textual@2806:102e:12:64:ed65:153f:4619:a0e9)
[18:54:14] *** Quits: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp) (Quit: xff0x)
[18:56:12] *** Joins: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[18:56:33] *** Joins: monr0e (~monr0e@host-81-179-96-15.static.as13285.net)
[18:56:56] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[18:57:01] *** Joins: xff0x (~xff0x@i121-117-52-147.s41.a013.ap.plala.or.jp)
[18:57:05] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[18:57:08] <beaky> what is the best way to benchmark data structure performance in rust
[18:57:24] *** Joins: nvmd (~weechat@user/nvmd)
[18:57:40] <beaky> so i can compare my database succinct radix tree to rust's btree https://doc.rust-lang.org/std/collections/struct.BTreeMap.html
[18:57:40] <bayaz> Title: BTreeMap in std::collections - Rust 
[19:00:01] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::7377)
[19:00:27] *** Joins: Akiva (~Akiva@user/Akiva)
[19:00:33] *** Joins: wakeup (~wakeup@user/wakeup)
[19:02:23] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 246 seconds)
[19:02:34] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:05:49] *** Joins: vitali64 (~vitali64@user/vitali64)
[19:07:45] *** Quits: chomwitt (~chomwitt@2a02:587:dc19:3600:a66b:8309:cc51:32) (Ping timeout: 248 seconds)
[19:09:27] <beaky> nice just finished benchmarking and my trie is 100x slower than rust's btree
[19:10:24] *** Quits: DnzAtWrk2 (~DnzAtWrk@mobile-access-5672fb-80.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:12:43] *** Quits: eddof13 (~textual@2806:102e:12:64:ed65:153f:4619:a0e9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:13:07] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[19:14:25] *** Joins: pmercado (~pmercado@186.11.83.86)
[19:14:58] <beaky> maybe im doing something wrong
[19:17:43] *** Joins: jamea (~jamea@189.231.14.7)
[19:18:51] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[19:19:55] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5672fb-80.dhcp.inet.fi)
[19:20:06] <beaky> after removing all the printfs it is now only 85x slower than rust's btree
[19:20:26] *** Joins: eddof13 (~textual@2806:102e:12:64:ed65:153f:4619:a0e9)
[19:20:32] *** Joins: allegorical_ (~guest@2607:fea8:33e0:65c:90b0:db47:57a2:578d)
[19:20:32] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[19:20:43] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving)
[19:21:50] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[19:22:08] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5672fb-80.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:24:09] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:24:12] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[19:24:12] *** Quits: allegorical (~guest@2607:fea8:33e0:65c:39ea:530b:c05a:2e69) (Ping timeout: 240 seconds)
[19:27:51] *** Quits: DasBrain_ (~DasBrain@user/dasbrain) (Ping timeout: 245 seconds)
[19:29:25] *** Quits: pmercado (~pmercado@186.11.83.86) (Remote host closed the connection)
[19:29:26] *** Joins: jamea77 (~jamea@189.231.14.7)
[19:30:41] *** Quits: jamea (~jamea@189.231.14.7) (Ping timeout: 248 seconds)
[19:30:53] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[19:31:07] *** Quits: anomal (~anomal@87.227.196.109) (Remote host closed the connection)
[19:35:04] *** Joins: swp (~Thunderbi@143.176.249.0)
[19:35:26] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:35:55] *** Joins: chomwitt (~chomwitt@athedsl-31881.home.otenet.gr)
[19:39:20] *** Joins: DnzAtWrk (~DnzAtWrk@1091.pc.puv.fi)
[19:40:41] *** Joins: pmercado (~pmercado@186.11.19.34)
[19:42:38] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 246 seconds)
[19:43:16] *** Joins: ivanf (~ivan@user/ivanf)
[19:44:20] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[19:44:44] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving)
[19:45:01] *** Quits: jianwu (~jianwu@softbank126088036030.bbtec.net) (Quit: Leaving)
[19:45:37] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[19:46:09] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 248 seconds)
[19:46:45] *** Joins: tccki (~tccki@box.webslate.co.nz)
[19:47:14] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:3508:4678:64a6:f9b2) (Read error: Connection reset by peer)
[19:48:49] *** Quits: CodePoint (~CodePoint@2607:fb90:c6c:212b:db7:c3d6:d4e7:5a73) (Ping timeout: 248 seconds)
[19:49:32] *** Quits: AMG (ghebo@user/amg) (Remote host closed the connection)
[19:50:13] *** Quits: Psybur (~Psybur@2601:5c9:4201:3220:19c2:a1cd:6600:38ba) (Ping timeout: 260 seconds)
[19:50:54] *** Joins: Psybur (~Psybur@2600:1003:b138:112:20c5:efb4:887:de9a)
[19:51:27] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[19:56:06] <pyzozord> simd?
[19:56:18] <pyzozord> also cpu cache
[19:56:20] *** Joins: dld (~davidlowr@2601:180:204:17de:38c1:e5a4:b065:9eb3)
[19:56:36] <pyzozord> but maybe also it's just trie vs btree algorithm difference
[19:57:05] <pyzozord> most languages are open source so you should be able to look up their implementation
[19:57:35] *** Joins: jamea (~jamea@189.231.14.7)
[19:58:56] *** Quits: jamea77 (~jamea@189.231.14.7) (Ping timeout: 272 seconds)
[20:00:12] *** Quits: nvmd (~weechat@user/nvmd) (Ping timeout: 272 seconds)
[20:00:17] *** Joins: tosemusername (~weechat@user/nvmd)
[20:00:39] <beaky> yes i should try a non-succinct radix trie implementation first if it is faster than the btree then i know the problem is in my succinct implementation being slow with the rank and select queries
[20:00:57] <beaky> i will need a normal trie anyway for dynamic updates
[20:01:29] *** tosemusername is now known as nvmd
[20:01:34] *** Joins: martinthewildpig (~martinthe@2a02:a03f:d8ee:9d00:9c24:a80:3c31:737)
[20:03:06] <beaky> the whole point of succinct radix trie is that it is cache friendlier than the pointer-based radix tree or btrees
[20:03:30] *** Joins: magla (~gelignite@d5363ac5.access.ecotel.net)
[20:03:39] <beaky> but i love rust 
[20:04:05] *** Quits: eddof13 (~textual@2806:102e:12:64:ed65:153f:4619:a0e9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:04:31] *** Quits: dld (~davidlowr@2601:180:204:17de:38c1:e5a4:b065:9eb3) (Ping timeout: 245 seconds)
[20:06:40] *** Joins: dld (~davidlowr@2601:197:600:1210:38c1:e5a4:b065:9eb3)
[20:07:13] *** Quits: independent_ (~independe@2.25.26.98) (Ping timeout: 268 seconds)
[20:07:57] *** Quits: grogu (~quassel@user/grogu) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:08:11] *** Joins: grogu (~quassel@45-26-125-25.lightspeed.tukrga.sbcglobal.net)
[20:08:11] *** Quits: grogu (~quassel@45-26-125-25.lightspeed.tukrga.sbcglobal.net) (Changing host)
[20:08:11] *** Joins: grogu (~quassel@user/grogu)
[20:08:19] *** Joins: eddof13 (~textual@2806:102e:12:64:ed65:153f:4619:a0e9)
[20:08:54] *** Quits: martinthewildpig (~martinthe@2a02:a03f:d8ee:9d00:9c24:a80:3c31:737) (Quit: Client closed)
[20:12:46] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[20:13:53] *** wizzwizz4 is now known as kee
[20:17:40] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[20:19:28] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpz24p66fl8y1an.ipv6.telus.net)
[20:19:49] *** Quits: magla (~gelignite@d5363ac5.access.ecotel.net) (Quit: Stay safe!)
[20:20:48] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:3508:4678:64a6:f9b2)
[20:22:01] *** Quits: maxzor (~maxzor@2a01cb04054faa00b0d6c6caafc0c1f8.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[20:22:20] *** Joins: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de)
[20:22:20] *** Quits: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de) (Changing host)
[20:22:20] *** Joins: resamvi (~resamvi@user/resamvi)
[20:23:15] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:23:15] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[20:23:28] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[20:23:42] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b1a6:339e:65ca:f206)
[20:24:47] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[20:25:31] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[20:26:14] *** Joins: audio (~audio@user/audio)
[20:26:41] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 248 seconds)
[20:29:03] *** Joins: joji (~jojo@86.4.72.180)
[20:32:58] *** Joins: independent_ (~independe@2.25.26.98)
[20:34:03] *** Quits: f12 (~suss@user/suss) (Quit: Leaving)
[20:36:49] *** Joins: Blackajack (~Blackajac@user/Blackajack)
[20:37:56] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4.1)
[20:40:34] *** Quits: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca) (Quit: Client closed)
[20:41:47] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-6885-e190-1d80-eba5.inf6.spectrum.com)
[20:43:45] *** Quits: duuude (~user@user/duuude) (Ping timeout: 248 seconds)
[20:45:25] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-bc99-2486-284c-6e65.inf6.spectrum.com) (Ping timeout: 240 seconds)
[20:46:04] *** Quits: yewscion (~yewscion@72-21-196-67.amazon.com) (Ping timeout: 268 seconds)
[20:46:17] *** Quits: rsx (~dummy@ppp-188-174-132-120.dynamic.mnet-online.de) (Quit: rsx)
[20:47:19] *** Quits: Psybur (~Psybur@2600:1003:b138:112:20c5:efb4:887:de9a) (Read error: Connection reset by peer)
[20:47:38] *** Joins: Psybur (~Psybur@2600:1003:b138:112:20c5:efb4:887:de9a)
[20:48:09] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[20:48:48] *** Joins: bnchs (~bnchs@160.178.98.247)
[20:49:36] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[20:54:26] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[20:55:06] *** Joins: wakeup (~wakeup@user/wakeup)
[20:55:59] *** Joins: yewscion (~yewscion@72-21-196-67.amazon.com)
[20:56:34] *** Quits: user24037 (~user47239@user/user282069) (Ping timeout: 272 seconds)
[20:56:44] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[20:57:21] *** Joins: dvanloon3 (~dvanloon@user/dvanloon)
[20:58:24] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Ping timeout: 268 seconds)
[20:58:24] *** dvanloon3 is now known as dvanloon
[20:59:19] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[20:59:19] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[20:59:22] *** Joins: suss (~user@user/suss)
[21:00:22] *** Quits: Blackajack (~Blackajac@user/Blackajack) (Ping timeout: 272 seconds)
[21:01:19] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:5019:823:a50e:5ee6)
[21:02:20] *** Joins: Minvera (~Minvera@user/Minvera)
[21:04:58] *** Quits: wolfshappen (~waff@irc.furworks.de) (Read error: Connection reset by peer)
[21:07:26] *** Quits: jamea (~jamea@189.231.14.7) (Ping timeout: 245 seconds)
[21:09:34] *** Quits: joji (~jojo@86.4.72.180) (Quit: Leaving)
[21:12:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b1a6:339e:65ca:f206) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:12:33] *** Joins: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net)
[21:13:28] *** Joins: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de)
[21:13:28] *** Quits: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de) (Changing host)
[21:13:28] *** Joins: resamvi (~resamvi@user/resamvi)
[21:14:21] *** Joins: Blackajack (~Blackajac@user/Blackajack)
[21:17:06] *** Quits: Telvana2 (~capo@user/telvana) (Read error: Connection reset by peer)
[21:18:06] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 260 seconds)
[21:18:06] <perro> ugh musk fans
[21:18:35] <perro> way worse than rust fans, but it can be close :)
[21:19:06] <pyzozord> look at my nice and multisampled mandelbrot: https://i.imgur.com/KGgmNDH.png (here is normal one https://i.imgur.com/lwZsNUB.png)
[21:19:06] <bayaz> Type: image/png Size: 140.1 kB 
[21:19:06] <bayaz> Type: image/png Size: 90.0 kB 
[21:19:55] <pyzozord> I'll be multisampling everything now muahahah
[21:20:04] <ozzz> elon musk uses rust or the python at spacex?
[21:20:23] *** Joins: Telvana (~capo@user/telvana)
[21:20:50] <perro> wonder, prob c++ shop
[21:20:53] *** Quits: Telvana (~capo@user/telvana) (Remote host closed the connection)
[21:21:14] <perro> he really preferred windows in the 90s
[21:21:52] <pyzozord> 90s was a crazy time
[21:21:56] *** Joins: xkuru (~xkuru@user/xkuru)
[21:22:00] *** Joins: biberao (~m@user/biberao)
[21:22:00] <pyzozord> we all preferred windows back then
[21:22:01] <biberao> hi
[21:22:35] <ozzz> I don't had win...
[21:22:41] *** Joins: Telvana (~capo@user/telvana)
[21:22:44] <ozzz> I don't had os at all
[21:23:03] <pyzozord> is that because you wasn't even born yet
[21:23:22] *** Joins: exvicesindaco_ (~exvicio@37.163.45.145)
[21:23:22] <ozzz> no, because I was born before 90s
[21:23:38] <ozzz> I had computer without os
[21:23:39] *** Joins: duuude (~user@user/duuude)
[21:23:51] <ozzz> it called zx spectrum
[21:24:46] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:84f3:9cd1:2f26:201d) (Remote host closed the connection)
[21:24:59] <ozzz> but Amiga was great
[21:25:10] <ozzz> I had access to one...
[21:25:31] *** Joins: user24037 (~user47239@mail.ultronoarena.com)
[21:25:32] *** Quits: user24037 (~user47239@mail.ultronoarena.com) (Changing host)
[21:25:32] *** Joins: user24037 (~user47239@user/user282069)
[21:26:01] * edgar-rft preferred Amiga in the 1990s, too
[21:26:04] *** Joins: sonny (~sonny@bras-base-toroon0812w-grc-02-142-114-221-234.dsl.bell.ca)
[21:26:20] *** ozzz is now known as om3ga
[21:27:06] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:d157:eebd:f395:11a5)
[21:27:07] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:b44a:f768:9ead:27f)
[21:27:12] <bnchs> i like m68k
[21:27:19] <bnchs> do you like m68k?
[21:27:28] *** Joins: norayr (376bc34bfc@37.252.78.253)
[21:27:36] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 272 seconds)
[21:27:40] *** exvicesindaco_ is now known as exvicesindaco
[21:27:44] *** Quits: DnzAtWrk (~DnzAtWrk@1091.pc.puv.fi) (Read error: Connection reset by peer)
[21:28:01] <edgar-rft> I like smarties :-)
[21:31:03] <beaky> nice i like m68k too
[21:31:25] *** Joins: Auron (Auron956@user/auron)
[21:31:59] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:d157:eebd:f395:11a5) (Ping timeout: 260 seconds)
[21:32:02] *** Joins: jamea (~jamea@177.239.82.236)
[21:32:38] *** Joins: jnnnnnnnnn (~jnnnnnnnn@65.99.151.178)
[21:34:11] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[21:34:26] <bnchs> i wish i could have a powerful m68k computer to be my desktop
[21:35:18] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[21:35:24] <sonny> rip multimedia
[21:36:55] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[21:37:18] <InPhase> I used to have a TI-92 in that architecture.
[21:37:21] *** Joins: Akuli (~Akuli@82-203-164-177.bb.dnainternet.fi)
[21:37:45] <InPhase> But alas, my cell phones run so many circles around the TI-92 now.
[21:38:45] *** Joins: exvicesindaco_ (~exvicio@host-82-54-188-22.retail.telecomitalia.it)
[21:39:18] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-6885-e190-1d80-eba5.inf6.spectrum.com)
[21:39:20] <bnchs> well
[21:39:35] <bnchs> i wish i could have a m68k computer thats as powerful as my laptop
[21:39:47] <oldlaptop> bnchs: Powerful is a relative term. Some 68040 mac/amiga isn't bad in an absolute sense, I don't think.
[21:39:53] *** Quits: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 260 seconds)
[21:40:08] *** Joins: urnebes (~urnebes@2605:8d80:664:a025:cd2e:a33d:1965:3a08)
[21:40:12] <oldlaptop> IIRC it's still feasible to keep debian sid building/running on m68k
[21:40:18] <bnchs> yeah
[21:40:32] <bnchs> but do you rely on software rendering?
[21:40:40] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[21:40:51] <bnchs> or what GPUs exist that can work with m68k
[21:41:09] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[21:41:20] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-6885-e190-1d80-eba5.inf6.spectrum.com) (Ping timeout: 252 seconds)
[21:41:22] <oldlaptop> I guess if you need 3D graphics hardware, you probably need not-m68k.
[21:41:35] <oldlaptop> The serious 3D hardware was all MIPS back then. :P
[21:41:38] *** Quits: exvicesindaco (~exvicio@37.163.45.145) (Ping timeout: 246 seconds)
[21:41:42] *** exvicesindaco_ is now known as exvicesindaco
[21:41:48] <oldlaptop> (or was for MIPS machines, rather)
[21:41:48] <bnchs> well i hate x86 and arm
[21:42:44] *** Joins: flaqoniun (~F@32.211.211.39)
[21:43:38] <edgar-rft> the Amiga had several custom-made GPUs for the m68k
[21:43:47] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[21:43:57] <bnchs> i'm pretty sure there's some accelerator boards for m68k
[21:43:58] *** Joins: zaher (~zaher@37.48.157.33)
[21:44:04] <bnchs> that have Linux modules
[21:44:21] <GeDaMo> You could probably write a 68K emulator and run it on an ARM :P
[21:44:33] <bnchs> GeDaMo, then i would hate you
[21:44:52] <GeDaMo> It's likely to be faster than any actual 68K available right now
[21:45:17] <bnchs> ARM is only used by locked-down computers
[21:45:21] <bnchs> and x86 is following along
[21:46:06] <om3ga> https://www.youtube.com/watch?v=FACRFrl_9zE
[21:46:07] <bayaz> Title: Zilog - The Next Frontier - Z800 and Z80000, 1985 
[21:46:27] <om3ga> bnchs, here is cpu for you :)
[21:46:44] <GeDaMo> Are there any 64-bit 68K deisgns?
[21:47:19] <user51> is there a name for a data structure which handles insertion like a hash table, but traversing it is like a list?
[21:47:40] <bnchs> user51: yeah, it's write your own
[21:47:45] <GeDaMo> B-Tree?
[21:47:53] <bnchs> oops
[21:49:25] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::7377) (Ping timeout: 240 seconds)
[21:49:28] <GeDaMo> I suppose it depends what you mean by 'like a hash table' and 'like a list'
[21:49:40] <user51> https://docs.python.org/3/library/collections.html#ordereddict-objects
[21:50:25] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[21:50:30] <user51> something like this.
[21:51:07] <perro> si
[21:51:14] <perro> it's called an ordered dict
[21:51:35] *** Joins: en7ropy (~en7ropy@37.120.130.4)
[21:51:53] <perro> ...it really is just hash table  + ordering
[21:52:18] <GeDaMo> Check what Python uses for that
[21:52:28] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[21:53:48] *** Quits: jnnnnnnnnn (~jnnnnnnnn@65.99.151.178) (Quit: Textual IRC Client: www.textualapp.com)
[21:56:20] *** Quits: cation (cation@user/cation) (Quit: Leaving)
[21:56:40] *** Joins: cation (cation@user/cation)
[21:58:44] *** Joins: allegorical_- (~guest@2607:fea8:33e0:65c:7811:19da:13cd:4640)
[21:58:47] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[21:58:53] <pyzozord> user51: so O(1) insertion and O(n) traversal?
[21:59:08] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[21:59:13] <pyzozord> user51: it's called linked list
[21:59:43] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[21:59:55] *** Quits: hololeap_ (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[22:00:04] <perro> depends on if youw ant a list or a "list"
[22:00:17] *** Quits: jamea (~jamea@177.239.82.236) (Ping timeout: 260 seconds)
[22:00:24] *** Joins: hololeap_ (~hololeap@user/hololeap)
[22:00:32] *** Quits: Blackajack (~Blackajac@user/Blackajack) (Ping timeout: 272 seconds)
[22:01:18] *** Quits: LuKaRo (~LuKaRo@p200300dfa72b1d372a0e3d5e954163f2.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[22:01:24] <pyzozord> also stack or queue fit the bill, since we didn't talk about where the insertion happens and what's the complexity of removal
[22:01:27] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[22:01:44] *** Joins: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de)
[22:01:44] *** Quits: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de) (Changing host)
[22:01:44] *** Joins: resamvi (~resamvi@user/resamvi)
[22:02:32] *** Quits: allegorical_ (~guest@2607:fea8:33e0:65c:90b0:db47:57a2:578d) (Ping timeout: 268 seconds)
[22:02:40] *** Joins: momomo (~momomo@user/momomo)
[22:03:12] <flaqoniun> https://techxplore.com/news/2022-04-honey-potential-brain-like-chips.html  memristors from bee puke!
[22:04:50] *** Joins: LuKaRo_ (~LuKaRo@p4fc32565.dip0.t-ipconnect.de)
[22:05:03] <sonny> I like arm
[22:05:07] <user51> pyzozord: i could just call it a linked list and call it a day :)
[22:06:14] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 268 seconds)
[22:07:48] <GeDaMo> Inserting into a linked list is not O(1)
[22:08:21] *** Joins: XV8 (~XV8@2601:5cb:c001:50::13f0)
[22:09:11] <pyzozord> well at the head and tail it is
[22:09:25] <pyzozord> also if you have a pointer to the element you want to insert after
[22:09:43] <pyzozord> if you don't it's going to be O(n)
[22:10:36] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:f438:106:9b95:3ff8)
[22:10:51] <GeDaMo> Maybe O(log N)
[22:11:35] <GeDaMo> On average you only have to search half way through
[22:11:51] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[22:12:04] <GeDaMo> Or maybe I'm thinking of trees :|
[22:12:08] <user51> GeDaMo: i meant that pyzozord is correct from a pragmatic angle: better to start with the linked list and see how well it performs
[22:12:18] <pyzozord> GeDaMo: I think you are thinking of trees
[22:15:05] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:d157:eebd:f395:11a5)
[22:15:33] <pyzozord> most people mean by big Oh actually big theta, so the tight bound
[22:15:46] <pyzozord> I don't really remember these
[22:16:05] <pyzozord> the scientific ones, what are the upper and lower bounds and best, average and worst case
[22:16:07] <beaky> user51: yes there are tries it is O(length of longest key) to insert just like hash tables but unlike hash tables you can traverse it like a tree
[22:16:36] <pyzozord> but I think even when you say "well on average it will not travel the full n elements" that's still O(n)
[22:17:14] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[22:17:15] <pyzozord> because people usaully mean average or worst case when talking about asymptotic complexity
[22:18:39] <pyzozord> if someone can explain how the bounds work please do I don't remember at all
[22:18:47] <beaky> yes hash tables are an example where they are always presented as O(1) insertion but you can have really long keys and it's not O(1) when you have collisions 
[22:19:00] <beaky> the lie of hash tables debunked with facts and logic
[22:19:19] <beaky> which is why they say 'amorized O(1)' instead 
[22:19:23] <beaky> amortized*
[22:19:45] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:d157:eebd:f395:11a5) (Ping timeout: 248 seconds)
[22:20:37] <GeDaMo> I only vaguely understand O(1), O(n), O(log N) :P
[22:21:39] <beaky> yes the word amortized is doing the heavy lifting https://en.wikipedia.org/wiki/Amortized_analysis
[22:21:39] <bayaz> Title: Amortized analysis - Wikipedia 
[22:22:03] <oldlaptop> It is, or can be, really, truly, genuinely O(1) for a limited key space.
[22:22:08] <pyzozord> also O(n log n) and O(n²) and O(2ⁿ) and that's pretty much all of it. Doing complex symbol manipulation to find complex complexities is too complex for me :P
[22:22:53] *** Quits: chomwitt (~chomwitt@athedsl-31881.home.otenet.gr) (Ping timeout: 268 seconds)
[22:24:03] <pyzozord> ah I think "upper bound" just means "no less than" and "lower bound" means "more than"
[22:24:21] <pyzozord> so the "tight bound" means "exactly this much"
[22:25:29] <pyzozord> in the industry, or in informal setting people say O(n) they actually mean either ϴ(n) the thight bound or O(n) the upper bound and usually average or worst case
[22:25:54] <pyzozord> in the formal scientific setting they get all annoying and pedantic about it
[22:26:23] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[22:26:27] <user51> https://www.gwern.net/docs/math/1973-knuth.pdf
[22:26:30] <user51> reminds me of :D
[22:27:51] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[22:27:57] <pyzozord> at least that's what I read in Cracking the Coding Interview
[22:28:15] *** Joins: chomwitt (~chomwitt@athedsl-20549.home.otenet.gr)
[22:29:51] <pyzozord> so in practice when people say big-oh they mean "this is the best it can do for average or worst case of input"
[22:30:23] <pyzozord> s/best/lowest/
[22:30:30] *** Quits: bwieder53 (~bwieder@216.106.142.65) (Read error: Connection reset by peer)
[22:31:44] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-e4f8-bd3f-9136-d580.res6.spectrum.com) (Ping timeout: 260 seconds)
[22:31:50] <pyzozord> someone correct me if im wrong
[22:32:25] <flaqoniun> i have not once ever needed to apply "big O" to anything
[22:32:47] *** Joins: bwieder53 (~bwieder@216.106.142.65)
[22:32:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b1a6:339e:65ca:f206)
[22:32:59] <pyzozord> oh no I confused it
[22:33:18] *** Joins: jianwu (~jianwu@softbank126088036030.bbtec.net)
[22:34:35] <beaky> yes there is also little o notation for when you prove that your data structure is the ultimate tightest data structure since little o is in big o but big o is not in little o 
[22:34:44] <pyzozord> upper bound is like "less then or equal to", "lower bound" is "greater than or equal to"
[22:34:55] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 240 seconds)
[22:35:50] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[22:36:09] <flaqoniun> usually i'm all like "damn thats a lot of iterations, there must be a better way"
[22:36:23] *** gitesh is now known as gitesh12
[22:36:49] *** Quits: urnebes (~urnebes@2605:8d80:664:a025:cd2e:a33d:1965:3a08) (Read error: Connection reset by peer)
[22:36:56] *** Joins: Macbethwin (~chargen@8.31.163.87)
[22:37:15] <edgar-rft> I'm less than everything else
[22:37:16] *** Joins: wauterboi (~wauterboi@185.65.135.160)
[22:37:38] *** Quits: dan01 (~dan01@2a02:2f09:360d:2e00:b44a:f768:9ead:27f) (Ping timeout: 260 seconds)
[22:37:49] *** Joins: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[22:37:50] *** Macbethwin is now known as Chargen
[22:38:00] <Chargen> lo
[22:38:02] *** gitesh12 is now known as gitesh
[22:38:08] *** Joins: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de)
[22:38:09] *** Quits: tane (~tane@dslb-002-201-234-231.002.201.pools.vodafone-ip.de) (Changing host)
[22:38:09] *** Joins: tane (~tane@user/tane)
[22:38:11] *** Joins: TerminalTapper (~TerminalT@75.165.57.243)
[22:38:25] <GeDaMo> Hi Chargen :)
[22:38:29] <Chargen> can I have separate IO per core/thread (cout) as in <cin
[22:38:37] <Chargen> hello GeDaMo 
[22:38:56] <GeDaMo> You want to write to separate files?
[22:39:11] *** Quits: newwebdev13 (~newwebdev@78.135.91.54) (Quit: Leaving)
[22:39:24] <Chargen> cross core processes 
[22:39:47] *** Joins: austincheney_ (~austinche@2600:1700:70e1:14b8:f982:507a:283b:3df9)
[22:39:54] <GeDaMo> I don't know what that emans
[22:40:04] <GeDaMo> ^means
[22:40:20] <Chargen> is there any efficient message passing library multicore
[22:40:44] *** Quits: Psybur (~Psybur@2600:1003:b138:112:20c5:efb4:887:de9a) (Ping timeout: 252 seconds)
[22:40:59] *** Joins: Psybur (~Psybur@75.145.205.201)
[22:41:18] <Chargen> thanks GeDaMo 
[22:41:30] <Chargen> what did I do oops
[22:41:49] <flaqoniun> depends if you need messages in order or not
[22:42:02] <pyzozord> so Ω() <= actual algorithm <= O() and actual algorithm == ϴ() that's in computer science, in industry we use O() aas "O() or ϴ() you guess"
[22:42:13] <Chargen> messages as unordered events
[22:42:30] <flaqoniun> UDP socket
[22:42:38] <flaqoniun> AF_UNIX datagrams
[22:42:51] *** Quits: austincheney (~austinche@2600:1700:70e1:14b8:f982:507a:283b:3df9) (Ping timeout: 245 seconds)
[22:43:02] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:43:04] *** Joins: dgg (~dgg@34.red-88-1-111.dynamicip.rima-tde.net)
[22:43:11] <dgg> Hi all
[22:43:13] <vdamewood> Hi, people etc.
[22:43:20] <flaqoniun> (is what syslog does before systemd murdered it)
[22:43:45] <Chargen> interprocess communication may be UNIX sockets but I want to build something 'new'   I'm reading up what Andy Tannerbaum made in the 80's    not a 'kernel' but uses another lingo
[22:43:47] <Chargen> amoeba
[22:43:54] <flaqoniun> there is nothing new
[22:44:03] <dgg> is there anyone here who has developed using OOP and that had to face R and had the need to use OOP in R?
[22:44:11] <flaqoniun> its all the old stuff with a different name and a bit more confusing
[22:44:20] <dgg> I am frightened by the prospects of having to use nested lists
[22:44:21] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-f1ec-d7f3-37e1-032c.res6.spectrum.com)
[22:44:33] *** Quits: Likorn (~Likorn@c114-150.icpnet.pl) (Quit: WeeChat 3.4.1)
[22:44:37] <dgg> really frightening indeed
[22:44:48] <vdamewood> dgg: Not me. I've never touched R.
[22:44:59] *** Joins: Likorn (~Likorn@c114-150.icpnet.pl)
[22:45:13] *** Joins: vicfred (~vicfred@user/vicfred)
[22:45:26] <Chargen> what would be new then, I want bound and isolated processes 'systems' that MAY export some functionality  in order to have multicore lzma deflate for instance
[22:45:36] <dgg> ok
[22:46:03] <flaqoniun> you want to reinvent the buffer?
[22:46:24] <flaqoniun> they tried that with io_uring  turned out to be a huge mess
[22:47:55] *** Quits: kmh (~kmh@2a00:6020:5004:6800:7cc4:ef37:712f:623d) (Quit: Leaving)
[22:48:26] <vdamewood> dgg: And we don't get many people talking about R in here.
[22:49:02] <dgg> no wonder why :) People in R channel don't usually use OOP as they are mostly statisticians 
[22:50:02] <wovixo> dgg: OOP in R is weird. Everything in R is an object which in turn is a vector, and all calls are done with generic methods. And you define the class after you instantiate the object.
[22:50:26] *** Joins: pulse (~pulse@user/pulse)
[22:50:34] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[22:50:59] <dgg> wovixo "And you define the class after you instantiate the object..." sure, this is weird
[22:52:07] *** Joins: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de)
[22:52:07] *** Quits: resamvi (~resamvi@p200300f617179a003c219d8a42372b7d.dip0.t-ipconnect.de) (Changing host)
[22:52:07] *** Joins: resamvi (~resamvi@user/resamvi)
[22:52:10] <dgg> wovixo, Have you ever had to use OOP with R? and if you had did to carry on with it or did you use more R-based paradigms instead? That is my main problem, I am not sure where I am and whether I am opening a can of warms
[22:52:25] <dgg> can you help please with any advise please?
[22:53:44] <dgg> I find myself in a dilemma. I am not sure what would be more costly whether opening the can of worms 1 or 2, 1 being stepping back and use native R, lists, functions, etc... and 2 going down the route of OOP
[22:53:52] <wovixo> Well, since everything in R is an object, you're always using OOP, but not in the way you're probably used to. I'd worry less about trying to shoehorn R into an OOP box, and just embrace the R way of doing things, as odd as it may be. Take comfort in the fact that at least you're not building MatLab apps. *shudder*.
[22:54:19] *** Joins: anomal (~anomal@87.227.196.109)
[22:55:57] *** Joins: kmh (~kmh@2a00:6020:5004:6800:dd4e:26b5:f94a:847a)
[22:56:18] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 260 seconds)
[22:56:33] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 248 seconds)
[22:57:35] <Chargen> if I want concurrency over n cpu nodes/cores what would be the best way to begin coding in .... (c++ ?)  nm the loader
[22:57:35] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[22:57:41] <dgg> well not sure if the fact that everything is an object relates to OOP, a pretty good proof of it is actually R or Javascrit in its early days
[22:58:26] *** Quits: kmh (~kmh@2a00:6020:5004:6800:dd4e:26b5:f94a:847a) (Remote host closed the connection)
[22:58:37] *** Joins: kmh (~kmh@2a00:6020:5004:6800:dd4e:26b5:f94a:847a)
[22:58:42] *** Joins: wolfshappen (~waff@irc.furworks.de)
[22:58:47] *** Quits: jsmooth (~quassel@user/jsmooth) (Quit: jsmooth)
[22:59:00] <dgg> wovixo, yeah my problem is that I then need to deconstruct my approaches to software engineering. But I guess I have no alternativce
[22:59:34] * oldlaptop recommends redefining this exercise as "fun"
[22:59:45] *** Quits: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 248 seconds)
[23:00:01] *** Joins: urnebes (~urnebes@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[23:00:16] <dgg> R6 though doesn't look that bad
[23:02:31] *** Quits: TerminalTapper (~TerminalT@75.165.57.243) (Ping timeout: 260 seconds)
[23:04:28] *** Quits: kakysha_ (~kakysha@user/kakysha) (Ping timeout: 260 seconds)
[23:04:32] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:07:40] *** Quits: fe23 (~fe23@2409:8a34:465:ec80:ac4c:ea47:9bda:9c5e) (Quit: fe23)
[23:07:57] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:08:51] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[23:09:00] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[23:11:44] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[23:12:46] *** Quits: exvicesindaco (~exvicio@host-82-54-188-22.retail.telecomitalia.it) (Quit: Going offline, see ya! (www.adiirc.com))
[23:13:48] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[23:13:56] <pulse> what is some atypical use for git branches
[23:14:06] *** Joins: morte_ (~user@181.114.17.106)
[23:15:07] *** Quits: Chargen (~chargen@8.31.163.87) (Remote host closed the connection)
[23:15:13] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:15:38] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[23:15:51] *** Joins: Chargen (~chargen@8.31.163.87)
[23:16:04] *** Quits: chomwitt (~chomwitt@athedsl-20549.home.otenet.gr) (Ping timeout: 260 seconds)
[23:16:53] *** Quits: Chargen (~chargen@8.31.163.87) (Remote host closed the connection)
[23:17:13] *** Joins: ThePhilgrim (~ThePhilgr@151.41.9.171)
[23:17:18] *** Joins: Chargen (~chargen@8.31.163.87)
[23:17:22] *** Joins: chomwitt (~chomwitt@athedsl-369869.home.otenet.gr)
[23:17:43] *** Joins: austincheney__ (~austinche@2600:1700:70e1:14b8:f982:507a:283b:3df9)
[23:17:50] <oldlaptop> you@desktop$ git checkout -b wipstuff; git add blablabla; git commit -m 'stuff'
[23:17:50] <oldlaptop> you@laptop$ git fetch desktop; git checkout wipstuff; ed blablabla; git add blablabla; git commit --amend -m 'Finish work with a cool commit message and everything'; git checkout master; git merge --ff wipstuff master
[23:18:00] *** Joins: NeoFAT32 (~UserNick@user/NeoFAT32)
[23:18:26] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[23:18:28] <oldlaptop> Or thereabouts. Possible 'git push desktop wipstuff' in there, but it's getting too long.
[23:18:30] *** Quits: Chargen (~chargen@8.31.163.87) (Remote host closed the connection)
[23:18:57] <oldlaptop> (you need to frob some setting, or checkout a different branch, to push to a non-bare repo like that)
[23:19:05] *** Joins: Chargen (~chargen@8.31.163.87)
