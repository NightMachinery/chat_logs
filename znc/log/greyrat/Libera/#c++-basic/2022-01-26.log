[00:06:46] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[00:12:08] *** Quits: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[00:20:48] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:23:22] *** Quits: magla (~gelignite@55d4ee32.access.ecotel.net) (Quit: Stay safe!)
[00:29:57] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[00:35:00] *** Joins: Uswald (~leandre@2a01cb040075f900e51405e9050a3e5b.ipv6.abo.wanadoo.fr)
[00:36:34] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[00:41:43] *** Joins: calamity_jane (~calamity_@2a01cb040075f9002975a89ee613e667.ipv6.abo.wanadoo.fr)
[00:45:16] *** Quits: calamity_jane (~calamity_@2a01cb040075f9002975a89ee613e667.ipv6.abo.wanadoo.fr) (Client Quit)
[00:45:31] *** Joins: calamity_jane (~calamity_@2a01cb040075f9002975a89ee613e667.ipv6.abo.wanadoo.fr)
[00:45:33] *** Quits: calamity_jane (~calamity_@2a01cb040075f9002975a89ee613e667.ipv6.abo.wanadoo.fr) (Client Quit)
[00:49:24] *** Quits: Uswald (~leandre@2a01cb040075f900e51405e9050a3e5b.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[00:56:59] *** Joins: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de)
[01:19:13] *** Joins: markong (~kvirc@213.146.188.203)
[01:21:43] *** Joins: Uswald (~leandre@2a01cb040075f900e51405e9050a3e5b.ipv6.abo.wanadoo.fr)
[01:29:28] *** Quits: Uswald (~leandre@2a01cb040075f900e51405e9050a3e5b.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[01:36:06] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[01:51:45] *** Quits: artok (~azo@mobile-access-bcee35-8.dhcp.inet.fi) (Quit: reboot for UAD-2 update)
[01:57:52] *** Quits: Tazy (~Tazmainia@192-143-38-94.ip.airmobile.co.za) (Quit: Leaving)
[02:08:18] *** Joins: artok (~azo@mobile-access-bcee35-8.dhcp.inet.fi)
[02:20:21] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[02:25:54] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[02:28:11] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[02:28:11] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Client Quit)
[02:53:30] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[03:17:32] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 240 seconds)
[03:17:37] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Ping timeout: 240 seconds)
[03:19:57] *** Quits: artok (~azo@mobile-access-bcee35-8.dhcp.inet.fi) (Quit: Lost terminal)
[03:20:07] *** Joins: artok (~azo@mobile-access-bcee35-8.dhcp.inet.fi)
[03:35:05] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:37:48] *** Quits: DSpider (~DSpider@82.79.237.97) (Quit: Leaving)
[03:55:05] *** Joins: gehn (~gehn@user/gehn)
[04:01:17] *** Quits: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:08:44] *** Quits: AmR (~AmREiSa@156.199.9.4) (Quit: Konversation terminated!)
[04:18:00] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[04:23:50] *** Joins: noarb (~noarb@user/noarb)
[05:24:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[05:29:32] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[05:57:49] *** Quits: therufuser (~therufuse@p5b02e182.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:59:20] *** Joins: therufuser (~therufuse@p5b02e544.dip0.t-ipconnect.de)
[06:01:17] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 240 seconds)
[06:23:27] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[06:28:28] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[06:28:58] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:32:16] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[06:34:20] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 250 seconds)
[06:38:57] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 240 seconds)
[06:51:29] *** Quits: vinleod (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[06:55:43] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:30:15] *** Joins: jbis (~jbis@pool-108-6-219-196.nycmny.fios.verizon.net)
[07:30:32] <jbis> Hello
[07:31:13] <jbis> I have an abstract class A. I have class B that accepts a template. I'd like to restrict the template to types of A and then call A's method in B.
[07:31:19] <jbis> Is that possible>
[07:31:23] <jbis> possible?
[07:32:06] <Alipha> jbis: why a template and not just accept A&
[07:32:34] <jbis> because i need to create instances of A 
[07:33:37] <jbis> I'd like to call methods on a template, but i understand cpp doesn't know what methods are on the template because it can be any type. Hence for A's existence.
[07:33:49] <jbis> I'm basically treating A as a interface, or trait.
[07:34:05] <Alipha> You can static_assert(std::is_base_of_v<A, T>
[07:34:08] *** Joins: geranim0 (~geranim0@d-132-204-221-88.res.umontreal.ca)
[07:34:14] <Alipha> Or sfinae
[07:34:23] <jbis> there's no way to do this?
[07:34:58] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[07:35:23] <Alipha> jbis: what's wrong with a static_assert? C++20 also has concepts, so you could use `requires`
[07:35:46] <Alipha> But concepts is mostly just a prettier static_assert
[07:36:23] *** Quits: jsbach (~jsbach@2a01:c22:3536:1400:650b:7ba5:f922:811c) (Ping timeout: 268 seconds)
[07:36:51] <jbis> static_assert just assets it, will it allow me to call methods?
[07:37:05] <jbis> asserts*
[07:38:14] <Alipha> jbis: static_assert produces a compile error
[07:38:44] <Alipha> Perhaps you're thinking of assert, which is a runtime check
[07:41:25] <jbis> my bad
[07:41:34] <jbis> i didn't realize this worked
[07:44:26] <Alipha> !sfinae
[07:44:27] <nolyc> Substitution Failure Is Not An Error. See http://en.wikipedia.org/wiki/SFINAE
[07:47:41] <Alipha> You would use sfinae instead if you wanted to, say, call one function if T is derived from A and call a different function if not. But static_assert is appropriate if you just want a compile error if T is not derived from A
[07:47:52] <jbis> apparently A is not needed
[07:48:25] *** Joins: jsbach (~jsbach@2a01:c22:acbf:8b00:bd89:3761:c5c8:c5c)
[07:48:27] <jbis> https://paste.ofcode.org/9Cz6q7Z6x2DcN4MsB2qgVz
[07:48:39] <jbis> I'm shocked that works
[07:51:29] <Alipha> jbis: yeah, templates are for duck typing, and generally you use templates OR inheritance.
[08:04:40] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:06:01] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[08:07:27] *** vdamewood is now known as Guest2444
[08:07:27] *** Quits: Guest2444 (~vdamewood@fedora/vdamewood) (Killed (lithium.libera.chat (Nickname regained by services)))
[08:07:27] *** vinleod is now known as vdamewood
[08:22:07] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Ping timeout: 256 seconds)
[08:28:02] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[08:29:10] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[08:29:25] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Remote host closed the connection)
[08:32:38] *** Quits: jsbach (~jsbach@2a01:c22:acbf:8b00:bd89:3761:c5c8:c5c) (Ping timeout: 250 seconds)
[08:41:37] *** Quits: geranim0 (~geranim0@d-132-204-221-88.res.umontreal.ca) (Ping timeout: 240 seconds)
[08:46:19] *** Joins: jsbach (~jsbach@2a01:c22:b1a3:2100:9ba5:17b3:15df:46fa)
[09:10:46] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 250 seconds)
[09:14:06] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[09:21:49] *** Quits: artok (~azo@mobile-access-bcee35-8.dhcp.inet.fi) (Ping timeout: 256 seconds)
[09:30:17] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[09:40:25] *** Joins: RazielZ (~Raziel@user/raziel)
[09:43:55] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 256 seconds)
[09:50:38] *** Joins: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de)
[09:58:48] *** Joins: artok (~azo@mobile-access-bcee35-8.dhcp.inet.fi)
[10:24:24] *** Quits: jbis (~jbis@pool-108-6-219-196.nycmny.fios.verizon.net) (Remote host closed the connection)
[10:59:32] *** Quits: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[11:39:09] *** Joins: bobb_ (~bobb_@dslb-092-074-237-154.092.074.pools.vodafone-ip.de)
[11:40:41] *** Quits: Cienisty (Cienisty@user/cienisty) (Ping timeout: 250 seconds)
[11:52:06] <cbreak> or CRTP :)
[11:56:25] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[11:56:35] *** Joins: Uswald (~leandre@2a01cb040075f900413f47ed6861a667.ipv6.abo.wanadoo.fr)
[11:56:50] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[11:58:30] *** Quits: Uswald (~leandre@2a01cb040075f900413f47ed6861a667.ipv6.abo.wanadoo.fr) (Client Quit)
[12:02:02] *** Joins: Uswald (~user@2a01cb040075f900413f47ed6861a667.ipv6.abo.wanadoo.fr)
[12:09:50] *** Joins: Cienisty (Cienisty@user/cienisty)
[12:13:11] *** Quits: Uswald (~user@2a01cb040075f900413f47ed6861a667.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[12:30:51] *** Joins: Uswald (~user@2a01cb040075f900413f47ed6861a667.ipv6.abo.wanadoo.fr)
[12:43:02] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) ()
[12:46:57] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[13:00:57] *** Joins: RazielXYZ (~Raziel@user/raziel)
[13:04:27] *** Quits: RazielZ (~Raziel@user/raziel) (Ping timeout: 268 seconds)
[13:04:29] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[13:04:49] <Deneb> while looking at some code I encountered the line:  char mystring[9] = {0x40,0x0};
[13:05:03] <Deneb> how does this initialise mystring ? 
[13:06:31] <Deneb> normally a single value {0x40} would initialise the array with 0x40 characters. Would this initialise it with a space + null, or since the number of characters is more than 1 and less then 9 would it have some other effect?
[13:07:57] <Deneb> * meant @ + null
[13:11:48] <osse> Deneb: it will have one 0x40 and eight nulls
[13:12:35] <Deneb> osse: ah, ok, so it pads the remainder with nulls?
[13:12:53] <osse> yes
[13:13:03] <osse> I think {0x40} will have the same effect
[13:13:34] <Deneb> thanks, this is what I was trying to determine, i.e whether the remaining contect would be random or actually pre-filled with something
[13:15:10] <Deneb> I tend to initialise character arrays with {'\0'} to make sure that are not in some undefined state but filled with nulls. I wasn't sure what the above would do.
[13:19:11] <osse> from cppreference: "If the number of initializer clauses is less than the number of members or initializer list is completely empty, the remaining members are value-initialized."
[13:19:44] <osse> and in this case "value-initialized" means "zero-initialized" 
[13:22:35] *** Joins: seninha (~seninha@user/seninha)
[13:25:05] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:29:28] <Deneb> thanks.
[13:34:10] *** Quits: Uswald (~user@2a01cb040075f900413f47ed6861a667.ipv6.abo.wanadoo.fr) (Changing host)
[13:34:10] *** Joins: Uswald (~user@user/Uswald)
[13:36:39] *** Quits: Uswald (~user@user/Uswald) (Quit: restart)
[13:38:08] *** Joins: Uswald (~user@user/Uswald)
[13:38:50] *** Quits: Deneb (~johnch@23.143.9.51.dyn.plus.net) (Quit: Leaving)
[14:04:08] *** Quits: jsbach (~jsbach@2a01:c22:b1a3:2100:9ba5:17b3:15df:46fa) (Ping timeout: 250 seconds)
[14:09:03] *** Joins: Tazy (~Tazmainia@192-143-38-94.ip.airmobile.co.za)
[14:19:29] *** Joins: DSpider (~DSpider@82.79.237.91)
[14:36:19] *** Joins: bebyx (~Thunderbi@user/bebyx)
[15:01:00] *** Quits: Uswald (~user@user/Uswald) (Ping timeout: 268 seconds)
[15:14:24] *** Joins: markong (~kvirc@213.146.188.203)
[15:30:20] *** Joins: Uswald (~user@user/Uswald)
[15:35:40] *** Joins: stanrifkin_ (~stanrifki@p508d4eab.dip0.t-ipconnect.de)
[15:36:27] <stanrifkin_>  what's the advantage again with calling by reference with references instead of pointers? Is the only advantage to not have to dereference the pointer? With pointers you introduce some pointer variable. so it takes memory. is that the same with references?
[15:37:34] *** Quits: Tazy (~Tazmainia@192-143-38-94.ip.airmobile.co.za) (Quit: Leaving)
[15:40:05] <osse> stanrifkin_: the advantage is that you don't have to check if the reference is valid, because it always is
[15:40:16] <osse> whereas with pointers you have to check that it's not null
[15:49:20] *** Joins: geranim0 (~geranim0@d-132-204-221-88.res.umontreal.ca)
[15:51:31] <stanrifkin_> osse: thank you, good point
[15:57:32] *** Joins: argonautx (~argonautx@i5E867371.versanet.de)
[16:16:02] *** Joins: jsbach (~jsbach@2a01:c22:b1a3:2100:1231:a644:6bb9:9dd9)
[16:21:27] *** Joins: sigma_ (~sigma@164.215.210.250)
[16:31:41] *** Quits: Uswald (~user@user/Uswald) (Remote host closed the connection)
[16:43:55] *** Joins: Uswald (~user@user/Uswald)
[16:50:23] *** Joins: Xardas (~Xardas@149.233.51.127)
[16:55:59] *** Joins: calamity_jane (~calamity_@2a01cb040075f90068bf86cb6e2cbefb.ipv6.abo.wanadoo.fr)
[17:03:36] *** Quits: calamity_jane (~calamity_@2a01cb040075f90068bf86cb6e2cbefb.ipv6.abo.wanadoo.fr) (Quit: Ping timeout (120 seconds))
[17:09:03] *** Joins: Tazy (~Tazmainia@192-143-4-44.ip.airmobile.co.za)
[17:17:09] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[17:17:59] *** Quits: markong (~kvirc@213.146.188.203) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[17:21:05] *** Joins: calamity_jane (~calamity_@2a01cb040075f90068bf86cb6e2cbefb.ipv6.abo.wanadoo.fr)
[17:21:24] *** Quits: calamity_jane (~calamity_@2a01cb040075f90068bf86cb6e2cbefb.ipv6.abo.wanadoo.fr) (Client Quit)
[17:26:46] *** Joins: calamity-jane (~calamity-@2a01cb040075f900a9da20aa912401ed.ipv6.abo.wanadoo.fr)
[17:35:14] *** Quits: calamity-jane (~calamity-@2a01cb040075f900a9da20aa912401ed.ipv6.abo.wanadoo.fr) (Quit: Client closed)
[17:35:23] *** Joins: calamity-jane (~calamity-@2a01cb040075f900a9da20aa912401ed.ipv6.abo.wanadoo.fr)
[17:35:46] <cbreak> stanrifkin_: pointers have no clear semantic
[17:36:09] <cbreak> I recommend avoiding raw pointers if possible, unless you clearly document what it means
[17:36:42] <cbreak> for example, what do you have to pass to a function: void XXX::reset(int * pointer); ?
[17:37:00] <cbreak> do you have to delete the int afterwards? Or is it owned by the XXX object?
[17:37:21] <cbreak> does the function expect a pointer to an int? or maybe a pointer to the first int in an int array? And if so, how long is the array?
[17:38:40] *** Quits: calamity-jane (~calamity-@2a01cb040075f900a9da20aa912401ed.ipv6.abo.wanadoo.fr) (Changing host)
[17:38:40] *** Joins: calamity-jane (~calamity-@user/calamity-jane)
[17:48:48] *** Quits: calamity-jane (~calamity-@user/calamity-jane) (Quit: Client closed)
[17:49:32] *** Joins: calamity-jane (~calamity-@2a01cb040075f900a9da20aa912401ed.ipv6.abo.wanadoo.fr)
[17:50:20] *** Quits: calamity-jane (~calamity-@2a01cb040075f900a9da20aa912401ed.ipv6.abo.wanadoo.fr) (Changing host)
[17:50:20] *** Joins: calamity-jane (~calamity-@user/calamity-jane)
[18:05:11] *** Joins: meator (~meator@user/meator)
[18:11:47] *** Quits: calamity-jane (~calamity-@user/calamity-jane) (Quit: Client closed)
[18:12:03] *** Quits: Uswald (~user@user/Uswald) (Read error: Connection reset by peer)
[18:12:32] *** Joins: Uswald (~user@user/Uswald)
[18:14:22] *** Parts: meator (~meator@user/meator) (Leaving)
[18:16:39] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) ()
[18:18:19] *** Joins: calamity-jane (~calamity-@45.149.155.220)
[18:20:46] *** Quits: Uswald (~user@user/Uswald) (Remote host closed the connection)
[18:21:54] *** Joins: Uswald (~user@user/Uswald)
[18:22:28] *** Quits: calamity-jane (~calamity-@45.149.155.220) (Client Quit)
[18:26:43] *** Joins: calamity-jane (~calamity-@2a01cb040075f900a9da20aa912401ed.ipv6.abo.wanadoo.fr)
[18:28:33] *** Quits: calamity-jane (~calamity-@2a01cb040075f900a9da20aa912401ed.ipv6.abo.wanadoo.fr) (Changing host)
[18:28:33] *** Joins: calamity-jane (~calamity-@user/calamity-jane)
[18:33:20] *** Parts: therufuser (~therufuse@p5b02e544.dip0.t-ipconnect.de) ()
[18:40:16] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[18:47:28] *** Joins: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de)
[19:04:07] *** Joins: Uswa1d (~leandre@2a01cb040075f900413f47ed6861a667.ipv6.abo.wanadoo.fr)
[19:04:07] *** Quits: Uswa1d (~leandre@2a01cb040075f900413f47ed6861a667.ipv6.abo.wanadoo.fr) (Changing host)
[19:04:07] *** Joins: Uswa1d (~leandre@user/Uswald)
[19:07:49] *** Joins: therufuser (~therufuse@p5b02e544.dip0.t-ipconnect.de)
[19:17:50] *** Quits: Uswald (~user@user/Uswald) (Remote host closed the connection)
[19:24:47] *** Quits: Uswa1d (~leandre@user/Uswald) (Quit: WeeChat 3.4)
[19:41:05] *** Joins: meator (~meator@user/meator)
[19:42:34] *** Quits: meator (~meator@user/meator) (Client Quit)
[19:42:53] *** Joins: meator (~meator@user/meator)
[19:43:13] *** Quits: meator (~meator@user/meator) (Client Quit)
[19:52:32] *** Joins: Uswald (~leandre@2a01cb040075f900e0e12301ffd548a3.ipv6.abo.wanadoo.fr)
[19:52:32] *** Quits: Uswald (~leandre@2a01cb040075f900e0e12301ffd548a3.ipv6.abo.wanadoo.fr) (Changing host)
[19:52:32] *** Joins: Uswald (~leandre@user/Uswald)
[20:04:20] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[20:41:58] *** Joins: Inline__ (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de)
[20:42:23] *** Quits: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[20:53:31] *** Quits: bobb_ (~bobb_@dslb-092-074-237-154.092.074.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[21:08:14] *** Joins: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de)
[21:08:22] *** Quits: Inline__ (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[21:15:56] *** Quits: Inline (~Inline@ip-037-201-240-204.um10.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[21:23:50] *** Quits: calamity-jane (~calamity-@user/calamity-jane) (Quit: Client closed)
[21:30:42] *** Joins: magla (~gelignite@55d450c5.access.ecotel.net)
[21:30:50] *** Quits: Uswald (~leandre@user/Uswald) (Quit: WeeChat 3.4)
[21:53:19] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[23:33:50] *** Joins: Uswald (~leandre@2a01cb040075f900e0e12301ffd548a3.ipv6.abo.wanadoo.fr)
[23:33:50] *** Quits: Uswald (~leandre@2a01cb040075f900e0e12301ffd548a3.ipv6.abo.wanadoo.fr) (Changing host)
[23:33:50] *** Joins: Uswald (~leandre@user/Uswald)
[23:34:18] *** Joins: andreyv (~andrey@user/andreyv)
[23:38:26] *** Quits: Uswald (~leandre@user/Uswald) (Client Quit)
[23:38:50] *** Joins: Uswald (~leandre@2a01cb040075f900e0e12301ffd548a3.ipv6.abo.wanadoo.fr)
[23:38:50] *** Quits: Uswald (~leandre@2a01cb040075f900e0e12301ffd548a3.ipv6.abo.wanadoo.fr) (Changing host)
[23:38:50] *** Joins: Uswald (~leandre@user/Uswald)
[23:39:48] *** Joins: croberts (~quassel@nat-pool-232-132.redhat.com)
[23:53:28] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:6405:7d50:9b0e:b742)
[23:53:28] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:6405:7d50:9b0e:b742) (Changing host)
[23:53:28] *** Joins: RoKenn (~RoKenn@user/rokenn)
