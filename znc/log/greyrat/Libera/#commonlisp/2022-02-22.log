[00:11:45] <dbotton> BTW, It works great _death as always all thanks
[00:19:31] *** Joins: yewscion (~yewscion@52.94.133.128)
[00:27:53] *** Joins: Oladon (~olad@98.43.81.226)
[00:31:09] *** Joins: notzmv (~zmv@user/notzmv)
[00:31:15] *** Parts: Earnestly (~earnest@user/earnestly) (WeeChat 3.4)
[00:32:58] *** Quits: nature (~nature@45.32.235.173) (Ping timeout: 272 seconds)
[00:36:57] *** Quits: Common-Lisp (~common_li@12.2.190.242) (Ping timeout: 240 seconds)
[00:39:47] *** Quits: wacki (~wacki@87.122.81.3) (Quit: Leaving.)
[00:41:43] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[00:45:30] *** Quits: pve (~pve@188-67-210-62.bb.dnainternet.fi) (Quit: leaving)
[01:08:58] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[01:10:52] *** Joins: frgo (~frgo@p548a3783.dip0.t-ipconnect.de)
[01:14:25] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:15:33] *** Quits: frgo (~frgo@p548a3783.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:31:08] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[01:32:30] *** Quits: snits (~quassel@ip98-179-76-75.ph.ph.cox.net) (Ping timeout: 272 seconds)
[01:32:48] *** Joins: snits (~quassel@ip98-179-76-75.ph.ph.cox.net)
[01:33:58] *** Quits: yewscion (~yewscion@52.94.133.128) (Ping timeout: 256 seconds)
[01:36:41] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[01:45:08] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[01:46:19] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:55:20] *** Joins: pillton (~user@193-116-99-228.tpgi.com.au)
[02:01:32] *** Joins: Guest7480 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[02:07:48] *** Joins: Common-Lisp (~o@2600:1700:94c0:69a0::44)
[02:09:14] *** Quits: Brucio-61 (~Brucio-52@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[02:09:14] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[02:09:57] *** Joins: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[02:13:56] *** Joins: Brucio-61 (~Brucio-35@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[02:20:43] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 256 seconds)
[02:21:02] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[02:21:19] *** Joins: eugercek (~user@user/eugercek)
[02:21:39] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[02:25:18] *** Quits: Common-Lisp (~o@2600:1700:94c0:69a0::44) (Remote host closed the connection)
[02:31:58] <random-nick> REINITIALIZE-INSTANCE doesn't set slots to their initforms, it just processes the initargs
[02:46:13] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[02:47:48] *** Joins: yewscion (~yewscion@ec2-44-193-71-234.compute-1.amazonaws.com)
[02:49:45] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.4)
[02:54:51] *** Quits: skeemer (~skeemer@h-158-174-23-219.NA.cust.bahnhof.se) (Quit: Leaving)
[02:59:32] *** Quits: yewscion (~yewscion@ec2-44-193-71-234.compute-1.amazonaws.com) (Ping timeout: 256 seconds)
[03:00:32] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 272 seconds)
[03:03:53] *** Quits: cosimone (~user@93-34-132-33.ip49.fastwebnet.it) (Ping timeout: 250 seconds)
[03:19:59] *** Joins: s-liao (~s-liao@101.86.96.21)
[03:23:06] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:b4d8:cb19:ba30:6fb5)
[03:25:45] *** Joins: akoana (~ah@user/akoana)
[03:39:46] *** Quits: morganw (~user@80.225.24.132) (Remote host closed the connection)
[03:48:15] *** Joins: igemnace (~ian@user/igemnace)
[03:55:56] *** Joins: iamFIREc1 (~iamFIREcr@user/iamfirecracker)
[03:57:20] *** Quits: iamFIREcracker (~iamFIREcr@user/iamfirecracker) (Ping timeout: 256 seconds)
[04:07:15] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:b4d8:cb19:ba30:6fb5) (Remote host closed the connection)
[04:18:14] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.fixed.vodafone.hu) (Ping timeout: 250 seconds)
[04:23:11] *** Joins: taiju` (~user@240b:253:ec40:2400:b7d1:436e:2d61:e925)
[04:24:26] *** Joins: karlosz (~karlosz@47.151.136.69)
[04:24:29] *** Joins: Devon (~devon@c-24-2-157-5.hsd1.ma.comcast.net)
[04:25:25] *** Joins: iamFIREcracker (~iamFIREcr@user/iamfirecracker)
[04:27:39] *** Quits: iamFIREc1 (~iamFIREcr@user/iamfirecracker) (Ping timeout: 256 seconds)
[04:36:03] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[04:42:59] *** Joins: asen (~asen@2408:821a:618:8ad0:c30b:1640:f4a3:fe2a)
[04:53:43] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[04:56:18] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[05:01:14] *** Joins: kingofcsu (~kingofcsu@114.249.132.226)
[05:07:53] *** Joins: anticomputer_ (~anticompu@gateway/tor-sasl/anticomputer)
[05:08:55] *** Quits: anticomputer (~anticompu@gateway/tor-sasl/anticomputer) (Ping timeout: 240 seconds)
[05:10:16] *** Quits: cjb (~cjb@user/cjb) (Ping timeout: 260 seconds)
[05:14:18] *** Quits: kingofcsu (~kingofcsu@114.249.132.226) (Quit: kingofcsu)
[05:34:38] *** Joins: Oladon (~olad@98.43.81.226)
[05:59:36] *** Joins: thomaslewis (6e04fe5c02@mail.nobodyhasthe.biz)
[06:20:13] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[06:24:41] <s-liao> How can I came back to see the signature of the procedure, which have been defined in REPL?
[06:25:49] *** Quits: etimmons (m-fyxyzb@li834-247.members.linode.com) (Remote host closed the connection)
[06:25:55] <White_Flame> (describe #'foo) will give the lambda list & return type, if that's what you mean by "signature"
[06:26:03] <White_Flame> (at least in sbcl)
[06:27:37] *** Joins: etimmons (m-fyxyzb@li834-247.members.linode.com)
[06:28:39] <s-liao> Yes. that is what I wanted.
[06:29:33] <s-liao> But that all characters became the uppercase characters
[06:29:58] <White_Flame> they are symbols, not strings
[06:30:16] <White_Flame> symbols are converted to (by default) uppercase right when the symbol is read from text
[06:32:28] <aeth> If you don't like the SHOUTING, you can run this in your REPL first... (setf *print-case* :downcase)
[06:33:02] <aeth> However, it's not perfect because not every symbol is upper cased and there is no way to *print-case* in a way that disambiguates between 'foo and '|foo| the latter of which will actually keep the lower case
[06:33:05] <White_Flame> although then you won't be able to work with some code out there which makes an assumption about symbol case
[06:33:24] <aeth> (I mean, no way other than the default value)
[06:38:22] <s-liao> That is Okay.
[06:39:47] <s-liao> But mostly I would like access the document of these things.
[06:41:09] <White_Flame> it's really better form to have your DEFUNs in a .lisp file, and then you can cross-reference it directly with M-. etc
[06:42:58] *** Quits: jealousmonk (~user@user/jealousmonk) (Ping timeout: 250 seconds)
[06:45:42] <s-liao> Okay. it is like Elisp self-description
[06:48:45] <s-liao> Thanks
[06:51:44] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 252 seconds)
[06:58:56] <Guest7480> any thoughts on storing dates parsed from binary files, like creation dates.  Encode into universal time or some human readable string?
[07:02:47] *** Joins: jealousmonk (~user@user/jealousmonk)
[07:10:21] <pillton> I have no advice but I doubt universal time would be useful since it is defined only for dates from January 1 1900 GMT.
[07:11:18] <pillton> I imagine looking at how databases store time and dates would be a good place to start. SQLite mentions ISO-8601.
[07:12:21] <Guest7480> well, I didn't mean creation dates like that of earth :)
[07:12:49] <pillton> There is also the local-time library.
[07:12:56] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[07:13:08] <Guest7480> but I guess you're saying human readable.
[07:13:14] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:13:56] <pillton> I am not saying anything because I don't know your assumptions. I know that time is complicated, especially dates.
[07:14:06] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:14:19] <Guest7480> well, you mentionned iso 8601
[07:14:47] <pillton> I merely provided a path to making an informed decision.
[07:16:22] <Guest7480> i'm looking for lisp related thoughts, since it's for lisp.
[07:16:43] <Guest7480> but anyways, i think I need to just provide a way to add transforms for accessors.
[07:16:54] <pillton> Well, I recommended the local-time library which is written in common lisp.
[07:17:20] <pillton> https://local-time.common-lisp.dev
[07:17:22] <Guest7480> I'm aware of it.  I'm not aware of your thoughts.
[07:30:42] <beach> Good morning everyone!
[07:31:02] <pillton> G'day beach #\:)
[07:31:07] *** Joins: Oladon (~olad@98.43.81.226)
[07:34:23] *** Quits: asen (~asen@2408:821a:618:8ad0:c30b:1640:f4a3:fe2a) (Quit: Leaving)
[07:38:19] <beach> pillton: Are you going to ELS?
[07:49:51] *** anticomputer_ is now known as anticomputer
[07:55:34] <pillton> beach: Alas no. One year I will.
[07:55:52] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Quit: ~ Trillian - www.trillian.im ~)
[07:56:00] <beach> I see.
[08:00:01] <drakonis> have ELS's approved talks been published yet?
[08:00:41] <beach> I don't think so.  Authors were informed only yesterday.
[08:03:19] *** Joins: semz_ (~semz@user/semz)
[08:05:54] *** Quits: semz (~semz@user/semz) (Ping timeout: 260 seconds)
[08:08:13] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[08:15:07] *** Quits: jealousmonk (~user@user/jealousmonk) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 27.1))
[08:25:35] <mfiano> I have a question about Emacs/SLIME. Is it okay to ask here?
[08:27:31] <pillton> Sure.
[08:27:34] <mfiano> Is there anything like C-x C-e (slime-eval-last-expression), that, instead of printing the return value in the minibuffer, will insert it into the buffer at point?
[08:27:37] <mfiano> I ask because I am copying "BigFloat" constants into Common Lisp code from another language, and I want to round it to what my implementation READs it as, removing useless fractional digits.
[08:28:10] <mfiano> My workflow has been to C-x C-e it, then manually remove digits/round and append "d0"
[08:28:16] <mfiano> It's quite tedious
[08:30:35] <mfiano> or well, I append the "d0" first before eval'ing I mean.
[08:31:55] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[08:36:18] <edgar-rft> mfiano: C-u C-x C-e inserts the result at the cursor position if that's what you want
[08:36:24] <beach> Try it with a numeric argument.
[08:37:18] <mfiano> Oh thank you. Now if only there was a way to automate replacing what I evaluated with the result, instead of appending a comment at the end of line
[08:39:38] <mfiano> This is part of a DSL, so I think I'll just SETF *read-default-float-format* and print case in my REPL, and type out the long data format and copy the result back to code
[08:39:57] <mfiano> I've been doing it the hard way for days.
[08:40:02] <mfiano> Time to change :)
[08:41:03] *** Joins: Limits (~Limits@user/Limits)
[08:44:37] *** Quits: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com) (Ping timeout: 240 seconds)
[08:47:22] *** Joins: mfiano (~mfiano@cpe-67-240-71-179.nycap.res.rr.com)
[08:47:57] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[09:01:00] *** Joins: SR-71 (~user@user/SR-71)
[09:03:55] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[09:03:59] <pillton> You could also make an interactive command which is a variant of (slime-eval-print (buffer-subtring-no-properties (region-beginning) (region-end))). This will evaluate the current Emacs region and write the result in the buffer.
[09:13:22] *** Joins: wacki (~wacki@87.122.91.154)
[09:14:28] *** Joins: karlosz (~karlosz@47.151.136.69)
[09:25:34] *** Joins: amb007 (~a_bakic@32.144.204.77.rev.sfr.net)
[09:26:19] *** Quits: amb007 (~a_bakic@32.144.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[09:26:37] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[09:53:04] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[09:53:30] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[09:58:59] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[10:00:03] *** Joins: mayuresh (~kathe@49.32.137.84)
[10:00:51] *** Quits: rogersm (~rogersm@90.166.180.250) (Ping timeout: 256 seconds)
[10:02:00] <mayuresh> hello everyone. :)
[10:02:59] <Josh_2> Good Morning
[10:11:28] *** Joins: shka (~herr@109.231.3.55)
[10:13:35] *** Quits: mayuresh (~kathe@49.32.137.84) (Quit: Leaving)
[10:29:02] *** Quits: sander (~sander@user/sander) (Ping timeout: 240 seconds)
[10:45:53] *** Joins: trannus_aran (~sammi@c-98-244-55-191.hsd1.ca.comcast.net)
[10:53:38] *** Joins: silasfox (~sbv@p548d111e.dip0.t-ipconnect.de)
[10:55:58] *** Joins: s-liao (~s-liao@101.86.96.21)
[11:12:35] *** Joins: cosimone (~user@93-34-132-33.ip49.fastwebnet.it)
[11:19:22] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[11:25:51] *** Joins: rogersm (~rogersm@90.166.180.250)
[11:26:09] *** Joins: MajorBiscuit (~MajorBisc@c-001-029-040.client.tudelft.eduvpn.nl)
[11:27:49] *** Joins: lisp123 (~lisp123@120.154.103.52)
[11:27:58] *** Joins: pve (~pve@37-136-233-147.rev.dnainternet.fi)
[11:34:54] *** Joins: hashfunc461 (~user@162.254.115.155)
[11:38:19] *** Joins: s-liao (~s-liao@101.86.96.21)
[11:43:08] *** Joins: unixlisp (~unixlisp@2409:8a3c:5400:9ff0:fe08:4aff:fe66:ec11)
[11:44:17] *** Quits: Limits (~Limits@user/Limits) (Ping timeout: 240 seconds)
[11:46:24] *** Joins: Limits (~Limits@user/Limits)
[11:53:37] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[11:55:41] *** Joins: s-liao (~s-liao@101.86.96.21)
[12:10:37] <hashfunc461> what's wrong with my macro? i can't figure it out for the life of me. here's the code along with the macro-expanded output (in the comments) https://pastebin.com/rXtX5973
[12:12:51] <moon-child> I expect you want (eq language 'html), not `(eq ',language 'html) (and the analogous change for the other conditions)
[12:14:16] <beach> hashfunc461: You need to fix your indentation if you want people to read your code.
[12:16:21] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[12:18:46] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[12:20:54] *** Joins: lisp123 (~lisp123@120.154.103.52)
[12:21:01] *** Joins: treflip (~user@user/treflip)
[12:23:12] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[12:24:04] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[12:29:36] *** Quits: Guest7480 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Ping timeout: 256 seconds)
[12:30:13] *** Quits: prov[m] (~provessor@2001:470:69fc:105::cfb) (Quit: You have been kicked for being idle)
[12:32:40] *** Quits: trannus_aran (~sammi@c-98-244-55-191.hsd1.ca.comcast.net) (Quit: Client closed)
[12:33:21] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[12:42:16] *** Joins: lisp123 (~lisp123@120.154.103.52)
[12:47:38] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[12:47:52] *** Joins: lisp123 (~lisp123@120.154.103.52)
[12:48:03] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[12:49:47] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[12:52:17] *** Quits: Limits (~Limits@user/Limits) (Ping timeout: 240 seconds)
[12:52:25] <hashfunc461> moon-child: that worked! now to figure out what my wrong assumptions were/are
[13:03:07] <hashfunc461> so nested-backticked-forms get evaluated first. ok that makes sense
[13:04:13] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.fixed.vodafone.hu)
[13:06:09] <hashfunc461> now if there's a comma within a backticked form, then arguments within the comma'd form need not be commad
[13:06:57] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[13:08:37] *** Quits: Brucio-61 (~Brucio-35@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[13:09:22] <hashfunc461> i guess what I don't understand is why ... language ... doesn't have to be evaluated, but ... ,@body ... does
[13:10:23] <beach> It looks to me like the conditional in the COND form is a non-empty list, so it is always true.
[13:10:42] <beach> ... but it is hard to follow your code because it is incorrectly indented.
[13:11:42] <hashfunc461> beach: i used the default emacs indenting. not sure what i need to correct there
[13:11:57] <beach> Your code probably has TABs in it then.
[13:12:15] <hashfunc461> beach: ah yup it does. just checked
[13:12:25] <beach> You need to instruct Emacs not to use TABs for indentation.  Paste sites don't handle TABs very well.
[13:12:47] <beach> If you already have TABs in your code, you can use the emacs command UNTABIFY.
[13:16:23] <hashfunc461> beach: just updated the code to the updated code as well: https://pastebin.com/UUVhwxAY
[13:16:55] <hashfunc461> my only question is why the form with ... ,@body ... has to be backticked, but ... language ... doesn't
[13:17:03] <moon-child> beach: it renders correctly for me.  Perhaps your browser is not rendering tabs correctly?  Try setting tab-size:8
[13:17:22] <beach> I see.
[13:17:40] <moon-child> hashfunc461: it may be less confusing to try to write the macro without using quasiquotation at all
[13:18:06] <beach> hashfunc461: So try this out in your REPL: (cond ((eq *package* *standard-output*) "yes") (t "no")) vs (cond (`(eq ,*package* ,*standard-output*) "yes") (t "no")).
[13:18:41] <moon-child> hashfunc461: recall that a macro is effectively a function, which takes a list of forms (which are not evaluated) and returns a form (which is then evaluated)
[13:18:43] <hashfunc461> moon-child: is that standard practice? to not "aim" for the desired form, but "aim" for the desired execution? if that makes sense
[13:19:15] <moon-child> hashfunc461: I would write that macro using quasiquotation.  However I think it may be instructive for you to try to write it without quasiquotation
[13:20:54] <hashfunc461> beach: ran them both and now my mind is bent haha
[13:21:03] <hashfunc461> moon-child: ok, i see. i'll try it out
[13:24:11] <hashfunc461> beach: i don't understand how the former form evaluates to the first cond
[13:24:18] *** semz_ is now known as semz
[13:27:00] *** Quits: taiju` (~user@240b:253:ec40:2400:b7d1:436e:2d61:e925) (Ping timeout: 240 seconds)
[13:29:09] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:1d8d:6d27:28bf:5b00)
[13:29:41] <hashfunc461> moon-child: alright i gotta sleep on that problem
[13:29:49] <hashfunc461> moon-child: beach: thanks ya'll
[13:32:23] *** Joins: lisp123 (~lisp123@120.154.103.52)
[13:32:44] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[13:33:05] *** Joins: s-liao (~s-liao@101.86.96.21)
[13:35:08] *** Quits: hashfunc461 (~user@162.254.115.155) (Ping timeout: 272 seconds)
[13:37:03] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 272 seconds)
[13:37:16] *** Joins: lisp123 (~lisp123@120.154.103.52)
[13:38:13] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[13:39:59] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[13:41:45] <flip214> https://gitlab.common-lisp.net/asdf/asdf says "No license. All rights reserved"; I can't find any license file or other text. What's the license?
[13:42:40] <jackdaniel> MIT
[13:43:14] <moon-child> looking at a random source file, I see the mit license
[13:43:40] <moon-child> I assume all the source files are so licensed; and asdf.asd refers to an 'MIT-style license'
[13:43:42] <jackdaniel> it is also mentioned in the documentation
[13:43:43] <flip214> the contrib/asdf/README in the SBCL sources mentions a LICENSE file, but there is none
[13:43:48] <flip214> thanks
[13:43:53] <flip214> UIOP the same, I guess
[13:43:54] *** Joins: eugercek (~user@user/eugercek)
[13:45:57] <jackdaniel> http://turtleware.eu/static/paste/8e30e6be-foo.html <- some progress with marrying mcclim and svg as the output backend
[13:52:09] *** Joins: Limits (~Limits@user/Limits)
[14:02:49] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 256 seconds)
[14:03:21] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[14:08:33] *** Quits: Limits (~Limits@user/Limits) (Quit: WeeChat 3.4)
[14:12:09] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[14:12:32] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[14:13:41] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[14:15:08] *** Joins: s-liao (~s-liao@101.86.96.21)
[14:23:33] *** Joins: nature (~nature@45.32.235.173)
[14:27:21] *** Joins: lisp123 (~lisp123@120.154.103.52)
[14:32:00] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 256 seconds)
[14:32:08] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[14:32:36] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[14:36:48] *** Joins: notzmv (~zmv@user/notzmv)
[14:39:47] *** Quits: pillton (~user@193-116-99-228.tpgi.com.au) (Quit: ERC (IRC client for Emacs 27.2))
[14:42:31] *** Quits: unixlisp (~unixlisp@2409:8a3c:5400:9ff0:fe08:4aff:fe66:ec11) (Remote host closed the connection)
[14:42:54] *** Quits: nature (~nature@45.32.235.173) (Ping timeout: 272 seconds)
[14:54:23] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[15:00:42] *** Joins: blacked (~blacked@user/blacked)
[15:00:45] <blacked> :)
[15:02:31] *** Joins: random-nick (~random-ni@87.116.179.129)
[15:10:44] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[15:10:55] *** Joins: eugercek (~user@user/eugercek)
[15:11:15] *** Quits: eugercek (~user@user/eugercek) (Remote host closed the connection)
[15:14:24] *** Joins: nature (~nature@45.32.235.173)
[16:07:46] <Demosthenex> so i hit heap limit and then another memory error which dumped me into little debugger breaking sky on some rather small and simple code. is there something i can have report on what's happening to help identify the problem?
[16:09:09] <jackdaniel> and what is the implementation that you use?
[16:09:12] <Demosthenex> i'm basically using run-program and a function to step thru the output stream (ie: cmd | grep, nothing complex), and i was deliberately reading the stream instead of dumping into a list of strings to save ram
[16:09:18] <Demosthenex> oh, sbcl.
[16:09:32] <jackdaniel> also please link this simple program
[16:09:54] <Demosthenex> i'm having a hard time reproducing it, that's why i'm asking about instrumentation.
[16:10:00] <jackdaniel> I'm sure that there are some folks who /can/ use the low level debugger in sbcl but I'm not one of them - usually it is a game over :)
[16:10:16] <phoe> "rather small and simple code", you say
[16:10:20] <jackdaniel> the other day we had this discussion whether the implementation should provide a soft limit for the heap so it can comfortably report the condition
[16:10:20] <Demosthenex> sbcl over sly didn't output any warnings as the memory got critical, i had to truss the process to discover it aborted into debugger
[16:10:40] <jackdaniel> instead of putting you in an awful situation where you hit the game over
[16:10:56] <Demosthenex> game over is fine, if sly hadn't been obtuse too ;]
[16:11:14] <Demosthenex> i've tried increasing --dynamic-size, and 1 in 30 is still triggering this
[16:11:29] <jackdaniel> btw, do you use sb-ext:run-program or uiop:run-program ?
[16:11:35] <Demosthenex> at this point i either have to add logging at many levels, or just get sbcl to warn me or something
[16:11:41] <Demosthenex> uiop
[16:11:51] <jackdaniel> the latter is awful because it puts itself between the process and the stream
[16:12:05] <Demosthenex> oh? maybe that's a quick fix
[16:12:26] <Demosthenex> i'm literally doing the cl equiv of grepping the output of a tar command :P
[16:12:28] <jackdaniel> so that may be the reason - you think that you don't read everything into the memory, but uiop possibly does the "slurping" thing where it first reads everything and then allows you to read from its memory-allocated stream
[16:13:20] <Demosthenex> odd. i specify a function so that slurp lets me read the stream. i'll go swap and try the sbcl one
[16:13:59] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[16:14:43] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[16:15:11] <Demosthenex> honestly, i tried using cl-tar and chipz to try and read the compressed tar, but the perf was so bad i reverted to using the tar command
[16:17:44] <flip214> Demosthenex: can't reproduce, neither with small nor big buffers
[16:18:46] <Demosthenex> flip214: like i said, it just crashes down around my ears on one input. my question was about instrumentation for memory, assuming it's my error that more is used than needed.
[16:18:53] <etimmons> Demosthenex: uiop:run-program will slurp the entire output. You probably want uiop:launch-program
[16:20:12] *** Quits: minion (~minion@common-lisp.net) (Ping timeout: 240 seconds)
[16:20:13] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:20:30] <_death> Demosthenex: if the probability of failure is 1/30 and independent of other runs, then you can run it 138 times to get 99% chance of reproduction
[16:20:48] *** Quits: specbot (~specbot@common-lisp.net) (Ping timeout: 256 seconds)
[16:21:35] <Demosthenex> etimmons: yeah, i'm looking at sb-ext, i'll read that one too
[16:22:16] <Demosthenex> _death: its a consistent failure on the same file, the irony is it's a small one. again i assume i made an error, but because it all just crashes i dont even know where to look adding extensive logging
[16:22:30] <Demosthenex> a memory warning would be nice
[16:25:32] *** Joins: yewscion (~yewscion@ec2-44-193-71-234.compute-1.amazonaws.com)
[16:25:45] *** Quits: blacked (~blacked@user/blacked) (Quit: blacked)
[16:29:05] *** Joins: specbot (~specbot@common-lisp.net)
[16:29:05] *** Joins: minion (~minion@common-lisp.net)
[16:38:02] <_death> sbcl has an allocation profiler, maybe it can be helpful
[16:41:28] *** Joins: lisp123 (~lisp123@120.154.103.52)
[16:49:27] <Demosthenex> yep, it's gotta be my code, sb-ext:run-program produces the same crash on that file
[16:55:18] <Demosthenex> well, guess i'll have to add log4 statements everywhere.
[16:58:03] *** Joins: Bike (~Glossina@71.69.170.70)
[16:59:08] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[16:59:50] <etimmons> Did you set :wait nil? If not, it's slurping the entire stream as well (I think)
[16:59:54] <Guest74> why not paste the code?
[17:00:37] *** Joins: unixlisp (~unixlisp@111.37.115.121)
[17:00:46] <Demosthenex> etimmons: yep, i did some manual tests. i'm reading the stream using process-output and run-program :wait nil :output :stream
[17:01:06] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:01:43] <Demosthenex> Guest74: maybe because it doesn't work without a large tarball? or maybe i'm asking how to debug it crashing due to OOM with no warning or outputs? clearly it's my fault and i don't have a short MWE. but i also have no clue where it's dying because there's nothing to go on
[17:04:42] *** Quits: unixlisp (~unixlisp@111.37.115.121) (Remote host closed the connection)
[17:05:17] *** Joins: unixlisp (~unixlisp@2409:8a3c:5400:9ff0:fe08:4aff:fe66:ec11)
[17:05:19] <Demosthenex> hrm. "no more immobile pages" that's new
[17:06:23] <etimmons> Well that's unfortunate. At this point I'd probably try to remember how to use SBCL's allocation profiler
[17:07:55] *** Quits: unixlisp (~unixlisp@2409:8a3c:5400:9ff0:fe08:4aff:fe66:ec11) (Remote host closed the connection)
[17:10:20] <Demosthenex> i found a thing on SO and wrapped my call in an sb-sprof call, even with :show-progress it output nothing, just bombed
[17:16:24] *** Joins: blacked (~blacked@user/blacked)
[17:34:24] *** Joins: [w] (~c@2601:8c1:80:70d0::35a2)
[17:37:01] *** Quits: yewscion (~yewscion@ec2-44-193-71-234.compute-1.amazonaws.com) (Ping timeout: 256 seconds)
[17:46:13] <Demosthenex> i think i found it, i had an unlimited area where i was interning keywords, not that sbcl gave me any clues :P
[17:49:27] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[17:50:36] *** Quits: Devon (~devon@c-24-2-157-5.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[17:52:49] <etimmons> Demosthenex: Yeah, I don't think any of the Free CL implementations handle running out of memory very well.
[17:53:34] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[17:54:22] <etimmons> Also, I suspect most of the cl-tar slowness you were seeing is coming from chipz. If you were reading from an uncompressed tar file and it was still unacceptably slow I'd love to know about it.
[17:54:56] <jackdaniel> ecl preallocates some memory at startup so during the storage-condition reasonable allocations may still be performed
[17:54:58] <Demosthenex> etimmons: i used run-program to use tar -zxOf and dump the file i wanted to stdout :P
[17:55:18] <jackdaniel> (i.e to handle invoke a restart, run a gc or some other recovery tasks)
[17:55:24] <Demosthenex> etimmons: i did some testing of diff compressions (uncomp, bz2, xz) and xz was pretty quick, but still 15 sec vs 0
[17:55:56] <Demosthenex> and i just found it wasn't my interning, i thought i wasn't being careful but i had the proper filter :P
[17:58:00] <etimmons> jackdaniel: that's good to know!
[17:58:46] *** Joins: frgo (~frgo@p548a3783.dip0.t-ipconnect.de)
[18:12:42] *** Joins: Common-Lisp (~common_li@12.2.190.242)
[18:23:48] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 240 seconds)
[18:30:00] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[18:31:38] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[18:42:10] *** Joins: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net)
[18:45:56] *** Joins: VincentVega (~user@212.97.4.209)
[18:46:22] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[19:05:25] *** Quits: Common-Lisp (~common_li@12.2.190.242) (Ping timeout: 256 seconds)
[19:14:25] *** Quits: silasfox (~sbv@p548d111e.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[19:15:03] *** Joins: sloanr (~user@97-127-41-123.mpls.qwest.net)
[19:17:04] *** Quits: robin (~robin@user/terpri) (Quit: Leaving)
[19:17:40] *** Joins: robin_ (~robin@user/terpri)
[19:18:32] *** robin_ is now known as robin
[19:18:57] *** Joins: IPmonger (~IPmonger@172.58.203.71)
[19:19:13] *** Quits: IPmonger (~IPmonger@172.58.203.71) (Remote host closed the connection)
[19:24:39] *** Joins: jealousmonk (~user@user/jealousmonk)
[19:30:12] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[19:38:47] *** Quits: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de) (Quit: Leaving)
[19:45:28] *** Joins: hobo (~hobo@2600:1700:8972:63f:3313:2d33:be9f:8246)
[19:48:17] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[19:48:18] *** Quits: hobo (~hobo@2600:1700:8972:63f:3313:2d33:be9f:8246) (Read error: Connection reset by peer)
[19:48:39] *** Joins: hobo (~hobo@69.218.33.204)
[19:49:44] *** Quits: hobo (~hobo@69.218.33.204) (Client Quit)
[19:50:25] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[19:53:28] *** Joins: hobo (~hobo@69.218.33.204)
[19:55:11] *** Joins: eugercek (~user@user/eugercek)
[19:56:24] *** Quits: blacked (~blacked@user/blacked) (Quit: Client closed)
[20:15:37] *** Joins: blacked (~blacked@user/blacked)
[20:15:49] *** Quits: blacked (~blacked@user/blacked) (Client Quit)
[20:16:12] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[20:27:52] *** Joins: blacked (~blacked@user/blacked)
[20:28:14] *** Quits: hobo (~hobo@69.218.33.204) (Read error: Connection reset by peer)
[20:28:42] *** Joins: hobo (~hobo@2600:1700:8972:63f:3313:2d33:be9f:8246)
[20:33:50] *** Quits: SR-71 (~user@user/SR-71) (Remote host closed the connection)
[20:47:18] *** Quits: blacked (~blacked@user/blacked) (Quit: Client closed)
[21:06:00] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[21:06:58] *** Quits: sloanr (~user@97-127-41-123.mpls.qwest.net) (Ping timeout: 256 seconds)
[21:10:25] *** Joins: jeosol (~jeosol@user/jeosol)
[21:17:22] *** Joins: edgar-rft (~edgar-rft@ip-109-193-249-223.um39.pools.vodafone-ip.de)
[21:20:57] *** Quits: MajorBiscuit (~MajorBisc@c-001-029-040.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[21:26:43] <_73> is it possible to make FORMAT print NIL as an empty string with the ~A directive? (format nil "~{~:A~^ ~}" '("foo" 12 nil)) ;;=> "foo 12 ()" ... but instead I want ;;=> "foo 12"
[21:27:04] *** Joins: cage (~cage@94-39-220-187.adsl-ull.clienti.tiscali.it)
[21:27:22] <White_Flame> preprocess the list
[21:28:01] <White_Flame> (format nil "..." (remove nil '("foo" 12 nil)))
[21:28:28] <White_Flame> unless you want "foo 12 " with the separator space between the 12 and the ""
[21:28:42] <_73> White_Flame: That is what I was doing but am just wondering if I can do it with FORMAT.
[21:28:48] <White_Flame> which is what you would get if you left the "" in the list
[21:28:52] <Bike> with ~a alone no
[21:29:01] <Bike> but you could do "~{~@[~a~}~^ ~}"
[21:29:07] <Bike> er, ~@[~a~]
[21:29:40] * _73 goes to investigate this FORMAT magic
[21:29:47] <Bike> clhs ~[
[21:29:47] <specbot> http://www.lispworks.com/reference/HyperSpec/Body/22_cgb.htm
[21:29:52] <Bike> oh good, that works
[21:30:58] <Bike> i think avoiding an extra space at the end might be sort of a pain in the ass, though
[21:31:33] *** Joins: attila_lendvai (~alendvai@2a02:ab88:3710:7c80:9130:5abf:96b3:dc0c)
[21:33:31] <_73> yes I can't have the trailing space. I was thinking this may be a problem with a common solution but it may be better to just preprocess.
[21:41:53] <jcowan> Or postprocess, returning the substring up to but not including the last character.
[21:44:28] <Bike> yeah, string-right-trim is easy
[21:45:09] <White_Flame> only if the NIL only ever appears at the end
[21:45:11] <White_Flame> if it's in the middle, you'll have to s/  / /g
[21:45:34] <White_Flame> then trim both ends
[21:45:52] <Bike> you can just do ~@[~a~^ ~] to take care of the middle ones, i think
[21:48:28] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[21:50:41] *** Joins: Oladon (~olad@98.43.81.226)
[21:51:49] *** Joins: karlosz (~karlosz@47.151.136.69)
[21:52:15] *** Quits: karlosz (~karlosz@47.151.136.69) (Client Quit)
[21:53:56] *** Quits: treflip (~user@user/treflip) (Quit: good nigh!)
[22:01:48] *** Joins: lisp123 (~lisp123@120.154.103.52)
[22:02:36] *** Quits: lisp123 (~lisp123@120.154.103.52) (Client Quit)
[22:05:54] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 256 seconds)
[22:06:54] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[22:08:47] *** Joins: ldb (~user@user/ldb)
[22:16:06] <jcowan> I thought this was trying to solve the problem of putting spaces between strings but not before or after: it should be somewhat more efficient to chop the last character than the first.
[22:17:54] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[22:24:36] <qhong> Is there a reliable macroexpand-all on SBCL? sb-cltl2:macroexpand-all doesn't handle declaration information in environment correctly
[22:25:01] <qhong> That's to say, sb-cltl2:macroexpand-all doesn't produce identical result as what real eval does
[22:25:23] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[22:26:12] *** Quits: parjanya (~esb@2804:14c:1ad:9351:a9f4:2cf3:2d0f:3397) (Ping timeout: 240 seconds)
[22:27:24] *** Quits: ldb (~user@user/ldb) (Quit: ERC (IRC client for Emacs 27.2))
[22:28:02] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:436f:e6b2:c8c4:a5a1) (Ping timeout: 240 seconds)
[22:31:31] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:fb55:f4b:9349:d06d)
[22:32:01] <phoe> qhong: could you link a reproducible test case?
[22:32:19] <phoe> something minimal that compares the two?
[22:37:28] <qhong> phoe: not so minimal case: https://gist.github.com/BlueFlo0d/99a0f16899d60c81f690ecedd4872842
[22:37:40] <qhong> (straight grabbed from my use case)
[22:39:15] <qhong> I do use sb-c::stuff so maybe myself is to be blamed
[22:41:36] *** Joins: patrice (~patrice@user/patrice)
[22:44:03] *** Joins: Volt_ (~Volt_@c-73-145-161-51.hsd1.mi.comcast.net)
[22:46:04] <flip214> qhong: how about the macroexpander from swank?
[22:48:50] <qhong> phoe: btw, it is reproducible without using sb-c::stuff. The declaration list returned by sb-cltl2:variable-information as the third return value, is also different from sb-cltl2:macroexpand-all and real eval
[22:49:40] <qhong> flip214: I'm using sly and the interactive expander is as wrong as sb-cltl2. I suspect it uses sb-cltl2 under the hood anyway
[22:52:55] *** Joins: tane (~tane@user/tane)
[22:55:19] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[23:01:21] <qhong> hmm, I digged into SBCL's compile a bit, and it seems that real eval/compile don't have a distinct macro expansion phase, rather it is interleaved when doing ir1-tran? I might be wrong
[23:09:01] *** Quits: Odin- (~odin@cybernetic.anarchism.is) (Ping timeout: 240 seconds)
[23:13:48] *** Joins: v88m (~Xiro@109-252-170-8.dynamic.spd-mgts.ru)
[23:15:14] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:16:27] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:16:31] *** Lord_of_Life_ is now known as Lord_of_Life
[23:19:43] *** Quits: v88m (~Xiro@109-252-170-8.dynamic.spd-mgts.ru) (Quit: Quit)
[23:19:58] *** Joins: v88m (~Xiro@109-252-170-8.dynamic.spd-mgts.ru)
[23:33:18] *** Joins: karlosz (~karlosz@47.151.136.69)
[23:38:29] <dbotton> what does this produce  extra spaces around the return of  function X which is ":memory:" -  `(\",(x)\") => (|"| ":memory:" |"|)
[23:40:01] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[23:40:45] <semz> dbotton: It's returning a list. \" is the symbol |"| whose name is a doublequote.
[23:40:51] <semz> What are you expecting it to return?
[23:41:49] <dbotton> I think I was expecting it to be interpreted as one symbol not three
[23:42:07] <dbotton> \" as 1 ,(x) as 2 and \" as 3rd
[23:42:10] <Xach> backquote and comma are not the tools to construct symbols
[23:43:33] <random-nick> why are you making a symbol with double quotes in the first place?
[23:43:37] <dbotton> I guess because worked for my purpose till now.. which was using a macro to output text
[23:43:54] <dbotton> I guess ,(format xxxxx) better idea
[23:44:31] <random-nick> you can also use the cl-interpol library if you prefer https://edicl.github.io/cl-interpol/
[23:45:22] <dbotton> thanks will look into
[23:46:30] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[23:47:15] <dbotton> I guess in retrospect I should have never thought that would work... live and learn
[23:47:52] <White_Flame> gensym or intern for constructing symbol names
[23:48:48] <White_Flame> (well, usually FORMAT for constructing the actual name, GENSYM or INTERN for instantiating the symbol)
[23:48:56] *** Joins: Devon (~devon@c-24-2-157-5.hsd1.ma.comcast.net)
[23:49:16] <dbotton> this was to construct text
[23:51:37] <dbotton> it is part of my code generation for clog builder. I am building APIs to extend the builder with your own custom controls. At least I made an error I can expect from future users
[23:51:58] *** Quits: wacki (~wacki@87.122.91.154) (Quit: Leaving.)
[23:52:49] <random-nick> if a macro only outputs a string you might not need a quasiquote in the first place
[23:53:25] <random-nick> but that depends on how the API looks like
