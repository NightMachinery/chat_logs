[00:00:18] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[00:00:52] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[00:04:00] *** Joins: maiku (~maiku@user/maiku)
[00:04:28] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Client Quit)
[00:09:18] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[00:11:17] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[00:11:43] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 250 seconds)
[00:11:44] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[00:11:58] *** Quits: livingsilver94_ (~livingsil@user/livingsilver94) (Ping timeout: 260 seconds)
[00:14:14] *** Joins: livingsilver94 (~livingsil@user/livingsilver94)
[00:15:44] *** Joins: CoolerX (~CoolerX@user/coolerx)
[00:16:19] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[00:16:38] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 268 seconds)
[00:22:31] *** Quits: rogersm (~rogersm@90.166.177.48) (Quit: Leaving...)
[00:24:44] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[00:27:06] *** Joins: baakeydo1 (~baake@2001:41d0:203:b12c::)
[00:27:28] *** Joins: tyson2 (~user@cpe688f2e1c83c3-cm688f2e1c83c0.cpe.net.cable.rogers.com)
[00:28:10] *** Quits: baakeydow (~baake@163.172.145.178) (Quit: baakeydow)
[00:28:15] *** Quits: baakeydo1 (~baake@2001:41d0:203:b12c::) (Client Quit)
[00:28:29] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[00:28:35] *** Joins: baakeydow (~baake@2001:41d0:203:b12c::)
[00:29:55] *** Quits: adip (~adip@deu201.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[00:30:12] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[00:31:23] *** Joins: adip (~adip@dhy92.neoplus.adsl.tpnet.pl)
[00:31:38] *** Quits: pztrn (~pztrn@user/pztrn) (Quit: Ping timeout (120 seconds))
[00:32:01] *** Joins: pztrn (~pztrn@user/pztrn)
[00:32:06] *** Joins: fikran (~fikran@user/fikran)
[00:33:55] *** Quits: baakeydow (~baake@2001:41d0:203:b12c::) (Quit: baakeydow)
[00:34:15] *** Joins: baakeydow (~baake@2001:41d0:203:b12c::)
[00:38:50] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[00:39:35] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[00:39:57] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[00:40:01] *** Joins: X-Scale` (~ARM@83.223.249.106)
[00:40:41] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 268 seconds)
[00:42:41] *** X-Scale` is now known as X-Scale
[00:43:51] *** Quits: tyson2 (~user@cpe688f2e1c83c3-cm688f2e1c83c0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[00:44:28] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[00:45:01] *** Quits: bkircher (~bkircher@2001:a61:250f:2b01:b65d:31b:86ff:e40e) (Ping timeout: 265 seconds)
[00:45:12] *** Joins: alzgh (~alzgh@user/alzgh)
[00:45:42] <alzgh> hello, I'd like to initialize and test a few variables in my if statement like follows `  if _, ok := rows[r]; !ok && _, ok1 := diags[r-c]; !ok1 && _, ok2 := antiDiags[r+c]; !ok2 {`
[00:45:55] <alzgh> those are all `map[int]bool`s
[00:46:00] <alzgh> Is this possible?
[00:48:28] <fizzie> No, you only get to use a single simple statement (like `_, ok := ...`) in the initial part of an if statement. The most straight-forward thing would be to just do those before the `if`.
[00:50:52] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[00:53:37] <fizzie> Alternatively, you might think of adding some small helper functions or methods so that you can write `if !rows.Contains(r) && !diags.Contains(r-c) && !antiDiags.Contains(r+c) { ... }` or something along those lines.
[00:53:45] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[00:55:16] <b0nn> eh https://play.golang.org/p/8Eoybz2-8pL
[00:55:19] <alzgh> Oh, this is a good idea, writing helper methods. But I couldn't declare helper methods on built-in types, right? bc these are map[int]bools
[00:55:20] <b0nn> heh*
[00:55:36] <alzgh> for the if I managed to do this `        if _, ok, _, ok2, _, ok3 := rows[r], diags[r-c], antiDiags[r+c]; !ok && !ok2 && !ok3 {`
[00:55:44] <alzgh> which is probably veery ugly :D
[00:56:54] <alzgh> good idea b0nn
[00:57:19] <b0nn> uhh, no it's not, it's ugly, repititive, and was meant as an example of how horrible it could be
[00:57:34] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2c81-f210-c7c4-b53c.res6.spectrum.com)
[00:58:49] <alzgh> lol, dw, I won't put that in any production code
[00:59:08] <alzgh> I'm learning and welcome everything that teaches me something
[00:59:11] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 264 seconds)
[00:59:12] *** Quits: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[00:59:16] *** Quits: zenstoic (uid461840@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:00:57] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[01:00:57] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[01:00:57] *** Joins: resamvi (~resamvi@user/resamvi)
[01:02:54] *** Quits: mei (~mei@user/mei) (Ping timeout: 260 seconds)
[01:03:14] <fizzie> alzgh: No, you can't declare methods on built-in types, but you can define new types with one of those as the underlying type.
[01:03:50] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[01:03:53] <fizzie> Like `type rowSet map[int]bool; func (rs rowSet) Contains(r int) (found bool) { _, found = rs[r]; return found }` or so on.
[01:05:42] *** Joins: animesh (~animesh@49.205.115.103)
[01:05:47] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 264 seconds)
[01:06:42] <fizzie> And of course a `func hasRow(rows map[int]bool, row int) bool` is possible without defining any types.
[01:07:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[01:09:09] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[01:11:43] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2c81-f210-c7c4-b53c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[01:13:02] *** Quits: animesh (~animesh@49.205.115.103) (Quit: Leaving)
[01:13:05] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:13:08] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2c81-f210-c7c4-b53c.res6.spectrum.com)
[01:13:20] *** Joins: animesh (~animesh@49.205.115.103)
[01:16:22] *** Joins: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de)
[01:16:39] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[01:17:51] *** Joins: tyson2 (~user@cpe688f2e1c83c3-cm688f2e1c83c0.cpe.net.cable.rogers.com)
[01:18:27] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 250 seconds)
[01:19:19] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 250 seconds)
[01:19:28] *** Quits: tyson2 (~user@cpe688f2e1c83c3-cm688f2e1c83c0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[01:21:24] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[01:23:32] *** Quits: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:24:10] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[01:25:19] *** Joins: rockyh (~rockyh@user/rockyh)
[01:25:43] *** Joins: rusty (~rustyboy@82.77.237.221)
[01:26:37] *** Joins: tyson2 (~user@cpe688f2e1c83c3-cm688f2e1c83c0.cpe.net.cable.rogers.com)
[01:28:56] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[01:30:16] *** Joins: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de)
[01:37:02] *** Joins: normen (~normen@p54b34e0c.dip0.t-ipconnect.de)
[01:39:11] <alzgh> right, thanks fizzie
[01:39:34] *** Joins: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de)
[01:39:34] *** Quits: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de) (Changing host)
[01:39:34] *** Joins: tane (~tane@user/tane)
[01:39:46] <alzgh> Oh, BTW, the new Go with generics and all, will it allow us also to define new methods on built-in types? just occurred to me.
[01:40:35] <fizzie> No, though it would allow you to define a generic *function* that would work for any sort of map.
[01:41:47] *** Quits: rusty (~rustyboy@82.77.237.221) (Quit: Leaving)
[01:41:54] <b0nn> the ability to alter the standard library types, and their associated methods, is horrific
[01:42:09] <b0nn> the idea*
[01:42:19] *** Quits: animesh (~animesh@49.205.115.103) (Quit: Leaving)
[01:42:32] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 240 seconds)
[01:42:43] <fizzie> Generic `Contains` function: https://gotipplay.golang.org/p/5MOZFN2KE3O
[01:45:26] *** Joins: NCS_One (~NCS_One@st-217-129-75-53.netvisao.pt)
[01:45:33] *** Joins: CoolerX (~CoolerX@user/coolerx)
[01:48:04] <dostoyevsky2> If I am using an older Go compiler, how does it determine what version of packages to download?  Will I be able to use use 1.17 e.g. for the next two years without my builds breaking because many libraries will be ported to use generics?
[01:48:34] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[01:49:35] *** Quits: normen (~normen@p54b34e0c.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[01:51:11] *** Joins: marahin (~marahin@3lab/marahin)
[01:52:16] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[01:52:16] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[01:52:17] *** Joins: resamvi (~resamvi@user/resamvi)
[01:54:03] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:54:08] <b0nn> go.mod records the version of Go that your code is built against (it used to be a pain working in 1.12 and the go modules would write go 1,13)
[01:54:22] <b0nn> I'm not sure if that will affect the code you download though
[01:56:10] <dostoyevsky2> I suppose one might expect that they increase the versinon numbers of libs you want to use properly, so e.g. v2 of a module still would work with go1.17 but the v3 is using generics now... but I guess it depends on how aware the maintainers are
[01:56:34] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 260 seconds)
[01:56:54] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[02:03:23] <b0nn> I honestly don't know if generic code is seen as a breaking change (I suspect it is though)
[02:03:23] *** Quits: _nuke (~nuke@50-193-103-211-static.hfc.comcastbusiness.net) (Ping timeout: 264 seconds)
[02:03:59] <b0nn> Regardless, it's up to the individual projects to determine if their changes are deserving of a major number change or not
[02:04:10] <b0nn> Meaning - ruh roh
[02:06:49] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[02:08:37] <mikoto-chan> https://dpaste.com/F7E6Z94EB
[02:09:11] <mikoto-chan> why doesn't this work? I found this snippet of code in TGPL weirdly enough
[02:09:40] <mikoto-chan> released in 2015
[02:11:32] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[02:12:03] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[02:12:16] *** Joins: _nuke (~nuke@50-193-103-211-static.hfc.comcastbusiness.net)
[02:12:19] <b0nn> uhh https://play.golang.org/p/-H8ZhNz7EN7
[02:12:55] <b0nn> Circle doesn't have a field named Point, so you cannot access it, like the error says
[02:13:11] <b0nn> ditto for Wheels, they don't have any fields named X
[02:13:20] <mikoto-chan> b0nn: https://github.com/adonovan/gopl.io/blob/master/ch4/embed/main.go
[02:13:46] <fizzie> That's got a different definition of `Circle`.
[02:13:47] <b0nn> Yes... they have type embedding
[02:14:06] <mikoto-chan> really? oops
[02:14:11] <mikoto-chan> my mistake then :(
[02:14:18] *** Quits: tyson2 (~user@cpe688f2e1c83c3-cm688f2e1c83c0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[02:14:29] <b0nn> When a type has another type as a field AND that field isn't named, it's embedded, and the new type is composed of the embedded type
[02:14:38] *** Joins: normen (~normen@p54b34e0c.dip0.t-ipconnect.de)
[02:15:05] <mikoto-chan> b0nn: where is the mistake exactly? I can't find the difference between my version and the original
[02:15:09] <fizzie> `Point` (embedded) vs. `Center Point` (just a regular named field).
[02:15:28] <b0nn> https://play.golang.org/p/jw7sfU7W1ZL
[02:15:30] <fizzie> Line 14 of https://github.com/adonovan/gopl.io/blob/master/ch4/embed/main.go vs. line 5 of https://dpaste.com/F7E6Z94EB
[02:15:49] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Client Quit)
[02:15:54] <b0nn> Wheel has cricle embedded too
[02:15:58] <b0nn> circle
[02:16:06] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[02:16:07] <mikoto-chan> fizzie: so you can't name your types if you want to have anonymous fields?
[02:16:11] <dostoyevsky2> `Spokes: 20, // NOTE: trailing comma necessary here (and at Radius)'  *commentingintensifies*
[02:16:19] <mikoto-chan> interesting
[02:16:36] <b0nn> anonymous fields are named _
[02:16:42] <b0nn> the underscore
[02:16:46] <mikoto-chan> dostoyevsky2: code can never be too descriptive:)
[02:16:50] <b0nn> but, don't do that
[02:18:18] <llorllale> fizzie: it just seems like an arbitrary thing to do (duplicate functionality b/w DB and Conn). The extra step seems insignificant in the grand scheme of things. And of course, if you are running a connection pool, you really should not expose the pool config functions to arbitrary packages.
[02:20:01] <dostoyevsky2> mikoto-chan: the compiler will also tell you that the comma is necessary there, so not really a useful comment ;-)
[02:20:06] <llorllale> This looks like one of the few places where the standard lib kinda forces you to declare an interface on the producer side - the DB in this case - in order to narrow down the scope of the API. You definitly do not want to expose connection pool config.
[02:21:14] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[02:21:35] *** Joins: troseman (~troseman@c-75-70-98-121.hsd1.co.comcast.net)
[02:22:38] <llorllale> I had to point this out to a programmer who was leaning on precisely the quote that b0nn pointed out ("Prefer running queries from DB unless there is a specific need for a continuous single database connection.")
[02:23:31] <llorllale> Programmer figured that quote provided enough grounds to just hand over a *sql.DB to all repositories.
[02:23:43] <mikoto-chan> dostoyevsky2: idk how good the compiler is since I use asynchronous code correction
[02:24:14] *** Joins: lilgopher (~textual@2601:241:8000:38f0:bc0f:6dc8:7a2b:a9f0)
[02:24:16] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:24:20] <mikoto-chan> is this a bad habit? (as in should I know what errors the compiler throws)
[02:24:25] *** Quits: Batzy (~Batzy@user/batzy) (Ping timeout: 265 seconds)
[02:25:32] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[02:25:54] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[02:26:58] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Quit: Leaving)
[02:27:26] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[02:28:39] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Ãœberall.)
[02:28:42] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:28:53] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[02:30:42] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:18] <b0nn> llorllale: to just hand over a *sql.DB to all <<-- do you mean that there's no DI to allow people to choose?
[02:33:06] <llorllale> b0nn: not sure what you mean. The DB *is* hidden behind an interface in our repo.
[02:33:13] <llorllale> s/repo/project/
[02:34:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:34:21] <b0nn> ok, I'm really confused what you meant when you said 09:53 < llorllale> Programmer figured that quote provided enough grounds to just hand over a *sql.DB to all repositories.
[02:35:31] <llorllale> You see, what I gathered was that their primary motivation was to not have to manually close the `Conn`. DB does that for you. Also, the programmer read the quote you posted.
[02:36:04] <llorllale> So their initial impulse was just to change the component that provided the `Conn` to instead return a `DB`.
[02:36:22] <llorllale> I had to then make sure they hid `sql.DB` behind an interface.
[02:36:24] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[02:37:41] <b0nn> Ok.. the interface would be better from the POV of allowing multiple drivers to be used, including mocks for testing
[02:38:04] <b0nn> So I wouldn't have expected passing something like a *sql.DB about
[02:38:16] <b0nn> before even thinking about this "call close" business
[02:38:39] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[02:38:56] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[02:38:56] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[02:38:56] *** Joins: resamvi (~resamvi@user/resamvi)
[02:39:33] <llorllale> Same here: it hadn't ever occurred to me to pass around connection pools. That just doesn't make sense to me.
[02:39:42] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[02:39:44] <llorllale> Not in our use case
[02:41:27] *** Joins: fikran (~fikran@user/fikran)
[02:41:32] <llorllale> I think that quote lacks nuance. Like many other things uttered in the land of Go.
[02:42:55] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[02:43:05] <b0nn> Raise an issue on Github
[02:43:39] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 256 seconds)
[02:44:26] *** Joins: Torr_ (~Torr@user/torr)
[02:47:02] *** Quits: normen (~normen@p54b34e0c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:53:08] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[02:53:33] *** Joins: CoolerX (~CoolerX@user/coolerx)
[02:56:06] *** Quits: lilgopher (~textual@2601:241:8000:38f0:bc0f:6dc8:7a2b:a9f0) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:56:22] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[02:58:00] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:58:35] *** Quits: NCS_One (~NCS_One@st-217-129-75-53.netvisao.pt) (Quit: Lost terminal)
[03:03:01] *** Quits: maiku (~maiku@user/maiku) (Remote host closed the connection)
[03:04:01] *** Joins: jon[m]123 (~jzacshzac@2001:470:69fc:105::1:39eb)
[03:10:07] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[03:15:07] *** Joins: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de)
[03:15:59] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[03:21:02] *** Quits: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[03:22:51] *** Joins: noord (~noord@user/noord)
[03:24:11] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[03:24:21] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[03:28:18] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[03:28:18] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[03:28:18] *** Joins: resamvi (~resamvi@user/resamvi)
[03:29:10] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:29:11] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[03:31:14] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[03:32:47] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 264 seconds)
[03:34:05] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[03:36:12] <llorllale> Relevant bug: https://github.com/golang/go/issues/32298
[03:36:43] <llorllale> Prepared statements are generally scoped to the session within which they are created.
[03:39:35] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[03:40:21] *** Parts: lirnril (~uirc@45.77.158.143) ()
[03:41:02] *** Quits: GJdan (~quassel@107-190-26-130.cpe.teksavvy.com) (Ping timeout: 260 seconds)
[03:44:11] *** Quits: yonson (~yonson@2600:8801:d900::16db) (Ping timeout: 264 seconds)
[03:45:36] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[03:47:16] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[03:48:54] *** Parts: jzacsh[m] (~jzacshm]@2001:470:69fc:105::462) ()
[03:50:03] *** Joins: yonson (~yonson@2600:8801:d900:0:1e69:7aff:fea2:4e85)
[03:56:11] *** Quits: adip (~adip@dhy92.neoplus.adsl.tpnet.pl) (Ping timeout: 264 seconds)
[03:58:35] *** Quits: Guest3728 (~Leon@138.sub-174-198-200.myvzw.com) (Ping timeout: 264 seconds)
[04:00:59] *** Joins: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de)
[04:06:02] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[04:12:42] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[04:12:48] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[04:16:13] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[04:16:13] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[04:16:13] *** Joins: resamvi (~resamvi@user/resamvi)
[04:17:23] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:20:32] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 240 seconds)
[04:22:06] *** Quits: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:22:15] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[04:22:56] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2c81-f210-c7c4-b53c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[04:23:43] *** Quits: veegee_ (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[04:23:44] <mikoto-chan> can I use a switch in conjuction with comparison operators?
[04:25:10] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[04:27:09] <fizzie> Assuming I understand what you meant, yes-ish, but you can't mix "simple" cases (that just compare the case with the switch's controlling expression) with full-fledged expressions (which work by comparing whatever they evaluate to with an implicit `true`).
[04:27:18] <fizzie> You can write something like https://play.golang.org/p/RWVZfWQmECI if that's what you meant.
[04:27:37] <rawtaz> uh.. so im using Cobra, of course, and i recall there was a way to tell cobra to automatically print the default values in/with the usage help text? like if you have BoolVar(&foo, "mybool", false, "switch this to do stuff") it outputs "--mybool  switch this to do stuff", but i'd like it to automatically make that "--mybool  switch this to do stuff (default: false)". am i missing something or can you do this automatically instead of hardcoding the default in th
[04:28:51] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[04:29:19] <mikoto-chan> fizzie: excactly what I meant, thank you!
[04:30:27] <fizzie> The way it works is, `switch { /* ... */ }` is just a shorthand for `switch true { /* ... */ }`, so it'll pick the first `case` branch that evaluates to true.
[04:34:36] *** Quits: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[04:34:52] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:39:15] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[04:40:19] *** Quits: lauraaah (uid156848@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:43:31] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[04:45:06] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1002) (Quit: ZNC 1.8.2 - https://znc.in)
[04:45:21] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:37] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:48:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[04:50:47] *** Joins: fikran (~fikran@user/fikran)
[04:51:16] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:57:34] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:a058:550b:9e44:5264)
[04:57:46] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[05:01:11] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:346b:8ef4:4433:cb30) (Ping timeout: 265 seconds)
[05:06:30] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[05:06:30] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[05:06:30] *** Joins: resamvi (~resamvi@user/resamvi)
[05:06:51] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[05:09:51] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[05:10:59] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 256 seconds)
[05:13:28] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[05:16:15] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2c81-f210-c7c4-b53c.res6.spectrum.com)
[05:17:33] *** Quits: danmurf (uid480399@user/danmurf) (Quit: Connection closed for inactivity)
[05:21:51] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:24:17] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[05:26:34] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[05:28:53] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[05:38:41] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:50:02] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[05:51:30] *** Quits: CoolerX (~CoolerX@user/coolerx) (Read error: Connection reset by peer)
[05:51:54] *** Joins: CoolerX (~CoolerX@user/coolerx)
[05:57:23] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[06:20:43] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[06:24:00] *** Joins: fentanyl (~ryan@user/sapi01)
[06:24:35] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[06:27:00] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:28:59] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[06:31:27] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[06:32:49] *** Quits: Torr_ (~Torr@user/torr) (Quit: leaving)
[06:43:50] *** Joins: normen (~normen@p54b34e0c.dip0.t-ipconnect.de)
[06:44:31] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:44:53] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[06:45:58] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[06:45:59] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[06:45:59] *** Joins: resamvi (~resamvi@user/resamvi)
[06:48:20] *** Joins: easbarbosa (~user@2804:1b2:80:604d:a663:a1ff:fe49:c8ed)
[06:49:01] *** Quits: normen (~normen@p54b34e0c.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:50:41] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 268 seconds)
[06:52:16] *** Quits: easbarbosa (~user@2804:1b2:80:604d:a663:a1ff:fe49:c8ed) (Remote host closed the connection)
[06:58:42] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:00:08] *** Joins: fikran (~fikran@user/fikran)
[07:02:24] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[07:03:23] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[07:04:17] *** Joins: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de)
[07:11:41] *** Quits: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[07:12:03] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Ping timeout: 250 seconds)
[07:13:14] <tar_xvf> Hey yall, i was wondering if there is a better way to log all requests in a net/http server which i configured with http.HandleFunc, besides adding a line in each of those pages?
[07:13:28] <tar_xvf> Like someone i would configure for each request regardless of path
[07:14:52] <b0nn> by pages I take it you mean routes, and I think you are wanting logging at the mux level (so look into middleware, but the middleware logging will not log what happens inside your handler functions
[07:16:19] <tar_xvf> yes, i meant the function that handles the request (it gets passed http.ResponseWriter and http.Request)
[07:18:03] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[07:19:42] <noord> tar_xvf: https://play.golang.org/p/Y9EwoJRLdJd
[07:20:33] <tar_xvf> noord: thank you so much
[07:24:21] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[07:24:41] <b0nn> sooo, can anyone explain how that code logs inside the handler
[07:26:56] <noord> it can't, I assumed tar_xvf asks the middleware concept
[07:28:44] <b0nn> ok, I'm a *big* fan of Alex Edwards blog/book - this is his take on middleware https://www.alexedwards.net/blog/making-and-using-middleware
[07:29:00] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[07:31:38] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:36:21] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[07:36:21] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[07:36:21] *** Joins: resamvi (~resamvi@user/resamvi)
[07:37:14] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[07:40:35] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 256 seconds)
[07:49:13] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:52:58] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[08:07:47] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[08:08:23] *** Quits: dsrt^ (~dsrt@68.101.63.101) (Ping timeout: 268 seconds)
[08:10:46] *** Joins: dsrt^ (~dsrt@68.101.63.101)
[08:23:20] *** Quits: pepee (~pepee@user/pepee) (Quit: WeeChat 2.8)
[08:24:19] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[08:25:50] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[08:25:51] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[08:25:51] *** Joins: resamvi (~resamvi@user/resamvi)
[08:28:58] *** Joins: CoolerX (~CoolerX@user/coolerx)
[08:30:07] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:30:35] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 268 seconds)
[08:34:44] *** Parts: ansimita (~ansimita@user/ansimita) ()
[08:36:08] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[08:37:40] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:42:58] *** Joins: unix_chad (~quassel@115.97.185.132)
[08:43:30] *** Joins: jpw (~jpw@user/jpw)
[08:43:53] *** Quits: unix_chad (~quassel@115.97.185.132) (Client Quit)
[08:44:17] *** Joins: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de)
[08:44:37] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 256 seconds)
[08:49:01] *** Joins: sysx1000 (~s@user/sysx1000)
[08:49:58] *** Quits: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[08:50:10] <sysx1000> hello. I have a struct instance, for example instance of type Foo struct {}. How can I get a pointer to this instance with reflect (i.e. how to get a *Foo)?
[08:51:30] <rewt> why use reflect?   if you have foo = Foo{}, then you can get a pointer with just &foo
[08:51:42] <sysx1000> rewt: it requires
[08:52:11] <sysx1000> I know about &, but I need to do it with reflect
[08:52:18] <rewt> why?
[08:52:50] <KirkMcDonald> Does this mean that what you have is a reflect.Value?
[08:54:00] <rewt> &Foo{} gives a *Foo ... what did you leave out?
[08:54:04] <sysx1000> KirkMcDonald: yes. val := reflect.ValueOf(i) // ptr := val.Pointer() // ptv := reflect.NewAt(structType, unsafe.Pointer(ptr)) - my idea of this
[08:54:16] <sysx1000> rewt: I need to do it with reflect. not with &
[08:55:08] <sysx1000> KirkMcDonald: it crashes on val.Pointer(), saying 'call of reflect.Value.Pointer on struct Value'
[08:55:30] <KirkMcDonald> Value.Pointer() is what you'd call if the value were, itself, a pointer.
[08:55:45] <sysx1000> in short, I need '&' but done with reflect to any possible struct
[08:55:57] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[08:56:07] <KirkMcDonald> Value.Addr is a thing.
[08:56:20] <sysx1000> hmm, let me check
[08:56:20] <KirkMcDonald> But note that the value must be addressable.
[08:56:30] <KirkMcDonald> Value.CanAddr checks this.
[08:56:51] <sysx1000> ok, a := Foo{} - does it seems like addressable?
[08:57:03] <KirkMcDonald> Local variables are addressable, yes.
[08:57:11] <sysx1000> okay, great
[08:58:03] <sysx1000> Addr exactly seems to be a thing I require
[08:58:33] <sysx1000> pointing to struct over unsafe pointers was looking pretty confusing to me. Reflect is tricky
[09:03:44] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[09:04:44] *** Joins: CoolerX (~CoolerX@user/coolerx)
[09:06:44] *** Joins: lilgopher (~textual@2601:241:8000:38f0:bc0f:6dc8:7a2b:a9f0)
[09:07:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[09:08:39] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:09:40] *** Joins: fikran (~fikran@user/fikran)
[09:11:58] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[09:12:23] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 264 seconds)
[09:13:35] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[09:15:23] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[09:15:23] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[09:15:23] *** Joins: resamvi (~resamvi@user/resamvi)
[09:18:05] *** Joins: frost (~frost@user/frost)
[09:19:29] *** Quits: frost (~frost@user/frost) (Client Quit)
[09:19:45] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 256 seconds)
[09:24:20] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[09:24:56] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[09:25:10] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:25:49] *** Joins: frost (~frost@user/frost)
[09:29:19] <sysx1000> Addr not working
[09:29:25] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:29:27] <sysx1000> Neither helps
[09:29:32] <sysx1000> (doh)
[09:29:57] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[09:32:41] *** Joins: livingsilver94_ (~livingsil@user/livingsilver94)
[09:33:24] *** Quits: lilgopher (~textual@2601:241:8000:38f0:bc0f:6dc8:7a2b:a9f0) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:33:47] *** Quits: livingsilver94 (~livingsil@user/livingsilver94) (Ping timeout: 265 seconds)
[09:34:29] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 256 seconds)
[09:35:28] <b0nn> sysx1000: paste some code to play.golang.org so people can see what you are trying to achieve
[09:36:06] *** Parts: mikey__ (~mikey__@user/mikey/x-6463285) (WeeChat 3.3)
[09:36:36] *** Joins: CoolerX (~CoolerX@user/coolerx)
[09:41:57] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:00:37] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[10:00:45] <sysx1000> ok, fixed. it really depends, how structure is stored. seems like when it passed over parameter, it's not addressable. could it be possible?
[10:01:35] <sysx1000> the same behaviour, when struct is returned (not pointer to the struct, but struct itself)
[10:03:27] <KirkMcDonald> Why yes, the way in which it is stored has implications for whether it is addressable.
[10:03:37] <KirkMcDonald> It is very difficult to comment on code we cannot see.
[10:06:21] <sysx1000> anyway, I've got the point and found some ambiguities in the code, so, many thanks everybody for pointing me :)
[10:09:45] <seebs> i... have no idea what happened there
[10:13:15] *** Quits: sysx1000 (~s@user/sysx1000) (Quit: f)
[10:13:44] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:18:07] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[10:24:21] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:26:23] *** Joins: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de)
[10:26:29] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[10:29:06] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[10:29:48] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:30:32] *** Quits: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:31:08] *** Joins: mei (~mei@user/mei)
[10:34:02] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[10:42:17] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:45:40] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[10:45:40] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[10:45:40] *** Joins: resamvi (~resamvi@user/resamvi)
[10:49:05] *** Joins: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de)
[10:49:09] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:53:29] *** Quits: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[10:57:58] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: Libera upgrade.)
[10:58:29] *** Joins: nitrix (~nitrix@user/nitrix)
[11:07:50] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[11:10:18] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[11:16:14] *** Joins: CoolerX (~CoolerX@user/coolerx)
[11:17:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[11:18:52] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[11:19:01] *** Joins: fikran (~fikran@user/fikran)
[11:28:06] *** Joins: danmurf (uid480399@user/danmurf)
[11:31:14] *** Joins: aniruddha (uid340443@ilkley.irccloud.com)
[11:32:30] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[11:33:09] *** Joins: CoolerX (~CoolerX@user/coolerx)
[11:37:46] *** Joins: mrig (~AdiIRC@user/mrig)
[11:38:35] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[11:51:59] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[12:09:11] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[12:22:20] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[12:24:03] *** Quits: pztrn (~pztrn@user/pztrn) (Quit: Segmentation fault)
[12:24:31] *** Joins: pztrn (~pztrn@user/pztrn)
[12:27:02] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[12:31:16] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[12:33:19] *** Joins: normen (~normen@p54b34e0c.dip0.t-ipconnect.de)
[12:33:51] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Remote host closed the connection)
[12:34:03] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[12:42:01] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[12:52:09] *** Joins: jla (~jordi@64.225.79.195)
[12:58:51] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[13:00:58] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[13:01:20] *** Joins: CoolerX (~CoolerX@user/coolerx)
[13:02:02] *** Joins: CoolerY (~CoolerX@user/coolerx)
[13:06:05] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 250 seconds)
[13:10:26] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[13:10:36] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:12:06] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[13:14:46] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[13:15:09] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 265 seconds)
[13:18:13] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 250 seconds)
[13:19:29] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[13:26:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:28:22] *** Joins: fikran (~fikran@user/fikran)
[13:30:05] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[13:30:54] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[13:31:16] *** Joins: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de)
[13:31:37] *** Joins: justache (~justache@user/justache)
[13:32:18] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 260 seconds)
[13:32:31] *** Quits: Nex8192 (~Nex8192@user/nex8192) (Ping timeout: 250 seconds)
[13:35:22] *** Joins: sav_ (~savio@177.12.48.155)
[13:39:58] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:40:23] *** Joins: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4)
[13:40:29] *** Joins: kcrk (~kcrk@user/kcrk)
[13:41:32] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[13:42:18] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:5be:28c2:b3af:e641)
[13:45:30] *** Joins: adip (~adip@dhy92.neoplus.adsl.tpnet.pl)
[13:45:49] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[13:51:17] *** Joins: vimal (~vimal@ip-213-127-89-120.ip.prioritytelecom.net)
[13:57:28] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[14:04:13] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[14:09:12] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:09:38] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[14:13:57] *** Joins: CoolerY (~CoolerX@user/coolerx)
[14:16:31] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[14:17:47] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[14:21:23] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[14:23:02] *** Quits: normen (~normen@p54b34e0c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[14:23:26] *** Joins: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de)
[14:27:51] *** Joins: kupi (uid212005@hampstead.irccloud.com)
[14:28:15] *** Quits: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[14:34:07] *** Joins: zenstoic (uid461840@hampstead.irccloud.com)
[14:37:54] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:50:37] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:51:15] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[14:58:44] <dostoyevsky2> > Go binaries have (probably slightly undeserved) reputation for being unpleasant to reverse engineer, and this one didnâ€™t disappoint- killing Pin before finishing its setup.
[14:59:20] <dostoyevsky2> https://ncatlin.github.io/rgatPages/tracing/2021/11/19/visualising-hello-world.html
[15:00:09] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[15:07:01] *** Joins: Duns_Scrotus (sid262565@tinside.irccloud.com)
[15:10:11] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[15:14:40] *** Quits: noord (~noord@user/noord) (Quit: WeeChat 3.3)
[15:15:17] *** Joins: livingsilver94 (~livingsil@user/livingsilver94)
[15:15:37] *** Quits: livingsilver94_ (~livingsil@user/livingsilver94) (Ping timeout: 256 seconds)
[15:17:15] *** Joins: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de)
[15:22:08] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[15:22:17] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[15:22:31] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[15:22:40] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[15:23:06] *** Joins: Atque (~Atque@user/atque)
[15:27:06] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[15:30:58] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:5be:28c2:b3af:e641) (Ping timeout: 265 seconds)
[15:31:22] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[15:35:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[15:37:26] *** Quits: aniruddha (uid340443@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:37:43] *** Joins: fikran (~fikran@user/fikran)
[15:39:47] *** Quits: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[15:40:45] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[15:41:40] *** Joins: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de)
[15:44:43] *** Quits: zwr (~zwr@2804:d45:b966:fb00:8529:315f:ee39:e54c) (Ping timeout: 268 seconds)
[15:44:57] *** Joins: zwr (~zwr@2804:d45:b966:fb00:ea44:acbc:81:aeb2)
[15:45:58] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:46:47] *** Quits: jkovac1 (~jkovac1@user/jkovac1) (Ping timeout: 256 seconds)
[15:47:12] *** Quits: eau (~chat@user/eau) (Ping timeout: 268 seconds)
[15:49:56] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[15:52:13] *** Joins: alzgh (~alzgh@user/alzgh)
[15:52:44] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[15:52:58] *** Joins: eau (~chat@user/eau)
[15:55:08] *** Joins: fef (~thedawn@user/thedawn)
[15:59:31] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[16:10:11] *** Joins: CoolerY (~CoolerX@user/coolerx)
[16:11:56] *** Joins: masticass (~gzc@host-85-201-176-158.dynamic.voo.be)
[16:12:01] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:16:13] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[16:16:47] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[16:18:41] *** Quits: masticass (~gzc@host-85-201-176-158.dynamic.voo.be) (Quit: WeeChat 3.3)
[16:19:16] *** Joins: masticass (~gzc@host-85-201-176-158.dynamic.voo.be)
[16:22:34] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[16:28:05] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[16:28:07] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[16:28:57] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:29:00] *** Joins: Atque (~Atque@user/atque)
[16:29:52] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:31:35] *** fling is now known as ciphersalad
[16:32:23] <rawtaz> quite a shame that maps doesnt keep the order of the elements as they are added
[16:32:44] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[16:33:26] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[16:34:03] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[16:36:31] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Ping timeout: 268 seconds)
[16:37:03] <dostoyevsky2> Yeah, Python has OrderedDicts, every language should have them...
[16:37:22] <fizzie> It costs money to keep track of the order, so arguably it's the better default not to, since many use cases don't care.
[16:38:28] <fizzie> Admittedly without generics a package to provide an ordered map isn't quite as convenient as a built-in type.
[16:38:42] <dostoyevsky2> I have these YAML files where the order of the dicts are important but since it all ends up in a map... I can basically write my own yaml parser
[16:40:38] <fizzie> Didn't go-yaml specifically have a type for that already?
[16:41:01] <rawtaz> fizzie: yeah but there are plenty of use cases where you do need it and given expected parameter types you cant really just swap your map for something else
[16:41:24] <rawtaz> (e.g. fields in logrus - theyre logged with thrown around order all the time, and it's a PITA)
[16:43:40] <fizzie> https://pkg.go.dev/gopkg.in/yaml.v2#MapSlice or something. Not *actually* an ordered map, though, just a slice of key-value pairs.
[16:43:51] <dostoyevsky2> fizzie: It has a custom class for keeping track of the ordering but it would have required me to rewrite a lot of my code because you can't define a custom map type using the same syntax as map... so I went with some heuristics and sorting that map when I needed it...
[16:45:15] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[17:03:33] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 250 seconds)
[17:06:00] *** ciphersalad is now known as fling
[17:09:28] *** Joins: gggp (~gggp@60.10.23.162)
[17:09:53] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[17:11:36] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:12:06] *** Quits: gggp (~gggp@60.10.23.162) (Read error: Connection reset by peer)
[17:12:19] *** Joins: gggp (~gggp@li1766-35.members.linode.com)
[17:12:52] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[17:15:37] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[17:16:30] *** Joins: normen_ (~normen@p200300d7172e39001000882b608a6d1f.dip0.t-ipconnect.de)
[17:16:47] *** Joins: bkircher (~bkircher@2001:a61:250f:2b01:b65d:31b:86ff:e40e)
[17:17:11] *** Quits: normen (~normen@p200300d7172e3900d85fa7eb9c8b3e54.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[17:17:14] *** normen_ is now known as normen
[17:20:06] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[17:21:34] *** Quits: bkircher (~bkircher@2001:a61:250f:2b01:b65d:31b:86ff:e40e) (Remote host closed the connection)
[17:21:47] *** Joins: bkircher (~bkircher@2001:a61:250f:2b01:4b96:7ca4:45ee:36d4)
[17:28:25] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[17:32:53] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[17:37:17] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[17:37:47] *** Quits: adip (~adip@dhy92.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[17:39:13] *** Joins: normen_ (~normen@p200300d7172e3900cd6f0b293612440c.dip0.t-ipconnect.de)
[17:39:45] <Tykling> how do I install v2.3.1 of this https://github.com/letsencrypt/pebble ? these install docs seem outdated somehow https://github.com/letsencrypt/pebble#install what is the current way, this is for CI so it is a clean slate every time
[17:40:32] *** Quits: normen (~normen@p200300d7172e39001000882b608a6d1f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[17:40:35] *** normen_ is now known as normen
[17:43:35] <Tykling> I am using go 1.17 locally but the ci might be using a newer go
[17:45:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[17:47:04] *** Joins: fikran (~fikran@user/fikran)
[17:47:54] *** Joins: CoolerY (~CoolerX@user/coolerx)
[17:51:30] <Tykling> oic https://github.com/letsencrypt/pebble/issues/344
[17:51:41] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[17:52:28] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[17:54:02] *** Quits: normen (~normen@p200300d7172e3900cd6f0b293612440c.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[17:58:05] <Tykling> "go get -u github.com/letsencrypt/pebble/..." results in getting ~/go/pkg/mod/github.com/letsencrypt/pebble@v1.0.1/ which is much older than the last v2.3.1 release
[17:58:25] *** Joins: adip (~adip@dhy92.neoplus.adsl.tpnet.pl)
[17:59:07] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[17:59:58] <fizzie> Looks like one of those things that aren't really following the module versioning stuff. The tag v2.3.1 should have a go.mod file that has a module declaration with a "v2" path.
[18:00:37] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[18:00:37] <Tykling> fizzie: thank you, that is sort of the conclusion I am arriving at, so the issue is that the pebble packaging hasn't kept up with the modern Go way of doing things?
[18:00:58] *** Joins: alzgh (~alzgh@user/alzgh)
[18:01:05] <fizzie> Think the way you'd build that is to do your own `git clone` + `git checkout <whicever tag>` + `go install ./...` as opposed to trying to use `go get` for the fetch.
[18:01:30] <Tykling> I will try using git instead of go get, much appreciated, thank you!
[18:02:11] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[18:03:29] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:03:48] <fizzie> For some reason seems like a lot of programs (as opposed to libraries) do that thing where they don't use major version suffixes for their module. When you're building/installing "in" the checkout (as in that `go install ./...`) the path of what's called the main module doesn't really matter. But when referring to it "externally", it should be called "github.com/letsencrypt/pebble/v2" in order for
[18:03:50] <fizzie> v2.3.1 to be a valid tag.
[18:05:35] <fizzie> That's probably why you'd be getting v1.0.1 for the go get: it's the most recent version valid for the v1 major version. Using "github.com/letsencrypt/pebble/v2" would pick up the v2.3.1 tag and find the code, but then I think it would complain about the path in go.mod.
[18:07:32] <fizzie> (Yeah, it does.)
[18:08:38] *** Quits: gggp (~gggp@li1766-35.members.linode.com) (Remote host closed the connection)
[18:09:02] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[18:14:16] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[18:16:39] <Tykling> yep I tried with go install but I found the error message confusing
[18:16:54] <Tykling> (because the error is intended for a go developer, not a user of the software, of course)
[18:22:03] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[18:26:31] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[18:26:54] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 265 seconds)
[18:32:55] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[18:39:01] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[18:41:11] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[18:42:14] *** Quits: zenstoic (uid461840@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[18:45:13] *** Joins: normen (~normen@p54b34e0c.dip0.t-ipconnect.de)
[18:48:20] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-60-64-228-236-58.dsl.bell.ca)
[18:49:49] *** Quits: normen (~normen@p54b34e0c.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[18:54:18] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[18:57:38] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[18:59:58] *** Quits: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: dalek-caan)
[19:00:58] *** Joins: gggp (~gggp@li1766-35.members.linode.com)
[19:02:33] *** Joins: CoolerY (~CoolerX@user/coolerx)
[19:08:55] *** Quits: demsh (vc1s7iguvr@hermod.demsh.org) (Quit: nyaa~)
[19:09:20] *** Joins: demsh (i04yyf87t5@hermod.demsh.org)
[19:09:48] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[19:11:15] *** Joins: fputs6 (~fputs@67.59.83.166)
[19:12:41] *** Quits: fputs (~fputs@67.59.83.166) (Ping timeout: 250 seconds)
[19:12:41] *** fputs6 is now known as fputs
[19:14:02] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[19:17:22] *** Quits: chasmo77 (~chas77@71.63.241.168) (Quit: It's just that easy)
[19:19:06] *** Quits: mseidl (~flughafen@p5de8e012.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[19:19:27] *** Joins: noobcake2465[m] (~noobcake2@2001:470:69fc:105::cced)
[19:25:15] *** Quits: vimal (~vimal@ip-213-127-89-120.ip.prioritytelecom.net) (Ping timeout: 250 seconds)
[19:26:47] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 264 seconds)
[19:27:38] *** Quits: kupi (uid212005@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[19:28:59] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1002)
[19:32:13] *** Joins: mseidl (~flughafen@p2e55dcf9.dip0.t-ipconnect.de)
[19:34:03] <Tykling> fizzie: I just wanted to say I got it going with your help, thanks again :)
[19:39:11] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[19:40:25] *** Joins: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de)
[19:40:26] *** Quits: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de) (Changing host)
[19:40:26] *** Joins: tane (~tane@user/tane)
[19:41:42] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[19:50:33] <mickey8> does anyone remember of a library that takes a string and returns a base64 encoded image for captcha purposes? everything i can find has memstores and whatever that I don't want
[19:51:33] *** Joins: normen (~normen@p200300d7172e3900cd6f0b293612440c.dip0.t-ipconnect.de)
[19:54:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[19:54:54] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-60-64-228-236-58.dsl.bell.ca) (Remote host closed the connection)
[19:55:34] *** Joins: livingsilver94_ (~livingsil@user/livingsilver94)
[19:56:17] <rawtaz> where can i read about the  .(..)  part in  _, ok := err.(viper.ConfigFileNotFoundError)  ? im trying to understand what it "does". im guessing it's returning the value of err.<whatever viper.ConfigFileNotFoundError is> , but that doesnt explain how come an err,bool is returned from that.
[19:56:24] *** Joins: fikran (~fikran@user/fikran)
[19:56:48] *** Quits: livingsilver94 (~livingsil@user/livingsilver94) (Ping timeout: 265 seconds)
[19:57:01] <lazyreader> Type assertion rawtaz
[19:57:17] <ikke> https://tour.golang.org/methods/15
[19:58:11] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Ping timeout: 250 seconds)
[19:58:18] *** Quits: gggp (~gggp@li1766-35.members.linode.com) (Ping timeout: 260 seconds)
[19:58:47] <ikke> It basically checks the underlying type of the value
[20:00:06] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[20:05:01] *** Quits: normen (~normen@p200300d7172e3900cd6f0b293612440c.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[20:05:40] *** Quits: paruh (~paruh@92.60.39.18) (Quit: paruh)
[20:07:53] *** Joins: normen (~normen@p200300d7172e3900cd6f0b293612440c.dip0.t-ipconnect.de)
[20:10:35] *** Quits: kulak (~kulak@user/kulak) (Ping timeout: 264 seconds)
[20:11:45] <resamvi> Is there a way to see if one of my dependencies made a major upgrade version without checking explicitly? From /v2 => /v3 for example
[20:12:14] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:12:32] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[20:12:37] *** Joins: kulak (~kulak@user/kulak)
[20:12:46] <resamvi> go list -m -u seems to only work for minor versions
[20:13:36] <ikke> Because for v2 and further the import path changes
[20:13:45] <ikke> https://go.dev/blog/v2-go-modules
[20:17:18] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[20:26:21] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 250 seconds)
[20:27:42] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[20:28:28] *** Quits: kulak (~kulak@user/kulak) (Quit: kulak)
[20:30:09] *** Quits: nikki93 (sid200244@tinside.irccloud.com) (Remote host closed the connection)
[20:30:09] *** Quits: maxamillion (sid276220@ansible/staff/maxamillion) (Remote host closed the connection)
[20:30:09] *** Quits: Anderson-D (sid146635@tinside.irccloud.com) (Remote host closed the connection)
[20:30:09] *** Quits: Duns_Scrotus (sid262565@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: nescafe1001 (sid211018@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: justicefries (sid26447@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: pombreda (sid227801@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: chromis (sid150893@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: sa (sid1055@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: eric_hill (sid323132@tinside.irccloud.com) (Write error: Connection reset by peer)
[20:30:10] *** Quits: derfj (sid19429@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: hjmcnew____ (sid86092@tinside.irccloud.com) (Remote host closed the connection)
[20:31:06] <resamvi> Hmm. So in Go's eyes every major version is treated as a separate module. I get where this is comming from but it still kind of hurts discoverability
[20:31:39] *** Joins: mrig (~mrig@user/mrig)
[20:34:09] *** Quits: normen (~normen@p200300d7172e3900cd6f0b293612440c.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:37:24] *** Quits: itok_ (sid418430@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: danmurf (uid480399@user/danmurf) (Remote host closed the connection)
[20:37:25] *** Quits: redlegion (sid429547@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: bw (sid2730@user/betawaffle) (Remote host closed the connection)
[20:37:25] *** Quits: hhes (sid420846@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: recursion (sid504862@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: psb_ (sid500598@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: theckman (sid295081@user/theckman) (Remote host closed the connection)
[20:37:25] *** Quits: wangledorf (sid505185@ilkley.irccloud.com) (Remote host closed the connection)
[20:39:16] *** Joins: kulak (~kulak@user/kulak)
[20:39:36] *** Quits: kulak (~kulak@user/kulak) (Client Quit)
[20:39:54] *** Joins: kulak (~kulak@user/kulak)
[20:40:05] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1002) (Quit: ZNC 1.8.2 - https://znc.in)
[20:41:51] *** Quits: trollixx (sid289131@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: soren (sid124229@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: jsvcycling (sid369784@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: avery (sid501608@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: jimcroft_______ (sid148498@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: aarchi (sid486183@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: obviyus (sid415299@user/obviyus) (Remote host closed the connection)
[20:41:51] *** Quits: eruditass (uid248673@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: r0bby (r0bby@user/r0bby) (Remote host closed the connection)
[20:42:45] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[20:44:50] <rawtaz> sorry i got a phone call
[20:46:24] <rawtaz> lazyreader: thanks
[20:46:59] <rawtaz> ikke: gothca. so its specifically the .(T) syntax - just doing .T is another thing and no longer a type assertion that can return the v,ok result?
[20:47:21] <ikke> correct
[20:47:23] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[20:48:23] *** Quits: Shrike (sid305680@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[20:48:23] *** Quits: liam_ (sid7517@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[20:48:24] *** Quits: telemachus (sid2004@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[20:48:51] <rawtaz> nice thanks!
[20:48:52] *** Quits: seds (sid492514@user/seds) (Ping timeout: 260 seconds)
[20:48:59] *** Quits: flukes (uid527792@user/flukes) (Ping timeout: 264 seconds)
[20:49:20] *** Quits: kubblai (sid478659@fedora/kubblai) (Ping timeout: 260 seconds)
[20:49:26] *** Quits: decartes_ (sid240036@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[20:49:38] *** Quits: fdv (sid27570@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[20:49:48] *** Quits: chimeracoder_ (sid230642@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[20:49:54] <rawtaz> ok so a cosmetics question; whats your recommendation on using the "shorthand"  if err := viper.ReadInConfig(); err != nil {  instead of splitting that up in first the assignment and then the if statement? just trying to find a good set of practice in my coding..
[20:50:06] *** Quits: dozn (uid249292@user/dozn) (Ping timeout: 260 seconds)
[20:50:06] *** Quits: vds_ (sid12483@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[20:50:16] *** Quits: pl (sid98063@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[20:51:13] <fizzie> resamvi: https://github.com/golang/go/issues/26286 discussed cross-major-version upgrades a little, but I don't think any of that speculative tooling got implemented. The part that would make `list` show a note on available newer major versions sounds eminently doable though.
[20:51:32] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 246 seconds)
[20:51:40] *** Quits: dreamcat4 (uid157427@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[20:51:43] <ikke> rawtaz: I typically do it the opposite around
[20:51:58] *** Quits: jakesyl_ (sid56879@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[20:52:13] <ikke> foo := viper.ReadInConfig(); if err != nil { // handle error }
[20:52:34] *** Quits: hdm (sid500490@aha/hacker/hdm) (Ping timeout: 250 seconds)
[20:52:34] *** Quits: mustafa (sid502723@rockylinux/releng/mustafa) (Ping timeout: 250 seconds)
[20:52:35] *** Quits: cespare (sid330206@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[20:53:00] *** Quits: qaisjp (sid26374@user/qaisjp) (Ping timeout: 250 seconds)
[20:53:00] <rawtaz> ikke: yeah so you generally dont usually do the  if foo := bar; foo {  style of tests?
[20:53:04] *** Quits: Manouchehri (sid384576@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[20:53:12] <rawtaz> i guess you think mostly about clarity?
[20:53:14] <ikke> Not a lot
[20:53:25] *** Quits: jzelinskie (sid17772@user/jzelinskie) (Ping timeout: 250 seconds)
[20:53:32] *** Quits: lebster (sid17131@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[20:53:32] *** Quits: braxas (sid508886@lymington.irccloud.com) (Ping timeout: 260 seconds)
[20:53:38] *** Quits: computerquip (sid423484@user/computerquip) (Ping timeout: 246 seconds)
[20:53:38] *** Quits: st3fan (sid43079@lymington.irccloud.com) (Ping timeout: 246 seconds)
[20:53:47] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[20:53:57] <ikke> Occasionally
[20:54:17] *** Quits: dreistadt (sid501648@lymington.irccloud.com) (Ping timeout: 250 seconds)
[20:54:20] *** Quits: Pent (sid313808@lymington.irccloud.com) (Ping timeout: 246 seconds)
[20:54:29] *** Joins: avemestr (~avemestr@2a01:4f8:212:2719::2)
[20:54:56] *** Quits: Balooga (sid407689@lymington.irccloud.com) (Ping timeout: 260 seconds)
[20:55:30] <rawtaz> ok
[20:55:35] *** Joins: lilgopher (~textual@2601:241:8000:38f0:bc0f:6dc8:7a2b:a9f0)
[20:55:56] <resamvi> fizzie: thx for the link. good to see some others with similar pains
[20:57:21] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:a058:550b:9e44:5264) (Read error: Connection reset by peer)
[20:58:06] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:a058:550b:9e44:5264)
[21:03:17] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (Read error: Connection reset by peer)
[21:04:40] *** Joins: CoolerY (~CoolerX@user/coolerx)
[21:05:44] *** Joins: victori (~victori@cpe-76-174-179-126.socal.res.rr.com)
[21:06:51] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 250 seconds)
[21:09:19] *** Joins: braxas (~braxas@ti0061a400-1478.bb.online.no)
[21:11:10] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[21:11:54] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[21:12:31] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[21:15:32] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[21:19:47] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[21:23:34] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[21:23:56] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[21:28:55] *** Joins: tg (~tg@rockylinux/infra/tg)
[21:35:09] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[21:36:05] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[21:36:06] *** Joins: noarb (~noarb@user/noarb)
[21:40:16] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Quit: ERC (IRC client for Emacs 27.2))
[21:44:14] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 260 seconds)
[21:45:38] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[21:54:23] *** Quits: kulak (~kulak@user/kulak) (Ping timeout: 264 seconds)
[21:55:26] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[21:56:46] *** Joins: normen (~normen@p54b34e0c.dip0.t-ipconnect.de)
[21:57:14] *** Joins: kulak (~kulak@user/kulak)
[21:57:23] *** Joins: CoolerY (~CoolerX@user/coolerx)
[22:00:16] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2c81-f210-c7c4-b53c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzzâ€¦)
[22:03:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[22:03:58] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 268 seconds)
[22:05:45] *** Joins: fikran (~fikran@user/fikran)
[22:08:00] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[22:08:25] *** Joins: rogersm (~rogersm@90.166.177.48)
[22:09:15] *** Quits: normen (~normen@p54b34e0c.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[22:10:13] *** Joins: rockyh (~rockyh@user/rockyh)
[22:11:28] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 260 seconds)
[22:12:42] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[22:13:55] *** Joins: bw (sid2730@user/betawaffle)
[22:14:44] *** Joins: y04nn (~y04nn@92.223.89.196)
[22:15:01] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2c81-f210-c7c4-b53c.res6.spectrum.com)
[22:15:08] *** Joins: normen (~normen@p54b34e0c.dip0.t-ipconnect.de)
[22:15:40] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:2c4d:b4eb:334d:2f7f)
[22:17:50] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 260 seconds)
[22:18:10] *** Joins: CoolerY (~CoolerX@user/coolerx)
[22:18:25] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[22:18:27] *** Joins: bw__ (sid2730@user/betawaffle)
[22:18:32] *** Quits: shtirlic (~shtirlic@pppoe.95-55-139-91.dynamic.avangarddsl.ru) (Ping timeout: 240 seconds)
[22:19:02] *** Quits: bw (sid2730@user/betawaffle) (Ping timeout: 246 seconds)
[22:19:23] *** Quits: normen (~normen@p54b34e0c.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[22:19:49] <rawtaz> im having a problem. im using Cobra for commands and flags, and also Viper for env vars and also reading a conf file. i have the root command and the run command in package cmd. in the root i have  persistentFlags.StringVar(&rootOptions.ConfigFile, "config-file", "", "`path` to config file")  where rootOptions is a simple struct.
[22:20:17] *** Joins: r0bby (r0bby@user/r0bby)
[22:20:18] *** Joins: shtirlic (~shtirlic@pppoe.95-55-139-91.dynamic.avangarddsl.ru)
[22:20:44] <rawtaz> now, it seems that its not until i have run the rootCmd.Execute() that the flag's value is set in the rootOptions.ConfigFile. and i need that set, to then use viper to read the given config file.
[22:21:32] *** Joins: soren (sid124229@id-124229.uxbridge.irccloud.com)
[22:21:41] <rawtaz> but i dont get where the heck to place the code to make use of that rootOptions.ConfigFile and read the config file using viper. i dont want to do it in the run command, since this is a global thing so should be done earlier, e.g. in the root command where i have the flag defined as well.
[22:22:13] *** Joins: jimcroft_______ (sid148498@id-148498.uxbridge.irccloud.com)
[22:22:56] <rawtaz> but it seems that if i put some code in the rootCmd.Run() then that isnt actually executed when on the command line i specify the run command - it's like the runCmd.Run() is run but not the rootCmd.Run().
[22:23:07] *** Quits: bw__ (sid2730@user/betawaffle) (Ping timeout: 250 seconds)
[22:23:15] <rawtaz> i guess this is a messy explanation even if it's rather accurate, and that i need to make an example?
[22:23:16] *** Joins: trollixx (sid289131@id-289131.uxbridge.irccloud.com)
[22:23:35] *** Joins: bw__ (sid2730@id-2730.ilkley.irccloud.com)
[22:23:38] *** Joins: jsvcycling (sid369784@id-369784.uxbridge.irccloud.com)
[22:24:21] *** Joins: obviyus (sid415299@user/obviyus)
[22:24:27] *** Joins: rockyh (~rockyh@user/rockyh)
[22:24:54] *** Joins: aarchi (sid486183@id-486183.uxbridge.irccloud.com)
[22:25:07] *** Joins: avery (sid501608@id-501608.uxbridge.irccloud.com)
[22:25:27] <lazyreader> I'd need to see actual code, but it wouldn't surprise me if cobra only runs the Run command once per invocation (at the highest level of specificity)
[22:26:31] <rawtaz> yeah. in short it seems to run Run() only on the command that was actually the "final" one on the command line, so e.g. if i do `prog run` instead of `prog` it runs the runCmd.Run() and not the rootCmd.Run()
[22:26:50] <rawtaz> (im printing a dummy text in each commands' Run() to see what executes)
[22:27:04] *** Joins: vds_ (sid12483@id-12483.helmsley.irccloud.com)
[22:27:11] *** Joins: eruditass (uid248673@id-248673.uxbridge.irccloud.com)
[22:27:18] *** Joins: theckman (sid295081@user/theckman)
[22:27:22] <rawtaz> howver i noticed now that if in the rootCmd i use PersistentPreRun() then that executes, before the runCmd's Run() executes. perhaps thats the way to do it.
[22:27:32] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:38b1:6c00:ef77:bdd5) (Quit: WeeChat 3.3)
[22:27:37] *** Joins: fdv (sid27570@id-27570.helmsley.irccloud.com)
[22:27:58] *** Joins: pl (sid98063@id-98063.helmsley.irccloud.com)
[22:28:12] *** Joins: hhes (sid420846@id-420846.ilkley.irccloud.com)
[22:28:19] *** Joins: itok_ (sid418430@id-418430.ilkley.irccloud.com)
[22:28:38] <lazyreader> depends, I suppose. There's also just putting it into your main() directly. the #cobra channel on the gophers slack might have suggestions on making it more idiomatically Cobra-y
[22:28:55] *** Joins: chimeracoder_ (sid230642@id-230642.helmsley.irccloud.com)
[22:29:02] <rawtaz> i dont think it's right though because apparently that function is "inherited" by the child command as well.
[22:29:13] <lazyreader> "The Persistent*Run functions will be inherited by children if they do not declare their own. These functions are run in the following order:"
[22:29:16] *** Joins: recursion (sid504862@id-504862.ilkley.irccloud.com)
[22:29:16] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[22:29:16] *** Joins: psb_ (sid500598@id-500598.ilkley.irccloud.com)
[22:29:23] <lazyreader> yeah was just about to point that out
[22:29:26] *** Joins: decartes_ (sid240036@id-240036.helmsley.irccloud.com)
[22:29:28] <rawtaz> yeah, i tried main() too, but it doesnt work. if i put it before the rootCmd.Execute() then the rootOptions isnt populated yet, and if i put it after, well then its too late :D
[22:29:34] <lazyreader> it's like you're nesting handlers
[22:29:41] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 256 seconds)
[22:30:00] <rawtaz> hm no #cobra or #cobra on here libera
[22:30:09] <rawtaz> ill make a super simple example to show what i mean
[22:30:30] <rawtaz> i think there has to be a simple answer to this
[22:30:32] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:30:45] *** Joins: Shrike (sid305680@id-305680.helmsley.irccloud.com)
[22:32:05] <lazyreader> yeah I didn't mean IRC, I was talking about the gopher slack https://invite.slack.golangbridge.org/
[22:32:17] <rawtaz> sorry
[22:32:18] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 260 seconds)
[22:32:22] <rawtaz> im not on slack :<
[22:32:30] <rawtaz> i would be if they didnt require registration
[22:32:37] *** Joins: redlegion (sid429547@id-429547.ilkley.irccloud.com)
[22:32:49] *** Joins: jzacsh[m]1 (~jzacshdax@2001:470:69fc:105::1:3a69)
[22:33:00] <b0nn> uhh, libera required registration
[22:33:03] <lazyreader> well I don't know what to tell you then, that's the link for support cobra provides on their README. most people here will probably be guessing
[22:33:08] <rawtaz> b0nn: no if doesnt
[22:33:14] <rawtaz> err it*
[22:33:30] *** Joins: flukes (sid527792@user/flukes)
[22:33:34] *** Joins: telemachus (sid2004@id-2004.helmsley.irccloud.com)
[22:33:36] <rawtaz> lazyreader: thats fine :D
[22:33:39] *** Joins: danmurf (uid480399@user/danmurf)
[22:33:45] <b0nn> Topic for #go-nuts: register to speak until the spam clears up
[22:33:51] *** Joins: liam_ (sid7517@id-7517.helmsley.irccloud.com)
[22:33:56] <b0nn> Is that no longer true?
[22:34:05] *** Joins: lebster (sid17131@id-17131.hampstead.irccloud.com)
[22:34:09] *** Joins: jzelinskie (sid17772@user/jzelinskie)
[22:34:15] <ikke> The initial spam has been gone for a while now
[22:34:19] <lazyreader> doesn't appear to be, channel is `+Ccnt`
[22:34:21] <rawtaz> b0nn: this channel, but not libera in general
[22:34:22] <b0nn> The registration part
[22:34:43] *** Joins: jakesyl_ (sid56879@id-56879.hampstead.irccloud.com)
[22:34:44] <lazyreader> none of those options mute unregistered users
[22:35:07] *** Joins: qaisjp (sid26374@user/qaisjp)
[22:35:12] <ikke> There is +q for $~a
[22:35:40] *** Joins: st3fan (sid43079@id-43079.lymington.irccloud.com)
[22:35:44] <ikke> So you still must be identified
[22:35:48] *** Joins: normen (~normen@p200300d7172e3900cd6f0b293612440c.dip0.t-ipconnect.de)
[22:36:05] *** Joins: dozn (uid249292@user/dozn)
[22:36:23] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[22:36:30] <rawtaz> i wasnt trying to start a fire, i just meant that slack in general requires you to register to join or talk (i dont remember which), and thats not something e.g. libera does. individual channels indeed to require registration to join them but thats a different matter in a sense
[22:36:36] *** Joins: rockyh (~rockyh@user/rockyh)
[22:36:54] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[22:37:06] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:37:13] *** Joins: justicefries (sid26447@id-26447.tinside.irccloud.com)
[22:37:53] *** Joins: hjmcnew____ (sid86092@id-86092.tinside.irccloud.com)
[22:38:11] *** Joins: cespare (sid330206@id-330206.hampstead.irccloud.com)
[22:38:43] *** Joins: Anderson-D (sid146635@id-146635.tinside.irccloud.com)
[22:38:49] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[22:38:50] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[22:38:55] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:39:20] *** Joins: Balooga (sid407689@id-407689.lymington.irccloud.com)
[22:39:28] *** Joins: nikki93 (sid200244@id-200244.tinside.irccloud.com)
[22:39:34] *** Joins: computerquip (sid423484@user/computerquip)
[22:39:36] *** Joins: nescafe1001 (sid211018@id-211018.tinside.irccloud.com)
[22:39:36] *** Joins: kapu (~kapu@user/egm)
[22:39:47] *** Joins: Duns_Scrotus (sid262565@id-262565.tinside.irccloud.com)
[22:39:48] *** Joins: kubblai (sid478659@fedora/kubblai)
[22:39:51] *** Joins: morgabra (sid500580@user/morgabra)
[22:39:51] *** Joins: hdm (sid500490@aha/hacker/hdm)
[22:39:53] *** Joins: maxamillion (sid276220@ansible/staff/maxamillion)
[22:39:55] *** Joins: mustafa (sid502723@rockylinux/releng/mustafa)
[22:39:57] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[22:40:15] *** Joins: seds (sid492514@user/seds)
[22:41:13] *** Joins: dreamcat4 (uid157427@id-157427.hampstead.irccloud.com)
[22:42:31] *** Parts: jon[m]123 (~jzacshzac@2001:470:69fc:105::1:39eb) ()
[22:43:24] *** Joins: pombreda (sid227801@id-227801.tinside.irccloud.com)
[22:43:52] *** Joins: eric_hill (sid323132@id-323132.tinside.irccloud.com)
[22:43:53] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[22:44:41] <rawtaz> i have a vague suspicion that i'm an idiot. trying to verify..
[22:44:58] <b0nn> If I have two types on either side of a software boundary, and both types match each other exactly (except, maybe in name) why can I not pass them interchangeably - it's a compile time check to ensure that they both match and are therefore (in my world) interchangeable
[22:45:52] <b0nn> I mean, I'm trying to take away the dependency that arises when you pass custom types across the boundary
[22:45:55] <rawtaz> no, i wasnt.
[22:47:11] *** Joins: dreistadt (sid501648@id-501648.lymington.irccloud.com)
[22:47:19] <rawtaz> b0nn: isnt it the "if they are different types, they are different types" thing?
[22:47:25] *** Joins: braxas_ (sid508886@id-508886.lymington.irccloud.com)
[22:49:04] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[22:49:13] *** Joins: jkovac1 (~jkovac1@user/jkovac1)
[22:49:27] *** mseidl is now known as flughafen
[22:49:38] <b0nn> ...
[22:49:57] *** Joins: strubbl891941988 (~strubbl@ipbcc1859d.dynamic.kabel-deutschland.de)
[22:50:07] <rawtaz> yeah sorry for wasting your time. must be horrible :)
[22:50:20] <b0nn> With you, I'm used to it
[22:51:11] <rawtaz> i guess one need an IQ of at least 150 to participate in this channel
[22:51:39] <b0nn> ^This is exactly the problem
[22:51:58] <j416> rawtaz: don't be discouraged
[22:53:08] <b0nn> rigading or otherwise encouraging or coordinating abusive online behavior.
[22:53:14] <b0nn> Brigading*
[22:54:02] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[22:54:53] <rawtaz> i think theres a bit of a language barrier here. are you thinking that "brigading or otherwise encouraging or coordinating abusive online behavior" is what im doing when i say e.g. "i guess one need an IQ of at least 150 to participate in this channel"? i dont understand how that comment is encouraging or coordinating abusive behavior :o
[22:55:01] <rawtaz> j416: no worries :)
[22:55:06] <j416> :)
[22:55:30] *** Joins: kiril (~kiril@85.91.153.163)
[22:58:26] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[23:00:28] *** Quits: normen (~normen@p200300d7172e3900cd6f0b293612440c.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[23:00:55] <flughafen> https://bpa.st/A4DQ   -> I don't know anything about go.  I'm trying to build prometheus postgres exporter.  If this isn't ok to ask about building an rpm then I'll go.
[23:02:25] <b0nn> loadinternal: cannot find runtime/cgo looks problematic
[23:03:00] <j416> flughafen: does this help? https://github.com/golang/go/issues/39321
[23:04:55] <b0nn> flughafen: I wonder what postgres library is being used, pgx is harder to compile than pq (for example)
[23:06:00] *** Joins: CoolerY (~CoolerX@user/coolerx)
[23:06:13] <flughafen> b0nn:I have no idea?
[23:06:35] <b0nn> oh, just have some code and you want it to run huh
[23:06:47] <b0nn> What's the link to the code?
[23:07:05] <flughafen> Not really. I am updating the package. I'll have to test the install works but that's it.
[23:07:07] *** Quits: jjhoo (~jahakala@user/jjhoo) (Remote host closed the connection)
[23:07:07] <b0nn> github.com/prometheus-community/postgres_exporter
[23:08:24] <flughafen> Yes, I've built it for SLES, and it worked, but on RHEL I'm having issues.
[23:08:35] <b0nn> It's using pq github.com/lib/pq v1.10.1
[23:09:19] <j416> flughafen: are you running this in a container? I remember Docker scratch containers don't support CGO (CGO is Go<>C bindings). Try alpine or ubuntu in that case.
[23:09:29] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[23:09:31] <rawtaz> igured it out. the way to do stuff before the commands execute in Cobra is to  cobra.OnInitialize(callbackfunctionhere)  which then executes that function before the command. in there one can read config files etc as needed.
[23:10:00] <flughafen> j416: No.  I'm using suse's OSC tools, I think it builds it in a chroot?
[23:10:32] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[23:10:48] <b0nn> pastebin `go env` from both machines
[23:12:00] <flughafen> b0nn: me?
[23:12:05] <b0nn> yea
[23:12:26] <b0nn> I wonder if the go version on RHEL is outdated/not setup
[23:12:59] <flughafen> It doesn't use GO from my machine.    It will isntall it from an rpm.     Plus i'm running leap 15.3
[23:14:01] <b0nn> Oh, you're building on the Suse machine then unable to deploy on the RHEL machine?
[23:16:00] <flughafen> (I work at SUSE) but I'm updating a package. I've already tested it on sles, but I'm having difficulties getting it built for RHEL.  We have to use lots of manual stuff as our suse macros don't work for redhat stuff.
[23:16:13] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[23:17:16] <b0nn> ok, yeah, I'm trying to get a fuller picture
[23:17:55] <flughafen> But, as I'm not a go guy, I'm fairly lost. Lol.
[23:17:55] <b0nn> it's weird that an update would break (implying that previous versions have worked)
[23:18:20] <b0nn> The problem in your error is the cgo build (which you need for DB stuffs)
[23:18:20] <flughafen> We've been bad about  updating. So this is jumping lots of versions.
[23:18:47] <b0nn> hmm do you need cgo for pq
[23:18:51] *** Quits: braxas (~braxas@ti0061a400-1478.bb.online.no) (Quit: braxas)
[23:18:51] *** braxas_ is now known as braxas
[23:19:45] <flughafen> is cgo like gccgo?
[23:20:08] <b0nn> nah, gccgo is a frontend for gcc that compiles go code IIRC
[23:20:23] <flughafen> ok.
[23:21:04] <flughafen> There was another error and a coworker had me add the linkmode=external to the promu.yml in the exporter.
[23:21:18] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 260 seconds)
[23:22:43] <b0nn> that sounds like an ldflag
[23:23:03] <flughafen> should i put the GCO=1 in there too?
[23:23:39] <b0nn> I mean, at this point giving cgo=1 and cgo=0 a try isn't going to cost your more time :)
[23:24:08] <b0nn> https://groups.google.com/g/golang-codereviews/c/eyzqYbyNlQY
[23:24:16] <flughafen> Where would i give the GCO normally?
[23:24:39] <b0nn> take away the linkmode flag
[23:24:54] <flughafen> ok.
[23:25:11] <b0nn> honestly though I'm feeling around in the dark at this point
[23:25:19] <b0nn> so I might not be actual help :)
[23:25:28] <flughafen> well it's more than I know.
[23:26:06] <b0nn> I wonder if you have to explicitly install the runtime/cgo
[23:26:21] <j416> flughafen: did you try CGO_ENABLED=1 ?
[23:26:29] <flughafen> Where should I put it j416
[23:26:52] <j416> flughafen: make it available to go build
[23:27:24] *** Joins: jjhoo (jahakala@user/jjhoo)
[23:27:39] <j416> flughafen: line 6
[23:28:13] <flughafen> Without the linkbuild=external it fails with this...  *** ERROR: No build ID note found in /home/abuild/rpmbuild/BUILDROOT/prometheus-postgres_exporter-0.10.0-0.x86_64/usr/bin/prometheus-postgres_exporter
[23:29:14] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[23:29:36] <flughafen> 81  LDFLAGS="$LDFLAGS -Wl,--build-id" GOPATH=${RPM_BUILD_DIR}/go GCO_ENEABLED=1 promu build -v
[23:30:23] <b0nn> You might need to run `go clean -cache` before running that build command
[23:32:05] <flughafen> https://fedoraproject.org/wiki/PackagingDrafts/Go#Build_ID   https://github.com/rpm-software-management/rpm/issues/367#issuecomment-350391947  <- about the build thing.
[23:32:13] <j416> flughafen: you need to spell it right for it to have any effect
[23:33:01] <j416> but I agree it would be handy if it just did what you meant instead of what you wrote
[23:33:11] <flughafen> Ha.
[23:34:01] <j416> I think cgo is enabled by default though so no high hopes that this will change anything
[23:34:01] *** Joins: normen (~normen@p200300d7172e3900cd6f0b293612440c.dip0.t-ipconnect.de)
[23:34:11] <j416> but, worth a shot
[23:34:31] <flughafen> https://bpa.st/EQ5A  <- whole build , it picked up the gco thing.
[23:34:42] *** Quits: rogersm (~rogersm@90.166.177.48) (Quit: Leaving...)
[23:34:47] <j416> flughafen: you still need to spell it right, though
[23:34:49] <flughafen> Maybe I should put the linkmode ldflag back?
[23:34:56] <b0nn> Yeah put that flag back
[23:36:16] *** Joins: arinov (~arinov@213.194.126.155)
[23:36:58] <flughafen> Oh, I missed the CGO,
[23:37:26] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1002)
[23:37:32] <j416> cgo is C (the language) + Go (the language)
[23:38:31] <flughafen>  loadinternal: cannot find runtime/cgo
[23:38:50] <flughafen> LDFLAGS="$LDFLAGS -Wl,--build-id" GOPATH=${RPM_BUILD_DIR}/go CGO_ENABLED=1 promu build -v
[23:42:01] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[23:43:30] <j416> aw.
[23:43:39] <j416> I'm out of ideas.
[23:44:13] <flughafen> Ok. Thanks for the help.
[23:45:29] <b0nn> FTR it builds fine on my machine (Ubuntu go version 17.3
[23:46:09] *** Quits: Thursday (~Thursday@user/thursday) (Quit: WeeChat 3.3)
[23:47:06] <flughafen> https://build.opensuse.org/package/show/home:mseidl81:branches:server:monitoring/prometheus-postgres_exporter  -> builds here too. (this is not the same spec now)
[23:52:45] <b0nn> flughafen: which RHEL version are you building for?
[23:53:49] <flughafen> I need to build for Rhel 7 and 8
[23:54:26] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[23:54:33] <b0nn> hmm, let's see if I can find my RH sub
[23:56:22] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1002) (Quit: ZNC 1.8.2 - https://znc.in)
[23:58:08] <flughafen> ok
[23:59:08] <b0nn> So, just so I'm not confused, you're building *on* the RHEL box, and then planning to put it into an RPM for deployment?
[23:59:51] <flughafen> No, it's building on sle
