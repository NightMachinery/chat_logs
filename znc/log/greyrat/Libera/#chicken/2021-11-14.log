[00:00:06] <Bunny351> so C_toplevel is defined. do you declare it in your C code that loads the DLL?
[00:00:57] <sjors> I tried to, but I don't know how to translate that definition into a valid typedef
[00:01:15] <sjors> Because I don't have a good understanding of what void C_ccall and C_noret do
[00:01:27] <Bunny351> just ignore those
[00:02:01] <Bunny351> C_word is a register-sized ptr
[00:03:26] <Bunny351> void C_toplevel(C_word c, C_word *av);
[00:03:43] <sjors> So if I use:
[00:03:43] <sjors> typedef void (*CTopLevel)(C_word c, C_word *av);
[00:03:44] <sjors> And then load it with
[00:03:44] <sjors> cTopLevel = (CTopLevel)GetProcAddress(gameLibraryModule, "C_toplevel");
[00:03:45] <sjors>   if(cTopLevel == NULL)
[00:03:45] <sjors>   {
[00:03:46] <sjors>     printf("Failed to get C_toplevel address!\n");
[00:03:46] <sjors>     return 1;
[00:03:47] <sjors>   }
[00:03:47] <sjors> and then
[00:03:48] <sjors> CHICKEN_run(cTopLevel);
[00:03:48] <sjors> the application crashes
[00:04:14] <Bunny351> crashes or gives an error?
[00:05:03] <sjors> I'm running from the command line, it just quits without any feedback
[00:05:25] <Bunny351> perhaps you need some __declspec(dllimport) magic?
[00:06:33] <Bunny351> check out the embedded* files in the tests directory of the chicken tarball
[00:07:12] <Bunny351> you can also try to put a "(return-to-host)" at the end of the scheme source code file that you compile into a DLL
[00:07:53] <Bunny351> it may be that the toplevel simply exits, because the return-to-host is missing
[00:13:32] <sjors> I think that was the problem, because it's working now
[00:13:39] <sjors> Thank you so much!
[00:14:03] <sjors> I've changed to the __declspec(dllimport) magic, but the real issue was probably (return-to-host) not being in the ifle
[00:14:50] <sjors> Foo still doesn't work, but at least now I can run the logic with C_toplevel
[00:16:21] <sjors> Foo still exits the application
[00:18:16] <sjors> Actually, it doesn't. I was just calling it from Scheme instead of C lol
[00:18:22] <sjors> It seems to work fine now. :D
[00:19:05] <sjors> You've been extremely helpful
[00:21:45] *** Quits: sjors (~sjors@64-56-178-143.ftth.glasoperator.nl) (Quit: Client closed)
[00:22:10] <Bunny351> vandusen: VICTORY!
[00:22:13] <vandusen> Bunny351: "Errgh," he grunted, just like I said!
[00:28:36] *** Joins: klovett (~klovett@166.205.90.177)
[00:46:47] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[00:54:10] *** Joins: monkey_ (~user@190.104.116.153)
[01:44:08] *** Quits: monkey_ (~user@190.104.116.153) (Quit: ERC (IRC client for Emacs 27.2))
[01:49:34] *** Quits: mononote (~mononote@user/mononote) (Read error: Connection reset by peer)
[02:23:07] *** Joins: klovett_ (~klovett@166.205.90.177)
[02:25:58] *** Quits: klovett (~klovett@166.205.90.177) (Ping timeout: 260 seconds)
[03:14:22] *** Joins: ublx (~ublx@user/ublx)
[03:34:20] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[03:34:48] *** Joins: ublx (~ublx@user/ublx)
[03:48:51] *** Joins: mononote (~mononote@user/mononote)
[04:36:21] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:f999:7dbf:ab48:5803) (Ping timeout: 245 seconds)
[04:44:35] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:f999:7dbf:ab48:5803)
[04:48:43] *** Joins: Worm (~Worm@c-76-127-12-150.hsd1.nm.comcast.net)
[04:48:49] *** Parts: Worm (~Worm@c-76-127-12-150.hsd1.nm.comcast.net) ()
[04:58:51] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:f999:7dbf:ab48:5803) (Ping timeout: 245 seconds)
[05:01:46] *** Quits: klovett_ (~klovett@166.205.90.177) (Ping timeout: 245 seconds)
[05:30:21] *** Quits: cornett_ (~ben@149.28.239.26) (Quit: WeeChat 2.9)
[07:41:56] <vandusen> [eggs repo (r40911, by kon)] fix path-iterator termination
[07:42:33] <vandusen> [eggs repo (r40912, by kon)] rel 2.1.3
[07:44:03] <vandusen> [eggs repo (r40913, by kon)] rel 2.1.3
[08:03:09] *** Joins: s-liao (~s-liao@101.86.101.64)
[08:11:46] <vandusen> [eggs] levenshtein version 2.1.3 (for CHICKEN 5) has been released
[08:15:50] *** Quits: wxallowed (~d4@151.51.135.32) (Quit: leaving)
[09:07:15] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[09:40:30] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[09:58:55] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:32:04] *** Joins: s-liao (~s-liao@101.86.101.64)
[10:41:34] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 260 seconds)
[12:04:08] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[12:48:25] *** Joins: mononote (~mononote@user/mononote)
[12:58:02] *** Quits: sandra (~snan@chicken/contributor/snan) (Remote host closed the connection)
[12:58:38] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:f999:7dbf:ab48:5803)
[13:15:30] *** Joins: s-liao (~s-liao@101.86.101.64)
[13:15:43] *** Quits: s-liao (~s-liao@101.86.101.64) (Client Quit)
[13:31:26] *** Joins: s-liao (~s-liao@101.86.101.64)
[14:12:52] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[14:13:04] *** Joins: s-liao (~s-liao@101.86.101.64)
[14:29:07] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[14:29:25] *** Joins: s-liao (~s-liao@101.86.101.64)
[15:17:26] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[15:42:58] *** Quits: retropikzel (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi) (Remote host closed the connection)
[15:43:24] *** Joins: retropikzel (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi)
[15:52:09] *** Joins: s-liao (~s-liao@101.86.101.64)
[16:02:12] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[16:28:38] *** Quits: retropikzel (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:28:59] *** Joins: retropikzel (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi)
[16:30:56] *** Quits: retropikzel (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi) (Remote host closed the connection)
[16:31:08] *** Joins: retropikzel_ (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi)
[16:46:06] *** Joins: s-liao (~s-liao@101.86.101.64)
[16:47:27] *** Joins: retropikzel__ (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi)
[16:47:37] *** Quits: retropikzel_ (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi) (Remote host closed the connection)
[16:57:04] *** Joins: sjors (~sjors@64-56-178-143.ftth.glasoperator.nl)
[16:58:24] <sjors> Is there a nice way to update an immutable record? I would really like to return a copy of the record with one or more fields changed. I want to avoid using mutation if possible.
[16:59:17] <wasamasa> the SML way is to write a procedure creating a new record using the fields of the old one except the different ones
[17:03:06] <sjors> I think that could get extremely verbose with larger records. Other functional languages provide nice syntactic sugar like: let myRecord3 = { myRecord2 with Y = 100; Z = 2 }
[17:03:36] *** Quits: retropikzel__ (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:05:05] <sjors> I guess I'd have to write methods for updating every field and then manually insert the old data field by field in each of those methods. I'm particularly worried about the work it creates if I change the original record's structure
[17:06:51] <sjors> Maybe I should write some kind of macro for it?
[17:07:49] <wasamasa> consider checking out SRFI-99 and friends
[17:19:50] <sjors> I will, thank you wasamasa
[17:22:37] *** Quits: sjors (~sjors@64-56-178-143.ftth.glasoperator.nl) (Quit: Client closed)
[17:42:38] *** Joins: ublx (~ublx@user/ublx)
[17:51:10] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[17:52:39] *** Joins: s-liao (~s-liao@101.86.101.64)
[17:58:21] *** Joins: klovett (~klovett@70.39.110.107)
[18:35:50] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[18:47:52] <vandusen> "freee" pasted "freee" http://paste.call-cc.org/paste?id=f968fdc11945c4ea943509664535a30f1a4cb51b
[18:47:53] <judybot> vandusen: spam f968fdc11945c4ea943509664535a30f1a4cb51b
[18:47:54] <vandusen> judybot: I have deleted 1 paste(s) with hash f968fdc11945c4ea943509664535a30f1a4cb51b successfully.
[19:05:34] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 260 seconds)
[19:07:01] *** Joins: johnjay (~pi@192.142.100.50)
[19:14:55] <vandusen> "freeee" pasted "freee" http://paste.call-cc.org/paste?id=557e7b82ebc9631ba40a59c77b3183ad40fda055
[19:14:55] <judybot> vandusen: spam 557e7b82ebc9631ba40a59c77b3183ad40fda055
[19:14:55] <vandusen> judybot: I have deleted 1 paste(s) with hash 557e7b82ebc9631ba40a59c77b3183ad40fda055 successfully.
[19:21:05] <Bunny351> defstruct has functional record update
[19:26:44] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 256 seconds)
[19:30:29] *** Joins: johnjay (~pi@192.142.100.50)
[19:39:20] *** Joins: monkey_ (~user@190.104.116.153)
[19:58:01] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 245 seconds)
[20:00:13] *** Joins: johnjay (~pi@192.142.100.50)
[20:05:11] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 264 seconds)
[20:06:29] *** Joins: johnjay (~pi@192.142.100.50)
[20:15:08] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[20:18:02] *** Joins: monkey_ (~user@190.104.116.153)
[20:24:58] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[20:27:06] *** Joins: monkey_ (~user@190.104.116.153)
[20:41:25] *** Joins: aportnoy (~aportnoy@mobile-166-172-123-171.mycingular.net)
[20:41:50] *** Quits: aportnoy (~aportnoy@mobile-166-172-123-171.mycingular.net) (Changing host)
[20:41:50] *** Joins: aportnoy (~aportnoy@user/aportnoy)
[21:18:56] *** Quits: aportnoy (~aportnoy@user/aportnoy) (Ping timeout: 256 seconds)
[21:22:06] *** Joins: alexshendi (~alexshend@2a00:20:901f:ed6c:48f:cf87:5754:b8c)
[21:22:45] <alexshendi> Hello, #chicken!
[21:23:33] <rgherdt> hi
[21:25:43] *** Quits: FragmentedCurve (~FC@pool-100-2-232-17.nycmny.fios.verizon.net) (Quit: leaving)
[21:36:58] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b1d7:e14b:5957:fa7f)
[21:36:58] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b1d7:e14b:5957:fa7f) (Changing host)
[21:36:58] *** Joins: skapata (~Skapata@user/skapata)
[22:05:46] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[22:29:28] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Read error: Connection reset by peer)
[22:41:13] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 265 seconds)
[22:44:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[22:45:04] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b1d7:e14b:5957:fa7f)
[22:45:04] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b1d7:e14b:5957:fa7f) (Changing host)
[22:45:04] *** Joins: skapata (~Skapata@user/skapata)
[23:36:36] *** Joins: alexshe32 (~alexshend@2a02:8070:8796:7600:8848:51c7:564f:485a)
[23:38:54] *** Quits: alexshendi (~alexshend@2a00:20:901f:ed6c:48f:cf87:5754:b8c) (Ping timeout: 268 seconds)
[23:40:32] *** Joins: ublx (~ublx@user/ublx)
