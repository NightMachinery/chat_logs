[00:03:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[00:03:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:10:47] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Ping timeout: 246 seconds)
[00:13:14] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[00:18:31] *** Joins: magla (~gelignite@55d450ea.access.ecotel.net)
[00:21:43] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Read error: Connection reset by peer)
[00:26:59] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[00:28:38] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:f81b:729b:7ef0:993) (Ping timeout: 260 seconds)
[00:30:25] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[00:33:08] <daemon> hey all I am not so good with redir's I am trying to use IPC::Run to run a background program and capture stdout and stderr in their own queues: https://dpaste.org/afZc
[00:33:08] <Paperbot> Link title(s): [ dpaste/afZc (Perl) ]
[00:33:16] <daemon> is as far as I can get at the moment, any pointers would be helpful
[00:36:26] <daemon> looking at it maybe ipc::run3 would be the better option
[00:36:30] <pragma-> dodigly
[00:37:39] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[00:38:42] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Ping timeout: 272 seconds)
[00:39:10] *** Quits: subie (~subie@2601:4c0:4080:bc0::4) (Ping timeout: 260 seconds)
[00:40:41] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[00:41:05] *** Joins: subie (~subie@c-68-35-254-134.hsd1.fl.comcast.net)
[00:41:38] * pragma- still uses IPC::Open3
[00:43:43] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[00:44:19] <daemon> hmm
[00:44:21] <daemon> let me give that a whirl
[00:45:26] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:45:27] <daemon> ooh it has an example of writing the stdout/stderr
[00:45:29] <daemon> this might be a winner
[00:45:46] <pragma-> I'm not entirely sure why you have '<pty<' and '>pty>' but I am not intimately familiar with IPC::Run.
[00:45:54] <daemon> me neither
[00:46:03] <daemon> I started writing this script months ago
[00:50:29] <daemon> hmm pragma- so how would you use IPC::Open3 to run a command and push the childs stdout and stderr to an @array
[00:50:36] <daemon> @stdout and @stderr for instance
[00:52:09] * GumbyPAN CPAN Upload: Chart-2.400.6 by LICHTKIND https://metacpan.org/release/LICHTKIND/Chart-2.400.6
[00:53:43] *** Quits: subie (~subie@c-68-35-254-134.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[00:54:59] *** Joins: mexijoe (~mexijoe@13.sub-174-204-205.myvzw.com)
[00:55:21] *** Joins: subie (~subie@c-68-35-254-134.hsd1.fl.comcast.net)
[00:57:01] *** Quits: magla (~gelignite@55d450ea.access.ecotel.net) (Quit: Stay safe!)
[01:00:23] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:18ec:9063:4133:b132)
[01:01:35] <pragma-> IIRC, with Open3 you just get it all at once when the command completes.
[01:02:04] <daemon> just playing with it in a test script seems easier to use than IPC::Run
[01:02:35] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 246 seconds)
[01:03:25] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[01:03:37] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[01:03:50] <pragma-> daemon: using IPC::Run to "pump" the streams while the command runs, I used this: https://github.com/pragma-/pbot/blob/master/lib/PBot/Plugin/RunCommand.pm#L51-L66
[01:03:50] <Paperbot> Link title(s): [ pbot/RunCommand.pm at master · pragma-/pbot · GitHub ]
[01:04:22] <Grinnz> i recommend IPC::Run3, Open3 requires knowing exactly what you're doing and even I fuck it up
[01:04:35] <pragma-> Not entirely sure if it's correct but it seems to work for me.
[01:05:06] *** Joins: jpn (~jpn@user/jpn)
[01:05:06] <Grinnz> pragma-: are you sure you're not talking about Run3? Open3 just gives you handles
[01:06:04] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[01:06:40] <Grinnz> daemon: Run3 doesn't work async though, it uses temp files and blocks until the command is done - if you need to work async I would just go IO::Async::Process, or run_process in IO::Async::Loop
[01:06:50] *** Joins: rgrinberg (~textual@177.248.156.216)
[01:06:53] <Grinnz> which is an IO::Async::Process wrapper
[01:08:19] <daemon> Grinnz, to many deps, even though comically the main program is written in async
[01:08:28] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[01:08:29] <daemon> what I am writing now is an init system for docker images
[01:08:36] <daemon> so need to keep it as tight and light as possible
[01:08:57] <Grinnz> this sort of thing is not conducive to low level tools
[01:09:01] <Grinnz> so, good luck
[01:09:08] <daemon> suppose could just use select
[01:09:35] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 246 seconds)
[01:09:36] *** Quits: lkw (~lkw@user/lkw) (Remote host closed the connection)
[01:10:49] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[01:11:09] <LeoNerd> Process manangement via select() is not fun. See SIGCHLD
[01:11:35] *** Quits: subie (~subie@c-68-35-254-134.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[01:12:16] <daemon> LeoNerd, I am aware I just can't see much other option without bringing in big guns like perl or async which I really do not want to do for this task
[01:12:28] <daemon> I expected there would be a nice small simple module for such a task
[01:13:46] <Grinnz> your optimism is cute
[01:13:51] <daemon> :|
[01:14:03] *** Quits: proller (~p@2a02:6b8:b081:b587::1:26) (Ping timeout: 260 seconds)
[01:14:07] *** Joins: subie (~subie@2601:4c0:4080:bc0:ca0f:1d28:f742:47b5)
[01:14:23] <Grinnz> IPC::Run3 is about as small and simple as you can get, and it's kinda weird itself
[01:14:44] <daemon> that was what I tried to use in the first place but I could not quite figure out how the heck to get it to split stderr and stdout
[01:14:53] <Grinnz> erm, it always splits them
[01:15:00] <Grinnz> the problem is just you can't use it async
[01:15:13] *** Joins: jpn (~jpn@user/jpn)
[01:15:31] <Grinnz> run3 \@cmd, undef, \my @stdout, \my @stderr;
[01:15:37] <daemon> just checking how you are using async here, what I need is to be able to launch a process and read its stdout and stderr
[01:15:53] <daemon> I do not need to deal or push to it via stdin or anything
[01:15:55] <Grinnz> ok, if you don't need async then what i just wrote is literally all you need, it will block till it's done
[01:16:14] <daemon> wait that's the thing though the parent program still has to run
[01:16:18] <daemon> and read those buffers
[01:16:28] <Grinnz> while the child is running?
[01:16:30] <daemon> yes
[01:16:33] <Grinnz> then you do need async
[01:16:49] <daemon> and IPC::run3 cannot do that right
[01:16:52] <Grinnz> correct
[01:16:58] <daemon> infact nothing small and light can
[01:17:06] <daemon> except opening file handles yourself and using select
[01:17:10] <daemon> and dealing with all that crap
[01:17:12] <Grinnz> you could do it yourself with IPC::Open3 possibly but it'll be complex
[01:17:22] <Grinnz> you'll need some sort of event loop like select yes
[01:17:36] * daemon sigh
[01:17:46] <Grinnz> IPC::Run also might be able to do it, i havent used it much
[01:17:55] <daemon> https://metacpan.org/pod/IO::Select
[01:17:57] <Paperbot> Link title(s): [ IO::Select - OO interface to the select system call - metacpan.org ]
[01:17:59] <daemon> it does not look to bad
[01:18:25] <daemon> I am aware that is not select and a wrapper
[01:18:34] <daemon> but if someone made it easier, im certainly using that option
[01:19:56] <LeoNerd> Hah
[01:20:00] <daemon> I still need to open a program as a filehandle though
[01:20:09] <LeoNerd> IO::Select is -worse- than plain select()
[01:20:12] <Grinnz> yes, IPC::Open3 would do that
[01:20:19] <Grinnz> and give you separate handles for stdout and stderr
[01:20:22] <daemon> LeoNerd, hold on its meant to be a wrapper how can it be worse
[01:20:25] <LeoNerd> The problem you'll have is SIGCHLD, really
[01:20:35] <Grinnz> you then would have to manage those handles yourself, and manage SIGCHLD/waitpid yourself
[01:20:46] <daemon> im used t osigchild thanks to poe wheel run
[01:20:51] <LeoNerd> I think it must have been designed by someone who'd never used select()
[01:20:56] <daemon> wonderful
[01:21:14] <Grinnz> you can also just use teh core function select(), it's just a little weidr
[01:21:32] <daemon> I assume the core select() is derived from c
[01:21:42] <LeoNerd> Yeah honestly, actual select() is nicer and easier than IO::Select
[01:22:00] <daemon> ok dokey, so we are running with IPC::Open3 and select()
[01:22:05] <Grinnz> it is basically POSIX select yes
[01:22:06] <daemon> this will be ... interesting
[01:22:12] * GumbyPAN CPAN Upload: Chart-2.400.7 by LICHTKIND https://metacpan.org/release/LICHTKIND/Chart-2.400.7
[01:22:23] <daemon> luckily my little test with IPC::Open3 did run the program, so good news there
[01:22:28] <daemon> lets see what select requires
[01:22:29] <LeoNerd> I imagine you don't care about Windows or other non-UNIX
[01:22:48] <daemon> nope its for docker so I doubt it will ever be used on anything non linux
[01:22:58] <daemon> just a quick check though
[01:23:10] <LeoNerd> It's a shame you're set on no-modules
[01:23:13] <daemon> Grinnz, what is the support for async like in regards to fatpacker and windows
[01:23:25] <Grinnz> for async?>
[01:23:29] <LeoNerd> Linux in particular has much nicer stuff for async process management
[01:23:42] <Grinnz> async is a paradigm
[01:23:58] <daemon> very well the async framework
[01:24:06] <Grinnz> you mean IO::Async?
[01:24:07] <LeoNerd> "the"?
[01:24:11] <daemon> yep
[01:24:24] <Grinnz> please call it IO::Async, it is not "async"
[01:24:45] <daemon> would IO::Async::Loop and its counterpart modules be fatpackable and usable on anything non linux?
[01:24:57] <Grinnz> it should be fatpackable, i have no idea if the fatpack would work on windows
[01:25:07] <LeoNerd> "async" is a concept; much like "objects" or "functional" or "databases"
[01:25:20] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Ping timeout: 246 seconds)
[01:25:26] <Grinnz> it may require a pretty recent perl for the Socket deps and such
[01:25:28] <daemon> fatpack does work on windows generally as long as there is no XS modules of course
[01:26:16] <daemon> select does not look so bad I was concerned
[01:26:24] <Grinnz> looks like perl 5.18+ should be able to run a fatpacked IO::Async
[01:26:54] <daemon> I will have to give that a go, if I can't get select/ipc::open3 to work, fatpackign an IO::Async bootloader might be saner
[01:27:38] <daemon> I doubt it will ever see one of the native ms-win docker things, be cool if it did work though
[01:28:02] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[01:32:51] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[01:36:55] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[01:40:39] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Ping timeout: 260 seconds)
[01:41:50] *** Quits: rgrinberg (~textual@177.248.156.216) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:42:32] *** Joins: rgrinberg (~textual@177.248.156.216)
[01:43:13] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[01:45:23] *** Joins: hurl (~hurl@212.183.219.210.dyn.user.ono.com)
[01:46:01] *** Joins: jpn (~jpn@user/jpn)
[01:48:51] <daemon> is there anyway I can make a fake filehandle that I can link to an subroutine
[01:51:12] <LeoNerd> ?
[01:51:49] <daemon> I got ipc::open3 to do what I want, but it is in effect opening the STDERR and STDOUT of the parent directly
[01:52:08] <daemon> what I would preffer is that instead of writing to their it wrote to a filehandle that in effect triggered a subroutine on the parent
[01:53:07] <LeoNerd> I'm really not sure I follow
[01:53:43] <daemon> ok I am passing STDERR and STDOUT as options to open3(IPC::Open3) so the child is writing directly to the parents stdout and stderr
[01:54:22] <daemon> I would rather however that instead of doing that, it wrote to a 'fake' file handle that instead of writing to a file or pipe it simple wrote to a subroutine in the parent
[01:55:00] <LeoNerd> what does "writing to a subroutine" even mean??
[01:55:30] <daemon> when the child writes to its stdout, call a subroutine in the parent with whatever was being written
[01:55:35] <daemon> out outputted
[01:55:40] <daemon> or outputted*
[01:56:54] <hurl> you need a pipe to send data between two processes
[01:56:58] <LeoNerd> Right. So, no.. That's exactly the sort of thing that things like IO::Async give you
[01:57:04] <daemon> ah so I need to use filehandle::pipe
[01:57:08] <LeoNerd> If you aren't using that you'll have to glue all the individual bits together yourself
[01:59:38] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Ping timeout: 260 seconds)
[02:01:52] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[02:02:16] * GumbyPAN CPAN Upload: Chart-2.400.8 by LICHTKIND https://metacpan.org/release/LICHTKIND/Chart-2.400.8
[02:15:11] *** Quits: aspic (~shifty~~~@1.145.11.230) (Read error: Connection reset by peer)
[02:17:52] <daemon> ... ok lost again: https://dpaste.org/kj6i what is wrong here
[02:17:52] <Paperbot> Link title(s): [ dpaste/kj6i (Perl) ]
[02:18:02] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:18ec:9063:4133:b132) (Read error: Connection reset by peer)
[02:18:54] <daemon> will open3 only accept the classical GLOBAL style file handles or something insane
[02:19:58] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:21:12] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[02:21:19] <daemon> ok ... that is precisely what it is
[02:21:26] <daemon> I just dropped strict and warnings and sure enough
[02:21:28] <daemon> it works perfectly
[02:21:34] *** Joins: fling (~fling@user/fling)
[02:21:35] <daemon> 0_o is there a work around for this
[02:22:17] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 250 seconds)
[02:22:45] <daemon> oh no its not just that ah I see
[02:23:06] <daemon> I can get away with using bare filehandles with strict and warnings; but I have to use open my self not use tempfile
[02:23:48] <daemon> I assumed that the filehandle returned by tempfile could be shoved into a bare handle but obviously not
[02:23:56] <daemon> but why on earth does it have to be a bare filehandle
[02:30:35] <gordonfish> Bare filehandles? What is this, 1999?
[02:30:59] <daemon> yeah that was what I was thinking
[02:31:24] <daemon> I have not seen a bare filehandle for years
[02:31:33] <daemon> but for whatever reason it wont accept a $filehandle
[02:31:59] <daemon> unless I am missing something
[02:32:10] <daemon> https://dpaste.org/kj6i
[02:32:10] <Paperbot> Link title(s): [ dpaste/kj6i (Perl) ]
[02:32:18] <daemon> if you have any idea, it would be welcome :)
[02:32:42] <daemon> basically I changed the one using $filehandle to some bare handles FHO and FHE
[02:32:45] <daemon> then it did work
[02:34:35] *** Quits: hurl (~hurl@212.183.219.210.dyn.user.ono.com) (Quit: Leaving...)
[02:35:14] <gordonfish> daemon: I'm on mobile but I seem to recall it should be open3(undef, \$stderr_fh, \$stdout_fh, ....)
[02:35:24] <daemon> ah a reference to
[02:35:27] <daemon> let me give that a whirl
[02:36:03] *** Quits: rgrinberg (~textual@177.248.156.216) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:36:20] * GumbyPAN CPAN Upload: Chart-2.400.9 by LICHTKIND https://metacpan.org/release/LICHTKIND/Chart-2.400.9
[02:36:50] <daemon> Not a GLOB reference at /usr/lib64/perl5/5.34/IPC/Open3.pm line 165.
[02:36:54] <daemon> apparently not :(
[02:38:08] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 246 seconds)
[02:38:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:39:00] <Grinnz> daemon: yeah IPC::Open3 was written for bareword handles :|
[02:39:06] <daemon> how is that even possible
[02:39:15] <Grinnz> because 'my' didn't exist when it was written
[02:39:28] <daemon> but I thought the scalar version $fh was a direct replacement
[02:39:35] <daemon> as in implemented all the same traits
[02:39:46] <Grinnz> not the specific things that interface relieson
[02:39:58] <Grinnz> however, if it's a real handle (i.e. not in-memory) you can pass the fileno of it
[02:40:20] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[02:40:38] <Grinnz> that should work regardless of global or lexical handles
[02:40:40] <daemon> this is a real filehandle, 'fileno'? never seen that term before
[02:40:50] <Grinnz> https://perldoc.perl.org/functions/fileno
[02:40:50] <Paperbot> Link title(s): [ fileno - Perldoc Browser ]
[02:40:59] <gordonfish> sweval: use IPC::Open3; my $p = open3 undef, my $o, my $e, perl => -E, 'print 123'; waitpid $p, 0; print while <$o>;
[02:41:00] <perlbot> gordonfish: 123
[02:41:25] <Grinnz> right, that works in the normal case, not in the dup case
[02:41:36] <gordonfish> Looks like open3 expects the handle variables to be empty, at least in the synopsis they are declared right there
[02:41:48] <Grinnz> oh, you're trying to pass it open handles
[02:41:50] <Grinnz> that won't work
[02:42:04] <daemon> so I think I can use a normal open or File::Temp and use fileno($filehandle) and it should be happy with that
[02:42:07] <Grinnz> this is what i was talking about with IPC::Open3 not being user friendly
[02:42:07] <gordonfish> yeah it passes handles to opened temp files
[02:42:42] <daemon> it's just weird I thought we would have got rid or updated ancient weirdness like this
[02:42:56] <Grinnz> we did, it's called "writing less shitty interfaces on CPAN"
[02:43:06] <daemon> I honestly thought nowhere required baer filehandles
[02:43:14] <daemon> anywhere in core
[02:43:25] <Grinnz> several things in core do
[02:43:27] <daemon> though fileno at least looks like it can resolve that problem
[02:43:34] <Grinnz> mainly for naming reasons, because they made bad assumptions
[02:43:49] <gordonfish> From what I can see, open3 expects the handles to be read after the open3 call, so print $stdout_fh $_ while <$o_from_open3> or something like that
[02:44:00] <Grinnz> gordonfish: that can lead to deadlocking
[02:44:05] <daemon> and it does!, thank you Grinnz 
[02:44:13] <Grinnz> that's why you need an event loop to read STDOUT and STDERR as they become active
[02:44:13] <daemon> Grinnz++ # fileno++
[02:44:16] <gordonfish> daemon: Also, your open3(undef, $stderr_fh, $stdout_fh have err and out in the wrong order
[02:44:23] <gordonfish> has
[02:45:03] *** Joins: clf059 (~clf059@2603:3023:a2b:a800:5dcb:29b9:b26d:4ee1)
[02:45:11] <daemon> gordonfish, ah was not really paying to much attention was just figuring out the quirks, I actually have what I need in a fashion, not ideal but good enough; now I got rid of those bare filehandles im good to tidy up, good spot though thank you
[02:45:16] <daemon> gordonfish++ # master of order
[02:45:22] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[02:46:09] *** Quits: clf059 (~clf059@2603:3023:a2b:a800:5dcb:29b9:b26d:4ee1) (Client Quit)
[02:54:09] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:56:15] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 260 seconds)
[02:56:22] * GumbyPAN CPAN Upload: Chart-2.400.10 by LICHTKIND https://metacpan.org/release/LICHTKIND/Chart-2.400.10
[02:56:29] <gordonfish> sweval: use File::Temp 'tempfile'; my ($h, $n) = tempfile; close $h; system qq{perl -E 'print q{abc}' 1>$n}; print 'From temp: '. `cat $n`; # From the quick-n-dirty-dept.
[02:56:31] <perlbot> gordonfish: Out of memory! [Exited 1]
[02:56:33] <gordonfish> sweval: use File::Temp 'tempfile'; my ($h, $n) = tempfile; close $h; system qq{perl -E 'print q{abc}' 1>$n}; print 'From temp: '. `cat $n`; # From the quick-n-dirty-dept.
[02:56:35] <perlbot> gordonfish: From temp: abc
[02:56:53] *** Joins: whynot (~whynot@37.73.105.106)
[02:57:01] <gordonfish> (perlbot sure does seem to be getting a lot of OOM errors today # simcop2387)
[02:58:49] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[03:03:19] <gordonfish> sweval: use IPC::Run 'run'; use File::Temp 'tempfile'; my ($h, $n) = tempfile; run [perl => -E => 'print q{abc}'], '>', $h or die $!; print 'From temp: '. `cat $n`;
[03:03:21] <perlbot> gordonfish: From temp: abc
[03:03:26] <gordonfish> daemon: ^
[03:06:09] <gordonfish> sweval: use IPC::Run 'run'; use File::Temp 'tempfile'; my ($h, $n) = tempfile; run [perl => -E => 'print q{abc}'], '>', $h or die $!; print 'From temp: '; seek $h, 0, 0; print while <$h>;
[03:06:10] <perlbot> gordonfish: From temp: abc
[03:06:23] * GumbyPAN CPAN Upload: Test2-Harness-1.000116 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-1.000116
[03:07:03] *** Joins: Moonlight (~root@c-76-105-102-152.hsd1.ga.comcast.net)
[03:07:26] <daemon> gordonfish, ta
[03:07:32] <Moonlight> Howsit! Just got off work. On the phone with system techs on account of HW failure under warranty.
[03:07:56] <gordonfish> Moonlight: What sorta hardware was it?
[03:24:41] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[03:26:08] <daemon> if I was to open a filehandle to a file that was continuously being appended to, what would I need to do, to read some data, go do something else (while in the same scope of the file handle being opened so it does not go out of scope) then continue reading later on?
[03:26:25] * GumbyPAN CPAN Upload: Data-Tools-1.27 by CADE https://metacpan.org/release/CADE/Data-Tools-1.27
[03:26:28] <daemon> is this where seek gets involved?
[03:28:31] *** Quits: Moonlight (~root@c-76-105-102-152.hsd1.ga.comcast.net) (Quit: Lost terminal)
[03:30:50] *** Quits: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[03:32:58] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 260 seconds)
[03:33:59] *** Joins: pizdets_ (~pizdets@183.182.111.52)
[03:34:03] *** Quits: pizdets (~pizdets@183.182.110.250) (Ping timeout: 260 seconds)
[03:34:46] <Grinnz> no, the handle will keep its position
[03:37:02] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Ping timeout: 260 seconds)
[03:37:12] *** Joins: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host)
[03:37:30] <daemon> ah so I can just grab a quick my $next_line = <$fh>;
[03:37:51] <daemon> hmm does that block if it cannot get a line I wonder
[03:38:51] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[03:38:57] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[03:39:15] <Grinnz> if it's a socket, yeah
[03:39:28] <daemon> ok it reads the first line then reads not others
[03:39:31] <daemon> no its a filehandle
[03:39:35] <daemon> to a text document
[03:39:44] <Grinnz> oh good, so this is even more complicated :P
[03:39:52] <daemon> :)
[03:39:59] <Grinnz> i would recommend https://metacpan.org/pod/IO::Async::FileStream but yeah
[03:40:00] <Paperbot> Link title(s): [ IO::Async::FileStream - read the tail of a file - metacpan.org ]
[03:40:03] <daemon> I just assumed I could suck a line in then use seek with that line length
[03:40:09] <daemon> to put the position in the right place
[03:40:11] <daemon> but apparently not
[03:40:24] <Grinnz> anything you read will seek as much as it reads
[03:40:35] <daemon> it seems to only read the first line and no others
[03:40:42] <daemon> though if I tail that very file I can see it very clearly growing
[03:40:50] <Grinnz> yes, because it probably hit eof
[03:41:03] <Grinnz> this sort of weirdness is why i'd use that module
[03:41:25] <daemon> can I tell open to recalculate the size of the file
[03:41:32] <daemon> or do I need to close the handle, re open it then seek it
[03:41:36] <Grinnz> size isn't the problem
[03:41:39] <Grinnz> it got an EOF
[03:41:54] <daemon> that would be correct at the time of reading it there was only a single line
[03:42:00] <daemon> the file is expanding by 1 line per second
[03:42:05] <daemon> the read is also 1 read per second
[03:42:17] <Grinnz> maybe you could seek to the current position to clear the eof? i have no idea if it works that way
[03:42:29] <Grinnz> aha, end of https://perldoc.perl.org/functions/seek discusses this exact thing
[03:42:30] <Paperbot> Link title(s): [ seek - Perldoc Browser ]
[03:42:45] <Grinnz> so yeah you want a dummy seek to current position
[03:42:54] <daemon> ah cool! thank you
[03:42:55] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[03:43:05] <daemon> Grinnz++ # pro seeking
[03:43:35] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 246 seconds)
[03:51:42] *** Quits: jpn (~jpn@user/jpn) (Quit: Lost terminal)
[03:52:18] <daemon> ok enough masochism time for sleep
[03:52:19] <daemon> night all :)
[03:58:16] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[04:07:19] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[04:09:19] *** Joins: mixfix41 (~homefame@user/mixfix41)
[04:12:42] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[04:14:48] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[04:19:49] *** Joins: deadmarshal_ (~deadmarsh@95.38.116.113)
[04:24:18] *** Quits: deadmarshal_ (~deadmarsh@95.38.116.113) (Ping timeout: 260 seconds)
[04:29:26] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Remote host closed the connection)
[04:41:18] *** Joins: auwooo (~0day@2001:448a:1082:fe6f:39d8:f7b2:9b01:9927)
[04:44:11] <ology> Masochism Driven Programming
[04:45:09] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:47:53] <mmlj4> how do I report problems with a CPAN module? Test2::Plugin::NoWarnings won't build, lots of warnings (Prototype mismatch) and a couple of Use of uninitialized value ($file and $module)
[04:48:30] <mmlj4> and this at the end:   1..0 # SKIP Module '' is not installed
[04:49:21] *** Quits: auwooo (~0day@2001:448a:1082:fe6f:39d8:f7b2:9b01:9927) (K-Lined)
[04:49:23] <mmlj4> drolsky around?
[05:13:45] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[05:14:06] *** Joins: ndut2 (~un.org@2001:448a:1082:fe6f:89e7:2483:955c:1bcb)
[05:17:28] *** Joins: dwalker_ (~dwalker@58.177.241.177)
[05:18:08] *** Quits: ndut2 (~un.org@2001:448a:1082:fe6f:89e7:2483:955c:1bcb) (K-Lined)
[05:18:59] <xenu> mmlj4: there's "issues" link on its metacpan page, on the left side
[05:19:07] <xenu> although judging from the cpantesters reports
[05:19:15] <xenu> 7868 passing, 3 failing
[05:19:19] <xenu> the problem might be on your side
[05:19:46] <xenu> could you show us the complete build log?
[05:20:56] *** Quits: dwalker (~dwalker@061092153159.ctinets.com) (Ping timeout: 265 seconds)
[05:21:18] <mmlj4> I'll try to get one
[05:28:08] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[05:31:39] * GumbyPAN CPAN Upload: Alien-patchelf-0.03 by SLAFFAN https://metacpan.org/release/SLAFFAN/Alien-patchelf-0.03
[05:36:40] *** Joins: cstls (~ruiner@2603-7081-0800-4824-6cda-ab7c-915d-5943.res6.spectrum.com)
[05:40:30] <aindilis> can Perl Critic critique directory structures and non Perl code?
[05:40:56] <aindilis> if not, what tool is recommended?  I'm going to try to implement verifiable standards for my project
[05:41:11] *** Joins: frost (~frost@user/frost)
[05:41:53] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Ping timeout: 256 seconds)
[05:43:40] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Remote host closed the connection)
[05:47:04] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[05:51:35] <aindilis> looking at this: https://github.com/collab-qa/check-all-the-things
[05:51:35] <Paperbot> Link title(s): [ GitHub - collab-qa/check-all-the-things: check all of the things! ]
[05:52:12] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[05:52:23] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 246 seconds)
[05:54:44] <gordonfish> My friend's local college just got some new micro biology text books
[05:54:54] <gordonfish> Took only a minute to read and still cost $800 dollars
[05:55:15] *** Joins: stupidnick (~stupid@2001:448a:1082:fe6f:6855:e8f6:bba8:caea)
[05:55:20] <aindilis> gordonfish: https://i.pinimg.com/736x/11/ed/f3/11edf3c4a78125af741dea0af2f6c986--science-comics-science-cartoons.jpg
[05:55:58] * stupidnick always open from here https://cryptobug.wordpress.com/2022/04/01/https-www-google-com/  to open all Repo from Our Repo ... . remember that ... .
[05:56:20] * stupidnick or it is virus
[05:56:28] <gordonfish> All your repo are belong to us?
[05:56:45] <aindilis> what does this link do?
[05:56:54] <gordonfish> It opens a web browser
[05:57:00] *** Joins: finsternis (~X@23.226.237.192)
[05:57:09] <stupidnick> always open from here https://cryptobug.wordpress.com/2022/04/01/https-www-google-com/  to open all Repo from Our Repo ... . remember that ... . or it is virus
[05:57:09] <Paperbot> Link title(s): [ https://www.google.com/ – Journey To Everlasting Life ]
[05:57:14] <gordonfish> aindilis: Oh man that brings back some memories, thanks
[05:57:39] <aindilis> gordonfish: :) just saw it on facebook today I think
[05:57:43] <gordonfish> I mis that strip
[05:57:48] <gordonfish> miss
[06:04:08] *** Quits: stupidnick (~stupid@2001:448a:1082:fe6f:6855:e8f6:bba8:caea) (K-Lined)
[06:10:51] *** Joins: proller (~p@80.240.216.69)
[06:12:01] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[06:14:31] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[06:17:23] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[06:22:31] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 260 seconds)
[06:24:07] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:24:37] *** Joins: rgrinberg (~textual@177.248.156.216)
[06:24:54] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:25:20] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[06:30:47] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[06:31:28] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Ping timeout: 272 seconds)
[06:33:39] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[06:36:04] *** Joins: proller (~p@2a02:6b8:b081:a412::1:1e)
[06:36:42] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[06:37:48] *** Joins: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net)
[06:47:31] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[06:47:41] *** Joins: aspic (~shifty~~~@1.145.11.230)
[06:49:44] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[06:53:50] *** Joins: mattil (~mattil@78-27-104-238.bb.dnainternet.fi)
[06:54:25] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[06:58:27] *** Quits: mattil (~mattil@78-27-104-238.bb.dnainternet.fi) (Ping timeout: 260 seconds)
[06:59:56] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[07:06:35] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:06:35] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:06:35] *** finn_elija is now known as FinnElija
[07:07:34] *** Quits: Pali (~pali@user/pali) (Ping timeout: 272 seconds)
[07:22:13] *** Quits: aspic (~shifty~~~@1.145.11.230) (Read error: No route to host)
[07:31:30] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[07:34:35] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 240 seconds)
[07:36:47] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[07:39:53] *** Quits: cstls (~ruiner@2603-7081-0800-4824-6cda-ab7c-915d-5943.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:02:06] *** Joins: Ex0 (~Ex0@2001:448a:1082:fe6f:549f:a09b:9700:8676)
[08:05:33] <rindolf> gordonfish: hey,sup?
[08:07:38] *** Quits: Martchus (~martchus@2a01:c22:7a3e:4400:d250:99ff:fe49:3cce) (Ping timeout: 252 seconds)
[08:07:58] *** Joins: Martchus (~martchus@2a01:c23:b93b:f200:d250:99ff:fe49:3cce)
[08:11:57] * GumbyPAN CPAN Upload: PomBase-Chobo-0.037 by KIM https://metacpan.org/release/KIM/PomBase-Chobo-0.037
[08:15:15] <sivoais> aindilis: hey! i've seen check-all-the-things before. a similar project on cpan is <https://metacpan.org/dist/Code-TidyAll> and also from DROLSKY is <https://github.com/houseabsolute/precious>
[08:15:15] <Paperbot> Link title(s): [ Code-TidyAll-0.81 - Engine for tidyall, your all-in-one code tidier and validator - metacpan.org ] [ GitHub - houseabsolute/precious: One code quality tool to rule them all ]
[08:18:13] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Remote host closed the connection)
[08:20:17] <buu> Now you have 15 code tidy tools..
[08:29:08] * Ex0 is me call me when you want to answer and ping me not ping me than too bad answer your own question than
[08:31:40] * Ex0 is that get paid so free money :p Thank God 
[08:32:01] *** Joins: deadmarshal_ (~deadmarsh@95.38.116.113)
[08:33:45] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[08:34:20] *** Joins: ugjka (~ugjka@ugjka.net)
[08:35:10] *** Quits: ugjka (~ugjka@ugjka.net) (Client Quit)
[08:35:44] *** Joins: ugjka (~ugjka@ugjka.net)
[08:36:37] *** Quits: whynot (~whynot@37.73.105.106) (Quit: leaving)
[08:38:55] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:44:19] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:44:40] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[08:49:08] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[09:08:15] <xenu> lol, a lithuanian wikipedia article about mickiewicz (a poet) says he was born in the grand duchy of lithuania, but when you put it in google translate, it translates it as "born in poland"
[09:08:22] <xenu> (lithuanian -> polish translation)
[09:10:47] <xenu> machine learning was a mistake
[09:10:59] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:17:48] <rindolf> xenu: machines should go to university! also: https://www.youtube.com/watch?v=LMkJuDVJdTw
[09:17:49] <Paperbot> YouTube video linked by rindolf: Fresh Prince: Google Translated - published by collectivecadenza
[09:20:38] *** Quits: Ex0 (~Ex0@2001:448a:1082:fe6f:549f:a09b:9700:8676) (Read error: Connection reset by peer)
[09:23:47] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 246 seconds)
[09:23:47] <rindolf> sivoais: https://github.com/caramelomartins/awesome-linters
[09:23:48] <Paperbot> Link title(s): [ GitHub - caramelomartins/awesome-linters: A community-driven list of awesome linters. ]
[09:32:53] *** Quits: deadmarshal_ (~deadmarsh@95.38.116.113) (Ping timeout: 260 seconds)
[09:38:54] <xcombelle> hi rindolf 
[09:41:27] <rindolf> xcombelle: mew. sup?
[09:46:07] *** Joins: Ex0day (~Ex0day@2001:448a:1082:fe6f:90ff:79c9:2991:2a5)
[09:49:09] *** Quits: Ex0day (~Ex0day@2001:448a:1082:fe6f:90ff:79c9:2991:2a5) (Client Quit)
[09:49:35] *** Joins: Ex0 (~Ex0@2001:448a:1082:fe6f:90ff:79c9:2991:2a5)
[09:53:30] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[09:53:34] *** Quits: Ex0 (~Ex0@2001:448a:1082:fe6f:90ff:79c9:2991:2a5) (Client Quit)
[09:55:42] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[10:01:28] *** Joins: Ex0 (~Ex0@2001:448a:1082:fe6f:90ff:79c9:2991:2a5)
[10:02:23] * Ex0 is me call me if you want me to answer your question , if not free money for me than 
[10:02:41] * Ex0 ping me like Ex0 : your question
[10:03:37] <xcombelle> rindolf: woke up at 6 am
[10:03:41] *** Quits: Ex0 (~Ex0@2001:448a:1082:fe6f:90ff:79c9:2991:2a5) (K-Lined)
[10:24:25] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:3593:759:15cf:319a) (Ping timeout: 256 seconds)
[10:24:52] <rindolf> xcombelle: ah, i woke up before 04:00 am
[10:27:49] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[10:29:11] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 256 seconds)
[10:30:53] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[10:38:45] *** Quits: rgrinberg (~textual@177.248.156.216) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:51:23] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[10:55:59] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[11:36:21] * GumbyPAN CPAN Upload: Alien-gdal-1.29 by SLAFFAN https://metacpan.org/release/SLAFFAN/Alien-gdal-1.29
[11:39:34] <xcombelle> is there something like modern perl ?
[11:39:39] <xcombelle> rindolf: ?
[11:41:11] <rindolf> xcombelle: yes, there is
[11:41:25] <rindolf> perlbot: modern perl
[11:41:26] <perlbot> rindolf: http://modernperlbooks.com/ | https://metacpan.org/pod/Modern::Perl
[11:41:41] <rindolf> perlbot: mp
[11:41:41] <perlbot> rindolf: 1. The book by chromatic - http://modernperlbooks.com/books/modern_perl_2016/index.html 2. The blog - http://modernperlbooks.com 3. http://metacpan.org/release/Modern-Perl
[11:41:44] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[11:42:37] <rindolf> xcombelle: ^^^
[11:45:07] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[11:49:32] <xcombelle> last time I programmed in perl (~2001) one day the server of the teleecom company was brutaly shutdown because used to attack a ministry (I suppose french). my now educated guess is that one of my cgi script had shell injection. DId not know anything about security at this time
[11:51:18] *** Joins: Hassan (~Hassan@static-host119-30-85-200.link.net.pk)
[12:04:52] *** Joins: cuhela (~cuhela@188.119.45.227)
[12:05:28] <rindolf> xcombelle: ah :[
[12:05:39] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[12:06:10] <rindolf> Hassan: hi
[12:06:37] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:07:25] *** Joins: tobybl_ (~tobybl@227.192.115.87.dyn.plus.net)
[12:10:23] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Ping timeout: 260 seconds)
[12:12:02] <xcombelle> totally forgot how perl violate in any way possible any part of the zen of python
[12:12:45] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[12:13:11] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 246 seconds)
[12:13:39] *** Quits: cuhela (~cuhela@188.119.45.227) (Quit: Leaving)
[12:18:06] *** Quits: Peppard (~quassel@2001:470:1f0b:751:9d97:eee8:3fe3:9699) (Quit: No Ping reply in 180 seconds.)
[12:18:36] <rindolf> xcombelle: the zen of py isnt gospel: https://www.shlomifish.org/philosophy/culture/case-for-commercial-fan-fiction/indiv-nodes/guidelines_as_dogma.xhtml
[12:18:36] <Paperbot> Link title(s): [ Commercial Real Person Fan Fiction (RPFs), crossovers and parodies as 2021 geek/hacker imperative... ]
[12:19:14] *** Joins: Peppard (~quassel@2001:470:1f0b:751:dd88:c4c8:6da2:7369)
[12:22:44] <xcombelle> zen of python gives solid advice on how write program which are read thousands of times
[12:23:30] *** Quits: Hassan (~Hassan@static-host119-30-85-200.link.net.pk) (Ping timeout: 250 seconds)
[12:26:37] <xcombelle> peano arithmetic can be considered as immutable, we just can prove they are consistent
[12:26:55] <rindolf> xcombelle: ok... whole volumes were written about sw engineering - https://github.com/shlomif/Freenode-programming-channel-FAQ/blob/master/FAQ_with_ToC__generated.md#what-are-some-best-practices-in-programming-that-i-should-adopt
[12:26:55] <Paperbot> Link title(s): [ Freenode-programming-channel-FAQ/FAQ_with_ToC__generated.md at master · shlomif/Freenode-programm... ]
[12:29:56] *** Quits: Trigon (~reuben@144.39.114.115) (Ping timeout: 245 seconds)
[12:31:43] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[12:32:27] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[12:33:49] <xcombelle> s/setuptools/pip/ in your link rindolf (failed to create a pull request)
[12:34:18] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 260 seconds)
[12:36:03] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[12:37:13] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 260 seconds)
[12:39:47] *** Joins: chmnd (~chmnd@c-98-193-62-36.hsd1.il.comcast.net)
[12:40:04] <rindolf> xcombelle: pip is an installer; i started writing https://pypi.org/project/pydistman/ and py tooling is a mess - https://www.explainxkcd.com/wiki/index.php/1987:_Python_Environment
[12:40:05] <Paperbot> Link title(s): [ pydistman · PyPI ] [ 1987: Python Environment - explain xkcd ]
[12:42:40] *** Joins: Hassan (~Hassan@static-host119-30-85-200.link.net.pk)
[12:45:39] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[12:48:20] *** Joins: mixfix41 (~homefame@user/mixfix41)
[12:50:08] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[12:52:23] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[12:53:25] *** Joins: deadmarshal_ (~deadmarsh@95.38.116.113)
[12:53:55] *** Quits: tobybl_ (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[12:55:46] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[12:57:23] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[13:04:44] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[13:08:12] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[13:08:32] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[13:13:56] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:15:25] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[13:15:26] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[13:16:33] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[13:20:53] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[13:21:05] *** Joins: jpn (~jpn@user/jpn)
[13:22:49] *** Quits: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net) (Remote host closed the connection)
[13:25:38] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 246 seconds)
[13:26:05] *** Joins: jpn (~jpn@user/jpn)
[13:41:59] *** Joins: Markow (~Markow@176.122.215.103)
[13:42:26] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[13:54:22] <sokan> program: http://dpaste.com/3ZFUYMYH4, ACE2_HUMAN.txt: http://dpaste.com/A47PM3R3Q. Why on earth is 2nd if skipped?
[13:54:23] <Paperbot> Link title(s): [ dpaste: uprot2fasta.pl ]
[13:54:59] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[13:56:52] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[13:57:16] *** Joins: fling (~fling@user/fling)
[13:59:27] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[14:06:01] <sokan> So the issue comes from $/ = "\n//";. If I use it the second if "vanishes" and if I don't the third if vanishes. What's the deal with that? o.O
[14:06:04] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[14:06:58] *** Joins: ugjka (~ugjka@ugjka.net)
[14:06:59] *** Quits: chmnd (~chmnd@c-98-193-62-36.hsd1.il.comcast.net) (Quit: Client closed)
[14:09:03] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[14:11:01] *** Joins: jpn (~jpn@user/jpn)
[14:22:39] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[14:25:59] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 260 seconds)
[14:28:49] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[14:34:42] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[14:37:02] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 246 seconds)
[14:39:07] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[14:43:54] *** Quits: Hassan (~Hassan@static-host119-30-85-200.link.net.pk) (Ping timeout: 250 seconds)
[14:48:10] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[14:48:13] *** Joins: cstls (~ruiner@2603-7081-0800-4824-6cda-ab7c-915d-5943.res6.spectrum.com)
[14:48:17] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[14:50:07] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Client Quit)
[14:51:29] <rindolf> sokan: https://perl-begin.org/tutorials/bad-elements/
[14:51:30] <Paperbot> Link title(s): [ Perl Elements to Avoid - The Perl Beginners’ Site ]
[14:52:34] *** Joins: Hassan (~Hassan@static-host119-30-85-200.link.net.pk)
[14:53:43] *** Quits: deadmarshal_ (~deadmarsh@95.38.116.113) (Ping timeout: 260 seconds)
[14:56:08] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[14:56:11] *** Joins: martinus__ (~martin@139.30.201.77.rev.sfr.net)
[15:00:22] *** Quits: frost (~frost@user/frost) (Ping timeout: 250 seconds)
[15:01:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[15:03:12] *** Joins: fling (~fling@user/fling)
[15:08:00] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[15:11:41] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:11:59] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[15:16:45] * GumbyPAN CPAN Upload: Firefox-Marionette-1.23 by DDICK https://metacpan.org/release/DDICK/Firefox-Marionette-1.23
[15:17:02] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 260 seconds)
[15:19:11] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc6-git-38f80f4-Pogorze-Karpackie-CUSTOM-KERNEL)
[15:21:48] <sokan> rindolf: https://dpaste.com/2FTHNCZ73 is that better?
[15:21:49] <Paperbot> Link title(s): [ dpaste: uprot2fasta.pl ]
[15:22:52] <rindolf> sokan: quite, yes
[15:23:10] *** Joins: deadmarshal_ (~deadmarsh@95.38.116.113)
[15:23:27] <rindolf> sokan: the out_fh open() fails silently
[15:24:05] <sokan> true
[15:26:05] <sokan> http://dpaste.com/693EJWD7H
[15:26:06] <Paperbot> Link title(s): [ dpaste: uprot2fasta.pl ]
[15:26:08] <sokan> there we go
[15:27:54] *** Quits: deadmarshal_ (~deadmarsh@95.38.116.113) (Ping timeout: 272 seconds)
[15:27:58] <rindolf> sokan: https://dpaste.com/693EJWD7H#line-39 - why is it there?
[15:27:59] <Paperbot> Link title(s): [ dpaste: uprot2fasta.pl ]
[15:28:59] <sokan> rindolf: if I don't use it there then the program doesn't run either the 2nd or the 3rd if
[15:29:27] *** Joins: Pali (~pali@user/pali)
[15:29:40] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:a519:6081:f3da:f296)
[15:29:45] <sokan> I probably have misunderstood how $/ is actually used
[15:30:00] <rindolf> sokan: can you moveit outsidethe while loop?
[15:30:22] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:30:47] *** Quits: dwalker_ (~dwalker@58.177.241.177) (Read error: Connection reset by peer)
[15:31:05] *** Joins: csrf (~csrf@user/csrf)
[15:31:19] <sokan> rindolf: if I do something like this http://dpaste.com/9HEMMTGRP I get this error https://dpaste.com/7H4B7JQEZ
[15:31:20] <Paperbot> Link title(s): [ dpaste: 7H4B7JQEZ ]
[15:31:27] *** Joins: dwalker (~dwalker@58.177.241.177)
[15:32:59] <rindolf> sokan: you can read a single line before line 22...
[15:34:19] <sokan> What do you mean?
[15:35:56] <rindolf> sokan: «if(1){my $line=<$in_fh>;...}...while...»
[15:36:08] *** Joins: aspic (~shifty~~~@1.145.5.250)
[15:36:45] <rindolf> $sew
[15:37:26] <rindolf> $seq=~ s=//==g;
[15:42:46] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[15:43:16] *** Joins: cuhela (~cuhela@188.119.45.227)
[15:45:55] <sokan> rindolf: I did change ths substitutions (the s= ==g is much more readable)
[15:47:03] <sokan> I don't get what I'm supposed to write in if() (as conditions) in order for it to run
[15:47:40] <rindolf> sokan: it can be a simple block
[15:47:58] <sokan> not the block.
[15:48:01] <sokan> for example in my code
[15:48:04] <sokan> program*
[15:48:09] *** Joins: dwalker_ (~dwalker@061092153159.ctinets.com)
[15:48:27] <sokan> https://dpaste.com/GCGQ7AXZC#line-23 
[15:48:27] <Paperbot> Link title(s): [ dpaste: uprot2fasta.pl ]
[15:48:31] <sokan> I do the pattern macthing
[15:48:41] <sokan> so if $_ see sthis pattern do this and that.
[15:49:01] <sokan> but if it's outside the while loop how can it read the pattern?
[15:49:40] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[15:51:49] * GumbyPAN CPAN Upload: Hustle-Table-v0.5.1 by DRCLAW https://metacpan.org/release/DRCLAW/Hustle-Table-v0.5.1
[15:52:11] *** Quits: dwalker (~dwalker@58.177.241.177) (Ping timeout: 265 seconds)
[15:54:50] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[15:56:19] *** Quits: cstls (~ruiner@2603-7081-0800-4824-6cda-ab7c-915d-5943.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:59:31] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[16:04:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[16:05:55] <sokan> rindolf: ^
[16:07:16] *** Joins: fling (~fling@user/fling)
[16:10:54] <rindolf> sokan: 1. read asingle line. 2. process it.3. change $/ 4. loop using while
[16:13:40] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[16:22:10] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[16:25:06] *** Joins: rpath (~rpath@gateway/tor-sasl/rpath)
[16:30:17] <sokan> rindolf: So I need to do something like this: if (open my $in_fh, "<", "ACE2_HUMAN.txt") {my $line = <$in_fh>; $line =~  m/^ID\s+(\w+).*\n/; print ">$1 ";}
[16:31:27] <rindolf> perlbot: autodie
[16:31:28] <perlbot> rindolf: perldoc autodie | but consider this: http://blog.laufeyjarson.com/2012/10/why-i-dislike-autodie/
[16:31:43] <rindolf> sokan: ^^^
[16:34:10] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:35:17] <sokan> man I suck at perl so hard
[16:41:17] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:a519:6081:f3da:f296) ()
[16:49:09] *** Quits: brunoramoslu (~brunoramo@94.252.122.42) (Remote host closed the connection)
[16:49:54] *** Joins: brunoramoslu (~brunoramo@94.252.122.42)
[16:52:57] *** Joins: dwalker (~dwalker@58.177.241.177)
[16:53:41] <rindolf> sokan: which languages do you know?
[16:54:28] *** Quits: Adura (~Adura@user/adura) (Quit: Quit)
[16:55:50] <sokan> C and python just a bit
[16:56:21] <sokan> rindolf: ^
[16:56:57] *** Quits: dwalker_ (~dwalker@061092153159.ctinets.com) (Ping timeout: 265 seconds)
[16:57:44] *** Quits: cuhela (~cuhela@188.119.45.227) (Ping timeout: 246 seconds)
[16:58:07] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[16:59:53] <rindolf> sokan: ah
[17:00:32] <sokan> I did perl again 6-8 years ago and had help from the channel here, but people mostly wanted to pluck their eyes out from what they saw from our profs :P
[17:00:52] <sokan> (Bioinformatics course)
[17:01:11] <rindolf> sokan: ah
[17:04:19] <rindolf> sokan: don't wrap open(...) with aan "if"
[17:09:17] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[17:09:38] *** Joins: fling (~fling@user/fling)
[17:11:41] *** Joins: dwalker_ (~dwalker@061092153159.ctinets.com)
[17:14:14] <sokan> rindolf: it's the only thing I found to be able to implement reading one line :/
[17:15:47] *** Quits: dwalker (~dwalker@58.177.241.177) (Ping timeout: 265 seconds)
[17:15:57] <rindolf> sokan: paste  the complete code please
[17:16:12] <sokan> the if I mentioned before?
[17:16:28] <sokan> or the one I found for reading 1 line?
[17:18:25] *** Joins: jpn (~jpn@user/jpn)
[17:22:51] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[17:23:19] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[17:26:39] *** Joins: dwalker (~dwalker@58.177.241.177)
[17:27:15] *** Joins: cstls (~ruiner@2603-7081-0800-4824-6cda-ab7c-915d-5943.res6.spectrum.com)
[17:28:06] <sokan> rindolf: ^ (I Keep forgetting to mention you when I type the mesage)
[17:30:17] *** Quits: dwalker_ (~dwalker@061092153159.ctinets.com) (Ping timeout: 265 seconds)
[17:31:51] <rindolf> sokan: the complete program
[17:33:14] <sokan> rindolf: http://dpaste.com/CMAAEGGL7
[17:33:14] <Paperbot> Link title(s): [ dpaste: uprot2fasta.pl ]
[17:33:17] <sokan> there
[17:33:19] <sokan> and it runs!
[17:33:35] <sokan> not sure if I'm using my $line in a correct way
[17:33:45] <sokan> one is global is another one is in while()
[17:34:29] *** Quits: Woodzy (~quassel@198.204.246.228) (Ping timeout: 246 seconds)
[17:34:53] <rindolf> sokan: looks fine
[17:35:07] *** Joins: Woodzy (~quassel@198.204.246.228)
[17:37:47] <sokan> Does this happen often? Have no idea how to solve an issue and after letting it go for a while and come back the solution just comes effortless?
[17:37:49] <sokan> rindolf:
[17:40:02] <rindolf> sokan: i dont understand
[17:43:01] <rindolf> perlbot: scoping
[17:43:01] <perlbot> rindolf: Coping with Scoping - http://perl.plover.com/FAQs/Namespaces.html | https://github.com/mvanwinkleias/perl_tutorials/blob/master/MyOurLocalTutorial.pod | http://www.stonehenge.com/merlyn/UnixReview/col46.html
[17:43:25] <rindolf> sokan: 
[17:43:33] <sokan> rindolf: Nevermind. http://dpaste.com/2LQ99W5HA <--- What's wrong with this here? Do I do something wrong with how I handle the inpute .txt file?
[17:43:33] <Paperbot> Link title(s): [ dpaste: uprot2fasta.pl ]
[17:45:19] <rindolf> sokan: https://dpaste.com/2LQ99W5HA#line-54 -missing space
[17:45:20] <Paperbot> Link title(s): [ dpaste: uprot2fasta.pl ]
[17:47:51] * sokan facepalms...
[17:48:20] *** Quits: k33p3r (kexik@2605:6400:c847:1948::8491) (Read error: Connection reset by peer)
[17:48:40] <sokan> rindolf: thanks for all the help :)))
[17:49:32] <rindolf> sokan: you're welcome - https://www.shlomifish.org/meta/how-to-help/
[17:49:33] <Paperbot> Link title(s): [ How to Help this Site - Shlomi Fish’s Homesite ]
[17:52:28] <sokan> One final question: Why did my program require the first if ($line =~ m/^ID\s+(\w+).*\n/) to be outside of the while loop?
[17:53:29] <sokan> rindolf:
[17:54:07] *** CycoCid is now known as Kulrak
[17:55:52] <rindolf> sokan: because it should only be done once andat the start
[17:57:07] *** Joins: hodbogi (~fatalnix@user/fatalnix)
[17:58:36] <sokan> and the if ($line =~ m/^AC\s+(\w+).*\n/)?
[17:58:48] <sokan> rindolf: that should only be done once as well
[17:59:21] <rindolf> sokan: ok
[18:00:22] <sokan> ?
[18:00:29] <sokan> rindolf: was a question, sorry.
[18:03:49] <rindolf> sokan: maybe u need2read another line in the start
[18:07:32] <sokan> When while starts the program starts reading the input file from line 1 until the end. The end I signify by $/ = "\n//";. Right?
[18:07:39] *** Joins: k33p3r (kexik@2605:6400:c847:1948::8491)
[18:07:50] <sokan> rindolf:
[18:08:04] <rindolf> Altreus: LeoNerd : Botje : can you try to help sokan. i'mgoingfr a walk
[18:08:33] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[18:09:55] <sokan> rindolf: enjoy :) 
[18:13:21] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[18:13:41] *** Joins: fling (~fling@user/fling)
[18:16:08] *** Joins: voidnoir0_ (uid343973@id-343973.tinside.irccloud.com)
[18:16:14] *** Joins: deadmarshal_ (~deadmarsh@95.38.116.113)
[18:26:22] *** Joins: ssh073 (~thelounge@79.164.47.232)
[18:27:36] *** Joins: gast0n (~g4570n@user/gast0n)
[18:32:07] * GumbyPAN CPAN Upload: PPIx-Regexp-0.084 by WYANT https://metacpan.org/release/WYANT/PPIx-Regexp-0.084
[18:41:42] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[18:42:15] <LeoNerd> FSCKING AUTOFSCKINGVIV
[18:43:00] <LeoNerd> I used to store  $self->{"${name}_at"} = value  but now I store  $self->{$name} = [ value, other things... ]   which means that trying to get the value for a given name will now autoviv blank entries for names that don't exist, whereas before it didn't
[18:43:24] *** Joins: jpn (~jpn@user/jpn)
[18:43:33] *** Quits: hodbogi (~fatalnix@user/fatalnix) (Quit: Lost terminal)
[18:44:11] *** Joins: thrig (~thrig@207.108.197.156)
[18:48:20] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 246 seconds)
[18:49:13] *** Joins: jpn (~jpn@user/jpn)
[18:53:45] <rindolf> sokan: hi
[18:54:04] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:55:48] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[18:58:37] *** Quits: ssh073 (~thelounge@79.164.47.232) (Quit: The Lounge - https://thelounge.chat)
[19:00:10] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[19:02:50] *** Joins: ssh073 (~serg073@79.164.47.232)
[19:04:17] *** Quits: Awaru (Awaru@gateway/vpn/airvpn/awaru) (Quit: Awaru)
[19:04:44] *** Joins: Awaru (Awaru@gateway/vpn/airvpn/awaru)
[19:05:27] *** Quits: cstls (~ruiner@2603-7081-0800-4824-6cda-ab7c-915d-5943.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:07:11] * GumbyPAN CPAN Upload: Crypt-OpenSSL-Base-Func-0.03 by ABBYPAN https://metacpan.org/release/ABBYPAN/Crypt-OpenSSL-Base-Func-0.03
[19:08:25] <daemon> hey all I use dzil, in a pretty basic config and wondered if there was a way to have my selected license added to my source files automatically, or have a LICENSE file or somewhat generated automatically; my dist.ini correctly shows: license           = IPAS, but no other license files are created
[19:09:23] *** Joins: jpn (~jpn@user/jpn)
[19:10:19] <daemon> ah it does it on make dist
[19:10:32] <daemon> does not add it to the source files though, is that also possible?
[19:12:18] *** Quits: ssh073 (~serg073@79.164.47.232) (Quit: The Lounge - https://thelounge.chat)
[19:12:29] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:d90e:8b62:fe9d:3118)
[19:13:20] * thrig eyes a ">From ..." paragraph opener in a gutenberg text
[19:15:38] <ology> >From "Alexandre Dumas" <alexd@gmail.com> On the 24th of February, 1815, the look-out at Notre-Dame ...
[19:16:06] <aquanight> 08:13:05/57A91 < LeoNerd> FSCKING AUTOFSCKINGVIV ## yeah ain't it the worst
[19:17:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[19:17:22] <aquanight> wonder how much trouble it would be to hax perlcore autoviv to not actually create entries until an actual store occurs
[19:17:31] <aquanight> e.g. via magic
[19:17:44] *** Joins: fling (~fling@user/fling)
[19:18:20] *** Joins: ssh073 (~serg073@79.164.47.232)
[19:18:28] <thrig> huh it's in the EPUB too
[19:19:13] <aquanight> LeoNerd: wait couldn't it work this way: create a magic scalar that stores the root reference and multideref chain. On fetch return undef. On store, vivify the dereference chain and replace the final SV* with the one that's been magic'd, store into itself, and demagic?
[19:19:44] <aquanight> by "root reference" I of course mean the point at which you go from "exists" to "doesn't exist"
[19:19:58] <LeoNerd> It could but that's horrible
[19:20:31] <aquanight> only way I know of to avoid the side effects of autoviv
[19:22:13] * GumbyPAN CPAN Upload: Crypt-OpenSSL-Hash2Curve-0.03 by ABBYPAN https://metacpan.org/release/ABBYPAN/Crypt-OpenSSL-Hash2Curve-0.03
[19:26:36] <aquanight> actually
[19:26:42] <aquanight> what would really be horrible about it?
[19:27:00] <aquanight> I would imagine very few multideref chains are more than a few levels deep.
[19:29:08] <aquanight> fetch wouldn't need to actually touch any of the references. Hell fetch probably doesn't have to really do anything at all.
[19:29:22] *** Quits: aspic (~shifty~~~@1.145.5.250) (Read error: Connection reset by peer)
[19:29:23] <aquanight> and the store magic would be one and done, assuming you actually can demagic yourself like that
[19:30:06] <aquanight> although
[19:30:15] <aquanight> I guess it doesn't really help your case
[19:33:15] <aquanight> what would really help
[19:33:38] <aquanight> exists($self->{$name}) that returns the $self->{$name} lvalue
[19:34:03] <aquanight> so you could do: (exists($self->{$name}) or [])->[0]
[19:34:22] <aquanight> like defined-or but instead exists-or
[19:34:35] <aquanight> I guess you could use defined-or in this case
[19:40:51] *** Joins: Some-body_ (user@znc/developer/DarthGandalf)
[19:43:03] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Ping timeout: 268 seconds)
[19:43:46] *** Some-body_ is now known as DarthGandalf
[19:52:16] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[19:52:16] * GumbyPAN CPAN Upload: Astro-satpass-0.122_01 by WYANT https://metacpan.org/release/WYANT/Astro-satpass-0.122_01
[19:56:17] * GumbyPAN CPAN Upload: XLS-Simple-0.021 by ABBYPAN https://metacpan.org/release/ABBYPAN/XLS-Simple-0.021
[19:58:04] *** Quits: Hassan (~Hassan@static-host119-30-85-200.link.net.pk) (Ping timeout: 250 seconds)
[20:08:08] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[20:08:42] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[20:15:28] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:35e8:2467:fddc:9e54)
[20:16:37] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:21:47] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[20:22:16] *** Joins: fling (~fling@user/fling)
[20:22:41] *** Joins: cstls (~ruiner@2603-7081-0800-4824-6cda-ab7c-915d-5943.res6.spectrum.com)
[20:27:23] *** Joins: kensanata (~user@user/kensanata)
[20:34:43] <deadmarshal> should i nest subroutines with local or my? https://paste.c-net.org/BeckerForecast
[20:35:48] <thrig> 'my' or 'state' depending on what you want
[20:37:02] <deadmarshal> thanks
[20:38:00] <kensanata> Coming from Emacs, where dynamic binding used to be popular, the use case for local I used was this: assume you're calling a function X which uses global variables and you can't change X, and you want to temporarily have those global variables have different values when you call X. Thus, using local is almost always not what you want.
[20:38:10] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[20:39:03] <thrig> some folks just can't LET lisp go
[20:39:12] <corwin> That's probably the core of the argument used to depopularize dynamic binding in Emacs
[20:40:00] <LeoNerd> `local` is roughly Lisp's `fluid-let`
[20:40:07] <LeoNerd> And should therefore be about the same rareness
[20:41:28] *** Joins: cuhela (~cuhela@188.119.45.227)
[20:43:43] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[20:44:49] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Quit: Bye)
[20:45:20] *** Quits: voidnoir0_ (uid343973@id-343973.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[20:47:39] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[20:53:23] *** Joins: n1to (~n1to@user/n1to)
[20:53:49] *** Joins: not-n1to (~n1to@user/n1to)
[20:56:23] * GumbyPAN CPAN Upload: Devel-MAT-Dumper-0.45 by PEVANS https://metacpan.org/release/PEVANS/Devel-MAT-Dumper-0.45
[21:01:47] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[21:10:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[21:11:25] * GumbyPAN CPAN Upload: Devel-MAT-0.47 by PEVANS https://metacpan.org/release/PEVANS/Devel-MAT-0.47
[21:12:57] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:13:43] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:16:26] * GumbyPAN CPAN Upload: Object-Pad-0.64 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-0.64
[21:19:21] *** Quits: cstls (~ruiner@2603-7081-0800-4824-6cda-ab7c-915d-5943.res6.spectrum.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:22:34] *** Quits: cuhela (~cuhela@188.119.45.227) (Ping timeout: 272 seconds)
[21:24:47] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 246 seconds)
[21:26:30] *** Joins: cuhela (~cuhela@188.119.45.227)
[21:26:48] *** Joins: jpn (~jpn@user/jpn)
[21:29:32] *** Quits: deadmarshal_ (~deadmarsh@95.38.116.113) (Ping timeout: 272 seconds)
[21:29:42] *** Joins: jpmh (uid510532@id-510532.helmsley.irccloud.com)
[21:30:47] *** Joins: Trigon (~reuben@144.39.114.115)
[21:31:28] * GumbyPAN CPAN Upload: Devel-MAT-Tool-Object-Pad-0.01 by PEVANS https://metacpan.org/release/PEVANS/Devel-MAT-Tool-Object-Pad-0.01
[21:31:35] <LeoNerd> Done
[21:31:38] *** Quits: kensanata (~user@user/kensanata) (Remote host closed the connection)
[21:31:42] <LeoNerd> (most of the work I did this week)
[21:32:49] <jpmh> I have a NEW install ubuntu and want to add perldoc.  When I do apt install perl-doc I get issue shown at the paste https://l.perl.bot/p/1dsolk
[21:32:50] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[21:34:14] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 246 seconds)
[21:35:47] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[21:39:18] *** Joins: satori (~justin@163.178.187.81.in-addr.arpa)
[21:46:18] *** Joins: jpn (~jpn@user/jpn)
[21:46:27] <pragma-> Looks more like a #ubuntu problem than a #perl problem.
[21:47:38] *** Parts: satori (~justin@163.178.187.81.in-addr.arpa) ()
[21:49:30] <jpmh> pragma-: posted it there too
[21:49:47] *** Joins: j8765tu (~justin@163.178.187.81.in-addr.arpa)
[21:49:48] <jpmh> but it seems that the perl port is not updated, no?
[21:50:54] <pragma-> My first assumption was that you force-installed a different Perl instead of using apt-get.
[21:51:10] *** Quits: n1to (~n1to@user/n1to) (Quit: Leaving)
[21:51:23] <pragma-> In any case, #perl has zero control over Ubuntu's package management, afaik.
[21:51:29] *** Quits: not-n1to (~n1to@user/n1to) (Quit: Leaving)
[21:51:43] *** Joins: n1to (~n1to@user/n1to)
[21:52:03] <thrig> not zero control, with enough yelling redhat was convinced to stop breaking perl core
[21:53:19] <pragma-> I actually kind of liked that Red Hat offered a perl-minimal package. I use it in my virtual machine.
[21:54:06] <vague> minimal packages are fine as long as they are named correctly
[21:54:12] *** Parts: j8765tu (~justin@163.178.187.81.in-addr.arpa) ()
[21:54:17] *** Quits: Trigon (~reuben@144.39.114.115) (Ping timeout: 256 seconds)
[21:54:22] <huf> as long as the one called "perl" is the thing and the whole of the thing, it's fine
[21:54:26] <vague> installing 'perl' and getting a stripped down version is not ok
[21:54:57] <pragma-> s/offered/offers/
[21:58:49] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[22:01:53] <corwin> "To help reduce post-consumer waste Ford has taken the step of distributing new versions of 'CAR' without doors or glass.  If these features are important please make sure to specify '--with-doors-and-glass' when speaking with your dealership."
[22:02:43] <thrig> I assume CDR is likewise affected?
[22:03:17] <corwin> thrig++
[22:03:48] <corwin> or maybe that should be (cl-incf 'thrig)
[22:04:01] <thrig> #:thrig loads faster
[22:05:04] *** Joins: deadmarshal_ (~deadmarsh@95.38.116.113)
[22:06:21] *** Joins: Adura (~Adura@user/adura)
[22:09:00] *** Joins: satori (~justin@163.178.187.81.in-addr.arpa)
[22:09:14] *** Quits: deadmarshal_ (~deadmarsh@95.38.116.113) (Ping timeout: 246 seconds)
[22:09:16] *** Joins: Trigon (~reuben@144.39.114.115)
[22:12:06] *** Quits: satori (~justin@163.178.187.81.in-addr.arpa) (Client Quit)
[22:12:19] *** Joins: satori (~justin@163.178.187.81.in-addr.arpa)
[22:14:30] *** Joins: troller (~p@80.240.216.69)
[22:17:40] *** Quits: satori (~justin@163.178.187.81.in-addr.arpa) (Quit: leaving)
[22:18:41] *** Quits: Trigon (~reuben@144.39.114.115) (Ping timeout: 246 seconds)
[22:21:47] *** Joins: canute (~justin@163.178.187.81.in-addr.arpa)
[22:22:23] *** Joins: Tempesta (Tempesta@user/tempesta)
[22:22:32] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 246 seconds)
[22:22:32] *** Quits: thrig (~thrig@207.108.197.156) (Remote host closed the connection)
[22:24:39] *** Joins: jpn (~jpn@user/jpn)
[22:28:32] *** Quits: canute (~justin@163.178.187.81.in-addr.arpa) (Quit: leaving)
[22:28:42] *** Joins: canute (~justin@163.178.187.81.in-addr.arpa)
[22:31:38] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 260 seconds)
[22:33:46] *** Quits: canute (~justin@163.178.187.81.in-addr.arpa) (Quit: leaving)
[22:33:53] *** Joins: canute (~justin@163.178.187.81.in-addr.arpa)
[22:37:15] *** Quits: ssh073 (~serg073@79.164.47.232) (Quit: The Lounge - https://thelounge.chat)
[22:39:53] *** Joins: ssh073 (~serg073@79.164.47.232)
[22:40:02] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:40:21] *** Quits: ssh073 (~serg073@79.164.47.232) (Client Quit)
[22:40:48] *** Quits: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Read error: Connection reset by peer)
[22:47:00] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[22:49:58] *** Quits: canute (~justin@163.178.187.81.in-addr.arpa) (Ping timeout: 272 seconds)
[22:51:09] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[22:51:31] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[23:04:47] *** Joins: tobybl (~tobybl@132.202.200.146.dyn.plus.net)
[23:13:11] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[23:14:11] *** Quits: tobybl (~tobybl@132.202.200.146.dyn.plus.net) (Remote host closed the connection)
[23:18:44] *** Joins: Trigon (~reuben@144.39.114.115)
[23:22:16] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[23:24:10] *** Quits: Adura (~Adura@user/adura) (Ping timeout: 272 seconds)
[23:31:47] *** Parts: BlueShark (sid10311@user/blueshark) ()
[23:37:15] *** Joins: canute (~justin@163.178.187.81.in-addr.arpa)
[23:38:03] *** Quits: cuhela (~cuhela@188.119.45.227) (Ping timeout: 260 seconds)
[23:41:43] *** Quits: canute (~justin@163.178.187.81.in-addr.arpa) (Client Quit)
[23:41:51] *** Joins: canute (~justin@163.178.187.81.in-addr.arpa)
[23:41:54] *** Quits: canute (~justin@163.178.187.81.in-addr.arpa) (Client Quit)
[23:43:27] *** Joins: canute (~justin@163.178.187.81.in-addr.arpa)
[23:44:28] *** Quits: canute (~justin@163.178.187.81.in-addr.arpa) (Client Quit)
[23:45:08] *** Joins: canute (~justin@163.178.187.81.in-addr.arpa)
[23:50:07] *** Joins: trombel (stuffny@triton.blinkenshell.org)
[23:50:08] *** Parts: trombel (stuffny@triton.blinkenshell.org) ()
[23:54:45] *** Quits: canute (~justin@163.178.187.81.in-addr.arpa) (Quit: leaving)
[23:55:18] *** Joins: canute (~justin@163.178.187.81.in-addr.arpa)
[23:59:55] *** Joins: rgrinberg (~textual@177.248.156.216)
