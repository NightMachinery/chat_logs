[00:00:10] <FromDiscord> <leorize> and ban the `requires "nimble"` syntax
[00:00:10] <FromDiscord> <haxscramper> literally the same as binary off
[00:00:23] <FromDiscord> <leorize> no, it's different
[00:00:42] <FromDiscord> <leorize> communicating the intention is now explicit
[00:01:05] <FromDiscord> <haxscramper> and what if hybrid package provides multiple artifacts
[00:01:24] <FromDiscord> <haxscramper> I think we can generalize it to package features
[00:01:25] <FromDiscord> <haxscramper> again
[00:01:42] <FromDiscord> <leorize> I think we should get rid of hybrid
[00:01:48] <FromDiscord> <haxscramper> well, your solution is fine, but I don't really understand how `requires "nimble/lib"` is that much more explicit compared to `requires "nimble", binary = off`
[00:01:57] <FromDiscord> <haxscramper> But anyway
[00:02:06] <FromDiscord> <leorize> because you can't `requires "nimble"`
[00:02:36] <FromDiscord> <haxscramper> so there would be a differnt requires syntax for hybrid and non-hybrid packages
[00:02:44] <FromDiscord> <haxscramper> and what if I want both
[00:02:49] <FromDiscord> <haxscramper> library and binary part
[00:02:49] <FromDiscord> <leorize> yes, because hybrids are special
[00:03:05] <FromDiscord> <leorize> they are a combo of two packages that pretends to be one
[00:03:32] <FromDiscord> <haxscramper> actually `N >= 2` packages
[00:03:39] <FromDiscord> <leorize> you get the point
[00:03:40] <FromDiscord> <haxscramper> there might be more than one binary
[00:04:34] <FromDiscord> <haxscramper> We can generalize it to package features
[00:05:29] <FromDiscord> <leorize> I think we should look into what is being solved by hybrid and whether we can solve it in a more structured way
[00:05:37] <FromDiscord> <leorize> right, so what is packages features?
[00:05:55] <FromDiscord> <haxscramper> hybrid means, "post-install `build` for an artifact"
[00:06:38] <FromDiscord> <leorize> I mean, look at the problem that hybrid is trying to solve, not what it is
[00:06:47] <FromDiscord> <haxscramper> Way to provide more fine-grained communication between packages. Not just "I need all"
[00:07:16] <FromDiscord> <haxscramper> The hybrid trying to solve the problem "I want to build this binary when package is installed, and I also want to provide a library API"
[00:07:21] <FromDiscord> <haxscramper> I think
[00:07:30] <FromDiscord> <haxscramper> At least that's how I see it for the most part
[00:07:43] <FromDiscord> <haxscramper> So it is not really a feature itself
[00:07:46] <FromDiscord> <haxscramper> just a shortcut for `after install`
[00:08:18] <FromDiscord> <leorize> it's just "I have a binary package but I also want my API to be reusable"
[00:08:54] <FromDiscord> <haxscramper> yes, I meant mostly that
[00:09:57] <FromDiscord> <leorize> I think package features might create a too complicated matrix with its "default enabled/disabled" states
[00:10:51] <FromDiscord> <leorize> what if we think of hybrid as\: a library + one or more binary that is developed together with it?
[00:12:21] <FromDiscord> <leorize> so `requires "nimble"` become just the library, and you need `requires "nimble/nimble"` to get the nimble binary, similar to how nimble work with monorepos
[00:13:33] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[00:13:34] *** Quits: pro (~pro@user/pro) (Ping timeout: 246 seconds)
[00:15:46] <FromDiscord> <@bracketmaster-5a708063d73408ce4> sent a code paste, see https://play.nim-lang.org/#ix=3s4c
[00:15:48] *** Joins: rockcavera (~rc@192.12.112.199)
[00:15:48] *** Quits: rockcavera (~rc@192.12.112.199) (Changing host)
[00:15:48] *** Joins: rockcavera (~rc@user/rockcavera)
[00:15:56] <FromDiscord> <@bracketmaster-5a708063d73408ce4> maybe overloading `=` isn't allowed?
[00:17:07] <FromDiscord> <leorize> it's called `=copy` now, and its the function called when an object is copied
[00:17:22] <FromDiscord> <leorize> it might not be what you think it is
[00:18:01] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I guess I can't really do what I was trying to do?
[00:18:57] <FromDiscord> <leorize> you can, just make sure `x` takes `var MyType` or `var T`
[00:19:42] <FromDiscord> <leorize> but it won't be triggered if a "move" is performed instead of a "copy"
[00:20:10] <FromDiscord> <leorize> if you want to hook into all `=`, then a term rewriting macro might do the magic, but they are very experimental
[00:21:56] <FromDiscord> <haxscramper> sent a long message, see http://ix.io/3s4e
[00:22:49] <FromDiscord> <haxscramper> But I heard you, and `nimble/lib` seems to be a smaller mental overhead compared to really introducing package features
[00:23:52] <FromDiscord> <haxscramper> There is a problem of multiple binaries, and [saem](https://matrix.to/#/@saem:matrix.org) mentioned he wants to have `bin: .. <build configuration>` instead of simple list
[00:24:04] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 246 seconds)
[00:24:39] <FromDiscord> <leorize> the mental model is very important, since it will be what the user interacts with
[00:25:07] <FromDiscord> <leorize> I couldn't care less how this stuff would be implemented, but it has to let the user communicates what they truly wants
[00:25:12] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3s4g
[00:25:42] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3s4h
[00:26:56] <FromDiscord> <haxscramper> if we would want to introduce package features (which I believe is also very nice feature. But we can postpone it for later) then mental model won't change if we start modeling it in terms of features
[00:27:14] <FromDiscord> <haxscramper> but that does not mean we should dump it all at once to the end user, I agree
[00:27:22] <FromDiscord> <haxscramper> So for now I will stop on `nimble/lib` part
[00:28:20] <FromDiscord> <leorize> I think clear and explicit communication with the tooling will result in the least friction to the user
[00:29:14] <FromDiscord> <leorize> the end goal should be\: using a package should not be harder than using the stdlib, and the tooling should not get in the way of the programmer
[00:29:31] <FromDiscord> <leorize> speaking about package types, there is one special type that we might want to add\: generated packages
[00:29:43] <FromDiscord> <leorize> https://github.com/StefanSalewski/gintro \<- prime example of one
[00:29:45] <fn> <12R2D299> 4GitHub: 7"High level GObject-Introspection based GTK3/GTK4 bindings for Nim language"
[00:30:10] <FromDiscord> <haxscramper> how generated package is different from regular one (except for amount of code maybe)
[00:30:31] <FromDiscord> <leorize> this package generates and inject `.nim` into its package folder, of which the content depends on the system state at the time of installation
[00:31:03] <FromDiscord> <leorize> I think the cargo equivalent to this is called a proc macro package
[00:32:12] <FromDiscord> <haxscramper> How generated package handling is different from regular one with complicated `after install` hook?
[00:32:49] <FromDiscord> <leorize> a generated package pins its state to its version + when it is installed
[00:33:06] <FromDiscord> <leorize> it's content is unknown to both the developer and the package manager until its installation is finished
[00:34:25] <FromDiscord> <haxscramper> I still don't understand how this can be useful
[00:34:45] <FromDiscord> <haxscramper> Can you provide an example of an issue this can solve?
[00:35:02] <FromDiscord> <leorize> I think I'm getting ahead of myself a bit
[00:35:11] <FromDiscord> <System64 ~ Flandre Scarlet> Is it normal my cast doesn't work? https://media.discordapp.net/attachments/371759389889003532/861699245504331847/unknown.png
[00:35:40] <FromDiscord> <leorize> we should solve the problem of gintro
[00:35:55] <FromDiscord> <haxscramper> In reply to @System64 "Is it normal my": nim cast is `cast[<target type>](<expression>)`
[00:36:13] <FromDiscord> <haxscramper> `(ptr cshort)` is unholy abomination
[00:36:37] <FromDiscord> <haxscramper> that resulted of a type conversion syntax mixed with UFCS
[00:36:37] <FromDiscord> <System64 ~ Flandre Scarlet> that's what the proc wants
[00:37:33] <FromDiscord> <haxscramper> It's state is undefined until installed?
[00:37:34] <FromDiscord> <haxscramper> I'm not familliar with the package, what problem exactly?
[00:37:39] <FromDiscord> <System64 ~ Flandre Scarlet> and can I do myVar.pointer MusicEmu?
[00:38:05] <FromDiscord> <haxscramper> https://nim-lang.org/docs/manual.html#statements-and-expressions-type-casts
[00:38:17] <FromDiscord> <haxscramper> And `addr`
[00:38:35] <FromDiscord> <haxscramper> Read these sections, you need to know them when working with pointers
[00:38:35] <FromDiscord> <leorize> the fact that it has to be installed to work, and that it has to inject files into its own package folder
[00:40:07] <FromDiscord> <haxscramper> Like, I don't understand the fundamental problem - is it that bad it has to create some additional files? It doesn't matter to `import`, and it doesn't matter to `requires`
[00:41:04] <FromDiscord> <leorize> the files its creating is what you are gonna import
[00:41:29] <FromDiscord> <haxscramper> yes, and when I `import` them they are prefectly fine
[00:42:07] <FromDiscord> <haxscramper> otherwise, if generation failed the installation should've failed as well
[00:42:08] <FromDiscord> <haxscramper> Like `{.error.` or raise
[00:42:37] <FromDiscord> <haxscramper> It seems like I just fundamentally lost trying to understand what is wrong with that
[00:44:21] <FromDiscord> <haxscramper> for `hcparse` I pre-generate code and commit it, but that's because codegen step is so complicated
[00:48:29] <FromDiscord> <haxscramper> And build step depends on 20+ packages, including compiler, haxdoc etc., while generated code does not have any dependencies besides some convenience helpers
[00:49:31] <FromDiscord> <leorize> in gintro case, its because of gobject introspection
[00:49:55] <FromDiscord> <leorize> he is trying to mimic the python's `gi` feeling
[00:51:10] <FromDiscord> <leorize> I'm just letting you know about this stuff because it might be an issue for locking, as the package modifies its stored state
[00:51:19] <FromDiscord> <leorize> I don't have a solution either
[00:51:39] <FromDiscord> <leorize> but the fact that it has to modify its installation state disturbs me
[00:51:49] <FromDiscord> <haxscramper> locking is not a problem I'm concerned with, we have this rewrite-the-world PR from status
[00:51:51] <FromDiscord> <haxscramper> that implements this
[00:54:58] <FromDiscord> <haxscramper> Anyway, I think that's it for me today. Tomorrow I will update RFC to include `nimble/lib` and static toplevel
[00:56:57] <FromDiscord> <leorize> alright, o/ [haxscramper](https://matrix.to/#/@haxscramper:matrix.org)
[00:59:22] *** Quits: max22- (~maxime@2a01cb0883359800fa08eeaa302ddae6.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[00:59:35] *** Joins: max22- (~maxime@2a01cb0883359800ad7ca9d7a07851f7.ipv6.abo.wanadoo.fr)
[01:08:42] <fn> <11ForumUpdaterBot99> New thread by Lbart: How to return an object of a particular type following a value., see https://forum.nim-lang.org/t/8202
[01:18:19] *** Quits: max22- (~maxime@2a01cb0883359800ad7ca9d7a07851f7.ipv6.abo.wanadoo.fr) (Ping timeout: 246 seconds)
[01:21:17] <FromDiscord> <System64 ~ Flandre Scarlet> Randoms crashes happens at any moments, but doesn't output a stacktrace, is it normal? https://media.discordapp.net/attachments/371759389889003532/861710847532859462/unknown.png
[01:24:53] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[01:25:17] *** Joins: supakeen (~user@python/site-packages/supakeen)
[01:25:57] <FromDiscord> <ElegantBeef> I wager it's an issue with your interop, are you making a debug build or release/danger?
[01:28:09] <FromDiscord> <System64 ~ Flandre Scarlet> just nim compile -r helloworld.nim
[01:28:54] <FromDiscord> <System64 ~ Flandre Scarlet> what I can try is running the program without Tilengine
[01:38:14] <FromDiscord> <ynfle (ynfle)> sent a code paste, see https://play.nim-lang.org/#ix=3s4F
[01:39:42] <FromDiscord> <waghanza (Marwan Rabbâa)> 👋,↵I'm having some issue with `httpbeast`↵`Address family not supported by protocol [OSError]` when running on container
[01:40:17] <FromDiscord> <waghanza (Marwan Rabbâa)> anyone has this kind of issue ?
[01:40:42] <FromDiscord> <ElegantBeef> ynfle hard to say without the entire code
[01:41:07] <FromDiscord> <ElegantBeef> sounds like you're using ipv4/6 with a protocol that doesnt support it, but idk anything about networking 😄
[01:41:15] <FromDiscord> <ynfle (ynfle)> sent a code paste, see https://play.nim-lang.org/#ix=3s4G
[01:41:16] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://paste.rs/zgU
[01:41:37] <FromDiscord> <ElegantBeef> Ah it's saying the range of the descriminant must be `0..X`
[01:41:51] <FromDiscord> <waghanza (Marwan Rabbâa)> sent a long message, see http://ix.io/3s4H
[01:42:03] <FromDiscord> <ElegantBeef> positive is `1..int.high`
[01:42:23] <FromDiscord> <ynfle (ynfle)> So what?
[01:42:47] <FromDiscord> <ElegantBeef> It needs to be `case dim 0..4` or w/e
[01:42:51] <FromDiscord> <ynfle (ynfle)> I tried with int
[01:43:14] <FromDiscord> <ElegantBeef> Or use an enum, either works
[01:43:58] <FromDiscord> <ynfle (ynfle)> sent a code paste, see https://play.nim-lang.org/#ix=3s4I
[01:44:07] <FromDiscord> <ElegantBeef> you're starting at `2` now instead of `1`
[01:44:13] <FromDiscord> <ElegantBeef> the range has to start at 0
[01:44:16] <FromDiscord> <ElegantBeef> so `0.. 2`
[01:44:18] <FromDiscord> <ElegantBeef> (edit) "`0.. 2`" => "`0..2`"
[01:44:28] <FromDiscord> <ynfle (ynfle)> Why does it have to start at 0?
[01:44:38] <FromDiscord> <ElegantBeef> Cause it makes life easier i imagine
[01:44:50] <FromDiscord> <ElegantBeef> a tagged union that can start at an arbitrary tag is a bit more tedious
[01:45:19] <FromDiscord> <ElegantBeef> Not much more tedious but, a bit :d
[01:46:10] <FromDiscord> <ynfle (ynfle)> \:shrug\:
[01:47:34] <FromDiscord> <waghanza (Marwan Rabbâa)> @ElegantBeef)
[01:47:50] <FromDiscord> <waghanza (Marwan Rabbâa)> > ↵> with a protocol that doesnt support it↵> not understood
[01:47:56] <FromDiscord> <waghanza (Marwan Rabbâa)> > ↵> with a protocol that doesnt support it↵> not understood
[01:47:58] <FromDiscord> <ElegantBeef> Like i said just from the error, i'm speaking out my ass
[01:48:36] <FromDiscord> <ynfle (ynfle)> Nice!
[01:51:09] *** Joins: max22- (~maxime@2a01cb08833598009f35f1a8616b933f.ipv6.abo.wanadoo.fr)
[01:52:00] <FromDiscord> <exelotl> sent a code paste, see https://paste.rs/Lc5
[01:52:28] <FromDiscord> <exelotl> I wouldn't recommend to use brackets like this though. It's not idiomatic Nim at all
[01:53:11] <FromDiscord> <System64 ~ Flandre Scarlet> oh alright
[01:55:13] <FromDiscord> <exelotl> sent a code paste, see https://paste.rs/0TM
[01:55:37] <FromDiscord> <exelotl> (edit) "https://play.nim-lang.org/#ix=3s4N" => "https://play.nim-lang.org/#ix=3s4M"
[01:55:48] <FromDiscord> <System64 ~ Flandre Scarlet> Oh I see
[02:00:36] <FromDiscord> <leorize> though that one-liner should be solved by `sugar.dup`
[02:04:49] <FromDiscord> <System64 ~ Flandre Scarlet> alright so I think the problem is related to Tilengine or due to a conflict between Tilengine and LibGME
[02:10:50] <FromDiscord> <dom96> In reply to @waghanza (Marwan Rabbâa) "👋, I'm having some": haven't seen this before, what's the OS? Also can you try just `nim c server.nim` and paste the stack trace?
[02:13:09] *** Quits: max22- (~maxime@2a01cb08833598009f35f1a8616b933f.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:14:05] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[02:18:36] <FromDiscord> <leorize> if its docker, remember to enable ipv6
[02:20:37] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 246 seconds)
[02:21:57] <FromDiscord> <dom96> alternatively don't use Docker 😄
[02:37:11] <FromDiscord> <idf> podman is nice
[02:38:17] <FromDiscord> <leorize> +1 for podman
[03:01:06] <FromDiscord> <System64 ~ Flandre Scarlet> is it a good idea to execute 2 differents instances of SDL2?
[04:23:19] *** Joins: riceman (~barley@c-73-8-254-238.hsd1.il.comcast.net)
[04:24:59] <riceman> Hey all! I'm having some issues with threadpool for a project with a deadline tonight. Keep getting "SIGSEGV: Illegal storage access" crashes while using threadpool to start threads for each line of a file.
[04:26:56] <riceman> I've tried a number of different structures of implementation, different GCs, and even tried sync() every 12 new threads, but it always hangs for ages, then crashes. Any ideas what I might be missing?
[04:32:35] <FromDiscord> <leorize> what `--gc` are you using?
[04:36:46] <riceman> I've tried boehm, arc, and the standard Nim GC. In the past, I had this issue on a project that needed to rapidly send post requests via httpclient and boehm solved the crashes, but no luck this time w that
[04:39:04] <riceman> I'm trying to walk directories recursively to get a list of the files inside, about 4,000, and then upload them to an AWS bucket. I've tried running spawn(file) directly, as well as writing the list to a file and doing "for line spawn()", but both eventually crash.
[04:40:34] <riceman> sleep(100) or so seems to help between thread spawns, but it still SIGSEGVs eventually, no matter how slow I make it go.
[04:41:04] <FromDiscord> <leorize> are your threads accessing any global resources?
[04:42:34] <riceman> I don't believe so, but I'm a hobbyist programmer up until recently. I'm passing each line to the async function via parameter. That's the only thing being used that originates globally. Spawning clients inside the async proc too to be safe.
[04:44:28] <riceman> Thanks for the help, by the way! I appreciate it
[04:45:50] <FromDiscord> <leorize> wait wait wait
[04:46:03] <FromDiscord> <leorize> you're using asyncdispatch and threadpool?
[04:46:43] <FromDiscord> <leorize> mixing both async and thread is a very dangerous recipe in nim \:P
[04:48:04] <FromDiscord> <leorize> if you have an async procedure, then you can just collect all `Future` from them into a seq then use `asyncdispatch.all()` to wait for all of them to be done
[04:48:38] <FromDiscord> <leorize> if you want to both do this and multi-threaded, then the creation of these async procedure should be done within their respective threads
[04:53:15] <riceman> That's great to know, thank you. I'll do some googling and see what I can find out about asyncdispatch.all() usage. Really appreciate it.
[05:12:24] <FromDiscord> <leorize> sorry, it's in asyncfutures
[05:12:54] <FromDiscord> <leorize> can you explain a bit on how your threadpool + async workflow works?
[05:19:55] <riceman> Gotcha! And sure! I'm using async because it's tied to the only functional s3 library I could find. My script is so short it might be able to be easily pasted here.
[05:21:34] <riceman> ```proc up(upload:string) =; var client:S3Client; var creds:(string,string); discard client.put_object("BUCKET", upload, readFile(upload)); for file in walkDirRec("./data"): discard spawn up(file)``` 
[05:22:03] <riceman> That's essentially my entire script right there, minus credentials and bucket name.
[05:24:27] <FromDiscord> <leorize> which s3 library are you using?
[05:27:17] <riceman> I'm using https://github.com/ThomasTJdev/nim_awsS3. It's a bit broken, but the other two I tried were seemingly nonfunctional, even with modifications
[05:30:48] <FromDiscord> <leorize> I think the s3PutObject api would work better
[05:31:23] <FromDiscord> <leorize> since it doesn't rely on you having to read the file before passing it on
[05:32:54] <FromDiscord> <leorize> so to use it you gotta do this\:
[05:37:22] <FromDiscord> <leorize> sent a code paste, see https://play.nim-lang.org/#ix=3s5f
[05:37:50] <FromDiscord> <leorize> ^ hopefully that would work for your usage, afaict from the library you sent
[05:39:50] <FromDiscord> <leorize> might need a few fixes here and there since I've never worked with AWS before
[05:45:02] <riceman> Let me give that a shot and see! You're amazing, thank you.
[05:52:10] <FromDiscord> <leorize> you might want to use this API\: https://github.com/ThomasTJdev/nim_awsS3#s3putobjectis2xx
[05:52:12] <fn> <12R2D299> 4GitHub: 7"Amazon Simple Storage Service (AWS S3) basic API support"
[05:52:32] <FromDiscord> <leorize> then in the case where upload fails you can echo the failed file or smt
[05:57:26] <riceman> Tried that to begin with, but something about it wasn't working. Let me take another look at it.
[05:58:08] <riceman> A big issue is the library controls the http client, which seems to invoke some weird design quirks that I have a hard time working around.
[06:00:14] <riceman> Ah, right. the 2xx one was giving me 400 errors with the proper creds, so it seems to be broken or I'm unknowingly incorrectly using it in some major way
[06:01:11] <FromDiscord> <leorize> you can try echo-ing out the response \:p
[06:04:40] <riceman> It's echoing me the response, but it seems to be speaking in terms the API isn't expecting or wanting
[06:05:07] <FromDiscord> <leorize> then I can't help you with that, sorry \:/
[06:06:11] <riceman> Unfortunately, it looks like AWS uses Java exclusively for a special bulk-upload feature of the api... ah man.
[06:06:44] <riceman> Might have to hop to that to bypass the individual file method. Either way, thank you a ton for your help. I learned a lot about async usage today!
[06:08:47] <FromDiscord> <leorize> you're welcome \:)
[07:07:50] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:12:58] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 240 seconds)
[07:40:24] *** Joins: SebastianM (~seba@user/sebastianm)
[07:40:35] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[07:41:21] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[08:27:17] <FromDiscord> <aleclarson> is there a obviously fastest way to convert int to string?
[08:27:25] <FromDiscord> <aleclarson> (edit) "a" => "an"
[08:27:43] <FromDiscord> <aleclarson> or does `repr` work fine for performance-intensive scenarios?
[08:28:45] <FromDiscord> <Rika> Repr? Why not $
[08:29:19] <FromDiscord> <Rika> I’m pretty sure it’s fast enough, stringifying an integer isn’t as difficult as a float
[08:30:36] <FromDiscord> <aleclarson> great thx
[08:32:20] <FromDiscord> <Rika> If you’re looking for a bottleneck it’s best to use a profiler
[08:33:16] <FromDiscord> <aleclarson> truth \:)
[08:35:31] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:39:48] *** Joins: vicfred (~vicfred@user/vicfred)
[09:35:31] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[09:42:21] <fn> <11ForumUpdaterBot99> New Nimble package! gm_api - Bindings for Greasemonkey API and an userscript header generator, see https://gitea.com/thisago/gm_api
[10:28:26] <GreaseMonkey> if anyone's wondering, yes, i did in fact get namedropped :^)
[10:30:05] <FromDiscord> <Quantumly> When I compile a DLL is it fully independent? or does Nim have to be installed for it to work
[10:32:41] <FromDiscord> <ElegantBeef> Lol greasemonkey
[10:33:02] <FromDiscord> <ElegantBeef> Nim compiles to C so it works just like distributing C libraries
[10:48:16] *** Joins: pro (~pro@user/pro)
[11:01:41] *** Joins: Schnouki (~schnouki@user/schnouki)
[11:12:46] <FromDiscord> <pointystick> sent a code paste, see https://play.nim-lang.org/#ix=3s63
[11:20:33] <FromDiscord> <ElegantBeef> No i dont think you should be able to have var methods as that implies you can change where the var points
[11:20:50] <FromDiscord> <ElegantBeef> But codegen is an issue so issue time 😛
[11:23:51] <FromDiscord> <ElegantBeef> @pointystick ^ i really need to start reading when messages were sent
[11:38:02] <FromDiscord> <pointystick> I've raised this as issue: https://github.com/nim-lang/Nim/issues/18437
[12:12:47] *** Joins: Vladar (~Vladar@46.162.2.53)
[12:24:32] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[12:26:11] <FromDiscord> <Clonkk> What's the recommended way of dealing with exception that happens in a separate thread ?
[12:26:25] <FromDiscord> <Clonkk> (beside a global try / except in the thread proc)
[12:27:49] *** Joins: max22- (~maxime@2a01cb0883359800eefd20b0d4744e7d.ipv6.abo.wanadoo.fr)
[12:28:06] *** Quits: max22- (~maxime@2a01cb0883359800eefd20b0d4744e7d.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[12:28:28] *** Joins: max22- (~maxime@2a01cb0883359800eefd20b0d4744e7d.ipv6.abo.wanadoo.fr)
[13:30:53] <FromDiscord> <planetis> I would like to know as well, but nothing else than the "global try/except in the thread" seem to work.
[13:31:37] <FromDiscord> <planetis> i tried this https://github.com/planetis-m/dumpster/blob/master/multithread/threrror.nim but its not supposed to compile
[13:32:18] <FromDiscord> <planetis> (bc getCurrentExpeption just returns a new reference and doesnt move the exception)
[13:32:48] <FromDiscord> <planetis> there is also https://nim-lang.github.io/Nim/system.html#globalRaiseHook and localRaiseHook
[13:32:56] <FromDiscord> <planetis> not sure how they work
[13:38:14] <FromDiscord> <no name fits> How do you guys handle when requirements for GUI changes all the time? I'm seriously so sick of doing UI already, and when I have to keep "fixing" it, it feels like I'm getting nothing done
[13:38:41] <FromDiscord> <ElegantBeef> I dont do UI much but dont follow what you mean 😄
[13:39:48] <FromDiscord> <Rika> Basically when you need to change the layout again/?
[13:40:07] <FromDiscord> <Rika> I think that's one reason people use Immediate Mode gui
[13:40:15] <FromDiscord> <Rika> Painless to change the layout
[13:40:16] <FromDiscord> <no name fits> sent a long message, see http://ix.io/3s6D
[13:40:56] <FromDiscord> <no name fits> At which point the "forgot password" flow becomes obsolete because it's tied to your vendor
[13:42:37] <FromDiscord> <no name fits> I think I'm trying to ask if there's a way to do UI so these changes are less of a hassle
[13:43:42] <FromDiscord> <no name fits> And sorry if I seem irritated. I thought I had a chance to knock down some tasks today but I got put on "clean the coffee machine" duty
[13:44:36] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[13:47:42] <FromDiscord> <Rika> as ive said probably best to look into immediate mode ui
[13:49:05] <FromDiscord> <no name fits> I'll look into it while I wait for this thing to finish
[13:57:38] <FromDiscord> <no name fits> And I just splashed myself with water 🙂
[14:00:04] <FromDiscord> <Rika> 😄
[14:12:49] <FromDiscord> <Clonkk> Interesting i'll look into it
[14:14:22] <FromDiscord> <planetis> tell me how it went pls
[14:51:22] *** Quits: max22- (~maxime@2a01cb0883359800eefd20b0d4744e7d.ipv6.abo.wanadoo.fr) (Ping timeout: 246 seconds)
[15:38:00] *** Joins: max22- (~maxime@2a01cb08833598004830a86b5de869dd.ipv6.abo.wanadoo.fr)
[15:57:23] *** Quits: max22- (~maxime@2a01cb08833598004830a86b5de869dd.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[16:06:27] <fn> <11ForumUpdaterBot99> New thread by Miran: Nim online meetup - Friday July 9th, see https://forum.nim-lang.org/t/8203
[16:12:59] <FromDiscord> <Zoom> sent a long message, see http://ix.io/3s79
[16:14:08] <FromDiscord> <Rika> uh, where
[16:14:14] <FromDiscord> <Zoom> I use this to store a bitmap where you have three operations\: add bits, remove rows, shift rows
[16:14:20] <FromDiscord> <Rika> i mean where in the file
[16:14:43] <FromDiscord> <Rika> you really need to break this file up ngl
[16:15:01] <FromDiscord> <Zoom> I haven't pushed yet.
[16:15:05] <FromDiscord> <Rika> oh ok
[16:15:09] <FromDiscord> <Zoom> I'm still not sure if it's a good idea
[16:15:16] <FromDiscord> <Zoom> wdym?↵(@Rika)
[16:15:19] <FromDiscord> <Rika> well i cant tell until i see it
[16:15:25] <FromDiscord> <Rika> the long tetronimia file
[16:15:46] <FromDiscord> <Zoom> Is it considered long? It's less than 500 lines
[16:16:00] <FromDiscord> <Rika> well i think it can be shorter
[16:16:29] <FromDiscord> <Rika> thats fine for now i guess
[16:16:31] <FromDiscord> <Rika> minor issue
[16:16:45] <FromDiscord> <Zoom> Yeah, splitting CLI handling is the first candidate.
[16:18:25] <FromDiscord> <Zoom> Isn't my description clear enough? I'm more interested in hearing your thoughts on the whole idea first than on the particular implementation↵(@Rika)
[16:18:34] <FromDiscord> <Rika> not for me it isnt
[16:18:46] <FromDiscord> <Zoom> Ok. I'll push soon
[16:18:57] <FromDiscord> <Rika> im not someone who can understand things by description
[16:19:14] <FromDiscord> <Rika> but i have a feeling that the length field is redundant
[16:19:27] <FromDiscord> <Rika> not that i can actually tell because yeah
[16:28:45] <FromDiscord> <Rika> In reply to @Zoom "Ok. I'll push soon": if you werent sure it was a good idea, you should have made a branch first and made the changes there
[16:28:53] <FromDiscord> <Rika> then you merge the branches when you're sure
[16:29:07] <FromDiscord> <Rika> otherwise you can just delete it then carry on with the older code
[16:34:13] <FromDiscord> <Zoom> That's exactly what I do↵(@Rika)
[16:34:57] <FromDiscord> <Rika> it sounded like you werent doing so
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:43:44] *** Joins: xet7 (~xet7@user/xet7)
[16:45:11] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[16:45:56] *** Joins: xet7 (~xet7@user/xet7)
[16:48:09] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[16:50:08] *** Joins: Vladar (~Vladar@46.162.2.53)
[16:50:21] *** Joins: PMunch (~PMunch@178.74.36.198)
[16:53:49] <FromDiscord> <Zoom> https://github.com/indiscipline/tetronimia/blob/shufflearray/src/shufflearray.nim
[16:55:40] <FromDiscord> <Zoom> Hm, not sure why. I'm just playing with things in my private repo and don't push until it at least compiles \:D↵(@Rika)
[16:58:31] <FromDiscord> <Zoom> Also, I have some initialization warnings for the `initShuffleArray` proc and pragmas don't help \:(
[17:05:12] *** Joins: arkurious (~arkurious@user/arkurious)
[17:25:37] <FromDiscord> <Rika> I'll look at it when I'm free
[17:25:42] <FromDiscord> <Rika> Prolly in a few minutes
[17:44:06] <FromDiscord> <Zoom> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/861935798919233556): I'm still not sure if this data structure is a good idea
[17:45:01] <FromDiscord> <gerwy> okay , does anyone know if i can use parsexml without saving my string into some file?
[17:47:32] <FromDiscord> <gerwy> in xmlparser
[17:47:41] <FromDiscord> <exelotl> @gerwy you can use a StringStream
[17:47:55] <FromDiscord> <gerwy> ooh
[17:49:00] <FromDiscord> <gerwy> oh i think xmlparser can use string, sorry i was using parsexml instead of it
[18:02:44] <FromDiscord> <Rika> zoom so L is capacity and len is data-length?
[18:02:58] <fn> <11ForumUpdaterBot99> New post on r/nim by FORCE4760: Would Nim be a good fit for my use cases?, see https://reddit.com/r/nim/comments/oev01r/would_nim_be_a_good_fit_for_my_use_cases/
[18:05:34] <FromDiscord> <Rika> i dont really understand the point of storing indices as well
[18:16:42] <FromDiscord> <gerwy> Yooooo it works
[18:17:00] <FromDiscord> <gerwy>  https://media.discordapp.net/attachments/371759389889003532/861966462599168030/Zrzut_ekranu_2021-07-6_o_15.46.54.png
[18:18:29] <FromDiscord> <gerwy> sent a long message, see http://ix.io/3s7z
[18:21:21] *** Joins: max22- (~maxime@2a01cb08833598004a8ebd1c7a4675d2.ipv6.abo.wanadoo.fr)
[18:21:22] <PMunch> @gerwy, creating a YouTube front-end?
[18:26:53] <FromDiscord> <gerwy> no no, making a bot for my laziness
[18:28:28] <fn> <06Prestige99> For a youtube search?
[18:28:53] <FromDiscord> <gerwy> but i kinda don't know how to parse the date, because there is this annoying T between date and time and parser doesn't like that
[18:29:15] *** Joins: rockcavera (~rc@192.12.115.193)
[18:29:15] *** Quits: rockcavera (~rc@192.12.115.193) (Changing host)
[18:29:15] *** Joins: rockcavera (~rc@user/rockcavera)
[18:29:30] <FromDiscord> <dom96> You can ignore it by using `'T'` in your parsing format string
[18:29:36] <FromDiscord> <gerwy> doesn't work
[18:29:47] <FromDiscord> <dom96> code?
[18:29:57] <fn> <06Prestige99> !yt nim conf 2021
[18:29:58] <fn> <12R2D299> 4Andreas Rumpf: Welcome to NimConf 2021 + Zen of Nim: 2https://www.youtube.com/watch?v=D_G9h7DcIqM
[18:29:59] <FromDiscord> <gerwy>  https://media.discordapp.net/attachments/371759389889003532/861969729886748702/Zrzut_ekranu_2021-07-6_o_15.59.54.png
[18:30:19] <FromDiscord> <gerwy>  https://media.discordapp.net/attachments/371759389889003532/861969815250010122/Zrzut_ekranu_2021-07-6_o_16.00.16.png
[18:30:21] <FromDiscord> <dom96> is R2D2 your bot Prestige?
[18:30:41] <fn> <06Prestige99> Yes
[18:31:53] <FromDiscord> <gerwy> i think i also need to do something with this  "+00:00" but what?
[18:31:57] <FromDiscord> <gerwy> maybe just ignore it
[18:32:47] <FromDiscord> <gerwy> and do it like [string.low ...^5]
[18:32:56] <FromDiscord> <dom96> I think you can parse it using the timezone format patterns
[18:33:12] <FromDiscord> <gerwy> ah yeah i noticed zzzz
[18:33:18] <FromDiscord> <gerwy> (edit) "zzzz" => "zzz"
[18:33:49] <FromDiscord> <gerwy> okaay now works properly
[18:34:06] <FromDiscord> <gerwy> even adds up my timezone to it interesting
[18:34:35] <FromDiscord> <gerwy>  https://media.discordapp.net/attachments/371759389889003532/861970887175438427/Zrzut_ekranu_2021-07-6_o_16.04.30.png
[18:34:44] *** Joins: tiorock (~rc@192.12.115.193)
[18:34:44] *** Quits: tiorock (~rc@192.12.115.193) (Changing host)
[18:34:44] *** Joins: tiorock (~rc@user/rockcavera)
[18:34:44] *** Quits: rockcavera (~rc@user/rockcavera) (Killed (iridium.libera.chat (Nickname regained by services)))
[18:34:44] *** tiorock is now known as rockcavera
[18:37:27] <FromDiscord> <gerwy> yeah i checked on some random video its right, because im in +2 timezone it mades it correct
[18:37:33] <FromDiscord> <gerwy> thank u for halp
[18:40:42] <FromDiscord> <Zoom> @dom96\: check your matrix dm please. Also, why are using discord at all? \:P
[18:40:42] <FromDiscord> <Zoom> Oops, bridge died again!
[18:40:42] <FromDiscord> <Zoom> Yep.↵(@Rika)
[18:41:51] <FromDiscord> <dom96> Why are you using Matrix? 😛
[18:42:04] <FromDiscord> <dom96> I don't have access to my Matrix on this machine in any case
[18:46:00] <FromDiscord> <Zoom> You know the answers, I presume. If not, this is a discussion for #offtopic↵(@dom96)
[18:46:49] <FromDiscord> <gerwy> lol works flawlessly
[18:48:20] <FromDiscord> <gerwy> but the code is messy and probably i won't publish this anywhere, also its not hard to make
[18:54:24] <FromDiscord> <Clonkk> Why are people using secure open-source solution instead of centralizing all their communications and services in platform whose main purpose is to sell your datas so you can be spammed by targeted ads↵(@dom96)
[18:54:25] <FromDiscord> <Clonkk> Really I wonder
[18:54:27] <FromDiscord> <Clonkk> Truly a mystery
[18:55:06] <fn> <06Prestige99> Needs a better client imo, and the matrix servers get bogged down
[18:55:12] <fn> <11ForumUpdaterBot99> New thread by Yglukhov: Awaitable threadpools, see https://forum.nim-lang.org/t/8204
[18:55:22] <fn> <06Prestige99> looking forward to matrix getting bigger and better
[19:00:32] <FromDiscord> <gerwy> you can have throw out email for this type of accounts if you don't like be spammed with targeted ads
[19:00:48] *** Joins: aeverr_ (~deodex@217.138.252.234)
[19:01:15] *** Quits: aeverr (~deodex@ai126250185187.11.tss.access-internet.ne.jp) (Ping timeout: 268 seconds)
[19:03:14] <FromDiscord> <Clonkk> 1. It's not a solution, it's a temporary workaround. 2) Many services that are based on emails will ban throw out email. 3) Throw-out emails are usually not secure and leave your accont exposed to being stolen.
[19:03:22] <FromDiscord> <Clonkk> The only good solution is the development of privacy friendly alternative
[19:04:47] <FromDiscord> <Clonkk> And yes, that will usually require compromise in functionnality and ergonomics because those costs money
[19:04:58] <FromDiscord> <gerwy> but no one wants to use alternative, thats the problem
[19:06:00] <FromDiscord> <hugogranstrom> I'm I no one? ;)
[19:08:11] <FromDiscord> <hugogranstrom> But true, most people don't care about their privacy sadly. Or even worse, don't realize to what extent they give up their privacy
[19:09:47] <FromDiscord> <Rika> not really no one, "none of my friends"
[19:09:55] <FromDiscord> <Rika> none of the laymen care enough
[19:10:01] <FromDiscord> <Rika> its a negative feedback loop
[19:10:01] <FromDiscord> <hugogranstrom> If more people did understand that, I'm sure more people would look for "alternatives"
[19:10:02] <FromDiscord> <vindaar> 💯
[19:10:32] <FromDiscord> <Rika> In reply to @hugogranstrom "But true, most people": even if they knew the losses in privacy, there's still convenience
[19:10:33] <fn> <06Prestige99> You have friends?
[19:11:02] <FromDiscord> <Rika> how convenient is it to make an account, how convenient is it to use on my phone, etc
[19:11:10] <FromDiscord> <Rika> prestige: do you want to stoop that low?
[19:11:24] <fn> <06Prestige99> It was a joke about programmers having friends :P
[19:11:47] <FromDiscord> <Rika> not appreciated
[19:11:49] <fn> <06Prestige99> But yeah, nobody I know irl cares about privacy
[19:12:06] <FromDiscord> <Zoom> Rika, have you seen my answers regarding my ShuffleArray? Discord bridge lagged
[19:12:40] <FromDiscord> <Rika> i dont think so
[19:12:52] <FromDiscord> <Rika> i only see a "yep
[19:12:53] <FromDiscord> <Rika> "
[19:13:32] <FromDiscord> <Zoom> So, ShuffleArray.L is capacity and `len` field is, well, length. `idx` are index association array which is the point of the whole thing
[19:16:18] <FromDiscord> <Zoom> Is this type a good idea and what's wrong with the init proc, as it gives me a `can't prove` warning
[19:16:41] <fn> <06Prestige99> @Rika didn't mean to offend, was just a self-deprecating joke
[19:17:05] <FromDiscord> <Rika> okay
[19:18:06] <FromDiscord> <Rika> the init proc needs to use the init syntax `result = ShuffleArray[L, T](len: 0)` replaces the result.len line
[19:18:09] <FromDiscord> <Rika> i believe
[19:18:29] <FromDiscord> <Rika> whats the index association array for? whats the benefit?
[19:20:16] <fn> <06Prestige99> I wonder if people actually try talking to others about data privacy
[19:22:46] *** Quits: aeverr_ (~deodex@217.138.252.234) (Read error: Connection reset by peer)
[19:24:56] <FromDiscord> <vindaar> I do, with varying success. Many people say they understand what I'm saying, but then immediately go on about convenience and "ahh, they don't care about me specifically / I have nothing to hide".↵But then I just force them by not using whatsapp anymore 😛↵(<@709044657232936960_fn=5b=49=52=43=5d>)
[19:26:11] <FromDiscord> <deech> What does the `=trace` hook do?
[19:29:35] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[19:31:48] <FromDiscord> <Zoom> The main use case of the type is frequent reordering so this trades index indirection for less moves in memory↵(@Rika)
[19:33:49] <FromDiscord> <Rika> so instead of an N\count byte shift it's a 4count byte shift?
[19:34:01] <FromDiscord> <gerwy> well i care about privacy but its pretty hard to hold it in modern world↵its not 90s, everything is for some reason digitalized and we don't have our own stuff anymore, everything is in cloud and shared to us which is sad
[19:34:40] <FromDiscord> <leorize> it doesn't do anything anymore, but originally it was made for the gc to traverse custom types for reference scanning by `refc`. ARC/ORC obsoleted this though↵(@deech)
[19:36:15] <FromDiscord> <dom96> In reply to @Zoom "You know the answers,": I know some of the answers, but always curious about why specific people are opting for it
[19:37:10] <FromDiscord> <haxscramper> I want to write my own client for it, and with discord it is not possible
[19:37:49] <FromDiscord> <haxscramper> But discord has better search for chat
[19:38:11] <FromDiscord> <@bracketmaster-5a708063d73408ce4> sent a code paste, see https://play.nim-lang.org/#ix=3s8l
[19:38:33] <FromDiscord> <haxscramper> Then make it `static[int]` generic parameter
[19:38:58] <FromDiscord> <dom96> Really hope they fix this Gitter relay bug, otherwise we'll need to switch to an alternative bridge :/
[19:39:06] <FromDiscord> <haxscramper> `BitVector[size: static[int]] = object` and `array[size, uint64]`
[19:40:47] <FromDiscord> <deech> leorize, does `=dispose` do anything? I see on use of it in a test and no docs.
[19:42:31] <FromDiscord> <dom96> In reply to @haxscramper "I want to write": I've gone down this path with IRC and learned that I should have created Slack/Discord all along 😉
[19:42:36] <FromDiscord> <Zoom> If you'd like to know, Matrix is a protocol, Discord is an implementation of a protocol which actively discourage third-party clients. That's just one of the reasons but I think it's enough to not use it.
[19:42:37] <FromDiscord> <Zoom> If you'd like to know, Matrix is an protocol, Discord is an implementation of a protocol which actively discourage third-party clients. That's just one of the reasons but I think it's enough to not use it.↵(@dom96)
[19:43:36] <FromDiscord> <leorize> matrix is really just discord but open and decentralized
[19:44:10] <FromDiscord> <leorize> it's working well, so why not use it?
[19:44:16] <FromDiscord> <dom96> Of course, that's fair. Personally I don't really mind, I can easily switch to Matrix (or back to IRC) if Discord annoys me
[19:45:11] <FromDiscord> <dom96> I don't have any real reason to use it
[19:45:14] <FromDiscord> <Zoom> May be we should continue in #offtopic
[19:45:18] <FromDiscord> <dom96> right now at least
[19:45:24] <FromDiscord> <dom96> sure
[19:51:16] <fn> <11ForumUpdaterBot99> New Nimble package! asyncthreadpool - Awaitable threadpool, see https://github.com/yglukhov/asyncthreadpool
[19:51:17] <fn> <12R2D299> 4GitHub: 7"Awaitable threadpool for nim"
[19:51:41] <FromDiscord> <Rika> interesting
[19:52:10] <FromDiscord> <Zoom> I had basically the same question a few days ago. What would be the proper place in the manual to put this in?
[19:59:38] <FromDiscord> <haxscramper> Generics, generic parameters
[19:59:41] <FromDiscord> <haxscramper> Probably not `static:` block
[19:59:41] <FromDiscord> <haxscramper> Actually generic example is really dense
[19:59:49] <FromDiscord> <haxscramper> And has a lot of unnecessary noise
[19:59:50] <FromDiscord> <haxscramper> 60+-line binary tree implementation, really?
[20:09:23] <FromDiscord> <carpal> In reply to @ElegantBeef "There is also https://github.com/Carpall/nobject": lol
[20:09:26] <FromDiscord> <carpal> 💚
[20:09:49] <FromDiscord> <carpal> a very funny and simple lib for dynamic typinh (even badly written)
[20:11:35] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (Remote host closed the connection)
[20:11:47] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[20:33:03] <FromDiscord> <aleclarson> is there a built-in helper for parsing ISO datetimes?
[20:33:12] <FromDiscord> <aleclarson> or do i just use `parse` with a format string
[20:33:38] <FromDiscord> <aleclarson> (edit) "ISO" => "ISO-8601"
[20:36:44] <FromDiscord> <@bracketmaster-5a708063d73408ce4> @haxscramper\:matrix.org  - tried what you suggested but `var myvar = BitVector[3]` doesn't work
[20:36:59] <FromDiscord> <@bracketmaster-5a708063d73408ce4> so I guess what I'm asking is how do I actually instantiate BitVector?
[20:37:37] <FromDiscord> <haxscramper> Doesn't work how? And you need to add () if you want to assign yo var
[20:37:53] <FromDiscord> <haxscramper> Right now you are assigning type to a variable
[20:38:24] <FromDiscord> <@bracketmaster-5a708063d73408ce4> heh - brainfart
[20:38:35] <FromDiscord> <@bracketmaster-5a708063d73408ce4> thx
[20:39:07] *** Joins: Vladar (~Vladar@46.162.2.53)
[20:39:22] <fn> <11ForumUpdaterBot99> New Nimble package! sums - Accurate summation functions, see https://github.com/planetis-m/sums
[20:39:22] <fn> <12R2D299> 4GitHub: 7"Accurate summation functions"
[20:47:11] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:47:32] <FromDiscord> <aleclarson> is there a difference between `int64(x)` and `cast[int64](x)`?
[20:47:42] <FromDiscord> <Rika> yes
[20:48:23] <FromDiscord> <Rika> its a conversion vs a reinterpretation
[20:48:49] <FromDiscord> <Rika> float(int(1)) == 1.0, cast[float](int(1)) == ??????????
[20:49:44] <FromDiscord> <aleclarson> is casting `uint8` to a `int64` alright, or am i better off with conversion?
[20:50:15] <FromDiscord> <Rika> cast only when needed
[20:50:23] <FromDiscord> <Rika> use a conversion for as much as you can
[20:50:36] <FromDiscord> <@bracketmaster-5a708063d73408ce4> is there a way to run for loops at compile time?
[20:50:43] <FromDiscord> <aleclarson> In reply to @Rika "use a conversion for": great thx
[20:50:44] <FromDiscord> <Rika> yeah, wrap them in a static block
[20:51:14] <FromDiscord> <haxscramper> Don't we already have this in stdlib?↵(<@709044657232936960_fn=5b=49=52=43=5d>)
[20:51:16] <FromDiscord> <haxscramper> https://github.com/nim-lang/Nim/blob/devel/lib/std/sums.nim
[20:51:17] <FromDiscord> <vindaar> it was deprecated an hour ago or so
[20:51:22] <FromDiscord> <haxscramper> Ah
[20:51:25] <FromDiscord> <Rika> lmao
[20:51:26] <FromDiscord> <haxscramper> Quick reaction
[20:51:49] <FromDiscord> <vindaar> the new package is by the person who added it to the stdlib if I'm not mistaken
[20:51:53] <FromDiscord> <haxscramper> And a day ago I wanted to write inflammatory RFC about keeping modules small
[20:52:09] <FromDiscord> <Rika> lol
[20:52:39] <FromDiscord> <haxscramper> From our discussion on genast
[20:53:22] <FromDiscord> <haxscramper> I meant not keeping modules small and instead adding things to existing ones
[20:53:54] <FromDiscord> <leorize> we should encourage more packages instead of keep piling onto the stdlib
[20:54:08] <FromDiscord> <haxscramper> But anyway, how this got into stdlib (sums) in the first place is still beyond me
[20:54:27] <FromDiscord> <leorize> it's hard right now because, well, nimble
[20:55:10] <FromDiscord> <haxscramper> Do you think new RFC would fix that?
[20:55:11] <FromDiscord> <leorize> the basics, then yea
[20:55:32] <FromDiscord> <leorize> it's not fixing the "using a package is harder than stdlib", but that is not too important right now
[21:03:17] <FromDiscord> <@bracketmaster-5a708063d73408ce4> any restrictions to what nim can handle at compile time?
[21:03:28] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Hopefully more advanced than nim secret?
[21:03:35] <FromDiscord> <@bracketmaster-5a708063d73408ce4> handle -\> evaluate
[21:03:48] <FromDiscord> <@bracketmaster-5a708063d73408ce4> As in, evaluate in a `static` block
[21:04:06] <FromDiscord> <leorize> anything that doesn't involve FFI works
[21:05:17] <FromDiscord> <leorize> so most of Nim, except things like `re`, `nre` (as these are pcre wrappers), things that get the current time
[21:16:20] <FromDiscord> <@bracketmaster-5a708063d73408ce4> ah
[21:16:26] <FromDiscord> <@bracketmaster-5a708063d73408ce4> does it use the Nim VM?
[21:17:46] *** Quits: max22- (~maxime@2a01cb08833598004a8ebd1c7a4675d2.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[21:18:19] <FromDiscord> <Rika> static blocks? yes
[21:34:18] <FromDiscord> <timotheecour> > anything that doesn't involve FFI works↵on 1st approximation. `cast[int8](somefloat)` works at RT but not VM currently; there's also `--experimental:compiletimeFFI`
[21:35:49] <FromDiscord> <@bracketmaster-5a708063d73408ce4> sent a code paste, see https://play.nim-lang.org/#ix=3s8U
[21:39:09] <FromDiscord> <timotheecour> sent a code paste, see https://paste.rs/pkW
[21:39:15] <FromDiscord> <timotheecour> (edit) "https://play.nim-lang.org/#ix=3s8V" => "https://play.nim-lang.org/#ix=3s8W"
[21:39:27] <FromDiscord> <timotheecour> (edit) "https://play.nim-lang.org/#ix=3s8W" => "https://play.nim-lang.org/#ix=3s8X"
[21:39:27] <FromDiscord> <@bracketmaster-5a708063d73408ce4> sent a long message, see https://paste.rs/W3E
[21:40:45] <FromDiscord> <timotheecour> don't use getTime for benchmarking, read the docs
[21:41:24] <FromDiscord> <konsumlamm> is the error `Error: cannot 'importc' variable at compile time`? that means it uses the FFI and thus can't be used in the VM
[21:44:43] <FromDiscord> <@bracketmaster-5a708063d73408ce4> no, oddly enough, the error was\: "/Users/yehowshuaimmanuel/git/BitVector/fac.nims(9, 5) Error\: cannot evaluate at compile time\: a"
[21:45:44] <FromDiscord> <haxscramper> `--profileVm:on`
[21:46:55] <FromDiscord> <@bracketmaster-5a708063d73408ce4> `nim --profileVM:on fac.nims` like that?
[21:49:18] <FromDiscord> <RattleyCooper> Is `osproc`'s `readLines` working properly?  I keep getting an error saying that a `File` type is expected but I'm using a `Process` type
[21:49:35] <FromDiscord> <RattleyCooper> same with `lines` and `readLine`
[21:49:45] <FromDiscord> <RattleyCooper> Docs say to use a `Process` type.
[21:49:56] <FromDiscord> <@bracketmaster-5a708063d73408ce4> @\_discord\_427948629249228800\:t2bot.io  - looking for benchmark[s] benchmark[ing] in the manual - didn't see it - SO recomended using `times` here\: https://stackoverflow.com/questions/36577570/how-to-benchmark-few-lines-of-code-in-nim
[21:50:08] <FromDiscord> <@bracketmaster-5a708063d73408ce4> do you recommend a better way?
[21:51:16] <FromDiscord> <RattleyCooper> I'm importing all of `osproc`, am I missing something here?
[21:52:10] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I see you can set `--benchmarkVM:on`
[21:52:26] <FromDiscord> <@bracketmaster-5a708063d73408ce4> `nim --benchmarkVM:on fac.nims` doesn't seem to do anything different?
[21:52:33] <FromDiscord> <@bracketmaster-5a708063d73408ce4> https://nim-lang.org/docs/nimc.html
[21:54:28] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Code snippet?↵(@RattleyCooper)
[21:55:07] <FromDiscord> <RattleyCooper> sent a long message, see http://ix.io/3s93
[21:55:52] <FromDiscord> <RattleyCooper> Haven't hooked up `echo_data` to the `exec_processes` call yet bc it won't compile as is, telling me it expectes a `File` type
[21:55:57] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[21:55:58] <FromDiscord> <RattleyCooper> (edit) "expectes" => "expects"
[21:56:54] <FromDiscord> <RattleyCooper> Command is being executed if I remove the call to `lines` bc the host name is displayd by the process
[21:57:14] <FromDiscord> <RattleyCooper> (edit) "process" => "process.  So it works, I just can't check on the output."
[22:00:30] <FromDiscord> <@bracketmaster-5a708063d73408ce4> sent a code paste, see https://play.nim-lang.org/#ix=3s95
[22:01:07] <FromDiscord> <dom96> bracketmaster: please switch to Discord/Matrix if you can, the code is coming through really poorly via the relay
[22:01:30] <FromDiscord> <@bracketmaster-5a708063d73408ce4> import osproc↵let outp = execProcess("hostname", args=["-s"], options={poUsePath})↵echo outp
[22:01:36] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I'll just do unformatted from now on
[22:02:41] <FromDiscord> <RattleyCooper> Yeah, I have no issues using `execProcess` but `execProcesses` isn't letting me access output via any of the `readLine`, `readLines` or `lines`
[22:03:07] <FromDiscord> <RattleyCooper> I'm hoping to run the commands in parallel and run the callback once the process is finished.
[22:03:49] <FromDiscord> <@bracketmaster-5a708063d73408ce4> ah - I've never tried that before - not sure I'm of much help
[22:03:56] <FromDiscord> <RattleyCooper> (edit) "I'm hoping to run the commands in parallel and run ... theoutput" 03added "a callback to log" | "callback" => "output"
[22:04:44] <FromDiscord> <RattleyCooper> It's ok.  The documentation states that `readLines`, `readLine` and `lines` take a `Process` type but if you give it a `Process` then it errors out saying it needs a `File`
[22:05:42] <FromDiscord> <RattleyCooper> I think it's broken
[22:06:28] <FromDiscord> <⃟⃟> in regards to the stream object
[22:06:33] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Anybody know how to benchmark a nimscript?
[22:06:42] <FromDiscord> <⃟⃟> do i have to implement everything i see in the documentation to make my own stream?
[22:07:10] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I've been trying this for the past hour and I haven't found a way
[22:07:19] <FromDiscord> <@bracketmaster-5a708063d73408ce4> `--profiler:on --stackTrace:on` from compiled nim also doesn't work
[22:11:32] <FromDiscord> <timotheecour> here, it's explained here: https://forum.nim-lang.org/t/5261#52440
[22:33:36] <FromDiscord> <Quantumly> Is it possible to get Nim to put everything in a single C file including the base?
[22:34:46] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 246 seconds)
[22:35:06] <FromDiscord> <leorize> not without compiler modification
[22:43:56] *** Joins: tiorock (~rc@192.12.115.193)
[22:43:56] *** Quits: tiorock (~rc@192.12.115.193) (Changing host)
[22:43:56] *** Joins: tiorock (~rc@user/rockcavera)
[22:43:56] *** rockcavera is now known as Guest9441
[22:43:56] *** Quits: Guest9441 (~rc@user/rockcavera) (Killed (mercury.libera.chat (Nickname regained by services)))
[22:43:56] *** tiorock is now known as rockcavera
[22:45:32] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[22:45:33] <FromDiscord> <gerwy> okay so i basically made my little youtube bot, i could probably go below 100LoC but well it just tool made for me to be even more lazy↵but i have a problem
[22:45:53] <FromDiscord> <gerwy> when i want to open a file, it only gets a filename, not entire path, how to use path instead of only filename?
[22:47:26] <FromDiscord> <gerwy> nvm found it :3
[22:49:37] <FromDiscord> <gerwy> okay nevermind
[22:49:45] <FromDiscord> <gerwy> oh to open file with path? not filename?
[22:52:33] <FromDiscord> <haxscramper> https://zen.su/posts/amalgamating-nim-programs/↵(@Quantumly)
[22:55:17] <FromDiscord> <JH> hello, nim gets flagged as a virus by windows when I download it from nim-lang.org. Is it normal?
[22:56:28] <FromDiscord> <timotheecour> read related forum posts
[22:58:04] <FromDiscord> <JH> found one thanks 👍
[22:58:10] <FromDiscord> <gerwy> guys pls halp
[22:59:06] <fn> <06Prestige99> read a file by its path?
[22:59:31] <FromDiscord> <gerwy> yeah, how to get file by its path, not by the filename, because putting path into `open` doesn't work
[23:01:10] <FromDiscord> <timotheecour> define filename; it can be used with different meanings. you have `readFile(path)` if that's what you want.
[23:03:34] <FromDiscord> <gerwy> nope, doesn't work
[23:03:52] <FromDiscord> <gerwy> it takes filename too
[23:04:11] <FromDiscord> <timotheecour> then define your meaning of path
[23:05:17] <FromDiscord> <gerwy> not relative path to file↵what i mean by that is i open script in one place and i want it to open file in another place, not relative to the script
[23:05:36] <FromDiscord> <gerwy> for example i open script at ~/ but the files i need are in ~/Youtube Fetcher/
[23:05:36] *** Joins: fputs (~fputs@137.220.33.212)
[23:05:38] <fn> <06Prestige99> So you have an absolute path to the file?
[23:05:43] <FromDiscord> <gerwy> yep
[23:05:44] <FromDiscord> <gerwy> how
[23:06:20] <fn> <06Prestige99> idk if it expands ~
[23:06:23] <fn> <06Prestige99> if you're using that
[23:07:02] <FromDiscord> <gerwy> yeah well hmm it should but i will try absolute path from root
[23:08:05] <FromDiscord> <gerwy> hmm doesn't output error so i guess it works :3↵But i would treat it as a bug or lack of functionality, it should expand ~ i think
[23:08:09] <FromDiscord> <RattleyCooper> You can use `os.getHomeDir()` to get home directory without knowing username, etc
[23:08:36] <FromDiscord> <RattleyCooper> and you can make your own expanding function
[23:08:42] <FromDiscord> <gerwy> okaay i will add that if someone else would like to use this program, but its not likely
[23:08:58] <FromDiscord> <timotheecour> see expandTilde
[23:09:07] <FromDiscord> <RattleyCooper> or do that XD
[23:09:08] <FromDiscord> <timotheecour> (edit) "see ... expandTilde" 03added "also"
[23:09:27] <FromDiscord> <timotheecour> everything works as intended here.
[23:09:40] <FromDiscord> <timotheecour> (edit) "here." => "as far as those things are concerned."
[23:10:25] <FromDiscord> <gerwy> In reply to @timotheecour "see also expandTilde": oh right yeah there is something like this↵but shouldn't this be in open already? Or maybe there is something like this and i don't know about it, like a macro with open and expandTilde
[23:11:44] *** Joins: rockcavera (~rc@192.12.113.192)
[23:11:44] *** Quits: rockcavera (~rc@192.12.113.192) (Changing host)
[23:11:44] *** Joins: rockcavera (~rc@user/rockcavera)
[23:14:08] <FromDiscord> <timotheecour> separation of concerns.
[23:19:17] <FromDiscord> <gerwy> okay okay it works
[23:19:18] <FromDiscord> <gerwy>  https://media.discordapp.net/attachments/371759389889003532/862042537165586462/Zrzut_ekranu_2021-07-6_o_20.png
[23:20:42] <FromDiscord> <gerwy> im pretty proud of myself, thanks everyone for help :3 and sorry for disturbing chat https://media.discordapp.net/attachments/371759389889003532/862042892466126897/Zrzut_ekranu_2021-07-6_o_20.50.21.png
[23:28:55] <FromDiscord> <@bracketmaster-5a708063d73408ce4> thanks↵(@timotheecour)
[23:29:07] *** Joins: max22- (~maxime@2a01cb0883359800df4cb6313c4e6042.ipv6.abo.wanadoo.fr)
[23:38:23] <FromDiscord> <ynfle (ynfle)> Can the case statement macro from fusion/matching be used as an expression? It doesn't seem like it can. Anyone if it can?
[23:39:05] <FromDiscord> <konsumlamm> it should be possible
[23:39:13] <FromDiscord> <konsumlamm> maybe you dpn't have an else case?
[23:39:18] <FromDiscord> <konsumlamm> (edit) "dpn't" => "don't"
[23:40:30] <FromDiscord> <ynfle (ynfle)> I don't think I need one. I've covered all the cases I think
[23:40:36] <FromDiscord> <ynfle (ynfle)> One second I'll show you
[23:41:34] <FromDiscord> <ynfle (ynfle)> https://play.nim-lang.org/#ix=3s9J
[23:41:47] <FromDiscord> <ynfle (ynfle)> This should work as I've covered all the cases
[23:42:17] <FromDiscord> <Kermithos> In reply to @Life Sucks "im pretty proud of": are you using RSS?
[23:42:34] <FromDiscord> <ynfle (ynfle)> Me?
[23:42:41] <FromDiscord> <ynfle (ynfle)> What's RSS in this context?
[23:42:44] <FromDiscord> <Kermithos> no, @gerwy
[23:42:55] <FromDiscord> <gerwy> In reply to @Kermithos "are you using RSS?": yeep↵getting the first entry in channels rss feed
[23:43:11] <FromDiscord> <Kermithos> In reply to @Life Sucks "yeep getting the first": nice, any ratelimit problems?
[23:43:17] <FromDiscord> <ynfle (ynfle)> \:thumbsup\:
[23:43:18] <FromDiscord> <konsumlamm> In reply to @ynfle (ynfle) "I don't think I": well you covered all cases, but the macro doesn't know that, it doesn't check for exhaustiveness, so you need to add a dummy `else` case
[23:43:40] <FromDiscord> <konsumlamm> or change the last case to an else
[23:43:56] <FromDiscord> <gerwy> In reply to @Kermithos "nice, any ratelimit problems?": what do you mean by ratelimit ?
[23:43:56] <FromDiscord> <ynfle (ynfle)> Oh ok
[23:44:23] <FromDiscord> <ynfle (ynfle)> Maybe I'll add a PR
[23:44:24] <FromDiscord> <@bracketmaster-5a708063d73408ce4> is there documentation for nimVM?
[23:44:31] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Like its bytecode or anything?
[23:44:37] <FromDiscord> <Kermithos> In reply to @Life Sucks "what do you mean": the first time I told you about the RSS endpoint you said that you may get ratelimited by youtube
[23:46:02] <FromDiscord> <gerwy> hmm i was talking about FreeTube, because after some amount of subscribers you have on it, it switches from i think Youtube's API (or Local API idk, something like this) to RSS Feed, so you won't get banned or slowed down
[23:46:12] <FromDiscord> <Kermithos> ah ok
[23:46:44] <FromDiscord> <gerwy> rss feed is actually pretty fast, i slow down my app a little so that it doesn't quit suddenly and also gives me time to react for new videos showed
[23:47:08] <FromDiscord> <gerwy> but well, for now no new vids are here :3 so need to wait for them to see if it actually works
[23:47:12] <FromDiscord> <Kermithos> is the code already on github?
[23:47:31] <FromDiscord> <haxscramper> https://github.com/haxscramper/fusion/blob/f55323541494fb4718ef68e76e504556f5a13dfd/tests/tmatching.nim#L242
[23:49:12] <FromDiscord> <gerwy> noope, its a little messy, i didn't planned on open sourcing it↵i can share it with you if you have any improvements ↵its almost less than 100LoC
[23:49:28] <FromDiscord> <haxscramper> `else` clause is mandatory
[23:49:28] <FromDiscord> <haxscramper> There is no exhaustiveness cheking in `fusion/matching`
[23:49:29] <FromDiscord> <haxscramper> But I think it should be added in v2 for simple cases
[23:49:29] <FromDiscord> <haxscramper> Though it is not really useful
[23:49:29] <FromDiscord> <haxscramper> Except for tuples of enum and case objects
[23:49:32] <FromDiscord> <haxscramper> IIRC there is no implementation documentation, but you can look into compiler
[23:49:32] <FromDiscord> <haxscramper> `compiler/vm`
[23:49:32] <FromDiscord> <ynfle (ynfle)> @haxscramper\:matrix.org how hard do you think it is to implement
[23:49:33] <FromDiscord> <haxscramper> It is a register-based VM with opcodes
[23:50:25] <FromDiscord> <Kermithos> In reply to @Life Sucks "noope, its a little": sure, if you want you can send me the code via PM
[23:50:43] <FromDiscord> <haxscramper> Depends on the subset of features you want to support
[23:50:48] <FromDiscord> <haxscramper> and `case` in matching is `untyped`
[23:50:48] <FromDiscord> <haxscramper> In order to implement full coverage checking you need to have a type information
[23:50:51] <FromDiscord> <haxscramper> And it is extremely annoying to work with
[23:51:03] <FromDiscord> <haxscramper> So yes, it is doable, I even know how, but not sure if the effort worth it
[23:51:32] <FromDiscord> <haxscramper> But it would turn into multistage macro
[23:52:27] <FromDiscord> <@bracketmaster-5a708063d73408ce4> some crude tests seem to indicate nimVM is about 1000 times slower than python
[23:52:34] <FromDiscord> <@bracketmaster-5a708063d73408ce4> and by crude, I mean fac(100)
[23:52:42] <FromDiscord> <haxscramper> well, that's not a test
[23:52:50] <FromDiscord> <haxscramper> I'm sorry but that's BS
[23:52:58] <FromDiscord> <@bracketmaster-5a708063d73408ce4> WDYM?
[23:53:16] <FromDiscord> <leorize> it is slower than python vm, confirmed by Araq
[23:53:17] <FromDiscord> <ynfle (ynfle)> Not having to as an else for tuples and objects
[23:53:28] <FromDiscord> <haxscramper> `> about 1000 times `?
[23:53:42] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I know, I was wondering about how much slower in practice
[23:53:51] <FromDiscord> <@bracketmaster-5a708063d73408ce4> fac BigInt is a solid test
[23:54:05] <FromDiscord> <leorize> not sure what's the metric, but it's not fast fast, for sure
[23:54:10] <FromDiscord> <@bracketmaster-5a708063d73408ce4> BigInt is data structure as well as arithmetic intense
[23:54:36] <FromDiscord> <@bracketmaster-5a708063d73408ce4> BigInt requires traversing and appending a Seq as well as lots of multiplies and adds
[23:54:38] <FromDiscord> <haxscramper> In reality it means "not having `else` for flat tuples with enum values and objects that dont' have their field matched". Everything else is hard to implement
[23:54:38] <FromDiscord> <leorize> isn't most python bigints shell out to C?
[23:54:58] <FromDiscord> <@bracketmaster-5a708063d73408ce4> BigInt in Nim -c -r is about as fast as Python
[23:55:23] <FromDiscord> <haxscramper> That means python shells out to C
[23:55:25] <FromDiscord> <@bracketmaster-5a708063d73408ce4> yes - I know
[23:55:28] <FromDiscord> <ynfle (ynfle)> What does "objects that don't have their field matched mean?
[23:55:51] <FromDiscord> <gerwy> In reply to @Kermithos "sure, if you want": if you want it, because im pretty done with the code and if it works, its finished for me, i kinda made it for myself so there isn't any error checking and the absolute path is also made for my disk so if you want to test it out you need to change it
[23:56:03] <FromDiscord> <@bracketmaster-5a708063d73408ce4> Actually, BigInt in compiled Nim is 10x slower than Python - but that's the fault of BigInt implementation
[23:56:18] <FromDiscord> <@bracketmaster-5a708063d73408ce4> If we factor that in, we could say nimVM is 100x slower than Python?
[23:56:22] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3s9Q
[23:56:28] <FromDiscord> <@bracketmaster-5a708063d73408ce4> like I said - very crude
[23:56:30] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3s9R
[23:56:31] <FromDiscord> <haxscramper> sent a code paste, see https://paste.rs/R18
[23:56:42] <FromDiscord> <@bracketmaster-5a708063d73408ce4> but nimVM is clearly much slower than Python
[23:56:53] <FromDiscord> <@bracketmaster-5a708063d73408ce4> I just didn't expect it to be that much slower
[23:56:56] <FromDiscord> <haxscramper> checking for `strVal` - impossible by definition
[23:57:27] <FromDiscord> <leorize> if you want a VM bench it should be fully contained in the VM
[23:57:49] <FromDiscord> <@bracketmaster-5a708063d73408ce4> fac(100) is fully contained in the VM
[23:58:01] <FromDiscord> <leorize> at the moment we don't have compiler plugins yet to shell some vm code to native for speed up, nor do we have jit
[23:58:40] <FromDiscord> <@bracketmaster-5a708063d73408ce4> yes - I realize that
[23:58:57] <FromDiscord> <haxscramper> No, it is spread between VM and compiled part. For example internally VM uses `PNode` to operate on sequences, so most likely sequence addition part runtime comes from VM
[23:59:05] <FromDiscord> <haxscramper> moving data to and from
[23:59:19] <FromDiscord> <haxscramper> IIRC it uses `PNode` to represent runtime values
[23:59:28] <FromDiscord> <leorize> that's just impl detail
[23:59:52] <FromDiscord> <@bracketmaster-5a708063d73408ce4> the reason I bring this up is because I'm implementing a digital logic(like Verilog or VHDL) language in Nim
