[01:26:46] <FromDiscord> <huantian> Currently trying to make a program that downloads files from a list of urls, and wondering if there was a good way to get the name of the file with downloadFile
[01:27:01] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:27:27] <FromDiscord> <huantian> since there are duplicate file names, I'd need to check if something with that filename already exists or not
[01:27:57] <FromDiscord> <huantian> but mainly I want to not have to do a GET request for the Content-Disposition header, then the other one in downloadFile
[01:28:37] <FromDiscord> <Elegantbeef> Is the file name in the url?
[01:28:52] <FromDiscord> <huantian> unfortunately not for all the urls
[01:29:26] <FromDiscord> <Elegantbeef> Well then you dont have anyway to get the file name afaik
[01:32:39] <FromDiscord> <huantian> the Content-Disposition header contains the filename, which I can probably extract with some regex or something‚Üµbut I'd need to do a separate request to read the headers
[01:32:56] <FromDiscord> <huantian> ig I could just copy the code from downloadFile and make my own version
[01:34:13] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[01:35:09] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[01:46:03] <FromDiscord> <Elegantbeef> Cant you just access the header properly instead of abusing regex? üòÄ
[01:49:05] <FromDiscord> <huantian> unfotunately the header value looks like this `attachment;filename="Lemon Demon - Angry People.rdzip";filename=UTF-8''Lemon%20Demon%20-%20Angry%20People.rdzip` with the quotation marks also being optional (apparently)
[01:51:54] <FromDiscord> <huantian> I am using the headers field but I need to do something to just get the filename here
[01:54:23] <FromDiscord> <Elegantbeef> I guess you need a str capture mechanism
[01:54:23] <FromDiscord> <Elegantbeef> So https://play.nim-lang.org/#ix=3Kgw
[01:54:32] <FromDiscord> <Elegantbeef> I dont like regex in most cases so... üòÄ
[01:58:17] <FromDiscord> <huantian> heh
[02:02:40] <FromDiscord> <huantian> <https://play.nim-lang.org/#ix=3Kgy>‚ÜµTrying to do something, no idea if this is right xD
[02:03:18] <FromDiscord> <Elegantbeef> Why are we using private access?
[02:04:15] <FromDiscord> <huantian> HttpClient.getBody is a private field
[02:04:37] <FromDiscord> <Elegantbeef> That only adds to the confusion
[02:09:00] <FromDiscord> <huantian> uhh sorry lemme think a bit
[02:11:50] <FromDiscord> <Elegantbeef> I guess what you're doing is copying the downloadFile proc so it makes sense
[02:11:50] <FromDiscord> <Elegantbeef> Just odd
[02:14:51] <FromDiscord> <huantian> yeah I'm not sure if there's a better way to do the equivalent of downloadFile, but add my own code that does something with the response
[02:15:29] <FromDiscord> <huantian> copying it directly is what came to my mind, but might not be the best idea
[02:16:44] <FromDiscord> <Elegantbeef> Well you can do an http get request then write the bodystream to a file i think
[02:17:33] <FromDiscord> <huantian> does that load the entire file into memory though?
[02:17:38] <FromDiscord> <Elegantbeef> No
[02:17:45] <FromDiscord> <Elegantbeef> `bodystream` is a stream
[02:17:55] <FromDiscord> <huantian> ah
[02:18:48] <FromDiscord> <sOkam!> Is there fixed-point arithmetic in Nim?
[02:19:05] <FromDiscord> <Elegantbeef> Ah nvm it's a stringStream
[02:19:10] <FromDiscord> <Elegantbeef> So yea that all in memory
[02:31:35] <FromDiscord> <huantian> oh ok
[02:40:25] *** Joins: hexeme (~hexeme@user/hexeme)
[02:42:22] *** Joins: mahlon_ (~mahlon@martini.nu)
[02:42:28] *** Joins: rp3 (~rp@cpc77289-basf12-2-0-cust607.12-3.cable.virginm.net)
[02:47:04] *** Joins: xet7 (~xet7@user/xet7)
[02:47:28] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (*.net *.split)
[02:47:28] *** Quits: arkurious (~arkurious@user/arkurious) (*.net *.split)
[02:47:28] *** Quits: mahlon (~mahlon@martini.nu) (*.net *.split)
[02:47:28] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (*.net *.split)
[02:47:28] *** Quits: rp2 (~rp@cpc77289-basf12-2-0-cust607.12-3.cable.virginm.net) (*.net *.split)
[02:47:28] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[02:47:28] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[02:47:28] *** Quits: syl (~z@user/syl) (*.net *.split)
[02:47:28] *** Quits: GnuYawk (~GnuYawk@user/gnuyawk) (*.net *.split)
[02:47:29] *** Quits: NimBot (~NimBot@mail.nim-lang.org) (*.net *.split)
[02:47:29] *** Quits: ldlework (~hexeme@user/hexeme) (*.net *.split)
[02:47:29] *** Quits: nac (~nac@user/nac) (*.net *.split)
[02:47:29] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[02:50:26] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[02:50:26] *** Joins: NimBot (~NimBot@mail.nim-lang.org)
[02:50:26] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[02:50:26] *** Joins: jkl (~jkl@user/jkl)
[02:50:26] *** Joins: syl (~z@user/syl)
[02:50:26] *** Joins: nac (~nac@user/nac)
[02:50:26] *** Joins: GnuYawk (~GnuYawk@user/gnuyawk)
[02:50:26] *** Joins: nisstyre (~wes@user/nisstyre)
[02:50:45] *** Joins: cornfeedhobo_ (~cornfeedh@user/cornfeedhobo)
[02:52:41] *** Joins: SebastianM (~seba@user/sebastianm)
[02:53:36] <SebastianM> Happy New Year! 
[02:54:41] *** Joins: arkurious (~arkurious@user/arkurious)
[02:55:00] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[03:01:37] *** Quits: thomasross (~thomasros@dyn-pppoe-142-51-227-74.vianet.ca) (Ping timeout: 240 seconds)
[03:06:06] <nrds> <06Prestige99> you too SebastainM
[03:06:11] *** Quits: oprypin (~irc@pryp.in) (Quit: Bye)
[03:06:28] *** Joins: oprypin (~irc@pryp.in)
[03:14:36] *** Joins: neurocyte0132889 (~neurocyte@IP-045136168007.dynamic.medianet-world.de)
[03:14:36] *** Quits: neurocyte0132889 (~neurocyte@IP-045136168007.dynamic.medianet-world.de) (Changing host)
[03:14:36] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[03:38:10] *** hexeme is now known as ldlework
[04:12:00] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c4c6:c62c:ab52:6d38) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[04:15:50] *** Quits: GnuYawk (~GnuYawk@user/gnuyawk) (Quit: GnuYawk)
[04:16:13] *** Joins: GnuYawk (~GnuYawk@user/gnuyawk)
[04:35:30] <FromDiscord> <Isofruit> Happy new year!
[04:36:02] <FromDiscord> <Isofruit> So on the one hand, I finished celebrating with the fam, it's like 2 am, I'm on a mildly fucked up sleep cycle because I overdid it yesterday and I've written up a response on a github issue
[04:36:19] <FromDiscord> <Isofruit> On the other, that would be posting a response to a github issue at 2 am on new years
[04:36:41] <FromDiscord> <Isofruit> Life choices are difficult
[04:37:37] <FromDiscord> <Elegantbeef> It's not 2am everywhere üòú
[04:38:50] <FromDiscord> <Isofruit> Ah yes, the good old "It's always 4pm somewhere"-excuse!
[04:39:47] <FromDiscord> <Isofruit> Well, to be fair, what might be seen as weird is the fact that this issue did not let my brain go until I wrote up a response, even on new years eve, less the posting of it. So given that, I already did the weird thing, not much saving now other than pretending ... üòê
[04:56:18] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[05:11:15] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[05:22:37] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[05:51:49] <FromDiscord> <macintacos> In reply to @leorize "unfortunately testament is one": Following up on this - what‚Äôs the tool to use for unit testing in Nim in that case, if it‚Äôs not really meant to be used in anything other than the compiler?
[05:52:50] <FromDiscord> <Rika> There‚Äôs another package that said it‚Äôs deprecated but in reality it isn‚Äôt
[05:52:59] <FromDiscord> <Rika> Think it‚Äôs called unit test or so
[06:29:39] <FromDiscord> <macintacos> This? https://nim-lang.org/docs/unittest.html
[06:29:52] <FromDiscord> <macintacos> The second section says to use testament lol
[06:31:08] <FromDiscord> <Rika> Again yes it‚Äôs really not the case
[06:31:33] <FromDiscord> <Rika> Most people still use it
[06:36:13] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[06:37:14] <FromDiscord> <leorize> https://github.com/disruptek/balls \<- this is a good one to use
[06:37:46] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:38:43] <FromDiscord> <macintacos> Oh that‚Äôs nice, I‚Äôll give it a try, thanks!
[06:39:02] <FromDiscord> <huantian> Balls? Balls are good
[06:39:43] <FromDiscord> <macintacos> Lmao
[06:40:25] <FromDiscord> <macintacos> Is there any mocks with this, or perhaps some other lib? (Should probably look around before asking this but I mean might as well üôÇ )
[06:41:26] <FromDiscord> <macintacos> Rather like, is there a straightforward way to build mocks and all that - coming from pytest I feel like that‚Äôs one habit I‚Äôll need to work around ü§î
[06:46:38] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[06:54:13] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[06:55:05] <FromDiscord> <Isofruit> Turns out jsony drops part of your string from `<myCustomType>.toJson()` if `myCustomType` contains a field with a distinct custom DateTime type. Github issue is open.‚ÜµWell that's slightly annoying...
[06:55:14] <FromDiscord> <Isofruit> (edit) "annoying..." => "annoying =/"
[06:56:22] <FromDiscord> <Elegantbeef> Did you make a `parseHook` for your custom DateTime?
[06:56:53] <FromDiscord> <Elegantbeef> parse and dump hooks rather
[06:58:52] <FromDiscord> <Isofruit> sent a code paste, see https://paste.rs/dxk
[06:59:22] <FromDiscord> <Elegantbeef> you're doing `s =` not `s.add`
[06:59:26] <FromDiscord> <Isofruit> (edit) "https://play.nim-lang.org/#ix=3KhR" => "https://play.nim-lang.org/#ix=3KhQ"
[07:00:12] <FromDiscord> <Isofruit> sonofa
[07:00:17] <FromDiscord> <Rika> Lol
[07:01:04] <FromDiscord> <Elegantbeef> Really that should be a distinct `JsonString` so you have to manually convert unless using `add`
[07:01:15] <FromDiscord> <Elegantbeef> Some people just dont use distincts enough
[07:03:33] <FromDiscord> <sOkam!> what's the default size for floats in nim?
[07:03:40] <FromDiscord> <Elegantbeef> `float` is 64bit
[07:04:13] <FromDiscord> <Elegantbeef> That API is very unsafe can nuke or remove values unintentionally
[07:05:03] <FromDiscord> <Elegantbeef> Plus using a distinct means all you'd have to do is `s.add yourString` and it could quote it automatically
[07:06:32] *** Quits: GnuYawk (~GnuYawk@user/gnuyawk) (Excess Flood)
[07:07:08] *** Joins: GnuYawk (~GnuYawk@user/gnuyawk)
[07:08:33] <FromDiscord> <Isofruit> Wouldn't that still run me into issues with the fact I need that distinct DateTime for getting my DateTime data out of my sqlite db with norm?
[07:08:57] <FromDiscord> <Elegantbeef> Did you read my comments
[07:09:02] <FromDiscord> <Elegantbeef> It's all about the json hook's unsafety
[07:09:29] <FromDiscord> <Elegantbeef> I was suggesting a `type JsonString = distinct string` for the jsony hook API
[07:10:01] <FromDiscord> <Isofruit> Ohhhh, I read but there's the distinct barrier between "word in" and "word comprehend"
[07:10:06] <FromDiscord> <Elegantbeef> Which would've solved this problem before you even faced it since the compiler would've said "you're attempting to assign a string to a JsonString"
[07:10:15] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[07:11:26] <FromDiscord> <Elegantbeef> Basically it'd prevent this error from ever happening unless you went `s = JsonString(yourString)` üòõ
[07:12:28] <FromDiscord> <sOkam!> In reply to @Elegantbeef "`float` is 64bit": do you know if there's fixed point floats implemented?‚Üµor is that an external library required thing?
[07:12:40] <FromDiscord> <sOkam!> (edit) "floats" => "arithmetic"
[07:12:58] <FromDiscord> <Elegantbeef> https://nimble.directory/search?query=fixed+point there is no fixed point in the stdlib iirc
[07:14:47] <FromDiscord> <sOkam!> oh nice, its a libfixmath wrapper
[07:15:28] <FromDiscord> <IsaacPaul> There is also https://gist.github.com/planetis-m/c13529cac44b4a9de3f073de502315ee
[07:15:57] <FromDiscord> <IsaacPaul> I haven't add any time to compare and contrast them tho
[07:16:31] <FromDiscord> <IsaacPaul> (edit) "I haven't add any time to compare and contrast them tho ... " 03added "(so no recommendations)"
[07:20:31] <FromDiscord> <Isofruit> In reply to @Elegantbeef "Basically it'd prevent this": I'll take this as another very clear sign I've been awake too long, sleep once more.‚ÜµThanks for the explanation!
[07:20:52] <FromDiscord> <Elegantbeef> No problem
[07:21:02] <FromDiscord> <Elegantbeef> I heavily abuse distinct so it's almost always my solution üòõ
[07:22:29] <FromDiscord> <sOkam!> fastmath is very solid. would only need to be extended with a wrapper for 64 and matrices
[07:22:37] <FromDiscord> <sOkam!> (edit) "fastmath is very solid. would only need to be extended with a wrapper for ... 64libs" 03added "the" | "the64 and matrices ... " 03added "libs"
[07:22:47] <FromDiscord> <sOkam!> (edit) "fastmath" => "libfixmath"
[07:23:12] <FromDiscord> <sOkam!> the og is really well made
[07:31:53] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:26:37] *** cornfeedhobo_ is now known as cornfeedhobo
[08:58:14] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 260 seconds)
[09:35:37] <NimEventer> New thread by Oyster: My notes on NPOI+Nim, see https://forum.nim-lang.org/t/8758
[12:09:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[12:54:16] *** Joins: bkay (~beshr@c-5480e355.09-52-616c6b1.bbcust.telenor.se)
[12:55:25] *** Quits: beshr (~beshr@user/beshr) (Ping timeout: 268 seconds)
[13:32:39] <FromDiscord> <Isofruit> Wait a minute, treeform is in this discord?
[13:32:48] <FromDiscord> <Isofruit> neat!
[13:32:49] <FromDiscord> <Rika> Yes
[13:32:53] <FromDiscord> <Rika> Has been for a long time
[13:39:49] <FromDiscord> <Isofruit> sent a code paste, see https://play.nim-lang.org/#ix=3Kjl
[13:40:22] <FromDiscord> <Isofruit> (edit) "https://play.nim-lang.org/#ix=3Kjl" => "https://play.nim-lang.org/#ix=3Kjm"
[13:42:20] <FromDiscord> <Solitude> perhaps
[13:45:36] *** Joins: neurocyte0132889 (~neurocyte@IP-045128181214.dynamic.medianet-world.de)
[13:45:36] *** Quits: neurocyte0132889 (~neurocyte@IP-045128181214.dynamic.medianet-world.de) (Changing host)
[13:45:36] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[14:28:29] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[15:29:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[16:03:37] *** Quits: rp3 (~rp@cpc77289-basf12-2-0-cust607.12-3.cable.virginm.net) (Ping timeout: 240 seconds)
[16:04:25] *** Joins: rp3 (~rp@cpc77289-basf12-2-0-cust607.12-3.cable.virginm.net)
[16:09:24] *** Quits: rp3 (~rp@cpc77289-basf12-2-0-cust607.12-3.cable.virginm.net) (Ping timeout: 240 seconds)
[16:11:35] *** Joins: rp3 (~rp@cpc77289-basf12-2-0-cust607.12-3.cable.virginm.net)
[16:16:27] <FromDiscord> <WhyDee> Hey everyone Im trying to use the following function:‚Üµhttps://github.com/juancarlospaco/psutil-nim/blob/master/src/psutil/psutil_windows.nim#L324
[16:19:51] <Amun-Ra> https://github.com/juancarlospaco/psutil-nim/blob/master/src/psutil/psutil_windows.nim#L331-L332
[16:19:53] <Amun-Ra> heh
[16:20:35] <FromDiscord> <WhyDee> Hey everyone Im trying to use the following function:‚Üµhttps://github.com/juancarlospaco/psutil-nim/blob/master/src/psutil/psutil_windows.nim#L324‚ÜµGet user name who own a process, but get error with LookupAccountSidW https://media.discordapp.net/attachments/371759389889003532/926819693174599690/Screenshot_2022-01-01_144921.png
[16:22:02] <FromDiscord> <WhyDee> In reply to @Amun-Ra "https://github.com/juancarlospaco/psutil-nim/blob/m": I mistakenly sent an unfinished message before, sorry.
[16:23:40] <Amun-Ra> WhyDee: I was just referring to those two lines
[16:24:55] <FromDiscord> <Yardanico> In reply to @WhyDee "Hey everyone Im trying": well, the code is incorrect as the two types aren't compatible, so you have to cast
[16:25:04] <FromDiscord> <Yardanico> i wonder if you need addr here or not though
[16:25:13] <FromDiscord> <Yardanico> ah yeah you do
[16:25:20] <FromDiscord> <Yardanico> i don't know how it worked before (if it ever did)
[16:25:42] <Amun-Ra> WhyDee: I'm not a windows user, check whether casting wcUser to LPWSTR works
[16:26:16] <FromDiscord> <WhyDee> I tried to cast wcUser and wcDomain it didnt solve the problemüò©
[16:27:03] <FromDiscord> <WhyDee>  https://media.discordapp.net/attachments/371759389889003532/926821321034305537/unknown.png
[16:27:11] <FromDiscord> <Yardanico> yes, you need addr too
[16:27:22] <FromDiscord> <WhyDee> cast[LPWSTR](wcUser.addr)
[16:27:24] <FromDiscord> <WhyDee> ??
[16:27:29] <FromDiscord> <Yardanico> yes
[16:27:39] <FromDiscord> <Yardanico> also, what's the reason you want to use that module?
[16:28:39] <Amun-Ra> well, that's why I always hide raw function implementations and use nim types only for function args
[16:28:54] <FromDiscord> <Yardanico> that's exactly that was done there
[16:28:57] <FromDiscord> <Yardanico> the error is inside the function itself
[16:29:04] <FromDiscord> <Yardanico> that code is incorrect, it should've never worked
[16:29:09] <FromDiscord> <Yardanico> idk if it ever did
[16:29:45] <FromDiscord> <Yardanico> they were passing wcUser itself (array of characters) to a Windows API function that expects a pointer to a string (array of characters) to write the username to
[16:31:23] <FromDiscord> <WhyDee> In reply to @Yardanico "the error is inside": Maybe you right I had a similar code that do the same, but I had problem too with the following function so I searched for more implementations
[16:31:34] <FromDiscord> <Yardanico> also why are you trying to use a fork if it doesn't have any new commits?
[16:31:38] <FromDiscord> <Yardanico> it's the same as the base repo which is https://github.com/johnscillieri/psutil-nim
[16:32:50] <FromDiscord> <WhyDee> I can send you my implementation  but it also fail with the following function
[16:33:01] <FromDiscord> <Yardanico> so did adding addr fix it or not?
[16:33:13] <FromDiscord> <Yardanico> and please reply to "also, what's the reason you want to use that module?", just curious
[16:33:28] <FromDiscord> <Yardanico> what specific functionality do you want to use?
[16:33:35] <FromDiscord> <WhyDee> In reply to @Yardanico "it's the same as": https://github.com/johnscillieri/psutil-nim/blob/e94c423b78a5fe1806643926a30a7e02d49124d3/doc/windows/functions/try_pid_user.md there is no different, the fork just came first on google haha
[16:34:00] <FromDiscord> <Yardanico> yeah that code is wrong
[16:34:01] <FromDiscord> <WhyDee> In reply to @Yardanico "and please reply to": I can tell you in private channel
[16:34:11] <FromDiscord> <Yardanico> sure, you can DM me then
[16:46:05] <FromDiscord> <apahl> Hi, I have a project in which I want to use two different libraries.‚ÜµOne uses the cpp backend, because it is a binding to a C++ toolkit, the other uses the c backend.‚ÜµUsing either cpp or c as backend in my project gives me an error in the library that requires the other backend.‚ÜµIs there a way to make this work (other than writing a C wrapper for the C++ toolkit)?
[16:47:15] <FromDiscord> <Yardanico> In reply to @apahl "Hi, I have a": what's the error when you compile with the C++ backend? and can you share the C lib in question?
[16:48:57] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 240 seconds)
[16:52:01] <FromDiscord> <apahl> sent a long message, see http://ix.io/3Kkl
[16:53:01] <FromDiscord> <apahl> (edit) "http://ix.io/3Kkl" => "http://ix.io/3Kkm"
[16:54:01] <FromDiscord> <apahl> Using either of the two libraries only does work.
[16:55:20] <FromDiscord> <apahl> I should maybe mention the platform as well, this is on Ubuntu Linux.
[16:59:27] <FromDiscord> <Yardanico> yeah, the error is indeed weird, but can you try some stub code just using webview without using your lib?
[16:59:40] <FromDiscord> <Yardanico> i think it will error out with the C backend as well because that error doesn't look C++ specific
[17:00:34] <FromDiscord> <apahl> You mean just using Webview with the cpp backend? Good idea, let me try.
[17:00:43] <FromDiscord> <Yardanico> even with the C backend, just to see if it works
[17:02:08] <FromDiscord> <apahl> Webview with c definitely does work. I tried that before I started.
[17:02:51] <FromDiscord> <apahl> But the strange thing is, just Webview with cpp does also work (just checked), so the problem must lie somewhere else.
[17:03:49] <FromDiscord> <apahl> Thanks for the pointer, that gives me some hope that it's fixable. I even have an idea. It might be related to the modification of LD_LIBRARY_PATH.
[17:04:39] <FromDiscord> <apahl> The modification is needed only for the RDkit part.
[17:07:42] <FromDiscord> <apahl> Yepp, the reason is indeed the LD_LIBRARY_PATH bit. ‚ÜµThank you again, I can work on this.
[17:07:59] <FromDiscord> <Yardanico> no problem, although I didn't really help much :)
[17:13:30] <FromDiscord> <Shiba> new year , new hello world program compiled https://media.discordapp.net/attachments/371759389889003532/926833011373248512/Capture.PNG
[17:13:49] <FromDiscord> <Rika> ?
[17:14:06] <FromDiscord> <Shiba> does quad core make difference
[17:14:12] <FromDiscord> <Yardanico> for the C compilation yes
[17:14:14] <FromDiscord> <Rika> Should for C
[17:14:24] <FromDiscord> <Rika> Fuck you yardanico dammit
[17:14:51] <FromDiscord> <Solitude> no, it wont help
[17:15:13] <FromDiscord> <Yardanico> In reply to @Solitude "no, it wont help": :forsenDespair:
[17:15:27] <FromDiscord> <Shiba> higher frequency?
[17:15:39] <FromDiscord> <Rika> Probably
[17:15:47] <FromDiscord> <Yardanico> In reply to @Shiba "higher frequency?": cores will help as rika said
[17:15:53] <FromDiscord> <Yardanico> frequency too
[17:16:06] <FromDiscord> <Yardanico> but core count won't improve nim speeds while higher freq does
[17:16:09] <FromDiscord> <Yardanico> but again, as I said before, use an SSD
[17:16:17] <FromDiscord> <Yardanico> i think it'll help you more than a faster CPU really
[17:16:22] <FromDiscord> <Solitude> how would it help
[17:16:28] <FromDiscord> <Yardanico> In reply to @Solitude "how would it help": he's using an HDD
[17:16:32] <FromDiscord> <Solitude> and?
[17:16:32] <FromDiscord> <Yardanico> compilation is a lot of small random files
[17:16:34] <FromDiscord> <Shiba> In reply to @Yardanico "but again, as I": i made 200mb hardisk from ram
[17:16:35] <FromDiscord> <Yardanico> IO time is noticeable
[17:16:47] <FromDiscord> <Yardanico> In reply to @Shiba "i made 200mb hardisk": but did you put both nim and the C compiler to it?
[17:16:50] <FromDiscord> <Yardanico> with all the stdlib?
[17:17:09] <FromDiscord> <Yardanico> even if you have your program's code on the ramdisk all standard code still comes from the HDD
[17:17:30] <FromDiscord> <Solitude> In reply to @Yardanico "compilation is a lot": its not a lot of files
[17:17:42] <FromDiscord> <Rika> ??
[17:17:59] <FromDiscord> <Solitude> compile whatever thing and tell me how many nim files it processed
[17:18:38] <FromDiscord> <Rika> And then how many C files does the C compiler then process
[17:18:52] <FromDiscord> <Solitude> same amount
[17:18:57] <FromDiscord> <Rika> Really
[17:20:06] <FromDiscord> <Yardanico> hm
[17:20:18] <FromDiscord> <Yardanico> yes, solitude is right about the amount of files that are actually compiled
[17:21:21] <FromDiscord> <Yardanico> but nim compiler for example checks all nimble packages directories for imports
[17:21:30] <FromDiscord> <Yardanico> but i guess normal FSes have that in metadata which is contiguous
[17:22:34] <FromDiscord> <Shiba> In reply to @Yardanico "but did you put": yes  didnt't change much , and suddently my laprop turned off
[17:22:41] <FromDiscord> <Shiba> (edit) "laprop" => "laptop"
[17:25:09] <FromDiscord> <Shiba> the one iam compiling and doing stuff on it right isn't mine , the one i have is broken (screen) , with an i5 2560M quad core base clock 2.5 ghz boost to 3, ram 6gb DDR3
[17:25:52] <FromDiscord> <Shiba> and so iam forced to use this pentium until it's fixed
[17:26:04] <FromDiscord> <Shiba> (edit) "and so iam forced to use this pentium ... until" 03added "laptop"
[17:26:13] <FromDiscord> <Yardanico> In reply to @Shiba "the one iam compiling": but you can just install linux on it and SSH onto it
[17:26:18] <FromDiscord> <Yardanico> or even on windows connect with remote desktop
[17:27:22] <FromDiscord> <Shiba> i guess that will work , iam gonna try that
[17:30:01] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[17:31:38] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[17:32:34] <FromDiscord> <Shiba> i also have a raspberryb pi 3B
[17:32:41] <FromDiscord> <Shiba> (edit) "raspberryb" => "raspberry"
[17:33:21] <FromDiscord> <Yardanico> i doubt it'll be much faster than your pentium CPU
[17:34:00] <FromDiscord> <Shiba> In reply to @Yardanico "i doubt it'll be": dual core 2.13 ghz vs quad core 1.2 ghz ?
[17:34:08] <FromDiscord> <Yardanico> In reply to @Shiba "dual core 2.13 ghz": ARM
[17:34:11] <FromDiscord> <Shiba> ahhh
[17:34:16] <FromDiscord> <Yardanico> frequency doesn't matter by itself
[18:08:50] <FromDiscord> <Isofruit> God I love the fact that you can leverage jsony to save yourself the entire hassle of writing serializers for objects
[18:16:15] *** Joins: arkurious (~arkurious@user/arkurious)
[18:37:20] <FromDiscord> <kaddkaka> sent a long message, see http://ix.io/3Klw
[18:39:23] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[18:40:13] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[18:51:04] <FromDiscord> <deech> Is there an existing flattening template in the standard library? eg. `flatten(1,2,3,@[4,5,6])` => `@[1,2,3,4,5,6]`?
[18:55:16] <FromDiscord> <Solitude> In reply to @kaddkaka "I'm getting my feet": no, because its not a regular procedure, its a compiler magic‚Üµhttps://github.com/nim-lang/Nim/blob/devel/lib/system/comparisons.nim#L141
[18:56:09] <FromDiscord> <kaddkaka> In reply to @Solitude "no, because its not": ok üëç
[18:59:48] <FromDiscord> <el__maco> hold on, how is `{.global.}` supposed to work. I thought it was supposed to be like `static` is in C, you could make locally defined variables that don't live in the local stack frame
[19:00:52] <FromDiscord> <el__maco> sent a code paste, see https://play.nim-lang.org/#ix=3Km3
[19:02:15] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[19:07:36] <FromDiscord> <el__maco> ok, it seems `--gc:arc` does this. If I remove that from the config it probably isn't initialized every time anymore
[19:07:44] <FromDiscord> <el__maco> what a magnificent footgun?
[19:09:13] <FromDiscord> <el__maco> I only noticed this by chance, because the performance went to crap. Of course it did, because I'm now creating a new frame buffer object every frame instead of reusing üòì
[19:16:56] <FromDiscord> <Solitude> sent a code paste, see https://play.nim-lang.org/#ix=3Kmk
[19:17:24] <FromDiscord> <kaddkaka> sent a code paste, see https://play.nim-lang.org/#ix=3Kmm
[19:17:51] <FromDiscord> <kaddkaka> (edit) 
[19:18:47] <FromDiscord> <el__maco> In reply to @Solitude "does this fit the": I think so yes. That's how I figured out to try without --gc:arc
[19:20:28] <FromDiscord> <Solitude> In reply to @kaddkaka "This function is not": declare them with `const`
[19:21:20] <FromDiscord> <kaddkaka> In reply to @Solitude "declare them with `const`": which one?
[19:21:42] <FromDiscord> <Solitude> the ones that count as sideeffect
[19:22:02] <FromDiscord> <IsaacPaul> > "risking" side effects‚ÜµAlso rename the functions‚Üµ> which one?‚Üµall_numbers obviously
[19:22:09] <FromDiscord> <kaddkaka> In reply to @Solitude "the ones that count": the global state or the local one?
[19:22:10] <FromDiscord> <IsaacPaul> (edit) "functions‚Üµ>" => "function‚Üµ>"
[19:22:13] <FromDiscord> <Solitude> global
[19:22:18] <FromDiscord> <Solitude> why would local state be a sideeffect
[19:22:29] <FromDiscord> <kaddkaka> hmm
[19:23:10] <FromDiscord> <kaddkaka> I thought `let` already made certain that it's unmodifiable?
[19:24:04] <FromDiscord> <Solitude> yes, its still a sideffect, because result of a function differs because of it at runtime
[19:24:13] <FromDiscord> <kaddkaka> In reply to @IsaacPaul "> "risking" side effects": what name do you want? the function has obvious bogus functionality üòõ
[19:24:45] <FromDiscord> <kaddkaka> In reply to @Solitude "yes, its still a": I don't understand this, what does that mean?
[19:24:55] <FromDiscord> <IsaacPaul> filterBy102030‚ÜµfilterMagic lol
[19:25:08] <FromDiscord> <IsaacPaul> (edit) "lol" => "lol‚ÜµfilterByAllNumbers"
[19:26:15] <FromDiscord> <kaddkaka> üôÇ
[19:26:18] <FromDiscord> <kaddkaka> sent a code paste, see https://play.nim-lang.org/#ix=3Kmv
[19:26:21] <FromDiscord> <IsaacPaul> Perfect
[19:27:36] <FromDiscord> <Solitude> In reply to @kaddkaka "I don't understand this,": your function is influenced by global non-static state. so it result between invocations can be different with the same inputs.
[19:29:51] <FromDiscord> <IsaacPaul> `let` allows you to modify the contents of the obj? I may be mistaken tho
[19:30:18] <FromDiscord> <Solitude> no, it doesnt...
[19:31:30] <FromDiscord> <kaddkaka> In reply to @Solitude "your function is influenced": Right, thanks!
[19:31:54] <FromDiscord> <kaddkaka> the description `side-effects` confused me, but perhaps that's the terminology
[19:32:23] <FromDiscord> <Solitude> https://nim-lang.org/docs/manual.html#effect-system-side-effects
[19:32:29] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3KmH
[19:33:01] <FromDiscord> <Solitude> yes, let guards that you dont modify the reference, not contents of dereferenced object
[20:02:19] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[20:19:00] <FromDiscord> <el__maco> sent a code paste, see https://play.nim-lang.org/#ix=3KnS
[20:27:29] <FromDiscord> <el__maco> I wonder what is this language construct even called in Nim, which looks like a constructor `var foo=Bar(x:10)` is that an actual function call? What happens if you don't specify any parameters (like I did there previously)? If the variable is declared at the top level, then when does that call/operation get executed? I kinda assumed the top level stuff got executed at the beginning, in the order they appear in the code, but now I'm not 
[20:33:46] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[20:38:33] <FromDiscord> <Solitude> In reply to @el__maco "I wonder what is": https://nim-lang.org/docs/manual.html#types-object-construction
[20:38:48] <FromDiscord> <Solitude> In reply to @el__maco "I wonder what is": it is executed at the "beginning"
[20:45:09] <FromDiscord> <el__maco> I see, but that doesn't really answer the question. Based on cursory look at generated code, it seems that maybe the constructor syntax isn't a function call maybe. Its kinda hard to read the intermediate code however
[20:46:12] <FromDiscord> <el__maco> its unclear to me what changes if I just declare the object without constructor, or if I invoke a constructor but don't specify any fields to initialize
[20:49:03] <NimEventer> New thread by Arnetheduck: `Result` update, see https://forum.nim-lang.org/t/8759
[20:53:02] <FromDiscord> <el__maco> seems its the empty "constructor" which wrecks the program. If I specify any fields to initialize, even with zero values, it starts working again
[20:59:31] <FromDiscord> <el__maco> hold on, if I remove the constructor also `{.global.}` seems to start working again
[21:04:00] <FromDiscord> <el__maco> both empty and non-empty constructor breaks the `{.global.}` property, but a variable without a constructor seems to behave
[21:04:56] <FromDiscord> <el__maco> at a global scope the empty constructor seems to wreak havoc
[21:14:17] <FromDiscord> <demotomohiro> Nim initialize everything with zero in default. So object construction without arguments initialize an object with zero.
[21:21:51] <FromDiscord> <enthus1ast> does a try except has a performance impact when the code never excepted ?
[21:23:17] <FromDiscord> <leorize> the cost is that of an `if`
[21:23:30] <FromDiscord> <leorize> at least on `arc`
[21:24:05] <FromDiscord> <enthus1ast> so it might make more sense to try except instead of a table.hasKey ?
[21:24:13] <FromDiscord> <enthus1ast> will benchmark
[21:27:30] <FromDiscord> <enthus1ast> ok no
[21:27:36] <FromDiscord> <enthus1ast> table.hasKey is way faster
[21:40:17] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[21:44:11] <FromDiscord> <hmmm> you can use table.haskey as a substitute for try except? ü§î
[21:44:42] <FromDiscord> <enthus1ast> sent a code paste, see https://paste.rs/Q9c
[21:44:44] <FromDiscord> <enthus1ast> stupid example
[21:44:58] <FromDiscord> <enthus1ast> but hasKey is orders of magnitude faster
[21:46:00] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3KpK
[21:46:10] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[21:46:41] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[21:47:06] <FromDiscord> <hmmm> hmm
[21:47:17] <FromDiscord> <hmmm> makes sense to me
[21:47:33] <FromDiscord> <hmmm> try except is added machinery on top of the cake ü§î
[21:49:58] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3KpP
[21:51:15] <FromDiscord> <el__maco> In reply to @demotomohiro "Nim initialize everything with": I know. I'm just wondering why `var foo=Bar()` is busted, and `var foo:Bar` is all good. It would seem to me that both should be the same
[21:56:00] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4)
[22:41:17] <NimEventer> New thread by JPLRouge: Good news for the beginning of 2022, see https://forum.nim-lang.org/t/8760
[22:43:25] <FromDiscord> <Solitude> In reply to @el__maco "I know. I'm just": if you have isolated snippet, you should submit the issue.
[22:44:12] <FromDiscord> <treeform> like enthus1ast, I also have a table perf question, one can add key to a table with `table[k] = v` but if your `v` is a largish object it will have a big copy. That's slow. Is there a way to kind of says "table make me a slot at k and return it" then I can mess with the `k` slot without doing a copy. Some thing like `v = table.init(k)` where `proc init[K, V](t: Table[K, V] , k: K): var V` ?
[22:46:35] <FromDiscord> <el__maco> In reply to @Solitude "if you have isolated": the bug manifests itself in such a random place, isolating a minimal repro case might be very hard sadly
[22:47:16] <FromDiscord> <el__maco> might not be even compiler bug, could be mine too, but its really weird
[22:52:17] *** Quits: bkay (~beshr@c-5480e355.09-52-616c6b1.bbcust.telenor.se) (Ping timeout: 252 seconds)
[22:54:21] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[22:58:13] <FromDiscord> <Solitude> In reply to @treeform "like enthus1ast, I also": form that you suggest is not possible in current nim, because assigning to `v` will perform a copy, but you could workaround that with `table.init(k).yourMutatingFunction`.
[23:00:32] <FromDiscord> <konsumlamm> it won't perform a copy when the return type is `var ...`, no?
[23:00:43] <FromDiscord> <Solitude> it will
[23:00:47] <FromDiscord> <Solitude> just tested
[23:00:52] <FromDiscord> <konsumlamm> rip
[23:03:47] *** Joins: beshr (~beshr@user/beshr)
[23:04:26] <FromDiscord> <Solitude> it will only not copy with `{.experimental: "views".}` and if you declare `v` as `var v: var V`
[23:12:13] <FromDiscord> <Shiba> i know that we closed the subject of "compile speed" , but iam curious why does chaning a single char in a nim script makes the compiling slower again
[23:12:33] <FromDiscord> <Shiba> (edit) "chaning" => "changing"
[23:13:32] <FromDiscord> <Shiba> (edit) "i know that we closed the subject of "compile speed" , but iam ... curiouson" 03added "still" | "stillcurious ... why" 03added "on"
[23:15:47] <FromDiscord> <konsumlamm> depends on the char
[23:16:52] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:b9ca:7580:971f:87f4) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[23:44:04] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:54:39] *** Joins: lumo_e (~enrico@151.29.48.90)
