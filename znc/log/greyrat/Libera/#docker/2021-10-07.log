[00:13:31] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[00:15:58] *** Quits: goddard (~goddard@user/goddard) (Remote host closed the connection)
[00:16:20] *** Joins: goddard (~goddard@user/goddard)
[00:21:24] *** Quits: CyBerNetX (~CyBerNetX@gateway/tor-sasl/cybernetx) (Remote host closed the connection)
[00:23:24] *** Joins: CyBerNetX (~CyBerNetX@gateway/tor-sasl/cybernetx)
[00:25:09] *** Joins: doforlove33 (~doforlove@user/doforlove33)
[00:37:43] *** Joins: jafarlihi (~hjafarli@h162081.upc-h.chello.nl)
[00:44:52] *** Quits: mei (~mei@user/mei) (Ping timeout: 265 seconds)
[00:46:21] *** Quits: pyrrhus (~pyrrhus@user/pyrrhus) (Ping timeout: 245 seconds)
[00:47:54] *** doforlove33 is now known as Wladimir
[00:48:48] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
[00:50:11] *** Quits: pipapipapipo (~peppbel@076-083-166-225.res.spectrum.com) (Ping timeout: 265 seconds)
[00:57:07] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[00:57:35] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:58:36] *** Quits: Wladimir (~doforlove@user/doforlove33) (Quit: Leaving)
[00:58:53] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 265 seconds)
[01:00:59] *** Joins: sneak (~sneak@datavi.be)
[01:05:06] *** Quits: NeoCron (~NeoCron@p200300c4cf16e40089f16fffa0577f49.dip0.t-ipconnect.de) (Quit: Leaving)
[01:05:27] *** Joins: NeoCron (~NeoCron@p200300c4cf16e40089f16fffa0577f49.dip0.t-ipconnect.de)
[01:17:17] *** Quits: jmartin (~jmartin@user/jmartin) (Remote host closed the connection)
[01:18:58] *** Joins: jkwnki (~jkwnki@p2e579503.dip0.t-ipconnect.de)
[01:18:58] *** Joins: jkwnki1 (~jkwnki@p2e579503.dip0.t-ipconnect.de)
[01:21:09] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 245 seconds)
[01:23:14] *** Quits: jkwnki1 (~jkwnki@p2e579503.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[01:23:26] *** Quits: jkwnki (~jkwnki@p2e579503.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[01:25:13] *** Joins: jkwnki1 (~jkwnki@p2e579510.dip0.t-ipconnect.de)
[01:25:13] *** Joins: jkwnki (~jkwnki@p2e579510.dip0.t-ipconnect.de)
[01:27:40] *** Quits: XV8 (~XV8@2601:5cb:c001:50:fcdc:b6a2:4b2f:94e6) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[01:30:28] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[01:36:11] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[01:37:35] *** Joins: Enissay (~Enissay@user/enissay)
[01:37:40] *** Quits: phylaz (~phylaz@92.221.176.219) (Quit: Ping timeout (120 seconds))
[01:37:59] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[01:47:04] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:49:13] *** Joins: sudomann (~sudomann@73.183.118.9)
[01:53:14] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 245 seconds)
[01:55:41] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[01:56:34] *** Joins: Enissay (~Enissay@user/enissay)
[02:00:33] *** Joins: sudomann (~sudomann@73.183.118.9)
[02:03:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:03:15] *** Quits: TomTom (uid45892@id-45892.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:03:27] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:06:21] *** Quits: junktext (~junktext@109.201.152.178) (Ping timeout: 245 seconds)
[02:09:28] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[02:10:43] *** Joins: Enissay (~Enissay@user/enissay)
[02:14:07] *** Joins: pipapipapipo (~peppbel@076-083-166-225.res.spectrum.com)
[02:22:43] *** Quits: pipapipapipo (~peppbel@076-083-166-225.res.spectrum.com) (Remote host closed the connection)
[02:36:09] *** Quits: NeoCron (~NeoCron@p200300c4cf16e40089f16fffa0577f49.dip0.t-ipconnect.de) (Quit: Leaving)
[02:37:22] *** Quits: imp (~imp@192-141-191-231.alternativaip.net.br) (Quit: imp)
[02:44:41] *** Quits: jafarlihi (~hjafarli@h162081.upc-h.chello.nl) (Quit: WeeChat 3.3)
[02:46:34] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 245 seconds)
[02:49:10] *** Quits: emerent (~quassel@p200300cd574855ffba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:49:20] *** Joins: emerent (~quassel@p200300cd5748555fba27ebfffed28a59.dip0.t-ipconnect.de)
[02:50:44] *** Joins: sudomann (~sudomann@73.183.118.9)
[02:52:55] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[02:52:59] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[02:58:39] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[02:59:41] *** Quits: jkwnki1 (~jkwnki@p2e579510.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[02:59:41] *** Quits: jkwnki (~jkwnki@p2e579510.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[03:00:12] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[03:06:21] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 245 seconds)
[03:08:14] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[03:09:41] *** Quits: vidbina (~vid@dynamic-077-011-058-115.77.11.pool.telefonica.de) (Ping timeout: 245 seconds)
[03:10:34] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[03:11:34] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 245 seconds)
[03:15:05] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[03:17:32] *** Joins: nvmd (~nvmd@user/nvmd)
[03:20:52] *** Quits: goddard (~goddard@user/goddard) (Quit: WeeChat 3.0.1)
[03:25:34] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[03:29:54] *** Quits: pyrrhus (~pyrrhus@user/pyrrhus) (Ping timeout: 245 seconds)
[03:30:31] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
[03:32:07] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
[03:41:25] *** Quits: Flash (~Flash@user/flash) (Remote host closed the connection)
[03:41:36] *** Joins: sudomann (~sudomann@73.183.118.9)
[03:42:11] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 245 seconds)
[03:43:06] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[03:46:39] *** Joins: sudomann_ (~sudomann@73.183.118.9)
[03:47:36] *** Quits: Ivii (~Ivyy@2001:a61:13f1:cb01:b8da:f768:b34d:a040) (Remote host closed the connection)
[03:49:30] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 265 seconds)
[03:52:39] *** Joins: keypusher (keypusher@user/keypusher)
[04:11:20] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:24:17] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[04:30:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:35:08] *** Joins: vlm (~vlm@user/vlm)
[04:39:02] *** Joins: XV8 (~XV8@2601:5cb:c001:50:c0e0:2ca5:895:347c)
[04:48:51] *** Quits: jazz-o-lantern (~jaziz@2600:380:443b:e243:84dd:ba75:4525:58b4) (Ping timeout: 245 seconds)
[04:51:22] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[05:10:49] *** Joins: luva4 (~luva@5.180.62.229)
[05:12:10] *** Quits: luva (~luva@5.180.62.229) (Ping timeout: 252 seconds)
[05:12:10] *** luva4 is now known as luva
[05:19:53] *** Quits: sudomann_ (~sudomann@73.183.118.9) (Ping timeout: 265 seconds)
[05:29:25] *** Quits: scjosh (~scjosh@206.189.79.69) (Quit: The Lounge - https://thelounge.chat)
[05:32:28] *** Joins: fr_sleepy (~fr_sleepy@209.94.138.128)
[05:32:45] *** Joins: sudomann (~sudomann@73.183.118.9)
[05:39:21] *** Quits: XV8 (~XV8@2601:5cb:c001:50:c0e0:2ca5:895:347c) (Quit: Textual IRC Client: www.textualapp.com)
[05:41:51] *** Joins: scjosh (~scjosh@206.189.79.69)
[05:46:08] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[05:46:28] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 265 seconds)
[05:54:56] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-3d8e-e9e6-0356-d7f3.res6.spectrum.com)
[05:58:04] *** Joins: jibsaramnim (~quassel@119.192.78.245)
[05:59:38] *** Joins: sudomann (~sudomann@73.183.118.9)
[06:00:45] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[06:01:10] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[06:04:21] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 265 seconds)
[06:08:36] *** Joins: jgrim23629 (~jgrim@d60-65-99-197.col.wideopenwest.com)
[06:10:34] *** Joins: sudomann (~sudomann@73.183.118.9)
[06:11:05] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[06:11:29] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[06:11:34] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[06:16:56] *** Joins: jazzy (~jaziz@172.58.28.108)
[06:18:21] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[06:21:25] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[06:21:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[06:28:01] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 245 seconds)
[06:28:48] *** Joins: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks)
[06:31:45] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[06:32:10] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[06:40:43] *** Joins: sudomann (~sudomann@73.183.118.9)
[06:42:05] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[06:42:31] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[06:44:54] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 245 seconds)
[06:52:26] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[06:52:52] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[06:55:06] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Ping timeout: 265 seconds)
[06:59:27] *** Parts: jibsaramnim (~quassel@119.192.78.245) (https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:02:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[07:03:14] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[07:08:38] *** Quits: pyrrhus (~pyrrhus@user/pyrrhus) (Ping timeout: 265 seconds)
[07:10:26] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
[07:13:05] *** Joins: sudomann (~sudomann@73.183.118.9)
[07:13:10] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[07:13:35] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[07:18:37] *** Quits: CyBerNetX (~CyBerNetX@gateway/tor-sasl/cybernetx) (Remote host closed the connection)
[07:19:26] *** Joins: CyBerNetX (~CyBerNetX@gateway/tor-sasl/cybernetx)
[07:23:31] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[07:23:57] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[07:24:39] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[07:31:34] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 245 seconds)
[07:33:51] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[07:34:17] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[07:44:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[07:44:37] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[07:45:42] *** Joins: sudomann (~sudomann@73.183.118.9)
[07:50:06] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 245 seconds)
[07:54:32] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[07:54:57] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[07:55:17] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[08:02:23] *** Joins: sudomann (~sudomann@73.183.118.9)
[08:04:52] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[08:05:16] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[08:07:06] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[08:07:43] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[08:13:24] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[08:15:11] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[08:15:37] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[08:16:46] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 245 seconds)
[08:20:23] *** Quits: canurabus (~canurabus@ip-24-156-182-35.user.start.ca) (Quit: Leaving)
[08:24:30] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[08:24:50] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Quit: Ping timeout (120 seconds))
[08:25:04] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[08:25:33] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[08:25:57] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[08:35:53] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[08:36:18] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[08:39:22] *** Joins: sudomann (~sudomann@73.183.118.9)
[08:39:29] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[08:40:57] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[08:41:26] *** Joins: versa_gone (~versageek@32.215.132.28)
[08:45:05] *** Quits: versageek (~versageek@wikimedia/Versageek) (Ping timeout: 264 seconds)
[08:46:13] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[08:46:38] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[08:49:04] *** Joins: jazzy2 (~jaziz@172.58.28.108)
[08:52:33] *** Quits: jazzy (~jaziz@172.58.28.108) (Ping timeout: 265 seconds)
[08:53:02] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[08:56:34] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[08:56:57] *** jazzy2 is now known as jazzy
[08:56:58] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[08:57:02] *** jazzy is now known as jazz-o-lantern
[09:04:59] *** Quits: andycooper (uid246432@id-246432.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[09:06:54] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[09:07:19] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[09:12:43] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Read error: Connection reset by peer)
[09:13:00] *** Joins: factor0 (~factor@c-66-30-67-217.hsd1.ma.comcast.net)
[09:14:43] *** Quits: factor (~factor@c-66-30-67-217.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[09:14:43] *** factor0 is now known as factor
[09:17:14] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[09:17:28] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[09:17:39] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[09:18:47] *** Joins: mei (~mei@user/mei)
[09:22:24] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 245 seconds)
[09:22:45] *** Joins: sudomann (~sudomann@73.183.118.9)
[09:23:31] *** Quits: Herve (~RV@lfbn-nic-1-430-119.w90-116.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[09:26:47] *** Quits: emerent (~quassel@p200300cd5748555fba27ebfffed28a59.dip0.t-ipconnect.de) (Remote host closed the connection)
[09:26:52] *** Quits: fr_sleepy (~fr_sleepy@209.94.138.128) (Ping timeout: 265 seconds)
[09:27:21] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 265 seconds)
[09:27:34] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[09:27:48] *** Joins: dob1 (~dob1@user/dob1)
[09:28:00] *** Joins: emerent (~quassel@p200300cd5748555fba27ebfffed28a59.dip0.t-ipconnect.de)
[09:28:01] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[09:29:17] <dob1> hi, I have 2 containers running with docker-compose. One of them is running tomcat. I see the tomcat process on "ps aux" output of the host. it's normal?
[09:29:52] *** Joins: fr_sleepy (~fr_sleepy@209.94.138.128)
[09:31:15] *** Quits: LoRez (~lorez@user/lorez) (Remote host closed the connection)
[09:31:41] <Samy_Nacery> Yes it's normal
[09:32:48] <dob1> how can I distinguish between host/container processes ? 
[09:33:49] *** Joins: TomTom (uid45892@id-45892.ilkley.irccloud.com)
[09:37:56] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[09:38:22] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[09:40:35] *** Joins: Tas-sos (~Tas-sos@ppp141237138042.access.hol.gr)
[09:41:06] *** Joins: ExeciN (~ExeciN@user/nicexe)
[09:45:08] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[09:45:19] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[09:48:14] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 245 seconds)
[09:48:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[09:48:43] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[09:49:27] <Samy_Nacery> dob1, use this command systemd-cgls
[09:49:32] <Samy_Nacery> in linux
[09:50:44] <Samy_Nacery> containerd.service
[09:58:10] <dob1> Samy_Nacery, ok thanks , it's more clear
[09:58:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[09:59:02] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[10:03:00] *** Joins: Herve (~RV@92.173.180.89)
[10:05:19] *** Quits: pyrrhus (~pyrrhus@user/pyrrhus) (Ping timeout: 245 seconds)
[10:07:47] *** Joins: pyrrhus (~pyrrhus@user/pyrrhus)
[10:07:58] *** Quits: DeeJayh (~DeeJayh@75-164-152-77.ptld.qwest.net) (Ping timeout: 250 seconds)
[10:08:14] *** Joins: DeeJayh (~DeeJayh@75-164-152-77.ptld.qwest.net)
[10:08:58] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Remote host closed the connection)
[10:24:34] *** Quits: kxv (~kxv@user/kxv) (Ping timeout: 252 seconds)
[10:26:09] *** Quits: jazz-o-lantern (~jaziz@172.58.28.108) (Ping timeout: 245 seconds)
[10:30:46] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[10:31:44] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[10:36:59] *** Joins: Atque (~Atque@user/atque)
[10:37:44] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[10:40:44] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 245 seconds)
[10:44:28] *** Quits: BobbyJr (~BobbyJr@072-017-088-013.res.spectrum.com) (Quit: Leaving)
[10:47:42] *** Joins: IceMichael (~IceMichae@2a02:3035:80e:7131:6c24:5b93:2156:7ccb)
[10:54:09] *** Quits: IceMichael (~IceMichae@2a02:3035:80e:7131:6c24:5b93:2156:7ccb) (Remote host closed the connection)
[10:56:55] *** Joins: kxv (~kxv@user/kxv)
[11:05:41] *** Joins: bouncy (~ben@user/benoit)
[11:07:41] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[11:18:12] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:20:15] *** Quits: ada_ (uid242135@user/ada/x-9065485) (Quit: Connection closed for inactivity)
[11:25:32] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:26:56] *** Quits: gooble_gobble (~gooble_go@c-76-16-103-215.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[11:27:38] *** Joins: Tach (~Tach@user/tach)
[11:28:11] *** Quits: Herve (~RV@92.173.180.89) (Ping timeout: 265 seconds)
[11:29:09] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[11:29:54] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 245 seconds)
[11:32:04] *** Joins: selckin (~selckin@user/selckin)
[11:35:50] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[11:39:17] <Samy_Nacery> Hi all
[11:39:30] <Samy_Nacery> I continue with this error
[11:39:31] <Samy_Nacery> docker pull ubuntu 
[11:39:31] <Samy_Nacery> Using default tag: latest
[11:39:31] <Samy_Nacery> latest: Pulling from library/ubuntu
[11:39:31] <Samy_Nacery> f3ef4ff62e0d: Extracting  28.57MB/28.57MB
[11:39:31] <Samy_Nacery> failed to register layer: Error processing tar file(exit status 1): archive/tar: invalid tar header
[11:40:07] <Samy_Nacery> Please, Could somebody help me?
[11:49:12] *** Joins: sudomann (~sudomann@73.183.118.9)
[11:50:04] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 265 seconds)
[11:53:40] *** Joins: arseru (uid515527@user/arseru)
[12:00:54] *** Joins: Herve (~RV@92.173.180.89)
[12:04:58] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:07:37] *** Parts: arseru (uid515527@user/arseru) ()
[12:12:49] *** Quits: Herve (~RV@92.173.180.89) (Ping timeout: 245 seconds)
[12:17:38] <L0j1k> Samy_Nacery: are you sure you are pulling an ubuntu image for a supported architecture?
[12:18:26] <L0j1k> what sort of machine are you doing this on?
[12:18:43] *** Quits: Proxysna_ (~Proxysna@62.119.254.142) (Remote host closed the connection)
[12:19:06] <Samy_Nacery> PC- ubuntu
[12:21:26] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[12:21:29] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 265 seconds)
[12:24:52] *** Quits: Tas-sos (~Tas-sos@ppp141237138042.access.hol.gr) (Read error: Connection reset by peer)
[12:24:54] *** Quits: irrgit (~irrgit@192.241.175.183) (Ping timeout: 245 seconds)
[12:26:03] *** Joins: masber (~masber@213.55.224.56)
[12:28:59] *** Joins: irrgit (~irrgit@192.241.175.183)
[12:37:12] <L0j1k> Samy_Nacery: can you put the output of `docker inspect ubuntu:latest` into a pastebin paste?
[12:38:54] *** Quits: phalanx (~thelounge@user/phalanx) (Quit: The Lounge - https://thelounge.chat)
[12:44:20] *** Joins: tetrapod1 (~tetrapod@user/tetrapod)
[12:44:57] *** Quits: libcat (~quassel@2a01:4f8:c2c:2b3a::1) (Remote host closed the connection)
[12:45:57] *** Quits: tetrapod (~tetrapod@user/tetrapod) (Read error: Connection reset by peer)
[12:45:57] *** tetrapod1 is now known as tetrapod
[12:46:19] *** Parts: Inge (~inge@51.15.60.125) ()
[12:52:13] *** Joins: phalanx5 (~thelounge@user/phalanx)
[13:00:42] *** Joins: frojnd (~frojnd@user/frojnd)
[13:00:45] <frojnd> Hi there.
[13:01:00] *** standardrat_ is now known as standardrat
[13:01:19] <frojnd> How would I see on what port is nextcloud running? Also path I can access it? docker image ls shows: ghcr.io/linuxserver/nextcloud   latest    5266b2eb3602   7 months ago   337MB
[13:02:42] <tabakhase> "images" arent running - "docker ps" to see running things
[13:03:30] <frojnd> Ok. It seems it's running: f80271a72ffe   ghcr.io/linuxserver/nextcloud   "/init"        7 months ago   Up 38 hours   80/tcp, 443/tcp                                  nextcloud
[13:03:39] <frojnd> How would I access it locally?
[13:03:54] <frojnd> Under sites-enabled I see symlink for nextcloud
[13:04:27] <frojnd> Under nginx path...
[13:04:52] <frojnd> https://termbin.com/u6nn
[13:06:34] <frojnd> I tried https://local.ip:443 but can't reach it
[13:10:34] *** Joins: Tas-sos (~Tas-sos@ppp141237138042.access.hol.gr)
[13:11:27] *** Joins: sudomann (~sudomann@73.183.118.9)
[13:17:39] *** Joins: vidbina (~vid@2a02:3032:0:9074:a6e0:6fa:2e56:a379)
[13:20:57] <tabakhase> frojnd that kinda be cant, published ports should look like "0.0.0.0:32772->8025/tcp" and there like i believe 
[13:22:29] <tabakhase> so ports: in your compose, or -p in your run and such - - and youll want volumes too... make sure to read the readme....
[13:23:12] <standardrat> frojnd, may I ask why you're using that image over the official one? 
[13:25:54] <standardrat> it also looks like the one you're using has moved to lscr.io/linuxserver/nextcloud, assuming this is the one: https://docs.linuxserver.io/images/docker-nextcloud
[13:29:13] *** Joins: Ivii (~Ivyy@2001:a61:13f1:cb01:46a6:5d27:eef4:b7ec)
[13:30:58] *** Joins: drocan (~drocan@user/drocan)
[13:33:59] *** Quits: vidbina (~vid@2a02:3032:0:9074:a6e0:6fa:2e56:a379) (Ping timeout: 265 seconds)
[13:34:35] <gordonjcp> frojnd: that sounds like you're not publishing the ports
[13:34:58] <gordonjcp> frojnd: docker knows that it has ports there but they're not "patched" to anything
[13:36:59] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 245 seconds)
[13:37:32] *** Quits: masber (~masber@213.55.224.56) (Ping timeout: 256 seconds)
[13:40:22] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Ping timeout: 252 seconds)
[13:42:56] *** Joins: vidbina (~vid@2a02:3032:0:9074:8437:32f6:2ae8:dc7f)
[13:45:59] *** Joins: sudomann (~sudomann@73.183.118.9)
[13:50:19] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 245 seconds)
[13:51:37] *** Quits: selckin (~selckin@user/selckin) (Quit: failed again)
[13:52:24] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 245 seconds)
[13:52:36] *** Quits: vidbina (~vid@2a02:3032:0:9074:8437:32f6:2ae8:dc7f) (Ping timeout: 245 seconds)
[13:57:50] *** Joins: masber (~masber@213.55.224.56)
[13:57:53] *** Quits: Ivii (~Ivyy@2001:a61:13f1:cb01:46a6:5d27:eef4:b7ec) (Remote host closed the connection)
[14:01:24] <Samy_Nacery> []
[14:01:24] <Samy_Nacery> Error: No such object: ubuntu:latest
[14:01:39] <Samy_Nacery> I can't pull image
[14:10:20] <gordonjcp> Samy_Nacery: that's not really much to go on
[14:15:46] *** Joins: jkwnki (~jkwnki@p4ff31dd8.dip0.t-ipconnect.de)
[14:15:47] *** Joins: jkwnki1 (~jkwnki@p4ff31dd8.dip0.t-ipconnect.de)
[14:27:25] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[14:28:44] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Read error: Connection reset by peer)
[14:30:19] *** Quits: David- (~none@51.148.182.203) (Ping timeout: 245 seconds)
[14:33:16] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[14:33:47] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Ping timeout: 265 seconds)
[14:34:11] *** Quits: masber (~masber@213.55.224.56) (Ping timeout: 256 seconds)
[14:38:25] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[14:38:29] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[14:44:58] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[14:47:04] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[14:49:44] *** Joins: benni (~benni@ipbcc2cdf9.dynamic.kabel-deutschland.de)
[14:59:48] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:03:01] *** Quits: darkstardevx (~darkstard@c-24-21-53-33.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[15:03:49] *** Joins: darkstardevx (~darkstard@c-24-21-53-33.hsd1.or.comcast.net)
[15:05:56] *** Quits: roltux (~roltux@containerlinux.nl) (Quit: ZNC 1.6.6+deb1ubuntu0.2 - http://znc.in)
[15:12:41] *** Joins: mbuf (~Shakthi@136.185.79.30)
[15:13:16] <mbuf> If I have service A running in a Docker container in port 3000, and service B running in port 3001, how can I make them talk with each other? What should be the recommended network setup with docker-compose?
[15:13:34] <gordonjcp> mbuf: they need to be on the same network
[15:13:48] <gordonjcp> mbuf: are both running in the same compose project?
[15:17:48] <frojnd> standardrat: not sure why I use that image
[15:17:54] <frojnd> Was setting it up 2 years ago
[15:19:53] <tabakhase> mbuf let srvice a call service-b:3001 ((assuming "service" in docker-compose terms)) - compsoe will automagically setup "user defined networking" what makes that resolving by name possible
[15:20:58] <tabakhase> (that is - if fullfilling a min version and not already having a networks: block inside of it - i guess)
[15:23:18] *** Joins: roltux (~roltux@containerlinux.nl)
[15:23:34] *** Joins: thiras (~thiras@user/thiras)
[15:24:27] *** Quits: benni (~benni@ipbcc2cdf9.dynamic.kabel-deutschland.de) (Quit: Client closed)
[15:28:13] *** Quits: artok (~azo@mobile-access-b04844-153.dhcp.inet.fi) (Quit: city)
[15:29:48] *** Joins: Herve (~RV@92.173.180.89)
[15:30:24] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[15:30:38] *** Joins: esses (uid38151@id-38151.hampstead.irccloud.com)
[15:31:05] <frojnd> standardrat: can I make nextcloud run again?
[15:31:31] *** Joins: David- (~none@51.148.182.203)
[15:31:32] *** Joins: Hi-Angel1 (~constanti@broadband-188-32-15-112.ip.moscow.rt.ru)
[15:32:37] <Hi-Angel1> Can anybody tell, what's wrong with this small Dockerfile https://pastebin.com/raw/p0CXcDZr For some reason GITLAB_RUNNER_UID is not set when I set it with `docker build â€¦ --build-arg  GITLAB_RUNNER_UID=999`. It's just always empty. 
[15:34:20] <mbuf> gordonjcp, eventually yes; service A I manually started, and service B is run using docker-compose
[15:35:06] <mbuf> tabakhase, where do I mention "service-b" in docker-compose?
[15:35:38] <tabakhase> mbuf as hostname, it becomes dns (works for the container name itself - but also for composes "service names"
[15:36:29] <tabakhase> so you see things like dbServer=db dbPort=3306 dbUser...  - and in compose a "services: db: image: mysql..."
[15:36:35] <mbuf> tabakhase, the Docker container I started runs in network "bridge", but, docker-compose, by default, creates a new network
[15:37:08] <tabakhase> see https://docs.docker.com/samples/wordpress/
[15:37:41] <tabakhase> (without compose, you can obvs. also do all this manually, "docker network create" / --net & co.)
[15:37:54] <tabakhase> if you have a compose file, pls throw it on a nopaste or so 
[15:38:05] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[15:39:34] <mbuf> tabakhase, https://nopaste.ml/?l=yaml#XQAAAQCoAAAAAAAAAAA7GUqsC9K+WM9j7tDg73kNm1pC05aF6fJ9N8eKMuVi2eyrBaMrgKbmPGob2En0AJrPbMgAKm9kXQ6z2MYqgHosVU71Yus02TOPxsBZCFomW0ZqgayKh1vhaoX19yZj4eGXKQNFjHXz5w+ZjrSc2pMNODRFcoZ1xsEv//4+nUA=
[15:40:44] <tabakhase> > service A I manually started, and service B is run using docker-compose  <- then pretty much same thing still applies - usually more seen as "combine 2 compose files" - say, you run one ingress, and 2 other compose projects shall "dock" to this -- then you would declare named networks in all, but declare it as "external: true" on the services ((so "compose down" doesnt try to remove the 
[15:40:45] <tabakhase> network on stop and such))
[15:40:51] <mbuf> so for each service, I write a docker-compose, or there should be one for all?
[15:41:11] <mbuf> tabakhase, I see
[15:41:49] <tabakhase> (and network_mode: bridge is default, so you can just rip that line out)
[15:42:50] <mbuf> tabakhase, by default, it creates a new custom network, and hence, I added that line
[15:43:09] <tabakhase> mbuf "depends" - or "docker supports either" is kinda answer there... - whats the right depends a bit on what you actually want to model ((and all with the note that you obvs dont "need" compsoe files, as you can do everything it does with plain docker commands - and the other way around)
[15:43:28] <mbuf> tabakhase, thanks!
[15:43:44] <tabakhase> compose can also merge multiple compose files, in some cases thats the better fix - but its more for "multiple cogs of the same big machine"
[15:44:30] <tabakhase> the "crosslink different stacks" is more a "connect things that have not rly somethign todo with another"
[15:44:52] <Hi-Angel1> Oh, wtf, it turns out I had to move ARG below the FROM. So the bug is that ARG parameter is invisible unless it is after FROM line
[15:45:07] <tabakhase> Hi-Angel1 that aint a bug
[15:45:24] <Hi-Angel1> tabakhase: why? It should be visible, shouldn't it?
[15:45:57] <tabakhase> (actually, ARG is also the only line that can even be infront of a FROM without throwing a error - and its purely for "ARG tag FROM image:$tag..." constructs pretty much
[15:49:02] *** Joins: vidbina (~vid@dynamic-002-247-246-095.2.247.pool.telefonica.de)
[15:49:29] *** Quits: jkwnki1 (~jkwnki@p4ff31dd8.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[15:50:06] *** Quits: jkwnki (~jkwnki@p4ff31dd8.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[15:51:13] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[15:58:47] *** Joins: NeoCron (~NeoCron@p200300c4cf18cd00433f901d5cf4f3d0.dip0.t-ipconnect.de)
[16:08:21] *** Joins: rgl (~rgl@bl12-47-147.dsl.telepac.pt)
[16:08:54] <mbuf> tabakhase, if I want service-A and service-B to also be accessible on the host, what is the recommended networking?
[16:10:22] <tabakhase> mbuf published ports
[16:10:37] *** Joins: Wladimir (~doforlove@user/doforlove33)
[16:14:00] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[16:15:05] <cX1n> is there a doc for docker network best practices? I have three /16 in default-address-pools because all other subnets are alotted.  Yet I am getting "failed to allocate network IP for task ..." 
[16:17:00] <standardrat> frojnd, probably. Did you have stuff on there that you want to keep? I'd suggest starting fresh if you can. There's actually some good docker-compose.yml files available
[16:17:41] <standardrat> https://github.com/nextcloud/docker/tree/master/.examples
[16:26:20] <programmerq> cX1nâ–¸ the default address pools just define the range of ranges that docker can pick from when a new docker network is created. if you run out of ranges on a given network, then a task won't be able to get an ip.
[16:26:30] <programmerq> so you might need to recreate that network with a larger subnet.
[16:26:56] <programmerq> for swarm scoped networks, you'll need a subnet large enough for one ip per task + one ip per service + one ip per node
[16:27:14] <programmerq> err, at least the swarm scoped overlay network
[16:27:27] <programmerq> I don't know if other non-overlay swarm scoped network drivers have the same exact requirement.
[16:30:36] *** Quits: pvdp (~Pieter@static-n58-105-183-94.rdl4.qld.optusnet.com.au) (Remote host closed the connection)
[16:31:05] <cX1n> but 3 * /16 is 196608 ips?  anyway it looks like /me needs to read more on swarm networks ;)  thanks for the info
[16:31:28] *** Joins: ImQ009 (~ImQ009@2a02:a312:c637:d380:712e:e8f0:c454:b45d)
[16:33:22] *** Joins: minimal (~minimal@user/minimal)
[16:33:51] <cX1n> fwiw I found a ticket where there is a suggestion (for docker source code) to use the syntax default-address-pool base=10.0.0.0/16,size=24  - meaning to break the defined network into 256, /24s
[16:33:56] <cX1n> ^ that is what I need I think ;)
[16:34:53] <ImQ009> Howdy. I'm having some issue with Docker for Windows, under WSL. Something causes the "http_proxy" environment variable to be set to "/". In the Dockerfile I have the following ```ENV http_proxy="foobar" \n RUN echo $http_proxy```. It prints out "/" instead of "foobar" as expected. What is the cause of this?
[16:35:59] <programmerq> cX1nâ–¸ again, the default-addr-pools is the range of ranges that docker chooses from when a network is created. any single network still gets its own range.
[16:36:19] <programmerq> cX1nâ–¸ the size=24 means the default subnet size will be a /24, which is 255 ip addresses
[16:36:58] <programmerq> so if you have a /16 then you can make 255 /24 networks inside that (assuming I'm remembering my subnetting math correctly-- I haven't had my coffee yet)
[16:37:17] <programmerq> you can always specify a larger subnet than the default when you create the network
[16:37:41] <cX1n>  yeah /me corrected, :) but yeah, I mean if I reserve a /16 to play in I would like it to be chopped up more than the 10 networks I have now  
[16:37:59] <cX1n> coffee is always good but you are corrrect
[16:38:01] <programmerq> chopped up more?
[16:38:29] *** Quits: vidbina (~vid@dynamic-002-247-246-095.2.247.pool.telefonica.de) (Ping timeout: 265 seconds)
[16:38:33] <programmerq> you can indeed set a larger than /24 default subnet size, but that happens at swarm init along with the default-addr-pools being designated at swarm init.
[16:38:53] <ImQ009> Also, worth mentioning that when I rename to environment variable, the problem goes away
[16:38:55] <cX1n> as is stands my 196608 ( actually less since its 255 ) has been aloted to only 10 verlay networks 
[16:39:04] <ImQ009> So Docker somehow explicitly hijacks that variable for some reason
[16:40:43] <cX1n> programmerq: sorry I mean that since I have run out of ips, the three /16 I reserved are now used up by only ~40 hosts 
[16:41:01] * cX1n has some thinking to do
[16:41:17] <programmerq> ImQ009â–¸ http_proxy and https_proxy are implicit ARG values, and that variable syntax gets processed by the Dockerfile parser. the actual env var is indeed set-- you can see it with RUN env. it's just the processing that does the variable substitution for args that is getting in the way.
[16:41:46] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Ping timeout: 245 seconds)
[16:41:52] <ImQ009> programmerq, how do I ensure that the ENV variable is set to what's actually in the Dockerfile?
[16:41:59] <programmerq> cX1nâ–¸ you just need to recreate your docker networks with larger subnets than /24
[16:43:07] <cX1n> programmerq: when you say larger you mean like several /27s  ( becuase, I am already using /16 )
[16:43:28] <cX1n> "nomenclature" ;)
[16:44:31] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[16:44:46] <programmerq> ...
[16:44:55] <programmerq> docker network inspect <network>
[16:45:00] <programmerq> it'll be a /24 for your overlays
[16:45:03] <programmerq> unless you specify otherwise
[16:45:52] <programmerq> again, the default-addr-pools specify the pool of ranges that a 'docker network create' can use. The pool of ranges that you specify are normally large since a docker installation can end up with many docker networks
[16:46:23] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[16:46:29] <programmerq> so your networks are of size /24, and they were chosen by grabbing unutilized ip space in the default-addr-pools ranges.
[16:46:38] <programmerq> if /24 is too small, then you need to create a larger network
[16:46:46] <programmerq> docker network create -d overlay --subnet cidr/size
[16:47:34] <cX1n> ok cool.  I dont think we havent met, but I owe you a bunch of beer (or tea etc) for all your time over the years.  thanks. I will now start specifying my ranges to be certain I get reasonable sized ranged for my needs. :) /me has been too lazy
[16:47:37] <programmerq> so if I set two /16 ranges as my default-addr-pools, I can create 512 /24 networks within that.
[16:47:57] <programmerq> I'll actually be at kubecon next week
[16:48:09] <ImQ009> Ah, I re-read what you said with regards to the variable substitution. However, I do actually also have ```ARG http_proxy="test"``` before that. So, if it's indeed the parser substituting it, why doesn't it use the appropriate value that's set by default?
[16:49:04] <cX1n> ImQ009: you will also need to use "docker built --build-args=test" to populate ARGS 
[16:49:24] <cX1n> correction  --build-args http_proxy=test
[16:49:36] <ImQ009> Yeah, but the documentation mentions that arguments can have default values when not passed in the build command
[16:50:02] <cX1n> ARG http_proxy = ${test:-myvalue}
[16:50:11] <cX1n> but yeah
[16:50:20] <ImQ009> This is what I have in the Dockerfile ```ARG http_proxy="test"```
[16:50:30] <ImQ009> http_proxy should have a default value of "test"
[16:50:37] <ImQ009> And yet, it evaluates to "/"
[16:52:11] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[16:52:41] <cX1n> I too am using http_proxy in my dockerfiles but I havent had that experiance... gimme a sec and let me test... you did mention this was on windows?
[16:53:31] <ImQ009> Yes, indeed.
[16:54:17] <cX1n> so at the top of my dockerfile I have "ENV HTTP_PROXY http://blah:3128" and that work for me, note I have no "="  fwiw
[16:54:38] <ImQ009> Yeah, I tried without "=" as well
[16:55:06] <ImQ009> I noticed that `wget` wasn't working correctly, because HTTP_PROXY was being incorrectly set to "/"
[16:55:20] <ImQ009> So, I'm trying to figure out where that slash is coming from
[16:58:43] <cX1n> hrm... yeah I just tested several ways and its working on centos linux... I dont have windows to test on. 
[16:59:03] <cX1n> * working as expected
[16:59:10] <ImQ009> Alright. Thanks for checking
[16:59:53] <cX1n> perhaps set a different variable and in the CLI add "HTTP_PROXY=$MYVAR wget http://webthing"
[17:00:19] * cX1n a work around ^
[17:00:42] *** Joins: faceface (~faceface@user/faceface)
[17:00:44] <faceface> hihi
[17:00:48] <ImQ009> Yeah, that might work
[17:01:14] <faceface> This tutorial is using 'docker compose run ...', but I've never seen that invocation, and indeed, it doesn't work for me: https://mindsers.blog/post/https-using-nginx-certbot-docker/
[17:02:07] <faceface> when I try docker-compose run, it says "pull access denied for certbot/cerbot, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
[17:02:38] <faceface> docker image ls shows certbot/certbot:latest
[17:03:37] <faceface> I've never used compose with run... It may be unrealted to this error... I was running certbot outside of compose though
[17:03:44] <cX1n> faceface:  have you tried "docker compose pull certbot/certbot" ?
[17:04:00] <faceface> cX1n: no, I didn't know I'd need to do that
[17:04:01] <cX1n> sorry  "docker pull certbot/certbot "
[17:04:10] <programmerq> facefaceâ–¸ you have a type copy/pasted from that guide
[17:04:13] <programmerq> typo*
[17:04:19] <faceface> Status: Image is up to date for certbot/certbot:latest
[17:04:23] <programmerq> certbot/cerbot is what they have and certbot/certbot is what you want.
[17:04:30] <faceface> programmerq: ahhh
[17:04:34] <faceface> Clever tutorial person
[17:04:51] <faceface> sirbot
[17:04:59] <cX1n> :)
[17:06:40] <faceface> The server experienced an internal error :: Error creating new order
[17:06:42] <faceface> bah
[17:07:28] <gordonjcp> yeah
[17:07:40] <gordonjcp> it's not been he same since Peter Hook and Steven Hague fell out
[17:07:48] <faceface> I think I'll go back to my 'stand alone' method... Somehow I want to use docker for deployment, but I need to do the cert stuff 'separately' I think
[17:08:59] *** Joins: iffraff (~quassel@136.49.178.170)
[17:09:05] <tabakhase> faceface i guess try traefik or caddy...
[17:09:51] <tabakhase> caddy is pretty simpel - traefik a bit more wrangling with docs maybe - but come both with automagic ssl :P
[17:10:11] <faceface> hmm
[17:10:32] <iffraff> Hi, I'm trying to run a script within a running container from the host using docker-compose.  this is the command, but it does not seem to run, or give an error docker-compose -f docker/docker-compose.yml exec api bash yarn db:runMigrations
[17:10:44] *** Joins: benni (~benni@ipbcc2cdf9.dynamic.kabel-deutschland.de)
[17:11:12] <iffraff> I also tried just using the command that the yarn script refers to with same result. prisma migrate dev reset
[17:11:32] <iffraff> Is this possible to achieve?
[17:11:34] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[17:12:24] <tabakhase> api yarn... or api bash -c "yarn...
[17:12:26] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[17:12:47] *** Joins: Hackerpcs (~user@user/hackerpcs)
[17:12:49] <faceface> caddy reverse-proxy --from example.com --to localhost:9000 # Pretty nice
[17:15:11] <iffraff> tabakhase: seems neither of those work either.  there's no output in the console I"m running the command in nore in the docker console
[17:15:35] <faceface> iffraff: can you docker exec it?
[17:15:40] <iffraff> yes
[17:16:00] <tabakhase> nginx is kinda "meh" in dockerland (as "ingress" that is) sadly - as its stiffy with dns resolving and no api -- where as traefik has docker as "literal first party" kinda deal for example
[17:16:58] <tabakhase> iffraff docker-compose exec -T ...
[17:17:19] <tabakhase> depending on where/how you run it it may be needed
[17:17:56] <iffraff> hmm, I think my method of verification may be suspect.  I ran the command from with in the container, and it did appear to run but my check was false. 
[17:18:02] <iffraff> what is -T? 
[17:18:19] <tabakhase> no pseudo terminal
[17:18:47] <iffraff> oh, so if the container is running as a different user? say node? 
[17:18:58] <tabakhase> na nothing about users :P
[17:20:02] *** Quits: Wladimir (~doforlove@user/doforlove33) (Quit: Leaving)
[17:20:15] *** Joins: Wladimir (~doforlove@user/doforlove33)
[17:20:22] *** Quits: Wladimir (~doforlove@user/doforlove33) (Remote host closed the connection)
[17:21:05] *** Joins: Wladimir (~doforlove@user/doforlove33)
[17:21:16] *** Quits: Wladimir (~doforlove@user/doforlove33) (Remote host closed the connection)
[17:21:48] <iffraff> sorry, beyond my pay grade :)  But I can research it.  thx
[17:25:33] <iffraff> ok, my verification is now working, still no luck. Checked my Dockerfile I am runing as USER node.  I can exec into the container and the command runs correctly.  
[17:25:56] <iffraff> Do I need to do something from outside to accomidate the node user on the inside?
[17:26:47] *** Joins: Wladimir (~doforlove@user/doforlove33)
[17:27:30] *** Joins: andycooper (uid246432@id-246432.helmsley.irccloud.com)
[17:27:32] *** Quits: Wladimir (~doforlove@user/doforlove33) (Remote host closed the connection)
[17:30:36] *** Joins: Wladimir (~doforlove@user/doforlove33)
[17:30:49] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 252 seconds)
[17:34:37] *** Joins: artok (~azo@185-136-39-71.dynamic.lounea.fi)
[17:36:03] *** Quits: Wladimir (~doforlove@user/doforlove33) (Quit: Leaving)
[17:49:28] *** Quits: erri (~meow@ec2-18-218-146-67.us-east-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[17:50:17] *** Joins: erri (~meow@ec2-18-218-146-67.us-east-2.compute.amazonaws.com)
[17:54:54] *** Quits: pyrrhus (~pyrrhus@user/pyrrhus) (Quit: pyrrhus)
[17:55:25] <ImQ009> Okay
[17:55:28] <ImQ009> This HAS to be a bug
[17:55:51] <ImQ009> Seems like the contents of http_proxy and https_proxy randomly switch between what I pass with --build-arg and "/"
[17:56:05] <ImQ009> On one run http_proxy can be what I set with --build-arg
[17:56:15] <ImQ009> On another it ends up as "/"
[17:56:21] <ImQ009> This is literally quantum mechanics
[17:57:30] <ImQ009> This looks like an entirely hopeless case at this point. I think I'm just gonna give up and tell my employer to give me a Linux box
[17:57:36] *** Quits: benni (~benni@ipbcc2cdf9.dynamic.kabel-deutschland.de) (Quit: Client closed)
[17:58:58] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[18:03:01] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[18:04:53] *** Quits: adhawkins (~adhawkins@user/adhawkins) (Ping timeout: 246 seconds)
[18:06:16] *** Joins: ada_ (uid242135@user/ada/x-9065485)
[18:06:16] *** ChanServ sets mode: +o ada_
[18:07:36] <programmerq> ImQ009â–¸ what version of docker are you using? what install method did you use? can you share a gist with a Dockerfile that illustrates the problem? I tried to duplicate and wasn't able to.
[18:08:17] <ImQ009> I installed Docker through apt under WSL2, then I installed Docker for Windows with WSL2 integration
[18:08:29] <ImQ009> Also, I think I now know where those slashes are coming from
[18:08:41] <ImQ009> They're from the ~/.docker/config.json file
[18:08:52] <ImQ009> But again, the substitution is literally and purely random
[18:09:23] <ImQ009> So, changing the config there alleviates the issue
[18:09:35] <ImQ009> One hell of a problem to debug though
[18:09:59] <ImQ009> Anyway, version is 20.10.7
[18:10:41] *** Joins: dudek (~dudek@185.150.236.103)
[18:13:07] <ImQ009> It took me like two weeks of fighting to figure out what the proxies were breaking in the script
[18:13:17] <ImQ009> Turns out, Docker was just randomizing the variables
[18:13:42] <ImQ009> This is kinda funny. Like one of those #define true random() jokes
[18:14:26] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:21:27] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[18:30:29] *** Joins: sudomann (~sudomann@73.183.118.9)
[18:32:20] <programmerq> what was in your ~/.docker/config.json file?
[18:33:05] <ImQ009> httpProxy and httpsProxy set to "/"
[18:33:33] *** Joins: McStubby (~stumpy@184.170.241.11)
[18:34:17] *** Joins: adhawkins (~adhawkins@user/adhawkins)
[18:37:48] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:38:08] *** Joins: momomo (~momomo@user/momomo)
[18:45:09] *** Quits: roltux (~roltux@containerlinux.nl) (Quit: ZNC 1.6.6+deb1ubuntu0.2 - http://znc.in)
[18:47:50] *** Joins: Wladimir (~doforlove@user/doforlove33)
[18:49:28] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[18:50:44] *** Quits: Wladimir (~doforlove@user/doforlove33) (Quit: WeeChat 3.3)
[18:52:55] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[19:02:23] <ImQ009> https://github.com/docker/cli/issues/1574
[19:02:29] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 264 seconds)
[19:02:30] <ImQ009> This might be the issue I'm seeing?
[19:03:44] *** Joins: applepi (~applepi@156.68.207.89)
[19:05:21] <applepi> Hi!  I'm having a weird issue, my Jenkins is failing to connect to docker, getting the `Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock` error, BUT Jenkins is in the docker group *and* /var/run/docker.sock has the right permissions, so I'm at a loss as to what to check from here
[19:05:28] <applepi> Any suggestions?
[19:05:29] <ImQ009> Nah, it might be somewhat related, but not exactly that
[19:06:59] <applepi> Somewhat related?
[19:07:11] <ImQ009> Sorry, wasn't talking to you
[19:07:12] <applepi> Oh that's probably re: a message before I joined
[19:07:18] <applepi> yeah I realized, sorry haha
[19:07:18] <ImQ009> Yeah :P
[19:09:50] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[19:10:19] *** Joins: roltux (~roltux@87.237.97.247)
[19:11:13] *** Joins: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04)
[19:24:46] <programmerq> applepiâ–¸ double check that the process that jenkins is running is indeed running as a numeric uid/gid that should have access to the docker socket. check the numeric id to be sure.
[19:25:03] <programmerq> also if you recently added jenkins to the docker group, you may need to completely restart the process for it to take effect.
[19:25:58] *** Joins: masber (~masber@213.55.224.56)
[19:29:33] <programmerq> you can see what groups are active for a given pid by doing: grep Groups /proc/<pid>/status so you can see if it really has the groups you expect.
[19:31:29] *** Quits: Tas-sos (~Tas-sos@ppp141237138042.access.hol.gr) (Quit: Lost terminal)
[19:32:00] *** Joins: goldfish (~goldfish@user/goldfish)
[19:32:08] *** Quits: artok (~azo@185-136-39-71.dynamic.lounea.fi) (Ping timeout: 265 seconds)
[19:34:33] *** Quits: goldfish (~goldfish@user/goldfish) (Client Quit)
[19:35:47] *** Joins: jkovac11 (~jkovac1@user/jkovac1)
[19:36:46] *** Quits: rpthms (~rpthms@user/rpthms) (Ping timeout: 252 seconds)
[19:37:39] *** Quits: dabbill (~dabbill@174.31.240.223) (Quit: ZNC - https://znc.in)
[19:37:43] *** Joins: LiENUX (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net)
[19:37:54] *** Quits: krzydv (~dave_uy@gateway/tor-sasl/daveuy/x-47453912) (Ping timeout: 276 seconds)
[19:38:04] *** Joins: dabbill (~dabbill@174.31.240.223)
[19:38:29] *** Quits: jkovac1 (~jkovac1@user/jkovac1) (Ping timeout: 264 seconds)
[19:38:29] *** jkovac11 is now known as jkovac1
[19:38:31] <applepi> programmerq - let me bounce this off my sysadmin guy..  this is odd because this jenkins / docker has been set up for multiple years and this has just happened all the sudden
[19:38:54] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 265 seconds)
[19:38:54] *** Quits: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net) (Ping timeout: 265 seconds)
[19:38:57] *** Quits: erhandsome (~erhandsom@user/erhandsome) (Remote host closed the connection)
[19:39:01] *** Joins: rpthms (~rpthms@user/rpthms)
[19:39:09] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[19:39:12] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[19:39:23] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 265 seconds)
[19:39:52] *** Quits: Joel (~jjshoe@user/joel) (Remote host closed the connection)
[19:40:08] *** Joins: irrgit_ (~irrgit@192.241.175.183)
[19:41:18] *** Quits: irrgit (~irrgit@192.241.175.183) (Remote host closed the connection)
[19:41:24] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[19:42:43] *** Joins: Joel (~jjshoe@user/joel)
[19:42:44] *** Joins: i64 (i64@gateway/vpn/protonvpn/i64)
[19:45:33] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[19:46:01] *** Joins: sudomann (~sudomann@73.183.118.9)
[19:46:37] *** Quits: NeoCron (~NeoCron@p200300c4cf18cd00433f901d5cf4f3d0.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:48:14] *** Quits: Herve (~RV@92.173.180.89) (Ping timeout: 245 seconds)
[19:48:25] *** Quits: akik_ (akik@dsl-tkubng22-58c1e2-116.dhcp.inet.fi) (Ping timeout: 252 seconds)
[19:48:27] *** Quits: emerent (~quassel@p200300cd5748555fba27ebfffed28a59.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:48:36] <cX1n> in docker swarm, using a docker-compose like file if I use networks:host: and ports: - 0.0.0.0:4000:4000 is still binds to ipv6 and not ipv4. are there special args to stop that from happening?
[19:48:46] *** Joins: n000g (~NRG@user/nrg)
[19:48:52] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 252 seconds)
[19:49:15] *** Joins: NeoCron (~NeoCron@p200300c4cf18cd00433f901d5cf4f3d0.dip0.t-ipconnect.de)
[19:49:56] *** Joins: emerent (~quassel@p200300cd5748555fba27ebfffed28a59.dip0.t-ipconnect.de)
[19:50:28] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 252 seconds)
[19:50:56] *** Quits: nakedeyes (~nakedeyes@user/nandormagyar) (Ping timeout: 246 seconds)
[19:50:59] *** Joins: ztx (~ztx@user/ztx)
[19:51:38] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (Ping timeout: 246 seconds)
[19:51:40] *** Quits: nrg (~NRG@user/nrg) (Ping timeout: 250 seconds)
[19:51:41] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 264 seconds)
[19:51:41] *** Quits: jeffg (~jeffg@yyz1do02.jeffg.org) (Ping timeout: 264 seconds)
[19:51:52] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[19:51:57] *** Quits: securethemews (~securethe@2001:470:69fc:105::9b6d) (Ping timeout: 260 seconds)
[19:51:59] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[19:52:17] *** Quits: moldorcoder7 (~moldorcod@37.120.143.29) (Ping timeout: 264 seconds)
[19:52:20] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[19:52:25] *** Joins: jeffg (~jeffg@yyz1do02.jeffg.org)
[19:52:33] *** Joins: nakedeyes (~nakedeyes@user/nandormagyar)
[19:54:11] *** Joins: moldorcoder7 (~moldorcod@37.120.143.29)
[19:54:33] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[19:55:13] *** Joins: blaklistd4 (~blaklistd@user/blaklistd)
[19:57:41] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Ping timeout: 264 seconds)
[19:58:42] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[19:59:58] *** Quits: oskie (usel@user/oskie) (Ping timeout: 252 seconds)
[20:00:28] *** Joins: sudomann (~sudomann@73.183.118.9)
[20:00:39] *** Quits: blaklistd4 (~blaklistd@user/blaklistd) (Ping timeout: 265 seconds)
[20:01:37] *** Joins: oskie (usel@user/oskie)
[20:02:04] <applepi> So jenkins hello world works as the jenkins user
[20:02:17] *** Joins: akik (akik@dsl-tkubng22-58c1e2-116.dhcp.inet.fi)
[20:02:18] <applepi> Er, docker hello world
[20:04:49] *** Joins: securethemews (~securethe@2001:470:69fc:105::9b6d)
[20:09:22] *** Joins: Ivii (~Ivyy@2001:a61:13f1:cb01:f0f6:30f3:425:207c)
[20:10:45] *** Joins: rwtrecs (~rewrit3@user/rewrit3)
[20:12:43] *** Quits: rwtrecs (~rewrit3@user/rewrit3) (Client Quit)
[20:12:44] *** Joins: Wladimir (~doforlove@user/doforlove33)
[20:13:01] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Ping timeout: 245 seconds)
[20:16:28] *** Quits: bouncy (~ben@user/benoit) (Ping timeout: 265 seconds)
[20:18:57] *** Joins: bouncy (~ben@user/benoit)
[20:23:41] *** Joins: artok (~azo@mobile-access-b04844-153.dhcp.inet.fi)
[20:25:19] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 245 seconds)
[20:26:54] <programmerq> cX1nâ–¸ if you use the host mode networking, then you are effectively disabling the docker networking system. port publish is irrelevent. your containerized processes see all the host's network interfaces and can do what they want. your containerized applications would need to be configured to only listen on ipv4
[20:27:41] <programmerq> is it possible that the error is coming from some other context? maybe it's doing something like docker run -v /var/run/docker.sock:/var/run/docker.sock -u 1000:1000 docker/docker docker ...
[20:28:05] *** Quits: artok (~azo@mobile-access-b04844-153.dhcp.inet.fi) (Ping timeout: 260 seconds)
[20:31:55] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-9006-d8f2-cc1e-b078.res6.spectrum.com)
[20:33:26] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-3d8e-e9e6-0356-d7f3.res6.spectrum.com) (Ping timeout: 245 seconds)
[20:33:59] *** Joins: adhawkins_ (~adhawkins@user/adhawkins)
[20:34:05] *** Quits: Ivii (~Ivyy@2001:a61:13f1:cb01:f0f6:30f3:425:207c) (Remote host closed the connection)
[20:34:50] *** Quits: adhawkins (~adhawkins@user/adhawkins) (Ping timeout: 265 seconds)
[20:35:37] *** adhawkins_ is now known as adhawkins
[20:36:28] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[20:36:41] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[20:37:51] <cX1n> lol programmerq thanks again.
[20:38:41] *** Joins: artok (~azo@mobile-access-b04844-153.dhcp.inet.fi)
[20:42:13] *** Quits: i64 (i64@gateway/vpn/protonvpn/i64) (Ping timeout: 252 seconds)
[20:43:24] *** Joins: sudomann (~sudomann@73.183.118.9)
[20:44:59] *** Quits: akik (akik@dsl-tkubng22-58c1e2-116.dhcp.inet.fi) (Quit: leaving)
[20:45:46] *** Quits: mbuf (~Shakthi@136.185.79.30) (Quit: Leaving)
[20:47:03] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[20:48:56] *** Quits: Wladimir (~doforlove@user/doforlove33) (Quit: WeeChat 3.3)
[20:49:11] *** Joins: Wladimir (~doforlove@user/doforlove33)
[20:49:55] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 252 seconds)
[20:50:59] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[20:51:06] *** Joins: Zelec95 (~Zelec@user/zelec)
[20:52:53] *** Quits: Zelec9 (~Zelec@user/zelec) (Ping timeout: 246 seconds)
[20:52:53] *** Zelec95 is now known as Zelec9
[20:53:28] <LyndsySimon> I'm trying to figure out how to use a remote docker host, and using docker contexts to manage what runs on my local docker host versus the remote host. I'm having trouble setting it up so far.
[20:54:32] *** Joins: akik (akik@dsl-tkubng22-58c1e2-116.dhcp.inet.fi)
[20:55:33] <LyndsySimon> My "local" machine is a MacBook Pro, running Docker Desktop. My "remote" machine is a desktop running Window 10 Pro Education, using WSL2 integration.
[20:55:54] *** Joins: Ivii (~Ivyy@2001:a61:13f1:cb01:f0f6:30f3:425:207c)
[20:56:13] <LyndsySimon> My first step is getting my MBP's `docker` command to talk to my remote host's Docker host. I've not yet been able to find the docs to make that work.
[20:56:23] <Wladimir> c
[20:56:27] <tang^> config
[20:56:34] *** Joins: sudomann (~sudomann@73.183.118.9)
[20:57:38] <tang^> oh sorry
[20:57:46] <tang^> LyndsySimon: you want `docker context`
[20:57:56] <LyndsySimon> Yeah, I know that much :)
[20:58:12] <LyndsySimon> That documentation seems to assume connectivity over SSH with keys, though.
[20:58:30] <tang^> that's the current way to do it, yes. very secure
[20:58:48] <tang^> configure a context with tcp:// for old, insecure docker hosts
[20:59:08] <tang^> and `docker context use` to switch between active contexts
[21:01:26] <LyndsySimon> OK, thanks. I think that's enough to get me started.
[21:05:12] *** Quits: masber (~masber@213.55.224.56) (Ping timeout: 256 seconds)
[21:12:35] <frojnd> standardrat: so my current setup is probably gone?
[21:14:10] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 260 seconds)
[21:19:11] *** Joins: jmartin (~jmartin@user/jmartin)
[21:21:39] *** Wladimir is now known as wladimir
[21:22:10] <frojnd> But ps aux | grep docker gives me: root      1999  0.0  0.1 843236  3036 ?        Sl   Oct05   0:00 /usr/bin/docker-proxy -proto tcp -host-ip 0.0.0.0 -host-port 444 -container-ip 172.19.0.2 -container-port 443
[21:22:40] <frojnd> Which makes me to belive that nextcloud is alive somewhere because of docker ps: f80271a72ffe   ghcr.io/linuxserver/nextcloud   "/init"        7 months ago   Up 47 hours   80/tcp, 443/tcp                                  nextcloud
[21:23:05] <LyndsySimon> I'll go ahead and mention - my ultimate goal here is to prototype a solution for my employer, demonstrating that the many docker containers that run our internal backend services can be run on a remote Docker host. Once that's done, the plan is to use AWS to expose a Docker host endpoint to each engineer, so they can run some or all of the services necessary for development there, instead of on their local machines.
[21:23:25] <LyndsySimon> Are there any projects out that that you all might know about that address this problem space?
[21:23:29] *** Joins: Atque (~Atque@user/atque)
[21:23:54] *** Joins: sudomann (~sudomann@73.183.118.9)
[21:28:01] *** Joins: jazzy (~jaziz@172.58.19.25)
[21:28:30] <tang^> ideally, you're using something like docker-swarm or kubernetes to orchestrate your containers in production and developers use their own machines for development
[21:28:41] *** Quits: jmartin (~jmartin@user/jmartin) (Remote host closed the connection)
[21:28:49] <tang^> though, I'd probably also do docker host or docker-swarm for a staging env
[21:29:20] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 260 seconds)
[21:29:37] *** jazzy is now known as jazz-o-lantern
[21:30:06] *** Quits: ImQ009 (~ImQ009@2a02:a312:c637:d380:712e:e8f0:c454:b45d) (Ping timeout: 245 seconds)
[21:30:33] <tang^> still, configuring docker for a remote host is trivial
[21:30:40] *** Joins: sudomann (~sudomann@73.183.118.9)
[21:31:37] <tang^> I have four contexts configured today for various hosts around my org
[21:31:40] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 252 seconds)
[21:32:16] <tang^> IntelliJ IDEA Ultimate makes it super easy to see every remote host with the running containers and everything
[21:33:21] <tang^> (we do java containers here so IDEA is a good fit)
[21:34:53] <LyndsySimon> I'm doing everything in the shell (where I'm most comfortable, honestly). I'm trying to figure out how to tell Docker Desktop on Windows to accept external connections using a given SSH key.
[21:35:29] <programmerq> normally you don't ssh to the docker desktop VM
[21:35:36] <LyndsySimon> I've got lots of experience with IntelliJ (via Pycharm, mostly), but that's not the problem I'm trying to solve.
[21:35:54] <programmerq> what sort of things do you want to do on that VM?
[21:35:59] <LyndsySimon> programmerq: so, does Docker Desktop accept requests from anyone, anytime?
[21:36:14] <tang^> docker desktop is supposed to be for local use
[21:36:15] <LyndsySimon> I want to be able to run containers as if it were my local machine.
[21:36:41] <LyndsySimon> Ahhh, OK. Would it be easier if I set up a *nix machine specifically to act as a docker host, then?
[21:36:44] <programmerq> LyndsySimonâ–¸ basically, docker desktop proxies the docker API into the VM from your local machine.
[21:36:49] <tang^> yeah
[21:37:00] <programmerq> so if you fire up docker desktop, you should be able to pop open powershell and run docker commands
[21:37:15] <LyndsySimon> programmerq: yep, I understand that. Both macOS and Windows use a VM to run the docker process as a docker host.
[21:37:30] <LyndsySimon> programmerq: I think you're misunderstanding the scope of my issue :)
[21:37:54] <LyndsySimon> I'm trying to learn how to use contexts to use docker compose to spin up containers on a remote docker host.
[21:38:00] <programmerq> that is indeed possible-- that's why I asked why you need to ssh to this VM at all. it's designed in a way to mean you don't need to do that.
[21:38:13] <LyndsySimon> Thus far, my "local machine" is a MBP, and my "remote docker host" is Docker Desktop running on Windows 10 Pro.
[21:38:27] <LyndsySimon> I don't need to SSH into it - I need to be able to run containers on it.
[21:38:34] <tang^> ah
[21:38:38] <programmerq> ah, I see. in that case I'd say you'd be better off setting up your own linux VM and doing remote docker that way.
[21:38:56] <LyndsySimon> Fair enough. I'll spin up an EC2 container specifically for this purpose and develop against hat.
[21:38:58] <tang^> yeah, I'd go with a linux vm for the remote
[21:39:18] <programmerq> you could do some fun proxy stuff for sure.
[21:39:34] <LyndsySimon> It'll (probably) ultimately be an EC2 container anyhow. It could be Fargate or something else, but an EC2 host seems like a safe bet.
[21:39:51] <tang^> or an ECS host
[21:40:11] * LyndsySimon has multiple conversations on multiple topics ongoing, so please forgive him for delays in responding.
[21:40:18] <tang^> no problems
[21:40:20] *** Quits: Ivii (~Ivyy@2001:a61:13f1:cb01:f0f6:30f3:425:207c) (Remote host closed the connection)
[21:40:34] *** Joins: Ivii (~Ivyy@2001:a61:13f1:cb01:eb8d:cfc2:863:4d53)
[21:41:06] *** Quits: TomTom (uid45892@id-45892.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:45:24] *** Joins: BSaboia (~bsaboia@177.37.198.74)
[21:47:20] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 265 seconds)
[21:48:01] *** Parts: cmagina (sid286142@user/cmagina) (Good Bye)
[21:49:04] <programmerq> LyndsySimonâ–¸ I found a way to do it. run an ssh server in a container and publish its ssh port. bind mount /var/run/docker.sock and install the docker-ce package (it just needs to be present, but not running in the container)
[21:49:33] <LyndsySimon> Thanks :)
[21:49:54] <programmerq> then you can do DOCKER_HOST=ssh://user@windowshost:publishedport docker ps
[21:50:04] <programmerq> use key auth
[21:50:15] <LyndsySimon> Ahhh, that makes sense.
[21:51:25] <LyndsySimon> You're using SSH to auth as a user of the ssh container. That container has a docker port that's transparently bound to the host's docker port. When you connect from the development machine, you're connecting to the SSH container as a specific user, which has access to the docker port, which in turn is bound to the host's port.
[21:51:39] <BSaboia> Is there a way to make docker compose up build first a custom image that is defined in docker-compose.yml? When I run docker compose up --build or docker compose build, a service that has depends_on condition: service_started is failing to build because it depends on that custom image being built first
[21:51:57] <BSaboia> In the services definition, this is the first image defined. It is a builder
[21:53:03] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[21:56:39] <BSaboia> What are the possible values for depends_on -> condition?
[21:57:35] <programmerq> LyndsySimonâ–¸ yup.
[21:59:29] <programmerq> BSaboiaâ–¸ depends_on is a list of other services. https://docs.docker.com/compose/compose-file/compose-file-v3/#depends_on
[21:59:38] <programmerq> where are you getting the condition: syntax from?
[22:01:00] <programmerq> hmmm, it does look like the new compose project supports it, but I'm not sure why it isn't in that doc. https://github.com/docker/compose/search?q=depends_on
[22:01:38] <BSaboia> Yeah, but well... I don't think it's working as expected
[22:01:41] <programmerq> https://github.com/docker/compose/blob/7c47673d4af41d79900e6c70bc1a3f9f17bdd387/pkg/compose/convergence.go#L268-L294
[22:02:10] <BSaboia> The service starts to be built before the dependency finishes to be built
[22:02:12] <programmerq> so depends_on normally doesn't come into play for building. it comes into play for container created. with the new syntax it looks like there's new conditions
[22:02:27] <programmerq> but that shouldn't matter at build time. there's not a good way to tell compose to build things in a certain order.
[22:02:45] <BSaboia> programmerq, and what's a good way?
[22:03:07] <programmerq> when you get to the point of wanting to have anything more complicated than the most basic image build workflows, compose just doesn't do a good job. I'm a fan of makefiles or cicd pipelines to build assets.
[22:04:04] <programmerq> I would hope that you can do 'docker-compose build' and it wouldn't stop you on the depends_on stuff.
[22:04:31] <programmerq> but even docker-compose up --build should be smart enough to do the build anyway
[22:04:59] <programmerq> but I wouldn't trust the order that builds might happen in, so you'd want to call 'docker-compose build service1 && docker-compose build service2' explicitly
[22:05:49] *** Quits: Null_A (~null_a@2601:645:8700:2290:7419:a622:3a5a:ee04) (Ping timeout: 252 seconds)
[22:05:59] *** Joins: eyeris (~eyeris@068-119-166-104.res.spectrum.com)
[22:06:02] <eyeris> I'm trying to help a colleague who uses docker for mac. I'm used to being able to (on linux) connect from a container to a service running on the host by having that service listen on 172.17.0.1. That IP is not assigned to anything on his mac host though. Should I expect it to be?
[22:06:09] <programmerq> I am pretty quick to add a Makefile to my project once I move past a simple "docker compose up' type workflow for any reason.
[22:06:22] <tang^> unless you're building a base image and an image that uses that base in your compose... build order shouldn't matter at all
[22:06:24] <programmerq> eyerisâ–¸ you should not expect it to be. even on linux, that's a hack.
[22:06:38] <programmerq> there is a special dns name though. one moment.
[22:06:58] <programmerq> eyeris: https://docs.docker.com/desktop/mac/networking/#use-cases-and-workarounds
[22:07:22] <BSaboia> programmerq, I agree with you that anything a little bit more complicate ask for a Makefile or some whichever other CI/CD solution. However, this is simple enough and I can't grasp how simple is to _not_ try building a service when you do not have the required image for that
[22:07:42] <BSaboia> It seems so silly that I am a little bit reluctant to believe that there is not a solution for that
[22:08:14] <programmerq> docker-compose is intended to declare your running containers and any Dockerfile they need. a base image isn't a service in and of itself, so that's where it kind of breaks down a bit.
[22:09:07] *** Joins: sudomann (~sudomann@73.183.118.9)
[22:09:16] <tang^> I prefer to build my images separate from the composition that uses the images to create containers
[22:09:52] <eyeris> programmerq: from inside a container host.docker.internal resolves to an internal IP address that also does not exist on the mac host.
[22:10:04] <programmerq> eyerisâ–¸ that is correct.
[22:11:11] <programmerq> docker desktop is a thing that runs a VM and sets up shared folders and port forwards to give it the basic feel that docker is running totally locally. once you get into the details, you'll see it's still just a VM.
[22:11:47] <programmerq> so the docker0 bridge ip address exists in the VM, so connecting to that would almost certainly give you a connection refused since the VM doesn't really listen on anything.
[22:12:00] <programmerq> that host.docker.internal is an IP that the VM has to get back out to the host.
[22:14:14] <eyeris> programmerq: Following the example in the link you shared with me fails. The python server running on the host does indeed show (in netstat) as listening on all addresses. However the bridge does not have an IP address assigned so the curl invocation within the container sees connection refused error.
[22:14:36] <eyeris> It seems like docker-for-mac is supposed to assign that IP address but didn't for some reason? 
[22:14:50] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 260 seconds)
[22:15:26] <BSaboia> programmerq, I see. Well, if something depends_on something else, I would expect that this is built... but anyway
[22:15:44] <BSaboia> I see your point. It's a shame that I need to split this logic, but if that's what I need to do, so be it
[22:15:55] <tang^> unless you're supposed to be explicit about which services are "built"
[22:16:16] <BSaboia> tang^, I would like to
[22:16:31] <programmerq> eyeris: it works for me https://i.imgur.com/EW6m92N.png 
[22:16:45] <tang^> building your images are a separate process from starting containers from those images
[22:16:52] <programmerq> no need for any ips to be assigned
[22:17:16] *** Quits: applepi (~applepi@156.68.207.89) (Quit: Client closed)
[22:17:23] <BSaboia> tang^, I agree, but when you are using a tool like docker compose, it should orchestrate that for you IMHO
[22:17:38] <tang^> should it though?
[22:17:59] <tang^> I thought it was solely for orchestrating groups of containers, not building the images that they'll be using
[22:17:59] <programmerq> BSaboia the goal of compose is to orchestrate runtime, not build time. it has minimal build support for basic and simple usecases, but does not want to be a fully fledged dependency aware build pipeline for images.
[22:18:04] <BSaboia> tang^, I think so. How can you wait until a service is healthy if it's not even built?
[22:18:12] <BSaboia> programmerq, I see
[22:18:49] <tang^> my images aren't changing that much that they need to be rebuilt right before the service containers are launched
[22:18:53] <BSaboia> But in my case it's fairly simple to make sure that the images are built. I need a very simple script to do that, and hope that the devs will RTFM
[22:19:13] <BSaboia> tang^, if they exist, it's fine that they are not re-built
[22:19:39] <tang^> devs reading the manual... heh.
[22:19:53] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Quit: Leaving)
[22:20:07] <tang^> but I'm definitely on the side of separation of concerns... build is separate from run
[22:20:07] <programmerq> there are a couple things you could do-- separate out that base image and publish it to a registry that your devs machines would have access to (if appropriate/applicable/etc)
[22:20:33] <tang^> and I have a registry for everybody to use
[22:20:34] <programmerq> or, you could shove the stuff in that base image into the Dockerfile(s) that currently depend on that base.
[22:20:43] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[22:21:20] <programmerq> even if you duplicate those instructions across multiple Dockerfiles, they will likely still be able to use the common layers as long as the cache hits the same each time.
[22:21:49] <programmerq> depending on exactly how you craft everything, that may or may not hold true. if it's just some apt install type stuff, it'll hit the cache without an explicit base image
[22:26:58] *** Quits: wladimir (~doforlove@user/doforlove33) (Quit: WeeChat 3.3)
[22:27:29] *** Joins: sudomann (~sudomann@73.183.118.9)
[22:28:25] <BSaboia> programmerq, Yes, I see your point. The "base image" in this case is a compiler. All other projects needs it in order to run their stuff. So I do something like "FROM base-builder as builder FROM alpine:latest COPY --from=builder...". To duplicate this is bad, because if I change something to the compiler, I would need to change it in all other services
[22:28:46] <BSaboia> But I already got the general idea. Now there is a bootstrap script that does all
[22:29:04] <BSaboia> Builds the base-builder image and then runs docker compose up
[22:29:13] <programmerq> BSaboiaâ–¸ that is true that the duplicating would mean that you need to duplicate changes. it would be slightly more dev friendly if they're not the ones worrying about the Dockerfile contents.
[22:30:02] <programmerq> and if the builder is just a compiler, then publishing that image to an internal/private registry would also be more dev friendly. especially if it doesn't change much.
[22:30:11] <programmerq> then the FROM would just pull it
[22:30:43] <programmerq> for distributed teams or teams that don't already have a registry, it is a lot of setup and probably wouldn't be worth it just to have a common base image.
[22:31:30] <BSaboia> programmerq, the end goal is to have the private registry, but currently I have to live with the fact that there is none
[22:35:28] *** Quits: nr0q_radio (~Thunderbi@76.8.147.5) (Ping timeout: 252 seconds)
[22:35:34] *** esses is now known as ses
[22:40:07] *** Joins: Brainium (~brainium@user/brainium)
[22:44:35] <LyndsySimon> I'm using Docker contexts to run my containers on a remote Docker host. I have one container, which is running a "Hello world" Python application. I want to be able to edit that application locally and have my changes hotreload on the running instance.
[22:44:35] <LyndsySimon> If I were using a local Docker host, I'd define a volume in my `docker-compose.yml` and map it to my source directory. With it being a remote Docker host, that approach doesn't work. Thoughts on how best to make this work?
[22:45:10] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 260 seconds)
[22:46:06] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[22:46:38] <programmerq> LyndsySimonâ–¸ you can do 'docker cp' to copy a file to a container. you could mount your local directory on the remote host via nfs, sshfs, or some other file sharing mechanism and then bind mount that into the container.
[22:47:37] <LyndsySimon> Mounting the local directory into the container would require opening SSH on the local machine and exposing it, right? I think that's probably doable, but I'd like to avoid that if possible.
[22:48:17] <LyndsySimon> By "opening", I mean making sure ssh-agent is running and opening the port in any firewalls that might be in place.
[22:48:52] *** Joins: jmartin (~jmartin@user/jmartin)
[22:56:58] <LyndsySimon> Ideally, I'd like to be able to run the stack either locally or remotely, as the situation warrants. That means that the volume should be on my laptop, so my changes (git branches, etc.) are present there if I'm working offline at that time. That would require the remote volume to be bound back to my laptop, likely (as you mentioned) over sshfs or similar.
[22:58:33] *** Joins: sudomann (~sudomann@73.183.118.9)
[23:15:50] *** Joins: hillman7 (~mdbk@207.179.161.20)
[23:16:40] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 260 seconds)
[23:16:50] <hillman7> Hello. Does anyone know if there is a way to rotate docker logs files by timestamp rather than file size?
[23:17:12] <BSaboia> How can I inspect a docker image to see the LABEL contents of it
[23:17:56] <ikke> docker image inspect <image>
[23:19:44] <BSaboia> ikke, thanks
[23:23:51] *** Joins: junktext (~junktext@77.247.181.214)
[23:24:47] *** Joins: jkwnki (~jkwnki@p4ff31dd8.dip0.t-ipconnect.de)
[23:24:48] *** Joins: jkwnki1 (~jkwnki@p4ff31dd8.dip0.t-ipconnect.de)
[23:26:57] *** Joins: sudomann (~sudomann@73.183.118.9)
[23:32:23] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[23:34:19] <hillman7> anyone?
[23:35:36] *** Quits: junktext (~junktext@77.247.181.214) (Quit: junktext)
[23:37:02] *** Joins: vagrant1 (~vagrant@c-73-82-49-38.hsd1.ga.comcast.net)
[23:40:56] *** Quits: jkwnki (~jkwnki@p4ff31dd8.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[23:41:24] *** Quits: jkwnki1 (~jkwnki@p4ff31dd8.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[23:42:08] *** vagrant1 is now known as jaykelly450
[23:43:48] *** Joins: junktext (~junktext@77.247.181.212)
[23:45:34] *** Quits: jaykelly450 (~vagrant@c-73-82-49-38.hsd1.ga.comcast.net) (Quit: WeeChat 3.0)
[23:46:21] *** Quits: hillman7 (~mdbk@207.179.161.20) (Ping timeout: 245 seconds)
[23:46:22] *** Quits: standardrat (~standardr@196.30.99.2) (Remote host closed the connection)
[23:46:38] *** Joins: standardrat (~standardr@196.30.99.2)
[23:47:20] *** Quits: moldorcoder7 (~moldorcod@37.120.143.29) (Ping timeout: 265 seconds)
[23:48:16] *** Joins: jaykelly450 (~vagrant@c-73-82-49-38.hsd1.ga.comcast.net)
[23:56:18] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Quit: Leaving)
