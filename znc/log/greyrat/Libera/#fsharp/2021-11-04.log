[00:33:22] *** Quits: kuribas (~user@ptr-25vy0i9fcjh581tavd9.18120a2.ip6.access.telenet.be) (Quit: ERC (IRC client for Emacs 26.3))
[02:31:39] *** Quits: indomitable (~indomitab@gateway/tor-sasl/indomitable) (Remote host closed the connection)
[02:50:05] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:43:14] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[05:43:33] *** Joins: biberu (~biberu@user/biberu)
[08:19:03] *** Quits: stenno\OK (~stenno@user/stenno) (Ping timeout: 268 seconds)
[08:28:04] *** Joins: indomitable (~indomitab@gateway/tor-sasl/indomitable)
[11:31:54] *** Joins: stenno (~stenno@user/stenno)
[11:40:07] *** stenno is now known as stenno\OK
[12:17:22] <biberu> *writing f#*
[12:20:09] <stenno\OK> javascript might get a pipeline operator
[12:20:28] <biberu> any progress on that rfc?
[12:20:44] <stenno\OK> (x => x + 1) |> ::[1,2,3].map
[12:21:04] <stenno\OK> yes! its stage-2 now
[12:21:30] <biberu> nice, writing a lot of ts and it'll be nice there
[12:56:14] *** Joins: kuribas (~user@ptr-25vy0i85hqqtidw9mko.18120a2.ip6.access.telenet.be)
[13:14:49] <xeno> is javascript ready for a pipeline operator? I'm not really up to date on it, but last I checked, it was horrible for FP 
[13:15:26] <xeno> you kinda need streams or functional collections 
[13:24:04] <biberu> xeno: i think it'd be nice with fp-ts
[13:25:36] <biberu> don't know if you're familiar with it, but now you need to do e.g. pipe(maybeSomething, chain, map, fold)
[13:45:16] <xeno> but does that actually pipe stuff? 
[13:45:23] <xeno> as in functional stuff? 
[13:49:30] <biberu> xeno: well, the signature is pipe :: a -> (a -> b) -> (b -> c) ... -> x, so you could replace calls to pipe with a pipe operator, but i guess how functional it is would depend on what it's actually doing
[13:50:13] <xeno> yeah, last time I operated on things in javascript, shit like lists/arrays, the DOM and everything was essentially mutate-in-place 
[13:50:57] <biberu> indeed, it's really easy to mutate things in js
[13:51:48] <xeno> and unless things have changed, borderline impossible not to 
[13:52:40] <biberu> the ecosystem is the way it is ofc, but the spread operator does help with creating new objects and arrays rather than mutating in your own code
[13:53:26] <biberu> { ... user; name = "new name" } <- copy all properties of user into a new object, set name to the new value
[13:53:53] <biberu> but ofc, one of those properties could be an array, so if you aren't careful you might change that in another place and now both user objects are affected anyway
[13:55:00] <biberu> you'd have to spread each object/array itself to guard against that, which is hard to keep track of when refactoring, or be very, very careful whenever you operate on them
[13:56:19] <biberu> there is also https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze
[16:00:27] *** Quits: xeno (~xeno@user/xeno) (Quit: Textual IRC Client: www.textualapp.com)
[16:19:44] <stenno\OK> you have iterator helpers now
[16:20:05] <stenno\OK> with which you can lazily compose streams and iterables
[16:20:17] <stenno\OK> anyyway off to work
[16:24:59] *** Quits: stenno\OK (~stenno@user/stenno) (Ping timeout: 268 seconds)
[16:29:22] *** Joins: xeno (~xeno@user/xeno)
[16:57:31] *** Joins: stenno\OK (~stenno@user/stenno)
[17:49:52] <biberu> Seq.scan <3
[18:07:14] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[18:10:47] *** Joins: stenno (~stenno@user/stenno)
[18:12:54] *** Quits: stenno\OK (~stenno@user/stenno) (Ping timeout: 268 seconds)
[18:21:02] *** stenno is now known as stenno\OK
[18:29:25] *** Joins: stenno (~stenno@user/stenno)
[18:32:39] *** Quits: stenno\OK (~stenno@user/stenno) (Ping timeout: 268 seconds)
[18:43:17] <indomitable> Seq.biberu
[18:44:22] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[18:52:24] *** Joins: stenno (~stenno@user/stenno)
[19:03:55] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[19:30:03] *** Joins: stenno (~stenno@user/stenno)
[19:44:20] *** stenno is now known as stenno\OK
[20:23:39] *** Quits: stenno\OK (~stenno@user/stenno) (Ping timeout: 268 seconds)
[20:57:45] *** Joins: stenno\OK (~stenno@user/stenno)
[23:07:28] *** Quits: kuribas (~user@ptr-25vy0i85hqqtidw9mko.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
