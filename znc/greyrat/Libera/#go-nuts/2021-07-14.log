[00:00:25] *** Quits: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb) (Write error: Connection reset by peer)
[00:00:25] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Read error: Connection reset by peer)
[00:00:25] *** Quits: TcM1911 (~tcm1911@2001:470:69fc:105::3649) (Remote host closed the connection)
[00:00:25] *** Quits: blakeorwhatever[ (~blakeorwh@2001:470:69fc:105::340e) (Write error: Connection reset by peer)
[00:00:25] *** Quits: dec (~dec@2001:470:69fc:105::3204) (Read error: Connection reset by peer)
[00:00:25] *** Quits: spudly[m] (~spudly@2001:470:69fc:105::18) (Read error: Connection reset by peer)
[00:00:26] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Read error: Connection reset by peer)
[00:00:26] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Read error: Connection reset by peer)
[00:00:26] *** Quits: mambang[m] (~mambang@user/mambang) (Write error: Connection reset by peer)
[00:00:26] *** Quits: kadoban (~kadoban@user/kadoban) (Write error: Connection reset by peer)
[00:00:26] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Read error: Connection reset by peer)
[00:00:27] *** Quits: psydroid (~psydroid@user/psydroid) (Read error: Connection reset by peer)
[00:00:28] *** Quits: mrjumper[m] (~mr-jumper@2001:470:69fc:105::7f1) (Remote host closed the connection)
[00:00:28] *** Quits: 077AABP32 (~phoenixma@2001:470:69fc:105::f9b) (Read error: Connection reset by peer)
[00:00:28] *** Quits: zaibon[m] (~zaibonsyn@2001:470:69fc:105::1019) (Read error: Connection reset by peer)
[00:00:29] *** Quits: dpatterbee[m] (~dpatterbe@2001:470:69fc:105::3f9e) (Write error: Connection reset by peer)
[00:00:29] *** Quits: bat[m] (~batdice-t@2001:470:69fc:105::19b8) (Write error: Connection reset by peer)
[00:00:29] *** Quits: worr (~worr@2001:470:69fc:105::78c) (Remote host closed the connection)
[00:00:30] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Write error: Connection reset by peer)
[00:04:16] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 246 seconds)
[00:04:43] *** Quits: mkopriva (~mkopriva@ip-94-113-146-145.net.upcbroadband.cz) (Remote host closed the connection)
[00:06:03] <Tv_> why would you gather unrelated env vars in a slice though? vals[0] looks just wrong
[00:06:17] <Tv_> might as well port := os.Getenv("PORT")
[00:06:19] *** Quits: gueorgui (~gueorgui@user/gueorgui) (Remote host closed the connection)
[00:07:32] *** Joins: vilhelmbergsoe (~vb@xb90f48c9.cust.hiper.dk)
[00:08:40] <bookworm> write a convenience function that does getEnv(varname, default string) and return either what's given in varname or your file or whatever is in defaults, then use that
[00:08:59] <bookworm> aggregating in a list is just not compatible with the language as such
[00:11:13] <acagastya> I did not suggest I am gathering unrelated vars.
[00:11:22] *** Joins: holgersson (~quassel@user/holgersson)
[00:17:40] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:68b5:765c:8e88:1eca)
[00:18:36] *** Quits: ikke (~kevin@alpine/developer/ikke) (Ping timeout: 255 seconds)
[00:21:04] *** Joins: gueorgui (~gueorgui@2.30.136.31)
[00:21:53] *** Quits: gueorgui (~gueorgui@2.30.136.31) (Changing host)
[00:21:53] *** Joins: gueorgui (~gueorgui@user/gueorgui)
[00:23:05] *** Parts: vilhelmbergsoe (~vb@xb90f48c9.cust.hiper.dk) ()
[00:27:20] <jemaclus> I think I would return a struct with the keys and values rather than a slice
[00:30:30] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1005) (Quit: ZNC 1.8.2 - https://znc.in)
[00:41:39] *** Quits: darkmuggle (darkmuggle@here.for-the.chat) (Changing host)
[00:41:39] *** Joins: darkmuggle (darkmuggle@redhat/darkmuggle)
[00:41:43] *** Quits: Kane (~Kane@home.yarg.fr) (Quit: Leaving)
[00:47:12] *** Quits: Xjs (~jannis@user/xjs) (Ping timeout: 276 seconds)
[00:48:40] *** Joins: Xjs (~jannis@user/xjs)
[00:49:13] *** Quits: sizeof_void34 (~Thunderbi@109.252.76.37) (Quit: sizeof_void34)
[00:50:21] *** Joins: DeltaNova (~DeltaNova@user/deltanova)
[00:53:37] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[00:56:00] *** Quits: strubbl891941 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de) (Quit: The Lounge - https://thelounge.github.io)
[00:56:47] *** Joins: strubbl891941 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de)
[01:06:18] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Ping timeout: 258 seconds)
[01:09:23] <Tv_> acagastya: PORT and SERVER looked like unrelated, especially the port := vals[0]; server := vals[1] part
[01:13:57] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 255 seconds)
[01:15:38] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[01:17:18] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Ping timeout: 272 seconds)
[01:22:03] *** Joins: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb)
[01:22:42] *** Quits: independent56 (~independe@95.144.68.40) (Remote host closed the connection)
[01:23:04] *** Joins: independent56 (~independe@95.144.68.40)
[01:23:40] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[01:23:40] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[01:23:40] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[01:23:40] *** Joins: worr (~worr@2001:470:69fc:105::78c)
[01:23:40] *** Joins: phoenix[m]1 (~phoenixma@2001:470:69fc:105::f9b)
[01:23:40] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[01:23:40] *** Joins: kadoban (~kadoban@user/kadoban)
[01:23:40] *** Joins: dpatterbee[m] (~dpatterbe@2001:470:69fc:105::3f9e)
[01:23:40] *** Joins: mambang[m] (~mambang@user/mambang)
[01:23:40] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[01:23:40] *** Joins: blakeorwhatever[ (~blakeorwh@2001:470:69fc:105::340e)
[01:23:40] *** Joins: psydroid (~psydroid@user/psydroid)
[01:23:40] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[01:23:48] *** Joins: mrjumper[m] (~mr-jumper@2001:470:69fc:105::7f1)
[01:23:52] *** Joins: zaibon[m] (~zaibonsyn@2001:470:69fc:105::1019)
[01:23:53] *** Joins: dec (~dec@2001:470:69fc:105::3204)
[01:23:54] *** Joins: TcM1911 (~tcm1911@2001:470:69fc:105::3649)
[01:23:54] *** Joins: bat[m] (~batdice-t@2001:470:69fc:105::19b8)
[01:26:18] *** Joins: ikke (~kevin@alpine/developer/ikke)
[01:31:03] *** Joins: be3uykpy (~be3uykpy@141.226.9.247)
[01:34:55] *** Quits: gueorgui (~gueorgui@user/gueorgui) (Ping timeout: 246 seconds)
[01:36:08] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 256 seconds)
[01:47:11] *** Joins: bneil (~bneil@63.227.18.157)
[01:48:26] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[01:51:55] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[01:55:56] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[01:56:34] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 272 seconds)
[01:58:14] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d) (Ping timeout: 256 seconds)
[01:58:20] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:03:54] <b0nn> I'd go the struct route too, on the grounds that it's magic to know which indicie relates to what type ofdata the value relates to
[02:05:35] <mmm4m5m> siXy: fyi, I tried with latest flutter engine and build it locally. It does not work (or I did it wrong)
[02:07:35] *** Joins: kupi (uid212005@id-212005.stonehaven.irccloud.com)
[02:09:27] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1)
[02:09:34] *** Quits: independent56 (~independe@95.144.68.40) (Ping timeout: 246 seconds)
[02:14:58] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[02:17:59] *** Quits: hexfive (~eric@50.35.83.177) (Quit: WeeChat 3.0)
[02:20:19] *** Quits: jjonah (~jjonah@p200300d5d7153b00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:29:37] *** Quits: The_Loko (~The_Loko@86.127.235.231) (Quit: Leaving)
[02:29:49] *** Joins: fbandov_ (~fbandov@2a02:8109:b6c0:ae7c:344d:6fd0:16d0:3b4a)
[02:31:37] *** Joins: Torr (~Torr@user/torr)
[02:32:58] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:68b5:765c:8e88:1eca) (Ping timeout: 268 seconds)
[02:33:58] *** Joins: src (~src@user/src)
[02:39:31] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:51:30] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[03:05:31] *** Quits: fbandov_ (~fbandov@2a02:8109:b6c0:ae7c:344d:6fd0:16d0:3b4a) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:13:26] *** Quits: huh_ (~huh@HSI-KBW-109-193-238-226.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 272 seconds)
[03:14:41] *** Joins: strubbl8919419 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de)
[03:16:04] *** Quits: strubbl891941 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de) (Ping timeout: 246 seconds)
[03:17:31] *** Joins: huh_ (~huh@hsi-kbw-109-193-238-226.hsi7.kabel-badenwuerttemberg.de)
[03:22:31] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Quit: unmanbearpig)
[03:25:18] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[03:30:23] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[03:31:10] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[03:31:44] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:32:08] *** Joins: jsrnop (~mark@user/jsrnop)
[03:32:52] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 246 seconds)
[03:33:48] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[03:36:22] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 246 seconds)
[03:51:21] *** Joins: binchickin (~binchicki@165.22.169.69)
[03:53:29] *** Joins: gggpkm (~gggpkm@123.113.186.51)
[03:54:45] *** Quits: DeltaNova (~DeltaNova@user/deltanova) (Quit: WeeChat 3.0.1)
[03:55:31] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 265 seconds)
[04:02:26] *** Joins: bpalmer (~user@user/bpalmer)
[04:04:42] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (Ping timeout: 245 seconds)
[04:14:09] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[04:16:52] *** Quits: kupi (uid212005@id-212005.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[04:20:24] *** A_Dragon is now known as drg
[04:21:04] *** drg is now known as A_Dragon
[04:25:07] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:26:24] *** Quits: cnf (~cnf@d5152daf0.static.telenet.be) (Quit: Ping timeout (120 seconds))
[04:26:36] *** Joins: cnf (~cnf@d5152daf0.static.telenet.be)
[04:26:48] *** Joins: andlabs (~andlabs@71.190.119.164)
[04:37:18] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 276 seconds)
[04:39:47] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[04:42:18] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1) (Ping timeout: 255 seconds)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:10] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[04:47:35] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:49:27] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Client Quit)
[04:50:46] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[04:57:27] *** Quits: lauraaah (uid156848@id-156848.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[04:58:24] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:01:07] *** Joins: andlabs (~andlabs@71.190.119.164)
[05:04:59] *** Joins: veegee_ (~veegee@188.241.82.9)
[05:08:22] *** Joins: veegee__ (~veegee@102.165.25.85)
[05:09:09] *** Quits: veegee (~veegee@172.98.71.46) (Ping timeout: 276 seconds)
[05:11:17] *** Joins: veegee (~veegee@95.181.237.13)
[05:11:17] *** Quits: pots (~pots@20.51.220.66) (Remote host closed the connection)
[05:11:38] *** Quits: veegee_ (~veegee@188.241.82.9) (Ping timeout: 258 seconds)
[05:12:34] *** Parts: binchickin (~binchicki@165.22.169.69) ()
[05:14:42] *** Quits: veegee__ (~veegee@102.165.25.85) (Ping timeout: 258 seconds)
[05:21:01] *** Quits: veegee (~veegee@95.181.237.13) (Ping timeout: 246 seconds)
[05:27:35] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[05:28:39] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 276 seconds)
[05:57:58] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Quit: MrFantastik)
[05:58:16] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[05:59:56] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[06:05:42] *** Quits: steve__ (~steve@ool-18b99d28.dyn.optonline.net) (Ping timeout: 272 seconds)
[06:08:52] *** Quits: hposca (~hposca@node-1w7jr9phoke2td1e507xtdn5o.ipv6.telus.net) (Ping timeout: 245 seconds)
[06:09:17] *** Joins: milosz_ (~milosz@user/milosz)
[06:13:04] *** Quits: milosz__ (~milosz@user/milosz) (Ping timeout: 272 seconds)
[06:16:53] *** Joins: atomgardner (~atomgardn@user/atomgardner)
[06:39:28] *** Quits: doug_ (~doug_@cpe-172-250-106-85.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:40:18] *** Quits: atomgardner (~atomgardn@user/atomgardner) (Ping timeout: 272 seconds)
[06:57:30] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[06:58:05] *** Joins: LSD (~LSD@2.lsd.systems)
[07:09:48] *** Joins: gggpkm_ (~gggpkm@60.10.23.164)
[07:12:23] *** Quits: gggpkm (~gggpkm@123.113.186.51) (Ping timeout: 258 seconds)
[07:15:59] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[07:17:46] *** Joins: tg (~tg@rockylinux/infra/tg)
[07:19:27] *** Quits: gggpkm_ (~gggpkm@60.10.23.164) (Ping timeout: 268 seconds)
[07:39:03] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[07:41:04] *** Joins: ghballiet (~gb@167.sub-174-248-193.myvzw.com)
[07:48:26] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[07:48:36] *** Quits: ghballiet (~gb@167.sub-174-248-193.myvzw.com) (Ping timeout: 255 seconds)
[07:50:40] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[07:53:19] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 265 seconds)
[08:02:47] *** Joins: amigan (dramoray@dtvax.dynatron.me)
[08:06:36] *** Quits: kulak (~kulak@user/kulak) (Ping timeout: 276 seconds)
[08:12:19] *** LSD is now known as acidsys
[08:14:56] *** Joins: gggpkm (~gggpkm@60.10.23.164)
[08:16:14] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 255 seconds)
[08:18:53] *** Joins: mkopriva (~mkopriva@ip-94-113-146-145.net.upcbroadband.cz)
[08:35:47] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:38:01] *** Joins: andlabs (~andlabs@71.190.119.164)
[08:45:05] *** Joins: doug_ (~doug_@cpe-172-250-106-85.socal.res.rr.com)
[08:47:27] <dansan> Is there a mechanism in Go for a condition variable or simple futex-like object compatible with select?  I need to wait for an event to happen OR some other things (channel or timer), but if the event is triggered 20 times before I hit a select on it, I don't want it to return 20 times
[08:48:15] *** Quits: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern) (Ping timeout: 268 seconds)
[08:48:32] <dansan> From one goroutine, I want to set the value to triggered, and then the other goroutine to select on that condition occurring OR a few others.
[08:48:50] <dansan> sync.Cond looks nice, except for the fact that you can't use it from a select statement :(
[08:49:03] <bpalmer> set up a goroutine to listen for it, that then sends a message on a channel
[08:49:31] <dansan> uugh, that's super ugly :(
[08:49:52] <bpalmer> the only thing that select works with is channels (plus the default case)
[08:50:28] <dansan> And costs another goroutine unnecessarily.  I respect that goroutines are more efficient than threads, but that's still ugly. :(
[08:50:44] <dansan> bpalmer: thank you, btw
[08:51:24] <dansan> I suppose I could use a channel with a very large number of entries and then use a non-blocking loop to drain it each time
[08:52:40] *** Joins: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com)
[08:52:40] *** Quits: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com) (Changing host)
[08:52:40] *** Joins: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern)
[08:53:05] <bpalmer> you could also play around with an atomic compare-and-swap to see if condition has been met yet, while doing a select + timeout to effectively poll.
[08:55:36] <bpalmer> or, if you arent' worried about multiple readers getting triggered by the event, you could just use an atomic.Value or atomic.Load*
[08:55:55] <bpalmer> But, really, I suspect a separate, cancellable goroutine that waits on the condition variable would be at the least competitive with most of the other solutions.
[08:56:00] <dansan> hrm, well we can do len(ch) on a chan, so something like this should work.  I don't actually need to know the number of times it was triggered, so I think I just need a memory barrier
[08:56:04] *** Parts: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern) ()
[08:57:28] <dansan> So I use a make(chan struct{}, 1) and the trigger function would do a memory barrier, followed by a len(ch) -- as long as there's only one supplier.
[08:57:54] *** Quits: gggpkm (~gggpkm@60.10.23.164) (Ping timeout: 255 seconds)
[08:58:09] <dansan> If len(ch) == 0, then I can add to the chan.  Otherwise, just know that the other goroutine hasn't tried to select on it yet.
[08:58:20] *** Joins: kulak (~kulak@user/kulak)
[08:59:03] <dansan> Oh yes! I can just add a mutex to control access to triggering it and that will provide the memory barrier plus be save for multiple supplier goroutines.
[08:59:25] <dansan> Thank you bpalmer! I guess I just needed to talk it out and get suggestions
[08:59:26] <bpalmer> or, you could do a non-blocking send to an unbuffered channel rather than mess with len(ch)
[08:59:43] <dansan> oh rats!
[08:59:50] <dansan> I didn't know about that, lol
[09:00:38] <bpalmer> select { case ch<-struct{}{}: default: }
[09:00:41] <dansan> I see, you just do make(chan struct{}) without a size
[09:00:59] <dansan> Yeah, that's exactly it!
[09:01:04] <dansan> At least, I believe it is
[09:01:41] <dansan> And that will most certainly provide the implicit memory barrier
[09:02:01] <dansan> +1 bpalmer
[09:06:27] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 255 seconds)
[09:07:47] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:08:08] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[09:08:55] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[09:15:20] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[09:23:28] *** Joins: independent56 (~independe@95.144.68.40)
[09:25:21] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 255 seconds)
[09:29:31] *** Joins: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it)
[09:29:36] *** Parts: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it) ()
[09:42:31] *** Quits: smitop (~smitop@user/smitop) (Ping timeout: 268 seconds)
[09:44:30] *** Joins: braverock_ (~raghav@171.78.232.177)
[09:52:41] *** Quits: doug_ (~doug_@cpe-172-250-106-85.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:53:20] *** Joins: smitop (~smitop@user/smitop)
[09:53:27] *** Quits: souvik (~souvik@103.199.182.63) (Ping timeout: 245 seconds)
[09:56:36] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:57:25] *** Joins: souvik (~souvik@103.199.182.242)
[09:57:32] *** Joins: doug_ (~doug_@cpe-172-250-106-85.socal.res.rr.com)
[09:59:55] *** Quits: braverock_ (~raghav@171.78.232.177) (Quit: braverock_)
[10:01:17] <mkopriva> Hi all, I'm trying to ssh into a remote host using the crypto/ssh package and I'm able to do it but the arrow keys are screwed up. When I ssh into the same host using os/exec the arrow keys work as expected. Anyone knows how to get the arrow keys working when connecting with crypto/ssh? For more details please see: https://play.golang.org/p/JCUaX2dcpT- (client machine os is macOS, remote server os is ubuntu)
[10:02:55] *** Quits: doug_ (~doug_@cpe-172-250-106-85.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:13:36] *** Joins: doug_ (~doug_@cpe-172-250-106-85.socal.res.rr.com)
[10:14:19] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[10:14:22] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[10:20:32] *** Parts: acagastya (~acagastya@wikinews/acagastya) ()
[10:25:20] *** Quits: martin_ (martin@185.71.208.255) (Quit: WeeChat 3.0)
[10:25:32] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 245 seconds)
[10:30:54] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[10:34:47] *** Joins: atomgardner (~atomgardn@user/atomgardner)
[10:37:10] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 265 seconds)
[10:44:15] *** Joins: shka (~herr@109.231.62.239)
[10:44:55] *** Quits: pepee (~user@user/pepee) (Quit: bye $IRC)
[10:49:06] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[10:52:35] *** Joins: gggpkm (~gggpkm@117.61.17.58)
[10:52:56] *** Quits: gggpkm (~gggpkm@117.61.17.58) (Remote host closed the connection)
[10:53:55] *** Joins: gggpkm (~gggpkm@117.61.17.58)
[10:55:36] *** Joins: gggpkm_ (~gggpkm@117.61.17.58)
[10:57:10] *** Quits: gggpkm (~gggpkm@117.61.17.58) (Read error: Connection reset by peer)
[10:57:18] *** Joins: arinov (~arinov@213.194.126.155)
[10:58:04] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[10:58:44] *** Joins: sizeof_void34 (~Thunderbi@109-252-76-37.nat.spd-mgts.ru)
[10:59:49] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 246 seconds)
[11:06:00] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[11:07:10] *** Quits: kiril (~kiril@85.91.153.163) (Ping timeout: 272 seconds)
[11:08:04] *** Quits: doug_ (~doug_@cpe-172-250-106-85.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:10:50] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:12:16] *** Joins: andlabs (~andlabs@71.190.119.164)
[11:12:43] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[11:14:05] *** Joins: jjonah (~jjonah@p200300d5d7153b00dea632fffeb3342f.dip0.t-ipconnect.de)
[11:15:09] *** Joins: mrig (~mrig@user/mrig)
[11:16:51] *** Joins: kiril (~kiril@85.91.153.163)
[11:17:59] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[11:23:05] *** Joins: saschagrunert (~saschagru@46.128.124.113)
[11:25:07] *** Quits: jackneill (~jackneill@20014C4E1823FF00E6B7BA72E5C70263.unconfigured.pool.telekom.hu) (Ping timeout: 245 seconds)
[11:25:54] *** Quits: saschagrunert (~saschagru@46.128.124.113) (Remote host closed the connection)
[11:26:46] *** Joins: saschagrunert (~saschagru@46.128.124.113)
[11:37:51] *** Joins: CoolerX (~CoolerX@user/coolerx)
[11:39:52] *** Joins: hjmcnew (sid86092@id-86092.tinside.irccloud.com)
[11:47:06] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[11:47:32] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[11:48:37] *** Joins: danmurf (uid480399@user/danmurf)
[11:50:18] *** Quits: atomgardner (~atomgardn@user/atomgardner) (Ping timeout: 258 seconds)
[11:51:54] *** Quits: independent56 (~independe@95.144.68.40) (Ping timeout: 272 seconds)
[11:52:30] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 255 seconds)
[11:54:12] *** Joins: fef (~thedawn@user/thedawn)
[11:54:29] *** Joins: absc (~absc@81.31.144.178)
[11:54:32] *** Joins: lauraaah (uid156848@id-156848.charlton.irccloud.com)
[11:55:39] *** Joins: rgl (~rgl@bl12-47-147.dsl.telepac.pt)
[11:57:07] *** Joins: fbandov (~fbandov@2a02:8109:b6c0:ae7c:344d:6fd0:16d0:3b4a)
[11:59:57] *** Quits: fbandov (~fbandov@2a02:8109:b6c0:ae7c:344d:6fd0:16d0:3b4a) (Client Quit)
[12:05:03] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:05:04] *** Joins: AquaL1te_ (~AquaL1te@user/aqual1te)
[12:05:04] *** Quits: AquaL1te_ (~AquaL1te@user/aqual1te) (Client Quit)
[12:07:56] *** Quits: absc (~absc@81.31.144.178) (Ping timeout: 258 seconds)
[12:09:42] *** Quits: Xjs (~jannis@user/xjs) (Ping timeout: 245 seconds)
[12:11:23] *** Joins: Xjs (~jannis@user/xjs)
[12:14:48] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[12:15:29] *** Joins: doug_ (~doug_@cpe-172-250-106-85.socal.res.rr.com)
[12:16:39] *** Joins: absc (~absc@81.31.144.180)
[12:19:38] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[12:21:06] *** Quits: doug_ (~doug_@cpe-172-250-106-85.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:23:55] *** Joins: Kane (~Kane@home.yarg.fr)
[12:25:19] *** Quits: smitop (~smitop@user/smitop) (Ping timeout: 268 seconds)
[12:25:21] *** Quits: Eddward_ (~Eddward@207.138.204.132) (Ping timeout: 255 seconds)
[12:28:00] *** Joins: nattiestnate (~nate@36.70.197.105)
[12:33:15] *** Joins: fbandov (~fbandov@217.110.80.4)
[12:36:47] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 255 seconds)
[12:39:29] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 255 seconds)
[12:39:54] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:40:03] *** Joins: smitop (~smitop@user/smitop)
[12:40:38] *** Joins: arahael1 (~arahael@203-206-95-20.tpgi.com.au)
[12:40:39] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 255 seconds)
[12:42:21] *** Quits: arahael (~arahael@118.211.182.212) (Ping timeout: 265 seconds)
[12:46:04] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[12:47:12] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 245 seconds)
[12:50:36] *** Quits: absc (~absc@81.31.144.180) (Ping timeout: 268 seconds)
[12:52:01] *** Parts: arahael1 (~arahael@203-206-95-20.tpgi.com.au) ()
[12:54:03] *** Joins: arahael (~arahael@203-206-95-20.tpgi.com.au)
[12:54:20] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 255 seconds)
[12:55:41] *** Quits: smitop (~smitop@user/smitop) (Ping timeout: 255 seconds)
[12:55:51] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[12:57:01] *** Joins: arinov (~arinov@95.12.117.57)
[12:57:32] *** Joins: absc (~absc@81.31.144.178)
[13:04:30] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[13:07:01] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Client Quit)
[13:07:18] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[13:08:47] *** Joins: currybullen (~curry@h-81-170-128-138.A258.priv.bahnhof.se)
[13:09:50] *** Joins: smitop (~smitop@user/smitop)
[13:11:14] <currybullen> if a buffered channel has some value sent on it which is never received, and eventually there are no more references to the channel, does the channel along with the unreceived value get GCed?
[13:11:57] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[13:12:49] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Ping timeout: 246 seconds)
[13:13:53] *** Quits: nattiestnate (~nate@36.70.197.105) (Quit: WeeChat 3.2)
[13:16:10] <sztanpet> yes currybullen
[13:16:43] <sztanpet> and of course the value cant have any references to it either
[13:20:16] *** Joins: dr0n (~nabromov@185.219.140.223)
[13:22:30] *** Quits: arinov (~arinov@95.12.117.57) (Ping timeout: 255 seconds)
[13:24:01] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[13:24:29] *** Joins: oxum (~oxum@136.185.133.224)
[13:29:58] *** Quits: oxum (~oxum@136.185.133.224) (Remote host closed the connection)
[13:31:47] *** Quits: smitop (~smitop@user/smitop) (Ping timeout: 245 seconds)
[13:31:55] *** Joins: gueorgui (~gueorgui@2.30.136.31)
[13:32:36] *** Quits: gggpkm_ (~gggpkm@117.61.17.58) (Read error: Connection reset by peer)
[13:32:43] *** Joins: smitop (~smitop@user/smitop)
[13:33:11] *** Joins: gggpkm (~gggpkm@117.61.17.58)
[13:35:41] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[13:36:26] *** Joins: gggpkm_ (~gggpkm@117.61.29.201)
[13:37:27] *** Joins: arinov (~arinov@213.194.126.155)
[13:38:42] *** Quits: gggpkm (~gggpkm@117.61.17.58) (Ping timeout: 255 seconds)
[13:38:44] *** Quits: gggpkm_ (~gggpkm@117.61.29.201) (Remote host closed the connection)
[13:42:03] *** milosz_ is now known as milosz
[13:42:27] <Cork> anyone know how to get sni to work in ListenAndServerTLS now days? the references i manage to find point at the depricated BuildNameToCertificate
[13:47:07] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 246 seconds)
[13:47:55] <sztanpet> should be automatic
[13:48:06] <sztanpet> where are you stuck
[13:48:47] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[13:49:12] *** Joins: gggpkm (~gggpkm@117.61.29.201)
[13:52:29] <Cork> sztanpet: how to give it a list of certificates
[13:52:55] <Cork> actually i fail to find any up to date documentation on how to do sni
[13:54:23] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-50.prtc.net)
[13:55:20] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[13:56:14] <sztanpet> you give them in cert file Cork
[13:56:26] <Cork> sztanpet: ya, but how do you do it for sni?
[13:56:32] <Cork> meaning multiple domains and files
[13:56:34] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[13:56:35] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Client Quit)
[13:57:40] <Cork> The only thing i can find is that you have to write your own TLSConfig manager, but that seams a bit excessive to just serve sni
[13:58:02] <sztanpet> should be automatic, if there is a cert for the given domain, it should automatically select it, you can do any type of customization of course, look at https://pkg.go.dev/net/http#Server and TLSConfig
[13:58:35] <Cork> sztanpet: so you mean you cram all the keys into one file?
[13:58:42] <sztanpet> sure
[13:58:43] <Cork> or how do you do "given domain"?
[13:58:47] <Cork> ah...
[14:00:21] <albertito> Cork: you need a custom tls.Config, where you append all the certs to tlsConfig.Certificates, and once you're done loading, call tlsConfig.BuildNameToCertificate
[14:00:51] <albertito> Cork: actually the latter part is no longer necessary in go >= 1.14 IIRC
[14:01:00] *** Quits: nahamu (~nahamu@tailscale/contributor/nahamu) (Quit: WeeChat 2.7)
[14:01:40] <albertito> Cork: https://blitiri.com.ar/git/r/gofer/b/master/t/util/f=util.go.html#line-14    is an example
[14:02:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 245 seconds)
[14:04:07] *** Joins: fef (~thedawn@user/thedawn)
[14:04:59] <Cork> albertito: that makes a ton more sence, thx!
[14:05:16] <fizzie> There's also the GetCertificate and GetConfigForClient funcs in tls.Config that get a ClientHelloInfo that has the ServerName when the client supports SNI. I imagine those could be used if the automatic selection doesn't suffice for some reason.
[14:07:09] *** Quits: kiril (~kiril@85.91.153.163) (Ping timeout: 258 seconds)
[14:07:12] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[14:07:13] <Cork> fizzie: the automatic selection works just fine, i have used it with acme, just stumbled on how to do it with classic files
[14:09:29] *** Joins: gggpkm_ (~gggpkm@117.61.25.14)
[14:09:34] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[14:09:37] <albertito> Cork: fizzie's notes are useful if you need to do some customization or special logic based on SNI. For the vast majority of cases, where you don't need that, having that config + calling (tls.Listen or http.Server.ListenAndServeTLS or whatever) works just fine
[14:10:12] *** Quits: Ohlov311534026 (~Ohlov3@dyndsl-085-016-108-088.ewe-ip-backbone.de) (Ping timeout: 255 seconds)
[14:10:20] <Cork> yup, thx a lot both
[14:10:25] <Cork> i have all i need now
[14:10:36] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 272 seconds)
[14:11:22] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 245 seconds)
[14:11:52] *** Quits: gggpkm (~gggpkm@117.61.29.201) (Ping timeout: 272 seconds)
[14:12:38] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[14:13:42] *** Joins: koolazer (~koo@user/koolazer)
[14:15:40] *** Quits: mkopriva (~mkopriva@ip-94-113-146-145.net.upcbroadband.cz) (Remote host closed the connection)
[14:18:41] *** Joins: kiril (~kiril@85.91.153.163)
[14:25:55] *** Joins: gggpkm (~gggpkm@117.61.24.11)
[14:26:19] *** Quits: gggpkm_ (~gggpkm@117.61.25.14) (Ping timeout: 258 seconds)
[14:26:36] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[14:28:37] *** Joins: c10l (~c10l@89.34.167.207)
[14:29:36] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Quit: Client closed)
[14:29:53] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[14:31:36] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 252 seconds)
[14:32:21] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~â™ª)
[14:33:30] *** Joins: cnf2 (~cnf@d5152daf0.static.telenet.be)
[14:33:36] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[14:34:00] *** Quits: cnf (~cnf@d5152daf0.static.telenet.be) (Read error: Connection reset by peer)
[14:34:00] *** cnf2 is now known as cnf
[14:34:07] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[14:35:04] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Ping timeout: 246 seconds)
[14:42:18] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[14:42:54] *** Joins: fef (~thedawn@user/thedawn)
[14:43:07] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-50.prtc.net) (Ping timeout: 246 seconds)
[14:45:36] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 265 seconds)
[14:48:23] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[14:55:29] *** Joins: oxum (~oxum@136.185.133.224)
[14:56:17] *** Quits: oxum (~oxum@136.185.133.224) (Remote host closed the connection)
[15:02:42] *** Joins: msh_ (~msh@46.197.143.30)
[15:02:48] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91)
[15:03:30] *** Quits: msh_ (~msh@46.197.143.30) (Client Quit)
[15:04:12] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Quit: Client closed)
[15:04:29] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[15:04:39] *** Joins: mselh (~msh@46.197.143.30)
[15:07:14] *** Quits: lauraaah (uid156848@id-156848.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[15:09:01] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Ping timeout: 246 seconds)
[15:10:37] *** Quits: fbandov (~fbandov@217.110.80.4) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:11:48] *** Quits: mselh (~msh@46.197.143.30) (Quit: Konversation terminated!)
[15:16:20] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[15:21:16] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Ping timeout: 246 seconds)
[15:23:49] *** Quits: arinov (~arinov@213.194.126.155) (Read error: Connection reset by peer)
[15:23:59] *** Joins: mkopriva (~mkopriva@ip-94-113-146-145.net.upcbroadband.cz)
[15:24:07] *** Joins: arinov (~arinov@213.194.126.155)
[15:27:25] *** Joins: Vigdis (~danj@ns4.chown.me)
[15:39:18] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 255 seconds)
[15:43:25] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[15:45:48] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:46:48] *** Joins: koolazer (~koo@user/koolazer)
[15:47:42] *** Joins: fbandov (~fbandov@217.110.80.4)
[16:06:05] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Quit: Client closed)
[16:06:22] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[16:10:37] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Ping timeout: 246 seconds)
[16:12:20] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 255 seconds)
[16:15:03] *** Joins: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1005.inf6.spectrum.com)
[16:18:04] *** Quits: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1005.inf6.spectrum.com) (Client Quit)
[16:18:19] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[16:18:53] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 265 seconds)
[16:23:02] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[16:25:54] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[16:28:25] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[16:30:57] *** Quits: bpalmer (~user@user/bpalmer) (Remote host closed the connection)
[16:32:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[16:39:50] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:40:50] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:49:29] *** Joins: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b)
[16:50:43] <roxlu> hi, I'm a super newb to go and trying to run a .go file/script. and this is probably a silly question.. but I have a script which results in this error when I try to run it: no required module provides package github.com/fsnotify/fsnotify: go.mod file not found in current directory or any parent directory.  I execute the script using `go run /path/to/script/file.go`
[16:51:13] <roxlu> I know I prob. should read the docs :% but I thought this must be a super quick fix.
[16:51:18] <eyJhb> You need to init your go modules :)
[16:51:28] <eyJhb> https://blog.golang.org/using-go-modules
[16:53:25] <roxlu> thanks so when I want to use an existing module, I need to run `go init` too?
[16:55:48] *** Quits: souvik (~souvik@103.199.182.242) (Ping timeout: 255 seconds)
[16:56:04] <eyJhb> Everytime you have some Go, you need to create a module for it. Most guides now a days are outdated, and will not guide you throuh that. You could just run `go mod init test && go mod tidy && go run main.go` (run all these commands in the same dir as the file).
[16:56:10] <eyJhb> But what are you trying to run?
[16:57:21] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[16:58:06] *** Quits: jespada (~jespada@90.254.247.46) (Ping timeout: 256 seconds)
[16:59:33] *** Joins: souvik (~souvik@103.199.182.127)
[16:59:37] *** Joins: jespada (~jespada@90.254.247.46)
[16:59:40] <roxlu> Thanks eyJhb! I got it working now
[17:00:08] <roxlu> I have a file "something.go" .. and I have to do `go mod init something` instead of `go mod inot github../fsnotify`
[17:01:01] <eyJhb> Yes :)
[17:01:10] <eyJhb> Glad you got it working, happy hacking
[17:01:27] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[17:01:35] <roxlu> thanks!
[17:01:43] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Ping timeout: 246 seconds)
[17:01:50] <ikke> How do I properly specify these flags as GOFLAGS? -ldflags="-linkmode external -extldflags='-static' -X=main.version=v3.6.0"
[17:02:19] *** Quits: gggpkm (~gggpkm@117.61.24.11) (Remote host closed the connection)
[17:03:28] <eyJhb> ikke: In your ~/.profile or something simular?
[17:03:32] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:03:45] <ikke> I know how to set environment variables
[17:04:04] <A_Dragon> I think you want to append them as vars in the var
[17:04:07] <A_Dragon> one momemnt
[17:04:12] <A_Dragon> $HOME style, I mean
[17:04:58] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[17:05:30] <bookworm> https://wiki.archlinux.org/title/Go_package_guidelines#Flags_and_build_options for some examples
[17:05:32] *** Joins: fef (~thedawn@user/thedawn)
[17:05:53] <ikke> bookworm: that does not have multiple -ldflags
[17:06:03] <A_Dragon> ikke: `GOFLAGS="-ldflags=xxx,-externalldflags=xxx"` I believe
[17:06:12] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[17:06:16] <ikke> What I tried is this:
[17:06:30] <A_Dragon> or do you mean explicitly with additional flags for -X?
[17:06:40] <A_Dragon> OH I misread
[17:06:44] <A_Dragon> one sec
[17:06:49] *** Joins: fef (~thedawn@user/thedawn)
[17:06:53] <ikke> I tried to separate it with commas
[17:07:03] <ikke> go build accepts it, but the options seem to be ignored
[17:07:03] <A_Dragon> yeah but you're one level high
[17:07:40] <A_Dragon> you want uh, ='-ldflags="-linkmode external -extldflags=static -X=..."'
[17:07:53] <A_Dragon> https://golang.org/src/cmd/go/internal/base/goflags.go related
[17:08:20] *** Joins: yoonkn (~user@175.197.208.79)
[17:08:31] <A_Dragon> you should be able to check with go env IIRC
[17:08:31] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:09:16] <ikke> export GOFLAGS='-linkmode=external,-extldflags=\"-static\",-X=main.version=v3.6.0"'
[17:09:35] <ikke> export GOFLAGS='-ldflags="-linkmode=external,-extldflags=\"-static\",-X=main.version=v3.6.0"'
[17:09:35] *** Joins: burningserenity_ (~burningse@191.96.168.69)
[17:09:37] <ikke> sorry, that
[17:09:53] <A_Dragon> try remove the commas in the contents of ldflags
[17:10:13] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Ping timeout: 268 seconds)
[17:10:30] <A_Dragon> if not then I dont know
[17:10:39] <A_Dragon> commas to spaces, mind
[17:10:47] <ikke> ye
[17:10:57] <ikke> Then go complains that -extldflags is unknown
[17:11:23] <A_Dragon> try use "" instead for the content
[17:11:32] <A_Dragon> also is extldflags correct?
[17:11:51] <ikke> it works if I just provide it to go build
[17:12:10] <A_Dragon> yes but it may or may not be in the right place in the env
[17:12:16] <A_Dragon> whats the line you used for go build?
[17:12:29] <A_Dragon> mmm link should use that
[17:12:31] <A_Dragon> Im not sure
[17:12:52] <ikke> go build -v -ldflags="-linkmode external -extldflags '-static' -X=main.version=v3.6.0" github.com/go-task/task/v3/cmd/task
[17:12:54] <ikke> This
[17:13:19] <ikke> That works as intended
[17:13:27] <ikke> statically compiled, and the version is known
[17:15:50] <A_Dragon> yeah it doesnt do stuff with quotes. methinks you cant do what you want
[17:15:57] *** Quits: burningserenity_ (~burningse@191.96.168.69) (Ping timeout: 245 seconds)
[17:16:32] <ikke> Hmm, ok
[17:17:13] *** Joins: burningserenity (~burningse@146.70.38.18)
[17:17:31] *** Joins: koolazer (~koo@user/koolazer)
[17:18:30] <ikke> And I guess the issue is that you cannot specify -ldflags multiple times
[17:18:40] <A_Dragon> yeah
[17:18:46] <A_Dragon> are you doing this in CI?
[17:18:55] <ikke> A build process, yes
[17:19:06] <ikke> I can work around it, but would've been nice if it worked
[17:19:14] <A_Dragon> possible to pass just -X and set the others as default?
[17:19:25] <A_Dragon> but yeah it would be nice
[17:23:27] *** Quits: burningserenity (~burningse@146.70.38.18) (Ping timeout: 245 seconds)
[17:23:29] *** Joins: burningserenity_ (~burningse@77.81.142.200)
[17:25:15] *** Joins: oxum (~oxum@136.185.133.224)
[17:27:38] <mkopriva> I'm trying to ssh into a remote host using the crypto/ssh package and I'm able to do it but the arrow keys are screwed up. When I ssh into the same host using os/exec the arrow keys work as expected. Anyone knows how to get the arrow keys working when connecting with crypto/ssh? For more details please see: https://play.golang.org/p/JCUaX2dcpT- (client machine os is macOS, remote server os is ubuntu)
[17:27:58] *** Quits: burningserenity_ (~burningse@77.81.142.200) (Ping timeout: 252 seconds)
[17:28:43] <A_Dragon> sounds like maybe a terminal issue, what the arrow keys do etc may not be being sent correctly. But Im not sure :D wait for someone smarter than I
[17:29:27] *** Joins: burningserenity (~burningse@156.146.50.154)
[17:30:57] *** Joins: andlabs (~andlabs@71.190.119.164)
[17:31:49] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[17:34:08] *** Joins: burningserenity_ (~burningse@191.101.31.45)
[17:34:16] *** Quits: burningserenity (~burningse@156.146.50.154) (Ping timeout: 268 seconds)
[17:35:08] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[17:37:26] *** Joins: burningserenity (~burningse@146.70.38.134)
[17:38:58] *** Quits: burningserenity_ (~burningse@191.101.31.45) (Ping timeout: 272 seconds)
[17:39:09] *** Joins: nahamu (~nahamu@tailscale/contributor/nahamu)
[17:39:52] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Ping timeout: 246 seconds)
[17:48:54] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[17:50:32] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 245 seconds)
[17:51:12] *** Quits: burningserenity (~burningse@146.70.38.134) (Ping timeout: 265 seconds)
[17:51:42] *** Joins: burningserenity (~burningse@181.214.206.245)
[17:54:34] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 246 seconds)
[17:56:06] *** Quits: burningserenity (~burningse@181.214.206.245) (Ping timeout: 255 seconds)
[17:56:17] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1005)
[18:01:44] *** Joins: jackneill (~jackneill@20014C4E1823FF0035073840A5D0568D.dsl.pool.telekom.hu)
[18:03:08] *** Joins: Eddward_ (~Eddward@207.138.204.132)
[18:03:27] *** Joins: lauraaah (uid156848@id-156848.charlton.irccloud.com)
[18:06:44] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[18:07:21] <fossdd> Is there a good IRC server library for Go?
[18:08:22] <fossdd> So for creating a server and not connecting to one.
[18:09:00] <fizzie> Heh, I was just looking for one yesterday, to migrate some (personal) notifications from a daily email to showing up in an IRC client. (Results: still inconclusive.)
[18:10:03] <fossdd> :/
[18:10:16] <fossdd> So I have to do it from scratch?
[18:10:23] <fizzie> gopkg.in/sorcix/irc.v2 was the most promising one I came across in the "very low-level, just does the IRC protocol, up to you for all the rest" domain, which probably would be just sufficient for what I need it for.
[18:10:28] *** Quits: arinov (~arinov@213.194.126.155) (Read error: Connection reset by peer)
[18:10:30] <sztanpet> https://github.com/ergochat/ergo but its not a library
[18:10:47] *** Joins: arinov (~arinov@213.194.126.155)
[18:13:48] *** Quits: absc (~absc@81.31.144.178) (Quit: Leaving.)
[18:14:08] *** Joins: absc (~absc@81.31.144.178)
[18:14:45] <fossdd> fizzie: is it a server or a client?
[18:18:58] <eric_hill> mkopriva: same user on both?  Maybe the shell is different between the two different logins?
[18:19:09] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[18:20:02] <mkopriva> eric_hill: same user on both, and i did do echo $SHELL and in both instances the output was /bin/bash
[18:21:47] *** Quits: ikke (~kevin@alpine/developer/ikke) (Ping timeout: 245 seconds)
[18:22:32] *** Quits: sizeof_void34 (~Thunderbi@109-252-76-37.nat.spd-mgts.ru) (Remote host closed the connection)
[18:22:36] <eric_hill> mkopriva: can you add a bit of debug tracing to see if the escape codes are being echoed at the client or on the server?
[18:22:50] *** Joins: sizeof_void34 (~Thunderbi@109.252.76.37)
[18:23:03] <eric_hill> (i.e. are the arrows making it to the server, but not getting processed, or are they not even making it across the wire)
[18:26:15] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91) (Ping timeout: 255 seconds)
[18:29:27] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[18:29:59] *** Joins: martin_ (~martin@188.113.85.137)
[18:32:21] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[18:33:46] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Ping timeout: 246 seconds)
[18:36:45] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Remote host closed the connection)
[18:37:31] <fizzie> fossdd: It's neither, it's just the protocol decoding part. You could plonk it on any io.ReadWriteCloser, such as a net.Conn. But it won't do any actual conventional IRC server things, like routing messages between clients.
[18:38:35] *** Quits: brooks6 (~bswinnert@containers.neptunenetworks.org) (Quit: Ping timeout (120 seconds))
[18:39:56] <mkopriva> eric_hill: I'm not actually sure how I could trace that. And do you mean something more definitive than the fact that when I press an arrow key, instead of the cursor being moved, the shell prints out the ASCII escape sequence (^[[A)? You think that that might not be proof enough that the data is being sent?
[18:40:48] <eric_hill> mkopriva: yea, you're not really sure if it's the local terminal producing that sequence or the remote terminal echoing it
[18:41:07] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:41:22] *** Joins: mickey (~user@user/mickey)
[18:41:51] <eric_hill> Instead of using those io.Copy statements, do a bit of logging to a file.
[18:44:36] *** Joins: edrocks (~Ed@user/edrocks)
[18:45:44] <fossdd> fizzie: mh. that's bad. why does such a library not exist? is it difficult to do that, or what else?
[18:46:38] <fossdd> a library that does directly the whole server stuff and i only have to handle it for my needs inside the go application
[18:47:32] <sztanpet> if you think there is a big demand for it, you are wrong
[18:48:12] <fossdd> oh.
[18:49:16] <A_Dragon> fizzie: https://github.com/ergochat/ergo
[18:49:29] <fossdd> Okay, so for my project I have to connect to a server and "simply" connect using many nicks? that i can make a bridge
[18:49:40] <fossdd> A_Dragon: yes, but it's not a library what i'm looking for
[18:49:44] <A_Dragon> you can do that as a bridge
[18:49:57] <A_Dragon> what are you looking for, a lib that speaks S2S protocol?
[18:50:13] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 246 seconds)
[18:51:07] <fossdd> i don't know what S2S is, I wan't to have a own IRC deamon where I can write as multiple users to one user. And make a group with the "emulated" users and the one real.
[18:52:09] <A_Dragon> server is overkill with that, I think
[18:52:13] <Sam> "server to server"
[18:52:18] <siXy> are you writing an irc spambot?
[18:52:24] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[18:52:29] <siXy> because that's sure what it sounds like
[18:52:48] <A_Dragon> if it needs an ircd it wont be a very good one >.>
[18:52:54] <fossdd> no a brdige for a messenger
[18:53:03] <A_Dragon> then use multiple bots
[18:53:11] <fossdd> that's the only option?
[18:53:22] <A_Dragon> no you can build an IRCd too, but its overkill.
[18:53:42] <A_Dragon> you would either a, have to have a full IRCd implemented, with client support, or an IRCd that can link to others as a pesudoserver
[18:53:42] <fossdd> and if I have many many clients on the messenger, i have to connect many many times to it?
[18:53:48] <A_Dragon> yes
[18:54:00] <siXy> fossdd: If you're trying to build a bridge between irc and some other protocol you don't want an irc server.
[18:54:09] <fossdd> mh okay
[18:54:24] <A_Dragon> or use https://www.bitlbee.org/main.php/news.r.html
[18:55:01] <siXy> fossdd: You don't want any of what A_Dragon is talking about, you just want gopkg.in/sorcix/irc.v2 and something that speaks the protocol of the other messaging app
[18:55:10] <siXy> But it'll be a fair amount of work.
[18:55:23] <A_Dragon> ^
[18:55:25] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[18:55:34] <fossdd> okay thank you
[18:56:58] *** Joins: wadammar (~wadammar@pool-100-12-209-172.nycmny.fios.verizon.net)
[18:57:13] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Client Quit)
[18:57:29] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[18:58:08] <eric_hill> mkopriva: other thing that might be happening is your remote side isn't executing your bash profile for whatever reasons.  I think those arrow key bindings are buried in there somewhere.
[18:58:30] <fossdd> and how to i multiple-user-chats? I have to make a random ID as room name and invite the user?
[18:59:53] *** Quits: wadammar (~wadammar@pool-100-12-209-172.nycmny.fios.verizon.net) (Client Quit)
[19:02:23] <siXy> fossdd: There's lots of ways you can do it. The simplest way is to connect to libera as mybridge, and pass messages like mybridge: <originaluser>: hello
[19:02:38] <siXy> Some reading of rfc1459 is probably going to be needed.
[19:03:31] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 246 seconds)
[19:03:57] *** Joins: chasmo77 (~chas77@71.63.241.168)
[19:05:16] <fossdd> hmm, alright
[19:06:19] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Ping timeout: 246 seconds)
[19:08:34] *** Joins: brooks6 (~bswinnert@containers.neptunenetworks.org)
[19:09:01] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[19:11:17] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:13:00] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:13:55] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:15:24] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 268 seconds)
[19:20:39] *** Joins: independent56 (~independe@95.144.68.40)
[19:22:23] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[19:23:50] *** Quits: independent56 (~independe@95.144.68.40) (Remote host closed the connection)
[19:24:08] *** Joins: independent56 (~independe@95.144.68.40)
[19:26:15] *** Joins: koolazer (~koo@user/koolazer)
[19:27:56] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[19:29:23] *** Joins: hatz_ (~user@2a05:f480:1400:f44:5400:3ff:fe6d:f349)
[19:31:14] <fizzie> fossdd: FWIW if you *are* sure you want to run an IRC server, I'm sure some of them are extensible enough to allow your bridge to live in a more symbiotic relationship with one; e.g. the aforementioned ergo implements the (proposed) IRCv3 RELAYMSG specification, which allows a single connection to spoof nicknames on channel for a more pleasant relay experience; and probably more tightly coupled
[19:31:16] <fizzie> integrations are possible too. But I feel like most bridges tend to be to/from *existing* IRC networks, and you generally couldn't link a server to be part of one of those, so maybe that's why there's less demand for that sort of stuff.
[19:32:38] *** Quits: oxum (~oxum@136.185.133.224) (Ping timeout: 252 seconds)
[19:34:19] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:34:49] *** Joins: andlabs (~andlabs@71.190.119.164)
[19:41:23] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Quit: Client closed)
[19:41:37] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[19:50:46] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Ping timeout: 246 seconds)
[19:52:55] *** Quits: yoonkn (~user@175.197.208.79) (Remote host closed the connection)
[19:54:39] *** Joins: emcconville (~emcconvil@c-98-222-200-8.hsd1.in.comcast.net)
[19:55:46] *** Joins: CoolerX (~CoolerX@user/coolerx)
[19:57:06] *** Quits: arinov (~arinov@213.194.126.155) (Quit: Konversation terminated!)
[19:57:27] *** Joins: arinov (~arinov@213.194.126.155)
[19:57:38] *** Joins: glennzw (~glennzw@cpc93822-hari18-2-0-cust879.20-2.cable.virginm.net)
[19:58:51] *** Quits: danieln (~danieln@2a03:4000:3b:565:98ae:d8ff:febd:d69a) (Quit: WeeChat 3.0)
[19:59:13] <glennzw> Hello! I'm trying to remove Word's proofing XML from a .docx file. I'm inserting {{.Variables}} like {{.This}} into the Word doc, and when saving the document it's adding spelling and grammar tags, so we end up with things like this: {</w:t></w:r><w:proofErr w:type="gramStart"/><w:r><w:t>{.FirstName</w:t></w:r><w:proofErr
[19:59:13] <glennzw> w:type="gramEnd"/><w:r><w:t>}}
[19:59:56] <glennzw> I've managed to write some regex, but it seems to be only replacing the last instance if there are multiple matches in a document. My code is here: https://play.golang.org/p/l2GDDo-EU1u
[20:00:02] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[20:00:08] <glennzw> I *think* it's something to do with greedy matching, but I'm not sure
[20:00:29] *** Joins: kulak (~kulak@user/kulak)
[20:00:56] *** Joins: danieln (~danieln@2a03:4000:3b:565:98ae:d8ff:febd:d69a)
[20:02:50] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:03:13] *** Quits: saschagrunert (~saschagru@46.128.124.113) (Remote host closed the connection)
[20:03:35] <glennzw> This is my regex:
[20:03:37] <glennzw> rx, _ := regexp.Compile(`{.*{.*\.([a-zA-Z]+).*}.*}`)
[20:03:54] <glennzw> and I match with:
[20:03:55] <glennzw> s := rx.FindAllStringSubmatch(contents, -1)
[20:04:25] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 258 seconds)
[20:06:02] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:10:20] *** Joins: ikke (~kevin@alpine/developer/ikke)
[20:12:17] <A_Dragon> I'd suggest using an XML parser instead
[20:12:40] <A_Dragon> also; unrelated; if your re must always compile use MustCompile rather than ignoring the error from Compile
[20:13:43] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[20:14:05] *** Joins: CoolerX (~CoolerX@user/coolerx)
[20:16:29] *** Joins: doug_ (~doug_@cpe-172-250-106-85.socal.res.rr.com)
[20:18:55] *** Quits: brooks6 (~bswinnert@containers.neptunenetworks.org) (Ping timeout: 268 seconds)
[20:20:03] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[20:24:43] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Ping timeout: 246 seconds)
[20:27:38] *** Quits: ikke (~kevin@alpine/developer/ikke) (Ping timeout: 252 seconds)
[20:29:39] <siXy> glennzw: Don't try to parse XML with a regex. Ever. Under any circumstances.
[20:31:20] *** Quits: independent56 (~independe@95.144.68.40) (Remote host closed the connection)
[20:31:40] *** Joins: independent56 (~independe@95.144.68.40)
[20:32:46] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[20:33:27] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:34:33] *** Joins: brooks6 (~bswinnert@containers.neptunenetworks.org)
[20:37:01] <nevivurn> glennzw: if you're dead set on solving this with regex despite above advice, you could replace instances of `.*` with `[^{]*` and `[^}]*` as appropriate. Also, regexp has Replace* functions that you probably should use instead of your manual strings.Replace() calls.
[20:40:16] *** Joins: arcatech (~arcatech@user/arcatech)
[20:40:24] <fossdd> fizzie: ok thanks. I have to look into it.
[20:41:17] *** Quits: src (~src@user/src) (Quit: leaving)
[20:41:19] *** Joins: hposca (~hposca@node-1w7jr9phoke2sektanidvb94u.ipv6.telus.net)
[20:41:19] <siXy> There's a wonderful SO answer on this topic
[20:42:50] <nevivurn> siXy: you mean this one? https://stackoverflow.com/a/1732454 or were you referring to something else
[20:45:14] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[20:45:41] <A_Dragon> lol
[20:45:44] <A_Dragon> I wasnt gonna find it
[20:50:42] *** Quits: Nex8192 (~Nex8192@user/nex8192) (Ping timeout: 240 seconds)
[20:52:00] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[20:54:25] *** Joins: andlabs (~andlabs@71.190.119.164)
[20:55:58] <lungaro> Does anyone know the status of SO_REUSEPORT ?
[20:57:26] <siXy> nevivurn: yep! although sadly the formatting seems a bit broken now
[20:58:04] *** Quits: dr0n (~nabromov@185.219.140.223) (Ping timeout: 252 seconds)
[20:58:28] *** Joins: ikke (~kevin@alpine/developer/ikke)
[21:00:54] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Quit: Client closed)
[21:01:10] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[21:01:20] <siXy> lungaro: /x/sys/unix has it
[21:03:27] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[21:03:50] *** Joins: CoolerX (~CoolerX@user/coolerx)
[21:03:53] <nevivurn> To be fair, I would totally be OK with doing hacky regex replaces, even with XML, depending on eg. how important the thing is, the kinds of documents I was going to encounter, etc. just to avoid dealing with an XML parser.
[21:04:15] *** Joins: hexfive (~eric@50.35.83.177)
[21:05:58] *** Joins: hayaliali (~alip@exherbo/developer/alip)
[21:06:34] <siXy> nevivurn: I would never want to risk summoning tony the pony.
[21:07:20] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 272 seconds)
[21:08:17] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[21:08:49] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Ping timeout: 246 seconds)
[21:13:16] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[21:15:19] *** Quits: absc (~absc@81.31.144.178) (Quit: Leaving.)
[21:16:24] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 252 seconds)
[21:17:46] *** hayaliali is now known as alip
[21:18:35] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[21:18:39] *** Joins: edrocks (~Ed@user/edrocks)
[21:28:28] <jemaclus> You have a problem. You think, "I know, I'll use regex." Now you have two problems.
[21:29:21] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Remote host closed the connection)
[21:29:36] *** Quits: ikke (~kevin@alpine/developer/ikke) (Ping timeout: 252 seconds)
[21:30:37] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[21:32:33] *** Parts: fossdd (~fossdd@sourcehut/user/fossdd) (Leaving)
[21:34:08] *** Quits: yelnah (~felix@2001:44b8:3084:c0:6f0:21ff:fe3c:d4d7) (Read error: Connection reset by peer)
[21:34:11] <seebs> i'm sorry but you said something that matches /regex.*XML/ and we are going to have to have you put down. it's for the best, really, we just don't want you to suffer.
[21:34:12] *** Joins: ofh (~felix@2001:44b8:3084:c0:6f0:21ff:fe3c:d4d7)
[21:34:41] <seebs> lungaro: I don't know what you mean by "the status of SO_REUSEPORT". it's frequently unsafe and usually a sign of something else being wrong.
[21:35:42] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[21:36:14] <lungaro> it's a way to do hitless upgrades =P
[21:36:23] *** Joins: ikke (~kevin@alpine/developer/ikke)
[21:36:28] <lungaro> probably not the best way but i've been watchingg it for years
[21:37:59] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[21:39:43] *** Joins: omegatron (~some@p5484990d.dip0.t-ipconnect.de)
[21:40:41] *** Parts: currybullen (~curry@h-81-170-128-138.A258.priv.bahnhof.se) (WeeChat 3.2)
[21:41:36] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:42:15] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[21:42:40] *** Joins: kulak (~kulak@user/kulak)
[21:48:02] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 245 seconds)
[21:49:04] *** Quits: ikke (~kevin@alpine/developer/ikke) (Ping timeout: 258 seconds)
[21:49:43] *** Joins: koolazer (~koo@user/koolazer)
[21:52:02] *** Joins: Ohlov311534026 (~Ohlov3@dyndsl-085-016-152-136.ewe-ip-backbone.de)
[21:53:37] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[22:00:30] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d)
[22:05:51] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 255 seconds)
[22:06:18] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d) (Ping timeout: 255 seconds)
[22:09:51] *** Quits: fbandov (~fbandov@217.110.80.4) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:12:31] *** Joins: arcatech (~arcatech@user/arcatech)
[22:12:48] *** pez_ is now known as pez
[22:15:06] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Ping timeout: 272 seconds)
[22:15:19] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Ping timeout: 246 seconds)
[22:19:06] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[22:19:24] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1)
[22:20:34] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[22:21:44] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Ãœberall.)
[22:22:00] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[22:24:04] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 246 seconds)
[22:29:19] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 246 seconds)
[22:36:45] *** Joins: ikke (~kevin@alpine/developer/ikke)
[22:39:42] *** Quits: keiser009107585 (~keiser@83.25.211.170.ipv4.supernova.orange.pl) (Ping timeout: 245 seconds)
[22:48:36] *** Joins: veegee (~veegee@154.3.44.8)
[22:53:23] *** Joins: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[22:53:48] <quippy> hi folks, I was wondering if anyone had ever seen mockgen generate a mock for an interface that the compiler thinks doesn't satisfy the interface?
[22:54:00] *** Joins: veegee_ (~veegee@154.21.22.103)
[22:55:27] <quippy>  it says "missing method MyMethod (MyMethod has pointer receiver)"
[22:55:39] <quippy> which, like, yeah? Most of my methods have a pointer receiver, what's the problem?
[22:56:01] <quippy> and the generated code LOOKS fine to me? the function signature matches the interface definition
[22:56:17] *** Joins: veegee__ (~veegee@37.19.210.163)
[22:56:53] *** Quits: g4wjs (~quassel@mail.classdesign.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:57:18] *** Quits: veegee (~veegee@154.3.44.8) (Ping timeout: 258 seconds)
[22:58:38] *** Quits: troseman (~troseman@c-75-70-98-121.hsd1.co.comcast.net) (Ping timeout: 268 seconds)
[22:58:52] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 245 seconds)
[22:59:18] <Tv_> quippy: sounds like you're trying to use a T where a *T is needed
[22:59:36] *** Quits: veegee_ (~veegee@154.21.22.103) (Ping timeout: 258 seconds)
[22:59:54] <quippy> I have *T in both places, the generated mock & the original
[23:00:07] <quippy> that's what's odd
[23:00:16] <quippy> I have a sneaking suspicion that the error message I'm getting is misleading
[23:00:28] <quippy> but I'm really scratching my head about what the eff it could mean
[23:00:38] <quippy> OH
[23:00:57] <quippy> OH OH OH in the variable definition, I bet I'm creating a concrete object instead of a pointer, rather than in the METHOD definition
[23:01:03] *** Joins: g4wjs (~quassel@mail.classdesign.com)
[23:01:07] *** veegee__ is now known as veegee
[23:01:21] <quippy> that was totally it, thank you Tv_
[23:01:49] <quippy> I was hyperfocusing on the method definitions and didn't think about the variable containing the instance of the type being a non-pointer
[23:02:15] <quippy> man I was really pulling my hair out over that, thanks again
[23:02:51] <quippy> I never really thought about how that means that *T and T are really entirely different types and might have different method sets. I wonder what that could be useful for
[23:03:32] *** Joins: arinov (~arinov@212.156.215.30)
[23:03:47] <Tv_> quippy: well more if you pass in a T, that's a copy of the value, and calling a method on *T with that, trying to mutate it, would mutate only the copy
[23:03:57] <Tv_> hence, not allowed
[23:04:39] <quippy> right, but you can define methods with a receiver type T instead of *T
[23:04:47] *** Joins: keiser009107585 (~keiser@83.25.211.170.ipv4.supernova.orange.pl)
[23:05:00] <quippy> and I guess the revelation that I just had is that in that case, T's method set could be entirely different than *T's
[23:05:20] *** Quits: independent56 (~independe@95.144.68.40) (Remote host closed the connection)
[23:05:38] *** Joins: independent56 (~independe@95.144.68.40)
[23:05:44] <quippy> I'm not actually sure WHY you would define a method set with a receiver type T instead of *T but I have a coworker who does that sometimes and I should pester him about it (unless y'all happen to know why that would sometimes be preferred)
[23:06:25] <quippy> I am also going to set this channel to autojoin because Go is my main language these days
[23:07:27] <Tv_> consider e.g. type HexByte byte; func (h HexByte) String() string { ... }, it has no use for a pointer
[23:08:01] *** Quits: acohn (~acohn@user/alexcohn) (Changing host)
[23:08:01] *** Joins: acohn (~acohn@wikipedia/alex-cohn)
[23:08:24] *** Quits: danmurf (uid480399@user/danmurf) (Quit: Connection closed for inactivity)
[23:09:06] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[23:10:46] *** Quits: glennzw (~glennzw@cpc93822-hari18-2-0-cust879.20-2.cable.virginm.net) (Quit: Client closed)
[23:11:54] *** Quits: sizeof_void34 (~Thunderbi@109.252.76.37) (Quit: sizeof_void34)
[23:15:54] *** Quits: independent56 (~independe@95.144.68.40) (Ping timeout: 272 seconds)
[23:17:47] <fizzie> quippy: It can't be *entirely* different, because the method set of *T consists of all methods declared with a receiver of T or *T.
[23:18:06] <quippy> ohh interesting
[23:18:25] <quippy> that's subtle and surprising in a way that Go usually isn't haha
[23:18:27] *** Joins: independent56 (~independe@95.144.68.40)
[23:19:17] <quippy> when you have a non-pointer receiver, and you call a method on some object, is it copied? it seems like even in the HexByte String() method above, having a pointer receiver would avoid a copy when calling the method, no? I have an intuition that that's wrong, but I can't say why
[23:19:18] <fizzie> Also partially the other way around: in an expression such as `x.Foo()` where the type of x is T, if x is an addressable value and Foo() is a valid method declared on *T, the expression is interpreted as `(&x).Foo()` (but the method won't be considered to be in the method set of T).
[23:19:45] <quippy> oh huh, that's also surprising to me
[23:20:27] <fizzie> In the HexByte example, "avoiding" a "copy" of a single byte by making a copy of a pointer isn't likely useful.
[23:21:09] <quippy> oh because HexByte is a byte, right, I missed that in the example durp
[23:21:21] <quippy> read too quickly
[23:23:31] <fizzie> Just for the record, the exact rules for those two things I mentioned are in https://golang.org/ref/spec#Method_sets and https://golang.org/ref/spec#Calls (specifically, the "x.m() is shorthand for (&x).m()" bit near the end).
[23:24:05] *** Joins: veegee_ (~veegee@154.21.28.246)
[23:24:32] <fizzie> And it's certainly true T and *T can have different (just not entirely different) method sets. And it's positively commonplace to have a case where only *T implements an interface and T doesn't, if some of those methods of the interface don't make sense without passing a pointer receiver.
[23:25:50] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 252 seconds)
[23:26:31] <quippy> yeah this is all really interesting, thank you for the additional background/reading fizzie, I appreciate it
[23:26:46] <quippy> it's amazing to me how long I can stumble along with a language without learning all of its finer details
[23:27:29] *** Quits: veegee (~veegee@37.19.210.163) (Ping timeout: 255 seconds)
[23:29:12] *** Quits: ikke (~kevin@alpine/developer/ikke) (Ping timeout: 272 seconds)
[23:32:54] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[23:36:45] *** Quits: veegee_ (~veegee@154.21.28.246) (Ping timeout: 255 seconds)
[23:37:03] *** Joins: dr0n (~nabromov@185.219.140.221)
[23:37:29] *** Joins: koolazer (~koo@user/koolazer)
[23:56:39] *** Joins: ikke (~kevin@alpine/developer/ikke)
