[00:52:50] <FromGitter> <robby:oconnor.ninja> @marekyggdrasil: the other thing: I learned ELisp by working within it
[01:12:56] <FromGitter> <mardab> Hello, I think I have encountered a bug during first-time install, but I'd like to consult with you before filing issue
[01:13:55] <FromGitter> <mardab> no matter if I use --insecure or not, emacs claims its missing bind-map, but with --debug-init:
[01:18:57] <FromGitter> <mardab> `Debugger entered--Lisp error: (file-missing "Cannot open load file" "No such file or directory" "bind-map")                                                                                                                                  ‚èé   require(bind-map)                                                                                                                                                              
[01:18:57] <FromGitter> ...                                                             ‚èé   spacemacs-bootstrap/init-bind-map()                                                                                                                                                                                                        ‚èé   funcall(spacemacs-b ... [https://gitter.im/syl20bnr/spacemacs?at=61708ec9cd4972068b5bade6]
[02:23:35] *** Quits: dokma (~user@dh207-48-197.xnet.hr) (Quit: ERC (IRC client for Emacs 27.1))
[02:24:12] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98) (Ping timeout: 258 seconds)
[03:12:16] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:e4a1:448d:2cb1:fbb6)
[04:48:50] *** Quits: baldlizard (~Thunderbi@p57985a15.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:29:18] <FromGitter> <marekyggdrasil> I just don't know how to run it :P rest I can figure out
[08:19:35] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:e4a1:448d:2cb1:fbb6) (Ping timeout: 264 seconds)
[08:32:22] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:e4a1:448d:2cb1:fbb6)
[08:43:33] <FromGitter> <robby:oconnor.ninja> https://develop.spacemacs.org/layers/+lang/emacs-lisp/README.html
[09:12:27] <FromGitter> <marekyggdrasil> thanks, yes it says to use `emacs-lisp-buffer` but I do not know how to start this buffer :P
[09:13:52] <FromGitter> <yyoncho> IMHO do this  ‚èé  ‚èé > dotspacemacs-scratch-mode 'emacs-lisp-mode ‚èé >   dotspacemacs-scratch-buffer-persistent t [https://gitter.im/syl20bnr/spacemacs?at=6170fe187db1e3753e521f5b]
[09:14:28] <FromGitter> <yyoncho> and then use scratch buffer, IMHO it is more convenient than actual repls
[09:16:32] <FromGitter> <marekyggdrasil> thank you, I know it might be funny for you guys, but here's why I'm confused, ‚èé  ‚èé when I learn to program I install the compiler / interpreter, create files, read docs and play with them ‚èé  ‚èé but here the program I try has to be run by the editor... and that's just weird and counter-intuitive for me, I don't know how to do that :P [https://gitter.im/syl20bnr/spacemacs?at=6170feb89d20982e4fd0fe4d]
[09:17:32] <FromGitter> <marekyggdrasil> I suppose I just create some file in a new buffer, save it, then probably there is some magic M-x command that would run it in current frame
[09:22:29] <FromGitter> <marekyggdrasil> ok I think I found a nice guide :) https://www.gnu.org/software/emacs/manual/html_node/efaq/Evaluating-Emacs-Lisp-code.html
[09:54:46] <FromGitter> <marekyggdrasil> it works and its awesome!
[09:55:11] <FromGitter> <marekyggdrasil> Sorry I missed your messages
[09:56:22] <FromGitter> <marekyggdrasil> Here's how I solved the problem: 1. created a new frame only for scratch, it serves as background for extra elements of the stream 2. I use `(set-frame-size (selected-frame) 125 48)` to set the size that fits the stream window 3. currently figuring out how to make it all my own custom `M-x` command :) nevertheless, thank you so much for your replies, you guys are so helpful
[10:22:20] *** Joins: fahrradToken (~fahrradTo@212.7.190.34)
[11:38:11] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:e4a1:448d:2cb1:fbb6) (Ping timeout: 264 seconds)
[11:55:44] *** Joins: baldlizard (~Thunderbi@p57985944.dip0.t-ipconnect.de)
[12:06:51] <FromGitter> <dalanicolai> > I just don't know how to run it :P rest I can figure out ‚èé  ‚èé Well, you only saw my messages after this, but that is why I recommended `SPC h j eintr`... I hope you've found it by now
[12:07:55] <FromGitter> <dalanicolai> https://www.gnu.org/software/emacs/manual/html_node/eintr/List-Processing.html
[12:08:01] *** Quits: teehemkay (sid14792@lymington.irccloud.com) (Ping timeout: 245 seconds)
[12:09:32] *** Joins: teehemkay (sid14792@id-14792.lymington.irccloud.com)
[12:10:40] <FromGitter> <dalanicolai> However, I agree with @yyoncho. My setup is the same... and I mostly use `, e f`/`, e b` to run the code...  see here (https://develop.spacemacs.org/layers/+lang/emacs-lisp/README.html#key-bindings)... `SPC m ` = `,` and goto definition you can use just `g d`
[12:31:20] <FromGitter> <differentMonster> my snippet use to work but now it wont show any folder or so, the setting is same way before
[12:31:44] <FromGitter> <differentMonster> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=61712c788c019f0d0b4918c4]
[12:33:23] <FromGitter> <differentMonster> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=61712cda8c019f0d0b4919b8]
[12:34:37] <FromGitter> <differentMonster> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=61712d259d20982e4fd16d79]
[12:35:28] <FromGitter> <differentMonster> i checked the folder all the file still inside and i was recompile and reload but when i go helm-yas noting show up, anyone face this problem before ?
[13:35:07] <FromGitter> <yyoncho> Just want to mention that I have mapped `, ,` to eval-defun. IMHO this should be the default
[13:52:58] <FromGitter> <dalanicolai> That sounds good, although I can also understand the default mapping of `, ,` to `lisp-state-toggle-lisp-state`. Probably that is also very handy when you learn how to use it. Currently I use `SPC k w` for wrapping with parentheses and `SPC k W` for unwrapping... I am not sure which I use more often `eval-defun` or `wrap`. And then I can imagine there are more useful things in `lisp-state`. On the other hand 
[13:52:58] <FromGitter> ... `, ,` for `eval-defun` sounds like a good default not only for `emacs-lisp` mode. I would also like a shortcut to wrap/unwrap with a `print` statement, which I should probably quickly create now :) Okay, I am getting a little 'elaborate'...
[16:15:35] *** Joins: makomo (~makomo@user/makomo)
[16:31:10] *** Quits: osfe (~lemaire@nanpc540.in2p3.fr) (Ping timeout: 260 seconds)
[16:57:25] *** Joins: osfe (~lemaire@nanpc540.in2p3.fr)
[17:38:50] *** Quits: osfe (~lemaire@nanpc540.in2p3.fr) (Ping timeout: 260 seconds)
[17:56:05] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 258 seconds)
[18:06:55] *** Quits: fahrradToken (~fahrradTo@212.7.190.34) (Ping timeout: 260 seconds)
[18:46:42] *** Joins: makomo (~makomo@user/makomo)
[20:33:35] <FromGitter> <yyoncho> both wrap/unwrap and unrelated to lisp state
[20:34:02] <FromGitter> <yyoncho> I mean, it is unrelated to the shortcut for the lisp state
