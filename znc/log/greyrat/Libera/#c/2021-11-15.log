[00:00:47] <fizzie> A `continue;` statement at that position doesn't do anything in particular, because the control flow would in any case next hit the } at the end of the loop body.
[00:01:30] <quartz> fizzie: OK
[00:01:58] <quartz> fizzie: By while(1), you want me to write a while loop that is always true?
[00:02:44] <fizzie> That's the most straight-forwardest way to write a loop that does stuff (like printing the prompt) *before* it attempts to read the port number.
[00:04:16] <cousteau> while (1) means "loop forever", yes
[00:04:39] <cousteau> you usually exit that loop with break or return or exit()
[00:04:43] <floatcomplex> while(HUGE_VAL)
[00:05:01] <fizzie> The instructions don't exactly specify what you should do at EOF, anyway. But I guess stopping the loop is a reasonable choice.
[00:05:47] *** Joins: Macuser (~Macuser@216.30.159.201)
[00:05:58] <quartz> CTRL + C should exit the program
[00:06:10] <fizzie> Yes, but that needs no code.
[00:06:41] <quartz> So when would this while(1) loop ever end?
[00:06:49] <quartz> I'm sorry I've never seen such a thing
[00:07:15] <fizzie> It would end when the user types Ctrl-C, which sends a SIGINT to the program, which by default terminates the program.
[00:07:50] <quartz> Oh, I thought I needed something != EOF
[00:07:54] <quartz> Or != NULL
[00:08:02] <fizzie> The instructions don't say what the program should do if the input stream ends. But I agree terminating the loop in that case as well would be reasonable.
[00:08:06] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[00:08:34] <quartz> fizzie: OK I'll try to implement this. One moment.
[00:10:28] <cousteau> Ctrl-D causes stdin to EOF (in Linux); Ctrl-C sends a signal to interrupt the program.  You can make your program capture this signal and not die immediately if the user presses Ctrl-C, but by default, it does die.
[00:11:48] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[00:13:08] <johnjay> ctrl-D is something that has served me well through the yeras
[00:13:32] <johnjay> anytime a recalcitrant program refuses to die and I can't easily open another terminal to force kill it
[00:13:34] <fizzie> Anyway, the instructions also say you're supposed to check for terminated subprocesses "on every iteration, before it displays a prompt". So I think https://0x0.st/-RuE.txt is roughly what they're expecting, + error handling.
[00:14:10] <fizzie> (+ the messages.)
[00:14:42] *** Quits: jurjen (~jurjen@89-200-14-25.mobile.kpn.net) (Quit: WeeChat 3.0)
[00:14:45] *** Joins: bindu (~bindu@user/bindu)
[00:14:54] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Read error: Connection reset by peer)
[00:14:59] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[00:15:01] *** Joins: bud (~bud@user/bud)
[00:15:46] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[00:16:08] *** Quits: chair1 (~bbs@187.109.18.204) (Quit: nvm)
[00:17:47] *** Joins: soapsudsxx (~soapsudsx@141.193.188.141)
[00:21:21] <quartz> fizzie: So I don't need while(fgets(port_num, sizeof(port_num), stdin) != NULL) ?
[00:21:22] *** Quits: cm007magnum (~Rheanna@61.171.69.141) (Remote host closed the connection)
[00:21:50] <quartz> Oh I just answered my own question I think
[00:22:06] <fizzie> The `if (fgets(...) == NULL) break;` replaces that, in a way that lets you print the prompt (and check for terminated processes) before blocking on the fgets.
[00:22:27] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[00:22:27] <quartz> fizzie: Right. :)
[00:22:29] <fizzie> You *can* have a `while (fgets(...) != NULL) ...` loop instead if you like, but then you'd need at least print an initial prompt first.
[00:22:53] <fizzie> (Or else make a helper function like `get_port` that prints a prompt and reads the port number.)
[00:23:36] *** Joins: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net)
[00:25:10] <quartz> Hmmm OK
[00:25:24] *** Quits: Guest80 (~Guest80@pd9ed7762.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[00:26:09] <fizzie> Oh, my proposed skeleton also forgot about that "Hitting ENTER on the prompt should simply display another prompt" bit.
[00:26:47] <fizzie> That'd be a matter of sticking a `if (*port_num == '\n') continue;` in there before the fork-and-exec.
[00:27:10] <fizzie> (Or something equivalent.)
[00:27:22] <quartz> Hmm OK
[00:28:04] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: ♫ I can't forget the day I shot that network down ♫)
[00:28:43] <quartz> fizzie: So this looks right? https://godbolt.org/z/PdP1vWcr6
[00:28:50] *** Joins: llh (~llh@user/llh)
[00:29:29] <quartz> I wanted it to read "mdb-server-terminated" when the user CTRL-C out of the program
[00:30:25] <fizzie> The way I read the instructions, you wouldn't have lines 46-53 at all.
[00:30:59] *** Quits: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 264 seconds)
[00:31:49] <fizzie> Because line 48 will wait for the just-started server instance to terminate, but the instructions make it sound like you should be able to just trype in three (different) port numbers consecutively to have three instances of "the script from (a)" running concurrently.
[00:32:25] *** Quits: humdrumcoffee (~humdrumco@88.97.110.231) (Quit: WeeChat 3.3)
[00:32:37] <fizzie> If you want to print out something *after* ^C, that would involve setting up a signal handler for SIGINT, instead of allowing the default disposition to terminate the program.
[00:32:47] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 264 seconds)
[00:34:15] <quartz> fizzie: I think we can run as many instances of the server as we want, not just three.
[00:34:29] <quartz> But yeah I understand what you're saying now. I'll delete those lines and test it now.
[00:35:29] *** Parts: bud (~bud@user/bud) ()
[00:41:24] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[00:42:31] *** Quits: magla (~gelignite@55d41163.access.ecotel.net) (Quit: Stay safe!)
[00:49:52] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[00:50:08] *** Joins: bindu (~bindu@user/bindu)
[00:52:59] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[00:54:42] *** Quits: system_error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[00:54:45] *** Quits: Narrat (~omnius@p200300df5f399f5d06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[00:56:21] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 245 seconds)
[00:56:47] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[00:57:40] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Read error: Connection reset by peer)
[00:58:01] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[01:01:02] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[01:02:58] *** Quits: aniruddha (uid340443@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:03:20] *** Quits: X-Scale (~ARM@83.223.243.66) (Ping timeout: 256 seconds)
[01:05:00] *** X-Scale` is now known as X-Scale
[01:05:26] *** Joins: jfsimon1981 (~jfsimon19@82.199.121.78.rev.sfr.net)
[01:07:43] *** Joins: System_Error (~SystemErr@user/systemerror)
[01:08:22] *** Joins: korg815 (~korg815@user/korg815)
[01:09:16] *** Joins: bingulo (~bingulo@2804:431:e7c9:ba73:62de:6334:e800:5547)
[01:10:00] *** Joins: neshpion_ (~neshpion@gateway/tor-sasl/neshpion)
[01:10:00] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Killed (NickServ (GHOST command used by neshpion_)))
[01:10:02] *** neshpion_ is now known as neshpion
[01:11:19] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[01:11:20] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[01:12:06] *** Joins: neshpion_ (~neshpion@gateway/tor-sasl/neshpion)
[01:12:06] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Killed (NickServ (GHOST command used by neshpion_)))
[01:12:08] *** neshpion_ is now known as neshpion
[01:13:55] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[01:14:24] *** Quits: random-nick (~random-ni@87.116.165.220) (Read error: Connection reset by peer)
[01:16:31] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[01:20:31] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:21:15] *** Joins: kexec (~kexec@user/kexec)
[01:23:55] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[01:25:44] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:26:39] <quartz> fizzie: Sorry to bug you again, but when I run this code: https://godbolt.org/z/bEeMn63aM   It prints port number: twice like here: https://bpa.st/PNIQ
[01:27:03] <quartz> I can't figure out why because I fork after I print "port number"
[01:28:09] *** Joins: bruda (~bruda@172.58.62.226)
[01:28:38] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[01:29:46] <fizzie> Does it only happen if you type in a 5-digit port number? 
[01:30:52] <quartz> fizzie: Yes
[01:30:54] <fizzie> If so, then it's because, when your input string is "12345\n", the first fgets call reads just the first five characters (it has to leave one for the '\0'), and the next time around the fgets call immediately gets the "\n" that's left over.
[01:31:20] <fizzie> Give port_num a few more bytes.
[01:31:39] <quartz> A valid port number 5 digits 
[01:31:54] <quartz> So I need to replace teh \n somehow.. right
[01:32:40] <fizzie> fgets leaves the '\n' in the buffer, so yes, you'd probably want to remove it before passing it as an argument as well. Not that a shell script might necessarily care.
[01:32:56] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:33:06] <fizzie> At any rate, the *buffer* needs to be at least 7 bytes long, to accept a string that contains the five digits plus the '\n'.
[01:33:33] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:34:35] <fizzie> If you want to deal with invalid input gracefully, you might want it large enough for any "reasonable" line. Or start checking for incomplete lines. Or use (POSIX) getline, which will always return complete lines.
[01:34:45] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[01:35:01] <quartz> The directions state that only valid input will be provided.
[01:35:02] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[01:35:08] <quartz> But those are all good suggestions :)
[01:35:32] <pragma-> "only valid input will be provided" is the sort of thinking that allowed the gets() command to exist.
[01:35:40] <pragma-> er, function
[01:37:27] <quartz> fizzie: Sorry, why is it 7 bytes long? 5 digits + \n and \0?
[01:37:35] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 264 seconds)
[01:38:27] <fizzie> Yes.
[01:39:04] *** Quits: MarcoFe (~marcofe@host-82-49-154-107.retail.telecomitalia.it) (Quit: Konversation terminated!)
[01:39:39] <clarity> my tail is 7 bytes long
[01:40:00] <pragma-> i bet i can eat it in 3 bytes
[01:42:11] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Ping timeout: 245 seconds)
[01:46:54] *** Joins: rgrinberg (~textual@190.113.102.153)
[01:47:54] *** kish` is now known as GlobalBanksta
[01:48:17] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:50:51] *** Joins: echoSMILE (uid504326@user/echosmile)
[01:51:32] *** Joins: Viewday118 (~Viewday@user/viewday)
[01:53:17] <quartz> port_num[strlen(port_num) - 1] = '\0';  So I would need something like that? When I compile and run, it never returns me to the prompt and the program output looks like this: https://bpa.st/FOWA
[01:53:46] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[01:53:46] *** Viewday118 is now known as Viewday11
[01:53:47] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:53:48] <quartz> Err... I implemented lines 29 and 30 https://godbolt.org/z/5M64qeeh8
[01:54:48] * pragma- facepalms.
[01:56:27] <quartz> Oh
[01:56:31] <quartz> Wow
[01:57:08] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[01:57:17] <quartz> The \n is always in the 5th array position
[01:58:43] <kexec> how to load unspecified number of integers (into array) from one line and end after newline? scanf in loop doesnt stop at new line...
[02:01:20] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[02:02:34] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[02:03:08] *** Joins: cm007magnum (~Rheanna@218.78.79.129)
[02:07:03] *** Quits: Richard_Cavell (uid165693@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:07:37] <quartz> This is so strange. I'm trying to debug my program with gdb and I'm constantly checking for the value of "port_num". It cuts the first digit off of the number for some reason. I get this output: https://bpa.st/JXCA  But when I check it with gdb, it gives me the correct value for "port_num".
[02:07:54] <quartz> And this is the code I have: https://godbolt.org/z/3cWWfPece
[02:08:05] <quartz> So I don't understand what is wrong. 
[02:08:11] <quartz> Maybe I need to take a break ahah
[02:10:43] <pragma-> do you really laugh on the inhale?
[02:10:59] <quartz> pragma-: No :)
[02:11:21] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[02:14:50] <twkm> sounds like a cr got in there.
[02:15:07] *** Joins: cassepipe (~cassepipe@176-155-131-22.abo.bbox.fr)
[02:16:14] <quartz> Well I'm not sure what to do this should work. 
[02:16:42] <Bou> The `port_num[5]='\0'` is wrong and unnecessary... but why do you lose the *first* char? weird
[02:16:42] <quartz> Variables should duplicate once I fork so port_num should retain it's value in the child process
[02:17:05] <quartz> Bou: So how else do I replace the \n?
[02:17:48] <twkm> if you strto* the value it ignores leading and trailing whitespace.
[02:18:03] <quartz> I don't have any whitespace
[02:18:13] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:18:57] <twkm> newline is whitespace.
[02:19:25] <quartz> Uhhh
[02:19:38] <Bou> are port numbers always 5 characters? can you rely on the user not trying lower numbers?
[02:19:56] <quartz> Bou: Port numbers are always 5 characters
[02:20:03] <quartz> Maybe it's something wrong in my shell script
[02:20:06] <twkm> /me shudders.
[02:21:19] <quartz> Shell script: https://bpa.st/VI6A
[02:21:57] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b1d7:e14b:5957:fa7f)
[02:21:58] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b1d7:e14b:5957:fa7f) (Changing host)
[02:21:58] *** Joins: skapata (~Skapata@user/skapata)
[02:22:27] <quartz> I tried read -r and just read
[02:22:46] <twkm> not topical, but do you think it somehow ensures the port number is 5 digits?
[02:23:30] <quartz> twkm: The shell script?
[02:24:10] <twkm> you mentioned it right after being asked about the number of digits.
[02:24:59] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:25:01] <quartz> I think the shell script just reads in whatever I pass it
[02:25:41] <twkm> anyway, inspect the characters you print.
[02:25:52] <quartz> I did with gdb
[02:26:39] <quartz> I think I'll take a break haha
[02:26:51] <quartz> BUt thank you for your help
[02:27:54] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[02:27:58] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[02:29:50] *** Joins: Enitin (~Enitin@82.102.22.84)
[02:30:45] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:33:26] *** Quits: pizdets (~pizdets@183.182.111.238) (Ping timeout: 256 seconds)
[02:33:50] *** Joins: pizdets_ (~pizdets@183.182.110.150)
[02:34:44] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:37:09] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:37:28] <Feuermagier> What does "setbuf(stdout, NULL);" do?
[02:38:06] <fizzie> Makes the stream `stdout` unbuffered.
[02:38:14] <Feuermagier> ah, thx
[02:39:14] <pragma-> The setbuf() function is exactly equivalent to the call
[02:39:14] <pragma->            setvbuf(stream, buf, buf ? _IOFBF : _IONBF, BUFSIZ);
[02:39:27] <pragma-> manpages are great, aren't they?
[02:39:54] <kexec> please how can i achieve that this ends after pressing enter? https://bpa.st/62LQ
[02:40:52] <Feuermagier> pragma-, manpages are... special
[02:41:02] <fizzie> Use something else than scanf. The "%d" format specifier discards whitespace, and newlines are whitespace, so the scanf call will never return until it sees some non-whitespace characters.
[02:41:06] <Feuermagier> (just like candide )
[02:41:11] * Feuermagier pets candide 
[02:41:22] * candide frowns at F​euermagier
[02:41:32] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:41:37] <fizzie> If you want a program with a line-oriented interface, it's best to just read entire lines and then parse them.
[02:41:43] *** Joins: HolyFishPaste92 (HolyFishPa@gateway/vpn/protonvpn/holyfishpaste90)
[02:42:27] <Feuermagier> even weirder line: if(0 >= (n=read())); - what's the value of an assignment?
[02:42:34] *** Joins: Chip1972 (~Chip1972@186.206.217.247)
[02:42:46] <fizzie> The same as the new value of the object that was assigned to.
[02:43:00] <fizzie> And it's not *that* weird, it's almost idiomatic.
[02:43:00] <Feuermagier> interesting
[02:43:15] <fizzie> Usually in the shape of a `while ((c = getchar()) != EOF) ...` loop.
[02:43:42] <Bou> 0 >= ... instead of ... < 0 though?
[02:44:10] <Bou> eh <=
[02:44:39] <fizzie> I think *that* is probably just extending the `0 == x` convention further, for consistency.
[02:44:49] *** Joins: Richard_Cavell (uid165693@ilkley.irccloud.com)
[02:45:19] <pragma-> That's probably better written as `while (c = getchar(), c != EOF)`
[02:45:45] *** Quits: HolyFishPaste91 (HolyFishPa@gateway/vpn/protonvpn/holyfishpaste90) (Ping timeout: 268 seconds)
[02:45:50] <fizzie> I lean towards that too, but it never ever actually gets written like that, for some reason.
[02:46:29] <fizzie> Same as how it's always `typedef int (*callback_func)(int);` rather than `typedef int callback_func(int);`.
[02:47:09] <fizzie> Re the value of an assignment, a bit more detail from C11 6.5.16p3: "An assignment expression has the value of the left operand after the assignment,111) but is not an lvalue. -- 111) The implementation is permitted to read the object to determine the value but is not required to, even when the object has volatile-qualified type."
[02:47:20] *** Joins: rgrinberg (~textual@190.113.102.153)
[02:47:29] *** Quits: Pjerky (~Pjerky@81-234-143-135-no58.tbcn.telia.com) (Ping timeout: 246 seconds)
[02:47:42] <kexec> fizzie: i can read a line with gets, but then how to read it "number by number"?
[02:48:02] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[02:48:26] *** Joins: Pjerky (~Pjerky@81-234-143-135-no58.tbcn.telia.com)
[02:49:44] <fizzie> ,cc char *numbers = "1 2 3 4 5"; long n; for (char *at = numbers, *next; n = strtol(at, &next, 10), next != at; at = next) printf("[%ld] ", n);
[02:49:46] <candide> fizzie: [1] [2] [3] [4] [5]
[02:51:37] *** Quits: cm007magnum (~Rheanna@218.78.79.129) (Remote host closed the connection)
[02:52:38] <fizzie> ,cc char *numbers = "1 2 3 4 5"; int n, len; while (sscanf(numbers, "%d%n", &n, &len) == 1) { printf("[%d] ", n); numbers += len; } // or this
[02:52:38] <kexec> interesting, thank you
[02:52:40] <candide> fizzie: [1] [2] [3] [4] [5]
[02:54:18] *** Joins: cm007magnum (~Rheanna@218.78.53.13)
[02:56:30] *** Joins: quartz (~quartz@user/quartz)
[02:58:26] *** Quits: bingulo (~bingulo@2804:431:e7c9:ba73:62de:6334:e800:5547) (Ping timeout: 245 seconds)
[02:58:36] <fizzie> Or possibly a strtok/strchr/strpbrk/strcspn-driven loop for an even more general "process a list of space-separated words" thing, you don't necessarily *need* to combine the number conversion and iterating over the string.
[02:58:46] *** Joins: bingulo (~bingulo@189.97.74.110)
[02:59:28] *** Joins: ferdna (~ferdna@user/ferdna)
[03:03:04] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[03:04:30] <nomagno> string.h is definitely on the more useful side of headers
[03:05:11] *** Joins: Satin (uid193953@ilkley.irccloud.com)
[03:05:33] <tk> is it?
[03:05:57] *** Joins: Guest25 (~Guest25@2601:404:d300:5a0:8019:c9dd:453e:462e)
[03:06:43] <Satin> hello, I'm a relative beginner looking to adapt a simple program in C that uses JSON-C library to import entries for a book-reading-tracker. I'm trying to learn how basic GUI programming works and am messing with GTK. 
[03:07:10] <Satin> Would anyone here know the next step towards intergrating those two together? somehow import the json entries into GOobjects or something?
[03:07:53] <Satin> How it currently looks https://pastebin.com/raw/tjcYaUQ4
[03:08:00] *** Quits: alch (~alch@151.36.34.214) (Ping timeout: 256 seconds)
[03:08:09] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:09:27] *** Joins: alch (~alch@151.36.27.68)
[03:10:41] *** Quits: rsjw (~quassel@user/rsjw) (Read error: Connection reset by peer)
[03:15:08] *** Joins: Senicar2 (~Senicar@gateway/tor-sasl/senicar)
[03:15:25] *** Quits: fsg (^^@2600:3c00::f03c:92ff:fec6:da18) (Quit: :quit)
[03:15:32] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[03:15:32] *** Senicar2 is now known as Senicar
[03:15:34] *** Joins: fsg (^^@2600:3c00::f03c:92ff:fec6:da18)
[03:17:18] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[03:18:50] <tk> You might be better off finding a GTK specific channel
[03:21:17] *** Joins: loganlee (~Thunderbi@user/loganlee)
[03:25:08] <kexec> fizzie: i tried to rewrite your first for loop. but dont understand why it doesnt work and prints only the first number. please, could you look at it? https://bpa.st/3L2A
[03:25:42] <johnjay> C feels like a wild west sort of
[03:25:51] *** Quits: loganlee (~Thunderbi@user/loganlee) (Client Quit)
[03:26:00] <johnjay> like new platforms there's a library for stuff. but on C idk how you figure that out
[03:26:14] <johnjay> i guess go on stackoverflow and ask how do I parse json in c
[03:27:10] *** Joins: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown)
[03:27:39] <Satin> Well google searching reveals some libraries, I just was wondering if there was a straightforward thought process, since currently I print out to the screen via printf, instead I want to redirect it to a GTK app. But thank you, I'll try to find a GTK channel
[03:28:59] *** Quits: cassepipe (~cassepipe@176-155-131-22.abo.bbox.fr) (Remote host closed the connection)
[03:29:00] *** Quits: nun (~nun@178.115.236.156.static.drei.at) (Read error: Connection reset by peer)
[03:30:12] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:23] <Twix> Satin, usually there are GUI designer applications. Glade for GTK. It usually gives you some kind of template to fill in.
[03:30:37] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:30:42] *** Quits: kexec (~kexec@user/kexec) (Ping timeout: 256 seconds)
[03:31:17] <Satin> Oh I've heard of that, though I assumed that only handled the UI lookie stuff and not the logic side still of intergrating parsed json entries
[03:31:25] <Satin> I'll give that a look too though ty
[03:33:11] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[03:33:17] *** Joins: Atque (~Atque@user/atque)
[03:33:30] *** Quits: bingulo (~bingulo@189.97.74.110) (Ping timeout: 256 seconds)
[03:35:41] *** Joins: bingulo (~bingulo@189.97.74.110)
[03:36:13] *** Joins: rsjw (~quassel@user/rsjw)
[03:37:10] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:37:49] *** Joins: nun (~nun@178.115.236.156.static.drei.at)
[03:40:31] *** Joins: saohh (~saohh@ip-78-45-147-109.net.upcbroadband.cz)
[03:41:25] *** Quits: cm007magnum (~Rheanna@218.78.53.13) (Remote host closed the connection)
[03:42:29] *** Quits: beans (~beans@072-182-047-058.res.spectrum.com) (Ping timeout: 268 seconds)
[03:43:43] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[03:44:52] <Twix> Satin, you can tell GTK by function calls how to draw the GUI, but that is a lot of work, hard to maintain and doesn't provide any benefit. Let the tooling help you :)
[03:46:48] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 268 seconds)
[03:47:58] *** Quits: bingulo (~bingulo@189.97.74.110) (Quit: WeeChat 3.3)
[03:48:11] *** Joins: korg815 (~korg815@user/korg815)
[03:49:37] *** Quits: saohh (~saohh@ip-78-45-147-109.net.upcbroadband.cz) (Quit: Leaving)
[03:50:03] <Satin> you have a point.
[03:51:39] *** Joins: beans (~beans@072-182-047-058.res.spectrum.com)
[03:53:12] *** Joins: zeroxdutra (~gabriel@177.8.253.87)
[03:53:20] <zeroxdutra> teste
[03:53:34] <zeroxdutra> ping
[03:57:05] *** Quits: piku (~piku@47.202.113.8) (Remote host closed the connection)
[03:57:06] <Satin> pong
[03:57:21] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[03:57:23] *** Joins: piku (~piku@47.202.113.8)
[03:58:29] <De4nWhit3> Hello all.
[03:58:30] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Ping timeout: 260 seconds)
[03:59:03] <twkm> moo.
[03:59:54] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[04:01:21] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:07:26] *** Joins: BSaboia (~bsaboia@187.19.136.126)
[04:07:52] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: sdfgsdfg)
[04:08:48] *** Quits: Guest25 (~Guest25@2601:404:d300:5a0:8019:c9dd:453e:462e) (Quit: Client closed)
[04:11:08] <quartz> fizzie: Sorry to bother you about this, but when I run the code from earlier: https://godbolt.org/z/ecMv6z11d   It truncates the port number for some reason. I don't know why. I get this output: https://bpa.st/K3WQ
[04:11:54] <quartz> The first time, it works fine, but after that, the number is cut off. I can't seem to check it with gdb becaues it won't branch into the child process.
[04:16:30] <fizzie> Yeah, it doesn't for me; of course I don't have your shell script, but here's what I get for that input: https://0x0.st/-RQa.txt
[04:16:34] <twkm> yes it will, you need to tell it to follow the schild.
[04:16:39] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[04:16:54] <twkm> err, the child.
[04:17:11] <fizzie> See `help set follow-fork-mode` for that, though I'm not sure why you'd want it to follow the child there.
[04:17:39] <quartz> I wanted to see what the value of port_num was at that line
[04:17:55] <quartz> Is there something wrong with my shell script then? https://bpa.st/VI6A
[04:18:05] *** Joins: Wulf (~Wulf@user/wulf)
[04:18:24] <quartz> I set it to delete the mypipe-$$ files and it sometimes does, and sometimes does not.
[04:18:31] <fizzie> `read port_num` reads from standard input, does it not? You're passing the port number to the script as a command-line argument.
[04:19:06] <twkm> #posix or #bash might discuss the flaws in the script.
[04:19:26] <fizzie> If you try to read stdin from both the C program and in the shell script, it's not a surprise if it behaves confusingly, given that they share the same stdin (and the input will go arbitrarily to one or the other, not both).
[04:20:27] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[04:20:44] *** Joins: bingulo (~bingulo@189.97.74.110)
[04:20:53] <quartz> Ahhh OK.
[04:23:06] <quartz> So basically replace $port_num with $1
[04:26:28] <quartz> Ah that doesn't work either.
[04:30:11] *** Quits: beans (~beans@072-182-047-058.res.spectrum.com) (Ping timeout: 265 seconds)
[04:30:56] *** Joins: Aloli_9264 (~Administr@2408:820c:8f3f:2b10:c001:cc4:4e5c:3a8e)
[04:31:20] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[04:32:12] *** Quits: Brewster (~Brewster@104.145.226.5) (Changing host)
[04:32:12] *** Joins: Brewster (~Brewster@user/brewster)
[04:32:47] *** Joins: chair1 (~chair1@187.109.18.204)
[04:33:14] *** Joins: cm007magnum (~Rheanna@218.78.67.149)
[04:34:36] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[04:36:36] *** Joins: pnbeast (~pnbeast@2601:140:4280:3c90::1)
[04:39:09] *** Joins: nostar (~nostar@68.51.221.108)
[04:41:11] *** Quits: zeroxdutra (~gabriel@177.8.253.87) (Quit: leaving)
[04:42:18] *** Joins: mimmy (~mimmy@45.14.195.121)
[04:48:18] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[04:49:05] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[04:54:09] *** Joins: malloy (~jimery@116.30.220.108)
[04:55:58] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[04:57:59] *** Joins: X-Scale` (~ARM@31.22.167.45)
[04:58:35] *** Quits: superdupond (~Kev@2a01cb0400149f00c866202855143f20.ipv6.abo.wanadoo.fr) (Ping timeout: 264 seconds)
[05:00:11] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 268 seconds)
[05:02:29] *** X-Scale` is now known as X-Scale
[05:08:07] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-0c95-5e78-2621-2637.inf6.spectrum.com)
[05:09:31] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-0c95-5e78-2621-2637.inf6.spectrum.com) (Read error: Connection reset by peer)
[05:10:18] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637)
[05:10:36] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:11:00] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637) (Ping timeout: 260 seconds)
[05:14:55] *** Joins: linguist (~autistic@user/linguist)
[05:19:53] *** Quits: ski (~ski@remote12.chalmers.se) (Ping timeout: 264 seconds)
[05:19:59] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: Connection closed for inactivity)
[05:21:31] *** Quits: cm007magnum (~Rheanna@218.78.67.149) (Remote host closed the connection)
[05:22:23] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 268 seconds)
[05:23:14] *** Joins: ferdna (~ferdna@user/ferdna)
[05:23:26] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[05:23:36] *** Joins: cm007magnum (~Rheanna@218.78.53.13)
[05:25:08] *** Quits: reset (~reset@user/reset) (Quit: reset)
[05:27:38] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 260 seconds)
[05:29:56] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Quit: This computer has gone to sleep)
[05:30:14] *** Joins: BSaboia (~bsaboia@187.19.136.126)
[05:32:19] *** Quits: chair1 (~chair1@187.109.18.204) (Remote host closed the connection)
[05:33:16] *** Quits: soapsudsxx (~soapsudsx@141.193.188.141) (Remote host closed the connection)
[05:33:20] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[05:35:01] *** Joins: soapsudsxx (~soapsudsx@141.193.188.141)
[05:36:20] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:37:02] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[05:42:30] *** Joins: monkey_ (~user@190.104.116.153)
[05:44:07] *** Quits: ornxka (~ornxka@user/ornxka) (Quit: WeeChat 3.3)
[05:44:21] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[05:44:40] *** Joins: beans (~beans@072-182-047-058.res.spectrum.com)
[05:47:03] *** Quits: Richard_Cavell (uid165693@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:50:56] *** Quits: beans (~beans@072-182-047-058.res.spectrum.com) (Ping timeout: 245 seconds)
[05:51:08] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[05:51:24] *** Joins: ornxka (~ornxka@user/ornxka)
[05:55:14] *** Quits: linguist (~autistic@user/linguist) (Quit: Leaving)
[05:56:47] *** Quits: HolyFishPaste92 (HolyFishPa@gateway/vpn/protonvpn/holyfishpaste90) (Remote host closed the connection)
[05:58:28] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[06:03:30] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[06:06:29] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Quit: Bye)
[06:08:20] *** Joins: guoyi (~Srain@109.175.166.59)
[06:11:22] *** Joins: simon323 (~simon323@2409:8a34:46c:5830:3e:f157:aa65:f07)
[06:11:22] *** Quits: cm007magnum (~Rheanna@218.78.53.13) (Remote host closed the connection)
[06:13:58] *** Joins: cm007magnum (~Rheanna@218.78.67.149)
[06:14:11] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 268 seconds)
[06:15:15] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[06:15:48] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[06:17:52] *** Joins: bindu (~bindu@user/bindu)
[06:18:11] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[06:19:00] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com) (Read error: Connection reset by peer)
[06:20:49] *** Joins: quartz (~quartz@user/quartz)
[06:21:26] *** Joins: furincleavagesit (~textual@47.203.181.175)
[06:21:46] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:23:48] *** Quits: furincleavagesit (~textual@47.203.181.175) (Quit: Textual IRC Client: www.textualapp.com)
[06:28:15] *** Quits: guoyi (~Srain@109.175.166.59) (Quit: guoyi)
[06:28:22] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Ping timeout: 268 seconds)
[06:28:25] *** Quits: bruda (~bruda@172.58.62.226) (Quit: Another productive day of C studies. Time to wind down.)
[06:28:49] *** Joins: stevelitt (~stevelitt@2603:9001:70d:6d00:2ef0:5dff:fe7a:5c1d)
[06:29:32] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[06:29:48] *** Quits: kuoi (~kuoi@109.175.166.58) (Remote host closed the connection)
[06:30:01] *** Joins: katnis (uid15849@helmsley.irccloud.com)
[06:30:02] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[06:31:23] <stevelitt> Is this safe?: char st; st="Name=%s, age=%d\n"; printf(st, name, age);
[06:31:43] <stevelitt> In other words, does printf() change its format argument in place?
[06:33:15] *** Joins: frost (~frost@user/frost)
[06:33:36] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[06:33:56] <fizzie> It would need to be `char *st` of course, but other than that, that's fine.
[06:33:57] <danielcamiel> you'd need char *st; but aside from that there should be no issues
[06:34:16] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:35:06] <dave0> stevelitt: you've probably seen   printf("hello world\n");   a million times :-)
[06:35:19] <fizzie> There's no difference really between `printf("foo");` and `char *fmt = "foo"; printf(fmt);`, in both cases you're passing in a pointer to the contents of a string literal.
[06:35:21] <stevelitt> :-), yes, I meant char *
[06:36:32] *** Quits: bingulo (~bingulo@189.97.74.110) (Quit: WeeChat 3.3)
[06:36:37] *** Joins: topside_ (~topside@ip68-226-238-34.lf.br.cox.net)
[06:36:41] <stevelitt> fizzie, you're right. Thanks everyone!
[06:37:13] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com)
[06:40:26] *** Quits: topside (~topside@ip68-226-238-34.lf.br.cox.net) (Ping timeout: 260 seconds)
[06:41:30] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[06:42:28] *** Joins: dutch (~DutchIngr@user/dutch)
[06:47:47] *** Quits: mimmy (~mimmy@45.14.195.121) (Ping timeout: 264 seconds)
[06:49:22] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:49:22] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:49:22] *** Joins: wroathe (~wroathe@user/wroathe)
[06:50:15] *** Joins: kuoi (~kuoi@109.175.166.59)
[06:52:31] *** Quits: kuoi (~kuoi@109.175.166.59) (Remote host closed the connection)
[06:52:48] *** Joins: kuoi (~kuoi@109.175.166.59)
[06:53:04] *** Joins: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[06:53:49] *** Joins: mimmy (~mimmy@45.14.195.121)
[06:54:25] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:57:00] *** Quits: kuoi (~kuoi@109.175.166.59) (Remote host closed the connection)
[06:57:17] *** Joins: kuoi (~kuoi@109.175.166.59)
[06:58:59] *** Quits: kuoi (~kuoi@109.175.166.59) (Remote host closed the connection)
[06:59:15] *** Joins: kuoi (~kuoi@109.175.166.59)
[07:00:45] *** Quits: kuoi (~kuoi@109.175.166.59) (Remote host closed the connection)
[07:01:03] *** Joins: kuoi (~kuoi@109.175.166.59)
[07:01:15] *** Quits: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown) (Quit: Connection closed)
[07:01:28] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Quit: This computer has gone to sleep)
[07:01:29] *** Quits: cm007magnum (~Rheanna@218.78.67.149) (Remote host closed the connection)
[07:03:11] *** Joins: monkey_ (~user@190.104.116.153)
[07:03:45] *** Joins: cm007magnum (~Rheanna@101.91.232.166)
[07:04:00] *** Quits: alch (~alch@151.36.27.68) (Read error: Connection reset by peer)
[07:08:47] *** Joins: alch (~alch@151.38.3.3)
[07:09:44] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[07:10:50] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[07:11:05] *** Quits: rsjw (~quassel@user/rsjw) (Quit: rsjw)
[07:17:23] *** Joins: vftec (~8iIn0n@2a01:4b00:8e07:7900:ec57:73ad:ab0d:1d61)
[07:18:24] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:18:42] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Ping timeout: 260 seconds)
[07:24:18] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 260 seconds)
[07:26:03] *** Joins: Alhazred (~Alhazred@86.106.74.39)
[07:30:00] *** Quits: Xgc (~Xgc@user/xgc) (Remote host closed the connection)
[07:30:28] *** Joins: Xgc (~Xgc@user/xgc)
[07:31:32] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:3e77:451f:a622:82a5)
[07:32:04] *** Joins: Aloli_92641 (~Administr@223.167.213.234)
[07:32:04] *** Quits: Aloli_92641 (~Administr@223.167.213.234) (Client Quit)
[07:32:58] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[07:35:06] *** Quits: Aloli_9264 (~Administr@2408:820c:8f3f:2b10:c001:cc4:4e5c:3a8e) (Ping timeout: 245 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:43:03] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[07:44:50] *** Quits: mahmutov (~mahmutov@37.155.41.41) (Ping timeout: 268 seconds)
[07:46:02] *** Quits: vftec (~8iIn0n@2a01:4b00:8e07:7900:ec57:73ad:ab0d:1d61) (Quit: Leaving)
[07:47:25] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[07:51:23] *** Quits: cm007magnum (~Rheanna@101.91.232.166) (Remote host closed the connection)
[07:52:58] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[08:02:22] *** Joins: kdc (~kdc@196.211.197.159)
[08:07:25] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[08:08:01] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[08:08:17] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[08:15:01] *** Joins: SachieW (~SachieW@240e:e8:f34f:f101:9131:995:e83:1576)
[08:15:51] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[08:18:32] *** Joins: vftec (~8iIn0n@2a01:4b00:8e07:7900:ec57:73ad:ab0d:1d61)
[08:20:15] *** Joins: BSaboia (~bsaboia@187.19.136.126)
[08:21:21] *** Quits: SachieW (~SachieW@240e:e8:f34f:f101:9131:995:e83:1576) (Ping timeout: 245 seconds)
[08:23:45] *** Quits: vftec (~8iIn0n@2a01:4b00:8e07:7900:ec57:73ad:ab0d:1d61) (Quit: Leaving)
[08:24:46] *** Quits: mimmy (~mimmy@45.14.195.121) (Ping timeout: 256 seconds)
[08:29:17] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Quit: This computer has gone to sleep)
[08:31:11] *** Joins: justin (~justin@51.15.41.97)
[08:34:43] *** Parts: justin (~justin@51.15.41.97) (WeeChat 3.3)
[08:34:46] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[08:41:59] *** Quits: puke (~puke@user/puke) (Quit: puke)
[08:46:46] *** Joins: zacts (~zacts@user/zacts)
[08:49:20] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[08:56:38] *** Quits: Oddity (Oddity@user/oddity) (Remote host closed the connection)
[08:58:46] *** Quits: soapsudsxx (~soapsudsx@141.193.188.141) (Remote host closed the connection)
[09:08:37] *** Joins: Electric_Sheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net)
[09:09:15] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[09:14:41] *** Quits: grange_c (~grange_c@vps-9763379d.vps.ovh.net) (Quit: Ping timeout (120 seconds))
[09:14:54] *** Joins: grange_c (~grange_c@vps-9763379d.vps.ovh.net)
[09:16:51] *** Joins: BSaboia (~bsaboia@187.19.136.126)
[09:17:02] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Remote host closed the connection)
[09:22:43] *** Joins: aniruddha (uid340443@ilkley.irccloud.com)
[09:31:07] *** Joins: Guest80 (~Guest80@pd9ed7c28.dip0.t-ipconnect.de)
[09:31:25] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[09:33:43] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[09:38:49] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[09:41:20] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:47:54] *** Joins: bud (~bud@user/bud)
[09:50:56] *** Joins: plainoldcheese (~plainoldc@user/plainoldcheese)
[09:54:58] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:55:26] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[09:55:53] *** Joins: bindu (~bindu@user/bindu)
[10:03:09] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:15:16] *** Quits: i336 (~i336@121.217.100.71) (Ping timeout: 256 seconds)
[10:18:59] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 264 seconds)
[10:19:34] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[10:20:14] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 268 seconds)
[10:21:55] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[10:22:01] *** Joins: Enitin (~Enitin@82.102.22.86)
[10:23:21] *** Quits: plainoldcheese (~plainoldc@user/plainoldcheese) (Quit: WeeChat 3.3)
[10:23:42] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[10:25:00] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[10:25:28] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 256 seconds)
[10:26:13] *** Joins: slidercrank (~slidercra@user/slidercrank)
[10:27:00] *** Joins: plainoldcheese (~plainoldc@user/plainoldcheese)
[10:28:39] *** Quits: pstef (~pstef@user/pstef) (*.net *.split)
[10:28:39] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[10:28:39] *** Quits: zaratustra (~zaratustr@user/zaratustra) (*.net *.split)
[10:28:39] *** Quits: cehteh (~ct@git.pipapo.org) (*.net *.split)
[10:28:39] *** Quits: samir (~azureuser@20.97.234.198) (*.net *.split)
[10:28:39] *** Quits: supernovah (~supernova@mail.ijk.nz) (*.net *.split)
[10:28:39] *** Quits: nowz (~nowz@user/nowz) (*.net *.split)
[10:28:39] *** Quits: sirdidymus (~sirdidymu@sorcsys.net) (*.net *.split)
[10:28:39] *** Quits: trisk (~trisk@2601:196:4700:1f14:8:20ff:fe3e:890e) (*.net *.split)
[10:28:39] *** Quits: uso (~matthias@ows-148-253-67-208.eu-west-2.compute.outscale.com) (*.net *.split)
[10:28:39] *** Quits: snappy (~snappy@user/snappy) (*.net *.split)
[10:28:39] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[10:28:39] *** Quits: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2) (*.net *.split)
[10:28:39] *** Quits: ozzz (~oz@46.49.41.80) (*.net *.split)
[10:28:39] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[10:28:39] *** Quits: Fish (~Fish@cartwheel.9grid.fr) (*.net *.split)
[10:28:39] *** Quits: dangrenier83 (~pi@user/dangrenier83) (*.net *.split)
[10:28:39] *** Quits: asm (~alexander@user/asm) (*.net *.split)
[10:28:40] *** Quits: stilbruch (~stilbruch@157.245.122.124) (*.net *.split)
[10:28:40] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (*.net *.split)
[10:28:40] *** Quits: noonien (~noonien@user/noonien) (*.net *.split)
[10:28:40] *** Quits: fizzie (irc@selene.zem.fi) (*.net *.split)
[10:28:40] *** Quits: laris (undead@37.221.209.36) (*.net *.split)
[10:28:48] *** Joins: supernovah (~supernova@mail.ijk.nz)
[10:28:50] *** Joins: ozzz (~oz@46.49.41.80)
[10:28:51] *** Joins: sirdidymus (~sirdidymu@sorcsys.net)
[10:28:55] *** Joins: nowz (~nowz@194.136.126.35)
[10:29:02] *** Joins: uso (~matthias@ows-148-253-67-208.eu-west-2.compute.outscale.com)
[10:29:08] *** Joins: zaratustra (~zaratustr@user/zaratustra)
[10:29:08] *** Joins: Exa (exa@irc.moe)
[10:29:11] *** Joins: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2)
[10:29:11] *** Joins: snappy (~snappy@45.32.228.130)
[10:29:12] *** Joins: asm (~alexander@burner.asm89.io)
[10:29:17] *** Joins: pstef (~pstef@user/pstef)
[10:29:19] *** Joins: trisk (~trisk@2601:196:4700:1f14:8:20ff:fe3e:890e)
[10:29:20] *** Quits: nowz (~nowz@194.136.126.35) (Changing host)
[10:29:20] *** Joins: nowz (~nowz@user/nowz)
[10:29:20] *** Quits: snappy (~snappy@45.32.228.130) (Signing in (snappy))
[10:29:20] *** Joins: snappy (~snappy@user/snappy)
[10:29:20] *** Joins: Fish (~Fish@cartwheel.9grid.fr)
[10:29:22] *** Joins: Byteflux (~byte@byteflux.net)
[10:29:24] *** Joins: noonien (~noonien@user/noonien)
[10:29:24] *** Joins: cehteh (~ct@git.pipapo.org)
[10:29:32] *** Joins: dangrenier83 (~pi@modemcable059.178-59-74.mc.videotron.ca)
[10:29:40] *** Joins: fizzie (irc@selene.zem.fi)
[10:29:41] *** Joins: samir (~azureuser@20.97.234.198)
[10:29:44] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[10:29:59] *** Joins: stilbruch (~stilbruch@157.245.122.124)
[10:30:46] *** Joins: laris (undead@37.221.209.36)
[10:31:04] *** Quits: snappy (~snappy@user/snappy) (Client Quit)
[10:31:17] *** Joins: snappy (~snappy@user/snappy)
[10:32:41] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[10:33:06] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:34:22] *** Quits: Twix (~None@2a01:4f8:192:23d0::1be4:a) (*.net *.split)
[10:34:22] *** Quits: mgocobachi (~m@ancrae.com) (*.net *.split)
[10:34:22] *** Quits: emias (~holger@home.zedat.fu-berlin.de) (*.net *.split)
[10:34:22] *** Quits: Ranhir (~Ranhir@157.97.53.139) (*.net *.split)
[10:34:22] *** Quits: DrNick42 (~DrNick42@bastion.spikeyfishtech.uk) (*.net *.split)
[10:34:22] *** Quits: FLHerne (flh@flherne.uk) (*.net *.split)
[10:34:22] *** Quits: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex) (*.net *.split)
[10:34:23] *** Quits: xMopx (~xMopx-lib@192.95.23.134) (*.net *.split)
[10:34:23] *** Quits: beneth (~beneth@ip208.ip-54-36-198.eu) (*.net *.split)
[10:34:23] *** Quits: aosync (~aws@mx1.aosync.me) (*.net *.split)
[10:34:23] *** Quits: mcf (~mforney@netbsd/developer/mcf) (*.net *.split)
[10:34:23] *** Quits: eof (~eof@tty3.dev) (*.net *.split)
[10:34:23] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (*.net *.split)
[10:34:31] *** Joins: summerisle (~eof@tty3.dev)
[10:34:34] *** Joins: mcf (~mforney@netbsd/developer/mcf)
[10:34:39] *** Joins: DrNick42 (~DrNick42@bastion.spikeyfishtech.uk)
[10:34:39] *** Joins: aosync (~aws@mx1.aosync.me)
[10:34:47] *** Joins: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex)
[10:34:50] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[10:34:52] *** Joins: FLHerne (~flh@flherne.uk)
[10:34:53] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[10:34:58] *** Joins: emias (~holger@home.zedat.fu-berlin.de)
[10:35:00] *** Joins: Twix (~None@2a01:4f8:192:23d0::1be4:a)
[10:35:10] *** Joins: xMopx (~xMopx-lib@192.95.23.134)
[10:35:42] *** Joins: mgocobachi (~m@ancrae.com)
[10:36:08] *** Joins: s1b1 (~s1b1@user/s1b1)
[10:36:29] *** Quits: pnbeast (~pnbeast@2601:140:4280:3c90::1) (Quit: WeeChat 2.7.1)
[10:38:48] *** Joins: SachieW (~SachieW@240e:e8:f34f:f101:9131:995:e83:1576)
[10:39:30] *** Quits: SachieW (~SachieW@240e:e8:f34f:f101:9131:995:e83:1576) (Remote host closed the connection)
[10:40:22] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:3e77:451f:a622:82a5) (Remote host closed the connection)
[10:40:42] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:87f3:869a:3aa:dfd5)
[10:42:08] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[10:48:01] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[10:48:50] *** Joins: mrig (~AdiIRC@user/mrig)
[10:49:43] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[10:51:20] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[10:51:44] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[10:51:59] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[10:52:05] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[10:54:15] *** Joins: beneth (~beneth@ip208.ip-54-36-198.eu)
[10:54:43] *** Joins: loganlee (~Thunderbi@user/loganlee)
[10:54:46] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 260 seconds)
[11:01:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:01:11] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.16)
[11:02:00] *** Joins: i336 (~i336@121.217.2.74)
[11:05:11] *** Quits: alch (~alch@151.38.3.3) (Read error: Connection reset by peer)
[11:05:44] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[11:05:58] *** Joins: mrig (~AdiIRC@user/mrig)
[11:06:21] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[11:07:48] *** Quits: AmR (~AmREiSa@156.199.219.108) (Quit: Konversation terminated!)
[11:08:20] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 268 seconds)
[11:09:12] *** Joins: alch (~alch@151.36.17.158)
[11:09:34] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:11:22] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[11:13:23] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[11:14:32] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Quit: Ping timeout (120 seconds))
[11:14:55] *** Quits: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4) (Remote host closed the connection)
[11:15:02] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[11:18:46] *** Quits: Chip1972 (~Chip1972@186.206.217.247) (Remote host closed the connection)
[11:20:52] *** Quits: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[11:21:17] *** Joins: reset (~reset@user/reset)
[11:23:54] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[11:32:54] *** Quits: rahl (~rahl@102.114.61.68) (Ping timeout: 256 seconds)
[11:34:52] *** Joins: rahl (~rahl@102.114.71.93)
[11:46:39] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:50:20] *** Quits: mrig (~AdiIRC@user/mrig) (Read error: Connection reset by peer)
[11:50:34] *** Joins: mrig (~AdiIRC@user/mrig)
[11:51:53] *** Joins: AsenMx (~AsenMx@user/asenmx)
[12:00:21] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:00:49] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[12:00:51] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[12:01:14] *** Joins: Rounin (~david@84.212.130.215)
[12:01:26] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[12:04:01] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[12:04:33] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[12:07:55] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:08:21] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Read error: Connection reset by peer)
[12:10:20] *** Quits: Guest80 (~Guest80@pd9ed7c28.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[12:11:02] *** Joins: karakedi (~eAC53C340@user/karakedi)
[12:19:30] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 265 seconds)
[12:22:00] *** Joins: larry87 (~quassel@2601:2c7:4280:17a0:82b:710a:4114:6888)
[12:23:01] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[12:25:20] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:27:08] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:87f3:869a:3aa:dfd5) (Quit: Leaving)
[12:27:25] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[12:27:34] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 260 seconds)
[12:30:09] *** Quits: dpgraham4401[m] (~dpgraham4@2001:470:69fc:105::1:1aa4) (Quit: You have been kicked for being idle)
[12:30:22] *** Quits: leo[m] (~leoleonar@2001:470:69fc:105::1:1893) (Quit: You have been kicked for being idle)
[12:30:26] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:34:22] <chiselfuse> https://termbin.com/lo0x
[12:34:41] *** Joins: aradesh (~aradesh@user/aradesh)
[12:34:45] <chiselfuse> Why does this go to #error?
[12:36:30] <dave0> chiselfuse: MAX_INT isn't defined... try #include <limits.h>
[12:36:47] <chiselfuse> By the way, is this a good way to test limits?
[12:37:31] <chiselfuse> dave0: It still goes to #error
[12:38:23] <dave0> oh this says INT_MAX ... https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/limits.h.html
[12:38:41] <supakeen> It's INT_...
[12:38:43] <supakeen> Yea that.
[12:38:44] <dave0> chiselfuse: what is MAX_INT supposed to be?
[12:39:42] <chiselfuse> dave0: It's supposed to be INT_MAX :P
[12:39:50] <dave0> chiselfuse: no worries
[12:40:01] <chiselfuse> Is this a good way to test for limits?
[12:40:21] <dave0> yes, there's nothing wrong with it
[12:41:00] <supakeen> Except that it's already defined to never be below 32 isn't it?
[12:41:05] <supakeen> *32k
[12:41:22] <dave0> chiselfuse: consider giving a useful message from #error
[12:41:50] <dave0> supakeen: c guarantees 32767, posix guarantees (2**31)-1 whatever that is
[12:42:21] *** lkor is now known as lionkor
[12:43:01] <dave0> chiselfuse: with a useful message, it's a good method.. it will fail quickly and you can tailor the error message
[12:44:20] <chiselfuse> I put this
[12:44:21] <chiselfuse> #error ints are too small on this system
[12:44:53] <chiselfuse> Doesn't feel too fancy
[12:45:12] <dave0> fair enough
[12:45:17] <dave0> looks good
[12:45:22] <chiselfuse> :)
[12:45:49] <sham1> #error get a real computer with real integers
[12:46:21] <supakeen> Would one use `static_assert` for this in C11?
[12:48:23] <supakeen> Seems more sane as you can do a bit more with that in case you're going to check more stuff that needs to happen after preprocessor.
[12:48:42] <chiselfuse> sham1: heh
[12:48:55] <chiselfuse> I thought static_assert was more c++
[12:49:07] <supakeen> It's in C11 as well.
[12:49:14] <sham1> Yeah, in C it's _Static_assert
[12:49:29] <supakeen> assert.h defines static_assert as well: https://en.cppreference.com/w/c/keyword/_Static_assert
[12:49:42] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[12:50:01] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[12:51:30] *** Joins: AmR (~AmREiSa@156.199.219.108)
[12:51:30] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[12:54:07] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[12:57:04] <johnjay> what's the idea behind all those _Capitalized_Keywords
[12:57:11] *** Joins: bonbon (~bonbon@user/bonbon)
[12:57:15] <johnjay> are they supposed to be later additions or macros or something?
[12:57:37] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:87f3:869a:3aa:dfd5)
[12:58:13] <johnjay> according to my computer 2147483648 is 2**31
[12:58:45] <sham1> _Capitalised is a reserved word. Anything with either two underscores at the beginning or one underscore followed by a capital letter is an identifier reserved for the standard to use at some point
[12:58:52] <johnjay> the rule of thumb is 2^10 is ~1K, 2^20 is ~1M, and 2^30 is ~1B
[12:59:08] <dave0> johnjay: underscore, capital letter is reserved by c .. you are not supposed to define your own identifiers with underscore upper case letter
[12:59:22] <johnjay> i c
[12:59:50] <sham1> That's the story with _Bool, _Noreturn and so on
[13:00:07] <dave0> johnjay: it makes it easier to define new things that don't intefere with existing sourcecode
[13:00:49] <dave0> so you introduce _Bool knowing that no valid program would ever have used it (and therefore not compile)
[13:00:51] <johnjay> the more I learn C the more doing it feels like a combination of civil engineering, boolean logic, and being a lawyer
[13:01:00] <sham1> They couldn't just standardise bool, noreturn and such directly because those names might be in use. Instead we have headers like strdbool.h which export those more easier names for use if you don't have anything that might collide
[13:01:24] <sham1> stdbool.h*
[13:02:20] <sham1> And for example with _Noreturn there is a corresponding stdnoreturn.h
[13:02:28] <johnjay> like those guys that live commentate trials. "Here we see the programmer making a motion to use a macro not defined in C11 but defined in C99. We'll see how the compiler rules on the motion."
[13:02:54] <dave0> is my wife's divorce lawyer
[13:03:10] <sham1> C has a lot of language lawyering opportunity, yes
[13:03:32] <dave0> fizzie has it down
[13:04:12] <johnjay> fizzle is like a lawyer who is pretigious and the head of Fizzle Fizzle & Fring's Firm, CPP
[13:04:26] <wyre> is there some library to given an arbitrary text string get a bitmap image? (like pillow/PIL in python) https://pillow.readthedocs.io/en/stable/
[13:04:27] <candide> Title of wyre's link: Pillow — Pillow (PIL Fork) 8.4.0 documentation
[13:05:10] <sham1> Arbitrarily decoding bytestrings into images sounds dangerous
[13:05:51] <wyre> sham1, my point is to generate a bitmap image from a string
[13:06:08] <wyre> sham1, I have to fill a display panel with lots of LEDs
[13:06:28] <wyre> so I need to generate a proper bitmap to load in there and see the written text in the LED display
[13:07:00] <dave0> ohhh a font
[13:07:29] <wyre> dave0, what do you mean? 🤔
[13:08:03] <supakeen> sounds like a project like this: https://revspace.nl/LedBanner
[13:08:09] <supakeen> (source code at the bottom)
[13:10:21] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:10:31] <supakeen> oh, that doesn't contain the actual conversion; just the driving of the display over spi mostly
[13:11:20] *** Joins: plastico (~plastico@neomutt/plastico)
[13:12:42] <wyre> supakeen, that's not the problem right know because I have a LED driver which works over bit banging, so ... I'll write my own sw driver 
[13:13:00] <wyre> I'm keen on generating the bitmap given a string and a font
[13:13:07] <sham1> You need to have some bitmap font data
[13:13:13] <sham1> Then you can match letters to that font data
[13:13:18] *** Joins: lovelace (~Elspeth@2.24.23.175)
[13:14:15] *** Joins: Klinda (~superleag@user/klinda)
[13:15:10] <supakeen> and bitmap font data is usually another image that contains all the characters in a certain order and size, then you can read each letter into your favorite datatype and put them together to make words in a new favorite datatype and bitbang that to your screen
[13:15:23] <supakeen> there are some pre-existing bitmap fonts (probably especially easy to find in the arduino ecosystem)
[13:16:00] <wyre> supakeen, I was looking for a library to don't need to do this
[13:16:06] <supakeen> ok
[13:16:29] <wyre> pillow in python gives you the image bytestream from a text string (given a ttf font)
[13:16:40] <wyre> s/the image/the bitmap/
[13:16:47] <wyre> or the image bitmap, I mean
[13:17:24] *** Joins: shivesh (~shivesh@user/shivesh)
[13:18:51] <dave0> there is cairo but i've never used it and it might be very complicated
[13:18:51] <supakeen> perhaps freetype?
[13:19:18] <wyre> supakeen, oh, that's sounds good
[13:20:17] *** Quits: bonbon (~bonbon@user/bonbon) (Ping timeout: 246 seconds)
[13:20:27] <dave0> https://www.cairographics.org/
[13:21:43] <supakeen> it has all the functions to load fonts/glyphs and turn them into bitmaps but i can't quite quickly find how to go from a BitmapGlyph to just a buffer of points
[13:22:12] * markand once wanted to try a cairo+wayland compositor
[13:23:12] <sham1> So what exactly, composing windows with Cairo?
[13:23:33] <markand> not windows, but anything else that you draw yourself
[13:23:42] <sham1> I see
[13:23:44] <markand> e.g. a menu bar, widgets somehow
[13:23:56] <markand> since windows (aka clients) already have their content drawn into a buffer
[13:24:05] <sham1> Yeah
[13:24:14] <sham1> I was thinking of something similar for my own compositor project
[13:24:18] <markand> :-)
[13:24:38] <markand> I think it would be better for me to try that in vulkan instead so I can learn vulkan as well in the meantime
[13:24:48] <wyre> supakeen, I don't get your last point about "how to go from a BitmapGlyph to just a buffer of points"
[13:24:49] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Quit: WeeChat 3.3)
[13:25:05] <supakeen> you can disregard that :)
[13:25:24] <supakeen> i was thinking, i shouldn't be thinking since i've a headache
[13:26:20] <wyre> supakeen, well, I think it's actually an important point because I need to carefully fix the vertical and horizontal sizes of the bitmap
[13:26:40] <wyre> and then ... sure I have to bit-bang the driver with this stream 😞
[13:28:59] <dave0> this is interesting: https://www.cairographics.org/tutorial/
[13:29:44] <dave0> scroll to the bottom and click on the picture
[13:29:51] <dave0> code comes up and it saves it as a png
[13:30:18] <dave0> i must learn this
[13:33:57] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:38:59] *** Joins: slidercrank (~slidercra@user/slidercrank)
[13:41:31] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (Remote host closed the connection)
[13:43:24] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[13:45:15] *** Quits: graywolf (~wolf@user/graywolf) (Quit: WeeChat 3.3)
[13:47:44] *** Joins: puke (~puke@user/puke)
[13:48:08] *** Guest564 is now known as xSavitar
[13:48:11] *** Joins: dfip^ (~dfip@h50.174.139.63.static.ip.windstream.net)
[13:48:21] *** Quits: xSavitar (~xSavitar@kinserve.com) (Changing host)
[13:48:21] *** Joins: xSavitar (~xSavitar@user/xsavitar)
[13:51:31] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:55:15] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 250 seconds)
[13:55:54] *** Joins: AsenMx (~AsenMx@user/asenmx)
[13:58:26] *** Joins: torstenvl (~torstenvl@c-73-39-140-8.hsd1.va.comcast.net)
[13:58:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[14:03:38] *** Quits: torstenvl (~torstenvl@c-73-39-140-8.hsd1.va.comcast.net) (Ping timeout: 256 seconds)
[14:07:03] *** Joins: teepee_ (~teepee@openscad/teepee)
[14:08:21] *** Quits: teepee (~teepee@openscad/teepee) (Ping timeout: 276 seconds)
[14:08:22] *** teepee_ is now known as teepee
[14:13:24] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 265 seconds)
[14:13:47] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:14:12] *** Joins: pucara (~i@181.95.204.204)
[14:16:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:17:00] *** Quits: cnsunyour (~sunyour@129.226.182.99) (Ping timeout: 260 seconds)
[14:18:56] *** Joins: cnsunyour (~sunyour@129.226.182.99)
[14:28:53] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:42] *** Joins: Nistar (Nistar@gateway/vpn/protonvpn/nistar)
[14:31:01] *** Joins: csrf (~csrf@user/csrf)
[14:31:19] <Nistar> Is there a de facto standard style guide for C? Something like how Python has Pep8?
[14:31:21] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[14:31:30] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:32:39] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:32:58] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:9c2a:d7d7:4493:e837)
[14:33:23] *** Joins: cm007magnum (~Rheanna@218.78.94.61)
[14:34:09] <dave0> gnu has one, linux has one
[14:34:15] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[14:34:24] <dave0> k&r has one (i use that)
[14:34:28] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[14:34:28] <slidercrank> using a style guide ruins your individuality! 
[14:35:03] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:35:04] <dave0> Nistar: you can invent your own if you like
[14:35:30] <dave0> usually if you contribute to existing projects they expect you to follow the style that is already there
[14:35:51] <dave0> Nistar: use whatever you find easiest to read
[14:35:53] <slidercrank> Linux kernel has its own coding style
[14:36:41] <slidercrank> > Tabs are 8 characters, and thus indentations are also 8 characters. There are heretic movements that try to make indentations 4 (or even 2!) characters deep, and that is akin to trying to define the value of PI to be 3.
[14:37:03] <dave0> i like k&r
[14:38:03] *** Joins: karakedi (~eAC53C340@user/karakedi)
[14:38:04] <bparker> 8 characters is the real heretic
[14:38:46] *** Quits: kuoi (~kuoi@109.175.166.59) (Ping timeout: 260 seconds)
[14:39:05] <dave0> Nistar: http://www.c-faq.com/style/
[14:39:22] *** Quits: Tordek_ (tordek@triton.blinkenshell.org) (Remote host closed the connection)
[14:39:31] *** Joins: Tordek (tordek@triton.blinkenshell.org)
[14:39:46] <shiroyasha> There's also `clang-format` and similar tools to avoid thinking about that kind of stuff.
[14:41:36] <dave0> Nistar: you're gonna read it more than you're gonna write it
[14:41:40] *** Parts: currybullen (~curry@h-81-170-128-138.A258.priv.bahnhof.se) (WeeChat 3.3)
[14:41:51] <dave0> pick something you find easiest to read
[14:43:42] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Remote host closed the connection)
[14:43:48] *** Joins: Chip1972 (~Chip1972@186.206.217.247)
[14:43:52] *** Quits: Zenton (~user@user/zenton) (Ping timeout: 256 seconds)
[14:44:11] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[14:45:19] *** Joins: cursey (~cursey@user/cursey)
[14:45:24] *** Quits: Biolunar (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a) (Ping timeout: 268 seconds)
[14:47:36] <Nistar> dave0: I want something standard, and I'm just learning the language right now, so there's no reason for me to write me own. I've been reading K&R C indeed.
[14:47:59] <dave0> you could go with what your book does
[14:48:25] <dave0> there's no standard style... that's why there's flame wars over it :-)
[14:49:11] <Nistar> I suppose I'll do that. Do most FOSS C projects maintain a style guide?
[14:49:41] <Nistar> I just don't want to pick up any bad habits as I'm learning C.
[14:50:14] <dave0> i think it varies among the FOOS projects
[14:50:43] <dave0> i would expect it to be along the lines of "copy the style of the rest of the code"
[14:50:54] * shiroyasha doesn't mind others' styles as long as it's consistent.
[14:51:23] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 264 seconds)
[14:51:39] *** Joins: Biolunar (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a)
[14:51:57] <shiroyasha> Having trailing spaces in code immediately puts you in my enemies list tho.
[14:53:12] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.43)
[14:53:23] <dave0> ew
[14:53:34] *** Quits: pucara (~i@181.95.204.204) (Quit: Lost terminal)
[14:54:29] <dave0> you made the list
[14:55:56] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.16) (Ping timeout: 265 seconds)
[14:56:11] *** Quits: finalsummer_ (~finalsumm@user/finalsummer) (Ping timeout: 246 seconds)
[14:56:36] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[14:58:10] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[14:59:16] *** Joins: finalsummer (~finalsumm@user/finalsummer)
[15:03:58] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:05:08] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[15:06:25] <earnestly> Some lack final newlines, which is also UB
[15:07:03] *** Quits: alch (~alch@151.36.17.158) (Ping timeout: 265 seconds)
[15:07:04] *** Joins: saohh (~saohh@ip-78-45-147-109.net.upcbroadband.cz)
[15:07:15] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:08:31] *** Joins: alch (~alch@151.36.14.194)
[15:17:28] *** nheird is now known as nheir
[15:18:59] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:21:09] *** Quits: Nistar (Nistar@gateway/vpn/protonvpn/nistar) (Quit: WeeChat 3.3)
[15:21:20] *** Quits: cm007magnum (~Rheanna@218.78.94.61) (Remote host closed the connection)
[15:22:47] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[15:22:50] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[15:23:02] *** Quits: supajerm_ (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[15:23:41] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[15:23:42] *** Joins: supajerm_ (~supajerm@gateway/vpn/pia/supajerm)
[15:25:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 264 seconds)
[15:29:12] *** Joins: ko (~i.am@user/marlboro)
[15:29:42] *** Joins: amorel (~amorel@mx.mompl.net)
[15:29:43] *** Joins: BSaboia (~bsaboia@187.19.136.126)
[15:29:48] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[15:30:05] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:32:26] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:21] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:42:55] *** Joins: magla (~gelignite@55d4d56a.access.ecotel.net)
[15:43:35] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[15:44:29] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:45:45] *** Joins: cadmio (~cadmio@151.25.143.75)
[15:45:50] <cadmio> Hello
[15:46:17] <trenka> ,gtk
[15:46:17] <candide> No such factoid 'gtk'; Found one factoid in #c containing 'gtk': ##c is /say ##c is for discussion involving the C programming language itself. We do not deal with the whole range of the spectrum. libgtk may be written in C, but this is hardly the proper channel for GTK-related questions. Try #gtk. Likewise, makefiles and autotools: #devtools, assembly: #a​sm, Xlib: #xlib, C++: #c++, and so on.
[15:46:27] <Bou> Heh
[15:46:40] *** Joins: slavfox_ (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[15:47:32] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 260 seconds)
[15:47:32] *** slavfox_ is now known as slavfox
[15:49:12] <rkta> there's no #devtools on libera
[15:49:14] *** Joins: Famine_ (~Famine@user/famine)
[15:49:36] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Ping timeout: 256 seconds)
[15:50:20] *** Quits: cadmio (~cadmio@151.25.143.75) (Quit: WeeChat 3.0)
[15:50:49] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[15:50:54] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[15:51:30] *** Joins: cadmio (~cadmio@151.25.143.75)
[15:52:30] *** Quits: Famine- (~Famine@user/famine) (Ping timeout: 260 seconds)
[15:52:53] *** Parts: cadmio (~cadmio@151.25.143.75) ()
[15:54:13] *** Joins: Thedarkb1-Deskto (~Thedarkb@2001:bb6:b403:e042:b0b3:d263:4777:3209)
[15:55:23] *** Quits: Tordek (tordek@triton.blinkenshell.org) (Remote host closed the connection)
[15:55:44] *** Joins: linguist (~autistic@user/linguist)
[15:56:21] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:e9e3:4a3f:7e1:6f10) (Ping timeout: 250 seconds)
[15:56:27] <sham1> No #asm either according to /LIST at least
[15:56:49] <Bou> There's ##asm
[15:57:24] <Bou> And ##workingset
[15:58:12] <sham1> Well apparently /LIST didn't show them, although could have been that I did something wrong
[15:59:38] *** Joins: Atque (~Atque@user/atque)
[16:00:48] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[16:01:56] <swinnenb> msg alis list *asm
[16:02:04] <swinnenb> tends to work better than /list
[16:02:28] <sham1> Hm
[16:02:33] <sham1> Didn't know of that
[16:02:51] <Bou> Or *asm* and you'll the bonus of discovering ##TasmanianBackchannel
[16:03:14] <sham1> Now I'm intrigued
[16:04:31] *** Joins: random-nick (~random-ni@87.116.165.220)
[16:05:42] *** Joins: Tordek (tordek@triton.blinkenshell.org)
[16:06:07] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[16:08:47] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:10:36] *** Quits: saohh (~saohh@ip-78-45-147-109.net.upcbroadband.cz) (Quit: Leaving)
[16:11:28] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[16:13:48] *** Joins: cm007magnum (~Rheanna@101.91.232.166)
[16:15:52] *** Joins: extern (~archer@37.142.173.109)
[16:16:31] *** grumble` is now known as grumble
[16:19:34] *** Quits: LuKaRo_ (~LuKaRo@p57b1560c.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[16:20:04] *** Joins: chair1 (~chair1@187.109.18.204)
[16:22:25] *** Joins: LuKaRo (~LuKaRo@p4fc32d6b.dip0.t-ipconnect.de)
[16:23:42] <slidercrank> sham1, don't use /list. Use /msg alis instead
[16:24:00] <sham1> I know that now
[16:26:33] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Read error: Connection reset by peer)
[16:32:11] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[16:32:26] <markand> exit, _exit, _Exit, quick_exit
[16:32:30] <markand> so many options
[16:34:46] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:35:19] *** Joins: varaindemian (uid73404@ilkley.irccloud.com)
[16:36:23] *** Joins: jezebel (jezebel@user/jezebel)
[16:39:29] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[16:39:40] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:42:04] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:42:31] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:42:34] <fizzie> _exit and _Exit are pretty much the same thing, so really there's "only" three.
[16:42:58] <dave0> i exited my program 3 times yesterday
[16:43:10] <jezebel> hey dave0 :)
[16:43:15] <dave0> maw jezebel 
[16:43:22] <LangerJan> exit() for regular process termination
[16:44:21] <dave0> _exit in case exit fails
[16:44:54] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Read error: No route to host)
[16:45:03] <markand> :P
[16:45:19] <jezebel> kaboom
[16:45:20] <dave0> oh exit() returns a void... you should set errno to 0 before you call, and check if it changed
[16:45:59] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[16:46:17] *** Joins: Enitin (~Enitin@82.102.22.86)
[16:46:29] <fizzie> All three (exit, quick_exit, _Exit) are declared _Noreturn in C11+, so you're somewhat likely to get warnings about unreachable code if you try to do "in case it fails" error handling after any of them.
[16:47:22] <fizzie> ,clang -Wunreachable-code-return exit(0); return 1;
[16:47:25] <candide> fizzie: [warning: 'return' will never be executed [-Wunreachable-code-return]  warning: 'return' will never be executed [-Wunreachable-code-return]]  Success (no output).
[16:47:28] <LangerJan> markand: check back when to use _exit, when you're using some sort of forking, where it might be applicable
[16:47:29] <fizzie> ,clang paste
[16:47:33] <candide> fizzie: https://0x0.st/-ReZ.txt
[16:47:57] <fizzie> Heh, candide's auto-added `return 0;` made that example even sillier.
[16:48:17] <jezebel> hehe
[16:50:00] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[16:50:27] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[16:50:42] <linguist> Ohhhh, now I got a glimpse of how the cc command to the bot works
[16:50:57] <fizzie> C11 7.22.4.4p2: "If a program calls the `exit` function more than once, or calls the `quick_exit` function in addition to the `exit` function, the behavior is undefined." So careful with at_exit / at_quick_exit handlers that might themselves try to exit.
[16:51:27] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[16:51:34] <linguist> ,cc -Wunreachable-code-return return -1;
[16:51:35] <candide> linguist: gcc: error: unrecognized command-line option '-Wunreachable-code-return'; did you mean '-Wunreachable-code'?
[16:51:41] <linguist> ,clang paste
[16:51:45] <candide> linguist: https://0x0.st/-ReZ.txt
[16:51:48] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[16:52:05] <linguist> ,cc -Wunreachable-code return -1;
[16:52:07] <candide> linguist:  Exit 255
[16:52:12] <linguist> ,clang paste
[16:52:16] <candide> linguist: https://0x0.st/-ReZ.txt
[16:52:40] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:87f3:869a:3aa:dfd5) (Quit: Leaving)
[16:52:57] <linguist> No I didn't
[16:53:06] <linguist> Never mind
[16:55:32] <fizzie> Don't mix ,cc and ,clang like that.
[16:55:41] <dave0> sorry i can't understand why there is exit and quick_exit ?
[16:56:25] <dave0> fizzie: is there a rationale in the standard about it?
[16:56:40] <fizzie> (I did ,clang mostly because it's generally speaking got more warning flags, plus it's got -Weverything which is convenient for "I think there's a warning for this but I can't remember what the flag is" situations.)
[16:57:00] <linguist> I apologize, fizzie 
[16:58:00] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[16:58:10] <fizzie> dave0: quick_exit was added by C11, and the C11 rationale document never materialized (as far as I know), so there wouldn't be. But you can check out http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1327.htm for the proposal that suggested it for context.
[16:58:12] <candide> Title of fizzie's link: Abandoning a Process
[16:58:36] <dave0> thanks i'll have a look
[16:58:59] <fizzie> tl;dr it's C++'s fault.
[16:59:17] <dave0> lucky we love c++
[17:01:19] *** Quits: cm007magnum (~Rheanna@101.91.232.166) (Remote host closed the connection)
[17:03:36] *** Joins: cm007magnum (~Rheanna@218.78.79.129)
[17:03:52] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:04:14] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:05:00] *** Quits: Chip1972 (~Chip1972@186.206.217.247) (Quit: Leaving)
[17:08:11] <markand> yeah and now we will have dozens of [[foo]] in our code as well
[17:08:12] *** Joins: Chip1972 (~Chip1972@186.206.217.247)
[17:08:17] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e) (Ping timeout: 250 seconds)
[17:09:23] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[17:09:38] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[17:10:14] <swinnenb> better than __attribute__((__foo__))?
[17:11:44] <markand> does n2607 addresses the warning whan passing T** to a const T * const * argument? (which C++ explicitly allows but C emits a warning)
[17:13:02] <markand> swinnenb, honestly I don't care about attributes, it's just that we already have _Noreturn (while C++ has [[noreturn]] for a while) so we have mixed keywords which could be made attributes since a long time 
[17:13:23] <markand> I just hope C++ craziness constexpr will never make in 
[17:14:21] *** Joins: tahc (~tahc@c-24-30-27-91.hsd1.ga.comcast.net)
[17:14:39] <tahc> Is there a library for C that lets me do tr, grep, or regex like in perl?
[17:17:03] *** Quits: magla (~gelignite@55d4d56a.access.ecotel.net) (Quit: Stay safe!)
[17:17:06] <jezebel> chatting backwards? :D
[17:20:11] <slidercrank> he must be an Arab
[17:22:14] <omegatron> tahc: try pcre or pcre2
[17:23:25] <Learath2> tahc: not that I know of, but tr is simple enough to do by hand, grep sans regex is just strstr, and for regex you can use POSIX, glib or PCRE
[17:24:13] *** Quits: tahc (~tahc@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Client closed)
[17:25:10] <fizzie> I don't think the N2607 wording changes affect the `T**` to `const T * const *` case. There's no pointer-to-array type involved in that. The example is about passing an argument of type `float (*)[N]` to a function expecting a `const float (*)[N]`.
[17:25:12] <fizzie> And the earlier N1923 explicitly calls that out: "-- this is different to converting pointers to pointers to types with and without qualifiers, e.g. -- T** to -- const T** -- is unsafe because there is an intermediate pointer which can be manipulated -- [which] is not possible for pointers to -- arrays, where there is no such double indirection (and which are more similar to pointers to structs)."
[17:26:08] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[17:26:17] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[17:26:25] *** Joins: Klinda (~superleag@user/klinda)
[17:26:28] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:28:22] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:9c2a:d7d7:4493:e837) (Quit: Leaving)
[17:28:48] <fizzie> Heh, I hadn't realized someone's actually written a C23 proposal for `constexpr`.
[17:29:43] <Learath2> mh, constexpr doesn't sound like an awful idea to me
[17:33:10] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[17:34:08] *** Joins: torstenvl (~torstenvl@2601:14b:200:1e9c:88b7:c4e:c5db:a214)
[17:34:39] *** Joins: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com)
[17:36:28] *** Joins: bindu (~bindu@user/bindu)
[17:37:24] *** Quits: torstenvl (~torstenvl@2601:14b:200:1e9c:88b7:c4e:c5db:a214) (Remote host closed the connection)
[17:39:36] *** Joins: quartz (~quartz@user/quartz)
[17:41:41] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:42:19] *** Quits: linguist (~autistic@user/linguist) (Ping timeout: 250 seconds)
[17:42:24] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[17:44:19] <markand> I can't believe n2712
[17:44:29] *** Quits: supajerm_ (~supajerm@gateway/vpn/pia/supajerm) (Ping timeout: 250 seconds)
[17:45:05] <markand> Learath2, sure, then consteval, constinit and add yet more const keywords!
[17:45:18] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[17:46:16] *** Quits: extern (~archer@37.142.173.109) (Quit: WeeChat 3.3)
[17:46:17] <kplant> #include <stdconstexpr.h> for the friendly names of course!
[17:47:54] *** Joins: nyah (~nyah@94.6.71.219)
[17:49:48] *** Joins: Nselm (~Nselm@p200300d56f24d7fc990cbcbf196d40ce.dip0.t-ipconnect.de)
[17:53:00] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 265 seconds)
[17:55:07] *** Joins: brad_mssw (~bhouse@2620:134:c001:100:7d7b:371b:e5d2:c5ed)
[17:55:56] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:85bc:764e:7689:fb9f)
[17:56:03] *** Joins: LucaTM (~LucaTM@user/lucatm)
[17:59:13] *** Quits: chair1 (~chair1@187.109.18.204) (Ping timeout: 250 seconds)
[18:00:00] <Learath2> Well if there is a better way to introduce the functionality without a new keyword that's great. I await your proposals
[18:00:57] *** Joins: constxd (~brad@192.75.101.164)
[18:02:59] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 265 seconds)
[18:03:22] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:03:47] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[18:03:57] <markand> C does not need constexpr, it's already crazy in C++
[18:04:12] <markand> each new C++ versions comes with hundreds of papers "add constexpr to foo"
[18:04:12] *** Joins: linguist (~autistic@user/linguist)
[18:04:29] *** Joins: bindu (~bindu@user/bindu)
[18:04:41] <markand> honestly I don't even get the feature at first, the compiler should be smart enough for all that stuff
[18:06:57] *** Joins: mimmy (~mimmy@72.142.88.18)
[18:08:13] <nomagno> Some things, like whether an expression is supposed to be evaluated at runtime or compile time, are definitely not an intent the compiler can infer in most cases
[18:11:28] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[18:14:51] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[18:18:58] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com) (Read error: Connection reset by peer)
[18:21:50] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 265 seconds)
[18:22:22] *** Joins: Atque (~Atque@user/atque)
[18:23:16] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:23:55] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[18:26:11] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 265 seconds)
[18:26:19] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[18:26:22] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:26:22] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:26:22] *** Joins: wroathe (~wroathe@user/wroathe)
[18:27:55] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:4ee:8c8e:69d7:47f4)
[18:27:55] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:4ee:8c8e:69d7:47f4) (Changing host)
[18:27:55] *** Joins: skapata (~Skapata@user/skapata)
[18:28:02] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: ttyl)
[18:28:25] *** Joins: rsjw (~quassel@user/rsjw)
[18:29:10] *** Joins: mimmy (~mimmy@72.142.88.18)
[18:35:38] *** Quits: zalt (~zalt@user/zalt) (Ping timeout: 246 seconds)
[18:36:03] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[18:36:27] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com)
[18:38:34] *** Joins: cabox (~ee@38.91.106.96)
[18:39:40] *** Quits: cabox (~ee@38.91.106.96) (Client Quit)
[18:41:29] *** Quits: cm007magnum (~Rheanna@218.78.79.129) (Remote host closed the connection)
[18:43:00] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[18:44:21] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[18:49:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[18:52:29] *** Quits: aniruddha (uid340443@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:55:13] <sham1> C doesn't need constexpr? I mean sure, but it'd be nice to actually have a const first
[18:55:25] <sham1> A const that actually does what it's supposed to do
[18:55:52] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[18:58:24] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[18:58:36] <pragma-> quick_exit skips the atexit()-registered functions
[19:00:11] *** Quits: begriffs (~begriffs@user/begriffs) (Ping timeout: 265 seconds)
[19:01:34] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:04:49] *** Joins: aniruddha (uid340443@ilkley.irccloud.com)
[19:04:49] *** Quits: alch (~alch@151.36.14.194) (Read error: Connection reset by peer)
[19:06:31] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:06:31] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:06:31] *** Joins: wroathe (~wroathe@user/wroathe)
[19:08:33] *** Quits: dfip^ (~dfip@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[19:08:57] *** Joins: alch (~alch@151.34.3.0)
[19:09:10] *** Joins: torstenvl (~torstenvl@2600:1003:b100:9afb:cc20:aaaf:d0d7:28be)
[19:10:00] *** Parts: koon (johan@91.231.153.182) ()
[19:11:37] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 265 seconds)
[19:11:42] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:13:02] *** Joins: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1)
[19:13:02] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[19:13:36] *** Joins: System_Error (~SystemErr@user/systemerror)
[19:13:39] *** Quits: torstenvl (~torstenvl@2600:1003:b100:9afb:cc20:aaaf:d0d7:28be) (Ping timeout: 268 seconds)
[19:15:32] *** Quits: Nselm (~Nselm@p200300d56f24d7fc990cbcbf196d40ce.dip0.t-ipconnect.de) (Quit: Client closed)
[19:17:28] *** Joins: magla (~gelignite@55d4d56a.access.ecotel.net)
[19:20:22] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:20:41] *** Joins: bindu (~bindu@user/bindu)
[19:22:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[19:24:06] *** Joins: Klinda (~superleag@user/klinda)
[19:24:15] *** Joins: seninha (~seninha@user/seninha)
[19:24:35] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[19:24:46] *** Joins: strajder (~strajder@user/strajder)
[19:26:41] *** Joins: mimmy (~mimmy@72.142.88.18)
[19:27:11] *** Quits: linguist (~autistic@user/linguist) (Ping timeout: 250 seconds)
[19:29:59] *** Quits: quartz (~quartz@user/quartz) (Ping timeout: 265 seconds)
[19:30:30] *** Joins: quartz (~quartz@user/quartz)
[19:30:30] *** Quits: quartz (~quartz@user/quartz) (Client Quit)
[19:31:26] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[19:31:30] *** Joins: pulse (~pulse@user/pulse)
[19:31:33] *** Joins: quartz (~quartz@user/quartz)
[19:33:38] *** Joins: cm007magnum (~Rheanna@61.171.69.141)
[19:35:33] *** Joins: kuoi (~kuoi@109.175.166.61)
[19:35:58] *** Joins: rgrinberg (~textual@152.231.136.22)
[19:37:41] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[19:39:34] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:39:34] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:39:34] *** Joins: wroathe (~wroathe@user/wroathe)
[19:40:13] *** Quits: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1) (Remote host closed the connection)
[19:40:27] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Remote host closed the connection)
[19:40:29] *** Joins: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1)
[19:40:55] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[19:40:58] *** Joins: derjanni (~Hans@ip-88-153-100-48.hsi04.unitymediagroup.de)
[19:41:42] *** Quits: derjanni (~Hans@ip-88-153-100-48.hsi04.unitymediagroup.de) (Client Quit)
[19:44:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 246 seconds)
[19:44:37] *** Quits: topside_ (~topside@ip68-226-238-34.lf.br.cox.net) (Read error: Connection reset by peer)
[19:45:10] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:45:53] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:48:43] *** Quits: brad_mssw (~bhouse@2620:134:c001:100:7d7b:371b:e5d2:c5ed) (Quit: Leaving)
[19:52:17] *** Quits: Pjerky (~Pjerky@81-234-143-135-no58.tbcn.telia.com) (Ping timeout: 246 seconds)
[19:52:33] *** Joins: masterbuilder (~user@user/masterbuilder)
[19:56:02] *** Quits: asd (~noname@user/asd) (Ping timeout: 240 seconds)
[19:57:26] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Quit: quit)
[19:57:41] *** Joins: Zenton (~user@user/zenton)
[19:58:23] *** Joins: Pjerky (~Pjerky@81-234-143-135-no58.tbcn.telia.com)
[20:00:32] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[20:03:50] *** Joins: Richard_Cavell (uid165693@ilkley.irccloud.com)
[20:04:25] *** Joins: superdupond (~Kev@2a01cb0400149f00a9a1e81531558137.ipv6.abo.wanadoo.fr)
[20:07:01] *** Quits: kuoi (~kuoi@109.175.166.61) (Remote host closed the connection)
[20:09:38] *** Joins: ian| (~ian|@cpe-104-228-101-152.stny.res.rr.com)
[20:09:56] *** Joins: kuoi (~kuoi@109.175.166.61)
[20:10:41] *** Joins: chasmo77 (~chas77@71.63.241.168)
[20:13:58] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[20:14:38] *** Joins: dohtem (uid524096@user/dohtem)
[20:18:16] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[20:18:19] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 265 seconds)
[20:21:20] *** Quits: cm007magnum (~Rheanna@61.171.69.141) (Remote host closed the connection)
[20:22:52] *** Joins: cm007magnum (~Rheanna@218.78.79.129)
[20:24:05] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[20:24:23] *** Quits: i336 (~i336@121.217.2.74) (Ping timeout: 250 seconds)
[20:24:26] *** Quits: Alhazred (~Alhazred@86.106.74.39) (Ping timeout: 256 seconds)
[20:25:17] *** Joins: i336 (~i336@121.216.192.114)
[20:32:05] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637)
[20:32:57] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[20:33:05] <Budd> Is there a tool (on Linux) that can calculate the maximum stack size needed by a thread (given a simple program structure)?
[20:33:50] <floatcomplex> sort of
[20:33:53] *** Joins: Macuser (~Macuser@216.30.159.201)
[20:35:00] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:c95:5e78:2621:2637) (Ping timeout: 260 seconds)
[20:35:16] <floatcomplex> gcc -fstack-usage can output a file that has a list of functions and the stack size they need, if it's known at compile time
[20:35:31] <floatcomplex> you'd have to combine those with call graph info to figure out the worst case for a given thread
[20:35:35] <Budd> Sounds like what I need - thanks.
[20:35:39] *** Joins: linguist (~autistic@user/linguist)
[20:36:02] *** Joins: Arw (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr)
[20:36:28] <Budd> My call graph is extremely simple - I don't think I ever stack up more than three frames.
[20:36:41] <floatcomplex> and obviously never use alloca() or c99 VLAs
[20:36:49] <floatcomplex> if you're trying to have any guarantees about this
[20:36:50] <Budd> right.
[20:36:52] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:37:31] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[20:38:06] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[20:38:06] <floatcomplex> you can also compile with -Wframe-larger-than= and give it a value that is your known smallest stack size guarantee divided by the depth of the call graph if you know it
[20:38:45] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[20:38:57] *** TuxKruger[m] is now known as Kruger[m]
[20:39:12] <Budd> I guess I'm not sure about the stack usage of standard library calls, though most of the platform-specific stuff (RP2040) should be tiny, if not optimized out entirely.
[20:41:22] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 260 seconds)
[20:41:29] *** Joins: brad_mssw (~bhouse@jax2fw001.corp.cologix.net)
[20:41:50] *** Quits: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1) (Ping timeout: 268 seconds)
[20:42:00] *** Quits: the_lanetly_052_ (~the_lanet@185.30.88.43) (Ping timeout: 256 seconds)
[20:42:16] *** Joins: begriffs (~begriffs@user/begriffs)
[20:42:35] <floatcomplex> you'd be surprised
[20:42:36] <Budd> On second thought, since the default stack size for the Pico is 2k (out of 240k RAM), perhaps I should just not worry about it.
[20:42:53] *** Joins: mimmy (~mimmy@72.142.88.18)
[20:43:14] <Budd> I'm frequently surprised. It's one of the great joys of my amateur status.
[20:43:53] <floatcomplex> Budd: if you're not switching your stack pointer from msp to psp and providing explicit stack space for interrupt handlers, or some rtos is doing this for you, then all of your thread stacks have to be large enough to also handle the stack frame of the largest interrupt handler
[20:44:01] <floatcomplex> which could definitely be > 2 k
[20:45:07] <floatcomplex> if you switch the stack pointer for your code, then each of your thread stacks only needs like an extra 48 bytes or something like that on cortex-m0+ (104 bytes on cortex-m4 assuming the fpu is enabled) for stacking of the registers
[20:45:18] <Budd> Good to think about; I'm not using an RTOS, but I do include tinyusb, which installs an interrupt handler of unknown (to me) size.
[20:45:41] *** Joins: Guest48 (~Guest48@197.211.61.16)
[20:45:42] <floatcomplex> afaik all tinyusb's interrupt handler does is set flags that are then handled outside the interrupt handler so it should be quite small
[20:46:50] <floatcomplex> the tradeoff is the usb bus is idle a lot more of the time, so the peak throughput is going to be significantly lower, like 20-30% in a naive test
[20:47:04] *** Parts: ian| (~ian|@cpe-104-228-101-152.stny.res.rr.com) ()
[20:47:11] <floatcomplex> vs a usb implementation that sends the next block of data within the interrupt handler itself
[20:48:23] <Budd> Really? I had noticed that I was unable to push through anything line 12MBps as a CDC device, but I assumed that was due to small packets.
[20:48:39] *** Quits: Guest48 (~Guest48@197.211.61.16) (Quit: Client closed)
[20:49:11] <floatcomplex> Budd: 12 MBps translates to 1.2 Mbyte/s (because it's 10 bits per byte) and i can hit about 1.15 MB/s with an interrupt-based usb stack, whereas tinyusb tops out around 0.7-0.8 MB/s iirc
[20:49:13] *** Joins: mahmutov (~mahmutov@37.155.41.41)
[20:49:34] <floatcomplex> on a samd51 though
[20:49:43] <floatcomplex> no idea what the rp2040 can do
[20:49:57] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:50:38] <Budd> I've written my code with (I think) no busy waits, so it should call the usb task every few microseconds.
[20:52:32] <Budd> I'll be able to actually measure that soon.
[20:52:43] <floatcomplex> i really should get one of those chips and beat the hell out of it
[20:52:59] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[20:53:01] <floatcomplex> the samd21 and samd51 are hard to beat for convenience though
[20:53:47] <floatcomplex> all i know about the rp2040 is that it's like someone glued two samd21's together and then sat down with a lawyer and said how can we make libgcc as sketchy as possible
[20:53:55] <Budd> The documentation is excellent. I haven't found any mystery/undocumented behavior yet.
[20:54:39] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[20:55:09] <floatcomplex> Budd: does it require you to do rtos bs in order to utilize both cores? or is there something much simpler at play
[20:57:12] <Budd> My code just calls multicore_launch_core1 (core1_entry);. No other setup.
[20:57:38] <Budd> I've never used an RTOS, so I don't know what RTOS BS looks like.
[20:57:48] *** Quits: slidercrank (~slidercra@user/slidercrank) (Quit: Why not ask me about Sevastopol's safety protocols?)
[21:00:38] <floatcomplex> worse
[21:02:07] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[21:03:10] <floatcomplex> if the thread stacks are only 2 kB by default then there must be some code somewhere in the sdk that is switching core 0's stack pointer from msp to psp, and providing a third stack for interrupt handling
[21:04:14] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 265 seconds)
[21:05:56] *** Quits: Samian (~s@user/samian) (Ping timeout: 245 seconds)
[21:07:54] *** Joins: mrig (~mrig@user/mrig)
[21:08:04] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[21:08:51] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:09:02] *** Quits: lovelace (~Elspeth@2.24.23.175) (Quit: Konversation terminated!)
[21:09:23] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 264 seconds)
[21:10:19] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 250 seconds)
[21:11:26] *** Quits: cm007magnum (~Rheanna@218.78.79.129) (Remote host closed the connection)
[21:14:36] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[21:15:14] *** Quits: deflected (~deflected@user/deflected) (Quit: rr)
[21:15:23] <Budd> I can't tell from a quick grep of rp2040 source, though I'd be curious to know how much stack is reserved for IRQs.
[21:16:29] *** Parts: Kruger[m] (~tuxkruger@2001:470:69fc:105::fa18) ()
[21:17:55] *** Joins: deflected (~deflected@user/deflected)
[21:19:46] *** Joins: cart_man (~rynot@host-78-144-121-1.as13285.net)
[21:21:00] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[21:21:03] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:21:14] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[21:21:47] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:21:56] *** Quits: katnis (uid15849@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:25:16] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[21:27:47] *** Joins: kissen (~kissen@mail.hacks.moe)
[21:27:47] *** Quits: kissen (~kissen@mail.hacks.moe) (Changing host)
[21:27:47] *** Joins: kissen (~kissen@user/kissen)
[21:27:58] *** Joins: mimmy (~mimmy@72.142.88.18)
[21:28:46] *** Quits: rgrinberg (~textual@152.231.136.22) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:28:53] *** Quits: brad_mssw (~bhouse@jax2fw001.corp.cologix.net) (Quit: Leaving)
[21:31:10] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[21:35:50] *** Joins: Samian (~s@user/samian)
[21:36:23] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 264 seconds)
[21:39:52] *** Quits: avarab (avar@vm.nix.is) (Quit: Lost terminal)
[21:40:08] *** Joins: avar (avar@vm.nix.is)
[21:41:30] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 256 seconds)
[21:44:01] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[21:44:59] *** Quits: varaindemian (uid73404@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:49:03] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 268 seconds)
[21:54:07] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[21:59:01] *** Quits: kuoi (~kuoi@109.175.166.61) (Remote host closed the connection)
[21:59:38] *** Quits: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net) (Ping timeout: 256 seconds)
[22:00:16] *** Joins: aliosablack (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[22:01:24] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[22:01:24] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (Remote host closed the connection)
[22:03:33] *** Joins: cm007magnum (~Rheanna@101.89.150.168)
[22:04:20] *** Joins: kdc (~kdc@196.211.197.159)
[22:04:54] *** Joins: kuoi (~kuoi@109.175.166.58)
[22:05:28] *** Quits: kuoi (~kuoi@109.175.166.58) (Remote host closed the connection)
[22:05:30] *** Joins: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net)
[22:06:16] <linguist> Heyy, is there anything wrong in setting SO_BINDTODEVICE to an socket of AF_PACKET domain, SOCK_RAW type and ETH_P_RAW protocol? 
[22:06:29] *** Quits: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net) (Read error: Connection reset by peer)
[22:06:35] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 265 seconds)
[22:07:10] <linguist> I'm asking because I am unable to write to the socket and I've seen some example codes doing it in a different way, so I'm suspecting this might not be correct 
[22:07:20] *** Joins: jdurand (~jdurand@user/jdurand)
[22:07:55] *** Joins: kuoi (~kuoi@109.175.166.58)
[22:08:05] *** Joins: mimmy (~mimmy@72.142.88.18)
[22:09:07] <fizzie> Says so right there at least in my socket(7) man page. "SO_BINDTODEVICE -- Note that this works only for some socket types, particularly AF_INET sockets. It is not supported for packet sockets (use normal bind(2) there)."
[22:09:17] *** Joins: chair1 (~bbs@187.109.18.204)
[22:09:34] *** Joins: missogra (~missogra@dynamic-077-008-198-194.77.8.pool.telefonica.de)
[22:09:34] <linguist> Ohhh, I see 
[22:09:43] <sham1> So yes, there is something wrong with it
[22:09:58] <linguist> Is there a man page covering raw sockets in more detail?
[22:09:59] *** Quits: simon323 (~simon323@2409:8a34:46c:5830:3e:f157:aa65:f07) (Quit: simon323)
[22:10:37] <fizzie> There's packet(7), at least on this system.
[22:10:54] <linguist> I'll take a look, thanks!!
[22:11:08] <fizzie> (And there's an interface index in the `struct sockaddr_ll`, that might be what they meant by "use normal bind(2)".)
[22:11:43] *** Quits: Thedarkb1-Deskto (~Thedarkb@2001:bb6:b403:e042:b0b3:d263:4777:3209) (Read error: Connection reset by peer)
[22:12:13] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:b0b3:d263:4777:3209)
[22:12:38] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[22:13:32] <linguist> Ohhh, I saw this structure in one example I've found 
[22:13:48] <linguist> Thanks a lot again, fizzie 
[22:14:00] *** Joins: quartz (~quartz@user/quartz)
[22:15:55] *** Joins: bruda (~bruda@172.58.62.226)
[22:17:17] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[22:21:35] *** Joins: Klinda (~superleag@user/klinda)
[22:23:12] *** Joins: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net)
[22:23:30] *** Quits: missogra (~missogra@dynamic-077-008-198-194.77.8.pool.telefonica.de) (Ping timeout: 265 seconds)
[22:27:35] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Quit: This computer has gone to sleep)
[22:31:02] *** Joins: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net)
[22:31:02] *** Joins: BSaboia (~bsaboia@187.19.136.126)
[22:31:11] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Remote host closed the connection)
[22:31:41] *** Joins: slidercrank (~slidercra@user/slidercrank)
[22:38:29] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[22:39:23] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[22:40:14] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 268 seconds)
[22:40:34] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[22:41:08] *** Quits: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com) (Quit: leaving)
[22:41:25] *** Joins: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca)
[22:42:42] *** Quits: Muzer (~muzer@tim32.org) (Ping timeout: 260 seconds)
[22:42:49] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[22:43:29] *** Quits: xcm (~xcm@user/xcm) (Remote host closed the connection)
[22:43:46] *** Joins: xcm (~xcm@user/xcm)
[22:44:24] <chair1> Say I have a string `url` inside main.c and the its capacity is calculated inside options.c There's no way to statically initialize `url`, right? I'd need to at least calculate the capacity at options.h, right?
[22:44:51] *** Joins: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com)
[22:45:03] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:42] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[22:46:14] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[22:47:07] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:44] *** Joins: topside (~topside@ip68-226-238-34.lf.br.cox.net)
[22:48:27] *** Quits: aliosablack (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Quit: Leaving)
[22:48:40] <caze> There's probably a way, though your question is a bit vague.
[22:49:44] <caze> char url[] = "http://wahtever.com"; size_t url_len = sizeof url;
[22:51:09] <chair1> Yeah, I intended to word it as capacity because I build the URL as I parse argv inside options.c, so it starts small and I concatenate more stuff later
[22:51:37] *** Quits: cm007magnum (~Rheanna@101.89.150.168) (Remote host closed the connection)
[22:51:54] <chair1> The calculation would be a bunch of sizeof and sums inside preprocessor defines
[22:51:56] <caze> Well then you're not initializing url.
[22:52:24] <chair1> I intended as `char url[URL_CAPACITY] = {0};` or something
[22:52:47] <caze> Obviously you can't initialize the string at compile time if you don't know what the string is supposed to be, at compile time.
[22:52:54] <chair1> Then I would pass this `url` to a function of options.c
[22:53:11] <caze> I'm not sure what you're asking anymore.
[22:53:21] *** Joins: cm007magnum (~Rheanna@218.78.94.61)
[22:53:25] <caze> "There's no way to statically initialize `url`, right?"
[22:53:33] <caze> What are you asking there?
[22:54:03] *** Joins: Muzer (~muzer@tim32.org)
[22:56:36] *** Joins: Nistar (~Nistar@188.241.177.235)
[22:57:53] *** Joins: Bi1non (~8iIn0n@2a01:4b00:8e07:7900:aa4d:84b:c3c0:acbe)
[22:57:55] *** Joins: rgrinberg (~textual@200.5.63.76)
[22:58:16] *** Quits: jdurand (~jdurand@user/jdurand) (Quit: Leaving)
[22:59:24] <chair1> Ok, forget how I worded it. Say I have `char url[URL_CAPACITY] = {0};` inside main.c, but I can only calculate `URL_CAPACITY` inside options.c, like `#define URL_CAPACITY sizeof ("&param1=" - 1) + 8 + sizeof ("&param2=" - 1) + 13 [...]`
[22:59:53] *** Quits: Bi1non (~8iIn0n@2a01:4b00:8e07:7900:aa4d:84b:c3c0:acbe) (Client Quit)
[23:00:08] *** Joins: Bi1non (~8iIn0n@2a01:4b00:8e07:7900:aa4d:84b:c3c0:acbe)
[23:01:24] <caze> Just move the definition to options.c
[23:02:00] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:02:01] <fizzie> You can do `extern char url[];` in main.c, and define the actual array in options.c, together with the calculation. But you won't be able to have the size of the array, at least as a constant expression, in main.c.
[23:03:26] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[23:04:09] <fizzie> But from your description sounds rather conflicted -- "as I parse argv" vs. "a bunch of sizeof and sums inside preprocessor defines".
[23:04:28] <caze> What is the motivation for compile time calculation?
[23:04:29] *** Quits: alch (~alch@151.34.3.0) (Read error: Connection reset by peer)
[23:04:30] <topside> why not just define URL_CAPACITY as some sane fixed limit such as 2048?
[23:04:37] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[23:04:50] <caze> Just malloc to a reasonable starting point, and realloc if needed.
[23:05:17] <fizzie> By definition you can't statically allocate something with a length based on the contents of argv (no matter which file it's in), because the contents of argv are not static.
[23:05:26] <chair1> Good question. I wanted to avoid malloc'ing stuff, just arrays with fixed size
[23:06:25] <chair1> argv isn't copied as is to `url`, its options are parsed into things like &frontpaged=1 etc.
[23:06:30] *** Joins: dfip^ (~dfip@h50.174.139.63.static.ip.windstream.net)
[23:06:44] <topside> so why not just use a fixed maximum vs calculated maximum? 
[23:07:02] <caze> chair1: Can you determine an upper bound?
[23:07:09] <fizzie> Well, where were your `8` and `13` in that sum coming from? 
[23:07:10] <chair1> I like your idea topside , and I'll experiment with fizzie's extern thing
[23:07:10] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:07:10] *** Quits: Macuser (~Macuser@216.30.159.201) (Client Quit)
[23:07:59] <Red> malloc is just a tool at your disposal, use right tool for the job
[23:08:02] <topside> while URLs can "technically" be arbitrary length, in practice you'll find everyone staying below 2048 chars unless its an obscure use case
[23:08:05] <Red> s/use/use the/
[23:08:42] <fizzie> If your array needs to be a different length when the program is invoked as `./prog` than when it's invoked as `./prog foo bar`, it's by definition not fixed-size. If you're talking about computing an upper bound for the length, though, fair enough.
[23:08:43] <chair1> fizzie: For now they are manually set, but later I'll calculate them too using more sizeofs
[23:09:00] <chair1> Yeah, it has an upper bound
[23:09:01] <caze> sizeof isn't really the right way to calculate sizes anyway.
[23:09:02] *** Joins: Betal (~Betal@user/betal)
[23:09:12] <caze> lengths, that is.
[23:09:15] <Red> ^^^^^^^^^^^^^^^^^^
[23:09:18] *** Joins: alch (~alch@151.68.22.42)
[23:09:56] <fizzie> `char buf[sizeof "YYYY-mm-dd"]` can be a reasonable thing to do.
[23:10:01] <chair1> hmmmmmm, I thought that char == bytes? The problem with strlen is that I can't use them to, erhm, calculate sizes at compile time
[23:10:13] <fizzie> Though those `-1`s in that example should be outside the parentheses.
[23:10:27] <chair1> It's to ignore the '\0' of the strings
[23:10:35] <fizzie> Yes, but they should be outside the parentheses.
[23:10:44] <fizzie> Otherwise you're subtracting one from the pointer.
[23:10:50] <chair1> Ooooh I understood your point
[23:10:55] <topside> Right, but you'll likely be interested in both the size of the buffer/array as well as the length of the 'string' contained within it
[23:10:58] <chair1> Thanks for the warning
[23:11:37] <fizzie> ,cc printf("%zu %zu %zu", sizeof "just some long string", sizeof "just some long string" - 1, sizeof ("just some long string" - 1)); // compare
[23:11:39] <candide> fizzie: 22 21 8
[23:11:44] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[23:11:56] <caze> chair1: char *str = "hello world"; size_t str_len = strlen(str); This may still be calculated at compile time.
[23:11:58] <chair1> wooow
[23:12:39] <fizzie> It may be calculated at compile-time, but it's definitely not an integer constant expression, which makes it invalid to use for something like the size of an array with static storage duration.
[23:13:40] <chair1> I'll follow topside suggestion to just put an upper bound for now and I'll put an assert() inside options_to_url() to guarantee that url is big enough. Then I'll test the extern thing
[23:14:29] <caze> That's not really how assert is used.
[23:14:57] <caze> chair1: You might just be prematurely optimizing.
[23:15:11] <Red> this all sounds extremely overengineered
[23:16:06] <caze> chair1: https://godbolt.org/z/zE3MxvP8f
[23:17:06] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you tomorrow)
[23:17:09] <caze> chair1: It literally just calls printf with the the precalculated string length of 11.
[23:17:39] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr)
[23:18:15] <Red> allocating memory as needed will also avoid funny issues when your fixed buffer suddenly becomes too small
[23:18:24] *** Quits: Arw (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[23:18:58] *** Joins: Inline (~Inline@2a02:908:1252:7a80:7c12:e31e:34fb:c517)
[23:20:28] <Twix> caze, thats not the result i would hav expected. Last time(with gcc 6.x) i tried this, this resulted into a puts() call with a complete precalculated string o_O
[23:20:29] <chair1> Yeah, it's a bit overengineered and I'm avoiding malloc for no reason, but let's say the code is a proof-of-concept. Actually I'm anxious to finish it to show you all
[23:20:56] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 268 seconds)
[23:21:17] <rcf> chair1: what would you actually be testing with this assert, though? You can't verify that the buffer is large enough because by the time you add the required options you've already overrun it. 
[23:21:41] <Twix> but now i can't reproduce it :(
[23:22:03] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 250 seconds)
[23:23:05] <chair1> rcf: the caller would pass the estimated url size (say, 2048) as a parameter and the assert would compare it to URL_CAPACITY to guarantee it is big enough
[23:23:27] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: Leaving)
[23:23:34] <rcf> If it is merely an estimation, you guarantee nothing. 
[23:25:18] <chair1> If it is big, everything can fit, otherwise it may overrun but the assert will prevent it. The user can't use more than 40 bytes for search terms, e.g.
[23:25:31] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 250 seconds)
[23:25:41] <chair1> I got my answers, I'll show you the code soon
[23:26:47] *** Joins: jdurand (~jdurand@user/jdurand)
[23:26:52] <rcf> A better approach is to process the URL in a sane manner (i.e. not strcat) and return an error if it truncates. No need for anyone to guess, absolutely no chance of an overrun. 
[23:27:55] *** Joins: mimmy (~mimmy@72.142.88.18)
[23:28:08] <rcf> (there's also the fact that assert() is commonly disabled at build time for release builds) 
[23:28:48] <chair1> I'll read the rules to submit to ioccc, I now don't doubt my code is needlessly overengineered lol
[23:29:42] <caze> chair1: assert is more commonly used for things like checking if int is 32 bits.
[23:29:58] *** Joins: asd (~noname@user/asd)
[23:31:39] *** HardWall is now known as radnic
[23:32:08] *** Quits: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net) (Ping timeout: 265 seconds)
[23:36:39] *** Quits: Wulf (~Wulf@user/wulf) (Remote host closed the connection)
[23:37:15] *** Joins: Wulf (~Wulf@user/wulf)
[23:41:25] *** Quits: cm007magnum (~Rheanna@218.78.94.61) (Remote host closed the connection)
[23:42:29] *** Quits: aniruddha (uid340443@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:43:11] *** Joins: cm007magnum (~Rheanna@218.78.99.237)
[23:46:20] *** Joins: Guest42 (~Guest42@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[23:46:40] *** tar_xvf is now known as Guest81
[23:46:50] *** Quits: bruda (~bruda@172.58.62.226) (Ping timeout: 268 seconds)
[23:46:54] *** Quits: Guest81 (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[23:47:13] *** Joins: bruda (~bruda@172.58.62.226)
[23:47:13] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[23:47:13] *** tar_xvf is now known as Guest81
[23:47:27] *** Quits: jdurand (~jdurand@user/jdurand) (Quit: Leaving)
[23:47:47] *** Quits: cart_man (~rynot@host-78-144-121-1.as13285.net) (Quit: Konversation terminated!)
[23:49:38] *** Guest81 is now known as tar_xvf
[23:49:55] *** Joins: WilliamLeara_ (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[23:50:14] *** tar_xvf is now known as tar
[23:50:23] *** Joins: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1)
[23:50:39] *** tar is now known as Guest81
[23:50:49] *** Guest81 is now known as tar_xvf
[23:50:50] *** ChanServ sets mode: +o candide
[23:50:50] *** candide sets mode: +b *!~tar_xvf@*.amazonaws.com
[23:51:07] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Client Quit)
[23:51:09] *** Quits: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1) (Client Quit)
[23:51:18] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 260 seconds)
[23:51:19] *** Joins: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1)
[23:51:19] *** Quits: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1) (Client Quit)
[23:51:58] *** Joins: the (~the@2620:8d:8000:1044:b6ca:1ac:6dab:2ab1)
[23:53:09] *** Quits: Guest42 (~Guest42@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[23:57:22] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
