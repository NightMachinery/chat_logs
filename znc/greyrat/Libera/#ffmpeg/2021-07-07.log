[00:13:29] *** Quits: Terrence (~Terrence@097-085-185-009.biz.spectrum.com) (Ping timeout: 252 seconds)
[00:13:55] *** Joins: thebombzen (~thebombze@71.73.92.220)
[00:17:03] *** Joins: JesseH (~3252f234@ircip2.mibbit.com)
[00:18:04] <JesseH> Let's say I have a video that is a minute and I need it to be a black screen for 20 seconds then start, and the total length would then be 1:20, how could I accomplish this?
[00:19:24] <BtbN> generate a video with 20 seconds of nothing, and then concat the two
[00:19:43] *** Joins: Terrence (~Terrence@097-085-185-009.biz.spectrum.com)
[00:26:58] *** Joins: TheElixZammuto (~TheElixZa@151.74.108.237)
[00:28:51] *** Quits: Blacker47 (~Blacker47@user/blacker47) (Quit: Life is short. Get a V.90 modem fast!)
[00:31:07] <TheElixZammuto> Hi everyone, I'm trying to get a H264 stream to FFMPEG using DirectX11VA decoding, NV12/RGBA conversion and Rendering. The only problem is that about 50% of the frames are completely green (and if I got this correctly it should be because texture data is empty and the shader is converting it to green). I tried to check some patterns or outliers in
[00:31:08] <TheElixZammuto> frame metadata but I can't find anything. Can someone help me to debug this further?
[00:31:52] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[00:34:26] *** Quits: arcatech (~arcatech@user/arcatech) (Remote host closed the connection)
[00:35:29] *** Joins: arcatech (~arcatech@user/arcatech)
[00:36:23] *** Quits: Flabb (~Flabb@89.169.84.117) (Quit: Leaving)
[00:39:03] *** Joins: iive (~iive@87.119.101.204.client.entry.bg)
[00:39:18] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-263-107.w86-235.abo.wanadoo.fr) (Quit: The Lounge - https://thelounge.chat)
[00:40:57] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-263-107.w86-235.abo.wanadoo.fr)
[00:42:14] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[00:50:15] *** Quits: Fohsap (~Muimi@113.235.191.112) (Remote host closed the connection)
[00:58:01] <znf> TheElixZammuto, what is your end goal, out of curiosity?
[00:58:03] *** Quits: phisch (~phisch@ip1f10fb97.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[00:59:51] <JEEB> TheElixZammuto: I think green might be the value if stuff is set to zero (although chroma is -0.5 to 0.5
[00:59:57] *** Joins: phisch (~phisch@ip1f10fb97.dynamic.kabel-deutschland.de)
[01:00:13] <TheElixZammuto> I'm trying to port Moonlight-Stream (an open source platform for Game Streaming) to UWP platform. Moonlight uses a custom protocol for receiving video buffer. I have to receive the Decode Unit and render it into the screen
[01:01:00] <JEEB> not sure how much you can debug other than checking that the AVFrames you get are indeed with the d3d11 pix_fmt and that the sw_format is nv12?
[01:01:48] <JEEB> I know it's definitely possible since mpv has been doing d3d11va interop for a while :)
[01:02:19] <TheElixZammuto> If it does not change during decoding it should be it, since some frames are being rendered correctly
[01:02:36] <TheElixZammuto> Is that change during the process actually possible?
[01:02:47] <JEEB> ?
[01:03:10] <JEEB> also make sure that your decoding logic is not somehow giving you the wrong buffers https://lists.ffmpeg.org/doxygen/trunk/group__lavc__encdec.html
[01:03:46] <JEEB> but "rendering d3d11va decoded YCbCr surfaces with d3d11" is definitely a thing that's been done for quite a while now :)
[01:03:50] <JEEB> so it does work
[01:04:03] <JEEB> you now just need to figure out why your stuff doesn't work ;)
[01:04:27] *** Quits: user890104 (~Venci@quassel.slackwa.re) (Changing host)
[01:04:27] *** Joins: user890104 (~Venci@freemyipod/user890104)
[01:04:33] *** Quits: user890104 (~Venci@freemyipod/user890104) (Changing host)
[01:04:34] *** Joins: user890104 (~Venci@freemyipod/fmibot)
[01:04:43] *** Quits: user890104 (~Venci@freemyipod/fmibot) (Changing host)
[01:04:43] *** Joins: user890104 (~Venci@freemyipod/user890104)
[01:05:49] <JEEB> but yea, all green sounds like either zeroes or so
[01:07:03] <JesseH> What's a simple way to add 20 seconds of silence before a video?
[01:07:14] <JesseH> I tried using anullsrc but my implementation isnt working
[01:08:27] <JesseH> Trying to basically add 20 seconds of blank screen/no audio to the beginning of a video
[01:08:27] <JesseH> "ffmpeg -i one.webm -i anullsrc -t 20 -filter_complex "tpad=start_duration=20s" -map 0 -f webm final.webm"
[01:09:31] <blerd> when you say no audio. Do you mean silence with an audio track?  or no audio track?
[01:10:49] <JesseH> Well im using tpad to add 20 seconds of no video, but if I only use tpad the audio still starts playing. So I need to basically wait 20 seconds before the audio should start
[01:11:52] *** Joins: Buster_ (~Buster@buster-net.ru)
[01:13:02] *** Joins: lille_bitte_ven (~LilleVen@83-91-97-60-cable.dk.customer.tdc.net)
[01:19:06] <TheElixZammuto> @JEEB I can confirm that both valid and invalid frames are indeed D3D11 and when transferring to memory the sw format is NV12
[01:19:31] <TheElixZammuto> But I also noticed that now after a few seconds I get AVERROR_INVALIDDATA as an error on avcodec_send_packet
[01:20:10] *** Quits: Aelius (~Aelius@user/aelius) (Ping timeout: 240 seconds)
[01:20:56] *** Quits: Keshl (~Purple@user/Keshl) (Ping timeout: 265 seconds)
[01:21:51] <blerd> Sounds like you need to add 20 seconds of silence to go with the 20 seconds of no video then.
[01:22:58] *** Quits: Volgaar (~volgaar@104.66.13.93.rev.sfr.net) (Ping timeout: 240 seconds)
[01:23:56] <blerd> adelay filter should be able to do that.
[01:29:00] <Terrence> JEEB for some reason using , codec = avcodec_find_encoder(fmt_ctx->streams[0]->codecpar->codec_id); was unsuccessful
[01:29:48] *** Joins: arcatech (~arcatech@user/arcatech)
[01:31:33] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[01:43:20] *** Joins: arcatech (~arcatech@user/arcatech)
[01:45:14] *** Joins: gpeskens (~gpeskens@2001:985:7aa4:1:f1b0:e710:2007:a6b0)
[01:52:34] *** Quits: TheElixZammuto (~TheElixZa@151.74.108.237) (Quit: Client closed)
[01:58:08] *** Quits: phisch (~phisch@ip1f10fb97.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[02:00:00] *** Joins: phisch (~phisch@ip1f10fb97.dynamic.kabel-deutschland.de)
[02:02:55] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[02:11:53] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[02:13:23] *** Joins: arcatech (~arcatech@user/arcatech)
[02:14:44] *** Joins: linjie (~linjie@58.247.210.251)
[02:18:58] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 240 seconds)
[02:21:52] *** Joins: TheElixZammuto (~TheElixZa@151.74.108.237)
[02:22:08] *** Quits: TheElixZammuto (~TheElixZa@151.74.108.237) (Client Quit)
[02:22:22] <danergo> hi! does anyone have an idea on why `av_write_frame` calls my custom write function only @I frames? (with a buffer that contains all non-I frames between current I-frame and previous one)
[02:23:01] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[02:23:28] <BtbN> Might just be how the encoder works
[02:23:33] *** Joins: Atsuko_ (~x@94.242.250.86)
[02:23:40] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-263-107.w86-235.abo.wanadoo.fr) (Quit: The Lounge - https://thelounge.chat)
[02:23:51] *** Quits: Atsuko_ (~x@94.242.250.86) (Remote host closed the connection)
[02:24:17] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-263-107.w86-235.abo.wanadoo.fr)
[02:26:31] <DeHackEd> *muxer
[02:29:52] <Terrence> So I am trying to encode the frames of a WAVE file into a packet
[02:30:31] <Terrence> But as I am trying to determine which AVCodecID I should use
[02:30:35] <Terrence> I'm lost on what it should be
[02:31:13] <Terrence> I tried using the codec ID from the format context that I have but apparently it was null even though that is where I have opened the audio file to
[02:31:20] <Terrence> Does anyone happen to know what I should be using for the ID?
[02:31:56] <BtbN> The codec ID wasn't null...
[02:32:09] <BtbN> some of the various pointers you are derefing on the way there was
[02:32:15] <BtbN> Consult with your debugger for more info
[02:32:40] <Terrence> Okay, i'm thinking it may have been streams but I'll check
[02:37:03] <danergo> BtbN: "might just be how the encoder works" <-- this is for me? :)
[21:04:10] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[21:04:36] *** Joins: MrZeus_ (~MrZeus@2a02:c7f:a0aa:4400:cea:dc7f:e56d:2899)
[21:05:12] *** Server sets mode: +Ccnt 
[21:07:48] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[21:24:02] *** Joins: linjie (~linjie@58.247.210.251)
[21:25:30] *** Quits: linjie (~linjie@58.247.210.251) (Remote host closed the connection)
[21:26:49] *** Joins: linjie (~linjie@58.247.210.251)
[21:30:58] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 246 seconds)
[21:36:56] <JEEB> danergo: well it depends on various things, for example if you have b-frames the decoder most likely will buffer enough frames to be able to handle frame reordering
[21:36:59] <JEEB> and threading
[21:37:13] <JEEB> (frame threaded decoding VS slice threaded decoding)
[21:37:33] <JEEB> if you want lowest latency (will be slower than frame based), set slice threading in your client
[21:37:39] <JEEB> (which may be VLC or whatever)
[21:47:12] *** Quits: timothy (~timothy@redhat/timothy) (Quit: ZNC 1.8.2 - https://znc.in)
[21:49:06] *** Joins: timothy (~timothy@redhat/timothy)
[21:50:49] *** Joins: linjie (~linjie@58.247.210.251)
[21:52:01] *** Joins: someuser (~user@41.238.161.8)
[21:55:07] *** Quits: linjie (~linjie@58.247.210.251) (Ping timeout: 246 seconds)
[21:55:25] *** Joins: adanwan_ (~adanwan@gateway/tor-sasl/adanwan)
[21:56:11] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 244 seconds)
[22:03:05] *** Quits: Fohsap (~Muimi@60.20.216.178) (Remote host closed the connection)
[22:04:20] *** Joins: dreamon (~dreamon@p57a4c41a.dip0.t-ipconnect.de)
[22:08:52] *** Joins: blerd_ (~blerd@71.182.169.24)
[22:10:38] *** Quits: blerd (~blerd@71.182.169.24) (Ping timeout: 252 seconds)
[22:10:48] *** blerd_ is now known as blerd
[22:13:35] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 252 seconds)
[22:28:34] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[22:31:17] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Read error: Connection reset by peer)
[22:32:02] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[22:35:18] *** Quits: TanoMarcelo (~TanoMarce@179.63.242.126) (Client Quit)
[22:37:58] *** Joins: bittermelons (~bittermel@cpe-174-100-53-99.neo.res.rr.com)
[22:47:07] *** Joins: Terrence (~Terrence@097-085-185-009.biz.spectrum.com)
[22:48:07] <roxlu> hey! does someone knows if it's possible to reencode a .h264 file in such a way that each frame generates one nal? currently some frames are stored in multiple nals and I'm feeding these into a VideoToolbox (mac) decoder which fails to decode them. I think this has to do with the way I pass my nals into the decoder.
[22:48:36] <JEEB> you could first test it with the FFmpeg VT wrapper?
[22:48:49] <JEEB> is this stuff btw interlaced?
[22:48:56] <JEEB> since I hear Apple stopped supporting that altogether more or less
[22:49:00] <JEEB> esp. on iOS
[22:49:11] <roxlu> JEEB: I think ffmpeg collects all nals per frame before handing them over to the decoder
[22:49:24] <JEEB> that's possible, that's why I recommended testing and then checking?
[22:49:35] <roxlu> it works fine with ffplay at least
[22:49:42] <JEEB> with VT?
[22:49:55] <roxlu> oh, yeah good point ^.^
[22:50:08] <roxlu> but I do have another h264 file which can be decoded on iOS.
[22:50:29] <roxlu> .. another way would be to check if that file contains multiple nals per frame. .. does ffprobe has a feature for that?
[22:50:46] <JEEB> what is a frame? coded data is in packets
[22:51:02] <JEEB> then a packet usually contains a single coded frame
[22:51:07] <JEEB> (after decoding)
[22:51:57] <JEEB> but I think the simplest is to run -show_packets -select_streams v and check the sizes of AVPackets? :P
[22:52:10] <JEEB> but really
[22:52:11] <roxlu> thanks JEEB I'll have a look
[22:52:13] <JEEB> `ffmpeg -hwaccels`
[22:52:19] <JEEB> then see that you have videotoolbox there
[22:52:39] <JEEB> `ffmpeg -v verbose -hwaccel NAME_OF_HWACCEL_HERE -i INPUT -map 0:v -f null -`
[22:53:21] <JEEB> I expect the name of hwaccel to be videotoolbox, but by listing you can see what are enabled in your build
[22:53:36] <JEEB> then just doing that will see if decoding that stream with the FFmpeg VT wrapper works
[22:54:53] <roxlu> ok thanks, going to try that
[22:56:05] <JEEB> basically after you verify that (it works: yes|no), you can start looking at stuff like sizes of the packets passed by adding av_log stuff into the VT module or so
[22:56:20] <JEEB> if -debug_ts output on ffmpeg.c level looks similar enough packet size wise
[22:56:40] <JEEB> (this is if it works, if it doesn't well that's it then :P)
[22:58:54] <roxlu>  Reinit context to 1280x720, pix_fmt: videotoolbox_vld <== seems to work
[22:59:52] <JEEB> if it doesn't throw errors while it's decoding then most likely it does indeed work
[23:00:03] <JEEB> the first thing that I noted is that you can check -debug_ts output
[23:00:06] <JEEB> which should spam a lot
[23:00:11] <roxlu> so this tells me that VT works .. but not if my thoughts are correct/wrong. that's why I'm trying to figure out how to re-encode in such a way that each picture generates only one frame (and the pps/sps ofc.)
[23:00:23] <JEEB> yes, so it tells you that there is some difference
[23:00:31] <JEEB> but that at least that specific stream should work with VT
[23:00:32] <JEEB> :P
[23:01:01] <JEEB> well if you output a single slice and don't split things then most likely you get a single NAL, no?
[23:01:02] *** Joins: anotheruser (~user@213-248-112-35.teliacarrier-cust.com)
[23:01:14] <JEEB> I have no idea how encoders decide to split to multiple NALs or not
[23:01:15] <JEEB> but really
[23:01:19] <JEEB> check the packet sizes fed to the decoder
[23:01:29] <JEEB> if those are the same that you are getting then the decoding logic is doing something
[23:01:36] <roxlu> yeah
[23:01:37] <JEEB> if they are not the same, start analyzing them :P
[23:01:50] <roxlu> .. I think I'm at that point already ^.^
[23:02:01] <JEEB> it didn't sound like you had checked that
[23:02:04] <JEEB> :P
[23:02:09] <roxlu> I recall for a while ago that VT was a bit special with how one should feed access units
[23:02:21] <roxlu> I have experimented with this a long time ago ..
[23:02:34] *** Quits: Guest84 (~Guest84@202.60.227.169) (Ping timeout: 246 seconds)
[23:02:40] <roxlu> btw, thanks for that -output_ts option, that's really nice to have
[23:03:06] <JEEB> debug_ts, you mean? yea, it's nice. just spams a *lot*
[23:03:16] <roxlu> oh yeah debug_ts
[23:03:34] <JEEB> demux, demux + ffmpeg.c adjustments, decode, filtering, encode, mux
[23:03:41] <JEEB> each step gets a log
[23:04:03] <roxlu> yeah but no packet sizes I think (or mabye I have to dive a bit deeper)
[23:04:27] *** Quits: someuser (~user@41.238.161.8) (Ping timeout: 258 seconds)
[23:04:39] <JEEB> ah, so it seems
[23:05:10] <JEEB> well the muxing code at least has size: :D
[23:05:17] <JEEB> but a lot of the other stuff doesn't
[23:06:04] <JEEB> feel free to add that to the decode feeding
[23:06:08] <JEEB> pkt->size
[23:06:53] <JEEB> the one in `do_video_out` with "encoder <-"
[23:06:59] <JEEB> asdf not that
[23:07:00] <JEEB> that's encoding
[23:07:11] <roxlu> haha yeah .. I only wanted to check if ffmpeg can encode with one nal per frame :)
[23:07:32] <JEEB> what is your input container?
[23:07:43] <JEEB> are you sure it's not just split NAL units like with MPEG-TS or so
[23:07:55] <JEEB> since MPEG-TS makes you split NALUs into PES packets of limited size
[23:07:59] <roxlu> what do you mean by split nalus?
[23:08:11] <JEEB> well MPEG-TS packets are 188 bytes for example
[23:08:17] <roxlu> I'm getting these nals directly from a webcam
[23:08:21] <JEEB> ok
[23:08:38] <roxlu> and I parse them on annex-b header and see that one frame (e.g. idr) consists of ~4 slices
[23:09:15] <JEEB> which are separate slice VCL nalus?
[23:09:21] <roxlu> but I'm testing with some h264 ios demo which as a .h264 file that works; my recording doesn't and I'm wondering if this is caused because of the slicing
[23:09:30] <roxlu> yes
[23:09:47] <JEEB> well, it's really easy to test since f.ex. libx264 only outputs a single slice by default :P
[23:10:39] <JEEB> anyways, FFmpeg can already handle what you have so ┐(´д｀)┌ but to be honest I wouldn't be surprised if it would be something even simpler than just separate slice NALUs
[23:11:21] <JEEB> anyways, I figure the simplest thing for you is to either attempt to utilize a parser, or write your own. if you want to test that theory -_-
[23:11:37] <JEEB> catch the slice NALUs into a single buffer and see if that fixes it
[23:11:55] <JEEB> then add logging into the FFmpeg VT wrapper and see what sort of packets it pushes into VT
[23:13:13] <JEEB> also is your input annex b or avcC_
[23:14:11] <JEEB> as far as I can see VT always wants avcC style [4 byte size][data]
[23:14:39] <roxlu> ok thanks for the suggestions
[23:14:48] <roxlu> .. I wanted to start with the quickest test :)
[23:15:03] <roxlu> how do you know that libx264 outputs a single slice per default?
[23:15:16] <JEEB> because that's best for compression?
[23:15:30] <JEEB> you only utilize slices if you need either the encoder or the decoder to have sliced threading
[23:16:17] <JEEB> also I think the simplest (?) test is to do `ffmpeg -v verbose -i INPUT -map 0:v -c copy -movflags faststart out.mp4`
[23:16:20] <JEEB> :P
[23:16:34] *** Joins: someuser (~user@41.238.161.8)
[23:16:48] <JEEB> and check if that remuxed mp4 plays
[23:18:12] *** Joins: TanoMarcelo (~TanoMarce@179.63.242.126)
[23:19:22] *** Quits: anotheruser (~user@213-248-112-35.teliacarrier-cust.com) (Ping timeout: 240 seconds)
[23:20:27] *** Joins: MrZeus (~MrZeus@5ec2d429.skybroadband.com)
[23:20:31] *** Quits: MrZeus_ (~MrZeus@2a02:c7f:a0aa:4400:cea:dc7f:e56d:2899) (Ping timeout: 246 seconds)
[23:32:52] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Remote host closed the connection)
[23:33:09] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[23:35:10] *** Quits: blerd (~blerd@71.182.169.24) (Quit: Going offline, see ya! (www.adiirc.com))
[23:35:31] *** Joins: blerd (~blerd@71.182.169.24)
[23:38:07] *** Quits: Flabb (~Flabb@89.169.84.117) (Quit: Leaving)
[23:43:14] *** Quits: dreamon (~dreamon@p57a4c41a.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[23:43:55] *** Quits: HumanG33k (~HumanG33k@2a01:e0a:5b9:7840:215:c5ff:fe68:fb04) (Quit: WeeChat 2.3)
[23:54:40] *** Joins: TheSashm_ (~TheSashmo@207.35.238.34)
[23:57:34] *** Quits: TheSashmo (~TheSashmo@207.35.238.34) (Ping timeout: 272 seconds)
