[00:01:10] *** Joins: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi)
[00:02:55] <zzz> why doesn't this throw an exception?: f x = let Just !v = x in const mempty v
[00:03:11] *** Joins: roboguy (~roboguy@user/roboguy)
[00:03:26] <zzz> f $ Just (undefined :: ())
[00:03:39] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[00:03:46] <ski> > let !(Just v) = Nothing in const () v
[00:03:47] <lambdabot>  *Exception: <interactive>:3:5-23: Non-exhaustive patterns in Just v
[00:04:10] <monochrom> > const 4 undefined
[00:04:11] <lambdabot>  4
[00:04:14] <monochrom> Because of that.
[00:04:34] <ski> that `Just !v' basically acts like `~(Just !v)' (since it's a `let'/`where' binding), so the irrefutable `~' is hiding the `!' (which is useless)
[00:04:35] <zzz> shouldn't the !v force the evaluation on undefined?
[00:04:43] <zzz> ah
[00:04:49] <zzz> let bindings are irrefutable
[00:04:51] <zzz> thanks
[00:04:56] <ski> np
[00:05:10] <monochrom> Perhaps you meant !(Just v)
[00:05:35] <zzz> monochrom: that would have the same effect
[00:05:47] <ski> no
[00:05:51] <zzz> no?
[00:05:52] <ski> (see example above)
[00:06:20] <ski> if there's an outer `!', then there's no implicit `~' wrapping
[00:06:45] <polyphem> whatif: theres also wai-hmac-auth
[00:07:00] <zzz> > let f x = let !(Just v) = x in const mempty v in f (Just (undefined :: ())
[00:07:01] <lambdabot>  <hint>:1:75: error:
[00:07:02] <lambdabot>      parse error (possibly incorrect indentation or mismatched brackets)
[00:07:19] <zzz> > f x = let !(Just v) = x in const mempty v; f (Just (undefined :: ())
[00:07:21] <lambdabot>  <hint>:1:5: error: parse error on input ‘=’
[00:07:24] <ski> > let f x = let !(Just v) = x in const mempty v in f (Just (undefined :: ()))
[00:07:25] <lambdabot>  ()
[00:07:53] <monochrom> OK, perhaps you meant !(Just !v)
[00:08:01] <zzz> :)
[00:08:05] <ski> ah, if you pass a `Just', then it will match, and `v' will be bound to `undefined'
[00:08:11] <ski> > let f x = let !(Just !v) = x in const mempty v in f (Just (undefined :: ()))
[00:08:12] <lambdabot>  *Exception: Prelude.undefined
[00:08:29] <ski> (sorry, i missed your initial `f $ Just ...' thing)
[00:09:19] <zzz> understood
[00:09:27] <zzz> let bindings are tricky
[00:12:55] *** Quits: incertia (~incertia@207.98.168.249) (Ping timeout: 256 seconds)
[00:15:25] *** Joins: zmt00 (~zmt00@user/zmt00)
[00:15:52] *** Joins: briandaed (~root@185.234.208.208.r.toneticgroup.pl)
[00:18:16] *** Quits: zmt00 (~zmt00@user/zmt00) (Client Quit)
[00:18:18] <Sqaure> I believed there was a "both ::(a -> b) -> (a, a) -> (b, b)" in base? Cannot find it now
[00:19:01] <EvanR> there is bimap
[00:19:03] <EvanR> :t bimap
[00:19:04] <lambdabot> Bifunctor p => (a -> b) -> (c -> d) -> p a c -> p b d
[00:19:20] <EvanR> :t bimap f f
[00:19:21] <lambdabot> (Bifunctor p, Show a, Show c, FromExpr b, FromExpr d) => p a c -> p b d
[00:19:22] <Sqaure> gotcha
[00:19:37] <EvanR> :t \f -> bimap f f
[00:19:38] <lambdabot> Bifunctor p => (a -> d) -> p a a -> p d d
[00:19:59] <EvanR> I think it's not in base but in bifunctors
[00:20:07] <Hecate> Axman6: I require an explanation at once https://twitter.com/isobelroe/status/1484273468313337856
[00:20:29] <Hecate> what the fuck is happening in North Queenland
[00:26:28] *** Joins: zmt00 (~zmt00@user/zmt00)
[00:27:08] *** Quits: aliosablack (~chomwitt@ppp-94-67-1-27.home.otenet.gr) (Quit: Leaving)
[00:27:31] *** Joins: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374)
[00:28:35] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:29:38] *** Joins: argento (~argent0@168-227-96-53.ptr.westnet.com.ar)
[00:31:21] *** Joins: Siv (~fuag1@174.127.249.180)
[00:33:21] <EvanR> not haskell
[00:33:57] *** Quits: alp (~alp@user/alp) (Ping timeout: 240 seconds)
[00:34:04] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[00:34:17] <geekosaur> was wondering what that was doing in here
[00:34:50] *** Joins: pavonia (~user@user/siracusa)
[00:35:23] *** Joins: Hawker_ (~pi@user/hawker)
[00:36:05] *** Quits: Hawker_ (~pi@user/hawker) (Client Quit)
[00:36:58] *** Quits: xff0x (~xff0x@2001:1a81:52b8:8500:6c95:ecd6:fb54:75ad) (Ping timeout: 250 seconds)
[00:37:06] *** Joins: zebrag (~chris@user/zebrag)
[00:38:00] *** Joins: xff0x (~xff0x@2001:1a81:52b8:8500:732c:1822:8f35:ae7)
[00:42:02] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:494b:f936:f65f:424f) (Remote host closed the connection)
[00:43:02] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[00:44:50] *** Quits: cosimone (~user@93-47-230-23.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[00:46:06] *** Joins: johnjaye (~pi@173.209.65.233)
[00:46:41] *** Joins: timCF (~timCF@m91-129-100-224.cust.tele2.ee)
[00:49:56] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[00:50:02] <timCF> Hello! I'm trying to compile executable with ghc, and doing it inside docker container. Executable compiles fine, but I'm not able to run it oh host system for some reason (it crashes with error "No such file or directory"). I do suspect it's something related to linking, tried to build inside alpine and ubuntu containers - the same result. Host system is ubuntu. Did anybody experienced something similar?
[00:51:33] <geekosaur> did it say which file it couldn't find?
[00:51:50] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[00:52:12] *** Quits: dsrt^ (~dsrt@207.182.73.202) (Ping timeout: 256 seconds)
[00:52:13] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[00:52:13] <geekosaur> (if it claimed the executable, but it's there, it might be missing the dynamic loader)
[00:52:32] *** Joins: califax (~califax@user/califx)
[00:52:57] <timCF> No, full error looks like "bash: ./build/my-exe: No such file or directory"
[00:53:29] <timCF> Executable is definitely there, 14MB size
[00:53:57] *** Quits: briandaed (~root@185.234.208.208.r.toneticgroup.pl) (Ping timeout: 240 seconds)
[00:54:12] *** Quits: stevenxl (~stevenxl@c-73-72-2-81.hsd1.il.comcast.net) (Quit: leaving)
[00:55:25] <timCF> Inside docker container executable actualy runs file
[00:55:29] <timCF> * fine
[00:55:33] <dsal> It's probably a ld library
[00:56:02] <dsal> ldd ./build/my-exe
[00:56:07] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[00:56:08] *** Quits: _ht (~quassel@82-168-34-160.fixed.kpn.net) (Remote host closed the connection)
[00:56:15] *** Quits: sheb (~sheb@31.223.228.71) (Quit: Leaving)
[00:57:12] <timCF> dsal: interesing, it shows a lot of stuff
[00:57:16] <geekosaur> objdump -j .interp -s ./build/myexe
[00:57:40] <geekosaur> this should print out a filename, although as a hex+char dump. make sure that file exists
[00:57:40] <timCF> "libffi.so.8 => not found" - this is one of the lines
[00:57:55] <timCF> it might be an actual issue?
[00:58:02] <geekosaur> yes
[00:58:21] <geekosaur> sounds like you are missing a bunch of shared objects and possibly the core loader
[00:58:34] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[00:59:05] <geekosaur> typically when the file itself is claimed to be missing but is there, it's the loader that is missing. run the objdump command I specified above and see if the named file exists
[00:59:47] <geekosaur> on my system it names /lib64/ld-linux-x86-64.so.2
[01:00:59] <zzz>  Sqaure: join bimap is one of my go to's
[01:01:03] <timCF> geekosaur: it gives this output, but honestly I do have no idea what does it mean :)
[01:01:07] <zzz> @type join bimap
[01:01:07] <lambdabot> Bifunctor p => (c -> d) -> p c c -> p d d
[01:01:08] <timCF> geekosaur: https://gist.github.com/21it/80d95734d9e17973c61da465d45ee5c4
[01:01:46] <zzz> > join bimap succ (6,8)
[01:01:47] <lambdabot>  (7,9)
[01:02:37] <EvanR> V2 a = V2 !a !a functor is handy
[01:02:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[01:02:40] <geekosaur> timcf, welp. you got a loader form nix somehow
[01:03:27] <timCF> yeah, nix is a lot of fun, and it's always working until it's not
[01:03:30] <geekosaur> there's a patchelf command you can use to fix it
[01:03:56] <geekosaur> https://github.com/NixOS/patchelf
[01:04:53] <timCF> geekosaur: thanks a lot, I'll take a look!
[01:05:23] <geekosaur> can probabl;y install that via nix if you have nix installed on the host, or arrange to do it in the docker container
[01:05:23] <geekosaur> look for the host (not nix) loader, which stands a good chance of being where I said mine was because I run ubuntu
[01:05:24] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[01:06:13] *** Quits: infinity0 (~infinity0@occupy.ecodis.net) (Ping timeout: 240 seconds)
[01:07:04] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[01:08:09] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:08:24] *** Joins: infinity0 (~infinity0@occupy.ecodis.net)
[01:10:07] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[01:10:22] <timCF> geekosaur: do you think with this util I'll be able to run on ubuntu executable which was built on alpine image?
[01:11:09] <geekosaur> that one is less likely, although I think alpine builds things statically by default so they should work pretty much anywhere
[01:13:20] <geekosaur> (sadly if it's also using nix that may be false and you would again need patchelf. and would again have to watch for missing/wrong version shared objects
[01:13:46] <geekosaur> )
[01:15:34] *** Joins: incertia (~incertia@207.98.163.88)
[01:16:32] <timCF> I only heard buzz words like musl (used by alpine) and glibc (used by ubuntu) and that there will be some problems related to this. I'll try anyway, because alpine image is much smaller 
[01:17:47] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:19:13] *** Quits: ukari (~ukari@user/ukari) (Ping timeout: 256 seconds)
[01:21:45] <maerwald> there are no problems
[01:22:51] <geekosaur> there would be problems going the other way but alpine executable should work fine unless nix builds make them dynamic for some reason
[01:23:19] <maerwald> (there are no problem with building static binaries in alpine docker containers)
[01:26:35] *** Quits: Siv (~fuag1@174.127.249.180) (Ping timeout: 256 seconds)
[01:26:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[01:27:06] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[01:32:18] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[01:33:20] *** Joins: ukari (~ukari@user/ukari)
[01:34:36] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:34:36] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:34:36] *** Joins: wroathe (~wroathe@user/wroathe)
[01:36:03] *** Quits: roboguy (~roboguy@user/roboguy) ()
[01:38:08] *** Quits: alphabeta (~kilolympu@31.205.200.235) (Remote host closed the connection)
[01:38:29] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:39:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[01:40:22] *** Quits: deadmarshal (~deadmarsh@95.38.113.215) (Ping timeout: 256 seconds)
[01:41:43] *** Joins: alphabeta (~kilolympu@31.205.200.235)
[01:42:23] *** Quits: fendor_ (~fendor@178.115.77.166.wireless.dyn.drei.com) (Remote host closed the connection)
[01:42:26] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:494b:f936:f65f:424f)
[01:46:37] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:494b:f936:f65f:424f) (Ping timeout: 240 seconds)
[01:47:43] *** Joins: alp (~alp@user/alp)
[01:49:35] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[01:50:30] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 276 seconds)
[01:51:50] *** Joins: max22- (~maxime@2a01cb0883359800536f505f6298e408.ipv6.abo.wanadoo.fr)
[01:54:55] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 256 seconds)
[01:55:22] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[01:58:52] *** Joins: Siv (~fuag1@174.127.249.180)
[01:59:18] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:03:35] *** Joins: tommd (~tommd@67-42-147-226.ptld.qwest.net)
[02:03:58] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[02:14:55] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[02:23:49] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[02:26:50] *** Joins: boxscape_ (~boxscape_@p4ff0b9d5.dip0.t-ipconnect.de)
[02:27:10] <boxscape_> can I say in my cabal.project file that hpack should be used for a particular repository to create the cabal file?
[02:27:48] *** Quits: AWizzArd (~code@gehrels.uberspace.de) (Changing host)
[02:27:48] *** Joins: AWizzArd (~code@user/awizzard)
[02:28:10] <boxscape_> (because the repository only has a package.yaml file)
[02:31:17] *** Quits: max22- (~maxime@2a01cb0883359800536f505f6298e408.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:32:06] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[02:36:19] <ephemient> as far as I know, only stack has built-in support for hpack (and even then, it's still recommended to check in the .cabal file)
[02:36:55] <boxscape_> I was thinking maybe there's a way to run an arbitrary command on a package or something with cabal
[02:37:18] <geekosaur> I think the only hook for doing that is a custom Setup.hs
[02:37:56] *** Quits: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com) (Remote host closed the connection)
[02:37:57] <boxscape_> sounds like I won't get around changing files directly in the dependency then
[02:38:09] <boxscape_> in which case I'll just add a cabal file
[02:38:11] <ephemient> ah, perhaps https://cabal.readthedocs.io/en/latest/cabal-project.html#cfg-field-post-checkout-command
[02:38:18] <boxscape_> ah, interesting
[02:38:26] <boxscape_> I'll try it, thanks
[02:39:54] *** Joins: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com)
[02:40:23] <boxscape_> seems to work! Though for some reason it doesn't build my own program after generating the cabal file for the dependency. I imagine I'll figure it out htough.
[02:40:26] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 256 seconds)
[02:41:41] *** Quits: michalz (~michalz@185.246.204.58) (Remote host closed the connection)
[02:42:24] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[02:42:29] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Remote host closed the connection)
[02:43:05] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[02:43:39] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[02:44:42] <zzz> if i want to see the type of join applied to an arrow (using TypeApplications), how would i write it?
[02:45:38] <geekosaur> % :t join @((->) _)
[02:45:38] <yahb> geekosaur: (w -> (w -> a)) -> w -> a
[02:45:54] <boxscape_> looks like this is responsible for what I'm seeing https://github.com/haskell/cabal/issues/7641
[02:47:37] <zzz> geekosaur: ah, holes! thanks
[02:48:03] <boxscape_> Ohh I was thinking "what does join have to do with the Arrow class"
[02:48:12] *** Joins: son0p (~ff@181.136.122.143)
[02:53:21] *** Joins: sagax (~sagax_nb@user/sagax)
[02:55:42] *** Joins: lispy (~lispy3@84.69.59.93)
[03:00:16] *** Quits: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk) (Remote host closed the connection)
[03:01:06] *** Joins: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net)
[03:04:59] *** Joins: Akiva (~Akiva@user/Akiva)
[03:05:17] *** Quits: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[03:06:54] *** Quits: foul_owl (~kerry@174-21-143-101.tukw.qwest.net) (Ping timeout: 250 seconds)
[03:09:43] *** Quits: slack1256 (~slack1256@191.126.227.213) (Ping timeout: 256 seconds)
[03:11:45] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[03:11:45] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[03:11:45] *** Joins: wroathe (~wroathe@user/wroathe)
[03:14:26] <ephemient> boxscape_: as a workaround I suppose you could make your post-checkout command exit failure for now :)
[03:15:00] *** Quits: argento (~argent0@168-227-96-53.ptr.westnet.com.ar) (Ping timeout: 256 seconds)
[03:15:52] <boxscape_> Hah, true! But it has since turned out I don't need it, since I thought I needed it to get package compatibility with 9.2, but have now found out I can also use 9.0 and use the hackage version of that package.
[03:16:16] <boxscape_> chances are, the next time I'll encounter a situation where I need a post-checkout command, I'll be on a cabal version where it's fixed
[03:16:38] *** Joins: CHUD (~CHUD@cpc142034-slou6-2-0-cust488.17-4.cable.virginm.net)
[03:18:03] *** Joins: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk)
[03:18:10] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[03:22:01] *** Joins: foul_owl (~kerry@94.140.8.106)
[03:23:47] *** Quits: shapr (~user@2601:7c0:c37c:46d0:25fd:6854:a2a7:2f62) (Remote host closed the connection)
[03:24:01] *** Joins: shapr (~user@2601:7c0:c37c:46d0:25fd:6854:a2a7:2f62)
[03:29:52] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:494b:f936:f65f:424f)
[03:31:22] *** Joins: ksqsf (~user@2001:da8:d800:611:ec5d:b229:c7db:9005)
[03:35:45] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[03:35:56] *** Quits: ksqsf (~user@2001:da8:d800:611:ec5d:b229:c7db:9005) (Ping timeout: 250 seconds)
[03:37:41] *** Joins: SummerSonw (~The_viole@203.77.49.232)
[03:38:48] *** Joins: bitmapper (uid464869@id-464869.lymington.irccloud.com)
[03:39:36] *** Joins: ksqsf (~user@2001:da8:d800:611:74aa:1812:7dce:e04b)
[03:42:10] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:43:54] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 256 seconds)
[03:44:54] <polyphem> i have a deriving error, can someone help ? https://paste.tomsmeding.com/RENDjTGF
[03:47:30] <polyphem> guess i have to use "via" now ?
[03:48:17] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[03:50:00] *** Quits: shapr (~user@2601:7c0:c37c:46d0:25fd:6854:a2a7:2f62) (Remote host closed the connection)
[03:50:13] *** Joins: shapr (~user@2601:7c0:c37c:46d0:25fd:6854:a2a7:2f62)
[03:50:50] <boxscape_> I believe "via" produces the same code as GND
[03:52:24] <boxscape_> oh unless you mean via a type other than "NominalDiffTime -> IO a"
[03:52:27] <boxscape_> not sure if that would work
[03:53:08] <polyphem> boxscape_: i don't understand the error 
[03:53:21] *** Quits: jgeerds (~jgeerds@55d4a547.access.ecotel.net) (Ping timeout: 256 seconds)
[03:53:27] <ski> `NominalDiffTime -> IO a' is not of the shape `(...) a'
[03:54:07] *** Quits: Siv (~fuag1@174.127.249.180) (Read error: Connection reset by peer)
[03:54:29] <boxscape_> @unmtl ReaderT NominalDiffTime IO a
[03:54:29] <lambdabot> NominalDiffTime -> IO a
[03:54:30] <ski> (`IO a' is, if you set `...' to `IO', so that you can use the `Functor'/`Applicative'/`Monad' instance for `IO')
[03:55:00] <boxscape_> polyphem maybe you can use "deriving (Monad, Applicative, Functor) via ReaderT NominalDiffTime IO a"?
[03:56:04] <polyphem> so now its not IO a but (->) NominalDiffTime a
[03:56:17] <polyphem> so now its not IO a but (->) NominalDiffTime IO a
[03:56:23] <polyphem> so now its not IO a but (->) NominalDiffTime (IO a)
[03:56:26] <ski> yep
[03:56:41] <polyphem> boxscape_: i'll try
[03:59:04] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-65df-a0f5-02cd-1378.res6.spectrum.com)
[04:00:02] *** Quits: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[04:00:07] <boxscape_> polyphem correction, `deriving (Monad, Applicative, Functor) via ReaderT NominalDiffTime IO`, without the `a` at the end
[04:01:10] <polyphem> boxscape_: yes , had that too , now it works , thanks a lot
[04:01:18] <boxscape_> nice
[04:03:36] <monochrom> Hrm, interesting. I always have "String -> Maybe (a, String)" and tired of handwriting its Monad instance. Perhaps "via StateT String Maybe" will do it for me. (My handwritten Monad instance is exactly that anyway.)
[04:03:58] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[04:07:27] <monochrom> newtype P a = P{unP :: String -> Maybe (a, String)} deriving (Functor, Applicative, Monad, MonadFail, Alternative, MonadPlus) via (StateT String Maybe)
[04:07:29] <monochrom> :)
[04:08:09] *** Joins: argento (~argent0@168-227-97-23.ptr.westnet.com.ar)
[04:08:13] <boxscape_> neat
[04:09:56] *** Parts: ksqsf (~user@2001:da8:d800:611:74aa:1812:7dce:e04b) (ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[04:12:41] <ephemient> huh, that works? I would have expected Monad ((,) String) to work on ...(String, a) rather than ...(a, String)
[04:13:18] <boxscape_> this doesn't involve the (,) Monad
[04:13:19] <geekosaur> @unmtl StateT String Maybe
[04:13:19] <lambdabot> err: `StateT String Maybe' is not applied to enough arguments, giving `/\A. String -> Maybe (A, String)'
[04:13:24] <geekosaur> @unmtl StateT String Maybe a
[04:13:24] <lambdabot> String -> Maybe (a, String)
[04:13:51] <monochrom> Yes but StateT S is not ReaderT S ((,) S) semantically
[04:14:45] <ephemient> oh I missed the switch from ReaderT to StateT
[04:15:40] <boxscape_> hm fun when you search for State in hoogle is `newtype State = State {runState :: s -> (s, a)`, which has the opposite tuple order to StateT
[04:15:43] *** Quits: shapr (~user@2601:7c0:c37c:46d0:25fd:6854:a2a7:2f62) (Remote host closed the connection)
[04:15:52] <boxscape_> (from Data.Sequence)
[04:15:58] *** Joins: shapr (~user@2601:7c0:c37c:46d0:25fd:6854:a2a7:2f62)
[04:18:17] * ski . o O ( s/opposite/correct/ )
[04:18:41] *** Quits: mmhat (~mmh@55d4fecc.access.ecotel.net) (Quit: WeeChat 3.4)
[04:19:18] <boxscape_> I don't have a  strong opinion on the matter
[04:19:33] <boxscape_> (though consistency would be nice)
[04:19:42] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 250 seconds)
[04:19:58] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[04:20:08] <monochrom> Oh you look at big endian vs little endian, you can rest assured there will be two consistencies. >:)
[04:20:16] <glguy> debating the implementation detail of State in its tuple order is a bit like debating what the correct type variables names would be in its implementation
[04:20:31] <boxscape_> "two consistencies" is a nice way of putting it
[04:20:39] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Ping timeout: 276 seconds)
[04:20:58] * ski . o O ( left and right adjoint. least and greatest fixed point. &c. )
[04:21:04] *** Joins: Erutuon (~Erutuon@user/erutuon)
[04:21:13] <monochrom> I like s->(s,a) as a composition of two functors. But I heard a reason for s->(a,s) based on some advanced category theory I haven't learned.
[04:21:47] <glguy> s->(a,s) is nice because a comes before s in the alphabet
[04:22:08] <dolio> monochrom: It's better for ordered logic.
[04:22:32] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[04:23:43] <ski> given `Gamma |- A -> B' being equivalent to `Gamma,A |- B' or to `A,Gamma |- B' ?
[04:24:09] <dolio> Right.
[04:24:45] <ski> the latter ?
[04:25:31] <dolio> Presumably the former.
[04:25:49] <ski> yea .. afaiui, the latter makes more sense
[04:26:01] <dolio> That's how you get `-×S ⊣ S→-`, and put the S second in State.
[04:27:02] <ski> like `Gamma0,A,A -> B,Gamma1 |- Delta' follows from `Gamma0,B,Gamma1 |- Delta', which seems to be what makes more sense, to me
[04:28:17] *** Quits: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net) (Ping timeout: 240 seconds)
[04:28:19] <ski> (from `A tensor (A^bot par B)' you get `(A tensor A^bot) par B', then `bot par B', then `B')
[04:29:56] <alphabeta> Can I control the order modules appear in a Hackage package page?
[04:30:31] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[04:30:46] <alphabeta> I've tried explicitly writing out the exposed-modules (in the cabal file) in the order I want
[04:30:56] <alphabeta> but Hackage still seems to display them alphabetically
[04:31:02] <glguy> alphabeta: Since they appear alphabetically, and you get to pick the names, yes!
[04:31:03] *** Joins: nunggu (~q@user/nunggu)
[04:31:11] *** Joins: lavaman (~lavaman@98.38.249.169)
[04:31:15] <alphabeta> Aw, glguy alright.
[04:31:17] *** Quits: tommd (~tommd@67-42-147-226.ptld.qwest.net) (Ping timeout: 240 seconds)
[04:32:07] <monochrom> It's why in the 1990s, readme.txt was often 00readme.txt
[04:33:00] <geekosaur> I still see that occasionally. Possibly cargo-culted
[04:33:04] <monochrom> And in the movie The Accountant, the protagonist named his 1-person accounting firm ZZZ Accounting to avoid getting noticed.
[04:34:16] <c_wraith> that's a name that would get my attention.  Not in a positive way...
[04:34:16] <alphabeta> ah, haha...
[04:34:50] <ephemient> https://github.com/lsof-org/lsof "00README" "00README.FIRST" "00README.BEFORE.README.FIRST" (...really)
[04:34:51] <geekosaur> go look at how many locksmiths are Aaaa AAA A-Abra-Cadabra or something like that
[04:35:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[04:35:19] <monochrom> Oh, the idea is that people who open up a physical-paper copy of Yellow Page looking for accountants would not get to Z.
[04:35:23] <boxscape_> should've named it 000README.FIRST, otherwise how will I know it comes before 00README
[04:35:34] <geekosaur> that is,m if you can find a phone book in this enlightened age :þ
[04:35:47] <boxscape_> oh wait
[04:35:59] <boxscape_> they basically did, it's 00.README.FIRST
[04:36:21] *** Quits: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi) (Quit: Leaving.)
[04:36:26] <monochrom> But yes you're right that an FBI detective would know that ZZZ Accounting means there is something to hide.
[04:36:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[04:36:44] <ephemient> oh yeah, "00.README.FIRST" and "0..README.BEFORE.README.FIRST", so it is first-er
[04:37:02] <geekosaur> seems unnecessary, B before F
[04:37:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:37:08] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:37:08] *** Joins: wroathe (~wroathe@user/wroathe)
[04:37:10] <monochrom> Oh, readme.1st and 00readme.1st existed, too!
[04:38:11] <monochrom> Also remember the 7.3 constraint. We're talking about FAT16.
[04:38:18] <geekosaur> 8.3
[04:38:24] <monochrom> oops yeah
[04:38:40] <geekosaur> and the occasional 6.3 from tenex-based archive sites
[04:39:15] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[04:40:07] <geekosaur> (although I think one of the things that made tenex "-ex" was longer file names… at the expense of fewer filenames per directory iirc)
[04:40:54] <ephemient> on the flip side, you can have https://github.com/shemminger/iproute2/blob/753ef5b/tc/README.last (although the file ordering isn't really conducive to reading last)
[04:41:36] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:42:17] <monochrom> Did anyone use reverse psychology and label their user guide "top secret do not read"? >:)
[04:42:57] *** Quits: shapr (~user@2601:7c0:c37c:46d0:25fd:6854:a2a7:2f62) (Remote host closed the connection)
[04:43:10] *** Joins: shapr (~user@2601:7c0:c37c:46d0:25fd:6854:a2a7:2f62)
[04:44:53] <zzz> is (a ~ b) indistinguishable from (b ~ a) ?
[04:45:49] <geekosaur> it's just unification in the typechecker, I don't think it cares about order
[04:46:00] <zzz> ok
[04:46:19] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:46:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[04:47:04] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[04:47:43] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:53:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[04:59:17] *** Quits: johnw (~johnw@2607:f6f0:3004:1:c8b4:50ff:fef8:6bf0) (Quit: ZNC - http://znc.in)
[05:00:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:03:40] *** Quits: xstill- (xstill@fimu/xstill) (Quit: Ping timeout (120 seconds))
[05:03:45] *** Quits: xsarnik (xsarnik@lounge.fi.muni.cz) (Quit: Ping timeout (120 seconds))
[05:04:11] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:04:11] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:04:11] *** Joins: wroathe (~wroathe@user/wroathe)
[05:05:37] *** Joins: vysn (~vysn@user/vysn)
[05:06:17] *** Joins: xstill- (xstill@fimu/xstill)
[05:09:08] *** Quits: shapr (~user@2601:7c0:c37c:46d0:25fd:6854:a2a7:2f62) (Remote host closed the connection)
[05:09:22] *** Joins: shapr (~user@2601:7c0:c37c:46d0:25fd:6854:a2a7:2f62)
[05:10:54] *** Joins: xsarnik (xsarnik@lounge.fi.muni.cz)
[05:15:14] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Quit: Leaving)
[05:18:44] *** Joins: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net)
[05:20:20] <zzz> is anyone familiar with the E type system mentioned here http://repetae.net/computer/jhc/jhc.shtml ?
[05:24:18] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[05:24:37] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:30:35] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:31:14] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[05:31:23] *** Joins: califax- (~califax@user/califx)
[05:31:46] *** Joins: acidsys (~LSD@2.lsd.systems)
[05:32:13] *** Joins: ksqsf (~user@2001:da8:d800:611:74aa:1812:7dce:e04b)
[05:32:29] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[05:32:29] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:32:45] *** Quits: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk) (Remote host closed the connection)
[05:33:57] *** Quits: alp (~alp@user/alp) (Ping timeout: 240 seconds)
[05:34:06] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:34:06] *** califax- is now known as califax
[05:35:50] *** Quits: shapr (~user@2601:7c0:c37c:46d0:25fd:6854:a2a7:2f62) (Remote host closed the connection)
[05:36:05] *** Joins: shapr (~user@2601:7c0:c37c:46d0:25fd:6854:a2a7:2f62)
[05:37:00] *** Joins: alp (~alp@user/alp)
[05:39:00] *** Quits: argento (~argent0@168-227-97-23.ptr.westnet.com.ar) (Ping timeout: 250 seconds)
[05:39:14] <Axman6> Hecate: it's North Queensland, 'nuf said
[05:43:09] <zzz> https://twitter.com/SEdwards0108/status/1484415347763851265
[05:43:26] *** Joins: unyu (~pyon@user/pyon)
[05:54:27] *** Joins: argento (~argent0@168-227-97-23.ptr.westnet.com.ar)
[05:56:20] *** Quits: xff0x (~xff0x@2001:1a81:52b8:8500:732c:1822:8f35:ae7) (Ping timeout: 250 seconds)
[05:56:57] *** Quits: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net) (Ping timeout: 240 seconds)
[05:57:25] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[05:58:21] *** Joins: xff0x (~xff0x@2001:1a81:52f4:b00:8413:5c77:eacd:b6f4)
[05:59:22] *** Quits: ksqsf (~user@2001:da8:d800:611:74aa:1812:7dce:e04b) (Ping timeout: 250 seconds)
[05:59:27] *** Joins: zmt00 (~zmt00@user/zmt00)
[06:02:34] *** Quits: shapr (~user@2601:7c0:c37c:46d0:25fd:6854:a2a7:2f62) (Remote host closed the connection)
[06:02:47] *** Joins: shapr (~user@2601:7c0:c37c:46d0:25fd:6854:a2a7:2f62)
[06:02:50] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[06:03:16] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 250 seconds)
[06:03:21] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[06:06:11] *** Joins: zaquest (~notzaques@5.130.79.72)
[06:12:01] *** Quits: alx741 (~alx741@157.100.93.160) (Quit: alx741)
[06:13:57] *** Quits: nunggu (~q@user/nunggu) (Quit: nunggu)
[06:18:36] *** Quits: bitmapper (uid464869@id-464869.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:18:44] *** Joins: nunggu (~q@user/nunggu)
[06:19:38] *** Joins: lavaman (~lavaman@98.38.249.169)
[06:24:48] *** Joins: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net)
[06:28:18] *** Joins: AlexZenon_2 (~alzenon@94.233.241.14)
[06:29:12] *** Joins: califax- (~califax@user/califx)
[06:29:14] *** Joins: ksqsf (~user@2001:da8:d800:611:6124:3c0b:af08:60c3)
[06:29:56] *** Quits: AlexZenon (~alzenon@94.233.241.14) (Ping timeout: 256 seconds)
[06:30:17] *** Joins: mbuf (~Shakthi@122.174.198.26)
[06:31:37] <whatif> how to put "." and ".." to the head of alist in alist like ["a",".","b",".."]
[06:31:54] <whatif> filter?
[06:32:43] <EvanR> sortBy
[06:33:05] <whatif> by what?
[06:33:07] <ephemient>  > sort ["a",".","b",".."]
[06:33:31] <EvanR> > sort ["a",".","b",".."] -- show me the money!
[06:33:32] <lambdabot>  [".","..","a","b"]
[06:33:35] <EvanR> dang nvm
[06:33:48] <whatif> but only "." and ".." need to be the first, others remain their place
[06:33:50] <EvanR> sort by the default
[06:33:54] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[06:33:55] *** califax- is now known as califax
[06:33:55] <EvanR> oh
[06:33:59] <EvanR> why
[06:34:50] <whatif> keep the newest on the top
[06:34:50] <ephemient> > sortOn (any (/= '.')) ["a",".","b",".."]
[06:34:52] <lambdabot>  [".","..","a","b"]
[06:34:56] <EvanR> > [".",".."] ++ (delete "." . delete "..") ["b",".","a",".."]
[06:34:57] <lambdabot>  [".","..","b","a"]
[06:35:33] <EvanR> how did . and .. get down there anyway
[06:35:37] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[06:36:04] <whatif> getDirectoryContent
[06:38:00] <ephemient> oh. if they're paths then treat . and .. specially
[06:38:02] <EvanR> it would be more convenient if you could not even have them in the first place
[06:38:13] <EvanR> prepend them to the list as needed
[06:38:13] <whatif> is getDirectoryContent get the list of file name sorted by its created time?
[06:38:20] <ephemient> note that it is not guaranteed that directory entries for . and .. will or won't be present
[06:38:53] <ephemient> https://pubs.opengroup.org/onlinepubs/007904875/functions/readdir_r.html only that if dot and dot-dot entries exist, they will only appear once
[06:39:03] <whatif> EvanR there is listDirectory but it seems not worked
[06:39:05] <ephemient> but it is valid for them to not exist
[06:41:17] <whatif> is there other functions? to get directory content?
[06:42:34] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Remote host closed the connection)
[06:42:59] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[06:46:26] <ephemient> really there is no difference between getDirectoryContents and listDirectory beyond the latter calling the former and filtering out . and ..: https://hackage.haskell.org/package/directory-1.3.7.0/docs/src/System.Directory.html#listDirectory
[06:47:17] *** Quits: vglfr (~vglfr@46.96.174.179) (Ping timeout: 240 seconds)
[06:48:39] *** Joins: Everything (~Everythin@37.115.210.35)
[06:50:46] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:54:42] <whatif> ok
[06:55:08] *** Joins: nitrix (~nitrix@user/nitrix)
[06:55:37] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[06:56:34] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[06:56:56] *** Joins: vglfr (~vglfr@46.96.174.179)
[06:59:04] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:59:04] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:59:04] *** finn_elija is now known as FinnElija
[06:59:45] *** Joins: deadmarshal (~deadmarsh@95.38.117.216)
[06:59:57] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:01:06] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[07:01:17] *** Quits: td_ (~td@94.134.91.211) (Ping timeout: 240 seconds)
[07:03:25] *** Joins: td_ (~td@94.134.91.124)
[07:04:19] *** Quits: deadmarshal (~deadmarsh@95.38.117.216) (Ping timeout: 256 seconds)
[07:04:21] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:08:02] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[07:12:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[07:13:17] *** Quits: alp (~alp@user/alp) (Ping timeout: 268 seconds)
[07:19:44] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[07:21:37] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[07:24:48] *** Joins: Erutuon (~Erutuon@user/erutuon)
[07:24:54] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[07:28:06] *** Joins: img (~img@user/img)
[07:33:32] *** Quits: ksqsf (~user@2001:da8:d800:611:6124:3c0b:af08:60c3) (Ping timeout: 240 seconds)
[07:36:50] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[07:43:42] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[07:44:56] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[07:45:06] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:45:28] *** Joins: syntactic_sugar (~amoljha@2601:644:8601:2e30::a5c9)
[07:46:53] *** Joins: vicfred (~vicfred@user/vicfred)
[07:49:05] *** Quits: ukari (~ukari@user/ukari) (Remote host closed the connection)
[07:49:23] *** Quits: ncopa3 (~ncopa@gbr2-dev1.alpinelinux.org) (Remote host closed the connection)
[07:49:54] *** Joins: ukari (~ukari@user/ukari)
[07:50:03] *** Joins: ncopa3 (~ncopa@gbr2-dev1.alpinelinux.org)
[07:50:42] *** Quits: ncopa3 (~ncopa@gbr2-dev1.alpinelinux.org) (Remote host closed the connection)
[07:58:39] *** Joins: ksqsf (~user@2001:da8:d800:611:c13d:b81b:be0e:11e7)
[08:03:18] *** Quits: ksqsf (~user@2001:da8:d800:611:c13d:b81b:be0e:11e7) (Ping timeout: 250 seconds)
[08:04:55] *** Quits: jenna8912 (~jenna@c-107-5-104-51.hsd1.mi.comcast.net) (Quit: Reconnecting)
[08:05:07] *** Joins: jenna8912 (~jenna@c-107-5-104-51.hsd1.mi.comcast.net)
[08:08:09] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[08:09:54] *** Joins: ksqsf (~user@2001:da8:d800:611:d9b6:69a8:2257:386c)
[08:17:49] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[08:21:05] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca)
[08:28:41] *** Quits: syntactic_sugar (~amoljha@2601:644:8601:2e30::a5c9) (Quit: WeeChat 3.3)
[08:28:54] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:30:04] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[08:42:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:45:40] *** Joins: Guest20202 (~Guest2020@c-73-231-173-85.hsd1.ca.comcast.net)
[08:45:45] *** Quits: vglfr (~vglfr@46.96.174.179) (Ping timeout: 256 seconds)
[08:45:56] *** Quits: Guest20202 (~Guest2020@c-73-231-173-85.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:45:56] *** Quits: jenna8912 (~jenna@c-107-5-104-51.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:46:00] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:49:29] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[08:49:53] *** Joins: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net)
[08:50:55] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:50:55] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:50:55] *** Joins: wroathe (~wroathe@user/wroathe)
[08:52:21] *** Quits: boxscape_ (~boxscape_@p4ff0b9d5.dip0.t-ipconnect.de) (Quit: Connection closed)
[08:54:15] *** Quits: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[08:55:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:56:16] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[09:00:57] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 240 seconds)
[09:03:09] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[09:07:40] *** Joins: deadmarshal (~deadmarsh@95.38.117.216)
[09:10:00] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[09:20:36] *** Joins: ardell (~ardell@user/ardell)
[09:20:57] *** Quits: deadmarshal (~deadmarsh@95.38.117.216) (Ping timeout: 240 seconds)
[09:21:20] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[09:25:15] *** Quits: martin02 (~silas@141.84.69.76) (Read error: Connection reset by peer)
[09:25:49] *** Joins: martin02 (~silas@141.84.69.76)
[09:27:35] *** Joins: deadmarshal (~deadmarsh@95.38.117.216)
[09:29:37] *** Joins: lavaman (~lavaman@98.38.249.169)
[09:31:03] *** Quits: argento (~argent0@168-227-97-23.ptr.westnet.com.ar) (Remote host closed the connection)
[09:32:21] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Quit: brb)
[09:36:43] *** Joins: fef (~thedawn@user/thedawn)
[09:38:32] *** Joins: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net)
[09:38:52] *** Joins: rusrushal13 (~rusrushal@2401:4900:30b8:7574:7056:ba63:5158:d96f)
[09:39:47] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:39:47] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:39:47] *** Joins: wroathe (~wroathe@user/wroathe)
[09:42:37] *** Quits: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[09:43:32] *** Joins: prasad (~user@c-73-170-49-136.hsd1.ca.comcast.net)
[09:44:39] *** Joins: ix (~ix@2a02:8010:674f:0:cda6:d05:f0d7:4922)
[09:45:05] <ix> ski: huh, you vanished other places
[09:47:04] <ix> joeyh: hey, im fiddling with your propellor :) trying to add another OS, so i'm looking for a way to generalize `pickOS`. Unfortunately i've never used Sing or Type families before so I'm so lost here... any pointers?
[09:47:18] <prasad> I want to write a function which would take a [Int] -> [Int]. Inside the function I want to multiply each number by 5 and return a single [Int] if it matches the particular criteria or return the entire list multiplied by 5
[09:47:42] <prasad> Need help with this
[09:48:11] <ix> prasad: maybe implement that step by step, if that makes it easier
[09:49:02] *** Quits: EsoAlgo (~EsoAlgo@152.70.142.52) (Ping timeout: 240 seconds)
[09:49:25] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[09:49:51] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[09:50:54] <prasad> The issue is I don't want to process the entire list and then filter the elements.
[09:51:14] <prasad> I want to return early if the criteria is matched
[09:53:00] *** Joins: Jing (~hedgehog@115.207.51.203)
[09:55:38] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[09:56:40] <ix> https://hackage.haskell.org/package/propellor-5.1.0/docs/src/Propellor-Property.html#pickOS if anyone else can help?
[09:57:30] <ix> prasad: so an alternative computation
[09:59:47] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:00:21] <ix> prasad: `<|> :: Maybe a -> Maybe a -> Maybe a` where `Nothing <|> m = m`, `m <|> Nothing = m` and `Nothing <|> Nothing = Nothing`
[10:00:43] <ix> You'll be able to build something on that i'm sure
[10:01:05] *** Joins: lavaman (~lavaman@98.38.249.169)
[10:01:12] <prasad> checkMultiple::[Int] -> [Int]
[10:01:12] <prasad> checkMultiple [] = []
[10:01:12] <prasad> checkMultiple (x:xs) = let b = x * 20 in    
[10:01:12] <prasad>     case b of
[10:01:15] <prasad>         20 -> [10]
[10:01:18] <prasad>         _ -> b: checkMultiple xs
[10:02:01] <prasad> If I pass [2,3,1,5] it returns [40,60,10]
[10:02:24] <prasad> I want to return only [10]
[10:03:51] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[10:04:10] <prasad> Should I use Either 
[10:04:36] <prasad> checkMultiple ::[Int] -> Either a
[10:05:14] <ix> prasad: implement it step by step.
[10:05:38] <ix> First, multiply the list. Have a list with everything multiplied. Stop there
[10:06:34] <ix> Then, scan the list, mapping it into Maybes. Then, you just look for the first Just.
[10:06:51] <ix> Don't overcomplicate it
[10:08:06] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[10:09:44] <ksqsf> prasad: doing it step by step in haskell is no problem; lists are lazily evaluated
[10:10:41] <ix> joeyh: feel free to just ping me when you return, i'll see it 
[10:13:35] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[10:13:51] *** Joins: lavaman (~lavaman@98.38.249.169)
[10:14:44] *** Joins: EsoAlgo (~EsoAlgo@152.70.142.52)
[10:16:05] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[10:17:56] *** Joins: fef (~thedawn@user/thedawn)
[10:20:57] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Ping timeout: 240 seconds)
[10:21:00] *** Joins: chomwitt (~chomwitt@ppp-94-67-1-27.home.otenet.gr)
[10:21:41] <prasad> ix: would it be possible for you to review https://gist.github.com/presci/b8b3ac2a52528339c33b6cb018248668
[10:22:10] <prasad> https://adventofcode.com/2021/day/4
[10:22:48] <prasad> In the code I have 2 functions isWinner and updateBingoBoard this is tested and it works
[10:23:23] <prasad> The issue is if I have lot of boards. And if I find some board that matches the criteria
[10:23:30] <prasad> I don't want to process the list any further
[10:25:15] <prasad> I can process the all the  board with fmap and map function
[10:25:29] *** Quits: rusrushal13 (~rusrushal@2401:4900:30b8:7574:7056:ba63:5158:d96f) (Ping timeout: 256 seconds)
[10:28:54] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[10:30:12] *** Quits: SummerSonw (~The_viole@203.77.49.232) (Ping timeout: 250 seconds)
[10:30:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:31:41] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[10:34:24] <ix> prasad: what do you think this function does? -- func xs = asum $ map (\x -> if x == 7 then Just (x*5) else Nothing) xs
[10:35:00] *** Joins: vglfr (~vglfr@88.155.83.78)
[10:35:09] <ix> prasad: and more importantly, what happens when you apply it to [1..] (infinite list of numbers counting up from 1)
[10:35:26] <ix> > [1..]
[10:35:27] <lambdabot>  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,...
[10:35:42] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[10:37:35] *** Joins: nunggu (~q@user/nunggu)
[10:38:34] *** Joins: lavaman (~lavaman@98.38.249.169)
[10:39:17] *** Quits: mvk (~mvk@2607:fea8:5cdd:f000::55f8) (Ping timeout: 240 seconds)
[10:40:09] <prasad> map would be evaluated once till x == 7 even if the list is infinite
[10:41:05] *** Joins: mvk (~mvk@173.33.176.132)
[10:41:57] *** Quits: shapr (~user@2601:7c0:c37c:46d0:25fd:6854:a2a7:2f62) (Ping timeout: 240 seconds)
[10:44:42] <ix> prasad: exactly, so return would be 35
[10:44:46] *** Quits: deadmarshal (~deadmarsh@95.38.117.216) (Quit: ZNC 1.8.2 - https://znc.in)
[10:45:10] *** Joins: deadmarshal (~deadmarsh@95.38.117.216)
[10:45:21] <ix> > (\xs -> asum $ map (\x -> if x == 7 then Just (x*5) else Nothing) xs) [1..]
[10:45:23] <lambdabot>  Just 35
[10:45:40] <ix> prasad: so, how can you apply that to your situation?
[10:46:43] <ix> Laziness :) i asked haskell to run an infinite number of calls, it skipped most of them cause only the first 7 matter
[10:47:13] <ix> Note: asum is just a fold with <|>, which i described above
[10:47:27] <ix> :t asum
[10:47:28] <lambdabot> (Foldable t, Alternative f) => t (f a) -> f a
[10:47:33] <ix> :t <|>
[10:47:34] <lambdabot> error: parse error on input ‘<|>’
[10:47:40] <ix> :t (<|>)
[10:47:42] <lambdabot> Alternative f => f a -> f a -> f a
[10:48:41] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[10:52:38] *** Joins: lavaman (~lavaman@98.38.249.169)
[10:52:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[10:58:15] *** Joins: notzmv (~zmv@user/notzmv)
[11:01:02] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[11:01:02] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[11:01:02] *** Joins: wroathe (~wroathe@user/wroathe)
[11:02:17] *** Quits: fizzsegfaultbuzz (~segfaultf@135-180-0-138.static.sonic.net) (Ping timeout: 240 seconds)
[11:04:41] <prasad> ix: Thank you so much 
[11:04:53] <ix> Np
[11:05:44] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[11:05:47] *** Quits: Jing (~hedgehog@115.207.51.203) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:06:03] *** Joins: frx (~bc8147f2@cerf.good1.com)
[11:07:39] <frx> hi. what is a good web scaper for haskell? 
[11:07:55] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[11:08:43] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[11:10:09] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[11:12:14] *** Joins: SummerSonw (~The_viole@203.77.49.232)
[11:13:06] *** Joins: nunggu (~q@user/nunggu)
[11:13:07] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:9dd8:fa79:cee0:389c)
[11:14:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:16:36] <ksqsf> frx: scalpel is pretty good
[11:17:05] <ksqsf> @package scalpel
[11:17:05] <lambdabot> https://hackage.haskell.org/package/scalpel
[11:19:25] <frx> thanks!
[11:19:57] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:23:42] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[11:32:37] *** Quits: polyphem (~rod@2a02:810d:840:8754:b6f3:5141:3b3:83de) (Ping timeout: 240 seconds)
[11:32:47] *** Joins: polyphem (~rod@2a02:810d:840:8754:b6f3:5141:3b3:83de)
[11:32:56] *** Joins: Erutuon (~Erutuon@user/erutuon)
[11:33:55] <ix> Well, at least i got _something_ working, it's just not pretty...
[11:40:57] *** Quits: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net) (Ping timeout: 240 seconds)
[11:42:44] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 256 seconds)
[11:43:54] *** Quits: akurilin_ (uid322841@id-322841.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[11:44:52] *** Joins: myShoggoth (~myShoggot@97-120-67-120.ptld.qwest.net)
[11:45:10] *** Joins: ncopa3 (~ncopa@gbr2-dev1.alpinelinux.org)
[11:45:59] *** Quits: jrm (~jrm@156.34.173.250) (Quit: ciao)
[11:46:17] *** Joins: jrm (~jrm@156.34.173.250)
[11:47:22] *** Joins: Guest35 (~Guest35@035-134-068-107.res.spectrum.com)
[11:47:22] *** Quits: vglfr (~vglfr@88.155.83.78) (Read error: Connection reset by peer)
[11:47:33] *** Joins: vglfr (~vglfr@88.155.83.78)
[11:49:31] *** Quits: ukari (~ukari@user/ukari) (Remote host closed the connection)
[11:50:41] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[11:51:58] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[11:53:16] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[11:54:11] *** Quits: polyphem (~rod@2a02:810d:840:8754:b6f3:5141:3b3:83de) (Quit: WeeChat 3.4)
[11:54:23] *** Joins: polyphem (~rod@2a02:810d:840:8754:b6f3:5141:3b3:83de)
[11:59:37] *** Joins: lavaman (~lavaman@98.38.249.169)
[11:59:37] *** Joins: _ht (~quassel@2a02:a468:b619:1:aa62:dbcc:166b:da6a)
[12:05:03] *** Quits: Guest35 (~Guest35@035-134-068-107.res.spectrum.com) (Quit: Client closed)
[12:05:47] *** Quits: vglfr (~vglfr@88.155.83.78) (Ping timeout: 256 seconds)
[12:09:40] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[12:11:27] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[12:21:17] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:494b:f936:f65f:424f) (Remote host closed the connection)
[12:22:15] *** Joins: mmhat (~mmh@55d4e57c.access.ecotel.net)
[12:22:34] *** Joins: vglfr (~vglfr@88.155.83.78)
[12:23:32] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 240 seconds)
[12:26:22] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[12:30:37] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:30:45] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[12:32:01] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[12:40:12] *** Joins: lavaman (~lavaman@98.38.249.169)
[12:44:32] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 250 seconds)
[12:46:04] *** Joins: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr)
[12:47:44] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Killed (NickServ (GHOST command used by allbery_b)))
[12:47:44] *** Joins: allbery_b (~geekosaur@xmonad/geekosaur)
[12:47:47] *** allbery_b is now known as geekosaur
[12:48:21] *** Joins: lavaman (~lavaman@98.38.249.169)
[12:50:31] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[12:51:05] *** Joins: sayola (~vekto@dslb-088-064-186-153.088.064.pools.vodafone-ip.de)
[12:51:12] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[12:55:24] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[12:55:56] *** Joins: xkuru (~xkuru@user/xkuru)
[12:57:02] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[12:59:42] *** Quits: ksqsf (~user@2001:da8:d800:611:d9b6:69a8:2257:386c) (Ping timeout: 250 seconds)
[13:01:29] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[13:02:56] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 268 seconds)
[13:09:37] *** Joins: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao)
[13:09:45] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[13:18:37] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[13:21:40] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:494b:f936:f65f:424f)
[13:21:58] *** Joins: Tuplanolla (~Tuplanoll@91-159-68-166.elisa-laajakaista.fi)
[13:22:58] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:25:17] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[13:25:44] *** Joins: ksqsf (~user@222.195.66.54)
[13:25:47] *** Joins: raym (~raym@user/raym)
[13:25:57] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:494b:f936:f65f:424f) (Ping timeout: 240 seconds)
[13:29:57] *** Quits: ksqsf (~user@222.195.66.54) (Ping timeout: 240 seconds)
[13:34:07] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[13:35:53] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:36:49] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[13:37:24] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 250 seconds)
[13:40:11] *** Parts: jakalx (~jakalx@base.jakalx.net) ()
[13:42:35] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:42:39] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[13:42:45] *** Joins: ksqsf (~user@2001:da8:d800:611:9070:c59b:1340:4fd8)
[13:43:11] *** Joins: lavaman (~lavaman@98.38.249.169)
[13:43:57] *** Joins: fef (~thedawn@user/thedawn)
[13:45:56] *** Joins: dudek (~dudek@185.150.236.105)
[13:47:02] *** Quits: ksqsf (~user@2001:da8:d800:611:9070:c59b:1340:4fd8) (Ping timeout: 240 seconds)
[13:47:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[13:49:29] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-134.dsl.bell.ca) (Ping timeout: 256 seconds)
[13:49:40] *** Joins: sherlock_95 (~sherlock_@static.131.42.161.5.clients.your-server.de)
[13:50:11] *** Quits: tzh_ (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[13:56:02] *** Joins: Guest5234 (~Guest52@80-100-97-100.ip.xs4all.nl)
[13:56:28] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 256 seconds)
[13:57:04] *** Joins: doogled (~doogled@cpc101088-sgyl37-2-0-cust22.18-2.cable.virginm.net)
[13:57:28] <doogled> hi! im reading about different opperating systems, im wondering if i can use haskell with them
[13:57:44] <doogled> eg. https://en.wikipedia.org/wiki/LineageOS
[13:58:32] <doogled> ghci could be run on android with a linux shell from the app store
[13:58:40] <Axman6> I think it might still be possible to compile Haskell programs for Android? I haven't seen anyone doing it for a while though
[13:59:03] <doogled> oblisk does that right?
[13:59:32] *** Joins: ksqsf (~user@222.195.66.54)
[13:59:44] <doogled> https://github.com/obsidiansystems/obelisk#android
[14:00:51] <doogled> i think basically this enables a workaround to avoid the "proprietary" style languages promoted by google via the android SDK
[14:00:55] *** Joins: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk)
[14:01:04] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[14:01:22] <doogled> but i thought maybe the barrier to achieving this might be less on a FOSS OS
[14:02:14] <doogled> to avoid having to do things like targeting browsers, it having to be totally cross platform just to target a particular platform
[14:02:26] <doogled> s/it/ie
[14:03:10] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[14:03:50] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[14:04:13] *** Quits: ksqsf (~user@222.195.66.54) (Ping timeout: 256 seconds)
[14:05:34] *** Quits: xff0x (~xff0x@2001:1a81:52f4:b00:8413:5c77:eacd:b6f4) (Ping timeout: 250 seconds)
[14:06:08] <Axman6> building and maintaining a cross compiling compiler is a lot of work, and the ability to do these things with newer compilers often disappears when there's no one using them and/or no one to maintain them
[14:06:29] *** Joins: xff0x (~xff0x@2001:1a81:52f4:b00:f090:2f6f:e297:e289)
[14:07:10] <Axman6> it's much less to do with proprietary systems or not, GHC is much more at home on macOS, which is arguably more proprietary in some ways, becaus eit's very widely used and people notice very quickly when something breaks
[14:08:01] <doogled> right.
[14:08:30] <doogled> so a "fringe" OS like lineage is going to be even worse, since even android was difficult and thats huge
[14:08:43] <doogled> damn
[14:08:49] *** Joins: jakalx (~jakalx@base.jakalx.net)
[14:10:41] <whatif> how to setHeader ContentType x-www-urlencode in scotty? setHeader seems not work
[14:11:07] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:11:07] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:11:07] *** Joins: wroathe (~wroathe@user/wroathe)
[14:12:35] <doogled> seems like you can just run android apps on it though. lineageSDK seems to be for developing built in "apps" by rebuilding the entire OS, which seems strange, and unlikely to be able to incorporate haskell code.
[14:13:11] <doogled> i think this is not going to work, so ill abandon this
[14:13:13] *** Quits: doogled (~doogled@cpc101088-sgyl37-2-0-cust22.18-2.cable.virginm.net) (Quit: Connection closed)
[14:14:54] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:15:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:16:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[14:17:42] *** Joins: ksqsf (~user@222.195.66.54)
[14:17:44] *** Lord_of_Life_ is now known as Lord_of_Life
[14:18:00] *** Joins: rusrushal13 (~rusrushal@2401:4900:30b2:5d11:6d9c:20fd:e248:3e06)
[14:22:52] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5d8e:db89:f241:b6e3)
[14:22:54] *** Quits: ksqsf (~user@222.195.66.54) (Ping timeout: 250 seconds)
[14:26:57] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5d8e:db89:f241:b6e3) (Ping timeout: 240 seconds)
[14:27:45] *** Joins: lavaman (~lavaman@98.38.249.169)
[14:29:11] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[14:30:50] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[14:31:03] *** Joins: fendor (~fendor@178.115.77.166.wireless.dyn.drei.com)
[14:31:05] *** Joins: alx741 (~alx741@157.100.93.160)
[14:36:04] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[14:36:32] *** Joins: ksqsf (~user@2001:da8:d800:611:5c82:dd4f:5803:24eb)
[14:36:32] *** Quits: vglfr (~vglfr@88.155.83.78) (Ping timeout: 240 seconds)
[14:36:52] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:40:05] *** Joins: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net)
[14:40:31] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[14:41:06] *** Quits: ksqsf (~user@2001:da8:d800:611:5c82:dd4f:5803:24eb) (Ping timeout: 250 seconds)
[14:41:34] *** Joins: lavaman (~lavaman@98.38.249.169)
[14:41:55] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:41:55] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:41:55] *** Joins: wroathe (~wroathe@user/wroathe)
[14:44:38] *** Quits: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[14:46:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[14:48:37] *** Joins: ksqsf (~user@2001:da8:d800:611:b5c6:888c:6867:54e9)
[14:48:37] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:48:43] *** Quits: dudek (~dudek@185.150.236.105) (Read error: Connection reset by peer)
[14:48:55] *** Joins: dudek (~dudek@185.150.236.105)
[14:49:28] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-67.dsl.bell.ca)
[14:50:04] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[14:54:50] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-67.dsl.bell.ca) (Ping timeout: 256 seconds)
[15:04:11] *** Joins: vglfr (~vglfr@88.155.24.103)
[15:04:51] *** Quits: rusrushal13 (~rusrushal@2401:4900:30b2:5d11:6d9c:20fd:e248:3e06) (Ping timeout: 256 seconds)
[15:05:02] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 240 seconds)
[15:05:56] *** Joins: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr)
[15:06:42] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[15:07:54] *** Quits: frx (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC)
[15:08:24] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[15:10:42] *** Quits: mcgroin (~mcgroin@roc37-h01-176-170-197-243.dsl.sta.abo.bbox.fr) (Ping timeout: 256 seconds)
[15:11:09] *** Joins: rusrushal13 (~rusrushal@2401:4900:30b2:5d11:6d9c:20fd:e248:3e06)
[15:14:37] *** Quits: juri_ (~juri@178.63.35.222) (Ping timeout: 240 seconds)
[15:14:58] *** Joins: Guest7361 (~Guest73@2a02:c7f:582d:5100:9841:acc1:6b39:cb9f)
[15:15:04] *** Parts: Guest7361 (~Guest73@2a02:c7f:582d:5100:9841:acc1:6b39:cb9f) ()
[15:18:01] <whatif> I found a every disturb thing in the wiki about type signature, in scotty, text :: Text ->... I though it's Data.Text, but click it, it's Data.Text.Lazy
[15:18:27] <whatif> so why not use text :: Data.Text.Lazy.Text -> ... to describe
[15:19:12] <whatif> there're so many ByteString, I have to qualified them as DB DBC blabla
[15:19:26] <whatif> that's very anonying
[15:19:37] *** Quits: xff0x (~xff0x@2001:1a81:52f4:b00:f090:2f6f:e297:e289) (Ping timeout: 240 seconds)
[15:20:10] <whatif> so the code have to became D.xxx DB.xxx DT.xxx DTL.xxx
[15:20:46] <whatif> not elegent at all...
[15:20:49] *** Joins: xff0x (~xff0x@2001:1a81:52f4:b00:df96:89e3:722a:400f)
[15:23:36] *** Joins: lavaman (~lavaman@98.38.249.169)
[15:26:05] <ksqsf> whatif: I agree it's annoying. You can define type synonyms to mitigate it.
[15:26:14] <ksqsf> type Text = Data.Text.Text
[15:26:20] <ksqsf> type LText = Data.Text.Lazy.Text
[15:27:20] *** Quits: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk) (Remote host closed the connection)
[15:28:13] *** Joins: jgeerds (~jgeerds@55d4a547.access.ecotel.net)
[15:30:43] <ephemient> it would be handy if there were a way to import Data.Text.Lazy (Text as LText), but there isn't
[15:32:49] <polyphem> whatif: you could also use Text.Builder to construct all your content as Text.Strict , and wrap it all in : text $ fromStrict $ do (all strict text builder stuff)
[15:33:32] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 250 seconds)
[15:36:15] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[15:46:00] *** Quits: rusrushal13 (~rusrushal@2401:4900:30b2:5d11:6d9c:20fd:e248:3e06) (Quit: Ping timeout (120 seconds))
[15:53:44] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[15:54:12] <whatif> polyphem: but not just Text has so many kinds, others too
[15:55:02] <polyphem> they all have their usecases, there is no silver bullet for all cases :(
[15:56:44] <polyphem> if youd load a big file to show on the website, you wouldnt want for text to bes strict , or would you ?
[15:58:00] *** Joins: lavaman (~lavaman@98.38.249.169)
[15:59:05] <whatif> fine
[15:59:44] <whatif> how to append a newline character with Data.ByteString.writeFile?
[16:00:07] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[16:00:17] <polyphem> its hard at the beginning when you stumble on all the variations, but once you get to know them , you can structure your approach more clearly 
[16:01:20] <polyphem> whatif: https://gist.github.com/dino-/28b09c465c756c44b2c91d777408e166
[16:02:55] <whatif> polyphem: Data.ByteString.Char8.pack "\n"?
[16:04:07] <whatif> Data.ByteString.appendFile "test.txt" Data.ByteString.Char8.pack "\n"?
[16:04:56] <polyphem> is file ascii or utf8 ?
[16:05:02] <whatif> utf8
[16:06:50] *** Joins: juri_ (~juri@178.63.35.222)
[16:08:24] <polyphem> yep, that should work
[16:08:31] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[16:08:52] *** Joins: wroathe (~wroathe@user/wroathe)
[16:10:57] *** Quits: _ht (~quassel@2a02:a468:b619:1:aa62:dbcc:166b:da6a) (Ping timeout: 240 seconds)
[16:11:20] <polyphem> whatif: for any unicode char however youd have tot do : Data.ByteString.appendFile "foo" $ Data.Text.Encoding.encodeUtf8 "\n"
[16:11:48] *** Joins: _ht (~quassel@37.120.218.149)
[16:13:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[16:16:16] <ephemient> the utf-8 encoding of \n is the same as ascii
[16:18:00] *** AlexZenon_2 is now known as AlexZenon
[16:18:51] <polyphem> u23454323
[16:22:32] *** Joins: __monty__ (~toonn@user/toonn)
[16:23:22] *** Quits: chomwitt (~chomwitt@ppp-94-67-1-27.home.otenet.gr) (Ping timeout: 250 seconds)
[16:24:18] *** Joins: lavaman (~lavaman@98.38.249.169)
[16:27:10] *** Joins: Morrow_ (~Morrow@bzq-110-168-31-106.red.bezeqint.net)
[16:27:19] *** Quits: Morrow (~Morrow@bzq-110-168-31-106.red.bezeqint.net) (Read error: Connection reset by peer)
[16:27:32] *** Joins: Morrow (~Morrow@bzq-110-168-31-106.red.bezeqint.net)
[16:28:09] *** Quits: max22- (~maxime@lfbn-ren-1-1026-62.w92-139.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[16:30:36] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[16:31:17] *** Quits: Morrow_ (~Morrow@bzq-110-168-31-106.red.bezeqint.net) (Ping timeout: 240 seconds)
[16:32:12] <whatif> I found there's non-ISO extended-ASCII, we already have utf8, what's its purpose?
[16:32:39] <whatif> like exfat to fat32?
[16:34:34] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[16:35:03] <hpc> are they older or newer than unicode, and by how many years?
[16:35:34] <hpc> unicode support wasn't universal when it was first standardized, and there was a lot of time before it where computers still existed and people who didn't speak english needed to use them :P
[16:35:44] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[16:36:22] <whatif> so many languages, so many encodings
[16:36:46] <hpc> it's more like "why are there so many filesystems when we already have zfs"
[16:37:38] *** Joins: o-90 (~o-90@gateway/tor-sasl/o-90)
[16:40:44] *** Joins: fendor_ (~fendor@91.141.78.76.wireless.dyn.drei.com)
[16:43:02] *** Quits: fendor (~fendor@178.115.77.166.wireless.dyn.drei.com) (Ping timeout: 240 seconds)
[16:45:19] *** Joins: leibniz (~leibniz@cpc101088-sgyl37-2-0-cust22.18-2.cable.virginm.net)
[16:45:27] <leibniz> is there a way to calculate fractions of time?
[16:45:51] <leibniz> eg, is time t in the first or seccond half of a given hour or day
[16:46:14] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[16:46:16] <leibniz> i mean, is there a library which gives this kind of functionality
[16:47:52] <timCF> Hello! I'm trying to statically compile haskell project, and it seems working, but at some point build process is failing on compiling normal haskell dependency (katip) which is used for logging. It's very strange, because it's complaining about missing shared libraries, but libnraries themselves are just haskell deps. Any ideas? https://gist.github.com/21it/dba7b0ea6d847041b1726e72a1e53561
[16:48:44] *** Quits: deadmarshal (~deadmarsh@95.38.117.216) (Ping timeout: 256 seconds)
[16:49:02] *** Joins: deadmarshal (~deadmarsh@68.235.38.164)
[16:49:06] <leibniz> seems like a nix problem
[16:49:12] <leibniz> you could try asking on the nix chan
[16:49:22] *** Quits: ksqsf (~user@2001:da8:d800:611:b5c6:888c:6867:54e9) (Ping timeout: 250 seconds)
[16:49:31] <leibniz> somone here might be able to help too though
[16:49:50] <geekosaur> also that is template haskell which needs the dynamic libraries
[16:50:15] <geekosaur> possibly the build needs to be done with -dynamic-too so that dependencies are available for TH
[16:50:16] <timCF> geekosaur: hi again :)
[16:50:20] <geekosaur> hi :)
[16:50:58] <timCF> geekosaur: you mean some extra flag for cabal?
[16:51:26] <geekosaur> that's a flag to ghc, for cabal it would go in the ghc-options field of the cabal file
[16:51:54] <geekosaur> but with all those deps needing it it'd be more like cabal.project
[16:51:56] <timCF> at the moment I have -static ghc option, and cc-options: -static, and ld-options: -static -pthread
[16:52:28] *** Joins: zincy_ (~zincy@host86-151-99-97.range86-151.btcentralplus.com)
[16:52:32] <geekosaur> you'd need to add -dynamic-too to the ghc options, so that it';s available for th
[16:52:51] <geekosaur> ghc would otherwise ignore it, but TH needs to be able to load those dependencies dynamically
[16:52:54] *** Joins: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk)
[16:53:05] <timCF> geekosaur: Thanks! I'll try this!
[16:53:07] <geekosaur> (or you'df need to compile them into ghc itself)
[16:53:21] *** Quits: o-90 (~o-90@gateway/tor-sasl/o-90) (Ping timeout: 276 seconds)
[16:54:53] <leibniz> youd think that this would be made obvious in the error message...
[16:55:05] <leibniz> if all the things that depend on lens are going to break with -static
[16:55:12] <leibniz> because of the TH
[16:55:34] <geekosaur> it kinda did, it's just that the real clue is at the end
[16:55:39] *** Parts: oxytocat (~alloca@user/suppi) (WeeChat 1.9.1)
[16:55:57] <geekosaur> TH could use better error messages though, yes
[16:56:50] <leibniz> what "dist/build/Katip/Format/Time.dyn_o" ?
[16:57:20] <geekosaur> the clue in the earlier ones is in the warning name -Wmissed-extra-shared-lib, then the actual error references ghci instead of TH because they use the same code and it more commonly happens with ghci
[16:57:38] <geekosaur> but explains all the "extra shared lib" references, at least
[16:57:53] *** Quits: jgeerds (~jgeerds@55d4a547.access.ecotel.net) (Ping timeout: 268 seconds)
[16:58:14] <timCF> geekosaur: TH uses ghci code base?
[16:58:48] <geekosaur> both of them use the bytecode backend and bytecode linker
[16:59:09] <leibniz> ah right, so if you see an error mentioning GHCI while compiling using GHC it could be because of some dynamic/static TH thing
[16:59:34] <geekosaur> but, come to think of it, if you requested -static, why indeed is it compiling to .dyn_o?
[17:00:32] <leibniz> i mean, i dont even use lens because it uses TH and i try to stick to idomatic haskell where i can, but this means that libraries are going to fail in ways i wont know how to fix because of never having used this esoteric approach. damn lenses!!
[17:02:03] <leibniz> but then i dont program using datatype record names either... which i guess is completely impossible in the real world
[17:02:32] <timCF> Lenses are useful :) And singletons are useful, but sometimes compiler breaks in a super strange way with these libraries
[17:02:33] <geekosaur> lens doesn't require TH, it just makes record accesses easier. but there's a generic-lens package that is an alternative
[17:03:15] <leibniz> i guess while it doesnt require it, its commonly used to generate the lenses automatically using special syntax
[17:03:31] <timCF> But thanks to geekosaur seems like I'll be able to fix it, doing rebuild. In nix env with new global flag it will take a while, let's see how it will go
[17:03:45] <leibniz> and that any lib that does that will require these "dynamic compilation" considerations
[17:04:04] <geekosaur> timCF, not sure about that since it ewas compiling katip dynamic instead of static
[17:04:09] <geekosaur> (.dyn_o)
[17:04:24] <geekosaur> nix sometimes decides to do its own thing
[17:05:06] <leibniz> it could at least be worth asking on the nix chan to make them aware of that problem
[17:05:13] <timCF> leibniz: I think ghc-921 actually fixes your problem with records in Haskell
[17:05:24] <leibniz> how do you mean?
[17:05:34] <leibniz> i simply dont use records
[17:06:00] *** Joins: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374)
[17:06:01] <timCF> leibniz: you probably don't use them, because fields getters/setters are not ergonomic without lenses
[17:06:08] <leibniz> but what does 921 offer thats different?
[17:06:15] *** Joins: lavaman (~lavaman@98.38.249.169)
[17:06:34] <timCF> leibniz: new native syntax for working with records as far as I know
[17:06:38] <leibniz> timCF: no, i dont use them because the datatypes i use have navigational indicies instead of named records
[17:06:55] <leibniz> timCF: oh cool, ill read
[17:07:33] <timCF> leibniz: RecordDotSyntax and NoFieldSelectors
[17:07:53] <geekosaur> RecordDotSyntax, which uses typeclasses natively instead of requiring you to derive them with generics or TH
[17:07:54] <leibniz> oh yeah i remember something about this
[17:08:07] <leibniz> so you can have the same record names in different datatypes
[17:08:13] <leibniz> good idea
[17:08:31] <timCF> yeah, seems like reasonable improvement, but I didn't tried it yet
[17:08:32] *** Joins: machinedgod (~machinedg@24.105.81.50)
[17:09:15] <leibniz> i just mean that all the trees i make are using some kind of Free nesting instead of just doing the nesting using normal syntax
[17:09:56] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[17:09:57] <leibniz> its quite complicated since it requires the hetrogenous Freelike structure is annotated with the types at each layer, in a typelevel tree!
[17:10:09] *** Joins: lavaman (~lavaman@98.38.249.169)
[17:10:17] *** Quits: mmhat (~mmh@55d4e57c.access.ecotel.net) (Ping timeout: 240 seconds)
[17:10:27] <leibniz> but at least its extensible, unlike the normal way
[17:11:09] <leibniz> and if your doing stuff like making n-d arrays, then this hetrogenaity means you can generate the type level annotations simply
[17:11:16] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[17:11:35] <leibniz> offshoot of some work to do with index algebras
[17:12:17] <leibniz> basically because numeric compitation has huge datatypes where naming each gridcell would be ridiculous
[17:13:22] <leibniz> got confusing though because of cyclic boundary conditions - waiting for the cyclic explication annotations to appear
[17:14:04] <leibniz> linear kinds or something? idk...
[17:14:23] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[17:17:29] <leibniz> its not a new idea though so i probably shouldnt bore the community with it
[17:17:33] *** Quits: leibniz (~leibniz@cpc101088-sgyl37-2-0-cust22.18-2.cable.virginm.net) (Quit: Connection closed)
[17:18:55] <whatif> could ByteString do <>?
[17:20:03] <geekosaur> it should
[17:20:46] <geekosaur> I see a Monoid instance for it, soi it also has a Semigroup instance and should support <>
[17:21:26] <whatif> let binaryDataList = BSC.lines binaryData
[17:21:34] <whatif> concat $ fmap (<> (BSC.pack "<br>")) binaryDataList
[17:22:05] <whatif> Couldn't match expected type `BSC.ByteString' with actual type `[a0]'
[17:22:34] <whatif> import qualified Data.ByteString.Char8 as BSC
[17:23:34] <geekosaur> that looks like a different problem
[17:24:27] <geekosaur> @where paste
[17:24:27] <lambdabot> Help us help you: please paste full code, input and/or output at e.g. https://paste.tomsmeding.com
[17:24:35] *** Joins: Guest75 (~Guest75@2405:201:c009:616b:bc2b:58f1:50c4:8f86)
[17:24:46] <geekosaur> full code (or at least more than you have there), full error message
[17:24:52] *** Joins: mmhat (~mmh@55d4e57c.access.ecotel.net)
[17:25:43] <whatif> geekosaur: https://paste.tomsmeding.com/RRoOxqdG
[17:26:04] *** Quits: Guest75 (~Guest75@2405:201:c009:616b:bc2b:58f1:50c4:8f86) (Client Quit)
[17:26:07] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[17:26:45] <geekosaur> looks like your problem is the concat
[17:26:56] *** Quits: fendor_ (~fendor@91.141.78.76.wireless.dyn.drei.com) (Remote host closed the connection)
[17:27:06] <geekosaur> since it shows two type errors, one right before it and one right after
[17:27:13] <geekosaur> :t concat
[17:27:14] <lambdabot> Foldable t => t [a] -> [a]
[17:27:22] <geekosaur> % :t concat @[]
[17:27:22] <yahb> geekosaur: [[a]] -> [a]
[17:27:39] <whatif> geekosaur: I should use `foldl1 <>` to instead concat?
[17:27:39] <geekosaur> :t BSC.concat
[17:27:40] <lambdabot> [BSC.ByteString] -> BSC.ByteString
[17:27:47] <whatif> ...
[17:28:14] *** Joins: rusrushal13 (~rusrushal@2401:4900:30b2:5d11:6d9c:20fd:e248:3e06)
[17:28:59] *** Joins: fendor (~fendor@91.141.78.76.wireless.dyn.drei.com)
[17:29:12] <whatif> geekosaur: you're right, BSC.concat worked
[17:29:42] <whatif> I thought that `join` or `concat` gonna work, and I was wrong
[17:34:18] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[17:36:18] *** Joins: nunggu (~q@user/nunggu)
[17:39:22] *** Joins: lavaman (~lavaman@98.38.249.169)
[17:43:30] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[17:46:21] *** Quits: rusrushal13 (~rusrushal@2401:4900:30b2:5d11:6d9c:20fd:e248:3e06) (Ping timeout: 256 seconds)
[17:52:04] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[17:56:34] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[18:11:23] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[18:13:10] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[18:17:46] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[18:22:36] *** Joins: lavaman (~lavaman@98.38.249.169)
[18:23:01] *** Quits: zincy_ (~zincy@host86-151-99-97.range86-151.btcentralplus.com) (Remote host closed the connection)
[18:24:59] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[18:25:12] *** Joins: lavaman (~lavaman@98.38.249.169)
[18:25:19] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[18:29:23] *** Joins: johnjaye (~pi@173.209.65.233)
[18:35:05] *** Joins: zincy_ (~zincy@host86-151-99-97.range86-151.btcentralplus.com)
[18:36:25] *** Quits: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk) (Remote host closed the connection)
[18:38:37] *** Quits: _ht (~quassel@37.120.218.149) (Ping timeout: 240 seconds)
[18:39:31] *** Joins: _ht (~quassel@2a02:a468:b619:1:aa62:dbcc:166b:da6a)
[18:40:23] *** Quits: SummerSonw (~The_viole@203.77.49.232) (Ping timeout: 256 seconds)
[18:41:10] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[18:44:27] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[18:45:16] *** Parts: fef (~thedawn@user/thedawn) (Leaving)
[18:48:19] *** Joins: boxscape_ (~boxscape_@p4ff0b9d5.dip0.t-ipconnect.de)
[18:48:41] *** Quits: zincy_ (~zincy@host86-151-99-97.range86-151.btcentralplus.com) (Remote host closed the connection)
[18:48:57] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[18:49:16] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[18:53:55] *** Joins: max22- (~maxime@2a01cb088335980008f67ae5de220faa.ipv6.abo.wanadoo.fr)
[18:53:56] <boxscape_> I have a Vulkan function that wants a FunPtr as callback. How do I handle `freeHaskellFunPtr` here? Do I call it once at the end of the program (or rather, tell resourcet to do so)? Docs say "This should be called whenever the return value from a foreign import wrapper function is no longer required; otherwise, the storage it uses will leak.",
[18:53:57] <boxscape_> which makes me slightly worried it might leak space every time it's called, though that also seems unlikely?
[18:54:05] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:f0bc:c4cb:1665:1c67)
[18:54:25] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[18:54:59] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[18:55:42] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: Leaving)
[18:55:55] <geekosaur> isn't that typically used with a ForeignPtr?
[18:56:01] *** Joins: lavaman (~lavaman@98.38.249.169)
[18:56:01] <geekosaur> (I think that's the name)
[18:56:21] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:f0bc:c4cb:1665:1c67) (Remote host closed the connection)
[18:56:38] <geekosaur> https://downloads.haskell.org/ghc/latest/docs/html/libraries/base-4.16.0.0/Foreign-ForeignPtr.html
[18:57:19] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[18:57:28] <geekosaur> it's a finalizer for a ForeignPtr, and ForeignPtr ensures it will be called when the associated data is gc-ed
[18:58:42] *** Joins: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net)
[18:59:21] <geekosaur> althoguh I guess I need to know more about what you're doing before I assert that
[19:00:06] *** Quits: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net) (Remote host closed the connection)
[19:00:14] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 250 seconds)
[19:00:16] <boxscape_> geekosaur to be clear, I want the callback to be a haskell function, not a foreign function, I'm not sure if that's the case with FinalizerPtr
[19:00:30] <boxscape_> I suppose it can be since it's just a type synonym
[19:01:04] *** Joins: alx741 (~alx741@157.100.93.160)
[19:04:47] <geekosaur> looks like it has to be a foreign function to me, not a wrapper
[19:05:05] *** Joins: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net)
[19:05:21] <geekosaur> and yes, it looks like it allocates every time it's called, so you would have to pair every call with a freeHaskellFunPtr
[19:05:29] <geekosaur> and can't use ForeignPtr
[19:05:46] <geekosaur> which means you're looking at a bracket type of thing
[19:08:33] <geekosaur> and if you want to retain the value beyond the bracket you have to coopy it, which you may want anyway and convert it to a proper Haskell value instead of a Ptr
[19:08:59] <boxscape_> er if I had a foreign function rather than a wrapper I wouldn't need freeHaskellFunPtr since it's not a haskell function, no? I might be misunderstanding something.
[19:09:37] *** Quits: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[19:10:52] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[19:11:00] <geekosaur> right, I forgit the original use case. do you know how many times the callback will be called?
[19:11:30] <boxscape_> usually not at all but sometimes up to a few times per second, so maybe a few thousand times over the lifetime of the program
[19:11:42] *** Joins: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk)
[19:12:25] <geekosaur> oh, you set the callback once and it gets called whenever? I think you're stuck with (small) leaks
[19:12:31] <boxscape_> ah, fair enough
[19:12:40] <geekosaur> because the docs say it leaks with every call
[19:12:52] <boxscape_> ok, I guess I'll live with that, thanks
[19:15:57] *** Quits: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk) (Ping timeout: 240 seconds)
[19:17:14] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:f0bc:c4cb:1665:1c67)
[19:17:24] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:f0bc:c4cb:1665:1c67) (Remote host closed the connection)
[19:20:10] *** Quits: Alex_test (~al_test@94.233.241.14) (Ping timeout: 250 seconds)
[19:21:22] *** Joins: beepsort (~beepsort@31.205.108.155)
[19:23:27] *** Joins: Alex_test (~al_test@94.233.241.14)
[19:23:57] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:24:09] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[19:24:56] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[19:27:44] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[19:28:36] *** Joins: alx741 (~alx741@157.100.93.160)
[19:28:39] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:31:58] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[19:32:45] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[19:33:05] *** Joins: alekhine (~alekhine@c-73-38-152-33.hsd1.ma.comcast.net)
[19:33:44] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[19:36:08] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[19:36:50] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:40:58] *** Quits: Guest5234 (~Guest52@80-100-97-100.ip.xs4all.nl) (Quit: Connection closed)
[19:41:52] *** Joins: benin (~benin@183.82.31.24)
[19:45:19] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[19:45:57] *** Quits: alekhine (~alekhine@c-73-38-152-33.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[19:47:56] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[19:48:15] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[19:50:27] *** Joins: alx741 (~alx741@157.100.93.160)
[19:51:37] *** Joins: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk)
[19:52:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:52:31] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:52:31] *** Joins: wroathe (~wroathe@user/wroathe)
[19:52:43] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[19:57:00] *** Quits: burnsidesLlama (~burnsides@dhcp168-027.wadham.ox.ac.uk) (Ping timeout: 250 seconds)
[20:00:01] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[20:03:14] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[20:04:03] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:04:58] <maerwald> so... tasty shows tests via -l switch... but when I then use one of those via -p switch is fails to parse the pattern
[20:10:55] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[20:12:12] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:14:00] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[20:15:49] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:20:46] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 268 seconds)
[20:20:57] *** Joins: alx741 (~alx741@157.100.93.160)
[20:22:11] <EvanR> boxscape_, you create the callback 1 time, give it to vulkan 1 time, it gets called many times? I wouldn't worry about freeing anything
[20:22:29] *** Quits: timCF (~timCF@m91-129-100-224.cust.tele2.ee) (Quit: leaving)
[20:22:43] <boxscape_> okay, yeah, that's how it works
[20:22:55] <geekosaur> well, it leaks each time it's called, not when it's created
[20:22:59] <EvanR> no?
[20:23:24] <EvanR> it allocates resources when you create the wrapper not when foreign code calls it
[20:23:32] <geekosaur> "Calls to wrapper stubs like mkCompare allocate storage, which should be released with freeHaskellFunPtr when no longer required."
[20:23:44] <EvanR> mkCompare allocates resources, not uses of the FunPtr
[20:23:57] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[20:24:00] <boxscape_> that does sound reasonable
[20:24:00] <EvanR> they may be talking about creating a new FunPtr for every API call
[20:24:08] <EvanR> which you mgiht have to do sometimes
[20:24:08] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[20:24:32] <EvanR> if it closes over something important and different each time
[20:24:39] *** Quits: deadmarshal (~deadmarsh@68.235.38.164) (Ping timeout: 256 seconds)
[20:24:55] <EvanR> but if foreign code uses the same FunPtr many times, that's not what it's talking about
[20:27:16] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:9dd8:fa79:cee0:389c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:33:57] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[20:34:04] <EvanR> I've struggled so much chasing "small constant leaks" in SDL... it's a losing game
[20:34:18] *** Joins: lispy (~lispy3@84.69.59.93)
[20:35:32] *** Joins: shapr (~user@2601:7c0:c37c:46d0:e679:6b02:49c:44ab)
[20:36:19] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[20:37:24] *** Joins: snake (~snake@user/snake)
[20:37:50] *** Parts: snake (~snake@user/snake) ()
[20:42:27] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Quit: leaving)
[20:42:34] *** Joins: alx741 (~alx741@157.100.93.160)
[20:42:51] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[20:46:17] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[20:47:56] <whatif> I use cabal to install scotty-login-session, meet a little issue, https://paste.tomsmeding.com/4B399kl4
[20:47:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[20:48:30] <whatif> what this mean " add (unliftio-core-0.2.0.1:Control.Monad.IO.Unlift.MonadUnliftIO m) to the context of the type signature for: "
[20:49:19] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[20:49:44] <EvanR> something you used requires MonadUnliftIO support?
[20:50:33] <EvanR> props to you for diving directly into haskell web, that's where all the money is!
[20:52:20] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[20:52:57] <whatif> EvanR I don't understand, more specific?
[20:54:38] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[20:54:49] <EvanR> is that your code at the bottom
[20:55:35] <EvanR> the compiler is suggesting that on line 42 of the paste, you add MonadUnliftIO m. I think.
[20:55:45] <EvanR> to the context 
[20:56:43] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[21:00:38] <whatif> EvanR you mean in the type constraint?
[21:00:49] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[21:02:18] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[21:03:11] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[21:03:30] *** Joins: deadmarshal (~deadmarsh@95.38.119.69)
[21:04:07] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[21:04:25] <EvanR> myfunction :: (The m, Context m) => Rest -> Of -> Sig -> CrazyAssTransformers m a
[21:05:18] <EvanR> yes, constraints
[21:08:16] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[21:08:20] <whatif> yes, it worked
[21:08:35] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:08:43] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[21:09:31] *** Quits: d34df00d (~d34df00d@2600:1700:8c60:3a10::48) (Remote host closed the connection)
[21:10:05] *** Joins: alx741 (~alx741@157.100.93.160)
[21:10:24] *** Joins: d34df00d (~d34df00d@2600:1700:8c60:3a10::48)
[21:10:29] <whatif> now `cabal v2-build` is done, could I turn it into one static linked library for other machine to use?
[21:10:33] <whatif> and how?
[21:13:11] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[21:14:22] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[21:15:06] <EvanR> indeed, that is one of the things cabal does. I'd have to defer to the manual for that
[21:16:40] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:21:04] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[21:21:41] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Ping timeout: 256 seconds)
[21:23:01] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[21:23:08] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[21:26:57] *** Quits: jespada (~jespada@87.74.36.188) (Ping timeout: 240 seconds)
[21:28:41] <whatif> I tried cabal v2-install, cabal: Cannot build the executables in the package scotty-login-session because it does not contain any executables. Check the .cabal file for the package and make sure that it properly declares the components that you expect.
[21:29:22] <whatif> ghc example/Simple.hs, no Web.Scotty.Login.Session found, but I have already compiled it!
[21:29:43] <whatif> cabal repl, import Web.Scotty.Login.Session is ok
[21:29:46] *** Quits: turlando (~turlando@user/turlando) (Read error: Connection reset by peer)
[21:29:51] <whatif> what a tool
[21:30:23] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[21:30:44] *** Joins: jespada (~jespada@87.74.36.188)
[21:31:02] *** Joins: alx741 (~alx741@157.100.93.160)
[21:31:10] *** Quits: retroid_ (~retro@2e40edd9.skybroadband.com) (Quit: Connection error?!)
[21:31:24] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:58a2:2ee7:7301:3a35)
[21:32:30] <EvanR> package does not contain any executables, is that referring to your .cabal file, which should list any exe's and lib's of the package
[21:32:55] <EvanR> ah, that is exactly what it says
[21:34:17] *** Joins: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it)
[21:34:17] *** Quits: turlando (~turlando@93-42-250-112.ip89.fastwebnet.it) (Changing host)
[21:34:17] *** Joins: turlando (~turlando@user/turlando)
[21:34:30] <whatif> cabal v2-install --lib
[21:34:30] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[21:34:46] <EvanR> install...
[21:35:07] <whatif> not?
[21:35:10] <EvanR> spider sense tingling
[21:35:38] <EvanR> usually each project is built in isolation and not installed
[21:35:41] <whatif> cabal is an awful tool than pip or conda
[21:36:02] <EvanR> you should have seen cabal v1
[21:36:21] <monochrom> I don't think it's healthy to scaremonger against "install --lib".  There is nothing to be afraid of.
[21:36:34] *** Joins: johnw (~johnw@76-234-69-149.lightspeed.frokca.sbcglobal.net)
[21:36:44] <[exa]> whatif: you may use conda for haskell packages
[21:36:48] <monochrom> v2-install --lib does not have v1 problems.
[21:36:49] <whatif> monochrom: why after `cabal v2-build`, the package is still not found?
[21:37:12] <whatif> [exa]: are we saying the same "conda"?
[21:37:25] <whatif> python's conda?
[21:37:54] <[exa]> conda is pretty generic, bioinformatics people use it to install R and julia packages
[21:38:00] <whatif> cabal repl can found the compiled package, why ghc and cabal install can't?
[21:38:36] <[exa]> the point is that neither conda nor pip need to solve the dependencies of package compilation artifacts
[21:39:43] <[exa]> so the model of packages and versions that cabal works with is slightly more complicated and much less intuitive
[21:39:45] <whatif> they are very easy to use, just pip install package-name will do
[21:40:38] <EvanR> for some reason I'm better now for considering cabal to the build tool and whatever cabal install does as two separate things
[21:40:39] <geekosaur> sure, and then you're in trouble when you need a different version
[21:40:45] <[exa]> yep, luckily the packages there are extremely simple, thus the simple interface
[21:40:45] <whatif> I need to change four files in the cabal installation
[21:41:04] <EvanR> cabal build and manage deps, something else for installing packages
[21:41:16] <EvanR> or programs
[21:41:17] <monochrom> I use install --lib for a few libraries (but not all). An example is hmatrix. I just want to fire up ghci and :m Numeric.LinearAlgebra and find the eignenvectors of a matrix, and that's it.  Everything does not need a "cabal init" rite.
[21:41:18] <EvanR> or libs
[21:41:54] <whatif> what's your suggestion to use the compiled package after `cabal v2-build`? 
[21:41:57] <EvanR> whatif, which 4?
[21:42:20] <[exa]> whatif: cabal run ?
[21:42:21] <monochrom> And I do have actual projects and of course I don't do "install --lib" for their dependencies.
[21:42:42] <whatif> EvanR two files add ghc feature, one file add the context in type constrain, one change the build depend in the cabal file
[21:43:04] <whatif> [exa]: cabal run exaple/Simple.hs, still not found the compiled module
[21:43:12] <whatif> [exa]: no cabal runghc?
[21:43:13] <[exa]> EvanR: that is a good point btw, I wish we could have the building and package maintainership concerns very separate
[21:43:23] <[exa]> whatif: you can't run a source file right?
[21:43:25] <whatif> [exa]: cabal repl can find the compiled module
[21:43:41] <[exa]> whatif: type `cabal run [your executable name here]`
[21:43:56] <whatif> [exa]: ghc exaple/Simple.hs can't the compiled module too, after `cabla v2-install --lib`, ghc can find it
[21:43:59] <[exa]> do you have an "executable" section specified in the cabal file?
[21:44:10] <whatif> [exa]: no
[21:44:24] <EvanR> one does not simply run without an executable
[21:44:25] <[exa]> how can cabal know what to execute then?
[21:44:39] <whatif> [exa]: the author doesn't config it
[21:44:48] <whatif> and I don't know how to config it
[21:45:24] <[exa]> uuuuh so there's some kindof package that has source code of the library and a few adhoc "executable-like" source files that people are supposed to try
[21:45:29] <[exa]> and they are not really packaged
[21:45:30] <[exa]> right?
[21:45:41] <whatif> [exa]: now can I compile the whole module into one library to copy for my vps?
[21:46:45] <[exa]> in that case, do `cabal install` in the package directory (that will make the package available for ghc), then you can compile the examples with ghc using `ghc -package yourpackagename example/Simple.hs -o simple` or so
[21:46:50] <whatif> my vps only has 1GB RAM, can't compile this 
[21:47:05] <[exa]> uh oh
[21:47:15] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[21:47:24] <EvanR> are we now about to get into cross compilation
[21:47:37] <[exa]> add swap
[21:47:41] <whatif> EvanR still haskell
[21:48:44] <whatif> [exa]: it's a vps, how do you suppose to get a swap partition
[21:49:01] *** Quits: acowley (~acowley@c-68-83-22-43.hsd1.nj.comcast.net) (Ping timeout: 240 seconds)
[21:49:46] <whatif> if you mean a swap file, and config kernel, that's hard
[21:49:48] <[exa]> `umask 066; truncate -s 4G /myswap; mkswap /myswap; swapon /myswap`
[21:49:51] *** Quits: ardell (~ardell@user/ardell) (Quit: Konversation terminated!)
[21:49:57] <[exa]> the hard part ^
[21:50:15] <whatif> will-try
[21:50:25] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:50:34] *** Joins: cosimone (~user@93-47-231-147.ip115.fastwebnet.it)
[21:51:18] *** Joins: alx741 (~alx741@157.100.93.160)
[21:51:21] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[21:51:47] <whatif> [exa]: swapon: /myswap: skipping - it appears to have holes.
[21:52:07] <whatif> free -h Swap:            0B          0B          0B
[21:52:09] *** Quits: mbuf (~Shakthi@122.174.198.26) (Quit: Leaving)
[21:52:09] <[exa]> oh noes
[21:52:31] *** Joins: acowley (~acowley@c-68-83-22-43.hsd1.nj.comcast.net)
[21:52:48] <whatif> [exa]: someting wrong?
[21:52:51] <[exa]> try fixing it with something like `dd bs=1M count=4096 if=/dev/zero of=/myswap`
[21:53:23] <[exa]> I didn't realize it's linux
[21:54:44] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[21:55:05] <whatif> [exa]: done, then what? swapon /myswap?
[21:56:25] <whatif> aha, mkswap /myswap; swapon /myswap worked
[21:57:17] <[exa]> great
[21:57:25] <monochrom> Haha the irony that the "truncate" command can also expand. :)
[21:59:10] <whatif> [exa]: monochrom that truncate doesn't work?
[21:59:11] <EvanR> negative truncation
[21:59:50] <geekosaur> unix has the concept of file holes
[22:00:03] <geekosaur> so truncate set the file size but didn't fill it in
[22:00:17] *** Quits: Morrow (~Morrow@bzq-110-168-31-106.red.bezeqint.net) (Ping timeout: 240 seconds)
[22:00:18] <geekosaur> whoich doesn't work for swap files, they need real data blocks
[22:00:24] <[exa]> :(
[22:00:38] <[exa]> btw I never used truncate for really truncating stuff, everytime for making it bigger
[22:01:09] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[22:01:15] <[exa]> geekosaur: is that common for all unixes? I recall there was a system where this actually allocated
[22:01:19] <[exa]> (and it wasn't windows)
[22:01:26] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[22:02:20] <geekosaur> holes were in 7th research edition
[22:02:37] *** Joins: Morrow (~Morrow@bzq-110-168-31-106.red.bezeqint.net)
[22:02:47] <geekosaur> ftruncate, the syscall it uses, wasn't in all unixes
[22:03:35] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Read error: Connection reset by peer)
[22:07:20] *** Quits: lbseale (~ep1ctetus@user/ep1ctetus) (Read error: Connection reset by peer)
[22:07:51] <whatif> now the package is compiled on my local machine, how can it be used on vps without compiled again? copy the whole compile directory to vps?
[22:08:10] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[22:08:14] <whatif> compile it to a package, and install the package on vps?
[22:08:27] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[22:10:25] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[22:10:37] *** Quits: deadmarshal (~deadmarsh@95.38.119.69) (Ping timeout: 240 seconds)
[22:11:57] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[22:12:54] *** Joins: alx741 (~alx741@157.100.93.160)
[22:13:19] <[exa]> whatif: is the VPS the same architecture?
[22:13:43] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[22:13:45] <[exa]> if so you might compile statically (use ghc -static) and then the chances are pretty high that it's just gonna work
[22:13:47] <whatif> [exa]: yes, amd64
[22:13:56] <[exa]> by just compiling the executable there
[22:14:06] *** Quits: boxscape_ (~boxscape_@p4ff0b9d5.dip0.t-ipconnect.de) (Quit: Connection closed)
[22:14:10] <[exa]> that's in fact a pretty common way to deploy haskell stuff
[22:14:43] <whatif> [exa]: you compile my code and the compile code on my machine, pass the binary to vps?
[22:15:04] <whatif> or just compile the package, and use it on vps with my code
[22:15:14] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[22:15:30] <whatif> I don't know ghc -static to compile which code?
[22:15:41] <[exa]> to compile the example you want to run
[22:15:55] <[exa]> if you add -static, it's going to pack up the libraries
[22:16:05] *** Quits: Morrow (~Morrow@bzq-110-168-31-106.red.bezeqint.net) (Ping timeout: 256 seconds)
[22:16:28] <ix> joeyh: ping
[22:16:35] <polyphem> whatif: compile static and copy the executable to vps
[22:17:00] <whatif> [exa]: could it be compiled to a deb package? only the github code, not my code?
[22:17:25] *** Joins: xkuru (~xkuru@user/xkuru)
[22:17:49] <[exa]> yes, check out how e.g. pandoc is compiled in debian
[22:18:35] *** Joins: deadmarshal (~deadmarsh@95.38.119.69)
[22:18:51] <whatif> oh, I need pack a deb package
[22:18:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[22:23:02] <whatif> that's hard, I don't know where cabal v2-install will install those needed file, for dpkg-deb --build Path to generate the deb package
[22:25:04] *** Joins: retroid_ (~retro@2e40edd9.skybroadband.com)
[22:26:09] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Ping timeout: 276 seconds)
[22:26:56] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[22:27:16] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[22:30:36] *** Joins: Morrow (~Morrow@bzq-110-168-31-106.red.bezeqint.net)
[22:31:44] <turlando> I'm experimenting with PatternSynonym and I'm writing a test for a pattern using HSpec. Is there a way to have the test succeed if a pattern matches?
[22:32:02] *** Joins: alx741 (~alx741@157.100.93.160)
[22:32:38] *** Joins: dsrt^ (~dsrt@207.182.73.202)
[22:34:04] *** Joins: econo (uid147250@user/econo)
[22:38:21] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[22:38:55] *** Joins: alp (~alp@user/alp)
[22:39:16] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:39:19] *** Quits: benin (~benin@183.82.31.24) (Quit: Ping timeout (120 seconds))
[22:39:37] *** Joins: benin (~benin@183.82.31.24)
[22:40:58] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[22:44:37] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[22:44:59] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 256 seconds)
[22:46:13] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[22:48:04] *** Joins: Sgeo (~Sgeo@user/sgeo)
[22:48:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[22:50:43] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[22:53:26] *** Quits: fryguybob (~fryguybob@cpe-74-67-169-145.rochester.res.rr.com) (Quit: leaving)
[22:54:15] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:54:15] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:54:15] *** Joins: wroathe (~wroathe@user/wroathe)
[22:55:07] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:56:49] *** Joins: alx741 (~alx741@157.100.93.160)
[22:57:02] *** Quits: xff0x (~xff0x@2001:1a81:52f4:b00:df96:89e3:722a:400f) (Ping timeout: 240 seconds)
[22:57:41] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[22:58:17] *** Joins: xff0x (~xff0x@2001:1a81:52f4:b00:92cd:1cec:76b4:462b)
[22:59:21] *** Quits: deadmarshal (~deadmarsh@95.38.119.69) (Ping timeout: 256 seconds)
[22:59:56] *** Joins: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net)
[23:01:20] <energizer> how to make a Day? I tried `import Data.Time.Calendar.OrdinalDate` followed by `Day` 
[23:02:34] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[23:03:49] <geekosaur> there are multiple smart constructors; you can't make one directly
[23:04:25] <geekosaur> see for example fromOrdinalDate
[23:05:14] <polyphem> ♫ Daaaaaaaaaay oh, Dahahay oh ♫
[23:06:17] *** Quits: yauhsien (~yauhsien@61-231-58-250.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[23:09:02] <geekosaur> if you want to be able to specify a Day from a string, see Data.Time.Format
[23:10:06] *** Joins: tfeb (~tfb@195.213.60.52)
[23:10:29] <energizer> `fromGregorian 2021 1 1` seems to be what i was looking for
[23:10:31] <energizer> thanks
[23:11:55] *** Joins: johnjaye (~pi@173.209.65.233)
[23:12:30] <energizer> er fromGregorianValid
[23:12:41] <EvanR> wait... there's an invalid version?
[23:12:48] <EvanR> why
[23:12:49] <energizer> https://hackage.haskell.org/package/time-1.13/docs/Data-Time-Calendar.html
[23:13:09] <byorgey> Should it worry me that when someone asks "how to make a Day?" the first think I think of is https://hackage.haskell.org/package/kan-extensions-5.2.3/docs/Data-Functor-Day.html ?
[23:13:26] <EvanR> oh returns a Maybe
[23:13:33] <geekosaur> EvanR, so you can be sloppy. like adding 1 to the last day of a month
[23:13:58] <EvanR> > fromGregorian 2022 1 31
[23:13:59] <lambdabot>  error:
[23:13:59] <lambdabot>      Variable not in scope: fromGregorian :: t0 -> t1 -> t2 -> t
[23:13:59] <geekosaur> oh. still wonder if it does that (I think the corresponding unix utils do)
[23:14:20] <geekosaur> @let import Data.Time.Gregorian
[23:14:20] <lambdabot>  /sandbox/tmp/.L.hs:122:1: error:
[23:14:20] <lambdabot>      Could not find module ‘Data.Time.Gregorian’
[23:14:20] <lambdabot>      Use -v (or `:set -v` in ghci) to see a list of the files searched for.
[23:15:12] <energizer> i wish things would be called fooValid and fooInvalid instead of foo and fooValid
[23:15:18] <geekosaur> @let import Data.Time.Calendar
[23:15:19] <lambdabot>  /sandbox/tmp/.L.hs:122:1: error:
[23:15:19] <lambdabot>      Data.Time.Calendar: Can't be safely imported!
[23:15:19] <lambdabot>      The package (time-1.9.3) the module resides in isn't trusted.
[23:15:33] <geekosaur> % import Data.Time.Calendar
[23:15:33] <yahb> geekosaur: 
[23:15:43] <geekosaur> % fromGregorian 2022 1 31
[23:15:44] <yahb> geekosaur: 2022-01-31
[23:16:07] <geekosaur> % fromGregorian 2022 1 32
[23:16:07] <yahb> geekosaur: 2022-01-31
[23:16:51] <EvanR> there's a utility somewhere in there that lets you do that
[23:16:57] <EvanR> wrap or truncate
[23:17:05] <EvanR> er, rollover or truncate
[23:17:22] <energizer> +1 for addGregorianMonthsRollOver and addGregorianYearsClip 
[23:18:05] <geekosaur> but not for loading one up directly
[23:18:07] <geekosaur> ah well
[23:18:18] *** Quits: johnjaye (~pi@173.209.65.233) (Quit: WeeChat 3.3)
[23:18:37] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[23:19:16] <EvanR> I too from time to time tell people calendar dates such as January 32nd and expect them to know wtf I'm saying
[23:19:52] <geekosaur> first company I worked for would occasionally "extend" a month like that to  "avoid" deadlines
[23:19:58] <EvanR> lol
[23:20:32] *** Joins: alx741 (~alx741@157.100.93.160)
[23:20:57] <geekosaur> pervasive computers kinda killed that
[23:21:18] <c_wraith> eh, accountant time is still a thing.  Years always start on Mondays, to accountants.
[23:23:21] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[23:23:41] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[23:24:18] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[23:28:03] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[23:30:16] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:5d8e:db89:f241:b6e3)
[23:31:57] *** Quits: tfeb (~tfb@195.213.60.52) (Quit: died)
[23:33:43] <energizer> I guess a way to handle bounded addition in general is to first have three functions addSaturate addWrap addErr and then a generic add and three instances that implement it, like SaturatingDate WrappingDate ErringDate
[23:35:27] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[23:35:31] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:35:58] <c_wraith> I recall edwardk making a comment about GHC's GC once - that it would apply selectors to values if their constructor was already evaluated, as a way to make any unused field collectable slightly earlier. Am I remembering that right? Are there any details written up anywhere?
[23:38:10] <awpr> sounds like this mechanism https://gitlab.haskell.org/ghc/ghc/-/wikis/commentary/rts/storage/heap-objects#selector-thunks
[23:39:35] <joeyh> ix: pong
[23:39:51] <c_wraith> awpr: yep, that looks like exactly it.  thanks
[23:39:53] <gaze___> what's the modern way to use cabal? I only see v1-sandbox and v1 commands are deprecated right?
[23:40:23] <c_wraith> gaze___: everything functions as if it was sandboxed in the v2 (default) commands
[23:40:30] <gaze___> a ha!
[23:40:42] <c_wraith> It's not, actually - it shares behind the scenes.
[23:40:51] <c_wraith> It can do that safely now
[23:42:06] *** Joins: alx741 (~alx741@157.100.93.160)
[23:42:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[23:43:13] *** Joins: LukeHoersten (~LukeHoers@user/lukehoersten)
[23:43:22] <ix> joeyh: did you see my note from last night?
[23:43:22] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:43:57] *** Quits: alx741 (~alx741@157.100.93.160) (Read error: Connection reset by peer)
[23:46:19] <joeyh> no, I missed it
[23:47:25] <ix> joeyh: "" hey, im fiddling with your propellor :) trying to add another OS, so i'm looking for a way to generalize `pickOS`. Unfortunately i've never used Sing or Type families before so I'm so lost here... any pointers?
[23:48:29] <joeyh> ix: so you kind of need to learn about dependant types, basically, although not all of it just a subset of singletons and type families
[23:48:46] <joeyh> I am not a good person to teach that, but <gestures at find minds on this channel>
[23:49:15] *** Quits: hololeap (~hololeap@user/hololeap) (Excess Flood)
[23:50:12] * geekosaur wonders if that means hololeap just tried to teach it :þ
[23:50:37] *** Joins: hololeap (~hololeap@user/hololeap)
[23:50:50] <joeyh> but I would be surprised if you need to change pickOS itself, it's generic. Have you gotten into the Propellor.Types.MetaTypes module yet?
[23:50:57] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:50:57] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:50:57] *** Joins: wroathe (~wroathe@user/wroathe)
[23:50:58] <ix> joeyh: would it not make sense to just use an effect system? It seems like what you've implemented is limited w.r.t type-level sorting, and with fused-effects/polysemy now a thing those seem more powerful?
[23:51:17] <ix> I have a peripheral understanding o
[23:51:43] <ix>  ..f dependent types, just not TF 
[23:51:53] <joeyh> oh yeah, there's all kind of probably better ways to do what it's doing. It's contrained by wanting to run on old versions of ghc though, eg 8.0.1
[23:51:54] *** Joins: pavonia (~user@user/siracusa)
[23:52:03] <ix> Oh right
[23:52:05] <ix> Hm
[23:52:26] <joeyh> this is why it has its own Propellor.Types.Singletons, cut down from the real library
[23:52:41] <ix> Why that constraint, ooi?
[23:53:27] <joeyh> using an effect system is probably an excellent idea
[23:54:05] <ix> Ah ok, maybe i'll implement that, so i can add gentoo much more tidily
[23:54:31] <ix> Right now i had to add a pickOS3 to get it to typecheck
[23:54:32] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[23:54:56] <ix> Inference breaks down with multiple pickOS 
[23:55:00] <joeyh> hmm, I might be able to help with that if you want to email me a patch to look at
[23:55:01] * geekosaur . o O { had wondered at first how you were going to get ghc running on Pick }
[23:55:19] <ix> I'll see where i get
[23:55:46] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[23:55:47] <joeyh> oh, you mean foo `pickOS` bar `pickOS` baz?
[23:55:51] <ix> Global poll: fused-effects or polysemy, which is more favoured these days?
[23:55:56] <ix> joeyh: yep
[23:55:58] <joeyh> ... that's a wart for sure!
[23:56:22] <ix> The design seems loose anyway, im itching to reimplement it :p
[23:57:43] <joeyh> I've been kind of wanting to redo it to generate shell code (eg with shell-monad or whatever); very little of it seems to need complex IO
[23:57:57] <joeyh> and this would let it not need to build on the remote host necessarily
[23:58:50] <ix> Hmm, cool idea
[23:59:30] *** Joins: jonathanx (~jonathan@h-178-174-176-109.A357.priv.bahnhof.se)
