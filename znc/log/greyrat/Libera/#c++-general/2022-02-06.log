[00:02:44] *** Quits: Cyp (~cyp@213.237.88.120) (Excess Flood)
[00:03:15] *** Joins: Cyp (~cyp@213.237.88.120)
[00:05:21] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[00:05:59] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[00:06:07] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 250 seconds)
[00:06:58] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:08:02] *** Joins: cq-work (~Z_Lund@user/cq-work)
[00:08:30] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[00:09:38] *** Quits: ipe (~ipe@d4z1v1bknl0mm2j9464-4.rev.dnainternet.fi) (Ping timeout: 260 seconds)
[00:11:04] *** Joins: kilitary (~kilitary@188.68.215.221)
[00:14:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:14:29] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[00:15:08] *** Joins: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10::49)
[00:17:59] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:18:57] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 240 seconds)
[00:21:21] *** Joins: cq-work (~Z_Lund@user/cq-work)
[00:23:52] *** Joins: autark (~autark@ti0048a400-0869.bb.online.no)
[00:34:19] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:36] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[00:39:16] *** Joins: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com)
[00:47:18] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:60ef:8113:9157:1102) (Ping timeout: 250 seconds)
[00:57:27] *** Quits: Kerr (~quassel@2601:602:ce00:c8d0:1f10:2cdc:eae4:98d8) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:09:10] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[01:09:25] *** Quits: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:14:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:15:45] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:5c57:f5a0:9c0c:92b3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:16:09] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[01:16:23] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[01:17:17] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:18:03] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[01:18:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:19:40] *** Joins: cq-work (~Z_Lund@user/cq-work)
[01:20:27] *** Joins: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com)
[01:21:26] *** Joins: h4k1m0u (~h4k1m0u@2001:861:3146:5890:b828:f549:247c:268f)
[01:23:54] *** Quits: robod34 (~Username@79.113.227.62) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:27:37] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 240 seconds)
[01:30:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 250 seconds)
[01:30:39] *** Joins: cq-work (~Z_Lund@user/cq-work)
[01:31:27] <lxsameer> hey folks, is there any alternative to boehm GC?
[01:32:40] *** Joins: markong (~kvirc@213.146.188.203)
[01:32:47] *** Quits: sbrothy (~sbrothy@213.83.133.231) (Ping timeout: 256 seconds)
[01:38:07] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[01:39:30] <LordKalma> you want a garbage collector for c++?
[01:39:37] <LordKalma> after you asked about good practices?
[01:40:07] <lxsameer> LordKalma: well, I want it for my compiler, not for C++
[01:40:54] <LordKalma> this is more or less a gc: https://github.com/hsutter/gcpp
[01:40:54] <lxsameer> my compiler is in C++ though
[01:41:02] *** Joins: cq-work (~Z_Lund@user/cq-work)
[01:41:40] <artok> ...after you get it built ;)
[01:42:04] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:42:05] *** Quits: sigma_ (~sigma@164.215.206.157) (Ping timeout: 256 seconds)
[01:42:11] <lxsameer> artok: :))
[01:42:12] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:42:12] *** ChanServ sets mode: +v npaperbot
[01:43:51] *** Quits: h4k1m0u (~h4k1m0u@2001:861:3146:5890:b828:f549:247c:268f) (Quit: Client closed)
[01:48:19] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[01:49:07] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[01:50:33] *** Joins: cq-work (~Z_Lund@user/cq-work)
[01:50:45] *** Quits: kilitary (~kilitary@188.68.215.221) (Read error: Connection reset by peer)
[01:52:57] *** Joins: kilitary (~kilitary@188.242.105.134)
[01:53:09] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[01:53:18] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[01:56:49] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[01:58:37] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 240 seconds)
[02:00:51] *** Joins: cq-work (~Z_Lund@user/cq-work)
[02:05:33] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[02:08:15] *** Joins: cq-work (~Z_Lund@user/cq-work)
[02:08:25] *** Quits: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:10:45] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:943b:a228:7c24:6437)
[02:14:23] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 250 seconds)
[02:15:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:16:33] *** Joins: cq-work (~Z_Lund@user/cq-work)
[02:18:43] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[02:21:10] *** Quits: Simplar (~Simplar@188.163.93.241) (Quit: Going offline, see ya! (www.adiirc.com))
[02:29:58] *** Joins: irrenhaus3 (~xenon@ip-046-005-003-235.um12.pools.vodafone-ip.de)
[02:33:56] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[02:34:33] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[02:40:47] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[02:49:18] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:01:30] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:01:39] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 256 seconds)
[03:01:54] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[03:03:14] *** Quits: chris64 (~chris@user/chris64) (Quit: leaving)
[03:03:37] *** Quits: amit_ (~amit@2601:445:447f:a2f6:5ef4:eeef:ce07:ccaf) (Ping timeout: 240 seconds)
[03:03:53] *** Joins: PJBoy (~PJBoy@user/pjboy)
[03:04:15] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[03:14:37] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 240 seconds)
[03:15:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:16:51] *** Joins: cq-work (~Z_Lund@user/cq-work)
[03:18:19] *** Joins: proller (~p@80.240.216.69)
[03:18:25] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[03:19:33] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:20:34] *** Joins: hexingb (~hexingb@36.155.28.147)
[03:21:35] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[03:23:13] *** Joins: cq-work (~Z_Lund@user/cq-work)
[03:36:17] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 240 seconds)
[03:36:18] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:943b:a228:7c24:6437) (Ping timeout: 250 seconds)
[03:38:32] *** Joins: cq-work (~Z_Lund@user/cq-work)
[03:43:43] *** Quits: kilitary (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[03:44:49] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[03:45:58] *** Joins: kilitary (~kilitary@188.242.105.134)
[03:52:11] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 256 seconds)
[03:53:33] *** Joins: cq-work (~Z_Lund@user/cq-work)
[03:55:01] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 256 seconds)
[03:57:20] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[03:58:19] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[04:01:00] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 250 seconds)
[04:01:22] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[04:02:52] *** Joins: cq-work (~Z_Lund@user/cq-work)
[04:05:07] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[04:05:40] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[04:06:57] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 240 seconds)
[04:09:10] *** Joins: cq-work (~Z_Lund@user/cq-work)
[04:10:20] *** Joins: unyu (~pyon@user/pyon)
[04:16:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:17:57] *** Quits: hexingb (~hexingb@36.155.28.147) (Ping timeout: 240 seconds)
[04:19:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:24:43] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:25:42] *** Joins: hexingb (~hexingb@2409:8902:78c2:528c:1948:abad:fd7a:715f)
[04:26:28] *** Joins: cq-work (~Z_Lund@user/cq-work)
[04:27:54] *** Quits: kilitary (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[04:30:28] *** Quits: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[04:34:01] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[04:35:46] *** Joins: cq-work (~Z_Lund@user/cq-work)
[04:38:47] *** Joins: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4)
[04:39:43] *** Quits: nojhan (uid443807@id-443807.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:47:37] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[04:48:37] *** Quits: hexingb (~hexingb@2409:8902:78c2:528c:1948:abad:fd7a:715f) (Ping timeout: 240 seconds)
[04:50:25] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[04:51:21] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[04:54:25] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[04:55:41] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[04:56:05] *** Joins: cq-work (~Z_Lund@user/cq-work)
[04:56:23] *** Joins: seninha (~seninha@user/seninha)
[05:05:13] *** Quits: DSpider (~DSpider@82.79.237.46) (Quit: Leaving)
[05:05:24] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[05:16:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:20:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:24:27] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[05:27:10] *** Joins: cq-work (~Z_Lund@user/cq-work)
[05:27:51] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 256 seconds)
[05:32:43] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[05:34:29] *** Joins: cq-work (~Z_Lund@user/cq-work)
[05:36:07] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[05:39:37] *** Joins: kilitary (~kilitary@188.68.215.221)
[05:42:04] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:42:13] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:42:13] *** ChanServ sets mode: +v npaperbot
[05:48:36] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[05:49:04] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[05:50:37] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[05:53:07] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[05:54:47] *** Joins: cq-work (~Z_Lund@user/cq-work)
[06:02:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[06:05:22] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:10:47] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[06:14:12] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:17:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:20:53] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:30:31] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[06:31:18] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:32:18] *** Joins: noarb (~noarb@user/noarb)
[06:35:18] *** Joins: kilitary_ (~kilitary@188.242.105.134)
[06:37:19] *** Quits: kilitary (~kilitary@188.68.215.221) (Ping timeout: 256 seconds)
[06:50:21] *** Quits: lucho666 (~admred201@45.178.2.1) (Quit: lucho666)
[06:55:37] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[06:57:29] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[06:57:37] *** Joins: adeliktas2 (~adeliktas@i59F52850.versanet.de)
[06:59:17] *** Quits: adeliktas (~adeliktas@i59F5FC83.versanet.de) (Ping timeout: 240 seconds)
[06:59:17] *** adeliktas2 is now known as adeliktas
[07:07:00] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:09:56] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 250 seconds)
[07:10:07] *** Quits: jsbach (~jsbach@2a01:c23:64ed:9900:3a00:ede3:d41a:ce11) (Ping timeout: 250 seconds)
[07:14:09] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[07:17:46] *** Joins: cq-work (~Z_Lund@user/cq-work)
[07:17:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:19:35] *** Quits: emerent (~quassel@p200300cd570443b6ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:19:52] *** Joins: emerent (~quassel@p200300cd57044377ba27ebfffed28a59.dip0.t-ipconnect.de)
[07:21:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:23:02] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:c1ca:2e3c:fbb1:5803)
[07:25:09] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[07:27:05] *** Joins: cq-work (~Z_Lund@user/cq-work)
[07:27:25] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[07:32:36] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:33:27] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:36:15] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 256 seconds)
[07:37:37] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[07:38:26] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:fc0d:abca:2520:17e4) (Read error: Connection reset by peer)
[07:39:24] *** Joins: cq-work (~Z_Lund@user/cq-work)
[07:42:18] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[07:51:52] *** Quits: kilitary_ (~kilitary@188.242.105.134) (Remote host closed the connection)
[07:52:57] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 240 seconds)
[07:56:01] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:908a:2473:4e70:b49a)
[07:58:32] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c1ca:2e3c:fbb1:5803) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:59:39] *** Quits: adder` (~adder@user/adder) (Quit: Leaving)
[08:00:45] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:9511:1adf:ad63:3d17)
[08:04:35] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[08:07:30] *** Joins: cq-work (~Z_Lund@user/cq-work)
[08:09:29] *** Quits: arch-angel (~arch-ange@2001:e68:5400:3444:f67f:24ed:5c4c:c6be) (Remote host closed the connection)
[08:12:45] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[08:16:15] *** Joins: cq-work (~Z_Lund@user/cq-work)
[08:16:37] <ville> odd you would want a gc for a compiler. memory management for a compiler is very straight forward. allocate things and never bother to free any of it
[08:17:39] <ville> or if you want an empty report from a leak detector just have an allocator that frees everything in one go at the end
[08:18:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:19:17] *** Joins: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao)
[08:19:21] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[08:20:07] *** Quits: irrenhaus3 (~xenon@ip-046-005-003-235.um12.pools.vodafone-ip.de) (Quit: Lost terminal)
[08:20:17] * InPhase plans a constexpr self-DOS for ville's compiler.
[08:21:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:23:37] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[08:24:01] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[08:24:41] <ville> the above does not preclude having an upper limit on the workingset
[08:25:34] *** Joins: cq-work (~Z_Lund@user/cq-work)
[08:25:55] <ville> InPhase: ...right now linking chromium works for most machines
[08:34:57] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[08:36:53] *** Joins: cq-work (~Z_Lund@user/cq-work)
[08:38:15] *** Quits: callq (~callq@92.119.19.230) (Ping timeout: 256 seconds)
[08:49:55] *** Quits: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi) (Ping timeout: 256 seconds)
[08:50:23] *** Joins: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi)
[08:54:28] *** Joins: kilitary (~kilitary@188.242.105.134)
[08:55:21] *** Quits: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi) (Ping timeout: 256 seconds)
[08:56:05] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:12:02] *** Joins: p-i- (~Ohmu@2403:6200:8978:8b4d:fc6f:d7bb:d959:a615)
[09:16:57] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 240 seconds)
[09:18:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:19:37] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[09:20:00] *** Joins: cq-work (~Z_Lund@user/cq-work)
[09:22:47] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:28:20] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[09:31:14] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Client Quit)
[09:38:39] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[09:40:18] *** Joins: cq-work (~Z_Lund@user/cq-work)
[09:42:04] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:42:13] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:42:13] *** ChanServ sets mode: +v npaperbot
[09:49:25] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[09:49:39] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[09:55:17] *** Joins: cq-work (~Z_Lund@user/cq-work)
[10:05:37] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[10:07:36] *** Joins: cq-work (~Z_Lund@user/cq-work)
[10:09:20] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 250 seconds)
[10:09:51] *** Joins: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi)
[10:13:13] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[10:14:54] *** Joins: cq-work (~Z_Lund@user/cq-work)
[10:15:09] *** Quits: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi) (Ping timeout: 256 seconds)
[10:19:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:23:05] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:25:57] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:908a:2473:4e70:b49a) (Quit: Quit)
[10:27:27] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[10:32:00] <hnOsmium0001[m]> I mean, ghc (as far as I know) uses this model and it works fine on most machines
[10:34:46] *** Quits: letto (~letto@86.120.81.105) (Quit: Konversation terminated!)
[10:36:50] *** Joins: letto (~letto@86.120.81.105)
[10:36:57] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 240 seconds)
[10:38:54] *** Joins: joilerv (~joilerv@135.129.250.144)
[10:39:12] *** Joins: cq-work (~Z_Lund@user/cq-work)
[10:42:31] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[10:43:33] *** Quits: joilerv (~joilerv@135.129.250.144) (Ping timeout: 250 seconds)
[10:47:00] *** Joins: DSpider (DSpider@2a02:2f00:1ff:ffff::646c:688c)
[10:51:17] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 240 seconds)
[10:53:31] *** Joins: cq-work (~Z_Lund@user/cq-work)
[10:53:38] *** Quits: kilitary (~kilitary@188.242.105.134) (Remote host closed the connection)
[11:09:28] *** Joins: sigma_ (~sigma@86.57.80.137)
[11:19:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:22:36] *** Joins: joilerv (~joilerv@135.129.250.144)
[11:23:29] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:24:04] *** Joins: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de)
[11:25:37] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 240 seconds)
[11:27:19] *** Quits: joilerv (~joilerv@135.129.250.144) (Ping timeout: 250 seconds)
[11:27:49] *** Joins: cq-work (~Z_Lund@user/cq-work)
[11:28:56] *** Joins: kilitary (~kilitary@188.242.105.134)
[11:31:57] *** Quits: cq-work (~Z_Lund@user/cq-work) (Ping timeout: 240 seconds)
[11:36:15] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[11:39:01] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[11:46:32] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:55:33] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[11:57:34] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[12:05:24] <xkoncek> sunday funtime activity: find out whether there is any overload of operator comma in c++ stdlib
[12:06:09] <LordKalma> for some definition of fun
[12:10:10] *** Quits: p-i- (~Ohmu@2403:6200:8978:8b4d:fc6f:d7bb:d959:a615) (Remote host closed the connection)
[12:10:42] *** Joins: p-i- (~Ohmu@2403:6200:8978:8b4d:3897:4978:8f12:ada4)
[12:11:24] <kilitary> we
[12:12:46] *** Joins: xkuru (~xkuru@user/xkuru)
[12:16:11] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[12:19:44] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[12:19:49] *** Joins: joilerv_ (~joilerv@135.129.250.144)
[12:20:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:20:37] *** Quits: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10::49) (Ping timeout: 240 seconds)
[12:23:33] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Ping timeout: 256 seconds)
[12:23:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:26:01] *** Joins: robod34 (~Username@79.113.227.62)
[12:26:35] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[12:29:11] *** Quits: kilitary (~kilitary@188.242.105.134) (Remote host closed the connection)
[12:30:25] *** Quits: joilerv_ (~joilerv@135.129.250.144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:31:50] *** Quits: lockywolf (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[12:43:03] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[12:45:20] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[12:49:39] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 250 seconds)
[12:49:52] *** Joins: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi)
[12:51:18] *** Joins: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs)
[12:51:38] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[12:53:55] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 256 seconds)
[12:53:59] *** Quits: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi) (Ping timeout: 250 seconds)
[12:56:10] *** Joins: joilerv (~joilerv@135.129.250.144)
[12:58:07] *** Joins: Simplar (~Simplar@188.163.93.241)
[12:59:15] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[13:01:41] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[13:01:55] *** Joins: artok (~azo@mobile-access-b04822-148.dhcp.inet.fi)
[13:02:03] *** Joins: kilitary (~kilitary@188.242.105.134)
[13:03:29] <xkoncek> i am interested in the answer but lazy to find out myself
[13:05:50] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[13:05:57] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 240 seconds)
[13:05:57] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:08:00] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[13:08:38] *** Joins: jsbach (~jsbach@2a01:c23:5cca:cf00:d5a:9b23:2dbc:fe19)
[13:19:00] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[13:20:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:22:59] *** Joins: sigma__ (~sigma@164.215.236.112)
[13:23:57] *** Quits: sigma_ (~sigma@86.57.80.137) (Ping timeout: 256 seconds)
[13:24:31] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:26:29] *** Emet-Selch is now known as Azem
[13:26:32] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:c49f:99ea:fe:b5c8)
[13:26:32] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:c49f:99ea:fe:b5c8) (Changing host)
[13:26:32] *** Joins: skapata (~Skapata@user/skapata)
[13:27:25] *** Joins: sigma_ (~sigma@164.215.228.145)
[13:28:11] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[13:28:37] *** Quits: sigma__ (~sigma@164.215.236.112) (Ping timeout: 240 seconds)
[13:29:56] *** Quits: kilitary (~kilitary@188.242.105.134) (Remote host closed the connection)
[13:35:11] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[13:37:18] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[13:41:18] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:42:05] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:42:12] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:42:12] *** ChanServ sets mode: +v npaperbot
[13:44:53] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[13:45:21] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:47:24] *** Joins: tesuji (~quassel@2a02:908:180:9500:993a:fb3a:aa2a:c479)
[13:48:27] *** Joins: zen_coder (~zen_coder@ip5f5bd744.dynamic.kabel-deutschland.de)
[13:49:17] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 240 seconds)
[13:50:53] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[13:51:10] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Killed (NickServ (GHOST command used by lh_cat)))
[13:51:14] *** lh_cat is now known as lh_mouse
[13:51:28] *** Joins: callq (~callq@2405:201:a000:a015:20e0:8736:cf91:5ba9)
[13:51:36] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[13:57:44] *** Quits: joilerv (~joilerv@135.129.250.144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:59:19] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[13:59:33] *** Joins: seninha (~seninha@user/seninha)
[14:00:08] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[14:00:32] *** Joins: seninha (~seninha@user/seninha)
[14:00:52] *** Quits: seninha (~seninha@user/seninha) (Client Quit)
[14:00:54] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[14:04:08] *** Joins: jancoow (~jancoow@user/jancoow)
[14:04:42] *** Joins: plastico (~plastico@neomutt/plastico)
[14:05:33] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[14:08:52] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[14:09:55] *** Joins: seninha (~seninha@user/seninha)
[14:21:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:25:09] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:32:04] *** Joins: joilerv (~joilerv@135.129.250.144)
[14:34:24] *** Quits: callq (~callq@2405:201:a000:a015:20e0:8736:cf91:5ba9) (Quit: callq)
[14:35:16] *** Quits: joilerv (~joilerv@135.129.250.144) (Client Quit)
[14:36:23] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[14:38:10] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[14:45:15] *** Joins: h4k1m0u (~h4k1m0u@2001:861:3146:5890:ed95:fefa:32db:7c11)
[14:45:51] *** Parts: h4k1m0u (~h4k1m0u@2001:861:3146:5890:ed95:fefa:32db:7c11) ()
[14:50:00] *** Joins: Fairy (~Fairy@ti0004a400-5385.bb.online.no)
[14:56:33] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[14:57:29] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[15:01:19] *** Quits: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com) (Ping timeout: 256 seconds)
[15:04:59] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:07:29] *** Joins: rmd (~rm@ec2-52-202-15-104.compute-1.amazonaws.com)
[15:16:49] *** Joins: jokoon (~eio@2a01:e0a:542:e160:91df:1b1:2212:3eac)
[15:17:00] *** Joins: proller (~p@80.240.216.69)
[15:19:03] *** Joins: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com)
[15:19:26] *** Joins: markong (~kvirc@213.146.188.203)
[15:20:13] *** Joins: JohnMS (~JohnMS@2a02:a311:a33a:a100:4ecc:6aff:fed0:fdf)
[15:20:20] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:21:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:22:38] *** PJBoy is now known as Guest5708
[15:22:38] *** Quits: Guest5708 (~PJBoy@user/pjboy) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[15:22:44] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:25:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:29:40] *** Quits: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:31:36] *** Quits: markong (~kvirc@213.146.188.203) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[15:32:32] *** Joins: chris64 (~chris@user/chris64)
[15:33:38] *** Joins: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com)
[15:39:41] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 252 seconds)
[15:41:47] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[15:51:36] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:57:03] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 250 seconds)
[15:57:31] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[15:59:05] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[16:00:36] *** Quits: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:18:46] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[16:21:45] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[16:22:08] *** Joins: kevr (~kevr@user/kevr)
[16:22:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:25:28] *** Parts: psb___ (sid500598@id-500598.ilkley.irccloud.com) ()
[16:26:05] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:32:50] *** Joins: c4017 (~c4017@S0106c0943583f893.vf.shawcable.net)
[16:34:17] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 240 seconds)
[16:35:13] *** Joins: pulse (~pulse@user/pulse)
[16:36:24] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[16:38:02] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 260 seconds)
[16:38:45] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[16:45:37] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[16:53:41] *** Quits: Simplar (~Simplar@188.163.93.241) (Quit: Going offline, see ya! (www.adiirc.com))
[16:54:05] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[16:55:32] *** Joins: x_kuru (~xkuru@user/xkuru)
[16:55:43] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[16:56:57] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[17:06:04] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:06:28] *** Joins: bobb_ (~bobb_@dslb-088-066-147-158.088.066.pools.vodafone-ip.de)
[17:13:30] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[17:14:15] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[17:18:09] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[17:22:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:25:54] *** Joins: kilitary (~kilitary@188.242.105.134)
[17:26:43] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:33:37] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[17:35:45] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[17:37:25] *** Joins: callq (~callq@2409:4062:2e9e:2081:b0f0:7317:32c9:9fbd)
[17:38:19] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[17:38:57] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:42:05] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:42:12] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:42:12] *** ChanServ sets mode: +v npaperbot
[17:51:23] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[17:55:20] *** Joins: arch-angel (~arch-ange@2001:e68:5400:3444:f67f:24ed:5c4c:c6be)
[18:05:23] *** Joins: joilerv (~joilerv@135.129.250.144)
[18:05:29] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 256 seconds)
[18:05:51] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:06:03] *** Quits: kilitary (~kilitary@188.242.105.134) (Ping timeout: 256 seconds)
[18:07:45] *** Joins: cq-work_ (~Z_Lund@user/cq-work)
[18:11:30] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[18:14:11] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[18:22:37] *** Joins: kilitary (~kilitary@188.242.105.134)
[18:23:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:26:59] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[18:27:46] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:c12f:e1ba:6835:4862)
[18:27:46] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:c12f:e1ba:6835:4862) (Changing host)
[18:27:46] *** Joins: skapata (~Skapata@user/skapata)
[18:32:11] *** Joins: Simplar (~Simplar@188.163.93.241)
[18:39:49] *** Quits: bobb_ (~bobb_@dslb-088-066-147-158.088.066.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[18:45:23] *** Joins: markong (~kvirc@213.146.188.203)
[18:53:39] *** Quits: Fairy (~Fairy@ti0004a400-5385.bb.online.no) (Ping timeout: 256 seconds)
[18:58:27] *** Quits: joilerv (~joilerv@135.129.250.144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:59:31] *** Quits: jsbach (~jsbach@2a01:c23:5cca:cf00:d5a:9b23:2dbc:fe19) (Ping timeout: 245 seconds)
[19:01:12] *** Quits: JohnMS (~JohnMS@2a02:a311:a33a:a100:4ecc:6aff:fed0:fdf) (Quit: Konversation terminated!)
[19:01:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[19:01:21] *** Joins: jsbach (~jsbach@2a01:c23:5cca:cf00:4f7a:4656:4485:8966)
[19:01:21] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:891c:200d:439a:5f1d)
[19:01:21] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:891c:200d:439a:5f1d) (Changing host)
[19:01:21] *** Joins: RoKenn (~RoKenn@user/rokenn)
[19:04:12] *** Joins: callq_ (~callq@2409:4062:202:fb53:35cf:a4ba:9e6b:cada)
[19:04:17] *** Quits: callq (~callq@2409:4062:2e9e:2081:b0f0:7317:32c9:9fbd) (Ping timeout: 240 seconds)
[19:04:36] *** Joins: joilerv (~joilerv@135.129.250.144)
[19:10:29] *** Quits: joilerv (~joilerv@135.129.250.144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:14:17] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[19:14:28] *** Joins: Uswald (~leandre@2a01cb040075f90058828d3dbcbf605d.ipv6.abo.wanadoo.fr)
[19:14:28] *** Quits: Uswald (~leandre@2a01cb040075f90058828d3dbcbf605d.ipv6.abo.wanadoo.fr) (Changing host)
[19:14:28] *** Joins: Uswald (~leandre@user/Uswald)
[19:17:27] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790:c540:4db8:d084:c3a0)
[19:18:30] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790:c540:4db8:d084:c3a0) (Client Quit)
[19:19:29] *** Quits: Uswald (~leandre@user/Uswald) (Read error: Connection reset by peer)
[19:19:51] *** Joins: Uswald (~leandre@2a01cb040075f90058828d3dbcbf605d.ipv6.abo.wanadoo.fr)
[19:19:51] *** Quits: Uswald (~leandre@2a01cb040075f90058828d3dbcbf605d.ipv6.abo.wanadoo.fr) (Changing host)
[19:19:51] *** Joins: Uswald (~leandre@user/Uswald)
[19:23:10] *** Quits: Uswald (~leandre@user/Uswald) (Read error: Connection reset by peer)
[19:23:34] *** Joins: Uswald (~leandre@2a01cb040075f90058828d3dbcbf605d.ipv6.abo.wanadoo.fr)
[19:23:34] *** Quits: Uswald (~leandre@2a01cb040075f90058828d3dbcbf605d.ipv6.abo.wanadoo.fr) (Changing host)
[19:23:34] *** Joins: Uswald (~leandre@user/Uswald)
[19:23:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:27:25] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:28:29] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[19:30:03] *** Quits: Uswald (~leandre@user/Uswald) (Ping timeout: 250 seconds)
[19:38:43] *** Quits: cq-work_ (~Z_Lund@user/cq-work) (Ping timeout: 250 seconds)
[19:44:58] *** Joins: paul424 (~tom@ip-5-172-235-243.multi.internet.cyfrowypolsat.pl)
[19:50:06] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[19:50:07] *** Joins: sbrothy (~sbrothy@213.83.133.231)
[19:54:59] *** Joins: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com)
[19:58:01] *** Quits: zen_coder (~zen_coder@ip5f5bd744.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[19:58:40] *** Quits: jsbach (~jsbach@2a01:c23:5cca:cf00:4f7a:4656:4485:8966) (Ping timeout: 250 seconds)
[20:03:22] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[20:03:43] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:891c:200d:439a:5f1d)
[20:03:43] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:891c:200d:439a:5f1d) (Changing host)
[20:03:43] *** Joins: RoKenn (~RoKenn@user/rokenn)
[20:05:59] *** Quits: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:07:24] *** Joins: joilerv (~joilerv@135.129.250.144)
[20:07:51] *** Joins: magla (~gelignite@55d4c694.access.ecotel.net)
[20:11:45] *** Joins: jsbach (~jsbach@2a01:c23:5cca:cf00:d5a:9b23:2dbc:fe19)
[20:14:41] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[20:18:45] <antto> !rq
[20:18:45] <nolyc> antto: <fiesh> const and volatile should be renamed to curriculum and vitae
[20:21:04] *** Quits: joilerv (~joilerv@135.129.250.144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:24:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:28:03] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:35:22] *** Joins: Fairy (~Fairy@2001:464a:4992:0:8fa:f917:3ddb:7b76)
[20:36:22] <Alipha> xkoncek: I can't think of a use of the comma operator in the std specification, and I'm not sir why an implementation would overload it for internal use.
[20:39:57] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 256 seconds)
[20:40:10] *** Quits: sigma_ (~sigma@164.215.228.145) (Remote host closed the connection)
[20:50:30] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[20:53:04] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[20:55:10] *** Quits: tesuji (~quassel@2a02:908:180:9500:993a:fb3a:aa2a:c479) (Ping timeout: 260 seconds)
[21:02:55] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b)
[21:14:21] *** Quits: paul424 (~tom@ip-5-172-235-243.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[21:15:14] *** Joins: paul424 (~tom@ip-5-172-235-243.multi.internet.cyfrowypolsat.pl)
[21:18:32] *** Joins: andreasbuhr (~quassel@p5dcf9a19.dip0.t-ipconnect.de)
[21:18:32] *** Quits: andreasbuhr (~quassel@p5dcf9a19.dip0.t-ipconnect.de) (Client Quit)
[21:21:34] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[21:24:27] *** Quits: kilitary (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[21:24:55] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:27:03] *** Joins: k8yun_ (~k8yun@198-48-158-40.cpe.pppoe.ca)
[21:28:21] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:28:29] *** Joins: libh (~libh@c-24-30-27-91.hsd1.ga.comcast.net)
[21:29:22] <libh> I hope this is the right channel to ask in, but with namespaces like std::cout for example. I know std means the std namespace and cout means a name in the std namespace, but is this going to mean it's using a class or function from std?
[21:30:40] <antto> cout is a global-scope instance of a (templated) class
[21:30:53] <antto> ..from the standard C++ library
[21:30:57] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Ping timeout: 256 seconds)
[21:31:33] <libh> So the stuff after :: can be a class or function or variable? Any of the 3?
[21:31:57] <antto> sure, enum too
[21:33:16] <libh> I also want to ask for an opinion on this, if I only care about C++ to use certain stuff like qt5 for instance, but have it extremely C like C++, is it pointless to use C++ for anything beyond the GUI code?
[21:33:45] <antto> it's pointless to use C if you can use C++ ;P~
[21:34:08] <antto> btw, the namespace is "std" ... "std::cout" is "cout from the std namespace"
[21:36:54] *** Joins: k8yun__ (~k8yun@24.244.29.99)
[21:40:29] *** Quits: k8yun_ (~k8yun@198-48-158-40.cpe.pppoe.ca) (Ping timeout: 250 seconds)
[21:42:06] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:42:13] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:42:13] *** ChanServ sets mode: +v npaperbot
[21:43:13] *** Joins: Garbanzo__ (~Garbanzo@2602:304:6eac:dc10::49)
[21:44:00] <ville> libh: you're of course free to write whatever looking c++ you wish. there are some fundamental differences between the two when it comes to object lifetimes and such, which may or may not be relevant
[21:44:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:45:21] <ville> libh: so perhaps take inventory if there're any c++ features you like. is operator overloading something you wish to have access to?
[21:45:55] <ville> and so forth
[21:46:04] <libh> I like C over C++. But I'm starting to face the music that going pure C may not be viable anymore because C++ libraries are way more commonplace than C.
[21:46:20] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:46:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:47:24] <ville> then go gtk+? i guess it's not quite as portable as qt however
[21:47:54] <libh> Maybe you're right. If I'm not going to take full advantage of C++, should instead use GTK. Not the biggest fan of GTK, but it's definitely usable.
[21:48:32] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:48:51] <ville> not quite advocating that. whatever "full c++" is. just saying sometimes it's just not simple as deciding to compile with g++ instead of gcc, because there are situations where c says something is legal c++ doesn't agree
[21:49:25] <ville> if i was to write c i would still opt to use a c++ compiler. possibly
[21:49:53] <libh> When I say C like C++, I mean use cstdio and the C standard libraries extensively.
[21:51:29] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 252 seconds)
[21:52:25] *** Joins: zmt00 (~zmt00@user/zmt00)
[21:52:58] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[21:53:04] *** Joins: kilitary (~kilitary@188.242.105.134)
[21:58:09] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Ping timeout: 256 seconds)
[21:58:17] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:58:17] *** ChanServ sets mode: +v npaperbot
[22:00:04] *** Quits: libh (~libh@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[22:02:58] <ville> there's no need to use the c++ standard library to use the language. sure you'll get a rised eyebrow or three, but that's neither here nor there
[22:03:22] <ville> well i say no, which is a lie most likely
[22:06:17] *** Quits: markong (~kvirc@213.146.188.203) (Read error: Connection reset by peer)
[22:22:39] *** Quits: magla (~gelignite@55d4c694.access.ecotel.net) (Read error: Connection reset by peer)
[22:22:57] *** Joins: magla (~gelignite@55d4c694.access.ecotel.net)
[22:23:24] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[22:24:10] *** Joins: KombuchaKip (~kip@192.252.230.5)
[22:25:26] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:29:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[22:29:16] *** Quits: df00z (~df00z@cpe-104-229-40-4.rochester.res.rr.com) (Killed (NickServ (GHOST command used by df00z81!~df00z@rrcs-50-75-26-170.nys.biz.rr.com)))
[22:29:48] *** Joins: df00z (~df00z@rrcs-50-75-26-170.nys.biz.rr.com)
[22:34:04] <df00z> Hey.  My understanding is like references(someclass &whatever) are preferred over pointers(someclass *whatever).  If I have a class that needs a reference to another class, preferably passed during construction, the instances of the two classes live for the life of the app - I have to initialize the reference in an initialization list since a
[22:34:04] <df00z> reference can't be set in a constructor.   The syntax for that is really ugly when you start adding inheritance.   I sometimes use shared_ptr because literally it's syntactically cleaner and easier to read.    Is there anything in cpp17 or cpp20 that makes this easier, or is it really OK to just use a raw pointer?  I don't need to like
[22:34:05] <df00z> unregister\register the clases. A singleton would also work.
[22:34:33] <df00z> Like a singleton that contains a references to classes that use eachother, and the classes can reference the singleton if they need to access eachother
[22:36:57] <ville> df00z: you hardly ever want to use a reference as a member. they screw up everyhing else about the type
[22:37:13] <df00z> Ahhh
[22:38:47] *** Quits: jbalint (~jbalint@2600:6c44:117f:e98a:816a:9488:fb1:7b7) (Ping timeout: 252 seconds)
[22:39:11] <ville> sure it sometimes would be closer-to-ideal to use them, since it may more accurately represent your use case: "this thing always refers to the same thing, and never should be in state where it doesn't refer to something (null)"
[22:39:48] *** Joins: jbalint (~jbalint@2600:6c44:117f:e98a:816a:9488:fb1:7b7)
[22:39:57] <ville> but then reality of the language rules sits in and it's just simpler to neverevernever have a reference as a member
[22:40:25] <ville> err sets in
[22:41:23] <df00z> Yeah
[22:41:51] <ville> you can stick a comment in there somewhere that "can never be null"
[22:42:10] <df00z> I'm just going to do this in the constructor of the one class that owns the other, but the other needs a pointer back to the one class
[22:42:11] <df00z> _networkController = std::make_unique<NetworkController>(this);
[22:42:18] <ville> and of course the ctor parameter can still be a reference-to-T, indicating you can't pass in a null
[22:42:21] <df00z> smart pointers just solve a lot :\
[22:42:33] <fiesh> df00z: you might want a shared_ptr and a weak_ptr to the other in each class respectively
[22:42:48] <df00z> yeah, thats basically the conclusion I came to.
[22:43:07] <df00z> I just always run to smart pointers and im not sure i should sometimes lol
[22:43:12] *** Joins: Uswald (~leandre@2a01cb040075f90058828d3dbcbf605d.ipv6.abo.wanadoo.fr)
[22:43:12] *** Quits: Uswald (~leandre@2a01cb040075f90058828d3dbcbf605d.ipv6.abo.wanadoo.fr) (Changing host)
[22:43:12] *** Joins: Uswald (~leandre@user/Uswald)
[22:43:40] <fiesh> df00z: if so, you might also want to inherit from enable_shared_from_this and make the classes' constructors private (or protected so that you can use std::make_shared in the implementation) and only allow a factory function to create shared_ptr:s to them
[22:44:41] <df00z> Cool, thanks
[22:45:50] <ville> df00z: don't bother with fancy pointers in these simple cases where you know your objects have simple lifetimes. the whole program
[22:46:01] <df00z> Im attempting to port a game project I started in javascript to C++ with webassembly.  Emscripten is really cool.
[22:46:48] <ville> and that's what you should strive for anyways: simple lifetimes you can reason about. shoving fancy pointers, pretty much anything beyond std::unique_ptr is just signaling you've not thought about your memory management hard enough
[22:49:06] <df00z> Thanks
[22:51:07] *** Quits: sbrothy (~sbrothy@213.83.133.231) (Ping timeout: 250 seconds)
[22:52:58] *** Quits: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[22:54:38] <Friithian> apparently gcc and clang allowed `and` to be `&&` at least according to this reddit comment
[22:54:42] <Friithian> the heck
[22:55:12] <ville> that's standard
[22:55:23] <Friithian> I've never seen it
[22:55:40] <ville> http://www.eelis.net/c++draft/lex.key#2
[22:56:35] <Friithian> this is also in the context of you being able to do `int square(int and num) making int && num which just seems… wrong
[22:57:27] <PJBoy> yeah that's mandated by the standard
[22:57:54] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b) (Ping timeout: 260 seconds)
[22:58:00] <ville> i am waiting for clang-tidy to suggest that i should replace && with and
[22:58:42] <LordKalma> I doubt that would appear in cpp-core
[22:58:46] <Friithian> if clang-tidy suggests that I may have to remove the entirety of the llvm toolchain from my system :P
[22:58:50] <PJBoy> hence the oxford comma idiom
[22:58:52] <LordKalma> so it would have to come from some specific project
[22:58:53] <PJBoy> << x, y, z; int x = 0, y = 1, and z = 2;
[22:58:54] <geordi> 0, 1, 2
[22:59:13] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:206a:d63d:f8a8:ec3b)
[22:59:21] <LordKalma> << x, y, z; int x = 0, y = 1, z = 2;
[22:59:22] <geordi> 0, 1, 2
[22:59:50] <LordKalma> Actually the biggest problem with clang-tidy is it's not pluguineable
[23:00:06] <ville> actually not sure if it's the lsp that's giving some of the suggestions i see in the editor. could be
[23:00:08] <LordKalma> which results in all of those upstream project-specific checks
[23:00:23] <PJBoy> that's true actually
[23:00:41] <PJBoy> yeah that's a good point
[23:00:48] <LordKalma> btw "
[23:00:48] <LordKalma> LLVM/Clang 14 Ends Feature Development With Better C++20 Support, Armv9 Added" https://www.phoronix.com/scan.php?page=news_item&px=LLVM-Clang-14-Ends
[23:00:52] <Friithian> so do people actually use ``and''? or is it just a ``you *can* do this''
[23:01:01] <PJBoy> yeah people use it
[23:01:05] <LordKalma> wow, LaTeX quoting?
[23:01:12] <Friithian> force of habit
[23:01:14] <PJBoy> it's getting a bit of a resurgence with concepts for some reason
[23:01:22] <Friithian> really? huh
[23:01:36] <LordKalma> PJBoy, in fact, https://bugs.llvm.org//show_bug.cgi?id=32739
[23:01:45] <ville> there's been one or two persons on "here" over the years that claimed to have a preference to use and over &&
[23:01:57] <PJBoy> people writing `template<typename T> concept is_int_like = integral<T> and is_signed_v<T>;` kinda thing
[23:01:57] <Friithian> LordKalma: but does that means I'l lbe getting text formatting any time soon :P
[23:02:09] <LordKalma> Friithian, wut?
[23:02:15] <Friithian> llvm/clang 14
[23:02:34] <LordKalma> "Libc++ now has support for the C++20 coroutines, the C++20 format header, and other C++20 and early C++2b work. "
[23:02:36] <LordKalma> so yes?
[23:02:38] <PJBoy> strictly speaking, text formatting is a libc++ thing
[23:02:50] <Friithian> oh cool
[23:02:58] <LordKalma> you can use libstdc++ with clang, can't you?
[23:03:07] <PJBoy> yeah, it's actually default
[23:03:08] <LordKalma> or whatever the gcc stdlib is called
[23:03:18] <PJBoy> or sometimes default
[23:03:45] <PJBoy> libc++ added the C++20 spec text formatting
[23:03:51] <LordKalma> sometimes default is an oxymoron
[23:04:01] <PJBoy> but C++20 has a bunch of DRs, so it's not really fully implemented yet
[23:04:06] <LordKalma> DRs»
[23:05:56] <PJBoy> like MS STL was C++20 complete
[23:06:06] <PJBoy> but now they've added some more stuff to C++20 via DRs
[23:06:11] <PJBoy> so now they're not C++20 complete anymore
[23:06:33] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[23:06:58] *** Quits: k8yun__ (~k8yun@24.244.29.99) (Quit: Leaving)
[23:08:04] <PJBoy> for example, MS stdlib doesn't support these std::chrono::parse overloads https://en.cppreference.com/mwiki/index.php?title=cpp/chrono/parse&diff=134203&oldid=133232
[23:08:17] <PJBoy> which was added last October
[23:09:03] <LordKalma> what's a DR?
[23:09:21] <PJBoy> defect report
[23:09:38] <PJBoy> (I didn't notice that » was supposed to be a ?)
[23:09:44] <LordKalma> sorry, it was, my bad
[23:10:18] <PJBoy> DRs usually end up being things that compilers do anyway, but that contradict the standard
[23:10:23] <PJBoy> so the standard is changed retroactively
[23:10:36] <PJBoy> but sometimes like in the above case, it's just fixing an oversight
[23:10:48] <PJBoy> or the change they made to std::ranges::split_view
[23:11:19] <LordKalma> C++: our lil cute dumpsterfire
[23:11:29] *** Joins: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com)
[23:12:31] <PJBoy> at least it's a zero overhead fire
[23:18:29] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[23:24:44] *** Quits: joilerv (~joilerv@host86-191-117-90.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:25:13] *** Joins: dfkfs (~dfkfs@178.49.152.151)
[23:25:56] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:29:23] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:30:11] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[23:35:15] *** Quits: df00z (~df00z@rrcs-50-75-26-170.nys.biz.rr.com) (Quit: Client closed)
[23:35:26] *** Joins: df00z (~df00z@rrcs-50-75-26-170.nys.biz.rr.com)
[23:38:23] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:39:38] <Alipha> df00z: as ville said, since the objects live for the lifetime of the app, just use raw pointers. if they didn't live for the lifetime of the app, you still probably don't need std::shared_ptr and std::weak_ptr. instead, use std::unique_ptr and a raw pointer. if foo needs a bar object and that bar object only needs to live for the lifetime of the foo object, then foo can have a std::unique_ptr to bar and
[23:39:40] <Alipha> bar can have a raw pointer to foo.
[23:40:10] <Alipha> fiesh: you may also be interested in my reply ^
[23:40:34] *** Joins: arch_angel (~arch-ange@175.136.28.149)
[23:40:34] *** Quits: arch_angel (~arch-ange@175.136.28.149) (Read error: Connection reset by peer)
[23:41:24] *** Quits: arch-angel (~arch-ange@2001:e68:5400:3444:f67f:24ed:5c4c:c6be) (Ping timeout: 250 seconds)
[23:45:47] <great_taste> oh no I need to duplicate a std::unique_ptr :P
[23:47:01] *** Quits: df00z (~df00z@rrcs-50-75-26-170.nys.biz.rr.com) (Quit: Client closed)
[23:47:11] <great_taste> I have an object that has a std::vector or std::unique_ptr (due to polymorphism) and at one point I need to insert it in multiple message queues
[23:47:20] <great_taste> *vector of
[23:47:35] <LordKalma> then you want a shared ptr :)
[23:48:16] <great_taste> I don't think so because the data should not be shared, since it's going to be processed by different threads
[23:48:43] <RandomReader> that sounds more like you need to implement copy for your object
[23:48:52] <Alipha> great_taste: just put raw pointers in the message queues?
[23:49:40] <RandomReader> (in the copy case, it's not the unique_ptr you would duplicate, it's the object the unique_ptr is referring to .. you're just doing another make_unique same as the original construction)
[23:50:36] <great_taste> ugh this is one of those stupid little problems that get me stuck
[23:50:47] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:4d74:be9c:8758:8859)
[23:51:26] <fiesh> Alipha: ah yes quite true in this simple case
[23:51:58] <Alipha> great_taste: are the unique_ptrs in the vector going to live longer than the message queues need them?
[23:52:16] <great_taste> Alipha no
[23:52:24] <fiesh> Alipha: well I mean not really though... if they do want canonical class behavior like indicated, that design isn't going to do that
[23:53:24] <Alipha> great_taste: then i guess either you want std::shared_ptr, or a virtual clone function, as RandomReader suggested
[23:55:03] <great_taste> replacing it with shared_ptr will require changing some other code that was designed around unique_ptr, so yeah it's quite annoying
[23:56:30] <great_taste> plus, again, I don't think shared_ptr would be right because of multithreading (though I do not see it would be a problem in this usage, but still, unsafe)
[23:57:04] *** Quits: kilitary (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[23:57:12] <great_taste> plus shared_ptr adds extra complexity due to its inner workings
[23:57:16] <Alipha> great_taste: what's unsafe? multiple threads modifying the same object?
[23:57:34] <great_taste> yes but in the current use case they're just reading it
[23:57:43] <Alipha> though i'm not sure why "message queues" would be modifying the message objects
[23:57:45] <great_taste> i.e. consuming messages
[23:58:22] <great_taste> sometimes when transforming objects while processing it can be advantageous to modify the data already present in the message, instead of creating more data
[23:58:44] <RandomReader> (it does sound a bit odd that there's polymorphic data being duplicated among message queues .. why are these messages not in transmissible form?)
[23:59:01] <great_taste> type erasure
[23:59:22] <Alipha> great_taste: well, a virtual clone function is the other option. but this really sounds like classic std::shared_ptr usage
[23:59:26] <RandomReader> transmissible form has no types :P
[23:59:57] <great_taste> I need type information to import the data in the other end
