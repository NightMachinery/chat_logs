[00:06:37] <ology> Why oh why do I choose not to add a "# WTF is this thing and what does it do?" comment to my personal code? Some is just baffling.
[00:06:52] * GumbyPAN CPAN Upload: Devel-Trace-Subs-0.24 by STEVEB https://metacpan.org/release/STEVEB/Devel-Trace-Subs-0.24
[00:09:38] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[00:13:01] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:16:34] <ether> yeah I leave notes to myself in code all the time
[00:16:44] *** Joins: krismatrix (~krismatri@38.80.149.51)
[00:16:53] * GumbyPAN CPAN Upload: HTTP-Daemon-6.13 by OALDERS https://metacpan.org/release/OALDERS/HTTP-Daemon-6.13
[00:21:13] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[00:22:33] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[00:24:35] *** Quits: lkw (~lkw@user/lkw) (Quit: leaving)
[00:25:32] *** Joins: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com)
[00:27:35] <ozzzo_work> I'm using the non-blocking sleep now, and I loaded Future::IO::Impl::IOAsync, but I still see processes blocked. Here's my updated code: https://perl.bot/p/a3j1b6
[00:27:36] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[00:29:20] <ozzzo_work> In this output, we see stackwatch-trust-8 timing out and blocking the stackwatch-trust-1 forward process, so that stackwatch-trust-1 forward reports a 120-second DNS time when in fact it finished in a few seconds: https://perl.bot/p/i2ck43
[00:29:21] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[00:30:37] <ozzzo_work> Do I need to do something different with the $futures{$key}->get loop starting at line 664?
[00:37:44] *** Quits: anthk_ (~anthk_@92.176.105.30) (Quit: nyaa~)
[00:37:44] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[00:37:54] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[00:37:59] *** Joins: anthk_ (~anthk_@92.176.105.30)
[00:38:47] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[00:39:00] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:40:03] *** Parts: gry (~gry@botters/gry) (Leaving)
[00:42:27] *** Quits: speskk (~speskk@user/speskk) (Remote host closed the connection)
[00:47:21] *** Quits: magla (~gelignite@55d46452.access.ecotel.net) (Quit: Stay safe!)
[00:51:49] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[00:54:09] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[00:54:34] *** Parts: Kaedenn (~kaedenn@137.229.82.89) ()
[00:57:10] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 256 seconds)
[00:57:32] *** Joins: krismatrix (~krismatri@38.80.149.51)
[01:01:37] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 240 seconds)
[01:03:34] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:04:05] *** Joins: speskk (~speskk@c-71-234-67-119.hsd1.ct.comcast.net)
[01:04:05] *** Quits: speskk (~speskk@c-71-234-67-119.hsd1.ct.comcast.net) (Changing host)
[01:04:05] *** Joins: speskk (~speskk@user/speskk)
[01:07:27] <gordonfish> murray
[01:07:29] <gordonfish> oops
[01:10:00] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:15:46] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[01:17:34] *** Joins: zamanf (~dev@213.133.91.246)
[01:17:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:21:31] *** Joins: whynot (~whynot@37.73.62.64)
[01:22:45] *** Joins: kensanata (~user@user/kensanata)
[01:24:00] *** Quits: zamanf (~dev@213.133.91.246) (Ping timeout: 250 seconds)
[01:29:02] *** Quits: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com) (Quit: Client closed)
[01:36:01] *** Quits: deadmarshal (~deadmarsh@95.38.116.14) (Ping timeout: 256 seconds)
[01:45:17] *** Joins: gry (~gry@botters/gry)
[01:45:39] *** Quits: keir (~keir@user/keir) (Quit: I've gone)
[01:45:46] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[01:45:51] <gry> I try to find static website generator with .po localization support. There are many which convert markdown to html, but they do not support the localization. How do I find, please?
[01:45:59] *** Joins: keir (~keir@user/keir)
[01:46:33] *** Quits: The_Blod- (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[01:49:44] *** Quits: keir (~keir@user/keir) (Client Quit)
[01:52:51] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[01:54:26] *** Joins: keir (~keir@user/keir)
[01:59:38] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[02:05:48] *** Joins: deadmarshal (~deadmarsh@95.38.117.25)
[02:10:21] *** Quits: deadmarshal (~deadmarsh@95.38.117.25) (Ping timeout: 256 seconds)
[02:12:54] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[02:15:41] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:15:59] *** Quits: haj (~haj@95.91.235.152) (Ping timeout: 250 seconds)
[02:17:34] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:19:54] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 260 seconds)
[02:20:36] *** Joins: pj (~pj@ghettoforge/pj)
[02:21:16] *** Joins: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de)
[02:25:17] *** Quits: dilfridge (~quassel@gentoo/developer/dilfridge) (Ping timeout: 250 seconds)
[02:26:39] *** Joins: deadmarshal (~deadmarsh@95.38.117.25)
[02:29:00] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 250 seconds)
[02:29:07] *** Joins: dilfridge (~quassel@gentoo/developer/dilfridge)
[02:33:41] *** Quits: pizdets (~pizdets@183.182.114.142) (Ping timeout: 245 seconds)
[02:34:02] *** Joins: pizdets_ (~pizdets@183.182.115.213)
[02:34:27] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[02:35:44] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[02:38:57] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[02:38:59] *** Quits: KnoP (~KnoP@ip-094-114-018-255.um31.pools.vodafone-ip.de) (Quit: ChatZilla 0.10 [SeaMonkey 2.53.10.2/20211221193415])
[02:44:50] *** Quits: deadmarshal (~deadmarsh@95.38.117.25) (Ping timeout: 256 seconds)
[02:49:17] *** Joins: cmburn (~Charlie_B@2607:ea00:107:3c07:39a3:d617:ccf1:90ef)
[02:51:25] *** Quits: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[02:56:17] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 250 seconds)
[02:56:43] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[03:03:26] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[03:06:13] *** Quits: kensanata (~user@user/kensanata) (Remote host closed the connection)
[03:07:34] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[03:10:09] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 250 seconds)
[03:10:39] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:13:49] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[03:17:55] *** Joins: Core4325 (~bscan@c-24-60-2-180.hsd1.ma.comcast.net)
[03:18:21] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 256 seconds)
[03:19:17] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[03:20:57] *** Quits: bscan (~bscan@2600:380:586b:c18c:1504:6cde:ff05:da75) (Ping timeout: 240 seconds)
[03:23:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 240 seconds)
[03:24:59] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[03:25:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:29:56] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 245 seconds)
[03:30:04] *** Quits: e1f (~user@141.117.1.134) (Quit: goo nigh)
[03:33:02] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[03:42:43] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[03:46:05] *** Joins: k8yun (~k8yun@user/k8yun)
[03:46:59] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 250 seconds)
[03:55:08] *** Joins: rednul (~redial@mc.emailserverz.com)
[03:56:19] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:58:36] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[04:03:01] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[04:03:02] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 256 seconds)
[04:04:24] *** Quits: whynot (~whynot@37.73.62.64) (Quit: leaving)
[04:08:34] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[04:10:49] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Client Quit)
[04:14:36] *** Joins: krismatrix (~krismatri@38.80.149.51)
[04:16:24] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[04:16:39] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[04:20:36] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[04:21:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 240 seconds)
[04:22:45] *** Quits: cmburn (~Charlie_B@2607:ea00:107:3c07:39a3:d617:ccf1:90ef) (Quit: Leaving.)
[04:28:03] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 256 seconds)
[04:28:25] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[04:29:25] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[04:31:23] *** Quits: proller (~p@2a02:6b8:b081:17::1:38) (Ping timeout: 250 seconds)
[04:31:37] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:34:33] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[04:40:11] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:41:28] *** Joins: EvanCarroll (~ecarroll@50.222.187.218)
[04:43:25] *** Joins: llh (~llh@user/llh)
[04:43:49] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[04:44:10] *** Quits: heiner_ (~heiner@94.31.81.196) (Remote host closed the connection)
[04:44:27] *** Joins: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[05:00:40] *** Joins: krismatrix (~krismatri@38.80.149.51)
[05:03:40] <krismatrix> Botje: do you know what I need to do in docker so that my web app connects to the db servers? https://l.perl.bot/p/irjmr4 I managed to get docker-compose.yml to crete the web app and independents postgres and redis. But the web app container doesn't have psql. So i am not sure what is expect to get the web app to connect to the postgres or redis.
[05:03:40] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[05:06:24] * GumbyPAN CPAN Upload: PDL-Drawing-Prima-0.13 by DCMERTENS https://metacpan.org/release/DCMERTENS/PDL-Drawing-Prima-0.13
[05:08:51] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Ping timeout: 256 seconds)
[05:09:05] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[05:11:03] *** Quits: Pali (~pali@user/pali) (Ping timeout: 250 seconds)
[05:16:11] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[05:17:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:28:06] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:28:46] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Remote host closed the connection)
[05:31:48] *** Joins: anthk_ (~anthk_@92.176.105.30)
[05:32:21] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[05:39:59] *** Joins: k8yun_ (~k8yun@user/k8yun)
[05:40:21] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34)
[05:41:36] *** Quits: k8yun_ (~k8yun@user/k8yun) (Remote host closed the connection)
[05:41:53] *** Quits: EvanCarroll (~ecarroll@50.222.187.218) (Remote host closed the connection)
[05:43:39] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[05:48:24] <krismatrix> in docker, when I run carton exec morbo my_app/script/my_app, I get the following error: ListUtil.c: loadable library and perl binaries are mismatched (got handshake key 0xcd00080, needed 0xed00080)
[05:48:31] <krismatrix> Does this mean anything you recognize?
[05:52:40] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:613c:f1e3:33fb:ee34) (Ping timeout: 250 seconds)
[05:53:58] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 250 seconds)
[05:57:26] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[05:57:36] *** Joins: jaguart (~jaguart@119-18-28-11.77121c.mel.static.aussiebb.net)
[06:00:25] *** Quits: Su-Shee (~Susanne@p4ffc7a16.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:01:20] *** Joins: k8yun (~k8yun@user/k8yun)
[06:01:47] *** Joins: Su-Shee (~Susanne@p4ffc7fc6.dip0.t-ipconnect.de)
[06:03:59] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[06:04:14] <ether> your perl libraries are screwed up
[06:04:32] <ether> look at the list of @INC dirs in 'perl -V'. some of them are for versions that shouldn't be there
[06:04:38] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:04:45] <krismatrix> thx u
[06:21:24] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[06:26:32] * GumbyPAN CPAN Upload: XML-RSSLite-0.17 by JPIERCE https://metacpan.org/release/JPIERCE/XML-RSSLite-0.17
[06:26:42] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:31:32] * GumbyPAN CPAN Upload: JSON-Schema-Modern-Document-OpenAPI-0.020 by ETHER https://metacpan.org/release/ETHER/JSON-Schema-Modern-Document-OpenAPI-0.020
[06:31:43] *** Joins: frost (~frost@user/frost)
[06:35:07] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 250 seconds)
[06:38:37] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 240 seconds)
[06:38:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:41:22] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:e00d:69c0:db02:528b)
[06:47:32] *** Joins: cmburn (~Charlie_B@2601:441:4c00:67d:34c4:a993:d6b3:eab5)
[06:52:51] *** Parts: cmburn (~Charlie_B@2601:441:4c00:67d:34c4:a993:d6b3:eab5) ()
[06:55:04] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[06:57:17] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:e00d:69c0:db02:528b) (Ping timeout: 240 seconds)
[06:57:31] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Ping timeout: 268 seconds)
[07:01:18] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[07:06:32] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[07:09:00] *** Joins: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[07:10:21] *** Joins: R2robot (~R2robot@user/r2robot)
[07:11:05] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:ed3c:cb5a:50ec:f83d)
[07:17:58] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[07:18:17] *** Quits: Core4325 (~bscan@c-24-60-2-180.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[07:51:12] *** Joins: Martchus_ (~martchus@2a01:c23:bcde:c700:d250:99ff:fe49:3cce)
[07:51:24] *** Quits: Martchus (~martchus@dynamic-095-115-084-186.95.115.pool.telefonica.de) (Ping timeout: 256 seconds)
[07:55:31] *** Joins: Darkcoal (~user@user/Darkcoal)
[07:59:43] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[08:00:27] *** Joins: deadmarshal (~deadmarsh@95.38.117.25)
[08:03:57] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[08:12:37] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[08:22:21] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[08:33:54] *** Quits: anthk_ (~anthk_@92.176.105.30) (Ping timeout: 256 seconds)
[08:45:50] *** Quits: randir (~randir@2.92.196.208) (Remote host closed the connection)
[08:46:24] *** Joins: randir (~randir@2.92.196.208)
[08:50:54] *** Quits: randir (~randir@2.92.196.208) (Ping timeout: 256 seconds)
[08:51:19] *** Joins: zamanf (~dev@213.133.91.246)
[08:57:44] *** Joins: randir (~randir@93.159.239.42)
[09:07:45] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[09:09:15] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[09:18:16] *** Quits: japh (~scp1@user/japh) (Ping timeout: 245 seconds)
[09:18:34] *** Joins: japh (~scp1@user/japh)
[09:25:40] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:ed3c:cb5a:50ec:f83d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:25:59] *** Joins: k8yun_ (~k8yun@user/k8yun)
[09:27:30] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Quit: WeeChat 2.8)
[09:29:45] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[09:29:45] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 256 seconds)
[09:30:23] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[09:35:23] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[09:36:10] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[09:40:12] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[09:45:06] *** Joins: mexen (uid495612@user/mexen)
[09:45:31] *** Joins: ekathva (~ekathva@2001:999:50:cab1:7400:254b:2f47:2e82)
[09:48:10] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:53:14] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[09:56:37] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[09:57:36] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[09:57:48] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[09:58:13] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[09:58:28] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Read error: Connection reset by peer)
[10:00:55] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[10:02:26] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[10:02:37] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[10:08:32] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[10:10:14] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[10:10:50] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[10:11:52] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[10:12:23] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:14:46] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[10:25:40] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[10:29:24] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[10:32:17] <japh> https://github.com/saiftynet/Wordle
[10:32:18] <Paperbot> Link title(s): [ GitHub - saiftynet/Wordle: A command Line wordle clone ]
[10:34:13] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[10:39:27] *** Joins: art1 (~romeyke@p200300ccdf09e70058f144c396cec17a.dip0.t-ipconnect.de)
[10:41:22] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[10:43:38] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[10:45:08] *** Quits: ekathva (~ekathva@2001:999:50:cab1:7400:254b:2f47:2e82) (Remote host closed the connection)
[10:46:44] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[10:46:53] *** Joins: ekathva (~ekathva@2001:999:50:cab1:caa4:5c66:a03b:aeba)
[10:47:53] *** Joins: frost (~frost@user/frost)
[10:48:58] *** Quits: ekathva (~ekathva@2001:999:50:cab1:caa4:5c66:a03b:aeba) (Remote host closed the connection)
[10:50:44] *** Joins: ekathva (~ekathva@2001:999:50:cab1:57c0:d735:9d33:c719)
[10:57:00] * GumbyPAN CPAN Upload: Net-Curl-0.50_1 by SYP https://metacpan.org/release/SYP/Net-Curl-0.50_1
[10:57:28] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Remote host closed the connection)
[10:59:05] *** Quits: ekathva (~ekathva@2001:999:50:cab1:57c0:d735:9d33:c719) (Remote host closed the connection)
[10:59:22] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:a89e:b347:cccb:c7e5) (Read error: Connection reset by peer)
[10:59:39] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:3c9b:6dce:e374:3130)
[11:00:40] *** Joins: ekathva (~ekathva@2001:999:50:cab1:3235:c247:f7c8:bce3)
[11:02:56] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[11:05:36] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[11:08:44] *** Quits: k8yun_ (~k8yun@user/k8yun) (Quit: Leaving)
[11:14:04] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Remote host closed the connection)
[11:14:08] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[11:14:29] *** Joins: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[11:49:24] *** Joins: frost (~frost@user/frost)
[11:52:56] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:55:02] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[11:58:24] <Botje> uh yeah, I sleep at 2:33 CET.
[11:58:35] <Botje> I'll wait for krismatris to come back.
[12:05:59] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[12:07:07] * GumbyPAN CPAN Upload: Module-Install-RTx-0.43 by BPS https://metacpan.org/release/BPS/Module-Install-RTx-0.43
[12:13:43] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[12:18:52] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[12:21:43] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[12:26:29] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[12:27:09] * GumbyPAN CPAN Upload: Git-Critic-0.5 by OVID https://metacpan.org/release/OVID/Git-Critic-0.5
[12:30:32] *** Joins: vanessa (~vanessa@103.160.128.7)
[12:31:43] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[12:34:13] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 268 seconds)
[12:48:24] *** Joins: Pali (~pali@user/pali)
[12:49:51] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[13:00:26] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[13:19:38] *** Joins: KnoP (~KnoP@business-176-095-149-105.static.arcor-ip.net)
[13:26:01] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[13:27:03] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[13:31:25] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[13:36:49] *** Quits: cxreg (~count@63.228.111.44) (Ping timeout: 256 seconds)
[13:40:39] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:41:49] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[13:45:43] *** Parts: gry (~gry@botters/gry) (Leaving)
[13:48:22] *** Joins: cxreg (~count@63.228.111.44)
[13:56:25] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 256 seconds)
[13:57:28] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[13:59:42] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[14:01:42] *** Joins: xenu_ (~xenu@carychium-tridentatum.xenu.pl)
[14:01:55] *** Joins: choroba_ (~E.Choroba@89-101-243-80.cust.centrio.cz)
[14:02:40] *** Joins: aquanite (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:02:59] *** Joins: tcohen_ (~tcohen@vmi626720.contaboserver.net)
[14:03:08] *** Joins: v^ (~v@user/ctrl)
[14:03:23] *** Joins: rednul_ (~rednul@mc.emailserverz.com)
[14:03:56] *** Joins: p71- (~p71@096-042-034-230.res.spectrum.com)
[14:04:42] *** Joins: dansan_ (~daniel@75.81.148.51)
[14:04:42] *** Joins: JoelJoel (~jjshoe@user/joel)
[14:04:46] *** Joins: helium-3 (~quassel@gentoo/developer/dilfridge)
[14:04:48] *** Joins: vrurg_ (~vrurg@45.74.95.181)
[14:04:48] *** Joins: wilk_ (~wilk@user/wilk)
[14:05:16] *** Joins: KnoP_ (~KnoP@business-176-095-149-105.static.arcor-ip.net)
[14:05:56] *** Joins: mst_ (~matthewt@perl/shadowcat-mst/chainsaw-wielder)
[14:05:57] *** Joins: _vanessa_ (~vanessa@103.160.128.7)
[14:05:58] *** Joins: zakame_ (~zakame@user/zakame)
[14:06:09] *** Joins: nop (~Murray@89.109-247-180.customer.lyse.net)
[14:06:21] *** Joins: Mandevil_ (~mandevil@ip-89-102-168-162.net.upcbroadband.cz)
[14:06:33] *** nop is now known as Guest1160
[14:06:39] *** Joins: DonSpice (~Don_Spice@user/SpiceMan)
[14:07:19] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (Killed (NickServ (GHOST command used by DonSpice)))
[14:07:24] *** DonSpice is now known as SpiceMan
[14:07:36] *** Quits: KnoP_ (~KnoP@business-176-095-149-105.static.arcor-ip.net) (Client Quit)
[14:08:06] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[14:08:35] *** Joins: Pali_ (~pali@user/pali)
[14:08:35] *** Quits: Pali (~pali@user/pali) (Killed (mercury.libera.chat (Nickname regained by services)))
[14:08:35] *** Pali_ is now known as Pali
[14:10:24] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Killed (NickServ (GHOST command used by emanuele61!~emanuele6@net-93-66-69-137.cust.vodafonedsl.it)))
[14:11:02] *** Quits: KnoP (~KnoP@business-176-095-149-105.static.arcor-ip.net) (*.net *.split)
[14:11:02] *** Quits: vanessa (~vanessa@103.160.128.7) (*.net *.split)
[14:11:02] *** Quits: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz) (*.net *.split)
[14:11:02] *** Quits: rednul (~redial@mc.emailserverz.com) (*.net *.split)
[14:11:02] *** Quits: dilfridge (~quassel@gentoo/developer/dilfridge) (*.net *.split)
[14:11:02] *** Quits: speskk (~speskk@user/speskk) (*.net *.split)
[14:11:02] *** Quits: csrf (~csrf@user/csrf) (*.net *.split)
[14:11:02] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (*.net *.split)
[14:11:02] *** Quits: Dreadnaught (Kulrak@n122-109-158-59.rdl2.qld.optusnet.com.au) (*.net *.split)
[14:11:02] *** Quits: zakame (~zakame@user/zakame) (*.net *.split)
[14:11:02] *** Quits: LogicAside (~LogicAsid@user/logicaside) (*.net *.split)
[14:11:02] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (*.net *.split)
[14:11:02] *** Quits: MasterOfMagic (~magnets@turnpike.bastards.stream) (*.net *.split)
[14:11:03] *** Quits: overrider (~overrider@user/overrider) (*.net *.split)
[14:11:03] *** Quits: tcohen (~tcohen@vmi626720.contaboserver.net) (*.net *.split)
[14:11:03] *** Quits: mst (~matthewt@perl/shadowcat-mst/chainsaw-wielder) (*.net *.split)
[14:11:03] *** Quits: vrurg (~vrurg@45.74.95.181) (*.net *.split)
[14:11:03] *** Quits: v` (~v@user/ctrl) (*.net *.split)
[14:11:03] *** Quits: Zubin (~rubin@ender.afternet.org) (*.net *.split)
[14:11:03] *** Quits: dansan (~daniel@75.81.148.51) (*.net *.split)
[14:11:03] *** Quits: Joel (~jjshoe@user/joel) (*.net *.split)
[14:11:03] *** Quits: GumbyPAN (~cpanbot@jingo.bingosnet.co.uk) (*.net *.split)
[14:11:03] *** Quits: nshp (~hi@45.79.184.145) (*.net *.split)
[14:11:03] *** Quits: asdflkj_sh (asdflkj@user/asdflkj-sh/x-6013523) (*.net *.split)
[14:11:03] *** Quits: wilk (~wilk@user/wilk) (*.net *.split)
[14:11:03] *** Quits: justGhost (~justache@user/justache) (*.net *.split)
[14:11:03] *** Quits: p71 (~p71@096-042-034-230.res.spectrum.com) (*.net *.split)
[14:11:03] *** Quits: sysdef (~sysdef@user/sysdef) (*.net *.split)
[14:11:03] *** Quits: maettu (~mbloch@guardian.werft22.net) (*.net *.split)
[14:11:03] *** Quits: Mandevil (~mandevil@ip-89-102-168-162.net.upcbroadband.cz) (*.net *.split)
[14:11:03] *** Quits: webstran- (~webstrand@user/webstrand) (*.net *.split)
[14:11:03] *** Quits: xenu (~xenu@carychium-tridentatum.xenu.pl) (*.net *.split)
[14:11:03] *** Quits: Richlv (~rich@nakts.net) (*.net *.split)
[14:11:03] *** Quits: blinky42 (~quassel@user/blinky42) (*.net *.split)
[14:11:03] *** Quits: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de) (*.net *.split)
[14:11:03] *** Quits: mason (~mason@redhat/mason) (*.net *.split)
[14:11:03] *** Quits: perlmaros (~perlmaros@master.k-1.com) (*.net *.split)
[14:11:03] *** Quits: kolcon (~kolcon@v.kolouch.org) (*.net *.split)
[14:11:03] *** Quits: shaldannon (william@208.79.82.66) (*.net *.split)
[14:11:03] *** Quits: skyl4rk (~tlvb@user/tlvb) (*.net *.split)
[14:11:03] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[14:11:03] *** Quits: DrHyde (~david@bytemark.barnyard.co.uk) (*.net *.split)
[14:11:03] *** Quits: Nei (~ailin@openSUSE/member/ailin-nemui) (*.net *.split)
[14:11:04] *** aquanite is now known as aquanight
[14:11:09] *** wilk_ is now known as wilk
[14:11:25] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[14:12:31] *** Quits: _vanessa_ (~vanessa@103.160.128.7) (Ping timeout: 256 seconds)
[14:14:26] *** Joins: _vanessa_ (~vanessa@103.160.128.7)
[14:14:27] *** Quits: frost (~frost@user/frost) (Ping timeout: 250 seconds)
[14:16:12] *** Joins: csrf1 (~csrf@ip72-199-118-215.sd.sd.cox.net)
[14:16:12] *** Joins: speskk (~speskk@user/speskk)
[14:16:12] *** Joins: Dreadnaught (Kulrak@n122-109-158-59.rdl2.qld.optusnet.com.au)
[14:16:12] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[14:16:12] *** Joins: MasterOfMagic (~magnets@turnpike.bastards.stream)
[14:16:12] *** Joins: overrider (~overrider@user/overrider)
[14:16:12] *** Joins: Zubin (~rubin@ender.afternet.org)
[14:16:12] *** Joins: GumbyPAN (~cpanbot@jingo.bingosnet.co.uk)
[14:16:12] *** Joins: nshp (~hi@45.79.184.145)
[14:16:12] *** Joins: asdflkj_sh (asdflkj@user/asdflkj-sh/x-6013523)
[14:16:12] *** Joins: justGhost (~justache@user/justache)
[14:16:12] *** Joins: sysdef (~sysdef@user/sysdef)
[14:16:12] *** Joins: maettu (~mbloch@guardian.werft22.net)
[14:16:12] *** Joins: webstran- (~webstrand@user/webstrand)
[14:16:12] *** Joins: Richlv (~rich@nakts.net)
[14:16:12] *** Joins: blinky42 (~quassel@user/blinky42)
[14:16:12] *** Joins: MDingas (~MDingas@static.155.53.55.162.clients.your-server.de)
[14:16:12] *** Joins: mason (~mason@redhat/mason)
[14:16:12] *** Joins: perlmaros (~perlmaros@master.k-1.com)
[14:16:12] *** Joins: kolcon (~kolcon@v.kolouch.org)
[14:16:12] *** Joins: shaldannon (william@208.79.82.66)
[14:16:12] *** Joins: skyl4rk (~tlvb@user/tlvb)
[14:16:12] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[14:16:12] *** Joins: DrHyde (~david@bytemark.barnyard.co.uk)
[14:16:12] *** Joins: Nei (~ailin@openSUSE/member/ailin-nemui)
[14:16:12] *** Quits: Repaster_ (~Repaster@perlbot/bot/grinnz/repaster) (Excess Flood)
[14:16:25] *** Joins: Repaster_ (~Repaster@dsl-50-5-168-166.fuse.net)
[14:16:25] *** Quits: Repaster_ (~Repaster@dsl-50-5-168-166.fuse.net) (Changing host)
[14:16:25] *** Joins: Repaster_ (~Repaster@perlbot/bot/grinnz/repaster)
[14:21:21] *** Quits: zamanf (~dev@213.133.91.246) (Changing host)
[14:21:21] *** Joins: zamanf (~dev@user/zamanf)
[14:27:01] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[14:30:00] *** Joins: frost (~frost@user/frost)
[14:31:17] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Ping timeout: 240 seconds)
[14:31:38] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[14:33:47] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[14:35:43] *** xenu_ is now known as xenu
[14:39:38] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[14:50:03] *** Joins: pingpongball (~pingpongb@43.228.192.104)
[14:50:10] <pingpongball> why should i learn perl?
[14:50:14] <pingpongball> is perl dead language?
[14:50:50] <Adura> You meme-ing?
[14:51:07] <SpiceMan> pingpongball:  1) because. 2) yes. every language implementation is inert, not living beings.
[14:51:10] <pingpongball> no i'm researching finding interest
[14:51:26] <SpiceMan> perl included
[14:51:40] <pingpongball> is perl lisp dialect?
[14:51:42] <Adura> You should learn Perl because you want to solve problems with an interpreted programming language?
[14:52:11] <Adura> Perl isn't dead. TF2 isn't dead.
[14:52:23] <_vanessa_> pingpongball: you should learn perl if (a) want a better AWK/sed (b) better PHP/Ruby (c) code-golf. Those are my use cases.
[14:53:59] <pingpongball> why perl github looks so not nice https://github.com/Perl/perl5 compared to python https://github.com/python/cpython/
[14:54:01] <Paperbot> Link title(s): [ GitHub - Perl/perl5: 🐫 The Perl programming language ] [ GitHub - python/cpython: The Python programming language ]
[14:54:04] <pingpongball> i mean in readme and things
[14:54:23] <_vanessa_> apparently, some of my collegues who do biology use perl heavily.
[14:56:23] *** _vanessa_ is now known as vanessa
[15:08:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 260 seconds)
[15:13:14] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[15:15:01] <choroba_> This is probably the last place where Perl will be declared dead.
[15:21:09] *** Joins: proller (~p@93.158.190.219)
[15:22:24] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:25:26] <bkhl> You should also learn it if you want to be a colleague of mine I guess. In my experience people that want to work with large Perl projects is a bit difficult.
[15:25:52] <bkhl> But by all means go around telling everyone Perl is dead, it helps my job security. :-)
[15:30:16] *** Quits: csrf1 (~csrf@ip72-199-118-215.sd.sd.cox.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:04] *** Joins: csrf (~csrf@user/csrf)
[15:32:11] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[15:34:34] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[15:35:26] *** choroba_ is now known as choroba
[15:36:11] *** Quits: Dreadnaught (Kulrak@n122-109-158-59.rdl2.qld.optusnet.com.au) (Read error: Connection reset by peer)
[15:36:25] *** Joins: Dreadnaught (Kulrak@n122-109-158-59.rdl2.qld.optusnet.com.au)
[15:37:51] *** helium-3 is now known as dilfridge
[15:40:00] *** Joins: frost (~frost@user/frost)
[15:51:49] <japh> bkhl, well, how large is it?
[15:52:13] <bkhl> Ca 600 KLOC last time someone counted.
[15:52:31] <japh>  2450833 total
[15:52:33] <japh> :)
[15:53:33] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[15:53:41] <japh> and that's only the perl part... 
[15:55:53] *** Joins: haj (~haj@95.91.235.152)
[15:57:01] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[15:58:49] *** Quits: pingpongball (~pingpongb@43.228.192.104) (Quit: "bye :* ")
[15:59:20] <simcop2387> i have to bring it up with more people, More Futurama is incoming.
[15:59:39] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[15:59:56] <Altreus> ooooooo
[16:00:06] <Altreus> I approve
[16:00:58] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:02:32] *** Quits: haj (~haj@95.91.235.152) (Ping timeout: 240 seconds)
[16:03:06] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Ping timeout: 260 seconds)
[16:05:17] *** Quits: japh (~scp1@user/japh) (Ping timeout: 256 seconds)
[16:05:40] <vanessa> bkhl: 600 KLOC means 600,000 lines right? If it not baby perl, it must be a PITA to maintain.
[16:05:50] <bkhl> It's fairly tidy.
[16:06:12] <bkhl> It uses a class system similar to the inside-out classes in the "Perl Best Practices" book.
[16:07:31] <bkhl> Home made test runner too. To complain about it I'll just say I would have wished they put the class system and testrunner on CPAN and made it free software.
[16:07:59] <bkhl> As it is, it's a bit too entangled with the structure of this single project.
[16:09:28] <choroba> We only have about 250K of Perl here
[16:10:07] <choroba> Used to be twice more
[16:11:26] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[16:12:28] *** Joins: japh (~scp1@user/japh)
[16:17:16] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[16:18:27] *** Joins: haj (~haj@95.91.235.152)
[16:25:57] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[16:27:08] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[16:34:17] *** Quits: Woodzy (~quassel@198.204.246.228) (Ping timeout: 240 seconds)
[16:35:03] *** Joins: Woodzy (~quassel@198.204.246.228)
[16:39:53] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[16:43:10] *** Quits: henry40408 (~henry4040@175.181.155.165) (Read error: Connection reset by peer)
[16:45:03] *** Joins: henry40408 (~henry4040@123-204-141-191.adsl.dynamic.seed.net.tw)
[16:53:00] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:53:52] *** Joins: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com)
[16:54:31] <ozzzo_work> I'm using the non-blocking sleep now, and I loaded Future::IO::Impl::IOAsync, but I still see processes blocked. Here's my updated code: https://perl.bot/p/a3j1b6
[16:54:32] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[16:54:56] <ozzzo_work> In this output, we see stackwatch-trust-8 timing out and blocking the stackwatch-trust-1 forward process, so that stackwatch-trust-1 forward reports a 120-second DNS time when in fact it finished in a few seconds: https://perl.bot/p/i2ck43
[16:54:56] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[16:55:20] <ozzzo_work> Do I need to do something different with the $futures{$key}->get loop starting at line 664?
[17:00:34] <Botje> I have no clue.
[17:01:39] <Botje> as far as I can see and reason about, the DNS results are bound by the OneVM function, so why do you think the reporting code is at fault?
[17:03:46] *** Quits: haj (~haj@95.91.235.152) (Ping timeout: 260 seconds)
[17:04:19] <Botje> ozzzo_work: also, did you verify that getaddrinfo is not blocking? I would expect an async DNS resolver used there.
[17:04:57] *** Joins: lkw (~lkw@user/lkw)
[17:05:44] <ozzzo_work> Botje: I didn't. What async DNS resolver do you recommend?
[17:06:38] * GumbyPAN CPAN Upload: Podman-20220210.0 by TSCHAEFER https://metacpan.org/release/TSCHAEFER/Podman-20220210.0
[17:06:52] <Botje> https://metacpan.org/pod/IO::Async::Resolver::DNS from the same family?
[17:06:53] <Paperbot> Link title(s): [ IO::Async::Resolver::DNS - resolve DNS queries using IO::Async - metacpan.org ]
[17:07:47] <ozzzo_work> I don't know that the reporting code is at fault, but I replaced my other ->get loop with ->wait-all
[17:08:30] <ozzzo_work> ok reading, ty
[17:11:04] <Botje> if CheckfDNS ends up taking 120 seconds, I would guess that is because something in CheckfDNS is taking 120 seconds
[17:11:17] <simcop2387> Altreus: it might now have the record for most series finales of any tv series
[17:11:28] <Botje> so that's either getaddrinfo hanging, or indeed you're doing 120 DNS queries before the 121st returns the result you're looking for
[17:12:28] <Botje> ozzzo_work: did you rule out negative DNS caching, for example?
[17:12:44] <LeoNerd> $loop->getaddrinfo  is also a thing
[17:14:57] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[17:16:19] <LeoNerd> (though only for actual "name resolver" DNSish stuff)
[17:16:29] <Botje> my money is on negative DNS caching.
[17:17:00] <Botje> but then I have no idea how you solve that, beyond contacting the authoritative DNS server directly
[17:17:08] <ozzzo_work> If the DNS is going to work, it returns a second or two. If it doesn't work, then it times out. I've tried different timeouts, and the blocked process always returns after the others time out, so it definitely isn't a case of DNS just happening to return in 120 seconds
[17:17:27] <mmlj4> dig times out in 15 seconds
[17:17:27] <ozzzo_work> if I change the timeout to 60, then the blocked ones return after 60 seconds
[17:18:41] <ozzzo_work> LeoNerd: I'm not sure I follow. What are you recommending?
[17:18:58] <LeoNerd> I don't know, I don't know what it is you're making
[17:19:08] <LeoNerd> I'm pointing out a few extra bricks that exist that you might not have noticed
[17:19:18] <LeoNerd> It's up to you to work out how to stack them up to build your particular kind of house
[17:19:42] <ozzzo_work> you mean, in IO::Async::Resolver::DNS;?
[17:20:00] <LeoNerd> You already foudn that
[17:20:05] <LeoNerd> I was also pointing out  $loop->getaddrinfo
[17:20:30] <LeoNerd> Oh, well, rather; https://metacpan.org/pod/IO::Async::Loop#resolver
[17:20:31] <Paperbot> Link title(s): [ IO::Async::Loop - core loop of the IO::Async framework - metacpan.org ]
[17:20:42] <LeoNerd> Which leads to  https://metacpan.org/pod/IO::Async::Resolver#getaddrinfo
[17:20:43] <Paperbot> Link title(s): [ IO::Async::Resolver - performing name resolutions asynchronously - metacpan.org ]
[17:20:53] <LeoNerd> (I thought I'd put a convenient trampoline method on the Loop but apparently not)
[17:21:01] <ozzzo_work> ok reading, ty!
[17:22:09] <ozzzo_work> LeoNerd: Do you think we're on the right track, thinking that getaddrinfo is blocking and that I need to use an async method there instead?
[17:22:41] <Botje> no, the more I think about it the more I think it's negative DNS caching.
[17:22:54] <Botje> but you keep not responding to me, so eh.
[17:23:00] <LeoNerd> I have no idea what the problem is
[17:23:08] <LeoNerd> I haven't een reading or following along
[17:23:21] <LeoNerd> If you call blocking functions, then they might block. If you don't, then they won't
[17:23:30] <LeoNerd> I'd suggest never calling anything that might block, from within async code
[17:23:37] <Botje> ozzzo_work: so before you do anything else, please use dig to figure out 1) what the TTL is for the DNS entry of successfully created VM
[17:23:38] <LeoNerd> It's a fairly simple rule :)
[17:23:50] <Botje> ozzzo_work: and 2) if you look up a VM that does not exist, what is the TTL then?
[17:24:38] <Botje> your code clearly assumes getaddrinfo always does a full lookup to the source DNS system, but there is at least one layer of caching inbetween (your ISP) and probably more.
[17:24:47] <Altreus> simcop2387: finales are always way better, though, so every series should end permanently as often as possible!
[17:26:12] <simcop2387> Altreus: the reddit joke about it was that every episode should be made to be a series finale.  so 20 of them in a row acting like they aren't coming back
[17:26:44] <Altreus> Groening would do that, as well
[17:27:06] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[17:27:09] <huf> what if it's 20 one-after-the-last-one episodes in a row?
[17:27:16] <huf> just a blank screen, because it was never made
[17:27:33] <huf> bound to be better because it lets your imagination soar
[17:27:43] <simcop2387> they did do a futurama spin off, straight to dvd though.
[17:27:53] <Altreus> 20 episodes with a new spin-off cast in each one
[17:27:57] <simcop2387> there's a full episode of Everybody Loves Hypnotoad
[17:28:05] <Altreus> Each time the original cast just kicks them out and takes over
[17:28:29] *** Joins: haj (~haj@95.91.235.152)
[17:28:37] <simcop2387> what kind of odds can i get on fedex delivering my package today?
[17:28:52] <Altreus> I don't fancy your odds of them delivering it at all
[17:29:22] <simcop2387> if it gets stolen it'd be a felony in this state so it'll be fun to deal with
[17:29:55] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Remote host closed the connection)
[17:31:15] <Altreus> dunno about you lot, but over here they keep finding undelivered packages from the 70s when they renovate
[17:31:41] <Altreus> Eh the US is probably not that old :P
[17:32:49] <huf> neither is the UK
[17:33:16] <huf> unless you meant the 1970s, but then you would've written that
[17:33:20] <huf> not this sloppy shorthand
[17:33:28] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:34:35] <simcop2387> Altreus: that explains Going Postal
[17:34:45] <bkhl> I remember watching the end of Buffy season 5 and for some reason having gotten the impression that was the final season.
[17:34:54] <bkhl> I was so impressed by that brave ending
[17:35:20] <simcop2387> bkhl: Spike does the readings for the audio books of The Dresden Files
[17:36:31] <bkhl> James Marsden is quitea polymath
[17:36:31] *** rednul_ is now known as rednul
[17:37:18] <bkhl> I love the flashbacks where he's a failed romantic poet.
[17:39:42] *** JoelJoel is now known as Joel
[17:41:30] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[17:41:38] *** Quits: noctux (~noctux@user/noctux) (Remote host closed the connection)
[17:45:31] <Altreus> simcop2387: it does, quite accurately
[17:45:43] <Altreus> A lot of that is based in real life, with pterry exaggerations
[17:46:14] <Altreus> huf: hopefully the UK is not much longer either
[17:47:45] <bkhl> I worked in the international mail receival in Sweden for a bit around 20 years ago.
[17:48:06] <bkhl> No wait, actually the reverse, outgoing international mail was what I worked with. :-/
[17:48:11] <bkhl> It's getting fuzzy.
[17:48:52] *** Joins: noctux (~noctux@user/noctux)
[17:49:03] <bkhl> Anyway, while I was there, there was an undercover postal police officer there, that uncovered a mail theft ring in our shift. One day 4-5 people didn't come to work and never came back.
[17:49:24] <bkhl> They were mostly stealing cash remittances that immigrants were sending home.
[17:50:08] <pragma-> Quantum Leap was a curious show
[17:50:39] <Altreus> I think that was a true story, not Quantum Leap
[17:51:51] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[17:52:24] *** Joins: randir (~randir@93.159.239.42)
[17:52:35] <ozzzo_work> LeoNerd: I think I need to understand better how the Async stuff works. I'm calling getaddrinfo in sub CheckfDNS which is called by OneVM which I call via IO::Async::Function. How do the different getaddrinfo processes know about each other in order to block?
[17:53:53] <LeoNerd> ??
[17:54:04] <LeoNerd> First off: how about not doing that?
[17:54:16] <LeoNerd> Just use the Resolver. That is literally what it is there for and does exactly what you're suggesting anyway
[17:55:04] <ozzzo_work> The problem is, I'm trying to use your Async stuff and I have no clue how it works. I'm basically plugging a black box into my code and trying to make it work without understanding it
[17:55:18] <Altreus> At least you're honest :D
[17:55:33] <ozzzo_work> I read your metacpan pages but I still don't get how it all works together
[17:55:54] <ozzzo_work> is there something else I can read to gain a better understanding?
[17:56:04] <LeoNerd> I'm not sure that my explaining how the car works will in any way help explain to you how to turn the steeringwheel to get where you want to go
[17:56:25] <ozzzo_work> I'm not turning the steering wheel. I'm under the hood trying to make it start
[17:56:31] <LeoNerd> Best advice would be to stop asking tiny snippets of partial questions and ask me the *WHOLE THING* in one go
[17:56:32] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 240 seconds)
[17:56:43] * GumbyPAN CPAN Upload: Log-Dispatch-Gelf-1.4.0 by JASEI https://metacpan.org/release/JASEI/Log-Dispatch-Gelf-1.4.0
[17:56:47] <LeoNerd> Do not be afraid of lots of lines. I can read hundreds of lines quickly if necessary
[17:57:34] <pragma-> LeoNerd is a robot, confirmed.
[17:58:22] <pragma-> (when necessary)
[17:58:26] <Botje> fuck, I give up.
[17:58:27] *** Joins: gast0n (~g4570n@user/gast0n)
[17:58:31] <Altreus> They finally got Perl to run on a LeoNerd!
[17:58:36] <Altreus> next, Doom
[17:58:44] <revhippie> Choose one: A Flower.  A well-formatted data file.  A puppy.
[17:59:08] <Altreus> Well I've done enough cryptic crosswords to know that you probably mean a river
[17:59:39] <simcop2387> didn't someone port doom to a covid test?
[17:59:56] <Botje> LeoNerd: I apologize for bringing up IO::Async::Resolver::DNS to ozzzo_work 
[18:00:05] <LeoNerd> I think that was @Foone running DOOM on the OLED display of a pregnancy test
[18:00:11] <alh> Yeah that
[18:00:12] <LeoNerd> It wasn't really running on the test itself, just using the display
[18:00:23] <huf> was it running on the fetus?
[18:00:28] <huf> cos that'd be impressive
[18:01:44] * GumbyPAN CPAN Upload: Date-5.2.11 by SYBER https://metacpan.org/release/SYBER/Date-5.2.11
[18:01:44] * GumbyPAN CPAN Upload: Exception-Backtrace-1.1.1 by SYBER https://metacpan.org/release/SYBER/Exception-Backtrace-1.1.1
[18:01:46] * GumbyPAN CPAN Upload: XS-librangeV3-1.11.0 by SYBER https://metacpan.org/release/SYBER/XS-librangeV3-1.11.0
[18:01:52] * GumbyPAN CPAN Upload: Config-MorePerl-1.2.3 by SYBER https://metacpan.org/release/SYBER/Config-MorePerl-1.2.3
[18:01:59] * GumbyPAN CPAN Upload: Protocol-WebSocket-Fast-1.2.5 by SYBER https://metacpan.org/release/SYBER/Protocol-WebSocket-Fast-1.2.5
[18:02:05] * GumbyPAN CPAN Upload: UniEvent-1.2.10 by SYBER https://metacpan.org/release/SYBER/UniEvent-1.2.10
[18:02:08] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[18:02:11] * GumbyPAN CPAN Upload: UniEvent-HTTP-1.2.0 by SYBER https://metacpan.org/release/SYBER/UniEvent-HTTP-1.2.0
[18:02:17] * GumbyPAN CPAN Upload: UniEvent-HTTP-Manager-1.1.2 by SYBER https://metacpan.org/release/SYBER/UniEvent-HTTP-Manager-1.1.2
[18:02:20] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[18:02:23] * GumbyPAN CPAN Upload: XLog-File-1.1.0 by SYBER https://metacpan.org/release/SYBER/XLog-File-1.1.0
[18:02:29] * GumbyPAN CPAN Upload: UniEvent-WebSocket-1.0.0 by SYBER https://metacpan.org/release/SYBER/UniEvent-WebSocket-1.0.0
[18:04:00] <ozzzo_work> LeoNerd: I guess my question is, once I start using IO::Async, does everything that I call need to be designed to run in parallel? I was thinking that I could use IO::Async to start processes and that those processes could run whatever they needed to, but I ran into trouble with sleep, and now with getaddrinfo. What determines whether something
[18:04:01] <ozzzo_work> that I call within IO::Async will block?
[18:04:35] <LeoNerd> Blocking functions block. Nonblocking ones don't
[18:04:40] <LeoNerd> I don't know how to explain this any clearer
[18:04:50] <Botje> try handpuppets?
[18:04:59] <Botje> although the underlying problem is a lack of understanding of DNS.
[18:05:00] <LeoNerd> If it's provided by IO::Async itself, or works entirely via something that integrates with it, and returns a Future or takes a callback then it's probably fine
[18:05:09] <LeoNerd> If it blocks and returns a result synchronously, then it isn't
[18:05:22] <Altreus> It is my understanding that you can, e.g., use different strategies to get code to run asynchronously
[18:05:42] <Altreus> Some of which may run in-process and some of which may spawn new processes...
[18:05:51] <ozzzo_work> In Go, I can call  pretty much anything in parallel and it seems to just work. I guess I was expecting IO::Async to work similarly.
[18:06:06] <LeoNerd> That's because Go does a lot of green-threading
[18:06:10] <LeoNerd> In Perl we don't because that's very messy
[18:06:20] <Botje> o no you said the T word =[
[18:06:44] <Altreus> taint?
[18:07:01] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[18:07:05] <simcop2387> LeoNerd: yea seems i was getting that confused with a covid test.  i do want doom on a covid test though, it sounds like a perfect match really
[18:07:30] <ozzzo_work> ok I think I get it now. I need to make sure that every function call that I use in any parallel process is part of the IO::Async ecosystem
[18:07:56] <simcop2387> ozzzo_work: easiest way is with Future::AsyncAwait, it helps a lot to handle the messy details
[18:08:00] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[18:08:52] <Altreus> So I've found that Raku's react/whenever and supply/emit are extremely good to work with, even though I find the actual base language a bit of a pest
[18:09:07] <Altreus> How likely is it that we could wire up IO::Async to implement these keywords?
[18:10:34] <ozzzo_work> I think I'll try replacing my getaddrinfo calls with $resolver->getaddrinfo and if that doesn't fix it then I'll read up on Future::AsyncAwait
[18:10:47] <LeoNerd> F:AA is a way to write your code neater, once it is correct
[18:10:51] <LeoNerd> It wno't help you make correct code initially
[18:10:52] <simcop2387> Altreus: haven't seen them before but it sounds more like POE to be honest
[18:11:25] <simcop2387> Altreus: it actually doesn't sound too hard to do off the top of my head when reading
[18:12:16] <Altreus> I don't recognise any parallels with POE, but that's because I like those keywords and POE makes no sense :)
[18:12:49] <simcop2387> Altreus: they should map decently to IO::Async::Routine and IO::Async::Channel from the looks of it.  for POE it looks a LOT like sessions and the functions in them to me
[18:12:51] <Altreus> simcop2387: yeah basically you use whenever to make a block that Runs When Something Happens, react to make it actually, well, wait ... and then supplies and promises to Make Things Happen
[18:13:13] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[18:13:19] <LeoNerd> I keep telling people: I'll make an IO::Async::$THING that is like a Supply as soon as we find a name that doesn't suck
[18:13:23] <LeoNerd> I really dislike "Supply"
[18:13:28] <Altreus> When I think of how they work I find myself thinking of a shell around a big void, into which you yell, and yet somehow it hears you on the other side
[18:13:39] <Altreus> LeoNerd: what objections do you have?
[18:13:55] <LeoNerd> IO::Async::KindaLikeAFutureButItCanResolveMultipleTimes   is a bit long and unwieldy
[18:14:02] <Altreus> The word invokes the functionality it exhibits, to me
[18:14:09] <Botje> LeoNerd: oh, a multifuture?
[18:14:18] <simcop2387> LeoNerd: agree on "supply" it sounds terrible
[18:14:54] <simcop2387> LeoNerd: IO::Async::CloseTimeLikeCurve?
[18:14:59] *** Quits: ekathva (~ekathva@2001:999:50:cab1:3235:c247:f7c8:bce3) (Quit: Leaving)
[18:15:07] <LeoNerd> Ia::TIMECUBE
[18:15:13] <Altreus> It all sounds like emotions to me ... any reason we don't like it?
[18:15:26] <LeoNerd> Ia::LargeFutureTheSizeOfASmallFuture
[18:15:35] <Altreus> It's called a supply because it returns different things
[18:15:58] <Altreus> I don't like the idea of it being a future that resolves multiple times
[18:16:15] <Altreus> That doesn't suit the functionality, in my mind
[18:16:38] <Altreus> It doesn't feel right - kind of like a function that would di a different thing with the same parameters
[18:16:55] <Altreus> If a future is created and is going to resolve twice, it should resolve the same every time, but a supply doesn't do that
[18:17:30] <simcop2387> LeoNerd: if you want another stupid name, Future::Paradox since it has multiple results
[18:17:41] <Altreus> The idea is more like a tap or a stream or something - a sequence of things coming out of ... well, a supply of them
[18:17:42] <LeoNerd> Perhaps call it a Source. And then the corresponding other side can be a Drain
[18:17:57] <Altreus> I'd call it a Pipe if we didn't already have Pipes
[18:17:57] <LeoNerd> And then the elctronics enthusiasts will insist on having a Gate between them to control the flow
[18:17:58] <simcop2387> LeoNerd: can you have a filter for it named a Gate?
[18:17:59] <Botje> Altreus: we have tons of functions that return different things given identical parameters.
[18:18:15] <Altreus> Botje: yeah but it doesn't return it multiple times if you only call it once
[18:18:15] <LeoNerd> ... and then the really hardcore folks will point out that sometimes you can swap the Source and the Drain and it'll still work the same
[18:18:22] <vague> LeoNerd, IO::Async::Bucket :)
[18:18:30] <simcop2387> LeoNerd: actually, Collector and Emitter might fit better in that paradigm
[18:18:42] <LeoNerd> vague: In all seriousness, Future::IO or somewhere does sometime want to gain a LeakyBucketFilter
[18:18:53] <Altreus> Those seem fine. Emitter/emit
[18:19:00] <LeoNerd> A queue that you push items into at whatever speed and they leak out the other end again in a predictable rate
[18:19:01] <Altreus> emitting emissions
[18:19:13] <LeoNerd> Actually that might be a case for Future::Workflow
[18:19:35] <simcop2387> as long as we can have a Future::QuantumTunneling that randomly moves things from one bucket to another with some probability
[18:19:41] <Altreus> Gate does fit the paradigm - supply whenever $some-supply -> $message { emit transform($message) }
[18:19:50] <LeoNerd> Future::StemBolt::SelfSealing
[18:20:09] <LeoNerd> (because I presume there are other kinds of stem bolts that aren't self-sealing)
[18:20:17] <Altreus> I guess they used supply because emit can only be used once
[18:20:28] <Altreus> And they chose it for creating the emission, not creating the emitter
[18:20:40] <Altreus> you could swap it :)
[18:20:57] <Altreus> emit { supply $message }
[18:21:00] <Altreus> or just send
[18:21:14] <simcop2387> Altreus: yea but we don't want perl to seem like it's promoting climate change with such strong emissions
[18:21:22] <Altreus> It's OK, they're carbon-neutral
[18:21:28] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:3c9b:6dce:e374:3130) (Read error: Connection reset by peer)
[18:21:46] <Altreus> I'd rather have emissions than omissions!
[18:21:54] <LeoNerd> Today's Malcolm-in-the-middling: Neovim want me to get rid of the VLA in libvterm, which means I need to allocate it at construction time, which means I need a constructor arg for the buffer size, which means I should update the whole thing into a Builder pattern, which means I should copy the same structure I used for libtickit, which means I should read the docs for that, which means I want to get App::sdview >>
[18:21:54] <LeoNerd> << to work with plain manpages, which means I need to update my Parse::nroff
[18:22:14] <LeoNerd> So -obviously- writing an nroff parser is required for nvim... duh!
[18:23:05] <Altreus> I feel like as soon as you said "should" and "want to" you stopped introducing dependencies :)
[18:23:16] *** Quits: japh (~scp1@user/japh) (Ping timeout: 245 seconds)
[18:23:23] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:23:33] <LeoNerd> Look if CPAN.pm can force installation of dependencies just because someone decided they like it and it might be a nice idea, so can I
[18:24:23] <Altreus> that thing we don't use? :)
[18:24:31] <simcop2387> Altreus: https://www.youtube.com/watch?v=AbSehcT19u0
[18:24:32] <Paperbot> YouTube video linked by simcop2387: Hal fixing a light bulb (from Malcolm in the Middle S03E06 - Health Scare) - published by Vincent Verschuren
[18:24:58] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[18:25:00] <LeoNerd> ^-- that is {Malcolm}itM'ing
[18:25:06] <LeoNerd> "the other MitM"
[18:25:17] *** Joins: japh (~scp1@user/japh)
[18:25:20] <Altreus> oh that thing
[18:25:29] <Altreus> that's the ADHD figurehead video
[18:26:21] <LeoNerd> http://home.leonerd.org.uk/local/screenie/sdview-man.png  -- huh. well that wasn't hard
[18:26:44] <LeoNerd> It's like a manpage except with *gasp* colour and formatting
[18:26:51] <LeoNerd> Colour and formatting having been invented since the 1980s, you see
[18:27:02] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:ed3c:cb5a:50ec:f83d)
[18:27:22] <LeoNerd> Which also reminds me I need to fix the way pangoterm renders runs of italic text.
[18:27:24] <LeoNerd> Bah so much to do
[18:27:31] <Altreus> Tell me again but on discord
[18:27:35] <pragma-> not going to lie, maybe i'm old school but i find it really jarring when my terminals output color. like gcc error messages and such.
[18:27:46] <Altreus> you're old school
[18:27:54] <LeoNerd> pragma-: I find it surprising the first time, but after Iv'e got used to it I find it *really* helpful
[18:28:00] <Altreus> I hate not having colour because I can't differentiate text just by what it says
[18:28:05] <LeoNerd> Youknow that bit where I said I can read lots very fast? That only works with colour
[18:28:11] <Altreus> I HATE that passive-aggressive comment in debian's default bashrc
[18:28:17] <simcop2387> LeoNerd: so much to see, what's wrong with taking the backstreets?
[18:28:27] <Altreus> Something about "the focus of a command should be on the output"
[18:28:32] <LeoNerd> I use the different colours to guide my eyes around the -structure- of the thing, because I can see different colours much faster than I can read the words that they write
[18:28:39] <Altreus> Yeah so colour the damn prompt in so I can find the output
[18:29:05] <LeoNerd> simcop2387: Damnyou you've made me pause my hacking music so I can try to remember what that song is
[18:29:05] <pragma-> well, when i'm expecting color -- like in syntax highlighting in my editors, i'm find -- but when a command-line text ui command outputs colors in the shell, that throws me off sometimes and i just sit there and stare at the colors instead of reading the error message or output :)
[18:29:10] <Altreus> also what commands are they running? Most of mine produce files and have no output
[18:29:20] <pragma-> er, i'm fine
[18:29:35] <Altreus> pragma-: ah, well, that's just your brain saying please stop for a while
[18:29:35] <simcop2387> LeoNerd: All Star https://www.youtube.com/watch?v=HLQ1cK9Edhc
[18:29:36] <Paperbot> YouTube video linked by simcop2387: Shrek - All star | Intro HD (1080p) - published by M0vie
[18:29:42] <Altreus> Do you ... go to bed every day? :D
[18:29:43] <LeoNerd> That's the badger!
[18:29:59] <Altreus> That's Smash Mouth by the way
[18:30:09] <LeoNerd> Mash South
[18:30:13] <Altreus> Some BODY
[18:30:14] <LeoNerd> ... wait I lost an M
[18:30:21] <LeoNerd> Mmash South. But the second 'm' is silent
[18:30:29] <Altreus> Kinda looks African
[18:30:49] <simcop2387> i've had this particular cover stuck in my head (along with some more of her songs) lately, https://www.youtube.com/watch?v=lxiEnIUvdF0
[18:30:50] <Paperbot> YouTube video linked by simcop2387: All Star but acoustic (from Shrek) 【covered by Anna】 - published by annapantsu
[18:31:47] * GumbyPAN welcomes KXRCL - Andrey V.Kosteltsev to CPAN!
[18:32:02] <simcop2387> kxrcl sounds like a ham callsign
[18:32:42] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[18:32:52] <Altreus> LeoNerd: so anyway, Emitter?
[18:33:05] <LeoNerd> Hrm...
[18:33:13] <LeoNerd> It's already used for a bunch of things that this isn't
[18:33:31] <Altreus> Repeater?
[18:33:54] <Altreus> Even if supply is a bad name it's still a good analogy
[18:34:01] <Altreus> I wouldn't want to drift too far away from it
[18:34:27] <Altreus> The most common use case is going to be to raise a sequence of values asynchronously
[18:34:31] <Altreus> Sequence?
[18:35:05] <Altreus> It's /almost/ the generator pattern (which could be asynchronously implemented with one of these...)
[18:35:27] <LeoNerd> So, a Supply/Source/etc.. is a homogenous source of one "thing"... Maybe it's emitting bytes from a socket, or void-signatured ticks of a ticker timer, or button presses on a UI, or.. whatever. But importantly every "thing" that it emits is the same.
[18:35:41] <Altreus> That's right - that's what supply does
[18:35:44] <LeoNerd> Whereas most folks (e.g. Mojo) have an "Emitter" role which basically says "this thing can have named events"
[18:36:06] <LeoNerd> A Mojo::Emitter emits multiple entirely different things, has an `$emitter->on( eventname => $code )` method, etc...
[18:36:27] <Altreus> That sounds undisciplined
[18:36:50] <LeoNerd> Yes but it also sounds like what everyone already does and how they're used to the name as it stands. So we can't reüse it
[18:37:13] <Altreus> So what does supply say that you don't like? :)
[18:37:37] <Altreus> Or source or sequence or stream ... well not stream
[18:38:26] <Altreus> QuantisedContiguousFlow
[18:40:24] *** Quits: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com) (Quit: Client closed)
[18:40:50] *** Quits: brunoramoslu (~brunoramo@94.252.122.148) (Ping timeout: 260 seconds)
[18:46:54] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:ed3c:cb5a:50ec:f83d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:50:09] *** Joins: mattil__ (~mattil@helsinki.portalify.com)
[18:53:06] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 250 seconds)
[18:54:28] *** Joins: brunoramoslu (~brunoramo@94.252.122.255)
[18:58:13] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[18:58:36] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[19:01:27] *** Manderson_ is now known as Manderson
[19:03:35] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[19:03:59] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[19:08:38] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[19:15:37] *** Joins: randir (~randir@2.92.196.208)
[19:30:33] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[19:35:17] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Ping timeout: 256 seconds)
[19:37:32] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[19:39:57] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[19:40:28] *** Joins: rgrinberg (~textual@187.223.115.137)
[19:41:53] * GumbyPAN CPAN Upload: Repo-RPM-0.01 by KXRCL https://metacpan.org/release/KXRCL/Repo-RPM-0.01
[19:42:54] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[19:43:25] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[19:44:29] *** Joins: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)
[19:44:51] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Read error: Connection reset by peer)
[19:45:34] *** Joins: mattil (~mattil@helsinki.portalify.com)
[19:46:10] *** Joins: epony (~epony@user/epony)
[19:46:13] *** Quits: mattil__ (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[19:49:26] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Ping timeout: 250 seconds)
[19:52:40] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 268 seconds)
[19:53:35] *** Joins: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[19:55:11] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[19:59:19] *** Joins: pingpongball (~pingpongb@43.228.192.121)
[20:00:27] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[20:01:52] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[20:02:20] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Read error: Connection reset by peer)
[20:03:01] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[20:06:41] <mjgardner> Back to blogging, back on lists: https://phoenixtrap.com/2022/02/10/perl-list-processing-is-for-hashes-too/
[20:06:44] <Paperbot> Link title(s): [ Perl list processing is for hashes, too—The Phoenix Trap ]
[20:08:09] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[20:09:25] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[20:10:11] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Remote host closed the connection)
[20:10:23] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[20:15:49] *** Joins: magla (~gelignite@55d43657.access.ecotel.net)
[20:21:55] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Remote host closed the connection)
[20:28:00] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Remote host closed the connection)
[20:28:32] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[20:31:09] *** Joins: ekathva (~ekathva@2001:999:50:cab1:d271:1874:582c:870e)
[20:31:37] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 256 seconds)
[20:31:54] *** Joins: anddam (~anddam@user/anddam)
[20:31:59] *** Parts: anddam (~anddam@user/anddam) (WeeChat 3.4)
[20:32:12] <Altreus> mjgardner: glad to see it
[20:32:32] <Altreus> mjgardner: I think I'd discourage using the term "associative array" in blog posts about Perl though
[20:32:45] *** Quits: rgrinberg (~textual@187.223.115.137) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:32:59] *** Quits: ekathva (~ekathva@2001:999:50:cab1:d271:1874:582c:870e) (Remote host closed the connection)
[20:33:11] <Altreus> In general I'm an advocate of just using the right terms, but I don't know of any language that uses the term "associative array" that lends any credence to the 
[20:33:17] <Altreus> programming discipline
[20:34:08] <buu> It is a weird term, on the face of it.
[20:34:28] *** Joins: wilk (~wilk@aceu142.neoplus.adsl.tpnet.pl)
[20:34:28] *** Quits: wilk (~wilk@aceu142.neoplus.adsl.tpnet.pl) (Changing host)
[20:34:28] *** Joins: wilk (~wilk@user/wilk)
[20:35:09] * SpiceMan searchs for the elusive transitive and commutative arrays
[20:36:37] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[20:36:59] * GumbyPAN CPAN Upload: CDS-0.27 by LOCHMATT https://metacpan.org/release/LOCHMATT/CDS-0.27
[20:39:18] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:ed3c:cb5a:50ec:f83d)
[20:43:13] *** Joins: KnoP (~KnoP@business-176-095-149-105.static.arcor-ip.net)
[20:49:38] *** Quits: pingpongball (~pingpongb@43.228.192.121) (Quit: Client closed)
[20:52:01] * GumbyPAN CPAN Upload: Test2-Aggregate-0.17 by DKECHAG https://metacpan.org/release/DKECHAG/Test2-Aggregate-0.17
[20:52:01] * GumbyPAN CPAN Upload: Test2-Harness-1.000107 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-1.000107
[20:56:37] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[20:58:38] *** Quits: art1 (~romeyke@p200300ccdf09e70058f144c396cec17a.dip0.t-ipconnect.de) (Quit: Leaving.)
[20:59:46] <sivoais> it's a fine term, just not common in Perl. Different contexts use different terms. Associative container, dictionary, map. Hash table would be a specific implementation detail.
[21:00:01] *** Joins: e1f (~user@141.117.1.134)
[21:05:43] <Altreus> [citation needed] on where it's used in perl
[21:05:58] <Altreus> They're called hashes at every level and in every situation I've come across
[21:06:28] <sivoais> > *not* common
[21:06:46] <sivoais> I know they aren't used in Perl. The term is used in broader CS.
[21:07:02] <mjgardner> Every language has their own term for it. Wikipedia redirects map, dictionary to associative array, and the first sentence defining it in the entry for hash table calls it an implementation of an associative array structure.
[21:07:03] * GumbyPAN CPAN Upload: HealthCheck-Diagnostic-SFTP-v1.4.1 by GSG https://metacpan.org/release/GSG/HealthCheck-Diagnostic-SFTP-v1.4.1
[21:07:07] <mjgardner> https://en.wikipedia.org/wiki/Associative_array?wprov=sfti1
[21:07:08] <Paperbot> Link title(s): [ Associative array - Wikipedia ]
[21:07:20] <mjgardner> https://en.wikipedia.org/wiki/Hash_table?wprov=sfti1
[21:07:20] <Paperbot> Link title(s): [ Hash table - Wikipedia ]
[21:08:15] <Altreus> Not common and never used are significantly different
[21:09:09] <Altreus> Personally I'd just use the language-relevant term and link to the definition
[21:09:38] <Altreus> I would note that we don't call it a hash /table/ either
[21:09:53] <Altreus> That is probably where it got its name, but it's not what we call it :)
[21:10:13] <mjgardner> I’m just trying to bring in the non-Perl programmers.
[21:10:39] <mjgardner> If you know already, you’re not the target audience.
[21:11:09] <sivoais> Sure, I'm hedging. I rarely use absolutes. Pointing out the language relevant term is useful for searchability / common understanding purposes though.
[21:11:17] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:ed3c:cb5a:50ec:f83d) (Ping timeout: 240 seconds)
[21:12:44] <Altreus> I mostly object to it here because it seems very awkward where it's been crowbarred in :D
[21:13:05] <Altreus> Plus, it's a post in a series that has probably covered the term already
[21:13:17] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[21:14:26] *** Joins: seekr (~seekr@130.44.169.77)
[21:15:25] <rewt> the way it's used in that blog post is fine; it's used as an explanatory note in case someone is not familiar with the term "hash" in this context
[21:16:35] <Altreus> as you like - just my opinion :)
[21:16:51] <Altreus> I just found it awkward in parens in a link
[21:17:04] * GumbyPAN CPAN Upload: Language-Prolog-Yaswi-0.22_01 by ZMUGHAL https://metacpan.org/release/ZMUGHAL/Language-Prolog-Yaswi-0.22_01
[21:17:57] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:23:23] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[21:25:14] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[21:26:50] *** Joins: martinus__ (~martin@151.58.202.77.rev.sfr.net)
[21:31:34] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[21:32:29] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[21:32:42] <leont> They don't have a standardized name because computer scientists only case about the implementations, not about the general use case.
[21:34:36] <simcop2387> and this too
[21:34:38] <simcop2387> perlbot: hard problems
[21:34:38] <perlbot> simcop2387: there's only two hard things in computer science: naming things, cache invalidation, and off by one errors
[21:44:48] <Altreus> We've alreadh had naming things today!
[21:45:21] <Altreus> IO::Async isn't getting a supply because of it!
[21:45:55] <simcop2387> Altreus: sorry my cache wasn't in the right state
[21:46:13] <Altreus> We've already had naming things today!
[21:48:26] *** Joins: rgrinberg (~textual@187.223.115.137)
[21:50:14] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:54:14] <ilmari> rust calls them streams, but IO::Async::Stream is already taken
[21:54:37] <Altreus> And stream doesn't quite fit the paradiggum
[21:54:40] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[21:55:01] <Altreus> I guess I dunno why I'm weighing in because I think the word supply perfectly fits the paradigm :P
[21:55:14] <ilmari> effectively you have a next() method that you call repeated, and it returns a future of the next item in the stream
[21:55:48] <ilmari> rather, it returns an option of a future of the item, and none when the stream is exhausted
[21:57:36] <LeoNerd> ilmari: Yah; bad naming. IaStream should have been called ByteStream or somesuch
[21:57:49] <LeoNerd> Then a true "stream" of abstract "things" could sit beneath
[21:58:30] <Altreus> I guess it could be a Well
[21:59:02] <Altreus> All the other words I can think of are just things that supply stuff :P
[22:01:02] *** Quits: proller (~p@93.158.190.219) (Ping timeout: 240 seconds)
[22:01:16] <ilmari> I think Supply is fine given that Stream is already taken
[22:05:32] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[22:10:27] *** Quits: haj (~haj@95.91.235.152) (Ping timeout: 250 seconds)
[22:16:29] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[22:18:11] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[22:21:37] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 240 seconds)
[22:21:58] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Ping timeout: 250 seconds)
[22:23:24] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[22:25:41] *** Joins: mattil (~mattil@84-253-228-192.bb.dnainternet.fi)
[22:26:25] *** Quits: mattil (~mattil@84-253-228-192.bb.dnainternet.fi) (Remote host closed the connection)
[22:26:51] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[22:27:35] *** Joins: mattil__ (~mattil@helsinki.portalify.com)
[22:28:34] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 260 seconds)
[22:28:56] *** Joins: haj (~haj@ip5f5beb98.dynamic.kabel-deutschland.de)
[22:32:17] *** Joins: semeion (~semeion@user/semeion)
[22:36:15] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[22:40:40] *** Joins: monkey_ (~user@190.104.116.153)
[22:42:05] *** choroba is now known as choroba_
[22:42:26] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[22:42:44] *** Quits: choroba_ (~E.Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[22:51:35] *** Quits: mattil__ (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[22:51:37] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Read error: Connection reset by peer)
[22:57:59] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[22:59:37] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[23:07:15] * GumbyPAN CPAN Upload: Parse-Man-0.03 by PEVANS https://metacpan.org/release/PEVANS/Parse-Man-0.03
[23:08:47] <LeoNerd> ^-- I have reached the peak today
[23:09:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:09:28] <buu> Don't parse me, man!
[23:09:48] *** Joins: k8yun (~k8yun@user/k8yun)
[23:11:08] * Botje lexes buu instead
[23:12:14] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 250 seconds)
[23:12:16] *** Joins: Spiney_ (~Spiney@2604:a880:400:d0::1d82:b001)
[23:13:32] *** Joins: proller (~p@80.240.216.69)
[23:15:29] <buu> Well, that's ok
[23:15:29] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:15:32] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 240 seconds)
[23:15:57] <pragma-> Why are there so many options to create a cpan distribution? Which one do I want to use? h2xs? Dist::Zilla? Minilla? Module::Starter? App::ModuleBuildTiny? Module::Build?
[23:16:46] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[23:17:10] <Botje> there are many options because TIMTOWTDI.
[23:17:23] <Botje> perlbot: module
[23:17:24] <perlbot> Botje: a perl module is a bundle of code that's tarred up and distribute so that critters like you and I can re-use chunks of functionality without having to poorly re-write existing software. these live on cpan! at metacpan.org or search.mcpan.org.
[23:17:27] <Botje> derp
[23:17:56] <pragma-> Sometimes having too many choices is the same as having no choices at all when you're overwhelmed by too many options to even make a decision!
[23:19:03] <pragma-> I'm concerned about investing in learning how to use a particular tool only to discover that another tool does things better.
[23:19:57] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[23:20:27] *** Quits: Spiney_ (~Spiney@2604:a880:400:d0::1d82:b001) (Ping timeout: 250 seconds)
[23:20:40] <pragma-> Which one is the defacto industry standard tool for creating and uploading cpan distributions? Dist::Zilla?
[23:20:55] * pragma- squints at "minting profile"
[23:21:17] <alh> There is no defacto it's all down to your preference
[23:21:31] <pragma-> Dist::Zilla seems like it wants me to configure a whole bunch of things before I can start using it. 
[23:23:56] *** Joins: bscan (~bscan@2600:380:584f:72cb:85ac:f797:d2ab:c18f)
[23:25:24] <buu> which one supports nfts
[23:25:47] <Botje> first read that as ntfs which makes just as little sense
[23:27:52] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[23:28:54] <leont> Yeah, what alh said
[23:29:10] <pragma-> Okay, which one is easy and reliable? :)
[23:29:25] <leont> I wrote App::ModuleBuildTiny because I wanted a tool with a low entry bar
[23:29:46] <leont> It does very little, but it does those things correctly
[23:29:59] <choroba> I like Module::Starter
[23:31:10] <leont> Module::Starter still means you're authoring with MakeMaker, which kind of takes an expert to do well
[23:31:56] *** Quits: rgrinberg (~textual@187.223.115.137) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:31:57] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[23:32:32] <xenu> pragma-: this is supposed to make using dzil easier: https://metacpan.org/pod/Dist::Zilla::Starter
[23:32:32] <Paperbot> Link title(s): [ Dist::Zilla::Starter - Guide to getting started with Dist::Zilla - metacpan.org ]
[23:33:22] <xenu> i meant to link https://metacpan.org/pod/Dist::Zilla::PluginBundle::Starter, but the tutorial is probably even better
[23:33:23] <Paperbot> Link title(s): [ Dist::Zilla::PluginBundle::Starter - A minimal Dist::Zilla plugin bundle - metacpan.org ]
[23:33:32] *** Joins: proller (~p@2a02:6b8:b081:8813::1:1)
[23:33:51] <choroba> There's also https://tynovsky.github.io/cpan-tutorials/
[23:33:52] <Paperbot> Link title(s): [ CPAN Tutorials ]
[23:34:54] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:f1e5:db7b:1d69:5e00)
[23:41:16] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:f1e5:db7b:1d69:5e00) (Ping timeout: 250 seconds)
[23:44:11] *** vrurg_ is now known as vrurg
[23:48:03] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:f1e5:db7b:1d69:5e00)
[23:48:44] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:f1e5:db7b:1d69:5e00) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:49:29] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[23:53:09] *** Quits: proller (~p@2a02:6b8:b081:8813::1:1) (Ping timeout: 250 seconds)
[23:56:56] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
