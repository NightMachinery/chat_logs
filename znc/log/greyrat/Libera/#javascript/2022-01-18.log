[00:00:06] *** Quits: niko (~niko@libera/staff/niko) (Ping timeout: 633 seconds)
[00:00:17] *** Joins: nomad1 (~nomad@user/spacenomad)
[00:00:27] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[00:00:41] *** Parts: visicalc[m] (~visicalct@2001:470:69fc:105::1:6bba) ()
[00:01:32] <dpuerto> Hi, I have a problem. I am leaping into the back end. I setup my digitalocean and I have a node server running. I can curl my routes fine, but when I try to hit it with postman it says "bad gateway 502" -- any thoughts?
[00:07:35] *** Joins: wildo (~lain6141@119.224.72.222)
[00:07:38] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 250 seconds)
[00:08:58] *** Quits: trafficjam (~qubes@2001:8004:2748:32f4:6ffc:9ddb:e1d7:a07d) (Read error: Connection reset by peer)
[00:10:18] *** Joins: trevors (~trevors@user/trevors)
[00:10:32] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[00:12:18] *** Joins: duuude (~user@user/duuude)
[00:12:40] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[00:18:06] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:18:30] <ThePendulum> your node process isn't showing any errors?
[00:18:59] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[00:19:03] *** Joins: summersault (~summersau@179.221.251.36)
[00:20:14] *** Quits: Zauberfisch (~Zauberfis@cm147-42.liwest.at) (Quit: Zauberfisch)
[00:20:51] *** Joins: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com)
[00:20:54] *** Joins: Zauberfisch (~Zauberfis@cm147-42.liwest.at)
[00:23:12] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:26:46] *** Joins: gehn (~gehn@user/gehn)
[00:27:28] *** Quits: duuude (~user@user/duuude) (Remote host closed the connection)
[00:28:02] *** Joins: duuude (~user@user/duuude)
[00:28:31] *** Joins: Betal (~Betal@user/betal)
[00:35:39] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[00:35:56] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Read error: Connection reset by peer)
[00:35:58] <mknod> I date to format a date object to a string that Google Sheets will recognize as a date. Namely: dd/mm/yyyy HH:MM:SS or similar depending on the locale.
[00:36:30] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3ccc:5d8e:3741:8da)
[00:36:46] <mknod> I found Intl.DateTimeFormat but it doesn't give me enough control over the format, especially that damn comma in the middle of the date string that ruins it all.
[00:37:13] <mknod> I'm currently using: foo.toLocaleDateString(someLocale, { timeZone: someTimeZone }) + ' ' + foo.toLocaleTimeString(someLocale, { timeZone: someTimeZone })
[00:37:27] *** Quits: \mSg (mSg@user/msg/x-0285936) ()
[00:37:39] <mknod> But this is a huge piece of code for such a simple requirement. I'm hoping there is a simpler alternative right?
[00:39:35] <mknod> Second problem: the method that returns the locale gives me "lang_COUNTRY" and not "lang-COUNTRY", so I have to manually replace the underscore with an hyphen:
[00:39:55] <mknod> var someTimeZone = someSpreadsheet.getSpreadsheetTimeZone();
[00:40:12] <mknod> Sorry, wrong copy/paste, I meant:
[00:40:18] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[00:40:42] <mknod> var someLocale = someSpreadsheet.getSpreadsheetLocale().replace('_', '-');
[00:40:49] <Slade> react/nextjs.. i'm manually rolling view state management on every page..  state = "loading" | "invalid" | "ok" | "submitting"  etc..  with an if in the render...  is there a good way to wrap this?
[00:41:09] *** Joins: offsounder (~offsounde@cpe-172-88-21-86.socal.res.rr.com)
[00:41:31] <mknod> Again, this doesn't seem very elegant, and would have expected the method to accept both "en_US" and "en-US".
[00:41:49] <mknod> Is there anything I can improve here?
[00:42:31] *** Joins: summersault (~summersau@179.221.251.36)
[00:43:55] <gehn> mknod, it's not "such a simple requirement" as you claim
[00:44:05] <gehn> timezones and internationalization are not particularly simple
[00:44:28] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[00:45:13] <gehn> but anyway, if you want to make the code shorter, write some wrapper functions for yourself
[00:46:01] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:46:30] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:46:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:47:11] <mknod> gehn, so, there is no better way than being redundant to get my formatted date, and hacking my locale string to make toLocaleTimeString() happy?
[00:49:15] <mknod> I mean, I'm fine with a wrapper function as long as it doesn't hide shitcode.
[00:49:40] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 250 seconds)
[00:51:23] <gehn> mknod, I would recommend just using https://date-fns.org/
[00:52:05] *** Joins: summersault (~summersau@179.221.251.36)
[00:52:19] *** Joins: xsperry (~xs@user/xsperry)
[00:52:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:52:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:52:40] *** Joins: wroathe (~wroathe@user/wroathe)
[00:53:26] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[00:54:09] *** Quits: offsounder (~offsounde@cpe-172-88-21-86.socal.res.rr.com) (Remote host closed the connection)
[00:55:01] *** Quits: teut (~teut@2401:4900:1c68:6b85:81e5:34bc:8adc:b633) (Quit: Client closed)
[00:55:49] *** Quits: shadow_ (~shadow@lnsm3-montreal02-142-119-4-156.internet.virginmobile.ca) (Quit: shadow_)
[00:56:16] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[00:57:34] <mknod> gehn, I would certainly consider it if that wasn't for a Google Apps Script.
[00:57:40] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[00:57:41] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:58:06] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[00:59:23] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[01:00:07] *** Joins: zebrag (~chris@user/zebrag)
[01:03:02] *** Quits: xsperry (~xs@user/xsperry) (Read error: Connection reset by peer)
[01:03:55] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[01:06:32] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[01:08:41] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:09:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:10:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[01:12:08] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:4c25:9571:1c35:3e29) (Quit: Leaving...)
[01:12:30] *** Joins: summersault (~summersau@179.221.251.36)
[01:15:31] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[01:16:29] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:17:40] *** Joins: user (~user@user/duuude)
[01:17:57] *** Quits: user (~user@user/duuude) (Client Quit)
[01:18:05] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[01:21:02] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[01:21:45] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[01:25:06] *** Quits: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com) (Remote host closed the connection)
[01:26:51] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[01:27:01] *** Joins: summersault (~summersau@179.221.251.36)
[01:29:10] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[01:32:47] *** Joins: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net)
[01:33:26] *** Quits: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8) (Quit: harpia)
[01:34:03] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:34:20] <Slade> n> Date.now()
[01:34:21] <jellobot> (okay) 1642457061036
[01:34:36] *** Joins: nelubit (~nelubit@user/nelubit)
[01:36:54] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[01:39:23] *** Joins: xsperry (~xs@user/xsperry)
[01:42:30] *** Quits: nomic (~nomic@185.217.117.104) (Quit: Leaving)
[01:47:44] *** Quits: pmercado (~pmercado@186.107.48.199) (Ping timeout: 250 seconds)
[01:48:05] *** Joins: jazzy (~jaziz@user/jaziz)
[01:49:04] *** Joins: trafficjam (~qubes@2001:8004:2748:32f4:bdbb:ff13:dab0:2b1f)
[01:52:25] *** Joins: summersault (~summersau@179.221.251.36)
[01:54:21] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[01:54:28] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[01:54:30] <bobdobbs> Do you guys do anything to scaffold projects? A few years ago I experimented with Yeoman. But I don't know if anyone uses that anymore. I haven't heard it talked about.
[01:55:17] <bobdobbs> I'm thinking of very simple scaffolding: bascially popping up a simple directory structure and a templated package.json
[01:55:32] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[01:56:23] *** Quits: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Remote host closed the connection)
[01:56:34] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[01:56:47] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:56:50] *** Joins: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[01:57:58] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:59:04] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[02:02:24] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[02:02:37] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[02:02:51] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[02:03:36] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:04:26] *** Joins: trevors (~trevors@user/trevors)
[02:04:45] *** Joins: pluri (~pluri@user/pluri)
[02:04:54] *** Quits: sakhd__ (~lehinsun@188.113.178.220) (Quit: Leaving)
[02:07:30] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[02:07:55] *** Joins: jazzy (~jaziz@user/jaziz)
[02:09:38] *** Joins: quazimodo (~quazimodo@n1-40-220-128.bla1.nsw.optusnet.com.au)
[02:14:39] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:16:06] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:16:06] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:16:06] *** Joins: wroathe (~wroathe@user/wroathe)
[02:16:18] <oscurochu> I'm trying to figure out how to use passport and I feel like by the time i understand how to use this i could have created my own api that does what i need it to
[02:16:50] <bobdobbs> oscurochu: what is passport?
[02:17:20] <bobdobbs> oh, nvm. I googled
[02:17:21] <oscurochu> "Passport is authentication middleware for Node. It is designed to serve a singular purpose: authenticate requests. "
[02:17:31] <systemfault> bobdobbs: I don't believe Yeoman is popular these days... people use CRA and to be honest, it's not that great
[02:17:58] <bobdobbs> morning systemfault
[02:18:04] <systemfault> o/
[02:19:51] <ljharb> yeoman's never really been popular.
[02:20:02] <oscurochu> i wrote an API that authenticates the user, the only thing i dont have is actual session management. i just got done spending a half a day working on getting passport to handle my sessions, modifying my own api to dance around passport's api. and its still not keeping a session. im probably doing something wrong
[02:20:03] <ljharb> but yeoman's how you do it
[02:20:16] <ljharb> bobdobbs: i typically just manually scaffold everything; there's not that many steps
[02:20:21] <ljharb> you can use github template repos too tho
[02:20:22] *** Joins: panella32 (~panella32@185.108.105.203)
[02:20:37] <bobdobbs> ljharb: yeah. I might just write a bash script or something.
[02:21:19] <systemfault> ah, _your_own_ scaffolding, I see
[02:21:23] <hax> oscurochu, https://github.com/jwalton/passport-api-docs
[02:21:53] <oscurochu> i dont think i've seen this yet
[02:21:59] <hax> I found passport's docs to be severely lacking too, but this doc helped.
[02:22:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:22:41] <oscurochu> thanks
[02:23:12] <hax> oscurochu, the thing for me was understanding what serialize and deserialize is supposed to be, and that you need some kind of server (file, memory, redis) to keep the sessions
[02:23:21] *** Joins: bobdobbs` (~user@2406:5a00:4434:4c00:e460:a657:59be:6f79)
[02:24:46] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:25:00] *** Quits: bobdobbs (~user@116.251.149.196) (Ping timeout: 250 seconds)
[02:28:02] <Alexendoo> Github template repos give anything created from it that "generated from blah/blah" tagline
[02:28:13] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:28:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3ccc:5d8e:3741:8da) (Ping timeout: 240 seconds)
[02:29:57] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 240 seconds)
[02:30:03] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:28] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:30] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[02:31:46] <ljharb> Alexendoo: which is nice
[02:32:30] <Alexendoo> It would be fine if you could remove it
[02:33:42] *** Quits: pizdets (~pizdets@183.182.110.188) (Ping timeout: 250 seconds)
[02:33:45] *** Joins: pizdets_ (~pizdets@183.182.114.123)
[02:35:52] *** Joins: EdFletcher (~PKD@user/edfletcher)
[02:36:17] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 256 seconds)
[02:37:15] *** Quits: panella32 (~panella32@185.108.105.203) (Ping timeout: 256 seconds)
[02:37:39] <ljharb> Alexendoo: why would you want to, it's good to have it
[02:37:57] <ljharb> Alexendoo: anyways you can by deleting and recreating the repo as your first step, if there's some reason that's important
[02:39:50] <Alexendoo> ljharb: The template you generated a project from is maybe useful information for very new repositories, or very focused ones
[02:40:43] *** Joins: ferdna (~ferdna@user/ferdna)
[02:40:46] *** Quits: trafficjam (~qubes@2001:8004:2748:32f4:bdbb:ff13:dab0:2b1f) (Read error: Connection reset by peer)
[02:41:00] <Alexendoo> But the older it gets the more irrelevant it becomes
[02:41:35] <oscurochu> hax passport gives me a token but then when i try to get the session later, it cant find the session
[02:43:09] <ljharb> Alexendoo: it's useful to everyone who comes across the project, because either they can use it to make their own, or, they'll be able to see why it's not useful
[02:43:57] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[02:45:08] *** Joins: bambanxx (~bambanx@2800:150:106:1061:f117:f671:b932:2ce4)
[02:46:34] *** Joins: trafficjam (~qubes@2001:8004:2748:32f4:bdbb:ff13:dab0:2b1f)
[02:47:03] <Alexendoo> You can get rid of it by deleting the template repository, so I'd say that's good enough
[02:47:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:50:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[02:50:59] *** Quits: trafficjam (~qubes@2001:8004:2748:32f4:bdbb:ff13:dab0:2b1f) (Read error: Connection reset by peer)
[02:51:17] <oscurochu> im using req.login, like the docs say. i am using postman. do i need to send something to the server?
[02:51:23] *** Joins: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8)
[02:52:26] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[02:53:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[02:54:10] *** Quits: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8) (Client Quit)
[02:56:57] *** Quits: bobdobbs` (~user@2406:5a00:4434:4c00:e460:a657:59be:6f79) (Ping timeout: 240 seconds)
[02:57:10] <oscurochu> req.session returns a cookie
[02:58:45] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:58:45] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:58:45] *** Joins: wroathe (~wroathe@user/wroathe)
[02:59:03] *** Joins: nomic (~nomic@185.217.117.104)
[02:59:11] <hax> oscurochu, what session store are you using
[02:59:51] <hax> oscurochu, oh for the cookie, save it to the cookie jar and tell postman to send it with each request
[03:00:04] *** Joins: trafficjam (~qubes@1.145.227.213)
[03:00:27] <oscurochu> i dont have any rows in my sessions table
[03:01:43] <oscurochu> im using connect-pg-simple
[03:01:49] <oscurochu> for the store
[03:03:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[03:03:08] <hax> and set it up to app.use() before you app.use passport.initialize or passport.session?
[03:03:29] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[03:03:56] *** Quits: nomic (~nomic@185.217.117.104) (Client Quit)
[03:04:10] *** Joins: summersault (~summersau@179.221.251.36)
[03:04:50] <oscurochu> yes
[03:05:23] <hax> table is called 'session'?
[03:06:17] <hax> meaning you followed their instructions? hmm...and no errors on the server side? what do you have for serializeUser and deserializeUser?
[03:07:20] <oscurochu> i dont see any errors. i set session table to be "sessions"
[03:07:53] <remote> k
[03:08:06] <hax> I see. that's not the table the instructions suggest:  https://github.com/voxpelli/node-connect-pg-simple
[03:10:22] <oscurochu> tableName : 'user_sessions'   // Use another table-name than the default "session" one
[03:10:26] <oscurochu> thats what their docs say
[03:11:41] <oscurochu> im going to drop the table and create it again
[03:12:08] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:12:17] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[03:12:32] <oscurochu> and just for the heck of it, use the default table name
[03:13:15] <oscurochu> well now im getting an error "permission denied for relation session" lol thats an easy fix, but at least we know its trying to connect to the store
[03:15:17] <oscurochu> still rows though
[03:15:22] *** Joins: summersault (~summersau@179.221.251.36)
[03:15:27] <oscurochu> still no rows*
[03:17:14] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:18:01] *** Joins: summersault (~summersau@179.221.251.36)
[03:18:18] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:23:53] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[03:24:15] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:25:57] <oscurochu> i didnt use serialize or deserialize because i dont understand how it works
[03:26:02] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 240 seconds)
[03:27:10] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[03:28:24] <oscurochu> ok i got it to save in the session table
[03:30:40] <oscurochu> i set this { resave: false, saveUninitialized: false. }
[03:30:51] <oscurochu> althought the docs say to set it to false
[03:31:00] *** Quits: bambanxx (~bambanx@2800:150:106:1061:f117:f671:b932:2ce4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:34:51] *** Joins: trevors (~trevors@user/trevors)
[03:36:27] *** Joins: nomic (~nomic@185.217.117.104)
[03:37:14] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[03:38:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[03:39:27] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:41:21] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:42:35] *** Quits: quazimodo (~quazimodo@n1-40-220-128.bla1.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[03:45:05] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:46:36] *** Joins: summersault (~summersau@179.221.251.36)
[03:53:32] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 240 seconds)
[03:54:55] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (Quit: My Ex-Girlfriend once told me: I'm not a slut, I'm just popular)
[03:55:31] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[03:56:22] *** Quits: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Remote host closed the connection)
[03:56:52] *** Joins: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[03:58:18] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[03:59:46] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[04:02:46] *** Joins: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net)
[04:04:00] *** Joins: jazzy (~jaziz@user/jaziz)
[04:04:37] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[04:05:02] *** Quits: xse (~xse@user/xse) (Ping timeout: 240 seconds)
[04:05:23] *** Joins: pez (~pez@user/pez)
[04:05:23] *** Joins: pagios- (~pagios@life.is-a.beauty)
[04:05:23] <sickdyd> does it have any sense to have defaultProps and adding a default prop in the params of a component? for example `export default function Layout({ LayoutContainer = Container ...`?
[04:05:24] *** Joins: les_ (~whome@user/les)
[04:05:26] *** Joins: hy (~hbjy@rockylinux/web/hbjy)
[04:05:32] *** Quits: pagios (~pagios@life.is-a.beauty) (Ping timeout: 268 seconds)
[04:05:32] *** Quits: les (znc@user/les) (Ping timeout: 268 seconds)
[04:06:00] *** Joins: lf94- (~lf94@user/lf94)
[04:06:11] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: kadoban (~kadoban@user/kadoban) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: trms[m] (~trmsmatri@2001:470:69fc:105::1:28d2) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: nemesit|znc (~nemesit@2a01:488:66:1000:2ea3:4eeb:0:1) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: pez_ (~pez@user/pez) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: Kirjava (~cake@user/kirjava) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: lf94 (~lf94@user/lf94) (Ping timeout: 268 seconds)
[04:06:46] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Ping timeout: 268 seconds)
[04:06:46] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 268 seconds)
[04:06:46] *** Quits: hbjy (~hbjy@rockylinux/web/hbjy) (Ping timeout: 268 seconds)
[04:06:47] *** Quits: Sol3 (~Sol3@user/sol3) (Ping timeout: 268 seconds)
[04:07:21] *** Joins: Sol3 (~Sol3@2a01:4f8:c0c:45ca::2)
[04:07:21] *** Quits: Sol3 (~Sol3@2a01:4f8:c0c:45ca::2) (Changing host)
[04:07:21] *** Joins: Sol3 (~Sol3@user/sol3)
[04:07:29] <oscurochu> sickdyd I'm not sure if this has the answer you are looking for https://reactjs.org/docs/typechecking-with-proptypes.html
[04:07:56] *** Joins: Kirjava (~cake@2a01:4f9:c010:6fe9::2)
[04:07:57] <oscurochu> it looks like it might "You can define default values for your props by assigning to the special defaultProps property:"
[04:08:04] *** Quits: Kirjava (~cake@2a01:4f9:c010:6fe9::2) (Changing host)
[04:08:04] *** Joins: Kirjava (~cake@user/kirjava)
[04:08:04] *** Joins: nemesit (~nemesit@myriadvisuals.com)
[04:10:31] *** pikapika_lunar is now known as pikapika
[04:11:08] *** Joins: xse (~xse@user/xse)
[04:12:50] <oscurochu> so it looks like passport.serializeUser has the session info when i login, but i cant seem to get the info after the login. im not sure what info to send with postman and the cookie
[04:15:07] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[04:16:19] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[04:18:39] *** Joins: kadoban (~kadoban@user/kadoban)
[04:21:18] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[04:22:37] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:22:53] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:22:53] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:22:53] *** Joins: wroathe (~wroathe@user/wroathe)
[04:24:11] *** Joins: trms[m] (~trmsmatri@2001:470:69fc:105::1:28d2)
[04:25:14] *** Joins: EdFletcher (~PKD@user/edfletcher)
[04:25:23] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[04:26:02] *** Quits: xse (~xse@user/xse) (Ping timeout: 240 seconds)
[04:28:32] *** Joins: quazimodo (~quazimodo@n1-40-220-128.bla1.nsw.optusnet.com.au)
[04:30:45] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[04:31:51] *** Joins: xse (~xse@user/xse)
[04:33:42] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:34:15] *** Joins: pulse (~pulse@user/pulse)
[04:34:18] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[04:34:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[04:35:31] *** Joins: bambanxx (~bambanx@2800:150:106:1061:1141:bf00:f430:a7e)
[04:36:17] *** Quits: bambanxx (~bambanx@2800:150:106:1061:1141:bf00:f430:a7e) (Client Quit)
[04:37:17] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[04:37:46] *** Joins: jazzy (~jaziz@user/jaziz)
[04:38:31] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[04:41:26] *** Joins: pavonia (~user@user/siracusa)
[04:41:37] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[04:42:00] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:42:02] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:45:04] *** Quits: ThePendulum (~znc@37.139.2.240) (Remote host closed the connection)
[04:45:22] *** Joins: ThePendulum (~znc@2a03:b0c0:0:1010::1a8:1)
[04:45:33] *** Quits: wroathe (~wroathe@user/wroathe) (Read error: Connection reset by peer)
[04:45:37] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (Ping timeout: 268 seconds)
[04:46:02] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[04:46:44] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (Remote host closed the connection)
[04:47:01] *** Quits: justJustache (~justache@user/justache) (Remote host closed the connection)
[04:47:43] *** Joins: justJustache (~justache@user/justache)
[04:48:07] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[04:48:36] *** Joins: pizzaiolo (~pizzaiolo@user/pizzaiolo)
[04:49:01] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:50:46] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:50:46] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:50:46] *** Joins: wroathe (~wroathe@user/wroathe)
[04:54:15] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[04:54:45] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:e9a6:1557:3796:678c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:58:56] *** Quits: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Quit: The Lounge - https://thelounge.chat)
[05:01:40] <sickdyd> oscurochu: thanks for the link
[05:02:05] <sickdyd> it doesn't solve my issue though
[05:04:26] *** Joins: bobdobbs (~user@2406:5a00:4434:4c00:8d1f:bd69:f222:9fdf)
[05:05:38] *** Joins: jazzy (~jaziz@user/jaziz)
[05:07:00] <oscurochu> whats the issue? you are just trying to set a default prop?
[05:08:53] <oscurochu> axios and fetch both fail with "Request failed with status code 422". but it won't give me the response body
[05:09:01] *** Quits: mikeputnam2 (~mikeputna@wilug/mikeputnam) (Ping timeout: 240 seconds)
[05:09:40] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[05:10:42] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[05:10:57] <oscurochu> nv
[05:10:59] <oscurochu> nvm
[05:12:46] *** Joins: Rockwood (~Rocky@user/rocky)
[05:13:57] *** Joins: jazzy2 (~jaziz@user/jaziz)
[05:16:02] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[05:16:10] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[05:19:17] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[05:20:13] *** Quits: haniaF_ (~haniaF@79.191.101.105.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[05:20:17] *** Joins: pmercado (~pmercado@186.107.48.199)
[05:20:37] *** Joins: xsperry (~xs@user/xsperry)
[05:21:07] *** Joins: haniaF (~haniaF@83.24.207.85.ipv4.supernova.orange.pl)
[05:30:15] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:34:22] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 250 seconds)
[05:47:10] *** Joins: shokohsc4 (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[05:48:13] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-431-13.w86-246.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[05:48:13] *** shokohsc4 is now known as shokohsc
[05:49:37] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[05:53:19] *** Joins: summersault (~summersau@179.221.251.36)
[05:56:32] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 240 seconds)
[05:57:46] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[05:58:19] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:00:37] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[06:00:51] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[06:02:25] *** Joins: summersault (~summersau@179.221.251.36)
[06:03:21] *** Joins: bobdobbs` (~user@116.251.149.196)
[06:05:02] *** Quits: bobdobbs (~user@2406:5a00:4434:4c00:8d1f:bd69:f222:9fdf) (Ping timeout: 240 seconds)
[06:10:56] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:16:29] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[06:17:34] <ljharb> bobdobbs`: you’re not authed
[06:18:05] *** Parts: bobdobbs` (~user@116.251.149.196) ()
[06:18:42] *** Joins: bobdobbs (~user@116.251.149.196)
[06:18:51] <bobdobbs> ljharb: oh hai
[06:19:05] <bobdobbs> that's better
[06:19:58] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[06:21:02] <bobdobbs> I'm going through the official React tutorial. It provides this code: https://codepen.io/gaearon/pen/oWWQNa?editors=0010
[06:21:17] <bobdobbs> On line 12 a function gets called. But it isn't defined anywhere.
[06:21:25] <bobdobbs> Why does that work?
[06:21:32] <merced> did you define that function
[06:21:55] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[06:22:20] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[06:22:24] <bobdobbs> merced: the function isn't defined in the example code. And when I tested the code in my local test environment no error was raised
[06:23:00] *** Joins: Rockwood (~Rocky@user/rocky)
[06:23:15] <merced> weird
[06:23:23] <merced> should try a real javascript framework then
[06:23:24] <KevinX> That's how you define class methods in JS
[06:23:53] *** Joins: Rockwood_ (~Rocky@user/rocky)
[06:25:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[06:25:58] *** Joins: panella32 (~panella32@216.131.105.215)
[06:26:53] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:27:32] *** Quits: bobdobbs (~user@116.251.149.196) (Ping timeout: 240 seconds)
[06:27:59] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 268 seconds)
[06:29:35] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[06:31:28] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[06:32:11] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:34:42] *** Joins: trevors (~trevors@user/trevors)
[06:37:04] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[06:37:28] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[06:38:12] *** Joins: summersault (~summersau@179.221.251.36)
[06:38:16] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:39:40] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[06:39:53] *** Joins: summersault (~summersau@179.221.251.36)
[06:40:32] *** Quits: panella32 (~panella32@216.131.105.215) (Ping timeout: 240 seconds)
[06:41:38] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Client Quit)
[06:46:21] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:47:07] *** Quits: src (~src@user/src) (Quit: Leaving)
[06:48:54] *** Quits: wildo (~lain6141@119.224.72.222) (Ping timeout: 250 seconds)
[06:50:43] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[06:51:35] *** Rockwood_ is now known as Rockwood
[07:00:03] *** Joins: stiv3n (~stiv3n@2601:647:8101:e370::5b75)
[07:00:42] *** Quits: stiv3n (~stiv3n@2601:647:8101:e370::5b75) (Client Quit)
[07:02:20] *** Joins: tv3n (~tv3n@2601:647:8101:e370::5b75)
[07:02:43] *** pizzaiolo is now known as pizza
[07:03:05] *** Quits: nomic (~nomic@185.217.117.104) (Quit: Leaving)
[07:05:53] *** Joins: bobdobbs (~user@116.251.149.196)
[07:06:38] <bobdobbs> ljharb: hai again. Thanks for letting me know what was going on
[07:06:55] <bobdobbs> ljharb: also I've spent the last 20 mins or so reading up about javascript classes. I haven't used classes in js before.
[07:07:19] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[07:07:47] <ljharb> !classes @ bobdobbs
[07:07:47] <jellobot> bobdobbs, Class hierarchies? Don't do that! http://raganwald.com/2014/03/31/class-hierarchies-dont-do-that.html (See also, !inheritance)
[07:07:54] <ljharb> !inheritance @ bobdobbs
[07:07:54] <jellobot> bobdobbs, JavaScript does not really have “inheritance” like classical languages. What it has is more properly called “property delegation” or “behavior delegation” http://davidwalsh.name/javascript-objects - ie `foo.bar(baz)` when `!foo.hasOwnProperty('bar')` is essentially doing `Object.getPrototypeOf(foo).bar.call(foo, baz)`
[07:08:02] <ljharb> !nouns @ bobdobbs
[07:08:02] <jellobot> bobdobbs, In JavaScript, verbs are equally important as nouns. http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html
[07:08:10] <ljharb> read all that too :-)
[07:08:15] <bobdobbs> kk :)
[07:08:44] <Stinger> does a closure contain everything in the function scope or could it potentially be optimised to just what is referenced in enclosed functions?
[07:10:34] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[07:11:44] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[07:12:05] *** Quits: pmercado (~pmercado@186.107.48.199) (Ping timeout: 256 seconds)
[07:21:19] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:22:40] <ljharb> Stinger: if it’s in strict mode, or there’s no use of `with`; and there’s no use of direct eval; then yes, it could be optimized to that (and almost certainly is)
[07:23:01] <ljharb> Stinger: but it’s a mistake to be thinking like that. JS is memory-managed, which means it’s none of your concern :-)
[07:23:37] <Stinger> eeeehh I wish it was something I didnt have to worry about
[07:24:48] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[07:25:01] <Stinger> basically I want to make sure an object doesn't get gc'd before its functions
[07:26:20] <ljharb> Stinger: if the functions don’t reference the object, then of course it could be
[07:26:44] <ljharb> the spec only mandates observability; it doesn’t mandate anything get collected.
[07:26:46] <Stinger> e.g. if I have let b = { a : () => 1 } how do I make sure b gets held as long as there is an external reference to b.a
[07:27:00] <ljharb> Stinger: you don’t, and why would you want that
[07:27:14] *** Joins: summersault (~summersau@179.221.251.36)
[07:27:16] <ljharb> b.a can’t possibly be affected by the liveness of b
[07:27:47] <Stinger> it involves managing object lifetimes across context ipc boundary
[07:27:54] <ljharb> Stinger: to be clear, you could make a WeakMap of b.a → b
[07:28:00] <ljharb> oof, ok the sounds horrific
[07:28:16] <Stinger> yeah weakrefs are involved
[07:28:43] <ljharb> oh actually hmm
[07:28:58] <ljharb> ok so yes, you want a WeakMap of b.a → b
[07:29:10] <ljharb> or no, wait
[07:29:43] <ljharb> ok so you need a weakref to b.a, and a finalizationregistry of that, that on finalization removes b from a Map.
[07:29:50] <Stinger> if I just have a reference to the enclosing object inside a function would that do it?
[07:29:52] <ljharb> which would work but it’s insane that you’d need that
[07:30:18] <ljharb> not necessarily. The engine could realize you’re not doing anything and silently collect it.
[07:30:37] <ljharb> Stinger: this really sounds like an xy problem tho. What is this nightmarish system trying to do?
[07:30:45] <Maxdamantus> You only need a weakmap if you're actually retrieving things from it.
[07:31:09] <Maxdamantus> Otherwise it does nothing but potentially consume memory.
[07:31:13] <Stinger> let c = {} ; f = function (){const d=c; work;} c.f = f;
[07:31:38] <ljharb> Stinger: since the program is the same if the const d statement is removed, an implementation could be free to do so
[07:31:49] <ljharb> whether they’d go that far is ¯\_(ツ)_/¯
[07:31:54] <Stinger> ljharb : I was afraid of that
[07:32:05] <ljharb> use the weakref/finalization thing i described
[07:32:14] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[07:32:18] <ljharb> or better, rearchitect your system so you don’t need to mess with this stuff
[07:33:08] <Maxdamantus> Just add a proper reference from b.a to b, since that's presumably how it's used.
[07:33:40] <ljharb> if you do that you make a cycle and neither can necessarily be collected. But it might work.
[07:33:45] <Maxdamantus> b.a.parent = b;
[07:33:49] <Stinger> I would explain what this is for, but its so convoluted Im not sure I could write it down heh
[07:33:58] <ljharb> Stinger: lol that’s a huge red flag :-p
[07:34:15] <Maxdamantus> This is instead of using any weakmaps, so cycles shouldn't be an issue.
[07:34:27] <Stinger> yeah I've been second guessing myself for a week or two now
[07:34:46] <Maxdamantus> (GCs normally handle cycles properly in the non-weakmap case)
[07:35:19] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[07:35:21] <ljharb> Stinger: if you try to explain the goal maybe i can describe a simpler system
[07:35:26] <Stinger> normally? you would hope they would by now lol
[07:36:05] <Maxdamantus> Any JavaScript GC since IE6 or so does.
[07:36:25] <Maxdamantus> I think IE6 might have had some cyclic bugs.
[07:36:46] *** Joins: vysn (~vysn@user/vysn)
[07:36:50] <doc> I use IE6 because I heard cycling is good for you
[07:36:51] <Stinger> ok so I'm working in electron - what I want to do is emulate a messageport across the preload/render boundary
[07:37:07] <bobdobbs> ljharb: that second article you suggested is a little deep for me to grok. But it lead me to to this, which I understand more sufficiently and makes me think that Steve Yegge is a genius: https://steve-yegge.medium.com/the-death-of-richard-dawkins-f5d6e8f43d07
[07:37:12] <ljharb> Stinger: to what end tho
[07:37:17] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[07:37:24] <ljharb> Stinger: like the overarching goal, not how you think you can achieve it
[07:37:35] <ljharb> bobdobbs: he is, based on the articles I’ve read
[07:38:19] <Stinger> offload long computations to another thread but in a way that allows debugging
[07:38:41] <Stinger> which unfortunately for me rules out Webworkers
[07:38:57] *** Joins: EdFletcher (~PKD@user/edfletcher)
[07:39:22] <ljharb> Stinger: what do you mean by allows debugging
[07:39:35] <Stinger> as in I can attach a debugger
[07:40:17] <ljharb> sounds easier to just launch an entirely separate process with routes, and you can debug that
[07:40:31] <ljharb> trying to debug across processes sounds like a bad idea
[07:40:52] <Stinger> oh Maxamantus : you mean actually set a property on the function?
[07:41:26] <ljharb> yes, that’s the cycle they meant, it’d most likely work
[07:41:34] <ljharb> but it’d also expose the object to everyone that had the function
[07:41:40] <ljharb> which may not be what you want
[07:41:43] <Stinger> hmm thanks that makes sense
[07:42:12] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[07:43:27] <Stinger> that shouldn't be an issue the object is actually returned for consumer use, but once it gets pushed across the ipc boundary I'm concerned there wont be a reference to the containing object
[07:43:46] <Stinger> the electron ipc will proxy the functions so they should be ok
[07:45:24] <Stinger> ok thanks I think that will be the approach I take for now.
[07:46:40] <Stinger> actually let me double check if the electron ipc allows cycles haha I think it does.
[07:49:55] *** Joins: stenno (~stenno@user/stenno)
[07:56:17] *** Quits: quazimodo (~quazimodo@n1-40-220-128.bla1.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[08:00:35] *** Quits: tv3n (~tv3n@2601:647:8101:e370::5b75) (Quit: WeeChat 2.8)
[08:03:25] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[08:05:17] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:06:28] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 250 seconds)
[08:08:33] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[08:09:54] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[08:12:37] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:14:28] *** Quits: queue- (~nerd@user/queue/x-7267619) (K-Lined)
[08:16:08] <ljharb> qeqeqw: you need to auth with nickserv for non ops to see what you say. See the last link in the topic.
[08:25:08] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[08:26:17] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[08:27:52] *** Joins: kzootech (~contact@kzoo.tech)
[08:32:36] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[08:32:49] *** Joins: \mSg (mSg@user/msg/x-0285936)
[08:41:05] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[08:46:32] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[08:47:22] *** Joins: han-solo (~hanish@user/han-solo)
[08:48:32] *** Quits: stagas (~stagas@2a02:587:c43a:e9ef:7954:80f7:e9f1:8e8b) (Ping timeout: 240 seconds)
[08:49:22] *** Joins: panella32 (~panella32@193.36.225.111)
[09:04:15] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[09:04:22] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:04:47] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:06:28] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[09:14:59] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:14:59] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:14:59] *** Joins: wroathe (~wroathe@user/wroathe)
[09:15:28] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[09:15:43] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:16:31] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[09:18:02] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[09:19:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[09:20:53] *** Quits: panella32 (~panella32@193.36.225.111) (Ping timeout: 256 seconds)
[09:21:16] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 268 seconds)
[09:22:45] *** Joins: panella32 (~panella32@193.36.225.111)
[09:26:00] *** Joins: George (~George@2a02:587:6e5b:2600:b51c:836c:b0f5:c462)
[09:29:27] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[09:33:51] *** Joins: sudomannn (~sudomann@2601:543:100:4fc8:5c68:5817:cec9:586d)
[09:34:00] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 250 seconds)
[09:36:37] *** Quits: sudomann (~sudomann@2601:543:100:4fc8:5c68:5817:cec9:586d) (Ping timeout: 240 seconds)
[09:43:16] *** Quits: George (~George@2a02:587:6e5b:2600:b51c:836c:b0f5:c462) (Quit: Client closed)
[09:49:55] *** Joins: `2jt (~jtomas@10.red-83-58-228.dynamicip.rima-tde.net)
[09:50:17] *** Quits: austincheney (~austinche@2600:1700:1220:76c8:49ab:f940:8417:967b) (Ping timeout: 240 seconds)
[09:50:39] *** Joins: Kol (~Kol@d75-157-122-186.bchsia.telus.net)
[09:50:47] *** Joins: austincheney (~austinche@104-189-235-24.lightspeed.rcsntx.sbcglobal.net)
[09:52:55] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[09:54:09] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[09:55:32] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 240 seconds)
[09:58:21] *** Joins: neocron (~NeoCron@p200300c4cf1b4400f695d81d4d068b5c.dip0.t-ipconnect.de)
[10:00:32] *** Quits: Doraemon (~NeoCron@p200300c4cf146c0091a78f8614b30205.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:01:08] *** Quits: panella32 (~panella32@193.36.225.111) (Quit: Textual IRC Client: www.textualapp.com)
[10:02:56] *** Joins: stagas (~stagas@2a02:587:c43a:e9ef:6cad:fa01:8c69:44f)
[10:04:02] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 240 seconds)
[10:06:30] *** Joins: han-solo (~hanish@178.248.118.21)
[10:11:25] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[10:12:16] *** Quits: han-solo (~hanish@178.248.118.21) (Changing host)
[10:12:16] *** Joins: han-solo (~hanish@user/han-solo)
[10:13:29] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:13:30] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[10:18:46] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[10:19:25] *** Joins: Goreng (~Goreng@202.138.250.54)
[10:20:26] *** Quits: Goreng (~Goreng@202.138.250.54) (Client Quit)
[10:20:40] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[10:24:50] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[10:25:13] *** Joins: Pixi (~Pixi@user/pixi)
[10:25:43] *** Joins: fef (~thedawn@user/thedawn)
[10:28:19] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:28:27] *** Joins: audiobirb (~audio@user/audio)
[10:29:43] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[10:30:13] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:32:09] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Ping timeout: 276 seconds)
[10:37:52] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[10:42:02] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[10:45:19] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[10:46:08] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[10:47:31] *** Joins: RLa (~RLa@82.131.127.168.cable.starman.ee)
[10:50:33] *** Joins: RLa35 (~RLa@82.131.127.168.cable.starman.ee)
[10:50:40] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[10:51:13] *** Quits: RLa (~RLa@82.131.127.168.cable.starman.ee) (Killed (NickServ (GHOST command used by RLa35)))
[10:51:20] *** RLa35 is now known as RLa
[10:52:31] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[10:53:17] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[10:54:15] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Ping timeout: 276 seconds)
[11:00:52] *** Joins: D4mned (~D1mned@212.101.234.88)
[11:03:39] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[11:05:43] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[11:09:02] *** Quits: sudomannn (~sudomann@2601:543:100:4fc8:5c68:5817:cec9:586d) (Ping timeout: 240 seconds)
[11:10:10] *** Joins: mexen (uid495612@user/mexen)
[11:25:28] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[11:25:58] *** Parts: teear (~teear@cbharraste.eu) ()
[11:32:23] *** Quits: mknod (~mknod@user/mknod) (Quit: mknod)
[11:32:34] *** Joins: o (~niko@libera/staff/niko)
[11:43:24] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[11:47:25] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 240 seconds)
[11:49:04] *** Joins: tofran (~tofran@37.189.158.134)
[11:55:18] *** Joins: jazzy (~jaziz@user/jaziz)
[11:55:19] *** Joins: wildo (~lain6141@119.224.72.222)
[11:55:32] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[11:58:02] *** Quits: D4mned (~D1mned@212.101.234.88) (Read error: Connection reset by peer)
[11:58:44] *** Quits: trafficjam (~qubes@1.145.227.213) (Ping timeout: 250 seconds)
[11:59:11] *** Joins: D4mned (~D1mned@212.101.234.14)
[12:08:36] *** Joins: sudomannn (~sudomann@2601:543:100:4fc8:61d8:16f6:94:fd94)
[12:11:24] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:cb7b:4ecc:3aaa:58b5)
[12:11:45] *** Joins: teear (~teear@cbharraste.eu)
[12:15:46] *** Quits: teear (~teear@cbharraste.eu) (Client Quit)
[12:17:28] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[12:17:31] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[12:18:23] *** Joins: teear (~teear@cbharraste.eu)
[12:21:02] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Ping timeout: 240 seconds)
[12:21:29] *** Joins: utoneq (~utoneq@gateway/tor-sasl/utoneq)
[12:22:34] *** Quits: sudomannn (~sudomann@2601:543:100:4fc8:61d8:16f6:94:fd94) (Ping timeout: 250 seconds)
[12:30:09] *** Quits: enick_397 (~mercvrivs@2001:470:69fc:105::2ee6) (Quit: You have been kicked for being idle)
[12:31:05] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[12:36:43] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:49:55] *** Joins: jazzy2 (~jaziz@user/jaziz)
[12:50:22] *** Joins: vysn (~vysn@user/vysn)
[12:50:32] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[12:50:43] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Read error: Connection reset by peer)
[12:52:49] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[12:53:00] *** Joins: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk)
[12:54:38] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[12:57:07] *** Joins: ccapndave (~ccapndave@217-162-124-46.dynamic.hispeed.ch)
[12:57:36] <ccapndave> Hey!  I've got a React app and I want to call a function inside it from outside it.  Any ideas what's the best way to do this?
[12:57:57] *** Joins: jazzy (~jaziz@user/jaziz)
[12:58:01] <ccapndave> I tried with `useImperativeHandle` and `forwardRef` on the root, but nothing gets returned from `ReactDOM.render`
[12:59:50] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:00:06] <RLa> set a callback on window object from the component
[13:00:26] <ccapndave> RLa: How do you mean?
[13:00:46] *** Joins: pulse (~pulse@user/pulse)
[13:00:56] <RLa> using useEffect for example
[13:01:19] <RLa> later you can call it from outside code like window.myFunc()
[13:01:25] <ccapndave> Ah I see
[13:01:31] *** Joins: jazzy2 (~jaziz@user/jaziz)
[13:01:50] <ccapndave> This feels a bit hacky :)
[13:01:59] <ccapndave> But for sure it would work
[13:02:02] <ccapndave> Good thinking
[13:02:39] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[13:02:50] *** jazzy2 is now known as jazzy
[13:04:36] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:09:06] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[13:11:55] <ccapndave> Can I `dispatchEvent` and `addEventListener` on a non-DOM node?
[13:12:05] <ccapndave> If so I could create that and pass it into the React app as a prop
[13:12:11] *** Joins: pluri (~pluri@user/pluri)
[13:12:43] <ccapndave> `new EventTarget` maybe?
[13:13:19] <ccapndave> Wow
[13:13:24] <ccapndave> That does actually seem to work
[13:16:39] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Remote host closed the connection)
[13:17:04] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[13:21:16] *** Quits: ccapndave (~ccapndave@217-162-124-46.dynamic.hispeed.ch) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:22:21] *** Quits: trafficjam (~qubes@2001:8004:5190:2c63:cb7b:4ecc:3aaa:58b5) (Read error: Connection reset by peer)
[13:27:56] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[13:27:59] *** Joins: trafficjam (~qubes@2001:8004:5190:2c63:cb7b:4ecc:3aaa:58b5)
[13:28:51] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[13:29:05] *** Joins: ccapndave (~ccapndave@217-162-124-46.dynamic.hispeed.ch)
[13:29:32] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[13:31:14] *** Quits: ccapndave (~ccapndave@217-162-124-46.dynamic.hispeed.ch) (Client Quit)
[13:31:27] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[13:32:19] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[13:37:48] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Read error: Connection reset by peer)
[13:39:05] *** Quits: D4mned (~D1mned@212.101.234.14) (Read error: Connection reset by peer)
[13:43:52] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[13:50:32] *** Joins: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr)
[13:51:40] *** Joins: D4mned (~D1mned@212.101.253.132)
[13:53:32] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 240 seconds)
[13:57:24] *** Joins: Stinger (~Stinger@14-203-0-22.tpgi.com.au)
[13:59:09] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[14:01:32] *** Joins: dirigible_ (~dirigible@c-66-41-40-51.hsd1.mn.comcast.net)
[14:03:49] *** Quits: dirigible (~dirigible@2602:fe90:100:1e:e5a6:79af:9abe:fae5) (Ping timeout: 240 seconds)
[14:06:02] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[14:13:34] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[14:14:22] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[14:15:16] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:c4ae:3659:2e13:baf1:4d53)
[14:18:02] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[14:24:44] *** Quits: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr) (Quit: Leaving)
[14:26:20] *** Joins: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr)
[14:30:57] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[14:34:18] *** Quits: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr) (Quit: Leaving)
[14:34:28] *** Joins: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr)
[14:35:30] *** Quits: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr) (Client Quit)
[14:37:01] *** Joins: thelounge9525 (c2206bab@67.205.143.82)
[14:40:07] *** Quits: D4mned (~D1mned@212.101.253.132) (Quit: Leaving)
[14:42:36] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:44:34] *** Joins: mohab (~mohab@45.243.55.55)
[14:47:29] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[14:48:31] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[14:51:08] *** Quits: utoneq (~utoneq@gateway/tor-sasl/utoneq) (Remote host closed the connection)
[14:52:56] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[15:00:50] *** Joins: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr)
[15:01:15] *** Joins: iomari891 (~iomari891@197.210.71.107)
[15:02:25] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:02:28] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[15:02:36] *** Quits: RLa (~RLa@82.131.127.168.cable.starman.ee) (Quit: Client closed)
[15:03:42] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:05:37] *** Joins: nomic (~nomic@185.217.117.104)
[15:09:06] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Remote host closed the connection)
[15:13:16] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:14:54] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Ping timeout: 256 seconds)
[15:15:06] <hassoon> 'morning
[15:21:28] *** Quits: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr) (Quit: Leaving)
[15:23:14] *** Quits: thelounge9525 (c2206bab@67.205.143.82) (Quit: The Lounge - https://thelounge.chat)
[15:24:16] *** Joins: voltage_ (voltage@user/voltage)
[15:24:56] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[15:29:13] *** Joins: pmercado (~pmercado@186.107.48.199)
[15:30:18] *** Quits: mohab (~mohab@45.243.55.55) (Quit: WeeChat 3.4)
[15:32:23] *** Joins: MonoL (~MonoL@user/MonoL)
[15:32:49] <MonoL> o/
[15:37:25] *** Quits: deniska (~deniska@user/deniska) (Ping timeout: 240 seconds)
[15:37:48] *** Joins: thojanssens (~thojansse@182.232.193.117)
[15:38:48] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:39:36] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[15:40:27] <OnkelTem> Hi folks. I cannot install dependecies for a package: npm i just stops at some point and doesn't go any futher
[15:40:34] <OnkelTem> I tried 5 or 6 times already
[15:41:33] <OnkelTem> Any ideas how to investigate wtf is going in?
[15:41:57] <OnkelTem> No any private/proxying registries are used
[15:43:02] <OnkelTem> ⸨##################⸩ ⠸ reify:typescript: timing reify:audit Completed in 5128ms
[15:43:03] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[15:43:14] <OnkelTem> This is the last message in the output
[15:43:36] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[15:43:36] <OnkelTem> npm 8.3.0, node 16.x
[15:54:02] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[15:55:12] *** Quits: nomic (~nomic@185.217.117.104) (Quit: Leaving)
[16:10:19] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:c99f:61f1:4f83:5b59)
[16:13:45] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Quit: Client closed)
[16:14:02] *** Joins: JS5 (~JS@ftl16.seedit4.me)
[16:15:15] *** Parts: JS5 (~JS@ftl16.seedit4.me) ()
[16:17:56] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: The Lounge - https://thelounge.chat)
[16:18:19] *** Joins: fef (~thedawn@user/thedawn)
[16:18:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[16:19:34] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:19:57] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[16:21:38] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:25:14] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[16:28:50] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[16:31:46] *** Joins: henry40408 (~henry4040@175.181.155.165)
[16:35:39] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[16:37:17] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: The Lounge - https://thelounge.chat)
[16:39:03] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Quit: Ping timeout (120 seconds))
[16:39:41] <OnkelTem> So I removed package-lock and it worked
[16:39:50] <OnkelTem> So unstable... weird
[16:42:34] *** Quits: Stinger (~Stinger@14-203-0-22.tpgi.com.au) (Ping timeout: 250 seconds)
[16:42:40] <OnkelTem> So I stepped into poo one more time: p-event silently moved to ESM. That is really getting annoying
[16:42:59] <OnkelTem> downgraded back to 4.x
[16:43:24] *** Joins: pulse (~pulse@user/pulse)
[16:44:10] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[16:49:05] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[16:51:45] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[16:52:08] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:54:10] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Read error: Connection reset by peer)
[16:54:39] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[16:54:44] <silly> yea, silently not so much, this guy does it with all his packages and it's discussed broadly
[16:55:13] *** Joins: henry40408 (~henry4040@175.181.155.165)
[16:57:50] *** Joins: trevors (~trevors@user/trevors)
[16:59:13] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:00:25] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[17:01:00] *** Joins: henry40408 (~henry4040@175.181.155.165)
[17:03:56] *** Joins: N4buc0- (~N4buc0@177.40.2.111)
[17:03:56] *** Joins: fef (~thedawn@user/thedawn)
[17:05:03] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:c4ae:3659:2e13:baf1:4d53) (Remote host closed the connection)
[17:06:14] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[17:08:36] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:09:50] *** Quits: henry40408 (~henry4040@175.181.155.165) (Quit: The Lounge - https://thelounge.chat)
[17:10:55] <gde33> n>
[17:11:00] <jellobot> (timeout)
[17:11:00] <gde33> n>p
[17:11:01] <jellobot> (fail) ReferenceError: p is not defined
[17:12:16] <gde33> how does one make globals in the bot?
[17:15:03] <silly> n> global
[17:15:04] <jellobot> (okay) <ref *1> Object [global] { global: [Circular *1], clearInterval: [Function: clearInterval], clearTimeout: [Function: clearTimeout], setInterval: [Function: setInterval], setTimeout: { [Function: setTimeout] [Symbol(nodejs.util.promisify.custom)]: [Getter] }, queueMicrotask: [Function: queueMicrotask], performance: Performance { nodeTiming: PerformanceNodeTiming { name: 'node', entryType: 'node', startTime: 0, duration: 83.9676 …
[17:15:43] <silly> n> var x; global.x
[17:15:44] <jellobot> (okay) undefined
[17:15:52] <silly> n> var x=5; global.x
[17:15:53] <jellobot> (okay) 5
[17:16:08] <gde33> I tried this just now in jsfiddle function(a=myVar)  why wouldn;t that?
[17:16:32] <gde33> foo=function(a=myVar) {return a}
[17:16:48] <silly> jsfiddle wraps everything in $() by default, essentially document.ready
[17:16:49] <gde33> it takes only static values?
[17:17:10] <gde33> whats it called? default params?
[17:17:20] *** Quits: thojanssens (~thojansse@182.232.193.117) (Read error: Connection reset by peer)
[17:17:42] <silly> function(a=myVar) is a default value yes
[17:17:51] <gde33> oh wait i typoed it
[17:18:17] <gde33> I tried  window.a=123;b=function(a=a){return a};
[17:18:34] <silly> oh :( why would you do that?
[17:18:49] <gde33> window.aa=123;b=function(a=aa){return a}; works
[17:18:52] <silly> so confusing
[17:19:12] <silly> use whatever works for you
[17:23:27] *** Joins: henry40408 (~henry4040@175.181.155.165)
[17:26:00] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[17:26:31] *** Joins: henry40408 (~henry4040@175.181.155.165)
[17:26:32] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 240 seconds)
[17:36:33] <gde33> just fooling around
[17:37:31] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[17:38:31] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Read error: Connection reset by peer)
[17:39:01] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[17:39:57] *** Quits: jochum (~quassel@user/jochum) (Ping timeout: 256 seconds)
[17:40:35] *** Joins: jochum (~quassel@user/jochum)
[17:40:52] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[17:41:26] *** Joins: sudomann (~sudomann@2601:543:100:4fc8:896f:9146:a340:c12d)
[17:41:28] *** Quits: N4buc0- (~N4buc0@177.40.2.111) (Remote host closed the connection)
[17:44:18] *** Joins: bambanxx (~bambanx@2800:150:106:1061:b189:3fdf:bc93:dbc5)
[17:44:21] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:c4ae:f390:aec4:1ede:f0ea)
[17:44:55] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:48:04] *** Joins: deniska (~deniska@user/deniska)
[17:58:37] *** Joins: twainwek (~user@144.211.196.35.bc.googleusercontent.com)
[18:00:29] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:01:18] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[18:03:57] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:03:57] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:03:57] *** Joins: wroathe (~wroathe@user/wroathe)
[18:06:52] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:12:16] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[18:14:31] *** Joins: Harlin (~DonQixote@75-163-149-234.clsp.qwest.net)
[18:16:00] <Cork> silly: jsfiddle once wrapped everything in onload, but it has never wrapped it in $()
[18:16:15] <Cork> and now days it just puts the script section in a <script> tag in the body
[18:16:22] <silly> $() is onload
[18:16:35] <Cork> no it isn't
[18:16:36] *** Joins: xse_ (~xse@user/xse)
[18:16:40] <Cork> not even close
[18:16:41] <silly> and they did use jquery for it
[18:16:47] <silly> are you sure?
[18:16:50] <Cork> yes
[18:16:53] <Cork> very very sure
[18:16:57] <silly> are you sure you're sure?
[18:17:08] <Cork> it is almost similar to DOMContentLoaded
[18:17:09] *** Quits: xse (~xse@user/xse) (Ping timeout: 268 seconds)
[18:17:09] *** xse_ is now known as xse
[18:17:17] <Cork> but onload is explicitly later
[18:17:30] <silly> "Experienced developers sometimes use the shorthand $() for $( document ).ready()."
[18:17:37] <silly> https://learn.jquery.com/using-jquery-core/document-ready/
[18:18:45] <silly> oh, onload vs document ready
[18:18:52] <silly> ah well ¯\_(ツ)_/¯
[18:19:25] <Cork> https://github.com/jquery/jquery/blob/eb9ceb2facbeff1c66a41824bd0ac0c56d0c5c62/src/core/ready-no-deferred.js#L67
[18:20:03] <Cork> so it is a wrap around both, kinda, but it is not fully either, ready is a messy beast
[18:20:24] <silly> so it is somewhat close?
[18:20:44] <Cork> it fires "as soon as the dom is expected to be ready"
[18:21:12] <Cork> it fires first when the jquery block is loaded, and then again on domContentLoaded (if it fires) and then again on load
[18:21:15] <silly> this is not what it was about, but rather, that all his code is wrapped in a function
[18:21:25] <Cork> unloading it self as soon as it finds it complete
[18:21:36] <silly> var xy doesn't create a global because of this
[18:21:46] <Cork> ya, but it isn't in jsfiddle
[18:21:57] <Cork> it was wrapped in a function in onload, but that was a setting
[18:22:09] <Cork> now days it isn't, it is just a straight <script tag>
[18:22:24] <silly> did they change the default behaviour?
[18:22:27] <Cork> yes
[18:22:30] <Cork> <script type="text/javascript">//<![CDATA[
[18:22:30] <Cork> alert("a")
[18:22:30] <Cork> /]]></script>
[18:22:35] <silly> oic
[18:22:35] <Cork> to be exact is how it looks now days
[18:23:42] <Cork> also as a side note, jsfiddle has never been written in jquery
[18:23:49] <silly> mootools
[18:24:00] <Cork> thx, didn't remember and was about to look it up :)
[18:29:37] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: pileatedx)
[18:31:20] *** Quits: bambanxx (~bambanx@2800:150:106:1061:b189:3fdf:bc93:dbc5) (Ping timeout: 268 seconds)
[18:31:46] <gproto23> is it possible detect client's browser extensions via javascript?
[18:32:35] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:c869:daa8:3abc:ab54)
[18:34:43] <Alexendoo> gproto23: Not without the cooperation of said extension
[18:35:36] <austincheney> yeah, that sounds like a security exploit
[18:38:02] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[18:39:34] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[18:42:30] *** Joins: stenno (~stenno@user/stenno)
[18:43:06] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:c869:daa8:3abc:ab54) (Quit: Leaving...)
[18:45:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:46:11] *** Joins: znf_ (ibm86@blender.linge-ma.ro)
[18:46:35] *** Quits: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[18:48:08] *** Joins: lenarhoyt (~lenarhoyt@p2e5cf45b.dip0.t-ipconnect.de)
[18:49:32] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 240 seconds)
[18:50:28] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[18:50:28] <gproto23> Alexendoo: plug-ins is different things then?
[18:53:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:53:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:53:52] *** Joins: wroathe (~wroathe@user/wroathe)
[18:54:26] *** Joins: xwillie (~pi@2408:8245:1700:c82::701)
[18:54:38] *** Joins: nomic (~nomic@185.217.117.104)
[18:55:42] *** Joins: Rockwood (~Rocky@user/rocky)
[18:57:03] <Alexendoo> gproto23: Yeah
[18:57:20] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-9.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[18:58:28] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[18:59:09] *** Joins: KingPimpCommand (~n_u@76-229-202-214.lightspeed.cicril.sbcglobal.net)
[18:59:36] *** Parts: KingPimpCommand (~n_u@76-229-202-214.lightspeed.cicril.sbcglobal.net) ()
[19:02:23] *** Joins: fabioluciano (~fabioluci@2804:14c:65d2:4215::3ce1)
[19:03:03] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:03:29] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:04:57] *** Quits: fabioluciano (~fabioluci@2804:14c:65d2:4215::3ce1) (Remote host closed the connection)
[19:07:41] *** Joins: olle (~olle@i5E866D9B.versanet.de)
[19:08:21] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[19:10:54] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[19:13:27] *** Joins: server03__ (~sfields@136.34.181.232)
[19:13:29] *** Quits: server03__ (~sfields@136.34.181.232) (Remote host closed the connection)
[19:14:05] *** Joins: laslmtdbm^ (~laslmtdbm@wsip-98-188-242-61.mc.at.cox.net)
[19:15:43] *** Quits: sfields_ (~sfields@136.34.181.232) (Ping timeout: 256 seconds)
[19:17:06] *** Joins: trevors (~trevors@user/trevors)
[19:17:54] *** Quits: shreyasminocha (51fdc93eda@user/shreyasminocha) (Remote host closed the connection)
[19:17:54] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Remote host closed the connection)
[19:17:54] *** Quits: sm2n (ae95cb1267@user/sm2n) (Remote host closed the connection)
[19:17:54] *** Quits: dan_berg_pub (2c6463a49d@2604:bf00:561:2000::1c) (Remote host closed the connection)
[19:18:12] *** Quits: deniska (~deniska@user/deniska) (Ping timeout: 268 seconds)
[19:18:18] *** Quits: redcat (~dev@user/redcat) (Quit: Leaving)
[19:18:27] *** Joins: dan_berg_pub (2c6463a49d@2604:bf00:561:2000::1c)
[19:18:45] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[19:18:45] *** Joins: sm2n (ae95cb1267@user/sm2n)
[19:18:49] *** Joins: shreyasminocha (51fdc93eda@user/shreyasminocha)
[19:18:55] *** Joins: deniska (~deniska@user/deniska)
[19:20:47] *** Joins: RLa (~RLa@82.131.127.168.cable.starman.ee)
[19:27:25] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:29:10] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:31:37] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[19:33:17] *** Quits: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk) (Ping timeout: 256 seconds)
[19:34:01] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[19:34:33] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[19:34:58] *** Quits: lenarhoyt (~lenarhoyt@p2e5cf45b.dip0.t-ipconnect.de) (Quit: Client closed)
[19:36:45] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[19:36:57] *** Quits: Guest8575 (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c) (Ping timeout: 240 seconds)
[19:37:01] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[19:38:00] *** Joins: Guest8575 (~twiclo@2604:7b80:2000:1069:cde9:e3cf:754c:100d)
[19:38:32] *** Quits: laslmtdbm^ (~laslmtdbm@wsip-98-188-242-61.mc.at.cox.net) (Ping timeout: 240 seconds)
[19:39:38] *** Quits: znf_ (ibm86@blender.linge-ma.ro) (Quit: ZNC - http://znc.in)
[19:40:52] *** Joins: znf_ (ibm86@2001:19f0:5001:3600:5400:3ff:fecd:9ee5)
[19:41:32] *** Quits: znf (~ibm86@toaster.linge-ma.ro) (Quit: ZNC - http://znc.in)
[19:43:49] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:45:34] *** Joins: lenarhoyt (~lenarhoyt@p2e5cf45b.dip0.t-ipconnect.de)
[19:49:20] *** Joins: laslmtdbm^ (~laslmtdbm@wsip-98-188-242-61.mc.at.cox.net)
[19:52:09] *** znf_ is now known as znf
[19:52:26] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:52:34] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:58:18] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:59:21] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Quit: Leaving)
[20:02:47] *** Quits: xwillie (~pi@2408:8245:1700:c82::701) (Quit: WeeChat 2.3)
[20:05:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[20:06:31] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Read error: Connection reset by peer)
[20:06:55] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:08:35] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[20:09:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:09:08] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:09:08] *** Joins: wroathe (~wroathe@user/wroathe)
[20:10:37] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 268 seconds)
[20:11:36] *** Quits: tofran (~tofran@37.189.158.134) (Quit: Ping timeout (120 seconds))
[20:12:02] *** Joins: tofran (~tofran@37.189.158.134)
[20:13:06] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[20:16:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:18:41] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:18:56] *** Joins: chao (~stenno@user/stenno)
[20:19:51] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:20:02] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[20:20:20] *** Joins: nomic2 (~nomic@185.192.69.2)
[20:20:29] *** Quits: nomic (~nomic@185.217.117.104) (Ping timeout: 268 seconds)
[20:20:50] *** nomic2 is now known as nomic
[20:20:50] *** Quits: lenarhoyt (~lenarhoyt@p2e5cf45b.dip0.t-ipconnect.de) (Quit: Client closed)
[20:23:05] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:23:57] *** Joins: zebrag (~chris@user/zebrag)
[20:24:07] *** Joins: tofran8 (~tofran@37.189.158.134)
[20:24:51] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 256 seconds)
[20:24:51] *** tofran8 is now known as tofran
[20:26:33] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[20:27:05] *** Joins: nomic2 (~nomic@185.192.69.41)
[20:27:53] *** Quits: nomic (~nomic@185.192.69.2) (Ping timeout: 268 seconds)
[20:29:01] *** Joins: Danishman (~Danishman@2-104-144-110-cable.dk.customer.tdc.net)
[20:29:07] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[20:29:24] *** Joins: xse (~xse@user/xse)
[20:36:05] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:36:49] *** nomic2 is now known as nomic
[20:37:39] *** Joins: kakashiA1 (~kakashi@37.85.18.55)
[20:39:30] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[20:40:50] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[20:42:04] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:44:30] *** Joins: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk)
[20:48:08] <ljharb> olle: you need to auth with nickserv for non-ops to see what you say. see the last link in the topic.
[20:49:17] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[20:49:28] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[20:51:34] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Quit: WeeChat 3.3)
[20:51:42] *** Joins: corgi (~corgi@2620:1b2:c40:3000:f39c:21a6:6c2f:8daa)
[20:51:42] *** Quits: corgi (~corgi@2620:1b2:c40:3000:f39c:21a6:6c2f:8daa) (Changing host)
[20:51:42] *** Joins: corgi (~corgi@user/corgi)
[20:51:50] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:53:28] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[20:59:32] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[21:00:09] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[21:01:42] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[21:04:09] <devslash> ljharb, you're familiar with React right ?
[21:04:16] *** Parts: olle (~olle@i5E866D9B.versanet.de) ()
[21:04:34] <ljharb> i am
[21:04:41] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 256 seconds)
[21:06:13] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 256 seconds)
[21:06:14] <devslash> im learning React from a Udemy course.  The instructor is going over unit tests using enzyme. This is my test script: https://pastebin.com/nWEq9tJX
[21:06:39] <corgi> do u have a reason to learn testing?
[21:06:49] <corgi> or are u jsut following the course
[21:06:50] <devslash> Iwhat do you mean ?
[21:07:03] <devslash> im following the course so I can learn how to write unit tests
[21:07:10] <corgi> ic
[21:07:16] <devslash> in react specifically
[21:07:47] <devslash> since I've been using Angular but since the market favors React I decided that I've got to learn it
[21:07:48] <ljharb> everyone has a reason to learn testing
[21:07:53] <ljharb> code without tests is broken, because you can't prove otherwise
[21:08:07] <ljharb> devslash: so what's your question?
[21:08:09] *** Joins: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8)
[21:08:10] <devslash> that unit test fails
[21:08:29] <ljharb> devslash: what does `wrapper.debug()` output? if `Button` has any HOCs, you need one `.dive()` per HOC.
[21:08:31] <devslash> it runs and returns false
[21:09:10] <devslash> do I put wrapper.debug() after expect ?
[21:09:48] *** Joins: trevors (~trevors@user/trevors)
[21:09:49] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[21:09:56] <ljharb> devslash: do `console.log(wrapper.debug())`. anywhere after `wrapper` exists
[21:10:34] <silly> enzyme is the go to for react testing?
[21:11:44] <devslash> i dont see any additional output
[21:11:48] *** Joins: Akiva (~Akiva@user/Akiva)
[21:11:52] <devslash> in terminal
[21:12:04] <corgi> silly: i think ive seen https://github.com/testing-library/react-testing-library take over
[21:12:16] <ljharb> RTL is incapable of doing all the things enzyme can
[21:12:29] <corgi> yea i dont enjoy writing tests
[21:12:32] <ljharb> but, RTL's naive approach also means that for the things it *does* do, it always works with react, no matter what internals they change
[21:12:41] <corgi> i write perfect code so i dont need tests :P
[21:12:46] <ljharb> devslash: put it before the expect
[21:12:52] <ljharb> corgi: untested code is ineligible to be perfect
[21:13:03] *** Joins: paule32 (~paul@nat-91-137-26-13.net.encoline.de)
[21:13:03] *** Quits: paule32 (~paul@nat-91-137-26-13.net.encoline.de) (Changing host)
[21:13:03] *** Joins: paule32 (~paul@user/paule32)
[21:13:15] <corgi> yea thats fine
[21:13:53] <devslash> https://pastebin.com/HrdWfMj5
[21:13:53] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:14:46] <devslash> ljharb, do you want to see the Button component ?
[21:14:49] *** chao is now known as stenno
[21:14:49] <ljharb> devslash: sure
[21:14:57] <ljharb> devslash: altho that looks like `wrapper.is('button')` should be true
[21:15:10] <devslash> https://pastebin.com/bKTjFmRZ
[21:15:28] <ljharb> aside from "components should never be arrow functions, only normal ones", that should work fine
[21:15:35] <devslash> I am following the Udemy instructor and thats EXACTLY what he has and when he runs it, it returns true but not for me
[21:15:50] <ljharb> devslash: can you make a codesandbox based off of https://codesandbox.io/s/3qm350nr3q ?
[21:15:54] <ljharb> devslash: oh wait, what version of react
[21:16:03] <devslash> 17
[21:16:06] <ljharb> enzyme doesn't support react 17 yet
[21:16:12] <devslash> oh
[21:16:16] <ljharb> there's an unofficial adapter but i'm not sure how well it works
[21:16:22] <ljharb> so, drop to react 16 and it should work
[21:16:23] <devslash> should I downgrade to 16
[21:16:28] <ljharb> yes
[21:17:12] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[21:17:33] <devslash> just wondereing, do you use yarn or npm
[21:18:15] <devslash> I downgraded to React 16.16 and the test still fails
[21:18:23] <ljharb> npm
[21:18:31] <ljharb> yarn's junk
[21:18:42] <ljharb> devslash: ok so then can you put everything in the codesandbox? then i can repro it and fix it if needed
[21:18:48] <stenno> isn't yarn just a wrapper over npm?
[21:18:53] <han-solo> ljharb: do you have something on yarn i could read about ?
[21:19:25] <ljharb> han-solo: only my rants in here
[21:19:27] <ljharb> stenno: no
[21:19:33] <ljharb> stenno: it's an entirely replacement CLI
[21:19:35] <han-solo> ljharb: ah :)
[21:19:42] <stenno> oh
[21:19:57] <ljharb> han-solo: but yarn 1 and 2 are EOL, yarn PnP breaks things, and yarn doesn't have any features i'm aware of that npm lacks
[21:20:02] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[21:20:03] <ljharb> so why would you want to use a nonstandard thing
[21:20:11] <stenno> TIL
[21:20:31] <han-solo> they said it is more secure, work uses yarn. /me is js noob
[21:20:34] <ljharb> lol
[21:20:42] <ljharb> it has never been "more secure"
[21:21:03] <devslash> https://codesandbox.io/s/enzyme-setup-in-codesandbox-forked-w7s5b?file=/src/Button.test.js
[21:21:06] <ljharb> it was significantly faster when it first came out - but that gap narrowed considerably about 9 months later
[21:21:10] <han-solo> it does parallel compilcation or something ? so speed ?
[21:21:16] <han-solo> ah yeah
[21:21:16] <ljharb> and since then it's narrowed to the point where it's basically the same
[21:21:55] <devslash> ljharb, that was one of the reasons that I read why you oughta use yarn a while back
[21:22:02] *** Quits: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com) (Ping timeout: 240 seconds)
[21:22:17] <ljharb> those 9 months where it was a real reason were in like, 2015?
[21:23:14] <devslash> ljharb, I created the codesandbox
[21:23:26] <devslash> https://codesandbox.io/s/enzyme-setup-in-codesandbox-forked-w7s5b
[21:23:40] <ljharb> k looking
[21:23:46] <devslash> ok thanks
[21:24:57] <ljharb> devslash: you have `.is('button)')`
[21:25:00] <ljharb> it's a button, not a button)
[21:25:07] <devslash> huh
[21:25:56] *** Joins: ZeroWalker (~ZeroWalke@2001:9b1:28f8:8300:7164:4c68:eefc:f59d)
[21:25:59] <devslash> oh expect(wrapper.is('button')).toEqual(true);
[21:26:24] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[21:26:32] <ljharb> devslash: when i fix your typo it passes for me
[21:26:46] <devslash> yea it does for me too now thanks
[21:27:10] <devslash> I also had to add the configure line which is not in the udemy instructors' code
[21:27:20] *** Joins: pulse (~pulse@user/pulse)
[21:28:57] <ljharb> that line comes from enzyme v3; if the udemy course is enzyme v2 then i would avoid it, because that's very old
[21:30:11] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[21:30:33] <devslash> Im not sure I dont see the date of the course
[21:30:45] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[21:31:11] <devslash> https://www.udemy.com/course/learning-react-and-redux-decoupling-with-stateless-components/
[21:31:20] *** Joins: henry40408 (~henry4040@175.181.155.165)
[21:35:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[21:35:23] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[21:35:26] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:36:32] *** Joins: src (~src@user/src)
[21:36:42] *** Joins: trevors (~trevors@user/trevors)
[21:37:53] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[21:38:00] *** Joins: jw_dungeon (~jw@2601:44:4380:4a10:151:a143:641:a301)
[21:38:14] *** Joins: fef (~thedawn@user/thedawn)
[21:39:00] <ljharb> ¯\_(ツ)_/¯
[21:39:40] <devslash> I like enzyme
[21:40:23] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[21:46:55] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[21:49:47] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:50:52] *** Joins: macswagger (~cee@cpe-104-34-48-156.socal.res.rr.com)
[21:51:24] *** Quits: jw_dungeon (~jw@2601:44:4380:4a10:151:a143:641:a301) (Read error: Connection reset by peer)
[21:52:31] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:52:40] <paule32> hello
[21:52:48] <paule32> who is using ace.io ?
[21:54:05] <paule32> i use firefox under windows 11, and i get the debugger console message, that  "Element.setCapture()"  is deprecated, and I should use: "Element.setPointerCapture() " insread
[21:54:09] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:7907:7dad:41ed:706e)
[21:54:47] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:57:57] <ljharb> paule32: sounds like something that website's developers should look at
[21:58:05] <ljharb> paule32: but you shouldn't really have the console open on "not your site", there's no point
[21:58:57] <paule32> it is my site
[21:59:01] <paule32> a home project
[21:59:38] <paule32> the code is coming from ace.io - an editor for the web
[22:00:13] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[22:00:38] *** Quits: iomari891 (~iomari891@197.210.71.107) (Ping timeout: 250 seconds)
[22:02:43] <Alexendoo> paule32: open an issue if there isn't one already https://github.com/ajaxorg/ace
[22:03:54] <OnkelTem> Help!
[22:04:17] <silly> !help @OnkelTem
[22:04:17] <jellobot> OnkelTem, For help, ask your question. Be patient. Code samples should be pasted in a paste service (see !paste). Tell us 1) what you want to happen, 2) what is actually happening, and 3) any error messages you find (see !describe and !debug).
[22:04:30] <OnkelTem> silly: thanks! Feel much better now
[22:04:48] <silly> you're welcome, !next
[22:06:17] <ljharb> paule32: ok so for an online editor, the "editor" part isn't your code, and you should ignore anything coming from it
[22:06:31] <OnkelTem> Folks, could you recommend a _synchronous_ logger for a node js app? You see, I use pino, but as it's too low-level in terms of the output (it returns json), I used also pino-pretty. But! I missed that part where they made it asynchronous, while this is the crucial part of my logging, I really need to get messages when they arrive, not some time afterwards
[22:07:14] <OnkelTem> so.. I should either create my own formatter for pino, or... used some other logger facility
[22:07:18] <OnkelTem> use*
[22:11:12] <OnkelTem> Could anyone share an example of custom pino messages formatting?
[22:13:18] <ljharb> winston?
[22:14:18] <OnkelTem> ljharb: thanks! I'll have a look at it
[22:15:32] *** Quits: Guest8575 (~twiclo@2604:7b80:2000:1069:cde9:e3cf:754c:100d) (Ping timeout: 240 seconds)
[22:19:14] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[22:20:41] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[22:21:01] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:21:12] *** Joins: summersault (~summersau@179.221.251.36)
[22:24:19] <Decker> so there's this worker demo... https://pmndrs.github.io/cannon-es/examples/worker it works fine.  my version https://d3x0r.github.io/cannon.js/examples/worker.html  fails when worker.addEventListener('error') is called with an event that has no message.... and there's no information why there's an error
[22:25:00] <Decker> those pages themselves are the same; but they import a script (which otherwise works?) in the worker which is different
[22:25:43] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[22:31:07] *** Joins: Guest8575 (~twiclo@2604:7b80:2000:1069:cde9:e3cf:754c:100d)
[22:36:00] *** Joins: lain6141 (~lain6141@119.224.72.222)
[22:36:58] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[22:36:59] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Read error: Connection reset by peer)
[22:38:03] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[22:39:28] *** Joins: sudomannn (~sudomann@2601:543:100:4fc8:896f:9146:a340:c12d)
[22:41:05] *** Quits: sam_1 (~sam_1@c-xd520f2a9.cust.hiper.dk) (Ping timeout: 268 seconds)
[22:42:16] *** Joins: AtomicLong (~primamate@p200300ee170add00343a959d46be5803.dip0.t-ipconnect.de)
[22:42:32] *** Quits: sudomann (~sudomann@2601:543:100:4fc8:896f:9146:a340:c12d) (Ping timeout: 240 seconds)
[22:45:04] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:47:01] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[22:47:03] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[22:50:02] <Decker> fails for a different reason on firefox
[22:51:09] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:52:02] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:54:32] <devslash> im getting an error in Reacy with an enzyme dependency. This is my unit test and the error message that I am getting https://pastebin.com/C5W8Qukf even after deleting this unit test, the error remains until I delete node_modules and run npm install again
[22:55:26] <ljharb> devslash: what version of npm?
[22:56:06] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[22:56:15] <ljharb> oh, jest
[22:56:20] <ljharb> devslash: what's your jest config?
[22:56:22] <ljharb> it's probably broken
[22:57:31] <devslash> npm 8.3.0
[22:57:56] <devslash> where would i find the jest config?
[22:58:17] <lmat> In jest, what does "it" mean? The test, the target of the test, the user?
[22:58:57] <ljharb> lmat: in every BDD-style test framework, it's how you declare a set of assertions
[22:58:58] *** Quits: Guest8575 (~twiclo@2604:7b80:2000:1069:cde9:e3cf:754c:100d) (Ping timeout: 268 seconds)
[22:59:06] <ljharb> devslash: package.json, or some json file?
[22:59:32] <devslash> https://pastebin.com/WqPnAKj2
[22:59:37] <devslash> package.json
[22:59:43] <sheetjs> lmat "it" corresponds to an individual test that can pass or fail
[23:00:07] <sheetjs> "describe" usually corresponds to a group of tests
[23:00:08] <lmat> ljharb: Yes, I know how to use it, I'm just wondering how to write my tests. "it('can click a button', ()=>{ myThing.click(); });"   or "it('clicks a button'...."
[23:00:17] *** Joins: Guest8575 (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c)
[23:00:21] <lmat> s/write my tests/name my tests/
[23:00:45] <ljharb> lmat: usually verbs are good. "clicks" not "should click" or "can click"
[23:00:49] <ljharb> active verbs, rather
[23:00:57] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[23:01:00] <sheetjs> the text is primarily for human consumption
[23:01:14] <lmat> ljharb: In that case "it" would refer to the test. "The test" clicks the button.
[23:01:50] <ljharb> sure
[23:02:09] <lmat> ljharb: Rather than "it" being the user: "The user" can click the button. (The test ensures that the user can click the button)
[23:03:11] <lmat> ljharb: Or "it" being the component being tested: "The component" waves when the button is clicked
[23:03:49] <lmat> So...here are the options:     it('clicks the button and ensures the widget waves'),  it('can click the button and see the wave'), it('waves when the button is clicked')
[23:06:27] *** Joins: matsaman (~matsaman@user/matsaman)
[23:06:53] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:08:15] <ljharb> lmat: that test doesn't ensure the user can click the button
[23:08:24] <ljharb> lmat: all that does is test that the `.click` method exists and doesn't throw
[23:09:59] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[23:10:26] <lmat> So you prefer the first wording? (  it('clicks the button...') )
[23:10:33] *** Joins: eron (~eron@2804:431:c7c2:3848:71e8:6fbf:96e2:3117)
[23:11:34] <ljharb> lmat: yes, but not if the test body is `myThing.click()`
[23:11:47] <ljharb> your test that calls `click` should be testing what happens when it's clicked
[23:11:50] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:e9a4:e83d:72a2:3f42) (Quit: WeeChat 3.4)
[23:11:55] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[23:12:58] <lmat> ljharb: Okay, but what does "it" mean? When I write " it("doesn't crash") "  WHAT doesn't crash? The user? The test? The target of the test?
[23:13:27] <ljharb> the target of the test. usually what's referred to in the describe
[23:13:40] <ljharb> it's supposed to be pretty intuitive what it means based on context
[23:13:58] *** Quits: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com) (Quit: leaving)
[23:18:14] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:18:30] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:20:09] *** Quits: eron (~eron@2804:431:c7c2:3848:71e8:6fbf:96e2:3117) (Quit: Client closed)
[23:21:05] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Ping timeout: 256 seconds)
[23:28:06] *** Joins: bliminse (~bliminse@host86-188-36-178.range86-188.btcentralplus.com)
[23:28:43] *** Joins: lara99 (~lara99@93-36-163-139.ip61.fastwebnet.it)
[23:30:19] <lara99> Hi, how can I create a script to open a list of URLs from a textarea with a delay of 10 seconds?
[23:32:45] <Decker> could probably use notepad
[23:33:06] <lara99> notepad++?
[23:33:36] <ramblebamble> any editor/IDE will do
[23:33:59] <lara99> but I need to alter them before opening
[23:34:52] <ramblebamble> in browser, as you mention textare. `document.querySelector(...).value.split(...).forEach(function(){logic nere}))
[23:35:53] <lara99> the problem is that I need to use setTimeout but it gives me undefined
[23:36:03] <lara99> for the urls
[23:36:13] <ramblebamble> please show code
[23:38:28] <lara99> ok
[23:39:51] <lara99> https://jsfiddle.net/pko6tgnf/1/
[23:41:36] <ramblebamble> THat one is a classic
[23:41:46] <ramblebamble> setTimeout runs the closure
[23:41:58] <ramblebamble> the closure references a state not created by the closure
[23:42:12] <ramblebamble> by the time the closure runs r is longer than then array
[23:42:26] <ramblebamble> so accessing Element X where the array is X-1 elements long will cause this
[23:42:47] <ramblebamble> You can use a higher order function  to prevent this
[23:42:56] <lara99> the textarea has to be populated manually
[23:45:15] <lara99> ramblebamble: are you saying that the textarea is empty?
[23:45:30] <ramblebamble> no
[23:46:09] <lara99> ok how can I use a higher order function?
[23:46:29] <ramblebamble> lara99, do you know what a higher order function is?
[23:46:39] <lara99> no
[23:46:58] <ramblebamble> a higher order function is a function that takes or returns a function
[23:47:01] <ramblebamble> https://jsfiddle.net/zuycs60r/
[23:47:28] <ramblebamble> so in situation s like these, where the closures and their surrounding state are the problem you need to use more closures :D
[23:47:47] <Alexendoo> Or just use let
[23:48:11] <lara99> ramblebamble: oh ok
[23:48:33] <Alexendoo> `let r = 0` instead of `r = 0`
[23:48:40] <ramblebamble> Alexendoo, or that :D
[23:48:50] <lara99> Alexendoo: let wht does?
[23:49:27] <Alexendoo> lara99: let is like var, but it works as you'd expect it to (block scoped instead of function scoped)
[23:49:54] <Alexendoo> Just `r = 0` on its own creates a global, so you wouldn't want that either way
[23:49:58] <ramblebamble> Alexendoo, what I always find a bit clunky looking at let with these type of codes is that the variable actually changes its identity over the loop-iteration and looking at the closure it might not be apparent that that is ok
[23:50:38] <lara99> I will do some tests, very interesting thakns
[23:51:07] <Alexendoo> ramblebamble: In the rare situation you want the old behaviour, you can just let whatever; before the loop
[23:52:01] <Alexendoo> But generally the var behaviour is the surprising one
[23:53:27] <ramblebamble> Alexendoo, yes, depending on what scope you define the variable, what I mean is this, the closure references val from let val, BUT it is not the same value as the next closure, whereas using an explicity closure housing the setTime() call IMHO it is more apparent what is going on. as the closure itself is automoous when it is referred to by the closure in setTimeout().I think it boils down to
[23:53:28] <ramblebamble> taste
[23:53:32] <lmat> ljharb: u da man
[23:54:04] <lmat> lara99: bash and wget are probably the best way?
[23:54:31] <ramblebamble> Alexendoo, looking at this example of how let could also be used. https://jsfiddle.net/zuycs60r/
[23:54:35] <lmat> ljharb: "it" is whatever is being "described". Duh, thank you.
[23:55:23] <ramblebamble> taste I guess, but I have to admit, my taste does not scale well -.-'
[23:55:55] <lara99> lmat: I am making some tests
[23:57:37] <Alexendoo> ramblebamble: Yeah I consider that kind a workaround, it trips people up constantly. Better off just avoiding the problem entirely
[23:57:48] <ramblebamble> lara99, a classic example executing this in node (function(){console.log(hhh);console.log(k);var k=444;})() remove the hhh and console.log(k) returns undefined because var is moved to the front of the function.
[23:58:21] <ramblebamble> Alexendoo, yes, but the power of closures is so tasty
[23:58:27] * ramblebamble drooles
[23:59:22] <lara99> ramblebamble: I start to understand
[23:59:47] *** Joins: panella32 (~panella32@164.215.205.64)
