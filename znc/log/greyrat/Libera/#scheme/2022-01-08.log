[00:00:22] <sonny> I think I made a mistake. I should just check the length after.
[00:02:42] <Zipheir> Provided you're willing to read more than 16 bytes.
[00:02:44] <sonny> I can't help but pre-optimize, it could be a while before the list if over.
[00:06:44] <gwatt> ahhh, good old pre-optimization. I remember writing a base converter in C. I was so proud that I'd not wasted any bytes. Instead, I'd malloc a byte at a time so that none were wasted
[00:08:11] <sonny> that sounds like it could get slow doing all those mallocs
[00:08:53] <sonny> I think the solution to my problem is nesting. I am going to use cond
[00:10:07] <gwatt> Oh I'm sure it was slow, also probably a pain to look out again, seeing half the code is memory manglement instead of solving the damn problem
[00:10:40] <sonny> ha
[00:16:35] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[00:20:05] <Zipheir> "Manual memory manglement"
[00:24:17] <Zipheir> sonny: Did you take a look at SRFI 61?
[00:24:43] *** Joins: m455 (~m455@user/m455)
[00:24:57] <sonny> I didn't understand it tbh
[00:25:42] <Zipheir> It allows something like (cond ((read-byte port) id-byte? => (lambda (b) ...)) (else '()))
[00:26:31] <Zipheir> So if the result of (read-byte port) satisfies id-byte?, it's passed to (lambda (b) ...) on the RHS of the clause.  Otherwise, the test is considered false.
[00:26:42] <Zipheir> It's a nice generalization of cond-arrow.
[00:27:30] *** Quits: klovett (~klovett@166.205.110.2) (Ping timeout: 256 seconds)
[00:28:07] <sonny> ok. I'll try to grok it later
[00:28:36] <sonny> this eof logic is more difficult than I thought
[00:29:16] <Zipheir> Factor it out.  (if (eof-object? b) '() <test-other-stuff>)
[00:29:26] *** Joins: civodul (~user@guix/contributor/civodul)
[00:29:30] <Zipheir> There's nothing wrong with returning null in two cases.
[00:31:04] <sonny> that did not work either
[00:31:30] <Zipheir> Can you paste your latest version?
[00:32:26] <sonny> this is what I noticed <https://bpa.st/GYBQ>, I will do the code paste in a sec
[00:35:23] <Spawns> does (set!) require the first argument to be a symbol?
[00:35:39] <sonny> <https://bpa.st/CHKA> is the code
[00:35:49] <sonny> Spawns: yeah, think so
[00:36:00] <sonny> (set! foo bar)
[00:36:09] <sonny> variable I guess, not symbol
[00:36:48] <Spawns> i was thinking in my interpreter, would I need a special opcode like SetGlobal, SetLocal to implement (set!), or if I should just eval a reference to whatever value on the stack and set that
[00:37:19] <Spawns> my stack is actually just references to objects, so I can eval the symbol and it leaves a reference to the var on the stack, which set could work with
[00:37:25] <Zipheir> The first argument to set! has to denote a location.
[00:37:37] <Zipheir> It's not actually used as a symbol, IOW.
[00:38:52] <Zipheir> sonny: What happens if i > idlen but you're reading non-id bytes?
[00:39:03] <Zipheir> ATM they get consed onto the result.
[00:39:11] <Zipheir> Is that the behavior you want?
[00:39:18] <sonny> nope
[00:39:49] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[00:40:04] <Zipheir> So (cond ((eof-object? b) null) ((> i idlen) null) (else (cons b (loop (+ i 1) (read-byte port))))), then?
[00:40:35] <Zipheir> Sorry, there should be an (id-byte? b) test instead of else.
[00:40:43] <Zipheir> else is then an error, I guess.
[00:42:32] <Zipheir> sonny: http://ix.io/3Lqm
[00:43:09] <Zipheir> Obviously the first two clauses can then be merged with (or ...).
[00:44:12] <sonny> ok, think you guys had given me a correct solution earlier, but I did not understand it
[00:44:27] <sonny> I think I get how or and `and` work now
[00:45:44] <Zipheir> I think it's good to write out complex logic with cond before compressing it with or/and.
[00:46:37] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[00:47:55] <sonny> thanks for the help
[00:49:30] *** Joins: livoreno (~livoreno@user/notzmv)
[00:50:29] <Zipheir> yw
[00:50:50] *** Joins: karlosz (~karlosz@47.151.136.69)
[00:59:52] <sonny> Zipheir: are if and `and`, or equivalent in some sense?
[01:00:54] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[01:01:46] <sonny> with your method I get an improper list, e.g. '(104 101 108 108 111 . #<void>)
[01:03:03] <Zipheir> That's very weird.
[01:03:13] <Zipheir> What Scheme implementation?
[01:03:21] <sonny> racket
[01:03:53] <Zipheir> None of those expressions should return #<void>, AFAIK.
[01:03:59] <sonny> if it's possible with `and` and or then I will just have to draw it by hand
[01:04:29] <sonny> Zipheir: I changed it to use if and when and I got void. I think a similar thing is happening
[01:05:02] <Zipheir> Oh, OK.  (when B ...) is unspecified (#<void>) if B is false.
[01:05:10] <Zipheir> Ditto (if B E)
[01:05:28] <sonny> yeah, but that form is disallowed in racket
[01:05:35] <Zipheir> Right, I forgot.
[01:05:56] <Zipheir> You never *need* and/or, because most implementations will expand them to nested ifs.
[01:06:16] <sonny> ok good
[01:06:25] <sonny> then I should be able to figure this out
[01:07:11] <Zipheir> Side note: when/unless are generally used for side-effecting things in Scheme, since they don't produce a real value in all cases.
[01:07:49] <Zipheir> e.g. (when bad-stuff (warn "bad things happened!"))
[01:08:57] <sonny> I see
[01:08:58] *** Joins: TCZ (~tcz@91.150.178.124)
[01:13:05] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[01:13:14] <Zipheir> That would be inserted in a place where its value would never be used, of course.  As in, before the last expression of a block.
[01:15:30] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[01:15:50] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[01:19:28] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[01:19:48] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[01:21:28] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[01:21:47] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[01:24:41] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[01:25:43] *** Quits: jao (~jao@92.40.173.22.threembb.co.uk) (Ping timeout: 256 seconds)
[01:26:17] *** Quits: civodul (~user@guix/contributor/civodul) (Remote host closed the connection)
[01:27:58] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Remote host closed the connection)
[01:28:17] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[01:29:13] *** Joins: klovett (~klovett@166.205.110.2)
[01:30:06] <Spawns> what conditional is the easiest to implement but can also be used to implement the rest? Should I do if, or cond?
[01:30:21] <Spawns> I am thinking if can emulate cond, when and unless
[01:30:49] <Spawns> or do we normally special case cond and if 
[01:31:01] <Zipheir> if is the traditional building block.
[01:31:16] <Spawns> that's what I thought but wasn't totally sure, thanks
[01:31:50] <Spawns> rust does something kind of weird, where all conditionals are actually desugared to pattern matching
[01:31:57] *** Quits: mdhughes (~mdhughes@user/mdhughes) (Ping timeout: 240 seconds)
[01:32:04] <Zipheir> Spawns: The Scheme standards all include a sample implementation of cond in terms of if, IIRC.
[01:32:21] <Spawns> oh wow thats nice
[01:32:22] <Zipheir> https://schemers.org/Documents/Standards/R5RS/HTML/r5rs-Z-H-2.html#%_toc_%_sec_7.3
[01:32:29] *** Joins: civodul (~user@guix/contributor/civodul)
[01:32:34] <Zipheir> I still want to get R7RS HTMLized.
[01:33:08] <Zipheir> That section also includes impls. of case, and, or, etc.
[01:33:27] *** Joins: sub0 (~bc8147f2@cerf.good1.com)
[01:33:37] <Spawns>  oh I see that now, the PDF I was reading isn't layed out quite as well and is hard to read
[01:34:09] *** Joins: mdhughes (~mdhughes@user/mdhughes)
[01:34:45] <Spawns> are (and) (or) also derived from if?
[01:34:54] <Spawns> if I'm reading this correctly
[01:35:00] <Zipheir> Yes.
[01:35:05] <Spawns> woah
[01:35:19] <Zipheir> You need let, too, to implement them correctly.
[01:35:33] <Spawns> but let is derived from lambda yeah?
[01:36:04] <Zipheir> Yes.  (let ((x 2) (y 3)) e e* ...) is just ((lambda (x y) e e* ...) 2 3)
[01:36:11] <Spawns> the really hard part is that you need some macro system in order to derive these from primitives, that's going to be fun but tough
[01:36:14] <Zipheir> lambda is the *only* binding form in Scheme!
[01:36:20] <Spawns> :)
[01:36:59] <Zipheir> Yes, some kind of macro system is pretty useful for building the language up quickly.
[01:37:42] <Spawns> how does looping end up being implemented? I am going to guess with recursion and if
[01:37:53] <Zipheir> What kind of looping?
[01:38:04] <Zipheir> Loops in Scheme are generally just tail recursion.
[01:38:07] <Spawns> I guess do, dotimes
[01:38:32] <Zipheir> Look further down that page of R5RS.  There's a do implementation.
[01:38:58] <Spawns> i'm going to have to figure out how to do tail recursion in my interpreter as well. at some point I may start forking away from the scheme spec if I cannot follow it 
[01:39:19] <Spawns> not sure how difficult tail call optimization is
[01:40:21] <Zipheir> Optimizing every tail call can be tricky.
[01:40:41] <Zipheir> Some early Scheme compilers only optimized self-calls and letrec.
[01:41:36] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Ping timeout: 256 seconds)
[01:42:08] *** jackhill is now known as KM4MBG
[01:42:35] *** KM4MBG is now known as jackhill
[01:44:33] <Oxyd> Nothing tricky about it. Just pop the current call frame before pushing the new one. Or push the new one and then move it back over the old frame, depending on whether you need the old frame to create the new one.
[01:45:53] <Zipheir> It depends very much on how your interpreter/compiler does procedure calls.
[01:46:42] <Zipheir> The old DEC Scheme->C compiler didn't optimize everything because it compiled Scheme procedure calls to C procedure calls and didn't do any Cheney-on-the-MTA tricks.
[01:46:54] <gwatt> tricky how? it's relatively simple to figure out which expression(s) is/are in tail position
[01:48:08] <Oxyd> Spawns is making a bytecode compiler, though, right? Not sure how an old DEC Scheme → C compiler is relevant here.
[01:48:24] <Spawns> yes its a bytecode compiler / interpreter
[01:48:25] <Zipheir> Ah, then it should be fairly easy.
[01:48:28] <Spawns> that may make it easier
[01:48:55] <Spawns> i'm reading about it now and it doesn't look too bad at all
[01:49:08] <gwatt> I guess certain VMs are tricky. I don't think the JVM has any tail call primitives. You either have to convert to while loop, or just grow the stack.
[01:49:35] <Spawns> this is a totally custom VM that I am creating as I go, so it can have anything ;)
[01:49:41] <gwatt> neat
[01:49:55] <Zipheir> Yeah, it seems that it's tricky if you're working with a system that has its own ideas about procedure calls.
[01:50:13] <Zipheir> But I haven't messed with TCO in a while.
[01:50:56] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[02:03:38] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[02:04:46] *** Quits: jobol (~jobol@2a01:e34:ee5c:ee50:d6be:d9ff:fea3:db03) (Quit: Leaving)
[02:06:06] *** Quits: sdu (~sidu@185.44.146.61) (Ping timeout: 256 seconds)
[02:22:06] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Quit: leaving)
[02:25:16] *** Joins: jao (~jao@92.40.173.19.threembb.co.uk)
[02:31:19] *** Joins: karlosz (~karlosz@47.151.136.69)
[02:32:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[02:38:58] *** Quits: jao (~jao@92.40.173.19.threembb.co.uk) (Ping timeout: 256 seconds)
[02:41:49] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[02:47:49] *** Quits: Darkcoal (~user@139.64.51.226) (Quit: Darkcoal)
[02:53:10] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[03:00:46] *** Quits: wnklmnn (~wnklmnn@2a02:908:4e2:9740:2d8:61ff:fef9:b4c2) (Quit: Leaving)
[03:04:36] *** Quits: klovett (~klovett@166.205.110.2) (Quit: ZZZzzz…)
[03:05:37] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[03:08:17] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[03:28:36] *** Joins: klovett (~klovett@166.205.110.2)
[03:36:45] *** Quits: civodul (~user@guix/contributor/civodul) (Ping timeout: 268 seconds)
[03:39:35] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[03:46:23] *** Joins: s-liao (~s-liao@101.86.96.21)
[03:51:04] *** Joins: karlosz (~karlosz@47.151.136.69)
[04:01:16] *** Joins: jao (~jao@92.40.173.19.threembb.co.uk)
[04:43:32] *** Joins: frost (~frost@user/frost)
[04:50:50] *** Quits: lottaquestions (~nick@2607:fa49:5041:a200:b0a0:2acf:d5f8:7b92) (Quit: Konversation terminated!)
[04:54:12] *** Quits: sub0 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Error))
[04:57:28] *** Quits: rgherdt_ (~rgherdt@2a02:8109:86c0:d8d:b566:ba1e:b76b:4040) (Remote host closed the connection)
[04:57:36] *** Joins: rgherdt_ (~rgherdt@ip5f5af43d.dynamic.kabel-deutschland.de)
[05:04:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[05:04:31] *** Joins: notzmv (~zmv@user/notzmv)
[05:15:47] *** Quits: rgherdt_ (~rgherdt@ip5f5af43d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[05:28:17] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 240 seconds)
[05:36:22] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[05:44:05] *** Joins: s-liao (~s-liao@101.86.96.21)
[05:55:26] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Quit: ZNC 1.8.2 - https://znc.in)
[05:56:36] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[06:01:55] *** Quits: perro_ (~perro@072-191-245-069.res.spectrum.com) (Read error: Connection reset by peer)
[06:03:26] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Remote host closed the connection)
[06:04:34] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[06:05:29] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Remote host closed the connection)
[06:08:36] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[06:09:54] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Remote host closed the connection)
[06:11:29] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:13:06] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[06:14:44] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Remote host closed the connection)
[06:16:08] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[06:18:50] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Remote host closed the connection)
[06:22:00] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[06:24:38] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Remote host closed the connection)
[06:28:02] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[06:29:19] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[06:36:05] *** Quits: dbohdan3 (~dbohdan@user/dbohdan) (Read error: Connection reset by peer)
[06:37:15] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[06:38:46] *** Quits: tristero (~nobody@user/tristero) (Quit: WeeChat 3.3)
[06:46:13] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:49:18] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[06:51:35] *** Joins: s-liao (~s-liao@101.86.96.21)
[06:57:48] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[07:00:49] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[07:05:17] *** Joins: frost (~frost@user/frost)
[07:10:03] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Quit: ZNC 1.8.2 - https://znc.in)
[07:11:33] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[07:14:58] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Remote host closed the connection)
[07:18:18] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[07:31:37] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[07:37:47] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[07:42:19] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[07:57:26] *** Quits: jao (~jao@92.40.173.19.threembb.co.uk) (Ping timeout: 256 seconds)
[07:59:33] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[08:22:04] *** Joins: s-liao (~s-liao@101.86.96.21)
[08:22:48] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Quit: leaving)
[08:23:03] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[08:24:40] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Client Quit)
[08:27:59] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[08:35:02] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Ping timeout (120 seconds))
[08:52:07] *** Joins: epony (~epony@user/epony)
[09:21:40] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[09:25:37] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[09:26:38] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Quit: ZNC 1.8.2 - https://znc.in)
[09:28:09] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[09:29:28] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Remote host closed the connection)
[09:30:59] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[09:34:36] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Remote host closed the connection)
[09:37:08] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[09:47:16] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:48:07] *** Quits: klovett (~klovett@166.205.110.2) (Quit: ZZZzzz…)
[09:55:37] *** Quits: nalaginrut_ (~nalaginru@183.11.128.121) (Ping timeout: 240 seconds)
[10:08:17] *** Joins: nalaginrut_ (~nalaginru@183.11.129.53)
[10:30:40] *** Joins: Darkcoal (~user@2001:16a2:77fa:2800:cada:750d:e747:6d0a)
[10:42:55] *** Joins: s-liao (~s-liao@101.86.96.21)
[10:58:38] *** Joins: klovett (~klovett@166.205.110.2)
[11:11:14] *** Quits: Darkcoal (~user@2001:16a2:77fa:2800:cada:750d:e747:6d0a) (Ping timeout: 268 seconds)
[11:12:37] *** Quits: scheme-scribe (~scheme-sc@gmw.xen.prgmr.com) (Ping timeout: 240 seconds)
[11:12:40] *** Joins: Darkcoal (~user@139.64.51.226)
[11:19:01] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[11:23:49] *** Quits: Mrtn[m] (~mrtn@2001:470:69fc:105::1f44) (Ping timeout: 240 seconds)
[11:23:49] *** Quits: Bi[m] (~bimatrixo@2001:470:69fc:105::109a) (Ping timeout: 240 seconds)
[11:23:49] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (Ping timeout: 240 seconds)
[11:24:13] *** Quits: Irvise (~irvise@2001:470:69fc:105::84c) (Ping timeout: 240 seconds)
[11:36:56] <ns12> Zipheir: Is https://github.com/barak/scheme2c the "DEC Scheme->C compiler" that you mentioned?
[11:37:00] *** Joins: sdu (~sidu@185.44.146.61)
[11:37:16] *** Quits: qhong (~qhong@rescomp-21-400677.stanford.edu) (Read error: Connection reset by peer)
[11:37:24] *** Joins: Mrtn[m] (~mrtn@2001:470:69fc:105::1f44)
[11:37:25] *** Joins: Bi[m] (~bimatrixo@2001:470:69fc:105::109a)
[11:38:40] *** Joins: qhong (~qhong@rescomp-21-400677.stanford.edu)
[11:41:50] *** Quits: sjamaan (~sjamaan@chicken/developer/sjamaan) (Ping timeout: 256 seconds)
[11:41:55] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[11:41:57] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[11:42:04] *** Joins: sjamaan (~sjamaan@chicken/developer/sjamaan)
[11:42:15] *** Quits: madage (~madage@user/madage) (Ping timeout: 276 seconds)
[11:44:45] *** Joins: madage (~madage@user/madage)
[12:03:51] <ns12> gwatt: Wasn't there a proposal for adding a tail call opcode to the JVM? I don't remember the name of the proposed opcode.
[12:24:24] *** Joins: rgherdt_ (~rgherdt@ip5f5af455.dynamic.kabel-deutschland.de)
[12:33:15] *** Joins: klovett_ (~klovett@166.205.110.2)
[12:35:57] *** Quits: klovett (~klovett@166.205.110.2) (Ping timeout: 240 seconds)
[12:40:10] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Remote host closed the connection)
[12:40:55] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[12:56:22] *** Joins: s-liao (~s-liao@101.86.96.21)
[13:44:48] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:55:47] *** Joins: Kyuvi (~Kyuvi@dsl-hkibng31-58c38d-219.dhcp.inet.fi)
[13:58:48] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Quit: ZNC 1.8.2 - https://znc.in)
[14:00:10] *** Quits: gwatt (~gmw@2605:2700:0:5::4713:955c) (Ping timeout: 260 seconds)
[14:00:26] *** Joins: gwatt (~gmw@2605:2700:0:5::4713:955c)
[14:02:27] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[14:04:38] *** Joins: utis (~utis@vpn-client281.uio.no)
[14:20:56] *** Quits: Kyuvi (~Kyuvi@dsl-hkibng31-58c38d-219.dhcp.inet.fi) (Ping timeout: 256 seconds)
[14:25:36] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[14:27:23] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:36:36] *** Joins: jdevoo (~jdevoo@109.136.191.26)
[15:03:59] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[15:16:19] *** Joins: s-liao (~s-liao@101.86.96.21)
[15:20:58] *** Quits: jdevoo (~jdevoo@109.136.191.26) (Quit: leaving)
[15:23:49] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[16:26:08] *** Joins: tfeb (~tfb@88.98.95.237)
[16:27:12] *** tfeb is now known as tfb
[16:33:51] *** Quits: tfb (~tfb@88.98.95.237) (Quit: died)
[16:55:25] *** Joins: jao (~jao@92.40.173.17.threembb.co.uk)
[17:09:28] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:24:15] *** Joins: tfeb (~tfb@88.98.95.237)
[17:26:05] *** tfeb is now known as tfb
[17:29:03] *** Quits: jao (~jao@92.40.173.17.threembb.co.uk) (Ping timeout: 256 seconds)
[17:33:34] *** Joins: Kyuvi (~Kyuvi@dsl-hkibng31-58c38d-219.dhcp.inet.fi)
[17:35:31] *** Quits: tfb (~tfb@88.98.95.237) (Quit: died)
[17:50:50] *** Joins: matrox (~bc8147f2@cerf.good1.com)
[17:51:16] *** Quits: xsperry (~xs@user/xsperry) (Killed (NickServ (GHOST command used by aldkjsfasdf!~xs@cpe-188-129-71-242.dynamic.amis.hr)))
[17:51:42] *** Joins: xsperry (~xs@user/xsperry)
[17:57:57] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[18:01:53] *** Joins: gallup (~gallup@192-222-138-215.qc.cable.ebox.net)
[18:06:02] *** Joins: s-liao (~s-liao@101.86.96.21)
[18:15:25] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[18:18:57] *** Quits: Darkcoal (~user@139.64.51.226) (Ping timeout: 240 seconds)
[18:19:04] *** Joins: seninha (~seninha@user/seninha)
[18:19:36] *** Joins: civodul (~user@guix/contributor/civodul)
[18:26:45] *** gallup is now known as aouestbillie
[18:27:21] *** Joins: Everything (~Everythin@37.115.210.35)
[18:32:51] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Quit: ZNC 1.8.2 - https://znc.in)
[18:36:27] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[18:40:12] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[18:43:05] *** Joins: jao (~jao@92.40.173.17.threembb.co.uk)
[18:52:02] *** Quits: sdu (~sidu@185.44.146.61) (Remote host closed the connection)
[19:00:51] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Ping timeout: 256 seconds)
[19:08:20] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[19:29:54] *** Joins: monaaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:30:19] *** Joins: Darkcoal (~user@139.64.51.226)
[19:33:17] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:582f:142b:19c3:9520)
[19:33:17] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:582f:142b:19c3:9520) (Changing host)
[19:33:18] *** Joins: skapata (~Skapata@user/skapata)
[19:33:24] *** Joins: johnjaye (~pi@154.6.152.74)
[19:41:05] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[19:41:39] *** Quits: aouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[19:54:16] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[19:55:09] *** Joins: aeth (~aeth@user/aeth)
[20:24:16] *** Joins: ouestbillie (~gallup@modemcable057.194-20-96.mc.videotron.ca)
[20:24:16] *** Joins: aouestbillie (~gallup@modemcable057.194-20-96.mc.videotron.ca)
[20:34:29] *** Quits: lazr (~lazr@45.76.248.123) (Ping timeout: 250 seconds)
[20:35:11] *** Quits: taw10 (~taw@46.235.227.49) (Ping timeout: 252 seconds)
[20:35:20] *** Joins: taw10 (~taw@46.235.227.49)
[20:35:45] *** Joins: lazr (~lazr@45.76.248.123)
[20:53:27] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[21:01:09] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[21:07:25] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 240 seconds)
[21:09:30] *** Joins: aeth (~aeth@user/aeth)
[21:36:41] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 256 seconds)
[21:38:23] *** Joins: johnjaye (~pi@154.6.152.74)
[21:44:06] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[21:52:20] *** Joins: nullx002 (~nullx002@2402:8100:3981:7659:4510:6c7:3fc2:bf2c)
[21:53:07] *** Joins: sdu (~sidu@185.44.146.61)
[22:12:57] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 256 seconds)
[22:14:38] *** Joins: johnjaye (~pi@154.6.152.74)
[22:14:57] *** Joins: shawnw (~shawn_w@152.44.212.188)
[22:19:54] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 256 seconds)
[22:31:25] *** Quits: daviid (~user@179.210.52.91) (Ping timeout: 268 seconds)
[22:33:39] *** Joins: johnjaye (~pi@154.6.152.74)
[22:38:36] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 256 seconds)
[22:42:25] *** Joins: johnjaye (~pi@154.6.152.74)
[22:46:05] *** Joins: arpunk (~arpunk@user/arpunk)
[22:46:24] *** Quits: Kyuvi (~Kyuvi@dsl-hkibng31-58c38d-219.dhcp.inet.fi) (Ping timeout: 256 seconds)
[22:47:25] *** Quits: johnjaye (~pi@154.6.152.74) (Ping timeout: 240 seconds)
[22:49:39] *** Joins: johnjaye (~pi@154.6.152.74)
[23:02:49] *** Joins: wnklmnn (~wnklmnn@2a02:908:4e2:9740:2d8:61ff:fef9:b4c2)
[23:05:45] *** Quits: matrox (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[23:06:58] *** Quits: rgherdt_ (~rgherdt@ip5f5af455.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[23:13:47] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:c53f:d83a:dd8d:27ab)
[23:15:19] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Quit: leaving)
[23:29:10] *** Joins: _73 (~user@pool-96-233-64-53.bstnma.fios.verizon.net)
[23:31:24] *** Parts: _73 (~user@pool-96-233-64-53.bstnma.fios.verizon.net) ()
[23:31:42] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[23:42:15] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Remote host closed the connection)
[23:49:14] *** Joins: algae (~algernon@170.10.246.117)
[23:52:44] *** Quits: evdubs (~evdubs@user/evdubs) (Quit: Leaving)
[23:55:56] *** Joins: evdubs (~evdubs@user/evdubs)
