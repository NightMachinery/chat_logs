[10:23:57] *** Quits: larryv (~larryv@zsh/patchmanager/larryv) (Ping timeout: 240 seconds)
[21:11:41] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[21:12:49] <bn_work> hi, grep 2.5.1-FreeBSD, is there no way to do a pattern match on foo but _not_ if the line begins with # (ex: a comment char)?  does one need to use the more awkward find?
[21:13:47] <bn_work> I was trying to concoct something with egrep but my powers are failing me... :/
[21:19:21] <bn_work> Is https://stackoverflow.com/a/23583655 supported in the above version's ERE?
[21:30:08] <bn_work> when I try to do `egrep -IRwin '^(?!#).*' .` I just get `egrep: repetition-operator operand invalid`, so I'm guessing "no"? :/
[21:31:01] <bn_work> I guess I can simplify it by leaving out the .* at the end but the result is the same
[21:32:25] <bn_work> ok, was able to accomplish it in 2 steps but probably not the most efficient, ex:  egrep -IRwin -v '^#' . | grep "foo"
[21:54:50] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 256 seconds)
[22:01:30] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[23:20:29] <OnlineCop> bn_work: You're correct that you can't do it in a single step with egrep; I've downloaded GNU grep for this very reason so I can use its PCRE `-p` flag to accomplish that kind of thing.
[23:27:42] <OnlineCop> (GNU grep): `grep -PIRwin '^#.*(*SKIP)(*F)|foo' .`
[23:45:17] <OnlineCop> The first portion `...(*SKIP)(*F)` will match an entire line starting with '#', then basically discard it and move the bumpalong so none of the alternations try at the same starting place. Then any of the remaining `|foo|bar|baz` alternations will match whenever the line DOESN'T start with '#'.
