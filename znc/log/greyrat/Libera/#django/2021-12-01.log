[00:09:03] *** Joins: The_Jag (~The_Jag@host-79-13-66-68.retail.telecomitalia.it)
[00:19:26] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[00:30:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[00:30:38] *** Quits: Tas-sos (~Tas-sos@46.198.212.72) (Ping timeout: 252 seconds)
[00:31:15] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[00:31:45] *** Joins: fikran (~fikran@user/fikran)
[00:33:33] *** Quits: Oxygene (~Oxygene@lfbn-lil-1-421-45.w81-49.abo.wanadoo.fr) (Quit: Leaving)
[00:36:48] *** Joins: maroloccio (~marolocci@151.53.155.184)
[00:44:22] *** Joins: djapo (~archangel@user/djapo)
[00:44:38] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[00:46:12] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Client Quit)
[00:57:39] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[00:57:45] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[00:57:47] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[00:57:55] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[00:58:13] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[01:00:05] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[01:00:52] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 264 seconds)
[01:01:07] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Client Quit)
[01:01:19] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[01:01:35] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Client Quit)
[01:02:03] *** Joins: GinF (~GinFuyou@reya.cloud.tilaa.com)
[01:03:00] *** none is now known as stdout
[01:04:14] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[01:09:24] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[01:15:27] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[01:37:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:48:07] *** Joins: dre (~dre@2001:8003:c932:c301:a3be:66e5:a03e:cca3)
[01:50:30] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[01:50:46] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[02:03:27] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[02:04:25] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[02:05:35] *** Joins: tjni (~tjni@c-98-33-101-142.hsd1.ca.comcast.net)
[02:08:11] *** Quits: dre (~dre@2001:8003:c932:c301:a3be:66e5:a03e:cca3) (Remote host closed the connection)
[02:08:58] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[02:10:56] *** Joins: dre (~dre@2001:8003:c932:c301:1276:3400:25a9:855)
[02:10:56] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 256 seconds)
[02:11:13] <tjni> Hi all, I am looking into fixing https://code.djangoproject.com/ticket/25947 and need a little guidance.
[02:12:05] <tjni> The specific code design question I have is about this comment on that ticket: "I guess this might be tricky to fix for reasons similar to this comment in the file: "We need to use DEFAULT_DB_ALIAS here, as QuerySet does not have (nor should it have) knowledge of which connection is going to be used."". I notice that the QuerySet class does take in
[02:12:05] <tjni> a "using" parameter that appears to correspond to the database connection. Is this comment still what we want to do, given this?
[02:13:43] <dre> sounds to me like comment is out dated.
[02:13:50] <dre> I'd say do it tjni, good find
[02:15:37] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[02:15:51] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[02:16:24] <tjni> got it! I'll take a stab at it then to plumb this parameter through to where it's used. I have one other question related to unit testing such a change. it feels like I need a way to configure a settings.py with a different, dummy DB in order to observe the difference in behavior. Is it something for which there's precedence for already?
[02:19:16] <dre> there should be an "override.settings" decorator iirc
[02:19:38] <tjni> that's enough info for me to start digging in. thank you so much
[02:22:24] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[02:30:44] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: See you later :))
[02:31:58] *** Joins: qurls (~user@2603-9000-b30e-f600-8dce-20ac-b5f8-34f1.inf6.spectrum.com)
[02:34:41] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[02:35:27] *** Parts: qurls (~user@2603-9000-b30e-f600-8dce-20ac-b5f8-34f1.inf6.spectrum.com) (ERC (IRC client for Emacs 27.2))
[02:39:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[02:41:06] *** Joins: fikran (~fikran@user/fikran)
[02:42:41] *** Joins: Atque (~Atque@user/atque)
[02:46:04] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[02:55:57] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[02:58:04] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[03:01:10] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[03:03:02] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Client Quit)
[03:03:33] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[03:12:20] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[03:15:34] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:19:24] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[03:22:24] *** Joins: ianthrive (~ianthrive@166.70.191.9)
[03:23:59] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[03:29:05] *** Quits: The_Jag (~The_Jag@host-79-13-66-68.retail.telecomitalia.it) (Quit: The_Jag)
[03:30:03] *** Quits: GinF (~GinFuyou@reya.cloud.tilaa.com) (*.net *.split)
[03:30:03] *** Quits: wht (~wht@havoc.proulx.com) (*.net *.split)
[03:30:03] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[03:30:03] *** Quits: nathanhi (~nathanhi@user/nathanhi) (*.net *.split)
[03:30:03] *** Quits: Elzington (~Elzington@static-68-235-44-44.cust.tzulo.com) (*.net *.split)
[03:30:03] *** Quits: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (*.net *.split)
[03:30:03] *** Quits: Throgkt (~Throgkt@user/throgkt) (*.net *.split)
[03:30:03] *** Quits: Kalov (~Thunderbi@181.226.249.159) (*.net *.split)
[03:30:03] *** Quits: zkanda (~zkanda@box.makean.art) (*.net *.split)
[03:30:03] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (*.net *.split)
[03:30:03] *** Quits: hylje (~hylje@ponie.fi) (*.net *.split)
[03:30:03] *** Quits: en7ropy (~en7ropy@c-73-60-111-180.hsd1.ma.comcast.net) (*.net *.split)
[03:30:03] *** Quits: WhyNotHugo (bc7d0f0b52@2604:bf00:561:2000::28) (*.net *.split)
[03:30:04] *** Quits: DLange (~DLange@about/linux/staff/DLange) (*.net *.split)
[03:30:23] *** Joins: WhyNotHugo (bc7d0f0b52@2604:bf00:561:2000::28)
[03:31:50] *** Joins: Kalov (~Thunderbi@181.226.249.159)
[03:32:04] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[03:32:15] *** Joins: DLange (~DLange@about/linux/staff/DLange)
[03:32:19] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[03:32:42] *** Joins: nathanhi (~nathanhi@user/nathanhi)
[03:32:43] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[03:33:03] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 256 seconds)
[03:34:11] *** Quits: ianthrive (~ianthrive@166.70.191.9) (Ping timeout: 256 seconds)
[03:35:11] *** Joins: hylje (~hylje@ponie.fi)
[03:35:16] *** Joins: simplicity (~yti@user/simplicity)
[03:40:03] *** Joins: FCS (FurCoatSta@159.196.89.115)
[03:42:14] *** Quits: lazzurs (~lazzurs@user/lazzurs) (Quit: Ping timeout (120 seconds))
[04:03:30] *** justache is now known as totallynotjustac
[04:04:00] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[04:04:10] *** totallynotjustac is now known as justache
[04:08:45] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[04:26:26] *** Quits: lod (~lod@cyber-anlage.de) (Quit: fuck off)
[04:27:10] *** justache is now known as zoite
[04:28:14] *** Rikem is now known as justache
[04:28:44] *** justache is now known as Guest7502
[04:29:11] *** zoite is now known as z0ite
[04:29:17] *** Guest7502 is now known as Rikem
[04:30:26] *** Joins: lod (~lod@cyber-anlage.de)
[04:48:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[04:50:28] *** Joins: fikran (~fikran@user/fikran)
[04:53:15] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[04:58:51] *** Quits: rje (~rje@65.141.156.170) (Quit: My computer has gone to sleep. ZZZzzz…)
[05:06:34] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[05:16:36] *** Joins: bambanxx (~bambanx@181-163-38-223.baf.movistar.cl)
[05:19:48] *** Joins: rje (~rje@50.35.241.164)
[05:21:33] *** Quits: rje (~rje@50.35.241.164) (Client Quit)
[05:28:42] *** Rikem is now known as z1ite
[05:33:33] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[05:38:05] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[05:42:32] *** z1ite is now known as Rikem
[05:45:17] *** Joins: yanchai (~yanchai@222.127.97.162)
[05:46:53] *** Quits: Rikem (~mike@user/rikem) (Ping timeout: 252 seconds)
[05:54:05] *** Joins: rje (~rje@50.35.241.164)
[05:54:30] *** Quits: tjni (~tjni@c-98-33-101-142.hsd1.ca.comcast.net) (Quit: Client closed)
[05:55:43] *** Quits: rje (~rje@50.35.241.164) (Client Quit)
[05:56:41] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[05:58:11] *** Joins: rje (~rje@50.35.241.164)
[05:59:54] *** Quits: rje (~rje@50.35.241.164) (Client Quit)
[06:02:22] *** Joins: rje (~rje@50.35.241.164)
[06:06:41] *** Quits: rje (~rje@50.35.241.164) (Ping timeout: 252 seconds)
[06:08:23] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:28:54] *** Quits: bambanxx (~bambanx@181-163-38-223.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:31:00] *** Joins: mattil (~mattil@87-92-46-202.bb.dnainternet.fi)
[06:35:31] *** Quits: mattil (~mattil@87-92-46-202.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[06:58:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:59:49] *** Joins: fikran (~fikran@user/fikran)
[07:03:40] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[07:03:50] *** Joins: rje (~rje@50.35.241.164)
[07:08:17] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[07:33:25] *** Joins: bambanxx (~bambanx@181-163-38-223.baf.movistar.cl)
[07:38:55] *** Quits: MarkusH (MarkusH@django/moderator/MarkusH) (Quit: ZNC - http://znc.sourceforge.net)
[07:39:11] *** Joins: MarkusH (MarkusH@django/moderator/MarkusH)
[07:39:11] *** ChanServ sets mode: +v MarkusH
[07:53:41] *** Quits: sreve_ (~quassel@p4ff44be4.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[07:54:13] *** Joins: sreve (~quassel@p4ff44972.dip0.t-ipconnect.de)
[07:54:28] *** Quits: maroloccio (~marolocci@151.53.155.184) (Quit: WeeChat 3.0)
[07:54:40] *** Quits: zBeeble (~zBeeble@2001:1928:1::35) (Quit: Leaving)
[07:59:04] *** Joins: akspecs (00cc8321af@user/akspecs)
[08:02:10] *** Quits: bambanxx (~bambanx@181-163-38-223.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:20:58] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:23:17] *** Joins: zBeeble (~zBeeble@2001:1928:1::35)
[08:33:32] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[08:33:33] *** z0ite is now known as justache
[08:38:32] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[08:40:47] *** Quits: schinckel (uid38120@id-38120.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[09:07:10] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[09:07:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[09:09:10] *** Joins: fikran (~fikran@user/fikran)
[09:10:01] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:12:35] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[09:14:06] *** Quits: akspecs (00cc8321af@user/akspecs) (Remote host closed the connection)
[09:14:12] *** Joins: akspecs (00cc8321af@user/akspecs)
[09:16:21] *** Joins: aplainzetakind (~johndoe@captainludd.powered.by.lunarbnc.net)
[09:29:09] *** Joins: fdan (~fdan@103.215.168.1)
[09:37:59] *** Quits: yanchai (~yanchai@222.127.97.162) (Ping timeout: 256 seconds)
[10:23:19] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 256 seconds)
[10:33:08] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:59:14] *** Joins: luigibu (~luigi@80.30.201.209)
[11:00:52] *** Quits: luigibu (~luigi@80.30.201.209) (Client Quit)
[11:04:14] *** Joins: luigibu (~luigi@80.30.201.209)
[11:10:09] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[11:13:03] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[11:16:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[11:18:31] *** Joins: fikran (~fikran@user/fikran)
[11:21:50] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[11:23:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[11:24:16] *** Joins: Rikem (~mike@user/rikem)
[11:35:59] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[11:37:58] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[11:40:43] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 252 seconds)
[11:56:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:56:21] *** ChanServ sets mode: +v EvilDMP
[12:06:24] *** Joins: jmd (~user@de.cellform.com)
[12:08:43] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:10:28] *** Quits: preston (~preston@097-080-132-008.res.spectrum.com) (Ping timeout: 256 seconds)
[12:11:52] *** Joins: VaniaPy (~VaniaPy@46.12.146.107.dsl.dyn.forthnet.gr)
[12:11:54] *** Parts: VaniaPy (~VaniaPy@46.12.146.107.dsl.dyn.forthnet.gr) ()
[12:12:10] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 256 seconds)
[12:21:56] *** Joins: Ilyu (~quassel@78.202.228.230)
[12:22:19] *** Quits: Ilyu (~quassel@78.202.228.230) (Client Quit)
[12:41:57] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[12:44:47] *** Quits: akspecs (00cc8321af@user/akspecs) (Remote host closed the connection)
[12:44:54] *** Joins: akspecs (00cc8321af@user/akspecs)
[12:55:56] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:02:10] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[13:04:00] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:05:14] *** Joins: The_Jag (~The_Jag@host-79-36-38-58.retail.telecomitalia.it)
[13:08:43] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[13:19:36] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[13:25:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:27:41] *** Joins: xkuru (~xkuru@user/xkuru)
[13:27:52] *** Joins: fikran (~fikran@user/fikran)
[13:32:56] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:34:36] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[13:41:10] *** Quits: dre (~dre@2001:8003:c932:c301:1276:3400:25a9:855) (Ping timeout: 268 seconds)
[13:59:36] *** Joins: dre (~dre@2001:8003:c932:c301:3452:4883:fbcf:635)
[14:18:08] <mad_moses> Hi, is there something a wildcard for the loggers? I want to log everything not only django related errors. Not sure how to do that?
[14:19:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:24:29] <apollo13> the logging framework is hierachical so, '' or 'root' as logger name should handle everything not yet handled
[14:28:18] *** Joins: jmd (~user@de.cellform.com)
[14:40:50] <mad_moses> apollo13: '' and propagate=True will captcher everything?
[14:53:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:53:49] *** ChanServ sets mode: +v EvilDMP
[14:55:41] *** Quits: fdan (~fdan@103.215.168.1) (Quit: Client closed)
[15:10:37] <apollo13> mad_moses: I don't think so, but I never fully understood logging
[15:20:03] *** Joins: dez (uid92154@user/dez)
[15:27:59] *** Quits: nyany (~nyany@dronebl/admin/cat) (Quit: quit = yes)
[15:29:01] *** Joins: nyany (~nyany@dronebl/admin/cat)
[15:31:44] <ktosiek[m]> Can I have a field named `fields` in DRF? It seems it's getting ignored
[15:35:12] <ktosiek[m]> nevermind, it works
[15:35:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[15:37:13] *** Joins: fikran (~fikran@user/fikran)
[15:37:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:40:06] *** Quits: jmd (~user@de.cellform.com) (Read error: Connection reset by peer)
[15:41:33] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:42:12] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:48:53] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:48:53] *** ChanServ sets mode: +v EvilDMP
[15:56:00] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[16:03:00] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[16:03:28] *** Joins: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[16:07:17] <mad_moses> apollo13: same to me. I do not really undestand the logging.
[16:09:36] <GinFuyou> We should ask FunkyBob to write a dummies guide to django logging. I also lost that my seemingly same setups work differently
[16:11:04] <mad_moses> Thumbs up
[16:12:32] <mad_moses> GinFuyou: does FunkyBob have a blog?
[16:13:19] <GinFuyou> https://blog.tinbrain.net/index.html
[16:26:26] <mad_moses> thx
[16:30:43] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[16:31:07] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[16:32:38] *** Joins: xkuru (~xkuru@user/xkuru)
[16:44:58] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:49:22] <apollo13> mad_moses: https://pypi.org/project/logging_tree/ can be useful
[16:54:19] <mad_moses> apollo13: nice! maybe this will give me a better undestanding why logging is not working as expected
[17:20:50] *** Joins: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net)
[17:23:38] <ironbeard> Is it possible to use get_or_create where you "get" based on a M2M field? I have a "Data" model that has an FK to "Region" and an M2M to "Occupation", and when I do `data = Data.objects.get_or_create(region=Region.objects.get(pk=1), occupations=Occupation.objects.filter(<valid filter here>))" I get the error: "The QuerySet value for an exact lookup must be limited to one result using slicing."
[17:28:41] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:28:55] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:29:49] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:31:23] <GinFuyou> ironbeard, that rather looks like issues with your occupations filter in general
[17:33:36] <ironbeard> GinFuyou I learned that error usually comes up when Django expects a single object and not a queryset.. I guess I might need to re-think what I'm trying to do. In my head, a "Data" object cosists of a unique paring of a Region with a set of Occupations. But I'm not sure if M2M works that way. I think Djano is expecting something like `occupations__in` instead of specifying exactly what set of Occupation
[17:33:38] <ironbeard> objects are involved.
[17:34:33] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[17:34:53] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[17:37:26] *** Joins: luigibu (~luigi@80.30.201.209)
[17:39:02] <ironbeard> working on getting a good dpaste with traceback
[17:42:29] <ironbeard> https://dpaste.org/wVsm
[17:43:54] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[17:44:12] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:44:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[17:46:34] *** Joins: fikran (~fikran@user/fikran)
[17:50:44] <GinFuyou> ironbeard, yes, exactly, I don't think you can just do like filter(m2m_items=[1,3,12])
[17:51:36] <GinFuyou> I remember those types of queries were discussed here but I don't really remember a solution
[17:51:45] <ironbeard> Yeah, hmm.
[17:52:56] <ironbeard> https://stackoverflow.com/questions/16324362/django-queryset-get-exact-manytomany-lookup looks promising
[17:54:24] *** Joins: stdout (~stdout@216.163.21.11)
[17:55:32] <ironbeard> But it's possible that my Occupation queryset could contain, eg 322 Occupations. Generally speaking, the set of Occupation objects that I want to associated with the OccupationData object will come from filtering Occupation on one of the CharField (education, training, requirement).. so I suppose I might just have to make education/training/requirement fields on OccupationData (instead of Occupations M2M) and
[17:55:34] <ironbeard> then use those to filter Occupations when I use them in logic
[17:59:15] *** Joins: yanchai (~yanchai@115.147.17.121)
[18:01:48] *** Quits: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net) (Ping timeout: 256 seconds)
[18:05:09] *** Joins: dor (~erg@188.147.33.110.nat.umts.dynamic.t-mobile.pl)
[18:06:17] *** Quits: yanchai (~yanchai@115.147.17.121) (Ping timeout: 256 seconds)
[18:07:37] *** Joins: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net)
[18:08:01] <ironbeard> ugh, client crashed. Did I miss anything GinFuyou? no worries if not, sorry to tag ya.
[18:13:01] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:19:51] *** Joins: Elzington (~Elzington@static-68-235-44-28.cust.tzulo.com)
[18:28:27] *** Joins: dkliban_ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[18:30:50] *** Quits: dkliban (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 252 seconds)
[18:33:29] *** Quits: dkliban_ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 256 seconds)
[18:33:55] *** Joins: amanjhalmat12 (~amanjhalm@212.237.123.164)
[18:34:34] *** Quits: dor (~erg@188.147.33.110.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[18:35:52] <amanjhalmat12> hello dear friends I have a good background with backend dev now i want to start with Django   i finished that basic doc  about python
[18:35:53] <amanjhalmat12> https://learnxinyminutes.com/docs/python/
[18:36:08] <amanjhalmat12> that would be enough to start django ?
[18:37:08] <ironbeard> Django has an excellent tutorial you should go through
[18:37:33] <ironbeard> https://www.djangoproject.com/start/
[18:38:35] *** Quits: justache (~justache@user/justache) (Ping timeout: 256 seconds)
[18:38:40] <amanjhalmat12> great thank you so much
[18:39:27] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[18:40:01] <amanjhalmat12> just I said I have basic knowledge about python lang u think that will be enough?
[18:40:12] <bparker> no
[18:40:35] <amanjhalmat12> so what should i do?
[18:40:48] <bparker> keep learning more
[18:40:53] <apollo13> basic knowledge in python is fine but that tutoria you linked seems rather minimal
[18:41:29] <apollo13> but you will see how hard or easy the django tutorial is for you then
[18:41:31] <amanjhalmat12> well i just read that tutoria
[18:42:06] <amanjhalmat12> so you suggest that keep learning python?
[18:42:35] <apollo13> no I am suggesting you can try the django tutorial but if it seems to hard for you python-wise you might wanna play a bit more with python
[18:43:01] <apollo13> or just bite the dust and work through it :D people learn differently / at different paces -- you have to figure out for yourself what makes more sense
[18:44:53] <amanjhalmat12> yes of course you are right and asking things not that bad i just wanna thank you all many thanks :)
[18:46:39] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[18:53:41] *** Quits: amanjhalmat12 (~amanjhalm@212.237.123.164) (Quit: Client closed)
[18:54:43] *** Joins: fdan (~fdan@192.146.154.3)
[18:59:43] *** Joins: justache (~justache@user/justache)
[19:07:47] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:a472:b0e6:a90b:48d9)
[19:07:48] <pycode1> hello
[19:11:42] *** Quits: ironbeard (~geoffrey@130-45-89-178.dyn.grandenetworks.net) (Quit: WeeChat 2.3)
[19:11:49] *** Joins: amanjhalmat12 (~amanjhalm@212.237.123.164)
[19:11:51] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[19:13:25] *** Joins: justache (~justache@user/justache)
[19:16:20] *** Quits: amanjhalmat12 (~amanjhalm@212.237.123.164) (Client Quit)
[19:18:45] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[19:25:38] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[19:31:58] *** Joins: edigiacomo (~edg@185.82.168.12)
[19:32:34] *** justache is now known as justSleigh
[19:35:24] *** Joins: bambanxx (~bambanx@181-163-38-223.baf.movistar.cl)
[19:45:34] *** Quits: rje (~rje@50.35.241.164) (Quit: My computer has gone to sleep. ZZZzzz…)
[19:46:37] *** Joins: dkliban (~dkliban@174.99.22.188)
[19:48:18] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[19:52:52] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[19:53:01] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Ping timeout: 268 seconds)
[19:53:23] *** Quits: edigiacomo (~edg@185.82.168.12) (Quit: WeeChat 3.3)
[19:53:52] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[19:53:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[19:55:56] *** Joins: fikran (~fikran@user/fikran)
[19:56:26] <mad_moses> I have often a circular import problem in Django (which I mostly not understand). Do you know a good article or some best practices to avoid this kind of problems?
[19:59:57] <GinFuyou> import of what exactly?
[20:01:50] <GinFuyou> Only special case is models, which has a recommended solution, otherwise, just don't import stuff all around, put it into a separate module if needed
[20:02:11] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:08:23] <mad_moses> GinFuyou: I have somewhere a circular import. Do not really undestand where it happens but it is related to a model import.
[20:11:48] <GinFuyou> well, if you have two models that relate to each other, you can't import it
[20:12:27] <GinFuyou> that's why relations fields take string as alternative to class
[20:13:10] <mad_moses> GinFuyou: okay, is it a good idea to use get_model instead of importing Models in my helper/util.py files?
[20:13:29] <mad_moses> some people call them controller.py
[20:14:15] <GinFuyou> not really, you probably structuring your code unoptimally them
[20:14:18] <GinFuyou> *then
[20:15:38] <mad_moses> GinFuyou: in my current case I can not import a Model in my celery tasks.py globally. I have to do the import in the method. Otherwise it fails
[20:17:26] <Wooble> import modules instead of names from them and it's largely not a problem
[20:19:26] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[20:20:46] *** Joins: rje (~rje@65.141.156.170)
[20:21:16] <mad_moses> Wooble: instead of from foo.models import Building => I should do import foo.models and use in my code foo.models.Building() ? (It works but it doesn't look nice)
[20:22:57] <Wooble> mad_moses: it's really the only sensible way to have circular imports, plus it meets google's style guidelines. OTOH, refactoring to eliminate the circularity is probably nice too.
[20:23:23] *** Joins: slav0nic (slav0nic@python.su)
[20:26:29] <mad_moses> Wooble: I do not undestand why it is circular. I have an empty tasks.py and just import one model. Why is it circular? I guess Django is importing my celery tasks.py in a way which makes it circular
[20:27:30] <pycode1> hello everybody i have to call few celery tasks when there is a signal, the code is: https://bpa.st/2ZPA  my problem is that "send_contract_to_company" must run before the other .... the other three tasks order is not important, but the first one yes...
[20:27:49] <pycode1> i create the contract there so it must run before the other
[20:27:52] <pycode1> *others
[20:28:27] <GinFuyou> mad_moses, probably your celery is set somehow else, I import models in my tasks.py as usual
[20:30:42] <mad_moses> GinFuyou: how do you import your tasks? I use app.autodiscover_tasks() in my project/celery.py file
[20:32:58] <GinFuyou> app.config_from_object() \ app.autodiscover_tasks()
[20:34:41] <GinFuyou> pycode1, maybe send tasks from the first task?
[20:35:23] <pycode1> GinFuyou, yes i thought the same but i suppose there is a way to create a kind of pool that execute the tasks sequentially
[20:36:04] <GinFuyou> probably, but not sure if it's trivial
[20:43:05] <mad_moses> GinFuyou: hmm, maybe the import of the models is happening that way in a wrong order? I still use django 2.2 maybe this problem will disappear with a newer version
[20:46:44] *** Joins: zothix (~zoth@user/zothix)
[20:47:43] <zothix> Hi, is there a way where i can make django take " Token null " in authorization header as No user? Django tries to authenticate null token as well and ends up with invalid token.
[20:51:05] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:53:32] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[20:54:51] <mad_moses> zothix: do you use drf? you can easily override the behavior. Just look into the code of the drf and show how the header is handled
[20:59:36] <GinFuyou> mad_moses, pretty sure it was first setup before 2.x
[21:00:20] *** Joins: djapo (~archangel@user/djapo)
[21:03:56] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:05:01] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[21:09:39] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[21:09:53] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 256 seconds)
[21:15:23] <zothix> mad_moses, i am using drf with knox
[21:16:08] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:16:55] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:a472:b0e6:a90b:48d9) (Ping timeout: 250 seconds)
[21:17:51] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[21:18:19] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[21:21:09] *** Quits: dkliban (~dkliban@174.99.22.188) (Ping timeout: 252 seconds)
[21:36:05] *** Quits: bambanxx (~bambanx@181-163-38-223.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:38:17] *** Joins: Oxygene (~Oxygene@lfbn-lil-1-421-45.w81-49.abo.wanadoo.fr)
[21:42:45] *** Quits: kostkon (~kostkon@2a02:587:a116:e46c:7814:108:8592:7c58) (Remote host closed the connection)
[21:47:25] *** Joins: kostkon (~kostkon@2a02:587:a116:e46c:7814:108:8592:7c58)
[21:49:11] *** Joins: bambanxx (~bambanx@181-163-38-223.baf.movistar.cl)
[21:58:39] *** Joins: lazzurs (~lazzurs@user/lazzurs)
[21:58:47] *** Quits: bambanxx (~bambanx@181-163-38-223.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:02:18] *** Joins: dor (~erg@78.11.12.207)
[22:03:12] *** Joins: djapo (~archangel@user/djapo)
[22:03:12] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[22:04:24] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:05:17] *** Joins: fikran (~fikran@user/fikran)
[22:14:12] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:19:49] *** Joins: rowbots (~dirgeable@h96-60-60-73.arvdco.broadband.dynamic.tds.net)
[22:23:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:27:22] *** Joins: dkliban (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[22:27:53] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[22:30:32] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 240 seconds)
[22:37:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:37:33] *** ChanServ sets mode: +v EvilDMP
[22:39:28] *** Quits: Kalov (~Thunderbi@181.226.249.159) (Ping timeout: 256 seconds)
[22:52:44] *** Joins: ST47 (~ST47@wikimedia/st47)
[22:53:02] *** Quits: zothix (~zoth@user/zothix) (Remote host closed the connection)
[23:14:00] *** Joins: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl)
[23:15:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:23:02] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[23:27:31] *** Joins: bambanxx (~bambanx@181-163-38-223.baf.movistar.cl)
[23:37:31] *** Quits: Oxygene (~Oxygene@lfbn-lil-1-421-45.w81-49.abo.wanadoo.fr) (Quit: Leaving)
[23:53:33] *** Joins: audiobirb (~audio@user/audio)
[23:53:48] <debnet> Is there anywhere inside Django's guts a list of all the lookups available on ORM?
[23:57:14] <FunkyBob> hmm
[23:57:22] <FunkyBob> you mean dynamically discover?
[23:58:01] <debnet> Yep !
[23:58:36] <debnet> I'm aiming to build a framework over Django Rest Framework to ease clients to address specific queries against models.
[23:58:47] <debnet> But to achieve that, I have to know all the available lookups.
[23:58:48] <FunkyBob> https://github.com/django/django/blob/4ce59f602ed28320caf3035212cb4d1c5430da2b/django/db/models/query_utils.py#L134
[23:59:32] <FunkyBob> since individual field types can have different lookups... you have to ask each field class
