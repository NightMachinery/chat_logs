[00:02:26] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 250 seconds)
[00:12:54] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[00:25:12] *** Quits: gueriLLaPunK (~textual@75.104.71.73) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:27:29] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[00:35:25] *** Joins: antto (~pewpew@antonsavov.net)
[00:38:24] *** Quits: Iota (~Iota@user/iota) (Ping timeout: 250 seconds)
[00:41:00] *** Quits: Wintermute (~Wintermut@94.46.93.221) (Ping timeout: 250 seconds)
[00:52:30] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (Ping timeout: 264 seconds)
[01:06:06] *** Joins: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net)
[01:06:06] *** Quits: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net) (Changing host)
[01:06:06] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[01:09:11] *** Quits: lazzurs (~lazzurs@user/lazzurs) (Quit: The Lounge - https://thelounge.chat)
[01:17:20] <tolarz> never check for eof caveman 
[01:17:33] <tolarz> in any progarmming language
[01:17:41] <tolarz> just read on until the read function gives an error msg
[01:21:58] *** Joins: nwm (~nwm@2604:3d08:a57f:bbd7:e0b1:a48d:758d:b6cb)
[01:23:13] <MacGyver> tolarz: You've clearly never met C.
[01:23:22] <MacGyver> Errors? What are those?
[01:24:08] <tolarz> i clearly have 
[01:24:12] <tolarz> fread does have errors codes
[01:24:17] <tolarz> so i don't get your point
[01:24:28] <tolarz> while (!feof) is an antipattern
[01:25:05] <nwm> so I'm doing something horribly disgusting: printf "somestring" | sha256sum | cut -f 1 -d' ' | tr '[:lower:]' '[:upper:]' | printf "ibase=16; %s" "$(cat -)" | busybox bc | head -c9
[01:25:51] <nwm> I need to do this for stable uid/gids, wondering if this is cursed
[01:25:57] *** river is now known as riv
[01:27:11] <MacGyver> My point was that C doesn't actually error. You're still checking the return count and *then* checking feof/ferror.
[01:27:21] <MacGyver> So you still check for eof.
[01:27:28] <MacGyver> You just don't do so every loop iteration.
[01:34:02] <Soni> idea: E.164 certificates. it's a lot easier to get a phone number than an IP address, so it should be easy to get E.164 certificates too. and most phone numbers support SMS, which is packet-switched. this would revolutionize DoH.
[01:35:19] <danieldg> it's easier to get a phone number than an IP? News to me.
[01:36:29] <Soni> static phone number you can "prove" control of: $5/mo. static IP address you can "prove" control of: GLHF.
[01:37:00] <Soni> getting certs for IP addresses requires Expensive. getting certs for a phone number? could be done just like DV certs.
[01:37:36] <Soni> granted, you *are* billed per SMS, so the TLS handshake + whatever is required for a DV-equivalent cert could get quite expensive
[01:37:48] <Soni> but all in all it's pretty cheap
[01:37:51] <MacGyver> Soni: What do you mean, "requires expensive"?
[01:38:07] <Soni> MacGyver: you need to pay for IP certificates
[01:38:24] <MacGyver> By which you mean "Let's encrypt doesn't do them"?
[01:38:26] <Soni> just take a look at OpenNIC's DoH/DoT tier 2's
[01:38:35] <Soni> literally none of them have a valid cert
[01:38:58] <Soni> Fusl's anycast might, at some point, but Fusl's anycast don't currently support DoH/DoT
[01:39:55] *** Quits: fatal (0x00@user/fatal) (Ping timeout: 264 seconds)
[01:40:08] <Soni> phone numbers are, by their nature, static by default. this makes them an interesting candidate for DoH/DoT/LE purposes.
[01:40:31] <MacGyver> Except they're not plugged into the internet infrastructure at all.
[01:40:56] <MacGyver> That would be a hurdle.
[01:40:59] <Soni> they do have their own digital infrastructure, yes
[01:41:04] <danieldg> also, they act more like domain names than IPs
[01:41:07] <Soni> so you'd need a special modem for DoH/DoT purposes
[01:41:27] <MacGyver> Can we just call this DNS-over-SMS, abbreviate accordingly, and call it a day?
[01:41:46] <Soni> eh, it's more like TCP-over-SMS
[01:41:47] *** Joins: fatal (0x00@user/fatal)
[01:42:11] <MacGyver> Equally problematic abbreviation, I like it.
[01:42:14] <Soni> run-your-own-TCP-based-protocol-on-top-of-SMS (including TLS)
[01:42:36] <Soni> port numbers included
[01:43:30] <Soni> oh yeah, phone numbers don't generally support anycast, but that's okay
[01:44:16] <danieldg> ye olde pagers are anycast
[01:44:30] <danieldg> if they still run that network
[01:44:46] <danieldg> actually, that's more like broadcast
[01:44:57] <Soni> you can get anycast if you pay the provider tho
[01:45:10] <Soni> or well
[01:45:25] <Soni> that's more like link-local but w/e
[01:45:59] <Soni> (numbers that are local to the operator)
[01:47:33] <Soni> anyway, who's in?
[01:47:55] <Soni> the MTU is ass (128 bytes) but eh good enough
[01:48:10] <danieldg> I'll just forward my SMS to my email so I don't need my phone
[01:48:17] <danieldg> that solves this problem, right?
[01:48:35] <Soni> at least it doesn't need to fit IP headers into the MTU
[01:48:53] <MacGyver> Don't modern phone networks basically run over IP anyway?
[01:49:10] <MacGyver> Or maybe that's just the backbone...
[01:49:21] <Soni> pretty much, yeah
[01:49:41] <Soni> anyway, who's in?
[01:50:04] <MacGyver> Nope, sorry, SMS is too expensive for my tastes :P
[01:50:13] <MacGyver> I'd only be able to make 200 requests per month.
[01:50:52] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 252 seconds)
[01:51:57] <Soni> you don't have 1000 requests per week?
[01:52:21] <MacGyver> No, over here we kinda abandoned SMS a decade ago.
[01:52:40] <MacGyver> Unlimited SMS plans aren't really a thing.
[01:52:56] <MacGyver> And *lots* of SMS tends to get moronically expensive.
[01:53:10] <MacGyver> And there's really no reason because the whole country is on Whatsapp right
[01:53:14] <Soni> these are reasons for doing it :p
[01:53:31] <Soni> eh, who cares about end-to-end encryption of SMS
[01:53:48] *** Quits: ronn (~N5IQ@38.70.11.156) (Ping timeout: 252 seconds)
[01:53:54] <MacGyver> No I mean.
[01:54:05] <MacGyver> Nobody gets an SMS plan beyond "Eh, just a few per month".
[01:54:06] <Soni> encrypting the DNS resolver makes sense tho
[01:54:16] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[01:54:16] <Soni> well yeah because SMS isn't useful
[01:54:24] <Soni> so make it useful :p
[01:56:02] *** Joins: ronn (~N5IQ@adsl-76-193-120-181.dsl.rcsntx.sbcglobal.net)
[01:57:38] <tolarz> MacGyver: well, sounds to me more like nitpicking :-)
[01:57:38] *** Quits: ronn (~N5IQ@adsl-76-193-120-181.dsl.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[01:57:52] <tolarz> i've stopped caring about syntactical details
[01:57:55] <tolarz> it's all about semantics
[01:58:17] <MacGyver> tolarz: When you tell someone to "never do something", those kind of nitpicks matter.
[01:58:38] <tolarz> :)
[01:59:13] <Riastradh> i am the very syntax of a certain C semantics nerd
[01:59:21] *** Joins: ronn (~N5IQ@adsl-76-193-120-181.dsl.rcsntx.sbcglobal.net)
[01:59:47] *** Quits: ronn (~N5IQ@adsl-76-193-120-181.dsl.rcsntx.sbcglobal.net) (Client Quit)
[02:01:06] <MacGyver> Doesn't really allow you to go anywhere with the lyrics, does it?
[02:01:58] <MacGyver> I don't really get beyond "bird" for a rhyme.
[02:02:05] <MacGyver> Oh, maybe "third".
[02:02:55] <sarnold> "curd" and "kurd"
[02:03:03] <sarnold> "nerd"
[02:03:14] <sarnold> pferd
[02:03:55] <Riastradh> heard, third, preferred, surd, interred, blurred, purred -- lotta rhymes
[02:05:52] <Riastradh> o/` undefined behaviour in weird spots of which you haven't heard o/`
[02:08:15] <Riastradh> o/` devices of Tom Duff with whom the language lawyers all demurred o/`
[02:08:24] <Riastradh> plenty of opportunities
[02:09:26] *** Quits: cehteh (~ct@mue-88-130-71-198.dsl.tropolys.de) (Remote host closed the connection)
[02:11:06] <sarnold> 'heard', very nice
[02:11:14] <sarnold> very unexpected :)
[02:13:52] <Riastradh> o/` highest-power surds in C are powers of one third o/`
[02:14:26] <Riastradh> (other words in that line may not be great, for about 30sec of effort, but you can totally rhyme the heck out of this stuff)
[02:16:38] *** Joins: cehteh (~ct@mue-88-130-71-198.dsl.tropolys.de)
[02:18:43] <Riastradh> stirred
[02:18:48] <Riastradh> furred
[02:18:55] <MacGyver> In my defense, I'm not a native speaker.
[02:19:14] <MacGyver> And I have no idea what a surd is.
[02:20:43] <Riastradh> a surd is a root of a polynomial in an extension field, e.g. sqrt(2) over Q is a surd (in a quadratic extension)
[02:21:25] <Riastradh> (slightly archaic term, lends itself to absurdity like this Gilbert & Cullivan patter song)
[02:22:46] <Riastradh> spurred
[02:23:07] <Riastradh> incurred
[02:23:08] *** Joins: lazzurs (~lazzurs@user/lazzurs)
[02:27:36] *** Quits: chomwitt (~Pitsikoko@athedsl-20549.home.otenet.gr) (Ping timeout: 250 seconds)
[02:28:59] *** Joins: franco (~franco@37.218.244.249)
[02:32:37] <sarnold> keep it up and someone's going to be interred :)
[02:38:24] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 245 seconds)
[02:43:51] *** Joins: Fluxx (~Fluxx@user/fluxx)
[02:45:46] *** Quits: lazzurs (~lazzurs@user/lazzurs) (Quit: The Lounge - https://thelounge.chat)
[02:46:58] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 252 seconds)
[02:53:50] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[02:59:27] <Gravis> danieldg: turns out that byte order becomes a big issue when you use native types.  sorting this out negates all benefits.
[02:59:38] *** Joins: lazzurs (~lazzurs@user/lazzurs)
[03:00:18] <Gravis> however, fully utilizing bytes had minor benefits.  size is down to 1272 bytes.
[03:03:39] <danieldg> uh, I'm not sure why that would cause issues.  At worst you write two implementations, one BE and one LE
[03:04:06] <danieldg> in either case, sorting it out should take about 2 instructions at the end
[03:04:23] <danieldg> __builtin_bswap64 is useful here
[03:17:24] *** Joins: ionface_ (~ionface@user/ionface)
[03:18:09] *** Quits: F1nny (~f1nny@user/f1nny) (Quit: Termd)
[03:18:16] *** Quits: ionface (~ionface@user/ionface) (Read error: Connection reset by peer)
[03:39:37] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:43:20] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[03:43:20] *** Wulf4 is now known as Wulf
[03:54:03] *** Quits: ariedro (~ariedro@user/ariedro) (Quit: WeeChat 3.1)
[03:58:03] <Riastradh> conditional bswaps are evil; the le32dec/le32enc style makes a big improvement for clarity
[03:59:57] <sarnold> yes please
[04:00:30] <danieldg> true, that does make for more readable code
[04:06:15] <Gravis> the problem is that the gains are so minor that adding byteswaps negates them
[04:07:02] <Gravis> now if there way to multiply and carry the that would change things
[04:07:04] <danieldg> huh, I'm surprised.  But I guess I can see it
[04:07:17] <danieldg> Gravis: there is, kinda
[04:07:41] <danieldg> you can do 64->128 multiplies
[04:08:56] <Gravis> what does that mean?
[04:09:13] <danieldg> uint64 * uint64 produces a 128-bit integer
[04:09:43] <Gravis> does this work on non-x86_64 systems?
[04:09:44] <danieldg> in x86 asm it's in two registers, but in the compiler it's just as __uint128_t
[04:10:13] <danieldg> if the CPU has the opcode, yes, otherwise it'll be a compiler library function
[04:10:29] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[04:11:06] <Gravis> so it works on 32bit x86?
[04:11:32] <danieldg> no, it's a library function there.  So is 64-bit add, btw.
[04:12:00] <Gravis> and we're right back to where we started.
[04:12:24] <danieldg> oh, are you measuring your code on 32-bit asm?
[04:12:39] <danieldg> I wasn't aware that was your target
[04:12:58] <danieldg> basically none of the 64-bit advice would apply well there
[04:13:46] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[04:14:25] <danieldg> the SHA256 constants are only 32 bits, though, so you shouldn't need the extra precision beyond double
[04:17:44] <Gravis> sha 512 is 64-bit versions
[04:18:01] <danieldg> sure, but you usually only want to use that on 64-bit systems
[04:18:43] <Gravis> Â¯\_(ãƒ„)_/Â¯
[04:19:03] <danieldg> it's pretty hard to find an x86-32 system these days anyway
[04:20:29] <Gravis> you aren't wrong
[04:23:07] <danieldg> but anyway, I agree 32-bit adc and so forth don't save you as much as the 64-bit versions, so it'll be closer to just leaving the loops in, and then 8bit vs 32bit is only a perf change
[04:23:50] *** Joins: frost (~frost@59.71.241.190)
[04:27:31] *** Joins: msantana (~msantana@ppp-124-122-40-252.revip2.asianet.co.th)
[04:27:33] *** Quits: msantana (~msantana@ppp-124-122-40-252.revip2.asianet.co.th) (K-Lined)
[04:34:08] *** Quits: franco (~franco@37.218.244.249) (Read error: Connection reset by peer)
[04:39:28] *** Joins: dudeski (~dudeski@69-230-153-205.lightspeed.irvnca.sbcglobal.net)
[05:07:58] *** Quits: dudeski (~dudeski@69-230-153-205.lightspeed.irvnca.sbcglobal.net) (Quit: Connection closed)
[05:13:51] <Gravis> using all 8 bits seems to be slightly better as it makes comparisons less complex by casting to a larger integer size and byteswapping
[05:15:29] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 258 seconds)
[05:35:42] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[05:38:43] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 264 seconds)
[05:48:23] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:09:05] *** Quits: lord| (~lordpipe@user/lordpipe) (Ping timeout: 252 seconds)
[06:13:04] *** Joins: lord| (~lordpipe@user/lordpipe)
[06:24:29] *** Joins: LittleBoy (~LittleOne@89.46.102.116)
[06:33:28] *** Joins: Tom__ (~Tom@2a01:e0a:2de:8130:5183:8a32:ccd1:ada0)
[06:37:08] *** Quits: Tom_ (~Tom@2a01:e0a:2de:8130:60af:e8a5:9b28:9631) (Ping timeout: 252 seconds)
[06:49:22] *** Parts: LittleBoy (~LittleOne@89.46.102.116) ()
[06:59:30] *** Joins: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net)
[07:17:12] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[07:25:44] *** Quits: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net) (Ping timeout: 250 seconds)
[07:26:52] *** Joins: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net)
[07:27:02] *** Quits: fatal (0x00@user/fatal) (Ping timeout: 250 seconds)
[07:27:46] *** Quits: phebus (~phebus@c-73-113-180-252.hsd1.tn.comcast.net) (Quit: POKE 1,0)
[07:30:03] *** Joins: realtime (~realtime@177.18.185.16)
[07:30:12] *** Quits: realtime (~realtime@177.18.185.16) (Remote host closed the connection)
[07:31:55] *** Joins: realtime (~realtime@177.18.185.16)
[07:33:26] *** Quits: realtime (~realtime@177.18.185.16) (Client Quit)
[07:33:49] *** Joins: realtime (~realtime@177.18.185.16)
[07:41:44] *** Quits: nwm (~nwm@2604:3d08:a57f:bbd7:e0b1:a48d:758d:b6cb) (Ping timeout: 245 seconds)
[07:44:12] *** Quits: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:47:31] *** Quits: KeterClass (~KeterClas@vm0.max-p.me) (Quit: KeterClass)
[07:47:38] *** Joins: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net)
[07:48:04] *** Joins: KeterClass (~KeterClas@vm0.max-p.me)
[07:50:44] <Gravis> oww... with the right flags to eliminate all safety measures, it's down to just 656 bytes for a complete drop-in replacement for the SHA K table. :)))
[07:54:44] <Gravis> that's in spitting distance of the original 640 bytes the real thing requires
[07:56:18] *** Joins: 027AAAAGV (~fx@42.153.136.25)
[07:57:14] *** Joins: phebus (~phebus@c-73-113-180-252.hsd1.tn.comcast.net)
[07:59:12] *** Joins: nwm (~nwm@2604:3d08:a57f:bbd7:e0b1:a48d:758d:b6cb)
[07:59:23] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:00:24] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[08:00:37] *** Lord_of_Life_ is now known as Lord_of_Life
[08:30:46] *** Quits: realtime (~realtime@177.18.185.16) (Quit: Leaving)
[08:33:33] *** Quits: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:41:27] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[08:53:39] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[08:54:42] *** Joins: ghwerig_ (~ghwerig@2601:600:8080:3a00:1885:59bc:bf92:da04)
[08:54:51] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:55:37] *** Joins: g00fy5 (~g00fy@user/g00fy)
[08:56:19] *** Joins: Malin5 (~CIA@pirate.pt)
[08:56:49] *** Joins: Nebraskka_ (~Nebraskka@user/nebraskka)
[08:57:56] *** Joins: Discombobulated (~quassel@107.170.227.20)
[08:58:03] *** Joins: ionface (~ionface@user/ionface)
[08:58:58] *** Joins: sarnold_ (~sarnold@ubuntu/member/sarnold)
[08:59:28] *** Joins: kdave_ (dave@twin.jikos.cz)
[09:02:40] *** Joins: TheCoffeMaker_ (~TheCoffeM@125-121-245-190.fibertel.com.ar)
[09:03:00] *** Joins: BUSY (~BUSY@user/busy)
[09:03:58] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (*.net *.split)
[09:03:58] *** Quits: frost (~frost@59.71.241.190) (*.net *.split)
[09:03:58] *** Quits: ionface_ (~ionface@user/ionface) (*.net *.split)
[09:03:58] *** Quits: cehteh (~ct@mue-88-130-71-198.dsl.tropolys.de) (*.net *.split)
[09:03:58] *** Quits: sarnold (~sarnold@ubuntu/member/sarnold) (*.net *.split)
[09:03:58] *** Quits: g00fy (~g00fy@user/g00fy) (*.net *.split)
[09:03:58] *** Quits: Nebraskka (~Nebraskka@user/nebraskka) (*.net *.split)
[09:03:58] *** Quits: Disconsented (~quassel@107.170.227.20) (*.net *.split)
[09:03:58] *** Quits: kdave (~kdave@twin.jikos.cz) (*.net *.split)
[09:03:58] *** Quits: Malin (~CIA@pirate.pt) (*.net *.split)
[09:03:58] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[09:03:58] *** Quits: ghwerig (~ghwerig@c-73-140-154-209.hsd1.wa.comcast.net) (*.net *.split)
[09:03:58] *** Quits: somlis (~somlis@user/somlis) (*.net *.split)
[09:03:59] *** g00fy5 is now known as g00fy
[09:03:59] *** Nebraskka_ is now known as Nebraskka
[09:03:59] *** Malin5 is now known as Malin
[09:07:36] *** Joins: cehteh (~ct@mue-88-130-71-198.dsl.tropolys.de)
[09:08:35] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[10:01:03] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc02:b00:98b0:cd42:bd6f:8295)
[10:04:14] *** Joins: Iota (~Iota@user/iota)
[10:05:40] *** Joins: Ohlov3895174 (~0hlov3@dyndsl-080-228-184-100.ewe-ip-backbone.de)
[10:08:07] *** Quits: Ohlov389517 (~0hlov3@dyndsl-091-248-233-213.ewe-ip-backbone.de) (Ping timeout: 264 seconds)
[10:26:58] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[10:27:25] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Remote host closed the connection)
[10:27:32] *** Quits: Fluxx (~Fluxx@user/fluxx) (Read error: Connection reset by peer)
[10:27:44] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[10:27:51] *** Joins: Fluxx (~Fluxx@user/fluxx)
[10:30:16] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 252 seconds)
[10:31:44] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc02:b00:98b0:cd42:bd6f:8295) (Quit: Leaving)
[10:31:57] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc02:b00:98b0:cd42:bd6f:8295)
[10:47:42] *** Joins: Wintermute (~Wintermut@94.46.93.221)
[10:58:48] *** Joins: kish` (~o@user/aqua)
[10:59:01] <kish`> hmm. two channels
[10:59:03] <kish`> twice the fun.
[11:06:19] *** Quits: nwm (~nwm@2604:3d08:a57f:bbd7:e0b1:a48d:758d:b6cb) (Ping timeout: 245 seconds)
[11:12:55] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:17:31] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:19:31] *** Joins: Iota_ (~Iota@2a00:23c7:60c9:a701:615d:6ec2:2b1a:a794)
[11:20:36] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 250 seconds)
[11:20:48] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc02:b00:98b0:cd42:bd6f:8295) (Remote host closed the connection)
[11:21:12] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc02:b00:98b0:cd42:bd6f:8295)
[11:21:54] *** Quits: Iota (~Iota@user/iota) (Ping timeout: 250 seconds)
[11:28:02] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:31:18] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[11:37:32] *** Quits: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net) (Ping timeout: 265 seconds)
[11:45:39] *** Joins: frost (~frost@59.71.241.190)
[11:49:49] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 252 seconds)
[11:58:26] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Connection closed)
[11:59:59] *** Joins: byteskep1ical (~amnesia@user/byteskeptical)
[12:02:25] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 244 seconds)
[12:02:56] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Remote host closed the connection)
[12:03:27] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[12:08:17] *** Joins: Quiark[m] (~quiarkmat@2001:470:69fc:105::16be)
[12:27:25] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[12:28:03] *** kish` is now known as Melchizedek
[12:28:09] *** Melchizedek is now known as kish`
[12:33:27] *** Quits: byteskep1ical (~amnesia@user/byteskeptical) (Ping timeout: 252 seconds)
[12:39:18] *** Joins: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net)
[12:41:25] *** Joins: okozina (~okozina@83.240.60.136)
[13:05:18] *** Quits: Quiark[m] (~quiarkmat@2001:470:69fc:105::16be) (Remote host closed the connection)
[13:06:07] *** Joins: Quiark[m] (~quiarkmat@2001:470:69fc:105::16be)
[13:13:21] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:18:31] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[13:21:28] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 244 seconds)
[13:26:15] *** Joins: vernaz (~vernaz@148.63.127.167)
[14:01:33] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[14:05:29] *** Joins: somlis (~somlis@user/somlis)
[14:16:44] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc02:b00:98b0:cd42:bd6f:8295) (Ping timeout: 245 seconds)
[14:17:37] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[14:18:10] *** Quits: Wintermute (~Wintermut@94.46.93.221) (Read error: Connection reset by peer)
[14:21:06] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 272 seconds)
[14:32:53] *** Joins: abraham (~abraham@173.239.198.148)
[14:33:09] *** Quits: 027AAAAGV (~fx@42.153.136.25) (Quit: 027AAAAGV)
[14:36:12] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Remote host closed the connection)
[14:36:48] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[14:46:35] *** Joins: xYm (~xYm@2.53.130.119)
[14:46:56] *** Quits: abraham (~abraham@173.239.198.148) (Quit: Textual IRC Client: www.textualapp.com)
[14:47:16] *** Quits: xYm (~xYm@2.53.130.119) (Client Quit)
[14:55:16] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[15:01:11] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 244 seconds)
[15:11:08] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[15:13:19] *** Quits: kish` (~o@user/aqua) (Ping timeout: 252 seconds)
[15:14:54] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[15:31:58] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[15:37:42] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 252 seconds)
[15:42:10] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[15:42:12] *** Discombobulated is now known as Disconsented
[15:46:52] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 252 seconds)
[15:47:36] *** Joins: fatal (0x00@user/fatal)
[15:49:34] *** Quits: vernaz (~vernaz@148.63.127.167) (Remote host closed the connection)
[15:57:30] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[16:02:16] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 250 seconds)
[16:02:52] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[16:16:03] *** Quits: Iota_ (~Iota@2a00:23c7:60c9:a701:615d:6ec2:2b1a:a794) (Remote host closed the connection)
[16:16:30] *** Joins: Iota_ (~Iota@2a00:23c7:60c9:a701:d2f6:77ea:c692:9fdb)
[16:20:21] *** Joins: vernaz (~vernaz@148.63.127.167)
[16:24:48] *** Quits: vernaz (~vernaz@148.63.127.167) (Ping timeout: 250 seconds)
[16:27:53] *** Quits: Iota_ (~Iota@2a00:23c7:60c9:a701:d2f6:77ea:c692:9fdb) (Quit: Leaving)
[16:28:15] *** Joins: Iota_ (~Iota@2a00:23c7:60c9:a701:d2f6:77ea:c692:9fdb)
[16:29:46] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 252 seconds)
[16:31:48] *** Joins: vernaz (~vernaz@148.63.127.167)
[16:48:39] *** Parts: Iota_ (~Iota@2a00:23c7:60c9:a701:d2f6:77ea:c692:9fdb) ()
[16:48:58] *** Joins: Iota (~Iota@user/iota)
[16:51:13] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 252 seconds)
[16:51:49] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[17:00:24] *** Joins: mgdm (~michael@user/michael)
[17:03:12] *** Joins: kish` (~aqua@user/aqua)
[17:03:36] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[17:04:29] *** Joins: kish` (~aqua@user/aqua)
[17:04:35] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[17:12:07] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 252 seconds)
[17:18:45] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:34:02] *** Joins: mikeliuk (~mikeliuk@213.205.198.26)
[17:44:39] *** Parts: kdave_ (dave@twin.jikos.cz) ()
[17:49:31] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 252 seconds)
[17:55:50] *** Joins: chomwitt (~Pitsikoko@athedsl-20549.home.otenet.gr)
[18:03:15] *** Quits: fatal (0x00@user/fatal) (Ping timeout: 245 seconds)
[18:07:37] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[18:09:47] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[18:12:57] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[18:23:13] *** Joins: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net)
[18:25:01] *** Quits: instantp10neer (~instantp1@user/instantp10neer) (Quit: Leaving)
[18:26:00] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[18:30:18] *** Joins: thekingofbandit2 (thekingofb@thunix.net)
[18:32:07] *** Joins: moose` (~moose@user/moose)
[18:32:47] *** Joins: dynemeloun0 (~dynemelou@93-93-35-197.cust.mitranet.cz)
[18:34:27] *** Joins: asalor_ (~asalor@39.35.broadband4.iol.cz)
[18:34:39] *** Joins: Riastrad1 (~riastradh@jupiter.mumble.net)
[18:34:46] *** Joins: DeanWeen (~dean@nonplayercharacter.me)
[18:36:21] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[18:37:01] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[18:37:08] *** Joins: nevivurn` (~nevivurn@120.50.75.170)
[18:38:12] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[18:38:22] *** Joins: pera (~pera@user/pera)
[18:38:44] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 264 seconds)
[18:38:55] *** Joins: TimMc__ (~timmc@user/timmc)
[18:40:18] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[18:40:19] *** Joins: Effilry (firefly@glowbum/gluehwuermchen/firefly)
[18:40:34] *** Quits: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net) (*.net *.split)
[18:40:34] *** Quits: Riastradh (~riastradh@jupiter.mumble.net) (*.net *.split)
[18:40:34] *** Quits: thekingofbandit (~thekingof@user/thekingofbandit) (*.net *.split)
[18:40:34] *** Quits: FireFly (firefly@glowbum/gluehwuermchen/firefly) (*.net *.split)
[18:40:34] *** Quits: Oshawott (~archenoth@S0106889e6827f474.cg.shawcable.net) (*.net *.split)
[18:40:34] *** Quits: softpaw (~softpaw@185.162.184.11) (*.net *.split)
[18:40:34] *** Quits: moose (~moose@user/moose) (*.net *.split)
[18:40:34] *** Quits: dynemeloun (~dynemelou@93-93-35-197.cust.mitranet.cz) (*.net *.split)
[18:40:34] *** Quits: TimMc (~timmc@user/timmc) (*.net *.split)
[18:40:35] *** Quits: asalor (~asalor@user/asalor) (*.net *.split)
[18:40:35] *** Quits: DeanGuss (~dean@nonplayercharacter.me) (*.net *.split)
[18:40:35] *** Quits: nevivurn (~nevivurn@120.50.75.170) (*.net *.split)
[18:40:35] *** Quits: rodgort (~rodgort@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[18:40:35] *** dynemeloun0 is now known as dynemeloun
[18:41:10] *** Joins: softpaw (~softpaw@185.162.184.11)
[18:41:18] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[18:41:31] *** Effilry is now known as FireFly
[18:41:53] *** Joins: Oshawott (~archenoth@S0106889e6827f474.cg.shawcable.net)
[18:42:59] *** Joins: rodgort (~rodgort@static.38.6.217.95.clients.your-server.de)
[18:49:51] *** TimMc__ is now known as TimMc
[18:56:34] *** Quits: cwebber (~user@user/cwebber) (Remote host closed the connection)
[18:57:27] *** Joins: cwebber (~user@user/cwebber)
[18:58:54] *** Joins: vernaz_ (~vernaz@148.63.127.167)
[19:02:06] *** Quits: vernaz (~vernaz@148.63.127.167) (Ping timeout: 250 seconds)
[19:13:51] *** Parts: asalor_ (~asalor@39.35.broadband4.iol.cz) ()
[19:14:19] *** Joins: asalor (~asalor@user/asalor)
[19:14:44] *** Joins: 027AAAAG4 (~fx@42.153.136.25)
[19:19:44] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[19:23:36] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[19:30:38] *** Quits: frost (~frost@59.71.241.190) (Quit: Connection closed)
[19:33:39] *** Joins: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net)
[19:35:44] *** Quits: ericonr (~ericonr@voidlinux/docs/ericonr) (Ping timeout: 264 seconds)
[19:37:22] *** Quits: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net) (Client Quit)
[19:39:04] *** Joins: ericonr (~ericonr@voidlinux/docs/ericonr)
[19:43:10] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[19:43:56] *** Joins: vernaz (~vernaz@148.63.127.167)
[19:44:06] *** Joins: byteskep1ical (~amnesia@user/byteskeptical)
[19:45:52] *** Joins: laguneucl (~Pitsikoko@2a02:587:dc02:b00:98b0:cd42:bd6f:8295)
[19:46:39] *** Joins: GNUcifer (~ct@mue-88-130-71-198.dsl.tropolys.de)
[19:46:49] *** Joins: Malin2 (~CIA@pirate.pt)
[19:46:53] *** Joins: g00fy8 (~g00fy@user/g00fy)
[19:47:34] *** Quits: cehteh (~ct@mue-88-130-71-198.dsl.tropolys.de) (Ping timeout: 245 seconds)
[19:47:55] *** Joins: SpydarOO7 (~spydar007@user/spydar007)
[19:47:58] *** Joins: Nebraskka_ (~Nebraskka@user/nebraskka)
[19:49:06] *** Joins: dostoyev1ky2 (~sck@user/dostoyevsky2)
[19:49:38] *** Joins: Wulf4 (~Wulf@user/wulf)
[19:49:55] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[19:50:06] *** Joins: sarnold (~sarnold@ubuntu/member/sarnold)
[19:50:12] *** Joins: ionface_ (~ionface@user/ionface)
[19:50:45] *** Joins: phebus_ (~phebus@c-73-113-180-252.hsd1.tn.comcast.net)
[19:50:53] *** Joins: ericonr- (~ericonr@voidlinux/docs/ericonr)
[19:51:58] *** Joins: pieguy128_ (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[19:53:25] *** Joins: rodgort` (~rodgort@static.38.6.217.95.clients.your-server.de)
[19:53:34] *** Joins: byteskep2ical (~amnesia@user/byteskeptical)
[19:54:58] *** Quits: byteskep1ical (~amnesia@user/byteskeptical) (*.net *.split)
[19:54:59] *** Quits: ericonr (~ericonr@voidlinux/docs/ericonr) (*.net *.split)
[19:55:00] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (*.net *.split)
[19:55:03] *** Quits: vernaz_ (~vernaz@148.63.127.167) (*.net *.split)
[19:55:05] *** Quits: rodgort (~rodgort@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[19:55:08] *** Quits: chomwitt (~Pitsikoko@athedsl-20549.home.otenet.gr) (*.net *.split)
[19:55:12] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (*.net *.split)
[19:55:14] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (*.net *.split)
[19:55:16] *** Quits: sarnold_ (~sarnold@ubuntu/member/sarnold) (*.net *.split)
[19:55:16] *** Quits: ionface (~ionface@user/ionface) (*.net *.split)
[19:55:18] *** Quits: Nebraskka (~Nebraskka@user/nebraskka) (*.net *.split)
[19:55:19] *** Quits: Malin (~CIA@pirate.pt) (*.net *.split)
[19:55:20] *** Quits: g00fy (~g00fy@user/g00fy) (*.net *.split)
[19:55:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[19:55:22] *** Quits: phebus (~phebus@c-73-113-180-252.hsd1.tn.comcast.net) (*.net *.split)
[19:55:24] *** Quits: Wulf (~Wulf@user/wulf) (*.net *.split)
[19:55:26] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (*.net *.split)
[19:55:26] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (*.net *.split)
[19:55:30] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[19:55:33] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[19:55:33] *** Wulf4 is now known as Wulf
[19:55:33] *** Malin2 is now known as Malin
[19:55:33] *** Nebraskka_ is now known as Nebraskka
[19:55:33] *** g00fy8 is now known as g00fy
[19:55:33] *** Lord_of_Life_ is now known as Lord_of_Life
[19:55:33] *** SpydarOO7 is now known as Spydar007
[19:55:59] *** ericonr- is now known as ericonr
[19:57:48] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[19:58:03] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[20:07:35] *** Joins: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net)
[20:10:17] *** Quits: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net) (Client Quit)
[20:12:03] *** Quits: finalbeta (~finalbeta@dD576A726.access.telenet.be) (Read error: Connection reset by peer)
[20:12:29] *** GNUcifer is now known as cehteh
[20:16:09] *** Quits: byteskep2ical (~amnesia@user/byteskeptical) (Ping timeout: 265 seconds)
[20:20:10] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:22:33] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[20:27:05] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 252 seconds)
[20:33:13] *** Joins: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net)
[20:34:02] *** Quits: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net) (Changing host)
[20:34:02] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[20:35:49] *** Quits: okozina (~okozina@83.240.60.136) (Quit: Leaving.)
[20:37:49] *** Joins: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net)
[20:43:29] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[20:44:13] *** Quits: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:48:31] *** Joins: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net)
[20:52:12] *** Quits: gueriLLaPunK (~textual@216.49.27.5.res-cmts.hzl2.ptd.net) (Client Quit)
[20:56:42] *** Quits: lord| (~lordpipe@user/lordpipe) (Ping timeout: 252 seconds)
[20:58:29] *** Quits: vernaz (~vernaz@148.63.127.167) (Remote host closed the connection)
[21:04:23] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[21:04:41] *** Joins: lord| (~lordpipe@user/lordpipe)
[21:06:43] *** Joins: c4rc4s (~c4rc4s@user/c4rc4s)
[21:06:57] *** Joins: vernaz (~vernaz@148.63.127.167)
[21:12:41] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[21:17:33] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[21:23:18] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[21:29:50] *** fxrh_ is now known as fxrh
[21:32:02] *** Quits: laguneucl (~Pitsikoko@2a02:587:dc02:b00:98b0:cd42:bd6f:8295) (Ping timeout: 265 seconds)
[21:39:05] *** Riastrad1 is now known as Riastradh
[21:40:08] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: leaving)
[21:41:34] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (*.net *.split)
[21:47:23] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[22:11:12] *** Joins: chomwitt (~Pitsikoko@athedsl-20549.home.otenet.gr)
[22:13:37] *** Joins: DefiantN (~DefiantN@user/defiantn)
[22:21:24] *** Quits: pera (~pera@user/pera) (Ping timeout: 252 seconds)
[22:22:16] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[22:23:06] *** Quits: dostoyev1ky2 (~sck@user/dostoyevsky2) (Quit: leaving)
[22:23:25] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[22:23:48] *** Joins: jbis (~jbis@72.89.115.213)
[22:23:54] <jbis> Hello
[22:24:32] <jbis> If I buy a domain, how do I ensure that the previous owner doesn't have a valid cert for my domain?
[22:24:53] <yawkat> check certificate transparency
[22:27:13] <jbis> ?
[22:27:42] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[22:29:32] <Alipha> jbis: Certificate Transparency is a log of all certificates that have been created. all certificate authorities are supposed to log to CT whenever they create a certificate
[22:30:03] <jbis> But only a couple CAs work with them right?
[22:30:51] <yawkat> no, all do
[22:33:03] <jbis> There website lists a ocuple
[22:33:48] <Riastradh> All public HTTPS CAs have to report to CT now, I believe.
[22:34:10] <Alipha> google (and probably all the other browsers) would quickly revoke CA's root certificates if they found they weren't logging to CT
[22:34:20] *** Joins: personperson (~personper@185.192.70.71)
[22:34:29] <jbis> Ok, and if someone has a cert how do i get it revoked?
[22:35:37] *** Joins: _0x5fc3 (~0x5fc3@static.203.75.21.65.clients.your-server.de)
[22:36:04] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 252 seconds)
[22:36:06] <Peng> CAs aren't required to log certificates to CT.
[22:36:29] <Peng> For browsers to trust them, certificates have to have been logged to CT.
[22:38:35] <Peng> jbis: If it's a Let's Encrypt certificate and you contorl all hostnames, you can revoke it using an ACME client. Other ACME CAs may be the same.
[22:38:48] <Peng> jbis: In general, you can submit a problem report to the CA.
[22:38:57] <Peng> Revocation is kinda useless though.
[22:39:24] <Alipha> firefox is the only one that checks revocation and they fail open, i believe?
[22:39:49] <jbis> So basically i'm screwed until it expires
[22:40:11] *** Quits: vernaz (~vernaz@148.63.127.167) (Ping timeout: 252 seconds)
[22:40:45] <Peng> Alipha: I'm not sure. Microsoft's TLS implementation might also check?
[22:40:48] <Peng> jbis: Kinda!
[22:41:33] <jbis> Yay!
[22:42:22] *** Quits: _0x5fc3 (~0x5fc3@static.203.75.21.65.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[22:42:41] *** Joins: _0x5fc3 (~0x5fc3@static.203.75.21.65.clients.your-server.de)
[22:42:42] <Wulf> jbis: it's unlikely the previous owner will be able to attack your users.
[22:42:48] <Peng> It's unlikely, but possible, that the previous domain owner has an unlogged certificate for the domain.
[22:43:32] <Peng> (Note that they could subsequently log it, serve SCTs with the TLS extension, and browsers would be cool with it, I think.)
[22:43:45] <Wulf> jbis: check on https://crt.sh/ for certs. And then make a risk assassment.
[22:43:53] <Peng> (If we're going to talk about things that could happen but won't.)
[22:44:11] <jbis> I still see it as a bit of a flaw
[22:44:17] <jbis> Even if it's unlikely
[22:44:19] <Peng> jbis: Is this the kind of high value domain where spy stuff might happen?
[22:44:21] <Peng> jbis: Yes.
[22:44:28] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[22:44:43] <Peng> FYI, https://insecure.design/ is a paper about this.
[22:45:01] <Peng> You'll see industry people use the term BygoneSSL
[22:45:02] <Wulf> jbis: that's one reason why certificate lifetimes have been decreased a lot
[22:45:32] <jbis> LetsEncrypt is 90 days which I used to find annoying but now like
[22:46:09] <jbis> I still like the idea of using DNS instead of CAs.
[22:46:12] <Alipha> yeah, google and such want to push that way down. like a week 
[22:46:45] <Alipha> Certs should just be in DNS records, yeah. though DNS needs to be secured first
[22:47:05] <jbis> It needs to be decentralized 
[22:47:24] <yawkat> how exactly would that work
[22:47:24] <jbis> but I think i asked about that here a couple days ago
[22:48:19] <jbis> What was that DNS protocol called again?
[22:48:29] <Peng> DANE
[22:48:32] <jbis> thanks
[22:48:56] <Alipha> There's namecoin
[22:49:14] <yawkat> .-.
[22:49:27] <jbis> yawkat Not sure
[22:50:24] <Alipha> Though since Chrome and such don't check revocation because they're concerned about page loading performance, why don't they just pre-download all new revocations each day or such?
[22:50:30] <Wulf> reminds me to setup dnssec for my domains. I started with one, but its names are enumerable which I really don't want for the others.
[22:50:52] <jbis> One idea was to use basically a blockchain. But not entirely decentralized. ICANN would still handle domain registration, but the network would have to approve everything ICANN does. Once you own it tho, ICANN doesn't handle transfers.
[22:51:18] <jbis> If you loose your public key or to prevent domain squatting network could transfer back ownership to ICANN
[22:51:20] *** Joins: v4skie (~v4skie@78.164.49.235)
[22:51:29] <jbis> private key*
[22:51:36] <yawkat> so the current system just with extra steps?
[22:51:47] <jbis> Yes. But the extra steps are helpful.
[22:52:08] <jbis> Adds a type of democracy to control ICANN
[22:52:20] <yawkat> O.o
[22:52:37] <jbis> So ICANN can't do whatever they want
[22:52:45] <yawkat> do you want to make a vote on every approval-requiring action or what?
[22:52:46] <Wulf> jbis: they can't anywaay
[22:53:04] <jbis> Also you then don't need CAs
[22:53:13] <jbis> which solves 100 different problems
[22:53:21] <Wulf> jbis: I've got e.g. "1e8.de". What could icann possibly do to my domain?
[22:53:37] <yawkat> jbis: why do you not need CAs?
[22:54:07] <jbis> Because you could then use DANE
[22:54:23] <yawkat> but you still have to verify your blockchain somehow
[22:54:31] <Wulf> jbis: don't need a blockchain for DANE.
[22:54:31] <yawkat> or you get an eclipse attack
[22:54:32] <MacGyver> Because you've transferred your trust from auditable organisations to a decentralized self-running platform under true control of, like, 10 programmers.
[22:55:10] <jbis> Wulf No, but it's much better with it
[22:56:18] <jbis> The idea isn't perfect 
[22:56:37] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[22:56:48] <Wulf> jbis: https://xkcd.com/2267/
[22:56:49] <yawkat> yet another use case blockchain doesnt solve
[22:56:58] <yawkat> hah.
[22:57:32] <jbis> I don't think blockchain is necessarily the best idea
[22:57:48] <Wulf> jbis: it certainly isn't.
[22:58:03] <jbis> Well i mean the core concept is good 
[22:58:15] <jbis> But not at all how it's used for cryptocurrency shit
[22:58:16] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[22:59:07] <MacGyver> I beg to differ.
[22:59:45] <MacGyver> Cryptocurrency is one of the few usecases where blockchains actually are a technically valid solution for the "problem" they think they should be solving.
[22:59:57] *** Quits: v4skie (~v4skie@78.164.49.235) (Quit: Leaving)
[22:59:59] <MacGyver> I disagree with that problem analysis, but on technical merits it holds up.
[23:00:41] <jbis> At the end of the day, most of the security on the internet relies on DNS and therefore relies on ICANN. I don't think ICANN is trustworthy.
[23:00:45] <riv> i disagree about blockchains
[23:00:54] <MacGyver> For virtually every other problem that people are using blockchains for, alternative solutions that are basically "on the path from a text file to a full fledged blockchain" are more sensible.
[23:01:03] <jbis> How do CAs validate domain owns? DNS
[23:01:22] <Wulf> jbis: I really don't want a blockchain for domains. Currently, if anyone manages to steal my domain, I can use the legal system to get it back. With an "uncontrolled" system, I couldn't.
[23:02:22] <Wulf> jbis: what exactly could ICANN do about my .de domain?
[23:02:46] <jbis> In the system above you could complain to ICANN and ICANN would make a request to the network and people would vote on whether they believe it should be given back to you. 
[23:03:08] <yawkat> they probably wouldnt vote though
[23:03:08] <MacGyver> But I don't want people to vote. I want a court to rule based on contract law.
[23:03:10] <Wulf> jbis: what do "people" care about my domain?
[23:03:50] <jbis> Why should US contract law govern the global internet?
[23:03:51] <yawkat> also it wouldnt be people, it would be the chinese company with a million miners next to a subsidized power plant
[23:03:56] <Wulf> jbis: it doesn't.
[23:04:02] <MacGyver> jbis: I did not say *US* contract law.
[23:04:09] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[23:04:11] <jbis> Whatever country your in
[23:04:15] <yawkat> jbis: national NICs exist...
[23:04:17] <MacGyver> jbis: Well, why shouldn't it?
[23:04:19] <Wulf> jbis: I'm German. My domain is German. German law applies.
[23:04:55] <MacGyver> jbis: Give me a good reason why "The Internet" is so fucking special that laws that we arrived at over centuries of human interaction *shouldn't* apply.
[23:05:36] <jbis> That's not really the problem I describing
[23:05:47] <MacGyver> jbis: But it is a problem you're introducing by using a blockchain.
[23:05:52] <jbis> I agree
[23:06:07] <jbis> lesser of two evils
[23:06:13] <jbis> and one that can probably we worked out
[23:06:14] <MacGyver> Well I disagree.
[23:06:19] <MacGyver> Law trumps technical implementation.
[23:06:34] *** Joins: menace (~someone@2001:a61:346e:b501:fd91:a068:bee0:e5ea)
[23:06:52] *** Quits: menace (~someone@2001:a61:346e:b501:fd91:a068:bee0:e5ea) (Changing host)
[23:06:52] *** Joins: menace (~someone@user/menace)
[23:06:55] <jbis> What if China thinks they should have Google.com?
[23:06:56] *** menace is now known as Deknos
[23:07:20] <jbis> under chinese law, they control everything so they have rights to the domain
[23:07:25] <yawkat> they cant, they dont have jurisdiction over the nic of com
[23:07:27] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 272 seconds)
[23:07:47] <Wulf> jbis: they could try to create an alternate dns root where they do own .com
[23:07:48] <MacGyver> Then they register google.com internally and people outside of China will put protections in place to defend themselves against this. Also there will be trade sanctions, probably.
[23:08:27] <MacGyver> "International relations are complicated" isn't magically solved by throwing blockchain at the problem.
[23:08:49] <jbis> Alright we do you guys at least agree that ICANN shouldn't have the power they do?
[23:08:54] <yawkat> no
[23:08:58] <jbis> well*
[23:09:07] <MacGyver> I kinda do -- but I think you overestimate the power ICANN actually has.
[23:09:33] <jbis> Am I wrong that ICANN could switch who owns your domain Wulf?
[23:09:43] <jbis> if they decided they wanted to
[23:10:10] <yawkat> icann does not control tlds directly
[23:10:11] <Wulf> jbis: let's say ICANN would transfer .de ownership away from DENIC without very good reason. What do you think would happen? I think there would be an immediate fork of DNS root, i.e. major damage to the internet.
[23:10:33] <Wulf> jbis: they cannot. It's my property.
[23:10:40] <MacGyver> Besides, DNS control no longer lies with ICANN, it now lies with Mozilla, Google, and Cloudflare.
[23:10:54] <MacGyver> Oh wait no resolverless was on the *roadmap* for DoH still.
[23:11:03] <MacGyver> </cynic>
[23:11:05] <Wulf> jbis: And my property is protected by my country.
[23:12:05] <jbis> MacGyver wdym?
[23:12:54] <MacGyver> jbis: That DNS-over-HTTPS is a powergrab by the browser-and-web-giants over the DNS infrastructure, which risks fracturing DNS into two separate name systems, one for web and one for the rest of the Internet.
[23:14:00] <jbis> haven't heard that take before
[23:14:58] <MacGyver> It's not that uncommon a take for people who aren't knee-deep in everything-is-a-webservice.
[23:16:09] <jbis> Wulf Ok fine, let's talk about  DENIC
[23:16:22] <jbis> or any other owner of TLDs
[23:16:40] <jbis> they could switch who owns your domain right?
[23:19:27] *** Quits: mikeliuk (~mikeliuk@213.205.198.26) (Quit: Connection closed)
[23:26:47] <jbis> MacGyver do you have a link for more info on that?
[23:27:02] <jbis> (how DoH is a powergrab...)
[23:30:36] <MacGyver> https://www.circleid.com/posts/20191212_whats_behind_the_secure_dns_controversy_doh/ , and there's a few presentations of Bert Hubert floating around.
[23:30:56] <MacGyver> https://berthub.eu/presentations.html , one in 2020 and one in 2019.
[23:31:20] <jbis> thank you!
[23:32:58] <MacGyver> I also have a presentation by someone from NLNetLabs but I'm not at liberty to share that one; which goes a bit into how DoT is the superior solution in sane jurisdictions.
[23:33:05] <MacGyver> I.e. those where your ISP is not allowed to sell your data.
[23:33:22] <MacGyver> Give me a few minutes to google if there's a public version of that one.
[23:34:19] <jbis> I haven't read enough about yet to understand but Oblivious DNS doesn't fix the issue right?
[23:34:21] <MacGyver> Close enough.
[23:34:23] <MacGyver> https://www.nlnetlabs.nl/downloads/presentations/20200206-CCC-Osnabrueck-vanRijswijkDeij.pdf
[23:34:41] <MacGyver> Since that looks like CCC, might be a recording on the CCC media pages as well.
[23:35:17] <MacGyver> Oblivious DNS might actually fix the issue that Mozilla and Google are adamant they're "fixing" with DoH.
[23:35:34] <MacGyver> But I don't know enough about it to say for sure.
[23:35:35] <Peng> I don't get Oblivious DoH, it sounds like Tor but not good
[23:35:45] <yawkat> it's faster than tor
[23:35:47] <MacGyver> Nor how that interacts with the bloom filters that Van Rijswijk explains.
[23:36:08] <MacGyver> Peng: Oblivious DNS, not Oblivious DoH.
[23:36:33] <MacGyver> Peng: Oblivious DNS AIUI is an effort to provide the same privacy-against-ISP-guarantees on top of DoT.
[23:36:45] <MacGyver> I might be outdated here though?
[23:37:33] <jbis> its hard to keep up with all the proposals
[23:38:00] <TimMc> DNS Over Drone-Coin
[23:38:02] <MacGyver> jbis: https://media.ccc.de/v/chaoscolloquium-1-dns-privacy-security <-- recording for that slide deck.
[23:39:24] <jbis> perfect
[23:40:53] <MacGyver> Full disclosure, I'm not exactly a disinterested party here, Roland is an ex-colleague of mine, so I am biased both in exposure and in value of opinion.
[23:45:30] <TimMc> So Oblivious DNS is basically... minimal transport security + a proxy that you vaguely trust not to collaborate with the authoritative server?
[23:46:17] <TimMc> s/collaborate/collude/
[23:47:11] <MacGyver> Well sure, but how is that different from trusting your DoH provider not to look at your queries?
[23:48:59] <yawkat> and how is it better than ODoH
[23:49:03] <Wulf> jbis: yes, DENIC could turn my domain over to someone else. But they are bound by law.
[23:49:22] <yawkat> except ODoH can run over QUIC with fewer roundtrips
[23:49:38] <ms7821> I thought ODNS basically was ODoH
[23:50:04] <Wulf> is there any good reason to tunnel dns over HTTP?! DNS over TLS or Quick makes sense to me. But why add another *complicated* layer?
[23:50:28] <MacGyver> yawkat: DoT can run over TLS 1.3 with an equal amount of roundtrips.
[23:50:33] <TimMc> MacGyver: I'm not making a comparison, just trying to get the shape of it.
[23:50:38] <ms7821> cuz HTTPS is allowed through corporate proxies
[23:50:58] <ms7821> it's over HTTPS, not HTTP
[23:51:11] <yawkat> MacGyver: isnt it tcp?
[23:51:19] <Wulf> ms7821: HTTPs is still HTTP.
[23:51:30] <ms7821> yeah, but the point is about traversing proxies
[23:51:34] <ms7821> HTTP doesn't give you that
[23:51:49] <MacGyver> TimMc: Then yes, what you just described is indeed the basic form of oblivious DNS, regardless of whether it's DoT or DoH underpinning it, aiui.
[23:52:21] <jbis> basically to prevent someone from blocking specifically oblivious DNS
[23:52:24] <jbis> i think
[23:52:43] <Wulf> ms7821: I don't see a good usecase for proxying DNS traffic. Corp should set up their own resolver which is reachable without proxy.
[23:52:55] <jbis> tho can't they just block traffic to the ip?
[23:53:03] <ms7821> Wulf, they do, and that's the problem
[23:53:14] <yawkat> jbis: well if it's cloudflare, thatd block half the internet too
[23:53:23] <Wulf> ms7821: why is it a problem?
[23:53:27] <jbis> that's pretty stupid
[23:53:29] <TimMc> I suppose you could also talk to the ODNS server "directly" over Tor if you really wanted to.
[23:53:41] <jbis> so now the only ones who can run a resolver are large cdns
[23:53:59] <MacGyver> yawkat: Oh, yeah, I guess if you're going QUIC then you might save a handshake roundtrip. But field testing done at NLNetLabs implied that the additional TCP roundtrip isn't actually an issue and DoH is still slower.
[23:54:07] <MacGyver> Probably due to the HTTPS overhead.
[23:54:30] <MacGyver> Though I'm not sure whether they compared DoH with HTTP/2 or 3 there.
[23:55:04] <ms7821> Wulf, many many networks run a local resolver (blocking or split horizoning DNS) but allow HTTPS out freely
[23:55:06] <yawkat> well since HTTP/2 is tcp...
[23:55:34] <MacGyver> Also I wonder how much connection reuse is a factor here, considering DNS is constantly active.
[23:55:45] <ms7821> DoT, while traditionally the way to go, will just not work in such circumstances
[23:56:02] <jbis> I must go but interesting discussion. Thanks for the links.
[23:56:03] <jbis> o/
[23:56:21] <MacGyver> jbis: Yw, hope they help.
[23:57:30] *** Quits: jbis (~jbis@72.89.115.213) (Quit: Leaving...)
