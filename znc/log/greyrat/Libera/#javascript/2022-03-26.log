[00:00:07] *** Joins: voltage_ (voltage@user/voltage)
[00:00:57] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[00:01:50] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 272 seconds)
[00:04:31] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[00:05:19] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[00:05:48] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[00:12:31] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[00:22:14] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[00:24:15] *** Joins: esuba (~esuba@pool-96-234-77-118.nwrknj.fios.verizon.net)
[00:24:41] *** Quits: kakashiAL (~kakashi@105.156.9.83) (Ping timeout: 252 seconds)
[00:25:29] *** Joins: jmd_ (~jmdaemon@user/jmdaemon)
[00:26:03] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[00:26:09] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 268 seconds)
[00:28:40] *** Joins: summersault (~summersau@179.221.251.36)
[00:29:47] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[00:30:12] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[00:30:41] *** Joins: Joss (~joss@user/Joss)
[00:32:53] *** Quits: Joss (~joss@user/Joss) (Client Quit)
[00:33:11] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[00:34:39] *** Quits: dea__ (~dea@31-210-107-196.turkrdns.com) (Ping timeout: 256 seconds)
[00:36:39] *** Joins: dea__ (~dea@31-210-107-196.turkrdns.com)
[00:36:40] *** Joins: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[00:36:41] *** Joins: Donitz2 (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[00:37:04] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[00:38:15] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[00:41:01] *** Joins: Axy (~Axy@user/axy)
[00:42:02] *** Quits: on^ (~on@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[00:45:08] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:29b4:28a2:5876:534d:1827) (Remote host closed the connection)
[00:45:10] *** Joins: N4buc0_ (~N4buc0@189.115.86.130)
[00:49:17] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[00:54:39] *** Joins: summersault (~summersau@179.221.251.36)
[00:57:13] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:58:24] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:58:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[01:00:31] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[01:01:53] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[01:02:00] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[01:04:01] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:06:35] *** Quits: andersaloof (~anders@251.92-221-169.customer.lyse.net) (Quit: WeeChat 3.4)
[01:06:57] *** Quits: dea__ (~dea@31-210-107-196.turkrdns.com) (Ping timeout: 240 seconds)
[01:08:23] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:08:53] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[01:16:37] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[01:17:28] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[01:18:02] *** Joins: vysn (~vysn@user/vysn)
[01:22:10] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[01:22:27] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[01:22:33] *** Parts: esuba (~esuba@pool-96-234-77-118.nwrknj.fios.verizon.net) ()
[01:22:37] *** Joins: khronosschoty_ (~khronossc@user/khronosschoty)
[01:22:46] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[01:23:17] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 240 seconds)
[01:23:55] *** Quits: khronosschoty_ (~khronossc@user/khronosschoty) (Client Quit)
[01:29:55] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 260 seconds)
[01:32:06] *** Joins: l__q (~modinfo@user/modinfo)
[01:33:05] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Quit: WeeChat 3.4)
[01:33:57] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[01:37:48] *** Quits: pmercado (~pmercado@186.107.58.34) (Quit: Konversation terminated!)
[01:38:06] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 272 seconds)
[01:40:11] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[01:40:54] *** Joins: pavonia (~user@user/siracusa)
[01:42:56] *** Quits: bomb (~bomb@user/bomb) (Quit: ‎)
[01:50:01] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[01:51:01] *** Quits: kakashiA1 (~kakashi@41.141.191.109) (Ping timeout: 240 seconds)
[01:51:05] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[01:52:26] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[01:56:29] *** Quits: stagas (~stagas@2a02:587:c49f:caa2:3392:c233:acaa:5f43) (Remote host closed the connection)
[01:56:42] *** Quits: john_doe_jr (~Adium@206.212.5.4) (Quit: Leaving.)
[01:57:46] *** Joins: stagas (~stagas@2a02:587:c49f:caa2:3392:c233:acaa:5f43)
[01:58:36] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4302:423d:8a3e:7573) (Ping timeout: 240 seconds)
[01:59:00] *** Quits: stagas (~stagas@2a02:587:c49f:caa2:3392:c233:acaa:5f43) (Remote host closed the connection)
[01:59:51] *** Quits: average (~average@user/average) (Ping timeout: 252 seconds)
[02:00:57] *** Joins: stagas (~stagas@2a02:587:c49f:caa2:3392:c233:acaa:5f43)
[02:01:27] *** Joins: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2)
[02:01:27] *** Quits: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2) (Changing host)
[02:01:27] *** Joins: average (~average@user/average)
[02:01:48] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[02:02:18] *** Quits: stagas (~stagas@2a02:587:c49f:caa2:3392:c233:acaa:5f43) (Remote host closed the connection)
[02:02:44] *** Joins: stagas (~stagas@2a02:587:c49f:caa2:3392:c233:acaa:5f43)
[02:03:16] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 245 seconds)
[02:06:06] <average> skmo: https://github.com/travist/jsencrypt
[02:06:08] <average> skmo: this one too
[02:10:50] *** Quits: ckdCreations (~ckdCreati@147.55.133.142) (Read error: Connection reset by peer)
[02:11:05] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[02:13:27] *** Joins: shuck (~shuck@user/shuck)
[02:14:02] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[02:17:01] *** Joins: voltage_ (voltage@user/voltage)
[02:17:23] *** Quits: shuck (~shuck@user/shuck) (Read error: Connection reset by peer)
[02:17:41] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:19:07] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[02:23:04] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[02:23:47] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[02:26:53] *** Quits: l__q (~modinfo@user/modinfo) (Quit: interet cut off, write me memo! it will be send to my mail!)
[02:27:38] *** Joins: l__q (~modinfo@user/modinfo)
[02:28:40] *** Quits: l__q (~modinfo@user/modinfo) (Read error: Connection reset by peer)
[02:30:09] *** Joins: l__q (~modinfo@user/modinfo)
[02:30:13] *** Quits: l__q (~modinfo@user/modinfo) (Client Quit)
[02:30:37] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[02:32:42] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:34:12] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[02:35:49] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[02:37:37] *** Joins: l__q (~modinfo@user/modinfo)
[02:38:23] *** Quits: l__q (~modinfo@user/modinfo) (Client Quit)
[02:38:42] *** Joins: l__q (~modinfo@user/modinfo)
[02:39:01] *** Quits: l__q (~modinfo@user/modinfo) (Client Quit)
[02:39:32] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[02:41:09] *** Joins: l__q (~modinfo@user/modinfo)
[02:41:11] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[02:42:04] *** Joins: filename (~kilitary@188.242.105.134)
[02:44:38] *** Quits: l__q (~modinfo@user/modinfo) (Client Quit)
[02:44:49] *** Joins: l__q (~modinfo@user/modinfo)
[02:45:06] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[02:45:31] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 260 seconds)
[02:45:51] *** Quits: dallegos (~dallegos@191.97.196.147) (Remote host closed the connection)
[02:45:55] *** Quits: l__q (~modinfo@user/modinfo) (Client Quit)
[02:46:05] *** Joins: l__q (~modinfo@user/modinfo)
[02:46:55] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[02:47:46] *** Joins: velix (~velix@user/velix)
[02:47:59] <velix> Shall I end <meta> in /> or > ?
[02:48:07] *** Quits: l__q (~modinfo@user/modinfo) (Client Quit)
[02:49:10] *** Joins: l__q (~modinfo@user/modinfo)
[02:49:42] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) ()
[02:49:58] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[02:50:00] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[02:52:07] <sheetjs> typically you don't velix
[02:52:19] <sheetjs> <meta charset="utf-8">
[02:52:40] <velix> sheetjs: yean, MDN also doesn't list it. But Google and Facebook list it for their tags.
[02:52:49] <velix> sheetjs: So I think I'll keep it.
[02:52:55] <velix> Maybe They're parsing it differently.
[02:53:02] <velix> And ignoreit without "trailing" slash
[02:53:17] <sheetjs> funny story
[02:53:46] <sheetjs> velix: view source for https://duckduckgo.com
[02:54:13] <sheetjs> they use > for some and /> for other meta tags
[02:54:14] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:54:24] <velix> exactly, same here.
[02:54:40] <velix> I'm really angry that HTML5 draft didn't unify this
[02:54:42] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:55:00] <velix> it's like Tesla selling the 5th wheel 10 mm smaller than all others.
[02:55:26] <velix> that's why we have standards ;)
[02:55:34] <Alexendoo> Forgiving parsing is one of the larger parts of HTML5
[02:56:58] <velix> "forgiving parsing" = accept all rubbish?
[02:57:14] <velix> rubbish in, something interpreted out?
[02:57:16] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[02:57:47] <systemfault> Still a better idea than XML... where your page would simply not render at all on a typo..
[02:57:47] <Alexendoo> Yeah
[02:57:49] <velix> Like? "What might the coder would have meant by this?"
[02:58:00] *** Joins: ckdCreations (~ckdCreati@147.55.133.131)
[02:58:19] <velix> systemfault: True. But now I'm unsure... I think I'll keep /> ... like Facebook wants me to.
[02:58:29] <velix> Maybe they're grepping the website for this schema.
[02:58:33] <systemfault> Facebook is a liar though
[02:58:40] <velix> systemfault: #fakebook
[02:58:53] <velix> it's not even a book!
[02:59:17] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[02:59:50] <Alexendoo> To parse HTML they will use a HTML parser, either are perfectly valid
[02:59:51] <systemfault> velix: More like... if they really cared, they would actually serve their content as application/xhtml+xml instead of text/html
[03:00:02] <velix> systemfault: why not just as json? :D
[03:00:24] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:00:34] <systemfault> velix: So, they want you to use />, the XHTML syntax, but they're don't even dare enforcing it on their own website.
[03:00:42] <velix> :p
[03:00:55] <velix> maybe they didn't change their page since XHTML1.0
[03:01:31] *** Joins: dea_ (~dea@213.128.80.36)
[03:02:33] <Alexendoo> Where are you getting that they want you to use a particular form?
[03:03:18] <systemfault> I didn't claim that, velix told us... so I took it as "truth"
[03:05:37] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 240 seconds)
[03:07:30] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[03:07:36] <velix> Sorry, I slept it :(
[03:07:48] <velix> Our frontend guy told me that they want a particular form.
[03:07:52] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[03:07:55] <velix> I just fixed some typos in the meta data.
[03:08:04] <velix> And I found the mixture of <meta> and <meta />
[03:08:09] <velix> So I asked him and he told me.
[03:08:26] <velix> He just copied the example from the facebook web-admin page
[03:08:34] <systemfault> I don't mind one or the other.... just NOT BOTH
[03:09:15] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[03:09:39] <sheetjs> pick one authoritative site
[03:10:33] <velix> sheetjs.com
[03:11:02] <sheetjs> ofc we have both :( that'll be normalized to just > shortly
[03:11:31] <velix> yeah, I just wonder: isn't there a prettifer for HTML ?
[03:11:38] <velix> html tidy?
[03:11:45] <velix> that was envouge in 2006
[03:11:51] <systemfault> I haven't checked but I bet 100$ there's at least one
[03:12:03] <velix> systemfault: when it doesn't cost $100 ;)
[03:12:23] <velix> For $100 you'll get 30 tasty burgers at the new delivery store I've just found
[03:12:24] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[03:12:41] <sheetjs> ok its fixed, all <meta tags end in >
[03:13:05] <velix> aaaaaaaand sheetjs.com is gone from google and facebook and linkedin
[03:13:36] <sheetjs> sheetjs has been facing the wrath of google, and facebook just rips us off, so it's not like the meta tag actually changed anything
[03:13:53] <velix> sheetjs: I know som websites, who have spent $30k in Google ads.
[03:14:08] <velix> 30,000 !
[03:14:21] <systemfault> $30k looks small for a lot of companies...
[03:14:34] <sheetjs> google openly donated $10K in a thinly veiled attempt to tear down sheetjs, so $30K for ads is not surprising
[03:14:36] <velix> mate, those are 10k burgers.
[03:14:49] *** Joins: mohab (~mohab@156.223.33.136)
[03:15:14] <systemfault> velix: You must be familiar with the BigMac index, right?
[03:15:21] <systemfault> Since you calculate everything in burgers
[03:15:23] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[03:16:03] <velix> systemfault: yep ;)
[03:16:26] <velix> But it often isn't that good... since a BigMac is a luxus product.
[03:16:38] <velix> it's often way more expensive than other similar goods.
[03:17:14] <velix> While a bread in Germany is like $3, it's like $0.5 in Turkey. The Bigmac here is like $4.5 and in Turkey $3-§3.5
[03:17:26] <sheetjs> velix: are you german?
[03:17:31] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[03:17:57] <velix> Jawoll.
[03:18:00] <velix> Ja. Yes. Si
[03:18:01] <velix> Evet.
[03:18:04] <velix> Da.
[03:18:25] <sheetjs> "zahl" is the german word for number?
[03:18:25] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:18:39] <velix> Yes.
[03:18:40] <sheetjs> and "zahlen" is plural?
[03:18:41] <sheetjs> ok
[03:18:46] <velix> yes
[03:19:00] <velix> Zahlen and Zahl actually (uppercase)
[03:19:04] <velix> zahlen = to pay
[03:19:08] <velix> Zahlen = numbers
[03:19:12] <velix> verb vs. noun
[03:19:14] <blueagain> sheetjs: it's a bit confusing, zahl is a math number, nummer is like a telefon number
[03:19:20] <sheetjs> what about ZAHL / ZAHLEN?
[03:19:23] <blueagain> depends on what kind of english number you mean
[03:19:37] <sheetjs> tried to find a short name
[03:19:49] <sheetjs> basically, the .numbers exporter starts with a blank template file and injects data
[03:19:53] <blueagain> also, you have to remember Zahl is a female
[03:19:55] <velix> blueagain: but a Telefonnummer is based on Zahlen ;)
[03:20:22] <sheetjs> but its ~50KB encoded as base64, so it's included in a separate script and passed as a parameter for numbers export
[03:20:38] <blueagain> velix: true
[03:20:44] <sheetjs> in trying to find a short word for "number", "zahl" popped up
[03:20:58] <sheetjs> https://unpkg.com/xlsx@0.18.5/dist/xlsx.zahl.js
[03:21:04] <velix> blueagain: actually no, it's "arabische Ziffern".
[03:21:13] <velix> 0-9 = arabic numerals = arabische Ziffern
[03:21:20] <blueagain> yup
[03:21:42] <blueagain> though a ziffer doesn't have to be numeral, you could have a hexziffer too
[03:21:50] <velix> sheetjs: In terms of Excel, "Zahl" is correct in my eyes.
[03:21:53] <stagas> sheetjs: maybe you like this https://github.com/stagas/wantwords
[03:22:12] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[03:22:24] <blueagain> actually, the math notation Z comes from "ganze Zahlen" (whole numbers = integers)
[03:22:58] *** Joins: junebug (~junebug@2600:1700:3db0:2540:c5b0:9800:8007:e7b5)
[03:23:08] <sheetjs> ooh stagas that's pretty neat.  btw you can use `npx wantwords colors`
[03:23:11] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 256 seconds)
[03:23:28] <stagas> sheetjs: ah cool :D
[03:23:33] <stagas> i should put it in the readme
[03:24:04] <sheetjs> under the hood, German excel calls worksheets "Arbeitsblätter"
[03:24:19] <blueagain> yeah, that's a pretty literal translation
[03:24:39] <blueagain> though in german "Bogen" would be common for "sheet" than "Blatt"
[03:24:52] *** Quits: Donitz2 (~Donitz4@88-115-149-215.elisa-laajakaista.fi) (Quit: Leaving)
[03:24:56] <sheetjs> they localize "worksheets" and "defined names" in XLSX
[03:25:00] <sheetjs> https://github.com/SheetJS/sheetjs/blob/9a3294c955cfd32daeda8d26f44c5f9d9fee71d5/bits/34_extprops.js#L31
[03:25:12] <blueagain> "Blatt" is the literal paper
[03:25:15] <sheetjs> "Fogli di lavoro" is italian iirc
[03:25:19] <velix> I know many people, calling the worksheets "Tabelle" :-(
[03:25:30] <velix> I guess even Excel names them "Tabelle 1"
[03:25:38] <blueagain> yup, that it does
[03:25:46] <velix> what is it in English?
[03:25:47] <sheetjs> "Tabelle" in the Excel sheet names because the english equivalent is "Sheet"
[03:25:51] <velix> sheet 1 or Table 1 ?
[03:26:02] <velix> Sheet = Tabelle ?? Nah!
[03:26:10] <velix> One worksheet can have many tables.
[03:26:16] <sheetjs> "Arbeitsblätter" is in the metadata in lieu of "Worksheets"
[03:27:11] <sheetjs> localization / translation is difficult
[03:27:18] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:27:34] <blueagain> a non literal translation of worksheet would be rather "Entwurfsblatt" or "Entwurfsbogen"
[03:28:03] <blueagain> Entwurf comes from "entwerfen", to plan/draft
[03:28:16] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[03:28:17] <velix> Yeah, but a draft is something completly different.
[03:28:20] <velix> better: datasheet !
[03:28:23] <velix> Datenblatt ;)
[03:28:29] <velix> But it's also something completly different :D
[03:28:49] *** Quits: alystair (~alystair@user/alystair) (Remote host closed the connection)
[03:28:55] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[03:29:14] <velix> Wasn't "Arbeitsmappe" als common ?
[03:29:28] <blueagain> oh yeah, that's a bit older German
[03:29:42] <velix> Guess what, I'm still on Office 2003.
[03:29:46] <blueagain> "Mappe" is like your portfolio
[03:29:48] <velix> The best office ever made before 2010.
[03:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[03:30:02] <blueagain> if you go to art school and want to show your works, you'd bring your "Mappe" with you
[03:30:03] <velix> I'm using it for 20 years now. I was beta-tester.
[03:30:10] <velix> blueagain: models have a Mappe
[03:30:17] <velix> blueagain: with their pictures.
[03:30:21] <sheetjs> have you played with really old Excel velix?
[03:30:31] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[03:30:31] <ThePendulum> the one with a flight simulator built in?
[03:30:33] <velix> sheetjs: I started on Works on DOS.
[03:30:39] <velix> sheetjs: then 98, 2000
[03:30:41] <blueagain> sheetjs: you know German?
[03:30:58] <velix> ThePendulum: aaah yeah, I remember that. And some flying toasters.
[03:31:06] <velix> that was in internet explorer I guess.
[03:31:10] <velix> where you needed to move the "e"
[03:31:17] <sheetjs> no, but german words are helpful for certain encoding tests
[03:31:25] <blueagain> One thing I miss from word is the clip
[03:31:29] <blueagain> oh, and the dog
[03:31:32] <blueagain> anyone remember the dog?
[03:31:32] <velix> sheetjs: German sounds better when it's shouted loud.
[03:31:37] <velix> sheetjs: see Rammstein.
[03:31:47] <sheetjs> DU .... DU HAST .... DU HAST MICH!
[03:31:48] <velix> so ARBEITSBLATT is always right
[03:32:25] <sheetjs> https://sheetjs.com/demo/table to ensure unicode / codepage export support is correct, demos use at least one non-english language
[03:32:40] <blueagain> sheetjs: that song is actually a word play on "du hast" (you have) and "du hasst" (you hate). they are homophones
[03:32:56] <velix> blueagain: ah, XLS(X) is called "Arbeitsmappe.
[03:33:01] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:33:02] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[03:33:11] <velix> A friend just suggested "Kalkulationsblatt"
[03:33:16] <velix> calculation sheet
[03:33:19] <blueagain> we should call it "Werkbogen"
[03:33:22] <blueagain> lol
[03:33:45] *** Joins: pizdets_ (~pizdets@183.182.111.232)
[03:33:49] <sheetjs> the OG excel https://i.imgur.com/xzIfFUe.png
[03:33:56] <velix> My Office 2003 can still read and write (!) dbase files.
[03:34:01] <velix> I'll never give it up.
[03:34:05] <velix> it's sooo damn solid
[03:34:28] <velix> sheetjs: yeah, I remember this one :D
[03:34:31] *** Quits: pizdets (~pizdets@183.182.111.82) (Ping timeout: 260 seconds)
[03:34:33] <velix> on my IBM PC 386
[03:34:37] <sheetjs> fun fact: foxpro dbf arent compatible with old excel
[03:34:53] <sheetjs> despite both being microsoft products
[03:35:34] <velix> I have funny file formats in here: DLK, QuattroPro, SYLK
[03:35:37] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[03:35:40] <velix> never heard of them
[03:35:58] <sheetjs> SYLK is from multiplan (the predecessor of Excel)
[03:36:08] <velix> it can even read & write down to Works 1.0
[03:36:11] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[03:36:14] <sheetjs> its the reason why CSV files can't start with ID
[03:36:26] <velix> sheetjs: uh ?
[03:36:36] <velix> --details=3
[03:37:10] *** Quits: tazle (tazle@kapsi.fi) (Ping timeout: 272 seconds)
[03:37:21] *** Quits: kakashiA1 (~kakashi@41.141.191.109) (Ping timeout: 256 seconds)
[03:37:21] <sheetjs> you have office 2003 right?
[03:37:27] <ThePendulum> I do like excel, can't think of many programs that are so universally useful
[03:37:45] <sheetjs> so make a new file, set A1 to the string ID (no quotes), B1 = 1, A2 = 1, B2 = 1
[03:37:47] <sheetjs> then save as CSV
[03:37:50] <sheetjs> and try to open in Excel
[03:38:04] <sheetjs> it will give you an error because it thinks the file is a SYLK file
[03:38:25] <velix> sheetjs: yes
[03:38:29] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[03:38:33] <velix> 1 sec
[03:39:05] *** Joins: pulse (~pulse@user/pulse)
[03:39:23] <velix> oh nice :D
[03:39:39] <sheetjs> quattro pro is another application, originally borland and now part of wordperfect
[03:39:40] <velix> works for "id"
[03:39:50] <sheetjs> it has to be capital ID
[03:39:52] <velix> erm, id
[03:39:53] <velix> yeah
[03:39:55] <velix> funny
[03:40:05] <sheetjs> so sheetjs works around it with speculative parsing
[03:40:30] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 252 seconds)
[03:40:40] <sheetjs> https://github.com/SheetJS/sheetjs/blob/master/bits/40_harb.js#L1013 first try parsing as SYLK, and if there's a bad record then it tries re-parsing as CSV
[03:41:42] <velix> sheetjs: What I REALLY hate about XLSX is  this annoying shared table.
[03:41:47] <velix> sheetjs: it take AGES to write.
[03:42:06] <velix> sure, it makes the file smaller...
[03:42:14] <velix> but it's not needed.
[03:42:45] <sheetjs> there's an option
[03:42:50] *** Joins: tazle (tazle@kapsi.fi)
[03:42:53] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[03:42:56] <velix> in sheetjs or in excel
[03:42:58] <sheetjs> under the hood XLSX also has an inline string representation
[03:42:59] <sheetjs> sheetjs
[03:43:10] <sheetjs> the option is `bookSST` which is off by default for performance reasons
[03:43:15] <velix> yep
[03:43:33] <sheetjs> both XLS and XLSB have support for inline strings
[03:43:46] <sheetjs> but Excel doesn't use them by default.
[03:43:51] <velix> I'm sad that excel has no extrict column type
[03:43:55] *** Quits: mohab (~mohab@156.223.33.136) (Quit: Quit)
[03:43:58] <velix> "allow numbers only"
[03:44:04] <velix> that would save much of trouble ;)
[03:44:15] <velix> when importing to Postgresql, etc.
[03:45:10] <sheetjs> you should ask them to add it
[03:45:25] *** Joins: l__q (~modinfo@user/modinfo)
[03:46:03] <sheetjs> numbers unfortunately only has a shared string tavle
[03:46:15] <sheetjs> actually it has two tables, one for plain strings and one for "rich" strings
[03:51:54] <velix> sorry, I'm too tire.
[03:51:56] <velix> d
[03:52:03] <velix> let's talk tomorrowwwwwwwwwwww
[03:52:07] <velix> good night :(
[03:55:38] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[03:56:33] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:57:46] <blueagain> velix: sleep tight
[03:58:17] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[03:58:20] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[03:58:59] *** Quits: junebug (~junebug@2600:1700:3db0:2540:c5b0:9800:8007:e7b5) (Quit: Leaving)
[03:59:13] <sheetjs> hard to get people excited about excel and spreadsheets
[04:03:14] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[04:07:22] *** Joins: AJTJ (~AJTJ@d205-234-49-159.yt.northwestel.net)
[04:07:47] <AJTJ> Using SCSS, does someone know how to style the text of of a textarea?
[04:07:49] *** Joins: wyclif (~wyclif@user/wyclif)
[04:08:00] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[04:08:02] <AJTJ> Basically I'd like to highlight all the text by changing the background color
[04:08:19] <AJTJ> without changing the background of the entire textarea box
[04:09:21] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[04:13:31] *** Joins: nulixes1 (~Thunderbi@gateway/vpn/pia/nulixes)
[04:15:19] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 256 seconds)
[04:15:19] *** nulixes1 is now known as nulixes
[04:26:10] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[04:32:54] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 272 seconds)
[04:33:27] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:33:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[04:34:48] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 272 seconds)
[04:37:00] <blueagain> sheetjs: have you always been passionate about excel?
[04:37:32] <blueagain> as I said before, I do think the idea of true reactivity super exciting
[04:37:41] <blueagain> pity react doesn't stand for that
[04:37:59] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[04:39:44] *** Joins: Lindrian (~Lindrian@about/regex/lindrian)
[04:39:59] *** Quits: sa0 (~sa0sin@88.120.82.205) (Remote host closed the connection)
[04:40:00] *** Parts: Lindrian (~Lindrian@about/regex/lindrian) (WeeChat 3.4)
[04:40:45] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:45bc:c07c:8550:9590)
[04:41:00] <sheetjs> to a large extent, it's how people misunderstand excel
[04:41:12] <sheetjs> https://www.bbc.co.uk/news/technology-54423988
[04:41:48] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[04:44:48] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:45:34] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:45bc:c07c:8550:9590) (Ping timeout: 260 seconds)
[04:45:56] *** Joins: onosendi (~onosendi@user/onosendi)
[04:46:18] <average> blueagain: that's a line to write in the resume "Passionate about Microsoft Excel"
[04:46:48] <average> blueagain: it's also possible to write "Passionate about PowerPoint"
[04:47:14] <onosendi> lol
[04:47:41] <KevinX> im still passionate about frontpage
[04:49:00] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[04:49:03] <blueagain> sheetjs: that article has nothing to do with excel do, you can backup your data regardless of how you save it
[04:49:16] *** Quits: pajaroherido (uid152904@id-152904.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:49:21] <blueagain> just easier to blame excel, lol
[04:49:28] <blueagain> s/do/though
[04:49:30] <sheetjs> did you read the article?
[04:49:56] <sheetjs> what did the developers cite as the issue?
[04:50:03] <blueagain> limitation
[04:50:08] <sheetjs> what limitation
[04:50:28] <blueagain> number of lines? I didn't read the entire article
[04:50:39] <sheetjs> before XLSX/XLSB, there was XLS
[04:50:55] <sheetjs> the latest version of the XLS format had a limit of 65536 rows
[04:51:01] <sheetjs> ... they had more than 65536 cases
[04:51:11] <average> https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/cd03cb5f-ca02-4934-a391-bb674cb8aa06
[04:51:17] <average> Excel spec is here.. in DOCX format
[04:51:33] <average> https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-doc/ccd7b486-7881-484c-a137-51170af7cc22
[04:51:42] <average> DOC/DOCX format is written in DOCX
[04:51:52] <sheetjs> now it's fair to say they are scapegoating Excel, but it's unacceptable that developers don't know these limits and it's unacceptable that the tooling doesn't tell you when you are exceeding the limits
[04:52:00] <average> if asteroid wipes out earth, good luck reimplementing DOC/DOCX..
[04:52:01] <doc> :|
[04:52:20] <sheetjs> blueagain: https://en.wikipedia.org/wiki/Growth_in_a_Time_of_Debt this is another case
[04:52:22] <average> you can't read the spec because the spec is written in the very format the spec describes..
[04:52:38] <average> legit way to make it future-proof
[04:52:48] <average> I should learn from Microsoft..
[04:53:53] <average> https://support.microsoft.com/en-us/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3
[04:54:21] <average> sheetjs: the limit is 1,048,576 rows and 16,384 columns
[04:54:24] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[04:54:32] <sheetjs> XLSX/XLSB liit
[04:55:05] <sheetjs> https://docs.sheetjs.com/#file-formats scroll a little bit down to see the table
[04:55:17] <sheetjs> XLS had multiple revisions with different limits
[04:55:35] <sheetjs> OG Lotus WKS had a limit of 2048 rows x 256 cols
[04:56:12] <blueagain> I still don't get why they hadn't backed up the original data, the csvs
[04:56:27] <blueagain> you'd think you backup data *before* you apply transformations to it
[04:56:37] <sheetjs> XLS was the backup :P
[04:56:49] <blueagain> lol
[04:59:26] <blueagain> when your backup can hold less data than your original data
[04:59:56] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[05:00:11] <sheetjs> many of these excuses should be unacceptable
[05:00:21] <sheetjs> especially when lives are at stake
[05:01:54] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[05:04:29] <onosendi> sheetjs: "especially when lives are at stake" ?
[05:05:09] <sheetjs> policy decisions are made based on data
[05:06:03] <sheetjs> "athens burned" as part of austerity riots
[05:06:23] <systemfault> Ah, really?
[05:06:40] <sheetjs> the full thread is
[05:06:41] <systemfault> Seems like most decisions are made impulsively... based on emotion
[05:06:47] <systemfault> (In general)
[05:06:57] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Quit: %bye mirc%)
[05:07:52] <sheetjs> "two harvard professors 'made a mistake' in a spreadsheet" -> "politicians use flawed research result to advocate for deep government spending cuts" -> "austerity is imposed on greece" -> "riots in greece"
[05:09:47] <sheetjs> https://en.wikipedia.org/wiki/Growth_in_a_Time_of_Debt in case you're interested systemfault
[05:09:57] <systemfault> Thank you!
[05:11:09] <sheetjs> https://en.wikipedia.org/wiki/Thomas_Herndon its a really cool story
[05:11:10] *** Joins: l__q_ (~modinfo@user/modinfo)
[05:11:21] <sheetjs> During his graduate studies in a class with Professor Michael Ash, Herndon was assigned to pick an economics paper and try to replicate the results. He chose "Growth in a Time of Debt", and throughout the semester his attempts to replicate the results proved unsuccessful. After further consultation with his professors Michael Ash and Robert Pollin, Herndon was encouraged to contact the authors Reinhart and Rogoff at Harvard.
[05:11:26] <sheetjs> They provided him with the actual working spreadsheet they had used to obtain their results. Herndon looked into the detail of the original spreadsheet and found several issues:
[05:11:57] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 240 seconds)
[05:13:01] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[05:18:48] *** Joins: filename (~kilitary@188.242.105.134)
[05:21:08] *** Joins: smrtrnx (~Dan@49.145.171.234)
[05:22:56] *** Joins: bn_mobile (uid278100@id-278100.tinside.irccloud.com)
[05:23:50] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[05:24:04] <smrtrnx> Hello everyone
[05:25:52] *** Joins: The_Blod- (~Blode@user/the-blode/x-7164444)
[05:26:06] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[05:26:57] *** smrtrnx is now known as MrNick
[05:29:16] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[05:30:09] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[05:35:11] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:35:47] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[05:37:29] *** Quits: MrNick (~Dan@49.145.171.234) (Ping timeout: 256 seconds)
[05:39:27] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[05:40:59] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 260 seconds)
[05:43:09] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[05:43:12] *** Joins: summersault (~summersau@179.221.251.36)
[05:48:02] *** Joins: karabaja4 (~karabaja4@dh207-95-166.xnet.hr)
[05:52:08] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[05:54:25] *** Joins: summersault (~summersau@179.221.251.36)
[05:59:39] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 252 seconds)
[06:00:21] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:00:42] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[06:02:35] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[06:03:33] *** Quits: kakashiA1 (~kakashi@41.141.191.109) (Ping timeout: 256 seconds)
[06:06:34] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[06:07:54] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 272 seconds)
[06:08:46] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[06:10:08] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:45bc:c07c:8550:9590)
[06:10:58] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Client Quit)
[06:24:24] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 252 seconds)
[06:27:05] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[06:30:04] *** Quits: doji (~doji@user/doji) (Ping timeout: 272 seconds)
[06:31:57] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 240 seconds)
[06:32:33] *** Quits: pizdets_ (~pizdets@183.182.111.232) (Ping timeout: 265 seconds)
[06:33:14] *** Joins: onosendi (~onosendi@user/onosendi)
[06:33:18] *** Joins: coder7of9 (~coder7of9@user/coder7of9)
[06:33:45] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:45bc:c07c:8550:9590) (Ping timeout: 252 seconds)
[06:34:09] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[06:35:15] *** Joins: doji (~doji@user/doji)
[06:35:48] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[06:38:49] *** Joins: chenqisu1 (~chenqisu1@183.217.201.88)
[06:39:15] *** Quits: haniaF (~haniaF@83.24.44.138.ipv4.supernova.orange.pl) (Ping timeout: 252 seconds)
[06:39:29] *** Joins: haniaF (~haniaF@79.191.93.146.ipv4.supernova.orange.pl)
[06:40:12] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[06:40:23] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:41:31] *** Joins: Akiva (~Akiva@user/Akiva)
[06:43:52] *** Joins: filename (~kilitary@188.242.105.134)
[06:49:01] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[06:49:24] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (Ping timeout: 240 seconds)
[06:49:31] *** Joins: kalen- (~kalen@gateway/vpn/pia/kalen)
[06:49:31] *** kalen- is now known as kalen
[06:51:43] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[06:57:59] *** Joins: smrtrnx (~Dan@49.145.171.234)
[06:59:34] <smrtrnx> Hello
[07:01:45] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[07:02:41] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4d5c:3d55:e680:fa10)
[07:14:27] *** Quits: smrtrnx (~Dan@49.145.171.234) (Ping timeout: 252 seconds)
[07:14:39] <KevinX> Need a friend?
[07:14:50] <KevinX> hi o/
[07:15:04] <KevinX> Happy Friday (or Saturday)
[07:15:38] <average> KevinX: yes please, would like a friend
[07:16:15] <KevinX> got to walk the dog, brb friends
[07:20:11] *** Joins: dea__ (~dea@213.128.80.36)
[07:20:27] *** Quits: dea_ (~dea@213.128.80.36) (Remote host closed the connection)
[07:22:03] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-0961-7b0a-4f50-8e44.res6.spectrum.com) (Quit: Client closed)
[07:28:10] *** Joins: nomic (~nomic@185.217.117.249)
[07:32:07] *** Quits: bn_mobile (uid278100@id-278100.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:33:43] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:35:43] *** Joins: exgirl (uid545763@id-545763.tinside.irccloud.com)
[07:36:27] *** Parts: exgirl (uid545763@id-545763.tinside.irccloud.com) ()
[07:38:07] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[07:41:19] *** Joins: suss (uid545763@user/suss)
[07:41:37] <suss> we
[07:41:40] *** Parts: suss (uid545763@user/suss) ()
[07:43:18] *** Quits: filename (~kilitary@188.242.105.134) (Quit: joined libera)
[07:43:29] <theskillwithin> o/
[07:44:37] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[07:44:47] *** Quits: Daniel15 (~daniel@la05.d.sb) (Quit: Ping timeout (120 seconds))
[07:45:00] *** Joins: Daniel15 (~daniel@la05.d.sb)
[07:46:12] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 240 seconds)
[07:48:20] *** Quits: Daniel15 (~daniel@la05.d.sb) (Client Quit)
[07:53:54] *** Quits: coder7of9 (~coder7of9@user/coder7of9) (Quit: Client closed)
[07:54:55] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 260 seconds)
[07:56:08] <wez> \o
[07:56:43] <wez> KevinX: Happy Saturday afternoon!!!
[07:59:22] *** Quits: The_Blod- (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[08:02:48] <average> hey theskillwithin
[08:03:37] <theskillwithin> yo!
[08:03:49] <average> I just looked at a C# disassembly of a game, and I saw around ~4000 classes, each in its own files, and I'm thinking one of the following must be teh reason:
[08:04:04] <average> 1) original authors were using some form of code generation (unlikely)
[08:04:12] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:04:20] <average> 2) disassembler gone haywire or inaccurate..
[08:04:26] <average> 3) a lot of dead code
[08:04:47] <systemfault> Looks pretty normal for a full game...
[08:04:58] <systemfault> If it's just a Tetris game... then there's a problem.
[08:05:22] <systemfault> Also, you need to take into consideration "Engines"
[08:06:05] <average> well to be fair it's known that the game was built on top of the Unity game engine
[08:06:13] <systemfault> Voilà....
[08:06:24] <average> and yeah I think you're right, the disassembler must have disregarded that, and didn't know how to separate game from engine
[08:06:57] <systemfault> Engines must be fairly generic to accommodate different types of games
[08:07:10] <systemfault> That creates a lot of component inter-dependencies...
[08:07:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4d5c:3d55:e680:fa10) (Ping timeout: 240 seconds)
[08:07:25] <systemfault> Means that if you use a single class of Unity in your game, you end with 4000 :p
[08:08:16] <systemfault> IIRC, unity also has a scripting language in their engine...
[08:08:28] <systemfault> So that when you write a game, you don't have to type a ton of C#
[08:08:53] <systemfault> Ah, it doesn't anymore according to Google
[08:08:56] <systemfault> nvm
[08:10:19] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 260 seconds)
[08:10:54] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:12:38] *** Joins: filename (~kilitary@188.242.105.134)
[08:13:35] *** Joins: onosendi (~onosendi@user/onosendi)
[08:13:47] <ox1eef> i bought a book on rust today
[08:13:50] <ox1eef> seems quite cool
[08:14:42] <average> ox1eef: there's only two languages that I thought about learning, and haven't one is Rust
[08:14:43] <systemfault> I just don't feel like doing native & GC-less programming anymore...
[08:15:25] <average> systemfault: and Rust is GC-less? it has a borrow-checker which I don't exactly know what that is..
[08:15:26] <systemfault> Funny since I spent my first 10 years as a hobbyist learning C++...
[08:15:30] <average> is it a GC.. is it not a GC ..
[08:16:08] <average> I don't like C++ very much, even though I have written it..
[08:16:17] <average> not a fan
[08:16:27] <ox1eef> i was the same a few years ago, totally against it. a friend recommended checking it out today.
[08:16:27] <systemfault> average: It's not, it's just that resource usage are enforced by the type system. (BTW, I don't know much about Rust... )
[08:16:59] <ox1eef> it has a concept of ownership which drives the memory model, it's what make it stands out
[08:17:19] <Maxdamantus> imo the ultimate programming language will have an ownership model similar to Rust, but also with GC.
[08:17:38] <average> Maxdamantus: how hard is it to slap a GC onto Rust?
[08:17:46] <Maxdamantus> Theoretically, you could add GC to Rust (and there is at least one library that does so), but since a lot of the language caters to non-GC, it's a bit awkward.
[08:17:48] <average> I'm sure Rust must have some GC lib..
[08:17:51] *** Quits: dea__ (~dea@213.128.80.36) (Ping timeout: 256 seconds)
[08:17:57] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 240 seconds)
[08:18:02] <average> right right..
[08:18:07] <systemfault> If Rust had a GC, it wouldn't stand out...
[08:18:17] <ox1eef> Rust wants to be a systems language, so i dont think itd make sense as a default for rust specifically
[08:18:25] <Maxdamantus> Sure it would, because you could do all the same things you can already do in Rust.
[08:18:26] <systemfault> Rust is the first competitor to C++.. ever.
[08:18:34] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3a9c:9bd9:933c:fcdf)
[08:18:42] <Maxdamantus> But if you wanted to, you could also do regular GC-based programming like in Go or Java.
[08:19:39] <Maxdamantus> I suspect in general, people should be doing GC-based programming, but for certain areas where it might be worth the effort, it makes sense to use some sort of substructural/ownership typing system.
[08:20:00] <average> I don't fully understand what Go's market is exactly. Web apps? API server apps? automation?
[08:20:06] <Maxdamantus> alternatively, maybe they could just add ownership types to Go.
[08:20:13] <average> that's kindof what Go seems to be about..
[08:20:13] <ox1eef> certain areas dont want to carry the overhead of a GC, and leave that power in the hands of the programmer - for better or worse.
[08:20:14] <systemfault> average: See it as a fast Python...
[08:20:27] <average> systemfault: as fast as Python but without all the eco-system..
[08:20:27] <systemfault> average: It's popular in the devops community
[08:20:35] <systemfault> Python is slow as shit compared to Go
[08:20:49] <average> systemfault: I've held several devops positions but didn't want to touch kubernetes so I haven't touched Go either
[08:20:49] <Maxdamantus> ox1eef: right, so you should be able to write a program that doesn't use GC or any libraries that use GC, and then there should be no GC in your compiled code.
[08:21:08] <Maxdamantus> (any GC logic that is part of the language should just be DCEd)
[08:21:23] <systemfault> average: Go programs compile to a single executable that you can deploy and run... No virtualenv, no pip, no package nightmares.
[08:21:23] <ox1eef> afaik there is a ref counting GC as a third party lib, its mentioned in the book
[08:21:45] <Maxdamantus> Ref counting in Rust is part of the standard library, not third-party.
[08:21:55] <Maxdamantus> and that doesn't really count as GC, since it doesn't handle cycles.
[08:21:55] <ox1eef> ah ok, thanks
[08:22:10] <average> systemfault: that does seem appealing, and somehow we still have all this container madness to solve deps, and we have Go which solved deps via self-contained binaries too..
[08:22:34] <ox1eef> right, but it's probably a good start
[08:22:46] <systemfault> average: I'm not saying that as a fan... Until a few days ago (Go 1.8), I wasn't ever going to use it...
[08:22:58] <Maxdamantus> and ref counting still has overhead anyway.
[08:23:19] <systemfault> average: Now that it became a non-stupid programming language by adding generics, I'll consider it for some tasks
[08:24:56] <Maxdamantus> (possibly more overhead than a decent GC, depending on the task)
[08:25:34] <systemfault> C++ devs don't want a GC because they want deterministic memory allocations/deallocations.
[08:25:43] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[08:25:45] <systemfault> Not when some GC decides to stop the world.
[08:25:58] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:26:01] <ox1eef> JVM seemed to be the top tier for GCs
[08:26:08] <ox1eef> many different options
[08:26:08] <systemfault> s/Not/Not free memory when
[08:26:29] <systemfault> Yup, just not for the type of applications C++ is still used today.
[08:26:41] <systemfault> They're not competitors.
[08:26:46] <ox1eef> true
[08:27:08] <ox1eef> although sometimes i hear 'java executing as fast as c++', so maybe it tries to be :p
[08:27:09] <systemfault> Java is insanely fast.
[08:27:15] <systemfault> lol, nope.
[08:27:17] <Maxdamantus> JVM is (currently) highly dependent on GC though, unlike eg, Go, where you already have struct values that can be passed to functions.
[08:27:35] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[08:27:40] <systemfault> On course, you can always find some weird corner case where Java could be faster than C++... but it doesn't matter.
[08:27:52] <ox1eef> indeed
[08:28:04] <Maxdamantus> (or put inside arrays)
[08:28:16] <Maxdamantus> also, arrays in structs, etc.
[08:28:31] <systemfault> Maxdamantus: Maybe the JVM will eventually get structs..
[08:28:31] <Maxdamantus> all of these things require objects in Java.
[08:28:35] <Maxdamantus> systemfault: it will.
[08:28:41] <Maxdamantus> "project Valhalla"
[08:28:44] <systemfault> IIRC, the .net runtime already does
[08:28:52] <systemfault> I see
[08:29:36] <Maxdamantus> It's also basically adopting Go's threading model, as part of "project Loom"
[08:29:47] <average> systemfault: C++ devs want deterministic memory but they still have memory leaks.. I solved one of them in some large C++ project on github..
[08:30:21] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 252 seconds)
[08:30:42] <ox1eef> chrome is a good example of what can happen when that goes wrong
[08:31:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[08:31:22] <sheetjs> for a low-level library with potential wasm port, what is the recommended starting language in 2022?
[08:31:42] *** Joins: wyclif (~wyclif@user/wyclif)
[08:34:00] *** Quits: relms (~relms@user/relms) (Quit: Byeeee)
[08:34:50] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:45bc:c07c:8550:9590)
[08:37:00] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[08:37:08] <systemfault> Rust..
[08:37:11] <theskillwithin> rust can do wasm right?  but now that I hear rust doesn't have GC, idk
[08:37:22] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 272 seconds)
[08:37:25] <sheetjs> go also has a wasm story
[08:37:37] <sheetjs> esbuild-wasm, for example
[08:37:46] <systemfault> It's hard for me to call a language with GC... Low level
[08:38:00] <theskillwithin> i feel like wasm was a thing I heard 5 years ago promising it will be huge in a year, and now here we are 5 years later and I have never used wasm
[08:38:06] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:6c75:c89d:916b:3b14) (Read error: Connection reset by peer)
[08:38:10] <sheetjs> https://bundle.js.org/
[08:38:20] <sheetjs> ^^ uses esbuild-wasm + rollup to calculate bundle sizes
[08:38:58] <KevinX> figma uses wasm, so does unity I think
[08:39:04] <systemfault> WASM is a niche thing at the moment because it doesn't support GC.
[08:39:33] <systemfault> Also... interactions with the JS world aren't so great apparently.
[08:40:43] <KevinX> I don't think you could do this without wasm https://beta.unity3d.com/jonas/AngryBots/
[08:41:48] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[08:41:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[08:41:48] <systemfault> You probably could... with way shittier performance.
[08:42:17] <systemfault> I mean, all the "primitives" exist in JS...
[08:42:42] *** Joins: wyclif (~wyclif@user/wyclif)
[08:44:39] *** Joins: rock (~rock@user/rock)
[08:45:06] <ox1eef> when its ready wasm will be a game changer i guess
[08:45:51] <KevinX> I think the benefit is you can write in rust or C or whatever where youre already used to managing memory, etc
[08:47:05] <KevinX> i wonder if types get into JS the next proposal will be to remove the GC ;-)
[08:47:21] <KevinX> (kidding)
[08:47:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[08:47:27] <systemfault> Types are not happening either :p
[08:47:44] <systemfault> I'm fine with TS... just wish the compiler was faster.
[08:48:14] *** Joins: wyclif (~wyclif@user/wyclif)
[08:49:51] <ox1eef> TS goes into same bucket as coffeescript for me
[08:50:11] <systemfault> CoffeeScript is dead... TypeScript is slowly taking over JS
[08:50:19] <systemfault> The comparison is pretty bad.
[08:51:04] <KevinX> I'm strongly betting on rust, so I don't know where that would put typescript in my book
[08:51:19] <KevinX> althoguh I'm generally ok with TS
[08:51:26] <systemfault> Not the same class of languages...
[08:51:43] <KevinX> I mean with Rust being used for web development
[08:52:00] <KevinX> say.. in 10 years
[08:52:50] <systemfault> I don't want to deal with memory if all I want to do is to work with DOM nodes..
[08:53:07] <systemfault> Which is what most webdevs do... (directly... or via a framework)
[08:53:29] <systemfault> You could "rust all the things"... sure..
[08:53:52] <sheetjs> part of the problem with low-level JS is the "community", as it were
[08:54:07] <sheetjs> for example, eslint has a very unique interpretation of switch fallthrough which they seem unwilling to change
[08:54:35] <ThePendulum> doesn't eslint do whatever you tell it to?
[08:54:48] <sheetjs> sheetjs core library has about 200 switch statements :/
[08:54:51] <ThePendulum> or there's some sort of parsing error?
[08:54:58] <sheetjs> so "no-fallthrough" has a very unique interpretation
[08:55:13] <sheetjs> in C/C++/PHP/Java/etc, fallthrough is defined when there's a statement between cases
[08:55:24] <sheetjs> https://github.com/eslint/eslint/issues/15703
[08:55:41] <KevinX> you dont really deal with memory management that much in rust. The compiler sort of acts like the GC in that your variables have "lifetimes" that you either assign to a variable, or let it be inferred by block scope
[08:55:47] <sheetjs> e.g. switch(x) { case 1: statement; /* this is fallthrough */ case 2: ...
[08:56:30] <KevinX> I say "acts liek the gC" very loosely in that it's managing the memory for you
[08:56:32] <sheetjs> some languages like go define the boundary between case clauses, so `case 1: case 2:` is always fallthrough
[08:56:40] <sheetjs> ESLint defines fallthrough based on whitespace
[08:56:57] <sheetjs> even JSHint / JSLint use statement-based interpretations, so ESLint's stance is unique
[08:57:07] <KevinX> im lost. let me read the issue
[08:57:11] <systemfault> KevinX: What people who have written Rust are often telling me (never tried) is that Rust makes it really painful to write data structures like trees
[08:57:50] <KevinX> not sure about that. I'm still fairly new and can never find the time to study it/write more as much as I'd like
[08:57:59] <ThePendulum> what's the point of a case without a statement?
[08:58:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[08:58:24] <sheetjs> sometimes two cases use the same behavior
[08:58:50] <ThePendulum> oh right
[08:59:19] *** Joins: wyclif (~wyclif@user/wyclif)
[08:59:23] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Quit: WeeChat 3.4)
[08:59:46] <sheetjs> https://github.com/SheetJS/sheetjs/blob/master/modules/83_numbers.ts#L440 originally there were 3 different functions which would be called based on the first byte
[09:00:00] <ThePendulum> I should start a new project with typescript tomorrow, get comfortable with the vue composition api while at it
[09:00:03] <theskillwithin> one time I mentioned conventional commits to in conversation GJ and soon after he created this using rust https://github.com/brigand/glint
[09:00:14] <sheetjs> so if the first byte were 0 or 1 it would call function A, 2 or 3 -> B, 5 -> C, anything else would be an error
[09:00:27] <ljharb> sheetjs: eslint is going to add an option for what you want, as you surely saw
[09:00:34] <KevinX> guess the issue is just about semantics
[09:00:39] <ljharb> but either way, switch statements are gross
[09:00:42] <sheetjs> they aren't changing the defaults, which is the really odd part
[09:00:50] <ljharb> it’s not worth a breaking change
[09:01:16] <sheetjs> in itself, ESLint's switch interpretation breaks 40+ years of software development
[09:01:26] <ljharb> relying on fallthrough is a microscopic % of the uses of switch which are already microscopic
[09:01:30] <ljharb> lol no it doesn’t
[09:01:36] <sheetjs> nothing, not even historical javascript, uses the interpretation ESLint uses
[09:01:46] <ljharb> it’s a linter, turn off the rule or use an override comment. Nothings broken, and that kind of hyperbole weakens your argument
[09:01:59] <sheetjs> the question is "what is fallthrough"
[09:02:13] <sheetjs> and eslint's definition doesn't line up with any traditional definition of fallthrough
[09:02:14] <ljharb> it’s any time there’s more than one case in a row
[09:02:22] <systemfault> ^
[09:02:24] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[09:02:27] <ljharb> i think the logic that eslint has the wrong behavior by default is sound
[09:02:37] <KevinX> personally I'd call that fallthrough, but i could be technically wrong
[09:02:38] <ljharb> But, using fallthrough is bad and you should feel bad
[09:02:52] <ThePendulum> don't you have an eslintrc file anyway?
[09:02:54] <sheetjs> there are two logically consistent and historical interpretations of fallthrough
[09:03:01] <ljharb> And when you’re doing an embarrassing thing you probably shouldn’t get all upset that it’s not being handled “traditionally”
[09:03:18] <ljharb> and the modern JS interpretation of it is “never ever do it, you bad programmer”
[09:03:31] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:45bc:c07c:8550:9590) (Ping timeout: 256 seconds)
[09:03:40] <ljharb> so while eslint may be wrong, nobody’s noticed in almost a decade because virtually nobody uses fallthrough, as they shouldn’t.
[09:03:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[09:04:00] <sheetjs> people have noticed, it's been raised multiple times and the maintainers shut down the discussion without giving a rationale
[09:04:07] <ljharb> oh prior to this issue?
[09:04:28] <sheetjs> at least 8 issues, one person looked at the history
[09:04:32] <ljharb> ok well, i agree with you they should eventually change the default, but the way to do that is always to first add an option
[09:04:43] <ljharb> but also, who cares, don’t use fallthrough, fallthrough is terrible
[09:04:51] *** Joins: wyclif (~wyclif@user/wyclif)
[09:05:23] <KevinX> Update the spec to allow `case 2, case 3:` ;-)
[09:05:33] <ljharb> if/else is cleaner and any competent js engine will make it a jump table the same as a switch
[09:05:44] <ljharb> KevinX: no, pattern matching, and switch will never have a use case again
[09:05:50] <sheetjs> KevinX: go does `case 2,3:`
[09:06:01] <ljharb> that’s already valid js tho.
[09:06:07] <sheetjs> and requires an explicit statement to enable fallthrough
[09:06:28] <ljharb> if the comma operator didn’t exist there’s a ton of things in js that could have been very simple via a comma-separated list. But it does so they aren’t.
[09:07:21] <ljharb> and if i had to pick a thing to erase, it’d be the switch statement long before the comma operator
[09:07:59] <systemfault> I can somewhat understand switch... it's bad but was pretty standard in programming languages.
[09:08:02] *** Parts: rock (~rock@user/rock) (brb)
[09:08:06] <systemfault> The comma operator.... WTF.
[09:08:26] <ljharb> i agree there. but i still think switch is worse.
[09:08:27] <sheetjs> comma operator permits complex statements
[09:08:35] <ljharb> expressions, you mean
[09:08:42] <sheetjs> err yeah expressions
[09:08:42] <ljharb> and complex expressions shouldn’t exist :-)
[09:09:20] <systemfault> The only other WTF in JS for me is the "void" operator...
[09:09:29] <systemfault> Not sure what Brendan was thinking at the time.
[09:09:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[09:09:39] <ljharb> real people don’t write code with the comma operator, it’s just used by minifiers
[09:09:45] <ljharb> lol yeah void is dumb too
[09:10:39] *** Joins: wyclif (~wyclif@user/wyclif)
[09:14:29] <theskillwithin> Brendan regrets a lot of things, and usually those things werent his idea, he was just trying to satisfy requests
[09:15:06] <sheetjs> people will find ways around constraints
[09:15:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[09:16:13] *** Joins: wyclif (~wyclif@user/wyclif)
[09:16:24] <systemfault> I don't believe anyone said... "Yo super-brand-buddy, what's up pal?! Would be nice if you added an operator that... listen to be bro, it's gonna be good!...  an operator that return undefined no matter what you use it with!"
[09:17:36] <sheetjs> actually
[09:17:38] <theskillwithin> thats the cartoon version sure, but iv heard him talk about it in interviews.  not specifically about that operator but other things, and it was implied a lot was added for just reasons of appeasing requests
[09:17:40] <sheetjs> it is a pretty good idea
[09:17:51] <sheetjs> until people discovered another way using ;
[09:18:02] <systemfault> Pretty sure that what he was told was something like "See that pile of trash called Java? Our boss wants your little script language to look like it as much as possible!"
[09:18:23] <sheetjs> e.g. void (function() { ... })() is one solution and ;(function() { ... })() was probably discovered later
[09:19:16] <theskillwithin> I think it was this interview https://youtu.be/krB0enBeSiE
[09:19:16] <skillbot> YouTube Title: Brendan Eich: JavaScript, Firefox, Mozilla, and Brave | Lex Fridman Podcast #160
[09:19:32] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:4156:bbe5:9259:5976) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:21:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[09:21:43] *** Joins: wyclif (~wyclif@user/wyclif)
[09:26:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[09:27:15] *** Joins: wyclif (~wyclif@user/wyclif)
[09:27:27] <KevinX> anyone using Raycast (for Mac)?
[09:29:30] *** Joins: c4017 (~c4017@2604:3d08:747f:7c90:308f:de35:e19:6888)
[09:30:15] <theskillwithin> I use Alfred, but idk if thats related, iv never seen Raycast b4
[09:31:59] <KevinX> it's a new Alfred replacement
[09:32:09] <KevinX> https://www.raycast.com/
[09:32:24] <KevinX> you write extensions in React
[09:32:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[09:32:50] *** Joins: wyclif (~wyclif@user/wyclif)
[09:34:16] *** Joins: vysn (~vysn@user/vysn)
[09:35:00] <KevinX> I wrote one for laravel forge (VPS server management platform). Thinking of writing one this weekend for the Steam api
[09:36:15] <theskillwithin> im tempted to try it, but idk if it would really benefit me personally,  even if it has more features, are those features I even would use. idk.
[09:36:38] <theskillwithin> i guess id have to try it and find out, maybe someday i will
[09:36:53] <KevinX> I use the VS code and GH extensions all the time, plus the Forge one I wrote
[09:37:11] <KevinX> Otherwise I tend to just use it like I would alfred
[09:37:21] <KevinX> Check the extensions out and see if there are any you use
[09:37:24] <theskillwithin> what on earth would a vscode extension help you with in raycast
[09:37:34] <KevinX> open recent projects
[09:38:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[09:38:17] <KevinX> The GH one just to open repos
[09:38:19] *** Joins: wyclif (~wyclif@user/wyclif)
[09:38:27] <theskillwithin> but you can already do that in vscode
[09:38:40] <KevinX> yeah but i don't always have it in focus
[09:38:47] <KevinX> or open
[09:38:54] <Maxdamantus> All of the "statements" should probably have just been expressions anyway, in which case the comma operator is not useful.
[09:39:05] <KevinX> https://www.raycast.com/store
[09:39:11] <Maxdamantus> const a = { foo; bar };
[09:41:32] <Maxdamantus> const b = for(const o of foos){ if(f(o)) break: o; };
[09:42:54] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[09:43:13] <Maxdamantus> If it worked that way, I guess it would be better for `break o;` to mean "yield o as the result of the loop" (consistent with `return o;`) while `break:label o;` would be used for breaking from a labelled loop.
[09:43:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[09:43:53] *** Joins: wyclif (~wyclif@user/wyclif)
[09:48:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[09:49:24] *** Joins: wyclif (~wyclif@user/wyclif)
[09:53:25] *** Joins: audio (~audio@user/audio)
[10:00:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[10:02:36] *** Joins: wyclif (~wyclif@user/wyclif)
[10:03:55] *** Quits: AJTJ (~AJTJ@d205-234-49-159.yt.northwestel.net) (Quit: Leaving...)
[10:05:15] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3a9c:9bd9:933c:fcdf) (Quit: Leaving)
[10:07:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[10:08:22] *** Joins: wyclif (~wyclif@user/wyclif)
[10:11:38] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[10:12:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[10:13:56] *** Joins: wyclif (~wyclif@user/wyclif)
[10:14:09] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[10:18:08] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[10:19:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[10:19:34] *** Joins: wyclif (~wyclif@user/wyclif)
[10:24:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[10:25:07] *** Joins: wyclif (~wyclif@user/wyclif)
[10:28:42] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:33:26] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[10:33:49] *** Joins: Jigsy (~Jigsy@user/jigsy)
[10:34:29] <sickdyd> ok it's time to build a videogame, fuck it
[10:35:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[10:36:09] *** Joins: wyclif (~wyclif@user/wyclif)
[10:36:19] <friend> why do i get an error when I use e.detail.source || msg. It says can't get source of undefined because e.detail is undefined. Shouldn't e.detail.source then also be undefined and therefore resort to msg?
[10:36:50] *** Joins: dionysus69 (~Thunderbi@185.115.5.129)
[10:36:51] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[10:37:00] <sheetjs> friend: you can't access properties of undefined
[10:37:13] <sheetjs> n> var e = {}; e.detail
[10:37:14] <jellobot> (okay) undefined
[10:37:22] <sheetjs> n> (undefined).source
[10:37:22] <jellobot> (fail) TypeError: Cannot read properties of undefined (reading 'source')
[10:37:42] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:37:47] <friend> It would be nicer if it just return undefined since, in fact it is literally undefined
[10:38:14] <KevinX> e?.detail?.source ?? msg
[10:38:22] <sheetjs> ^^
[10:39:02] <sheetjs> friend: consider the setter.  what would e.detail.source = msg do?
[10:39:09] <friend> so nice. I was just rewriting it e.detail?e.detail.source:msg  that's great
[10:40:13] <friend> There are two ways to add parameters to events in jquery and plain js. so firing a custom event requires params be added to e.detail   but jquery you pass them as a second parameter.
[10:40:39] *** Quits: dionysus69 (~Thunderbi@185.115.5.129) (Client Quit)
[10:41:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[10:41:40] *** Joins: wyclif (~wyclif@user/wyclif)
[10:42:21] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[10:43:59] <friend> https://jsfiddle.net/Whirl3d/fqxj0b5s/42/   still not getting it right for some reason.
[10:46:20] <friend> when I said, "so nice" i meant I loved the simplicity of e?.detail?.source??msg  that was nice. I just reread it and it couldve been taken wrong. sry
[10:46:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[10:47:15] *** Joins: wyclif (~wyclif@user/wyclif)
[10:48:46] *** Joins: maret (~maret@195.12.158.102)
[10:49:20] <KevinX> I read it that way
[10:53:23] <KevinX> Whats wrong with the fiddle? I think you might need () around the code there
[10:53:31] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[10:53:57] <KevinX> you'll get something like 'end of sentenceundefined' otherwise
[10:57:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[10:58:17] *** Joins: wyclif (~wyclif@user/wyclif)
[10:58:54] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[10:59:03] <rustyshackleford> do you work with postman much?
[10:59:18] <rustyshackleford> its both awesome, and terrible at the same time. I wish it wasn't so bloated
[10:59:32] <KevinX> try Hoppscotch
[10:59:45] <KevinX> it's a PWA so you can "install" it too
[11:00:33] <rustyshackleford> maybe I should just get really good at curl
[11:02:04] <rustyshackleford> KevinX: can I do collections, where I run a sequence of rest calls?
[11:03:53] *** Quits: jmd_ (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[11:04:17] <KevinX> I see it proffered here https://github.com/hoppscotch/hoppscotch/discussions/1538
[11:04:30] <KevinX> but doesn't seem to be implemented
[11:04:48] <rustyshackleford> anyhow
[11:04:56] <rustyshackleford> even if postman makes me want to gouge my eyes out
[11:05:09] <rustyshackleford> I made a collection that will make my QA tester's jobs so much easier
[11:05:19] <hacks> there's collections in hoppscotch
[11:05:35] <KevinX> yeah but i cant see an option to run them all
[11:05:42] <rustyshackleford> me neither
[11:05:48] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[11:06:15] <rustyshackleford> next I need to hype this up to management
[11:06:28] <rustyshackleford> look at how much time I saved our whole big-ass department
[11:07:07] <KevinX> Add it to a GH action instead
[11:07:24] *** Quits: average (~average@user/average) (Ping timeout: 240 seconds)
[11:08:02] <theskillwithin> have you heard of postwoman?
[11:08:11] <rustyshackleford> postthey
[11:08:27] <theskillwithin> oh wait https://postwoman.io/
[11:08:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[11:09:34] *** Joins: wyclif (~wyclif@user/wyclif)
[11:10:07] *** Quits: ckdCreations (~ckdCreati@147.55.133.131) (Ping timeout: 256 seconds)
[11:10:17] <theskillwithin> postwoman is hoppscotch now,  so KevinX already called it
[11:10:24] *** Joins: ckdCreations (~ckdCreati@147.55.133.131)
[11:11:13] <hacks> wouldn't having something like supertest be better?
[11:11:16] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[11:11:21] <KevinX> wonder if they had legal issues with the name
[11:13:19] <rustyshackleford> the patriarchy at work again
[11:13:51] <KevinX> wouldn't be surprised
[11:14:03] <rustyshackleford> you think postman would take legal action?
[11:14:12] <rustyshackleford> I mean, they are definitely trying to ride in the wake of postman
[11:14:26] <theskillwithin> postman is a google thing right?
[11:14:26] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 272 seconds)
[11:14:46] <rustyshackleford> oh is it really? yeah then I can see lawyers getting involved
[11:15:12] <rustyshackleford> here's the thing I hate about postman. There's no good way to re-use or extend a request
[11:15:19] <KevinX> https://dev.to/liyasthomas/postwoman-is-changing-name-igp
[11:15:33] <KevinX> Seems to be preemptive I guess
[11:15:46] <rustyshackleford> I'm feeding different request bodies into the same endpoints
[11:15:59] <rustyshackleford> maybe doing slightly different tests on the responses
[11:16:06] <rustyshackleford> there's so much potential for DRY
[11:17:02] <rustyshackleford> "Our new identity..." oh lord
[11:18:11] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[11:19:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[11:20:39] *** Joins: wyclif (~wyclif@user/wyclif)
[11:25:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[11:26:12] *** Joins: wyclif (~wyclif@user/wyclif)
[11:26:31] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[11:28:00] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[11:29:41] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[11:35:08] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:36:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[11:37:16] *** Joins: wyclif (~wyclif@user/wyclif)
[11:37:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[11:38:23] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[11:42:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[11:42:50] *** Joins: wyclif (~wyclif@user/wyclif)
[11:47:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[11:48:20] *** Joins: wyclif (~wyclif@user/wyclif)
[11:49:00] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[11:54:42] *** Joins: diamondbond_ (~diamondbo@175.157.58.221)
[11:55:27] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 256 seconds)
[11:59:40] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[12:11:48] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:ec7f:bf70:4897:f9a7)
[12:15:37] *** Quits: kakashiA1 (~kakashi@41.141.191.109) (Ping timeout: 240 seconds)
[12:19:28] *** Joins: Lazenca (~lazenca@user/lazenca)
[12:26:45] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[12:30:53] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:45bc:c07c:8550:9590)
[12:32:12] *** Joins: filename (~kilitary@188.242.105.134)
[12:38:04] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[12:41:36] <IceMichael> hi gys
[12:41:48] <IceMichael> I want to have a different npm version per project, is this doable?
[12:42:09] <IceMichael> it's also ok to switch npm when I start working on a project, but so far it all seems global
[12:51:27] <systemfault> "Why"?
[12:51:49] <systemfault> They all do the same thing... except that newer versions have new features.
[12:52:09] <systemfault> You shouldn't be installing packages globally.
[12:52:21] <rustyshackleford>  maybe he means node?
[12:52:32] <systemfault> Maybe...
[12:52:41] <systemfault> In both case, "nvm" could be a solution here
[12:52:42] <rustyshackleford> in which case, nvm is the answer
[12:52:47] <systemfault> Heh.
[12:52:59] <rustyshackleford> I do install some packages globally, but in general I agree
[12:53:57] <systemfault> I have two packages I install globally... something called "lerna update wizard" and "yarn 1.x" for work
[12:54:07] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[12:54:11] <rustyshackleford> yeah I install yarn globally
[12:54:48] <rustyshackleford> we use it at work. idk if npm has workspaces yet
[12:55:22] <systemfault> It does since V7... but it lacked some features compared to yarn.
[12:55:28] <systemfault> I haven't checked V8 yet...
[12:55:48] <systemfault> I also like yarn's interactive update tooling
[12:56:48] <systemfault> But, for now at least, I won't go anywhere near Yarn 2/3 because I don't want to play with their pnp stuff.
[12:58:50] <systemfault> Apparently, NPM 8 has nothing interesting... it's some maintenance release where they dropped support for old node versions... and since it's a breaking change, they had to bump the major.
[12:59:55] *** Joins: han-solo (~han-solo@user/han-solo)
[13:03:40] *** Joins: han-solo_ (~han-solo@user/han-solo)
[13:04:43] *** Quits: han-solo (~han-solo@user/han-solo) (Killed (NickServ (GHOST command used by han-solo_)))
[13:04:47] *** han-solo_ is now known as han-solo
[13:07:03] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[13:07:20] *** Joins: Guest99 (~Guest99@42.60.253.67)
[13:08:48] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[13:09:15] *** Quits: kerat588 (~keeerat@user/tarek58) (Remote host closed the connection)
[13:09:17] *** Quits: Guest99 (~Guest99@42.60.253.67) (Client Quit)
[13:10:29] *** Joins: kerat58 (~keeerat@user/tarek58)
[13:15:45] *** Quits: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com) (Ping timeout: 268 seconds)
[13:18:11] *** Quits: diamondbond_ (~diamondbo@175.157.58.221) (Ping timeout: 256 seconds)
[13:28:21] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:30:06] *** Quits: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1) (Quit: You have been kicked for being idle)
[13:31:35] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[13:33:43] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[13:34:30] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:45bc:c07c:8550:9590) (Ping timeout: 252 seconds)
[13:35:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:35:48] *** Quits: kakashiA1 (~kakashi@41.141.191.109) (Ping timeout: 240 seconds)
[13:38:54] *** Quits: stagas (~stagas@2a02:587:c49f:caa2:3392:c233:acaa:5f43) (Ping timeout: 252 seconds)
[13:41:54] *** Quits: chenqisu1 (~chenqisu1@183.217.201.88) (Quit: Leaving)
[13:42:33] *** Joins: teut (~teut@103.144.92.214)
[13:42:50] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[13:42:56] <teut> https://www.npmjs.com/package/react-infinite-scroller   can someone explain what is `items` here?
[13:43:51] <teut> also should I use another package?
[13:44:12] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[13:46:01] <velix> sheetjs: Excel is my daily life.
[13:46:25] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:46:25] <velix> And I still don't have a clue, why they limit the sheets to 1.1M rows
[13:46:39] <velix> normally, I'm working with 4M rows
[13:46:47] <teut> https://danbovey.uk/react-infinite-scroller/demo/
[13:46:55] <teut> what kind of fancy sht is this?
[13:47:31] *** Joins: terminalpusher (~terminalp@2a01:586:90f8:1:64f9:1e03:5c23:f941)
[13:47:55] <teut> velix , you can do your work in multiple sheets
[13:48:19] <velix> teut: of course, I can also drive in 3 cars with 3 people.
[13:48:21] <teut> and then  combine them
[13:48:28] <velix> from the same start to the same stop
[13:48:36] <velix> and why doesn't anyone have its own trani?
[13:48:39] <velix> train or plane?
[13:48:50] <velix> Why shall we build trains for 1,000 people?
[13:48:59] <velix> When we can build 1,000 cheap trains for 1 person?
[13:49:39] <teut> if you just need the raw data(in csv format) then just combine the sheets with python oandas
[13:49:41] <teut> pandas
[13:50:32] <teut> or build your own spreadsheet software in react, or anything
[13:55:05] *** Joins: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com)
[13:57:48] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[14:00:33] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:01:05] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[14:04:39] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[14:05:04] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[14:07:07] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[14:07:57] *** Quits: mynickisregister (~mynickisr@2001:1af8:4700:b0e0:fa00::) (Ping timeout: 240 seconds)
[14:09:45] *** Joins: Ducki (~ducki@p54bba074.dip0.t-ipconnect.de)
[14:09:45] *** Quits: Ducki (~ducki@p54bba074.dip0.t-ipconnect.de) (Changing host)
[14:09:45] *** Joins: Ducki (~ducki@user/ducki)
[14:12:13] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:12:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[14:12:24] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 272 seconds)
[14:13:56] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:14:18] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 272 seconds)
[14:19:03] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[14:21:42] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[14:31:18] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[14:32:37] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[14:38:54] *** Joins: masber (~masber@213.55.224.91)
[14:38:58] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[14:40:17] *** Joins: Everything (~Everythin@37.115.210.35)
[14:40:35] *** Joins: mynickisregister (~mynickisr@5.79.67.8)
[14:42:03] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 256 seconds)
[14:43:11] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[14:43:17] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[14:44:09] *** Joins: pizdets (~pizdets@183.182.115.185)
[14:49:51] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[14:51:33] *** Quits: ckdCreations (~ckdCreati@147.55.133.131) (Read error: Connection reset by peer)
[14:51:52] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[14:52:45] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:52:51] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:55:19] <sheetjs> velix: there may be parts of the Excel codebase that still assume 1 << 20 rows
[14:55:37] <sheetjs> (1_048_576 is the actual limit)
[14:56:13] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[14:56:37] *** Joins: ckdCreations (~ckdCreati@147.55.130.35)
[14:57:22] <sheetjs> the modern binary format (XLSB) uses 32-bit fields for rows, so it's not like the file format can't handle more than the current limit
[15:00:12] <velix> sheetjs: also, wh stop at 16K columns?
[15:00:16] *** Quits: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com) ()
[15:00:19] <velix> sheetjs: man, I'm paying for this every months
[15:00:25] <velix> And all they do is changing the GUI.
[15:00:32] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 272 seconds)
[15:00:40] <velix> I want QUADRATIC sheets
[15:00:46] <velix> 1M x 1M
[15:01:19] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[15:01:24] <velix> quadratic sheets can be pivoted easier ;)
[15:01:27] <velix> (just kidding)
[15:02:23] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[15:02:33] <sheetjs> Power Pivot works around the limitations by rendering up to 1M rows of the result
[15:02:40] <sheetjs> so you can do queries against large data cubes
[15:03:10] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:03:30] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:45bc:c07c:8550:9590)
[15:08:08] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[15:08:27] *** Quits: kakashiA1 (~kakashi@41.141.191.109) (Ping timeout: 260 seconds)
[15:10:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:16:37] *** Quits: teut (~teut@103.144.92.214) (Ping timeout: 256 seconds)
[15:16:51] *** Joins: teut (~teut@106.207.199.0)
[15:21:16] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[15:21:29] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[15:21:30] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:21:31] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[15:24:06] *** Joins: rendar (~rendar@user/rendar)
[15:26:30] *** Quits: kakashiA1 (~kakashi@41.141.191.109) (Ping timeout: 272 seconds)
[15:28:27] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Read error: Connection reset by peer)
[15:30:59] *** Quits: terminalpusher (~terminalp@2a01:586:90f8:1:64f9:1e03:5c23:f941) (Remote host closed the connection)
[15:31:40] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[15:33:02] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Remote host closed the connection)
[15:33:36] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[15:36:38] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[15:36:47] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[15:37:48] *** Quits: teut (~teut@106.207.199.0) (Quit: Ping timeout (120 seconds))
[15:38:11] *** Joins: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com)
[15:38:28] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:38:52] *** Quits: maret (~maret@195.12.158.102) (Quit: maret)
[15:46:02] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[15:47:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[15:48:51] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:49:31] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 260 seconds)
[15:52:33] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[15:54:53] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[15:55:48] *** Joins: stagas (~stagas@2a02:587:c49f:caa2:539b:76e5:4f97:99bc)
[15:58:40] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:02:47] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[16:26:07] *** Joins: D4mned (~D1mned@212.101.234.25)
[16:29:29] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:308f:de35:e19:6888) (Quit: Leaving)
[16:29:50] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[16:33:36] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[16:36:38] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[16:37:49] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 240 seconds)
[16:39:27] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[16:40:12] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[16:41:14] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:42:26] <D4mned> how does the if statement without braces work
[16:42:58] <D4mned> does it trigger only the 1st line below it ?
[16:43:08] <D4mned> does it depend on indentation
[16:43:30] <sheetjs> no
[16:44:07] <D4mned> what about the second line below it
[16:44:11] <D4mned> does it get included ?
[16:44:12] <sheetjs> in absence of curly braces it parses the first statement
[16:44:17] <D4mned> or just the 1st line ?
[16:44:20] <sheetjs> this is true for loops as well
[16:44:27] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[16:44:35] <sheetjs> n> var i = 0; while(i < 10) ++i;  i
[16:44:36] <jellobot> (okay) 10
[16:44:52] <sheetjs> the whitespace doesn't matter
[16:46:20] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[16:49:36] <D4mned> alright
[16:49:39] <D4mned> thanks sheetjs
[16:50:19] <theskillwithin> allspace doesn't matter
[16:53:25] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[16:55:38] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:57:39] *** Quits: kakashiA1 (~kakashi@41.141.191.109) (Ping timeout: 260 seconds)
[17:02:02] *** l__q_ is now known as l__q
[17:07:01] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[17:07:58] *** Joins: voltage_ (voltage@user/voltage)
[17:09:01] <blueagain> sheetjs: I now got around to reading the wikipedia article about Growth in a Time of Debt
[17:09:44] * austincheney recommends always adding the curly braces.  These braceless statements can be compounded which becomes very diffecult to reason about
[17:10:34] <D4mned> yeah i find it easier to read when there are braces
[17:11:02] <D4mned> but sometimes its just a line so i remove them
[17:11:40] <Donitz> https://www.toptal.com/developers/hastebin/uyujokuxef.yaml
[17:11:45] <Donitz> this is a module for drawing a flower
[17:11:52] <Donitz> can you see anything at all that could be improved in it
[17:12:02] <Donitz> this is for my code generator
[17:13:22] <theskillwithin> oh wow toptal got hastebin
[17:13:32] <Donitz> apparently so
[17:14:02] <theskillwithin> kinda makes it annoying with the longer url really tho
[17:14:13] <Donitz> why did they not buy the domain
[17:14:20] <blueagain> never heard of hastebin nor toptal, so this is a noop for me
[17:15:15] <blueagain> why would you buy a pastebin though? they're a dime a dozen
[17:15:57] <Alexendoo> To advertise yourself
[17:18:31] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[17:20:31] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[17:20:51] *** Joins: nulixes1 (~Thunderbi@gateway/vpn/pia/nulixes)
[17:20:52] <theskillwithin> Donitz why not use like jsfiddle or codepen or codesandbox so we can see the flower
[17:21:03] <Donitz> sure
[17:21:46] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 272 seconds)
[17:21:47] *** nulixes1 is now known as nulixes
[17:22:25] <Donitz> I can't put modules in codepen pens
[17:22:56] *** Joins: jsmooth (~quassel@2600:6c54:7b00:0:e9ed:33a0:b79e:46c)
[17:22:56] *** Quits: jsmooth (~quassel@2600:6c54:7b00:0:e9ed:33a0:b79e:46c) (Changing host)
[17:22:56] *** Joins: jsmooth (~quassel@user/jsmooth)
[17:23:48] <Donitz> https://codepen.io/Donitz/pen/QWapmXV
[17:23:57] <Donitz> anyway, it's mostly just about making sure that the code format is good
[17:26:33] <Maxdamantus> D4mned: the proper way to think of it is that `foo();` and `{ foo(); bar(); }` are both single statements. The `if` construction always takes a single statement immediately after the `)`.
[17:27:28] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[17:27:39] <Maxdamantus> `foo();` is an "expression statement" and `{ foo(); bar(); }` is probably called a "block statement", though I'd have to check the specification to see if that latter terminology is correct.
[17:27:50] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[17:28:23] <D4mned> nice yeah that makes it clear
[17:28:27] <D4mned> thanks
[17:28:28] <Maxdamantus> they're both statements, so technically they both work grammatically the same way after `if(x)`.
[17:29:03] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:31:55] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:32:13] <D4mned> yeah
[17:32:31] <D4mned> i just saw people indenting the line
[17:32:39] *** Quits: kakashiA1 (~kakashi@41.141.191.109) (Ping timeout: 260 seconds)
[17:32:44] <D4mned> i was thinking maybe its required lol
[17:32:51] <Maxdamantus> Yeah, indentation in JS is never meaningful.
[17:32:58] <D4mned> yeah
[17:35:07] *** Parts: velix (~velix@user/velix) (Leaving)
[17:35:27] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 256 seconds)
[17:44:52] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[17:45:13] *** Joins: _filename (~kilitary@188.242.105.134)
[17:49:00] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 272 seconds)
[17:49:44] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[17:52:12] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[17:52:45] *** Joins: teut (~teut@103.144.92.141)
[17:54:15] <teut> https://dpaste.org/vXE6#L7
[17:54:33] <teut> why do people make a  newState , do modifications to it?
[17:55:08] <teut> is the destructed  state  ,i.e., const newState = {...state}
[17:55:12] <teut> a deep copy?
[17:55:46] <teut> I am concatenating here
[17:55:49] <Maxdamantus> No, it's shallow.
[17:55:50] <Alexendoo> teut: It isn't, but also concat doesn't modify anything, so I'd say that code is buggy
[17:56:43] <teut> oh correct, it returns a shallow copy
[17:57:01] <teut> I can use push but
[17:57:10] <teut> .push(...cards)
[17:57:48] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:4156:bbe5:9259:5976)
[17:57:52] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[17:58:03] <Alexendoo> That would mutate the old state as well
[17:58:11] <teut> if its shallow then do I need to do that newState step?
[17:58:28] <teut> that is required here Alexendoo
[17:58:47] <teut> initially the Array is empty
[17:58:55] <Maxdamantus> It might be doing it just to indicate that something has changed.
[17:59:28] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:59:29] <Alexendoo> teut: You don't want to mutate the previous state in any case
[17:59:35] <teut> oh that's a weird thing . I saw it in a tutorial btw
[18:00:31] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Quit: Leaving)
[18:00:46] <teut> a shallow copy modifies the original object right?
[18:01:04] <teut> how is a shallow copy different from another reference to an object?
[18:01:17] <Maxdamantus> No, it doesn't modify anything.
[18:01:42] <Maxdamantus> If that code is correct, all it's using the shallow copy for it to produce a different object value.
[18:01:53] <Maxdamantus> so that some other code will see `old !== new` and rerender something.
[18:02:20] *** Joins: onosendi (~onosendi@user/onosendi)
[18:02:36] <teut> https://dpaste.org/Uqi4
[18:02:43] <teut> is it correct still?
[18:03:28] <Maxdamantus> Dunno. It's not possible to determine whether that code is correct in isolation.
[18:04:01] <Alexendoo> It's pretty much always an error to mutate state like that in react
[18:04:21] <teut> whats the correct way?
[18:05:23] <Alexendoo> return {...state, orders: {...state.orders, Cards: [...state.orders.cards, ...cards] }} or similar, something that doesn't mutate the old state
[18:05:42] <Alexendoo> That's a bit unwieldy, which would be a sign you might want to make cards its own state
[18:06:06] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[18:06:57] <teut> is this object a deep copy?
[18:07:08] <Alexendoo> To make it setCards(cards => [...cards, ...processOrders(response.data.response.results)])
[18:07:51] <Alexendoo> It's not a deep copy, it's two shallow copies
[18:07:52] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:07:55] <teut> you got any book to understand how the name binding works in js?
[18:08:52] <Alexendoo> I'm not sure what's good book wise, I think there's a command for some recommendations though
[18:08:56] <Alexendoo> !books
[18:08:56] <jellobot> Alexendoo, !eloquent (http://eloquentjavascript.net), !ydkjs (https://github.com/getify/You-Dont-Know-JS), JavaScript: The Definitive Guide by David Flanagan, High Performance JavaScript by Nicholas C. Zakas, Effective JavaScript by David Herman, Functional JavaScript by Michael Fogus, Programming JavaScript Applications by Eric Elliott.
[18:11:29] *** Joins: iomari891 (~iomari891@197.210.53.228)
[18:11:38] <teut> https://eloquentjavascript.net/06_object.html#c_wg++tcauWw
[18:13:13] <teut> they are passing arguments to the function but it does not take any
[18:14:29] <Alexendoo> They're calling https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call
[18:14:33] *** Quits: masber (~masber@213.55.224.91) (Ping timeout: 256 seconds)
[18:14:37] <Alexendoo> not normalize directly
[18:14:53] <teut> I saw the docs for call
[18:17:02] <teut> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call#arg1_arg2_...argn
[18:17:47] <teut> here it says these are arguments to the function
[18:18:16] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[18:18:35] <Alexendoo> Yes but those aren't present in the example you linked
[18:18:48] <Alexendoo> There's only one argument there, which is thisArg
[18:18:57] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Quit: WeeChat 3.4)
[18:19:31] <teut> ohh
[18:19:39] <teut> it's an Object
[18:20:10] <teut> sorry, don't know why I saw it as two separate args
[18:20:58] <teut> also it wouldn't take a thisArg
[18:21:08] <teut> call(thisArg, arg1, arg2...)
[18:21:18] <teut> or    this.call(arg1, arg2....)
[18:23:17] <Alexendoo> I'm not sure what you're asking
[18:23:37] *** Joins: dea__ (~dea@213.128.80.36)
[18:23:41] <teut> they are doing  normalize.call    so the this of normalize is being used
[18:23:57] <teut> isn't that thing in the book ,   this.call(arg1, arg2....)?
[18:24:12] <Alexendoo> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call#syntax
[18:24:23] <Alexendoo> thisArg is just what mdn is calling the first argument
[18:28:29] <teut> ok, I was wrong. I understood it now. But how passing an Object to the thisArg added it to the local context of that function?
[18:29:42] <Alexendoo> Setting the this value to something else is what Function.prototype.call does, that is its purpose
[18:32:41] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 256 seconds)
[18:32:43] *** Joins: thiras (~thiras@user/thiras)
[18:33:19] <teut> i need to learn more js  '=D  . But I understood it better than before. Thanks  (y)
[18:37:59] *** Quits: karabaja4 (~karabaja4@dh207-95-166.xnet.hr) (Remote host closed the connection)
[18:46:38] <IceMichael> hm, if one part of the page is loaded via JS and another via usual HTML DOM, can I somehow influence the order?
[18:47:10] <IceMichael> because I have a dynamic item at the top of the page and all images are high-quality and therefore sadly >200KB, so for slow connections, the pictures at the bottom are loaded first and users need to wait for the top element :/
[18:47:21] <IceMichael> I could do all in JS, of course
[18:47:42] *** Joins: Siecje (~Siecje@97.111.200.190)
[18:48:15] *** Quits: kakashiA1 (~kakashi@41.141.191.109) (Ping timeout: 260 seconds)
[18:48:37] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[18:48:49] <Siecje> I'm trying to get weather data in my webpage. I can get an api key for a weather api but it says to keep the api key secret. So I need a backend? Is this the only way? Why can't they use the api key and my domain?
[18:49:16] <Alexendoo> IceMichael: You could try loading=lazy https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-loading
[18:49:28] <IceMichael> ahh, works also for attr, thanks!
[18:49:32] *** Quits: clamiax (~clamiax@net-109-116-207-212.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[18:49:43] <IceMichael> hm, but I use reactJS and the compiled app.js file is also lazy-loaded (defer)
[18:50:42] <IceMichael> ah okay, lazy refers rather to the viewport... ok could work! thank you
[18:51:18] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[18:51:42] <theskillwithin> unless its SSR react
[18:53:12] <IceMichael> yeah, it's not so far
[18:53:17] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:53:20] <IceMichael> hm, lazy is not widely supported enough
[18:53:29] <IceMichael> stupid safari
[18:54:07] *** Quits: han-solo (~han-solo@user/han-solo) (Read error: Connection reset by peer)
[18:54:41] *** Joins: han-solo (~han-solo@user/han-solo)
[18:54:42] <IceMichael> pictures in good resolution in jpg or png easily exceed 500kb :/
[18:55:16] <Alexendoo> You can polyfill it
[18:56:53] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[18:57:00] <IceMichael> hm, what is this, I'm at polyfill.io and it's not immediate clear
[18:57:40] <IceMichael> ah got it
[18:58:08] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:4156:bbe5:9259:5976) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:58:17] <theskillwithin> you should never have pictures at full quality on a website.  unless your like a wedding coordinator or a photographer but even then
[18:58:43] *** Quits: dev_ (~dev@rsh233.fastrootserver.de) (Quit: Leaving)
[18:58:57] *** Joins: dev_ (~dev@rsh233.fastrootserver.de)
[18:59:08] *** Parts: dev_ (~dev@rsh233.fastrootserver.de) ()
[18:59:29] *** Joins: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2)
[18:59:29] *** Quits: average (~average@2a02:2f04:405:d600:f516:46b1:9c42:4fa2) (Changing host)
[18:59:29] *** Joins: average (~average@user/average)
[18:59:32] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 252 seconds)
[19:01:55] *** Joins: pulse (~pulse@user/pulse)
[19:02:43] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[19:03:06] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[19:03:28] <IceMichael> theskillwithin: sure, I go down from full quality, but jpeg on lower quality looks shitty fast
[19:03:49] <IceMichael> I have a product page for an app
[19:04:00] <IceMichael> so if the screenshots have nasty artifacts, it gives away weak quality signals
[19:04:55] <ljharb> IceMichael: don't use polyfill.io
[19:05:02] <ljharb> use an npm package and bundle that in unconditionally
[19:05:09] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:05:48] <IceMichael> ljharb: so, Alexendoo says the opposite but what are the reasons?
[19:06:02] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[19:06:10] <IceMichael> and what npm package? you mean one for lazy loading?
[19:06:44] <ljharb> IceMichael: i mean for whatever you need to polyfill
[19:06:58] <ljharb> IceMichael: the reasons are that polyfill.io doesn't faithfully polyfill things. they go for "good enough", instead of "correct"
[19:07:07] <IceMichael> I see, that's indeed not great
[19:07:13] <ljharb> and, because you're trusting your entire site to another one. if polyfill.io gets compromised, your entire site is taken over
[19:07:14] <IceMichael> but how does some npm package help here anyways?
[19:07:18] <ljharb> host your assets yourself
[19:07:31] <ljharb> IceMichael: an npm package that's actually correct would help, because it'd be bundled into your own code that you host
[19:07:33] <IceMichael> ah, I anyways thought polyfill would be a js lib to download or anything. If not, then it has no sense
[19:07:47] <ljharb> IceMichael: polyfill.io dynamically decides what JS polyfill code to send you
[19:07:51] <ljharb> IceMichael: to send to the browser, rather
[19:08:03] <ljharb> IceMichael: i'm saying, statically and unconditionally provide the polyfill to everyone, always, via your normal JS bundle
[19:08:29] <IceMichael> okay, I would not use a service for this, so agreed
[19:08:46] <IceMichael> so best thing actually would be if I had some plugin where I could put a class lazyload and it would lazyload it if JS is enabled
[19:08:52] <IceMichael> or load it normally if not
[19:09:09] <ljharb> IceMichael: but also i don't see where Alexendoo recommended polyfill.io, just polyfilling, the general concept
[19:09:23] <IceMichael> also true
[19:09:24] <ljharb> IceMichael: JS isn't ever disabled. but it might break.
[19:09:37] <IceMichael> how is it never disabled? it might?
[19:09:39] <ljharb> IceMichael: and generally speaking you shouldn't need CSS based on the presence of JS.
[19:09:46] <ljharb> IceMichael: in practice nobody who matters turns it off
[19:09:54] <ljharb> it's just useful for devs to simulate what happens when JS breaks or fails to load
[19:10:11] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[19:10:22] <IceMichael> then I might as well use a JS lib to load high-quality content entirely under my control
[19:11:31] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:11:31] <ljharb> IceMichael: note that JS breaks or fails to load, often. and most parts of most sites don't actually need JS to achieve their goals. most of your site probably doesn't either
[19:12:03] <IceMichael> would it not be enough to have an img-lazy-load one and a noscript-img without lazy loading?
[19:12:13] <IceMichael> or is using many noscript tags an antipattern?
[19:12:39] <ljharb> i'm confused why it's an issue
[19:12:43] <ljharb> JS isn't required to load high quality images
[19:13:02] <IceMichael> my problem is that I want to load images at the top of the page fast
[19:13:08] <ljharb> just use an image tag. there's the srcset attribute for that.
[19:13:10] <IceMichael> but others at the bottom only when I scroll there
[19:13:21] <ljharb> also why
[19:13:25] <ljharb> just preload them all eagerly
[19:13:32] <IceMichael> I cannot determine the order then
[19:13:43] <IceMichael> or what do you mean by eagerly?
[19:14:02] <IceMichael> more concretely: I have a slideshow at the top and I have normal img tags further below
[19:14:11] <IceMichael> but the slideshows loads them after the img tags below
[19:14:23] <IceMichael> that's not the perfect behaviour of course
[19:14:55] <ljharb> i'm saying just load them all at once
[19:14:58] <IceMichael> issue is that the slideshow uses JS to load the images but the normal img images are loaded before because my js script tag has attribute "defer"
[19:15:00] <ljharb> it shouldn't block viewing of the page
[19:15:36] *** Joins: terminalpusher (~terminalp@2a01:586:90f8:1:64f9:1e03:5c23:f941)
[19:15:37] <IceMichael> as a user with slow connection you would unnecessary wait to see pictures above and the ones below are loaded but you don't see them yet
[19:15:40] <IceMichael> clearer?
[19:15:57] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:4156:bbe5:9259:5976)
[19:16:03] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[19:16:14] <IceMichael> I could solve this by also loading the pictures below with JS instead of normal img tag
[19:16:54] <IceMichael> but then, as you say, it's page content that would normally not need JS and now it needs
[19:16:55] *** Quits: D4mned (~D1mned@212.101.234.25) (Read error: Connection reset by peer)
[19:17:18] *** Joins: D4mned (~D1mned@212.101.234.25)
[19:17:25] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[19:17:51] <ljharb> IceMichael: if the slideshow is at the top, that means it's more important. which means i'm necessarily waiting to see them.
[19:18:04] <IceMichael> you don't get it, sorry...
[19:18:05] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[19:18:17] <IceMichael> the user basically needs to wait because the pictures outside the viewport at the bottom are loaded FIRST
[19:18:25] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[19:18:46] <IceMichael> but the best behaviour obviously is that the slideshow is loaded first because it's at the top, in the viewport, more important
[19:19:00] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[19:19:10] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:20:02] <ljharb> ahhh ok gotcha
[19:20:06] <ljharb> thennnn why is the slideshow loaded with js?
[19:20:26] <IceMichael> good question. I use lightgallery and it's apparently the way it does it
[19:20:57] <ljharb> you could preload them with a non-deferred script that does `(new Image()).src = 'whatever'` for each image
[19:20:58] <IceMichael> the normal way is not via JS, but for the inline one it is: https://www.lightgalleryjs.com/demos/inline/
[19:21:17] <IceMichael> hm yes... or, as said, lazy-load all images? After all, this would give me more control
[19:21:46] <ljharb> that wouldn't gracefully degrade tho
[19:21:50] <ljharb> you want as little js as possible
[19:22:56] *** Joins: han-solo (~han-solo@user/han-solo)
[19:23:08] <IceMichael> that's why I mentioned noscript?
[19:23:45] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[19:25:33] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:28:42] <ljharb> IceMichael: noscript's an old hack tho
[19:28:50] <ljharb> IceMichael: it won't trigger when JS is enabled but fails to load, or breaks
[19:28:51] <IceMichael> okay... mm
[19:28:54] <ljharb> IceMichael: so you want *no* noscripts.
[19:29:00] *** Joins: Pixi (~Pixi@user/pixi)
[19:29:01] <IceMichael> understood
[19:30:53] <IceMichael> sooo what can I do grml
[19:32:31] <IceMichael> trying out your idea first
[19:34:02] *** Joins: pavonia (~user@user/siracusa)
[19:36:37] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[19:36:43] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[19:37:44] <IceMichael> the new trick did not work unfortunately :/
[19:38:11] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[19:38:38] *** Joins: operateur (~My_user_n@93-86-81-12.dynamic.isp.telekom.rs)
[19:39:20] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[19:39:24] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[19:41:45] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[19:42:18] *** _filename is now known as filename
[19:43:13] *** Quits: terminalpusher (~terminalp@2a01:586:90f8:1:64f9:1e03:5c23:f941) (Remote host closed the connection)
[19:46:48] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 272 seconds)
[19:51:01] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[19:55:00] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[19:55:01] *** Joins: vysn (~vysn@user/vysn)
[19:56:51] *** Quits: dea__ (~dea@213.128.80.36) (Ping timeout: 260 seconds)
[19:57:00] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[19:58:09] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:03:23] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[20:05:00] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[20:07:02] *** Joins: wolfshappen (~waff@irc.furworks.de)
[20:07:50] *** Joins: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[20:08:12] *** Quits: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Changing host)
[20:08:12] *** Joins: mrdata_ (~mrdata@user/mrdata)
[20:09:52] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[20:10:12] *** Joins: thiras (~thiras@user/thiras)
[20:10:14] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[20:11:24] *** Joins: l__q (~modinfo@user/modinfo)
[20:11:30] *** Quits: mrdata (~mrdata@user/mrdata) (Ping timeout: 272 seconds)
[20:11:40] *** mrdata_ is now known as mrdata
[20:11:58] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:14:24] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:16:43] <hassoon> 'afternoon
[20:18:16] <theskillwithin> n> ['🥚','🐔'].sort()
[20:18:17] <jellobot> (okay) [ '🐔', '🥚' ]
[20:18:34] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[20:18:38] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[20:21:00] *** Quits: kakashiA1 (~kakashi@41.141.191.109) (Ping timeout: 272 seconds)
[20:23:07] *** Joins: dea__ (~dea@213.128.80.36)
[20:25:35] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[20:26:10] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[20:31:24] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 252 seconds)
[20:34:40] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[20:35:08] <teut> https://ibb.co/42Rh8cv
[20:35:17] <teut> how to get % scrolled down?
[20:35:35] <teut> or how much left for bar to hit the base?
[20:36:24] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[20:36:45] <theskillwithin> how to get some codes
[20:38:29] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[20:39:19] *** Quits: kakashiA1 (~kakashi@41.141.191.109) (Ping timeout: 260 seconds)
[20:39:50] <theskillwithin> https://youtu.be/28ZOwVAZS0o
[20:39:50] <skillbot> YouTube Title: When the Levee Breaks (Remaster)
[20:39:53] *** Joins: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net)
[20:39:58] *** Quits: hojasuelta (~hojasuelt@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[20:43:30] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[20:45:19] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:46:58] <blueagain> theskillwithin: damn dude, I love that song
[20:48:17] <tokie> https://lololo.lol/x my wasm demo is interestingly 3x faster on chrome vs. firefox
[20:50:44] <blueagain> what is this psychedelic snake
[20:51:13] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[20:51:53] <tokie> it's actually being rendered to xtermjs
[20:53:47] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[20:54:20] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[20:55:16] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[20:55:39] *** Quits: mmk2410 (~mmk2410@user/mmk2410) (Quit: ZNC - https://znc.in)
[20:55:42] *** Joins: _filename (~kilitary@188.242.105.134)
[20:56:12] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:56:30] *** Joins: mmk2410 (~mmk2410@user/mmk2410)
[20:56:41] *** Joins: Guest777 (~Guest777@77.243.29.151)
[20:56:43] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[20:58:36] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 240 seconds)
[20:59:39] <ThePendulum> theskillwithin: haha solving the age old question with javascript
[21:03:48] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[21:04:22] *** Quits: Siecje (~Siecje@97.111.200.190) (Remote host closed the connection)
[21:04:24] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[21:05:00] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[21:05:38] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:06:12] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[21:11:50] *** Quits: teut (~teut@103.144.92.141) (Quit: Client closed)
[21:11:52] *** Quits: _filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[21:22:14] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[21:23:11] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[21:27:05] *** Quits: Guest777 (~Guest777@77.243.29.151) (Quit: Client closed)
[21:29:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[21:30:56] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[21:31:02] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:33:28] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[21:38:19] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[21:39:28] *** Joins: clamiax (~clamiax@net-93-147-243-26.cust.vodafonedsl.it)
[21:40:55] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[21:41:11] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 245 seconds)
[21:43:26] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:44:54] *** Joins: Rockwood (~Rocky@user/rocky)
[21:48:22] <Rockwood> o/
[21:52:18] <hassoon> \o
[21:53:24] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[21:53:28] <Rockwood> hassoon, cheers
[21:54:12] *** Quits: kakashiA1 (~kakashi@41.141.191.109) (Ping timeout: 240 seconds)
[21:55:17] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:56:16] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[21:56:49] *** Joins: Rockwood (~Rocky@user/rocky)
[21:57:11] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[21:57:29] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:58:09] *** Quits: Rockwood (~Rocky@user/rocky) (Client Quit)
[21:58:29] *** Joins: teut (~teut@103.144.92.200)
[22:00:32] *** Joins: frege (~frege@d205-250-152-220.bchsia.telus.net)
[22:01:24] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:ec7f:bf70:4897:f9a7) (Ping timeout: 240 seconds)
[22:01:27] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:06:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[22:07:28] <sheetjs> blueagain: its a pretty sad story
[22:07:49] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[22:07:53] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[22:08:52] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:12:11] *** Quits: kakashiA1 (~kakashi@41.141.191.109) (Ping timeout: 260 seconds)
[22:14:51] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[22:15:01] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:16:17] *** Quits: iomari891 (~iomari891@197.210.53.228) (Ping timeout: 256 seconds)
[22:16:57] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[22:19:17] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:21:29] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:24:47] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[22:25:09] *** Joins: rexar89 (~alexi5@208.83.82.235)
[22:25:17] <rexar89> hello ladies and gentlemen
[22:25:56] *** Joins: nomic (~nomic@185.217.117.249)
[22:26:22] <blueagain> rexar89: hullo
[22:26:36] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:27:23] <IceMichael> hi guys
[22:27:34] <IceMichael> anyone knows a nice tool on macos to compress pictures where you directly see the output?
[22:27:41] <IceMichael> preview does not show a ...... preview of the output
[22:28:50] *** Quits: D4mned (~D1mned@212.101.234.25) (Read error: Connection reset by peer)
[22:29:13] *** Joins: D4mned (~D1mned@212.101.234.25)
[22:30:12] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 272 seconds)
[22:31:24] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[22:33:07] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[22:35:03] *** Quits: lamein (~lamein@user/lamein) (Quit: WeeChat 2.8)
[22:37:10] <ljharb> frege: you need to auth with nickserv for non-ops to see what you say; see the last link in the topic.
[22:37:30] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 260 seconds)
[22:37:55] *** ljharb sets mode: -v Alexendoo
[22:39:27] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[22:41:39] *** Quits: frege (~frege@d205-250-152-220.bchsia.telus.net) (Quit: Client closed)
[22:42:00] *** Joins: MRDPZK (~MRDPZK@d205-250-152-220.bchsia.telus.net)
[22:42:08] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[22:43:00] <MRDPZK> hi folks
[22:43:18] <MRDPZK> how do I make an element clickable?
[22:44:17] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[22:45:00] *** Joins: fef (~thedawn@user/thedawn)
[22:45:15] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[22:47:38] <IceMichael> ljharb: by the way, your preload trick DID work :) I had some syntax error that was detected late
[22:47:42] <IceMichael> thanks agaoin
[22:48:24] <ljharb> IceMichael: glad to hear it
[22:49:08] *** Quits: D4mned (~D1mned@212.101.234.25) (Remote host closed the connection)
[22:49:49] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[22:50:04] <MRDPZK> ljharb do you know how I can make an item clickable without having set href?
[22:50:13] <MRDPZK> I want javascript to take care of it
[22:50:32] <MRDPZK> but want to see the mouse changes to click icon when it hovers over them
[22:51:03] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[22:51:53] <ljharb> MRDPZK: what does "clicking it" do tho
[22:52:07] <MRDPZK> I have a listener for it
[22:52:11] <ljharb> that does what
[22:52:15] <ljharb> MRDPZK: because if it navigates somewhere, it should only be an `<a>` with an href. if it doesn't, it should never be an `<a>`.
[22:52:23] <MRDPZK> that does routing to another subapp
[22:52:24] <ljharb> (and you shouldn't use any JS on the link case)
[22:52:36] <ljharb> MRDPZK: then you definitely want an href, because the user might open it in a new tab or something
[22:52:41] <MRDPZK> then what could I use?
[22:52:46] <ljharb> give it an href
[22:52:58] <ljharb> all your state should be in the URL, so the user can always hard-refresh and see the same conceptual thing
[22:53:23] <MRDPZK> I manually correct url
[22:53:24] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[22:53:41] <MRDPZK> I have written a routing mechanism that handles sub app content replacement
[22:53:51] <ljharb> MRDPZK: the server should be doing that.
[22:53:59] <MRDPZK> allows me to develop dynamic isolated updates of a single index.js
[22:54:00] <ljharb> MRDPZK: otherwise nobody will be able to load the original URL
[22:54:07] <MRDPZK> yes they can
[22:54:18] <ljharb> how, if the client has to redirect it
[22:54:24] *** Quits: kakashiA1 (~kakashi@41.141.191.109) (Ping timeout: 252 seconds)
[22:54:26] <ljharb> imagine they turn off JS, how could it work
[22:54:27] <MRDPZK> I've written it in such a way that if you manually write url it navigates and routes correctly
[22:54:30] <MRDPZK> with nginx
[22:54:33] <ljharb> ah ok
[22:54:37] <ljharb> then what's the JS for
[22:54:43] <ljharb> just let it be a normal link, and let nginx handle it
[22:54:52] <ljharb> why would you want two sources of truth
[22:54:58] <MRDPZK> I've written a full MVC framework in pure JS and jquerry
[22:55:09] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[22:55:17] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[22:55:17] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 240 seconds)
[22:56:16] <MRDPZK> ljharb https://github.com/pazooki/Write2Die
[22:56:36] <ljharb> um
[22:56:42] <ljharb> MVC is bad for web apps, and jquery's pretty outdated
[22:56:49] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[22:56:50] <MRDPZK> I'm talking about this ljharb https://github.com/pazooki/Write2Die/blob/main/html/trout/index/menu.desktop.html#L15
[22:57:30] <MRDPZK> I want to turn those elements with class 'subapp' to have click cursor when user hover over them
[22:57:31] <ljharb> MRDPZK: ok well, those should all have hrefs
[22:57:44] <ljharb> MRDPZK: regardless, always. they're links, and clicking them takes the user somewhere
[22:57:52] <ljharb> if your framework doesn't let them be normal links, it's broken
[22:58:35] <MRDPZK> it's not broken
[22:58:48] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[22:59:01] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[22:59:04] <ljharb> then they can be normal links :-p
[22:59:19] *** Joins: MRDPZK75 (~MRDPZK@d205-250-152-220.bchsia.telus.net)
[22:59:25] <ljharb> things that navigate should always be links, anything that doesn't navigate should be a link, and links should always have an href.
[22:59:32] <ljharb> *shouldn't be a link, sorry
[22:59:39] <ljharb> MRDPZK: looks like you disconnected, and your reconnect isn't authed
[22:59:50] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[23:01:00] *** Joins: i0e (~is0ke3@user/is0ke3)
[23:01:01] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[23:01:33] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:02:07] <ljharb> MRDPZK75: you need to auth before anyone but me will hear you talk, so i'm not going to continue the convo til you do :-) you don't have to switch nicks, but you do have to authenticate.
[23:02:36] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[23:02:59] *** Quits: MRDPZK75 (~MRDPZK@d205-250-152-220.bchsia.telus.net) (Client Quit)
[23:03:19] *** Joins: MRDPZK71 (~MRDPZK@d205-250-152-220.bchsia.telus.net)
[23:03:27] <MRDPZK71> 512
[23:03:27] <MRDPZK71> ⚠ Nickname MRDPZK is already in use. Trying MRDPZK71...
[23:03:33] *** Quits: MRDPZK (~MRDPZK@d205-250-152-220.bchsia.telus.net) (Ping timeout: 256 seconds)
[23:03:42] *** MRDPZK71 is now known as MRDPZK
[23:03:44] *** Quits: average (~average@user/average) (Ping timeout: 252 seconds)
[23:03:52] <MRDPZK> ljharb hi doesn't work now?
[23:05:20] <ljharb> ep it works
[23:05:24] <ljharb> MRDPZK: so, performance that sacrifices semantic HTML is never worth it, and perf is always the least important thing anyways.
[23:05:45] <ljharb> MRDPZK: the way i'd do it is to make every navigation thing be a normal link, with an href. then, set a listener on document.body for all clicks on links, and do any navigation stuff there
[23:05:58] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[23:06:26] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:06:30] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[23:06:47] <MRDPZK> well I'm already doing the listener setup
[23:07:07] <MRDPZK> https://github.com/pazooki/Write2Die/blob/main/js/trout/services/miscs/session.js#L186
[23:07:15] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
[23:08:17] <epolanski> I'm inspecting my traffic on a streaming website, and in the network tab I can see lots of calls that return two types of responses: application/dash+xml and video/mp4
[23:08:17] <epolanski> I have tried to copy paste the mp4 payload to a text file and open it in VLC media player but nothing plays. What can I do actually to save those chunks to something useful?
[23:08:24] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[23:10:31] <ljharb> MRDPZK: then why can't you just put hrefs on the links, like every other website in existence
[23:11:52] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[23:12:12] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:12:44] *** Joins: jazzy (~jaziz@user/jaziz)
[23:13:19] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
[23:14:12] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[23:15:37] *** Joins: alystair (~alystair@user/alystair)
[23:15:43] *** Joins: MRDPZK46 (~MRDPZK@d205-250-152-220.bchsia.telus.net)
[23:16:01] *** Quits: MRDPZK (~MRDPZK@d205-250-152-220.bchsia.telus.net) (Ping timeout: 256 seconds)
[23:17:20] <alystair> I don't understand why Chrome takes 15ms+ to return window.scrollY when it should already know the result based on current scrollbar position. Isn't there a way to get a cached result instead of having it recalc?
[23:18:18] <MRDPZK46> ljharb my routing is superior . I'm incredible. fixed the bug now it works both ways
[23:18:36] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[23:18:53] <alystair> Getting a bit into the optimization weeds here, I am grabbing it once during SPA page transition
[23:19:22] <alystair> MRDPZK46 context? I just joined
[23:19:28] *** Quits: Slade (uid128877@user/slade) (Quit: Connection closed for inactivity)
[23:20:00] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[23:20:16] <MRDPZK46> alystair just finished implementing a superior amazing routing mechanism
[23:20:25] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[23:22:55] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:23:39] *** Joins: justOkay (~justache@user/justache)
[23:23:51] <teut> where's the  docs for  event.target.scroll...     ?
[23:24:19] <teut> I want event.target.scrollInYDirectionBy20Percent
[23:24:34] <teut> By10Px rather
[23:25:18] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[23:25:49] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[23:26:02] <alystair> teut been using Tailwind much? :^)
[23:26:22] <teut> yep, I am using tailwind
[23:26:23] <blueagain> alystair: what do you care about 15ms, literally no human operates at that level
[23:27:38] <blueagain> typical human reaction time is at least 250ms
[23:28:33] <sheetjs> 15ms ~ 60 hz
[23:28:46] <systemfault> 15ms is nearly one frame!
[23:28:50] <alystair> because that's 15ms on a 5900x
[23:28:57] <teut> can someone plz tell how to do it?
[23:29:00] <sheetjs> oh yeah blueagain what did you think about that story
[23:29:03] <teut> I can't find the docs
[23:29:33] *** Quits: operateur (~My_user_n@93-86-81-12.dynamic.isp.telekom.rs) (Quit: WeeChat 3.4.1)
[23:30:35] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
[23:30:38] <teut> https://drafts.csswg.org/cssom-view/#extensions-to-the-window-interface
[23:30:59] <teut> what is this language?  Although I can understand what I require
[23:31:35] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[23:31:48] <systemfault> That's IDL. A typed representation for a JS API.
[23:32:47] <teut> partial interface is part of C# , I just googled
[23:33:04] <teut> do you mean C#?
[23:33:15] <teut> idk what IDL is
[23:33:39] <blueagain> sheetjs: I have a bit of a anti-wikipedia bias, but assuming the information is correct (the criticism is established), that's rather interesting
[23:33:48] *** Joins: kakashiA1 (~kakashi@41.141.191.109)
[23:33:51] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[23:34:09] <blueagain> intuition-wise, I'd expect debt to hamper growth
[23:35:00] <systemfault> teut: Standards are written for everyone.... but especially IMPLEMENTORS (browser vendors), they need some documentation saying that API function "foo" takes an object with properties "X/Y/Z" of type "A/B/C"
[23:35:05] *** Joins: Naan (~naan@user/naan)
[23:36:21] *** Parts: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Leaving)
[23:36:24] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:36:25] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[23:36:30] *** Joins: Lyn (~Lyn@user/law)
[23:37:24] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[23:37:25] *** Quits: Lyn (~Lyn@user/law) (Client Quit)
[23:37:45] <teut> I heard that they communicated through UML class diagrams
[23:37:56] <sheetjs> government debt of course is very different from household or corporate debt.  that said, irrespective of economic opinions, the formula errors certainly are questionable (and excel has since added more logic to the error checking)
[23:38:49] <blueagain> yes, indeed, that was a very curious part
[23:39:02] *** Joins: onosendi (~onosendi@user/onosendi)
[23:39:20] <blueagain> but just like with the NHS story, I wouldn't blame it specifically on excel
[23:39:56] <sheetjs> its not excel's fault, but there's a deep cultural problem when "we messed up the spreadsheet" can be blamed on Excel and people accept the story
[23:40:10] <blueagain> it's very easy to blame tools for human errors
[23:40:28] <sheetjs> do you blame the hammer for missing nails?
[23:40:37] <blueagain> no
[23:41:04] <blueagain> but when confronted with blame, it's a human tendency to try and shift it
[23:41:09] <sheetjs> so the goal is spread awareness and build high-quality tooling so that blaming excel is as absurd as blaming the hammer
[23:41:30] <sheetjs> or blaming google sheets or blaming sheetjsheets or whatever
[23:41:49] <alystair> teut perhaps you're looking for https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollBy or https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo ?
[23:42:05] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[23:42:50] <teut> yes alystair , thanks for it!
[23:43:11] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[23:43:24] *** Quits: onosendi (~onosendi@user/onosendi) (Ping timeout: 240 seconds)
[23:43:40] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[23:44:49] <blueagain> sheetjs: there's a certain rift in perception between "real" products and digital products there that I suspect you will never be able to bridge completely
[23:45:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[23:46:28] <sheetjs> given the stakes, someone should try
[23:47:45] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[23:48:45] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:48:58] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[23:49:14] <blueagain> sheetjs: https://www.theguardian.com/world/2022/mar/24/cdc-coding-error-overcount-covid-deaths
[23:50:10] <sheetjs> not limited to excel
[23:50:21] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:50:58] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:51:33] <sheetjs> anyway, you asked about motivation
[23:52:14] <sheetjs> the problems are challenging by design (microsoft and apple intentionally make the formats inscrutable to build a moat)
[23:52:38] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:52:45] <sheetjs> and the impact is rather outsized (policy decisions are made based on data)
[23:53:17] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[23:53:57] <blueagain> that's fair
[23:54:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[23:54:45] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[23:55:41] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[23:56:21] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:59:31] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
