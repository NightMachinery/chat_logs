[00:00:01] <PyCharm> I asked
[00:00:01] *** Joins: robot-chicken (~robot-chi@user/robot-chicken)
[00:00:11] <PyCharm> but I won't talk about javascript anymore
[00:00:15] <PyCharm> I'm just suffering
[00:00:15] <habnabit_> PyCharm, you seem to be focused on parts of js that we're not talking about
[00:00:36] <SnoopJ> PyCharm, an unfortunate hazard of programming :(
[00:01:05] *** Joins: anddt (~anddt@net-93-144-12-118.cust.dsl.teletu.it)
[00:01:36] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[00:02:07] <PyCharm> suffering from js, not python....
[00:02:13] <PyCharm> anyhow I'll stick to topic
[00:02:13] *** Joins: wyclif (~wyclif@user/wyclif)
[00:02:47] <dustiestgolf> habnabit: here is a little gist https://gist.github.com/dustiestgolf/2c796d5809bbce896343b8bebdf61938
[00:03:01] <dustiestgolf> graingert: see above, thanks again
[00:04:08] *** Quits: PyCharm (~PyCharm@user/pycharm) (Quit: Leaving)
[00:04:10] <graingert>     "    self.send_command({register})\n"    def send_command(self, register, data=None, signed=False):
[00:04:10] <graingert>                                              ^^^
[00:04:10] <graingert> SyntaxError: invalid syntax
[00:04:26] <dustiestgolf> graingert: sorry just fixed that!
[00:04:38] <dustiestgolf> copied wrong shoudl be updated if you refresh
[00:05:04] <dustiestgolf> wait i copied more wrong than i thought sorry
[00:05:39] <dustiestgolf> okay now it is correct
[00:05:40] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[00:06:09] <graingert> dustiestgolf: you know you can just set a functions `__name__` and `__doc__` attributes
[00:07:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:07:23] *** Quits: magla (~gelignite@55d43d25.access.ecotel.net) (Quit: Stay safe!)
[00:07:49] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[00:08:27] *** Joins: magla (~gelignite@55d43d25.access.ecotel.net)
[00:08:42] <dustiestgolf> graingert: I did not know I could do that. would I define the funciton one time and then create a copy and rename for each register then>
[00:08:43] <dustiestgolf> ?*
[00:09:45] <c4017w> Any one know of a guide describing which operations are safe to perform while iterating a dict or list?
[00:10:30] <graingert> you can do setattr(Device, "_" + v["fnname"], mkfn(v))
[00:10:58] *** Joins: sazawal (~sazawal@2409:4043:510:d63:3a5a:3f8d:691a:d016)
[00:11:23] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[00:11:29] <graingert> and use `for _register_name, v in _register_spec.items():`
[00:11:49] *** Quits: smallfoot- (~smallfoot@c-3202225c.041-5-73746f7.bbcust.telenor.se) (Quit: Leaving)
[00:11:51] <sazawal> Hi all. Is it forbidden to send function references via a multiprocessing queue?
[00:12:09] *** Joins: Laibsch (~leggewie@dynamic-093-133-112-192.93.133.pool.telefonica.de)
[00:12:13] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[00:12:24] <dustiestgolf> graingert: oh okay I hadnt seen setattr before I will give that a shot!
[00:12:51] <bjs> sazawal: probably,  you cannot actually send references via a multiprocessing queue (in general)
[00:13:09] <bjs> so the whole function would have to be packaged up and sent across which I don't think it supports
[00:13:28] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[00:13:48] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[00:13:55] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:14:00] <graingert> https://www.irccloud.com/pastebin/tSD5kJnL/mkfn.py
[00:14:02] <graingert> dustiestgolf: ^
[00:14:11] *** Quits: UDK450 (~udk450@69-174-157-246.symrinaa.metronetinc.net) (Quit: Leaving)
[00:14:12] <graingert> then you call mkfn(**v)
[00:14:22] <sazawal> bjs, I see, thanks
[00:14:26] <graingert> sazawal: you can send global functions
[00:14:31] <graingert> it's pretty normal to do so
[00:14:58] <jiffy> does anyone use pycharm and can help me with a basic question, I have two files, main and shapes why is it what ever file I select and run it always just runs main in the console.
[00:15:08] <graingert> sazawal: if it has an importable __qualname__ and __module__ then you can pickle it
[00:15:19] <graingert> and if you can pickle it you can send it to multiprocessing
[00:15:31] <graingert> eg mulitprocessing.Pool.map sends a function
[00:15:47] <sazawal> graingert, Let me think, what to do, it is pretty mind boggling.
[00:16:05] <graingert> sazawal: show your code?
[00:16:16] <dustiestgolf> graingert: oh sweet this is rad thanks again
[00:16:33] <sazawal> graingert, I have made an atomic code. Let me post it.
[00:16:46] <graingert> sazawal: also use multiprocessing.get_context("spawn")
[00:17:21] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[00:17:29] <c4017w> jiffy, right click in the file and press run
[00:17:33] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[00:17:55] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Ping timeout: 246 seconds)
[00:18:06] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[00:18:34] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[00:19:16] <jiffy> c4017w: thx that worked! seems a bit strange you loose the functionality of the other run icon to the 1st file but maybe it's more about my lack of understanding. Thanks !
[00:20:23] *** Joins: wyclif (~wyclif@user/wyclif)
[00:20:24] <jiffy> oh now i've run it once the other run icons work on that file.
[00:20:27] <jiffy> I see
[00:21:00] <jiffy> thx again, I can carry on with my course. :)
[00:21:06] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.2)
[00:21:07] <c4017w> jiffy, The run icon will run the currently selected configuration from the dropdown. right click -> run will automatically create a new configuration for the current file
[00:21:55] <jiffy> so until you have run it once there is no configuration so that is why the drop does not work at that stage.
[00:22:14] <jiffy> I can now select both files from the drop down and they both work !
[00:22:20] <c4017w> correct. You could also manually create a configuration for the new file, but usually not necessary
[00:22:54] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[00:22:55] <jiffy> this is enough for me to continue, I hate getting stuck right at the beginning. thank you for your help.
[00:23:03] *** Joins: kosh (~kosh@user/kosh)
[00:23:04] <c4017w> np
[00:23:24] <sazawal> graingert, Here https://bpa.st/WT7Q
[00:24:27] *** Quits: rhax (~yannick@user/rhax) (Remote host closed the connection)
[00:24:33] <sazawal> It is not very apparent here what I am trying to achieve, sorry
[00:24:52] *** Joins: rhax (~yannick@user/rhax)
[00:25:21] *** Joins: somlis (~somlis@user/somlis)
[00:25:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[00:26:43] <graingert> sazawal: You need to use `if __name__ == "__main__":`
[00:26:56] <graingert> And you probably want to use fewer classes
[00:27:17] <graingert> And multiprocessing.get_context("spawn").Pool
[00:27:32] <graingert> And the imap_unordered method
[00:28:16] *** Quits: Corder_000 (~Coder_000@177.10.203.30) (Ping timeout: 272 seconds)
[00:28:30] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[00:29:25] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[00:30:27] <sazawal> So, let's say I have many functions like a1 to do calculations on real time data. Now I want all these functions to run in a process separate from other subsystems of my app. Now I allow a user to write a script without going much deeper into the workings of the system, so I want the function a1 to run in another process when the user calls the function a1. That is why I am trying to write a wrapper function, still unsure how do I
[00:30:27] <sazawal> do it.
[00:31:15] <sazawal> I suppose I am a little clear here.
[00:31:42] *** Joins: wyclif (~wyclif@user/wyclif)
[00:31:55] *** Quits: Snyp (~rksht@49.207.193.103) (Quit: WeeChat 3.2)
[00:34:25] <deniska> sazawal: that very roughly sounds somewhat like what celery is doing
[00:34:41] <deniska> not sure if that's your usecase, but take a look at it
[00:35:03] <sazawal> deniska, Celery? Let me look
[00:35:55] *** Quits: ray (~ray@user/re) (Quit: WeeChat 3.1)
[00:36:11] <sazawal> Well, yes from the first page it does look similar
[00:36:54] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[00:36:57] *** Joins: acresearch (~Guest28@user/acresearch)
[00:37:00] <acresearch> people, i have a list of songs that i want to download from itunes, is there a way to script that?    if i can loop through the list of songs, how can i connect my python script with itunes to download it?
[00:37:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[00:37:41] *** Quits: rhax (~yannick@user/rhax) (Quit: Leaving)
[00:37:56] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 268 seconds)
[00:39:05] <matsaman> acresearch: I don't think you'll find any lovely ways to do that
[00:39:39] <acresearch> oh
[00:39:39] *** Joins: ray (~ray@user/re)
[00:39:42] <matsaman> actually running iTunes & playing/ripping the audio in real-time is potentially the best you'll be able to get
[00:39:47] <matsaman> can't say I've looked into it much, though
[00:40:12] <deniska> acresearch: do you have a way of doing it manually?
[00:40:16] <acresearch> i have already purchased the songs, but they got deleted mmy accedent.  9,000 songs and i do not want to download them manually
[00:40:17] <deniska> for a single song
[00:40:26] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:40:32] <acresearch> i can do it manually using the GUI
[00:40:37] <acresearch> single songs ,,,
[00:40:44] <acresearch> but 9,000?   with take weeks
[00:41:15] <acresearch> if there is a way to downlaod single songs from python or the terminal i can work with that
[00:41:17] <deniska> acresearch: I'd expect there to be nice GUI automation libraries for macOS, they're good at accessibility, and that often means good scriptability
[00:41:39] *** Joins: djapo (~archangel@user/djapo)
[00:41:43] <matsaman> "polished", I don't know about nice =)
[00:42:53] <deniska> acresearch: (of course that means leaving your computer busy self-clicking things, but that sounds like something you can leave running overnight)
[00:43:10] <sazawal> deniska, Well if you have a minute I can explain. The last 3 lines 41-43 is what my user is writing as a script. I want the user to call the function a1, but I want it to be run in another process without making the user care about all the process/threads architecture. I thought I would make a function startfun() running and waiting for a command thougth multip-queue. And when the user calls a1, the wrapper function somehow (using
[00:43:10] <sazawal> a decorator) sends a1 in the queue, and then startfun runs it on receiving from the queue.
[00:44:31] <sazawal> To be noted is that, there are many functions like a1, and it is the user's choice what function he wants to run.
[00:45:09] <sazawal> startfun is supposed to manage the calling of these funtions in it's own (separate) process
[00:45:13] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:45:34] *** Quits: acresearch (~Guest28@user/acresearch) (Ping timeout: 246 seconds)
[00:45:43] *** Joins: mokulus (~mokulus@user/mokulus)
[00:45:47] *** Quits: greenx (~greenx@pool-173-70-159-250.nwrknj.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:45:54] *** Joins: clawh_ (~clawh@185.244.214.60)
[00:46:00] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[00:47:15] <catern> would anyone take a look at an article I'm writing about a new distributed systems library? I'm just looking for some first reactions to know that it makes sense. In PM, since it's still a draft
[00:47:36] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[00:48:07] *** Joins: ionface (~ionface@user/ionface)
[00:48:08] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:b1d1:7f91:d3d7:a8d8) (Quit: Leaving)
[00:48:32] <ChrisWarrick> (what new distributed systems library?)
[00:48:38] *** Quits: clawh (~clawh@194.127.167.100) (Ping timeout: 265 seconds)
[00:48:50] *** Quits: cidtest (~cidtest@89.238.185.215) (Quit: WeeChat 3.2)
[00:49:36] <catern> ChrisWarrick: one I (in part) wrote, I can PM you the link if you're interested :)
[00:49:48] <ChrisWarrick> (I’m not a fan of conducting IRC business via PM)
[00:49:56] *** Joins: wyclif (~wyclif@user/wyclif)
[00:49:59] <SnoopJ> one of the main advantages of the medium is asynchrony
[00:50:12] <catern> me neither, but first impressions are a non-renewable resource
[00:52:05] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[00:53:19] *** Quits: anddt (~anddt@net-93-144-12-118.cust.dsl.teletu.it) (Remote host closed the connection)
[00:53:43] *** Joins: anddt (~anddt@net-93-144-12-118.cust.vodafonedsl.it)
[00:54:41] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:b1d1:7f91:d3d7:a8d8)
[00:55:18] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:b1d1:7f91:d3d7:a8d8) (Client Quit)
[00:55:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[00:56:47] *** Quits: anddt (~anddt@net-93-144-12-118.cust.vodafonedsl.it) (Client Quit)
[00:58:06] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[00:58:16] *** Joins: justinf210 (~justinf21@165.sub-97-44-1.myvzw.com)
[00:58:23] *** Joins: safe (~safe@cpe-74-64-165-24.nj.res.rr.com)
[00:58:57] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[00:59:35] <hexology> https://bpa.st/6OGQ is there a way to get `unittest` and `logging` to always write their messages on separate lines? right now `logging` is writing its messages on the same line as the unittest output, kind of ugly and makes the output harder to read
[01:00:07] <NoImNotNineVolt> i swear to god my team is trying to put wheels under me...
[01:00:21] <NoImNotNineVolt> they configured one of our prod urls with a bunch of zero-width spaces in it
[01:00:27] <matsaman> yay
[01:00:30] <NoImNotNineVolt> \u200b ftw
[01:00:41] <hexology> what in the world
[01:00:43] <NoImNotNineVolt> i'm over here losing my mind, why is this not working, everying looks correct...
[01:00:44] <hexology> how??
[01:00:50] <matsaman> but did they use the regular char, or some kind of notation like \u200b ?
[01:00:59] <SnoopJ> punycode, probably
[01:01:04] <hexology> i assume the former if it went undetected... yikes
[01:01:09] <NoImNotNineVolt> the aws secrets manager web ui renders the unicode, so all i see is a proper-looking url...
[01:01:18] <matsaman> if you're going to do that you may as well go with the former =P
[01:01:20] <grym> one of the nicer things i've configured my editor to do is to display visual markers for whitespace
[01:01:22] <NoImNotNineVolt> i copypaste it into nano, still looks fine..
[01:01:36] <NoImNotNineVolt> i read the json into python, and bam, there's a millions \u200b in there.
[01:01:47] * NoImNotNineVolt <3 repr
[01:02:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:02:42] <SnoopJ> D:
[01:02:52] <zware> hexology: One ugly hack is to just `print()` at the start of your tests that emit log messages
[01:02:52] *** Quits: justinf210 (~justinf21@165.sub-97-44-1.myvzw.com) (Ping timeout: 268 seconds)
[01:02:56] <matsaman> it's fun to introduce people to that particular suspicion
[01:03:03] <matsaman> "this isn't working and it's insane omg"
[01:03:12] <matsaman> "probably hidden whitespace chars messing you up"
[01:03:16] <grym> matsaman: "you'll never trust your eyes again"
[01:03:19] <matsaman> heh
[01:03:23] <grym> matsaman: i check \r\n a lot now too
[01:03:27] <grym> scars from that one time...
[01:03:29] <matsaman> yeah
[01:03:33] <matsaman> and unicode bom
[01:04:24] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 268 seconds)
[01:04:27] <grym> tfw "who do you trust, me or your lying eyes" has the _other_ answer
[01:04:36] <matsaman> NoImNotNineVolt: 'put wheels under', is that a common expression?
[01:04:39] <raek> what does build system "frontend" and "backend" mean in python-land?
[01:05:28] <SnoopJ> raek, installing packages (and stuff that goes with that, like resolving dependencies) and building them, respectively
[01:05:39] <SnoopJ> the detailed answer lives in PEP 517/518
[01:06:30] <NoImNotNineVolt> matsaman: i don't know :P
[01:06:36] <NoImNotNineVolt> now you've got me wondering.
[01:07:07] <matsaman> NoImNotNineVolt: sounds like it should be =P just not where I'm from, maybe Australia, heh
[01:07:09] <raek> ok. I should read them.
[01:07:34] <NoImNotNineVolt> google doesn't seem to think it is. if i had to guess, i'd say i probably got it from my wife.
[01:07:51] <SnoopJ> raek, there was also a talk at PyCon that explained the difference, but it was more of a review of packaging across all of Python's history
[01:08:01] <NoImNotNineVolt> so it may be a long island regionalism.
[01:08:01] <SnoopJ> the PEPs are pretty readable :)
[01:08:04] <raek> SnoopJ: that sounds interesting
[01:08:09] * NoImNotNineVolt moves to -offtopic
[01:08:20] <SnoopJ> it was a good talk for contextualizing how much better packaging is these days
[01:08:32] <SnoopJ> for all the warts the package system has, it's miles ahead of where it used to be
[01:08:43] *** Joins: wyclif (~wyclif@user/wyclif)
[01:08:48] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[01:08:51] *** Joins: thx (~thx@89.45.90.242)
[01:08:59] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 256 seconds)
[01:09:00] <raek> I'm trying to read up on python packaging. it's nice that there is packaging.python.org. but I feel like I'm late to the party and don't understand the terminology
[01:09:10] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:b1d1:7f91:d3d7:a8d8)
[01:09:34] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[01:09:37] <SnoopJ> it's pretty dense stuff, don't feel bad if it doesn't click right away
[01:09:39] <raek> I'm trying to map all these ideas to things I already know (debian packages, dependency management in clojure)
[01:09:44] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[01:09:59] *** Joins: supakeen (~user@python/site-packages/supakeen)
[01:10:08] <grym> raek: python overloads "install" in a way that will probably initially confuse you
[01:10:16] *** Quits: Laibsch (~leggewie@dynamic-093-133-112-192.93.133.pool.telefonica.de) (Ping timeout: 268 seconds)
[01:10:23] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[01:10:24] <grym> but once you kind of grok what that means, it's much smoother sailing imo
[01:10:42] *** Quits: clawh_ (~clawh@185.244.214.60) (Ping timeout: 272 seconds)
[01:10:44] <grym> (roughly, installation-in-python is something you do _first_, not _last_)
[01:10:59] <raek> ok, so does "pip install" do this "install" action? :-)
[01:11:17] <grym> yes
[01:11:32] <SnoopJ> or any build front-end (pip can act as both a front-end and a back-end)
[01:11:34] <grym> and during dev, you install and then start working
[01:11:41] <grym> not work a lot and then install
[01:11:47] <SnoopJ> in the same way that apt might invoke a compiler or something, if you want a Debian analogy
[01:12:00] <raek> SnoopJ: this talk? https://us.pycon.org/2021/schedule/presentation/74/
[01:12:23] <SnoopJ> raek, that's the one. You might be able to find one more focused on the status quo, like I said, that one is a review.
[01:12:50] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[01:12:50] <SnoopJ> But if you can stomach the relatively dry subject material, understanding the history does help you navigate the weird sorta-overlapping terminology/etc. :)
[01:13:24] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca)
[01:13:24] <raek> yeah, I think learning about the history is a good idea... :-)
[01:13:43] *** Joins: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com)
[01:13:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[01:14:33] <raek> what are the things called that are stored on pypi? distribution packages?
[01:14:39] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 256 seconds)
[01:14:59] <hexology> i've heard that term, as well as "distributions"
[01:15:15] *** Joins: Sir_Andrei (~andrei@r190-134-31-237.dialup.adsl.anteldata.net.uy)
[01:15:18] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Quit: WeeChat 2.8)
[01:15:46] <Sir_Andrei> People. Is there an IRC channel for machine learning discussions?
[01:15:57] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:16:00] <hexology> zware: that is indeed ugly, i can try it
[01:16:01] <raek> how are dependencies declared? I've seen these "requirements.txt" files and used them when I develop on my own projects. I haven't really made a distribution package myself yet
[01:16:17] <SnoopJ> raek, PyPI is an index of "projects" (pretty abstract) which are one or more "packages" (code/etc.)
[01:16:24] <hexology> Sir_Andrei: there was one on Freenode, but it doesn't seem to have moved to Libera (and it was somewhat controversial when it existed on Freenode)
[01:16:49] <zware> hexology: Also be aware that one or both of unittest and/or logging may be printing to stderr rather than stdout
[01:17:09] <raek> so the name I give to pip install is the name of a "project" not a "(distribution) package"?
[01:17:09] <SnoopJ> raek, dependencies for a package are declared in pyproject.toml (new way) or setup.cfg/setup.py (older way). Have you read the tutorial on packaging.python.org? https://packaging.python.org/tutorials/packaging-projects/
[01:17:36] <raek> SnoopJ: yes, but I couldn't find inormation regarding dependencies on that page
[01:18:05] <raek> those docs either talked about dependencies for applications or how to build libraries (but not dependencies for libraries?)
[01:18:18] <Donitz> yes Sir_Andrei
[01:18:23] <hexology> zware: that is a good point, i just checked and they _both_ appear to be printing to stderr
[01:18:24] <Donitz> ##machinelearning
[01:18:28] <Donitz> and ##machinelearning-general
[01:18:30] <SnoopJ> raek, yes, and sometimes they differ in subtle (and annoying!) ways. An example: the project Pillow is a drop-in for the Python Imaging Library (PIL), and you import either one with `import PIL`. They have the same package name, but not the same project name.
[01:18:46] <hexology> Donitz: do you still get banned from the former if you're a member of the latter?
[01:18:50] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[01:18:55] <Donitz> don't think that was ever the case
[01:18:58] <raek> right. "import package" vs "distribution package"?
[01:19:07] <grym> the former is still pretty banhappy
[01:19:14] <hexology> Donitz: it was, at least in my personal experience
[01:19:19] <Donitz> *shrug*
[01:19:25] *** Quits: RedAero (~RedAero@0526E4E5.unconfigured.pool.telekom.hu) (Quit: Connection closed)
[01:19:29] <Donitz> need to calculate intersecting area of a few million quads
[01:19:36] *** Joins: wyclif (~wyclif@user/wyclif)
[01:19:37] <Donitz> what's a good module for that
[01:19:56] <Sir_Andrei> @hexology, thx
[01:20:04] <raek> SnoopJ: ok, so what is requirements.txt used for?
[01:20:14] <raek> applications?
[01:20:15] <SnoopJ> raek, being a (quite dumb) list of things to install
[01:20:21] <raek> ah
[01:20:24] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:20:25] <hexology> requirements.txt is an ad-hoc way to list precise dependency versions for an application
[01:20:34] <Donitz> I don't think it needs to be precise, does it?
[01:20:40] <SnoopJ> requirements.txt is mostly useful when you want someone to be able to create a Python environment, it's not often something you want to rely on with user-facing packages
[01:20:42] <hexology> it doesn't have to be, but that's how it's best used imo
[01:20:50] <Donitz> does it support ^?
[01:21:03] <hexology> you can also specify things like --find-links in there, which you can't (or at least shouldn't try to) specify in setup.py
[01:21:24] <raek> okay, so it can be useful for tutorials I guess. "install these packages in a fresh venv to follow along at home"
[01:21:28] <Donitz> though I kinda find the idea of not locking down versions to be mental
[01:21:33] <Donitz> insanely insecure
[01:21:35] <hexology> it supports whatever pip supports, but i'm not sure if pip supports "^" (i don't think it does)
[01:21:42] <SnoopJ> raek, the particular way you declare dependencies depends on how you're packaging. If you're using setuptools (setup.py/setup.cfg), you do one thing, if you're using pyproject.toml you do another
[01:22:00] <raek> okay, I've seen both
[01:22:04] <gcbirzan> Donitz: and then you need to install pytz :-P
[01:22:08] <Donitz> though not locking down versions mean you will always have old bugs
[01:22:18] <raek> and distutils is just an even older system?
[01:22:19] <Donitz> -not*
[01:22:20] <hexology> so in setup.cfg you'd write `tornado > 6.0`, but in requirements.txt you'd write `tornado == 6.1.0`
[01:22:23] <gcbirzan> Though, nowadays that doesn't really matter
[01:22:26] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:b1d1:7f91:d3d7:a8d8) (Quit: Leaving)
[01:22:58] <SnoopJ> hexology, `pip install` supports what's in PEP 508 to my knowledge (which includes '^')
[01:23:03] <gcbirzan> Donitz: I've used shapely for simple stuff, for that many polygons you might be looking at different algorithms
[01:23:04] <hexology> good to know
[01:23:25] <Donitz> yeah, shapely does seem to have plenty of spatial trees
[01:23:29] <Donitz> for optimizing massive lookups
[01:23:31] <Donitz> so that may work
[01:23:34] *** Quits: thx (~thx@89.45.90.242) ()
[01:24:22] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[01:24:43] <raek> are the setup.py/setup.cfg/pyproject.toml files used for turning a code repository into a distribution package ("building?") or are they inlcuded in the distribution packages? or both?
[01:24:58] <raek> like, are they build system instructions or package metadata?
[01:25:25] <grym> the former; they're consumed by pip
[01:25:26] <SnoopJ> lot of question there, let's go one at a time
[01:25:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[01:25:41] *** Joins: wyclif (~wyclif@user/wyclif)
[01:25:43] *** Quits: okamis (~okamis@90-229-141-188-no92.tbcn.telia.com) (Ping timeout: 246 seconds)
[01:25:50] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[01:25:50] <SnoopJ> 1) either file format can specify both
[01:26:23] <SnoopJ> 2) yes, creating a distribution (either a "wheel" or a source distribution, aka "sdist") is what we mean by "building"
[01:27:56] <SnoopJ> 3) you might or might not include these files in a distribution, but it's relatively uncommon to need/want do so in my experience
[01:28:59] *** Quits: magla (~gelignite@55d43d25.access.ecotel.net) (Quit: Stay safe!)
[01:29:05] <raek> okay. that's clear! I guess I'm curious about what goes into a sdist/wheel. where does the metadata (I assume dependencies is also counts as metadata?) live when the package has been built?
[01:29:28] *** Joins: bilegeek (~bilegeek@2600:1008:b015:3e96:6f34:1a42:6ac5:3b86)
[01:29:44] <raek> for example, is that inlcuded in the package file, or is it store separately as metadata in pypi?
[01:30:50] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:b1d1:7f91:d3d7:a8d8)
[01:31:19] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:b1d1:7f91:d3d7:a8d8) (Client Quit)
[01:32:14] <Yhg1s> raek: everything is in the sdist or wheel.
[01:32:20] <SnoopJ> raek, the dependency stuff matters most during the install, when all the resolution happens. Not sure what is generally serialized after install
[01:32:40] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.150) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:32:44] *** Joins: Schnouki (~schnouki@user/schnouki)
[01:32:49] <SnoopJ> oh, metadata.json has run_requires, apparently
[01:33:04] <grym> raek: if you ever want to, by the way, `unzip -l something.whl` works
[01:33:08] <grym> they're just renamed zip files
[01:33:26] <raek> right. I should really look into some and see what's there!
[01:33:31] *** Quits: shabius_ (~shabius@2a0e:1c80:2:1022::1005) (Quit: Leaving)
[01:33:45] <SnoopJ> raek, as another example of how things are changing, pip just got a brand new dependency resolver, so when we talk about pip doing something there's still some ambiguity. The old one is going away soon if it hasn't already.
[01:33:48] *** Joins: shabius (~shabius@2a0e:1c80:2:1022::1005)
[01:34:05] *** Quits: p-i- (~Ohmu@113.53.167.81) (Remote host closed the connection)
[01:36:05] <raek> so, to recap: setup.py/setup.cfg/pyproject.toml are used to build packages. when packages are installed, these files are not in the picture anymore?
[01:36:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[01:37:02] <raek> (i.e. consumers of the sdists/wheels do not need to care about building packages?)
[01:37:15] <SnoopJ> they're used for bothing building and installation
[01:37:25] <SnoopJ> (you can install from not-a-distribution)
[01:37:54] <raek> hmm. can that conceptually be understood as just a sequence of build and then install?
[01:38:26] <SnoopJ> pretty much; PEP 517/518 draw a line in the sand for the sake of putting everybody on the same page
[01:38:32] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[01:38:55] <hexology> as far as i understand, pip looks at pyproject.toml to figure out what "backend" to use to install something. if there is no pyproject.toml, it assumes you want to use setuptools. then the backend looks at whatever it wants to look at in order to figure out what to do next. setuptools looks at setup.py/setup.cfg.
[01:39:18] <hexology> i'm not sure exactly how setuptools and pip interact, i assume there is some back and forth
[01:39:38] <hexology> *back and forth in terms of which program handles which parts of the process
[01:40:00] *** Joins: pnoud (~pnoud@user/pnoud)
[01:40:01] <raek> ok. thanks a lot for the great explanations, everybody! I'll watch the PyCon 2021 video now.
[01:40:03] <SnoopJ> "pip might invoke setuptools" is I think the right way to say it
[01:40:19] <SnoopJ> raek, just be sure you understand that the historical stuff is...well, historical :)
[01:40:27] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[01:40:48] <hexology> does pip inspect the package directly to figure out what its dependencies are? or does it ask setuptools (or other backend) to compute those?
[01:40:50] <hexology> i assume it's the latter
[01:40:56] <hexology> i'd love to see a sequence diagram for that
[01:41:12] <hexology> or is that covered in the pycon talk?
[01:41:27] *** Joins: offpics (~offpics@89-79-56-128.dynamic.chello.pl)
[01:42:37] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[01:42:59] *** Quits: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs) (Ping timeout: 256 seconds)
[01:43:17] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[01:43:28] *** Joins: chaosite (~chaosite@user/chaosite)
[01:44:58] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 246 seconds)
[01:45:04] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 246 seconds)
[01:46:40] <jinsun> pip doesn't ask setuptools for the dependencies if I understand correctly, it just uses setuptools (or whatever is the build backend) to go from a folder to a wheel/sdist,SnoopJ after that it resolves the dependencies itself
[01:49:31] *** Quits: digital-carver (~DCarver@49.205.154.191) (Ping timeout: 246 seconds)
[01:49:54] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[01:50:12] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:50:13] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 246 seconds)
[01:50:21] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[01:51:41] *** Joins: brickfat (~brickfat@user/brickfat)
[01:51:52] <graingert> jinsun: depends
[01:52:27] <BrokenCog> I would like to use a md5 hash as a dictionary/set key, but dictionary requires int's ... what would be the alternative?
[01:52:33] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:b1d1:7f91:d3d7:a8d8)
[01:52:52] <graingert> pep 621 allows PIP to read deps without running prepare_metadata_for_build_wheel
[01:53:00] <bjs> BrokenCog: dictionaries don't require ints
[01:53:13] <BrokenCog> as the key?
[01:53:21] <bjs> no
[01:53:26] <graingert> you can use a bytes object as the key
[01:53:32] <grawity> BrokenCog: uh, dict definitely does not require int keys... you sure you don't accidentally have a list?
[01:53:45] <bjs> BrokenCog: what exactly are you trying to do that's not working with the dictionary?
[01:53:46] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Ping timeout: 272 seconds)
[01:53:48] <bjs> as a key
[01:54:03] *** Joins: fcjsx (~fcjsx@2800:a4:814:6000:ba4a:faea:3f1f:f724)
[01:54:18] *** Quits: fcjsx (~fcjsx@2800:a4:814:6000:ba4a:faea:3f1f:f724) (Remote host closed the connection)
[01:54:21] <BrokenCog> I have a list of "hash filepath", i want to grouip the duplicate filepath's by to each hash.
[01:54:25] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[01:54:28] *** Joins: acresearch (~acresearc@user/acresearch)
[01:54:34] <grawity> like, I actually have a ~/bin/dupes script that does exactly this
[01:54:37] <graingert> md5 instances are hash-able by identity
[01:54:37] <graingert> >>> hashlib.md5().__class__.__hash__ is object.__hash__
[01:54:37] <graingert> True
[01:55:00] <BrokenCog> ah, I wasn't using the hash lib, this is an existing text file.
[01:55:07] <bjs> BrokenCog: well what thing do you want to be the key? and what is a "hash filepath" in quotes?
[01:55:17] <grawity> BrokenCog: mind showing your code?
[01:55:20] <graingert> like a list of tuples?
[01:56:01] <BrokenCog> I have a text file, each line is an entry in the form: "<a hash> <a filepath>".   I would like to collect all the filepath entries by matching hash.
[01:56:25] <bjs> BrokenCog: okay, so you want a dictionary with the hash as a key and like, a list of paths as the value?
[01:56:25] <BrokenCog> grawity: I don't have anything yet.  Just experimenting with dict's and sets.
[01:56:33] <BrokenCog> correct, bjs
[01:56:35] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Ping timeout: 256 seconds)
[01:56:38] <bjs> BrokenCog: well that sounds perfectly fine
[01:57:20] <jinsun> graingert: you mean pip can sometimes use setuptools to figure out the dependencies or do you mean it can figure out the dependencies before building the wheel?
[01:57:30] <graingert> both
[01:57:44] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[01:57:51] <BrokenCog> I tried: res = []; res[md5].append(filepath) but get: TypeError: list indices must be integers or slices, not str
[01:57:58] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:58:02] <grawity> but [] is a list, not a dict
[01:58:22] <grawity> (you want a dict *of* lists, I'm guessing)
[01:58:49] <grawity> res = {}
[01:59:13] <grym> BrokenCog: https://bpa.st/3GAA
[01:59:15] <grawity> or, in this case, it's convenient to use collections.defaultdict(list)
[01:59:16] <BrokenCog> that gives:  KeyError: '0000311ed8cff933b77e6ee028bbe5c3'
[01:59:26] <BrokenCog> same if I use res = dict()
[01:59:26] <grym> defaultdict is ,3
[01:59:27] <grym> <3
[01:59:38] <grym> BrokenCog: see my paste, just in time :D
[01:59:45] <grawity> yes, if it's not yet in the dict, you have to explicitly res[md5] = []
[02:00:09] <grawity> no auto-vivification like in perl, unless you use defaultdict
[02:00:18] <BrokenCog> ah.  okay.  didn't realize append needed an entry.
[02:00:30] <grym> BrokenCog: `for hashkey, stuff` is doign some unpacking on the fly, which is handy but might look strange the first time
[02:00:48] <BrokenCog> yeah, I get it.
[02:00:53] <BrokenCog> I'll try defaultdict(list).
[02:01:02] <grawity> so "if md5 not in res: res = []" if you were to do it manually
[02:01:08] <grym> defaultdict is super handy
[02:01:08] <grawity> err
[02:01:20] <grawity> res[md5]=[] you get the point
[02:01:24] <grym> note that if you want a defaultdict of defaultdicts, you need a lambda in there, but let's also not nest stuff :)
[02:02:56] *** Joins: Gerula_ (~Gerula@user/gerula)
[02:02:56] *** Quits: Gerula (~Gerula@user/gerula) (Killed (lead.libera.chat (Nickname regained by services)))
[02:02:56] *** Gerula_ is now known as Gerula
[02:03:23] <BrokenCog> thanks.  I've never used defaultdict.  it's a short handed of some sort?
[02:04:31] <grym> defaultdict(foo) means that for every key you add, its value is a foo
[02:04:37] <grym> (if empty)
[02:04:52] *** Quits: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net) (Quit: -a- Connection Timed Out)
[02:05:13] *** Joins: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net)
[02:05:16] *** Quits: shabius (~shabius@2a0e:1c80:2:1022::1005) (Ping timeout: 246 seconds)
[02:05:20] <grawity> it's a subclass of dict that implements the x[..] operator differently, by automatically producing a value if asked for a non-existent key
[02:05:35] <grym> so if you have somedict=defaultdict(list), that means you can somedict[newkey] and know that it's a list already, so you can just append onto it safely every time
[02:05:38] <BrokenCog> thanks.
[02:05:48] *** Quits: mokulus (~mokulus@user/mokulus) (Ping timeout: 272 seconds)
[02:05:56] <grym> it's ideal for exactly your application
[02:06:25] <BrokenCog> it seems so.
[02:06:47] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[02:07:07] <grym> tangentially if all you want to do is _count_ stuff, collections.Counter is like a super special case of this: it's like a defaultdict(int) that autoincrements the value every time you touch the key
[02:07:14] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:07:27] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[02:07:28] <graingert> https://github.com/python/cpython/blob/12803c59d54ff1a45a5b08cef82652ef199b3b07/Modules/_collectionsmodule.c#L1983-L2298
[02:08:16] <BrokenCog> I want to access the values, but I don't need to change them so maybe that would be more useful.
[02:08:20] *** Quits: ray (~ray@user/re) (Ping timeout: 272 seconds)
[02:08:30] <BrokenCog> unless it doesn't store the value ...
[02:08:35] <grym> Counter doesn't
[02:08:43] <grym> defaultdict will do .. well, see my paste
[02:08:53] *** Quits: codificat (~pep@66.red-79-154-168.dynamicip.rima-tde.net) (Quit: leaving)
[02:08:57] <grawity> for duplicate scanners, counter isn't very useful tbh
[02:09:02] *** Joins: ray (~ray@user/re)
[02:09:07] <grawity> usually you want to know exactly where the duplicates are
[02:09:12] <BrokenCog> right.
[02:09:29] *** Joins: shabius (~shabius@2a0e:1c80:2:1022::1005)
[02:09:55] *** Joins: SuperLag (~akulbe@user/superlag)
[02:10:03] *** Quits: __bluebell__ (~le@194.110.115.45) (Quit: Konversation terminated!)
[02:10:45] *** Quits: qlixed (~qlixed@host77.181-13-77.telecom.net.ar) (Ping timeout: 256 seconds)
[02:13:55] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[02:14:13] *** Joins: nyah (~nyah@90.221.186.180)
[02:15:18] *** Quits: node1 (~node1@user/node1) (Ping timeout: 272 seconds)
[02:15:51] <BrokenCog> unrelated query:  If I:
[02:15:51] <BrokenCog> >>> f = open("~/dupes.txt")
[02:15:51] <BrokenCog> Traceback (most recent call last): File "<stdin>", line 1, in <module>
[02:15:51] <BrokenCog> FileNotFoundError: [Errno 2] No such file or directory: '~/dupes.txt'
[02:15:51] *** Joins: node1 (~node1@user/node1)
[02:15:55] <Adoi> hello, I have "fn(a) = b", and I use "b" within a second function where I call the first function as a module, but nowhere in the second function I use "a". yet, when I call the first function from the second, "a" must inevitably exist in my second function, too, for which reason I get "name 'a' not defined". how can I call the first function without this problem here?
[02:16:01] *** Quits: sazawal (~sazawal@2409:4043:510:d63:3a5a:3f8d:691a:d016) (Quit: Leaving)
[02:16:14] *** Quits: baltazar (~baltazar@84-236-16-51.pool.digikabel.hu) (Quit: leaving)
[02:16:18] <BrokenCog> I get that ... but If I don't use the user dir tilde it works (presuming in correct directory)
[02:16:42] <Adoi> the output returned by the first function is used in the second
[02:16:44] <grym> BrokenCog: f = pathlib.Path('~/dupes.txt').expanduser().open('r')
[02:16:59] *** Quits: et (~et@user/et) (Ping timeout: 256 seconds)
[02:17:00] <grym> BrokenCog: and nicer; `with pathlib.Path('~/dupes.txt').expanduser().open('r') as f:`
[02:17:04] *** Joins: et_ (~et@user/et)
[02:17:06] <BrokenCog> expanduser() ... ugh. thanks.
[02:17:12] <grym> yup :(
[02:17:14] *** Joins: pragmaticenigma (~pragmatic@user/pragmaticenigma)
[02:17:30] <BrokenCog> I guess that's portability.
[02:17:30] *** et_ is now known as et
[02:17:38] <grym> it is, and pathlib does that part quite well
[02:17:48] <grym> ... but you have to ask, if you're starting from a string
[02:18:28] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[02:18:34] <grym> like, it'll do it right if you pass `'%UserProfile%'` or whatever windows uses
[02:18:38] <grym> it's been a minute
[02:18:42] <BrokenCog> right.
[02:19:37] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 246 seconds)
[02:20:11] *** Joins: cheater (~Username@user/cheater)
[02:20:36] <BrokenCog> what's the mechanism you used to output the object type with the data?  (Out[5] in your paste)
[02:21:05] <grym> that's just defaultdict's repr
[02:22:25] *** Quits: shabius (~shabius@2a0e:1c80:2:1022::1005) (Ping timeout: 246 seconds)
[02:22:34] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:22:47] *** Joins: baltazar (~baltazar@84-236-16-51.pool.digikabel.hu)
[02:22:47] <grawity> the interactive python mode prints out repr() of the object, and it's up to the object itself to return something useful
[02:22:56] <grym> right; i'm using IPython here
[02:23:00] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:23:03] <grym> but that shouldn't matter
[02:23:40] <grym> (ipython gives you the In[]/Out[] prefixes)
[02:24:24] *** Quits: node1 (~node1@user/node1) (Read error: No route to host)
[02:24:47] *** Joins: Snyp (~rksht@49.207.193.103)
[02:25:00] *** Joins: node1 (~node1@user/node1)
[02:25:19] *** Quits: Barones (~Barones@2804:48dc:8500:0:5c70:83ad:f4fc:2180) (Quit: Leaving)
[02:26:22] *** Quits: robot-chicken (~robot-chi@user/robot-chicken) ()
[02:26:55] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[02:27:11] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[02:27:23] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[02:27:44] *** Quits: mdemo (~mdemo@c-73-40-53-74.hsd1.va.comcast.net) (Ping timeout: 252 seconds)
[02:27:45] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[02:27:53] *** Joins: mdemo5 (~mdemo@c-73-40-53-74.hsd1.va.comcast.net)
[02:28:22] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 246 seconds)
[02:29:14] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[02:29:30] *** Joins: shabius (~shabius@45.15.19.231)
[02:30:23] *** Joins: mud (~mud@user/kadoban)
[02:32:15] *** Parts: Cr4ft (~jordan@2604:3d09:7179:8a00:d91c:82a8:9021:10e9) ()
[02:32:41] *** Quits: torandu (~sean@90.222.17.57) (Quit: leaving)
[02:32:53] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:32:59] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[02:34:45] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: Connection reset by peer)
[02:34:49] *** Joins: Gerula (~Gerula@user/gerula)
[02:34:50] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[02:36:16] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:36:36] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[02:36:38] *** Quits: offpics (~offpics@89-79-56-128.dynamic.chello.pl) (Quit: Konversation terminated!)
[02:36:49] *** Joins: y2o (~y2o@pc-128-133-45-190.cm.vtr.net)
[02:38:31] *** Quits: jazzy (~jaziz@2600:380:8753:52bc:5137:4898:53f7:15de) (Ping timeout: 256 seconds)
[02:39:28] *** Quits: loworderbit (~dave@s0106e81cba1736ea.ss.shawcable.net) (Ping timeout: 252 seconds)
[02:39:39] *** Joins: jazzy (~jaziz@2600:380:4542:186:7559:22d0:b16b:3c20)
[02:39:54] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:40:13] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[02:40:21] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[02:40:47] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[02:42:18] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[02:42:30] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: Connection reset by peer)
[02:42:49] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[02:43:30] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[02:43:30] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[02:43:30] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[02:43:31] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[02:43:31] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[02:43:31] *** Joins: jwon (~jwon@user/jwon)
[02:43:31] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[02:43:31] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[02:43:31] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[02:43:31] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[02:43:31] *** Joins: psydroid (~psydroid@user/psydroid)
[02:43:32] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[02:43:37] *** Joins: ctrypoph_ (~ctrypoph@172.58.187.206)
[02:43:43] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[02:43:44] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[02:43:45] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[02:43:45] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[02:43:45] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[02:43:45] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[02:43:46] *** Quits: penguinbrian (~penguinbr@2001:470:69fc:105::33d2) (Quit: node-irc says goodbye)
[02:43:47] *** Joins: justinf210 (~justinf21@188.sub-174-204-54.myvzw.com)
[02:44:16] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (Quit: node-irc says goodbye)
[02:44:17] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Quit: node-irc says goodbye)
[02:44:30] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[02:44:49] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[02:46:17] *** Quits: syphar (~syphar@2001:470:69fc:105::2ad6) (Quit: node-irc says goodbye)
[02:46:20] *** Quits: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net) (Ping timeout: 272 seconds)
[02:46:37] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Quit: node-irc says goodbye)
[02:46:54] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[02:48:23] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[02:48:23] *** Quits: node1 (~node1@user/node1) (Read error: No route to host)
[02:48:30] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[02:51:37] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[02:51:55] *** Joins: venmx_ (~bertie@host81-155-235-58.range81-155.btcentralplus.com)
[02:52:10] *** Quits: justinf210 (~justinf21@188.sub-174-204-54.myvzw.com) (Ping timeout: 246 seconds)
[02:52:14] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[02:52:19] *** Quits: zoid (~zoid@user/taxationistheft) (Quit: REBOOT ALL THE THINGS)
[02:52:24] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Read error: Connection reset by peer)
[02:52:24] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Remote host closed the connection)
[02:52:25] *** Quits: psydroid (~psydroid@user/psydroid) (Read error: Connection reset by peer)
[02:52:26] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Remote host closed the connection)
[02:52:26] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Read error: Connection reset by peer)
[02:52:26] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Write error: Connection reset by peer)
[02:52:27] *** Quits: jwon (~jwon@user/jwon) (Remote host closed the connection)
[02:52:28] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Remote host closed the connection)
[02:52:29] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Remote host closed the connection)
[02:52:30] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Remote host closed the connection)
[02:52:30] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Remote host closed the connection)
[02:52:30] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Remote host closed the connection)
[02:52:36] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Remote host closed the connection)
[02:53:49] *** Joins: zoid (~zoid@user/taxationistheft)
[02:55:08] *** Joins: p-i- (~Ohmu@node-n6b.pool-118-173.dynamic.totinternet.net)
[02:56:05] *** Joins: justinf210 (~justinf21@170.sub-97-44-0.myvzw.com)
[02:56:59] *** Joins: JanC_ (~janc@user/janc)
[02:57:02] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Remote host closed the connection)
[02:57:25] *** Quits: ponadm_ (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 246 seconds)
[02:57:54] *** Quits: JanC (~janc@user/janc) (Ping timeout: 240 seconds)
[02:58:32] *** Quits: gutt (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[02:59:18] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[02:59:22] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[02:59:31] *** Joins: seednode (~seednode@user/seednode)
[03:00:18] *** Quits: justinf210 (~justinf21@170.sub-97-44-0.myvzw.com) (Ping timeout: 240 seconds)
[03:00:39] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[03:00:40] *** Joins: justinf210 (~justinf21@201.sub-174-204-3.myvzw.com)
[03:01:34] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[03:02:39] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Read error: Connection reset by peer)
[03:04:27] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[03:04:58] *** Joins: gline_ (~yashi@p508be4eb.dip0.t-ipconnect.de)
[03:05:14] *** Quits: marduk (~marduk@216.243.54.166) (Remote host closed the connection)
[03:08:11] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[03:08:11] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[03:08:11] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[03:08:11] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[03:08:11] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[03:08:11] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[03:08:11] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[03:08:11] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[03:08:11] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[03:08:11] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[03:08:12] *** Joins: jwon (~jwon@user/jwon)
[03:08:12] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[03:08:12] *** Joins: penguinbrian (~penguinbr@2001:470:69fc:105::33d2)
[03:08:12] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[03:08:12] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[03:08:12] *** Joins: psydroid (~psydroid@user/psydroid)
[03:08:25] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[03:08:25] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[03:08:30] *** Quits: gline (~yashi@p508bed07.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[03:09:50] *** Joins: cman (~Cody@2603:9000:d104:8465:a4d8:f7ad:8f54:d2e)
[03:10:56] *** Joins: Corder_000 (~Coder_000@177.10.203.30)
[03:12:49] *** Quits: ctrypoph_ (~ctrypoph@172.58.187.206) (Ping timeout: 246 seconds)
[03:13:05] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 256 seconds)
[03:13:44] *** Quits: justinf210 (~justinf21@201.sub-174-204-3.myvzw.com) (Remote host closed the connection)
[03:13:54] *** Joins: justinf210 (~justinf21@201.sub-174-204-3.myvzw.com)
[03:14:13] *** Quits: ntdll (~ntdll@user/ntdll) (Ping timeout: 268 seconds)
[03:15:14] *** Quits: kaos02 (~kaos02@12.186.233.220.static.exetel.com.au) (Ping timeout: 272 seconds)
[03:15:16] *** Quits: y2o (~y2o@pc-128-133-45-190.cm.vtr.net) (Ping timeout: 246 seconds)
[03:15:42] *** Quits: Gudddu (~Guddu@117.222.83.107) (Read error: Connection reset by peer)
[03:15:54] *** Joins: qlixed (~qlixed@181.44.129.13)
[03:16:03] *** Quits: mexen (uid495612@user/mexen) ()
[03:16:31] *** Joins: Schnouki (~schnouki@user/schnouki)
[03:17:34] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:18:05] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:18:25] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 246 seconds)
[03:19:43] *** Quits: cedric (~cedric@2a01:cb11:867:c200:8247:2715:2cee:69e1) (Quit: Konversation terminated!)
[03:21:40] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[03:22:29] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[03:22:42] *** Quits: venmx_ (~bertie@host81-155-235-58.range81-155.btcentralplus.com) (Ping timeout: 240 seconds)
[03:22:56] *** Quits: Akuli (~Akuli@82-203-163-66.bb.dnainternet.fi) (Quit: Leaving)
[03:23:23] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[03:23:29] *** Joins: Overflwn (~Overflwn@2a02:8070:c3b7:5b00::e4f3)
[03:23:32] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[03:23:35] *** Parts: emanuele6 (~emanuele6@user/emanuele6) ()
[03:23:42] *** Quits: justinf210 (~justinf21@201.sub-174-204-3.myvzw.com) (Ping timeout: 272 seconds)
[03:23:42] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[03:24:02] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[03:24:15] *** Joins: iflema (~ian@user/iflema)
[03:24:25] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Ping timeout: 256 seconds)
[03:25:11] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[03:25:21] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[03:26:10] *** Joins: chaosite (~chaosite@user/chaosite)
[03:26:20] *** Joins: ctrypoph (~ctrypoph@2607:fb90:a902:4d3:277c:721d:1ff:435f)
[03:27:15] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 256 seconds)
[03:28:36] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[03:29:43] *** Quits: bilegeek (~bilegeek@2600:1008:b015:3e96:6f34:1a42:6ac5:3b86) (Quit: Leaving)
[03:29:46] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[03:29:52] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[03:30:13] *** Joins: waynew (~wayne@user/waynew)
[03:31:18] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[03:31:27] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[03:31:37] *** Joins: viktorivan (~ivan@187.223.237.71)
[03:32:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:32:55] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Ping timeout: 256 seconds)
[03:32:59] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:33:26] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[03:34:40] *** Quits: Corder_000 (~Coder_000@177.10.203.30) (Quit: WeeChat 3.0.1)
[03:34:54] *** Joins: Corder_000 (~Coder_000@177.10.203.30)
[03:35:19] *** Quits: Corder_000 (~Coder_000@177.10.203.30) (Client Quit)
[03:36:25] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[03:36:26] *** Wulf4 is now known as Wulf
[03:37:39] *** Quits: ctrypoph (~ctrypoph@2607:fb90:a902:4d3:277c:721d:1ff:435f) (Read error: Connection reset by peer)
[03:38:38] *** Joins: ctrypoph (~ctrypoph@2600:1702:3000:9090:6d7f:1c9d:1aea:24aa)
[03:38:42] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:38:47] *** Joins: YoungPotato (~user@155.98.131.7)
[03:38:52] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 252 seconds)
[03:39:48] *** Quits: squirrel (~sq@user/squirrel) (Ping timeout: 268 seconds)
[03:40:13] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[03:40:22] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[03:40:24] *** Joins: Corder_000 (~Coder_000@179.83.141.222)
[03:40:49] *** Joins: pnoud (~pnoud@user/pnoud)
[03:41:11] *** Joins: srilyk (~wayne@user/waynew)
[03:42:01] <YoungPotato> Hi all! How can I move a numpy array with shape (10,) to (1, 10)? See my issue here: https://dpaste.org/EDoO
[03:42:04] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[03:43:06] <SnoopJ> YoungPotato, `arr[np.newaxis, :]` will do it, as will `np.reshape(arr, newshape=(1, 10))`
[03:43:41] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[03:43:45] <SnoopJ> (np.newaxis is an alias for None, and using None in an indexing operation means "insert a size-1 axis here")
[03:43:46] <YoungPotato> Thanks SnoopJ
[03:44:09] <YoungPotato> This makes sense
[03:44:17] *** Joins: waynew (~wayne@user/waynew)
[03:44:37] <SnoopJ> you can shorten the second spelling as `arr.reshape((1, 10))` as well. Not really sure why I went with the module-level version :)
[03:44:56] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[03:45:03] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[03:45:06] *** sgn is now known as sgn_
[03:45:57] *** sgn_ is now known as sgn
[03:46:01] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[03:46:18] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[03:47:39] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 256 seconds)
[03:47:39] *** Quits: Corder_000 (~Coder_000@179.83.141.222) (Ping timeout: 256 seconds)
[03:47:44] *** Joins: waynew_ (~wayne@user/waynew)
[03:48:31] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 246 seconds)
[03:49:14] *** Joins: chaosite (~chaosite@user/chaosite)
[03:50:50] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: Connection reset by peer)
[03:50:56] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 272 seconds)
[03:51:06] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[03:52:36] *** Joins: hendursaga (~weechat@user/hendursaga)
[03:53:19] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Ping timeout: 256 seconds)
[03:53:35] *** Quits: MikZyth (~MikZyth@188.65.242.79) (Quit: WeeChat 3.1)
[03:53:54] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[03:56:30] *** Joins: polyrob (~rob@user/polyrob)
[03:57:21] <YoungPotato> Thanks again SnoopJ, I implemented the code and it worked perfectly.
[03:59:10] *** Quits: gline_ (~yashi@p508be4eb.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[03:59:23] *** Joins: djapo (~archangel@user/djapo)
[03:59:52] *** Joins: waynew (~wayne@user/waynew)
[04:00:36] *** Joins: tims (~tims@220-244-125-107.static.tpgi.com.au)
[04:00:53] *** Quits: ulu_ulu (~ulu@user/ulu) (Quit: Leaving)
[04:02:20] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 272 seconds)
[04:03:31] *** Quits: waynew_ (~wayne@user/waynew) (Ping timeout: 256 seconds)
[04:03:32] *** Joins: paravida (~paravida@user/paravida)
[04:05:05] *** Joins: chaosite (~chaosite@user/chaosite)
[04:05:54] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 240 seconds)
[04:06:25] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:06:54] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[04:07:06] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[04:07:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[04:08:20] *** Joins: zerosignal (~zerosigna@2607:fea8:5460:2600:9d4c:40bc:f302:8892)
[04:09:15] *** JanC_ is now known as JanC
[04:09:45] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:09:45] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[04:09:48] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[04:13:44] *** Quits: YoungPotato (~user@155.98.131.7) (Read error: Connection reset by peer)
[04:14:21] *** Joins: YoungPotato (~user@c-67-186-254-165.hsd1.ut.comcast.net)
[04:15:49] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Ping timeout: 244 seconds)
[04:15:59] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Ping timeout: 256 seconds)
[04:16:43] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[04:16:48] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[04:16:53] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[04:17:19] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[04:17:39] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[04:18:03] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Read error: Connection reset by peer)
[04:18:19] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[04:19:31] *** Joins: BUSY (~BUSY@user/busy)
[04:20:22] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 246 seconds)
[04:20:55] *** Joins: chaosite (~chaosite@user/chaosite)
[04:21:58] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[04:23:55] *** Joins: Adois (~Adoi@user/adoi)
[04:24:18] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[04:24:52] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[04:25:00] *** Joins: srilyk (~wayne@user/waynew)
[04:25:30] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[04:25:32] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:26:00] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[04:26:19] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[04:27:15] *** Parts: corn266 (~corn266@ec2-18-217-219-218.us-east-2.compute.amazonaws.com) (Closing Window)
[04:27:36] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[04:27:38] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[04:28:42] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 240 seconds)
[04:29:06] *** Joins: r3m (~launch@user/r3m)
[04:29:10] *** Joins: Mechanismus (~LabMonkey@2602:306:cf62:e270:18a4:a75a:f718:161a)
[04:29:36] *** Quits: safe (~safe@cpe-74-64-165-24.nj.res.rr.com) (Read error: Connection reset by peer)
[04:30:25] *** Joins: waynew (~wayne@user/waynew)
[04:32:32] *** Joins: b0rf (~shaun@121-44-16-32.tpgi.com.au)
[04:32:52] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[04:33:06] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 240 seconds)
[04:33:07] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-d575-2704-820a-6f5d.res6.spectrum.com) (Read error: Connection reset by peer)
[04:33:11] *** Parts: b0rf (~shaun@121-44-16-32.tpgi.com.au) (Leaving)
[04:33:36] <catern> would anyone take a look at an article I'm writing about a new distributed systems library? I'm just looking for some first reactions to know that it makes sense. In PM, since it's still a draft (please forgive me for this gross breach of IRC etiquette)
[04:34:38] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::4ec1) (Quit: Konversation terminated!)
[04:35:54] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[04:36:38] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[04:36:57] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[04:37:16] *** Joins: chaosite (~chaosite@user/chaosite)
[04:38:15] <gry> how do i do a 2 x 3 matrix in python please? i tried ``a=[[]]; a[1][1]=2;`` but got error ``list index out of range``
[04:40:42] *** Quits: viktorivan (~ivan@187.223.237.71) (Ping timeout: 240 seconds)
[04:40:45] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[04:41:06] *** Joins: CombatVet (~c4@user/combatvet)
[04:41:18] <jinsun> gry: do you have numpy? this is the kind of thing numpy is good at
[04:41:27] *** Joins: waynew_ (~wayne@user/waynew)
[04:41:30] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[04:41:30] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[04:41:47] *** Joins: ionface_ (~ionface@user/ionface)
[04:41:47] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 268 seconds)
[04:42:11] <gry> jinsun: i do, but eventually i'd like to plot those out using matplotlib.pyplot, and afaik anything from np is a bit of a pain to pass as arguments to that
[04:42:23] *** Joins: zaquest (~notzaques@5.128.210.178)
[04:42:23] *** Joins: drew (~drew@user/drew)
[04:42:28] <grym> gry: no, other way around
[04:42:31] *** Quits: waynew_ (~wayne@user/waynew) (Read error: Connection reset by peer)
[04:42:40] <grym> plt takes ndarrays preferentially
[04:42:43] <gry> grym: then please show me a small examples
[04:42:45] <gry> example
[04:42:55] <grym> np.zeroes((2,3))
[04:43:06] *** Joins: srilyk (~wayne@user/waynew)
[04:43:22] *** Joins: viktorivan (~ivan@187.223.237.71)
[04:43:26] <BlessJah> x = [ [ None for x in range(3) ] for y in range(2) ]
[04:43:30] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 240 seconds)
[04:43:30] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[04:43:48] <jinsun> it is american spelling I think, np.zeros
[04:44:10] <grym> it is .zeros, yes
[04:44:33] *** Joins: wyclif (~wyclif@user/wyclif)
[04:44:44] <grym> my spelling often doesn't match my nationality...
[04:44:46] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 272 seconds)
[04:44:56] <grym> keep stuffing e's and u's places
[04:44:59] <BlessJah> gry: Why do you want to create 2x3 matrix?
[04:45:08] <gry> grym: and how do i assign to that?
[04:45:30] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[04:45:30] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[04:45:43] *** Joins: srilyk (~wayne@user/waynew)
[04:46:03] <grym> gry: https://bpa.st/LHLA
[04:46:03] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[04:46:21] <grym> gry: you may benefit from https://cs231n.github.io/python-numpy-tutorial/
[04:46:24] *** Joins: srilyk (~wayne@user/waynew)
[04:46:26] *** Joins: Auctus (~auctus@user/auctus)
[04:46:27] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[04:46:35] <BlessJah> Without knowing context, recommending numpy might be a bad advice actually
[04:46:48] <grym> BlessJah: gry wants to plot stuff with matplotlib
[04:46:53] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.2)
[04:46:54] <grym> ergo, numpy time
[04:47:03] <BlessJah> Oh, I see. Numpy time.
[04:47:20] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:cf3c:697d:723b:8aac) (Remote host closed the connection)
[04:47:57] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[04:48:51] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[04:51:06] <Adois> hello, if I want to keep the same number of spaces between any 2 of the same row's elements for all columns, how can I do it?
[04:51:09] *** Quits: bilb_ono (~alexmarsh@pool-96-250-84-46.nycmny.fios.verizon.net) (Quit: bilb_ono)
[04:51:09] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[04:51:31] *** Joins: bilb_ono (~alexmarsh@pool-96-250-84-46.nycmny.fios.verizon.net)
[04:51:35] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[04:52:08] <Adois> and is there a shortcut function for it?
[04:52:20] <nedbat> Adois: what is adding spaces in the first place?
[04:52:23] *** Parts: Intruder777 (~Intruder7@user/intruder777) ()
[04:52:40] *** Joins: chaosite (~chaosite@user/chaosite)
[04:52:53] <grym> (if you're printing out a table and want it to look nice, there's a great package for this)
[04:53:02] <Adois> nedbat, sorry, I couldnt understand
[04:53:07] *** Joins: bigRoo (~user@131.236.54.84)
[04:53:40] <Adois> grym, it is not a table but I would like to use the idea for printing table-like output..which one is it?
[04:53:41] <nedbat> Adois: i don't know what your code is doing. You asked about spaces between elements. Are you printing elements? Adding them to a string? What spaces are you talking about?
[04:54:03] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[04:54:08] <grym> Adois: https://pypi.org/project/tabulate/  is very handy
[04:54:18] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[04:54:19] <Adois> nedbat, adding them to string, yes
[04:54:24] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 244 seconds)
[04:54:51] <nedbat> Adois: can you show us your code, and the output you get now, and what you don't like about it?
[04:54:52] <Adois> I am printing numbers that should be kept at fixed distances in every row
[04:55:15] <nedbat> Adois: it might be that grym's suggestion is best: use a library designed for this.
[04:55:51] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[04:55:59] *** Joins: Intruder777|1 (~Intruder7@user/intruder777)
[04:56:01] *** Joins: _ev (~Ev@2604:180:f3::146)
[04:56:04] *** Parts: Intruder777|1 (~Intruder7@user/intruder777) ()
[04:56:15] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[04:56:44] *** Parts: _ev (~Ev@2604:180:f3::146) ()
[04:57:17] <Adois> oh ok, probably the question does not want me to use additional libraries
[04:57:21] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[04:57:49] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 246 seconds)
[04:58:07] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Read error: Connection reset by peer)
[04:58:19] *** Joins: _ev (~Ev@2604:180:f3::146)
[04:59:13] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 246 seconds)
[04:59:36] *** Quits: _ev (~Ev@2604:180:f3::146) (Changing host)
[04:59:36] *** Joins: _ev (~Ev@user/ev/x-8999918)
[04:59:48] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:59:51] <grym> f-strings with formatting in them, i guess
[05:00:11] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Ping timeout: 256 seconds)
[05:00:58] <nedbat> Adois: what question?
[05:01:41] *** Quits: PdimH (~pdimh@user/pdimh) (Quit: May we meet again)
[05:01:47] *** Joins: waynew (~wayne@user/waynew)
[05:02:32] <Adois> nedbat, this code prints the primary-school operations on top of each other, however, the question wants each operation to be next to one another with 4 spaces distance; https://bpa.st/CRZQ
[05:02:41] *** Joins: candyman1 (~candyman@user/candyman)
[05:03:17] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[05:03:24] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[05:03:44] *** Joins: srilyk (~wayne@user/waynew)
[05:03:46] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 246 seconds)
[05:04:16] *** Joins: emerent_ (~quassel@p200300cd5703bbbcba27ebfffed28a59.dip0.t-ipconnect.de)
[05:04:16] *** emerent is now known as Guest621
[05:04:16] *** Quits: Guest621 (~quassel@p200300cd5703bb9dba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[05:04:16] *** emerent_ is now known as emerent
[05:04:31] <Adois> there are some additional positioning rules within each operation, hence the justify commands
[05:04:47] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[05:05:26] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[05:05:41] <themill> I'm trying to remove the use of six from some old code. I was expecting to replace six.iterkeys(d) with d.keys() but that changes the type from Iterator[str] to KeysView[str]. I'm not sure I understand the difference between the two to be able to decide whether to wrap it in an iter() so that the return type is the same or change the type annotation.
[05:06:27] <nedbat> themill: why is it a problem that the type changes?  declare it as Iterable[str]
[05:06:31] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:06:50] *** Joins: noobly (~user@50.38.64.32)
[05:06:59] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[05:07:20] <Adois> wih example input; https://bpa.st/ZNBQ
[05:08:29] *** Joins: chaosite (~chaosite@user/chaosite)
[05:08:48] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[05:08:49] *** Parts: _ev (~Ev@user/ev/x-8999918) ()
[05:09:23] *** Joins: _ev (~Ev@user/ev/x-8999918)
[05:09:24] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[05:09:25] *** Quits: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[05:09:36] *** Joins: srilyk (~wayne@user/waynew)
[05:10:54] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[05:11:22] <Adois> more precisely, this is what is in the file;https://bpa.st/BQFA
[05:11:31] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[05:12:09] <Adois> and this will run it ; https://bpa.st/UQPA
[05:12:30] <Henry151> howdy y'all
[05:12:34] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[05:12:34] <themill> nedbat: it's currently declared as Iterator[str] (perhaps that was wrong to begin with)
[05:12:54] <nedbat> themill: Iterable[str] would work for the old and the new code
[05:12:57] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[05:13:01] <themill> ack, thanks
[05:13:54] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[05:14:12] *** Joins: Cleverness (~clevernes@pool-108-46-145-4.nycmny.fios.verizon.net)
[05:14:16] <noobly> can someone help me understand what the author is wanting here: https://imgur.com/a/xshnB6W ? what is the numpy.where command he expects? I've ran `indices0 = pima[np.where(pima[:, -1] == 0)]`, but I don't think that produces a compatible result
[05:14:26] *** Joins: gggp (~textual@60.10.194.47)
[05:14:52] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[05:16:26] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[05:16:44] *** Quits: KevinX (~KevinX@94.140.11.108) (Quit: Textual IRC Client: www.textualapp.com)
[05:16:59] *** Quits: Overflwn (~Overflwn@2a02:8070:c3b7:5b00::e4f3) (Remote host closed the connection)
[05:17:16] <Henry151> when moving a chunk of code from python2 to python3, all other things being equal or assuming that all the other code runs correctly on both, if we've got a dict.iteritems do we just replace it with dict.items and leave it all otherwise the same? i imagine not, right, because dict.items returns a "view" instead of a list..
[05:17:17] *** Joins: Laibsch (~leggewie@dynamic-093-133-112-192.93.133.pool.telefonica.de)
[05:18:03] <Henry151> is there a specific approach to converting instances of dict.iteritems over to python3?
[05:18:12] <nedbat> Henry151: usually the difference doesn't matter, so just change iteritems to items
[05:18:37] <Henry151> nedbat: thanks, i'll start with that and see if things work as expected
[05:18:42] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 240 seconds)
[05:18:55] <AhmedAmerican> what do you think about that regex ? https://regex101.com/r/AqPXxc/1 seems fine ?
[05:19:01] <Adois> ok, this tells more, I suppose; https://bpa.st/JCJQ
[05:19:29] <nedbat> AhmedAmerican: is it matching the parts you want?
[05:19:55] <Adois> the problem is that the 4 spaces are added to the last row of each operation, and I found no way to concatanate them row by row
[05:20:48] <AhmedAmerican> @nedbat yes it's
[05:20:49] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[05:21:07] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[05:22:25] <nedbat> AhmedAmerican: then it's good.  In Python you can use / you don't need \/
[05:23:41] *** Joins: r3m (~launch@user/r3m)
[05:23:50] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[05:24:04] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[05:24:10] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Quit: Leaving)
[05:24:12] <AhmedAmerican> @nedbat is that what you mean ? https://regex101.com/r/o8X6VV/1
[05:24:25] <Adois> no comments?
[05:24:51] *** Joins: chaosite (~chaosite@user/chaosite)
[05:25:07] <AhmedAmerican> @nedbat ops meant `/\d+/\d+/`
[05:25:34] *** Joins: firepup (~firepup@d108-172-166-200.bchsia.telus.net)
[05:26:21] *** Joins: djapo (~archangel@user/djapo)
[05:26:28] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[05:26:39] *** Joins: squirrel (~sq@user/squirrel)
[05:27:04] *** Joins: b0rf (~shaun@121-44-16-32.tpgi.com.au)
[05:27:06] *** Joins: cjb (~cjb@user/cjb)
[05:28:01] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[05:28:31] *** Quits: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[05:28:41] <Henry151> am i likely to need to replace every instance of filter() with list(filter()) as well?
[05:29:01] *** Parts: b0rf (~shaun@121-44-16-32.tpgi.com.au) (Leaving)
[05:29:22] <Henry151> i suppose if it was that easy 2to3 would have done it already :)
[05:29:32] *** kostkon__ is now known as kostkon
[05:29:39] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[05:29:59] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Client Quit)
[05:30:11] <noobly> nevermind, I think I get it - I think I need an array of the indices, not a sub-matrix
[05:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:27] <Henry151> i'm just trying to pin down more problem areas in this codebase and see about fixing things pre-emptively before i actually see any tracebacks
[05:30:33] <jinsun> Henry151: not if you just want to loop over it once, you can do that without converting it to list, call list if you want a list
[05:32:32] <noobly> but, if you happen to know a nice numpy.where command for creating a new array of indices given a condition, please let me know :-)
[05:32:45] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[05:32:46] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[05:33:01] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[05:33:45] *** Joins: average_python_e (~pacblinky@user/pacblinky)
[05:33:51] <average_python_e> hey can someone help me with something
[05:34:04] *** average_python_e is now known as averagePythonEnj
[05:34:05] <grym> average_python_e: not yet!
[05:34:18] *** averagePythonEnj is now known as pythonEnjoyer
[05:34:20] <pythonEnjoyer> huh ?
[05:34:30] <grym> don't ask to ask, just ask
[05:34:40] *** Joins: vlm (~vlm@user/vlm)
[05:34:46] <pythonEnjoyer> it is long can i pm you
[05:34:49] <grym> no
[05:35:03] <grym> but you can use a paste site like bpa.st/+python and share with everyone here
[05:35:03] <pythonEnjoyer> well i will just psot it here and pray
[05:35:11] <grym> (i don't know if i can help! you haven't told us enough yet)
[05:35:27] <pythonEnjoyer> alright alright
[05:36:13] <firepup> c:
[05:36:14] <pythonEnjoyer> gym:https://bpa.st/7PXQ here you go
[05:36:41] <pythonEnjoyer> any thoughts ?
[05:37:48] <grym> mm, don't know much about tkinter
[05:37:50] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[05:38:01] <pythonEnjoyer> aight lets forget tkinter
[05:38:08] <pythonEnjoyer> do you know how thats possible
[05:38:15] <pythonEnjoyer> in command line simple program
[05:38:24] <pythonEnjoyer> is there are function to make that easy
[05:38:30] <pythonEnjoyer> any
[05:38:36] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[05:38:50] <grym> i don't think you've got a good description of your problem yet
[05:39:11] *** Joins: gggp (~textual@60.10.194.47)
[05:39:23] <pythonEnjoyer> lets say i have a global value
[05:39:29] *** Quits: Cleverness (~clevernes@pool-108-46-145-4.nycmny.fios.verizon.net) (Quit: Leaving)
[05:39:40] <pythonEnjoyer> how i can increase a index of the value
[05:40:01] <grym> what's the type of the value?
[05:40:05] <pythonEnjoyer> number
[05:40:09] <pythonEnjoyer> lets say 0000000
[05:40:12] *** Joins: chaosite (~chaosite@user/chaosite)
[05:40:22] <pythonEnjoyer> when the user input something "increase"
[05:40:26] <firepup> you could just use an array
[05:40:27] <pythonEnjoyer> the value become 00001
[05:40:44] <pythonEnjoyer> if he enter increase increase the value become 00011
[05:40:48] <pythonEnjoyer> what is a array ?
[05:40:50] <grym> pythonEnjoyer: that's just zero, so `x = 0; x = x +1 `
[05:41:18] <pythonEnjoyer> grym but lets say i have to combine inputs togther
[05:41:32] <firepup> an array is a way of holding multiple pieces of informations.
[05:41:40] *** Joins: pnoud (~pnoud@user/pnoud)
[05:41:57] <pythonEnjoyer> wil look it up
[05:42:07] <pythonEnjoyer> not sure if it is gonna solve my easy problem
[05:44:02] *** Quits: candyman1 (~candyman@user/candyman) (Quit: No Ping reply in 180 seconds.)
[05:44:38] *** Joins: pagnol (~user@014198154145.ctinets.com)
[05:44:48] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[05:45:34] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[05:46:09] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[05:46:40] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 256 seconds)
[05:46:56] *** Joins: candyman1 (~candyman@user/candyman)
[05:47:16] *** Quits: mud (~mud@user/kadoban) (Read error: Connection reset by peer)
[05:47:43] *** Joins: mud (~mud@user/kadoban)
[05:47:56] <noobly> what does this mean: array[:, -1]? is it 'skip the first dimension, and go to the last element of the second'?
[05:47:57] <pythonEnjoyer> firepup: array is intertesting
[05:48:03] <Adois> it is ok not to be able to help but why no response at all?
[05:48:08] <pythonEnjoyer> but it is complicted
[05:48:09] <firepup> ?
[05:48:15] <pythonEnjoyer> i just want something easy
[05:48:15] <firepup> Adois i never saw your question
[05:48:33] <KirkMcDonald> noobly: Not "skip" but rather "take everything from."
[05:48:37] *** Quits: ctrypoph (~ctrypoph@2600:1702:3000:9090:6d7f:1c9d:1aea:24aa) (Quit: -a- Connection Timed Out)
[05:48:48] <Adois> firepup, I was talking to other people
[05:48:51] <firepup> oh.
[05:49:13] <pythonEnjoyer> https://bpa.st/4QRA
[05:49:16] <pythonEnjoyer> if someone can help
[05:50:38] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[05:51:32] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[05:52:00] <KirkMcDonald> pythonEnjoyer: You could just use a list of digits.
[05:52:17] <pythonEnjoyer> KirkMcDonald: how tho?
[05:52:30] <KirkMcDonald> pythonEnjoyer: Have you used a list before?
[05:52:41] *** Joins: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net)
[05:52:42] <pythonEnjoyer> tbh no
[05:52:43] *** Quits: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net) (Excess Flood)
[05:52:58] *** Joins: r3m (~launch@user/r3m)
[05:53:10] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[05:53:13] <pythonEnjoyer> i am just trying to setup a program that take user input and append it to a simple int value
[05:53:18] *** Quits: r3m (~launch@user/r3m) (Client Quit)
[05:53:24] <noobly> KirkMcDonald: thanks, I'm trying to set up a conditional where if the last element of `array` is 0, I save it's index value to a new array. So, in psuedo-code I want something like `nooblysArray = concat(indexof(array[np.where(array[ 'skip' , -1] == 0)]))`, if that makes sense.
[05:53:37] <pythonEnjoyer> then output the results to the screen
[05:53:40] *** Joins: r3m (~launch@user/r3m)
[05:54:13] *** Joins: y2o (~y2o@pc-128-133-45-190.cm.vtr.net)
[05:54:18] *** Quits: r3m (~launch@user/r3m) (Read error: Connection reset by peer)
[05:54:29] <KirkMcDonald> noobly: It is unclear to me what this means.
[05:54:43] *** Joins: r3m (~launch@user/r3m)
[05:55:22] *** Joins: gggp (~textual@60.10.194.47)
[05:55:35] <noobly> KirkMcDonald: sorry, just the array of index values for when array[:, -1] == 0 is true. so an array of all index values where the last element is 0
[05:55:46] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Quit: elastic_dog)
[05:56:03] *** Joins: chaosite (~chaosite@user/chaosite)
[05:56:17] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 256 seconds)
[05:56:22] <noobly> array is a 2D array
[05:56:39] <KirkMcDonald> noobly: Well, the expression `array[:, -1] == 0` gets you most of the way there, I think.
[05:56:43] *** Joins: pete443_ (~pete@user/pete443)
[05:57:32] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[05:57:45] <pythonEnjoyer> no one can help me i guess ;(
[05:57:55] <pythonEnjoyer> perhaps i should go look in tor network lol
[05:58:07] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Ping timeout: 244 seconds)
[05:58:16] <KirkMcDonald> pythonEnjoyer: It is a fairly elementary problem.
[05:58:37] <KirkMcDonald> pythonEnjoyer: I would recommend looking into Python lists.
[05:58:41] <pythonEnjoyer> aight
[05:58:47] <pythonEnjoyer> so it will help me right
[05:58:56] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 252 seconds)
[05:59:09] <firepup> array/lists are the solutions to your problem
[05:59:10] <KirkMcDonald> Though if you really wanted to use an integer for this, you could, in which case it is just a math problem.
[05:59:14] <pythonEnjoyer> it will fix my problem? https://bpa.st/4QRA
[05:59:23] <noobly> KirkMcDonald: I was using `indices0 = array[np.where(array[:, -1] == 0)]` prior, and it (understandably,  now) created a new 2D array including all rows in which the last element is 0. This is close to what I want, but I what I really want is a 1D array of their original index values.
[05:59:26] <pythonEnjoyer> alright thanks Kirk
[05:59:29] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[05:59:29] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[05:59:35] <pythonEnjoyer> i will learn arrays and lists
[05:59:41] <pythonEnjoyer> and how to use them with tkinter
[05:59:46] <pythonEnjoyer> and see if it will solve my problem
[06:00:23] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[06:00:42] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[06:00:48] *** Joins: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net)
[06:00:50] *** Quits: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net) (Excess Flood)
[06:01:00] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[06:01:54] <KirkMcDonald> noobly: (a[:, -1] == 0).nonzero()[0]
[06:03:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:03:51] <Adois> ok, there are new people so I can perhaps ask again; how can I align the outputs as in the expected result here; https://bpa.st/L3FQ
[06:04:35] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[06:04:35] *** Quits: Rio (~rio@2601:345:4203:41c0:3f1f:6ee6:2ea6:a58b) (Remote host closed the connection)
[06:04:50] *** Joins: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net)
[06:04:52] *** Quits: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net) (Excess Flood)
[06:04:54] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:05:30] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 240 seconds)
[06:05:39] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:05:49] <Adois> I even tried to print the 3 rows separately, but there, too, some second-row numbers lose their position
[06:07:28] <KirkMcDonald> Adois: Try constructing each line separately.
[06:07:33] <MacGyver> Transpose it.
[06:07:42] <MacGyver> You're going through it problem by problem.
[06:07:44] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:07:51] <KirkMcDonald> That isn't necessarily a problem.
[06:07:58] <MacGyver> You'll need to go through it per collection of terms.
[06:08:08] <MacGyver> All first terms first, then all operators + second terms first.
[06:08:09] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[06:08:50] <KirkMcDonald> Having the outer loop be over the set of problems can work. You just need to build each line of the output on its own.
[06:08:53] *** Joins: ctrypoph (~ctrypoph@2600:1702:3000:9090:6d7f:1c9d:1aea:24aa)
[06:08:55] *** Quits: ctrypoph (~ctrypoph@2600:1702:3000:9090:6d7f:1c9d:1aea:24aa) (Excess Flood)
[06:09:06] <MacGyver> Effectively these solutions are the same thing.
[06:09:24] <MacGyver> Either way, "Collect the entire line before outputting it" is the answer.
[06:09:35] <KirkMcDonald> So rather than one big f"" with three lines in it, you'd have (for example) a list with three strings, and each problem would append to each string.
[06:09:53] <noobly> KirkMcDonald: huh, thanks! I should've read into nonzero, it was surrounding everything I was looking at, but it's name wasn't convincing enough.
[06:09:53] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 256 seconds)
[06:10:28] <KirkMcDonald> Or you'd represent each line as a list of strings, and append each problem's part of that line in turn.
[06:10:46] <BrenBarn> Hmmm, it did seem to get quiet
[06:11:43] <noobly> still curious how this would be done with numpy.where though, as that's what the author recommended
[06:11:55] *** Joins: chaosite (~chaosite@user/chaosite)
[06:13:05] <KirkMcDonald> noobly: Where is essentially the same function as nonzero(), when called with a single argument.
[06:13:19] *** Joins: frostblade (onelegend@user/frostblade)
[06:13:25] <KirkMcDonald> noobly: np.where(a[:, -1] == 0)[0]
[06:14:15] <Henry151> i'm taking the "Migrating Python 2 to Python 3" course by Anthony Shaw on Pluralsight
[06:14:34] <Henry151> I've been studying this topic for quite a while but he's already pointed out a number of things I hadn't considered
[06:14:37] <grym> ruh roh
[06:14:37] <Henry151> really great content
[06:14:57] *** Joins: ctrypoph (~ctrypoph@2600:1702:3000:9090:6d7f:1c9d:1aea:24aa)
[06:14:59] *** Quits: ctrypoph (~ctrypoph@2600:1702:3000:9090:6d7f:1c9d:1aea:24aa) (Excess Flood)
[06:15:08] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[06:15:11] <grym> or, wait, no, that's not zed
[06:15:13] <noobly> KirkMcDonald: thanks again, I like to get familiar as I can with authors style
[06:15:16] *** Quits: pythonEnjoyer (~pacblinky@user/pacblinky) (Quit: Lost terminal)
[06:16:32] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 252 seconds)
[06:16:36] *** Quits: FluffyMask (~FluffyMas@user/fluffymask) (Quit: WeeChat 2.9)
[06:18:58] *** Joins: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net)
[06:18:59] *** Quits: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net) (Excess Flood)
[06:19:43] *** Joins: mattf (~matheus@179-189-87-110.goldnettelecom.com.br)
[06:19:54] <mattf> what is this qt thing called when you hold alt + a letter of the button and it clicks it
[06:20:21] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[06:20:29] *** Joins: waynew (~wayne@user/waynew)
[06:20:53] <Auctus> i have a couple processes that want to share info, in the past i've used redis, works well, for this application i dont need any kind of persistence, but persistence is also okay, wondering if there's any clearly better idea than redis or if it'd all work out about the same
[06:21:20] <Auctus> could use sqlite, seems a little odd to use that for message passing or variable sharing or whatever, would probably also work fine
[06:21:21] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[06:21:38] *** Joins: waynew (~wayne@user/waynew)
[06:22:19] <KirkMcDonald> mattf: Ampersand shortcuts?
[06:22:37] <mattf> yes i think thats it
[06:23:05] *** Joins: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net)
[06:23:07] *** Quits: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net) (Excess Flood)
[06:23:22] <mattf> i forgot it was an &
[06:23:25] <mattf> haha
[06:23:42] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:24:24] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[06:26:18] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 240 seconds)
[06:26:22] *** pizza is now known as pizzaiolo
[06:26:23] *** Joins: adelfino_ (~adelfino@2800:21c1:c400:f6c:f8d7:34f7:2448:e258)
[06:26:28] <adelfino_> Hi! If you need to use the values of a dict as keys to the actual keys, is there anything else cleaner/more used than: dict(zip(d.values(), d)) ?
[06:27:14] <KirkMcDonald> adelfino_: {v: k for k, v in d.items()}
[06:27:22] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[06:27:48] *** Joins: chaosite (~chaosite@user/chaosite)
[06:27:50] <adelfino_> KirkMcDonald: yes, agreed, didn't think about that :P
[06:27:56] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:27:56] *** Joins: phax (~phax@207.229.144.190)
[06:30:32] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[06:30:38] *** Joins: cheater (~Username@user/cheater)
[06:31:10] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[06:31:29] *** Quits: viktorivan (~ivan@187.223.237.71) (Remote host closed the connection)
[06:33:04] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[06:34:23] *** Parts: mattf (~matheus@179-189-87-110.goldnettelecom.com.br) ()
[06:34:36] *** adelfino_ is now known as adelfino
[06:35:42] *** Joins: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net)
[06:35:45] *** Quits: ctrypoph (~ctrypoph@99-51-11-77.lightspeed.brhmmi.sbcglobal.net) (Excess Flood)
[06:36:21] *** Joins: ctrypoph (~ctrypoph@2600:1702:3000:9090:6d7f:1c9d:1aea:24aa)
[06:36:50] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[06:37:11] *** Joins: ctrypoph_ (~ctrypoph@2607:fb90:a90a:4936:eab7:9d3a:a6b0:b6e4)
[06:37:15] *** Quits: ctrypoph_ (~ctrypoph@2607:fb90:a90a:4936:eab7:9d3a:a6b0:b6e4) (Client Quit)
[06:38:07] *** Quits: adelfino (~adelfino@2800:21c1:c400:f6c:f8d7:34f7:2448:e258) (Quit: Leaving)
[06:38:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[06:38:47] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[06:38:47] *** Quits: y2o (~y2o@pc-128-133-45-190.cm.vtr.net) (Ping timeout: 256 seconds)
[06:38:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:40:18] *** Quits: ctrypoph (~ctrypoph@2600:1702:3000:9090:6d7f:1c9d:1aea:24aa) (Ping timeout: 240 seconds)
[06:40:29] *** Quits: Laibsch (~leggewie@dynamic-093-133-112-192.93.133.pool.telefonica.de) (Ping timeout: 256 seconds)
[06:41:56] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[06:42:29] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[06:43:37] *** Joins: chaosite (~chaosite@user/chaosite)
[06:45:06] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 272 seconds)
[06:45:35] *** Quits: noobly (~user@50.38.64.32) (Remote host closed the connection)
[06:46:31] *** Quits: bigRoo (~user@131.236.54.84) (Remote host closed the connection)
[06:46:51] *** Joins: gggp (~textual@60.10.23.171)
[06:48:03] <AhmedAmerican> Folka, do you recommend a free SMTP service to send 3 emails daily ?
[06:48:25] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[06:48:31] <altendky> i think mailgun and sendgrid have free options?  maybe there was another...
[06:48:54] *** Quits: pagnol (~user@014198154145.ctinets.com) (Ping timeout: 272 seconds)
[06:49:31] <AhmedAmerican> @altendky Thank you.
[06:49:31] *** Quits: akk (~akk@174-28-112-132.albq.qwest.net) (Quit: +++)
[06:50:27] <Wulf> AhmedAmerican: perhaps you can send them directly to the destination without going through a service.
[06:51:49] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[06:54:43] *** Parts: firepup (~firepup@d108-172-166-200.bchsia.telus.net) (Leaving)
[06:58:07] <AhmedAmerican> @Wulf you meant to use an Email SMTP directly ?
[06:59:11] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:59:33] *** Joins: chaosite (~chaosite@user/chaosite)
[06:59:45] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[06:59:54] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[07:00:11] *** FinnElija is now known as Guest7219
[07:00:11] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:00:12] *** Quits: Guest7219 (~finn_elij@user/finn-elija/x-0085643) (Killed (sodium.libera.chat (Nickname regained by services)))
[07:00:12] *** finn_elija is now known as FinnElija
[07:01:54] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[07:04:27] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 258 seconds)
[07:04:33] *** Quits: trace987 (~trace@ip5b429953.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[07:04:57] *** Joins: audiocat (~audio@2603-8081-1800-eb5b-cccb-4438-d33e-3efb.res6.spectrum.com)
[07:06:35] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[07:07:19] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-c9ae-7931-d4d7-9809.res6.spectrum.com) (Ping timeout: 246 seconds)
[07:07:26] *** Quits: billoday (~bill@cpe-104-228-202-125.maine.res.rr.com) (Quit: WeeChat 3.1)
[07:07:55] *** Joins: PyCharm (~PyCharm@user/pycharm)
[07:09:49] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-680d-caa2-87f4-da3a.res6.spectrum.com)
[07:10:54] *** Quits: phax (~phax@207.229.144.190) (Changing host)
[07:10:54] *** Joins: phax (~phax@user/phax)
[07:11:39] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[07:11:48] *** Quits: phax (~phax@user/phax) (Quit: Leaving)
[07:13:22] *** Joins: bilegeek (~bilegeek@11.sub-174-208-196.myvzw.com)
[07:13:31] *** Joins: phax (~phax@user/phax)
[07:15:17] *** Joins: chaosite (~chaosite@user/chaosite)
[07:15:28] *** Joins: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net)
[07:15:37] *** Quits: jazzy (~jaziz@2600:380:4542:186:7559:22d0:b16b:3c20) (Ping timeout: 256 seconds)
[07:16:32] *** Joins: djapo (~archangel@user/djapo)
[07:16:40] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 252 seconds)
[07:18:09] <Wulf> AhmedAmerican: yep. Connect to the target smtp server directly.
[07:18:27] <Wulf> some spam filters prevent this though.
[07:19:00] *** Joins: jazzy (~jaziz@2600:380:4542:186:d4b:fa38:d4e3:e7e5)
[07:20:08] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 265 seconds)
[07:20:38] *** Quits: Nact (~l@host-85-27-122-59.dynamic.voo.be) (Quit: Konversation terminated!)
[07:21:32] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[07:22:00] *** Joins: chaosite (~chaosite@user/chaosite)
[07:22:07] <death916> MrFantastik is that a reference from the dude on the DOOM song
[07:22:07] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 268 seconds)
[07:22:39] *** Joins: marmalade (~marmalade@cpe-107-184-34-78.socal.res.rr.com)
[07:22:40] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[07:23:11] *** Joins: waynew (~wayne@user/waynew)
[07:23:25] *** Quits: PyCharm (~PyCharm@user/pycharm) (Quit: Leaving)
[07:26:57] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[07:27:35] *** Quits: gggp (~textual@60.10.23.171) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:27:46] *** Quits: paravida (~paravida@user/paravida) (Remote host closed the connection)
[07:28:26] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[07:31:03] *** Joins: gutt (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net)
[07:31:10] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[07:31:58] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[07:32:13] *** Quits: IceMichael (~IceMichae@dynamic-046-114-152-238.46.114.pool.telefonica.de) (Ping timeout: 265 seconds)
[07:32:30] *** Quits: candyman1 (~candyman@user/candyman) (Quit: No Ping reply in 180 seconds.)
[07:32:33] *** Quits: bilegeek (~bilegeek@11.sub-174-208-196.myvzw.com) (Read error: Connection reset by peer)
[07:33:59] *** Joins: bilegeek (~bilegeek@11.sub-174-208-196.myvzw.com)
[07:34:04] *** Joins: candyman1 (~candyman@user/candyman)
[07:35:08] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[07:35:14] <AhmedAmerican> `httpx` auth argument is not there anymore ? `raise TypeError(f'Invalid "auth" argument: {auth!r}')`
[07:35:31] <AhmedAmerican> trying to apply mailgun `api` there https://documentation.mailgun.com/en/latest/quickstart-sending.html#send-via-api
[07:36:16] *** Joins: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net)
[07:37:25] *** Quits: kujo (~kujo@188.166.12.52) (Ping timeout: 258 seconds)
[07:37:52] *** Joins: kujo (~kujo@188.166.12.52)
[07:41:51] <AhmedAmerican> @graingert ^
[07:42:29] *** Joins: pnoud (~pnoud@user/pnoud)
[07:46:18] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[07:46:20] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[07:46:20] *** Joins: zeden (~zeden@user/zeden)
[07:47:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[07:47:41] *** Joins: mnx (mnx@user/mnx)
[07:48:37] <Jonno_FTW> AhmedAmerican: there's no need to use an @ in irc
[07:49:03] <AhmedAmerican> Jonno_FTW: got it. :) thanks
[07:49:59] *** pizzaiolo is now known as pizza
[07:51:07] *** candyman1 is now known as candyman
[07:51:54] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[07:52:15] *** Quits: candyman (~candyman@user/candyman) (Quit: candyman)
[07:53:00] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 265 seconds)
[07:53:29] *** Joins: candyman (~candyman@user/candyman)
[07:56:05] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[07:56:25] *** Joins: r3m (~launch@user/r3m)
[07:57:06] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[07:58:04] *** Joins: digital-carver (~DCarver@49.205.154.191)
[07:58:47] *** Joins: gfvante (~northerns@187.107.158.146)
[08:00:14] *** Quits: gfvante (~northerns@187.107.158.146) (Client Quit)
[08:00:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[08:00:38] *** Joins: wyclif (~wyclif@user/wyclif)
[08:00:48] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[08:01:04] *** Joins: marduk (~marduk@216.243.54.166)
[08:01:30] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[08:01:54] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[08:01:56] *** Joins: northernsage (~northerns@187.107.158.146)
[08:03:13] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[08:04:27] *** Joins: decartes (uid240036@id-240036.brockwell.irccloud.com)
[08:05:00] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[08:06:48] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[08:07:03] *** Quits: northernsage (~northerns@187.107.158.146) (Quit: leaving)
[08:09:57] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[08:10:58] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:11:45] *** Joins: semanticz0 (~semanticz@202.164.136.255)
[08:11:55] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[08:12:12] *** Lord_of_Life_ is now known as Lord_of_Life
[08:15:16] *** Joins: pnoud (~pnoud@user/pnoud)
[08:16:05] *** Joins: Midnite (~human@user/midnightlantern)
[08:17:17] <Midnite> I don't know if this is the best channel for it, but I'm new to designing efficient algorthms in Python, coming from C as my first language. Still fairly new to programming in general. ...
[08:17:39] <Midnite> ... In Python, there's so much that goes on under the hood that I can't be as sure which is the most efficient way to do something
[08:18:26] *** Quits: death916 (~death916@user/death916) (Ping timeout: 258 seconds)
[08:18:33] <Midnite> ... should I just be reading the docs for the built-in functions and whatnot I'm using then? Does that explain how they work? Or just how to use them? (My impression so far has been it's the latter).
[08:18:43] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[08:21:17] <tims> Midnite: They do sometimes, many builtins are already very optomised.
[08:22:10] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[08:22:16] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[08:22:54] <Wulf> Midnite: you can expect python code to be a lot slower than C code. But usually it's fast enough.
[08:22:58] *** Joins: rememberYou (~someone@user/rememberyou)
[08:23:01] <tims> Midnite: worth taking a look at talks by Raymond Hettinger, does some great deap dives and talks about optomisation.
[08:23:06] <Wulf> Midnite: you still need propert algorithms of course
[08:23:10] *** Joins: northernsage (~northerns@187.107.158.146)
[08:24:02] <Midnite> tims: cool, thanks for answering. I'll check out his talks sometime
[08:24:37] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:b1d1:7f91:d3d7:a8d8) (Quit: Leaving)
[08:26:12] <Midnite> what's the best way to accurately time how long it takes a function or program to run in Python?
[08:26:19] <tims> Midnite: timeit
[08:26:19] <Wulf> timeit?
[08:26:20] *** spacecadet is now known as fluiD
[08:26:48] <Midnite> this looks good
[08:27:04] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[08:27:33] <Midnite> is Python Cookbook worth buying?
[08:27:34] <tims> Midnite: there is also profile for doing more find grained profiling (although it does slow things down somewhat)
[08:29:13] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[08:29:30] *** Quits: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net) (Remote host closed the connection)
[08:29:33] *** Quits: cjb (~cjb@user/cjb) ()
[08:31:00] <tims> Midnite: I learned python via the Python Cookbook, depends how you learn. It worked for me
[08:32:08] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 272 seconds)
[08:32:09] <Wulf> Midnite: it's from 2013? Sounds outdated.
[08:33:19] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:34:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:34:15] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[08:34:15] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[08:35:26] *** Joins: northernsage (~northerns@187.107.158.146)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:07] <tims> The 2013 edition was targeted at python 3.3, will give you good coverage of basic things, but won't cover async, f-strings etc.
[08:36:14] <Midnite> would the Python tutorial be a similar kind of book?
[08:36:40] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:19] <Wulf> probably no type hints either.
[08:42:19] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[08:42:43] *** Joins: cheater (~Username@user/cheater)
[08:43:53] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[08:44:09] *** Joins: northernsage (~northerns@187.107.158.146)
[08:44:35] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 256 seconds)
[08:45:12] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[08:45:21] *** Quits: zerosignal (~zerosigna@2607:fea8:5460:2600:9d4c:40bc:f302:8892) (Quit: Leaving)
[08:49:04] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[08:50:16] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[08:52:48] *** Quits: phax (~phax@user/phax) (Remote host closed the connection)
[08:58:33] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[08:58:39] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[08:59:45] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:00:37] *** Joins: bigRoo (~user@131.236.54.84)
[09:02:06] *** Quits: dambuster (~dambuster@185.193.170.225) (Remote host closed the connection)
[09:02:48] *** Joins: dambuster (~dambuster@185.193.170.225)
[09:03:24] *** Quits: marmalade (~marmalade@cpe-107-184-34-78.socal.res.rr.com) (Quit: marmalade)
[09:06:03] <Midnite> how come string[i, i + 1] is giving me a TypeError: string indicies must be integers?
[09:06:16] <Midnite> i is 0 the first time this statement is executed
[09:06:18] <Midnite> I checked
[09:07:12] <tims> Midnite: slicing? you need a : instead of a , eg string[i:i+1]
[09:07:43] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Quit: MrFantastik)
[09:07:47] <tims> Although that is equivilent to just `string[i]`
[09:07:51] *** Joins: gggp (~textual@60.10.23.171)
[09:08:02] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[09:08:18] *** Quits: bilegeek (~bilegeek@11.sub-174-208-196.myvzw.com) (Quit: Leaving)
[09:08:21] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[09:08:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[09:09:54] <Midnite> right. thanks. I'm tired and drunk and trying to code... sober me would've known that
[09:10:17] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[09:12:40] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 272 seconds)
[09:13:18] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[09:13:42] *** Joins: P1RATEZ (piratez@user/p1ratez)
[09:14:07] *** Quits: Midnite (~human@user/midnightlantern) (Quit: Midnite)
[09:16:19] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:16:51] *** Joins: cjb (~cjb@user/cjb)
[09:18:44] <philipp64|work> Hi. I’ve got the following module (well, here’s the top part of it)… https://pastebin.com/sRAMF1eu but if I create an instance of Creds() and then call creds.secure() I get the message: TypeError: 'bool' object is not callable
[09:18:52] <philipp64|work> Anyone have an idea why?
[09:19:09] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 256 seconds)
[09:20:53] <habnabit_> philipp64|work, what did you expect it to do?
[09:21:14] <philipp64|work> It’s a pretty trivial function… 3 lines… 2 lines if you don’t count the decorator…
[09:21:25] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 256 seconds)
[09:21:28] <habnabit_> philipp64|work, @property means it's called _without_ the ()
[09:21:35] <habnabit_> philipp64|work, so you're returning a bool and then calling it
[09:21:59] *** Quits: candyman (~candyman@user/candyman) (Ping timeout: 256 seconds)
[09:22:13] <habnabit_> philipp64|work, your properties here are useless anyway.. they don't do anything, so you can delete all of them
[09:23:18] *** Quits: jesster1234 (~jessica@static.172.234.251.148.clients.your-server.de) (Remote host closed the connection)
[09:23:34] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--300.ip6.aussiebb.net) (Quit: Quitting)
[09:24:14] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[09:24:15] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[09:24:24] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[09:24:27] *** Joins: northernsage (~northerns@187.107.158.146)
[09:25:31] *** Quits: P1RATEZ (piratez@user/p1ratez) ()
[09:27:18] <philipp64|work> so how do I access the members without direct access, i.e. “creds._secure” instead?
[09:29:30] *** Joins: veegee_ (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[09:29:35] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net)
[09:29:54] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:30:03] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[09:30:13] <tims> philipp64|work: Python has no concept of private methods, using a _ to make something "private" is a convention only
[09:30:26] *** Joins: candyman (~candyman@user/candyman)
[09:30:36] *** Joins: stranac (~stranac@195.29.239.126)
[09:31:09] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: Connection reset by peer)
[09:31:24] *** Quits: ttys000 (~ttys000@user/ttys000) (Quit: Textual IRC Client: www.textualapp.com)
[09:31:36] <philipp64|work> tims: Okay, guess I’m used to using getter and setter methods.
[09:31:52] <tims> philipp64|work: You could replace that entire class with a namedtuple
[09:32:03] <tims> (although you then lose the ability to set)
[09:33:02] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Ping timeout: 250 seconds)
[09:33:12] <philipp64|work> I might make ‘secure’ have different logic, like “return not _bundle is None”
[09:34:26] <tims> philipp64|work: Generally use a property if you need to do some simple logic (like what you have suggested)
[09:36:33] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:36:44] <tims> There are no hard and fast rules, but convention is properties being read shouldn't have side effects, or perform a lot of computation. Setters are sometimes used if you need to apply a guard expression, but are not that common.
[09:39:15] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[09:41:30] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[09:41:42] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[09:42:01] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[09:43:32] *** Joins: Vonter (~Vonter@user/vonter)
[09:44:57] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[09:45:21] *** Joins: northernsage (~northerns@187.107.158.146)
[09:46:24] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net) (Quit: Quitting)
[09:47:09] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:47:21] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net)
[09:51:42] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[09:52:01] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[09:52:26] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[09:53:06] <NeilRG> If I have a function (scipy.stats.random_covariance) that generates a random symmetric positive semidefinite matrix, how can I use that to generate a random Hermitian matrix?
[09:54:14] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[09:54:18] *** Quits: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[09:54:46] *** Quits: gggp (~textual@60.10.23.171) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:57:16] *** Quits: ccldarjun (~arjun@c-67-160-245-135.hsd1.ca.comcast.net) (Quit: ZNC 1.9.x-git-130-68864541 - https://znc.in)
[09:57:23] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.1)
[09:58:22] *** Joins: Vonter (~Vonter@user/vonter)
[09:59:12] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[09:59:42] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[10:00:01] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[10:01:04] *** Joins: nvrhome (~Bop@user/nvrhome)
[10:01:11] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Quit: Leaving)
[10:03:02] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[10:03:18] *** Joins: northernsage (~northerns@187.107.158.146)
[10:07:42] *** Joins: crackerjack (crackerjac@pear.bnc4free.com)
[10:08:25] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[10:10:01] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Read error: Connection reset by peer)
[10:10:26] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:11:54] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Ping timeout: 240 seconds)
[10:13:16] *** Joins: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[10:13:53] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[10:14:04] *** Joins: greedom (~greedom@2001:16b8:2ee4:8400:b4fd:5a5d:cc74:379f)
[10:15:22] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[10:16:39] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[10:16:39] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[10:17:06] *** Joins: northernsage (~northerns@187.107.158.146)
[10:17:08] *** Joins: ntdll (~ntdll@user/ntdll)
[10:19:26] <ApostleInTriumph> Hello. Can anyone here please help me with a pytorch issue? I'm trying to train a model on multiGPU using nn.DataParallel and the program gets stuck. (in the sense I can't even ctrl+c to stop it). My system has 3x A100 GPUs. However, the same code works on multi-GPU using nn.DataParallel on a V100 GPU. How can I debug here what's going wrong?
[10:19:56] *** Joins: sazawal (~sazawal@2409:4043:510:d63:4002:ac9b:e4e8:b95e)
[10:20:40] *** Quits: cjb (~cjb@user/cjb) ()
[10:21:46] <sazawal> Hi all. I want to decorate a function inside a class, but also want to use it undecorated. The decoration works well, but can't figure out how to strip the decorator. Here is my code, https://bpa.st/L42A
[10:23:17] *** Joins: matsaman (~matsaman@user/matsaman)
[10:23:17] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[10:23:24] *** Joins: yaalon (~yaalon@189.202.78.228.cable.dyn.cableonline.com.mx)
[10:23:40] *** Quits: candyman (~candyman@user/candyman) (Ping timeout: 252 seconds)
[10:23:50] *** Joins: northernsage (~northerns@187.107.158.146)
[10:25:34] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 268 seconds)
[10:25:59] *** Joins: pnoud (~pnoud@user/pnoud)
[10:26:33] *** Joins: sebastianos (~sebastian@user/sebastianos)
[10:28:00] *** Quits: Avaris (~Avaris@avar.is) (Ping timeout: 258 seconds)
[10:30:02] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Read error: No route to host)
[10:30:02] *** Quits: reset (~reset@user/reset) (Quit: reset)
[10:30:07] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[10:30:39] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:30:42] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[10:30:45] *** Joins: chaosite (~chaosite@user/chaosite)
[10:33:28] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 246 seconds)
[10:33:35] *** Joins: Guddu (~Guddu@117.222.83.107)
[10:33:45] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 258 seconds)
[10:35:13] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 246 seconds)
[10:35:13] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[10:35:36] *** Joins: northernsage (~northerns@187.107.158.146)
[10:36:08] *** Joins: pnoud (~pnoud@user/pnoud)
[10:36:32] <sazawal> Oops
[10:36:58] *** Joins: sebastianos (~sebastian@user/sebastianos)
[10:37:33] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[10:38:52] <sazawal> It is working. Another question, can someone tell me why do I have to use 'self' as the argument in line 17?
[10:40:27] *** o is now known as niko
[10:42:27] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 256 seconds)
[10:43:06] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 240 seconds)
[10:43:17] *** Joins: mexen (uid495612@user/mexen)
[10:43:43] *** Quits: yaalon (~yaalon@189.202.78.228.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[10:43:48] *** Quits: nvrhome (~Bop@user/nvrhome) (Quit: Leaving)
[10:44:00] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[10:44:09] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[10:44:41] *** Quits: dustiestgolf (~anotherus@153.90.200.104) (Read error: Connection reset by peer)
[10:46:54] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:30] *** Joins: seednode (~seednode@user/seednode)
[10:48:24] *** Joins: HaMsTeRs (~mx@14-0-158-085.static.pccw-hkt.com)
[10:49:39] *** Quits: yemel (~yemel@user/yemel) (Quit: Goodbye!)
[10:50:42] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[10:51:03] <matsaman> sazawal: "Python decided to do methods in a way that makes the instance to which the method belongs be passed automatically, but not received automatically: the first parameter of methods is the instance the method is called on. That makes methods entirely the same as functions, and leaves the actual name to use up to you (although self is the convention, and people will generally frown at you when you
[10:51:09] <matsaman> use something else.) self is not special to the code, it's just another object." -- https://stackoverflow.com/questions/2709821/what-is-the-purpose-of-the-word-self
[10:51:25] *** Quits: greedom (~greedom@2001:16b8:2ee4:8400:b4fd:5a5d:cc74:379f) (Remote host closed the connection)
[10:52:06] *** Joins: rendar (~rendar@user/rendar)
[10:52:16] *** Quits: bdeferme (~bdeferme@i.ctrl86.com) (Ping timeout: 252 seconds)
[10:54:02] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[10:54:19] *** Joins: chaosite (~chaosite@user/chaosite)
[10:54:36] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[10:54:58] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[10:55:17] *** Joins: gusto (~Augustus@109.255.100.54)
[10:55:35] <sazawal> matsaman, Well, I get that. I am just not sure why the 'self' is not by itself sent as an argument to a1_copy.__wrapped__
[10:58:00] *** Joins: yemel (~yemel@user/yemel)
[10:58:01] *** Joins: bdeferme (~bdeferme@i.ctrl86.com)
[10:58:53] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[10:58:54] <matsaman> might have to pastebin the code again
[10:58:57] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[10:59:25] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[11:00:20] *** Quits: stranac (~stranac@195.29.239.126) (Ping timeout: 252 seconds)
[11:01:06] *** Joins: LemurP (~lemurp@109.74.190.250)
[11:01:24] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:02:43] *** Joins: abhisek (~abhisek@129.213.50.150)
[11:04:34] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:04:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:04:53] *** Joins: stranac (~stranac@195.29.239.126)
[11:05:39] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[11:05:40] <tims> sazawal: When a function is bound to an instance becoming a method the instance is passed as self, essentially what you are doing on line 17 is calling a1_copy with 4 arguments.
[11:05:52] *** Joins: mrwick (~mrwick@user/mrwick)
[11:06:52] <tims> sazawal: sorry the __wrapped__ entry will be unbound (eg just a function) and hence you need to provide self.
[11:08:55] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[11:09:01] *** Joins: kosh (~kosh@user/kosh)
[11:09:03] *** Quits: LiftLeft (~LiftLeft@154.21.114.30) (Ping timeout: 268 seconds)
[11:09:49] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[11:09:50] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[11:10:13] <tims> sazawal: like matsaman mentioned, functions become methods when they are bound to an class instance. However because __wrapped__ is a property of the decorator not of A it is not converted into an instance.
[11:10:40] <sazawal> tims, I guess it is unbound because the decorator does not belong to the instance of class A. What if I move the decorator inside the class? What would be a better practice? I hope I am doing it the right what what I am doing.
[11:11:02] <sazawal> I see, yeah
[11:12:11] <tims> It's similar to how you can call functions directly on a class type eg A.a1_copy in which you need to provide the self also as there isn't an instance
[11:13:26] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[11:13:47] *** Joins: mickey (~user@user/mickey)
[11:15:15] *** Joins: rubberd0g (~kha0s@p5dc58f39.dip0.t-ipconnect.de)
[11:15:21] <sazawal> tims, I see. Okay let me look at it in a different way. I created an instance 'a' of class 'A'. Now suppose I changed an attribute of 'a'. Would that change be available if I do self.a1_copy.__wrapped__(self,1,2)?
[11:15:32] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[11:16:14] <sazawal> I guess it will be because I am passing the 'self' which must be 'a' internally. Hmm
[11:16:49] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[11:16:49] *** Quits: km (~km@static.55.93.181.135.clients.your-server.de) (Quit: Leaving)
[11:16:52] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[11:17:03] *** Joins: iflema (~ian@user/iflema)
[11:17:13] *** Quits: codl (~codl@user/codl) (Read error: Connection reset by peer)
[11:18:00] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:18:52] *** Joins: codl (~codl@user/codl)
[11:18:56] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:18:56] <northernsage> just to complement what has already been said: you can make your decorator bind like normal functions by implementing the descriptor protocol yourself. This is discussed in more detail here https://stackoverflow.com/questions/2365701/decorating-python-class-methods-how-do-i-pass-the-instance-to-the-decorator
[11:19:04] *** Quits: iflema (~ian@user/iflema) (Client Quit)
[11:20:46] <tims> Although use with care! Nobody wants to debug through layers of decorators and descriptors.
[11:21:12] <northernsage> ^^^yep
[11:22:24] <sazawal> northernsage, tims Lol, yeah, I am already spinning
[11:22:26] *** Joins: iflema (~ian@user/iflema)
[11:22:34] *** Joins: clawh (~clawh@185.244.214.60)
[11:22:41] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[11:23:33] *** Joins: okamis (~okamis@90-229-141-188-no92.tbcn.telia.com)
[11:24:14] <BrenBarn> yeah
[11:25:31] *** Joins: palasso (~palasso@user/palasso)
[11:26:00] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[11:26:30] *** Joins: chele (~chele@user/chele)
[11:28:04] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 246 seconds)
[11:28:34] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 258 seconds)
[11:29:17] *** Quits: northernsage (~northerns@187.107.158.146) (Read error: Connection reset by peer)
[11:33:52] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[11:34:57] *** Joins: manti7 (~manti7@176.10.104.94)
[11:37:15] *** Joins: srilyk (~wayne@user/waynew)
[11:39:07] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[11:39:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[11:39:40] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:44:35] *** Joins: kostkon (~androirc@ob21aa.static.otenet.gr)
[11:45:34] *** Quits: doko (~doko@2a02:8106:1a:7600:11f2:110c:e9cf:cc2c) (Ping timeout: 246 seconds)
[11:47:15] *** Joins: sunyibo (~dorsch@2a04:52c0:101:443::)
[11:48:18] *** Quits: someguy1233 (~someguy@user/someguy123) (Read error: Connection reset by peer)
[11:48:48] *** Joins: someguy123 (~someguy@user/someguy123)
[11:49:48] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[11:51:46] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[11:53:12] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[11:54:48] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[11:57:11] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[11:57:24] *** Joins: waynew (~wayne@user/waynew)
[11:58:41] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:00:39] *** Joins: Avaris (~Avaris@avar.is)
[12:00:42] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 240 seconds)
[12:01:28] *** Joins: sean (~sean@user/se-sm-ca)
[12:01:59] *** Joins: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com)
[12:03:06] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 240 seconds)
[12:04:28] *** Quits: TheRAt (~TheRAt@user/therat) (Ping timeout: 246 seconds)
[12:04:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:06:27] *** Quits: bigRoo (~user@131.236.54.84) (Remote host closed the connection)
[12:06:50] *** Joins: TheRAt (~TheRAt@user/therat)
[12:06:57] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:9cb2:4c4e:b36a:b1e5)
[12:07:26] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[12:10:38] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 272 seconds)
[12:11:25] *** Quits: LemurP (~lemurp@109.74.190.250) (Ping timeout: 256 seconds)
[12:13:01] *** Joins: akaWolf (~akaWolf@akawolf.org)
[12:13:02] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[12:13:18] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[12:13:20] *** Joins: shad (~shad@user/shad)
[12:13:20] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[12:14:14] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:9cb2:4c4e:b36a:b1e5) (Ping timeout: 250 seconds)
[12:14:15] <merijn> I have a 3rd party pip package that calls a C compiler during its install, but it's not finding the one I want it to find. Any clue how to ensure the environment inside pip has the compilers I want visible?
[12:15:29] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[12:16:24] <AhmedAmerican> `httpx` auth argument is not there anymore ? `raise TypeError(f'Invalid "auth" argument: {auth!r}')`
[12:16:28] <AhmedAmerican> trying to apply mailgun `api` there https://documentation.mailgun.com/en/latest/quickstart-sending.html#send-via-api
[12:17:30] *** Quits: Snyp (~rksht@49.207.193.103) (Ping timeout: 240 seconds)
[12:18:07] *** Joins: upsala (~zcb@185.213.155.160)
[12:18:23] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[12:18:40] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[12:18:49] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:9cb2:4c4e:b36a:b1e5)
[12:20:43] *** Joins: pnoud (~pnoud@user/pnoud)
[12:20:46] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 272 seconds)
[12:23:59] *** Joins: mokulus (~mokulus@user/mokulus)
[12:25:04] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:9cb2:4c4e:b36a:b1e5) (Ping timeout: 250 seconds)
[12:25:21] *** Joins: jheblu (~user@116.68.96.91)
[12:25:29] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[12:25:36] *** Quits: lumgwada (~lumgwada@101.181.126.104) (Ping timeout: 272 seconds)
[12:25:51] *** Quits: digital-carver (~DCarver@49.205.154.191) (Quit: Going gently into that good night)
[12:26:08] <NeilRG> is it easy to remove one line from a stack trace in an assertion error?
[12:26:28] *** Joins: Auron (Auron956@user/auron)
[12:26:46] <NeilRG> actually, how do I glue a traceback from one exception onto another?
[12:27:03] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[12:27:12] <deniska> AhmedAmerican: can you show the python code?
[12:28:20] <Jonno_FTW> NeilRG: you can use the traceback library, you can choose how many lines are shown when printing a traceback
[12:28:37] <NeilRG> Jonno_FTW, yes, so I just found the with_traceback method
[12:28:41] <NeilRG> on exceptions
[12:28:52] <NeilRG> but my quesiton is how can I easily manipulate these
[12:28:58] <AhmedAmerican> deniska: https://bpa.st/XC7Q
[12:29:01] *** Quits: Gerula (~Gerula@user/gerula) (Read error: Connection reset by peer)
[12:29:02] <Jonno_FTW> https://docs.python.org/3/library/traceback.html
[12:29:12] <Jonno_FTW> print_tb() has a limit parameter
[12:29:23] <tims> merijn: set the CC environment variable
[12:29:50] <NeilRG> Jonno_FTW, I understand print_tb, but I don't want to print them.  I want to edit them
[12:29:56] <deniska> AhmedAmerican: you probably want auth=('api', 'key')
[12:30:05] <deniska> AhmedAmerican: tuple, not a dict
[12:30:14] <Jonno_FTW> you can always use format_exception()
[12:30:16] *** Joins: Gerula (~Gerula@user/gerula)
[12:30:26] *** Quits: jheblu (~user@116.68.96.91) (Ping timeout: 265 seconds)
[12:30:41] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:9cb2:4c4e:b36a:b1e5)
[12:30:50] <AhmedAmerican> deniska: ops my mistake. thanks a lot
[12:31:29] <NeilRG> Jonno_FTW, sorry, this isn't what I'm asking
[12:31:32] <NeilRG> let me explain:
[12:32:27] *** Joins: Darkfoe1 (~chuck@drunk.serverfail.party)
[12:32:34] <NeilRG> This is my code: https://github.com/NeilGirdhar/tjax/blob/master/tjax/_src/testing.py#L93
[12:32:35] *** Joins: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs)
[12:32:44] *** Joins: redgloboli (~redglobol@user/redgloboli)
[12:32:51] <NeilRG> When the error is caught, it gives: Traceback (most recent call last):
[12:32:51] <NeilRG>   File "/home/neil/src/efax/tests/test_sampling.py", line 59, in test_maximum_likelihood_estimation
[12:32:51] <NeilRG>     assert_jax_allclose(ml_exp_parameters, exp_parameters, rtol=rtol, atol=atol)
[12:32:51] <NeilRG>   File "/home/neil/.cache/pypoetry/virtualenvs/efax-ZssyUsLU-py3.9/lib/python3.9/site-packages/tjax/_src/testing.py", line 93, in assert_jax_allclose
[12:32:51] <NeilRG>     raise AssertionError(message).with_traceback(exception.__traceback__) from None
[12:32:53] <NeilRG>   File "/home/neil/.cache/pypoetry/virtualenvs/efax-ZssyUsLU-py3.9/lib/python3.9/site-packages/tjax/_src/testing.py", line 82, in assert_jax_allclose
[12:32:56] <NeilRG>     np.testing.assert_allclose(flattened_actual, flattened_desired, rtol=rtol, atol=atol)
[12:32:58] <NeilRG>   File "/home/neil/.cache/pypoetry/virtualenvs/efax-ZssyUsLU-py3.9/lib/python3.9/site-packages/numpy/testing/_private/utils.py", line 1530, in assert_allclose
[12:33:01] <NeilRG>     assert_array_compare(compare, actual, desired, err_msg=str(err_msg),
[12:33:03] <NeilRG>   File "/home/neil/.cache/pypoetry/virtualenvs/efax-ZssyUsLU-py3.9/lib/python3.9/site-packages/numpy/testing/_private/utils.py", line 844, in assert_array_compare
[12:33:06] <NeilRG>     raise AssertionError(msg)
[12:33:07] <The-Compiler> oof
[12:33:08] <NeilRG> (sorry for paste)
[12:33:10] <NeilRG> I would like to eliminate the last 4 lines in the traceback
[12:33:20] <NeilRG> The-Compiler, sorry, I'll use bpaste from now on
[12:33:24] <NeilRG> Jonno_FTW, make sense?
[12:33:50] <The-Compiler> NeilRG: based on the traceback I assume this isn't pytest?
[12:33:52] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-680d-caa2-87f4-da3a.res6.spectrum.com) (Quit: jarthur)
[12:34:08] <NeilRG> The-Compiler, it is pytest, the error is much longer
[12:34:30] <NeilRG> The-Compiler, https://bpa.st/L4RA
[12:34:34] <The-Compiler> NeilRG: You can set a "__tracebackhide__ = True" local in frames you don't want to show up in detail
[12:34:52] *** Joins: Abrax (~Abrax@user/abrax)
[12:34:54] *** Joins: Julian (~tos9@python/site-packages/Julian)
[12:35:14] <The-Compiler> https://docs.pytest.org/en/6.2.x/example/simple.html#writing-well-integrated-assertion-helpers
[12:35:22] <NeilRG> The-Compiler, oh that looks promising,
[12:36:21] <NeilRG> hmm didn't do anything
[12:36:47] <NeilRG> but anyway this would only help in my code, right? numpy.testing doesn't have it in its code
[12:37:01] <The-Compiler> right
[12:37:04] <NeilRG> I wish I could edit the traceback object given by exception.__traceback__
[12:37:13] <The-Compiler> but how are you going to modify the traceback then, if it's coming from pytest?
[12:37:15] <NeilRG> the dream would be for it to support indexing
[12:37:20] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:35] <NeilRG> the traceback object is exception.__traceback__ in my code here: https://github.com/NeilGirdhar/tjax/blob/master/tjax/_src/testing.py#L93
[12:37:44] <NeilRG> I just need to edit it
[12:38:27] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[12:39:41] <NeilRG> maybe if I call tb_next a couple times?
[12:40:05] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:41:13] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[12:41:16] *** Joins: pnoud (~pnoud@user/pnoud)
[12:41:57] *** sean is now known as se-sm-ca
[12:43:17] *** Joins: chaosite (~chaosite@user/chaosite)
[12:43:18] *** Quits: neibo (~neibo@86.127.241.4) (Remote host closed the connection)
[12:45:40] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:19d1:3d77:8320:86c9)
[12:46:23] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[12:47:55] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[12:49:21] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[12:49:32] *** Joins: wattux (~wattux@212.51.23.106)
[12:52:04] *** Joins: aniruddha (~aniruddha@103.242.197.118)
[12:52:25] *** Quits: aniruddha (~aniruddha@103.242.197.118) (Client Quit)
[12:52:49] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:53:43] *** Parts: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) ()
[12:53:51] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[12:54:46] *** Joins: lint_coder (~lint_code@49.37.184.128)
[12:55:53] *** Quits: lint_coder (~lint_code@49.37.184.128) (Client Quit)
[12:56:20] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[12:56:50] *** Joins: Corder_000 (~Coder_000@191.33.88.217)
[12:57:31] *** Quits: qpdb_ (~qpdb@user/qpdb) (Quit: WeeChat 3.1)
[12:57:55] *** Joins: qpdb (~qpdb@user/qpdb)
[12:58:08] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[12:59:07] *** Joins: pnoud (~pnoud@user/pnoud)
[12:59:31] *** Joins: lint_coder (~lint_code@49.37.184.128)
[12:59:39] *** Parts: lint_coder (~lint_code@49.37.184.128) ()
[13:01:17] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 256 seconds)
[13:01:29] *** Joins: neibo (~neibo@86.127.241.4)
[13:02:08] *** Joins: varaindemian (~varaindem@86.124.78.162)
[13:02:49] *** Quits: HaMsTeRs (~mx@14-0-158-085.static.pccw-hkt.com) (Quit: Konversation terminated!)
[13:03:01] <varaindemian> https://pastebin.com/LkeWkhHA shouldn't the last 2 lines produce the same output?
[13:03:03] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:03:48] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:04:28] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[13:04:53] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:05:25] <The-Compiler> varaindemian: . and () are special in regex patterns
[13:05:34] <varaindemian> ah :(
[13:05:41] <varaindemian> can I escape them?
[13:05:48] <The-Compiler> varaindemian: you probably want r'java\.lang\.Runtime\.getRuntime\(\)'
[13:05:54] *** Quits: audiocat (~audio@2603-8081-1800-eb5b-cccb-4438-d33e-3efb.res6.spectrum.com) (Ping timeout: 240 seconds)
[13:06:10] <NeilRG> is there a python pretty formatter for code that can be called at runtime?
[13:06:22] <NeilRG> something like black, but I can call it at runtime?
[13:06:39] <The-Compiler> NeilRG: call at runtime how? Like, a library you feed code in and get formatted code back?
[13:06:52] <NeilRG> The-Compiler, yes.
[13:07:00] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[13:07:27] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 268 seconds)
[13:08:00] <The-Compiler> NeilRG: looks like black can take code on stdin and return it on stdout
[13:08:08] <varaindemian> The-Compiler do I need the r at the beginning?
[13:08:23] <NeilRG> The-Compiler, right, can I import black and call it like a functioN?
[13:08:27] <The-Compiler> varaindemian: yes - it marks it as a raw string, so that the backslashes don't have a special meaning to Python (like \n for a newline)
[13:09:12] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[13:09:28] <The-Compiler> NeilRG: you certainly could import stuff from https://github.com/psf/black/blob/main/src/black/__init__.py and use it, but it's probably not a supported API
[13:09:34] *** Quits: acid (~acid@user/acid) (Ping timeout: 246 seconds)
[13:09:48] <The-Compiler> NeilRG: as in, it's more likely to break/change with new black releases than using it as a subprocess is
[13:09:48] <NeilRG> The-Compiler, ok thanks
[13:10:05] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[13:11:13] <varaindemian> The-Compiler like this https://pastebin.com/pV3mnbei ?
[13:11:20] *** Joins: acid (~acid@user/acid)
[13:11:25] <The-Compiler> varaindemian: looks good to me
[13:12:08] <varaindemian> The-
[13:12:32] <ksk> deniska: thanks for your input (regarding callbacks)
[13:13:10] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:9cb2:4c4e:b36a:b1e5) (Ping timeout: 250 seconds)
[13:13:43] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[13:14:18] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[13:14:53] *** Joins: Kvothe (~weechat@user/elodin)
[13:17:01] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 246 seconds)
[13:17:10] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[13:18:30] *** Quits: cman (~Cody@2603:9000:d104:8465:a4d8:f7ad:8f54:d2e) (Quit: WeeChat 3.2)
[13:19:32] *** Quits: Guddu (~Guddu@117.222.83.107) (Quit: Leaving)
[13:20:33] <varaindemian> The-Compiler can I use this https://pastebin.com/p2fDXGW4 if I wanna split either after the first one or the second one?
[13:23:03] <varaindemian> The-Compiler looks like I can't
[13:23:57] <varaindemian> The-Compiler I want an "OR" "|" there
[13:24:13] <The-Compiler> varaindemian: that'd be part of your regex string, right now you're OR-ing two strings
[13:25:01] <varaindemian> The-Compiler basically I want something like here: `item = re.split('-a|.sh ', item)[0]`
[13:25:06] <The-Compiler> varaindemian: you might want to skim through https://docs.python.org/3/howto/regex.html or https://realpython.com/regex-python/
[13:25:56] <varaindemian> The-Compiler thank you!
[13:26:00] <The-Compiler> varaindemian: You're doing   r'first' | r'second'   (OR-ing two strings) rather than    r'first|second'    (using the | special character as part of your regex pattern)
[13:26:13] <varaindemian> aah
[13:26:20] <varaindemian> so a small adjustment basically
[13:26:44] <varaindemian> The-Compiler thank you so much!
[13:28:30] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:28:56] *** Quits: wattux (~wattux@212.51.23.106) (Quit: Client closed)
[13:29:00] *** Joins: anandprabhu (~anand@94.202.243.198)
[13:30:06] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:30:09] <The-Compiler> varaindemian: so that worked then? Sure thing! :)
[13:30:19] <varaindemian> The-Compiler yea!
[13:30:51] <varaindemian> The-Compiler = re.split(r'java\.lang\.Runtime\.getRuntime\(\)|java\.lang\.Thread\.currentThread\(\)', post_data)[1]
[13:31:43] <The-Compiler> yay :)
[13:31:49] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 265 seconds)
[13:34:30] *** Joins: masber (~masber@dhcp-133-203.cscs.ch)
[13:34:40] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:34:50] *** Joins: frostschutz (~frostschu@2a01:c23:7996:3e00:43c6:de01:9266:99ea)
[13:35:08] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:36:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[13:36:10] *** Quits: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt) (Ping timeout: 252 seconds)
[13:39:01] *** Joins: andrzejv (~andrzejv@78-56-77-187.static.zebra.lt)
[13:39:17] *** Joins: thiras (~thiras@user/thiras)
[13:39:59] *** Joins: gareppa (~gareppa@user/gareppa)
[13:41:04] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:41:20] *** Joins: pnoud (~pnoud@user/pnoud)
[13:41:25] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[13:43:42] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:9cb2:4c4e:b36a:b1e5)
[13:45:29] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:46:36] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[13:46:58] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:47:09] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[13:48:44] *** Joins: wyclif (~wyclif@user/wyclif)
[13:49:25] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:50:09] *** Joins: entuland (~entuland@user/entuland)
[13:50:42] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[13:50:50] *** Joins: kmh (~kmh@p200300df5f069e00e4c314caf78672dd.dip0.t-ipconnect.de)
[13:51:33] *** Joins: cheater (~Username@user/cheater)
[13:52:07] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[13:53:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[13:56:53] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:58:15] *** Joins: MemoriaVetusta (~MemoriaVe@191.101.217.12)
[14:00:20] *** Quits: rubberd0g (~kha0s@p5dc58f39.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[14:01:19] *** Quits: anandprabhu (~anand@94.202.243.198) (Quit: Konversation terminated!)
[14:03:35] *** Joins: wattux (~wattux@212.51.23.106)
[14:04:54] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[14:05:16] *** Joins: Gerula_ (~Gerula@user/gerula)
[14:05:16] *** Gerula is now known as Guest3550
[14:05:16] *** Quits: Guest3550 (~Gerula@user/gerula) (Killed (tin.libera.chat (Nickname regained by services)))
[14:05:16] *** Gerula_ is now known as Gerula
[14:05:26] *** Joins: wyclif (~wyclif@user/wyclif)
[14:08:08] *** Joins: veek (~veek@117.192.18.244)
[14:08:52] *** Joins: Crassus (~Crassus@user/crassus)
[14:08:57] *** Joins: codificat (~pep@66.red-79-154-168.dynamicip.rima-tde.net)
[14:09:38] <p-i-> I find myself time and again bumping into Python's inability to multiline lambdas. It reads poorly, to have to `def on_foo:...; def on_bar:...; f(on_foo, on_bar)`. Because I can't "Begin at the beginning and go on till you come to the end; then stop.". I have to jump around.
[14:10:01] <p-i-> Wouldn't it be nice to be able to inline a function definition?
[14:10:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[14:11:41] <FunkyBob> >>> def foo(a): b = a + 1; return b * a
[14:11:45] <FunkyBob> easy
[14:12:10] <p-i-> Why can't a lambda be extended to support multiline?
[14:12:20] <FunkyBob> because lambda is for a single expression
[14:12:34] <FunkyBob> it doesn't need extending
[14:13:41] <p-i-> Then would it not be desirable to have _something_ to allow an in-place function body?
[14:14:01] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:14:27] <FunkyBob> what's wrong with def?
[14:14:48] <p-i-> I'll pastebin, as the nature of this is multiline.
[14:15:05] <lambda> p-i-: python's significant whitespace would make the syntax for such a construct difficult
[14:15:40] <lambda> also fyi, "multiline" != "multiple statements", which is probably what you want
[14:16:46] *** Quits: computeiro (~Wender@189.37.66.161) (Ping timeout: 246 seconds)
[14:17:04] *** Joins: dvx (~dvx@185.63.97.64)
[14:18:33] <p-i-> https://bpa.st/WBHA
[14:20:03] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[14:20:26] <p-i-> Sorry for hilighting you lambda ;)
[14:20:28] *** Joins: cheater (~Username@user/cheater)
[14:20:56] <kolcon> can you somehow catch all module-specific exceptions?
[14:21:33] <bjs> p-i-: if lambda hasn't turned off their highlights it's their problem :P
[14:21:47] <bjs> p-i-: Python's syntax is annoying. I'm with you and that I'd have preferred a better lambda syntax.
[14:22:08] <The-Compiler> kolcon: often they should inherit from a common base exception, e.g. yourmodule.Error - if they don't and only inherit from Exception, and you can't fix that, then you'll need to list them one by one
[14:22:42] <bjs> p-i-: it's really Python's lack of braces (or some clear block delimiter) that makes this hard :(
[14:22:56] *** Quits: Deknos (~someone@user/menace) (Ping timeout: 250 seconds)
[14:23:21] *** Joins: wyclif (~wyclif@user/wyclif)
[14:23:21] <p-i-> bjs: Have you ever thought of a syntax that would be nice, and implementable?
[14:23:45] <bjs> p-i-: lots of people have,  the core devs never liked any of the proposals :P
[14:23:58] <p-i-> I rather like the idea of a -> operator. I don't see it conflicting with anything.
[14:24:26] <Julian> Nothing was ever proposed that meets those criteria.
[14:24:51] <p-i-> f = (a,b) -> a+b  # for single line
[14:25:41] <Julian> p-i-: Single line is solved already. It's multiline where there's no syntax that's been proposed that'd work.
[14:25:51] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[14:25:51] <Julian> Though probably with the new parser more possibilities are now open.
[14:26:10] *** Quits: ntdll (~ntdll@user/ntdll) (Ping timeout: 272 seconds)
[14:26:22] <p-i-> f = (a,b) ->
[14:26:23] <p-i->     s = sin(a)
[14:26:23] <p-i->     c = cos(b)
[14:26:24] <p-i->     return s+c  # maybe without 'return'
[14:26:44] <p-i-> ^ How about that for multiline?
[14:26:55] <p-i-> There's an issue with commas, I can see
[14:27:12] *** Joins: aw1 (~aw1@203.171.246.149)
[14:27:34] *** Joins: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de)
[14:27:43] <p-i-> Because `return foo,` I think returns foo as a tuple, rather than returning foo and separating the next arg with the ,
[14:28:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[14:28:38] <bjs> p-i-: you really need some brace-like delimiters
[14:28:50] <bjs> but those have historically been a flat "no"
[14:28:54] <bjs> (for Python()
[14:28:59] <p-i-> Or how about allowing braces: send_message(msg, on_response = r -> { print(r) }, on_error = ...)
[14:29:18] <bjs> p-i-: that would probably work, but good luck getting it acceptedf
[14:29:35] <p-i-> The braces would then be in the CONTEXT of the -> operator, which has higher priority so the tree gets split at the -> first
[14:29:37] <bjs> maybe it's more likely today than it was the years previously
[14:29:40] <p-i-> *AST
[14:31:27] *** Quits: zoid (~zoid@user/taxationistheft) (Quit: REBOOT ALL THE THINGS)
[14:31:59] <tims> You can already avoid problems with parentheses
[14:32:09] <p-i-> I will be able to get nothing through on my own. But this channel is a very strong community of senior engineers. The power of the channel might do the trick.
[14:32:35] <Yhg1s> p-i-: how about just using 'def'?
[14:32:45] *** Joins: LemurP (~lemurp@109.74.190.250)
[14:32:58] <p-i-> Sometimes working in a company I've noticed that flagging something achieves nothing, but proposing a (defensible) solution can make the difference.
[14:33:28] <p-i-> Yhg1s: You mean an empty def, without a function name, like `def (a,b,c): return a+b+c ?
[14:33:33] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[14:33:46] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[14:33:53] <tims> p-i-: You can already use parens just like you do with to ensure correct order of evaluation.
[14:34:06] <bjs> p-i-: I think Yhg1s means, "just use a def you dont need multi-line lambdas"
[14:34:08] <p-i-> Problem I see there is:
[14:34:41] <Yhg1s> Yes, I mean "stop trying to invent multi-line lambdas. it's not worth it"
[14:34:42] *** Joins: rhax (~yannick@user/rhax)
[14:34:59] <bjs> Yhg1s: it's clearly a desirable thing
[14:34:59] <Yhg1s> or rather, lambdas that contain expressions.
[14:35:07] <p-i-> def f(a):
[14:35:08] <p-i->     return a,
[14:35:08] <p-i-> type(f(1))
[14:35:14] <p-i-> ... gives tuple
[14:35:15] <tims> p-i-: eg `foo((lambda: 1), (lambda: (1, 2)))` getting a little lispy though
[14:35:29] <Yhg1s> bjs: Sure, it's a thing people desire. It's not a thing people *need*, and it will not be beneficial.
[14:35:45] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[14:35:53] <p-i-> It would benefit me to have cleaner codeflow when dealing with callbacks.
[14:36:27] <Yhg1s> p-i-: it would not actually be cleaner to stuff more into a single expression. Certainly not more *statements* in an expression.
[14:37:39] <p-i-> Currently I have to declare my callback prior. def cb(u):... f(cb)  Which means that cb is in the current scope. And logically it shouldn't be visible. Nothing else is going to use it.
[14:37:55] <p-i-> But the synatax suggests otherwise.
[14:38:41] <tims> Use an _ before the name?
[14:39:00] <p-i-> And as for want-vs-need, I don't _need_ `for` loops. I could use `goto`. But `for` loops sure make things cleaner.
[14:39:06] *** Joins: wyclif (~wyclif@user/wyclif)
[14:39:08] <bjs> p-i-: so you want it for the anonymity of the function?
[14:39:14] <Yhg1s> p-i-: you seem to think variables should be used more than once? That's not a good appraoch to variables.
[14:39:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:39:44] <bjs> I'd be happy with making a `def` expression that _required_ a name
[14:40:05] *** Joins: zoid (~zoid@user/taxationistheft)
[14:40:24] <bjs> nobody wants to see "in <lambda>" in their tracebacks :(
[14:40:40] <p-i-> 1. Want anonymity. Why am I `def my_callback... f(on_callback=my_callback)` .. yuck.  2. scoping. why is my_callback visible after f has been invoked? 3. brain-parse. Why am I declaring a random thing? Ah now I see f and it makes sense.
[14:40:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:41:05] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:41:42] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[14:41:46] <Yhg1s> p-i-: you always get what you want. Names are free. Anonimity doesn't gain you _anything_, it just makes it harder to debug the code. Visibility, same. Why does it matter that the name is usable afterwards? It just makes the code more general, more re-usable, more debuggable, and less special-cased.
[14:42:21] <Yhg1s> p-i-: as for brain-parse, that's a matter of changing how you approach problems depending on the tool you're using to solve it. In Python you solve it one way. In a functional language you solve it another way.
[14:42:31] <p-i-> Yhg1s: Single use is fine, but if I'm using an `on_callback` kwarg anyeay, I'm now saying the same thing twice. It's not Pythonic :/
[14:42:38] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[14:42:43] <Yhg1s> p-i-: that's not what 'pythonic' means :)
[14:43:18] <Yhg1s> p-i-: it is, in fact, very common to do something like that.
[14:43:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[14:44:07] <nedbat> p-i-: many people have wished for more expressiveness in lambdas. there are threads in the Python-Ideas mailing list that explore possibilities.
[14:44:21] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[14:44:36] <p-i-> As for traceback of anon, is that even a problem? Isn't the penultimate line of a traceback on `f(my_callback=<anonfunc>` going to be f callsite?
[14:44:54] <Yhg1s> p-i-: no, it's going to be anonfunc.
[14:45:01] <Yhg1s> oh, penultimate. Yes, and? How do you know which one it is?
[14:45:13] <bjs> no that line probably won't appear in the traceback
[14:45:18] <bjs> it'll appear where the callback actually gets called
[14:45:21] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:45:30] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 240 seconds)
[14:45:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:45:51] <p-i-> The ultimate line should show the line in the anonfunc. The penultimate should show the callsite. no?
[14:46:07] <bjs> p-i-: but `f(my_callback=<anonfunc>)` is not calling the function
[14:46:09] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f)
[14:46:12] <bjs> that's why it's nice for callbacks to have nice names
[14:46:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:46:57] <Yhg1s> p-i-: yes. the callsite doesn't help you in seeing *which anonymous function is called* (when you have more than one, for example).
[14:46:57] <bjs> well `f` may or may not call the callback function immediately
[14:47:13] <bjs> think asynchronous programs where the callbacks can happen later
[14:47:45] <bjs> I think that is the place where this style would benefit the most, so if there was a modern PEP for it I think focusing on examples from callback-heavy APIs would be a good idea
[14:47:46] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[14:47:56] <p-i-> humm yeah... rats. There must be _some_ clean way to manage it tho. surely...
[14:48:19] <p-i-> Yeah, like httpclient.get(url, on_response, on_error)
[14:48:50] <p-i-> As a swathe of Python-dev moves to async-centric paradigm
[14:50:03] <p-i-> On which subject I had a HORRIBLE experience with asyncio. Still nursing the bruises. I spent a week flailing and feeling like the world's greatest chump and then knocked the whole thing out in Trio in an afternoon.
[14:50:05] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[14:50:11] <Yhg1s> p-i-: yes, there is a clean way. It's called 'def' :)
[14:50:23] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247) (Quit: Connection closed)
[14:50:32] <p-i-> Do you guys think we'll ever see Trio in stdlib?
[14:50:43] <Yhg1s> p-i-: no. It's not a good thing for something to be in the stdlib.
[14:50:55] <p-i-> But asyncio is...
[14:51:09] <p-i-> which kinda encourages people to use it.
[14:51:16] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247)
[14:51:25] <p-i-> 'stdlib > 3rdparty' logic
[14:51:32] <bjs> it'a also making it hard for asyncio to evolve into something better
[14:51:37] <Yhg1s> it's incorrect logic. What can we do.
[14:51:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:51:46] <bjs> asyncio made a lot of mistakes early on in its development
[14:51:46] <Yhg1s> (impossible, really.)
[14:52:05] <p-i-> bjs: But that's the problem. Continuous evolution creates cankers.
[14:52:09] <Yhg1s> The benefit of asyncio in the stdlib is just the standardisation of reactor, so you can code that works with any event loop.
[14:52:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:52:25] <Yhg1s> p-i-: and not evolving makes you dead.
[14:52:27] <p-i-> Trio rewrites with 20/20 hindsight and IMO nails it.
[14:52:38] <bjs> with 2020 hindsight more like
[14:52:52] <bjs> the big thing about trio is that next year it can become better
[14:53:19] <bjs> asyncio is slowly improving,  maybe I'm being too unfair
[14:53:41] <p-i-> Yhg1s: But 'quantum leap' is key to biological evolution. BioOrgs are not backwards compatable. And it works nicely! TechOrgs need a major version bump.
[14:54:07] <nedbat> p-i-: libraries outside the stdlib can make quantum leaps.  the stdlib can't.
[14:54:18] <p-i-> It seems the whole problem with asyncio is (IIUC) that it's been nudged many times towards something it was never meant for.
[14:54:56] *** Joins: azazello (~azazello@109.75.158.195)
[14:54:57] <Yhg1s> p-i-: yes! That's why you shouldn't use the stdlib :)
[14:54:59] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[14:55:43] *** Joins: ponadm_ (pony@gateway/vpn/protonvpn/ponadm)
[14:55:50] <Yhg1s> p-i-: no, that's not the case.
[14:56:07] <Yhg1s> p-i-: the problem with asyncio is that it was a fresh design, instead of a proven library.
[14:56:29] *** Joins: wyclif (~wyclif@user/wyclif)
[14:56:29] <p-i-> It is chained by legacy/compat, tho...
[14:56:37] <Yhg1s> it wasn't. it is now.
[14:57:08] *** Joins: tspng (~tspng@80-218-192-223.dclient.hispeed.ch)
[14:57:14] <hogarius> Is pypi becoming "the standard library" for python?
[14:57:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:57:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:57:56] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[14:58:18] <Yhg1s> no, but it is the thing people should use to install the packages they want to use. And upgrade them.
[14:58:34] *** Quits: ray (~ray@user/re) (Quit: WeeChat 3.1)
[14:58:38] <Samian> anyone recommend a bookmarks extension?
[14:58:47] <Samian> I want something color coded and that draws on the minimap
[14:58:54] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:9cb2:4c4e:b36a:b1e5) (Ping timeout: 250 seconds)
[14:59:47] *** Parts: jamesmartinez (~keinbock@37.44.247.165) ()
[15:00:17] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 256 seconds)
[15:00:39] *** Joins: ray (~ray@user/re)
[15:01:00] *** Joins: km (~km@static.55.93.181.135.clients.your-server.de)
[15:01:28] <Yhg1s> Samian: that sounds like it was meant for a different channel.
[15:01:29] <p-i-> The danger I see is that we have lots of dev effort building over asyncio and lots building over Trio. And if you write async code, you'll be using async libs. Which will be trio-flavoured or asyncio-flavoured. Mixing needs an interop/wrapper (thankfully trioasyncio is nice to use). But this bifurcation situ is only going to exacerbate over time unless PowersThatBe lift a finger somewhere.
[15:01:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[15:01:48] <Samian> sorry. /me goes to #vscode
[15:02:16] *** Quits: ndim (hun@moooo.n-dimensional.de) (Ping timeout: 246 seconds)
[15:02:38] <Samian> Yhg1s There isn't an active vscode channel, and most python coders use vscode. I thought it's okay to ask in here.
[15:02:43] <ssbr> p-i-: generally speaking, I've found interop wrappers to be a viable solution. So the powers that be should really only extend as far as making sure that works
[15:02:46] <p-i-> Samian: LMK if you ever find a vscode community that isn't 99% questions. Their gitter is a joke.
[15:02:59] <Samian> gitter?
[15:03:03] <Samian> oh yes gitter
[15:03:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:03:07] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 256 seconds)
[15:03:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:04:04] <Yhg1s> p-i-: the point of having asyncio in the stdlib is to have a common event loop. code written for the asyncio event loop can be used with trio.
[15:04:26] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[15:04:57] <Yhg1s> Samian: I don't think "most Python coders use vscode" is actually true, and I don't think it's true for #python, but regardless: you should at least mention you mean "in vscode" :)
[15:05:26] <ssbr> I use ed, the standard text editor.
[15:06:06] <p-i-> PyCharm is _much_ easier to do debugging & manage venvs.
[15:06:49] * bookworm points at the shell where's it's even easier to manage venvs
[15:06:54] <p-i-> Although I love the VSCode dark colorscheme so much I code in vscode and debug in pycharm.
[15:07:31] <lericson> less is more
[15:07:46] <ssbr> lericson: you can edit code in less?!?
[15:07:46] <p-i-> Also vscode has _really_ good notebook support now, which I'm using all the time now.
[15:07:58] <lericson> ssbr: no, that would make it not less
[15:08:11] <lericson> less takes the stance that every piece of code is finished as-is
[15:08:15] <lericson> truly minimalist editor
[15:09:38] <bookworm> p-i-: how does it handel the inline outputs and markdown cells?
[15:09:39] *** Joins: ndim (~hun@moooo.n-dimensional.de)
[15:09:54] <bookworm> I assume you mean the jupyter notebooks aye?
[15:10:14] <bookworm> handle*
[15:11:18] *** Joins: mexen (uid495612@user/mexen)
[15:11:39] <p-i-> bookworm: You can breakpoint/singlestep-debug cells now.
[15:12:25] <p-i-> Inline outputs match jupyter's web thingy. Markdown renders (even TeX).
[15:12:36] <bookworm> not what I mean (and you can do that with the normal notebooks too btw, depending on the kernel)
[15:12:39] *** Joins: wyclif (~wyclif@user/wyclif)
[15:12:42] *** Joins: ice9 (~ice9@user/ice9)
[15:13:14] <bookworm> but sounds neat, might have a look actually. in vscode I'd at least get some vim bindings
[15:14:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:14:26] <p-i-> It means I'm not fiddling with ipython to test out codechunks any more. And I have a record of what I tested and what the result was. That I can comment in .md cells with clickable weblinks.
[15:15:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:15:32] *** Joins: Kvothe (~weechat@user/elodin)
[15:16:25] <bookworm> yeah notebooks are nice for exploratory things
[15:16:32] <lericson> agreed, and demonstrative
[15:16:55] <lericson> how does it work with remote machines though
[15:16:59] <p-i-> .ipynb clutters vcs tho'. That's the one downside for me. I keep forgetting to clear output before committing. Typically I .gitignore my .ipynbs.
[15:17:00] <lericson> because i typically run jupyter somewhere else
[15:17:27] <bookworm> poorly for output cells, I tend to ssh port forward
[15:17:58] <lericson> right, same, but my question was regarding VSCode's jupyter thingy that p-i- is talking about
[15:18:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[15:18:07] <bookworm> but if you disconnect you'll loose the output of the currently running cell, the vars will be populated but any print statements / plots won't show up
[15:18:23] <lericson> hm that works fine for me
[15:18:27] <lericson> i have cells that run for 24hr+
[15:18:30] <lericson> (ML)
[15:18:34] <bookworm> that I highly doubt
[15:18:44] <lericson> doubt all you want
[15:18:49] *** Joins: xsperry (~as@user/xsperry)
[15:18:55] <bookworm> The cell will run, that's not the issue.
[15:19:15] <bookworm> If you disconnect and reconnect you'll loose the running output, aka stdout of the cell
[15:19:23] <lericson> and i'm saying that works fine
[15:20:07] <lericson> regardless of if i reload the page in my browser or go Kernel → Reconnect
[15:20:22] <bookworm> https://github.com/jupyterlab/jupyterlab/issues/2833
[15:21:02] *** Quits: rhax (~yannick@user/rhax) (Ping timeout: 252 seconds)
[15:21:31] *** Quits: Samian (~Sami@2620:10d:c091:480::1:8d08) (Quit: Textual IRC Client: www.textualapp.com)
[15:21:50] *** Joins: rhax (~yannick@user/rhax)
[15:22:50] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:dc1e:7956:c879:1b8f)
[15:22:51] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:26:48] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[15:27:25] *** Joins: Samian (~Sami@174.27.107.153)
[15:27:44] <lericson> that's odd
[15:28:22] <lericson> i guess there is some circumstance where it does lose the output
[15:29:10] <bookworm> "some" :) sure... like every single time
[15:29:51] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:29:54] *** Quits: LemurP (~lemurp@109.74.190.250) (Ping timeout: 240 seconds)
[15:29:59] <lericson> it seems to only happen if the page is refreshed
[15:30:35] <lericson> if the connection is interrupted and resumed, it works fine
[15:30:43] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[15:31:01] *** Joins: wyclif (~wyclif@user/wyclif)
[15:32:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:32:18] *** Quits: jazzy (~jaziz@2600:380:4542:186:d4b:fa38:d4e3:e7e5) (Ping timeout: 240 seconds)
[15:32:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:33:06] <bookworm> depends on which connection you mean
[15:33:21] <lericson> all tcp connections
[15:33:32] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[15:33:33] <bookworm> terminating ssh (say due to lan --> WLAN) pretty much fucks it up all the time
[15:33:43] *** Quits: Samian (~Sami@174.27.107.153) (Ping timeout: 256 seconds)
[15:33:52] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[15:34:34] *** Quits: rhax (~yannick@user/rhax) (Quit: Leaving)
[15:34:55] <lericson> seems to work for me
[15:35:14] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:35:26] <bookworm> with what output? print() in a loop?
[15:35:51] <lericson> that and pushing out matplotlib plots
[15:35:55] <bookworm> by all means that'd be great, would solve a bug from 2015 or even earlier
[15:35:56] <lericson> which is what i have been doing
[15:36:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[15:39:27] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[15:40:16] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[15:40:42] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[15:40:58] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[15:42:33] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[15:42:43] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Ping timeout: 258 seconds)
[15:43:19] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[15:43:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:43:39] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[15:43:47] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Remote host closed the connection)
[15:43:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:44:03] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[15:44:49] *** Joins: gggp (~textual@60.10.194.47)
[15:45:56] *** Quits: tspng (~tspng@80-218-192-223.dclient.hispeed.ch) (Remote host closed the connection)
[15:46:30] *** Joins: skapata (~Skapata@user/skapata)
[15:46:32] *** Joins: tspng (~tspng@80-218-192-223.dclient.hispeed.ch)
[15:47:40] *** Joins: wyclif (~wyclif@user/wyclif)
[15:47:53] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[15:49:22] *** Quits: tunixman (~tunixman@45.32.228.130) (Ping timeout: 268 seconds)
[15:49:56] *** Joins: tunixman (~tunixman@45.32.228.130)
[15:51:02] *** Quits: tspng (~tspng@80-218-192-223.dclient.hispeed.ch) (Ping timeout: 272 seconds)
[15:52:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[15:52:57] <lericson> why does vscode look so ugly on macOS
[15:52:58] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4ec1)
[15:53:02] <lericson> something about the font rendering is just off
[15:53:16] *** Quits: Corder_000 (~Coder_000@191.33.88.217) (Remote host closed the connection)
[15:54:08] <FunkyBob> lericson: doesn't chrome always look off on macOS?
[15:54:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:54:23] <lericson> could be
[15:54:45] *** Joins: Corder_000 (~Coder_000@177.10.203.30)
[15:54:50] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:dc1e:7956:c879:1b8f) (Quit: Leaving)
[15:55:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:01:32] *** Quits: Corder_000 (~Coder_000@177.10.203.30) (Remote host closed the connection)
[16:03:09] <kosh> I wonder why chrome has bad font rendering on macOS
[16:03:28] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247) (Quit: Connection closed)
[16:03:29] <lericson> probably doesn't use the OS-provided font rendering stuff
[16:03:42] *** Joins: Corder_000 (~Coder_000@177.10.203.30)
[16:03:47] <kosh> just wonder if there is a reason for that
[16:04:14] <lericson> i can't get vscode to open an existing jupyter notebook on a remote server though, i press "Open in Notebook Editor" which seems like it should be the right command.. and absolutely nothing happens
[16:05:06] *** Joins: wyclif (~wyclif@user/wyclif)
[16:05:46] <kosh> I just click on file -> open file and select an ipython notebook
[16:05:59] <lericson> so you need the ipynb locally?
[16:06:11] <lericson> and then it uploads the code as it runs it?
[16:06:18] <kosh> actually I have never tried to run one remotely before
[16:06:51] <kosh> I only use notebooks for trivial things that run fast and I use normal python programs for anyting else because debugging in jupyter notebooks is pretty garbage
[16:07:35] <lericson> aha
[16:07:49] <lericson> it does indeed upload it
[16:08:22] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247)
[16:08:53] *** Joins: palasso (~palasso@user/palasso)
[16:09:51] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 244 seconds)
[16:09:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[16:11:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[16:11:29] *** Joins: spithash (~spithash@user/spithash)
[16:11:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:12:06] *** Joins: gusto (~Augustus@109.255.100.54)
[16:12:51] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247) (Client Quit)
[16:12:55] *** Corder_000 is now known as Gabs
[16:13:28] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:14:58] *** Joins: ripdog (~quassel@user/ripdog)
[16:15:10] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:d44c:dcd:329d:7de)
[16:15:16] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[16:16:42] *** Quits: ripdog_ (~quassel@user/ripdog) (Ping timeout: 240 seconds)
[16:16:49] <lericson> hrm
[16:17:04] <lericson> man IDEs never live up to their hype
[16:17:12] * lericson closes vscode again
[16:17:30] *** Quits: m4ug (~m4ug@99.72.30.19) (Ping timeout: 252 seconds)
[16:18:43] <kosh> a lot of people use them and like using them every day
[16:19:03] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247)
[16:19:19] <kosh> inherently I think jupyter notebooks are not a very good idea and it is easy for people to get trapped in them
[16:19:36] <kosh> and you end up with the unmaintainable mess you end up with for matlab code
[16:19:56] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:d44c:dcd:329d:7de) (Ping timeout: 250 seconds)
[16:20:08] <lericson> sure
[16:20:17] <lericson> but unmaintainable mess is not so bad
[16:21:07] *** Quits: wattux (~wattux@212.51.23.106) (Ping timeout: 246 seconds)
[16:21:13] *** Joins: wyclif (~wyclif@user/wyclif)
[16:21:18] <BtbN> I have been given enourmous projects by my colleagues, written entirely in Notebooks, and I'm then supposed to host them
[16:21:40] <BtbN> And most of the time, the author does not understand what I mean by "Can you give me a normal python script?"
[16:21:48] <lericson> seems more like your coworker's fault than jupyter notebooks
[16:22:17] <lericson> like so many times before, it's people using the wrong tool for a job
[16:24:50] *** Quits: ano (~weechat@user/ano) (Ping timeout: 244 seconds)
[16:25:05] *** Joins: Samian (~Sami@2620:10d:c091:480::1:6f88)
[16:26:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[16:26:22] <Samian> the other day someone had shown me an elegant way to compute the prefix sum using zip, but I lost my logs :-(. Any chance someone can search prefix sum in channel logs?
[16:26:38] *** Joins: shad (~shad@user/shad)
[16:27:03] <jinsun> prefix sum
[16:27:11] <bjs> Samian: you mean like [1,2,3,4]
[16:27:17] <bjs> Samian: => [1,3,6,10] ?
[16:27:21] <Samian> yes
[16:27:24] <jinsun> oops, I mean what is prefix sum
[16:27:44] <lericson> this is a cumulative sum
[16:27:44] <jinsun> oh cumulative sum?
[16:27:49] <Samian> yes same thing
[16:27:53] <lericson> not really
[16:27:57] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 258 seconds)
[16:28:02] <Samian> https://en.wikipedia.org/wiki/Prefix_sum
[16:29:18] *** Gabs is now known as seunick
[16:29:24] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:29:28] <lericson> anyway c = 0; L_cum = [(c := c + v) for v in L]
[16:29:54] <bjs> Samian: what made the zip one elegant?
[16:30:01] *** Joins: gggp (~textual@60.10.23.171)
[16:30:18] <Samian> bjs  it looked neat to me.
[16:30:22] *** seunick is now known as Gabs
[16:30:22] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[16:30:40] <jinsun> I just use numpy.cumsum when I need cumulative sums, but I guess it is a bit overkill to install it for this if you don't have it installed already
[16:30:47] <Samian> bjs  I remember a list comprehension and zip was used. But I lost the logs
[16:31:26] *** Joins: menace (~someone@user/menace)
[16:31:40] *** menace is now known as Deknos
[16:32:36] <lericson> what's wrong with the extremely straight-forward solution i proposed, Samian
[16:33:13] <Samian> nothing at all. that's probably what I'll do. But what someone wrote in the chan a few days ago I found pretty creative
[16:33:21] <lericson> ah
[16:33:41] <p-i-> There's `from itertools import accumulate` and faffing with `reduce` too
[16:33:42] <Repiphany> list(itertools.accumulate([1,2,3,4]))
[16:33:49] <p-i-> :)
[16:33:53] <lericson> i prefer this one then :p
[16:34:00] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 252 seconds)
[16:34:03] *** Gabs is now known as san
[16:34:05] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[16:34:51] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:05] *** Joins: Payam (~Payam@138.106.57.132)
[16:36:23] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:edc8:f407:8f8:449c)
[16:36:36] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:38] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 272 seconds)
[16:37:07] *** Joins: pnoud (~pnoud@user/pnoud)
[16:37:54] *** Joins: rubberd0g (~kha0s@p5dc58f39.dip0.t-ipconnect.de)
[16:37:56] *** Joins: Warkruid (~MarderIII@2001:985:e889:1:50d7:e7d4:e499:cd38)
[16:39:06] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[16:39:22] *** Joins: candyman (~candyman@user/candyman)
[16:40:46] *** san is now known as Coder_000
[16:41:20] *** Quits: ionface_ (~ionface@user/ionface) (Ping timeout: 252 seconds)
[16:41:36] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:edc8:f407:8f8:449c) (Ping timeout: 250 seconds)
[16:41:41] <Payam> Hi, I have a list of objects that have attributes. I need to find the duplicated and then combine some of the attributes. for instance if A is an object with .name, .age, .friends. B is a list of A as B = [A1, A2, A3] etc. I need to find A:s that have the same name, combine the .friends attributes together and take the maximum .age value of them
[16:41:42] <Payam> and finally create an A that has .name, .age=maxage, friends = [friend1,friend2,friend3]. So right now I have  the max age. but can not figure out how to combine the friends : https://bpa.st/TWIQ
[16:41:57] *** Joins: ionface (~ionface@user/ionface)
[16:42:15] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[16:42:28] *** Quits: Warkruid (~MarderIII@2001:985:e889:1:50d7:e7d4:e499:cd38) (Ping timeout: 250 seconds)
[16:42:47] <lericson> Payam: your friends is just a single str
[16:42:52] <lericson> it needs to be a set or list
[16:42:52] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@78.84.19.247) (Quit: Connection closed)
[16:43:41] <lericson> you can also design this algorithm greedily, just iterate and combine as you go
[16:43:49] <lericson> no need to group them first like you do in mydict
[16:44:31] <lericson> i have a feeling that you have transplanted this from somewhere though :p max_depth?
[16:44:33] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[16:44:37] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[16:45:06] *** Quits: candyman (~candyman@user/candyman) (Ping timeout: 240 seconds)
[16:47:38] <Payam> lericson Yes it is for something else but I try to make it simpler for myself to get help
[16:47:43] *** Joins: chaosite (~chaosite@user/chaosite)
[16:47:59] <Payam> lericson what do you mean I should iterate and combine as I go
[16:48:43] <lericson> your combination operator, pr = combine(p1, p2), is a reduction
[16:49:23] <lericson> that means pr = combine(combine(p1, p2), p3) = combine(combine(p3, p1), p2)
[16:49:28] <Payam> so there is combine thing
[16:49:38] <lericson> iow it doesn't matter which order you do it in
[16:49:56] <Payam> yes but the need to have the same name
[16:50:21] <Payam> combine only the same name. Let me show you
[16:51:44] <Payam> https://bpa.st/YJXA
[16:52:13] <Payam> That is the result I should expect for name of Payam
[16:52:50] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 268 seconds)
[16:54:16] *** Joins: pnoud (~pnoud@user/pnoud)
[16:54:22] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[16:54:34] *** Joins: digital-carver (~DCarver@49.205.154.191)
[16:55:07] *** Joins: wyclif (~wyclif@user/wyclif)
[16:55:53] *** Joins: LemurP (~lemurp@109.74.190.250)
[16:55:53] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 256 seconds)
[16:56:37] *** Joins: tspng (~tspng@80-218-192-223.dclient.hispeed.ch)
[16:58:40] *** Quits: Coder_000 (~Coder_000@177.10.203.30) (Quit: WeeChat 3.0.1)
[16:58:58] *** Joins: Corder_000 (~Coder_000@191.33.89.6)
[16:59:27] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[16:59:33] *** Quits: Mechanismus (~LabMonkey@2602:306:cf62:e270:18a4:a75a:f718:161a) (Quit: Leaving)
[16:59:37] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[16:59:37] *** Joins: chaosite (~chaosite@user/chaosite)
[17:00:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:00:45] *** Joins: azazello (~azazello@109.75.158.195)
[17:01:34] *** Joins: Snyp (~rksht@49.207.196.247)
[17:02:46] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:04:04] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[17:04:33] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 268 seconds)
[17:06:09] *** Quits: marduk (~marduk@216.243.54.166) (Remote host closed the connection)
[17:06:24] *** Joins: trace987 (~trace@ip5b429953.dynamic.kabel-deutschland.de)
[17:07:12] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[17:07:38] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[17:08:06] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 252 seconds)
[17:08:42] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Ping timeout: 240 seconds)
[17:09:19] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 265 seconds)
[17:10:15] *** Quits: gggp (~textual@60.10.23.171) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:10:41] *** Joins: marduk (~marduk@216.243.54.166)
[17:11:30] *** Quits: snalty (~Shhh@user/snalty) (Quit: ZNC 1.8.2 - https://znc.in)
[17:12:06] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[17:12:17] *** Joins: Mechanismus (~LabMonkey@2602:306:cf62:e270:d872:4ddf:64f4:3ec7)
[17:12:35] *** Joins: wyclif (~wyclif@user/wyclif)
[17:14:08] *** Joins: snalty (~Shhh@user/snalty)
[17:14:47] *** Joins: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net)
[17:16:10] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[17:16:11] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:16:35] *** Quits: Corder_000 (~Coder_000@191.33.89.6) (Quit: WeeChat 3.0.1)
[17:17:30] *** Joins: Corder_000 (~Coder_000@179.83.141.204)
[17:18:00] *** Joins: zeden (~zeden@user/zeden)
[17:19:29] <bjs> Payam: I think you're trying to be too fancy using a defaultdict here. Why not just make the values of the dict be people (objects)
[17:19:34] <kieto> How can I get a current stock price in Python?
[17:19:47] <kieto> e.g. Apple ("AAPL")
[17:19:58] *** Quits: phonemic (~phonemic@104-60-219-66.lightspeed.nsvltn.sbcglobal.net) (Quit: WeeChat 3.2)
[17:20:03] <andi_> kieto: yahoo finance is a good start
[17:20:11] <andi_> kieto: https://pypi.org/project/yahoo-finance/
[17:20:20] *** Quits: cdown_ (~cdown@163.114.131.1) (Remote host closed the connection)
[17:20:34] *** Joins: cdown (~cdown@163.114.131.1)
[17:20:41] <kieto> andi_: it's not working
[17:20:51] <bjs> Payam: also I think it'd be simpler if the friends attribute was always a list and not sometimes just a string
[17:20:53] <kieto> I've found pandas-datareader, I'll look at that
[17:20:56] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:21:15] <andi_> kieto: "it's not working" is not helping :)
[17:21:42] <grym> andi_: yahoo turned off that API years ago
[17:22:01] <grym> like, 5+ years ago
[17:22:08] *** Quits: Corder_000 (~Coder_000@179.83.141.204) (Client Quit)
[17:22:35] <kieto> andi_: Have you tried the library lately?
[17:22:39] <grym> kieto: https://github.com/ranaroussi/yfinance  perhaps
[17:22:43] <grym> looks like the modern fork
[17:22:43] <kieto> grym: exactly
[17:23:29] <ssbr> kieto: I used https://www.alphavantage.co/ last time I wanted this
[17:23:31] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[17:23:31] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:23:44] *** Joins: curiouz (~curiouz@user/curiouz)
[17:24:59] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[17:25:47] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[17:26:47] *** Joins: zeden (~zeden@user/zeden)
[17:26:57] *** Quits: masber (~masber@dhcp-133-203.cscs.ch) (Quit: Ping timeout (120 seconds))
[17:28:16] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[17:30:40] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.150)
[17:32:39] <Payam> bjs what do you mean? This object is designed somewhere else :(  If I change it it will change it for everyone.
[17:33:11] <Payam> but in this case I can have it as a list yes
[17:33:30] <kieto> ssbr: I've tried pandas-datareader and it accepts alphavantage data, and yahoo's, and many others :)
[17:35:51] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[17:37:28] *** Joins: ano (~weechat@user/ano)
[17:39:13] *** Quits: Snyp (~rksht@49.207.196.247) (Quit: WeeChat 3.2)
[17:39:38] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[17:39:57] *** Joins: curiouz_ (~curiouz@user/curiouz)
[17:40:30] *** Quits: curiouz_ (~curiouz@user/curiouz) (Read error: Connection reset by peer)
[17:40:33] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:40:59] *** Joins: curiouz_ (~curiouz@user/curiouz)
[17:41:58] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[17:42:10] *** Quits: curiouz (~curiouz@user/curiouz) (Ping timeout: 268 seconds)
[17:43:20] <hodapp> SnoopJ: thanks for the recommendation on xarray; I had read about it in passing but hadn't looking in detail
[17:43:51] *** Joins: Nact (~l@host-85-27-127-179.dynamic.voo.be)
[17:43:52] <hodapp> but on a more detailed look, probably going to incorporate this in at work where someone had tried to cram multidimensional arrays into Pandas
[17:44:47] <SnoopJ> hodapp, I would be interested to hear how that goes. I've never written anything with it, but it seems like it's on a good foundation by starting from ideas hammered out by netCDF
[17:45:45] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[17:45:48] <hodapp> I got as far as modeling our data in it to try to learn its abstractions a bit
[17:46:09] <SnoopJ> nice :)
[17:46:55] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca) (Ping timeout: 258 seconds)
[17:47:31] <hodapp> the terminology can be a bit confusing when trying to reconcile with how 'dimension' is used elsewhere, e.g. with tabular/columnar data where something that has N columns might be referred to informally as N-dimensional
[17:48:55] *** Joins: nyah (~nyah@90.221.186.180)
[17:49:12] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.150) (Quit: Textual IRC Client: www.textualapp.com)
[17:50:11] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[17:50:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[17:53:53] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[17:54:01] *** Joins: srilyk (~wayne@user/waynew)
[17:54:02] *** Joins: curiouz__ (~curiouz@user/curiouz)
[17:54:03] *** Joins: ayrus (~ayrus@user/ayrus)
[17:54:18] *** Quits: curiouz__ (~curiouz@user/curiouz) (Client Quit)
[17:54:32] *** Joins: dudek (~dudek@185.150.236.112)
[17:55:16] *** Joins: resmo (~resmo@2a00:d420:9:8a00:7238:fa75:f9a6:5363)
[17:55:28] *** Quits: ayrus (~ayrus@user/ayrus) (Quit: Textual IRC Client: www.textualapp.com)
[17:58:03] *** Joins: Corder_000 (~Coder_000@177.10.203.30)
[17:58:20] *** Quits: curiouz_ (~curiouz@user/curiouz) (Ping timeout: 272 seconds)
[17:58:57] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:59:42] <Corder_000> Someone help me please. How do I see messages that were sent on the channel after I left?
[17:59:58] <Helle> you don't there is no logging
[18:00:19] *** Joins: masber (~masber@dhcp-133-203.cscs.ch)
[18:00:24] <dudek> Hi, Any Pandas magicians out there? Need a hand: https://bpa.st/6GYQ
[18:01:06] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 258 seconds)
[18:01:11] <nedbat> Corder_000: can we help you with something now?
[18:01:48] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:03:03] <jinsun_> dudek: you want (df[list_Name'].isin( list_names))
[18:03:13] <no_gravity> dudek: Can you make a working version on online-python.com or some other active codebin?
[18:04:08] *** Joins: wyclif (~wyclif@user/wyclif)
[18:04:40] *** Quits: Corder_000 (~Coder_000@177.10.203.30) (Ping timeout: 272 seconds)
[18:04:59] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:05:44] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:dc1e:7956:c879:1b8f)
[18:06:40] *** Parts: a1 (~ekaj@user/ekaj) (WeeChat 2.7.1)
[18:06:55] <dudek> jinsun_, thank you, just what i've been looking for. it worked! :)
[18:07:01] *** Joins: lmmx (~louis@host-92-0-187-249.as13285.net)
[18:07:16] *** Quits: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net) (Quit: The Lounge - https://thelounge.chat)
[18:08:27] *** Joins: gggp (~textual@60.10.194.47)
[18:08:39] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[18:08:41] *** Joins: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[18:08:59] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 256 seconds)
[18:09:00] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[18:09:27] *** Quits: gggp (~textual@60.10.194.47) (Client Quit)
[18:09:30] *** Joins: kosh (~kosh@user/kosh)
[18:09:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[18:10:04] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-09-76-68-189-147.dsl.bell.ca)
[18:10:05] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[18:10:13] *** Joins: PonyBlocks (ponyblocks@user/ponyblocks)
[18:13:06] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f) (Ping timeout: 240 seconds)
[18:14:12] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[18:14:43] *** Joins: greenx (~greenx@pool-173-70-159-250.nwrknj.fios.verizon.net)
[18:15:13] *** Quits: Sir_Andrei (~andrei@r190-134-31-237.dialup.adsl.anteldata.net.uy) (Ping timeout: 256 seconds)
[18:16:19] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[18:18:21] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[18:19:52] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[18:20:20] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[18:21:23] *** Quits: MemoriaVetusta (~MemoriaVe@191.101.217.12) (Quit: WeeChat 2.3)
[18:22:19] *** Joins: wyclif (~wyclif@user/wyclif)
[18:22:25] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[18:22:37] *** Quits: neibo (~neibo@86.127.241.4) (Quit: leaving)
[18:23:23] *** Joins: Naan (~Naan@user/naan)
[18:23:37] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[18:26:17] *** Quits: botfather (~botfather@botd.io) (Quit: -)
[18:26:32] *** Quits: sazawal (~sazawal@2409:4043:510:d63:4002:ac9b:e4e8:b95e) (Quit: Leaving)
[18:27:10] <Payam> bjs any other suggestions?
[18:27:35] <bjs> Payam: i'm not sure what kind of help you need
[18:27:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[18:29:05] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[18:29:08] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[18:30:13] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Quit: Leaving)
[18:30:31] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Ping timeout: 256 seconds)
[18:32:03] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[18:32:32] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[18:32:52] *** Joins: zerosignal (~zerosigna@cpee4bffa8538e4-cme4bffa8538e2.cpe.net.cable.rogers.com)
[18:34:27] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-74c5-95d2-5b20-b0b3.res6.spectrum.com)
[18:35:09] <Payam> bjs
[18:36:52] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Read error: Connection reset by peer)
[18:37:09] <Payam> bjs is there any more intelligent way of looping here? https://bpa.st/4ZHQ
[18:37:30] <Payam> I just 'listed' the .friends attributes
[18:38:01] <bjs> Payam: I mean my suggestion is still the same as it was originally, to make a dict where the values are the objects
[18:38:11] <Payam> bjs I did it
[18:38:19] *** Joins: wyclif (~wyclif@user/wyclif)
[18:38:23] <Payam> didn't you see it? with defaultdict()
[18:38:29] *** Quits: bilb_ono (~alexmarsh@pool-96-250-84-46.nycmny.fios.verizon.net) (Quit: bilb_ono)
[18:38:32] <bjs> Payam: that had lists in it
[18:38:34] <Payam> bjs https://bpa.st/4ZHQ
[18:38:43] <Payam> yes.
[18:38:53] <grym> Payam: you import defaultdict, but never use it
[18:38:55] <lericson> does numpy not have an operation to check if array elements are between two values? like np.clip but a boolean operation
[18:39:02] <bjs> Payam: so my suggestion has been, and remains, to have a dictionary where the values are `objects`
[18:39:14] <bjs> (btw why "objects", I'd just call that class `Person` or something)
[18:39:35] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f)
[18:39:42] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[18:39:48] <Payam> bjs I need to save all the information like age, name and friends. and this is a dummy question. I am working on an other project
[18:39:59] <Payam> grym I forgot to remove it.
[18:40:00] <bjs> Payam: yeah you have an object that does that: the objects object
[18:40:12] <lmmx> if I want to download a zip file and the content-headers includes {"accept-ranges": "bytes"}, does anyone know if/how I can get the ZipFile members without first downloading it all (and thus get the ranges to request)?
[18:40:34] <lericson> yes you can lmmx
[18:40:44] <Payam> You say use a dictionary? What would the key of that dictionary be?
[18:40:51] <bjs> Payam: the name
[18:41:01] <Payam> and the values? should be the objects right?
[18:41:02] *** Quits: kostkon (~androirc@ob21aa.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[18:41:16] <lericson> lmmx: you need to find the length of the file (content-length) then request the end of it, which is the central directory
[18:41:16] <bjs> Payam: like {"Payam": Person("Payam", 100, ["Peppe"])}
[18:41:18] <bjs> Payam: yes
[18:41:29] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[18:41:43] <Payam> yes. but if there are 4 other Payams there?
[18:41:54] <bjs> Payam: I thought the point was to merge them into one?
[18:41:58] <Payam> yes
[18:42:02] <bjs> Payam: so you'd do that
[18:42:10] <Yhg1s> lmmx: that's very difficult, because ZIP files are identified (and parsed via) the central directory locator at the *end* of the file. The central directory is usually right before the central directory locator, so near the end of the file (but I don't think it's *required* to be there)
[18:42:11] <Payam> no no
[18:42:14] <bjs> Payam: no?
[18:42:26] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[18:42:40] <lericson> it is indeed not required to
[18:42:42] <Payam> bjs the point is to combine only the friends attributes and to take the max age.
[18:42:48] <bjs> Payam: okay so do that
[18:42:53] <ApostleInTriumph> Hello. How to (is it possible to) access class variables from static methods?
[18:42:56] <lmmx> lericson any idea where in the ZipFile API it gives that index of the byte ranges? I'm currently building the entire ZipFile object and then calling `getnames` to then `extract`/`extractfile`
[18:43:04] <Yhg1s> lmmx: the only other way to parse ZIP files is by assuming the file consists only of local directory entries right before each file (two things that are common but not required by the ZIP spec), and parse it by reading the whole file.
[18:43:11] <Payam> ApostleInTriumph no.
[18:43:13] <bjs> ApostleInTriumph: yes you can just use ClassName.attr  like usual
[18:43:21] <AhmedAmerican> do i really need to use `ssl.create_default_context()` within SMTP?
[18:43:28] <Yhg1s> lmmx: the zipfile module doesn't have a convenient way to do this.
[18:43:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[18:43:40] <lmmx> arg, thanks Yhg1s...
[18:43:42] <Payam> ApostleInTriumph yes as bjs said.
[18:43:43] <lericson> lmmx: like Yhg1s, you will have to tailor something that works outside the spec
[18:43:53] <lmmx> thanks lericson
[18:43:54] <Yhg1s> lmmx: zip is a terrible format, unfortunately.
[18:43:55] <lericson> +said
[18:44:01] <bjs> Payam: you loop over the objects, and if it doesn't exist in the dictionary you just add it, and if it does then you merge the friends and set the age to the max
[18:44:04] <Payam> bjs I still can't get it.
[18:44:04] <lmmx> xD
[18:44:07] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f) (Ping timeout: 256 seconds)
[18:44:11] <ApostleInTriumph> essentially, I'm trying to inherit torch.autograd.Function and the forward and backward are static methods. But those methods involve some expensive computations that i like to sav
[18:44:14] <Payam> let me try
[18:44:20] <CrtxReavr> Yhg1s, zip, the compression format?
[18:44:35] <lericson> zip the archive format
[18:44:41] <marienz> Yhg1s: if it works the way I suspect it does, if you had a file-like object that was backed by doing HTTP Range requests that'd kinda-sorta work for this, I think? If memory serves zipfile seeks to a few bytes before the end of the file to find a header that tells it where the start of the central directory is, then seeks there and reads that entry-by-entry
[18:44:49] <ApostleInTriumph> bjs so I just don't do self.attrib and rather MyFunction.attrib ? (where MyFunction is my class name)
[18:45:00] <bjs> ApostleInTriumph: well static methods don't have a "self"
[18:45:02] <Yhg1s> marienz: yes, this is true.
[18:45:03] <bjs> so you cannot do that.
[18:45:05] <CrtxReavr> IT's got legs though. . . been encountering it since. . . '91 at least.
[18:45:08] <Yhg1s> marienz: it's just a _lot_ of seeking around.
[18:46:03] <marienz> so I think if you had a file-like object that used range requests with readahead, it might kinda-sorta work. Although to be honest I could see myself partially reimplementing zipfile parsing instead
[18:46:07] <shad> what's the modern way to create a virtualenv for a new project in python 3.9 ?
[18:46:35] *** Joins: rsx (~dummy@ppp-188-174-150-120.dynamic.mnet-online.de)
[18:46:55] <marienz> (or at least implement enough of it to find the central directory, read that in its entirety, then feed a fake file consisting of just that and nulls everywhere else to the zipfile module)
[18:47:01] <The-Compiler> shad: both virtualenv and "python -m venv" are good solutions
[18:47:05] <CrtxReavr> That's more of a religious question.
[18:47:08] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[18:47:23] *** Joins: Pickchea (~private@user/pickchea)
[18:47:36] <The-Compiler> shad: https://virtualenv.pypa.io/ has some words on the differences
[18:48:20] <The-Compiler> and then there of course is Pipenv and poetry and flit, but those are more if your entire project is using them, and do far more than creating virtualenvs - many projects seem to use poetry lately from what I'm seeing
[18:49:03] <CrtxReavr> https://xkcd.com/927/
[18:49:36] *** Joins: wyclif (~wyclif@user/wyclif)
[18:49:37] <marienz> The-Compiler: remind me whether those do their own custom virtualenv-creating or wrap one or both of the previously mentioned tools? :)
[18:50:28] <marienz> (I haven't been keeping up with the times, but I think most of those are less "competing standards" as "taking standard virtualenvs and doing different things with them")
[18:50:49] <SnoopJ> lericson, `minval <= arr <= maxval` is the most obvious idiom but it does do the comparison twice. I don't think there's an existing ufunc for it that would get it all done in a single scan.
[18:51:18] <lericson> SnoopJ: doesn't actually work either, you must do something like (a <= arr) & (arr <= b)
[18:51:26] <The-Compiler> marienz: "those" as in poetry/Pipenv/flit? I don't know much about them, I think they do wrap one of those two tools (like e.g. tox does as well)
[18:51:35] <marienz> yup
[18:52:02] <SnoopJ> lericson, oops, you're right. Yes, the bitwise and is the idiomatic spelling.
[18:52:20] <lericson> i think it's pytorch or tensorflow that has an inrange test
[18:52:35] *** Joins: MemoriaVetusta (~MemoriaVe@216.159.11.109.rev.sfr.net)
[18:52:42] *** Quits: MemoriaVetusta (~MemoriaVe@216.159.11.109.rev.sfr.net) (Client Quit)
[18:52:52] <SnoopJ> lericson, is doing the scan twice a deal-breaker?
[18:52:58] <lericson> no
[18:53:07] <lericson> i just wondered if there was an easier way than stating the array identifier twice
[18:53:16] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 246 seconds)
[18:53:40] <SnoopJ> I would probably write `def inrange(arr, bot, top): return (arr >= bot) & (arr <= top)`
[18:53:48] <lericson> man i can't find this at all
[18:53:53] <lericson> guess i dreamed it
[18:54:50] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[18:54:55] <SnoopJ> the only bodge I can think of is `arr[..., np.newaxis] - [bot, top]` and then some fiddling with the result, but that fiddling is tantamount to at least one more scan
[18:55:05] *** Joins: pnoud (~pnoud@user/pnoud)
[18:56:01] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f)
[18:56:24] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[18:56:40] <SnoopJ> could do the obsessively-optimized version in Cython easily enough using the nditer interface
[18:56:44] <SnoopJ> (or just throw Numba at it)
[18:57:13] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[18:57:32] *** Joins: pagnol (~user@014198154145.ctinets.com)
[18:59:05] <CrtxReavr> They're trying to dump a Jython project in my lap.
[19:00:18] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f) (Ping timeout: 240 seconds)
[19:00:27] <grym> good old 2.7.2
[19:00:29] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[19:02:30] *** Joins: rhax (~yannick@user/rhax)
[19:03:18] *** Joins: dustiestgolf (~anotherus@153.90.200.104)
[19:03:59] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[19:05:37] *** Joins: LiftLeft (~LiftLeft@154.21.28.239)
[19:05:51] <CrtxReavr> Jython is just a python interpreter, written in Java, right?
[19:06:12] <Payam> bjs but it is not possible to append values to a dictinary without having a list. I really having trouble undrestanding this
[19:06:22] *** Joins: Adoi (~Adoi@user/adoi)
[19:06:24] <bjs> Payam: why do you want to "append"?
[19:06:45] <CrtxReavr> Hmmm
[19:06:46] <bjs> Payam: the dictionary has one Person() (let's stop calling it "objects") object. and you have another Person() object. Can't you just merge the two without a list?
[19:06:51] *** Joins: b0rf (~shaun@121-44-16-32.tpgi.com.au)
[19:06:51] <CrtxReavr> seems to be mor than that.
[19:07:00] <Payam> how?
[19:07:06] <SnoopJ> CrtxReavr, think "Python source compiled to JVM bytecode"
[19:07:07] <Payam> No
[19:07:11] <bjs> Payam: no?
[19:07:21] <SnoopJ> although I think there is plenty of stuff going on there that makes the runtime do Python runtime thingies
[19:07:32] <Payam> U can't come  up with any idea :(
[19:07:38] <bjs> Payam: what?
[19:07:43] <Payam> I *
[19:07:45] <Payam> sorry
[19:07:45] <CrtxReavr> I'm looking at jython.org. . . don't think I want to touch any of this mess.
[19:07:46] *** Joins: Snyp (~rksht@49.207.196.247)
[19:08:07] <SnoopJ> CrtxReavr, what grym said is the main dividing question: do you want to use an ancient Python?
[19:08:36] <CrtxReavr> No, and nor do I want to use javanyting.
[19:09:11] *** Joins: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl)
[19:09:54] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[19:10:08] *** Joins: Adois (~Adoi@user/adoi)
[19:10:25] <bjs> Payam: here's an example https://bpa.st/GEGQ
[19:10:52] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 258 seconds)
[19:11:07] <Payam> I never heard of extends
[19:11:28] <bjs> Payam: well it's just a method on a list
[19:11:36] <Payam> Thank you very much. Let me try it.
[19:11:48] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 272 seconds)
[19:11:53] <bjs> it's just the way I chose to merge the "locations" was to .extend() one with the other
[19:12:01] <bjs> you can do other things, that wasn't the point of the paste
[19:12:04] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f)
[19:12:21] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:12:21] <Payam> yes. it should be new_people.keys() right?
[19:12:28] <bjs> What?
[19:12:40] <bjs> Payam: what is "it" ?
[19:12:50] <Payam> if person.name not in new_people.keys() instead of if person.name not in new_people:
[19:12:54] <Payam> or it doesn't matter?
[19:13:01] <bjs> Payam: it doesn't matter
[19:13:30] <bjs> Payam: but you can say .keys() if you want.
[19:14:00] *** Quits: mathgrad (~mathgrad@2600:8806:3003:f756:f5cd:a8c9:c2ee:d59f) (Quit: Leaving)
[19:14:10] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[19:14:22] <kosh> if using something like multiprocessing.pool is there a way to give each process some kind of name or id that the process is capable of querying? I have a problem with some scientific software that can't be run in parallel so instead we have to make n copies of the software on the machine and I want a worker to be able to look and see which one it should be using as it gets tasks from the pool
[19:14:40] *** Joins: mathgrad (~mathgrad@2600:8806:3003:f756:f5cd:a8c9:c2ee:d59f)
[19:14:41] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[19:15:02] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[19:15:15] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[19:15:22] <mathgrad> I have a pandas data set and applied a log transform to a column, when I try to use it in a model it says my jupyter notebook returns a NameError: name '' is not defined
[19:16:01] <mathgrad> pd.head() shows the transformed column is in the dataframe
[19:16:27] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[19:16:46] <aw1> check if the column name is properly set
[19:16:59] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f) (Ping timeout: 256 seconds)
[19:17:10] <aw1> or share the notebook if possible
[19:17:27] *** Quits: mkellis (~Calibellu@68.235.43.134) (Ping timeout: 268 seconds)
[19:17:39] <mathgrad> in the formula for the model or the data frame?
[19:17:56] <aw1> both
[19:17:59] <Adois> hello, in this code https://bpa.st/XHUA, would you perhaps have a suggestion or a little hint for me in order to get the same whitespace (4 spaces) following each row of each operation. currently this space is applied following the last row of each operation (after the dashed lines).
[19:18:25] <Adois> therefore the next operation starts at the end of the previous
[19:18:34] <Adois> row-wise
[19:18:50] *** Quits: tspng (~tspng@80-218-192-223.dclient.hispeed.ch) (Remote host closed the connection)
[19:19:02] *** Joins: mkellis (~Calibellu@2607:9000:0:61::a02e)
[19:19:04] <aw1> mathgrad, without additional information it would be difficult to diagnose the issue
[19:19:27] <mathgrad> ok the column name probably isn't set correct. if I try to print(df['columnName']) it returns an error as well
[19:19:47] <Adois> line 24 relates to some specific rules set by the question like every number should be right-aligned, the longest number must have one space behind the operator...
[19:20:10] <aw1> mathgrad, if the name of the column 'columnName'?
[19:20:18] <mathgrad> how would I set the column name correctly with a np.log(df['pretransformColumn'])
[19:20:21] <aw1> or is the variable columnName?
[19:20:53] <mathgrad> sorry just using generic names
[19:21:11] <bjs> Adois: it's because each `opr` has a newline in it, so when you + them together you get lots of lines. "a\nb" + "c\nd"   does not put them "side-by-side"
[19:21:24] <mathgrad> I did df['logColumnName'] = np.log(df['ColumnName'])
[19:21:35] <mathgrad> if I df.head() it shows the column
[19:21:56] <mathgrad> but trying to get df['logColumnName'] returns the error
[19:22:50] <aw1> it should work. Nothing fishy there.
[19:23:20] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[19:23:24] *** gggpkm_ is now known as gggpkm
[19:23:26] <aw1> df.columns .. what is the output of that
[19:23:40] *** Joins: cidtest (~cidtest@89.238.185.211)
[19:24:25] *** Quits: cidtest (~cidtest@89.238.185.211) (Client Quit)
[19:24:35] <okamis> Hello guys, third time im asking because I cannot solve it https://bpa.st/QAKQ its a mocking problem with a context manager. The question is in the paste
[19:25:05] <okamis> bjs, I know you gave some comment yesterday, maybe I missed an important clue. But yeah here I am today too
[19:25:14] <Adois> bjs, yes, in order to avoid newlines, I thought about handling all of the first operands together as a row, and then the second operands the same way, and then the third...after that priting each line separately..I had then problems with alignment of some operators in the second row...but if this is a right approach, perhaps I can try again and fix the operator positions
[19:25:29] <Adois> printing*
[19:25:53] <bjs> Adois: it's not very easy to make things align in the way you want.
[19:25:58] <mathgrad> using df.logColumnName = np.log(df['ColumnName']) worked
[19:26:16] *** Quits: veek (~veek@117.192.18.244) (Quit: Leaving)
[19:26:28] <bjs> okamis: something like patch("serial.Serial")
[19:26:33] <bjs> to patch the Serial class
[19:27:11] <okamis> bjs, Yeah, tried that. Is it equivalent to patch("disk_util.serial.Serial")?
[19:27:13] *** Joins: djapo (~archangel@user/djapo)
[19:27:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:27:36] <bjs> okamis: yes
[19:27:45] <bjs> okamis: what does "tried that" mean?
[19:27:52] <bjs> that is how you patch the Serial class, so...
[19:27:58] *** Joins: jphaynes66 (~TerraFirm@91.90.126.9)
[19:27:58] <Adois> bjs, but at least I have everything on the same line instead of on top of each other
[19:28:39] <The-Compiler> okamis: it indeed is - modules are singletons in Python, so the "serial" in test_disks.py (when imported via "import serial") and the one in disk_util.py are the exact same module object
[19:28:47] <okamis> bjs, Serial returns a context manager, aka mock2, and my mock2.read_until.return_value = 1, but when I check the test/assertion, it says MagicMock == 1
[19:29:05] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: leaving)
[19:29:13] <bjs> Adois: well you have to output whole lines at a time. So you have to take your multiple lines and at the end combine them in some way to merge the lines together
[19:29:17] *** Joins: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com)
[19:29:21] <bjs> Adois: it's not "hard" but it's not easy either
[19:30:13] <bjs> okamis: well you want to change the mock.__enter__().read_until.side_effect attribute then
[19:31:05] *** Joins: n00b_c0der (~pacblinky@user/pacblinky)
[19:31:08] <n00b_c0der> hello
[19:31:12] <Adois> bjs, I am at it :)
[19:31:18] <The-Compiler> bjs, okamis: probably mock().__enter__() given that it's a class that's mocked
[19:31:19] *** Joins: chaosite (~chaosite@user/chaosite)
[19:31:22] <n00b_c0der> do you guys know how to increase a index of a int value?
[19:31:30] <bjs> The-Compiler: ah yes sorry :)
[19:31:32] <n00b_c0der> value = 001
[19:31:34] <okamis> bjs, Thats what I been struggling with a few hours.
[19:31:44] <okamis> The-Compiler, wait I dont understand your line
[19:31:45] <n00b_c0der> value[0] += 1
[19:31:48] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[19:31:48] <n00b_c0der> does not work
[19:31:50] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 252 seconds)
[19:32:03] <bjs> n00b_c0der: `value = 001` isn't even valid Python so this isn't a good start
[19:32:08] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[19:32:18] <n00b_c0der> hmm so
[19:32:22] <bjs> n00b_c0der: if that number is decimal then that's the same as +100
[19:32:29] <bjs> n00b_c0der: `value += 100` no?
[19:32:39] <n00b_c0der> aight
[19:32:50] <n00b_c0der> so lets say i have number 1001
[19:32:57] <n00b_c0der> and i want to increase the middle number by 1
[19:33:00] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[19:33:09] <SnoopJ> which one is the middle?
[19:33:09] <bjs> n00b_c0der: which is one is the middle number?
[19:33:14] <The-Compiler> bjs, okamis: Honestly I also can't get this to work properly off-hand. The unittest.mock API is weird.
[19:33:14] *** Joins: FluffyMask (~FluffyMas@user/fluffymask)
[19:33:19] <n00b_c0der> 1001
[19:33:21] *** Quits: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl) (Quit: Leaving)
[19:33:21] <n00b_c0der> 1231
[19:33:22] <n00b_c0der> tlets say 3
[19:33:24] <n00b_c0der> for example
[19:33:33] <n00b_c0der> i want to incraese by 2
[19:33:36] <n00b_c0der> by index
[19:33:42] <n00b_c0der> not by adding it to a big number
[19:33:54] <n00b_c0der> do you know ?
[19:33:54] *** Joins: Sadale (~Sadale@user/sadale)
[19:34:27] <okamis> The-Compiler, bjs, I got mock_serial.__enter__.return_value = mock2; mock2.read_until.return_value = 1, but when im doing my assert I clearly see that it didnt return 1, but rather a new mock object
[19:34:36] <The-Compiler> bjs, okamis: it's mock().__enter__().read_until.return_value = 1
[19:34:50] <SnoopJ> n00b_c0der, numbers in Python do not have this kind of structure, you have to write that kind of stuff for yourself. If you want to increase the Nth decimal digit of a number, you can add 10**(N-1) to it.
[19:35:16] <The-Compiler> bjs, okamis: () after mock because the mocked class is instancianted, () after __enter__ because the context manager calls the __enter__ method, *no* () after read_until because return_value gets set on the function mock itself
[19:35:18] <bjs> n00b_c0der: I mean, increasing the middle number by 2 is exactly what "adding it to a big number" means
[19:35:33] <SnoopJ> example: to change 1000 to 1100, we can do `1000 + 10**(3-1)` which is the same thing as `1000 + 100`
[19:35:52] <n00b_c0der> you guys still do not get me
[19:35:57] <The-Compiler> bjs, okamis: Or, a bit more readable:   with mock() as ser: ser.read_until.return_value = 1
[19:36:06] <bjs> The-Compiler: clever
[19:36:12] <n00b_c0der> ok pair with me again
[19:36:13] <SnoopJ> n00b_c0der, we get you, but we are also telling you that integers do not have this functionality in Python.
[19:36:22] <n00b_c0der> ;(
[19:36:27] <n00b_c0der> is there any library
[19:36:28] *** Joins: pnoud (~pnoud@user/pnoud)
[19:36:29] <n00b_c0der> that let you do that
[19:36:31] <bjs> n00b_c0der: you want to start with 1231 and end up with 1251
[19:36:33] <SnoopJ> You must write it yourself if the suggestion we gave you is not correct. Also, if it is not correct, we would really appreciate you explaining *why* it is not correct.
[19:36:45] <SnoopJ> (so that our next suggestion can be more appropriate)
[19:36:46] <bjs> n00b_c0der: ?
[19:36:51] *** Joins: rany[m]1 (~rany@user/rany)
[19:36:53] <The-Compiler> okamis: however, I often prefer hand-writing a stub class and providing some means to pass it into my code without having to patch things - this kind of patching often is rather brittle, as you can see :)
[19:36:56] <okamis> The-Compiler, it worked! bjs
[19:37:36] <dukwon> n00b_c0der, you can convert back and forth between str and int if you want to address each digit of a decimal number, but it seems like more of a hassle than just using maths
[19:37:51] <n00b_c0der> ok my questions in details: if user input = "K" do: value[1] +=2
[19:37:53] <okamis> The-Compiler, mock().__enter__()... why is it mock(), why is the parenthesis important?
[19:37:57] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:38:12] <n00b_c0der> if user input ="SK" do: value[1] and value[2] +=2
[19:38:34] <bjs> okamis: because you go Serial()
[19:38:46] <The-Compiler> okamis: "mock" is the patched serial.Serial class, so "mock()" is the instance of it (the "serial.Serial(1,2,3)" in your code)
[19:39:07] <n00b_c0der> bjs: so my only way is math
[19:39:16] <bjs> n00b_c0der: okay but numbers aren't just a bunch of digits, it's a number.  Incrementing one of the digits means adding
[19:39:26] <bjs> n00b_c0der: no it's not that it's "the only way" it's that what you want *is* math
[19:39:27] <okamis> Aaaaaaaaah, I was just thinking the variable or something, I learned something new today thank you for good explanation too
[19:39:27] <The-Compiler> n00b_c0der: you might want to store a list of integers perhaps?
[19:39:44] <n00b_c0der> bjs: alright
[19:39:49] <n00b_c0der> The-Compiler: can you expalin?
[19:39:54] <okamis> now I sort of understand the mock because they have a name, I guess thats a hint for developers
[19:40:05] <frostblade> has anyone tried compiling cpython from source
[19:40:11] <The-Compiler> frostblade: sure
[19:40:30] <SnoopJ> frostblade, many people, yep
[19:40:49] <The-Compiler> hah, my nick is relevant
[19:41:19] <The-Compiler> n00b_c0der: https://paste.the-compiler.org/view/d92d51ba
[19:41:29] <grym> frostblade: i use helper scripts to do this, but yes, regularly
[19:41:34] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[19:41:34] *** Quits: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net) (Quit: The Lounge - https://thelounge.chat)
[19:42:33] <n00b_c0der> The-Compiler: thanks
[19:42:37] *** rany[m]1 is now known as rany
[19:42:39] *** Joins: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[19:42:39] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[19:42:45] *** Joins: yaalon (~yaalon@189.202.78.228.cable.dyn.cableonline.com.mx)
[19:42:51] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[19:44:15] <The-Compiler> n00b_c0der: but the math way isn't rocket science either, as pointed out by others earlier: https://paste.the-compiler.org/view/402f8d8b
[19:44:15] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790::29)
[19:44:55] <b0rf> @SnoopJ I answered this guys question in another channel already
[19:45:03] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[19:45:04] <b0rf> Ya, just store the integers as a list, convert to string, boom done
[19:45:10] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[19:45:18] <SnoopJ> b0rf, we try to focus on this channel in this channel
[19:45:47] <b0rf> Why are you telling me this
[19:46:09] <b0rf> Just saying I saw this question earlier
[19:46:15] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Remote host closed the connection)
[19:46:22] * SnoopJ shrugs
[19:46:36] <b0rf> Reads like some kind of cultish mantra
[19:47:44] <b0rf> Anyway. "I agree with the presented answer"
[19:47:55] <b0rf> "That's how I'd do it"
[19:48:17] <AhmedAmerican> within Jinja2, is it possible to loop over list of img urls and resize to specific size within HTML template ? https://jsfiddle.net/ofnr7y31/
[19:48:32] <b0rf> Probably
[19:49:15] *** Joins: tspng (~tspng@80-218-192-223.dclient.hispeed.ch)
[19:49:46] *** Joins: _pete_ (~pete@31.132.33.199)
[19:49:48] <b0rf> Ya you should be able to automate both those processes
[19:50:52] <SnoopJ> AhmedAmerican, when you say "resize" are you talking about the style of an <img> tag? I don't see anything in your fiddle related to images or loops.
[19:51:05] *** Quits: frostblade (onelegend@user/frostblade) (Quit: WeeChat 3.2)
[19:51:35] <b0rf> ^ yes
[19:51:40] <b0rf> (agree)
[19:51:46] <AhmedAmerican> SnoopJ regarding the resize yet. am searching about the loop
[19:51:54] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (Quit: bye)
[19:52:24] <The-Compiler> AhmedAmerican: what do you mean with "loop over list of img urls"? Do you have the list of URLs?
[19:52:31] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[19:52:34] <b0rf> lol
[19:52:39] *** Quits: okamis (~okamis@90-229-141-188-no92.tbcn.telia.com) (Ping timeout: 258 seconds)
[19:52:39] <b0rf> all requests here be like:
[19:52:42] <b0rf> ^
[19:52:54] <b0rf> 50%, pls fix
[19:52:55] <AhmedAmerican> @The-Compiler that's correct. it's list of img urls.
[19:52:57] <SnoopJ> AhmedAmerican, you could certainly do something like `{% for url in img_urls %} <img style={{ get_style(url) }} /> {% endfor %}`
[19:53:03] *** Joins: jaggz (~jaggz@user/jaggz)
[19:53:13] *** Quits: masber (~masber@dhcp-133-203.cscs.ch) (Ping timeout: 246 seconds)
[19:53:27] <b0rf> yup
[19:53:30] <The-Compiler> AhmedAmerican: so yeah, you can use Jinja2's for loops, https://jinja.palletsprojects.com/en/3.0.x/templates/#for
[19:53:44] <bjs> b0rf: is everything ok
[19:53:48] <The-Compiler> b0rf: can you tune it down a bit with the noise?
[19:53:54] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:19d1:3d77:8320:86c9) (Ping timeout: 240 seconds)
[19:53:55] <SnoopJ> clarification: in my example, get_style() would be a function you write to turn a URL into a style.
[19:53:57] *** Joins: theBen (~ben@2001:16b8:ad54:dd00:e199:a243:bb1:c235)
[19:54:10] <b0rf> you guys are noisy
[19:54:19] <b0rf> I'm getting work done
[19:54:20] <b0rf> XD
[19:54:23] *** Quits: YoungPotato (~user@c-67-186-254-165.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[19:54:35] <bjs> it's a busy channel and irc isn't the best when there's multiple conversations
[19:54:39] <AhmedAmerican> SnoopJ: Thank you
[19:54:42] <bjs> b0rf: as we can see
[19:54:44] <AhmedAmerican> The-Compiler: thank you.
[19:54:45] <b0rf> why r u all so complainy
[19:55:02] <AhmedAmerican> b0rf: please be respectful for others!
[19:55:10] <SnoopJ> b0rf, have you read the PSF Code of Conduct?
[19:55:14] <bjs> b0rf: you are the one complaining so much,  maybe if you stopped the channel would be quieter and less complainy :)
[19:55:21] <The-Compiler> b0rf: please keep things on topic - in the past couple of minutes nothing you've said was very helpful in regards to the questions being asked
[19:55:22] <SnoopJ> It might clarify the "feeling" of this community
[19:55:24] <b0rf> maybe if you all stopped
[19:55:28] <b0rf> complaining
[19:55:34] <ssbr> b0rf: please just drop it :)
[19:55:49] *** Quits: digital-carver (~DCarver@49.205.154.191) (Quit: Going gently into that good night)
[19:55:54] <jaggz> https://github.com/keras-team/keras-io/blob/master/examples/audio/speaker_recognition_using_cnn.py
[19:56:03] <b0rf> you all are mostly just complaining
[19:56:04] <b0rf> that's it
[19:56:07] <_pete_> I'm currently looking at upgrading some functionality from Python 2 to Python 3 (yea, I know) and I was wondering if anyone could tell me what L11 is doing in this file? https://dpaste.org/YhzB#L11
[19:56:09] <b0rf> that's all I see
[19:56:10] <b0rf> moving on
[19:56:16] *** Joins: venmx (~albasawa@5.148.85.162)
[19:56:22] <jaggz> in this script, they use an ipython    display(Audio(....))  at the end (line 468)
[19:56:36] <SnoopJ> b0rf, great, thanks.
[19:56:39] <jaggz> this requires being run in jupyter?
[19:56:45] <b0rf> SnoopJ, good answer
[19:56:48] <b0rf> back on topic
[19:56:58] <The-Compiler> _pete_: I'm assuming the entire  allowed_magic_types = [*map(re.compile, zip(*self.allowed_types)[2])]  construct, yes?
[19:57:04] <jaggz> what's the proper way to do this?  I've only run .ipynb's before or whatever
[19:57:05] *** Joins: akk (~akk@174-28-112-132.albq.qwest.net)
[19:57:07] <b0rf> no more complaining
[19:57:10] <SnoopJ> jaggz, display() and Audio() are probably both IPython functionality
[19:57:19] <SnoopJ> (it would help if we could see the complete code)
[19:57:35] <jaggz> SnoopJ, that's the complete code (url above)
[19:57:39] <SnoopJ> oops
[19:57:41] <_pete_> The-Compiler: yeap
[19:57:41] <jaggz> :)
[19:57:56] *** Quits: n00b_c0der (~pacblinky@user/pacblinky) (Quit: Lost terminal)
[19:58:13] *** Joins: Blankspace (~abcd@user/blankspace)
[19:58:44] <b0rf> actually you guys are lame
[19:58:45] <b0rf> moving on
[19:58:48] <b0rf> peace
[19:59:04] <bjs> b0rf: what would you prefer to talk about in the #python channel other than Python?
[19:59:13] <b0rf> Like I say one thing and you all bitch about it
[19:59:24] *** ChanServ sets mode: +o The-Compiler
[19:59:24] <b0rf> mob shit
[19:59:29] *** ChanServ sets mode: +o Yhg1s
[19:59:31] *** The-Compiler sets mode: +bbbb *!*@121-44-16-32.tpgi.com.au I!*@* thought!*@* you!*@*
[19:59:33] *** The-Compiler sets mode: +bbbb wanted!*@* to!*@* drop!*@* it?!*@*
[19:59:36] *** Yhg1s sets mode: -o Yhg1s
[19:59:46] <Yhg1s> The-Compiler: that's not how your client works :)
[19:59:48] *** Yhg1s was kicked by The-Compiler (Yhg1s)
[19:59:51] <bjs> The-Compiler: I think you didn't quite do what you wanted
[19:59:52] <The-Compiler> ARGH
[19:59:56] <The-Compiler> I can't IRC today
[19:59:56] <bjs> The-Compiler: oooooooh dear
[19:59:58] *** Joins: Yhg1s (sid387777@python/psf/thomas)
[20:00:06] <SnoopJ> nor is that :P
[20:00:10] <The-Compiler> Yhg1s: whoops, I apparently can't type today either
[20:00:14] <Yhg1s> :)
[20:00:16] *** b0rf was kicked by The-Compiler (b0rf)
[20:00:24] <The-Compiler> Yhg1s: sorry for the mess, let me fix that
[20:00:30] <Yhg1s> please do :)
[20:00:42] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:01:04] *** The-Compiler sets mode: -bbbb I!*@* thought!*@* you!*@* wanted!*@*
[20:01:06] *** Quits: Mindi (~Mindi@mindinet.org) (Remote host closed the connection)
[20:01:16] *** The-Compiler sets mode: -bbb to!*@* drop!*@* it?!*@*
[20:01:51] *** Quits: dreamer (~dreamer@user/dreamer) (Ping timeout: 258 seconds)
[20:02:20] *** ChanServ sets mode: +o infobob
[20:02:20] *** infobob sets mode: +b $a:b0rf
[20:02:20] *** infobob sets mode: -b *!*@121-44-16-32.tpgi.com.au
[20:03:26] <SnoopJ> jaggz, I think you could run this in Jupyter (JupyterLab would probably be the best experience for doing that), but it looks like maybe it was written with the intent to be run with IPython, i.e. `ipython speaker_recognition_using_cnn.py`
[20:03:28] *** Quits: yaalon (~yaalon@189.202.78.228.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[20:03:31] *** Quits: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com) (Quit: WeeChat 3.2)
[20:04:09] *** The-Compiler sets mode: -o The-Compiler
[20:04:24] <SnoopJ> jaggz, there's an .ipynb form of it that looks the same: https://github.com/keras-team/keras-io/blob/master/examples/audio/ipynb/speaker_recognition_using_cnn.ipynb
[20:04:26] *** Joins: dreamer (~dreamer@user/dreamer)
[20:04:45] *** Quits: Samian (~Sami@2620:10d:c091:480::1:6f88) (Read error: Connection reset by peer)
[20:04:56] <jaggz> SnoopJ, ipython just seems to run it like normal, and at the end spits out the same "<IPython.lib.display.Audio object>" print() type thing (doesn't display anything)
[20:05:10] <SnoopJ> yea
[20:05:41] <The-Compiler> _pete_: now that this is sorted out, let me get back to your question D:
[20:05:46] <SnoopJ> jaggz, Jupyter's interface knows it should convert objects from the `display` module to something more meaningful when it's in an output cell, basically.
[20:05:58] <_pete_> The-Compiler: Cheers :D
[20:05:59] <jaggz> in a doc it said "display .. shows the image in the [frontend?] [only notebook right now]"
[20:06:08] <jaggz> I think.. page was here somewhere in my history
[20:06:10] <SnoopJ> the output you're seeing is the same data, but Jupyter is calling some methods on it for you
[20:06:15] <SnoopJ> is basically what's going on
[20:06:24] <jaggz> hm
[20:06:29] <The-Compiler> _pete_: Using zip with a * will essentially reverse the zipping, so it will turn [(True, 1, 'a'), (False, 2, 'b'), (True, 3, 'c')] into [(True, False, True), (1, 2, 3), ('a', 'b', 'c')]
[20:06:37] <SnoopJ> same thing happens when you're using `%matplotlib inline`
[20:07:20] <jaggz> if I run jupyter-notebook it shows me the files but doesn't have a way, that I can find, to open a terminal, or run the file.. it just loads it into an editor
[20:07:20] *** infobob sets mode: -o infobob
[20:07:21] <SnoopJ> (in IPython jargon: that 'magic' means "I want to to watch for matplotlib-y things in output cells and convert them to embedded images")
[20:07:38] <SnoopJ> jaggz, I would strongly recommend using the JupyterLab interface
[20:07:40] <The-Compiler> _pete_: then [2] takes the third part of that, so ('a', 'b', 'c') in this example. Next, map() will map re.compile over those values, and the [*...] around that is probably to turn that into a list
[20:07:48] <SnoopJ> it can do everything the notebook interface can, and lots more
[20:08:00] <SnoopJ> (including browsing files, opening terminals in panes, etc.)
[20:08:03] <jaggz> SnoopJ, any clue how the author intended this to be run?
[20:08:19] <jaggz> (while i look into how to use jupyterlab)
[20:08:23] *** Joins: Akuli (~Akuli@213.216.211.200)
[20:08:33] <SnoopJ> jaggz, not really. I imagine they wrote the .ipynb intending for that to be run through as a notebook, and then just dumped all the input cells into the .py and called it a day.
[20:08:36] <The-Compiler> _pete_: You could probably write this as   allowed_magic_types = [re.compile(magic_type[2]) for magic_type in self.allowed_types]
[20:08:45] <SnoopJ> (in other words, I kinda doubt they had much in the way of intentions!)
[20:08:59] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[20:09:04] <grym> nbconvert and ship!
[20:09:11] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[20:09:38] <jaggz> SnoopJ, the code is pretty sloppily written were it intended for "normal" use :)
[20:09:41] <grym> i wrote an extremely janky script to handle the less pleasant failure mode of "here's this html of a notebook", which nbconvert can't handle
[20:09:54] <SnoopJ> jaggz, occupational hazard :)
[20:09:54] <jaggz> intermingled code and functions as you go down
[20:10:15] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[20:10:27] <jaggz> it's okay for a demo and learning
[20:10:43] <jaggz> of the machine learning part :)
[20:10:57] <SnoopJ> jaggz, a big part of my day job is turning that stuff into something that a customer will see, heh.
[20:11:14] <grym> F
[20:11:40] <_pete_> The-Compiler: That sure looks cleaner, thanks! Now I'm getting errors that "'utf-8' codec can't decode byte 0xfe in position 28: invalid start byte" on line 16
[20:12:12] *** Quits: Snyp (~rksht@49.207.196.247) (Quit: WeeChat 3.2)
[20:12:12] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 258 seconds)
[20:12:53] <The-Compiler> _pete_: the caller that's opening uploaded_file probably needs to open it in binary mode ('rb' or so) instead of text mode
[20:13:04] *** Quits: dalan (~dalan@118.102.85.89) (Ping timeout: 246 seconds)
[20:13:16] <jaggz> SnoopJ, heh
[20:13:40] <jaggz> okay.. got jupyter lab up and running .. and an Untitled.ipynb, and my script in the browser pane
[20:13:44] <jaggz> their script
[20:14:24] <SnoopJ> jaggz, I would really recommend running the .ipynb and not the .py
[20:14:33] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[20:14:39] <_pete_> The-Compiler: It looks to be a PersistentTemporaryUploadedFile, a django thing I guess
[20:14:55] <jaggz> SnoopJ, thanks for calling my attention to that.  i didn't investigate enough earlier.  I see their ipynb dir now
[20:15:00] *** Joins: srilyk (~wayne@user/waynew)
[20:15:03] <jaggz> (when you mentioned it a bit ago)
[20:15:30] <_pete_> Ah no its more, more weird bespoke stuff from this app
[20:16:27] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[20:16:51] *** Joins: waynew_ (~wayne@user/waynew)
[20:17:44] <jaggz> SnoopJ, my patches to their code aren't in the ipynb.  grr. :)
[20:17:49] <jaggz> okay.. thanks a lot.  fiddling.
[20:17:55] <jaggz> [with the code]
[20:18:28] <SnoopJ> jaggz, there might be a way to get IPython to do Something Useful with the output object, but...yea, this looks like the happy-path was Jupyter and the .py is a weird byproduct created without much in the way of thought.
[20:19:38] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:19:49] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[20:20:11] *** Joins: ntdll (~ntdll@user/ntdll)
[20:22:35] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[20:23:10] <[itchyjunk]> if i have `import socket` and a socket.connect(server,port) and i am getting a `module socket has no attribute connect`, does this mean my code is wrong or my py version is wrong or something?
[20:23:34] <[itchyjunk]> i tried socket.create_connection(server,port) and this connects but printing the result loos a bit weird
[20:23:42] *** Quits: deepfield (~deepfield@104.237.203.149) (Ping timeout: 258 seconds)
[20:23:56] <bjs> [itchyjunk]: yes your code is wrong
[20:24:16] <bjs> [itchyjunk]: socket (objects) can be connect()'ed
[20:24:23] <bjs> that is, a socket.socket() object
[20:24:57] <bjs> see the examples on the `socket` documentation (or well, just don't use sockets if you can avoid it)
[20:25:08] *** Quits: int0x1C8 (~int0x1C8@user/int0x1c8) (Quit: Leaving)
[20:25:46] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[20:26:08] <[itchyjunk]> hmm
[20:26:19] *** Joins: djapo (~archangel@user/djapo)
[20:27:31] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[20:27:48] <jaggz> SnoopJ, "Module: display ... will result in Audio controls being displayed in the frontend (only works in the notebook)."
[20:27:59] <SnoopJ> well there we have it!
[20:28:06] <jaggz> (old docs.. not looking further.. got the thing running in lab)
[20:28:07] *** Joins: yaalon (~yaalon@189.202.78.228.cable.dyn.cableonline.com.mx)
[20:28:11] <jaggz> https://ipython.org/ipython-doc/3/api/generated/IPython.display.html
[20:28:17] <SnoopJ> they're probably accurate
[20:28:46] <SnoopJ> about this point
[20:28:46] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f)
[20:28:53] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:28:58] <jaggz> SnoopJ, okay, so this classifies my mother in law's voice properly, and my wife's, and her ventilator breaths
[20:29:22] <jaggz> but then it suddenly misclassifies my wife's normal talking in the "wife-complaining" category of audio samples
[20:29:22] <SnoopJ> I didn't look closely at the semantics, but neat
[20:29:44] *** Joins: candyman (~candyman@user/candyman)
[20:30:04] *** Quits: _pete_ (~pete@31.132.33.199) (Quit: Leaving)
[20:30:18] <jaggz> (I went through recordings and dropped snippets of speech, including the mother-in-law/ folder,   wife/, wife-complaining/, etc.)
[20:30:28] <[itchyjunk]> hmm. so i defined soc = socket.socket. now i seem to be able to soc.connect and then soc.recv then print it and it kinda seems correct-ish
[20:30:32] <[itchyjunk]> Think i made some progress
[20:30:42] <jaggz> it's not as bad as it sounds; the complaints are when there's something wrong and she can't talk well, like if there's a problem with her ventilator :)
[20:31:03] * SnoopJ nods
[20:31:07] *** Joins: Barones (~Barones@2804:48dc:8500:0:7896:1bc4:250d:b580)
[20:31:20] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[20:31:23] <SnoopJ> jaggz, at a complete guess: dataset balancing is hard, and having enough data is even harder
[20:31:23] <grym> jaggz: false negatives bad, false positives slightly less bad
[20:31:27] <grym> ?
[20:31:45] <jaggz> oh I was only sharing because I could make it funny
[20:31:48] <jaggz> for your entertainment
[20:31:58] <jaggz> yeah I've got work to do on this.  very minimal samples
[20:32:32] <jaggz> now I need to see if I can adapt the code to run through long sections of audio to locate areas and help me label them
[20:32:50] *** Joins: tims1 (~tims@123-243-10-176.static.tpgi.com.au)
[20:32:52] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[20:32:58] <jaggz> "yes, got this section right, save that out for training.  no, this is mis-classified, put it here."
[20:33:06] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f) (Ping timeout: 240 seconds)
[20:33:07] <Adois> bjs, I guess this is it; https://bpa.st/V3FA
[20:33:25] <jaggz> grym, it just reminds me of myself a lot
[20:33:30] <Adois> without the first print line
[20:33:31] <jaggz> "stop complaining"
[20:33:39] <bjs> Adois: that's one way of doing it
[20:33:39] <[itchyjunk]> Oh i needed the soc.recv inside a loop ofcourse
[20:33:45] <Adois> https://bpa.st/S7EQ
[20:33:53] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[20:34:11] <Adois> bjs, sure
[20:34:26] <jaggz> grym, the actual goal is to be doing live listening, and when it detects she's speaking, to enhance that audio and play it back louder and hopefully more clearly
[20:34:32] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 252 seconds)
[20:34:34] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[20:34:42] *** Quits: tims (~tims@220-244-125-107.static.tpgi.com.au) (Ping timeout: 240 seconds)
[20:34:53] <jaggz> especially because her mother's hearing....
[20:34:55] <Adois> I believe there must be some one-liner magic for it out there :)
[20:35:00] <flower_> how do you play music in the background of a simple python application (using pyfltk)?
[20:36:02] *** Quits: lmmx (~louis@host-92-0-187-249.as13285.net) (Ping timeout: 272 seconds)
[20:36:12] *** Quits: fengshaun (~fengshaun@68.69.214.210) (Quit: bibi!)
[20:36:28] <grym> jaggz: vad and feature extraction, nice
[20:36:40] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 272 seconds)
[20:36:43] *** Joins: fengshaun (~fengshaun@68.69.214.210)
[20:37:32] *** Joins: cedric (~cedric@2a01:cb11:867:c200:d81b:bf6b:b9c0:6882)
[20:38:43] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790::29) (Quit: WeeChat 3.0.1)
[20:40:04] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:42:41] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[20:42:57] <flower_> do I need threading or multiprocessing or .... ?
[20:44:05] <PJBoy> am I OK to think of __del__ as a destructor in python?
[20:44:08] <PJBoy> a la C++
[20:44:08] *** Joins: greedom (~greedom@2001:16b8:2ee4:8400:b4fd:5a5d:cc74:379f)
[20:44:19] <grym> PJBoy: yes and no; you can't trust it to ever be called, though
[20:44:26] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 252 seconds)
[20:44:32] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[20:44:42] *** Quits: tims1 (~tims@123-243-10-176.static.tpgi.com.au) (Ping timeout: 268 seconds)
[20:45:01] <grym> PJBoy: https://docs.python.org/3/reference/datamodel.html?highlight=__del__#object.__del__  see bright red text box of doom
[20:45:22] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 265 seconds)
[20:45:28] <SnoopJ> PJBoy, no
[20:45:33] <PJBoy> so no exceptions, and can be executed at any time
[20:46:10] <PJBoy> :/
[20:46:12] <SnoopJ> PJBoy, think of it as a finalizer, it doesn't really map onto anything in particular though
[20:46:16] *** Quits: LemurP (~lemurp@109.74.190.250) (Ping timeout: 252 seconds)
[20:46:23] <PJBoy> the docs do kinda imply that it behaves like a dtor
[20:46:25] <SnoopJ> and since it's not even really predictable, you're usually better off writing a context manager
[20:46:34] <nedbat> PJBoy: it might never run.
[20:46:59] <PJBoy> ok so just to clarify
[20:47:00] <SnoopJ> it does some stuff you might do in a dtor when it's implemented, but it's just not right to think of it in terms of this 1:1
[20:47:12] <PJBoy> if I were to open a socket in __init__ or something
[20:47:36] <PJBoy> writing code that closes that socket in __del__ wouldn't be worth doing?
[20:48:21] <PJBoy> whatever resource I open could just leak unless I go the context manager route
[20:48:52] <SnoopJ> It's not necessarily a leak because if the object blinks away and is the only holder of a reference to other objects, those objects should blink away too
[20:49:09] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:49:28] <SnoopJ> if you care about "resources" you generally want context managers because __enter__/__exit__ are predictable
[20:49:48] <PJBoy> ok so __del__ is potentially fine for cleanup, provided I don't care about timing it with scope entry/exit
[20:50:05] <grym> context managers are great
[20:50:57] <SnoopJ> PJBoy, it's fine if the cleanup never happening is fine
[20:51:15] <PJBoy> that too
[20:51:18] <SnoopJ> in other words: counting on it is a bad idea
[20:51:37] <SnoopJ> but if you have some code to run at that time and it's okay if it doesn't ever run, that's where it lives
[20:51:54] <PJBoy> maybe it would be easier to ask if there's a "normal" usage for __del__
[20:52:15] <abhisek> Hi all, this question is not really related to python but programming in general. I habe seen that youtube and netflix (on firetv stick) generates random codes which, when entred on application, logs you in on the tv. I would like to know how that works (both on the server and the client). Do they generate codes and save it in a database?  Or is it
[20:52:15] <SnoopJ> "running code when an object is garbage collected"
[20:52:15] <abhisek> similar to totp?
[20:52:19] *** Joins: candyman1 (~candyman@user/candyman)
[20:52:42] <SnoopJ> PJBoy, but most such code would be resource management and [insert above points]
[20:52:50] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 258 seconds)
[20:52:52] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 2.3)
[20:52:55] <abhisek> I apologise if this question is more appropriate for a diff channel
[20:52:58] <PJBoy> ok I'm picking up what you're putting down
[20:53:20] *** Quits: candyman (~candyman@user/candyman) (Ping timeout: 268 seconds)
[20:53:21] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f)
[20:53:27] <SnoopJ> PJBoy, I think I've written __del__ just once in production code, to deallocate some CUDA memory
[20:53:40] *** Quits: tspng (~tspng@80-218-192-223.dclient.hispeed.ch) (Remote host closed the connection)
[20:53:58] *** Joins: reset (~reset@user/reset)
[20:54:38] <SnoopJ> if the object blinked away, the CUDA device wouldn't know about it, and it would still be holding memory allocated earlier, i.e. a proper leak
[20:54:50] <PJBoy> makes sense
[20:54:51] *** Joins: Gerula_ (~Gerula@user/gerula)
[20:54:51] *** Quits: Gerula (~Gerula@user/gerula) (Killed (cadmium.libera.chat (Nickname regained by services)))
[20:54:51] *** Gerula_ is now known as Gerula
[20:54:57] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:56:12] <AhmedAmerican> how to make a simple email template responsive ? https://jsfiddle.net/7pgbcnm0/
[20:56:21] *** Quits: candyman1 (~candyman@user/candyman) (Remote host closed the connection)
[20:56:26] *** Joins: justinf210 (~justinf21@41.sub-97-43-194.myvzw.com)
[20:56:31] <SnoopJ> if that CUDA library had provided suitable objects wrapping memory allocation, I could have just held references to those, and counted on it to dealloc on those being GC'd. But alas :)
[20:57:39] *** Joins: candyman (~candyman@user/candyman)
[20:57:51] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f) (Ping timeout: 256 seconds)
[20:57:51] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 256 seconds)
[20:57:52] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[20:58:00] <PJBoy> it's just like interacting with a C API
[20:58:20] <SnoopJ> yea, that library was a very shallow wrapper
[20:58:44] <Blankspace> What's a wrapper
[20:59:18] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[20:59:30] *** Joins: nickodd (~nickodd@user/nickodd)
[20:59:42] <SnoopJ> Blankspace, the library provided Python functions that could be called to invoke the associated C functions
[21:00:07] <SnoopJ> i.e. it "wraps" the C library and provides an API usable from the Python side
[21:00:44] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 272 seconds)
[21:00:49] <PJBoy> if I `del` an object and its reference count was 1, will that be guaranteed to run the GC on that object?
[21:00:53] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 258 seconds)
[21:00:54] <SnoopJ> no
[21:01:00] <PJBoy> sweet
[21:01:48] <SnoopJ> CPython is pretty prompt about it when it's simple reference counting, but definitely a hard no on a guarantee
[21:02:30] <PJBoy> ok cool
[21:02:49] <The-Compiler> there's this joke that C++ has a single-character garbage collector, }
[21:02:50] <PJBoy> that's 100% met my expectation
[21:03:16] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[21:03:22] <The-Compiler> but in Python you'd typically indeed use context managers to manage resources a bit more explicitly than in C++ with RAII
[21:03:49] *** Quits: candyman (~candyman@user/candyman) (Remote host closed the connection)
[21:04:07] *** Joins: candyman (~candyman@user/candyman)
[21:04:17] *** Quits: candyman (~candyman@user/candyman) (Remote host closed the connection)
[21:04:32] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[21:05:13] <PJBoy> sure
[21:05:18] <PJBoy> I'm familiar with context managers
[21:05:32] *** Joins: LemurP (~lemurp@109.74.190.250)
[21:06:07] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[21:06:09] <grym> "If the amount of RAM available to the runtime is greater than the amount of memory required by a program, then a memory manager which employs the null garbage collector (which never collects anything) is a valid memory manager."
[21:06:21] <grym> cracked my head open a bit when i found that one
[21:06:27] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Client Quit)
[21:06:27] <PJBoy> `@contextlib.contextmanager` makes them insanely convenient to write
[21:06:29] <SnoopJ> if you want, "count on the other objects to clean themselves up" is like the rule-of-0 and "use a context manager" is like the rule-of-3
[21:06:35] <PJBoy> like absurdly convenient
[21:06:43] *** Joins: candyman (~candyman@user/candyman)
[21:06:45] <SnoopJ> yea, contextlib has fun toys :)
[21:06:45] <grym> PJBoy: isn't it?
[21:07:07] <SnoopJ> Python is much more like rule-of-0 than any of the rest, imo
[21:07:42] *** Quits: candyman (~candyman@user/candyman) (Remote host closed the connection)
[21:08:23] *** Joins: candyman (~candyman@user/candyman)
[21:08:23] *** Quits: justinf210 (~justinf21@41.sub-97-43-194.myvzw.com) (Read error: Connection reset by peer)
[21:08:34] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[21:08:34] *** Joins: justinf210 (~justinf21@41.sub-97-43-194.myvzw.com)
[21:08:38] *** Quits: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at) (Ping timeout: 252 seconds)
[21:09:22] *** Joins: pnoud (~pnoud@user/pnoud)
[21:09:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[21:09:57] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f)
[21:11:03] *** Quits: candyman (~candyman@user/candyman) (Read error: Connection reset by peer)
[21:11:57] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[21:12:09] *** Joins: candyman (~candyman@user/candyman)
[21:13:09] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Client Quit)
[21:14:22] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[21:14:51] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 265 seconds)
[21:14:51] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f) (Ping timeout: 256 seconds)
[21:15:18] *** Joins: ice9 (~ice9@user/ice9)
[21:16:10] *** Joins: iJens (~ijens@user/ijens)
[21:17:04] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[21:19:04] *** Joins: mike18 (~geri@216.200.232.252)
[21:19:35] <mike18> hi how can i get all files of a s3 folder and subfolder using boto3 and python? https://ideone.com/1EedpA
[21:19:52] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:19:54] <mike18> that seems not to find files in subfolders...
[21:19:57] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 256 seconds)
[21:20:28] *** Quits: candyman (~candyman@user/candyman) (Ping timeout: 268 seconds)
[21:21:06] *** Quits: justinf210 (~justinf21@41.sub-97-43-194.myvzw.com) (Remote host closed the connection)
[21:21:22] *** Joins: justinf210 (~justinf21@41.sub-97-43-194.myvzw.com)
[21:21:28] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[21:22:18] *** Quits: LemurP (~lemurp@109.74.190.250) (Ping timeout: 240 seconds)
[21:22:19] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[21:24:29] *** Joins: brumla (~brumla@cst-prg-14-83.cust.vodafone.cz)
[21:25:01] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[21:26:54] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f)
[21:27:00] *** Joins: anas (~anas@196.235.97.18)
[21:27:05] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Quit: MrFantastik)
[21:27:31] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[21:27:53] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[21:28:13] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[21:28:51] *** Joins: candyman (~candyman@user/candyman)
[21:28:59] *** Joins: ice99 (~ice9@user/ice9)
[21:29:40] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:1749:70f2:c3b4:7591)
[21:30:19] *** Quits: OMGOMG (~bobrobert@poppy.ifi.uio.no) (Ping timeout: 272 seconds)
[21:31:15] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[21:31:34] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 268 seconds)
[21:31:51] *** Quits: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f) (Ping timeout: 256 seconds)
[21:32:46] *** Quits: ice99 (~ice9@user/ice9) (Client Quit)
[21:32:52] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[21:33:35] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[21:33:38] *** Quits: yaalon (~yaalon@189.202.78.228.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[21:34:28] *** Quits: zerosignal (~zerosigna@cpee4bffa8538e4-cme4bffa8538e2.cpe.net.cable.rogers.com) (Quit: Leaving)
[21:35:53] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[21:36:03] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Client Quit)
[21:36:30] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 252 seconds)
[21:36:50] *** Parts: nickodd (~nickodd@user/nickodd) ()
[21:36:57] *** Joins: rolo (~error@2a02:8108:8dc0:1cec:40a4:a26a:f551:eb4f)
[21:37:12] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:dc1e:7956:c879:1b8f) (Quit: Leaving)
[21:37:45] *** Quits: candyman (~candyman@user/candyman) (Remote host closed the connection)
[21:37:47] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[21:37:47] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:dc1e:7956:c879:1b8f)
[21:40:36] *** Joins: veek (~veek@117.192.20.173)
[21:40:55] *** Joins: Socra (~Socra@206.217.216.27)
[21:40:56] *** Quits: chaosite (~chaosite@user/chaosite) (Ping timeout: 256 seconds)
[21:42:16] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[21:42:18] *** Joins: djapo (~archangel@user/djapo)
[21:42:24] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[21:43:20] *** Joins: yaalon (~yaalon@201.171.82.74.dsl.dyn.telnor.net)
[21:43:59] *** Quits: brumla (~brumla@cst-prg-14-83.cust.vodafone.cz) (Quit: Client closed)
[21:44:16] *** Joins: jtck (~jtck@222.164.13.173)
[21:44:25] *** Quits: rsx (~dummy@ppp-188-174-150-120.dynamic.mnet-online.de) (Quit: rsx)
[21:45:04] *** Quits: venmx (~albasawa@5.148.85.162) (Ping timeout: 272 seconds)
[21:45:08] *** Joins: matsaman (~matsaman@user/matsaman)
[21:45:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:45:23] *** Joins: Gud (~Gud@user/gud)
[21:45:24] *** Joins: jacktar (~whiteshad@gateway/tor-sasl/jacktar)
[21:45:44] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[21:45:50] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[21:47:14] *** Quits: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs) (Ping timeout: 265 seconds)
[21:48:24] *** Joins: Guest6914 (~bsdboy@redhat/psirt/Deesl)
[21:48:30] *** Guest6914 is now known as Deesl
[21:48:50] <Gud> Hello, I am trying to figure out how to build a sqlite SELECT query with a where clause based on a dict. Any suggestions?
[21:49:31] *** Quits: veek (~veek@117.192.20.173) (Quit: Leaving)
[21:49:58] *** Joins: zmo (~guyzmo@2001:bc8:6010:211:5054:ff:fe00:e941)
[21:49:59] *** Quits: janemba (~janemba@185.107.80.152) (Read error: Connection reset by peer)
[21:50:08] *** Quits: justinf210 (~justinf21@41.sub-97-43-194.myvzw.com) (Ping timeout: 265 seconds)
[21:50:19] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Quit: Bye Bye)
[21:50:20] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Ping timeout: 258 seconds)
[21:50:24] *** Joins: janemba (~janemba@94.204.254.193)
[21:50:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[21:50:55] *** Joins: justinf210 (~justinf21@64.sub-97-44-0.myvzw.com)
[21:51:05] *** Joins: jacktar (~whiteshad@gateway/tor-sasl/jacktar)
[21:52:05] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[21:52:45] *** Joins: Betal (~Beta@user/betal)
[21:52:54] *** Quits: yaalon (~yaalon@201.171.82.74.dsl.dyn.telnor.net) (Remote host closed the connection)
[21:53:12] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[21:53:28] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 268 seconds)
[21:53:53] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[21:55:13] *** Joins: mixfix41 (~homefame@user/mixfix41)
[21:56:13] <AhmedAmerican> Gud: what do you mean by `Based on a dictionary` is it within the row itself ?
[21:56:18] *** Joins: yaalon (~yaalon@201.171.82.74.dsl.dyn.telnor.net)
[21:57:23] <Gud> AhmedAmerican: what I have is a dictionary that I would like to use as a filter
[21:57:51] <Gud> so sometimes it would be WHERE name=Ahmed AND nationality=American butsometimes only WHERE name=Ahmed
[21:59:28] <Gud> basically, WHERE key=value AND key=value and sometimes only WHERE key=value
[21:59:35] *** Joins: Pickchea (~private@user/pickchea)
[22:02:02] <AhmedAmerican> Gud: in this case you can use `OR` operator if the first condition not satisfied
[22:04:18] *** Quits: yaalon (~yaalon@201.171.82.74.dsl.dyn.telnor.net) ()
[22:04:19] <Gud> the dictionary is changing, I would want all conditions to be met
[22:04:57] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:05:25] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[22:05:54] <AhmedAmerican> Gud: is it one dict or list of dict?
[22:06:20] <Gud> its a dict
[22:06:23] *** Quits: alexyov (~alexyov@79.124.0.2) (Quit: alexyov)
[22:07:05] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[22:07:08] *** Joins: alexyov (~alexyov@84.22.6.244)
[22:09:56] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[22:11:00] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[22:11:30] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 240 seconds)
[22:11:42] *** Joins: magla (~gelignite@55d49c7c.access.ecotel.net)
[22:13:19] *** Joins: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at)
[22:14:29] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[22:14:53] *** Joins: nickodd (~nickodd@user/nickodd)
[22:15:22] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[22:15:35] *** Quits: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at) (Client Quit)
[22:15:51] *** Quits: jphaynes66 (~TerraFirm@91.90.126.9) (Quit: Bye y'all.)
[22:16:34] *** Quits: rendar (~rendar@user/rendar) ()
[22:18:04] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[22:18:31] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[22:19:33] *** Quits: greedom (~greedom@2001:16b8:2ee4:8400:b4fd:5a5d:cc74:379f) (Remote host closed the connection)
[22:19:49] *** Joins: waynew (~wayne@user/waynew)
[22:19:54] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[22:19:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:21:16] *** Quits: waynew_ (~wayne@user/waynew) (Read error: Connection reset by peer)
[22:21:46] *** Joins: srilyk (~wayne@user/waynew)
[22:22:26] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[22:23:14] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Remote host closed the connection)
[22:23:34] <AhmedAmerican> Gud: it's a bit tricky. but as for the first part, would be `"SELECT {} WHERE ".format(", ".join(mydict.keys()))` and then you've to create a function which return `WHERE k = v` if the dict contain single item and `k = v AND k = v` when the dict contain more than 1 item
[22:23:47] *** Quits: justinf210 (~justinf21@64.sub-97-44-0.myvzw.com) (Remote host closed the connection)
[22:24:03] *** Joins: justinf210 (~justinf21@64.sub-97-44-0.myvzw.com)
[22:25:07] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[22:26:03] *** Quits: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[22:26:03] *** Joins: kostkon__ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[22:26:14] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[22:27:46] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[22:31:16] <supakeen> And now you'll have SQL injection.
[22:31:23] *** Quits: mike18 (~geri@216.200.232.252) (Ping timeout: 268 seconds)
[22:31:42] <AhmedAmerican> supakeen: lol seems that's the goal
[22:31:54] <supakeen> I don't think that's the goal no.
[22:32:01] <supakeen> The goal is to query arbitrary columns.
[22:33:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[22:33:16] <AhmedAmerican> make sense :D since burp suite intruder have a BApp plugin which sort such kind of loops over columns
[22:33:19] <Adois> it turned out that the code was far from complete. yet I dont see why I still get these errors when i.e. the input of the second error is shown perfectly fine with this code; https://bpa.st/L6HQ
[22:33:30] <supakeen> Gud: Where does the dictionary come from?
[22:33:56] *** Quits: TFKyle (~kyle@64.201.205.70) (Quit: :q!)
[22:34:16] *** Quits: spinningCat (~qweasdzxc@about/web/muscles) (Killed (NickServ (GHOST command used by spinningcat_!~spinningc@94.54.233.244)))
[22:35:49] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[22:37:11] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[22:37:40] *** Quits: Blankspace (~abcd@user/blankspace) (Quit: why did you ban me)
[22:37:49] *** Adois is now known as Adoi
[22:39:31] *** Joins: traptrip (trip@brigaid.xs4all.nl)
[22:40:17] *** Quits: srilyk (~wayne@user/waynew) (Read error: Connection reset by peer)
[22:40:18] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[22:40:26] *** Joins: waynew (~wayne@user/waynew)
[22:43:37] *** Joins: daniel-k (~daniel-k@192.241.135.211)
[22:46:20] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[22:47:01] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[22:47:29] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[22:48:10] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[22:49:46] <AhmedAmerican> graingert: https://stackoverflow.com/questions/68198738/jinja2-email-template what do you think ? shall i attach an `CSS` for the template ?
[22:49:47] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[22:49:58] *** Joins: srilyk (~wayne@user/waynew)
[22:50:16] *** Joins: be3uykpy (~be3uykpy@141.226.9.247)
[22:50:21] * be3uykpy waves
[22:50:42] *** Joins: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at)
[22:51:31] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 265 seconds)
[22:51:34] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 272 seconds)
[22:52:10] *** Joins: chaosite (~chaosite@user/chaosite)
[22:53:15] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:53:17] *** Quits: rhax (~yannick@user/rhax) (Quit: Leaving)
[22:53:54] *** Joins: waynew (~wayne@user/waynew)
[22:54:16] *** Joins: gruuf (~gruuf@94.31.99.29)
[22:54:30] <Payam> I use multithreading and I see that a list is changed constantly
[22:54:41] <Payam> IT is like threads are fighting for that list
[22:54:44] <philipp64|work> tims: well, the creds are considered secure if we have a certificate bundle for the server (since the server uses a self-signed cert)…
[22:54:57] *** Joins: Roey (~Roey@user/Roey)
[22:55:23] *** Quits: justinf210 (~justinf21@64.sub-97-44-0.myvzw.com) (Ping timeout: 265 seconds)
[22:56:05] <Payam> is it possible to have a instance of a function in python?
[22:56:42] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 240 seconds)
[22:56:50] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 265 seconds)
[22:57:32] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[22:58:11] <ChrisWarrick> Payam: what do you mean?
[22:58:13] <Payam> This is the code. https://bpa.st/USFQ I call this function in different threads using threadpool
[22:58:27] <Payam> but I see that the list dep_version is getting huge
[22:58:31] <Payam> with None values
[22:59:00] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[22:59:47] *** Joins: infernix (nix@2a02:22a0:bbb1:d500::2)
[23:00:16] <ChrisWarrick> Payam: I’m not sure I understand
[23:01:19] <Payam> a second
[23:02:40] *** Joins: Intruder777 (~Intruder7@user/intruder777)
[23:02:59] *** Parts: Intruder777 (~Intruder7@user/intruder777) ()
[23:03:05] *** Joins: mrlemke_ (~mrlemke@208.74.105.200)
[23:03:07] <Payam> https://bpa.st/MT6Q ChrisWarrick
[23:03:46] *** Joins: gorilla (~s34n@104.152.131.130)
[23:04:01] <Payam> so in line 3 you get a list of lists
[23:04:11] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Quit: brylie)
[23:04:20] <nedbat> Payam: you can put functions into lists if that is what you need
[23:04:28] <Payam> in line 7 you want o perform operation for each element
[23:04:40] <graingert> AhmedAmerican: Email CSS is a nightmare. I think tables are recommended
[23:04:45] <Payam> and then you perform the function paralelly
[23:04:51] <gorilla> Is it common to keep a package out of pip and require anaconda?
[23:04:57] <ChrisWarrick> gorilla: no, it’s a bad idea
[23:05:03] <graingert> Try asking in #javascript or #css ?
[23:05:12] <Payam> functions in a list?
[23:05:35] <graingert> Yeah like fns = [fn, fn2]
[23:05:36] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[23:05:37] <AhmedAmerican> @graingert you meant `HTML` table for the images ?
[23:05:44] <graingert> for f in fns: f()
[23:05:47] <Payam> will the functions's local variable share the same value?
[23:05:56] <ChrisWarrick> Payam: regarding         # Can not await any gitlab api functions. We go with threads.   — you can find a more reasonable library, or do the gitlab api calls yourself
[23:06:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:06:07] <ChrisWarrick> Payam: regarding local variables — no, they won’t be shared
[23:06:17] <graingert> There's a PR to port gitlab to httpx
[23:06:20] <gorilla> I am not a pythoner, but anaconda makes me very skitish
[23:06:26] <graingert> gitlab's python API*
[23:07:10] <Payam> so I can create a list of that function and change the executor.map to executor.submit
[23:07:55] <gorilla> If a package insists on anaconda, I guess it's best to leave them alone? Not worth the trouble to work around anaconda?
[23:08:30] <gorilla> * sorry, s/anaconda/conda/
[23:08:36] <ChrisWarrick> gorilla: I would definitely say so
[23:08:53] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[23:08:54] <AhmedAmerican> Payam: `[executor.submit(fn, arg) for arg in args]`
[23:09:19] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[23:09:28] <AhmedAmerican> ^ then loop over futures `result()`
[23:09:42] <Payam> AhmedAmerican yes. but it should be a list of functions so that variables do not share the same value of local variables. right?
[23:10:12] *** Joins: pnoud (~pnoud@user/pnoud)
[23:10:14] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[23:10:58] *** Joins: djapo (~archangel@user/djapo)
[23:11:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[23:11:22] <AhmedAmerican> Payam: you looking to execute multiple functions in once under threads ?
[23:11:34] <Payam> yes
[23:11:40] <Payam> no
[23:11:50] <Payam> same function with different inputs under multiple threads
[23:11:52] <AhmedAmerican> a single func with different args ?
[23:11:58] <Payam> yes
[23:12:07] <AhmedAmerican> so you just iterate over the args
[23:12:13] <AhmedAmerican> let me share a simple example for you.
[23:12:14] <AhmedAmerican> hold on.
[23:12:52] *** Joins: srilyk (~wayne@user/waynew)
[23:13:08] *** Quits: anas (~anas@196.235.97.18) (Ping timeout: 258 seconds)
[23:13:12] *** Joins: mjsir911 (~bnc@user/mjsir911)
[23:13:54] <Payam> the function has multiple imputs
[23:14:04] <Payam> wait
[23:14:21] *** Quits: rememberYou (~someone@user/rememberyou) (Read error: Connection reset by peer)
[23:14:24] <AhmedAmerican> Payam: https://bpa.st/FRDQ
[23:14:46] <Payam> what if you had 2 inputs argument
[23:14:56] <Payam> would it be .., i, d)
[23:15:38] <AhmedAmerican> Payam: you can share easily, https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Executor.submit
[23:15:47] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 268 seconds)
[23:15:53] <Payam> nice
[23:15:54] <Payam> let me try
[23:16:02] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Quit: szymon)
[23:16:07] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[23:16:49] <Payam> the result() does print when there is something to return?
[23:17:15] *** Quits: se-sm-ca (~sean@user/se-sm-ca) (Ping timeout: 256 seconds)
[23:17:48] <twobitsprite> in Celery, I'm a bit confused about the "celery work --task-events" option... does that just log incoming task events, or does it have a more functional purpose?
[23:18:03] *** Joins: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs)
[23:18:24] <AhmedAmerican> Payam: within worker, you should return the output of your function, and later you call `future.result()` to get the output of it.
[23:18:41] <AhmedAmerican> Payam: https://bpa.st/J3VQ
[23:18:49] <twobitsprite> er, "celery worker --task-events"
[23:20:27] *** Joins: waynew (~wayne@user/waynew)
[23:22:24] *** Joins: waynew_ (~wayne@user/waynew)
[23:22:47] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My Mac Pro has gone to sleep. ZZZzzz…)
[23:22:50] <Payam> but you have to return things?
[23:23:34] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 252 seconds)
[23:24:24] *** Joins: node1 (~node1@user/node1)
[23:24:30] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 272 seconds)
[23:24:39] *** Joins: anas (~anas@196.235.97.18)
[23:25:30] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 240 seconds)
[23:26:30] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[23:27:54] *** Quits: notevil (~notevil@user/notevil) (Quit: ZNC - http://znc.in)
[23:28:03] *** Quits: Tempesta (Tempesta@user/tempesta) (Remote host closed the connection)
[23:28:07] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Ping timeout: 246 seconds)
[23:28:08] *** Joins: notevil (notevil@user/notevil)
[23:29:26] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[23:30:09] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[23:30:16] *** Joins: pwnd_sfw4 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[23:30:57] *** Joins: tspng (~tspng@80-218-192-223.dclient.hispeed.ch)
[23:31:04] *** Joins: wodim (~kvirc@2001:470:26:90:f802:8ddf:a2d1:f7b5)
[23:31:24] <Payam> what is a except with out specifing the exception?
[23:31:24] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[23:31:25] *** pwnd_sfw4 is now known as pwnd_sfw
[23:31:44] <grym> Payam: dangerous
[23:31:48] <wodim> hello. (datetime.datetime.now().replace(minute=59) - datetime.datetime.now()).seconds - why does the return value of this have a resolution of minutes?
[23:32:04] <TheHermann> is popen deprecated?
[23:32:23] <grym> TheHermann: no, there are just lots of convenience methods on top of it now
[23:32:55] <KirkMcDonald> Payam: Catches all exceptions.
[23:33:02] *** Joins: torandu (~sean@90.222.17.57)
[23:33:04] <Payam> which is bad?
[23:33:32] <KirkMcDonald> Payam: You almost never want to get more general than 'except Exception:'
[23:33:42] <Payam> so except Exception is actually the same as except: ?
[23:33:48] <Payam> ah
[23:33:52] <KirkMcDonald> No. Because Exception is a subclass of BaseException.
[23:34:31] <KirkMcDonald> And, generally, it's a bad idea to catch the *other* subclasses of BaseException.
[23:34:37] <grym> and you're not meant to subclass baseexception yourself
[23:35:04] <KirkMcDonald> Namely, SystemExit, KeyboardInterrupt, and GeneratorExit.
[23:35:21] *** Joins: Dyresen (bjorn@128.39.36.51)
[23:35:35] <grym> "hey, C-c doesn't work!"
[23:35:44] <Payam> time for me to have a beer
[23:35:47] *** Joins: topoi (~topoi@user/topoi)
[23:35:56] <Payam> gotta go to the pub
[23:35:58] <grym> time to load up the kill gun with a -9
[23:36:12] <KirkMcDonald> grym: Ah, SIGTERM would still work.
[23:36:12] *** Joins: lukka5_ (~lukka5@246-60-231-201.fibertel.com.ar)
[23:36:20] <grym> spoilsport
[23:36:45] <topoi> Hopefully not to offtopic: Is someone using emacs? If so, how do you indent one paragraph evenly if you decide to nest something?
[23:36:55] <grym> (extremely tangentially, i recently discovered that fzf provides autocompletion for kill invocations)
[23:37:25] <grym> topoi: "where to break lines nicely" is one of those problems that is deceptively very hard
[23:37:40] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[23:38:17] <grym> topoi: possibly M-q, (but you should ask in #emacs)
[23:38:19] *** Quits: notevil (notevil@user/notevil) (Quit: ZNC - http://znc.in)
[23:38:37] *** Joins: notevil (notevil@user/notevil)
[23:38:42] *** Joins: test9753 (~test9753@117.217.238.29)
[23:39:34] *** Joins: thiras (~thiras@user/thiras)
[23:39:57] <topoi> grym: I often write some code and then decide to enclose it in a function, so everything has to be 1 step deeper nested.
[23:41:05] <topoi> grym: You are apparently right regarding the channel; not sure, why #python came into my mind first. :)
[23:42:02] <grym> must be the # -*-  :)
[23:42:18] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 240 seconds)
[23:45:01] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 256 seconds)
[23:45:03] *** Quits: kmh (~kmh@p200300df5f069e00e4c314caf78672dd.dip0.t-ipconnect.de) (Quit: Leaving)
[23:48:38] *** Joins: jazzy (~jaziz@2600:380:4542:186:d4b:fa38:d4e3:e7e5)
[23:48:54] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:49:18] *** Joins: waynew (~wayne@user/waynew)
[23:49:20] *** Quits: waynew_ (~wayne@user/waynew) (Read error: Connection reset by peer)
[23:49:54] *** Joins: srilyk (~wayne@user/waynew)
[23:50:46] *** Joins: smol (~smol@user/smol)
[23:50:56] *** Quits: rubberd0g (~kha0s@p5dc58f39.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[23:51:02] *** Quits: smol (~smol@user/smol) (Remote host closed the connection)
[23:51:06] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[23:53:30] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 240 seconds)
[23:53:44] *** Joins: thurs6 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[23:54:22] *** Quits: thurs6 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[23:54:48] *** Joins: thurs0 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[23:55:08] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[23:55:08] *** thurs0 is now known as thurs
[23:55:36] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:56:30] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[23:57:09] *** Joins: Tempesta (Tempesta@user/tempesta)
[23:57:22] *** Joins: darksun (~darksun@user/darksun)
[23:57:48] *** Joins: noarb (~noarb@user/noarb)
[23:58:07] *** Joins: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net)
[23:58:49] *** Quits: bsdbandit01 (~bsdbandit@wsip-70-164-45-56.dc.dc.cox.net) (Read error: Connection reset by peer)
[23:58:50] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[23:59:30] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[23:59:54] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
