[00:02:11] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:09:26] *** Quits: emacsomancer (~emacsoman@c-174-52-88-123.hsd1.ut.comcast.net) (Read error: Connection reset by peer)
[00:10:19] *** Joins: emacsomancer (~emacsoman@c-174-52-88-123.hsd1.ut.comcast.net)
[00:19:15] *** Quits: emacsomancer (~emacsoman@c-174-52-88-123.hsd1.ut.comcast.net) (Read error: Connection reset by peer)
[00:20:08] *** Joins: emacsomancer (~emacsoman@c-174-52-88-123.hsd1.ut.comcast.net)
[00:21:09] *** Joins: slant (~ssnatt@187.232.49.40)
[00:24:38] *** Joins: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com)
[00:28:42] *** Quits: arca0 (~tesuji@91.193.4.124) (Quit: WeeChat 3.1)
[00:30:16] *** Quits: Tolstoy (~Keith@97-120-23-14.ptld.qwest.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:41:49] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:45:06] *** Quits: slant (~ssnatt@187.232.49.40) (Ping timeout: 240 seconds)
[00:49:34] *** Joins: struchu (~struchu@staticline-31-183-186-122.toya.net.pl)
[00:49:51] *** Joins: Tolstoy (~Keith@97-120-23-14.ptld.qwest.net)
[00:51:06] *** Quits: Snaffu (Snaffu@gateway/vpn/protonvpn/snaffu) (Ping timeout: 240 seconds)
[00:57:48] *** Quits: Tolstoy (~Keith@97-120-23-14.ptld.qwest.net) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:07:34] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[01:11:30] *** Quits: GrayArea_ (~cpd@46.246.122.120) (Ping timeout: 268 seconds)
[01:13:08] *** Joins: lunik1 (~lunik1@cpc77339-stav19-2-0-cust1016.17-3.cable.virginm.net)
[01:29:30] *** Quits: struchu (~struchu@staticline-31-183-186-122.toya.net.pl) (Ping timeout: 240 seconds)
[01:40:57] *** Joins: Snaffu (Snaffu@gateway/vpn/protonvpn/snaffu)
[01:51:00] *** Quits: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) (Read error: Connection reset by peer)
[02:00:08] *** Joins: slant (~ssnatt@2806:103e:2:d9d0:a148:9318:86f1:4bab)
[02:04:55] *** Quits: Snaffu (Snaffu@gateway/vpn/protonvpn/snaffu) (Ping timeout: 246 seconds)
[02:19:49] *** Quits: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie) (Ping timeout: 256 seconds)
[02:24:26] *** Joins: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie)
[02:26:34] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[02:26:55] *** Quits: libertyprime (~libertypr@124.197.60.232) (Ping timeout: 258 seconds)
[02:30:46] *** Joins: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie)
[02:32:20] *** Quits: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie) (Read error: Connection reset by peer)
[02:32:46] *** Joins: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie)
[02:33:00] *** Joins: thmswu (~thmswu@user/thmswu)
[02:36:12] *** Quits: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie) (Ping timeout: 272 seconds)
[02:36:51] *** Joins: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie)
[02:38:09] *** Quits: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie) (Read error: Connection reset by peer)
[02:38:15] *** Quits: mefesto (~mefesto@072-238-044-125.res.spectrum.com) (Quit: Leaving)
[02:38:35] *** Joins: pinage404 (~pinage404@2001:470:69fc:105::25c)
[02:38:35] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[02:38:35] *** Joins: Asbjrn[m] (~asbjornol@2001:470:69fc:105::40b)
[02:38:35] *** Joins: nazarii[m] (~nazariim]@2001:470:69fc:105::63a)
[02:38:47] *** Joins: nihilipster[m] (~nihilipst@2001:470:69fc:105::720)
[02:38:47] *** Joins: yeik-the-spik[m] (~yeik-the-@2001:470:69fc:105::6152)
[02:41:34] *** Joins: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie)
[02:41:52] *** Quits: thmswu (~thmswu@user/thmswu) (Quit: node-irc says goodbye)
[02:41:52] *** Quits: nazarii[m] (~nazariim]@2001:470:69fc:105::63a) (Quit: node-irc says goodbye)
[02:41:54] *** Quits: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie) (Ping timeout: 240 seconds)
[02:41:56] *** Quits: Asbjrn[m] (~asbjornol@2001:470:69fc:105::40b) (Quit: node-irc says goodbye)
[02:42:16] *** Joins: son0p (~ff@181.136.122.143)
[02:42:43] *** Joins: libertyprime (~libertypr@124.197.60.232)
[02:43:39] *** Quits: punnie (~punniemat@2001:470:69fc:105::1193) (Quit: node-irc says goodbye)
[02:43:41] *** Quits: pinage404 (~pinage404@2001:470:69fc:105::25c) (Quit: node-irc says goodbye)
[02:46:25] *** Joins: mefesto (~mefesto@072-238-044-125.res.spectrum.com)
[02:48:16] *** Joins: dadinn (~DADINN@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net)
[02:49:29] *** Joins: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie)
[02:50:25] *** Quits: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie) (Ping timeout: 246 seconds)
[02:50:39] *** Quits: nihilipster[m] (~nihilipst@2001:470:69fc:105::720) (Quit: node-irc says goodbye)
[02:50:39] *** Quits: yeik-the-spik[m] (~yeik-the-@2001:470:69fc:105::6152) (Quit: node-irc says goodbye)
[02:51:45] *** Quits: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie) (Read error: Connection reset by peer)
[02:52:43] *** Joins: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie)
[02:54:44] *** Joins: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie)
[02:56:00] *** Joins: harrigan| (~harrigan@ptr-93-89-242-202.ip.airwire.ie)
[02:56:03] *** Quits: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie) (Read error: Connection reset by peer)
[02:58:04] *** Joins: thmswu (~thmswu@user/thmswu)
[02:59:29] *** Quits: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie) (Ping timeout: 256 seconds)
[02:59:44] *** Joins: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie)
[03:03:27] *** Quits: harrigan| (~harrigan@ptr-93-89-242-202.ip.airwire.ie) (Ping timeout: 256 seconds)
[03:03:45] *** Joins: pinage404 (~pinage404@2001:470:69fc:105::25c)
[03:03:45] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[03:03:45] *** Joins: Asbjrn[m] (~asbjornol@2001:470:69fc:105::40b)
[03:03:45] *** Joins: nazarii[m] (~nazariim]@2001:470:69fc:105::63a)
[03:03:57] *** Joins: yeik-the-spik[m] (~yeik-the-@2001:470:69fc:105::6152)
[03:03:57] *** Joins: nihilipster[m] (~nihilipst@2001:470:69fc:105::720)
[03:09:35] *** Quits: lunik1 (~lunik1@cpc77339-stav19-2-0-cust1016.17-3.cable.virginm.net) (Quit: :x)
[03:13:01] *** Quits: mefesto (~mefesto@072-238-044-125.res.spectrum.com) (Quit: Leaving)
[03:24:08] *** Quits: slant (~ssnatt@2806:103e:2:d9d0:a148:9318:86f1:4bab) (Remote host closed the connection)
[03:24:22] *** Joins: slant (~ssnatt@2806:103e:2:d9d0:1c5b:2a58:5dc9:8e5d)
[03:25:11] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[03:49:06] *** Quits: libertyprime (~libertypr@124.197.60.232) (Ping timeout: 240 seconds)
[03:52:36] *** Joins: hendursaga (~weechat@user/hendursaga)
[03:58:48] *** Joins: mefesto (~mefesto@072-238-044-125.res.spectrum.com)
[04:13:05] *** Quits: slant (~ssnatt@2806:103e:2:d9d0:1c5b:2a58:5dc9:8e5d) (Remote host closed the connection)
[04:13:18] *** Joins: slant (~ssnatt@2806:103e:2:d9d0:93a4:8f7e:bb30:403c)
[04:18:02] *** Joins: aking (~aking@204.237.1.167)
[04:19:33] *** Parts: aking (~aking@204.237.1.167) ()
[04:23:15] *** Quits: v3ga (~v3ga@2600:1702:ad0:3b90::16) (Ping timeout: 272 seconds)
[04:24:29] *** Joins: aking (~aking@204.237.1.167)
[04:28:17] *** Joins: kaisyu (uid37155@id-37155.charlton.irccloud.com)
[04:29:22] *** Quits: slant (~ssnatt@2806:103e:2:d9d0:93a4:8f7e:bb30:403c) (Remote host closed the connection)
[04:29:34] *** Joins: slant (~ssnatt@2806:103e:2:d9d0:fba6:a35f:3eb2:2c46)
[04:39:04] *** Quits: dadinn (~DADINN@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net) (Ping timeout: 272 seconds)
[04:39:18] *** Quits: slant (~ssnatt@2806:103e:2:d9d0:fba6:a35f:3eb2:2c46) (Remote host closed the connection)
[04:39:56] *** Joins: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net)
[04:43:30] *** Quits: aking (~aking@204.237.1.167) (Quit: Ping timeout (120 seconds))
[05:14:04] *** Joins: lunik1 (~lunik1@cpc77339-stav19-2-0-cust1016.17-3.cable.virginm.net)
[05:49:37] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-48.prtc.net)
[05:59:35] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-48.prtc.net) (Quit: Client closed)
[06:00:06] *** Quits: EwS (~ews@162-234-255-206.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 268 seconds)
[06:03:30] *** Quits: son0p (~ff@181.136.122.143) (Ping timeout: 240 seconds)
[06:24:24] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[06:38:04] *** Quits: kaisyu (uid37155@id-37155.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[06:50:49] *** Joins: libertyprime (~libertypr@222-154-245-111.adsl.xtra.co.nz)
[07:19:56] *** Quits: archenoth (~archenoth@S0106889e6827f474.cg.shawcable.net) (Ping timeout: 272 seconds)
[07:53:35] *** Quits: libertyprime (~libertypr@222-154-245-111.adsl.xtra.co.nz) (Ping timeout: 256 seconds)
[07:55:15] *** Joins: libertyprime (~libertypr@219-89-121-197.adsl.xtra.co.nz)
[08:35:54] *** Joins: EwS (~ews@162-234-255-206.lightspeed.sntcca.sbcglobal.net)
[08:53:33] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_)))
[08:53:38] *** Joins: DasBrain_ (~DasBrain@user/dasbrain)
[08:54:00] *** DasBrain_ is now known as DasBrain
[09:13:35] *** Quits: jonys (~jonys@user/jonys) (Read error: Connection reset by peer)
[09:14:14] *** Joins: jonys (~jonys@user/jonys)
[09:19:13] *** Joins: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com)
[09:29:46] *** Quits: silasfox (~sbv@2001-4dd1-e783-0-bfa3-11b8-a81d-dda9.ipv6dyn.netcologne.de) (Ping timeout: 268 seconds)
[09:31:13] *** Joins: silasfox (~sbv@2001-4dd1-e6dc-0-1565-bb31-21a9-ccc5.ipv6dyn.netcologne.de)
[09:33:58] *** Quits: sailorCa` (~user@p200300f6a70c9d24a12711a517b25641.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[09:35:49] *** Joins: sailorCa` (~user@p200300f6a70c9d5f4de40f7ba78a9122.dip0.t-ipconnect.de)
[09:51:20] *** Joins: struchu (~struchu@staticline-31-183-186-122.toya.net.pl)
[09:58:49] *** Quits: libertyprime (~libertypr@219-89-121-197.adsl.xtra.co.nz) (Ping timeout: 256 seconds)
[09:59:43] *** Joins: archenoth (~archenoth@s0106889e6827f474.cg.shawcable.net)
[10:00:46] *** Joins: libertyprime (~libertypr@219-89-121-197.adsl.xtra.co.nz)
[10:11:31] *** Quits: libertyprime (~libertypr@219-89-121-197.adsl.xtra.co.nz) (Quit: leaving)
[10:21:44] *** Quits: jonys (~jonys@user/jonys) (Read error: Connection reset by peer)
[10:22:55] *** Quits: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) (Remote host closed the connection)
[10:28:18] *** Quits: silasfox (~sbv@2001-4dd1-e6dc-0-1565-bb31-21a9-ccc5.ipv6dyn.netcologne.de) (Ping timeout: 240 seconds)
[10:30:28] *** Joins: silasfox (~sbv@2001-4dd1-e783-0-bfa3-11b8-a81d-dda9.ipv6dyn.netcologne.de)
[10:40:48] *** Joins: libertyprime (~libertypr@124.197.60.232)
[10:41:20] *** Quits: struchu (~struchu@staticline-31-183-186-122.toya.net.pl) (Ping timeout: 272 seconds)
[10:42:39] *** Joins: struchu (~struchu@staticline-31-183-186-122.toya.net.pl)
[11:08:16] *** Joins: jonys (~jonys@user/jonys)
[11:44:13] *** Quits: EwS (~ews@162-234-255-206.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[12:00:12] *** Quits: nivag (~gavin@103-76-144-176.ip.cis.gen.nz) (Remote host closed the connection)
[12:11:32] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:12:55] *** Joins: dadinn (~DADINN@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net)
[12:37:20] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:45] *** Quits: dadinn (~DADINN@cpc87065-finc18-2-0-cust67.4-2.cable.virginm.net) (Quit: leaving)
[12:40:05] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:44:30] *** Joins: harrigan- (~harrigan@ptr-93-89-242-202.ip.airwire.ie)
[12:44:43] *** Quits: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie) (Read error: Connection reset by peer)
[12:44:44] *** harrigan- is now known as harrigan
[12:47:48] *** Joins: harrigan- (~harrigan@ptr-93-89-242-235.ip.airwire.ie)
[12:48:13] *** Quits: lad (~lad@user/lad) (Ping timeout: 246 seconds)
[12:49:54] *** Quits: harrigan (~harrigan@ptr-93-89-242-202.ip.airwire.ie) (Ping timeout: 272 seconds)
[12:49:54] *** harrigan- is now known as harrigan
[13:07:16] *** Joins: egli (~user@nehebkau01.sbs.ch)
[13:33:27] *** Joins: op2 (~op@user/op2)
[13:41:42] *** Joins: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com)
[13:49:41] *** Joins: nivag (~gavin@103-76-144-176.ip.cis.gen.nz)
[14:19:35] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:28:48] *** Quits: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie) (Read error: Connection reset by peer)
[14:29:46] *** Joins: harrigan (~harrigan@ptr-93-89-242-235.ip.airwire.ie)
[14:35:45] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[14:42:48] *** Joins: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com)
[15:03:07] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:11:54] *** Joins: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com)
[15:18:24] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:18:49] *** Joins: xsperry (~as@user/xsperry)
[15:32:28] *** Joins: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com)
[15:41:04] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[16:24:45] *** Joins: Snaffu (Snaffu@gateway/vpn/protonvpn/snaffu)
[16:31:03] *** Joins: mwnaylor (~user@2601:5ce:4380:9590::fcf4)
[16:31:29] *** Quits: archenoth (~archenoth@s0106889e6827f474.cg.shawcable.net) (Remote host closed the connection)
[16:31:53] *** Joins: archenoth (~archenoth@S0106889e6827f474.cg.shawcable.net)
[16:41:46] <sobel> EdwardIII: could you attach a REPL to your browser to inspect your data?
[16:42:32] <EdwardIII> sobel: that's what i'm kind of looking around at
[16:42:46] <ridcully> this is most likely already happening since shadow or figwheel already run one
[16:42:48] <EdwardIII> sobel: it does have a browser-based repl, but i'm trying to figure out if i can sort of attach it _inside_ my app
[16:42:59] <EdwardIII> mmaybe i should just use figwheel
[16:43:06] <sobel> hendursa1: i looked into scraping with browser automation, and i got as far as thinking up a headless chrome running in docker, selenium, and the chrome debug API for scraping the pages
[16:43:18] <EdwardIII> i was just looking to keep it super simple as i was sort of learning (i.e. not jumping into react/om/reframe etc)
[16:44:10] <sobel> it's been a while but i seem to recall one of the tools injecting a little REPL GUI into page code but i think that's kinda suspect. i rather not mutate a running page that much.
[16:44:26] <ridcully> the hot-reload you get from figwheel/shadow-cljs makes it very convenient for development
[16:44:32] <sobel> i would try the Calva cljs extension today
[16:45:53] <EdwardIII> with just the basic cljsbuild it already automatically picks up code changes
[16:46:26] <ridcully> also for just deep insepction of data, something like portal or some better dev-tools (assuming there are clojure data browsers for your browser) could be "good enough"
[16:47:15] <EdwardIII> hmm
[16:47:18] <ridcully> i dont know cljsbuild.  the ones i mentioned have hot reload in your browser.  you change your code, the browser reloads with the new code
[16:47:19] <EdwardIII> all good thoughts thanks folks
[16:47:36] <EdwardIII> calva looks kind of married to vscode but i see some noise around using it with vim so i'll take a peep
[16:48:12] <sobel> Calva is totally married to VSCode
[16:48:29] <sobel> i haven't used it but the screencast i saw of the vim plugin in action looked awesome
[16:48:49] <EdwardIII> sobel: of the calva vim plugin?
[16:48:52] <sobel> vim plugin
[16:49:12] <sobel> wait, i didn't think calva had a vim plugin. pretty sure that's a VSCode-facing project
[16:49:13] <EdwardIII> sobel: sorry which vim plugin?
[16:51:49] *** Joins: yoonkn (~user@175.197.208.79)
[16:56:15] <sobel> conjure
[16:56:17] <sobel> https://asciinema.org/a/325517
[16:57:16] *** Joins: GrayArea_ (~cpd@46.246.122.179)
[16:58:52] <EdwardIII> sobel: cool, thanks! i have some paredit plugins in the past, i need to up my integration game though
[16:59:51] <EdwardIII> (just in general, regardless of this)
[17:00:07] <sobel> same
[17:00:13] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 246 seconds)
[17:00:16] <EdwardIII> i'm having a bit of a fight with file-based drop & drop. it seems almost randomly to either show the file in e.dataTransfer.files, e.dataTransfer.items, or neither
[17:00:31] <EdwardIII> i'm not sure if my issue is cljs, the browser, or what
[17:01:12] <EdwardIII> i'm also a bit sus that google closure is doing something funny under the hood
[17:07:55] <EdwardIII> (so actually e.getBrowserEvent()...). i'll try just using the built-in js functions like document.addEventListener instead maybe and see if that improves things (this is what i currently have: https://gist.github.com/EdwardIII/7587f3e8b571012e1c4213ead306f2d4#file-f-cljs-L27 )
[17:08:14] <EdwardIII> i get the feeling that maybe people are not really using clojurescript here much?
[17:17:22] <hendursa1> sobel: cool suggestions, I'll see what I can do
[17:19:41] *** Quits: mwnaylor (~user@2601:5ce:4380:9590::fcf4) (Ping timeout: 256 seconds)
[17:22:25] <ridcully> i am using it.  but i cant help you for your problem
[17:23:19] <ridcully> i am using figwheel or shadow and if i have a problem i add a js/console.log for JS things or a println for clojurey things
[17:23:34] <ridcully> and then investigate from there
[17:23:40] <ridcully> like the cavemens did ;)
[17:23:48] <EdwardIII> ridcully: do you find the js/cljs mismatch is a bit of a headache? or it doesn't really bother you?
[17:24:04] <ridcully> yeah the js part is bothersome ;)
[17:24:20] <EdwardIII> it's only a toy project i'm on, it needs probably like 30 lines of js so in the real world i should really just do it in js and shut up. but i'm kind of interested in playing around with cljs
[17:24:42] <EdwardIII> plus i like the idea of using edn
[17:24:55] <ridcully> i use cljs to have the powertools i am familiar with.  and then there is closure stuff i am confident about, that it works
[17:25:16] <ridcully> if nothing helps i fall back to npm stuff or plain js
[17:25:21] <ToxicFrog> My current project I started with clj+js on the same reasoning, and rapidly found that even for relatively small stuff being able to use cljs on the browser side and pass EDN back and forth makes my life a lot easier
[17:25:32] <ToxicFrog> Also, Reagent is a really nice API
[17:26:03] <ToxicFrog> And having that in turn pushed me to move more of the client into cljs with dynamically created HTML rather than HTML with JS wired up at a few points
[17:26:08] *** Quits: Snaffu (Snaffu@gateway/vpn/protonvpn/snaffu) (Ping timeout: 268 seconds)
[17:26:15] *** Joins: Snaffu_ (~Snaffu@c-174-60-107-126.hsd1.pa.comcast.net)
[17:28:20] <EdwardIII> ToxicFrog: ah this last point is very interesting. this is also the approach that rails takes
[17:28:26] <EdwardIII> well, they're all interesting :)
[17:46:55] <mayhew> I'm curious on peoples take on this: in imperative programming, it's widely believed that returning early from functions is a good idea because it allows us to pop context off of our mental stack and focus on the happy path for the rest of the function. Functional programming doesn't let us do this without macros/throwing/etc. Do people new to FP eventually get used to the lack of early returns?
[17:52:29] <turlando> (if (foo) bar (let [qux (quux)] (do-thing qux)))
[17:52:33] <turlando> is't bar an early return?
[17:53:17] <mayhew> in some sense yes, but not really
[17:54:16] <mayhew> from a syntactical perspective, you need to nest the rest of the function. Indentation increases. It doesn't feel like a "clean slate" like an early return does where there's no extra indentation.
[17:54:40] *** Joins: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net)
[17:55:10] *** Quits: struchu (~struchu@staticline-31-183-186-122.toya.net.pl) (Ping timeout: 272 seconds)
[17:56:15] <andreyorst> mayhew: in lisps code can be seen as a tree, but more importantly, can be traversed as a tree, so if you see the end of the branch, that's the end of the branc. `return` as a special form breaks this convention, as you can be in the middle of the branch and still return all the way back to outer tree
[17:56:27] <andreyorst> well, at least that's how I see this
[17:56:53] <turlando> ^ this for the philosophical point of view
[17:57:15] <turlando> For the practical point of view most of times you should just refactor your code into multiple smaller functions
[17:58:01] <andreyorst> common lisp has early returns tho
[17:58:25] <andreyorst> scheme kinda does too, with `call/cc`
[17:58:27] <mayhew> yeah, I get the everything is an expression thing. But I feel like I'm working around this fact rather than it helping me. Adding extra functions isn't free if like me you believe that inlined code is often a good thing, and naming things is hard.
[17:59:28] <andreyorst> there are patterns that allow early returns. Things like `reduce` for example can be terminated early with the call to `reduced`
[18:00:54] <turlando> andreyorst while Scheme's call/cc is a functional CPS (you can do impure things with it of course), Common Lisp has tagbody which is definitely not functional :)
[18:01:24] <turlando> I guess the question is more about functional style than language features
[18:01:50] <andreyorst> common lisp itself is not functional)
[18:02:05] *** Quits: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:07:38] <andreyorst> turlando: btw clojure also has tagbody :)
[18:08:10] <andreyorst> https://github.com/IGJoshua/farolero#other-control-flow
[18:09:34] * turlando is not sure what to say
[18:13:05] * andreyorst wispers: say that's a cool library you got there
[18:13:56] <selfsymmetric-mu> mayhew: Personally, yes, I've gotten used to it. It is good to understand that return statements are a kind of goto, in the sense that they perform a one-way transfer to a label. Many situations don't require early returns, because they don't have the "happy path" pattern. Some situations do, but they tend to be handled more fluidly, with purpose-specific constructs. For example, operating in the Either monad and do syntax in Ha
[18:13:56] <selfsymmetric-mu> feels like early returns because the syntactic sugar works out the same way. In Clojure one might use a threading operator. Functions in Clojure also tend to be smaller than something like Python, so you don't need early returns to escape nesting as much. So to summarize, more specific constructs tend to be preferred to an all-round early-return pattern, and the early-return pattern is a bit less useful anyway.
[18:15:07] <selfsymmetric-mu> mayhew: I think it's wise to recognize when you're working around a concept instead of grokking it. I agree that that's probably the case here. Good points about inlined code and naming things: you should look into `fn` statements and `letfn`.
[18:15:36] <selfsymmetric-mu> `fn` "expressions" rather. inline anonymous functions.
[18:24:14] <mayhew> selfsymmetric-mu: thanks for your insight! :)
[18:35:38] <EdwardIII> in our team people would frequently shoot each other in the foot with early return so i'd say it's a bit of a questionable tool oftentimes also
[18:46:03] <sobel> as a young C dev i learned to avoid early returns because they were implicated in most resource leaks
[18:55:33] *** Quits: xulfer (uid452788@id-452788.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[19:01:33] *** Joins: AWizzArd (~code@user/awizzard)
[19:33:26] <andreyorst> this may sound controversal, but I've preferred `goto` to early returns in C
[19:33:36] <wink> gotofail?
[19:33:54] <andreyorst> because `goto exit` is a single place in a function, where you can put all your uninitialization code
[19:34:42] <andreyorst> I've worked with SOC and micro controllers, tho, so there are various constrains when writing code
[19:36:28] <ridcully> if you have chains with many conditions, then maybe fmnoise/flow or something like this is for you
[19:38:08] <ridcully> turning processing chains/steps into something nicely readable, is something FP is quite capable off
[19:40:47] *** Joins: kurtis (~kurtismul@2603:9000:8e00:b6b5:2ce8:d258:9a09:3f81)
[19:46:44] <EdwardIII> fmnoise/flow looks quite nice
[19:48:15] <sobel> in early C i used do { ... } while (0) to ensure common function exit handling. i'm so glad i don't have to code like that anymore.
[19:49:16] *** Joins: noom (~noom@194.110.113.54)
[19:51:54] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (Quit: bye)
[19:52:31] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[19:56:55] <EdwardIII> is there something i don't understand about go/channels that would mean e.dataTransfer.files would be 0 length inside the (go ...), when it seems to be defined outside of it? https://gist.github.com/EdwardIII/72dda7052d1851d225d023e139ec5de4#file-ff-cljs-L46
[19:59:08] *** Quits: silasfox (~sbv@2001-4dd1-e783-0-bfa3-11b8-a81d-dda9.ipv6dyn.netcologne.de) (Quit: WeeChat 3.2)
[20:00:52] <sobel> i just noticed conjure supports a lot of languages, especially the ones i want to use the most
[20:13:53] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[20:27:20] *** Quits: noom (~noom@194.110.113.54) (Remote host closed the connection)
[20:29:52] <EdwardIII> hrm i switched to using an atom that triggers an event that does the upload, this seems to then make e be available and correct: https://gist.github.com/EdwardIII/72dda7052d1851d225d023e139ec5de4#file-ff-cljs-L10
[20:40:37] *** Quits: kurtis (~kurtismul@2603:9000:8e00:b6b5:2ce8:d258:9a09:3f81) (Changing host)
[20:40:37] *** Joins: kurtis (~kurtismul@user/kurtis)
[20:41:00] *** Joins: Tolstoy (~Keith@97-120-23-14.ptld.qwest.net)
[20:49:30] *** Quits: kurtis (~kurtismul@user/kurtis) (Ping timeout: 240 seconds)
[20:51:59] *** Joins: kurtis (~kurtismul@2603:9000:8e00:b6b5:2ce8:d258:9a09:3f81)
[20:53:23] <EdwardIII> stuck in a bit of a mental loop. i'm doing ["my-file" #js (upload-request :file)] because the underlying thing needs a js Blob object (this is a File object, but it inherits from Blob). but it's saying JavaScript literal must use map or vector notation
[21:03:59] *** Joins: son0p (~ff@181.136.122.143)
[21:07:26] *** Joins: seschwar (~seschwar@user/seschwar)
[21:08:29] *** Joins: wallymathieu (~wallymath@81-234-151-21-no94.tbcn.telia.com)
[21:09:36] <Para> EdwardIII: clj->js is probably the function you want? #js is for read/parse time iirc
[21:11:33] <EdwardIII> Para: hrm i think i was just majorly confused and #js or cljs-js is not right at all. the docs say you can just pass in a js blob object directly: https://github.com/r0man/cljs-http#content-type (def my-file (js/Blob. #js ["<h1>Hello</h1>"] #js {:type "text/html"})) i saw the #js and i was like "ah maybe that's what i'm missing" but no, it isn't relevant to my issue i think
[21:12:14] <Para> ah
[21:12:32] *** Joins: lad (~lad@user/lad)
[21:14:40] <EdwardIII> but it doesn't actually ever try to upload the binary data: https://gist.github.com/EdwardIII/ad7932af3ebf057b5d8127ec10a00a5e
[21:15:25] <EdwardIII> it includes the csrf token a-ok, it reads the file metadata ok (image/png, all good), but it doesn't actually upload the image binary
[21:16:21] <Para> Is that actually a channel producing value(s) or should you deref it?
[21:19:15] <EdwardIII> Para: hrm sorry i  don't understand. do you mean my input, ["my-file" (upload-request :file) ] ?
[21:19:52] <EdwardIII> the conents of upload-request are: {:file #object[File [object File]], :csrf-token /0/9UcJilaQXp3EVVfLm5HrU16venLQ/Fbaddbng32/KzmJC5nGDX0ibmR2OuWNqJWDxaZlHK2h/HAZj}
[21:22:20] <Para> I'm struggling to understand anything at this moment, to be honest - I had a full day of meetings with customers' higher-ups talking about all kinds of complex business issues which really isn't my thing and I feel like a baked potato currently :D
[21:22:51] <EdwardIII> :) i know how that can be
[21:23:08] <EdwardIII> customers' higher-ups are even worse than our own higher-ups eh
[21:23:58] <Para> In my case that's debatable. At least they're two different flavors.
[21:25:37] *** Quits: kurtis (~kurtismul@2603:9000:8e00:b6b5:2ce8:d258:9a09:3f81) (Ping timeout: 256 seconds)
[21:26:30] <EdwardIII> yum
[21:27:02] *** Joins: kurtis (~kurtismul@2603:9000:8e00:b6b5:2ce8:d258:9a09:3f81)
[21:35:30] *** Quits: kurtis (~kurtismul@2603:9000:8e00:b6b5:2ce8:d258:9a09:3f81) (Ping timeout: 240 seconds)
[21:36:50] *** Quits: Snaffu_ (~Snaffu@c-174-60-107-126.hsd1.pa.comcast.net) (Ping timeout: 272 seconds)
[21:37:10] *** Joins: kurtis (~kurtismul@2603:9000:8e00:b6b5:2ce8:d258:9a09:3f81)
[21:42:37] *** Quits: kurtis (~kurtismul@2603:9000:8e00:b6b5:2ce8:d258:9a09:3f81) (Ping timeout: 256 seconds)
[21:43:02] *** Joins: kurtis (~kurtismul@2603:9000:8e00:b6b5:2ce8:d258:9a09:3f81)
[21:47:06] *** Quits: kurtis (~kurtismul@2603:9000:8e00:b6b5:2ce8:d258:9a09:3f81) (Ping timeout: 240 seconds)
[21:53:22] <EdwardIII> argh what the hell, the lib was working fine all along. it's just that i had typoed the field name, and i guess all the diagnostic tools in chrome hide the binary data from you somehow
[22:01:29] *** Joins: kurtis (~kurtismul@2603:9000:8e00:b6b5:2ce8:d258:9a09:3f81)
[22:24:43] *** Joins: EwS (~ews@162-234-255-206.lightspeed.sntcca.sbcglobal.net)
[22:37:29] *** Quits: GrayArea_ (~cpd@46.246.122.179) (Quit: leaving)
[22:55:47] *** Parts: AWizzArd (~code@user/awizzard) ()
[23:35:57] *** Quits: EwS (~ews@162-234-255-206.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[23:37:00] *** Joins: Snaffu (~Snaffu@c-174-60-107-126.hsd1.pa.comcast.net)
[23:45:01] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 256 seconds)
[23:47:30] *** Quits: kurtis (~kurtismul@2603:9000:8e00:b6b5:2ce8:d258:9a09:3f81) (Ping timeout: 240 seconds)
[23:56:36] *** Joins: kurtis (~kurtismul@2603:9000:8e00:b6b5:2ce8:d258:9a09:3f81)
