[00:00:28] <re101-fly-43> print and other words would have there own regex, so they should not get recognized by this regex command
[00:00:51] <p-i-> re101-fly-43: Do you just want to split by words?
[00:01:15] <p-i-> Are you trying to build a lexer for a language?
[00:01:43] <p-i-> Not sure if regex is the right tool for the job, but maybe
[00:02:13] <p-i-> I think you'll need to use DEFINE a lot
[00:02:41] <p-i-> You're not asking a clean/clear question.
[00:05:18] <re101-fly-43> Yes I am building a lexer for a simple grammar, let me know how I can explain better :)
[00:05:23] <p-i-> ok gottit https://regex101.com/r/4yioKK/4 
[00:05:35] <p-i-> w00t, only 4 tries this time
[00:05:48] <p-i-> re101-fly-43: That's _your_ job
[00:05:54] <re101-fly-43> each regex match gets returned as an individual token, print token, if token, single character (aka variable declaration) token, digit token
[00:06:29] <p-i-> so you're trying to tokenize a language, maybe your own language
[00:06:53] <p-i-> There's an established science to this, I remember it vaguely from high school
[00:07:24] <re101-fly-43> Yes Exactly. My issue has been everything works, but when I add the token/regex expression for single characters, it breaks down/overrids all the other regex expressions, and views every word letter by letter instead
[00:07:56] <re101-fly-43> print would normally return print token, but now returns a p single char token, r single char token, i single char token, etc...
[00:08:17] <p-i-> Maybe provide an example of the input, of the output you WANT
[00:08:19] <re101-fly-43> Building a compiler from scratch in Java, first step is Lexical Analyzer
[00:08:20] <p-i-> you could bpaste it
[00:08:42] <re101-fly-43> https://regex101.com/r/16SVSQ/1 this is what I want, but it does not work in my java code
[00:10:31] <OnlineCop> re101-fly-43: Are you using MULTILINE in Java? `final Pattern pattern = Pattern.compile(regex, Pattern.MULTILINE);`
[00:11:23] <re101-fly-43> No i am not, let me try that :)
[00:12:03] <OnlineCop> re101-fly-43: On a technical standpoint, that's exactly how regex works: "print" is actually 5 separate commands: "Match `p`. If that fails, throw BACKTRACK. Otherwise, match `r`. ..."
[00:13:50] <re101-fly-43>         Pattern charToken = Pattern.compile("(\\b[a-z]\\b)");
[00:13:50] <re101-fly-43>         Pattern boolValToken = Pattern.compile("\b*((?i)false(?-i))\b*");
[00:13:51] <re101-fly-43> False should not be recognized by charToken
[00:13:55] <OnlineCop> If you have `pri+nt` then it will match `p` then match `r` then match `i` and then go into a loop (keeping track of how many times it looped) where it can match 0-or-more instances of `i` until that fails. Then it matches `n` and if that fails, it will unwind the loop by 1 and then try to match `n`... and if that fails, keep unwind-then-check-again until there is nothing left to unwind.
[00:14:30] <OnlineCop> The first line is correct: `\b` should become `\\b` when used within a string.
[00:14:58] <OnlineCop> The second line's `"\b` will match the "bell" character (or whatever `\b` evaluates to normally).
[00:14:59] <re101-fly-43> Great, should I change the one below so false gets recognized as boolValToken instead of charToken?
[00:17:32] <OnlineCop> I agree that "false" should not be recognized by charToken, as the `\b` (escaped as `\\b` in the string) on either side should fail.
[00:20:25] <OnlineCop> re101-fly-43: I didn't see it because my IRC client tried to be sneaky, but `\b*` isn't valid.
[00:20:52] <OnlineCop> `Pattern boolValToken = Pattern.compile("\\b((?i:false))\\b");`
[00:20:57] <re101-fly-43> hmm ok let me try
[00:21:35] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[00:26:35] <re101-fly-43> That worked!
[00:26:42] *** Quits: luva (~luva@45.141.152.61) (Quit: Byebye)
[00:26:48] <re101-fly-43> Now I need to update that regex to match "false or true"
[00:27:27] *** Joins: luva (~luva@45.141.152.61)
[00:27:31] <p-i-> I wonder whether a block of pseudocode illustrating the basic operation of regex would solve a lot of conceptual floundering
[00:27:49] <OnlineCop> Within the `(?i:false)` just add an alternation: `(?i:false|true)`
[00:28:21] <OnlineCop> Of course, it's an exercise for the reader to then determine whether it matched "false" or "true" so it becomes a boolean.
[00:28:37] <re101-fly-43> I have tried that https://regex101.com/r/16SVSQ/1 does not work?
[00:29:08] <OnlineCop> That's the same link as before?
[00:29:12] <OnlineCop> You need to click "update regex".
[00:29:36] <OnlineCop> We don't see it, till you save/update it on the server.
[00:30:31] <re101-fly-43> My apologies https://regex101.com/r/jq0PO1/1
[00:37:59] <re101-fly-43> Any ideas?
[00:38:37] *** Quits: re101-fly-43 (~re101-fly@rrcs-108-176-17-243.nyc.biz.rr.com) (Quit: Client closed)
[00:40:25] *** Joins: re101-fly-43 (~re101-fly@rrcs-108-176-17-243.nyc.biz.rr.com)
[00:46:43] <OnlineCop> Remember that `\b` on regex101 should not have two `\\` before the 'b'.
[00:47:12] <OnlineCop> It looks like you also have some whitespace after 'false' and before 'true'.
[00:47:25] <OnlineCop> Unless you've got the /x flag enabled, that will try to match a literal space there.
[00:48:12] <OnlineCop> In which case, it should be fine in Java. Just be sure that you're compiling with COMMENTS: `final Pattern pattern = Pattern.compile(regex, Pattern.MULTILINE | Pattern.COMMENTS);`
[00:49:38] <OnlineCop> re101-fly-43: https://regex101.com/r/jq0PO1/2
[00:58:34] <re101-fly-43> Thanks!! Now I need false$ to recognize false, and separately recognize $ as an end of program token
[00:59:30] *** Quits: re101-iguana-6 (~re101-igu@52.94.133.129) (Quit: Client closed)
[01:10:00] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:15:46] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[01:17:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:26:12] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[01:28:34] *** Joins: p-i-_ (~Ohmu@183.89.35.200)
[01:32:03] *** Quits: p-i- (~Ohmu@183.89.35.200) (Ping timeout: 256 seconds)
[01:42:16] <OnlineCop> re101-fly-43: I don't understand. Does the text contain "false$" with a literal '$' at the end?
[01:43:43] <OnlineCop> "...recognize $ as an end of program token" What is end-of-program? Is it an end-of-line or end-of-string assertion like regex uses, or is it intended to be interpreted by your application as a "stop processing more inputs" kind of thing?
[01:44:21] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[01:44:42] <p-i-_> https://regex101.com/r/4yioKK/5 What is happening here? Practically the whole regex is comented out, but it is still picing up signalid but letter by letter
[01:45:08] <p-i-_> Is this a bug?
[01:54:21] <OnlineCop> Your `N` is defined as being any character, 0 or more times, as few times as possible.
[01:54:33] <OnlineCop> So it matches 0 times at every position in the string.
[01:57:07] <OnlineCop> Changing that to a `+?` instead of `*?` matches one "anything" character at a minimum.
[01:59:39] <p-i-_> [\s\S]+? ?
[01:59:48] <p-i-_> It doesn't shake it loose tho
[02:00:23] <OnlineCop> You're telling it to ONLY match `(?&N)` and everything else is commented out.
[02:00:24] *** Joins: karakedi (~eAC53C340@user/karakedi)
[02:01:20] <OnlineCop> Since you've got the /g (global) flag on, it doesn't stop after it's found just the first result.
[02:01:41] *** Joins: d1cor (~diego@179.63.242.122)
[02:04:24] <p-i-_> I got it
[02:04:25] <p-i-_> https://regex101.com/r/4yioKK/6
[02:04:49] <p-i-_> I did [\s\S]*
[02:05:17] <p-i-_> and the  message didn't have the # before the ID this time, so I had to optionalize that.
[02:08:42] <OnlineCop> Didn't you want some of those to be "minimal" so they didn't consume too much? Like in the case of TARGETS.
[02:09:17] <OnlineCop> If it accepts "anything, as much as possible", then it matches to the end of the entire string, then backtracks when it determines that something "later" fails to match.
[02:10:27] <p-i-_> yeah but this is the only thing I could manage that works
[02:10:35] <p-i-_> And it  isn't working  in Pythono
[02:10:51] <p-i-_> I'll have to investigate tomorrow
[02:10:55] <p-i-_> 6am  now
[02:10:57] <OnlineCop> :thumbs-up:
[02:11:12] <p-i-_> cannae  focus
[02:11:55] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[02:16:20] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[02:18:03] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:10:39] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:14:40] <re101-fly-43> https://regex101.com/r/Me7Wgx/1 whats a better way to write this? it doesn't work on my java program
[03:15:26] *** Quits: davido (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net) (Ping timeout: 260 seconds)
[03:17:35] *** Joins: davido (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net)
[03:20:41] <re101-fly-43> {
[03:20:42] <re101-fly-43> }
[03:20:42] <re101-fly-43> {}
[03:20:43] <re101-fly-43> the last } does not get recognized in my java program
[03:20:44] *** rebot sets mode: +q re101-fly-43!*@*
[03:20:45] <rebot> 14re101-fly-43: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[03:21:14] *** rebot sets mode: -q re101-fly-43!*@*
[03:23:00] <re101-fly-43> https://regex101.com/r/Me7Wgx/2 does not pick up last } in the lexer i am building
[03:25:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:26:17] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 240 seconds)
[03:32:06] <re101-fly-43> anyone know how to write it another way?
[03:34:06] *** Quits: d1cor (~diego@179.63.242.122) (Read error: Connection reset by peer)
[03:39:54] *** Joins: d1cor (~diego@179.63.242.122)
[03:42:49] <re101-fly-43> Please anyone :)
[03:43:15] *** Joins: davido_ (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net)
[03:43:17] *** Quits: davido (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net) (Ping timeout: 240 seconds)
[03:46:33] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:56:19] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:57:09] <OnlineCop> re101-fly-43: Are you remembering to use Code Generator on regex101 so you know when characters like `\` should be escaped in Java as `\\` ?
[03:57:46] <OnlineCop> https://regex101.com/r/Me7Wgx/2/codegen?language=java shows the regex string in Java as `final String regex = "\\}";`
[04:00:12] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 256 seconds)
[04:00:27] <OnlineCop> Java does not support recursive regex, so if you're trying to match balanced `{{{x}y}z}`, you'll have to count those programmatically.
[04:01:41] <OnlineCop> Example of PCRE recursion that doesn't work in Java: https://regex101.com/r/Me7Wgx/4
[04:03:24] <re101-fly-43> Yes I am, when I use \\} and \\{ and search in {{}}
[04:03:25] <re101-fly-43> {}
[04:03:25] <re101-fly-43> {
[04:03:26] <re101-fly-43> }
[04:03:26] <re101-fly-43> I get returned tokens: OpenBracket, OpenBracket, OpenBracket, CloseBracket
[04:03:27] *** rebot sets mode: +q re101-fly-43!*@*
[04:03:28] <rebot> 14re101-fly-43: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[04:03:57] *** rebot sets mode: -q re101-fly-43!*@*
[04:04:02] <re101-fly-43> {{}}
[04:04:03] <re101-fly-43> {}
[04:04:03] <re101-fly-43> {
[04:04:04] <re101-fly-43> }
[04:04:04] <re101-fly-43> for this program*^
[04:04:05] *** rebot sets mode: +q re101-fly-43!*@*
[04:04:05] <OnlineCop> Three OpenBracket and one CloseBracket?
[04:04:06] <rebot> 14re101-fly-43: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[04:04:24] <OnlineCop> You keep pasting too many lines, and you're getting muted when you do.
[04:04:35] *** rebot sets mode: -q re101-fly-43!*@*
[04:04:37] <OnlineCop> IRC can't handle lots of lines. It's an OLD protocol.
[04:04:46] <re101-fly-43> got it thank you
[04:04:52] <re101-fly-43> let me re phrase
[04:05:06] <OnlineCop> What are you attempting to accomplish?
[04:06:13] <re101-fly-43> building a lexer off a custom grammar, need to get separate tokens for open bracket and close bracket
[04:06:53] <OnlineCop> A custom regex grammar?
[04:07:13] <re101-fly-43> Yes. I have regex pattern matches for keywords in the grammar
[04:07:44] <re101-fly-43> {}{}{
[04:07:45] <re101-fly-43> {} the program only matches two open brackets with the following \\{ and \\}
[04:08:12] <OnlineCop> I've made a regex which regexes other regexes. It was fun until you had to handle "quoted text with regex inside" or # line_comments, // line_comments, and /* block comments */
[04:08:45] <re101-fly-43> Yes it has been quite the headache
[04:09:02] <OnlineCop> That sounds like it's advancing the index too far each time it matches a single character.
[04:09:05] <re101-fly-43> Would you like to take a look at my code or no?
[04:09:38] <OnlineCop> The only programming language I understand is C++, so it probably won't do me much good to see it.
[04:11:43] <re101-fly-43> Dang, what do you recommend I do?
[04:13:33] <re101-fly-43> My issue is the regex tester doesn't translate correctly to my java program, even after generating code
[04:31:37] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:39:24] *** Quits: BUSY (~BUSY@user/busy) (Remote host closed the connection)
[04:39:52] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[04:45:03] *** Joins: maroon2 (tinycrypt@136.32.225.142)
[04:46:35] *** Joins: BUSY (~BUSY@user/busy)
[04:46:37] *** Quits: maroon (tinycrypt@user/maroon) (Ping timeout: 240 seconds)
[04:46:43] *** maroon2 is now known as maroon
[04:46:45] *** Quits: monoxane (~monoxane@user/monoxane) (Quit: Ping timeout (120 seconds))
[04:47:05] *** Quits: maroon (tinycrypt@136.32.225.142) (Changing host)
[04:47:05] *** Joins: maroon (tinycrypt@user/maroon)
[04:47:05] *** ChanServ sets mode: +v maroon
[04:47:17] *** Joins: monoxane (~monoxane@user/monoxane)
[04:50:53] *** Joins: re101-guppy-29 (~re101-gup@S0106a84e3fe15523.wp.shawcable.net)
[04:52:58] <re101-guppy-29> Hey guys, quick and simple question, where can I go to start learning the absolute basics, like I'm talking baby level stuff here, none of this makes sense to me yet but I need to learn it to fix the pronunciation of the TTS I'm using badly.
[04:56:23] <VectorX> !tuts
[04:56:24] <perlbot> https://www.regular-expressions.info/tutorial.html, http://www.rexegg.com/, https://regexone.com/, https://youtu.be/ubvSjW6Nyqk
[04:57:41] <VectorX> that video at the end might be a good start
[04:59:14] <re101-guppy-29> Alright I'll watch it, thanks :)
[05:00:34] *** Quits: re101-guppy-29 (~re101-gup@S0106a84e3fe15523.wp.shawcable.net) (Quit: Client closed)
[05:17:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:19:05] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[05:28:06] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:30:21] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:33:39] *** Joins: vlm (~vlm@user/vlm)
[05:34:25] <r3m> all set general powerline 0
[05:34:27] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[05:34:53] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:34:53] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:34:53] *** Joins: maetthew (~maetthew@user/maetthew)
[05:38:26] *** Joins: r3m (~launch@user/r3m)
[05:52:29] *** Quits: r00tb0y (r00tb0y@p57b56caa.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:53:07] *** Joins: r00tb0y (r00tb0y@p4fed4b6b.dip0.t-ipconnect.de)
[05:54:53] *** Quits: p-i-_ (~Ohmu@183.89.35.200) (Read error: Connection reset by peer)
[05:55:09] *** Joins: p-i- (~Ohmu@2403:6200:8978:cd9a:34f2:55b4:a531:18a9)
[05:57:26] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[06:01:19] *** Joins: entropy_ (~ent@user/entropy/x-9891564)
[06:02:08] <entropy_> i have this: /<title>(.*)<\/title>/i <- how do i make it so it doesn't evaluate "|" in <title>
[06:02:42] *** Joins: re101-fossa-75 (~re101-fos@218.238.186.93)
[06:03:00] *** Quits: re101-fossa-75 (~re101-fos@218.238.186.93) (Client Quit)
[06:04:06] <rewt> entropy_, what do you mean?
[06:06:27] <entropy_> well i have a mIRC script title grabber
[06:06:33] <entropy_> and the example is:
[06:06:50] <entropy_> if ($bfind(%b,1,/<title>(.*)<\/title>/i,Title).regex) { }
[06:07:08] <entropy_> but it evaluates the "|" as a seperated command
[06:07:20] <entropy_> example src:
[06:07:24] <rewt> what "|"?
[06:07:43] <entropy_> <title> Spiritual Singles | Best Spiritual Dating Site | Meet Mindful Singles </title>
[06:07:50] <entropy_> this title line
[06:08:04] <entropy_> it executes all that after the "|" as a new command
[06:08:36] <rewt> that's an mirc issue; the regex is matching everything between the tags, and then mirc does whatever it does with it
[06:08:41] *** Joins: re101-fennec-10 (~re101-fen@bb116-15-24-76.singnet.com.sg)
[06:10:08] <re101-fennec-10> any regex experts here ? I need some beginners help parsing line items in an invoice
[06:11:20] *** Quits: re101-fennec-10 (~re101-fen@bb116-15-24-76.singnet.com.sg) (Client Quit)
[06:14:57] *** Joins: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com)
[06:15:36] <digitok> need is a strong word from someone who waits 1 minute
[06:16:24] *** Quits: re101-fly-43 (~re101-fly@rrcs-108-176-17-243.nyc.biz.rr.com) (Quit: Client closed)
[06:17:50] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[06:31:05] *** davido_ is now known as davido
[06:35:07] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 250 seconds)
[06:38:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:43:56] *** typoholic is now known as tinystoat
[06:52:47] *** Joins: src (~src@user/src)
[06:53:54] *** Joins: adeliktas8 (~adeliktas@i59F5F407.versanet.de)
[06:55:37] *** Quits: adeliktas (~adeliktas@i59F5203E.versanet.de) (Ping timeout: 256 seconds)
[06:55:37] *** adeliktas8 is now known as adeliktas
[07:16:55] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-5d83-76ea-e138-9111.fixed6.kpn.net) (Ping timeout: 250 seconds)
[07:20:45] *** Joins: karakedi (~eAC53C340@user/karakedi)
[07:41:36] *** Joins: jinsun (~quassel@user/jinsun)
[08:13:47] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-5d83-76ea-e138-9111.fixed6.kpn.net)
[08:20:52] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-5d83-76ea-e138-9111.fixed6.kpn.net) (Ping timeout: 250 seconds)
[08:33:00] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-5d83-76ea-e138-9111.fixed6.kpn.net)
[08:37:17] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-5d83-76ea-e138-9111.fixed6.kpn.net) (Ping timeout: 240 seconds)
[08:47:12] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[08:47:41] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[08:54:03] *** Joins: r3m (~launch@user/r3m)
[09:06:57] *** Joins: Xedtr (~Xedtr@185.97.201.104)
[09:41:25] *** Quits: p-i- (~Ohmu@2403:6200:8978:cd9a:34f2:55b4:a531:18a9) (Remote host closed the connection)
[09:42:01] *** Joins: p-i- (~Ohmu@2403:6200:8978:cd9a:98a8:ebc8:d7c8:aa05)
[09:50:52] *** Joins: re101-ibis-57 (~re101-ibi@2405:201:c009:713d:1506:eae6:641a:7393)
[09:51:03] *** Parts: re101-ibis-57 (~re101-ibi@2405:201:c009:713d:1506:eae6:641a:7393) ()
[10:05:02] <p-i-> https://regex101.com/r/4yioKK/7 Can anyone see why OTE is failing to get caught?
[10:05:20] <p-i-> If I remove the enclosing (?: ... )? it works
[10:05:33] <p-i-> And I don't see why that's the problem.
[10:05:48] <p-i-> I've had this mechanism tested on other strings, and it was working fine.
[10:18:16] *** Quits: yitz (~yitz@exercism/yitz) (Quit:  )
[10:19:02] *** Joins: yitz (~yitz@exercism/yitz)
[10:19:02] *** ChanServ sets mode: +v yitz
[10:23:41] <rewt> p-i-: https://regex101.com/r/4yioKK/8 ... added a ? to your N group
[10:24:40] <rewt> OTE is optional, so your [\s\S]* after ENTRY went right past it to TARGETS
[10:24:44] <p-i-> Thanks rewt! I would have struggled to get that one
[10:24:57] *** Quits: callq (~callq@2409:4062:2296:71d:edc0:24f8:78e1:290e) (Ping timeout: 240 seconds)
[10:33:13] *** Joins: re101-ocelot-48 (~re101-oce@182.70.84.129)
[10:36:26] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-5d83-76ea-e138-9111.fixed6.kpn.net)
[10:38:29] *** Joins: jargon (~jargon@174-22-198-249.phnx.qwest.net)
[10:38:57] <jargon> How do I write a Windows Explorer style pattern matching program
[10:39:00] <jargon> ?
[10:40:09] <jargon> I am using FreeBASIC.
[10:41:33] <jargon> https://pastebin.com/9H5CvRf0
[10:41:51] <jargon> This is all I have for now. :(
[10:43:28] <jargon> I assume the only search engine escapes are ? and *
[10:43:52] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[10:44:37] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-5d83-76ea-e138-9111.fixed6.kpn.net) (Ping timeout: 240 seconds)
[10:45:53] <p-i-> https://bpa.st/LMBA I'm preparing to submit this issue to https://github.com/mrabarnett/mrab-regex
[10:45:59] <p-i-> Is this a reasonable issue?
[10:46:07] <p-i-> I don't want to annoy the maintainer of the package
[10:46:15] <p-i-> Can anyone answer any of the points?
[10:48:07] <p-i-> Also team regex101, it would be super-helpful to add a "notes" field for each revision
[10:48:44] <p-i-> Also to be able to remove revisions.
[10:50:13] <purplex> i am not sure, should you prefer using 'forums' for "how to" regex questions or 'issues' is the right place?
[10:51:11] <p-i-> There seems to no forum for that package, alas.
[10:51:26] <p-i-> The issue tracker seems the only place to converse.
[10:51:51] <purplex> like stackexchange maybe? issue is usually when you studied something throughly and found it is indeed an issue
[10:55:01] <p-i-> True. I'll do some more groundwork before submitting it.
[10:55:58] <p-i-> ooh this one's a nasty
[10:56:01] <p-i-> https://regex101.com/r/4yioKK/8
[10:56:14] <p-i-> in regex101 I'm getting both matches for `entries`
[10:56:30] <p-i-> but transferring the pattern and string direct to Python, I only get one match!
[10:56:37] <p-i-> Everything else checks out perfectly.
[11:03:43] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-5d83-76ea-e138-9111.fixed6.kpn.net)
[11:12:03] *** Joins: timm (~timm@user/timm)
[11:20:40] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[11:23:20] <p-i-> https://stackoverflow.com/questions/71061427/disparity-between-regex101-and-pythons-regex-package
[11:24:18] *** Quits: src (~src@user/src) (Quit: Leaving)
[11:29:49] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[11:31:28] *** Joins: palasso (~palasso@user/palasso)
[11:32:55] *** Joins: lavaball (felix@31.204.155.215)
[11:34:36] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:42:46] <p-i-> So, selecting PCRE instead of PCRE2, now the regex fails to catch the second number: https://regex101.com/r/HQuvtj/2
[11:43:14] <p-i-> It seems https://github.com/mrabarnett/mrab-regex is closer to PCRE than PCRE2.
[11:43:52] <p-i-> Why isn't my regex working correctly under PCRE?
[11:47:08] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[11:47:44] <Lindrian> p-i- they are two different engines, but with the same feature set, written by the same person.
[11:47:49] <Lindrian> I'd stick to PCRE2.
[11:48:17] <p-i-> But my Python regex package seems to be parsing this regex the same as PCRE-setting on regex101
[11:48:21] <p-i-> So I think I'm stuck with that.
[11:48:40] <p-i-> I can't find any Python PCRE2-compliant regex lib
[11:51:46] <digitok> god i hate looking at these spaced out regexen
[11:54:13] <Lindrian> p-i- Pythons default regex behavior is different than pcre either way
[11:54:35] <p-i-> But this is a 3rd-party regex lib.
[11:55:01] <p-i-> It makes no reference to PCRE anywhere, so yeah it's making no claim to be compliant.
[11:55:16] <p-i-> But everything else seems to work!
[11:55:43] <p-i-> Can anyone see how to fix the regex so that it works under PCRE?
[11:56:17] <Lindrian> Whats so special about that engine?
[11:56:23] <p-i-> digitok: It's a testcase stripped from a larger pattern. I really do need to space out the larger pattern.
[11:56:34] <p-i-> Lindrian: It allows DEFINE, which Python's native re does not
[11:56:35] <digitok> NO
[11:56:42] <digitok> ok, fine
[11:57:33] <p-i-> I'm also writing the pattern in a way that can be extended to a number of varying string data formats, which is why it appears overkill.
[11:57:42] <p-i-> I've got ~20 "flavours" to crack.
[11:57:56] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[12:00:46] <digitok> the issue is the lazy quantifier on the trailing space in the <decimal> definition
[12:01:24] <digitok> tip: you almost never want to use lazy quantifiers on tokens that are specific
[12:01:29] <Lindrian> p-i- https://regex101.com/r/HQuvtj/2/debugger <--- try this next time
[12:01:35] <digitok> that is usually the point of making them specific
[12:03:03] <p-i-> digitok: Thanks!
[12:03:06] <p-i-> I wanted to make that Decimal "eat" whitespace either side, so my main regex wouldn't be encumbered with dealing with it.
[12:03:08] <digitok> something to do with pcre1 not backtracking into recursive subpatterns i assume
[12:03:38] <digitok> sure, but make them greedy
[12:03:52] <digitok> same with all of the \W*? i would just use \W*
[12:04:12] <p-i-> So `123-456` and `123 -  456` and `123, 456` would all parse at the top level without clutter
[12:06:03] <p-i-> So \W* is greedy, \W? is optional, but \W*? is lazy
[12:08:06] <p-i-> ok fixed https://regex101.com/r/HQuvtj/3 🙏
[12:08:07] <digitok> yep
[12:09:00] <p-i-> rkn it's worth filing an issue on the regex lib?
[12:09:14] <digitok> still not working in python?
[12:09:43] <p-i-> Haven't tested yet, but I'm talking about the original syntax that works in PCRE2
[12:10:11] <digitok> oh
[12:10:27] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-5d83-76ea-e138-9111.fixed6.kpn.net) (Ping timeout: 256 seconds)
[12:10:39] <p-i-> I think my example is too clumsy for a testcase
[12:10:43] <digitok> afaik their goal is not to follow pcre2 in particular
[12:10:57] <digitok> the regex package has features that pcre2 does not, etc
[12:11:52] <p-i-> What we need is a new standard! https://xkcd.com/927/
[12:12:09] <digitok> =)
[12:12:41] <digitok> pcre2 would be close to perfect if it supported variable length lookbehinds
[12:12:56] <digitok> and possible stacking capture groups
[12:12:57] <Lindrian> vwlb are still super weird to implement
[12:12:58] <digitok> possibly*
[12:13:23] <digitok> python's regex package has it :p
[12:13:31] <Lindrian> Yes, doesn't mean semantics make sense :P 
[12:13:31] <p-i-> I'd love to be able to pull out chunks from within a capture-group. If that's what you mean by 'stacking'.
[12:13:56] <Lindrian> PCRE calculates the length of the lookbehind, jumps back that far, and starts matching, then jumps back
[12:14:20] <Lindrian> Should it instead reverse the string and start matching? Or keep the string as is, but match RTL instead of LTR?
[12:14:33] <Lindrian> What does ".*" then mean? My brain!
[12:14:56] <digitok> 07, i mean (a)(b)+(c) with the input "abbbc" returning something like [a,[b,b,b],c] instead of [a,b,c]
[12:14:58] <digitok> p-i-: i mean (a)(b)+(c) with the input "abbbc" returning something like [a,[b,b,b],c] instead of [a,b,c]
[12:15:16] <digitok> 07Lindrian, yea, it is certainly awkward
[12:15:27] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-5d83-76ea-e138-9111.fixed6.kpn.net)
[12:18:33] <Lindrian> digitok yeah, its super weird imo.
[12:18:37] *** Quits: jargon (~jargon@174-22-198-249.phnx.qwest.net) (Remote host closed the connection)
[12:26:05] <p-i-> well I've filed it https://github.com/mrabarnett/mrab-regex/issues/454 ... I always worry about upsetting the maintainers when I file issues but some good might come of it.
[12:30:56] <digitok> (?g) does not work because it does not exist in python. there are dedicated functions, just like in php
[12:31:45] <digitok> and python's re is python's own regex engine
[12:37:17] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (Changing host)
[12:37:17] *** Joins: stevenm (~stevenm@user/stevenm)
[13:03:43] *** Quits: MrNato_Home (MrNato_Hom@61.29.44.88) (Ping timeout: 256 seconds)
[13:04:05] *** Joins: MrNato_Home (MrNato_Hom@61.29.44.88)
[13:14:33] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[13:30:35] <p-i-> It seems under PCRE https://regex101.com/r/tVXg0x/1 my attempt to 'macro' [\s\S]* with (?&N) fails. If I replace the macro with [\s\S]* directly, it works.
[13:30:54] <p-i-> PCRE2 doesn't have this issue
[13:34:17] *** Quits: imcdona (imcdona@fsf/member/imcdona) (Ping timeout: 240 seconds)
[13:40:08] *** Joins: f00 (~timm@user/timm)
[13:40:33] *** Quits: timm (~timm@user/timm) (Remote host closed the connection)
[13:41:49] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[13:43:09] *** Joins: imcdona (imcdona@fsf/member/imcdona)
[13:43:35] *** Quits: f00 (~timm@user/timm) (Read error: Connection reset by peer)
[13:52:07] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[13:55:05] *** Joins: re101-coral-59 (~re101-cor@3.217.99.34.bc.googleusercontent.com)
[13:55:49] <re101-coral-59> Hello, I have a question. I need to remove font-family CSS property from HTML text.
[13:56:12] <re101-coral-59> Is this REgEX font-family.*?(;) correct?
[13:56:20] <re101-coral-59> Thank you!
[13:56:25] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 256 seconds)
[13:57:28] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[13:58:57] *** Quits: p-i- (~Ohmu@2403:6200:8978:cd9a:98a8:ebc8:d7c8:aa05) (Ping timeout: 240 seconds)
[14:02:37] *** Quits: MrNato_Home (MrNato_Hom@61.29.44.88) (Ping timeout: 240 seconds)
[14:03:10] *** Joins: MrNato_Home (MrNato_Hom@61.29.44.88)
[14:03:28] *** Joins: purplex_ (~purplex@user/purplex)
[14:03:28] *** ChanServ sets mode: +v purplex_
[14:03:33] *** Joins: vlm_ (~vlm@user/vlm)
[14:04:06] *** Joins: ryusaku (~ryu`@c6A334BC1.dhcp.as2116.net)
[14:04:36] *** Joins: Roedy- (Roedy@user/roedy)
[14:06:10] *** Joins: ttys000_ (~ttys000@user/ttys000)
[14:06:44] *** Joins: callq (~callq@2409:4062:2296:71d:c827:aaf6:4fa7:dd61)
[14:06:47] *** Joins: karakedi (~eAC53C340@user/karakedi)
[14:09:24] *** Joins: Lindrian_ (~Lindrian@about/regex/lindrian)
[14:09:24] *** ChanServ sets mode: +v Lindrian_
[14:11:02] *** Quits: vlm (~vlm@user/vlm) (*.net *.split)
[14:11:02] *** Quits: maroon (tinycrypt@user/maroon) (*.net *.split)
[14:11:02] *** Quits: ttys000 (~ttys000@user/ttys000) (*.net *.split)
[14:11:02] *** Quits: ryu` (~ryu`@user/ryu/x-3206151) (*.net *.split)
[14:11:02] *** Quits: bin101 (~bin101@user/bin101) (*.net *.split)
[14:11:02] *** Quits: Alternity (~Alternity@user/alternity) (*.net *.split)
[14:11:03] *** Quits: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (*.net *.split)
[14:11:03] *** Quits: Gerlo_ (~Gerlo@user/gerlo) (*.net *.split)
[14:11:03] *** Quits: Roedy (Roedy@user/roedy) (*.net *.split)
[14:11:03] *** Quits: mannibis (~mannibis@162.211.65.25) (*.net *.split)
[14:11:03] *** Quits: Lindrian (~Lindrian@about/regex/lindrian) (*.net *.split)
[14:11:03] *** Quits: purplex (~purplex@user/purplex) (*.net *.split)
[14:11:03] *** Quits: Sevalecan (~sevalecan@user/sevalecan) (*.net *.split)
[14:11:03] *** Quits: hrm (~hrm@nimbus.harmtemolder.nl) (*.net *.split)
[14:11:03] *** Quits: koollman (~samson_t@user/koollman) (*.net *.split)
[14:11:03] *** Quits: tinystoat (~squeek@user/tinystoat) (*.net *.split)
[14:11:03] *** Lindrian_ is now known as Lindrian
[14:11:09] *** vlm_ is now known as vlm
[14:11:10] *** purplex_ is now known as purplex
[14:12:13] *** Quits: MrNato_Home (MrNato_Hom@61.29.44.88) (Ping timeout: 240 seconds)
[14:13:01] *** Joins: MrNato_Home (MrNato_Hom@61.29.44.88)
[14:16:13] *** Joins: maroon (tinycrypt@user/maroon)
[14:16:13] *** Joins: bin101 (~bin101@user/bin101)
[14:16:13] *** Joins: Alternity (~Alternity@user/alternity)
[14:16:13] *** Joins: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[14:16:13] *** Joins: Gerlo_ (~Gerlo@user/gerlo)
[14:16:13] *** Joins: mannibis (~mannibis@162.211.65.25)
[14:16:13] *** Joins: Sevalecan (~sevalecan@user/sevalecan)
[14:16:13] *** Joins: hrm (~hrm@nimbus.harmtemolder.nl)
[14:16:13] *** Joins: koollman (~samson_t@user/koollman)
[14:16:13] *** Joins: tinystoat (~squeek@user/tinystoat)
[14:16:13] *** erbium.libera.chat sets mode: +v maroon
[14:28:40] *** Joins: p-i- (~Ohmu@2403:6200:8978:d293:a95e:b595:a77d:be89)
[14:45:30] <digitok> 07re101-coral-59, it will work, but i would probably use: font-family[^;]*;
[14:45:50] <digitok> p-i- this is due to the same issue as you had with the space
[14:46:24] <digitok> pcre treats subroutine calls as atomic groups, so it will not backtrack into them
[14:47:26] <digitok> you can see the difference by using (?>[\S\s]*?) in place of (?&N), which will not work in pcre nor pcre2
[14:47:35] <digitok> (?>) is an atomic group
[15:01:57] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 240 seconds)
[15:07:37] <p-i-> digitok: sorry, powercut
[15:08:47] <p-i-> First time I've seen atomic groups
[15:09:12] *** Joins: goddard (~goddard@user/goddard)
[15:09:12] <p-i-> Unfortunately I've now lost my whole scrollback to the channel
[15:10:25] *** Quits: Xedtr (~Xedtr@185.97.201.104) (Read error: Connection reset by peer)
[15:10:33] <p-i-> I seem to have it working in python regex using (?&N), also (?&N) does seem to work in PCRE2
[15:10:57] <p-i-> The last fault was in my second-stage processor... it was trying to regex a None element
[15:12:31] *** Joins: re101-mole-42 (~re101-mol@213.201.78.252.static.user.ono.com)
[15:12:44] <re101-mole-42> hi!
[15:12:51] <re101-mole-42> anyone can help me?
[15:13:12] <re101-mole-42> just want a code to: find a word and select first character
[15:13:13] <digitok> most likely
[15:13:29] <digitok> any particular word?
[15:13:35] <re101-mole-42> found something like that but not for a particular word
[15:13:52] <digitok> do you have a link to a sample that you are testing with?
[15:13:53] <digitok> !link
[15:13:53] <perlbot> Please click Save on the left side of regex101.com and share your link here. (https://i.ibb.co/68c2YnH/s.png)
[15:14:10] <re101-mole-42> for example
[15:14:26] <re101-mole-42> https://regex101.com/r/7pIBdx/1
[15:14:34] <re101-mole-42> this selects first character
[15:15:06] <re101-mole-42> i want that for a particular word
[15:15:37] <re101-mole-42> its to Capitalize a custom words
[15:15:55] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[15:16:28] <digitok> can you elaborate on what distinguishes the words you wish to match the first character of?
[15:16:47] <re101-mole-42> custom word
[15:17:22] <re101-mole-42> for example: look for all words "june" and select first letter to capitalize like "June"
[15:17:39] <digitok> right
[15:17:52] <re101-mole-42> its like the one I send
[15:18:06] <re101-mole-42> but insted a range of letters find a custom word
[15:18:10] <digitok> https://regex101.com/r/z9i37B/1
[15:18:28] <re101-mole-42> OMG
[15:18:31] <re101-mole-42> you did it!!
[15:18:38] <re101-mole-42> thanks a lot
[15:18:40] <digitok> i did :D
[15:18:42] <digitok> yw
[15:18:57] <re101-mole-42> thanks a lot
[15:19:01] <re101-mole-42> you made my day!
[15:19:03] <re101-mole-42> :)
[15:19:06] <digitok> glad i could help
[15:22:56] *** Quits: re101-mole-42 (~re101-mol@213.201.78.252.static.user.ono.com) (Quit: Client closed)
[15:32:04] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[15:41:14] *** Quits: re101-ocelot-48 (~re101-oce@182.70.84.129) (Quit: Client closed)
[15:43:58] *** Quits: LuKaRo (~LuKaRo@p200300dfa72f4b3100000000000001f9.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[15:58:31] *** Joins: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de)
[16:21:14] *** Joins: re101-badger-93 (~re101-bad@77-85-147-232.ip.btc-net.bg)
[16:21:47] *** Quits: re101-badger-93 (~re101-bad@77-85-147-232.ip.btc-net.bg) (Client Quit)
[16:25:14] <Timvde> I want to catch all 4-byte utf8 characters. According to wikipedia, that's code points U+10000 to U+10FFFF, but that doesn't work: https://regex101.com/r/HU14BX/1
[16:33:04] <Timvde> Okay, looks like [\U00010000-\U0010FFFF] worked (it is actually postgres regex it seems, not Java)
[16:34:25] <Timvde> And Python is the only engine on regex101 where that works, interesting
[16:45:30] <digitok> you can match it with \x{} in pcre with /u enabled
[16:45:46] <digitok> /[\x{00010000}-\x{0010FFFF}]/gu
[16:47:13] *** Quits: ryusaku (~ryu`@c6A334BC1.dhcp.as2116.net) (Ping timeout: 256 seconds)
[16:48:50] *** Joins: re101-ocelot-48 (~re101-oce@182.70.84.129)
[16:53:28] *** Joins: ryu` (~ryu`@user/ryu/x-3206151)
[17:06:03] *** Quits: ryu` (~ryu`@user/ryu/x-3206151) (Ping timeout: 250 seconds)
[17:13:55] <p-i-> https://regex101.com/r/fPJXV0/1 Some texts provide 'Risk Entry' and 'Safe Entry', but others just provide 'Entry' How can I catch all cases?
[17:14:07] <p-i-> I tried making them all optional, but I think I'm doing it wrong.
[17:19:55] <p-i-> https://regex101.com/r/fPJXV0/2 This seems to do it, but it feels like some dodgy regex
[17:20:11] <p-i-> Is there a better way to do this?
[17:24:29] *** Joins: d1cor (~diego@179.63.242.122)
[17:29:43] *** Quits: re101-ocelot-48 (~re101-oce@182.70.84.129) (Ping timeout: 256 seconds)
[17:33:08] <digitok> https://regex101.com/r/fPJXV0/3
[17:36:22] *** Joins: mfao1999 (~mao@187.1.168.150)
[17:38:27] <mfao1999> how to return the first digit of match? example: the match is match.group(1) 
[17:38:34] <mfao1999> how to check for the first digit?
[17:55:22] *** Joins: ryu` (~ryu`@user/ryu/x-3206151)
[17:58:19] *** Quits: mfao1999 (~mao@187.1.168.150) (Quit: Leaving)
[17:59:33] *** Quits: re101-coral-59 (~re101-cor@3.217.99.34.bc.googleusercontent.com) (Quit: Client closed)
[18:01:24] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[18:01:38] *** Joins: JanC (~janc@user/janc)
[18:02:08] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[18:05:06] *** Quits: MrNato_Home (MrNato_Hom@61.29.44.88) (Remote host closed the connection)
[18:07:17] *** Joins: fandre1986 (~fandre198@131.228.48.68)
[18:50:23] *** Joins: re101-discus-72 (~re101-dis@223.223.145.96)
[18:54:50] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 260 seconds)
[19:10:44] *** Quits: re101-discus-72 (~re101-dis@223.223.145.96) (Quit: Client closed)
[19:11:40] *** Joins: re101-avocet-75 (~re101-avo@host-77-87-236-193.ip.nej.cz)
[19:11:50] *** Quits: re101-avocet-75 (~re101-avo@host-77-87-236-193.ip.nej.cz) (Client Quit)
[19:25:36] *** Joins: rvalue- (~rvalue@user/rvalue)
[19:26:26] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[19:28:03] *** rvalue- is now known as rvalue
[19:28:12] <Timvde> digitok: ah, thanks, will remember :)
[19:33:52] <OnlineCop> p-i-: Do you want "Risk Entry", "Safe Entry", and "Entry" to have their own named capture groups, like `P<risk_entry>`, `P<safe_entry>`, `P<minions_entry>` like you have in /1 ?
[19:46:31] *** Joins: epony (~epony@user/epony)
[19:55:40] <p-i-> OnlineCop: yup
[19:58:27] <p-i-> I've realized I was going way overkill on my earlier regex. So much simpler to break it down into 2 steps.
[19:58:34] <p-i-> And it can be done very cleanly in Python
[20:01:15] *** Quits: fandre1986 (~fandre198@131.228.48.68) (Quit: Connection closed)
[20:11:22] *** Joins: re101-coral-38 (~re101-cor@162.247.240.110)
[20:11:37] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-5d83-76ea-e138-9111.fixed6.kpn.net) (Ping timeout: 240 seconds)
[20:12:09] *** Quits: re101-coral-38 (~re101-cor@162.247.240.110) (Client Quit)
[20:33:09] *** Joins: src (~src@user/src)
[20:34:26] *** Joins: davido_ (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net)
[20:35:14] *** Quits: davido (~daobrien@2403-580b-906d--5e24-ebc-3163-4a38.ip6.aussiebb.net) (Read error: Connection reset by peer)
[20:35:57] *** Quits: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com) (Remote host closed the connection)
[20:54:13] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:57:57] *** Joins: ecalogero (~ecalogero@167.98.98.227)
[21:02:32] *** Joins: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com)
[21:36:39] *** Quits: src (~src@user/src) (Quit: Leaving)
[21:55:42] *** Quits: ecalogero (~ecalogero@167.98.98.227) (Quit: Connection closed)
[21:55:49] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Read error: Connection reset by peer)
[21:56:05] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[22:07:57] *** Joins: imcdonald (imcdona@fsf/member/imcdona)
[22:08:33] *** Joins: re101-iguana-6 (~re101-igu@72-21-196-65.amazon.com)
[22:09:23] <re101-iguana-6> Hi, I want to substitue a new word in the alphabetical order of occurance - https://regex101.com/r/XfAkWH/1
[22:10:42] *** Quits: imcdona (imcdona@fsf/member/imcdona) (Ping timeout: 250 seconds)
[22:13:41] *** Quits: Tobbi_ (~Thunderbi@31.209.188.226) (Remote host closed the connection)
[22:14:05] <OnlineCop> It's up to you to sort the text you feed to the regex to process. Assuming that, are you saying that you want a prefix before each 'a...' word, and the same (or a different) prefix for the ones starting with 'b...' ?
[22:15:39] <OnlineCop> https://regex101.com/r/XfAkWH/2 is something I do for example.
[22:17:36] <OnlineCop> I capture the first letter (or letters) on the line, then within a second capture, I finish the rest of that line, then start a group with moves to the next line and matches the same first letter(s), plus everything else on the line that follows. The repetition stops when the next line doesn't start with that first captured letter. That's when I can substitute with that `\n` for example.
[22:24:35] *** Joins: re101-moray-44 (~re101-mor@105.233.112.142)
[22:29:32] *** Quits: re101-moray-44 (~re101-mor@105.233.112.142) (Quit: Client closed)
[22:53:15] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:55:05] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[22:56:33] *** Joins: palasso (~palasso@user/palasso)
[23:09:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:10:27] <re101-iguana-6> My requirement is that the replacement text should be inserted in the alphabetical order of the Search text
[23:13:01] <re101-iguana-6> OnlineCop As per your given solution, if I add the substitution as "ti" then it is inserted in many places even before "br" which is not expected.
[23:15:21] <OnlineCop> re101-iguana-6: Could you elaborate or show an example?
[23:15:34] *** Joins: re101-goat-23 (~re101-goa@2600:1700:5040:4dd0:a83e:ceb2:969:8fb1)
[23:16:26] <OnlineCop> Regex engines have no native concept of "alphabetical order", so you have to sort the text you want to run your regex against.
[23:16:28] <re101-goat-23> Hello - I am attempting to create a regex command that will copy a name divided by underscores. IE - THIS_IS_MY_NAME
[23:16:45] <re101-iguana-6> If the Search text is aa,ab,bg,gt,ny,xe,zq and If I substitutue fe then the final Text should be aa,ab,bg,fe,gt,ny,xe,zq
[23:18:28] <OnlineCop> re101-iguana-6: Right. You won't be able to accomplish that with regex alone.
[23:19:19] <OnlineCop> re101-goat-23: What do you want as the result? Do you want a substitution where the result is simply "THIS IS MY NAME" ?  For that, search for `_` or `\B_\B` and replace with a space.
[23:20:59] <re101-goat-23> Ultimately I want to take the entries from each field and paste them into separate fields of a database. so This is one column, IS is a second. etc.
[23:21:32] <OnlineCop> re101-goat-23: Wouldn't that be a simple .split() function?
[23:22:15] <re101-goat-23> perhaps - I am completely new to this and have been struggling with regex101 test site.
[23:22:59] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-7d2f-4476-d67b-813a.fixed6.kpn.net)
[23:23:09] <OnlineCop> Do you have a link of what you have, and what you want? Knowing whether your database regex (or whatever language/engine you're using) supports certain features helps, of course.
[23:25:46] <re101-goat-23> My database supports regex and has preset abilities to assign the values - and allows for RegEx entries. What I have are files names with underscores that need to be parsed out.
[23:28:01] <re101-goat-23> I would take This_Is_My_Name and have fields labelled with This, Is, My, Name -- I am unclear how to copy fields separated by underscores.  This and Name is not an issue by using .*\  but the Is and My where I am stuck
[23:39:48] <OnlineCop> Would it help to simply match the underscore itself?
[23:44:11] <re101-goat-23> I am actually attempting to accomplish the opposite - and match the \w between underscores.
[23:45:21] <re101-goat-23> for example to extract "MY" I am using this ([A-Z])\_.*
[23:45:37] <re101-goat-23> oh sorry - THIS I am using ([A-Z])\_.*
[23:45:53] <re101-goat-23> I don't know how to get to "Is"
[23:47:51] <OnlineCop> Use a `+` after the character group: `([A-Z]+)_` for one thing.
[23:47:59] <OnlineCop> Well, that is if you want to capture the entire word.
[23:49:03] <OnlineCop> re101-goat-23: Do you have to consider Unicode character or digits, or will it always be capital Latin A..Z letters?
[23:49:23] <re101-goat-23> AlphaNumeric
[23:50:04] <re101-goat-23> and thanks for the '+' advice
[23:50:06] <OnlineCop> https://regex101.com/r/kVhSek/1
[23:50:54] <OnlineCop> This uses two groups: one that matches+captures the first portion before the initial underscore, and one that matches the underscore then captures the portion after it.
[23:51:52] <OnlineCop> Some SQL regexes don't like that `(?=...)` notation, so it might need to change a bit.
[23:52:01] <re101-goat-23> So to isolate each letter would I repeat this grouping?
[23:52:07] <re101-goat-23> sorry - each word
[23:53:14] <OnlineCop> Right. Every capture group in the pattern gets assigned to a $1, $2, ... $n substitution number, where the order IN the pattern dictates which one is returned for use in the substitution. Unless you have a capture group for every WORD_BETWEEN_UNDERSCORES, you'll just have to repeat the grouping.
[23:53:37] <re101-goat-23> got it.  Thank you so much!
[23:53:44] <OnlineCop> That also means that if you have a repeating (capture group), it will not work as expected:
[23:54:06] <re101-goat-23> I am not clear what you mean by that
[23:54:11] <OnlineCop> The first value would get stored in $1, but when it repeats, the second match will overwrite the contents of $1.
[23:54:23] <re101-goat-23> ok
[23:54:54] <re101-goat-23> got it
[23:54:57] <OnlineCop> For example: `([A-Z])+` on the text "THIS_IS" would put 'T' into group $1. Then it would find 'H' and replace $1 with that. Then replace it aagain with 'I' and finally 'S'.
[23:56:19] <OnlineCop> Does your SQL engine's regex by chance support PCRE?
[23:56:41] <OnlineCop> PCRE regex supports a lot of nice bells-and-whistles that could help alleviate edge cases.
[23:57:09] <re101-goat-23> so '([A-Z})+' is not the value of the actual content?  I'll inquire with the developer
[23:57:41] <re101-goat-23> I think this has pointed me in the right direction.
[23:57:49] <OnlineCop> Well, `([A-Z]+)` will give back "THIS" in one match, as group 1, and "IS" in a second match, also as group 1.
[23:58:53] <OnlineCop> While `([A-Z])+` will give back "S" in one match, as group 1, and "S" in a second match, also as group 1, where the previous letters 'T'-'H'-'I' and 'I' had been clobbered each time to finally become 'S'.
