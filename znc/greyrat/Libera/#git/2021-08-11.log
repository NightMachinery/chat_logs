[00:00:36] <ikke> git check-ignore -v <path>
[00:03:01] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:04:24] *** Joins: rwp (~invalid@havoc.proulx.com)
[00:05:55] <SmashingX> ikke: git check-ignore -v wp-content/themes/terrachips/lib/
[00:06:02] <SmashingX> I did this and I got nothing back
[00:06:21] <ikke> ls -al wp-content/themes/terrachips/lib/
[00:06:26] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[00:06:55] <SmashingX> ikke: I got a bunch of php files listed
[00:07:08] <ikke> and git ls-files wp-content/themes/terrachips/lib/
[00:07:26] <SmashingX> ups
[00:07:33] <SmashingX> ops it was a different directory
[00:07:43] <SmashingX> git check-ignore -v wp-content/themes/terrachips/dist
[00:07:51] <SmashingX> wp-content/themes/terrachips/.gitignore:3:dist    wp-content/themes/terrachips/dist
[00:08:05] <SmashingX> oh so there's another .gitignore?
[00:08:08] <ikke> yes
[00:08:13] <SmashingX> wth
[00:08:25] <SmashingX> I didn't know you can have more than 1 .gitignore
[00:08:41] <ikke> You can have one in every directory
[00:09:24] <SmashingX> dang, now I have to do a search for every .gitignore in the repo. Ok thank you so much
[00:09:46] <SmashingX> and then I think I have to do something after I remove the .gitignore contents or the file, right?
[00:09:47] <ikke> find -name .gitignore
[00:10:09] <SmashingX> I think I have to clear the cache or just commiting the file and pushing will do?
[00:10:22] *** Joins: austin987 (~null@100.42.98.196)
[00:10:37] <ikke> There is no cache to clear
[00:11:33] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[00:11:47] <SmashingX> so the steps are, delete the .gitignore file, commit and push, then if I do git status would do it?
[00:11:52] *** Parts: j`ey (~joey@user/jey/x-2681904) ()
[00:11:53] <SmashingX> Ok, I should try it first.
[00:11:58] <SmashingX> Thank you ikke!
[00:12:02] <ikke> yw
[00:13:54] <SmashingX> oh I just did 'git rm path to the .gitignore file' and I haven't even commited but I checked the status and the paths that the .gitignore file was trying to ignore are now showing up as new.
[00:14:40] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Remote host closed the connection)
[00:14:57] <ikke> good
[00:15:00] <ikke> that's expectec
[00:16:20] *** Joins: lavos (~molt@95.155.22.30)
[00:16:52] <SmashingX> so what 'git check-ignore -v' tells you is what .gitignore file is making that path to be ignored?
[00:17:03] <SmashingX> and the location of that .gitignore file
[00:17:13] *** Quits: molt (~molt@79.140.150.21) (Ping timeout: 248 seconds)
[00:17:32] <ikke> correct
[00:17:35] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[00:17:51] <SmashingX> TIL
[00:18:13] <SmashingX> sorry git for swearing at you.
[00:19:15] *** Quits: pizdets_ (~pizdets@183.182.111.62) (Ping timeout: 245 seconds)
[00:20:44] *** Joins: pizdets (~pizdets@183.182.114.167)
[00:23:27] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[00:23:49] <SmashingX> if a .gitignore file has in its contents a path that starts with a '/' means that git will ignore that path at root?
[00:24:20] <ikke> yes
[00:24:25] <ikke> well
[00:24:28] *** Joins: arxanas (~arxanas@136-27-63-222.cab.webpass.net)
[00:24:31] <ikke> relative to that .gitignore file
[00:24:43] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[00:25:05] <ikke> a .gitignore file in a subdirectory cannot affect anything outside of that directory
[00:25:24] <arxanas> bremner: I've seen the documentation on patch IDs, but it's not said where it's used it, if anywhere, and I want to know if it's used specifically in `git rebase` at present. The man-pages make is sound like it is, but I don't see anything in the source code to back that up. Is the documentation out of date? Is there someone who knows who I can
[00:25:24] <arxanas> ask?
[00:25:30] *** Quits: bam32 (~bambams@user/bambams) (Ping timeout: 272 seconds)
[00:25:40] <SmashingX> gotcha
[00:25:45] <SmashingX> that's clear
[00:25:49] <Nomikos> what happens if you `git add .git`?
[00:25:58] <ikke> Nomikos: nothing, git will ignore it
[00:26:01] <Nomikos> awww
[00:27:02] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Quit: Leaving.)
[00:27:14] <arxanas> j416: I think in those case, it just attempts to apply the patch, and if it results in an empty commit, it skips it (unless configured otherwise). But I'm curious about specifically the patch ID mechanism
[00:27:18] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[00:27:24] *** Quits: daoudr (~daoudr@178.197.212.193) (Quit: Leaving)
[00:28:11] *** Quits: randomuser (~randomuse@user/randomuser) (Ping timeout: 258 seconds)
[00:28:24] <bremner> arxanas: dunno. When I was building a rebase-like-thing, I started with patch-ids, but then ended up doing trial application
[00:29:13] <arxanas> I have trial application, I'm just trying to match the behavior of Git, but computing patch IDs on large repos can end up taking quite a while if your branch is stale
[00:31:02] <SmashingX> Nomikos: Just curious, why do you want to add it?
[00:31:26] <ikke> arxanas: that's something I've wondered about myself before, and at some point, I just came to accept it kind of just meant skipping empty patches, but not sure if this is some old documentation or not
[00:32:27] <Nomikos> SmashingX: I like testing things to see if they will or will not break like that
[00:32:41] <Nomikos> and if they do break, if there will be shiny glitter shards all over the place
[00:33:17] <Nomikos> like some version 1 compact discs, you ever bend one of those outward to their breaking point?
[00:33:18] <SmashingX> In my mind there isn't a situation where that might be necessary.
[00:33:40] <Nomikos> well, no, not "necessary"
[00:34:01] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Remote host closed the connection)
[00:34:07] <Nomikos> it's just a "what if" experiment
[00:35:02] *** Joins: randomuser (~randomuse@user/randomuser)
[00:35:39] <ikke> Nomikos: the low-hanging fruit should be long gone
[00:36:46] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[00:36:53] <SmashingX> I don't understand the analogy but well.
[00:37:11] <ikke> what analogy?
[00:37:17] <ikke> low-hanging fruit?
[00:37:17] <SmashingX> about the fruit
[00:37:20] <SmashingX> yup
[00:37:23] <ikke> It's an idiom
[00:37:24] <arxanas> ikke: the trouble is that if it's *just* skipping empty patches, then if you try something like commit A, revert A, and then rebase A again onto that branch, then A doesn't get applied a second time. I don't see why that would happen without a patch ID deduplication mechanism. Or maybe I'm just misunderstanding something about how the merge
[00:37:25] <arxanas> happens?
[00:37:47] <arxanas> ^ in the above case, I would expect A to apply again, instead of being skipped, because it should no longer produce an empty patch
[00:37:48] <ikke> SmashingX: low-hanging fruit is easy to pick
[00:37:49] <SmashingX> lmgt
[00:38:25] <SmashingX> what is that actually mean in this case with what Nomikos is doing?
[00:38:47] <ikke> SmashingX: trying to add / track .git is fairly basic
[00:39:05] <Nomikos> adding the .git directory to the .git directory is something not intended, but easily done - but also easily prevented
[00:39:06] <ikke> (in the sense of looking for things that break
[00:39:13] <SmashingX> basic but also useless I think
[00:39:20] <SmashingX> ikke: got it
[00:39:25] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[00:39:51] <Nomikos> it's like an OS preventing you from copying a directory into itself, or a browser preventing html frames from loading themselves
[00:39:57] <Nomikos> *framesets
[00:40:03] *** Quits: theoceaniscool (~theoceani@93.177.120.45) (Ping timeout: 268 seconds)
[00:40:07] *** Quits: randomuser (~randomuse@user/randomuser) (Quit: Leaving)
[00:40:54] <SmashingX> ok, I just should get back to keep fighting with my .gitignore files, sorry Nomikos.
[00:41:08] <Nomikos> SmashingX: no apologies needed, good luck :-)
[00:42:05] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[00:43:28] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[00:44:01] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[00:44:45] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:51:50] *** Joins: theoceaniscool (~theoceani@93.177.120.45)
[00:52:08] *** Joins: anton (~anton@tloks.com)
[00:55:21] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (K-Lined)
[00:55:22] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (K-Lined)
[00:56:55] *** Quits: anton (~anton@tloks.com) (Client Quit)
[00:57:18] *** Joins: bambanxx (~bambanx@181-163-41-17.baf.movistar.cl)
[00:58:42] *** Joins: nobody_ (~nobody@87.13.30.222)
[00:58:53] *** Joins: anton (~anton@tloks.com)
[00:59:54] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 256 seconds)
[01:00:54] *** Quits: anton (~anton@tloks.com) (Remote host closed the connection)
[01:01:06] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[01:06:38] *** Joins: Narrat (~omnius@p200300df5f0ae5b806ea56fffe2e7cdc.dip0.t-ipconnect.de)
[01:08:26] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 258 seconds)
[01:09:04] *** Joins: kingjulian (~kingjulia@41.1.139.138)
[01:09:16] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 244 seconds)
[01:09:22] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[01:10:57] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[01:11:13] *** Joins: tejr (~tejr@user/tejr)
[01:13:04] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 272 seconds)
[01:21:59] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 268 seconds)
[01:23:32] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[01:23:34] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:27:36] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Remote host closed the connection)
[01:30:45] <circuitbone> i start with a template https://github.com/github/gitignore SmashingX
[01:31:17] <ikke> I just ignore the things I need to ignore
[01:32:12] *** Quits: durham (~durham@2620:10d:c091:480::1:2071) (Ping timeout: 258 seconds)
[01:35:07] *** Quits: lavos (~molt@95.155.22.30) (Quit: Leaving)
[01:35:30] *** Joins: molt (~molt@95.155.22.30)
[01:42:12] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 272 seconds)
[01:46:46] *** Quits: malteger (~malteger@user/malteger) (Ping timeout: 258 seconds)
[01:46:49] *** Joins: malteger_ (~malteger@user/malteger)
[01:51:53] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:55:17] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[01:59:14] *** Joins: lavos (~molt@79.140.150.21)
[01:59:37] *** Quits: lavos (~molt@79.140.150.21) (Client Quit)
[02:00:00] *** Joins: lavos (~molt@79.140.150.21)
[02:03:44] *** Quits: molt (~molt@95.155.22.30) (Ping timeout: 272 seconds)
[02:05:11] *** Quits: bambanxx (~bambanx@181-163-41-17.baf.movistar.cl) (Quit: Textual IRC Client: www.textualapp.com)
[02:06:49] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[02:09:45] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:10:03] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:12:19] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[02:13:47] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[02:13:49] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[02:15:38] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[02:19:21] *** Quits: lpapp_ (~lpapp@90.242.149.92) (Ping timeout: 248 seconds)
[02:20:54] *** Quits: lavos (~molt@79.140.150.21) (Quit: Leaving)
[02:25:01] <SmashingX> circuitbone: nice templates! thank you for sharing!
[02:27:51] <circuitbone> welcome SmashingX
[02:28:41] <circuitbone> I used the toptal generator before that https://www.toptal.com/developers/gitignore
[02:32:08] *** Joins: humanface (~humanface@20014C4E1C444D00B4E15369E72AA46D.dsl.pool.telekom.hu)
[02:33:34] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:36:03] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[02:36:25] *** Quits: jmcantre2 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:36:36] *** Quits: mci64 (~mci64@185.242.190.95) (Ping timeout: 268 seconds)
[02:38:56] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[02:39:17] *** Quits: kingjulian (~kingjulia@41.1.139.138) (Ping timeout: 258 seconds)
[02:40:50] *** Joins: anton (anton@tloks.com)
[02:41:49] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[02:43:11] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[02:43:26] *** Quits: frobnic (fb@b2b-130-180-11-14.unitymedia.biz) (Ping timeout: 252 seconds)
[02:43:30] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[02:43:44] *** Joins: frobnic (fb@b2b-130-180-11-14.unitymedia.biz)
[02:43:53] *** Quits: junktext (~junktext@109.201.152.161) (Ping timeout: 258 seconds)
[02:45:02] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[02:45:28] *** Quits: Arokh (~MoveAlong@ip-88-153-210-106.hsi04.unitymediagroup.de) (Ping timeout: 272 seconds)
[02:45:55] *** Joins: lpapp_ (~lpapp@90.242.149.92)
[02:46:21] *** Joins: Arokh (~MoveAlong@ip-88-153-210-106.hsi04.unitymediagroup.de)
[02:46:30] *** Joins: ferdna (~ferdna@user/ferdna)
[02:48:45] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[02:52:04] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:52:28] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Client Quit)
[02:53:38] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[02:53:58] *** Quits: jimklimov1 (~jimklimov@ip-86-49-254-149.net.upcbroadband.cz) (Read error: Connection reset by peer)
[02:55:05] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:59:02] *** Joins: Xenguy (~Xenguy@devuan/developer/Xenguy)
[02:59:28] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[02:59:28] *** Quits: Narrat (~omnius@p200300df5f0ae5b806ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[03:04:29] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[03:09:41] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[03:14:10] *** Joins: BlessJah_ (~BlessJah@user/blessjah)
[03:17:55] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 268 seconds)
[03:18:15] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[03:18:17] *** Joins: debsan (~debsan@2800:810:471:8425::1000)
[03:19:39] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:26:29] *** Quits: Duckle (~Duckle@user/duckle) (Quit: Ping timeout (120 seconds))
[03:28:41] *** Joins: Duckle (~Duckle@user/duckle)
[03:29:33] *** Quits: humanface (~humanface@20014C4E1C444D00B4E15369E72AA46D.dsl.pool.telekom.hu) (Quit: Client closed)
[03:32:34] *** Quits: wgrant (~wgrant@ubuntu/member/wgrant) (Ping timeout: 240 seconds)
[03:33:31] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[03:34:11] *** jmcantre1 is now known as jmcantrell
[03:35:47] *** Quits: theoceaniscool (~theoceani@93.177.120.45) (Ping timeout: 268 seconds)
[03:36:47] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[03:38:47] *** Joins: christall (~christall@24.235.88.243)
[03:39:30] *** Quits: dermato (~dermatobr@154.21.23.75) (Ping timeout: 268 seconds)
[03:40:25] *** Quits: ToAruShiroiNeko (~eva@user/toarushiroineko) ()
[03:42:42] *** Joins: dermato (~dermatobr@154.21.23.75)
[03:43:49] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 268 seconds)
[03:46:18] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[03:46:53] *** Quits: christall (~christall@24.235.88.243) (Ping timeout: 268 seconds)
[03:47:48] *** Parts: Raguile (~Raguile@user/raguile) ()
[03:51:24] *** Joins: christall (~christall@24.235.88.243)
[03:52:45] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[03:53:13] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 248 seconds)
[03:53:20] *** Joins: christall (~christall@24.235.88.243)
[03:53:39] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Remote host closed the connection)
[03:54:18] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 268 seconds)
[03:54:49] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[03:54:49] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[03:55:47] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[03:57:59] *** Quits: christall (~christall@24.235.88.243) (Ping timeout: 268 seconds)
[03:59:00] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[04:02:05] *** Quits: dermato (~dermatobr@154.21.23.75) (Ping timeout: 258 seconds)
[04:03:53] *** Quits: arxanas (~arxanas@136-27-63-222.cab.webpass.net) (Quit: Client closed)
[04:04:18] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[04:05:02] *** Joins: dermato (~dermatobr@154.21.23.75)
[04:05:28] *** Joins: christall (~christall@24.235.88.243)
[04:07:12] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:07:45] *** Quits: skapate (~Skapata@user/skapata) (Remote host closed the connection)
[04:09:45] *** Quits: christall (~christall@24.235.88.243) (Ping timeout: 248 seconds)
[04:10:17] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[04:11:32] *** Quits: PinealGl1ndOptic (~PinealGla@37.115.210.35) (Quit: leaving)
[04:16:57] *** Quits: Misotauros (~Misotauro@193-181-35-232.cust.norisab.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[04:17:11] *** Joins: Misotauros (~Misotauro@193-181-35-232.cust.norisab.com)
[04:18:32] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[04:18:33] *** Quits: rossome (~rossome@server.likeaross.com) (Quit: WeeChat 3.0.1)
[04:18:33] *** Joins: mrteals (~mistertea@pool-98-116-189-184.nycmny.fios.verizon.net)
[04:18:33] *** Quits: orbyt (~textual@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:18:35] *** Joins: wgrant (~wgrant@ubuntu/member/wgrant)
[04:19:27] *** Joins: rossome (~rossome@server.likeaross.com)
[04:25:35] *** Quits: treefrob (~treefrob@p57a9648f.dip0.t-ipconnect.de) (Quit: Leaving)
[04:26:52] *** Quits: xx (~xx@user/xx) (Quit: xx)
[04:27:00] *** Quits: frobnic (fb@b2b-130-180-11-14.unitymedia.biz) (Ping timeout: 258 seconds)
[04:27:08] *** Joins: treefrob (~treefrob@p57a9648f.dip0.t-ipconnect.de)
[04:30:41] *** Quits: mrteals (~mistertea@pool-98-116-189-184.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[04:33:44] *** Joins: Misotaur- (~Misotauro@193-181-35-203.cust.norisab.com)
[04:35:11] *** Quits: Misotauros (~Misotauro@193-181-35-232.cust.norisab.com) (Ping timeout: 252 seconds)
[04:35:30] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Ping timeout: 276 seconds)
[04:40:24] *** Joins: christall (~christall@24.235.88.243)
[04:40:26] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[04:40:41] *** Quits: Misotaur- (~Misotauro@193-181-35-203.cust.norisab.com) (Ping timeout: 248 seconds)
[04:42:44] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[04:46:24] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:48:38] *** Joins: frobnic (fb@b2b-130-180-11-14.unitymedia.biz)
[04:50:34] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[04:51:01] *** Quits: shailangsa (~shailangs@host86-185-58-139.range86-185.btcentralplus.com) (Ping timeout: 268 seconds)
[04:51:21] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 248 seconds)
[04:51:29] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:51:30] *** Joins: christall (~christall@24.235.88.243)
[04:51:53] *** Quits: eltonpinto (~eltonpint@169.109.136.34.bc.googleusercontent.com) (Quit: WeeChat 2.3)
[04:53:42] *** Quits: SmashingX (~SmashingX@user/smashingx) (Ping timeout: 276 seconds)
[04:54:45] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[04:55:01] *** Quits: Tobbi_ (~Thunderbi@62.214.69.130) (Quit: Tobbi_)
[04:55:20] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[04:55:58] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[04:56:35] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:57:44] *** Quits: thiago (~thiago@2601:1c0:4501:635c:dcf2:f943:b5fe:8e6b) (Ping timeout: 252 seconds)
[04:58:03] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[04:59:12] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[04:59:29] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[04:59:47] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[05:00:25] *** Quits: jmcantre2 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[05:04:07] *** Joins: adl_ (~adl@117.32.216.79)
[05:04:36] *** Quits: ThorMojito1 (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[05:08:01] *** Joins: christall (~christall@24.235.88.243)
[05:09:55] *** Joins: audiocat (~audio@2603-8081-1800-00ad-f351-4ddf-8729-f716.res6.spectrum.com)
[05:10:19] *** Joins: Betal (~Betal@user/betal)
[05:12:46] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[05:12:59] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[05:13:44] <adl_> Hi, is here any good way to analyze the performance of two versions git?
[05:13:52] *** Joins: christall (~christall@24.235.88.243)
[05:14:11] <adl_>  I know gprof and perf can see percentage of function call time...
[05:14:12] <adl_> But I want more accurate time and number of calls
[05:20:17] *** Joins: mrteals (~mistertea@pool-98-116-189-184.nycmny.fios.verizon.net)
[05:23:26] *** Quits: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net) (Read error: No route to host)
[05:25:16] *** Quits: lpapp_ (~lpapp@90.242.149.92) (Ping timeout: 258 seconds)
[05:26:06] *** Joins: Caffeinated (~alexboy@user/alexdelarge)
[05:26:20] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[05:33:02] <Caffeinated> did anyone here help audiocat with their issue (it would have been like watching someone who cannot swim drown in 3' of water)
[05:34:09] <audiocat> Caffeinated, if you're the git expert why didn't you try to help?
[05:34:12] <audiocat> i'm decent with git
[05:34:37] <Caffeinated> I like watching the incompetantly unqualified struggle
[05:34:42] <Caffeinated> and no, you aren't
[05:35:16] *** Quits: nobody_ (~nobody@87.13.30.222) (Ping timeout: 272 seconds)
[05:35:51] *** Quits: Hrmmm (~Hrmmm@198-27-172-195.fiber.dynamic.sonic.net) (Quit: Hrmmm)
[05:36:09] <adl_> emmmm
[05:38:34] *** Joins: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net)
[05:40:37] *** Joins: christall (~christall@24.235.88.243)
[05:44:49] *** Quits: mrteals (~mistertea@pool-98-116-189-184.nycmny.fios.verizon.net) (Ping timeout: 258 seconds)
[05:45:02] <nedbat> Caffeinated: are you always this mean?
[05:45:36] *** Joins: thiago (~thiago@2601:1c0:4501:635c:ce3a:25e:6549:5cc8)
[05:47:53] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 248 seconds)
[05:51:03] *** Joins: durham (~durham@2620:10d:c091:480::1:c156)
[05:53:33] *** Joins: lpapp_ (~lpapp@90.242.149.92)
[05:54:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[05:54:35] *** Joins: velix (~velix@user/velix)
[05:54:38] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[05:54:52] <velix> Anyone with an idea? `LC_ALL=C git clone "https://github.com/libgeos/geos"` gives me "fatal: unable to access 'https://github.com/libgeos/geos/': Failed sending HTTP request"
[05:55:22] <velix> git version 2.30.2
[05:57:43] *** Quits: t3nj1n_ (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Quit: WeeChat 2.8)
[05:57:49] <BtbN> Works fine here
[05:57:55] <BtbN> can you access the website itself?
[05:58:50] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[05:59:15] <velix> yes
[05:59:20] *** Joins: christall (~christall@24.235.88.243)
[05:59:25] <velix> hmm... maybe some cert problem?
[05:59:40] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[06:01:09] *** Quits: Jonno_FTW (~come@api.carswap.me) (Quit: Reconnecting)
[06:01:13] <velix> I've purged `git` one Debian Buster and reinstalled it.
[06:01:17] *** Joins: Jonno_FTW (~come@api.carswap.me)
[06:01:18] <velix> Now I'm getting `fatal: unable to access 'http://github.com/libgeos/geos/': Failed sending HTTP2 data`
[06:01:21] <velix> Interesting.
[06:01:25] <velix> Why does it send H2?
[06:01:31] *** Quits: Jonno_FTW (~come@api.carswap.me) (Changing host)
[06:01:31] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[06:01:54] <BtbN> Because it can, probably
[06:02:02] <velix> seems like it can't :D
[06:02:04] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[06:02:24] <BtbN> Are you behind some crazy corporate MITM firewall or something, and/or need a proxy?
[06:02:45] <velix> nope
[06:02:54] <velix> it worked yesterday :D
[06:03:06] <velix> I mean, I'm working with git every day.
[06:03:17] <velix> can I make git more verbose?
[06:03:28] <velix> This error output isn't really smart
[06:03:31] <BtbN> can you curl that url from the very same shell?
[06:03:36] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[06:03:59] <velix> yep
[06:04:12] <BtbN> very odd
[06:04:23] <BtbN> try increasing the debug level to see where exactly it fails
[06:04:24] <velix> Does "git" use cURL ?
[06:04:33] <velix> how can I do that? "-v" didn't do it?
[06:04:48] <BtbN> Google says GIT_CURL_VERBOSE=1 GIT_TRACE=1
[06:04:53] <j416> http will redirect to https
[06:05:18] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[06:05:18] <j416> doesn't make sense for it to try http2 over non-tls
[06:05:29] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[06:05:31] <velix> log output: https://bpa.st/raw/6CQQ
[06:05:56] <velix> seems like the server has an issue
[06:06:15] <j416> works just fine here.
[06:06:18] <velix> CDN
[06:06:35] <velix> It can be my nearest mirror having this issue.
[06:06:35] *** Joins: christall (~christall@24.235.88.243)
[06:07:31] <velix> ping github.com -> lb-140-82-121-4-fra.github.com
[06:07:39] <velix> since I'm in Germany, it uses the Mirror in Frankfurt.
[06:07:59] <BtbN> that exact same edge server works fine for me
[06:08:30] <velix> Nice. Then I can go to bed now :)
[06:08:38] <velix> Work can't be finished for tomorrow :D
[06:10:21] <BtbN> Use ssh?
[06:10:33] <velix> I fixed it !
[06:10:35] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 268 seconds)
[06:10:48] <velix> according to github, it's a package issue! aptitude install libcurl3-gnutls=7.64.0-4+deb10u2
[06:10:51] <velix> This did it
[06:10:55] <velix> eeeh
[06:11:04] <velix> according to superuser.com
[06:11:30] <velix> Thanks for your time!
[06:12:38] *** Quits: durham (~durham@2620:10d:c091:480::1:c156) (Ping timeout: 272 seconds)
[06:14:43] *** Quits: lpapp_ (~lpapp@90.242.149.92) (Ping timeout: 258 seconds)
[06:16:19] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[06:16:59] *** Joins: lpapp_ (~lpapp@90.242.177.203)
[06:18:02] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[06:18:20] *** Joins: christall (~christall@24.235.88.243)
[06:22:21] *** Joins: Misotauros (~Misotauro@193-181-35-220.cust.norisab.com)
[06:22:26] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[06:23:58] *** Joins: average (uid473595@user/average)
[06:24:57] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 244 seconds)
[06:26:49] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 248 seconds)
[06:26:55] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:29:10] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:30:18] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[06:32:47] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[06:33:27] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:36:34] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[06:38:01] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 248 seconds)
[06:42:41] *** Joins: shailangsa (~shailangs@host86-145-14-24.range86-145.btcentralplus.com)
[06:43:38] *** Joins: tejr (~tejr@user/tejr)
[06:44:51] *** Quits: anton (anton@tloks.com) (Quit: anton)
[06:44:59] *** Joins: anton (anton@tloks.com)
[06:46:00] *** Joins: zebrag (~chris@user/zebrag)
[06:48:20] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[06:50:01] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[06:58:02] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:58:02] *** FinnElija is now known as Guest2839
[06:58:02] *** finn_elija is now known as FinnElija
[07:00:29] *** Quits: atrigent (~atrigent@130.44.130.244) (Remote host closed the connection)
[07:01:06] *** Joins: atrigent (~atrigent@130.44.130.244)
[07:01:46] *** Quits: Guest2839 (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 268 seconds)
[07:05:42] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[07:06:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:12:18] *** Quits: atrigent (~atrigent@130.44.130.244) (Read error: Connection reset by peer)
[07:12:35] *** Joins: atrigent (~atrigent@130.44.130.244)
[07:16:20] *** Joins: mrteals (~mistertea@pool-98-116-189-184.nycmny.fios.verizon.net)
[07:16:47] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[07:17:31] *** Quits: anton (anton@tloks.com) (Quit: anton)
[07:24:53] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[07:24:57] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 248 seconds)
[07:25:07] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[07:26:32] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:35:33] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[07:37:43] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[07:39:06] *** Quits: dermato (~dermatobr@154.21.23.75) (Remote host closed the connection)
[07:40:57] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[07:48:34] <thebombzen> github was down earlier today
[07:48:37] <thebombzen> so maybe that was it?
[07:49:56] *** Quits: yuckey2d (~yuckey2d@46.246.3.221) (Quit: The Lounge - https://thelounge.chat)
[07:55:58] *** Joins: gnoo (~gnoo@user/gnoo)
[08:00:47] *** Joins: dermato (~dermatobr@154.21.23.75)
[08:03:24] *** Joins: hbautista (~hbautista@187.171.122.82)
[08:07:46] *** Quits: ano (~weechat@user/ano) (Ping timeout: 244 seconds)
[08:13:59] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:17:00] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[08:29:29] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 248 seconds)
[08:30:30] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:36:56] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 258 seconds)
[08:38:14] *** Joins: yuckey2d (~yuckey2d@195.246.120.132)
[08:38:14] *** Quits: yuckey2d (~yuckey2d@195.246.120.132) (Remote host closed the connection)
[08:38:35] *** Joins: yuckey2d (~yuckey2d@195.246.120.132)
[08:39:42] *** Joins: ByteHackr (~sanroy@43.252.250.113)
[08:42:36] *** Quits: Peng (~mnordhoff@flash.mattnordhoff.net) (Quit: Peng timeout)
[08:42:45] *** Joins: Peng (~mnordhoff@flash.mattnordhoff.net)
[08:43:01] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[08:43:23] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[08:49:04] *** Quits: mrteals (~mistertea@pool-98-116-189-184.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[08:50:33] *** Quits: rossome (~rossome@server.likeaross.com) (Quit: WeeChat 3.2)
[08:53:39] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:55:33] *** Joins: ano (~weechat@user/ano)
[08:56:31] *** Joins: vishal (~vishal@fedora/vishal)
[08:59:56] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 258 seconds)
[09:00:00] *** Joins: ferdna (~ferdna@user/ferdna)
[09:00:12] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:04:02] *** Parts: lpapp_ (~lpapp@90.242.177.203) ()
[09:13:21] *** Joins: mci64 (~mci64@185.242.190.95)
[09:23:40] *** Quits: mci64 (~mci64@185.242.190.95) (Quit: Connection closed)
[09:29:47] *** Joins: mci64 (~mci64@185.242.190.95)
[09:30:07] *** Quits: mci64 (~mci64@185.242.190.95) (Client Quit)
[09:32:02] *** Joins: mci64 (~mci64@185.242.190.95)
[09:32:14] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[09:32:34] *** Quits: mci64 (~mci64@185.242.190.95) (Client Quit)
[09:33:53] *** Joins: mci64 (~mci64@185.242.190.95)
[09:34:29] *** Quits: mci64 (~mci64@185.242.190.95) (Client Quit)
[09:35:22] *** Joins: mci64 (~mci64@185.242.190.95)
[09:35:37] *** Quits: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net) (Quit: Shutdown)
[09:35:55] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[09:38:28] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 272 seconds)
[09:39:06] *** Joins: Guest98 (~Guest98@195.59.168.126)
[09:39:08] *** Parts: Guest98 (~Guest98@195.59.168.126) ()
[09:39:21] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:39:39] *** Quits: mci64 (~mci64@185.242.190.95) (Client Quit)
[09:40:25] *** Joins: mci64 (~mci64@185.242.190.95)
[09:43:06] *** Quits: mci64 (~mci64@185.242.190.95) (Client Quit)
[09:44:22] *** Joins: mci64 (~mci64@185.242.190.95)
[09:47:53] *** Quits: hbautista (~hbautista@187.171.122.82) (Ping timeout: 248 seconds)
[09:51:31] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[09:54:49] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[09:55:02] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 268 seconds)
[09:55:20] *** Quits: mci64 (~mci64@185.242.190.95) (Quit: Connection closed)
[09:55:50] *** Quits: audiocat (~audio@2603-8081-1800-00ad-f351-4ddf-8729-f716.res6.spectrum.com) (Ping timeout: 252 seconds)
[09:55:57] *** Joins: mci64 (~mci64@185.242.190.95)
[09:57:22] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[09:59:00] *** Joins: jazzy (~jaziz@2600:380:8638:b14c:3d37:fea7:101f:573e)
[10:01:42] *** Joins: Sazhen86_ (~Sazhen86@125-236-239-93.adsl.xtra.co.nz)
[10:03:11] *** Quits: debsan (~debsan@2800:810:471:8425::1000) (Ping timeout: 258 seconds)
[10:04:43] *** Quits: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz) (Ping timeout: 258 seconds)
[10:08:56] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 258 seconds)
[10:11:25] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[10:12:21] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:16:37] *** Quits: wgrant (~wgrant@ubuntu/member/wgrant) (Ping timeout: 268 seconds)
[10:24:10] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[10:31:46] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[10:34:49] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Ping timeout: 248 seconds)
[10:35:08] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[10:37:30] *** Joins: lpapp_ (~lpapp@90.242.177.203)
[10:37:49] <lpapp_> sorry, I forgot to write down the command that I was given here yesterday to find the branch off commit between main and a topic branch
[10:40:48] *** Quits: lpapp_ (~lpapp@90.242.177.203) (Quit: leaving)
[10:40:57] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[10:41:03] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[10:43:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:43:36] <gry> lpapp: hi
[10:43:46] <gry> lpapp: https://cryptobin.co/w6l0q4g2 password 'app', expires in 10 mins
[10:44:11] *** Quits: Erisa (~Erisa@51.15.106.41) (Quit: The Lounge - https://thelounge.chat)
[10:44:12] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[10:44:32] *** Joins: Erisa (~Erisa@51.15.106.41)
[10:44:35] *** Joins: wgrant (~wgrant@ubuntu/member/wgrant)
[10:46:39] *** Quits: mci64 (~mci64@185.242.190.95) (Quit: Connection closed)
[10:46:43] <lpapp> gry: please use inline paste here.
[10:46:50] <lpapp> I feel like spam otherwise with a strange link :)
[10:46:55] <lpapp> or phishing.
[10:47:47] <lpapp> oh, I checked it, I see that you saved the gitlog, thanks
[10:49:10] <lpapp> looks like it was git merge-base main HEAD, thanks again!
[10:49:44] <lpapp> Unfortunately, it does not work though
[10:49:53] <lpapp> it gives me a commit hash which is a commit from main
[10:50:58] <lpapp> I was hoping to figure out the first commit made by us in our topic branch.
[10:51:03] <lpapp> that diverted from main for the first time.
[10:51:32] *** Joins: jimklimov (~jimklimov@ip-86-49-254-149.net.upcbroadband.cz)
[10:52:21] *** Joins: makara (~sol@196.61.111.63)
[10:53:54] <makara> hi. If i go `git diff HEAD~1` I get a diff of HEAD with the second to last commit for the entire repo. But is there a way to go `git diff HEAD~1 -- file` which gives a diff of the second to last commit for THAT FILE ?
[10:54:41] *** Quits: thiago (~thiago@2601:1c0:4501:635c:ce3a:25e:6549:5cc8) (Ping timeout: 252 seconds)
[10:56:33] <bookworm> exactly like that. But head~1 doesn't mean second to last commit where that file was affected, but if you have a log like A>B>C and C is HEAD, head~1 is always B, no matter if the file you are interested in was only changed in A
[10:56:38] <bookworm> does this make sense?
[10:57:33] <bookworm> git log --patch -- file might do what you want
[10:57:33] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:58:46] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[10:58:48] *** Lord_of_Life_ is now known as Lord_of_Life
[10:59:58] <makara> it does, thanks
[11:03:55] *** Joins: alkino (~quassel@user/alkino)
[11:05:18] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[11:08:25] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[11:08:55] <gry> lpapp: just an encrypted paste, so that the chat log is not exposed to the whole web unnecessarily. i hope someone can help you further :)
[11:14:05] <lpapp> gry: that was a good idea not to expose :)
[11:14:27] <lpapp> although, it seems like the /topic says the channel is already logged. I could have checked that maybe.
[11:21:40] <gry> ok
[11:23:13] *** Joins: furrymcgee (~devuan@31.179.186.66)
[11:24:40] *** Joins: vysn (~vysn@user/vysn)
[11:28:51] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a9ef:bcc0:fc64:d126)
[11:28:52] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a9ef:bcc0:fc64:d126) (Changing host)
[11:28:52] *** Joins: skapata (~Skapata@user/skapata)
[11:34:34] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[11:35:25] *** Quits: amosbird_ (~amosbird@13.75.119.182) (Remote host closed the connection)
[11:35:39] *** Joins: amosbird (~amosbird@13.75.119.182)
[11:37:34] *** rf` is now known as envex
[11:37:49] *** Joins: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr)
[11:37:52] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[11:38:07] *** Quits: nivag (~gavin@103-76-144-176.ip.cis.gen.nz) (Remote host closed the connection)
[11:38:46] *** Quits: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[11:39:45] *** Quits: chovy (~chovy@75-55-138-167.lightspeed.mtryca.sbcglobal.net) (Quit: leaving)
[11:40:25] *** Quits: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr) (Remote host closed the connection)
[11:41:44] *** Joins: lgc (~lgc@user/lgc)
[11:42:49] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[11:43:04] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[11:43:28] *** Joins: nivag (~gavin@103-76-144-176.ip.cis.gen.nz)
[11:43:35] *** Joins: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr)
[11:45:55] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[11:56:06] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[11:56:57] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 248 seconds)
[11:59:37] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[12:05:21] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[12:08:32] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[12:09:36] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[12:13:36] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[12:15:02] *** Quits: fling (~fling@user/fling) (Ping timeout: 268 seconds)
[12:16:41] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[12:19:40] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[12:21:52] *** Quits: wgrant (~wgrant@ubuntu/member/wgrant) (Ping timeout: 272 seconds)
[12:26:28] *** Joins: saltrocklamp[m] (~elementio@2001:470:69fc:105::5065)
[12:32:56] *** Parts: saltrocklamp[m] (~elementio@2001:470:69fc:105::5065) ()
[12:34:13] *** Joins: EvilDMP_ (~textual@2001:1c00:30e:1f00:1914:858:a728:1312)
[12:35:50] *** Joins: wgrant (~wgrant@ubuntu/member/wgrant)
[12:36:56] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.2)
[12:38:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 272 seconds)
[12:40:19] *** Joins: dimi1947 (~dimi1947@2a02:1388:208c:8674:75e9:bdc7:ef3c:3a1f)
[12:41:37] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[12:50:25] *** Quits: nyah (~nyah@51.146.30.113) (Quit: leaving)
[12:51:53] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 248 seconds)
[12:54:11] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[12:56:04] *** Joins: nobody_ (~nobody@87.13.30.222)
[12:56:04] *** Joins: rsrx (~rsrx@103.225.150.81)
[13:00:07] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:03:10] *** Joins: Guest63 (~Guest63@123-204-157-208.static.seed.net.tw)
[13:07:52] *** Quits: adl_ (~adl@117.32.216.79) (Read error: Connection reset by peer)
[13:08:10] *** Joins: adlternative (~adl@117.32.216.12)
[13:10:26] *** Joins: theoceaniscool (~theoceani@93.177.120.45)
[13:10:31] *** Joins: pilyn (~pilyn@user/pilyn)
[13:10:43] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:11:43] *** Quits: Guest63 (~Guest63@123-204-157-208.static.seed.net.tw) (Quit: Client closed)
[13:26:28] *** Joins: xx (~xx@user/xx)
[13:29:45] *** Quits: wgrant (~wgrant@ubuntu/member/wgrant) (Ping timeout: 248 seconds)
[13:30:26] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:42:10] *** 020AACS48 is now known as AnapodoPsalidaki
[13:44:11] *** Joins: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com)
[13:46:40] *** Quits: dimi1947 (~dimi1947@2a02:1388:208c:8674:75e9:bdc7:ef3c:3a1f) (Ping timeout: 258 seconds)
[13:48:49] *** Parts: Caffeinated (~alexboy@user/alexdelarge) ()
[13:55:47] *** Joins: wgrant (~wgrant@ubuntu/member/wgrant)
[14:00:39] *** Quits: bin101 (~bin101@user/bin101) (Quit: goodbye)
[14:01:52] *** Joins: bin101 (~bin101@user/bin101)
[14:07:14] *** BlessJah_ is now known as BlessJah
[14:10:58] *** Quits: filePeter (~filePeter@user/filepeter) (Ping timeout: 268 seconds)
[14:11:03] *** Quits: Shentino (~shentino@user/shentino) (Read error: Connection reset by peer)
[14:11:42] *** Joins: rsx (~dummy@ppp-188-174-141-119.dynamic.mnet-online.de)
[14:12:37] *** Joins: filePeter (~filePeter@user/filepeter)
[14:13:44] *** Joins: Shentino (~shentino@user/shentino)
[14:14:12] *** Joins: Mocramis_ (~mocramis@dalaran.sceen.net)
[14:14:39] <Mocramis_> Hello, when doing a rebase -r, is it possible to rename a merge commit ?
[14:15:18] <Mocramis_> Ha nevermind, using -c
[14:21:08] <j416> Mocramis_: rebase eats merges. What is "-c"?
[14:21:27] <Mocramis_> rebase with the -r option doesn't :)
[14:21:35] <j416> ah, didn't spot that.
[14:21:50] <j416> never used it so didn't know --rebase-merges can be written -r. til, thanks.
[14:22:03] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[14:22:20] <ikke> -r / --rebase-merges is deprecated
[14:22:51] <ikke> oh, my bad
[14:22:53] <ikke> sorry
[14:23:02] <ikke> -p / --preserve-merges is deprecated
[14:23:56] * j416 serves coffee
[14:24:15] <ikke> thanks
[14:26:37] *** Quits: rsrx (~rsrx@103.225.150.81) (Quit: Leaving)
[14:27:07] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[14:27:07] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Killed (copper.libera.chat (Nickname regained by services)))
[14:27:07] *** __jmcantrell__ is now known as jmcantrell
[14:41:19] *** Joins: adhawkins_ (~adhawkins@user/adhawkins)
[14:42:00] *** Quits: adhawkins (~adhawkins@user/adhawkins) (Ping timeout: 268 seconds)
[14:42:42] *** adhawkins_ is now known as adhawkins
[14:42:43] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[14:43:12] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[14:43:21] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[14:57:49] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[14:58:56] *** Joins: gnooooo (~gnoo@user/gnoo)
[15:00:25] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 248 seconds)
[15:02:39] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[15:03:56] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[15:04:59] *** Joins: natrys (~natrys@user/natrys)
[15:07:22] *** Joins: humanface (~humanface@20014C4E1C444D00752D838E4CE40D04.dsl.pool.telekom.hu)
[15:10:25] *** Joins: lpapp_ (~lpapp@90.242.177.203)
[15:10:50] *** Parts: lpapp_ (~lpapp@90.242.177.203) ()
[15:12:12] <lpapp> hey, I was trying to create two branches yesterday off of our long-lived feature branch
[15:12:33] <lpapp> one for the rebase on main, and the other for the previous rebase and additional reword
[15:12:44] <lpapp> when I diff between them, I get a lot of code changes which I was not expecting
[15:12:54] <lpapp> can I somehow invesetigate why? Maybe, the base is different?
[15:13:49] *** Joins: darkbit (~db@152.32.99.67)
[15:14:21] <furrymcgee> git merge-base?
[15:16:59] <lpapp> I have never used git merge-base before. Which option should I look for?
[15:18:00] <ikke> lpapp: are you tring to figure out what changes a branch introduces compared to another branch?
[15:18:24] <lpapp> I was expecting git diff show no code difference between a rebased branch, and a rebased and reworded
[15:18:28] <lpapp> off from the topic branch
[15:18:39] <lpapp> but I see a lot of output in git diff for feature-rebase feature-rebase-reword
[15:18:52] <lpapp> Analysing the output, it seems that they may come from amin
[15:18:53] <lpapp> main*
[15:18:59] <lpapp> so, maybe they are not rebased on the same main commit.
[15:19:13] <ikke> ah yes, you see the changes from the commits that you rebased on
[15:19:22] <lpapp> we would feel safer if before merging the rebased topic branch back to main, we could make sure that git diff returns zero code changes after the reword.
[15:19:22] <ikke> use git range-diff
[15:19:59] <ikke> it's specially designed to see changes in branches compared to their rebased versions
[15:20:10] <ikke> git range-diff branch-before...branch-after
[15:20:33] <ikke> The output requires getting used to a bit
[15:20:34] <lpapp> it does not look good
[15:20:37] <lpapp> that also shows diffs
[15:20:52] <lpapp> and yes, the output is alien
[15:21:16] <lpapp> either way, git range-diff does not seem to make a difference (pun intended)
[15:21:26] <lpapp> it shows code changes
[15:21:36] <ikke> did you have conflicts during rebasing?
[15:21:40] <lpapp> nop
[15:21:53] <lpapp> I have a gut feeling that the only thing that could have gone wrong is a git pull --rebase in main
[15:21:56] <lpapp> or something
[15:22:05] <lpapp> but even that is also unlikely that I cannot remember it
[15:22:16] <ikke> lpapp: first, are the commits that are shown what you expect?
[15:22:49] <lpapp> the output is alien
[15:23:12] <lpapp> I am sorry to say this, but it would not be productive and effective from me to claim "expectation" on this sort of output at this point in time with my lack of knowledge and experience.
[15:24:40] <ikke> ok, lets try this: git range-diff main feature-rebase feature-rebase-reword
[15:25:27] <lpapp> honestly, it is a lot of output
[15:25:32] <lpapp> hundreds of pages
[15:25:46] <lpapp> or at least multiple of tens
[15:25:53] <lpapp> so, I am not sure I can claim anything
[15:26:21] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[15:26:37] <lpapp> it seems to show the rewords
[15:26:46] <lpapp> but I cannot claim 100% - it is just a gut feeling looking at it
[15:26:56] <lpapp> it is loads of output to parse
[15:27:08] <lpapp> eventually, it would be nice to see an empty output with something like git diff would normally do
[15:27:18] <lpapp> as that is not error-prone for an imperfect human-being like me.
[15:27:28] <osse> if you diff a branch agaisnt a rebased version of the same branch the differences you'll see will mostly be not from the branch itself but for all the stuff that happened on the main branch
[15:27:47] <lpapp> osse: that is why I created a third branch which is just the rebase on main
[15:27:55] <lpapp> and the second branch was that, plus the rewords
[15:28:01] <lpapp> and I tried to git diff the second and third
[15:28:04] <lpapp> I was expecting empty output
[15:28:22] <lpapp> the workaround is to squash changes into one patch and vimdiff
[15:28:29] <lpapp> but I still would like to understand what went wrong here.
[15:28:51] <ikke> lpapp: the diff is not necessarily empty
[15:29:13] <osse> lpapp: if you just diff the branches themselves then they won't be empty
[15:29:13] <ikke> if you rebase a branch onto commits that introduce new changes, those changes will be shown
[15:29:18] <osse> exactly
[15:29:36] <lpapp> but those commits are introduced both in the second and third branch
[15:29:44] <lpapp> ok, let me give you the exact steps I intended to do:
[15:29:54] <lpapp> 1. git switch -C feature-rebase
[15:30:00] <lpapp> 2. git rebase -i origin/main
[15:30:01] <ikke> lpapp: It would help is to know the structure of your history
[15:30:04] <lpapp> 3. save, quit
[15:30:11] <lpapp> 4. git switch -C feature-rebase-reword
[15:30:21] <lpapp> 5. git rebase -i origin/main
[15:30:29] <lpapp> 6. Mark all commits as reword and go through them one by one
[15:30:36] <lpapp> maybe, origin/main was dynamic in this?
[15:30:40] <ikke> !situation
[15:30:40] <gitinfo> Please post the url returned by `git log -n 20 --all --graph --format="%h %p %d %s" | curl -F text=@- https://upaste.de/` to give us an idea about what your situation is (increase the -n argument if your problem is more complex than 20 commits can explain)
[15:30:43] <lpapp> and before the two actions, they diverted?
[15:30:54] <ikke> lpapp: Hard for us to tell, we can only guess
[15:31:10] <lpapp> sorry, but this is proprietary code. I would love to post it, because I want to get help, but I would not be allowed.
[15:31:23] <ikke> If you leave out the commit messages?
[15:31:29] <ikke> ie, without %s
[15:32:10] <lpapp> ok, thanks, I will try.
[15:32:20] <lpapp> do you want this in the feature-rebase and feature-rebase-reword branches?
[15:32:40] <ikke> doesn't matter, but adjust -20 ideally to show both
[15:33:01] <ikke> you can also replace --all with 'main feature-rebase feature-rebase-reword'
[15:33:44] *** Joins: agsv (~agsv@207.232.14.6)
[15:33:51] <ikke> sadly git log cannot show the patch-id :(
[15:34:16] <lpapp> what is the consequence of this sentence?
[15:35:20] <ikke> It would have helped us better recognize the output without commit messages (ie, see commits that have been rebased but have the same content, without seeing the actual content
[15:35:54] <lpapp> ikke: https://upaste.de/JAk
[15:36:12] <lpapp> That is 100 ^^^ This is 200: https://upaste.de/cuP
[15:36:18] <lpapp> I remember we had 104 commits in our branch
[15:37:06] *** Quits: adlternative (~adl@117.32.216.12) (Quit: Konversation terminated!)
[15:37:14] <ikke> is that without --graph?
[15:37:21] <lpapp> oops, sorry
[15:37:40] <lpapp> ikke: https://upaste.de/SNG
[15:37:58] <Gurkenglas> How do I ask git for the size of a repository before cloning? googling told me there's no way, but when vscode ran out of disk, it told me the size before uncloning
[15:38:37] <lpapp> before cloning, you mean?
[15:38:50] <lpapp> uncloning sounds an interesting idea :)
[15:39:13] <j416> lpapp: you removed the merges, remember.
[15:39:14] <ikke> Gurkenglas: git does not expose this information over the protocol
[15:39:17] <Gurkenglas> no, while it was cloning, it ran out of disk, then the error said how much i would have needed, then vscode deleted the partially downloaded clone
[15:39:19] <j416> lpapp: that'd be the difference.
[15:39:53] <lpapp> j416: but I removed those in both feature-rebase and feature-rebase-reword?
[15:40:03] <j416> and you're diffing what to what?
[15:40:11] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[15:40:14] <lpapp> j416: feature-rebase feature-rebase-reword
[15:40:14] <osse> what are the real names of those branches?
[15:40:37] <j416> lpapp: then one will as mentioned above have the commits from main, and the other not
[15:40:46] <lpapp> -rebase-original: feature-rebase | -rebase: feature-rebase-reword
[15:41:03] <lpapp> j416: yeah, that is what I suspect
[15:41:06] <lpapp> would be to prove it.
[15:41:19] <lpapp> I do not know how to do that myself.
[15:43:15] <j416> "git diff main...feature-rebase" should give a similar diff to "git diff main...feature-rebase-reword"
[15:43:16] <agsv> Guys I didn't get something in the rev-parse manpage. Say I merged a branch B into my branch A, how can I output the last commit on branch B that was merged into A? git-log paste: http://ix.io/3vDR i wanna get 066015c974. notice A no longer points to it.
[15:43:44] <osse> agsv: A^2
[15:44:05] <j416> agsv: man gitrevisions for more examples
[15:44:05] <gitinfo> agsv: the gitrevisions manpage is available at https://gitirc.eu/gitrevisions.html
[15:44:20] <agsv> but notice A has more commits by now
[15:44:30] <agsv> I want the latest commit from A that was merged into B
[15:44:51] <ikke> That's not an easy question
[15:44:55] <lpapp> j416: are you proposing to diff the diggs?
[15:44:57] <lpapp> diffs*
[15:44:59] <j416> agsv: you just said the opposite thing
[15:45:10] <ikke> lpapp: that's kind of what range-diff does
[15:45:18] <j416> lpapp: sure, or you can use range-diff as also mentioned
[15:45:25] <j416> lpapp: give those two ranges to range-diff
[15:45:36] <lpapp> range-diff does not show empty output :(
[15:45:41] <lpapp> it shows multiples of tens of pages.
[15:45:48] <j416> how'd you run it?
[15:45:56] <ikke> yes, because the history is more complicated apparently
[15:46:03] <osse> lpapp: can you try this git log command instead:  git log -n 200 --graph --format='%h %d' main feature-rebase feature-rebase-reword feature (if that exists)
[15:46:05] <agsv> j416: how so?
[15:46:29] <lpapp> 12:54 < ikke> ok, lets try this: git range-diff main feature-rebase feature-rebase-reword
[15:46:30] <j416> agsv: first you say "how can I output the last commit on branch B that was merged into A?", and then you say "I want the latest commit from A that was merged into B".
[15:46:40] <ikke> lpapp: the old history has all these merges
[15:46:43] <ikke> the new history does not
[15:46:50] <ikke> that makes it difficult to compare
[15:47:06] <ikke> range-diff compares commit per commit
[15:47:08] <agsv> j416: oh i get you my bad. thanks alot!
[15:47:09] <j416> ah, he rebased keeping the merges
[15:47:16] <ikke> at first
[15:47:23] <ikke> but the latest rebase no longer has the merges
[15:47:23] <lpapp> I see, so I should do git rebase -i main in feature-rebase?
[15:47:27] <j416> lpapp: why do you need to diff it?
[15:47:39] <ikke> j416: I suppose they want to verify they did not introduce any changes
[15:47:40] <lpapp> j416: we want to make sure that when we reword things, the code does not change
[15:47:44] <lpapp> it is kind of paranoia
[15:47:45] <j416> lpapp: is it not enough to check that all commits are there and then go through them to see that they contain the right changes?
[15:47:49] <lpapp> but I thought it would be two minutes to make sure
[15:48:05] <lpapp> not all commits will be there
[15:48:10] <lpapp> reword actually can also squash
[15:48:16] <lpapp> it is a history rewrite without code rewrite
[15:48:24] <lpapp> I should have used reword/squash/whatever
[15:48:30] <lpapp> feature-rebase-history
[15:48:35] <j416> lpapp: then it should be easy to diff your branch before and after just he reword
[15:48:38] <j416> the*
[15:48:43] <lpapp> yeah, just git diff
[15:48:46] <lpapp> but it shows noise.
[15:49:00] <j416> what are you diffint hen
[15:49:01] <j416> then*
[15:49:12] *** michele_ is now known as michele
[15:49:20] <lpapp> git diff feature-rebase feature-rebase-history
[15:49:33] <ikke> lpapp: if the base was the same, the diff should be empty, but the tp465948-feature-3d-handles* branches have a different base
[15:49:33] <j416> and what are those branches?
[15:50:01] <lpapp> ikke: alright, can I set feature-rebase to the same base as feature-rebase-history?
[15:50:16] <lpapp> j416: feature-rebase was meant to be feature + git rebase main
[15:50:27] <lpapp> j416: feature-rebase-history was meant to be feature-rebase + reword/squash/etc
[15:50:29] <j416> lpapp: compare what you had before you started to the branch you did _just_ the reword on
[15:50:43] <lpapp> j416: I did the rebase in hindsight
[15:50:47] <lpapp> I did rebase and reword in one go
[15:50:51] <lpapp> then I got complaints
[15:50:56] <j416> so start over
[15:50:59] <lpapp> so, I created another branch which was rebased
[15:51:00] <lpapp> noooooo
[15:51:05] <lpapp> it is more than a day man work now
[15:51:11] <lpapp> that went into rewriting the history by all of us
[15:51:19] <lpapp> definitely will not redo as there are workarounds
[15:51:28] <ikke> lpapp: hold on
[15:51:36] <j416> lesson learnt, don't have long-lived feature branches like that :)
[15:51:39] <lpapp> I am only curious to find out the reasons and fix it if possible, but squashing the 104 commits into one on both ends with vimdiff is a viable workaround
[15:51:44] <lpapp> even though it is somewhat ugly.
[15:51:56] <lpapp> j416: do not think that is the right lesson ultimately
[15:52:02] <lpapp> maybe it applies to certain cases
[15:52:09] <lpapp> but when you rework an architecture
[15:52:15] <lpapp> you cannot start with small minor incremental changes
[15:52:16] <j416> you're diffing two different things
[15:52:19] <j416> there'll be a diff
[15:52:42] <lpapp> yeah, sure, so how can I make sure I get the same base now as the rebase + reword?
[15:53:11] <ikke> lpapp: git diff main...feature-rebase and comparing that with git diff main...feature-rebase-reword
[15:53:14] <ikke> does not work for you?
[15:53:19] *** Quits: Arsen (~arsen@managarm/dev/Arsen) (Quit: Quit.)
[15:53:29] <ikke> note the 3 dots
[15:53:40] <ikke> I have to go now
[15:53:43] <j416> o/
[15:53:50] <j416> this discussion is in a loop
[15:54:12] *** Joins: Arsen (~arsen@managarm/dev/Arsen)
[15:55:52] *** Joins: mci64 (~mci64@194.25.223.4)
[15:56:22] <lpapp> ikke: works with vimdiff, kind of
[15:56:29] <lpapp> still see changes, but easier to see
[15:56:37] <lpapp> it is still not an empty, but I can leave with this
[15:56:45] <lpapp> it shows differences in line numbers
[15:56:49] <lpapp> and hashes
[15:57:04] <osse> now that is unavoidable
[15:57:05] *** Joins: pulse (~pulse@user/pulse)
[15:58:12] <lpapp> would it be avoidable to bring feature-rebase and feature-rebase-history to the same base?
[15:58:20] <lpapp> basically feature-rebase to the same base as feature-rebase-history?
[15:58:43] *** Joins: rsrx (~rsrx@103.225.150.81)
[15:59:18] <rsrx> hi, lets say I have a feature branch that I do work on, I push this to github and wait for CI/CD tests to pass before I merge it to master
[15:59:47] <rsrx> tests pass and I merge my branch to master, however I also did some more work in the meantime on the same branch locally, but didnt want to push to not reset CI/CD test waiting time
[16:00:41] <rsrx> so in local i'm still on branch that got merged remotely to master, now can I create new feature branch with changes that I did in the meantime?
[16:00:46] <lpapp> osse: ^
[16:01:22] <rsrx> my changes are unstaged
[16:01:36] <rsrx> i can obviously copy files to some other location, checkout master, copy files back in to the repo
[16:01:47] <ikke> lpapp: you can with git rebase --onto
[16:01:47] <rsrx> but this solution kinda sucks
[16:02:27] <lpapp> ikke: which branch should I be in when executing that?
[16:02:50] <lpapp> it will also reuse the reworded commits?
[16:03:01] <lpapp> not just rebase the main commit?
[16:03:33] <ikke> The branch that you want to rebase, is it the one that is ahead or the one that is behind?
[16:03:43] <lpapp> begind
[16:03:44] <lpapp> behind
[16:03:51] <lpapp> the reworded branch is shared
[16:04:02] <lpapp> it should not be rebased by me while someone else is rewording things in there.
[16:04:21] <ikke> so the one with all the merges in it
[16:04:29] <lpapp> yes, but it is super strange
[16:04:39] <lpapp> how could it have merges honestly after git rebase -i origin/main
[16:04:40] <lpapp> just do not get it
[16:05:39] <lpapp> maybe I just created it
[16:05:49] <lpapp> forgot to run git rebase -i main
[16:05:58] <lpapp> or did it in a different branch, something must have gone wrong
[16:06:07] <lpapp> anyway, it is really hard to sync the bases up now
[16:06:18] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[16:06:26] <lpapp> because if I had used git rebase -i origin/main for feature-rebase-history, then whatever main had at that point
[16:06:31] <lpapp> and main is changing actively
[16:06:34] <lpapp> so, it is no longer the same
[16:06:44] <lpapp> what a mess.
[16:07:24] <lpapp> it honestly feels like the best thing to do is do all the rewording and at that point, run git rebase -i origin/main in both branches, and then git diff?
[16:07:44] <ikke> The problem with rebasing is that you introduce new changes, so you basically change what you compare against
[16:07:47] <ikke> defeating the purpose
[16:08:11] <lpapp> would my proposal above stand alright?
[16:08:35] <lpapp> do not worry for now, carry on with rewording, each dev finishing, then I do git rebase -i origin/main in both and then git diff, get empty hopefully? Fingers crossed?
[16:08:57] <ikke> If they have the same base, then I would expect the diff to be empty
[16:09:13] <lpapp> git rebase -i origin/main will guarantee the same base?
[16:09:38] <lpapp> of course, in case in the fraction of second, origin/main does not change.
[16:09:48] <Arsen> how can I install hooks on contributors machines after they clone the repo? presumably they have to take extra steps for it?
[16:10:31] <ikke> Arsen: yes, they do
[16:10:45] <Arsen> sure, then it's obvious, ./setup_hooks.sh or such
[16:10:47] <Arsen> ty
[16:10:54] <ikke> np
[16:12:53] <lpapp> ikke: can you confirm this?
[16:12:57] <lpapp> or is there uncertainity about it?
[16:13:17] <lpapp> I would feel more comfortable if an expert confirms that this should work :)
[16:13:22] <ikke> lpapp: origin/main does not change on it's own
[16:13:25] <ikke> only when you fetch
[16:13:51] <ikke> (some editors like vscode can do that in the background, though)
[16:13:52] <lpapp> ikke: do you mean that first I should do git switch main;git pull --rebase;git switch feature-rebase?
[16:13:55] <Arsen> was the default changed to master already?
[16:13:59] <Arsen> main*
[16:14:03] <ikke> Arsen: no
[16:14:06] <Arsen> alright
[16:14:20] <ikke> lpapp: you can update main without checking it out
[16:14:32] <ikke> But in this case, you want it to remain stable
[16:14:50] <lpapp> I assumed, maybe wrongly, that origin/main would go to the remote?
[16:14:51] <lpapp> for rebasing?
[16:14:58] <lpapp> does that actually go to the local main?
[16:14:58] <ikke> no, it won't
[16:15:18] <ikke> origin/main is updated when you run git fetch (or git pull, which also runs git fetch)
[16:18:43] <lpapp> okay, so git pull --rebase in any branch should be enough to get the latest from remote main to local main.
[16:18:49] <lpapp> if I understood you correctly?
[16:19:54] *** Quits: rsrx (~rsrx@103.225.150.81) (Quit: Leaving)
[16:20:01] <ikke> if you run that on another branch, only origin/main is updated, not main
[16:21:35] <j416> lpapp: also !book
[16:21:35] <gitinfo> lpapp: There are several good books available about git; 'Pro Git' is probably the best: https://git-scm.com/book but also look at !bottomup !cs !gcs !designers !gitt !vcbe and !parable
[16:22:58] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[16:28:24] <lpapp> yes, but that is fine because I would use origin/main in the git rebase -i command.
[16:29:31] <ikke> but if you want to keep the same base, you do not want that
[16:29:47] <osse> rules of thumb:  Only fetch and pull update the origin/foo branches, and no command changes other local branches than the current one
[16:30:05] <ikke> push as well ;-)
[16:30:10] <osse> woops
[16:30:13] <lpapp> ikke: why not?
[16:30:17] <osse> I meant to write fetch and push
[16:30:33] <lpapp> origin/main will be the same. Are you concerned about the race window between running git rebase -i origin/main twice, once in each branch?
[16:30:45] <osse> (there are exceptions, of course. but for regular workflow those rules make sense)
[16:30:56] <ikke> git rebase; git pull; git rebase
[16:31:16] <ikke> that could result into each rebase using a different new base
[16:31:28] <lpapp> yes, but I would not do git pull between the two branch rebases
[16:31:41] <lpapp> for the reason that you are explaining.
[16:32:21] <ikke> as long as you are aware of that
[16:32:31] <ikke> and not using vscode that can do it behind your back
[16:32:57] *** Quits: agsv (~agsv@207.232.14.6) (Remote host closed the connection)
[16:33:01] <lpapp> I am on Mac using the terminal
[16:33:19] <ikke> ok
[16:38:09] *** Quits: humanface (~humanface@20014C4E1C444D00752D838E4CE40D04.dsl.pool.telekom.hu) (Quit: Client closed)
[16:38:13] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[16:38:58] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[16:45:25] *** Quits: atrigent (~atrigent@130.44.130.244) (Read error: Connection reset by peer)
[16:48:23] *** Joins: atrigent (~atrigent@130.44.130.244)
[16:50:58] *** Joins: tlaxkit (~hexchat@170.253.40.255)
[17:02:02] *** Joins: nyah (~nyah@51.146.30.113)
[17:08:46] *** Quits: EvilDMP_ (~textual@2001:1c00:30e:1f00:1914:858:a728:1312) (Ping timeout: 272 seconds)
[17:10:00] *** Joins: christall (~christall@24.235.88.243)
[17:12:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:13:29] *** Joins: debsan (~debsan@2800:810:471:8425::1000)
[17:14:43] *** Quits: debsan (~debsan@2800:810:471:8425::1000) (Remote host closed the connection)
[17:18:33] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 248 seconds)
[17:25:41] *** Joins: ToAruShiroiNeko (~eva@user/toarushiroineko)
[17:26:05] <ToAruShiroiNeko> Hello, does anyone know here how to address performance issues due to gitleaks? One repo has very slow commit time.
[17:27:00] <ikke> No idea really, someone else reported it here as well the other day
[17:27:01] *** Joins: durham (~durham@2620:10d:c091:480::1:dd90)
[17:27:06] <ikke> Never used it
[17:28:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[17:31:07] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[17:31:07] *** Quits: durham (~durham@2620:10d:c091:480::1:dd90) (Read error: Connection reset by peer)
[17:32:53] *** Joins: durham (~durham@2620:10d:c091:480::1:dd90)
[17:33:45] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[17:37:08] *** Quits: ninjin (~ninjin@user/ninjin) (Ping timeout: 244 seconds)
[17:37:19] *** Joins: ninjin- (~ninjin@user/ninjin)
[17:38:01] <cbreak> ToAruShiroiNeko: want to disable hooks? :)
[17:38:19] <cbreak> git commit -n
[17:38:46] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[17:39:22] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[17:43:41] *** Quits: Xenguy (~Xenguy@devuan/developer/Xenguy) (Quit: Leaving)
[17:44:06] *** Joins: fling (~fling@user/fling)
[17:48:57] *** Joins: mjbatty_ (~mjbatty@82.2.17.205)
[17:50:55] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Quit: Client closed)
[17:55:25] *** cdown_ is now known as cdown
[17:58:23] *** Quits: mci64 (~mci64@194.25.223.4) (Quit: Connection closed)
[18:00:20] <ToAruShiroiNeko> I tried deleting the hooks but it came back.
[18:00:21] *** Quits: pilyn (~pilyn@user/pilyn) (Quit: Leaving)
[18:00:36] <ToAruShiroiNeko> ikke that was me.
[18:00:38] <ikke> aha
[18:01:02] <ToAruShiroiNeko> I think I need to investigate why it is slow since it will come back even if I delete it.
[18:01:11] <ToAruShiroiNeko> https://itnext.io/how-to-use-gitleaks-to-prevent-pushing-sensitive-info-cdd0355d5f61
[18:01:21] <ToAruShiroiNeko> Seems to be a way to prevent leaking of sensitive info.
[18:02:17] *** Joins: Lockna[m] (~l0cknamat@2001:470:69fc:105::d697)
[18:02:35] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 252 seconds)
[18:03:42] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[18:05:59] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[18:06:14] <ToAruShiroiNeko> I am unsure where to begin to diagnose this thing.
[18:07:20] <ikke> Apparently something is managing your machine
[18:07:20] *** Joins: bwnck (~bwnck@213.94.43.96)
[18:07:26] *** Quits: Lockna[m] (~l0cknamat@2001:470:69fc:105::d697) (Quit: Reconnecting)
[18:07:39] *** Joins: Lockna[m] (~lockna@2001:470:69fc:105::d697)
[18:09:25] *** Quits: Lockna[m] (~lockna@2001:470:69fc:105::d697) (Client Quit)
[18:09:25] *** Quits: durham (~durham@2620:10d:c091:480::1:dd90) (Read error: Connection reset by peer)
[18:10:22] *** Joins: durham (~durham@2620:10d:c091:480::1:dd90)
[18:10:25] *** Quits: michele (~eraser@user/michele) (Quit: restart)
[18:12:21] <birkoff> I have a problem where git reset --hard HEAD; does not remove uncommitted modifications and untracked files
[18:12:43] <birkoff> neither does git restore . ;
[18:13:41] <ikke> birkoff: that means some kind of file normalization is going on
[18:14:00] <ikke> the other option is case insensitive filesystems
[18:14:32] <ikke> What do the changes look like?
[18:17:47] *** Joins: pulse (~pulse@user/pulse)
[18:17:47] *** Quits: durham (~durham@2620:10d:c091:480::1:dd90) (Read error: Connection reset by peer)
[18:18:20] <lpapp> hmm, git pull --rebase does not get the lastest from the remote to the local branch when remote has been rebased?
[18:18:25] <lpapp> commits squashed, etc.
[18:19:31] *** Joins: durham (~durham@2620:10d:c091:480::1:dd90)
[18:20:18] <lpapp> latest*
[18:20:59] *** Joins: lockna (~lockna@2001:470:69fc:105::d697)
[18:21:29] <lpapp> hmm, yeah, I had to delete the branch locally and git switch to it to get the latest state of remote.
[18:21:38] <lpapp> That is a bit of a shame, is there a reinforcement without branch recreation?
[18:22:03] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[18:22:19] <ikke> git reset --hard <upstream-branch> # as long as you do not have any uncommitted changes
[18:23:11] <ikke> or git switch -C <branchname> <upstream-branch>
[18:26:01] *** Parts: rapid16 (~quassel@user/rapid16) ()
[18:26:07] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 258 seconds)
[18:26:36] *** Joins: michele_ (~eraser@user/michele)
[18:27:53] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 248 seconds)
[18:28:51] *** Joins: humanface (~humanface@20014C4E1C444D00752D838E4CE40D04.dsl.pool.telekom.hu)
[18:30:24] *** Joins: hubble (~hubble@69.160.252.249)
[18:30:47] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[18:31:15] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[18:31:29] *** Quits: michele_ (~eraser@user/michele) (Ping timeout: 258 seconds)
[18:39:27] *** Quits: ByteHackr (~sanroy@43.252.250.113) (Quit: Leaving)
[18:40:28] *** Joins: michele_ (~eraser@user/michele)
[18:45:35] *** Quits: michele_ (~eraser@user/michele) (Ping timeout: 268 seconds)
[18:50:29] *** Joins: michele_ (~eraser@user/michele)
[18:51:12] *** Joins: mci64 (~mci64@194.25.223.4)
[18:51:58] *** Quits: michele_ (~eraser@user/michele) (Read error: Connection reset by peer)
[18:52:10] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 268 seconds)
[18:56:20] *** Quits: rsx (~dummy@ppp-188-174-141-119.dynamic.mnet-online.de) (Quit: rsx)
[19:02:20] *** Joins: michele_ (~eraser@user/michele)
[19:02:24] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Quit: leaving)
[19:03:32] <Gurkenglas> Can I filter the diff between two branches for differences that aren't just the replacement of all `input_value` and `output_value` by `value`?
[19:04:13] *** Quits: hubble (~hubble@69.160.252.249) (Ping timeout: 246 seconds)
[19:05:29] *** Quits: w0ng (~w0ng@185.218.127.38) (Ping timeout: 260 seconds)
[19:07:03] *** Quits: ninjin- (~ninjin@user/ninjin) (Remote host closed the connection)
[19:07:14] <birkoff> ikke: what does file normalization means ?
[19:07:20] *** Joins: ninjin (~ninjin@user/ninjin)
[19:07:44] <ikke> birkoff: things like file-ending normalization
[19:08:45] <birkoff> what does that mean ?
[19:08:56] <birkoff> it's an android repo
[19:09:00] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[19:09:13] <ikke> That git will automaticaly replace crlf with lf when staging files
[19:09:15] *** Quits: irrgit_ (~irrgit@192.241.175.183) (Remote host closed the connection)
[19:09:19] <ikke> windows line endings to linux line endings
[19:09:26] <ikke> !crlf
[19:09:26] <gitinfo> To fix problems with line ending on different platforms, check out http://line-endings.gitrecipes.de/. Line ending normalization can be the cause of changed files that appear to not go away.
[19:13:08] <birkoff> i dont have a problem with line ending ?
[19:13:27] <ikke> You have _a_ problem
[19:13:45] <ikke> but without more details, it's impossible for me to tell what exactly
[19:14:22] <birkoff> like what?
[19:16:15] <ikke> What do the changes look like that you keep seeing?
[19:19:55] *** Joins: thiago (~thiago@2601:1c0:4501:635c:ce3a:25e:6549:5cc8)
[19:20:24] *** gnooooo is now known as gnoo
[19:20:28] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[19:24:15] *** Quits: mci64 (~mci64@194.25.223.4) (Quit: Connection closed)
[19:24:50] <birkoff> directory names are used ."Subproject commit" hash changes
[19:25:36] <ikke> aha, submodules
[19:27:36] <birkoff> and?
[19:30:26] *** michele_ is now known as michele
[19:34:31] <Soliton> is there a common format to reference a repo at a certain commit? like: <repo url>@<commit hash>? perhaps also including the branch?
[19:35:06] <imMute> Soliton: I've never seen a repo URL and a commit/branch together, so no, I don't think such a thing exists
[19:36:49] <Soliton> i want to mention what repo at what commit a binary was built from.
[19:37:03] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[19:37:25] * imMute would probably write "This was built from commit <SHA> in the repo at <URL>." or similar
[19:37:49] <imMute> branch name shouldn't be used for that kind of info, just teh commit SHA.  a tag name would suffice too
[19:38:50] *** Quits: theoceaniscool (~theoceani@93.177.120.45) (Ping timeout: 252 seconds)
[19:40:31] <Soliton> ok, thanks.
[19:43:19] *** Quits: nuala (~nuala@dslb-092-074-181-104.092.074.pools.vodafone-ip.de) (Quit: ()
[19:43:53] *** Joins: nuala (~nuala@user/nuala)
[19:44:12] <ikke> birkoff: it can mean two things: you checked out a new commit in the parent module, and need to make sure that submodule matches
[19:44:17] <ikke> -> git submodule update
[19:44:37] <ikke> birkoff: or, it can mean you checked out anoter commit in the submodule, and you need to commit that in the parent module
[19:45:12] *** Quits: makara (~sol@196.61.111.63) (Ping timeout: 268 seconds)
[19:46:41] *** Joins: junktext (~junktext@77.247.181.219)
[19:47:21] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Quit: Leaving)
[19:50:33] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 248 seconds)
[19:53:30] *** Quits: alkino (~quassel@user/alkino) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:53:32] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[19:53:49] *** Joins: ninjin (~ninjin@user/ninjin)
[19:55:01] *** Quits: madewokherd (~urk@65-128-171-161.mpls.qwest.net) (Quit: If your computer stops responding for a long time, turn it off and then back on.)
[19:58:30] *** Joins: cdown_ (~cdown@89.32.122.5)
[19:58:30] *** Quits: durham (~durham@2620:10d:c091:480::1:dd90) (Read error: Connection reset by peer)
[19:59:32] *** Joins: durham (~durham@2620:10d:c091:480::1:dd90)
[20:00:09] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 248 seconds)
[20:00:15] *** cdown_ is now known as cdown
[20:02:06] *** Quits: humanface (~humanface@20014C4E1C444D00752D838E4CE40D04.dsl.pool.telekom.hu) (Quit: Client closed)
[20:03:46] *** daimon is now known as Alchemy
[20:06:29] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[20:07:06] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:11:39] *** Joins: Bayes (~Bayes@ics177-97.icsincorporated.com)
[20:12:08] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:14:02] *** Quits: nobody_ (~nobody@87.13.30.222) (Ping timeout: 252 seconds)
[20:14:08] *** Joins: humanface (~humanface@20014C4E1C444D00752D838E4CE40D04.dsl.pool.telekom.hu)
[20:14:23] <Bayes> in my workflow I have many text files (programming code, writing, documentation, etc) but also many small binary files (< 500 files with < 5mb each). I don't really need to track changes on them, but I'd like the repo to be standalone so that those files are available when you clone or pull the repo because my scripts need those files to work.
[20:14:44] <birkoff> ikke: can I reset everything despite it?
[20:14:47] <Bayes> So far I've been just git add'ing these binary files to my repo, but is there an option for that?
[20:14:56] <imMute>  Byteflux: check out git LFS or git annex
[20:15:18] <Bayes> I don't need LFS most of the times, these are smallish files
[20:16:19] <imMute> still useful for binary files that you don't care about the history of.  IIRC you can "delete" the LFS files from the backing store so they don't exist anymore but in a way that doesn't require rewriting history (but obviously the old commits references those files will be broke at that point)
[20:16:51] <imMute> if what you're looking for is a way to tell git to track a file but only ever store the latest version of it, such a thing doesn't exist unfortunately
[20:17:01] <Bayes> last time I tried LFS with a ssh github repo I had some issues too
[20:17:17] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[20:21:38] <Bayes> should LFS work well with a ssh remote?
[20:21:46] <Bayes> like, was just that me?
[20:22:14] <ikke> birkoff: if you do `git submodule update`, it should checkout the expected commit on the submodules and they should no longer appear
[20:22:18] <imMute> I would hope it does, but I've not used github+LFS
[20:22:29] *** Joins: nobody_ (~nobody@87.13.30.222)
[20:22:30] <ikke> birkoff: do you have a file called. .gitmodules?
[20:22:32] <birkoff> ikke: i would rather not to commit anything
[20:22:41] <birkoff> yes i do, there are some submodules to this repo
[20:22:43] <Bayes> okay imMute I'll try and check LFS again
[20:22:53] <ikke> birkoff: you do not need to commit anything
[20:23:40] <birkoff> I still see them as modified in repo root
[20:23:45] <birkoff> after running submodule update
[20:24:02] <ikke> what does git status say about them?
[20:24:06] <birkoff> they are all 'untracked content'
[20:24:21] <ikke> ah, ok
[20:24:32] <ikke> then you need to go to each submodule and clean those untracked files up
[20:25:36] <birkoff> there is only one untracked subdir in each module
[20:25:38] <birkoff> build/
[20:25:59] <ikke> And you want to keep it?
[20:26:01] *** Quits: cdown (~cdown@89.32.122.5) (Remote host closed the connection)
[20:26:15] <birkoff> i have no idea what are those fore
[20:26:23] <ikke> probably the build artifacts
[20:26:32] <birkoff> from android-studio/gradle
[20:26:34] <ikke> ie, it appears when you build the project
[20:26:58] <birkoff> so what can I do about them ? I plan on keep re-building
[20:28:17] *** Joins: cdown (~cdown@89.32.122.5)
[20:28:17] <ikke> Either just ignore this, or add 'build/' to the info/exclude file of each submodule in .git/modules
[20:28:44] *** Quits: ndorf (~nd@ob.noxio.us) (Quit: leaving)
[20:28:52] *** Joins: ndorf (~nd@ob.noxio.us)
[20:29:51] *** Quits: AnapodoPsalidaki (~AnapodoPs@2a02:587:2910:6a35:adb3:8cba:6f26:8f77) (Quit: Leaving)
[20:30:10] *** Quits: jazzy (~jaziz@2600:380:8638:b14c:3d37:fea7:101f:573e) (Ping timeout: 272 seconds)
[20:30:16] *** Joins: madewokherd (~urk@comcast.codeweavers.com)
[20:32:27] *** Joins: Betal (~Betal@user/betal)
[20:41:15] *** Parts: bdeshi (~bdeshi@bdeshi.space) ()
[20:41:46] *** Quits: durham (~durham@2620:10d:c091:480::1:dd90) (Ping timeout: 240 seconds)
[20:42:14] *** Joins: cdown_ (~cdown@163.114.131.1)
[20:42:49] *** Quits: tlaxkit (~hexchat@170.253.40.255) (Ping timeout: 248 seconds)
[20:45:18] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 272 seconds)
[20:45:28] *** cdown_ is now known as cdown
[20:46:15] <bn_work> hi github + git 2.24.3, is the only way to modify a message of a just pushed commit to amend and use force push?  (I know modifying after the fact is "bad" but this is a solo repo that I don't believe anyone else is pulling from)
[20:46:59] <bn_work> actually, looks like I should have omitted a file too
[20:47:09] <bremner> why do you need more than one method?
[20:47:54] <imMute> bn_work: you could use rebase (and mark that commit as reword), but that would have the exact same effect (and you'd still have to force push)
[20:48:26] <bn_work> bremner: not following?
[20:49:21] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[20:49:43] *** Joins: orbyt (~textual@172.92.4.78)
[20:50:15] *** Joins: hbautista (~hbautista@187.135.210.129)
[20:51:47] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 258 seconds)
[20:55:25] <bn_work> bremner: oh, I'm not asking for a 2nd method, I was just trying to confirm the existing method
[20:56:16] <bn_work> imMute: yeah, since it seems an extra file was included, I guess a --rebase (-i too perhaps) may be best.
[20:56:34] <imMute> bn_work: if it's only the latest commit you want to modify, just use amend.
[20:58:51] <bn_work> on a side note, I'm noticing when I look at `git log` I only see HEAD->master for my latest vs HEAD -> master, origin/master, origin/HEAD which I think indicates both remote and local are in sync.  On github.com I notice HEAD^ is what is shown as "most recent".  Is something messed up?
[20:59:56] <bn_work> imMute: actually, looks like it was HEAD^ that I need to modify, but it seems github doesn't see HEAD yet?
[21:04:18] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[21:05:02] <imMute> bn_work: HEAD is whatever you have checked out
[21:05:31] <imMute> and origin/HEAD I think is used to tell clients what the "default" branch is (for when they clone)
[21:05:56] <bn_work> what the heck, why does `man git-rebase` not show any man page anymore
[21:05:56] <gitinfo> the git-rebase manpage is available at https://gitirc.eu/git-rebase.html
[21:06:25] *** Joins: theoceaniscool (~theoceani@93.177.120.45)
[21:07:25] *** Joins: tlaxkit (~hexchat@170.253.40.255)
[21:09:29] *** Quits: tlaxkit (~hexchat@170.253.40.255) (Remote host closed the connection)
[21:09:46] <bn_work> imMute: so is something messed up if I'm not seeing those anymore?  and github differs in what it considers HEAD?
[21:10:30] <imMute> if you're not seeing 'origin/master' and 'origin/HEAD' in your git log, that likely means that the master branch on origin has commits you don't have.  try adding --all to git log to see all the branches
[21:11:27] *** Joins: TomyWork (~TomyLobo@p200300e80f06af00c00d5f5320b62de4.dip0.t-ipconnect.de)
[21:15:16] <bn_work> hmm, how do I drop a file a from a commit in interactive rebase mode, I thought doing `git commit --amend` during an `E(dit)` flagged commit and deleting the commented line that shows up with the extra file was sufficient?
[21:16:05] <ikke> It's just like normal amend
[21:16:11] <bn_work> but when I do that it still says 3 files changed (should be 2)
[21:16:15] <ikke> git rm <file>; git commit --amend
[21:16:58] *** Joins: randomuser (~randomuse@user/randomuser)
[21:18:55] <bn_work> ikke: wait, I want to still keep the file, I just don't want it in this commit
[21:19:29] <bn_work> that actually seemed to delete the file from the wt
[21:19:35] <ikke> bn_work: git rm --cached
[21:20:17] <bn_work> but it doesn't show up in the index (staged) area?
[21:20:30] <bn_work> oddly
[21:20:43] <ikke> If you removed it already, you first need to revive it
[21:21:36] *** Quits: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr) (Quit: muy cansado para la chela)
[21:22:38] *** Quits: theoceaniscool (~theoceani@93.177.120.45) (Ping timeout: 268 seconds)
[21:23:05] <bn_work> ikke:  I already put it back, and re-ran it as --cached but when I check status it thinks I want to delete the file, I don't, I just want to amend this commit to not have the changes as part of this to begin with
[21:23:18] *** Quits: nobody_ (~nobody@87.13.30.222) (Ping timeout: 272 seconds)
[21:23:23] <ikke> oh, you said you want to remove the fie
[21:23:25] <ikke> file
[21:23:36] <ikke> but you only want to undo the changes to that file
[21:23:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:23:44] <bn_work> I said drop a file, meaning not include it as part of the commit
[21:23:51] <bn_work> sorry, if I was unclear
[21:24:01] <ikke> git checkout HEAD~ <file>
[21:24:25] <ikke> you can also use reset if you just want to affect the index
[21:24:29] <ikke> git reset HEAD~ <file>
[21:25:22] <bn_work> the thing is nothing shows up in the index currently, I thought during rebase `git status` (with E flag) would show what was staged
[21:25:34] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[21:25:35] <ikke> No
[21:25:41] <ikke> it applies the commit
[21:25:47] <ikke> and then drops you to a shell
[21:25:52] <ikke> but the commit is already done
[21:25:55] <bn_work> oh
[21:26:12] <bn_work> ok, so I need to abort?  should I have selected "Break"?
[21:26:18] <ikke> No
[21:26:28] <ikke> You just amend the commit
[21:26:29] *** Quits: mjbatty_ (~mjbatty@82.2.17.205) (Read error: Connection reset by peer)
[21:26:33] <ikke> and then continue
[21:26:51] <ikke> so git reset HEAD~ <filename>
[21:27:03] <ikke> that should result in 2 entries for that file
[21:27:21] <ikke> one that is staged (with the contents of the file of the previous commit)
[21:27:37] <ikke> and one that is not staged (which has the changes you want for another commit)
[21:29:48] <bn_work> that's what I did, ie: git commit --amend and deleted the staged line in the comment section (not commit message) but when I saved it still says "3 files modified"
[21:30:24] <ikke> bn_work: They are comments
[21:30:31] <ikke> it does not affect what is being committed
[21:34:42] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:37:14] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[21:38:09] *** Joins: kingjulian (~kingjulia@41.1.139.138)
[21:38:10] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a859:ea2e:6d94:1d4f)
[21:38:10] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a859:ea2e:6d94:1d4f) (Changing host)
[21:38:10] *** Joins: skapata (~Skapata@user/skapata)
[21:41:29] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 248 seconds)
[21:41:36] *** Joins: vicfred (~vicfred@user/vicfred)
[21:43:35] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[21:48:32] *** Joins: yuckey2d7 (~yuckey2d@195.246.120.52)
[21:50:26] *** Quits: yuckey2d (~yuckey2d@195.246.120.132) (Ping timeout: 258 seconds)
[21:50:27] *** yuckey2d7 is now known as yuckey2d
[21:53:28] *** Joins: nobody_ (~nobody@87.13.30.222)
[21:56:24] *** Parts: bwnck (~bwnck@213.94.43.96) (Leaving)
[21:57:15] <bn_work> ikke:  weird, I could have sworn I could alter the staged files be editing that in the past.  ok, so I did `git reset HEAD~ <filename>` and then `git commit --amend` and now it said 2 files changed but when I did `git rebase --continue`, I get `You must edit all merge conflicts and then mark them as resolved using git add` but `git status` doesn't say which files have the merge conflicts?
[21:58:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:58:13] <ikke> bn_work: hmm, that message is incorrect in this case
[21:58:18] <ikke> you do need to stage the change though
[21:59:11] <bn_work> so just restage the last commit's files?
[21:59:50] <bn_work> it looks like it's still on the last commit?
[21:59:57] <ikke> sorry, I mean stash
[21:59:59] <ikke> not stage
[22:00:24] *** Quits: tmz_ (~tmz@fedora/tmz) (Ping timeout: 258 seconds)
[22:02:42] *** Quits: kingjulian (~kingjulia@41.1.139.138) (Ping timeout: 268 seconds)
[22:03:20] *** Quits: nobody_ (~nobody@87.13.30.222) (Ping timeout: 268 seconds)
[22:03:20] *** Quits: reprazent (~reprazent@178-118-195-230.access.telenet.be) (Ping timeout: 268 seconds)
[22:04:02] *** Joins: reprazent (~reprazent@178-118-195-230.access.telenet.be)
[22:06:54] *** Joins: makara (~sol@196.61.111.63)
[22:07:35] *** Joins: mexen (uid495612@user/mexen)
[22:09:52] *** Joins: tmz (~tmz@fedora/tmz)
[22:10:18] *** Joins: sh4 (~sh4@user/sh4)
[22:11:02] <sh4> is there a way to specify working directory for git commands? so i can do git rm --dir=work foo.txt instead of cd work ; git rm foo.txt ; cd ..
[22:11:03] *** gordonfish- is now known as gordonfish
[22:11:23] <ikke> git -C work rm foo.txt
[22:11:36] <sh4> cool, thanks!
[22:11:48] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[22:16:25] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:21:25] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[22:24:26] *** Joins: Adoi (~Adoi@user/adoi)
[22:25:35] *** Joins: nobody_ (~nobody@87.13.30.222)
[22:25:51] *** Parts: Camusensei (~Camusense@megaman.thican.net) ()
[22:28:52] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 245 seconds)
[22:30:28] *** Quits: darkbit (~db@152.32.99.67) (Ping timeout: 268 seconds)
[22:30:51] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[22:32:56] *** Quits: nobody_ (~nobody@87.13.30.222) (Ping timeout: 268 seconds)
[22:34:01] *** Quits: Drool (~drool@host86-136-3-155.range86-136.btcentralplus.com) (Remote host closed the connection)
[22:35:01] *** Joins: Hax0r (~TP1@87.101.193.195)
[22:35:30] *** Joins: DoofusCanadensis (~DoofusCan@207.229.38.10)
[22:36:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:44:02] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[22:45:56] *** Joins: jetchisel (jetchisel@user/jetchisel)
[22:46:09] *** Joins: Narrat (~omnius@p200300df5f0ae58d06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:47:45] *** Joins: kingjulian (~kingjulia@41.1.139.138)
[22:48:43] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[22:49:18] *** Joins: LSD (~LSD@2.lsd.systems)
[22:49:40] *** LSD is now known as acidsys
[22:54:00] *** Quits: hbautista (~hbautista@187.135.210.129) (Ping timeout: 256 seconds)
[22:54:20] *** Joins: cellofellow (~user@166.70.50.58)
[22:56:41] <cellofellow> how do I properly pull changes from an upstream repo that I subtree --split a dir out of?
[22:58:11] *** Joins: roadie (~user@2a02:8108:ec0:1427:18e7:81ad:13e4:ecf1)
[22:58:30] *** Joins: codebam (~codebam@user/codebam)
[23:03:10] *** Wolf481pl is now known as Wolf480pl
[23:06:12] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[23:06:58] *** Joins: christall (~christall@24.235.88.243)
[23:07:01] *** Quits: christall (~christall@24.235.88.243) (Read error: Connection reset by peer)
[23:07:10] *** Joins: christall (~christall@24.235.88.243)
[23:07:41] *** Quits: Hax0r (~TP1@87.101.193.195) (Quit: I'll be back..)
[23:09:14] *** Quits: Samian (~Sami@2620:10d:c091:480::1:ab1a) (Quit: Textual IRC Client: www.textualapp.com)
[23:09:15] *** Joins: TomyLobo (~TomyLobo@p200300e80f06af002c8192c8d5d1289f.dip0.t-ipconnect.de)
[23:11:47] *** Quits: kingjulian (~kingjulia@41.1.139.138) (Ping timeout: 268 seconds)
[23:14:00] *** Quits: ano (~weechat@user/ano) (Ping timeout: 244 seconds)
[23:14:56] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[23:21:38] *** Quits: DoofusCanadensis (~DoofusCan@207.229.38.10) (Quit: So as you can see from this flowchSQUIRREL!!)
[23:31:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:33:12] *** Joins: ano (~weechat@user/ano)
[23:36:47] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 245 seconds)
[23:43:47] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[23:43:56] *** Quits: randomuser (~randomuse@user/randomuser) (Quit: Leaving)
[23:45:43] *** Quits: roadie (~user@2a02:8108:ec0:1427:18e7:81ad:13e4:ecf1) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[23:48:40] *** Quits: Bayes (~Bayes@ics177-97.icsincorporated.com) (Quit: Connection closed)
[23:49:10] *** Joins: Bayes (~Bayes@ics177-97.icsincorporated.com)
[23:54:02] *** Joins: qpdb (~qpdb@user/qpdb)
[23:55:27] *** Parts: velix (~velix@user/velix) (Leaving)
