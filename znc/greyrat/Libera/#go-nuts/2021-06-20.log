[00:04:04] *** Joins: milosz (~milosz@user/milosz)
[00:06:53] *** Joins: arcatech (~arcatech@user/arcatech)
[00:15:28] *** Quits: lauraaah (uid156848@id-156848.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:21:53] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[00:28:02] *** Joins: esro (~esro@91.231.45.1)
[00:28:35] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Read error: Connection reset by peer)
[00:28:51] *** Quits: src (~src@user/src) (Quit: leaving)
[00:31:04] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[00:35:24] *** veegee_ is now known as veegee
[00:39:20] *** Quits: pztrn (~pztrn@aurora.pztrn.name) (Ping timeout: 272 seconds)
[00:39:28] *** Joins: psydroid (~psydroidm@user/psydroid)
[00:45:27] *** Joins: pztrn (~pztrn@aurora.pztrn.name)
[00:50:09] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[00:50:42] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[00:53:36] *** Joins: paruh (~paruh@92.60.39.18)
[00:56:32] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 258 seconds)
[00:59:19] *** Joins: rewt (~default@user/rewt)
[01:10:02] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:11:33] *** Joins: andlabs (~andlabs@68.237.68.71)
[01:16:32] *** Quits: Kane (~Kane@2a01:e34:ee89:5d90:d9fd:580a:1517:5e5c) (Quit: Leaving)
[01:18:19] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:18:22] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[01:18:37] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[01:18:44] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[01:23:14] *** Joins: schmillin (~schmillin@2a0d:5600:24:a8e::a91d)
[01:23:50] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 252 seconds)
[01:24:26] *** Quits: schmillin (~schmillin@2a0d:5600:24:a8e::a91d) (Changing host)
[01:24:26] *** Joins: schmillin (~schmillin@user/schmillin)
[01:24:34] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[01:28:35] *** Joins: dr0n (~nabromov@217.138.202.100)
[01:29:59] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[01:34:16] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:7d7d:74d2:7a88:5069) (Quit: WeeChat 3.2)
[01:34:37] *** Joins: jinie (~jimmy@188.114.173.37)
[01:38:18] <beeza> can I somehow prevent { go mod vendor; } from updating dependencies in go.mod?
[01:43:19] *** Quits: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[01:43:34] <ikke> I don't see any options
[01:44:37] <beeza> I guess if that is how it is that is how it is
[01:44:46] <b0nn> https://stackoverflow.com/questions/55467083/go-mod-vendor-without-update-to-latest
[01:54:48] *** Quits: chrysanthematic (~chrysanth@user/chrysanthematic) (Quit: chrysanthematic)
[01:58:48] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:05:00] *** Joins: fmonkey (~fmonkey@212.14.101.42)
[02:09:04] *** Joins: TrkoHex (~TrkoHex@212.14.101.42)
[02:10:01] *** Parts: TrkoHex (~TrkoHex@212.14.101.42) ()
[02:18:09] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Quit: WeeChat 3.1)
[02:18:23] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:22:50] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[02:25:22] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Read error: Connection reset by peer)
[02:29:04] *** Quits: fmonkey (~fmonkey@212.14.101.42) (Quit: Leaving)
[02:29:55] <thinkofher> hmm im wondering
[02:30:05] <thinkofher> is using map with channels as keys safe choice?
[02:30:13] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:30:28] <thinkofher> something like: map[chan string]struct{}
[02:30:34] <thinkofher> to have set of channels
[02:34:48] <bpalmer> it should work
[02:35:58] <bpalmer> Although most of the time, I would expect a slice of channels is just as easy to maintain.
[02:36:47] *** Quits: treethought (treethou@138.68.49.251) (Remote host closed the connection)
[02:37:44] *** Joins: treethought (~treethoug@138.68.49.251)
[02:39:02] <thinkofher> i am building sub/unsub mechanism for websockets, so i want to be able to remove and add things with ~o(1)
[02:40:21] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 272 seconds)
[02:42:39] *** Joins: absc (~absc@37.163.142.147)
[02:44:11] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[02:45:36] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[02:45:37] *** Joins: arcatech (~arcatech@user/arcatech)
[02:45:42] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[02:46:21] *** Quits: absc (~absc@37.163.142.147) (Remote host closed the connection)
[02:47:40] <b0nn> hmm I never really thought about it before, when you have a zillion websockets, do you need to send/receive on each one, or can you send once and whatever subset of your websockets will receive that message?
[02:48:46] <b0nn> I guess you could have a buffer that they all read from, and somehow tag whatever subset you wanted to to make the read
[02:51:13] <CommunistWolf> at the syscall level, you need to call *something* per fd. I think you could use splice to avoid multiple copies, at least
[02:51:50] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[02:52:51] *** Quits: treethought (~treethoug@138.68.49.251) (Remote host closed the connection)
[02:53:07] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[02:53:38] *** Joins: treethought (treethou@138.68.49.251)
[02:56:02] *** Joins: jinie (~jimmy@188.114.173.37)
[02:56:47] *** Joins: vptr (~vptr@user/vptr)
[02:57:14] *** Quits: jinie (~jimmy@188.114.173.37) (Client Quit)
[02:57:22] <A_Dragon> `<thinkofher> i am building sub/unsub mechanism for websockets, so i want to be able to remove and add things with ~o(1)` be wary about iter order
[02:57:27] <A_Dragon> if thats a problem for you
[02:57:35] <A_Dragon> but yeah I abuse maps as sets quite often
[02:58:23] *** Quits: esro (~esro@91.231.45.1) (Quit: Leaving)
[02:58:36] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[03:02:08] *** Quits: treethought (treethou@138.68.49.251) (Remote host closed the connection)
[03:02:57] *** Joins: treethought (treethou@138.68.49.251)
[03:05:41] *** Quits: noteness (noteness@user/noteness) (Read error: Connection reset by peer)
[03:06:31] <b0nn> https://www.youtube.com/watch?v=LI1YTFMi8W4
[03:07:40] *** Joins: noteness (noteness@user/noteness)
[03:10:41] *** Quits: noteness (noteness@user/noteness) (Read error: Connection reset by peer)
[03:12:43] *** Parts: dr0n (~nabromov@217.138.202.100) ()
[03:12:46] *** Joins: noteness (noteness@user/noteness)
[03:12:50] *** Joins: dr0n (~nabromov@217.138.202.100)
[03:12:55] <dr0n> Quick one, what is the difference between unicode.IsNumber and unicode.IsDigit?
[03:13:04] <dr0n> isn't the number a digit?
[03:13:22] <dr0n> it's not clear to me, from the package description
[03:16:17] *** Quits: treethought (treethou@138.68.49.251) (Remote host closed the connection)
[03:16:57] <fizzie> unicode.IsNumber is everything in the N categories (https://www.compart.com/en/unicode/category/Nd https://www.compart.com/en/unicode/category/Nl https://www.compart.com/en/unicode/category/No) which includes a lot more than just the decimal digits.
[03:17:00] *** Joins: treethought (treethou@138.68.49.251)
[03:18:21] <fizzie> https://play.golang.org/p/t-gMiEXrF5v for example shows a character for which unicode.IsDigit is false but unicode.IsNumber is true.
[03:18:55] <fizzie> (U+2160 ROMAN NUMERAL ONE, specifically.)
[03:19:00] <dr0n> oh!
[03:19:07] <dr0n> it makes sense now
[03:19:48] *** Quits: treethought (treethou@138.68.49.251) (Remote host closed the connection)
[03:20:46] *** Joins: treethought (~treethoug@138.68.49.251)
[03:21:18] *** Quits: vptr (~vptr@user/vptr) (Quit: leaving)
[03:21:31] *** Joins: links (~links@114.23.160.104)
[03:22:13] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[03:22:44] <fizzie> (Just to be clear, there's a lot more than just the characters 0123456789 for which unicode.IsDigit is true, too; I imagine it's everything in the "Nd" category, which includes all kinds of different scripts' decimal digits. But they all have in common that they represent decimal digits, unlike the other kinds of numbers.)
[03:26:13] <dr0n> I think I understand it now
[03:26:25] <dr0n> Thank you fizzie
[03:26:44] *** Joins: vptr (~vptr@user/vptr)
[03:27:02] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[03:28:31] *** Joins: Ohlov38951749035 (~Ohlov3@dyndsl-085-016-106-213.ewe-ip-backbone.de)
[03:29:09] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[03:30:58] *** Quits: jsrnop (~mark@pool-72-66-97-117.washdc.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[03:31:14] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:31:28] *** Joins: jsrnop (~mark@pool-72-66-97-117.washdc.fios.verizon.net)
[03:32:29] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[03:32:43] *** Quits: links (~links@114.23.160.104) (Quit: Leaving)
[03:33:52] *** Joins: andlabs (~andlabs@68.237.68.71)
[03:38:44] *** Quits: endigma6 (~endigma@134.41.131.163) (Ping timeout: 268 seconds)
[03:41:06] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:43:52] *** Joins: andlabs (~andlabs@68.237.68.71)
[03:43:55] *** Joins: endigma6 (~endigma@134.41.133.214)
[03:46:32] *** Quits: andlabs (~andlabs@68.237.68.71) (Client Quit)
[03:46:42] *** Joins: rom16384 (~Adium@2001:818:e755:fa00:2c07:acd0:6ae0:1e03)
[03:46:52] *** Joins: jkl (~jkl@2600:1700:2420:6d10::3f1)
[03:47:21] *** Joins: jinie (~jimmy@188.114.173.37)
[03:48:25] *** Joins: andlabs (~andlabs@68.237.68.71)
[03:48:40] *** Quits: treethought (~treethoug@138.68.49.251) (Remote host closed the connection)
[03:49:33] *** Joins: treethought (treethou@138.68.49.251)
[03:52:04] *** Quits: andlabs (~andlabs@68.237.68.71) (Client Quit)
[03:52:41] *** Joins: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net)
[03:53:39] *** Joins: andlabs (~andlabs@68.237.68.71)
[03:56:41] *** Joins: yoonkn (~user@175.197.208.79)
[04:00:46] *** Quits: vptr (~vptr@user/vptr) (Quit: leaving)
[04:05:20] *** Joins: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de)
[04:07:33] *** Quits: rom16384 (~Adium@2001:818:e755:fa00:2c07:acd0:6ae0:1e03) (Quit: Leaving.)
[04:07:43] *** Quits: keiser00910 (~keiser@188.47.59.39.ipv4.supernova.orange.pl) (Ping timeout: 268 seconds)
[04:15:39] *** Joins: keiser00910 (~keiser@217.99.44.40.ipv4.supernova.orange.pl)
[04:20:37] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:acf9:f56f:2048:6af1)
[04:24:06] *** Joins: RougeR (~RougeR@user/rouger)
[04:24:58] *** Quits: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net) (Ping timeout: 246 seconds)
[04:27:47] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[04:28:03] *** Joins: mickey (~user@user/mickey)
[04:33:51] *** Joins: keiser009107 (~keiser@83.25.201.125.ipv4.supernova.orange.pl)
[04:34:24] *** Quits: keiser00910 (~keiser@217.99.44.40.ipv4.supernova.orange.pl) (Ping timeout: 265 seconds)
[04:34:45] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[04:42:02] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[04:43:33] *** Quits: jkl (~jkl@2600:1700:2420:6d10::3f1) (Ping timeout: 265 seconds)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:48] *** Quits: endigma6 (~endigma@134.41.133.214) (Quit: Ping timeout (120 seconds))
[04:47:02] *** Joins: endigma6 (~endigma@134.41.133.214)
[04:47:41] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:48:00] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[04:48:56] *** Quits: endigma6 (~endigma@134.41.133.214) (Client Quit)
[04:49:17] *** Joins: endigma6 (~endigma@134.41.133.214)
[04:59:17] *** Quits: endigma6 (~endigma@134.41.133.214) (Quit: Ping timeout (120 seconds))
[04:59:20] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d) (Quit: Leaving)
[04:59:40] *** Joins: endigma6 (~endigma@134.41.133.214)
[05:04:16] *** Joins: acidfu- (~nicolasbo@bras-base-ctldpq2802w-grc-08-184-148-247-137.dsl.bell.ca)
[05:06:04] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[05:09:41] *** Quits: ente_ (~ente@p200300dc5f349401feddbc97e8bd2817.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:40:05] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[05:40:23] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[05:43:48] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[05:54:42] *** Quits: RougeR (~RougeR@user/rouger) (Quit: Leaving)
[05:58:58] *** Quits: schmillin (~schmillin@user/schmillin) (Quit: Leaving)
[05:59:14] *** Joins: schmillin (~schmillin@user/schmillin)
[06:00:35] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[06:01:07] *** Joins: c10l (~c10l@89.34.167.207)
[06:04:31] *** Joins: oxum (~oxum@122.172.237.95)
[06:04:34] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:08:06] *** Joins: andlabs (~andlabs@68.237.68.71)
[06:09:06] *** Quits: oxum (~oxum@122.172.237.95) (Ping timeout: 252 seconds)
[06:16:32] *** Quits: whoami (~whoami@d118-75-90-9.try.wideopenwest.com) (Ping timeout: 244 seconds)
[06:23:27] *** Joins: whoami (~whoami@d118-75-122-76.col.wideopenwest.com)
[06:25:03] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 258 seconds)
[06:26:04] *** Quits: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[06:43:51] *** Quits: dr0n (~nabromov@217.138.202.100) (Ping timeout: 258 seconds)
[06:44:23] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[06:44:56] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-f048-d07a-b5df-aadb.res6.spectrum.com)
[06:45:20] *** Joins: oxum (~oxum@122.172.237.95)
[06:47:28] *** Joins: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net)
[06:47:58] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-f048-d07a-b5df-aadb.res6.spectrum.com) (Remote host closed the connection)
[06:49:25] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[06:50:10] *** Quits: oxum (~oxum@122.172.237.95) (Ping timeout: 252 seconds)
[06:51:47] *** Quits: das_j (~das_j@2a01:4f8:c17:fa7::1) (Remote host closed the connection)
[06:52:06] *** Joins: das_j (~das_j@2a01:4f8:c17:fa7::1)
[07:05:19] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:06:04] *** Joins: josta (~josta@116.86.21.159)
[07:06:33] *** Joins: andlabs (~andlabs@68.237.68.71)
[07:06:36] *** Joins: gggp (~textual@60.10.194.47)
[07:09:36] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[07:15:31] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.8.2 - https://znc.in)
[07:17:16] *** Joins: icy (~icy@user/icy)
[07:18:01] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[07:19:29] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[07:29:29] *** Joins: oxum (~oxum@122.172.237.95)
[07:38:02] *** Quits: oxum (~oxum@122.172.237.95) (Ping timeout: 265 seconds)
[07:46:23] *** Joins: iateadonut (~dan@121.177.17.154)
[07:54:18] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[07:59:21] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 258 seconds)
[08:00:17] *** Joins: oxum (~oxum@122.172.237.95)
[08:01:40] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[08:02:01] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[08:04:58] *** Quits: oxum (~oxum@122.172.237.95) (Ping timeout: 252 seconds)
[08:16:15] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[08:17:28] *** Joins: marlinc_ (~marlinc@user/marlinc)
[08:18:33] *** Quits: marlinc (~marlinc@user/marlinc) (Ping timeout: 272 seconds)
[08:25:58] *** Quits: treethought (treethou@138.68.49.251) (Remote host closed the connection)
[08:26:59] *** Joins: treethought (~treethoug@138.68.49.251)
[08:35:59] *** Quits: gst (~gst@gateway/tor-sasl/gst) (Remote host closed the connection)
[08:36:20] *** Joins: gst (~gst@gateway/tor-sasl/gst)
[08:42:58] *** Joins: gggp (~textual@60.10.194.47)
[08:49:56] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[08:50:46] *** Joins: indigochill (~indigo@dsl-hkibng32-54f84d-66.dhcp.inet.fi)
[08:51:11] *** Joins: kulak (~kulak@user/kulak)
[08:52:43] *** Quits: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net) (Ping timeout: 246 seconds)
[08:55:44] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Ping timeout: 252 seconds)
[08:59:43] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[09:00:08] *** Joins: thing (~thing@user/thing)
[09:01:20] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[09:05:50] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[09:07:32] <foobaz> if anyone is curious about other non-digit numbers, here's a list: https://play.golang.org/p/hZKxb-rssXg
[09:07:34] *** Quits: josta (~josta@116.86.21.159) (Quit: Textual IRC Client: www.textualapp.com)
[09:07:45] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[09:07:58] *** Joins: josta (~josta@23.226.133.78)
[09:10:20] <foobaz> there is considerable inconsistency with east asian scripts, U+3038 〸 is a number but U+5341 十 is not, even though they are the same character
[09:10:35] *** Joins: fputs (~evan@67.59.83.166)
[09:10:47] <morgan> those don't even render the same on this machine for whatever reason
[09:12:36] <b0nn> 1131
[09:13:03] <b0nn> I added a counter to see how many there were https://play.golang.org/p/n38lZYtht0r
[09:14:26] *** Joins: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net)
[09:14:40] *** Joins: oxum (~oxum@122.172.237.95)
[09:15:56] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[09:22:55] *** Quits: oxum (~oxum@122.172.237.95) (Ping timeout: 258 seconds)
[09:25:13] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 258 seconds)
[09:30:12] *** Quits: indigochill (~indigo@dsl-hkibng32-54f84d-66.dhcp.inet.fi) (Ping timeout: 258 seconds)
[09:34:15] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[09:39:23] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[09:41:12] *** Joins: Jad (~Nashmi@user/jad)
[09:47:33] *** Joins: oxum (~oxum@122.172.237.95)
[09:52:06] *** Quits: oxum (~oxum@122.172.237.95) (Remote host closed the connection)
[09:55:43] *** Joins: Vukan (~drazen@46.235.100.68)
[09:59:00] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:59:04] <seebs> i didn't know unicode had roman numerals in it
[10:00:58] *** Quits: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net) (Ping timeout: 246 seconds)
[10:05:12] *** Joins: gggp (~textual@60.10.194.47)
[10:11:34] <diff> unicode has just about everything
[10:14:21] <diff> everything from stick figures 🯅 to pointing fingers 🯁🯂🯃 to folders 🮹🮺 and who even knows what else
[10:14:32] <diff> none of those are actually displaying for me but I'm just going to pretend they exist
[10:15:31] * b0nn would have just gone with 😀 (U+1f600)
[10:15:35] <diff> and going to recommend checking out the Symbols for Legacy Computing block
[10:15:55] <b0nn> 🚀
[10:17:46] <LambdaComplex> is there any way to register callbacks with the linux kernel that will be run when a process exits? ("process" as in an exec.Cmd, probably/hopefully)
[10:18:21] <seebs> not in general, no
[10:18:23] <LambdaComplex> i'm trying to do some stuff involving running processes and monitoring their status, and i feel like (from a philosophical standpoint) the entire challenge is because i'm having to write a userland-level abstraction over processes while not really having _full_ visibility into them
[10:18:39] <seebs> the canonical solution is that the parent process waits for them to exit, then does whatever it wants to do
[10:19:01] <seebs> there might be some ways to do it by abusing debug hooks, etc
[10:22:52] <LambdaComplex> sounds painful!
[10:23:41] *** Quits: arcatech (~arcatech@user/arcatech) (Remote host closed the connection)
[10:27:23] <avoozl> LambdaComplex: bpf can be used,  that is what extrace uses as well.  Not sure how well you can do this from go.. https://github.com/leahneukirchen/extrace/blob/master/extrace-bpf
[10:32:44] *** Quits: LiftLeft (~LiftLeft@154.21.114.224) (Ping timeout: 252 seconds)
[10:41:09] <seebs> In general, I think the correct tool for monitoring the status of child processes is "you wait for them to exit because you are their parent".
[10:44:45] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[10:46:06] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Client Quit)
[10:46:20] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[10:48:01] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[10:49:34] *** Joins: gggp (~textual@60.10.194.47)
[10:57:46] *** Joins: src (~src@user/src)
[11:01:01] *** Joins: kmetric (~karthik@49.206.9.195)
[11:02:18] *** Quits: kmetric (~karthik@49.206.9.195) (Client Quit)
[11:15:43] *** Joins: siika_ (~siika@139.226.50.41)
[11:16:22] *** Quits: siika__ (~siika@139.226.50.205) (Ping timeout: 252 seconds)
[11:16:47] *** Quits: josta (~josta@23.226.133.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:26:47] *** Joins: mrig (~mrig@user/mrig)
[11:27:57] *** Joins: oxum (~oxum@122.172.237.95)
[11:30:29] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[11:31:47] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[11:32:52] *** Quits: oxum (~oxum@122.172.237.95) (Ping timeout: 252 seconds)
[11:36:06] *** Joins: fef (~thedawn@user/thedawn)
[11:39:07] *** Quits: pepee (~user@user/pepee) (Quit: bye $IRC)
[11:42:28] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[11:53:57] *** Quits: Vukan (~drazen@46.235.100.68) (Ping timeout: 258 seconds)
[12:02:46] *** Joins: josta (~josta@23.226.133.88)
[12:03:47] *** Joins: rothandr_ (~rothandre@c-73-213-69-254.hsd1.va.comcast.net)
[12:04:24] *** Quits: rothandrew (~rothandre@c-73-213-69-254.hsd1.va.comcast.net) (Ping timeout: 268 seconds)
[12:08:35] *** Quits: rothandr_ (~rothandre@c-73-213-69-254.hsd1.va.comcast.net) (Read error: Connection reset by peer)
[12:10:03] *** Joins: rothandrew (~rothandre@c-73-213-69-254.hsd1.va.comcast.net)
[12:13:30] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 258 seconds)
[12:19:40] *** Joins: gggp (~textual@60.10.194.47)
[12:29:49] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[12:34:08] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:42:05] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[12:45:53] *** Joins: dr0n (~nabromov@217.138.202.100)
[12:47:36] *** Joins: nabromov (~nabromov@94.11.23.235)
[12:50:18] *** Quits: dr0n (~nabromov@217.138.202.100) (Ping timeout: 258 seconds)
[12:56:33] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[13:06:57] *** Parts: nabromov (~nabromov@94.11.23.235) ()
[13:07:16] *** Joins: dr0n (~nabromov@94.11.23.235)
[13:07:54] *** Joins: danmurf (uid480399@user/danmurf)
[13:10:07] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 252 seconds)
[13:12:03] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[13:16:17] *** Joins: rgl (~rgl@85.245.47.147)
[13:18:54] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[13:27:29] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[13:27:29] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[13:36:31] *** Joins: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net)
[13:37:22] *** Joins: pleb66 (~pleb66@user/pleb66)
[13:39:12] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:44:23] *** Joins: jkl (~jkl@2600:1700:2420:6d10::3f1)
[13:49:47] <j416> it surprises me that chinese numerals don't seem to be unicode numbers nor digits
[13:50:47] <j416> except zero
[13:51:04] <j416> https://play.golang.org/p/QxJPi01tWe9
[13:51:10] <mrig> Hello :)
[13:52:44] <mrig> When using runes in a lexer, if I would like to collect the generated bytes in a bytes.Buffer, and am currently parsing that buffer into each stage by using an io.Reader: What would be the preferred way write a rune to the buffer?
[13:53:01] <ikke> j416: are there only 7 numerals?
[13:57:32] <mrig> I was thinking that perhaps io.WriteString(w, fmt.Sprintf("%c", lex.token)) but is this a little heavy handed?
[14:00:45] <rudi_s> mrig: WriteRune() ?
[14:00:57] <j416> ikke: no that's just a few. 0, 1, 10, 100, 1000, 10000, 100000000.
[14:01:06] <ikke> ah, right
[14:01:18] <ikke> so they signify magnitude
[14:01:28] <j416> I suppose.
[14:02:07] <ikke> I can imagine that things like 10, 100, etc are not digits
[14:02:10] <mrig> rudi_s: Oh, Id forgotten that was there, yes if I pass about the actual bytes.Buffer rather than an io.Writer; Thank you.
[14:02:25] <rudi_s> np
[14:02:32] <j416> ikke: yes that makes sense, but why are they not numbers? o_O
[14:02:34] <j416> ikke: https://play.golang.org/p/T_fI8NBxKxj
[14:03:20] <ikke> I don't know
[14:03:42] <j416> perhaps too tangled to define, so they thought let's skip it
[14:04:06] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[14:05:02] *** Quits: Ohlov38951749035 (~Ohlov3@dyndsl-085-016-106-213.ewe-ip-backbone.de) (Ping timeout: 252 seconds)
[14:06:30] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Quit: WeeChat 3.1)
[14:07:00] <j416> yes, most likely that.
[14:08:39] <mrig> seems that the Chinese also use the sanskrit/arabic base 105 system, but have words for numbers too, as we do in English also. two for example.
[14:08:39] <j416> (there are multiple variants, some of which also correspond to words unrelated to numbers)
[14:08:55] <mrig> base 10 rather
[14:09:11] <mrig> words for writing on checks or in letters etc.
[14:09:24] <j416> base 105? that sounds high. link?
[14:09:39] <j416> ah, you meant base 10
[14:09:56] <j416> mrig: yes, they use arabic numerals, too.
[14:10:31] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[14:10:32] <mrig> yes typo I use window key with 1-4 to change screen, hit the 5 from time to time, which is not mapable in GNOME :)
[14:10:54] <mrig> j416: I prefer to call them sanskrit numerals is it is the origin :)
[14:11:02] <j416> didn't know!
[14:11:10] <mrig> just a name I know, but still :)
[14:13:54] <mrig> al-Biruni was quite the indianologist.
[14:15:49] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[14:15:54] <mrig> indian indians that is not the ones speaking sanskrit base languages in the Americas :)
[14:17:05] <mrig> Oh, the chinese have the same symbol for 1, 2 and 3 as the bhrami script :)
[14:19:52] <j416> except the brahmi seem to be numbers D:  https://play.golang.org/p/LUz63QDvI1L
[14:20:22] <j416> (but not digits! hm)
[14:21:04] <mrig> I think that the arabic school first used 0 as a decimal placeholder.
[14:22:07] <mrig> the bharat system does not assume that numbers will ever be that precise and uses methods to correct small errors in perpetuity.
[14:22:13] *** Joins: TFKyle (~kyle@64.201.205.70)
[14:22:21] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (*.net *.split)
[14:22:21] *** Quits: thing (~thing@user/thing) (*.net *.split)
[14:22:21] *** Quits: gst (~gst@gateway/tor-sasl/gst) (*.net *.split)
[14:22:21] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (*.net *.split)
[14:22:21] *** Quits: mickey (~user@user/mickey) (*.net *.split)
[14:22:47] *** Joins: gst (~gst@gateway/tor-sasl/gst)
[14:22:53] *** Join[14:26:16] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[14:26:20] <mrig> Well people do get very protective of their own dilections :D
[14:26:37] <mrig> usually to their own detriment!
[14:27:52] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[14:28:20] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Client Quit)
[14:28:44] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[14:34:35] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[14:37:52] *** Joins: oxum (~oxum@122.172.237.95)
[14:40:59] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 244 seconds)
[14:42:30] *** Joins: mickey2 (~user@user/mickey)
[14:42:31] *** Quits: thing (~thing@user/thing) (Ping timeout: 244 seconds)
[14:42:33] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[14:42:56] *** Joins: thing (~thing@user/thing)
[14:43:05] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[14:43:05] *** mickey2 is now known as mickey
[14:52:00] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Remote host closed the connection)
[14:53:02] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[14:53:21] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 258 seconds)
[15:04:44] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 244 seconds)
[15:05:19] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:05:44] *** Joins: mickey (~user@user/mickey)
[15:05:46] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[15:05:51] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[15:11:56] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[15:12:23] *** Joins: mickey (~user@user/mickey)
[15:14:26] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 258 seconds)
[15:16:31] *** Quits: mickey (~user@user/mickey) (Client Quit)
[15:16:39] *** Joins: mickey (~user@user/mickey)
[15:22:52] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[15:23:58] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[15:24:05] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Quit: _)
[15:24:18] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[15:24:31] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:24:39] *** Joins: mickey (~user@user/mickey)
[15:24:55] *** Quits: jkl (~jkl@2600:1700:2420:6d10::3f1) (Ping timeout: 268 seconds)
[15:26:33] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[15:28:06] *** Joins: Snyp (~rksht@49.207.194.192)
[15:28:26] *** Joins: GoLiath_ (~GoLiath@159.48.55.94)
[15:30:48] *** Joins: andlabs (~andlabs@68.237.68.71)
[15:33:30] *** Joins: GoLiath__ (~GoLiath@80.179.69.245.cable.012.net.il)
[15:35:06] *** Joins: ente_ (~ente@p200300dc5f349401feddbc97e8bd2817.dip0.t-ipconnect.de)
[15:35:08] *** Quits: GoLiath_ (~GoLiath@159.48.55.94) (Ping timeout: 265 seconds)
[15:38:10] *** Quits: rewt (~default@user/rewt) (Ping timeout: 252 seconds)
[15:38:52] *** Joins: rewt (~default@user/rewt)
[15:40:01] *** Joins: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de)
[15:40:12] *** Quits: pleb66 (~pleb66@user/pleb66) (Quit: WeeChat 3.1)
[15:51:23] *** Quits: Nex8192 (~Nex8192@user/nex8192) (Ping timeout: 272 seconds)
[15:53:09] *** Joins: SincereFox (uid337158@user/sincerefox)
[15:53:56] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:56:11] *** Joins: andlabs (~andlabs@68.237.68.71)
[15:58:18] *** Quits: nick (~nick@d40a737a.rev.stofanet.dk) (Quit: WeeChat 3.1)
[15:58:22] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[16:00:08] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:01:58] *** Parts: das_j (~das_j@2a01:4f8:c17:fa7::1) ()
[16:10:46] *** Joins: menace (~someone@2001:a61:35ce:7d01:c8d5:faae:6c4d:101c)
[16:10:58] *** Quits: menace (~someone@2001:a61:35ce:7d01:c8d5:faae:6c4d:101c) (Changing host)
[16:10:58] *** Joins: menace (~someone@user/menace)
[16:13:00] *** Quits: rgl (~rgl@85.245.47.147) (Ping timeout: 252 seconds)
[16:16:33] *** Joins: schmillin_ (~schmillin@user/schmillin)
[16:20:02] *** Quits: schmillin (~schmillin@user/schmillin) (Ping timeout: 265 seconds)
[16:25:27] *** Quits: josta (~josta@23.226.133.88) (Remote host closed the connection)
[16:31:59] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[16:32:56] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[16:32:56] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~♪)
[16:34:07] *** Quits: oxum (~oxum@122.172.237.95) (Remote host closed the connection)
[16:35:08] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:36:45] *** Joins: rgl (~rgl@85.245.47.147)
[16:38:46] *** Joins: josta (~josta@68.235.36.98)
[16:39:55] *** Quits: nmollerup (~nmm@customer-212-237-103-18.ip4.gigabit.dk) (Remote host closed the connection)
[16:40:17] *** Joins: nmollerup (~nmm@customer-2a00-7660-1612-0168-cfa8-be86-5a22-ee27.ip6.gigabit.dk)
[16:40:47] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 272 seconds)
[16:41:22] *** Joins: gggp (~textual@60.10.194.47)
[16:50:06] *** Joins: CoolerX (~CoolerX@202.164.131.24)
[16:52:25] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[17:00:49] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[17:02:38] *** Quits: fputs (~evan@67.59.83.166) (Quit: WeeChat 3.2)
[17:02:46] *** Joins: oxum (~oxum@122.172.237.95)
[17:03:47] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[17:04:49] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[17:06:55] <CoolerX> Hi
[17:07:05] <CoolerX> I am getting some weird behaviour here https://play.golang.org/p/OZ15YqWvSW9
[17:07:12] <CoolerX> I am appending a slice to a slice of slices
[17:07:33] <CoolerX> changing the slice using append seems to affect the slice of slices
[17:07:38] *** Quits: oxum (~oxum@122.172.237.95) (Ping timeout: 252 seconds)
[17:07:45] <CoolerX> which is weird since I thought append created a new slice
[17:08:12] <CoolerX> I have tried to simplify the code but not able to reproduce the same behaviour https://play.golang.org/p/pMlXAp1-zjF
[17:08:19] <CoolerX> https://play.golang.org/p/9aZwoXT2LXj
[17:08:23] <CoolerX> https://play.golang.org/p/Phvp0ZzTGSN
[17:08:27] <CoolerX> https://play.golang.org/p/UOmJ3jTSkb0
[17:08:30] <CoolerX> https://play.golang.org/p/7hYHsv1uxyc
[17:08:33] <CoolerX> https://play.golang.org/p/drPeGJ9X6un
[17:08:49] <CoolerX> none of those code samples are able to reproduce that weird behaviour
[17:08:57] <CoolerX> so I think it has something to do with recursion
[17:09:04] *** Joins: Rudde (~rudde@netboot.io)
[17:11:54] <CoolerX> Just to be clear, this is the code that has the bug https://play.golang.org/p/OZ15YqWvSW9
[17:12:51] <CoolerX> the bug is the results slice of slices looks like this at first   idx 4 after &[{[start bbbb cccc dddd eeee aaaa]}]
[17:13:05] <CoolerX> but immediately after recursing it looks like    idx 4 before &[{[start bbbb cccc dddd eeee bbbb]}]
[17:13:21] <CoolerX> but immediately before recursing it looks like    idx 4 before &[{[start bbbb cccc dddd eeee bbbb]}]
[17:13:33] *** Quits: GoLiath__ (~GoLiath@80.179.69.245.cable.012.net.il) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:13:57] <CoolerX> somehow the stuff inside results got changed just by append to currentResult
[17:13:58] *** Joins: GoLiath_ (~GoLiath@80.179.69.245.cable.012.net.il)
[17:14:03] <CoolerX> appending*
[17:14:19] <CoolerX> anyone have any idea what could be causing this?
[17:14:21] <fizzie> Without looking, while append does create a new *slice*, the array it refers to may be the same as the passed-in slice, if it has enough capacity.
[17:15:13] <CoolerX> fizzie, the code at a high level works in a way similar to backtracking
[17:15:35] <CoolerX> currentResult is a slice of strings, you can think of this as the current path you are on while recursing
[17:15:50] <CoolerX> once it hits the end of the path it appends the path to the results
[17:15:56] <CoolerX> and backtracks
[17:16:18] <CoolerX> and then tries a different path by changing currentResult
[17:17:54] <CoolerX> the for loop from lines 25 to 34 is trying each fork in the path https://play.golang.org/p/OZ15YqWvSW9
[17:18:09] <fizzie> Well, I unfortunately don't have the chance to take a closer look at the code right now. But here's a quick example of what *can* go wrong with append, specifically how the contents of s1 change due to changes to s2: https://play.golang.org/p/ToN_Wv2k4Hk
[17:18:18] <CoolerX> fizzie, it's very much like a depth first search
[17:19:01] *** Joins: oxum (~oxum@122.172.237.95)
[17:19:47] <CoolerX> fizzie, let's say you are doing a depth first search to print all the paths from the root of a tree
[17:20:07] <CoolerX> you have to return a [][]string
[17:20:14] <CoolerX> each path is a []string
[17:20:22] <CoolerX> and you have several paths so [][]string
[17:20:57] <CoolerX> the code is a naive implementation of that really
[17:21:49] *** Joins: fputs (~evan@67.59.83.166)
[17:23:46] *** Quits: oxum (~oxum@122.172.237.95) (Ping timeout: 252 seconds)
[17:27:39] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[17:27:56] <CoolerX> fizzie, I fixed it by making a copy of the slice before appending
[17:28:07] <CoolerX> using a for loop to copy the slice and then append the copy
[17:28:19] <CoolerX> not ideal but I guess there's no other way
[17:30:10] *** Joins: menace_ (~someone@ppp-93-104-165-197.dynamic.mnet-online.de)
[17:30:58] <fizzie> Again, can't look too deeply right now, but there's definitely alternatives to *that*. You can use the built-in `copy` function instead of a loop, or a full slicing expression to make append always make a copy and never too reuse the same array (by making sure len == cap).
[17:32:32] *** Quits: menace (~someone@user/menace) (Ping timeout: 265 seconds)
[17:33:27] <fizzie> `append(s[:len(s):len(s)], ...)` should be guaranteed to return a slice that shares no storage with `s`, assuming it appends more than zero elements.
[17:33:32] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[17:33:42] *** Joins: menace (~someone@ppp-93-104-165-222.dynamic.mnet-online.de)
[17:34:24] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 252 seconds)
[17:35:57] *** Quits: menace_ (~someone@ppp-93-104-165-197.dynamic.mnet-online.de) (Ping timeout: 265 seconds)
[17:36:47] <CoolerX> fizzie, oh I forgot about the builtin copy
[17:37:15] <CoolerX> yeah the ellipsis syntax could also work to make a copy
[17:38:02] <CoolerX> fizzie, the slicing syntax to specify the cap might be just worse than making a copy
[17:38:27] <CoolerX> only need to make a copy at the end of each path at the deepest level of recursion
[17:38:49] *** Quits: menace (~someone@ppp-93-104-165-222.dynamic.mnet-online.de) (Ping timeout: 265 seconds)
[17:38:49] *** Quits: ente_ (~ente@p200300dc5f349401feddbc97e8bd2817.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[17:41:46] *** Joins: ente_ (ente@gateway/vpn/protonvpn/ente/x-68844868)
[17:46:46] *** Joins: menace (~someone@2001:a61:341d:7801:fdeb:37a3:1a64:4628)
[17:48:34] *** Parts: iateadonut (~dan@121.177.17.154) ()
[17:49:29] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[17:50:04] *** Quits: ente_ (ente@gateway/vpn/protonvpn/ente/x-68844868) (Ping timeout: 258 seconds)
[17:50:59] *** Joins: andlabs (~andlabs@68.237.68.71)
[17:52:07] <j416> CoolerX: break it down, remove complexity, try to isolate the issue.
[17:54:19] *** Quits: acidfu- (~nicolasbo@bras-base-ctldpq2802w-grc-08-184-148-247-137.dsl.bell.ca) (Ping timeout: 265 seconds)
[17:56:45] *** Joins: acidfu- (~nicolasbo@bras-base-ctldpq2802w-grc-08-184-148-247-137.dsl.bell.ca)
[17:57:16] <nevivurn> the underlying issue is basically just this https://play.golang.org/p/R5v4hb5nfTk
[18:02:56] *** Quits: SincereFox (uid337158@user/sincerefox) (Quit: Connection closed for inactivity)
[18:04:45] *** Joins: menace_ (~someone@ppp-93-104-166-209.dynamic.mnet-online.de)
[18:05:07] *** Joins: vptr (~vptr@user/vptr)
[18:06:05] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Ping timeout: 244 seconds)
[18:06:51] *** Quits: menace (~someone@2001:a61:341d:7801:fdeb:37a3:1a64:4628) (Ping timeout: 265 seconds)
[18:08:00] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[18:10:13] *** Joins: fef (~thedawn@user/thedawn)
[18:12:04] *** Joins: gggp (~textual@60.10.194.47)
[18:33:26] <CoolerX> nevivurn, yes
[18:34:00] <CoolerX> s2 gets affected by an append to s1
[18:34:25] <CoolerX> I think the solution is still to do a copy
[18:37:09] *** Quits: Jad (~Nashmi@user/jad) (Remote host closed the connection)
[18:41:30] *** Quits: GoLiath_ (~GoLiath@80.179.69.245.cable.012.net.il) (Ping timeout: 252 seconds)
[18:46:28] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[18:51:49] *** Joins: GoLiath_ (~GoLiath@80.179.69.245.cable.012.net.il)
[18:57:16] *** Quits: alip (~alip@exherbo/developer/alip) (Quit: The great square has no corners. The great vessel is never finished. The great tone is barely heard. The great thought can't be thought --Dao De Jing by Lao Zi as translated by UKLG.)
[18:58:13] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1000)
[18:59:29] *** Joins: Kane (~Kane@2a01:e34:ee89:5d90:f0fd:81aa:a3f0:7e9)
[19:00:01] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[19:02:01] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1000) (Client Quit)
[19:02:10] *** Quits: menace_ (~someone@ppp-93-104-166-209.dynamic.mnet-online.de) (Quit: menace_)
[19:02:20] *** Joins: gggp (~textual@60.10.194.47)
[19:03:21] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1000)
[19:11:42] *** Quits: jinie (~jimmy@188.114.173.37) (Quit: ZNC 1.8.2 - https://znc.in)
[19:13:28] *** Joins: jinie (~jimmy@188.114.173.37)
[19:17:05] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 258 seconds)
[19:19:21] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[19:19:30] *** Joins: fef (~thedawn@user/thedawn)
[19:26:47] *** Joins: gggp (~textual@60.10.194.47)
[19:27:31] *** Joins: oxum (~oxum@122.172.237.95)
[19:28:49] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[19:29:37] *** Joins: Giedrius (~giedrius@78-58-156-248.static.zebra.lt)
[19:32:26] *** Quits: oxum (~oxum@122.172.237.95) (Ping timeout: 265 seconds)
[19:37:41] *** Joins: oxum (~oxum@122.172.237.95)
[19:40:38] *** Joins: koo555 (~koo6@89-24-13-235.customers.tmcz.cz)
[19:42:23] *** Quits: oxum (~oxum@122.172.237.95) (Ping timeout: 258 seconds)
[19:42:23] *** Quits: koo7 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 258 seconds)
[19:47:05] *** Quits: josta (~josta@68.235.36.98) (Quit: Textual IRC Client: www.textualapp.com)
[19:48:22] *** Quits: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net) (Quit: Ping timeout (120 seconds))
[19:50:14] *** Joins: Giedrius_ (~giedrius@5.133.65.65)
[19:50:26] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 258 seconds)
[19:52:42] *** Joins: gggp (~textual@60.10.194.47)
[19:53:11] *** Quits: Giedrius (~giedrius@78-58-156-248.static.zebra.lt) (Ping timeout: 265 seconds)
[19:53:31] *** Joins: oxum (~oxum@122.172.237.95)
[19:53:44] *** Joins: Guest8 (~Guest8@188.214.106.83)
[19:58:32] *** Quits: oxum (~oxum@122.172.237.95) (Ping timeout: 265 seconds)
[20:00:34] *** Joins: arcatech (~arcatech@user/arcatech)
[20:03:16] *** Joins: Vukan (~drazen@46.235.100.68)
[20:03:25] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[20:14:34] *** Joins: pepee (~user@user/pepee)
[20:14:34] *** Quits: koo555 (~koo6@89-24-13-235.customers.tmcz.cz) (Read error: Connection reset by peer)
[20:15:36] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[20:16:02] *** Quits: Giedrius_ (~giedrius@5.133.65.65) (Remote host closed the connection)
[20:20:28] *** Joins: alip (~alip@exherbo/developer/alip)
[20:21:37] *** Joins: Skyz (~Skyz@user/skyz)
[20:24:34] *** Quits: Skyz (~Skyz@user/skyz) (Client Quit)
[20:26:48] *** Quits: Guest8 (~Guest8@188.214.106.83) (Quit: Client closed)
[20:27:41] *** Joins: s-video (~s-video@2601:196:4b00:e70:683d:3396:5e37:e3c)
[20:28:46] *** Quits: Vukan (~drazen@46.235.100.68) (Ping timeout: 258 seconds)
[20:32:14] *** Joins: sector_0 (~not@104.255.233.225)
[20:33:50] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[20:34:27] *** Quits: dr0n (~nabromov@94.11.23.235) (Ping timeout: 252 seconds)
[20:34:48] *** Joins: LiftLeft (~LiftLeft@154.21.114.203)
[20:35:17] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Client Quit)
[20:38:05] *** Joins: shka (~herr@109.231.62.239)
[20:40:37] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[20:41:43] *** Quits: treethought (~treethoug@138.68.49.251) (Remote host closed the connection)
[20:42:55] *** Joins: treethought (treethou@138.68.49.251)
[20:49:17] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 265 seconds)
[20:49:44] *** Quits: Xjs (~jannis@user/xjs) (Ping timeout: 265 seconds)
[20:50:39] *** Joins: Xjs (~jannis@user/xjs)
[20:51:32] *** Joins: oxum (~oxum@122.172.237.95)
[20:55:55] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[20:56:32] *** Quits: oxum (~oxum@122.172.237.95) (Ping timeout: 265 seconds)
[20:57:33] <nevivurn> Yup
[20:58:36] <nevivurn> The general way in which to avoid those classes of problems is to only ever have one "working copy" of a slice that you do anything with, and make copies whenever you're handing them off (appending to the final result, in your case)
[21:00:24] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[21:00:35] *** Quits: Snyp (~rksht@49.207.194.192) (Ping timeout: 258 seconds)
[21:01:12] *** Joins: oxum (~oxum@122.172.237.95)
[21:04:51] *** Quits: nevivurn (~nevivurn@user/nevivurn) (Quit: Goodbye~)
[21:05:57] *** Quits: oxum (~oxum@122.172.237.95) (Ping timeout: 258 seconds)
[21:06:41] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:08:57] *** Joins: kodah (~kodah@user/kodah)
[21:09:11] *** Joins: andlabs (~andlabs@68.237.68.71)
[21:09:46] *** Quits: shka (~herr@109.231.62.239) (Quit: Konversation terminated!)
[21:10:52] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[21:11:48] *** Joins: fef (~thedawn@user/thedawn)
[21:14:51] *** Joins: shka (~herr@109.231.62.239)
[21:22:49] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 258 seconds)
[21:23:30] *** Joins: oxum (~oxum@122.172.237.95)
[21:25:10] *** Joins: kodah (~kodah@user/kodah)
[21:28:26] *** Quits: oxum (~oxum@122.172.237.95) (Ping timeout: 265 seconds)
[21:30:56] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[21:44:21] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 265 seconds)
[21:44:50] *** Quits: s-video (~s-video@2601:196:4b00:e70:683d:3396:5e37:e3c) (Ping timeout: 265 seconds)
[21:57:11] *** Quits: gggp (~textual@60.10.194.47) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:10:52] *** Joins: virtualroot (~virtualro@user/virtualroot)
[22:15:54] *** Joins: x88x88x (~x88x88x@188.214.106.69)
[22:16:07] *** Quits: andlabs (~andlabs@68.237.68.71) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:16:25] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:16:29] *** Quits: kodah (~kodah@user/kodah) (Quit: kodah)
[22:17:08] *** Joins: kodah (~kodah@user/kodah)
[22:17:21] *** Quits: gpeskens (~gpeskens@2001:985:7aa4:1:b32e:bcaa:7e9a:3dbd) (Remote host closed the connection)
[22:17:27] *** Joins: kulak (~kulak@user/kulak)
[22:17:35] *** Joins: andlabs (~andlabs@68.237.68.71)
[22:17:39] *** Joins: gpeskens (~gpeskens@2001:985:7aa4:1:af84:4447:530e:6bd1)
[22:19:04] <kodah> is there anything i should be aware of when running public grpc apis?
[22:21:57] <bookworm> auth (both of them)... rate limits... the usual like any other public thing
[22:22:33] *** Quits: sadg (~odd@cpc113812-lea23-2-0-cust1375.6-3.cable.virginm.net) (Quit: WeeChat 3.0.1)
[22:23:00] *** Joins: sadg (~odd@cpc113812-lea23-2-0-cust1375.6-3.cable.virginm.net)
[22:23:16] *** Quits: sadg (~odd@cpc113812-lea23-2-0-cust1375.6-3.cable.virginm.net) (Client Quit)
[22:23:29] *** x88x88x is now known as x88x88x88x
[22:24:36] *** Joins: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net)
[22:27:55] *** Joins: x88x88x (~x88x88x@188.214.106.69)
[22:28:33] *** Quits: x88x88x (~x88x88x@188.214.106.69) (Client Quit)
[22:28:44] *** Quits: pztrn (~pztrn@aurora.pztrn.name) (Quit: Segmentation fault)
[22:30:27] *** Quits: x88x88x88x (~x88x88x@188.214.106.69) (Quit: WeeChat 2.8)
[22:34:17] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[22:35:06] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:acf9:f56f:2048:6af1) (Ping timeout: 265 seconds)
[22:35:13] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[22:36:01] <kodah> cool
[22:36:17] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[22:37:20] *** Quits: virtualroot (~virtualro@user/virtualroot) (Read error: Connection reset by peer)
[22:38:03] *** Quits: vptr (~vptr@user/vptr) (Quit: leaving)
[22:38:51] *** Joins: virtualroot (~virtualro@user/virtualroot)
[22:40:29] *** Quits: moto (~moto@user/moto) (Remote host closed the connection)
[22:41:07] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d)
[22:41:25] *** Joins: moto (~moto@user/moto)
[22:42:32] *** Joins: pztrn (~pztrn@user/pztrn)
[22:44:19] *** Quits: LiftLeft (~LiftLeft@154.21.114.203) (Ping timeout: 265 seconds)
[22:45:19] *** Quits: crowbar (~user@user/crowbar) (Quit: rcirc on GNU Emacs 28.0.50)
[22:45:50] *** Quits: pztrn (~pztrn@user/pztrn) (Quit: ZNC 1.8.2 - https://znc.in)
[22:46:07] *** Joins: pztrn (~pztrn@user/pztrn)
[22:46:23] *** Joins: crowbar` (~crowbar@user/crowbar)
[22:48:04] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[22:48:27] *** crowbar` is now known as crowbar
[22:48:35] *** Joins: eck0 (~Android@mobile-166-173-62-252.mycingular.net)
[22:48:54] *** Quits: pztrn (~pztrn@user/pztrn) (Client Quit)
[22:49:11] *** Joins: pztrn (~pztrn@user/pztrn)
[22:50:23] *** Joins: dr0n (~nabromov@94.11.23.235)
[22:52:35] *** Quits: pztrn (~pztrn@user/pztrn) (Client Quit)
[22:52:53] *** Joins: pztrn (~pztrn@user/pztrn)
[22:54:36] *** Joins: x88x88x (~x88x88x@188.214.106.69)
[22:56:33] *** Joins: kayprish (~kayprish@46.240.143.86)
[22:57:55] *** Quits: kayprish (~kayprish@46.240.143.86) (Client Quit)
[22:58:06] *** Joins: kayprish (~kayprish@46.240.143.86)
[23:04:33] *** Joins: oxum (~oxum@122.172.237.95)
[23:04:35] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 265 seconds)
[23:05:32] *** Joins: sadg (~odd@cpc113812-lea23-2-0-cust1375.6-3.cable.virginm.net)
[23:07:02] *** Quits: acidfu- (~nicolasbo@bras-base-ctldpq2802w-grc-08-184-148-247-137.dsl.bell.ca) (Ping timeout: 265 seconds)
[23:07:45] *** Joins: Ohlov38951749035 (~Ohlov3@host-091-097-117-154.ewe-ip-backbone.de)
[23:07:59] *** Joins: Torr (~Torr@user/torr)
[23:09:23] *** Quits: oxum (~oxum@122.172.237.95) (Ping timeout: 258 seconds)
[23:10:07] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:cd00:7e66:2790:8be6)
[23:11:58] *** Quits: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net) (Ping timeout: 246 seconds)
[23:13:51] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-ef7e-e678-9163-65b2.res6.spectrum.com)
[23:14:01] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[23:14:48] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-ef7e-e678-9163-65b2.res6.spectrum.com) (Client Quit)
[23:15:07] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-ef7e-e678-9163-65b2.res6.spectrum.com)
[23:16:10] *** Joins: LiftLeft (~LiftLeft@154.21.23.100)
[23:21:47] *** Quits: chasmo77 (~chas77@71.63.241.168) (Quit: It's just that easy)
[23:21:57] *** tree is now known as psb
[23:22:01] *** Quits: sector_0 (~not@104.255.233.225) (Ping timeout: 265 seconds)
[23:23:15] *** Joins: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net)
[23:23:16] *** Joins: kodah (~kodah@user/kodah)
[23:26:41] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[23:28:30] *** Parts: dr0n (~nabromov@94.11.23.235) ()
[23:28:42] *** Joins: dr0n (~nabromov@94.11.23.235)
[23:29:19] *** Quits: dr0n (~nabromov@94.11.23.235) (Quit: WeeChat 2.8)
[23:30:15] *** Joins: dr0n (~nabromov@94.11.23.235)
[23:36:18] *** Quits: kodah (~kodah@user/kodah) (Read error: Connection reset by peer)
[23:42:35] *** Joins: kodah (~kodah@user/kodah)
[23:46:33] *** Quits: GoLiath_ (~GoLiath@80.179.69.245.cable.012.net.il) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:47:53] <dr0n> might I ask for a help, as I got stuck
[23:48:09] <dr0n> https://pastebin.com/PbkDJE0x
[23:49:04] <dr0n> I managed to partially resolve the task, but I got stuck trying to generate false in case of special characters are present with the numbers
[23:49:21] <dr0n> tried few things, and .. I coulnd't resolve it
[23:50:28] <src> ideally you would write a small test case and paste via golang playground so people can help, pasting 180 lines of raw code expecting people to figure out your specific problem is kind of tough
[23:50:46] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[23:50:51] <src> got to go for tonight
[23:51:06] <src> (stick around, someone else will surely help)
[23:51:10] *** Quits: src (~src@user/src) (Quit: leaving)
[23:51:13] <dr0n> src, thanks
[23:51:35] *** Quits: elf_fortrez (~elf_fortr@adsl-64-237-239-58.prtc.net) (Quit: Client closed)
[23:51:50] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[23:52:08] <dr0n> https://play.golang.org/p/I_fu9U1xK09
[23:52:35] <dr0n> expected failse, as I should return false in case of $, %, etc present in the string
[23:53:03] <dr0n> I understand the mistake I have; I do look for numbers, which I add to a slice
[23:53:13] <dr0n> so I would ignore the special characters in every case
[23:53:28] <b0nn> IRC rubber duck wins again
[23:54:38] <dr0n> sound like special kind of rubber duck :)
[23:54:55] <crowbar> dr0n: on line 42 you call CharToNum and return an error if the rune isn't between '0' and '9.  why are you calling continue if there is an error?
[23:55:51] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 265 seconds)
[23:57:25] <dr0n> crowbar: ah, I can probably return false in that case
