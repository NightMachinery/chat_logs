[00:00:04] *** Joins: Auron (~Auron956@user/auron)
[00:01:27] <oft_gegong> what if you could do anything with C with one function call? #define doitall() __DO_IT_ALL()
[00:02:17] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Ping timeout: 248 seconds)
[00:02:33] *** Joins: zaher (~zaher@37.48.178.78)
[00:02:45] *** Joins: d[^u^]y (~d^u^]y@user/duy/x-5876947)
[00:02:46] <oft_gegong> what if you could access all of the DLL's/.so files on the system and do anything?
[00:03:16] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[00:04:31] <oft_gegong> what if the OS could access unknown functionality and access everything?
[00:04:42] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[00:04:47] <cis> oft_gegong: drugs are bad for you
[00:05:10] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Client Quit)
[00:05:31] <oft_gegong> cis: I 17%agree. I 0.2%disagree. I 82.8%borderlands agree.
[00:06:05] *** Quits: Payam__ (~Payam@c-39bfe255.01-402-73746f25.bbcust.telenor.se) (Quit: Leaving)
[00:06:44] *** Joins: moha (uid506645@id-506645.brockwell.irccloud.com)
[00:07:13] <oft_gegong> what if you could program something that could be like something good..you know?
[00:08:07] <pulse> oft_gegong, please stop trolling
[00:08:14] *** Joins: Guest45 (~Guest45@2a01:586:9649:1:e56d:990c:8bb0:2f08)
[00:08:36] <oft_gegong> WHAT? me? trolling? but how? when? You have any idea how much I sacrificed!
[00:08:42] <Guest45> I formatted my USB stick. Now it doesn't recognize it anymore. What do I do?
[00:08:49] <Guest45> I can't even open it in nautilus
[00:09:03] <Guest45> wait I should be in #linux
[00:09:36] <eyynet4> did you defrag it before formatting?
[00:09:38] <smallville7123> something isnt right ;-;
[00:09:52] <Guest45> defrag?
[00:09:56] <Guest45> I don't think so
[00:09:59] <Guest45> it did a full erase
[00:10:02] <Guest45> it took like 30 minutes
[00:10:04] <Guest45> 64 gb stick
[00:10:14] <eyynet4> a full fragged erase oh no!!
[00:10:17] <Guest45> I just wanted to clean the files
[00:10:22] <Guest45> what can I do?
[00:10:45] <Guest45> I only used it to install one OS. It would be sad if it were already broken
[00:10:47] <smallville7123> if my window is 400 by 400, and im drawing to 200 by 200, and my clip is 100 by 100, then my transformed clip is 100 by 100 right?
[00:11:43] <eyynet4> is 0 a valid coordinate?
[00:12:32] <smallville7123> if so, if i change my clip to 110 by 110, the my transformed clip should be 110 by 110 right?
[00:12:40] <smallville7123> as for me it is 220 by 220
[00:12:47] <CuriousErnestBro> how do I run make my computer run a command just before I push and it gets included in that commit?
[00:13:21] <eyynet4> usually the return key
[00:14:13] <oft_gegong> I know the future you guys. I KNOW THE FUTURE. *smokes some crack*. The future is with linux. *smokes more crack*. The future is the way. *faints*
[00:14:37] *** Joins: Pickchea (~private@user/pickchea)
[00:15:03] <eyynet4> the future is kerneless
[00:15:23] <CuriousErnestBro> bruh.gif
[00:15:50] <oft_gegong> CuriousErnestBro: run the command before the commit command? dunno.
[00:16:07] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[00:16:07] <CuriousErnestBro> yes but that requires remembering the command and remembering to run it
[00:16:17] <oft_gegong> well then REMEMBER
[00:16:21] <CuriousErnestBro> no
[00:16:37] <CuriousErnestBro> there must be a better way
[00:16:42] <pulse> oft_gegong, you're not very coherent. drink some chamomile tea, meditate in a lotus posture, etc. and then come back
[00:18:03] <eyynet4> this whole channel is incoherent
[00:18:20] <CuriousErnestBro> apparently I need something called "git hooks"?
[00:20:44] <oft_gegong> pulse: I know the solution to everyone's programming problems: echo $solution_here;
[00:20:55] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[00:20:55] *** __jmcantrell__ is now known as jmcantrell
[00:22:45] <oft_gegong> I KNOW the TRUTH behind everything! I've seen it! I've witnessed it. OH boy. OOHHH boy yeeeeeeeaaaah
[00:23:43] <oft_gegong> CuriousErnestBro: assuming it's git hooks, then you use git hooks.
[00:24:03] *** Joins: Thedarkb2 (~Thedarkb@85.255.234.237)
[00:25:14] <mrig> oft_gegong: happens to about 1 in 100 people, you'll get over it :D
[00:25:49] <oft_gegong> mrig: xD
[00:26:07] <smallville7123> pikapika: ?
[00:26:23] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[00:26:31] <mrig> CuriousErnestBro: git hooks are appropriately named script files placed in the hooks folder of a bare git repo.
[00:26:59] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:27:15] <CuriousErnestBro> I made this https://paste.ubuntu.com/p/RBhFtGczRY/
[00:27:17] <bayaz> Title: Ubuntu Pastebin 
[00:27:23] <Kays> https://gamewith.jp/shironeko/article/show/22853
[00:27:25] <bayaz> Title: „ÄêÁôΩÁå´„Äë„É©„É≥„ÇØ‰∏ä„Åí„Å´ÂäπÁéá„ÅÆËâØ„ÅÑ„Éë„Éº„ÉÜ„Ç£Á∑®Êàê„Å®ÂçîÂäõ„Éê„Éà„É´/„ÇØ„Ç®„Çπ„Éà - „Ç≤„Éº„É†„Ç¶„Ç£„Ç∫(GameWith) 
[00:27:28] <CuriousErnestBro> in pre-push 
[00:27:31] <mrig> I think you can specify whichever scripting language you want so long as it is on you system, and that system can read the #!/bin/script tag
[00:27:44] <Kays> oops, clicked worng chann
[00:27:46] <Kays> so sorry
[00:28:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:28:11] <mrig> Not sure what that line is called in a UNIX file, should really try and find out :|
[00:28:23] *** Quits: todda7 (~torstein@240.red-81-39-39.dynamicip.rima-tde.net) (Ping timeout: 258 seconds)
[00:29:27] <oft_gegong> solve the riddle today, know the future tomorrow, become one with the past.
[00:30:07] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[00:31:16] <smallville7123> https://gist.github.com/mgood7123/4e5db735f8cd27861594884d2c0fcb67
[00:31:20] <CuriousErnestBro> mrig shebang
[00:31:27] <CuriousErnestBro> I remembered it because it's dirty
[00:31:28] <CuriousErnestBro> :^)
[00:31:53] <mrig> CuriousErnestBro: That is the !, is that also the name of the script definition line?
[00:32:07] <CuriousErnestBro> isn't ! called just a bang?
[00:32:15] *** Joins: anton (anton@tloks.com)
[00:32:20] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 272 seconds)
[00:32:26] <oft_gegong> I'm gonna die everyone..don't worry about me..save yourselves..*hands you a linux liveCD DVD*...save yourselves and become one with the universe.. *fake dies*
[00:32:43] <mrig> Oh is is too, I always thought that a ! was a shebang as well.
[00:33:04] <CuriousErnestBro> mrig apparently #! is shebang, the line is called an "interpreter directive" 
[00:33:19] <CuriousErnestBro> hashbang -> shebang probably
[00:33:40] <mrig> oft_gegong: you always were one with the universe, what is all this becoming about??? Sounds to me that you could be on an ego trip :P
[00:33:40] <oft_gegong> yeah #! is a shebang
[00:33:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[00:34:38] <CuriousErnestBro> oft_gegong my laptop doesn't ahve a cd 
[00:34:40] <CuriousErnestBro> reader
[00:34:49] <CuriousErnestBro> it only has usb c
[00:35:06] <eyynet4> sucks to be your laptop
[00:35:24] <oft_gegong> usb c? you mean usb 2.0?
[00:36:17] <eyynet4> who knows, all we know it is totally universal tho
[00:36:19] <CuriousErnestBro> aren't we on 3.1 now
[00:37:00] <oft_gegong> I don't even care anymore. All I want to do is get banned from the Internet so I can live a stupid lifestyle.
[00:37:05] *** Quits: anton (anton@tloks.com) (Client Quit)
[00:37:14] <CuriousErnestBro> oke
[00:37:26] *** Joins: anton (anton@tloks.com)
[00:37:27] <eyynet4> you can't get banned, how will your ISP make money off of you then?
[00:38:13] <oft_gegong> eyynet4: omg. you're right. *teleports to ISP CEO*. me: "so it was you." him: "who did you think it was?! I OWN yOU!" me: "nNnNnoooOOO!"
[00:38:22] <mrig> oft_gegong: all you need to do is to edit your hosts file.
[00:38:34] <oft_gegong> mrig: exactly!
[00:38:58] <oft_gegong> mrig: ....to what exactly?
[00:39:30] <eyynet4> /etc/nsswitch.conf
[00:41:17] <mrig> there must be a way to use a wildcard to send all requests to 0.0.0.0 
[00:41:23] <CuriousErnestBro> okay now the real questions start
[00:41:28] <eyynet4> nope :*(
[00:41:46] <eyynet4> not in glibc n.e.way
[00:41:57] *** Joins: DarkCthulhu (~DarkCthul@50-202-37-133-static.hfc.comcastbusiness.net)
[00:42:48] <CuriousErnestBro> I'm making a "done list" api, I need a "users" and "tasks" table right? I also want each user to have categories to which they can assign tasks, do I create a separate table for that?
[00:43:20] <oft_gegong> CuriousErnestBro: I'm 3%sure yes.
[00:45:05] *** Quits: Haxxa (~Haxxa@122.199.45.186) (Quit: Haxxa flies away.)
[00:45:22] <CuriousErnestBro> only 3%?
[00:45:26] *** Quits: qbt (~edun@user/edun) (Quit: Leaving)
[00:45:33] <CuriousErnestBro> anyone got a resource on how2create schema
[00:45:34] <oft_gegong> yeah it's basically a sly answer
[00:46:08] *** Joins: Haxxa (~Haxxa@122.199.45.186)
[00:46:20] <oldlaptop> CuriousErnestBro: You may want to read the SQL tutorial in the Postgres manual.
[00:47:01] <DarkCthulhu> Hi all
[00:47:14] <oldlaptop> (although perhaps it's not what you want, if you're interested in the higher-level principles of database design.)
[00:47:19] <oft_gegong> DarkCthulhu: hi. how are you?
[00:47:26] *** Quits: user51 (~user51@176.228.90.248) (Remote host closed the connection)
[00:47:41] <DarkCthulhu> Doing well oft_gegong, on libera for the first time and liking it so far  
[00:47:42] <CuriousErnestBro> oldlaptop yes that's what I'm interested in 
[00:47:54] <oft_gegong> DarkCthulhu: oh! good for you!
[00:47:58] <CuriousErnestBro> how can you "like" libera it's the same as freenode
[00:48:04] <CuriousErnestBro> everyone moved over
[00:48:22] *** Quits: magla (~gelignite@55d4b6ce.access.ecotel.net) (Quit: Stay safe!)
[00:48:39] <DarkCthulhu> CuriousErnestBro, I hadn't logged in there for a month and my nick just.. disappeared. So, that's been a factor. I do like the webchat here so far. Feels slick
[00:48:42] <eyynet4> yeah even the newb mods are here from freenode that never were around before
[00:48:45] *** Quits: Guest45 (~Guest45@2a01:586:9649:1:e56d:990c:8bb0:2f08) (Quit: Client closed)
[00:49:12] <DarkCthulhu> It's funny how my nick was deleted. I missed all the drama till I read about it on ars :)
[00:49:18] <eyynet4> 8chan dweebs
[00:50:28] <oft_gegong> I like change.
[00:50:34] * eyynet4 pops an iodine tablet
[00:50:58] *** Quits: anton (anton@tloks.com) (Remote host closed the connection)
[00:51:06] <DarkCthulhu> I liked my cloak
[00:51:10] *** Joins: tw3ml0w (~tw3ml0w@185.187.243.61)
[00:51:28] <oft_gegong> DarkCthulhu: uh oh we can see your IP xD
[00:51:36] <DarkCthulhu> Oh nooooo
[00:51:39] <oft_gegong> :(
[00:51:39] <CuriousErnestBro> I only know a table has a primary key, and can be "indexed" which just means its faster
[00:52:16] <oldlaptop> You'll probably benefit a great deal from reading the postgres tutorial anyhow, then.
[00:52:35] <oldlaptop> at least enough that you can start learning from your own design mistakes
[00:52:36] <CuriousErnestBro> oldlaptop don't you have anything on design?
[00:52:51] <oldlaptop> I don't happen to have a link off the top of my head, no.
[00:53:05] <CuriousErnestBro> i like higher level principles
[00:53:06] <CuriousErnestBro> oke
[00:53:07] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:509:fa16:ae70:8633) (Quit: Quit)
[00:53:10] *** Joins: todda7 (~torstein@74.red-83-35-41.dynamicip.rima-tde.net)
[00:53:30] <DarkCthulhu> There's probably some nice online thing on coursera / edx that you can skip through CuriousErnestBro
[00:53:50] *** Quits: oft_gegong (~mint@70.90.132.249) (Quit: Leaving)
[00:53:52] <oldlaptop> It's not at all a simple topic, and it's also not something that you'll be able to really understand without a grasp of the basics that (going by what you've said) you don't have yet.
[00:54:12] <CuriousErnestBro> I like a challenge 
[00:54:21] <mrig> CuriousErnestBro: you could have a search for 'database schema' see what that throws up.
[00:54:55] <mrig> cool subject.
[00:54:57] <DarkCthulhu> CuriousErnestBro: this looks promising to me, https://www.coursera.org/learn/database-design-postgresql
[00:56:39] <CuriousErnestBro> DarkCthulhu thanks, week 3 and 4 look relevant 
[00:56:47] <oldlaptop> CuriousErnestBro: trying to learn relational database design when you don't really understand relational databases is a "challenge" the same way trigonometry would be a "challenge" if you don't really understand basic arithmetic
[00:57:03] <CuriousErnestBro> yeah but I know how they work kind of 
[00:57:22] <CuriousErnestBro> I wrote a bunch of advanced t-sql queries (with pivot :D)
[00:57:29] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[00:57:33] <CuriousErnestBro> never created a database myself tho
[00:57:55] <DarkCthulhu> I think learning through practice while mucking around with actual psql is pretty much the best way IMO. Learn things the hard way, then use pgadmin and drop tables accidentally :)
[00:57:58] <CuriousErnestBro> I've learned CI in 2 days without knowing what docker is
[00:58:01] <CuriousErnestBro> (I still dont)
[00:58:28] <CuriousErnestBro> hey, at least this afternoon people in here convinced me to not develop on the production server
[00:58:30] *** Quits: nekodesu (~nano@user/nekobit) (Quit: free(neko);)
[00:59:01] <DarkCthulhu> Why not? All good things happen when you do that :P
[00:59:10] <eyynet4> what are you chicken?
[00:59:20] <CuriousErnestBro> actually I wanted to give postgres network access so I could access it from here
[00:59:34] <oldlaptop> DarkCthulhu: That would be an excellent way to use the postgres tutorial, yes.
[00:59:56] <CuriousErnestBro> because devops people said to "decouple deployment from db" which I understood as: develop on prod
[01:01:43] <eyynet4> they are paying you in real currency?
[01:01:49] <CuriousErnestBro> im unemployed
[01:02:00] <DarkCthulhu> oldlaptop, I like the postgres docs for when I'm looking up syntax for something I know exists. When it comes around to teaching someone basics, I think it is a bit overwhelming in that it tries to be exhaustive rather than layering concepts from most used to things you should know exist but not really learn.
[01:02:10] <CuriousErnestBro> and by unemployed I mean I'm a student who does this as a hobby
[01:02:30] <CuriousErnestBro> eyynet4 I also accept payment in services :^)
[01:02:34] <eyynet4> so by production you mean, there isn't really a product
[01:02:39] <eyynet4> gotcha
[01:02:51] <DarkCthulhu> cs-lab-production-server-00? ;)
[01:02:56] <oldlaptop> CuriousErnestBro: https://www.postgresql.org/docs/13/index.html Section I is not very long, and will nicely fill any basic gaps you may have left. Most of section II is also nice, readable prose that (in precisely the way DarkCthulhu is claiming it doesn't) builds upon itself in a sensible manner.
[01:02:58] <bayaz> Title: PostgreSQL 13.3 Documentation 
[01:03:04] <CuriousErnestBro> eyynet4 by production I mean my vps server thing that will run the code. The frontend is ready :D
[01:03:08] <CuriousErnestBro> eyynet4 the thing I deploy to
[01:03:50] <CuriousErnestBro> thanks oldlaptop 
[01:04:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:04:37] <eyynet4> what do they say you should do, buy a new server to develop on?
[01:04:49] <DarkCthulhu> oldlaptop, you're right. Section I there is pretty nicely layered. I was referring more to the general documentation around specific query types, etc. 
[01:04:53] <oldlaptop> The theory of relational database design is mostly out of scope, though. That is a complex field all by itself, and one that's a fair bit easier to grasp with a firm understanding of how the underlying system works.
[01:04:58] *** bayaz sets mode: -q *!*@adsl-72-50-4-118.prtc.net
[01:05:02] <oldlaptop> The reference material is reference material, yes.
[01:05:10] <CuriousErnestBro> eyynet4 here's my front end https://i.imgur.com/08Rljyl.mp4
[01:05:11] <bayaz> Type: video/mp4 Size: 1.4 MB 
[01:05:13] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[01:05:35] <eyynet4> what brand server are they telling you to purchase?
[01:05:40] <CuriousErnestBro> I'm using a free tier
[01:05:50] <CuriousErnestBro> I did pay for the domain name tho
[01:05:56] <CuriousErnestBro> and 50cents/month for. DNS
[01:06:29] <oldlaptop> (Incidentally, I would question whether postgres itself is appropriate for your task at all, as opposed to something like sqlite. sqlite is *definitely* a lot more convenient to experiment with, although it's peculiar in some ways (particularly with respect to the type system) that complicates using it as a learning tool)
[01:06:32] *** Quits: Camilo (~hugh@host-92-20-143-244.as13285.net) (Ping timeout: 272 seconds)
[01:07:17] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[01:07:46] *** Joins: Camilo (~hugh@185.169.255.208)
[01:07:48] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 272 seconds)
[01:08:18] <CuriousErnestBro> I am using json file as a database in this other project of mine
[01:08:31] <CuriousErnestBro> through a library called lowdb (for node js)
[01:08:37] <CuriousErnestBro> this one I'm doing in rust
[01:08:39] <DarkCthulhu> CuriousErnestBro, did you consider using something like firebase to start out? Or is this more of a learning assignment that's intentionally supposed to include components like a standalone relational database?
[01:08:41] <CuriousErnestBro> because I like torture
[01:09:06] <CuriousErnestBro> DarkCthulhu the latter, otherwise I'd not be using CI in a 1-man-project
[01:09:18] <DarkCthulhu> Ah, makes sense. Have fun!
[01:09:29] <CuriousErnestBro> a strange sense of fun 
[01:10:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[01:11:23] <CuriousErnestBro> DarkCthulhu did you see the front end?
[01:12:06] <CuriousErnestBro> oke enough programming for one day
[01:12:14] <DarkCthulhu> yeah, I did. I thought was interesting - I used to use a "log events as they occur" app on my phone so I'd know where my time went. I recently switched to a more fuzzy mode of accounting that just measures binary outcomes over a 3 hour time period.
[01:12:34] <DarkCthulhu> Is that a PWA?
[01:12:37] <CuriousErnestBro> no
[01:12:39] <CuriousErnestBro> SwiftUI
[01:12:40] <CuriousErnestBro> :D
[01:13:00] <oldlaptop> sqlite also has excellent documentation, incidentally, though not any nice tutorial stuff such as postgres'. For example, the document on how the optimizer works (https://www.sqlite.org/optoverview.html) is fairly good as an introduction to how relational databases interpret and optimize queries in general, including how indices relate to that.
[01:13:05] <CuriousErnestBro> with a bunch of hacks, because SwiftUI isn't mature yet
[01:13:48] *** Quits: CoJaBo_ (~aztec@c-73-64-56-249.hsd1.pa.comcast.net) (Changing host)
[01:13:48] *** Joins: CoJaBo_ (~aztec@user/CoJaBo)
[01:14:10] <oldlaptop> some of sqlite's documents of that nature are easier to understand simply because sqlite is not as *big*, and therefore there are fewer ancillary details to get in the way
[01:14:16] <oldlaptop> for example there's only one kind of index in sqlite
[01:16:07] <CuriousErnestBro> interesting
[01:16:11] <CuriousErnestBro> I'll have a look at it someday
[01:16:26] *** Quits: DarkCthulhu (~DarkCthul@50-202-37-133-static.hfc.comcastbusiness.net) (Quit: Client closed)
[01:16:44] <CuriousErnestBro> DarkCthulhu I found that the most useful thing about progress tracking is that it builds momentum 
[01:16:48] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[01:17:14] *** Joins: DarkCthulhu (~DarkCthul@50-202-37-133-static.hfc.comcastbusiness.net)
[01:18:52] *** Quits: DarkCthulhu (~DarkCthul@50-202-37-133-static.hfc.comcastbusiness.net) (Client Quit)
[01:19:14] *** Joins: DarkCthulhu (~foxish@50-202-37-133-static.hfc.comcastbusiness.net)
[01:21:08] *** Quits: DarkCthulhu (~foxish@50-202-37-133-static.hfc.comcastbusiness.net) (Client Quit)
[01:23:36] *** Joins: jamea (~jamea@200.68.140.3)
[01:23:58] *** Quits: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com) (Ping timeout: 258 seconds)
[01:25:41] *** Joins: dermato (~dermatobr@154.21.23.75)
[01:26:24] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[01:28:45] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[01:30:41] *** Joins: jmft2 (~JMFT@81.149.115.87.dyn.plus.net)
[01:30:55] *** Quits: bcd (~bcd@83-84-164-51.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[01:32:23] *** Quits: izak (~user@196.189.63.196) (Remote host closed the connection)
[01:34:24] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:34:42] *** Joins: cog (~Atlas@S0106f0f24965de23.ok.shawcable.net)
[01:34:44] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz‚Ä¶)
[01:35:04] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[01:36:10] <smallville7123> if my window is 400 by 400, and im drawing to 200 by 200, and my clip is 100 by 100, then my transformed clip is 100 by 100 right? if so, if i change my clip to 110 by 110, then my transformed clip should be 110 by 110 right? as for me it is 220 by 220 https://gist.github.com/mgood7123/4e5db735f8cd27861594884d2c0fcb67
[01:38:25] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[01:39:06] <eyynet4> 200,200 is the two hundredth pixel, or two hundred and first?
[01:39:48] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Read error: Connection reset by peer)
[01:40:37] *** Joins: mrig (~mrig@user/mrig)
[01:40:44] *** Quits: Camilo (~hugh@185.169.255.208) (Ping timeout: 272 seconds)
[01:42:05] *** Joins: Camilo (~hugh@host-92-20-143-244.as13285.net)
[01:43:45] <d3x0r> 0-200 is 201
[01:44:12] <d3x0r> ususuall you draw from 0 to 200... which is non-inclusive so just 199
[01:45:22] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:47:49] <smallville7123> are NDC coordinates just percentages ?
[01:48:14] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:48:40] <smallville7123> eg 0.0000...% to 1.0000...%
[01:48:40] <eyynet4> no doesn't the middle start at 0?
[01:48:54] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21) (Ping timeout: 272 seconds)
[01:48:55] *** Joins: pulse (~pulse@user/pulse)
[01:48:56] <smallville7123> i forgot
[01:52:55] *** Quits: tw3ml0w (~tw3ml0w@185.187.243.61) (Quit: Leaving)
[01:53:40] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[01:53:42] *** Quits: nomind1969 (~nomind196@83-82-126-48.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[01:53:47] <smallville7123> d3x0r: yea
[01:53:51] <eyynet4> i forget too now, if they go from -1 -> +1 then thats 2 units
[01:54:29] <eyynet4> -0.5 -> 0.5 maybe we can argue they're just percentages
[01:55:27] <eyynet4> although this completely disregards aspect ratio
[01:57:21] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:01:33] <smallville7123> anyway why is the clip transformation wrong?
[02:01:48] <eyynet4> i don't know what it means
[02:02:10] <eyynet4> all my clips happen in global space
[02:02:14] <eyynet4> so its like a foreign language to me
[02:02:46] *** Quits: todda7 (~torstein@74.red-83-35-41.dynamicip.rima-tde.net) (Ping timeout: 268 seconds)
[02:02:55] <smallville7123> define global space
[02:03:02] <eyynet4> a global coordinate system
[02:03:09] <eyynet4> non-imaginary
[02:03:19] <eyynet4> finite
[02:03:34] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:03:46] <smallville7123> give me an example
[02:03:57] <eyynet4> a two-dimensional point
[02:04:20] <eyynet4> it sounds like you're trying to transform into some other coordinate system
[02:04:29] *** Joins: chomwitt (~chomwitt@2a02:587:dc02:6400:12c3:7bff:fe6d:d374)
[02:05:13] <eyynet4> clip is just a boundary 
[02:05:35] *** Quits: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu) (Remote host closed the connection)
[02:06:13] <smallville7123> ok
[02:07:26] <eyynet4> so all these words you are saying i just don't know what you are asking
[02:07:37] <smallville7123> im basically working on a view system and im trying to clip my view to its region drawn in order to implement cropping
[02:09:29] <eyynet4> just clipping 2d rectangle?
[02:09:36] <smallville7123> yup
[02:10:15] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Remote host closed the connection)
[02:10:21] *** Joins: Arithmoquine (~ct@194.37.96.126)
[02:10:34] <smallville7123> eg, 400 > 200 > 100
[02:10:56] <eyynet4> draw it out on paper if it doesn' make sense
[02:11:07] <smallville7123> eg, window 400 > canvas 200 > clip 100
[02:11:10] <eyynet4> and osolve some of them by hand
[02:11:20] <eyynet4> then write out steps for algorithm
[02:13:17] <smallville7123> im currently clipping based on the assumption that i should just use percentages
[02:13:24] *** Quits: Guest9356 (~sidy@2600:1014:b1b5:a96:889a:6c1c:acd5:daef) (Ping timeout: 276 seconds)
[02:14:34] *** Joins: theCypherpunk (~ct@141.98.100.158)
[02:14:37] *** Joins: nekodesu (~nano@user/nekobit)
[02:14:39] <smallville7123> window and canvas is around wrong way
[02:14:47] <smallville7123> eg, window 200 > canvas 400 > clip 100
[02:15:05] *** Quits: Camilo (~hugh@host-92-20-143-244.as13285.net) (Ping timeout: 248 seconds)
[02:16:04] <smallville7123> for example, my input is 100, range is 0 to 200, and my virtual output is 0 to 400, and my window is 0 to 200 (which 200 virtual is 100 window) -> ([virtual 400 > window 200] half > [window 200 > input 100] half > 50)
[02:16:36] <eyynet4> whats virtual
[02:17:17] *** Quits: theCypherpunk (~ct@141.98.100.158) (Read error: Connection reset by peer)
[02:17:33] <smallville7123> which currently gives me 50, as needed
[02:17:44] <smallville7123> eyynet4: virtual is NDC based canvas
[02:17:45] *** Quits: Arithmoquine (~ct@194.37.96.126) (Ping timeout: 248 seconds)
[02:18:01] <eyynet4> you're not talking about normalized device coordinates?
[02:18:07] <smallville7123> eg drawing directly as vertex data
[02:18:44] <eyynet4> NDC is the transform on GPU
[02:18:57] <smallville7123> yes
[02:19:07] <eyynet4> so not 0 to 400
[02:19:21] <smallville7123> i convert the pixel coords to NDC
[02:19:31] <smallville7123> based on a max width/height and an input
[02:19:35] <eyynet4> what does virtual have to do with this
[02:19:44] <eyynet4> what is virtual
[02:20:29] <smallville7123> it basically allows me to have a resolution independent coordinate system similar to device independent pixels
[02:21:34] <smallville7123> however it is not aspect ratio independant, eg the image will stretch to fit
[02:22:10] <smallville7123> but that can probably be fixed easily
[02:22:30] <smallville7123> but, basically
[02:22:35] <eyynet4> its a scalar
[02:22:54] <eyynet4> you multiply to get the real axis 
[02:22:55] <eyynet4> ?
[02:23:07] <eyynet4> yeah i don't f around with that kind of stuff
[02:23:21] <smallville7123> if you define a virtual of 400 by 400, than 200 will be NDC 0, 0 will be -1 or 1 depending on axis
[02:23:35] <smallville7123> and 400 will be 1 or -1 depending on axis
[02:24:03] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[02:24:14] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[02:24:25] <smallville7123> i think its -1, 1 for 0,0 and 1, -1 for width,height ?
[02:24:52] <smallville7123> cant remember right now
[02:25:00] <smallville7123> what it is exactly
[02:25:01] <eyynet4> are you writing shaders for all of this? lol
[02:25:29] <smallville7123> i already did
[02:25:33] <eyynet4> its so much work for  almost no gain
[02:25:44] <eyynet4> unless its a graphical intensive program
[02:25:57] <smallville7123> how so?
[02:26:13] <eyynet4> whats the benefit?
[02:26:26] <smallville7123> ?
[02:26:37] <eyynet4> over working in screen space
[02:26:41] <eyynet4> using NDC
[02:26:48] <eyynet4> and a whole graphic pipeline
[02:27:17] <eyynet4> redrawing sixty times a second
[02:27:22] <eyynet4> in perpetuity
[02:28:03] <smallville7123> well, 1. an object does not need to rely on whatever its parent width/height is when drawing its stuff, since it can just define its own virtual canvas of whatever size and draw whatever to it
[02:28:11] *** Quits: jamea (~jamea@200.68.140.3) ()
[02:28:29] *** Joins: jamea (~jamea@200.68.140.3)
[02:28:32] <smallville7123> and 2. this is for a View system i am making
[02:28:51] <eyynet4> you can define virtual canvas without pipeline too
[02:29:00] <smallville7123> specifically a 2D/3D rendering kit
[02:29:41] <smallville7123> or rather, a UI toolkit so to speak
[02:30:05] <eyynet4> so this will be supported on GPU systems only?
[02:30:18] <smallville7123> yes
[02:30:18] <eyynet4> or you are going to do all this NDC transofrmation in software?
[02:30:38] <smallville7123> i do pixel to NDC vis cpu
[02:30:42] <smallville7123> via*
[02:31:04] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[02:31:23] <eyynet4> what shader compiler are you saddling all of your users with
[02:31:59] <smallville7123> https://imgur.com/a/UdBURQM
[02:32:01] <bayaz> Title: imgur.com 
[02:32:06] <smallville7123> this is what i currently use
[02:32:12] <smallville7123> this is what i currently have *
[02:33:03] *** Joins: SGautam (uid286066@id-286066.charlton.irccloud.com)
[02:33:12] <smallville7123> HLSL for the main shader however users can use whatever they prefer instead
[02:33:21] <eyynet4> ewwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww
[02:33:35] <SGautam> Can someone suggest me a good game engine for creating a retro styled FPS game?
[02:33:50] <SGautam> I'm not looking into raycasting. I want it to be completely 3D.
[02:33:51] <smallville7123> eg they can use OpenGL and GLSL directly
[02:33:57] <smallville7123> if they want
[02:34:15] <SGautam> But I'd want to use sprites instead of 3D models. 
[02:34:43] <smallville7123> tho HSLS is convertable to Vulkan shaders
[02:34:51] <smallville7123> as well as GLSL shaders
[02:35:06] <SGautam> I can't seem to make my mind up, Unity seems like an overkill for this task. So I thought I'd write a simple 3D renderer using OpenGL that would render primitives like walls, floors, ceilings, etc. but that seems like an awful waste of time considering how verbose OpenGL is.
[02:35:44] <smallville7123> SGautam: maybe GoDot ?
[02:35:59] <eyynet4> isn't quake GPL'd
[02:36:35] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[02:36:39] <SGautam> smallville7123: hm.. I'm going to try that out.
[02:36:57] <smallville7123> eyynet4: anyway, the main focus is cross platform
[02:37:07] <eyynet4> no its not
[02:37:20] <eyynet4> if your main focus was cross platform you'd just use traditional rendering techniques
[02:37:31] <smallville7123> such as?
[02:37:34] <SGautam> eyynet4: the exact look I'm going for is for Duke Nukem 3D, and DN3D is open source as well as EDuke32, but sadly the documentation for Duke is sparse.
[02:37:39] <eyynet4> seriously? such as?
[02:37:44] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 272 seconds)
[02:37:44] <smallville7123> yup lol
[02:37:53] <eyynet4> use your imagination i guess IDK what to tell ya
[02:38:02] <smallville7123> hah
[02:38:12] <smallville7123> haha *
[02:38:13] *** Joins: pavonia (~user@user/siracusa)
[02:39:17] <eyynet4> i thought duke3d was raycast
[02:39:22] <smallville7123> anyway
[02:40:14] <smallville7123> im basically doing range mapping
[02:40:51] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:42:31] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[02:45:09] *** Joins: mci64 (~Guest68@185.242.190.95)
[02:45:52] <smallville7123> this is how i currently calculate the clip region
[02:46:18] <smallville7123> based on an input rectangle, and a max size
[02:47:34] <smallville7123> i first scale the input rectangle based on the max size, into the screen's frame buffer size such that input 0 is screen 0, input max size is screen max size
[02:48:18] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[02:49:50] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:52:34] *** Joins: blahboybaz (~blahboyba@c-73-221-100-152.hsd1.wa.comcast.net)
[02:53:45] <smallville7123> i then scale the scaled w and h based on the input h and w percentage, to map it to the max input size or something
[02:53:49] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[02:55:00] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 276 seconds)
[02:55:06] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:55:23] *** Quits: mci64 (~Guest68@185.242.190.95) (Quit: Client closed)
[02:55:47] <smallville7123> basically w 200 > input 100 > scale 100 > percentage 0.5 > input scale 50 > result 50
[02:56:08] *** Joins: mci64 (~mci64@185.242.190.95)
[02:56:28] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[02:56:31] <smallville7123> i then scale the scaled w and h based on the input h and w percentage, to map it to the actual position on screen relative to the input size    *
[02:57:06] *** Quits: sunny933 (~sunny93@wireguard/tunneler/sunny93) (Quit: Ping timeout (120 seconds))
[02:57:18] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[02:57:20] <smallville7123> eyynet4: 
[02:57:25] <eyynet4> ??????????????
[02:57:57] <eyynet4> also who TF picks HS HLSL for their "cross platform" shading lang
[02:58:55] <eyynet4> are you a method actor researching a role?
[02:59:37] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[03:00:19] *** Joins: scabby (~scabby@user/scabootssca)
[03:02:51] <eyynet4> maybe clippy's marketting propaganda s really that strong
[03:03:27] <eyynet4> if not, this better be a damn good movie
[03:04:03] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[03:04:08] <smallville7123> if i have an image to draw inside of a window 400 by 400, at screen location 200, 200 inside the window, but it's image width is 100 relative to the screen location, then the image width to be transformed to be clipped at screen location 100
[03:04:25] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Ping timeout: 268 seconds)
[03:05:06] *** Quits: Akuli (~Akuli@82-203-160-28.bb.dnainternet.fi) (Quit: Leaving)
[03:05:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:07:04] <smallville7123> similarly, if i have an image to draw inside of a window 700 by 700, at virtual screen location 200, 200 inside the window, but it's image width is 100 relative to the screen location, then the image width to be transformed to be clipped at screen location 370 / 2
[03:07:12] <smallville7123> 350 / 2      *
[03:07:52] <smallville7123> in order to remain in the upper right quarter of the screen
[03:08:12] <smallville7123> with correct perportion
[03:08:51] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[03:10:35] *** Joins: LadyCailin (LadyCailin@user/ladycailin)
[03:12:03] <smallville7123> for example
[03:12:03] <smallville7123> if i have an image to draw inside of a window 400 by 400, at virtual screen location 200, 200 inside the window, but it's image is 100 by 100 relative to the screen location, then the image will to be transformed to be clipped at screen location 100 by 100
[03:12:03] <smallville7123> similarly, if i have an image to draw inside of a window 800 by 800, at virtual screen location 200, 200 inside the window, then the image will need to be transformed to be clipped at screen location 200
[03:12:39] *** Quits: mci64 (~mci64@185.242.190.95) (Quit: Client closed)
[03:12:52] *** Joins: mci64 (~mci64@185.242.190.95)
[03:13:01] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[03:19:34] *** CoJaBo_ is now known as CoJaBo
[03:20:01] <smallville7123> do note that my intention is to crop the image, not stretch it
[03:20:06] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:54d9:a686:a64c:8cd9) (Remote host closed the connection)
[03:20:14] <Arahael> smallville7123: ... very good?
[03:20:36] <smallville7123> ?
[03:21:09] <smallville7123> how do i do that?
[03:21:33] <Arahael> ah! you were asking questions!
[03:22:11] <smallville7123> :)
[03:22:49] *** Quits: Burgundy (~yomon@5-12-93-72.residential.rdsnet.ro) (Ping timeout: 248 seconds)
[03:22:50] *** Quits: mci64 (~mci64@185.242.190.95) (Quit: Client closed)
[03:23:52] <Arahael> smallville7123: its actually difficult to see the question you are making, you do seem to be making statements.  there isnt quite enough information to confirm those statements... have you considered just testing them out?
[03:25:21] *** Quits: edk (edk@libera/staff/edk) (Read error: Connection reset by peer)
[03:25:42] <smallville7123> yes
[03:27:39] *** Joins: mci64 (~mci64@185.242.190.95)
[03:27:46] <Arahael> smallville7123: One way or another, you'll be wanting to transform those coordinates into the correct coordinate space.  But again, it will vary depending on platform and framework.
[03:30:02] *** Quits: ghost64 (~ghost64@user/ghost64) (Quit: See you!)
[03:35:42] *** Joins: edk (edk@libera/staff/edk)
[03:36:37] *** Joins: scabby_ (~scabby@user/scabootssca)
[03:37:57] <cis> cat /dev/full > /dev/null
[03:38:33] *** Quits: jmft2 (~JMFT@81.149.115.87.dyn.plus.net) (Ping timeout: 268 seconds)
[03:39:13] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[03:39:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[03:41:04] *** Quits: Tazmainian (~Tazmainia@41.193.169.28) (Ping timeout: 272 seconds)
[03:42:04] <cis> geez how long is this gonna take...
[03:43:05] *** Quits: mci64 (~mci64@185.242.190.95) (Ping timeout: 248 seconds)
[03:43:17] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 268 seconds)
[03:46:29] *** Quits: moha (uid506645@id-506645.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[03:48:27] *** Joins: soapsudsxx (~soapsudsx@209.221.40.143)
[03:49:27] <smallville7123> yea
[03:50:20] *** Joins: tw3ml0w (~tw3ml0w@45.144.113.177)
[03:51:37] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Remote host closed the connection)
[03:51:54] *** Quits: u4ia (~u4ia@86-80-55-199.fixed.kpn.net) (Ping timeout: 255 seconds)
[03:52:36] *** Parts: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Closing Window)
[03:53:02] *** Joins: Tazmainian (~Tazmainia@41.193.169.28)
[03:53:10] *** Quits: Tazmainian (~Tazmainia@41.193.169.28) (Read error: Connection reset by peer)
[03:54:08] *** Joins: u4ia (~u4ia@88-159-0-88.fixed.kpn.net)
[03:58:04] *** Joins: dre (~dre@2001:8003:c932:c301:8028:ecc5:f3df:cd14)
[04:00:48] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[04:01:05] *** Joins: eyynet4 (~0x100@32.211.211.39)
[04:04:33] *** Joins: zaher_ (~zaher@37.48.159.201)
[04:06:09] *** Joins: federico_it (~textual@151.95.116.125)
[04:06:49] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[04:07:20] *** Quits: zaher (~zaher@37.48.178.78) (Ping timeout: 268 seconds)
[04:08:21] *** Joins: zaher (~zaher@37.48.155.57)
[04:09:45] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 248 seconds)
[04:10:16] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:10:17] *** Quits: zaher_ (~zaher@37.48.159.201) (Ping timeout: 248 seconds)
[04:14:33] *** Quits: zaher (~zaher@37.48.155.57) (Ping timeout: 248 seconds)
[04:15:21] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:15:29] *** Quits: cog (~Atlas@S0106f0f24965de23.ok.shawcable.net) (Read error: Connection reset by peer)
[04:20:10] *** Quits: federico_it (~textual@151.95.116.125) (Quit: Textual IRC Client: www.textualapp.com)
[04:20:25] *** Quits: Iryon (~Iryon@2a02:a31a:a045:3500:5d6:f433:a2f8:8596) (Remote host closed the connection)
[04:30:15] *** Quits: TwiZted (~TwiZted@user/twizted) (Remote host closed the connection)
[04:33:34] *** Quits: gitgoood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 272 seconds)
[04:33:43] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[04:35:29] <Izem> Say I want to make a chess board in a gui, does it make sense to use graphics library or can it just be done with a format like png?
[04:38:35] <pulse> define it
[04:38:59] <pulse> what platform did you have in mind?
[04:39:35] <Izem> windows
[04:39:37] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 248 seconds)
[04:40:03] <pulse> well there's at least a billion approaches to making a chess UI on windows :p
[04:40:04] <Izem> pretty much I'm just wondering if one would resort to graphics for this sort of thing
[04:40:35] <pulse> you can easily do it with winforms and C# alone
[04:40:44] <pulse> but there's many more possibilities
[04:41:23] <pulse> you probably want some kind of a UI library
[04:41:53] <eyynet4> win32 is the one true windows GUI
[04:41:53] <Izem> sure, but I don't recall ui libraries having stuff for chess boards in them
[04:42:05] <eyynet4> but maybe c sharp has a PNG loader
[04:42:06] <pulse> a chess board is literally just a bunch of colored squares
[04:42:10] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:42:11] <pulse> you can easily do that in any UI library
[04:42:25] <pulse> and for pieces you obviously use some kind of graphics
[04:42:28] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:42:32] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 258 seconds)
[04:42:45] <pulse> there's a lot of free chess set graphics on the web
[04:44:25] *** Quits: zwr (~zwr@2804:d45:b966:fb00:f028:19fc:92fe:e9f4) (Remote host closed the connection)
[04:44:34] <Izem> if I draw the board, then it will not be resizeable, which is why I wondered about png
[04:45:18] *** Quits: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Quit: Leaving)
[04:45:56] <pulse> it would be with SVG
[04:46:03] <pulse> chess sets are typically in SVG
[04:46:07] <pulse> for that reason
[04:46:46] <^-^hi> SGautam, look up anarch. Probably gives you ideas.
[04:46:48] <pulse> and for the board you can just use some kind of scalable layout, or even have that in SVG too
[04:47:21] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[04:47:51] <Izem> pulse: I thought svg was for the web/browsers?
[04:47:53] <^-^hi> Izem: look up allegro
[04:48:04] <Izem> but I guess if I have an image library
[04:48:05] <^-^hi> it is easy and cross-platform
[04:48:11] <Izem> why do I need that?
[04:48:20] <^-^hi> and can handle images and graphics and stuff
[04:48:30] <Izem> yeah, so can windows libs
[04:48:42] *** Joins: TechTest (uid283215@2001:67c:2f08:4::4:524f)
[04:48:48] <Izem> I just don't really know the process for this sorta stuff
[04:49:01] <Izem> I've never delivered an end user app either
[04:49:07] <pulse> Izem, there's other vector formats, SVG is just the most popular one
[04:49:14] <^-^hi> and it is less corporate-infested and you can support multiple platforms
[04:50:00] <^-^hi> Cairo is also good and rather barebone
[04:50:04] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[04:50:18] *** Joins: eyynet4 (~0x100@32.211.211.39)
[04:50:31] <^-^hi> it can handle vector graphics, it is everything's backend.
[04:50:32] <eyynet4> or any PNG loader really
[04:50:36] <Izem> at some point in time I have to learn about one of the most dominat desktop OSes
[04:51:05] <eyynet4> windows is a dead end, don't waste your time
[04:51:08] <eyynet4> same as mac
[04:51:28] <Arahael> eyynet4: They'll both be around for a looong time.
[04:51:37] <eyynet4> yeah so will COBOL
[04:52:15] <Arahael> eyynet4: You're out of touch with the present, I see.
[04:52:33] <eyynet4> COBOL is abandoned?
[04:52:46] <Arahael> eyynet4: WIndows is still the dominant desktop OS.
[04:52:47] <^-^hi> porting exclusively to windows' libs is so ... unpleasant
[04:52:59] <eyynet4> its still a dead end and a waste of time
[04:53:29] <Izem> interesting perspective
[04:53:30] <^-^hi> also their C apis suck in legendary scale
[04:53:53] <^-^hi> it seems their other apis follow suit
[04:54:01] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 248 seconds)
[04:56:11] <pulse> eyynet4, i think you underestimate the scale windows has going when it comes to enterprise
[04:56:20] <pulse> almost any expert facing software in fact runs on windows only lol
[04:56:42] <^-^hi> what kind of enlightened developing process in microsoft manages to make minesweeper 100mb big is beyond my imagination
[04:56:54] <pulse> it's definitely not a dead end. any developer should know at least 2 major OSs anyway
[04:56:58] <eyynet4> they all run on chrome
[04:56:58] <pulse> windows/linux is fine
[04:57:06] <eyynet4> windows is ded
[04:57:21] <pulse> yeah, autocad runs on chrome
[04:57:22] <pulse> :p
[04:57:51] <^-^hi> just use posix and cross-platform stuff and windows would be covered?
[04:57:53] <eyynet4> lol autocad
[04:58:31] <InPhase> ^-^hi: If Windows actually embraced posix seriously, the world would be a much better place.
[04:58:46] <^-^hi> InPhase, there is always cygwin
[04:58:53] <Izem> sockets stuff is not bad to port
[04:59:00] <^-^hi> not to mention that linux thing they embed
[04:59:14] <Izem> but if I am making stuff for windows folks I'd like to do that, as opposed to cygwin
[05:00:08] <InPhase> Cross-platform development in the modern era kind of looks like "Write the code, and then insert the special case processing for Windows."
[05:00:26] <Arahael> InPhase: And the rewrite for macos. :)
[05:00:41] <eyynet4> nobody supports mac
[05:00:42] <^-^hi> it is just some extra dlls, and liberation from eternal windows badness and awkwardness, isn't it?
[05:00:57] <InPhase> Arahael: There are a few things to fix up for macs, but they're almost Linux, just more expensive.
[05:01:06] <^-^hi> Arahael, actually if you use unix stuff it is no effort to support mac
[05:01:32] <Arahael> InPhase: Well, I'm mostly doing iOS, actually, but targetting the app stores have a lot more complexity.
[05:01:50] <eyynet4> do you see any WINE layers for quartz or whatever their renderer is
[05:02:07] <^-^hi> and many posix interfaces and graphic libraries are already available for windows
[05:02:21] <^-^hi> you just have to plan in advance to be portable
[05:02:45] <^-^hi> instead of adding #ifdefs everywhere
[05:04:03] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[05:04:10] <^-^hi> qt is everywhere, unix is everywhere.
[05:04:29] *** Quits: chomwitt (~chomwitt@2a02:587:dc02:6400:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[05:04:49] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[05:06:54] <eyynet4> and you're always rolling the dice with a company like apple, they might wake up one day and decide to arbitrarily block old programs from running, for your security, or better expereience, or whatever BS of the month is
[05:07:12] <^-^hi> exactly
[05:08:05] <^-^hi> couldn't those corporate dudes try to be less evil?
[05:09:00] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Ping timeout: 268 seconds)
[05:09:23] <InPhase> eyynet4: My biggest mac eyeroll issue that I keep encountering is with some mac programs that we fast-deploy without installers, where mac requires you to explicitly drag and drop them before it will allow networking access.  This is apparently a security feature, but a silent one, so people keep hitting the issue and repeatedly reporting back the bug.  We keep sending back out "drag it to another 
[05:09:29] <InPhase> folder, then drag it back"  then, "It works now!"
[05:10:17] <^-^hi> so much security
[05:10:32] <^-^hi> it can't network if i click it
[05:10:34] <InPhase> Not only is this a terrible way to block access, silently, it's also not even doing its security job.
[05:10:45] *** Joins: loganlee (~Thunderbi@user/loganlee)
[05:10:53] <eyynet4> lol wwow, that's a new one to me
[05:10:55] <^-^hi> but it can network if i drag and drop and then click it
[05:11:19] <^-^hi> such an enhancement. it destroys the malware industry
[05:12:06] *** Quits: SGautam (uid286066@id-286066.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[05:13:01] <eyynet4> there must be a loophole somewhere, otherwise RIP when theres a system update
[05:13:16] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[05:13:35] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[05:14:02] *** Joins: anononon (~anononon@user-5-173-146-83.play-internet.pl)
[05:14:34] <eyynet4> probably some plist file with exemptions, top security
[05:15:02] <Izem> I think a codebase for each platform makes sense, there is not that many
[05:15:26] <Izem> I'm not satisfied with browser hacks
[05:15:41] <InPhase> You don't want to be maintaining multiple codebases for one project.
[05:15:52] <^-^hi> Izem: waste of dev time and feature/bugfix discrepancy 
[05:16:04] <Izem> yes, that is why you have to decide what you will support
[05:16:09] <InPhase> Sometimes one gets into that scenario because of historical decisions, but it's important to move back out of it quickly when it arises.
[05:16:20] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[05:16:55] <Izem> what makes it a waste of time?
[05:17:08] <InPhase> Izem: You have to integrate every change into multiple codebases?
[05:17:19] <InPhase> Izem: Otherwise, they become desynchronized.
[05:17:29] <^-^hi> worse if in multiple languages
[05:17:39] <Izem> they would be similar applications, not identical
[05:17:46] <Izem> a tiered support seems ok
[05:18:37] <^-^hi> Just use qt and unix and see how much adjustment you would need for windows
[05:18:51] <^-^hi> or that thing qml
[05:19:23] <Izem> really depends, I am just learning atm, I'm not in any sort of buisness at all
[05:19:36] <Izem> qt sure seems pragmatic
[05:20:12] <Izem> is qt on iOS? I did hear about them having mobile stuff as well
[05:20:21] <^-^hi> probably
[05:20:47] <^-^hi> https://doc.qt.io/qt-5/ios.html
[05:20:50] <bayaz> Title: Qt for iOS | Qt 5.15 
[05:21:13] <AlexDelarge> so you haven't actually written anything?
[05:22:35] *** Quits: nupilios (~nupilios@178-191-82-191.adsl.highway.telekom.at) (Ping timeout: 252 seconds)
[05:23:15] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[05:24:53] *** Joins: nupilios (~nupilios@178-191-85-128.adsl.highway.telekom.at)
[05:25:08] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[05:26:08] <Izem> what's mobile development like? Does performance actually have an impact in your app selling/downloading more?
[05:26:26] <Izem> from some older mobile stuff I looked it seemed similar to embedded
[05:26:38] <AlexDelarge> lol
[05:27:28] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 272 seconds)
[05:27:29] <^-^hi> Izem: yes
[05:28:28] <^-^hi> not much but everyone likes their phones not getting hot as hell and their phones not freezing because of some electron blasphemy
[05:31:04] <pulse> Izem, you know all the worst descriptions of hell that you've ever heard
[05:31:12] <pulse> well that's nothing compared to mobile dev
[05:31:35] <^-^hi> android should die in hell
[05:31:49] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[05:32:49] <eyynet4> it's going to take linux with it :(
[05:33:07] <^-^hi> isn't it just some mutilated linux whose design have exactly solved zero problems and caused many?
[05:34:21] *** Joins: matrixskp (~matrixskp@121-75-182-31.dyn.vf.net.nz)
[05:34:33] <^-^hi> why tf should i download a ndk and a superheavy ide just to run a normal "nAtIVe" program on my goddamn linux arm machine?
[05:34:40] <eyynet4> they solved the problem of opaque linux drivers in the face of software freedom
[05:34:46] <AlexDelarge> BIAS
[05:35:06] <Izem> downlaoding massive sdk's seems to be the norm in corporate sadly
[05:35:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:36:05] <Izem> pulse: heh xD
[05:36:10] <^-^hi> would it just save 80% google's and peoples time and effort to just put freaking debian on phone?
[05:36:33] <^-^hi> maemo was the best thing ever created
[05:37:01] <Izem> well they have their own os now, so it's nice to see osdev interest again
[05:37:14] <Izem> never thought it would amount to anything tbh
[05:37:48] <eyynet4> so they're going to push rust into kernel, then just abandon it for c++ fuscia?
[05:37:51] <^-^hi> it didn't have close to a fraction of lifetime and userbase of android and symbian, yet it was so hacker-friendly you can find tools for everything on it.
[05:38:33] <Izem> I though fuschia had rust too
[05:38:46] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:38:51] <eyynet4> i haven't looked at the code in over 4 years  maybe it does
[05:38:52] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 245 seconds)
[05:39:06] <eyynet4> maybe not that long i can't remember now 
[05:39:08] *** brabrax_ is now known as brabrax
[05:39:14] <Izem> yeah they do
[05:39:18] <eyynet4> lol
[05:39:36] <Izem> I wanted to look at it but it seems it requires quite a bit to build
[05:39:40] <eyynet4> is it in the kernel or just a support lib
[05:39:55] <eyynet4> they had DART or something in there too, as a different layer
[05:40:57] *** Quits: blahboybaz (~blahboyba@c-73-221-100-152.hsd1.wa.comcast.net) (Ping timeout: 248 seconds)
[05:41:13] <Izem> doesn't seem to be any rust in the kernel
[05:41:24] *** Quits: xff0x (~xff0x@2001:1a81:5378:e300:775f:2c72:eed7:a05a) (Ping timeout: 272 seconds)
[05:42:58] <Izem> symbian?
[05:43:03] <Izem> they used debian?!
[05:43:04] *** Joins: xff0x (~xff0x@2001:1a81:53b6:2a00:9ab0:6dc8:ce66:af3c)
[05:43:15] <Izem> I thought it was a custom OS
[05:43:25] <^-^hi> Izem: maemo used debian
[05:43:29] *** Quits: JavaBean (~JavaBean@user/javabean) (Ping timeout: 252 seconds)
[05:43:32] <eyynet4> google people aren't that good, its all hype
[05:43:37] <eyynet4> their credentials i mean
[05:43:40] <^-^hi> symbian was also cute
[05:43:56] <Izem> oh ok
[05:44:05] <^-^hi> their motto was "all resources are scarce"
[05:44:27] <Izem> I feel like mobile competition should be higher since Linux is freely available
[05:44:29] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[05:44:59] <Izem> takes a lot less time to get in if you don't have to build an OS :P
[05:45:04] <eyynet4> mobnile is all about cheap business tricks, like cost subsidization, shady deals...
[05:45:05] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[05:45:47] <^-^hi> someone should ban those phones that stick the battery to the whole thing
[05:47:28] <eyynet4> like you can get a 20$ phone that COULD run linux, but the company won't let you install anything other than their OS on it
[05:47:53] *** Quits: anononon (~anononon@user-5-173-146-83.play-internet.pl) (Ping timeout: 248 seconds)
[05:47:59] <eyynet4> so you have to get the 200#$ version that allows you the unlocked boot loader
[05:48:29] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Read error: Connection reset by peer)
[05:48:50] *** Joins: JavaBean (~JavaBean@user/javabean)
[05:49:03] <eyynet4> company/carrier
[05:49:11] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[05:49:11] *** Quits: kuku (~kuku@user/kuku) (Remote host closed the connection)
[05:49:32] <Izem> makes more sense to make your own board
[05:50:13] *** Joins: radu2424078 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[05:51:15] *** Joins: tomgus1_ (~tomgus1@90.208.15.36)
[05:51:16] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[05:51:33] *** Joins: sunny934 (~sunny93@wireguard/tunneler/sunny93)
[05:51:40] *** Joins: kuku (~kuku@pool-108-27-57-106.nycmny.fios.verizon.net)
[05:51:40] *** Joins: sevengraff5 (~admin@li891-34.members.linode.com)
[05:51:42] *** Joins: erica4 (~erica@user/erica)
[05:52:19] *** Joins: jamea97 (~jamea@200.68.140.3)
[05:52:30] *** Joins: kaivai_ (~kaivai@user/kaivai)
[05:52:40] *** Joins: henbruas_ (~henbruas@ti0003a400-3211.bb.online.no)
[05:52:48] *** Joins: inee (~ine@wolowolo.com)
[05:52:50] *** Joins: AlexDela1ge (~alexboy@user/alexdelarge)
[05:52:57] *** Joins: pizdets_ (~pizdets@183.182.111.62)
[05:52:58] *** Joins: karstensrage_ (~karstensr@nibbler.warped.com)
[05:53:29] *** Joins: andrewSC_ (~andrewSC@archlinux/trusteduser/andrewSC)
[05:53:29] *** Joins: kurtthem1ker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[05:53:47] *** Joins: fjmorazan_ (~quassel@user/fjmorazan)
[05:53:54] *** Joins: rany_ (~rany@user/rany)
[05:54:05] *** Quits: AlexDelarge (~alexboy@user/alexdelarge) (Killed (copper.libera.chat (Nickname regained by services)))
[05:54:05] *** AlexDela1ge is now known as AlexDeLarge
[05:54:10] *** AlexDeLarge is now known as AlexDelarge
[05:54:26] *** Joins: t3nj1n_ (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[05:54:46] *** Joins: nulleip_ (~luiz@189.34.167.234)
[05:54:49] *** Joins: AquaL1te_ (~AquaL1te@user/aqual1te)
[05:55:00] *** Joins: nf__ (~n@monade.li)
[05:55:08] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: Ping timeout (120 seconds))
[05:55:08] *** Quits: tomgus1 (~tomgus1@2a02:c7f:d2b0:e600:ba27:ebff:fe5c:2dcd) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[05:55:08] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[05:55:08] *** Joins: TwiZted (~TwiZted@user/twizted)
[05:55:08] *** Quits: TwiZted (~TwiZted@user/twizted) (Client Quit)
[05:55:08] *** Quits: sevengraff (~admin@li891-34.members.linode.com) (Quit: Ping timeout (120 seconds))
[05:55:08] *** Quits: erica (~erica@user/erica) (Quit: Ping timeout (120 seconds))
[05:55:08] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: Ping timeout (120 seconds))
[05:55:08] *** Quits: kilitary (~kilitary@kilitary.ru) (Read error: Connection reset by peer)
[05:55:08] *** Quits: jamea (~jamea@200.68.140.3) (Read error: Connection reset by peer)
[05:55:08] *** Quits: ine (~ine@user/ine) (Quit: Goodbye)
[05:55:08] *** Quits: karstensrage (~karstensr@user/karstensrage) (Quit: ZNC - http://znc.in)
[05:55:08] *** Quits: pizdets (~pizdets@183.182.111.62) (Quit: pizdets)
[05:55:08] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[05:55:08] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[05:55:08] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Read error: Connection reset by peer)
[05:55:08] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: No Ping reply in 180 seconds.)
[05:55:08] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 272 seconds)
[05:55:08] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Ping timeout: 272 seconds)
[05:55:08] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[05:55:08] *** Quits: paruh (~paruh@92.60.39.18) (Ping timeout: 272 seconds)
[05:55:08] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 272 seconds)
[05:55:08] *** Quits: password (~password@user/password2) (Ping timeout: 272 seconds)
[05:55:08] *** Quits: nf (~n@monade.li) (Remote host closed the connection)
[05:55:08] *** Quits: bayaz (~bayaz@user/jeaye/bot/bayaz) (Ping timeout: 272 seconds)
[05:55:08] *** Quits: JavaBean (~JavaBean@user/javabean) (Ping timeout: 272 seconds)
[05:55:08] *** Quits: rany (~rany@user/rany) (Ping timeout: 272 seconds)
[05:55:08] *** Quits: nulleip (~luiz@189.34.167.234) (Ping timeout: 272 seconds)
[05:55:08] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 272 seconds)
[05:55:08] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 272 seconds)
[05:55:08] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Remote host closed the connection)
[05:55:08] *** Quits: DefiantN (~DefiantN@user/defiantn) (Ping timeout: 272 seconds)
[05:55:09] *** radu2424078 is now known as radu242407
[05:55:09] *** sevengraff5 is now known as sevengraff
[05:55:09] *** tomgus1_ is now known as tomgus1
[05:55:09] *** erica4 is now known as erica
[05:55:09] *** sunny934 is now known as sunny93
[05:55:09] *** henbruas_ is now known as henbruas
[05:55:12] *** Joins: art_vandelay_ (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[05:55:13] *** Joins: paruh (~paruh@92.60.39.18)
[05:55:16] *** Quits: digilink (~digilink@user/digilink) (Remote host closed the connection)
[05:55:16] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[05:55:17] *** Quits: Rayke (rayke@user/rayke) (Remote host closed the connection)
[05:55:20] *** Quits: ornxka (~ornxka@user/ornxka) (Remote host closed the connection)
[05:55:20] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[05:55:22] *** Joins: BUSY (~BUSY@user/busy)
[05:55:26] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[05:55:39] *** Joins: digilink (~digilink@user/digilink)
[05:55:41] *** Joins: Rayke (rayke@user/rayke)
[05:55:45] *** Joins: ornxka (~ornxka@user/ornxka)
[05:55:46] *** Joins: JavaBean (~JavaBean@user/javabean)
[05:56:15] *** Joins: bayaz (~bayaz@user/jeaye/bot/bayaz)
[05:56:15] *** ChanServ sets mode: +o bayaz
[05:56:28] *** Joins: kmh_ (~kmh@p200300df5f0d0200dc05e9b97966e73c.dip0.t-ipconnect.de)
[05:57:15] *** Joins: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net)
[05:57:23] *** Joins: DefiantN (~DefiantN@user/defiantn)
[05:57:42] *** Joins: Yonle (~Yonle@user/yonle)
[05:57:57] *** ircuser is now known as JackFin
[05:58:26] *** Quits: kmh (~kmh@p200300df5f031500dc05e9b97966e73c.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[05:58:33] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[06:02:27] *** Quits: tw3ml0w (~tw3ml0w@45.144.113.177) (Quit: Leaving)
[06:08:21] *** karstensrage_ is now known as karstensrage
[06:09:13] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Ping timeout: 248 seconds)
[06:09:19] *** Quits: karstensrage (~karstensr@nibbler.warped.com) (Changing host)
[06:09:19] *** Joins: karstensrage (~karstensr@user/karstensrage)
[06:10:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[06:13:05] *** Quits: Yonle (~Yonle@user/yonle) (Quit: leaving)
[06:13:23] *** Joins: Yonle (~Yonle@user/yonle)
[06:13:30] *** AlexDelarge is now known as Caffeinated
[06:16:13] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[06:20:33] *** Joins: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com)
[06:22:56] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[06:24:39] *** Quits: matrixskp (~matrixskp@121-75-182-31.dyn.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[06:25:16] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:25:45] *** Quits: Haxxa (~Haxxa@122.199.45.186) (Ping timeout: 248 seconds)
[06:25:51] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[06:26:55] *** Joins: Haxxa (~Haxxa@122-199-44-36.ip4.superloop.com)
[06:27:24] *** Quits: Yonle (~Yonle@user/yonle) (Quit: Logged Out)
[06:27:41] *** Joins: Yonle (~Yonle@user/yonle)
[06:29:41] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 252 seconds)
[06:29:52] *** Quits: byanka_ (~byanka@91.244.10.3) (Ping timeout: 258 seconds)
[06:30:05] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[06:30:07] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[06:30:10] *** Joins: jazzy (~jaziz@2600:380:4545:1bb4:ec20:e391:8f1d:8467)
[06:31:42] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[06:31:54] *** Joins: flynn (~mcbloch@user/flynn)
[06:33:54] <quartz> I'm trying to do this easy leetcode problem, but my solution does not work, can anyone tell me why? https://leetcode.com/problems/best-time-to-buy-and-sell-stock/
[06:33:58] <quartz> Here is my code: https://bpa.st/MFRQ
[06:34:00] <bayaz> Title: View paste MFRQ 
[06:34:41] <eyynet4> buy low, sell high
[06:36:41] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[06:37:23] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:39:14] <pavonia> quartz: `buy = prices[i];` You want the old i here, no?
[06:39:58] <quartz> pavonia: Yes
[06:40:46] <pavonia> Same problem with j
[06:41:05] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[06:41:13] <quartz> Ohhh, does ++i change the value of i permanently?
[06:41:18] <karstensrage> yes
[06:41:19] <quartz> I thought it was just for that one instance.
[06:41:28] <quartz> So I'd need i + 1
[06:41:34] <karstensrage> i wish more people learned assembly first
[06:41:40] <karstensrage> yes
[06:42:15] <pavonia> quartz: Also make sure to not access array indices out of bounds
[06:42:27] <karstensrage> very very rarely should you use ++/-- operators
[06:42:44] <quartz> pavonia: Yeah so in this case I'd need to loop until princes.length - 1
[06:42:47] <karstensrage> they have side effects as you are experiencing
[06:43:08] <quartz> OK
[06:43:48] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[06:44:26] <quartz> Darn, it still does not return the correct answer :(
[06:45:10] *** Quits: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[06:45:30] <eyynet4> whats the point of buying a stock if you're just planning on selling it?
[06:48:37] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[06:48:41] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 248 seconds)
[06:48:49] *** Joins: eyynet4 (~0x100@32.211.211.39)
[06:49:41] <paulo> profit
[06:50:35] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:50:35] <eyynet4> yeah but how much really
[06:52:29] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[06:52:54] <quartz> I really don't get how my solution does not work: https://bpa.st/M7NA
[06:52:55] <bayaz> Title: View paste M7NA 
[06:53:44] <eyynet4> i doubt the people who made that site could code a decent solution
[06:54:49] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[06:55:02] *** Joins: eyynet4 (~0x100@32.211.211.39)
[06:55:41] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[06:55:56] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 258 seconds)
[06:56:08] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[06:56:15] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[06:56:17] <JackFin> quartz youre only considering successive prices
[06:56:27] *** Joins: eyynet4 (~0x100@32.211.211.39)
[06:57:48] *** Quits: TechTest (uid283215@2001:67c:2f08:4::4:524f) (Quit: Connection closed for inactivity)
[06:57:50] <quartz> JackFin: What do you mean?
[06:57:57] *** Quits: nekodesu (~nano@user/nekobit) (Quit: free(neko);)
[06:58:50] <JackFin> the max price[j] - price[i] where I > j might be where j =/= I + 1 
[06:59:01] <JackFin> 'you can't time the market'
[06:59:04] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:59:27] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) ()
[06:59:31] <JackFin> without keeping track of additional state 
[06:59:38] <vdamewood> Hi people etc.
[07:00:44] <Trashlord> vdamewood: yes, hi
[07:01:31] *** Joins: PikaChokeMe (~PikaChoke@c-24-11-1-200.hsd1.ut.comcast.net)
[07:02:03] <jamea97> c# i have a select statment and need loop, but inloop need exceute other sql statment, need create 2 connections, 2 commands 2 readers for do it? https://bpa.st/CKMA
[07:02:05] <bayaz> Title: View paste CKMA 
[07:02:12] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[07:02:31] <quartz> JackFin: OK
[07:07:35] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[07:08:00] *** craftxbox is now known as snep
[07:09:52] <JackFin> keep an eye on the absolute bottom of the market and always ask: how much would I have made if I sold now?if you would have made a bigger profit than any other time, then it's your biggest profit. only if the bottom changes should you adjust your calculation, not retrospectively but from that point onwards (since you can't sell before you buy) 
[07:10:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 272 seconds)
[07:10:22] <JackFin> that's how you time the market 
[07:12:35] <JackFin> biggest profit so far*
[07:13:22] <quartz> OK thanks.
[07:13:24] <quartz> I get it now
[07:13:59] *** Joins: euouae (~euouae@user/euouae)
[07:14:14] <Trashlord> jamea97: any reason you're not using the Entity Framework?
[07:14:15] <euouae> When you sign your git logs, what's the end effect?
[07:14:31] <euouae> just for people to be able to verify who it came from?
[07:15:05] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[07:15:24] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[07:16:01] <euouae> git commits*
[07:16:06] <cis> so people can be sure who to blame
[07:16:26] <euouae> hehe
[07:16:34] <euouae> Them haters 
[07:16:51] <euouae> upset about privilege escalation and data loss, geez
[07:22:14] *** Quits: kuku (~kuku@pool-108-27-57-106.nycmny.fios.verizon.net) (Quit: Leaving)
[07:22:59] *** Joins: src_ (~src@user/src)
[07:23:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:23:44] *** Joins: kuku (~kuku@user/kuku)
[07:24:39] *** Quits: Yonle (~Yonle@user/yonle) (Quit: Fixing my IRC Client)
[07:24:56] *** Joins: Yonle (~Yonle@user/yonle)
[07:25:14] *** Quits: src_ (~src@user/src) (Client Quit)
[07:25:57] *** Quits: src (~src@user/src) (Ping timeout: 245 seconds)
[07:27:04] *** Joins: beencubed (~beencubed@209.131.238.248)
[07:28:47] *** Quits: Yonle (~Yonle@user/yonle) (Read error: Connection reset by peer)
[07:30:31] *** Joins: Yonle (~Yonle@user/yonle)
[07:30:48] <vinleod> euouae: Yes. The point to signing them is basically to prove that the commit actually came from you.
[07:38:18] <euouae> vinleod: it's a step towards more security right?
[07:38:53] <vinleod> Oh, oops. Hang on a sec.
[07:38:56] *** vinleod is now known as vdamewood
[07:38:59] <vdamewood> much better
[07:39:53] *** Quits: LiftLeft (~LiftLeft@154.21.28.119) (Ping timeout: 248 seconds)
[07:40:35] <vdamewood> Well, kind of, I guess. It's to combat malware injections.
[07:40:42] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[07:45:39] <smallville7123> ( ( w 100 / draw_w 200) * window_w 400)  *  ( w 100 / draw_w 200 ) will not work for all cases where w is different, right?
[07:51:00] <gry> smallville7123, what language is that?
[07:52:40] <smallville7123> ( ( w 100 / draw_w 200) * window_w 400)  *  ( w 100 / draw_w 200 ) will not work for all cases where w is different, right? eg for w (100) [ ( w 100 / draw_w 200) * window_w 400) ]  returns 100, but [ ( w 150 / draw_w 200) * window_w 400) ] returns 300
[07:52:49] <smallville7123> C/C++
[07:55:21] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Ping timeout: 248 seconds)
[07:59:41] <smallville7123> percent = w (100) / draw_w (200); scaled = ( percent (0.75) * window_w (400) ) * percent (0.75)              why does taking 75% of 100 instead just seem to easy ?
[08:01:17] *** Joins: LiftLeft (~LiftLeft@154.21.114.108)
[08:02:10] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[08:02:32] *** Joins: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[08:03:06] *** Quits: eyynet4 (~0x100@32.211.211.39) (Ping timeout: 240 seconds)
[08:06:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:06:46] *** Joins: Izem (~Izem@8.21.10.18)
[08:07:04] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[08:08:50] <vdamewood> Slurp!
[08:10:17] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 268 seconds)
[08:10:49] *** Quits: LiftLeft (~LiftLeft@154.21.114.108) (Ping timeout: 248 seconds)
[08:10:49] *** Quits: scabby_ (~scabby@user/scabootssca) (Ping timeout: 248 seconds)
[08:14:43] *** Joins: Mija (~Mija@user/mija)
[08:14:43] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[08:14:43] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Client Quit)
[08:14:51] *** Joins: kbmonkey (~kbmonkey@60.230.132.250)
[08:15:56] *** Quits: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 272 seconds)
[08:17:56] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[08:19:01] *** Parts: domhnall (~developer@user/domhnall/x-2887755) ()
[08:20:19] <euouae> vdamewood: what else is there
[08:20:29] <vdamewood> Else?
[08:20:37] <euouae> for releasing software, in terms of securest 
[08:20:42] <euouae> security*
[08:20:58] <vdamewood> Nothing that I can think of.
[08:23:36] *** Joins: eyynet4 (~0x100@32.211.211.39)
[08:23:48] *** Quits: shredder (~user@user/shredder) (Quit: quitting)
[08:24:33] *** Quits: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com) (Quit: WeeChat 3.2)
[08:25:45] *** Quits: euouae (~euouae@user/euouae) (Quit: Client closed)
[08:27:40] *** Joins: shredder (~user@user/shredder)
[08:28:11] *** Quits: jamea97 (~jamea@200.68.140.3) (Ping timeout: 268 seconds)
[08:28:31] *** Joins: b1101 (~b1101@ool-44c01641.dyn.optonline.net)
[08:29:11] *** Joins: euouae (~euouae@user/euouae)
[08:29:36] *** fjmorazan_ is now known as fjmorazan
[08:30:22] *** Joins: gggp (~gggp@123.113.181.165)
[08:31:32] *** Quits: euouae (~euouae@user/euouae) (Client Quit)
[08:32:35] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Quit: Leaving)
[08:33:19] <Arahael> It also enables app store managers to block authors who turn out to be malware writers - a bit late, perhaps, but better than never.
[08:33:37] <Arahael> (When you're signing an app, that is.  Were you talking about signing *git commits*?)
[08:33:49] <Arahael> Ah, yep.  Git commits.  Carry on...
[08:37:17] <smallville7123> percent = w (100) / draw_w (200); scaled = ( percent (0.75) * window_w (400) ) * percent (0.75)              why does taking 75% of 100 instead just seem to easy ?
[08:41:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[08:42:32] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 272 seconds)
[08:43:16] <smallville7123> percent_draw = w (100) / draw_w (200); (0.75)         percent_of_window = percent_draw (0.75) * window_w (400); (300)
[08:43:35] <smallville7123> how do i map this 300 into my space of 200 ?
[08:44:02] <smallville7123> (300 / 400) * 200 ?
[08:45:27] *** Quits: Yonle (~Yonle@user/yonle) (Ping timeout: 268 seconds)
[08:49:51] <smallville7123> wait no that would not work
[08:50:08] <smallville7123> as it would always be 75% of 200
[08:50:38] <smallville7123> regardless of the window width
[08:51:50] *** Joins: Yonle (~Yonle@user/yonle)
[08:53:10] <smallville7123> how do i map this 300 into my space of 200 ?
[08:54:19] <smallville7123> fk now im confused
[08:56:40] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[08:56:41] <kbmonkey> what you trying to achieve smallville7123 
[08:58:01] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[08:58:51] <smallville7123> im trying to figure out how to map my draw w to my window w
[08:58:59] *** Joins: mickey8 (~user@user/mickey)
[08:59:24] <smallville7123> and then remap it to draw w
[08:59:30] <smallville7123> for example
[09:00:30] <smallville7123> input 100, draw w 200, window w 400 > transformed w 200 > draw w 200, transformed w 100
[09:00:55] *** Joins: Quacc (~youbuntoe@user/quacc)
[09:01:51] *** Joins: mci64 (~mci64@185.242.190.95)
[09:02:06] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[09:02:15] *** Quits: mci64 (~mci64@185.242.190.95) (Client Quit)
[09:03:39] <kbmonkey> so you have a fixed-width surface of 200 that you want to scale into a window of size 400?
[09:04:04] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 272 seconds)
[09:06:10] <kbmonkey> what does input (100) refer to smallville7123? is this meant to convey a progress bar like element?
[09:07:00] *** Joins: rany (~rany@user/rany)
[09:08:21] <smallville7123> 14:33:39 kbmonkey: so you have a fixed-width surface of 200 that you want to scale into a window of size 400?
[09:08:24] <smallville7123> more or less
[09:08:42] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[09:08:44] <smallville7123> 100 is the location on which the surface is being drawn in, eg 0 to 100
[09:08:48] <smallville7123> 100 is the location on which the surface is being drawn in, eg 0 to 200 *
[09:09:18] <smallville7123> eg draw on the surface from 0 to 100, and then map to window
[09:09:39] <smallville7123> and then scale back to surface
[09:10:54] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[09:11:31] *** Joins: rany_ (~rany@user/rany)
[09:11:37] *** Quits: rany (~rany@user/rany) (Ping timeout: 248 seconds)
[09:11:39] <smallville7123> this is what i am currently doing, which ONLY WORKS for window width of 400
[09:11:42] <smallville7123> window_width = width
[09:11:51] <smallville7123> percent_scaled_w = w / draw_w
[09:11:56] <smallville7123> percent_of_window_w = percent_scaled_w * window_width
[09:12:06] <smallville7123> scaled_window_w = (percent_of_window_w / window_width) * draw_w
[09:12:51] *** Joins: LiftLeft (~LiftLeft@212.102.58.170)
[09:13:05] <smallville7123> this breaks if window width is anything other than 400
[09:13:39] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[09:13:53] *** Joins: rany (~rany@user/rany)
[09:13:57] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[09:14:11] <smallville7123> or rather, it always returns 100
[09:14:21] <smallville7123> eg for a window width of 500
[09:15:23] *** Joins: rany_ (~rany@user/rany)
[09:15:46] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[09:16:25] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 248 seconds)
[09:17:10] <kbmonkey> you need to scale your input (100) by a ratio equal to the window width and your constant (200) smallville7123 
[09:17:24] *** Joins: gggp_ (~gggp@60.10.23.162)
[09:17:40] <kbmonkey> so ratio = window / constant (400 / 200) = 2
[09:17:56] <smallville7123> hmmm this is weird
[09:18:06] <kbmonkey> then your input is transformed as input * ratio (100 * 2) = 200
[09:19:00] <smallville7123> for a window width of 500 my transformed input is 125 right?
[09:19:10] *** Joins: mci64 (~mci64@185.242.190.95)
[09:19:29] <kbmonkey> think about it this way. if your window was 200, is your input point in the middle right?
[09:20:16] *** Joins: rany (~rany@user/rany)
[09:20:20] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[09:20:25] <smallville7123> as i currently obtain my scaled values as percent = w (100) / draw_w (200); scaled = ( percent (0.50) * window_w 500) ) * percent (0.50)
[09:20:34] *** Joins: blahboybaz (~blahboyba@c-73-221-100-152.hsd1.wa.comcast.net)
[09:20:44] *** Quits: gggp (~gggp@123.113.181.165) (Ping timeout: 252 seconds)
[09:21:01] <smallville7123> which to me,  ( percent (0.50) * window_w 500) ) * percent (0.50)     does not seem correct
[09:21:36] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[09:21:39] *** Joins: rany_ (~rany@user/rany)
[09:22:06] <smallville7123> if my window is 200, then my transform point is 50
[09:22:07] *** Joins: jamea (~jamea@177.239.85.103)
[09:22:45] <blahboybaz> IN javascript is it possible to return more than one value where those values are not in an object, array or any other data structure? WHat I mean is more than one primitive value.
[09:22:57] <blahboybaz> Or am I barking up the wrong tree?
[09:22:57] <smallville7123> why does this appear correct, yet the way i obtain it seems incorrect ?
[09:23:07] <smallville7123> kbmonkey: 
[09:23:16] <smallville7123> eg
[09:23:30] <smallville7123> window_width = width
[09:23:36] <smallville7123> percent_scaled_w = w / draw_w
[09:23:47] <smallville7123> scaled_w = percent_scaled_w * window_width
[09:23:52] <smallville7123> scaled_w_ = scaled_w * percent_scaled_w
[09:23:55] <kbmonkey> is draw_w a constant?
[09:24:22] <smallville7123> draw_w is a virtualized space
[09:24:45] <smallville7123> eg it is mapped directly to NDC when rendering
[09:25:15] <smallville7123> specifically it defines the NDC max range to map the input of 100 to
[09:25:51] <smallville7123> which is fine
[09:26:06] <smallville7123> except that i need to translate this mapping to window coordinates
[09:26:15] <smallville7123> in order to apply clipping
[09:26:33] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 248 seconds)
[09:27:01] <kbmonkey> hmmm yes I see. that is a interesting problem smallville7123 
[09:27:02] <smallville7123> eg if input is 100, and virtual width is 200, then its NDC coord will be 0
[09:27:05] *** Joins: gargus (~user@124-150-74-109.tpgi.com.au)
[09:27:21] <eyynet4> in HLSL
[09:27:33] <smallville7123> and, unfortunaltely, scissoring does not take NDC coords
[09:27:47] *** Quits: tomgus1 (~tomgus1@90.208.15.36) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[09:28:23] <smallville7123> and even if it could, i would need need to remap the virtual coords to the window coords before i scissor
[09:28:25] <eyynet4> poor kbmonkey didn't know what they were stumbling into
[09:28:53] <kbmonkey> oh you are dealing with ndc space coordinates? I thought you were dealing with cartesian 2D coordinates
[09:28:57] <smallville7123> anyway, for window 200, 50 is correct right?
[09:29:04] <kbmonkey> lol eyynet4 
[09:29:10] <smallville7123> "I thought you were dealing with cartesian 2D coordinates" i am
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:02] *** Joins: tomgus1 (~tomgus1@90.208.15.36)
[09:30:12] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[09:30:23] <smallville7123> "14:57:02 smallville7123: eg if input is 100, and virtual width is 200, then its NDC coord will be 0" wait no
[09:30:57] <smallville7123> my virtual space is 400 by 400, and i am drawing to a region to 200 by 200, with a range of 0 to 100
[09:30:57] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[09:31:22] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:24] <smallville7123> and i need to map this into my window coords
[09:31:34] <smallville7123> eg window width and height
[09:32:13] <smallville7123> eg 100 by 100 window
[09:33:52] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[09:33:52] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Ping timeout: 258 seconds)
[09:34:27] *** Joins: matrixskp (~matrixskp@121-75-182-31.dyn.vf.net.nz)
[09:34:45] <kbmonkey> smallville7123: afraid I cant help you there. mapping virtual -> screen is not something I have much experience with :(
[09:34:49] *** Joins: rany (~rany@user/rany)
[09:35:15] <smallville7123> im just gonna assume my current mapping is correct (since it seems correct)
[09:35:23] <smallville7123> eg for a window of 100
[09:35:51] <smallville7123> a virtual space of 400, restricted to 200, drawn to 100
[09:36:10] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[09:36:16] *** Joins: rany_ (~rany@user/rany)
[09:36:17] <smallville7123> results in 100 transformed by 50% to 50, transformed by 50% to 25
[09:37:06] <smallville7123> and results in 400 transformed by 50% to 200, transformed by 50% to 100, my window width
[09:37:18] <smallville7123> so it appears correct
[09:37:36] <smallville7123> even though the actual code for it does not look correct
[09:37:45] <smallville7123> :/
[09:38:27] *** Quits: mci64 (~mci64@185.242.190.95) (Quit: Connection closed)
[09:38:50] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[09:39:03] *** Joins: eyynet4 (~0x100@32.211.211.39)
[09:39:13] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Quit: WeeChat 3.2)
[09:39:38] *** Joins: rany (~rany@user/rany)
[09:40:32] <kbmonkey> hey if it gives you the results you need now smallville7123, great. you can always refactor it down the line
[09:40:49] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[09:40:55] *** Joins: mci64 (~mci64@185.242.190.95)
[09:41:26] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 272 seconds)
[09:42:09] *** Joins: rany_ (~rany@user/rany)
[09:43:37] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 268 seconds)
[09:44:38] *** Quits: rany (~rany@user/rany) (Ping timeout: 268 seconds)
[09:44:48] *** Joins: rany- (~rany@user/rany)
[09:45:01] <smallville7123> nvm -_- it breaks if i use 160 instead of 100
[09:45:36] *** Quits: Izem (~Izem@8.21.10.18) (Quit: Going offline, see ya! (www.adiirc.com))
[09:46:34] <smallville7123> if i use 160 i get a transformed point of 256 for a window width of 400
[09:46:56] <smallville7123> which is 56 pixels past my region of 200
[09:47:08] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 272 seconds)
[09:47:14] <smallville7123> and my percentage is 0.5
[09:47:16] <smallville7123> and my percentage is 0.8
[09:47:27] <smallville7123> ;-;
[09:47:39] *** Joins: rany (~rany@user/rany)
[09:47:52] <smallville7123> i know it looked incorrect ;-;
[09:47:58] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[09:48:23] <smallville7123> knew*
[09:48:46] <smallville7123> 400 transformed by 50% to 200, transformed by 50% to 100, my window width
[09:49:22] *** Quits: kwilczynski (sid379192@user/kwilczynski) ()
[09:49:33] <smallville7123> 400 transformed by 80% to 320, transformed by 80% to 256
[09:49:52] <smallville7123> which is well over my defined width of 200
[09:50:07] <smallville7123> and my defined location of 160 inside the 200 space
[09:50:18] *** Quits: rany- (~rany@user/rany) (Ping timeout: 272 seconds)
[09:50:29] <smallville7123> kbmonkey: what am i doing wrong ;-;
[09:52:50] *** Quits: rany (~rany@user/rany) (Ping timeout: 272 seconds)
[09:52:57] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[09:54:53] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Read error: Connection reset by peer)
[09:55:08] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[09:55:29] *** Joins: rany (~rany@user/rany)
[09:56:45] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:58:14] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[09:58:34] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[09:58:48] *** Joins: eyynet4 (~0x100@32.211.211.39)
[09:59:11] *** Quits: bocaneri (~bismilah@li889-61.members.linode.com) (Changing host)
[09:59:11] *** Joins: bocaneri (~bismilah@about/linux/staff/sauvin)
[10:00:06] *** Quits: matrixskp (~matrixskp@121-75-182-31.dyn.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[10:00:26] *** Quits: rany (~rany@user/rany) (Ping timeout: 272 seconds)
[10:00:28] *** Joins: password (~password@user/password2)
[10:01:10] <smallville7123> even if i set it to 100 window width
[10:01:13] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[10:01:20] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[10:01:32] *** Joins: eyynet4 (~0x100@32.211.211.39)
[10:01:39] <smallville7123> waiiiiiit
[10:02:13] <smallville7123> i need to transform my window by my virtual region, and then transform that to my sraw width
[10:02:20] <smallville7123> eg
[10:02:25] <smallville7123> 400 transformed by 50% to 200, transformed by 50% to 100, my window width
[10:02:35] <smallville7123> 400 transformed by 80% to 320, transformed by 80% to 256
[10:03:00] <smallville7123> 400 transformed by 50% to 200, transformed by 80% to 160
[10:03:22] <smallville7123> 100 transformed by 50% to 50, transformed by 80% to 40
[10:03:23] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[10:03:36] *** Joins: webnet4 (~0x100@32.211.211.39)
[10:03:37] <smallville7123> that should be correct right?
[10:04:17] *** Joins: rany (~rany@user/rany)
[10:05:30] *** Joins: bcd (~bcd@83-84-164-51.cable.dynamic.v4.ziggo.nl)
[10:05:45] *** Joins: gggp__ (~gggp@123.115.132.5)
[10:06:39] <kbmonkey> honestly I dont know enough about NDC to say if that is right or wrong
[10:06:50] <jamea> c# any advice? https://bpa.st/6IXQ
[10:06:52] <bayaz> Title: View paste 6IXQ 
[10:06:59] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[10:07:28] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:08:41] *** Quits: gggp_ (~gggp@60.10.23.162) (Ping timeout: 248 seconds)
[10:13:05] *** Joins: rany_ (~rany@user/rany)
[10:14:15] *** Quits: rany (~rany@user/rany) (Ping timeout: 268 seconds)
[10:14:42] *** Joins: Quacc (~youbuntoe@user/quacc)
[10:15:25] *** Joins: rany (~rany@user/rany)
[10:17:57] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 258 seconds)
[10:18:34] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[10:18:46] *** Joins: rany_ (~rany@user/rany)
[10:20:09] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[10:20:55] *** Joins: gggp_ (~gggp@123.113.181.165)
[10:20:57] *** Quits: blahboybaz (~blahboyba@c-73-221-100-152.hsd1.wa.comcast.net) (Ping timeout: 248 seconds)
[10:21:39] *** Joins: rany (~rany@user/rany)
[10:22:30] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[10:23:00] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[10:23:41] <Samian> anyone know whether it's safe to run conda clean --all 
[10:24:05] *** Quits: gggp__ (~gggp@123.115.132.5) (Ping timeout: 258 seconds)
[10:26:39] *** Joins: euouae (~euouae@user/euouae)
[10:27:02] *** Quits: rany (~rany@user/rany) (Ping timeout: 272 seconds)
[10:28:22] *** Joins: zwr (~zwr@2804:d45:b966:fb00:52be:b343:e29:2bea)
[10:30:02] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[10:31:07] *** Joins: rany_ (~rany@user/rany)
[10:34:03] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[10:34:33] *** Joins: rany (~rany@user/rany)
[10:34:55] *** Joins: Blankspace (~abcd@user/blankspace)
[10:35:45] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[10:35:54] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 272 seconds)
[10:36:32] *** Quits: LiftLeft (~LiftLeft@212.102.58.170) (Ping timeout: 272 seconds)
[10:37:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:37:28] *** Joins: Blankspace (~abcd@user/blankspace)
[10:37:38] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[10:38:32] *** Joins: rany_ (~rany@user/rany)
[10:38:48] *** Joins: Blankspace (~abcd@user/blankspace)
[10:39:08] *** Quits: rany (~rany@user/rany) (Ping timeout: 256 seconds)
[10:39:57] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[10:40:22] <smallville7123> i got it working :)
[10:40:52] *** Joins: rany (~rany@user/rany)
[10:40:56] <kbmonkey> sorry, I got stuck in a conference call
[10:41:02] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[10:41:21] *** Parts: euouae (~euouae@user/euouae) ()
[10:41:33] <kbmonkey> great to hear you got it smallville7123!
[10:41:40] *** Joins: qbt (~edun@user/edun)
[10:42:38] *** Joins: Blankspace (~abcd@user/blankspace)
[10:43:04] *** Joins: rany_ (~rany@user/rany)
[10:43:11] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[10:43:15] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[10:43:35] *** Joins: Blankspace (~abcd@user/blankspace)
[10:43:50] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[10:44:24] *** Joins: gggp__ (~gggp@221.219.70.239)
[10:45:34] *** Joins: rany (~rany@user/rany)
[10:46:02] *** Quits: jamea (~jamea@177.239.85.103) (Ping timeout: 272 seconds)
[10:46:02] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[10:47:25] *** Joins: Blankspace (~abcd@user/blankspace)
[10:47:35] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[10:47:38] *** Quits: gggp_ (~gggp@123.113.181.165) (Ping timeout: 252 seconds)
[10:48:31] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[10:48:47] *** Joins: rany_ (~rany@user/rany)
[10:50:49] *** Quits: rany (~rany@user/rany) (Ping timeout: 248 seconds)
[10:51:08] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[10:51:16] *** Joins: rany (~rany@user/rany)
[10:51:53] *** Joins: mrig (~mrig@user/mrig)
[10:52:06] *** Quits: Yonle (~Yonle@user/yonle) (Read error: Connection reset by peer)
[10:54:34] *** Joins: Akronymus (~Akronymus@85.31.8.181)
[10:55:37] *** Quits: rany (~rany@user/rany) (Ping timeout: 248 seconds)
[10:56:40] *** Joins: rany (~rany@user/rany)
[10:57:25] *** Quits: art_vandelay_ (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 268 seconds)
[10:57:47] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[10:57:59] *** Joins: Fluxx (~Fluxx@user/fluxx)
[10:58:39] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:59:03] *** Joins: rany- (~rany@user/rany)
[10:59:31] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[10:59:58] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[11:01:06] *** Quits: rany (~rany@user/rany) (Ping timeout: 268 seconds)
[11:01:18] *** Lord_of_Life_ is now known as Lord_of_Life
[11:01:52] *** Quits: zwr (~zwr@2804:d45:b966:fb00:52be:b343:e29:2bea) (Ping timeout: 272 seconds)
[11:02:01] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 248 seconds)
[11:02:49] *** Joins: rany (~rany@user/rany)
[11:03:50] *** Quits: rany- (~rany@user/rany) (Read error: Connection reset by peer)
[11:06:23] *** Joins: rany_ (~rany@user/rany)
[11:06:54] <smallville7123> what happens when a View/ViewGroup tries to modify its own dimensions inside a container that positions/resizes it such as LinearLayout or ConstraintLayout ?
[11:08:02] *** Quits: rany (~rany@user/rany) (Ping timeout: 256 seconds)
[11:08:05] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[11:09:13] *** Joins: rany (~rany@user/rany)
[11:09:23] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[11:10:27] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[11:10:38] *** Joins: rany_ (~rany@user/rany)
[11:10:59] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[11:11:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[11:13:12] *** Joins: rany (~rany@user/rany)
[11:13:12] *** Joins: zwr (~zwr@2804:d45:b966:fb00:fb3d:9212:4807:9b0e)
[11:15:02] <webnet4> it gets converted into a non-euclidean spheroid
[11:15:24] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 256 seconds)
[11:16:13] *** Quits: gggp__ (~gggp@221.219.70.239) (Ping timeout: 258 seconds)
[11:16:28] <Arahael> smallville7123: From your accidental mention in #swift-lang, did you imply that all this...  Is dealing with macOS?  That's hugely significant context.
[11:16:30] <webnet4> jk, IDK
[11:16:35] *** Quits: bioparco (~bioparco@user/bioparco) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[11:16:47] *** Joins: bioparco (~bioparco@user/bioparco)
[11:18:01] *** Quits: rany (~rany@user/rany) (Ping timeout: 248 seconds)
[11:18:55] *** Joins: rany (~rany@user/rany)
[11:19:08] <smallville7123> ?
[11:19:08] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[11:20:25] <Arahael> "jk, IDK" means that webnet4 was joking, and that he didn't know.  He was being sarcastic because there wasn't enough context.
[11:24:09] *** Joins: anon16 (~anon16@user/anon16)
[11:24:16] *** Quits: rany (~rany@user/rany) (Ping timeout: 258 seconds)
[11:24:44] *** Joins: Yonle (~Yonle@user/yonle)
[11:24:49] *** Quits: shredder (~user@user/shredder) (Quit: quitting)
[11:26:09] <beaky> how come rust gets to have a gc-free runtime and not programming languages like haskell 
[11:26:10] *** Joins: shredder (~user@user/shredder)
[11:26:22] <beaky> what is the secret to rust's success
[11:26:29] *** Quits: d[^u^]y (~d^u^]y@user/duy/x-5876947) (Quit: d[^u^]y)
[11:26:31] <beaky> (besides its lack of higher-kinded types)
[11:26:59] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[11:27:44] <beaky> this is why rust is the programming language to learn this decade
[11:27:46] <Akronymus> Trying to unfuck a merge where my co-worker pressed "accept theirs" for every single conflict...
[11:27:50] <beaky> like how c++ powered the 2000s
[11:27:51] *** Quits: anon16_ (~anon16@user/anon16) (Ping timeout: 276 seconds)
[11:27:58] <Akronymus> And it wasn't just a few files. :(
[11:28:05] <Akronymus> s/files/conflicts
[11:28:32] <Akronymus> And of course it includes submodules
[11:28:46] <webnet4> beaky, how do you measure success of a lnguage?
[11:29:06] *** Joins: rany_ (~rany@user/rany)
[11:29:06] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 272 seconds)
[11:29:31] <beaky> the magnitude of demands to rewrite software in that language
[11:29:38] <beaky> rewrite the world in rust
[11:30:27] <webnet4> ah so it is successful because its users vigorously promote it
[11:30:42] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[11:30:50] *** Joins: rany (~rany@user/rany)
[11:31:16] <Akronymus> webnet4 users promoting it sadly != success.
[11:31:21] * Akronymus cries in f#
[11:31:33] <webnet4> lol f#
[11:31:37] *** Joins: matrixskp (~matrixskp@121-75-182-31.dyn.vf.net.nz)
[11:31:43] <Akronymus> Hey, it's a great language.
[11:32:14] <beaky> tho i really meant success as in how did they manage to achieve a language design that is both expressive and can have a efficient gc-less runtime
[11:32:47] <beaky> in rust everything is zero-cost
[11:32:54] <d3x0r> intelligent object lifetime tracking
[11:33:15] <beaky> in that regard rust succeeds where d failed
[11:33:16] <webnet4> like objects of varying lifetime scattered about the heap?
[11:33:16] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[11:33:17] <d3x0r> a lot of unique_ptr<> types
[11:33:34] <d3x0r> yes, unless they don't need to be on the heap
[11:33:38] *** Joins: aradesh (~aradesh@user/aradesh)
[11:34:51] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[11:34:53] *** Joins: rany_ (~rany@user/rany)
[11:35:53] <Akronymus> I personally, partially, like f# because it makes it HARD to have circular references.
[11:36:00] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[11:36:42] *** Quits: Batzy (~Batzy@user/batzy) (Ping timeout: 240 seconds)
[11:36:53] *** Quits: rany (~rany@user/rany) (Ping timeout: 268 seconds)
[11:36:57] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Remote host closed the connection)
[11:37:30] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:37:41] *** Joins: sjmulder (~sjmulder@81-204-179-161.fixed.kpn.net)
[11:37:53] <smallville7123> Akronymus: like A = B; B = A; ?
[11:37:56] *** Quits: rany_ (~rany@user/rany) (Read error: Connection reset by peer)
[11:37:58] *** Joins: rany (~rany@user/rany)
[11:38:11] <Akronymus> More like A -> B and B -> A
[11:38:34] <smallville7123> what about A -> B -> C and C -> D -> A
[11:38:45] <Akronymus> Not possible without a lot of work.
[11:38:50] <smallville7123> rip
[11:38:57] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[11:39:05] <Akronymus> Lot of work as in intentional.
[11:39:21] <Akronymus> Besides you don't really need circular references in f#
[11:39:30] <smallville7123> how do you do doubly linked list's and other structures that require references to other parts
[11:40:14] <Akronymus> You don't tend to use those very much if at all in f#
[11:40:18] <Akronymus> But lemme look itup
[11:40:19] <smallville7123> eg node -> ROOT or node -> PREV or A > B > PARENT > A
[11:40:31] <edgar-rft> it's much easier to transpose c# to f# than C to F, in music as well as computer programming :-)
[11:41:32] <Akronymus> Yeah, those are impossible without going into mutable afaik.
[11:41:36] *** Joins: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu)
[11:41:37] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:41:47] <Akronymus> Which, IMO, is a good thing.
[11:42:50] <beaky> C hashtag programming language
[11:42:51] <edgar-rft> yes, International Money Order is a good thing
[11:43:02] *** Quits: rany (~rany@user/rany) (Ping timeout: 272 seconds)
[11:45:52] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:48:07] <beaky> will there be more programming languages like rust in the future
[11:48:19] <beaky> but with lazy evaluation as a successor to haskell
[11:48:28] <beaky> imagine haskell but with both linear types and dependent types
[11:50:05] *** Joins: d[^u^]y (~d^u^]y@user/duy/x-5876947)
[11:52:19] <death916> be the change you want to see in the world
[11:52:29] <beaky> and an efficient gc-free runtime
[11:54:24] <edgar-rft> I think there would be no need for new programming languages if people wouldn't have the habit to use the biggest shit available by all means.
[11:55:18] <Akronymus> What? My ServerProducerBroadcasterComparatorCollectionUtilsPolicyDatabaseMappingServerInvocation is overkill?
[11:55:39] <beaky> yes we still have some decades of rewriting the world in rust ahead of us but i think someone has to start thinknig about rust 2.0
[11:55:42] <Akronymus> https://projects.haykranen.nl/java/
[11:55:46] <bayaz> Title: 
[11:56:15] <beaky> and the future of programming
[11:56:49] *** Joins: gggp__ (~gggp@123.113.182.84)
[11:57:36] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[11:57:43] <mrig> Good Morning.
[11:57:47] <beaky> hello im beaky
[11:57:55] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[11:58:07] <mrig> beaky: is rust not a little complicated?
[11:58:07] *** Joins: vysn (~vysn@user/vysn)
[11:58:14] <causative_> what programming needs is a language that abstracts away the details of where the data comes from, so you just do like a Prolog query and it's agnostic about whether the data is coming from a local variable, a database lookup, the user, etc
[11:58:23] <mrig> I've not yet tried it, but do get that impression.
[11:58:29] <causative_> you would configure where the data comes from independently of how the data is used
[11:58:45] <beaky> yes rust is complicated but it is worth it for the benefits of an efficient zero-cost-abstraction gc-free memory safe software
[11:59:25] <mrig> Is being GC free important for a distributed system?
[11:59:52] <beaky> not necessairly important by itself but it helps keep things efficient which is importatnt
[12:01:04] <mrig> Is it still possible to see the bigger picture, through all of that complexity?
[12:01:17] <mrig> Can one still name things well?
[12:01:42] <beaky> abstracting away all the details of where data comes from can be harmful like how all those rpc-based corba 90s designs led to a lot of problems since there are different guarantees about local vs. remote data transactions and how they should not be treated the same way 
[12:02:12] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[12:02:26] *** Quits: blinky42 (~quassel@user/blinky42) (Quit: No Ping reply in 180 seconds.)
[12:02:36] *** Joins: mickey8 (~user@user/mickey)
[12:03:15] <Akronymus> I really like how erlang just works.
[12:04:28] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[12:04:28] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[12:04:28] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[12:04:36] <beaky> the original idea was to write the code as if it were just ordinary code and treat the network transparently but turns out those network concerns were very important (so it should not be 'abstracted away' by making it look like ordinary calls) so i think thats a similar downside to making all data look the same whether its a local variable or a network db call for exmaple
[12:05:03] *** Joins: blinky42 (~quassel@jabber.blinkylight.net)
[12:05:03] *** Quits: blinky42 (~quassel@jabber.blinkylight.net) (Changing host)
[12:05:03] *** Joins: blinky42 (~quassel@user/blinky42)
[12:05:55] <Akronymus> I'd almost never want to grab data from a db sequentially over just grabbing a set. Like that?
[12:08:47] <beaky> yes like that and also the fact that it does not compose well (like if the client uses data which does a network call but then the server itself has data that involves a network call that in turn involves network calls all the way down and that gets hidden by making the remote stuff look like local stuff as in CORBA)
[12:09:32] <CuriousErnestBro> hello beaky 
[12:09:39] <beaky> hello im beaky
[12:09:41] <Akronymus> Ah yes, reminds me of microservices beaky
[12:09:45] <CuriousErnestBro> do you work on distributed systems?
[12:09:47] <mrig> Having not tried either C++ nor rust, I can't really gauge; Still learning CS basics with go for now :)
[12:09:49] <Akronymus> I don't like them.
[12:10:06] <CuriousErnestBro> mrig wat.jpg I thought you were a pro
[12:10:07] <beaky> no but hopefully i will one day figure out how to make my tea database distributed
[12:10:26] <CuriousErnestBro> use paxos 
[12:10:37] <Akronymus> Just make it exposed to the internet? someone will grab the data.
[12:10:37] <sjmulder> they're cooler pronounced like an Italian dish: micro-servee-chess
[12:11:13] <CuriousErnestBro> my homie leslie wrote a story about some island called paxos, and that revolutionized coputer sicenct
[12:11:14] <mrig> CuriousErnestBro: I will be a pro when I no longer make out by one errors in C.
[12:11:16] <CuriousErnestBro> computer science
[12:11:22] <mrig> not before then.
[12:12:03] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[12:12:10] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 272 seconds)
[12:12:14] *** Quits: inhahe__ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 252 seconds)
[12:12:49] <mrig> beaky: a multi continental tea distribution system; I thought that it was that already?
[12:13:05] <mrig> beakys tea emporium. 
[12:13:10] <CuriousErnestBro> mrig just program in rust and do database stuff like me and call yourself a "software architect"
[12:13:13] <CuriousErnestBro> :^)
[12:13:22] <beaky> no my humble tea database is curently limted to my personal tea storage
[12:13:35] <mrig> If it is done in rust none can refute the CS'ness of it.
[12:13:50] <beaky> yes i must rewrite my tea dtabase in rust after first formally specifying it in agda
[12:14:09] <Akronymus> I'd say haskell is more CS than rust.
[12:14:12] <mrig> CuriousErnestBro: I've spent years in the bilges of boats chipping away and grinding rust, I think that the name puts me off a little :D
[12:14:25] <beaky> i cant do it in rust because rust lacks higher kinded types which you need for functors which is the fundamental data structure of databases
[12:14:27] *** Joins: Camilo (~hugh@host-92-20-143-244.as13285.net)
[12:14:27] <mrig> Akronymus: I'd say that go is.
[12:14:33] *** Quits: leonardus (sid358597@tinside.irccloud.com) (Ping timeout: 252 seconds)
[12:14:37] <Akronymus> Sadly for where I am going to get my secondary education, java is gonna be the main language.
[12:14:39] <mrig> Haskell is more math
[12:14:42] *** Quits: xff0x (~xff0x@2001:1a81:53b6:2a00:9ab0:6dc8:ce66:af3c) (Ping timeout: 272 seconds)
[12:14:42] <Akronymus> Which... 
[12:14:49] * Akronymus screams into the void
[12:14:58] <Akronymus> mrig CS is mostly math though
[12:15:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:15:38] <Arahael> WHat's the native browser automation system for google chrome? Pretty sure they have their own... Not selenium.
[12:15:48] <CuriousErnestBro> beaky why not use sqlx?
[12:15:49] <mrig> Akronymus: well if you examine the origins of all the code that is running in the world and the systems that have been adopted, there is quite a strong argument that that not be the case.
[12:16:00] *** Joins: leonardus (sid358597@id-358597.tinside.irccloud.com)
[12:16:01] *** Joins: xff0x (~xff0x@2001:1a81:53d2:1c00:3b45:e81a:a20c:e310)
[12:16:05] <Arahael> Ah, puppeteer.
[12:16:19] <beaky> what is sqlx
[12:16:30] <Akronymus> sql expanded?
[12:16:34] <CuriousErnestBro> beaky you can create "pools" with it to popular databases
[12:16:35] <Akronymus> extended?
[12:16:48] <CuriousErnestBro> no idea what a pool is, seems to be the same as a connectino
[12:17:06] <CuriousErnestBro> SQLx is an async, pure Rust‚Ä† SQL crate featuring compile-time checked queries without a DSL.
[12:17:10] <Akronymus> a pool is basically a large bucket. /s
[12:17:56] *** Joins: kodah (~kodah@user/kodah)
[12:17:59] <mrig> Akronymus: though that said, I've not used Haskell and am still learning math, despite the reality that I see math everywhere.
[12:18:12] <mrig> I am illiterate you see.
[12:18:22] <Akronymus> Haskell is DEEPLY routed in type theory.
[12:18:24] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[12:18:25] <beaky> i wont use sql for my tea database i will invent a new query language because sql is bad because sql lacks the expressive capabilities required to conveniently express all tea database relate queries for reasons explained by this long article https://scattered-thoughts.net/writing/against-sql/
[12:18:27] <bayaz> Title: Against SQL 
[12:18:29] <mrig> Akronymus: so is reality.
[12:18:34] <CuriousErnestBro> you seem to know english pretty well
[12:18:36] <Akronymus> You don't look illiterate to me mrig
[12:18:38] *** Joins: Auron (~Auron956@user/auron)
[12:19:01] <CuriousErnestBro> beaky is that your article
[12:19:07] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[12:19:10] *** Joins: repne_scasb (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[12:19:10] <mrig> CuriousErnestBro: cant spell in English, the language makes no logical sense to me, I speak French too, but can not write it.
[12:19:20] <Akronymus> beaky and sql still feels infinitely more useful than every orm I ever worked with.
[12:19:30] <mrig> Akronymus: dyslexical, but illiterate is better.
[12:19:30] <CuriousErnestBro> how are you typing this then?
[12:19:39] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[12:19:43] <Akronymus> Dyslexia sucks.
[12:19:51] <Akronymus> But isn't illiteracy
[12:20:03] <sjmulder> Akronymus, I too prefer not using ORM. mapping to typed structures is useful, the relational bit I don't like
[12:20:07] <mrig> cant get a job due to this, see years spent chipping and grinding rust in the bilges of boats as exhibit A.
[12:20:07] <Akronymus> mrig Comic sans may be a good font for you.
[12:20:21] <Akronymus> Not even joking.
[12:20:49] <Akronymus> http://omgfacts.com/comic-sans-helps-people-with-dyslexia
[12:20:49] <mrig> Akronymus: devanagari will perhaps solve issues.
[12:20:49] <mrig> deadly serious
[12:21:00] <mrig> What is dyslexia?
[12:21:14] <mrig> seems like a curios belief system to me.
[12:21:26] <Akronymus> You seem to be trolling.
[12:21:28] <mrig> language is a fascinating thing.
[12:21:42] <Akronymus> YOU were the one that brought up dyslexia first.
[12:21:45] <mrig> Akronymus: I am not.
[12:21:54] <mrig> Akronymus: what language to use then?
[12:22:02] <Akronymus> mrig09:49:30
[12:22:03] <Akronymus> Akronymus: dyslexical, but illiterate is better.
[12:22:18] <mrig> I have been told that I am, I prefer illiterate.
[12:22:29] <Akronymus> Illiterate = Can't read.
[12:22:41] <Akronymus> Dyslexia = swapping letters around
[12:22:41] <beaky> CuriousErnestBro: no it is someone else's article but it sums up why i think sql is bad for years ive just been saying 'it lacks abstraction' but now i can just point to that article that explains exactly how sql lacks in abstraction
[12:22:45] <mrig> Reading is hard yes.
[12:22:49] <mrig> writing too.
[12:22:56] <mrig> better with sound.
[12:23:01] <Akronymus> And comic sans is a font, rather than language.
[12:23:07] <piou> Akronymus: in the same idea I love Atkinson Hyperlegible (https://brailleinstitute.org/freefont) I wouldn't use it everywhere but when I'm looking for a font that has to be really readable and non-ambiguous I choose this one.
[12:23:07] <CuriousErnestBro> beaky ok, I want to trust it because the guy uses the same color theme as I do (Ayu light, it's the best theme there is)
[12:23:21] <beaky> woah so thats what the theme is called I have to get it too then
[12:23:21] <mrig> Akronymus: in france the whole thing is 'typed' differently to English speaking world.
[12:23:32] <mrig> the types system is different.
[12:23:37] <mrig> as it is also in sanskrit
[12:23:44] <mrig> now back to which language is best ...
[12:23:52] *** Joins: Rounin (~david@84.212.130.215)
[12:23:57] <Akronymus> Oh, I meant types as in data types.
[12:24:01] <beaky> installed for emacs
[12:24:03] <Akronymus> Rather than grammar 
[12:24:09] <mrig> Akronymus: source code pro is quite nice.
[12:24:30] <mrig> font and type setting make a big difference, as does tab size.
[12:25:22] <CuriousErnestBro> beaky my issue with SQL is that the errors are bad, they don't help you
[12:25:32] <CuriousErnestBro> I can put up with a lot, but not that
[12:25:35] <mrig> Akronymus: when you mentioned how Haskell is deeply rooted in type theory, I wanted to give you a notion of what types mean to me.
[12:25:36] <amigojapan> mrig: anyway most programming languages have keywords derived from English
[12:25:51] <beaky> yes if sql were a better language the errors would be better i think 
[12:25:55] <Akronymus> mrig got it. 
[12:26:15] <Akronymus> SQL is a great language for querying relational data.
[12:26:19] <Akronymus> But not much else.
[12:26:34] <piou> SQL being a language and not a standard API is an issue in and of itself
[12:26:49] <mrig> amigojapan: yes the ascii base is spread quite widely.
[12:26:52] <Akronymus> Altough, never really had an issue with error messages.
[12:27:06] <CuriousErnestBro> beaky http://0x0.st/-JT7.png
[12:27:07] <bayaz> Type: image/png Size: 404.0 kB 
[12:27:12] <Akronymus> (Except mysql. but thats more because mysql sucks rather than sql)
[12:27:22] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 272 seconds)
[12:27:25] <beaky> CuriousErnestBro: yes this is the perfect emacs theme
[12:27:26] *** Joins: kwilczynski (sid379192@user/kwilczynski)
[12:27:35] <CuriousErnestBro> good you agree :)
[12:27:40] <amigojapan> mrig: I have tried a couple of languages that use Japanese to program in
[12:27:40] <CuriousErnestBro> ‚ó°Ãà 
[12:28:03] <mrig> amigojapan: How many glyphs in the Japanese script?
[12:29:11] <amigojapan> mrig: the government recognises 2000 glyphs as every day Kanji. But in total there are many many more obscure ones
[12:29:11] <mrig> I am rather curious to know how they approached doing this.
[12:29:29] <Akronymus> beaky i never really liked emacs.
[12:29:32] <Akronymus> VIM ftw.
[12:29:47] <Akronymus> altough, emacs is still better than nano at least.
[12:29:50] <CuriousErnestBro> emacs has shit defaults 
[12:29:50] <mrig> amigojapan: This would be a bit of a barrier to developing as a programming language I would imagine, unless you select just a small subset?
[12:30:10] <amigojapan> mrig: why
[12:30:18] <CuriousErnestBro> Akronymus you need to spend a lot of time to make emacs good, vim is decent out of the box
[12:30:25] <piou> tbf vim defaults arern't great either at best
[12:30:32] <mrig> amigojapan: does not fit well into the Sierpinski gasket.
[12:30:35] <Akronymus> vim defaults are workable.
[12:30:40] <CuriousErnestBro> ^
[12:30:42] <Akronymus> emacs not so much.
[12:30:56] <Akronymus> Hence why every emacs user has a heavily customized setup
[12:31:03] <CuriousErnestBro> me2
[12:31:05] <CuriousErnestBro> wanna see it?
[12:31:13] <piou> They're ok at best... vim defaults don't even have colors
[12:31:19] <mrig> amigojapan: a way of saying that the scaling from binary to lexems is going to be quite unbalanced.
[12:31:28] <amigojapan> mrig: usually commands are multiple glyphs not one, for example "for"is Áπ∞„ÇäËøî„Åó
[12:31:31] <piou> Most systems ship with decent vim defaults, that I agree with
[12:31:32] <Akronymus> so you can't just use the config from someone else because you very likely have a different setup
[12:31:58] <Akronymus> While vim is either untouched or barely customized.
[12:32:06] <mrig> amigojapan: I'm thinking only of the mathematical scale, iching glyphs would be perfect for example
[12:32:22] <amigojapan> mrig: not just reach Glyph being a command, that's not the way it works
[12:32:36] <CuriousErnestBro> piou using emacs defaults will give you a tennis arm
[12:32:47] <beaky> yes in emacs it is important to at least always customize the default tabs to output spaces and set it to two spaces
[12:32:55] <piou> CuriousErnestBro: Oh, I'm certainly not trying to argue that emacs is better than vim on that point
[12:32:55] <death916> thats why you use spacemacs
[12:32:58] <death916> or doom
[12:33:06] <beaky> nice i like doom emacs
[12:33:07] <mrig> amigojapan: I am only thinking of entropy here.
[12:33:11] <CuriousErnestBro> idk what doom emacs is 
[12:33:17] <death916> its liek spacemacs
[12:33:22] <CuriousErnestBro> idk what that is either
[12:33:23] <death916> but different config
[12:33:34] <death916> vim + emacs
[12:33:35] <piou> CuriousErnestBro: the first thing I do in emacs is M-x viper
[12:33:43] <CuriousErnestBro> what does that do?
[12:33:51] <CuriousErnestBro> death916 oh I thought that was "evil mode"
[12:34:00] <sjmulder> what about some of these newer terminal editors - neovim, micro, etc?
[12:34:01] <amigojapan> mrig: the Japanese language does not limit itself to one glyphs per word
[12:34:08] <death916> it is but spacemacs is configs with evil mode build in mind
[12:34:08] *** Joins: Lyn (~Lyn@user/law)
[12:34:10] <CuriousErnestBro> I've used nvim for a while
[12:34:13] <death916> jus pre built custom config rlly
[12:34:18] <CuriousErnestBro> brb gonna set ls to ls -lah 
[12:34:28] <piou> CuriousErnestBro: it uses emacs but with vim bindings
[12:34:37] <death916> jus google it
[12:34:37] <death916> lol
[12:34:39] <mrig> amigojapan: Is it constructed based on concepts, perhaps or phonemes?
[12:34:43] <death916> instead of me tryna explain it poorly
[12:34:52] <CuriousErnestBro> piou nice, I like { and } in vim, it jump to the end of the paragraph
[12:34:57] <CuriousErnestBro> afaik emacs doesn't have it 
[12:34:58] *** Quits: Gozrad (~Gozrad@46.232.210.50) (Quit: The Lounge - https://thelounge.chat)
[12:34:58] *** Quits: audiocat (~audio@2603-8081-1800-00ad-312c-8a7d-098f-4cc5.res6.spectrum.com) (Remote host closed the connection)
[12:35:08] <sjmulder> mrig, there are two phonetic alphabets in addition to kanji
[12:35:08] <mrig> amigojapan: what does a lexical unit tend to be?
[12:35:11] *** Joins: Gozrad (~Gozrad@46.232.210.50)
[12:35:17] *** Joins: audiocat (~audio@2603-8081-1800-00ad-e61c-eef0-ffd7-1da5.res6.spectrum.com)
[12:35:24] <piou> CuriousErnestBro: with viper it does
[12:35:50] *** nf__ is now known as nf
[12:35:52] <Akronymus> I use stuff like d3w quite often in vim. or 4dd 
[12:36:11] <amigojapan> mrig: it can be over Glyph of many, combined with hiragana, or just katakana, or just hiragana
[12:36:11] <mrig> sjmulder: oh cool, how are those constructed; I know nothing about Japanese, this is pretty intersting.
[12:36:22] <beaky> emacs has those too using C-up or C-down
[12:36:24] <piou> CuriousErnestBro: I mean, if you would like more vim in your emacs then viper is nice, it's installed by default AFAIK and there are different levels of integration into emacs from "This feels like vi all arround" to "this is mostly emacs with specific things from vi"
[12:36:29] <beaky> and evil mode of course
[12:36:33] <CuriousErnestBro> actually I just use vs code like a sane person 
[12:36:47] <Akronymus> I like that vims commands are composable
[12:36:51] <beaky> i like vim but i use emacs because i am forced to use emacs because i use it for my email and for the coq and agda ide
[12:36:52] <amigojapan> mrig: Japanese has the most complex writing system in the world
[12:37:18] <Akronymus> d(delete)3(three)w(words)
[12:37:21] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[12:37:35] <mrig> amigojapan: This is why I mentioned the scaling issue previously.
[12:37:39] <sjmulder> mrig, both hiragana and katakana, these are the phonetic ones, represent somtehing akin to a syllable, like 'ha'
[12:37:56] <mrig> without logic scaling is a little tricky it would seem.
[12:38:03] <Akronymus> Rather than having some keybind that uses modifier keys and doesn't have any semantic meaning.
[12:38:22] <CuriousErnestBro> mrig you sure know a lot of words for an illiterate 
[12:38:23] <CuriousErnestBro> :^)
[12:38:27] <sjmulder> mrig, hiragana is used for e.g. grammatical constructs and spelling. katakana mainly for spelling foreign words
[12:38:40] <Akronymus> And the third one?
[12:38:44] <sjmulder> but I don't really know much other than the basics
[12:39:09] <sjmulder> kanji is derrived from Chinese characters
[12:39:10] <mrig> there is a link in language to scaling and longevity with the Feigenbaum constant, I would stake a lot on that.
[12:39:11] *** Joins: mikeliuk (~mikeliuk@109.249.187.96)
[12:39:30] <mrig> That relates to complexity.
[12:39:48] <mrig> sjmulder: Right that makes sense.
[12:40:32] <mrig> It would be really hard to introduce new words otherwise.
[12:40:50] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[12:41:00] <Akronymus> Fun fact: What most people think of sql as, is actually multiple languages.
[12:41:05] <sjmulder> those suffixes and prefix you often hear like -san are all hiragana
[12:41:23] <CuriousErnestBro> beaky do you use a mac/
[12:41:46] <Akronymus> https://www.geeksforgeeks.org/sql-ddl-dql-dml-dcl-tcl-commands/
[12:41:47] <bayaz> Title: SQL | DDL, DQL, DML, DCL and TCL Commands - GeeksforGeeks 
[12:41:54] <mrig> Oh ok, so those are added to the standard glyphs using the phonetic additional glyphs?
[12:42:16] <beaky> CuriousErnestBro: no i use gentoo 
[12:42:25] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[12:42:34] <sjmulder> mrig, yes, from what I understand
[12:43:48] <piou> mrig: I¬†wouldn't call kanji "the standard glyphs" since it's the last writting system you learn, but still
[12:44:04] <sjmulder> they're all fairly easy to recognise btw even for a lay person: the complicated characters are kanji, the pretty ones are hiragana, the primitive looking ones made out of mostly straight lines are katanaka
[12:44:06] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 268 seconds)
[12:44:17] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[12:44:40] <beaky> i like katanakana it looks cool
[12:45:00] <sjmulder> initially I was surprised at having two alphabets representing the very same things
[12:45:02] <CuriousErnestBro> why are programmers obsessed with japanese culutre
[12:45:12] <sjmulder> but then isn't that really the same for c‚Äèursive and print
[12:45:14] <CuriousErnestBro> why not arabic, or brazilian, or vietnamese
[12:45:20] <CuriousErnestBro> or any other culture
[12:45:21] <mrig> piou: Oh I see, you start out with the phonetic one?
[12:45:23] <Akronymus> I suspect a large overlap between weebs and programers.
[12:45:25] <CuriousErnestBro> are you all secretly weebs?
[12:45:39] <sjmulder> CuriousErnestBro, haha not at all. I played taiko for a bit because it was fun
[12:45:44] <piou> mrig: yes, children books are written mostly in hiragana, have katakana, and either no kanji or kanji with little hiragana on the side to show how it's pronounced
[12:45:46] <Akronymus> Yes, including yourself CuriousErnestBro
[12:45:54] <mrig> CuriousErnestBro: I'm not, I'm obsessed with Indian science.
[12:45:54] <CuriousErnestBro> Akronymus how did you know
[12:46:05] <sjmulder> I'm all into German now
[12:46:07] <piou> CuriousErnestBro: nothing secret about it
[12:46:08] <CuriousErnestBro> I'm a recovering weeb 
[12:46:19] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:46:21] <Akronymus> sjmulder Austria > germany though
[12:46:24] <mrig> piou: what about musical notation?
[12:46:27] <Akronymus> Sincerly, a austrian.
[12:46:30] <beaky> i want to get this katanakana keycap set just for the sheer weeaboo factor https://cdn10.bigcommerce.com/s-ktpi93fl/products/205/images/746/Otaku__55668.1548785818.1280.1280.jpg
[12:46:31] <bayaz> Type: image/jpeg 
[12:46:39] <sjmulder> trying to decypher Der Marsianer
[12:46:56] <sjmulder> Akronymus, all the cool German language musicals come from Austria!
[12:46:57] <Akronymus> If you need anything translated shoot it over to me
[12:47:17] <Akronymus> But remember AEIOU
[12:47:31] <piou> mrig: they switched to the european one during the 50s, but their musical theory system is still quite different from the european one
[12:48:18] <sjmulder> beaky, what are the characters on the function keys on top?
[12:48:24] <piou> mrig: here's an example of "little hiragana to show how it's pronoced" -> https://i.ytimg.com/vi/WAIwugtwhGY/maxresdefault.jpg on the left the two characters after "10" are kanji, but their pronounciation is written on the side for children to be able to learn them
[12:48:25] <bayaz> Type: image/jpeg Size: 184.5 kB 
[12:48:30] <mrig> piou: That's pretty interesting, so phonetic system is constructed and then from that the pronunciation of a form of 'acronym' (loose analogy) is made. 
[12:49:02] <beaky> smallville7123: chinese numerals https://en.wikipedia.org/wiki/Chinese_numerals
[12:49:03] <bayaz> Title: Chinese numerals - Wikipedia 
[12:49:09] <beaky> oops i meant sjmulder https://en.wikipedia.org/wiki/Chinese_numerals
[12:49:09] <bayaz> Title: Chinese numerals - Wikipedia 
[12:49:09] <sjmulder> Akronymus, we were supposed to go to Vienna a year ago on the sleeper train to see Elisabeth but it got delayed twice due to covid and now the star won't be performing :(
[12:49:40] <Akronymus> For vienna, IMO you HAVE to go to the "Donauinselfest" if/when you get the chance.
[12:49:46] <sjmulder> beaky, interesting
[12:49:58] <Akronymus> Free entry to one of, if not the best music festivals.
[12:50:05] <sjmulder> incel fest?
[12:50:13] <Akronymus> Donau = danube
[12:50:17] <Akronymus> insel = island
[12:50:20] <sjmulder> jk, will check out!
[12:50:21] <Akronymus> fest = festival
[12:50:53] <piou> mrig: I'd say that it's because contrary to mandarin script before being a spoken one in Japan writting began phonetically then incorporated kanjis from China as a set of shortcuts, they didn't develop in the same way at all
[12:50:56] <mrig> English is a mish mash but and much of the higher education is about learning lots of log words and then reducing those to acronyms.
[12:51:21] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 248 seconds)
[12:51:29] <mrig> longer words, that are currently using a system vaguely similar to Sanskrit for their construction.
[12:52:26] <mrig> piou: I wonder was this linguistic formation of the kanjis used to construct logic too?
[12:52:41] <mrig> or scientific work, that sort of thing.
[12:52:49] <piou> yeah, in English you have basically, what, 3 languages? Celtic, German and French origins. To begin (German), to commence (French), to start (Celtic)...
[12:53:09] <piou> mrig: not sure what you mean there
[12:53:13] <piou> used how?
[12:53:21] <Akronymus> Pretty sure it is actually that german and english have a common ancestor
[12:53:32] <Akronymus> Does anyone here enjoy doing regex?
[12:55:09] <piou> I do
[12:55:12] <piou> Akronymus: either they have a common ancestor and english became its own thing when celtic come into the mix, or english was more celtic than anything before german-speaking people influenced it. Sounds like two faces of the same coin really. 
[12:55:52] <piou> When I say German and French it's not as if we were talking about today's Hochdeutsch or French anyway
[12:55:58] <sjmulder> English has a large vocabulary as well and pronunciation/spelling is rote memorisation
[12:56:51] <Akronymus> English had vowel shifts and such after printing was common.
[12:56:51] <sjmulder> watching 'Tehran' I was surprised how many words Persian (Farsi? sorry dunno) has in common with Germanic languages
[12:57:02] <Akronymus> Most other languages had them before printing was common.
[12:57:11] <sjmulder> but it's from the same language family, I had no idea
[12:57:14] <piou> sjmulder: tbf, most languages do. Maybe spanish is an exception since spanish-speaking countries regularly meet to make sure the language isn't becoming too wild
[12:57:27] <Akronymus> Which is why english spelling differes so much from pronounciation.
[12:58:19] <sjmulder> Akronymus, perhaps not such huge shifts but every language changes with time, but some of them update their spelling
[12:58:41] <sjmulder> Dutch spelling now is quite different from the 1800s
[12:58:51] <Akronymus> That's fair.
[12:59:09] <Akronymus> But most of those shifts are quite slow.
[13:01:00] <Arahael> Akronymus: Go to project gutenberg, and read a book from just a hundred years ago.  In the case of english, our spelling hasn't changed, but the mannarisms and the way we write has changed quite a bit.
[13:01:03] <Arahael> *mannerisms.
[13:01:24] <Akronymus> Yeah.
[13:01:36] <Akronymus> I was talking spelling and phonetics specifically though
[13:01:53] <Akronymus> Also: Don't force children to READ shakespeare.
[13:01:59] <Akronymus> He wrote plays, not books.
[13:02:07] <Akronymus> Give them the plays.
[13:02:32] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[13:03:13] <CuriousErnestBro> sjmulder is tehran any good?
[13:03:35] <sjmulder> CuriousErnestBro, I liked it
[13:05:07] <sjmulder> but in general I'm a sucker for international stuff
[13:06:23] *** Joins: plastico (~plastico@neomutt/plastico)
[13:06:24] <piou> There is so much fun legacy from before printing... One of my favourites in French is that you make agree the past participle with the noun it refers too only if that noun is present before the past participle. Example: "The cocks we heard were loud" -> "Les coqs que nous avons entendus √©taient bruyants" ; "We heard loud cocks" -> "Nous avons entendu des coqs bruyants"  (No "s" at entendu in the
[13:06:30] <piou> second case). This rule seems completely arbitrary since we're talking about the same action on the same thing in both cases, but the reason why it exists is that when monks were transcribing what another was dictating they didn't yet know what to make the past participle agree with if the noun hadn't been said yet, so they made it agree when possible and left it alone the rest of the time.
[13:07:38] <piou> (Damn, I just discovered what "to make agree" means in English... Yeah, vocabulary!)
[13:09:40] <mrig> Oh that is pretty interesting, the need generated by the temporal element of the text when transcribing?
[13:09:50] <piou> Yep
[13:09:53] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[13:11:44] <mrig> The nice thing about sanskrit is that the lack or requirements in word order permit the use of the meter in ways that are not otherwise possible, such as for encoding meta information such as math, or, for insuring that the content not be fiddled with in transmission.
[13:12:42] *** Joins: user51 (~user51@176.228.90.248)
[13:12:53] *** Joins: fuzzykef (~furrykef@ip68-229-199-137.ok.ok.cox.net)
[13:13:15] <mrig> Languages and encoding, such a cool thing :)
[13:13:33] *** Joins: ixil (~ixil@82.197.178.137)
[13:13:39] <piou> I'm having trouble visualizing what you mean by that, do you have an example?
[13:13:54] <piou> For encoding meta information etc
[13:14:17] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 248 seconds)
[13:14:40] *** Quits: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net) (Ping timeout: 258 seconds)
[13:15:26] <mrig> sure yes, the sanskrit mathmatician who inspired Al-Bharini towards algebra used syllables as numerical values in his work on number systems and math.
[13:16:15] *** Quits: soapsudsxx (~soapsudsx@209.221.40.143) (Remote host closed the connection)
[13:16:20] <piou> Oh, I see, so it adds another layer of information
[13:16:24] <mrig> There is a poem that I was just looking for that encodes pi up to 32 places too. If you memorise the poem you have memorised pi to 32 places.
[13:16:34] <piou> TBF we have than in French also
[13:17:02] <mrig> piou: yes, this is that which insures the validity of the content too.
[13:17:16] <mrig> Oh cool, do you perhaps have an example of that in French?
[13:17:22] *** Joins: jmft2 (~JMFT@81.149.115.87.dyn.plus.net)
[13:17:35] <piou> "Que j'aime √† faire apprendre ce nombre utile aux sages. Immortel Archim√®de, artiste, ing√©nieur, qui de ton jugement peut priser la valeur ? Pour moi ton probl√®me eu de pareils avantages."
[13:17:49] <piou> The number of letters in each word gives pi decimals
[13:18:50] <piou> Roughly translated: "How I like to make known that number useful to the wise. Immortal Archimedes, artist, engineer, who can grasp the value of your judgement? To me your problem had its own advantages."
[13:19:03] <mrig> oh cool :)
[13:19:18] <mrig> Much harder to do in French!
[13:19:27] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[13:20:06] <mrig> In Sanskrit, the syllables actually have numerical values, and are numbers at the same time as being phonems.
[13:20:22] *** Quits: zwr (~zwr@2804:d45:b966:fb00:fb3d:9212:4807:9b0e) (Remote host closed the connection)
[13:20:39] *** Joins: zwr (~zwr@2804:d45:b966:fb00:fb3d:9212:4807:9b0e)
[13:20:40] <mrig> rather that counting them.
[13:20:43] <mrig> than.
[13:20:53] <piou> yeah, it is harder to have to count them
[13:21:00] <mrig> so the loose word order makes it easier to use.
[13:21:17] <mrig> loose dependence upon word order rather.
[13:21:59] *** Quits: matrixskp (~matrixskp@121-75-182-31.dyn.vf.net.nz) (Quit: My comp has gone to sleep to save energy. ZZZzzz‚Ä¶)
[13:23:43] <piou> There's a trick used in memorization to convert consonnant sounds into digits. There's this old French sentence "Dieu ne me rend la joie qu'√† vos pieds saints" whose first sounds of each word is associated with the number ({"d":1, "n":2, "m":3 ...}). The sentence has religious conotation because it was invented by monks but it's still useful today. For example say I want to remember 1492 I would
[13:23:49] <piou> decompose it into 1 4 9 2 giving me the sounds "d/t", "r", "p/b", "n" and I can compose words from that, "Dear poney" for example.
[13:24:47] <piou> I use that more than fiddling with the number of letters
[13:26:02] <piou> As for word order, I see how it can be useful. That's used quite a lot in Latin to hold suspense or control the rythm of the spoken word for poetry. Not that French doesn't have some flexibility but it's not the same.
[13:26:19] <mrig> Here is ƒÄryabha·π≠a's system, to my knowledge is is really part of the linage of work that went into devising modern algebra: https://en.wikipedia.org/wiki/%C4%80ryabha%E1%B9%ADa_numeration
[13:26:20] <bayaz> Title: ƒÄryabha·π≠a numeration - Wikipedia 
[13:26:22] <piou> u
[13:28:12] <amigojapan> piou: few people say "we should not use something cause it was invented by someone religious" Newtown was deeply religious
[13:28:32] <mrig> The meter then grows into a science all of its own, relates to how you want what is written to 'dance' in time, or resonate, this is reflective of the more complicated time signatures found in the music of the culture too; Known as Chandas.
[13:29:05] <mrig> So the rhythm is believed to have more physical properties than just aesthetic.
[13:29:59] <mrig> Well saying just aesthetic, I am applying a modern understanding of the word and not keeping to its original meaning.
[13:30:05] <piou> amigojapan: sure, but that's not what I¬†meant at all. The sentence litterally means "God only gives me joy at your holy feet" which goes beyond having been invented by monks
[13:30:09] <mrig> so ambiguous.
[13:30:42] <piou> mrig: I can't say I¬†like having the most significative number at the end, but that must be a metter of habit
[13:31:21] <amigojapan> piou: non religious people also say "thank God"and "go to hell"
[13:31:38] <piou> Very interesting for the meter
[13:33:22] <mrig> The numbers tend to be perceived as exponential rather than linear, Perhaps this is why? We still put exponentiation on the right side.
[13:33:43] <mrig> The meter and its use are fascinating, very powerful concept.
[13:34:28] <mrig> used also to assist in the memorisation.
[13:34:58] *** Joins: usr123 (~usr123@125.62.117.238)
[13:35:26] <mrig> I must make a note of the phrase for pi in French that is awesome.
[13:36:35] <mrig> well for digits, this system :)
[13:37:30] <user51> gday everyone
[13:38:14] <GeDaMo> Hi user51 :)
[13:38:31] <user51> databases are interesting to me lately. ullman's books any good?
[13:38:36] <user51> sup GeDaMo 
[13:38:42] <sjmulder> gah annoyed my PC won't run Windows 11. it's perfectly fast and I don't have a need for the TPM stuff
[13:38:53] <user51> how you doing?
[13:38:59] <GeDaMo> OK
[13:39:48] <GeDaMo> I'm watching old Doctor Who episodes I found on archive.org
[13:40:27] <user51> i hope archive.org is recursive
[13:40:37] <piou> mrig: Hmm... How can I explain my feeling. Let's say I must multiply 128 and 734 by head. I could start with 8x4, but I'd rather start with 1x7=7 (7), 1x3+7x2=17 (87), 1x4+2x3+7x8=66 (936), 2x4+3x8=32 (9392) and finaly 8x4=32 for a final result of 93952. As you can see by starting with the most significant number my error is much reduced: accounting for the power of ten even stopping at the first
[13:40:43] <piou> step I'm at 70000 for 93952, contrary to 32 for 93952 if I¬†start on the other hand. This means that later errors have much less impact on the result, making it a safer way to compute. Of course that's mostly because I'm doing things by head but it emphasizes how important these most significant numbers are to estimate how big something is, so it's something I want as soon as possible. (Not sure
[13:40:49] <piou> it's worth bitching on the Sanskrit system though, that's very minor)
[13:41:50] <user51> would be pretty easy to implement, make a directory that links to all the archive files. then cd infinitely :D
[13:42:58] <amigojapan> Sorry I thought I was in another channel
[13:43:46] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Quit: This is the hidden truth, the world between the lines.)
[13:43:48] *** Joins: rany (~rany@user/rany)
[13:45:35] *** Quits: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu) (Remote host closed the connection)
[13:46:19] *** Joins: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu)
[13:47:16] *** Quits: d[^u^]y (~d^u^]y@user/duy/x-5876947) (Remote host closed the connection)
[13:48:10] <paulo> my interviewer does not know what time complexity is - red flag?
[13:48:54] *** Quits: rany (~rany@user/rany) (Ping timeout: 276 seconds)
[13:49:10] <sjmulder> depends on the product
[13:49:49] *** Joins: rany (~rany@user/rany)
[13:49:55] <piou> paulo: you probably wouldn't like to be judged for that job on not knowing a specific term
[13:50:00] *** Joins: qu4nt1n (~qu4nt1n@194.5.53.64)
[13:50:26] *** Quits: kbmonkey (~kbmonkey@60.230.132.250) (Quit: logging off)
[13:50:40] *** Quits: zwr (~zwr@2804:d45:b966:fb00:fb3d:9212:4807:9b0e) (Ping timeout: 256 seconds)
[13:51:25] *** Joins: zwr (~zwr@2804:d45:b966:fb00:fb3d:9212:4807:9b0e)
[13:52:32] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[13:52:50] <paulo> have I been having too many interviews, cause time complexity feels like a com sci/programming fundamental
[13:53:14] <sjmulder> I'd be surprised too
[13:53:33] *** Joins: rany_ (~rany@user/rany)
[13:53:41] <paulo> I was given a coding exam, I asked "what's your expected time complexity?"
[13:54:02] <paulo> The answer he first gave was "45mins to 1 hour"
[13:54:10] <sjmulder> ha
[13:54:14] <sjmulder> that's a lot of CPU time ;)
[13:54:21] <paulo> then I clarified "I meant Big O"
[13:54:39] <paulo> he replied with "What do you mean? I'm not familiar with the term"
[13:54:48] *** gggp__ is now known as gggp
[13:55:01] *** Quits: rany (~rany@user/rany) (Ping timeout: 268 seconds)
[13:55:49] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[13:56:00] *** Joins: tolot (~tolot@dynamic-093-132-139-129.93.132.pool.telefonica.de)
[13:56:09] <CuriousErnestBro> paulo lmao
[13:56:11] <sjmulder> I feel like I haven't actually been programming for years now, wonder if I could even do one of those tests any more
[13:56:17] <CuriousErnestBro> you don't need big o in the real world
[13:56:26] <sjmulder> just video calls and low code crap
[13:56:34] <CuriousErnestBro> just need to know to avoid nested loops when possible
[13:56:40] <CuriousErnestBro> sjmulder are you dutch?
[13:56:44] <sjmulder> yes
[13:56:46] *** Joins: qu4nt1n|2 (~qu4nt1n@78.198.214.34)
[13:56:47] <CuriousErnestBro> same
[13:57:20] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[13:57:29] *** Joins: Burgundy (~yomon@5-12-93-72.residential.rdsnet.ro)
[13:57:30] <paulo> I wasn't asked about SOLID principles and Design Patterns
[13:57:42] <paulo> I should've brought it up though
[13:57:42] <CuriousErnestBro> idk what SOLID is 
[13:57:51] <CuriousErnestBro> I only know MVVM as a design pattern
[13:58:09] <piou> paulo: what kind of job is that?
[13:58:10] <sjmulder> CuriousErnestBro, do any work in the .NET world?
[13:58:34] <CuriousErnestBro> sjmulder never worked with it 
[13:58:35] <CuriousErnestBro> why?
[13:58:39] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 276 seconds)
[13:58:43] <sjmulder> I've only seen MVVM pop up there
[13:58:49] <piou> paulo: if it's for a tech lead then it sounds like they need one :)
[13:58:59] <paulo> MVVM isn't a design pattern, it's an architectural pattern
[13:59:02] <CuriousErnestBro> sjmulder it's also used in SwiftUI
[13:59:31] <mrig> piou numbers are not considered to be atomic in the same what that they are in decimal math systems, fractions as 'chakra' or pie chart type divisions are used and rounding is made into a ceremonious affair rather than being considered an unwanted glitch; There is an overlying type system that is used, in parallel with scientific observation.
[13:59:35] <CuriousErnestBro> paulo what's a design pattern then? OOP?
[13:59:36] <mrig> same way
[13:59:45] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:59:50] *** Quits: qu4nt1n (~qu4nt1n@194.5.53.64) (Ping timeout: 272 seconds)
[13:59:53] <sjmulder> CuriousErnestBro, oh that's right yes. I stil have a soft spot for Objective-C though
[14:00:44] <piou> CuriousErnestBro: a Flyweight, a Command, an Observer...
[14:01:06] <paulo> piou: The person who interviewed me is a Sr. Technical Director 
[14:01:22] <paulo> I just found his linkedin page
[14:01:32] <piou> paulo: meeeeeh
[14:01:36] <sjmulder> paulo, like me, he's probably getting all his time and energy sucked out doing mostly nothing, then
[14:01:44] *** Quits: qu4nt1n|2 (~qu4nt1n@78.198.214.34) (Ping timeout: 272 seconds)
[14:02:35] <CuriousErnestBro> sjmulder I'm too young for objc, I'm building my app in swift
[14:02:46] <CuriousErnestBro> piou never heard of thenm...
[14:02:55] <CuriousErnestBro> are they important? got a link?
[14:03:41] <piou> They're very useful if used right, here's a free book that is excellent on the topic http://gameprogrammingpatterns.com/contents.html
[14:03:43] <bayaz> Title: Table of Contents ¬∑ Game Programming Patterns 
[14:05:31] <piou> CuriousErnestBro: design patterns are names given to standard ways to implement specific features in your code. For example, let's say you're creating a game. You're going to have a lot of trees on the screen. You could fill your memory with tree models, but let's be fair, most of those are going to be identical. What you can do instead is have a single tree in memory and use a lot of references
[14:05:37] <piou> to that single tree. That's a flyweight pattern. Typically a pattern aims at solving a specific problem in a standard way that is widely recognized as being a good implementation, so people sometimes get hung up on specific implementation details, but they're not really meant to be templates to be copied without thinking.
[14:05:57] <beaky> what is the easisest way to develop ccesiiblity for my cystom gui framewokr https://www.cmyr.net/blog/gui-framework-ingredients.html
[14:05:58] <bayaz> Title: So you want to write a GUI framework 
[14:06:04] *** Joins: inom (~inom@176.59.108.224)
[14:06:43] <piou> CuriousErnestBro: real life example of flyweight: in Python the numbers are objects too. Small numbers are used far more than very big ones, so small numbers are actually flyweights: if two variables have a value of 42 they're actually pointing to the same object in memory in order to avoid filling the memory with small values.
[14:07:30] <CuriousErnestBro> piou I see, iirc every int from like -42 to 256 is in memory 
[14:07:37] <piou> yep
[14:07:41] <CuriousErnestBro> I forget the exact numbers
[14:08:46] <beaky> woah rust isnt as zero cost as i thought https://blog.polybdenum.com/2021/08/09/when-zero-cost-abstractions-aren-t-zero-cost.html
[14:08:47] <bayaz> Title: When Zero Cost Abstractions Aren‚Äôt Zero Cost 
[14:09:59] <piou> That's one of the easiest design pattern to understand, but there are many more. The observer is a very common one too: it allows you to implement an event system where you do something when something happens. Lots of very important stuff, good to keep in mind. The goal is not to play design pattern golf and try to put as many as you can in your code, but your bound to face problems that have
[14:10:05] *** Joins: Twipply (~Twipply@user/twipply)
[14:10:05] <piou> already been solved by other people so design patterns give you both a name for the issue and a way to solve it.
[14:10:23] <piou> I really recommend that book I linked to earlier, it's very good and not at all limited to games
[14:11:12] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[14:13:00] <piou> Also, the more you code the more you'll come accross things like "UserSettingObserverFactory" and knowing what a Factory or Observer are allows you to know at a glance what this is supposed to do
[14:13:10] *** Joins: Batzy (~Batzy@user/batzy)
[14:13:13] *** Joins: entuland (~entuland@user/entuland)
[14:14:51] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:14:56] *** Joins: federico_it (~textual@151.95.116.125)
[14:15:59] *** Joins: nekodesu (~nano@user/nekobit)
[14:21:17] *** Joins: Rashad (~textual@46.185.170.67)
[14:22:42] *** Quits: CoderGuy (~CoderGuy@user/coderguy) (Ping timeout: 240 seconds)
[14:30:24] *** Quits: fm (~fm@user/fm) (Quit: fm)
[14:32:39] *** Joins: rany (~rany@user/rany)
[14:33:05] *** Joins: anon_ (~anon_@host-79-18-227-8.retail.telecomitalia.it)
[14:33:22] <smallville7123> padding is simply [ x + padding.x, y + padding.y, w - padding.w, h - padding.h ] right?
[14:36:57] *** Quits: rany (~rany@user/rany) (Ping timeout: 248 seconds)
[14:37:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[14:38:06] *** Quits: federico_it (~textual@151.95.116.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[14:38:15] <smallville7123> eg
[14:38:16] <smallville7123> inline Position applyPadding(const Position & input) { return { input.x + padding.x, input.y + padding.y, input.width - padding.width, input.height - padding.height }; }
[14:39:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:39:44] *** Quits: anon16 (~anon16@user/anon16) (Ping timeout: 272 seconds)
[14:41:32] *** Joins: anon16 (~anon16@user/anon16)
[14:42:10] *** Quits: Akronymus (~Akronymus@85.31.8.181) (Ping timeout: 246 seconds)
[14:43:56] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[14:44:26] <smallville7123> inline Position applyPadding(const Position & input) { return { input.x + padding.x, input.y + padding.y, input.width - padding.x - padding.width, input.height - padding.y - padding.height }; }      *
[14:44:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[14:45:22] *** Joins: federico_it (~textual@151.95.116.125)
[14:45:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:45:50] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[14:46:10] *** Joins: chomwitt (~chomwitt@2a02:587:dc02:6400:12c3:7bff:fe6d:d374)
[14:47:37] *** Quits: inky (~inky@46.36.113.172) (Ping timeout: 248 seconds)
[14:48:07] *** Joins: rany (~rany@user/rany)
[14:48:58] *** Joins: inky (~inky@5.77.151.77)
[14:49:13] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[14:49:13] *** Quits: Mangy_Dog (~Mange@user/mangy-dog/x-7397214) (Ping timeout: 248 seconds)
[14:51:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[14:51:16] *** Quits: chomwitt (~chomwitt@2a02:587:dc02:6400:12c3:7bff:fe6d:d374) (Ping timeout: 258 seconds)
[14:51:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:51:45] *** Joins: furrymcgee (~devuan@31.179.186.66)
[14:52:48] *** Quits: rany (~rany@user/rany) (Ping timeout: 258 seconds)
[14:56:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[14:57:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:57:33] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:57:34] *** Joins: Akronymus (~Akronymus@85.31.8.181)
[14:57:52] *** Joins: matt__ (~matt@adsl-74-233-58-198.mia.bellsouth.net)
[14:59:12] *** Joins: trace987 (~trace@95.90.106.112)
[14:59:26] *** Quits: matt|home (~matt@adsl-74-233-58-97.mia.bellsouth.net) (Ping timeout: 252 seconds)
[14:59:39] *** Quits: federico_it (~textual@151.95.116.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[15:01:27] *** Joins: federico_it (~textual@151.95.116.125)
[15:02:31] *** Joins: snake (~snake@user/snake)
[15:03:43] *** Quits: trace987 (~trace@95.90.106.112) (Remote host closed the connection)
[15:04:40] <smallville7123> https://gist.github.com/mgood7123/25cecf0d237f45d490987246fa92290c
[15:06:07] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[15:06:22] *** Joins: anononon (~anononon@user-5-173-148-81.play-internet.pl)
[15:07:12] *** Quits: shailangsa (~shailangs@host86-185-58-139.range86-185.btcentralplus.com) (Ping timeout: 245 seconds)
[15:08:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:09:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:12:17] *** Joins: rany (~rany@user/rany)
[15:15:35] *** Quits: usr123 (~usr123@125.62.117.238) (Read error: Connection reset by peer)
[15:15:58] *** Joins: usr123 (~usr123@124.253.2.147)
[15:16:50] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[15:21:24] *** Joins: Tazmainian (~Tazmainia@41.193.169.28)
[15:24:06] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[15:25:44] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[15:26:32] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[15:27:00] *** Quits: jmft2 (~JMFT@81.149.115.87.dyn.plus.net) (Ping timeout: 256 seconds)
[15:28:48] *** Parts: anon_ (~anon_@host-79-18-227-8.retail.telecomitalia.it) ()
[15:33:56] *** Joins: \o` (~\o`@user/o/x-1005988)
[15:34:18] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[15:36:39] <RedNifre__> Is it really "Nullity"? I always said "Nullability" (as in Nullable)... .oO( "Nullness" )
[15:37:02] *** Joins: rany (~rany@user/rany)
[15:37:09] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[15:42:08] <GeDaMo> I stopped reading that sentence at the first Null :|
[15:42:39] <PikaChokeMe> I have 26 possible slots... 3 options per slot... giving me 67108864 possible options... to calculate all of these would take a significant amount of time... I realise if I have [a, b, c] as options for slot 1 and [d, e] as options for slot two this become expensive fast because I basically then have to rewrite [a, d] [b, d] [c,d] [a, e] [b, e] [c, e] where my [a, b, c] sequence is now in there one time per option... if I 
[15:42:39] <PikaChokeMe> were to take this one more step I'd have all 6 of my options in there twice again. 
[15:42:49] *** Joins: jmft2 (~JMFT@82.3.54.26)
[15:43:27] <PikaChokeMe> this quickly gets out of hand... But is there some clever way in memory or with arrays to like... duplicate all the options I already have, and then just tack my new option onto the end of them? 
[15:43:43] <merijn> PikaChokeMe: Google "dynamic programming"
[15:44:59] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[15:45:23] <PikaChokeMe> Do you think there's a dynamic programming algorithm that will give me all of the computations I want in a reasonable amount of time? 
[15:45:41] <merijn> dynamic programming *is* the algorithm
[15:46:40] <PikaChokeMe> oh geed... I'm just wondering if this particular problem has been solved this way before 
[15:47:32] *** Joins: scabby_ (~scabby@user/scabootssca)
[15:47:34] <merijn> Or, I guess, that technically dynamic programming is a class of algorithms. But in general it's a technique for sharing partial result computations across large numbers of possible options like you describe
[15:48:25] *** Quits: anononon (~anononon@user-5-173-148-81.play-internet.pl) (Ping timeout: 248 seconds)
[15:49:06] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 268 seconds)
[15:50:34] *** Quits: audiocat (~audio@2603-8081-1800-00ad-e61c-eef0-ffd7-1da5.res6.spectrum.com) (Remote host closed the connection)
[15:50:52] *** Joins: audiocat (~audio@2603-8081-1800-00ad-1e9f-2c4f-a2b5-03f0.res6.spectrum.com)
[15:53:47] <Akronymus> Cherry picking is great in git.
[15:57:22] <beaky> its only 67 million permutations which is not a lot of state anyway you can probably quickly brute force through it
[15:58:38] *** Joins: shailangsa (~shailangs@host86-185-58-139.range86-185.btcentralplus.com)
[15:58:52] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[15:59:57] <smallville7123> https://github.com/mgood7123/Graphics-Tool-Kit/commit/d7a9c9bac85b687991a546fa6192bd61e2c1575b
[16:01:09] *** Joins: pulse (~pulse@user/pulse)
[16:05:51] *** Joins: tw3ml0w (~tw3ml0w@5.101.136.148)
[16:08:26] *** Joins: matrixskp (~matrixskp@121-75-182-31.dyn.vf.net.nz)
[16:09:17] <user51> is there a language with a conditional return?
[16:10:41] *** Quits: scabby_ (~scabby@user/scabootssca) (Ping timeout: 268 seconds)
[16:11:08] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[16:15:53] *** Quits: shan (shan@user/shan) (Ping timeout: 252 seconds)
[16:16:26] *** Quits: mannu (mannu@wodanaz.se) (Ping timeout: 252 seconds)
[16:16:26] *** Quits: BenLand100 (~bland@user/benland100) (Ping timeout: 252 seconds)
[16:20:29] <beaky> yes you can code it with lisp macros
[16:21:56] *** Quits: matrixskp (~matrixskp@121-75-182-31.dyn.vf.net.nz) (*.net *.split)
[16:21:56] *** Quits: tw3ml0w (~tw3ml0w@5.101.136.148) (*.net *.split)
[16:21:56] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (*.net *.split)
[16:21:56] *** Quits: matt__ (~matt@adsl-74-233-58-198.mia.bellsouth.net) (*.net *.split)
[16:21:56] *** Quits: anon16 (~anon16@user/anon16) (*.net *.split)
[16:21:56] *** Quits: Batzy (~Batzy@user/batzy) (*.net *.split)
[16:21:56] *** Quits: Twipply (~Twipply@user/twipply) (*.net *.split)
[16:21:56] *** Quits: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu) (*.net *.split)
[16:21:56] *** Quits: ixil (~ixil@82.197.178.137) (*.net *.split)
[16:21:56] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (*.net *.split)
[16:21:56] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (*.net *.split)
[16:21:56] *** Quits: sjmulder (~sjmulder@81-204-179-161.fixed.kpn.net) (*.net *.split)
[16:21:56] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[16:21:56] *** Quits: Fluxx (~Fluxx@user/fluxx) (*.net *.split)
[16:21:56] *** Quits: mrig (~mrig@user/mrig) (*.net *.split)
[16:21:56] *** Quits: password (~password@user/password2) (*.net *.split)
[16:21:56] *** Quits: tomgus1 (~tomgus1@90.208.15.36) (*.net *.split)
[16:21:56] *** Quits: b1101 (~b1101@ool-44c01641.dyn.optonline.net) (*.net *.split)
[16:21:56] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (*.net *.split)
[16:21:56] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[16:21:56] *** Quits: Haxxa (~Haxxa@122-199-44-36.ip4.superloop.com) (*.net *.split)
[16:21:56] *** Quits: bayaz (~bayaz@user/jeaye/bot/bayaz) (*.net *.split)
[16:21:56] *** Quits: JavaBean (~JavaBean@user/javabean) (*.net *.split)
[16:21:56] *** Quits: AquaL1te_ (~AquaL1te@user/aqual1te) (*.net *.split)
[16:21:56] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[16:21:56] *** Quits: andrewSC_ (~andrewSC@archlinux/trusteduser/andrewSC) (*.net *.split)
[16:21:56] *** Quits: kurtthem1ker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (*.net *.split)
[16:21:56] *** Quits: Caffeinated (~alexboy@user/alexdelarge) (*.net *.split)
[16:21:56] *** Quits: inee (~ine@wolowolo.com) (*.net *.split)
[16:21:56] *** Quits: kaivai_ (~kaivai@user/kaivai) (*.net *.split)
[16:21:56] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (*.net *.split)
[16:21:56] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (*.net *.split)
[16:21:56] *** Quits: Thedarkb2 (~Thedarkb@85.255.234.237) (*.net *.split)
[16:21:56] *** Quits: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net) (*.net *.split)
[16:21:56] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (*.net *.split)
[16:21:56] *** Quits: APic (apic@apic.name) (*.net *.split)
[16:21:56] *** Quits: haliucinas (~haliucina@5.20.153.21) (*.net *.split)
[16:21:56] *** Quits: molt (~molt@79.140.150.21) (*.net *.split)
[16:21:56] *** Quits: mz` (~mz`@user/mz/x-8532539) (*.net *.split)
[16:21:56] *** Quits: NChief (~nchief@irc.nortv.net) (*.net *.split)
[16:21:56] *** Quits: caramel (~caramel@user/caramel) (*.net *.split)
[16:21:56] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (*.net *.split)
[16:21:56] *** Quits: dkeohane1 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[16:21:56] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[16:21:56] *** Quits: ra4king (~ra4king@roiatalla.com) (*.net *.split)
[16:21:56] *** Quits: d10n (~d10n@user/d10n) (*.net *.split)
[16:21:56] *** Quits: Pixi (~Pixi@user/pixi) (*.net *.split)
[16:21:56] *** Quits: digdilem (~digdilem@rolf.yuss.org) (*.net *.split)
[16:21:56] *** Quits: causative_ (~halberd@user/causative) (*.net *.split)
[16:21:56] *** Quits: kinduff4 (~kinduff@user/kinduff) (*.net *.split)
[16:21:56] *** Quits: theglass (~glass@user/theglass) (*.net *.split)
[16:21:56] *** Quits: edr (~edr@user/edr) (*.net *.split)
[16:21:56] *** Quits: void09 (~void@revinin5minute.com) (*.net *.split)
[16:21:56] *** Quits: gdarko (~me@dg.mk) (*.net *.split)
[16:21:57] *** Quits: askie (~askie@81.171.100.212) (*.net *.split)
[16:21:57] *** Quits: elnavigator (~elnavigat@105.196.134.207) (*.net *.split)
[16:21:57] *** Quits: usr123 (~usr123@124.253.2.147) (*.net *.split)
[16:21:57] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (*.net *.split)
[16:21:57] *** Quits: tolot (~tolot@dynamic-093-132-139-129.93.132.pool.telefonica.de) (*.net *.split)
[16:21:57] *** Quits: zwr (~zwr@2804:d45:b966:fb00:fb3d:9212:4807:9b0e) (*.net *.split)
[16:21:57] *** Quits: plastico (~plastico@neomutt/plastico) (*.net *.split)
[16:21:57] *** Quits: mikeliuk (~mikeliuk@109.249.187.96) (*.net *.split)
[16:21:57] *** Quits: Gozrad (~Gozrad@46.232.210.50) (*.net *.split)
[16:21:57] *** Quits: Lyn (~Lyn@user/law) (*.net *.split)
[16:21:57] *** Quits: Rounin (~david@84.212.130.215) (*.net *.split)
[16:21:57] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (*.net *.split)
[16:21:57] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (*.net *.split)
[16:21:57] *** Quits: vysn (~vysn@user/vysn) (*.net *.split)
[16:21:57] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (*.net *.split)
[16:21:57] *** Quits: Yonle (~Yonle@user/yonle) (*.net *.split)
[16:21:57] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (*.net *.split)
[16:21:57] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (*.net *.split)
[16:21:57] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (*.net *.split)
[16:21:57] *** Quits: mci64 (~mci64@185.242.190.95) (*.net *.split)
[16:21:57] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (*.net *.split)
[16:21:57] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (*.net *.split)
[16:21:57] *** Quits: beencubed (~beencubed@209.131.238.248) (*.net *.split)
[16:21:57] *** Quits: kuku (~kuku@user/kuku) (*.net *.split)
[16:21:57] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (*.net *.split)
[16:21:57] *** Quits: PikaChokeMe (~PikaChoke@c-24-11-1-200.hsd1.ut.comcast.net) (*.net *.split)
[16:21:57] *** Quits: DefiantN (~DefiantN@user/defiantn) (*.net *.split)
[16:21:57] *** Quits: JackFin (~ircuser@S01069050ca4e3573.cg.shawcable.net) (*.net *.split)
[16:21:57] *** Quits: kmh_ (~kmh@p200300df5f0d0200dc05e9b97966e73c.dip0.t-ipconnect.de) (*.net *.split)
[16:21:57] *** Quits: Rayke (rayke@user/rayke) (*.net *.split)
[16:21:57] *** Quits: BUSY (~BUSY@user/busy) (*.net *.split)
[16:21:57] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (*.net *.split)
[16:21:57] *** Quits: paruh (~paruh@92.60.39.18) (*.net *.split)
[16:21:57] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (*.net *.split)
[16:21:57] *** Quits: Doffi (~doffi@91.132.197.188) (*.net *.split)
[16:21:57] *** Quits: mei (~mei@user/mei) (*.net *.split)
[16:21:57] *** Quits: pyzozord (pyzozord@user/pyzozord) (*.net *.split)
[16:21:57] *** Quits: lexano[m] (~lexanomat@2001:470:69fc:105::3110) (*.net *.split)
[16:21:58] *** Quits: fspy (~fspy@user/fspy) (*.net *.split)
[16:21:58] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[16:21:58] *** Quits: skreech (~skreech@user/skreech) (*.net *.split)
[16:21:58] *** Quits: p0g0__ (~p0g0@216.211.147.11) (*.net *.split)
[16:21:58] *** Quits: vin (~vin@user/crash) (*.net *.split)
[16:21:58] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[16:21:58] *** Quits: inom (~inom@176.59.108.224) (*.net *.split)
[16:21:58] *** Quits: aradesh (~aradesh@user/aradesh) (*.net *.split)
[16:21:58] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (*.net *.split)
[16:21:58] *** Quits: Samian (~Sami@2620:10d:c091:480::1:ab1a) (*.net *.split)
[16:21:58] *** Quits: justin[m]12345 (~justinsch@2001:470:69fc:105::c74a) (*.net *.split)
[16:21:58] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[16:21:58] *** Quits: bdeshi (~bdeshi@bdeshi.space) (*.net *.split)
[16:21:59] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[16:21:59] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (*.net *.split)
[16:21:59] *** Quits: xbatora1 (xbatora1@lounge.fi.muni.cz) (*.net *.split)
[16:21:59] *** Quits: ochronus- (~ochronus@static.5.181.55.162.clients.your-server.de) (*.net *.split)
[16:21:59] *** Quits: jess (~jess@libera/staff/jess) (*.net *.split)
[16:21:59] *** Quits: yitz (~yitz@exercism/yitz) (*.net *.split)
[16:21:59] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (*.net *.split)
[16:21:59] *** Quits: moose (~moose@user/moose) (*.net *.split)
[16:21:59] *** Quits: morgabra (sid500580@user/morgabra) (*.net *.split)
[16:21:59] *** Quits: cis (cis@user/cis) (*.net *.split)
[16:21:59] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:1d5f:9e3f:c4f9:810d) (*.net *.split)
[16:21:59] *** Quits: smorgasbord (buggy@user/smorgasbord) (*.net *.split)
[16:21:59] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (*.net *.split)
[16:21:59] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (*.net *.split)
[16:21:59] *** Quits: tkob (tkob@user/thekingofbandit) (*.net *.split)
[16:21:59] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (*.net *.split)
[16:21:59] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[16:21:59] *** Quits: Guest9019 (jaskal@user/jaskal) (*.net *.split)
[16:21:59] *** Quits: cncr04s (~cncr04s@afxr.net) (*.net *.split)
[16:21:59] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[16:21:59] *** Quits: dfg (dfg@user/dfg) (*.net *.split)
[16:21:59] *** Quits: Buggys (~Buggys@2a01:4f8:150:91ed::2) (*.net *.split)
[16:21:59] *** Quits: audiocat (~audio@2603-8081-1800-00ad-1e9f-2c4f-a2b5-03f0.res6.spectrum.com) (*.net *.split)
[16:21:59] *** Quits: nekodesu (~nano@user/nekobit) (*.net *.split)
[16:21:59] *** Quits: entuland (~entuland@user/entuland) (*.net *.split)
[16:21:59] *** Quits: fuzzykef (~furrykef@ip68-229-199-137.ok.ok.cox.net) (*.net *.split)
[16:21:59] *** Quits: kwilczynski (sid379192@user/kwilczynski) (*.net *.split)
[16:21:59] *** Quits: bcd (~bcd@83-84-164-51.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[16:21:59] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (*.net *.split)
[16:21:59] *** Quits: jazzy (~jaziz@2600:380:4545:1bb4:ec20:e391:8f1d:8467) (*.net *.split)
[16:21:59] *** Quits: nupilios (~nupilios@178-191-85-128.adsl.highway.telekom.at) (*.net *.split)
[16:21:59] *** Quits: Crescendo (~Crescendo@user/crescendo) (*.net *.split)
[16:21:59] *** Quits: dre (~dre@2001:8003:c932:c301:8028:ecc5:f3df:cd14) (*.net *.split)
[16:21:59] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (*.net *.split)
[16:21:59] *** Quits: blackop (~ocloud@user/blackop) (*.net *.split)
[16:21:59] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (*.net *.split)
[16:21:59] *** Quits: freakazoid333 (~matt@2603-9000-cf0f-80e3-14c2-094e-704a-6e4b.inf6.spectrum.com) (*.net *.split)
[16:21:59] *** Quits: Alpha3031 (~alpha3031@2001:470:69fc:105::2f6b) (*.net *.split)
[16:22:00] *** Quits: esran (~esran@cb.conical-effort.net) (*.net *.split)
[16:22:00] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (*.net *.split)
[16:22:00] *** Quits: segnior (~segnior@user/segnior) (*.net *.split)
[16:22:00] *** Quits: itok (sid418430@id-418430.charlton.irccloud.com) (*.net *.split)
[16:22:00] *** Quits: Notiche (~quassel@irk.rojekti.fi) (*.net *.split)
[16:22:00] *** Quits: fingercomp (~fingercom@fomalhaut.me) (*.net *.split)
[16:22:00] *** Quits: derfj (sid19429@id-19429.tinside.irccloud.com) (*.net *.split)
[16:22:00] *** Quits: tofran (~tofran@37.189.158.134) (*.net *.split)
[16:22:00] *** Quits: enteral (~enteral@discovery.whatbox.ca) (*.net *.split)
[16:22:00] *** Quits: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com) (*.net *.split)
[16:22:00] *** Quits: xa0s (~xa0s@mab.sdf.org) (*.net *.split)
[16:22:00] *** Quits: img (~img@user/img) (*.net *.split)
[16:22:00] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[16:22:00] *** Quits: Quietwalker (~X@24.162.16.145) (*.net *.split)
[16:22:00] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:2851:91a4:af4c:7957) (*.net *.split)
[16:22:00] *** Quits: jiffe (~jiffe@mail.nsab.us) (*.net *.split)
[16:22:00] *** Quits: dld (~davidlowr@2601:197:600:1210:90d2:efa1:6a80:6389) (*.net *.split)
[16:22:00] *** Quits: akselmo (~akselmo@user/akselmo) (*.net *.split)
[16:22:00] *** Quits: johan (~johan@user/johan) (*.net *.split)
[16:22:00] *** Quits: baloona (~baloona@mail.baloona.de) (*.net *.split)
[16:22:00] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (*.net *.split)
[16:22:00] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (*.net *.split)
[16:22:00] *** Quits: pavelow (~pavelow@opticalchimp.com) (*.net *.split)
[16:22:00] *** Quits: yourfate (~yourfate@cabal.yourfate.org) (*.net *.split)
[16:22:00] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (*.net *.split)
[16:22:00] *** Quits: swinnenb (~swinnenb@user/swinnenb) (*.net *.split)
[16:22:00] *** Quits: mven (~mven@072-179-001-159.res.spectrum.com) (*.net *.split)
[16:22:00] *** Quits: NEYi (~NEYi@109.251.216.38) (*.net *.split)
[16:22:00] *** Quits: D-04 (~D-04@89.249.65.28) (*.net *.split)
[16:22:00] *** Quits: wolfshappen (~waff@irc.furworks.de) (*.net *.split)
[16:22:01] *** Quits: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5) (*.net *.split)
[16:22:01] *** Quits: geonic (~geonic@user/geonic) (*.net *.split)
[16:22:01] *** Quits: immibis_ (~hexchat@62.156.144.218) (*.net *.split)
[16:22:01] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[16:22:01] *** Quits: Arahael (~arahael@124.170.238.106) (*.net *.split)
[16:22:01] *** Quits: biberu (~biberu@user/biberu) (*.net *.split)
[16:22:01] *** Quits: km2m (~km2m@1.116.81.184) (*.net *.split)
[16:22:01] *** Quits: knielsen (~knielsen@mail.knielsen-hq.org) (*.net *.split)
[16:22:01] *** Quits: swistak (~swistak@185.21.216.141) (*.net *.split)
[16:22:01] *** Quits: dante443 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340) (*.net *.split)
[16:22:01] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (*.net *.split)
[16:22:01] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (*.net *.split)
[16:22:01] *** Quits: nitrix (~nitrix@user/nitrix) (*.net *.split)
[16:22:01] *** Quits: Kays (Kays@user/kays) (*.net *.split)
[16:22:01] *** Quits: ishanjain (~ishan@li2028-175.members.linode.com) (*.net *.split)
[16:22:01] *** Quits: WarauSalesman (~sjw@pool-71-172-141-233.nwrknj.fios.verizon.net) (*.net *.split)
[16:22:01] *** Quits: davidv7 (~davidv7@user/videogameenjoyer) (*.net *.split)
[16:22:01] *** Quits: hbjy (~hbjy@rockylinux/web/hbjy) (*.net *.split)
[16:22:01] *** Quits: foxtrot (~foxtrot@user/foxtrot) (*.net *.split)
[16:22:01] *** Quits: krin (sid500722@user/krin) (*.net *.split)
[16:22:01] *** Quits: TallonRain (sid214799@user/tallonrain) (*.net *.split)
[16:22:01] *** Quits: dTal (quassel@dragonbox/wizzard/dtal) (*.net *.split)
[16:22:01] *** Quits: rdrg109 (~rdrg109@51.195.232.80) (*.net *.split)
[16:22:01] *** Quits: obrut (~obrut@user/obrut) (*.net *.split)
[16:22:01] *** Quits: psb (sid500598@user/psb) (*.net *.split)
[16:22:01] *** Quits: ikiryo (sid109660@user/ikiryo) (*.net *.split)
[16:22:01] *** Quits: avery (sid501608@id-501608.highgate.irccloud.com) (*.net *.split)
[16:22:02] *** Quits: federico_it (~textual@151.95.116.125) (*.net *.split)
[16:22:02] *** Quits: sophie[m]1 (~sophiesop@2001:470:69fc:105::9b6d) (*.net *.split)
[16:22:02] *** Quits: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f) (*.net *.split)
[16:22:02] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (*.net *.split)
[16:22:02] *** Quits: kakos[m] (~kakos@2001:470:69fc:105::c965) (*.net *.split)
[16:22:02] *** Quits: rgddev[m] (~rgddevmat@2001:470:69fc:105::69c8) (*.net *.split)
[16:22:02] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (*.net *.split)
[16:22:02] *** Quits: zhiayang (~zhiayang@user/zhiayang) (*.net *.split)
[16:22:02] *** Quits: stkw0 (~quassel@ns3046126.ip-91-121-8.eu) (*.net *.split)
[16:22:02] *** Quits: anderson (~ande@134.209.221.71) (*.net *.split)
[16:22:02] *** Quits: falx (~falx@user/falx) (*.net *.split)
[16:22:02] *** Quits: matrael (matrael@PLEASEJUSTLETME.BE) (*.net *.split)
[16:22:02] *** Quits: jelly (jelly@user/jelly) (*.net *.split)
[16:22:02] *** Quits: MrMobius (~MrMobius@208.58.206.154) (*.net *.split)
[16:22:02] *** Quits: Brando753 (~Brando753@ec2-34-218-254-59.us-west-2.compute.amazonaws.com) (*.net *.split)
[16:22:02] *** Quits: Jck_true (~jcktrue@188.228.89.240) (*.net *.split)
[16:22:02] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (*.net *.split)
[16:22:02] *** Quits: ds (~dshoreman@user/ds) (*.net *.split)
[16:22:02] *** Quits: Twix (~None@2a01:4f8:192:23d0::1be4:a) (*.net *.split)
[16:22:02] *** Quits: matiss (~matiss@almalinux/web/matiss) (*.net *.split)
[16:22:02] *** Quits: mercenary (~mercenary@user/mercenary) (*.net *.split)
[16:22:02] *** Quits: deniska (~denis@user/deniska) (*.net *.split)
[16:22:02] *** Quits: Pajus (~Pajus@user/pajus) (*.net *.split)
[16:22:02] *** Quits: addc182064 (~addc182@host86-134-254-227.range86-134.btcentralplus.com) (*.net *.split)
[16:22:03] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[16:22:03] *** Quits: Amun-Ra (~amun-ra@retro.rocks) (*.net *.split)
[16:22:03] *** Quits: OverCoder (~OverCoder@user/overcoder) (*.net *.split)
[16:22:03] *** Quits: jontxu (~jon@user/jontxu) (*.net *.split)
[16:22:03] *** Quits: les (znc@user/les) (*.net *.split)
[16:22:03] *** Quits: interru (~interru@fs.host.decodem.io) (*.net *.split)
[16:22:03] *** Quits: barlas (~aqeel@user/barlas) (*.net *.split)
[16:22:03] *** Quits: Soni (~quassel@autistic.space) (*.net *.split)
[16:22:03] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (*.net *.split)
[16:22:03] *** Quits: pulse (~pulse@user/pulse) (*.net *.split)
[16:22:03] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (*.net *.split)
[16:22:03] *** Quits: jmft2 (~JMFT@82.3.54.26) (*.net *.split)
[16:22:03] *** Quits: shailangsa (~shailangs@host86-185-58-139.range86-185.btcentralplus.com) (*.net *.split)
[16:22:03] *** Quits: mobidrop (~mobidrop@user/mobidrop) (*.net *.split)
[16:22:03] *** Quits: Tazmainian (~Tazmainia@41.193.169.28) (*.net *.split)
[16:22:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (*.net *.split)
[16:22:03] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (*.net *.split)
[16:22:03] *** Quits: snake (~snake@user/snake) (*.net *.split)
[16:22:03] *** Quits: furrymcgee (~devuan@31.179.186.66) (*.net *.split)
[16:22:03] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (*.net *.split)
[16:22:03] *** Quits: inky (~inky@5.77.151.77) (*.net *.split)
[16:22:03] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (*.net *.split)
[16:22:03] *** Quits: Rashad (~textual@46.185.170.67) (*.net *.split)
[16:22:03] *** Quits: Burgundy (~yomon@5-12-93-72.residential.rdsnet.ro) (*.net *.split)
[16:22:03] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (*.net *.split)
[16:22:03] *** Quits: user51 (~user51@176.228.90.248) (*.net *.split)
[16:22:03] *** Quits: repne_scasb (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (*.net *.split)
[16:22:03] *** Quits: Auron (~Auron956@user/auron) (*.net *.split)
[16:22:03] *** Quits: Camilo (~hugh@host-92-20-143-244.as13285.net) (*.net *.split)
[16:22:03] *** Quits: blinky42 (~quassel@user/blinky42) (*.net *.split)
[16:22:03] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (*.net *.split)
[16:22:03] *** Quits: gggp (~gggp@123.113.182.84) (*.net *.split)
[16:22:03] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (*.net *.split)
[16:22:03] *** Quits: shredder (~user@user/shredder) (*.net *.split)
[16:22:03] *** Quits: qbt (~edun@user/edun) (*.net *.split)
[16:22:03] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (*.net *.split)
[16:22:03] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (*.net *.split)
[16:22:03] *** Quits: gargus (~user@124-150-74-109.tpgi.com.au) (*.net *.split)
[16:22:03] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[16:22:03] *** Quits: ornxka (~ornxka@user/ornxka) (*.net *.split)
[16:22:03] *** Quits: digilink (~digilink@user/digilink) (*.net *.split)
[16:22:03] *** Quits: nf (~n@monade.li) (*.net *.split)
[16:22:03] *** Quits: nulleip_ (~luiz@189.34.167.234) (*.net *.split)
[16:22:03] *** Quits: t3nj1n_ (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (*.net *.split)
[16:22:03] *** Quits: erica (~erica@user/erica) (*.net *.split)
[16:22:03] *** Quits: sevengraff (~admin@li891-34.members.linode.com) (*.net *.split)
[16:22:03] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (*.net *.split)
[16:22:03] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[16:22:03] *** Quits: u4ia (~u4ia@88-159-0-88.fixed.kpn.net) (*.net *.split)
[16:22:03] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (*.net *.split)
[16:22:03] *** Quits: dermato (~dermatobr@154.21.23.75) (*.net *.split)
[16:22:03] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (*.net *.split)
[16:22:03] *** Quits: ^-^hi (~hi^-^@user/-hi/x-1729478) (*.net *.split)
[16:22:03] *** Quits: xff0x (~xff0x@2001:1a81:53d2:1c00:3b45:e81a:a20c:e310) (*.net *.split)
[16:22:03] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21) (*.net *.split)
[16:22:03] *** Quits: bioparco (~bioparco@user/bioparco) (*.net *.split)
[16:22:03] *** Quits: brabrax (~brabrax@user/brabrax) (*.net *.split)
[16:22:03] *** Quits: edk (edk@libera/staff/edk) (*.net *.split)
[16:22:03] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (*.net *.split)
[16:22:03] *** Quits: beeza (sid53872@id-53872.tinside.irccloud.com) (*.net *.split)
[16:22:03] *** Quits: gambl0re (~gambl0re@24.140.237.124) (*.net *.split)
[16:22:03] *** Quits: bluebird (~bluebird@user/bluebird) (*.net *.split)
[16:22:03] *** Quits: glguy (x@libera/staff/glguy) (*.net *.split)
[16:22:03] *** Quits: Dijky (~Dijky@user/dijky) (*.net *.split)
[16:22:03] *** Quits: zopsi (~zopsi@irc.dir.ac) (*.net *.split)
[16:22:03] *** Quits: russjr086 (~russjr08@fw.internal.russ.network) (*.net *.split)
[16:22:03] *** Quits: kzootech (~awalm@kzoo.tech) (*.net *.split)
[16:22:03] *** Quits: Khoyo (~khoyo@user/khoyo) (*.net *.split)
[16:22:03] *** Quits: davros (~davros@host86-184-180-96.range86-184.btcentralplus.com) (*.net *.split)
[16:22:03] *** Quits: Foritus (~buggery@cpc91316-watf11-2-0-cust68.15-2.cable.virginm.net) (*.net *.split)
[16:22:03] *** Quits: Flecks (~fleck@user/fleck) (*.net *.split)
[16:22:03] *** Quits: MeatNit (NeatNit@powered.by.jay2k1.com) (*.net *.split)
[16:22:03] *** Quits: CoJaBo (~aztec@user/CoJaBo) (*.net *.split)
[16:22:03] *** Quits: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net) (*.net *.split)
[16:22:03] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[16:22:04] *** Quits: znemo_ (sid500529@highgate.irccloud.com) (*.net *.split)
[16:22:04] *** Quits: monchi (sid347418@id-347418.charlton.irccloud.com) (*.net *.split)
[16:22:04] *** Quits: ullbeking (sid5364@id-5364.charlton.irccloud.com) (*.net *.split)
[16:22:04] *** Quits: greyblue9 (sid500829@id-500829.charlton.irccloud.com) (*.net *.split)
[16:22:04] *** Quits: Pent (sid313808@id-313808.tooting.irccloud.com) (*.net *.split)
[16:22:04] *** Quits: mawk (mawk@wireguard/contributor/mawk) (*.net *.split)
[16:22:04] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (*.net *.split)
[16:22:04] *** Quits: PlanckWalk (~Planck@user/planckwalk) (*.net *.split)
[16:22:04] *** Quits: jinsun (~quassel@user/jinsun) (*.net *.split)
[16:22:04] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (*.net *.split)
[16:22:04] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (*.net *.split)
[16:22:04] *** Quits: c705 (c705@alpine/contributor/c705) (*.net *.split)
[16:22:04] *** Quits: Jigsy (~Jigsy@user/jigsy) (*.net *.split)
[16:22:04] *** Quits: [Kalisto] (~nico@user/kalisto/x-8968079) (*.net *.split)
[16:22:04] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[16:22:04] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (*.net *.split)
[16:22:04] *** Quits: death916 (~death916@user/death916) (*.net *.split)
[16:22:04] *** Quits: bocaneri (~bismilah@about/linux/staff/sauvin) (*.net *.split)
[16:22:04] *** Quits: daegalus (~yulian@user/daegalus) (*.net *.split)
[16:22:04] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (*.net *.split)
[16:22:04] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (*.net *.split)
[16:22:04] *** Quits: scjosh (~scjosh@206.189.79.69) (*.net *.split)
[16:22:04] *** Quits: stoneware (~stoneware@user/stoneware) (*.net *.split)
[16:22:04] *** Quits: gry (~quassel@botters/gry) (*.net *.split)
[16:22:04] *** Quits: neunon (~neunon@user/neunon) (*.net *.split)
[16:22:04] *** Quits: Smeef (~deathonat@user/smeef) (*.net *.split)
[16:22:04] *** Quits: derpy (~quassel@dslb-002-203-230-167.002.203.pools.vodafone-ip.de) (*.net *.split)
[16:22:04] *** Quits: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net) (*.net *.split)
[16:22:04] *** Quits: micrex22 (~quassel@user/micrex22) (*.net *.split)
[16:22:04] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (*.net *.split)
[16:22:04] *** Quits: Davros_ (~dalek@pathweb.org) (*.net *.split)
[16:22:04] *** Quits: feoh (~feoh@ec2-18-224-106-217.us-east-2.compute.amazonaws.com) (*.net *.split)
[16:22:04] *** Quits: znedw (~znedw@home.znedw.com) (*.net *.split)
[16:22:04] *** Quits: rwb (~augh@theguntretort.com) (*.net *.split)
[16:22:04] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (*.net *.split)
[16:22:04] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e9f6:1ae9:552:9cec) (*.net *.split)
[16:22:04] *** Quits: DrMax (~DrMax@node-1w7jra94757g1bivcltkwu572.ipv6.telus.net) (*.net *.split)
[16:22:04] *** Quits: cisco87 (~quassel@lnxg33k.com) (*.net *.split)
[16:22:04] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (*.net *.split)
[16:22:04] *** Quits: jcarpenter2 (rofl@2603:3016:1e01:b9c0:20b3:fc15:12c5:30d8) (*.net *.split)
[16:22:04] *** Quits: V (~v@anomalous.eu) (*.net *.split)
[16:22:04] *** Quits: Whippersnapper (~whprsnpr@user/whippersnapper) (*.net *.split)
[16:22:04] *** Quits: Ruxnor (kevin@user/kddlb) (*.net *.split)
[16:22:04] *** Quits: shenanigans (~shenaniga@51.15.76.217) (*.net *.split)
[16:22:04] *** Quits: RedNifre__ (~michael@dslb-002-201-038-051.002.201.pools.vodafone-ip.de) (*.net *.split)
[16:22:04] *** Quits: novns (~novns@user/novns) (*.net *.split)
[16:22:04] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[16:22:04] *** Quits: nolesswrong (~nolesswro@45.32.1.17) (*.net *.split)
[16:22:04] *** Quits: cronos (~cronos@user/cronos) (*.net *.split)
[16:22:04] *** Quits: FKAShinobi (~shinobi@2601:18c:d07f:f2e9:b36e:b615:5c5f:a300) (*.net *.split)
[16:22:04] *** Quits: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se) (*.net *.split)
[16:22:04] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (*.net *.split)
[16:22:04] *** Quits: AMG (ghebo@user/amg) (*.net *.split)
[16:22:04] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[16:22:04] *** Quits: con3 (~con3@2604:a880:4:1d0::be:d000) (*.net *.split)
[16:22:04] *** Quits: amanr (~therojjha@20.204.87.0) (*.net *.split)
[16:22:04] *** Quits: MrLouis[m] (~lookneema@2001:470:69fc:105::c61a) (*.net *.split)
[16:22:04] *** Quits: psydroid (~psydroid@user/psydroid) (*.net *.split)
[16:22:04] *** Quits: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b) (*.net *.split)
[16:22:04] *** Quits: orbatos[m] (~orbatos@user/orbatos) (*.net *.split)
[16:22:04] *** Quits: Helmholtz (~leibnizma@2001:470:69fc:105::3124) (*.net *.split)
[16:22:05] *** Quits: Guest3880 (~kamui-ren@2001:470:69fc:105::f74) (*.net *.split)
[16:22:05] *** Quits: bmahe[m] (~bmahematr@2001:470:69fc:105::d140) (*.net *.split)
[16:22:05] *** Quits: webstrand (~webstrand@user/webstrand) (*.net *.split)
[16:22:05] *** Quits: HenryTheLongshot (~Henry@46.101.4.181) (*.net *.split)
[16:22:05] *** Quits: Ara (~Ara@user/ara) (*.net *.split)
[16:22:05] *** Quits: jeaye (~jeaye@user/jeaye) (*.net *.split)
[16:22:05] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (*.net *.split)
[16:22:05] *** Quits: Karyon (~Karyon@user/karyon) (*.net *.split)
[16:22:05] *** Quits: jootoi (~jootoi@130.61.158.197) (*.net *.split)
[16:22:05] *** Quits: picooz (~picooz@user/picooz) (*.net *.split)
[16:22:05] *** Quits: umimaso (~umimaso@188.166.147.131) (*.net *.split)
[16:22:05] *** Quits: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net) (*.net *.split)
[16:22:05] *** Quits: snep (craftxbox@2001:bc8:654:1c02::1) (*.net *.split)
[16:22:05] *** Quits: libera- (~utunbu@user/utunbu) (*.net *.split)
[16:22:05] *** Quits: orhan89 (~orhan89@151.91.188.35.bc.googleusercontent.com) (*.net *.split)
[16:22:05] *** Quits: raczka (~raczka@dedicated-aid6.rev.nazwa.pl) (*.net *.split)
[16:22:05] *** Quits: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com) (*.net *.split)
[16:22:05] *** Quits: carbolymer (~carbolyme@dropacid.net) (*.net *.split)
[16:22:05] *** Quits: KillerWasp_ (~KillerWas@96.126.121.103) (*.net *.split)
[16:22:05] *** Quits: cornduk (~cornduck@li1755-129.members.linode.com) (*.net *.split)
[16:22:05] *** Quits: mteo (francis@user/francis) (*.net *.split)
[16:22:05] *** Quits: spike_spiegel5 (~spike_spi@static.200.4.251.148.clients.your-server.de) (*.net *.split)
[16:22:05] *** Quits: X-Scale (~ARM@238.72.108.93.rev.vodafone.pt) (*.net *.split)
[16:22:05] *** Quits: mnrmnaugh (~mnrmnaugh@68.162.206.56) (*.net *.split)
[16:22:05] *** Quits: luiserebii (~luiserebi@li1568-23.members.linode.com) (*.net *.split)
[16:22:05] *** Quits: oldlaptop (~quassel@45.63.78.126) (*.net *.split)
[16:22:05] *** Quits: chromis (sid150893@id-150893.tinside.irccloud.com) (*.net *.split)
[16:22:05] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (*.net *.split)
[16:22:05] *** Quits: bin4ry (~bin4ry@128.199.135.148) (*.net *.split)
[16:22:05] *** Quits: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net) (*.net *.split)
[16:22:05] *** Quits: thebob (~thebob@user/thebob) (*.net *.split)
[16:22:05] *** Quits: YHVH (~yhvh@2601:982:8300:8090:a09d:5f40:6d86:e7a) (*.net *.split)
[16:22:05] *** Quits: hardtotell (~hardtotel@satyr.seedboxes.cc) (*.net *.split)
[16:22:05] *** Quits: flatlinejim (~bobmin@203.29.243.207) (*.net *.split)
[16:22:05] *** Quits: Trashlord (~trash@user/trashlord) (*.net *.split)
[16:22:05] *** Quits: BGL (~twenty@75-149-171-58-Washington.hfc.comcastbusiness.net) (*.net *.split)
[16:22:05] *** Quits: Telvana (capo@user/telvana) (*.net *.split)
[16:22:05] *** Quits: dmu (~darkmusic@user/darkmusic) (*.net *.split)
[16:22:05] *** Quits: LjL (~ljl@user/ljl) (*.net *.split)
[16:22:05] *** Quits: birkoff (birkoff@user/birkoff) (*.net *.split)
[16:22:05] *** Quits: LuKaRo_ (~LuKaRo@p57b15425.dip0.t-ipconnect.de) (*.net *.split)
[16:22:05] *** Quits: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com) (*.net *.split)
[16:22:05] *** Quits: nullheroes (~nullheroe@168.235.66.22) (*.net *.split)
[16:22:05] *** Quits: tvm (~tom@ip-89-103-250-229.net.upcbroadband.cz) (*.net *.split)
[16:22:05] *** Quits: rypervenche (~rypervenc@user/rypervenche) (*.net *.split)
[16:22:05] *** Quits: Noventicx (~Noventicx@crux.uberspace.de) (*.net *.split)
[16:22:05] *** Quits: micronn (~micronn@user/micronn) (*.net *.split)
[16:22:05] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (*.net *.split)
[16:22:05] *** Quits: Neverloads (NeverLoad@freakshells.net) (*.net *.split)
[16:22:05] *** Quits: Tom1 (~tom@user/ghostdragon) (*.net *.split)
[16:22:05] *** Quits: Endust (leggt@iceland.sdf.org) (*.net *.split)
[16:22:05] *** Quits: cfjk (~cfjk@user/cfjk) (*.net *.split)
[16:22:05] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (*.net *.split)
[16:22:05] *** Quits: RedCrab (~Red_Crab@user/redcrab) (*.net *.split)
[16:22:05] *** Quits: orkim (~orkim@user/orkim) (*.net *.split)
[16:22:05] *** Quits: remedan (~remedan@balak.me) (*.net *.split)
[16:22:05] *** Quits: tanto (~tanto@178.62.223.32) (*.net *.split)
[16:22:05] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (*.net *.split)
[16:22:05] *** Quits: |smlckz| (smlckz@user/smlckz) (*.net *.split)
[16:22:05] *** Quits: Guest4267 (~smlckmatr@2001:470:69fc:105::c885) (*.net *.split)
[16:22:06] *** Quits: pnill_ (~pnill@ip170.ip-54-39-37.net) (*.net *.split)
[16:22:06] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[16:22:06] *** Quits: phenom (~primus@user/phenom) (*.net *.split)
[16:22:06] *** Quits: abirkill (snoopy@d172-218-198-90.bchsia.telus.net) (*.net *.split)
[16:22:06] *** Quits: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net) (*.net *.split)
[16:22:06] *** Quits: nicolapcweek94 (wasp@tilde.institute) (*.net *.split)
[16:22:06] *** Quits: Ranhir (~Ranhir@157.97.53.139) (*.net *.split)
[16:22:06] *** Quits: adrian17 (~adrian17@thehyper.space) (*.net *.split)
[16:22:06] *** Quits: DarkTrick_ (~DarkTrick@pl-768-132.bunbun.ne.jp) (*.net *.split)
[16:22:06] *** Quits: Bigcheese_ (~quassel@107.182.234.200) (*.net *.split)
[16:22:06] *** Quits: davve_ (davve@bsd.douchedata.com) (*.net *.split)
[16:22:06] *** Quits: Teacup (~teacup@user/teacup) (*.net *.split)
[16:22:06] *** Quits: jab416171 (~jab416171@c-174-52-176-66.hsd1.ut.comcast.net) (*.net *.split)
[16:22:06] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (*.net *.split)
[16:22:06] *** Quits: linext_ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net) (*.net *.split)
[16:22:06] *** Quits: phundrak (~phundrak@82-65-91-105.subs.proxad.net) (*.net *.split)
[16:22:06] *** Quits: d3x0r (~d3x0r@ip68-108-54-126.lv.lv.cox.net) (*.net *.split)
[16:22:06] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (*.net *.split)
[16:22:06] *** Quits: buffet (~buffet@buffet.sh) (*.net *.split)
[16:22:06] *** Quits: justache (~justache@user/justache) (*.net *.split)
[16:22:06] *** Quits: Square (~a@178.62.91.8) (*.net *.split)
[16:22:06] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[16:22:06] *** Quits: Kol (~Kol@d75-157-122-186.bchsia.telus.net) (*.net *.split)
[16:22:06] *** Quits: jstoker (~jstoker@user/jstoker) (*.net *.split)
[16:22:06] *** Quits: AkechiShiro (~licht@user/akechishiro) (*.net *.split)
[16:22:06] *** Quits: xeno (~xeno@user/xeno) (*.net *.split)
[16:22:06] *** Quits: nthrow_ (~nat@user/nthrow) (*.net *.split)
[16:22:06] *** Quits: hexology- (~hexology@user/hexology) (*.net *.split)
[16:22:06] *** Quits: ebb (ebb@user/ebb) (*.net *.split)
[16:22:06] *** Quits: hsiktas (sid224847@id-224847.tooting.irccloud.com) (*.net *.split)
[16:22:06] *** Quits: austincheney (~austinche@2600:1700:1220:76c8:f982:507a:283b:3df9) (*.net *.split)
[16:22:06] *** Quits: sauce (~sauce@omae.wa.mou.shindei.ru) (*.net *.split)
[16:22:06] *** Quits: Bodger1234_ (sid503511@id-503511.highgate.irccloud.com) (*.net *.split)
[16:22:06] *** Quits: routeveg (~lee@197.ip-51-195-136.eu) (*.net *.split)
[16:22:06] *** Quits: insolentworm (~root@vps-7db3bef3.vps.ovh.ca) (*.net *.split)
[16:22:06] *** Quits: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (*.net *.split)
[16:22:06] *** Quits: mwbrown (~mwbrown@user/mwbrown) (*.net *.split)
[16:22:06] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[16:22:06] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (*.net *.split)
[16:22:06] *** Quits: TheLinuxNerd (~tux@user/thelinuxnerd) (*.net *.split)
[16:22:06] *** Quits: InPhase (~InPhase@openscad/inphase) (*.net *.split)
[16:22:06] *** Quits: karstensrage (~karstensr@user/karstensrage) (*.net *.split)
[16:22:06] *** Quits: AsenMx (~AsenMx@78.90.248.234) (*.net *.split)
[16:22:06] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (*.net *.split)
[16:22:06] *** Quits: SmokenatorZ (~Smokenato@189-69-11-13.dsl.telesp.net.br) (*.net *.split)
[16:22:06] *** Quits: getz[m] (~getz@2001:470:69fc:105::c85e) (*.net *.split)
[16:22:07] *** Quits: lasr[m] (~lasrhalog@2001:470:69fc:105::c875) (*.net *.split)
[16:22:07] *** Quits: JanC (~janc@user/janc) (*.net *.split)
[16:22:07] *** Quits: tonsofpcs (~tonsofpcs@cpe-67-251-117-244.stny.res.rr.com) (*.net *.split)
[16:22:07] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (*.net *.split)
[16:22:07] *** Quits: ario (~ario@159.65.220.102) (*.net *.split)
[16:22:07] *** Quits: calcmandan (~quassel@user/calcmandan) (*.net *.split)
[16:22:07] *** Quits: a1paca_ (~a1paca@user/a1paca) (*.net *.split)
[16:22:07] *** Quits: rf` (~envex@cpe-173-91-189-33.neo.res.rr.com) (*.net *.split)
[16:22:07] *** Quits: Krufu (~AnCELASTR@216.243.47.158) (*.net *.split)
[16:22:07] *** Quits: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net) (*.net *.split)
[16:22:07] *** Quits: glider_ (~glider@user/glider) (*.net *.split)
[16:22:07] *** Quits: echoreply1 (~echoreply@2001:19f0:9002:1f3b:5400:ff:fe6f:8b8d) (*.net *.split)
[16:22:07] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[16:22:07] *** Quits: slavfox (~slavfox@93.158.232.111) (*.net *.split)
[16:22:07] *** Quits: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d) (*.net *.split)
[16:22:07] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (*.net *.split)
[16:22:07] *** Quits: SoF (~skius@user/skius) (*.net *.split)
[16:22:07] *** Quits: DaPinkOne (~Dap@user/dap) (*.net *.split)
[16:22:07] *** Quits: launchd (examknow@bitbot/launchd) (*.net *.split)
[16:22:07] *** Quits: ShockTohp (~kevin@155.138.224.160) (*.net *.split)
[16:22:07] *** Quits: brandon_ (~brandon@user/brandon) (*.net *.split)
[16:22:07] *** Quits: cacheyourdreams (~cache@user/cacheyourdreams) (*.net *.split)
[16:22:07] *** Quits: Retr0id (~Retr0id@user/retr0id) (*.net *.split)
[16:22:07] *** Quits: sco1 (~sco1@charon.whatbox.ca) (*.net *.split)
[16:22:07] *** Quits: dartmouthed (~blackunsp@li761-35.members.linode.com) (*.net *.split)
[16:22:07] *** Quits: pizdets_ (~pizdets@183.182.111.62) (*.net *.split)
[16:22:07] *** Quits: Tempesta (~Tempesta@user/tempesta) (*.net *.split)
[16:22:07] *** Quits: myon98 (~myon98@user/myon98) (*.net *.split)
[16:22:07] *** Quits: \o` (~\o`@user/o/x-1005988) (*.net *.split)
[16:22:07] *** Quits: Akronymus (~Akronymus@85.31.8.181) (*.net *.split)
[16:22:07] *** Quits: LucaTM (~LucaTM@user/lucatm) (*.net *.split)
[16:22:07] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:9882:5d69:12df:2a8c) (*.net *.split)
[16:22:07] *** Quits: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:f46b:971d:efb4:c555) (*.net *.split)
[16:22:07] *** Quits: ugjka (~ugjka@ugjka.net) (*.net *.split)
[16:22:07] *** Quits: wille (~wille@static.140.85.76.144.clients.your-server.de) (*.net *.split)
[16:22:07] *** Quits: francis (francis@user/francis) (*.net *.split)
[16:22:07] *** Quits: extor (~xtor@192.99.217.240) (*.net *.split)
[16:22:07] *** Quits: Sadale (~Sadale@user/sadale) (*.net *.split)
[16:22:07] *** Quits: delial (~delial@47.185.98.253) (*.net *.split)
[16:22:07] *** Quits: ellie (~ellie@user/ellie) (*.net *.split)
[16:22:07] *** Quits: crackerjack (crackerjac@pear.bnc4free.com) (*.net *.split)
[16:22:07] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (*.net *.split)
[16:22:08] *** Quits: joj_ (~joj@jojeee.xyz) (*.net *.split)
[16:22:08] *** Quits: piou (~piou@user/piou) (*.net *.split)
[16:22:08] *** Quits: Frogging101 (~Frogging@kitsune.fastquake.com) (*.net *.split)
[16:22:08] *** Quits: sweetfish (~sweetfish@user/sweetfish) (*.net *.split)
[16:22:08] *** Quits: mspe (~user@tilde.team/user/mspe) (*.net *.split)
[16:22:08] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[16:22:08] *** Quits: mickey8 (~user@user/mickey) (*.net *.split)
[16:22:08] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (*.net *.split)
[16:22:08] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (*.net *.split)
[16:22:08] *** Quits: sklv1 (~sklv@gateway/tor-sasl/sklv) (*.net *.split)
[16:22:08] *** Quits: adanwan_ (~adanwan@gateway/tor-sasl/adanwan) (*.net *.split)
[16:22:08] *** Quits: Raguile (~Raguile@user/raguile) (*.net *.split)
[16:22:08] *** Quits: w0ng (~w0ng@185.218.127.38) (*.net *.split)
[16:22:08] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) (*.net *.split)
[16:22:08] *** Quits: Trieste_ (T@user/pilgrim) (*.net *.split)
[16:22:08] *** Quits: Scarecr0w (~intern0t@user/scarecr0w) (*.net *.split)
[16:22:08] *** Quits: Cyp_ (~cyp@192038129116.mbb.telenor.dk) (*.net *.split)
[16:22:08] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (*.net *.split)
[16:22:08] *** Quits: Hrmmm (~Hrmmm@198-27-172-195.fiber.dynamic.sonic.net) (*.net *.split)
[16:22:08] *** Quits: sandman13 (sandman13@user/sandman13) (*.net *.split)
[16:22:08] *** Quits: paulo (paulo@jujube.ircnow.org) (*.net *.split)
[16:22:08] *** Quits: ^[ (~user@user//x-8473491) (*.net *.split)
[16:22:08] *** Quits: Teckla (~Teckla@user/teckla) (*.net *.split)
[16:22:08] *** Quits: Valware (~val@Valeyard/Developer/Valware) (*.net *.split)
[16:22:08] *** Quits: livestradamus (~quassel@user/livestradamus) (*.net *.split)
[16:22:08] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[16:22:08] *** Quits: mrkajetanp (~mrkajetan@88.98.245.28) (*.net *.split)
[16:22:08] *** Quits: biberao (~Unknown@user/biberao) (*.net *.split)
[16:22:08] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (*.net *.split)
[16:22:08] *** Quits: Guest282 (ianmacd@faust.caliban.org) (*.net *.split)
[16:22:08] *** Quits: Vesryn (~vesryn@user/vesryn) (*.net *.split)
[16:22:08] *** Quits: codingcampbell (~codingcam@user/codingcampbell) (*.net *.split)
[16:22:08] *** Quits: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) (*.net *.split)
[16:22:08] *** Quits: Aye (jeda@hellomouse/dev/cryb.jeda) (*.net *.split)
[16:22:08] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (*.net *.split)
[16:22:08] *** Quits: liam (sid7517@id-7517.brockwell.irccloud.com) (*.net *.split)
[16:22:08] *** Quits: b30wulffz (~b30wulffz@20.204.87.0) (*.net *.split)
[16:22:08] *** Quits: em (~em@li247-180.members.linode.com) (*.net *.split)
[16:22:08] *** Quits: lf94 (~lf94@2604:a880:cad:d0::cd6:8001) (*.net *.split)
[16:22:08] *** Quits: computerquip (sid423484@user/computerquip) (*.net *.split)
[16:22:08] *** Quits: feliix42_ (~felix@gibbs.uberspace.de) (*.net *.split)
[16:22:08] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[16:22:08] *** Quits: vito (sid1962@user/vito) (*.net *.split)
[16:22:08] *** Quits: Liothen (sid23291@id-23291.brockwell.irccloud.com) (*.net *.split)
[16:22:08] *** Quits: backslash (~backslash@user/backslash) (*.net *.split)
[16:22:08] *** Quits: BlueShark (sid10311@user/blueshark) (*.net *.split)
[16:22:08] *** Quits: ross (sid305269@user/ross) (*.net *.split)
[16:22:08] *** Quits: NiKaN (sid385034@id-385034.brockwell.irccloud.com) (*.net *.split)
[16:22:08] *** Quits: bw (sid2730@user/betawaffle) (*.net *.split)
[16:22:08] *** Quits: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505) (*.net *.split)
[16:22:08] *** Quits: edenist (edenist@rdns.robotprofessor.net) (*.net *.split)
[16:22:08] *** Quits: LadyCailin (LadyCailin@user/ladycailin) (*.net *.split)
[16:22:08] *** Quits: pierrepaul (sid504261@id-504261.highgate.irccloud.com) (*.net *.split)
[16:22:08] *** Quits: t^ (~thomas@2001:41d0:2:a84:1::6) (*.net *.split)
[16:22:08] *** Quits: TinoDidriksen (~TinoDidri@tinodidriksen.com) (*.net *.split)
[16:22:08] *** Quits: QuartzXtal (uid507167@id-507167.tooting.irccloud.com) (*.net *.split)
[16:22:08] *** Quits: bertiger (~bertiger@user/bertiger) (*.net *.split)
[16:22:08] *** Quits: confluence (~quassel@2a01:4f8:c17:3ca::2) (*.net *.split)
[16:22:08] *** Quits: Geronimo (~Geronimo@user/geronimo) (*.net *.split)
[16:22:08] *** Quits: boycott (~boycott@user/boycott) (*.net *.split)
[16:22:08] *** Quits: nanowire (rob@user/nanowire) (*.net *.split)
[16:22:08] *** Quits: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz) (*.net *.split)
[16:22:08] *** Quits: deathrat (sid14886@id-14886.charlton.irccloud.com) (*.net *.split)
[16:27:43] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[16:27:43] *** Joins: rany (~rany@user/rany)
[16:27:43] *** Joins: Exa (exa@irc.moe)
[16:27:43] *** Joins: sweetfish (~sweetfish@user/sweetfish)
[16:27:43] *** Joins: mspe (~user@tilde.team/user/mspe)
[16:27:43] *** Joins: Frogging101 (~Frogging@kitsune.fastquake.com)
[16:27:43] *** Joins: piou (~piou@user/piou)
[16:27:43] *** Joins: joj_ (~joj@jojeee.xyz)
[16:27:43] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[16:27:43] *** Joins: crackerjack (crackerjac@pear.bnc4free.com)
[16:27:43] *** Joins: ellie (~ellie@user/ellie)
[16:27:43] *** Joins: Sadale (~Sadale@user/sadale)
[16:27:43] *** Joins: extor (~xtor@192.99.217.240)
[16:27:43] *** Joins: wille (~wille@static.140.85.76.144.clients.your-server.de)
[16:27:43] *** Joins: ugjka (~ugjka@ugjka.net)
[16:27:43] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:f46b:971d:efb4:c555)
[16:27:43] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:9882:5d69:12df:2a8c)
[16:27:43] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:27:43] *** Joins: img (~img@user/img)
[16:27:43] *** Joins: shan (shan@user/shan)
[16:27:43] *** Joins: dfg (dfg@user/dfg)
[16:27:43] *** Joins: Buggys (~Buggys@2a01:4f8:150:91ed::2)
[16:27:43] *** Joins: jkl (~jkl@user/jkl)
[16:27:43] *** Joins: cncr04s (~cncr04s@afxr.net)
[16:27:43] *** Joins: Guest9019 (jaskal@user/jaskal)
[16:27:43] *** Joins: mweckbecker (~matthias@weckbecker.name)
[16:27:43] *** Joins: tkob (tkob@user/thekingofbandit)
[16:27:43] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[16:27:43] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[16:27:43] *** Joins: smorgasbord (buggy@user/smorgasbord)
[16:27:43] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:1d5f:9e3f:c4f9:810d)
[16:27:43] *** Joins: cis (cis@user/cis)
[16:27:43] *** Joins: morgabra (sid500580@user/morgabra)
[16:27:43] *** Joins: moose (~moose@user/moose)
[16:27:43] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[16:27:43] *** Joins: yitz (~yitz@exercism/yitz)
[16:27:43] *** Joins: jess (~jess@libera/staff/jess)
[16:27:43] *** Joins: ochronus- (~ochronus@static.5.181.55.162.clients.your-server.de)
[16:27:43] *** Joins: xbatora1 (xbatora1@lounge.fi.muni.cz)
[16:27:43] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[16:27:43] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[16:27:43] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[16:27:43] *** Joins: Samian (~Sami@2620:10d:c091:480::1:ab1a)
[16:27:43] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[16:27:43] *** Joins: aradesh (~aradesh@user/aradesh)
[16:27:43] *** Joins: inom (~inom@176.59.108.224)
[16:27:43] *** Joins: jelly-home (jelly@user/jelly)
[16:27:43] *** Joins: s1b1 (~s1b1@user/s1b1)
[16:27:43] *** Joins: absc (~absc@access03.colt-engine.it)
[16:27:43] *** Joins: blackop_ (~ocloud@user/blackop)
[16:27:43] *** Joins: francis (francis@user/francis)
[16:27:43] *** Joins: mannu_ (mannu@wodanaz.se)
[16:27:43] *** Joins: BenLand100 (~bland@user/benland100)
[16:27:43] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[16:27:43] *** Joins: matrael_ (matrael@PLEASEJUSTLETME.BE)
[16:27:43] *** Joins: falx (~falx@user/falx)
[16:27:43] *** Joins: fluffykef (~furrykef@ip68-229-199-137.ok.ok.cox.net)
[16:27:43] *** Joins: delial420 (~delial@47.185.98.253)
[16:27:43] *** Joins: Yonle_ (~Yonle@user/yonle)
[16:27:43] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[16:27:43] *** Joins: matrixskp (~matrixskp@121-75-182-31.dyn.vf.net.nz)
[16:27:43] *** Joins: tw3ml0w (~tw3ml0w@5.101.136.148)
[16:27:43] *** Joins: pulse (~pulse@user/pulse)
[16:27:43] *** Joins: shailangsa (~shailangs@host86-185-58-139.range86-185.btcentralplus.com)
[16:27:43] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[16:27:43] *** Joins: jmft2 (~JMFT@82.3.54.26)
[16:27:43] *** Joins: \o` (~\o`@user/o/x-1005988)
[16:27:43] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[16:27:43] *** Joins: Tazmainian (~Tazmainia@41.193.169.28)
[16:27:43] *** Joins: usr123 (~usr123@124.253.2.147)
[16:27:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:27:43] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[16:27:43] *** Joins: snake (~snake@user/snake)
[16:27:43] *** Joins: matt__ (~matt@adsl-74-233-58-198.mia.bellsouth.net)
[16:27:43] *** Joins: Akronymus (~Akronymus@85.31.8.181)
[16:27:43] *** Joins: furrymcgee (~devuan@31.179.186.66)
[16:27:43] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[16:27:43] *** Joins: inky (~inky@5.77.151.77)
[16:27:43] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[16:27:43] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[16:27:43] *** Joins: anon16 (~anon16@user/anon16)
[16:27:43] *** Joins: Rashad (~textual@46.185.170.67)
[16:27:43] *** Joins: Batzy (~Batzy@user/batzy)
[16:27:43] *** Joins: Twipply (~Twipply@user/twipply)
[16:27:43] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[16:27:43] *** Joins: Burgundy (~yomon@5-12-93-72.residential.rdsnet.ro)
[16:27:43] *** Joins: tolot (~tolot@dynamic-093-132-139-129.93.132.pool.telefonica.de)
[16:27:43] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[16:27:43] *** Joins: zwr (~zwr@2804:d45:b966:fb00:fb3d:9212:4807:9b0e)
[16:27:43] *** Joins: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu)
[16:27:43] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[16:27:43] *** Joins: ixil (~ixil@82.197.178.137)
[16:27:43] *** Joins: user51 (~user51@176.228.90.248)
[16:27:43] *** Joins: plastico (~plastico@neomutt/plastico)
[16:27:43] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[16:27:43] *** Joins: mikeliuk (~mikeliuk@109.249.187.96)
[16:27:43] *** Joins: Gozrad (~Gozrad@46.232.210.50)
[16:27:43] *** Joins: Lyn (~Lyn@user/law)
[16:27:43] *** Joins: Rounin (~david@84.212.130.215)
[16:27:43] *** Joins: repne_scasb (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[16:27:43] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[16:27:43] *** Joins: Auron (~Auron956@user/auron)
[16:27:43] *** Joins: xff0x (~xff0x@2001:1a81:53d2:1c00:3b45:e81a:a20c:e310)
[16:27:43] *** Joins: leonardus (sid358597@id-358597.tinside.irccloud.com)
[16:27:43] *** Joins: Camilo (~hugh@host-92-20-143-244.as13285.net)
[16:27:43] *** Joins: blinky42 (~quassel@user/blinky42)
[16:27:43] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[16:27:43] *** Joins: mickey8 (~user@user/mickey)
[16:27:43] *** Joins: vysn (~vysn@user/vysn)
[16:27:43] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[16:27:43] *** Joins: gggp (~gggp@123.113.182.84)
[16:27:43] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[16:27:43] *** Joins: sjmulder (~sjmulder@81-204-179-161.fixed.kpn.net)
[16:27:43] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[16:27:43] *** Joins: shredder (~user@user/shredder)
[16:27:43] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[16:27:43] *** Joins: bioparco (~bioparco@user/bioparco)
[16:27:43] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[16:27:43] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[16:27:43] *** Joins: mrig (~mrig@user/mrig)
[16:27:43] *** Joins: qbt (~edun@user/edun)
[16:27:43] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[16:27:43] *** Joins: password (~password@user/password2)
[16:27:43] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[16:27:43] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[16:27:43] *** Joins: mci64 (~mci64@185.242.190.95)
[16:27:43] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[16:27:43] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[16:27:43] *** Joins: tomgus1 (~tomgus1@90.208.15.36)
[16:27:43] *** Joins: gargus (~user@124-150-74-109.tpgi.com.au)
[16:27:43] *** Joins: b1101 (~b1101@ool-44c01641.dyn.optonline.net)
[16:27:43] *** Joins: beencubed (~beencubed@209.131.238.248)
[16:27:43] *** Joins: kuku (~kuku@user/kuku)
[16:27:43] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[16:27:43] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[16:27:43] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[16:27:43] *** Joins: PikaChokeMe (~PikaChoke@c-24-11-1-200.hsd1.ut.comcast.net)
[16:27:43] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[16:27:43] *** Joins: flynn (~mcbloch@user/flynn)
[16:27:43] *** Joins: Haxxa (~Haxxa@122-199-44-36.ip4.superloop.com)
[16:27:43] *** Joins: DefiantN (~DefiantN@user/defiantn)
[16:27:43] *** Joins: JackFin (~ircuser@S01069050ca4e3573.cg.shawcable.net)
[16:27:43] *** Joins: kmh_ (~kmh@p200300df5f0d0200dc05e9b97966e73c.dip0.t-ipconnect.de)
[16:27:43] *** Joins: bayaz (~bayaz@user/jeaye/bot/bayaz)
[16:27:43] *** Joins: JavaBean (~JavaBean@user/javabean)
[16:27:43] *** Joins: ornxka (~ornxka@user/ornxka)
[16:27:43] *** Joins: Rayke (rayke@user/rayke)
[16:27:43] *** Joins: digilink (~digilink@user/digilink)
[16:27:43] *** Joins: BUSY (~BUSY@user/busy)
[16:27:43] *** Joins: paruh (~paruh@92.60.39.18)
[16:27:43] *** Joins: nf (~n@monade.li)
[16:27:43] *** Joins: AquaL1te_ (~AquaL1te@user/aqual1te)
[16:27:43] *** Joins: nulleip_ (~luiz@189.34.167.234)
[16:27:43] *** Joins: t3nj1n_ (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[16:27:43] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[16:27:43] *** Joins: kurtthem1ker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[16:27:43] *** Joins: andrewSC_ (~andrewSC@archlinux/trusteduser/andrewSC)
[16:27:43] *** Joins: karstensrage (~karstensr@user/karstensrage)
[16:27:43] *** Joins: pizdets_ (~pizdets@183.182.111.62)
[16:27:43] *** Joins: Caffeinated (~alexboy@user/alexdelarge)
[16:27:43] *** Joins: inee (~ine@wolowolo.com)
[16:27:43] *** Joins: kaivai_ (~kaivai@user/kaivai)
[16:27:43] *** Joins: erica (~erica@user/erica)
[16:27:43] *** Joins: sevengraff (~admin@li891-34.members.linode.com)
[16:27:43] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[16:27:43] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[16:27:43] *** Joins: brabrax (~brabrax@user/brabrax)
[16:27:43] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[16:27:43] *** Joins: u4ia (~u4ia@88-159-0-88.fixed.kpn.net)
[16:27:43] *** Joins: edk (edk@libera/staff/edk)
[16:27:43] *** Joins: LadyCailin (LadyCailin@user/ladycailin)
[16:27:43] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[16:27:43] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[16:27:43] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[16:27:43] *** Joins: dermato (~dermatobr@154.21.23.75)
[16:27:43] *** Joins: Thedarkb2 (~Thedarkb@85.255.234.237)
[16:27:43] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[16:27:43] *** Joins: mven (~mven@072-179-001-159.res.spectrum.com)
[16:27:43] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[16:27:43] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[16:27:43] *** Joins: beeza (sid53872@id-53872.tinside.irccloud.com)
[16:27:43] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[16:27:43] *** Joins: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net)
[16:27:43] *** Joins: ^-^hi (~hi^-^@user/-hi/x-1729478)
[16:27:43] *** iridium.libera.chat sets mode: +o bayaz
[16:27:43] *** Joins: Doffi (~doffi@91.132.197.188)
[16:27:43] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[16:27:43] *** Joins: mz` (~mz`@user/mz/x-8532539)
[16:27:43] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[16:27:43] *** Joins: bluebird (~bluebird@user/bluebird)
[16:27:43] *** Joins: mei (~mei@user/mei)
[16:27:43] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[16:27:43] *** Joins: NEYi (~NEYi@109.251.216.38)
[16:27:43] *** Joins: SmokenatorZ (~Smokenato@189-69-11-13.dsl.telesp.net.br)
[16:27:43] *** Joins: APic (apic@apic.name)
[16:27:43] *** Joins: haliucinas (~haliucina@5.20.153.21)
[16:27:43] *** Joins: D-04 (~D-04@89.249.65.28)
[16:27:43] *** Joins: molt (~molt@79.140.150.21)
[16:27:43] *** Joins: wolfshappen (~waff@irc.furworks.de)
[16:27:43] *** Joins: NChief (~nchief@irc.nortv.net)
[16:27:43] *** Joins: caramel (~caramel@user/caramel)
[16:27:43] *** Joins: glguy (x@libera/staff/glguy)
[16:27:43] *** Joins: pyzozord (pyzozord@user/pyzozord)
[16:27:43] *** Joins: jab416171 (~jab416171@c-174-52-176-66.hsd1.ut.comcast.net)
[16:27:43] *** Joins: lasr[m] (~lasrhalog@2001:470:69fc:105::c875)
[16:27:43] *** Joins: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5)
[16:27:43] *** Joins: bmahe[m] (~bmahematr@2001:470:69fc:105::d140)
[16:27:43] *** Joins: JanC (~janc@user/janc)
[16:27:43] *** Joins: webstrand (~webstrand@user/webstrand)
[16:27:43] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[16:27:43] *** Joins: HenryTheLongshot (~Henry@46.101.4.181)
[16:27:43] *** Joins: Ara (~Ara@user/ara)
[16:27:43] *** Joins: dkeohane1 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[16:27:43] *** Joins: picooz (~picooz@user/picooz)
[16:27:43] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[16:27:43] *** Joins: ra4king (~ra4king@roiatalla.com)
[16:27:43] *** Joins: jeaye (~jeaye@user/jeaye)
[16:27:43] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[16:27:43] *** Joins: Karyon (~Karyon@user/karyon)
[16:27:43] *** Joins: d10n (~d10n@user/d10n)
[16:27:43] *** Joins: jootoi (~jootoi@130.61.158.197)
[16:27:43] *** Joins: Pixi (~Pixi@user/pixi)
[16:27:43] *** Joins: umimaso (~umimaso@188.166.147.131)
[16:27:43] *** Joins: phogg (~phogg@static-108-51-94-2.washdc.fios.verizon.net)
[16:27:43] *** Joins: digdilem (~digdilem@rolf.yuss.org)
[16:27:43] *** Joins: causative_ (~halberd@user/causative)
[16:27:43] *** Joins: snep (craftxbox@2001:bc8:654:1c02::1)
[16:27:43] *** Joins: libera- (~utunbu@user/utunbu)
[16:27:43] *** Joins: orhan89 (~orhan89@151.91.188.35.bc.googleusercontent.com)
[16:27:43] *** Joins: raczka (~raczka@dedicated-aid6.rev.nazwa.pl)
[16:27:43] *** Joins: kinduff4 (~kinduff@user/kinduff)
[16:27:43] *** Joins: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[16:27:43] *** Joins: KillerWasp_ (~KillerWas@96.126.121.103)
[16:27:43] *** Joins: carbolymer (~carbolyme@dropacid.net)
[16:27:43] *** Joins: theglass (~glass@user/theglass)
[16:27:43] *** Joins: cornduk (~cornduck@li1755-129.members.linode.com)
[16:27:43] *** Joins: edr (~edr@user/edr)
[16:27:43] *** Joins: pnill_ (~pnill@ip170.ip-54-39-37.net)
[16:27:43] *** Joins: void09 (~void@revinin5minute.com)
[16:27:43] *** Joins: spike_spiegel5 (~spike_spi@static.200.4.251.148.clients.your-server.de)
[16:27:43] *** Joins: mteo (francis@user/francis)
[16:27:43] *** Joins: gdarko (~me@dg.mk)
[16:27:43] *** Joins: askie (~askie@81.171.100.212)
[16:27:43] *** Joins: Flecks (~fleck@user/fleck)
[16:27:43] *** Joins: Spydar007 (~spydar007@user/spydar007)
[16:27:43] *** Joins: phenom (~primus@user/phenom)
[16:27:43] *** Joins: abirkill (snoopy@d172-218-198-90.bchsia.telus.net)
[16:27:43] *** Joins: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net)
[16:27:43] *** Joins: Dijky (~Dijky@user/dijky)
[16:27:43] *** Joins: X-Scale (~ARM@238.72.108.93.rev.vodafone.pt)
[16:27:43] *** Joins: zopsi (~zopsi@irc.dir.ac)
[16:27:43] *** Joins: nicolapcweek94 (wasp@tilde.institute)
[16:27:43] *** Joins: adrian17 (~adrian17@thehyper.space)
[16:27:43] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[16:27:43] *** Joins: russjr086 (~russjr08@fw.internal.russ.network)
[16:27:43] *** Joins: Khoyo (~khoyo@user/khoyo)
[16:27:43] *** Joins: kzootech (~awalm@kzoo.tech)
[16:27:43] *** Joins: davros (~davros@host86-184-180-96.range86-184.btcentralplus.com)
[16:27:43] *** Joins: DarkTrick_ (~DarkTrick@pl-768-132.bunbun.ne.jp)
[16:27:43] *** Joins: Foritus (~buggery@cpc91316-watf11-2-0-cust68.15-2.cable.virginm.net)
[16:27:43] *** Joins: MeatNit (NeatNit@powered.by.jay2k1.com)
[16:27:43] *** Joins: davve_ (davve@bsd.douchedata.com)
[16:27:43] *** Joins: Bigcheese_ (~quassel@107.182.234.200)
[16:27:43] *** Joins: CoJaBo (~aztec@user/CoJaBo)
[16:27:43] *** Joins: Teacup (~teacup@user/teacup)
[16:27:43] *** Joins: vin (~vin@user/crash)
[16:27:43] *** Joins: p0g0__ (~p0g0@216.211.147.11)
[16:27:43] *** Joins: skreech (~skreech@user/skreech)
[16:27:43] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[16:27:43] *** Joins: fspy (~fspy@user/fspy)
[16:27:43] *** Joins: Raguile (~Raguile@user/raguile)
[16:27:43] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[16:27:43] *** Joins: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net)
[16:27:43] *** Joins: jakesyl (sid56879@id-56879.stonehaven.irccloud.com)
[16:27:43] *** Joins: Trieste_ (T@user/pilgrim)
[16:27:43] *** Joins: mnrmnaugh (~mnrmnaugh@68.162.206.56)
[16:27:43] *** Joins: Scarecr0w (~intern0t@user/scarecr0w)
[16:27:43] *** Joins: bjs (sid190364@user/bjs)
[16:27:43] *** Joins: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net)
[16:27:43] *** Joins: znemo_ (sid500529@highgate.irccloud.com)
[16:27:43] *** Joins: monchi (sid347418@id-347418.charlton.irccloud.com)
[16:27:43] *** Joins: ullbeking (sid5364@id-5364.charlton.irccloud.com)
[16:27:43] *** Joins: greyblue9 (sid500829@id-500829.charlton.irccloud.com)
[16:27:43] *** Joins: Pent (sid313808@id-313808.tooting.irccloud.com)
[16:27:43] *** Joins: mawk (mawk@wireguard/contributor/mawk)
[16:27:43] *** Joins: PlanckWalk (~Planck@user/planckwalk)
[16:27:43] *** Joins: jinsun (~quassel@user/jinsun)
[16:27:43] *** Joins: geonic (~geonic@user/geonic)
[16:27:43] *** Joins: immibis_ (~hexchat@62.156.144.218)
[16:27:43] *** Joins: Cyp_ (~cyp@192038129116.mbb.telenor.dk)
[16:27:43] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:27:43] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[16:27:43] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[16:27:43] *** Joins: c705 (c705@alpine/contributor/c705)
[16:27:43] *** Joins: linext_ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net)
[16:27:43] *** Joins: Jigsy (~Jigsy@user/jigsy)
[16:27:43] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:27:43] *** Joins: [Kalisto] (~nico@user/kalisto/x-8968079)
[16:27:43] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[16:27:43] *** Joins: phundrak (~phundrak@82-65-91-105.subs.proxad.net)
[16:27:43] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[16:27:43] *** Joins: Hrmmm (~Hrmmm@198-27-172-195.fiber.dynamic.sonic.net)
[16:27:43] *** Joins: death916 (~death916@user/death916)
[16:27:43] *** Joins: tonsofpcs (~tonsofpcs@cpe-67-251-117-244.stny.res.rr.com)
[16:27:43] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[16:27:43] *** Joins: bocaneri (~bismilah@about/linux/staff/sauvin)
[16:27:43] *** Joins: daegalus (~yulian@user/daegalus)
[16:27:43] *** Joins: ario (~ario@159.65.220.102)
[16:27:43] *** Joins: luiserebii (~luiserebi@li1568-23.members.linode.com)
[16:27:43] *** Joins: oldlaptop (~quassel@45.63.78.126)
[16:27:43] *** Joins: calcmandan (~quassel@user/calcmandan)
[16:27:43] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[16:27:43] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[16:27:43] *** Joins: a1paca_ (~a1paca@user/a1paca)
[16:27:43] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[16:27:43] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[16:27:43] *** Joins: rf` (~envex@cpe-173-91-189-33.neo.res.rr.com)
[16:27:43] *** Joins: scjosh (~scjosh@206.189.79.69)
[16:27:43] *** Joins: stoneware (~stoneware@user/stoneware)
[16:27:43] *** Joins: bin4ry (~bin4ry@128.199.135.148)
[16:27:43] *** Joins: Krufu (~AnCELASTR@216.243.47.158)
[16:27:43] *** Joins: gry (~quassel@botters/gry)
[16:27:43] *** Joins: neunon (~neunon@user/neunon)
[16:27:43] *** Joins: sandman13 (sandman13@user/sandman13)
[16:27:43] *** Joins: paulo (paulo@jujube.ircnow.org)
[16:27:43] *** Joins: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net)
[16:27:43] *** Joins: Smeef (~deathonat@user/smeef)
[16:27:43] *** Joins: derpy (~quassel@dslb-002-203-230-167.002.203.pools.vodafone-ip.de)
[16:27:43] *** Joins: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net)
[16:27:43] *** Joins: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net)
[16:27:43] *** Joins: micrex22 (~quassel@user/micrex22)
[16:27:43] *** Joins: thebob (~thebob@user/thebob)
[16:27:43] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[16:27:43] *** Joins: d3x0r (~d3x0r@ip68-108-54-126.lv.lv.cox.net)
[16:27:43] *** Joins: Davros_ (~dalek@pathweb.org)
[16:27:43] *** Joins: ^[ (~user@user//x-8473491)
[16:27:43] *** Joins: feoh (~feoh@ec2-18-224-106-217.us-east-2.compute.amazonaws.com)
[16:27:43] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[16:27:43] *** Joins: Tempesta (~Tempesta@user/tempesta)
[16:27:43] *** Joins: sklv1 (~sklv@gateway/tor-sasl/sklv)
[16:27:43] *** Joins: FKAShinobi (~shinobi@2601:18c:d07f:f2e9:b36e:b615:5c5f:a300)
[16:27:43] *** Joins: YHVH (~yhvh@2601:982:8300:8090:a09d:5f40:6d86:e7a)
[16:27:43] *** Joins: znedw (~znedw@home.znedw.com)
[16:27:43] *** Joins: hardtotell (~hardtotel@satyr.seedboxes.cc)
[16:27:43] *** Joins: rwb (~augh@theguntretort.com)
[16:27:43] *** Joins: flatlinejim (~bobmin@203.29.243.207)
[16:27:43] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[16:27:43] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e9f6:1ae9:552:9cec)
[16:27:43] *** Joins: DrMax (~DrMax@node-1w7jra94757g1bivcltkwu572.ipv6.telus.net)
[16:27:43] *** Joins: cisco87 (~quassel@lnxg33k.com)
[16:27:43] *** Joins: Teckla (~Teckla@user/teckla)
[16:27:43] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[16:27:43] *** Joins: jcarpenter2 (rofl@2603:3016:1e01:b9c0:20b3:fc15:12c5:30d8)
[16:27:43] *** Joins: V (~v@anomalous.eu)
[16:27:43] *** Joins: Whippersnapper (~whprsnpr@user/whippersnapper)
[16:27:43] *** Joins: Ruxnor (kevin@user/kddlb)
[16:27:43] *** Joins: Arahael (~arahael@124.170.238.106)
[16:27:43] *** Joins: w0ng (~w0ng@185.218.127.38)
[16:27:43] *** Joins: adanwan_ (~adanwan@gateway/tor-sasl/adanwan)
[16:27:43] *** Joins: shenanigans (~shenaniga@51.15.76.217)
[16:27:43] *** Joins: Trashlord (~trash@user/trashlord)
[16:27:43] *** Joins: RedNifre__ (~michael@dslb-002-201-038-051.002.201.pools.vodafone-ip.de)
[16:27:43] *** Joins: novns (~novns@user/novns)
[16:27:43] *** Joins: [R] (~rs@genoce.org)
[16:27:43] *** Joins: nolesswrong (~nolesswro@45.32.1.17)
[16:27:43] *** Joins: cronos (~cronos@user/cronos)
[16:27:43] *** Joins: buffet (~buffet@buffet.sh)
[16:27:43] *** Joins: andypandy (~andypandy@h-178-174-148-234.A163.priv.bahnhof.se)
[16:27:43] *** Joins: BGL (~twenty@75-149-171-58-Washington.hfc.comcastbusiness.net)
[16:27:43] *** Joins: mfiano (~mfiano@li1282-157.members.linode.com)
[16:27:43] *** Joins: AMG (ghebo@user/amg)
[16:27:43] *** Joins: biberu (~biberu@user/biberu)
[16:27:43] *** Joins: Telvana (capo@user/telvana)
[16:27:43] *** Joins: km2m (~km2m@1.116.81.184)
[16:27:43] *** Joins: knielsen (~knielsen@mail.knielsen-hq.org)
[16:27:43] *** Joins: swistak (~swistak@185.21.216.141)
[16:27:43] *** Joins: dmu (~darkmusic@user/darkmusic)
[16:27:43] *** Joins: Valware (~val@Valeyard/Developer/Valware)
[16:27:43] *** Joins: dante443 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340)
[16:27:43] *** Joins: livestradamus (~quassel@user/livestradamus)
[16:27:43] *** Joins: LjL (~ljl@user/ljl)
[16:27:43] *** Joins: birkoff (birkoff@user/birkoff)
[16:27:43] *** Joins: LuKaRo_ (~LuKaRo@p57b15425.dip0.t-ipconnect.de)
[16:27:43] *** Joins: Aye (jeda@hellomouse/dev/cryb.jeda)
[16:27:43] *** Joins: justache (~justache@user/justache)
[16:27:43] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[16:27:43] *** Joins: nisstyre (~wes@user/nisstyre)
[16:27:43] *** Joins: Square (~a@178.62.91.8)
[16:27:43] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[16:27:43] *** Joins: glider_ (~glider@user/glider)
[16:27:43] *** Joins: echoreply1 (~echoreply@2001:19f0:9002:1f3b:5400:ff:fe6f:8b8d)
[16:27:43] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[16:27:43] *** Joins: slavfox (~slavfox@93.158.232.111)
[16:27:43] *** Joins: mrkajetanp (~mrkajetan@88.98.245.28)
[16:27:43] *** Joins: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com)
[16:27:43] *** Joins: Kol (~Kol@d75-157-122-186.bchsia.telus.net)
[16:27:43] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[16:27:43] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[16:27:43] *** Joins: tvm (~tom@ip-89-103-250-229.net.upcbroadband.cz)
[16:27:43] *** Joins: nitrix (~nitrix@user/nitrix)
[16:27:43] *** Joins: jstoker (~jstoker@user/jstoker)
[16:27:43] *** Joins: user282069 (user@2a01:7e00::f03c:92ff:fe7f:456d)
[16:27:43] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[16:27:43] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[16:27:43] *** Joins: Kays (Kays@user/kays)
[16:27:43] *** Joins: SoF (~skius@user/skius)
[16:27:43] *** Joins: AkechiShiro (~licht@user/akechishiro)
[16:27:43] *** Joins: biberao (~Unknown@user/biberao)
[16:27:43] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[16:27:43] *** Joins: Guest282 (ianmacd@faust.caliban.org)
[16:27:43] *** Joins: xeno (~xeno@user/xeno)
[16:27:43] *** Joins: Vesryn (~vesryn@user/vesryn)
[16:27:43] *** Joins: ishanjain (~ishan@li2028-175.members.linode.com)
[16:27:43] *** Joins: Noventicx (~Noventicx@crux.uberspace.de)
[16:27:43] *** Joins: DaPinkOne (~Dap@user/dap)
[16:27:43] *** Joins: codingcampbell (~codingcam@user/codingcampbell)
[16:27:43] *** Joins: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com)
[16:27:43] *** Joins: koolazer (~koo@user/koolazer)
[16:27:43] *** Joins: micronn (~micronn@user/micronn)
[16:27:43] *** Joins: con3 (~con3@2604:a880:4:1d0::be:d000)
[16:27:43] *** Joins: nthrow_ (~nat@user/nthrow)
[16:27:43] *** Joins: amanr (~therojjha@20.204.87.0)
[16:27:43] *** Joins: hexology- (~hexology@user/hexology)
[16:27:43] *** Joins: hsiktas (sid224847@id-224847.tooting.irccloud.com)
[16:27:43] *** Joins: ebb (ebb@user/ebb)
[16:27:43] *** Joins: austincheney (~austinche@2600:1700:1220:76c8:f982:507a:283b:3df9)
[16:27:43] *** Joins: pizza (~pizzaiolo@user/pizzaiolo)
[16:27:43] *** Joins: liam (sid7517@id-7517.brockwell.irccloud.com)
[16:27:43] *** Joins: launchd (examknow@bitbot/launchd)
[16:27:43] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[16:27:43] *** Joins: TinoDidriksen (~TinoDidri@tinodidriksen.com)
[16:27:43] *** Joins: Neverloads (NeverLoad@freakshells.net)
[16:27:43] *** Joins: b30wulffz (~b30wulffz@20.204.87.0)
[16:27:43] *** Joins: ShockTohp (~kevin@155.138.224.160)
[16:27:43] *** Joins: ChanServ (ChanServ@services.libera.chat)
[16:27:43] *** Joins: myon98 (~myon98@user/myon98)
[16:27:43] *** Joins: em (~em@li247-180.members.linode.com)
[16:27:43] *** Joins: lf94 (~lf94@2604:a880:cad:d0::cd6:8001)
[16:27:43] *** Joins: brandon_ (~brandon@user/brandon)
[16:27:43] *** Joins: cacheyourdreams (~cache@user/cacheyourdreams)
[16:27:43] *** Joins: Retr0id (~Retr0id@user/retr0id)
[16:27:43] *** Joins: WarauSalesman (~sjw@pool-71-172-141-233.nwrknj.fios.verizon.net)
[16:27:43] *** Joins: davidv7 (~davidv7@user/videogameenjoyer)
[16:27:43] *** Joins: hbjy (~hbjy@rockylinux/web/hbjy)
[16:27:43] *** Joins: thomas_25 (thomas_25@pls.just.stfu-kthx.bnc4you.xyz)
[16:27:43] *** Joins: deathrat (sid14886@id-14886.charlton.irccloud.com)
[16:27:43] *** Joins: nanowire (rob@user/nanowire)
[16:27:43] *** Joins: sco1 (~sco1@charon.whatbox.ca)
[16:27:43] *** Joins: boycott (~boycott@user/boycott)
[16:27:43] *** Joins: Geronimo (~Geronimo@user/geronimo)
[16:27:43] *** Joins: confluence (~quassel@2a01:4f8:c17:3ca::2)
[16:27:43] *** Joins: bertiger (~bertiger@user/bertiger)
[16:27:43] *** Joins: QuartzXtal (uid507167@id-507167.tooting.irccloud.com)
[16:27:43] *** Joins: t^ (~thomas@2001:41d0:2:a84:1::6)
[16:27:43] *** Joins: pierrepaul (sid504261@id-504261.highgate.irccloud.com)
[16:27:43] *** Joins: edenist (edenist@rdns.robotprofessor.net)
[16:27:43] *** Joins: farn (~farn@2a03:4000:7:3cd:d4ab:85ff:feeb:f505)
[16:27:43] *** Joins: bw (sid2730@user/betawaffle)
[16:27:43] *** Joins: |smlckz| (smlckz@user/smlckz)
[16:27:43] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[16:27:43] *** Joins: InPhase (~InPhase@openscad/inphase)
[16:27:43] *** iridium.libera.chat sets mode: +o ChanServ
[16:27:43] *** Joins: tanto (~tanto@178.62.223.32)
[16:27:43] *** Joins: TheLinuxNerd (~tux@user/thelinuxnerd)
[16:27:43] *** Joins: orkim (~orkim@user/orkim)
[16:27:43] *** Joins: remedan (~remedan@balak.me)
[16:27:43] *** Joins: RedCrab (~Red_Crab@user/redcrab)
[16:27:43] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[16:27:43] *** Joins: cfjk (~cfjk@user/cfjk)
[16:27:43] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[16:27:43] *** Joins: mwbrown (~mwbrown@user/mwbrown)
[16:27:43] *** Joins: Endust (leggt@iceland.sdf.org)
[16:27:43] *** Joins: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[16:27:43] *** Joins: dartmouthed (~blackunsp@li761-35.members.linode.com)
[16:27:43] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[16:27:43] *** Joins: insolentworm (~root@vps-7db3bef3.vps.ovh.ca)
[16:27:43] *** Joins: Tom1 (~tom@user/ghostdragon)
[16:27:43] *** Joins: routeveg (~lee@197.ip-51-195-136.eu)
[16:27:43] *** Joins: Bodger1234_ (sid503511@id-503511.highgate.irccloud.com)
[16:27:43] *** Joins: sauce (~sauce@omae.wa.mou.shindei.ru)
[16:27:43] *** Joins: ross (sid305269@user/ross)
[16:27:43] *** Joins: BlueShark (sid10311@user/blueshark)
[16:27:43] *** Joins: backslash (~backslash@user/backslash)
[16:27:43] *** Joins: NiKaN (sid385034@id-385034.brockwell.irccloud.com)
[16:27:43] *** Joins: Liothen (sid23291@id-23291.brockwell.irccloud.com)
[16:27:43] *** Joins: vito (sid1962@user/vito)
[16:27:43] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[16:27:43] *** Joins: avery (sid501608@id-501608.highgate.irccloud.com)
[16:27:43] *** Joins: ikiryo (sid109660@user/ikiryo)
[16:27:43] *** Joins: feliix42_ (~felix@gibbs.uberspace.de)
[16:27:43] *** Joins: psb (sid500598@user/psb)
[16:27:43] *** Joins: computerquip (sid423484@user/computerquip)
[16:27:43] *** Joins: obrut (~obrut@user/obrut)
[16:27:43] *** Joins: rdrg109 (~rdrg109@51.195.232.80)
[16:27:43] *** Joins: dTal (quassel@dragonbox/wizzard/dtal)
[16:27:43] *** Joins: TallonRain (sid214799@user/tallonrain)
[16:27:43] *** Joins: krin (sid500722@user/krin)
[16:27:43] *** Joins: foxtrot (~foxtrot@user/foxtrot)
[16:27:50] *** Joins: entuland (~entuland@user/entuland)
[16:27:50] *** Joins: kwilczynski (sid379192@user/kwilczynski)
[16:27:50] *** Joins: bcd (~bcd@83-84-164-51.cable.dynamic.v4.ziggo.nl)
[16:27:50] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[16:27:50] *** Joins: jazzy (~jaziz@2600:380:4545:1bb4:ec20:e391:8f1d:8467)
[16:27:50] *** Joins: nupilios (~nupilios@178-191-85-128.adsl.highway.telekom.at)
[16:27:50] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:27:50] *** Joins: dre (~dre@2001:8003:c932:c301:8028:ecc5:f3df:cd14)
[16:27:50] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[16:27:50] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[16:27:50] *** Joins: freakazoid333 (~matt@2603-9000-cf0f-80e3-14c2-094e-704a-6e4b.inf6.spectrum.com)
[16:27:50] *** Joins: Alpha3031 (~alpha3031@2001:470:69fc:105::2f6b)
[16:27:50] *** Joins: esran (~esran@cb.conical-effort.net)
[16:27:50] *** Joins: segnior (~segnior@user/segnior)
[16:27:50] *** Joins: itok (sid418430@id-418430.charlton.irccloud.com)
[16:27:50] *** Joins: Notiche (~quassel@irk.rojekti.fi)
[16:27:50] *** Joins: tofran (~tofran@37.189.158.134)
[16:27:50] *** Joins: fingercomp (~fingercom@fomalhaut.me)
[16:27:50] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[16:27:50] *** Joins: enteral (~enteral@discovery.whatbox.ca)
[16:27:50] *** Joins: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com)
[16:27:50] *** Joins: xa0s (~xa0s@mab.sdf.org)
[16:27:50] *** Joins: strudl (~strudl@user/strudl)
[16:27:50] *** Joins: Quietwalker (~X@24.162.16.145)
[16:27:50] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:2851:91a4:af4c:7957)
[16:27:50] *** Joins: jiffe (~jiffe@mail.nsab.us)
[16:27:50] *** Joins: dld (~davidlowr@2601:197:600:1210:90d2:efa1:6a80:6389)
[16:27:50] *** Joins: akselmo (~akselmo@user/akselmo)
[16:27:50] *** Joins: johan (~johan@user/johan)
[16:27:50] *** Joins: baloona (~baloona@mail.baloona.de)
[16:27:50] *** Joins: el_kevino (~mote@2604:a880:400:d1::901:5001)
[16:27:50] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[16:27:50] *** Joins: pavelow (~pavelow@opticalchimp.com)
[16:27:50] *** Joins: yourfate (~yourfate@cabal.yourfate.org)
[16:27:50] *** Quits: tofran (~tofran@37.189.158.134) (Max SendQ exceeded)
[16:27:50] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Max SendQ exceeded)
[16:27:59] *** Joins: federico_it (~textual@151.95.116.125)
[16:27:59] *** Joins: sophie[m]1 (~sophiesop@2001:470:69fc:105::9b6d)
[16:27:59] *** Joins: berndj (~berndj@ns1.linksynergy.co.za)
[16:27:59] *** Joins: zhiayang (~zhiayang@user/zhiayang)
[16:27:59] *** Joins: stkw0 (~quassel@ns3046126.ip-91-121-8.eu)
[16:27:59] *** Joins: anderson (~ande@134.209.221.71)
[16:27:59] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[16:27:59] *** Joins: Jck_true (~jcktrue@188.228.89.240)
[16:27:59] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[16:27:59] *** Joins: ds (~dshoreman@user/ds)
[16:27:59] *** Joins: Twix (~None@2a01:4f8:192:23d0::1be4:a)
[16:27:59] *** Joins: mercenary (~mercenary@user/mercenary)
[16:27:59] *** Joins: matiss (~matiss@almalinux/web/matiss)
[16:27:59] *** Joins: deniska (~denis@user/deniska)
[16:27:59] *** Joins: Pajus (~Pajus@user/pajus)
[16:27:59] *** Joins: addc182064 (~addc182@host86-134-254-227.range86-134.btcentralplus.com)
[16:27:59] *** Joins: Henry151 (~bishop@user/henry151)
[16:27:59] *** Joins: Amun-Ra (~amun-ra@retro.rocks)
[16:27:59] *** Joins: OverCoder (~OverCoder@user/overcoder)
[16:27:59] *** Joins: jontxu (~jon@user/jontxu)
[16:27:59] *** Joins: interru (~interru@fs.host.decodem.io)
[16:27:59] *** Joins: les (znc@user/les)
[16:27:59] *** Joins: barlas (~aqeel@user/barlas)
[16:27:59] *** Joins: Soni (~quassel@autistic.space)
[16:28:00] *** Quits: launchd (examknow@bitbot/launchd) (Excess Flood)
[16:28:03] <user51> i guess it tastes good tho
[16:28:09] <CuriousErnestBro> it has the altitude and farm printed on it
[16:28:11] *** Joins: tofran (~tofran@37.189.158.134)
[16:28:21] <CuriousErnestBro> yeah it tastes pretty good but I need to learn to brew it properly 
[16:28:27] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[16:28:44] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:28:53] *** Joins: launchd (examknow@bitbot/launchd)
[16:29:16] <mrig> CuriousErnestBro: you could call it 'extreme horizontal coding' that way it seems far more energetic.
[16:29:29] *** Joins: Brando753 (~Brando753@ec2-34-218-254-59.us-west-2.compute.amazonaws.com)
[16:29:37] <DnzAtWrk> that's what she said
[16:29:50] <CuriousErnestBro> ^
[16:29:52] * Arahael twacks mrig's head.
[16:30:12] <user51> i just use instant coffee. less compilation steps.
[16:30:14] * mrig reverberates from the twacking.
[16:30:34] *** Quits: bmahe[m] (~bmahematr@2001:470:69fc:105::d140) (Ping timeout: 240 seconds)
[16:30:44] *** Quits: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb) (Ping timeout: 252 seconds)
[16:30:44] *** Quits: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee) (Ping timeout: 252 seconds)
[16:31:02] *** Quits: Alpha3031 (~alpha3031@2001:470:69fc:105::2f6b) (Ping timeout: 256 seconds)
[16:31:07] *** Joins: chomwitt (~chomwitt@2a02:587:dc02:6400:12c3:7bff:fe6d:d374)
[16:31:08] *** Quits: sophie[m]1 (~sophiesop@2001:470:69fc:105::9b6d) (Ping timeout: 272 seconds)
[16:31:15] *** Quits: lasr[m] (~lasrhalog@2001:470:69fc:105::c875) (Ping timeout: 268 seconds)
[16:31:25] *** Quits: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5) (Ping timeout: 276 seconds)
[16:31:30] <DnzAtWrk> mx switch tester, stress relief toy or coworker stress creation toy
[16:32:00] <DnzAtWrk> I wonder if mechanical keyboards should be banned in offices
[16:32:12] <sco1> No thank you
[16:32:23] <DnzAtWrk> at least green, blue and white
[16:32:35] <mrig> DnzAtWrk: one person per office, and it is fine.
[16:32:52] <DnzAtWrk> that's the way offices should be
[16:33:06] <mrig> well 2 when coding with a partner but there logically only one is typing.
[16:33:20] <mrig> anything else is a chicken coup.
[16:33:39] <DnzAtWrk> I think I'd rather stick my head in a blender than work in an open-plan office
[16:34:02] <mrig> they must be great if you are the fox though :)
[16:34:14] <mrig> less so for decent folk :P
[16:34:46] * mrig returns to haystack to look for needle.
[16:34:49] <DnzAtWrk> probably great for the extrovert, the talker
[16:34:59] <DnzAtWrk> not the socially inept introvert who likes just writing code
[16:36:01] <DnzAtWrk> I know I'm extremely easily distracted by noises and things going by in my pheripheral vision
[16:36:01] <mrig> Not all introverts are socially inept you know.
[16:36:11] <mrig> it is not a defect either.
[16:36:22] <DnzAtWrk> meh, you could argue that's part of the definition of introvert
[16:36:39] <mrig> yes me to so easily distracted.
[16:36:57] <GeDaMo> "Hi, Tick, I'm your mind. I'm sorry I haven't been around much lately but I'm easily distracted by shiny objects" :P
[16:37:10] <mrig> Im an introvert and am fine socialising, but do try to avoid it.
[16:37:31] <DnzAtWrk> I'm an introvert but I can pretend to be an extrovert for some time
[16:37:32] <mrig> but the effort involved in the 'social thing' is so tiring that if I do it I do nothing else.
[16:37:41] <DnzAtWrk> being slumping down my shoulders and letting out a breath when alone
[16:37:50] <DnzAtWrk> before*
[16:38:06] <DnzAtWrk> that's pretty socially inept
[16:39:22] <DnzAtWrk> I'm probably not fun to be around for long periods of time, since my moods deteriorates over time
[16:39:26] <DnzAtWrk> mood*
[16:39:27] <GeDaMo> I'm not good socially :|
[16:39:38] <CuriousErnestBro> GeDaMo practice ‚ó°Ãà 
[16:39:44] *** Quits: mikeliuk (~mikeliuk@109.249.187.96) (Quit: Connection closed)
[16:39:45] <CuriousErnestBro> being good socially isn't a character trait
[16:39:47] <CuriousErnestBro> it's a skill
[16:40:04] <CuriousErnestBro> it could also be both, who knows :P
[16:40:05] <DnzAtWrk> I'd say it's usually linked to confidence
[16:40:13] <CuriousErnestBro> confidence is a vague term 
[16:40:22] <GeDaMo> I'm a slow thinker, I have difficulty keeping up with conversations
[16:40:36] <GeDaMo> Also I find making eye contact uncomfortable
[16:40:37] <DnzAtWrk> I just easily get bored with things I find boring
[16:40:59] <pulse> you can always make foot contact
[16:41:01] <DnzAtWrk> eye contact do suck, but that's probably due to being cross eyed
[16:41:03] <DnzAtWrk> which eye to use!
[16:41:09] <CuriousErnestBro> pulse are you also a foot man
[16:41:41] <pulse> a toe man
[16:41:43] <DnzAtWrk> my friend said I looked crazy when I kept switching eyes on him
[16:42:41] <mrig> CuriousErnestBro: it is completely defined by something that is akin to genetics, not a skill that is practicable by all in the slightest.
[16:42:46] <pulse> you know if you're evil you can always make people feel bad in social situations
[16:42:52] *** Joins: inky_ (~inky@37.252.82.242)
[16:42:52] <pulse> "hey what's wrong with your ears?!"
[16:43:04] <mrig> common misconception made by social people is that they have acquired some sort of skill.
[16:43:38] <DnzAtWrk> they do have skulls
[16:43:40] <DnzAtWrk> skills*
[16:43:50] <DnzAtWrk> gained from being social
[16:43:54] <merijn> mrig: Counterpoint: I'm a very introverted "not a people" person and I have, in fact, gotten much, *much* better at social interaction in my life by practicing intentionally
[16:43:54] <DnzAtWrk> and having a social upbringing
[16:43:57] <DnzAtWrk> and being social in school
[16:44:04] <DnzAtWrk> and working in the social sector
[16:44:04] <mrig> GeDaMo: me too so some extent, I over compensate for not being on the same wavelength, can be rather awkward at times.
[16:44:11] <pulse> i've been social once, it's not that good
[16:44:26] <merijn> There's plenty of skill you can practice when it comes to social interaction
[16:44:37] <DnzAtWrk> to begin with, how to small talk
[16:44:40] <mrig> merijn: life is made up of phases during which the way in which we react with our underlying 'pattern' changes
[16:44:41] *** Joins: Guest4267 (~smlckmatr@2001:470:69fc:105::c885)
[16:44:48] <mrig> also in a linear way over time.
[16:44:55] <mrig> combination of effects.
[16:44:57] <DnzAtWrk> The Sims wasn't entirely unrealistic when you could increase charisma by talking into a mirror for hours on end
[16:44:59] <DnzAtWrk> it does help
[16:45:06] <CuriousErnestBro> good job merijn 
[16:45:21] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:cc55:1f37:6445:3091)
[16:45:26] <CuriousErnestBro> today I experimented with putting pressure on someone
[16:45:28] <CuriousErnestBro> :D
[16:45:54] <DnzAtWrk> how many bars?
[16:46:06] <user51> DnzAtWrk: how much does the mirror help?
[16:46:11] <mrig> merijn: I do hear what you are saying, but believe that there a far more science behind this than we at time think.
[16:46:22] <CuriousErnestBro> no I called my uni and the helpdesk girl didn't want to help me so I became slightly confrontational 
[16:46:28] <merijn> I mean, there's lots of stuff that has been written about interpreting and understanding body language and you can just, like, read that stuff and pay careful attention in daily life and get better at judging things
[16:46:28] <DnzAtWrk> to some degree it helps you to speak my fluidly
[16:46:38] <DnzAtWrk> I mean, I personally talk to myself when alone too
[16:46:43] <CuriousErnestBro> and then she helped me >:D
[16:46:44] <DnzAtWrk> that probably also helps
[16:46:57] <merijn> DnzAtWrk: I recommend getting a cat, then it feels less weird :p
[16:47:03] *** Quits: inky (~inky@5.77.151.77) (Ping timeout: 268 seconds)
[16:47:06] <DnzAtWrk> It never really felt wierd
[16:47:08] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[16:47:09] <DnzAtWrk> I know my own thoughts
[16:47:18] <DnzAtWrk> but I like to vocalize them
[16:47:20] <DnzAtWrk> vocalise*
[16:47:25] <DnzAtWrk> it activates other regions of the brain
[16:47:34] <mrig> Know thy self is definitely the foundation though, once you have that you can build up from there in ways.
[16:47:37] *** Quits: Yonle_ (~Yonle@user/yonle) (Ping timeout: 248 seconds)
[16:47:37] <user51> DnzAtWrk: sounds like rubber ducking
[16:47:42] <DnzAtWrk> pretty much
[16:47:48] *** Quits: \o` (~\o`@user/o/x-1005988) (Quit: Client closed)
[16:48:11] <DnzAtWrk> neighbour probably thinks I'm crazy tho
[16:48:19] <DnzAtWrk> that's fine, hate their guts too
[16:48:29] <user51> fill an alcohol bottle iwth juice
[16:48:34] <user51> and they'll fill in the details
[16:48:40] *** Joins: Yonle (~Yonle@user/yonle)
[16:48:51] <mrig> GeDaMo: I'm a slow thinking but my train of thought is often so far ahead of the current conversation that people completely misunderstand the things that I say, which is a curious sensation.
[16:48:54] <DnzAtWrk> buy a chainsaw
[16:49:02] <DnzAtWrk> practice swinging it at midnight
[16:49:09] <beaky> hello anyone remember a research article and programming language where they implemented algebraic data types completely unboxed and with bitfields or something
[16:49:11] <mrig> So when quizzed I can easily be made to appear utterly stupid.
[16:49:48] *** Joins: justin[m]12345 (~justinsch@2001:470:69fc:105::c74a)
[16:49:48] <mrig> despite normally being ahead of the game and having seen the solution, in ways, to some aspect of the current topic.
[16:50:32] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[16:52:12] <mrig> DnzAtWrk: do you juggle :P
[16:52:21] <DnzAtWrk> I tried but it's hard
[16:52:28] <DnzAtWrk> I can catch one object perfectly
[16:52:36] <mrig> chainsaws?
[16:52:38] <mrig> :D
[16:52:46] <DnzAtWrk> I don't think I would try juggling chainsaws
[16:53:05] <mrig> I was imaging chainsaw swinging at midnight.
[16:53:51] <mrig> your right, start simple :P
[16:54:10] <CuriousErnestBro> hello do you guys do databases 
[16:54:27] <DnzAtWrk> data bass? Is that some kind of fish
[16:54:30] <DnzAtWrk> Yeah, I'd say we do
[16:55:10] <CuriousErnestBro> I need 3 tables: users, items, tags. Every user has an email+password, items have text+tag_id, tags can be created by users (user specific) and have a name and color 
[16:55:37] <CuriousErnestBro> can I just start with the users table and link them together later?
[16:55:53] <Akronymus> Sure.
[16:56:14] <CuriousErnestBro> tags (and thus tag_id) are user specific
[16:56:26] <CuriousErnestBro> do I automate table creation for every user?
[16:56:33] <DnzAtWrk> do you have experience in log in security?
[16:56:45] <Akronymus> Why a table per user?
[16:56:50] <CuriousErnestBro> not really DnzAtWrk 
[16:56:53] <DnzAtWrk> I'd recommend to not build it yourself
[16:57:02] <DnzAtWrk> for starters, you can DEFINITELY not store a plain-text password in the database
[16:57:15] <password> yeah encrypt me!
[16:57:17] <DnzAtWrk> you can NOT store a password using an insecure hashing algorithm
[16:57:20] <CuriousErnestBro> no there's something in postgres that auto encrypts it
[16:57:21] <CuriousErnestBro> I know this much
[16:57:25] <password> also if you can , I like salt!
[16:57:32] <DnzAtWrk> you can NOT store a password hashed with a good hashing algorithm with a GLOBAL hash
[16:57:33] <CuriousErnestBro> me too, makes food taste good
[16:57:36] <CuriousErnestBro> how is it relevant?
[16:57:42] <DnzAtWrk> GLOBAL salt*
[16:57:48] <DnzAtWrk> a global salt is useless
[16:57:49] <Akronymus> For the tags I'd say going with a composite key of the tag_id and user_id as a unique constraint should work.
[16:57:50] <CuriousErnestBro> just kidding, salt makes hashes more better or soemthing
[16:57:51] <DnzAtWrk> it needs to be per user
[16:58:01] <DnzAtWrk> and that is as much as I know
[16:58:04] <DnzAtWrk> I'm sure there are many other things
[16:58:04] <merijn> It's very use to store passwords
[16:58:07] <DnzAtWrk> which I can not speak on
[16:58:09] <merijn> s/use/easy
[16:58:13] <Akronymus> CuriousErnestBro salts are used to defeat rainbow tables
[16:58:26] <CuriousErnestBro> Akronymus can I increment tag_id per user? have 2 keys for that table?
[16:58:35] <merijn> Step 1) Use one of bcrypt, scrypt, or PBKDF-2
[16:58:41] <merijn> There is no step 2 or 3
[16:58:45] <DnzAtWrk> except
[16:58:48] <DnzAtWrk> have a per-user salt
[16:58:51] <DnzAtWrk> why does nobody know that
[16:58:58] <DnzAtWrk> or is there an even better type of salt
[16:59:25] <piou> merijn: I'd recommend argon2 before bcrypt but yes
[16:59:31] <Akronymus> CuriousErnestBro what columns does your tag table have?
[16:59:46] <DnzAtWrk> also, salt should be changed on password update
[16:59:58] <merijn> piou: I mean, if you use bcrypt you're already far beyond most amateurs
[17:00:06] <CuriousErnestBro> Akronymus tag_id, user_id, title, color
[17:00:27] <Akronymus> Make a unque constraint that encompasses both the tag and user id.
[17:00:37] <password> if you use php , just let php do it for you
[17:00:43] <CuriousErnestBro> it should be 1 1 "some tag" "#fff", 2 1 "some other tag for user 1" "#fff"
[17:00:55] <merijn> piou: bcrypt isn't suddenly worthless and it's more likely to find battle-tested implementations in ecosystems for it
[17:00:56] <Akronymus> Your DB, can do composite keys, right?
[17:01:08] <CuriousErnestBro> tag_id should auto increment for every user indiviidually 
[17:01:13] <DnzAtWrk> storing salt alongside hash
[17:01:15] <DnzAtWrk> that makes sense
[17:01:19] <DnzAtWrk> why not combine those into a single class
[17:01:21] <DnzAtWrk> salt+hash
[17:01:25] <DnzAtWrk> single type*
[17:01:27] <CuriousErnestBro> Akronymus I'm using postgres so probably
[17:01:31] <piou> merijn: if you're using bcrypt, that's ok, it's not worthless at all. But argon2 is better so if you're starting to use a new project there's just no reason to choose bcrypt.
[17:01:36] *** Quits: absc (~absc@access03.colt-engine.it) (Ping timeout: 272 seconds)
[17:01:41] <Akronymus> I don't think that per user incrementing is the right choice.
[17:01:52] <merijn> piou: The reason might be "no argon2 implementation in the language you're using" :p
[17:02:00] <CuriousErnestBro> why not? the tags are private 
[17:02:12] <Akronymus> Just too much hassle 
[17:02:23] <Akronymus> because then you have to do the incrementing yourself
[17:02:24] <piou> merijn: sure, it just shouldn't be the default IMHO
[17:02:48] <Akronymus> Just throwing a autoincrement on the whole column is probably easier.
[17:03:43] <DnzAtWrk> https://heynode.com/blog/2020-04/salt-and-hash-passwords-bcrypt/
[17:03:47] <Akronymus> And making the user_id point towards the user_id column in the user table as a foreign key.
[17:04:10] <DnzAtWrk> "As discussed earlier, hashing a password is not enough. We must also salt the password, and bcrypt requires you to do so."
[17:04:12] <DnzAtWrk> requires?
[17:04:50] <DnzAtWrk> bcrypt.genSalt(saltRounds, function(err, salt) {
[17:04:51] <DnzAtWrk> ooo
[17:04:56] <CuriousErnestBro> Akronymus yeah but in my app I give the user the tag_id 
[17:04:56] <DnzAtWrk> bcrypt.hash(password, salt, function(err, hash) {
[17:04:57] <DnzAtWrk> aaa
[17:04:57] <piou> DnzAtWrk: it's part of the algorithm, bcrypt takes two arguments and the salt is not outputed separately, it's integrated in the specially formatted hash that bcrypt produces
[17:05:09] <DnzAtWrk> so then, you store both hash and salt in the user table, right?
[17:05:09] <CuriousErnestBro> Akronymus imagine getting tag_id 7293 when it's your first tag 
[17:05:20] <CuriousErnestBro> that's not nice
[17:05:24] <Akronymus> You shouldn't display such id's at all.
[17:05:40] <piou> DnzAtWrk: the salt is in the hash, or rather the "hash" that bcrypt produces is a structured string that contains salt and hash
[17:05:50] <DnzAtWrk> oh nice
[17:05:52] <DnzAtWrk> so it's automatica
[17:05:54] <DnzAtWrk> automatic*
[17:05:56] <CuriousErnestBro> then how do I allow creation and deletion through an API 
[17:05:58] <Akronymus> Just list them in ascending order without showing the tag id.
[17:06:01] <DnzAtWrk> you just need to NOT re-use the salt
[17:06:05] <piou> DnzAtWrk: it's made to be as foolproof as possible yes
[17:06:06] <DnzAtWrk> do not use the same salt twice
[17:06:12] <Akronymus> For API, exposing the number is fine IMO.
[17:06:17] <CuriousErnestBro> Akronymus sure, in the frontend side
[17:06:49] *** Joins: jamea (~jamea@187.185.190.209)
[17:07:11] <Akronymus> And if every users tags start with 1,2,3 and so on you would be able to delete all tags easily if your api contains a security vulnerability
[17:07:17] <Akronymus> It makes enumerating it EASY.
[17:07:19] <CuriousErnestBro> I found this kek https://dba.stackexchange.com/a/271810
[17:07:20] <bayaz> Title: Storing Hex Colors in a column in Postgres 
[17:07:31] <DnzAtWrk> uff
[17:07:34] <DnzAtWrk> just store a big int
[17:08:02] <DnzAtWrk> it's a 32 bit int
[17:08:05] <DnzAtWrk> unsigned
[17:08:47] <Akronymus> (Altough, I personally almost always use guids.)
[17:09:00] <DnzAtWrk> unique column with guids?
[17:09:06] <DnzAtWrk> ie, a column specified to be unique
[17:09:08] <CuriousErnestBro> Akronymus yeah guids for user_id
[17:09:08] <DnzAtWrk> distinct
[17:09:10] <DnzAtWrk> I think it was called
[17:09:59] *** Joins: bmahe[m] (~bmahematr@2001:470:69fc:105::d140)
[17:10:12] <jamea> c# good morning, any advice about this dapper sql statment: https://bpa.st/6IXQ
[17:10:14] <bayaz> Title: View paste 6IXQ 
[17:10:23] *** Joins: scabby (~scabby@user/scabootssca)
[17:10:36] <DnzAtWrk> I'm searhcing for pre-trained ImageNet/YOLO models for large-scale object detection
[17:10:39] <DnzAtWrk> of many classes
[17:10:42] <DnzAtWrk> know of any?
[17:10:51] <DnzAtWrk> and I mean something like thousands of classes
[17:11:00] <piou> Things like user IDs not being easily guessable help slow down many attacks. It's not something that should be relied upon but it's nice to have as a backup. I like UUIDv4 for that.
[17:11:27] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[17:11:28] <DnzAtWrk> searching*
[17:13:28] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[17:14:15] <CuriousErnestBro> eh doesn't matter
[17:14:44] <CuriousErnestBro> if the user loses their jwt token it's on them :^)
[17:15:04] <piou> CuriousErnestBro: you're using JWT?
[17:15:19] <CuriousErnestBro> yes
[17:15:33] <piou> CuriousErnestBro: you're working on a cross-domain website structure?
[17:15:34] <Akronymus> piou I also like guids because when I see a guid I KNOW that it is an artificial column.
[17:15:34] *** Quits: usr123 (~usr123@124.253.2.147) (Read error: Connection reset by peer)
[17:15:46] <CuriousErnestBro> piou I don't know what that means/
[17:16:00] *** Joins: usr123 (~usr123@27.255.220.96)
[17:16:06] *** Quits: Rashad (~textual@46.185.170.67) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[17:16:22] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:16:50] <DnzAtWrk> hehe, does ml models count as "derivative" works
[17:16:56] <DnzAtWrk> that is the big question
[17:17:19] <CuriousErnestBro> Akronymus so if I sent you { post_id: "akldfgsh-1ui23098-40905", content: "hello this is my post", created_at: 10292379,  tag_id: "hsdaljk98-823490423" } you would be happy?
[17:17:29] <DnzAtWrk> what insane time format is that
[17:17:31] <Akronymus> Yes
[17:17:35] <Akronymus> Looks like json
[17:17:38] <CuriousErnestBro> DnzAtWrk seconds since 1970
[17:17:40] <piou> CuriousErnestBro: session token in cookies are strictly better than JWT if you have only one domain. The limit with cookies is that they're domain-based so if you are working with several domains (example: one domain to authenticate you, another one to access ressources, etc) then cookies find their limits and JWT become a good idea. That's what they were created for. But I really wouldn't
[17:17:42] <DnzAtWrk> no it's not
[17:17:45] <DnzAtWrk> I think
[17:17:46] <piou> recommend them for a regular website without a very good reason to abandon all the nice builtin security features that cookies provide.
[17:17:48] <Akronymus> Oh right.
[17:17:50] <deniska> json-ish
[17:17:56] <deniska> json't
[17:17:58] <Akronymus> the field names are missing the quotation marks
[17:18:10] <DnzAtWrk> yeah
[17:18:16] <DnzAtWrk> that message would be posted in 1980s
[17:18:18] <DnzAtWrk> unrealistic!
[17:18:27] <CuriousErnestBro> piou I'm not doing sessions, I'm doing auth 
[17:18:43] <DnzAtWrk> also, I think you meant 79
[17:19:00] <DnzAtWrk> oh no
[17:19:02] <CuriousErnestBro> DnzAtWrk I mashed on my keyboard
[17:19:02] <DnzAtWrk> it was 1970
[17:19:03] <DnzAtWrk> my bad
[17:19:05] <deniska> ew jwt
[17:19:08] <piou> CuriousErnestBro: authentication is just verifying that Bob is indeed Bod, session is what you setup to avoid having to authenticate Bob at each request
[17:19:35] <piou> CuriousErnestBro: you are doing auth, that's sure, but you also must have a way to maintain that "authenticated state" for the user afterward
[17:19:37] <CuriousErnestBro> piou yes I am authenticating bob at each request, he's sending the jwt with every request
[17:19:43] <Akronymus> CuriousErnestBro I'd highly recommend reading a book on DB design.
[17:19:44] <piou> CuriousErnestBro: that's not authentication
[17:19:53] <Akronymus> Or at least learning how to normalize.
[17:20:28] <DnzAtWrk> maybe there needs to be some kind of threshold where a machine learning model stops breaking some kind of copyright law
[17:20:32] <DnzAtWrk> and starts being original
[17:20:45] <DnzAtWrk> like, it is unable to accurately reproduce some 1% of the original work
[17:20:47] <DnzAtWrk> or something
[17:20:50] <piou> CuriousErnestBro: What you're doing is that you're first authenticating the user (probably by login/password) then providing them with a way to maintain that authenticated state. In your case it's a JWT. What I'm saying is that you should really consider using regular session tokens stored in cookies as that would greatly simplify your security model.
[17:21:14] *** Joins: Rashad (~textual@46.185.170.67)
[17:21:56] <piou> CuriousErnestBro: or is that only an API and no actual website? I¬†doubt so since you're having login/password but maybe it's a special design
[17:22:12] <Akronymus> I wouldn't even store PW's at all in the DB.
[17:22:20] <Akronymus> But rather a salted hash.
[17:22:27] <Akronymus> Like, the db doesn't even receive a pw
[17:22:30] <Akronymus> in the first place
[17:22:45] <piou> I was about to say "obviously" but I guess it's not obvious
[17:22:51] <CuriousErnestBro> piou just an api, no website
[17:23:24] <piou> CuriousErnestBro: Ok, then JWT can make more sense.
[17:23:36] <CuriousErnestBro> piou the front-end is an iOS app (for now)
[17:24:04] <Arahael> CuriousErnestBro: Condolences. :)
[17:24:13] <CuriousErnestBro> Arahael it's by choice :D
[17:24:51] <Akronymus> my condolences CuriousErnestBro
[17:25:01] <piou> CuriousErnestBro: what are passwords for then? How do you store them? How do you change them?
[17:25:05] <deniska> imho jwt makes no sense because you can't invalidate it
[17:25:39] <deniska> it's just an overly fancy signed cookie
[17:25:44] <piou> deniska: you can absolutely invalidate a jwt from the server side, you just need to prepare it
[17:26:35] *** Joins: lasr[m] (~lasrhalog@2001:470:69fc:105::c875)
[17:26:39] <deniska> piou: the premise of jwt is to not have to store sessions on the server, server-side machinery for invalidation just makes jwt a session cookie
[17:26:42] <CuriousErnestBro> deniska JWT's have an expiry
[17:26:54] <piou> CuriousErnestBro: expiry isn't invalidation
[17:27:04] <CuriousErnestBro> how is invalidation done then piou?
[17:27:07] <deniska> CuriousErnestBro: invalidation is making a token expire right now
[17:27:27] <CuriousErnestBro> piou passwords are to link users with their own data (which the API provides)
[17:27:45] <piou> deniska: sortof, but you don't need to be so strict to the initial premise. You can still store most things in the jwt and just have the invalidation token on the server side
[17:28:22] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[17:28:43] <piou> CuriousErnestBro: what you can do is include a token in the jwt and keep a list of valid tokens on the server side... But it does mean "have a session token in the jwt" so I¬†absolutely see why deniska dislikes it very much
[17:30:03] <deniska> I don't exactly dislike them, just think they're misapplied to everything where you may want to have "log other devices out" button
[17:30:15] <CuriousErnestBro> piou btw the way I'm using jwt for auth (is that even the right term?) is to have it contain the encrypted user_id (guid) and decrypt it and see if the user exists
[17:30:29] <piou> CuriousErnestBro: So 1) user makes request to obtain token, provides login/password through Authentication header, 2) authentication successful, the user is provided with an authentication token and refresh token, 3) user uses the authentication token to make a request
[17:30:54] <CuriousErnestBro> that makes sense
[17:30:55] <piou> CuriousErnestBro: encrypted user_id ? Encrypted how? What is the point of encrypting it?
[17:31:00] <CuriousErnestBro> what's a "refresh" token though 
[17:31:15] <Akronymus> I assume he uses an int piou
[17:31:30] <piou> still, what's the point of encrypting it and encrypted how?
[17:31:42] <CuriousErnestBro> piou the use would be to not expose user id's
[17:31:48] <Akronymus> My assumption mapping guid -> userid
[17:31:55] <CuriousErnestBro> ^ yes
[17:32:04] <Akronymus> Which isn't encryption at all
[17:32:05] <piou> It can't be modified, it's in a jwt, and I certainly hope it's not meant to be secret because user ids are really not fit to be secrets
[17:32:16] *** jelly-home is now known as jelly
[17:32:16] <beaky> division takes half a minute, and a syscall takes 3 minutes if only computers were faster https://youtu.be/RV-4Xddk0Yc?t=60
[17:32:19] <Akronymus> Whoops, I caught the guid in transit
[17:32:28] <piou> Not encryption, right
[17:32:28] <Akronymus> Let me use the guid I caught
[17:32:42] <DnzAtWrk> https://github.com/ultralytics/yolov5
[17:32:42] <Akronymus> Oh cool, I can authenticate with the guid
[17:32:43] <DnzAtWrk> pretty nify
[17:32:47] *** Joins: rgddev[m] (~rgddevmat@2001:470:69fc:105::69c8)
[17:32:48] <CuriousErnestBro> piou okay, I was initially going to do it with emails (email instead of user_id) and I'd have the encrypted email in the JWT to know which user it is
[17:32:49] <DnzAtWrk> but what classes does it use
[17:32:57] <DnzAtWrk> nifty*
[17:33:02] <Akronymus> At that point you can just use a guid as user id
[17:33:05] <CuriousErnestBro> actually that's a great idea
[17:33:07] <CuriousErnestBro> primary key email
[17:33:11] <DnzAtWrk> no
[17:33:14] <beaky> nice i like mail
[17:33:19] <DnzAtWrk> primary key should be an idea of some kind
[17:33:20] <beaky> i use emacs for mail
[17:33:24] <DnzAtWrk> some key
[17:33:27] <DnzAtWrk> come on brain
[17:33:30] <CuriousErnestBro> beaky I use spark
[17:33:33] <Akronymus> >not using sed for email
[17:33:34] <beaky> wha is psakr
[17:33:34] <piou> CuriousErnestBro: You don't want to give authentication tokens that last a very long time. What most applications do is that they use short-lived authentication tokens but provide a refresh token which is used to quickly demand a new authentication token. That token lives longer and is generally less exposed than the authentication token which is sent over and over.
[17:33:38] <CuriousErnestBro> DnzAtWrk sorry brain.exe stopped working
[17:33:45] <DnzAtWrk> I keep replacing words I type in my head
[17:33:53] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[17:34:01] *** Joins: psydroid (~psydroid@user/psydroid)
[17:34:13] <piou> CuriousErnestBro: emails would have been a bad idea because it's personnal information, but the user_id itself should be fine.
[17:34:26] <Akronymus> Assuming its a guid
[17:34:26] <CuriousErnestBro> piou not an issue when you encrypt it 
[17:34:32] <DnzAtWrk> here is a mistake MANY MANY websites do
[17:34:36] <CuriousErnestBro> piou that requires keeping track of refresh tokens though
[17:34:38] <DnzAtWrk> they tell you whether an email is correct
[17:34:43] <DnzAtWrk> based on if you only get the password wrong
[17:34:46] <DnzAtWrk> that is very very dumb
[17:34:46] <Akronymus> There is NO reason to map guid -> int for user ids
[17:34:51] <piou> CuriousErnestBro: sure, but there's no point doing through this trouble when you can just use the unencrypted user_id
[17:34:52] <Akronymus> Just use a guid directly
[17:35:05] <piou> whatever form that user_id takes, guid or whatever
[17:35:20] <CuriousErnestBro> piou is exposing to the world which user_id you have internally in the database a good idea?
[17:35:30] <Akronymus> piou IMO guid > int because enumeration attacks
[17:35:40] <CuriousErnestBro> jwt's just ensure that I created them
[17:35:45] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 276 seconds)
[17:35:46] <Akronymus> CuriousErnestBro for int with autoincrement: BAD.
[17:35:51] <piou> CuriousErnestBro: it's cool if you don't expose it, but it really shouldn't matter
[17:35:54] <Akronymus> For guid: Who cares
[17:35:55] <deniska> CuriousErnestBro: potential investors may try to guesstimate the real amount of users you have
[17:36:02] <piou> CuriousErnestBro: email as primary key can be good, but that makes it very difficult for an user to change mail which can happen
[17:36:12] *** Joins: nekodesu (~nano@user/nekobit)
[17:36:18] <deniska> CuriousErnestBro: that's why you initialize the counter on 62147 and then increment it randomly 1-10 for each registration
[17:36:18] <Akronymus> Email is a garbage key in any circumstance.
[17:36:19] <CuriousErnestBro> deniska >implying I'll get investors 
[17:36:21] <Akronymus> IMO
[17:36:23] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 268 seconds)
[17:36:25] *** Quits: Tazmainian (~Tazmainia@41.193.169.28) (Read error: Connection reset by peer)
[17:36:35] <CuriousErnestBro> deniska kek
[17:36:42] <CuriousErnestBro> thanks piou that makes it clear
[17:36:55] <deniska> CuriousErnestBro: you laugh, I've seen it done
[17:37:07] <Akronymus> Hell, I personally almost always use artificial keys over natural ones.
[17:37:09] <piou> At least from a pure application security point of view, the difference between hidding the user_id or exposing it is extremely small.
[17:37:14] <deniska> (they were doing it for invoice numbers, but still)
[17:37:42] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[17:37:43] <Akronymus> piou again, assuming it isn't just a autoincrement number
[17:37:46] <DnzAtWrk> invoice numbers are based on the customer number and the current...
[17:37:48] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[17:37:50] <DnzAtWrk> umm... date? 
[17:37:53] <piou> Akronymus: even if it's just an autoincrement number
[17:37:55] <DnzAtWrk> no wait, price
[17:38:20] *** Quits: gargus (~user@124-150-74-109.tpgi.com.au) (Quit: Leaving)
[17:38:45] *** Joins: odnes (~odnes@ppp141237116116.access.hol.gr)
[17:38:48] <piou> Akronymus: from the application security pov it really doesn't matter, an id is an id. That's not where the security is.
[17:38:48] <Akronymus> piou that may allow you to easily enumerate other users data if you have a security hole.
[17:39:06] *** Quits: odnes (~odnes@ppp141237116116.access.hol.gr) (Read error: Connection reset by peer)
[17:39:07] <Akronymus> Oh, for the application itself it doesn't matter indeed.
[17:39:09] <DnzAtWrk> uff
[17:39:20] <DnzAtWrk> in what possible case would an id alone need to be kept secret
[17:39:23] <DnzAtWrk> imagine it
[17:39:25] <piou> Akronymus: user ids are not meant to be secret anyway. It's nice to have, I don't say the contrary, but the security difference is marginal.
[17:39:27] <DnzAtWrk> when would that ever be the issue
[17:39:40] <piou> So many things allow user enumeration anyway.
[17:39:46] <d3x0r> OMG ... quora question 'how many dimension are there' and all the answers are '3 plus time'  WTH!
[17:39:54] <DnzAtWrk> time is not a dimension
[17:40:01] <DnzAtWrk> unless you mean non-spatial dimensions
[17:40:02] <Akronymus> piou i come from the side of additional layers of hiding not hurting at all.
[17:40:11] <DnzAtWrk> there are 3-11 or so spatial dimensions
[17:40:14] <DnzAtWrk> depending on quantum theory
[17:40:14] <Akronymus> While yes, you can enumerate even with guids, it is harder.
[17:40:21] *** Joins: getz[m] (~getz@2001:470:69fc:105::c85e)
[17:40:38] <d3x0r> some PHD went on and on about the 3 physical dimensions... ignoring rotation entirely
[17:40:40] *** Joins: pilyn (~pilyn@user/pilyn)
[17:40:41] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[17:40:44] <DnzAtWrk> not a dimension
[17:40:46] *** Joins: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb)
[17:40:48] <DnzAtWrk> that's a transformation
[17:40:50] <d3x0r> yes it is.. 3of them
[17:40:52] <d3x0r> no it's not
[17:40:55] <^-^hi> d3x0r: r/iamverysmart ?
[17:41:12] <piou> Akronymus: I sympathesize with that, but I'd rather start with good fundamentals for beginners rather than over-complexification with more code leading to more bugs that are harder to identify
[17:41:18] <d3x0r> it's an inherant property of things - like moving in a line, spin is persistant and irrelative to linear motion
[17:41:36] <DnzAtWrk> dimensions are not properties of things
[17:41:37] <DnzAtWrk> but of space
[17:41:44] <piou> Akronymus: it's a trade-off, I¬†don't think there's an absolute answer
[17:42:13] *** Joins: sidy (~sidy@nat.esu3.org)
[17:42:21] <d3x0r> they are measurments, they have a metric
[17:42:29] <piou> CuriousErnestBro: hey, is your thing going to be open-source?
[17:42:30] <DnzAtWrk> that would be distance
[17:42:35] <DnzAtWrk> not the number of dimensions
[17:42:36] *** sidy is now known as Guest2878
[17:42:40] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:42:46] <d3x0r> that would be angular velocity also
[17:43:04] <DnzAtWrk> sure, that's the derivative of position in space
[17:43:11] <DnzAtWrk> oh wait
[17:43:12] <^-^hi> guy, theorizing incorrect physics with three typos in a programming chatroom doesn't make you look the best you can
[17:43:13] <DnzAtWrk> angular velocity
[17:43:17] <d3x0r> or orient motion... there's not really a phrase for that... the amount of change of orientation to apply to get to an orientation - angle
[17:43:25] <^-^hi> three typos in one sentence*
[17:43:26] <d3x0r> no you said position not momentum
[17:43:26] <CuriousErnestBro> piou it can be
[17:43:31] <d3x0r> or velocity
[17:43:53] <CuriousErnestBro> piou yesterday I set up a sick CI workflow with deniska that yockers postgres for testing
[17:43:57] <CuriousErnestBro> yockers = dockers
[17:44:03] <Akronymus> piou I don't think of guids as any more complex than ints for keys.
[17:44:12] <Akronymus> (PK, FK and such)
[17:44:19] <piou> CuriousErnestBro: if you publish it don't hesitate to ping me here, I'm always lurking in some corner. If you do I'll take a look at the security of the thing.
[17:44:46] *** Joins: tia (~sidy@nat.esu3.org)
[17:44:48] <CuriousErnestBro> piou if you're on github I can add you to the private repo if you want 
[17:44:53] <CuriousErnestBro> later, when it's done
[17:45:04] <piou> CuriousErnestBro: nope, I'll only do it if it's actually open-source
[17:45:20] <CuriousErnestBro> ok
[17:46:01] *** Joins: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5)
[17:47:21] <CuriousErnestBro> so in the users table, I am now storing user_id, email
[17:47:31] <CuriousErnestBro> how do I do passwords 
[17:48:03] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[17:48:42] <piou> choose either argon2 or bcrypt, when you need to store a password use their function to generate a salt, then call their function with the password and salt to get a salted, secure hash that you can store in the DB. Upon authentication you can use their other function to check password against that hash from the db.
[17:48:57] *** Quits: Guest2878 (~sidy@nat.esu3.org) (Ping timeout: 248 seconds)
[17:49:20] <CuriousErnestBro> what was that option to not store passwords in the db?
[17:49:49] <piou> what Akronymus meant was that you should never store the password itself in the DB. Storing a secure hash is the proper way to do it.
[17:50:10] *** Quits: chomwitt (~chomwitt@2a02:587:dc02:6400:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[17:50:11] <piou> specific function names depend on the language and library etc, but there should be at least 3: generate salt, generate hash from password and salt, check password from password and hash.
[17:50:12] <CuriousErnestBro> I see, and the salt can also be stored in the database?
[17:50:26] <piou> CuriousErnestBro: the salt is part of the hash if you use argon2 or bcrypt
[17:50:39] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[17:51:03] <piou> ie: don't worry about it, it's taken care of
[17:51:20] <CuriousErnestBro> I see, so with argon2 it's just 2 functions
[17:51:27] <CuriousErnestBro> generate salt and use it to generate hash
[17:51:32] <CuriousErnestBro> and check password given hash 
[17:51:35] *** Joins: Helmholtz (~leibnizma@2001:470:69fc:105::3124)
[17:51:38] <CuriousErnestBro> right?
[17:51:41] <DnzAtWrk> who the heckcalls their image recognition framework darknet
[17:51:43] <piou> what's your language?
[17:51:45] <DnzAtWrk> heck calls*
[17:51:46] <CuriousErnestBro> rust
[17:52:13] *** fluffykef is now known as furrykef
[17:52:23] <piou> CuriousErnestBro: does the argon2 lib you're using generate a hash in the same function that generates the password?
[17:52:26] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 268 seconds)
[17:52:31] <piou> Because that's generally two different functions
[17:52:32] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[17:52:58] <CuriousErnestBro> no it doesn't
[17:53:01] *** Joins: Guest3880 (~kamui-ren@2001:470:69fc:105::f74)
[17:53:17] *** Joins: MrLouis[m] (~lookneema@2001:470:69fc:105::c61a)
[17:53:28] <piou> CuriousErnestBro: is this the lib you're using ? https://docs.rs/rust-argon2/0.8.3/argon2/
[17:53:29] <bayaz> Title: argon2 - Rust 
[17:53:45] <CuriousErnestBro> yeah, it doesn't seem to have a generate salt function piou 
[17:54:02] *** Joins: Crescendo (~Crescendo@user/crescendo)
[17:54:03] *** Joins: sunbae (~euk@user/sunbae)
[17:54:05] <beaky> nice i love rust
[17:54:18] <beaky> rust is quickly becoming my favorite programming language
[17:54:23] <CuriousErnestBro> nvm it does 
[17:54:38] <CuriousErnestBro> https://docs.rs/argon2/0.2.2/argon2/#usage-simple-with-default-params
[17:54:38] <bayaz> Title: argon2 - Rust 
[17:54:44] *** Joins: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b)
[17:54:45] <sunbae> Which was your previous favourite language, beaky ?
[17:54:46] <CuriousErnestBro> beaky what have u built with it
[17:54:49] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[17:54:58] *** Quits: Yonle (~Yonle@user/yonle) (Quit: leaving)
[17:55:14] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[17:55:15] *** Joins: Yonle (~Yonle@user/yonle)
[17:55:19] <CuriousErnestBro> my favorite langauges: 1. javascript, 2.rust, 3. swift, 4. python
[17:55:20] <CuriousErnestBro> I hate the rest
[17:55:23] <CuriousErnestBro> just kidding I haven't tried them
[17:55:41] *** Quits: gdarko (~me@dg.mk) (Quit: ZNC 1.8.2 - https://znc.in)
[17:55:46] <CuriousErnestBro> javascripts ease of use and libraries are simply unmatched 
[17:55:50] *** Joins: gdarko (~me@dg.mk)
[17:56:31] <CuriousErnestBro> python is probably my strongest language out of those
[17:56:39] <piou> CuriousErnestBro: yeah, it doesn't generate a salt, but you can use SaltString::generate to get one. Make sure to use a strong random number generator provided by your OS for that.
[17:56:55] <piou> Not sure what exposes it in rust.
[17:57:02] *** Quits: tw3ml0w (~tw3ml0w@5.101.136.148) (Quit: Leaving)
[17:57:20] <CuriousErnestBro> I am just gonna use rand_core package 
[17:57:21] <CuriousErnestBro> like in the example
[17:57:32] *** Quits: FKAShinobi (~shinobi@2601:18c:d07f:f2e9:b36e:b615:5c5f:a300) (Remote host closed the connection)
[17:57:47] *** Joins: FKAShinobi (~shinobi@2601:18c:d07f:f2e9:22e3:bb97:14a7:23e8)
[17:57:55] <piou> CuriousErnestBro: yes, that's good, it's a cryptographically secure rng
[17:58:05] <sunbae> Friendship ended with "NA" now bestfriend "RUST"
[17:58:13] *** Quits: PikaChokeMe (~PikaChoke@c-24-11-1-200.hsd1.ut.comcast.net) (Quit: Leaving)
[17:58:21] <CuriousErnestBro> what's na
[17:58:25] <CuriousErnestBro> north america?
[17:58:30] <sunbae> Not Answer?
[17:58:34] <sunbae> No answer, sorry.
[17:58:42] <CuriousErnestBro> i thought NA meant not available 
[17:59:02] <sunbae> Damm cultural differences. I tried to be funny and I didn't succeded.
[17:59:24] <sunbae> Did not succe... Whatever.
[17:59:26] *** Quits: jazzy (~jaziz@2600:380:4545:1bb4:ec20:e391:8f1d:8467) (Ping timeout: 256 seconds)
[17:59:39] <beaky> my previous favorite language was haskell but rust is way more efficient than haskell ever will be
[17:59:45] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:59:50] <Akronymus> Sorry to beat that horse, but guids also have the benefit of being unique across tables.
[17:59:50] *** Quits: gggp (~gggp@123.113.182.84) (Ping timeout: 268 seconds)
[17:59:50] <CuriousErnestBro> I tried doing haskell 
[17:59:55] <piou> Humor is difficult in multilingual settings :( At work it's always colder with foreigners because neither side is sure that the joke will be translated properly.
[17:59:56] <CuriousErnestBro> made my head hurt too much
[17:59:58] <CuriousErnestBro> rust is easy
[17:59:59] <DnzAtWrk> jesus christ
[18:00:07] <DnzAtWrk> the adrenaline rush when you thought you forgot a meeting
[18:00:07] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[18:00:08] <DnzAtWrk> wooo
[18:00:10] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[18:00:13] *** Joins: kakos[m] (~kakos@2001:470:69fc:105::c965)
[18:00:26] <CuriousErnestBro> piou do you work as a security person?
[18:00:26] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 268 seconds)
[18:00:32] <piou> CuriousErnestBro: yep
[18:00:34] <sunbae> The last resort for humour is body humour. It always work. Nobody can resist having their sides tickled.
[18:00:52] *** znemo_ is now known as znemo
[18:01:01] <sunbae> Specially women, they are very ticklish.
[18:01:20] <CuriousErnestBro> nice I got in trouble in high school for using an mitm tool for android 
[18:01:21] <CuriousErnestBro> guess how
[18:01:29] * CuriousErnestBro bragged about it in front of the maths teacher
[18:01:41] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 268 seconds)
[18:01:41] *** Joins: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee)
[18:02:24] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[18:05:58] <CuriousErnestBro> piou you're not gonna like this: I'm gonna set the expire date of the JWT in 200 years and call it a day
[18:06:19] <piou> I'm not going to like it one bit, that's *very* dangerous
[18:06:19] <CuriousErnestBro> at least it's better than storing the user's password on their device 
[18:06:24] *** Joins: sophie[m]1 (~sophiesop@2001:470:69fc:105::9b6d)
[18:06:45] <piou> There are other options
[18:06:46] *** Joins: Alpha3031 (~alpha3031@2001:470:69fc:105::2f6b)
[18:06:48] *** Joins: audiocat (~audio@2603-8081-1800-00ad-f351-4ddf-8729-f716.res6.spectrum.com)
[18:06:56] <DnzAtWrk> why not use a reasonable expire date
[18:06:59] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[18:07:01] <DnzAtWrk> like other websites do
[18:07:04] <DnzAtWrk> something like a months
[18:07:08] <DnzAtWrk> months*
[18:07:12] *** Parts: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) ()
[18:07:18] <piou> Heck, the user is going to need to login again at some point anyway, how do you get the initial login/password otherwise?
[18:07:40] <DnzAtWrk> why is the expiry date relevant?
[18:07:45] <CuriousErnestBro> I don't want it to be that you get logged out of the app randomly
[18:07:45] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[18:07:47] *** Joins: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr)
[18:07:48] <DnzAtWrk> You can just invalidate them server side
[18:07:53] <DnzAtWrk> so why is that up to the client?
[18:08:13] <CuriousErnestBro> that requires keeping a list of autorized tokens right 
[18:08:19] <DnzAtWrk> I'd hope so
[18:08:50] <CuriousErnestBro> ok, another table called validtokens, with primary key token_id, foreign key user_id
[18:08:57] *** Joins: scabby (~scabby@user/scabootssca)
[18:08:59] <CuriousErnestBro> right?
[18:09:03] <DnzAtWrk> and last seen
[18:09:20] <CuriousErnestBro> then put token_id in the JWT and call it a day
[18:10:10] <piou> What's in the JWT finally? User ID? Email encrypted in some way?
[18:10:20] <DnzAtWrk> no no
[18:10:22] <CuriousErnestBro> piou now it's just token_id, that's it
[18:10:24] <DnzAtWrk> a random hash of some kind
[18:10:33] <CuriousErnestBro> and token_id is linked to user_id in the db 
[18:10:44] <DnzAtWrk> just randomly generate a 128 bit whatever
[18:10:58] <CuriousErnestBro> yes token_id is something random 
[18:11:04] <DnzAtWrk> well, okay it is actually important that it is cryptographically secure
[18:11:18] <DnzAtWrk> since this hash would allow anyone to log in as anyone else
[18:11:21] <DnzAtWrk> so it must be very secure
[18:11:23] *** Quits: scabby (~scabby@user/scabootssca) (Remote host closed the connection)
[18:11:24] <CuriousErnestBro> yes
[18:11:28] <CuriousErnestBro> it's random therefore secure
[18:11:33] <DnzAtWrk> not quite
[18:11:33] <piou> Ok, that at least avoids issues such as "Hey, my old token that was for this user_id is now valid for someone else's account because it dosen't expire and the DB changed the user_ids for some reason"
[18:11:38] <DnzAtWrk> random != secure
[18:12:39] <CuriousErnestBro> you know what 
[18:12:57] <CuriousErnestBro> I'm just gonna store encrypted passwords client-side
[18:13:01] <CuriousErnestBro> secure enough
[18:13:06] <piou> encrypted how?
[18:13:06] *** Quits: Helmholtz (~leibnizma@2001:470:69fc:105::3124) (Changing host)
[18:13:06] *** Joins: Helmholtz (~leibnizma@user/helmholtz)
[18:13:11] <DnzAtWrk> hashed*
[18:13:17] <DnzAtWrk> you don't store encrypted passwords
[18:13:21] <piou> no, on the client side it can't be hashed
[18:13:22] <DnzAtWrk> because encryption implies decryption
[18:13:22] <Akronymus> Hashed and salted hopefully
[18:13:25] <CuriousErnestBro> by me, using this argon2 thing
[18:13:27] <DnzAtWrk> oh, client-side
[18:13:30] <DnzAtWrk> yeah obviously not
[18:13:43] <Akronymus> piou Why not?
[18:13:44] <CuriousErnestBro> ok but that's not revokable
[18:13:57] <piou> CuriousErnestBro: most random numbers such as what you'd get from "import random; random.randint()" in python are not fit for security because they are uniform (ie: you'll get as many 0s as 9s) but they're predictable (ie: you can determine future or past outputs from looking at enough random numbers). So random != secure.
[18:14:02] <CuriousErnestBro> ok I'll do it the jwt way with token_id
[18:14:38] <DnzAtWrk> there is a reason I said to not invent your own
[18:14:40] <piou> Akronymus: because then you haven't protected your password, it's just that your password is the hash of the string you entered. You send the hash to the server and the server hashes it, the client-side hash is the password. No more secure.
[18:14:46] <DnzAtWrk> there are no shortcuts in security
[18:14:49] *** Joins: rty (~rty@212.102.39.133)
[18:14:49] <Akronymus> Oh right.
[18:14:49] <CuriousErnestBro> piou I'll use this https://www.postgresql.org/docs/13/functions-uuid.html
[18:14:51] <Akronymus> Am idiot.
[18:14:52] <bayaz> Title: 9.14.¬†UUID Functions 
[18:14:56] <CuriousErnestBro> DnzAtWrk ^
[18:15:46] <CuriousErnestBro> holy shit
[18:15:52] <CuriousErnestBro> you guys meme'd me into doing sessions
[18:15:55] <CuriousErnestBro> I just realized
[18:16:19] <CuriousErnestBro> is this a good thing?
[18:16:30] <Akronymus> Yes
[18:16:35] <piou> CuriousErnestBro: UUIDs are nice, and good for this case if they're inside the JWT.
[18:16:52] <CuriousErnestBro> inside the JWT just means "I made it"
[18:16:54] <CuriousErnestBro> right?
[18:17:07] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 258 seconds)
[18:17:12] <piou> not sure what you mean by that
[18:17:20] <CuriousErnestBro> piou is having a table of "tokens" with primary key this uuid and foreign key user_id good?
[18:17:24] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[18:17:45] <CuriousErnestBro> piou JWT data is visible to everyone, only I can tell with certainty that I made it (I = server)
[18:18:00] <piou> CuriousErnestBro: yes, you want to associate the token to a given user_id
[18:18:26] <Akronymus> Oh you could do multiple tokens with that.
[18:18:29] <CuriousErnestBro> yes
[18:18:30] <Akronymus> Per user
[18:18:36] <piou> CuriousErnestBro: ah, yes. What I mean is that it must be part of the JWT that is signed and therefore cannot be modified by the user. It doesn't have to be secret.
[18:18:38] <CuriousErnestBro> so on logout I just remove the token 
[18:18:42] <piou> Yep
[18:18:43] <Akronymus> I thought it was a 1-> 1 association before
[18:19:08] <piou> CuriousErnestBro: also, for the "you memed me into doing sessions", I mean, there's a reason why I started by saying that you probably wanted sessions anyway
[18:19:11] <DnzAtWrk> I have this feeling that no, not just delete the token
[18:19:13] <Akronymus> Yeah for the n -> 1 case it makes sense.
[18:19:17] <piou> It's just a much simpler security model.
[18:19:18] <DnzAtWrk> also tell the server you are logging out
[18:19:23] <DnzAtWrk> so the server can invalidate the token
[18:19:28] <CuriousErnestBro> great, this supports the multi-webpage thing where they have "log me out everywhere"
[18:19:35] <piou> DnzAtWrk: I¬†assumed it was "delete the token on the server side"
[18:19:42] <DnzAtWrk> ah
[18:19:56] <piou> CuriousErnestBro: delete the token on the server side, right?
[18:19:56] <CuriousErnestBro> yeah delete the token on server side
[18:20:02] <piou> Nice.
[18:20:05] <CuriousErnestBro> I'm not *that* stupid
[18:20:09] <CuriousErnestBro> come on guys
[18:20:25] <piou> CuriousErnestBro: it's not about being stupid, it's just easy to make mistakes
[18:20:30] <CuriousErnestBro> I meant delete in the database
[18:20:37] <CuriousErnestBro> which is the same as "server side"
[18:20:37] *** Quits: Yonle (~Yonle@user/yonle) (Read error: Connection reset by peer)
[18:20:43] <piou> I'd even argue that more mistakes are meant by people trying to act smart when it comes to security
[18:20:48] <piou> CuriousErnestBro: indeed
[18:20:49] *** Joins: Yonle (~Yonle@user/yonle)
[18:21:00] <CuriousErnestBro> the tokens table to be precise
[18:21:10] <CuriousErnestBro> alright, let me google sql commands so I can make this
[18:21:24] *** Quits: Yonle (~Yonle@user/yonle) (Read error: Connection reset by peer)
[18:21:56] <CuriousErnestBro> thanks for the help :D
[18:22:00] <piou> Also, always use prepared statements for sql, never build strings from user inputs, etc
[18:22:01] <CuriousErnestBro> we're almost there 
[18:22:17] <piou> None of this is worth anything if you end up with a silly sql injection
[18:22:31] <CuriousErnestBro> idk what it means, I'm using sqlx I think they have a tool to generate sql from user input 
[18:22:34] <DnzAtWrk> did you know you can infer which users exist based on how long a query takes?
[18:22:37] <DnzAtWrk> :D
[18:22:39] <CuriousErnestBro> that does proper escaping 
[18:22:46] *** Joins: Akera4 (~Akera4@149.255.222.27)
[18:22:59] <CuriousErnestBro> DnzAtWrk sleep(random()) 
[18:23:00] <CuriousErnestBro> good luck
[18:23:01] <piou> CuriousErnestBro: that sounds like prepared statements so I hope it is
[18:24:10] <deniska> don't worry, rust makes it annoying enough to manipulate strings so we're safe :D
[18:24:25] <CuriousErnestBro> SQLx supports all operations with both types of queries. In SQLx, a &str is treated as an unprepared query and a Query or QueryAs struct is treated as a prepared query.
[18:24:34] <CuriousErnestBro> so I need to use the Query type
[18:24:48] *** Akera4 is now known as yusif
[18:25:01] <CuriousErnestBro> deniska not really: format!("select {} from {}", x, y); works
[18:25:13] *** Quits: anon16 (~anon16@user/anon16) (Ping timeout: 248 seconds)
[18:25:21] *** Joins: xsperry (~as@user/xsperry)
[18:25:34] <deniska> oh no we're doomed
[18:25:35] <DnzAtWrk> no no no
[18:25:48] *** Joins: Yonle (~Yonle@user/yonle)
[18:25:53] <DnzAtWrk> you ALMOST never allow a table to be dynamic
[18:25:56] <piou> CuriousErnestBro: exactly, as long as it doesn't look like this format you're good
[18:26:41] <piou> Fun fact, I only just noticed that DnzAtWrk and deniska are two different individuals
[18:26:51] <piou> I thought one 
[18:26:57] <piou> was the work connection of the other
[18:27:05] <deniska> D:
[18:27:07] *** Joins: anon16 (~anon16@user/anon16)
[18:27:54] *** Quits: Cyp_ (~cyp@192038129116.mbb.telenor.dk) (Ping timeout: 240 seconds)
[18:28:15] <Arahael> deniska: condolences!
[18:28:19] *** Quits: yusif (~Akera4@149.255.222.27) (Quit: Client closed)
[18:28:42] <CuriousErnestBro> why is saying "condolences!" such a meme?
[18:28:47] <CuriousErnestBro> lol
[18:29:29] <Arahael> CuriousErnestBro: it's a normal word here!
[18:29:41] *** Joins: Cyp_ (~cyp@192038129116.mbb.telenor.dk)
[18:30:13] <CuriousErnestBro> yeah I know
[18:30:21] <pulse> finally, i found a good wallpaper
[18:30:25] <CuriousErnestBro> Arahael but saying it when learning I work with iOS dev is a big meme
[18:30:26] <CuriousErnestBro> isn't it?
[18:30:35] <pulse> https://wallpaperaccess.com/full/463237.jpg
[18:30:35] <bayaz> Type: image/jpeg Size: 139.3 kB 
[18:31:02] <pulse> never mind me, i have wallpaper OCD
[18:31:12] <Akronymus> I expressed sincere condolences about working with ios...
[18:31:22] <pikapika> Akronymus, hi uwu
[18:31:38] <CuriousErnestBro> pikapika are you a weeb?
[18:31:41] *** Quits: rypervenche (~rypervenc@user/rypervenche) (Quit: brb)
[18:31:44] <Akronymus> Don't you dare start up THAT conversation again
[18:31:55] <pikapika> What conversation
[18:31:58] <pikapika> CuriousErnestBro, no
[18:32:02] <beaky> yes wish i could have a nice wallpaper i am jealous of eveyrone's setup in the /r/unixporn reddit
[18:32:11] <CuriousErnestBro> beaky pulse I have this now https://basicappleguy.com/basicappleblog/macosbliss
[18:32:12] <bayaz> Title: macOS Bliss Wallpaper ‚Äî Basic Apple Guy 
[18:32:21] <CuriousErnestBro> windows xp
[18:32:22] <CuriousErnestBro> :D
[18:32:28] <pikapika> beaky, I want a trve kvlt unix
[18:32:34] <pikapika> Not some linux or bsd
[18:32:52] <CuriousErnestBro> pikapika programmers are interested in japanese culture because they're weebs
[18:33:16] <Akronymus> Says the weeb
[18:33:25] <beaky> they all use tiling window managers and then insist on having floating windows and having space between the windows
[18:33:28] <Akronymus> (I have a >50% chance to be right)
[18:33:29] <beaky> but im still jealous
[18:33:30] <pikapika> Akronymus, what conversation uwu?
[18:33:35] <CuriousErnestBro> beaky lol right?
[18:33:39] *** Joins: SerialSmile (~SerialSmi@95-29-44-41.broadband.corbina.ru)
[18:33:39] <CuriousErnestBro> >.<
[18:33:41] <Akronymus> blub pikapika
[18:33:45] <CuriousErnestBro> uwu
[18:33:49] <pikapika> Who mentioned blub
[18:33:54] <CuriousErnestBro> what's blub
[18:34:11] *** Joins: Pickchea (~private@user/pickchea)
[18:34:18] <sunbae> I like it when you use your uwu voices.
[18:34:19] <Akronymus> I thought your ping to me was because we kinda got into a heated debate about it.
[18:34:20] <beaky> blub is everyone's favorite programming language
[18:34:27] <Akronymus> Oh no.
[18:34:36] <CuriousErnestBro> is it like rust?
[18:34:40] <pikapika> Akronymus, I am heated uwu
[18:34:44] <sunbae> :O
[18:34:48] <Akronymus> Nonononononononono
[18:35:08] *** Joins: scabby (~scabby@user/scabootssca)
[18:35:13] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:35:25] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[18:36:10] <pikapika> beaky, would you consider solaris a trve unix?
[18:36:28] <CuriousErnestBro> Im on macos
[18:36:31] <CuriousErnestBro> it is true unix
[18:36:36] <pikapika> Its not
[18:36:46] <Akronymus> I use arch btw /s
[18:36:46] <^-^hi> It is certified unix i think
[18:36:52] <pikapika> Which means little
[18:36:57] <CuriousErnestBro> unix 03 certified
[18:37:01] <CuriousErnestBro> so it's unix
[18:37:06] <pikapika> Even Windows could get certified with a thin layer on its apis
[18:37:07] <^-^hi> yeah but they are entitled to call themselves unix
[18:37:16] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[18:37:18] <pikapika> Solaris is legit and trve unix
[18:37:20] <CuriousErnestBro> yes
[18:37:20] <Akronymus> ls > dir
[18:37:21] <CuriousErnestBro> ^-^
[18:37:24] <Akronymus> change my mind
[18:37:34] <CuriousErnestBro> pikapika slackware is true and proper unix change my mind
[18:37:40] <beaky> yes solaris was a true unix i think but nowadays its now ilumos i think
[18:37:51] <pikapika> Solaris is probably still maintaine
[18:37:58] <CuriousErnestBro> ahhh oracle
[18:37:58] <pikapika> Illumos is just a free community fork
[18:38:01] <CuriousErnestBro> the best company
[18:38:02] <^-^hi> was*
[18:38:06] <CuriousErnestBro> they give free servers to me 
[18:38:09] <CuriousErnestBro> I love oracle
[18:38:15] <^-^hi> ugh
[18:38:36] <Akronymus> Also: "ls -R | yes"  is a fun command for everyone
[18:38:41] <pikapika> We only like proprietary unixes here
[18:38:43] <CuriousErnestBro> what does it do
[18:38:49] <Akronymus> Try it
[18:38:50] <^-^hi> even their name makes pictures of people in suits making lawsuits in my mind (oracle)
[18:38:57] <pulse> imagine the madman who has this for wallpaper https://wallpaper.dog/large/20483603.jpg
[18:38:58] <bayaz> Type: image/jpeg Size: 172.6 kB 
[18:39:06] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[18:39:18] <pikapika> "Latest release	11.4[1] / August 28, 2018; 2 years ago"
[18:39:37] <pikapika> Akronymus, we only like our Solarises and our Red Hats
[18:39:48] <CuriousErnestBro> idk I'm too young to hate oracle
[18:39:56] <CuriousErnestBro> I hate them for making the trash tier language called java though
[18:40:02] <pikapika> Java is excellent
[18:40:06] <CuriousErnestBro> but apart from that they're pretty nice
[18:40:10] <pikapika> And that was Sun not oracle
[18:40:25] <Akronymus> pikapika java is ok, I guess.
[18:40:33] <Akronymus> But it is OOP so eeeeeeeeeeeeeeh
[18:40:41] <pikapika> OOP is very useful
[18:40:45] <password> pulse the mad man that has that wallpaper can resist any form of corruption
[18:40:46] <CuriousErnestBro> I was always confused why people hated OOP 
[18:40:47] <^-^hi> java is the eeeeeeeeeeehest OOP ever
[18:40:48] <pikapika> Don't listen to the functional programming fanatics
[18:40:50] <Akronymus> OOP is shoved into everything.
[18:40:53] <pikapika> CuriousErnestBro, its just FP wankers
[18:40:59] <davros> pure class based OOP sucks
[18:41:02] <CuriousErnestBro> because I thought OOP was "to use classes to box functions and data together"
[18:41:08] <CuriousErnestBro> apparenlty it's not
[18:41:12] <piou> yeah, that's less oop and more java's oop that's eeeurg
[18:41:13] <davros> rusts alternative idea of interfaces (like haskell typeclasses ) is better
[18:41:21] <Akronymus> CuriousErnestBro OOP is treated as the one true solution by education which in turns makes it get treated like that by the industry.
[18:41:32] *** nekodesu is now known as nekobased
[18:41:34] <davros> the idea that a type owns functions isn't actually such a good idea
[18:41:35] <CuriousErnestBro> Akronymus we didn't get taught OOP in java, we just learned classes 
[18:41:37] <pikapika> CuriousErnestBro, always remember to notice the background of the persons making such claims
[18:41:45] <password> OOPs
[18:41:50] <Akronymus> Which in turn means that probelms that are EASY in other paradigms get solved in oop anyways.
[18:41:50] <CuriousErnestBro> I did it again
[18:42:00] *** Joins: chomwitt (~chomwitt@ppp-2-85-147-24.home.otenet.gr)
[18:42:00] <password> MVC is also  treated as the god of all patterns
[18:42:05] <davros> java classes = what i usually think of when I hear OOP. but its one variation of OOP
[18:42:06] <pikapika> People whom worship haskell etc often make irrational statements about other languages
[18:42:14] <Akronymus> I actually really like objects
[18:42:15] <pikapika> There is also a lot of irrational anti-C sentiment among those types
[18:42:16] <CuriousErnestBro> java leads to people abstracting too much leading to shit code
[18:42:19] <davros> "OOP usually means java style classes" (but the full definition is broader)
[18:42:22] <password> stays away from any company that says they use MVC
[18:42:25] <CuriousErnestBro> it's not unique to java btw
[18:42:32] <davros> Akronymus,  i like objects, so long as you can bolt on more implementations
[18:42:36] <CuriousErnestBro> I've seen java written in rust too ....
[18:42:37] <Akronymus> Objects are damn useful. But not everything is objects
[18:42:37] <davros> extention methods
[18:42:45] *** blackop_ is now known as blackop
[18:42:52] <password> honestly , business logic defeats most of OOP benefits
[18:42:56] *** matt__ is now known as matt|home
[18:42:57] <Akronymus> And here we go again....
[18:43:01] <Akronymus> I don't hate C.
[18:43:07] <Akronymus> I find it quite useful actually.
[18:43:08] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[18:43:08] <pikapika> Akronymus, I am not saying you do
[18:43:16] <pikapika> I am saying there is a lot of irrational anti-C hate
[18:43:21] <davros> some people do prefer to go back to "just functions and structs" , JAI is like that
[18:43:23] <Akronymus> Just find functional languages more useful in general
[18:43:25] <pikapika> Particularly from fp people and also from rust people etc
[18:43:41] <davros> when you can "implement new interfaces for an existing type" .. the problems with OOP go away. 
[18:43:42] *** nekobased is now known as neko-chan
[18:43:42] <Arahael> pikapika: many of those fp people are very familiar with C.
[18:43:59] <davros> i guesas you could stretch the definition of OOP to cover what rust does. but thats not what comes to mind when you hear OOP
[18:44:11] <davros> "class-based-OOP"
[18:44:12] <Akronymus> I am not even gonna bother with expressiveness this time.
[18:44:51] <pikapika> And yet they make ridiculous statements like printf("hello world\n") is prone to escape code vulns and we must use printf("%s\n","Hello world")
[18:44:53] <Akronymus> I personally wish that alan kays version of oop were the one that became popular.
[18:44:56] <pikapika> ie for a string literal
[18:45:06] <Akronymus> Wait what?
[18:45:08] <davros> that was the smalltalky loose binding thing?
[18:45:11] <davros> like ObjC
[18:45:14] <pikapika> Yeah I have heard that argument being made agaisnt C
[18:45:14] <Akronymus> Who the fuck makes such claims?
[18:45:21] <pikapika> From either a rust or fp person
[18:45:39] <Akronymus> davros message passing rather than calling functions directly.
[18:45:51] <pikapika> As I said, theres a lot of irrational C hatred
[18:45:54] <davros> right thats what i was trying to convey with loose binding
[18:45:54] <piou> pikapika: are you sure this was exactly this?
[18:46:01] <pikapika> piou, exactly so
[18:46:05] <piou> pikapika: because printf("hello world"); isn't vulnerable, but printf(user_input) definitely is
[18:46:09] <davros> "you send the object a message.."
[18:46:15] <davros> it may or may not do something with it
[18:46:16] <pikapika> It was quite literally for a compile time literal
[18:46:21] <pikapika> Not a user input string
[18:46:35] <piou> Then it was wrong.
[18:46:36] <davros> its not explicitely in rust by any stretch, but pattern matching makes message passing systems elegant to write
[18:46:46] <pikapika> piou, its just a thing in general
[18:46:53] <pikapika> There is a lot of irrational anti C hatred
[18:46:57] <GeDaMo> https://en.wikipedia.org/wiki/Late_binding
[18:46:57] <bayaz> Title: Late binding - Wikipedia 
[18:47:05] <Akronymus> Oh, I didn't even think about printf with user input being vulnerable.
[18:47:15] <Akronymus> But guess it makes sense.
[18:47:16] <piou> pikapika: there's a lot of very rational anti-C sentiment too
[18:47:34] <davros> there's also the idea of "COM objects" and rust trait objects are slightly similar to that. so you could sorta say "rust has a variation of OOP" (just not exactly java OOP)
[18:47:45] <piou> Akronymus: yeah, it's a format string vulnerability
[18:47:55] <pikapika> piou, because if you even think a little bit, if the attacker can edit arbitrary strings in your binary he already has full access to your system and escape code vulns are a moot point
[18:48:10] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[18:48:26] <^-^hi> if you are writing extra code, and that only increases the implicitness of how your code works and makes you think of more than accomplishing the task at hand it doesn't do any real help to solve the problem at hand, that is absolutely bad and that is what OOP has caused in gigantic proportions in production code
[18:48:28] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[18:48:36] <piou> pikapika: there's not even a reason to go that far, it's just wrong
[18:48:37] <^-^hi> THAT IS WHY OOP SUCKS
[18:48:49] <pikapika> piou, as I said. Its just "not even wrong".
[18:48:57] <Akronymus> ^-^hi indeed.
[18:48:58] <pikapika> Its game over if the attacker can edit your binary like that
[18:49:07] *** Joins: magla (~gelignite@55d43c1b.access.ecotel.net)
[18:49:20] <davros> yeah people get drawn into figuring out frameworks, instead of just solving the task at hand.
[18:49:21] <Akronymus> I personally find functional languages generally just get out of your way.
[18:49:22] <pikapika> Most anti-C arguments are similarly irrational
[18:49:34] <davros> yeah functional languages streamling the job of actually making computers do things.
[18:49:35] <Akronymus> Hell, C gets out of your way and lets you do what you want to
[18:49:47] <^-^hi> There is hardly any reason for me to write the inversed domain name of an obscure aquired company's website in an identifier in my code
[18:49:56] <Akronymus> OOP still makes more problems than it solves
[18:49:59] <pikapika> Akronymus, I'd say anything with a gc does not "get out of your way"
[18:50:01] <Joanna>  Oop is a good feature if used properly
[18:50:05] <piou> I'd say most anti-C arguments are very rational and not at all at this level of blatantly wrong
[18:50:09] <audiocat> hello
[18:50:14] <Akronymus> pikapika that, i fundamentally disagree with
[18:50:23] *** Quits: s1b1 (~s1b1@user/s1b1) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[18:50:34] <audiocat> how reliably can a webserver run on a vm with 99.999% uptime?
[18:50:37] <pikapika> piou, count yourself lucky then
[18:50:44] <^-^hi> pikapika: C is nice, and arguments against it are also rational
[18:50:48] *** Quits: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net) (Remote host closed the connection)
[18:50:51] <^-^hi> don't be zealous
[18:50:58] <Akronymus> A GC allows you to just write what you want without having to worry about, well, garbage.
[18:51:05] <Akronymus> In the majority of cases.
[18:51:17] <DnzAtWrk> argument. C makes sense in high performance real-time applications
[18:51:24] <Akronymus> Argument accepted
[18:51:25] <pikapika> ^-^hi, C is not perfect. But most arguments I have seen people make against it are bullshit. And it often turns out it was a rust guy or a haskell guy etc
[18:51:25] <DnzAtWrk> but a GC is very practical when performance barely matters
[18:51:31] *** Quits: SerialSmile (~SerialSmi@95-29-44-41.broadband.corbina.ru) (Quit: Leaving)
[18:51:46] <^-^hi> pikapika, haskell guys are the optimal rational creature
[18:51:48] <piou> Well, making sense is one thing, but is that enough to choose it over alternatives?
[18:52:00] <Akronymus> i certainly think that having a GC is more of getting out of your way than manually having to manage it
[18:52:02] *** Joins: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net)
[18:52:10] <^-^hi> they are a mathematical construct
[18:52:28] <pikapika> Akronymus, gc makes it very hard to manage memory
[18:52:34] <pikapika> It works unitl it doesn't
[18:52:37] <^-^hi> their language is just so hard to be mainstream, so we stick with C
[18:52:39] <pikapika> When it doesn't, well god help you
[18:52:40] <Akronymus> And I like wrong states to be literally unrepresentable.
[18:52:41] <sandman13> pikapika: You've been hit by, You've been struck by, RESF (music)
[18:52:52] <sandman13> Rust Evangelism Strike Force
[18:52:57] <DnzAtWrk> the theoretically best language in the world would use a GC
[18:53:02] <pikapika> Manual memory management is the simplest
[18:53:02] <DnzAtWrk> but it wouldn't affect performance at all
[18:53:03] <Akronymus> pikapika I have never once had problems with the GC.
[18:53:11] <piou> The GC is something you have to work with, just like any memory management system. Also, not all GC are alike, different languages have different GC profiles and different GC needs.
[18:53:16] <pikapika> Akronymus, gc is very complex and subtle
[18:53:22] <davros> sandman13,  reporting for duty .. FOR THE CRAB!
[18:53:28] <^-^hi> pool allocation is the most awesome
[18:53:33] <Akronymus> Yes, but they are also VERY thoroughly tested
[18:53:37] <^-^hi> easy for you easy for computer
[18:53:37] <pikapika> As I said, any opaque systems out of your direct control like that are fine until they aren't
[18:53:40] <pikapika> And when they aren't,...
[18:53:41] <user51> bool allocation is also nice
[18:53:54] <Akronymus> So, would you say that the OS is bad too?
[18:53:55] <DnzAtWrk> doesn't rust have a really nice system?
[18:53:59] <sandman13> davros: CRAB is also known as Cancer. And I don't want Cancer :P
[18:54:00] <DnzAtWrk> some kind of scoped based thing
[18:54:01] <piou> pikapika: but they're rarely opaque and not often out of your direct control
[18:54:03] <DnzAtWrk> scope*
[18:54:08] <pikapika> The os is a much better done abstraction
[18:54:17] <piou> pikapika: if you're thinking java 1.0 GC that's not it
[18:54:22] <Akronymus> But it still gets in your way.
[18:54:28] <pikapika> piou, how easily can you control a gc in say nodejs or python today
[18:54:35] <pikapika> Jvms probably have more tools than others
[18:54:36] <beaky> nice i like allocating a 64-bit pointer to a 256-bit struct that has a bool value in the first 8 bits 
[18:55:07] <pikapika> Akronymus, it is an acceptable abstraction because its much better done. Gc is not as good an abstraction yet.
[18:55:09] <^-^hi> lets stop this argument
[18:55:10] <beaky> this is why i use rust so i dont allocate anything at all
[18:55:15] <piou> no idea for nodejs, good enough for python considering that it's python: it's not meant to do realtime anyway. You can easily avoid having gc pauses in your hot loops, and most of the work in Python isn't done by the GC but by refcounting.
[18:55:15] <^-^hi> and start hating on python
[18:55:18] <DnzAtWrk> you can control the gc but not allowing anything to be collected
[18:55:20] <DnzAtWrk> you use object pools
[18:55:24] <Akronymus> pikapika what GC are you talking about?
[18:55:27] <davros> you allocate in rust
[18:55:29] <^-^hi> a goddamn int containing 1 is 14 bytes in python
[18:55:29] <DnzAtWrk> by not*
[18:55:31] <pikapika> piou, but thats the thing...its black magic
[18:55:43] <Akronymus> I'd dare say that something like erlangs GC is much better than anything I could write.
[18:55:43] <pikapika> SOmething works in this specific version of python, and you don't know why
[18:55:50] <pikapika> then suddenly next version it is leaking etc
[18:55:56] <piou> pikapika: it's black magic that is well documented, easily understood, and exposes many functions to be manipulated?
[18:55:59] <pikapika> Akronymus, in general
[18:56:05] <Akronymus> That is like compiler bugs. 
[18:56:08] <Akronymus> Sure they happen.
[18:56:11] <piou> pikapika: that's milk chocolate magic at best
[18:56:14] <piou> not black
[18:56:14] <pikapika> piou, show me how you can manually override python gc
[18:56:19] <DnzAtWrk> easy
[18:56:21] <DnzAtWrk> import gc I think
[18:56:22] <Akronymus> But they are RARE and even rarer that they have any significant impact.
[18:56:23] <DnzAtWrk> then gc()
[18:56:42] <piou> pikapika: depends what you mean by override
[18:56:43] <DnzAtWrk> gc.collect()
[18:56:53] <pikapika>  gc.disable()
[18:57:00] <piou> then gc.disable
[18:57:03] <pikapika> Its nice python provides an escape hatch
[18:57:07] <piou> Most of the job isn't done by the GC anyway
[18:57:10] <DnzAtWrk> some would argue that's terrible
[18:57:19] <pikapika> DnzAtWrk, sometimes its the only way
[18:57:29] <DnzAtWrk> meh, if you're running out of memory
[18:57:34] <DnzAtWrk> maybe consider some kind of database-based approach
[18:57:40] <piou> I can understand having a disable before a hot loop then reenable 
[18:57:41] <pikapika> A gc is a complex algorithm thats hard to eyeball
[18:57:49] <pikapika> Sometimes its best to have direct control in your hand
[18:57:53] <beaky> at last i have found what i am looking for a functional programming language where everything is unboxed by default http://recurial.com/pldi19main.pdf
[18:57:53] <bayaz> Type: application/pdf Size: 420.1 kB 
[18:57:55] <pikapika> rather than trying to give vague suggestions to a gc engine
[18:57:58] *** Joins: Crassus (~Crassus@user/crassus)
[18:58:00] <Akronymus> .dispose() pikapika 
[18:58:05] <piou> pikapika: frankly in python the GC is just never the issue
[18:58:13] <DnzAtWrk> no, it can be
[18:58:17] <pikapika> Its a general thing
[18:58:19] <DnzAtWrk> I've done some heavy stuff in numpy in loops
[18:58:24] <piou> I'm not saying there aren't ever issues, but it's Python
[18:58:26] <DnzAtWrk> where I ran out of memory if I didn't call collect
[18:58:42] <piou> You're not writting super hot loops anyway in python
[18:58:56] <piou> DnzAtWrk: yeah, alright, it can happen I¬†guess
[18:58:57] <beaky> for super hot loops you can use pypy screaming-fast jit
[18:59:00] <pikapika> That doesn't change the fact that python could be used for large allocations
[18:59:01] <Akronymus> I MUCH  MUCH more often have problems of writing memory leaks in non gc languages than I have problems with the gc in ones that have it.
[18:59:10] <DnzAtWrk> numba is great for NATIVE loops
[18:59:11] <^-^hi> if you allocate 2GB of variables in python, and delete them all, your process would still use 2GB of RAM
[18:59:15] <DnzAtWrk> but not when mixing it with numpy
[18:59:16] <^-^hi> PYTHON SUCKS
[18:59:25] <DnzAtWrk> it's not the for loops that are the issue since numpy does the heavy lifting
[18:59:42] *** Joins: Izem (~Izem@8.21.10.18)
[19:00:10] <^-^hi> python doesn't have real threading
[19:00:12] *** Joins: inky (~inky@5.77.151.77)
[19:00:25] <^-^hi> an int containing 1 is 14 bytes
[19:00:29] <DnzAtWrk> it has several methods of multi-threading
[19:00:35] <DnzAtWrk> utilizing multi-threads, or multiple processes
[19:00:36] <DnzAtWrk> and more
[19:00:39] <pikapika> Is the gil still a problem
[19:00:57] <DnzAtWrk> numpy itself is multithreaded
[19:00:59] <DnzAtWrk> obviously
[19:00:59] <pikapika> I had to use processes last time. There is also the benefit a process can be killed from outside.
[19:01:12] <Akronymus> In summary for my arguments/experience pikapika GC is very rarely if ever a problem, while manual memory management quite often makes problems
[19:01:28] <pikapika> Akronymus, but your argument was it 'gets out of your way'
[19:01:31] <pikapika> which it clearly doesn't
[19:01:35] <Akronymus> It does though
[19:01:39] <pikapika> A gc takes complete control of memory management
[19:01:41] <Akronymus> More so than manual memory management
[19:01:44] <pikapika> which is the opposite of "getting out of your way"
[19:01:57] <Akronymus> Getting out of the way, as in letting me do what I want.
[19:02:07] <Akronymus> Rather than having to adhere to some pattern
[19:02:07] <pikapika> Which malloc/free lets you do much more
[19:02:09] <pikapika> In fact
[19:02:10] <^-^hi> GC often comes side by side with other, performance degrading things and that is why it gets some undeserved hate
[19:02:17] <pikapika> You can make a part of your program gc in C if you want
[19:02:24] <Akronymus> malloc/free IS a pattern
[19:02:25] <piou> pikapika: Ah, how nice it is to have a simple, easily grasped system such as manually managed memory. Never to have things like double free leading to arbitrary code execution, or use after free leading to arbitrary code execution. Wrong allocations leading to arbitrary code execution (after an obligatory buffer overflow). Wait, no, it's languages that don't do manual management that avoid these.
[19:02:26] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:02:31] <piou> At least you avoid memory leaks, the worse issue with GC right? Ah, no. Pauses? Well, the OS can still pause you whenever he wants so you must still be careful about pauses anyway...
[19:02:33] <beaky> you can use static heaps even with a gc so you can tell the gc to handoff some memory to custom allocators for example
[19:02:42] <pikapika> piou, the argument was about the language "getting out your way"
[19:02:54] <pikapika> Not about the problems of double free or dangling pointers etc
[19:03:13] <Akronymus> Having to worry about those is NOT getting out of my way
[19:03:15] <piou> pikapika: needing to manage these issues is the reason why manual management can't get out of your way
[19:03:22] <Akronymus> Not having to worry about em is getting out of my way
[19:03:25] <piou> They go hand in hand
[19:03:28] *** Quits: inky_ (~inky@37.252.82.242) (Ping timeout: 256 seconds)
[19:03:28] <pikapika> Trying to do custom memory management in gc languages seesm harder to me than doing gc in manual memory languages
[19:03:35] <Akronymus> Of course
[19:04:09] <Akronymus> But you don't usually DO custom memory management as it is just not needed, because the language removes that obstacle for you and thus gets out of your way
[19:04:19] <piou> pikapika: it depends on the kind of custom memory management. A simple object pool and some flyweights solve a *lot* of issues and aren't hard at all, they're just basic things to learn and use.
[19:04:20] <Akronymus> To let you write "useful" stuff.
[19:04:26] <pikapika> I disagree strongly with what "get out of your way" means
[19:04:34] *** Quits: sunbae (~euk@user/sunbae) (Ping timeout: 268 seconds)
[19:04:43] <Akronymus> And I disagree with your disagreement
[19:04:51] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[19:04:56] <pikapika> piou, which is trivial in C and C++. But you might have to think up odd ways to do that in say java because you cannot mix types.
[19:05:12] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[19:05:20] <piou> That's not harder
[19:05:29] <pikapika> What is the equivalent of a void* pool in java
[19:05:30] <piou> You don't need to have one pool of mixed types
[19:05:39] <piou> And it would be an Object pool I¬†guess
[19:05:58] <Akronymus> yeah object/dynamic pool.
[19:06:00] <piou> Something as ugly as a void* one
[19:06:00] <pikapika> but object pool if you wanna allocate some subclass to it, it'd lead to a dynamic allocation anyways
[19:06:03] *** Parts: furrymcgee (~devuan@31.179.186.66) ()
[19:06:14] <pikapika> it won't be from the object array you made
[19:06:21] <pikapika> the object array is just a set of pointers
[19:06:22] <piou> pikapika: it'll lead to dynamic allocation once, then you're the one managing the objects
[19:06:54] <pikapika> It may be, but its a rather different thing from a void* pool
[19:07:06] <pikapika> which proves my point, these things are just more natural in C++
[19:07:15] <Akronymus> In metal? Yes.
[19:07:17] <piou> No, it just proves that different languages have different solutions
[19:07:21] <Akronymus> In practical use? Not really.
[19:07:28] <piou> Not that one is more complex than the other
[19:07:38] <piou> You can't judge java by trynig to use it as C++
[19:07:43] <pikapika> Obviously
[19:07:49] *** Joins: juliaEnv (~mathAndRh@ip-86-49-241-245.net.upcbroadband.cz)
[19:07:52] <piou> And I say that with all the dislike of java I have
[19:07:53] *** Quits: molt (~molt@79.140.150.21) (Ping timeout: 248 seconds)
[19:07:55] <pikapika> But again you are forgetting what our argument was in the first place
[19:07:56] *** Quits: matrixskp (~matrixskp@121-75-182-31.dyn.vf.net.nz) (Quit: My comp has gone to sleep to save energy. ZZZzzz‚Ä¶)
[19:07:57] <pikapika> I love Java
[19:08:00] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[19:08:05] <Akronymus> Altough, I'd personally prefer storing records rather than objects.
[19:08:05] <smorgasbord> what is the discussion?
[19:08:11] <beaky> nice i like java too it is the most enterprise-grade platform
[19:08:16] *** Quits: tia (~sidy@nat.esu3.org) (Quit: Leaving)
[19:08:16] <Akronymus> smorgasbord pain and suffering
[19:08:20] <pikapika> smorgasbord, what does a language "getting out of your way" entail
[19:08:30] <pikapika> I propose anything with a gc does the opposite of "getting out of your way"
[19:08:35] <smorgasbord> pikapika: that sounds very subjective
[19:08:36] <pikapika> Others here seem to disagree
[19:08:52] <smorgasbord> Akronymus: business as usual then
[19:09:04] <piou> You're saying "I have this issue." "Ok, then people use solution A which is trivial to setup." "No, in other language I use solution B, I want solution B." "Solution B is somewhat doable but that's going to be trickier" "Then it's not good, I want B."
[19:09:04] <pulse> i wonder how much the existence of java spiked coffee sales
[19:09:24] <pikapika> Java was just an example
[19:09:34] *** Joins: s1b1 (~s1b1@user/s1b1)
[19:09:53] <Akronymus> I wouldn't say java gets out of my way, but not because of the GC, but rather because the HEAVY insistence on OOP.
[19:10:12] <pikapika> I don't know why people dislike oop
[19:10:24] <piou> Ok, I'm out. If your definition of "getting out of your way" is "anything but GC" then there is mathematically no way to discuss the possibility that GC can get out of your way. You just refuse the idea by first principles.
[19:10:29] <Akronymus> Because it is treated as THE only way.
[19:10:35] <pikapika> I have a feeling many probably don't even understand oop. Oop is very difficult and subtle to understand.
[19:10:42] <pikapika> Just having classes with methods does not lead to oop.
[19:10:49] <Akronymus> >  Oop is very difficult and subtle to understand.
[19:10:51] <Akronymus> Yes it is
[19:10:58] <Akronymus> That is not a argument why oop is good
[19:10:59] <davros> beaky:
[19:11:14] <davros> beaky if there's one thing that ISNT nice and I DONT like, it's Java
[19:11:14] <pikapika> piou, planotic mathematical purity is nice, but physics and electronics are the harsh reality
[19:11:16] <Akronymus> object programming != object ORIENTED programming
[19:11:29] <Akronymus> Objects are great. Object orientation is awful
[19:11:30] <piou> pikapika: you choose the definition you choose, nothing about physics here
[19:11:45] <pikapika> Akronymus, FP is arguably even more difificult and subtle to understand
[19:11:52] <pikapika> Would you say that means FP is bad
[19:12:02] <Akronymus> I find FP easier to understand.
[19:12:08] <karstensrage> since all we ever do is CRUD apps and RBAC its not there is great opportunity to apply methodologies like OOP or DDD or w/e
[19:12:18] <pikapika> piou, mathematical purity fails when confronted with the finiteness and chaos of reality
[19:12:27] <smorgasbord> pikapika: I think aligning yourself completely to the hardware system is limiting in some ways too
[19:12:35] <Akronymus> A loop can do anything
[19:12:50] <davros> yeah C has the tools to do anything
[19:12:58] <Akronymus> a map function can only apply a function to something.
[19:12:58] <smorgasbord> so does BF
[19:13:01] <pikapika> Forgetting that the code is running on physical hardware with certain properties and limitations is arguable a worse thing
[19:13:05] <Akronymus> And returning a new value based on that.
[19:13:16] <Akronymus> Which one seems easier to you?
[19:13:19] <davros> C is a sweetspot beyond, say , Brainfuck, where you have the tools to do anything with reasonable effort
[19:13:30] <piou> pikapika: look, there's nothing about "the chaos of reality": if you start by saying "getting out of my way means anything but GC" then there is zero point in discussing "can gc get out of your way", you're not going to accept anything because your foundation is that it's wrong.
[19:13:45] <pikapika> I can easily write a gc in C
[19:13:49] <smorgasbord> piou: +1, it's a disagreement at the fundamental level
[19:13:55] <pikapika> Much harder to do manual memory management in a gc lang
[19:13:55] <smorgasbord> not much to debate
[19:13:59] <^-^hi> don't feed the?
[19:14:09] <pikapika> C can do both gc and manual memory management
[19:14:11] <Akronymus> But can YOU in particular write a good GC? 
[19:14:13] <pikapika> So its inherently more flexible
[19:14:19] <davros> "sort functions by type"     "sort functions per type by functoin"
[19:14:23] <pikapika> Akronymus, most runtimes are written in C and C++ so of course
[19:14:42] <Akronymus> More flexible is orthogonal to getting out of your way IMO.
[19:14:45] <davros> object:  all the funcitons it will ever need.        function with pattern matching - "all the variations of this function for each type we know about"
[19:15:11] <pikapika> ASM is even better at getting out of your way, on that note
[19:15:30] <pikapika> Its the closest a normal programmer will come to talking to the hardware
[19:15:35] *** Quits: usr123 (~usr123@27.255.220.96) (Read error: Connection reset by peer)
[19:15:43] <pikapika> There is nothing impeding your way
[19:15:43] <davros> OOP came a long and everyone forgot function pointers and tagged unions were a thing, and for a while everyone tried to fit everything to that paradigm, then Pure-FP was the extreme backlash, and recently languages have settled into some middle ground where they have a sensible mix of features.
[19:15:58] *** Joins: usr123 (~usr123@124.253.6.53)
[19:15:59] <Akronymus> I find that I have a much harder time expressing what I want it to do in ASM.
[19:16:09] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 258 seconds)
[19:16:17] <pikapika> The scale being considered was how much a language gets out of your way
[19:16:21] <davros> yeha asm is not a good way to write full programs in 2021
[19:16:21] <Akronymus> I guess getting out of the way is for me about how hard it is to express what I want to happen
[19:16:30] <karstensrage> thats probably because you have to break it down into such small pieces 
[19:16:31] <pikapika> Then you are the one using the wrong definition of words
[19:16:39] <Akronymus> Or you are
[19:16:43] <smorgasbord> pikapika: that scale itself is subjective right, "getting out of one's way" is not well defined
[19:16:50] <pikapika> I can do everything in asm/C that other languages can
[19:16:55] <pikapika> Can other langauges do everything asm can?
[19:17:00] <karstensrage> i like Java specifically for the ecosystem
[19:17:02] <GeDaMo> Forth can! :P
[19:17:15] <piou> Sometimes doing more is the issue
[19:17:17] <smorgasbord> pikapika: technically, yes
[19:17:18] <Akronymus> pikapika can you write complex software as fast as others?
[19:17:18] *** Quits: xff0x (~xff0x@2001:1a81:53d2:1c00:3b45:e81a:a20c:e310) (Ping timeout: 258 seconds)
[19:17:21] <beaky> nice i like forth it is the apl of stack based programming languag
[19:17:25] <smorgasbord> any turing complete language can literally do all the same things
[19:17:26] <pikapika> Even a turing pit argument fails smorgasbord 
[19:17:35] <piou> Akronymus: *without bugs
[19:17:40] <Akronymus> That too.
[19:17:44] <Akronymus> And no memory leaks either
[19:17:47] <smorgasbord> all you have to do is simulate the hardware
[19:17:48] <pikapika> If you are inside a vm, your turing completeness can do nothing about the host system for example
[19:17:54] <piou> It's very easy to write C, not so easy to write correct C
[19:18:01] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 248 seconds)
[19:18:03] *** Joins: xff0x (~xff0x@2001:1a81:53d2:1c00:f58c:78ee:80de:d293)
[19:18:14] <karstensrage> Sun and Oracle have maintained a very dogmatic way of doing things and libraries followed suit
[19:18:21] <pikapika> Likewise for trying to use the argument that java being turing complete means you can do asm things in it. You can...in a bytecode you have mode, and not for the host machine itself.
[19:18:24] <pikapika> *made
[19:18:43] <smorgasbord> what about lisp machines?
[19:18:43] <pikapika> so, in a sense, inside a vm
[19:18:52] <karstensrage> so it means that when you are up against some unknown problem, you arent faced with TWO problems, the problem itself and the weird DSL in JS, Python, etc. that solves it
[19:19:17] <Akronymus> Sure you can write something to a specific register and I can't. But in practice I never once needed to write to a specific register.
[19:19:34] <pulse> pikapika, why do languages that aren't C exist? :p
[19:19:45] *** Joins: Tazmainian (~Tazmainia@41.193.169.28)
[19:19:49] <pulse> i love C but you're making some funny claims here
[19:19:54] <pikapika> Your argument was about how much the language gets out of your way. Accept you lost. asm provides the least impedance in your way and is the closest to letting you directly talk to the hardware.
[19:20:06] <pulse> asm is also the dumbest possible way to write software in 2021
[19:20:09] <smorgasbord> pikapika, that makes no sense
[19:20:12] <pikapika> That wasn't the argument
[19:20:21] <pulse> first of all you can't even optimize half as good as any optimizing compiler
[19:20:23] <pikapika> The argument/scale was how much a language gets out of your way
[19:20:23] <Akronymus> No you should accept that you lost. I give you exactly as much proof why you lost as you gave to me why i lost
[19:20:24] <smorgasbord> your definition of "getting in your way" is not aligned with that of most people here
[19:20:25] <pulse> second of all you're wasting valuable time
[19:20:32] <pikapika> Asm is the most superior on that scale
[19:20:40] <smorgasbord> ok sure
[19:20:48] <smorgasbord> asm is the greatest language
[19:20:55] <smorgasbord> on whatever scale you're talking about
[19:21:31] *** Quits: inky (~inky@5.77.151.77) (Remote host closed the connection)
[19:21:41] *** Joins: inky (~inky@5.77.151.77)
[19:21:51] <pikapika> I hate how simple and self evident things get dragged into long debates
[19:21:59] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[19:22:02] <Akronymus> So do I.
[19:22:08] <Akronymus> Clearly it isn't self evident to you
[19:22:46] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[19:24:19] *** Quits: pilyn (~pilyn@user/pilyn) (Quit: Leaving)
[19:26:38] *** Quits: mci64 (~mci64@185.242.190.95) (Ping timeout: 272 seconds)
[19:27:39] *** Quits: Izem (~Izem@8.21.10.18) (Ping timeout: 258 seconds)
[19:27:56] <Caffeinated> pikapika: coming from you that's kind of .. "tee hee"
[19:30:32] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 245 seconds)
[19:32:13] *** Joins: molt (~molt@62.4.57.182)
[19:32:20] *** Quits: ^-^hi (~hi^-^@user/-hi/x-1729478) (Ping timeout: 268 seconds)
[19:32:20] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 272 seconds)
[19:32:27] *** Quits: kurtthem1ker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Remote host closed the connection)
[19:33:37] <pikapika> Caffeinated, why
[19:36:28] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Ping timeout: 258 seconds)
[19:38:58] <beaky> i like assembler it is very fast to compile
[19:39:20] <pulse> real programmers punch in 1s and 0s directly
[19:39:57] <Akronymus> C-x M-x M-Butterfly
[19:40:24] *** Joins: LiftLeft (~LiftLeft@154.21.114.33)
[19:41:26] *** Quits: Akronymus (~Akronymus@85.31.8.181) (Quit: Client closed)
[19:41:59] <Caffeinated> hahaha
[19:43:08] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:43:50] *** Joins: ^-^hi (~hi^-^@user/-hi/x-1729478)
[19:44:58] *** Joins: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net)
[19:46:21] <Arahael> emacs really does have the m-x butterfly command.
[19:47:07] *** Joins: sp1r1t (~vitor@186-194-36-125.entre.net.br)
[19:48:34] <pulse> i used to think emacs has something to do with macs
[19:48:48] *** Quits: sp1r1t (~vitor@186-194-36-125.entre.net.br) (Quit: leaving)
[19:49:12] <beaky> yes likewise with maclisp
[19:51:22] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[19:53:56] *** Joins: PikaChokeMe (~PikaChoke@c-24-11-1-200.hsd1.ut.comcast.net)
[19:54:22] <PikaChokeMe> https://stackoverflow.com/a/9944993/1625274 does anyone know how this pattern continues? 
[19:54:24] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[19:54:24] <bayaz> Title: How to select specific item from cartesian product without calculating every other item 
[19:54:50] <PikaChokeMe> I have 28 items in total... I'd like to use this method to build any particular index 
[19:55:01] <PikaChokeMe> * 28 sets in total
[19:58:50] <CuriousErnestBro> if I say foreign key not null, will the row automatically get deleted when it becomes null?
[20:00:42] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[20:02:03] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-193e-00d5-a539-86a3.res6.spectrum.com)
[20:02:09] *** Quits: rty (~rty@212.102.39.133) (Ping timeout: 258 seconds)
[20:03:53] *** Quits: chomwitt (~chomwitt@ppp-2-85-147-24.home.otenet.gr) (Ping timeout: 248 seconds)
[20:04:10] *** Joins: rty (~rty@ip-109-238-218-210.aim-net.cz)
[20:06:32] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:cc55:1f37:6445:3091) (Quit: Textual IRC Client: www.textualapp.com)
[20:06:57] *** hexology- is now known as hexology
[20:07:30] *** Quits: nanowire (rob@user/nanowire) (Ping timeout: 240 seconds)
[20:08:23] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[20:09:26] *** Quits: rty (~rty@ip-109-238-218-210.aim-net.cz) (Ping timeout: 258 seconds)
[20:09:39] *** Quits: neko-chan (~nano@user/nekobit) (Quit: free(neko);)
[20:10:59] <mrig> That will force you to have a value when creating the record, the cascade key word sets the behaviour on updates and deletes.
[20:11:15] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Quit: Leaving.)
[20:11:22] *** Joins: rty (~rty@212.102.39.157)
[20:14:28] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[20:14:35] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[20:16:22] *** Joins: nekodesu (~nano@user/nekobit)
[20:16:36] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[20:19:44] <pikapika> mrig, hi uwu
[20:21:18] *** Joins: mci64 (~mci64@185.242.190.95)
[20:21:43] *** Quits: Yonle (~Yonle@user/yonle) (Read error: Connection reset by peer)
[20:23:23] <pyzozord> I have to say I do see progress from a year ago when I first tried to solve competetive programming problems. Year ago problems like this https://app.codility.com/programmers/lessons/7-stacks_and_queues/stone_wall/ would literally take me days. I just solved it now in literal 5 minutes. It takes a lot of time and effort, but you can get better at this
[20:23:24] <bayaz> Title: StoneWall coding task - Learn to Code - Codility 
[20:25:09] *** Joins: Quacc (~youbuntoe@user/quacc)
[20:26:31] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[20:28:13] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 258 seconds)
[20:29:09] <beaky> nice that problem looks like it will take me weeks
[20:29:42] <Caffeinated> rofl
[20:30:48] <Lyn> what's a good way to manage multiple repos of the same project? e.g. when the project consists of multiple "products"
[20:30:52] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:31:03] <beaky> monorepo of course
[20:31:20] <pulse> a project-wide account
[20:31:20] <beaky> a single giant repo containing everything 
[20:31:26] <Lyn> but when you look at the commit history, then they'll all be mixed up, won't they
[20:31:36] <pulse> monorepo can get messy
[20:32:02] <pulse> imagine you have to solve 3 conflicts in three separate products all on a single merge
[20:32:33] <pyzozord> beaky: you don't have to build an actual wall, it's imaginary ;)
[20:32:40] <pulse> just have a single account for the project and multiple repos in it
[20:32:44] <pulse> imo that's the cleanest
[20:32:51] <edgar-rft> I think that problem can be solved within seconds by calling a concrete ready-mixer truck.
[20:32:52] <beaky> but how do i prove my solution correct in agda
[20:33:13] <rty> https://yosefk.com/blog/dont-ask-if-a-monorepo-is-good-for-you-ask-if-youre-good-enough-for-a-monorepo.html
[20:33:33] <user51> pyzozord: https://math.stackexchange.com/questions/379927/how-long-will-it-take-marie-to-saw-another-board-into-3-pieces
[20:33:34] <bayaz> Title: How long will it take Marie to saw another board into 3 pieces? 
[20:33:36] <user51> can you solve this?
[20:34:00] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 268 seconds)
[20:34:02] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[20:34:22] <Lyn> okay so I guess I'll just have multiple repos normally then lol
[20:35:14] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 268 seconds)
[20:36:11] <Lyn> is it possible to have a 'master repo' so that you can go back in time to the same point for all the repos?
[20:36:47] <Lyn> or to view the commit histories side-by-side
[20:37:34] <cis> if that's what you want, why wouldn't you use a monorepo?
[20:37:36] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[20:37:44] <Lyn> because of all the other reasons
[20:37:49] *** Quits: shan (shan@user/shan) (Changing host)
[20:37:49] *** Joins: shan (shan@cyblog/maintainer/shan)
[20:38:28] <cis> because you're worried about commits being "mixed up"?
[20:38:32] <pyzozord> user51: if I wasn't overconfident and answered the obvious thing without double checking
[20:38:47] <cis> what if I want to make a simultaneous change to multiple products in a single commit?
[20:39:32] <edgar-rft> user51: the sizes of the first and the "other" board are nowhere specified, so we don't even know if they are of the same size, therefore we can't answer the question.
[20:39:45] <Caffeinated> overconfidence is a menace..it fools otherwise 'smart' people into thinking they can't lose
[20:39:48] <rty> it is possible to have a master repo to go back in time for all the repos. it's called git submodules. one project is controlling all other projects imported as submodules
[20:40:04] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:1d5f:9e3f:c4f9:810d) (Quit: Leaving)
[20:40:15] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:9882:5d69:12df:2a8c) (Quit: Leaving)
[20:41:06] <beaky> yes everyone hates submodules 
[20:41:18] <edgar-rft> not only that
[20:41:20] *** Joins: odnes (~odnes@ppp141237116116.access.hol.gr)
[20:41:37] <user51> pyzozord: read the answers, lots of interesting takes
[20:41:40] *** Quits: odnes (~odnes@ppp141237116116.access.hol.gr) (Read error: Connection reset by peer)
[20:41:41] <bihtori> repo tool is teh awesomest, submodules not so much
[20:42:32] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[20:42:47] *** Quits: molt (~molt@62.4.57.182) (Read error: Connection reset by peer)
[20:43:26] *** Joins: todda7 (~torstein@240.red-81-37-247.dynamicip.rima-tde.net)
[20:43:41] *** Joins: molt (~molt@79.140.150.21)
[20:44:00] <beaky> ok its been half an hour and im still stuck staring at the wall
[20:44:12] <Lyn> maybe some automated process to commit to the master repo when any commit happens inside of it, that way one could make commits spanning all the repos at the same time by committing just to the master repo
[20:44:15] <beaky> i need a hint bro
[20:44:29] <beaky> yes just commit to the monorepo
[20:44:51] <beaky> the simplicity of monorepos
[20:45:10] <Lyn> so a monorepo with more git repos inside of them, and an automated process to do a master commit when any commit happens
[20:45:18] <edgar-rft> user51: School test question: "When was Mahadma Ghandi born?" my answer was "on his birthday" because they didn't ask for a date.
[20:45:30] *** Joins: jamesatjaminit (~jamesatja@user/jamesatjaminit)
[20:47:17] <beaky> the preconditions to saving a block is that you have (1) an earlier block that is the same height as the one you're trying to build, and (2) there was not a block of lower hieght than that block that is earlier 
[20:47:32] <beaky> those are the steps i need to prove my solution correct in agda
[20:47:42] <user51> edgar-rft: thats nice, but i prefer the brute force solution :P
[20:47:50] <beaky> i will now prepare tea to think of how i will tackle this proof
[20:47:58] <Caffeinated> bahahaha
[20:48:28] <beaky> damn agda is not in the allowed languages
[20:48:55] <beaky> it only has c c++ go java python php javascript kotlin lua ruby swift and visual basic. no rust, agda, coq, or even haskell
[20:49:12] <Caffeinated> i wonder why, lol
[20:49:17] <user51> cheat it by using an agda program + agda interpreter in one of those langs
[20:51:29] <user51> edgar-rft: we just got another of those problems here ^
[20:53:35] <beaky> to prove it correct i will use induction over a recursive data structure representing the solution space
[20:53:49] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:54:00] <Caffeinated> validation request ^
[20:54:02] <beaky> i need a few more sips of tea 
[20:54:04] <user51> time for some lisp :)
[20:54:10] <beaky> yes if only they offered lisp
[20:54:14] <beaky> they dont even have lisp
[20:54:15] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[20:54:15] <user51> lisp interpreter :P
[20:54:28] <beaky> but at least they have scala a proper functional programming language
[20:54:39] <beaky> therefore i will have to settle for scala
[20:54:40] <user51> do they allow asm?
[20:54:57] <beaky> no no asm allowed but you can probably use asm statements in c or c++ i think
[20:55:26] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 258 seconds)
[20:55:43] <user51> i think you could just put the instructions in a c source file
[20:55:56] <user51> but that's borderline rulebreaking imo
[20:56:48] <beaky> woah i need to sign up for an account to be able to begin to work on the exercise
[20:57:15] <beaky> it is alright i will prove it correct in agda anyway
[20:58:14] <Caffeinated> lol
[20:58:28] <pikapika> We can prove a program in any language
[20:58:41] <pikapika> Or rather we should start with a mathematical argument and then implement it in the language
[20:58:46] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[20:58:48] <beaky> yes exactly
[20:58:52] <pikapika> Remembering to choose a correct mathematical model
[20:59:10] <pikapika> Anything that assumes infinite or even finite anything is a wrong model
[20:59:16] *** Quits: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr) (Ping timeout: 258 seconds)
[20:59:25] <pikapika> The model must have explicit bounds (so and so number of bytes, so and so number of steps etc)
[21:00:07] <beaky> of course the problem space here is bounded by N where N is a number in the interval [1,100000]
[21:00:46] <beaky> this is why i will represent the problem space as a sigma type where the second projection is a function to index the height of the wall by N
[21:00:49] *** Joins: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr)
[21:01:14] <beaky> and the proof will use induction on that N
[21:01:57] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[21:04:40] *** Joins: nanowire (rob@user/nanowire)
[21:08:43] *** Joins: rsx (~dummy@ppp-188-174-147-136.dynamic.mnet-online.de)
[21:09:29] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 248 seconds)
[21:11:59] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[21:12:20] *** Joins: soapsudsxx (~soapsudsx@209.221.40.143)
[21:15:30] *** Joins: chomwitt (~chomwitt@ppp-2-85-147-24.home.otenet.gr)
[21:15:46] *** Quits: usr123 (~usr123@124.253.6.53) (Read error: Connection reset by peer)
[21:15:53] *** Quits: magla (~gelignite@55d43c1b.access.ecotel.net) (Quit: Stay safe!)
[21:16:09] *** Joins: Izem (~Izem@8.21.10.18)
[21:16:09] *** Joins: usr123 (~usr123@124.253.108.34)
[21:17:18] *** Joins: Pickchea (~private@user/pickchea)
[21:18:25] *** Quits: rsx (~dummy@ppp-188-174-147-136.dynamic.mnet-online.de) (Quit: rsx)
[21:19:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[21:19:46] *** Joins: paravida (~myChateau@user/paravida)
[21:19:56] <Izem> what were folks using before xml?
[21:20:07] <Izem> seems like at some point there was an xml explosion
[21:20:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:21:41] <Arahael> there was indeed an xml explosion at some point.
[21:22:06] <Arahael> folks generally tended to use ad hoc formats.
[21:22:12] <GeDaMo> CSV! :P
[21:22:29] <Arahael> Such as CSV, to troll GeDaMo ;)
[21:22:40] <rty> corba
[21:22:43] <Izem> oh wow, I thought CSV was only a spreadsheet thing
[21:22:59] <Arahael> No, CSV is huge.
[21:23:01] <Arahael> Even today
[21:23:18] <InPhase> CSV files are very important in numerical work.
[21:23:20] <GeDaMo> CSV was also used by word processors and databases
[21:23:49] <Arahael> Most databases use them as their preferred format, I think.
[21:23:51] <GeDaMo> I wrote a program which output customer lists to CSV so a word processor could generate personalised letters
[21:23:56] <InPhase> It's the simplest human-readable format for tabular data.
[21:24:07] <Izem> I see
[21:24:11] <GeDaMo> https://en.wikipedia.org/wiki/Mail_merge
[21:24:14] <bayaz> Title: Mail merge - Wikipedia 
[21:24:49] <Arahael> It's so simple developers often write teh implementation themselves... And often badly.
[21:24:55] <rty> https://queue.acm.org/detail.cfm?id=1142044
[21:25:05] <Arahael> Resulting in weird breakages that only occur in european countries, and that sort of thing.
[21:25:29] <InPhase> Arahael: Well Europeans should stop using comma separated floats.  :-P
[21:25:47] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 268 seconds)
[21:25:52] <Arahael> InPhase: And programmers should stop using floats to represent currency. :)
[21:26:24] <GeDaMo> My program had a bug where it was outputting money values but when it went over 1000, it used commas e.g. 1,234.00 :P
[21:26:33] <GeDaMo> Extra comma interpreted as another field
[21:27:00] <Izem> oof
[21:27:09] <Izem> did you catch it early?
[21:27:24] <Izem> that'd be annoying to debug
[21:27:25] <GeDaMo> Nope :/
[21:27:55] <InPhase> In retrospect, semicolon separated values would have been a better format.
[21:28:01] <GeDaMo> The customer said their letters were coming out wrong
[21:28:03] <InPhase> But, we baked in commas.
[21:28:17] <GeDaMo> Solution: quotes! "1,234.00"
[21:28:20] <Izem> InPhase: not to late for a new format :)
[21:28:35] <Izem> yeah that makese sense
[21:28:40] <InPhase> Izem: Microsoft Excel will support it by 2050.
[21:28:57] <user51> InPhase: nvidia gpu?
[21:28:58] <Arahael> Jokes aside, I'm pretty sure Excel supports other delimiters.
[21:29:11] <Arahael> But so much software out there doesn't.
[21:29:16] <GeDaMo> Yeah, there's also Tab Separated Values
[21:29:33] *** Quits: xff0x (~xff0x@2001:1a81:53d2:1c00:f58c:78ee:80de:d293) (Ping timeout: 258 seconds)
[21:29:36] <user51> i wonder if there's any usefulness in the inverse of it
[21:29:37] <Arahael> I was a fan of TSV for the longest time.
[21:29:42] <user51> eg ~(csv)
[21:29:45] <InPhase> GeDaMo: Which was also a bad idea.  Tabs are an invisible differential form of whitespace.
[21:30:00] *** Joins: Quacc (~youbuntoe@user/quacc)
[21:30:11] <InPhase> GeDaMo: Swap out a tab with some spaces and you can't even see what's wrong with the file format.
[21:30:11] <davve_> :set list
[21:30:23] <beaky> pipe separated values
[21:30:26] <beaky> psv
[21:30:33] <user51> fsv? file seperated values?
[21:30:40] <user51> i always wanted a tardb
[21:30:42] <davve_> InPhase: editors should be able to show tabs vs spaces
[21:30:44] *** Joins: Akuli (~Akuli@82-203-165-178.bb.dnainternet.fi)
[21:30:47] <beaky> nobody ever uses the ascii field/record/group separators
[21:30:47] <^-^hi> psv? that is a thing?
[21:30:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[21:30:50] <InPhase> Pipe would be fine for a separator default.
[21:31:19] <InPhase> Pipe has the advantage of essentially never appearing in natural text.
[21:31:25] <GeDaMo> I feel like there is some format which uses pipe
[21:31:33] <Izem> beaky: what are those?
[21:31:36] * Izem checks ascii
[21:31:42] <user51> man 7 ascii
[21:31:55] <user51> http://sprunge.us/dbecsK
[21:31:58] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:32:06] <Arahael> InPhase: Oh, and yeah. I've primarily used editors that show tabs. :)
[21:32:12] <GeDaMo> The separator characters have the same problem as tab, they would normally appear as whitespace
[21:32:31] <Izem> holy moly
[21:32:37] <Izem> these are reall!!
[21:32:38] <Izem> lol
[21:32:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:32:46] <^-^hi> you can't type them easily
[21:33:04] <InPhase> Arahael: I've recently set vim to show me tabs with a color-coded marker, but now I just end up annoyed by how many tabs are mixed between spaces in open source code.
[21:33:08] <^-^hi> but ascii control characters are so cool
[21:33:16] <user51> \0NNN
[21:33:17] <davve_> should you be editing the files though_
[21:33:22] <davve_> its more of an intermediary format imo
[21:33:31] <user51> maybe we could settle for NUL seperated values
[21:33:32] <Arahael> InPhase: Yeah - the other point though, is why are you hand-editing these files? They should be machine-generated, and machine-consumed.
[21:33:35] <davve_> if you have someone editing them manually thats a fail
[21:33:36] <GeDaMo> Ctrl-]
[21:33:36] <^-^hi> i hope there was some way i could use them
[21:33:44] *** Quits: sjmulder (~sjmulder@81-204-179-161.fixed.kpn.net) (Quit: Leaving)
[21:33:52] <InPhase> Arahael: And worse, I find it in some code I wrote, where I used another computer with another text editor and didn't go through and carefully configure it, so it defaulted to tabs.
[21:34:07] <^-^hi> better phrased, some way they were useful
[21:34:25] <Arahael> InPhase: Yeah - simple to fix, though./
[21:34:28] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[21:34:43] <Quacc> ascii has a lot more characters than i thought
[21:35:00] <^-^hi> ascii is essentially a messenger protocol
[21:35:12] <oldlaptop> Python enforces the correct use of tabs, despite apparent hostility to the use of tabs in general. That's a nice thing.
[21:35:14] <^-^hi> for typewriters
[21:35:29] <Arahael> oldlaptop: *today*, yes.  It wasn't always the case.
[21:35:40] <Quacc> i forget can you use two tab spacing in python?
[21:35:50] <Izem> yes
[21:35:57] <Izem> it just has to be consitent 
[21:36:12] <Arahael> Quacc: Yes, and until very recently, it would be exactly identical to 16 spaces in the parser.
[21:36:15] <oldlaptop> Quacc: The rule is that, if tabs are used, they must never occur after any character except \t or \n.
[21:36:31] <oldlaptop> Arahael: For what definition of "very"?
[21:36:34] *** Joins: xff0x (~xff0x@2001:1a81:53d2:1c00:f58c:78ee:80de:d293)
[21:36:55] <Arahael> oldlaptop: They finally fixed this up properly in python 3.x
[21:36:57] <Quacc> 16 spaces?
[21:36:59] <Quacc> jesus
[21:37:21] <oldlaptop> python3.x has been around for donkey's years :|
[21:37:28] <Arahael> oldlaptop: But for most python 2.x code, there was no such protection. A tab is 8 spaces, and that's that. Made for some really nasty bugs at times if a tab got snuck in and you weren't aware.
[21:38:04] <Arahael> oldlaptop: There is still production 2.x code out there, and it was only end-of-life'ed last year if I recall.
[21:38:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[21:38:33] <beaky> everyone uses the horizontal tab to line up things but nobody uses vertical tab they just use multiple newlines 
[21:38:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:38:41] *** Joins: Aerlanger (~vitor@186-194-36-125.entre.net.br)
[21:38:58] <Izem> how does one enter a vertical tab?
[21:38:58] <beaky> which gives me an idea vertical tab separated values
[21:39:25] <oldlaptop> That certainly would solve the problem of people wanting to include \t inside the values.
[21:39:27] <GeDaMo> Izem: Ctrl-K
[21:39:33] <beaky> ctrl k i think
[21:40:01] <Izem> the terminal is still so important :P
[21:40:07] <Aerlanger> hi guys! what are you talking about? are those emacs keybindings?
[21:40:08] <beaky> of course control k deletes the rest of the line in readline
[21:40:18] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[21:40:19] <Izem> Aerlanger: document formats
[21:40:22] <GeDaMo> Aerlanger: no, ASCII control characters
[21:40:38] <Aerlanger> thanks!
[21:40:47] <^-^hi> beaky: wouldn't be easy to look up something in such a format
[21:40:56] <^-^hi> you would need to scroll forever
[21:40:57] *** Quits: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr) (Ping timeout: 248 seconds)
[21:41:00] <beaky> lol
[21:41:04] <GeDaMo> On terminals, you can use Ctrl-S and Ctrl-Q for XOFF/XON flow control
[21:41:54] <^-^hi> also rows and columns won't be distinguishable
[21:42:30] <^-^hi> its go 3 lines down vs go 1 line down
[21:42:36] <CuriousErnestBro> I just created 4 create table statements
[21:42:42] <CuriousErnestBro> did I just create a "schema"
[21:42:47] <oldlaptop> Yes.
[21:42:51] <CuriousErnestBro> I have a bunch of on delete cascade 
[21:42:56] <CuriousErnestBro> :D
[21:43:05] <CuriousErnestBro> nice ^-^
[21:43:17] <^-^hi> ^-^
[21:43:57] <^-^hi> pipe separated values are visually cool, and practically better than csv
[21:44:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[21:44:15] <beaky> how do you escape the pipe character
[21:44:18] <^-^hi> so bad nothing supports it
[21:44:26] <^-^hi> beaky: \| perhaps
[21:44:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:45:08] <CuriousErnestBro> alright, now it's time to diligently enter the commands in the psql thing
[21:45:16] <CuriousErnestBro> one mistake and I need to start over
[21:45:22] <Aerlanger> good luck!
[21:45:27] *** Joins: ghost64 (~ghost64@user/ghost64)
[21:45:40] <Izem> db's can read files/scripts?
[21:45:47] <Izem> I remember that much
[21:45:59] <beaky> just use transactions bro postgresql has transactional ddl
[21:46:05] <CuriousErnestBro> what's a ddl?
[21:46:13] <^-^hi> CuriousErnestBro, dll?
[21:46:15] <vdamewood> dada description language
[21:46:20] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[21:46:30] <vdamewood> A language for describing utter nonsense art
[21:46:41] <Arahael> Not to be confused with tada description languages.
[21:46:42] *** Joins: wovixo (~wovixo@128.104.205.49)
[21:46:45] <vdamewood> Oh, wait no. Data description language.
[21:46:45] <beaky> ddl is the sql data definition language it is what lets you define schemas in your sql database
[21:47:09] <vdamewood> Wait... definition?
[21:47:09] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Read error: Connection reset by peer)
[21:47:21] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[21:47:30] <vdamewood> Oh, apparently both are correct.
[21:47:34] *** Joins: Engineer (~Izem@2a09:bac0:14::815:a12)
[21:47:38] <CuriousErnestBro> how do I \c into a database and execute some file with psql?
[21:47:52] <CuriousErnestBro> ddl.sql or something
[21:47:55] *** Joins: rtypo (~alex@user/rtypo)
[21:48:04] <CuriousErnestBro> or definition.sql 
[21:48:11] <vdamewood> If you want to describe an Icelandic Pop artist, That'a Da√∞i Description Language.
[21:49:00] <beaky> yes put all your sql commands in a file, wrap them in begin and commit and then you can use psql -f <file>
[21:49:50] <CuriousErnestBro> beaky just begin at the top and commit at the bottom?
[21:50:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[21:50:48] <oldlaptop> You might want to look up what transactions are at this point. (They're quite important.)
[21:50:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:51:05] *** Quits: Izem (~Izem@8.21.10.18) (Ping timeout: 248 seconds)
[21:51:12] *** Engineer is now known as Izem
[21:51:53] <oldlaptop> for example, https://www.postgresql.org/docs/13/tutorial-transactions.html
[21:51:56] <bayaz> Title: 3.4.¬†Transactions 
[21:52:14] <beaky> yes that way all your ddl statements will run in a transaction and if there's an error anywhere thoe whole thing will be rollbacked it will not have failed partway through 
[21:52:50] *** Quits: Cyp_ (~cyp@192038129116.mbb.telenor.dk) (Remote host closed the connection)
[21:53:35] <beaky> so you wont have a database where only half of the tables exist and where you have to manually figure out what things are already defined and stuff
[21:54:21] *** Joins: paravida (~myChateau@71.215.86.34)
[21:54:23] <oldlaptop> (postgres transactions are more complicated than that, but the complications aren't pertinent right now - they start to get important when you're doing something that actually needs a client/server database's concurrency features)
[21:55:26] *** Joins: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[21:55:28] *** Quits: xff0x (~xff0x@2001:1a81:53d2:1c00:f58c:78ee:80de:d293) (Ping timeout: 272 seconds)
[21:55:30] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) (Ping timeout: 240 seconds)
[21:55:46] *** Joins: xff0x (~xff0x@2001:1a81:53d2:1c00:df20:e0ed:5860:3ed0)
[21:56:00] <vdamewood> begin insert into cash $200; delete from debt $200; commit
[21:56:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[21:56:26] <oldlaptop> quite
[21:56:43] *** Joins: gaurav_ (~usr123@124.253.0.31)
[21:56:55] *** Joins: Cyp_ (~cyp@192038129116.mbb.telenor.dk)
[21:57:03] <CuriousErnestBro> is this good? https://paste.ubuntu.com/p/XbCfY48vJJ/
[21:57:04] <bayaz> Title: Ubuntu Pastebin 
[21:57:05] * Arahael prefers instead to do begin insert into cash $200.0000001; delete from debt $200.000001; commit
[21:57:11] <Izem> suprised windows did not make a database
[21:57:12] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 245 seconds)
[21:57:17] <pulse> insert into cash NULL
[21:57:24] <Arahael> Izem: Windows does have several databases.
[21:57:31] * vdamewood rounds Arahael's transaction to the nearest 5 cents.
[21:57:54] *** Joins: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr)
[21:57:56] <Izem> what's the first one that comes to mind?
[21:58:01] <Arahael> Izem: NTFS.
[21:58:03] <beaky> the windows registry
[21:58:15] <GeDaMo> .ini files :P
[21:58:25] <oldlaptop> update accounts set cash = cash - 1./3 where holder = 'Arahael';
[21:58:28] <Izem> I mean one of those sql databases like maria or postgres
[21:58:32] *** Joins: morgabra (sid500580@user/morgabra)
[21:58:34] <Izem> ntfs is a database?
[21:58:37] <quippy> I remember when I spent my youth randomly changing shit in the Windows registry
[21:58:49] <oldlaptop> Izem: Yes. Microsoft has multiple relational database products
[21:58:50] <quippy> sure, my install didn't boot about a third of the time, but my start button said "Suck"
[21:58:50] <Batzy> you did that randomly?
[21:59:02] <quippy> I mean.. /basically/ randomly
[21:59:03] <oldlaptop> (all of which are evil) </flame>
[21:59:12] <CuriousErnestBro> is my file good? if a user gets deleted all the corresponding rows get deleted right?
[21:59:18] <oldlaptop> windows apparently comes with sqlite now, though, so that's nice
[21:59:19] <CuriousErnestBro> their token also gets revoked
[21:59:19] <GeDaMo> https://en.wikipedia.org/wiki/WinFS "(short for Windows Future Storage)[1] was the code name for a canceled[2] data storage and management system project based on relational databases"
[21:59:20] <bayaz> Title: WinFS - Wikipedia 
[21:59:45] <Arahael> oldlaptop: I'd point out that sql server *apparently* works on linux these days, but then I remember I'm not talking to you because you've mis-handled my financial transaction. ;)
[22:00:09] *** Quits: usr123 (~usr123@124.253.108.34) (Ping timeout: 248 seconds)
[22:00:31] *** Quits: morgabra (sid500580@user/morgabra) (Max SendQ exceeded)
[22:00:32] <Izem> ok I think I figured it out, the next killer app with be a database for Linux
[22:00:45] <GeDaMo> https://en.wikipedia.org/wiki/Pick_operating_system
[22:00:46] <bayaz> Title: Pick operating system - Wikipedia 
[22:00:49] <quippy> did I wake up in the 1990s
[22:01:22] <Izem> great, I seem to have quite a few ideas today
[22:01:54] <vdamewood> quippy: Let's party like it's 1999.
[22:02:02] *** Joins: morgabra (sid500580@user/morgabra)
[22:02:09] <pulse> i'll get the lawn chairs
[22:02:23] <Arahael> quippy: Don't forget: The world ends as the clock ticks 2000.
[22:02:24] *** Joins: gamara (~gamara@66-203-186-167.ded.execulink.com)
[22:02:31] *** Quits: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr) (Ping timeout: 258 seconds)
[22:02:33] <Izem> I'm also thinking of adding weather data to home heating and cooling (iot) so the temperature can be set automatically
[22:02:39] <quippy> for me partying like it's 1999 means breaking out some Weird Al cassette tapes and Super Soakers
[22:03:14] <vdamewood> Cassettes? Pfft, even I had CDs by then.
[22:03:31] <quippy> CDs cost too much at that time for someone my age to be trusted with them XD
[22:03:33] <vdamewood> Mix tapes were still a thingk, though.
[22:03:47] <quippy> my older sibling had CDs, but I still had tapes
[22:04:31] <oldlaptop> quippy: What's your horoscope for today?
[22:04:44] <quippy> are you trying to figure out my birthday
[22:04:49] <quippy> are you going to steal my identity
[22:05:09] <vdamewood> Izem: I wish my home had heating and cooling.
[22:05:29] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[22:05:33] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[22:05:37] <Arahael> I have 4 heaters running at full blast during the day here.
[22:05:38] <oldlaptop> (https://en.wikipedia.org/wiki/Running_with_Scissors_(%22Weird_Al%22_Yankovic_album)#Track_listing)
[22:05:38] <Izem> GeDaMo: yes this would be a really good idea today with cloud computing being popular
[22:05:53] <CuriousErnestBro> thank you beaky the command worked wonderfully, I messed up and it said error rolling back
[22:05:58] <CuriousErnestBro> then I fixed it and ran it again
[22:06:03] <CuriousErnestBro> so that's a transaction
[22:06:12] <gamara> hey so I am trying to sink a client (written in python) and a simulation written in C++ for a reinforcement learning algorithm, basically the client will receive data from the simulation, then send data to the simulation then the simulation returns data to the client in a synchronous fashion.
[22:06:23] <quippy> wow oldlaptop that's a deep cut, I didn't remember that track. I did at one point know all the words to Albuquerque though
[22:06:30] *** Joins: gitgoood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[22:06:51] <gamara> could I use something like flask and redis to be an intermediary or should I use websockets
[22:07:07] *** Quits: Camilo (~hugh@host-92-20-143-244.as13285.net) (Ping timeout: 268 seconds)
[22:07:09] <gamara> anyone know how openAI syncs their atari games?
[22:07:50] *** Joins: jakesyl (sid56879@stonehaven.irccloud.com)
[22:08:46] *** Joins: Camilo (~hugh@37.120.133.74)
[22:09:41] *** Joins: Duckle (~Duckle@user/duckle)
[22:10:49] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 248 seconds)
[22:11:54] *** Quits: paravida (~myChateau@71.215.86.34) (Changing host)
[22:11:54] *** Joins: paravida (~myChateau@user/paravida)
[22:12:40] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 268 seconds)
[22:14:16] <Izem> how do ai's "play" games? it's one thing if you made the game, but what about those that play other games
[22:16:40] <bjs> Izem: well, the same way humans do.  They move the mouse and click things and press buttons (just with software).
[22:16:56] <bjs> some games might have a system to let you interact with it more directly, of course.
[22:17:05] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[22:19:54] <gamara> I am just having a hard time synchronizing api calls
[22:20:27] <gamara> because the client and the simulation need to work in tandem 
[22:20:53] *** Joins: magla (~gelignite@55d43c1b.access.ecotel.net)
[22:21:52] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[22:21:58] <gamara> so simulation sends initial state and waits for action (only happens once) -> client receives state, client sends action -> simulation receives action, and sends newest state -> repeat...
[22:23:37] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 248 seconds)
[22:25:36] <rty> gamara: use grpc?
[22:26:17] <gamara> thanks I will look into it
[22:26:43] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[22:26:54] <paulo> https://www.linkedin.com/jobs/view/2665656443/
[22:27:05] <paulo> Benefits: Funny Designer & Developer to work with
[22:27:10] <paulo> wow, I'm convinced
[22:29:36] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[22:30:59] *** Quits: sklv1 (~sklv@gateway/tor-sasl/sklv) (Remote host closed the connection)
[22:31:17] <GeDaMo> Funny ha ha or funny peculiar? :|
[22:31:37] *** Joins: sklv1 (~sklv@gateway/tor-sasl/sklv)
[22:32:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:32:23] <CuriousErnestBro> beaky am I hireable you think? 
[22:33:10] <paulo> also, what an odd interview process
[22:33:15] <paulo> there's no tech interview
[22:33:23] *** Joins: byte (~bytecrawl@gateway/tor-sasl/bytecrawler)
[22:36:15] *** Quits: inky (~inky@5.77.151.77) (Ping timeout: 258 seconds)
[22:36:51] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[22:37:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[22:37:32] <CuriousErnestBro> ok a security question
[22:37:47] *** Joins: DushyantBaweja_c (uid510682@id-510682.charlton.irccloud.com)
[22:38:05] <CuriousErnestBro> if there's both a /login and /signup route, one can still figure out if a username is being used
[22:38:06] <CuriousErnestBro> right?
[22:38:11] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[22:40:20] *** Joins: thaw (~thaw@static-47-207-6-117.tamp.fl.frontiernet.net)
[22:40:41] *** Quits: Camilo (~hugh@37.120.133.74) (Ping timeout: 248 seconds)
[22:41:34] *** Joins: Camilo (~hugh@37.120.133.74)
[22:44:00] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[22:46:15] *** Quits: gamara (~gamara@66-203-186-167.ded.execulink.com) (Quit: Client closed)
[22:47:31] *** Quits: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Quit: Leaving)
[22:48:04] *** Joins: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr)
[22:48:06] *** Quits: byte (~bytecrawl@gateway/tor-sasl/bytecrawler) (Quit: Leaving)
[22:48:38] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[22:49:30] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[22:49:46] <user51> wow. didnt realize i got out of tutorial hell..
[22:50:32] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[22:50:36] <CuriousErnestBro> sup user51 
[22:50:46] <CuriousErnestBro> did you finally get out of tutorial hell?
[22:51:09] <user51> depends on what tutorial hell means to you
[22:51:34] <CuriousErnestBro> you learn much more if you power through the uncomfortableness of uncertainty
[22:51:40] <CuriousErnestBro> tutorials are nice and cozy 
[22:51:41] <user51> e.g initially i had lots of trouble just figuring how things work. but i think it's mostly inexperience that doesn't let you see the bigger picture.
[22:51:52] <CuriousErnestBro> but you don't learn much from following a guided path
[22:54:24] <CuriousErnestBro> user51 what are you working on now that you got out of tutorial hell?
[22:54:33] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 248 seconds)
[22:55:24] <pyzozord> user51: what's tutorial hell?
[22:56:16] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[22:56:19] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[22:56:38] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Client Quit)
[22:56:48] <edgar-rft> satan's version of tutorial heaven
[22:58:26] <edgar-rft> in tutorial hell you learn all the evil things :-)
[22:58:39] <pulse> tutorials are good as long as they're not youtube tutorials
[22:58:54] *** Quits: snake (~snake@user/snake) (Ping timeout: 268 seconds)
[22:59:13] *** Quits: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr) (Quit: WeeChat 3.2)
[22:59:24] <edgar-rft> let's write a tutorial howto watch youtube videos
[23:00:22] <CuriousErnestBro> edgar-rft not gonna work
[23:00:23] <CuriousErnestBro> you need to create a youtube video 
[23:00:39] *** Quits: Izem (~Izem@2a09:bac0:14::815:a12) (Quit: Going offline, see ya! (www.adiirc.com))
[23:00:47] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 258 seconds)
[23:01:38] <edgar-rft> that's true, in 2021 nobody can read anymore
[23:01:40] <pulse> there's at least 100 videos on youtube about how to stop watching youtube
[23:01:48] <pulse> think about that
[23:02:12] <edgar-rft> do they have Google ads attached? :-)
[23:02:54] <pulse> idk, i've been blocking ads since the first time browsers supported it :p
[23:02:59] <pulse> i can't stand ads
[23:03:51] <edgar-rft> I meant if I were Google I would produce tons of "howto get rid of youtube" videos only to attach even more ads to them.
[23:05:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:07:08] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[23:07:54] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 240 seconds)
[23:08:47] *** Joins: Thedarkb (~Thedarkb@85.255.236.109)
[23:10:58] <CuriousErnestBro> beaky I love rust: http://0x0.st/-k.txt
[23:10:59] <bayaz> Type: text/plain 
[23:11:05] *** Quits: Thedarkb2 (~Thedarkb@85.255.234.237) (Ping timeout: 248 seconds)
[23:11:19] <CuriousErnestBro> http://0x0.st/-JuX.png
[23:11:19] <bayaz> Type: image/png Size: 120.3 kB 
[23:11:28] <user51> .ud tutorial hell
[23:11:49] <user51> https://www.urbandictionary.com/define.php?term=Tutorial%20Hell
[23:11:50] <bayaz> Title: Urban Dictionary: Tutorial Hell 
[23:11:52] <user51> pyzozord: ^
[23:14:50] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:15:11] *** Joins: mickey8 (~user@user/mickey)
[23:15:33] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[23:17:26] <pyzozord> user51: that just sounds like normal part of learning, at least for me
[23:18:29] <user51> oh yeah, i'm reading Structured Computer Organization by tanenbaum
[23:18:36] <user51> really nice. at chapter 2 currently.
[23:19:15] *** Quits: qbt (~edun@user/edun) (Quit: Leaving)
[23:19:34] *** Quits: c705 (c705@alpine/contributor/c705) (Ping timeout: 258 seconds)
[23:19:37] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[23:20:03] <user51> pyzozord: probably.. learning was weird.
[23:20:15] <user51> i've found lots of stuff just didn't really work well for me, even if it was highly recommended.
[23:20:16] *** Joins: webnet4 (~0x100@32.211.211.39)
[23:20:24] <CuriousErnestBro> like what
[23:20:31] <user51> one of the worst was doing turtle graphics in python
[23:20:44] <user51> not really impossible, just extremely awkward
[23:21:11] <CuriousErnestBro> understandable 
[23:22:04] *** Joins: Quacc (~youbuntoe@user/quacc)
[23:22:45] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[23:22:53] *** Joins: gamara (~gamara@66-203-186-167.ded.execulink.com)
[23:23:05] *** Quits: rty (~rty@212.102.39.157) (Quit: rty)
[23:23:21] *** Quits: webnet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:23:32] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[23:23:34] *** Joins: webnet4 (~0x100@32.211.211.39)
[23:25:21] *** Joins: c705 (c705@alpine/contributor/c705)
[23:26:02] *** Quits: mci64 (~mci64@185.242.190.95) (Quit: Connection closed)
[23:26:18] *** Joins: mci64 (~mci64@185.242.190.95)
[23:27:56] *** Quits: jakesyl (sid56879@stonehaven.irccloud.com) (Ping timeout: 272 seconds)
[23:28:02] *** Joins: morgabra_ (sid500580@user/morgabra)
[23:28:30] *** Joins: jakesyl (sid56879@id-56879.stonehaven.irccloud.com)
[23:29:08] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 268 seconds)
[23:29:08] *** morgabra_ is now known as morgabra
[23:31:58] *** Quits: tolot (~tolot@dynamic-093-132-139-129.93.132.pool.telefonica.de) (Quit: Leaving)
[23:36:16] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[23:36:28] *** Quits: gaurav_ (~usr123@124.253.0.31) (Read error: Connection reset by peer)
[23:36:52] *** Joins: gaurav_ (~usr123@124.253.244.157)
[23:40:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[23:40:55] *** Joins: lunarkitty (uid501895@user/pyra)
[23:42:14] *** Joins: nvmd (~nvmd@user/nvmd)
[23:42:33] *** Joins: Izem (~Izem@8.21.10.18)
[23:44:24] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[23:45:44] *** Joins: mickey86 (~user@user/mickey)
[23:47:38] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 244 seconds)
[23:47:38] *** mickey86 is now known as mickey8
[23:49:27] *** Joins: pavonia (~user@user/siracusa)
[23:50:33] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 248 seconds)
[23:51:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:51:27] *** Quits: Izem (~Izem@8.21.10.18) (Ping timeout: 276 seconds)
[23:51:54] *** Joins: jamea (~jamea@177.239.85.103)
[23:52:24] *** Joins: Hercules (~Hercules@user/hercules)
[23:55:24] *** Joins: Izem (~Izem@8.21.10.18)
[23:56:18] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Remote host closed the connection)
[23:56:36] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[23:59:41] *** Quits: Aerlanger (~vitor@186-194-36-125.entre.net.br) (Quit: zzz)
