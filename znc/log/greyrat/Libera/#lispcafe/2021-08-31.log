[00:03:41] *** Quits: random-nick (~random-ni@87.116.165.220) (Quit: quit)
[00:15:24] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[00:16:10] *** Quits: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798) (Ping timeout: 252 seconds)
[00:24:13] *** Joins: random-nick (~random-ni@87.116.183.125)
[00:25:53] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[00:36:33] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 244 seconds)
[00:51:55] *** Joins: ixelp (~ixelp@p5492debc.dip0.t-ipconnect.de)
[00:51:55] *** ChanServ sets mode: +o ixelp
[00:52:25] <gilberth> Good morning #lispcafe!
[00:52:36] <Alfr> Hello gilberth.
[01:00:54] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:02:06] <amirouche> hellllooo!
[01:10:59] <gilberth> Ok. When MathJAX runs TeX in your browser, could we do the same off-line? A pity that we can't rely on MathML.
[01:11:20] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[01:13:29] <gilberth> The only challange, I see is fonts and in particular its metrics. But the default serif, sans-serif, and monospace fonts match the well-known PostScripts metrics pretty well.
[01:15:23] <gilberth> Problematic then are all the glyphs that are not in the Adobe fonts. Like those which are used to construct large parens like for matrixes.
[01:46:24] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:56:58] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[02:22:43] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[02:30:41] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[02:31:15] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[02:31:57] *** Joins: Achylles (~Achylles_@2804:431:d725:af0f:65ee:a58:ea07:2607)
[02:41:31] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[02:44:13] *** Joins: lisp123 (~lisp123@5.30.23.247)
[02:49:37] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[02:59:29] <hayley> https://www.youtube.com/watch?v=9tmXH-sxpaQ
[02:59:29] -ixelp- Gary Numan - Bombers (Live at The Forum, 1 June 2012) - YouTube
[03:14:09] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:19:41] *** Joins: lisp123 (~lisp123@5.30.23.247)
[03:24:22] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[03:29:00] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[03:46:39] *** Quits: minion (~minion@common-lisp.net) (Read error: Connection reset by peer)
[03:47:28] *** Joins: minion (~minion@common-lisp.net)
[03:51:17] <hayley> "when I have more than one mutex the answer is usually deadlock."
[03:51:28] <hayley> Q: "What is the plural of mutex?"
[03:56:34] *** Joins: sm2n_ (~sm2n@user/sm2n)
[03:58:21] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:58:34] *** Quits: sm2n (~sm2n@user/sm2n) (Ping timeout: 244 seconds)
[03:59:26] <moon-child> no idea.  But the plural of regex is regicide
[04:06:52] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[04:09:07] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[04:16:34] <hayley> <heisig> Hello beach. Has your account been hijacked? You just posted a sentence of the form "I need to come up with a quick and dirty solution for X".
[04:43:58] *** Quits: random-nick (~random-ni@87.116.183.125) (Ping timeout: 250 seconds)
[04:45:09] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[04:50:29] <hayley> https://www.youtube.com/watch?v=Ji7Hf-91dzk
[04:50:29] -ixelp- We Take Mystery (To Bed) (Live) - YouTube
[04:55:43] * gilberth offers "mutexen".
[04:55:54] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[04:59:07] <moon-child> should be mutices for proper latinocity
[05:01:33] <gilberth> I often feel tempted to use -en as a plural suffix for words ending on [aeuio]x like "ox", which has the plural "oxen".
[05:02:07] <copec> "boxen" as the pural for multiple computer boxes has been common for a long time
[05:02:50] <gilberth> Must be the germanic roots of English.
[05:03:38] <copec> oxen in the West are our classic beast of burden, so it was natural for someone to call their working servers boxen I think
[05:04:41] <hayley> "If you're doing file IO, I don't think you'll see any noticeable gain from lock-free maps though... heck, you'll probably be fine putting a non-concurrent map behind a mutex" bro wtf you posted linearization you are going to lose subscriber
[05:05:39] <hayley> Reminds me, I am contemplating giving my dad's machine a NVMe drive with a NVMe-PCIe x1 adapter, as there is only a spare x1 connector on this stupid motherboard I bought 4 years ago.
[05:05:40] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[05:05:59] <hayley> But it can't be used as a boot drive and it'll be bottlenecked by the x1 link, right?
[05:06:41] <gilberth> Why can't it be used as a boot disk?
[05:06:54] <copec> That is a limitation of a lot of hardware
[05:07:39] <White_Flame> what pci gen is it?
[05:07:55] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[05:07:55] <gilberth> Hardware? You perhaps mean software. And isn't it a PCI device? Doesn't it come with a BIOS?
[05:07:57] <White_Flame> gen 3 x1 is almost 1gigabyte/sec
[05:08:10] <copec> probably gen 4, but even if gen 3 it is faster than 6 gig sata
[05:08:10] <hayley> 3 IIRC.
[05:08:24] <White_Flame> yeah, gen4 is 2GB/sec
[05:08:44] <White_Flame> but yeah, lack of boot is annoying
[05:08:58] <hayley> Apparently the damn cache gets it up to 3.2GB/s, but when the cache fails it's only 900MB/s. Kinda shitty that the marketing gives you performance numbers for when you hit cache.
[05:09:30] <copec> gilberth I would say hardware limitation unless you want you make a new BIOS yourself
[05:10:00] <hayley> Otherwise, neat that you can get 500GB of that for AU$100 these days. But I can't just swap the boot drive apparently.
[05:10:02] <copec> but I'm making an assumption it doesn't have a bios update or you can chain boot to the drive
[05:10:19] <copec> *can't
[05:11:02] <hayley> Chain booting would be an interesting idea. Suppose GRUB knows how to do that, and I could remove the boot menu?
[05:11:21] <copec> yeah
[05:11:31] <hayley> I forgot the motherboard model, and idk how you check that from software.
[05:11:43] <copec> smbios
[05:11:52] <gilberth> copec: In the good old days a device would bring its own BIOS routines for in this case INT 13h, which is disk access.
[05:11:55] <hayley> Fair enough.
[05:12:12] <hayley> "Special Feature: GC (Garbage Collection)Auto Garbage Collection Algorithm"
[05:12:25] <hayley> gilberth: Hey, the SSD has its own collector.
[05:12:29] <copec> https://linux.die.net/man/8/dmidecode
[05:12:30] -ixelp- dmidecode(8): DMI table decoder - Linux man page
[05:13:17] <gilberth> hayley: Cool. Just run CLOSOS on it and you're set.
[05:13:29] <hayley> But chain booting makes running a test to see if a better boot drive would speed things up cheaper. Thanks!
[05:14:33] <copec> When shingle drives and ssd give direct management it should map to cow filesystems nice
[05:15:33] <hayley> Though I have to find a damn PCIe x1 adapter, which no one with a brick-and-mortar store nearby sells. Probably for the better.
[05:15:42] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[05:16:48] <gilberth> copec: I once use a special ROM on network adapters to cling into INT 13h to make any machine boot from the network. And the C: drive for DOS would then also be over the network without DOS knowing.
[05:18:22] <gilberth> copec: Used it for a couple of legacy DOS/WIN 3.11 and Windows 95 boxen (sic!) to work disk less.
[05:19:18] <hayley> Someone is selling one they never used, which is probably going to take less time to deliver, given that it's apparently 20km away.
[05:19:46] <hayley> And, well, the less time I can only hear shouting, the better.
[05:20:54] <gilberth> hayley: Is the shouting because the current machine being tight and slow?
[05:20:56] <copec> gilberth I've done all sorts of network booting too
[05:21:05] <hayley> gilberth: Yes.
[05:22:06] *** Quits: Achylles (~Achylles_@2804:431:d725:af0f:65ee:a58:ea07:2607) (Remote host closed the connection)
[05:23:27] <gilberth> copec: It's nice. I did that because of backup. We had a couple of those legacy machines with pretty special setup for all sorts of external measurement/testing HW. Nobody would bother to make a proper backup of the disks in them. So I ripped the disks out and kept the data on the file server which would have its routine and automated backup.
[05:25:37] <gilberth> hayley: So you have hope that shouting would end with a half-decent machine? I fear next night it will be the forgotten discount code for "Libera Gold Ultra", again.
[05:25:53] <hayley> Yes, sadly.
[05:26:18] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[05:26:30] <gilberth> As if shouting would change anything. *shrug*
[05:26:37] <hayley> But what I can get for the rest of a machine (which would be better than mine, short of GPUs for which the market is FUBAR) is another AU$600 which no one wants to spend. 
[05:26:56] *** Joins: lisp123 (~lisp123@5.30.23.247)
[05:27:05] <hayley> .oO( If I let him "loan" the AU$600 I wonder if he'd shut up about myself paying rent or not. Hm. )
[05:27:53] <gilberth> .oO(Hayley is young and na√Æve, she'll grow up.)
[05:29:00] <hayley> https://www.youtube.com/watch?v=VTbdB4B82uA
[05:29:00] -ixelp- Tubeway Army - Every Day I Die - YouTube
[05:29:08] <copec> I think hayley is autistic and sincere 
[05:29:31] <copec> At least from my conversations in here :-p
[05:29:38] <hayley> Yes and not usually.
[05:30:51] <gilberth> copec: Perhaps too sincere for the world outside.
[05:33:03] <gilberth> hayley: Anyhow, you say GPUs are still scarce?
[05:34:21] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[05:34:44] <copec> They are here too
[05:38:56] <gilberth> Hmm, bad. I was about to ask my wife to buy me a decent gaming PC.
[05:39:17] <gilberth> No clue, what GPU I should get though.
[05:40:04] <copec> Packaged PC's from large manufacturers seem to be the only place you can pay MSRP
[05:41:03] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[05:43:35] <gilberth> copec: I was about to get a ready-made machine. It would be just for gaming, so I could do without ECC-RAM e.g.
[06:11:50] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:19:34] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[06:25:03] <kakuhen> hey liberals, if there is a GPU shortage, why can I buy one? checkmate. /s
[06:26:12] <dave0> maw
[06:29:07] <hayley> gilberth: Yes.
[06:30:11] <hayley> It seems my RX 580 hasn't devalued at all - used sales are about the same, new cards doubled in price or more.
[06:32:40] <hayley> Seriously, I remember a GT 710 being like AU$30, now it's $70 or so? I think CPU prices went up a bit, but not that bad.
[06:37:06] <gilberth> My preferred dealer has no RX 580 to buy. Hmm. Would that be a decent one?
[06:38:57] <hayley> I use it, it's quite good IMO. I can't really imagine paying for a better card, as it handles all the games and programs I have well.
[06:40:03] <hayley> .oO( They don't spend $1000 on a CPU, but they would on a GPU. Granted there's more transistors in the latter, but I don't load the latter enough to pay more. )
[06:40:40] <gilberth> You suggest getting an AMD GPU? I used to have NVIDIA boards, but that is long long ago.
[06:41:11] <hayley> idk, the AMD drivers are better on Linux at least, and at the time they had more options for low-mid range parts.
[06:43:42] <gilberth> I won't run Linux on that gaming PC. And long, long ago NVIDIA drivers used to be way better. No idea really, if they still are.
[06:44:05] <gilberth> Heh, NVIDIA once send me a Quadro for free ;)
[06:45:04] <aeth> This was probably posted here yesterday because this is a miniature RISC V fanclub but https://news.ycombinator.com/item?id=28349068
[06:45:05] -ixelp- Esperanto Champions the Efficiency of Its 1,092-Core RISC-V Chip | Hacker News
[06:45:07] <aeth> https://www.hpcwire.com/2021/08/27/esperanto-silicon-in-hand-champions-the-efficiency-of-its-1092-core-risc-v-chip/
[06:45:07] -ixelp- Esperanto, Silicon in Hand, Champions the Efficiency of Its 1,092-Core RISC-V Chip
[06:45:50] <aeth> And unrelated, but another interesting HN hardware article/discussion from yesterday. https://news.ycombinator.com/item?id=28330031
[06:45:52] -ixelp- Computers should expose their internal workings as a 6th sense | Hacker News
[06:45:53] <aeth> https://interconnected.org/home/2021/08/27/data_sense
[06:45:54] -ixelp- Computers should expose their internal workings as a 6th sense (Interconnected)
[06:46:24] <hayley> Finally, a good core count, but why test it on neural networks dammit?
[06:46:46] <aeth> because NNs benefit from it
[06:47:45] <aeth> these sorts of processors struggle to find the middle ground between CPUs and GPUs
[06:48:04] <hayley> If I have one of those machines, I will port SICL to RISC-V and dedicate the rest of my life to making thread local heaps work.
[06:48:16] <aeth> well
[06:48:54] <hayley> Okay, I'll probably give the last bit like 5 years tops.
[06:48:55] <aeth> other than budget (and architecture, I guess), you'd probably be better served with a 2 CPU AMD EPYC-whatever motherboard... maybe more if they make more, but they probably don't outside of supercomputers
[06:49:10] <aeth> you know, a mere 256 core machine eventually
[06:49:17] <hayley> Pfft.
[06:49:19] <aeth> but much faster individual cores
[06:49:20] <gilberth> hayley: You don't want to get old?
[06:49:35] <hayley> I want to present "CL on 1000 cores" one day.
[06:49:44] <White_Flame> groups of 32 share a data cache?  what's the point of that?
[06:50:06] <White_Flame> *32 cores
[06:52:49] <aeth> Zen 4 EPYC is going to be either 96 or 128 cores, i.e. 192 or 256 cores (384 or 512 threads) in 2-CPU form.
[06:52:49] <aeth> at the very least, it would be fun to use htop to see 512 hardware threads
[06:52:49] <White_Flame> yeah, and has enough memory channels to have a hope of keeping those filled
[06:52:49] <hayley> My old r/ayymd flair remains on point: "when can I get a CPU that can run one erlang process per core"
[06:52:49] <aeth> the endgame ofc is 1024c4096t
[06:52:49] <aeth> so 1092c is a bit excessive
[06:52:49] <White_Flame> all these other little many-core chips seem to want to operate on a fixed-function pipeline between cores or something; there's simply not the parallel bandwidth for anything else
[06:52:49] <dave0> time for a walk bbl
[06:52:49] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[06:54:15] <gilberth> Esperanto Technologies' web site doesn't run on one of their chips? If I it does, I don't want one. And it's an ".ai" domain. Hmm.
[06:54:16] <aeth> White_Flame: well... manycores just want to shove as many cores as possible in
[06:54:34] <aeth> White_Flame: AMD wants to scale up its chiplet architecture
[06:54:37] <White_Flame> yep, and they never seem to go anywhere in the market
[06:54:46] <White_Flame> (manycores that is)
[06:54:47] <aeth> gilberth: iirc, coprocessor, like a GPU
[06:54:56] <aeth> easier to get in the data center that way
[06:55:07] <White_Flame> I want/need lots of cores all working independently on tons of RAM
[06:55:31] <aeth> and then there's this... https://news.ycombinator.com/item?id=28299204
[06:55:32] -ixelp- Turing Pi V2 is here | Hacker News
[06:55:38] <aeth> https://turingpi.com/turing-pi-v2-is-here/
[06:55:39] -ixelp- Turing Pi V2 is here - Turing Pi
[06:55:55] <gilberth> aeth: Still, their web site very slow and misses to deliver half the content. Slashdotted?
[06:56:10] <aeth> gilberth: perhaps... it was on HN yesterday, but other sites tend to be out of sync
[06:56:15] <aeth> e.g. reddit tends to have HN one day later
[06:57:10] <aeth> White_Flame: unfortunately for me, 12 cores seems like enough for me
[06:57:46] <gilberth> aeth: And it doesn't seem you could buy their product. I wanted to see a quote, to see how expensive it would be to make Hayley think about GC for the rest of her life.
[06:57:59] <aeth> gilberth: if it's really expensive, the price is always "contact us"
[06:58:26] <aeth> probably best to settle for the 96*2 or 128*2 of the next gen of AMD if you need the cores...
[06:58:54] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3675)
[06:59:22] *** Joins: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net)
[07:00:57] <gilberth> aeth: Price is more often than not "contact us". They want you to mail them for an early access program. And I am not sure they even would sell boards. Perhaps hayley could get an evaluation board of sorts.
[07:01:25] <hayley> "Can I have this CPU but with a read barrier in hardware please"
[07:01:33] <aeth> gilberth: well, they're not going to get anywhere without software ported to it
[07:01:45] <aeth> so there might be a way
[07:01:59] <hayley> "It's for....AI, yes."
[07:02:02] <gilberth> hayley: "Sure, what would your estimated annual sales?"
[07:02:24] <hayley> $5/year based on my short-lived career selling music?
[07:03:08] <White_Flame> I wonder if we'll see the first chips with 1GB of cache soon
[07:03:31] <gilberth> aeth: Definitely. You just would have to sell them new markets for your software ported, and chances are you get an eval board for free.
[07:06:03] * hayley reads a REAME
[07:06:03] <hayley> *README
[07:06:26] <hayley> "Static Python plus Cinder JIT achieves 7x the performance of stock CPython on a typed version of the Richards benchmark." Still haven't read Chamber's thesis?
[07:06:29] <aeth> White_Flame: unlikely. 256 MB third gen EPYC.
[07:06:44] <aeth> probably a doubling at most
[07:06:44] <White_Flame> well, something like 320MB total cache.  256 is just the L3
[07:07:04] <aeth> I'm using 1.55 GB RAM right now... to think that it could almost fit entirely in CPU cache :-)
[07:07:06] <White_Flame> so it could just be a couple of years
[07:08:40] *** Quits: ixelp (~ixelp@p5492debc.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:09:04] * hayley prints out "INTERFACE-LEVEL TYPE DECLARATIONS DO NOT HELP" in a large size and mails it to the authors
[07:10:16] *** Quits: gilberth (~gilberth_@p5492debc.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:10:23] *** Quits: {gilberth} (~gilberth@p5492debc.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:11:57] <copec> hayley: https://www.ebay.com/sch/i.html?_from=R40&_trksid=p2380057.m570.l1313&_nkw=xeon+phi&_sacat=0
[07:13:15] <hayley> Huh, 256 threads for $150 + shipping. Though it would need the rest of the machine, which is steep.
[07:15:08] <hayley> I wonder if I could get a better response from the university w.r.t borrowing hardware if I mentioned a paper.
[07:16:00] <hayley> Oh, what, we have an introductory week for programming classes now? And it involves setting up Minecraft?
[07:16:22] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 252 seconds)
[07:17:05] <hayley> Hyeh, we use Minecraft Pi Edition somehow?
[07:17:31] <hayley> "How to write your own Virtual Machine"
[07:18:52] <hayley> I guess...we SSH into the Pis at campus? Random guess?
[07:19:31] <moon-child> by virtual machine do they mean like
[07:19:33] <moon-child> qemu
[07:19:36] <moon-child> or toy jvm?
[07:19:47] <humasect> oh
[07:20:15] <hayley> Well, there are addresses exposed, so not a JVM.
[07:21:02] <moon-child> that's more fun
[07:22:07] * hayley reverse engineers the coordinators' motives from the rubric.
[07:22:17] <hayley> So merely 3/25 marks on the first assignment are given for writing good code.
[07:25:06] <hayley> "Foundations of Object Orientated programming: Classes, Inheritance"
[07:25:06] * hayley uploaded an image: (73KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/OwNWgETOFrHQjOsiffJEyQeE/randall-smith.jpeg >
[07:26:25] <moon-child> hayley: https://www.esperanto.ai/wp-content/uploads/2021/08/HC2021.Esperanto.Ditzel.Final_.pdf  kilocore
[07:26:56] <hayley> So on-campus students get a Pi 400 (the "desktop" thing), online students get to pay for MC Java Edition, a Raspberry Pi and some mod which clones the Pi API. 
[07:29:01] *** Quits: v3ga (~cyberocto@c-73-39-172-34.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[07:30:20] * hayley reads some activities, reads "Build your own", gets frightened, reads "PC", gets more frightened
[07:30:36] <hayley> So, the only part of building a PC is apparently picking a CPU? Okay, sure, whatever.
[07:32:23] *** Joins: lisp123 (~lisp123@5.30.23.247)
[07:34:05] <humasect> ok
[07:34:28] <hayley> I suppose gilberth is set then. And so is my father FWIW.
[07:35:56] <copec> http://www.popcornlinux.org
[07:38:55] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[07:38:58] <hayley> The next question is how I get into the video conferences for this class. They do not seem to have a link anywhere obvious.
[07:43:43] <hayley> Oh, so we have another class on solely buying RAM. Still, gilberth will be fine.
[07:48:15] <hayley> moon-child: Seems we use https://justinmeiners.github.io/lc3-vm/
[08:19:23] *** Joins: gilberth_ (~gilberth_@p5492d8bb.dip0.t-ipconnect.de)
[08:19:23] *** ChanServ sets mode: +o gilberth_
[08:19:43] *** gilberth_ is now known as gilberth
[08:19:55] <hayley> Still no sign of how classes are actually held. Hm.
[08:23:06] <copec> What is the thread local behavior of sicl now?
[08:23:26] <hayley> There isn't any thread local behaviour so far, it is all hypothetical.
[08:23:41] <copec> ah
[08:25:25] <copec> what happens to say let bindings per thread if running sicl on sbcl?
[08:25:45] <hayley> We only run with one thread.
[08:26:34] <hayley> But the behaviour will be normal for CL: lexical variables are obviously thread-local, "global" special bindings are thread-global, and other bindings are thread-local.
[08:27:49] <hayley> All the hassle is about trying to make a fast GC, which we think should use thread-local nurseries. But that appears to be tricky when all objects are mutable.
[08:29:00] <copec> Do other threads have a handle on data in another's respective local nursery?
[08:29:33] <hayley> Nope, that's why they're thread-local.
[08:31:14] <copec> Next ignorant question: Can it then essentially act like each thread has it's own separate gc?
[08:34:01] <hayley> Only for nursery collections. But the global/major GC is concurrent and parallel, so w.r.t pause time it should "feel" entirely local.
[08:35:14] <copec> maybe try doing it with Rust instead?
[08:35:32] <humasect> lol stop
[08:35:34] * hayley uploaded an image: (71KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/KjAiyCAaHXVdlnaHatMxKBjg/lamport-what-the-fuck.jpg >
[08:35:50] * copec grins
[08:37:16] <hayley> Yes, atomic reference counting isn't concurrent or parallel. It'd be just like SBCL again!
[08:37:59] * hayley uploaded an image: (58KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/NtjwhJieXUqemFMNoSVoCxjl/pauseless.png >
[08:41:32] <gilberth> hayley: Are there any ideas to also have application-level nurseries?
[08:42:12] <hayley> gilberth: Not to my knowledge. But any thread groups would require stopping all the threads, which is a step down IMO.
[08:43:07] <gilberth> Say, you run some multi-threaded application which puts a lot of pressure on GC. Yet another also multi-threaded application, like say a web server, will not be affected by that at all.
[08:43:15] <hayley> One problem is that we don't have many concurrent applications to test (i.e. uses threads, more complex dataflow than lparallel).
[08:43:52] <gilberth> ok. Then, milady, we need forwarding pointers!
[08:44:18] <hayley> Hm, IMO you are fine as threads mostly pollute their own nurseries, and then the on-the-fly global heap, which doesn't do anything O(threads) or O(pressure) or whatever.
[08:45:26] <hayley> We considered forwarding pointers and even (less limited) reference counting, but the benefits are still unclear.
[08:45:42] <White_Flame> I think gilberth is talking about "regions"
[08:45:48] <White_Flame> in lispm speak
[08:46:00] <gilberth> Areas?
[08:46:13] <White_Flame> hmm, but even then, you might legitimately want a per-process heap/gc isolation without specifying its size
[08:46:27] <hayley> Unlikely, doesn't shit hit the fan if you misuse areas/regions?
[08:46:38] <White_Flame> yep
[08:46:43] <White_Flame> coarse-grained dealloc basically
[08:46:58] <White_Flame> assumes you have to references into it anymore
[08:47:00] * hayley gets another email about introductions to the new programming course, and it is literally the same as the last one.
[08:47:10] <White_Flame> but theoretically you could check on that, and assume it rare
[08:47:11] <lotuseater> good morning
[08:47:15] <gilberth> From reading the lispm documentation, I got the impression they were thought for kinda manual memory management. That is: Free an area in one go, no matter if that leads to dangling pointers.
[08:47:50] <White_Flame> *assumes you have NO references into it anymore [from above]
[08:47:58] <hayley> And recall it is a CLOS OS - I'd expect to fling references between applications.
[08:48:22] <White_Flame> is the SICL heap expected to be able to expand & contract?  I hate giving runtimes a fixed heap size
[08:49:10] <hayley> The only description of it is based off dlmalloc, which can expand (but idk about contracting).
[08:49:46] <hayley> Oh, and with persistence you could be very lazy and not close applications.
[08:51:15] <hayley> "If you are installing on Max or Linux you may need to change the executable permissions on the Install_API script." TIL I can install Minecraft on ego cartoon man
[08:53:37] <hayley> Hm, I seem to be in trouble as they expect everyone to be in the bootcamp class, which I already have credit for, and I've had no other contact so far.
[09:06:19] <copec> Did you
[09:06:37] <copec> Get minecraft working with abcl?
[09:07:35] <copec> Or did you go ahead and implement a JVM in CL?
[09:10:02] <White_Flame> JVM in CL in Redstone
[09:10:19] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[09:11:15] <copec> ^ahaha
[09:11:20] <dave0> maw
[09:12:04] <copec> <White_Flame> JVM in CL in Redstone
[09:12:15] <copec> Can you do that dave0
[09:12:56] <dave0> i can't do nuffing
[09:14:03] <copec> Is redstone an LLVM target yet?
[09:16:28] <White_Flame> redstone should be targeting the garbage can
[09:19:55] <hayley> Yes, I have run ABCL with Minecraft before. Can't do much with it.
[09:22:50] <hayley> https://www.youtube.com/watch?v=iA6smLm8cog
[09:29:31] <kakuhen> can i run android in abcl
[09:31:47] <lotuseater> you mean abcl in android
[09:31:56] <kakuhen> no
[09:32:16] <lotuseater> ah hm
[09:32:35] <moon-child> kakuhen: not until somebody makes a vm in cl
[09:32:37] <kakuhen> i think abcl in android should be possibly anyway since most android apps are written in java
[09:32:37] <kakuhen> i think i misunderstood what abcl actually is heh
[09:37:25] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:46:04] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 244 seconds)
[09:46:05] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3675) (Remote host closed the connection)
[09:47:31] <easye> kakuhen: running the ABCL interpreter on Android is possible with suitable modifications to the source for unimplemented APIs, but it won't have a compiler as that targets the JVM.
[09:49:34] <lotuseater> imagine now having the same for CLR, brrrrr
[09:49:50] <lotuseater> like with Clojure
[09:50:28] *** Joins: ixelp (~ixelp@p5492d8bb.dip0.t-ipconnect.de)
[09:50:28] *** ChanServ sets mode: +o ixelp
[09:50:48] <moon-child> clr is just microsoft hotspot
[09:51:52] <lotuseater> yeah
[09:52:09] <moon-child> with a crappy gc
[09:54:54] <lotuseater> not just that
[09:56:19] <lotuseater> but ohh sure it's so fast and much better than Java
[09:56:37] *** Quits: razzy (~razzy@user/razzy) (Ping timeout: 244 seconds)
[09:58:26] <moon-child> _c#_ may be better than java, as a language--though I know of no distinguishing features that mark either as superior--but no way is the runtime better
[10:01:27] <lotuseater> hm even if i could be good in any of two it won't change anything for me and would be wasted time i can invest better
[10:07:31] *** Joins: shka (~herr@109.231.62.239)
[10:11:24] <kakuhen> i havent touched anything involving java for years but i may try learning how to use clojure
[10:11:35] <kakuhen> i still dont have a JRE on my system for instance
[10:11:41] <lotuseater> yah why not :)
[10:20:04] <kakuhen> oh also part of the motivation is hearing the possibility of targeting both iOS and Android for mobile apps
[10:20:14] <kakuhen> apparently you can use react native with clojurescript
[10:23:34] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[10:26:22] <lotuseater> oh a wild Qwnavery appears
[10:27:34] <Qwnavery> \o hiyo lotuseater
[10:28:25] <Qwnavery> I was working through that sheet, I'm up to the applications which I'm going to do shortly
[10:31:13] <lotuseater> i just noticed you're here again
[10:32:35] <Qwnavery> lotuseater: did you write all this? It's very comprehensive?
[10:33:00] *** Joins: lisp123 (~lisp123@5.30.23.247)
[10:37:02] *** Joins: razzy (~razzy@user/razzy)
[10:40:19] <lotuseater> Qwnavery: yes i wrote everything in one go
[10:41:43] <hayley> moon-child: It has value types, which make people who don't know how to write efficient code excited.
[10:42:46] *** Quits: razzy (~razzy@user/razzy) (Ping timeout: 250 seconds)
[10:42:58] <Qwnavery> lotuseater: big brain
[10:43:31] <moon-child> lotuseater: go is not webscale, rewrite it in node
[10:43:49] <lotuseater> lel
[10:44:34] <lotuseater> i see now in the "Abstract" first sentence the "to" should be "too"
[10:44:55] <lotuseater> moon-child: I don't touch both :D
[10:44:59] <hayley> JVM: 1 cliff click CLR: 0 cliff clicks
[10:45:04] <hayley> CONCLUSION: JVM wins
[10:45:16] <lotuseater> hehe
[10:46:17] <lotuseater> Qwnavery: or write a simple for loop macro with this while
[10:46:41] <lotuseater> we could go through the sheet when we talk next time if you want
[10:47:59] *** Joins: jurov (~jurov@rev-81-92-255-38.radiolan.sk)
[10:48:46] <Qwnavery> I'll try and write a simple loop macro that generates them
[10:49:10] *** Quits: jurov_ (~jurov@rev-81-92-255-38.radiolan.sk) (Ping timeout: 240 seconds)
[10:49:58] <lotuseater> first the simple things :)
[10:55:35] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[10:55:48] *** Joins: lisp123 (~lisp123@5.30.23.247)
[11:09:33] * hayley gave her parents the news on university and was advised to contact the dean of the university.
[11:10:27] <hayley> Yes, it is fucked up that they expect you to socialize in the bootcamp classes (which I got credit for) and thus know who to not work with, and they haven't given me information that was only provided in bootcamp classes, but that's escalating too far.
[11:12:22] *** Joins: razzy (~razzy@user/razzy)
[11:17:00] *** Quits: razzy (~razzy@user/razzy) (Ping timeout: 250 seconds)
[11:24:09] *** Joins: razzy (~razzy@user/razzy)
[11:25:13] <shka> https://www.youtube.com/watch?v=ACF893aAN8s it is happening
[11:25:13] -ixelp- Another Satellite Collided in Space, But Everyone Missed It Until Now - YouTube
[11:26:16] * hayley uploaded an image: (314KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/zspycBShcYJdKTUlRTIvJVmr/since-when-did-this.png >
[11:27:00] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798)
[11:28:42] *** Quits: razzy (~razzy@user/razzy) (Ping timeout: 250 seconds)
[11:32:32] <gilberth> shka: Our world is falling apart, I said that.
[11:33:12] <hayley> http://lamport.azurewebsites.net/video/video4.html "In this video, you will learn how TLC can save your life"
[11:33:31] <shka> https://www.youtube.com/watch?v=csbyF3TYycM
[11:33:31] -ixelp- World Falls Apart - YouTube
[11:33:41] <hayley> "This isn't a big Hollywood movie, and I can't afford real jugs." ‚Äî Leslie Lamport
[11:34:09] <gilberth> shka: Thanks for sharing, I like Anton Petrov's videos.
[11:36:49] <gilberth> Question though. Could all the debris counteract CO‚ÇÇ emissions?
[11:37:30] <shka> ... what?
[11:39:02] <gilberth> Debris from all the satellites. Could it dim sunlight enough to cool Earth? Doubt it.
[11:39:30] <shka> no, it can't
[11:39:32] <shka> duh
[11:39:51] <moon-child> nuclear winter!
[11:40:04] <gilberth> shka: A pity. Nah, I wasn't serious.
[11:40:28] * gilberth still has tactical nukes stashed.
[11:41:35] <shka> nuclear winter is no joke
[11:41:46] <shka> even local nuclear war could lead to global consequences 
[11:45:35] <gilberth> I don't believe this will ever happen.
[11:45:59] <moon-child> nor I.  But it is fun to think about
[11:46:02] <shka> both India and Pakistan are nuclear armed
[11:46:15] <gilberth> I am aware.
[11:47:35] <gilberth> And it's "good" that both are. Would be worse, if only one were. And don't forget Israel, when we talk about nuclear armed nations.
[11:47:59] <shka> i am not sure if Israel has nuclear arms
[11:48:23] <shka> anyway, we are still one mishap away from the nuclear war
[11:48:29] <gilberth> Then everything I read about that, must have been FUD.
[11:49:36] <shka> gilberth: i mean, it makes sense for everyone to THINK that you have nuclear weapons
[11:49:57] <gilberth> Heh, yes, that's true.
[11:50:05] <shka> spreading FUD about your military capability is a valid strategy 
[11:51:15] <shka> if you think that you are not military capable, present yourself in such way to demonstrate that you are
[11:51:35] <shka> if you don't want to be considered a threat, hide your military potential
[11:51:44] <dave0> who's the enemy?
[11:51:54] <shka> for Israel? :D
[11:52:10] <shka> like, every neighbor potentially
[11:53:10] <dave0> ah now i understand why they would like everyone to think they have nukes!
[11:53:48] <gilberth> This is the whole point of military maneuvers near enemy borders and also what the Russians do and routinely fly fighers over western territory. And "we" do the same.
[11:55:48] <gilberth> From my point of view Israel is a bit paranoid. And when they would stop to behave like assholes, perhaps the neighbors would not pose so much a threat. Ooops, non-PC statement.
[12:07:38] <contrapunctus> gilberth: stop * behaving like
[12:08:57] <gilberth> contrapunctus: Thanks!
[12:16:26] <hayley> "if you don't want to be considered a threat, hide your military potential" - Sun Tzu, The Art of War
[12:17:46] <MichaelRaskin> gilberth: I think some of the neighbours find the initial claim on the lands of British Palestine assholish, which reduces the range of attainable situations conditional on Israel existing‚Ä¶
[12:20:10] <MichaelRaskin> Then again, from the firepower point of view Israel seems to be able to moonscape a large subset of the neighbours with conventional ammunition, so nuclear rumours might be serving more of a ¬´considers as an option¬ª than ¬´has ability¬ª role.
[12:28:46] *** Quits: santiagopim (~user@90.166.58.152) (Remote host closed the connection)
[12:28:52] <shka> MichaelRaskin: same can be said about the Iran 
[12:31:51] <MichaelRaskin> Iran is probably in a way worse shape logistically,
[12:32:48] <MichaelRaskin> (which limits how much it can moonscape at once)
[12:45:13] *** Joins: nihaal (~nihaal@171.60.228.170)
[13:06:38] *** Joins: razzy (~razzy@user/razzy)
[13:30:17] <hayley> https://www.youtube.com/watch?v=zYHBW24nDGE
[13:30:18] -ixelp- Fallen Angel Instrumental - YouTube
[14:30:56] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[14:56:35] <hayley> gilberth: Do you remember that paper where they used the MMU to lazily update pointers after compacting in Java?
[15:38:47] *** Joins: random-nick (~random-ni@87.116.183.125)
[15:50:00] *** Joins: selwyn (~selwyn@user/selwyn)
[15:51:22] <hayley> Oh well, I may have a better idea.
[15:55:12] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.2)
[16:00:53] <shka> hayley: SICL GC is supposed to be compacting?
[16:01:37] <hayley> shka: Only local ones. I am evil and have suggested using a mark-region scheme for bailing out of thread local heaps quickly.
[16:01:53] <hayley> The downside is you need a concurrent compacting GC now :)
[16:05:44] * hayley reads the Handbook
[16:06:21] <hayley> The first algorithm has threads wait for all of 'em to have only references to to-space, which I hope to avoid.
[16:12:57] <hayley> Okay, it does cover Pauseless. But I am a bit wary of adding another load "for effect" to every object load, even though apparently it should work fine with out-of-order execution.
[16:20:09] <shka> hayley: IIRC the initial plan was to not have a local compacting, right?
[16:20:31] <hayley> shka: No, the initial plan was to use beach's improved mark-compact for nurseries.
[16:20:52] <shka> very well
[16:21:17] <hayley> Still handy to be able to cons quickly.
[16:24:40] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[16:25:02] *** Quits: Alfr (~Alfr@user/alfr) (Ping timeout: 245 seconds)
[16:25:07] <hayley> Huh, the manual page for mremap mentions using MREMAP_DONTUNMAP + userfaultfd for garbage collection. Still nothing on batching up memory map modifications.
[16:26:29] <hayley> Oh, I wanted mprotect anyway. Whoops.
[17:04:10] *** Quits: razzy (~razzy@user/razzy) (Quit: leaving)
[17:11:45] *** Joins: razzy (~razzy@user/razzy)
[17:12:04] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: hayley (~theemacss@user/hayley) (Quit: Bridge terminating on SIGTERM)
[17:14:43] *** Joins: Gnuxie (~gnuxie@user/gnuxie)
[17:22:49] *** Joins: hayley (~theemacss@user/hayley)
[17:34:51] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[17:35:23] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[17:40:34] *** Quits: robin_ (~robin@user/terpri) (Ping timeout: 252 seconds)
[17:48:51] *** Joins: selwyn_ (~selwyn@user/selwyn)
[17:51:26] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 244 seconds)
[17:56:39] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3675)
[17:58:09] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 244 seconds)
[17:58:43] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:59:40] <humasect> ECL for android
[18:00:02] <humasect> following convo from last night; abcl being java. and android started out with a special java ? (kotlin?)
[18:01:58] <hayley> Android uses its own VM from memory. Though Kotlin and Java compile to it, idk how hard an ABCL port would be.
[18:02:32] *** Quits: nihaal (~nihaal@171.60.228.170) (Ping timeout: 245 seconds)
[18:03:09] <humasect> probably trouble, it would have been done Just BEcause
[18:03:26] <humasect> also native jit emacs is quite nice. havent used it much but very fast 
[18:04:12] <pl> the problem on android is that you can't use JVM bytecode generation at runtime
[18:04:38] <pl> unless you also hook JVM->DVM converter into it
[18:04:38] <humasect> ohh
[18:04:49] <humasect> davlik is that the name i was looking for 
[18:05:15] <humasect> early times (late 90s?) java was aimed for on-chip
[18:05:35] <pl> technically the VM used is no longer called Dalvik, but the VM spec is the same, they are just on rewritten implementation
[18:05:36] <selwyn_> afaik porting abcl to android is a formidable problem
[18:05:58] <pl> selwyn_: it's more about making SBCL run as shared library
[18:06:23] <selwyn_> whatever happened to that proprietary cl implementation for the iphone? forget the name
[18:06:46] <humasect> mocl ?
[18:06:48] <pl> mocl
[18:06:49] <selwyn_> yes mocl
[18:06:54] <pl> it's still alive, but not many updates?
[18:06:59] <hayley> shka: But TLDR this is the setup for a plan where we optimistically guess we have a thread local heap, but if an assignment would make a pointer from global to local, we hand the heap to global GC and just use it as a thread local allocation buffer.
[18:07:06] <humasect> pl: ohh, that has not been done ?
[18:09:00] <pl> humasect: you mean SBCL as shared library? AFAIK only LispWorks and ECL provide that, maybe Allegro
[18:09:10] <pl> LW also happens to run on Android ;)
[18:13:49] * hayley is going to give Gil Tene a run for his money, except she won't charge for it
[18:14:40] <hayley> pl: 1v1 me challenge consing
[18:22:54] <humasect> pl: yeah =) how come you were saying it is needed for SBCL to be as library? guile can, and is one of its strong points.
[18:23:56] <pl> humasect: well, if you don't want possibly fragile hacks, you need to load SBCL from Java application, using Java's FFI
[18:24:13] <humasect> oh right
[18:24:31] <humasect> if CL is set in stone, why not make it a chip? 
[18:24:43] <humasect> some of us here seem to be doing FPGA and other hardware stuff
[18:25:04] <humasect> im not very good with hardware, wouldnt it be useful? if its a standard, burn it into hardware
[18:25:07] *** Joins: nihaal (~nihaal@171.60.228.170)
[18:25:19] <ck_> you could even call such a machine a "Lisp Machine"
[18:25:24] <humasect> =)
[18:25:44] <humasect> SBCL gets updates all the time though 
[18:25:50] <humasect> fix this, fix that
[18:27:04] <pl> humasect: and what would the representation of code used by said chip? :>
[18:28:02] <humasect> heh good point.
[18:28:08] <lotuseater> humasect: many things are let open to implementations
[18:28:12] <humasect> thats where CL is more like plato idealism =) 
[18:28:25] *** Joins: Alfr (~Alfr@user/alfr)
[18:28:25] <humasect> lotuseater: that is true. let's say, SBCL-on-chip =)
[18:28:32] <pl> humasect: the lisp machine chips provided instruction set and method of operation that was optimised for lisp
[18:28:36] <humasect> going off the java vibe
[18:28:38] <pl> they didn't interpret lisp directly
[18:29:01] <lotuseater> nah not SBCL
[18:29:01] <humasect> pl: basically the sbcl compiler does this now? that is, may as well use x86 or arm or whatnot.
[18:29:16] <pl> ... okay, maybe SCHEME chip was a bit more dedicated, but it also specified an instruction set
[18:29:22] <humasect> lotuseater: what other implementation?
[18:29:35] <pl> humasect: you can think of them as chips that had specific hardware accelerations for certain tasks
[18:29:39] <lotuseater> i meant free from it
[18:29:55] <humasect> pl: did not realise that. i was thinking a chip that eats lisp and spits out hmm instructions
[18:29:57] <pl> for example, all data in memory was typed
[18:30:01] <lotuseater> okay nothing can be perfect
[18:30:11] <humasect> lotuseater: so a general-purpose CPU? what are you, caveman? =)
[18:30:14] <pl> so you never had the issue of "ok, just what are those 4 bytes?"
[18:30:34] <humasect> stephen hawking "One of the basic rules of the universe is that nothing is perfect. Perfection simply doesn't exist... Without imperfection, neither you nor I would exist."
[18:31:06] <lotuseater> humasect: but not one of the ones from Plato's cave parable
[18:31:20] <lotuseater> right
[18:31:40] <lotuseater> and in chaos lies the beauty of it all
[18:31:42] <pl> another example of lisp-centered features on Ivory chip (and previous lisp machine) that are less talked about - hw support for forwarding pointers
[18:32:08] <humasect> i named my cat Plato etc 
[18:32:16] <humasect> lotuseater: eye of the storm is the calmes =)
[18:32:18] <humasect> calmest*
[18:32:24] <pl> this made copying GC much, much, much simpler
[18:32:29] <humasect> pl: oh?
[18:32:53] <humasect> https://en.wikipedia.org/wiki/Extreme_ironing  
[18:33:18] <lotuseater> haha yes
[18:33:39] <lotuseater> or "extreme ironic"? ^^
[18:33:47] <pl> humasect: essentially, the hw support for forwarding pointers meant that a GC could do things like this: 1) Copy the object 2) place a forwarding pointer to new location in location of the old object 3) resume the program 4) update outdated references in background
[18:34:43] <pl> This is what Java's Shenandoah does too, afaik, but they have to emulate it by adding an extra pointer-sized field to all data on heap which has to be checked by code every time an object is accessed
[18:35:27] <humasect> pl: ohh nice. i'd have a VM just for that
[18:37:32] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:37:42] <pl> also, types in hw meant that you could emit code like "push <pointer to number>; push <pointer to number>; add;" and it would work so long as the numbers were, well, numbers (and worst case you'd get a system trap due to incompatible types)
[18:38:11] <pl> (all actually built Lisp Machines were stack-based, thus the example pushing to stack)
[18:40:58] <pl> also note that I put in pushing a pointer - because the CPU would automatically follow such pointer
[18:47:48] <humasect> sry was on phone. i like how genera has full memory
[18:48:05] <humasect> i think the word is, not "protected" memory 
[18:48:29] <humasect> "just code better" so apps dont hurt other apps. unless thats their purpose 
[18:49:23] <lotuseater> imagine you would still paying ~1$/CPU time per second or for a kilo of chars output :)
[18:50:10] *** Joins: robin (~robin@user/terpri)
[18:50:56] <shka> pl: dynamic typed assembly language
[18:50:59] <shka> how weird is that
[18:51:06] <pl> just typed
[18:51:38] <humasect> lotuseater: hehe
[18:52:10] <lotuseater> right and that is not a weird idea at all
[18:52:45] <lotuseater> i saw one newer PhD about using even dependent typing for assembly level
[18:53:17] <humasect> types are fairly neat, ive learned to respect them through haskell and ocaml 
[18:54:52] <lotuseater> yes these polymorphic algebraic typing is more based on category theory. dependent typing goes even beyond it, a bit similar to OOP contracts which idea came from Eiffel
[18:58:38] <humasect> type inference is awesome. almost like it helps me think
[18:59:27] <humasect> not to get lazy in ways i used to be diligent, but, type inference/dependent types, are tools for exploration as well as tools for security/stability/sanity
[19:10:40] <pjb> Type inference is nice when the compiler indeed infers the types and doesn't require you to specify any type.  This is not the case of haskel.  This is the case of lisp.
[19:12:00] <shka> i see value of complex type systems for safety, but my software does not kill anyone when it malfunctions
[19:12:04] <shka> so...
[19:12:19] <humasect> pjb: ocaml is in between
[19:12:28] <pjb> Until it does. You never know what your software will be used for/on/with.
[19:12:37] <humasect> haskell needs types, ocaml can infer them. haskell doesn't have the 'inference' part so much.
[19:12:49] <humasect> heh
[19:12:52] <humasect> for war
[19:12:55] <shka> so you think that my classifier working on a counter-strike data can be used for evil? :D
[19:12:58] <pjb> That's why Apple has restrictive licenses that forbid you to use its computers for certain jobs in certain industries.
[19:13:21] <humasect> but who would do that
[19:13:29] <shka> "don't use that ipod to build nuclear weapons, ok?"
[19:13:56] <pjb> Yeah. Who would order all tesla cars to gather to some GPS coordinates and run over any person that might live there? >:-}~
[19:14:27] *** Quits: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof) (Ping timeout: 240 seconds)
[19:14:27] *** Quits: okflo (~okflo@lisa.diesenbacher.net) (Ping timeout: 240 seconds)
[19:14:32] <pjb> shka: some people could use it to record data in the audio spectrum for example.
[19:14:48] <pjb> or to play back building instructions‚Ä¶
[19:14:53] <shka> pjb: tesla car software will kill people if it malfunction
[19:15:03] <shka> so it is in a different category
[19:15:18] *** Joins: fiddlerwoaroof (~fiddlerwo@user/fiddlerwoaroof)
[19:15:30] <shka> safety is not equally important in all cases, that's all i have to say here 
[19:16:09] <humasect> sanity*
[19:16:21] *** Joins: okflo (~okflo@lisa.diesenbacher.net)
[19:16:34] <humasect> the thing is
[19:16:35] <pjb> shka: I mean, AI (including Tesla's) are subject to optical illusions. And even worse, illusions human eye/brain wouldn't make.
[19:16:41] <humasect> lisp can't infer a single thing unless its running
[19:16:56] <humasect> lisp *needs* repl/live dev/vm imae
[19:16:58] <humasect> image*
[19:17:13] <pjb> You would see a 30 km/h speed limitation, and the AI would see a 90 k/h speed limitation, and then accelerate to 89 km/h‚Ä¶
[19:17:15] <humasect> ocaml and typescript and stuff can just infer *while* you type. so it takes a step closer than live-dev with REPL.
[19:19:33] <lotuseater> pjb: right, I can tell from my own experience. the GHC type inferencer is very good but sometimes it can't figure out all. and often you want explicitely declare types of functions or specific values to avoid too generic type class stuff. or using "newtype" vs "data" if your type has just one constructor with one field
[19:19:52] <lotuseater> but some cool techniques is for example phantom typing
[19:21:57] *** Quits: nihaal (~nihaal@171.60.228.170) (Quit: nihaal)
[19:23:24] *** Quits: razzy (~razzy@user/razzy) (Ping timeout: 244 seconds)
[19:29:09] <pjb> Because, you know, your customers and users might be idiots: A U.S.-built biometric system sparks concerns for Afghans <https://www.nbcnews.com/tech/security/us-built-biometric-system-sparks-concerns-afghans-rcna1829>
[19:29:10] -ixelp- A U.S.-built biometric system sparks concerns for Afghans
[19:29:40] <pjb> If they weren't half the idiots they are, they'd be your competition, or you'd have hired them‚Ä¶
[19:50:59] <lotuseater> nice
[20:01:38] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 244 seconds)
[20:03:44] *** Joins: aeth (~aeth@user/aeth)
[20:19:32] *** Alfr is now known as Guest8308
[20:19:32] *** Quits: Guest8308 (~Alfr@user/alfr) (Killed (calcium.libera.chat (Nickname regained by services)))
[20:19:36] *** Joins: Alfr (~Alfr@user/alfr)
[20:40:35] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3675) (Read error: Connection reset by peer)
[20:41:04] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3675)
[20:44:52] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[20:46:33] *** Joins: aeth (~aeth@user/aeth)
[20:54:33] *** Joins: razzy (~razzy@user/razzy)
[20:58:24] *** Quits: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798) (Remote host closed the connection)
[21:01:10] *** Joins: lisp123 (~lisp123@45.86.202.65)
[21:05:42] *** Quits: lisp123 (~lisp123@45.86.202.65) (Ping timeout: 244 seconds)
[21:16:51] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3675) (Remote host closed the connection)
[21:21:10] *** Joins: humasect (~humasect@2001:1970:57e0:4100::3675)
[21:25:20] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 244 seconds)
[21:27:12] *** Joins: aeth (~aeth@user/aeth)
[21:27:55] *** Quits: humasect (~humasect@2001:1970:57e0:4100::3675) (Quit: Leaving...)
[21:35:58] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[21:37:30] *** Joins: aeth (~aeth@user/aeth)
[21:44:26] <selwyn_> gnuxie: they killed the alpaca
[21:44:40] <lotuseater> :(
[21:45:01] <Gnuxie> did it really have the disease?
[21:46:42] <selwyn_> who really knows
[21:46:50] <selwyn_> owner said it didn¬¥t
[21:52:18] <selwyn_> they killed the alpaca but the guy who took 168 cats and dogs from afghanistan is a hero
[21:52:22] <selwyn_> this is such a weird country
[21:52:48] <Gnuxie> kinda interesting how bbc is calling it a "Destruction" of the alpaca 
[21:53:05] *** Quits: razzy (~razzy@user/razzy) (Quit: leaving)
[21:53:14] <Gnuxie> yeah it's silly how all these people followed the law to the letter just because 
[21:53:46] <lotuseater> i like alpacas, they're cute
[21:54:15] <Gnuxie> i mean, if it wasn't an alpaca but someone else it'd have gone unspoken
[21:54:34] <lotuseater> and surely often more human than people can be, like with horses
[21:55:01] <selwyn_> they always use ¬¥destruction¬¥ for a dangerous dog as well
[21:55:10] <lotuseater> hmpf
[21:55:47] *** Joins: razzy (~razzy@user/razzy)
[21:55:48] <lotuseater> as if they would have no soul, or fear, hunger, happiness
[21:55:50] <Gnuxie> a terrorist encampment was targeted and destroyed 
[21:56:13] <selwyn_> kieth starmer strangling the alpaca bare-handed like will smith in `i am legend¬¥ in a failed attempt to get votes
[21:56:25] <Gnuxie> so true 
[21:57:50] <lotuseater> Gnuxie: to the thing of selwyn_ or my thought?
[21:58:06] <selwyn_> i like alpacas too
[21:58:17] <Gnuxie> Kieth Starmer's attempt at winning votes
[21:58:24] <Gnuxie> but yeah also that i guess 
[21:58:33] <lotuseater> yeah sounds hm
[21:58:36] *** Joins: lisp123 (~lisp123@45.86.202.65)
[21:58:51] <selwyn_> he said that the alpaca had to die a few weeks ago
[21:59:26] <Gnuxie> yeah it is what he would do
[22:01:09] <lotuseater> selwyn_: your next PhD could be teaching alpacas using a quantum computer. like in this one gravity falls scene where a bear drives the car :D was so funny when the police stopped them. "so this is my blinding guide bear, he drives me to hospital"
[22:01:26] <selwyn_> there is an alpaca living in my town
[22:01:30] <selwyn_> i should visit it soon
[22:01:34] <lotuseater> cool
[22:01:44] <lotuseater> just one? sounds lonely
[22:01:47] <selwyn_> is gravity falls a game?
[22:02:01] <Gnuxie> gravity falls is a TV series / cartoon 
[22:02:02] <selwyn_> well, it lives with some sheep, but i think it finds them boring
[22:02:02] <Gnuxie> it's good 
[22:02:06] <selwyn_> ok
[22:02:25] <lotuseater> selwyn_: no it's a very funny but also deep animation series
[22:02:36] <selwyn_> i see
[22:03:22] <lotuseater> oh sheep are funny, some years ago i had a part time job on a private farm in the village i lived and they had also some sheep, cool dudes
[22:03:26] <Gnuxie> yeah, i thought it was pretty great when i watched it, I was younger though 
[22:04:24] <lotuseater> Gnuxie: it's way more suitable for children like Rick & Morty but also very enjoyable for adults
[22:04:35] <Gnuxie> yeah 
[22:05:20] <lotuseater> plus this science vs mystery as with Eureka vs Warehouse 13
[22:06:11] <lotuseater> in one episode after scene of R&M you can see Stanford "6 finger" Pines sitting in an interdimensional cafe
[22:06:58] <Gnuxie> cool, I haven't watched R&M 
[22:07:35] <lotuseater> also not for everyone for that it's deep and not just ridicolous too ^^
[22:08:10] *** Quits: lisp123 (~lisp123@45.86.202.65) (Ping timeout: 240 seconds)
[22:08:29] <lotuseater> and GF provided ABCL for a possible mascot, wait ..
[22:09:22] <Gnuxie> lol 
[22:10:28] <lotuseater> https://trash.randomerror.de/b5bgg/multi_bear.png
[22:11:32] <selwyn_> my gf drew a picture of me on the lisp alien for my github profile pic https://avatars.githubusercontent.com/u/14922779?v=4
[22:11:36] <selwyn_> but she hates the alien
[22:11:47] <lotuseater> selwyn_: oh that's by her!
[22:11:56] <lotuseater> why?
[22:12:38] <selwyn_> thinks it looks weird and unsettling
[22:12:38] <lotuseater> in 2019 i plotted some with the foil plotter
[22:12:46] <selwyn_> i like its winning smile and enterprising nature
[22:12:49] <lotuseater> yeah they are free
[22:12:56] <lotuseater> oh yes
[22:13:11] <selwyn_> having an arm for a nose suggests practicality
[22:14:06] <lotuseater> but indeed talented, I can't draw, maybe just with something like the diagrams tool for programmed declarative SVGs or such. or generating fractals
[22:16:23] <lotuseater> https://www.lisperati.com/#!The_Official_Lisp_Alien_3D_Model
[22:17:02] <lotuseater> oh that is creepy, would fit totally into the show I'm currently watching "Grimm": https://www.deviantart.com/rametarin/art/Lisp-alien-387791633
[22:17:03] -ixelp- Lisp alien by rametarin on DeviantArt
[22:44:32] *** Joins: lisp123 (~lisp123@45.86.202.65)
[22:49:10] *** Quits: lisp123 (~lisp123@45.86.202.65) (Ping timeout: 240 seconds)
[22:56:38] <Gnuxie> oh yeah that ones is cool 
[23:00:14] <selwyn_> a monster that snacks on crabs and pythons
[23:01:54] <lotuseater> hayley would it too though
[23:03:59] <lotuseater> *like
[23:22:01] <shka> https://www.youtube.com/watch?v=fv8VtvYL178
[23:22:02] -ixelp- Alice in Chains - Would (Doomer) - YouTube
[23:22:16] <shka> selwyn_: the knights of lisp
[23:24:54] <gilberth> Good morning #lispcafe!
[23:25:14] <selwyn_> https://www.youtube.com/watch?v=XAIeh0YarFs
[23:25:15] -ixelp- Excalibur (1981) - Arthur's Knighthood Scene (1/10) | Movieclips - YouTube
[23:25:19] <selwyn_> hi gilberth
[23:27:11] * gilberth sources more parts and found some rare 74AS882.
[23:32:39] <Gnuxie> https://www.youtube.com/watch?v=R6RaoGHZC3A lel
[23:32:39] -ixelp- Elon Musk's Dugout Loop - The DISASTER That Almost Happened - YouTube
[23:32:57] <gilberth> Those are 32-bit carry lookahead generators. Two of them and eight '181 and you have a 20ns 32-bit ALU. Pretty fast although a bit power-hungry.
[23:33:43] <lotuseater> shka: or knights of the lambda calculus
