[00:00:15] <Noustropos> entuland: well, line 3
[00:00:40] <Noustropos> the function just uses its default value for paramName, which is "query"
[00:01:10] <Noustropos> instead of value of ($(this).attr("id"))
[00:02:45] <entuland> did you check what ($(this).attr("id")) returns in that context?
[00:03:54] <Noustropos> yep, typeof says its string
[00:04:03] <entuland> the actual return value
[00:04:06] <entuland> what does it contain?
[00:04:11] <Noustropos> yes, correct id
[00:04:21] <Noustropos> of the input
[00:04:58] <Noustropos> https://github.com/devbridge/jQuery-Autocomplete/blob/master/src/jquery.autocomplete.js
[00:05:06] <Noustropos> heres source of that plugin/function
[00:05:12] *** Quits: yaalon (~yaalon@201.171.90.143.dsl.dyn.telnor.net) (Remote host closed the connection)
[00:05:41] <entuland> how are you checking that you're putting something else there and it remains "query" instead?
[00:07:07] <entuland> also, the docs refer to paramName as an ajax only setting, that I don't know what it means exactly and whether it matters in this context
[00:08:46] <Noustropos> hmm, when i tried paramName: "s".replace("s", ($(this).attr("id"))),
[00:08:59] <Noustropos> it changed to 'undefined'
[00:09:23] <entuland> are you sure that "this" refers to what you expect it to refer to, in that very context?
[00:09:35] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:09:58] <entuland> you want to put there the ID of the :input you're binding the autocomplete to, correct?
[00:10:07] *** Joins: Celeo (~Celeo@user/celeo)
[00:10:16] <Noustropos> yes
[00:10:22] <entuland> how many of those do you have?
[00:10:29] <Noustropos> 6
[00:10:50] <Noustropos> i wanted to avoid creating 6 different functions
[00:11:04] <entuland> you don't need to create 6 different functions
[00:11:29] <entuland> but you need to pass each a different set of params, I assume
[00:12:00] <entuland> so you may need some loop where you know you have a valid "this" that refers to a single input
[00:12:34] <entuland> the context of your code there is only one "this", and that's whatever "this" is when line 1 starts getting evaluate
[00:12:35] <entuland> d
[00:12:56] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[00:13:05] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[00:14:02] <entuland> makes sense?
[00:14:24] <Noustropos> kind of
[00:14:50] <entuland> you likely need something like $(":input").each((el) => $(this).devBridge...
[00:15:07] <entuland> I don't know jquery, take that as pseudocode
[00:15:35] <entuland> or maybe (el) => $(el).devbridge...
[00:15:42] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Quit: Leaving...)
[00:16:47] <entuland> I wonder what that ":input" even means
[00:16:47] <Noustropos> alright, gonna try
[00:17:15] <entuland> ah I see, catch all for input, textarea, select and button elements
[00:17:21] <entuland> looks wrong in your case
[00:17:35] <Noustropos> why
[00:17:41] <entuland> unless you _only_ have inputs there and they all need the autocompletion
[00:18:02] <entuland> ":input" in jquery will match INPUT, TEXTAREA, SELECT and BUTTON
[00:18:14] *** Quits: federico_it (~textual@151.51.82.235) (Quit: Textual IRC Client: www.textualapp.com)
[00:18:15] <entuland> if you only want INPUT, use "input" only
[00:21:15] <wroathe> Maxattax: Did you get your fill of advice earlier? Sorry, I missed your message.
[00:25:34] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Read error: Connection reset by peer)
[00:27:16] *** Quits: onosendi1 (~onosendi@user/onosendi) (Quit: WeeChat 3.1)
[00:27:50] *** Joins: TheAceOfHearts_ (~TheAceOfH@24.41.239.76)
[00:32:20] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[00:32:30] *** Quits: devc (~user@gateway/tor-sasl/devc) (Remote host closed the connection)
[00:32:51] *** Joins: devc (~user@gateway/tor-sasl/devc)
[00:33:56] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 252 seconds)
[00:36:30] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:79de:2735:de11:f577)
[00:38:30] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[00:38:35] *** __jmcantrell__ is now known as jmcantrell
[00:38:55] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[00:39:09] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[00:43:21] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 255 seconds)
[00:47:28] *** Joins: Lyn (~Lyn@user/law)
[00:47:38] <Lyn> what's a good data storage solution to go along with React Native?
[00:49:06] <systemfault> I have no idea about React Native... but I'd look for some SQLite wrapper
[00:49:17] <systemfault> You can't go wrong with that.
[00:49:32] <hax> depends on the data
[00:49:46] <hax> mongodb cloud or google firestore would work
[00:50:03] <Lyn> settings, credentials and cache, that sort of thing
[00:50:12] *** Joins: yaalon (~yaalon@189.202.79.66.cable.dyn.cableonline.com.mx)
[00:50:13] <systemfault> Lyn: Local or remote?
[00:50:31] <systemfault> Local... I'd look into SQLite.
[00:50:39] <Lyn> local (but will probably have to ask about remote in the future too)
[00:51:00] <hax> https://reactnative.directory/?search=storage
[00:51:23] <hax> realm looks popular
[00:51:58] <Lyn> I checked that search, async storage has 10x the downloads, firebase even more, and redux persist a lot more
[00:52:16] <Lyn> I'm not sure what redux persist does though
[00:53:10] <systemfault> async storage looks fine if all you need is a key-value store
[00:53:39] *** Joins: stenno (~stenno@user/stenno)
[00:56:53] *** Quits: yaalon (~yaalon@189.202.79.66.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[00:57:00] *** Joins: sadtaco (~z_@142-196-189-034.res.spectrum.com)
[00:58:39] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[01:00:41] <Noustropos> entuland: worked :)
[01:05:32] *** Joins: yaalon (~yaalon@189.202.79.66.cable.dyn.cableonline.com.mx)
[01:06:38] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:79de:2735:de11:f577) (Quit: Leaving)
[01:06:59] <entuland> noice
[01:09:27] *** Joins: johtso (~johtso@92.40.194.147.threembb.co.uk)
[01:09:37] *** Joins: _wovixo_ (~wovixo@146.151.192.66)
[01:10:11] <johtso> Anyone know if there are any decent scraping based youtube search libraries that can run in browser?
[01:10:57] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[01:11:08] *** Joins: yaalon_ (~yaalon@201.171.90.143.dsl.dyn.telnor.net)
[01:12:13] <entuland> could you qualify that better?
[01:13:03] *** Quits: wovixo (~wovixo@128.104.205.49) (Ping timeout: 255 seconds)
[01:13:18] *** Quits: yaalon_ (~yaalon@201.171.90.143.dsl.dyn.telnor.net) (Remote host closed the connection)
[01:13:54] *** Joins: yaalon_ (~yaalon@201.171.90.143.dsl.dyn.telnor.net)
[01:13:57] *** Quits: yaalon (~yaalon@189.202.79.66.cable.dyn.cableonline.com.mx) (Ping timeout: 255 seconds)
[01:14:47] *** Joins: stenno (~stenno@user/stenno)
[01:14:50] *** Quits: yaalon_ (~yaalon@201.171.90.143.dsl.dyn.telnor.net) (Read error: Connection reset by peer)
[01:15:16] <johtso> entuland: something that let's you request multiple pages of results, and preferably get the animated preview thumbnail too
[01:16:01] <johtso> there are so many google results it's hard to navigate
[01:16:16] <entuland> does this help? https://developers.google.com/youtube/v3/docs/search/list
[01:17:08] <entuland> since they provide a search API, that's what you're likely supposed to do, not try to scrape their "normal usage" web output
[01:18:09] <johtso> entuland: yeah.. that doesn't really work if you want to make a client side tool for exploring youtube videos. API limitations would be prohibitive
[01:18:43] <entuland> is it something you need for your own use, or are you developing something meant to be used by others?
[01:19:36] <johtso> scratching a personal itch, and something that others might find useful
[01:20:01] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 246 seconds)
[01:20:33] *** Quits: _wovixo_ (~wovixo@146.151.192.66) (Ping timeout: 265 seconds)
[01:20:34] <johtso> basically just an infinite scrolling fullscreen grid of video thumbnails as the result of special randomly generated search queries, with some element of tracking what videos a user has already seen
[01:20:53] <entuland> dunno, probably they give you a reasonable free daily quota
[01:21:02] <johtso> basically a "deep into youtube" video exploration tool
[01:21:37] <entuland> otherwise you'll likely need to hack your way around with some automation interacting with the browser, but that may break their terms of use, so that's your call
[01:25:35] <johtso> Yeah, I think the only real issue is possible instability if they make breaking changes, which I can live with
[01:27:14] <entuland> seems like they give 10K quota units per day for free, and a search costs 100 units, each search can return up to 50 results, that would make you able to get 5000 single results per day
[01:31:15] <entuland> besides, the default behavior of the search page on YT is to give you an infinite list - you just have to keep scrolling down
[01:31:59] <entuland> you could simply apply some client side user stylesheet to convert their list in a grid of thumbs or something, would be a completely fair use
[01:34:59] <johtso> interesting idea.. not sure how easily you could get the infinite scrolling behavior to play ball though
[01:35:52] <entuland> I don't understand that - I assume there will be a user actually scrolling the page and looking at the thumbs to decide which one to watch
[01:36:46] <entuland> I assume _you_ would be doing that, since you wanted this for your own use (not sure about the "random search" you mentioned above though)
[01:37:05] <johtso> Sure, it might just work.. just not sure how the page would behave if suddenly everything was more compact and it was immediately needing to load more content to fill the page
[01:37:21] <entuland> oh that
[01:37:29] <entuland> nah, I don't think it would make any difference
[01:37:49] <entuland> probably the JS there triggers the ajax whenever the scroll goes past a certain limit
[01:38:09] <entuland> I doubt it matters how the elements are styled
[01:38:41] <Lyn> I'm confused what kind of threat model apps usually have for situations where users can store sensitive info in the app (locally) -- the user is kept logged in anyway, so should I even encrypt anything
[01:40:17] <ljharb> Lyn: no
[01:40:25] <ljharb> Lyn: why would you store sensitive data locally tho
[01:41:59] <Lyn> well, the credentials thing is confusing too -- if the logged-in-user can access sensitive info remotely, then should those (persistent) login details be stored encrypted, but then again; what's the point
[01:42:41] <Lyn> and locally to enable offline usage as well
[01:43:40] <ljharb> Lyn: why would you EVER store login details??
[01:43:55] <ljharb> credentials get sent, once, over https, and converted to a session cookie
[01:43:59] <Lyn> well, at least some sort of mechanism to let them auto-login
[01:44:16] <ljharb> that's the session cooki
[01:44:16] <ljharb> e
[01:44:29] <Lyn> do apps have cookies too
[01:44:53] <ljharb> everything in a web browser is a website. and has cookies.
[01:45:04] <Lyn> but this is an app
[01:45:10] <ljharb> is it in a web browser?
[01:45:13] <Lyn> no
[01:45:17] <ljharb> what is it in
[01:45:23] <Lyn> a phone
[01:45:27] <ljharb> with javascript?
[01:45:38] <Lyn> with React Native, so yes
[01:45:53] <ljharb> and doesn't RN have a storage api?
[01:45:59] <ljharb> for ios, it'd wrap around core storage, eg
[01:46:19] <ljharb> same thing for storing credentials, using face id/touch id, etc
[01:46:25] <Lyn> it has some community module, async storage, but doesn't encrypt anything
[01:46:32] <ljharb> the OS handles that
[01:46:33] <ljharb> it's a phone
[01:46:43] *** Joins: fcjsx (~fcjsx@2800:a4:835:8900:57e1:dfd9:adef:4416)
[01:47:00] *** Quits: fcjsx (~fcjsx@2800:a4:835:8900:57e1:dfd9:adef:4416) (Client Quit)
[01:47:19] <johtso> ljharb: what are you using to write the server/api it will almost certainly have built in functionality for user sessions
[01:49:59] *** Joins: stenno (~stenno@user/stenno)
[01:51:27] <Lyn> but like, I guess even if it used a cookie, it would be unencrypted? anyone with access to the device could just yank it or use it
[01:51:59] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[01:52:13] <Lyn> there's nothing to decrypt it after all, since the user doesn't have to input the pass
[01:52:22] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[01:52:53] <austincheney> the cookie would be encrypted over the wire if the page is using https, but on the harddisk nothing about the browsers is encrypted
[01:53:05] <austincheney> its all plain text including localStorage
[01:53:50] <Lyn> the backend should have a cookie/session manager then, now it starts to make sense
[01:54:24] <johtso> Lyn: https://reactnative.dev/docs/security#secure-storage
[01:54:35] <austincheney> there is usually no reason to encrypt browser storage, because if a malicious actor has access to the machine it doesn't matter anyways.  The only time this might make sense is on public agents like libraries or cyber cafes
[01:54:54] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[01:56:13] <ljharb> Lyn: well yeah of course
[01:58:03] <johtso> Lyn: if you're not comfortable with the security side of things.. you might want to use something that does a lot of that for you https://rnfirebase.io/auth/usage
[01:59:15] <johtso> Lyn: or something like Auth0 https://auth0.com/docs/quickstart/native/react-native/00-login
[02:00:08] <johtso> obviously it depends what you're building.. how many users you expect to have.. budget.. need for control over your own user database etc. But these kinds of tools can be big timesavers, and help you avoid security blunders
[02:01:09] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:03:24] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[02:03:25] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:79de:2735:de11:f577)
[02:04:37] *** Joins: codebam (~codebam@user/codebam)
[02:06:20] *** Quits: sadtaco (~z_@142-196-189-034.res.spectrum.com) (Ping timeout: 255 seconds)
[02:09:08] *** Joins: sadtaco (~z_@142-196-189-034.res.spectrum.com)
[02:09:37] *** Quits: celphi_ (sid97751@id-97751.brockwell.irccloud.com) ()
[02:09:53] *** Joins: celphi (sid97751@id-97751.brockwell.irccloud.com)
[02:10:29] *** Quits: b-ap (~b-ap@2804:14c:1aa:80be:7e7a:91ff:fe11:111f) (Quit: WeeChat 2.3)
[02:14:53] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 255 seconds)
[02:15:59] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:16:06] <celphi> anyone can see this?
[02:16:17] <EgonX> Yes
[02:16:19] <celphi> finally
[02:16:30] <celphi> thanks ljharb
[02:17:09] <wroathe> celphi: Nope. We can't see. Try waving your arms.
[02:17:12] <celphi> did everyone from freenode move here?
[02:17:18] <celphi> wroathe: !!
[02:17:27] <celphi> \o/
[02:17:36] <theskillwithin> lol
[02:17:37] <celphi> \o_
[02:17:49] <theskillwithin> btw #libera-cloak then read topic to hide your ip
[02:18:06] *** Quits: celphi (sid97751@id-97751.brockwell.irccloud.com) (Changing host)
[02:18:06] *** Joins: celphi (sid97751@user/celphi)
[02:18:22] *** Quits: johtso (~johtso@92.40.194.147.threembb.co.uk) (Changing host)
[02:18:22] *** Joins: johtso (~johtso@user/johtso)
[02:23:14] <hassoon> 'evening
[02:24:11] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:26:13] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:28:30] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[02:29:33] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:28] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:00] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 258 seconds)
[02:31:19] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Remote host closed the connection)
[02:31:43] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[02:33:02] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[02:36:02] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 255 seconds)
[02:38:33] *** Quits: EgonX (~EgonX@2601:2c6:47f:8884:211c:2469:3523:bbf3) (Ping timeout: 255 seconds)
[02:40:39] *** Joins: EgonX (~EgonX@2601:2c6:47f:8884:c9bb:ce40:729f:6e3f)
[02:43:27] *** Joins: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl)
[02:44:04] *** Joins: stenno (~stenno@user/stenno)
[02:45:32] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Ping timeout: 245 seconds)
[02:45:34] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:47:10] *** Quits: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl) (Client Quit)
[02:47:40] *** Joins: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl)
[02:47:43] <l__q> https://www.npmjs.com/package/is-name xD
[02:48:52] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[02:49:14] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 252 seconds)
[02:51:40] *** Quits: hygl (uid16621@id-16621.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:52:04] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 272 seconds)
[02:52:39] <entuland> isName("Apple Tree") would return true and isName("Sebastian") would return false?
[02:54:04] <entuland> and what if someone has two first names and two surnames?
[02:54:28] <l__q> I know, this is a very stupid try to find human names
[02:54:49] <entuland> would break badly with German where all nouns start with a capital letter
[02:54:51] <l__q> I think I need ML for this
[02:55:49] <l__q> This is not easy job to dedect human names
[02:55:56] <entuland> it definitely is not
[02:56:07] <l__q> and I dont want to include array of all names
[02:56:37] <l__q> but its a start :)
[02:56:55] <entuland> and even with ML you'd have to take in account names/surnames that match colors, things, verbs and so forth
[02:57:10] <entuland> let alone absurd made up names that in some places are allowed
[02:58:30] <l__q> I found this: https://spacy.io/usage/linguistic-features/#named-entities
[02:58:58] <l__q> but only for python, mayby models can by transfor to tensorflow-js
[03:00:18] <l__q> this can by a fun project
[03:00:28] <entuland> seems like there is a person legally named "Tyrannosarus Rex"
[03:00:49] *** Joins: stenno (~stenno@user/stenno)
[03:01:40] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[03:01:57] <l__q> How humans recognize if something is a name?
[03:02:04] <entuland> context
[03:02:11] <l__q> hm
[03:02:19] *** Quits: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:02:20] <entuland> if there isn't enough, even humans can't tell
[03:02:52] *** Joins: Drgonz0 (Drgonz0@107-179-254-222.cpe.teksavvy.com)
[03:03:31] <entuland> https://www.reddit.com/r/todayilearned/comments/9o4xw3/til_that_a_19_yearold_english_teenager_legally/
[03:03:35] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[03:06:23] <l__q> lol, "A 19 year old english teacher" I'm Also read teacher.
[03:07:26] <l__q> thats wired
[03:07:52] <entuland> I remember reading years ago about babies named "Lufthansa" or "Sahara"
[03:08:48] *** Joins: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl)
[03:09:35] <l__q> I also personally know a person whose name is Su
[03:09:45] *** Quits: TheAceOfHearts_ (~TheAceOfH@24.41.239.76) (Read error: Connection reset by peer)
[03:09:49] *** Quits: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl) (Client Quit)
[03:09:52] <l__q> Or Silke
[03:10:11] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[03:10:12] <l__q> german name
[03:10:55] <entuland> aye
[03:11:10] *** Joins: Naan (~naan@user/naan)
[03:11:13] <l__q> I guess my is-name package will never work properly
[03:11:19] <entuland> eheheh
[03:11:27] <entuland> you didn't really aim low :P
[03:12:15] <l__q> but wait
[03:12:19] <entuland> https://www.polyai.com/neural-language-understanding-of-peoples-names/
[03:12:24] <l__q> you say context
[03:13:02] *** Joins: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl)
[03:13:25] <l__q> regex? /I\'m Sebastian/g => name Sebastian
[03:13:35] <entuland> nah
[03:13:53] <l__q> regex? /I\'m (.*)/g xD
[03:14:09] <entuland> I'm sure that even the best AIs out there don't nail it
[03:14:27] <systemfault> I'm sick
[03:15:04] *** Quits: Treefingers (~Glassbox@103.162.189.80.dyn.plus.net) (Quit: Leaving)
[03:15:41] <entuland> I'm, it's, my name is, they call me, I go by and so forth - even just in plain English it's a nightmare, let alone other sentence structures, pet names and so forth
[03:15:55] <l__q> As you said, even humans have trouble recognizing names, so AI even more so
[03:16:01] <entuland> aye
[03:19:18] *** Joins: infi (~infi@41.143.34.238)
[03:22:37] <Lyn> tbh I'm pleasantly surprised how many utils/libs are readily available for making things work in js
[03:23:23] *** Joins: jazzy (~jaziz@2600:380:c07e:8a82:9884:b8b5:d3c:5188)
[03:24:13] <l__q> best npm lib is `true`, always returns true
[03:25:56] *** Quits: infi (~infi@41.143.34.238) (Changing host)
[03:25:56] *** Joins: infi (~infi@user/infi)
[03:28:53] *** Joins: pavonia (~user@user/siracusa)
[03:32:09] *** Quits: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:32:42] *** Joins: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl)
[03:33:09] <l__q> entuland: interesing article you send on polyai.com
[03:33:09] *** Quits: sadtaco (~z_@142-196-189-034.res.spectrum.com) (Quit: Leaving)
[03:34:18] <entuland> yep, looks nice
[03:36:58] *** Quits: devc (~user@gateway/tor-sasl/devc) (Remote host closed the connection)
[03:37:23] *** Joins: devc (~user@gateway/tor-sasl/devc)
[03:44:17] *** Quits: ormaaj2 (~6174bb9b@user/ormaaj) (Quit: https://mibbit.com Online IRC Client)
[03:46:00] *** Joins: sadtaco (~z_@142-196-189-034.res.spectrum.com)
[03:46:28] *** Quits: devc (~user@gateway/tor-sasl/devc) (Remote host closed the connection)
[03:51:54] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 240 seconds)
[03:52:41] *** Joins: devc (~user@gateway/tor-sasl/devc)
[03:52:42] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[03:54:17] *** Quits: sadtaco (~z_@142-196-189-034.res.spectrum.com) (Read error: Connection reset by peer)
[03:54:38] *** Joins: WishBoy (~WishBoy@user/wishboy)
[03:56:13] *** Joins: sadtaco (~z_@142-196-189-034.res.spectrum.com)
[03:58:44] <l__q> Actually, my is-name package works perfectly because anything can be a name :P
[04:01:51] *** Joins: codebam (~codebam@user/codebam)
[04:02:27] *** Quits: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:03:46] *** Joins: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl)
[04:04:18] <entuland> ehehhe
[04:04:38] <entuland> at that point just have it return true no matter what the input :P
[04:04:55] <entuland> https://xkcd.com/327/
[04:06:00] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:606e:8b50:7af3:c31b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:06:20] *** Quits: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl) (Client Quit)
[04:07:33] <l__q> :D
[04:09:46] <l__q> My questions on HN https://news.ycombinator.com/item?id=27851187
[04:10:05] *** Joins: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl)
[04:10:30] <l__q> nice aswer I got..
[04:10:50] <entuland> eheheh
[04:10:58] <entuland> we'll see how it goes
[04:11:32] <l__q> https://en.wikipedia.org/wiki/Sentence_diagram
[04:17:50] *** Joins: lightstalker (~BT@user/lightstalker)
[04:24:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Quit: hendursaga)
[04:26:07] *** Joins: hendursaga (~weechat@user/hendursaga)
[04:26:50] <l__q> How often and when does the number of downloads on npm update?
[04:28:10] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[04:29:14] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:32:26] *** Quits: Atum_ (IRC@user/atum/x-2392232) (Quit: Atum_)
[04:34:23] *** Quits: sadtaco (~z_@142-196-189-034.res.spectrum.com) (Quit: Leaving)
[04:37:25] *** Quits: johtso (~johtso@user/johtso) (Ping timeout: 246 seconds)
[04:37:34] <theskillwithin> l__q prob pretty often
[04:40:03] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[04:41:06] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[04:43:12] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 255 seconds)
[04:45:08] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[04:49:06] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[04:52:14] *** Joins: sickdyd (~sickd@FL1-119-239-103-161.tky.mesh.ad.jp)
[04:52:24] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 272 seconds)
[04:52:36] <l__q> https://www.reddit.com/r/AskReddit/comments/ol5bnc/how_do_you_recognize_that_there_is_no_human_name/
[04:53:43] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[04:54:06] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[04:55:17] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[04:57:17] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[05:05:24] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-51.prtc.net)
[05:12:36] *** Joins: bobdobbs` (~user@150.107.175.200)
[05:13:14] *** Joins: Dorward_ (~dorward@daviddorward.plus.com)
[05:14:22] *** Quits: Dorward (~dorward@daviddorward.plus.com) (Ping timeout: 268 seconds)
[05:15:09] <l__q> https://lobste.rs/s/escgcu/how_do_you_recognize_there_is_no_human_name my first post on lobsters :P
[05:17:26] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[05:18:11] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[05:20:36] *** Joins: t3nj1n (~t3nj1n@108.5.82.237)
[05:28:32] *** Quits: paule32 (~paule32@user/paule32) (Read error: Connection reset by peer)
[05:32:25] *** Joins: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br)
[05:33:52] *** Quits: Deide (~Deide@user/deide) (Ping timeout: 252 seconds)
[05:34:47] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[05:40:05] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-51.prtc.net) (Quit: Client closed)
[05:41:02] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[05:41:41] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[05:42:31] *** Quits: infi (~infi@user/infi) (Ping timeout: 265 seconds)
[05:46:07] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 258 seconds)
[05:53:18] *** Quits: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:53:38] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[05:55:50] *** Joins: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl)
[05:56:50] *** Joins: Deide (~Deide@217.155.19.23)
[05:56:50] *** Quits: Deide (~Deide@217.155.19.23) (Changing host)
[05:56:50] *** Joins: Deide (~Deide@user/deide)
[05:57:01] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[05:58:35] *** Quits: Deide (~Deide@user/deide) (Client Quit)
[06:00:18] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[06:00:21] *** Quits: abirkill (snoopy@d207-216-233-23.bchsia.telus.net) (Ping timeout: 268 seconds)
[06:01:49] *** Joins: abirkill (snoopy@d207-216-233-23.bchsia.telus.net)
[06:03:36] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[06:08:08] *** Quits: abirkill (snoopy@d207-216-233-23.bchsia.telus.net) (Ping timeout: 265 seconds)
[06:09:09] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[06:11:27] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:15:14] *** Joins: ferdna (~ferdna@user/ferdna)
[06:16:04] *** Quits: harpia (~harpia@58.148.205.168.dynamic.vibefibra.com.br) (Quit: Leaving)
[06:16:49] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[06:16:51] *** Joins: Crash1hd (~Crash1hd@25.78.247.35.bc.googleusercontent.com)
[06:17:43] *** Joins: ferdna (~ferdna@user/ferdna)
[06:19:16] <theskillwithin> https://www.syfy.com/syfywire/dan-harmon-gears-turning-community-movie-despite-philosophical-question
[06:19:31] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91)
[06:23:44] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91) (Ping timeout: 255 seconds)
[06:25:59] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 255 seconds)
[06:34:12] <rustyshackleford> so I'm awaiting a series of actions
[06:34:25] <rustyshackleford> any of these three could reject
[06:34:30] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:140d:ed4:314d:e507)
[06:34:51] <rustyshackleford> so depending on which failed, I will handle the error differently
[06:35:12] <rustyshackleford> but in the try/catch block, how do I tell which of the async functions rejected?
[06:35:29] <wroathe> rustyshackleford: Promise.all, and then use the position in the array
[06:35:33] *** Joins: kmh (~kmh@p200300df5f0e070091a51dbb61f38469.dip0.t-ipconnect.de)
[06:35:51] *** Joins: Rockwood (~Rocky@user/rocky)
[06:35:58] <rustyshackleford> hmm these need to be called in order
[06:36:09] <rustyshackleford> promise.all would would if they were concurrent
[06:36:38] <Rockwood> o/
[06:36:53] <rustyshackleford> const result1 = await getResult1(); const result2 = await getResult2(result1);
[06:37:01] <rustyshackleford> the result from each step gets fed to the next step
[06:37:07] <theskillwithin> or is that Promise.race?
[06:37:19] <systemfault> rustyshackleford: You could do something like  const result1 = await getResult1().catch(() => null) if you don't care about the error
[06:37:32] *** Quits: kmh_ (~kmh@p2e51169e.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[06:37:32] <wroathe> rustyshackleford: Well, if you're going to do it that way you'd probably throw a specific type of error for each
[06:37:39] <systemfault> Then you could just do if (result1 !== null) {}
[06:37:44] <wroathe> rustyshackleford: Otherwise you'd have to handle each in turn
[06:38:04] <systemfault> Promises suck for error handling...
[06:38:07] <wroathe> rustyshackleford: Thing is, I think async/await syntax is actually hurting you here, because it'll require multiple try/catches
[06:38:13] <rustyshackleford> wroathe: I could put each in it's own try catch block, but then scope becomes tricky
[06:38:15] <systemfault> You basically have to do "instanceof"s... :(
[06:38:19] <wroathe> rustyshackleford: Or multiple types of errors and a single try/catch
[06:38:23] <wroathe> systemfault: Yup
[06:38:47] <rustyshackleford> wroathe: I'll experiment with .then/.catch instead
[06:39:00] <rustyshackleford> in the happy path flow, async/await rocks
[06:39:05] <wroathe> rustyshackleford: That's the way I'd go.
[06:39:10] <rustyshackleford> but handling errors really throw a wrench in this
[06:39:46] <wroathe> I tend to use async/await because it makes the people around me happy, but if it's truly me left to my own devices I prefer just working with promises.
[06:40:16] <systemfault> This ^
[06:40:37] <rustyshackleford> it depends
[06:41:29] <rustyshackleford> a long promise chain is also not fun to read
[06:41:50] <systemfault> I have a stupid idea...
[06:42:04] *** Joins: abirkill (snoopy@d207-216-233-23.bchsia.telus.net)
[06:42:11] <wroathe> See, that's the rub. async/await makes people happy because of readability, but imperative exception-based error handling fucking sucks.
[06:42:22] <theskillwithin> oh nvm i was thinking of promise.allSettled
[06:42:37] <systemfault> theskillwithin: That's my stupid idea.
[06:42:44] <systemfault> n> const [{ status, value }] = await Promise.allSettled([Promise.resolve(10)]);
[06:42:45] <jellobot> (okay) undefined
[06:42:50] <theskillwithin> systemfault great minds...
[06:42:55] <systemfault> n> const [{ status, value }] = await Promise.allSettled([Promise.resolve(10)]); [status, value]
[06:42:56] <jellobot> (okay) [ 'fulfilled', 10 ]
[06:43:20] <wroathe> They're sequential, not concurrent
[06:43:23] <wroathe> So that wouldn't help much
[06:44:02] <systemfault> wroathe: Yeah, that's why I said it's stupid... nothing forbids you to use allSettled with a single element array
[06:44:31] <systemfault> n> const [{ status, value, reason }] = await Promise.allSettled([Promise.reject(10)]); [status, value, reason]
[06:44:32] <jellobot> (okay) [ 'rejected', undefined, 10 ]
[06:45:24] <systemfault> So... three calls to allSettled :p
[06:45:27] <systemfault> All serial
[06:45:32] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[06:46:00] <systemfault> That said, it gives you a "result type" which is possibly a solution here
[06:46:17] <theskillwithin> im super serial guys
[06:46:24] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:47:04] <systemfault> Okay TheSkillGore
[06:47:25] <theskillwithin> hehe
[06:47:29] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:48:52] <rustyshackleford> wroathe: promise chaining syntax also sucks
[06:49:34] <wroathe> Then we better give up, then,
[06:49:34] <rustyshackleford> maybe that's enough coding for me today
[06:49:45] <wroathe> There's no way to win.
[06:50:01] <rustyshackleford> maybe I should try writing unit tests first
[06:50:52] <rustyshackleford> If step 1 succeeds, call step 2 with the result. If step1 fails, perform some error handling and then abort
[06:51:30] <rustyshackleford> now take those numbers, and increment by 1. is there a way to do that without nesting deeply
[06:52:09] <theskillwithin> i'd prob just put each inside the .then of the prev one to be honest.  but that does make for hard to read code
[06:52:09] *** __jmcantrell__ is now known as jmcantrell
[06:52:16] <rustyshackleford> promise.then(success => {}, error => { /* Can I abort right here? */ }).then(...)
[06:52:40] <rustyshackleford> wondering if I can just keep adding onto the chain instead of nesting
[06:53:59] <theskillwithin> no, u only haze .then and .catch so u can't chain another promise,  it would have to go inside
[06:54:05] <theskillwithin> and .finally
[06:54:34] <rustyshackleford> you can keep chaining .then as long as you want
[06:54:41] <theskillwithin> yes
[06:54:49] *** Joins: Croves (~Croves@2804:14c:578b:9102:c443:cab:e23c:d59a)
[06:55:25] *** Parts: Croves (~Croves@2804:14c:578b:9102:c443:cab:e23c:d59a) ()
[06:55:38] <rustyshackleford> but I guess you can't short circuit. If I threw an error, a later .then or .catch would handle it
[07:03:50] <theskillwithin> promise.then((result) => if(!result.data?.length) { throw 'uh oh' } else { promise2.then(() => {}).catch((err) => {}).catch((err) => {})
[07:04:06] <theskillwithin> blah nvm this isn't good in irc
[07:11:03] *** Quits: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:12:47] <rustyshackleford> some helper functions help to organize this
[07:13:43] <rustyshackleford> return step1.then(success => {}, error => { /* handle the error */ throw new Error ('its fucked!') })
[07:13:57] <Rockwood> wht is wild card sign meaning in JS?
[07:14:12] <theskillwithin> prob getting to the point where u should have a paste/gist with comments in it so can talk about all 3
[07:14:14] <Rockwood> its means optional
[07:14:15] <rustyshackleford> now I can call performStep1.then(performStep2)
[07:17:40] *** Joins: ormaaj2 (6174bb9b@user/ormaaj)
[07:17:54] <theskillwithin> Rockwood wildecard sign?
[07:18:02] <rustyshackleford> *
[07:18:09] <rustyshackleford> is just the multiplication operator
[07:18:34] <systemfault> n> [...(function *() { yield 1; yield 2; })()]
[07:18:35] <jellobot> (okay) [ 1, 2 ]
[07:19:12] <theskillwithin> n> 2 * 2
[07:19:13] <jellobot> (okay) 4
[07:19:25] <Rockwood> data? <-- this question mark
[07:20:15] <Rockwood> means not mandatory
[07:20:25] <theskillwithin> do u mean like  data?.length
[07:20:32] <Rockwood> yes
[07:20:38] <rustyshackleford> optional chaining
[07:20:40] <theskillwithin> thats optional chaining
[07:20:46] <Rockwood> ok
[07:21:06] <rustyshackleford> Rockwood: well in a type definition, its a "maybe" type
[07:21:19] <rustyshackleford> ?string is either a string, or null
[07:21:44] <theskillwithin> so you used to do stuff like  if (foo && foo.bar && foo.bar.baz && foo.bar.baz === 'yay')
[07:21:48] <Rockwood> now PHP having similar
[07:21:59] <theskillwithin> now you can do if (foo?.bar?.baz === 'yay')
[07:21:59] <Rockwood> ok
[07:22:20] <Rockwood> looks cleaner way nice
[07:22:29] <theskillwithin> ya
[07:22:30] <theskillwithin> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining
[07:23:07] <Rockwood> thanks
[07:23:51] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 255 seconds)
[07:28:32] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[07:28:56] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[07:29:18] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[07:29:33] <Tabmow> I'm using vue to draw a table with a single row that has a b-form-checkbox. I'm trying to make it checked by default but can't seem to figure it out. Any ideas? - https://dpaste.org/TMn1
[07:31:57] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[07:35:11] *** Joins: codebam (~codebam@user/codebam)
[07:35:18] <theskillwithin> Tabmow show v-model selectedOffer
[07:35:32] *** __jmcantrell__ is now known as jmcantrell
[07:37:14] <Tabmow> theskillwithin: what do you mean? It's an object which contains the offer details, costs etc.
[07:37:18] *** Joins: guy_frm_yogaland (~gourab@2409:4062:238a:b172:2fad:104f:b1f2:ce09)
[07:37:32] <theskillwithin> https://bootstrap-vue.org/docs/components/form-checkbox
[07:38:29] <Tabmow> I have read that... I still don't really understand how to mark it checked by default... unless I'm missing something
[07:38:55] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:40:29] <Rockwood> bootstrap is very horrible thing of the world :D
[07:40:40] <theskillwithin> Tabmow could you break it down into a codesandbox.io example
[07:41:46] <Tabmow> By default, <b-form-checkbox> value will be true when checked and false when unchecked. - However when I debug and mark it as checked it isn't equal to true it's equal to the selectedOffer object
[07:42:22] <theskillwithin> so set it in the selectedOffer object
[07:43:15] <Tabmow> So I need to add a checked prop in that object?
[07:44:48] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 265 seconds)
[07:44:54] <theskillwithin> checked is the v-model property. As with any input bound to a v-model in Vue, the property (i.e. data) tied to the v-model should be set to the value you want pre-selected.
[07:45:14] <Rockwood> why node is famous for backend?
[07:45:52] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[07:49:17] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[07:49:33] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:52:12] <theskillwithin> :checked="data.item"
[07:52:34] <Rockwood> means?
[07:52:37] <Rockwood> oops
[07:52:47] <Rockwood> you are not reply to ah okay
[07:54:49] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:55:06] <celphi> theskillwithin: you familair with aws?
[07:58:25] <theskillwithin> thats kind of a random question haha,  sure
[08:00:02] <celphi> im  trying to figure out how to get my apache2 to display my webserver code in browser. if i curl it from the shell on aws i get a webpage html, but i cant from browser
[08:00:13] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[08:00:36] <celphi> usually i would just check firewall,. but it's on aws and ive added port 80 to security policy
[08:01:09] <theskillwithin> what service are you using, ec2?
[08:01:13] <celphi> yes
[08:02:15] <theskillwithin> iv never ran an ec2 b4 or not that i remember
[08:02:32] <wroathe> celphi: Got a link?
[08:02:42] <theskillwithin> whats the ssl port, its like 442 or something?
[08:02:49] <theskillwithin> is there a domain attached to it?
[08:02:50] <wroathe> 443
[08:03:03] <celphi> it's not even https
[08:03:07] <celphi> it's port 80
[08:03:21] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[08:03:25] <theskillwithin> does the amazon link to it have the region in it
[08:03:49] <celphi> let me see
[08:04:15] <celphi> where would the region be?
[08:04:33] <celphi> https://usercontent.irccloud-cdn.com/file/j6qiQEuB/image.png
[08:05:15] <celphi> but i dont get why the public ipv4 is differet from ipconfig
[08:05:41] <celphi> nvm i get why on that part
[08:06:43] <celphi> only "my ip" is added to port 80
[08:06:44] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[08:08:40] *** Joins: l__q (~modinfo@user/modinfo)
[08:08:47] <theskillwithin> always takes me a long time to figure out stuff in AWS
[08:09:10] <theskillwithin> in my defense i focus on frontend
[08:09:20] <celphi> SO WEIRD
[08:09:23] <celphi> now it works
[08:09:37] <theskillwithin> what did you change
[08:09:45] <celphi> nothing haha
[08:09:54] <theskillwithin> maybe u just needed to wait more than 60 seconds after spinning it up
[08:10:04] <wroathe> It must have gotten scared of you.
[08:10:04] <celphi> ya appears that way
[08:10:09] <celphi> lol wroathe
[08:12:32] *** Quits: t3nj1n (~t3nj1n@108.5.82.237) (Ping timeout: 272 seconds)
[08:14:49] *** Joins: stenno (~stenno@user/stenno)
[08:15:02] <celphi> if my file is root root how is my webserver able to serve it?
[08:16:56] *** Joins: t3nj1n (~t3nj1n@108.5.82.237)
[08:17:51] <wroathe> If the webserver is running with setuid as root it would be able to read and serve the file
[08:18:38] <wroathe> It would better to create separate user to run apache as
[08:18:41] <wroathe> user/group
[08:18:47] <wroathe> like apache:apache
[08:19:02] <wroathe> and then create a www directory that that user has permissions to
[08:19:21] <wroathe> Usually installing apache from a package manager sets this up for you
[08:19:29] <theskillwithin> root directory?
[08:19:39] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[08:19:57] <theskillwithin> is it /var/www usually
[08:20:24] <wroathe> Yeah, or /usr/local/var/www
[08:20:27] <wroathe> or w/e
[08:21:05] <wroathe> Usually installing apache runs a script that creates that user and directory for you
[08:21:57] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:22:56] <theskillwithin> i feel like nginx is cooler, but i don't know either
[08:24:21] <wroathe> nginx is newer. Back in the days Apache used to be a process-based webserver, and it would spawn a new process to handle each incoming connection. Nginx came along and implemented handling connections with a thread pool, which was significantly faster. Apache now supports both models.
[08:24:49] <celphi> yeah im just relearning apache bc new job uses it
[08:25:07] <celphi> how do i see the setuid?
[08:25:16] <theskillwithin> i just do serverless stuffs nowdays
[08:25:37] <wroathe> celphi: ps or top
[08:25:52] <celphi> ps aux | grep apache2 ?
[08:26:03] <celphi> it says www-data
[08:26:30] <celphi> https://usercontent.irccloud-cdn.com/file/x8vNiCIw/image.png
[08:26:34] <wroathe> It's going to be hard to walk you through setting up permissions for a webserver over IRC
[08:26:40] <wroathe> And I'm feeling very lazy
[08:27:03] <wroathe> Your worker processes are running as www-data, and the main process is running as root
[08:27:08] <celphi> i know how to setup im just confused how it is able to serve files that have root root
[08:28:11] <wroathe> celphi: Can you share the ls -l of the file you're talking about?
[08:28:40] <celphi> https://usercontent.irccloud-cdn.com/file/Nakw6OVx/image.png
[08:28:48] <celphi> 544
[08:29:06] <theskillwithin> wait aren't php files executed?
[08:29:11] <celphi> yes
[08:29:21] <theskillwithin> ok nvm ignore me
[08:29:43] <celphi> in fact no idea how this even runs
[08:29:51] <wroathe> celphi: I don't remember the details of apache. If apache is reading that PHP script from the main process it will have no problems.
[08:29:52] <celphi> it doesnt even have x
[08:30:13] <wroathe> Well, technically it doesn't need to. PHP is interpreted.
[08:30:23] <wroathe> It can just read the file and run the code within through an interpreter.
[08:30:55] <wroathe> You'd have to consult the apache docs for the execution model. It's likely reading that script from the main process (which is running as root), and then handing off work to the worker processes
[08:31:24] <celphi> where can i read up on that?
[08:31:50] <wroathe> celphi: The apache docs
[08:32:07] <wroathe> celphi: https://httpd.apache.org/docs/2.4/
[08:32:16] <celphi> thnx
[08:33:38] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[08:34:06] <jaawerth> nginx is also way easier/cleaner to configure for many common usecases. or at least that used to be the case, I haven't touched it in years but maybe it took other lessons from nginx besides the worker pool
[08:34:13] <wroathe> celphi: You can test my hypothesis btw by running apache as www-data instead of root. It should complain that it can't read that file, instead of starting up correctly
[08:34:31] <jaawerth> I suppose that means apache can also be configured to run with php-fpm these days *googles*
[08:34:45] <wroathe> jaawerth: I'm sure they've reached feature parity by now
[08:34:58] <wroathe> (for the features that matter)
[08:35:06] <jaawerth> yeah that one was a no-brainer
[08:35:12] <jaawerth> the config simplicity is another matter though
[08:35:36] <jaawerth> in nginx's case it was a bit of a tradeoff for some of the weird stuff you could do with a apache, they had a tagline about it and everything
[08:35:48] <celphi> wroathe: https://usercontent.irccloud-cdn.com/file/NlSUZtlD/image.png
[08:36:00] <celphi> i thought this controlled how they ran as
[08:36:34] *** Joins: N4buc0 (~N4buc0@2001:1284:f016:620f:b9ce:95b0:91a2:4e6f)
[08:37:56] <celphi> i guess i just need to read docs
[08:38:06] <jaawerth> it needs a master process to run as root in order to listen on ports < 1000
[08:38:19] <jaawerth> that's true of anything unless you do something to make it unecessary
[08:38:22] <wroathe> celphi: https://httpd.apache.org/docs/2.4/mod/mod_unixd.html#user
[08:38:38] <wroathe> jaawerth: Oh, right, I forgot about that.
[08:39:03] <wroathe> In my defense it's been like 5 years since I configured a web server.
[08:39:07] <jaawerth> most of the work is done by a non-privileged user but the actual listening has to a superuser on the protected port range
[08:39:22] <jaawerth> that's true for anything on linux unless you use other (hacky) workarounds
[08:39:36] <jaawerth> haha yeah no worries, I just thought it was worth explaining
[08:42:55] <celphi> sweet thanks for explanation
[08:43:58] <jaawerth> incidentally, one of the more common way around this for things like node is to slap nginx or caddy in front of it as a reverse proxy (which has other benefits, like static resource caching and ddos mitgation). nginx and caddy do the same controller-process-as-root thing
[08:44:19] <jaawerth> (because you never ever ever want to run app code as root, lol)
[08:45:08] <jaawerth> and with that, it's my bedtime. night all
[08:45:38] <celphi> thnx jaawerth
[08:45:40] *** Joins: stenno (~stenno@user/stenno)
[08:46:18] *** Quits: Crash1hd (~Crash1hd@25.78.247.35.bc.googleusercontent.com) (Quit: Leaving)
[08:46:54] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:47:08] *** Joins: gggpkm (~gggpkm@221.219.77.161)
[08:47:17] *** Joins: Rockwood (~Rocky@user/rocky)
[08:47:20] *** Quits: gggpkm (~gggpkm@221.219.77.161) (Remote host closed the connection)
[08:48:53] *** Quits: Rockwood (~Rocky@user/rocky) (Client Quit)
[08:50:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[08:53:34] <wroathe> rustyshackleford: Here's an idea: https://jsfiddle.net/qkrp37tc/
[08:53:46] <wroathe> rustyshackleford: Not a good one, but an idea.
[09:00:07] <theskillwithin> i'd just keep wrapping them in the .then's prolly,  but too lazy to paste that out
[09:02:52] <ljharb> !authbind @ celphi
[09:02:52] <jellobot> celphi, Never run Node.js as root! Use this instead: https://thomashunter.name/blog/using-authbind-with-node-js/
[09:03:23] <celphi> ?
[09:03:30] <celphi> i never was
[09:03:43] <ljharb> it's about listening on ports < 1024 without sudo
[09:03:49] <ljharb> seemed relevant
[09:04:58] <celphi> weird the article title seems to conflict with what he suggests using.
[09:05:58] <theskillwithin> wait, celphi you were using node with apache?
[09:06:04] <celphi> no.
[09:06:07] <theskillwithin> oh
[09:08:54] <wroathe> theskillwithin: There's not really a nice way to hit a specific handler and bail with thens in that situation
[09:09:28] <jaawerth> (I didn't quite make it to sleep yet luckily)  ljharb: authbind is a potentially dangerous hack tho
[09:10:00] <theskillwithin> wroathe its not one handler, its 3,  isn't it 3 api requests or something like that?
[09:10:01] <jaawerth> oh wait nm I was thinking of termcap
[09:10:05] <jaawerth> authbind should be fine
[09:10:18] * jaawerth goes to bed for real, so as to have a working brain again in the morning
[09:10:33] <wroathe> theskillwithin: He was doing multiple things in a sequence, and he wanted to hit a specific handler based on what step in the sequence he got to
[09:10:33] <celphi> o/ nite jaawerth
[09:11:49] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Ping timeout: 246 seconds)
[09:13:04] <wroathe> theskillwithin: To do this with thens you'd need to check some sort of flag on the error object to determine if it had been handled by a previous handler
[09:13:11] <theskillwithin> wroathe oh so iv been thinking about this the wrong way the entire time prob
[09:13:26] <theskillwithin> happens a lot to me, im kinda ADD
[09:16:48] <theskillwithin> esp when theres a lot of back and forth without a paste.  i just sorta stop following along to an extent
[09:16:50] <wroathe> theskillwithin: See, here's the problem: https://jsfiddle.net/obkyv0fm/
[09:17:30] <wroathe> theskillwithin: The ones with an error in the chain hit all of the remaining rejection functions
[09:18:00] <wroathe> theskillwithin: To fix that you'd need to make "step" smarter, and detect if the error had a previous step assigned to it
[09:18:19] <wroathe> if (err.step) return err;
[09:19:03] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 255 seconds)
[09:19:17] <wroathe> Of course in a real application you'd only have one chain, and no way of knowing which step was going to error
[09:19:30] *** Quits: ormaaj2 (6174bb9b@user/ormaaj) (Quit: https://mibbit.com Online IRC Client)
[09:21:17] <wroathe> celphi: How's your C these days?
[09:21:26] <theskillwithin> wroathe not if u nest them inside the prev .then
[09:21:42] <wroathe> theskillwithin: Yup, and that's what that helper I linke does
[09:21:45] <wroathe> theskillwithin: linked*
[09:21:55] <celphi> hi wroathe : it's a bit rusty lately bc of new job
[09:22:10] <theskillwithin> i woulda just done it raw nested inside the prev .then is what i was saying earlier
[09:22:12] <celphi> but i go over it time to time to keep it semi fresh
[09:22:20] <wroathe> theskillwithin: Ah
[09:22:26] <wroathe> celphi: That's a paddlin'
[09:22:38] <celphi> hehe
[09:22:50] <celphi> income > pleasure
[09:22:56] <wroathe> https://jsfiddle.net/obkyv0fm/
[09:22:56] <celphi> atm
[09:23:34] <wroathe> Not if you live in some sort of hedonistic commune. Then pleasure is income.
[09:23:47] <wroathe> Oh, shit, wrong link
[09:23:52] <paulcarroty> `then - Promise.reject - then` looks strange, use try-catch
[09:23:53] <theskillwithin> wroathe which of course, after 3 nested .then.catch inside of each other.  it will look messy.   but its lazy default for me
[09:23:59] <wroathe> https://www.youtube.com/watch?v=sKiLfH3DVGc
[09:23:59] <skillbot> YouTube Title: That's A Paddlin' (The Simpsons)
[09:24:22] <wroathe> theskillwithin: Yeah, I was just trying to imagine what a way to clean that up might look like.
[09:25:25] <paulcarroty> also tons of .then kills readability
[09:26:09] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[09:26:12] <theskillwithin> u mean a lot of nested ones not chained ones
[09:26:31] <theskillwithin> cuz nested ones will start to go paste ur prettier line length and wrap
[09:27:45] *** Joins: N4buc0- (~N4buc0@2001:1284:f013:30e6:bf5f:7175:1170:8f46)
[09:28:04] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[09:28:17] <theskillwithin> but a crafty solution could be harder to read as well.  so its up in the air
[09:28:31] <wroathe> It's not that hard to read: https://gist.github.com/JustinChristensen/ffed929634f70791b4706614fb034d60
[09:28:34] <wroathe> :P
[09:30:10] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 265 seconds)
[09:30:29] *** Quits: N4buc0 (~N4buc0@2001:1284:f016:620f:b9ce:95b0:91a2:4e6f) (Ping timeout: 255 seconds)
[09:30:45] <paulcarroty> definitely not the best example of "not hard"
[09:31:18] <wroathe> Well, in a real application there'd only be one chain. I was just demonstrating that it hits the appropriate handle with multiple tests
[09:32:06] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 255 seconds)
[09:32:29] *** Quits: N4buc0- (~N4buc0@2001:1284:f013:30e6:bf5f:7175:1170:8f46) (Client Quit)
[09:32:45] <wroathe> Promise.resolve().then(inSteps([callFirstApi, handleFirstApiError], [callSecondApi, handleSecondApiError], [callThirdApi, handleThirdApiError])).then(...)
[09:32:56] *** Joins: N4buc0 (~N4buc0@2001:1284:f013:30e6:bf5f:7175:1170:8f46)
[09:33:27] *** Joins: ormaaj2 (~6174bb9b@user/ormaaj)
[09:33:30] <wroathe> Better than nesting .then, anyway
[09:33:50] <theskillwithin> not a fan on mutation
[09:34:02] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[09:34:16] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[09:34:31] <theskillwithin> ei steps.pop  and having to keep track of the step i
[09:35:29] <paulcarroty> `let runTestCheckThis = await  Promise.resolve( checkExactlyThatPart(callThirdApi, handleThirdApiError))`
[09:35:52] <paulcarroty> this is about readability
[09:36:34] <theskillwithin> well on some level its a generator kinda logic right
[09:36:58] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[09:38:06] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Remote host closed the connection)
[09:38:26] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[09:39:42] <wroathe> theskillwithin: the step i is just there for an example, so we can see that it's hitting the correct handler in the test
[09:39:45] <theskillwithin> so i guess could use recursive function to be more "functional".  but at this point who cares lol
[09:40:20] <theskillwithin> hmm
[09:40:43] <theskillwithin> oh oops, ya
[09:41:08] <wroathe> theskillwithin: https://jsfiddle.net/zs74a6vp/ check output
[09:41:42] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:79de:2735:de11:f577) (Quit: Leaving)
[09:44:30] <theskillwithin> wroathe right, but i mean, i would want to do without mutating steps
[09:45:15] <wroathe> theskillwithin: steps is not the user's array, so it doesn't matter if it's mutated
[09:45:29] <wroathe> theskillwithin: But if you insist, you could use an index instead of popping
[09:46:06] <wroathe> theskillwithin: if (i >= steps.length) return x; // for the base case
[09:46:24] <wroathe> theskillwithin: [stepFn, errFn] = steps[i]
[09:47:48] <theskillwithin> lol forgive my nit picking, is a good example, i just can't help myself cuz i like my style
[09:47:59] <wroathe> theskillwithin: What's your style here?
[09:48:36] <wroathe> Oh, I suppose I can do it another way
[09:48:43] <wroathe> Uno momento
[09:48:49] <theskillwithin> id have recursive function,  and each time u pass i to it you do i + 1
[09:49:09] <theskillwithin> hrmm
[09:50:02] <theskillwithin> either that or reduce, cuz reduce is sync
[09:50:42] <theskillwithin> i'd prob jump through more hoops than i'd have to just to avoid mutation
[09:50:51] *** Joins: stenno (~stenno@user/stenno)
[09:50:53] <wroathe> theskillwithin: You won't be able to do this with reduce
[09:51:01] <wroathe> theskillwithin: And yeah, using an index is an option
[09:51:27] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[09:52:57] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:53:13] *** calcmandan_ is now known as calcmandan
[09:53:30] <theskillwithin> reduce is often used as a hack to do promises in a sync manner, but in this case u want to skip after a fail, so reduce not ideal
[09:56:46] <wroathe> theskillwithin: https://jsfiddle.net/zs74a6vp/1/ better?
[09:57:09] <wroathe> theskillwithin: I keep forgetting JS supports rest for destructuring arrays
[09:57:18] <theskillwithin> yessss
[09:58:42] <wroathe> theskillwithin: Unless the JS interpreter can recognize this it'll end up creating a new array for each step though, so that's potentially a con over the .pop() based approach
[09:58:52] <wroathe> recognize and optimize this*
[09:59:26] <theskillwithin> oh yikes
[09:59:38] <ljharb> that doesn't matter tho
[09:59:43] <ljharb> creating objects and arrays is cheap
[09:59:54] <wroathe> theskillwithin: immutability comes at a cost ;)
[10:00:02] <theskillwithin> either way that last fiddle is yes i like it a lot wroathe
[10:00:32] <theskillwithin> i feel like mutation comes with a cost
[10:00:53] <wroathe> The index based approach is probably best, but this last one makes the haskell nerd in me happy
[10:02:27] <theskillwithin> wait holdup, why is my aws sqs serverless thing have data i didn't put into it, but data from a previous
[10:02:36] <theskillwithin> oh mutation
[10:04:20] <theskillwithin> wroathe the index based approach is the same as u did,  u just pass step, i = 0,   then nextStep(i+1)
[10:04:27] <theskillwithin> wroathe just you did it here in a more cleaver way
[10:05:16] <theskillwithin> which is rest params so its not mutating
[10:05:19] <wroathe> theskillwithin: Are you just clarifying? Or was there a question there.
[10:05:33] <theskillwithin> no question =]
[10:06:13] <wroathe> theskillwithin: Yes, the index based approach is best because there's 1. No need to modify an array and 2. No need to create new arrays for each call
[10:06:41] <wroathe> theskillwithin: But the mutation here really isn't a concern, because the array will only exist within inSteps. From the user's point of view there was never an array to begin with.
[10:09:29] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[10:10:05] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Client Quit)
[10:13:57] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Ping timeout: 255 seconds)
[10:18:04] <wroathe> theskillwithin: Ok, last one: https://jsfiddle.net/2yndo7ap/
[10:18:06] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.0.1)
[10:19:42] <theskillwithin> yep still good
[10:19:48] *** Quits: aexijh (~aexijh@bras-vprn-unvlon5573w-lp130-07-174-93-47-157.dsl.bell.ca) (Ping timeout: 255 seconds)
[10:20:40] <theskillwithin> wait well,  if you throw, doesn't it go directly to the .catch
[10:21:49] *** Joins: codebam (~codebam@user/codebam)
[10:22:03] <theskillwithin> nvm too late at night to go down that raod
[10:25:39] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 255 seconds)
[10:26:43] <wroathe> theskillwithin: If one of the functions on the left hand side throws it'll go to the error function on the right hand side
[10:29:55] *** Joins: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl)
[10:36:16] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[10:40:14] *** Joins: ggnoredo (~user@78.186.15.89)
[10:42:13] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[10:46:39] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Ping timeout: 258 seconds)
[10:51:22] *** Joins: fef (~thedawn@user/thedawn)
[10:52:28] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:54:54] *** Quits: jazzy (~jaziz@2600:380:c07e:8a82:9884:b8b5:d3c:5188) (Ping timeout: 255 seconds)
[10:56:42] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 255 seconds)
[11:10:47] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275)
[11:12:47] *** Quits: bambanxx (~bambanx@181-163-43-244.baf.movistar.cl) (Remote host closed the connection)
[11:16:15] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[11:19:20] *** Joins: silly (~silly@user/silly)
[11:29:08] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:30e6:bf5f:7175:1170:8f46) (Quit: Leaving)
[11:44:42] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 272 seconds)
[11:57:06] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 265 seconds)
[11:59:49] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:02:11] *** Joins: cismee (~cisme_@2600:1700:d980:1a40:3769:288e:d2c5:9a56)
[12:02:50] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[12:03:04] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 272 seconds)
[12:03:13] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:03:21] *** Quits: cisme_ (~cisme_@user/cisme/x-1186982) (Ping timeout: 276 seconds)
[12:10:02] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) ()
[12:12:23] *** Joins: gggpkm (~gggpkm@60.10.23.164)
[12:14:21] <birkoff> i have an event binding jquery code that won't be effective when loaded from a script but it gets in effect after I type it in the developer's console. what can be the reasons ?
[12:16:29] *** Joins: l__q (~modinfo@user/modinfo)
[12:17:05] <Booster2ooo> birkoff: the element you're binding the event listener to is not present at the moment your code is executed
[12:17:31] *** Quits: ggnoredo (~user@78.186.15.89) (Read error: Connection reset by peer)
[12:17:53] <Booster2ooo> if it's just a page loading, you may want to wait for the DOM to be fully loaded. If the element is renderer after an async call, either use delegation or bind the listener after adding the element to the DOM
[12:19:04] <birkoff> there is nothing special about the element
[12:21:13] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[12:21:28] *** Joins: jazzy (~jaziz@2600:380:c07e:8a82:9884:b8b5:d3c:5188)
[12:21:45] *** Joins: ggnoredo` (~user@server-46.45.159.117.as42926.net)
[12:21:47] *** Joins: fef (~thedawn@user/thedawn)
[12:23:04] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 252 seconds)
[12:23:26] *** Joins: Axy (~Axy@user/axy)
[12:27:16] <theskillwithin> birkoff prop 7 years since iv used jquery but isn't it like $(docmumet).ready(() => {})
[12:27:45] <theskillwithin> document
[12:28:46] <theskillwithin> or put the script tag at the end of the body tag
[12:28:51] <theskillwithin> or use defer
[12:30:22] <birkoff> I tried putting the script tag at the end of the body tag to no avail
[12:31:31] <birkoff> but document.ready is alright
[12:31:49] <theskillwithin> that works?
[12:31:56] <birkoff> yes
[12:32:10] <birkoff> maybe jquery isn't loaded in time for the script ?
[12:32:31] <theskillwithin> lol, nope that uses jqeuery
[12:32:34] <birkoff> I've put the script tag for it before the local script
[12:32:53] <theskillwithin> well glad i gave u a solution
[12:33:07] <birkoff> thanks
[12:34:26] <theskillwithin> side note, its a lot easier these days to do pure js without jquery
[12:35:32] *** Quits: ggnoredo` (~user@server-46.45.159.117.as42926.net) (Ping timeout: 245 seconds)
[12:42:23] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:43:51] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:45:25] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[12:46:00] *** Joins: hygl (uid16621@id-16621.tinside.irccloud.com)
[12:47:13] <theskillwithin> javascript30.com
[12:49:35] *** Quits: l__q (~modinfo@user/modinfo) (Remote host closed the connection)
[12:49:57] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[12:50:01] *** Joins: l__q (~modinfo@user/modinfo)
[12:50:43] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[12:58:41] *** Joins: chao (~stenno@user/stenno)
[12:59:27] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[13:01:05] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[13:04:37] *** Joins: Naan` (~Naan@user/naan)
[13:09:13] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:09:14] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[13:09:14] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[13:10:46] <theskillwithin> chao hm
[13:11:11] <chao> hm?
[13:22:07] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:24:22] *** Joins: pulse (~pulse@user/pulse)
[13:26:13] *** Joins: Crassus (~Crassus@user/crassus)
[13:30:53] *** Joins: silly_ (~silly@user/silly)
[13:34:17] *** Quits: silly (~silly@user/silly) (Ping timeout: 245 seconds)
[13:34:39] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 255 seconds)
[13:34:44] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[13:35:41] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[13:37:18] *** Joins: pulse (~pulse@user/pulse)
[13:37:21] *** Quits: gggpkm (~gggpkm@60.10.23.164) (Ping timeout: 255 seconds)
[13:39:07] *** Joins: eXistenZ (~biskit@bzq-109-65-243-126.red.bezeqint.net)
[13:40:30] *** Joins: Lyn (~Lyn@user/law)
[13:41:14] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 250 seconds)
[13:41:59] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[13:46:40] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[13:46:47] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[13:48:20] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Read error: Connection reset by peer)
[13:48:41] *** Jigsy` is now known as Jigsy
[13:48:50] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[13:56:21] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Remote host closed the connection)
[13:56:39] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[13:58:15] *** Joins: CiaoSen (~Jura@p200300c95722a400dbe4133b387f39b9.dip0.t-ipconnect.de)
[13:58:15] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[13:59:06] *** Quits: xsperry (~as@user/xsperry) ()
[14:03:48] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[14:05:56] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 272 seconds)
[14:06:25] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Remote host closed the connection)
[14:09:19] *** Quits: CiaoSen (~Jura@p200300c95722a400dbe4133b387f39b9.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[14:09:43] *** Joins: CookE[] (~thedawn@user/thedawn)
[14:10:00] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[14:10:08] *** Joins: CiaoSen (~Jura@p200300c95722a400dbe4133b387f39b9.dip0.t-ipconnect.de)
[14:11:02] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Read error: Connection reset by peer)
[14:13:55] *** Joins: d[-_-]b (~stenno@user/stenno)
[14:14:18] *** Quits: sickdyd (~sickd@FL1-119-239-103-161.tky.mesh.ad.jp) (Ping timeout: 268 seconds)
[14:14:42] *** Quits: CiaoSen (~Jura@p200300c95722a400dbe4133b387f39b9.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[14:16:42] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 272 seconds)
[14:18:57] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:f02f:cbf7:4060:786c)
[14:24:20] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Remote host closed the connection)
[14:25:59] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[14:27:18] *** Quits: d[-_-]b (~stenno@user/stenno) (Ping timeout: 255 seconds)
[14:28:39] <birkoff> i'm disabling inputs upon form submit to prevent sending empty queries, but when I go back in history to the form's page the inputs stay disabled.
[14:28:45] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Quit: Client closed)
[14:29:20] <birkoff> how can I have them re-enabled while preserving the inputs value
[14:30:10] *** Quits: guy_frm_yogaland (~gourab@2409:4062:238a:b172:2fad:104f:b1f2:ce09) (Remote host closed the connection)
[14:30:40] *** Quits: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275) (Quit: Leaving)
[14:31:38] <Cork> birkoff: check the history pop event
[14:32:06] <Cork> https://developer.mozilla.org/en-US/docs/Web/API/Window/popstate_event
[14:32:26] *** Joins: xsperry (~as@user/xsperry)
[14:33:26] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[14:34:07] *** Quits: eXistenZ (~biskit@bzq-109-65-243-126.red.bezeqint.net) (Quit: Leaving)
[14:35:50] *** Joins: d[-_-]b (~stenno@user/stenno)
[14:37:02] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[14:40:21] *** Quits: d[-_-]b (~stenno@user/stenno) (Ping timeout: 255 seconds)
[14:42:44] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[14:44:27] *** Joins: thiras (~thiras@user/thiras)
[14:55:10] *** Quits: CookE[] (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[14:57:41] <birkoff> can you explain how should I use it ?
[14:58:42] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:03:06] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 258 seconds)
[15:04:16] *** Joins: Lynn (~Lyn@user/law)
[15:04:20] *** Joins: makara (~sol@196.61.111.63)
[15:04:31] <makara> how do I import from the disk?
[15:04:56] <makara> i tried adding this repo as a submodule and then "import getRandom from "file:///random-useragent/index.js";"
[15:05:02] <makara> but it complains
[15:05:54] <makara> i can `import randomItem from "https://jslib.k6.io/k6-utils/1.1.0/index.js";` noo problem
[15:07:26] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[15:07:32] <birkoff> can I change font appearance for an input field that will not affect placeholder ?
[15:07:47] <birkoff> er sorry this is for css
[15:07:51] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:07:57] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 268 seconds)
[15:14:06] *** Joins: l__q (~modinfo@user/modinfo)
[15:20:43] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:22:09] *** Joins: d[-_-]b (~stenno@user/stenno)
[15:22:45] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 268 seconds)
[15:24:26] <Koopz> am i stupid?
[15:24:38] *** d[-_-]b is now known as stenno
[15:24:46] <Koopz> css selectors can't be that hard
[15:25:20] <Koopz> '#foo .bar' > .bar element returned
[15:25:26] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:25:29] <Koopz> '#foo .bar:last-child' > null
[15:25:31] <stenno> they are sometimes not intuitive
[15:25:39] <stenno> for example regarding last-child
[15:25:49] <stenno> this does not match the last .bar
[15:25:56] <stenno> it maches _if_ the last-child is a .bar
[15:26:10] <stenno> s/if/when/
[15:26:13] *** Joins: entuland (~entuland@user/entuland)
[15:26:38] <Koopz> xD
[15:26:42] <stenno> so if your markup is <div id='foo'><div class='bar'></div><div class='zomg'></div></div>
[15:26:49] <Koopz> and it didn't because of a stupid <hr> after it
[15:27:20] <Koopz> aight very intuitive, wish MDN would have a note for that
[15:28:11] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[15:30:25] <Cork> Koopz: you might want to checkout last-of-type https://developer.mozilla.org/en-US/docs/Web/CSS/:last-of-type
[15:30:56] <Cork> it s much newer selector and is often simpler to use for this kind of things
[15:34:01] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:f02f:cbf7:4060:786c) (Ping timeout: 246 seconds)
[15:37:16] *** Joins: Akimbas (~Akimb@82-135-197-171.static.zebra.lt)
[15:39:07] <hassoon> Koopz: remove the quotes
[15:40:54] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[15:40:56] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Ping timeout: 272 seconds)
[15:41:54] <OnkelTem> Hi all. Folks I have a problem with installing my npm package from a private registry. I configured the scope, pointing it to the proper place. But whenever I try to install it with npm, it goes to npmjs.com!
[15:42:49] <OnkelTem> I have this record in my ~/.npmrc: @ourscope:registry=http://gitlab.our.domain/api/v4/packages/npm/
[15:42:54] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[15:43:09] <OnkelTem> so I would expect when I use `npm i`, it would have used that. But no way
[15:43:41] <OnkelTem> and `npm i @ourscope/some-package` - just ignores the configuration
[15:44:05] <OnkelTem> Any ideas? npm 6.14.12
[15:45:56] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[15:45:56] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[15:45:56] *** Joins: Heraes (~Heraes@user/romarain)
[15:45:59] <OnkelTem> npm get confirms that the scope is setup
[15:48:39] <siyb> OnkelTem: did you change the repo of the dependency? i.e. was the dep on npmjs.com beforehand? if so, the lock file might list the wrong repo
[15:48:43] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Ping timeout: 246 seconds)
[15:49:50] <OnkelTem> siyb: I'm not sure how to answer. Which dep? You mean just deleting package-lock.json maybe? I can do that
[15:50:25] <OnkelTem> I don't really understand what is setting dep on npmjs.com
[15:50:56] <OnkelTem> Is there a sort of a verbose mode of npm, which would show WHY does it decide to ignore my repo?
[15:51:02] <siyb> OnkelTem: you could also try "npm view @yourscope/yourpackage"
[15:51:09] <OnkelTem> With the usual --verbose it doesn't show that
[15:51:16] <OnkelTem> siyb: thanks! Let me try
[15:51:17] <siyb> OnkelTem: npm install --loglevel silly
[15:51:38] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[15:51:46] <siyb> or --verbose, but silly is the most verbose output
[15:52:07] <OnkelTem> With that command it tries to do the same
[15:52:17] <OnkelTem> npm http fetch GET 404 https://registry.npmjs.org/@ourscope/package-name 295ms
[15:52:24] <siyb> OnkelTem: we moved a dependency from our old internal repository to the gitlab npm repository and had similar issues because of the repo that was listed in the lock file
[15:52:42] <OnkelTem> ok, killingg package lock file now
[15:53:05] <OnkelTem> oh wait, I don't have any :)
[15:53:24] <OnkelTem> it's a new dir with just npm init -y's package.json
[15:53:54] <OnkelTem> Is there an npm cache elsewhere maybe?
[15:54:04] <OnkelTem> or a lock file, be it damned
[15:57:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[16:00:48] *** Joins: stenno (~stenno@user/stenno)
[16:03:45] <OnkelTem> crap, this is the most fucked up issue I've ever seen with NPM
[16:04:30] *** Joins: johtso (~johtso@user/johtso)
[16:04:52] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[16:05:35] <johtso> Should it generally be possible to use a package that makes use of a core node library like "https" in the browser?
[16:05:45] <johtso> is this something that webpack takes care of?
[16:08:35] <stenno> no
[16:09:26] <johtso> stenno: do you have to use something like browserify?
[16:10:35] <johtso> I'm not sure why this mentions "potential browser use" in the first paragraph of the readme if it uses the https package.. https://github.com/fent/node-miniget
[16:12:01] *** Joins: federico_it (~textual@151.51.82.235)
[16:14:06] <siyb> OnkelTem: so there is no lock file and no node_modules directory, right?
[16:14:15] <OnkelTem> siyb: exactly
[16:15:17] <siyb> OnkelTem: because we also had the issue of "old" node_modules directories which smuggled in faulty registry entries into the lock file. i.e. a developer would run npm install with an existing node_modules directory and the faulty dependencies cached in node_modules would transfer into the lock file
[16:16:58] <siyb> OnkelTem: npm config ls -l|grep -i ":registry" - what does this print?
[16:17:54] *** Quits: kmh (~kmh@p200300df5f0e070091a51dbb61f38469.dip0.t-ipconnect.de) (Quit: Leaving)
[16:18:55] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:25:26] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:27:25] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:29:00] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[16:31:06] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Read error: Connection reset by peer)
[16:31:27] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[16:40:59] *** Joins: Zal (~Isthmus@user/isveni)
[16:44:13] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-21.prtc.net)
[16:47:54] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:52:00] *** Quits: Akimbas (~Akimb@82-135-197-171.static.zebra.lt) (Read error: Connection reset by peer)
[16:52:39] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:35db:5f4c:1a3f:8b1c)
[16:57:12] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[16:57:56] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[16:58:03] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[17:00:44] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:04:21] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 255 seconds)
[17:09:26] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[17:23:38] *** Joins: The_Blode (~Blode@92.40.180.225.threembb.co.uk)
[17:23:40] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[17:26:04] *** Joins: mearp (~mearp@154.13.1.151)
[17:26:19] *** Joins: brian_da_mage (~Neuromanc@user/briandamag)
[17:27:53] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[17:28:25] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[17:29:10] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[17:32:26] *** Quits: jazzy (~jaziz@2600:380:c07e:8a82:9884:b8b5:d3c:5188) (Ping timeout: 255 seconds)
[17:32:52] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Remote host closed the connection)
[17:33:52] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Quit: Client closed)
[17:35:10] *** Joins: thiras (~thiras@user/thiras)
[17:35:27] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[17:39:45] *** Joins: swn_ (~sweeney@user/swn)
[17:40:11] *** Joins: c4ntelope (~cantelope@173-27-116-255.client.mchsi.com)
[17:40:20] *** Joins: pycode (~pycode@93-40-5-81.ip36.fastwebnet.it)
[17:40:58] *** Joins: theskillwithin_ (theskillwi@2600:3c01::f03c:91ff:fee0:d25d)
[17:41:01] *** Joins: happymeal` (~happymeal@75-28-166-198.lightspeed.tukrga.sbcglobal.net)
[17:41:10] *** Quits: happymeal` (~happymeal@75-28-166-198.lightspeed.tukrga.sbcglobal.net) (Client Quit)
[17:41:15] *** Joins: chowmein__ (~chowmeine@user/chowmeined)
[17:41:33] *** Joins: happymeal` (~happymeal@75-28-166-198.lightspeed.tukrga.sbcglobal.net)
[17:41:34] *** Joins: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch)
[17:42:07] *** Joins: polyrob_ (~rob@user/polyrob)
[17:42:11] *** Joins: Woet_ (~me@irc.woet.me)
[17:42:20] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:35db:5f4c:1a3f:8b1c) (Ping timeout: 255 seconds)
[17:42:26] *** Joins: vbgunz_ (~vbgunz@35.141.71.47)
[17:42:42] *** Joins: Daniel151 (~daniel@d.sb)
[17:42:44] *** Joins: JoelJoel (~jjshoe@user/joel)
[17:42:59] *** Joins: incognito_ (~relativit@171.11.13.109.rev.sfr.net)
[17:43:28] *** Joins: doc|home (~doc@user/doc)
[17:43:49] *** Joins: electr0n_ (~electr0n@hunt.revrse.sh)
[17:43:59] *** Joins: penthief (~penthief@user/penthief)
[17:44:08] *** Joins: nullheroes (~danielvu@168.235.66.22)
[17:44:11] *** Joins: \mSg_mini (~mSg@user/msg/x-0285936)
[17:44:11] *** Joins: JayDoubleu_ (sid339529@id-339529.stonehaven.irccloud.com)
[17:44:19] *** Joins: jakesyl_ (sid56879@id-56879.stonehaven.irccloud.com)
[17:44:23] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Killed (osmium.libera.chat (Nickname regained by services)))
[17:44:32] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[17:44:34] *** Joins: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de)
[17:44:37] *** Joins: terrorjack2 (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com)
[17:44:40] *** Joins: lesihctej (jetchisel@user/jetchisel)
[17:44:47] *** Joins: luny` (~luny@52.178.89.202)
[17:45:02] *** Joins: rg1 (~rg@user/rg)
[17:45:11] *** Quits: happymeal` (~happymeal@75-28-166-198.lightspeed.tukrga.sbcglobal.net) (Changing host)
[17:45:11] *** Joins: happymeal` (~happymeal@user/happymeal)
[17:46:14] *** Quits: The_Blode (~Blode@92.40.180.225.threembb.co.uk) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[17:46:16] *** Quits: lesihctej (jetchisel@user/jetchisel) (Client Quit)
[17:46:31] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[17:46:41] *** Joins: lockdown_ (~lockdown@ec2-3-236-147-4.compute-1.amazonaws.com)
[17:46:50] *** Joins: t3nj1n_ (~t3nj1n@108.5.82.237)
[17:47:03] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[17:47:10] *** Joins: The_Blode (~Blode@92.40.180.231.threembb.co.uk)
[17:47:37] *** Quits: azizLIGHT (~azizLIGHT@user/azizlight) (Killed (lithium.libera.chat (Nickname regained by services)))
[17:47:57] *** Joins: azizLIGHT (~azizLIGHT@user/azizlight)
[17:48:35] *** Joins: lvlinux (~ruel@falcon.ruhnet.net)
[17:48:48] *** Quits: vbgunz (~vbgunz@35.141.71.47) (*.net *.split)
[17:48:48] *** Quits: ormaaj2 (~6174bb9b@user/ormaaj) (*.net *.split)
[17:48:48] *** Quits: t3nj1n (~t3nj1n@108.5.82.237) (*.net *.split)
[17:48:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (*.net *.split)
[17:48:48] *** Quits: chowmeined (~chowmeine@user/chowmeined) (*.net *.split)
[17:48:48] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[17:48:48] *** Quits: arthurpbs_ (~arthurpbs@168.121.98.109) (*.net *.split)
[17:48:48] *** Quits: \mSg (~mSg@user/msg/x-0285936) (*.net *.split)
[17:48:48] *** Quits: incognito (~relativit@user/incognito) (*.net *.split)
[17:48:48] *** Quits: rndusr (~rndusr@user/rndusr) (*.net *.split)
[17:48:48] *** Quits: swn (~sweeney@user/swn) (*.net *.split)
[17:48:48] *** Quits: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net) (*.net *.split)
[17:48:49] *** Quits: happymeal (~happymeal@user/happymeal) (*.net *.split)
[17:48:49] *** Quits: cantelope (~cantelope@173-27-116-255.client.mchsi.com) (*.net *.split)
[17:48:49] *** Quits: luny (~luny@52.178.89.202) (*.net *.split)
[17:48:49] *** Quits: jakesyl (sid56879@stonehaven.irccloud.com) (*.net *.split)
[17:48:49] *** Quits: ruel (~ruel@falcon.ruhnet.net) (*.net *.split)
[17:48:49] *** Quits: hardtotell (~hardtotel@satyr.seedboxes.cc) (*.net *.split)
[17:48:49] *** Quits: dvu (~danielvu@168.235.66.22) (*.net *.split)
[17:48:49] *** Quits: rg (~rg@user/rg) (*.net *.split)
[17:48:49] *** Quits: polyrob (~rob@user/polyrob) (*.net *.split)
[17:48:49] *** Quits: Daniel15 (~daniel@d.sb) (*.net *.split)
[17:48:49] *** Quits: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com) (*.net *.split)
[17:48:49] *** Quits: electr0n (~electr0n@hunt.revrse.sh) (*.net *.split)
[17:48:49] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (*.net *.split)
[17:48:49] *** Quits: lockdown (~lockdown@ec2-3-236-147-4.compute-1.amazonaws.com) (*.net *.split)
[17:48:49] *** Quits: matthewcroughan_ (~quassel@static.211.38.12.49.clients.your-server.de) (*.net *.split)
[17:48:49] *** Quits: shailangsa (~shailangs@host86-186-196-229.range86-186.btcentralplus.com) (*.net *.split)
[17:48:49] *** Quits: theskillwithin (~theskillw@user/theskillwithin) (*.net *.split)
[17:48:49] *** Quits: JayDoubleu (sid339529@stonehaven.irccloud.com) (*.net *.split)
[17:48:49] *** Quits: Joel (~jjshoe@user/joel) (*.net *.split)
[17:48:49] *** Quits: Woet (~me@irc.woet.me) (*.net *.split)
[17:48:49] *** Quits: doc (~doc@user/doc) (*.net *.split)
[17:48:49] *** Quits: skunnard (~penthief@user/penthief) (*.net *.split)
[17:48:49] *** polyrob_ is now known as polyrob
[17:48:49] *** terrorjack2 is now known as terrorjack
[17:48:50] *** \mSg_mini is now known as \mSg
[17:48:53] *** Daniel151 is now known as Daniel15
[17:48:55] *** jakesyl_ is now known as jakesyl
[17:48:57] *** JayDoubleu_ is now known as JayDoubleu
[17:49:07] *** swn_ is now known as swn
[17:49:07] *** Joins: hardtotell (~hardtotel@satyr.seedboxes.cc)
[17:52:43] *** Joins: arthurpbs (~arthurpbs@168.121.98.109)
[17:52:55] *** JoelJoel is now known as Joel
[17:53:52] *** Byteflux is now known as Bitflux
[17:54:09] *** Bitflux is now known as Byteflux
[17:55:25] *** Joins: muley (~muley@76-245-68-99.lightspeed.iplsin.sbcglobal.net)
[17:58:25] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-21.prtc.net) (Quit: Client closed)
[17:58:59] <lf94> Should I be binding handlers in an "useEffect" ?
[17:59:05] <lf94> (React question)
[17:59:29] <lf94> (I have a dynamic amount of elements, so I have an undetermined amount of handlers)
[18:00:00] *** Joins: vysn (~vysn@user/vysn)
[18:00:30] *** Quits: The_Blode (~Blode@92.40.180.231.threembb.co.uk) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[18:01:09] *** Joins: The_Blode (~Blode@92.40.180.225.threembb.co.uk)
[18:05:31] *** Joins: ormaaj2 (6174bb9b@user/ormaaj)
[18:05:32] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 252 seconds)
[18:06:44] *** Quits: The_Blode (~Blode@92.40.180.225.threembb.co.uk) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[18:07:28] *** Joins: han-solo (~hanish@user/han-solo)
[18:07:52] *** Joins: Shailangsa_ (~shailangs@host86-186-196-229.range86-186.btcentralplus.com)
[18:11:41] *** Joins: The_Blode (~Blode@92.40.180.221.threembb.co.uk)
[18:12:19] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[18:13:12] *** Joins: l__q (~modinfo@user/modinfo)
[18:13:12] *** Joins: incognito__ (~relativit@171.11.13.109.rev.sfr.net)
[18:14:03] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[18:14:15] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[18:15:49] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[18:16:04] <OnkelTem> siyb: sorry for the delay. npm config ls -l|grep -i ":registry" prints:
[18:16:06] <OnkelTem> @ourscope:registry = "http://gitlab.our.domain/api/v4/packages/npm/"
[18:16:18] *** Quits: incognito_ (~relativit@171.11.13.109.rev.sfr.net) (Ping timeout: 268 seconds)
[18:17:00] *** Quits: The_Blode (~Blode@92.40.180.221.threembb.co.uk) (Ping timeout: 265 seconds)
[18:18:47] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 255 seconds)
[18:18:59] *** Quits: Lynn (~Lyn@user/law) (Read error: Connection reset by peer)
[18:19:11] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:21:18] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[18:26:03] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[18:28:24] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:29:10] <siyb> OnkelTem: ok, then I am clueless :/
[18:30:35] *** Joins: stenno (~stenno@user/stenno)
[18:31:02] *** Joins: l__q (~modinfo@user/modinfo)
[18:31:04] <OnkelTem> siyb: thanks anyway for trying to help
[18:31:12] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Reconnecting)
[18:31:24] *** Joins: leduyquang753 (~leduyquan@171.234.236.141)
[18:31:32] <OnkelTem> I posted a question on SO: https://stackoverflow.com/questions/68408342/npm-ignores-its-own-configuration-of-a-private-registry
[18:31:41] *** Quits: leduyquang753 (~leduyquan@171.234.236.141) (Changing host)
[18:31:41] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[18:31:54] <nedbat> I have a POST url that returns a content to be downloaded (Content-Disposition: attachment, etc).  It works great when I post from a <form> submit.  But I need to send a JSON body in the POST. I don't know how to do that with a <form>, though I can with fetch(). But fetch() won't start the download. How do I get both effects I want?
[18:32:09] <OnkelTem> Also I searched through now archived npm community forum and their github issue queue
[18:38:27] <OnkelTem> Finally decided to try it out with the latest npm - 7.20
[18:38:32] *** Quits: pycode (~pycode@93-40-5-81.ip36.fastwebnet.it) (Ping timeout: 258 seconds)
[18:39:04] <OnkelTem> The same result: ignores the private registry, proceedes to npmjs.com
[18:40:00] *** Joins: The_Blode (~Blode@92.40.180.219.threembb.co.uk)
[18:42:48] <austincheney> nedbat, don't post with the form.  Instead in the form's submit event just use regular old XMLHttpRequest object and post it that way and then at the end of your handler return false to prevent it from trying to do the HTML post
[18:43:20] <austincheney> then you have all the control in the world of what the request looks like in both the headers and request body
[18:44:30] <nedbat> austincheney: thanks, I have code that uses fetch() already to control the POST, so that's good. But I don't know how to use the response to behave the same as a "content: attachment" response. maybe I'm overlooking something simple.
[18:45:01] *** Quits: pizdets (~pizdets@183.182.110.194) (Read error: Connection reset by peer)
[18:45:11] <austincheney> nedbat, is the goal to open the browser's "save as" dialogue?
[18:45:29] <austincheney> or to auto-download a response payload?
[18:45:33] *** Joins: pizdets_ (~pizdets@183.182.110.194)
[18:46:11] <nedbat> austincheney: yes, it's the "What should Firefox do with this file? Open / Save" dialog.
[18:47:14] <austincheney> nedbat, do you control the server and are you injecting a content-disposition header in the response?
[18:47:24] *** Quits: ormaaj2 (6174bb9b@user/ormaaj) (Ping timeout: 255 seconds)
[18:47:36] <nedbat> austincheney: yes, it's my server, I'm putting those headers in the response.
[18:47:54] <austincheney> according to the documentation it should just work: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition
[18:48:34] <nedbat> austincheney: maybe that;s the simple thing i overlooked: that i don't have to do anything special
[18:48:36] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91)
[18:48:39] <austincheney> the documentation also says to change the media type of the request to "multipart/form-data" and probably try putting that in the response as well
[18:49:54] <nedbat> austincheney: my confusion is this: it seems to me that when i use fetch(), the response is not handled by the browser as a regular response. It's up to my code to use it programmatically somehow.  I don't see how the response gets back up to the browser UI level.
[18:51:35] <austincheney> nedbat, try to associate the handler with a user interaction, such as a button or hyperlink click
[18:51:49] *** Joins: gehn (~gehn@user/gehn)
[18:52:23] <OnkelTem> Ok, now update. Even passing a registry via NPM command line doesn't make it see it
[18:52:49] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91) (Ping timeout: 246 seconds)
[18:52:53] <OnkelTem> E.g. "npm i @scoped/openapi-launcher --registry http://gitlab.our.domain/api/v4/packages/npm/"
[18:53:10] <OnkelTem> just skips that and proceeds to npmjs.com
[18:54:22] <OnkelTem> The first fetch from the log - is the npmjs.com fetch. So npm doesn't even try to request the private repo
[18:55:32] <nedbat> austincheney: that doesn't seem to do it.
[18:58:54] *** Joins: eXistenZ (~biskit@bzq-109-65-243-126.red.bezeqint.net)
[19:00:33] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:01:47] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[19:05:46] *** Quits: lf94 (~lf94@178.128.239.88) (Ping timeout: 246 seconds)
[19:05:49] <birkoff> if i do  let somevar = someobj["key1"]; delete someobj.key1;  will I lose somevar ?
[19:06:09] <entuland> try it
[19:06:22] <birkoff> i did
[19:06:26] <entuland> and?
[19:06:34] <birkoff> got an error
[19:06:34] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:06:40] <entuland> what kind of error?
[19:06:49] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 246 seconds)
[19:06:52] <birkoff> referenceerror
[19:06:57] <birkoff> somevar is not defined
[19:07:07] *** Joins: lf94 (~lf94@2604:a880:cad:d0::cd6:8001)
[19:07:08] <entuland> I guess that replies to your question?
[19:07:34] <birkoff> now how do I copy the property itself because I could only find  how to clone an entire object
[19:07:56] <entuland> depends on what you put in someobj.key1
[19:08:11] <entuland> I guess
[19:08:38] <entuland> if there was a string or a number or the alike, you shouldn't have got any error, for my understanding
[19:08:53] <birkoff> a string
[19:09:34] <entuland> n> let someobj = { key1: "sometext" }; let somevar = someobj.key1; delete someobj.key1; somevar
[19:09:35] <jellobot> (okay) 'sometext'
[19:10:00] <entuland> maybe your actual case was different?
[19:10:34] <birkoff> it works on the repl
[19:11:16] <stenno> reference error 'somevar is not defined' ?
[19:13:10] <stenno> you must have a typo somewhere, or lose the scope
[19:13:29] <birkoff> i delcared soemvar in an if clause
[19:13:37] <birkoff> taking it out side seems to have solved it
[19:14:01] <stenno> yes, `let`/`const` is block scope, not function scope like `varz
[19:14:04] <stenno> `var`
[19:14:36] <stenno> n> if (false) { let zomg = 23; } zomg; // will be undefined / accessing it will be reference error
[19:14:37] <jellobot> (fail) ReferenceError: zomg is not defined
[19:14:45] <stenno> ^ block scope
[19:16:53] <OnkelTem> Ok, i'm out of time and patience. Filed a "bug" into NPM's issue queue: https://github.com/npm/cli/issues/3554
[19:16:55] <OnkelTem> 5 hours just wasted
[19:17:26] *** Joins: Akimb (~Akimb@86.100.13.100)
[19:19:14] *** Quits: t3nj1n_ (~t3nj1n@108.5.82.237) (Ping timeout: 252 seconds)
[19:20:15] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 255 seconds)
[19:21:14] *** Joins: t3nj1n_ (~t3nj1n@108.5.82.237)
[19:21:42] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91)
[19:23:23] *** Joins: han-solo (~hanish@user/han-solo)
[19:24:45] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[19:26:04] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91) (Ping timeout: 246 seconds)
[19:26:39] <systemfault> I use different registries all the time... never had a problem...
[19:27:33] <systemfault> Ahh... for a specific scope only
[19:27:37] <systemfault> I don't know then
[19:28:48] *** Joins: l__q (~modinfo@user/modinfo)
[19:30:02] *** Quits: t3nj1n_ (~t3nj1n@108.5.82.237) (Ping timeout: 268 seconds)
[19:31:07] *** brian_da_mage is now known as Brianmancer
[19:34:08] <Booster2ooo> OnkelTem: I think it's because you're mixing up project level vs instance level uri of GitLab
[19:34:09] *** Joins: summersault (~summersau@179.221.251.16)
[19:35:22] *** Joins: guy_frm_yogaland (~gourab@2409:4062:4e92:4108:fc37:d8a1:78ff:5f90)
[19:36:02] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[19:40:08] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 265 seconds)
[19:40:11] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[19:40:35] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[19:44:03] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[19:44:51] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[19:47:17] *** Parts: theskillwithin_ (theskillwi@2600:3c01::f03c:91ff:fee0:d25d) ()
[19:47:39] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:47:51] *** Joins: theskillwithin (theskillwi@user/theskillwithin)
[19:49:38] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[19:50:59] *** Joins: summersault (~summersau@179.221.251.16)
[19:51:50] *** Joins: zebrag (~chris@user/zebrag)
[19:52:17] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[19:57:28] *** Parts: c4ntelope (~cantelope@173-27-116-255.client.mchsi.com) ()
[19:57:44] *** Joins: cantelope (~cantelope@173-27-116-255.client.mchsi.com)
[19:58:16] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 246 seconds)
[19:59:09] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:5c0d:4ab:581e:5af5)
[19:59:58] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[20:01:07] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:cc87:ce85:2ae:5eaf)
[20:01:47] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91)
[20:05:16] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[20:05:48] <nedbat> when I get a response from fetch(), how can I make the browser treat it as a regular "Content-type: attachment" response? The response has those headers (I'm writing the server as well).
[20:05:53] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[20:06:20] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:60c2:6b20:449d:8d91) (Ping timeout: 255 seconds)
[20:07:14] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[20:07:53] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[20:09:06] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[20:09:21] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[20:09:42] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[20:10:17] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[20:10:27] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[20:10:34] <GreenJello> nedbat, you want it to download it to a file?
[20:10:49] *** Joins: zebrag (~chris@user/zebrag)
[20:10:57] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[20:11:04] <nedbat> GreenJello: yes, when i make a form post to the URL, I get the "Open with or Save as" dialog. I would like that to happen.
[20:11:12] *** Joins: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx)
[20:11:33] *** Quits: yaalon (~yaalon@189.202.79.36.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[20:11:34] <GreenJello> either don't use fetch, or you'd have to do the normal work for client-side "save as"
[20:12:04] <GreenJello> which is making an <a download> and .click()ing it
[20:13:44] <GreenJello> res.blob().then(URL.createObjectURL)
[20:13:57] <GreenJello> to get the href for the <a>
[20:14:12] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[20:16:10] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Remote host closed the connection)
[20:17:41] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[20:19:35] <nedbat> GreenJello: I'm using fetch so that i can build a JSON body for the request. Is there a way to do that with a <form?
[20:19:38] <nedbat> <form>
[20:21:51] <GreenJello> nedbat, since you control the server, you could submit a form with a single field that contains a JSON string
[20:22:03] <GreenJello> plus a CSRF token
[20:23:44] *** Joins: jschaub (~jschaub@p200300eb6f2615001e697afffe6257e2.dip0.t-ipconnect.de)
[20:25:02] *** Joins: summersault (~summersau@179.221.251.16)
[20:26:09] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[20:27:04] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:cc87:ce85:2ae:5eaf) (Quit: Leaving)
[20:29:37] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[20:30:07] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:5c0d:4ab:581e:5af5) (Ping timeout: 246 seconds)
[20:31:06] <nedbat> GreenJello: hmm, true, though that might be a little harder at the server.
[20:31:59] *** Joins: summersault (~summersau@179.221.251.16)
[20:34:58] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[20:35:10] <nedbat> GreenJello: is there no way to make the fetch result work like a regular browser request?
[20:39:56] <GreenJello> nedbat, in this case, I don't think so
[20:40:32] <GreenJello> you can kinda do it in the way I described earlier, but it's going to be slower, and I don't think it works in safari
[20:41:37] <han-solo> what would `res.blob().then(blob => window.location.href = URL.createObjectURL(blob))` do ?
[20:41:38] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[20:42:49] <GreenJello> not sure
[20:43:40] *** Joins: summersault (~summersau@179.221.251.16)
[20:46:22] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[20:50:53] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[20:51:34] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:5c0d:4ab:581e:5af5)
[20:52:19] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 258 seconds)
[20:53:19] *** Quits: hygl (uid16621@id-16621.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[20:55:15] *** Joins: Jigsy (~Jigsy@user/jigsy)
[20:56:02] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[20:56:23] <han-solo> yep, that doesn't work
[20:58:28] <nedbat> han-solo: for me on firefox, it brings up the dialog, but the filename isn't what the response said.
[20:59:19] <han-solo> oh
[21:00:31] <nedbat> also in chrome.
[21:07:37] *** Joins: trevors (~trevors@2603:3005:74f:e000:5564:37b5:caef:8656)
[21:08:57] *** Quits: trevors (~trevors@2603:3005:74f:e000:5564:37b5:caef:8656) (Client Quit)
[21:09:04] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[21:09:32] *** Joins: trevors (~trevors@2603:3005:74f:e000:5564:37b5:caef:8656)
[21:11:39] <nedbat> GreenJello, han-solo: this seems to work:  https://gist.github.com/3acbc47c709bfb976f6c01bf51515421
[21:12:03] *** Joins: peterhil (~peterhil@mobile-access-bceec8-93.dhcp.inet.fi)
[21:12:37] <GreenJello> nedbat, yeah, except in safari, unless they implemented it recently
[21:13:06] <nedbat> GreenJello: looks like they did :)
[21:13:15] <GreenJello> nice;
[21:13:51] *** Joins: summersault (~summersau@179.221.251.16)
[21:14:13] *** Quits: johtso (~johtso@user/johtso) (Ping timeout: 246 seconds)
[21:16:15] <entuland> I checked some code of mine where I used the same technique, isn't there a click() method you can invoke directly on anchor elements?
[21:16:19] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:5c0d:4ab:581e:5af5) (Ping timeout: 246 seconds)
[21:16:38] <entuland> not that it makes a difference, but I wonder whether I'm using something that's not widely supported or so
[21:16:52] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[21:16:52] *** Quits: trevors (~trevors@2603:3005:74f:e000:5564:37b5:caef:8656) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:17:06] <silly_> https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click
[21:17:12] <entuland> aye, seems good
[21:17:45] <silly_> although, it's treated differently when its not user input
[21:18:04] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:cc87:ce85:2ae:5eaf)
[21:18:18] <entuland> there isn't any mention about that in the docs, how is it treated differently?
[21:18:31] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:9053:1ad6:7245:7727)
[21:19:18] <silly_> e.g. if you want to open a file dialogue from there on
[21:19:56] <entuland> you mean a "save as" behavior?
[21:19:56] <silly_> user input will do it, while a programmatiycally invoked click will not open the dialogue
[21:19:59] <silly_> or shouldn't
[21:20:04] *** Joins: Talon_ (Talon@172.77.99.199)
[21:20:14] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[21:20:22] <nedbat> silly_: in Firefox the code I pasted opens the "Open with or Save as" dialog
[21:20:27] *** Joins: trevors (~trevors@2603:3005:74f:e000:5564:37b5:caef:8656)
[21:20:37] *** Joins: [1]PlanC (~PlanC@83.218.81.19)
[21:21:40] <silly_> ok, maybe it does, but now you've been told that they are treated differently
[21:21:42] *** Quits: Shailangsa_ (~shailangs@host86-186-196-229.range86-186.btcentralplus.com) (Ping timeout: 252 seconds)
[21:21:42] *** Quits: Talon (Talon@172.77.99.199) (Ping timeout: 252 seconds)
[21:21:55] <silly_> have you tried with chrome?
[21:22:27] <entuland> my own version is pretty much the same, only differs by using click() instead of dispatching the event, and it immediately saves (at least on chrome it does)
[21:23:10] *** Quits: PlanC (~PlanC@83.218.81.19) (Ping timeout: 252 seconds)
[21:23:31] <silly_> are you using .click() after doing a real click somewhere else?
[21:23:40] <entuland> yes
[21:24:05] <silly_> now try to invoke without the real click
[21:24:06] <entuland> but the click() is invoked on a newly created anchor element, just like the above code
[21:24:29] *** Joins: Atum_ (IRC@user/atum/x-2392232)
[21:24:36] <silly_> just saying that there is a catch, like there always is...
[21:25:05] <entuland> I don't follow - you said that the difference was that a direct user input would have triggered a dialogue - in my case I'm not getting a dialogue
[21:25:12] <entuland> or did I misunderstand your point?
[21:25:39] <silly_> i mean .click doesn't equal a real click
[21:25:48] *** Joins: kmh (~kmh@p200300df5f0e070036f57036993366d1.dip0.t-ipconnect.de)
[21:25:49] *** Joins: hygl (uid16621@id-16621.tinside.irccloud.com)
[21:25:50] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[21:25:58] <nedbat> silly_: my code works just like a <form> posting to that same URL
[21:26:17] <nedbat> in firefox, chrome, and safari
[21:26:35] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 268 seconds)
[21:26:52] *** Joins: summersault (~summersau@179.221.251.16)
[21:27:23] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[21:27:26] <entuland> I can see how some things may be interpreted differently not to let JS pretend like the user clicked on some agree button or the alike, but I don't see how I can replicate it (it's just curiosity to understand how they really differ in practical use)
[21:27:33] <silly_> oh, nice. i wouldn't expect you code to work like that
[21:29:06] <silly_> well browsers are changing constantly. don't expect todays solution to work tomorrow as well
[21:29:09] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[21:29:22] <entuland> wouldn't surprise me, yes
[21:32:42] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[21:32:47] *** Joins: han-solo (~hanish@user/han-solo)
[21:32:48] *** Quits: entuland (~entuland@user/entuland) (Remote host closed the connection)
[21:33:13] <hassoon> nedbat: ah you the pythoner, i remember you
[21:33:22] *** Joins: entuland (~entuland@user/entuland)
[21:33:29] <nedbat> hassoon: here I am just "the javascript newb"!  but yes...
[21:33:33] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[21:33:49] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[21:33:59] <hassoon> nedbat: glad seeing you doing javascript
[21:34:10] <nedbat> hassoon: it's a small side project, but fun
[21:34:39] <hassoon> is it supposed to communicate with a a python backend thing ?
[21:36:06] *** Joins: Betal (~Beta@user/betal)
[21:39:17] <theskillwithin> does he speak parstle tongue?
[21:40:31] <ljharb> parsel i think
[21:40:48] *** Joins: Blackpajamas (~Blackpaja@67.69.69.78)
[21:42:08] <silly_> parsec tongue, bigspeak
[21:43:55] *** Joins: Rockwood (~Rocky@user/rocky)
[21:45:34] *** Joins: summersault (~summersau@179.221.251.16)
[21:45:45] *** Quits: Blackpajamas (~Blackpaja@67.69.69.78) (Quit: Blackpajamas)
[21:46:13] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:46:25] *** Joins: shailangsa (~shailangs@host86-186-196-229.range86-186.btcentralplus.com)
[21:46:35] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-50.prtc.net)
[21:47:02] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-50.prtc.net) (Client Quit)
[21:49:14] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[21:54:35] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[21:54:48] *** Quits: trevors (~trevors@2603:3005:74f:e000:5564:37b5:caef:8656) (Ping timeout: 250 seconds)
[21:56:08] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[21:57:52] *** Joins: swn_ (~sweeney@user/swn)
[21:58:39] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[21:58:43] *** Joins: entuland_ (~entuland@user/entuland)
[21:58:44] *** Joins: trevors (~trevors@c-65-96-46-211.hsd1.ma.comcast.net)
[21:58:48] *** Quits: entuland (~entuland@user/entuland) (Remote host closed the connection)
[21:58:50] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Read error: Connection reset by peer)
[21:58:58] *** Joins: pulse (~pulse@user/pulse)
[21:59:09] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[22:00:45] *** Quits: swn (~sweeney@user/swn) (Ping timeout: 258 seconds)
[22:01:45] <silly_> til npm search, nice, works like apt search
[22:02:03] *** Joins: trevors_ (~trevors@c-65-96-46-211.hsd1.ma.comcast.net)
[22:03:20] *** Quits: trevors (~trevors@c-65-96-46-211.hsd1.ma.comcast.net) (Ping timeout: 255 seconds)
[22:03:42] *** Joins: Blackpajamas (~Blackpaja@67.69.69.78)
[22:04:08] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Quit: Leaving...)
[22:05:59] *** entuland_ is now known as entuland
[22:06:23] *** Parts: fedorafan (~fedorafan@user/fedorafan) (Textual IRC Client: www.textualapp.com)
[22:07:09] *** Quits: skillbot (~skillbot@user/skillbot) (Remote host closed the connection)
[22:07:16] *** Joins: skillbot (~skillbot@li1200-69.members.linode.com)
[22:07:16] *** Quits: skillbot (~skillbot@li1200-69.members.linode.com) (Changing host)
[22:07:16] *** Joins: skillbot (~skillbot@user/skillbot)
[22:07:16] *** ChanServ sets mode: +v skillbot
[22:07:27] *** Joins: Pixi_ (~Pixi@user/pixi)
[22:08:32] *** Joins: WishBoy (~WishBoy@user/wishboy)
[22:09:57] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[22:10:02] <nedbat> hassoon: it's a web ui for a FastAPI served app
[22:10:28] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 252 seconds)
[22:11:30] *** Joins: pycode (~pycode@2001:b07:5d28:551:9921:511e:1596:d8f8)
[22:12:07] *** Quits: pycode (~pycode@2001:b07:5d28:551:9921:511e:1596:d8f8) (Remote host closed the connection)
[22:15:04] *** Joins: Guest9 (~Guest9@103.249.234.210)
[22:15:06] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:16:08] *** Quits: Blackpajamas (~Blackpaja@67.69.69.78) (Quit: Blackpajamas)
[22:18:30] *** Joins: summersault (~summersau@179.221.251.16)
[22:19:56] *** Quits: happymeal` (~happymeal@user/happymeal) (Ping timeout: 250 seconds)
[22:23:39] <nedbat> the app is a Mandelbrot explorer
[22:25:39] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 255 seconds)
[22:25:40] *** Joins: happymeal (~happymeal@user/happymeal)
[22:30:39] *** Joins: Pectic (~biskit@bzq-109-67-145-67.red.bezeqint.net)
[22:30:58] *** Quits: mearp (~mearp@154.13.1.151) (Quit: leaving)
[22:32:35] *** Quits: trevors_ (~trevors@c-65-96-46-211.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:32:38] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:33:27] *** Joins: l__q (~modinfo@user/modinfo)
[22:33:30] *** Quits: eXistenZ (~biskit@bzq-109-65-243-126.red.bezeqint.net) (Ping timeout: 240 seconds)
[22:33:31] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[22:33:38] *** Quits: jschaub (~jschaub@p200300eb6f2615001e697afffe6257e2.dip0.t-ipconnect.de) (Quit: Leaving)
[22:34:09] <han-solo> cool
[22:34:18] *** Joins: trevors (~trevors@c-65-96-46-211.hsd1.ma.comcast.net)
[22:37:24] *** Joins: Akimb (~Akimb@86.100.13.100)
[22:37:30] *** Quits: peterhil (~peterhil@mobile-access-bceec8-93.dhcp.inet.fi) (Ping timeout: 268 seconds)
[22:38:49] *** Joins: OhTheCode__ (~OhTheCode@61.68.64.94)
[22:42:00] *** Quits: tatiana (~OhTheCode@61.68.64.94) (Ping timeout: 252 seconds)
[22:42:52] <l__q> Today I'm added new functions to my package, string n("1_000_000") turns into regular number 1000000 https://www.npmjs.com/package/simhok :)
[22:43:29] <l__q> Do you have any ideas for new functions?
[22:43:39] *** Quits: guy_frm_yogaland (~gourab@2409:4062:4e92:4108:fc37:d8a1:78ff:5f90) (Ping timeout: 255 seconds)
[22:44:17] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[22:45:25] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[22:46:18] <entuland> did you fix the stuff we pointed out the other day?
[22:47:26] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:47:33] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:47:36] *** Joins: PlanC (~PlanC@83.218.81.19)
[22:48:26] <l__q> Can you remind me what  were?
[22:49:47] <l__q> And I will fix now
[22:50:05] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 265 seconds)
[22:50:27] *** Quits: [1]PlanC (~PlanC@83.218.81.19) (Ping timeout: 268 seconds)
[22:50:27] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 268 seconds)
[22:50:50] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[22:51:04] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[22:52:10] *** Joins: mdemo (~mdemo@c-73-40-53-74.hsd1.wv.comcast.net)
[22:52:25] <entuland> for one, abs() not behaving as the real deal
[22:52:43] <entuland> the slice hidden behind split for another
[22:53:16] <entuland> can't remember the other stuff, you may check your own logs of this chat from the past days
[22:54:32] <l__q> Yes, I know, abs() is my own function to toggle numbers
[22:54:50] <entuland> you know that to toggle numbers you just need to use unary minus, yes?
[22:54:51] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:54:54] <entuland> "toggle"
[22:55:26] <entuland> that's extremely misleading to reuse such well established and known names for something different
[22:55:56] <entuland> abs() refers to the mathematical concept of absolute value and by definition it is _always_ positive
[22:56:31] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 258 seconds)
[22:56:57] <entuland> split is well known in JS to "explode" into an array, and you're using it for a function that behave like a substring - or a slice() operating on a string
[22:57:46] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[22:59:06] <entuland> the zfill is just a very limited version of what padStart() and padEnd() already do on the string prototype
[22:59:34] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 246 seconds)
[22:59:41] <entuland> farewell
[22:59:51] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 255 seconds)
[23:00:27] *** Joins: onosendi (~onosendi@user/onosendi)
[23:00:44] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[23:03:05] *** Quits: federico_it (~textual@151.51.82.235) (Quit: Textual IRC Client: www.textualapp.com)
[23:03:46] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[23:04:10] *** Quits: trevors (~trevors@c-65-96-46-211.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:05:06] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9053:1ad6:7245:7727) (Ping timeout: 256 seconds)
[23:06:24] *** Joins: Akimb (~Akimb@86.100.13.100)
[23:08:58] *** Joins: Akimbas (~Akimb@86.100.13.100)
[23:09:49] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:e03f:68c2:3df:7ed3)
[23:11:25] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 268 seconds)
[23:12:28] *** Joins: l__q (~modinfo@user/modinfo)
[23:13:34] <l__q> sorry my internet broked up
[23:14:14] <l__q> entuland: yes, you right, I discovery padStart after I write zfill
[23:14:17] *** Joins: summersault (~summersau@179.221.251.16)
[23:14:29] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[23:17:15] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[23:18:33] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[23:18:56] <entuland> honestly, very little of that library has any real use with the vast majority of those functions being available directly with just a slightly longer syntax (or even better syntax, to an extent, since you can call some of those methods directly on the objects, such as slice() on a string
[23:21:54] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 268 seconds)
[23:23:53] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[23:25:29] *** Joins: zebrag (~chris@user/zebrag)
[23:26:51] *** Joins: skillbot1 (~skillbot@li1200-69.members.linode.com)
[23:26:51] *** Quits: skillbot1 (~skillbot@li1200-69.members.linode.com) (Changing host)
[23:26:51] *** Joins: skillbot1 (~skillbot@user/skillbot)
[23:26:51] *** ChanServ sets mode: +v skillbot1
[23:27:00] *** Quits: skillbot (~skillbot@user/skillbot) (Remote host closed the connection)
[23:29:15] *** Joins: yaalon (~yaalon@201.171.90.143.dsl.dyn.telnor.net)
[23:29:50] *** night_wulfe_ is now known as night_wulfe
[23:30:35] *** Joins: nomic2 (~nomic@2a00:23c6:9902:2401:cc87:ce85:2ae:5eaf)
[23:32:44] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:cc87:ce85:2ae:5eaf) (Ping timeout: 250 seconds)
[23:33:20] *** Quits: nomic2 (~nomic@2a00:23c6:9902:2401:cc87:ce85:2ae:5eaf) (Client Quit)
[23:33:42] *** Quits: makara (~sol@196.61.111.63) (Ping timeout: 258 seconds)
[23:33:45] *** Quits: skillbot1 (~skillbot@user/skillbot) (Remote host closed the connection)
[23:34:02] *** Joins: skillbot (~skillbot@user/skillbot)
[23:34:02] *** ChanServ sets mode: +v skillbot
[23:38:06] *** vbgunz_ is now known as vbgunz
[23:39:42] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 245 seconds)
[23:40:55] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
