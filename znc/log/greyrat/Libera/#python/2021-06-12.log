[00:00:53] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-d96d-1339-13bf-c800.res6.spectrum.com)
[00:02:39] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[00:03:37] *** Quits: kindablue (znc@irc.tpurist.com) (Quit: System Rebooting..)
[00:04:01] *** nedbat_ is now known as nedbat
[00:04:29] *** Joins: kindablue (znc@irc.tpurist.com)
[00:05:19] <jinsun> with open is not even an expression, so super annoying in many places. once I learnt about Pathlib.read_text I swtiched all my code to use that (still had to make a wrapper for encodinng = utf8 though)
[00:09:14] <ChrisWarrick> many things in python are not an expression
[00:09:50] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Quit: A random quit message)
[00:10:24] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[00:10:53] *** Quits: dvx (~dvx@185.63.97.64) (Quit: dvx)
[00:11:12] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[00:13:44] *** Quits: teut (~teut@182.69.85.39) (Quit: Connection closed)
[00:14:16] <jinsun> ya, luckily they become one if someone wraps them in a function, and it is good that pahlib did that with read_text, so now I don't have to write my own
[00:15:17] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79) (Quit: Leaving)
[00:15:56] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[00:16:56] *** Joins: Crassus (~Crassus@user/crassus)
[00:18:34] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::6e79)
[00:21:46] *** Quits: HaMsTeRs (~HaMsTeRs@210.3.201.132) (Quit: Leaving)
[00:21:57] *** Quits: Unode (~Unode@194.94.44.220) (Quit: Not that cable)
[00:22:58] *** Joins: Unode (~Unode@194.94.44.220)
[00:24:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:25:20] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[00:25:37] <mike18> hi how does @staticmethod work in python?
[00:26:27] <habnabit_> mike18, staticmethod defines __get__
[00:26:38] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[00:26:44] <mike18> but i see it returns a value
[00:26:51] <mike18> ok
[00:26:53] <habnabit_> mike18, 'it'?
[00:27:06] <mike18> how does __get__ help?
[00:27:33] <mike18> i can just implement a normal func and return somthing...
[00:27:53] <habnabit_> mike18, perhaps you can clarify what kind of answer you want for "how does it work"
[00:28:05] <mike18> you set it defines __get__
[00:28:08] <mike18> in what sense?
[00:28:17] *** Quits: RoadRunner (~kvirc@S010600fc8db51093.vc.shawcable.net) (Ping timeout: 272 seconds)
[00:28:25] <habnabit_> mike18, let's ignore that until you clarify what answer you want
[00:29:31] <mike18> oh you can call it without an object?
[00:29:42] *** Quits: re (~re@user/re) (Quit: WeeChat 3.1)
[00:29:52] <habnabit_> mike18, are you asking how to _use_ @staticmethod?
[00:30:08] <mike18> yeah
[00:30:17] <mike18> i dont see a need for staticmethod for the code atm
[00:30:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[00:30:29] <habnabit_> mike18, @staticmethod is more or less never useful
[00:30:47] <mike18> thats what i see too :D
[00:30:48] <habnabit_> mike18, @classmethod is what most people actually want
[00:31:12] *** Joins: akk (~akk@174-28-98-240.albq.qwest.net)
[00:39:30] *** Joins: petemc (~pete@vps-80fad31a.vps.ovh.net)
[00:39:40] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[00:40:01] <graingert> mike18: https://docs.python.org/3/howto/descriptor.html#static-methods
[00:40:31] <graingert> jinsun: a wrapper for encodinng?
[00:40:46] <graingert> jinsun: you just pass .read_text(encoding="utf8")
[00:41:08] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[00:42:14] *** Joins: entuland (~entuland@user/entuland)
[00:44:54] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[00:46:03] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[00:46:05] *** Joins: ideopathic (~ideopathi@204.102.215.22)
[00:46:15] <graingert> jinsun: ;) https://www.irccloud.com/pastebin/8hMlWzYw/inject_cmgr.py
[00:47:02] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 252 seconds)
[00:48:08] *** Joins: cliluw (~cliluw@47.147.80.149)
[00:49:25] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 265 seconds)
[00:50:29] *** Joins: dicajo (~dicajo@072-186-122-186.res.spectrum.com)
[00:52:11] *** Joins: ssbr (~ssbr@2620:15c:10f:203:f673:842d:4bf7:5814)
[00:52:23] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 268 seconds)
[00:52:38] *** Joins: kek_ (~kek_@178.197.226.217)
[00:52:48] *** Joins: RoadRunner (~kvirc@S010600fc8db51093.vc.shawcable.net)
[00:53:16] *** Quits: dicajo (~dicajo@072-186-122-186.res.spectrum.com) (Client Quit)
[00:53:42] *** Quits: brownan (~brownan@136.56.137.143) (Ping timeout: 264 seconds)
[00:54:06] *** Quits: the-mask (~the-mask@user/the-mask) (Ping timeout: 252 seconds)
[00:54:48] <jinsun> graingert: neat, we can get rid of all with statements :D
[00:56:20] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[00:56:42] *** Joins: fofoni_ (~fofoni@user/fofoni)
[00:57:38] <graingert> jinsun: I use twisted py2 inline callbacks
[00:57:47] <graingert> This is how we have to do async context managers
[00:59:54] *** Joins: sharksauce (~sharksauc@user/sharksauce)
[00:59:57] *** Quits: fofoni (~fofoni@user/fofoni) (Ping timeout: 272 seconds)
[01:00:05] *** Quits: fofoni_ (~fofoni@user/fofoni) (Remote host closed the connection)
[01:00:22] *** Quits: sharksauce (~sharksauc@user/sharksauce) (Quit: WeeChat 3.1)
[01:01:25] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[01:02:57] <jinsun> graingert: example?
[01:04:21] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 244 seconds)
[01:04:39] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:04:55] <Vision> graingert: python 2 is EOL.  stop using it.
[01:05:50] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[01:05:53] <graingert> Vision: no u
[01:06:39] *** Quits: drew (~drew@user/drew) (Read error: Connection reset by peer)
[01:07:47] *** Joins: drew (~drew@user/drew)
[01:08:09] <habnabit_> Vision, are you volunteering your time to help port the py2 code? ;)
[01:08:27] *** Quits: Nei (~ailin@user/nei) (Changing host)
[01:08:27] *** Joins: Nei (~ailin@user/nemui)
[01:08:37] <Vision> nope, simply saying what needs said
[01:08:37] *** Quits: Nei (~ailin@user/nemui) (Changing host)
[01:08:38] *** Joins: Nei (~ailin@user/nei)
[01:08:45] *** Quits: Nei (~ailin@user/nei) (Changing host)
[01:08:45] *** Joins: Nei (~ailin@user/nemui)
[01:09:12] <habnabit_> Vision, i'm afraid i don't think 'stop using it' is a very helpful sentiment
[01:09:24] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[01:09:27] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 272 seconds)
[01:09:32] <graingert> fwiw I'm waiting for a 2 years in the making py3 port to go though QA
[01:09:33] <Vision> you're free to think that
[01:09:58] *** Joins: cliluw (~cliluw@47.147.80.149)
[01:10:34] *** Quits: aslicedbanjo (~aslicedba@host31-52-127-233.range31-52.btcentralplus.com) (Quit: Leaving.)
[01:10:57] <habnabit_> Vision, be the change you want to see in the world
[01:11:39] <Vision> habnabit_: easier to tell other people to change
[01:11:43] *** Joins: aminvakil (~aminvakil@2a01:4f8:120:336b:4::1)
[01:12:12] *** Joins: brownan (~brownan@136.56.137.143)
[01:12:17] <aminvakil> how can i search for wildcards in a string?
[01:12:26] <habnabit_> aminvakil, can you give an example?
[01:12:44] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 268 seconds)
[01:12:47] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:12:52] <aminvakil> habnabit_:  "kernel*" in "kernel kernel-libs"
[01:13:29] <habnabit_> aminvakil, you can already write `"kernel" in "kernel kernel-libs"` in python
[01:14:07] <aminvakil> yes, but i also want to check if it is kernel*
[01:14:22] *** Quits: brownan (~brownan@136.56.137.143) (Client Quit)
[01:14:31] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[01:14:32] <habnabit_> aminvakil, what's the difference?
[01:14:38] *** Joins: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38)
[01:14:42] <aminvakil> this is the whole issue: https://github.com/ansible-collections/community.general/issues/2761
[01:14:48] *** Joins: cthulchu_ (~Cthulchu@78.26.214.75)
[01:15:09] <aminvakil> i've written "if single_pkg not in versionlock_packages:"
[01:15:21] <aminvakil> and a user has put kernel* in single_pkg and it's not working as expected
[01:15:31] <nedbat> Vision: I appreciate your advocacy for upgrading Python versions. I think you might need a different approach if you want to be effective.
[01:16:14] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 244 seconds)
[01:16:16] <aminvakil> habnabit_: so i'm trying to replace "if single_pkg not in versionlock_packages" with something else that also matches strings with asterisk in it
[01:16:28] *** Joins: audiocat (~audio@2603-8081-1800-0062-be1e-1890-b1db-fd05.res6.spectrum.com)
[01:16:31] *** Joins: cth (~Cthulchu@78.26.214.75)
[01:16:40] <jinsun> aminvakil: there is fnmatch in stdlib https://docs.python.org/3/library/fnmatch.html
[01:16:43] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[01:16:45] <Vision> nedbat: I'll leave that to others.  Pretty happy with my current approach.
[01:16:48] <habnabit_> aminvakil, yeah fnmatch ^
[01:17:13] <aminvakil> i've actually tried it, but couldn't use it :(
[01:17:18] <aminvakil> i will try again then
[01:17:20] <habnabit_> aminvakil, is the issue here that you have two different things performing the same match and coming to different results?
[01:17:23] <nedbat> Vision: we don't appreciate people being rude in this channel. please keep that in mind.
[01:17:42] <nedbat> Vision: also, I'm not sure why you would choose to stick with an ineffective approach.
[01:17:43] *** Quits: RoadRunner (~kvirc@S010600fc8db51093.vc.shawcable.net) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[01:17:51] <Vision> nedbat: I've not been rude.
[01:18:06] <Vision> and I choose to stick with it because I want to
[01:18:23] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 252 seconds)
[01:18:27] *** Joins: hendursa1 (~weechat@user/hendursaga)
[01:18:36] *** Quits: ______GOD______ (~GOD@189.174.198.176) (Quit: Turning off a portion of this simulation.)
[01:18:42] <nedbat> i'm interested in whether my words are effective. I guess not everyone is.
[01:18:54] <aminvakil> habnabit_: no, the problem is kernel* is not present in packages that have been already locked, so it won't do anything, but modules still returns changed, because in "if single_pkg not in versionlock_packages" it will be True
[01:19:20] *** Quits: cthulchu_ (~Cthulchu@78.26.214.75) (Ping timeout: 244 seconds)
[01:19:39] <habnabit_> aminvakil, i guess i'm not sure why the resolution to this issue is "well the module doesn't support * wildcards so delete it"
[01:19:47] <habnabit_> aminvakil, i guess i'm not sure why the resolution to this issue isn't* "well the module doesn't support * wildcards so delete it"
[01:20:29] <aminvakil> habnabit_: the module does supports wildcard actually, it's working as expected, it's just not idempotent
[01:20:46] <aminvakil> and if it can be fixed, why not fix it?
[01:20:52] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[01:20:53] *** Quits: cth (~Cthulchu@78.26.214.75) (Ping timeout: 244 seconds)
[01:22:50] *** Joins: squirrel (~sq@host-2-99-74-45.as13285.net)
[01:23:23] *** Quits: ganchan (~thomas_w@user/ganchan) (Read error: Connection reset by peer)
[01:23:37] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[01:23:45] *** Joins: ______GOD______ (~GOD@189.174.198.176)
[01:26:49] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[01:27:25] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:27:43] *** Joins: bilegeek (~bilegeek@2600:1008:b06d:65ed:93d7:e6a:a06d:9e4)
[01:28:01] <aminvakil> yes, it doesn't work. ("if single_pkg not in versionlock_packages:" > "if not fnmatch.fnmatch(versionlock_packages, single_pkg):")  this makes it always true, even with asterisks, in other words it cannot match anything
[01:28:03] <nedbat> Vision: just so you understand: I consider it rude to fling "stop using it" at people without having a conversation with them about their situation.
[01:28:19] <nedbat> Vision: and it's wasting your time anyway.
[01:29:52] *** Joins: SebastianM (~seba@user/sebastianm)
[01:29:59] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[01:30:15] <jinsun> aminvakil: what is versionlock_packages? single string or set of multiple strings?
[01:30:18] *** Quits: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1) (Ping timeout: 272 seconds)
[01:30:45] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[01:31:09] *** Joins: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net)
[01:31:16] <aminvakil> it's the output of yum versionlock list which is something like this: "0:binutils-2.27-43.base.el7.* 0:glibc-devel-2.17-317.el7.* 0:libcurl-7.29.0-57.el7.*"
[01:32:12] *** zebragg is now known as zebrag
[01:32:18] *** Joins: canarts (~stranac@86.32.62.48)
[01:32:21] *** Quits: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu) (Quit: Changing server)
[01:32:44] *** Quits: ham5urg (~ham5urg@p5ddfdd3d.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[01:32:58] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[01:33:02] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[01:33:15] <aminvakil> jinsun: ah, is it because of leading "0:"s? so it cannot find "0:binutils-2.27-43.base.el7.*" when it's searching with "binutils" or "binutils*" ?
[01:33:43] *** Quits: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu) (Client Quit)
[01:34:57] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[01:36:00] *** Joins: aleph (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[01:36:41] *** Quits: stranac (~stranac@78-2-32-42.adsl.net.t-com.hr) (Ping timeout: 272 seconds)
[01:36:44] <jinsun> aminvakil: not in general, fnmatch matches the whole string, so even if there were no leading zeros it wouldn't have matched anything in the middle
[01:37:19] *** Joins: ideopath_ (~ideopathi@204.102.215.22)
[01:37:55] *** Quits: Liblx (~Alex@2a02:810c:280:59c:9572:431f:4e61:ee43) (Quit: WeeChat 3.1)
[01:37:55] <grawity> feels like you want any(fnmatch(pkg, "0:libcurl*") for pkg in versionlocked.split())
[01:38:08] <aminvakil> aha, so any other suggestions? maybe converting it using .split(" ") to a list?
[01:38:39] <jinsun> aminvakil: yeah as grawity suggested above
[01:38:51] <habnabit_> (use .split() without an argument)
[01:38:51] <aminvakil> grawity: i can't be sure about leading "0:", there could be packages not starting with "0:"
[01:39:13] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[01:39:23] <aminvakil> habnabit_: thanks, i haven't tried without argument. i will right now
[01:39:31] <grawity> so you want to match while ignoring the 0:, too?
[01:39:36] <grawity> I thought this was just about using globs
[01:39:41] *** Joins: litharge (litharge@libera/bot/litharge)
[01:40:00] *** Joins: Liblx (~Alex@2a02:810c:280:59c:9572:431f:4e61:ee43)
[01:40:02] <Vision> nedbat: just so you understand, that you consider that rude doesn't mean it's rude.
[01:40:04] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[01:40:15] *** Quits: Liblx (~Alex@2a02:810c:280:59c:9572:431f:4e61:ee43) (Client Quit)
[01:40:25] *** Quits: magla (~gelignite@55d4f9ee.access.ecotel.net) (Quit: Stay safe!)
[01:40:29] *** Quits: ideopathic (~ideopathi@204.102.215.22) (Ping timeout: 272 seconds)
[01:40:35] <aminvakil> sorry, but i wasn't even sure if leading "0:" is important or not, although i've only seen one package which started with "32:", but it means there would be some
[01:40:53] <Vision> nedbat: and I'm rather free to waste my own time
[01:40:58] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Quit: Leaving)
[01:41:00] <nedbat> Vision: i'm asking you nicely to take a more respectful and effective approach to your advocacy.
[01:41:00] <grawity> just so you understand, the speaker isn't really in position to properly judge whether their speech is rude or not...
[01:41:35] *** Joins: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1)
[01:42:14] <Vision> nedbat: that you consider my advocacy disrespectful does not mean that it is, and I am civilly responding that I will advocate as I deem fit
[01:42:32] *** Quits: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu) (Quit: Changing server)
[01:42:33] *** Quits: aleph (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Quit: WeeChat info:version)
[01:42:40] *** Quits: zeenk (~zeenk@2a02:2f04:a310:b600:b098:bf18:df4d:4c41) (Quit: Konversation terminated!)
[01:43:02] <nedbat> Vision: ok. actions having consequences.
[01:43:06] <nedbat> *have
[01:43:56] *** Joins: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net)
[01:44:22] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[01:45:54] *** Joins: hendursaga (~weechat@user/hendursaga)
[01:46:08] *** Joins: terminaldweller (~devi@192.99.102.52)
[01:46:39] *** Quits: kek_ (~kek_@178.197.226.217) (Remote host closed the connection)
[01:46:52] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2-rc1)
[01:47:41] <aminvakil> grawity: you meant something like this? "if not any(fnmatch(pkg, single_pkg) for pkg in versionlock_packages.split()):" it still doesn't match anything (initially it was "if single_pkg not in versionlock_packages:")
[01:49:24] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[01:49:25] <aminvakil> maybe i should remove everything before : first, including :
[01:50:03] *** Joins: biozz (~biozz@178.57.22.163)
[01:50:29] <jinsun> aminvakil: yeah it will not match with the leading 0: you have to remove that, you can do fnmatch(pkg.split(":", 1)[-1], single_pkg)
[01:50:48] <grawity> aminvakil: yes, but
[01:50:51] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Ping timeout: 244 seconds)
[01:51:02] <grawity> since the complexity of the match is clearly growing beyond "throw a glob at it"
[01:51:20] <grawity> I'd probably make a separate package_match() function that takes care of stripping a 0: prefix if necessary, then calling fnmatch
[01:51:30] <grawity> and then any(package_match(pkg, single_pkg) for ...)
[01:53:16] *** Quits: ideopath_ (~ideopathi@204.102.215.22) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:53:56] *** Quits: nyah (~nyah@90.221.186.180) (Quit: leaving)
[01:54:56] *** ChanServ sets mode: +o litharge
[01:54:59] *** Quits: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net) (Ping timeout: 244 seconds)
[01:55:03] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 272 seconds)
[01:55:15] *** Joins: nyah (~nyah@90.221.186.180)
[01:55:25] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[01:55:38] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[01:56:02] <aminvakil> jinsun: i've applied your suggestion and it worked on nss* for example, it matched all "0:nss-softokn-freebl-3.44.0-8.el7_7.* 0:nss-softokn-3.44.0-8.el7_7.* 0:nss-sysinit-3.44.0-7.el7_7.* 0:nss-tools-3.44.0-7.el7_7.* 0:nss-util-3.44.0-4.el7_7.* 0:nss-3.44.0-7.el7_7.*"
[01:56:45] <aminvakil> i'm not sure why, but it's still returning changed for running it on all packages, i will return with more details
[01:57:55] *** Joins: disi (~disi@107-131-127-0.lightspeed.sntcca.sbcglobal.net)
[01:58:52] *** Joins: rama (~rama@c-73-162-251-118.hsd1.ca.comcast.net)
[01:59:01] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 265 seconds)
[01:59:17] <disi> anyone know of a way to inject rst in a markdown doc being parsed by myst_parser (for sphinx)
[01:59:18] <disi> ?
[02:00:48] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[02:07:15] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:07:19] <ChrisWarrick> disi: did you try looking in myst_parser’s docs?
[02:07:53] <Adoi> hello, I have a for loop in a function that should return a value to another function. when I write "return" inside the loop, I get only the result of the first iteration in the output. when I instead write "print(i)" inside the loop, I get the output of all iterations, but with a "None" at the end. I know that I must use "return", but how can I get a full output with it?
[02:08:23] <ChrisWarrick> Adoi: A function can only return one value. How does the other function use the value? What does it need?
[02:08:49] <Adoi> ChrisWarrick, let me paste them
[02:09:13] <bjs> Adoi: return a list
[02:09:28] <ChrisWarrick> (or make a generator and yield?)
[02:09:42] <disi> ChrisWarrick: yup, just took a little digging:  ```{eval-rst}``` nice!
[02:09:43] <mawk> you don't get the result of other iterations Adoi, you see it printed on the console
[02:09:56] *** Quits: outsider (~sierkov@c89-176.i07-23.onvol.net) (Ping timeout: 264 seconds)
[02:10:13] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[02:11:28] *** Quits: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu) (Quit: leaving)
[02:11:56] *** Quits: Strom (strom@fedora/strom) ()
[02:13:23] <Adoi> ChrisWarrick, https://www.pastebin.cz/raw/Wumq5ZR
[02:13:34] *** Joins: Strom (strom@fedora/strom)
[02:13:42] *** mxp_ is now known as mxp
[02:14:34] <ChrisWarrick> Adoi: append your output to a list and return that list after the loop - or make a generator (using the yield keyword) and then run list() on it in your __main__
[02:14:42] *** Joins: sharksauce (sharksauce@user/sharksauce)
[02:16:35] *** Joins: ham5urg (~ham5urg@p5ddfdd3d.dip0.t-ipconnect.de)
[02:17:10] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:17:19] *** Parts: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) ()
[02:17:27] <Adoi> yes, bjs gave me this solution today, too, but I couldnt figure how that would make sense in this case, since the output values already come from existing lists.
[02:18:02] <Adoi> like, getting the values from the lists, then making lists again to make them printable
[02:18:13] <bjs> Adoi: what's wrong with that?
[02:18:20] <bjs> if it's just the exact same list,  you can just `return parts`
[02:18:23] <bjs> and not loop at all.
[02:18:51] <Adoi> but what the question wants is not lists
[02:19:07] <bjs> Adoi: okay, so what does the question want
[02:19:13] <bjs> ... and what question?
[02:19:57] *** Quits: vimart (~vimart@85.255.232.97) (Ping timeout: 268 seconds)
[02:20:32] <Adoi> bjs, I added sample input and output; https://www.pastebin.cz/raw/TCPku5f
[02:20:39] *** Joins: biozz (~biozz@178.57.22.163)
[02:20:47] <Adoi> I forgot "YZ"
[02:20:49] <bjs> Adoi: you want the output to be a single string?
[02:20:57] <Adoi> rows of single strings
[02:21:11] *** Quits: markcerv (~markcerv3@c-24-5-22-21.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[02:21:12] <bjs> Adoi: "rows"?
[02:21:22] <Adoi> like in the paste, stacked on top of each other
[02:21:27] <bjs> Adoi: those are just lines
[02:21:33] <bjs> Adoi: print("a\nb")  # try this out
[02:21:34] <Adoi> yes, I mean that
[02:21:41] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:22:06] <Adoi> yes but if I use "print" I dont have any problem anyway
[02:22:21] <Adoi> the pasted solution works, but I get "None" added to it
[02:22:22] <bjs> Adoi: yes but you're missing the point
[02:22:29] <bjs> Adoi: my print("a\nb") prints two lines but there's only 1 string.
[02:22:44] <bjs> Your function could also return 1 string, just like my 1 string,  and have multiple lines in it.
[02:23:40] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 265 seconds)
[02:24:05] <Adoi> where am I going to insert it?
[02:24:12] <bjs> Adoi: insert what?
[02:24:19] <Adoi> print(a/nb)
[02:24:27] <Adoi> with quotations
[02:24:36] <bjs> Adoi: I mean,  my print was just a little example
[02:24:39] <bjs> did you see that it printed two lines?
[02:24:52] <bjs> I didn't mean you needed to copy/paste  that exact line somewhere
[02:25:25] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[02:25:32] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 264 seconds)
[02:25:39] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[02:25:39] <Adoi> I understand. but it just prints "a/nb"
[02:25:44] *** Joins: jazzy (~jaziz@2600:380:4547:d128:81a3:2cb3:d403:ef37)
[02:25:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:25:52] <bjs> Adoi: did you try it?  print("a\nb")
[02:26:14] <bjs> you should see on your screen only the letters a and b and on separate lines.
[02:26:24] <Adoi> ah yes, I used rightward slash
[02:26:31] <Adoi> now it did as you said
[02:26:43] <bjs> Adoi: so, your wrap() function could do that. It could return a new string with newlines in it.
[02:26:58] <bjs> Adoi: or,  your wrap() function could return a list and then you could (outside the function) loop over the rows and print them one-by-one.
[02:27:11] *** Joins: p-i- (~Ohmu@node-of5.pool-118-173.dynamic.totinternet.net)
[02:27:33] <bjs> Or the wrap() function could do the printing itself,  and then you do not do printing outside of the function.  It depends which is what you want/what the question asked/what makes the most sense.
[02:27:46] <bjs> (to me,  returning a string makes the most sense.)
[02:28:42] *** Quits: Gudddu (~Guddu@117.222.84.65) (Quit: Leaving)
[02:29:17] *** Quits: p-i-_ (~Ohmu@node-mj1.pool-1-0.dynamic.totinternet.net) (Ping timeout: 244 seconds)
[02:29:41] *** Joins: biozz (~biozz@178.57.22.163)
[02:29:56] <Adoi> I didnt understand where to put above print command in the wrap function
[02:30:10] <bjs> Adoi: you don't,  like I said I didn't mean for you to copy/paste that line anywhere
[02:30:22] <bjs> Adoi: I just meant for you to run it and understand what it did. And to see that 1 string can contain two lines in it
[02:32:09] <Adoi> but I have a list. in both pasted solutions there are lists and maybe I can try proceeding from there. I didnt understand what you were trying to tell me with print example, sorry
[02:32:27] <bjs> Adoi: the print example is just showing you that you can have two lines in one string
[02:32:50] <Adoi> but how will that help me in this pasted code?
[02:33:08] <bjs> Adoi: well like I said,  you have 3 options. One of those options involves making a string with multiple lines it.
[02:33:35] <Adoi> I already have the string broken down into smaller strings. I dont have a problem with getting 2,3 or 4 strings. they are there, but just in a list. I need them in separate lines
[02:33:48] <bjs> Adoi: yes, you could do one of the three things I said before
[02:33:57] <bjs> Adoi: you could take that list and make one string out of it, and return and print that
[02:34:10] <bjs> or you can take that list and return it, and then loop over it and print out each row elsewhere.
[02:34:23] *** Quits: sharksauce (sharksauce@user/sharksauce) (Quit: WeeChat 2.8)
[02:34:24] <bjs> Or you can just loop over that list and print out each element and not print elsewhere.
[02:34:26] <Adoi> but the problem input is one long string, there is no need for a list, then
[02:34:31] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 272 seconds)
[02:34:53] <bjs> Adoi: well you might take the one long string, break it up into a list to do some work, then combine it back together in the end
[02:35:06] <bjs> if you wanted to do the first option
[02:35:21] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:36:26] *** Joins: jwodder (~textual@2601:89:c600:f150:9963:5725:e97c:f7c2)
[02:36:41] *** Joins: Adois (~Adoi@user/adoi)
[02:36:43] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[02:36:55] <bjs> this is a very common programming pattern:  take something as input,  break it up into something else and do some work, then combine them back together later on
[02:37:08] <jwodder> Are there any libraries that enable equality testing against predicates like `data == {"field": MatchesRegex("foo")}`?  This would be useful for writing tests where some inner fields don't matter or can't be known ahead of time but do follow a structure.  It seems like something that would have been done, but I can't figure out the right search terms.
[02:37:46] <habnabit_> jwodder, hamcrest provides that for tests
[02:37:58] <SnoopJ> `glom` also does a great job expressing complicated predicates over structured data
[02:38:09] <jwodder> habnabit_: Does it?  I didn't see anything like that in the README.
[02:38:26] <habnabit_> jwodder, i thought it did
[02:38:49] <Adois> bjs, I will try as you said with lists or perhaps with ChrisWarrick's generator way
[02:39:01] <Adois> thank you all
[02:39:01] <bjs> Adois: but not the string way?
[02:39:24] <Adois> yes, that, too, I am curious how it will show
[02:39:40] <jwodder> I see that hamcrest has facilities for custom matching with assert_that(), but I'm interested in matching with ==, as I use pytest.
[02:39:56] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 244 seconds)
[02:40:18] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[02:40:33] * Adois takes a break from a practice day
[02:40:48] *** Adois is now known as Adoi
[02:41:26] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[02:41:50] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[02:42:27] <bjs> Adoi: here's a little trio of examples that might help https://bpa.st/634A
[02:44:06] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 264 seconds)
[02:44:57] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[02:46:04] *** Quits: frostschutz (~frostschu@2a01:c22:d4a8:eb00:6137:ef1d:cdb7:87) (Remote host closed the connection)
[02:46:08] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 244 seconds)
[02:46:51] *** Joins: methyl (~methyl@2601:249:100:49:3319:cbba:bee9:fdf9)
[02:47:38] <habnabit_> jwodder, do you really need == for pytest? i thought you could use assert_that
[02:48:06] <jwodder> habnabit_: You probably could, but == is the pytest way.  I'd like to keep using it.
[02:48:32] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[02:48:37] <habnabit_> jwodder, there's already e.g. pytest.raises, which doesn't use ==
[02:49:03] <jwodder> habnabit_: Most assertions beside that use ==, though.
[02:49:25] *** Quits: radu2422 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[02:50:38] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[02:57:50] *** gabe_ is now known as gabe
[02:59:15] <graingert> jwodder: https://testfixtures.readthedocs.io/en/latest/comparing.html?highlight=compare#providing-your-own-comparers
[02:59:34] <graingert> jwodder: https://testfixtures.readthedocs.io/en/latest/comparing.html?highlight=compare#comparison-objects
[03:00:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[03:01:20] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[03:04:18] *** Quits: ssbr (~ssbr@2620:15c:10f:203:f673:842d:4bf7:5814) (Remote host closed the connection)
[03:04:37] *** Joins: ssbr (~ssbr@2620:15c:10f:203:3ec9:34bc:befa:2499)
[03:05:41] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[03:08:43] *** Quits: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com) (Ping timeout: 272 seconds)
[03:09:07] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[03:10:30] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[03:15:01] *** Quits: canarts (~stranac@86.32.62.48) (Read error: Connection reset by peer)
[03:16:01] *** Quits: reset (~reset@user/reset) (Quit: reset)
[03:17:31] <zweimer> https://bpa.st/FLLQ << Returns me for example "(<Result (datetime.time(0, 19, 53),) {}>, <Result ('0',) {}>, <Result ('1',) {}>, <Result ('2',) {}>)". I would rather extract the results by accessing every 0's element ( -> return (timestamp[0], sensor_temp[0], env_temp[0], sensor_current[0]) ) but then I get sometimes to error: "TypeError: 'NoneType' object is not subscriptable"
[03:17:39] <zweimer> How could I solve that?
[03:17:55] <zweimer> Is there a way of just doing the [0] if the element is not None?
[03:17:59] *** Joins: Sofi (~Sofi@92.246.1.121)
[03:19:15] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[03:19:44] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[03:19:48] *** Joins: iftheraincomes (~iftherain@2804:14d:5c54:8fc4:96eb:4f3:66f:c1de)
[03:19:55] *** Joins: vimart (~vimart@85.255.232.97)
[03:24:25] *** Quits: Sofi (~Sofi@92.246.1.121) (Quit: WeeChat 3.0.1)
[03:25:01] <jinsun> zweimer: and what do you want if it is None? None itself?
[03:25:23] *** Quits: DK3 (~DK3@rs000042.fastrootserver.de) (Quit: WeeChat 1.6)
[03:29:09] <ablegreen> 3/
[03:29:12] *** Joins: MikZyth (~MikZyth@188.65.242.236)
[03:29:21] <ablegreen> ignore that, sorry
[03:30:27] <habnabit_> zweimer, what library is this? it isn't something that python natively has a good solution for but sometimes the library will have a better interface somewhere
[03:30:49] <zweimer> jinsun, yeah None itself
[03:31:04] <zweimer> habnabit_, it is parse
[03:31:16] <zweimer> https://pypi.org/project/parse/
[03:31:53] <zweimer> They have a .fixed command but the problem remains the same
[03:32:29] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:32:40] <jinsun> zweimer: you can do (x and x[0], y and y[0]) and so on, the and operator will go to the second part and return that only if the first part is truthy
[03:32:42] *** Quits: methyl (~methyl@2601:249:100:49:3319:cbba:bee9:fdf9) (Ping timeout: 264 seconds)
[03:32:45] <habnabit_> zweimer, would be easy enough to define your own function for it
[03:34:11] <jinsun> zweimer: sorry, *not truthy
[03:34:37] <zweimer> Yeah I just tried it and it works.
[03:34:56] <jinsun> oops actually I said correct before
[03:34:58] <zweimer> Not the most elegant but is is a solution.
[03:35:20] <habnabit_> 'returns a value or None' is the worst API and it's sad every time i have to deal with it
[03:36:01] <zweimer> habnabit_, how else would you do it?
[03:36:08] <jinsun> yeah, there should be something like rust enums
[03:36:15] <zweimer> There must be a value to signal, that nothing was found
[03:37:07] <habnabit_> zweimer, it could raise an exception, require an explicit default, or have a value that has a similar interface but still indicates "not found"
[03:37:20] <habnabit_> zweimer, rust-like sum types would be my preferred solution, but
[03:37:54] <zweimer> hm, right.
[03:38:04] *** Parts: jimpop (~jimpop@user/jimpop) ()
[03:38:34] <habnabit_> but using None for that sentinel sucks
[03:40:47] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[03:43:03] *** Joins: methyl (~methyl@2601:249:100:49:3319:cbba:bee9:fdf9)
[03:47:51] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.1)
[03:47:52] *** Joins: BillyZane (~BillyZane@193.160.245.142)
[03:48:20] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[03:48:22] *** Quits: Akuli (~Akuli@82-203-167-237.bb.dnainternet.fi) (Quit: Leaving)
[03:49:13] *** Quits: BillyZane2 (~BillyZane@193.160.245.86) (Ping timeout: 265 seconds)
[03:49:59] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[03:53:25] *** Quits: methyl (~methyl@2601:249:100:49:3319:cbba:bee9:fdf9) (Remote host closed the connection)
[03:53:29] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 252 seconds)
[03:56:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[03:58:43] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[04:00:16] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[04:01:53] *** Joins: Wulf (~Wulf@user/wulf)
[04:02:13] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[04:03:04] *** Quits: IHasFinger (~JJ_@2a02:c7f:fc54:ba00:4da8:f0d9:546b:cae4) (Read error: Connection reset by peer)
[04:03:10] *** Joins: BillyZane2 (~BillyZane@193.160.245.142)
[04:03:16] *** Quits: BillyZane (~BillyZane@193.160.245.142) (Remote host closed the connection)
[04:03:56] *** Quits: eck0_ (~eck0@047-007-119-133.res.spectrum.com) (Ping timeout: 264 seconds)
[04:05:59] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:06:19] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.1)
[04:07:33] <disi> are there alternatives to sphinx?
[04:09:19] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 244 seconds)
[04:09:47] <vimart> if any(string.punctuation) in sentence:  - TypeError: 'in <string>' requires string as left operand, not bool
[04:11:25] <vimart> same error with: if any(x for x in string.punctuation) in sentece:
[04:12:28] <disi> vimart: `if any(char in string.punctuation for char in sentence):`
[04:15:33] <vimart> solved: if any(x in string.punctuation for x in sentence):
[04:15:47] <mayhew> does anyone know why we type hint __init__() constructors with a return value of None? can you return something other than None or are we doing busy work for the typechecker, lol?
[04:16:04] <vimart> disi aye, thx
[04:16:32] <vimart> I'm always stuck with using any()
[04:16:39] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[04:16:50] <dale> You can make a type alias like T=t.Union[Foo,Bar].  In earlier versions of Python, can you use a string to define a type alias?  E.g. T="typing.Union[Foo, Bar]"?
[04:17:18] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[04:17:21] *** Joins: abraxas (~abraxas@wsip-70-169-181-130.ri.ri.cox.net)
[04:17:25] <habnabit_> dale, how early are you trying to support?
[04:17:29] <dale> Union was maybe a bad example, my type in this case is queue.Queue[t.Tuple[str, int]] or so.  AFAIK that needs to be wrapped in a string when used as a type annotation in 3.6.
[04:17:30] *** Quits: abraxas (~abraxas@wsip-70-169-181-130.ri.ri.cox.net) (Remote host closed the connection)
[04:17:33] <dale> habnabit_: 3.6
[04:17:36] <sco1> mayhew: what type checker makes you annotate __init__ returns?
[04:18:14] <mayhew> sco1: mypy with the --disallow-untyped-defs flag (this may be self inflicted pain, I know)
[04:18:57] <disi> mayhew: ive hit it too with `mypy --strict`
[04:19:01] <habnabit_> mayhew, __init__ can't return anything but None but apparently they don't special case it
[04:20:08] <sco1> They do special case it
[04:20:17] <mayhew> ahh interesting
[04:20:22] <mayhew> I removed it and it still works with --strict
[04:20:29] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[04:20:31] <altendky> i'm confused.  i'm allowed to `import pendulum.datetime` and there is a module that you would expect to go by that name, but instead you get the function assigned to `datetime` inside `pendulum/__init__.py`.  and to get the `datetime` module you `import pendulum` and then `pendulum._datetime`...  so you can type hint `pendulum._datetime.DateTime`.  aside from the wackiness required to type hint, is it just me or should `import
[04:20:31] <altendky> pendulum.datetime` not be able to give me a function?  seems a bit of a whole in python being consistent. https://github.com/sdispater/pendulum/blob/411d0aa41a5f39c5f4a2f43a3c369c2dd24787db/pendulum/__init__.py
[04:20:41] <mayhew> I think they changed this within the past couple of years, this is old code and back then I had to explicitly return None
[04:20:44] <jwodder> -> None is required iff __init__ takes no arguments other than self
[04:21:22] <sco1> See: https://mypy.readthedocs.io/en/stable/class_basics.html#annotating-init-methods
[04:21:38] <mayhew> jwodder: you sure? I have an __init__ with 3 args and no return type hint, and it typechecks under --strict
[04:22:18] *** Joins: IonTau (~IonTau@ppp118-208-164-151.cbr-trn-nor-bras39.tpg.internode.on.net)
[04:22:24] <sco1> That's what they said
[04:22:33] <dale> altendky: Surely pendulum is doing something funny?  You can't normally import a function like that, right?
[04:22:51] <mayhew> sco1: ahhhh. That's really weird that the presence of another arg having a type hint would have  an impact on the return value
[04:23:19] <dale> Hmph, https://github.com/sdispater/pendulum/blob/master/pendulum/__init__.py doesn't look strange at first glance.
[04:23:29] *** Joins: Cr4ft (~jordan@2604:3d09:7179:8a00:9e7b:44aa:a613:529e)
[04:23:32] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[04:23:49] <altendky> dale: they are.  they `import datetime as _datetime` (though that's actually stdlib datetime...) and then later `def datetime()`
[04:24:10] <altendky> and i guess the bit i really want is `from .datetime import DateTime`...
[04:24:13] <dale> altendky: I guess the key is that pendulum also has a pendulum/datetime.py in its package.
[04:24:25] <dale> Or, at least, I'm guessING that's how it happens.
[04:24:36] <altendky> so i think you maybe can't get at pendulum/datetime.py in any vaguely normal way.
[04:24:41] *** Quits: jwodder (~textual@2601:89:c600:f150:9963:5725:e97c:f7c2) (Quit: My work here is done.)
[04:25:05] <altendky> though the class reports as `<class 'pendulum.datetime.DateTime'>` making you think you should be able to
[04:25:15] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[04:25:43] <dale> And then pendulum/datetime.py imports pendulum, which would probably create a problem if you're not careful...
[04:26:06] *** Joins: wyclif (~wyclif@user/wyclif)
[04:26:16] <dale> Oh, no, __init__.py doesn't import .datetime?  I guess?
[04:26:53] <sco1> mayhew: you can see the justification in PEP 484: https://www.python.org/dev/peps/pep-0484/#the-meaning-of-annotations
[04:28:49] *** BillyZane2 is now known as BillyZane
[04:28:50] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 268 seconds)
[04:29:17] <dale> altendky: Unggh "from pendulum.datetime import DateTime" works.
[04:29:29] <altendky> uh.......
[04:29:48] <dale> I can probably 70% explain how all this is possible but I don't really want to.
[04:29:58] <mayhew> sco1: thanks! seems like a pragmatic tradeoff as usual :)
[04:30:21] <altendky> mostly i'm thinking 'should this be this way'
[04:30:46] <altendky> that `import pendulum.datetime` and `from pendulum.datetime` refer to different things.
[04:30:52] <dale> altendky: I suppose that is a matter of opinion.  I call this "clever and also criminal".
[04:31:15] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:32:11] <dale> I just think the author should call pendulum/datetime.py something else. :)
[04:33:56] <dale> altendky: For more fun, "del sys.modules['pendulum.datetime']; import pendulum.datetime" then see that pendulum.datetime is now the module. :)
[04:33:57] *** Quits: bilegeek (~bilegeek@2600:1008:b06d:65ed:93d7:e6a:a06d:9e4) (Quit: Leaving)
[04:33:58] <altendky> yeah, pendulum is confusing here.  unless someone does something like `def myfunction(): pass; sys.modules['blue'] = myfunction` i feel like `import blue` shouldn't be able to give me a function.
[04:34:27] <dale> Like, datetime.datetime is bad enough, this is just cruel here.
[04:34:42] *** Joins: GvP (~GvP@ip70-162-85-176.ph.ph.cox.net)
[04:35:09] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[04:35:56] *** Joins: cowza (~spam@67-200-179-130.static.logixcom.net)
[04:39:03] *** Quits: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net) (Quit: Client closed)
[04:39:59] *** Quits: MD500_Pilot (~MD500_Pil@gatekeeper.rstechnical.com) (Quit: Connection closed)
[04:40:15] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.1)
[04:41:39] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[04:42:26] *** Quits: samhain (~samhain@user/samhain) (Quit: ZNC - https://znc.in)
[04:42:38] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[04:42:44] *** Joins: samhain (~samhain@user/samhain)
[04:43:28] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[04:44:42] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[04:44:47] *** Quits: ham5urg (~ham5urg@p5ddfdd3d.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[04:45:50] *** Joins: Midnite (~human@user/midnightlantern)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:08] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[04:48:23] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[04:48:49] <dale> pyright, at least, doesn't like T = "SomeType"
[04:50:28] *** Joins: superboot (~agentgasm@user/superboot)
[04:50:30] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[04:51:09] *** Quits: pacbard (~pacbard@user/pacbard) (Quit: ZNC 1.8.2 - https://znc.in)
[04:53:13] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:54:53] *** Joins: pacbard (~pacbard@user/pacbard)
[04:55:44] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[04:56:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:57:44] *** Joins: Samian (~Samian@2620:10d:c090:400::5:153b)
[04:58:26] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[04:59:09] *** Quits: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38) (Remote host closed the connection)
[05:00:28] *** Quits: ssbr (~ssbr@2620:15c:10f:203:3ec9:34bc:befa:2499) (Ping timeout: 244 seconds)
[05:01:36] *** Quits: akk (~akk@174-28-98-240.albq.qwest.net) (Ping timeout: 252 seconds)
[05:02:18] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-b0e8-82ca-9970-3627.res6.spectrum.com) (Read error: Connection reset by peer)
[05:05:46] *** Quits: ______GOD______ (~GOD@189.174.198.176) (Quit: Turning off a portion of this simulation.)
[05:07:02] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[05:07:07] *** Quits: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca) (Quit: Client closed)
[05:07:32] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) (Ping timeout: 264 seconds)
[05:07:33] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:08:38] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[05:08:56] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[05:11:33] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[05:11:40] <bn_work> hi, anyone know why jupyter-lab installed via Anaconda3 would suddenly cease launching with the following stack trace?  completely stumped as I've changed nothing :/ https://www.irccloud.com/pastebin/iEpdF4Ou/jupyter-lab.py  seems like it's tripping up on decoding some sort of JSON but where?? I'm guessing it's trying to parse the config file for jupyter-lab and barfing?
[05:14:56] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 244 seconds)
[05:16:48] <bn_work> tried `jsonlint ~/.jupyter/lab/workspaces/lab-a511.jupyterlab-workspace` and it doesn't return any errors
[05:17:14] <bn_work> is there any way to force some sort of python trace to see what file it's actually trying to load?
[05:17:25] <Samian> hello. In VSCode, I can ssh into my remote gpu cluster. But when I try to debug, it never runs the programs. Any ideas? I think it's a port that I need to forward?
[05:17:35] *** Joins: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net)
[05:17:50] <rannnn8888> Hi how i change the text in the graph ? https://dpaste.org/uxra
[05:18:09] <rannnn8888> inside
[05:19:43] *** Joins: sartan (~sartan@user/sartan)
[05:22:40] <bn_work> ok, I think I've found it by doing `jsonlint /anaconda3/etc/jupyter/jupyter_notebook_config.d/jupyterlab.json`:   https://www.irccloud.com/pastebin/RdttfASQ/jsonlint_jupyterlab.json.js
[05:23:50] <bn_work> ah, found the culprit:  `//"opub_data_rate_limit": 1.0e10` can JSON not have inline comments?
[05:24:07] <nedbat> bn_work: no comments in JSON
[05:24:14] <nedbat> (inline or not)
[05:24:28] <bn_work> nedbat: man, that's lame... :/
[05:25:21] <bn_work> isn't there a JSON format that does support comments?
[05:25:38] <nedbat> bn_work: there are extended versions of json that do.  hjson is one
[05:26:15] <rannnn8888> ax.bar_label(rects1, padding=3, color='white') slove
[05:29:49] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:29:53] *** Quits: Pleiades (~admin@193.254.47.212) (Ping timeout: 268 seconds)
[05:29:56] <rannnn8888> last prlem how i fix this ? or how call him in english i try find in google ? "frame" ? my english not perfect :D  https://ibb.co/87vpgnK
[05:30:21] *** Joins: lacrymol1gy (~lacrymolo@5.225.91.181)
[05:30:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[05:30:32] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:51] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:31:47] *** Quits: cellofellow (~user@166.70.50.58) (Remote host closed the connection)
[05:32:17] *** Quits: lacrymology (~lacrymolo@static-202-2-25-46.ipcom.comunitel.net) (Ping timeout: 272 seconds)
[05:32:57] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[05:33:07] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Client Quit)
[05:33:40] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:34:03] *** Quits: Midnite (~human@user/midnightlantern) (Ping timeout: 252 seconds)
[05:35:18] *** Quits: qlixed (~qlixed@2800:810:471:2f8::1b7) (Quit: That's all folks!!)
[05:35:27] *** Joins: vlm (~vlm@user/vlm)
[05:37:08] *** Quits: Peng (~mnordhoff@fin.mattnordhoff.net) (Quit: Peng timeout)
[05:37:11] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.1)
[05:37:18] *** Joins: Peng (~mnordhoff@fin.mattnordhoff.net)
[05:38:13] *** Joins: digilink (~digilink@user/digilink)
[05:42:35] *** Joins: lacrymology (~lacrymolo@5.225.8.199)
[05:42:51] *** Quits: lacrymol1gy (~lacrymolo@5.225.91.181) (Ping timeout: 252 seconds)
[05:44:35] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[05:51:28] *** Joins: nathanjell (~Nathan@d162-157-36-152.abhsia.telus.net)
[05:52:25] *** Quits: Samian (~Samian@2620:10d:c090:400::5:153b) (Remote host closed the connection)
[05:52:49] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[05:55:09] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[05:56:07] *** Joins: elena (~elena@202-153-212-80.ca99d4.syd.static.aussiebb.net)
[05:58:20] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 244 seconds)
[05:58:23] *** Quits: FluffyMask (~FluffyMas@user/fluffymask) (Quit: WeeChat 2.9)
[05:58:52] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 268 seconds)
[05:59:08] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (Quit: bye)
[05:59:53] *** Joins: Ninja3047 (~Ninja3047@3047.ninja)
[06:02:06] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 264 seconds)
[06:02:19] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:02:41] *** Quits: MikZyth (~MikZyth@188.65.242.236) (Quit: WeeChat 3.1)
[06:03:36] *** Quits: asthasr (~asthasr@162.210.29.120) (Read error: Connection reset by peer)
[06:06:16] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 268 seconds)
[06:06:48] *** Quits: Auron956 (~Auron956@user/auron) (Remote host closed the connection)
[06:09:12] *** Quits: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[06:09:48] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[06:10:07] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[06:11:21] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.1)
[06:12:10] *** Parts: Cr4ft (~jordan@2604:3d09:7179:8a00:9e7b:44aa:a613:529e) ()
[06:14:47] *** Joins: jocke-l (jocke-l@a.x0.is)
[06:15:28] *** Quits: Maple (~Maple@user/maple) (Quit: WeeChat 3.1)
[06:18:15] *** Joins: Maple (~Maple@user/maple)
[06:18:35] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:19:24] *** Joins: strobelight (~quassel@c-69-180-7-202.hsd1.ga.comcast.net)
[06:19:30] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:20:59] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:c5b1:589:9d9d:3767) (Read error: Connection reset by peer)
[06:23:45] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Quit: WeeChat 3.1)
[06:25:48] *** Quits: disi (~disi@107-131-127-0.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 250 seconds)
[06:32:39] *** Joins: CatKiller (~CatKiller@109.78.59.11)
[06:33:21] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[06:35:01] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 244 seconds)
[06:39:56] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[06:41:16] <ezzieyguywuf> so I haven't python'd in quite a few years - a lot has changed! (neat!). Back in the day, if I was iterating over some data to add to a dictionary, I would (1) check if a key existed, (2a) if not, add a value (say, a list with a single item), or (2b) simply modify the existing item (in this case append to the existing list)
[06:41:32] <ezzieyguywuf> I couldn't just always use append since I had no guarantee that there was already a list for that key
[06:41:43] <ezzieyguywuf> is there a more 'modern' idiom that I can use in today's python?
[06:41:48] <ezzieyguywuf> or should I just keep doing it like this?
[06:42:13] <nedbat> ezzieyguywuf: dd = collections.defaultdict(list);    dd[k].append(v)    # works even if k is the first time
[06:42:37] <ezzieyguywuf> nedbat: dope!
[06:48:11] *** Quits: user3456 (user3456@user/user3456) (Quit: ZNC - https://znc.in)
[06:50:18] *** Joins: user3456 (user3456@user/user3456)
[06:50:49] *** Joins: SebastianM (~seba@user/sebastianm)
[06:51:21] *** Joins: ratelius (ratelius@gateway/vpn/protonvpn/ratelius)
[06:51:36] *** Joins: gvsa123 (~gvsa123@d23-17-234-189.abhsia.telus.net)
[06:53:39] *** Joins: Midnite (~human@user/midnightlantern)
[06:54:08] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 244 seconds)
[06:56:34] *** Quits: gvsa123 (~gvsa123@d23-17-234-189.abhsia.telus.net) (Quit: Leaving)
[06:57:32] <InPhase> ezzieyguywuf: Or, d.setdefault(k, []).append(v)
[06:57:45] *** Joins: dme86 (~dan@user/dan86)
[06:57:49] <InPhase> ezzieyguywuf: Works with regular dict d.
[06:59:22] *** Parts: jocke-l (jocke-l@a.x0.is) (WeeChat 2.3)
[06:59:35] *** Joins: jocke-l (jocke-l@a.x0.is)
[07:00:01] <InPhase> ezzieyguywuf: There's a similar getdefault, sometimes more useful for specific purposes.
[07:00:30] <InPhase> ezzieyguywuf: I mean, .get, which also takes a default.
[07:02:03] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[07:02:15] *** Quits: vimart (~vimart@85.255.232.97) (Quit: WeeChat 2.8)
[07:03:07] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:03:08] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (strontium.libera.chat (Nickname regained by services)))
[07:03:08] *** finn_elija is now known as FinnElija
[07:03:35] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[07:10:41] *** Joins: Mrokii (~mrokii@p5b2df5a8.dip0.t-ipconnect.de)
[07:10:42] <ezzieyguywuf> InPhase: got it, thank you.
[07:10:50] *** Quits: nathanjell (~Nathan@d162-157-36-152.abhsia.telus.net) (Quit: Leaving)
[07:11:08] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[07:11:28] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[07:12:57] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 264 seconds)
[07:13:37] *** Quits: Mrokii_ (~mrokii@p5b2df7ee.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[07:14:27] *** Quits: iphone (~iphone@user/iphone) (Ping timeout: 272 seconds)
[07:15:30] *** Quits: viktorivan (~ivan@187.223.103.108) (Remote host closed the connection)
[07:16:00] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[07:19:52] *** Joins: rk04 (~rk04@user/rajk)
[07:21:23] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 252 seconds)
[07:21:41] *** Joins: cliluw (~cliluw@47.147.80.149)
[07:21:54] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[07:21:57] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[07:25:01] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 272 seconds)
[07:27:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:34:58] *** Quits: c4017w (~c4017@209.52.68.8) (Remote host closed the connection)
[07:35:22] *** Joins: c4017w (~c4017@209.52.68.8)
[07:35:43] *** Quits: Midnite (~human@user/midnightlantern) (Quit: Midnite)
[07:38:44] *** Quits: c4017 (~c4017@S010664777dab66f3.vf.shawcable.net) (Ping timeout: 264 seconds)
[07:40:46] *** Quits: foureyes (foureyes@brought.to.you.by.bnc4free.com) (Remote host closed the connection)
[07:42:10] *** Joins: Midnite (~human@user/midnightlantern)
[07:45:36] *** Joins: cul8r (~cul8r@2601:8c3:4000:b0d0::ebb4)
[07:45:40] *** Quits: cul8r (~cul8r@2601:8c3:4000:b0d0::ebb4) (Remote host closed the connection)
[07:47:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:48:40] *** Joins: heco (~redrum@user/redrum88)
[07:52:49] *** Quits: heco (~redrum@user/redrum88) (Client Quit)
[07:55:52] *** Joins: c4017 (~c4017@199-7-159-9.eng.wind.ca)
[07:56:22] *** Joins: heco (~redrum@user/redrum88)
[07:58:06] *** Joins: Vonter (~Vonter@user/vonter)
[07:59:58] *** Joins: c4017_ (~c4017@199-7-159-9.eng.wind.ca)
[08:00:21] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[08:00:25] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:00:37] *** Joins: wei2912 (~wei2912@112.199.250.21)
[08:01:27] *** Quits: c4017 (~c4017@199-7-159-9.eng.wind.ca) (Ping timeout: 252 seconds)
[08:01:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[08:01:38] *** Lord_of_Life_ is now known as Lord_of_Life
[08:03:36] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[08:03:46] *** Joins: lightdot (~weechat@user/lightdot)
[08:09:50] *** Joins: Fiji (~Fiji@user/fiji)
[08:19:30] <Midnite> Does anyone here own this book? I'm considering ordering it. The official Python docs on regular expressions cite it: https://www.abebooks.com/products/isbn/9781565922570/30738954988
[08:20:13] <Midnite> title is, Mastering Regular Expressions: Powerful Techniques for Perl and Other Tools, author is Jeffery Friedl
[08:21:36] *** Quits: xy (znc@user/icy) (Quit: ZNC 1.9.x-nightly-20210409-e0ffdddd - https://znc.in)
[08:23:16] *** Joins: c4017 (~c4017@S010664777dab66f3.vf.shawcable.net)
[08:23:42] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 264 seconds)
[08:24:47] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[08:25:41] *** Quits: c4017_ (~c4017@199-7-159-9.eng.wind.ca) (Ping timeout: 265 seconds)
[08:25:49] *** Joins: lu (~lu@user/lu)
[08:26:05] <lu> Is there a "python 4" or a new python under development?
[08:26:43] <Midnite> ^ I'm also curious
[08:29:06] <InPhase> lu: 3.10 was supposed to be 4.0, but everybody was so traumatized by the 2 to 3 transition that they couldn't bring themselves to carry the 1 over.
[08:29:37] <lu> :(
[08:29:51] <InPhase> Which might sound like a joke, but, not really a joke.  :)
[08:32:10] <InPhase> lu: If by your question you mean a major change in Python, then no, I think there is no real appetite for that right now, nor for a while yet.  You can expect more incremental and non-breaking up through less-breaking improvements for a while.
[08:32:32] <ezzieyguywuf> hm, if I used requests.get to retrieve a gzip-compressed file, how could I pass this to gzip.open? do I have to write it to disk first?
[08:34:21] <ezzieyguywuf> ah maybe I just want gzip.decompress
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.1)
[08:36:25] *** Quits: lightdot (~weechat@user/lightdot) (Quit: Gone parachuting!)
[08:36:26] <InPhase> And really that's a wise community decision.  This is a very important time period in Python's rapid growth, in which it's doing about as well as it possibly could do.  It's a period where the language needs to be mature and stable for a stretch, and broaden out in usage.  There will be time later to rethink which aspects are holding the language back from the next stage of its usage.
[08:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:45:13] *** Joins: euouae (~user@user/euouae)
[08:47:07] *** Joins: rk04 (~rk04@user/rajk)
[08:50:31] *** Quits: lu (~lu@user/lu) (Ping timeout: 272 seconds)
[08:52:13] *** Quits: p-i- (~Ohmu@node-of5.pool-118-173.dynamic.totinternet.net) (Read error: Connection reset by peer)
[08:52:50] *** Joins: p-i- (~Ohmu@node-7w8.pool-118-173.dynamic.totinternet.net)
[08:53:09] *** Joins: ionface (~ionface@user/ionface)
[08:58:07] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[09:01:30] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 264 seconds)
[09:01:57] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[09:03:21] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Client Quit)
[09:03:56] *** Quits: Midnite (~human@user/midnightlantern) (Ping timeout: 264 seconds)
[09:04:22] *** Joins: Fluxx (~Fluxx@user/fluxx)
[09:05:53] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[09:08:55] *** Quits: Maikel (~Maikel@130.61.63.136) (Quit: The Lounge - https://thelounge.chat)
[09:13:17] *** Joins: Maikel (~Maikel@130.61.63.136)
[09:29:30] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:33:47] *** Joins: biozz (~biozz@178.57.22.163)
[09:34:51] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[09:35:03] *** Joins: Crassus (~Crassus@user/crassus)
[09:39:01] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 268 seconds)
[09:39:14] *** Quits: evilissimo (~vfeenstr@redhat/evilissimo) (Ping timeout: 272 seconds)
[09:39:18] *** Quits: encukou (~quassel@nat-pool-brq-t.redhat.com) (Ping timeout: 264 seconds)
[09:42:15] *** Quits: iftheraincomes (~iftherain@2804:14d:5c54:8fc4:96eb:4f3:66f:c1de) (Quit: iftheraincomes)
[09:42:57] *** Quits: DaNeenjah (~jake@40.sub-72-106-103.myvzw.com) (Quit: WeeChat 3.1)
[09:42:58] *** Joins: biozz (~biozz@178.57.22.163)
[09:43:03] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[09:44:34] *** Quits: olasd (~olasd@softwareheritage/olasd) (Ping timeout: 268 seconds)
[09:44:38] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[09:45:07] *** Quits: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net) (Quit: pbryan)
[09:45:59] *** Joins: ionface_ (~ionface@user/ionface)
[09:46:11] *** Joins: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net)
[09:47:07] *** Joins: Rum (~Rum@user/rum)
[09:48:09] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 252 seconds)
[09:48:21] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 264 seconds)
[09:49:48] *** Joins: biozz (~biozz@178.57.22.163)
[09:53:33] *** Quits: iflema_ (~ian@user/iflema) (Quit: iflema_)
[09:54:09] *** ionface_ is now known as ionface
[09:55:28] *** Joins: iflema (~ian@user/iflema)
[09:57:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:01:21] *** Quits: Rum (~Rum@user/rum) (Remote host closed the connection)
[10:01:41] *** Joins: Rum (~Rum@user/rum)
[10:02:44] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 264 seconds)
[10:03:32] *** Quits: Rum (~Rum@user/rum) (Client Quit)
[10:07:32] *** Quits: wei2912 (~wei2912@112.199.250.21) (Ping timeout: 264 seconds)
[10:08:09] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 264 seconds)
[10:14:57] *** Joins: biozz (~biozz@178.57.22.163)
[10:16:13] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:19:15] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 244 seconds)
[10:20:23] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.1)
[10:22:32] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[10:23:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[10:23:10] *** Joins: jheblu (~user@116.68.98.40)
[10:23:11] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[10:23:36] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:23:38] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[10:24:00] *** Joins: biozz (~biozz@178.57.22.163)
[10:25:08] <n00b101> I have a socketio server and client, client is connecting to server via socketio.connect(ipaddress). Now when the server receive the connection, can it print "connection received" or something.. how does the server know that a connection from a client is established?
[10:28:05] <deniska> n00b101: https://python-socketio.readthedocs.io/en/latest/server.html#defining-event-handlers you can listen to 'connect' and 'disconnect' events
[10:28:32] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 264 seconds)
[10:29:08] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 264 seconds)
[10:30:11] <n00b101> This is in backend. Can I simply refresh my current window Window.reaload() , that's frontend, when connect event is triggered? But this is backend, how do I say refresh current window from backend?
[10:30:41] *** Joins: biozz (~biozz@178.57.22.163)
[10:31:40] <deniska> For something like this you'll have to implement it yourself. Sens a specific message like "reload" to yout clients, and if a client sees a message "reload" make it to reload the page
[10:31:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[10:31:53] <deniska> s/Sens/Send/
[10:33:43] *** Quits: emerent (~quassel@p200300cd5703bbc4ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[10:33:46] <euouae> You'd probably want to reload every few seconds or so
[10:33:54] *** Joins: emerent (~quassel@p200300cd5703bb7bba27ebfffed28a59.dip0.t-ipconnect.de)
[10:33:57] <euouae> Maybe better than reloading on every client connection, that doesn't scale
[10:34:36] <deniska> but you'd probably use something like socketio to avoid reloading the whole page
[10:34:41] *** Joins: wyclif (~wyclif@user/wyclif)
[10:34:54] <deniska> it's a way to push real time updates to the clients without them polling you
[10:35:44] *** Quits: nickodd (~nickodd@user/nickodd) (Ping timeout: 264 seconds)
[10:39:17] <n00b101> Can I disconnect all connected sockets when a new connection is received?
[10:39:46] <n00b101> Disconnect previous socket, Connect new , then refresh the window
[10:39:53] <n00b101> That's what I fully need
[10:39:54] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Gone.)
[10:40:17] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 272 seconds)
[10:40:20] <n00b101> Window refresh Will reload the page and clear the chat
[10:40:39] <euouae> Of course you can do all those things
[10:40:40] <n00b101> That should only happen when new connection is received
[10:40:48] *** Joins: outsider (~sierkov@c89-176.i07-23.onvol.net)
[10:42:23] <n00b101> Is there a psudo code?
[10:42:37] <n00b101> Just to know what should I do
[10:43:45] <euouae> you're handling the event of a client connecting and a client disconnecting
[10:44:04] <euouae> when a connection occurs, drop the previuos active connection, replace it with this one.
[10:44:16] <euouae> Also, refresh
[10:46:43] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:18] *** Joins: seednode (~seednode@user/seednode)
[10:47:57] <n00b101> Dropping the connection should be done from backend?
[10:49:01] <n00b101> socket.disconnect()
[10:49:21] *** Joins: rk04 (~rk04@user/rajk)
[10:50:21] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:50:35] <euouae> what is the frontend responsible for?
[10:51:30] *** Joins: unyu (~pyon@user/pyon)
[10:51:54] *** Joins: ckpro (~ckpro@103.106.181.67)
[10:52:08] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:53:20] *** Joins: teut (~teut@182.69.85.39)
[10:53:37] *** Quits: nubonix (uid492751@id-492751.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[10:54:14] <teut> https://docs.python-guide.org/writing/gotchas/#late-binding-closures   from where did  this 4 came from?   -> `Five functions are created; instead all of them just multiply x by 4.`
[10:55:06] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 244 seconds)
[10:56:17] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[10:56:27] <deniska> teut: `4` is the value `i` has after the loop is over
[10:57:10] <deniska> because it's the value it had during the last iteration
[10:58:05] *** Joins: dme86 (~dan@user/dan86)
[10:59:45] <teut> quite strange, you just got a list of lambdas,  [lambda x: x , lambda x:2*x  , lambda x:3*x ....]
[11:00:13] <teut> isnt it just a function?
[11:00:38] <teut> I mean each function object has a local x
[11:01:06] <deniska> teut: the site called it "gotcha" for the reason. Each function refers to the same variable `x`
[11:01:31] <deniska> teut: oops
[11:01:38] <deniska> teut: each function refers to the same `i`
[11:01:55] <deniska> which is equal to 4 after the loop is done
[11:02:16] <teut> i have used this type of thing, but I missed the gocha there
[11:02:26] <deniska> x is of course a parameter and is local to a function
[11:02:46] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 265 seconds)
[11:02:55] <n00b101> https://www.irccloud.com/pastebin/v1suHaEg/
[11:03:06] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:03:15] <teut> for multiplier in create_multipliers()  :     what does this line do ? can you mention the steps?
[11:03:22] <n00b101> this is it, when i do `socket.disconnect()`  it also diconnect new connection
[11:03:46] <n00b101> euouae:
[11:04:01] *** Joins: foureyes (foureyes@brought.to.you.by.bnc4free.com)
[11:04:24] <euouae> n00b101: this doesn't look right
[11:04:31] <n00b101> yes,
[11:04:46] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[11:05:01] <n00b101> i feel it too. i mean if there is any exisitng connection, on new connection, diconnect previous one and accept new one
[11:05:17] <n00b101> then fresh the window.. thats what i need
[11:05:56] <teut> for multiplier in [lambda x:x , lambda x:2x  , lambda x:3x , lambda x:4x] ,  cannot understand why that should be different from this
[11:06:20] <n00b101> https://www.irccloud.com/pastebin/CWUJbWLs/
[11:06:21] <teut> and ya [lambda  x:0]   too
[11:07:01] <n00b101> euouae: https://bpa.st/EAUQ
[11:08:28] <n00b101> how do i say " if there is any exisitng connection, on new connection, diconnect previous one and accept new one"
[11:08:47] <deniska> teut: https://bpa.st/5UZQ do you understand why this code outputs 10 and then 20?
[11:09:34] <teut> yes thats obvious
[11:09:54] *** veegee_ is now known as veegee
[11:10:13] <euouae> n00b101: .disconnect the previous connection
[11:10:35] <deniska> teut: and this code? https://bpa.st/BVNQ
[11:11:03] <n00b101> euouae: yes, how do i diconnect "previous connection"?
[11:11:16] <euouae> n00b101: where is the previous connection?
[11:11:23] <teut> yes its the same
[11:12:00] <teut> the  for loop syntax is the biggest abstraction here
[11:12:19] <teut> that is too much high level
[11:13:44] <n00b101> euouae: there is no previous connection, only one connect statement. i have to disconnect "any exisitng connection when a new connect() has occured"
[11:14:33] <euouae>  n00b101: what is that, HW or job or what?
[11:15:10] <deniska> teut: well, what a loop does is just assigns different values to `i`, just like I did using an assignment operator in my example
[11:15:11] <euouae> I'm trying to imagine who could be for you to ask about a clarification.
[11:16:08] <teut> it cant be that single because that iterator  is immutable in a loop
[11:16:15] <teut> simply*
[11:17:10] <deniska> teut: `i` is a single name which on each iteration gets assigned to a new value
[11:17:57] <n00b101> euouae: job
[11:18:18] <deniska> teut: function objects you create using `lambda` don't refer to the value `i` had at the moment of creation, they refer to the name `i` itself. Functions will only retrieve what value `i` has when you call them, and when you call them, the loop is over, and `i` has value 4
[11:18:36] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[11:18:36] <teut> ok , you are correct that i is immutable sometimes
[11:18:42] *** Joins: frostschutz (~frostschu@2a01:c23:808c:7100:4de4:a19a:1e81:2a82)
[11:18:51] <deniska> it doesn't have anything to do with immutability :)
[11:19:18] <euouae> n00b101: You must either read the code and understand what it does or ask someone to help you
[11:23:03] <teut> Uploaded file: https://uploads.kiwiirc.com/files/09483b7eff7e406cb69b55d6f335ee2e/pasted.txt
[11:23:15] *** Joins: feriman (~feriman@188.163.113.127)
[11:23:21] <teut> you get this list  by  `print( create_multipliers())`
[11:23:32] <teut> can it be made more readable?
[11:25:07] <teut> and I tried to use  ` help(lambda)` and I got invalid syntax
[11:25:30] <euouae> What do you want to be more readable here teut? You're printing a list of lambdas, what would you like each lambda to be printed as?
[11:26:15] <teut> to be written like  `lambda x: 2 x `  or ` lambda x:  2 i`
[11:26:20] <teut> something like that
[11:26:25] *** Quits: rk04 (~rk04@user/rajk) (Quit: rk04)
[11:28:23] <euouae> teut: s = "lambda x: 2 * x" and then f = eval(s)
[11:28:27] <lambda> teut: you can't easily print code like that. it gets converted to bytecode and the source doesn't exist anymore
[11:28:32] <euouae> teut: f is the object to call, s is the thing to print
[11:29:37] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[11:30:11] *** Joins: gloomy (~ldorigo@81.161.149.37)
[11:30:54] <teut> arent lambda  objects?
[11:31:11] <lambda> everything(*) is an object
[11:31:38] <teut> I  know that , then why does help gives syntax error
[11:31:39] <teut> ?
[11:31:55] <deniska> teut: try help('lambda')
[11:31:58] <lambda> teut: `lambda` is a keyword that is used to create function objects.
[11:32:19] <lambda> `lambda` by itself is only syntax, not an object
[11:32:24] <teut> that worked deniska thanks
[11:32:57] <teut> well even keywords are variables in python
[11:33:07] <teut> help = 56  is valid
[11:33:14] <lambda> help isn't a keyword
[11:33:26] <lambda> `for = 3` is also a syntax error.
[11:33:26] <teut> reserved function
[11:33:44] <teut> ok you are right
[11:34:33] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 272 seconds)
[11:35:11] *** Quits: outsider (~sierkov@c89-176.i07-23.onvol.net) (Quit: WeeChat 3.1)
[11:36:56] *** Quits: doc (~doc@user/doc) (Ping timeout: 264 seconds)
[11:37:42] *** Joins: icy (~icy@user/icy)
[11:38:58] *** Joins: doc (~doc@user/doc)
[11:42:29] *** Joins: pradhvan (~pradhvan@103.94.114.232)
[11:43:10] <teut> https://dpaste.org/mozS how to do this?
[11:44:03] *** Joins: biozz (~biozz@178.57.22.163)
[11:44:15] <deniska> teut: it's a list containing functions, you want to pass a function, not a list
[11:44:37] <deniska> you can do dis.dis(create_multipliers()[0]) to disassemble the first one
[11:45:38] <teut> that wont help
[11:45:56] <teut> i need the steps to understand it
[11:48:29] <euouae>  /j #security
[11:48:41] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289) (Ping timeout: 252 seconds)
[11:48:41] <teut> Uploaded file: https://uploads.kiwiirc.com/files/5e81a50cc88250ac23df3ab0ddb80b32/image.png
[11:48:59] <teut> ok , it was helpful ,sorry
[11:49:10] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 265 seconds)
[11:49:13] <teut> so  i is intact yet
[11:49:43] <teut> it hasnt been placed in the lambda
[11:53:09] <deniska> teut: yes, python only looks up `i` when you execute a function, not when you create it
[11:54:05] <teut> that I know, well , I dont understand this bytecode thing then
[11:54:07] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289)
[11:54:13] *** Joins: zeenk (~zeenk@2a02:2f04:a310:b600:b098:bf18:df4d:4c41)
[11:55:42] *** Quits: ckpro (~ckpro@103.106.181.67) (Remote host closed the connection)
[11:56:05] *** Joins: ckpro (~ckpro@103.106.181.67)
[11:57:03] *** Joins: kosh (~kosh@user/kosh)
[12:01:44] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289) (Quit: WeeChat 2.8)
[12:06:52] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.1)
[12:08:46] *** Joins: dme86 (~dan@user/dan86)
[12:09:20] *** Joins: jpaa (~jpaa@87.118.126.66)
[12:12:11] <raek> teut: what part confuses you?
[12:12:34] *** Joins: reset (~reset@user/reset)
[12:13:13] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[12:13:16] <raek> the bytecode instructions can be one-to-one mapped to things in the code in this case: get the value of i, get the value of x, mulitiply them, return the result
[12:14:03] <raek> i and x are fetched in different ways though. x is a function parameter but i lives in the __closure__ of the function
[12:14:22] <teut> the order of events ,   you run the  functions() , it creates that list comprehension by using that  for loop with iterator i and returns  ???( a list of lambdas) .
[12:14:37] <teut> ?? part I have 0 knowledge about
[12:14:49] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 252 seconds)
[12:15:10] <teut> how that list comprehension creates those object
[12:15:55] <raek> teut: do you know how to write the same code with an ordinary for loop instead of a list comprehension?
[12:16:48] <raek> yes, the create_multiplers function builds up a list of lambdas and then returns it
[12:16:58] <teut> yes and its even written in that ewebsite
[12:17:04] <teut> on*
[12:17:20] *** Quits: rama (~rama@c-73-162-251-118.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[12:17:24] *** Joins: dme86 (~dan@user/dan86)
[12:17:37] <teut> and why doesnt that  list looks  [lambda x: 0 , lambda x:x , lambda x: 2x ....]
[12:18:08] <teut> and instead looks [lambda x: 4 x, lambda x :4 x, ...  ]
[12:18:52] *** Joins: olasd (~olasd@softwareheritage/olasd)
[12:18:58] <teut> oops I can use the debugger
[12:18:59] <raek> well, first the source code of the lambda is only compiled to python bytecode once
[12:19:14] <raek> so python needs to compile a lambda that works for any i
[12:19:59] <deniska> teut: expanding on my previous example, do you understand why both of these functions output 20? https://bpa.st/ENZQ
[12:20:18] <teut> because you had overwritten i
[12:20:26] <teut> explicitly
[12:20:30] <raek> the python runtime sees create_multipliers, the list comprehension, and the lambda expessions and compiles all those before even running them
[12:20:47] <raek> so you won't get an "optimized" lambda for a particular value of i
[12:21:58] <deniska> teut: https://bpa.st/KO3A now let's try this
[12:23:04] *** Joins: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net)
[12:23:05] <teut> raek points is what I was looking for
[12:23:12] <teut> point 's
[12:23:33] *** Joins: f1se4 (~f1se4@213.195.98.55)
[12:23:53] <teut> yes deniska, this is weird code
[12:24:07] *** Joins: brickfat (~brickfat@user/brickfat)
[12:24:08] <teut> those two were what everyone knows
[12:24:19] <raek> teut: A) the lambdas are create when they are added to the list. B) the lambdas are then executed at a later point in time. when is "i" being fetched? you could design a langaguage such that the value of "i" is looked up at A) or B)
[12:24:19] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[12:24:33] <raek> in python it is B)
[12:25:14] <teut> the lambdas are then executed at a later point in time.     -> nice point
[12:25:36] <teut> so the i is fetched from kind of a local  c  struct
[12:26:08] <raek> the lambda object carries with it referenses to non-local variables in its "closure"
[12:27:15] <raek> teut: you can try to print create_multipliers()[0].__closure__
[12:28:01] <raek> that is essentially the "local c struct", if I understand you correctly
[12:28:08] <teut> (<cell at 0x7faa4fad1d00: int object at 0x954ea0>,)
[12:28:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:28:22] <teut> can you decipher this?
[12:28:26] <supakeen> I don't know why 'c structs' have to come into this.
[12:28:48] <raek> now, python does not have pointer like in C or C++, so how you get a "reference to variable"? well, it turns out that the runtime creates a "cell object" for i where the current value of i lives
[12:29:06] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 264 seconds)
[12:29:07] <raek> the lambda has a referense to that cell
[12:29:36] <raek> this is to make writes to the "i" variable work
[12:29:51] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[12:30:03] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[12:30:28] *** Joins: iflema (~ian@user/iflema)
[12:30:32] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[12:30:35] <raek> teut: it is a cell, that currently contains an int
[12:30:53] <teut> ok , the cell contains the i
[12:30:56] *** Joins: iflema (~ian@user/iflema)
[12:31:04] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[12:31:11] <raek> if you print create_multipliers()[0].__closure__.cell_contents you should se the value
[12:31:42] *** Joins: iflema (~ian@user/iflema)
[12:31:45] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[12:31:45] <raek> yeah, since i is now a special kind of variable that is accessible from multiple functions, it lives in a cell that is shared between those functions
[12:32:15] <teut> yes , thanks a lot raek , you gave exactly what was required
[12:32:30] <raek> (it was some time since I looked into these details, so I might have gotten a few details wrong...)
[12:32:38] *** Joins: iflema (~ian@user/iflema)
[12:33:18] <teut> but they were more than sufficent , I can not avoid remembering these "gotcha" and bigger better
[12:33:24] <teut> think better*
[12:33:40] *** Quits: f1se4 (~f1se4@213.195.98.55) (Quit: WeeChat 2.8)
[12:33:42] <teut> now*
[12:33:51] *** Joins: rendar (~rendar@user/rendar)
[12:34:19] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[12:34:22] <supakeen> It's correct raek but it might be important to note that they're an optimization so for understanding closures they're not necessary, one *could* keep the entire stackframe around.
[12:40:48] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.1)
[12:40:57] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[12:41:20] <Nalt> I have finally succesfully registered :)
[12:42:02] <raek> Nalt: welcome!
[12:44:20] *** Joins: manti7 (~manti7@176.10.104.94)
[12:44:23] *** Joins: bsdbandit (~bwell@users.757.org)
[12:46:43] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 252 seconds)
[12:48:24] *** Joins: spithash (~spithash@user/spithash)
[12:48:51] <vdamewood> Registering for what?
[12:50:45] *** Joins: Vonter (~Vonter@user/vonter)
[12:50:50] *** Quits: Intruder777 (~Intruder7@ppp-109-104-160-59.wildpark.net) (Quit: Leaving)
[12:53:03] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[12:55:31] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[12:56:48] *** Quits: ckpro (~ckpro@103.106.181.67) (Ping timeout: 252 seconds)
[12:57:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[12:58:16] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 252 seconds)
[12:58:45] *** Joins: ckpro (~ckpro@103.106.181.67)
[13:03:48] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[13:07:41] *** Quits: jheblu (~user@116.68.98.40) (Ping timeout: 244 seconds)
[13:07:48] <ChrisWarrick> registering for libera, most likely
[13:09:11] *** Joins: wyclif (~wyclif@user/wyclif)
[13:09:56] *** Joins: kmh (~kmh@p200300df5f2f6b00d3c414bdedf29ea1.dip0.t-ipconnect.de)
[13:10:55] *** Quits: ano (~weechat@user/ano) (Ping timeout: 252 seconds)
[13:11:53] *** Joins: ano (~weechat@user/ano)
[13:13:02] *** Joins: Ivyy (~Ivyy@2001:a61:13f0:c401:aaad:8747:f950:e29)
[13:14:24] *** Quits: ckpro (~ckpro@103.106.181.67) (Ping timeout: 252 seconds)
[13:17:59] *** Joins: yangby (~secret@115.199.110.48)
[13:19:29] *** Quits: yangby (~secret@115.199.110.48) (Client Quit)
[13:20:07] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[13:23:55] *** Joins: re (~re@user/re)
[13:25:57] *** Quits: milosz (~milosz@user/milosz) (Ping timeout: 252 seconds)
[13:27:36] *** Joins: yangby (~secret@115.199.110.48)
[13:28:42] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[13:29:11] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (Quit: leaving)
[13:31:38] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[13:32:11] *** Joins: Flux (~Fluxx@user/fluxx)
[13:33:07] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 256 seconds)
[13:33:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[13:33:34] *** Quits: yangby (~secret@115.199.110.48) (Quit: Go out for a walk and buy a drink.)
[13:34:48] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[13:34:49] *** Joins: yangby (~secret@115.199.110.48)
[13:35:01] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 265 seconds)
[13:35:36] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Client Quit)
[13:36:34] *** Quits: yangby (~secret@115.199.110.48) (Client Quit)
[13:36:45] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[13:37:53] *** Joins: yangby (~secret@115.199.110.48)
[13:41:55] *** Joins: feriman (~feriman@188.163.113.127)
[13:45:24] *** Quits: frostschutz (~frostschu@2a01:c23:808c:7100:4de4:a19a:1e81:2a82) (Quit: Leaving)
[13:46:55] *** Quits: IonTau (~IonTau@ppp118-208-164-151.cbr-trn-nor-bras39.tpg.internode.on.net) (Ping timeout: 268 seconds)
[13:50:14] *** Quits: yangby (~secret@115.199.110.48) (Quit: Go out for a walk and buy a drink.)
[13:50:42] <Ninpo> I've an old RHEL6 system I want to build Python 3 on via pyenv is there somewhere I can find out the latest python that'll build against openssl 1.0.1?
[13:53:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[13:54:12] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[13:54:47] *** Joins: Laibsch (~leggewie@2a01:c22:bc67:9700:2638:e70d:ebc2:ef49)
[13:56:45] <Laibsch> Is there a way in python to execute a function of method based  on the value of a str variable?  IOW, if n==foo then execute foo or .foo() and if n==bar then execute bar.  Obviously, I can do that with an if-else-statement, but can it be done "directly"?
[13:57:24] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289)
[13:58:51] <bjs> Laibsch: you can do it generically with a dictionary mapping strings to functions
[13:59:01] <deniska> Laibsch: there's getattr() but beware passing it an unchecked input from outside
[13:59:05] <bjs> Laibsch: there is also getattr() to get attributes dynamically:   getattr(x, "y") == x.y
[13:59:38] <bjs> but yeah as deniska says,  there are things other than the methods you want to allow people to call on your object :)
[14:03:29] *** Quits: n0cto (~n0cto@174.128.227.49) (Ping timeout: 244 seconds)
[14:04:28] <Laibsch> Thanks, guys. This is for an exercise on checkio.org.  No user interaction, just byte-size, not necessarily production-quality code.
[14:04:47] <Laibsch> It's simply for my python studies.
[14:08:38] *** Joins: wyclif (~wyclif@user/wyclif)
[14:09:51] <graingert> Laibsch: operator.methodcaller
[14:10:02] *** Quits: bkraptor (~bkraptor@80.111.141.51) (Quit: Leaving)
[14:11:18] <graingert> Ninpo: It's 3.9 I think
[14:11:56] <graingert> Ninpo: you should be able to statically link a newer version though
[14:12:50] <Ninpo> graingert: latest 3.9 didn't build do I need to find a specific minor release? Trying to make the fewest system changes as possible as it's a prod system
[14:13:13] <Ninpo> latest 3.8 and 3.7 didn't either all failed on ssl module
[14:13:19] <Ninpo> 3.6.13 built
[14:13:31] *** Joins: biozz (~biozz@178.57.22.163)
[14:14:12] <deniska> Ninpo: https://github.com/pyenv/pyenv/wiki/Common-build-problems#error-the-python-ssl-extension-was-not-compiled-missing-the-openssl-lib
[14:14:19] <deniska> Ninpo: it specifically mentions RHEL6
[14:14:35] <Ninpo> oh thanks deniska I missed that
[14:15:03] <ChrisWarrick> RHEL 6?
[14:15:36] <Ninpo> yeah
[14:16:56] <graingert> Ninpo: you can pass CONFIGURE_OPTS="--with-openssl=<openssl install prefix>"
[14:17:08] <graingert> to a newer openssl install location
[14:18:25] *** Quits: teut (~teut@182.69.85.39) (Quit: Connection closed)
[14:18:51] <Ninpo> Thanks folks
[14:18:53] <graingert> Ninpo: you can also use conda to get a completely statically built python
[14:19:51] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 272 seconds)
[14:21:17] <graingert> Ninpo: fyi you can try stuff out with ocker run -it registry.access.redhat.com/rhel6/rhel
[14:21:23] <graingert> Ninpo: fyi you can try stuff out with docker run -it registry.access.redhat.com/rhel6/rhel *
[14:24:10] *** cvmn is now known as caveman
[14:25:10] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:26:08] <n00b101> there's a switch which will give a 3.3v input to raspberry pi GPIO pin at a specific time, i should then print "interrupt has received" . i wrote this https://bpa.st/UJZA but it's keep on printing  "input=1" without even receiving the signal. which means there is a logical trouble in the code.
[14:26:13] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 244 seconds)
[14:26:18] <n00b101> can someone help..
[14:28:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[14:30:08] <bjs> n00b101: what is the point of those input prints
[14:30:15] <bjs> and why 75 times exactly?
[14:31:31] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[14:31:48] <graingert> Ninpo: I tried registering for a subscription to rhel 6 but it crashed
[14:32:01] <graingert> https://www.irccloud.com/pastebin/opONrwEM/Ninpo.text
[14:32:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:34:49] <graingert> Ninpo: oh it's EOL so it won't work anymore
[14:35:42] *** Joins: biozz (~biozz@178.57.22.163)
[14:35:56] <bjs> n00b101: your code seems to say (although i'm not fluent in this RPi library): setup a callback for channel 2,  then immediately poll the channel 75 times
[14:36:15] <Ninpo> appreciate the time graingert I'll use 3.6 if I run into "need later python" I'll grab openssl source and install to my local user
[14:37:36] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[14:39:37] <n00b101> bjs: 75 is random..
[14:39:46] *** Joins: wyclif (~wyclif@user/wyclif)
[14:40:09] <n00b101> <bjs>  setup a callback for channel 2,  then immediately poll the channel 75 times
[14:40:10] *** Joins: shrey (~shrey@2402:3a80:1964:eaec:81a0:4a77:d6de:1d2)
[14:40:14] <n00b101> I don't understand this
[14:40:46] <bjs> n00b101: isn't that what your code is doing?  it calls GPIO.add_event_detect which sets up the callback, then right after it does that there's a loop that does some printing
[14:41:11] <bjs> n00b101: what do you see when you run the program?  I was sort of expecting you'd see all the input= lines and then the program exits before you even get a chance to trigger the event
[14:42:01] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 272 seconds)
[14:42:09] <n00b101> https://usercontent.irccloud-cdn.com/file/e2Gs8elt/IMG-20210612-WA0011.jpg
[14:42:18] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 264 seconds)
[14:42:29] *** Quits: zeenk (~zeenk@2a02:2f04:a310:b600:b098:bf18:df4d:4c41) (Quit: Konversation terminated!)
[14:42:29] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[14:42:31] *** Parts: shrey (~shrey@2402:3a80:1964:eaec:81a0:4a77:d6de:1d2) (Konversation terminated!)
[14:42:58] <n00b101> This is keep on printing even tho I didn't input the 3.3v to pin2
[14:43:15] <bjs> n00b101: how long does it take the program to finish?
[14:44:10] <n00b101> Almost 75 times
[14:44:28] <n00b101> Approximately yes..
[14:44:40] <bjs> That wasn't a sentence
[14:45:03] *** Quits: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net) (Quit: Client closed)
[14:45:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[14:45:09] <n00b101> I couldn't count it.. but it's 75 I believe
[14:45:16] <bjs> n00b101: yes it's 75
[14:45:19] <bjs> but how long does it take?
[14:46:23] <n00b101> Everything completes within 2seconds
[14:46:42] <n00b101> Only 2 seconds, I see 75 times it's printing
[14:46:46] <bjs> n00b101: i'm surprised it took that long to finish.  I think there are two things happening
[14:47:26] <bjs> I think your little randomly poll 75 times immediately code is not very useful.  Try replace it with something like `while True: print("input=", GPIO.input(2))  time.sleep(1)`
[14:47:39] <bjs> (and add an `import time` obviously) so it continually polls and the program doesn't end
[14:47:58] <bjs> n00b101: the second thing is, if you're seeing 1 that presumably means the GPIO pin is pulled high,  are you sure you're looking at the right channels/pins?
[14:48:35] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:49:11] *** Quits: audiocat (~audio@2603-8081-1800-0062-be1e-1890-b1db-fd05.res6.spectrum.com) (Ping timeout: 272 seconds)
[14:49:18] <n00b101> Channel and input pin are same, right?
[14:49:28] <n00b101> https://bpa.st/UJZA
[14:49:31] <bjs> n00b101: the pin is the physical thing on the board yes on the header
[14:49:39] <bjs> n00b101: but they have different names depending on which mode you use
[14:50:09] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 264 seconds)
[14:50:26] <bjs> n00b101: so you have to check which physical pin is called 2 in BCM mode for your device.
[14:50:30] <n00b101> I've given input in pin 2 ... I think channel is also the same. So, given channel as 2 as well
[14:51:05] *** Joins: shrey (~shrey@2402:3a80:1964:eaec:81a0:4a77:d6de:1d2)
[14:51:11] <n00b101> How can I check that?
[14:51:28] <bjs> n00b101: okay but the pins have _different_ names depending on which you use in GPIO.setmode(GPIO.BCM)
[14:51:34] *** Joins: f1se4 (~f1se4@213.195.98.55)
[14:52:15] <n00b101> https://bpa.st/UJZA
[14:52:21] <n00b101> Line 4
[14:52:35] <n00b101> I didn't pass the pin, is that you mean?
[14:53:22] <bjs> n00b101: okay there are two things here, there is the pin. The physical thing on the little board you have there.  then there's a channel.  Pins have _different_ channel names in different modes
[14:53:36] <bjs> n00b101: channel 2 in GPIO.BCM is not the same (potentially) as channel 2 with BCM.BOARD
[14:53:48] *** Quits: shrey (~shrey@2402:3a80:1964:eaec:81a0:4a77:d6de:1d2) (Client Quit)
[14:54:56] <bjs> e.g. channel 2 with GPIO.BCM will probably *not* be pin#2 on the board.
[14:55:42] <n00b101> But in line 4, you see I'm using `GPIO.BCM`
[14:55:45] <bjs> n00b101: if you have a real rapsberry pi running raspian you can probably run the `pinout` command at the terminal to see the pins and what names they are using
[14:55:46] <bjs> n00b101: yes
[14:56:04] *** Joins: wyclif (~wyclif@user/wyclif)
[14:56:11] <bjs> n00b101: do you understand that if you changed that line to say BCM.BOARD then channel 2 would refer to a *different physical GPIO pin* ?
[14:57:08] <n00b101> I understand both are meaning different pins
[14:57:12] <bjs> n00b101: have you seen images like https://raspi.tv/wp-content/uploads/2013/07/Rev2-GPIO-bold.jpg  do you notice how some pins have two different names.  Like   18 GPIO24
[14:57:27] *** Joins: Crassus (~Crassus@user/crassus)
[14:57:27] <bjs> channel 18 BOARD == channel 24 BCM
[14:57:30] <n00b101> So, I should run the program and run `pinout` and check?
[14:58:03] <bjs> (i think that's the right way around?)
[14:58:14] <bjs> n00b101: that'll tell you for  your device which pin has which names
[14:58:19] <bjs> so you can check
[14:58:29] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[15:00:02] *** Joins: ckpro (~ckpro@103.106.181.67)
[15:00:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 252 seconds)
[15:01:07] <n00b101> Okay
[15:01:11] *** Quits: Laibsch (~leggewie@2a01:c22:bc67:9700:2638:e70d:ebc2:ef49) (Ping timeout: 252 seconds)
[15:01:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[15:01:41] <n00b101> So, I can replace that for with the while loop you mentioned above?
[15:01:51] <bjs> n00b101: I don't really get the point of the for loop
[15:01:54] <bjs> or why 75
[15:02:35] *** Joins: Laibsch (~leggewie@dynamic-093-133-076-132.93.133.pool.telefonica.de)
[15:03:03] <n00b101> https://usercontent.irccloud-cdn.com/file/Ku0tjhz7/IMG-20210612-WA0038.jpg
[15:03:18] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[15:03:25] <bjs> n00b101: so you're attaching 3.3v to pin 3 ?
[15:05:34] *** Joins: kosh (~kosh@user/kosh)
[15:05:47] *** Quits: f1se4 (~f1se4@213.195.98.55) (Quit: WeeChat 2.8)
[15:06:56] <n00b101> Yea, GPIO2
[15:07:09] <n00b101> And the 3.3v
[15:07:14] <n00b101> To both of them
[15:08:08] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[15:08:19] <bjs> n00b101: and what do you have connected to that pin?  is it pulled down?
[15:08:26] *** Joins: shrey (~shrey@2402:3a80:1964:eaec:81a0:4a77:d6de:1d2)
[15:09:03] *** Quits: shrey (~shrey@2402:3a80:1964:eaec:81a0:4a77:d6de:1d2) (Client Quit)
[15:09:21] <n00b101> There's a 3.3v input. One end is connected to GPIO2 and one end to 3.3v just above GPIO2
[15:09:47] <bjs> n00b101: it's just permenently connected to 3.3v?  Why are you surprised you're seeing input=1 then?
[15:10:09] <n00b101> Not permanent.. it can be disconnected
[15:10:15] <bjs> n00b101: well you can't just disconnect it
[15:10:19] <bjs> you have to pull it down to 0.
[15:10:46] <n00b101> You mean I have to set it to 0 and then listen on GPIO2?
[15:11:21] <bjs> n00b101: I mean, if you just disconnect it then it doesn't fall to 0, it probably just randomly jumps up and down.
[15:12:26] *** Joins: wyclif (~wyclif@user/wyclif)
[15:12:27] *** Joins: Adoi (~Adoi@user/adoi)
[15:12:34] <bjs> There's probably an argument to say pull down in setup(),  the raspberry pi should be able to do it automatically for you.  Otherwise there's always wires and resistors :)
[15:12:36] *** Quits: ibejohn (~ibejohn@104.4.30.169) (Quit: Ping timeout (120 seconds))
[15:16:10] *** Joins: cdown_ (~cdown@163.114.131.1)
[15:17:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:18:00] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:18:57] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 272 seconds)
[15:19:26] <n00b101> No, I disconnected the 3.3v and still I get input=1
[15:19:39] <n00b101> bjs: sorry for late reply
[15:19:51] <n00b101> I'm looking at this with eyes wide open
[15:20:13] <bjs> n00b101: did you try `while True: print("input=", GPIO.input(2))` and just see what happens when you disconnect the 3.3v?
[15:21:35] *** Joins: ham5urg (~ham5urg@p5ddfdd3d.dip0.t-ipconnect.de)
[15:21:45] <bjs> n00b101: but generally you cannot just disconnect a pin and leave it "floating" like that, you have to either pull it UP to 3.3v or DOWN to 0,  if you just leave it disconnected then the value could be anything.  Raspberry pi's are clever and you should be able to tell it in software to pull down the pin so it rests at 0
[15:22:30] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 264 seconds)
[15:23:09] *** Quits: Mrokii (~mrokii@p5b2df5a8.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[15:23:12] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:23:18] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[15:23:33] *** Joins: cliluw (~cliluw@47.147.80.149)
[15:23:53] *** Joins: Mrokii (mrokii@gateway/vpn/airvpn/mrokii)
[15:24:15] *** Joins: entuland (~entuland@user/entuland)
[15:24:16] <n00b101> bjs: https://bpa.st/FR3Q
[15:24:23] <n00b101> you mean this , right?
[15:24:39] *** Joins: zaquest (~notzaques@5.128.210.178)
[15:25:29] <n00b101> bjs: all i need is, just print "signal recieved" when GPIO2 gets a 3.3v
[15:25:50] *** Joins: Neoon (~Neoon@2607:5300:60:23a5::1111)
[15:25:54] <Neoon> Morning
[15:26:06] <The-Compiler> Neoon: good afternoon :)
[15:26:11] <bjs> n00b101: yes but it sounds like you've setup your pins wrong,  try run that code and see what happens when you connect/disconnect things.
[15:26:19] <Neoon> No warnings? wow I AM FREE
[15:26:42] <bjs> n00b101: you really need to pull down the pin,  either in the setup() call in software or physically with some wires and resistor
[15:26:49] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 268 seconds)
[15:26:52] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[15:27:28] *** Joins: hrtk (~hritik@223.226.188.53)
[15:27:46] <hrtk> Is there a way to access the mock object inside the wraps / side_effect function ?
[15:28:11] <n00b101> bjs: which pin should i pull down? GPIO2?
[15:28:15] <bjs> n00b101: yes
[15:28:26] <hrtk> I need to access the mock's call_count inside the wraps/side_effect function.
[15:28:37] <bjs> hrtk: the mock does not provide a way,  but the mock is just like any other Python object so the functions can access it in any of the usual ways
[15:28:47] <n00b101> but then how do i listen for the signal to GPIO2 then?
[15:28:56] <bjs> n00b101: what do you mean?
[15:29:11] <n00b101>  print "signal recieved" when GPIO2 gets a 3.3v
[15:29:15] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 244 seconds)
[15:29:21] <bjs> n00b101: okay have you ran that while loop yet?
[15:29:43] *** Joins: the-mask (~the-mask@user/the-mask)
[15:29:43] <Neoon> So, I have a problemo, maybe someone can help.
[15:29:44] <Neoon> I first create a SQLite in Memory database
[15:29:44] <Neoon> sqlite3.connect("file:subnets?mode=memory&cache=shared", uri=True)
[15:29:44] <Neoon> Offload some data into it.
[15:29:44] <Neoon> Start a few threads, the cheapskate way
[15:29:45] <Neoon> p = Process(target=self.magic, args=([location]))
[15:29:45] *** litharge sets mode: +q $a:Neoon
[15:29:56] <bjs> fancy bot
[15:30:08] <bjs> Neoon: please use a pastebin rather than pasting here :)
[15:30:11] *** Joins: wyclif (~wyclif@user/wyclif)
[15:30:15] <bjs> Neoon: https://bpa.st/+python
[15:30:16] *** litharge sets mode: -q $a:Neoon
[15:30:21] <hrtk> bjs: So perhaps storing the mock in a variable (rather than using a with statement) and accessing it from the side_effect function should work...
[15:30:46] <n00b101> bjs: let me run
[15:30:46] <bjs> hrtk: you can define the side_effect function inside the with,  or you can use partial()
[15:30:55] <Neoon> https://pastebin.com/N9wzPuM8 sorry bjs
[15:31:10] <bjs> Neoon: process != thread
[15:31:25] <bjs> Neoon: starting a new process copies the memory, so if it's an in-memory database you get a copy :)
[15:31:35] <Neoon> makes sense
[15:32:05] <bjs> Neoon: threads are threading.Thread not multiprocessing(?).Process
[15:32:29] <Neoon> yea I seem to mix up multiprocessing and multithreading
[15:32:38] <hrtk> bjs: Yeah... that'll avoid creating a shared mock object across two independent functions. Thanks a lot !
[15:33:50] <bjs> Neoon: note I think you're not supposed to share connections over multiple threads,  but to create new connections in each thread instead
[15:34:03] <bjs> or at least, they should be locked
[15:34:31] <Neoon> its a shared sqlite in memory
[15:34:36] <Neoon> I loaded a fat json into it
[15:34:41] <Neoon> uses less memory and its used read only
[15:34:42] <Neoon> anyway
[15:34:45] <hrtk> bjs: Wait, I cannot define the side_effect function inside the with, that causes reference before assignment.
[15:34:46] <bjs> Neoon: yes but I don't think multiple threads using the same connection is safe
[15:35:02] <bjs> hrtk: I mean that just sounds like you did it wrong, not that you "cannot" do that
[15:35:20] <bjs> hrtk: oh I see what you mean, inside the with of the patch?
[15:35:27] <hrtk> bjs: Yes.
[15:35:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[15:36:05] *** Quits: ham5urg (~ham5urg@p5ddfdd3d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[15:37:59] <bjs> hrtk: ah well you can define it before the with then, it should be able to use the things inside
[15:38:10] <bjs> or I guess you could assign the side_effect inside the with
[15:38:57] <graingert> Neoon: https://docs.sqlalchemy.org/en/14/dialects/sqlite.html#sqlite-concurrency
[15:39:14] <graingert> bjs: sqlite3 has "BEGIN CONCURRENT"
[15:39:25] <graingert> which is nice and underusers speculative concurrency
[15:39:25] <n00b101> bjs: https://usercontent.irccloud-cdn.com/file/Pfn8gSd1/output.mp4
[15:39:28] <bjs> graingert: is it just a "take a lock"
[15:39:56] <graingert> bjs: no it fails transactions that touch pages that other concurrent transactions wrote
[15:39:59] <n00b101> bjs: above is the output with 3.3v and without 3.3v with the program above
[15:40:06] <graingert> and you retry them
[15:40:22] <n00b101> bjs: that is happening with whileloop
[15:40:45] <bjs> n00b101: every single output is just 1?
[15:40:54] <n00b101> Yes
[15:41:02] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[15:41:14] <bjs> graingert: oh is it just begin a transaction then?
[15:41:34] <graingert> bjs: no you have to "begin concurrent"
[15:41:42] <graingert> and it needs to be enabled
[15:41:42] <bjs> yes you just said that
[15:42:26] <graingert> bjs: you have to begin a transaction to do anything with databases
[15:42:58] <graingert> most dbapi's and actual databases conspire to automatically start one for you
[15:43:12] <bjs> graingert: this begin concurrent still requires multiple connections though no?
[15:43:21] <graingert> I don't know
[15:43:28] <bjs> I'm confused then
[15:43:45] <bjs> Oh you're just saying you need to add begin concurrent if you really want to allow transactions to interleave nicely
[15:44:17] <graingert> there's check_same_thread=False too
[15:44:26] <bjs> graingert: the docs are pretty clear if you do that you need a lock
[15:44:33] <graingert> you have to disable the default dbapi transaction autocommit too
[15:44:46] <graingert> right but begin concurrent is *brand new*
[15:47:10] <n00b101> bjs: anything i can do?
[15:47:28] <bjs> n00b101: yes, you need to pull down the pin
[15:47:30] *** Joins: wyclif (~wyclif@user/wyclif)
[15:47:54] <bjs> n00b101: and i'm like 99% sure there's just an argument you can pass to setup() to get the SoC to do it for you
[15:47:57] <graingert> bjs: https://www.sqlite.org/inmemorydb.html#sharedmemdb
[15:48:04] *** Quits: jazzy (~jaziz@2600:380:4547:d128:81a3:2cb3:d403:ef37) (Read error: Connection reset by peer)
[15:49:05] <bjs> n00b101: you need to set things up correctly so that python can read the correct pin and see the value you expect,  once you've done that you can delete the while loop and use just the callback and do the print you wanted.  But that won't work until you've set it all up correctly.
[15:50:05] <bjs> graingert: tbh reading the docs I'm finding it hard to decipher what concurrency is allowed with these in-memory databases
[15:50:50] *** Quits: Laibsch (~leggewie@dynamic-093-133-076-132.93.133.pool.telefonica.de) (Ping timeout: 256 seconds)
[15:50:56] <n00b101> bjs: can i ask what you mean by "pull down the pin"?
[15:50:58] <bjs> ive never tried before,  and i think it doesn't matter so much
[15:51:38] <bjs> n00b101: this channel really isn't the place for electronics 101,  I'm sure google can explain better anyway,  but the basic idea is that you GPIO pin should at any point in time either be at 3.3v (HIGH) or 0v (LOW)
[15:52:15] <bjs> n00b101: if the pin is just "disconnected" then it's not attached to either so it's not high or low and software won't read the right thing.
[15:52:20] *** Quits: hrtk (~hritik@223.226.188.53) (Ping timeout: 252 seconds)
[15:52:31] <bjs> n00b101: like I said, the raspberry pi is clever and I'm sure the setup() call just has an argument to tell it to pull the pin down
[15:52:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[15:52:46] <graingert> Ninpo: I'd recommend using sqlalchemy with an explicit QueuePool
[15:52:54] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Read error: Connection reset by peer)
[15:52:55] <graingert> and overriding the transaction events to use begin concurrent
[15:53:01] <Ninpo> pardon
[15:53:20] <graingert> Neoon: * sorry
[15:53:25] <Ninpo> :D
[15:54:13] *** Quits: jinsun (~quassel@182.77.87.72) (Ping timeout: 265 seconds)
[15:54:40] *** Quits: kmh (~kmh@p200300df5f2f6b00d3c414bdedf29ea1.dip0.t-ipconnect.de) (Quit: Leaving)
[15:55:49] <Neoon> interesting discussion
[15:56:09] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (Ping timeout: 265 seconds)
[15:57:06] <Neoon> graingert, no problem
[15:57:10] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:57:53] <graingert> Neoon: and the FK support too https://docs.sqlalchemy.org/en/14/dialects/sqlite.html#foreign-key-support
[15:58:34] *** Joins: greedom (~greedom@2001:16b8:2ebc:3d00:c666:45de:c976:3560)
[15:58:43] <Neoon> don't need that
[15:58:54] <Neoon> its basically a cheapskate key value store in sqlite
[15:59:28] *** Joins: Nact (~l@host-85-27-122-11.dynamic.voo.be)
[16:00:00] <Neoon> OSError: [Errno 7] Argument list too long: '/bin/sh'
[16:00:05] <Neoon> never had that one before
[16:00:08] <Neoon> eh
[16:00:18] *** Joins: jazzy (~jaziz@2600:380:4547:d128:788a:9261:efcd:4642)
[16:00:27] *** Joins: CordialCatto (~cordialca@195.246.120.11)
[16:00:36] *** Joins: Laibsch (~leggewie@dynamic-093-133-076-132.93.133.pool.telefonica.de)
[16:02:24] *** Joins: kmh (~kmh@p200300df5f2f6b00d3c414bdedf29ea1.dip0.t-ipconnect.de)
[16:02:50] <graingert> Neoon: and you also want to set  PRAGMA journal_mode = wal2;
[16:02:59] <graingert> Neoon: you should set it anyway
[16:03:10] <graingert> Neoon: it does no harm if you don't use it anyway
[16:03:20] <Neoon> forgive me
[16:03:22] <Neoon> whats the point then
[16:03:26] <Neoon> sounds pointless
[16:04:55] *** Quits: greedom (~greedom@2001:16b8:2ebc:3d00:c666:45de:c976:3560) (Remote host closed the connection)
[16:06:23] *** Joins: greedom (~greedom@2001:16b8:2ebc:3d00:c666:45de:c976:3560)
[16:07:05] <Neoon> graingert, I am sorry really sorry
[16:07:29] *** Joins: seabass (~sebastian@user/seabass)
[16:08:54] <nedbat> Neoon: no need to apologize :) It's fine to ask
[16:10:04] *** Joins: zeenk (~zeenk@2a02:2f04:a310:b600:b098:bf18:df4d:4c41)
[16:11:47] *** Joins: pedrojorgeviana (~pedro@81.203.113.3.dyn.user.ono.com)
[16:13:40] *** Joins: jheblu (~user@116.68.98.40)
[16:14:46] <betelgeuse> how can i download image and import it into pil?
[16:15:21] *** Quits: re (~re@user/re) (Ping timeout: 252 seconds)
[16:15:48] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[16:15:54] <graingert> betelgeuse: httpx.get
[16:16:18] <graingert> then stream it into pil
[16:16:35] <betelgeuse> thanks!
[16:17:22] *** Quits: Ivyy (~Ivyy@2001:a61:13f0:c401:aaad:8747:f950:e29) (Remote host closed the connection)
[16:17:45] <graingert> ah it needs to be seekable
[16:19:05] *** Joins: Cleverness (~clevernes@pool-100-2-45-18.nycmny.fios.verizon.net)
[16:20:18] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[16:20:51] *** Quits: ckpro (~ckpro@103.106.181.67) (Ping timeout: 256 seconds)
[16:21:00] <graingert> betelgeuse: seems you're best off loading the whole thing into an io.BytesIO
[16:21:16] <betelgeuse> thats what i ended up doing
[16:21:19] <graingert> you have to decopress it into pixel data to do anything with it
[16:21:40] <graingert> but it's a shame as you'll end up with 3 copies of it briefly
[16:21:45] <betelgeuse> PIL.Image.open(io.BytesIO(urllib.request.urlopen( does the trick
[16:23:34] *** Joins: wyclif (~wyclif@user/wyclif)
[16:23:53] *** Quits: greedom (~greedom@2001:16b8:2ebc:3d00:c666:45de:c976:3560) (Remote host closed the connection)
[16:24:01] *** Joins: dme86 (~dan@user/dan86)
[16:24:28] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[16:25:50] <p-i-> https://bpa.st/GUAA It seems I can't use this pattern. Or am I just doing it wrong?
[16:27:37] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[16:29:16] <graingert> https://www.irccloud.com/pastebin/DK8ZSAz0/
[16:29:19] <graingert> betelgeuse: ^
[16:29:43] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 268 seconds)
[16:29:49] <betelgeuse> thanks!
[16:29:54] *** Joins: zebrag (~chris@user/zebrag)
[16:32:11] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 256 seconds)
[16:32:22] <raek> p-i-: if you use @classmethod, then the function needs to recevice a "cls" argument. you can also use @staticmethod which does not use a cls argument
[16:32:41] <raek> another option is to just use a global function
[16:32:44] <p-i-> Thanks raek
[16:33:19] *** Quits: Laibsch (~leggewie@dynamic-093-133-076-132.93.133.pool.telefonica.de) (Ping timeout: 256 seconds)
[16:34:02] <habnabit_> p-i-, it looks like something that would be a module-level function and not on a class
[16:34:03] *** Joins: nyah (~nyah@90.221.186.180)
[16:34:13] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:34:25] <Neoon> bjs, awesome, now it uses only 500MB in total in memory thanks to the offload + threading
[16:34:36] <Neoon> such savings
[16:34:37] <Neoon> very big
[16:35:33] *** Joins: Laibsch (~leggewie@dynamic-093-133-076-132.93.133.pool.telefonica.de)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.1)
[16:36:03] <Neoon> however I still have to catch ctrl + c python now seems to be unhappy Segmentation fault (core dumped)
[16:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:36:45] *** Joins: goldfish (~goldfish@user/goldfish)
[16:37:52] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:38:02] <p-i-> If I derive from a base class, should I implement __init__ in Derived? Even if it just passes everyhing thru to Base::__init__
[16:38:14] *** Joins: tachoknight (~tachoknig@2601:248:c580:3ac0:1c2:b100:86fe:7731)
[16:38:24] <flower_> pidFile = os.path.expanduser('~/.tools/myfile.pid')
[16:38:33] <habnabit_> p-i-, if you're not doing anything in the method but upcalling, there's no reason to define the method
[16:38:39] *** Quits: Laibsch (~leggewie@dynamic-093-133-076-132.93.133.pool.telefonica.de) (Client Quit)
[16:39:55] <graingert> Neoon: who built your copy of python?
[16:40:10] <Neoon> its a package
[16:40:10] <habnabit_> flower_, is that a question?
[16:40:12] <graingert> They might have botched the sqlite linking
[16:40:13] <Neoon> bloatbuntu
[16:40:24] <graingert> Oh probably a cPython bug then
[16:40:34] <graingert> It shouldn't segfault
[16:40:39] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 272 seconds)
[16:40:45] <Neoon> I ran ctl + c a few times
[16:40:49] <Neoon> kek
[16:41:09] <Neoon> maybe I should only run it once
[16:41:49] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[16:42:04] <flower_> habnabit_, http://paste.debian.net/1200950/
[16:42:15] <flower_> FileNotFoundError: [Errno 2] No such file or directory: 'pidFile'
[16:42:28] <habnabit_> flower_, open(pidFile) not open('pidFile')
[16:42:39] <Neoon> wired
[16:42:43] <flower_> habnabit_, ah
[16:42:46] <Neoon> now it did not segfault
[16:43:04] <Neoon> apparently I should be less harsh with it
[16:43:05] <Neoon> I guess
[16:43:28] <habnabit_> flower_, but don't defecate more dotfiles into ~ like that; use appdirs to give you a directory or use ~/.local/nsmtools
[16:44:49] *** Joins: shreyanavigyan (~shrey@2402:3a80:1964:387a:293f:86a2:f80a:3036)
[16:45:09] <flower_> habnabit_, I'm not a fan of ~/.local to be honest
[16:45:20] <nedbat> habnabit_: defecate?
[16:45:35] <habnabit_> nedbat, i normally use more vulgar language, but
[16:45:41] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 252 seconds)
[16:45:52] <habnabit_> flower_, ok, but don't put more dotfiles into ~ please. i hate it a lot
[16:45:53] <flower_> habnabit_, I think it's in some specification to use .local and .share, but as a user, I prefer just one dot folder per application, like many applications do
[16:45:56] <marienz> I tend to use "litter"
[16:46:16] <flower_> habnabit_, I hate .local and .share
[16:46:16] <habnabit_> flower_, you can have your own folder under ~/.local
[16:46:35] <flower_> habnabit_, why do you hate it
[16:46:46] <flower_> habnabit_, hidden folders are meant to be hidden
[16:46:50] <habnabit_> flower_, your program isn't special enough to deserve a place in my home directory. it's clutter
[16:46:51] <marienz> flower_: I version-control (most of) my ~/.config, which work well as long as applications use it for, well, config (and keep data out of it)
[16:47:18] <habnabit_> flower_, and yes, as marienz points out, it's much easier for centralizing configuration
[16:47:20] *** Joins: Crassus (~Crassus@user/crassus)
[16:47:39] <habnabit_> flower_, they're not hidden if i `ls -a` and get a hundred different directories
[16:48:07] <habnabit_> flower_, never mind that it's not hidden or the right directory on all OSes
[16:48:37] <flower_> habnabit_, lot's of people complain about it, which I don't understand. Hidden folders are meant to be hidden. That doesn't clutter. And when you reach for it, you have all of the app in one fast to reach place. Without having to decide first whether you need .local or .share. And without having to reach for many subfolders until you finally reached the point you where looking for.
[16:48:56] <nedbat> maybe we can get back to the python part of the question? :)
[16:49:13] *** Joins: biozz (~biozz@178.57.22.163)
[16:49:14] <flower_> it's part of python programming
[16:49:14] *** Joins: hrtk (~hritik@223.226.188.53)
[16:49:14] <habnabit_> flower_, i already have to 'reach for many subfolders'; that's what i'm saying. there's a hundred different 'hidden' directories under ~ already
[16:49:54] *** Joins: sbanwart (~sbanwart@cpe-174-100-90-239.neo.res.rr.com)
[16:50:40] <flower_> flower_, there is also .config. When do you reach for .config and when for .local? I've always hated it. cd .thunderbird, how simple
[16:50:57] *** Joins: leitz (~LeamHall@072-182-158-173.res.spectrum.com)
[16:51:03] <flower_> habnabit_, ^
[16:51:22] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[16:51:43] *** Joins: zebrag (~chris@user/zebrag)
[16:51:49] <flower_> habnabit_, I'll think about it, because it's a specification, but I'm not convinced, not at all at the moment
[16:52:09] *** Quits: shreyanavigyan (~shrey@2402:3a80:1964:387a:293f:86a2:f80a:3036) (Changing host)
[16:52:10] *** Joins: shreyanavigyan (~shrey@user/shreyanavigyan)
[16:52:43] <Adoi> I tried "yield" as I was advised here, but I get nothing
[16:52:53] <flower_> habnabit_, there are apps that have stuff in .local and in .config. O my...
[16:52:58] *** Parts: shreyanavigyan (~shrey@user/shreyanavigyan) (Konversation terminated!)
[16:53:04] <Adoi> the web page shows string to be returned, in jupyter nothing happens
[16:53:11] *** Joins: shreyanavigyan (~shrey@user/shreyanavigyan)
[16:53:34] <hexnewbie> flower_: One advantage is that when the dot files are hidden, you go into ~/.config with your GUI, and you see all the programs without unhiding hidden files (small advantage, but still; I've found it useful since I've kept them hidden on my desktop)
[16:53:44] <graingert> Adoi: Show your code?
[16:53:52] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 252 seconds)
[16:54:00] *** Quits: Nact (~l@host-85-27-122-11.dynamic.voo.be) (Quit: Konversation terminated!)
[16:54:12] <flower_> hexnewbie, hm
[16:54:31] *** Joins: masoudd (~masoudd@user/masoudd)
[16:55:06] <Adoi> graingert, https://www.pastebin.cz/raw/9x9Rtfj
[16:55:52] <graingert> Adoi: and how do you run it?
[16:55:57] <Adoi> also when I replace "return" with "yield", I get the function definition in the output; "<generator object wrap at 0x7f6c1086cdd0>"
[16:56:07] *** Quits: Tashtari (~tashtari@user/tashtari) (Ping timeout: 264 seconds)
[16:56:10] <graingert> Adoi: yeah that's expected
[16:56:16] <graingert> Adoi: what are you trying to achieve?
[16:57:24] *** Joins: gulzar (~gulzar@110.226.157.203)
[16:58:13] *** Quits: CordialCatto (~cordialca@195.246.120.11) (Quit: Konversation terminated!)
[16:59:03] *** Joins: biozz (~biozz@178.57.22.163)
[16:59:09] <marienz> generators (functions with "yield" in them) are lazy: the code in them doesn't run when called, it's run when the generator object you get from calling them is asked to provide a value
[16:59:15] <gulzar> Hi. I am calculating rotation of 3D points. here https://www.online-python.com/bshOxNegDi   . You can "Run" it.  Question is: is it possiible to apply this function / or any other inbuild way  to do transformation and replae the value in the dataframe (df_coord) ?
[16:59:35] *** Quits: tachoknight (~tachoknig@2601:248:c580:3ac0:1c2:b100:86fe:7731) (Quit: Some random bits)
[17:04:33] *** Joins: tachoknight (~tachoknig@2601:248:c580:3ac0:946a:d7b1:2d83:d4cc)
[17:05:32] *** Joins: Tashtari (~tashtari@user/tashtari)
[17:06:17] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[17:06:45] <flower_> habnabit_, .config seems to be more suitable then .local, if I check which apps store their folder there
[17:06:47] *** Joins: goldfish (~goldfish@user/goldfish)
[17:07:00] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[17:07:36] <bancroft> I can't find the python3.8-dbg package on debian, is it not available yet or is there a magical secret repo?
[17:08:09] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 264 seconds)
[17:08:40] <habnabit_> bancroft, https://packages.debian.org/search?suite=all&searchon=names&keywords=python3.8-dbg
[17:09:10] <bancroft> ahh thank you!
[17:09:50] <habnabit_> bancroft, it seems debian has skipped 3.8 and gone from 3.7 to 3.9
[17:10:46] <seabass> Hello :)
[17:11:26] <seabass> I've been reading the documentation for PyPI, hoping to find some information about licenses
[17:11:50] <seabass> I was wondering if anyone here could tell me if PyPI uses SPDX license identifiers, please?
[17:12:54] *** Quits: tachoknight (~tachoknig@2601:248:c580:3ac0:946a:d7b1:2d83:d4cc) (Ping timeout: 264 seconds)
[17:13:20] <graingert> seabass: trove classifiers
[17:13:29] <graingert> seabass: you can use liccheck
[17:13:59] <seabass> graingert, thanks!
[17:14:00] *** Joins: biozz (~biozz@178.57.22.163)
[17:14:17] <seabass> So it seems as if PyPI doesn't use SPDX in any way right?
[17:14:42] *** Quits: jazzy (~jaziz@2600:380:4547:d128:788a:9261:efcd:4642) (Ping timeout: 256 seconds)
[17:14:50] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[17:15:36] <Adoi> graingert, sorry I had to leave the screen...I am wrestling with this: https://www.pastebin.cz/raw/ttox3hX
[17:16:16] <Adoi> it has to return this; https://www.pastebin.cz/raw/uTNj2aD
[17:16:58] <graingert> Adoi: https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.chunked
[17:18:08] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 252 seconds)
[17:18:47] *** Joins: jthistle (~james@dhcp168-037.wadham.ox.ac.uk)
[17:19:14] *** Quits: shreyanavigyan (~shrey@user/shreyanavigyan) (Ping timeout: 256 seconds)
[17:21:21] *** Quits: Flux (~Fluxx@user/fluxx) (Ping timeout: 252 seconds)
[17:22:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[17:23:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:23:45] *** Joins: derelict (~derelict@user/derelict)
[17:27:58] *** Joins: shreyanavigyan (~shrey@user/shreyanavigyan)
[17:28:01] *** Joins: thiras (~thiras@user/thiras)
[17:29:32] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[17:30:58] <bancroft> habnabit_: that might explain why i'm getting this? https://bpa.st/COXQ
[17:31:26] <habnabit_> bancroft, did you try to install it?
[17:31:38] <bancroft> habnabit_: yes, thus the error
[17:31:57] <habnabit_> bancroft, use pyenv if you need 3.8
[17:32:21] <bancroft> habnabit_: I have python3.8 installed and working, "on system is 3.8.5-1."
[17:32:34] <habnabit_> bancroft, honestly, i don't know how you did that
[17:32:41] <habnabit_> bancroft, is this raspbian?
[17:32:42] <bancroft> habnabit_: me neither
[17:32:59] *** Quits: gulzar (~gulzar@110.226.157.203) (Quit: Konversation terminated!)
[17:33:01] <bancroft> habnabit_: nope, but it's in a docker container
[17:33:22] <habnabit_> bancroft, huh. is this FROM python:3.8 or something?
[17:33:40] <bancroft> habnabit_: nope, FROM debian
[17:33:53] <bancroft> last built this year
[17:34:23] <habnabit_> bancroft, very strange. from packages.debian.org it doesn't look like there's any 3.8 packages
[17:34:53] *** Joins: wyclif (~wyclif@user/wyclif)
[17:35:00] <bancroft> ¯\_(ツ)_/¯
[17:35:57] <habnabit_> bancroft, do you have to use 3.8..? i honestly am not sure what part you need help with anyore
[17:36:24] *** Joins: brumla (~brumla@178.77.217.196)
[17:36:34] <bancroft> habnabit_: that's kinda the maximum, i'm trying to research old pillow vulnerabilities so I think the max I can go is 3.8
[17:36:46] <habnabit_> bancroft, oh. you definitely want pyenv then
[17:37:05] <habnabit_> bancroft, or if you're using docker anyway, FROM python:3.8
[17:37:43] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[17:37:48] <bancroft> does that image have python3-dbg and libpython3-dbg? cuz that would rock if all I need to install is gdb
[17:38:12] <habnabit_> bancroft, probably, but i don't know offhand
[17:38:22] *** Joins: masoudd_ (~masoudd@user/masoudd)
[17:38:29] <bancroft> I will try it then :)
[17:38:55] *** Joins: entuland_ (~entuland@user/entuland)
[17:38:58] *** Joins: goldfish_ (~goldfish@user/goldfish)
[17:39:18] *** Joins: brickfat_ (~brickfat@user/brickfat)
[17:39:42] *** Quits: goldfish (~goldfish@user/goldfish) (Killed (NickServ (GHOST command used by goldfish_)))
[17:40:00] *** goldfish_ is now known as goldfish
[17:40:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:40:10] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[17:41:07] *** Joins: thurs9 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[17:42:46] *** Joins: srji_ (~srji@static.43.141.203.116.clients.your-server.de)
[17:43:48] *** Joins: dme86_ (~dan@user/dan86)
[17:44:08] *** Joins: doc|home (~doc@user/doc)
[17:44:57] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[17:46:05] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[17:46:06] *** Quits: terminaldweller (~devi@192.99.102.52) (Read error: Connection reset by peer)
[17:46:19] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[17:47:12] *** Quits: masoudd_ (~masoudd@user/masoudd) (Ping timeout: 244 seconds)
[17:48:06] *** Joins: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur)
[17:48:14] *** Quits: shreyanavigyan (~shrey@user/shreyanavigyan) (*.net *.split)
[17:48:14] *** Quits: derelict (~derelict@user/derelict) (*.net *.split)
[17:48:14] *** Quits: jthistle (~james@dhcp168-037.wadham.ox.ac.uk) (*.net *.split)
[17:48:14] *** Quits: masoudd (~masoudd@user/masoudd) (*.net *.split)
[17:48:14] *** Quits: nyah (~nyah@90.221.186.180) (*.net *.split)
[17:48:14] *** Quits: dme86 (~dan@user/dan86) (*.net *.split)
[17:48:14] *** Quits: Cleverness (~clevernes@pool-100-2-45-18.nycmny.fios.verizon.net) (*.net *.split)
[17:48:14] *** Quits: jheblu (~user@116.68.98.40) (*.net *.split)
[17:48:14] *** Quits: kmh (~kmh@p200300df5f2f6b00d3c414bdedf29ea1.dip0.t-ipconnect.de) (*.net *.split)
[17:48:14] *** Quits: entuland (~entuland@user/entuland) (*.net *.split)
[17:48:14] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289) (*.net *.split)
[17:48:14] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (*.net *.split)
[17:48:14] *** Quits: bsdbandit (~bwell@users.757.org) (*.net *.split)
[17:48:14] *** Quits: rendar (~rendar@user/rendar) (*.net *.split)
[17:48:14] *** Quits: brickfat (~brickfat@user/brickfat) (*.net *.split)
[17:48:14] *** Quits: olasd (~olasd@softwareheritage/olasd) (*.net *.split)
[17:48:14] *** Quits: doc (~doc@user/doc) (*.net *.split)
[17:48:14] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (*.net *.split)
[17:48:14] *** Quits: foureyes (foureyes@brought.to.you.by.bnc4free.com) (*.net *.split)
[17:48:14] *** thurs9 is now known as thurs
[17:49:46] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:50:19] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 252 seconds)
[17:50:36] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[17:51:07] *** Joins: digilink (~digilink@user/digilink)
[17:51:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:51:48] *** Joins: tachoknight (~tachoknig@73.9.246.255)
[17:51:49] *** Quits: brickfat_ (~brickfat@user/brickfat) (Quit: Leaving)
[17:52:22] *** Joins: wyclif (~wyclif@user/wyclif)
[17:52:25] *** Joins: prs (~Priyanshu@2409:4063:4e9c:5ad6::7288:5a02)
[17:52:49] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[17:54:17] *** Joins: DaNeenjah (~jake@adsl-74-230-10-210.hsv.bellsouth.net)
[17:55:27] *** Joins: nyah (~nyah@90.221.186.180)
[17:55:32] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[17:56:01] <ThiefMaster> hi, does anyone know why black normalises all string prefixes, except for r? ie R"uck" remains as-is, but B"uck" or F"uck" get a lowercase b/f: https://github.com/psf/black/blob/main/src/black/strings.py#L139
[17:56:17] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[17:56:21] *** entuland_ is now known as entuland
[17:56:35] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[17:56:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[17:57:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:57:16] *** Joins: derelict (~derelict@user/derelict)
[17:57:28] <habnabit_> ThiefMaster, i thought for some reason R'' did something different from r'' with \u escapes but maybe that was something only on py2..
[17:57:48] <ThiefMaster> just found https://github.com/psf/black/issues/1244 on that topic
[17:58:00] <habnabit_> oh, wild
[17:58:02] *** Joins: brickfat (~brickfat@user/brickfat)
[18:02:42] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 264 seconds)
[18:04:46] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[18:04:48] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[18:05:09] *** Joins: Pleiades (~admin@193.254.47.212)
[18:07:05] *** Joins: olasd (~olasd@softwareheritage/olasd)
[18:07:15] *** Joins: rama (~rama@2601:641:400:423:c578:df6a:7d1d:cf6f)
[18:07:22] *** Joins: SebastianM (~seba@user/sebastianm)
[18:07:27] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[18:07:28] *** Joins: node1 (~node1@user/node1)
[18:07:31] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289)
[18:08:37] *** Joins: GiLgAmEzH (~gilgamezh@186.19.69.139)
[18:09:48] *** Joins: ZedHedTed (~ZedHedTed@pool-98-118-47-241.bstnma.fios.verizon.net)
[18:10:00] *** Joins: wyclif (~wyclif@user/wyclif)
[18:11:31] <gloomy_desktop> Hey, having trouble pickling and unpickling an object. Already opened an issue on the library's github, but I'm not entirely sure it's their fault/I need this to work and wouldn't mind troubleshooting myself. See here for testcase (you need to install biopython for this to work):  https://bpa.st/IK2Q
[18:12:18] <gloomy_desktop> The error I get when unpickling is "TypeError: __new__() missing 2 required positional arguments: 'tag' and 'attributes'"
[18:13:04] <gloomy_desktop> Thing is my debugger doesn't seem to allow me to step through the unpickling process, so I don't know how to figure out the problem... ideas?
[18:14:37] <habnabit_> gloomy_desktop, pickle is, uh.. not very good. do you have to use it?
[18:15:10] *** Joins: foureyes (foureyes@brought.to.you.by.bnc4free.com)
[18:15:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[18:16:15] *** Joins: wyclif (~wyclif@user/wyclif)
[18:16:23] *** Joins: mesaboogie (mesaboogie@user/mesaboogie)
[18:16:25] *** Joins: jthistle (~james@dhcp168-037.wadham.ox.ac.uk)
[18:16:28] *** Quits: pacbard (~pacbard@user/pacbard) (Quit: ZNC 1.8.2 - https://znc.in)
[18:16:46] *** Joins: tg (~tg@rockylinux/infra/tg)
[18:16:51] *** Joins: ham5urg (~ham5urg@p5ddfdd3d.dip0.t-ipconnect.de)
[18:17:02] <gloomy_desktop> Not necessarily, I just need a way to save that data to disk and retrieve it... I tried with dill (supposedly a better version of pickle) but I get a similar error
[18:17:27] <habnabit_> gloomy_desktop, json is a much better serialization format most of the time
[18:17:48] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:17:52] *** Joins: fandre1986 (~Guest93@78.10.243.46)
[18:17:53] <gloomy_desktop> but isn't it extremely limited in what it can represent/serialize?
[18:18:21] *** Quits: heco (~redrum@user/redrum88) (Ping timeout: 264 seconds)
[18:18:43] *** Parts: mesaboogie (mesaboogie@user/mesaboogie) ()
[18:19:11] <habnabit_> gloomy_desktop, only in a very narrow sense. you can represent any more complicated value as a json object, and that's composable
[18:19:19] *** Joins: Guddu (~Guddu@117.222.84.65)
[18:19:28] <fandre1986> Hi colleagues
[18:19:28] <habnabit_> gloomy_desktop, e.g. marshmallow is a library that makes this easy
[18:19:29] <fandre1986> I want to import variables into my code from a file.py like here https://bpa.st/CJLA
[18:19:48] <fandre1986> 'region' will be defined on my script and I want to use the content of this variable to import given dictionary under design.py
[18:20:33] <habnabit_> fandre1986, from modules import design; getattr(design, region)
[18:20:34] *** Quits: jthistle (~james@dhcp168-037.wadham.ox.ac.uk) (Changing host)
[18:20:34] *** Joins: jthistle (~james@user/jthistle)
[18:21:07] <bjs> fandre1986: you can also make a `regions = {"REGION_1": REGION_1, "REGION_2": REGION_2}` dictionary in modules.design
[18:21:10] <gloomy_desktop> habnabit_: thanks, will look into that
[18:21:28] <bjs> fandre1986: then `from modules.design import regions` and then `regions["REGION_1"]` will be the region you want
[18:21:29] *** Joins: amahl (~amahl@87-95-128-122.bb.dnainternet.fi)
[18:22:23] *** Joins: Intruder777 (~Intruder7@ppp-109-104-160-59.wildpark.net)
[18:22:54] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[18:24:06] <fandre1986> Thanks!! guys!
[18:26:58] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-cc00-ba0e-0ca7-233b.res6.spectrum.com)
[18:27:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:28:08] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: Lost terminal)
[18:29:25] *** Joins: dob1 (~dob1@user/dob1)
[18:30:02] *** Joins: nickodd (~nickodd@user/nickodd)
[18:30:13] *** Quits: ham5urg (~ham5urg@p5ddfdd3d.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[18:30:15] *** rany is now known as Guest505
[18:30:15] *** Quits: Guest505 (~rany@user/rany) (Killed (strontium.libera.chat (Nickname regained by services)))
[18:30:31] *** Quits: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de) (Quit: WeeChat 3.1)
[18:30:34] *** Joins: Guest505 (~rany@user/rany)
[18:30:39] *** Quits: dob1_ (~dob1@user/dob1) (Ping timeout: 252 seconds)
[18:31:23] *** Joins: rany (~rany@user/rany)
[18:31:53] *** Quits: Guest505 (~rany@user/rany) (Client Quit)
[18:34:01] *** Quits: all64bits (~mike@45.126.44.146) (Quit: WeeChat 1.9.1)
[18:34:46] *** Joins: jinsun (~quassel@182.77.87.72)
[18:35:29] *** Joins: palooka-jock (~mike@45.126.44.146)
[18:38:33] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.1)
[18:40:12] *** Quits: palooka-jock (~mike@45.126.44.146) (Client Quit)
[18:41:27] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[18:41:37] *** Quits: GiLgAmEzH (~gilgamezh@186.19.69.139) (Ping timeout: 272 seconds)
[18:41:50] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[18:43:29] <Intruder777> Is there a way in python to call kind of destructor whenever some method of the class throws exception?
[18:44:11] <bjs> Intruder777: I mean the methods can try/except and do whatever they need to do in the except.  Is that what you mean?
[18:46:09] <Intruder777> bjs, well that's one way to do it. I was thinking if there is some more generic way to do it, so I don't have to catch it everywhere inside class methods
[18:46:18] <ChrisWarrick> Intruder777: no, there isn’t
[18:46:20] <nedbat> Intruder777: Python doesn't have C++'s destructor semantics.  In Python you'd write a context manager (__enter__ and __exit__), and then use a with-statement.
[18:46:42] <bjs> Intruder777: well no,  but you don't have to manually write the code for each method of course
[18:46:44] <habnabit_> Intruder777, with's __exit__ can inspect the exception raised and optionally handle it
[18:46:44] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.1)
[18:46:45] <ChrisWarrick> Intruder777: python has “destructors”, but (a) those aren’t called for exceptions, (b) those aren’t recommended
[18:46:46] <bjs> Python can generate it
[18:47:08] *** Joins: palooka-jock (~mike@45.126.44.146)
[18:47:34] <bjs> Intruder777: the easiest way is to make a little @contextlib.contextmanager function that catches exceptions and does the cleanup and then to go `with cleanup(): ...` in the functions  (or do something to automatically do that for each method)
[18:47:56] <Intruder777> nedbat: I see, but context manager doesn't really work for me, because I need to use same instance of that class in a different places and different methods of main program
[18:47:57] *** Quits: andi_ (~andi@email.soapsurfer.de) (Quit: WeeChat 3.1)
[18:48:16] <bjs> Intruder777: why does that mean you cannot use a context manager?
[18:49:20] <nedbat> Intruder777: where is the object created?
[18:49:21] <habnabit_> Intruder777, a context manager can be used more than once, and even re-entrantly
[18:49:44] *** Joins: tofran2 (~tofran@37.189.158.134)
[18:49:55] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 252 seconds)
[18:49:55] *** Quits: user3456 (user3456@user/user3456) (Ping timeout: 252 seconds)
[18:49:55] *** Quits: shailangsa (~shailangs@host86-186-177-181.range86-186.btcentralplus.com) (Ping timeout: 252 seconds)
[18:49:55] *** Quits: snalty_ (~Shhh@user/snalty) (Ping timeout: 252 seconds)
[18:50:14] <Intruder777> bjs: I thought the suggestion is to use `with my_instance: ... x = method1(my_instance); method2(); ...` and cleanup is placed in my_instance.__exit__(). But my_instance is a property of other outer class, so it's used in multiple places, cannot place it inside one huge `with`
[18:50:19] *** Joins: Karloku (~karloku@114.84.193.135)
[18:50:27] *** Quits: hrtk (~hritik@223.226.188.53) (Ping timeout: 252 seconds)
[18:50:29] *** Quits: etienneme (~etienne@176-149-215-214.abo.bbox.fr) (Ping timeout: 252 seconds)
[18:50:42] *** Joins: user3456 (user3456@user/user3456)
[18:50:42] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 264 seconds)
[18:50:45] *** Quits: node1 (~node1@user/node1) (Ping timeout: 264 seconds)
[18:50:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:50:55] *** Joins: snalty (~Shhh@user/snalty)
[18:51:01] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 252 seconds)
[18:51:01] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 252 seconds)
[18:51:01] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 252 seconds)
[18:51:01] *** Quits: InPhase (~InPhase@openscad/inphase) (Ping timeout: 252 seconds)
[18:51:01] *** Quits: mdk (~mdk@python/psf/mdk) (Ping timeout: 252 seconds)
[18:51:01] *** tofran2 is now known as tofran
[18:51:12] <Intruder777> nedbat: it's created in one of the methods of main class
[18:51:20] <habnabit_> Intruder777, you can put the with around any block of code. it doesn't have to be one big block
[18:51:32] *** Joins: GiLgAmEzH (~gilgamezh@186.19.69.139)
[18:52:00] <Intruder777> habnabit_: ok, and if I don't want to call cleanup if there was no exception?
[18:52:06] *** Quits: chilversc (~chilversc@user/chilversc) (Ping timeout: 252 seconds)
[18:52:29] *** Joins: pacbard (~pacbard@user/pacbard)
[18:52:33] *** Joins: hrtk (~hritik@223.226.188.53)
[18:52:34] *** Joins: manti7 (~manti7@176.10.104.94)
[18:52:39] *** Joins: mdk (~mdk@python/psf/mdk)
[18:52:44] <habnabit_> Intruder777, then.. don't? like i said, __exit__ can inspect this
[18:52:49] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[18:52:57] *** Joins: InPhase (~InPhase@openscad/inphase)
[18:53:12] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 252 seconds)
[18:53:23] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[18:53:45] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[18:53:46] <Intruder777> bjs: how do I make cleanup() context manager with catches exceptions?
[18:54:04] *** Joins: chilversc (~chilversc@user/chilversc)
[18:54:15] <bjs> Intruder777: `@contextlib.contextmanager def cleanup(): try: yield; except Exception as e: <do cleanup>`
[18:55:01] <bjs> Intruder777: making the class itself a context manager is of course another approach,  `with inst:  inst.method1(); inst.method2()`  then the instance's own __exit__ can handle any exceptions that were raised by the methods
[18:55:24] <habnabit_> `with self:` haha
[18:55:26] <bjs> or you can put `with cleanup():` inside method1 and method2.  It's very unclear what the thing is you actually want to do with the exception though
[18:55:38] <Intruder777> habnabit_: you mean __exit__ should look for exc_value param?
[18:55:45] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:55:49] <habnabit_> Intruder777, yep
[18:58:10] *** Joins: shailangsa (~shailangs@host86-186-177-181.range86-186.btcentralplus.com)
[18:58:44] *** Joins: dkmueller (~dkmueller@2a01:c22:7262:e300:7229:8c74:cc39:3a35)
[19:01:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[19:01:43] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[19:02:03] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:02:19] *** Joins: loworderbit (~dave@S0106e81cba1736ea.ss.shawcable.net)
[19:02:37] <Intruder777> bjs: I have a virtual display as a resource (property) of a MyProcess class which manages a process running and using that display. While process of MyProcess is up and running - I want to reuse it in the main MainClass. But whenever process crashes or becomes unresponsive, MyProcess method throws exception, so I have to create new one, which creates new virtual display, and of course I don't want the old virtual display to keep
[19:02:37] <Intruder777> running
[19:05:18] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[19:05:31] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[19:05:54] *** Joins: supakeen (~user@python/site-packages/supakeen)
[19:06:26] *** Quits: enrh (~irc@user/enrh) (Quit: enrh)
[19:06:56] *** Quits: zeenk (~zeenk@2a02:2f04:a310:b600:b098:bf18:df4d:4c41) (Quit: Konversation terminated!)
[19:08:41] *** Joins: Gerula (~Gerula@user/gerula)
[19:09:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[19:11:32] *** Joins: shreyanavigyan (~shrey@user/shreyanavigyan)
[19:11:42] <leitz> If tests are in "test/", and the person libraries are in "person/", and one library in "person/" imports another, how do I help the code run under unittest?
[19:11:53] *** Joins: ckpro (~ckpro@103.106.181.67)
[19:11:54] *** Quits: sbanwart (~sbanwart@cpe-174-100-90-239.neo.res.rr.com) (Ping timeout: 252 seconds)
[19:11:55] <leitz> Ugh, that sounds more confusing that it is...
[19:12:19] <leitz> Error, and some code:   https://bpa.st/TP6A
[19:12:44] *** Joins: zebrag (~chris@user/zebrag)
[19:13:31] <leitz> The line 12 it mentions is:  https://github.com/LeamHall/CharacterBible/blob/unittest_1/person/character.py#L12
[19:13:31] *** Joins: Fiji (~Fiji@user/fiji)
[19:14:43] *** Quits: prs (~Priyanshu@2409:4063:4e9c:5ad6::7288:5a02) (Remote host closed the connection)
[19:18:01] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[19:18:32] <bjs> leitz: I'm confused, you have person, person.person and person.person.Person ?
[19:19:08] <bjs> leitz: so `from person import Person` isn't going to work because it's trying to import person/Person
[19:19:25] <bjs> leitz: maybe you want `from .person import Person`
[19:19:39] <leitz> bjs, yes. Sorry if it's confusing, I'm still working on it.
[19:19:42] <bjs> leitz: also note that `from person.person import Person as Person` the `as Person` part is redundant
[19:20:04] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[19:20:08] *** Joins: vimart (~vimart@148.252.128.137)
[19:20:09] <bjs> leitz: in Python you can have multiple classes in the same file so it's odd to get a class-per-file like this
[19:20:24] <leitz> The demo code works as is, as does the doctest. I'm still trying to get things sorted out.
[19:20:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2-rc1)
[19:20:53] <bjs> leitz: the imports are confused, it certainly only works if you run the files directly
[19:21:03] <bjs> the imports _will not_ work if you import the files from elsewhere
[19:21:04] <leitz> The "class per file" is because there are various implementations of "character", but the base "person" is common.
[19:21:15] *** Quits: pflanze (~pflanze@2001:1a88:19e:4500:9106:1ecc:926c:e39e) (Remote host closed the connection)
[19:21:27] *** Quits: seabass (~sebastian@user/seabass) (Quit: WeeChat 2.8)
[19:23:03] <leitz> The imports work in demo code, just not in the unit tests.     https://github.com/LeamHall/CharacterBible/blob/master/demo/show_person.py#L10-L14
[19:23:09] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 264 seconds)
[19:23:47] <bjs> leitz: this all very hacky.  Just use `from .person import Person` and ditch the sys.path hackery and then things will work
[19:24:42] <bjs> `from person import Person` is just doing it wrong, then your sys.path hackery is trying to hack on it to make it work  anyway, and it sort of works when you run it one way, but not another
[19:24:52] <bjs> and it confuses person/ with person.py
[19:25:18] <leitz> bjs, which file to put the ".person" into?
[19:25:26] *** Quits: pradhvan (~pradhvan@103.94.114.232) (Ping timeout: 265 seconds)
[19:25:29] <bjs> leitz: inside the person/ package
[19:25:46] <bjs> leitz: if you're in person/character.py for example and you want to import person/person.py then `from . import person`
[19:25:51] <bjs> (or `from .person import Person`)
[19:25:52] *** Joins: lu (~lu@user/lu)
[19:26:06] * leitz goes to test...
[19:26:38] <bjs> then _outside_ the package, `import person` to get the whole package, or `from person.person import Person` to get a particular class.   Ideally you'd do the imports inside __init__.py to reduce the typing outside the package
[19:27:45] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[19:27:57] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[19:28:56] <slowButPresent> leitz: to import person from the test directory you need to create a setup.py or pyproject.toml and install person
[19:29:09] <habnabit_> setup.cfg, not setup.py
[19:29:23] *** Joins: tijuco (~tijuco@user/tijuco)
[19:29:44] <bjs> you shouldn't actually need to do that to run the tests
[19:29:51] <bjs> but to run the demos nicely yes
[19:30:18] *** Quits: sudomann (~sudomann@86.106.143.154) (Read error: Connection reset by peer)
[19:30:24] *** Joins: sudomannn (~sudomann@86.106.143.154)
[19:32:52] <slowButPresent> habnabit_: last time I tried using only a setup.cfg pip wouldn't let me install in editable mode
[19:34:12] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:34:40] *** Parts: shreyanavigyan (~shrey@user/shreyanavigyan) (Konversation terminated!)
[19:34:49] *** Quits: ckpro (~ckpro@103.106.181.67) (Ping timeout: 272 seconds)
[19:36:00] <leitz> Okay, I'm still working to understand. Putting "from . import Person" and "from . import Character" in person/__init__.py gives me a circular import error.
[19:36:00] *** Quits: dkmueller (~dkmueller@2a01:c22:7262:e300:7229:8c74:cc39:3a35) (Quit: WeeChat 3.1)
[19:36:40] <habnabit_> leitz, pastebin the full traceback
[19:38:14] <leitz> habnabit_, traceback:   https://bpa.st/TPJQ
[19:38:48] <habnabit_> leitz, what file in Person defined in?
[19:38:53] <habnabit_> leitz, you're importing from yourself
[19:38:58] <leitz> Current code:   https://github.com/LeamHall/CharacterBible/tree/master/person
[19:39:15] <habnabit_> leitz, `from .person import Person`
[19:39:24] <leitz> Person is defined in person/person.py
[19:39:44] <leitz> habnabit_, in "person/__init__.py"?
[19:39:46] <habnabit_> leitz, `from . import Person` means that it was trying to import it from __init__.py
[19:39:57] <habnabit_> leitz, yes
[19:39:57] *** Joins: shreyanavigyan (~shrey@user/shreyanavigyan)
[19:39:58] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Remote host closed the connection)
[19:40:42] <leitz> Okay, cool. New error, let me see if I can figure it out.
[19:41:03] *** Quits: dme86_ (~dan@user/dan86) (Ping timeout: 252 seconds)
[19:41:08] *** Joins: zebrag (~chris@user/zebrag)
[19:41:16] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:41:56] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: leaving)
[19:42:47] *** Joins: dme86 (~dan@user/dan86)
[19:43:11] *** Joins: mambang (~mambang@user/mambang)
[19:43:54] *** Joins: han-solo (~hanish@user/han-solo)
[19:45:02] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[19:45:31] *** Quits: sartan (~sartan@user/sartan) (Quit: WeeChat 1.9.1)
[19:45:39] *** Joins: iftheraincomes (~iftherain@2804:14d:5c54:8fc4:96eb:4f3:66f:c1de)
[19:45:53] <leitz> habnabit_, bjs, thanks! That worked.
[19:46:13] *** Quits: fandre1986 (~Guest93@78.10.243.46) (Quit: Client closed)
[19:46:15] <leitz> So far, anyway. I still need to clean up the code.   :)
[19:47:39] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[19:49:40] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[19:49:55] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[19:50:42] *** vdamewood is now known as Guest8105
[19:50:42] *** Quits: Guest8105 (~vdamewood@fedora/vdamewood) (Killed (osmium.libera.chat (Nickname regained by services)))
[19:50:42] *** vinleod is now known as vdamewood
[19:50:49] *** Joins: Adoi (~Adoi@user/adoi)
[19:51:27] <leitz> Hmm..  in test/test_character.py the line is now "from person Import Person" and "from person import Character". These work. The same lines don't work in demo/show_person.py, unless the sys.path.append is there.
[19:52:08] <leitz> What am I missing?
[19:52:23] <leitz> Besides my usual "brain, clue, and a life"...
[19:52:56] <habnabit_> leitz, how are you running demo/show_person.py ?
[19:53:31] <Adoi> hello! graingert, if you are still online I have a question concerning your last link
[19:53:38] <leitz> habnabit_, from the repo directory. So:   " demo/show_person.py"
[19:54:20] <leitz> habnabit_,   https://bpa.st/IYGA
[19:54:45] <habnabit_> leitz, ok. without a setup.cfg or similar to install your code into a venv, python doesn't know to look in some sibling directory for packages
[19:54:45] *** Joins: NeoCore (~neocore@138.199.47.170)
[19:55:22] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 252 seconds)
[19:55:22] <leitz> habnabit_, ah. So the sys.path.append is my option here.
[19:55:39] *** Joins: sgn (~sgn@user/sgn)
[19:55:53] *** Joins: ckpro (~ckpro@103.106.181.67)
[19:56:09] <habnabit_> leitz, i would very strongly recommend against that. if you didn't want to write a setup.cfg (it's very easy) then set PYTHONPATH instead
[19:56:28] <habnabit_> leitz, modifying sys.path at runtime is fraught
[19:56:51] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:56:58] <leitz> habnabit_, pointer to a simple setup.cfg tutorial? The first ones I saw didn't seem "easy".
[19:57:18] <habnabit_> leitz, https://setuptools.readthedocs.io/en/latest/userguide/declarative_config.html
[19:57:18] <leitz> Of course, I'm running on coffee and have been going for a few hours...
[19:57:19] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[19:58:51] *** Joins: mawk (mawk@wireguard/contributor/mawk)
[19:59:45] *** Quits: corwin (someone@fosshost/director/corwin) (Quit: gone)
[20:01:32] <leitz> habnabit_, I'll have to dive into that later. It's a bit more than my brain can handle at the moment.
[20:03:16] *** Joins: Xano (~Xano@2a00:23c4:420c:d700:16e8:241f:cc8f:eb92)
[20:03:25] *** Joins: sedeki (~textual@user/sedeki)
[20:03:44] *** Joins: exciteabletom (~tom@180.150.82.109)
[20:04:47] *** Joins: zebrag (~chris@user/zebrag)
[20:04:59] <Xano> I'm trying to install a package with a dependency (Docker) that depends on pywin32. `pip install` fails on pywin32 with a ResolutionTooDeep error, yet `pip freeze` shows pywin32 version 227, which is exactly the one required by the Docker package, which depends on `pywin32==227` in its setup.py. With a constraint this specific, and pywin32 seemingly successfully installed, why would pip error on this?
[20:05:01] <graingert> Adoi: it's best if you ask the question rather than ask to ask
[20:05:28] <graingert> Xano: Probably can't install it on Linux
[20:05:29] <Xano> This is in a fresh virtual environment made specifically for this project, by the way
[20:05:31] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:05:40] <Xano> graingert, Win10 VM I'm working in
[20:06:07] <Adoi> graingert, hello back, "from more-itertools import chunked" returns "invalid syntax" for the hyphen in "more-itertools"
[20:06:24] <graingert> Adoi: It's an underscore
[20:06:24] <Xano> Adoi, The package may have a hyphen in its name, but the module probably uses an underscore
[20:06:29] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[20:06:30] <graingert> Xano: but in docker
[20:06:31] <Xano> Adoi, Try `more_itertools`
[20:06:37] <Adoi> thank you :)
[20:06:50] <Adoi> it does, Xano
[20:07:23] <Xano> graingert, So I'm not running any Python code in Docker. I'm using that for another purpose.
[20:07:24] <Xano> Adoi, yay!
[20:07:32] *** Quits: sedeki (~textual@user/sedeki) (Client Quit)
[20:07:45] *** Joins: Naan (~naan@user/naan)
[20:08:08] <Xano> graingert, So this is inside a Windows 10 VM, clean venv, `pip install`. It installed the Docker package from PyPI, but doesn't use Docker itself at all at this stage.
[20:08:42] <Xano> And I figured it might be some conflicting dependencies, but the Docker package is the only thing that appears to depend on pywin32
[20:08:54] <Xano> (I used pipdeptree to find out)
[20:09:20] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[20:11:06] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 268 seconds)
[20:11:33] *** Joins: badsektor (~badsektor@user/badsektor)
[20:12:03] *** Joins: sgn (~sgn@user/sgn)
[20:12:26] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:13:27] *** Joins: FluffyMask (~FluffyMas@user/fluffymask)
[20:14:10] *** Quits: TFKyle (~kyle@64.201.205.70) (Quit: :q!)
[20:18:21] *** Joins: feriman (~feriman@188.163.113.127)
[20:18:46] *** Joins: cul8r (~cul8r@2601:8c3:4000:b0d0::bc3e)
[20:19:06] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 244 seconds)
[20:20:09] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Ping timeout: 264 seconds)
[20:20:13] <rubin55> say, if I do class foo(x): in __init__: is x.__init__(self, etc) the same as super().__init__(etc) ?
[20:20:49] *** Joins: darksun (~darksun@user/darksun)
[20:21:07] *** Quits: cul8r (~cul8r@2601:8c3:4000:b0d0::bc3e) (Remote host closed the connection)
[20:21:26] *** Quits: et (~et@user/et) (Ping timeout: 272 seconds)
[20:22:45] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[20:23:10] <nedbat> rubin55: it might be, but you should always use super()
[20:23:10] *** Joins: et (~et@user/et)
[20:24:22] *** Joins: et_ (~et@user/et)
[20:25:01] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Client Quit)
[20:25:54] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[20:26:33] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:26:59] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Remote host closed the connection)
[20:27:34] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[20:27:48] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[20:27:48] *** et_ is now known as et
[20:31:05] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[20:32:04] *** Joins: Akuli (~Akuli@82-203-164-169.bb.dnainternet.fi)
[20:32:09] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 264 seconds)
[20:32:15] <SnoopJ> pragmatic reason: one less thing to refactor if the name of `x` changes :)
[20:32:25] *** Joins: Auron (~Auron956@user/auron)
[20:33:56] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[20:34:28] <habnabit_> rubin55, strictly speaking, no, because super is aware of what the MRO should be
[20:34:36] <habnabit_> rubin55, the former hard-codes the MRO
[20:34:44] *** Joins: dme86 (~dan@user/dan86)
[20:34:54] <SnoopJ> I would say it bypasses any local resolution entirely
[20:35:16] *** Quits: mambang (~mambang@user/mambang) (Quit: Leaving)
[20:36:18] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[20:36:25] *** Joins: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com)
[20:39:53] *** Quits: vimart (~vimart@148.252.128.137) (Quit: WeeChat 2.8)
[20:40:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:40:49] *** Joins: kmh_ (~kmh@p200300df5f2f6b00d3c414bdedf29ea1.dip0.t-ipconnect.de)
[20:41:09] *** Quits: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com) (Ping timeout: 264 seconds)
[20:43:11] *** Quits: jess (~jess@libera/staff/jess) ()
[20:43:45] *** Quits: lu (~lu@user/lu) (Ping timeout: 252 seconds)
[20:47:21] *** Joins: cdown (~cdown@89.32.122.5)
[20:47:32] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[20:47:52] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[20:48:06] *** Quits: ckpro (~ckpro@103.106.181.67) (Ping timeout: 268 seconds)
[20:50:09] *** Quits: cdown_ (~cdown@163.114.131.1) (Ping timeout: 264 seconds)
[20:50:54] *** Quits: Xano (~Xano@2a00:23c4:420c:d700:16e8:241f:cc8f:eb92) (Remote host closed the connection)
[20:53:20] *** Joins: akk (~akk@174-28-98-240.albq.qwest.net)
[20:53:22] *** Joins: et_ (~et@user/et)
[20:54:45] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[20:54:46] *** et_ is now known as et
[20:57:14] *** Joins: ckpro (~ckpro@103.106.181.67)
[20:57:54] *** Joins: frostschutz (~frostschu@2a01:c23:846e:f500:608f:bbe9:53ab:17c9)
[20:58:09] *** Joins: bsdbandit (~bwell@users.757.org)
[20:58:21] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[21:03:10] *** Joins: Crassus (~Crassus@user/crassus)
[21:04:22] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[21:07:11] *** Quits: pedrojorgeviana (~pedro@81.203.113.3.dyn.user.ono.com) (Quit: Leaving)
[21:07:25] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[21:09:02] *** Joins: zebrag (~chris@user/zebrag)
[21:09:34] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 272 seconds)
[21:09:59] *** Joins: et_ (~et@user/et)
[21:10:15] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 244 seconds)
[21:12:36] *** Joins: corwin (someone@fosshost/director/corwin)
[21:12:40] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[21:13:27] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[21:13:28] *** et_ is now known as et
[21:14:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[21:18:00] *** Quits: Mrokii (mrokii@gateway/vpn/airvpn/mrokii) (Ping timeout: 244 seconds)
[21:18:19] *** Joins: moog (~moog@107.242.124.101)
[21:18:58] *** Parts: omen (~omen@user/omen) ()
[21:20:38] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[21:20:46] *** Joins: rk04 (~rk04@user/rajk)
[21:22:03] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[21:22:32] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[21:23:40] *** Joins: et_ (~et@user/et)
[21:23:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:24:24] *** Joins: sedeki (~textual@user/sedeki)
[21:24:53] *** Joins: thiras (~thiras@user/thiras)
[21:25:06] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[21:25:07] *** et_ is now known as et
[21:26:01] *** Joins: reticuli (~reticuli@user/reticuli)
[21:26:46] <reticuli> hello any task/scheduling libs other than luigi and airflow that are dead simple for just local runs that don't require a daemon or complicated setup?
[21:26:59] *** Quits: dragonmaster (rotering@user/dragonmaster) (Quit: new kernel)
[21:27:12] *** Quits: _till_ (~till@user/till/x-8616149) (Ping timeout: 252 seconds)
[21:27:42] *** Quits: Pleiades (~admin@193.254.47.212) (Read error: Connection reset by peer)
[21:28:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[21:30:28] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[21:32:27] *** Joins: Mrokii (~mrokii@p5b2df5a8.dip0.t-ipconnect.de)
[21:32:48] *** Joins: dyslexic1t (~dyslexica@ymir.whatbox.ca)
[21:32:55] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:8d75:31de:23d5:27e9)
[21:33:58] *** Joins: magla (~gelignite@55d4a894.access.ecotel.net)
[21:34:33] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 264 seconds)
[21:34:45] *** Joins: dragonmaster (rotering@user/dragonmaster)
[21:34:49] *** Joins: eN_Joy_ (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net)
[21:34:54] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 252 seconds)
[21:35:38] *** eN_Joy_ is now known as eN_Joy
[21:35:59] *** Quits: dragonmaster (rotering@user/dragonmaster) (Client Quit)
[21:36:13] *** Joins: dragonmaster (rotering@user/dragonmaster)
[21:37:23] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[21:37:33] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 264 seconds)
[21:40:11] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.1)
[21:40:57] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[21:43:55] *** Quits: cliluw (~cliluw@47.147.80.149) (Remote host closed the connection)
[21:44:35] *** Joins: cliluw (~cliluw@47.147.80.149)
[21:45:34] *** Joins: superboot (~agentgasm@user/superboot)
[21:46:11] *** Joins: derelict (~derelict@user/derelict)
[21:48:19] *** Joins: rk04 (~rk04@user/rajk)
[21:48:28] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[21:48:47] *** Joins: ______GOD______ (~GOD@189.174.198.176)
[21:48:50] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[21:51:54] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 264 seconds)
[21:51:59] *** Joins: terminaldweller (~devi@192.99.102.52)
[21:52:05] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[21:52:24] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[21:53:54] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Quit: brylie)
[21:54:05] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 272 seconds)
[21:55:34] *** Joins: henistein (~henistein@2001:8a0:c1b3:6b01:1c24:ace4:4feb:3e15)
[21:55:57] *** Quits: cliluw (~cliluw@47.147.80.149) (Remote host closed the connection)
[21:56:22] *** Joins: cliluw (~cliluw@47.147.80.149)
[21:57:06] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[22:00:54] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[22:01:04] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[22:01:37] <graingert> reticuli: https://github.com/agronholm/apscheduler ?
[22:03:32] *** Joins: dme86 (~dan@user/dan86)
[22:05:20] *** Quits: Intruder777 (~Intruder7@ppp-109-104-160-59.wildpark.net) (Quit: Leaving)
[22:05:35] <reticuli> graingert: looks to be a schedule and less of a DAG pipeliner
[22:06:12] <graingert> How about Excel?
[22:06:49] <graingert> https://www.microsoft.com/en-us/research/uploads/prod/2018/03/build-systems.pdf
[22:07:55] *** Joins: xa0s (~xa0s@mab.sdf.org)
[22:08:28] <zweimer> I am parsing multiple files and creating an array out of some containing informations. Per file I get like 50 rows. Right know I just append them each by each until I have my resulting massive array and then convert it to a pandas dataframe. Does it make more sense to start with the pandas df earlier and just work with these instead of converting it once?
[22:09:04] <graingert> Excel also supports scheduling cyclic tasks
[22:11:17] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:15:12] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[22:15:21] *** Quits: kostkon (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb) (Remote host closed the connection)
[22:15:26] *** Joins: kostkon_ (~kostkon@2a02:587:a100:18e:9fe3:794:a225:7cdb)
[22:16:18] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[22:16:58] *** Quits: ______GOD______ (~GOD@189.174.198.176) (Quit: Turning off a portion of this simulation.)
[22:19:32] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[22:19:52] *** Quits: ckpro (~ckpro@103.106.181.67) (Read error: Connection reset by peer)
[22:21:09] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[22:21:25] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[22:26:12] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[22:26:41] *** Joins: sbanwart (~sbanwart@cpe-174-100-90-239.neo.res.rr.com)
[22:27:50] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 245 seconds)
[22:29:05] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[22:29:24] <bancroft> so i'm running my python program in gdb, it runs, buffer overflow and the thread exits. I don't get any backtrace, there's no stack. Does anyone know why?
[22:31:24] *** Joins: Tier (~tier@178.172.192.75)
[22:31:31] <bancroft> i'm so dumb, forgot my bp on exit
[22:31:34] <habnabit_> bancroft, you mean you ran 'bt' and .. ok
[22:32:43] <bancroft> habnabit_: yeah, I think I got it finally
[22:34:22] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[22:34:40] <bancroft> habnabit_: I want to make it do something funny like start the calculator app or something, any ideas?
[22:34:52] *** Parts: terminaldweller (~devi@192.99.102.52) ()
[22:35:02] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[22:35:30] <bancroft> print("This is not the image you're looking for...")
[22:35:33] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[22:35:43] <euouae> bancroft: Make a program that takes an image and splits it into little bouncy spheres
[22:35:49] <euouae> Sounds kinda funny
[22:35:49] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[22:36:13] *** Joins: supakeen (~user@python/site-packages/supakeen)
[22:37:02] *** Quits: exciteabletom (~tom@180.150.82.109) (Quit: Konversation terminated!)
[22:37:33] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[22:37:54] *** Quits: reticuli (~reticuli@user/reticuli) (Quit: WeeChat 3.1)
[22:38:14] *** Quits: shreyanavigyan (~shrey@user/shreyanavigyan) (Ping timeout: 252 seconds)
[22:42:18] *** Quits: boB_K7IQ (~boB_K7IQ@ip98-177-87-213.ph.ph.cox.net) (Ping timeout: 264 seconds)
[22:42:18] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 264 seconds)
[22:48:51] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[22:49:07] *** Joins: SebastianM (~seba@user/sebastianm)
[22:50:17] *** Joins: ______GOD______ (~GOD@189.174.198.176)
[22:51:35] *** Quits: Mrokii (~mrokii@p5b2df5a8.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[22:52:20] *** Joins: Mrokii (mrokii@gateway/vpn/airvpn/mrokii)
[22:53:54] *** Quits: brumla (~brumla@178.77.217.196) (Ping timeout: 268 seconds)
[22:53:54] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[22:55:12] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 252 seconds)
[22:55:15] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[22:55:58] <Tashtari> Well.
[22:56:05] <Tashtari> I wonder what proteus-guy thinks of -that- in terms of "hurting the python community".
[22:56:20] <bjs> Tashtari: indeed
[22:57:19] <Tashtari> Maybe I'll ask him.
[22:57:33] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[22:57:52] *** Joins: Adoi (~Adoi@user/adoi)
[22:58:30] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 252 seconds)
[22:58:38] *** Quits: kmh_ (~kmh@p200300df5f2f6b00d3c414bdedf29ea1.dip0.t-ipconnect.de) (Quit: Leaving)
[22:58:50] <nedbat> Tashtari: maybe you can find them in freenode-##python
[22:59:35] <kline> oh dear
[22:59:53] <kline> nedbat, if theres anything libera can do to help, please dont hesitate to ping us
[23:00:08] <nedbat> kline: the old channel was pretty quiet anyway.
[23:00:09] *** Quits: dyslexic1t (~dyslexica@ymir.whatbox.ca) (Ping timeout: 252 seconds)
[23:00:12] *** Joins: imode (~imode@user/imode)
[23:00:27] <SnoopJ> ...did the old #python get zapped?
[23:00:29] <kline> sucks that it happens in any case
[23:00:32] <nedbat> kline: snakes shed their skin, and the old one is forgotten
[23:00:58] *** Joins: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net)
[23:01:44] *** Joins: poxifide (deathspawn@user/poxifide)
[23:02:10] <Tashtari> The founder of freenode-##python is "tjr", is that... anyone?
[23:02:27] *** Quits: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1) (Ping timeout: 265 seconds)
[23:02:36] <habnabit_> Tashtari, it's one of the new freenode opers
[23:02:41] <Tashtari> Figures.
[23:03:16] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[23:03:59] <ApostleInTriumph> Hello. is this the official python channel that has migrated from freenode.irc?
[23:04:04] <bjs> ApostleInTriumph: yes
[23:04:06] <SnoopJ> yep
[23:04:06] <bjs> ApostleInTriumph: welcome :)
[23:04:20] <ApostleInTriumph> Alright, hello SnoopJ and bjs
[23:05:38] *** Joins: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1)
[23:05:38] <bjs> Byteflux: indeed it is
[23:06:07] <ApostleInTriumph> i used to be ramsub07 SnoopJ bjs
[23:06:08] *** Quits: hrtk (~hritik@223.226.188.53) (Quit: Took the red pill)
[23:06:38] *** Joins: chester (~chester@user/chester)
[23:06:53] <chester> looks like you'll have a lot of people joining this channel soo. Freenode just killed #python over there.
[23:06:55] <Byteflux> bjs: I keep thinking how much lower can they get... they never disappoint.
[23:06:56] <InPhase> nedbat: Words of wisdom.
[23:07:05] <Byteflux> Or rather, they always disappoint.
[23:08:04] <Tashtari> I guess I'll just hang around the 'community' channel in case anyone actually shows up there looking for advice and redirect them here until I get klined.
[23:08:09] *** Quits: gloomy (~ldorigo@81.161.149.37) (Ping timeout: 264 seconds)
[23:08:24] <nedbat> Tashtari: thanks
[23:08:37] <Tashtari> It'll be fun!
[23:08:42] <habnabit_> freenode: "who needs FOSS anyway"
[23:08:50] <Tashtari> #python was my last channel there anyway
[23:08:56] <Byteflux> Good job getting everyone moved so quickly. This channel outgrew the old one much quicker than most projects.
[23:09:01] <nedbat> habnabit_: "Freenode: building community one K-Line at a time"
[23:10:51] *** Quits: euouae (~user@user/euouae) (Quit: ERC (IRC client for Emacs 26.3))
[23:11:18] <ApostleInTriumph> i never really understood how an issue at freenode actually affected Ubuntu, python etc
[23:11:26] <rwb> who did they kline? (not trying to start anything, just curious)
[23:11:36] <habnabit_> rwb, 'everybody'
[23:11:43] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[23:11:44] <rwb> that's ambiguous :^)
[23:11:55] <ApostleInTriumph> wikipedia articles refer to some changes in logo and so on.. but i couldn't find a specific reason why other projects were moving
[23:12:00] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Ping timeout: 250 seconds)
[23:12:23] <habnabit_> ApostleInTriumph, because freenode staff is doing things like this repeatedly
[23:12:43] <chester> ApostleInTriumph: and even if they haven't yet, the overwhelming risk of it is there constantly.
[23:13:19] <chester> ApostleInTriumph: and even if they don't outright kills the channel and k-line its users, they try to control how the channels are run too much.
[23:13:23] <ApostleInTriumph> all that i've understood the purpose of this channel to be a platform where people help each other out of generosity.
[23:13:47] <jthistle> chester: what's to make you think that Libera won't ever end up doing the same?
[23:14:07] <chester> jthistle: because I know the staff here. They are crooks, but in a completely other way.
[23:14:16] <chester> jthistle: it's the very same staff that used to run freenode.
[23:14:19] <jthistle> chester: hahaha, fair enough
[23:14:27] *** Joins: gustaf (~gerikson@user/gerikson)
[23:15:00] <Adoi> hi everyone
[23:15:26] <chester> as long as you don't hurt their ego the wrong day of the week, they're happy with their thrones (that's what most of them really want). They do a lot of good work.
[23:15:27] *** Joins: srhm (~ascii@user/srhm)
[23:16:38] <DocMors> I think it's a not unusual story, I think most of the people here setup boards in the past that have been swallowed at one stage by some commercial entity.
[23:16:59] <Adoi> in this hour's chapter of Adoi's perpetual uniterability problem, we have this version of the code; https://www.pastebin.cz/raw/eZTSQff  what should be added so that "s.peek()" will be applied to all list items?
[23:17:03] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 272 seconds)
[23:17:29] <Byteflux> Freenode didn't have an adequate organizational structure to protect itself from a corporate takeover. One person held all the keys and unanimously made the decision to sell critical assets. Libera is structured differently to prevent those exact consequences.
[23:17:39] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[23:17:43] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[23:17:48] <Byteflux> s/consequences/circumstances/
[23:17:59] <InPhase> jthistle: This network was formed as a proper non-profit with a decentralized power structure, which will keep it from getting "sold off" or similar problems like happened from centralization at freenode.  A decentralized team of good-natured people is about as safe as it gets in this world.
[23:18:10] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[23:18:20] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[23:18:24] <habnabit_> jthistle, freenode lasted _until_ the staff change, and those staff are now here, so..
[23:18:25] <Adoi> oh, I fell right in the middle of a discussion
[23:19:15] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@78.84.20.200)
[23:19:16] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[23:20:03] <Tashtari> Adoi: Sorry.  Leenode just shut down #python and klined nedbat so... there's a bit of a stir. :)
[23:20:55] <DocMors> if it wasn't so sad I'd by laughing ma head of, I closed my python on freenode about a week ago
[23:20:57] <bjs> Adoi: hello again :)
[23:21:19] <DocMors> nedbat, I hope you didn't suffer any permanent damage!
[23:21:39] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 268 seconds)
[23:21:45] <bjs> Adoi: don't worry about other conversations,  irc is not great at interleaving streams nicely but thankfully our monkey brains are.
[23:21:47] <bjs> Adoi: what is peekable?
[23:23:03] *** Parts: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) ()
[23:23:07] <bjs> Adoi: oh you just forgot to import it from more_itertools
[23:24:01] <Adoi> hi bjs! :)
[23:24:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:24:39] <Adoi> bjs, oh I am sorry, I added it in a former cell in jupyter, forgot to add it to the paste..but I did it here; https://www.pastebin.cz/raw/sHPypgh
[23:26:08] *** Joins: Fiji_ (~Fiji@user/fiji)
[23:26:10] <bjs> Adoi: it's okay.   You need some kind of loop calling .peek() on every element
[23:26:18] <bjs> Adoi: at the simplest, make a list and append() to it and pass that to join :)
[23:26:51] <bjs> Adoi: but something doesn't seem right here,  because why do you want to call peek() on everything?
[23:27:29] *** Joins: Fiji- (~Fiji@user/fiji)
[23:27:39] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[23:28:33] *** Joins: badsektor (~badsektor@user/badsektor)
[23:28:48] <ApostleInTriumph> does itertools combinations (with c=2) always returns pair in sorted order?
[23:29:22] *** Joins: sliwkr (~kks@c130-224.icpnet.pl)
[23:29:35] <bjs> ApostleInTriumph: not sorted, but in the order they appear in the input
[23:29:41] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[23:29:41] *** Joins: fedenix__ (~fedenix@gateway/tor-sasl/fedenix)
[23:29:49] <bjs> ApostleInTriumph: so combinations([...,a,....b,....]) will contain (a,b) but not (b,a)
[23:29:54] <Tashtari> Wtf.  They just klined habnabit_ o_O
[23:30:07] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[23:30:20] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 245 seconds)
[23:30:23] <Tashtari> "You bastards!"
[23:30:26] <habnabit_> Tashtari, i tried to post a chit about #python and it got deleted, so i posted saying "freenode is canceling me" and i got k-lined
[23:30:31] <habnabit_> big shrug
[23:30:34] *** Joins: gloomy (~ldorigo@81.161.149.37)
[23:30:42] *** Joins: Fiji (~Fiji@user/fiji)
[23:30:43] <Tashtari> A chit?
[23:30:49] <ApostleInTriumph> bjs makes sense, thanks!
[23:30:58] <habnabit_> Tashtari, #python-offtopic
[23:31:03] *** Quits: SebastianM (~seba@user/sebastianm) (Read error: Connection reset by peer)
[23:31:06] <Tashtari> ah.
[23:31:26] <habnabit_> don't want to dominate this channel
[23:31:42] *** Quits: henistein (~henistein@2001:8a0:c1b3:6b01:1c24:ace4:4feb:3e15) (Quit: Client closed)
[23:32:29] *** Joins: runkhattria (~arunkhatt@182.77.105.181)
[23:33:14] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[23:33:15] *** Quits: Fiji- (~Fiji@user/fiji) (Ping timeout: 245 seconds)
[23:33:27] *** runkhattria is now known as deadlytackler
[23:33:38] <Adoi> bjs, making a list and appending ends me up with a list, and that is where it gets stuck. I need to get every single list item printed. therefore I added s.peek() which prints them one by one. but only if I enter s.peek() every time for each item. that is where it goes awry with it.
[23:33:43] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:34:12] *** Quits: ______GOD______ (~GOD@189.174.198.176) (Quit: Turning off a portion of this simulation.)
[23:34:29] <Adoi> with two other different solutions to the same problem I end up with a list, but get stuck there,
[23:34:38] <bjs> Adoi: this whole code is a bit odd, chunked(q, 1) seems a bit pointless?
[23:34:44] <bjs> Adoi: isn't q already the thing you want?
[23:35:06] <Adoi> q is a whole string. I need the string to be decomposed
[23:35:13] <bjs> Adoi: no q is a list
[23:35:19] <bjs> isn't it?
[23:36:01] *** Joins: meridion (~meridion@punt.hetgrotebos.org)
[23:36:16] *** Joins: SebastianM (~seba@user/sebastianm)
[23:36:18] <bjs> Adoi: if wrap("foobar", 3) then q = ["foo", "bar"]   right?
[23:36:50] <bjs> so you've already done the work, you just need to recombine q into something.
[23:37:23] <Adoi> oh yes you are right,
[23:37:30] *** Quits: NeoCore (~neocore@138.199.47.170) (Ping timeout: 244 seconds)
[23:37:38] <Adoi> I added that in order to be able to use peekable
[23:37:49] <Adoi> and then somehow extend it to print all items at once
[23:37:58] <hogarius> Adoi: bjs: or for xx in q:   print(x)    Would that work?
[23:38:02] <bjs> Adoi: peeking each element in a peekable(chunked(q, 1)) is pretty pointless. That says "put everything in q in a box,  make it so I can open the box and look inside then for each box take the thing out of the box"
[23:38:03] <Adoi> at least that was my hope :)
[23:38:08] <bjs> Adoi: did you see the paste I gave you yesterday?
[23:38:47] <bjs> Adoi: https://bpa.st/634A this one
[23:38:50] <Adoi> yes because I cant take the thing from out of the first box :)
[23:38:58] <Adoi> I mean from q
[23:39:02] <bjs> Adoi: but why do you need the boxes at all?
[23:39:11] <bjs> Adoi: why can't you take it from q?
[23:39:33] <bjs> Adoi: here you can `for row in q: print(row)` or `return "\n".join(q)` etc,  no?
[23:39:43] <Adoi> oh no I must have missed it, now looking
[23:40:27] <bjs> Wulf: damn man
[23:41:44] *** Joins: tg (~tg@rockylinux/infra/tg)
[23:42:13] <CalimeroTeknik> does anyone have logs/timeline of what happened to the freenode channel? I just want the facts
[23:42:37] <bjs> CalimeroTeknik: i'm not sure anyone knows other than it got closed. the logs don't say much
[23:43:00] <KirkMcDonald> CalimeroTeknik: Freenode staff closed it.
[23:43:14] <habnabit_> CalimeroTeknik, yeah, there's no warning or timeline to speak of. freenode staff has been closing channels for weeks
[23:43:25] <habnabit_> CalimeroTeknik, no warning any time
[23:43:28] <Tashtari> I wonder if [Leenode apologist, name redacted] snitched.
[23:43:50] <CalimeroTeknik> thanks
[23:43:51] <bjs> Tashtari: I mean it was one of the largest channels on the network,  surely the staff were aware of it and what was going on
[23:44:01] <bjs> if not then wtf are they doing not even paying attention to their biggest communities?
[23:44:10] <Adoi> bjs, victory! having seen this just one line in your linked code sufficed:  "lines = "\n".join(letters)"
[23:44:11] <Tashtari> Maybe.  But I and others had been obstinately redirecting people here for weeks.
[23:44:30] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 265 seconds)
[23:44:43] *** Joins: tijuco (~tijuco@user/tijuco)
[23:44:52] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[23:44:55] <Adoi> bjs, no chunk, no peekable, just the above line; https://www.pastebin.cz/raw/VowX6u4
[23:44:59] <bjs> Tashtari: CalimeroTeknik: Wulf asked in freenode #freenode what happened to #python.  root replied "spam" and then banned Wulf
[23:45:09] <CalimeroTeknik> kline?
[23:45:33] <bjs> kline knows nothing!  they're innocent I tell ya
[23:45:36] <kline> !
[23:45:37] <deadlytackler> can someone help me on https://bpa.st/OYXA selenium, not able to click 'get started'
[23:46:51] <deadlytackler> @tashtari reached here...
[23:47:03] <CalimeroTeknik> oops sorry for free HL
[23:47:10] <Tashtari> deadlytackler: Welcome, I'm glad you were able to connect.
[23:47:29] <Tashtari> Hopefully someone here can help you with your issue.
[23:47:30] <bjs> Adoi: yep,  I really recommend trying to write these things without the fancy itertools or string methods (join/split etc),  because you'll understand how those methods work better
[23:47:48] <deadlytackler> did it with emacs itself, hex was going over my head...
[23:47:49] <bjs> CalimeroTeknik: no just a channel ban (as it should be),  although I hear they have been abusing their K-line abilities ...
[23:48:00] <rany> deadlytackler, i think you need to get selenium to wait for page to load
[23:48:07] <bjs> CalimeroTeknik: anyway _that_ is -offtopic,  :)
[23:48:49] <deadlytackler> @rany I am waiting and then running the code chunk...
[23:49:36] <chester> bjs: I saw a post about you on chit.freenode.net [sic]. Click on rasengan.
[23:50:01] <bjs> chester: ?
[23:50:50] <chester> bjs: sorry, there's another user "bjd" that he "chitted" about.
[23:50:51] <Adoi> bjs, in my earlier days learning python I really tried with the basics, and it was rewarding..obviously, one gets to see less of how it works under the hood with composed library tools
[23:50:54] *** Joins: Fiji_ (~Fiji@user/fiji)
[23:51:25] *** Joins: OverCoder (~OverCoder@user/overcoder)
[23:51:26] <bjs> Adoi: it's good to know how to do all of this stuff with the basics, because then you can see the patterns that can be reduced into functions
[23:51:29] <OverCoder> ok
[23:51:38] <bjs> (and obviously, when the magic functions aren't there, you can do it manually)
[23:51:47] <bjs> chester: ah okay
[23:52:11] <Adoi> now I have the intention to do more practical things, therefore intentionally aimed to familiarize myself with more "advanced" uses, like libraries
[23:52:16] *** Quits: fedenix__ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[23:52:23] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[23:52:25] <Adoi> so I go and pick those fancy things :)
[23:52:40] <Adoi> admittedly, some of them are advised to me here, too
[23:53:25] <ApostleInTriumph> how do i shuffle list of list in python? is it better shufle range(len) and index a new one?
[23:53:45] <ApostleInTriumph> ^pure python (w/o numpy)
[23:54:01] <KirkMcDonald> ApostleInTriumph: How do you want to shuffle it, exactly?
[23:54:16] <Adoi> but apparently I should keep on trying with the basics :)
[23:54:20] <bjs> Adoi: we here have a bad habit of suggesting the short one-liner that works perfectly
[23:54:24] <Wulf> ApostleInTriumph: [[1,2,3], [4,5,6], [7,8,9]]. Could [[4,6,5], [9,7,8], [1,2,3]] be a valid result?
[23:54:25] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 272 seconds)
[23:54:31] <ApostleInTriumph> KirkMcDonald preserving the list within the outer list
[23:54:41] <ApostleInTriumph> Wulf no
[23:54:56] <ApostleInTriumph> [4,5,6] should be the same,
[23:55:12] <bjs> ApostleInTriumph: so so each inner list should not be shuffled
[23:55:16] <bjs> but only the order of the lists?
[23:55:16] *** Joins: shreyanavigyan (~shrey@user/shreyanavigyan)
[23:55:34] <Wulf> ApostleInTriumph: random.shuffle?
[23:55:58] *** Joins: kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net)
[23:55:59] <ApostleInTriumph> bjs exactly
[23:56:01] <bjs> ApostleInTriumph: random.shuffle(the_list_of_lists)  then.
[23:56:08] <ApostleInTriumph> thanks!
[23:58:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
