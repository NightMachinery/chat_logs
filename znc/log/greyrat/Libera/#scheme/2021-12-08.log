[00:07:12] *** Quits: klovett (~klovett@107.115.32.81) (Ping timeout: 268 seconds)
[00:10:52] <edgar-rft> scheme uses global warming instead
[00:11:15] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[00:11:31] *** Quits: even4void (even4void@came.here.for-some.fun) (Quit: fBNC - https://bnc4free.com)
[00:11:45] *** Joins: badkins (~badkins@136.56.92.199)
[00:12:08] *** Quits: robin (~robin@user/terpri) (Ping timeout: 268 seconds)
[00:17:04] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[00:24:37] <sham1> Every time a new lexical scope is created, an iceberg melts
[00:30:29] <kennyd> this is some cool shit.. self learning table tennis robot https://www.youtube.com/watch?v=u3L8vGMDYD8
[00:38:02] *** Joins: even4void (even4void@came.here.for-some.fun)
[00:48:42] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 265 seconds)
[00:49:09] <mdhughes> You can't store 2^64 bytes in anything because the Earth only contains 1.3e50 atoms, and you'll need at least 8 per byte, plus a large amount of infrastructure.
[00:50:29] <mdhughes> If you tore up the Solar System and reassembled the planets into a laser-pumped memory grid like core memory, you might be able to hold 2^64. Access time would be in hours from light-speed delays.
[00:50:31] <gwatt> 1.3E50 is significantly more than 2^64
[00:51:44] <gwatt> 2^64 is about 1E20
[01:00:24] *** Joins: wand (~user@gateway/tor-sasl/wand)
[01:10:09] <amazigh> does it mean we can make it?
[01:15:57] *** Joins: badkins (~badkins@136.56.92.199)
[01:16:55] *** Quits: wand (~user@gateway/tor-sasl/wand) (Remote host closed the connection)
[01:18:46] <gwatt> probably not
[01:20:07] <fizzie> 2^64 *bits* is just two exabytes, and there's definitely more data than that in the world.
[01:20:34] <fizzie> Seagate has shipped enough hard drives to store 3 zettabytes, according to their blog.
[01:21:35] <gwatt> Oh, I'm not saying 2^64 words of memory is unattainable, just probably not on a single computer.
[01:22:09] <fizzie> Yeah, that was just re "in anything".
[01:22:09] *** Joins: klovett (~klovett@107.115.32.81)
[01:22:46] <gwatt> Also, I think the amd64 architecture only has 48 bit addressable space
[01:22:56] <gwatt> or maybe that's old hat
[01:23:12] <fizzie> It goes up to 57 bits now, with https://en.wikipedia.org/wiki/Intel_5-level_paging .
[01:23:19] <fizzie> But not quite 64, no.
[01:39:55] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[01:40:10] *** Quits: Avichi (~Avichi@lithe.xs4all.nl) (Ping timeout: 256 seconds)
[01:42:37] *** Joins: taiju (~taiju@240b:253:ec40:2400:651e:f83b:5890:99a6)
[01:43:31] <mdhughes> Obviously I shouldn't math in the morning, because now I've blown up the Earth for a computer. But it is 2^72 atoms for bytes, plus overhead. Still leaves too much storage.
[01:51:17] *** Joins: notzmv (~zmv@user/notzmv)
[02:15:28] *** Quits: trip_fandango (~tripfanda@2a00:a040:19e:72a1:4501:4dfb:ee8d:2344) (Ping timeout: 268 seconds)
[02:19:48] *** Joins: trip_fandango (~tripfanda@2a00:a040:19e:72a1:688f:66f1:d486:f1e7)
[02:21:06] *** Joins: sonny (~sonny@8.6.144.252)
[02:26:25] <sonny> IsThe Typed Racket strongly typed?
[02:27:15] <sonny> s/IsThe/Is/
[02:27:27] <sham1> IIRC yes
[02:37:06] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[02:37:36] *** Joins: badkins (~badkins@136.56.92.199)
[02:42:33] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[02:50:39] *** Quits: trip_fandango (~tripfanda@2a00:a040:19e:72a1:688f:66f1:d486:f1e7) (Quit: WeeChat 3.3)
[02:50:57] *** Joins: tripfandango (~tripfanda@2a00:a040:19e:72a1:688f:66f1:d486:f1e7)
[03:03:50] <rgherdt> the irc-logs page in the title only contains logs until 2021-11-26
[03:05:57] *** Quits: m455 (~m455@user/m455) (Ping timeout: 252 seconds)
[03:07:59] *** Joins: badkins (~badkins@136.56.92.199)
[03:13:38] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[03:20:05] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[03:23:50] *** Joins: s-liao (~s-liao@101.86.99.70)
[03:30:00] *** Quits: klovett (~klovett@107.115.32.81) (Quit: Textual IRC Client: www.textualapp.com)
[03:35:27] *** Quits: taiju (~taiju@240b:253:ec40:2400:651e:f83b:5890:99a6) (Ping timeout: 265 seconds)
[03:39:20] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[03:41:32] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[03:41:49] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 240 seconds)
[03:48:46] <Zipheir> rgherdt: Thanks.  The bot must be down again.
[03:48:53] <Zipheir> gwatt: ^^
[03:59:48] *** Quits: s-liao (~s-liao@101.86.99.70) (Quit: Client closed)
[04:00:07] *** Joins: s-liao (~s-liao@101.86.99.70)
[04:03:02] *** Joins: livoreno (~livoreno@user/notzmv)
[04:19:01] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[04:25:57] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[04:26:12] *** Quits: jao (~jao@194.99.104.13) (Ping timeout: 265 seconds)
[04:26:30] *** Joins: badkins (~badkins@136.56.92.199)
[04:27:26] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[04:29:50] *** Quits: sonny (~sonny@8.6.144.252) (Quit: Going offline, see ya! (www.adiirc.com))
[04:30:12] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[04:30:21] *** Joins: badkins (~badkins@136.56.92.199)
[04:30:52] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Client Quit)
[04:31:07] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[04:32:01] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Client Quit)
[04:32:13] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[04:56:13] *** Quits: tripfandango (~tripfanda@2a00:a040:19e:72a1:688f:66f1:d486:f1e7) (Ping timeout: 240 seconds)
[05:10:17] *** Joins: [deleted] (~livoreno@user/notzmv)
[05:13:49] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[05:18:25] *** Quits: s-liao (~s-liao@101.86.99.70) (Quit: Client closed)
[05:19:38] *** Joins: s-liao (~s-liao@101.86.99.70)
[05:28:33] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 265 seconds)
[05:29:17] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[05:31:12] *** Quits: kennyd (~bc8165b6@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[06:09:38] *** Quits: [deleted] (~livoreno@user/notzmv) (Ping timeout: 265 seconds)
[06:13:39] *** Joins: livoreno (~livoreno@user/notzmv)
[06:19:39] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[06:24:37] *** Joins: livoreno (~livoreno@user/notzmv)
[06:29:29] *** Quits: dbohdan (~dbohdan@user/dbohdan) (Read error: Connection reset by peer)
[06:29:44] *** Joins: winning-luser (~c@2601:8c1:80:70d0::756)
[06:30:15] *** Joins: dbohdan (~dbohdan@user/dbohdan)
[06:59:24] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[06:59:52] *** Joins: badkins (~badkins@136.56.92.199)
[07:06:07] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 252 seconds)
[07:12:26] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:14:37] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:15:58] *** Joins: genieliu (~genieliu@103.37.140.38)
[07:22:37] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 265 seconds)
[07:26:37] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[07:28:43] *** Joins: livoreno (~livoreno@user/notzmv)
[07:35:15] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:37:45] *** Quits: s-liao (~s-liao@101.86.99.70) (Quit: Client closed)
[07:48:19] *** Joins: klovett (~klovett@107.115.32.161)
[07:54:08] *** Joins: s-liao (~s-liao@101.86.99.70)
[08:05:01] *** Quits: genieliu (~genieliu@103.37.140.38) (Ping timeout: 240 seconds)
[08:27:56] *** Quits: shawn (~shawn_w@152.44.212.188) (Ping timeout: 268 seconds)
[08:29:24] *** Quits: livoreno (~livoreno@user/notzmv) (Quit: Quit)
[08:29:41] *** Joins: livoreno (~livoreno@user/notzmv)
[08:29:59] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[08:30:45] *** Joins: livoreno (~livoreno@user/notzmv)
[08:33:40] *** Joins: genieliu (~genieliu@103.37.140.38)
[08:43:17] *** Quits: genieliu (~genieliu@103.37.140.38) (Ping timeout: 252 seconds)
[08:44:12] *** Joins: badkins (~badkins@136.56.92.199)
[08:49:31] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 268 seconds)
[09:09:50] *** Joins: genieliu (~genieliu@103.37.140.24)
[09:20:52] *** Joins: shawn (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net)
[09:23:21] *** Quits: shawn (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:26:46] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[09:35:40] *** Joins: ArthurAGleckler (~user@2600:1700:ce00:be10:5b2d:bfbe:f9b2:ea28)
[09:39:01] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 240 seconds)
[09:41:39] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[09:46:39] *** Joins: ajr (~ajr@cpe-172-91-111-232.socal.res.rr.com)
[09:47:25] *** Joins: Everything (~Everythin@37.115.210.35)
[09:49:33] *** Quits: ajr (~ajr@cpe-172-91-111-232.socal.res.rr.com) (Quit: nyaa~)
[09:56:22] *** Quits: s-liao (~s-liao@101.86.99.70) (Quit: Client closed)
[10:00:37] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[10:29:59] *** Quits: ArthurAGleckler (~user@2600:1700:ce00:be10:5b2d:bfbe:f9b2:ea28) (Ping timeout: 252 seconds)
[11:07:31] *** Quits: klovett (~klovett@107.115.32.161) (Quit: ZZZzzzâ€¦)
[11:24:38] *** Quits: taylan (~taylan@user/taylan) (Quit: Leaving)
[11:24:49] *** Joins: taylan (~taylan@user/taylan)
[11:44:47] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 252 seconds)
[11:45:57] *** Joins: mononote (~mononote@user/mononote)
[11:45:57] *** Joins: skapata (~Skapata@user/skapata)
[12:11:00] *** Joins: notzmv (~zmv@user/notzmv)
[12:23:07] <amazigh> hello all
[12:26:30] <amazigh> Given https://mdn.io/SubtleCrypto, it is possible to implement signup / register and login / signin without disclosing the actual password to the backend server? What is the name of the algorithm?
[12:27:26] <wasamasa> SRP is such an algorithm
[12:27:57] <amazigh> I was thinking about an asymetric scheme... ok I will look into SRP
[12:28:05] <wasamasa> a so-called zero knowledge proof
[12:28:09] <wasamasa> there's a bunch of more then
[12:28:57] <wasamasa> that sentence doesn't make much sense
[12:29:02] <wasamasa> there's a few more of them
[12:30:54] *** Joins: tripfandango (~tripfanda@2a00:a040:19e:72a1:d82b:5203:e894:5496)
[12:31:14] <wasamasa> https://blog.cryptographyengineering.com/2014/11/27/zero-knowledge-proofs-illustrated-primer/
[12:43:20] <amazigh> tx, that is helpful.
[12:46:02] *** Joins: badkins (~badkins@136.56.92.199)
[12:48:02] <amazigh> https://en.wikipedia.org/wiki/Secure_Remote_Password_protocol#Overview                                                                                                                                                                 [S-----]
[12:50:35] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[12:51:07] <amazigh> It is a good seemgly off-topic reading, part of my morning routine. Now, I need to find a small task to get into coding.
[12:55:59] *** Joins: s-liao (~s-liao@101.86.99.70)
[13:16:27] *** Quits: madagest (~madage@user/madage) (Ping timeout: 276 seconds)
[13:18:46] *** Quits: tripfandango (~tripfanda@2a00:a040:19e:72a1:d82b:5203:e894:5496) (Read error: Connection reset by peer)
[13:20:05] *** Joins: tripfandango (~tripfanda@5.29.28.78)
[13:21:54] *** Joins: madage (~madage@user/madage)
[13:39:59] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[13:41:04] *** Quits: genieliu (~genieliu@103.37.140.24) (Ping timeout: 265 seconds)
[13:48:47] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:49:01] *** Joins: s-liao2 (~s-liao@101.86.99.70)
[13:52:52] *** Quits: s-liao (~s-liao@101.86.99.70) (Ping timeout: 256 seconds)
[14:02:01] *** Quits: ahlk (~user@2600:1700:31c0:3a10::43) (Ping timeout: 245 seconds)
[14:02:14] *** Joins: civodul (~user@guix/contributor/civodul)
[14:03:39] *** Joins: kennyd (~bc8165b6@cerf.good1.com)
[14:09:40] *** Joins: genieliu (~genieliu@103.37.140.24)
[14:23:48] *** Quits: s-liao2 (~s-liao@101.86.99.70) (Quit: Client closed)
[14:24:18] <dpk> there was argument recently about how Scheme should make sure that types created by different programmers have unique names (for the purposes of serialization and deserialization, mainly, i think)
[14:24:19] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[14:24:44] <dpk> i think R6RS solved this with UUIDs (though i'm unsure, as i'm not an habitual R6 user)
[14:25:00] <dpk> has anyone considered using URIs, especially tag: URIs?
[14:26:24] <dpk> so i would uniquely call a box type in a program i wrote today tag:dpk.io,2021:box, or whatever
[14:27:59] <dpk> https://www.taguri.org
[14:29:56] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:33:23] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[14:46:32] <sjamaan> dpk: In CHICKEN we use the module in which the record is defined as a prefix for the (internal) tag name
[14:46:51] <sjamaan> Given that module names ought to be unique anyway, I think this should be a fine and easily understood way of doing this
[14:50:03] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[14:50:18] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:50:35] *** Joins: seninha (~seninha@user/seninha)
[14:53:54] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[14:54:47] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:59:25] *** Quits: zwr (~zwr@2804:d45:b966:fb00:c5d2:58a5:f5c6:cdea) (Ping timeout: 240 seconds)
[15:00:30] *** Joins: zwr (~zwr@2804:d45:b966:fb00:30:a6f4:bd2d:bb15)
[15:17:22] *** Quits: genieliu (~genieliu@103.37.140.24) (Ping timeout: 256 seconds)
[15:18:43] *** Joins: genieliu (~genieliu@103.37.140.24)
[15:20:32] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[15:20:43] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[15:20:45] *** Joins: madage (~madage@user/madage)
[15:25:53] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 252 seconds)
[15:26:19] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:35:22] <mdhughes> For a large number of modules, reverse domain like Java is helpful, but on the scope of any Scheme project, just don't reuse another project's module names.
[15:36:47] <mdhughes> R6RS can do (define-record-type Foo (nongenerative com-example-Foo) ...) but that might be overkill.
[15:38:04] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Remote host closed the connection)
[15:40:05] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[16:00:49] *** Quits: cognemo (~cognemo@cpe-46-164-24-121.dynamic.amis.net) (Quit: ZNC 1.8.2 - https://znc.in)
[16:01:56] *** Joins: cognemo (~cognemo@cpe-46-164-24-121.dynamic.amis.net)
[16:03:52] *** Quits: cognemo (~cognemo@cpe-46-164-24-121.dynamic.amis.net) (Client Quit)
[16:05:34] *** Joins: cognemo (~cognemo@cpe-46-164-24-121.dynamic.amis.net)
[16:11:57] *** Joins: s-liao (~s-liao@101.86.99.70)
[16:12:43] *** Joins: abralek (~abralek@109.38.149.165)
[16:19:10] *** Joins: Avichi (~Avichi@2001:980:1b5c:1:9d3b:11aa:5f90:4aa5)
[16:24:57] *** Quits: abralek (~abralek@109.38.149.165) (Read error: Connection reset by peer)
[16:25:45] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[16:37:20] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[16:48:04] *** Joins: badkins (~badkins@136.56.92.199)
[16:52:25] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 252 seconds)
[16:58:37] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[17:06:17] *** Quits: Avichi (~Avichi@2001:980:1b5c:1:9d3b:11aa:5f90:4aa5) (Quit: Client closed)
[17:14:13] *** Quits: genieliu (~genieliu@103.37.140.24) (Ping timeout: 265 seconds)
[17:14:34] *** Joins: badkins (~badkins@136.56.92.199)
[17:16:17] *** Quits: s-liao (~s-liao@101.86.99.70) (Ping timeout: 256 seconds)
[17:18:33] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[17:18:43] *** Joins: badkins (~badkins@136.56.92.199)
[17:26:17] *** Quits: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Ping timeout: 268 seconds)
[17:34:03] *** Quits: axvr (757f658d76@2604:bf00:561:2000::e1) (Remote host closed the connection)
[17:34:13] *** Joins: s-liao (~s-liao@101.86.99.70)
[17:34:21] *** Quits: s-liao (~s-liao@101.86.99.70) (Client Quit)
[17:36:14] *** Quits: retropikzel (9d1a4f9f46@2604:bf00:561:2000::ce) (Remote host closed the connection)
[17:36:14] *** Quits: sm2n (ae95cb1267@user/sm2n) (Remote host closed the connection)
[17:36:14] *** Quits: j0ni (c79e08d4b1@2604:bf00:561:2000::2a) (Remote host closed the connection)
[17:36:35] *** Joins: j0ni (c79e08d4b1@2604:bf00:561:2000::2a)
[17:36:35] *** Joins: retropikzel (9d1a4f9f46@2604:bf00:561:2000::ce)
[17:36:49] *** Joins: sm2n (ae95cb1267@user/sm2n)
[17:36:50] *** Joins: axvr (757f658d76@2604:bf00:561:2000::e1)
[17:41:20] *** Joins: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net)
[17:46:07] <amazigh> IIRC MNW recommends UUIDs
[17:47:02] <amazigh> at least with UUIDs, you can recreate the very same record in another library (in the rare event you need it), that feature is used in weinholt's reader 
[17:47:51] <amazigh> I do not recall the name of the library, but Chez has a special record object for annotations, and making the same annotations from outside would not be possible without
[17:48:04] <taylan> the idea of using UUIDs in human-readable code really irks me to be honest.  reverse DNS sounds like a good idea for long-lasting unique names that are also expected to be human-readable.
[17:48:30] <amazigh> hey taylan :)
[17:48:43] <amazigh> You use the UUID once at the place where the record is created
[17:50:01] <amazigh> One might argue that objects <myrecord> as in (define-record <myrecord> ...) and exporting <myrecord> would be enough
[17:50:45] <amazigh> the above proposal with <myrecord> does not help with serializing / deserializing
[17:52:36] <amazigh> Zipheir: are you using alpine edge or another version?
[17:54:25] <amazigh> Zipheir: I am asking to know if my problems with Xorg are related to alpine edge or not? another question is it possible to downgrade from edge to the latest stable?
[17:55:22] <amazigh> After spending sometime with Netsurf, and badwolf... firefox does not seem slow on rpi400 ^^'
[17:55:58] <amazigh> for some reason netsurf has access to a special google frontend..
[17:56:24] <sham1> UUIDs? Eh, not a fan
[17:56:56] <amazigh> Did you know there is a Microsoft^tm UUID?
[17:57:07] <sham1> They call it GUID, yes
[17:58:38] *** Joins: klovett (~klovett@107.115.32.161)
[18:00:02] <taylan> I believe the current MS GUID are actually a valid type of standard UUID
[18:01:21] *** Quits: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[18:04:43] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[18:06:07] <amazigh> I am not sure I understand the code I am reading, afaiu microsoft has a part of the 128bit space reserved for them?
[18:06:35] <amazigh> at least, they are considered a microsoft "variant"
[18:06:36] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[18:15:27] <jcowan> dpk: I think the short date formats at taguri.org are broken: yyyy (and ditto for yyyy-mm) should be valid iff it is valid on the *last* day of the period, not the first.
[18:16:40] <dpk> yeah, that would be better, but the RFC says the first day
[18:17:42] *** Joins: genieliu (~genieliu@111.193.167.10)
[18:17:45] <jcowan> welp, we are only talking about 6 extra chars
[18:20:26] <mdhughes> The Y10K problem's gonna have a lot of old engineers thawed out from cryosleep to work on it.
[18:20:38] <amazigh> ^^'
[18:23:01] *** Quits: genieliu (~genieliu@111.193.167.10) (Ping timeout: 240 seconds)
[18:24:51] <sham1> Doesn't the ISO 8601 already have a provision for Y10K
[18:25:35] <sham1> Yeah
[18:25:44] <sham1> FOr example you'd have +10000-01-01
[18:27:31] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[18:27:54] <sham1> That of course being the first of January 10'000
[18:39:05] *** Joins: badkins (~badkins@136.56.92.199)
[19:03:22] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[19:11:03] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[19:12:29] *** Joins: X-Scale` (~ARM@25.55.43.5.rev.vodafone.pt)
[19:13:49] *** Quits: X-Scale (~ARM@46.50.4.128) (Ping timeout: 240 seconds)
[19:13:49] *** X-Scale` is now known as X-Scale
[19:14:18] *** Joins: seninha (~seninha@user/seninha)
[19:19:52] *** Quits: kennyd (~bc8165b6@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[19:21:00] <amazigh> Regarding `eval` and environments, so it is not standard to reify an environme (tho mit and guile do it)
[19:21:57] <amazigh> What happens is supposed to happen when one does something like (eval `(write ,myvariable) (environment '(scheme base)))
[19:23:01] <amazigh> it is missing `(scheme write) but you get the idea
[19:28:43] <amazigh> with a lambda closure, it is possible to create some kind of environment:
[19:28:53] <amazigh> > (define myenv (eval `(lambda (symbol) (case symbol ((mybv) ,mybv))) (environment '(scheme base))))
[19:28:54] <amazigh> > (myenv 'mybv)
[19:28:56] <amazigh> #u8(#x01 #x02 #x03 #x2A)
[19:30:38] <amazigh> To implement (current-environment) it would require to scrape the lexical scope at compile time
[19:38:50] <amazigh> it seems to me it is possible to bridge the gap between Kernel and Scheme
[19:39:19] <amazigh> first thing first remove the $ in variable names
[19:41:09] <amazigh> i need to read the Kernel report (again!)
[19:41:53] <amazigh> There is strange behavior where they can define SOMETHING in terms of its previous binding, without renaming it beforehand.
[19:45:30] <amazigh> $vau in terms of $vau with an implicit sequence (aka. begin in scheme) 
[19:45:40] <amazigh> https://git.sr.ht/~amirouche/sink-kernel/blob/master/subfiles/library.snk  
[19:49:09] <amazigh> I do not understand why / how $vau with $sequence does not end up with an infinite loop
[19:55:19] <sham1> One thing that annoys me is that there is no way of creating an empty environment that is also mutable
[19:55:54] <amazigh> sham1: with R7RS?
[19:57:12] <sham1> Yes
[19:58:11] <amazigh> oh uh ah! (environment '(scheme base)) does return an environment indeed, so there is the notion of reified environment in R7RS; and current-environment is not-standard.
[19:58:55] <amazigh> return an environment object, but it has no predicate that satisfy it e.g. environment?
[19:59:56] <sham1> Yeah, and all of (environment), (scheme-report-environment) and (null-environment) are immutable. For some things that's all you need, but it would be nice to also have a (standard) way of making an environment one could for example (define) stuff, that isn't (interaction-environment)
[20:00:27] <sham1> I think that it would be good for some kind of sandboxing
[20:01:49] <amazigh> why not create a new environment?
[20:01:54] <amazigh> from the previous one?
[20:03:10] <amazigh> speaking of mutable, I was thinking that all mutations on environment in kernel-on-r7rs-scheme will not be easy to implement without some interpretation overhead
[20:03:54] <amazigh> mutating the caller environment would require some kind of trickery
[20:04:14] <amazigh> e.g. boxing the mutated variable.
[20:06:42] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[20:07:13] <amazigh> re $vau-with-sequence-of-expr-as-body in terms of $vau is an error as defined in library.snk, even if, I mean especially if you consider that all bodies are letrec*, that works with sink, because the SINK REPL emulate a letrec*
[20:12:47] <amazigh> There is many thing interesting with K-1RK, but current-environment seems the most important part, and whether the returned environment is mutable or not. (refied continuations with disjoint type are also neat..)
[20:19:37] <amazigh> Then one can implement a form `vau`, prefix all calls with `vau-call` that will dispatch depending on whether the combiner is an operative or applicative, in many cases vau-call can be dropped at compile time, since most callable will be applicatives aka. Scheme procedures.
[20:19:46] *** Joins: abralek (~abralek@j74182.upc-j.chello.nl)
[20:20:31] <amazigh> I think I will copy the R-1RK.pdf into markdown to make it easier (and hopefully deserve the title of great Anthroposcene Copyist)
[20:55:14] <gwatt> Zipheir: bleh. ok. I'll figure that out
[21:09:49] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[21:19:43] *** Quits: tripfandango (~tripfanda@5.29.28.78) (Ping timeout: 252 seconds)
[21:21:34] *** Joins: tripfandango (~tripfanda@2a00:a040:19e:72a1:5877:91f7:f6d6:10e7)
[21:24:53] *** Joins: tatsumaru (~tatsumaru@78.83.244.47)
[21:25:09] <tatsumaru> guys is it true that there's a basement under MIT where all the parentheses are stored and produced?
[21:25:30] <amazigh> x')
[21:27:06] <X-Scale> haha
[21:27:28] <gwatt> tatsumaru: common misconception. as mcarthy spins in his grave he creates parentheses and anti-parentheses. when the two meet, whatever is in between gets forcibly evaluated.
[21:28:24] <gwatt> also, someone poached the name scribe...
[21:30:31] <Zipheir> gwatt: We can always figure out another logger.  Using scribe was originally a stop-gap, I guess.
[21:30:56] <gwatt> I can rename it, I'm just grumpy about it
[21:31:21] <Zipheir> schribe?
[21:31:47] <Zipheir> No, doesn't obviously suggest Scheme, looks German.
[21:32:09] <gwatt> I was going to be boring and do "scheme-scribe"
[21:32:57] *** Quits: abralek (~abralek@j74182.upc-j.chello.nl) (Read error: Connection reset by peer)
[21:32:57] <gwatt> Mostly I want to figure out why the reconnection isn't working
[21:33:13] *** Joins: abralek (~abralek@j74182.upc-j.chello.nl)
[21:33:13] <Zipheir> amazigh: I do recall having some trouble getting the X server working on alpine.  It apparently has some issues with musl's linker, IIRC.
[21:36:09] <amazigh> I think I fixed, the problem, I mean, I have a workaround, I use a software called `cage` that is wayland kiosk, that spins a single application, in my case firefox. There is two problems: locking the computer is not supported, and it is not easy to switch VT.
[21:36:19] <amazigh> (sway does freeze sometime for some reason)
[21:37:40] <Zipheir> amazigh: BTW, SRFI 224 is the only data type SRFI to have an official UUID :)
[21:37:44] <Zipheir> (So far.)
[21:39:05] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Ping timeout: 265 seconds)
[21:39:41] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[21:41:01] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 240 seconds)
[21:42:29] *** Joins: georgy (~bc8165b6@cerf.good1.com)
[21:47:13] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[21:57:51] *** Quits: nrr__ (sid20938@lymington.irccloud.com) (Ping timeout: 245 seconds)
[21:58:32] *** Quits: groovy (sid62069@hampstead.irccloud.com) (Read error: Connection reset by peer)
[21:58:34] *** Quits: klovett (~klovett@107.115.32.161) (Ping timeout: 256 seconds)
[21:58:35] *** Quits: duncanm (sid287146@tinside.irccloud.com) (Read error: Connection reset by peer)
[21:59:15] *** Joins: groovy (sid62069@id-62069.hampstead.irccloud.com)
[21:59:28] *** Joins: duncanm (sid287146@id-287146.tinside.irccloud.com)
[21:59:29] <rudybot> la la la
[21:59:35] *** Joins: nrr__ (sid20938@id-20938.lymington.irccloud.com)
[21:59:48] <sham1> I was about to think it loud how one would handle a variadic amount of return value in call-with-values, where the receiver can take any number of parameters, but then I realised that you can just expand the return stack as needed
[22:02:07] <sham1> Shuffling the stack a bit to get room for the return values under stuff like the return pointer works just fine
[22:02:07] *** Joins: badkins (~badkins@136.56.92.199)
[22:03:54] <Zipheir> I don't understand that in Scheme terms, at least.  Wouldn't the receiver just be a variadic procedure?
[22:06:39] *** Parts: tatsumaru (~tatsumaru@78.83.244.47) ()
[22:06:46] <sham1> Yes it would be. But as an optimisation, a receiver function like (lambda (a b . rest) ...) would allocate two slots by default
[22:07:19] <sham1> When passed to call-with-values
[22:08:01] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[22:10:06] <sham1> Since the compiler knows that the minimum arity is 2, it can allocate enough stuff and also do things like give an error or a warning or something when the producer function doesn't return enough stuff
[22:12:17] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[22:14:00] <Zipheir> Ah, ok.
[22:14:44] <sham1> So that was what I was wondering, but it turns out that it's somewhat obvious
[22:25:02] <sham1> The woes of dancing around calling conventions while doing high-level languages
[22:26:22] <dpk> if rules are made to be broken, conventions are made to be ignored
[22:27:53] <sham1> Well yeah. Strict compliance only really matters with FFI stuff, but even for a custom calling convention there are weird things to consider, like this
[22:55:45] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[22:57:52] *** Joins: badkins (~badkins@136.56.92.199)
[22:58:02] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[23:00:44] *** Joins: seninha (~seninha@user/seninha)
[23:05:40] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[23:09:43] *** Joins: badkins (~badkins@136.56.92.199)
[23:14:30] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[23:20:49] *** Joins: badkins (~badkins@136.56.92.199)
[23:39:44] *** Joins: gnomon_ (~gnomon@cpe1c872c7063d0-cm00fc8d8fbe70.cpe.net.cable.rogers.com)
[23:39:48] *** Joins: aoh__ (~aki@haltp.org)
[23:39:57] *** Joins: manumanu_ (~mio@213-67-252-160-no79.tbcn.telia.com)
[23:44:30] *** Quits: gnomon (~gnomon@cpe1c872c7063d0-cm00fc8d8fbe70.cpe.net.cable.rogers.com) (Ping timeout: 260 seconds)
[23:44:30] *** Quits: manumanumanu (~mio@213-67-252-160-no79.tbcn.telia.com) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: jgart (16dd2205e4@irc.cheogram.com) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: aoh (~aki@haltp.org) (Ping timeout: 260 seconds)
[23:44:31] *** Quits: lloda (~user@11-206-127-185.static.world-connect.ch) (Ping timeout: 260 seconds)
[23:47:11] *** Joins: mononote (~mononote@user/mononote)
[23:50:31] *** Joins: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net)
[23:57:09] *** Joins: lloda (~user@11-206-127-185.static.world-connect.ch)
