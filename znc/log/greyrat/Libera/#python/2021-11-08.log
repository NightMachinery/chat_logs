[00:00:33] *** Joins: Telvana (~capo@user/telvana)
[00:00:42] <cluelessperson> energizer, ha, I was thinking of it more as a singular table's orders, in which order doesn't matter. :D
[00:01:15] <energizer> good point. we dont know enough about the requirements
[00:01:18] <lionslicer> ooh
[00:01:22] *** Quits: Inst (~Inst@2601:6c4:4080:3f80:40a:9f91:8f3e:4f02) (Remote host closed the connection)
[00:01:23] <lionslicer> dict is dictionary
[00:01:28] <lionslicer> my bad
[00:01:28] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[00:01:50] <lionslicer> the point of this exercise was to use lists in a certain way
[00:01:50] *** Quits: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Ping timeout: 260 seconds)
[00:02:04] <lionslicer> I'm pretty sure I'll use dicts in the next one
[00:02:44] <Pi-sistance> I dont understand whats going wrong here. list index out of range? https://bpa.st/44MQ
[00:03:41] <gloomy> Hey, why is it that some things run at roughly normal speed when run in a debugger while some are over 10x slower?
[00:03:48] <cluelessperson> Pi-sistance,   for i in some_list:   retrieves values.   i will be a list value,  it will not be the index you're expecting.
[00:03:57] <cluelessperson> Pi-sistance,   for i in range(len(some_list)):
[00:04:14] <cluelessperson> or,   for i, v in enumerate(some_list):
[00:04:17] *** Telvana is now known as Rob
[00:04:35] <energizer> gloomy: which things?
[00:05:13] <gloomy> energizer: that is exactly what I would like to find out :-)
[00:05:30] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[00:05:46] <energizer> gloomy: well, what makes you think that some things run at roughly normal speed when run in a debugger while some are over 10x slower?
[00:06:19] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:06:40] <gloomy> Empirically I noticed that running stuff in vscode's debugger (not sure if it's the same in other ones) is slower. Sometimes the difference is huge, sometimes it's barely noticeable
[00:06:43] *** Quits: nomic (~nomic@185.192.69.211) (Quit: Leaving)
[00:06:44] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[00:07:01] *** Joins: nomic (~nomic@185.192.69.211)
[00:08:01] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 245 seconds)
[00:08:08] <Pi-sistance> cluelessperson: thanks, so what did I try to retrieve if its not the elements of the list in order?
[00:08:16] <energizer> i cant say much without more info
[00:08:56] <cluelessperson> Pi-sistance, you're iterating over the elements in the list,  then performing a lookup like  some_list[element],   but that index likely doesn't exist.
[00:09:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:10:45] *** Quits: jay-m1262 (~jay-m@129.0.204.209) (Ping timeout: 256 seconds)
[00:13:14] <Pi-sistance> cluelessperson: I dont get it. is it becasue im using i fortwo different lists?
[00:13:47] <Pi-sistance> and assuming that the code will assume the same comparable element for the second list
[00:13:52] *** Joins: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com)
[00:14:13] <jinsun> gloomy: things running slower in debugger is expected, now slightly slower vs 10x slower is something that depends a lot on the code
[00:14:14] <cluelessperson> Pi-sistance, You access a list's specific index by providing a zero based count up to that element in the list.
[00:14:17] <Pi-sistance> cos that's the only thing that kinda explains to me "it's wrong" atm'
[00:14:43] <cluelessperson> Pi-sistance, you are iterating over the elements, then attempting to use an element, to access an index from the list.
[00:15:09] *** Quits: rickybob (uid410295@id-410295.helmsley.irccloud.com) ()
[00:15:14] <gloomy> Pi-sistance: try adding print(i) in your for loop. It should be pretty clear what is going on.
[00:17:05] <gloomy> jinsun: so what type of code will cause it to be a bit vs. a lot slower?
[00:18:40] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[00:18:57] *** Joins: Klinda (~superleag@user/klinda)
[00:19:57] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[00:20:18] <jinsun> gloomy: no idea, never tried to investigate, if you have some example code that shows the difference, then we can try to find out the reason for that particular case and maybe generalise
[00:20:40] *** Joins: MikZyth (~MikZyth@host-148-157-66-217.spbmts.ru)
[00:20:52] <Pi-sistance> I still cant see whats wrong here. Im going through each element in one lsit with the for i in list1 part and setting each element to equal each comparable element in the other list by list2(i) * the scalar?
[00:21:59] <gloomy> Not really, was just curious since I noticed it a few times.
[00:22:13] <gloomy> Pi-sistance:  did you put the print?
[00:22:31] <Pi-sistance> for i in listx:         listxz[i]=(listx[i]*scalar)             <<< Im seting each element that is iterated over listxz to equal each related element in listx* the scalar
[00:22:34] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:22:54] <Pi-sistance> gloomy: yeah it just printed each element as expoected
[00:23:12] *** Joins: mickey8 (~user@user/mickey)
[00:23:19] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-ed25-b55e-9b32-d913.res6.spectrum.com) (Quit: jarthur)
[00:23:25] *** Joins: anddt (~anddt@net-130-25-70-92.cust.vodafonedsl.it)
[00:24:05] *** Quits: brettgilio (~brettgili@x-node.gq) (Quit: Leaving...)
[00:24:07] <jinsun> Pi-sistance: but when you do listx[i] then i should not be the element, it should be the index of the element
[00:24:19] <gloomy> Pi-sistance:  so what happens when your code gets to the point where it does listx[5]*scalar?
[00:26:39] <gloomy> listx[i] means "the element of listx that is at index i"
[00:26:54] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[00:26:54] <gloomy> but in your code, i is not the index, it's the actual element
[00:26:57] *** Joins: CB_JD (~Code_Bleu@user/code-bleu/x-6939963)
[00:27:38] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[00:27:43] <gloomy> so you either 1. do listxz = i*scalar
[00:28:17] <gloomy> uh, scrap that.
[00:28:42] <gloomy> You'd do `for i in range(len(listx)):` and keep the rest of your code unchanged
[00:28:51] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[00:28:59] <gloomy> that way you are iterating over the indices of your list, not the elements
[00:30:00] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[00:30:20] *** Joins: brettgilio (~brettgili@x-node.gq)
[00:30:33] *** Quits: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:32:03] <Pi-sistance> gloomy: the index just means position in the list right? so for in in range(len(listx)) would just take me to the related postion in the sequence I set the range at, sure, how is that not wha im already doing?
[00:32:23] <gloomy> yes, index means position
[00:32:36] *** Quits: TJ- (~root@user/tj-) (Ping timeout: 245 seconds)
[00:32:43] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:f199:83e2:d329:a885) (Quit: Textual IRC Client: www.textualapp.com)
[00:33:50] <gloomy> range(len(listx)) means "a list from 0 to the length of your list", so in your case, [0,1,2,3] - which is just a way to get a list of the indices (i.e., positions) that are in your list
[00:34:28] *** Joins: TJ- (~root@user/tj-)
[00:34:31] <gloomy> so `for i in range(len(listx)):` gives you i=0;i=1;i=2;i=3
[00:34:35] <Pi-sistance> oh im setting the actual element to something , rather than the postion of the element in the list
[00:34:57] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[00:35:00] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[00:35:14] <gloomy> while `for i in listx` gives you i=2;i=3;i=5;i=7
[00:35:34] <jinsun> Pi-sistance: no you are doing something even more wrong
[00:37:14] <gloomy> Pi-sistance: not quite. listxz[i] = <new value> would be fine, but i *is not an index*
[00:38:16] <gloomy> It might be less confusing for you to understand  if you let list1=["a","b","c", "d"] instead of numbers.
[00:38:17] <jinsun> you are assigning to the right thing (if the index was right), but you are using the element itself as the index, you should use the index as the index
[00:38:21] *** Joins: jeho1 (~jehoshaph@user/jehoshaphat)
[00:38:30] *** Joins: DrPrune (~eliot@205.193.252.27.dyn.cust.vf.net.nz)
[00:38:36] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[00:39:27] <gloomy> then then you do `for i in listx`, you get i="a";i="b"; etc.
[00:39:44] <gloomy> and in that context, it should be clear that listxz["a"] doesn't make any sense
[00:39:48] <aphysically> jinsun: https://doc.rust-lang.org/book/ch08-01-vectors.html#updating-a-vector
[00:39:55] <aphysically> rust less strict than pyright
[00:40:06] <aphysically> "The numbers we place inside are all of type i32, and Rust infers this from the data, so we don’t need the Vec<i32> annotation."
[00:40:51] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:41:04] <jinsun> yeah that is one of the places where it is a bit too strict
[00:41:13] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[00:41:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[00:41:52] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:42:16] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 244 seconds)
[00:42:25] <jinsun> it doesn't want to give prefernce to the first append, but it just ends up being more annoying
[00:42:26] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-ed25-b55e-9b32-d913.res6.spectrum.com)
[00:42:40] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 260 seconds)
[00:43:02] <aphysically> pyright maintainer is pretty clear this is design decision though that they feel strongly about
[00:43:15] *** Quits: gruuf (~gruuf@94.31.105.29) (Quit: WeeChat 3.3)
[00:43:23] *** Joins: Betal (~Betal@user/betal)
[00:43:29] <Pi-sistance> ok I half understand, ty. I won't make the mistake agian at least.
[00:44:47] *** Quits: aknot (~aknot@2603:900a:1503:17bb:31be:c992:48f5:37a4) (Ping timeout: 264 seconds)
[00:44:51] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 244 seconds)
[00:45:49] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[00:46:09] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[00:46:14] *** Joins: hendursaga (~weechat@user/hendursaga)
[00:46:16] *** Joins: gruuf (~gruuf@94.31.105.29)
[00:50:07] <Pi-sistance> if I do two function calls in the same cell it only returns (visibly at least) the last time, any way to change that? I dont want to paste the same code to each cell etc
[00:50:44] <cluelessperson> Pi-sistance,  "in the same cell" ?
[00:51:19] *** Joins: mxp (~mxp@185.16.205.131)
[00:51:20] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[00:51:22] <Pi-sistance> its probably just due to jupyter noteboooks knowing my luck :/
[00:51:23] *** Joins: Inline (~Inline@2a02:908:1252:7a80:7e94:3856:5140:4361)
[00:52:07] *** Joins: chatcat (~chatcat@ip-24-53-119-61.user.start.ca)
[00:52:44] *** Joins: tum92 (~tum92@cpe-74-71-172-197.nyc.res.rr.com)
[00:53:15] *** Quits: chatcat_ (chatcat@gateway/vpn/airvpn/chatcat) (Ping timeout: 256 seconds)
[00:53:19] <Pi-sistance> cluelessperson: its in jupyter ntoebooks, im forced to learn that way.
[00:53:26] *** Quits: jeho1 (~jehoshaph@user/jehoshaphat) (Ping timeout: 245 seconds)
[00:53:26] <jinsun> aphysically: yeah so they want to use only assignments to infer the types, and the appends will be checked always, first or not-first
[00:53:38] <Pi-sistance> nvm, its not terrible
[00:54:48] <jinsun> aphysically: so are you rewriting your project in rust now to get an even better type checker :D
[00:55:03] *** Joins: djapo (~archangel@user/djapo)
[00:55:05] <aphysically> I'm reading through the rust book at least
[00:55:11] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:55:20] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[00:55:33] <aphysically> I want to be better than i was at systems programming and I can't stand staring at C++ right now so I'll play with rust for a bit
[00:56:13] <phantomotap> i can't stand "modern" c++ either.
[00:58:21] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[00:59:10] *** Joins: Pickchea (~private@user/pickchea)
[00:59:21] <jinsun> we have good rust ffi libraries now it seems with PyO3 and friends, I want to give that a go too sometimes
[00:59:47] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 264 seconds)
[01:00:33] <ApostleInTriumph> hello jinsun :)
[01:01:20] <jinsun> hello
[01:01:21] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[01:01:51] *** Parts: tum92 (~tum92@cpe-74-71-172-197.nyc.res.rr.com) ()
[01:02:35] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:02:56] <ApostleInTriumph> I have two arrays, source and index. i can scatter these values at index to a 0 array using `scatter_mean`  of torch scatter. however, I would like to fill the initial values by interpolating based on the filled values. how do I go about?
[01:03:15] *** Joins: jazzy (~jaziz@user/jaziz)
[01:03:19] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-1014-2f07-8b12-3b8a.res6.spectrum.com)
[01:03:39] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[01:04:35] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[01:04:41] *** Quits: gloomy_desktop (~ldorigo@81.161.167.135) (Ping timeout: 245 seconds)
[01:05:29] *** Quits: anddt (~anddt@net-130-25-70-92.cust.vodafonedsl.it) (Quit: Leaving)
[01:07:37] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-ed25-b55e-9b32-d913.res6.spectrum.com) (Read error: Connection reset by peer)
[01:07:58] *** Joins: jarthur_ (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[01:08:02] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[01:08:15] *** Quits: greedom (~greedom@x59cc9b0e.dyn.telefonica.de) (Remote host closed the connection)
[01:09:38] *** Quits: Swayze (~gryster@user/swayze) (Quit: leaving)
[01:10:11] *** Joins: Swayze (~gryster@user/swayze)
[01:11:08] <jinsun> ApostleInTriumph: I'm not good with torch btw, but do you have example arrays and output?
[01:11:46] <ApostleInTriumph> jinsun yes, a minute
[01:11:51] *** Quits: Swayze (~gryster@user/swayze) (Client Quit)
[01:13:53] *** Joins: Swayze (~gryster@user/swayze)
[01:14:34] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[01:14:38] *** Joins: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com)
[01:15:56] *** Joins: zebrag (~chris@user/zebrag)
[01:16:04] <ApostleInTriumph> jinsun https://bpa.st/AW6Q
[01:16:12] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[01:16:49] <ApostleInTriumph> basically i initialise sdf_voxels as 0.5. It's not the right way to go about. But I want to "fill" all the values but the ones "scattered" by interpolation
[01:17:25] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[01:18:09] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[01:18:24] *** Joins: dbristow (~dbristow@user/dbristow)
[01:20:15] *** Joins: zebrag (~chris@user/zebrag)
[01:21:10] *** Quits: magla (~gelignite@55d4a5c9.access.ecotel.net) (Quit: Stay safe!)
[01:21:51] *** Quits: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 268 seconds)
[01:22:06] *** Joins: km (sid515529@user/km)
[01:22:22] *** Joins: mikeliuk (~mikeliuk@213.205.198.125)
[01:24:37] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[01:24:45] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[01:25:55] *** Quits: mikeliuk (~mikeliuk@213.205.198.125) (Client Quit)
[01:27:41] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[01:28:26] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[01:28:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:30:05] *** Quits: emf (~emf@163.114.132.5) (Ping timeout: 256 seconds)
[01:31:12] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[01:31:35] *** Joins: thiras (~thiras@user/thiras)
[01:32:42] *** Joins: emf (~emf@2620:10d:c090:400::5:d546)
[01:33:11] *** Joins: cth (~Cthulchu@193.194.107.250)
[01:33:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[01:33:44] *** Joins: Klinda (~superleag@user/klinda)
[01:34:21] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[01:35:11] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[01:35:11] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[01:35:14] *** Joins: zebrag (~chris@user/zebrag)
[01:36:15] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[01:37:58] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:38:00] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[01:38:13] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Client Quit)
[01:40:15] *** Joins: onichomp (~onichomp@2806:264:4404:8200:743a:2cf8:c892:2bd1)
[01:40:53] *** Quits: onichomp (~onichomp@2806:264:4404:8200:743a:2cf8:c892:2bd1) (Read error: Connection reset by peer)
[01:41:30] *** Joins: onichomp (~onichomp@2806:264:4404:8200:743a:2cf8:c892:2bd1)
[01:42:28] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:42:29] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:43:04] <Pi-sistance> oh, crap.
[01:43:37] <Pi-sistance> I thought that when functions reassigned lists, the old list isnt affected once the function is over
[01:43:59] <Pi-sistance> but I just wrote one that changes the list without using any mutable operations and am very confused
[01:44:26] *** Quits: frostschutz (~frostschu@2a01:c22:d076:d800:5d9:4eb4:5365:f13c) (Quit: Leaving)
[01:45:00] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[01:45:26] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[01:45:30] *** Joins: dre (~dre@2001:8003:c932:c301:9f9c:b84c:cb51:c83)
[01:46:06] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[01:46:15] *** Quits: cth (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[01:46:20] <Pi-sistance> wait, is multiplying a list's e;ements considered a mutable action??
[01:47:13] <grym> yes
[01:47:28] <Pi-sistance> is anything other than reasignment considered a mutable action then?
[01:47:32] <Pi-sistance> (and ty)
[01:48:08] <jinsun> if it changes the list without reassigning then it would have to be some mutable actiion
[01:48:29] *** Joins: tobybl (~tobybl@213.31.135.91)
[01:51:19] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[01:52:48] *** Quits: spiderman (~spiderman@user/spiderman) (Remote host closed the connection)
[01:52:52] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[01:53:35] <BrenBarn> what operation did you do that you thought was not a "mutable operation"?
[01:54:39] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[01:54:40] <BrenBarn> a mutation is just an operation that mutates
[01:55:01] <BrenBarn> there are plenty of operations on lists that aren't assignment but don't mutate it (like `.count()` and so on)
[01:55:20] *** Quits: onichomp (~onichomp@2806:264:4404:8200:743a:2cf8:c892:2bd1) (Read error: Connection reset by peer)
[01:55:59] *** Joins: onichomp (~onichomp@2806:264:4404:8200:743a:2cf8:c892:2bd1)
[01:56:09] <The-Compiler> I'm confused, how would an assignment mutate a list?
[01:56:25] *** Quits: MikZyth (~MikZyth@host-148-157-66-217.spbmts.ru) (Quit: WeeChat 3.3)
[01:56:52] *** Quits: onichomp (~onichomp@2806:264:4404:8200:743a:2cf8:c892:2bd1) (Read error: Connection reset by peer)
[01:57:26] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[01:57:29] *** Joins: onichomp (~onichomp@2806:264:4404:8200:743a:2cf8:c892:2bd1)
[01:57:57] *** Joins: jopejoe1 (~jopejoe1m@2001:470:69fc:105::1:15fe)
[01:58:12] <BrenBarn> Pi-sistance asked "is anything other than reasignment considered a mutable action then?"
[01:58:36] <The-Compiler> Yeah, but reassignment isn't?
[01:58:48] <BrenBarn> yes. . . that is consistent with what that says
[01:58:54] <BrenBarn> oh I see you interpreted it differently
[01:58:58] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[01:59:21] <BrenBarn> I think it was meant as "is every operation that is not reassignment a mutating operation"
[01:59:25] *** Joins: Echoz (~chris@user/echoz)
[01:59:43] <BrenBarn> not "is there anything else besides reassignment that is also a mutating operation"
[01:59:43] <Pi-sistance> thanks. I learnt functions today. Going well so far for a noob.
[01:59:51] <The-Compiler> Ah!
[01:59:59] *** Joins: dohtem (uid524096@user/dohtem)
[02:00:01] <Pi-sistance> and yes
[02:00:11] <BrenBarn> Pi-sistance: I'm curious what you did that you thought wouldn't mutate the list but it did
[02:00:16] *** Joins: moose (~moose@user/moose)
[02:00:20] *** Quits: onichomp (~onichomp@2806:264:4404:8200:743a:2cf8:c892:2bd1) (Read error: Connection reset by peer)
[02:00:57] *** Joins: onichomp (~onichomp@2806:264:4404:8200:743a:2cf8:c892:2bd1)
[02:01:06] <Pi-sistance> BrenBarn: just scalar multiplication. I didn't know the definition of mutable was so simple really
[02:02:37] *** Joins: emerent_ (~quassel@p200300cd574855c7ba27ebfffed28a59.dip0.t-ipconnect.de)
[02:02:38] *** emerent is now known as Guest7858
[02:02:38] *** emerent_ is now known as emerent
[02:03:05] *** Quits: onichomp (~onichomp@2806:264:4404:8200:743a:2cf8:c892:2bd1) (Remote host closed the connection)
[02:03:10] *** Quits: Guest7858 (~quassel@p200300cd5748552fba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[02:03:40] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[02:04:25] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 244 seconds)
[02:05:19] <BrenBarn> normally that would not mutate anything
[02:05:23] <BrenBarn> can you show the actual code?
[02:06:18] *** Joins: mikeliuk (~mikeliuk@213.205.198.125)
[02:06:38] *** Quits: mikeliuk (~mikeliuk@213.205.198.125) (Client Quit)
[02:07:06] *** Quits: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[02:07:27] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca)
[02:09:27] <BrenBarn> there isn't really a "definition" of mutable other than "it mutates the object"
[02:09:39] <BrenBarn> so it's not like just because an object is mutable everything you do to it will mutate it
[02:15:16] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[02:15:24] *** Joins: jdw3000 (~jonathan@c-76-18-136-183.hsd1.tn.comcast.net)
[02:15:30] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[02:15:47] *** Joins: hseg (~gesh@185.120.126.13)
[02:16:17] <kevr> Hey guys. So, I've got a bit of a problem with imports, I wonder if there is a nice way to solve it that isn't too hacky. I have a Python application which uses SQLAlchemy with a bunch of ORM models. When you import these ORM models, they seem to perform a check against the database table that they're made for. If the table doesn't exist, exceptions get raised.
[02:16:22] <kevr> The goal here of mine is:
[02:17:00] *** Joins: lagash (lagash@lagash.freeirc.org)
[02:17:01] <kevr> I'm trying to produce a throw-away database for each pytest I have via fixtures. But, to do that, I can't have this import issue happening. imports have to happen __after__ the database fixture is setup.
[02:17:29] <kevr> Any ideas? :o
[02:17:40] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[02:18:01] *** Quits: Akuli (~Akuli@213.216.210.156) (Quit: Leaving)
[02:18:17] <kevr> Oh, and i'm setting up the fixtures as session fixtures in conftest.py
[02:18:44] <kevr> The hooks don't work, because they don't pass along the PYTEST_CURRENT_TEST environment variable, which is what i need to produce the test db.
[02:18:48] <nedbat> kevr: that sounds like the kind of thing you could disable in SQLAlchemy?
[02:19:12] <kevr> nedbat: I thought so too. I've been trying to look around for it, but I haven't found anything.. I may be searching wrong.
[02:19:44] <hseg> Hi. Am writing a script to maintain an on-disk cache of website indeces. Have most of the code, just need to figure out how to do the equivalent of the bash `tmp="$(mktemp)"; dl > "$tmp"; if $?; then mv "$out" "$out".old"; mv "$tmp" "$out"; diff "$out".old "$out"; fi`
[02:20:03] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[02:20:48] <hseg> ... I mean, ig I could split that out into a shellscript, but that feels somewhat wasteful
[02:20:56] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[02:21:23] <hseg> (intention is: download, if succeeded rotate out old cache and show diff)
[02:21:34] *** Joins: seednode (~seednode@user/seednode)
[02:22:35] *** Joins: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[02:22:35] <leitz> Any good URLs for "Advice for moving from mid level programmer to senior, when you don't want to be a manager"?
[02:22:44] <hseg> ... actually, that's just a try-catch, so all I need is how to "rotate old cache + show diff"
[02:22:52] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:25:06] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 260 seconds)
[02:26:23] <hseg> hrm, seems to just be a matter of difflib.unified_diff(old.readlines(), newlines, 'old', 'new')
[02:26:58] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[02:26:58] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 260 seconds)
[02:28:18] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[02:30:14] *** Quits: pogotech (~pogotech@047-132-047-100.res.spectrum.com) (Ping timeout: 260 seconds)
[02:33:16] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:33:43] *** Quits: gruuf (~gruuf@94.31.105.29) (Quit: WeeChat 3.3)
[02:37:23] *** Quits: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:37:54] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[02:37:56] *** Quits: edocod (~edocod@user/edocod) (Quit: Leaving)
[02:38:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:38:18] *** Joins: jazzy (~jaziz@user/jaziz)
[02:38:39] *** Joins: inomoz (~inomoz@176.59.125.26)
[02:39:29] *** Quits: sliwkr (~kks@static-ip-87-248-67-133.promax.media.pl) (Quit: leaving)
[02:39:42] *** Joins: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[02:39:54] *** Quits: jdw3000 (~jonathan@c-76-18-136-183.hsd1.tn.comcast.net) (Quit: Leaving)
[02:42:00] *** Parts: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (ERC (IRC client for Emacs 26.3))
[02:42:03] *** Quits: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net) (Quit: happy math or coding)
[02:42:10] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:42:50] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 260 seconds)
[02:47:36] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:47:43] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[02:51:03] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:52:49] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:56:22] *** Joins: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com)
[02:57:46] *** Quits: hendursaga (~weechat@user/hendursaga) (Quit: hendursaga)
[02:58:00] *** Joins: pogotech (~pogotech@047-132-047-100.res.spectrum.com)
[03:00:10] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[03:00:27] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:00:35] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:01:39] *** Quits: erica (~erica@user/erica) (Quit: The Lounge - https://thelounge.chat)
[03:03:09] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:9a94:97c1:1302:9ed1) (Quit: Konversation terminated!)
[03:03:44] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[03:05:35] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[03:06:51] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:07:06] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[03:07:16] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:09:00] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[03:09:59] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 264 seconds)
[03:10:06] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[03:10:43] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[03:10:43] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[03:10:49] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[03:10:50] *** Quits: Rob (~capo@user/telvana) (Ping timeout: 260 seconds)
[03:11:26] *** Joins: c10l (~c10l@user/c10l)
[03:12:00] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:12:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[03:12:32] *** Joins: Telvana (~capo@user/telvana)
[03:12:53] *** Quits: c10l (~c10l@user/c10l) (Client Quit)
[03:13:57] *** Telvana is now known as Rob
[03:14:00] *** Joins: c10l (~c10l@user/c10l)
[03:16:28] *** Quits: Sario (uid356235@miraheze/Sario528) (Quit: Connection closed for inactivity)
[03:18:49] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 244 seconds)
[03:20:11] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[03:20:22] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[03:23:09] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-1014-2f07-8b12-3b8a.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:24:06] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[03:24:41] *** Quits: DrPrune (~eliot@205.193.252.27.dyn.cust.vf.net.nz) (Quit: Leaving.)
[03:28:04] *** Quits: emerent (~quassel@p200300cd574855c7ba27ebfffed28a59.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[03:29:06] *** Joins: lastshell (~lastshell@user/lastshell)
[03:29:17] *** Joins: emerent (~quassel@p200300cd574855c7ba27ebfffed28a59.dip0.t-ipconnect.de)
[03:29:44] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[03:30:14] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:39] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:32:51] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[03:34:07] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[03:34:09] *** Quits: dbristow (~dbristow@user/dbristow) (Remote host closed the connection)
[03:34:38] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 260 seconds)
[03:35:19] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:35:43] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:36:54] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 244 seconds)
[03:38:52] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:40:53] *** Joins: DrPrune (~eliot@205.193.252.27.dyn.cust.vf.net.nz)
[03:41:33] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[03:41:50] *** Quits: goldfish_ (~goldfish@user/goldfish) (Ping timeout: 268 seconds)
[03:42:55] *** Joins: ano (~ano@user/ano)
[03:45:04] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:45:07] *** Joins: dbristow (~dbristow@user/dbristow)
[03:45:27] *** Joins: sgn (~sgn@user/sgn)
[03:48:55] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Ping timeout: 256 seconds)
[03:50:34] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[03:50:34] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[03:51:13] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:51:15] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[03:52:52] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Read error: Connection reset by peer)
[03:54:04] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[03:54:35] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[03:54:42] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:56:00] *** Lord_of_Life_ is now known as Lord_of_Life
[03:58:11] <lionslicer> I tried ruling out all input that isn't 'yes' or 'no' by showing an error and asking the uses to answer yes or no
[03:58:24] <lionslicer> but it is kinda hard I guess
[03:58:46] *** Quits: hseg (~gesh@185.120.126.13) (Quit: WeeChat 3.3)
[04:00:13] *** Joins: onichomp (~onichomp@2806:264:4404:8200:d906:c0d6:f53f:a2df)
[04:01:21] *** Quits: fstd (~fstd@xdsl-87-79-44-169.nc.de) (Read error: Connection reset by peer)
[04:01:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:02:21] <lionslicer> I forgot about the continue statement that's why lol
[04:02:38] *** Joins: fstd (~fstd@xdsl-87-79-44-169.nc.de)
[04:04:14] *** Joins: Sario (uid356235@miraheze/Sario528)
[04:05:14] *** Quits: emerent (~quassel@p200300cd574855c7ba27ebfffed28a59.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:06:21] *** Joins: onichomp666 (~onichomp@2806:264:4404:8200:5828:de9e:300e:3f6d)
[04:06:28] *** Joins: emerent (~quassel@p200300cd574855c7ba27ebfffed28a59.dip0.t-ipconnect.de)
[04:06:42] *** Quits: onichomp666 (~onichomp@2806:264:4404:8200:5828:de9e:300e:3f6d) (Read error: Connection reset by peer)
[04:07:36] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-1014-2f07-8b12-3b8a.res6.spectrum.com)
[04:07:57] *** Parts: DrPrune (~eliot@205.193.252.27.dyn.cust.vf.net.nz) ()
[04:08:16] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:09:36] *** Quits: Inline (~Inline@2a02:908:1252:7a80:7e94:3856:5140:4361) (Ping timeout: 268 seconds)
[04:10:02] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:30e4:b7c3:5825:ae65) (Quit: guenhael)
[04:10:06] *** Quits: onichomp (~onichomp@2806:264:4404:8200:d906:c0d6:f53f:a2df) (Ping timeout: 260 seconds)
[04:11:08] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[04:11:34] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[04:11:35] *** Quits: CB_JD (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 256 seconds)
[04:11:52] *** Quits: nomic (~nomic@185.192.69.211) (Quit: Leaving)
[04:14:45] *** Joins: wasd (~wasd@user/axis)
[04:14:59] *** Joins: frost (~frost@user/frost)
[04:16:27] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[04:16:40] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: WeeChat 3.0)
[04:20:26] *** Quits: Tende (~Tenderame@dynamic-046-114-035-065.46.114.pool.telefonica.de) (Ping timeout: 260 seconds)
[04:23:18] *** Joins: s98259 (~s98259@user/helenah)
[04:23:28] <s98259>  I have a json file with several arrays within that have the same name, how do I count them?
[04:23:29] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:24:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[04:24:52] *** Joins: Wulf (~Wulf@user/wulf)
[04:24:52] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:25:47] <s98259> To be exact, it's this file. https://environment.data.gov.uk/flood-monitoring/id/stations/2230TH I want to count every occurrence of "latestReading".
[04:26:50] <phy1729> len(requests.get(...).json()['items']['measures']) ?
[04:26:54] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[04:28:15] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:29:14] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - http://znc.in)
[04:30:30] <s98259> phy1729: For a different file that only have one mention of "latestReading" it returns... 14. To be honest I want to check if there is one occurrance or not so I know whether or not to iterate through it.
[04:30:31] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[04:32:13] *** Joins: yossarian (~yossarian@user/yossarian)
[04:36:16] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[04:36:42] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e59c-51ba-07e6-ca2d.res6.spectrum.com) (Read error: Connection reset by peer)
[04:36:46] *** Quits: TJ- (~root@user/tj-) (Ping timeout: 245 seconds)
[04:36:48] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:36:53] <s98259> Ah!
[04:36:58] <s98259> I didn't notice that before!
[04:37:07] *** Joins: grooverman_ (~grooverma@177.95.12.14)
[04:37:12] <s98259> measures isn't a list in the file I didn't show you. Okies.
[04:37:25] *** Joins: TJ- (~root@user/tj-)
[04:38:22] *** Joins: justyb11 (~justyb@2601:483:500:3ea:ec98:ebd7:cb24:d194)
[04:38:23] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[04:38:23] *** Joins: nortoh (~nortoh@user/nortoh)
[04:39:11] *** Quits: grooverman (~grooverma@177.95.12.14) (Ping timeout: 268 seconds)
[04:39:19] <s98259> Okies this should be easy to resolve.
[04:41:07] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:43:35] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[04:45:34] <s98259> Fixed! :D
[04:46:11] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Quit: poof)
[04:47:43] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[04:50:36] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:53:33] *** Joins: erica (~erica@user/erica)
[04:54:05] *** Joins: akk (~akk@75.161.146.115)
[04:55:09] *** Quits: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Remote host closed the connection)
[04:56:09] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:58:55] *** Joins: Inst (~Inst@2601:6c4:4080:3f80:f571:277c:e0b0:82b9)
[04:59:45] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[05:03:13] *** Joins: amo (~amogorkon@port-92-196-38-113.dynamic.as20676.net)
[05:03:59] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[05:04:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:05:29] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[05:05:56] *** Quits: wolfshappen_ (~waff@irc.furworks.de) (Quit: later)
[05:06:46] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[05:06:56] *** Quits: amogorkon (~amogorkon@port-92-196-15-221.dynamic.as20676.net) (Ping timeout: 268 seconds)
[05:07:41] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[05:08:00] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[05:08:08] *** Joins: ali1234 (~al@user/ali1234)
[05:09:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:09:37] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[05:09:42] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Remote host closed the connection)
[05:10:49] *** Joins: ethrl (uid524335@user/doforlove33)
[05:11:49] *** Joins: Valeria (~Valeria@user/valeria)
[05:12:42] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:14:57] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[05:16:27] <s98259> I'm getting error "TypeError: list indices must be integers or slices, not str" but I'm convinced I'm working with strings and not lists. How do I further investigate to see if it's a list or not? I'm for certain it's not.
[05:16:37] *** Joins: Bakunin (~Lindis@user/lindis)
[05:17:25] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[05:17:49] <s98259> This is the JSON data, it thinks that "stageScale" is a list or contains lists but it isn't. https://environment.data.gov.uk/flood-monitoring/id/stations/2230TH
[05:18:46] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Ping timeout: 260 seconds)
[05:20:30] *** Joins: superboot (~agentgasm@user/superboot)
[05:21:28] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:22:04] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[05:29:26] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 260 seconds)
[05:30:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:22] *** Quits: flokuehn (~flokuehn@87.123.247.42) (Ping timeout: 260 seconds)
[05:31:36] *** Quits: luva (~luva@45.141.152.54) (Ping timeout: 268 seconds)
[05:32:28] *** Joins: luva (~luva@146.70.62.254)
[05:33:03] *** Joins: flokuehn (~flokuehn@87.123.247.36)
[05:34:34] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[05:37:10] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[05:37:46] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 268 seconds)
[05:39:03] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:41:01] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[05:41:05] *** Joins: darkstardev13 (~darkstard@50.39.114.152)
[05:42:13] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[05:42:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[05:42:58] *** Quits: sharperguy (~sharpergu@88.130.220.29) (Ping timeout: 244 seconds)
[05:43:56] *** Quits: darkstarx (~darkstard@gateway/vpn/pia/darkstardevx) (Ping timeout: 268 seconds)
[05:44:13] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[05:44:36] *** Joins: sharperguy (~sharpergu@89.244.126.33)
[05:44:36] *** Joins: emf_ (~emf@c-73-97-137-43.hsd1.wa.comcast.net)
[05:44:43] *** Quits: emf (~emf@2620:10d:c090:400::5:d546) (Read error: Connection reset by peer)
[05:45:28] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[05:47:45] *** Parts: kronicmage (user72429@neotame.csclub.uwaterloo.ca) (WeeChat 3.0.1)
[05:48:10] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[05:48:14] *** Joins: Mindscape (~Lindis@user/lindis)
[05:50:54] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[05:52:10] *** Joins: Valeria (~Valeria@user/valeria)
[05:55:08] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[05:56:05] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[05:56:24] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[05:56:37] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Remote host closed the connection)
[05:59:18] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Ping timeout: 260 seconds)
[06:00:49] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:01:28] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[06:01:31] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 256 seconds)
[06:02:21] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:02:35] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:04:24] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Quit: Connection closed for inactivity)
[06:05:22] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[06:05:29] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:06:43] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[06:07:33] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[06:07:44] *** Quits: niv (~niv@limbo.cypherpunks.io) (Quit: Powered by LunarBNC: https://LunarBNC.net)
[06:07:58] *** Joins: onichomp (~onichomp@2806:264:4404:8200:5828:de9e:300e:3f6d)
[06:08:27] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[06:09:23] *** Quits: eichin (sid27120@2a03:5180:f::69f0) (Ping timeout: 264 seconds)
[06:09:23] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 264 seconds)
[06:09:41] *** Quits: dohtem (uid524096@user/dohtem) (Ping timeout: 245 seconds)
[06:09:50] *** Quits: Evolver (sid32215@user/evolver) (Ping timeout: 268 seconds)
[06:09:51] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Ping timeout: 268 seconds)
[06:09:56] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-1014-2f07-8b12-3b8a.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:09:59] *** Quits: st3fan (sid43079@id-43079.lymington.irccloud.com) (Ping timeout: 264 seconds)
[06:09:59] *** Quits: MrNaz (sid133418@2a03:5180:f:5::2:92a) (Ping timeout: 264 seconds)
[06:09:59] *** Quits: NiKaN (sid385034@2a03:5180:f:1::5:e00a) (Ping timeout: 264 seconds)
[06:09:59] *** Quits: altendky (sid135382@2a03:5180:f:4::2:10d6) (Ping timeout: 264 seconds)
[06:10:27] *** Quits: Sario (uid356235@miraheze/Sario528) (Ping timeout: 268 seconds)
[06:10:27] *** Quits: poiqwepoiqwe (uid525840@2a03:5180:f:4::8:610) (Ping timeout: 268 seconds)
[06:10:27] *** Quits: salimfadhley (sid31217@wikipedia/salimfadhley) (Ping timeout: 268 seconds)
[06:10:27] *** Quits: holbrode (sid339826@id-339826.tinside.irccloud.com) (Ping timeout: 268 seconds)
[06:10:28] *** Quits: kmikita (sid499273@id-461814.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[06:10:28] *** Quits: km (sid515529@user/km) (Ping timeout: 268 seconds)
[06:10:28] *** Quits: TheXAbove (uid526127@user/thexabove) (Ping timeout: 268 seconds)
[06:10:28] *** Quits: fury (uid193779@2a03:5180:f:1::2:f4f3) (Ping timeout: 268 seconds)
[06:10:28] *** Quits: debnet (sid330295@python/afpy/debnet) (Ping timeout: 268 seconds)
[06:10:28] *** Quits: Yhg1s (sid387777@python/psf/thomas) (Ping timeout: 268 seconds)
[06:10:35] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[06:10:35] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 264 seconds)
[06:10:35] *** Quits: rubin55 (sid175221@2a03:5180:f:4::2:ac75) (Ping timeout: 264 seconds)
[06:10:35] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 264 seconds)
[06:10:35] *** Quits: EWDurbin (sid38710@2a03:5180:f::9736) (Ping timeout: 264 seconds)
[06:10:35] *** Quits: ormiret (sid314108@2a03:5180:f:2::4:cafc) (Ping timeout: 264 seconds)
[06:11:04] *** Quits: matthewwilkes (sid500242@2a03:5180:f:5::7:a212) (Ping timeout: 268 seconds)
[06:11:04] *** Quits: Tips|Cloud (sid62231@id-62231.ilkley.irccloud.com) (Ping timeout: 268 seconds)
[06:11:04] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 268 seconds)
[06:11:04] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 268 seconds)
[06:11:05] *** Quits: arch-geek (uid525804@2a03:5180:f:5::8:5ec) (Ping timeout: 268 seconds)
[06:11:05] *** Quits: graingert (sid128301@2a03:5180:f::1:f52d) (Ping timeout: 268 seconds)
[06:11:05] *** Quits: Knyght (sid365271@id-365271.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[06:11:05] *** Quits: drmessano (drmessano@user/drmessano) (Ping timeout: 268 seconds)
[06:11:11] *** Quits: ethrl (uid524335@user/doforlove33) (Ping timeout: 264 seconds)
[06:11:11] *** Quits: Pr0phet (sid505706@2a03:5180:f:4::7:b76a) (Ping timeout: 264 seconds)
[06:11:11] *** Quits: shurane (sid132556@2a03:5180:f:1::2:5cc) (Ping timeout: 264 seconds)
[06:11:11] *** Quits: shawwwn (uid6132@2a03:5180:f:1::17f4) (Ping timeout: 264 seconds)
[06:11:16] *** Joins: eichin (sid27120@tinside.irccloud.com)
[06:11:19] *** Joins: adiKt (uid472628@tinside.irccloud.com)
[06:11:20] *** Joins: EWDurbin (sid38710@tinside.irccloud.com)
[06:11:27] *** Joins: holbrode (sid339826@tinside.irccloud.com)
[06:11:41] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Ping timeout: 268 seconds)
[06:11:41] *** Quits: cuppajoeman (sid521943@id-521943.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[06:11:42] *** Quits: Pent (sid313808@2a03:5180:f:2::4:c9d0) (Ping timeout: 268 seconds)
[06:11:47] *** Quits: jesse-s (sid98646@id-98646.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[06:11:47] *** Quits: flagrama (sid145621@2a03:5180:f:4::2:38d5) (Ping timeout: 264 seconds)
[06:11:47] *** Quits: TingPing (sid2800@id-2800.helmsley.irccloud.com) (Ping timeout: 264 seconds)
[06:11:47] *** Quits: JayDoubleu (sid339529@id-339529.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[06:11:47] *** Quits: hwrd (sid64402@id-64402.lymington.irccloud.com) (Ping timeout: 264 seconds)
[06:11:50] *** Quits: onichomp (~onichomp@2806:264:4404:8200:5828:de9e:300e:3f6d) (Read error: Connection reset by peer)
[06:11:51] *** Joins: wolfshappen (~waff@irc.furworks.de)
[06:12:15] *** Joins: MrNaz (sid133418@uxbridge.irccloud.com)
[06:12:16] *** Joins: Knyght (sid365271@helmsley.irccloud.com)
[06:12:16] *** Joins: shurane (sid132556@helmsley.irccloud.com)
[06:12:18] *** Joins: kmikita (uid461814@helmsley.irccloud.com)
[06:12:18] *** Quits: jposer (sid132110@2a03:5180:f:5::2:40e) (Ping timeout: 268 seconds)
[06:12:19] *** Quits: sparc (sid160069@id-160069.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[06:12:19] *** Quits: pjlsergeant (sid143467@2a03:5180:f:4::2:306b) (Ping timeout: 268 seconds)
[06:12:19] *** Quits: circuitbone (sid355934@user/circuitbone) (Ping timeout: 268 seconds)
[06:12:19] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (Ping timeout: 268 seconds)
[06:12:19] *** Joins: bjs (sid190364@user/bjs)
[06:12:20] *** Joins: jposer (sid132110@uxbridge.irccloud.com)
[06:12:20] *** Joins: ethrl (uid524335@user/doforlove33)
[06:12:21] *** Joins: debnet (sid330295@python/afpy/debnet)
[06:12:21] *** Joins: matthewwilkes (sid500242@uxbridge.irccloud.com)
[06:12:26] *** Joins: TheXAbove (uid526127@user/thexabove)
[06:12:29] *** Joins: onichomp (~onichomp@2806:264:4404:8200:5828:de9e:300e:3f6d)
[06:12:35] *** Joins: drmessano (drmessano@user/drmessano)
[06:12:41] *** Joins: Evolver (sid32215@user/evolver)
[06:12:42] *** Joins: hwrd (sid64402@lymington.irccloud.com)
[06:12:46] *** Joins: pjlsergeant (sid143467@hampstead.irccloud.com)
[06:13:14] *** Joins: altendky (sid135382@hampstead.irccloud.com)
[06:13:16] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[06:13:19] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[06:13:22] *** Joins: rubin55 (sid175221@hampstead.irccloud.com)
[06:13:24] *** Joins: shawwwn (uid6132@helmsley.irccloud.com)
[06:13:30] *** Joins: arch-geek (uid525804@uxbridge.irccloud.com)
[06:13:33] *** Joins: km (sid515529@user/km)
[06:13:53] *** Joins: salimfadhley (sid31217@wikipedia/salimfadhley)
[06:13:54] *** Joins: ormiret (sid314108@lymington.irccloud.com)
[06:13:58] *** Joins: st3fan (sid43079@lymington.irccloud.com)
[06:13:59] *** Joins: Tips|Cloud (sid62231@ilkley.irccloud.com)
[06:14:04] *** Joins: graingert (sid128301@tinside.irccloud.com)
[06:14:05] *** Joins: dohtem (uid524096@user/dohtem)
[06:14:06] *** Joins: fannagoganna (uid110488@tinside.irccloud.com)
[06:14:14] *** Joins: Pr0phet (sid505706@hampstead.irccloud.com)
[06:14:16] *** Joins: cuppajoeman (sid521943@hampstead.irccloud.com)
[06:14:16] *** Joins: morgabra (sid500580@user/morgabra)
[06:14:23] *** Joins: sa (sid1055@tinside.irccloud.com)
[06:14:32] *** Joins: jesse-s (sid98646@hampstead.irccloud.com)
[06:14:33] *** Joins: flagrama (sid145621@hampstead.irccloud.com)
[06:14:34] *** Joins: poiqwepoiqwe (uid525840@hampstead.irccloud.com)
[06:14:34] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[06:14:37] *** Joins: JayDoubleu (sid339529@hampstead.irccloud.com)
[06:14:58] *** Joins: TingPing (sid2800@helmsley.irccloud.com)
[06:15:05] *** Joins: fury (uid193779@helmsley.irccloud.com)
[06:15:06] *** Joins: Yhg1s (sid387777@python/psf/thomas)
[06:15:06] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[06:15:17] *** Joins: sparc (sid160069@uxbridge.irccloud.com)
[06:15:39] *** Joins: Sario (uid356235@miraheze/Sario528)
[06:15:42] *** Joins: Pent (sid313808@lymington.irccloud.com)
[06:16:49] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 256 seconds)
[06:17:17] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[06:17:18] *** Joins: braxas (sid508886@lymington.irccloud.com)
[06:18:48] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Client Quit)
[06:20:19] *** Quits: AhmedAmerican (sid470527@ilkley.irccloud.com) (Read error: Connection reset by peer)
[06:20:44] *** Quits: lk (sid504574@ilkley.irccloud.com) (Read error: Connection reset by peer)
[06:20:47] *** Quits: TheXAbove (uid526127@user/thexabove) (Ping timeout: 256 seconds)
[06:21:02] *** Quits: Gaurhoth (sid75085@ilkley.irccloud.com) (Read error: Connection reset by peer)
[06:21:04] *** Quits: debnet (sid330295@python/afpy/debnet) (Read error: Connection reset by peer)
[06:21:05] *** Quits: mustache_ride (sid451683@user/mustache-ride/x-6533344) (Read error: Connection reset by peer)
[06:22:56] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:23:10] *** Quits: Sario (uid356235@miraheze/Sario528) (Ping timeout: 260 seconds)
[06:23:10] *** Quits: Tips|Cloud (sid62231@ilkley.irccloud.com) (Ping timeout: 260 seconds)
[06:23:38] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 260 seconds)
[06:23:38] *** brabrax_ is now known as brabrax
[06:26:15] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[06:26:26] *** Joins: circuitbone (sid355934@user/circuitbone)
[06:30:43] *** Joins: djapo (~archangel@user/djapo)
[06:31:02] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:28] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:32:00] *** Joins: driib7 (~driib@185.195.233.166)
[06:32:15] *** Joins: llh (~llh@user/llh)
[06:32:27] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[06:32:37] *** Joins: Sario (uid356235@miraheze/Sario528)
[06:33:01] *** Joins: Valeria (~Valeria@user/valeria)
[06:33:49] *** Quits: driib (~driib@185.65.135.254) (Ping timeout: 256 seconds)
[06:33:49] *** driib7 is now known as driib
[06:33:53] *** Quits: wender (~Wender@189.37.67.109) (Ping timeout: 268 seconds)
[06:34:11] *** Joins: lk (sid504574@id-504574.ilkley.irccloud.com)
[06:34:14] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:34:29] *** Joins: Gaurhoth (sid75085@id-75085.ilkley.irccloud.com)
[06:34:45] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:50] *** Joins: Tips|Cloud (sid62231@id-62231.ilkley.irccloud.com)
[06:34:53] *** Joins: mustache_ride (sid451683@user/mustache-ride/x-6533344)
[06:35:49] *** Joins: AhmedAmerican (sid470527@id-470527.ilkley.irccloud.com)
[06:35:58] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[06:36:02] *** Joins: debnet (sid330295@python/afpy/debnet)
[06:36:05] *** Quits: onichomp (~onichomp@2806:264:4404:8200:5828:de9e:300e:3f6d) (Remote host closed the connection)
[06:36:41] *** Joins: onichomp (~onichomp@2806:264:4404:8200:5828:de9e:300e:3f6d)
[06:36:54] *** Joins: djapo (~archangel@user/djapo)
[06:37:17] *** Joins: TheXAbove (uid526127@user/thexabove)
[06:38:20] *** Quits: onichomp (~onichomp@2806:264:4404:8200:5828:de9e:300e:3f6d) (Read error: Connection reset by peer)
[06:38:55] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[06:38:59] *** Joins: matsaman (~matsaman@user/matsaman)
[06:39:42] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[06:39:51] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[06:40:29] *** Joins: pycurious (~Adium@user/pycurious)
[06:42:40] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:43:41] *** Joins: kronicmage (user72429@neotame.csclub.uwaterloo.ca)
[06:45:29] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 244 seconds)
[06:46:12] *** Quits: moonmoon (awoo@libera/staff/moonmoon) (Quit: *poof*)
[06:47:02] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:47:28] *** Quits: debnet (sid330295@python/afpy/debnet) (Ping timeout: 268 seconds)
[06:47:28] *** Quits: lk (sid504574@id-504574.ilkley.irccloud.com) (Ping timeout: 268 seconds)
[06:47:54] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 260 seconds)
[06:48:04] *** Quits: Tips|Cloud (sid62231@id-62231.ilkley.irccloud.com) (Ping timeout: 268 seconds)
[06:48:11] *** Joins: moonmoon (awoo@libera/staff/moonmoon)
[06:48:23] *** Quits: TheXAbove (uid526127@user/thexabove) (Ping timeout: 264 seconds)
[06:48:23] *** Quits: AhmedAmerican (sid470527@id-470527.ilkley.irccloud.com) (Ping timeout: 264 seconds)
[06:48:42] *** Quits: Sario (uid356235@miraheze/Sario528) (Ping timeout: 268 seconds)
[06:48:58] *** Joins: Gaurhoth_ (sid75085@ilkley.irccloud.com)
[06:49:08] *** Joins: davor_ (~davor@user/davor)
[06:49:19] *** Quits: mustache_ride (sid451683@user/mustache-ride/x-6533344) (Ping timeout: 268 seconds)
[06:49:19] *** Quits: Gaurhoth (sid75085@id-75085.ilkley.irccloud.com) (Ping timeout: 268 seconds)
[06:49:19] *** Gaurhoth_ is now known as Gaurhoth
[06:49:42] *** Quits: davor (~davor@user/davor) (Ping timeout: 260 seconds)
[06:50:02] *** Joins: Sario (uid356235@miraheze/Sario528)
[06:50:27] *** Joins: computeiro (~Wender@189.37.68.18)
[06:50:27] *** Joins: AhmedAmerican (sid470527@ilkley.irccloud.com)
[06:51:03] *** Joins: mustache_ride (sid451683@user/mustache-ride/x-6533344)
[06:52:17] *** Joins: jdmark (~jdmark@097-102-095-007.res.spectrum.com)
[06:52:39] *** Joins: TheXAbove (uid526127@user/thexabove)
[06:52:44] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[06:52:46] *** Joins: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[06:52:51] *** Joins: Tips|Cloud (sid62231@ilkley.irccloud.com)
[06:53:15] *** Quits: Socra (~Socra@206.217.216.27) (Read error: Connection reset by peer)
[06:55:01] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[06:58:23] *** Joins: Socra (~Socra@206.217.216.27)
[07:01:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:03:44] *** Joins: lk (sid504574@ilkley.irccloud.com)
[07:04:14] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[07:04:44] *** Joins: debnet (sid330295@python/afpy/debnet)
[07:04:54] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Client Quit)
[07:05:17] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[07:06:07] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:07:11] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[07:07:11] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Client Quit)
[07:07:26] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[07:07:27] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[07:07:30] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:07:30] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:07:30] *** finn_elija is now known as FinnElija
[07:13:23] *** Joins: Valeria (~Valeria@user/valeria)
[07:16:26] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 268 seconds)
[07:16:51] *** Joins: alex11 (~alex11@user/alex11)
[07:18:14] *** Joins: Lush-_ (~lushlush@user/lush-/x-1276235)
[07:18:55] *** Quits: Lush-_ (~lushlush@user/lush-/x-1276235) (Client Quit)
[07:20:06] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 244 seconds)
[07:21:46] *** Joins: osprey (~pogotech@047-132-047-100.res.spectrum.com)
[07:22:54] *** Quits: pogotech (~pogotech@047-132-047-100.res.spectrum.com) (Read error: Connection reset by peer)
[07:23:09] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[07:24:21] *** Quits: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4) (Remote host closed the connection)
[07:27:12] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[07:30:06] *** Quits: ldm (~ldm@hacksoc/member) (Quit: o/ 4w 59m 20s)
[07:30:18] *** Quits: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 260 seconds)
[07:30:32] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Killed (NickServ (GHOST command used by jeho1)))
[07:30:54] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[07:31:59] *** Quits: st3fan (sid43079@lymington.irccloud.com) (Ping timeout: 244 seconds)
[07:31:59] *** Quits: rubin55 (sid175221@hampstead.irccloud.com) (Ping timeout: 244 seconds)
[07:31:59] *** Quits: shawwwn (uid6132@helmsley.irccloud.com) (Ping timeout: 244 seconds)
[07:31:59] *** Quits: adiKt (uid472628@tinside.irccloud.com) (Ping timeout: 244 seconds)
[07:31:59] *** Quits: eichin (sid27120@tinside.irccloud.com) (Ping timeout: 244 seconds)
[07:32:11] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (Ping timeout: 245 seconds)
[07:32:11] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 256 seconds)
[07:32:12] *** Seto_Kaiba is now known as Hunterkll
[07:32:14] *** Quits: ormiret (sid314108@lymington.irccloud.com) (Ping timeout: 260 seconds)
[07:32:14] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 260 seconds)
[07:32:14] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 260 seconds)
[07:32:14] *** Quits: joel135 (sid136450@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[07:32:14] *** Quits: lidless (sid523173@tinside.irccloud.com) (Ping timeout: 260 seconds)
[07:32:30] *** Quits: Sario (uid356235@miraheze/Sario528) (Ping timeout: 244 seconds)
[07:32:30] *** Quits: TingPing (sid2800@helmsley.irccloud.com) (Ping timeout: 244 seconds)
[07:32:30] *** Quits: graingert (sid128301@tinside.irccloud.com) (Ping timeout: 244 seconds)
[07:32:30] *** Quits: kmikita (uid461814@helmsley.irccloud.com) (Ping timeout: 244 seconds)
[07:32:36] *** Quits: seds (sid492514@user/seds) (Ping timeout: 245 seconds)
[07:32:40] *** Quits: rburton (rburton@user/rburton) (Ping timeout: 260 seconds)
[07:32:42] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 260 seconds)
[07:32:42] *** Quits: sa (sid1055@tinside.irccloud.com) (Ping timeout: 260 seconds)
[07:32:42] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 260 seconds)
[07:32:42] *** Quits: matthewwilkes (sid500242@uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[07:32:43] *** Joins: st3fan (sid43079@lymington.irccloud.com)
[07:32:45] *** Quits: ethrl (uid524335@user/doforlove33) (Ping timeout: 256 seconds)
[07:32:45] *** Quits: EWDurbin (sid38710@tinside.irccloud.com) (Ping timeout: 256 seconds)
[07:32:45] *** Quits: rpittau (sid346891@tinside.irccloud.com) (Ping timeout: 256 seconds)
[07:32:49] *** Joins: shawwwn (uid6132@helmsley.irccloud.com)
[07:32:54] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:33:01] *** Quits: mustache_ride (sid451683@user/mustache-ride/x-6533344) (Ping timeout: 244 seconds)
[07:33:01] *** Quits: Gaurhoth (sid75085@ilkley.irccloud.com) (Ping timeout: 244 seconds)
[07:33:01] *** Quits: pjlsergeant (sid143467@hampstead.irccloud.com) (Ping timeout: 244 seconds)
[07:33:01] *** Quits: Evolver (sid32215@user/evolver) (Ping timeout: 244 seconds)
[07:33:01] *** Quits: hwrd (sid64402@lymington.irccloud.com) (Ping timeout: 244 seconds)
[07:33:01] *** Quits: Knyght (sid365271@helmsley.irccloud.com) (Ping timeout: 244 seconds)
[07:33:01] *** Quits: mindlesstux (sid18072@user/mindlesstux) (Ping timeout: 245 seconds)
[07:33:01] *** Quits: johnny_ (sid481967@hampstead.irccloud.com) (Ping timeout: 245 seconds)
[07:33:03] *** Joins: Luke (~ldm@hacksoc/member)
[07:33:05] *** Quits: Tips|Cloud (sid62231@ilkley.irccloud.com) (Ping timeout: 268 seconds)
[07:33:10] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[07:33:10] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[07:33:10] *** Quits: JayDoubleu (sid339529@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[07:33:10] *** Quits: jesse-s (sid98646@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[07:33:10] *** Quits: Pr0phet (sid505706@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[07:33:13] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[07:33:14] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[07:33:15] *** Quits: ericoc (sid179921@uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[07:33:16] *** Quits: fannagoganna (uid110488@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:33:19] *** Quits: braxas (sid508886@lymington.irccloud.com) (Ping timeout: 256 seconds)
[07:33:19] *** Quits: Pent (sid313808@lymington.irccloud.com) (Ping timeout: 256 seconds)
[07:33:19] *** Quits: cuppajoeman (sid521943@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[07:33:19] *** Quits: salimfadhley (sid31217@wikipedia/salimfadhley) (Ping timeout: 256 seconds)
[07:33:26] *** Quits: Venhal (sid515085@uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[07:33:26] *** Quits: mrproper (sid382572@uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[07:33:37] *** Joins: eichin (sid27120@id-27120.tinside.irccloud.com)
[07:33:37] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[07:33:38] *** Quits: arch-geek (uid525804@uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[07:33:38] *** Quits: MrNaz (sid133418@uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[07:33:38] *** Quits: ballingt (sid190590@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[07:33:38] *** Quits: coldmountain (sid484352@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[07:33:42] *** Quits: TheXAbove (uid526127@user/thexabove) (Ping timeout: 268 seconds)
[07:33:42] *** Quits: circuitbone (sid355934@user/circuitbone) (Ping timeout: 268 seconds)
[07:33:49] *** Joins: mustache_ride (sid451683@user/mustache-ride/x-6533344)
[07:33:51] *** Quits: hardwire (sid415742@uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[07:33:51] *** Quits: mobius (sid478273@uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[07:33:53] *** Quits: poiqwepoiqwe (uid525840@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[07:33:53] *** Joins: rubin55 (sid175221@2a03:5180:f:4::2:ac75)
[07:33:55] *** Joins: TingPing (sid2800@2a03:5180:f:1::af0)
[07:33:57] *** Joins: hwrd (sid64402@2a03:5180:f:2::fb92)
[07:33:57] *** Joins: Knyght (sid365271@2a03:5180:f:1::5:92d7)
[07:33:57] *** Joins: graingert (sid128301@2a03:5180:f::1:f52d)
[07:33:58] *** Joins: rburton (rburton@user/rburton)
[07:33:58] *** Joins: ericoc (sid179921@id-179921.uxbridge.irccloud.com)
[07:34:01] *** Joins: kmikita (uid461814@2a03:5180:f:1::7:bf6)
[07:34:02] *** Joins: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com)
[07:34:03] *** Joins: Sario (uid356235@miraheze/Sario528)
[07:34:03] *** Joins: MrNaz (sid133418@id-133418.uxbridge.irccloud.com)
[07:34:04] *** Joins: morgabra (sid500580@user/morgabra)
[07:34:06] *** Quits: sparc (sid160069@uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[07:34:06] *** Quits: km (sid515529@user/km) (Ping timeout: 260 seconds)
[07:34:06] *** Quits: drmessano (drmessano@user/drmessano) (Ping timeout: 260 seconds)
[07:34:06] *** Quits: Tiago_Paolini (sid172748@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[07:34:09] *** Joins: Evolver (sid32215@user/evolver)
[07:34:09] *** Joins: coldmountain (sid484352@2a03:5180:f:1::7:6400)
[07:34:09] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[07:34:11] *** Joins: bjs (sid190364@user/bjs)
[07:34:12] *** Joins: Gaurhoth (sid75085@2a03:5180:f:3::1:254d)
[07:34:17] *** Joins: hardwire (sid415742@id-415742.uxbridge.irccloud.com)
[07:34:17] *** Joins: BlueShark (sid10311@user/blueshark)
[07:34:17] *** Joins: JayDoubleu (sid339529@id-339529.hampstead.irccloud.com)
[07:34:18] *** Joins: Venhal (sid515085@id-515085.uxbridge.irccloud.com)
[07:34:22] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[07:34:23] *** Joins: Pr0phet (sid505706@id-505706.hampstead.irccloud.com)
[07:34:23] *** Joins: joel135 (sid136450@2a03:5180:f:4::2:1502)
[07:34:24] *** Joins: arch-geek (uid525804@id-525804.uxbridge.irccloud.com)
[07:34:24] *** Joins: matthewwilkes (sid500242@2a03:5180:f:5::7:a212)
[07:34:25] *** Joins: Tiago_Paolini (sid172748@2a03:5180:f:4::2:a2cc)
[07:34:26] *** Joins: mobius (sid478273@id-478273.uxbridge.irccloud.com)
[07:34:26] *** Joins: drmessano (drmessano@user/drmessano)
[07:34:28] *** Joins: km (sid515529@user/km)
[07:34:28] *** Joins: seds (sid492514@user/seds)
[07:34:29] *** Joins: cuppajoeman (sid521943@id-521943.hampstead.irccloud.com)
[07:34:31] *** Joins: rpittau (sid346891@id-346891.tinside.irccloud.com)
[07:34:31] *** Joins: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com)
[07:34:31] *** Joins: jesse-s (sid98646@id-98646.hampstead.irccloud.com)
[07:34:32] *** Joins: EWDurbin (sid38710@id-38710.tinside.irccloud.com)
[07:34:34] *** Joins: Tips|Cloud (sid62231@id-62231.ilkley.irccloud.com)
[07:34:35] *** Joins: salimfadhley (sid31217@wikipedia/salimfadhley)
[07:34:36] *** Joins: circuitbone (sid355934@user/circuitbone)
[07:34:40] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[07:34:40] *** Joins: mindlesstux (sid18072@user/mindlesstux)
[07:34:41] *** Joins: TheXAbove (uid526127@user/thexabove)
[07:34:43] *** Joins: sparc (sid160069@id-160069.uxbridge.irccloud.com)
[07:34:43] *** Joins: johnny_ (sid481967@id-481967.hampstead.irccloud.com)
[07:34:45] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[07:34:52] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[07:34:56] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:04] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.64-253.dynamic.3bb.co.th) (Remote host closed the connection)
[07:37:40] *** Joins: p-i- (~Ohmu@mx-ll-223.206.64-253.dynamic.3bb.co.th)
[07:39:38] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 260 seconds)
[07:40:30] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 268 seconds)
[07:41:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:41:28] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[07:43:31] *** Quits: osprey (~pogotech@047-132-047-100.res.spectrum.com) (Ping timeout: 256 seconds)
[07:44:37] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[07:45:09] *** Quits: emf_ (~emf@c-73-97-137-43.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[07:46:25] *** Joins: pogotech (~pogotech@047-132-047-100.res.spectrum.com)
[07:47:44] *** Quits: alex11 (~alex11@user/alex11) (Quit: Leaving)
[07:48:48] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[07:50:45] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[07:55:14] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[07:57:56] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:58:49] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 256 seconds)
[07:59:18] *** Quits: greknod28 (~grek@120.88.171.98) (Ping timeout: 260 seconds)
[08:00:23] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[08:00:23] *** Quits: xiaguan (~parsley@2604:180:f1::173) (Ping timeout: 264 seconds)
[08:02:36] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[08:03:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:05:36] *** Joins: l4yer (~l4yer@195.181.170.210)
[08:08:20] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:08:26] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[08:08:37] *** Joins: pycurious (~Adium@user/pycurious)
[08:09:51] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:10:29] *** Joins: alex11 (~alex11@user/alex11)
[08:13:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[08:13:20] *** Joins: djapo (~archangel@user/djapo)
[08:14:41] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 256 seconds)
[08:15:49] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[08:16:46] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[08:17:06] *** Joins: parv (~quass@user/parv)
[08:20:45] *** Quits: reset (~reset@user/reset) (Quit: reset)
[08:21:04] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 244 seconds)
[08:21:52] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[08:23:11] *** Joins: djapo (~archangel@user/djapo)
[08:23:13] *** Joins: reset (~reset@user/reset)
[08:28:46] *** Joins: pycurious (~Adium@user/pycurious)
[08:30:18] <lionslicer> anyone online? should I learn css amd html along with python?
[08:30:38] *** Quits: leonardo (~leonardo@user/leonardo) (Quit: WeeChat 3.2)
[08:31:02] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[08:31:40] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:32:22] <phantomotap> that depends. do you want to learn css and html along with python? why?
[08:32:26] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 244 seconds)
[08:32:57] <p-i-> [left for left, right in item.split('-') for item in ['A-B', 'C-D'] if right=='D']
[08:33:03] <p-i-> Is there any way to make this work?
[08:33:15] <p-i-> I want that to return ['C']
[08:34:08] <p-i-> I always struggle with double-comprehensions
[08:35:31] <BrenBarn> there isn't any way to get a list comprehension to "skip" an element in the source iterable
[08:35:39] <BrenBarn> like the result has to include one element for every pass through the loop
[08:35:42] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 260 seconds)
[08:36:57] <BrenBarn> also you have the loops the wrong way around there
[08:37:25] <kronicmage> BrenBarn, conditions in comprehensions let you skip
[08:37:49] <BrenBarn> yes, sorry, that's why I tried to clarify with my second sentence
[08:38:29] <kronicmage> p-i-, I believe you shouldn't be iterating over the split list (split list is List[str]; right now you're unpacking as if it's List[(str, str)])
[08:38:52] <Repiphany> [i for i in range(10) if i%2] # [1, 3, 5, 7, 9]
[08:39:03] <lionslicer> I don't know if I'll need it to develop websites
[08:39:25] <lionslicer> I'm interested in web development, but I'm kinda new to programming
[08:39:40] <energizer> lionslicer: if you want to develop websites you will need to learn a little bit of html and css. read the django tutorial
[08:39:48] <Repiphany> p-i-: You need to write the `for`s in the same order as you would explicit for-loops
[08:40:03] <lionslicer> energizer, thanks
[08:40:16] <Repiphany> for item in blah: for x in item: ... → [x for item in blah for x in item]
[08:41:17] <p-i-> [left for item in ['A-B', 'C-D'] for (left, right) in item.split('-')  if right=='D']
[08:41:28] <p-i-> ValueError: not enough values to unpack (expected 2, got 1)
[08:41:44] <kronicmage> p-i-, you're still iterating over the split list
[08:42:00] <kronicmage> You can only get one at a time that way, not both left and right
[08:42:17] <kronicmage> Python doesn't have structural unpacking in general, so there's no good non-awkward way to do this
[08:42:22] <BrenBarn> I think you need to iterate over the split list if you want the result to be just `["C"]` (i.e., a single element from  the split list)
[08:42:29] <p-i-> Maybe it's fundamentally unpythonic to even try to collapse this into one line
[08:42:48] <p-i-> It's not like I'm paying per ascii
[08:43:29] <BrenBarn> the thing is you don't want to unpack the split list
[08:44:16] <kronicmage> [left for (left, right) in (item.split["-"] for item in ["A-B", "C-D"]) if right =="D"] should work
[08:44:28] <kronicmage> (sorry for untested code, I'm on mobile)
[08:45:01] <Repiphany> Using walrus, `[x[0] for item in ('A-B', 'C-D') if (x := item.split('-'))[1] == 'D']`
[08:45:20] <BrenBarn> there you go
[08:45:21] <BrenBarn> you could probably do something with the walrus
[08:45:31] *** Quits: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:45:44] <BrenBarn> the nested comprehension works too (you just made a typo, should be `item.split("-")`)
[08:46:14] <p-i-> oh walrus to the rescue
[08:46:27] <kronicmage> thanks BrenBarn
[08:46:36] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[08:46:49] *** Quits: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Read error: Connection reset by peer)
[08:47:27] <p-i-> Yes, both ways work! Thanks kronicmage Repiphany BrenBarn
[08:47:31] <kronicmage> On a side note, I do wish python had something akin to Haskell's do-notation, which let's you write much larger comprehensions without making it really ugly
[08:47:49] *** Joins: vit (~vit@chello085216193138.chello.sk)
[08:47:50] <BrenBarn> I still don't like the walrus
[08:48:00] <deniska> kronicmage: we have, it's called 'for loop' :)
[08:48:00] *** Joins: Tempesta (~Tempesta@user/tempesta)
[08:48:02] *** Quits: Tempesta (~Tempesta@user/tempesta) (Excess Flood)
[08:48:29] <kronicmage> I like the guarantees that you get when you stay in the list monad though 😅
[08:48:39] <kronicmage> I'd rather not have potential for side effects and Io and similar
[08:49:01] <p-i-> I don't like that I have to usually put my walrus in parens. like: `return (result:=x*y)`. I can't understand why Python's operator precedence can't infer that () are not needed.
[08:49:01] <BrenBarn> but you don't have that in Python anyway, even if you're in a list comprehension
[08:49:06] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:49:17] <kronicmage> that's true BrenBarn
[08:49:25] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[08:49:25] <kronicmage> guess I'll just stick to Haskell then :')
[08:49:52] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[08:50:39] <deniska> So far the only use of walrus which doesn't bother me is `if m := re.match(...):`
[08:51:39] <p-i-> I like to use it to aid self-describing code. But having to add () around it all the time really sucks the merit out of that.
[08:51:48] <jinsun> p-i-: I think some of those rules are to specifically discourage using it when not needed, like why would you assign while returning?
[08:51:54] *** Joins: vicfred (~vicfred@user/vicfred)
[08:52:35] <p-i-> jinsun: True, the function name should indicate the value anyway.
[08:52:42] <p-i-> I've had trouble using it in dict comps too
[08:53:01] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:78ea:979f:a2ff:449) (Quit: Leaving)
[08:53:57] <p-i-> How to solve the problem of `{u: f(u) for u in U} where sometimes f(u) retuns None?
[08:54:43] <Repiphany> What's the problem with returning None
[08:54:58] *** Joins: dead1 (~dead@152.36.146.14)
[08:55:19] <p-i-> I don't want those items in my dict
[08:55:41] <matsaman> you can do an if/else in a comprehension
[08:55:49] <Repiphany> {u: f(u) for u in U if f(u) is not None}
[08:55:59] <Repiphany> Another place for walrus if f is expensive
[08:56:15] <p-i-> I tried and failed to walrus that. lemme testcase.
[08:57:15] <Repiphany> {u: ans for u in U if (ans := f(u)) is not None}
[08:58:17] <p-i-> niice
[08:58:17] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:58:25] <p-i-> I was doing D = {x: (ret:=f(x)) for x in range(5) if ret is not None} and getting name 'ret' is not defined
[08:59:26] <matsaman> there's honestly no shame in not using a comprehension
[09:00:03] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[09:00:16] <matsaman> that's a pretty deep one
[09:00:38] <jinsun> p-i-: the execution order is a bit weird in comprehensions, it is from left to right except for the leftmost thing which is the result and gets evaluated last
[09:01:24] *** Quits: dead1 (~dead@152.36.146.14) (Changing host)
[09:01:24] *** Joins: dead1 (~dead@user/dead1)
[09:01:45] <jinsun> so your `if ret` part was reached before the walus could assign to it
[09:02:55] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 244 seconds)
[09:03:35] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:05:24] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Remote host closed the connection)
[09:05:48] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[09:05:59] *** Joins: Tempesta (~Tempesta@user/tempesta)
[09:06:01] *** Quits: Tempesta (~Tempesta@user/tempesta) (Excess Flood)
[09:12:23] <p-i-> 🙏
[09:12:23] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[09:12:23] *** Joins: grooverman (~grooverma@177.102.119.40)
[09:12:23] *** Joins: Toxmi (~Toxmi@49.158.248.16)
[09:13:46] *** Quits: Sario (uid356235@miraheze/Sario528) (Quit: Connection closed for inactivity)
[09:14:50] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 260 seconds)
[09:14:50] *** Quits: grooverman_ (~grooverma@177.95.12.14) (Ping timeout: 268 seconds)
[09:16:24] *** Joins: analoq (~yashi@user/dies)
[09:18:43] *** Quits: AM (~techman@213.216.208.140) (Ping timeout: 256 seconds)
[09:20:22] *** Joins: AM (~techman@82-203-164-23.bb.dnainternet.fi)
[09:25:56] *** Quits: Valeria (~Valeria@user/valeria) (Quit: Textual IRC Client: www.textualapp.com)
[09:29:11] *** Joins: Tempesta (Tempesta@user/tempesta)
[09:29:12] *** Joins: Valeria (~Valeria@user/valeria)
[09:29:16] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:29:23] *** Joins: stranac (~stranac@195.29.239.126)
[09:32:10] *** Quits: dre (~dre@2001:8003:c932:c301:9f9c:b84c:cb51:c83) (Remote host closed the connection)
[09:32:36] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 245 seconds)
[09:33:49] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[09:34:59] *** Quits: kgz (~kragniz@nyaa.kragniz.eu) (*.net *.split)
[09:34:59] *** Quits: dharrigan (~dharrigan@user/dharrigan) (*.net *.split)
[09:34:59] *** Quits: drew (~drew@user/drew) (*.net *.split)
[09:34:59] *** Quits: l (launchd@bitbot/launchd) (*.net *.split)
[09:34:59] *** Quits: gerty (~gerty@user/gerty) (*.net *.split)
[09:34:59] *** Quits: onu (~onufn@gibbs.uberspace.de) (*.net *.split)
[09:34:59] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (*.net *.split)
[09:34:59] *** Quits: push-f (~martin@push-f.com) (*.net *.split)
[09:34:59] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[09:34:59] *** Quits: libussa_ (~libussa@libussa.net) (*.net *.split)
[09:34:59] *** Quits: streety (~streety@li761-24.members.linode.com) (*.net *.split)
[09:34:59] *** Quits: gbristol (gbristol@hermes.gbristol.net) (*.net *.split)
[09:34:59] *** Quits: Stx (stx@libera/staff/stx) (*.net *.split)
[09:34:59] *** Quits: MacGyver (~macgyver@user/macgyver) (*.net *.split)
[09:34:59] *** Quits: ruediger (~ruediger@user/ruediger) (*.net *.split)
[09:34:59] *** Quits: mkoskar (~mkoskar@user/mkoskar) (*.net *.split)
[09:34:59] *** Quits: mteo (francis@user/francis) (*.net *.split)
[09:34:59] *** Quits: poxifide (deathspawn@user/poxifide) (*.net *.split)
[09:34:59] *** Quits: towel (~towel@user/towel) (*.net *.split)
[09:34:59] *** Quits: orkim (~orkim@user/orkim) (*.net *.split)
[09:34:59] *** Quits: awygle (~quassel@2604:a880:2:d0::5380:3001) (*.net *.split)
[09:34:59] *** Quits: reda_ (~reda@user/reda) (*.net *.split)
[09:34:59] *** Quits: thib (~thib@wikimedia/Thibaut120094) (*.net *.split)
[09:35:06] *** Joins: mteo (francis@user/francis)
[09:35:08] *** Joins: awygle (~quassel@2604:a880:2:d0::5380:3001)
[09:35:11] *** Joins: streety (~streety@li761-24.members.linode.com)
[09:35:14] *** Joins: reda (~reda@user/reda)
[09:35:18] *** Joins: vancz (~vancz@user/vancz)
[09:35:19] *** Joins: thib (~thib@wikimedia/Thibaut120094)
[09:35:19] *** Joins: orkim (~orkim@user/orkim)
[09:35:21] *** Joins: push-f (~martin@push-f.com)
[09:35:22] *** Joins: towel (~towel@user/towel)
[09:35:27] *** Joins: MacGyver (~macgyver@user/macgyver)
[09:35:27] *** Joins: Stx (~stx@libera/staff/stx)
[09:35:28] *** Joins: launchd (~launchd@bitbot/launchd)
[09:35:29] *** Joins: gerty (~gerty@user/gerty)
[09:35:33] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[09:35:35] *** Joins: drew (~drew@user/drew)
[09:35:35] *** Joins: ruediger (~ruediger@user/ruediger)
[09:35:45] *** Joins: onu (~onufn@gibbs.uberspace.de)
[09:35:59] *** Joins: libussa (~libussa@libussa.net)
[09:36:06] *** Joins: kgz (~kragniz@nyaa.kragniz.eu)
[09:36:29] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: See ya!)
[09:37:19] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[09:38:01] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 245 seconds)
[09:40:22] *** Joins: poxifide (~poxifide@user/poxifide)
[09:40:35] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[09:40:51] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[09:42:53] *** Quits: kjdf (~kjdf@ti0063q161-1126.bb.online.no) (*.net *.split)
[09:42:53] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (*.net *.split)
[09:42:53] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (*.net *.split)
[09:42:53] *** Quits: tudor (~tudor@tomka.hu) (*.net *.split)
[09:42:53] *** Quits: nvz (~user@nvz.farted.online) (*.net *.split)
[09:42:53] *** Quits: roniez (~roniez@nixsec.se) (*.net *.split)
[09:42:53] *** Quits: Raichvent (~Raichvent@193.123.33.210) (*.net *.split)
[09:42:53] *** Quits: lxdr (~lxdr@user/lxdr) (*.net *.split)
[09:42:53] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (*.net *.split)
[09:42:53] *** Quits: dngray[m] (~dngray@user/dngray) (*.net *.split)
[09:42:53] *** Quits: mindlesstux[m] (~mindlesst@user/mindlesstux) (*.net *.split)
[09:42:53] *** Quits: BrenBarn (~brenbarn@2001:470:69fc:105::2da2) (*.net *.split)
[09:42:53] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (*.net *.split)
[09:42:53] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (*.net *.split)
[09:42:53] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (*.net *.split)
[09:42:53] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (*.net *.split)
[09:42:53] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[09:42:53] *** Quits: rodstewart (~dmartins@188.ip-149-56-97.net) (*.net *.split)
[09:42:53] *** Quits: tabakhase (tabakhase@user/tabakhase) (*.net *.split)
[09:42:53] *** Quits: rud0lf (rud0lf@user/rud0lf) (*.net *.split)
[09:42:53] *** Quits: Ninpo (~Ninpo@user/ninpo) (*.net *.split)
[09:42:53] *** Quits: dece (~dece@dece.space) (*.net *.split)
[09:42:53] *** Quits: cole (~cole@user/cole) (*.net *.split)
[09:42:53] *** Quits: fuz (~fuz@user/fuz) (*.net *.split)
[09:42:54] *** Quits: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1) (*.net *.split)
[09:42:54] *** Quits: wereii (~wereii@2a03:3b40:fe:4f::1) (*.net *.split)
[09:42:54] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (*.net *.split)
[09:42:54] *** Quits: marienz (~marienz@libera/staff/marienz) (*.net *.split)
[09:42:54] *** Quits: ammar2 (admin@i.diddled.with.the.opers.so.they.klined.me) (*.net *.split)
[09:42:54] *** Quits: Scotteh (~Scotteh@user/scotteh) (*.net *.split)
[09:42:54] *** Quits: ravish0007_ (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (*.net *.split)
[09:42:54] *** Quits: lucifero (~satan@user/belphegor666) (*.net *.split)
[09:42:54] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[09:42:54] *** Quits: the_rat_ (~ratto@emily.sorcio.org) (*.net *.split)
[09:42:54] *** Quits: edr (~edr@user/edr) (*.net *.split)
[09:42:54] *** Quits: gurki (~gurki@user/gurki) (*.net *.split)
[09:42:54] *** Quits: OverCoder (~OverCoder@user/overcoder) (*.net *.split)
[09:42:54] *** Quits: masterkorp (~masterkor@user/masterkorp) (*.net *.split)
[09:42:54] *** Quits: _moep_ (~moep@user/moep/x-3358975) (*.net *.split)
[09:42:54] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[09:42:54] *** Quits: bertiger (~bertiger@user/bertiger) (*.net *.split)
[09:42:54] *** Quits: phantomcircuit (~phantomci@2604:a880:1:20::f2:c001) (*.net *.split)
[09:42:54] *** Quits: MJ94 (mj94@user/mj94) (*.net *.split)
[09:42:54] *** Quits: Tritium (~tritium@toxin.sdamon.com) (*.net *.split)
[09:42:54] *** Quits: ghormoon (~ghormoon@ghorland.net) (*.net *.split)
[09:42:54] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (*.net *.split)
[09:42:54] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[09:42:54] *** Quits: chymera (~chymera@ns1000526.ip-51-81-46.us) (*.net *.split)
[09:42:54] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (*.net *.split)
[09:42:54] *** Quits: mdk (~mdk@python/psf/mdk) (*.net *.split)
[09:42:54] *** Quits: jfb4 (~jfb4@178.62.2.68) (*.net *.split)
[09:42:54] *** Quits: fhackdroid (~fhackdroi@ec2-13-233-118-159.ap-south-1.compute.amazonaws.com) (*.net *.split)
[09:42:54] *** Quits: kline (~freedom0@libera/staff/kline) (*.net *.split)
[09:42:54] *** Quits: nyany (~nyany@dronebl/admin/cat) (*.net *.split)
[09:42:54] *** Quits: Cybergeek (~Cybergeek@2a03:b0c0:3:e0::1ab:5001) (*.net *.split)
[09:42:54] *** Quits: ldlework (~hexeme@user/hexeme) (*.net *.split)
[09:42:54] *** Quits: dzz007 (~dzz007@user/dzz007) (*.net *.split)
[09:42:54] *** Quits: ses1984 (~stephanst@128.27.196.35.bc.googleusercontent.com) (*.net *.split)
[09:42:54] *** Quits: foo (~foo@user/foo/x-8763512) (*.net *.split)
[09:43:02] *** Joins: gurki (~gurki@user/gurki)
[09:43:05] *** Joins: marienz (~marienz@libera/staff/marienz)
[09:43:06] *** Joins: nvz (~user@nvz.farted.online)
[09:43:07] *** Joins: chronon (~chronon@user/chronon)
[09:43:07] *** Joins: foo (~foo@user/foo/x-8763512)
[09:43:08] *** Joins: Cybergeek (~Cybergeek@2a03:b0c0:3:e0::1ab:5001)
[09:43:09] *** Joins: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[09:43:12] *** Joins: bertiger (~bertiger@user/bertiger)
[09:43:13] *** Joins: tudor (~tudor@tomka.hu)
[09:43:15] *** Joins: nyany (~nyany@dronebl/admin/cat)
[09:43:27] *** Joins: kjdf (~kjdf@ti0063q161-1126.bb.online.no)
[09:43:29] *** Joins: phantomcircuit (~phantomci@192.241.205.97)
[09:43:30] *** Joins: the_rat (~ratto@emily.sorcio.org)
[09:43:30] *** Joins: masterkorp (~masterkor@user/masterkorp)
[09:43:34] *** Joins: Raichvent (~Raichvent@193.123.33.210)
[09:43:36] *** Joins: Scotteh (~Scotteh@user/scotteh)
[09:43:36] *** Joins: MJ94 (mj94@user/mj94)
[09:43:38] *** Joins: dece (~dece@dece.space)
[09:43:44] *** Joins: dzz007 (~dzz007@user/dzz007)
[09:43:44] *** Joins: ammar2 (admin@i.diddled.with.the.opers.so.they.klined.me)
[09:43:45] *** Joins: ghormoon (~ghormoon@ghorland.net)
[09:43:48] *** Joins: chymera (~chymera@ns1000526.ip-51-81-46.us)
[09:43:48] *** Joins: kline (~freedom0@libera/staff/kline)
[09:43:49] *** Joins: hexeme (~hexeme@user/hexeme)
[09:43:50] *** Joins: wereii (~wereii@2a03:3b40:fe:4f::1)
[09:43:50] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[09:43:50] *** Joins: roniez (~roniez@nixsec.se)
[09:44:01] *** Joins: lxdr (~lxdr@user/lxdr)
[09:44:07] *** Joins: OverCoder (~OverCoder@user/overcoder)
[09:44:08] *** Joins: jfb4 (~jfb4@178.62.2.68)
[09:44:08] *** Joins: fhackdroid (~fhackdroi@ec2-13-233-118-159.ap-south-1.compute.amazonaws.com)
[09:44:08] *** Joins: Tritium (~tritium@toxin.sdamon.com)
[09:44:18] *** Joins: ranuzz (~ranuzz@2409:4063:6e18:6b99:a975:ff53:cecd:ef31)
[09:44:22] *** Joins: pizzaiolo (~pizzaiolo@user/pizzaiolo)
[09:44:49] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[09:45:35] *** Joins: strudl (~strudl@user/strudl)
[09:45:35] *** Joins: cole (~cole@user/cole)
[09:45:42] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[09:46:06] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[09:46:33] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[09:46:42] *** Joins: pycurious (~Adium@user/pycurious)
[09:46:44] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[09:47:27] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[09:48:50] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:48:51] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[09:50:51] *** Joins: dngray[m] (~dngray@user/dngray)
[09:51:36] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[09:51:57] *** Joins: mindlesstux[m] (~mindlesst@user/mindlesstux)
[09:52:37] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[09:54:06] *** Quits: Mindscape (~Lindis@user/lindis) (Remote host closed the connection)
[09:54:09] *** Joins: Tempesta (Tempesta@user/tempesta)
[09:54:11] *** Quits: Tempesta (Tempesta@user/tempesta) (Excess Flood)
[09:56:33] *** Quits: dead1 (~dead@user/dead1) (Remote host closed the connection)
[09:56:55] *** Joins: Tempesta (Tempesta@user/tempesta)
[09:58:09] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[09:58:43] *** Quits: grooverman (~grooverma@177.102.119.40) (Ping timeout: 244 seconds)
[09:59:04] *** Joins: Elzington (~Elzington@static-68-235-44-69.cust.tzulo.com)
[09:59:34] *** Joins: ArclightVenus (~arclightv@bl20-152-95.dsl.telepac.pt)
[09:59:58] *** Joins: grooverman (~grooverma@177.102.119.40)
[10:00:18] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:31da:c4b3:9ad3:e92c) (Read error: Connection reset by peer)
[10:00:37] *** Joins: mrwick (~mrwick@user/mrwick)
[10:00:51] *** Joins: dvx (~dvx@185.63.97.64)
[10:03:33] *** Quits: kaos02 (~kaos02@12.186.233.220.static.exetel.com.au) (Ping timeout: 268 seconds)
[10:04:15] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:04:37] *** Joins: sazawal (~sazawal@2409:4043:251d:d661:2c5c:4d74:79ab:af5c)
[10:04:44] *** Quits: sazawal (~sazawal@2409:4043:251d:d661:2c5c:4d74:79ab:af5c) (Remote host closed the connection)
[10:04:54] *** Joins: insignia (~insignia4@2604:3d08:7a8b:2700:2963:ec12:cbe8:ac2a)
[10:05:07] *** Joins: kaos02 (~kaos02@12.186.233.220.static.exetel.com.au)
[10:10:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:16:14] *** Joins: dre (~dre@2001:8003:c932:c301:a62b:d5d5:737b:8c68)
[10:16:24] *** Joins: xkuru (~xkuru@user/xkuru)
[10:17:44] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:17:50] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 244 seconds)
[10:19:18] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[10:19:44] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[10:20:22] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:21:15] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:21:56] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[10:22:11] *** Parts: insignia (~insignia4@2604:3d08:7a8b:2700:2963:ec12:cbe8:ac2a) (Leaving)
[10:23:54] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[10:27:29] <aphysically> it seems the huge majority of idiomatic python doesn't use any dynamic features whatsoever
[10:27:55] *** Joins: Armanzor (~Armanzor@user/armanzor)
[10:28:41] *** Joins: manti7 (~manti7@176.10.104.94)
[10:29:22] <bookworm> what do you consider a "dynamic feature"?
[10:30:57] <aphysically> stuff like defining classes and named tuples and such at runtime
[10:30:59] <jinsun> downloading a json file in `__getattr__` and constructing a class at runtime from that (actually done at my company, impossible to type hint without Any)
[10:31:13] <aphysically> jinx
[10:31:16] <BrenBarn> all classes are defined at runtime
[10:31:25] *** Quits: ArclightVenus (~arclightv@bl20-152-95.dsl.telepac.pt) (Quit: Leaving)
[10:31:39] <jinsun> I mean without the class syntax, with some metaclass magic
[10:31:44] *** Joins: ArclightVenus (~arclightv@bl20-152-95.dsl.telepac.pt)
[10:32:34] <aphysically> jinsun: I would judge if it wasn't json but I've dealt with json so I won't judge
[10:32:38] <aphysically> :)
[10:32:50] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:33:39] <aphysically> and yeah the ability to type that type of dynamic python is something like a non-goal of python's typing system iirc
[10:34:00] <aphysically> or at least I've seen people working on typing repeat a mantra of this sort several times on the typing mailing list
[10:34:12] <aphysically> actually I think one of them was Guido [[citation needed]]
[10:34:41] <bookworm> aphysically: that's generally referred to as "metaprogramming" rather than "dynamic"
[10:35:20] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[10:35:51] <aphysically> bookworm: yeah I guess I've been reading too much of python's typing-sig mailing list where they constantly refer to this as static vs dynamic
[10:35:55] <p-i-> df['cvol'].iget(-1)  # Why isn't this returning the last element for this column?
[10:36:02] <aphysically> someone sloppily I guess
[10:36:06] <aphysically> somewhat* sloppily
[10:36:12] <p-i-> "'Series' object has no attribute 'iget'"
[10:36:33] <bookworm> because a pandas.Series doesn't have an iget method?
[10:36:36] <bookworm> you want iloc
[10:36:43] <p-i-> goddit
[10:36:45] <p-i-> tx
[10:36:46] *** Quits: ranuzz (~ranuzz@2409:4063:6e18:6b99:a975:ff53:cecd:ef31) (Ping timeout: 245 seconds)
[10:36:54] <aphysically> i.e. they justify "we don't need to support such and such because it's too dynamic for typing.." comes up a lot when designing new typing PEPs
[10:37:02] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[10:37:08] <aphysically> where they're usually referring to some type of metaprogramming
[10:37:16] <bookworm> dynamic vs statically typed is a whole different concept entirely
[10:37:43] <aphysically> they're not talking about dynamic vs static typing and neither are we
[10:38:23] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:39:11] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[10:39:21] <jinsun> I think by too dynamic they mean that types cannot be figured out without running python code
[10:39:32] <jinsun> which static type checkers don't want to do
[10:39:58] <BrenBarn> but yeah, I mean, it's true that most Python code doesn't use metaprogramming
[10:40:16] <BrenBarn> most of the time there isn't much need and it that kind of code is often confusing
[10:40:19] *** Quits: thurs80601 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: Ping timeout (120 seconds))
[10:40:29] <bookworm> for good reasons too, don't be too smart if a simpler approach works ;)
[10:40:43] *** Joins: thurs80601 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[10:40:54] <bookworm> IIRC the "fluent python" book even starts with a disclaimer like that prior to introducing the features
[10:41:12] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[10:41:13] <aphysically> jinsun: yeah, which is (almost always?) due to some type of metaprogramming
[10:41:53] <aphysically> this is why pyright doesn't support the functional syntax for a lot of stuff by the way
[10:42:12] <aphysically> (because metaprogramming is a non-goal)
[10:42:41] <aphysically> I discovered this when I was playing with mypyc and mypyc had a bug where something only worked in functional syntax, and pyright had a behavior where it only worked in the class syntax
[10:42:44] <aphysically> :^)
[10:43:54] *** Joins: gusto (~Augustus@109.255.100.54)
[10:44:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[10:44:17] <aphysically> bookworm BrenBarn : yeah I guess one question I still have is I'm not sure instances where metaprogramming is a "good" solution to a problem
[10:44:53] <aphysically> this is something I want to explore more
[10:45:22] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[10:46:59] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[10:47:18] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 260 seconds)
[10:47:28] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:41] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[10:48:10] <deniska> aphysically: namedtuple, jinja2 template compilation
[10:48:15] *** Joins: seednode (~seednode@user/seednode)
[10:48:51] <bookworm> ORMs too
[10:48:53] *** lukedashjr is now known as luke-jr
[10:48:55] <deniska> it's a hammer for fairly rare nails, but it's really good at them
[10:49:21] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 244 seconds)
[10:49:26] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[10:49:51] <deniska> (these are examples of literal exec() of concatenated python code. Introspection is in much wider use)
[10:50:04] *** Joins: kosh (~kosh@user/kosh)
[10:50:56] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:53:19] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[10:53:23] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[10:55:20] *** Quits: Stx (~stx@libera/staff/stx) (Quit: leaving)
[10:58:30] <BrenBarn> it has its uses in framework-type things where there's some external user providing code to be run, or some kind of structure that is to be mapped to code (like in an ORM)
[10:58:47] *** Joins: edr (~edr@user/edr)
[11:00:36] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:03:25] *** Joins: pycurious (~Adium@user/pycurious)
[11:05:08] <jinsun> stuff like what pythonnet does https://pythonnet.github.io/ would also count as too dynamic I guess (though maybe can be fixed by providing type stubs for all .net dlls in the world, not going to happen anytime soon)
[11:05:21] *** Joins: mcpac82 (~textual@p5dc1c853.dip0.t-ipconnect.de)
[11:06:39] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:07:32] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[11:07:44] <jinsun> but modules magically becoming importable after running some other code would still cause problems (which is a general problem with hacking around with the import system like sys.path manipulation)
[11:08:49] *** Joins: tobybl (~tobybl@213.31.135.91)
[11:10:13] *** Quits: monchi (~m-6uy5ag@lo3.online) (Remote host closed the connection)
[11:11:14] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[11:12:12] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[11:12:39] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[11:13:01] *** Joins: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4)
[11:13:52] *** Quits: doko (~doko@2a02:8106:1a:7600:c44:5aab:5471:1a0f) (Ping timeout: 268 seconds)
[11:14:34] *** Quits: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4) (Remote host closed the connection)
[11:16:32] *** Quits: taeaad_ (~taeaad@user/taeaad) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[11:17:44] *** Joins: mdk (~mdk@python/psf/mdk)
[11:18:27] *** Quits: ArclightVenus (~arclightv@bl20-152-95.dsl.telepac.pt) (Quit: Leaving)
[11:18:48] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 244 seconds)
[11:19:13] *** Joins: taeaad (~taeaad@user/taeaad)
[11:19:43] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:20:10] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:21:39] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[11:23:44] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[11:23:46] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[11:25:00] *** Quits: Valeria (~Valeria@user/valeria) (Ping timeout: 244 seconds)
[11:25:25] *** Joins: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr)
[11:25:35] *** Quits: somlis (~somlis@user/somlis) (Ping timeout: 264 seconds)
[11:27:30] *** Quits: sus (zero@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[11:28:02] *** Joins: sus (zero@user/zeromomentum)
[11:29:09] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[11:29:28] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[11:29:37] <energizer> deniska: explain the jinja one?
[11:30:00] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[11:30:01] *** Joins: palasso (~palasso@user/palasso)
[11:30:13] *** Quits: Stella\tchik (aoei@nethackscoreboard/aoei) (Quit: reboot)
[11:30:23] *** Parts: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr) ()
[11:30:23] *** Joins: spithash (~spithash@user/spithash)
[11:30:59] <deniska> energizer: well, I see exec() in its code, means metaprogramming :)
[11:31:20] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[11:31:37] <deniska> not sure how they construct code objects, but I hope not by assembling bytecode byte by byte
[11:31:49] <energizer> deniska: i guess {{these}} and {%these%} are probably execed
[11:31:52] *** Joins: aoei (aoei@nethackscoreboard/aoei)
[11:32:18] <deniska> energizer: the whole template gets compiled to a single code object, and then executed
[11:32:19] *** Joins: grooverman_ (~grooverma@179.99.123.165)
[11:32:32] <ExeciN> Hi people. I'm trying to install psycopg2 on an M1 mac but I cannot make it work for the life of me. I'm on python 3.9.7. What is the magic I'm missing?
[11:32:33] <deniska> code object is cached
[11:32:47] <energizer> ah
[11:33:28] <energizer> ExeciN: what did you try
[11:33:34] <energizer> and what happened
[11:33:47] *** Joins: vladoski (~vladoski@93-36-216-2.ip62.fastwebnet.it)
[11:33:48] <deniska> energizer: I won't be surprised if this process literally rewrites template into valid python, it's pretty much the most straightfoward approach
[11:34:03] <deniska> that's certainly how simple templating engine in bottle works
[11:34:08] *** Joins: doko (~doko@2a02:8106:1a:7600:c776:24a0:370f:24e6)
[11:34:18] <energizer> huh i didnt know that
[11:34:19] *** Quits: p-i- (~Ohmu@mx-ll-223.206.64-253.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[11:34:22] <energizer> deniska: btw maybe relevant to your interests https://calpaterson.com/bank-python.html
[11:34:26] *** Joins: thiras (~thiras@user/thiras)
[11:34:49] *** Quits: grooverman (~grooverma@177.102.119.40) (Ping timeout: 244 seconds)
[11:35:15] <ExeciN> energizer: create a venv and then `pip install psycopg2 --no-cache-dir` this gives me this error `Error: pg_config executable not found.`
[11:35:24] *** Joins: p-i- (~Ohmu@223.206.147.186)
[11:35:32] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 240 seconds)
[11:35:38] <energizer> ExeciN: is that how the docs recommend installing it?
[11:36:36] *** Joins: gusto (~Augustus@109.255.100.54)
[11:36:49] <ExeciN> energizer: the docs don't mention the `--no-cache-dir` flag but the doc recommended way also fails the same way
[11:37:08] *** Joins: pycurious (~Adium@user/pycurious)
[11:37:22] <energizer> ExeciN: i see `pip install psycopg2-binary` here https://www.psycopg.org/docs/install.html
[11:37:26] <ExeciN> I also tried installing psycopg2-binary but no luck as well
[11:37:46] <deniska> well, that means you need postgresql client headers installed
[11:38:13] <energizer> ExeciN: https://www.psycopg.org/docs/install.html#build-prerequisites
[11:38:38] *** Quits: jarthur_ (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur_)
[11:38:50] <energizer> but shouldn't the binary work?
[11:39:19] <deniska> is there a binary for m1 yet?
[11:39:29] *** Quits: o (~niko@libera/staff/niko) (Quit: i will be back)
[11:39:57] *** Joins: o (~niko@libera/staff/niko)
[11:40:11] <ExeciN> I have libpq installed through homebrew, maybe I need to set the path of it in some env-var?
[11:40:23] <jinsun> https://pypi.org/project/psycopg-binary/#files shows only x86_64 wheels for mac
[11:40:55] <jinsun> so won't work for m1
[11:41:32] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 244 seconds)
[11:41:47] <deniska> ExeciN: is your python also of a brew variety?
[11:41:54] <ExeciN> deniska: yes
[11:42:12] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[11:42:35] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[11:42:40] *** Joins: leonardo (~leonardo@user/leonardo)
[11:42:43] <ExeciN> should I invest some time to set this up in a docker container or would the arm flavor of the image come back and bite me?
[11:42:45] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[11:42:59] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[11:44:00] <deniska> dunno… At this point I'd be doing find / -name pg_config
[11:44:17] <deniska> maybe it's in some weird location and you just need to nudge PATH a little
[11:44:18] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:44:43] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:45:11] <ExeciN> deniska: I tried this just now https://stackoverflow.com/a/66888252 (which is more or less what you suggested) and installing psycopg2 worked
[11:45:56] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 268 seconds)
[11:46:21] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[11:46:36] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[11:47:15] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:48:12] <ExeciN> I don't fully get why would I need to install postgres server to get a db adapter to work but I wasted too much time on this to care
[11:48:35] *** Joins: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4)
[11:49:03] <deniska> ExeciN: it's like the opposite of debian, not enough splitting of packages
[11:50:03] <ExeciN> its like java, write once, debug everywhere
[11:50:45] <ExeciN> I really hope that this would work in a python docker image, both with intel and arm flavors
[11:51:08] <ExeciN> I'll probably find out later today in a test deployment
[11:52:30] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:54:05] *** Joins: brelod (~me@90.244.150.142)
[11:55:25] *** Joins: rickybob (uid410295@id-410295.helmsley.irccloud.com)
[11:55:47] *** Joins: pycurious (~Adium@user/pycurious)
[12:00:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:01:30] *** Joins: stockholm (~Andreas@p200300d2c706c500006cb6b6b81a6cfe.dip0.t-ipconnect.de)
[12:04:18] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[12:04:29] *** Joins: upsala (~zcb@185.213.155.252)
[12:08:36] *** Joins: shad (~shad@user/shad)
[12:11:28] *** Joins: greedom (~greedom@x59cc9b1a.dyn.telefonica.de)
[12:11:54] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Quit: ZZZzzz…)
[12:12:49] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[12:14:16] *** Joins: jdw3000 (~jonathan@c-76-18-136-183.hsd1.tn.comcast.net)
[12:17:17] *** Quits: Myst (~Myst@user/myst) (Quit: Bye!)
[12:17:50] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[12:18:29] *** Joins: Klinda (~superleag@user/klinda)
[12:19:58] *** Joins: Myst (~Myst@user/myst)
[12:20:19] *** Joins: e2m4n (~ezman@user/e2m4n)
[12:20:55] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:21:36] *** Joins: chele (~chele@user/chele)
[12:22:58] *** Quits: gitly (~gitly@148.252.128.211) (Ping timeout: 260 seconds)
[12:24:57] *** Joins: gitly (~gitly@85.255.235.75)
[12:28:17] *** Joins: rendar (~rendar@user/rendar)
[12:29:28] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:30:45] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:31:29] *** dcaro_away is now known as dcaro
[12:32:46] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[12:33:18] *** Joins: somlis (~somlis@user/somlis)
[12:33:56] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[12:35:16] *** Joins: arinov (~arinov@213.194.126.155)
[12:35:17] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[12:35:36] *** Joins: carl- (~carl-@185.103.188.130)
[12:36:55] *** Quits: greedom (~greedom@x59cc9b1a.dyn.telefonica.de) (Remote host closed the connection)
[12:38:14] *** Joins: Ninpo (~Ninpo@user/ninpo)
[12:44:59] *** Quits: fstd (~fstd@xdsl-87-79-44-169.nc.de) (Ping timeout: 256 seconds)
[12:45:16] *** Quits: jdw3000 (~jonathan@c-76-18-136-183.hsd1.tn.comcast.net) (Remote host closed the connection)
[12:49:09] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[12:49:15] *** Quits: kurfen (~kurfen@45.152.181.20) (Read error: Connection reset by peer)
[12:49:48] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[12:52:29] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:53:42] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:53:50] *** Joins: kurfen (~kurfen@45.152.181.20)
[12:55:04] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[12:55:36] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[12:55:55] *** Joins: Auron (~Auron956@user/auron)
[12:56:23] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:58:15] *** Joins: p-i-_ (~Ohmu@223.206.147.186)
[12:58:29] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[13:01:31] *** Quits: p-i- (~Ohmu@223.206.147.186) (Ping timeout: 250 seconds)
[13:04:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[13:04:28] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[13:04:41] *** Joins: binary01 (~binary01@192.110.171.216)
[13:07:07] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[13:09:33] *** Joins: dambuster (~dambuster@185.193.170.225)
[13:10:26] *** Joins: plastico (~plastico@neomutt/plastico)
[13:11:31] *** Joins: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca)
[13:12:26] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Ping timeout: 260 seconds)
[13:14:43] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[13:14:43] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[13:16:26] *** Joins: deutor (~quassel@82.177.4.226)
[13:17:05] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[13:19:07] *** Joins: fstd (~fstd@xdsl-78-34-189-40.nc.de)
[13:20:06] *** Joins: pycurious (~Adium@user/pycurious)
[13:21:17] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:21:41] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[13:22:22] *** Joins: mcope (~matt@user/mcope)
[13:22:57] <peteyboy1> why do rooms like this need identifying? if one is on libera irc, doesn't it mean one is already registered?
[13:23:19] <peteyboy1> anyway, is it possible that django rest framework doesn't allow use of sessions, in contrast to tokens?
[13:24:17] <vdamewood> pacbard: No. Being on libera doesn't imply that one is already registered.
[13:24:22] <vdamewood> peteyboy1: ^
[13:24:26] <vdamewood> sorry pacbard
[13:24:32] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[13:24:36] <The-Compiler> peteyboy1: no, anyone can connect to Libera without needing an account, but that sometimes invites things like spambots
[13:26:14] <peteyboy1> ok, been a while since i set this up, so i forgot the steps
[13:26:15] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[13:26:39] *** Quits: dambuster (~dambuster@185.193.170.225) (Ping timeout: 250 seconds)
[13:26:47] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[13:26:49] <peteyboy1> and anyone about the django rest Q?
[13:26:52] <stealth_> peteyboy1, https://www.django-rest-framework.org/api-guide/authentication/#sessionauthentication
[13:27:49] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[13:28:14] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[13:29:07] *** Joins: dambuster (~dambuster@185.193.170.225)
[13:29:10] <peteyboy1> stealth_, yeah but the tutorial for implementing it is 7.5cm tall, while the one for tokens goes in more detail
[13:29:11] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:29:21] *** Quits: e2m4n (~ezman@user/e2m4n) (Remote host closed the connection)
[13:29:30] <peteyboy1> and there are hardly any tutorials for implementing sessions, in any framework mind you
[13:29:33] <peteyboy1> or language
[13:30:00] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:30:38] <stealth_> you normally just use their Session class of whatever they provide
[13:30:51] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:31:09] <peteyboy1> i'm actually just forwarding the question for a friend, might not reply immediately
[13:32:48] *** Quits: inomoz (~inomoz@176.59.125.26) (Quit: WeeChat 3.3)
[13:33:02] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[13:33:57] *** Joins: Sario (uid356235@miraheze/Sario528)
[13:34:10] <Samian> It would be cool if compilers accepted more character types in source code.  It would be awesome to subscript, for example
[13:34:15] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[13:35:22] *** Joins: fleabag (~sirpengi@li587-65.members.linode.com)
[13:35:46] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:36:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:36:18] *** Quits: s98259 (~s98259@user/helenah) (Ping timeout: 268 seconds)
[13:37:07] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 256 seconds)
[13:39:04] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[13:39:05] *** Joins: pycurious (~Adium@user/pycurious)
[13:40:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[13:40:37] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[13:40:38] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:42:41] <themill> hmm stdlib in python3.5 really doesn't like pathlib, does it
[13:42:52] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a8a7:d8bd:a73:3fa0)
[13:45:10] *** Joins: tmm88 (~tmm88@user/tmm88)
[13:45:34] <jinsun> yes, the rest of the stdlib started handling pathlike stuff in 3.6 https://docs.python.org/3.6/whatsnew/3.6.html#pep-519-adding-a-file-system-path-protocol
[13:46:07] <jinsun> that is one of the reasons to not use 3.5 (the main one being that it is not supported)
[13:46:43] <energizer> the main one being that it doesnt have f-strings tbh
[13:47:19] <stealth_> python 3.6 was a major release with a lot of good features, should use that
[13:47:27] <energizer> unsupported schmunsupported
[13:48:08] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[13:48:26] <themill> I don't get to choose what python J Random User has installed, as much as that will surprise much of the python ecosystem with its obsession for version pinning of everything </rant>
[13:49:01] <jinsun> you get to choose to support them or not though
[13:49:21] <jinsun> just don't support people who refuse to upgrade
[13:50:23] <stealth_> or just don't use pathlib in your code!
[13:50:32] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[13:50:51] *** Joins: mike18 (~geri@217-149-160-150.nat.highway.telekom.at)
[13:50:52] <mike18> hi
[13:50:59] <energizer> you can add pathlib as a third party dependency
[13:51:30] <mike18> i have a path: s3://foo/data_updates/2021-08-03/02/ ... how can i get the path without the last 2 '/' ?
[13:51:32] *** Joins: nyah (~nyah@94.6.71.219)
[13:51:37] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:51:50] <energizer> that's a uri not a path
[13:51:56] <mike18> split something?
[13:51:57] <tmm88> how can i call an opera plugin api throughout python
[13:51:58] <tmm88> ?
[13:52:15] <tmm88> or chrome or firefox
[13:52:17] <tmm88> ?
[13:52:45] *** Joins: mei3 (~mei@user/mei)
[13:52:48] <stealth_> mike18, https://docs.python.org/3/library/os.path.html#os.path.splitdrive
[13:52:53] <energizer> mike18: .rsplit("/", maxsplit=3)[0] or something liek that
[13:54:31] *** Joins: alex11 (~alex11@user/alex11)
[13:54:35] <mike18> energizer: that and append "/" ?
[13:54:43] *** Joins: fdan (~fdan@192.146.154.3)
[13:54:56] <energizer> if you want
[13:55:02] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 240 seconds)
[13:57:14] *** Joins: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de)
[13:59:11] *** Joins: binary011 (~binary01@192.110.171.216)
[14:00:11] *** Quits: Klinda (~superleag@user/klinda) (Read error: Connection reset by peer)
[14:00:17] *** Quits: binary01 (~binary01@192.110.171.216) (Remote host closed the connection)
[14:00:40] *** Joins: Klinda (~superleag@user/klinda)
[14:02:34] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[14:05:16] *** Quits: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:05:18] *** Joins: twb (~twb@2403-5804-c6--add.ip6.aussiebb.net)
[14:06:07] <twb> What's the native python equivalent of subprocess.check_output(['getent', 'service', 'portmapper/tcp'])?
[14:06:16] <twb> For "getent passwd" its "import pwd"...
[14:08:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:09:36] *** Joins: Naan (~Naan@user/naan)
[14:10:09] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Client closed)
[14:10:52] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:11:55] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[14:12:18] *** Joins: Pickchea (~private@user/pickchea)
[14:12:49] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Quit: A random quit message)
[14:13:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[14:13:54] *** Joins: jdmark2 (~jdmark@097-102-095-007.res.spectrum.com)
[14:14:21] <raek> for network service name to port number, there is socket.getaddrinfo(), but I'm not sure if it does exactly what you want
[14:14:23] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[14:14:31] *** Quits: jdmark (~jdmark@097-102-095-007.res.spectrum.com) (Ping timeout: 256 seconds)
[14:14:44] <twb> socket.getservbyname()
[14:14:58] *** Parts: twb (~twb@2403-5804-c6--add.ip6.aussiebb.net) (Changed major mode)
[14:15:02] <vladoski> what's your favourite debugging module?
[14:15:07] *** Joins: twb (~twb@2403-5804-c6--add.ip6.aussiebb.net)
[14:15:22] <twb> (Oops, switched the IRC buffer to python-mode, instead of opening a python buffer)
[14:15:50] <twb> socket.getservbyname('portmapper', 'tcp') ==> 111
[14:16:45] *** Joins: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de)
[14:17:06] *** Quits: p-i-_ (~Ohmu@223.206.147.186) (Remote host closed the connection)
[14:17:44] *** Joins: p-i- (~Ohmu@223.206.147.186)
[14:17:48] <raek> ah, that's better
[14:18:05] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 244 seconds)
[14:18:32] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 240 seconds)
[14:18:43] <twb> Although while looking it up I realized I want some ports that don't have names, an vice-versa, so I'll have to write BOTH forwarded_names={...} and forwarded_ports={...} into my script
[14:19:45] <stealth_> is there anything specific you are looking for?
[14:20:08] <twb> stealth_: who, me?
[14:20:11] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a8a7:d8bd:a73:3fa0) (Quit: Leaving)
[14:20:14] <stealth_> ya
[14:20:22] <twb> not really
[14:21:18] *** Joins: vlm (~vlm@user/vlm)
[14:21:28] *** Joins: maryo (~Maryo@user/maryo)
[14:21:53] <maryo> I am trying to connect to mysql server using sqlalchemy and getting some error.. Here is the piece of code and tracebook https://dpaste.org/Qw9v Can someone shed some pointers?
[14:21:59] <raek> twb: I think that the port names are guaranteed to not contain only numeric characters, so a string with either a port number or a port name can be parsed unambigously
[14:22:45] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[14:23:14] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--381.oracle-ocna.com)
[14:23:38] <deutor> does nslookup 'xxx.xxx.xxx.xxx' resolve that name?
[14:24:21] <maryo> deutor, yes it resolves the name
[14:24:25] <raek> maryo: I think the at-sign in the password isn't escaped properly in the database URL
[14:24:32] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 240 seconds)
[14:25:03] *** Joins: brabrax (~brabrax@user/brabrax)
[14:25:08] <p-i-> Suppose I have a DataFrame with a 'name' col. And I want to add a "starred" col, which cointains "⭐️" for certain names ["FOO", "BAR"] say.
[14:25:13] <raek> I think it is building the string jdbulkmsgr:D@shb0ard123@xxx.xxx.xxx.xxx
[14:25:21] <raek> which contains two @s
[14:25:30] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[14:25:34] <raek> "Can't connect to MySQL server on 'shb0ard123@xxx.xxx.xxx.xxx'"
[14:25:48] <maryo> raek, But I have given the password inside quotes. Still it needs to be escaped?
[14:26:21] *** Joins: brabrax (~brabrax@user/brabrax)
[14:26:47] <stealth_> wow that is such a lame way to connect to a database
[14:26:54] <stealth_> there is a @ inside the password
[14:27:04] <raek> maryo: the quotes are just python syntax to tell where the string begins and ends. on line 9 you combine all the string parts into one big string
[14:27:43] <raek> maryo: you can probably use some URL module to create a properly escaped URL string
[14:28:20] <maryo> raek, thanks a lot for all the pointers.. I will try checking that
[14:29:34] <stealth_> maryo, or don't use @ in your password
[14:30:36] *** Joins: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl)
[14:30:59] <p-i-> I could create do `df['starred'] = ''` but `mask = df_test['coin'] in ['FOO', 'BAR']` doesn't work. "The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all()"
[14:31:06] <raek> maryo: you could try urllib.parse.quote()'ing the username and password
[14:31:08] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[14:31:27] <zodd> Is click a good choice (or is there a better alternative) for wrting a script with syntax: script <cdevice> <command> [optinal argument] ?
[14:31:27] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:31:43] <parv> Oh man, that's hilarious -- setting a password due to database driver, not database itself.
[14:31:47] <nedbat> zodd: click is a good choice for that
[14:31:47] *** Joins: mickey8 (~user@user/mickey)
[14:32:19] <zodd> ty
[14:32:29] <maryo> raek, you mean something like this? engine = create_engine('mysql+pymysql://' + MYSQL_USERNAME + ':' + '%s' + '@' + MYSQL_HOST + '/' + MYSQL_DB % quote('MYSQL_PASSWORD'))
[14:32:41] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:32:56] <p-i-> gottit. `.isin(L)`
[14:32:57] <energizer> zodd: people have been talking about https://typer.tiangolo.com/ lately but i havent tried it myself
[14:33:17] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:6549:da81:550b:aebe)
[14:34:50] <raek> maryo: I would do it like this: create_engine('mysql+pymysql://' + quote(MYSQL_USERNAME) + ':' + quote(MYSQL_PASSWORD) + '@' + quote(MYSQL_HOST) + '/' + quote(MYSQL_DB))
[14:35:13] <maryo> raek, thanks that makes more sense
[14:35:28] <raek> maryo: or like this: create_engine(f'mysql+pymysql://{quote(MYSQL_USERNAME)}:{quote(MYSQL_PASSWORD)}@{quote(MYSQL_HOST)}/{quote(MYSQL_DB)}')
[14:36:16] <raek> there is a urllib.parse.unparse() function too, but I couldn't figue out how to give it username and password
[14:36:16] <TJ-> ok
[14:38:16] <raek> maryo: hmm. maybe you should also add a safe="" argument to all the quote() calls except for the last. (to properly handle parts that contain slashes)
[14:38:46] <raek> there might be a more convenient URL-building library out there that I don't know about, though... :-)
[14:38:47] <p-i-> So I can `mask = df_test['coin'].isin(['FOO', 'BAR'])` and get a bool col on my df that's `true` for the rows I want to star.
[14:39:21] <p-i-> But how to actually create a 'starred' row that contains "⭐️" for these 'true' values and '' otherwise?
[14:39:43] *** Quits: TJ- (~root@user/tj-) (Remote host closed the connection)
[14:39:53] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[14:39:59] <zodd> energizer, yes, I just found that one too. I am still not sure how to define stuff in click as I am knew to it and in my design <device> <command> is a combination which I am not sure how to name in the name of the function and/or the click definition
[14:40:00] <stealth_> maryo, use `url = URL(driver, user, password, host, port, database); create_engine(url)`
[14:40:10] <stealth_> maryo, https://docs.sqlalchemy.org/en/14/core/engines.html#sqlalchemy.engine.URL
[14:40:19] *** Quits: vladoski (~vladoski@93-36-216-2.ip62.fastwebnet.it) (Ping timeout: 250 seconds)
[14:40:32] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[14:40:38] <maryo> raek, stealth_ Sur ethanks for all the help and suggestions o/
[14:42:12] <jinsun> `df["starred"] = mask.map({True: "⭐️", False: ""})` ?
[14:42:35] <jinsun> p-i-: ^
[14:42:51] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:43:07] <p-i-> Brilliant!
[14:43:23] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:43:31] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[14:43:40] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[14:45:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:45:59] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 244 seconds)
[14:47:57] *** Joins: cursey (~cursey@user/cursey)
[14:50:45] *** o is now known as niko
[14:51:21] *** Quits: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:52:01] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[14:52:05] *** Quits: carl- (~carl-@185.103.188.130) (Remote host closed the connection)
[14:53:29] *** Joins: pycurious (~Adium@user/pycurious)
[14:54:19] *** Joins: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1)
[14:55:51] <p-i-> Can I remove all rows from a dataframe where "name" column value ends in '-dead' without iterating explicitly?
[14:57:42] <jinsun> df = df[df.name.str.endswith("-dead")]
[14:57:52] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 244 seconds)
[14:58:34] <jinsun> oh opposite, df = df[~df.name.str.endswith("-dead")]
[14:59:13] *** Joins: TJ- (~root@user/tj-)
[14:59:34] <gitesh> any idea about when to do own programming and when to use docs?
[14:59:53] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:00:20] <p-i-> oh so I can use df.foo instead of df['foo']?
[15:00:31] <p-i-> I often want to do that with standard Python dicts actually.
[15:00:39] <jinsun> if it is a valid identified then yes
[15:00:43] <p-i-> Super-useful
[15:00:54] <jinsun> it is contains weird characters like spaces then you can't do it
[15:01:01] <jinsun> *if it
[15:01:41] *** Joins: sreve (~quassel@p4ff44fe1.dip0.t-ipconnect.de)
[15:03:01] <jinsun> gitesh: if by "use docs" you mean use built-in functionality in stdlib then you should always try to do that before writing your own code
[15:03:03] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:03:36] <p-i-> Can I output a dataframe space-aligned to file? (the way it displays when I dump it from a notebook cell)
[15:05:15] <raek> maryo: stealth_'s suggestion looks like the better way to do it, btw
[15:05:56] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[15:08:05] <jinsun> p-i-: tab separated csv would be the closest I guess, df.to_csv(sep="\t")
[15:09:09] *** Joins: frost (~frost@user/frost)
[15:09:10] <jinsun> you can just print it to a file directly but that won't parse well (and will eat some rows in case of large dataframe)
[15:09:11] *** Joins: R035N3R (~phobos@user/r035n3r)
[15:09:17] *** Joins: BlueSky (~BlueSky@user/bluesky)
[15:09:21] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--381.oracle-ocna.com) (Ping timeout: 250 seconds)
[15:09:42] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[15:11:03] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:11:32] *** Joins: odix (~ok@65.141.163.206)
[15:12:22] <odix> whats the reason why python will print(len("string")) but wont compare two lens in an if statement ?
[15:12:58] <odix> does the whole thing need to be wrapped in an extra eval situation or equivalent ? j/w
[15:13:28] <stealth_> odix, what does this `if` statement looks like?
[15:13:46] *** Joins: szymon (~ugh@37.120.211.197)
[15:14:21] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[15:15:14] <odix> simple if len("okk") > len("ok"):
[15:15:46] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[15:15:56] <sharperguy> I have two Tkinter Text widgets, and I'm trying to get the left widget to have its text aligned all the way to the left of the window, and the right widget all the way to the right. I used the grid layout, and packed them using sticky=W and sticky=E respectively, and also set the algignment of the text to left and right. But for some reason there is still a big empty space on the right and I'm not sure
[15:16:02] <sharperguy> why.
[15:16:33] <stealth_> odix, that should work
[15:17:02] <stealth_> odix, `print(len("okk") > len("ok"))`
[15:18:52] <odix> hmmm i was wondering what was going on
[15:18:58] <odix> maybe I made an error thank you
[15:19:05] *** Joins: han-solo (~hanish@user/han-solo)
[15:20:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:22:37] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:23:00] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[15:23:13] *** Joins: pycurious (~Adium@user/pycurious)
[15:25:44] *** Joins: tobybl (~tobybl@213.31.135.91)
[15:26:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[15:26:20] *** Joins: stpz (~stpz@27.190.169.153)
[15:27:30] *** Joins: legola (~legola@46.235.101.181)
[15:27:31] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:29:02] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 240 seconds)
[15:32:19] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[15:32:35] *** Quits: stpz (~stpz@27.190.169.153) (Quit: Client closed)
[15:34:56] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:14] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[15:37:42] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[15:38:30] *** Joins: vsantana (~vsantana@fttx-177136148231.usr.predialnet.com.br)
[15:39:34] *** Joins: rememberYou (~someone@user/rememberyou)
[15:39:57] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[15:41:01] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[15:41:24] *** Joins: darksun (~darksun@user/darksun)
[15:44:29] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[15:47:02] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 240 seconds)
[15:47:06] *** Quits: mcpac82 (~textual@p5dc1c853.dip0.t-ipconnect.de) (Quit: mcpac82)
[15:47:25] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:47:48] *** Joins: szymon_ (~ugh@37.120.211.196)
[15:47:55] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[15:48:00] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[15:48:31] *** Joins: amllado (~amllado@45.156.42.15)
[15:49:05] *** Joins: tabakhase (~tabakhase@user/tabakhase)
[15:50:05] *** Quits: szymon (~ugh@37.120.211.197) (Ping timeout: 250 seconds)
[15:50:59] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:51:42] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[15:53:04] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[15:53:23] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:53:46] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[15:54:16] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[15:55:18] <zodd> in click, how define a mandatory option to an optional argument?
[15:56:00] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[15:56:15] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 244 seconds)
[15:57:02] *** Joins: dez (uid92154@user/dez)
[15:59:39] <zodd> euhm. optional option :P
[16:00:06] <MacGyver> An optional option to an optional argument?
[16:00:09] *** Quits: Hash (~stoned@hack.the.planet.with.hashsecurity.org) (Quit: https://hashsecurity.org)
[16:00:18] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[16:00:23] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Ping timeout: 244 seconds)
[16:02:27] <MacGyver> Do you mean a default option to an optional argument?
[16:03:16] <MacGyver> Or hmm. No, I think you mean the flag-value?
[16:03:27] <MacGyver> zodd: I think you mean https://click.palletsprojects.com/en/8.0.x/options/#optional-value ?
[16:03:53] <MacGyver> I don't know whether it still works that way though.
[16:03:59] *** Quits: Moyst_ (~moyst@user/moyst) (Ping timeout: 264 seconds)
[16:04:27] <MacGyver> So you have a default for if you don't set the flag, a default for if you *do* set the flag, and a value if you pass it to the flag.
[16:04:33] <zodd> https://paste.debian.net/1218658/
[16:05:58] <zodd> MacGyver, I played around a bit with flag_value. But not much. Might be the way to go
[16:06:15] *** Joins: s98259 (~s98259@user/helenah)
[16:06:25] <lionslicer> my professor said that some editors can mess up a file, so he suggested we stick to the editor he uses
[16:06:34] <lionslicer> but I grew quite fond of geany
[16:06:37] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[16:06:56] <s98259> How come I'm getting this for a float? TypeError: list indices must be integers or slices, not str
[16:07:04] <lionslicer> is it really a problem? is it possible for a regular ide like geany to cause problems?
[16:07:07] <s98259> I'm trying to print it.
[16:07:34] <s98259> lionslicer: geany isn't an IDE.
[16:07:41] <lionslicer> really?
[16:07:48] <s98259> It's a text editor.
[16:08:14] <s98259> Oh!
[16:08:21] <s98259> I just read the wikipedia on it...
[16:08:22] *** Quits: lethu (~lethu@user/lethu) (Read error: Connection reset by peer)
[16:08:31] <s98259> Apparently it has some basic IDE features, woops.
[16:08:41] <zodd> lionslicer, the main problems are code cormatting (think tabs/spaces, new line forcing). If all use the same editor there is no problem. If you adapt your editor to the profs there should be no problem, yet sometimes there is.
[16:08:45] <s98259> I suppose it's like notepad++
[16:08:54] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Client Quit)
[16:09:03] <MacGyver> lionslicer: Ask your professor to define the "messing up".
[16:09:29] *** Joins: tobybl (~tobybl@213.31.135.91)
[16:09:47] <lionslicer> i think it he means adding stuff to your .py file
[16:10:02] <lionslicer> for example, I use spaces instead of tabs when I indent stuff
[16:10:06] <s98259> lionslicer: I agree with MacGyver, he needs to define that and should know better being a professor by educating his students how a text editor can cause problems.
[16:10:07] <zodd> stuff...
[16:10:12] <MacGyver> Yeah, but what. The only thing usually of concern is when tabs and spaces start getting *mixed*.
[16:10:22] *** Joins: Hash (~stoned@wants.to.know.howstoned.ru)
[16:10:49] <s98259> lionslicer: Have you tried spacevim?
[16:10:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:11:03] <MacGyver> And every half-decent editor is configurable to use x spaces instead of a tab.
[16:11:07] <MacGyver> Or vice versa.
[16:11:14] <s98259> It's basically VIM with a load of stuff on top to make it work like an IDE.
[16:11:15] <MacGyver> So ask you prof what they expect to see.
[16:11:30] <zodd> imfo tabs are evil as they are not fixed. Spaces are fixed. Much less fuss; especially when multiple editors/platforms/IDEs/developers are in place
[16:11:31] <MacGyver> And then just make sure your editor does that.
[16:11:53] <MacGyver> zodd: I disagree in principle, but not in practice because Python's pretty clear about it.
[16:11:53] <zodd> s/imfo/imho
[16:12:04] <s98259> Yeah, there's a difference between \t and \s :)
[16:12:12] <MacGyver> I'm more a BSD coding guidelines person. Tabs for scope, spaces for further alignment.
[16:12:16] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[16:12:25] <MacGyver> But not in python because it'll fuck you up.
[16:12:26] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:12:29] <s98259> In nano and vim for example a tab can be configured to be so many spaces.
[16:12:56] <lionslicer> s98259, I'm a rookie when it comes to programming, so I haven't tried things
[16:12:57] *** Quits: parv (~quass@user/parv) (Ping timeout: 256 seconds)
[16:13:04] <s98259> And it helps cause typing a dozen spaces instead of one tab really is unhelpful.
[16:13:39] <lionslicer> I configured my editor to tab = 4 spaces
[16:13:43] <s98259> lionslicer: https://lists.geany.org/pipermail/users/2009-February/004172.html
[16:13:44] <lionslicer> instead of actual tab
[16:13:45] <s98259> Oh1
[16:13:45] *** Joins: lethu (~lethu@user/lethu)
[16:13:47] <s98259> You did that
[16:13:50] <s98259> ignore the link :)
[16:13:51] <lionslicer> yup
[16:14:04] <lionslicer> well, I hope it all goes well
[16:14:21] <s98259> Then your professor doesn't know what he's talking about if he thinks tab in your geany configuration will mess things up.
[16:14:22] <lionslicer> I have a test tomorrow. and it'll be online because of covid
[16:14:34] <s98259> And plus python as you know would throw an indentation error.
[16:14:52] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Client Quit)
[16:15:02] <lionslicer> so we have to send him the .py files. I don't want crashes lol
[16:15:12] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[16:15:14] *** Joins: xiaguan (~parsley@2604:180:f1::173)
[16:15:21] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[16:15:53] <s98259> lionslicer: With SpaceVIM though... based on the file it has open will define things like spaces automatically and will tell you how to best lay out your code for example 2 lines between functions.
[16:16:03] <s98259> But... I don't expect you to burst into that.
[16:16:04] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[16:16:42] *** Joins: dntreou (~yakiza@din-100-186-231-77.ipcom.comunitel.net)
[16:16:44] <lionslicer> the only thing I really care now is to study python and linux documentation
[16:16:55] <lionslicer> I haven't tried much and probably won't for the time being
[16:17:01] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[16:17:28] <lionslicer> since I just started learning, I figured I'd be best to stick to simple things
[16:17:47] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Client Quit)
[16:17:56] <lionslicer> and geany was one of the text editors suggested by the book I'm reading
[16:18:00] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[16:19:25] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Client Quit)
[16:19:25] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[16:19:37] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[16:19:38] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[16:20:00] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[16:20:00] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[16:20:02] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[16:20:30] *** Joins: de-facto (~de-facto@user/de-facto)
[16:20:42] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[16:21:07] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Client Quit)
[16:21:21] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[16:21:21] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e120)
[16:21:32] *** Joins: BlueSky (~BlueSky@user/bluesky)
[16:21:53] <s98259> lionslicer: If a book suggested it then it's probably fine.
[16:22:25] <s98259> Your professor probably is too busy to help students fix their software but it's a bad attitude for him to have.
[16:23:30] <s98259> People should be able to use whatever software they want as long as a particular software isn't part of the criteria.
[16:23:46] *** Joins: carl- (~carl-@185.103.188.130)
[16:23:50] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[16:23:58] <lionslicer> We're still having online classes though
[16:24:07] *** Joins: pycurious (~Adium@user/pycurious)
[16:24:20] <lionslicer> so things are not that normal, I supposed
[16:24:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[16:24:50] <lionslicer> I'll use IDLE during the test just in case
[16:24:56] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:25:05] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:25:15] <grym> lionslicer: an easy solution to well formatted code is to run it through https://black.readthedocs.io/en/latest/
[16:25:27] <grym> lionslicer: which you can do manually or make your editor do for you on save
[16:26:16] *** Quits: R035N3R (~phobos@user/r035n3r) (Quit: WeeChat 3.3)
[16:26:48] <s98259> There was a python script somewhere released officially by the python developers that can validate your code but can't recall where it is.
[16:27:08] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:27:12] <s98259> python code validating python code LOL :D
[16:27:35] <lionslicer> grym: interesting, I'll check it out right now so I don't have to change editors
[16:28:39] <jinsun> s98259: mypy?
[16:28:39] *** Joins: Elodin (~weechat@user/elodin)
[16:29:12] <lionslicer> but I don't think I'll run into problems really
[16:29:16] *** Joins: Pickchea (~private@user/pickchea)
[16:29:24] <s98259> grym: No.
[16:29:36] <s98259> It was contained within the python source code.
[16:29:54] <s98259> and so therefore will probably already on every system which have a python interpreter.
[16:30:40] <grym> never heard of anything like that
[16:31:02] <grym> lionslicer: it's also nice to just not have to think about formatting
[16:31:33] <grym> style, correctness, and logic are plenty!
[16:32:39] *** Joins: Moyst_ (~moyst@user/moyst)
[16:32:54] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[16:33:11] <lionslicer> grym, earlier today I(2AM, brazilian timezone lol) I asked about css and html
[16:33:19] *** Joins: shad (~shad@user/shad)
[16:33:23] <lionslicer> This book I'm reading suggest a website project
[16:33:25] *** Joins: zeden (~zeden@user/zeden)
[16:33:25] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Quit: Konversation terminated!)
[16:33:32] <lionslicer> but I think it's kind of bare bones
[16:33:41] <grym> more work than i care to put into things, and i get paid to code :)
[16:33:58] <rindolf> lionslicer: i like https://flake8.pycqa.org/en/latest/
[16:34:08] <grym> i write some web services, but clients talk to my code with `curl` :)
[16:34:21] <lionslicer> Am I supposed to learn css and html alongside python?
[16:34:23] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[16:34:26] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[16:34:40] <grym> depends on if you want to write websites or not i guess; i never have
[16:34:50] *** Joins: pycurious (~Adium@user/pycurious)
[16:34:56] <lionslicer> what do you usually code?
[16:35:02] *** Quits: pycurious (~Adium@user/pycurious) (Max SendQ exceeded)
[16:35:05] <lionslicer> I'm interested in web dev
[16:35:11] <lionslicer> full stack
[16:35:21] <lionslicer> that's something I'm really interested in
[16:35:23] *** Joins: pycurious (~Adium@user/pycurious)
[16:36:17] *** Joins: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[16:36:18] <grym> i'm a scientist, really, so i write code that does analysis on data and generates plots.  Lately i've been working in a more machine learning/AI startup land, where we write machine learning inference tools where a user uploads us an image and we tell them what's in it
[16:36:33] <grym> neither of those worlds required website development, so i never learned it
[16:37:20] <s98259> grym: I just remembered... it's not a validator but a formatter and it reformats your code to be correct.
[16:37:21] <grym> the tools i write all more or less act like command line applications
[16:37:22] <lionslicer> I see, so your area of expertise is in data science and stuff like that(?)
[16:37:26] <lionslicer> interesting
[16:37:36] <grym> s98259: that sounds like black, but nothing stdlib
[16:37:39] <s98259> grym: I write that code too.
[16:37:59] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[16:38:07] <s98259> Like...
[16:38:39] <grym> lionslicer: 'data science' is so big of a tent that it's almost not a tent :)
[16:38:48] <s98259> I got a load of code here that will warn me of floods across the UK, will tell me where rivers are across the UK, will tell me the water levels at different parts of the rivers across the UK.
[16:38:49] <lionslicer> lol
[16:39:09] <grym> lionslicer: i used to do neuroscience and biomechanics all day and some computer vision at night, now it's the other way around
[16:39:09] <s98259> Will plot flood area polygons, river polylines to a map.
[16:39:52] <s98259> grym: Do you use any GIS system? I suppose what I've write is a cli GIS system really.
[16:40:02] <lionslicer> very nice, you guys
[16:40:09] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:40:31] *** Quits: julia (~quassel@user/julia) (Ping timeout: 245 seconds)
[16:40:41] <grym> s98259: i did some GIS stuff looking at sound exposure in marine mammals.  not python though
[16:41:05] <s98259> I also have my address converted to latitude and longitude and the distance between a flood monitoring station and my home calculated.
[16:41:15] <s98259> grym: Ah nice.
[16:41:15] *** Joins: p-i-_ (~Ohmu@223.206.147.186)
[16:41:18] <s98259> I use qgis.
[16:41:46] <grym> i keep meaning to poke at geopanas
[16:41:49] <grym> geopandas*
[16:41:53] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[16:41:55] <grym> but i haven't gotten a usecase yet
[16:41:56] *** Joins: ballingt (sid190590@id-190590.helmsley.irccloud.com)
[16:41:57] <s98259> Oh that!
[16:42:02] <s98259> Yeah, that's good. :)
[16:42:05] <grym> read: noone's tried to pay me to use shapefiles in like a decade
[16:42:05] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[16:42:30] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[16:42:44] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[16:42:54] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[16:43:03] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[16:44:02] *** Quits: p-i- (~Ohmu@223.206.147.186) (Ping timeout: 240 seconds)
[16:44:39] <Pickchea> Hello! Anyone use mypy with numpy? I have this line `a: npt.NDArray[np.int32] = np.fromiter(s, dtpye=np.int32)' in a function and I get `error: Call to untyped function "fromiter" in typed context' from mypy --strict. Can I fix that?
[16:45:25] <Pickchea> Where np is numpy, npt is numpy.typing and s: set[int].
[16:45:31] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[16:45:53] *** Joins: pycurious (~Adium@user/pycurious)
[16:46:06] *** Quits: pycurious (~Adium@user/pycurious) (Max SendQ exceeded)
[16:46:24] *** Joins: pycurious (~Adium@user/pycurious)
[16:46:58] <s98259> grym: https://i.imgur.com/EjySrlW.jpg and lets say I was to view more information about one of those stations https://i.imgur.com/2yi9HWK.jpg
[16:47:03] *** Joins: julia (~quassel@user/julia)
[16:48:44] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[16:50:41] *** Joins: tobybl (~tobybl@213.31.135.91)
[16:51:18] *** Quits: odix (~ok@65.141.163.206) (Ping timeout: 260 seconds)
[16:52:56] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[16:54:13] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[16:54:19] <Feuermagier> How would I calculate the mean along multiple axis of an array in python? (I have multiple color images and want a mean for each color)
[16:55:22] <grym> Feuermagier: when you say array, do you mean numpy array or python list
[16:55:27] <Feuermagier> numpy
[16:55:46] <grym> np.mean() takes an axis= kwarg
[16:56:04] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[16:56:05] <grym> (which can be a tuple of ints)
[16:56:17] *** Joins: jimm (~jim@about/linux/staff/jim)
[16:56:48] <Feuermagier> so, if I want the output to be (mean_red,mean_green,mean_blue), how would I specify the axis?
[16:57:05] <grym> well, what axes are your r,g, and b channels on?
[16:57:16] <grym> pass those in order
[16:57:39] *** Quits: moldorcoder7 (~moldorcod@37.120.143.29) (Ping timeout: 268 seconds)
[16:57:44] <Feuermagier> well, it's the last axis of a 4D array
[16:57:52] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:57:59] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:58:07] *** Quits: julia (~quassel@user/julia) (Ping timeout: 250 seconds)
[16:58:25] <jinsun> Pickchea: that error happens if the function has no annotations, which is the case for fromiter in the latest stable numpy https://github.com/numpy/numpy/blob/v1.21.4/numpy/__init__.pyi#L901
[16:58:41] <Feuermagier> but np.std(images, axis=3) doesn't seem to do what I want
[17:00:21] <grym> Feuermagier: considering that that's not computing the mean and you're only passing one axis not three, i can't say i'm very surprised
[17:00:26] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[17:00:41] <Pickchea> jinsun, OK thanks! I'm picking up where I left off a few months ago and I didn't have that error back then. Is there a way to selectively ignore these errors (I just want np.fromiter to be usable)?
[17:00:42] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[17:00:50] <Feuermagier> oh, i mean np.mean ^^
[17:01:04] <Feuermagier> how do I pass multiple axis?
[17:01:23] <grym> np.mean(array, axis=(0,2,1)) or whatever
[17:01:39] *** Joins: julia (~quassel@user/julia)
[17:01:42] <jinsun> Pickchea: you can put `# type ignore` comment on that line, also looks like it is fixed in the main branch, so you have to wait for a new release that fixes it then delete that
[17:02:07] <Feuermagier> grym, I'm having a hard time understanding what that actually does
[17:02:18] <Feuermagier> if I pass one axis, what does it do?
[17:02:25] <Feuermagier> and how does that translate to multiple?
[17:02:28] <Pickchea> jinsun, OK thanks!
[17:02:40] <Klinda> hexology: no one answered
[17:03:23] <Klinda> btw I am busy now doing other stuffs, when I can think about it maybe we can discuss
[17:03:40] <jinsun> Pickchea: just put `# type: ignore[no-untyped-call]` actually so you don't ignore other errors
[17:04:02] *** Quits: dvx (~dvx@185.63.97.64) (Ping timeout: 240 seconds)
[17:04:15] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[17:04:25] <Pickchea> jinsun, thanks. I'll see if I can set something in my mypy.ini to allow untyped calls from numpy.
[17:04:32] <Feuermagier> grym, so is axis=(0,1,2) what I actually want?
[17:04:36] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[17:05:05] *** Quits: pogotech (~pogotech@047-132-047-100.res.spectrum.com) (Ping timeout: 256 seconds)
[17:05:24] *** Quits: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Remote host closed the connection)
[17:05:25] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:05:30] <grym> Feuermagier: i have no idea if those specific three integers are relevant to your data; but those are the axes across which separate means will be computed and returned
[17:05:47] *** Joins: rvalue (~rvalue@user/rvalue)
[17:05:57] <Feuermagier> grym, wells seems to be the right one. I was simply not familiar with the way multiple axis work; thx!
[17:06:16] *** Joins: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[17:06:39] <grym> Feuermagier: if you have a 2d array, axis 0 is columnar and axis 1 is rowwise
[17:06:52] *** Joins: cdown_ (~cdown@163.114.131.1)
[17:07:32] *** Joins: maryo (~Maryo@user/maryo)
[17:08:02] *** Quits: doko (~doko@2a02:8106:1a:7600:c776:24a0:370f:24e6) (Ping timeout: 240 seconds)
[17:08:31] <jinsun> Pickchea: there were no errors earlier because all functions were annotated as Callable[..., Any] earlier which just disabled type checking for those functions, see this commit https://github.com/numpy/numpy/commit/5258da3790a1904efe5043b822835e5ad583534b
[17:09:04] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (Read error: Connection reset by peer)
[17:09:11] <Pickchea> jinsun, wow, thanks for digging that up! :-)
[17:09:20] *** Quits: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Client Quit)
[17:09:59] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 264 seconds)
[17:10:09] *** cdown_ is now known as cdown
[17:10:41] *** Joins: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[17:10:48] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:11:13] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:11:18] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[17:13:11] <Pickchea> jinsun, hm, I've set `disallow_untyped_calls = False' in the [mypy-numpy] section in my mypy.ini but oddly that had no effect.
[17:13:33] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[17:14:27] *** Quits: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Client Quit)
[17:14:58] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[17:15:59] <Pickchea> jinsun, OK, it works when I put it in the section for the module I'm writing. But that's no good because I only want to allow it for calls to numpy function. Guess I'll have to use the ignore comments.
[17:16:09] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:17:11] *** Quits: sharperguy (~sharpergu@89.244.126.33) (Ping timeout: 264 seconds)
[17:17:35] <jinsun> Pickchea: yeah better to use ignore comments so you don't ignore too much (also mypy will tell you when the annotations are fixed and you can remove them)
[17:17:46] *** aoei is now known as aoei\Chickatrice
[17:18:40] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[17:18:47] *** Joins: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[17:21:37] *** Quits: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Client Quit)
[17:21:53] *** Quits: RonWhoCares (~ronpi@dhcp-108-170-129-12.cable.user.start.ca) (Read error: Connection reset by peer)
[17:21:58] *** Joins: n00b101 (uid448161@id-448161.lymington.irccloud.com)
[17:23:22] *** Joins: eddiejennings (~eddie@136.55.139.140)
[17:23:28] *** Quits: frost (~frost@user/frost) (Remote host closed the connection)
[17:23:48] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:23:59] *** Joins: pycurious (~Adium@user/pycurious)
[17:27:07] *** Joins: runelind (~runelind@user/runelind)
[17:27:35] *** Quits: szymon_ (~ugh@37.120.211.196) (Ping timeout: 250 seconds)
[17:27:49] *** Joins: szymon_ (~ugh@37.120.211.196)
[17:28:19] <Pickchea> jinsun, I just realised that I use completely untyped modules (like networkx) and call their functions but mypy doesn't yell at me for that although their functions are untyped. Is that because I use `ignore_missing_imports'?
[17:28:40] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:28:48] *** Quits: kostkon (~kostkon@athedsl-393765.home.otenet.gr) (Ping timeout: 268 seconds)
[17:28:57] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a8a7:d8bd:a73:3fa0)
[17:29:38] <Pickchea> If so, is there a way to disregard numpy's typing in mypy.ini? Can't find anything helpful in the mypy docs...
[17:29:39] <jinsun> yes ifnore missing imports makes everything in that module Any if it doesn't have annotations
[17:29:55] <jinsun> s/ifnore/ignore
[17:30:32] *** Joins: jemark (jemark@triton.blinkenshell.org)
[17:31:43] *** Joins: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[17:31:51] <Pickchea> It would be very useful then to make any missing types Any in numpy. I don't see why numpy can do that in completely unannotated modules (networkx) but not in partially annotated ones (numpy).
[17:32:27] *** Joins: xkuru (~xkuru@user/xkuru)
[17:32:34] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[17:32:51] <jinsun> you can set follow_imports = skip I think to ignore numpy's annotations
[17:33:24] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[17:34:25] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 244 seconds)
[17:34:47] *** Quits: jemark (jemark@triton.blinkenshell.org) (Client Quit)
[17:35:28] *** Joins: jemark (jemark@triton.blinkenshell.org)
[17:35:41] <Pickchea> jinsun, yeah, just realised that could help. I'll see what I can cook up, thanks!
[17:36:53] <arash> Hello, I want to send a get request to a website using python requests.get method but it returns port=443): Max retries exceeded with url: / (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object
[17:37:09] <arash> while i can access to that website via chrome browser. what is wrong?
[17:37:22] *** Quits: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Remote host closed the connection)
[17:38:34] *** Joins: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[17:39:20] *** Quits: han-solo (~hanish@user/han-solo) (Remote host closed the connection)
[17:39:41] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[17:40:16] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[17:40:20] *** Quits: vsantana (~vsantana@fttx-177136148231.usr.predialnet.com.br) (Quit: Leaving)
[17:40:23] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[17:44:04] *** Joins: pro_z (~pro_z@37.214.47.38)
[17:46:29] *** Quits: grooverman_ (~grooverma@179.99.123.165) (Remote host closed the connection)
[17:47:23] *** Joins: kostkon (~androirc@2.142.66.94.static.otenet.gr)
[17:48:05] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a8a7:d8bd:a73:3fa0) (Quit: Leaving)
[17:48:11] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[17:48:18] *** Joins: grooverman (~grooverma@177.95.12.14)
[17:48:23] <grawity> arash: are you accessing it via browser from the same system as via python?
[17:48:34] <arash> grawity, yes.
[17:48:48] *** Joins: NeoCore (~neocore@37.120.204.165)
[17:49:09] <dminuoso> Different resolver
[17:49:09] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[17:49:27] <dminuoso> Perhaps a proxy configured on either side
[17:50:00] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:50:05] <dminuoso> Or possibly you're using http over port 80 on chrome, while using https over port 443 in python
[17:51:36] *** Quits: jemark (jemark@triton.blinkenshell.org) (Quit: leaving)
[17:52:03] *** Joins: jemark (jemark@triton.blinkenshell.org)
[17:52:14] *** Quits: dbristow (~dbristow@user/dbristow) (Read error: Connection reset by peer)
[17:52:42] *** Joins: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr)
[17:53:20] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[17:55:09] <sreve> its very wired that you don't need to use 'global' for accessing a list inside a local context.
[17:55:53] *** Quits: jimm (~jim@about/linux/staff/jim) (Quit: Leaving)
[17:56:11] <sreve> I saw this behaviour earlier with pandas.DataFrame ... and I didn't get behind the logic so far.
[17:56:34] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a8a7:d8bd:a73:3fa0)
[17:57:00] <jinsun> you need global only when you assign to a global variable inside a function
[17:57:15] <jinsun> and that logic works for all types
[17:57:19] <sreve> but not when I use it?
[17:57:30] *** Joins: dbristow (~dbristow@user/dbristow)
[17:57:37] <jinsun> yup
[17:58:54] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[18:00:01] <arash> How can i get time in python in y-m-d H:i:s format?
[18:00:23] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[18:01:18] *** Quits: carl- (~carl-@185.103.188.130) (Remote host closed the connection)
[18:01:45] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:02:21] *** kostkon is now known as kostkon_
[18:02:35] <sreve> jinsun: that is the secret. I never get behind it. A variable is always readable and without gloabl, only a local copy is created. Now I am thinking about why the python designers done it that way and were the advantages are.
[18:03:42] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e59c-51ba-07e6-ca2d.res6.spectrum.com)
[18:03:59] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[18:04:22] <jinsun> arash: datetime.datetime.now().isoformat(" ", "seconds") ?
[18:04:44] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:05:15] *** Joins: han-solo (~hanish@user/han-solo)
[18:06:16] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-205-221.dynamic.dial.as9105.com)
[18:07:18] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c5a4:eaf2:add7:ad94)
[18:08:01] <arash> jinsun, thank you
[18:08:12] <jinsun> sreve: normally you want local variables only not global, and I guess it is just less typing required with the current way in that case
[18:08:18] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[18:08:54] *** Joins: pycurious (~Adium@user/pycurious)
[18:09:06] <xkuru> hi, I need some piece of advise: I have a jap-eng dictionary stored as 32 json files, and I have a list of words that I want to find in this dictionary. I'm not sure what approach I should take here: parsing these json's over and over again would waste a lot of time, while keeping them in memory seems to be bad idea too, or am I wrong? what should be a better solution in this case?
[18:09:31] <nedbat> sreve: accessing globals is implicit because it's how you get the modules you've imported at the top of the file, and access other functions defined in your file.
[18:09:50] <nedbat> sreve: if you had to explicitly ask for access to those global, it would be very inconvenient
[18:10:17] <hexnewbie> sreve: It is said one should avoid mutable global state (i.e. write to global variables), hence if you write to something, it defaults to a local one. That does violate ‘explicit is better than implicit’, and pretty glaring due to the inconsistency, but it is far less confusing than e.g. PHP where you gave to type like global *every time* you use a global name.
[18:10:52] <hexnewbie> Which in Python would be an order of magnitude more horrible, as you'd have to add a global statement for every module you use
[18:11:03] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[18:11:25] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:11:33] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[18:11:45] <hexnewbie> The *opposite*, declaring every local variable as local would also be an absurd amount of typing, but now that everyone is doing type annotations on anything it probably wouldn't be noticed :)
[18:11:51] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[18:12:12] *** Joins: alzgh (~alzgh@user/alzgh)
[18:13:38] <nedbat> s/everyone .. anything/some people .. some things/   :)
[18:13:56] *** Joins: lidenbrock (~lidenbroc@177.106.72.69)
[18:14:41] *** pizzaiolo is now known as pizza
[18:14:52] <SnoopJ> xkuru, how much data is it altogether? It might make sense to hold it all in memory if that's possible (as a single dictionary that you update() as you parse each file).
[18:14:55] <arash> how can i use request method to save the Exceptions error in a log file when there is a problem?
[18:14:57] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[18:15:41] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[18:16:58] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:17:36] <hexnewbie> nedbat: True, but even looking at Twisted's source with the added annotations, it has grown visibly longer :)
[18:18:00] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:18:48] *** Joins: dohtem (uid524096@user/dohtem)
[18:19:01] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[18:19:11] <SnoopJ> arash, if you use the `logging` module, you can call `your_logger.exception("My message")` to log both your message *and* information about the active exception.
[18:19:34] *** Joins: pycurious (~Adium@user/pycurious)
[18:20:21] <SnoopJ> if you just want to get information about the current exception, `traceback.format_exc()` is useful (it produces as a string the traceback you see when Python reports an error)
[18:20:23] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[18:21:01] *** Joins: brabrax (~brabrax@user/brabrax)
[18:22:12] *** Quits: amllado (~amllado@45.156.42.15) (Remote host closed the connection)
[18:23:11] <xkuru> SnoopJ, not sure how should I measure it... every json file stores about 10,000 records, so it's ~320,000 records in total, each one of them consists of a word, its meaning, some kind of id, category tag (usually no more than 3 tags), part of speech and 3 additional fields that are usually empty.
[18:23:57] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[18:24:31] *** Quits: rickybob (uid410295@id-410295.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:25:15] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:25:30] <SnoopJ> xkuru, that's probably fine to store in memory, then. Something like this is what I had in mind: `bigdict = {}; for fn in your_filenames: with open(fn, "r") as f: bigdict.update(json.load(f))`
[18:25:55] <SnoopJ> although if the underlying files will not change, you may want to save this result in a single combined JSON object to simplify your loading.
[18:27:49] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[18:28:08] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[18:28:57] <xkuru> SnoopJ, oh I see, thanks! I'll try to do it this way then. and yes, there files are not going to change, unless I update them with new version myself, so maybe I should extract what I need and create another json just for my purposes.
[18:29:27] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[18:29:55] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[18:30:02] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 240 seconds)
[18:30:13] <SnoopJ> xkuru, you could do `with open("out.json", "w") as f: json.dump(bigdict, f)` after running what I suggested above
[18:31:32] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[18:31:42] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:32:04] <SnoopJ> 320k records is sort of an intermediate amount of data. What you described sounds like it's "just" a few KB of data for each entry, so I would estimate the size in memory as ~ hundreds of MB, but it's simple enough to just try and see what it takes.
[18:33:21] <xkuru> SnoopJ, yes, seems like it. I was just a bit bothered by the idea, whether I should start using some database to make it a bit more efficient, even though, well, it's not really needed here, heh.
[18:33:57] *** Joins: upsala (~zcb@185.213.155.252)
[18:34:08] *** Moyst_ is now known as Moyst
[18:34:35] <SnoopJ> xkuru, there are options there, like using a trie. May not be quite as good for JP as it is for other scripts (unless your data are primarily kana words) but the principle of a prefix tree still applies. But you'd be trading memory for I/O slowness which is probably not worth it :)
[18:35:10] *** Quits: mike18 (~geri@217-149-160-150.nat.highway.telekom.at) (Remote host closed the connection)
[18:36:28] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[18:36:58] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[18:36:59] <SnoopJ> might even be slower if the trie were entirely in memory, since dicts give 'average' lookup performance of O(1)
[18:37:22] <SnoopJ> so yea, try it the naive way first and go looking for complicated stuff if that solution is unacceptable for whatever reason :)
[18:37:32] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 240 seconds)
[18:38:14] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Remote host closed the connection)
[18:38:26] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[18:38:32] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[18:38:40] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[18:38:49] *** Joins: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de)
[18:41:04] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 244 seconds)
[18:41:04] <xkuru> SnoopJ, I agree, it's not quite good in JP case, since in general I would search for kanji with some kanji input, and some kanji may be too rarely used ones, and I can't always know reading in kana beforehand, heh, but it would work better for alphabetic languages, I think.
[18:41:43] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a8a7:d8bd:a73:3fa0) (Quit: Leaving)
[18:41:53] *** Joins: kostkon (~kostkon@2a02:587:a112:b71e:51f:2ff5:deef:ea8)
[18:42:29] *** Joins: FergusL (~freenode4@user/fergusl)
[18:42:33] *** Joins: d_p (~d_p@pool-71-171-87-110.clppva.fios.verizon.net)
[18:43:05] *** Quits: kostkon (~kostkon@2a02:587:a112:b71e:51f:2ff5:deef:ea8) (Read error: Connection reset by peer)
[18:43:16] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[18:43:23] <SnoopJ> are you looking for words that contain a given kanji glyph in any position?
[18:43:27] *** Joins: kostkon (~kostkon@2a02:587:a112:b71e:51f:2ff5:deef:ea8)
[18:44:35] <spaceone> does the gzip module write a gzip header during compression and can i prevent this?
[18:44:36] *** Quits: kostkon (~kostkon@2a02:587:a112:b71e:51f:2ff5:deef:ea8) (Remote host closed the connection)
[18:44:54] *** Joins: kostkon (~kostkon@2a02:587:a112:b71e:51f:2ff5:deef:ea8)
[18:45:04] <SnoopJ> xkuru, i.e. searching for 猫 and finding both 猫車 and 子猫 ?
[18:45:32] <ali1234> spaceone: if you want the same compression without the wrappers, use zlib module instead
[18:45:32] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-1014-2f07-8b12-3b8a.res6.spectrum.com)
[18:45:57] <xkuru> SnoopJ, well, no, I'm looking for words, since as I said before, I have a list of words, and given that these words are adjectives, they may be written with just kana, kanji + kana, just kanji or 1 kanji.
[18:46:05] *** Quits: kostkon (~kostkon@2a02:587:a112:b71e:51f:2ff5:deef:ea8) (Remote host closed the connection)
[18:46:24] <SnoopJ> spaceone, I believe it does write a header. You might be able to disable it by writing a subclass with a no-operation _write_gzip_header() member
[18:46:24] *** Joins: kostkon (~kostkon@2a02:587:a112:b71e:51f:2ff5:deef:ea8)
[18:47:23] <SnoopJ> xkuru, so if you query a single kanji like 猫, you want the word associated with exactly that character?
[18:47:29] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[18:47:35] *** Quits: kostkon (~kostkon@2a02:587:a112:b71e:51f:2ff5:deef:ea8) (Remote host closed the connection)
[18:47:48] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:47:55] *** Joins: kostkon (~kostkon@2a02:587:a112:b71e:51f:2ff5:deef:ea8)
[18:48:04] <ExeciN> Hi people. I have a hex string like 'abc123'. how can I get the bytes representation of abc123?
[18:48:36] *** Quits: p-i-_ (~Ohmu@223.206.147.186) (Read error: Connection reset by peer)
[18:48:38] <ali1234> binascii.unhexlify
[18:49:06] <ali1234> or bytes.fromhex()
[18:49:07] <spaceone> ali1234: ok, but I saw in the docstrings that zlib only support method=DEFLATE
[18:49:21] *** Quits: dld (~dld@98.217.187.57) (Ping timeout: 256 seconds)
[18:49:27] <spaceone> SnoopJ: nice, i will investigate. thanks
[18:49:27] <xkuru> SnoopJ, yes, exactly. otherwise I would find words I don't need in this case. I'm almost sure that 99% of words in the list are correctly written in their dictionary form, but I can't know for sure for each one before testing it.
[18:49:38] <ExeciN> ali1234: thanks
[18:49:50] <ali1234> spaceone: that's what gzip uses also
[18:50:04] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[18:50:16] <spaceone> ali1234: ok
[18:52:04] *** Joins: rsx (~dummy@ppp-188-174-156-135.dynamic.mnet-online.de)
[18:52:23] *** Joins: pycurious (~Adium@user/pycurious)
[18:52:25] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:52:34] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[18:53:21] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:53:43] <SnoopJ> xkuru, if your assumption holds, a dict is a good fit, but if you want to think about "near" matches, a tree structure might make more sense
[18:53:51] *** Joins: vladoski (~vladoski@93-36-216-2.ip62.fastwebnet.it)
[18:55:19] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2.1)
[18:55:46] *** Joins: digilink (~digilink@user/digilink)
[18:58:04] <vladoski> is there a way to take a python dict and convert everything (if it's possible) to unicode string in py2?
[18:58:17] <vladoski> i mean if there's some builtin function that does that
[18:58:25] <xkuru> SnoopJ, well... it might be now that I think about it, but still I have yet to find out is there something else that would complicate things like "(see [some another word])" in <meaning>-field.
[18:58:25] *** Joins: akk (~akk@75.161.146.115)
[18:58:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:58:38] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 244 seconds)
[19:02:37] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[19:03:01] *** Joins: brabrax (~brabrax@user/brabrax)
[19:03:23] *** Quits: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:10:50] <vladoski> if I have something like: (663711,)
[19:11:07] <vladoski> why foo, = (663711,) works but not foo, _ no?
[19:11:32] <Wooble> vladoski: foo, _ = requires a 2-item sequnce on the right, you have 1-item.
[19:12:19] *** Joins: magla (~gelignite@55d431b8.access.ecotel.net)
[19:12:22] *** Quits: fhackdroid (~fhackdroi@ec2-13-233-118-159.ap-south-1.compute.amazonaws.com) (Quit: WeeChat 1.4)
[19:12:56] <vladoski> Wooble, makes sense thanks
[19:13:20] <SnoopJ> xkuru, are those cross-references something you want to do automatically, or is it already present in the data (or will you add it manually) ?
[19:13:25] <vladoski> also why (foo,) = (663711,) works? I mean isn't (bar,) a tuple?
[19:13:30] *** Joins: fhackdroid (~fhackdroi@ec2-13-233-118-159.ap-south-1.compute.amazonaws.com)
[19:13:49] <SnoopJ> vladoski, it's special syntax because of the assignment
[19:14:25] <SnoopJ> you could just as well do `[foo,] = ...` and it won't build a list, it's just syntax sugar for emphasizing that the left-hand side is a sequence of names
[19:14:41] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[19:15:14] <SnoopJ> (they compile to *exactly* the same thing in my CPython)
[19:15:24] *** Joins: spiderman (~spiderman@user/spiderman)
[19:17:43] <xkuru> SnoopJ, not sure for now, but I think it's going to be easy to do manually (I expect there's not going to be a lot of them). or I can write a special script for dealing with them later.
[19:18:31] *** Quits: kostkon (~kostkon@2a02:587:a112:b71e:51f:2ff5:deef:ea8) (Ping timeout: 250 seconds)
[19:19:10] <SnoopJ> 👍
[19:19:31] *** Joins: Madda (~Madda@216.51.198.146.dyn.plus.net)
[19:19:35] *** Joins: kostkon (~kostkon@2a02:587:a111:d826:d94c:fb2b:4914:a6a9)
[19:20:49] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[19:21:50] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Client Quit)
[19:22:10] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[19:23:08] *** Quits: lidenbrock (~lidenbroc@177.106.72.69) (Quit: Client closed)
[19:23:26] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:25:13] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:25:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:26:38] *** Quits: rsx (~dummy@ppp-188-174-156-135.dynamic.mnet-online.de) (Ping timeout: 260 seconds)
[19:26:50] <qwedfg> do you know if there is simple method not using any external libraries to count number of subsequent occurences of the string in string?
[19:26:52] <qwedfg> :)
[19:26:55] <theseb> How handle long running processing in a django web server?  is it as easy as launching those function calls with Popen to run in background?
[19:27:05] *** Joins: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net)
[19:27:09] *** Joins: Mighty_Math (~math@188.188.176.110)
[19:27:21] <Mighty_Math> Hello guys. I need to buil a python regex for a telegram anti-spam bot. I'm not (yet) comfortable at all with regexes. Can someone help me ? I need the regex to match if 2 or 3 specific words are contained in the string
[19:27:22] <qwedfg> as far as I know web server is not for long running processing
[19:27:31] *** Joins: rsx (~dummy@ppp-188-174-137-154.dynamic.mnet-online.de)
[19:27:50] <qwedfg> so you would run another process, and then call this process via api for example
[19:28:03] <qwedfg> so you can query for progress and display it on the website
[19:28:22] <Pi-sistance> https://bpa.st/G3WA I get a local variable referenced before assignemnt error, which sounds like I need to set result to= something before I use it in the function, but I did?
[19:29:14] <qwedfg> no you didnt
[19:29:26] <qwedfg> you need to put this result=0 after def sine2
[19:29:31] <qwedfg> not before
[19:30:16] <akk> Mighty_Math: If you're searching for exact matches and you don't care about the order of the words, you might be better of with "if word1 in longstring and word2 in longstring"
[19:30:29] <akk> though admittedly that has to loop twice over the string
[19:30:39] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[19:31:52] <SnoopJ> qwedfg, that isn't true
[19:32:09] <SnoopJ> Pi-sistance, you need to declare `result` as a `global` to do this, which is a sign that it's a bad idea.
[19:32:28] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[19:32:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[19:32:51] <Pi-sistance> SnoopJ: oh gawd, i heard that is bad, but why does it have to be global :S
[19:32:51] <theseb> qwedfg: thanks...if i wanted to run a simple background process can i just use Popen?
[19:33:03] <theseb> qwedfg: is that too primitive?
[19:33:17] <qwedfg> why? it's normal, but kinda strange for web server
[19:33:21] <qwedfg> and high security risk
[19:33:32] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:33:54] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[19:33:57] <SnoopJ> Pi-sistance, when you do `varname = value` in a function like this, the compiler usually assumes you're assigning to a local variable. In this case, you want to assign to a global. The compiler doesn't know about that, it needs a hint.
[19:34:22] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[19:34:23] <Mighty_Math> akk, thank you. It have to be a regex
[19:34:45] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[19:34:56] <SnoopJ> Pi-sistance, and doing `varname += value` is basically the same thing as `varname = varname + value` as far as this code is concerned.
[19:35:09] *** Joins: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net)
[19:35:32] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 240 seconds)
[19:35:34] <akk> Mighty_Math: I suppose you could try something like '(foo.*bar|bar.*foo)' (untested)
[19:36:12] <jinsun> it doesn't have to be global does it? just move the result=0 inside the function
[19:36:31] <SnoopJ> jinsun, that would "work" but it would have different semantics
[19:36:42] <SnoopJ> it might be what Pi-sistance meant to do, though
[19:37:16] <SnoopJ> Pi-sistance, if you want to "start from 0" every time you call sine2(), do what jinsun said
[19:37:41] <SnoopJ> which is probably the case since this looks like a Taylor series expansion
[19:37:51] <Pi-sistance> no, I was told ne ver to do this. Oh so as long as I create the variable INSIDE the function before I do anyhting else Im ok right ? :)))
[19:38:10] <Pi-sistance> and I just read what jinsun said, ty hehe
[19:38:10] *** Joins: Enitin (~Enitin@82.102.22.84)
[19:38:20] <SnoopJ> If you do `result = 0` inside the function, the error will go away, because you'll define the local variable before you use it
[19:38:31] <Pi-sistance> yes I understand now ty
[19:39:23] <SnoopJ> qwedfg, apologies, I thought you'd meant they needed to define their `result` after the entire function, not as part of it.
[19:39:31] * SnoopJ needs another coffee, maybe
[19:39:32] *** Quits: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8) (Ping timeout: 268 seconds)
[19:39:37] <jinsun> oh yeah if you wanted to have the previous call affect the later calls then global would be required
[19:40:05] *** Quits: Abrax (~Abrax@user/abrax) (K-Lined)
[19:40:13] <jinsun> but then I would make a callable class instead
[19:40:46] *** Quits: rsx (~dummy@ppp-188-174-137-154.dynamic.mnet-online.de) (Quit: rsx)
[19:42:28] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[19:42:34] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Ping timeout: 260 seconds)
[19:43:11] * foo hands SnoopJ a triple espresso latte
[19:43:13] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[19:43:28] * foo slowly backs out of channel, like an uncle giving his neice caffeine and sugar and dropping them back off with parents
[19:44:54] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[19:44:55] <Mighty_Math> I need the regex to match messages containing (foo OR bar) AND (bar2)    ---- Where foo and bar are surrounded by whitespaces and bar2 is in the middle of some other chars
[19:44:57] *** Joins: palasso (~palasso@user/palasso)
[19:44:59] *** Quits: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4) (Quit: Leaving)
[19:45:35] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-1014-2f07-8b12-3b8a.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[19:45:42] <Mighty_Math> At this time i have this regex:  \bfoo\b | \bbar\b
[19:46:50] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[19:47:07] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[19:49:08] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:50:30] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[19:50:32] *** Quits: eddiejennings (~eddie@136.55.139.140) (Ping timeout: 240 seconds)
[19:51:19] *** Joins: jab416171 (~jab416171@c-67-182-209-82.hsd1.ut.comcast.net)
[19:51:34] *** Joins: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a)
[19:52:20] <Mighty_Math> Oh wait. akk thank you i think you had the solution. Just had to read it twice
[19:52:37] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:52:50] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[19:53:11] *** Joins: brabrax (~brabrax@user/brabrax)
[19:55:06] *** Quits: sammie (~sammie@users-nat.ccs.neu.edu) (Quit: WeeChat 3.3)
[19:56:09] <SnoopJ> anybody happen to know why Intel OpenVINO 2020.4 has a requirements.txt that pins numpy 1.13.3 (from 2017) ?
[19:56:22] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[19:56:29] <SnoopJ> which is AIUI a much older requirement than what 2020.3.2 had
[19:56:29] *** Joins: ubert (~Thunderbi@p200300ecdf4fca48e6b318fffe838f33.dip0.t-ipconnect.de)
[19:57:19] *** Quits: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net) (Read error: Connection reset by peer)
[19:57:25] *** Joins: Akuli (~Akuli@82-203-160-135.bb.dnainternet.fi)
[19:58:29] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[19:59:19] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:59:53] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[20:00:33] *** Quits: Madda (~Madda@216.51.198.146.dyn.plus.net) (Quit: Leaving)
[20:01:13] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[20:02:18] *** Joins: servytor (uid525486@id-525486.hampstead.irccloud.com)
[20:03:03] *** Joins: gulzar (~gulzar@123.201.54.92)
[20:04:15] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 244 seconds)
[20:04:42] *** Joins: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77)
[20:04:50] <gulzar> Hi. I have a pd.df with on'e column 'r_num' (non unique , repeatetd vals). I have a list which contains some of the r_num (unique). I need to add a new column ('mark') with '*'' if r_num in list and with '-' if r_num not in list. Any ideas please
[20:05:40] *** Joins: et (~et@user/et)
[20:06:38] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 250 seconds)
[20:08:50] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:69a8:3fdf:2722:44b6)
[20:09:12] *** Quits: EgonX_ (~EgonX@2601:2c6:47f:879e:cdc8:2b47:7cb6:5714) (Read error: Connection reset by peer)
[20:10:18] <han-solo> gulzar: https://bpa.st/UFPA # maybe not the best, but
[20:11:33] *** Joins: Dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net)
[20:12:20] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:69a8:3fdf:2722:44b6) (Read error: Connection reset by peer)
[20:13:09] <jinsun_> `df["mark"] = df.r_num.isin(r_num_list).map({True: "*", False: "-"})`
[20:13:44] *** Quits: Armanzor (~Armanzor@user/armanzor) (Read error: Connection reset by peer)
[20:14:21] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[20:14:29] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[20:14:30] *** Quits: Keira (~k@lulzsec.co.uk) (Ping timeout: 260 seconds)
[20:14:50] *** Joins: ckdCreations (~ckdCreati@147.55.133.141)
[20:14:53] <han-solo> clever
[20:15:16] *** Joins: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net)
[20:15:36] <jinsun_> (might need to all fillna("-") too)
[20:15:46] <jinsun_> s/all/add
[20:15:57] *** Joins: zebrag (~chris@user/zebrag)
[20:17:52] *** Joins: Harlin (~DonQixote@75-163-144-60.clsp.qwest.net)
[20:17:52] *** Joins: mei3 (~mei@user/mei)
[20:17:57] *** Joins: gloomy_desktop (~ldorigo@81.161.167.135)
[20:18:26] *** Quits: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[20:18:26] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[20:18:49] *** Joins: kostkon_ (~kostkon@athedsl-393393.home.otenet.gr)
[20:19:02] *** Quits: kostkon (~kostkon@2a02:587:a111:d826:d94c:fb2b:4914:a6a9) (Ping timeout: 240 seconds)
[20:19:04] *** Joins: MikZyth (~MikZyth@host-148-157-66-217.spbmts.ru)
[20:19:05] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:19:14] *** Quits: rgp (~rgp@user/rgp) (Quit: bbl)
[20:19:37] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 250 seconds)
[20:19:53] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[20:20:03] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[20:20:34] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:20:47] *** Joins: rgp (~rgp@user/rgp)
[20:21:08] *** kostkon_ is now known as kostkon
[20:21:10] *** lukedashjr is now known as luke-jr
[20:23:31] *** Joins: jay-m1262 (~jay-m@154.72.163.87)
[20:23:49] *** Joins: greedom (~greedom@x59cc9b1a.dyn.telefonica.de)
[20:23:59] <gulzar> jinsun_: han-solo: both solutions working. Thank You.   my column was 'object' instead of int64, so was failing
[20:23:59] *** Joins: pycurious (~Adium@user/pycurious)
[20:24:20] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Quit: Leaving)
[20:24:40] <dob1> the if conditions is  assign to x s.strip() and if x is not empty, right?   'to': [x for s in to.split(email_separator) if (x := s.strip())
[20:25:48] <Pi-sistance> how can you set a remainder to a variable? what does that even mean?? wtf is z%=(2*pi)
[20:25:53] <jinsun> dob1: yes
[20:26:05] *** Quits: szymon_ (~ugh@37.120.211.196) (Quit: szymon_)
[20:26:08] <dob1> jinsun, ty
[20:27:21] <jinsun> Pi-sistance: that is equivalent to z = z % (2*pi)
[20:27:29] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:28:23] <Mighty_Math> How can i add "dotall" functionality to this regex ? (pass.*joinchat|cst.*joinchat|passeport.*t\.me|pass.*t\.me)
[20:28:59] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[20:29:02] *** Quits: greedom (~greedom@x59cc9b1a.dyn.telefonica.de) (Ping timeout: 240 seconds)
[20:29:36] *** Quits: rgp (~rgp@user/rgp) (Quit: bbl)
[20:30:15] *** Joins: greedom (~greedom@x59cc9b1a.dyn.telefonica.de)
[20:30:22] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[20:30:25] <jinsun> when you use it in re.search or whatever add flags=re.DOTALL
[20:30:28] <han-solo> Mighty_Math: the `re.<method>` usually take a ^
[20:30:35] *** Joins: Linux77 (~7Linux7@186.233.178.42)
[20:30:42] *** Joins: rgp (~rgp@user/rgp)
[20:30:44] *** Quits: rgp (~rgp@user/rgp) (Client Quit)
[20:31:34] <Mighty_Math> I can only provide a regex its not a script its a telegram bot, and i can insert a regex in the antispam filter but it does not work when the message uses newline
[20:32:04] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:32:12] <rustyshackleford> I must be making a dumb mistake
[20:32:27] <rustyshackleford> ",".join(['a', 'b', 'c'])
[20:32:40] <KirkMcDonald> Mighty_Math: Put "(?s)" at the start of the regex.
[20:32:51] <rustyshackleford> I'm seeing the output 'abc' instead of 'a,b,c'
[20:33:14] <KirkMcDonald> rustyshackleford: That sounds like you did "".join(), then.
[20:33:26] *** Joins: pingpongball (~pingpongb@103.94.252.84)
[20:33:35] <pingpongball> Anybody know REACTJS here?
[20:33:50] <pingpongball> I've a big question. on react. i'm using django rest as backend
[20:34:03] <rustyshackleford> correction: I'm seeing the output 'a,bc' instead of 'a,b,c'
[20:34:11] <KirkMcDonald> rustyshackleford: Show us.
[20:34:21] *** Quits: thurs80601 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 250 seconds)
[20:34:24] <deniska> pingpongball: chances are your question is more js related than python
[20:34:41] <han-solo> rustyshackleford: did you type `['a', 'b' 'c']` # ?
[20:34:42] <SnoopJ> pingpongball, if your question is about react itself, try #reactjs
[20:34:42] <han-solo> :)
[20:34:48] <SnoopJ> questions about django are on-topic here, though
[20:34:55] <han-solo> er
[20:36:00] *** Quits: vladoski (~vladoski@93-36-216-2.ip62.fastwebnet.it) (Remote host closed the connection)
[20:36:35] <rustyshackleford> KirkMcDonald: han-solo disregard
[20:36:42] <rustyshackleford> I need another morning coffee
[20:36:47] *** Quits: gulzar (~gulzar@123.201.54.92) (Quit: Konversation terminated!)
[20:36:51] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[20:36:54] <rustyshackleford> I had written ",".join(['a', 'b' 'c'])
[20:37:02] <rustyshackleford> notice the comma missing between b and c
[20:37:12] <KirkMcDonald> That'd do it.
[20:37:14] * rustyshackleford shakes his head in disappointment 
[20:38:32] *** Quits: greedom (~greedom@x59cc9b1a.dyn.telefonica.de) (Remote host closed the connection)
[20:38:50] *** Joins: thurs80601 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[20:38:52] *** Quits: jab416171 (~jab416171@c-67-182-209-82.hsd1.ut.comcast.net) (Ping timeout: 244 seconds)
[20:38:55] <Mighty_Math> KirkMcDonald, it works, thank you so much
[20:39:06] <rustyshackleford> thought I was losing my mind for a second
[20:39:17] <rustyshackleford> I'm rusty at python but this should be easy
[20:39:26] *** Joins: adder (~adder@user/adder)
[20:39:30] *** Joins: greedom (~greedom@x59cc9b1a.dyn.telefonica.de)
[20:39:54] *** Quits: adder` (~adder@user/adder) (Ping timeout: 260 seconds)
[20:40:00] *** Joins: eddiejennings (~eddie@136.55.139.140)
[20:41:29] *** Joins: stdout (~stdout@216.163.21.11)
[20:41:46] *** Joins: monchi (~joints@143.198.92.132)
[20:42:38] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[20:42:47] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:43:15] *** Quits: Sario (uid356235@miraheze/Sario528) (Quit: Connection closed for inactivity)
[20:43:43] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c5a4:eaf2:add7:ad94) (Remote host closed the connection)
[20:44:24] *** Joins: jab416171 (~jab416171@c-67-182-209-82.hsd1.ut.comcast.net)
[20:44:45] *** Joins: Inline (~Inline@2a02:908:1252:7a80:2e5d:c24e:9b07:51fd)
[20:45:07] *** Joins: Roey (~Roey@user/Roey)
[20:45:19] *** Joins: KeiraT (~k@lulzsec.co.uk)
[20:47:43] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:48:42] *** Joins: Guest88 (~Guest88@dyx0pyyyrph8dyp2x84fy-3.rev.dnainternet.fi)
[20:48:52] <Guest88> hello, was match - case only  a python 3.10 feature or am I doing somethign wrong?
[20:49:05] <SnoopJ> Guest88, it is new syntax introduced in 3.10, yes
[20:49:05] <han-solo> yep
[20:49:10] <Guest88> ok
[20:49:24] *** Quits: greedom (~greedom@x59cc9b1a.dyn.telefonica.de) (Remote host closed the connection)
[20:49:33] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[20:50:09] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[20:50:25] *** Joins: greedom (~greedom@x59cc9b1a.dyn.telefonica.de)
[20:50:37] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[20:51:01] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[20:52:27] <han-solo> 3.7.3 wow, i'm so behind.
[20:53:10] <The-Compiler> han-solo: at least not 3.5
[20:53:19] <han-solo> The-Compiler: heh :)
[20:53:27] <grym> han-solo: 3.7's still supported (thank god)
[20:53:37] <han-solo> yep
[20:53:38] * grym gives tensorflow 1.x the stinkeye
[20:54:32] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Ping timeout: 240 seconds)
[20:54:46] <The-Compiler> dropping 3.5 was great for variable type annotations, really looking forward to dropping 3.6 so I can use from __future__ import annotations and use less typing imports
[20:54:50] *** Joins: Macuser (~Macuser@216.30.159.201)
[20:55:22] <SnoopJ> One more month!
[20:55:48] <han-solo> maybe i'm misremembering. But wasn't there a blog or site that sums up "what's new" of each python
[20:55:58] <lionslicer> guys, how can I make a loop using a set of numbers from x to x_n?
[20:56:08] <SnoopJ> han-solo, there's the release notes, but maybe you mean something else?
[20:56:21] <SnoopJ> e.g. for 3.10: https://docs.python.org/3.10/whatsnew/3.10.html
[20:56:21] <The-Compiler> probably gong to be early 2022 for me, together with some other changes requiring some code churn
[20:56:25] <grym> lionslicer: for x in range(low, high+1)
[20:56:36] <han-solo> SnoopJ: mm, maybe
[20:56:38] <lionslicer> thanks!
[20:56:45] <grym> lionslicer: so range(1,5) covers (1,2,3,4) in sequence
[20:56:57] <lionslicer> thanks very much
[20:57:05] <SnoopJ> The-Compiler, I've been 3.7-gazing at work wherever I can since 2019, even. But in reality, we'll probably be targeting Ubuntu 18.04 until the Sun burns out
[20:57:20] <grym>  (and just range(something) goes from 0 to something-1)
[20:58:21] <The-Compiler> makes me wonder if there is something great in 3.8 which will make me want to drop 3.7
[20:58:27] *** Quits: greedom (~greedom@x59cc9b1a.dyn.telefonica.de) (Remote host closed the connection)
[20:58:50] <SnoopJ> Protocol? 😇
[20:59:01] <The-Compiler> oh, walrus.
[20:59:02] <han-solo> := was a 3.8 thing, no ?
[20:59:04] <The-Compiler> maybe
[20:59:09] <Ninpo> didn't 3.8 get faster as well
[20:59:10] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Ping timeout: 256 seconds)
[20:59:11] *** Joins: emf (~emf@2620:10d:c090:400::5:fa16)
[20:59:25] <SnoopJ> Ninpo, there are perf changes with pretty much every release
[20:59:29] *** Joins: greedom (~greedom@x59cc9b1a.dyn.telefonica.de)
[20:59:35] <Ninpo> I recall something about python 3.8 obsoleting the usefulness of pypy with gentoo portage for example
[20:59:52] <SnoopJ> The-Compiler, oh and `f"{foo=}"` which I like quite a lot
[21:00:09] <grym> ^ that's a very nice one
[21:00:23] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[21:00:37] <han-solo> SnoopJ: maybe i was misremembering this # https://mywiki.wooledge.org/BashFAQ/061
[21:00:38] <The-Compiler> okay, looking forward to 2023 now!
[21:01:02] <SnoopJ> the future is bright 🌟
[21:01:22] <SnoopJ> han-solo, that's pretty handy
[21:01:41] <han-solo> yeah, should compile one for python
[21:01:56] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:02:49] <SnoopJ> oh, 3.8 has positional-only args too
[21:02:57] *** Quits: lyr (~lyr@user/lyr) (Read error: Connection reset by peer)
[21:03:02] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[21:03:30] *** dcaro is now known as dcaro_away
[21:03:45] *** Joins: pycurious (~Adium@user/pycurious)
[21:04:27] <The-Compiler> don't care much about those personally
[21:04:48] *** Joins: lyr (~lyr@user/lyr)
[21:05:37] *** Quits: Mighty_Math (~math@188.188.176.110) (Quit: Leaving)
[21:05:46] <SnoopJ> yea I can't say I've ever needed them
[21:07:30] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[21:09:02] <jinsun> han-solo: maybe https://nedbatchelder.com/blog/202105/whats_in_which_python_3739.html
[21:09:32] <SnoopJ> 3.9 introduces graphlib, too \o/
[21:09:34] <han-solo> jinsun: oh hey, nice. Thanks :)
[21:09:37] <SnoopJ> not that there's much in it yet
[21:10:32] *** Quits: pro_z (~pro_z@37.214.47.38) (Ping timeout: 240 seconds)
[21:10:35] *** Joins: odix (~ok@65.141.163.206)
[21:10:40] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[21:10:45] *** Joins: hanaan (~naan@user/naan)
[21:11:08] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:11:11] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 264 seconds)
[21:11:14] *** Joins: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de)
[21:11:18] <han-solo> zoneinfo seems useful
[21:11:28] *** Joins: mickey8 (~user@user/mickey)
[21:11:59] *** Joins: ravan (~ravan@user/ravan)
[21:12:43] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:13:27] *** Quits: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[21:15:32] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[21:15:58] <s98259> Houston? I got a problem! Anyway... I'm trying to pretty print a message with a float variable in it and I've checked to see if the type of object is a float with type() and it is. But I'm getting the error "TypeError: list indices must be integers or slices, not str". I tried Googling it and apparently I'm treating a list like a string but how can I be treating a list like a string when the object
[21:16:00] <s98259> tpye is float? I even tried casting the object to a string but still no luck. How do I fix this?
[21:17:30] <han-solo> s98259: can we see the code and the error in question ?
[21:18:20] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[21:18:22] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[21:18:32] *** Quits: jab416171 (~jab416171@c-67-182-209-82.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[21:18:50] *** Joins: rgp (~rgp@user/rgp)
[21:19:50] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[21:22:07] <s98259> han-solo: https://termbin.com/5seo
[21:22:24] *** Joins: dld (~dld@2620:6e:6000:2900:1d51:fa28:794f:615f)
[21:23:35] <hexnewbie> s98259: stationData['items']['measures'] is a list, not a dictionary
[21:23:44] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:23:57] *** Joins: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net)
[21:24:53] <s98259> hexnewbie: So it is a list? Where did you find that out? I thought in a json file any items which are within a list were between square brackets?
[21:24:55] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:25:04] <Repiphany>     "measures" : [ {
[21:25:30] <s98259> How come type() returns float? So I've to treat the measure part like a list by iterating and then work with the rest of the data like I'm trying to?
[21:25:39] <hexnewbie> s98259: Yeah, as Repiphany shows there are square brackets
[21:25:41] <s98259> Why didn't I think of that?
[21:25:47] <s98259> Damn
[21:25:49] <s98259> Thanks guys ugh
[21:26:15] *** Joins: Goblins (~mz@12.231.191.170)
[21:27:22] <s98259> stageScale isn't under measures so why do I need to interate through measures?
[21:28:02] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[21:28:32] *** Quits: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[21:28:47] <s98259> OH YEAH! I see it now, unitName is. Damn, why didn't I see this before?
[21:28:50] <s98259> Okies thanks.
[21:29:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:30:53] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a8a7:d8bd:a73:3fa0)
[21:31:23] *** Joins: The_Loko (~The_Loko@86.127.253.186)
[21:31:46] *** Joins: aum (~davidnz10@202.47.255.123.static.snap.net.nz)
[21:32:16] *** Joins: Sario (uid356235@miraheze/Sario528)
[21:32:46] <aum> I've got a large asyncio program running too slowly. Can anyone please recommend the easiest way to find which blocking system calls are most slowing it down?
[21:33:27] *** Joins: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net)
[21:34:21] *** Joins: jazzy (~jaziz@user/jaziz)
[21:34:36] <nedbat> seems like many people agree that w3schools is a bad resource for learning. Is there another that aims for the same quick-bite style, but isn't bad?
[21:34:36] <lionslicer> I sometimes have hunch on how to do certain things
[21:35:12] *** Joins: jazzy2 (~jaziz@user/jaziz)
[21:35:17] <lionslicer> and sometimes i forget how to use basic stuff. is this something that happened to you guys when you started out?
[21:35:54] <aum> what's the grip on w3cschools? A lot of folks find it very accessible (even if way incomplete) and a good start on many topis
[21:36:09] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:36:40] <s98259> Works, thanks! :)
[21:36:57] <SnoopJ> aum, they have a troubled history of sharing misleading-or-outright-incorrect information scraped from elsewhere.
[21:37:14] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:37:43] <aum> SnoopJ, wtaf? yikes, scary. I guess I hadn't delved deeply enough to notice that
[21:37:55] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[21:38:03] <han-solo> https://www.w3schools.com/python/python_howto_remove_duplicates.asp
[21:38:06] <SnoopJ> AIUI they started straightening up when they realized how bad their reputation was getting, but the damage is largely done
[21:38:22] <han-solo> like, it's not wrong, but they are kinda using the wrong things ?
[21:38:55] <nedbat> aum: why does the inheritance page show how to make a child class that changes nothing?  https://www.w3schools.com/python/python_inheritance.asp
[21:39:21] *** Quits: jay-m1262 (~jay-m@154.72.163.87) (Ping timeout: 250 seconds)
[21:39:23] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[21:39:49] <nedbat> aum: https://www.w3schools.com/python/python_classes.asp "Almost everything in Python is an object"  Almost? What does that mean?
[21:39:59] *** Quits: zaquest (~notzaques@5.128.210.178) (Ping timeout: 264 seconds)
[21:40:27] <SnoopJ> ouch
[21:40:41] <KirkMcDonald> nedbat: Depends on what a "thing" is, I suppose.
[21:41:18] <SnoopJ> KirkMcDonald, I suppose you could get non-object-y things if you distort "in Python" to mean something like "inside the runtime" but this is hardly beginner-friendly.
[21:41:51] *** Joins: nomic2 (~nomic@85.203.36.33)
[21:42:16] <KirkMcDonald> SnoopJ: Or if you split hairs like saying that statements aren't objects.
[21:42:19] *** Joins: douglaswinship (~douglaswi@78.40.148.180)
[21:42:24] *** Quits: purplex_ (~purplex@user/purplex) (Quit: bye)
[21:43:12] <aum> I think that might be to distinguish from languages like Java where certain primitive types are not objects
[21:43:24] <SnoopJ> aum, in Python, every value is guaranteed to be an object
[21:43:27] <nedbat> aum: in that sense, everything is an object
[21:43:33] *** Joins: purplex_ (~purplex@user/purplex)
[21:43:41] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a8a7:d8bd:a73:3fa0) (Ping timeout: 250 seconds)
[21:44:02] <nedbat> aum: it's like the rest of w3schools: if you squint at it and don't worry about the details, it can give you good information. But every page has weirdnesses like that.
[21:44:46] <SnoopJ> And practicing against that kind of almost-correct information can have weird long-term consequences
[21:46:01] *** hexeme is now known as ldlework
[21:46:10] <SnoopJ> My impression is that they exist mostly to drive traffic to their site. Any education that happens seems to be coincidental.
[21:47:16] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[21:47:20] <aum> Is w3cschools worse than the chaotic lumps of disinformation and non-solutions one often sees on stackoverflow?
[21:47:28] <douglaswinship> about half of my googling is of the kind where I know there's a function that does a particular thing, but i can't remember the name or the order of the arguments. W3Schools tends to be fine for questions like that.
[21:47:40] <SnoopJ> aum, sometimes
[21:48:02] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[21:48:03] <douglaswinship> If I need more than that, I'll usually look up something that has more background and more care put into it than that
[21:48:14] <SnoopJ> I would say it's about the same level of fidelity as random information off of SO on average, but SO spikes higher when a user provides a particularly helpful reply
[21:48:36] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:48:40] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[21:48:46] *** Joins: p-i- (~Ohmu@223.206.147.186)
[21:49:00] *** Joins: ExeciN (~ExeciN@user/nicexe)
[21:49:00] <SnoopJ> douglaswinship, in Python, the official documentation is a pretty good reference for both kinds of information when it comes to the language/stdlib.
[21:49:23] <SnoopJ> and you're less likely to get something out of date (w3schools still has a problem with this AFAIK)
[21:50:10] <douglaswinship> SnoopJ: yup, I look at it often. And if I had to pick a resource to reach for first every time, it would be that one.
[21:50:17] <nedbat> aum: one advantage to SO is you at least get some commentary and competition.  w3schools is presented as fact
[21:50:31] <douglaswinship> It's just that it's easier to google it and click on the first link :)
[21:50:57] <SnoopJ> there is certainly no arguing that it is easier
[21:51:32] <aum> Anyone here done much with brython? Would you consider it ready yet for weaning off JS in the browser?
[21:51:37] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:51:56] *** Joins: Pickchea (~private@user/pickchea)
[21:52:00] <p-i-> aum: I tried it 3 years ago and found that it was really going against the grain NOT to use js
[21:52:03] <SnoopJ> aum, it comes up here from time to time. I wouldn't say it's a complete replacement for JS, but it's relatively mature.
[21:52:29] <p-i-> There's a few Python alternatives
[21:52:49] <SnoopJ> formally speaking, Brython is a Python runtime written in JS.
[21:53:02] *** Quits: TechSmurf (~tech@user/techsmurf) (Ping timeout: 268 seconds)
[21:53:17] <han-solo> i would probably just write js
[21:53:41] * SnoopJ has been meaning to try RustPython -> wasm
[21:53:42] *** Joins: Pilate (~pilate@pilate.io)
[21:53:50] *** Quits: rgp (~rgp@user/rgp) (Quit: bbl)
[21:54:01] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[21:54:27] *** Joins: rgp (~rgp@user/rgp)
[21:54:59] *** Joins: Coldblackice_ (~c@user/coldblackice)
[21:57:52] *** Quits: dntreou (~yakiza@din-100-186-231-77.ipcom.comunitel.net) (Quit: WeeChat 3.2)
[21:57:54] <douglaswinship> aum: I feel like w3schools and stack overflow are (not necessarily good) answers to different questions. W3schools will give you a page about dictionaries, and bunch of different things that you could do with them, one of which may happen solve your problem. Stack overflow will give you a bunch of different solutions to your problem, one of which may happen to involve dictionaries.
[21:58:32] <douglaswinship> So if I'm looking at a problem and thinking "what are my options" then it's usually stack overflow first, to get ideas.
[21:58:46] *** Quits: Coldblackice (~c@user/coldblackice) (Ping timeout: 260 seconds)
[21:59:14] *** Joins: TechSmurf (~tech@user/techsmurf)
[22:00:00] *** Parts: orange (~orangeext@user/orangeextract) (Leaving)
[22:01:04] <douglaswinship> And I guess w3schools suffers in the comparison, because you could usually replace it with the offical python documentation and get better results. But that's not true to SO
[22:01:39] *** Quits: n00b101 (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[22:01:42] * SnoopJ has seen a lot of incorrect information on SO
[22:02:04] <phy1729> I like MDN. It's like the missing man pages.
[22:02:27] <SnoopJ> Yea, MDN is a nice substitute for the webby stuff that w3schools provides
[22:02:36] <SnoopJ> at least the reference materials
[22:03:17] <douglaswinship> SnoopJ: oh yeah. I try never to take it at face value. But it's a good idea generator.
[22:03:28] <KirkMcDonald> Yeah, MDN is my go-to for web nonsense.
[22:03:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[22:03:45] <douglaswinship> "Huh, I've never even heard of that thing, but it sounds useful. Now I'll go look it up somewhere that's actually reliable."
[22:04:57] <aum> SnoopJ: but that's the idea -- relegating JS down the stack as a support language to Python, just as C is a support to CPython
[22:04:59] <douglaswinship> Yeah, I had to learn a lot of typescript and javascript at short notice lately. And after the typescript handbook, MDN was pretty useful
[22:05:44] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[22:05:57] *** Quits: Guest88 (~Guest88@dyx0pyyyrph8dyp2x84fy-3.rev.dnainternet.fi) (Quit: Client closed)
[22:06:26] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:06:44] <SnoopJ> aum, I'd rather have a shallower stack, personally, browsers have enough cruft as it is. But Brython has found its niche
[22:06:44] <aum> is anyone here pretty sharp with asyncio optimisation? I've tried a few profilers and their signal to noise ratio is pretty bad, very hard to see what blocking calls are slowing down the event loop
[22:07:04] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:07:07] *** Quits: odix (~ok@65.141.163.206) (Ping timeout: 256 seconds)
[22:07:45] *** Quits: Dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net) (Quit: Leaving)
[22:08:23] *** Joins: bloody (~bloody@user/bloody)
[22:10:00] *** Joins: brabrax (~brabrax@user/brabrax)
[22:11:56] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[22:12:23] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 244 seconds)
[22:12:24] <aum> although more recent JSs have actual classes now, so I've got a base class which auto binds all methods upon instantiation, so feels a little bit closer to python
[22:13:47] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.3)
[22:13:51] <aum> SnoopJ, you can never have enough cruft in a browser. Why not load 'em up with 4+ GB per tab? :P
[22:14:31] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Quit: Leaving)
[22:14:34] <aum> and so much fun when one adds faulty CI/CD pipelines, so ctrl-F5 is a lucky dip
[22:14:41] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[22:16:02] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 240 seconds)
[22:16:20] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[22:16:32] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[22:17:03] *** Joins: gbristol (gbristol@hermes.gbristol.net)
[22:18:48] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:18:52] <SnoopJ> aum, I suppose we have different preferences, then
[22:19:13] *** Quits: grooverman (~grooverma@177.95.12.14) (Ping timeout: 250 seconds)
[22:19:44] *** Joins: somlis (~somlis@user/somlis)
[22:20:56] <aum> SnoopJ: if truth be told, I like the browser lean. 2014-2017 was 3 years of hell dealing with bloated crufty frameworks, so these days it's just bootstrap, jQuery and handlebars, plus my own uber-lean foundation class
[22:22:05] *** Joins: jay-m1262 (~jay-m@154.72.163.87)
[22:24:02] *** Joins: Madda (~Madda@216.51.198.146.dyn.plus.net)
[22:24:26] *** Quits: greedom (~greedom@x59cc9b1a.dyn.telefonica.de) (Remote host closed the connection)
[22:24:38] *** Quits: naranja (~orange@user/orangeboxcutter) (Quit: AFK)
[22:25:12] *** Joins: grooverman (~grooverma@177.102.119.40)
[22:30:41] *** Parts: Goblins (~mz@12.231.191.170) ()
[22:31:02] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[22:31:32] *** Quits: jay-m1262 (~jay-m@154.72.163.87) (Ping timeout: 240 seconds)
[22:36:45] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Quit: Cya)
[22:37:41] *** nomic2 is now known as nomic
[22:38:06] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[22:38:17] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[22:38:23] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[22:38:37] *** Joins: ExeciN (~ExeciN@user/nicexe)
[22:39:48] *** Quits: aum (~davidnz10@202.47.255.123.static.snap.net.nz) (Quit: Leaving)
[22:40:29] *** Joins: djapo (~archangel@user/djapo)
[22:40:35] *** Quits: emf (~emf@2620:10d:c090:400::5:fa16) (Ping timeout: 264 seconds)
[22:42:14] *** Joins: darksun (~darksun@user/darksun)
[22:43:20] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[22:43:41] *** Joins: ravan (~ravan@user/ravan)
[22:43:45] *** Joins: emf (~emf@2620:10d:c091:480::1:6062)
[22:45:05] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Quit: Haxxa flies away.)
[22:45:23] *** Joins: pycurious (~Adium@user/pycurious)
[22:47:02] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[22:47:21] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[22:47:46] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[22:49:02] *** Quits: NeoCore (~neocore@37.120.204.165) (Quit: Leaving)
[22:49:33] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 250 seconds)
[22:50:46] *** Quits: dbristow (~dbristow@user/dbristow) (Remote host closed the connection)
[22:51:53] *** Quits: pingpongball (~pingpongb@103.94.252.84) (Quit: Client closed)
[22:52:10] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:52:23] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[22:53:00] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[22:53:31] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[22:53:41] *** Joins: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de)
[22:53:48] *** Joins: brabrax (~brabrax@user/brabrax)
[22:55:02] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:55:33] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[22:56:03] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[22:56:23] *** Joins: dbristow (~dbristow@user/dbristow)
[22:56:35] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[22:57:48] *** Joins: Valeria (~Valeria@user/valeria)
[22:57:56] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[22:58:46] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:59:02] *** Quits: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[22:59:06] *** Joins: sudorm (~sudorm@lfbn-orl-1-1707-80.w90-107.abo.wanadoo.fr)
[22:59:23] *** Joins: darksun (~darksun@user/darksun)
[22:59:23] *** Joins: Coldblackice (~c@user/coldblackice)
[22:59:26] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:ed81:215:7b5b:85c3)
[22:59:40] *** Joins: cosimone (~user@93-34-133-23.ip49.fastwebnet.it)
[22:59:44] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[23:00:16] <stewie925> hi all, qq on the bitwise ~ operator - so ~ is complement (if 0 then 1 else 0)
[23:00:39] <stewie925> so if binary value is 11 then ~ 11 is 00 or 0, right?
[23:00:53] <stewie925> we're talking binary value not integer....
[23:01:05] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[23:01:22] *** Joins: de-facto (~de-facto@user/de-facto)
[23:01:28] <KirkMcDonald> stewie925: Sure.
[23:02:02] *** Quits: Coldblackice_ (~c@user/coldblackice) (Ping timeout: 240 seconds)
[23:02:08] <energizer> nedbat: realpython.com is very good
[23:02:13] <stewie925> thanks KirkMcDonald:  just trying to wrap my head around these bitwise operators
[23:02:18] <KirkMcDonald> stewie925: Except remember that Python integers are arbitrary-precision, and so should be considered to start with an infinite number of 0 digits or an infinite number of 1 digits.
[23:02:27] <nedbat> energizer: yes, but longer-form.  Have you seen anything that's in smaller bites?
[23:02:59] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 250 seconds)
[23:03:05] *** Quits: Harlin (~DonQixote@75-163-144-60.clsp.qwest.net) (Remote host closed the connection)
[23:03:09] <KirkMcDonald> stewie925: Which represents a value in two's complement form, thus ~0 equals -1.
[23:03:50] *** Quits: kr0nk (~kr0nk@user/kr0nk) (Quit: leaving)
[23:04:02] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[23:04:10] <stewie925> yeah, I read from wiki python that ~(x) is essentially ~(x) + 1
[23:04:28] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:04:34] *** Joins: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net)
[23:05:23] <stewie925> but I am studying a leetcode solution for finding a unique number in an array with multiple triple elements [1,2,3,1,2,3,4]   - and the solution uses a mix of bitwise operators  which includes ~
[23:05:38] <energizer> nedbat: that's the only good python site i can think of really. a programmingphobic friend got discouraged by codecademy
[23:05:40] <Jimmy2027> hi, does someone know how to include a file in configs from /etc/portage/savedconfig?
[23:06:25] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[23:07:38] <stewie925> https://lenchen.medium.com/leetcode-137-single-number-ii-31af98b0f462
[23:08:04] <stewie925> sorry that's my link referring to using bitwise operators
[23:08:12] <Jimmy2027> I want to include /etc/portage/savedconfig/x11-wm/shiftview.c in /etc/portage/savedconfig/x11-wm/dwm-6.2 but /etc/portage/savedconfig/x11-wm/shiftview.c is not found when included
[23:08:26] <Jimmy2027> ah sorry wrong chat
[23:08:54] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[23:10:03] <lionslicer> guys, are python libraries stored locally?
[23:10:10] <lionslicer> if so, why aren't they build in
[23:10:18] <lionslicer> why do you have to import them?
[23:10:30] <lionslicer> I just started seeing libraries being mentioned in class
[23:10:41] <Repiphany> importing libraries isn't free
[23:10:52] <lionslicer> wdym?
[23:11:01] *** Joins: djapo (~archangel@user/djapo)
[23:11:25] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.147-186.dynamic.3bb.co.th)
[23:11:57] <Repiphany> It takes time to import code
[23:13:21] <lionslicer> ooh
[23:13:22] <lionslicer> I see
[23:13:43] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[23:15:07] *** Quits: p-i- (~Ohmu@223.206.147.186) (Ping timeout: 250 seconds)
[23:15:35] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-205-221.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:17:11] *** Joins: darksun (~darksun@user/darksun)
[23:18:00] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[23:18:21] *** Joins: alzgh (~alzgh@user/alzgh)
[23:20:19] <arash> I have a SMTP information. how can i use it to send notification mail using python? it need authentication
[23:20:51] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[23:20:53] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:7d4d:58ea:ff3d:71a8) (Quit: Textual IRC Client: www.textualapp.com)
[23:21:01] <bjs> stewie925: I assume you meant ~x == -(x + 1)  (or some equivalent variation)
[23:21:32] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[23:21:39] *** Joins: brabrax (~brabrax@user/brabrax)
[23:21:42] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[23:21:51] <stewie925> hi bjs = hoyes youre right :)
[23:22:02] <bjs> stewie925: this is how 2's complement arithmetic works, if you take 0b0111 (aka 7) and flip all the bits you get 0b1000 (aka -8), if using 4-bit 2's complement.  Python doesn't assume a fixed number of bits,  but the math all still works
[23:22:03] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[23:22:09] *** Joins: naranja (~orange@user/orangeboxcutter)
[23:22:59] <stewie925> bjs:  thank you!
[23:23:05] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[23:23:42] <stewie925> flipping 1000 = 0111 (and flip the signed value as well)
[23:23:49] <deniska> you can imagine an infinite string of 1's on the left side of negative numbers :)
[23:24:03] *** Joins: naranja (~orange@user/orangeboxcutter)
[23:24:15] <bjs> stewie925: are you familiar with 2's complement?
[23:24:40] <stewie925> bjs, no I don't (yet)
[23:26:00] <stewie925> or are you referring to the rightmost position being 2^0, then shifting one position to the left gives you 2^1, then another <<1 becomes 2^2 etc ?
[23:26:08] <bjs> stewie925: ah okay,  well the short summary is that each digit in a binary number is a power of 2.    01011 is 11 because it's 2^0 + 2^1 + 2^3.  We get negative numbers by saying that the last digit is negative what it usually does
[23:26:28] <stewie925> yes! I got it then hehehe
[23:26:41] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[23:26:51] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[23:27:02] <bjs> stewie925: so if we have 4 bits, 11011 is 2^0 + 2^1 + 2^3 + -2^4. So flipping all the bits also flips the last bit which in turn flips the sign too.
[23:27:09] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[23:27:48] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:27:55] <stewie925> bjs: awesome explanation
[23:28:00] *** Joins: brabrax (~brabrax@user/brabrax)
[23:28:32] <stewie925> I think it really helps trying leetcode problems  - brings me to bitwise operators and learning them
[23:29:06] * stewie925 tips hat to bjs
[23:29:28] *** Joins: vakosel (~vakosel@ppp089210255112.access.hol.gr)
[23:29:34] *** Quits: vakosel (~vakosel@ppp089210255112.access.hol.gr) (Client Quit)
[23:30:16] *** Quits: Elzington (~Elzington@static-68-235-44-69.cust.tzulo.com) (Quit: Leaving)
[23:30:53] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:31:57] *** Quits: eddiejennings (~eddie@136.55.139.140) (Ping timeout: 244 seconds)
[23:32:14] *** Quits: sudorm (~sudorm@lfbn-orl-1-1707-80.w90-107.abo.wanadoo.fr) (Quit: Leaving)
[23:32:29] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-906d-cc0e-1f4e-892a.res6.spectrum.com)
[23:32:33] *** Quits: Sario (uid356235@miraheze/Sario528) (Changing host)
[23:32:33] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[23:34:01] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[23:34:17] *** Joins: sharperguy (~sharpergu@89.244.126.33)
[23:34:31] *** Joins: george-smiley (~george_sm@user/george-smiley/x-3139219)
[23:34:35] <kungp> anyone experienced with gpio stuff (linux)? i want to read duty cycle and frequency. i'm doing it with polling now but i'd prefer some kind of interrupt system
[23:34:52] *** Joins: brabrax (~brabrax@user/brabrax)
[23:34:57] <kungp> duty cycle and frequency of a pwm signal*
[23:36:09] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:36:52] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[23:36:55] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[23:37:05] <kungp> everything i find is about raspberry pi and its gpio library and this is not an rpi
[23:37:16] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[23:37:36] *** Joins: ExeciN (~ExeciN@user/nicexe)
[23:37:49] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:37:57] <SnoopJ> kungp, what *is* it?
[23:38:13] *** Joins: brabrax (~brabrax@user/brabrax)
[23:39:32] <kungp> it's an electrical isolation tester that for some reason speaks in pwm
[23:40:32] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[23:40:35] <kungp> so i need to somewhat reliably track the edges of a ~100 hz signal
[23:40:38] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[23:40:57] *** Quits: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:41:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[23:41:11] *** Quits: sharperguy (~sharpergu@89.244.126.33) (Ping timeout: 256 seconds)
[23:41:31] *** Joins: eddiejennings (~eddie@136.55.139.140)
[23:42:32] *** Quits: samuelb (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[23:42:37] *** Joins: Stx (stx@libera/staff/stx)
[23:42:47] *** Joins: samuelbernardo (~samuelber@nata02.lip.pt)
[23:43:03] <kungp> was just hoping for someone to have done something similar, it's probably not done in python, usually..
[23:44:01] *** Joins: Bakunin (~Lindis@user/lindis)
[23:45:01] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 250 seconds)
[23:45:11] <SnoopJ> The answer is likely going to depend on the particular hardware you're running on
[23:45:18] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[23:45:26] <SnoopJ> (i.e. you want the analogue of rpi's gpio library)
[23:45:50] *** Quits: mei3 (~mei@user/mei) (Quit: mei3)
[23:46:35] *** Joins: tum92 (~tum92@cpe-74-71-172-197.nyc.res.rr.com)
[23:46:51] <SnoopJ> if you want a hardware interrupt anyway
[23:47:22] *** Quits: tum92 (~tum92@cpe-74-71-172-197.nyc.res.rr.com) (Remote host closed the connection)
[23:47:32] *** Joins: mei3 (~mei@user/mei)
[23:47:41] *** Joins: parv (~quass@user/parv)
[23:50:57] *** Joins: Enitin (~Enitin@82.102.22.85)
[23:51:00] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[23:51:12] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[23:53:46] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-58a6-5967-745c-e63f.res6.spectrum.com)
[23:53:51] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[23:55:28] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[23:55:46] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[23:56:58] *** Joins: orange (~orangeext@user/orangeextract)
[23:58:02] *** Quits: ubert (~Thunderbi@p200300ecdf4fca48e6b318fffe838f33.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:58:17] *** Quits: george-smiley (~george_sm@user/george-smiley/x-3139219) (Quit: Leaving)
[23:58:25] *** Joins: ubert (~Thunderbi@p200300ecdf4fca48e6b318fffe838f33.dip0.t-ipconnect.de)
[23:58:30] *** Papa_ is now known as papa
[23:59:26] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-906d-cc0e-1f4e-892a.res6.spectrum.com) (Quit: Client closed)
