[00:16:14] <companion_cube> I'm not sure whether it's hilarious or sad
[00:21:02] *** Joins: mro (~mro@port-92-195-227-184.dynamic.as20676.net)
[00:34:17] *** Quits: wonko (~wjc@user/wonko) (Ping timeout: 256 seconds)
[00:41:06] *** Quits: mro (~mro@port-92-195-227-184.dynamic.as20676.net) (Quit: Leaving...)
[00:49:31] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[01:01:52] <d_bot> <mseri> Is the change of api for the bots that was in the headlines some weeks ago affecting the integration with irc, or they are unrelated things?
[01:32:39] *** Joins: spip (~bobo@37.173.211.96)
[01:32:58] *** Quits: bobo (~bobo@37.171.60.33) (Ping timeout: 260 seconds)
[01:38:02] *** Joins: hightower2 (~hightower@213.147.110.20)
[01:41:18] <d_bot> <Bluddy> @static this channel is bridged with the OCaml IRC channel. There are many users who use IRC rather than discord (IRC existed long before discord ever did), and via the bot bridge, we get to have a common conversation.
[01:52:58] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[01:57:38] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Read error: Connection reset by peer)
[01:59:05] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[03:25:44] *** Joins: richbridger (~richbridg@089144202237.atnat0011.highway.a1.net)
[03:45:53] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:52:19] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi) (Quit: Leaving.)
[05:16:44] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[05:35:51] *** Joins: gzj (~GZJ0X@199.193.127.57.16clouds.com)
[05:40:25] *** Quits: gzj (~GZJ0X@199.193.127.57.16clouds.com) (Client Quit)
[05:40:45] *** Quits: Haudegen (~quassel@91.114.49.10) (Quit: Bin weg.)
[05:59:26] *** Quits: johnel (~johnel@185.157.234.34) (Ping timeout: 260 seconds)
[06:03:31] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Ping timeout: 256 seconds)
[06:04:36] *** Joins: johnel (~johnel@185.157.234.34)
[06:05:02] *** Quits: micro (~micro@user/micro) (Ping timeout: 260 seconds)
[06:05:31] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[06:05:48] *** Joins: micro (~micro@user/micro)
[06:08:18] *** Quits: energizer (~energizer@user/energizer) (Ping timeout: 260 seconds)
[06:12:57] *** Joins: energizer (~energizer@user/energizer)
[06:49:46] *** Quits: shawnw (~shawn_w@152.44.212.188) (Remote host closed the connection)
[07:10:11] *** Joins: mbuf (~Shakthi@136.185.75.83)
[07:48:12] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[08:02:53] *** Joins: gravicappa (~gravicapp@136.169.168.100)
[08:09:35] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:36:26] *** Quits: rgrinberg (~textual@ip73-183-64-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:48:26] *** Joins: mro (~mro@2002:5cc3:814e:0:74af:d455:d91c:4b91)
[11:02:07] *** Quits: mbuf (~Shakthi@136.185.75.83) (Quit: Leaving)
[11:05:41] *** Quits: mro (~mro@2002:5cc3:814e:0:74af:d455:d91c:4b91) (Remote host closed the connection)
[11:05:49] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[11:27:12] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[11:35:14] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:41:45] <Leonidas> theblatte: I'll talk to Nathan about Yojson. He wanted to do some testing to make sure we're not breaking the entire OCamloverse.
[11:43:11] <Leonidas> (Realistically, IRC will also exist long after Discord ceases to be)
[11:44:01] <Leonidas> Kinda like vim and Emacs have outlived decades of "modern editors" and are doing better than ever.
[11:49:30] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[11:49:59] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:55:27] *** Joins: olle (~olle@i5E866D99.versanet.de)
[12:04:42] <d_bot> <darrenldl> neoirc when
[12:09:02] *** Joins: mro (~mro@2002:5cc3:814e:0:74af:d455:d91c:4b91)
[12:11:10] <d_bot> <leonidas> @BigOof https://ircv3.net/
[12:12:16] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[12:12:42] *** Quits: olle (~olle@i5E866D99.versanet.de) (Ping timeout: 268 seconds)
[12:16:47] <d_bot> <darrenldl> oh
[12:22:56] <vsiles> vim++
[12:34:08] <d_bot> <darrenldl> irc++17
[12:37:38] *** Joins: jlrnick (~josephler@2a01cb040a1594007c89c79693ecade1.ipv6.abo.wanadoo.fr)
[12:40:18] *** Joins: ej (~ej@167.88.120.129)
[12:43:35] *** Quits: ej (~ej@167.88.120.129) (Client Quit)
[12:43:52] *** Joins: ej (~ej@167.88.120.129)
[12:44:11] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 264 seconds)
[12:46:39] *** Quits: mro (~mro@2002:5cc3:814e:0:74af:d455:d91c:4b91) (Remote host closed the connection)
[12:47:00] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[12:50:18] *** Quits: hightower2 (~hightower@213.147.110.20) (Ping timeout: 268 seconds)
[12:53:50] *** Quits: ski (~ski@remote12.chalmers.se) (Ping timeout: 260 seconds)
[12:54:03] *** Joins: ski (~ski@remote12.chalmers.se)
[13:11:14] *** Joins: mro (~mro@2002:5cc3:814e:0:74af:d455:d91c:4b91)
[13:13:15] *** Joins: average (uid473595@user/average)
[13:27:45] <d_bot> <antron> as a former long-time c++ programmer, i am greatly concerned
[13:29:50] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[13:30:00] *** Joins: bartholin (~bartholin@158.110.155.0)
[13:33:04] *** Joins: bobo (~bobo@37.173.102.0)
[13:33:28] *** Quits: spip (~bobo@37.173.211.96) (Ping timeout: 268 seconds)
[13:35:41] *** Joins: olle (~olle@p57849377.dip0.t-ipconnect.de)
[13:36:30] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[13:46:01] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[14:03:42] *** Quits: mro (~mro@2002:5cc3:814e:0:74af:d455:d91c:4b91) (Ping timeout: 268 seconds)
[14:10:31] *** Joins: mro (~mro@port-92-195-238-197.dynamic.as20676.net)
[14:52:13] <d_bot> <darrenldl> irc with oop and template
[14:52:29] <Armael> I can't wait
[14:53:12] <sim642> Is there some integration problem between dune-site and js_of_ocaml? I get a cryptic error instead of any clear incompatibility message: Error: Could not find the .cmi file for interface gobview/src/.App.eobjs/dune_site_data.ml-gen.
[14:53:15] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[14:53:57] <d_bot> <darrenldl> TIL dune-site
[14:59:57] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[15:11:46] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[15:13:52] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[15:14:10] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Client Quit)
[15:14:54] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[15:17:15] *** Quits: mro (~mro@port-92-195-238-197.dynamic.as20676.net) (Quit: Leaving...)
[15:58:30] <d_bot> <Splingush> If you mean the message-intent needed for the discord->irc direction, that only needs approval for bots in more than 75 guilds. For small bots you can turn on intents without approval. The bots created for bridges are usually only in very few servers, if they are self-hosted.
[16:00:59] <d_bot> <Splingush> That intent would be needed to be able to receive messages sent on discord through the api, i think starting sometime next year. Messages that ping the bot direclty work without intents.
[16:02:02] <d_bot> <Splingush> Guess they want folks to use the slash commands interface for bot-interaction, which covers a lot of usecases for bots.
[16:11:33] *** Joins: gareppa (~gareppa@user/gareppa)
[16:12:15] *** Quits: gareppa (~gareppa@user/gareppa) (Client Quit)
[18:30:52] *** Joins: spip (~bobo@37.173.102.0)
[18:31:19] *** Quits: bobo (~bobo@37.173.102.0) (Ping timeout: 268 seconds)
[18:37:34] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[18:41:03] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[18:45:08] *** Joins: rgrinberg (~textual@200.5.63.76)
[18:45:37] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[18:47:01] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[19:05:43] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:06:59] *** Joins: rgrinberg (~textual@200.5.63.76)
[19:16:54] <theblatte> Leonidas: many thanks!
[19:28:28] <dmbaturin> Is there a way to include a module signature from an external file in a .mli ?
[19:29:17] <companion_cube> include module type of Bar ?
[19:35:51] <dmbaturin> companion_cube: Yes.
[19:54:42] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[19:57:03] *** Quits: olle (~olle@p57849377.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[20:16:10] *** Quits: vb (~vb@lfbn-idf2-1-1364-212.w92-169.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[20:17:52] *** Joins: vb (~vb@lfbn-idf2-1-1364-212.w92-169.abo.wanadoo.fr)
[20:19:37] *** Joins: zebrag (~chris@user/zebrag)
[20:21:39] *** Quits: bartholin (~bartholin@158.110.155.0) (Quit: Leaving)
[20:32:34] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:46:50] *** Joins: rgrinberg (~textual@200.5.63.76)
[20:58:57] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:f33b:fde:6c61:c559)
[21:09:52] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[21:25:57] <Corbin> I'm using the sexp library, `open Sexplib.Sexp`, and reading in single S-expressions using `input_sexp` from stdin and `load_sexp` from files. Can I ignore trailing garbage after the first successful parse?
[21:27:00] <Corbin> My rationale is that I want to document each S-expression on a per-file basis, and the other S-expression parser I'm using happens to be able to ignore trailing garbage. So, if I could reliably load exactly one S-expression, then I could have a convention that the trailing garbage is e.g. Markdown.
[21:29:57] <companion_cube> some garbage will end up in the lexer's buffer I think
[21:30:00] <companion_cube> if it uses ocamllex
[21:55:01] <dmbaturin> I wish there were already lexers that would allow passing the state around explicitly.
[21:55:33] <companion_cube> I suppose it's possible with angstrom?
[21:55:46] <companion_cube> Corbin: you can use comments, btw.
[21:55:52] <companion_cube> ; foo
[21:56:02] <dmbaturin> companion_cube: HHm, I haven't looked into angstrom, maybe I should.
[21:56:16] <companion_cube> but otherwise: ocamllex needs an internal buffer
[21:56:25] <companion_cube> you can't just process inputs char by char :p
[21:56:25] <dmbaturin> The lexer hacks I made for OTOML are going to become a problem with multicore for sure,
[21:56:36] <companion_cube> why?
[21:56:57] <dmbaturin> companion_cube: The hacks? Because they rely on hidden mutable state to track the lexing context.
[21:56:58] <Corbin> companion_cube: At that point, I might as well use lit.sh since that has better ergonomics for tangling overall. I was hoping to not preprocess too much.
[21:57:09] <companion_cube> dmbaturin: so they're already a problem with `Thread`?
[21:57:30] <Corbin> I don't know. I should probably stop taking this goblin/raccoon scavenged approach to building a compiler toolchain.
[21:57:33] <dmbaturin> companion_cube: I'm pretty sure they are.
[21:57:49] <companion_cube> dmbaturin: I think you can pass parameters to lexers
[21:57:56] <companion_cube> but probably not through menhir, idk
[21:57:57] <Corbin> ...Or maybe I should just rewrite this tool in RPython, since it's the last chunk of OCaml remaining and all it does is parse S-expressions.
[21:58:40] <dmbaturin> companion_cube: Well, I'm using Menhir's incremental API anyway, so I can pass whatever I want to the lexer, if the lexer is willing to accept it. :)
[21:58:56] <companion_cube> ah! well yeah I think the lexer rules can take arguments
[21:59:03] <companion_cube> where you can stash your mutable state
[21:59:34] <dmbaturin> This is interesting. Do you know of any project that is doing that?
[21:59:42] <companion_cube> hum
[22:00:16] <companion_cube> I see that OCaml's lexer has global state :/
[22:01:22] <zozozo> Indeed, lexing rules can take ocaml parameters
[22:01:27] <zozozo> It's very useful
[22:01:42] <zozozo> I use it a bit in dolmen
[22:02:04] <dmbaturin> zozozo: Got a link to that place in the source?
[22:02:14] <companion_cube> https://paste.isomorphis.me/7iC like this works :D
[22:02:24] <companion_cube> at least ocamllex compiles it
[22:03:18] <dmbaturin> I need to experiment with it, thanks!
[22:04:04] <zozozo> dmbaturin: https://github.com/Gbury/dolmen/blob/ce9ad7808a7c9dbca981764e1e5e72b3c61b86a3/src/languages/smtlib2/v2.6/lexer.mll#L169
[22:05:16] <zozozo> You can also see that at the end of the file, the string rule takes two arguments, one of them being a buffer to store the string
[22:10:36] <dmbaturin> If I want to pass immutable state around, how can I make update it inside rules and make sure it's passed further?
[22:11:57] <dmbaturin> Alternatively, how can I make sure that a new invocation of the lexer will get a _fresh_ mutable state? Is `foo (ref [])` guaranteed to create a fresh reference every time?
[22:12:07] <zozozo> When a rule calls another rule, you need to pass it so it should be straightforward, but if you want to pass it been successive call to a lexer rule, you have to 1) return the state as part of the result of the rule (along with the token) and
[22:12:40] <zozozo> Instantiate the parsing loop manually to get the state, and pass it to the next invocation
[22:12:44] <dmbaturin> Oh, so I can return a tuple? That makes the job much simpler.
[22:17:03] <zozozo> Yeah, and make sure you use the returned state for the next iteration of the lexer
[22:21:23] *** Quits: jlrnick (~josephler@2a01cb040a1594007c89c79693ecade1.ipv6.abo.wanadoo.fr) (Ping timeout: 264 seconds)
[22:31:57] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:33:50] <d_bot> <Continuation Calculus> hi. I have a `type content = ... and t = { content : content ; some_meta_data : ... } [@@deriving show]`. I'd like to to give a custom pp for `t`, that'd use `pp_content` and that `pp` would use, but I don't know how to do that. Any idea?
[22:34:29] <d_bot> <Continuation Calculus> https://github.com/ocaml-ppx/ppx_deriving/issues/184
[22:44:02] *** Joins: olle (~olle@i5E866D99.versanet.de)
[22:53:35] *** Quits: nfc_ (nfc@tilde.institute) (Ping timeout: 260 seconds)
[22:55:19] *** Joins: nfc_ (nfc@tilde.institute)
[23:19:55] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 268 seconds)
[23:21:47] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[23:26:10] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 260 seconds)
[23:27:06] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[23:31:38] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[23:33:30] *** Joins: ralu3 (~ralu@static.211.245.203.116.clients.your-server.de)
[23:34:03] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (Read error: Connection reset by peer)
[23:34:03] *** ralu3 is now known as ralu
[23:36:57] *** Quits: gravicappa (~gravicapp@136.169.168.100) (Ping timeout: 256 seconds)
[23:37:48] <dmbaturin> companion_cube, zozozo: Well, it took some time to adjust all rules, but conceptually it was a pretty simple change in the end: https://github.com/dmbaturin/otoml/commit/5b4db76f396c983b0a8abf287515cfda8985bfcb Thanks for the suggestion!
[23:46:35] *** Joins: rgrinberg (~textual@ip73-183-64-186.ct.co.cr)
[23:54:46] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
