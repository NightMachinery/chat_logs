[00:11:49] *** Quits: kenoba (~kenoba@user/kenoba) (Ping timeout: 252 seconds)
[00:12:59] *** Joins: kenoba (~kenoba@user/kenoba)
[00:16:16] *** Parts: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com) (Leaving)
[00:19:58] *** Quits: kenoba (~kenoba@user/kenoba) (Ping timeout: 260 seconds)
[00:20:35] *** Quits: magla (~gelignite@55d450ed.access.ecotel.net) (Quit: Stay safe!)
[00:20:59] *** Quits: Gamara (~Gamara@66-203-186-178.ded.execulink.com) (Quit: Client closed)
[00:21:11] *** Joins: kenoba (~kenoba@user/kenoba)
[00:24:42] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[00:28:58] *** Joins: junktext (~junktext@109.201.152.161)
[00:44:55] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[00:46:18] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:46:34] *** Joins: bobdobbs (~user@14.137.23.74)
[00:48:25] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[00:51:50] *** Joins: chao (~stenno@user/stenno)
[00:52:11] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 245 seconds)
[00:52:49] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:54:59] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[01:00:53] *** Joins: iio7 (~iio7@185.65.134.232)
[01:03:05] <iio7> I am using the output buffer to store the content to a static file before it is outputted to the client. When I open the static file I can see that PHP has added the "^M" carriage return to every single line, which is CRLF. However, this is running on BSD which is set to LF. Is this normal PHP behavior or is there some setting somewhere to change it?
[01:09:24] *** Quits: iio7 (~iio7@185.65.134.232) (Quit: Leaving)
[01:18:25] <Sammitch> PHP is not doing that unless you wrote code to make it do that.
[01:30:12] *** Quits: ms49434 (~ms49434@user/ms49434) (Quit: Leaving)
[01:33:59] *** Quits: junktext (~junktext@109.201.152.161) (Ping timeout: 268 seconds)
[01:39:19] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[01:40:36] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[01:40:59] <Blondie101010> iio:  just do the same on a script that simply `echo "line1\nline2";` and see if if it also has "\r"
[01:45:10] <ash_worksi> file modes a/a+ say the pointer is placed at the end of the file, but ftell is 0 and fgets gets the first line. What am I missing about this?
[01:47:58] <ash_worksi> like this: https://3v4l.org/7HKeJ
[01:48:16] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[01:48:48] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76)
[01:49:04] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[01:49:38] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:50:50] <ash_worksi> the docs _do_ say "fseek() only affects the reading position" but given the former "pointer is placed at the end of the file" you'd think you'd need to rewind() first in order to read from the top of an append only file
[01:53:34] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76) (Ping timeout: 252 seconds)
[01:56:10] <ash_worksi> no input on that?
[01:57:39] *** Quits: genomc (uid245282@id-245282.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[01:58:10] <Blondie101010> I just saw your message
[01:58:27] <Blondie101010> it is not a *read* cursor, it is *the* cursor
[01:58:40] <Blondie101010> so you do need to rewind to read what came before
[01:58:44] <Blondie101010> or fskee
[01:58:47] <Blondie101010> fseek()
[02:00:10] *** Quits: ordos (~ordos@user/ordos) (Ping timeout: 252 seconds)
[02:05:14] <Blondie101010> you should have kept the first part of your sentence
[02:05:42] <ash_worksi> Blondie101010: hu-wha? I'm not sure I'm saying something different from what you're saying
[02:06:03] <Blondie101010> you wanted clarifications, so that's what I did
[02:06:18] <ash_worksi> 16:28 < Blondie101010> so you do need to rewind to read what came before
[02:06:22] <ash_worksi> ^ that's what I'm saying
[02:06:26] <Blondie101010> but append always automatically writes at the end
[02:06:29] <ash_worksi> but that's not correct
[02:07:49] <ash_worksi> Blondie101010: check my 3v4l, I don't rewind, and yet fgets() gives 'foo\n'
[02:08:09] <Sammitch> "ftell() gives undefined results for append-only streams (opened with "a" flag)." https://www.php.net/manual/en/function.ftell.php
[02:08:28] <ash_worksi> Sammitch: well, that explains ftell
[02:08:35] <Blondie101010> I had missed that part
[02:08:57] <ash_worksi> and fgets I guess is just contingent on ftell I suppose?
[02:09:56] <ash_worksi> like, despite the "pointer" being "placed at the end of the file", I assume fgets must coincide with ftell ?
[02:10:45] <ash_worksi> (there is no similar note on `fgets` ftr)
[02:12:10] <Blondie101010> ash_worksi:  there's something wrong with your test
[02:12:58] <Blondie101010> you do need to rewind to go to before output started
[02:13:17] <Sammitch> in this case you're likely going to want to read the C docs, as it's probably either a straight passthrough, or nigh-complete reimplementation of the C behaviour
[02:13:19] <Sammitch> https://www.cplusplus.com/reference/cstdio/fopen/
[02:14:07] <Blondie101010> it can be easily understood from PHP directly
[02:14:12] <Sammitch> I think the gist of all this is "it's complicated and you probably shouldn't use a+"
[02:14:14] <ash_worksi> mer; ok. I mean, if it's working as expected, then it's working as expected. Though, I think the description of 'a' on `fopen` is misleading in that case
[02:14:18] <ash_worksi> that's all
[02:14:35] <Blondie101010> ash_worksi:  no but do you see that your test is bad?
[02:14:55] <Blondie101010> the read cursor is also at the end of the file when you open it a+
[02:14:57] <ash_worksi> Blondie101010: no, I am still confused; I thought maybe you were going to elaborate, but yeah, please elaborate
[02:14:58] *** Quits: tex (~super@user/dix) (Ping timeout: 252 seconds)
[02:15:18] <Blondie101010> if you write, then read, you'll read what you just wrote
[02:15:26] <Blondie101010> not from the beginning
[02:15:48] <ash_worksi> oh?
[02:15:59] <Blondie101010> I tested it to clarify
[02:16:53] <ash_worksi> that _does_ sound like it fits what I would expect, but that still doesn't really tell me why i get 'foo' instead of 'baz' on my fgets, but maybe that's just an edge-case
[02:17:03] <ash_worksi> mer
[02:17:12] <ash_worksi> 'foo' instead of (false) I mean
[02:17:46] <Blondie101010> I just said it
[02:18:04] <Blondie101010> *the* cursor is put at the end of the file when you fopen a+
[02:18:25] <Blondie101010> the write operations do not touch it in that mode, but it doesn't start at the beginning of the file
[02:18:35] <Sammitch> and every single write operation moves the cursor back to the end of the file
[02:18:38] <ash_worksi> I mean, everything you're saying total and complete sense
[02:19:14] <Blondie101010> so you need to rewind and fseek at logically appropriate each time
[02:19:24] <Sammitch> you might consider that your needs could likely be more simply addressed by using more than one file handle
[02:19:25] <ash_worksi> Blondie101010: like, if a file contains "foo\nbar\n" and *the* cursor is position 8, then writing baz and then reading would give you baz, I get that
[02:19:49] <ash_worksi> Blondie101010: but if the cursor is at position 8, there shouldn't be any way to get 'foo' without rewinding or seeking
[02:20:31] <ash_worksi> Blondie101010: at least, the way that I would expect it. Perhaps it's implemented in such a way where if gets gives you false on first read, it starts from the top; idk
[02:22:37] <Blondie101010> you need to rewind or fseek to read "foo"
[02:22:51] <Blondie101010> what is unclear?
[02:22:57] <ash_worksi> Blondie101010: not in my 3v4l
[02:23:09] <ash_worksi> I never rewind or fseek and I get foo
[02:23:34] <Sammitch> that's not a file
[02:24:25] <Sammitch> not all of PHP's stream wrappers can be sanely rewound, and I don't know why it's even opening this one for any form of writing
[02:24:37] <Sammitch> to say nothing of being appendable
[02:24:38] <Blondie101010> and you are not writing to it
[02:24:55] <ash_worksi> Sammitch: I just tested it locally, I still get foo
[02:24:58] <Blondie101010> so as I said, your test is wrong
[02:25:07] <Blondie101010> not a matter of locally
[02:25:09] <Blondie101010> use a file
[02:25:23] <ash_worksi> Sammitch: if you try to write, it will throw an error
[02:25:26] <ash_worksi> Sammitch: ermm
[02:25:27] <ash_worksi> notice
[02:25:32] *** Quits: bobdobbs (~user@14.137.23.74) (Remote host closed the connection)
[02:25:33] <ash_worksi> that says "stream is not writable"
[02:25:46] <Blondie101010> use a FILE!
[02:26:02] <Blondie101010> that is obviously not writable
[02:26:04] <ash_worksi> Blondie101010: sorry, I am saying, I used a file locally and it still gives me foo
[02:26:16] <Blondie101010> yes, the first time
[02:26:21] <Blondie101010> because the cursor is at 0
[02:26:39] <ash_worksi> ok... that's not what you've been saying this whole time though
[02:26:43] <Blondie101010> yes
[02:26:46] <ash_worksi> 16:48 < Blondie101010> *the* cursor is put at the end of the file when you fopen a+
[02:26:49] <celphi> can someone explain to me why my openssl_decrypt is returning an empty string?
[02:26:51] <Blondie101010> yes
[02:26:58] <Blondie101010> the end of an empty file is at 0
[02:27:08] <ash_worksi> it's not empty...
[02:27:13] <celphi> ""
[02:27:15] <Blondie101010> show that code
[02:27:19] <celphi> sure sec
[02:27:28] <ash_worksi> Blondie101010: where?
[02:27:29] <ash_worksi> gist?
[02:27:34] <Blondie101010> don't care
[02:28:36] <ash_worksi> https://gist.github.com/ash-m/9c87d8fca545441fd3e2b0ee17d50de0
[02:30:26] <celphi> Blondie101010: https://3v4l.org/Xi5WF
[02:31:10] <celphi> sadly this site doesnt allow openssl
[02:32:06] <Sammitch> lol key in source, static IV also in source
[02:32:20] <ash_worksi> Blondie101010: I mean, like I said, if that's expected, it's expected. But it just conflicts with the docs and kind of with what you're saying
[02:32:44] <Blondie101010> ash_worksi:  stop talking about conclusions if something is not yet clear
[02:32:52] <celphi> Sammitch: can you elaborate?
[02:33:31] <celphi> are you referring to source code?
[02:33:46] <Blondie101010> ash_worksi:  in my own test that I just changed to make it presentable, I'm now encountering something I have to clarify which is different than your case
[02:34:12] <Sammitch> the encryption key should not actually occur in source code that should be somewhere secure and bundled in during deployment as a config, env var, etc
[02:34:32] <celphi> ya i dont have it like this - it's just a working example
[02:34:43] <Sammitch> IVs should be unique _per message_ otherwise you are increasingly vulnerable to cryptanalysis
[02:35:07] <celphi> sure i use random_bytes
[02:35:17] <celphi> but still can you explain why im getting an empty string
[02:36:17] <Sammitch> WFM
[02:36:28] <celphi> WFM?
[02:36:29] <Sammitch> SFRML0hMaDRyMFRZUXFGT2d1M2lEUT09
[02:36:39] <Sammitch> Works For Me
[02:36:48] <celphi> sigh.
[02:36:56] <Sammitch> turn error_reporting up?
[02:37:18] <celphi> i have error_log(...)
[02:39:49] <Blondie101010> ash_worksi:  I'll show you my current test case, which has the difference: https://hastebin.com/ehadupigef.php
[02:40:33] <Blondie101010> that actually demonstrates that you can't rely on the read cursor being set properly by default
[02:40:48] <Blondie101010> and that was the first thing I said about append mode
[02:41:12] <Blondie101010> you always need to rewind or ftell after a write
[02:41:35] <Blondie101010> otherwise the result is not clearly determined
[02:42:26] <Blondie101010> I played around and that is my conclusion, which goes along with the 'undefined' explanation that Sammitch gave
[02:42:43] <Blondie101010> the read cursor is not defined properly
[02:43:10] <Blondie101010> because of the special mode
[02:43:52] <Blondie101010> I rarely use append for raw file IO
[02:52:58] <celphi> Sammitch: is there a  limit to how long the string can be?
[02:53:11] <celphi> i keep getting empty string so somethign else is breaking it
[02:54:08] <Sammitch> crypto-wise, no. whatever-else-your-code-is-doing-wise... maybe?
[02:54:12] *** Joins: lazerlapin (~lazerlapi@2405:6580:b0c0:4200:ac08:8774:7e5b:2a4)
[02:54:47] <Sammitch> did you turn up error_reporting?
[02:57:30] <celphi> Sammitch: yup. still empty
[02:57:55] <celphi> is there not any online sites that have openssl enabled
[03:00:16] <celphi> it's encrypting the string- it just wont decrypt
[03:00:54] <celphi> im going to try and pass a hardcoded string
[03:02:51] <pcfreak30> stringToUint8ArrayUtf8
[03:03:10] <pcfreak30> (ignore) :P
[03:19:30] <celphi> btw Sammitch why would it matter if code was in source vs env file both are accessed by apache
[03:19:40] <celphi> *accessible
[03:28:03] <Blondie101010> the file can not be downloaded directly
[03:40:52] <ash_worksi> Blondie101010: okay, yeah, I didn't know how to represent my issue correctly, but 3v4l allows file_put_contents() to the /tmp dir. So anyway, I'm sorry, if you don't want to answer this I'll try asking Sammitch, but as far as you're concerned, the result "foo\n" is expected here? https://3v4l.org/mh9A7
[03:41:21] <Blondie101010> you don't read attentively
[03:42:00] <Blondie101010> this was the first test and I explained it to you extensively
[03:42:13] <ash_worksi> Blondie101010: sorry, I really am _trying_ to follow what you're saying; but I learn better though asking concrete questions... is the output in that 3v4l expected to you?
[03:42:13] <Blondie101010> oh hold on
[03:42:32] <Blondie101010> I'll repaste the conclusion
[03:43:00] <Blondie101010> you can't rely on the read cursor being set properly by default
[03:43:29] <Blondie101010> you always need to fseek or rewind to know where the cursor is in append mode
[03:43:38] <Blondie101010> after every write
[03:43:49] <Blondie101010> sometimes it may be where you think, but it is undefined
[03:44:00] <ash_worksi> you keep saying "after every write" which is confusing to me
[03:44:11] <Blondie101010> so if you append and want to read, you need to position the cursor
[03:44:45] <Blondie101010> if you write 10 times in a row, they'll each be appended, but when you want to go read somewhere, you don't know where the cursor is
[03:44:49] <Blondie101010> so you need to set it
[03:45:20] <Blondie101010> I'd suggest you don't use append mode
[03:45:40] <Blondie101010> just fseek($fp, 0, SEEK_END); and write
[03:46:26] <Blondie101010> tbh I've very rarely seen any case where it'd be useful to append and read
[03:46:54] <Blondie101010> it's not normal
[03:47:36] <ash_worksi> Blondie101010: I don't really have an issue with that... I am just saying based on the docs and based on "16:48 < Blondie101010> *the* cursor is put at the end of the file when you fopen a+" I expect `$fp = fopen('/tmp/file.dat', 'a+'); var_dump(fgets($fp));` to be 'false'
[03:47:42] <ash_worksi> but, let me ask Sam
[03:48:05] <ash_worksi> Sammitch: is the output here what you would expect? https://3v4l.org/mh9A7
[03:48:08] <Blondie101010> ash_worksi:  you should read what I just said
[03:48:24] <ash_worksi> Blondie101010: I promise you I keep reading what you say over and over
[03:48:33] <Blondie101010> the output is UNDEFINED, therefore causing unpredictable results
[03:48:55] <Blondie101010> there is no valid read cursor, so it's just improperly initialized
[03:49:09] <ash_worksi> Blondie101010: I am totally fine with that...
[03:49:55] <ash_worksi> Blondie101010: I just think that should be stated in the docs for fgets() or fopen()
[03:50:41] <Blondie101010> it is... that's the sentence you partially copied
[03:50:44] <ash_worksi> it is very misleading to say "the file pointer at the end of the file" for fopen when it is UNDEFINED
[03:50:58] <Blondie101010> in append mode, the read cursor is unreliable after a write!
[03:51:09] <ash_worksi> but it's unreliable after fopen!
[03:51:11] <Blondie101010> that's the way the underlying library works
[03:51:33] <ash_worksi> not just a write
[03:51:34] <ash_worksi> it'
[03:51:42] <Blondie101010> lets not spend an hour arguing how much unreliable unreliable is
[03:51:50] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 260 seconds)
[03:51:52] <Blondie101010> it simply is
[03:51:55] <ash_worksi> no no, I am saying the docs should NOT say "the file pointer at the end of the file"
[03:52:01] <ash_worksi> it should say "the file pointer is UNDEFINED"
[03:52:10] <Blondie101010> just don't use the damn mode if it's too complicated for you
[03:52:19] <Blondie101010> as I said, I can't imagine why you'd do that
[03:52:34] <Blondie101010> so focus on a real problem
[03:52:40] <Blondie101010> and it won't involve this
[03:53:04] <ash_worksi> ....
[03:53:38] <ash_worksi> does anyone else have input on this?
[03:54:02] <ash_worksi> my only issue is "place the file pointer at the end of the file." noted in the 'a+' fopen docs
[03:55:32] <Blondie101010> then submit a PR for the page
[03:55:55] <Blondie101010> I actually agree that the undefined behaviour should be in a yellow box
[03:56:48] *** Joins: bobdobbs (~user@14.137.23.74)
[03:56:49] <ash_worksi> or in the 'a+' box... I mean, I really don't get what the point of even saying "place the file pointer at the end of the file." is when you *ABSOLUTELY MUST* use fseek regardless
[03:59:07] <Blondie101010> when you need to position the cursor for a read operation after a write
[03:59:17] <ash_worksi> I guess you don't have to use fseek if you're only writing (in which case, why use +, but w/e), still, that's not an issue, because the fact is it will always write to the end no matter what
[03:59:22] <Blondie101010> because any write will recause the same thing
[03:59:39] <Blondie101010> what is your use case?
[03:59:46] <Blondie101010> there is likely NONE
[04:00:09] <ash_worksi> I mean, I guess that's interesting, but not a property of a+; for me, I just wanted to read a file in reverse and know what the last char was without having to fseek 3 times
[04:00:16] <Blondie101010> why would you append and then read what came first?
[04:00:31] <ash_worksi> ^ I don't understand that question
[04:00:52] <Blondie101010> because it's asking for a real use case of your problematic code
[04:00:55] <Blondie101010> it is not useful
[04:03:30] *** Quits: LuKaRo (~LuKaRo@p4fc3226e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[04:04:58] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76)
[04:05:19] *** Joins: LuKaRo (~LuKaRo@p57b15e22.dip0.t-ipconnect.de)
[04:05:34] <ash_worksi> Blondie101010: anyway, based on everything you told me, would it be inaccurate to say: "Open for reading and writing; place the file pointer at the end of the file after the first write, otherwise it is undefined."
[04:07:46] <ash_worksi> oh, no that's not right
[04:08:34] <ash_worksi> actually, I guess it is, even though that's not what I technically meant
[04:09:31] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76) (Ping timeout: 265 seconds)
[04:12:01] <Blondie101010> that's not right
[04:12:27] <ash_worksi> Blondie101010: what is wrong about it?
[04:12:28] <Blondie101010> in append mode, if you ever need to know the cursor position after a write, you need to set the position yourself
[04:12:46] <ash_worksi> that's more of a [Note] though
[04:13:16] <ash_worksi> I am talking about the actual box that says | a+ |
[04:13:43] <Blondie101010> I'm not telling you how to edit it, just stating the facts correctly
[04:19:56] *** Joins: ferdna (~ferdna@user/ferdna)
[04:24:59] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 265 seconds)
[04:25:13] *** Joins: chao (~stenno@user/stenno)
[04:25:32] *** Quits: stan_man_can (~stanley@d66-183-88-69.bchsia.telus.net) (Quit: ZNC - https://znc.in)
[04:26:03] *** Joins: stan_man_can (~stanley@d66-183-88-69.bchsia.telus.net)
[04:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:34:48] *** Joins: vlm (~vlm@user/vlm)
[05:04:55] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[05:06:13] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[05:07:00] *** Quits: lazerlapin (~lazerlapi@2405:6580:b0c0:4200:ac08:8774:7e5b:2a4) (Quit: Textual IRC Client: www.textualapp.com)
[05:11:15] <Hash> I explained to him in #web
[05:11:18] <Hash> He seems to almost get it.
[05:11:45] <Hash> Open for reading and writing; place the file pointer at the end of the file. <- I told him logically it doesn't make sense to seek to the end and then try to read. You wouldn't get anything.
[05:12:03] <Hash> And you're not supposed to get FALSE but the first line since you didn't provide a length argument.
[05:12:29] <Hash> When you open for a+, if you read, you start from the beginning, if you write, you always go to the end and append.
[05:12:46] <Hash> Or you can go to another place to seek, whatever.
[05:13:08] <Hash> So, Open for reading and writing; place the file pointer at the end of the file. < is for every write operation, seek to end, then write.
[05:14:06] * Blondie101010 nods
[05:14:07] <Hash> So you open the file a+, then you read it using fgets, didn't specify length, it seeks to beginning of file, you get the first line.
[05:15:02] <Blondie101010> Hash:  can you quickly imagine a use case to append and read after?
[05:15:13] <Blondie101010> I can't
[05:15:18] <Hash> No
[05:15:29] <Hash> I showed him the soruce here
[05:15:33] <Hash> https://github.com/php/php-src/blob/master/ext/standard/file.c#L869
[05:15:40] <Hash> https://github.com/php/php-src/blob/master/ext/standard/file.c#L1235
[05:15:54] <Hash> Difference in fopen/fseek and how fopen has no idea about an offset
[05:16:04] <Blondie101010> exactly
[05:16:05] <Hash> That's from modes param
[05:16:27] <Hash> Have to be patient with young people.
[05:16:56] <Blondie101010> he's not doing much effort other than arguing
[05:17:03] <Hash> He wasn't looking to argue.
[05:17:10] <Blondie101010> I get that
[05:17:12] <Hash> Or even arguing.
[05:17:12] <Blondie101010> but he did
[05:17:33] <Hash> I have often found you to be rather antagonistic and you tend to rub people the wrong way and then things happen.
[05:17:41] <Hash> I'd just not worry about it.
[05:17:56] <Hash> I've to go study. Have a good evening.
[05:18:02] <Blondie101010> you too
[05:44:18] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[06:13:04] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[06:16:42] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76)
[06:21:07] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Read error: Connection reset by peer)
[06:22:35] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76) (Ping timeout: 268 seconds)
[07:00:58] <celphi> Blondie101010: was that reply towards my question?
[07:02:12] <Blondie101010> no
[07:02:43] <celphi> why does it matter to save passwords in env file vs in source file
[07:03:01] <celphi> i would think it wouldnt matter-
[07:08:03] *** Quits: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[07:25:01] <Blondie101010> a ".env" file is considered hidden, so that adds a tiny layer of protection against getting it downloaded directly
[07:32:11] *** Joins: Blondie101010_ (~Blondie10@user/blondie101010)
[07:33:58] *** Quits: Blondie101010 (~Blondie10@user/blondie101010) (Ping timeout: 252 seconds)
[07:34:06] *** Blondie101010_ is now known as Blondie101010
[07:38:40] *** Joins: guido (~guido@host-79-53-243-104.retail.telecomitalia.it)
[07:44:32] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:03:27] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 265 seconds)
[08:22:17] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[08:25:02] *** Hash is now known as LordOfThePings
[08:28:40] *** LordOfThePings is now known as EnchanterTim
[08:30:57] *** Joins: chao (~stenno@user/stenno)
[08:36:04] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[08:39:34] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76)
[08:44:25] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76) (Ping timeout: 252 seconds)
[09:00:59] *** Joins: biberu (~biberu@user/biberu)
[09:03:52] *** Joins: Hiccup (cHoy@user/hiccup)
[09:13:17] *** Quits: NeoCron (~NeoCron@p200300c4cf195d00df9b3d9f9a455325.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[09:38:33] *** Quits: guido (~guido@host-79-53-243-104.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[09:43:15] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[09:59:53] *** Joins: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f)
[10:02:25] *** Joins: genomc (uid245282@id-245282.hampstead.irccloud.com)
[10:04:53] *** Joins: tex (~super@user/dix)
[10:23:09] *** Joins: Miles8of9 (~obrien@93-34-145-79.ip50.fastwebnet.it)
[10:35:36] *** Joins: kerunaru (~Jmcb@86.red-212-170-173.staticip.rima-tde.net)
[10:36:39] *** Joins: fahrradToken (~fahrradTo@212.7.190.34)
[10:37:19] *** Joins: keypusher (keypusher@user/keypusher)
[10:41:43] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76)
[10:45:55] *** Quits: kerunaru (~Jmcb@86.red-212-170-173.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[10:47:08] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:19f6:a1ef:2b89:ac76) (Ping timeout: 268 seconds)
[10:53:38] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[11:53:52] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[11:54:21] *** Joins: Yorick_ (znc@vps.freegamehosting.eu)
[11:54:41] *** Quits: Miles8of9 (~obrien@93-34-145-79.ip50.fastwebnet.it) (Quit: Leaving)
[11:55:08] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:55:58] *** Server sets mode: +Ccnrtzf ##please-register
[11:56:48] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[11:57:00] *** Quits: MrTrick (uid181961@id-181961.uxbridge.irccloud.com) (*.net *.split)
[11:57:00] *** Quits: winlundn (nick@2600:3c01::f03c:92ff:fef3:7260) (*.net *.split)
[11:57:00] *** Quits: Termux (puracan@user/termux) (*.net *.split)
[11:57:00] *** Quits: barlas (~aqeel@user/barlas) (*.net *.split)
[11:57:00] *** Quits: sebbu (~sebbu@user/sebbu) (*.net *.split)
[12:02:12] *** Joins: semeion (~semeion@user/semeion)
[12:03:42] *** Joins: MrTrick (uid181961@id-181961.uxbridge.irccloud.com)
[12:03:42] *** Joins: winlundn (nick@2600:3c01::f03c:92ff:fef3:7260)
[12:03:42] *** Joins: barlas (~aqeel@user/barlas)
[12:03:42] *** Joins: sebbu (~sebbu@user/sebbu)
[12:07:28] *** Quits: ramsey[m] (~ramsey@phpc/ramsey) (Ping timeout: 252 seconds)
[12:10:08] *** Joins: ramsey[m] (~ramsey@phpc/ramsey)
[12:11:00] *** Joins: Byteflux (~byte@byteflux.net)
[12:20:37] *** Joins: ePirat (~ePirat@user/epirat)
[12:20:50] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[12:20:57] *** Joins: DerekTheRed (~portra400@peso.subtitled.com)
[12:21:04] *** Joins: kevr (~kevr@user/kevr)
[12:21:16] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[12:21:25] *** Joins: petris (sid19918@user/petris)
[12:21:54] *** Joins: znf (~ibm86@toaster.linge-ma.ro)
[12:24:51] *** Janusz_ is now known as Janusz
[12:28:37] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[12:28:42] *** Joins: d[-_-]b (~stenno@user/stenno)
[12:31:19] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 250 seconds)
[12:31:44] *** Joins: l-x (~l-x@2001:470:6d:8d1:ae22:bff:fe4d:3de)
[12:32:14] *** Joins: stenno (~stenno@user/stenno)
[12:33:53] *** Quits: d[-_-]b (~stenno@user/stenno) (Ping timeout: 246 seconds)
[12:37:36] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 245 seconds)
[12:39:42] *** Joins: freeman_h (~freeman_h@94.5.86.162)
[12:40:57] <freeman_h> Hi all, my question is pointing only to line 4 has phpstorm is saying "slow array function used in loop" https://kopy.io/s9Jib how can this be made fastest?
[12:45:45] <biberu> freeman_h: placeholders() can use just array_fill and implode, you don't need all that code, and foo() could just map that over $columnData (ignoring that foo() isn't returning anything)
[12:50:23] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[12:50:47] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[12:51:34] <biberu> freeman_h: example: https://3v4l.org/WRd84
[12:52:28] *** Quits: kerunaru (~Jmcb@86.red-212-170-173.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[12:53:35] *** Joins: chao (~stenno@user/stenno)
[12:55:00] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[12:59:06] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 265 seconds)
[12:59:09] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[13:00:52] *** Joins: chao (~stenno@user/stenno)
[13:05:10] <freeman_h> biberu, thanks
[13:06:43] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 268 seconds)
[13:08:04] *** Joins: chao (~stenno@user/stenno)
[13:13:46] *** Joins: s17 (~nobody@user/s17)
[13:14:38] *** Quits: plantroon (~plantroon@91.236.69.232) (Quit: WeeChat 3.3)
[13:15:10] *** Joins: plantroon (~plantroon@91.236.69.232)
[13:15:34] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[13:16:39] <plantroon> is there some way to define error_log per-pool? I do not want any messages in the main error_log for my php-fpm, only in per-pool logs - is this achievable through fpm configuration alone?
[13:17:07] *** Joins: dbal (~dbal@2603:300c:b04:b100:8846:1de1:bb3f:96ef)
[13:17:10] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 252 seconds)
[13:18:25] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 252 seconds)
[13:18:27] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[13:19:23] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 246 seconds)
[13:21:18] *** Joins: chao (~stenno@user/stenno)
[13:22:39] *** Joins: memoryleak (~memorylea@77-58-142-250.dclient.hispeed.ch)
[13:24:11] *** Quits: msgaux (~msgaux@104.128.237.130) (Ping timeout: 250 seconds)
[13:24:14] <plantroon> or exactly what kind of errors go into error_log, when php_admin_value[error_log] is set in every pool ? I don't understand why some errors end up there and others there
[13:26:27] <AllenJB> plantroon: When using FPM there are 2 "error logs" - the FPM error log (which will contain messages about FPM such as "pool appears busy"), and the PHP error log (which contains error / messages from the PHP code being executed.
[13:28:24] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[13:28:30] <plantroon> for some reason my error_log contains both despite every pool having its own php_admin_value[error_log]
[13:29:03] <plantroon> and this FPM error log cannot be defined per pool, right? :(
[13:29:15] <plantroon> the one that says pool is busy, etc
[13:29:17] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Quit: Bridge terminating on SIGTERM)
[13:29:17] *** Quits: wutzelputz (~wutzelput@2001:470:69fc:105::3117) (Quit: Bridge terminating on SIGTERM)
[13:29:18] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Quit: Bridge terminating on SIGTERM)
[13:29:23] *** Quits: Creak[m] (~creak@2001:470:69fc:105::8af) (Quit: Bridge terminating on SIGTERM)
[13:29:23] *** Quits: ramsey[m] (~ramsey@phpc/ramsey) (Quit: Bridge terminating on SIGTERM)
[13:29:29] *** Quits: CapitalistPunk (~Capitalis@liledevil.xs4all.nl) (Remote host closed the connection)
[13:29:42] *** Joins: CapitalistPunk (~Capitalis@liledevil.xs4all.nl)
[13:31:18] *** Joins: Tempesta (~Tempesta@user/tempesta)
[13:32:36] <AllenJB> I don't know if PHP-FPM's error_log can be set per-pool - it's not something I've tried and the manual / pool config comments don't specify as far as I can see
[13:33:31] *** Joins: ramsey[m] (~ramsey@phpc/ramsey)
[13:36:23] <plantroon> I just figured out that I have catch_workers_output enabled which causes logs to go to that main error_log file ... however, I do not really want this but I would still like to see the error logs of the scripts which finish executing after fcgi client disconnects
[13:36:49] *** Joins: Creak[m] (~creak@2001:470:69fc:105::8af)
[13:36:57] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[13:36:58] *** Joins: wutzelputz (~wutzelput@2001:470:69fc:105::3117)
[13:37:14] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[13:39:23] <AllenJB> plantroon: I wouldn't have thought the FCGI client disconnecting would affect PHP error logs. The only related thing I know of is the ignore_user_abort php.ini setting / function
[13:40:17] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:41:12] *** Joins: Diego (~textual@user/diego)
[13:45:41] *** Quits: freeman_h (~freeman_h@94.5.86.162) (Read error: Connection reset by peer)
[13:47:44] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[13:48:26] *** Quits: EnchanterTim (~weechat@thestonedapes.com) (Ping timeout: 245 seconds)
[13:53:26] *** Joins: fkrauthan_ (~fkrauthan@user/fkrauthan)
[13:54:01] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Ping timeout: 252 seconds)
[13:54:03] *** fkrauthan_ is now known as fkrauthan
[14:09:13] *** Quits: SleePy (~SleePy@simplemachines/siteteam/SleePy) (Quit: I quit, that is all)
[14:09:36] *** Joins: SleePy (SleePy@simplemachines/siteteam/SleePy)
[14:10:05] *** Joins: amcsi (~amcsi@4F7A7C97.catv.pool.telekom.hu)
[14:10:07] <amcsi> hey
[14:10:36] <amcsi> how to I reduce the timeout for connecting to a host, specifically connecting to a host with PDO?
[14:10:48] *** Joins: WarpedAI (~Warped@user/warped)
[14:11:06] <amcsi> more specifically, in case someone typed in a non-existent domain, I would like for it to stop trying to connect after 5 seconds
[14:13:32] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 265 seconds)
[14:15:54] *** Joins: freeman_h (~freeman_h@94.5.86.162)
[14:15:57] *** Joins: EnchanterTim (~weechat@thestonedapes.com)
[14:19:04] <AllenJB> amcsi: Pass a PDO::ATTR_TIMEOUT value using the $options parameter on the PDO constructor (see https://www.php.net/manual/en/pdo.setattribute.php )
[14:22:40] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 252 seconds)
[14:24:45] *** Quits: dbal (~dbal@2603:300c:b04:b100:8846:1de1:bb3f:96ef) (Read error: No route to host)
[14:25:12] <amcsi> thanks
[14:28:02] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[14:28:19] <freeman_h> biberu, Hi, sorry if this silly question but I am trying to use the example you provide with a single array like https://3v4l.org/Yj1EY it fails my question is what is $m doing
[14:30:27] <biberu> freeman_h: $m is a function that takes an array and formats it as a string of placeholders surrounded by parentheses
[14:30:53] <Naktibalda> '(' . implode(',', array_fill(0, $count, '?')) . ')'
[14:31:13] <biberu> ^ what $m is doing
[14:31:35] <biberu> freeman_h: what version of php are you on?
[14:32:01] <freeman_h> 8
[14:32:25] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:32:57] <biberu> did you get an error?
[14:33:37] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[14:33:59] <freeman_h> ncaught TypeError: count(): Argument #1 ($value) must be of type Countable|array, string
[14:34:07] <Naktibalda> that code expects to get an array of arrays, you passed one-dimensionnal array
[14:34:49] <Naktibalda> you don't need array_map if you have a single array: https://3v4l.org/43ILP
[14:35:09] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:35:19] <biberu> https://kopy.io/s9Jib <- you were not intending to pass an array of arrays to this?
[14:36:22] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[14:37:14] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:38:38] <freeman_h> Naktibalda, thank you was just using xdebug to get an overview
[14:38:50] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[14:39:02] <freeman_h> ideally this is for a bulk insert but i know someone will want to use to a single insert lol
[14:39:25] <freeman_h> just need to add a condition to change use a different method if its a single insert
[14:39:49] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:39:55] *** Joins: Termux (puracan@user/termux)
[14:39:58] <biberu> or just make two functions, easier to use correctly, test, refactor etc
[14:41:05] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[14:41:34] *** Quits: Lazenca (Lazenca@user/lazenca) (Remote host closed the connection)
[14:42:29] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:42:40] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:42:41] *** EnchanterTim is now known as Hash
[14:43:01] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[14:44:06] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[14:45:04] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:46:27] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[14:47:46] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:49:08] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[14:50:12] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:51:23] *** Quits: guido (~guido@2001:b07:6455:ac4f:3641:5dff:fe55:2a8f) (Quit: WeeChat 3.3)
[14:51:50] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[14:52:59] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:54:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Max SendQ exceeded)
[14:54:41] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[14:55:22] *** Quits: Hiccup (cHoy@user/hiccup) (Remote host closed the connection)
[14:56:40] *** Joins: chao (~stenno@user/stenno)
[14:56:54] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:59:42] <freeman_h> which php array method can I use to build the set values in https://3v4l.org/tLVLl
[15:00:17] <freeman_h> I could maybe do something like this return implode(' = ?, ',array_keys($n))."= ?";
[15:03:19] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 265 seconds)
[15:04:54] *** Joins: chao (~stenno@user/stenno)
[15:06:54] *** chao is now known as stenn
[15:06:57] *** stenn is now known as stenno
[15:26:05] <__adrian> freeman_h: DO NOT put $variables into your SQL. use prepared statements and ALWAYS pass data via parameters!
[15:26:11] <__adrian> !+pdo_mysql prepare
[15:26:14] *** Joins: AMG (ghebo@user/amg)
[15:26:40] <__adrian> How to prepare a statement using PDO: https://gist.github.com/adrian-enspired/1ddd71511e01c1f609db
[15:26:49] <__adrian> php-bot doesn't seem to be awake  :/
[15:28:03] <__adrian> hm - maybe you're trying to make parameter markers?
[15:28:29] <__adrian> for the column names, you'll need a whitelist.
[15:30:19] *** Quits: amcsi (~amcsi@4F7A7C97.catv.pool.telekom.hu) (Ping timeout: 252 seconds)
[15:30:23] <__adrian> e.g.,  foreach ($columns as $column) { if (! is_whitelisted($column)) { throw new Exception("invalid column name: {$column}"); } $sql .= "{$column} = ?"; }
[15:31:52] <biberu> maybe an orm?
[15:32:03] <__adrian> always an option
[15:34:07] *** Joins: guido (~guido@host-79-53-243-104.retail.telecomitalia.it)
[15:39:38] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:45:27] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:48:38] *** Joins: kerunaru (~Jmcb@86.red-212-170-173.staticip.rima-tde.net)
[15:48:44] *** Quits: elycin_ (~elycin@ec2-54-163-129-255.compute-1.amazonaws.com) (Quit: ZNC 1.8.2 - https://znc.in)
[15:50:03] <freeman_h> __adrian, I am using prepare
[15:50:16] <freeman_h> but first need to put all the questions marks
[15:50:35] <freeman_h> and then in execute give the array for those question marks
[15:51:59] *** Joins: elycin (~elycin@ec2-54-163-129-255.compute-1.amazonaws.com)
[15:55:38] *** Joins: pmercado (~pmercado@186.107.62.213)
[15:55:46] *** Joins: amcsi (~amcsi@4F7A7C97.unconfigured.pool.telekom.hu)
[15:57:09] <freeman_h> https://3v4l.org/ORDmU line 18 Invalid parameter number: parameter was not defined
[15:57:19] <freeman_h> I count 4 question marks so what is the issue?
[16:02:58] <l-x> freeman_h: I count 6 question marks
[16:03:28] <AllenJB> Not sure where the SQL in the error message / comment came from, but it's not the same that your code generates: https://3v4l.org/NSDqr
[16:03:49] *** Quits: kerunaru (~Jmcb@86.red-212-170-173.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[16:04:24] <AllenJB> You may want to consider using an existing query builder library such as Aura.SqlQuery rather than writing your own
[16:04:53] <l-x> Seeing sql queries composed like this always make me feel bad...
[16:04:54] <freeman_h> l-x, and AllenJB the pastebin should have been the other way around https://3v4l.org/mlSUd
[16:06:27] <freeman_h> am using doctrine just that what I am doing the columns could be anything
[16:06:47] <freeman_h> so the idea is that has long as your pass in the columns and ids then this will build the update and execute it
[16:08:04] <freeman_h> doctine comes with pdo so using pdo for the raw query
[16:08:56] <l-x> Where do the column names come from? User input?
[16:09:46] <freeman_h> l-x, we have a process which takes stocks data from the supplier
[16:09:52] <l-x> omg
[16:09:58] <freeman_h> does some mapping and then do a api call
[16:10:06] <freeman_h> to another api which does the update
[16:10:23] <freeman_h> l-x, omg for?
[16:10:51] <l-x> for colum names come from an api
[16:10:56] <l-x> api = user input
[16:11:00] <freeman_h> you never get data from third party map it to what it is with your set up and then update the relavent things?
[16:11:26] <freeman_h> l-x,  "for colum names come from an api" this is just you filling in the blank
[16:11:35] <freeman_h> you forget that i said "does some mapping "
[16:11:48] <l-x> then i did not understand right, my fault. sorry.
[16:16:28] <l-x> freeman_h:  Ah ok. I think I found the error
[16:17:39] <l-x> For `$stmt->execute` us use a key => value array, but your statement needs a list of value (with numeric keys)
[16:18:04] <l-x> I guess `$stmt->execute(array_values($setValues));` should do the trick
[16:19:44] *** Quits: fahrradToken (~fahrradTo@212.7.190.34) (Remote host closed the connection)
[16:20:30] <freeman_h> l-x, sadly still the same error :(
[16:20:38] <l-x> -.-
[16:21:38] <freeman_h> so I copy and paste the quest to my db and it seems to do with the the columns having quotes on it
[16:22:01] <freeman_h> notice that price and level have single quotes
[16:24:08] <freeman_h> l-x
[16:26:42] *** Joins: belak51 (~belak@user/belak)
[16:27:29] *** Quits: belak (~belak@user/belak) (Ping timeout: 250 seconds)
[16:27:58] *** Quits: robertparkerx (~robertpar@user/robertparkerx) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[16:28:14] <l-x> The single quotes for the column names are from the exception output formatting i guess.
[16:28:54] <l-x> We didn't see the prepare part until now
[16:29:05] <l-x> How is `$stmt` created
[16:29:07] <l-x> ?
[16:38:51] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 245 seconds)
[16:40:55] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[16:46:46] *** Quits: konrados (~konrados@user-5-173-136-173.play-internet.pl) (Ping timeout: 245 seconds)
[16:47:38] *** Joins: konrados (~konrados@user-5-173-136-173.play-internet.pl)
[16:47:43] *** Quits: mooz (~none@23.254.112.158) (Ping timeout: 265 seconds)
[16:49:23] *** Joins: mooz (~none@23.254.112.158)
[16:49:37] <__adrian> freeman_h: sorry, i'm at work
[16:49:51] <__adrian> you're quoting the column names with 'single quotes'
[16:50:00] <__adrian> that makes them literal strings, not column names.
[16:51:04] <__adrian> i'd still recommend foreach, and VERY STRONGLY recommend whitelisting the column names.
[16:53:21] <freeman_h> __adrian, what do you mean whitelist colum names?
[16:53:30] <__adrian> !+whitelist
[16:53:42] <__adrian> -___-  /msg php-bot whitelist
[16:53:48] <freeman_h> bot is on annual leave __adrian
[16:53:53] <__adrian> a "whitelist" is a list of acceptable values which you can compare an unknown value to, in order to be sure it is valid.
[16:53:56] <__adrian>                 https://gist.github.com/adrian-enspired/2c52877992b96525820b
[16:54:40] <freeman_h> __adrian, :)
[16:57:44] <__adrian> e.g., https://3v4l.org/vOffk
[16:58:26] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:01:40] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[17:01:48] *** Joins: swa (~about@106.211.131.174)
[17:04:14] *** Quits: swa (~about@106.211.131.174) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[17:07:02] *** Joins: WishBoy (~WishBoy@user/wishboy)
[17:11:13] <freeman_h> __adrian, thank you. the issue with the single quote i just discovered is because of postman
[17:15:53] *** Quits: kevr (~kevr@user/kevr) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[17:16:12] *** Joins: kevr (~kevr@user/kevr)
[17:23:32] *** Joins: kerunaru (~Jmcb@86.red-212-170-173.staticip.rima-tde.net)
[17:32:25] *** Quits: kerunaru (~Jmcb@86.red-212-170-173.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[17:33:37] *** Joins: kerunaru (~Jmcb@86.red-212-170-173.staticip.rima-tde.net)
[17:42:21] *** Quits: plantroon (~plantroon@91.236.69.232) (Quit: WeeChat 3.3)
[18:01:28] <__adrian> ..."because of postman" ?
[18:08:51] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 245 seconds)
[18:29:45] *** Joins: chao (~stenno@user/stenno)
[18:32:43] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 268 seconds)
[18:33:01] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Ping timeout: 245 seconds)
[18:42:46] *** Quits: kerunaru (~Jmcb@86.red-212-170-173.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[18:43:52] *** Quits: d3sync- (~d3sync@62.1.63.20.dsl.dyn.forthnet.gr) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[18:46:49] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[18:52:24] *** Quits: memoryleak (~memorylea@77-58-142-250.dclient.hispeed.ch) ()
[18:53:16] *** Quits: kenoba (~kenoba@user/kenoba) (Ping timeout: 252 seconds)
[18:57:42] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[19:00:11] *** Joins: kenoba (~kenoba@user/kenoba)
[19:17:07] *** clarjon_1 is now known as clarjon1
[19:18:28] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Quit: clarjon1)
[19:19:37] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: Ping timeout (120 seconds))
[19:20:01] *** Joins: kenoba (~kenoba@user/kenoba)
[19:20:35] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 246 seconds)
[19:22:00] *** Quits: samy1028b (~samy1028@068-184-115-031.res.spectrum.com) (Ping timeout: 250 seconds)
[19:28:38] *** Quits: Diego (~textual@user/diego) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:30:40] *** Quits: WishBoy (~WishBoy@user/wishboy) (Ping timeout: 252 seconds)
[19:34:08] *** Joins: semeion (~semeion@user/semeion)
[19:40:40] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[19:41:32] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:41:33] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Quit: tccki)
[19:42:05] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[19:44:34] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[19:53:49] *** Joins: genom (~g@37.214.34.163)
[20:00:06] *** Joins: jargon (~jargon@184.101.90.124)
[20:00:39] <jargon> Blondie101010 Do you want to see what my finished project looks like?
[20:01:30] <Blondie101010> not so much :)
[20:01:42] <jargon> :<
[20:05:48] *** belak51 is now known as belak
[20:06:40] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 268 seconds)
[20:06:55] *** Quits: stan_man_can (~stanley@d66-183-88-69.bchsia.telus.net) (Quit: ZNC - https://znc.in)
[20:08:07] *** Quits: Phil-Work (~phil@62.3.100.20) (Remote host closed the connection)
[20:14:25] *** Joins: Stanley (~stanley@d66-183-88-69.bchsia.telus.net)
[20:17:44] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Quit: Connection closed)
[20:21:00] *** Joins: Rockwood (~Rocky@user/rocky)
[20:26:33] *** Joins: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de)
[20:27:19] *** Quits: amcsi (~amcsi@4F7A7C97.unconfigured.pool.telekom.hu) (Ping timeout: 252 seconds)
[20:29:03] *** Quits: deksar (~deksar@user/deksar) (Remote host closed the connection)
[20:42:30] *** Quits: konrados (~konrados@user-5-173-136-173.play-internet.pl) (Remote host closed the connection)
[20:43:16] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[20:57:52] *** Joins: semeion (~semeion@user/semeion)
[21:04:21] *** Parts: jargon (~jargon@184.101.90.124) ()
[21:18:15] *** chao is now known as stenno
[21:25:55] *** Joins: Naktibalda (~Naktibald@88.135.22.17)
[21:37:11] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 245 seconds)
[21:37:18] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:40:56] *** Joins: Rockwood (~Rocky@user/rocky)
[21:41:42] *** Quits: freeman_h (~freeman_h@94.5.86.162) (Read error: Connection reset by peer)
[21:50:18] *** Joins: magla (~gelignite@55d4478c.access.ecotel.net)
[21:50:49] *** Joins: DuckThom (~luna@2001:41f0:3fe:3:c081:5d77:23ca:76bf)
[21:53:26] *** Quits: aloy (~luna@2001:41f0:3fe:3:bc16:6363:5164:afb7) (Ping timeout: 245 seconds)
[21:54:38] *** Quits: guido (~guido@host-79-53-243-104.retail.telecomitalia.it) (Ping timeout: 265 seconds)
[21:57:44] *** Joins: guido (~guido@host-87-21-254-70.retail.telecomitalia.it)
[21:59:41] *** Joins: aloy (~luna@2001:41f0:3fe:3:c081:5d77:23ca:76bf)
[22:01:28] *** Quits: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:02:11] *** Quits: DuckThom (~luna@2001:41f0:3fe:3:c081:5d77:23ca:76bf) (Ping timeout: 245 seconds)
[22:03:10] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[22:04:05] *** Joins: jargon (~jargon@184.101.90.124)
[22:04:14] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: Ping timeout (120 seconds))
[22:04:26] <jargon> __adrian, Blondie101010 would you like to see my project now that it works for the most part?
[22:04:38] *** Joins: kenoba (~kenoba@user/kenoba)
[22:06:07] *** Joins: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de)
[22:07:17] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 264 seconds)
[22:07:25] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[22:10:30] *** Quits: Naktibalda (~Naktibald@88.135.22.17) (Ping timeout: 260 seconds)
[22:13:14] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[22:13:46] *** Joins: DrJ (~asdf@user/drj)
[22:19:58] *** Quits: omegatron (~some@p5b056a70.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[22:22:47] *** Joins: stenno (~stenno@user/stenno)
[22:23:05] *** Joins: omegatron (~some@p5b056a70.dip0.t-ipconnect.de)
[22:25:27] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[22:25:42] <relipse> readline() reads a line from input, how can i put back on stack?
[22:27:22] *** Joins: Viper-7 (~viper7@irc.viper-7.com)
[22:27:46] <Sammitch> what stack?
[22:28:51] <Sammitch> input is a stream/pipe. once you read something it no longer exists in the pipe
[22:29:09] <Blondie101010> only file IO would allow that
[22:29:43] *** Joins: yuters-alt (~yuters@23-233-111-146.cpe.pppoe.ca)
[22:34:27] *** Quits: yuters-alt (~yuters@23-233-111-146.cpe.pppoe.ca) (Ping timeout: 268 seconds)
[22:50:16] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[22:52:42] <AllenJB> Depending on what you're doing, you may want to look at using a message queue and/or event dispatch to enable you to "put messages back on the stack".
[22:58:38] <Sammitch> in sum, that statement contains little actionable info, but a powerful design smell
[22:58:59] *** Joins: velix (~velix@user/velix)
[22:59:36] *** Quits: guido (~guido@host-87-21-254-70.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[22:59:57] *** Joins: guido (~guido@host-87-21-254-70.retail.telecomitalia.it)
[23:00:40] <velix> I've got a design problem. I need to process lots of incoming queries from a frontend in a backend (geometry processing). This might be quiet heavy (1-3 seconds for processing). The frontend is designed async. Let's say I'm getting 500 geometries from the frontend at once. I think best is to setup a queue (beanstalkd, redis whatever). Is PHP okay for this?
[23:00:55] *** Quits: genom (~g@37.214.34.163) (Remote host closed the connection)
[23:02:16] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[23:02:55] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[23:02:59] <Albright> Sure. I'm not familiar with geometry processing but PHP in general is on the faster end of scripting languages, so it's a good choice when performance is a concern.
[23:03:02] *** Joins: semeion (~semeion@user/semeion)
[23:04:41] <Albright> Usually queues are used when you're doing "background processing" type of stuff though. Not sure how you'd use it in a case like this.
[23:05:08] <__adrian> if the frontend knows/is set up for async calls, then sure
[23:05:15] <da_wunder> also I don't see the problem with async frontend there - your frontend just add some loading spinner and waits the results...
[23:05:19] <__adrian> that's how i read the question, anyway
[23:05:40] <__adrian> ok, that (spinner) is NOT how i read "async"
[23:06:06] <__adrian> but if your frontend sends a request and then _knows the answer is not going to be immediate_, that's different
[23:06:25] <da_wunder> I read that something is happening in background - you will show some indicator about that until it's finished...
[23:06:37] <__adrian> i.e., if the request tells you "201 Accepted, come back later" then yes. but not if you just sit there waiting for the response.
[23:07:10] <Albright> I read it as da_wunder did. Just a good ol' HTTP request and response.
[23:07:29] <__adrian> well, both are good ol' http
[23:07:41] <Albright> but velix can clarify if they need to. :)
[23:08:02] <__adrian> just a difference in what "async frontend" means. that is, "uses ajax" vs. "knows the backend is async"
[23:08:13] <da_wunder> ^
[23:08:25] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[23:08:56] <velix> I think I need to read up, how others do it... I think others might use Python or Node, since they've native support for that kind of stuff.
[23:09:19] <__adrian> you (or us) are misunderstanding if you think that's a factor
[23:09:37] <velix> __adrian: Actually, I'm not doing the frontend. The new frontend guy is an idiot and I told him: don't send me 500 geometries at once (something like that) ;)
[23:09:38] <__adrian> php is perfectly capable of throwing a job in a queue and returning 201
[23:09:41] <Albright> Yeah, Python has a foothold in math processing related fields.
[23:10:01] <velix> __adrian: Yeah, but don't I need to keep a worker up for this all the waiting time?
[23:10:08] <__adrian> also note that "php queues job" ≠ "you have to use php to run the job too"
[23:10:12] <velix> __adrian: Let's say 40 people are throwing 500 gemetries in my backend?
[23:10:28] <__adrian> yes, you'd need workers. yes, it would be better if they were there waiting.
[23:10:51] <__adrian> ...but it's not like they waste any substantial amount of resources while they wait
[23:10:56] <velix> __adrian: the workers are waiting for jobs in the queue. How do you call the "workers" to talk with the frontend?
[23:10:59] <Albright> So the processing backend isn't in PHP itself? You're trying to build something that goes between the front end and the actual processing backend?
[23:11:12] <velix> Albright: No, it's PostgreSQL with PostGIS and R doing the heavy stuff.
[23:11:20] <Albright> Ahhhh.
[23:11:22] <da_wunder> and another important question here is what your frontend expects to happen - and how it should handle those background tasks that your backend is doing
[23:11:36] <__adrian> "How do you call the "workers" to talk with the frontend?"  the worker would need to know how to do that. e.g., they might send a pubsub event to a ws server.
[23:11:39] <velix> da_wunder: Please call it "the frontend", it's not mine :)
[23:11:56] <velix> __adrian: 1 sec
[23:12:00] <Albright> The front end of your project. :P
[23:12:23] <velix> Albright: Professor's project ;)
[23:12:27] <da_wunder> velix: it's the frontend that your backend is using, so imho that is also yours frontend
[23:12:28] <velix> __adrian: Browser ---> PHP (receiver) ---> worker (backend) ---> PHP (senter) ----> browser
[23:12:57] <velix> The receiver/sender needs to idle until the worker is done, doesn't it?
[23:13:09] <Albright> That's one approach, yes.
[23:13:14] <Albright> The simplest approach IMO.
[23:13:27] <__adrian> php is unlikely to be the thing that notifies the frontend directly. if you don't want a ws server or something similar to push notifications, then you'd have the frontend poll to check on progress.
[23:13:38] <Albright> A slightly more complex approach is that the PHP app drops the connection, then the front end occasionally polls the PHP app to see if the job is done yet.
[23:13:39] <velix> __adrian: ah ok
[23:13:43] <__adrian> "velix> The receiver/sender needs to idle until the worker is done, doesn't it?"  that's completely not "async"
[23:13:48] <Albright> I think that's overkill if we're talking 3 seconds of processing time though.
[23:13:49] <__adrian> so no
[23:13:52] <velix> yes, understood it.
[23:13:56] <velix> Yes, good approach.
[23:14:01] <velix> I'll give the frontend a job-id
[23:14:01] <__adrian> "overkill"  maybe
[23:14:09] <da_wunder> so you have choices, poll that status, use some websockets, etc.
[23:14:10] <velix> And it can poll "are you done with my job-id"?
[23:14:30] <__adrian> but remember that 3s can pile up fast if it's more than one request
[23:14:30] <velix> da_wunder: Sure, or websockets.
[23:14:44] <velix> __adrian: But what's the alternative? ws?
[23:14:45] <Albright> Yes, websockets is the more complex (since you have to work at a lower level) but most "correct" answer.
[23:14:59] <__adrian> ws are the easier alternative
[23:15:12] <velix> Okay... need to look this up. Never used it :)
[23:15:16] <__adrian> but it's an extra system to deal with
[23:16:48] <da_wunder> or make it easy with eg. firebase if I remember correctly you can use that with php really easily - no need to thing that websocket thing on your php code - your frontend dev just needs to use that
[23:19:52] *** Joins: semeion (~semeion@user/semeion)
[23:20:52] <da_wunder> and really the simpliest thing to do that is just that polling thing
[23:22:28] <velix> da_wunder: Yeah, makes sense. But what really annoys me, he wants to send all the geometries selected in the frontend seperatly.
[23:22:37] <velix> So instead of doing one big requests, he bombs my backend.
[23:24:07] <da_wunder> velix: if your API allows that, you need to deal with it - you could change your API that the request needs to contain list of those requests, but still it won't solve the issue that people are using your API with just single request on that list...
[23:25:33] <da_wunder> velix: so really, you need to handle those requests fast - just dispatch those to eg. rabbitmq queue, response back 201 and then use background workers to process that rabbitmq queue
[23:26:01] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[23:28:15] <velix> I'd use Beanstalkd, since RabbitMQ is quite overkill...
[23:28:23] <velix> But yeah, it's the same concept.
[23:28:37] <velix> PostgreSQL also has a native low-level queue system, nobody hardly knows :D
[23:30:21] <velix> But when using WS, I'd need to keep a socket open all the time?
[23:31:03] <Albright> That's the idea, yes.
[23:31:32] <Albright> Though I guess you could close it when there's no data the front end is currently waiting on.
[23:32:22] <Albright> But it would probably be more efficient to just keep it open and send data back and forth
[23:32:33] <Albright> as it is needed.
[23:32:38] <da_wunder> and really if you thing that rabbitmq is overkill, then I would say that using websockets is also overkill - just use that polling...
[23:33:38] <da_wunder> and with that polling, you don't need to do anything else that just provide api for that, your frontend dev needs to implement that actual polling logic
[23:35:28] <velix> da_wunder: Actually, I already have found a nice module to do polling with Fetch API :D
[23:35:43] <velix> For the first version, polling should be fine.
[23:36:08] <velix> Thanks for your inspiration
[23:37:53] *** Quits: magla (~gelignite@55d4478c.access.ecotel.net) (Quit: Stay safe!)
[23:38:58] *** Joins: semeion (~semeion@user/semeion)
[23:42:00] <da_wunder> and with that `module to do polling with Fetch API` you mean backend OR frontend ?
[23:46:34] *** Joins: mactron (~mactron@apn-123-214-101-gprs.simobil.net)
[23:48:39] <Albright> Well, Fetch API is a JS thing and only does requests AFAIK, so I presume front-end.
[23:49:04] <velix> da_wunder: Yes, sorry.
[23:49:08] <velix> Sorry, sorry. I was reading.
[23:49:12] <velix> and coding
[23:49:29] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 250 seconds)
[23:49:45] <__adrian> "and really if you thing that rabbitmq is overkill, then ..."  yes, definitely
[23:49:50] <jargon> __adrian How does array_merge() work? I am referring to the php manual, but I still am not getting intended results.
[23:50:29] <da_wunder> Albright: that is what I think too, but just needed to be sure - because velix said that he/she doesn't do the frontend - so I'm wondering why he/she needs to know anything about js fetch api... the frontend guy should know that...
[23:50:32] *** Quits: guido (~guido@host-87-21-254-70.retail.telecomitalia.it) (Quit: WeeChat 3.3)
[23:50:44] <__adrian> which part?  "If the input arrays have the same string keys, then the later value for that key will overwrite the previous one. If, however, the arrays contain numeric keys, the later value will not overwrite the original value, but will be appended." is probably what you need to know
[23:50:48] <Albright> Ah, point.
[23:52:10] <jargon> I understand that part, however when I use $about = array_merge( default_stats(),$about); <-- nothing changes
[23:52:35] <da_wunder> jargon: create 3v4l.org example
[23:52:39] <__adrian> ^
[23:52:45] <Albright> Check that default_status() isn't just returning []
[23:52:50] <__adrian> probably depends a lot on what default_stats() returns
[23:59:50] <da_wunder> that 3v4l.org example would have explain that
