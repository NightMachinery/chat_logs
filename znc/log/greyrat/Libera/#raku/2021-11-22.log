[00:00:41] <jdv> dha++
[00:01:11] <Xliff> Nope. It's not charset.
[00:06:42] <Juerd> Xliff: md5_hex is not a method. You're getting the md5 of the stringified object.
[00:07:28] <Juerd> That is, assuming you meant $d->md5_hex instead of $d.md5_hex
[00:07:47] <Juerd> Oh, er, I'm thinking Perl. 
[00:09:15] <jdv> i still have a "Perl 5" tshirt.  those were the days;)
[00:09:28] <jdv> yapc 12 maybe?
[00:12:24] <timo> Xliff: compare it with the md5sum commandline tool? also make sure to echo -n so it doesn't have an extra newline?
[00:19:38] <Xliff> Thanks, all. I just dropped the trigger and am having raku doign all the work, for now.
[00:21:17] *** Joins: Sgeo (~Sgeo@user/sgeo)
[00:27:51] <SmokeMachine> Does it make more sense now with this new example on README.md? https://twitter.com/smokemachine/status/1462513391961088000?s=20
[00:28:23] <SmokeMachine> Sorry, I meant this: https://github.com/FCO/RedFactory
[01:21:17] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:21:18] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:21:42] *** Joins: monkey_ (~user@190.104.116.153)
[01:23:41] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[01:25:31] *** Joins: Zippy (~Zippy@86-40-144-207-dynamic.b-ras2.rtd.sligo.eircom.net)
[01:26:32] <Zippy> Hi all,
[01:26:49] <Zippy> Can one use the zip operator with a function pointer?
[01:28:47] <gfldex> Zippy: Not directly. You have to go through a Seq.
[01:29:07] <Zippy> Please can you give an example?
[01:29:29] <gfldex> m: sub subby { gather loop { take $++ } }; say 1,2,3 Z subby;
[01:29:30] <camelia> rakudo-moar cf1ee490c: OUTPUT: «((1 0) (2 1) (3 2))␤»
[01:29:44] <gfldex> replace `take $++` with your function body.
[01:30:33] <Zippy> Thank you!
[01:30:45] <gfldex> You are welcome!
[01:31:33] <Zippy> And why does: 'foo'.split("").map(*.ord) produce a Nil on either side?
[01:32:01] <Zippy> Is it like C-strings? To delimit the start/end and so help loop termination?
[01:32:48] <gfldex> m: 'foo'.comb.map(*.ord).say;
[01:32:48] <camelia> rakudo-moar cf1ee490c: OUTPUT: «(102 111 111)␤»
[01:32:49] <Zippy> m: 'foo'.split("").map(*.ord)
[01:32:49] <camelia> rakudo-moar cf1ee490c: ( no output )
[01:33:30] <Zippy> I'm on 2021.04, and I get: (Nil 102 111 111 Nil)
[01:34:18] <gfldex> m: 'foo'.split("").map(*.ord).say
[01:34:19] <camelia> rakudo-moar cf1ee490c: OUTPUT: «(Nil 102 111 111 Nil)␤»
[01:34:39] <gfldex> m: 'foo'.split("", :skip-empty).map(*.ord).say
[01:34:39] <camelia> rakudo-moar cf1ee490c: OUTPUT: «(102 111 111)␤»
[02:14:46] *** Joins: joel-burton (~joel-burt@c-67-164-57-75.hsd1.ca.comcast.net)
[02:15:41] <joel-burton> Hi, all. I'm a comp sci teacher and am trying to experiment with Raku but am finding it difficult to get a working installation. Is this an appropriate place to ask for some installation help?
[02:15:59] <moon-child> yes
[02:16:41] *** Joins: Colt (~Colt@user/colt)
[02:16:55] <joel-burton> thanks, moon-child. I have a new MacBook Pro M1 (running Monterey version of MacOS). I've tried to install Raku a few ways:
[02:17:36] <Xliff> joel-burton: Have you tried https://rakudo.org/star/macos?
[02:18:16] <joel-burton> 1. At Rakudo's website, installed their dmg for Rakudo-star. This gave me a working "Raku", but it's compiled for Intel, not ARM (they don't seem to have a package for ARM). What I got works, but it doesn't include zef. And, given the battery kill of Rosetta, I'd rather have it native. Leading to ...
[02:19:05] <joel-burton> 2. At Rakudo's website, installed their binaries for Rakudo (no star). They have ARM binaries there, and they work, but no zef (and probably other things missing, too). I found zef at GitHub, but it hangs for me in their installation process.
[02:19:18] <moon-child> install is quite slow.  Give it some time
[02:19:34] <Xliff> joel-burton: If you want to compile for native, then you can use https://rakubrew.org/
[02:19:46] <Xliff> Two commands: 
[02:19:52] <Xliff> 1) rakubrew build moar
[02:19:59] <Xliff> 2) rakubrew build-zef
[02:20:47] <joel-burton> 3. Installed Rakudo star from Home-brew. That installed easily (and is ARM). When I start up "Raku", though, I get no REPL prompt. However, I can run my Raku scripts fine. Zef is included (yay!) but it hangs on commands: `zef --debug info Readline` has been running for 30 minutes without so much as a peep.
[02:21:17] <joel-burton> @moon-child: I let zef's install run for ~20 mins. is that not an appropriate time? (I have a very fast network in my office here)
[02:21:50] <joel-burton> Xliff: I don't mind compiling; I compile lots of things and have a working toolchain. Happy to look into rakubrew.
[02:21:51] <moon-child> hmm, well, that is maybe a bit long! :)
[02:23:32] <joel-burton> I can get a working Raku via docker (which is ok), but it's always nice to get something on my computer itself.
[02:24:42] <joel-burton> (and, just as a side-note: I was a pretty serious perl5 user long ago, and am very impressed with the language features of Raku. I don't know that I'll get to teach it, but it's great to have a language to show students with interesting features. Thanks for your work on it!)
[02:27:51] <joel-burton> (trying rakubrew now, Xliff)
[02:29:30] <Xliff> joel-burton: Good luck!
[02:39:08] <MasterDuke> joel-burton: fyi, some other people have had problems with monterey
[02:39:46] <joel-burton> new versions of MacOS are always basically beta, MasterDuke :-|
[02:40:08] <joel-burton> and I say that having been an engineer at apple ;-)
[02:40:33] <ugexe> joel-burton: seems to be something to do with Monterey 
[02:40:45] <MasterDuke> https://colabti.org/irclogger/irclogger_log_search/raku?search=Monterey&action=search&timespan=&text=checked
[02:45:41] <joel-burton> rakubrew gave me a working Raku (x86 rather than ARM, but that's ok). but it hangs during the zef compilation (which is what it did when I tried to install it against the Rakudo-star from the website, too). I suspect this is the same problem other people are having with Monterey.
[02:46:09] <joel-burton> ok. I'll work with it via docker (the Rakudo-star image works fine, zef and all). I'll figure out how to get comma to use that ;-)
[02:46:14] <joel-burton> thanks, all. I appreciate your effort.
[03:03:05] *** Quits: joel-burton (~joel-burt@c-67-164-57-75.hsd1.ca.comcast.net) (Quit: Ping timeout (120 seconds))
[03:12:06] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:23:13] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[03:31:19] *** Quits: Zippy (~Zippy@86-40-144-207-dynamic.b-ras2.rtd.sligo.eircom.net) (Quit: Connection closed)
[03:32:35] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:32:47] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[03:39:36] *** Quits: Skarsnik (~Skarsnik@91-170-31-218.subs.proxad.net) (Read error: Connection reset by peer)
[03:50:34] *** Quits: sm1 (~sm1@c-73-188-85-195.hsd1.pa.comcast.net) (Ping timeout: 260 seconds)
[03:54:02] *** Quits: jess (~jess@libera/staff/jess) ()
[03:58:23] *** Quits: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz) (Quit: WeeChat 3.3)
[04:57:25] *** Joins: frost (~frost@user/frost)
[05:04:31] *** Joins: ramdom (~ramdom@202.119.41.11)
[05:04:43] *** Joins: sm1 (~sm1@2601:44:8701:9420::76d)
[05:05:12] *** Quits: ramdom (~ramdom@202.119.41.11) (Client Quit)
[05:10:46] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 260 seconds)
[05:58:56] *** Quits: sm1 (~sm1@2601:44:8701:9420::76d) (Ping timeout: 246 seconds)
[06:12:00] *** Joins: sm1 (~sm1@2601:44:8701:9420::76d)
[06:23:29] *** Quits: sm1 (~sm1@2601:44:8701:9420::76d) (Ping timeout: 250 seconds)
[06:49:39] *** Joins: sm1 (~sm1@2601:44:8701:9420::76d)
[07:04:10] *** Quits: sm1 (~sm1@2601:44:8701:9420::76d) (Ping timeout: 260 seconds)
[07:34:07] *** Joins: Colt2 (~Colt@ptr-1w23zewqpabrx5264q3.18120a2.ip6.access.telenet.be)
[07:34:07] *** Quits: Colt2 (~Colt@ptr-1w23zewqpabrx5264q3.18120a2.ip6.access.telenet.be) (Changing host)
[07:34:07] *** Joins: Colt2 (~Colt@user/colt)
[07:34:25] *** Joins: sm1 (~sm1@2601:44:8701:9420::76d)
[07:35:01] *** Quits: Colt (~Colt@user/colt) (Ping timeout: 268 seconds)
[07:36:12] *** Quits: Colt2 (~Colt@user/colt) (Client Quit)
[07:37:01] *** Joins: Colt (~Colt@user/colt)
[08:03:32] *** Quits: sm1 (~sm1@2601:44:8701:9420::76d) (Ping timeout: 240 seconds)
[08:59:44] *** Joins: sm1 (~sm1@c-73-188-85-195.hsd1.pa.comcast.net)
[09:17:20] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[09:18:48] *** Quits: BinGOs (bitbucket@user/bingos) (*.net *.split)
[09:18:48] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (*.net *.split)
[09:18:48] *** Quits: ptc_ (~cochrane@static.150.233.203.116.clients.your-server.de) (*.net *.split)
[09:18:48] *** Quits: gabiruh (~gabiruh@vps19177.publiccloud.com.br) (*.net *.split)
[09:18:58] *** Joins: ptc (~cochrane@static.150.233.203.116.clients.your-server.de)
[09:18:59] *** Joins: bingos (~bitbucket@user/bingos)
[09:19:17] *** Joins: gabiruh (~gabiruh@vps19177.publiccloud.com.br)
[09:19:34] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 260 seconds)
[09:21:20] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[09:24:59] *** Quits: corwin (someone@fosshost/director/corwin) (*.net *.split)
[09:24:59] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[09:24:59] *** Quits: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663) (*.net *.split)
[09:24:59] *** Quits: ugexe (ugexe@p6.nu) (*.net *.split)
[09:24:59] *** Quits: jcallen (quassel@user/jcallen) (*.net *.split)
[09:24:59] *** Quits: camelia (~p6eval@camelia.detonation.org) (*.net *.split)
[09:25:00] *** Quits: Ekho (~Ekho@user/ekho) (*.net *.split)
[09:25:00] *** Quits: dcx (~dcx@user/dac) (*.net *.split)
[09:25:00] *** Quits: peder (4822@nidur.ifi.uio.no) (*.net *.split)
[09:25:00] *** Quits: dustinm`_ (~dustinm@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[09:25:00] *** Quits: Ulti_ (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com) (*.net *.split)
[09:25:00] *** Quits: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1) (*.net *.split)
[09:25:00] *** Quits: ingy (~ingy@143.244.187.20) (*.net *.split)
[09:25:00] *** Quits: jercos (~sage@xyl.be) (*.net *.split)
[09:25:00] *** Quits: pierrot (~pi@user/pierrot) (*.net *.split)
[09:25:07] *** Joins: jercos (jercos@xyl.be)
[09:25:09] *** Joins: greaser|q (greaser@antihype.space)
[09:25:21] *** Joins: ugexe (ugexe@p6.nu)
[09:25:29] *** Joins: jcallen (quassel@user/jcallen)
[09:25:31] *** Joins: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663)
[09:25:41] *** Joins: mtj (quasselcor@2400:8902::f03c:91ff:fe93:b7f1)
[09:26:37] *** Joins: corwin (someone@ghostwheel.bru.st)
[09:26:40] *** Quits: corwin (someone@ghostwheel.bru.st) (Changing host)
[09:26:40] *** Joins: corwin (someone@fosshost/director/corwin)
[09:26:53] *** Joins: pierrot (~pi@user/pierrot)
[09:26:56] *** Joins: dcx (~dcx@user/dac)
[09:27:11] *** Joins: camelia (~p6eval@camelia.detonation.org)
[09:27:17] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[09:27:32] *** Joins: ingy (~ingy@143.244.187.20)
[09:27:50] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[09:27:50] *** Joins: greaser|q (greaser@user/greasemonkey)
[09:27:52] *** greaser|q is now known as GreaseMonkey
[09:30:17] *** Joins: peder (4822@nidur.ifi.uio.no)
[09:30:17] *** Joins: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com)
[09:30:35] *** Joins: Ekho (~Ekho@user/ekho)
[09:32:47] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:32:47] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:32:47] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:32:47] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[10:32:47] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[10:32:47] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[10:32:47] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[10:32:47] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[10:32:47] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[10:32:47] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[10:32:47] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[10:32:47] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[10:32:47] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:32:47] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:32:47] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:32:47] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:32:47] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:32:47] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:32:47] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:33:22] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[10:33:53] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[10:34:18] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[10:34:35] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[10:34:53] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[10:34:59] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[10:34:59] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[10:35:15] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[10:35:25] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[10:35:39] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[10:36:09] *** Quits: sm1 (~sm1@c-73-188-85-195.hsd1.pa.comcast.net) (Ping timeout: 256 seconds)
[10:38:21] *** Quits: Flwyd (~Flwyd@c-174-63-75-106.hsd1.vt.comcast.net) (Quit: Ping timeout (120 seconds))
[10:55:16] *** Joins: sm1 (~sm1@2601:44:8701:9420::76d)
[10:57:07] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:58:00] *** Joins: seednode (~seednode@user/seednode)
[11:14:51] *** Quits: sm1 (~sm1@2601:44:8701:9420::76d) (Ping timeout: 264 seconds)
[11:23:07] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[11:23:21] *** Quits: ecocode__ (sid500572@id-500572.lymington.irccloud.com) (Ping timeout: 265 seconds)
[11:23:51] *** Joins: ecocode__ (sid500572@id-500572.lymington.irccloud.com)
[11:28:03] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 264 seconds)
[11:28:24] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[11:31:20] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:33:37] *** Joins: sm1 (~sm1@2601:44:8701:9420::76d)
[11:35:29] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[11:35:38] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[11:35:55] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[11:35:59] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[11:51:25] *** Joins: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz)
[12:14:15] *** Quits: sm1 (~sm1@2601:44:8701:9420::76d) (Ping timeout: 264 seconds)
[12:20:27] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[12:35:23] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[12:35:54] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[12:38:05] *** bingos is now known as BinGOs
[12:49:43] *** Joins: sm1 (~sm1@2601:44:8701:9420::76d)
[12:57:40] *** Quits: mjgardner (sid182628@id-182628.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[12:57:59] *** Quits: PotatoGim (sid99505@id-99505.lymington.irccloud.com) (Ping timeout: 264 seconds)
[12:58:34] *** Quits: patterner_ (sid212303@id-212303.ilkley.irccloud.com) (Ping timeout: 265 seconds)
[12:58:34] *** Quits: rjbs (sid498898@id-498898.uxbridge.irccloud.com) (Ping timeout: 265 seconds)
[12:58:35] *** Quits: tbrowder (sid168924@id-168924.lymington.irccloud.com) (Ping timeout: 264 seconds)
[12:58:35] *** Quits: zostay (sid170293@id-170293.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[12:58:36] *** Quits: leont (sid489095@id-489095.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[12:58:39] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Read error: Connection reset by peer)
[12:59:11] *** Quits: kawaii_ (sid345572@id-345572.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[12:59:15] *** Quits: ecocode__ (sid500572@id-500572.lymington.irccloud.com) (Ping timeout: 264 seconds)
[12:59:32] *** Quits: skaji (sid178483@id-178483.tinside.irccloud.com) (Ping timeout: 265 seconds)
[12:59:50] *** Joins: SmokeMachine_ (sid19088@tinside.irccloud.com)
[12:59:59] *** Quits: SmokeMachine (sid19088@id-19088.tinside.irccloud.com) (Ping timeout: 268 seconds)
[12:59:59] *** Quits: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[13:00:00] *** SmokeMachine_ is now known as SmokeMachine
[13:00:02] *** Joins: kawaii_ (sid345572@hampstead.irccloud.com)
[13:01:42] *** Joins: patterner_ (sid212303@ilkley.irccloud.com)
[13:01:47] *** Joins: leont (sid489095@uxbridge.irccloud.com)
[13:01:48] *** Joins: ecocode__ (sid500572@lymington.irccloud.com)
[13:01:49] *** Joins: rjbs (sid498898@uxbridge.irccloud.com)
[13:01:55] *** Joins: tbrowder (sid168924@lymington.irccloud.com)
[13:02:20] *** Joins: zostay (sid170293@hampstead.irccloud.com)
[13:02:47] *** Joins: pjlsergeant (sid143467@hampstead.irccloud.com)
[13:04:07] *** Joins: skaji (sid178483@tinside.irccloud.com)
[13:12:36] *** Joins: PotatoGim (sid99505@id-99505.lymington.irccloud.com)
[13:12:36] *** Joins: mjgardner (sid182628@id-182628.ilkley.irccloud.com)
[13:16:00] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[13:33:58] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[13:34:49] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[13:58:03] *** Quits: sm1 (~sm1@2601:44:8701:9420::76d) (Ping timeout: 264 seconds)
[13:59:10] *** Joins: sm1 (~sm1@2601:44:8701:9420::76d)
[14:04:54] *** ircuser is now known as merpaderp
[14:34:28] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[14:50:34] *** Joins: ufobat (~martin@dynamic-077-002-053-248.77.2.pool.telefonica.de)
[14:50:41] *** Quits: ufobat (~martin@dynamic-077-002-053-248.77.2.pool.telefonica.de) (Client Quit)
[15:09:48] *** Joins: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz)
[15:24:43] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[15:32:46] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:34:43] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[15:49:19] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Read error: Connection reset by peer)
[15:50:34] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[15:54:49] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 250 seconds)
[15:56:02] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[16:03:41] *** Joins: atweedie (~atweedie@254.140-66-87.adsl-dyn.isp.belgacom.be)
[16:15:57] *** Quits: atweedie (~atweedie@254.140-66-87.adsl-dyn.isp.belgacom.be) (Changing host)
[16:15:57] *** Joins: atweedie (~atweedie@user/atweedie)
[16:20:09] <atweedie> m: my @a = 1..4; for @a.kv -> $i, $j { "$i//$j".say }
[16:20:10] <camelia> rakudo-moar cf1ee490c: OUTPUT: «0//1␤1//2␤2//3␤3//4␤»
[16:20:38] <atweedie> m: my @a = 1..4; for ^Inf Z @a -> $i, $j { "$i//$j".say }
[16:20:38] <camelia> rakudo-moar cf1ee490c: OUTPUT: «0 1//1 2␤2 3//3 4␤»
[16:21:19] <atweedie> according to the (12-year old) https://perl6advent.wordpress.com/2009/12/07/day-7-looping-for-fun-and-profit/ the latter should be identical to the first?
[16:24:39] <frost> m: my @a = 1..4; for (^Inf Z @a).flat -> $i, $j { "$i//$j".say }
[16:24:39] <camelia> rakudo-moar cf1ee490c: OUTPUT: «0//1␤1//2␤2//3␤3//4␤»
[16:31:04] <frost> my @a = 1..4; for ^Inf Z @a -> ($i, $j) { "$i//$j".say }
[16:31:05] <evalable6> frost, rakudo-moar cca98704a: OUTPUT: «0//1␤1//2␤2//3␤3//4␤»
[16:31:27] <atweedie> ty! I realize I encountered .flat in the comments of one of the earlier sections. It was mentioned in the context of the Great List Refactor
[16:31:56] <atweedie> ddg turns up some results on the GLR, so I'll do some reading...
[16:31:57] <frost> the 2009 version is too old
[16:32:07] <atweedie> oh that's nicer!
[16:32:25] <frost> somethings must have be changed, but i don't know, too
[16:33:18] <frost> the channel is so quiet today
[16:34:18] <Geth> ¦ ecosystem: a4672f8e06 | (Elizabeth Mattijsen)++ | META.list
[16:34:19] <Geth> ¦ ecosystem: Remove Zodiac::Chinese
[16:34:19] <Geth> ¦ ecosystem: 
[16:34:19] <Geth> ¦ ecosystem: It appears to have vanished from existence
[16:34:19] <Geth> ¦ ecosystem: review: https://github.com/Raku/ecosystem/commit/a4672f8e06
[16:34:41] <atweedie> good to know that's an anomaly
[16:40:15] <frost> will a new version be released this month?
[16:46:06] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:56:42] <lizmat> .tell frost most likely not
[16:56:43] <tellable6> lizmat, I'll pass your message to frost
[17:32:32] *** Quits: atweedie (~atweedie@user/atweedie) (Ping timeout: 260 seconds)
[17:57:26] *** Quits: sm1 (~sm1@2601:44:8701:9420::76d) (Ping timeout: 245 seconds)
[18:13:43] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:21:43] *** Joins: atweedie (~atweedie@254.140-66-87.adsl-dyn.isp.belgacom.be)
[18:22:19] *** Quits: atweedie (~atweedie@254.140-66-87.adsl-dyn.isp.belgacom.be) (Changing host)
[18:22:19] *** Joins: atweedie (~atweedie@user/atweedie)
[18:36:23] *** Joins: sm1 (~sm1@2601:44:8701:9420::76d)
[18:51:02] *** Quits: Colt (~Colt@user/colt) (Ping timeout: 240 seconds)
[18:57:09] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[19:02:30] *** Joins: patrickb (~patrickb@85-22-61-234.ip.dokom21.de)
[19:02:55] <patrickb> o/
[19:03:46] <patrickb> codesections: Did you notice: https://github.com/rakudo/rakudo/issues/4611#issuecomment-960553458
[19:13:57] *** Quits: Kaiepi (~Kaiepi@156.34.44.192) (Ping timeout: 250 seconds)
[19:29:35] *** Quits: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz) (Quit: Leaving)
[19:50:29] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[20:03:50] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[20:21:05] *** Quits: patrickb (~patrickb@85-22-61-234.ip.dokom21.de) (Remote host closed the connection)
[20:21:25] *** Joins: patrickb (~patrickb@85-22-61-234.ip.dokom21.de)
[20:27:44] *** Quits: patrickb (~patrickb@85-22-61-234.ip.dokom21.de) (Remote host closed the connection)
[20:28:03] *** Joins: patrickb (~patrickb@85-22-61-234.ip.dokom21.de)
[20:29:31] *** Quits: sm1 (~sm1@2601:44:8701:9420::76d) (Ping timeout: 245 seconds)
[20:33:56] *** Quits: patrickb (~patrickb@85-22-61-234.ip.dokom21.de) (Remote host closed the connection)
[20:34:15] *** Joins: patrickb (~patrickb@85-22-61-234.ip.dokom21.de)
[20:37:54] *** Quits: patrickb (~patrickb@85-22-61-234.ip.dokom21.de) (Remote host closed the connection)
[20:38:13] *** Joins: patrickb (~patrickb@85-22-61-234.ip.dokom21.de)
[20:39:53] *** Quits: patrickb (~patrickb@85-22-61-234.ip.dokom21.de) (Remote host closed the connection)
[20:40:12] *** Joins: patrickb (~patrickb@85-22-61-234.ip.dokom21.de)
[20:44:08] *** Quits: patrickb (~patrickb@85-22-61-234.ip.dokom21.de) (Remote host closed the connection)
[20:44:27] *** Joins: patrickb (~patrickb@85-22-61-234.ip.dokom21.de)
[20:45:15] *** Quits: patrickb (~patrickb@85-22-61-234.ip.dokom21.de) (Remote host closed the connection)
[20:53:09] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[20:54:49] *** Quits: rypervenche (~rypervenc@user/rypervenche) (Quit: brb)
[20:59:15] *** Quits: atweedie (~atweedie@user/atweedie) (Ping timeout: 264 seconds)
[20:59:46] *** Joins: Guest4 (~Guest4@2001:bb6:a114:6f00:3934:754e:bed7:1d50)
[21:05:44] <Guest4> Bonjour! Is it possible to use the zip operator with an inline function? Something like:
[21:05:48] <Guest4> m: say <1 2 3> Z[&{$^a + $^b}] <4 4 4>
[21:05:49] <camelia> rakudo-moar cf1ee490c: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Unable to parse expression in bracketed infix; couldn't find final ']' (corresponding starter was at line 1)␤at <tmp>:1␤------> 3say <1 2 3> Z[&7⏏5{$^a + $^b}] <4 4 4>␤»
[21:06:27] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 264 seconds)
[21:12:15] <lizmat> m: say <1 2 3> Z[&(* + *)] <4 4 4>   # Guest4 
[21:12:15] <camelia> rakudo-moar cf1ee490c: OUTPUT: «(5 6 7)␤»
[21:13:43] <lizmat> m: say <1 2 3> Z[&({ $^a + $^b })] <4 4 4>    # Guest4 
[21:13:43] <camelia> rakudo-moar cf1ee490c: OUTPUT: «(5 6 7)␤»
[21:16:18] *** Joins: sm1 (~sm1@2601:44:8701:9420::76d)
[21:17:48] <Guest4> thank you lizmat!
[21:18:33] <MasterDuke> https://github.com/rakudo/rakudo/issues/4423 is related
[21:23:12] <Guest4> and thank you for the caveat MasterDuke!
[21:23:23] <MasterDuke> np
[21:28:30] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[21:32:35] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[21:32:50] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:33:17] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[21:34:56] <Guest4> okay, one more... why does this produce a Nil either side?
[21:34:57] <Guest4> m: 'foo'.split("").map(*.ord)
[21:34:58] <camelia> rakudo-moar cf1ee490c: ( no output )
[21:35:26] <lizmat> because that's what split dies
[21:35:29] <lizmat> *does
[21:35:32] <MasterDuke> m: 'foo'.split("", :skip-empty).map(*.ord).say
[21:35:32] <camelia> rakudo-moar cf1ee490c: OUTPUT: «(102 111 111)␤»
[21:35:40] <lizmat> you probably want .comb
[21:35:47] <MasterDuke> m: 'foo'.comb.map(*.ord).say
[21:35:47] <camelia> rakudo-moar cf1ee490c: OUTPUT: «(102 111 111)␤»
[21:36:23] <Guest4> Is the intent like C-strings to make a falsy delimiter for loop/construct termination on iteration over?
[21:36:52] * lizmat has trouble parsing your question
[21:37:28] <Guest4> Where can I look up why the sequence generated by split creates Nil on either end?
[21:38:07] <Guest4> There is no mention of Nil at https://docs.raku.org/routine/split
[21:38:43] <MasterDuke> "If DELIMITER is the empty string, it effectively returns all characters of the string separately (plus an empty string at the begin and at the end)."
[21:38:57] <Guest4> Thanks, but why?
[21:39:09] <[Coke]> It's not a Nil, it's an empty string, IIRC.
[21:39:28] <[Coke]> m: dd 'this'.split('');
[21:39:28] <camelia> rakudo-moar cf1ee490c: OUTPUT: «("", "t", "h", "i", "s", "").Seq␤»
[21:40:27] <[Coke]> :skip-empty is also mentioned in the first few paragraphs.
[21:40:38] <MasterDuke> i don't actually know why that behavior was decided upon though
[21:40:48] <Guest4> Okay, thanks.
[21:41:28] <[Coke]> Very old, and there's a note about it in the p5-raku page, IIRC
[21:42:30] <lizmat> with "" you're splitting on the boundary between characters.  The first character also have a boundary with the conceptual begin / end of string
[21:42:42] <lizmat> *and last
[21:43:01] <lizmat> but there's nothing inbetween
[21:43:06] <Guest4> Okay. That makes sense.
[21:43:26] <lizmat> it can be handy on some situations  :-)
[21:43:31] <Altreus> Raku strikes me as the sort of language to have tokens that mean start of string and end of string
[21:43:43] <lizmat> ^ and $
[21:43:57] <Altreus> I mean values, identifiers
[21:44:20] <MasterDuke> https://github.com/Raku/roast/commit/256d6a924be26b00106c606ffbf0a68d3b5696de is actually a bit more recent than i'd expected
[21:55:21] *** Quits: sm1 (~sm1@2601:44:8701:9420::76d) (Ping timeout: 245 seconds)
[21:56:42] *** Quits: Guest4 (~Guest4@2001:bb6:a114:6f00:3934:754e:bed7:1d50) (Ping timeout: 256 seconds)
[21:59:30] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:00:39] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[22:07:42] *** Joins: p6steve (~p6steve@2a00:23c8:2c00:4d00:5806:89cc:d5cc:54f5)
[22:33:52] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[22:44:57] *** Quits: p6steve (~p6steve@2a00:23c8:2c00:4d00:5806:89cc:d5cc:54f5) (Quit: Ping timeout (120 seconds))
[22:46:22] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Read error: Connection reset by peer)
[22:46:40] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[22:50:09] *** Joins: p6steve (~p6steve@2a00:23c8:2c00:4d00:5806:89cc:d5cc:54f5)
[22:50:39] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Read error: Connection reset by peer)
[22:50:48] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[22:50:50] <lizmat> PSA: the Rakudo Weekly News will be published tomorrow, 23 November 2021
[22:50:53] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Remote host closed the connection)
[22:57:19] <p6steve> hi all - can anyone tell me the docker / ubuntu recipe (ie. FROM xxx, RUN yyy) for a fast yet complete rakudo-star install?
[22:57:49] <p6steve> (ok to point me to somewhere in GitHub that is a good jump off point)
[23:00:01] <El_Che> p6steve: I just add the repo to a upstream distro image: https://github.com/nxadm/rakudo-pkg#os-repositories
[23:00:29] <El_Che> (mind you: rakudo+zef, not rakudo-star)
[23:07:11] <p6steve> El_Che yes ... perfect ... thanks !!
[23:08:53] <p6steve> (other answers also of interest...)
[23:09:08] <El_Che> p6steve: one of the use cases was containers because I throught star was not a match (you want small images)
[23:09:19] <El_Che> p6steve: let me look for the docker image of jj
[23:09:35] <p6steve> I have the jj images - no need
[23:10:24] <El_Che> https://github.com/JJ/alpine-raku
[23:10:42] <p6steve> they are cool for test ... but I want a (small) container image build setup
[23:11:17] <p6steve> (actually raku + zen is better for what I need)
[23:14:25] <El_Che> I am interested to hear if there are other options
[23:22:01] *** Quits: goblin (~jaa@yatima.uukgoblin.net) (*.net *.split)
[23:22:01] *** Quits: gfldex (~dex@ip5f5ab74b.dynamic.kabel-deutschland.de) (*.net *.split)
[23:22:08] *** Joins: goblin (~jaa@yatima.uukgoblin.net)
[23:22:13] *** Joins: gfldex (~dex@ip5f5ab74b.dynamic.kabel-deutschland.de)
[23:23:58] *** Quits: p6steve (~p6steve@2a00:23c8:2c00:4d00:5806:89cc:d5cc:54f5) (Ping timeout: 256 seconds)
[23:37:32] *** Joins: p6steve (~p6steve@2a00:23c8:2c00:4d00:5806:89cc:d5cc:54f5)
[23:43:56] *** Joins: colemanx (~coleman@2605:a601:5529:1e00:1c91:4746:df01:98c4)
