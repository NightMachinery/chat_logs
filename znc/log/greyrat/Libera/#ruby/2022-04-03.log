[00:12:37] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 240 seconds)
[00:21:45] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:23:15] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:23:26] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[00:25:03] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:31:58] *** Quits: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl) (Remote host closed the connection)
[00:34:43] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[00:39:48] *** Joins: eddof13 (~textual@2806:102e:12:64:251a:7d9c:896a:90df)
[00:42:41] *** Joins: hellstabber (~textual@178.233.17.95)
[00:43:47] *** Quits: hellstabber (~textual@178.233.17.95) (Client Quit)
[00:45:06] *** Joins: ssh073 (~serg073@79.164.47.232)
[00:46:34] *** Quits: ssh073 (~serg073@79.164.47.232) (Client Quit)
[00:46:45] *** Joins: hellstabber (~hellstabb@178.233.17.95)
[00:53:55] *** Quits: eddof13 (~textual@2806:102e:12:64:251a:7d9c:896a:90df) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:55:46] *** Quits: factor (~factor@c-73-68-120-166.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[01:01:10] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[01:36:14] *** Joins: ssh073 (~serg073@79.164.47.232)
[01:44:56] *** Quits: ssh073 (~serg073@79.164.47.232) (Remote host closed the connection)
[01:50:57] <John_Ivan> hi, is there a ruby gem that does much of the boilerplate when it comes to comparing the elements in two arrays and pointing out what is missing/extra?
[01:52:01] <John_Ivan> something similar to the js lib "underscore"
[01:52:13] <weaksauce> is that just difference?
[01:52:29] <weaksauce> https://rubyapi.org/3.1/o/array#method-i-difference
[01:53:13] <John_Ivan> weaksauce, perfect :D
[01:53:15] <John_Ivan> thank you
[01:53:22] <weaksauce> no problem
[01:53:24] <John_Ivan> weaksauce, are there "more of these"?
[01:53:34] <weaksauce> read through that list i guess
[01:53:40] <weaksauce> all those are on array
[01:53:45] <John_Ivan> will do
[01:53:47] <weaksauce> the other big one is enumerable 
[01:54:00] <weaksauce> https://rubyapi.org/3.1/o/enumerable
[01:54:27] <John_Ivan> weaksauce, that's exactly what I'm after
[01:54:37] <John_Ivan> yeah, those slice operations and what's on the left.
[01:55:09] <John_Ivan> weaksauce, map, reduce, these :)
[01:55:13] <weaksauce> nice
[01:55:26] <weaksauce> also you can use - to take the difference in arrays too 
[01:55:41] <weaksauce> [1,2,3] - [1,2] => [3]
[01:56:08] <John_Ivan> that's cool but hue, I'd rather stick to less "magical" approaches when I program :)
[01:56:33] *** Quits: mixfix41 (~homefame@user/mixfix41) (Quit: cya bbiab!)
[01:57:44] <weaksauce> fair enough there are a lot of builtin things in ruby
[01:57:49] <weaksauce> tons of methods
[01:58:48] <John_Ivan> weaksauce, I'm attempting to make a smarter movie scraper
[01:59:08] <weaksauce> in what sense 
[01:59:41] <John_Ivan> need to compare what's on my disk in terms of files, levenshtein the distance to how "close" the name is to what I'll be scraping with on imbd and then decide what operation I'll apply on each.
[02:00:05] <John_Ivan> weaksauce, and it needs to tell me everytime I provide a url, if the data I already have or not on disk
[02:00:16] <John_Ivan> .
[02:00:25] <weaksauce> ah
[02:01:01] <John_Ivan> weaksauce, scrape. levenshtein, compare, map, reduce, difference.....
[02:01:07] <John_Ivan> something like that.
[02:01:31] <John_Ivan> I want to know what I'm missing in my collection based on personal sets I've..... enumerated
[02:01:42] <John_Ivan> weaksauce, my collection is a ginormous mess
[02:01:55] <John_Ivan> and since I have thousands of things to sort/compare...
[02:02:04] <John_Ivan> doing it by hand is madness. it will take me months
[02:07:58] <weaksauce> yeah seems so
[02:09:34] <John_Ivan> weaksauce, yeah...
[02:09:41] <John_Ivan> if I were to give an analogy...
[02:10:23] <John_Ivan> [1, 5, 3, 6, 1, 1, 9, 3, 4, 0] [3, 3, 3, 4 , 4, 2 , 11, 24 ,32] [32, 55, 57, 35, 352, 2]            are some sets I've manually collected and.... binged
[02:10:39] <John_Ivan> and I need to know what are duplicates, what I already have and what I'm missing
[02:11:02] <John_Ivan> out of 2 [.............ginormous sets here from imbd......] and my own collection [.....................huuge.........]
[02:11:26] <John_Ivan> weaksauce, it's much worse because I actually even care about subsets out of those sets.
[02:13:48] <John_Ivan> only I know the madness I've created lol
[02:13:54] <weaksauce> doesn't really seem too intractable
[02:14:29] <John_Ivan> weaksauce, if the web was open, yeah, HAHAHAHAHAHAHHAHAHAHHAAHAHAHHAHAH
[02:14:43] <John_Ivan> except it's not so I have to........ pseudo-automate bits and pieces
[02:14:54] <John_Ivan> apply workarounds, automate some more...
[02:15:27] <John_Ivan> weaksauce, long story short, captchas, javascript, cookies and... I'm not too familiar with rubyOnRail's active orm records
[02:15:34] <weaksauce> are you not using the imdb api?
[02:15:41] <John_Ivan> weaksauce, of course not :)
[02:15:45] <weaksauce> i would think that would be much more preferable to scraping 
[02:16:03] <John_Ivan> weaksauce, well, imbd is just one site.
[02:16:03] <weaksauce> https://imdb-api.com/API
[02:16:09] <John_Ivan> for comparison
[02:16:22] <John_Ivan> I also scrape another which actually provides the movies. that's the big pain in the ass one.
[02:17:03] <John_Ivan> weaksauce, nah, imbd is cool. I can scrape their site easily even without their API. besides, I'd need an auth key. not in the mood to overcomplicate it
[02:17:27] <John_Ivan> and getting an auth requires an account.... to register.... and UNGGHGHGGGHHHHHHH
[02:17:38] * John_Ivan makes baboon sounds
[02:18:06] <John_Ivan> an auth key*
[02:19:24] <John_Ivan> weaksauce, everyone and their monkey loves RIA based webapps
[02:19:31] <John_Ivan> everything javascript
[02:20:07] <John_Ivan> makes automation a serious chronic pain in the WHOOAAAAAAAAAAAAAAAHHHHHHHHHHHHHHHHHH.
[02:21:09] <John_Ivan> I mean, thank god for Watir/Selenium
[02:21:31] <John_Ivan> if it wasn't for it, I'd probably end up doing some poor pseudo-macro with a clicker
[02:21:52] <John_Ivan> and months later end up using pytorch to build my own visual solver
[02:21:57] * John_Ivan explodes
[02:22:42] <John_Ivan> weaksauce, R-CNN, ever heard of it? I've attempted it once.
[02:23:04] <John_Ivan> I failed. Not because the concept is hard. but because python is like pricks to my eyes
[02:23:13] <John_Ivan> makes em' bleed.
[02:24:11] <John_Ivan> weaksauce, https://learnopencv.com/faster-r-cnn-object-detection-with-pytorch/
[02:24:52] <John_Ivan> website protection? captchas? logical questions? no problem! just train a neural network and make the machine indistinguishable from a human!
[02:26:10] *** Joins: liam1 (~liam@cpc104498-sgyl40-2-0-cust215.18-2.cable.virginm.net)
[02:29:38] <weaksauce> hah yeah
[02:29:55] <weaksauce> did some machine learning in university 
[02:30:23] <leah2> i mostly did manual learning /s
[02:31:24] *** Joins: SobiX (~SobiX@83.120.25.60)
[02:31:31] <John_Ivan> weaksauce, :)
[02:31:40] <weaksauce> hah
[02:36:16] <ox1eef> that's the thing, python is the language of universities, and that's one of the reasons python has that cool stuff
[02:41:10] *** Joins: davidw (~davidw@h72-35-148-100.bendor.broadband.dynamic.tds.net)
[02:53:34] *** Joins: ssh073 (~serg073@79.164.47.232)
[02:53:36] *** Quits: ssh073 (~serg073@79.164.47.232) (Client Quit)
[02:55:00] *** Joins: ssh073 (~serg073@gateway/tor-sasl/serg073)
[02:55:22] *** Quits: SobiX (~SobiX@83.120.25.60) (Ping timeout: 250 seconds)
[02:58:16] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[03:07:15] *** Joins: SobiX (~SobiX@109-236-83-102.hosted-by-worldstream.net)
[03:14:07] *** Joins: guest111 (6dec5366@67.205.143.82)
[03:14:29] *** Quits: guest111 (6dec5366@67.205.143.82) (Client Quit)
[03:16:42] *** Parts: SobiX (~SobiX@109-236-83-102.hosted-by-worldstream.net) ()
[03:26:29] <John_Ivan> ox1eef, it may be but I still hate it :)
[03:31:10] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.236) (Ping timeout: 272 seconds)
[03:33:48] *** Joins: freeworld (~freeworld@chello085216193138.chello.sk)
[03:33:54] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[03:51:41] *** Quits: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net) (Quit: Textual IRC Client: www.textualapp.com)
[03:57:13] *** Joins: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net)
[04:02:55] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[04:03:35] *** Joins: hololeap (~hololeap@user/hololeap)
[04:16:35] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[04:18:29] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Ping timeout: 246 seconds)
[04:20:19] *** Joins: hololeap (~hololeap@user/hololeap)
[04:41:09] <John_Ivan> weaksauce, success!
[04:41:19] <John_Ivan> sigh. finally. got a list of what I'm missing.
[04:41:27] <John_Ivan> about 157 movies
[04:41:59] <weaksauce> good stuff man
[04:43:41] <John_Ivan> weaksauce, now to write an indexer xD
[04:43:54] <John_Ivan> which actually sorts my movies in their own directories with their titles curated
[04:44:05] <John_Ivan> but there's time for that next week
[04:44:14] <John_Ivan> I am so happy atm and I think I deserve a break
[04:44:22] <weaksauce> solid
[04:46:37] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 240 seconds)
[04:47:30] <John_Ivan> weaksauce, 4246 movies are in my collection
[04:47:36] <John_Ivan> :>
[05:04:45] *** Quits: hellstabber (~hellstabb@178.233.17.95) (Quit: Textual IRC Client: www.textualapp.com)
[05:08:52] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[05:16:56] *** Quits: freeworld (~freeworld@chello085216193138.chello.sk) (Ping timeout: 246 seconds)
[05:23:28] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[05:35:43] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[05:37:43] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:44:29] *** Joins: roadie (~user@pd956924f.dip0.t-ipconnect.de)
[06:39:06] *** Joins: favadi (~favadi@2001:ee0:4081:6914:f0a0:8a5a:3250:c05d)
[06:40:09] *** Joins: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr)
[06:43:42] *** Quits: favadi (~favadi@2001:ee0:4081:6914:f0a0:8a5a:3250:c05d) (Client Quit)
[06:48:12] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:48:37] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[07:09:38] *** Quits: John_Ivan (~John_Ivan@user/john-ivan/x-1515935) (Ping timeout: 260 seconds)
[07:12:10] *** Quits: Tempesta (Tempesta@user/tempesta) (Read error: Connection reset by peer)
[07:12:10] *** Joins: Tempesta (Tempesta@183.98.39.112)
[07:12:14] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[07:12:14] *** Joins: Tempesta (Tempesta@user/tempesta)
[07:18:14] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:28:51] *** Quits: roadie (~user@pd956924f.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[07:30:03] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[07:31:24] *** Joins: hololeap (~hololeap@user/hololeap)
[07:55:31] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 260 seconds)
[07:56:37] *** Joins: work (uid44037@id-44037.tinside.irccloud.com)
[08:10:28] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[08:16:48] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[08:21:55] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[10:15:31] *** Quits: Thanzex (~Thanzex@37.103.241.128) (Read error: Connection reset by peer)
[10:15:45] *** Joins: Thanzex (~Thanzex@37.103.241.128)
[10:20:00] <mooff> the DATA feature feels quite elegant, i just wish it worked across files out of the box
[10:21:20] *** Quits: work (uid44037@id-44037.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:32:51] *** Joins: favadi (~favadi@2001:ee0:4081:6914:cd1f:b863:1ee0:5ec0)
[10:32:56] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[10:36:43] *** Quits: davidw (~davidw@h72-35-148-100.bendor.broadband.dynamic.tds.net) (Ping timeout: 260 seconds)
[10:42:05] *** Quits: reset (~reset@user/reset) (Quit: reset)
[11:27:51] *** Quits: favadi (~favadi@2001:ee0:4081:6914:cd1f:b863:1ee0:5ec0) (Ping timeout: 260 seconds)
[11:42:58] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[11:54:33] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[12:10:08] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[12:10:21] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:15:50] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[12:18:48] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[12:44:12] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:00:32] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[13:06:07] *** Joins: infinityfye (~infinityf@156.212.23.239)
[13:09:49] *** Joins: favadi (~favadi@2001:ee0:4081:6914:d88a:4c53:9c43:b2f2)
[13:10:04] *** Quits: favadi (~favadi@2001:ee0:4081:6914:d88a:4c53:9c43:b2f2) (Client Quit)
[13:21:26] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 272 seconds)
[13:30:06] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: You have been kicked for being idle)
[13:30:31] *** Quits: Tempesta (Tempesta@user/tempesta) (Read error: Connection reset by peer)
[13:36:51] *** Joins: favadi (~favadi@2001:ee0:4081:6914:3862:6163:82e5:5f7a)
[13:50:23] *** Quits: liam1 (~liam@cpc104498-sgyl40-2-0-cust215.18-2.cable.virginm.net) (Quit: WeeChat 3.4.1)
[14:07:54] *** Joins: freeworld (~freeworld@chello085216193138.chello.sk)
[14:18:25] *** Joins: Tempesta (~Tempesta@user/tempesta)
[14:25:53] *** Joins: Rounin (~david@84.212.130.215)
[14:40:27] *** Quits: jpn (~jpn@user/jpn) (Quit: leaving)
[14:54:05] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 246 seconds)
[14:56:36] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 240 seconds)
[15:05:37] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:27:15] *** Joins: crundar (~crundar@209.6.70.191)
[15:41:43] *** Quits: favadi (~favadi@2001:ee0:4081:6914:3862:6163:82e5:5f7a) (Ping timeout: 260 seconds)
[16:53:36] *** Joins: seifeslimene (~seifeslim@102.156.121.226)
[17:25:02] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[17:27:23] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 246 seconds)
[17:31:14] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.236)
[17:37:32] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.236) (Ping timeout: 246 seconds)
[17:43:15] *** Quits: crundar (~crundar@209.6.70.191) (Quit: Client closed)
[17:43:49] *** Quits: seifeslimene (~seifeslim@102.156.121.226) (Quit: Client closed)
[17:45:36] *** Joins: seifeslimene (~seifeslim@102.156.121.226)
[17:46:13] *** Quits: seifeslimene (~seifeslim@102.156.121.226) (Write error: Broken pipe)
[17:47:35] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[17:53:59] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 246 seconds)
[17:57:00] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[17:57:04] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Client Quit)
[18:01:43] *** Joins: seifeslimene (~seifeslim@102.156.121.226)
[18:13:37] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[18:39:43] *** Joins: davidw (~davidw@h72-35-148-100.bendor.broadband.dynamic.tds.net)
[18:39:55] *** Quits: ssh073 (~serg073@gateway/tor-sasl/serg073) (Ping timeout: 240 seconds)
[18:43:00] *** Joins: roadie (~user@2a02:8108:5a40:1d87:21ab:7de7:1bdc:49f1)
[18:51:12] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[18:51:41] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[18:55:50] *** Joins: John_Ivan (~John_Ivan@user/john-ivan/x-1515935)
[19:23:59] *** Joins: infinity_fye (~infinityf@156.212.23.239)
[19:25:15] *** Quits: infinityfye (~infinityf@156.212.23.239) (Killed (NickServ (GHOST command used by infinity_fye)))
[19:26:09] *** Joins: infinityfye_ (~infinityf@156.212.23.239)
[19:27:38] *** infinityfye_ is now known as infinityfye
[19:29:55] *** Quits: infinity_fye (~infinityf@156.212.23.239) (Ping timeout: 260 seconds)
[19:37:23] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.236)
[19:38:54] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[19:45:14] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.236) (Ping timeout: 272 seconds)
[19:45:27] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[19:50:58] *** Joins: jpn (~jpn@user/jpn)
[19:53:48] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Ping timeout: 260 seconds)
[19:55:26] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[19:56:08] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[19:57:26] *** Joins: reset (~reset@user/reset)
[20:02:07] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 260 seconds)
[20:04:45] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.236)
[20:07:55] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[20:14:22] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.236) (Ping timeout: 272 seconds)
[20:15:23] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[20:22:23] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Ping timeout: 256 seconds)
[20:26:24] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[20:26:40] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[20:34:59] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 246 seconds)
[20:37:12] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[20:38:53] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[20:43:39] *** Quits: infinityfye (~infinityf@156.212.23.239) (Ping timeout: 260 seconds)
[20:43:55] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 256 seconds)
[20:44:39] *** Joins: infinityfye (~infinityf@41.45.232.88)
[20:46:00] *** Quits: infinityfye (~infinityf@41.45.232.88) (Client Quit)
[20:48:02] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[20:55:32] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 272 seconds)
[20:58:47] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[21:05:35] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 260 seconds)
[21:06:44] *** Joins: markong (~kvirc@213.146.188.203)
[21:09:34] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[21:13:00] *** Quits: roadie (~user@2a02:8108:5a40:1d87:21ab:7de7:1bdc:49f1) (Ping timeout: 240 seconds)
[21:16:13] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 256 seconds)
[21:20:00] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[21:22:40] *** Joins: roadie (~user@2a02:8108:5a40:1d87:21ab:7de7:1bdc:49f1)
[21:27:08] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 260 seconds)
[21:30:26] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[21:36:56] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Ping timeout: 246 seconds)
[21:39:13] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.236)
[21:44:18] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.236) (Ping timeout: 272 seconds)
[21:46:44] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[21:50:56] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 246 seconds)
[21:51:00] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[21:51:38] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Ping timeout: 260 seconds)
[21:52:34] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[21:58:17] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 246 seconds)
[21:59:00] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Ping timeout: 240 seconds)
[22:03:17] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[22:12:19] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Ping timeout: 260 seconds)
[22:14:24] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.236)
[22:16:08] *** Quits: davidw (~davidw@h72-35-148-100.bendor.broadband.dynamic.tds.net) (Ping timeout: 246 seconds)
[22:17:20] *** Joins: jpn (~jpn@user/jpn)
[22:19:07] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.236) (Ping timeout: 256 seconds)
[22:27:07] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Read error: Connection reset by peer)
[22:27:35] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[22:28:08] *** Joins: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:6530:dd29:f015:cdc7)
[22:29:53] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[22:34:48] *** Quits: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:6530:dd29:f015:cdc7) (Ping timeout: 260 seconds)
[22:36:50] *** Joins: jpn (~jpn@user/jpn)
[22:38:39] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[22:39:01] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:39:28] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[22:40:51] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Client Quit)
[22:45:38] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[22:52:27] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[22:53:34] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:55:04] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[22:58:37] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Quit: %bye mirc%)
[23:02:05] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[23:04:08] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:09:31] *** Joins: jpn (~jpn@user/jpn)
[23:14:59] *** Joins: vvn (~vivien@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[23:16:07] <vvn> hi developers -- who able to provide a one-liner which create a 64K blob file full of ones (0xff)?
[23:16:15] <vvn> who's* able
[23:16:59] <vvn> i.e. a ruby equivalent to memset
[23:17:02] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 246 seconds)
[23:30:27] <leah2> File.write "ones", "\xff"*64*1024
[23:30:28] <mooff> :: File.open('blob', 'w+') { |f| 64.times { f << "\xFF" * 1024 } }; File.stat('blob').size
[23:30:28] <ruby-eval> => 65536
[23:32:27] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[23:32:34] <vvn> two nice approaches
[23:33:49] *** Joins: hololeap (~hololeap@user/hololeap)
[23:36:49] <weaksauce> huh neat 3.2 has regex timeouts 
[23:44:31] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[23:44:44] <mooff> neat
[23:47:07] *** Joins: fef (~thedawn@user/thedawn)
