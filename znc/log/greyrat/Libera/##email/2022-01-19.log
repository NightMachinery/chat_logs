[00:19:59] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[00:40:41] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Remote host closed the connection)
[00:41:04] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[00:44:30] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Remote host closed the connection)
[00:45:21] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[01:20:42] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Ping timeout: 276 seconds)
[01:49:29] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:52:03] *** Quits: neocron (~NeoCron@p200300c4cf1b4400f695d81d4d068b5c.dip0.t-ipconnect.de) (Quit: Leaving)
[01:52:56] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[02:11:49] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:25:29] *** Quits: MrBech (~MrBech@188-177-25-189-cable.dk.customer.tdc.net) (Quit: Textual IRC Client: www.textualapp.com)
[02:53:09] *** Quits: Duchess (~Duchess@24.109.185.150) (Quit: Client closed)
[03:16:53] *** Joins: Duchess (~Duchess@24.109.185.150)
[03:21:50] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[03:32:09] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 268 seconds)
[03:47:55] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Quit: Client closed)
[03:49:23] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[05:32:10] *** Quits: Khepra (~ratrace@user/ratrace) (Quit: leaving)
[05:58:56] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[06:08:35] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Read error: Connection reset by peer)
[06:09:22] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[07:58:49] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:14:48] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a)
[08:15:04] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[10:07:39] *** Quits: furrymcgee (~devuan@cgn-89-1-208-165.nc.de) (Ping timeout: 256 seconds)
[10:08:20] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[10:14:58] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[10:28:20] *** Joins: fsg (^^@2600:3c00::f03c:92ff:fec6:da18)
[10:32:52] <fsg> guys, will my postfix server work on the internet with a self-signed certificate?
[11:17:44] *** Joins: chuck48 (~chuck48@2a03:1b20:9:f011::a04d)
[11:23:25] <jaybe> why would it not
[11:26:14] *** Parts: pagios- (~pagios@life.is-a.beauty) ()
[11:26:33] *** Quits: chuck48 (~chuck48@2a03:1b20:9:f011::a04d) (Remote host closed the connection)
[11:29:31] <bookworm> because in any normal and sane protocol you abort if the TLS  cert is invalid and the channel hence not properly authenticated
[11:29:48] <bookworm> email however isn't a sane protocol so here we are ;)
[11:29:55] <colo> welcome to the fun world of SMTP :)
[11:30:06] <koollman> yeah, I was about to say that only applies to sane protocols ;)
[11:30:31] <jaybe> it's common sense breaking it down though. servers talking to servers = deliverability
[11:30:44] <jaybe> so it's common to allow 'whatever' on port 25 smtp server to server
[11:30:45] <colo> (otoh, it certainly does no harm to have your server's TLS cert carry the signature of an established CA)
[11:30:48] <bookworm> yeah and? That's not common sense at all
[11:31:15] <bookworm> common sense is to only deliver when you have a t least the notion of talking to the proper server
[11:31:31] <jaybe> you may desire a 'valid' cert (self signed certs can be 'valid' also) for clients connecting for submission and or smtps
[11:31:43] <bookworm> alas, considering that the fallback is plain and Must in RFC speak it can't get much worse so
[11:31:54] <jaybe> try and relax and maybe just be calm
[11:31:55] <jaybe> :)
[11:32:02] <bookworm> I am calm
[11:32:05] <jaybe> it's not an atrocity; it's common sense really
[11:32:10] <bookworm> it's not
[11:32:15] <jaybe> do you have a question?
[11:32:43] <bookworm> if it's signed by a CA not in your cert store and hence invalid the TLS protection is worthless as anyone can mitm it
[11:33:03] <jaybe> a self signed cert can be invalid or valid
[11:33:06] <koollman> not anyone. it's still harder to intercept than cleartext :)
[11:33:07] <bookworm> so I strongly disagree with your sentiment that it's common sense
[11:33:25] <jaybe> i feel you may be failing to properly perceive what is necessary to see it really is common sense
[11:33:34] <bookworm> it doesn't matter who signed it, either ypu have the CA in your trust store or you don't
[11:34:23] <jaybe> not exactly; a self signed cert can be published to your clients at Noon; they can connect at 12:01 and get the 'self signed and not valid' "warning".  they can verify the fingerprint, call you on the phone, and 'accept' the [self signed] cert.  it is not 'valid' [to them].
[11:34:43] <jaybe> going forward, it will be valid,  unless it changes
[11:35:07] *** Quits: rgrinberg (~textual@2806:101e:7:2b:e402:caf0:4534:e84a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:35:08] <jaybe> if it changes, the clients would then be prompted and warned again about accepting (again) [for the 'new' presented cert]
[11:35:25] <bookworm> sure but chances are random servers on the internet won't fo that
[11:35:36] <jaybe> s/it is *now* valid to them   #typo 
[11:35:55] <jaybe> servers talking to other servers where deliverability is everything... means... opportunistic.
[11:36:14] <jaybe> you *can* chose to "turn off" and "turn away" those that "can't" perform to your standards
[11:36:22] <jaybe> but you'll be taking risks and intruding on deliverability
[11:37:47] <bookworm> in any case, yes in the case of email a cert not signed by a recognized CA is usually accepted by the delivering mailserver. No it isn't sane, but as said you MUST fallback to plain text as per the RFC so any encryption on top of that is better than the alternative. But it's still a non authenticated tunnel and anyone who can intercept the TLS
[11:37:47] <bookworm> handshake can mitm it
[11:38:06] <jaybe> it's called smtp; yes
[11:38:18] <jaybe> anything plain text can be 'mitm'
[11:38:40] <bookworm> yeah? Anything O said contradicting that?
[11:39:10] <bookworm> I'm not saying use plain text am I?
[11:39:18] <jaybe> i have no idea what you're saying at this point.
[11:41:50] <fsg> I'm still learning from the tls readme, just wanted to be sure most domains would deliver without recognizing my certificate
[11:43:17] <fsg> actually  most/any
[11:43:52] <bookworm> I'm having issues with your statement that "it's common sense and deliverability and so forth" (paraphrasing) when in fact it's horrible and only exists because the protocol is old and TLS was essentially put band aid style on top. Yes, we're here due to historical reasons and smtp is the way it is. But "common sense" has nothing to do with it 
[11:44:38] <bookworm> common sense in any modern protocol is to auth the TLS properly as a connecting client
[11:45:22] <bookworm> (http, matrix, heck, IRC managed to do it)
[11:51:31] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[11:59:33] <jaybe> [you]  ----------------------------------------------------------------------------- [the points]
[12:00:27] <jaybe> if you have client(s) that you want to *not* have to see a warning, review the fingerprint, verify it with you, then accept it, ... then you could use a 'real cert' for client mail submission
[12:04:28] <bookworm> who said I was referring to clients? Server to server has the exact same problem and no you won't be "reviewing the fingerprint" for gmails servers anytime soon ;P
[12:05:07] <bookworm> (and yes I am aware that it gets ignored server side, still a protocol level flaw)
[12:05:53] <jaybe> well, you did; you said it  lol
[12:06:05] <bookworm> in server to server traffic one side is the connecting client my dear
[12:06:10] * jaybe lols and laters &
[12:08:42] * jm18 is beyond confused
[12:10:50] <bookworm> I was talking purely about server to server MTAs (if my terminology is somewhat correct) while they were referring to MUAs ("clients" as in humans)
[12:11:11] <bookworm> hence we weren't actually talking about the same thing I guess
[12:12:02] <bookworm> my "client" was meant as "server initiating the connection to another server to hand over email for transfer"
[12:12:32] <bookworm> which is a mouthful... hence client as in that case it indeed acts as the client in the protocol
[12:12:44] <bookworm> which is confusing in hindsight
[12:13:51] <bookworm> I was talking about smtp on port 22, not submission(s)
[12:14:20] <bookworm> 25*
[12:34:32] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[13:11:23] *** Quits: Duchess (~Duchess@24.109.185.150) (Quit: Client closed)
[13:26:27] *** Parts: dob1 (~dob1@user/dob1) (Leaving)
[13:26:33] *** Joins: dob1 (~dob1@user/dob1)
[14:07:20] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[14:36:16] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Ping timeout: 256 seconds)
[14:50:12] *** Joins: Khepra (~ratrace@user/ratrace)
[15:45:17] *** Joins: furrymcgee (~devuan@cgn-89-1-208-165.nc.de)
[15:56:07] *** Joins: pajamian (~pj@ghettoforge/pj)
[15:56:55] *** pj is now known as Guest1200
[15:56:55] *** pajamian is now known as pj
[15:59:02] *** Quits: Guest1200 (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[16:12:41] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[16:13:02] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[16:13:02] *** Joins: Hash_ (~Hash@hashsecurity.org)
[16:13:31] *** Joins: phryk_ (~totallyno@user/phryk)
[16:14:21] *** Joins: [Pokey] (~pokey@spikeyCactus/hoosky)
[16:15:01] *** Joins: __NiC (~kristian@aeryn.ronningen.no)
[16:15:35] *** Joins: tokudan__ (~tokudan@user/tokudan)
[16:16:06] *** Quits: avril (av@user/avril) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: bremner (~bremner@notmuch/developer/bremner) (Ping timeout: 240 seconds)
[16:16:06] *** |avril is now known as avril
[16:16:06] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: _NiC (~kristian@aeryn.ronningen.no) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29) (Ping timeout: 240 seconds)
[16:16:06] *** Quits: tokudan_ (~tokudan@user/tokudan) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: phryk (~totallyno@user/phryk) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Pokey (~pokey@spikeyCactus/hoosky) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: tscott (~tscott@user/tscott/x-3602077) (Ping timeout: 240 seconds)
[16:16:07] *** Quits: Hash (~Hash@hashsecurity.org) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: andr01d (~andr01d@johnea.net) (Ping timeout: 240 seconds)
[16:16:08] *** Quits: weyhmueller (~weyhmuell@blofeld.nc.w9r.de) (Ping timeout: 240 seconds)
[16:16:22] *** andr01d- is now known as andr01d
[16:17:05] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[16:17:53] *** Server sets mode: +nt 
[16:20:31] *** Quits: [Pokey] (~pokey@spikeyCactus/hoosky) (Ping timeout: 256 seconds)
[16:20:57] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[16:23:51] *** Pokey is now known as [Pokey]
[16:23:53] *** [Pokey] is now known as Pokey
[16:23:55] *** Pokey is now known as _Pokey_
[16:23:57] *** _Pokey_ is now known as __Pokey__
[16:24:04] *** __Pokey__ is now known as [Pokey]
[16:26:56] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[16:28:29] *** Quits: [Pokey] (~pokey@spikeyCactus/hoosky) (Quit: Hecc! My server must have died!)
[16:29:48] *** Joins: Pokey (~pokey@spikeyCactus/hoosky)
[16:33:12] *** Joins: weyhmueller (~weyhmuell@blofeld.nc.w9r.de)
[16:57:32] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[17:10:51] *** Joins: pj (~pj@ghettoforge/pj)
[17:16:18] *** Joins: bremner (~bremner@notmuch/developer/bremner)
[17:26:15] *** hnj is now known as henk
[18:20:43] *** phryk_ is now known as phryk
[18:41:52] *** Joins: dob1_ (~dob1@user/dob1)
[18:42:58] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 268 seconds)
[19:28:51] *** Joins: minimal (~minimal@user/minimal)
[19:29:01] *** Joins: zap1 (~zap@gateway/tor-sasl/zap)
[19:29:36] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Remote host closed the connection)
[19:33:56] *** zap1 is now known as zap
[20:49:38] *** Joins: rgrinberg (~textual@2806:101e:7:2b:e4cc:85d6:c1e8:8785)
[21:33:06] *** Quits: derpadmin (~Anonymous@homebase.200013.net) (Quit: Lost terminal)
[21:57:54] *** Quits: jotik (~J@user/jotik) (Quit: jotik)
[21:58:08] *** Joins: MrBech (~MrBech@152.115.67.90)
[21:58:10] *** Joins: jotik (~J@user/jotik)
[22:02:47] *** Quits: furrymcgee (~devuan@cgn-89-1-208-165.nc.de) (Ping timeout: 256 seconds)
[22:40:43] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[22:40:48] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[23:11:09] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[23:11:52] *** Joins: acidsys (~LSD@2.lsd.systems)
[23:26:31] <jaybe> a server is a server. a client is a client. smtp uses servers to talk to servers.
[23:26:35] <jaybe> smtp. port 25.
[23:27:02] <jaybe> a client is typically a user or a process that connects to retrieve and or send (submit) mail for processing.
