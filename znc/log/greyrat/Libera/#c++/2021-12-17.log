[00:03:08] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[00:04:43] <Alipha> zz: the answer on https://gcc.gnu.org/bugzilla/show_bug.cgi?id=103733 doesn't make sense to me. and i redid your proof of concept code to properly use memcmp: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=103733
[00:06:34] <zz> Thanks for looking over it.
[00:08:28] *** Joins: gothicserpent (~gothicser@204.152.215.249)
[00:13:08] *** Joins: badone (~badone@209.132.189.152)
[00:13:25] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93)
[00:14:32] *** Joins: Everything (~Everythin@37.115.210.35)
[00:14:45] <Everything> Hi all. What are your favorite C++ projects that can be used as a good/mature role models?
[00:15:07] <zz> gzdoom
[00:18:35] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93) (Ping timeout: 252 seconds)
[00:23:38] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community https://indiedevs.net/)
[00:32:48] *** Joins: Inline__ (~Inline@aftr-37-201-240-204.unity-media.net)
[00:32:51] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Read error: Connection reset by peer)
[00:34:47] *** Inline__ is now known as Inline
[00:38:41] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 245 seconds)
[00:42:01] *** Joins: vuks_ (~Vuks69@87-206-7-209.dynamic.chello.pl)
[00:43:01] *** Joins: Viewday112 (~Viewday@user/viewday)
[00:43:09] *** Quits: vuks_ (~Vuks69@87-206-7-209.dynamic.chello.pl) (Remote host closed the connection)
[00:43:15] *** Quits: vuks (~Vuks69@87-206-7-209.dynamic.chello.pl) (Quit: Leaving)
[00:43:38] *** Joins: vuks (~Vuks69@87-206-7-209.dynamic.chello.pl)
[00:44:57] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[00:44:57] *** Viewday112 is now known as Viewday11
[00:45:31] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[00:46:35] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93)
[00:51:50] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93) (Ping timeout: 260 seconds)
[00:53:09] *** Quits: miklcct (~quassel@vps2.miklcct.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:53:45] *** Joins: miklcct (~quassel@vps.miklcct.com)
[00:53:52] <imMute> Boost?
[00:54:31] *** Quits: nshire (~nshire@user/nshire) (Read error: Connection reset by peer)
[00:54:50] *** Joins: nshire (~nshire@user/nshire)
[00:58:10] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.136.184) (Quit: Connection closed)
[01:00:28] <rpav> i feel like any sufficiently-mature project is also sufficiently crusty as to not serve as a particularly excellent role model
[01:00:56] <rpav> like by the time you get far enough along on anything, you've discovered a bunch of ways to do it better the next time, so definitely don't do it this way
[01:01:05] <kalven> but there's something to be learned from that as well
[01:01:42] <kalven> real world projects eventually have to deal with the real world, and then you get crust
[01:01:58] <rpav> you can learn from things, no doubt
[01:02:20] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:226:6685:3dd4:7093) (Quit: Leaving)
[01:05:36] *** Joins: jokoon (~eio@2a01:e0a:542:e160:c19a:105d:2d96:4657)
[01:14:48] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:8c85:3d90:d3c9:3f6b)
[01:15:35] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[01:15:43] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93)
[01:16:15] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:8c85:3d90:d3c9:3f6b) (Read error: Connection reset by peer)
[01:17:01] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:8c85:3d90:d3c9:3f6b)
[01:17:10] *** Quits: Leone (~Leo@69-165-148-197.dsl.teksavvy.com) (Read error: Connection reset by peer)
[01:17:26] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:8c85:3d90:d3c9:3f6b) (Ping timeout: 252 seconds)
[01:18:29] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:20:59] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[01:24:09] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93) (Ping timeout: 268 seconds)
[01:27:27] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 256 seconds)
[01:31:52] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:32:02] *** cryptonull is now known as eck
[01:36:40] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[01:36:43] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[01:38:45] *** Joins: Pook (~Pook@2001:8a0:f996:1400:d154:3eb:6a88:2031)
[01:38:48] *** Joins: Pook_ (~Pook@2001:8a0:f996:1400:d154:3eb:6a88:2031)
[01:38:55] *** Quits: Pook_ (~Pook@2001:8a0:f996:1400:d154:3eb:6a88:2031) (Remote host closed the connection)
[01:39:36] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:39:44] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:39:44] *** ChanServ sets mode: +v npaperbot
[01:44:29] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:47:04] *** Quits: jokoon (~eio@2a01:e0a:542:e160:c19a:105d:2d96:4657) (Quit: Leaving)
[01:49:44] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[01:51:07] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93)
[01:51:07] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:55:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93) (Ping timeout: 240 seconds)
[01:55:55] *** Joins: ditiris (~ditiris@rrcs-98-6-97-186.sw.biz.rr.com)
[01:56:32] <CarloWood> Why is this not printing 1234 ?
[01:56:35] <CarloWood> { f(1, 2, 3, 4); } template<typename Arg1, typename... Args> void f(Arg1 arg1, Args... args) { cout << arg1 << (args << ...); }
[01:56:35] <geordi> 1131072
[01:56:58] <CarloWood> Oh... it's doing left shifts...
[01:57:09] <CarloWood> How can I make this work :/
[02:01:08] <kalven> { f(1, 2, 3, 4); } template<typename... Args> void f(Args... args) { (cout << ... << args); }
[02:01:08] <geordi> 1234
[02:02:37] *** Quits: jplejacq (~jplejacq@24.224.90.176) (Ping timeout: 240 seconds)
[02:03:22] *** Joins: pulse (~pulse@user/pulse)
[02:03:57] <Raziel> { f(1, "c", 'd', std::vector<float>{0.5f, 0.33f}); } template<typename... Args> void f(Args... args) { (cout << ... << args); }
[02:03:58] <geordi> 1cd{0.5, 0.33}
[02:04:04] <CarloWood> kalven: ok.. well, what I really need is put a comma inbetween each :/
[02:04:59] <CarloWood> { f(1, 2, 3, 4); } template<typename... Args> void f(Args... args) { (cout << ... << ", " << args); }
[02:04:59] <geordi> error: no unexpanded parameter packs in binary fold
[02:05:02] <zz> I forgot how to incantate entire exprs
[02:05:12] <zz> like  (0, (cout<<b)...)) or smth
[02:05:24] <CarloWood> { f(1, 2, 3, 4); } template<typename... Args> void f(Args... args) { (cout << ", " << ... << args); }
[02:05:25] <geordi> , 1234
[02:06:17] <CarloWood> { f(1, 2, 3, 4); } template<typename Arg1, typename... Args> void f(Arg1 arg1, Args... args) { cout << arg1; (cout << ... << args); }
[02:06:18] <geordi> 1234
[02:06:55] <CarloWood> So, the args... should be expanded to: , 2, 3, 4
[02:07:16] <kalven> { f(1, 2, 3, 4); } template<typename... Args> void f(Args... args) { ((void)(cout << ", " << args), ...); }
[02:07:17] <geordi> , 1, 2, 3, 4
[02:07:22] * kalven hides
[02:08:33] <CarloWood> { f(1, 2, 3, 4); } template<typename Arg1, typename... Args> void f(Arg1 arg1, Args... args) { cout << arg1; ((cout << ", " << args), ...); }
[02:08:33] <geordi> error: no match for 'operator<<' in 'operator<< <char_traits<char> >((* & o), ((const char*)", ")) << t' (operand types are 'ostream' and 'const ostream')
[02:08:41] <CarloWood> { f(1, 2, 3, 4); } template<typename Arg1, typename... Args> void f(Arg1 arg1, Args... args) { cout << arg1; ((void)(cout << ", " << args), ...); }
[02:08:42] <geordi> 1, 2, 3, 4
[02:08:56] <CarloWood> I have no idea what is going on here :/...
[02:09:05] <kalven> that's your ideal code though, isn't it?
[02:09:10] <CarloWood> yes
[02:09:17] <kalven> :thumbsup
[02:09:45] <zz> {f(1,2,3);}template<typename A,typename...B> void f(A a,B...b){using L=int[];(void)L{0, ((void)(cout << a), 0), ((void)(cout << "," << b), 0)...}; }
[02:09:46] <geordi> 1,2,3
[02:09:48] <zz> There.
[02:09:58] <CarloWood> I tried it on #geordi and got the "error: no match for 'operator<<' in 'operator<< <char_traits<char> >((* & o), ((const char*)", ")) << t' (operand types are 'ostream' and 'const ostream')" error too, but I have no idea what it means... so it never occurred to me that all I needed extra was a (void) cast.
[02:10:19] *** Joins: calm-steam (~calm-stea@2a02:810a:980:1400:5f98:3a66:b46d:598d)
[02:10:25] *** Quits: ditiris (~ditiris@rrcs-98-6-97-186.sw.biz.rr.com) (Ping timeout: 256 seconds)
[02:10:34] <kalven> note that geordi has some operator, overloading for streams.. so that may play a part here
[02:10:56] <kalven> { cout,1,2,3; }
[02:10:56] <geordi> , 1, 2, 3
[02:11:26] *** Joins: seninha (~seninha@user/seninha)
[02:11:45] <zz> that operator, overload in geordi surely isn't helping
[02:11:52] <zz> (since it emits a leading comma now)
[02:12:36] <zz> {f(1,2,3);}template<typename A,typename...B> void f(A a,B...b){((void)(cout << a), 0), ((void)(cout << "," << b), 0); }
[02:12:36] <geordi> error: parameter packs not expanded with '...':
[02:12:55] <zz> Anyway, back to serious work.
[02:17:37] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[02:19:28] *** Joins: fbiagent__ (~fbiagent@user/fbiagent)
[02:19:37] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 240 seconds)
[02:22:25] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Ping timeout: 256 seconds)
[02:24:37] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[02:24:48] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93)
[02:27:26] *** Quits: proller (~p@2a02:6b8:b081:a428::1:24) (Ping timeout: 245 seconds)
[02:33:45] *** Quits: pizdets (~pizdets@183.182.110.46) (Ping timeout: 256 seconds)
[02:34:11] *** Joins: pizdets_ (~pizdets@183.182.111.251)
[02:34:51] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:37:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93) (Ping timeout: 240 seconds)
[02:37:51] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[02:38:49] *** Joins: spithash (~spithash@user/spithash)
[02:42:34] *** Joins: proller (~p@2a02:6b8:b081:8806::1:34)
[02:42:51] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[02:44:38] *** Quits: magla (~gelignite@55d46610.access.ecotel.net) (Quit: Stay safe!)
[02:47:18] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:51:53] *** Quits: Linux77 (~LinuMage@186.233.183.58) (Ping timeout: 256 seconds)
[02:56:14] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[02:58:27] <PJBoy> { f(1, 2, 3, 4); } void f(auto arg, auto... args) { cout << arg; (void((cout, args)), ...); }
[02:58:28] <geordi> 1, 2, 3, 4
[03:00:12] <PJBoy> { f(1, 2, 3, 4); } void f(auto arg, auto... args) { ((cout << arg), ..., args); }
[03:00:12] <geordi> 1, 2, 3, 4
[03:00:15] <PJBoy> ok I'm done
[03:02:46] <kalven> geordi-isms
[03:03:24] *** Joins: ferdna (~ferdna@user/ferdna)
[03:07:37] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 240 seconds)
[03:09:12] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:09:31] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[03:09:55] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93)
[03:10:15] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[03:12:04] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 268 seconds)
[03:16:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93) (Ping timeout: 240 seconds)
[03:18:25] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:19:17] *** Joins: Guest36 (~Guest36@204.246.162.34)
[03:19:28] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Quit: Leaving)
[03:20:47] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 256 seconds)
[03:25:24] <zz> {f(1,2,3);}void f(auto... a){((cout<<""),...,a);}
[03:25:25] <geordi> , 1, 2, 3
[03:25:56] <zz> that not a gerodi-ism though, that "," is not overloaded.
[03:29:00] <PJBoy> I mean, it is
[03:29:21] <PJBoy> can't tell if that was a serious comment or not
[03:30:15] *** Quits: bebyx (~Thunderbi@user/bebyx) (Quit: bebyx)
[03:30:44] <zz> No really, that part there compiles under non-geordi g++, while "cout,1,2,3" does not.
[03:31:03] <zz> (well I guess cout,1,2,3 also compiles, but it would not output anything)
[03:31:27] <PJBoy> compiles, sure
[03:37:53] *** Joins: bebyx (~Thunderbi@user/bebyx)
[03:37:57] *** Quits: daswf852 (~daswf852@user/daswf852) (Ping timeout: 240 seconds)
[03:41:16] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[03:42:09] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93)
[03:51:08] *** Joins: jplejacq (~jplejacq@24.224.100.40)
[03:54:56] *** Joins: FergusL (~freenode4@user/fergusl)
[04:02:04] <FergusL> Hi. I'm banging my head on a wall trying to simplify this code: https://github.com/VCVRack/VCV-Prototype/tree/v2/src here I want to make a much much simpler version with just the LuaJIT part. This code is structured with factories to generate script engines on the fly which I want to get rid off. How can I simplify that so that I can only have my
[04:02:04] <FergusL> main file and the LuaJITEngine file? I run into a dependency loop because without the factories that abstract the engine through templates, I need to explicitly specify the type of each one mutually (files of interest are Prototype.cpp ScriptEngine.hpp and LuaJITEngine.cpp
[04:03:26] <CarloWood> dependency loop?
[04:05:19] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:8c85:3d90:d3c9:3f6b)
[04:06:29] <FergusL> the module object needs to know the engine type and the engine object needs to know the module type, mutually dependent would have been better put maybe
[04:06:32] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:21a3:4bf2:b994:55b1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:07:13] <CarloWood> k - I might have written an answer here (if that is your question): https://stackoverflow.com/a/69873866/1487069
[04:07:56] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:8c85:3d90:d3c9:3f6b) (Ping timeout: 252 seconds)
[04:08:27] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:08:49] *** Quits: calm-steam (~calm-stea@2a02:810a:980:1400:5f98:3a66:b46d:598d) (Ping timeout: 268 seconds)
[04:09:06] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:11:37] <FergusL> thanks, that'd be an interesting read! but I'm not sure it applies, I only have one header file
[04:14:11] *** Joins: nostar (~nostar@68.51.221.108)
[04:15:24] <CarloWood> It's a long read, but the TL;DR is basically near the bottom - scroll down and look for A.h: and B.h:
[04:15:54] <CarloWood> This is definitely about two headers - but that under the assumption that you define one class per header.
[04:16:53] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 256 seconds)
[04:17:28] <CarloWood> If you have one header and two or more classes that use eachother - then you still have the same problem. Start with putting each class in their own header and separating the class definition (that doesn't generate code) from the member function definitions (inline functions or template functions - aka all member functions when the class is a template).
[04:18:40] <CarloWood> Here is a simple example for two classes A and B that use eachother: https://wandbox.org/permlink/wWV0AsyFhcZCYGW4
[04:19:03] <CarloWood> But you have to understand what is going on to solve your own problem. Can't fix it without knowing what you're doing.
[04:23:14] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 260 seconds)
[04:25:10] <CarloWood> Oh wow - someone just gave the first vote to https://wandbox.org/permlink/wWV0AsyFhcZCYGW4
[04:25:34] <CarloWood> So, I read that again - it contains something that I did figure out in the past and forgot again. I am glad I found it back now :).
[04:26:19] <CarloWood> The rule that I invented and forget is in this paragraph:
[04:26:22] <CarloWood> In order to answer the causality question we follow the following rule: A loop is disallowed (impossible) when it involves a single memory location and the direction of the sb edges is in the same direction everywhere in the loop (the direction of the rf edges is not relevant in that case); or, the loop involves more than one variable, all edges (sb AND rf) are in the same direction and AT MOST one of the variables has one or more
[04:26:22] <CarloWood> rf edges between different threads that are not release/acquire.
[04:27:22] *** Quits: fbiagent__ (~fbiagent@user/fbiagent) (Quit: Leaving)
[04:27:51] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[04:30:12] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[04:30:32] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[04:32:21] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:44:27] *** Quits: rgrinberg (~textual@2806:101e:7:6946:95cc:8d5a:5708:c8d5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:45:34] <FergusL> CarloWood thank you for the detailed write up! I solved the problem with even more basic C++ knowledge: I just made a single hpp that declares everything everyone needs to know, implemented it in a matching cpp file and both the "main" file and the cpp file include the header
[04:45:57] <FergusL> your answer on SO is really 👌 sadly I don't have an SO account
[04:46:08] *** Joins: seninha (~seninha@user/seninha)
[04:46:12] <CarloWood> thank you :)
[04:46:59] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[04:49:31] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 268 seconds)
[04:51:03] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Remote host closed the connection)
[04:51:51] *** Quits: Forsaken87 (~quassel@2a02:908:1867:7d40:93ab:b917:6d2c:4af1) (Ping timeout: 250 seconds)
[04:53:11] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:55:32] *** Joins: Forsaken87 (~quassel@aftr-37-201-195-107.unity-media.net)
[04:56:18] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:58:12] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[05:00:00] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Reconnecting)
[05:00:16] *** Joins: malloy (~jimery@116.30.221.255)
[05:00:33] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[05:06:20] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[05:15:56] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[05:16:25] *** Joins: rajkosto (~rajkosto@178.220.241.244)
[05:17:20] *** Quits: Pook (~Pook@2001:8a0:f996:1400:d154:3eb:6a88:2031) (Quit: Leaving)
[05:29:46] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Remote host closed the connection)
[05:30:08] *** Joins: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch)
[05:30:30] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[05:32:17] *** Quits: jplejacq (~jplejacq@24.224.100.40) (Ping timeout: 240 seconds)
[05:34:02] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 240 seconds)
[05:39:37] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:39:46] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:39:46] *** ChanServ sets mode: +v npaperbot
[05:40:45] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[05:40:59] *** Quits: vuks (~Vuks69@87-206-7-209.dynamic.chello.pl) (Read error: Connection reset by peer)
[05:50:17] *** Quits: rajkosto (~rajkosto@178.220.241.244) (Ping timeout: 240 seconds)
[06:00:46] *** Quits: Dreg (~Dreg@fr33project.org) (Read error: Connection reset by peer)
[06:01:15] *** Joins: Dreg (~Dreg@fr33project.org)
[06:02:26] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[06:03:50] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[06:05:53] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[06:06:46] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[06:07:01] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[06:08:28] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:08:34] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[06:20:25] *** Quits: celphi (sid97751@user/celphi) (Ping timeout: 256 seconds)
[06:20:50] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (Ping timeout: 260 seconds)
[06:21:56] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[06:23:52] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[06:24:01] *** Joins: celphi (sid97751@user/celphi)
[06:26:02] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:8c85:3d90:d3c9:3f6b) (Read error: Connection reset by peer)
[06:26:35] *** Quits: celphi (sid97751@user/celphi) (Max SendQ exceeded)
[06:26:44] *** Joins: celphi (sid97751@user/celphi)
[06:26:48] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:8c85:3d90:d3c9:3f6b)
[06:26:50] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:28:39] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[06:36:43] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Remote host closed the connection)
[06:37:59] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[06:38:20] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[06:43:52] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[06:45:12] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[06:46:23] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:50:20] *** Joins: karakedi (~eAC53C340@user/karakedi)
[06:59:59] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:02:21] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[07:12:28] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[07:16:00] *** Joins: frost (~frost@user/frost)
[07:18:01] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:9d20:9499:4e3c:804c)
[07:21:13] *** Joins: rajkosto (~rajkosto@178-221-120-181.dynamic.isp.telekom.rs)
[07:30:08] *** Joins: rgrinberg (~textual@2806:101e:7:6946:95cc:8d5a:5708:c8d5)
[07:32:45] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:40:16] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:41:05] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:50:57] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[07:51:48] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[07:54:02] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[08:02:54] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:7c88:97e7:7c77:1c93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:08:37] *** Quits: jkaye (~jkaye@2601:281:8300:7530:d672:a7f5:a798:3393) (Ping timeout: 240 seconds)
[08:15:15] *** Quits: sam113101 (~sam@modemcable229.128-202-24.mc.videotron.ca) (Quit: WeeChat 3.2)
[08:17:44] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[08:21:13] *** ormaaj is now known as ormaaj2
[08:24:11] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:21ba:a382:6b6:54c4)
[08:27:07] *** Quits: rajkosto (~rajkosto@178-221-120-181.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[08:27:13] *** Joins: rajkohaxor (~rajkosto@178-221-120-181.dynamic.isp.telekom.rs)
[08:29:55] *** Joins: sam113101 (~sam@modemcable229.128-202-24.mc.videotron.ca)
[08:32:18] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[08:33:15] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[08:45:17] *** Quits: rajkohaxor (~rajkosto@178-221-120-181.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[08:49:35] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[09:09:19] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[09:11:24] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:16:00] <Gamah> are there any builtin libs for processing "config" files persay? besides hand coded string manipulation
[09:19:38] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[09:20:44] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:25:52] *** Joins: slidercrank (~slidercra@user/slidercrank)
[09:26:29] <Alipha> Gamah: nope. Pick your favorite format and google a library for it ;-)
[09:27:04] <Gamah> so now.... i have to learn how to have a dependancy
[09:27:06] <Gamah> hmmm...
[09:27:11] <Gamah> i was really hoping to avoid that.
[09:27:26] <Gamah> am i a jackass of i just do some string parsing BS for a relatively simplistic config file?
[09:28:12] <Alipha> Gamah: nah, I did my own parser of a file with lines containing key=value
[09:28:17] <msk> Gamah: have you checked mini by pulzed ?
[09:28:23] <Gamah> also i forget who was helping me with understanding threading the other night, but seriously thanks again.... all the code i wrote worked basically first time as soon as i realized i had to pass -pthread as a compiler arg
[09:28:38] <Gamah> msk: is it part of the standard?
[09:28:58] *** Joins: Atque (~Atque@user/atque)
[09:29:20] <Alipha> https://github.com/alipha/script_bot/blob/master/src/settings.cpp
[09:29:36] <msk> Gamah: nope. but really tiny INI parser library.
[09:29:58] <Gamah> ok but now i have the actual issue of needing to understand how to have a dependency for my project
[09:30:12] <Gamah> if i'm gonna do that then i'll probably go with json or yaml
[09:30:51] <Gamah> kinda crappy there's no data interchange mechanism in the standard.... has anyone tried proposing one?
[09:31:05] <Gamah> rather, what's the argument for not?
[09:31:57] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[09:33:19] <Alipha> Probably because it opens a can of worms of "which file format"? And then everyone will want their own file format supported
[09:33:46] <Gamah> Alipha: hmm...
[09:33:58] <Gamah> ty for settings.cpp
[09:34:19] <Gamah> license incompatible tho :)
[09:34:27] <Gamah> i might do my own...
[09:35:03] <Gamah> that's also a cocern i have about dependancies....
[09:35:45] <Gamah> but i guess if i just do a dependancy its license only applies to itself....
[09:39:37] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:39:45] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:39:45] *** ChanServ sets mode: +v npaperbot
[09:40:31] <Alipha> Gamah: if you're interested in using my code, just throw a `// by Kevin Spinar (Alipha)` on the top of my code file and you're good (yes, that's more lenient than the MIT license that's officially on it, but I'm giving you permission, so there)
[09:48:12] *** Quits: rgrinberg (~textual@2806:101e:7:6946:95cc:8d5a:5708:c8d5) (Ping timeout: 240 seconds)
[09:49:56] *** Joins: rgrinberg (~textual@2806:101e:7:6946:95cc:8d5a:5708:c8d5)
[10:00:34] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:04:34] *** Quits: letto (~letto@188.26.158.104) (Quit: Konversation terminated!)
[10:06:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[10:06:38] *** Joins: letto (~letto@188.26.158.104)
[10:07:05] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[10:09:05] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:14:04] *** Quits: Guest36 (~Guest36@204.246.162.34) (Quit: Client closed)
[10:16:30] *** Quits: llh (~llh@user/llh) (Ping timeout: 260 seconds)
[10:17:35] *** Quits: malloy (~jimery@116.30.221.255) (Quit: WeeChat 3.0)
[10:18:25] *** Quits: wille (~wille@static.140.85.76.144.clients.your-server.de) (Ping timeout: 256 seconds)
[10:18:25] *** Quits: Green_ (~Green-@h-85-24-185-116.A189.priv.bahnhof.se) (Ping timeout: 256 seconds)
[10:18:43] *** Joins: Green_ (~Green-@h-85-24-185-116.A189.priv.bahnhof.se)
[10:20:14] *** Joins: evangeline (~Eleanor@178.79.105.181)
[10:20:23] *** Joins: nicko (~iClass@222.211.31.34)
[10:20:47] *** Joins: llh (~llh@user/llh)
[10:21:15] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[10:27:41] *** Joins: Dizidentu (~aresg@modemcable151.154-19-135.mc.videotron.ca)
[10:30:16] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[10:30:39] *** Joins: karakedi (~eAC53C340@user/karakedi)
[10:32:37] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[10:35:22] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[10:35:39] *** Joins: bindu (~bindu@user/bindu)
[10:39:00] *** Quits: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz) (Quit: My computer has nodded off...)
[10:40:38] *** Joins: wille (~wille@static.140.85.76.144.clients.your-server.de)
[10:41:01] *** Joins: malloy (~jimery@116.30.221.255)
[10:45:26] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:34f4:d035:a23f:3ced)
[10:48:37] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:9d20:9499:4e3c:804c) (Ping timeout: 240 seconds)
[10:53:33] *** Quits: msk (~msk@103.213.213.70) (Ping timeout: 256 seconds)
[10:54:02] *** Joins: furrymcgee (~devuan@cgn-89-1-208-9.nc.de)
[10:55:01] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:58:35] *** Joins: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz)
[11:03:56] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:03:57] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 240 seconds)
[11:06:42] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[11:08:46] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:34f4:d035:a23f:3ced) (Ping timeout: 260 seconds)
[11:09:00] *** Joins: sysctl (~sysctl@88.215.77.255)
[11:13:13] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b033:5010:b599:9ae4:3186)
[11:16:36] *** Joins: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc)
[11:21:16] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[11:22:14] *** Quits: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc) (Read error: Connection reset by peer)
[11:23:31] *** Joins: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc)
[11:24:03] *** Joins: malloy (~jimery@116.30.221.255)
[11:24:57] *** Quits: rahl (~rahl@102.114.84.162) (Ping timeout: 240 seconds)
[11:25:04] *** Quits: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc) (Read error: Connection reset by peer)
[11:27:13] *** Joins: rahl (~rahl@102.114.240.106)
[11:29:40] *** Joins: rendar (~rendar@user/rendar)
[11:35:00] *** Joins: andreasbuhr (~quassel@p549db299.dip0.t-ipconnect.de)
[11:35:00] *** Quits: andreasbuhr (~quassel@p549db299.dip0.t-ipconnect.de) (Client Quit)
[11:35:38] *** Quits: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz) (Quit: My computer has nodded off...)
[11:36:11] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[11:38:47] *** Joins: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz)
[11:48:20] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:57:12] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b082:aa65:4b23:c398)
[11:57:12] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b082:aa65:4b23:c398) (Changing host)
[11:57:12] *** Joins: skapata (~Skapata@user/skapata)
[12:02:42] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:13:00] *** Quits: rgrinberg (~textual@2806:101e:7:6946:95cc:8d5a:5708:c8d5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:22:23] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:32:03] *** Joins: MetalSutton (~MetalSutt@101.100.152.253)
[12:49:19] *** Joins: daswf852 (~daswf852@user/daswf852)
[12:49:45] *** Joins: PlasmaHH (~PlasamaHH@user/plasmahh)
[12:52:05] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:00:18] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[13:00:35] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:03:35] *** Joins: undephin3d (~undephin3@158.181.81.83)
[13:03:48] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[13:05:17] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[13:05:42] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[13:06:51] *** Bitflux is now known as Byteflux
[13:07:49] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[13:10:13] *** Quits: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz) (Quit: My computer has nodded off...)
[13:12:23] *** Quits: undephin3d (~undephin3@158.181.81.83) (Ping timeout: 256 seconds)
[13:12:38] *** Joins: undephin3d (~undephin3@195.243.102.188)
[13:13:49] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[13:14:23] *** Joins: plastico (~plastico@neomutt/plastico)
[13:14:37] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:14:48] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[13:15:26] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:18:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[13:19:13] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:19:19] *** Joins: Enitin (~Enitin@82.102.22.84)
[13:20:45] *** Joins: hardlord (sys@user/irgod)
[13:25:24] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[13:25:38] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[13:28:16] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:30:52] *** Joins: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc)
[13:35:11] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[13:39:38] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:39:47] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:39:47] *** ChanServ sets mode: +v npaperbot
[13:40:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[13:41:53] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[13:42:49] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[13:43:19] *** Joins: msk (~msk@103.213.213.70)
[13:44:27] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[13:45:06] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.136.184)
[13:46:44] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[13:47:40] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[13:53:04] *** Parts: hardlord (sys@user/irgod) (It`s time to go...)
[13:56:24] *** Joins: Enitin (~Enitin@82.102.22.84)
[13:59:36] *** Joins: Burgundy (~yomon@79.115.213.171)
[14:00:11] *** Joins: MarcoFe (~marcofe@net-5-88-237-237.cust.vodafonedsl.it)
[14:00:27] *** Quits: bauripalash (~bauripala@2401:4900:382d:27bd:1:1:d2e9:2bc) (Quit: Quit)
[14:04:33] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[14:10:36] *** Quits: undephin3d (~undephin3@195.243.102.188) (Ping timeout: 240 seconds)
[14:12:45] *** Joins: undephin3d (~undephin3@158.181.81.83)
[14:23:25] *** Quits: malloy (~jimery@116.30.221.255) (Quit: WeeChat 3.0)
[14:27:45] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[14:28:27] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[14:34:59] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:36:17] *** Quits: proller (~p@2a02:6b8:b081:8806::1:34) (Ping timeout: 240 seconds)
[14:39:43] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[14:40:48] *** Joins: ko (~i.am@user/marlboro)
[14:41:21] *** Joins: nshire_ (~nshire@47.146.41.156)
[14:42:17] *** Quits: nshire (~nshire@user/nshire) (Ping timeout: 240 seconds)
[14:43:37] *** Quits: undephin3d (~undephin3@158.181.81.83) (Ping timeout: 256 seconds)
[14:43:51] *** Joins: undephin3d (~undephin3@195.243.102.188)
[14:44:37] *** Quits: MarcoFe (~marcofe@net-5-88-237-237.cust.vodafonedsl.it) (Quit: Konversation terminated!)
[14:44:55] <MetalSutton> Hello all. I am having some issue with random, and i think it has something to do with pointers
[14:45:47] *** Joins: MarcoFe (~marcofe@net-5-88-237-237.cust.vodafonedsl.it)
[14:46:49] <PJBoy> go on
[14:47:08] <PJBoy> preferably
[14:47:10] <PJBoy> !testcase
[14:47:11] <nolyc> A testcase is the _least_ amount of code that replicates your problem, paste it to https://wandbox.org/ then: 1) click run 2) click share 3) click url and 4) paste the url for us. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[14:48:35] <MetalSutton> https://pastebin.com/kNEpu2B4
[14:49:08] <MetalSutton> is pastebin not ok?
[14:50:00] <PJBoy> not ideal, but if your code doesn't work as a standalone runnable test-case, then it's as good as anything else
[14:50:53] <PJBoy> I don't see any pointers in that code anywhere
[14:50:56] <PJBoy> so that's a good start
[14:51:03] <MetalSutton> Im pretty sure i have just not a basic understanding. I think i am suposed to use pointers.
[14:51:09] <PJBoy> what's the problem?
[14:51:22] <PJBoy> or rather the symptom of the problem
[14:51:48] <PJBoy> I assume that NUM_LEDS >= 26
[14:52:00] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[14:52:05] <MetalSutton> I want the function to pick a random number from the "test array" array, and have it reference in the bottom line
[14:52:18] *** Joins: calm-steam (~calm-stea@2a02:810a:980:1400::9282)
[14:52:52] <PJBoy> assuming random8 works, that seems to be what you're doing correctly
[14:53:04] <MetalSutton> this runs on an arduino, so i think the random seed only gets generated once, i would like it to be random every time the function is called.
[14:53:13] *** Quits: syrius (syrius@titan.stormtek.net) (Ping timeout: 268 seconds)
[14:53:36] <PJBoy> ah is random8 returning the same result every time?
[14:53:41] <MetalSutton> correct.
[14:54:19] <MetalSutton> random8 is a function that is part of the FastLED library, and i think is just a helper function for a 8bit random number
[14:54:46] <PJBoy> I can see it has the seeding function `random16_set_seed`
[14:55:05] <PJBoy> but it has no random number generator :/
[14:55:25] <PJBoy> but you can roll your own LCG easily
[14:55:45] <MetalSutton> i thought that maybe its because i am not using pointers, and if thats the case, im not sure the best way to implement it? sorry im a noob.
[14:55:49] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[14:55:50] <PJBoy> oh wait no, I take that all back
[14:56:03] <PJBoy> its generator is `random8()`
[14:56:06] <PJBoy> with no arguments
[14:56:33] <MetalSutton> but then how do i set an upper limit?
[14:56:40] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[14:56:49] <PJBoy> do a call to random8() and ignore the result
[14:56:56] <PJBoy> and then proceed with your original code
[14:57:23] <PJBoy> `random8(); int ledPick = random8(0, 3); ...`
[14:59:20] *** Joins: syrius (syrius@titan.stormtek.net)
[15:00:18] <MetalSutton> its still just picking the same led over and over again
[15:01:46] <PJBoy> btw that random8(min, max) function actually takes a half open range
[15:01:53] <PJBoy> so it should be random8(0, 4)
[15:04:20] *** Joins: Tempesta (~Tempesta@user/tempesta)
[15:09:12] <MetalSutton> OH SHIT
[15:09:41] <MetalSutton> I just did a serial debugging line to see what was going on, and it looks like the function isnt activating multiple times.
[15:09:53] <MetalSutton> that would explain no randomness
[15:12:19] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Quit: Lost terminal)
[15:12:37] *** Quits: nicko (~iClass@222.211.31.34) (Ping timeout: 240 seconds)
[15:19:24] *** Joins: bebyx (~Thunderbi@user/bebyx)
[15:23:24] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[15:23:50] *** Joins: nicko (~iClass@222.211.28.136)
[15:27:36] *** Quits: judabuda (kowbunga@user/judabuda) (Quit: Gone.)
[15:30:07] *** Quits: calm-steam (~calm-stea@2a02:810a:980:1400::9282) (Quit: Leaving)
[15:30:26] *** Joins: calm-steam (~calm-stea@2a02:810a:980:1400::9282)
[15:31:57] *** Quits: nicko (~iClass@222.211.28.136) (Ping timeout: 240 seconds)
[15:32:33] *** Joins: nicko (~iClass@222.211.28.110)
[15:39:16] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[15:40:01] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:8c85:3d90:d3c9:3f6b) (Read error: Connection reset by peer)
[15:40:17] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:40:47] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:8c85:3d90:d3c9:3f6b)
[15:41:01] *** Quits: undephin3d (~undephin3@195.243.102.188) (Ping timeout: 240 seconds)
[15:41:59] <MetalSutton> all sorted. fixed thanks.
[15:42:52] <PJBoy> ggs
[15:42:58] *** Joins: undephin3d (~undephin3@158.181.81.83)
[15:43:10] <MetalSutton> I have another question. theoretical this time
[15:43:40] <MetalSutton> I have floating point math with a value that goes up and down to control a fade.
[15:43:55] <MetalSutton> it fades in and out all the time.
[15:44:30] <MetalSutton> But i am trying to create a full firmware on a small arduino so trying to save as much space as possible.
[15:45:23] <MetalSutton> memory that is. would an array of values that holds the values for a brightness curve. like maybe 20 values. which is the least taxing?
[15:46:21] *** Joins: xiongxin (~Thunderbi@113.116.34.213)
[15:51:04] *** Joins: pulse (~pulse@user/pulse)
[15:55:06] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:56:39] *** Joins: Leone (~Leo@69-165-148-197.dsl.teksavvy.com)
[15:58:28] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.136.184) (Quit: Connection closed)
[16:03:25] *** mattgirv_ is now known as mattgirv
[16:05:00] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[16:06:42] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[16:07:16] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:07:41] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Read error: Connection reset by peer)
[16:08:31] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[16:10:15] <ville> MetalSutton: a look up table is usually not the way to save memory. you use them to save on computation
[16:10:53] *** Quits: undephin3d (~undephin3@158.181.81.83) (Ping timeout: 256 seconds)
[16:11:07] *** Joins: undephin3d (~undephin3@195.243.102.188)
[16:11:42] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[16:26:27] *** Joins: aLeSD (~aLeSD@85.62.96.34)
[16:28:38] *** Quits: calm-steam (~calm-stea@2a02:810a:980:1400::9282) (Changing host)
[16:28:38] *** Joins: calm-steam (~calm-stea@user/calm-steam)
[16:29:01] *** Quits: undephin3d (~undephin3@195.243.102.188) (Ping timeout: 256 seconds)
[16:30:36] *** Joins: undephin3d (~undephin3@158.181.81.83)
[16:36:18] *** Quits: aLeSD (~aLeSD@85.62.96.34) (Remote host closed the connection)
[16:39:02] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[16:39:33] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b033:5010:b599:9ae4:3186) (Quit: Leaving)
[16:39:50] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:45:20] *** Joins: judabuda (kowbunga@kowbunga.thunderirc.net)
[16:46:34] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[16:53:21] *** Joins: proller (~p@2a02:6b8:0:40c:316:ce17:649f:92ab)
[16:55:05] *** Quits: mitch0 (~mitch@84-236-20-119.pool.digikabel.hu) (Ping timeout: 256 seconds)
[16:55:31] *** Quits: baltazar (~baltazar@84-236-20-119.pool.digikabel.hu) (Ping timeout: 250 seconds)
[16:56:18] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:56:47] *** Joins: mitch0 (~mitch@84-236-9-28.pool.digikabel.hu)
[16:57:13] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[16:57:15] *** Joins: baltazar (~baltazar@84-236-9-28.pool.digikabel.hu)
[16:58:42] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[17:00:06] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:00:30] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[17:00:52] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[17:01:02] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.136.184)
[17:07:34] *** Joins: MaximumRecursion (~MaximumRe@2601:14d:100:a470:114b:ec9b:6efe:eb55)
[17:11:27] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[17:11:49] *** Joins: slidercrank (~slidercra@user/slidercrank)
[17:15:44] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[17:18:07] *** Joins: seninha (~seninha@user/seninha)
[17:21:36] *** Joins: fluter (~fluter@user/fluter)
[17:27:26] *** Quits: frost (~frost@user/frost) (Ping timeout: 245 seconds)
[17:27:26] *** Quits: jplejacq (~jplejacq@24.224.90.176) (Quit: Leaving.)
[17:28:31] *** Quits: mitch0 (~mitch@84-236-9-28.pool.digikabel.hu) (Ping timeout: 256 seconds)
[17:29:05] *** Quits: baltazar (~baltazar@84-236-9-28.pool.digikabel.hu) (Ping timeout: 256 seconds)
[17:30:42] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[17:37:54] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[17:39:38] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:39:46] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:39:46] *** ChanServ sets mode: +v npaperbot
[17:46:27] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[17:48:09] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[17:48:16] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[17:49:35] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 268 seconds)
[17:56:09] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[17:59:39] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[18:00:32] *** Quits: nicko (~iClass@222.211.28.110) (Quit: Konversation terminated!)
[18:00:41] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[18:05:30] *** Joins: mitch0 (~mitch@91-83-35-151.pool.digikabel.hu)
[18:05:55] *** Joins: baltazar (~baltazar@91-83-35-151.pool.digikabel.hu)
[18:06:44] *** Joins: jkaye (~jkaye@2601:281:8300:7530:e699:4743:67a2:216e)
[18:08:14] *** Quits: xiongxin (~Thunderbi@113.116.34.213) (Quit: xiongxin)
[18:12:45] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[18:18:17] <CarloWood> I have this static member function:
[18:18:23] <CarloWood> template<typename CONTAINER>
[18:18:23] <CarloWood> typename CONTAINER::iterator RenderPass::find_by_ID(CONTAINER& container, Attachment const& a)
[18:19:02] <CarloWood> Is it possible to have this return `CONTAINER::const_iterator` if `CONTAINER` itself is const?
[18:20:30] <PJBoy> yeah you have some options
[18:21:15] <PJBoy> can set the return type to `std::conditional_t<std::is_const_t<CONTAINER>, CONTAINER::const_iterator, CONTAINER::iterator>`
[18:21:35] <cbreak> CarloWood: you could write auto
[18:21:59] <PJBoy> or leave the return type as auto and do a `if constexpr (std::is_const_v<CONTAINER>) { return CONTAINER::const_iterator{...}; } else { ... }`
[18:22:12] <cbreak> no need for if constexpr.
[18:22:29] <PJBoy> it's an option
[18:22:36] <cbreak> it's not useful
[18:22:39] <PJBoy> there's many ways to skin this cat
[18:22:45] <cbreak> as in, it doesn't add anything
[18:23:12] <PJBoy> not sure what you mean
[18:23:33] <cbreak> auto a = begin(container); auto b = end(container); ... ; return iterator;
[18:23:41] <cbreak> no need for different branches for const / non-const
[18:23:59] <PJBoy> that potentially works if the container gives you a const_iterator if it's const
[18:24:03] <PJBoy> and if you're using that interface
[18:24:19] <cbreak> if it gives you a non-const iterator when it is const, then it's not a container, it's a trashcan
[18:24:23] <PJBoy> but it doesn't generalise to absolutes
[18:25:11] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[18:26:53] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:28:58] <CarloWood> Using just auto as return type worked.
[18:30:04] <PJBoy> good good
[18:35:32] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[18:38:53] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[18:39:21] *** Quits: mitch0 (~mitch@91-83-35-151.pool.digikabel.hu) (Ping timeout: 256 seconds)
[18:39:32] *** Quits: baltazar (~baltazar@91-83-35-151.pool.digikabel.hu) (Ping timeout: 240 seconds)
[18:41:14] *** Joins: mitch0 (~mitch@178-164-190-44.pool.digikabel.hu)
[18:41:38] *** Joins: baltazar (~baltazar@178-164-190-44.pool.digikabel.hu)
[18:45:51] *** Quits: mitch0 (~mitch@178-164-190-44.pool.digikabel.hu) (Client Quit)
[18:47:45] *** Quits: MetalSutton (~MetalSutt@101.100.152.253) (Remote host closed the connection)
[18:48:15] *** Joins: MetalSutton (~MetalSutt@101.100.152.253)
[18:50:20] *** Joins: mitch0 (~mitch@178-164-190-44.pool.digikabel.hu)
[18:52:27] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[18:58:00] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.136.184) (Quit: Connection closed)
[19:03:47] *** Quits: Guest1693 (~vin@cortana.cs.wisc.edu) (Quit: WeeChat 2.8)
[19:11:18] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 260 seconds)
[19:12:41] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:8c85:3d90:d3c9:3f6b) (Ping timeout: 252 seconds)
[19:15:33] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:15:54] *** Joins: bindu (~bindu@user/bindu)
[19:16:46] *** Quits: MetalSutton (~MetalSutt@101.100.152.253) (Remote host closed the connection)
[19:17:43] *** Joins: MetalSutton (~MetalSutt@101.100.152.253)
[19:17:48] *** Quits: proller (~p@2a02:6b8:0:40c:316:ce17:649f:92ab) (Ping timeout: 240 seconds)
[19:18:54] *** Quits: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch) (Quit: ZNC 1.8.2 - https://znc.in)
[19:21:49] *** Quits: river (~My_user_n@tilde.team/user/river) (Ping timeout: 240 seconds)
[19:23:06] *** Joins: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch)
[19:23:10] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[19:23:13] *** Quits: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch) (Remote host closed the connection)
[19:24:41] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[19:26:41] *** Joins: tct (~tct@8.200.173.83.static.wline.lns.sme.cust.swisscom.ch)
[19:28:34] *** Quits: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com) (Ping timeout: 260 seconds)
[19:30:26] *** Quits: judabuda (kowbunga@kowbunga.thunderirc.net) (Changing host)
[19:30:26] *** Joins: judabuda (kowbunga@user/judabuda)
[19:34:45] *** Joins: constxd (~brad@192.75.101.164)
[19:34:49] <constxd> kings
[19:35:26] *** Joins: shailangsa (~shailangs@host86-186-127-224.range86-186.btcentralplus.com)
[19:36:13] <constxd> i have a class Foo<T> : Bar { ... }
[19:37:22] <constxd> and a shared_ptr<Bar> pBar. now i want to do shared_ptr<Foo<short>> = dynamic_pointer_cast<Foo<short>>(pBar);
[19:37:40] <constxd> is this illegal because 'public' is missing from 'class Foo<T> : Bar'?
[19:38:08] <imMute> yes, Bar is private inheritance.
[19:38:29] <constxd> based
[19:40:06] <constxd> Ok that explains why dynamic_pointer_cast was returning a null pointer
[19:43:54] *** Joins: essial (~essial@45-27-210-42.lightspeed.gnbonc.sbcglobal.net)
[19:45:29] *** Joins: Guest86 (~Guest86@2a04:241e:502:5500:d97d:19c9:637f:71c)
[19:46:28] *** Joins: proller (~p@2a02:6b8:0:40c:bc68:65ed:247f:f6b)
[19:48:58] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:51:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:52:02] *** Quits: proller (~p@2a02:6b8:0:40c:bc68:65ed:247f:f6b) (Ping timeout: 240 seconds)
[19:54:05] <constxd> im getting a memory access exception thrown in shared_ptr destructor
[19:54:12] <constxd> is that usually indicative of something in particular
[19:59:54] *** Quits: MarcoFe (~marcofe@net-5-88-237-237.cust.vodafonedsl.it) (Quit: Konversation terminated!)
[20:12:54] *** Joins: proller (~p@2a02:6b8:0:40c:d37a:c267:9473:55b8)
[20:17:56] *** Quits: Trollmann (~Trollmann@user/trollmann) (Quit: ZNC - https://znc.in)
[20:18:31] *** Joins: Trollmann (~Trollmann@user/trollmann)
[20:24:13] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[20:28:27] *** Joins: xkuru (~xkuru@user/xkuru)
[20:38:15] *** Quits: proller (~p@2a02:6b8:0:40c:d37a:c267:9473:55b8) (Remote host closed the connection)
[20:40:10] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:40:38] *** Joins: proller (~p@2a02:6b8:0:40c:4e00:2ac2:e082:4525)
[20:41:37] *** Quits: essial (~essial@45-27-210-42.lightspeed.gnbonc.sbcglobal.net) (Ping timeout: 240 seconds)
[20:43:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:21ba:a382:6b6:54c4) (Ping timeout: 240 seconds)
[20:43:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[20:45:47] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:21ba:a382:6b6:54c4)
[20:46:39] *** Quits: Perry (~perry@coffee-break.at) (Quit: ZNC - http://znc.in)
[20:47:24] *** Joins: Perry (~perry@coffee-break.at)
[20:48:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:54:02] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:dc8:8e33:a486:95b)
[20:54:17] *** Joins: essial (~essial@45-27-210-42.lightspeed.gnbonc.sbcglobal.net)
[20:56:48] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[20:57:50] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[20:58:37] *** Quits: essial (~essial@45-27-210-42.lightspeed.gnbonc.sbcglobal.net) (Ping timeout: 240 seconds)
[21:00:34] *** Joins: essial (~essial@45-27-210-42.lightspeed.gnbonc.sbcglobal.net)
[21:02:35] *** Joins: Betal (~Betal@user/betal)
[21:09:25] *** Joins: Swemole (~Swemole@meta.ros.sgsnet.se)
[21:10:05] *** Joins: tradar (~tradar@user/tradar)
[21:10:30] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[21:11:02] *** Joins: Hokedli (~laslie@gateway/tor-sasl/hokedli)
[21:11:03] *** essial is now known as Essial
[21:11:05] *** Joins: freakazoid333 (~matt@2603-9000-cf0f-80e3-d54b-d9a4-abaf-8734.inf6.spectrum.com)
[21:12:54] *** Quits: Guest86 (~Guest86@2a04:241e:502:5500:d97d:19c9:637f:71c) (Quit: Client closed)
[21:24:18] *** Quits: tradar (~tradar@user/tradar) (Ping timeout: 276 seconds)
[21:24:39] *** Joins: tradar (~tradar@user/tradar)
[21:26:51] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[21:28:41] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[21:29:30] *** Quits: tradar (~tradar@user/tradar) (Client Quit)
[21:29:37] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[21:30:03] *** Joins: plastico (~plastico@neomutt/plastico)
[21:35:25] *** Quits: jplejacq (~jplejacq@24.224.90.176) (Quit: Leaving.)
[21:36:13] *** Quits: letto (~letto@188.26.158.104) (Quit: Konversation terminated!)
[21:38:12] *** Joins: letto (~letto@188.26.158.104)
[21:39:39] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:39:47] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:39:47] *** ChanServ sets mode: +v npaperbot
[21:40:55] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[21:41:09] *** Parts: jplejacq (~jplejacq@24.224.90.176) ()
[21:41:30] *** Quits: Hokedli (~laslie@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[21:41:33] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[21:43:31] *** Quits: Essial (~essial@45-27-210-42.lightspeed.gnbonc.sbcglobal.net) (Ping timeout: 256 seconds)
[21:43:45] *** Joins: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz)
[21:43:56] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[21:45:41] *** Joins: Essial (~essial@45-27-210-42.lightspeed.gnbonc.sbcglobal.net)
[21:49:57] <LuksNuke> are stringstreams expensive and better avoid it when trickier string operations are possible?
[21:51:20] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[21:55:17] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 240 seconds)
[21:56:25] *** Joins: jiffe (~jiffe@mail.nsab.us)
[21:57:58] *** Joins: Hokedli (~laslie@gateway/tor-sasl/hokedli)
[22:00:22] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[22:05:05] *** PJBoy is now known as Guest8573
[22:05:05] *** Quits: Guest8573 (~PJBoy@user/pjboy) (Killed (tungsten.libera.chat (Nickname regained by services)))
[22:05:07] *** Joins: PJBoy (~PJBoy@user/pjboy)
[22:06:15] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:06:21] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[22:13:30] *** Joins: sbrothy (~sbrothy@192038130164.mbb.telenor.dk)
[22:13:38] *** Quits: gothicserpent (~gothicser@204.152.215.249) (Ping timeout: 252 seconds)
[22:13:52] *** Joins: NEYi (~NEYi@109.251.216.38)
[22:13:59] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:15:44] *** Joins: gothicserpent (~gothicser@204.152.216.121)
[22:16:06] *** Quits: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz) (Quit: My computer has nodded off...)
[22:25:15] *** Quits: Essial (~essial@45-27-210-42.lightspeed.gnbonc.sbcglobal.net) (Ping timeout: 268 seconds)
[22:25:31] *** Quits: kapil (~kapil@o-k.website) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:26:02] *** Quits: Green_ (~Green-@h-85-24-185-116.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[22:26:08] *** Joins: Green_6 (~Green-@h-85-24-185-116.A189.priv.bahnhof.se)
[22:26:57] *** Joins: masterbuilder (~user@user/masterbuilder)
[22:27:20] *** Joins: kapil (~kapil@o-k.website)
[22:29:26] *** Quits: MaximumRecursion (~MaximumRe@2601:14d:100:a470:114b:ec9b:6efe:eb55) (Quit: Client closed)
[22:29:59] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:2162:ed14:6f38:5e01)
[22:30:11] *** Quits: proller (~p@2a02:6b8:0:40c:4e00:2ac2:e082:4525) (Ping timeout: 268 seconds)
[22:31:12] *** Joins: Essial (~essial@45-27-210-42.lightspeed.gnbonc.sbcglobal.net)
[22:34:22] *** Quits: bebyx (~Thunderbi@user/bebyx) (Quit: bebyx)
[22:36:07] *** Joins: artok (~azo@mobile-access-b0481d-183.dhcp.inet.fi)
[22:36:32] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[22:38:24] *** eck is now known as tiktoknull
[22:40:50] *** Quits: cpuid (~cpuid@user/cpuid) (Quit: ZNC 1.8.2 - https://znc.in)
[22:41:39] *** Joins: cpuid (~cpuid@co5.at)
[22:41:39] *** Quits: cpuid (~cpuid@co5.at) (Changing host)
[22:41:39] *** Joins: cpuid (~cpuid@user/cpuid)
[22:45:26] <mattf> Do someone know how resources aren't compiled in a project like: https://github.com/telegramdesktop/tdesktop . I edited arts (icons) on the Resources/arts and modified many strings under the langs folder (they are .strings files). Point is, i modified enough to see any difference but it doesn't reflect when i build it following the instructions: https://github.com/telegramdesktop/tdesktop/blob/dev/docs/building-linux.md. You can see
[22:45:27] <mattf> more details of what i am tried here: https://github.com/telegramdesktop/tdesktop/issues/17106#issuecomment-996165052
[22:46:17] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 240 seconds)
[22:47:43] *** Joins: jiffe (~jiffe@mail.nsab.us)
[22:47:50] *** Joins: Pook (~Pook@2001:8a0:f996:1400:101d:929a:6b86:e5d7)
[22:48:24] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:49:43] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:50:08] <zz> Goes beyond the scope of standard C++ and the channel
[22:50:56] <Alipha> LuksNuke: creating a std::stringstream is expensive, so if you can just do that once and keep reusing it (using `ss.clear(); ss.str("");` or such), then it's pretty performant.
[22:51:43] <LuksNuke> Alipha, ok so instead of temporary std::stringstreams, create them once
[22:51:53] <Alipha> LuksNuke: yep
[22:52:10] <LuksNuke> would a -- thread_local static std::stringstream ss; -- make sense for class methods?
[22:52:47] <Alipha> LuksNuke: sure
[22:54:44] <LuksNuke> yes? sure??
[22:54:47] <LuksNuke> I will believe
[22:55:00] *** Parts: Swemole (~Swemole@meta.ros.sgsnet.se) ()
[22:56:28] <Alipha> LuksNuke: though i'm not sure if i'd go that extreme in "having only one std::stringstream", as far as balancing code maintainability vs performance. i was thinking along the lines of: https://wandbox.org/permlink/bmip7mSEI4rZriB7
[22:57:11] <furrymcgee> there is cin already
[22:57:41] <LuksNuke> ok, may be premature
[22:57:57] <LuksNuke> i'll show you the functions I'm talking about. its about urlencode()...:
[22:58:28] <Alipha> !rule 1
[22:58:29] <nolyc> Make things work. Profile. Make things fast. In this order.
[22:58:32] <Alipha> :-)
[23:01:48] <LuksNuke> unfortunately it's not directly compilable, but working: https://gist.github.com/sspiri/fe16b85bc523afd432b863704817e44e
[23:02:37] <LuksNuke> I took your advise to heart and reuse std::istringstream with str(); clear()
[23:06:39] <Eelis> LuksNuke: if performance is a concern, it's best to avoid streams altogether and use more primitive functions like to_chars https://en.cppreference.com/w/cpp/utility/to_chars
[23:07:24] <Eelis> (it's even reasonable to forgo to_chars and write your own functions for conversion to decimal representations)
[23:07:39] <Alipha> LuksNuke: i assume you'd be calling encode and decode a lot, so maybe a thread_local static member variable would be a good idea (or follow Eelis's advice)
[23:08:42] <LuksNuke> I'm currently not expecting performance issues. I'm just seeking for perfection.
[23:08:57] <LuksNuke> to_chars() is new to me
[23:09:26] <Eelis> "perfection" is unachievable because it implies maximizing all properties, but the nature of physics and computers is such that all implementations will be trade-offs between different factors
[23:10:29] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[23:11:23] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[23:11:28] <LuksNuke> ok. in those terms I would leave the implementation as is, because simplicity has great value to me.
[23:11:40] <LuksNuke> and as I said, didn't experience any perfomance issues
[23:12:14] <Eelis> to_chars will probably give a good trade-off between simplicity and performance. it's the most primitive thing in the stdlib for converting to decimal representations
[23:12:52] <Eelis> and the interface is slightly non-abstracted but still very easy to use
[23:15:11] *** Quits: jkl1337 (~jkl@user/jkl) (Quit: Gone.)
[23:15:42] <Eelis> (it's slightly non-abstracted because it burdens the caller with arranging for suitable memory)
[23:16:22] *** Joins: seninha (~seninha@user/seninha)
[23:16:32] *** Joins: jkl (~jkl@user/jkl)
[23:17:28] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:19:38] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[23:21:21] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:dc8:8e33:a486:95b) (Ping timeout: 268 seconds)
[23:22:14] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[23:23:13] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[23:26:14] <CarloWood> What exactly is the problem here?
[23:26:17] <CarloWood> { constexpr char const* str = "foo"; constexpr string s(str); }
[23:26:17] <geordi> error: 'string{string::_Alloc_hider{((char*)(& s.string::<anonymous>.string::<unnamed union>::_M_local_buf))}, 3, string::<unnamed union>{char [16]{'f', 'o', 'o', 0}}}' is not a constant expression
[23:26:48] <CarloWood> We have..
[23:26:50] <CarloWood> constexpr basic_string( const CharT* s,
[23:26:50] <CarloWood>                         const Allocator& alloc = Allocator() );
[23:26:50] <CarloWood> (since C++20)
[23:26:51] <Alipha> CarloWood: string's constructor isn't constexpr on your implementation
[23:27:08] <Alipha> i believe all the compilers are lagging on that :-(
[23:27:11] <CarloWood> On my? You mean geordi's?
[23:29:02] <Alipha> CarloWood: yes. actually, msvc might work because they're supposedly c++20 complete. but gcc and clang haven't implemented constexpr dynamic allocation yet, from what i understand
[23:29:52] <CarloWood> thx
[23:35:18] <RandomReader> that arrangement doesn't work in msvc either, apparently because it violates the transient allocation rules, although I don't know how that's supposed to work for std::string in general
[23:35:25] *** Quits: Essial (~essial@45-27-210-42.lightspeed.gnbonc.sbcglobal.net) (Ping timeout: 240 seconds)
[23:38:02] <PJBoy> GCC have done constexpr allocation stuff
[23:39:14] <PJBoy> << c; constexpr char f(size_t i) { string s("123456"); return s[i]; } constexpr char c = f(3);
[23:39:15] <geordi> 4
[23:39:20] <RandomReader> ..oh, just non-constexpr the variables but have them be in a transient constexpr context
[23:39:22] <RandomReader> right
[23:40:28] <RandomReader> so "constexpr s" is the problem, since it requires s remain alive at runtime, which is not allowed for allocations that happened in a constexpr context
[23:41:10] <RandomReader> it has to be neutral, with the entire lifetime being either constexpr or non-constexpr, so like within the scope of a function marked constexpr
[23:41:41] *** Joins: Essial (~essial@45-27-210-42.lightspeed.gnbonc.sbcglobal.net)
[23:42:08] *** Joins: vicfred (~vicfred@user/vicfred)
[23:42:20] <PJBoy> well I don't think constexpr would require s to remain alive there
[23:42:30] *** Joins: Guest75 (~Guest75@ip-95-223-73-60.hsi16.unitymediagroup.de)
[23:43:04] <RandomReader> it does, since it effectively makes the initialization constexpr for a const variable
[23:43:27] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[23:43:33] <RandomReader> passing through that scope in a non-constexpr context then requires that s exists, but the initialization happened already
[23:44:27] <RandomReader> geordi: replace string with constexpr string
[23:44:27] <geordi> error: 'string{string::_Alloc_hider{((char*)(& s.string::<anonymous>.string::<unnamed union>::_M_local_buf))}, 6, string::<unnamed union>{char [16]{'1', '2', '3', '4', '5', '6', 0}}}' is not a constant expression
[23:44:48] <PJBoy> right, the problem is that that function can be called in a non constexpr context
[23:44:58] <RandomReader> which is going to be true for any scope in general
[23:45:32] <PJBoy> it continues to hurt me that consteval didn't allow function parameters to be constexprs
[23:46:07] <RandomReader> that'd just make them templates
[23:47:02] *** Quits: Guest75 (~Guest75@ip-95-223-73-60.hsi16.unitymediagroup.de) (Client Quit)
[23:47:37] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[23:48:18] <RandomReader> although I haven't really grasped why consteval exists yet
[23:49:54] <RandomReader> constinit at least solves a constexpr-influenced problem
[23:50:42] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[23:51:06] <RandomReader> maybe consteval exists to solve this allocator-influenced problem?
[23:51:14] *** Quits: Hokedli (~laslie@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[23:51:23] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[23:51:45] *** Quits: Tokamak (~Tokamak@172.58.191.87) (Quit: Textual IRC Client: www.textualapp.com)
[23:51:46] <RandomReader> which would make this dance of "let's invent problems and solve them in a half-assed way next standard" even more depressing
[23:52:08] <RandomReader> it's like watching a work codebase, in slow motion...
[23:52:19] <PJBoy> all consteval does it not allow a function to be called at runtime
[23:52:28] <RandomReader> but so do templates
[23:52:29] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[23:52:38] <PJBoy> or rather
[23:52:49] <PJBoy> a consteval function can only be called as part of a constant expression
[23:53:06] *** Joins: Guest75 (~Guest75@ip-95-223-73-60.hsi16.unitymediagroup.de)
[23:53:21] <PJBoy> so this doesn't work
[23:53:21] <RandomReader> which is also true for template arguments
[23:53:23] <PJBoy> { int i{}; char c = f(i); cout << c; } consteval char f(size_t i) { string s("123456"); return s[i]; }
[23:53:23] <geordi> error: the value of 'i' is not usable in a constant expression
[23:53:32] <PJBoy> { constexpr int i{}; char c = f(i); cout << c; } consteval char f(size_t i) { string s("123456"); return s[i]; } // but this does
[23:53:33] <geordi> 1
[23:53:34] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[23:54:16] *** Quits: Guest75 (~Guest75@ip-95-223-73-60.hsi16.unitymediagroup.de) (Client Quit)
[23:54:48] <RandomReader> { constexpr int i{}; char c = f<i>(); cout << c; }   template <int I> char f() { string s("123456"); return s[I]; }
[23:54:48] <geordi> 1
[23:55:23] <PJBoy> it's not as nice :(
[23:55:35] <RandomReader> and since it's immediate, there's no point in storing its address, so it's not like there's an ODR advantage here
[23:55:45] <PJBoy> there are those fancy things that functions do that templates don't
[23:56:28] *** Joins: ckdCreations (~ckdCreati@147.55.130.32)
[23:57:25] <RandomReader> what can a function do that a function template can't?
[23:58:20] <RandomReader> constexpr at least significantly altered how you can express things
[23:58:23] <PJBoy> implicit conversions
[23:58:26] <RandomReader> I'm not seeing the same thing for consteval so far
[23:58:44] <RandomReader> geordi: replace int I with size_t I
[23:58:44] <geordi> 1
[23:58:47] <RandomReader> works the same way
[23:59:04] <PJBoy> { constexpr int* p{}; char c = f<p>(); cout << c; }   template <void* I> char f() { return '2'; }
[23:59:04] <geordi> error: no matching function for call to 'f<p>()'
[23:59:14] <PJBoy> { constexpr int* p{}; char c = f(p); cout << c; } consteval char f(void* p) { return '2'; }
[23:59:14] <geordi> 2
[23:59:17] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[23:59:25] <PJBoy> also not that many types can be NTTPs
[23:59:27] <RandomReader> ah
[23:59:39] <RandomReader> can those same types be sufficient for consteval?
