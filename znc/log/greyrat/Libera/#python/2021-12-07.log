[00:01:36] *** Joins: jay-m126 (~jay-m@154.72.150.229)
[00:01:40] *** Joins: jay-m126_ (~jay-m@154.72.150.229)
[00:01:41] *** Joins: jay-m1261 (~jay-m@154.72.150.229)
[00:03:15] <CrtxReavr> novapy, exit(n) where n is a valid exit code for your OS.
[00:05:00] *** Joins: AlanMD_ (~AlanMD@86.121.179.183)
[00:06:23] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 252 seconds)
[00:06:29] *** Joins: goldfish (~goldfish@user/goldfish)
[00:09:05] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 256 seconds)
[00:09:07] *** Joins: hendry (~hendry@210.23.22.2)
[00:09:25] <kee> nanonyme: I remember! You need to skip the first 4(?) bytes.
[00:09:32] <kee> Those are a magic number.
[00:09:47] *** Joins: kaibi (sid16580@id-16580.hampstead.irccloud.com)
[00:11:17] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[00:12:50] *** Joins: iflema (~ian@user/iflema)
[00:14:18] <SnoopJ> novapy, you should use sys.exit() instead, exit() is intended to be useful to the interactive interpreter but isn't guaranteed to be present
[00:14:37] *** Quits: Payam23 (~Payam@138.106.57.132) (Quit: Client closed)
[00:15:51] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[00:16:12] *** Joins: mjack (~mjack@5634d05c.rev.stofanet.dk)
[00:16:13] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 240 seconds)
[00:16:14] *** Joins: georgios (~georgios@user/georgios)
[00:16:43] *** Joins: Viewday111 (~Viewday@user/viewday)
[00:17:26] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 265 seconds)
[00:17:58] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[00:18:37] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 240 seconds)
[00:18:43] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[00:18:44] *** Viewday111 is now known as Viewday11
[00:18:51] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[00:18:58] *** Joins: phox (~phox@S0106c8fb26791d35.pk.shawcable.net)
[00:19:09] *** Joins: demirok (~bell@user/demirok)
[00:20:36] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:20:41] *** Quits: novapy (~novapy@c-68-62-193-246.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[00:20:43] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:21:00] <phox> hey.  apparently a hot topic on stackexchange and all those, trying to get my head around sys.path related stuff i.e. what pip install -e does and whether there are alternatives (e.g. if mostly using pyenv instead), and how this ties into using pytest for unit or integration testing
[00:21:10] *** Joins: Julian (~tos9@python/site-packages/Julian)
[00:21:13] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[00:21:26] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[00:21:54] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:22:27] *** Quits: roteiro (~roteiro@i528C35AF.versanet.de) (Quit: Client closed)
[00:24:12] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 265 seconds)
[00:24:12] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 265 seconds)
[00:24:19] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[00:24:30] <phox> ... and as well trying to get a more thorough understanding of using multiple Py "management" things between pip + pyenv + setuptools and what owns what so I don't start making them duke it out
[00:24:37] *** Joins: naan (~Naan@user/naan)
[00:26:20] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[00:27:19] *** Joins: cjb (~cjb@user/cjb)
[00:27:21] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:9518:b8c2:641e:46d2) (Read error: Connection reset by peer)
[00:28:07] *** Joins: MinimotoMusashi (~MinimotoM@154.sub-174-197-37.myvzw.com)
[00:28:13] <grym> phox: pyenv installs python.  pip installs packages into (ideally only) venvs with setuptools.
[00:28:33] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 265 seconds)
[00:28:44] *** Quits: sagax (~sagax_nb@user/sagax) (Remote host closed the connection)
[00:28:52] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[00:28:56] *** Joins: arinov (~arinov@213.194.126.155)
[00:29:02] <grym> phox: so my game is `pyenv install <base interpreter version> ; python<thatversion> -m venv /the/venv; /the/venv/bin/python -m pip install [-e] /my/package/thing
[00:29:05] <grym> `
[00:29:33] <SnoopJ> phox, `pip install -e` creates an egg-link file in your interpreter's site, which is basically just pointing to the real location of the package: https://bpa.st/DHKQ
[00:30:13] <SnoopJ> and re: pytest, it doesn't really care about the distinction, the name will be importable for both editable/non-editable installs
[00:30:29] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[00:30:37] *** Joins: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp)
[00:30:43] *** Quits: naan (~Naan@user/naan) (Ping timeout: 268 seconds)
[00:31:19] *** Joins: ffledgling (~textual@2620:10d:c090:500::32d)
[00:31:46] <aphysically> new typing RFC
[00:31:56] <aphysically> allow typing Literal[str] for accepting any str but only if it's a literla
[00:32:22] <phox> SnoopJ: ok, so the install -e game persists as long as I don't go remove the symlink...
[00:32:35] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[00:32:46] <ali1234> how do i ignore extra keyword arguments with attrs?
[00:32:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[00:33:58] *** Joins: rany_ (~rany@user/rany)
[00:33:59] <phox> so say I am doing this on a build host, do I set up the venv and install the additional package(s) that I'm building/testing and then deal with pytest?  seems unfamiliar to actually build an environment for something that's already on the host but I know Py more-or-less thinks that way
[00:34:28] <grym> ali1234: possibly inside __attrs_init__
[00:34:41] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[00:34:45] *** Joins: fikran (~fikran@user/fikran)
[00:34:59] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 252 seconds)
[00:35:02] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 268 seconds)
[00:35:41] <MinimotoMusashi> I have a question on readability vs performance.
[00:35:45] <grym> ali1234: but starargs are, the last time i checked, not well supported as  a conscious choice: https://github.com/python-attrs/attrs/issues/110  you could, as a bottom commenter suggests, write a classmethod
[00:35:53] <MinimotoMusashi> I am abstracting different parts of my application, and creating interfaces between the modules.
[00:36:04] <MinimotoMusashi> Data received from and to when interacting with an interface is in the form of a dictionary.
[00:36:08] <ali1234> what i actually want seems to be auto_attribs
[00:36:20] <MinimotoMusashi> Instead of manipulating this dictionary, I’d like to create objects, perform the layers data manipulation, and then before passing it onto the next level, I would convert it back to a dictionary.
[00:36:24] <grym> ali1234: https://github.com/python-attrs/attrs/issues/110#issuecomment-767381398  has the other answer.
[00:36:36] <MinimotoMusashi> Is this advisable or generally wouldn’t be worth the resource cost for the readability.
[00:36:54] *** Joins: Macuser (~Macuser@216.30.159.201)
[00:37:30] *** Quits: rany (~rany@user/rany) (Ping timeout: 276 seconds)
[00:38:35] <grym> MinimotoMusashi: the pattern i use for this sort of thing is using the attrs library with frozen=True and using attrs.evolve to make new instances to pass on, functional-style.  I find the cost of making class instances more or less trivial compared to the freedom from paranoia about global state that often comes with passing dicts around
[00:38:43] <grym> not to mention ease of refactoring
[00:38:49] *** Quits: kor1 (~kor1@user/kor1) (Quit: Leaving.)
[00:39:02] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[00:39:31] *** Quits: redrum88 (redrum88@user/redrum88) (Ping timeout: 245 seconds)
[00:40:22] <MinimotoMusashi> My thoughts as well! Thanks for reassuring me, he he.
[00:41:08] <grym> "magic dict god-object" has happened to me more than once and it's always no fun
[00:41:22] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:887c:d2d9:3cb2:586c)
[00:42:03] <MinimotoMusashi> :'D Because of your advise, it will save me from the same headache! I will check out attrs lib now.
[00:42:33] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[00:42:44] <ali1234> how do i override repr on an attrs?
[00:42:56] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[00:42:59] <grym> ali1234: define your own, i think it wins
[00:43:25] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 240 seconds)
[00:43:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[00:44:13] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[00:44:23] <grym> ali1234: you might have to also @attr.s(repr=False), not sure
[00:44:39] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[00:45:11] <SnoopJ> yea, you do have to do repr=False or the one you define will get clobbered
[00:45:47] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[00:46:04] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[00:46:26] *** Quits: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[00:47:05] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[00:47:54] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[00:49:17] *** Quits: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6) (Ping timeout: 252 seconds)
[00:50:08] *** Joins: kosh (~kosh@user/kosh)
[00:50:16] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[00:50:25] *** Joins: redrum88 (redrum88@user/redrum88)
[00:51:17] <ali1234> is there a way to say "don't include this attr in the automatic repr"?
[00:51:28] <ali1234> cos i just want to not display one of them
[00:51:29] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 252 seconds)
[00:51:46] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[00:51:58] *** Joins: Trieste (T@user/pilgrim)
[00:53:01] <grym> ali1234: probably.  https://www.attrs.org/en/stable/api.html#attr.s ; https://www.attrs.org/en/stable/api.html#attr.ib  is what i'd be reading to know
[00:53:06] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:53:20] <grym> indeed it's .ib(repr=False), but ... you could read these yourself
[00:53:45] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[00:54:01] <ali1234> but i'm using auto_attribs = True and auto_detect=True which mans i never call attr.ib()
[00:54:08] <SnoopJ> they aren't mutually exclusive
[00:54:19] <ali1234> all the fields look like "id: str"
[00:54:28] <SnoopJ> you can do `id: str = attr.ib(...)` without breaking anything
[00:54:31] <grym> you can fall back to an ib when you have to
[00:54:35] <ali1234> i see
[00:54:57] *** Joins: zyweo (~Svew@user/zyweo)
[00:55:57] <ali1234> it does in fact break things
[00:56:11] <ali1234> ValueError: No mandatory attributes allowed after an attribute with a default value or factory.
[00:56:33] <ali1234> oh wait i have to put it in the attr.ib call
[00:57:07] <grym> ali1234: lgtm https://bpa.st/WSBA
[00:57:30] <ali1234> grym: change x to x: str = "Hello"
[00:57:49] <ali1234> that code will break, because y has no default value and therefore must be defined first
[00:57:57] <grym> ah, i see.
[00:58:07] <grym> whenever i want to specify a default, i use .ib to do so
[00:58:10] <grym> so i've never hit this
[00:58:29] <ali1234> well even then you have to put the ones with no default first
[00:58:43] <ali1234> even if you did it with attr.ib
[00:58:51] <grym> so it would seem
[00:59:01] <grym> i guess i always just put the defaulted ones last by instinct :D
[00:59:18] <phox> urgh HHGTP seems to be stale, I have no /usr/local/opt/python; just python@3 and python@3.9, and there's no `python` under either of those just python3*  =/
[00:59:25] <phox> (yes this is from homebrew)
[00:59:31] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Quit: Leaving)
[01:00:54] <SnoopJ> ali1234, right, using attr.ib() doesn't change this requirement on order. If the attribute you're excluding from the repr has a default, you have to declare it as part of the attr.ib()
[01:01:25] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[01:02:04] <SnoopJ> i.e. `optional_hidden_attrib: T = attr.ib(default=42, repr=False)` to replace `optional_attrib: T = 42`
[01:03:12] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:03:21] *** Quits: pigweed (~pigweed@97.119.229.83) (Ping timeout: 265 seconds)
[01:03:57] *** Quits: reezoh (~reezoh@2600:1702:3cf0:2e00:9140:5b0f:e44c:c2d9) (Ping timeout: 252 seconds)
[01:05:15] *** Joins: sirn- (~sirn@user/sirn)
[01:06:00] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[01:06:08] *** Quits: sirn (~sirn@user/sirn) (Ping timeout: 265 seconds)
[01:06:08] *** sirn- is now known as sirn
[01:06:20] *** Joins: gooble_gobble (~gooble_go@ool-457a99e2.dyn.optonline.net)
[01:06:35] <gooble_gobble> folks.. what's it called when i have "def myfunc() -> int"
[01:06:45] *** Joins: arinov (~arinov@213.194.126.155)
[01:06:47] <gooble_gobble> whats the -> operator and this sub statement
[01:07:39] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[01:07:45] <SnoopJ> gooble_gobble, the -> is annotating the return type of the function, it's not an operator, just part of the syntax of function definitions. More reading: https://www.python.org/dev/peps/pep-3107/#return-values
[01:07:46] <lxer> it should return a int
[01:09:01] *** Quits: punchbag (punchbag@user/punchbag) (Quit: "I'll be back")
[01:09:05] *** Joins: Maplefinger (~nd@user/lindis)
[01:09:12] *** Joins: Aggraxis (~Aggraxis@2600:8807:9a00:1a61:e401:2f15:57c3:ccfc)
[01:09:14] <gooble_gobble> thanks SnoopJ
[01:09:21] <gooble_gobble> any idea what that was introduced?
[01:09:43] <SnoopJ> In 3.0, as that PEP's Python-Version field indicates
[01:09:47] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[01:10:00] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[01:10:10] <gooble_gobble> gotcha, nice. thanks!
[01:10:34] <SnoopJ> The semantics weren't fully defined until 3.5, though, you might want to also read PEP 484
[01:11:00] <SnoopJ> but it should be valid syntax in all modern Pythons
[01:11:09] <gooble_gobble> ok, nice. im on centos and were behind (3.6) but atleast those are there
[01:14:37] *** Quits: dre (~dre@60.229.45.121) (Ping timeout: 240 seconds)
[01:15:21] <kee> gooble_gobble: You might have `from __future__ import annotations`.
[01:15:27] <kee> That lets you use modern annotations syntax.
[01:16:21] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[01:16:54] <gooble_gobble> kee, good call, will do some experimentation
[01:21:01] *** Quits: rany_ (~rany@user/rany) (Remote host closed the connection)
[01:21:06] *** Joins: rany (~rany@user/rany)
[01:22:51] *** Quits: ubert1 (~Thunderbi@p200300ecdf0ba2ca8fd37040f9dc92fe.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:24:34] <SnoopJ> you don't need to do that for the *syntax* but it does bring in the modern postponed evaluation features (the annotation is preserved as a string, basically)
[01:24:47] *** Quits: magla (~gelignite@55d47927.access.ecotel.net) (Quit: Stay safe!)
[01:27:07] <kee> Meaning you can do int | bool without Python complaining. (But no, you wouldn't get extra syntax like `int bool`.)
[01:29:08] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:29:20] <SnoopJ> kee, that isn't brought in by the future import
[01:30:19] <kee> It isn't. But all that needs to be true is for `int | bool` to be syntactically valid; it doesn't need to run without errors if it's not being run.
[01:30:29] <kee> So the future import allows you to do it when you otherwise couldn't.
[01:30:51] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Quit: leaving)
[01:31:48] <SnoopJ> oh, I see what you mean
[01:32:07] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[01:32:32] <jinsun> int | bool is already syntactically valid though
[01:32:49] *** Quits: ffledgling (~textual@2620:10d:c090:500::32d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:32:52] <jinsun> the import just prevents it from being evaluated
[01:32:59] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[01:33:28] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:33:28] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-3937-0967-14b8-f5ba.res6.spectrum.com) (Read error: Connection reset by peer)
[01:33:47] *** Quits: ahub (~ahub@user/ahub) (Quit: Vous m'attraperez jamaaaaaaaaaais)
[01:33:48] <jinsun> you can't have syntactically invalid stuff like int? with that import, unfortunately
[01:34:16] <SnoopJ> yea it's valid syntax either way
[01:34:24] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[01:34:50] *** Joins: fdkf (~fdkf@178.49.152.151)
[01:34:55] <SnoopJ> jinsun, well, not without making them a string yourself :P
[01:35:17] <fdkf> how can I combine unicode and binary strings?
[01:35:43] <fdkf> i want to represent a path to a zip member
[01:35:46] <SnoopJ> fdkf, either encode() the unicode string (creating a bytestring), or decode() the bytestring (creating a unicode object)
[01:36:12] <jinsun> SnoopJ: yeah the ugly way would work
[01:36:33] <SnoopJ> jinsun, I guess if it allowed invalid syntax you'd have ambiguity to worry about
[01:36:35] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:560:d061:bdcc:9427) (Ping timeout: 252 seconds)
[01:37:25] *** Joins: ffledgling (~textual@2620:10d:c090:500::1:f627)
[01:38:00] <fdkf> the problem is, the zipfile module ruins the member names by converting them to unicode
[01:38:16] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:38:22] <fdkf> so it is pretty impossible to get them back
[01:38:28] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[01:40:05] *** Joins: Fozzworth (~Fozzworth@user/fozzworth)
[01:40:29] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[01:42:16] <bjs> fdkf: what do you mean "ruins" them?
[01:42:25] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[01:43:29] <fdkf> it makes a unicode string from what are bytes; even in a trivial cases it is impossible to tell apart utf-8 and pc-8 names
[01:43:50] *** Quits: grundrausch3n (~grundraus@p200300e9ef18ac00adafa0d8cbcf8ba8.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:43:56] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.3)
[01:44:07] <kee> fdkf: Does it skip characters, or ������ them?
[01:44:38] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[01:45:00] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[01:45:08] *** herme5 is now known as el_kevino
[01:46:10] <fdkf> "ä.txt" can be both b"\x84.txt" or b"\xc3\xa4. txt"
[01:46:32] *** Quits: Socra (~Socra@206.217.216.27) (Quit: Leaving)
[01:47:08] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:b593:bab6:272d:615b)
[01:47:34] *** Quits: Aggraxis (~Aggraxis@2600:8807:9a00:1a61:e401:2f15:57c3:ccfc) (Quit: Leaving)
[01:48:07] <kee> fdkf: Setting zinfo_flag_bits & 0x40 makes it decode to cp437 instead of UTF-8. Is that helpful?
[01:48:26] *** Joins: sagax (~sagax_nb@user/sagax)
[01:48:27] <kee> That involves modifying the file, I think.
[01:48:47] *** Quits: jay-m1261 (~jay-m@154.72.150.229) (Ping timeout: 265 seconds)
[01:48:47] *** Quits: jay-m126_ (~jay-m@154.72.150.229) (Ping timeout: 265 seconds)
[01:48:47] *** Quits: jay-m126 (~jay-m@154.72.150.229) (Ping timeout: 265 seconds)
[01:48:58] *** Joins: markb1 (~markb1@108-192-134-222.lightspeed.rlghnc.sbcglobal.net)
[01:50:38] *** Joins: Atque (~Atque@user/atque)
[01:54:55] *** Joins: dre (~dre@2001:8004:44e0:e2f7:4cb5:615f:6ecc:f9d3)
[01:55:25] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[01:55:50] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:b593:bab6:272d:615b) (Quit: smeeagle)
[01:56:36] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:b593:bab6:272d:615b)
[01:57:36] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:58:50] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[01:59:01] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[02:00:23] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 265 seconds)
[02:01:05] *** Joins: hemstock (~hemstock@194.59.250.234)
[02:02:09] *** 020AAGZV8 is now known as nyany
[02:03:29] *** Quits: gr1m (~gr1m@45.83.220.194) (Ping timeout: 256 seconds)
[02:03:53] *** Joins: tmus (~tmus@cust-185-157-203-2.nanoqnet.gl)
[02:03:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:04:08] *** Joins: gr1m (~gr1m@193.138.218.215)
[02:04:37] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:b593:bab6:272d:615b) (Ping timeout: 240 seconds)
[02:05:32] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[02:05:32] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[02:05:47] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.4-dev)
[02:06:06] *** Joins: KombuchaKip (~kip@192.252.230.5)
[02:06:20] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:08:51] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[02:09:20] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[02:12:37] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[02:12:38] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[02:13:46] *** Joins: r3m (~launch@user/r3m)
[02:16:49] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:90e6:2790:1466:e911) (Ping timeout: 265 seconds)
[02:17:05] *** Joins: xardas (~xardas@149.233.51.127)
[02:17:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:18:24] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[02:20:50] *** Quits: MinimotoMusashi (~MinimotoM@154.sub-174-197-37.myvzw.com) (Quit: Lost terminal)
[02:22:08] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 265 seconds)
[02:24:31] <xardas> Has anyone used odoo before ?
[02:24:37] *** Quits: Subsentient (~WhiteRat@universe2.us) (Ping timeout: 252 seconds)
[02:25:57] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:c551:8c63:652a:6c83)
[02:26:09] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:26:37] *** Quits: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[02:28:40] *** Joins: novapy (~novapy@c-68-62-193-246.hsd1.fl.comcast.net)
[02:29:12] *** Quits: ckdCreations (~ckdCreati@147.55.133.138) (Read error: Connection reset by peer)
[02:30:38] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[02:31:25] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 240 seconds)
[02:32:05] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[02:32:16] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[02:32:25] *** Quits: monkey_ (~user@181.114.17.106) (Remote host closed the connection)
[02:33:30] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[02:33:57] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[02:37:03] *** Quits: emf (~emf@2620:10d:c090:400::5:6c88) (Read error: Connection reset by peer)
[02:37:52] *** Quits: cliluw (~cliluw@47.147.80.149) (Quit: Leaving)
[02:38:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[02:38:37] *** Quits: novapy (~novapy@c-68-62-193-246.hsd1.fl.comcast.net) (Quit: leaving)
[02:39:02] *** Joins: novapy (~novapy@c-68-62-193-246.hsd1.fl.comcast.net)
[02:39:38] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[02:41:49] *** Quits: dre (~dre@2001:8004:44e0:e2f7:4cb5:615f:6ecc:f9d3) (Ping timeout: 240 seconds)
[02:42:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[02:43:08] *** Joins: emf (~emf@2620:10d:c091:480::1:c2f8)
[02:43:09] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 256 seconds)
[02:44:08] *** Joins: fikran (~fikran@user/fikran)
[02:44:35] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[02:44:51] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[02:49:08] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:50:30] *** Joins: maryo (~Maryo@user/maryo)
[02:56:28] *** Joins: wilk_ (~wilk@user/wilk)
[02:57:09] *** Quits: wilk (~wilk@user/wilk) (Ping timeout: 250 seconds)
[02:57:10] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[02:57:16] *** wilk_ is now known as wilk
[02:57:18] <fdkf> 'str' object does not support item assignment <- why?
[02:58:01] <fdkf> you could assign a slice before??
[02:58:02] <bjs> fdkf: because you can't change a string, it's immutable
[02:58:05] <bjs> no?
[02:59:06] <bjs> fdkf: strings have never (and probably, will never) support item assignment (or any other kind of mutation)
[02:59:17] <bjs> perhaps you want a list?
[02:59:46] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[03:00:07] *** Parts: tusko (~yeurt@copyfree/advocate/tusko) (Byeee)
[03:01:22] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[03:02:56] *** Quits: Dotz0cat (~Dotz0cat@h87.47.22.98.static.ip.windstream.net) (Ping timeout: 252 seconds)
[03:03:42] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[03:04:37] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[03:06:01] *** Joins: Dotz0cat (~Dotz0cat@h171.83.187.173.dynamic.ip.windstream.net)
[03:07:39] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[03:07:53] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:08:23] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:4819:c9fb:7a68:b7b3) (Quit: Konversation terminated!)
[03:08:39] <Peng> or a bytearray
[03:09:37] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[03:10:35] *** Parts: kee (~wizzwizz4@user/wizzwizz4) (⭘)
[03:12:17] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[03:13:50] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:14:37] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Ping timeout: 240 seconds)
[03:14:41] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:c551:8c63:652a:6c83) (Quit: Client closed)
[03:14:57] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:c551:8c63:652a:6c83)
[03:15:46] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[03:16:38] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:19:35] *** Joins: chenqisu1 (~03cia7d@183.217.201.63)
[03:20:17] *** Joins: dre (~dre@2001:8003:c932:c301:97c2:3a80:30a5:4f30)
[03:21:01] *** Quits: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[03:21:08] *** Parts: abraham (~abraham@143.244.185.86) (The Lounge - https://thelounge.chat)
[03:21:49] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[03:24:33] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:25:49] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:25:53] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:28:12] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:31:38] <whatsupdoc> How do you slice an array so that you have the middle have go in the opposite direction?
[03:31:42] <whatsupdoc> *half
[03:31:54] <whatsupdoc> [1,2,3,4,5,6] => [3,2,1]
[03:32:05] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[03:32:26] <whatsupdoc> I was thinking nums[len(nums)//2👎-1]?
[03:34:18] <bjs> whatsupdoc: that_list[2::-1]
[03:34:18] <SnoopJ> whatsupdoc, does `lst[len(nums)//2-1::-1]` do what you want?
[03:34:38] <bjs> and in general ^
[03:34:54] <whatsupdoc> oh damn
[03:34:55] <whatsupdoc> yea
[03:35:03] <phox> gr1m: thanks again for the py install/env/pip/etc recipe, that indirectly answered a lot of things like "oh I can get the right version of pip with py -m pip :D
[03:35:04] <whatsupdoc> Why does adding an endpoint of -1 break it?
[03:35:09] <whatsupdoc> I don't fully understand
[03:35:12] <phox> gr1m: sorry miscomplete
[03:35:16] <phox> grym: thanks again for the py install/env/pip/etc recipe, that indirectly answered a lot of things like "oh I can get the right version of pip with py -m pip :D
[03:35:24] <whatsupdoc> list[5👎-1]
[03:35:28] <bjs> whatsupdoc: the syntax is [start:stop:slice]
[03:35:40] <whatsupdoc> `list[5👎-1]`
[03:35:41] <phox> *step
[03:35:49] <whatsupdoc> this thumbs down smh
[03:36:03] <whatsupdoc> `list[5: -1 : -1]`
[03:36:08] <phox> you seem to have installed a text vandalism tool instead of an IRC client :)
[03:36:19] *** Joins: naan (~Naan@user/naan)
[03:36:22] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:36:28] <whatsupdoc> I am using irccloud.com
[03:36:44] <phox> ah, condolences?  or might be your OS who knows
[03:36:49] <phox> anyways, whitespace ftw
[03:36:57] <bjs> or you just need to disable that option in the irccloud options :P
[03:36:57] *** Quits: dre (~dre@2001:8003:c932:c301:97c2:3a80:30a5:4f30) (Ping timeout: 268 seconds)
[03:37:07] <phox> shouldn't be on by default
[03:37:09] <phox> :D
[03:37:18] <whatsupdoc> :D
[03:37:36] <bjs> whatsupdoc: https://docs.python.org/3/library/stdtypes.html#common-sequence-operations has the docs for the slicing syntax
[03:37:41] <whatsupdoc> So, any reason why adding an endpoint of -1 makes it fail?
[03:38:12] <whatsupdoc> I'd think 5: -1 : -1, would do 5, 4, 3, 2, 1, 0
[03:38:23] *** Quits: ccallahan (~ccallahan@redhat/ccallahan) (Remote host closed the connection)
[03:40:12] <bjs> whatsupdoc: -1 is the last element of the array
[03:40:16] <bjs> list
[03:40:26] <bjs> that_list[-1] == 6
[03:40:28] <SnoopJ> whatsupdoc, -1 and 5 are the same place in a length-6 list
[03:40:36] *** Joins: xardas (~xardas@149.233.51.127)
[03:40:49] <whatsupdoc> Oh
[03:40:49] <SnoopJ> so it starts at 5, tests if it has arrived at -1 yet (it has, because again, same place), and returns
[03:41:00] <whatsupdoc> Ok I see
[03:41:16] <whatsupdoc> Is there a way to explicitly write out an end of list or nah?
[03:41:23] <bjs> whatsupdoc: you can go that_list[2:-7:-1]
[03:41:30] <SnoopJ> slice with None means "go that way until you hit one of the edges"
[03:41:35] <whatsupdoc> lol
[03:41:37] <bjs> whatsupdoc: yes, that_list[2::-1] is the same as that_list[2:None:-1]
[03:42:04] <SnoopJ> (you couldn't ever get anything but [] from [5👎-1] because either 5 is -1, or it will step away from -1)
[03:42:06] <whatsupdoc> Ok, but obviously that sucks lol
[03:42:13] <bjs> whatsupdoc: what sucks?
[03:42:15] <SnoopJ> um, [5 : -1 : 1] :)
[03:42:23] <whatsupdoc> 5:None:-1
[03:42:31] <whatsupdoc> instead of 5::-1
[03:42:40] <SnoopJ> they're exactly the same
[03:42:49] <SnoopJ> they both produce slice(5, None, -1)
[03:42:50] <whatsupdoc> Yes, I know but I was just saying, 5::-1 looks better
[03:42:51] <bjs> whatsupdoc: well you have 2 different syntaxes there you can choose from,  are you unhappy with both of them?
[03:43:03] <bjs> ah
[03:43:08] <whatsupdoc> No, I was just saying that the one with none is worse
[03:43:23] <whatsupdoc> Might as well just leave it out
[03:43:39] <SnoopJ> that's conventional, yes
[03:44:26] *** Joins: MikachuPi (~Mikachu@2001:bc8:47a8:559::1)
[03:44:43] <bjs> whatsupdoc: as per the docs I just linked,  you'll see that leaving it out and writing None are the same thing and that they then assume the "end" values
[03:46:07] <whatsupdoc> yea i get that it's technically the same
[03:46:29] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: The Lounge - https://thelounge.chat)
[03:50:06] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 265 seconds)
[03:50:47] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:52:15] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:54:03] *** Joins: Wulf (~Wulf@user/wulf)
[03:55:24] *** Joins: dre (~dre@60.229.45.121)
[03:55:28] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:59:02] *** Quits: grimvar (~grimvar@i5C75F4E8.versanet.de) (Ping timeout: 240 seconds)
[04:00:12] *** Joins: Techcable (~Techcable@168.235.93.147)
[04:01:05] *** Joins: grimvar (~grimvar@i5C75F5D6.versanet.de)
[04:01:39] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[04:03:21] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[04:03:55] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:08:50] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[04:09:21] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 256 seconds)
[04:09:24] *** Joins: grayn (grayn@gateway/vpn/protonvpn/grayn)
[04:09:29] *** Quits: pflanze (~pflanze@5-168-208-80-pool.fiber.fcom.ch) (Ping timeout: 252 seconds)
[04:10:03] *** Quits: grayn (grayn@gateway/vpn/protonvpn/grayn) (Client Quit)
[04:11:05] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[04:12:03] *** Joins: c4017w (~c4017@209.52.68.8)
[04:15:31] *** Quits: bss (bss@rie.incorporeal.org) (Quit: brb)
[04:17:39] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 265 seconds)
[04:18:08] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:18:35] *** Joins: vimart (~vimart@213.205.197.23)
[04:19:15] *** Quits: resmo (~resmo@2a00:d420:9:8a00:462a:45df:8884:16ae) (Remote host closed the connection)
[04:19:25] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[04:19:28] *** Joins: resmo (~resmo@2a00:d420:9:8a00:462a:45df:8884:16ae)
[04:19:49] *** Joins: Terexen (~terexen@user/terexen)
[04:19:51] *** Joins: bss (bss@rie.incorporeal.org)
[04:23:40] *** Joins: orville (~orville@c-67-170-226-157.hsd1.ca.comcast.net)
[04:23:45] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:24:58] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[04:26:13] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Remote host closed the connection)
[04:31:01] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:d1fb:d15b:4215:e584) (Remote host closed the connection)
[04:33:29] <phox> Still trying to shake out testing etc, if I e.g. pull a Py package from a repo somewhere and want to load its module(s) into the repl, do I pip install -e . while "using" a virtualenv elsewhere or what's the best way to handle that?
[04:34:47] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 252 seconds)
[04:35:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:35:03] *** Quits: tmus (~tmus@cust-185-157-203-2.nanoqnet.gl) (Ping timeout: 265 seconds)
[04:35:16] <grym> phox: you generally want to install (with pip) the package with /somevenv/bin/python -m pip install; then you can launch somevenv/bin/python  and `import` that thing
[04:35:34] <grym> ( by its installed name )
[04:35:57] <phox> so possibly useful to have a separate virtualenv per thing I pull in and want to maintain?
[04:36:05] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[04:36:16] <phox> unless say I have several 3p things I want to work on integrating together, but otherwise assuming I am modifying one upstream package at a time...
[04:36:21] <grym> you genreally have a separate venv per _project_; that venv may have many, many things installed in it
[04:36:39] <phox> ok.  seems to agree with what I said, sounds good.
[04:36:41] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:37:09] <phox> I mean technically yeah there are 3 repos but also one has no Py and also also I want to avoid bleeding namespace between the other two as it could create or mask bugs
[04:37:14] <grym> so i'm working on project work-X; work-X has like ... 30 dependencies, plus about 5 more for testing and development work that aren't needed at runtime
[04:37:25] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 240 seconds)
[04:37:41] <grym> so i make one venv with 36 things in it: the project itself (with -e), the 30 deps (without -e), and the 5 dev deps (pytest, coverage.py, etc.)
[04:37:53] <SnoopJ> phox, tox is also a useful tool if you're interested in provisioning environments automatically (e.g. for testing, which is a major use-case for it)
[04:39:28] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[04:42:21] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:42:56] *** Quits: flokuehn (~flokuehn@87.123.247.86) (Ping timeout: 268 seconds)
[04:44:16] *** Joins: flokuehn (~flokuehn@87.123.247.51)
[04:48:59] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[04:49:38] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[04:50:37] *** Joins: nomic2 (~nomic@185.217.117.220)
[04:51:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[04:53:07] *** Quits: nomic (~nomic@185.217.117.73) (Ping timeout: 252 seconds)
[04:53:11] *** nomic2 is now known as nomic
[04:53:31] *** Joins: fikran (~fikran@user/fikran)
[04:56:11] *** Quits: supay (adas@adas.shelltalk.net) (Ping timeout: 245 seconds)
[04:57:56] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:58:34] *** Joins: Barones (~Barones@2804:7f3:8988:ba36:2a54:ab0c:1f7c:cc78)
[04:58:55] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:c870:8794:fd7d:9084)
[04:59:52] *** Quits: scarce (~scarce@sourcehut/user/scarce) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[05:00:11] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 265 seconds)
[05:01:28] *** Joins: odoood (~odoood@2601:c8:c003:a550::5)
[05:02:08] *** Joins: Macuser (~Macuser@216.30.159.201)
[05:02:20] *** Quits: odoood (~odoood@2601:c8:c003:a550::5) (Remote host closed the connection)
[05:02:44] *** Joins: odoood (~odoood@2601:c8:c003:a550::5)
[05:04:02] *** Joins: parv (~quass@user/parv)
[05:04:34] <phox> SnoopJ: does tox integrate well (and consistently) with both local testing and on-build-server unit testing?
[05:05:11] <phox> "build server" being ephemeral, so no persistent config there
[05:05:39] <SnoopJ> phox, yes, it's designed with CI in mind
[05:05:45] <phox> cool
[05:05:49] <phox> ok will investigate
[05:06:15] <phox> (sorry, asking questions about tool completeness because of e.g. experience with everyone-and-their-dog's venv best practices which often leave huge gaps lol)
[05:06:40] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[05:06:41] <phox> currently converting my setup to follow HHGTP's guidance on managing versions etc
[05:06:43] <SnoopJ> No need to apologize, questions like this are very topical here ;)
[05:06:44] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:06:56] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[05:07:03] <phox> hopefully tox is *usefully* prescriptive, we'll see.
[05:07:26] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 245 seconds)
[05:07:50] <SnoopJ> It isn't particularly opinionated, it's more of a toolkit for automating things with isolated environments as a core feature
[05:08:22] <SnoopJ> a very common use-case: running tests for some package in isolated environments for multiple Python versions
[05:08:55] *** Joins: Bardon (~Bardon@user/Bardon)
[05:09:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[05:10:10] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:1e77:2cb5:db23:f9ee)
[05:10:31] <phox> Well, I mean hopefully it's opinionated as to how to use *it*
[05:12:33] *** Quits: naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[05:13:57] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 256 seconds)
[05:14:36] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[05:14:56] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[05:16:01] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[05:16:48] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[05:19:09] *** Quits: odoood (~odoood@2601:c8:c003:a550::5) (Ping timeout: 252 seconds)
[05:20:05] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[05:20:15] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Quit: I have phased into another dimension, see ya later!)
[05:21:22] <phox> SnoopJ: any clever recommendations around interactive testing w/ the repl, as the other side of that coin (kinda)?  just pip install -e . or anything fancier/cleaner/whatever?
[05:22:05] <phox> (seems to be mostly consensus that -e is the straightforward way but figured I would ask, rather not change practices later...)
[05:22:21] <grym> -e just lets you drop into a repl and import as normal without reinstalling
[05:22:49] <grym> phox: SnoopJ has plenty of good ideas though :)
[05:22:49] *** Joins: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda)
[05:23:06] <phox> ya
[05:23:25] <grym> the edge case i knwo of for repls is that reloading modules is dicey, so even with -e, expect to restart your repl session often
[05:23:27] <SnoopJ> phox, I don't know what "interactive testing w/ the repl" really means here. Are you talking about how to work with a package you're developing, or how to "test drive" arbitrary packages?
[05:23:53] <phox> grym: I'm generally ok with that, my lazy *** can just have a text file of init code to run when I do, I'll live :)
[05:24:18] <phox> grym: also mostly what I end up doing is wanting to play with the environment new code is being run in with the repl, so the repl doesn't usually need new stuff often
[05:24:32] <grym> phox: if you're going to <do repl stuff> and then write more code and then <do more repl stuff> , there's going to be a 'restart the repl' step in there after write more code
[05:24:45] <phox> SnoopJ: somewhere in-between, playing with supporting components within the package I am working on
[05:25:59] *** Joins: defjam (~eb0t@90.202.255.10)
[05:26:00] <phox> anyways ok cool thanks a bunch, this is much more clear than The Internets were willling to yield :D
[05:26:20] <SnoopJ> phox, if `pip install -e` works, then that's a nice choice. I often test out stuff I'm working on in a $work module (that is built by a C++ project) by running `env -C path/to/package/root python3 -c "import pkg; pkg.do_stuff()` where `pkg/` is just below the path I change to with `env` and is importable that way.
[05:26:25] <schmoee_> VR Backpack??
[05:26:31] <schmoee_> oop ssorry\
[05:28:23] <SnoopJ> phox, when it comes to developer tooling, I'm very much of the opinion "try a bunch of options and see what you like," with the added caution to consider who else will have to deal with the tools if they end up becoming a *requirement* to work on the project
[05:29:21] <phox> yeah I am trying to make this minimally annoying to set up locally for anyone including myself, and minimal config
[05:29:26] *** Joins: jonthesnow (~xizhendu@36.112.188.169)
[05:29:52] <phox> tox seems like the answer for over there ->  and seems like the interface poking w/ -e is The Way to not have to think too hard about managing that
[05:30:19] <phox> lots of options, like tripping over importlib etc but then I have to have a recipe for that, vs just having the project-specific venv and I'm done
[05:30:32] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[05:30:47] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[05:30:54] <phox> oh, how do you tend to set up your project-specific venv relative to the packages you're editing/importing with -e?  separate, nested in the venv?
[05:31:11] <phox> tryin' to avoid the ole' pitfalls :D
[05:31:23] *** Quits: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda) ()
[05:31:42] *** Joins: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda)
[05:32:25] <grym> phox: neither separate nor nested, it's just the same
[05:32:26] <SnoopJ> I use direnv to automatically create/activate my venvs (activated when I cd into a directory, deactivated when I leave), personally, so it all ends up in .direnv/python-3.Y.Z/
[05:32:43] <SnoopJ> some people like using poetry, some people like [other options]
[05:33:00] *** Quits: reset (~reset@user/reset) (Quit: reset)
[05:33:22] *** Joins: pigweed (~pigweed@97.119.229.83)
[05:33:33] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[05:33:36] <schmoee_> index USER
[05:33:43] *** Quits: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda) (Client Quit)
[05:34:21] *** Joins: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda)
[05:34:55] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 252 seconds)
[05:35:47] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[05:37:07] *** Quits: ffledgling (~textual@2620:10d:c090:500::1:f627) (Ping timeout: 252 seconds)
[05:37:24] *** Quits: gooble_gobble (~gooble_go@ool-457a99e2.dyn.optonline.net) (Ping timeout: 265 seconds)
[05:38:47] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[05:39:47] <phox> SnoopJ: interesting, that sounds like a huge timesaver... how are you handling the creation (what's the logic)?  and I guess that also solves the "go into a directory and run pytest [...] and it should just work thing?
[05:42:26] <SnoopJ> phox, I don't have to handle much at all, that's why I use direnv. I mostly put `layout python3` in my `.envrc` and the rest happens for free
[05:43:34] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[05:43:35] <SnoopJ> this page shows off what it knows about Python out of the box (i.e. without plugins, which are a thing that exists) as well as some roughly-equivalent code to how `layout python3` does its thing: https://github.com/direnv/direnv/wiki/Python
[05:46:02] <SnoopJ> phox, there's nothing really wrong with activating a venv or invoking it directly, though. To run tests in a staging environment, I tend to do `/path/to/project/venv/bin/python3 -m pytest /path/to/project/tests` or something like that (i.e. I run pytest using exactly *that* interpreter)
[05:49:00] *** Joins: qpdb (~qpdb@user/qpdb)
[05:49:47] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[05:51:09] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[05:51:29] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[05:51:45] *** Quits: fdkf (~fdkf@178.49.152.151) (Quit: Client closed)
[05:53:25] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[05:54:57] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[06:00:20] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[06:00:55] *** Joins: thurs806014210 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[06:01:04] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[06:03:01] *** Quits: Dotz0cat (~Dotz0cat@h171.83.187.173.dynamic.ip.windstream.net) (Ping timeout: 265 seconds)
[06:03:10] *** Quits: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda) ()
[06:05:39] *** Joins: SteveR (~SteveR@103.215.168.1)
[06:06:10] *** Joins: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda)
[06:06:12] *** Joins: Dotz0cat (~Dotz0cat@h64.13.31.71.dynamic.ip.windstream.net)
[06:06:27] *** Quits: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[06:06:48] <SteveR> hi there, when should i be using import mymodule.submodule
[06:07:05] <SteveR> how would my files looks like when i use the above approach
[06:07:05] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[06:09:18] <SteveR> when a folder is called as a module in python
[06:10:24] *** Joins: sl0wz (~slowz@2603:a058:0:deb:e33:9:bb69:6bb7)
[06:10:46] *** Quits: pigweed (~pigweed@97.119.229.83) (Quit: Leaving)
[06:11:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[06:12:35] *** Quits: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda) ()
[06:12:47] <parv> SteveR, Whenever  you want to use "mymodule.submodule".?
[06:13:47] *** Joins: newpy (~newpy@2601:280:4381:1390:a1fb:26ba:a7d4:e92c)
[06:16:38] *** Joins: ub (~Thunderbi@p200300ecdf0ba286bd3e231ce6977cbe.dip0.t-ipconnect.de)
[06:17:01] *** Quits: demirok (~bell@user/demirok) (Quit: Leaving.)
[06:17:16] *** Joins: demirok (~bell@user/demirok)
[06:18:00] *** Quits: ubert (~Thunderbi@p200300ecdf0ba2ca3910be5e8791151b.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[06:18:00] *** ub is now known as ubert
[06:19:08] *** Joins: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda)
[06:21:53] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[06:22:23] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:22:41] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[06:22:55] *** Quits: Barones (~Barones@2804:7f3:8988:ba36:2a54:ab0c:1f7c:cc78) (Quit: Leaving)
[06:24:13] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 240 seconds)
[06:24:25] <parv> SteveR, In "mymodule" directory you would have an __init__.py, possibly empty.
[06:24:31] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:25:20] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[06:25:20] *** brabrax_ is now known as brabrax
[06:27:26] *** Quits: TML (~tml@user/tml) (Ping timeout: 260 seconds)
[06:27:36] *** Quits: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda) ()
[06:29:25] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[06:30:43] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:31:19] *** Joins: brabrax (~brabrax@user/brabrax)
[06:32:28] *** Joins: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda)
[06:33:01] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 240 seconds)
[06:33:39] *** Joins: millido (~millido@84.210.150.128)
[06:34:43] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[06:35:18] *** Quits: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda) (Client Quit)
[06:38:40] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[06:38:56] *** Joins: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda)
[06:39:33] *** Joins: emerent_ (~quassel@p200300cd571d489bba27ebfffed28a59.dip0.t-ipconnect.de)
[06:39:33] *** emerent is now known as Guest2577
[06:39:33] *** Quits: Guest2577 (~quassel@p200300cd5715b0a8ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (zinc.libera.chat (Nickname regained by services)))
[06:39:33] *** emerent_ is now known as emerent
[06:40:00] *** Quits: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda) (Client Quit)
[06:40:40] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:43:09] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[06:43:10] *** Joins: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda)
[06:46:37] *** Joins: qpdb (~qpdb@user/qpdb)
[06:47:29] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 265 seconds)
[06:48:17] *** Joins: Axy (~Axy@user/axy)
[06:49:21] *** Quits: BinaryWave (~binarywav@ip68-2-121-39.ph.ph.cox.net) (Ping timeout: 252 seconds)
[06:51:29] *** Quits: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda) ()
[06:53:33] *** Joins: junebug (~junebug@2600:1700:3db0:2540:da15:34cc:225d:74dc)
[06:53:38] *** Joins: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda)
[06:55:24] *** Joins: muck (~utamaro@user/utamaro)
[06:57:09] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Ping timeout: 265 seconds)
[06:58:15] *** Quits: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda) (Client Quit)
[06:59:47] *** Joins: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda)
[07:00:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[07:01:15] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[07:02:54] *** Joins: fikran (~fikran@user/fikran)
[07:05:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:06:12] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:06:12] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:06:12] *** finn_elija is now known as FinnElija
[07:08:43] *** Quits: nomic (~nomic@185.217.117.220) (Quit: Leaving)
[07:10:38] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:c551:8c63:652a:6c83) (Ping timeout: 256 seconds)
[07:10:48] *** Quits: foxbox (~cammy@user/cammy) (Quit: I'll see you in the future.)
[07:13:54] *** Joins: dba_ (uid502594@id-502594.hampstead.irccloud.com)
[07:14:20] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[07:14:52] *** Joins: jazzy (~jaziz@user/jaziz)
[07:16:27] *** Joins: schmoee__ (~schmoee@c-69-248-84-46.hsd1.nj.comcast.net)
[07:19:41] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[07:20:09] *** Quits: schmoee_ (~schmoee@2601:84:4501:6440:f968:711f:efca:9fda) (Ping timeout: 252 seconds)
[07:21:15] *** Quits: junebug (~junebug@2600:1700:3db0:2540:da15:34cc:225d:74dc) (Ping timeout: 252 seconds)
[07:22:38] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[07:23:50] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:c551:8c63:652a:6c83)
[07:24:27] *** Quits: schmoee__ (~schmoee@c-69-248-84-46.hsd1.nj.comcast.net) ()
[07:25:47] *** Joins: schmoee_ (~schmoee@2601:84:4501:6440:fde5:dadb:eb67:2c5a)
[07:26:00] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[07:26:01] *** Joins: XV8 (~XV8@2601:5cb:c001:50:2429:6786:e85:8187)
[07:27:08] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[07:27:20] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[07:27:31] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Client Quit)
[07:29:53] *** Quits: damonlynch (~ngaio@static-68-235-44-21.cust.tzulo.com) (Quit: Leaving)
[07:30:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:31:49] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 240 seconds)
[07:32:39] *** Joins: overrider (~overrider@user/overrider)
[07:33:04] *** Joins: junebug (~junebug@2600:1700:3db0:2540:fc4:1b1d:95c1:966c)
[07:33:28] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a239:503:887c:d2d9:3cb2:586c) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:34:12] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[07:34:13] *** Quits: schmoee_ (~schmoee@2601:84:4501:6440:fde5:dadb:eb67:2c5a) ()
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:12] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:33] *** Joins: schmoee_ (~schmoee@2601:84:4501:6440:fde5:dadb:eb67:2c5a)
[07:37:26] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[07:38:37] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 240 seconds)
[07:39:02] *** Joins: kdc (~kdc@196.211.197.159)
[07:39:13] *** Quits: emf (~emf@2620:10d:c091:480::1:c2f8) (Ping timeout: 252 seconds)
[07:39:22] *** Joins: emf_ (~emf@2620:10d:c091:480::1:c2f8)
[07:40:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[07:40:10] *** Quits: junebug (~junebug@2600:1700:3db0:2540:fc4:1b1d:95c1:966c) (Ping timeout: 265 seconds)
[07:40:32] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[07:41:36] *** Quits: explodes (~explodes@user/explodes) (Ping timeout: 245 seconds)
[07:42:19] *** Joins: glazed (~glazed@cpe-76-172-93-136.socal.res.rr.com)
[07:42:21] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:c551:8c63:652a:6c83) (Ping timeout: 256 seconds)
[07:42:32] *** Joins: explodes (~explodes@user/explodes)
[07:42:35] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-58b0-3c44-7c29-0f48.res6.spectrum.com) (Ping timeout: 265 seconds)
[07:45:05] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 252 seconds)
[07:45:22] *** Joins: Matt343 (~Matt343@c-69-181-108-8.hsd1.ca.comcast.net)
[07:45:31] *** Quits: Matt343 (~Matt343@c-69-181-108-8.hsd1.ca.comcast.net) (Client Quit)
[07:45:43] *** Joins: Matt343 (~Matt343@c-69-181-108-8.hsd1.ca.comcast.net)
[07:45:47] *** Matt343 is now known as DavidDavidson
[07:46:53] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[07:47:20] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[07:47:32] *** Quits: sreve (~quassel@p4ff44c06.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[07:48:19] *** Joins: sreve (~quassel@p4ff4494e.dip0.t-ipconnect.de)
[07:49:38] *** Joins: teut (~teut@182.68.68.35)
[07:49:44] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[07:49:51] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:49:57] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:50:26] *** Quits: chenqisu1 (~03cia7d@183.217.201.63) (Quit: Leaving)
[07:50:43] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[07:51:57] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:53:01] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 240 seconds)
[07:53:24] *** Quits: XV8 (~XV8@2601:5cb:c001:50:2429:6786:e85:8187) (Quit: Textual IRC Client: www.textualapp.com)
[07:53:27] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[07:54:00] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:54:49] *** Joins: SteveR (~SteveR@103.215.168.1)
[07:55:12] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[07:55:34] *** Joins: SteveR83 (~SteveR@103.215.168.1)
[07:55:42] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[07:58:21] *** Quits: schmoee_ (~schmoee@2601:84:4501:6440:fde5:dadb:eb67:2c5a) ()
[07:58:41] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-4173-3ede-b634-13c0.res6.spectrum.com)
[07:59:00] <glazed> hi, i'm trying to use threads to download some data in parallel. each request either generates two more requests or no more requests. i'm trying to use a Queue and ThreadPoolExecutor, but i can't figure out how to get it to terminate at the appropriate time. my basic structure is here: https://bpa.st/WPYQ - if i do it the way in that paste, then it
[07:59:00] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[07:59:00] <glazed> terminates immediately. if i try to do something like check for active threads, then it runs forever. is there a way to signal that once the queue is empty, it should stop running?
[07:59:14] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[08:04:00] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[08:04:01] <SteveR83> hello there: a = [2,3,4,5]; b = []     for i in a: b.append(a)
[08:04:10] <SteveR83> b = [i for i in a]
[08:04:22] <SteveR83> why the 2nd method is preferred than the first
[08:05:04] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:05:14] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[08:10:34] *** Joins: aniketgm (~Aniket@49.36.109.129)
[08:14:30] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:897c:78e8:392:6374)
[08:14:54] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:a161:1e54:b866:6e50)
[08:16:41] *** Joins: maryo (~Maryo@user/maryo)
[08:18:45] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:18:50] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 265 seconds)
[08:19:16] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[08:19:39] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:897c:78e8:392:6374) (Quit: Client closed)
[08:20:47] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:21:27] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:897c:78e8:392:6374)
[08:21:33] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[08:21:40] *** Joins: schmoee_ (~schmoee@c-69-248-84-46.hsd1.nj.comcast.net)
[08:21:57] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:1e77:2cb5:db23:f9ee) (Quit: Leaving)
[08:22:13] *** Joins: iflema (~ian@user/iflema)
[08:23:05] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 268 seconds)
[08:23:05] *** jmiehe1 is now known as jmiehe
[08:23:21] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:897c:78e8:392:6374) (Client Quit)
[08:24:32] <parv> 2 more for you: b.extend( a ); b[] = a[:]
[08:24:44] <dre> SteveR83, according to whom?
[08:24:59] <parv> Sorry, last one should be "b[:] = a[:]"
[08:25:22] <dre> I feel like the japanese might like the second, but java aficionados might like the first one; we'll never know.
[08:27:10] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[08:27:33] *** Quits: schmoee_ (~schmoee@c-69-248-84-46.hsd1.nj.comcast.net) ()
[08:28:05] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:1e77:2cb5:db23:f9ee)
[08:29:15] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:1e77:2cb5:db23:f9ee) (Remote host closed the connection)
[08:30:55] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a239:503:a161:1e54:b866:6e50) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:33:25] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 240 seconds)
[08:33:43] *** Quits: vimart (~vimart@213.205.197.23) (Quit: WeeChat 2.8)
[08:35:38] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[08:36:08] *** Joins: fulljab (~fulljab@paloboi.student.rit.edu)
[08:40:13] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[08:41:16] <parv> I did not want to mention, but if I do not, that will keep me irritated. So: import copy; b = copy.deepcopy( a )
[08:44:39] *** Quits: newpy (~newpy@2601:280:4381:1390:a1fb:26ba:a7d4:e92c) (Quit: Leaving)
[08:44:49] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[08:47:17] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[08:47:19] *** Joins: devish (~devish@205.251.233.52)
[08:47:57] <deniska> b = a.copy()
[08:48:08] <deniska> deepcopy is a very niche tool
[08:48:43] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[08:48:53] *** Quits: emf_ (~emf@2620:10d:c091:480::1:c2f8) (Ping timeout: 252 seconds)
[08:50:10] *** Joins: iflema (~ian@user/iflema)
[08:51:50] *** Quits: Elzington (~Elzington@static-68-235-44-10.cust.tzulo.com) (Quit: Leaving)
[08:54:52] *** Joins: jab416171 (~jab416171@c-174-52-177-39.hsd1.ut.comcast.net)
[08:55:28] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-4173-3ede-b634-13c0.res6.spectrum.com) (Quit: jarthur)
[08:55:35] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[08:57:06] <hemstock> I once wasted several hours trying to figure out why my copied list wasn't working. I had to learn deepcopy the hard way
[08:57:16] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:3ddf:77ed:0:281) (Remote host closed the connection)
[09:00:18] *** Joins: schmoee (~schmoee@2601:84:4501:6440:68a9:fb94:5531:4670)
[09:01:52] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Remote host closed the connection)
[09:02:01] *** Quits: glazed (~glazed@cpe-76-172-93-136.socal.res.rr.com) (Quit: Client closed)
[09:02:57] <deniska> If you need deepcopy, chances are you need to reorganize some code and then you don't need it anymore
[09:03:20] *** Quits: schmoee (~schmoee@2601:84:4501:6440:68a9:fb94:5531:4670) (Read error: Connection reset by peer)
[09:03:21] <deniska> often it's a "deadline was tomorrow" kind of bandaid
[09:03:54] *** Joins: schmoee (~schmoee@2601:84:4501:6440:68a9:fb94:5531:4670)
[09:05:17] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[09:06:39] <hemstock> like start using classes instead of list of dicts?
[09:09:03] *** Quits: schmoee (~schmoee@2601:84:4501:6440:68a9:fb94:5531:4670) (Ping timeout: 252 seconds)
[09:10:06] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[09:10:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[09:11:03] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (Remote host closed the connection)
[09:11:35] *** Joins: schmoee (~schmoee@2601:84:4501:6440:68a9:fb94:5531:4670)
[09:12:17] *** Joins: fikran (~fikran@user/fikran)
[09:12:30] <deniska> hemstock: instead of making a copy of a data structure you have around, make a function which creates a new data structure in the shape which you need
[09:13:06] *** Quits: demirok (~bell@user/demirok) (Quit: Leaving.)
[09:13:06] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:897c:78e8:392:6374)
[09:13:20] <deniska> going from dicts to classes is also nice because foo.bar is less awkward to type than foo['bar'], but classes don't solve this particular issue
[09:13:33] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:897c:78e8:392:6374) (Client Quit)
[09:14:28] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:14:40] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:15:42] *** Quits: schmoee (~schmoee@2601:84:4501:6440:68a9:fb94:5531:4670) (Remote host closed the connection)
[09:16:23] *** Quits: Maplefinger (~nd@user/lindis) (Remote host closed the connection)
[09:16:47] <hemstock> ok got it thanks.
[09:18:58] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[09:19:11] *** Joins: schmoee (~schmoee@2601:84:4501:6440:68a9:fb94:5531:4670)
[09:20:20] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[09:20:25] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 252 seconds)
[09:21:23] *** Joins: TML (~tml@user/tml)
[09:22:00] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[09:22:02] *** Joins: pizzaiolo (~pizzaiolo@user/pizzaiolo)
[09:23:56] <schmoee> yo
[09:25:20] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[09:25:21] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:26:15] *** Quits: schmoee (~schmoee@2601:84:4501:6440:68a9:fb94:5531:4670) ()
[09:28:19] *** Joins: stranac (~stranac@195.29.239.126)
[09:29:27] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[09:30:54] *** Joins: schmoee (~schmoee@2601:84:4501:6440:68a9:fb94:5531:4670)
[09:32:05] <aniketgm> yo maan!
[09:32:56] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[09:35:52] *** Quits: schmoee (~schmoee@2601:84:4501:6440:68a9:fb94:5531:4670) ()
[09:36:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:38:37] *** Joins: audio (~audio@user/audio)
[09:40:06] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[09:41:45] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Read error: Connection reset by peer)
[09:43:04] *** Joins: Jong (~Jong@2620:10d:c090:400::5:1592)
[09:49:27] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[09:50:15] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[09:50:41] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[09:51:34] *** Joins: junebug (~junebug@2600:1700:3db0:2540:f0d0:9907:b5bd:5cd7)
[09:51:38] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 265 seconds)
[09:51:54] *** Joins: han-solo (~hanish@user/han-solo)
[09:53:25] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[09:53:42] *** Joins: upsala (~zcb@185.213.155.232)
[09:53:58] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:55:18] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:56:21] *** Quits: junebug (~junebug@2600:1700:3db0:2540:f0d0:9907:b5bd:5cd7) (Ping timeout: 252 seconds)
[09:56:28] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[09:57:17] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[09:57:36] *** Quits: aniketgm (~Aniket@49.36.109.129) (Read error: No route to host)
[09:57:55] *** lukedashjr is now known as luke-jr
[10:00:25] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:b1b1:d6b9:c8f5:83a0)
[10:00:33] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:00:48] *** Joins: schmoee (~schmoee@2601:84:4501:6440:c6e:6393:b327:f137)
[10:08:41] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[10:09:31] *** Joins: aniketgm (~Aniket@49.36.109.129)
[10:10:10] *** Joins: ihristov (~ihristov@217.145.94.71)
[10:10:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[10:13:23] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Ping timeout: 265 seconds)
[10:15:01] *** Quits: muck (~utamaro@user/utamaro) (Ping timeout: 240 seconds)
[10:15:23] *** Quits: schmoee (~schmoee@2601:84:4501:6440:c6e:6393:b327:f137) ()
[10:17:25] *** Joins: cap0ne (cap0ne@user/cap0ne)
[10:18:34] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[10:21:16] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:24:01] *** Quits: cap0ne (cap0ne@user/cap0ne) (Quit: Konversation terminated!)
[10:24:29] *** Quits: aniketgm (~Aniket@49.36.109.129) (Quit: leaving)
[10:25:29] *** Joins: pipapipapibo (~w@c-73-221-241-101.hsd1.wa.comcast.net)
[10:26:00] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:a161:1e54:b866:6e50)
[10:26:21] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-69-5.poda.cz)
[10:27:13] *** Joins: emf (~emf@2620:10d:c091:480::1:1ebc)
[10:27:51] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-69-5.poda.cz) (Remote host closed the connection)
[10:28:24] *** Joins: cap0ne (cap0ne@user/cap0ne)
[10:29:00] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 276 seconds)
[10:29:19] *** Quits: onichomp (~onichomp@2806:264:4404:8093:5006:aa69:fc3e:b416) (Read error: Connection reset by peer)
[10:29:57] *** Joins: onichomp (~onichomp@2806:264:4404:8093:5006:aa69:fc3e:b416)
[10:30:06] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:31:42] *** Quits: devish (~devish@205.251.233.52) (Quit: Client closed)
[10:32:08] *** Joins: carl--- (~carl-@185.103.188.130)
[10:33:46] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a239:503:a161:1e54:b866:6e50) (Quit: Textual IRC Client: www.textualapp.com)
[10:33:51] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[10:34:37] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[10:34:52] *** Joins: gusto (~Augustus@109.255.100.54)
[10:34:55] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-69-5.poda.cz)
[10:36:16] *** Joins: Elzington (~Elzington@static-68-235-44-57.cust.tzulo.com)
[10:37:27] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:38:13] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.127) (Ping timeout: 240 seconds)
[10:38:15] *** Joins: whaley (~whaley@2603-6080-a301-33d1-788f-5998-6281-ad54.res6.spectrum.com)
[10:38:24] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:39:41] *** Quits: emf (~emf@2620:10d:c091:480::1:1ebc) (Quit: emf)
[10:39:45] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:9895:12d6:b9a8:a666)
[10:40:02] *** Joins: emf (~emf@2620:10d:c091:480::1:1ebc)
[10:42:00] *** Quits: thurs806014210 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[10:42:14] *** Joins: chele (~chele@user/chele)
[10:42:27] *** Joins: thurs806014210 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[10:47:06] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[10:50:58] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[10:52:21] *** Joins: mrwick (~mrwick@user/mrwick)
[10:52:26] *** Joins: Blankspace (~androirc@user/blankspace)
[10:58:21] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:58:41] *** Quits: audio (~audio@user/audio) (Ping timeout: 252 seconds)
[11:00:09] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 252 seconds)
[11:00:37] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[11:00:56] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:01:50] *** Joins: seednode (~seednode@user/seednode)
[11:02:28] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:04:08] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[11:05:14] *** Quits: teut (~teut@182.68.68.35) (Ping timeout: 256 seconds)
[11:05:17] *** Joins: schmoee (~schmoee@2601:84:4501:6440:c6e:6393:b327:f137)
[11:08:05] *** Joins: kuter (~kuter@public-gprs526031.centertel.pl)
[11:13:38] *** Joins: gggp (~gggp@60.10.194.43)
[11:13:54] *** Joins: manti7 (~manti7@176.10.104.94)
[11:14:10] *** Joins: aniketgm (~Aniket@49.36.109.129)
[11:15:48] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 276 seconds)
[11:16:48] *** Joins: tobybl (~tobybl@213.31.132.232)
[11:17:09] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:17:26] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[11:17:32] *** Quits: schmoee (~schmoee@2601:84:4501:6440:c6e:6393:b327:f137) (Remote host closed the connection)
[11:18:20] *** Joins: luigibu (~luigi@80.30.201.209)
[11:19:23] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 256 seconds)
[11:19:36] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[11:19:38] *** Joins: gggp_ (~gggp@120.245.47.104)
[11:19:49] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[11:20:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[11:21:25] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[11:21:39] *** Joins: fikran (~fikran@user/fikran)
[11:21:59] *** Quits: phlixi (~phlixi@aftr-82-135-86-19.dynamic.mnet-online.de) (Remote host closed the connection)
[11:22:09] *** Quits: carl--- (~carl-@185.103.188.130) (Ping timeout: 252 seconds)
[11:24:26] *** Joins: grundrausch3n (~grundraus@p200300e9ef18ac00adafa0d8cbcf8ba8.dip0.t-ipconnect.de)
[11:25:34] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:26:09] *** Quits: hemstock (~hemstock@194.59.250.234) ()
[11:27:34] *** Joins: gggp (~gggp@120.245.40.167)
[11:28:36] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[11:28:36] *** Joins: schmoee (~schmoee@2601:84:4501:6440:c6e:6393:b327:f137)
[11:29:49] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 240 seconds)
[11:30:14] *** Quits: gggp_ (~gggp@120.245.47.104) (Ping timeout: 265 seconds)
[11:30:30] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:30:37] *** Joins: slav0nic (slav0nic@python.su)
[11:31:21] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[11:31:22] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:31:50] *** Joins: sharperguy (~sharpergu@89.244.127.106)
[11:32:03] *** Quits: jonthesnow (~xizhendu@36.112.188.169) (Ping timeout: 252 seconds)
[11:32:31] *** Joins: grooverman_ (~grooverma@177.102.119.40)
[11:33:13] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.68)
[11:33:29] <boris[m]> hello ! Can someone please explain what the benefit of defining `change_pixmap_signal` as a class variable in contrast to instance variable in the following example is : https://paste.debian.net/1222380/
[11:33:35] *** Joins: swensson (~swensson@host-90-235-72-219.mobileonline.telia.com)
[11:34:05] *** Quits: gggp (~gggp@120.245.40.167) (Remote host closed the connection)
[11:34:35] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 265 seconds)
[11:35:06] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Quit: Leaving)
[11:35:09] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:35:21] *** Quits: Omega037 (~Omega037@047-233-057-109.res.spectrum.com) (Ping timeout: 245 seconds)
[11:35:51] *** Joins: modlin (modlin@user/modlin)
[11:36:26] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[11:39:23] *** Quits: zyweo (~Svew@user/zyweo) (Ping timeout: 252 seconds)
[11:39:57] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[11:40:46] *** Joins: moose` (~moose@user/moose)
[11:40:55] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[11:41:18] *** Quits: moose` (~moose@user/moose) (Read error: Connection reset by peer)
[11:41:38] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:41:49] *** Joins: rany (~rany@user/rany)
[11:42:05] <han-solo> boris[m]: i'd assume `change_pixmap_signal` is like a constant value and doesn't need to generated for each instantiation of the class object. So every instance can share that...without having to compute that again and again
[11:42:57] <mrwick> boris[m]: I always wondered that as well, just assumed it needed to be instantiated before an object was made, found this online: https://forum.pythonguis.com/t/why-are-signals-defined-as-class-variables/153
[11:43:38] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[11:43:40] <mrwick> boris[m]: also, han-solo has some good insight
[11:44:03] *** Joins: frost (~frost@user/frost)
[11:44:17] <schmoee> but then what mrig
[11:46:31] *** Joins: soheil (~soheil@5.115.138.27)
[11:48:00] *** Quits: soheil (~soheil@5.115.138.27) (Client Quit)
[11:48:24] <boris[m]> han-solo: how do objects share this information ? I mean objects are created through the class __init__ constructor and automatically `change_pixmap_signal` is attached to it , but also created for this object ?
[11:48:57] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:49:10] <boris[m]> or is `change_pixmap_signal` created on class definition and stored somewhere in memory and then any object is pointed to it ?
[11:50:28] <han-solo> it will be only created once at the time when the interpreter read the class definition i think
[11:50:31] *** Joins: gggp (~gggp@120.245.43.237)
[11:50:48] <han-solo> class attributes are accessible to instances
[11:51:26] *** Quits: gggp (~gggp@120.245.43.237) (Client Quit)
[11:52:19] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[11:52:33] *** Quits: schmoee (~schmoee@2601:84:4501:6440:c6e:6393:b327:f137) ()
[11:52:43] *** Joins: BravoSlo (BravoSlo@gateway/vpn/airvpn/bravoslo)
[11:54:59] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[11:55:50] *** Quits: hexa- (~hexa-@juno.lossy.network) (Quit: WeeChat 3.1)
[11:56:24] *** Joins: phlixi (~phlixi@aftr-82-135-86-19.dynamic.mnet-online.de)
[11:57:18] *** Joins: hexa- (~hexa-@juno.lossy.network)
[11:58:54] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:00:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:00:39] *** Quits: emf (~emf@2620:10d:c091:480::1:1ebc) (Ping timeout: 252 seconds)
[12:00:50] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:01:13] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:01:50] *** Quits: kevgao (~kevgao@2601:281:8780:4510:adf9:6718:c66a:aa00) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:02:08] *** Quits: Blankspace (~androirc@user/blankspace) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[12:03:35] *** Quits: BillyZane (~BillyZane@152.89.204.189) (Ping timeout: 252 seconds)
[12:04:15] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[12:05:45] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:05:47] *** Joins: emf (~emf@2620:10d:c091:480::1:1ebc)
[12:06:02] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:07:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[12:09:52] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 265 seconds)
[12:11:10] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:15:33] <parv> Near the bottom of the link that mrwick posted, what is "surprising and not very nice" about "self.my_custom_signal = pyqtSignal(); super().__init__()" inside class "__init__()"?
[12:15:39] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:17:08] *** Quits: aniketgm (~Aniket@49.36.109.129) (Read error: No route to host)
[12:17:14] *** Joins: jay-m126 (~jay-m@154.72.167.189)
[12:17:18] *** Joins: jay-m126_ (~jay-m@154.72.167.189)
[12:17:20] *** Joins: jay-m1261 (~jay-m@154.72.167.189)
[12:18:42] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[12:18:54] *** Parts: novasenco (novasenco@user/nova) (♥☺)
[12:20:06] <The-Compiler> boris[m]: you can think of a signal like a method (actually it is one in C++) - it doesn't make sense for every instance of a class to have its own copy of the methods, instead, they are defined on class level. Same thing with the signals. When the class is instanciated, every instance gets its own (bound) signal, but the definition of the (unbound) signal belongs to the class.
[12:20:25] <SteveR> Hi there
[12:20:28] <SteveR> https://bpa.st/MM4A
[12:20:35] <SteveR> i wrote a simple decorator function that works
[12:20:37] <The-Compiler> parv: I guess it's kind of odd to require stuff to happen before calling the superclass init
[12:20:43] <SteveR> i want to use @ notation to call
[12:21:13] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 256 seconds)
[12:22:01] <parv> The-Compiler, So the point is that there should not be a dependency on call order (of superclass init)?
[12:22:28] <The-Compiler> parv: well, at least I would find dhad somewhat surprising and not very nice ;)
[12:22:36] <The-Compiler> that*
[12:22:57] <parv> The-Compiler, Right. I see the point now. Thanks
[12:23:11] <The-Compiler> (my brain still being confused after switching to colemak and a split ergonomic keyboard :D)
[12:23:20] *** Joins: Andrynet (~Andrynet@190.152.202.181)
[12:23:20] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[12:23:41] <mrwick> it would be surprising and not nice especially when it could just be a class varialbe ;)
[12:23:49] <The-Compiler> hehe
[12:23:59] <mrwick> *variable
[12:24:12] <The-Compiler> well I suppose being able to create signals dynamically in __init__ would have some additional flexibility
[12:24:55] <parv> mrwick, No, that is not convincing enough to me.
[12:26:09] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[12:26:16] <parv> Sure, class variable could be more convenient.
[12:26:28] *** Joins: kosh (~kosh@user/kosh)
[12:26:30] <jinsun> more important to me is the point it is like a method
[12:26:38] *** Joins: BillyZane (~BillyZane@91.196.220.240)
[12:26:48] <jinsun> attatching methods to instances in init sounds weird
[12:27:04] <jinsun> it should be done at class level
[12:28:09] *** Quits: noord (~noord@user/noord) (Remote host closed the connection)
[12:28:44] <jinsun> SteveR: you can use the @decorator syntax where you define the function that has to be decorated, not where you define the decorator
[12:29:12] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:29:15] *** Joins: aniketgm (~Aniket@49.36.109.129)
[12:29:41] *** Joins: MrV (~MrV@91.226.241.83)
[12:30:06] *** Joins: noord (~noord@user/noord)
[12:30:26] <jinsun> SteveR: so inside div.py you can put @smartdiv over def div, if you defined/imported smartdiv in that file before that
[12:30:54] *** Quits: MrV (~MrV@91.226.241.83) (Client Quit)
[12:31:17] <SteveR> jinsun could you share me the snippet of what to be changed
[12:31:48] *** Joins: guenhael (~Thunderbi@2a01cb008c3d580088d0b8481b1c3fcd.ipv6.abo.wanadoo.fr)
[12:32:50] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:33:06] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[12:33:54] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[12:34:19] <jinsun> SteveR: https://bpa.st/5ELQ
[12:34:28] *** Joins: Pedee (~Pedee@user/Pedee)
[12:34:43] <jinsun> I just put it in one file because it is a trivial example
[12:35:05] <jinsun> I'm not sure if you were trying to gain something with having multiple files
[12:35:05] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:36:22] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:36:29] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:36:47] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[12:36:59] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Remote host closed the connection)
[12:37:12] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[12:37:17] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[12:38:37] <SteveR> jinsun sure, i have a question. lets consider that div is in some other file
[12:38:53] <SteveR> now i have wrote a function which does extra things
[12:39:35] <jinsun> if you define the decorator after the function you cannot use @decorator on the function
[12:39:38] <SteveR> in that case https://bpa.st/5ELQ L11 - L13 is needed?
[12:39:43] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[12:39:48] <The-Compiler> [x] pytest 7.0.0rc1 released \o/ https://twitter.com/the_compiler/status/1468144014889209858
[12:39:53] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[12:39:58] <jinsun> the decorator should be available before you write your def
[12:40:27] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:40:48] <boris[m]> Thank you The-Compiler . So when I run a python application, the interpreter reads all definitions, allocates required memory for the class and when an object is created, methods / class variables are bound to that object, correct ?
[12:42:29] <SteveR> jinsun in def smartdiv(func) line
[12:42:35] *** Joins: upsala (~zcb@185.213.155.232)
[12:42:37] <SteveR> if i want to introduce type hints how can i do that
[12:43:25] *** Quits: guenhael (~Thunderbi@2a01cb008c3d580088d0b8481b1c3fcd.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[12:45:35] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:45:45] *** Joins: yotsuba (~yotsuba@2.53.188.104)
[12:46:45] *** Joins: vaio (~gary@user/ghost)
[12:46:58] <jinsun> SteveR: you can use typing.Callable to annotate func, something like this https://bpa.st/Y5WA
[12:47:51] *** Quits: gitly (~gitly@148.252.133.169) (Ping timeout: 256 seconds)
[12:48:08] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:48:37] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:48:46] *** Joins: gitly (~gitly@185.69.145.120)
[12:49:17] *** dcaro_away is now known as dcaro
[12:49:46] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[12:49:58] *** Joins: teut (~teut@182.68.68.35)
[12:49:59] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[12:50:00] <The-Compiler> boris[m]: not sure about the exact details, but sounds about right
[12:50:25] <boris[m]> thank you !
[12:50:38] *** Quits: DavidDavidson (~Matt343@c-69-181-108-8.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[12:50:53] *** Quits: emf (~emf@2620:10d:c091:480::1:1ebc) (Ping timeout: 252 seconds)
[12:50:57] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 265 seconds)
[12:52:08] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:52:24] *** Quits: luigibu (~luigi@80.30.201.209) (Ping timeout: 265 seconds)
[12:52:25] *** Joins: naan (~Naan@user/naan)
[12:53:52] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[12:54:28] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[12:55:38] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[12:56:09] *** Quits: BravoSlo (BravoSlo@gateway/vpn/airvpn/bravoslo) (Quit: Leaving)
[12:56:09] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[12:56:52] <jinsun> The-Compiler: is there any changelog for 7.0.0rc1? the annoucement page on the docs links to stable changelog that doesn't have the rc
[12:57:20] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[12:59:07] <jinsun> ah found it https://docs.pytest.org/en/7.0.x/changelog.html
[12:59:49] *** Quits: Haxxa (~Haxxa@202-130-210-132.ip4.superloop.com) (Ping timeout: 240 seconds)
[13:00:00] <jinsun> The-Compiler: probably https://docs.pytest.org/en/7.0.x/announce/release-7.0.0rc1.html should link to https://docs.pytest.org/en/7.0.x/changelog.html instead of https://docs.pytest.org/en/stable/changelog.html
[13:00:19] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 256 seconds)
[13:01:23] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[13:01:24] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[13:01:25] *** Quits: mgocobachi (~m@ancrae.com) (Quit: Winter is coming)
[13:01:35] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 265 seconds)
[13:02:25] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[13:02:28] *** Joins: mgocobachi (~m@ancrae.com)
[13:02:45] *** Joins: drogas (~drogas@jump2.jet.uk)
[13:04:19] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:05:25] *** Quits: Andrynet (~Andrynet@190.152.202.181) (Ping timeout: 240 seconds)
[13:05:49] *** Quits: mgocobachi (~m@ancrae.com) (Client Quit)
[13:07:48] *** Joins: Andrynet (~Andrynet@190.152.205.0)
[13:08:35] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:08:46] *** Joins: thurs8060142105 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[13:09:01] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 240 seconds)
[13:09:40] *** Joins: mgocobachi (~m@ancrae.com)
[13:10:30] *** Joins: plastico (~plastico@neomutt/plastico)
[13:10:46] *** Quits: thurs806014210 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 265 seconds)
[13:10:46] *** thurs8060142105 is now known as thurs806014210
[13:10:51] *** Quits: Pedee (~Pedee@user/Pedee) (Quit: WeeChat 3.3)
[13:11:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:11:41] <The-Compiler> jinsun: yeah, noticed that too, but only after it was too late
[13:11:52] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:12:15] <The-Compiler> well I suppose I can still fix up that announce file
[13:12:53] *** Quits: onichomp (~onichomp@2806:264:4404:8093:5006:aa69:fc3e:b416) (Ping timeout: 252 seconds)
[13:13:02] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:13:28] <The-Compiler> looks like our release automation should learn more about prereleases :D
[13:13:31] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[13:14:00] *** Joins: rany_ (~rany@user/rany)
[13:14:26] *** Joins: emf (~emf@2620:10d:c091:480::1:1ebc)
[13:14:28] *** Quits: aniketgm (~Aniket@49.36.109.129) (Read error: No route to host)
[13:14:38] *** Quits: yotsuba (~yotsuba@2.53.188.104) (Ping timeout: 265 seconds)
[13:15:36] *** Joins: aniketgm (~Aniket@49.36.109.129)
[13:17:21] *** Quits: rany (~rany@user/rany) (Ping timeout: 276 seconds)
[13:17:48] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[13:18:26] *** Quits: mgocobachi (~m@ancrae.com) (Quit: Winter is coming)
[13:19:54] *** Joins: rany (~rany@user/rany)
[13:20:27] *** Joins: mgocobachi (~m@ancrae.com)
[13:20:31] *** Quits: ubert (~Thunderbi@p200300ecdf0ba286bd3e231ce6977cbe.dip0.t-ipconnect.de) (Quit: ubert)
[13:21:05] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[13:22:56] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:23:51] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 276 seconds)
[13:24:39] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[13:24:41] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[13:27:37] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:28:39] *** Quits: sreve (~quassel@p4ff4494e.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[13:29:01] *** Joins: sreve (~quassel@p54a71b4c.dip0.t-ipconnect.de)
[13:29:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[13:29:10] *** Joins: alchzh (~kvirc@dyn-160-39-170-182.dyn.columbia.edu)
[13:29:23] *** Quits: \mSg (mSg@user/msg/x-0285936) (Remote host closed the connection)
[13:29:23] *** Quits: shailangsa (~shailangs@host86-186-136-27.range86-186.btcentralplus.com) (Ping timeout: 252 seconds)
[13:30:39] *** Quits: swensson (~swensson@host-90-235-72-219.mobileonline.telia.com) (Quit: Client closed)
[13:30:45] *** Joins: \mSg (~mSg@user/msg/x-0285936)
[13:30:46] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[13:30:51] *** Quits: emf (~emf@2620:10d:c091:480::1:1ebc) (Ping timeout: 252 seconds)
[13:30:57] *** Quits: parv (~quass@user/parv) (Quit: parv)
[13:31:01] *** Joins: fikran (~fikran@user/fikran)
[13:31:13] *** Quits: Jong (~Jong@2620:10d:c090:400::5:1592) (Ping timeout: 252 seconds)
[13:32:38] *** Joins: shad (~shad@user/shad)
[13:33:27] *** Quits: debnet (sid330295@python/afpy/debnet) (Ping timeout: 264 seconds)
[13:33:54] *** Joins: Auron (~Auron956@user/auron)
[13:33:58] *** Joins: debnet (sid330295@python/afpy/debnet)
[13:34:59] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:36:26] *** Quits: aniketgm (~Aniket@49.36.109.129) (Quit: leaving)
[13:38:15] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[13:38:18] *** Joins: onichomp (~onichomp@2806:264:4404:8093:44d3:7cdf:f19c:4f11)
[13:39:25] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[13:39:46] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[13:40:18] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:41:13] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 265 seconds)
[13:42:31] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:43:04] *** Joins: lethu (~lethu@user/lethu)
[13:43:45] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[13:44:13] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[13:44:36] *** Joins: et_ (~et@user/et)
[13:45:18] *** Quits: AlanMD_ (~AlanMD@86.121.179.183) (Read error: Connection reset by peer)
[13:45:29] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[13:45:35] *** Quits: et (~et@user/et) (Ping timeout: 256 seconds)
[13:45:35] *** et_ is now known as et
[13:48:52] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[13:49:40] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[13:50:52] *** Joins: zaquest (~notzaques@5.130.79.72)
[13:51:29] *** Joins: lbracher (~lucas@77.109.116.248)
[13:52:16] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Remote host closed the connection)
[13:52:44] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:53:01] <lbracher> Hi there! How can I correctly get 'mydomain.co.uk' from 'https://subdomain.mydomain.co.uk/nicetext.txt'? I tried using urllib.parse.urlparse without success. Any help is appreciated!
[13:54:12] <lbracher> Oh, just found! tldextract
[13:54:52] <alchzh> haha was just about to say
[13:55:23] *** Parts: Timvde (~tim@towely.vdeynde.com) (WeeChat 3.2)
[14:08:55] *** Joins: xkuru (~xkuru@user/xkuru)
[14:13:49] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:17:01] <mrtnt_> I have a tiny script which adds ten random integers into the list and then writes those integers into files based on the first digit of the random number: https://paste.debian.net/plainh/a7a05ab3 Because of "append" in the open() the script keeps adding numbers to files each time I execute the script. Any ideas, how to overwrite the *.txt files each time the script is executed? "rm *.txt" at the beginning of
[14:17:02] <mrtnt_> the script is not an option.
[14:17:14] <lericson> this is going to shock you
[14:17:17] <lericson> but i want a mutable int
[14:17:33] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[14:18:10] *** Joins: coraxx (~coraxx@mail.8-pm.com)
[14:18:10] <mrtnt_> Also, the "write" or "w" option for open() is not an option because in that case each file would always contain just one number.
[14:18:17] <lericson> in fact i want mutable object references
[14:18:25] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:18:29] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[14:18:30] <lericson> a = 1; b = a; a.set(2) now b is also 2
[14:18:53] <coraxx> hello ...how does one read XML-files with etree, when the XML contains a namespace (metadata) ?
[14:18:56] <deniska> mrtnt_: well, it's either appending to file, or overwriting it, not sure what other option you want
[14:19:10] *** Joins: palasso (~palasso@user/palasso)
[14:19:20] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[14:19:49] *** yanmaani1 is now known as yanmaani
[14:19:56] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:19:59] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 252 seconds)
[14:19:59] *** ayusta is now known as ayustae
[14:20:15] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:538:f015:5977:95d7)
[14:21:04] <mrtnt_> deniska: I guess I need to use "w", but keep the file descriptors somehow open until all the numbers in the list have been processed..
[14:21:18] <mrtnt_> but berhaps there is a better solution for my problem
[14:21:21] <mrtnt_> *perhaps
[14:21:31] <nedbat> lericson: can you tell us more about what you'd do with them?
[14:21:46] <deniska> mrtnt_: hm…
[14:21:56] <nedbat> coraxx: it might be that you use lxml for that
[14:22:20] <lericson> nedbat: i am instead going to do this with a DSL. basically i want "subclassable configs", so i can say param2 = some_transformation_of(param1) and if param1 changes, so does param2
[14:22:32] *** Quits: tobybl (~tobybl@213.31.132.232) (Remote host closed the connection)
[14:22:34] <coraxx> nedbat: ok ... I will try, thanx :_-)
[14:22:36] <lericson> i am aware what a terrible idea this is
[14:23:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[14:23:09] <coraxx> nedbat: is it impossible with etree ?
[14:23:21] <nedbat> lericson: i don't think it's a terrible idea, i think it's something people often want. but i do think it can have unintended consequences.
[14:24:07] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:24:08] <lericson> what is this, the second chapter of valve's classic game half life 1?
[14:24:16] <lericson> (unforeseen consequences)
[14:24:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:24:46] *** Joins: legola (~legola@46.235.101.65)
[14:25:37] <Zweimer> I would like to destribute in-house software to different workstations. My first idea was to create a conda package that contains the software and use a private server to host the packages. Is this generally a good idea? Whenever I think of pip or conda packages I think more of libraries opposed to actual software. However, some packages contain
[14:25:38] <Zweimer> software as well.
[14:27:08] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[14:27:23] <deniska> Zweimer: in a python-centric shop it'd be fine, but otherwise asking to install end-user software which just happens to be written in python via pip is kinda rude imho
[14:27:26] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:30:11] <Zweimer> deniska, I would actually use conda instead of pip. It seems to be such an uncommon thing to do since I couldn't fine any related topics on google (e.g. "software delivery conda").
[14:30:19] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:31:31] <nedbat> Zweimer: are tools like pytest and coverage available on conda?
[14:31:32] *** Joins: sleetdrop (~sleetdrop@61.135.152.136)
[14:31:46] <kai> hi folks
[14:32:34] <nedbat> kai: Welcome. If you have a question, it's always best to jump right in and ask it.
[14:32:44] <Zweimer> nedbat, Yeah probably.
[14:32:56] <kai> I'm trying to deal with a CSV file that seems to contain fields with windows newlines in them
[14:33:12] <nedbat> Zweimer: those are applications, though cli apps
[14:33:15] *** Joins: Tempesta (~Tempesta@user/tempesta)
[14:33:24] <kai> I'm reading them on a real system, but `for line in file` still seems to recognize them, can I turn that off somehow?
[14:33:25] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[14:33:43] *** Joins: slav0nic (slav0nic@python.su)
[14:34:33] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[14:34:47] <alchzh> uh i mean if they're there the line iterator is going to output them
[14:34:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[14:35:05] <alchzh> are you not just rstripping the characters off the end anyway
[14:35:18] <Zweimer> nedbat, Wait. In what way is pytest an application? Is it actually binary? (I thought pip just works for distributing py-files).
[14:35:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:35:55] <alchzh> Zweimer no pip also can manage things that get installed into Scripts which is in your path
[14:36:17] <alchzh> plenty of apps written in python are installed via pip
[14:36:27] <kai> alchzh: my problem is that there's lines like `"broken^M",some,values,here\n`
[14:36:35] <nedbat> Zweimer: it's an app in that you run it like an app
[14:36:56] <kai> alchzh: so stripping at the ends of the string doesn't do anything
[14:37:16] <alchzh> oh I see so `for line in file` is splitting lines there and you don't want it to?
[14:37:23] <Zweimer> Right. I didn't know that.
[14:37:31] <kai> because if I try to read that line from an iterator, all I get is `"Broken`, and I'd like the full line
[14:37:33] <bjs> kai: this sounds more like a problem for whoever generated the file -- there's nothing intrinsically wrong about having fields that contain newlines
[14:37:46] <nedbat> Zweimer: maybe i don't know what your concern was
[14:37:51] <kai> bjs: It
[14:38:05] <kai> bjs: It's crap data, I know
[14:38:14] <kai> but that doesn't mean I don't need to deal with it
[14:38:21] <bjs> kai: what do you mean "from an iterator", the csv module should be able to read the whole field at once.  You could go over each field from each line and "sanitise" it somehow
[14:38:31] <bjs> e.g. removing all newlines
[14:39:00] <alchzh> can you just sed out all the '\r's before processing the file or nah
[14:39:16] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:39:26] <kai> I've tried to stay away from the csv module since it has bitten me a couple of times on non-ASCII inputs, but I think I didn't use it in 3.x yet
[14:39:40] <Zweimer> nedbat, well, I am considering using conda (with a private conda server) to distribute in-house software. I thought this would be a common method of software delivery. However, not being able to find anything useful on google makes me think, that this solution isn't a great one.
[14:41:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:41:14] <alchzh> Zweimer does this software need to be installed on all the workstations all the time
[14:41:21] <alchzh> because that doesn't sound like a task for a package manager
[14:41:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:41:48] <bjs> kai: the csv module takes files,  probably you just open()d the file with the wrong encoding?
[14:42:04] <bjs> oh python2
[14:42:10] <alchzh> anything non ascii works a lot better in python3
[14:42:27] <kai> I guess the follow-up question would be that the csv module docs say to use `newline=''` for the `open` call, but my input file is coming in as `argparse.FileType` from my command line handling
[14:42:37] *** Joins: fleabag (~sirpengi@li587-65.members.linode.com)
[14:42:38] <kai> and that doesn't seem to take a `newline` parameter
[14:43:18] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:43:25] *** Quits: whaley (~whaley@2603-6080-a301-33d1-788f-5998-6281-ad54.res6.spectrum.com) (Ping timeout: 240 seconds)
[14:44:16] <varaindemian> the best way to treat `UnboundLocalError: local variable referenced before assignment`?
[14:44:21] *** Quits: SteveR83 (~SteveR@103.215.168.1) (Quit: Client closed)
[14:44:21] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[14:44:28] <bjs> varaindemian: it's an error, fix the error is the best way to treat it
[14:44:31] <bjs> like a programmer error, a bug
[14:44:42] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[14:45:10] <bjs> kai: hmm, probably because FileType accepts stdin/stdout
[14:45:27] <kai> yes, and so would I
[14:45:52] <Zweimer> alchzh, I have no other ideas how to distribute the software otherwise. I want to distribute the application with its venv. In addition to that, the user should be able to add plugins to the application (some of them require further packages). Installing the application via conda and adding further plugins as packages (again via conda) would solve
[14:45:53] <Zweimer> this dependency problem for me.
[14:45:55] <kai> why bother with a CLI tool if you can't chain it in a pipe
[14:47:03] <alchzh> I think don't use argparse.FileType and handle that yourself with a newline="\n", and then for stdin handle that as well by itself
[14:47:30] <alchzh> or handle opening it, the processing should be the same after newline="\n" is set?
[14:49:19] *** Joins: dmr (~rdumitru@user/dmr)
[14:49:32] <bjs> kai: the standard streams should be fine (they don't have universal newlines or anything);  you may have to accept a string and then do the open() yourself.  tbh I think FileType should accept **kwargs and pass them to open()
[14:49:40] <bjs> it's annoying when APIs don't do that and don't document why
[14:50:19] <nedbat> varaindemian: if you link us to the code, we can help fix it
[14:50:37] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 240 seconds)
[14:51:17] <kai> bjs: that's not what https://docs.python.org/dev/library/argparse.html#argparse.FileType says, but I can try
[14:51:25] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:51:36] <alchzh> it doesn't. you can't use FileType for what you want
[14:51:49] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[14:52:04] *** Quits: weedmic (~weedmic@188.120.139.53) (Remote host closed the connection)
[14:52:09] *** Quits: grundrausch3n (~grundraus@p200300e9ef18ac00adafa0d8cbcf8ba8.dip0.t-ipconnect.de) (Quit: Textual IRC Client: www.textualapp.com)
[14:52:12] <kai> crud, then I also need to write the "detect '-' to be stdin/stdout" logic
[14:52:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[14:52:45] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[14:52:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:52:57] <alchzh> just copy this haha https://github.com/python/cpython/blob/main/Lib/argparse.py#L1255
[14:52:58] <bjs> kai: what do you mean?
[14:53:51] <kai> bjs: argparse.FileType is smart enough to do the right thing when you pass "-" as the filename, and instead of trying to read from or writing to a file of that name just uses stdin/stdout
[14:54:15] <alchzh> also apparently you can't use the csv module because "The reader is hard-coded to recognise either '\r' or '\n' as end-of-line, and ignores lineterminator. This behavior may change in the future."
[14:54:18] <bjs> kai: yeah, i said that earlier, I'm not sure what you mean by "that's not what <docs> says"
[14:54:59] <coraxx> nedbat: I can't get lxml to work either.
[14:55:15] <kai> alchzh: are we sure it's not Monday today? this totally feels like a Monday..
[14:55:25] <alchzh> huh
[14:55:47] <coraxx> nedbat: what am I missing ... it should be simple ... is there a flaw/error in the parsers when namespaces are concerned or something ?
[14:56:43] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:57:41] <nedbat> coraxx: it's odd the way it's done. Can you share your code?
[14:57:44] <kai> hm, I guess I can write a small thing that uses `read()` to read a chunk of the file, removes any "\r" it finds, splits on "\n" and then yields that line
[14:57:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:58:32] <kai> and that thing I should be able to use in the csv module
[14:58:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:00:58] *** Quits: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net) (Ping timeout: 265 seconds)
[15:01:12] <coraxx> nedbat: https://pastebin.com/mj1FzgXa
[15:01:23] *** Joins: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26)
[15:01:30] <coraxx> nedbat: (and thanx for helping :-) )
[15:01:33] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:01:51] <alchzh> kai: I think if you just feed csv.reader a file from open(..., newline="\n") it should work
[15:02:14] <nedbat> coraxx: you have to use the namespaces somehow
[15:02:20] <alchzh> wait i'm dumb
[15:02:41] <alchzh> ok i'm going to bed that won't work yeah you need to wrap it and cut out the \r
[15:02:52] <nedbat> coraxx: this looks good: https://stackoverflow.com/a/14853417/14343
[15:03:11] <kai> alchzh: thanks for the help anyway. at least it looks like a reasonably hard problem :)
[15:03:25] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[15:03:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:04:06] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[15:04:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:05:13] *** gcbirzan_ is now known as gcbirzan
[15:05:17] *** Quits: steam (~steam@user/steam) (Remote host closed the connection)
[15:05:24] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:05:54] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[15:06:00] *** Joins: steam (~steam@user/steam)
[15:06:03] *** Quits: cap0ne (cap0ne@user/cap0ne) (Remote host closed the connection)
[15:06:31] *** Joins: cap0ne (cap0ne@user/cap0ne)
[15:06:35] <coraxx> nedbat: Stackoverflow refers to an "error" that I don't get ... I just get nothing (None) ... I can't even parse it and get the full "Document"-tag name with or without the namespace included
[15:07:00] *** Quits: visl (visl@user/visl) (Ping timeout: 268 seconds)
[15:07:03] *** Joins: visl (visl@user/visl)
[15:08:08] *** Joins: alius (~adrien@2a01:e0a:13c:cd90:c977:5b1c:470e:ad38)
[15:08:18] <coraxx> nedbat: found the right text on the stackoverflow page you sent to me ...I just didn't read long enough :-)
[15:09:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:09:43] *** Joins: BSaboia (~bsaboia@177.190.211.124)
[15:09:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:12:32] *** Joins: thevishy (~Nishant@2405:201:f005:c007:a5d7:38b:39cd:e2ae)
[15:12:41] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[15:13:15] *** Joins: tobybl (~tobybl@213.31.132.232)
[15:13:42] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[15:14:39] *** Quits: tobybl (~tobybl@213.31.132.232) (Remote host closed the connection)
[15:14:59] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.68) (Ping timeout: 265 seconds)
[15:15:01] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 240 seconds)
[15:15:21] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.235)
[15:15:27] *** Joins: Jong (~Jong@2620:10d:c090:400::5:6122)
[15:15:56] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[15:16:00] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:16:44] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.235) (Max SendQ exceeded)
[15:17:38] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.235)
[15:17:49] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[15:18:32] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[15:19:20] *** Quits: damxsa (~damx@2001:16a2:cc64:7200:e49d:a9e2:19fd:26) (Ping timeout: 265 seconds)
[15:20:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:20:52] <coraxx> nedbat: GOT IT!! ... thank you so much for you help... I was really stuck.
[15:20:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:21:13] <nedbat> coraxx: great. i remember being baffled about namespaces
[15:21:53] <coraxx> nedbat: yeah ..and the solution that I found is really stupid ... it involves using the "iter" method on the root-element
[15:22:46] *** Joins: raxor2k (~raxor2k@78.158.249.28)
[15:22:58] <coraxx> nedbat: _and_ I will argue that etree and lxml is wrong ... as you call the .getroot() method you do NOT get the root when namespaces are involved.
[15:22:58] <raxor2k>   ret = ret.dtype.type(ret / rcount)
[15:23:40] <raxor2k> RuntimeWarning: Invalid value encountered in double_scalars , what does this mean ?  https://bpa.st/RPNQ
[15:23:41] <coraxx> nedbat: it treat the namespace tag as a root-element, which is to me a clear XML mis-interpretation
[15:24:27] <coraxx> nedbat: gotta go ... bye bye :-)
[15:24:32] *** Quits: coraxx (~coraxx@mail.8-pm.com) (Quit: Leaving)
[15:25:03] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[15:25:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:26:27] *** Joins: lucifer (sid308373@id-308373.helmsley.irccloud.com)
[15:26:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:26:58] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[15:27:12] *** Joins: metaace (~metaace@user/metaace)
[15:28:58] *** dcaro is now known as dcaro_away
[15:29:21] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 256 seconds)
[15:31:22] <lucifer> hi all! i have recently written the code to convert a list of dicts to a dict keyed by a specific attribute of the object and the object as the value. i think it shouldn't be hard to write a generalized function for this myself but wondering if itertools or builtins have something for this.
[15:31:37] <lucifer> example: https://www.irccloud.com/pastebin/UAyiCVwj/
[15:32:15] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:32:42] <supakeen> Nah, that's general enough just be careful that if you have more than one dictionary with your key with the same value they'll overwrite with the later one.
[15:32:55] <lucifer> this however does not group dicts with the same key.
[15:33:15] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[15:33:43] <lucifer> yeah looking for one that handles multiple keys with same value case.
[15:35:01] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.235) (Ping timeout: 240 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:23] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:37:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:37:58] *** Joins: kosh (~kosh@user/kosh)
[15:38:20] <supakeen> That'd be harder with a dictionary comprehension as you can't refer to the dictionary in between.
[15:38:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[15:39:36] <jinsun> raxor2k: I'm guessing it is coming because you are taking mean of an empty array, and it is dividing by zero, but instead of throwing errors it gives a warnign and nan
[15:40:02] <supakeen> lucifer: I usually write something akin to this: https://bpa.st/raw/YUOA
[15:40:11] <supakeen> But for this there are tools in itertools, you'd look at groupby.
[15:40:23] *** Joins: fikran (~fikran@user/fikran)
[15:40:28] <lucifer> ah! i see. thanks supakeen!
[15:40:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:40:53] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[15:40:56] *** Quits: Terexen (~terexen@user/terexen) (Quit: Saraba)
[15:41:08] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[15:41:43] <supakeen> e.g: itertools.groupby(L, key=operator.itemgetter("a"))
[15:41:43] <azidhaka> Hi everyone, could someone please tell me why this code http://p.ip.fi/YEoG works ok but pyCharm complains at line 30: Expected type 'Union[int, slice]', got 'str' instead (twice)
[15:42:37] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[15:42:50] <supakeen> lucifer: And if you want to 'print' it: {k: list(v) for k, v in itertools.groupby(L, key=operator.itemgetter("a"))}
[15:43:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:43:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:43:44] <jinsun> azidhaka: where is cups coming from in that code?
[15:44:12] <Yhg1s> azidhaka: the type checker believes printers[cups_printer]['printer-state-reasons'] returns something for which that 'in' operation is invalid. It likely means it doesn't understand what that operation returns. (Or, it just always ends up false.)
[15:44:23] <azidhaka> jinsun: cups is the pycups module
[15:44:41] <lucifer> azidhaka: L25, you assign it to ''.
[15:45:20] <Yhg1s> lucifer: but 'if cups_printers' precludes that branch being taken.
[15:46:00] <Yhg1s> oh, I see, the type checker PyCharm uses isn't smart enough to do that kind of analysis.
[15:46:01] <lucifer> Yhg1s: right, but it might confuse the type checker no? especially if cups.getPrinters is not type annotated?
[15:46:03] <azidhaka> probably pyCharm intellisense can't deal with that 'cups' module
[15:46:15] <Yhg1s> Yeah, sorry, I'm used to pytype, which is a bit smarter.
[15:46:33] *** Quits: BSaboia (~bsaboia@177.190.211.124) (Quit: This computer has gone to sleep)
[15:46:39] <Yhg1s> azidhaka: it probably doesn't have type annotations, but the fact that you assign a string to cups_printers on line 25 doesn't help.
[15:46:44] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[15:47:12] <Yhg1s> azidhaka: so the type checker thinks cups_printers is a string, which can only be indexed by integers or slices, and you're indexing it with a string.
[15:47:32] *** Joins: Santzes (~Santzes@li2111-66.members.linode.com)
[15:47:45] <jinsun> azidhaka: yeah it doesn't have type stubs in its own repository or typeshed, so pycharm is trying to infer the types from the usage and getting confused
[15:47:50] <lucifer> it looks like getPrinters could be dictlike, so maybe try assinging cups_printers to {} instead of ''
[15:47:57] *** Quits: sleetdrop (~sleetdrop@61.135.152.136) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:48:00] <Yhg1s> azidhaka: I would recommend not catching the exceptions from cups at all, if you're just going to try and skip the rest of the code in case of error.
[15:48:33] <azidhaka> lucifer: great idea
[15:48:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:49:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:49:54] <azidhaka> Yhg1s: i will rework it that way, thanks
[15:50:23] *** Joins: vimart (~vimart@109.249.179.187)
[15:51:37] *** Joins: grayn (grayn@gateway/vpn/protonvpn/grayn)
[15:52:29] <lericson> #python, i bestow unto you a script.  https://bpa.st/HUDQ  with this, you can split multiple imports like ``from x import y, z, q`` into multiple lines in vim by putting the cursor on the line and running :.%path/to/script
[15:52:30] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[15:52:42] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[15:52:55] *** Joins: BSaboia (~bsaboia@177.190.211.124)
[15:53:14] <lericson> and my multiple lines i mean `from x import y` and `from x import z` and so on
[15:53:18] <lericson> s/my/by/
[15:53:25] *** Quits: alchzh (~kvirc@dyn-160-39-170-182.dyn.columbia.edu) (Ping timeout: 240 seconds)
[15:54:55] *** Joins: tempate (~alpha@user/tempate)
[15:55:45] *** Joins: asa22 (~asa22@84.125.126.248.dyn.user.ono.com)
[15:55:48] <tempate> Is there a better way of doing https://bpa.st/BFWA ?
[15:56:35] <tempate> I'm trying to avoid using pop because I don't want to modify the original list
[15:56:50] <Yhg1s> no, if you really want two new lists, this would be the way.
[15:56:53] *** Quits: raxor2k (~raxor2k@78.158.249.28) (Remote host closed the connection)
[15:57:08] <tempate> Great, thanks
[15:59:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:59:51] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 276 seconds)
[16:00:02] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 268 seconds)
[16:00:05] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[16:00:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:00:46] *** Joins: zeden (~zeden@user/zeden)
[16:04:18] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:04:20] <Celelibi> Is there a way to replace the builtin print with my own function?
[16:04:33] <Celelibi> I'd basically do it in a context manager.
[16:04:54] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Client Quit)
[16:05:09] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:05:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[16:05:29] <Yhg1s> Celelibi: you can't contain the effect to within the context manager, but you can modify the builtins module.
[16:05:54] <Yhg1s> Celelibi: of course, if you just want to affect the code in the context manager, rather than the code it calls, you can just shadow the builtin with your own function.
[16:06:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:06:24] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:06:32] <Celelibi> All I want is replace print with my own function temporarily.
[16:06:49] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:538:f015:5977:95d7) (Quit: Client closed)
[16:07:00] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[16:08:00] <Celelibi> Yhg1s, I'm not sure the difference you're talking about.
[16:08:01] <jinsun> print = your_function, if it has to affect only the code later in the same file
[16:08:02] <Yhg1s> Celelibi: but _what code do you want to affect_?
[16:08:33] *** Joins: tobybl (~tobybl@213.31.132.232)
[16:08:37] <Celelibi> Everything that runs between the call to __enter__ and __exit__.
[16:08:47] <Celelibi> Including calls to submodules.
[16:09:19] <Yhg1s> Celelibi: then you have to modify the builtins module.
[16:09:41] <Yhg1s> Celelibi: it will also affect anything that isn't called by your context manager, though, like other threads.
[16:09:50] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[16:10:03] <Celelibi> Fine by me.
[16:10:47] *** Joins: naranja (~orange@user/orangeboxcutter)
[16:10:50] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[16:11:01] <Celelibi> Although... well, things might get messy if two threads use this context manager.
[16:11:14] *** Quits: tobybl (~tobybl@213.31.132.232) (Remote host closed the connection)
[16:11:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[16:11:41] *** Joins: tmus (~tmus@cust-185-157-203-2.nanoqnet.gl)
[16:11:45] <Celelibi> Let's just say this class won't be thread safe. ^^
[16:11:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:12:22] *** Quits: tmus (~tmus@cust-185-157-203-2.nanoqnet.gl) (Client Quit)
[16:12:36] *** Joins: tmus (~tmus@cust-185-157-203-2.nanoqnet.gl)
[16:13:51] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[16:15:15] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[16:15:16] *** ayusta is now known as ayustae
[16:16:22] *** Quits: shad (~shad@user/shad) (Ping timeout: 265 seconds)
[16:16:43] *** Joins: vaio (~gary@user/ghost)
[16:17:08] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[16:17:22] *** Joins: bloody (~bloody@user/bloody)
[16:17:50] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[16:18:35] *** Joins: Payam (~Payam@138.106.57.132)
[16:18:39] *** Quits: mjack (~mjack@5634d05c.rev.stofanet.dk) (Quit: mjack)
[16:18:47] *** Joins: nomic (~nomic@185.217.117.220)
[16:18:51] *** Joins: jmcb (~jmcb@nas47-67.york.ac.uk)
[16:19:06] *** Quits: tempate (~alpha@user/tempate) (Quit: Leaving.)
[16:19:17] *** Quits: jmcb (~jmcb@nas47-67.york.ac.uk) (Client Quit)
[16:22:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[16:22:12] *** Joins: Klinda (~superleag@user/klinda)
[16:23:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:23:34] <varaindemian> can I have `except IndexError, UnboundLocalError as ex:`?
[16:23:38] *** Joins: mjack (~mjack@5634d05c.rev.stofanet.dk)
[16:23:54] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[16:23:59] *** Joins: mven3 (~mven@ip68-104-39-54.lv.lv.cox.net)
[16:24:13] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 240 seconds)
[16:24:14] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:24:37] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[16:24:43] <bjs> varaindemian: why are you trying to *catch* an UnboundLocalError
[16:24:46] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[16:24:52] <bjs> an UnboundLocalError is almost certainly just a bug, the correct thing to do is to fix it
[16:25:00] <bjs> varaindemian: can you share your code?
[16:25:23] *** Joins: xkuru (~xkuru@user/xkuru)
[16:25:35] *** Joins: SteveR (~SteveR@103.215.168.1)
[16:25:49] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 240 seconds)
[16:25:49] *** mven3 is now known as mven
[16:26:26] <SteveR> any idea why this is not working
[16:26:38] <Payam> Hi, What is the Storage link in a repository on Gitlab?
[16:26:44] *** Joins: shad (~shad@user/shad)
[16:26:45] <Payam> There is XX KB Files and then 400 MB Storage
[16:27:39] <bjs> SteveR: that's a hard question to answer :P
[16:27:41] <bjs> what is "this"
[16:27:52] <SteveR> https://bpa.st/NGLQ
[16:27:54] <SteveR> :)
[16:28:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:28:22] <bjs> SteveR: you're using an older version of Python that does not support dict[key,value] syntax
[16:28:36] <bjs> SteveR: you can put `from __future__ import annotations` at the top of your file, and the error should go away
[16:28:37] <SteveR> '3.8.2 (default, Dec 21 2020, 15:06:04) \n[Clang 12.0.0 (clang-1200.0.32.29)]'
[16:28:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:29:07] <Yhg1s> SteveR: yes. An older version of Python that does not support that syntax.
[16:29:19] <SteveR> what is the latest version of python
[16:29:25] <Yhg1s> SteveR: 3.10.
[16:29:32] <bjs> SteveR: https://www.python.org/downloads/ 3.10.1
[16:29:39] <SteveR> bjs i have to use type hinting for class methods, how can i do?
[16:29:44] <varaindemian> bjs: https://www.irccloud.com/pastebin/4HaLSMFO/
[16:29:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:29:50] <bjs> SteveR: you can put `from __future__ import annotations` at the top of your file
[16:30:09] <bjs> varaindemian: what happens if there is an exception, there is no `a` to loop over then?
[16:30:16] <Yhg1s> Or, use the older syntax using typing.Dict, or Mapping.
[16:30:17] <SteveR> sure i got that.. i am stuck on how to use the type hints for class methods
[16:30:22] <SteveR> i.e the syntax
[16:30:24] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:30:27] <bjs> SteveR: you can put `from __future__ import annotations` at the top of your file
[16:30:39] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:30:41] <Yhg1s> SteveR: what part is giving you trouble? What are you trying to type?
[16:30:43] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:30:48] <varaindemian> bjs: so then I should just move the excep lower to get the for as well
[16:30:56] <bjs> varaindemian: probably not
[16:31:01] <bjs> varaindemian: maybe you want the `for` inside an `else`?
[16:31:51] <varaindemian> bjs: hmm?
[16:31:59] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[16:31:59] <bjs> varaindemian: try/except can also have an else
[16:32:03] *** Parts: lucifer (sid308373@id-308373.helmsley.irccloud.com) ()
[16:32:10] <bjs> for the case where there was no exception
[16:32:50] <varaindemian> bjs: I thinks treating the exception and exiting would be enough
[16:32:51] <bjs> varaindemian: if you share the full code (so we can see what actually causes the UnboundLocalError) I can probably give better advice
[16:33:01] <bjs> varaindemian: your code didn't exit? or does your real code exit?
[16:33:07] <bjs> Maybe you should share your actual code then
[16:33:39] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[16:34:01] <SteveR> Yhg1s def print(self: dict[str, str]): -> str
[16:34:07] <SteveR> if i ll have to pass the object of a class
[16:34:11] <SteveR> how can i do that
[16:34:21] <bjs> SteveR: your : is in the wrong place, it should be `def print(self, d: dict[str, str]) -> str:` or something
[16:34:26] <bjs> (presumably `self` isn't a dict ...)
[16:35:27] <varaindemian> https://www.irccloud.com/pastebin/poWiQMz6/
[16:35:31] *** Joins: tobybl (~tobybl@213.31.132.232)
[16:35:31] <varaindemian> bjs:
[16:35:46] <varaindemian> UnboundLocalError: local variable 'url_get_parameters' referenced before assignment
[16:36:09] <bjs> varaindemian: what line gives that error?
[16:36:17] <bjs> varaindemian: I still think you're missing some other code that talks about url_get_parameters
[16:36:25] *** Joins: Barones (~Barones@2804:7f3:8988:ba36:2a54:ab0c:1f7c:cc78)
[16:37:06] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[16:37:08] <varaindemian> bjs: there are the only two lines that have this var
[16:37:34] <varaindemian> bjs: this is the code after I've done the modifications
[16:37:48] <bjs> varaindemian: what modifications?
[16:38:09] <bjs> varaindemian: can you just share the whole file and the actual full error Python gave? it'll be much easier for me
[16:38:11] <varaindemian> bjs: lowering the except to cover the for
[16:38:11] *** Quits: BSaboia (~bsaboia@177.190.211.124) (Quit: This computer has gone to sleep)
[16:38:12] <bjs> if I can see the two
[16:38:17] <bjs> Oh
[16:38:37] <varaindemian> makes sense?
[16:38:51] <bjs> varaindemian: I'm confused, does this code give you an UnboundLocalError or not?
[16:39:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[16:39:07] <varaindemian> this code doesn't give any error
[16:39:09] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:39:14] <bjs> (and I did suggest using `else`, or returning from the except, and not that you should lower the except)
[16:39:15] <bjs> but sure
[16:39:30] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:3ddf:77ed:0:281)
[16:39:39] <bjs> generally you want the `try` to be as small as possible because you don't know *which* line gives the error if you have lots of lines inside the try
[16:39:40] <varaindemian> only the previous one where the except was covering the code before the for
[16:40:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:41:57] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[16:42:09] *** Quits: Barones (~Barones@2804:7f3:8988:ba36:2a54:ab0c:1f7c:cc78) (Remote host closed the connection)
[16:42:23] *** Joins: Barones (~Barones@2804:7f3:8988:ba36:2a54:ab0c:1f7c:cc78)
[16:42:28] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 265 seconds)
[16:42:31] <SteveR> what is the convention if a variable names start with _ inside a class in Python
[16:42:52] <SteveR> from reading i know that Python doesnt have any scopes like Public or Private as we have in Java
[16:42:54] *** Joins: AsenMx (~AsenMx@user/asenmx)
[16:42:55] <xheimlich> what annoys me about black is that it's trigger-happy to break lines (which is okay, it's supposed to have firm standards, I'll accept what it does) but doesn't opine on lines that, after having broken, change back to more succint contents.
[16:43:14] <xheimlich> so it doesn't enforce an uniform format, just a known transformation on code.
[16:43:44] <supakeen> SteveR: It's a convention to say 'dont touch this'.
[16:44:16] <Yhg1s> SteveR: it's pretty much 'private'.
[16:44:22] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:44:42] <supakeen> "Demons might fly out of your nose if you change this but hey if you enjoy that you do you."
[16:44:57] *** Joins: rany_ (~rany@user/rany)
[16:45:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[16:45:28] *** Quits: mjack (~mjack@5634d05c.rev.stofanet.dk) (Quit: mjack)
[16:45:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:46:10] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:46:24] *** Joins: BSaboia (~bsaboia@177.190.211.124)
[16:46:45] *** Quits: tobybl (~tobybl@213.31.132.232) (Remote host closed the connection)
[16:47:57] *** Quits: rany (~rany@user/rany) (Ping timeout: 276 seconds)
[16:48:07] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 256 seconds)
[16:50:12] *** Quits: grayn (grayn@gateway/vpn/protonvpn/grayn) (Quit: grayn)
[16:50:13] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 240 seconds)
[16:51:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[16:51:23] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[16:51:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:51:54] *** Joins: nordicX (~nordicnom@2601:8c2:8200:df00::1fd)
[16:53:19] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:54:10] *** Joins: reset (~reset@user/reset)
[16:54:13] *** Quits: sharperguy (~sharpergu@89.244.127.106) (Ping timeout: 240 seconds)
[16:54:18] *** Quits: teut (~teut@182.68.68.35) (Ping timeout: 256 seconds)
[16:55:31] *** Quits: Andrynet (~Andrynet@190.152.205.0) (Ping timeout: 265 seconds)
[16:56:19] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[16:57:14] *** Joins: jmft2 (~jmft2@16.149.115.87.dyn.plus.net)
[16:57:28] *** Joins: Andrynet (~Andrynet@190.152.205.0)
[16:57:51] *** Quits: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Ping timeout: 245 seconds)
[16:58:04] *** Joins: dez (uid92154@user/dez)
[16:58:11] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[16:58:36] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[16:58:58] *** Quits: AsenMx (~AsenMx@user/asenmx) (Read error: Connection reset by peer)
[16:59:00] *** Joins: maryo (~Maryo@user/maryo)
[16:59:23] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:02:53] *** Quits: BSaboia (~bsaboia@177.190.211.124) (Quit: This computer has gone to sleep)
[17:03:33] *** Joins: Pickchea (~private@user/pickchea)
[17:03:33] *** Parts: nordicX (~nordicnom@2601:8c2:8200:df00::1fd) (Leaving)
[17:03:45] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[17:03:47] *** Quits: nomic (~nomic@185.217.117.220) (Quit: Leaving)
[17:03:55] *** Quits: asa22 (~asa22@84.125.126.248.dyn.user.ono.com) (Quit: Client closed)
[17:04:07] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[17:04:50] *** Joins: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it)
[17:06:46] <bjs> xheimlich: I'm not sure I understand what you meant by "change back to more succinct contents"
[17:07:24] <bjs> varaindemian: yes that one failed because if an exception happened, then the assignment failed so you couldn't go `url_get_parameters.get`
[17:07:55] <varaindemian> 👌
[17:07:57] *** Quits: Andrynet (~Andrynet@190.152.205.0) (Ping timeout: 256 seconds)
[17:08:06] <bjs> varaindemian: I do not recommend putting everything in the `try`, since now if you get an IndexError you don't know if it came from the parse_qs line or the for loop or `attack_vector_param[0]`
[17:08:22] <bjs> so if one of those goes wrong in the future, you're very likely to not notice or become confused
[17:08:43] *** Joins: Andrynet (~Andrynet@190.152.205.0)
[17:08:56] <varaindemian> bjs: I see. Thank you!
[17:10:17] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[17:10:40] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[17:10:50] *** Joins: Abrax (~Abrax@user/abrax)
[17:11:06] <zitter> hi, I'm containerizing a Python script that has to run programmatically, that is using a crontab. To accomplish this task do you think is better to use OS crontab or a module like schedule?
[17:11:37] <bjs> zitter: it's why cron exists, so I'd use that
[17:12:13] <zitter> ok
[17:12:46] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:12:48] *** Joins: darksun (~darksun@user/darksun)
[17:13:38] <MacGyver> I'll take option #3: systemd timers.
[17:14:24] <_moep_> MacGyver: ack
[17:14:51] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[17:17:22] *** Joins: Pedee (~Pedee@user/Pedee)
[17:17:58] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Remote host closed the connection)
[17:18:10] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[17:19:19] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[17:20:24] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[17:20:48] *** Joins: yotsuba (~yotsuba@176.12.240.222)
[17:21:21] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:21:29] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[17:21:40] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:22:18] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:22:34] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[17:24:30] <Jong> What do you guys think about this code? https://bpa.st/THVA
[17:24:49] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:24:51] <Jong> I'm writing arguments vertically and processing the string after to expected format
[17:24:54] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e58c:fb6a:3ddf:77ed:0:281) (Remote host closed the connection)
[17:25:06] <Jong> that way the source code is readable
[17:25:29] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[17:25:53] <Jong> it's for a driver script that calls other scripts
[17:26:06] <emanuele6> why do you need to list arguments in a string?
[17:26:39] <emanuele6> also why are setting sys.argv??
[17:27:41] <bjs> Jong: you should use shlex.split not just str.split,  but I don't understand why you're writing to sys.argv either
[17:27:55] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[17:29:10] *** Joins: kevgao (~kevgao@c-174-63-68-26.hsd1.ct.comcast.net)
[17:31:11] *** Quits: grooverman_ (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[17:31:50] *** Joins: luigibu (~luigi@80.30.201.209)
[17:32:13] *** Joins: grooverman (~grooverma@177.102.117.95)
[17:32:13] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[17:32:38] *** Joins: aniketgm (~Aniket@49.36.109.129)
[17:32:56] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[17:33:19] <CrtxReavr> Writing to sys.argv?
[17:33:40] <CrtxReavr> I've pop'd from sys.argv.
[17:35:23] <aniketgm> hey yo. wassup everyone ?
[17:35:38] <aniketgm> anything interesting in the world of Python ?
[17:35:43] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[17:36:05] *** Joins: maryo (~Maryo@user/maryo)
[17:36:48] *** Joins: teut (~teut@182.68.68.35)
[17:37:43] <CrtxReavr> Jong is writing to sys.argv.
[17:38:17] *** Joins: menace (~someone@user/menace)
[17:38:27] *** Joins: Nact (~l@2a02:2788:11c4:6e6:ede0:bbc0:a761:9e01)
[17:38:33] *** Joins: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl)
[17:38:53] *** Joins: BSaboia (~bsaboia@177.190.211.124)
[17:39:34] <Jong> CrtxReavr the reason I'm writing to sys.argv is that the script later called reads from sys.argv.  Suppose b.py has if __name__ == "__main__": run().  b.py could be ran directly or called from another python file calling the run() function
[17:40:04] <grym> Jong: so run() takes a list of strings, then, and what's the problem
[17:40:26] <aniketgm> what's he writing ? that sys.argv isn't jong anymore.
[17:40:26] *** Quits: Pedee (~Pedee@user/Pedee) (Quit: WeeChat 3.3)
[17:40:27] <grym> or a single string that you hand to argparse, which still could be just a string
[17:41:10] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 268 seconds)
[17:41:14] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:41:27] <Jong> what's wrong with writing to sys.argv ?
[17:42:53] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 265 seconds)
[17:42:57] <Jong> grym  to do what I think you're suggesting, I'd need to convert sys.argv into the argparse object and then pass it to run()
[17:42:59] <Wooble> besides just "feeling wrong" it's global mutable state.
[17:43:00] <zodd> I wrote 3 validation functions val_ipv4 val_ipv6 and val_ip which just does: return val_ipv4(ip) or val_ipv6(ip). The two function work fine with an assert/pytest, but the combined function fails with an AssertionError because ipv4 obviously does not like an ipv6 address: ipaddress.AddressValueError: Expected 4 octets
[17:43:19] <zodd> Why does assert have issues with this?
[17:43:36] <zodd> returning false would be fine by me
[17:43:50] <grym> Jong: no
[17:44:21] <zodd> then (false or true) --> true which would make the assert of the total function be ok
[17:44:56] *** Joins: kronicmage (user91577@neotame.csclub.uwaterloo.ca)
[17:45:04] <summonner> zodd, do a regex on the function input, validate it passes; return false otherwise
[17:45:07] <MacGyver> zodd: Any assert that fails is an immediate error, always.
[17:45:14] <MacGyver> zodd: That's kinda the point of assertions.
[17:45:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:45:44] <Jong> Wooble I don't see any bad consequences of a driver script writing to sys.argv to simulate calling a script from the terminal
[17:46:10] <summonner> yes, you should be capturing the assert at the block or raising them higher depending how your code is written
[17:46:27] <han-solo> also `cmd.replace("\n", " ").replace("  ", "").split()` feels like just `cmd.split()` # ?
[17:46:28] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:46:28] *** Joins: Knyght (sid365271@id-365271.helmsley.irccloud.com)
[17:46:28] <MacGyver> I doubt you should be using assertions at all.
[17:46:40] <MacGyver> These sound like functions that should validate IP-addresses passed at runtime.
[17:47:03] <MacGyver> Assertions are to test whether the validation is working correctly.
[17:47:11] <han-solo> neverthless as bjs said, `shlex.split` is better
[17:47:23] <Wooble> Jong: ok, well if you ask what people think of your code be prepared for them to tell you.
[17:47:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[17:47:47] <MacGyver> And if they're helper functions for the test framework, then they shouldn't be using assertions themselves.
[17:48:19] <summonner> Jong, that smells like a recipe for an injection attack if it's doing anything root/kernel worthy
[17:49:17] *** Quits: BSaboia (~bsaboia@177.190.211.124) (Quit: This computer has gone to sleep)
[17:49:46] *** Joins: fikran (~fikran@user/fikran)
[17:50:34] <zodd> MacGyver, I was just wondering. The assert itself does not fail, but something inside the asserted function fails, although intended and handled by that function giving a result which should pass the assert. Apparently the assert is quite dominant and hovers over call code executed
[17:50:57] <MacGyver> I don't know what you mean by that last sentence.
[17:51:50] <MacGyver> But then you haven't shown any code or any actual output, so my willingness to think about this is rapidly diminishing.
[17:52:21] <Wooble> zodd: make sure your val functions catch AddressValueError if that's what the things they call raise.
[17:52:48] *** Joins: BSaboia (~bsaboia@177.190.211.124)
[17:52:53] <Wooble> the assert should have nothing to do with it. if you just call the function you should get the same exception.
[17:53:36] <zodd> I should indeed use try here I suppose. Thanks
[17:53:48] *** Joins: gusto (~Augustus@109.255.100.54)
[17:54:48] *** Joins: schmoee (~schmoee@2601:84:4501:6440:21e8:6f7b:eba2:d34)
[17:55:30] *** Quits: Nact (~l@2a02:2788:11c4:6e6:ede0:bbc0:a761:9e01) (Quit: Konversation terminated!)
[17:56:27] *** Joins: BlueSky (~BlueSky@user/bluesky)
[17:56:48] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[17:58:03] *** Joins: Bpillman (~Guest10@ip70-179-135-215.fv.ks.cox.net)
[17:58:09] *** Joins: rvalue (~rvalue@user/rvalue)
[17:59:04] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:00:26] *** Quits: BSaboia (~bsaboia@177.190.211.124) (Quit: This computer has gone to sleep)
[18:00:44] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[18:01:15] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 265 seconds)
[18:01:38] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:01:47] *** Joins: BlueSky (~BlueSky@user/bluesky)
[18:01:52] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[18:03:17] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Read error: Connection reset by peer)
[18:03:43] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[18:04:36] *** Joins: jpic (~jpic@pop.92-184-98-69.mobile.abo.orange.fr)
[18:05:26] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob2)
[18:05:57] *** Quits: EGH (~EGH@185.25.195.104) (Remote host closed the connection)
[18:08:31] *** Joins: BSaboia (~bsaboia@177.190.211.124)
[18:09:51] *** Quits: tmus (~tmus@cust-185-157-203-2.nanoqnet.gl) (Quit: Textual IRC Client: www.textualapp.com)
[18:09:55] *** Joins: EGH (~EGH@185.25.195.104)
[18:10:47] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[18:11:22] *** Joins: pyzozord (pyzozord@user/pyzozord)
[18:11:39] <pyzozord> is there an easy way to print a list in python and make sure each item has the same widht?
[18:12:35] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[18:12:35] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[18:12:57] *** Quits: BSaboia (~bsaboia@177.190.211.124) (Client Quit)
[18:13:11] *** Quits: Andrynet (~Andrynet@190.152.205.0) (Ping timeout: 252 seconds)
[18:13:19] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[18:13:21] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[18:13:34] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[18:13:37] *** Quits: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net) (Ping timeout: 256 seconds)
[18:13:47] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[18:14:02] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:14:06] *** Joins: BlueSky (~BlueSky@user/bluesky)
[18:14:50] *** Joins: monkey_ (~user@181.114.17.106)
[18:15:02] *** Joins: tobybl (~tobybl@213.31.132.232)
[18:15:11] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[18:15:11] *** Joins: Andrynet (~Andrynet@190.152.205.0)
[18:16:10] *** Joins: callq (~callq@157.41.67.21)
[18:16:59] <jinsun> are you trying to make something like a table?
[18:17:23] <jinsun> https://pypi.org/project/tabulate/ is good in that case
[18:18:47] <pyzozord> yes
[18:18:53] <pyzozord> just two lists I want to align them
[18:19:01] <pyzozord> it's ok to say each item has 3 spaces
[18:19:12] <pyzozord> but I don't want to install any module
[18:20:13] *** Quits: Andrynet (~Andrynet@190.152.205.0) (Ping timeout: 240 seconds)
[18:20:20] <jinsun> str.rjust or str.ljust to pad with spaces
[18:20:20] <Jong> thanks han-solo. I think you're right. I thought split() doesn't use \n as a separator, and I didn't want that to be in the list of strings
[18:21:49] *** Quits: andrewSC_ (~andrewSC@archlinux/trusteduser/andrewSC) (Quit: WeeChat 3.3)
[18:22:19] *** Joins: Socra (~Socra@206.217.216.27)
[18:22:23] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[18:22:30] *** Joins: Andrynet (~Andrynet@190.152.205.0)
[18:22:44] *** Joins: arinov (~arinov@212.156.215.30)
[18:23:05] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Read error: Connection reset by peer)
[18:23:21] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[18:23:41] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[18:24:37] <jinsun> pyzozord: you can do something like, `for x, y in zip(list1, list2): print(str(x).rjust(3), str(y).rjust(3))`
[18:25:29] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[18:26:02] <pyzozord> I got another question
[18:26:06] <pyzozord> i have two lists
[18:26:24] <pyzozord> i need to have one list where l3 = l1[i] + l2[i]
[18:26:26] *** Joins: eem (~eem@user/eem)
[18:26:47] <pyzozord> there is some elegant way to do it in python, I'm sure I just forget it
[18:26:53] <grym> l3 = [sum(x,y) for x,y in zip(l1,l2)]
[18:27:19] <pyzozord> there isn't anything smaller without list comprehension?
[18:27:22] <grym> or sum(items) for items in zip(...)
[18:27:25] *** Quits: jpic (~jpic@pop.92-184-98-69.mobile.abo.orange.fr) (Read error: Connection reset by peer)
[18:27:42] *** Quits: novapy (~novapy@c-68-62-193-246.hsd1.fl.comcast.net) (Read error: No route to host)
[18:27:43] <han-solo> jinsun: i mean, no, please use `shlex.split`
[18:27:50] *** Quits: Andrynet (~Andrynet@190.152.205.0) (Ping timeout: 265 seconds)
[18:27:51] <han-solo> er
[18:27:56] <han-solo> Jong: ^
[18:28:12] <MacGyver> map(sum, zip(l1, l2))
[18:28:19] <Jong> han-solo  thank you
[18:28:23] <MacGyver> If you want to avoid the list comprehension, but I don't know why you would.
[18:28:25] <Jong> I'm looking that up now
[18:28:30] <han-solo> assume you have a line like `--option "value with space"` # .split is not going to be what you want then
[18:28:35] *** Quits: TML (~tml@user/tml) (Ping timeout: 252 seconds)
[18:28:56] <pyzozord> ok map is perfct
[18:28:59] <pyzozord> now last question
[18:29:07] <pyzozord> elegant way to find the index with the lowest value in the list
[18:29:14] <pyzozord> I assume it involves enumerate
[18:29:16] *** Quits: masterkorp (~masterkor@user/masterkorp) (Quit: The Lounge - https://thelounge.chat)
[18:29:20] <pyzozord> maybe doesnt?
[18:29:21] <jinsun> map gets uglier if you wanted a list
[18:29:29] <jinsun> have to do list(map(...)))
[18:29:52] *** Quits: callq (~callq@157.41.67.21) (Quit: callq)
[18:30:05] <graingert[m]> you can use enumerate with min and key
[18:30:24] <pyzozord> graingert[m]: how?
[18:30:24] *** Joins: tobybl_ (~tobybl@213.31.132.232)
[18:30:25] *** Joins: masterkorp (~masterkor@user/masterkorp)
[18:30:30] <graingert[m]> min(enumerate(items), key=operator.itemgetter(1))[0]
[18:30:36] <graingert[m]> s/min(enumerate(items), key=operator.itemgetter(1))[0]/`min(enumerate(items), key=operator.itemgetter(1))[0]`/
[18:31:56] *** Joins: afidegnum (~user@154.160.21.236)
[18:32:37] *** Quits: tobybl (~tobybl@213.31.132.232) (Ping timeout: 252 seconds)
[18:32:53] <pyzozord> graingert[m]: name 'operator' is not defined
[18:32:59] <han-solo> `import operator`
[18:33:06] <afidegnum> hi, beautifulsoup returns an empty result when used in a function/loop but i was able to print it inside the function. what am i doing wrong? https://colab.research.google.com/drive/1Xene9c_5XWBYANtCqRRt51NOD50Yjr1o?usp=sharing
[18:33:14] <pyzozord> what's operator?
[18:33:16] *** Joins: ca1f (~calf@user/ca1f)
[18:33:26] <grym> a module
[18:33:30] <grym> that provides operators
[18:33:42] <grym> fwiw what you're up to is ~trivial in numpy https://bpa.st/ZZYQ
[18:33:43] <han-solo> https://docs.python.org/3/library/operator.html
[18:35:28] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-c014-8934-c8a1-0049.res6.spectrum.com)
[18:35:50] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[18:36:35] <NeilRG> yeah, this should all be done in numpy as grym says
[18:36:37] *** Quits: ihristov (~ihristov@217.145.94.71) (Ping timeout: 240 seconds)
[18:36:45] <pyzozord> thanks
[18:36:46] *** Parts: pyzozord (pyzozord@user/pyzozord) ()
[18:37:14] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:38:03] <grym> well, it _can_ be
[18:38:07] <grym> but it depends on what you're up to
[18:38:12] <ca1f> Hi, I'm trying to wrap my head around python typing and ran into a problem I can't find a simple solution for myself. It's basically this here: https://mypy-play.net/?mypy=latest&python=3.10&gist=7a3382bdac2a70dd9e50680bb326f23b I want to receive in tv a type of a collection of any kind, list, set, tuple or a custom class that implements the collection protocol doesn't matter. But mypy rightfully so says that line 7 is not correct since instantiation is not part
[18:38:12] <ca1f> of Collection. How do I have to type tv so that this would be acceptable?
[18:39:30] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[18:39:51] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Read error: Connection reset by peer)
[18:40:01] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[18:40:53] *** Quits: baltazaar (~baltazar@94-21-221-155.pool.digikabel.hu) (Ping timeout: 256 seconds)
[18:40:58] *** Joins: dohtem (uid524096@user/dohtem)
[18:41:20] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[18:41:21] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[18:41:30] *** Joins: yotsuba420 (~yotsuba@93-172-241-53.bb.netvision.net.il)
[18:41:41] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[18:42:02] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[18:42:20] *** Quits: yotsuba (~yotsuba@176.12.240.222) (Ping timeout: 265 seconds)
[18:43:01] *** Joins: jpic (~jpic@pop.92-184-98-69.mobile.abo.orange.fr)
[18:43:48] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Client Quit)
[18:43:52] *** Joins: pigweed (~pigweed@97.119.229.83)
[18:43:59] <afidegnum> any insight ?
[18:44:00] <mrtnt_> I'm working on a Python 3 code which reads the files from versioning system and those files can be in different encodings like ISO-8859-1, ASCII or UTF-8. Am I correct, that there is no better solution than first detect the correct encoding with "chardet"(e.g https://paste.debian.net/plainh/429311fb) and then use that encoding for open()?
[18:44:07] *** Joins: novapy (~novapy@c-68-62-193-246.hsd1.fl.comcast.net)
[18:44:13] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 240 seconds)
[18:45:12] <Wooble> mrtnt_: absent other metadata, probably yes. You could always try utf-8 and then fall back to latin-1 if that doesn't work, if you only need to deal with those 3
[18:45:23] <graingert[m]> <pyzozord> "graingert: name 'operator' is..." <- You need to import it
[18:45:35] <Wooble> mrtnt_: (ascii isn't a problem since it's a subset of both)
[18:45:40] <hexnewbie> mrtnt_: I'm not sure how inaccurate chardet is for utf8, but the *most accurate* way to make the determination is to try the read the entire file as 'utf8', and if that fails at any point with UnicodeError, try iso-8859-1 (or cp1252, since unlike Python, *some* software assumes latin1 is cp1252, e.g. browsers)
[18:46:44] <hexnewbie> “Most modern web browsers and e-mail clients treat the media type charset ISO-8859-1 as Windows-1252 to accommodate such mislabeling.”
[18:47:01] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 240 seconds)
[18:47:40] <raek> mrtnt_: I'm curious, why is the encoding for these files not known in advance?
[18:47:45] *** Quits: botfather (~botfather@shell1.dds.nl) (Quit: -)
[18:48:01] *** Quits: jay-m1261 (~jay-m@154.72.167.189) (Ping timeout: 252 seconds)
[18:48:01] *** Quits: jay-m126_ (~jay-m@154.72.167.189) (Ping timeout: 252 seconds)
[18:48:03] *** Joins: botfather (~botfather@shell1.dds.nl)
[18:48:45] *** Quits: jay-m126 (~jay-m@154.72.167.189) (Ping timeout: 252 seconds)
[18:48:46] *** Joins: delvian (~delvian@41.13.192.207)
[18:49:11] <Wooble> the lack of any standard way to identify them can't help :)
[18:49:12] <jinsun> ca1f: you can make a protocol inheriting from collection, something like this https://mypy-play.net/?mypy=latest&python=3.10&gist=e23413b591db1c4085b9414f90ed5600&flags=show-error-codes%2Cstrict
[18:49:22] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[18:49:52] <mrtnt_> Wooble, hexnewbie: ok, thanks! I'll go with the try/except with "UnicodeDecodeError" route
[18:50:02] <raek> mrtnt_: also, here is an example of hot to do "try utf-8 but fall back to cp1252": https://github.com/raek/pladder/blob/master/pladder/irc/message.py#L222
[18:50:09] *** Joins: metaace_ (~metaace@user/metaace)
[18:50:09] *** Quits: metaace (~metaace@user/metaace) (Ping timeout: 276 seconds)
[18:50:35] *** Quits: Barones (~Barones@2804:7f3:8988:ba36:2a54:ab0c:1f7c:cc78) (Remote host closed the connection)
[18:50:37] <mrtnt_> raek: I think it's because different people modify those files on different systems(e.g under Windows, Linux, Mac) and then commit those to versioning system
[18:50:42] <schmoee> help list
[18:50:46] <Wooble> mrtnt_: could also throw bs4.UnicodeDammit at it, although I suspect it just does something similar.
[18:50:47] <raek> it registers an decode error handler so you can open a file an specify encoding="utf-8", errors="fallback_to_cp1252"
[18:50:53] <ca1f> jinsun, thank you so much, that indeed looks like a good solution to me
[18:51:05] *** Quits: arinov (~arinov@212.156.215.30) (Ping timeout: 256 seconds)
[18:51:10] <raek> mrtnt_: I see.
[18:51:21] <ca1f> regarding character detection: https://github.com/chomechome/charamel this library looks interesting, it claims to use machine learning to detect the encoding
[18:51:25] *** Quits: delvian (~delvian@41.13.192.207) (Read error: Connection reset by peer)
[18:51:31] *** Quits: kuter (~kuter@public-gprs526031.centertel.pl) (Read error: Connection reset by peer)
[18:51:51] <raek> (personally, I would make a clean-up commit that converts all those files to UTF-8)
[18:51:52] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[18:52:01] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:52:11] <graingert[m]> <ca1f> "Hi, I'm trying to wrap my head..." <- https://mypy-play.net/?mypy=latest&python=3.10&gist=ad65faedb1430517929a0b9a93f82007&flags=strict
[18:52:11] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[18:52:36] <Wooble> raek: then you push the exact same problem to the tool cleaning them up :)
[18:52:56] *** Quits: tobybl_ (~tobybl@213.31.132.232) (Remote host closed the connection)
[18:52:58] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:53:13] <hexnewbie> raek: That appears to do it in the way my IRC client does it, allowing any cp1252 line (or read substring) inside an otherwise UTF-8 file
[18:53:19] <ca1f> thanks graingert[m] but I think that solution is a bit too specific, I wasn't clear enough it seems, range was just an example. tuple/list accept iterables of any kind
[18:53:23] <graingert[m]> jinsun: your implementation permits v = foo(list[str])
[18:53:26] <ca1f> but I see your intention
[18:53:37] <raek> Wooble: my idea would be that a human would check all files that are not valid UTF-8 on a case by case basis
[18:53:41] <graingert[m]> ca1f: yeah that's fine though
[18:53:52] *** Joins: delvian (~delvian@41.13.192.207)
[18:53:58] <graingert[m]> range is the most specific object the function needs to support
[18:54:03] *** yotsuba420 is now known as yotsuba
[18:54:12] <Wooble> raek: that may not scale very well
[18:54:12] <graingert[m]> so if the function accepts Iterable[int] that will also work
[18:54:13] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 240 seconds)
[18:54:41] <ca1f> yeah, I see your intention, so your suggestion is that I don't actually need to receive the type in tv but rather something, a callable, that gives me the type
[18:54:43] <graingert[m]> the inheritance works the other way around with Callable parameter types
[18:54:58] <ca1f> or rather that gives me an object of the desired type
[18:55:03] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[18:55:16] <graingert[m]> yep unless you specifically care about doing issubclass or other type-y things
[18:55:20] *** Joins: akk (~akk@75.161.146.115)
[18:55:25] <jinsun> graingert[m]: ah yeah, the Callable way is nicer and more in line with what the implementation actually needs
[18:55:40] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[18:55:47] <graingert[m]> you very rarely need a t.Type[T]
[18:55:56] *** Quits: schmoee (~schmoee@2601:84:4501:6440:21e8:6f7b:eba2:d34) ()
[18:56:00] <graingert[m]> usually you only care about the type of the constructor
[18:56:08] *** Quits: botfather (~botfather@shell1.dds.nl) (Remote host closed the connection)
[18:56:14] *** Joins: schmoee (~schmoee@2601:84:4501:6440:21e8:6f7b:eba2:d34)
[18:56:17] <raek> ...or assume assume that all files are cp1252 and then review the changes in the affected files to see if that assumption is true
[18:56:33] <graingert[m]> and a lot of people assume that t.Type[T] is the same as Callable[[object], T]
[18:56:42] <ca1f> I'll think about it for a bit but I like the idea behind it, again, thanks for the input. Maybe I actually don't need the type, gotta think about it a bit more.
[18:57:39] <SteveR> is there a way to reduce nested for loops in python
[18:58:20] <grym> SteveR: depends on what you're doing
[18:58:26] <grym> (what are you doing)
[18:58:27] <afidegnum> hi, any hint about my beautufulsoup issue ?
[18:59:51] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:00:32] *** Joins: mattmcc (~matt@li807-33.members.linode.com)
[19:02:15] *** Quits: schmoee (~schmoee@2601:84:4501:6440:21e8:6f7b:eba2:d34) ()
[19:03:30] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[19:04:26] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:05:07] <han-solo> usually if it just `for x in range(..):..for y in range(..):..` you could probably replace that with `itertools.product` or something
[19:05:27] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Quit: Leaving)
[19:05:44] <grym> itertools and zip/zip_longest get you pretty far
[19:08:57] *** Quits: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it) (Quit: Leaving)
[19:09:24] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 265 seconds)
[19:09:38] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[19:11:03] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[19:11:49] *** Joins: AsenMx (~AsenMx@user/asenmx)
[19:12:26] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[19:12:50] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[19:13:02] <Wooble> (and sometimes numpy just has a function builtin that solves your x*y problem nearly instantly)
[19:13:18] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Client Quit)
[19:13:25] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[19:15:49] *** Quits: thurs806014210 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[19:16:09] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[19:16:18] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[19:16:35] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 256 seconds)
[19:17:37] *** Quits: delvian (~delvian@41.13.192.207) (Read error: Connection reset by peer)
[19:17:58] *** Joins: delvian (~delvian@41.13.192.207)
[19:18:24] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[19:18:28] *** Joins: mjack (~mjack@5634d05c.rev.stofanet.dk)
[19:18:40] *** Joins: maplefinger (~nd@user/lindis)
[19:22:13] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[19:22:26] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[19:23:35] <zumba_addict> Good morning all. I forgot how I am able to run "python3 -m venv venv". Do we install venv with pip?
[19:23:55] <Wooble> zumba_addict: what distro?
[19:24:09] <Wooble> zumba_addict: it's in stdlib, but some separate it.
[19:24:36] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[19:25:06] <Wooble> (might need to apt install python3-venv or equivalent)
[19:25:31] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:25:50] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[19:26:05] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[19:26:47] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 256 seconds)
[19:27:52] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[19:28:04] <zumba_addict> i'm in mac osx but will be nice to know too if linux debian
[19:28:21] *** Quits: SpeakerToMeat (~Speaker@user/speakertomeat) (Ping timeout: 252 seconds)
[19:28:31] *** dcaro_away is now known as dcaro
[19:28:40] <Wooble> zumba_addict: *probably* an OS X python3 install should already come with venv. :/
[19:28:47] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[19:29:20] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[19:30:21] *** Joins: minip (~minip@user/minip)
[19:30:32] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[19:30:48] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[19:31:53] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[19:33:11] *** Quits: dmr (~rdumitru@user/dmr) (Quit: WeeChat 3.3)
[19:33:15] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[19:36:19] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:36:49] *** Joins: jkent3 (~john@66.44.44.108)
[19:36:57] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[19:37:13] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:37:40] *** Joins: BSaboia (~bsaboia@177.190.211.124)
[19:37:43] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:38:04] *** Quits: BSaboia (~bsaboia@177.190.211.124) (Remote host closed the connection)
[19:38:13] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[19:42:08] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:42:41] *** Joins: irrgit (~irrgit@192.241.175.183)
[19:44:00] *** Joins: SpeakerToMeat (~Speaker@user/speakertomeat)
[19:46:09] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[19:46:20] *** Joins: jay-m126 (~jay-m@154.72.150.193)
[19:46:25] *** Joins: jay-m126_ (~jay-m@154.72.150.193)
[19:47:42] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[19:47:49] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 240 seconds)
[19:47:59] <zumba_addict> thank you Wooble
[19:48:15] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:49:02] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 265 seconds)
[19:50:08] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[19:51:26] *** Joins: jay-m1261 (~jay-m@154.72.150.193)
[19:51:46] <lesshaste> how can you convert datetime.datetime(2020, 2, 1, 0, 3, 9, tzinfo=tzutc()) into "February 1 2020"?
[19:52:13] *** Quits: kevgao (~kevgao@c-174-63-68-26.hsd1.ct.comcast.net) (Changing host)
[19:52:13] *** Joins: kevgao (~kevgao@user/kevgao)
[19:52:14] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[19:52:26] *** Joins: nomic (~nomic@185.217.117.220)
[19:52:29] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[19:53:11] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:dcc8:ad1a:f19b:91b0)
[19:55:15] <bjs> lesshaste: with the strftime method.  See https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes for a list of the format codes. You probably want "%B %d %Y"
[19:56:06] <lesshaste> bjs, %B is great! I had no idea it existed
[19:56:07] <lesshaste> thank you
[19:56:19] <lesshaste> can you get 2 instead of 02?
[19:56:57] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 252 seconds)
[19:56:59] <grym> lesshaste: %w
[19:57:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[19:57:07] <grym> err, no
[19:57:13] <grym> what was i thinking
[19:57:41] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 252 seconds)
[19:57:43] <lesshaste> grym, :) that doesn't work
[19:57:47] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[19:57:49] <grym> sure doesn't
[19:59:10] *** Joins: fikran (~fikran@user/fikran)
[19:59:53] <Wooble> trivial in pendulum. datetime gives you what posix does
[20:01:01] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:9895:12d6:b9a8:a666) (Quit: Leaving)
[20:01:07] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 265 seconds)
[20:01:47] <Wooble> lesshaste: try "%B%e %Y" (not sure if portable)
[20:02:00] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:9895:12d6:b9a8:a666)
[20:02:04] <lesshaste> Wooble, thanks
[20:02:12] <moonmoon> Wooble: except that wouldn't look good once there's no leading 0
[20:02:18] <moonmoon> e.g. "December10 2021"
[20:02:32] <lesshaste> Wooble, why might it not be portable?
[20:02:42] <lesshaste> moonmoon, just a space before %e :)
[20:02:50] <Wooble> moonmoon: oops, adds a space if there's a 0 though :/
[20:02:55] <moonmoon> yes
[20:03:00] <lesshaste> of actually don't
[20:03:05] <lesshaste> oh...
[20:03:06] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[20:03:06] <moonmoon> %e is %d except leading 0 is replaced with leading space
[20:03:08] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[20:03:18] <lesshaste> moonmoon,  ah.. so I see the problem
[20:03:25] <Wooble> lesshaste: it's undocumented, but just gets passed to the underlying C library which supports it on linux
[20:03:37] <moonmoon> blah.strftime("%B %d %Y").replace(" 0", "")
[20:03:38] <moonmoon> :P
[20:03:40] <lesshaste> got you. I guess it doesn't work with 10 so is not ideal
[20:03:43] <lesshaste> moonmoon,  :) nice
[20:03:54] <moonmoon> er
[20:03:58] <Wooble> ' '.join(<thing>.split())?
[20:03:59] <moonmoon> replace with " ", not ""
[20:04:27] *** Quits: aniketgm (~Aniket@49.36.109.129) (Quit: leaving)
[20:04:28] <Wooble> (anyway datetime is garbage just install pendulum :P )
[20:04:47] <NoImNotNineVolt> blasphemy
[20:05:14] <moonmoon> the non-portable way that actually works is "%B %-d %Y"
[20:05:42] <moonmoon> the - bit is a glibc extension and will not work on Windows, Mac, or BSDs
[20:05:48] <moonmoon> you'll get a ValueError instead
[20:05:57] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 265 seconds)
[20:06:06] <moonmoon> so the str.replace method is probably your best bet if you care about portability
[20:06:09] *** Parts: afidegnum (~user@154.160.21.236) (ERC (IRC client for Emacs 27.2))
[20:06:59] *** Joins: reckless (~hex@user/node1)
[20:07:04] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[20:07:10] *** Joins: zebrag (~chris@user/zebrag)
[20:07:35] *** Quits: delvian (~delvian@41.13.192.207) (Ping timeout: 256 seconds)
[20:07:47] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:08:20] *** Joins: bam32 (~bambams@user/bambams)
[20:08:21] <moonmoon> in Windows, "%B %#d %Y" achieves the same thing
[20:08:43] <reckless> Could anyone helps me to understand the meaning of this error https://pastebin.com/raw/aTFC3Pnt
[20:08:51] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 265 seconds)
[20:08:52] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[20:09:49] *** Quits: chatcat_ (~chatcat@ip-24-53-119-61.user.start.ca) (Read error: Connection reset by peer)
[20:10:06] <bjs> reckless: well I'd guess it means it tried to connect, but failed, and then tried again a bunch of times until it gave up
[20:11:11] <bjs> but there's very little information in just that line,  possibly the urllib3 docs have more information about how HTTPConnectionPool works and what kind of exceptions you can get and when
[20:11:48] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[20:12:30] *** Joins: chatcat (~chatcat@ip-24-53-119-61.user.start.ca)
[20:12:37] *** Quits: vimart (~vimart@109.249.179.187) (Ping timeout: 240 seconds)
[20:13:12] *** Quits: jay-m1261 (~jay-m@154.72.150.193) (Ping timeout: 265 seconds)
[20:13:12] *** Quits: jay-m126 (~jay-m@154.72.150.193) (Ping timeout: 265 seconds)
[20:13:15] *** Quits: jay-m126_ (~jay-m@154.72.150.193) (Ping timeout: 256 seconds)
[20:13:32] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[20:14:09] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:31e5:443a:aa23:d51a)
[20:14:16] *** Joins: vimart (~vimart@109.249.179.187)
[20:14:32] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[20:14:57] *** Joins: jay-m126 (~jay-m@129.0.76.217)
[20:15:04] *** Joins: jay-m126_ (~jay-m@129.0.76.217)
[20:15:09] *** Joins: jay-m1261 (~jay-m@129.0.76.217)
[20:16:02] *** Quits: xiaguan (~parsley@2604:180:f1::173) (Remote host closed the connection)
[20:16:02] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[20:16:06] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:9895:12d6:b9a8:a666) (Quit: Leaving)
[20:17:36] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[20:17:56] *** Joins: paravida (~myChateau@user/paravida)
[20:18:31] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 265 seconds)
[20:20:26] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[20:21:50] *** Quits: chatcat (~chatcat@ip-24-53-119-61.user.start.ca) (Read error: Connection reset by peer)
[20:22:26] <lesshaste> if I have a list of pairs like (text1, datetime.datetime(2020, 2, 2, 0, 18, 54, tzinfo=tzutc())) how can I aggregate them by day?
[20:22:27] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[20:22:58] *** Joins: nyah (~nyah@94.6.71.219)
[20:23:06] <han-solo> `itertools.groupby(that, key=lambda x: x[1])` # ?
[20:24:34] <han-solo> er, day
[20:25:11] <han-solo> s/x[1]/x[1].day/ # maybe
[20:25:24] *** Joins: chatcat (chatcat@gateway/vpn/airvpn/chatcat)
[20:26:10] <grym> and you'll want to sort it first
[20:26:33] <han-solo> ah yeah
[20:27:18] *** Quits: chatcat (chatcat@gateway/vpn/airvpn/chatcat) (Read error: Connection reset by peer)
[20:27:53] <han-solo> `keyfunc = lambda x: x[1].day; itertools.groupby(sorted(that, key=keyfunc), key=keyfunc)`
[20:28:03] *** Quits: luigibu (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[20:28:11] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 265 seconds)
[20:28:27] *** Quits: DerpGusta (~quassel@user/derpgusta) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:28:33] *** Quits: jay-m1261 (~jay-m@129.0.76.217) (Ping timeout: 256 seconds)
[20:28:33] *** Quits: jay-m126_ (~jay-m@129.0.76.217) (Ping timeout: 256 seconds)
[20:28:33] *** Quits: jay-m126 (~jay-m@129.0.76.217) (Ping timeout: 256 seconds)
[20:29:14] *** Joins: chatcat (~chatcat@ip-24-53-119-61.user.start.ca)
[20:29:16] *** Joins: DerpGusta (~quassel@user/derpgusta)
[20:29:38] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[20:29:44] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[20:30:02] *** Joins: vladoski (~vladoski@2001:b07:add:d406:312e:9482:dcca:733d)
[20:30:23] *** Joins: jay-m126 (~jay-m@129.0.76.221)
[20:30:33] *** Joins: jay-m126_ (~jay-m@129.0.76.221)
[20:30:39] *** Joins: jay-m1261 (~jay-m@129.0.76.221)
[20:31:00] *** Joins: magla (~gelignite@55d44df1.access.ecotel.net)
[20:31:05] *** Joins: delvian (~delvian@41.13.192.207)
[20:31:14] *** Joins: cr0n0s (~quassel@181.66.138.161)
[20:31:39] <lesshaste> how can I get the day of a datetime so that they are equal if the day is the same and not equal if the day is different?
[20:31:56] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Quit: guenhael)
[20:32:09] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[20:32:19] *** Joins: neachdainn (~nate@50.224.226.50)
[20:32:54] *** Joins: cheater (~Username@user/cheater)
[20:33:33] *** Joins: rany (~rany@user/rany)
[20:34:53] <mefistofeles> lesshaste: not sure I understand, but wouldn't it just be date1.dat == date2.day ?
[20:34:58] <mefistofeles> s/dat/day
[20:35:10] <lesshaste> megaTherion, ah yes. Thank you
[20:35:54] <mefistofeles> yes, thank you megaTherion
[20:35:57] <mefistofeles> :)
[20:36:14] <lesshaste> megaTherion, actually.. datetime.datetime(2020, 2, 1, 0, 3, 9, tzinfo=tzutc()).day returns 1 for me
[20:36:30] <lesshaste> as does datetime.datetime(2020, 1, 1, 0, 3, 9, tzinfo=tzutc()).day
[20:36:41] <mefistofeles> lesshaste: what do youe xpect? it's the first day of the month for both
[20:36:55] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 268 seconds)
[20:36:56] <lesshaste> megaTherion, I am just trying to ignore hours and minutes
[20:37:24] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 276 seconds)
[20:37:45] *** Joins: mistery (~textual@96.59.174.9)
[20:38:39] <jinsun> you can do your_datetime.date(), to get only the date part
[20:38:59] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:41:30] <lesshaste> jinsun, oh that works!
[20:41:31] <lesshaste> thanks
[20:42:12] *** Quits: reckless (~hex@user/node1) (Ping timeout: 265 seconds)
[20:44:04] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[20:46:33] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 265 seconds)
[20:48:22] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[20:48:52] *** Quits: casastorta (~casastort@dc4.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[20:48:53] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:49:15] *** Quits: zepolen (~zepolen@2a02:587:293f:b5fe:a9ae:7515:90f4:3484) (Ping timeout: 268 seconds)
[20:49:23] *** Quits: Jong (~Jong@2620:10d:c090:400::5:6122) (Ping timeout: 252 seconds)
[20:50:00] *** Joins: casastorta (~casastort@dc4.krivokuca.net)
[20:50:07] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:51:23] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 265 seconds)
[20:51:40] *** Quits: vladoski (~vladoski@2001:b07:add:d406:312e:9482:dcca:733d) (Quit: Textual IRC Client: www.textualapp.com)
[20:53:25] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[20:54:14] *** Quits: teut (~teut@182.68.68.35) (Quit: Client closed)
[20:54:17] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:31e5:443a:aa23:d51a) (Remote host closed the connection)
[20:55:42] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:56:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[20:57:12] *** Joins: Betal (~Betal@user/betal)
[20:57:49] *** Quits: jay-m126 (~jay-m@129.0.76.221) (Ping timeout: 240 seconds)
[20:57:51] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:58:13] *** Quits: jay-m126_ (~jay-m@129.0.76.221) (Ping timeout: 240 seconds)
[20:58:37] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 240 seconds)
[20:58:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:58:49] *** Quits: onichomp (~onichomp@2806:264:4404:8093:44d3:7cdf:f19c:4f11) (Read error: Connection reset by peer)
[20:58:59] *** Joins: jay-m126 (~jay-m@154.72.150.193)
[20:59:07] *** Quits: jay-m1261 (~jay-m@129.0.76.221) (Ping timeout: 268 seconds)
[20:59:14] *** Joins: jay-m126_ (~jay-m@154.72.150.193)
[20:59:22] *** Joins: jay-m1261 (~jay-m@154.72.150.193)
[20:59:28] *** Joins: onichomp (~onichomp@2806:264:4404:8093:44d3:7cdf:f19c:4f11)
[20:59:39] *** Quits: kronicmage (user91577@neotame.csclub.uwaterloo.ca) (Ping timeout: 252 seconds)
[21:01:04] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[21:02:00] *** Joins: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net)
[21:03:27] *** Joins: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f)
[21:03:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[21:04:07] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[21:04:25] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:04:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:04:49] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 256 seconds)
[21:06:46] *** Joins: emf (~emf@2620:10d:c091:480::1:102a)
[21:07:25] *** Quits: delvian (~delvian@41.13.192.207) (Ping timeout: 240 seconds)
[21:08:13] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 256 seconds)
[21:08:39] *** Quits: ca1f (~calf@user/ca1f) (Quit: Leaving)
[21:09:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[21:10:13] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 240 seconds)
[21:10:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:10:33] *** Joins: cdown (~cdown@188.214.11.14)
[21:10:53] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:10:55] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[21:10:55] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[21:12:08] *** Joins: emf_ (~emf@2620:10d:c091:480::1:102a)
[21:12:10] *** Quits: thevishy (~Nishant@2405:201:f005:c007:a5d7:38b:39cd:e2ae) (Quit: Leaving)
[21:12:37] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[21:13:13] *** Quits: emf (~emf@2620:10d:c091:480::1:102a) (Ping timeout: 252 seconds)
[21:13:13] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[21:13:57] *** Quits: onichomp (~onichomp@2806:264:4404:8093:44d3:7cdf:f19c:4f11) (Remote host closed the connection)
[21:14:02] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[21:14:13] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Ping timeout: 240 seconds)
[21:14:16] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[21:14:39] *** Joins: onichomp (~onichomp@2806:264:4404:8093:44d3:7cdf:f19c:4f11)
[21:15:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:16:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:17:03] *** Joins: junebug (~junebug@2600:1700:3db0:2540:95cd:d15a:280f:949a)
[21:18:38] *** Quits: jpic (~jpic@pop.92-184-98-69.mobile.abo.orange.fr) (Remote host closed the connection)
[21:20:02] <leitz> Do you need to use deepcopy on a dict, if the values are base types like strings and ints?
[21:20:11] *** Joins: rany_ (~rany@user/rany)
[21:20:28] <Wooble> arguably you never "need" to use deepcopy.
[21:20:54] <Wooble> but sure, if the values are all immutable, you can't accidentally mutate them
[21:21:01] <phox> ^
[21:21:39] *** Quits: junebug (~junebug@2600:1700:3db0:2540:95cd:d15a:280f:949a) (Ping timeout: 252 seconds)
[21:21:40] <BinarySavior> for pandas dataframe duplicated, the docs are unclear with behavior of `subset` argument.  For a subset with more than 1 column, does duplicated drop rows with duplicates found in ALL columns or in ANY columns?
[21:21:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[21:22:01] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[21:22:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:22:41] <phox> BinarySavior: Should be duplicates where all of the values in subset columns are identical
[21:22:49] <phox> so any differentiation between them = not dropped
[21:23:02] *** Joins: BlueSky__ (~BlueSky@user/bluesky)
[21:23:30] <phox> i.e. requires a full match otherwise it's not a "duplicate"
[21:23:33] *** Quits: rany (~rany@user/rany) (Ping timeout: 276 seconds)
[21:23:37] *** Joins: Trieste (T@user/pilgrim)
[21:23:53] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[21:24:01] <leitz> I don't know who wrote "enumerate" and who all put json in the stdlib, but I'm a happy camper...
[21:25:47] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Ping timeout: 256 seconds)
[21:25:54] <greentree> perhaps not necessarily python specific (a little more towards aws) but is there a simple way to package up a python program in a zip with dependencies etc
[21:26:14] <greentree> i guess some combination of venv
[21:26:22] *** dcaro is now known as dcaro_away
[21:26:22] <grym> greentree: shiv
[21:26:24] <SnoopJ> greentree, there's the `zipapp` stdlib module if you don't have external dependencies, and the tool `shiv` if you do
[21:26:24] <greentree> noticed something like this: https://github.com/eabglobal/juniper
[21:26:40] <Wooble> (or pex, maybe?)
[21:27:06] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[21:27:22] <greentree> https://github.com/linkedin/shiv
[21:27:23] <greentree> this?
[21:27:27] <SnoopJ> yes
[21:27:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:27:44] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:27:55] <grym> greentree: your deploy target will need to have the right version of a python interpreter installed with shiv/pex/zipapp
[21:27:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:28:15] <han-solo> "docker"
[21:28:15] <greentree> wdym
[21:28:33] <phox> <how-docker-was-born.jpg>
[21:28:45] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[21:28:57] <SnoopJ> greentree, these options all produce a Python program, which still needs an interpreter to run.
[21:29:09] *** Joins: a0z1 (~a0z1@185.213.155.232)
[21:29:09] <SnoopJ> If your target environment doesn't have an interpreter, you might want to look at PyInstaller instead
[21:29:40] <greentree> does shiv specifically generate a .pyz file? or an actual zip file
[21:29:53] *** Joins: legola (~legola@46.235.101.65)
[21:30:19] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.30) (Ping timeout: 256 seconds)
[21:30:30] <SnoopJ> greentree, it generates a zipapp, yes. The output filename is arbitrary
[21:30:48] *** Joins: schmoee (~schmoee@2601:84:4501:6440:21e8:6f7b:eba2:d34)
[21:31:01] *** Quits: jay-m1261 (~jay-m@154.72.150.193) (Ping timeout: 240 seconds)
[21:31:27] *** Quits: jay-m126_ (~jay-m@154.72.150.193) (Ping timeout: 256 seconds)
[21:31:33] <SnoopJ> It's roughly a zip file that the Python interpreter can execute, if you're interested in the details, read PEP 441 https://www.python.org/dev/peps/pep-0441
[21:31:59] *** Quits: jay-m126 (~jay-m@154.72.150.193) (Ping timeout: 265 seconds)
[21:32:06] *** Joins: monkey_ (~user@181.114.17.106)
[21:32:57] *** Joins: jay-m126 (~jay-m@129.0.76.174)
[21:33:09] *** Joins: jay-m126_ (~jay-m@129.0.76.174)
[21:34:24] *** Quits: legola (~legola@46.235.101.65) (Ping timeout: 265 seconds)
[21:34:28] *** Joins: Burger (~textual@user/burger)
[21:35:39] <phox> Ok, looking for a more complete understanding of setup.py (__init__.py)s requirements.txt etc and conventions/capabilities and why.  hoped HHGTP would be useful here but it seems to fall somewhat short--succinct doc/tutorial/whatever suggestions?
[21:36:44] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[21:36:51] *** Joins: Trieste_ (T@user/pilgrim)
[21:37:12] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[21:37:14] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[21:37:14] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[21:37:14] *** finn_elija is now known as FinnElija
[21:37:28] <phox> Is the example halfway down https://the-hitchhikers-guide-to-packaging.readthedocs.io/en/latest/creation.html basically *complete*?  Seems clear what it does but not clear if there's anything else it should/could ever do/include.
[21:37:47] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 252 seconds)
[21:39:21] *** Joins: jay-m1261 (~jay-m@129.0.76.174)
[21:40:14] *** Trieste_ is now known as Trieste
[21:40:17] *** Quits: magla (~gelignite@55d44df1.access.ecotel.net) (Quit: Stay safe!)
[21:41:58] <BinarySavior> is there a way to configure python to throw exception when receiving SettingWithCopyWarning from Pandas?
[21:42:25] *** Joins: alex11 (~alex11@user/alex11)
[21:42:26] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[21:42:37] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 240 seconds)
[21:42:47] *** Joins: paravida (~myChateau@user/paravida)
[21:43:35] *** Quits: jay-m126 (~jay-m@129.0.76.174) (Ping timeout: 265 seconds)
[21:43:37] <Wooble> BinarySavior: see the warnings module.
[21:43:55] *** Quits: jay-m1261 (~jay-m@129.0.76.174) (Ping timeout: 256 seconds)
[21:44:02] <Wooble> (the answer is certainly "yes" but I don't know off the top of my head the arcane way to express that :) )
[21:44:12] *** Joins: jay-m126 (~jay-m@154.72.150.193)
[21:44:23] *** Joins: tobybl (~tobybl@213.31.132.232)
[21:44:40] *** Quits: menace (~someone@user/menace) (Read error: Connection reset by peer)
[21:44:53] <BinarySavior> haha, i can't figure out where in my code this is happening, i figured it might be easier to use pycharm debugger but i need it to throw an exception for that
[21:44:57] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[21:44:59] <BinarySavior> i will look into warnings module
[21:45:31] *** Joins: jay-m1261 (~jay-m@154.72.150.193)
[21:47:26] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[21:47:27] <Wooble> BinarySavior: you might be able to just set a breakpoint in pandas itself in pycharm
[21:47:56] *** Joins: botfather (~botfather@shell2.dds.nl)
[21:47:58] <Wooble> (assuming it doesn't throw that warning from a ton of places, making it hard to find :) )
[21:48:19] <BinarySavior> it only throws a warning once but it's not in my code
[21:48:21] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:dbe1)
[21:48:24] <BinarySavior> it's in pandas core
[21:48:47] <Wooble> yeah, I think pycharm is fine with you just opening whatever file in pandas is doing that and put the breakpoint there.
[21:49:12] *** Parts: NyaaTheKitten (~CalculusC@user/calculuscat) (Channel connection terminated)
[21:49:23] *** Quits: jay-m126_ (~jay-m@129.0.76.174) (Ping timeout: 265 seconds)
[21:49:42] *** Joins: matsaman (~matsaman@user/matsaman)
[21:50:21] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 265 seconds)
[21:50:50] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[21:51:01] *** Joins: jay-m126_ (~jay-m@154.72.150.193)
[21:51:48] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[21:52:18] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[21:52:48] *** Joins: ampersam (~ampersam@74-84-123-118.client.mchsi.com)
[21:53:16] <BinarySavior> ahh okay, then i can just select the frame corresponding to my code
[21:53:52] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[21:53:56] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Client Quit)
[21:54:24] *** Joins: dgdg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[21:54:37] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[21:54:40] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:54:51] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[21:57:02] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 252 seconds)
[21:58:05] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 265 seconds)
[21:58:38] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[21:59:03] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 265 seconds)
[21:59:25] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[21:59:26] *** Joins: moldorcoder7 (~moldorcod@77.47.48.24)
[22:00:38] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[22:01:05] *** Quits: tobybl (~tobybl@213.31.132.232) (Remote host closed the connection)
[22:02:40] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[22:03:05] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[22:05:12] *** Joins: ianliu (~ianliu@177.188.85.182)
[22:05:20] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[22:05:20] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 265 seconds)
[22:06:09] *** Joins: grooverman (~grooverma@177.102.119.40)
[22:06:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[22:07:00] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[22:07:09] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[22:08:14] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Ping timeout: 265 seconds)
[22:08:20] *** Joins: guenhael (~Thunderbi@aaubervilliers-652-1-290-168.w82-121.abo.wanadoo.fr)
[22:08:33] *** Joins: fikran (~fikran@user/fikran)
[22:09:05] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[22:09:12] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 265 seconds)
[22:11:39] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[22:12:35] *** Quits: Elzington (~Elzington@static-68-235-44-57.cust.tzulo.com) (Quit: Leaving)
[22:12:54] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[22:13:13] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[22:14:45] *** Joins: Naan` (~Naan@user/naan)
[22:16:49] *** Quits: cr0n0s (~quassel@181.66.138.161) (Ping timeout: 268 seconds)
[22:17:16] *** Joins: cr0n0s (~quassel@181.66.138.161)
[22:18:13] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[22:18:23] *** Quits: naan (~Naan@user/naan) (Ping timeout: 265 seconds)
[22:18:47] *** Joins: goldfish (~goldfish@user/goldfish)
[22:19:17] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 268 seconds)
[22:20:32] *** Joins: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net)
[22:20:37] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 240 seconds)
[22:21:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[22:22:11] *** Quits: goldfish (~goldfish@user/goldfish) (Read error: Connection reset by peer)
[22:22:39] *** Joins: goldfish (~goldfish@user/goldfish)
[22:22:59] *** Quits: cslr (~cslr@85-76-34-233-nat.elisa-mobile.fi) (Remote host closed the connection)
[22:24:12] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:24:27] *** Joins: magla (~gelignite@55d40eb7.access.ecotel.net)
[22:24:39] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[22:26:37] *** Quits: jay-m126_ (~jay-m@154.72.150.193) (Ping timeout: 240 seconds)
[22:27:25] *** Quits: jay-m126 (~jay-m@154.72.150.193) (Ping timeout: 240 seconds)
[22:27:34] *** Quits: jay-m1261 (~jay-m@154.72.150.193) (Ping timeout: 265 seconds)
[22:28:48] *** Joins: jay-m126 (~jay-m@129.0.76.174)
[22:28:50] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.28)
[22:29:01] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 240 seconds)
[22:29:28] *** Joins: jay-m126_ (~jay-m@129.0.76.174)
[22:29:30] *** Quits: moldorcoder7 (~moldorcod@77.47.48.24) (Ping timeout: 265 seconds)
[22:29:31] *** Joins: jay-m1261 (~jay-m@129.0.76.174)
[22:29:46] *** Joins: bam32_ (~bambams@user/bambams)
[22:29:59] *** Joins: ska (~ska@user/ska)
[22:31:09] <ska> What do you use when you have a set of python and non-python projects that need to be bound inside a superproject? We use git for our scm, but I don't want to use subtrees really.
[22:31:24] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[22:32:23] <han-solo> we have a monorepo at work, i hate it
[22:32:50] <CodeMouse92> ska: Subtrees really are the best way to go.
[22:32:54] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:33:00] <CodeMouse92> That is, if you HAVE to monorepo.
[22:33:23] *** Joins: luva4 (~luva@37.120.197.46)
[22:34:01] <grym> they're still a bag of pain though
[22:34:14] *** Joins: audio (~audio@user/audio)
[22:35:21] *** Quits: jay-m126 (~jay-m@129.0.76.174) (Ping timeout: 252 seconds)
[22:35:43] *** Quits: jay-m126_ (~jay-m@129.0.76.174) (Ping timeout: 252 seconds)
[22:35:47] *** Quits: hendry (~hendry@210.23.22.2) (Ping timeout: 265 seconds)
[22:36:05] *** Quits: jay-m1261 (~jay-m@129.0.76.174) (Ping timeout: 252 seconds)
[22:36:36] <ska> What about Gradle?
[22:36:49] *** Quits: luva (~luva@37.120.197.52) (Ping timeout: 252 seconds)
[22:36:49] *** luva4 is now known as luva
[22:37:06] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Quit: Leaving)
[22:37:15] *** Joins: jay-m126 (~jay-m@154.72.150.193)
[22:37:33] *** Joins: hendry (~hendry@210.23.22.8)
[22:37:50] *** Joins: jay-m126_ (~jay-m@154.72.150.193)
[22:37:52] <ska> We sorta want to maintain a master superproject dependency spec file that we can use both for 1) build 2) documenation (maybe they should be integrated).
[22:37:56] *** Joins: jay-m1261 (~jay-m@154.72.150.193)
[22:38:04] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[22:38:10] *** Quits: ffledgling (~textual@2620:10d:c090:400::5:dbe1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:38:37] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 240 seconds)
[22:38:56] <ska> We really want to manage our repos separately.
[22:38:58] <SnoopJ> It doesn't count Python among in its official tally of supported languages, notably
[22:39:13] <grym> ska: then manage them separately
[22:39:39] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 265 seconds)
[22:39:56] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:c870:8794:fd7d:9084) (Quit: Textual IRC Client: www.textualapp.com)
[22:40:28] *** Quits: Burger (~textual@user/burger) (Quit: Textual IRC Client: www.textualapp.com)
[22:40:29] *** Quits: odoood (~odoood@2601:c8:c003:a550:fbdc:f2fe:53fa:f37f) (Ping timeout: 252 seconds)
[22:40:46] *** Joins: Andrynet (~Andrynet@186.46.207.115)
[22:41:11] *** Quits: alius (~adrien@2a01:e0a:13c:cd90:c977:5b1c:470e:ad38) (Quit: Konversation terminated!)
[22:43:26] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:45:04] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:46:14] *** Joins: Trieste (~T@user/pilgrim)
[22:46:51] *** Joins: Linux77 (~7Linux7@186.233.182.193)
[22:47:13] *** Joins: Haxxa (~Haxxa@202-144-160-174.ip4.superloop.com)
[22:47:15] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[22:47:23] *** Quits: Andrynet (~Andrynet@186.46.207.115) (Ping timeout: 265 seconds)
[22:47:25] *** Quits: jay-m126 (~jay-m@154.72.150.193) (Ping timeout: 240 seconds)
[22:47:39] *** Quits: jay-m1261 (~jay-m@154.72.150.193) (Ping timeout: 268 seconds)
[22:47:39] *** Quits: jay-m126_ (~jay-m@154.72.150.193) (Ping timeout: 268 seconds)
[22:47:54] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:441e:776a:ec96:c68c)
[22:50:13] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[22:50:46] *** Joins: Andrynet (~Andrynet@181.113.97.27)
[22:50:50] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[22:54:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:58:01] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 265 seconds)
[22:58:27] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[22:58:55] *** Quits: nomic (~nomic@185.217.117.220) (Quit: Leaving)
[22:59:01] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[22:59:28] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 265 seconds)
[22:59:29] *** Joins: foxbox (~cammy@user/cammy)
[22:59:33] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:00:20] *** Joins: bam32__ (~bambams@user/bambams)
[23:01:54] <deniska> Is there something analogous to SAX, but for writing XML out? Or, in fact, something which can be plugged into a SAX-style parser? I see this https://lxml.de/api.html#incremental-xml-generation but I don't see a non-hacky way of doing something like this in a SAX parser
[23:03:13] *** Quits: bam32_ (~bambams@user/bambams) (Ping timeout: 252 seconds)
[23:03:15] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[23:05:01] <deniska> (And I don't feel like doing stuff like `f.write(f'<\{tag}>')` even though it seems like the most straightforward solution)
[23:05:42] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[23:06:26] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[23:06:55] *** Joins: alchzh|2 (~kvirc@dyn-160-39-252-88.dyn.columbia.edu)
[23:07:13] *** Quits: jdmark (~jdmark@user/jdmark) (Ping timeout: 256 seconds)
[23:08:41] *** Quits: fulljab (~fulljab@paloboi.student.rit.edu) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:10:29] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[23:12:31] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[23:13:10] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[23:13:22] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:ad12:63d3:cdb6:3c28)
[23:14:01] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 256 seconds)
[23:14:46] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[23:15:14] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: leaving)
[23:15:25] <zen_coder> I am using argparse, however I have on argument where I would like to forward an argument like this:
[23:15:27] <zen_coder> --forwarded-args "-v /tmp/ssh-z7FsdfdsfdsfSRZ3P:/tmp/ssh-z7sdfsdrf3RZ3P -e Foo=/tmp/ssh-z7FsdfZ3P/ag.123346"
[23:15:41] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[23:15:41] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 252 seconds)
[23:15:42] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[23:16:02] <zen_coder> I get following error: "error: unrecognized arguments: -e Foo..."
[23:16:26] <kevr> use \-v
[23:16:31] <kevr> it's a shell globbing issue
[23:16:43] <kevr> and \-e
[23:17:25] *** Quits: luigibu1 (~luigibu@80.30.201.209) (Ping timeout: 240 seconds)
[23:17:53] <kevr> it has nothing to do with argparse, the same issue occurs with getopt in c
[23:18:02] <kevr> it's how the shell is presenting your arguments to the program
[23:18:48] *** Joins: cheater (~Username@user/cheater)
[23:19:12] <zen_coder> ah okay, thanks
[23:19:37] *** Quits: runlevel_0 (~nyarlatho@user/runlevel-0/x-6929182) (Ping timeout: 256 seconds)
[23:19:38] *** Quits: Bpillman (~Guest10@ip70-179-135-215.fv.ks.cox.net) (Ping timeout: 256 seconds)
[23:20:12] <kevgao> the blank between strings is the problem, you might use eoc to embed this string
[23:20:41] <kevgao> https://unix.stackexchange.com/questions/360800/what-does-eoc-means
[23:21:19] *** pizzaiolo is now known as pizza
[23:21:24] *** Quits: dba_ (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[23:22:46] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:22:47] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[23:23:08] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[23:23:25] *** Quits: Andrynet (~Andrynet@181.113.97.27) (Ping timeout: 268 seconds)
[23:23:40] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[23:23:42] *** Joins: d00gy (~d00gy@user/d00gy)
[23:23:58] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[23:24:36] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 265 seconds)
[23:24:45] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[23:25:10] *** Joins: Andrynet (~Andrynet@181.113.97.27)
[23:25:46] <kevr> zen_coder: you could just use shlex.quote to shell escape the string
[23:26:02] <kevr> internally before you process it
[23:26:03] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 265 seconds)
[23:26:16] *** Joins: jay-m126 (~jay-m@129.0.76.174)
[23:26:33] *** Joins: dohtem (uid524096@user/dohtem)
[23:26:38] *** Joins: jay-m126_ (~jay-m@129.0.76.174)
[23:26:39] *** Joins: jay-m1261 (~jay-m@129.0.76.174)
[23:26:47] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[23:27:16] *** Joins: luigibu1 (~luigibu@80.30.201.209)
[23:28:19] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[23:28:43] *** Joins: L0NDONER (~LLLkLLLL@host-78-149-10-182.as13285.net)
[23:29:18] <zen_coder> you mean here? args = parser.parse_args(shlex.quote(arg))
[23:29:22] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:29:45] *** Joins: delvian (~delvian@41.13.192.207)
[23:30:12] *** Quits: kurfen_ (~kurfen@160.238.38.230) (Quit: ZNC 1.8.2 - https://znc.in)
[23:30:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:31:22] *** Joins: junebug (~junebug@2600:1700:3db0:2540:9eac:dc64:c031:a3ec)
[23:31:44] *** Joins: kurfen (~kurfen@160.238.38.230)
[23:32:31] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:32:34] *** Joins: parv (~quass@user/parv)
[23:32:54] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[23:33:00] *** Joins: remolej (~kenoba@user/kenoba)
[23:34:16] <zen_coder> kevr: ?
[23:34:18] *** Joins: waynew (~wayne@user/waynew)
[23:35:11] <kevr> I don't know, I never saw your code.
[23:35:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[23:35:26] <kevr> But you must be passing that --forwarded-args into a parse
[23:35:33] *** Joins: ffledgling (~textual@2620:10d:c090:500::1c1d)
[23:36:00] *** Joins: monkey_ (~user@181.114.17.106)
[23:36:02] *** Joins: kurfen_ (~kurfen@176.119.195.10)
[23:36:26] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:37:10] *** Quits: kurfen (~kurfen@160.238.38.230) (Ping timeout: 265 seconds)
[23:37:15] *** Quits: jay-m1261 (~jay-m@129.0.76.174) (Ping timeout: 256 seconds)
[23:37:15] *** Quits: jay-m126_ (~jay-m@129.0.76.174) (Ping timeout: 256 seconds)
[23:37:15] *** Quits: jay-m126 (~jay-m@129.0.76.174) (Ping timeout: 256 seconds)
[23:37:33] *** Quits: kurfen_ (~kurfen@176.119.195.10) (Client Quit)
[23:37:50] *** Joins: jay-m126 (~jay-m@154.72.150.193)
[23:38:07] *** Joins: kurfen (~kurfen@176.119.195.10)
[23:38:18] *** Joins: jay-m126_ (~jay-m@154.72.150.193)
[23:40:42] *** Joins: fulljab (~fulljab@paloboi.student.rit.edu)
[23:40:55] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[23:40:59] *** Quits: cr0n0s (~quassel@181.66.138.161) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:41:03] *** Joins: TML (~tml@user/tml)
[23:41:03] <L0NDONER> Total n00b just started learning... How do I go about joining line 12, 14 and 18 on one line or is this bad practice >>> https://bpa.st/FQJA
[23:42:07] <supakeen> I don't think it'd make it clearer if you did :)
[23:42:27] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[23:42:29] <TML> L0NDONER: Well, line 12 appears to be a comment, while lines 14 and 18 are calls to input() - are you saying you want to comment out lines 14 and 18?
[23:42:33] *** Quits: NyaaTheKitten (~CalculusC@user/calculuscat) (Read error: Connection reset by peer)
[23:42:39] <L0NDONER> yea looked away and came back I actually preffer it as is
[23:42:55] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[23:42:56] *** Joins: jay-m1261 (~jay-m@154.72.150.193)
[23:43:21] <supakeen> If you really wish one could write `a, b, c = input(...), input(...), input(...)` but then you just end up with an unreadably long line for no particular reason.
[23:44:03] <L0NDONER> no just for fun  all inputs on one line  but I now dont want that I preffer as is. its clear what I am doing  so I can leave as it is
[23:44:59] <deniska> you can ask a single input for a string in yyyy-mm-dd format
[23:45:11] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[23:45:15] <deniska> but then some may enter mm/dd/yyyy instead
[23:45:25] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[23:45:33] <deniska> or dd.mm.yyyy or some other insanity
[23:45:45] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[23:45:47] *** Joins: FluffyMask (~masque@user/fluffymask)
[23:46:17] *** Joins: pwnd_sfw2 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[23:46:26] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[23:46:30] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[23:46:30] *** pwnd_sfw2 is now known as pwnd_sfw
[23:46:35] *** Joins: mactron (~mactron@APN-123-252-197-gprs.simobil.net)
[23:47:59] <L0NDONER> Thanks for help :)
[23:48:02] *** Quits: L0NDONER (~LLLkLLLL@host-78-149-10-182.as13285.net) (Quit: Leaving)
[23:50:06] *** Quits: grooverman (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[23:50:31] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 252 seconds)
[23:51:06] *** Joins: grooverman (~grooverma@177.102.119.40)
[23:51:35] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[23:52:24] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[23:52:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:54:34] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 265 seconds)
[23:55:44] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[23:56:37] <SymbioticFemale> whats the best IDE for debian based programming? i never used an ide before but i saw Python Charm in a video and i was like "huh maybe i should get an IDE"
[23:56:46] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[23:56:57] <SymbioticFemale> something lightweight that can suggest completion but doesn't need to have any more features than that
[23:57:58] <deniska> "suggest completion" is a wide range
[23:58:32] <deniska> vim comes with a fairly dumb completion ouf of the box, just suggesting words from currenly open buffers
[23:59:01] <deniska> but in some sense it's even better because it will suggest keys from open json files and stuff
[23:59:38] <deniska> (also, vim is a fairly niche and weird text editor, not a suggestion)
[23:59:51] <deniska> (but you can always try…_
[23:59:53] <deniska> )
