[00:00:11] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[00:00:16] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.114) (Ping timeout: 258 seconds)
[00:01:02] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:dd3c:edaa:fc36:fbd2) (Ping timeout: 258 seconds)
[00:01:24] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[00:01:48] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:1493:30d8:77ef:95ff) (Ping timeout: 258 seconds)
[00:02:01] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.122)
[00:02:17] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Read error: Connection reset by peer)
[00:02:25] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.122) (Client Quit)
[00:02:44] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[00:05:31] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com)
[00:06:27] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:80f3:9e2d:a820:761f)
[00:07:50] *** Quits: dan01 (~dan01@2a02:2f09:3c05:ca00:6c85:3a2c:f47a:1e3d) (Read error: Connection reset by peer)
[00:09:35] <andlabs_> seebs: no the other thing
[00:10:11] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-f47e-a571-bfa2-b984.inf6.spectrum.com) (Ping timeout: 265 seconds)
[00:10:13] <seebs> which other thing? i might have missed this.
[00:10:34] *** Quits: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de) (Quit: Leaving)
[00:11:26] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[00:12:47] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[00:13:00] <andlabs_> the 'standards' one
[00:13:22] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[00:15:39] <seebs> i think the golang-standards thing has been around long enough to be hard to do anything about effectively now, even though it's still annoying-at-best.
[00:16:14] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:1493:30d8:77ef:95ff)
[00:16:16] <andlabs_> though I am also reminded of the intiial rush to write books
[00:18:11] *** Joins: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[00:18:14] <b0nn> gopls v0.7.3 has just been released
[00:19:47] <attila_lendvai> hi! i'm not very experienced in go, but working on a go importer for guix. there's this /v2 thingy in the go modules' url, and some go modules are in a subdirectory in a repository of many modules... now, how do these two interact with each other? is it possible to have a module in a subdir, plus have a /v2 at the end?
[00:22:08] <dostoyevsky2> b0nn: I just edit my go files in vim without any language support, not even syntax highlighting... I guess I am weird
[00:22:46] <b0nn> attila_lendvai: have you seen https://golang.org/doc/modules/release-workflow
[00:22:59] * attila_lendvai looks
[00:23:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[00:23:36] <b0nn> dostoyevsky2: gopls replaces ctags for me, and brings with it fancy pants stuff like mouseover providing signatures and exported stuff
[00:23:54] <b0nn> attila_lendvai: specifically "Publishing breaking API changes"
[00:25:07] *** Joins: mikey__ (mikey__@user/mikey/x-6463285)
[00:25:19] *** Joins: fikran (~fikran@user/fikran)
[00:26:11] <attila_lendvai> b0nn, doesn't seem to answer this specifically. but it makes me suspect that the /v2 postfix comes unconditionally, i.e. it's just an addition to any possible module subdirs
[00:27:19] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[00:27:23] <attila_lendvai> looks so weird... this is the example i'm working with: https://github.com/holiman/bloomfilter
[00:29:01] <attila_lendvai> and then some other projects don't have a subdir: https://github.com/google/go-github
[00:29:05] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[00:29:14] <attila_lendvai> this will be a real PITA to deal with...
[00:30:00] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[00:30:22] <b0nn> Yeah - Modules has been awkward
[00:30:57] <b0nn> Not, I hasten to point out, that anyone has got it right yet (java's maven and gradle are horrid)
[00:34:09] <fizzie> Yes, you should be able to have both a version suffix *and* a module in a subdirectory.
[00:34:29] <fizzie> https://golang.org/ref/mod#vcs-dir is reasonably explicit about that: "Recall that a module path consists of three parts: a repository root path (corresponding to the repository root directory), a module subdirectory, and a major version suffix (only for modules released at v2 or higher)."
[00:35:04] <fizzie> (The module subdirectory is optional, and most things just have their one and only go.mod file at the repository root.)
[00:37:52] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:39:50] <fizzie> For modules with major versions >1, you also get to choose whether you want the `vX` in the import path to be a physical directory or not. Not having it feels more natural to me, but making it a real directory does allow for some amount of backwards compatibility with legacy GOPATH style development.
[00:41:39] <dostoyevsky2> Is it actually common to hack the go compiler for fun?  The more I read the code the more I just realized how go has the easiest compiler to code to make adjustments to, and maybe base other languages on it... or just add some features for fun
[00:42:23] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 264 seconds)
[00:42:57] <attila_lendvai> fizzie, thank you! i'm making notes. this may be navigable... so, if it's at v[major-version].x.y then the module path must have a /v[major-version] suffix, right?
[00:44:02] <b0nn> dostoyevsky2: depending on what your background is - there are a couple of books that will "Paint by numbers" a simple interpreter and compiler in Go https://interpreterbook.com/
[00:44:15] <b0nn> and https://compilerbook.com/
[00:44:16] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:1493:30d8:77ef:95ff) (Ping timeout: 245 seconds)
[00:45:36] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1008)
[00:45:38] <fizzie> attila_lendvai: Yes. Or the other way around -- if you import "example.com/foo/v2" and don't specify a version manually, the version selection in something like `go mod tidy` will try to find the highest tag matching "v2.x.y".
[00:47:09] <fizzie> https://golang.org/ref/mod#vcs-branch "-- for example, the tag v1.5.2 would not be considered for example.com/mod/v2 since the major version doesn’t match the module path’s suffix."
[00:47:21] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:47:26] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:1493:30d8:77ef:95ff)
[00:51:20] <fizzie> When it comes to looking up the source code of "example.com/mod/v2", though, in the repository corresponding to "example.com/mod", in the commit tagged v2.x.y, you can root the module either at /go.mod or at /v2/go.mod. I imagine the latter takes priority, since one benefit (arguable) of using a real directory for the major version is that you can have all the major versions present in the same
[00:51:22] <fizzie> branch at once.
[00:55:09] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[00:56:14] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 258 seconds)
[00:56:43] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:57:33] <attila_lendvai> translating that all into this codebase that i have inherited and i'm trying to facelift... makes me dizzy.
[00:58:27] <fizzie> Your bloomfilter example seems to follow that scheme, since it clearly has a /go.mod for "github.com/holiman/bloomfilter" (the v1) and a /v2/go.mod for "github.com/holiman/bloomfilter/v2". Though it seems to have dropped all the actual v1 *code*, so I don't know what exactly it's benefiting from having a v2 directory.
[00:58:47] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[00:59:07] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-71a5-6849-e6bb-8258.inf6.spectrum.com)
[00:59:26] <fizzie> Guess it might be convenient for any completely module-unaware tools that might still be around, who would expect to find the code for an "github.com/holiman/bloomfilter/v2" import unconditionally in GOPATH/src/github.com/holiman/bloomfilter/v2/*.go.
[01:00:15] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[01:01:38] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:1493:30d8:77ef:95ff) (Quit: WeeChat 3.3)
[01:02:47] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:80f3:9e2d:a820:761f) (Ping timeout: 268 seconds)
[01:03:12] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[01:03:35] *** Joins: c10l (~c10l@user/c10l)
[01:08:46] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:10:00] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1008) (Quit: ZNC 1.8.2 - https://znc.in)
[01:20:00] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 258 seconds)
[01:23:19] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[01:32:14] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com)
[01:32:19] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:33:14] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[01:35:47] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 264 seconds)
[01:40:17] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:40:36] *** Joins: mickey8 (~user@user/mickey)
[01:42:13] *** Joins: ItsNotGoodName7 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net)
[01:43:35] *** Quits: ItsNotGoodName (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[01:43:35] *** ItsNotGoodName7 is now known as ItsNotGoodName
[01:46:40] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[01:46:58] *** Joins: rcernin (~rcernin@124.190.139.235)
[01:47:13] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 258 seconds)
[01:57:13] *** Joins: ItsNotGoodName1 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net)
[01:57:59] *** Quits: ItsNotGoodName (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[01:57:59] *** ItsNotGoodName1 is now known as ItsNotGoodName
[02:00:17] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[02:02:56] <krux02> has anybody experience with writing firefox marionette commands?
[02:03:26] <krux02> I would like to control a firefox instance from go, Specifically, I would like to control where it navigates to.
[02:04:00] *** Quits: dza (~dza@user/dza) (Read error: Connection reset by peer)
[02:04:30] <krux02> unfortunately, with the command line interface of firefox, I can open urls, but eatch time in a new tab and therefore in a way that quickly eats up all my ram
[02:05:02] <krux02> Then I found out about firefox marionette, which I think should make it possible to specify more precisely where the browser should go.
[02:05:08] <krux02> but somehow I can't get it working at all.
[02:05:50] <krux02> The documentation is all over the place and mixing up all these Terminology that I just don't understand (I am no web developer)
[02:05:57] <b0nn> krux02: look at selenium?
[02:06:13] <krux02> yea, Ive looked at selenium.
[02:06:18] <b0nn> not sure if it has Go bindings though
[02:06:31] <krux02> what I understand is, it is just a middle man that I can also just remove from the equation.
[02:06:58] <krux02> a middle man written in java, that causes very slow startup times and eats up all my memory.
[02:07:51] <krux02> as far as I know, all I need is a way to sand javascript on a port to the browser, and most importantly, a specification of commands that I can send that way.
[02:08:06] <krux02> I do't really need bindings for that, do I?
[02:08:24] <krux02> bindings are nice, but not necessary
[02:09:03] <krux02> https://firefox-source-docs.mozilla.org/testing/marionette/Intro.html
[02:09:42] <krux02> https://firefox-source-docs.mozilla.org/testing/marionette/Protocol.html#command
[02:10:01] <krux02> BIG PROBLEM: there is no specification of the commands that I can send.
[02:10:34] <krux02> it just specifies how I layout commands in json, the end.
[02:10:50] <krux02> or I am just too stupid to read documentation.
[02:11:16] <b0nn> think these questions are better directed at a firefox/mozilla channel
[02:11:18] <krux02> b0nn, off topic question, why is your username b0nn, do you live in Bonn?
[02:11:30] <b0nn> I mean, they're specific to ff/moz and not really go
[02:11:31] <krux02> b0nn, I did ask there, but they can't help
[02:11:38] <b0nn> ok
[02:11:42] <krux02> but you are right,
[02:12:05] *** Joins: ItsNotGoodName4 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net)
[02:12:13] <b0nn> as for my nick, 16 odd years ago I had to be creative, and so I used the name of my (then) fav singer, and misspelled it (Bon Scott)
[02:12:20] *** Quits: ItsNotGoodName (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[02:12:20] *** ItsNotGoodName4 is now known as ItsNotGoodName
[02:12:36] <b0nn> My geography knowledge was sorely lacking
[02:12:46] <krux02>  I thought I might ask here, since I am a bit active here as well, and go is a language for web development, and marionette is for web testing, and a marionette client in go would make absolutely sense for tests (I think)
[02:13:20] <b0nn> I think that mozilla has its own IRC server don't they?
[02:13:25] <krux02> I don't even know Bon Scott, but I do live in Bonn
[02:13:30] <krux02> greetings from Bonn
[02:13:39] <b0nn> heh
[02:14:13] <krux02> there is a firefox channel that I just entered, I did not check if it was official or something
[02:16:27] <rewt> krux02, does it have to be firefox, or can it be chrome?
[02:17:21] <Awoobis> b0nn: had.
[02:17:42] <krux02> rewt, generally it could be chromium as well, but for some reason everything chromium based just segfaults on this computer since an update a few months ago
[02:18:20] <krux02> rewt, but go on, maybe I will just dump this very very old laptop
[02:18:49] <krux02> rewt, do you have any chromium solutions?
[02:18:51] <rewt> ah... i was going to suggest using chromedriver (webdriver for chrome), which you can send commands to directly (JSON API), or use something like https://github.com/tebeka/selenium -- it says selenium, but you don't need actual selenium
[02:19:18] *** Joins: brainfreeze (~brainfree@2a03:1b20:4:f011::20d)
[02:19:35] <rewt> the webdriver protocol is spec'd here:  https://www.w3.org/TR/webdriver/
[02:21:23] *** Quits: stmuk_ (~steve@15.43.187.81.in-addr.arpa) (Ping timeout: 264 seconds)
[02:21:36] <rewt> hm, it says you can do Firefox via Geckodriver
[02:22:35] *** Joins: stmuk_ (~steve@15.43.187.81.in-addr.arpa)
[02:25:30] *** Parts: jasper_ (~user@styria.daemonized.org) ()
[02:25:41] <krux02> rewt, thank you for your help, but I am dying here, where are the examples?
[02:26:00] <krux02> I need a simple examples that just works
[02:27:17] *** Joins: ItsNotGoodName0 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net)
[02:27:59] *** Quits: ItsNotGoodName (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[02:27:59] *** ItsNotGoodName0 is now known as ItsNotGoodName
[02:29:05] *** Quits: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001) (Ping timeout: 246 seconds)
[02:29:31] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Ping timeout: 268 seconds)
[02:31:20] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[02:31:56] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:32:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[02:33:29] <rewt> there's an example at the top of the doc -- https://pkg.go.dev/github.com/tebeka/selenium#example-package -- skip the selenium service, and go down to NewRemote(); url should be something like http://localhost:9515/ for chromedriver (it says the port when it starts)
[02:34:40] *** Joins: fikran (~fikran@user/fikran)
[02:39:37] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[02:39:49] *** Quits: Kyros (~kyros@user/kyros) (Quit: ZNC 1.8.2 - https://znc.in)
[02:39:57] *** Joins: alzgh (~alzgh@user/alzgh)
[02:40:42] *** Joins: Kyros (~kyros@user/kyros)
[02:41:03] *** Quits: cfjk (~cfjk@user/cfjk) (Quit: Ping timeout (120 seconds))
[02:41:29] *** Joins: cfjk (~cfjk@user/cfjk)
[02:48:45] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[02:55:19] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[02:56:16] *** Joins: c10l (~c10l@user/c10l)
[02:57:16] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[02:57:41] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[02:58:07] *** Joins: Fossil (~Fossil@95.85.23.165)
[02:59:59] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:02:14] *** Joins: dza (~dza@user/dza)
[03:02:31] *** Quits: jjonah (~jjonah@p4fd3a593.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:06:44] *** Quits: omegatron (~some@p5b056a70.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[03:11:04] *** Joins: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt)
[03:16:29] <Tv_> if you're using chromedriver, most of selenium is pointless legacy baggage
[03:16:43] <Tv_> selenium is from the era when they had to play with frames and inject javascript to ages
[03:18:16] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[03:19:47] <Tv_> unfortunately most projects to make a good chromedriver client just rot away
[03:19:58] <Tv_> the intersection of web dev and quality libraries :-/
[03:21:38] <Tv_> krux02: also, https://pkg.go.dev/search?q=marionette&m= lists several
[03:22:05] <Tv_> *inject javascript to pages
[03:23:44] <Tv_> at a quick glance, https://pkg.go.dev/github.com/njasm/marionette_client is mostly tolerable but the timeout handling is pretty darn dumb
[03:24:46] <Tv_> and pkg.go.dev's search is horrible, it lists every single subpackage of what should have been a single hit or at least grouped together
[03:28:17] <krux02> rewt, I just tried to run it
[03:28:46] <krux02> it fails with: panic: error starting frame buffer: exec: "Xvfb": executable file not found in $PATH
[03:29:00] <krux02> I looked up what Xvfb is
[03:29:15] <krux02> it creates an INVISIBLE xserver
[03:29:20] <krux02> exactly what I don't want
[03:30:20] *** Joins: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net)
[03:31:00] <Tv_> chromedriver will run headless or headfull without any xvfb hackery
[03:31:43] <krux02> I don't judge xvfb hackery, but it is used to hide the browser
[03:31:58] <krux02> maybe useful for automated testing
[03:32:22] <krux02> but I want to remote control a normal browser so I can display information in it.
[03:33:51] <krux02> I am developing a programming language, and I think the best way to show documentation at location is in the browser. but I think constantly swtiching between the browser and the ide is annoying, the browser should automatically show the documentation for the symbol at cursor position
[03:34:20] <krux02> or maybe when I ask from the ide to show the documentation
[03:34:39] <krux02> but I don.- want to copy paste my code into google and then get false information on stack overflow
[03:34:58] *** Quits: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net) (Ping timeout: 260 seconds)
[03:35:05] <Tv_> most things people call ides can just show you the docs right there
[03:35:31] <krux02> Tv_, yes
[03:35:38] <krux02> one ro two lines
[03:35:40] <krux02> maybe 5
[03:35:47] <krux02> but where are the examples?
[03:35:54] <fizzie> In terms of the github.com/tebeka/selenium example, AFAICT you're just supposed to leave out the `selenium.StartFrameBuffer()` if you don't want to start a virtual framebuffer. (But I agree that getting Selenium involved isn't necessarily great.)
[03:36:27] <Tv_> krux02: sure, most IDEs haven't adjusted to a setting like Go where tests can be associated with identifiers
[03:37:27] <krux02> and I am writing my own programming language
[03:38:08] <krux02> pretty early stage right now, and I want to experiment with different ideas before I rush to implement all the features that make the languaeg indestinguishable from already existing languages.
[03:38:46] <krux02> I am writing the compiler in Go and I have to say, go is a good languaeg so far for this job
[03:39:20] <krux02> I am inspired by my shell
[03:39:39] <krux02> it has programmable completion and documentation when I press C-h
[03:40:04] <krux02> C-h opens documentation (man page) for the current command.
[03:40:18] <krux02> when I am done reading that, I am back at documenting my stuff
[03:40:34] <krux02> sorry, I am back at wrting my command
[03:40:57] <krux02> I want something similar in my programming language, wher the full documentation is opened in a browser.
[03:41:40] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[03:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[03:47:36] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[03:50:39] *** Quits: mikey__ (mikey__@user/mikey/x-6463285) (Ping timeout: 258 seconds)
[03:52:40] *** Joins: mikey__ (mikey__@user/mikey/x-6463285)
[03:56:22] *** Joins: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net)
[04:01:00] <b0nn> is it possible in Go to both delete and capture a substring?
[04:01:00] *** Quits: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net) (Ping timeout: 258 seconds)
[04:01:53] <b0nn> I have query =~ s/^<([^>]+)>\s*//) in Perl, which captures (the "()") and deletes (the "s///")
[04:03:24] *** Joins: dsrt^ (~dsrt@68.101.53.15)
[04:03:33] <Tv_> just match and do the removal yourself -- that regexp is easy, as it removes the whole thing
[04:13:42] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 260 seconds)
[04:13:52] <fizzie> Especially since the matching functions return not only the captured subexpressions, but also what the whole expression matched to, so you'll know exactly how much to trim.
[04:16:58] <fizzie> `if i := pattern.FindStringSubmatchIndex(query); len(i) == 4 { query, nick = query[i[0]:i[1]], query[i[2]:i[3]] }` if you wanted to be maybe a little too concise about it.
[04:18:22] *** Quits: mikey__ (mikey__@user/mikey/x-6463285) (Ping timeout: 260 seconds)
[04:19:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[04:19:24] *** Joins: oltuvok (~user@2804:1b2:183:26c9:e999:3a99:ad40:66a8)
[04:19:25] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:19:56] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[04:21:01] *** Joins: fikran (~fikran@user/fikran)
[04:29:47] *** Quits: mikey__ (~mikey__@user/mikey/x-6463285) (Ping timeout: 264 seconds)
[04:31:10] *** Joins: rvncerr (~rvncerr@user/rvncerr)
[04:31:20] *** Joins: mikey__ (mikey__@user/mikey/x-6463285)
[04:36:55] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:38:44] *** Joins: alzgh (~alzgh@user/alzgh)
[04:40:52] *** Quits: mikey__ (mikey__@user/mikey/x-6463285) (Ping timeout: 258 seconds)
[04:42:36] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[04:44:57] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:52:54] *** Quits: mikey__ (~mikey__@user/mikey/x-6463285) (Ping timeout: 260 seconds)
[04:54:58] *** Joins: mikey__ (mikey__@user/mikey/x-6463285)
[05:03:38] *** Quits: Torr (~Torr@user/torr) ()
[05:07:37] *** Quits: jespada (~jespada@2803:9800:9842:7a62:5d33:6404:2aef:9813) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:07:50] *** Joins: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net)
[05:11:21] *** Quits: porn (~hentai@user/hentai) (Ping timeout: 245 seconds)
[05:13:26] *** Quits: mikey__ (mikey__@user/mikey/x-6463285) (Ping timeout: 260 seconds)
[05:14:15] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[05:15:26] *** Joins: mikey__ (mikey__@user/mikey/x-6463285)
[05:15:51] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[05:19:12] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:20:34] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[05:21:07] *** Joins: Torr (~Torr@user/torr)
[05:22:23] *** Joins: _xor (~xor@72.49.199.147)
[05:25:18] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[05:27:43] *** Joins: frost (~frost@59.71.244.189)
[05:28:21] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[05:29:33] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[05:30:01] *** Quits: sztanpet (sztanpet@user/sztanpet) (Quit: asd)
[05:31:08] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:71a5:6849:e6bb:8258)
[05:32:02] *** Joins: sztanpet (sztanpet@user/sztanpet)
[05:32:04] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[05:34:01] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-71a5-6849-e6bb-8258.inf6.spectrum.com) (Ping timeout: 265 seconds)
[05:36:46] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Ping timeout: 260 seconds)
[05:40:56] *** Quits: oltuvok (~user@2804:1b2:183:26c9:e999:3a99:ad40:66a8) (Remote host closed the connection)
[05:46:06] *** Quits: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net) (Ping timeout: 260 seconds)
[05:51:19] *** Joins: nemesis91 (~nemesis91@user/nemesis91)
[06:05:19] *** Joins: porn (~hentai@2a01:e0a:a5c:a070:298a:c1bd:aaa3:e424)
[06:05:19] *** Quits: porn (~hentai@2a01:e0a:a5c:a070:298a:c1bd:aaa3:e424) (Changing host)
[06:05:19] *** Joins: porn (~hentai@user/hentai)
[06:18:03] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:41bb:42a7:d7db:9312)
[06:19:17] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:41bb:42a7:d7db:9312) (Read error: Connection reset by peer)
[06:20:00] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:41bb:42a7:d7db:9312)
[06:20:29] *** Joins: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net)
[06:21:23] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:71a5:6849:e6bb:8258) (Ping timeout: 265 seconds)
[06:24:50] *** Quits: mikey__ (mikey__@user/mikey/x-6463285) (Ping timeout: 260 seconds)
[06:26:44] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[06:28:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[06:30:22] *** Joins: fikran (~fikran@user/fikran)
[06:31:58] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:34:10] *** Quits: mikey__ (~mikey__@user/mikey/x-6463285) (Ping timeout: 260 seconds)
[06:35:29] *** Joins: arthurvdiniz (uid523730@id-523730.lymington.irccloud.com)
[06:36:05] *** Joins: mikey__ (mikey__@user/mikey/x-6463285)
[06:38:12] *** Quits: nemesis91 (~nemesis91@user/nemesis91) (Quit: hi)
[06:45:49] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:59:41] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:59:58] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[07:01:31] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:01:44] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[07:02:10] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:02:52] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[07:16:14] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:17:02] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[07:29:42] *** Quits: mikey__ (mikey__@user/mikey/x-6463285) (Ping timeout: 260 seconds)
[07:31:19] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[07:39:58] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 260 seconds)
[07:43:40] *** Joins: imeyer (~imeyer@h69-130-178-218.bendor.broadband.dynamic.tds.net)
[07:45:07] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:41bb:42a7:d7db:9312) (Remote host closed the connection)
[07:45:46] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:41bb:42a7:d7db:9312)
[07:47:50] *** Quits: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net) (Quit: Lost terminal)
[07:54:29] *** Joins: gggpkm (~gggpkm@114.245.104.31)
[08:00:01] *** Joins: stzsch|2 (~stzsch@187.44.81.18)
[08:00:08] *** Quits: imeyer (~imeyer@h69-130-178-218.bendor.broadband.dynamic.tds.net) (Quit: leaving)
[08:01:37] *** Quits: mikey__ (~mikey__@user/mikey/x-6463285) (Quit: WeeChat 3.3)
[08:02:44] *** Quits: stzsch (~stzsch@187.44.81.18) (Ping timeout: 265 seconds)
[08:03:24] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[08:13:27] *** Quits: stzsch|2 (~stzsch@187.44.81.18) (Read error: Connection reset by peer)
[08:13:50] *** Joins: stzsch|2 (~stzsch@187.44.81.18)
[08:22:09] *** Quits: stzsch|2 (~stzsch@187.44.81.18) (Read error: Connection reset by peer)
[08:22:32] *** Joins: stzsch|2 (~stzsch@45.238.66.15)
[08:24:31] *** Joins: jpw (~jpw@user/jpw)
[08:37:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[08:39:43] *** Joins: fikran (~fikran@user/fikran)
[08:41:06] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 260 seconds)
[08:48:46] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[08:49:36] *** Joins: tebruno999 (~tebruno99@user/tebruno99)
[08:51:55] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Ping timeout: 260 seconds)
[08:51:55] *** tebruno999 is now known as tebruno99
[09:10:34] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:10:44] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[09:11:05] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:41bb:42a7:d7db:9312) (Read error: Connection reset by peer)
[09:11:45] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:41bb:42a7:d7db:9312)
[09:25:47] *** Joins: mei (~mei@user/mei)
[09:31:57] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[09:32:05] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[09:39:23] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[09:39:35] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-41bb-42a7-d7db-9312.inf6.spectrum.com)
[09:42:27] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:41bb:42a7:d7db:9312) (Ping timeout: 265 seconds)
[09:42:42] *** Quits: gggpkm (~gggpkm@114.245.104.31) (Ping timeout: 260 seconds)
[09:46:43] *** Quits: Freman (~Freman@flatus.fremnet.net) (Quit: ZNC - https://znc.in)
[09:47:13] *** Joins: Freman (~Freman@flatus.fremnet.net)
[09:47:37] *** Quits: pylong_ (~bluehoney@cpe-75-81-204-188.mi.res.rr.com) (Remote host closed the connection)
[09:48:32] *** Joins: bluehoney (~bluehoney@cpe-75-81-204-188.mi.res.rr.com)
[09:49:01] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:55:15] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[09:59:16] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 245 seconds)
[10:17:22] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:20:10] *** gggpkm_ is now known as gggpkm
[10:20:41] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:24:45] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:2ce7:c726:b5bd:d8ff)
[10:26:12] *** Joins: khyr0n_ (~khyr0n@2806:2f0:9140:56ec:93f7:805d:a273:a1c5)
[10:26:19] *** Joins: mollerup (~nmollerup@customer-2a00-7660-1612-0168-a4b9-f516-b86f-3341.ip6.gigabit.dk)
[10:27:26] *** Joins: phylaz0 (~phylaz@219.92-221-176.customer.lyse.net)
[10:27:58] *** Joins: reenix- (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75)
[10:28:04] *** Joins: seanBE_ (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com)
[10:28:18] *** Joins: pvalenta_ (~petr@mail.open-system.cz)
[10:28:22] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-41bb-42a7-d7db-9312.inf6.spectrum.com) (Ping timeout: 265 seconds)
[10:28:23] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[10:29:01] *** Joins: mei (~mei@user/mei)
[10:30:05] *** Joins: feuerrot_ (~feuerrot@shells.chaosdorf.de)
[10:30:22] *** Joins: some02_ (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[10:30:34] *** Joins: Erzwurm (~archwyrm@archwyrm.net)
[10:31:18] *** Joins: mikeputnam1 (~mikeputna@wilug/mikeputnam)
[10:31:49] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[10:32:25] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[10:33:10] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[10:33:34] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Remote host closed the connection)
[10:33:47] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[10:34:48] *** Quits: gggpkm (~gggpkm@60.10.194.46) (Read error: Connection reset by peer)
[10:37:27] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:37:59] *** Quits: brainfreeze (~brainfree@2a03:1b20:4:f011::20d) (Quit: Leaving)
[10:39:50] *** Quits: reenix (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: seanBE (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: ryu` (~ryu`@67.165.91.34.bc.googleusercontent.com) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: khyr0n (~khyr0n@2806:2f0:9140:56ec:93f7:805d:a273:a1c5) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-d0f7-afac-8b30-c1ac.ip6.gigabit.dk) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: pvalenta (~petr@mail.open-system.cz) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: miquella[m] (~miquellam@2001:470:69fc:105::1:980) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: mikeputnam (~mikeputna@wilug/mikeputnam) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Archwyrm (~archwyrm@archwyrm.net) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: some02 (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Sam (b8f15a4bbd@golang/sam) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: JPT (~jpt@classified.name) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: kinlo (~peter@user/kinlo) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: bat[m] (~batdice-t@2001:470:69fc:105::19b8) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: wim (~wim@42.be) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: crowbar (~crowbar@user/crowbar) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: feuerrot (~feuerrot@shells.chaosdorf.de) (Ping timeout: 260 seconds)
[10:39:50] *** Quits: fizzie (irc@selene.zem.fi) (Ping timeout: 260 seconds)
[10:39:51] *** phylaz0 is now known as phylaz
[10:40:07] *** Joins: wim (~wim@42.be)
[10:40:31] *** Joins: crowbar (~crowbar@user/crowbar)
[10:42:17] *** Joins: eNV25_ (~quassel@user/env25)
[10:42:27] *** Joins: gggpkm (~gggpkm@114.245.104.31)
[10:42:35] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[10:42:38] *** Joins: miquella[m] (~miquellam@2001:470:69fc:105::1:980)
[10:42:47] *** Joins: JPT_ (~jpt@classified.name)
[10:42:54] *** Quits: eNV25 (~quassel@user/env25) (Ping timeout: 260 seconds)
[10:43:07] *** Joins: fizzie (irc@selene.zem.fi)
[10:43:14] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Read error: Connection reset by peer)
[10:43:21] *** Joins: kinlo (~peter@user/kinlo)
[10:45:56] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[10:47:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[10:47:43] *** Joins: bat[m] (~batdice-t@2001:470:69fc:105::19b8)
[10:48:05] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[10:48:40] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[10:48:59] *** Joins: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a)
[10:49:04] *** Joins: fikran (~fikran@user/fikran)
[10:50:22] *** Quits: gggpkm (~gggpkm@114.245.104.31) (Ping timeout: 260 seconds)
[10:52:34] *** Atque is now known as Atque[m]
[10:58:05] *** eNV25_ is now known as eNV25
[11:02:49] *** Joins: arinov (~arinov@213.194.126.155)
[11:09:53] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[11:09:54] <b0nn> dostoyevsky2: https://medium.com/trendyol-tech/contributing-the-go-compiler-adding-new-tilde-operator-f66d0c6cff7
[11:10:30] <b0nn> WRT my match question earlier - I realised that I didn't have any test data, so went looking for some, then got distracted :
[11:10:43] *** Quits: kinlo (~peter@user/kinlo) (Ping timeout: 258 seconds)
[11:12:51] *** Quits: Atque[m] (~Atque@user/atque) (Ping timeout: 276 seconds)
[11:12:54] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:13:25] <seebs> wtf
[11:13:55] <seebs> i'm so confused, how does the ~ operator differ from existing unary-^
[11:14:29] *** Joins: kinlo (~peter@user/kinlo)
[11:15:00] <seebs> oh dear
[11:15:23] <seebs> so the person who wrote that, i think, may have misunderstood what was happening significantly
[11:15:45] <seebs> in that i don't think they realize that Go has had unary-complement forever (under ^, not ~), and that the ~ which was added is for generics.
[11:15:55] <seebs> it's used for `~int` to mean "any type the underlying type of which is int".
[11:18:22] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[11:24:54] *** Joins: Atque (~Atque@user/atque)
[11:26:39] *** Quits: Freman (~Freman@flatus.fremnet.net) (Quit: ZNC - https://znc.in)
[11:26:58] *** Joins: Freman (~Freman@185.83.217.144)
[11:35:14] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[11:35:48] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[11:36:50] *** Joins: fef (~thedawn@user/thedawn)
[11:38:45] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[11:40:08] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:41:45] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:3cb3:e069:6931:77eb)
[11:43:16] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (Quit: bye)
[11:44:55] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[11:51:05] *** Joins: avemestr (~avemestr@2a01:4f8:212:2719::2)
[11:54:30] *** Joins: kayprish (~kayprish@46.240.130.158)
[11:58:14] *** Joins: gggpkm (~gggpkm@114.245.104.31)
[12:04:03] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[12:06:34] *** Quits: rvncerr (~rvncerr@user/rvncerr) (Remote host closed the connection)
[12:07:17] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[12:08:22] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[12:10:54] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:3cb3:e069:6931:77eb) (Ping timeout: 258 seconds)
[12:16:04] <jesk> how does "-uint32" work?
[12:16:16] <jesk> context: https://github.com/mikioh/ipaddr/blob/d465c8ab672111787b24b8f03326449059a4aa33/helper.go
[12:17:28] <jesk> 00000000 00000000 00000001 00000000
[12:17:31] <jesk> turns into
[12:17:49] <jesk> 11111111 11111111 11111111 00000000
[12:19:16] <jesk> you call the function with 24 (IP prefix length) and it gives you back the the integer of 24 from 32 bits set
[12:33:01] *** Quits: moto (~moto@user/moto) (Read error: Connection reset by peer)
[12:33:16] *** Joins: moto (~moto@user/moto)
[12:38:31] *** Quits: marler8997 (~marler899@204.229.3.4) (Ping timeout: 252 seconds)
[12:38:53] *** Joins: marler8997 (~marler899@204.229.3.4)
[12:39:43] <krux02> how do I write a stack trace on error?
[12:39:52] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[12:40:02] *** Quits: porn (~hentai@user/hentai) (Ping timeout: 258 seconds)
[12:40:05] <shadowchaser> panic
[12:40:43] <krux02> I just received an error as a result, is there a way to get a stack trace from that error?
[12:40:56] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[12:41:46] <krux02> I just put all the if err != nil { return nil, err } just to realize now that I don't have stack traces anymore.
[12:42:00] <krux02> so I have to remove them all again and replace with panic?
[12:42:49] *** Joins: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de)
[12:43:57] <sztanpet> errors are just values, not exceptions, they dont contain a stack trace, you can generate one by https://pkg.go.dev/runtime#example-Frames
[12:44:32] <sztanpet> there are logging packages that take care of that for you
[12:45:23] <krux02> ok thank you
[12:45:28] <krux02> I guess I stick to panic for now
[12:49:58] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:3cb3:e069:6931:77eb)
[12:51:09] *** Quits: stmuk_ (~steve@15.43.187.81.in-addr.arpa) (Ping timeout: 258 seconds)
[12:52:15] *** Joins: porn (~hentai@2a01:e0a:a5c:a070:298a:c1bd:aaa3:e424)
[12:52:15] *** Quits: porn (~hentai@2a01:e0a:a5c:a070:298a:c1bd:aaa3:e424) (Changing host)
[12:52:15] *** Joins: porn (~hentai@user/hentai)
[12:53:43] <krux02> how do I unmarshel an object that is encoded in a json array instead of an object?
[12:54:21] <krux02> the array has always 4 elements that need to be mapped to struct elements
[12:55:16] <sztanpet> https://mholt.github.io/json-to-go/ maybe this will help
[12:55:17] <krux02> I can't really unmarshal it to a slice, since all elemnts have different types
[12:56:20] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[12:56:36] <krux02> sztanpet, type AutoGenerated []interface{}
[12:56:40] <krux02> nope not helpful
[12:56:42] *** Joins: stmuk_ (~steve@15.43.187.81.in-addr.arpa)
[12:56:57] <sztanpet> yea, not much you can do if your json is like that
[12:57:02] <krux02> [0,1,"WebDriver:NewSession",{"capabilities":null,"sessionId":""}]
[12:57:22] <krux02> the elements in that top level array are nicely structured
[12:57:27] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[12:57:27] <krux02> but at the top level it is an array
[12:57:56] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[12:58:02] <sztanpet> type switches it is
[12:58:12] <krux02> not really.
[12:58:17] <sztanpet> oh?
[12:58:25] *** Joins: fikran (~fikran@user/fikran)
[12:58:28] <krux02> type switches are for go types
[12:58:33] <krux02> not for json objects
[12:58:50] <krux02> the current solution is to unmashel the array
[12:58:58] <sztanpet> of course, unmarshal into []interface{} and handle it
[12:59:16] <krux02> and then marshal all elements of the array bask to a json string
[12:59:23] <krux02> and then call unmarshall on that again
[12:59:27] <krux02> I think that is stupid
[12:59:59] <krux02> the problem is, unmarshal only operates on a string
[13:00:00] <sztanpet> not sure what you mean
[13:00:27] <krux02> [0,1,"WebDriver:NewSession",{"capabilities":null,"sessionId":""}]
[13:00:34] <krux02> {"capabilities":null,"sessionId":""}
[13:00:37] <sztanpet> you already posted that
[13:00:38] <krux02> that part is a nice object
[13:00:44] <krux02> I can unmarshal that
[13:00:49] <krux02> (the real object is bigger)
[13:01:09] <krux02> but for json.unmarshal, I need to get that part as a string
[13:01:26] <krux02> not as a map[string]interface{}
[13:01:27] <sztanpet> https://pkg.go.dev/encoding/json#RawMessage so maybe unmarshal into []json.RawMessage but i dont think i get your problem
[13:02:44] <sztanpet> if the array keys are always consistent, that can be cleaner
[13:04:29] *** Parts: some02_ (~cat@h-98-128-128-173.A351.priv.bahnhof.se) ()
[13:04:57] <sztanpet> or put another way, if you already unmarshalled into an []interface{}, everything is already unmarshalled just not into a struct, you can do that yourself so no need for "strings"
[13:05:17] <sztanpet> but json.RawMessage will solve your problem cleaner i think
[13:06:46] <krux02> I think the RawMessage might actually be exactly what I am looking for
[13:12:14] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 258 seconds)
[13:13:04] *** Quits: michele_ (~eraser@user/michele) (Quit: restart)
[13:13:24] *** Joins: michele (~eraser@user/michele)
[13:14:28] *** Joins: sudden (~cat@user/sudden)
[13:17:36] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:3cb3:e069:6931:77eb) (Ping timeout: 245 seconds)
[13:21:24] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:3cb3:e069:6931:77eb)
[13:23:05] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[13:26:05] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:3cb3:e069:6931:77eb) (Ping timeout: 260 seconds)
[13:26:14] *** Quits: gggpkm (~gggpkm@114.245.104.31) (Ping timeout: 260 seconds)
[13:26:32] <krux02> sztanpet, thank you, RawMessage works now as I expect it to work
[13:30:50] *** Joins: arinov (~arinov@31.142.50.8)
[13:32:24] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:3cb3:e069:6931:77eb)
[13:36:46] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:3cb3:e069:6931:77eb) (Ping timeout: 245 seconds)
[13:38:21] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[13:38:22] *** Quits: dza (~dza@user/dza) (Ping timeout: 260 seconds)
[13:38:56] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[13:41:49] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:69ec:66d4:59d3:8787)
[13:42:18] *** Joins: dza (~dza@user/dza)
[13:43:39] *** Joins: gggpkm__ (~gggpkm@60.10.194.46)
[13:44:32] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:44:49] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:2ce7:c726:b5bd:d8ff) (Ping timeout: 258 seconds)
[13:46:52] *** Quits: gggpkm_ (~gggpkm@60.10.194.46) (Ping timeout: 265 seconds)
[13:49:51] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:6de4:23af:39fb:f3d7)
[13:51:54] *** Quits: dza (~dza@user/dza) (Ping timeout: 260 seconds)
[14:01:12] *** Joins: mkopriva (~mkopriva@ip-78-45-72-123.net.upcbroadband.cz)
[14:05:20] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:3cb3:e069:6931:77eb)
[14:11:16] *** Joins: LTCD (~LTCD@2a02:c7f:dd1c:b600:2c94:e191:69d1:597d)
[14:13:01] <LTCD> Hey. 2021/10/20 11:38:10 could not send message: rpc error: code = Unimplemented desc = method SendNotificationWithGRPC not implemented, exit status 1  https://pastebin.com/Fp8cFcXe
[14:13:05] <LTCD> Why is this happening? :-(
[14:13:32] *** Joins: jla (~jordi@tao.ddns.jazztel.es)
[14:13:35] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:69ec:66d4:59d3:8787) (Read error: Connection reset by peer)
[14:14:14] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-69ec-66d4-59d3-8787.inf6.spectrum.com)
[14:17:11] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:3cb3:e069:6931:77eb) (Ping timeout: 264 seconds)
[14:18:33] *** Quits: kayprish (~kayprish@46.240.130.158) (Read error: Connection reset by peer)
[14:21:09] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:3cb3:e069:6931:77eb)
[14:31:01] <krux02> LTCD, something seems to be not implemented
[14:31:10] <krux02> lazy ass not implementing something
[14:31:59] <LTCD> krux02 I didn't realise it was coming from the server.
[14:32:49] *** Joins: DM4307842147 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net)
[14:32:52] <krux02> rpc stands for remote procedure call
[14:33:12] <krux02> so it has probably to do with server stuff
[14:34:35] *** Quits: DM430784214 (~DM4307@c-73-15-244-129.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[14:34:35] *** DM4307842147 is now known as DM430784214
[14:35:27] *** Joins: jespada (~jespada@2803:9800:9842:7a62:5d33:6404:2aef:9813)
[14:36:59] *** Quits: dsrt^ (~dsrt@68.101.53.15) (Ping timeout: 264 seconds)
[14:40:56] *** Quits: arinov (~arinov@31.142.50.8) (Ping timeout: 245 seconds)
[14:44:07] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[14:45:03] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[14:46:02] *** Joins: alzgh (~alzgh@user/alzgh)
[14:47:47] *** Quits: gggpkm__ (~gggpkm@60.10.194.46) (Ping timeout: 264 seconds)
[14:49:49] *** Quits: jla (~jordi@tao.ddns.jazztel.es) (Quit: Leaving.)
[14:56:30] <LTCD> krux02 If I send you my code as a zip, could you please make it work? I am at the very beginning stages and it's so confusing.
[14:56:42] <LTCD> I found where the error message is coming from in the server.go file.
[14:57:08] <LTCD> It's because a function is not yet implemented, but when I write code for it I get a bunch of errors.
[14:57:23] <LTCD> GRPC is the hardest thing I have done to date in programming.
[15:01:35] <krux02> LTCD, I am sorry, but I am too busy for that.
[15:03:24] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 258 seconds)
[15:05:17] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:05:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[15:07:45] *** Joins: fikran (~fikran@user/fikran)
[15:14:00] *** Joins: off^ (~off@68.101.53.15)
[15:33:05] *** Joins: gggpkm__ (~gggpkm@114.245.104.31)
[15:33:25] *** Quits: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:36:22] *** Quits: gggpkm_ (~gggpkm@60.10.194.46) (Ping timeout: 258 seconds)
[15:36:44] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[15:39:05] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[15:40:37] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:42:23] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[15:44:20] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:3cb3:e069:6931:77eb) (Ping timeout: 260 seconds)
[15:46:15] *** Quits: adip (~adip@aedv46.neoplus.adsl.tpnet.pl) (Read error: Connection reset by peer)
[15:53:11] *** Quits: off^ (~off@68.101.53.15) (Ping timeout: 264 seconds)
[15:53:39] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:19d0:e752:cf7c:af79)
[15:54:03] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[15:54:20] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Quit: Leaving)
[15:56:14] *** Joins: jpn (~jpn@159-196-117-139.9fc475.syd.nbn.aussiebb.net)
[15:57:04] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-69ec-66d4-59d3-8787.inf6.spectrum.com) (Ping timeout: 258 seconds)
[15:58:07] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:19d0:e752:cf7c:af79)
[15:59:25] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:19d0:e752:cf7c:af79) (Ping timeout: 268 seconds)
[16:04:15] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Quit: WeeChat 3.3)
[16:10:33] *** Joins: xiongxin (~quassel@119.123.103.160)
[16:17:00] *** Quits: xiongxin (~quassel@119.123.103.160) (Read error: Connection reset by peer)
[16:18:04] *** Joins: xiongxin (~quassel@119.123.100.49)
[16:18:46] *** Joins: freakazoid343 (~matt@35.136.210.185)
[16:20:13] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[16:20:40] *** Quits: jpn (~jpn@159-196-117-139.9fc475.syd.nbn.aussiebb.net) (Quit: Leaving)
[16:20:54] *** Joins: jpn (~jpn@159-196-117-139.9fc475.syd.nbn.aussiebb.net)
[16:21:00] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:19d0:e752:cf7c:af79) (Ping timeout: 268 seconds)
[16:21:22] *** Joins: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net)
[16:21:32] *** Joins: Atque (~Atque@user/atque)
[16:21:45] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:23:12] <jpn> how does yyerrok work with goyacc?
[16:27:30] *** Joins: adip (~adip@dhy69.neoplus.adsl.tpnet.pl)
[16:28:53] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:31:23] *** Quits: LTCD (~LTCD@2a02:c7f:dd1c:b600:2c94:e191:69d1:597d) (Quit: Client closed)
[16:33:06] *** Quits: adip (~adip@dhy69.neoplus.adsl.tpnet.pl) (Ping timeout: 258 seconds)
[16:36:44] *** Joins: mei (~mei@user/mei)
[16:38:52] <zanshin> GOGCCFLAGS on my rasperry pi has `-marm` as one of the flags. Based on the error message I get trying to install gopls for Neovim, that flag needs to be `-fasm`. I'm not finding anything useful about how to change that flag. Do I need compile gcc specifically for the Raspberry Pi?
[16:39:04] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:39:49] *** Joins: adip (~adip@dhy69.neoplus.adsl.tpnet.pl)
[16:41:01] <fizzie> Not that it is reallly pertinent to your issue, but the error message's suggestion is a pure random guess based on the textual similarity of the flag names, there's no meaningful way the `-marm` flag "needs to be `-fasm`", they're two completely unrelated flags.
[16:43:25] *** Quits: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:44:04] <zanshin> fizzie: `vim-go: gcc: error: unrecognized command line option '-marm'; did you mean '-fasm'?`
[16:44:56] <fizzie> Yes, and I'm saying that's the compiler trying to make a guessing of your intent based on the fact that "-marm" has a few letters in common with "-fasm", not telling you that anything "should be" -fasm instead.
[16:45:30] <fizzie> `-marm` is an ARM-specific option that's one of the pair -marm / -mthumb, to select between ARM and Thumb mode code generation; `-fasm` is a target-independent flag that explicitly enables treatment of `asm` as a keyword. There's no sense in trying to figure out how to change the former to the latter anywhere. If anything, you'd just want to *leave out* the -marm flag.
[16:47:22] *** Joins: dza (~dza@user/dza)
[16:48:18] *** Quits: adip (~adip@dhy69.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[16:52:10] <zanshin> OK. How do I leave the -marm flag off my GOGCCFLAGS
[17:01:55] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Ping timeout: 256 seconds)
[17:02:17] *** Quits: jpn (~jpn@159-196-117-139.9fc475.syd.nbn.aussiebb.net) (Quit: Leaving)
[17:02:45] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:03:21] *** Joins: Sam (b8f15a4bbd@golang/sam)
[17:03:21] *** ChanServ sets mode: +o Sam
[17:05:13] *** Joins: adip (~adip@dhy69.neoplus.adsl.tpnet.pl)
[17:05:28] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[17:07:24] *** Joins: LTCD (~LTCD@2a02:c7f:dd1c:b600:2c94:e191:69d1:597d)
[17:07:37] <LTCD> Hey. Why is this failing? protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_out=paths=source_relative usermgmt/usermgmt.proto
[17:07:38] <LTCD> paths=source_relative/: No such file or directory
[17:07:47] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[17:08:27] *** Joins: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net)
[17:08:43] <LTCD> I for certain have a proto file with that name
[17:15:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[17:16:25] *** Quits: xiongxin (~quassel@119.123.100.49) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:17:06] *** Joins: fikran (~fikran@user/fikran)
[17:19:30] *** Quits: MrElendig (~Urist@archlinux/op/MrElendig) (Quit: visiting the lab to produce covid-21)
[17:20:02] *** Quits: frost (~frost@59.71.244.189) (Quit: Connection closed)
[17:21:27] *** Joins: MrElendig (~Urist@archlinux/op/MrElendig)
[17:21:47] *** MrElendig is now known as lb9di
[17:22:57] *** Joins: jpn (~jpn@159-196-117-139.9fc475.syd.nbn.aussiebb.net)
[17:24:23] *** Joins: mei (~mei@user/mei)
[17:24:40] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:6de4:23af:39fb:f3d7) (Ping timeout: 260 seconds)
[17:25:19] *** Quits: krux02 (~krux02@p200300e81728d600319fb3a709c9a336.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:29:11] *** Joins: shtirlic (~shtirlic@95-55-26-134.dynamic.avangarddsl.ru)
[17:31:13] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[17:31:43] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 252 seconds)
[17:33:23] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[17:33:47] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:34:09] *** Joins: gggpkm_ (~gggpkm@114.245.104.31)
[17:34:35] *** Joins: krux02 (~krux02@p200300e81728d600319fb3a709c9a336.dip0.t-ipconnect.de)
[17:35:22] *** Quits: gggpkm_ (~gggpkm@114.245.104.31) (Remote host closed the connection)
[17:35:44] *** Joins: gggpkm_ (~gggpkm@60.10.194.46)
[17:35:51] <fizzie> LTCD: Your `--go-grpc_out=paths=source_relative` should be `--go-grpc_opt=paths=source_relative`.
[17:36:05] <fizzie> ("opt" vs. "out".)
[17:36:28] <fizzie> Otherwise you're asking to write output into a directory called "paths=source_relative", which is what the error is complaining about ("paths=source_relative/: No such file or directory").
[17:36:28] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[17:37:18] *** Quits: gggpkm__ (~gggpkm@114.245.104.31) (Ping timeout: 260 seconds)
[17:37:58] *** Quits: phytyca (~phytyca@user/jlindgren) (Quit: The Lounge - https://thelounge.chat)
[17:38:05] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[17:38:38] *** Joins: mickey8 (~user@user/mickey)
[17:40:42] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:1103:487f:4479:20c6)
[17:43:02] *** Quits: jpn (~jpn@159-196-117-139.9fc475.syd.nbn.aussiebb.net) (Quit: Leaving)
[17:45:05] <LTCD> Ahhh
[17:45:48] *** Joins: haux (~null@yo.haux.haus)
[17:46:11] *** Joins: gggpkm__ (~gggpkm@60.10.23.170)
[17:49:16] *** Quits: gggpkm_ (~gggpkm@60.10.194.46) (Ping timeout: 245 seconds)
[17:50:48] <LTCD> fizzie Sorry it did not work, same error. protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative usermgmt/usermgmt.proto
[17:50:56] *** Quits: hdm (sid500490@aha/hacker/hdm) (Ping timeout: 245 seconds)
[17:51:23] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[17:51:59] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 264 seconds)
[17:52:04] *** Quits: arthurvdiniz (uid523730@id-523730.lymington.irccloud.com) (Ping timeout: 252 seconds)
[17:52:04] *** Quits: eric_hill (sid323132@id-323132.tinside.irccloud.com) (Ping timeout: 258 seconds)
[17:52:18] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-fce5-8f43-3546-c881.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[17:52:35] *** Quits: Memory (sid459764@user/memory) (Ping timeout: 264 seconds)
[17:53:34] *** Joins: arthurvdiniz (uid523730@lymington.irccloud.com)
[17:53:37] *** Joins: r0bby (r0bby@user/r0bby)
[17:53:48] *** Quits: krux02 (~krux02@p200300e81728d600319fb3a709c9a336.dip0.t-ipconnect.de) (Quit: Leaving)
[17:53:58] *** Joins: kupi (uid212005@hampstead.irccloud.com)
[17:54:00] <LTCD> fizzie This worked: protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative usermgmt.proto
[17:54:01] *** Joins: eric_hill (sid323132@tinside.irccloud.com)
[17:54:13] *** Joins: Memory (sid459764@user/memory)
[17:54:39] *** Quits: kupi (uid212005@hampstead.irccloud.com) (Client Quit)
[17:58:27] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[17:58:38] *** Quits: andlabs_ (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:59:47] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[18:01:41] *** Joins: phytyca (~phytyca@user/jlindgren)
[18:02:57] *** Quits: phytyca (~phytyca@user/jlindgren) (Client Quit)
[18:03:09] *** Joins: phytyca (~phytyca@user/jlindgren)
[18:04:48] *** Quits: phytyca (~phytyca@user/jlindgren) (Client Quit)
[18:05:10] *** Joins: phytyca (~phytyca@user/jlindgren)
[18:05:23] *** Joins: hdm (sid500490@aha/hacker/hdm)
[18:06:25] *** Quits: phytyca (~phytyca@user/jlindgren) (Client Quit)
[18:09:00] *** Joins: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-200.dsl.bell.ca)
[18:10:15] *** Joins: phytyca (~phytyca@user/jlindgren)
[18:13:21] <sztanpet> jesk oh btw, -uint32(1 << uint(32-nbits)), the uint(32-nbits) is there so that the user gets a compiler error if they try to mask more bits than there are bits, the shifting behaves as normal the result is a signed integer, and the uint32() converts that to unsigned because they want to use the fact that unsigned overflow is defined and that overflow happens when they subtract from zero which is what the negative sign is
[18:13:35] *** Parts: sonny (~sonny@bras-base-london1483w-grc-30-74-12-157-200.dsl.bell.ca) ()
[18:16:09] <fizzie> Signed overflow is equally defined in Go, by the way.
[18:16:11] <fizzie> (Not really too relevant for that expression, it's just that saying "unsigned overflow is defined" makes it sound like unsigned is different in that regards.)
[18:16:35] <sztanpet> true!
[18:17:29] <sztanpet> *unsigned overflow is defined in a way that makes this a useful operation, meh not much better
[18:17:37] *** Quits: phytyca (~phytyca@user/jlindgren) (Quit: The Lounge - https://thelounge.chat)
[18:18:05] *** Joins: phytyca (~phytyca@user/jlindgren)
[18:18:20] *** Quits: gggpkm__ (~gggpkm@60.10.23.170) (Ping timeout: 260 seconds)
[18:18:36] *** Quits: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:19:12] *** Joins: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net)
[18:19:17] *** Joins: freakazoid12345 (~matt@35.136.210.185)
[18:19:34] <sztanpet> it just wraps around which is precisely the behavior that is used here, anyway hopefully that makes it clearer altho i agree that its a bit terse
[18:21:53] *** Quits: freakazoid343 (~matt@35.136.210.185) (Ping timeout: 265 seconds)
[18:27:43] <zanshin> I was able to solve my issue by changing what CC was set to. `export CC=/usr/bin/arm-linux-gnueabi-gcc` Previously it was set to gcc.
[18:32:04] *** Quits: LTCD (~LTCD@2a02:c7f:dd1c:b600:2c94:e191:69d1:597d) (Quit: Client closed)
[18:32:04] *** Quits: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com) (Read error: Connection reset by peer)
[18:32:28] *** Quits: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:33:18] *** Joins: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com)
[18:35:53] *** Joins: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net)
[18:36:58] *** Quits: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net) (Client Quit)
[18:37:43] *** Quits: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606) (Ping timeout: 252 seconds)
[18:41:46] *** Joins: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606)
[18:42:02] *** Joins: andlabs (~andlabs@2604:ca00:169:aa2c:f035:8c9e:5491:9eff)
[18:43:23] *** Joins: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net)
[18:49:08] *** Joins: andlabs_ (~andlabs@209.107.190.78)
[18:51:21] *** Quits: andlabs (~andlabs@2604:ca00:169:aa2c:f035:8c9e:5491:9eff) (Ping timeout: 245 seconds)
[18:56:57] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[19:01:33] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[19:03:40] *** Quits: AlmogBaku (~AlmogBaku@bzq-230-168-31-226.red.bezeqint.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:03:50] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:1103:487f:4479:20c6) (Quit: Client closed)
[19:10:20] *** Joins: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de)
[19:18:25] *** Joins: Led_Zeppelin2 (~user@cpe-68-172-241-89.nj.res.rr.com)
[19:18:55] <Led_Zeppelin2> i am trying to figure out why a function is returning text output. When I comment it out I don't get anything back but looking at the code in the fucntion, I can't see why it keeps coming
[19:19:52] <Led_Zeppelin2> https://github.com/aybabtme/uniplot/blob/master/histogram/histogram.go#L33 . I have no idea why its outputting something!
[19:19:58] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[19:20:04] *** Joins: algiss (~algiss@78-56-3-119.static.zebra.lt)
[19:21:56] <rewt> that function returns a Histogram, not text...
[19:22:04] *** Quits: phytyca (~phytyca@user/jlindgren) (Quit: The Lounge - https://thelounge.chat)
[19:22:26] <Led_Zeppelin2> thats what I though also.
[19:22:33] <Led_Zeppelin2> But its definately putting some stuff to text.
[19:22:34] <nostalgia> it it outputting on log.Panicf("bi=%d\tval=%f\txdiff=%f\tscale=%f\tlen(buckets)=%d", bi, val, xdiff, scale, len(buckets))
[19:22:36] *** Joins: phytyca (~phytyca@user/jlindgren)
[19:22:37] <Led_Zeppelin2> i mean on my output
[19:23:18] <rewt> so it's outputting something, not returning the wrong thing... what is it outputting for you?
[19:23:42] <nostalgia> only statement i see logging some text to stdout/err is that line
[19:24:19] <Led_Zeppelin2> looks like its outputting that. https://github.com/aybabtme/uniplot/blob/master/histogram/histogram.go#L66
[19:24:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[19:26:07] <nostalgia> condition in that if block is probably always true so its logging that to console each time
[19:26:07] *** Quits: algiss (~algiss@78-56-3-119.static.zebra.lt) (Quit: algiss)
[19:26:22] <siXy> no, that's not accurate.
[19:26:27] *** Joins: fikran (~fikran@user/fikran)
[19:26:45] <siXy> that condition will only be true if you pass data it can't make a histogram out of
[19:26:52] <siXy> Led_Zeppelin2: What are you passing to that function?
[19:26:58] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 260 seconds)
[19:27:23] <nostalgia> Perhaps I misunderstood Led_Zeppelin2 but i thought they meant that it ALWAYS outputs to console
[19:27:31] <Led_Zeppelin2> bucketsize, float64[], histogram.Linear(1))
[19:27:33] <siXy> Or to shortcut a little: The data you're passing is bad. Fix the data you're passing to that function and it will work as you hope.
[19:27:50] <Led_Zeppelin2> nostalgia, yea, its always outputting stuff
[19:28:13] <siXy> it's "always outputting stuff" because the values you're calling it with are always wrong. Fix that.
[19:28:54] <Led_Zeppelin2> yeah. i think so
[19:30:01] <siXy> You may have misunderstood how to use that function, because given reasonable values it works just fine.
[19:30:20] <nostalgia> just do some rubber ducky debugging, walk through each line and understand what you are doing. When in doubt add a bunch of log statements to see how your passed data is being processed
[19:30:42] <nostalgia> as siXy said, your input is causing that statement to always return true which is why you are getting that log
[19:30:47] *** Joins: gtolemans (~gtolemans@wsip-70-169-40-175.rn.hr.cox.net)
[19:31:07] *** Joins: Ergo^ (~ergo@91.238.59.144)
[19:35:18] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[19:35:55] *** Quits: andlabs_ (~andlabs@209.107.190.78) (Ping timeout: 260 seconds)
[19:36:28] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[19:36:31] *** Quits: gtolemans (~gtolemans@wsip-70-169-40-175.rn.hr.cox.net) (Quit: Client closed)
[19:41:49] *** Atque is now known as ATQUE
[19:43:05] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (Ping timeout: 265 seconds)
[19:43:37] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 258 seconds)
[19:44:03] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[19:47:10] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-19d0-e752-cf7c-af79.inf6.spectrum.com)
[19:50:20] *** Quits: freakazoid12345 (~matt@35.136.210.185) (Ping timeout: 265 seconds)
[19:57:10] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:03:22] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[20:05:35] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Client Quit)
[20:06:16] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[20:06:50] *** ATQUE is now known as Atque
[20:10:39] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:19d0:e752:cf7c:af79)
[20:10:56] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[20:13:29] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-19d0-e752-cf7c-af79.inf6.spectrum.com) (Ping timeout: 268 seconds)
[20:14:23] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:14:45] *** Joins: mickey8 (~user@user/mickey)
[20:15:56] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[20:16:16] *** Joins: alzgh (~alzgh@user/alzgh)
[20:16:36] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:17:15] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[20:21:40] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[20:37:20] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:39:08] *** Joins: fub (uid190747@id-190747.ilkley.irccloud.com)
[20:43:39] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[20:46:27] <leitz> Hmm...doesn't the requirement for go.mod break the Go 1 compatibility promise? Or was that more of a guideline?
[20:46:56] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a12:152e:a8e:4ecf:3f2b)
[20:47:18] <siXy> It's not a requirement. You don't *have* to use modules.
[20:47:55] <siXy> You definitely should use them, but it's not a hard requirement
[20:48:02] <leitz> go run and go build seem to choke without it.
[20:48:13] <ikke> export GO111MODULES=auto
[20:49:02] <siXy> mkdir test; vim test/test.go <add hello world>; go run test/test.go # Will work fine, no go.mod present.
[20:49:03] <leitz> Which is not to say I'm against modules. People smarter than I recommend them, so I'll go along with that. I'm just trying to get old code to compile again.
[20:49:12] <ikke> export GO111MODULE=auto
[20:49:24] <ikke> It's singular apparently
[20:49:52] <ikke> https://golang.org/ref/mod#mod-commands
[20:52:27] <leitz> Okay, siXy's solution works. I need to figure out what I didn't do right.
[20:52:34] <leitz> And figure out modules.  :)
[20:58:57] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[20:59:17] *** Joins: alzgh (~alzgh@user/alzgh)
[21:08:28] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:152e:a8e:4ecf:3f2b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:10:35] <seebs> i think the go compatibility promise does not entirely extend to the build system anywy.
[21:12:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[21:13:46] <ikke> seebs: no, git does not automatically delete local branches
[21:14:00] <ikke> when you run fetch / pull
[21:14:46] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[21:15:05] *** Joins: alzgh (~alzgh@user/alzgh)
[21:16:54] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[21:21:05] *** Joins: _xor (~xor@72.49.199.147)
[21:23:29] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[21:23:57] *** Joins: omegatron (~some@p5484903d.dip0.t-ipconnect.de)
[21:26:11] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 264 seconds)
[21:26:30] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[21:27:45] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[21:28:15] <leitz> Well, thanks all! You helped me achieve a minor goal (run a simple test) and I got to submit an errata for a Go book. It is a good day.
[21:28:44] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[21:30:26] *** Joins: acohn (acohn@wikipedia/alex-cohn)
[21:30:46] *** Quits: acohn (acohn@wikipedia/alex-cohn) (Client Quit)
[21:31:05] *** Joins: acohn (acohn@wikipedia/alex-cohn)
[21:31:23] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Client Quit)
[21:31:52] <leitz> If I write a beginner tutorial it'll start with "here's how to build your module setup", followed by "here's how you write a test". Then we'd get into actual go code.
[21:32:59] <Tv_> tests are actual go code ;)
[21:33:02] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[21:33:06] <ikke> https://quii.gitbook.io/learn-go-with-tests/
[21:33:43] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:7889:ea1:c75d:ba41)
[21:34:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[21:34:19] <leitz> Well, looks like someone beat me to it. Cool!
[21:35:48] *** Joins: fikran (~fikran@user/fikran)
[21:36:23] *** Quits: zwr (~zwr@2804:d45:b966:fb00:3928:72f5:d7d7:f752) (Ping timeout: 264 seconds)
[21:36:39] *** Joins: zwr (~zwr@2804:d45:b966:fb00:5a0c:c0ff:d187:175b)
[21:37:05] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:19d0:e752:cf7c:af79) (Ping timeout: 258 seconds)
[21:40:45] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:7889:ea1:c75d:ba41) (Remote host closed the connection)
[21:40:47] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-7889-0ea1-c75d-ba41.inf6.spectrum.com)
[21:45:56] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com)
[21:47:14] *** Quits: ilpanda (ilpanda@2607:5300:60:21b::1) (Changing host)
[21:47:14] *** Joins: ilpanda (ilpanda@user/ilpanda)
[21:51:39] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 265 seconds)
[21:53:47] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:01:21] *** Quits: zwr (~zwr@2804:d45:b966:fb00:5a0c:c0ff:d187:175b) (Quit: leaving)
[22:01:21] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a12:6db9:19e1:cf3e:cca6)
[22:01:36] *** Joins: zwr (~zwr@2804:d45:b966:fb00:ecc0:34ba:7ca0:1eda)
[22:04:20] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[22:05:12] *** Joins: krux02 (~krux02@p200300e81728d600319fb3a709c9a336.dip0.t-ipconnect.de)
[22:07:14] *** lb9di is now known as Mion
[22:08:37] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[22:14:22] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:16:41] *** Joins: jpw (~jpw@user/jpw)
[22:19:12] *** Quits: mkopriva (~mkopriva@ip-78-45-72-123.net.upcbroadband.cz) (Ping timeout: 265 seconds)
[22:44:00] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:156d:1211:45aa:5cc4)
[22:45:18] *** Quits: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu) (Ping timeout: 260 seconds)
[22:46:51] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-7889-0ea1-c75d-ba41.inf6.spectrum.com) (Ping timeout: 258 seconds)
[23:01:03] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:05:55] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-156d-1211-45aa-5cc4.inf6.spectrum.com)
[23:08:37] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:156d:1211:45aa:5cc4) (Ping timeout: 268 seconds)
[23:12:58] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:13:49] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[23:18:22] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[23:24:06] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[23:24:19] *** Quits: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: dalek-caan)
[23:26:52] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com) (Quit: ERC (IRC client for Emacs 27.2))
[23:31:59] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[23:40:24] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[23:42:24] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[23:43:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[23:45:10] *** Joins: fikran (~fikran@user/fikran)
[23:47:50] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[23:59:47] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
