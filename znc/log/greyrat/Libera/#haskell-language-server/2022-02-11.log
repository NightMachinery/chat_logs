[00:29:17] *** Joins: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz)
[05:29:21] *** Joins: Clinton (~Clinton@43.252.112.42)
[05:34:17] <Clinton> hey all, I'm completely lost on a problem I'm having getting Haskell Language Server to work in VSCode. I've tried both a stack and cabal based project. I've tried it on a fresh empty cabal project. I've upgraded to HLS 1.61. I'm just getting the server crashed 5 times. Running `haskell-language-server` manually in the project directory completes
[05:34:18] <Clinton> successfully, although then quits (should it continue to run?). I can post some particular logs if it would be helpful, but I'm not sure what would be best to post.
[05:34:57] <Clinton> I am (trying) to use NixOS on a virtual machine if that's relevant but I haven't seen any errors obviously related to that.
[06:42:29] <shapr> I'm using NixOS on real hardware
[06:42:35] <shapr> and haskell-language-server 1.6.1
[06:43:10] <shapr> can you paste your errors in a pastebin somewhere?
[06:45:58] <Clinton> Worked it out. With help from the Matrix #haskell channel. In short, I had forgot to update the number of CPUs my VM was getting, so it only had one, and I was getting this bug as a result: https://github.com/haskell/haskell-language-server/issues/727
[06:46:40] <Clinton> -j2 fixed it, then I realised I'm probably on one core and fixed my VM setup also
[06:48:06] <Clinton> which kind of made sense, because on the NixOS stable version of HLS which is 1.4, HLS would just hang (like VSCode would just say "processing" forever). I presume the architecture of HLS currently requires at least two threads.
[11:55:13] *** Joins: cptwunderlich (~Benjamin@212-186-57-158.cable.dynamic.surfer.at)
[12:05:16] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Remote host closed the connection)
[12:05:30] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[12:42:11] <michaelpj[m]> Ugh, we should really send a message to the user in that case
[12:46:29] <michaelpj[m]> shapr: I know Pepe has a bunch of stuff for benchmarking HLS in various ways but I'm not sure if it's written down how to use it...
[13:20:17] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 256 seconds)
[13:27:01] *** Quits: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz) (Ping timeout: 240 seconds)
[13:50:33] *** Joins: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz)
[14:33:01] *** Quits: Clinton (~Clinton@43.252.112.42) (Quit: Client closed)
[14:41:22] <mpickering> Zubin told me about how HLS will exit at start-up in the next release if there is an ABI mismatch
[14:41:38] <mpickering> I suggested instead you could have the check in the hscCompileExpr hook so it only triggers if the user actually uses TH or a plugin
[14:41:46] <mpickering> otherwise I suspect there will be quite a few perplexed users
[14:48:06] *** Quits: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz) (Ping timeout: 260 seconds)
[16:06:30] *** Quits: cptwunderlich (~Benjamin@212-186-57-158.cable.dynamic.surfer.at) (Ping timeout: 260 seconds)
[16:28:51] *** Joins: cptwunderlich (~Benjamin@212-186-57-158.cable.dynamic.surfer.at)
[16:43:15] <maerwald> another option is to just make it a warning... but I'm not sure people would really see that in their editor
[16:43:52] <maerwald> or an env var HLS_DISABLE_ABI_CHECK
[20:43:14] *** Joins: shapr` (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[20:44:53] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[22:34:19] *** shapr` is now known as shapr
[23:01:19] *** Quits: cptwunderlich (~Benjamin@212-186-57-158.cable.dynamic.surfer.at) (Remote host closed the connection)
[23:01:40] *** Joins: cptwunderlich (~Benjamin@212-186-57-158.cable.dynamic.surfer.at)
[23:38:19] *** Joins: juhp (~juhp@128.106.188.82)
