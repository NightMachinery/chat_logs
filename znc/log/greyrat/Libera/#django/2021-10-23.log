[00:00:11] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[00:02:50] <dminuoso> Yes.
[00:02:56] <dminuoso> Use a DNS resolver.
[00:03:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:03:43] <dminuoso> Though mail addresses, Im not quite sure
[00:03:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:04:05] <dminuoso> daniel2: Usually mail addresses are not a good source of information on whether something is spam.
[00:04:27] <dminuoso> daniel2: But you can use rspamd or spamassassin to classify mails the same way many mailservers do.
[00:07:01] *** Quits: imakestuff (~imakestuf@197.156.77.77) (Remote host closed the connection)
[00:08:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[00:10:45] <daniel2> I have email verification, but spammers are using gmail and verifying emails.
[00:11:04] <daniel2> This site can actually check for spam email addresses https://cleantalk.org/email-checker/guy@teamspeakradioguy.com
[00:11:09] <daniel2> Something like that.
[00:12:21] <dminuoso> daniel2: Here's my experience as someone who builds and maintains a large scale mail setup for some tens of thousands of customers.
[00:12:30] <dminuoso> Mail addresses are not a useful way to figure out spam.
[00:12:45] <dminuoso> We don't use that metrics.
[00:13:06] <dminuoso> Well, we use the domain part and run it against various so-called RBLs.
[00:13:35] <dminuoso> And to be exact, we even reduce that to the effective second level domain. So some email address of `foo@bar.quux.com` gets turned into a check of `quux.com` against various RBLs.
[00:14:25] <dminuoso> But really, once a spammer uses compromised gmail accounts, you're in a bad ride already. Best thing to do is consult hash block lists
[00:14:45] <dminuoso> And if the spam contains links, check those against phishtank and friends, and run the domain and second level domain against RBLs..
[00:14:47] <dminuoso> Or...
[00:15:11] <dminuoso> Just stuff the entire mail into rspamd, let it do all these magic things for you. rspamd will give you a spam score back.
[00:15:16] <dminuoso> Instead of trying to cute.
[00:20:58] *** Joins: pycode (~pycode@2001:b07:5d28:551:1519:1baa:5c70:ac20)
[00:21:06] <daniel2> I just get a ton of spammers signing up for the site is the problem.
[00:22:40] <dminuoso> I see, so this was just some XY problem.
[00:22:44] <dminuoso> Sorry I bite
[00:23:35] <dminuoso> daniel2: Various things you can do. You can use fail2ban, you can also use spamhaus to build iptables rules to block traffic from known botnets. You can use captchas to hinder bots.
[00:23:37] <dminuoso> 9
[00:23:49] <dminuoso> For that last part, note that this will require particular GPDR consideration if your clients come from Europe
[00:23:53] <dminuoso> *GDPR
[00:23:53] <daniel2> I use recaptcha
[00:24:05] <dminuoso> And they beat recaptcha?
[00:24:39] <daniel2> I guess so.
[00:25:00] <dminuoso> Perhaps your implementation is buggy?
[00:25:14] <daniel2> I guess to say tons is not the right word.  I get about 2 spammer sign ups a week.
[00:25:20] <dminuoso> ....
[00:25:28] <daniel2> I was looking over the user table.
[00:26:06] <dminuoso> daniel2: If you have a captcha + user confirmation via email, you've already succeeded.
[00:26:17] <dminuoso> Anything that leaks through that, you have to manage via other mechanisms.
[00:26:20] <daniel2> Yeah, none of them actually sign in after sign up.
[00:26:24] <dminuoso> Well, so why care?
[00:26:30] <dminuoso> Just purge them
[00:26:45] <dminuoso> Make it so accounts will get purged if not signed in after say 7 days of registration?
[00:26:51] <dminuoso> Problem automatically solved.
[00:27:01] <daniel2> That's actually a good idea.
[00:27:31] <dminuoso> Just be sure to include some note of this fact somewhere.
[00:27:37] <dminuoso> For your clients convenience
[00:29:33] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[00:29:49] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:30:56] <AnselmoCampanas> hi everyone! I'm having problems using cache
[00:31:25] <AnselmoCampanas> I have a docker container with memcache, the Django container depends on it, and it seems it is working
[00:31:32] <pycode> hello everybody
[00:31:39] <AnselmoCampanas> however, when seeing values to the cache, it does not work
[00:31:55] <AnselmoCampanas> it does not fails, but it's not working
[00:32:04] <AnselmoCampanas> somebody has any clue?
[00:33:47] <AnselmoCampanas>     status2 = cache.set("key", "supervalue")
[00:33:48] <AnselmoCampanas>     print(status2)
[00:33:48] <AnselmoCampanas>     print(cache.get("key"))
[00:33:51] <AnselmoCampanas> >None
[00:33:55] <AnselmoCampanas> >None
[00:33:55] *** Quits: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net) (Ping timeout: 260 seconds)
[00:34:42] <FunkyBob> please don't paste in channel, AnselmoCampanas
[00:34:56] <AnselmoCampanas> sorry, FunkyBob
[00:35:03] <AnselmoCampanas> I won't
[00:36:05] <FunkyBob> what's your timeout set to?
[00:36:18] <FunkyBob> have  you any monitoring on t he memcache container?
[00:36:24] <FunkyBob> is set supposed to return anything?
[00:37:37] <AnselmoCampanas> it is mandatory to setup a timeout?
[00:37:41] <FunkyBob> no
[00:37:54] <FunkyBob> given there's no errors, are you sure django is configured to talk to your memcache instance?
[00:38:52] <AnselmoCampanas> I have configured CACHE in settings, so far I have understood I had to
[00:39:06] <AnselmoCampanas> I'm using memcached.MemcachedCache
[00:40:01] <AnselmoCampanas> and using location 127.0.0.1:11211, the port is exposed in the docker-compose.yml for memcache
[00:40:40] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[00:41:07] <FunkyBob> but on localhost? are you sure ?
[00:41:11] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 264 seconds)
[00:41:18] <AnselmoCampanas> yes, in localhost
[00:41:40] <FunkyBob> i wouldn't expect a separate container to be able to reach another containers localhost
[00:41:49] <AnselmoCampanas> https://pastebin.com/cyT6ieE1
[00:42:02] <pycode> hello is it possible to create a formset for the model Section ....AND....on the same form add one or more Feature too ? https://bpa.st/YVBA
[00:42:12] * FunkyBob points at the topic
[00:42:14] <AnselmoCampanas> FunkyBob, docker-compose.yml: https://pastebin.com/uzT53Kv8
[00:42:30] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:42:55] <FunkyBob> pycode: are you asking for a nested formset?
[00:43:02] <FunkyBob> formset where each form has its own formset?
[00:43:35] <pycode> FunkyBob, i think a kind of yes, i mean... i would like to insert more Sections but each Section has one or more Feature (and i would like to insert them too)
[00:44:10] *** Quits: Tas-sos (~Tas-sos@46-219-149.adsl.cyta.gr) (Quit: leaving)
[00:45:41] <FunkyBob> there's nothing out of the box, no
[00:46:26] <pycode> i need to create section a + feature 1, 2 3 then section b + feature 4,5,6 and so on
[00:46:34] <pycode> hmm ok, so what can i try?
[00:48:41] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:49:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[00:51:10] *** Joins: fikran (~fikran@user/fikran)
[00:52:43] <pycode> FunkyBob, can i do something? or should i create the sections first and then add features "manually" ?
[00:53:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:59:58] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 260 seconds)
[01:01:25] *** Quits: Knyght (sid365271@helmsley.irccloud.com) (*.net *.split)
[01:01:25] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[01:01:26] *** Quits: abyss (~robbins@user/robbins) (*.net *.split)
[01:01:26] *** Quits: zkanda (~zkanda@box.makean.art) (*.net *.split)
[01:01:26] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[01:01:26] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (*.net *.split)
[01:01:26] *** Quits: iwkse (~iwkse@iurit.com) (*.net *.split)
[01:01:26] *** Quits: hackedhead_ (~hackedhea@li69-210.members.linode.com) (*.net *.split)
[01:01:26] *** Quits: _janus (~janus@blotter.ld-linux.so) (*.net *.split)
[01:01:26] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[01:01:26] *** Quits: sharpertool (sid80151@hampstead.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: duoi (~duoi@user/duoi) (*.net *.split)
[01:01:26] *** Quits: shodan45 (~quassel@107.161.22.155) (*.net *.split)
[01:01:26] *** Quits: dkliban (~dkliban@nat-pool-rdu-t.redhat.com) (*.net *.split)
[01:01:26] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (*.net *.split)
[01:01:26] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (*.net *.split)
[01:01:26] *** Quits: jraitamaa (~smuxi@alpha.smentos.com) (*.net *.split)
[01:01:26] *** Quits: tureba (~tureba@tureba.org) (*.net *.split)
[01:01:26] *** Quits: okraits (~okraits@v2202004119013114857.ultrasrv.de) (*.net *.split)
[01:01:41] *** Joins: Knyght (sid365271@id-365271.helmsley.irccloud.com)
[01:02:12] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[01:02:16] *** Joins: shodan45 (~quassel@107.161.22.155)
[01:03:03] *** Joins: duoi (~duoi@user/duoi)
[01:03:06] *** Joins: Byteflux (~byte@byteflux.net)
[01:03:27] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[01:05:39] <AnselmoCampanas> FunkyBob, how can I monitor the memcache instance?
[01:05:44] *** Joins: _janus (~janus@blotter.ld-linux.so)
[01:06:32] <AnselmoCampanas> I have googled a lot, but I can't find the problem
[01:06:42] *** Joins: tureba (~tureba@tureba.org)
[01:14:24] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:21:57] *** Joins: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net)
[01:35:10] *** Joins: dre (~dre@2001:8003:c932:c301:1cbc:b9f1:46a9:ac9e)
[01:43:10] *** Quits: pycode (~pycode@2001:b07:5d28:551:1519:1baa:5c70:ac20) (Ping timeout: 258 seconds)
[01:44:46] *** Quits: Thanatos (~Thanatos@197.210.44.192) (Ping timeout: 260 seconds)
[01:53:44] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[01:54:00] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[02:04:12] *** vinleod is now known as vdamewood
[02:04:52] *** Joins: dre_ (~dre@120.156.30.159)
[02:07:25] *** Quits: dre (~dre@2001:8003:c932:c301:1cbc:b9f1:46a9:ac9e) (Ping timeout: 252 seconds)
[02:58:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[03:00:32] *** Joins: fikran (~fikran@user/fikran)
[03:01:57] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:15:16] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:16:19] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[03:16:35] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[03:17:30] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:20:59] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 265 seconds)
[03:21:33] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[03:24:11] *** Quits: jfoster (~textual@user/jfoster) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[03:29:46] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 260 seconds)
[03:32:47] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[03:33:00] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Remote host closed the connection)
[03:37:22] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8) (Remote host closed the connection)
[03:37:31] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Ping timeout: 256 seconds)
[03:38:21] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8)
[03:42:46] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8) (Ping timeout: 258 seconds)
[04:00:24] *** Quits: audiobirb (~audio@2603-8081-1800-1546-0d8f-fc32-e8a3-87bf.res6.spectrum.com) (Ping timeout: 258 seconds)
[04:06:04] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:06:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:12:05] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[04:15:14] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[04:23:11] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8)
[04:29:11] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 264 seconds)
[04:37:01] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 252 seconds)
[04:45:49] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 252 seconds)
[04:58:31] *** Joins: rje (~rje@50.35.241.164)
[05:02:41] *** Joins: The_Jag (~The_Jag@host-87-17-20-218.retail.telecomitalia.it)
[05:03:55] *** Joins: Elodin (~weechat@user/elodin)
[05:05:10] *** Quits: The_Jag_ (~The_Jag@host-80-182-37-74.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[05:06:23] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8) (Ping timeout: 264 seconds)
[05:07:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[05:09:52] *** Joins: fikran (~fikran@user/fikran)
[05:17:15] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[05:21:51] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 244 seconds)
[05:40:11] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Ping timeout: 265 seconds)
[05:41:38] *** Quits: Rikem (~mike@user/rikem) (Ping timeout: 265 seconds)
[05:42:03] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[05:49:41] *** Quits: Knyght (sid365271@id-365271.helmsley.irccloud.com) (Ping timeout: 245 seconds)
[05:50:13] *** Quits: veb (sid43929@ilkley.irccloud.com) (Read error: Connection reset by peer)
[05:50:27] *** Quits: rtpg (sid443069@ilkley.irccloud.com) (Read error: Connection reset by peer)
[05:50:50] *** Quits: schinckel (uid38120@ilkley.irccloud.com) (Read error: Connection reset by peer)
[05:51:04] *** Quits: debnet (sid330295@python/afpy/debnet) (Read error: Connection reset by peer)
[05:51:49] *** Quits: dez (uid92154@user/dez) (Ping timeout: 252 seconds)
[05:52:23] *** Joins: veb (sid43929@id-43929.ilkley.irccloud.com)
[05:52:32] *** Joins: Knyght (sid365271@helmsley.irccloud.com)
[05:52:46] *** Joins: dez (uid92154@user/dez)
[05:52:57] *** Joins: schinckel (uid38120@id-38120.ilkley.irccloud.com)
[05:53:14] *** Joins: debnet (sid330295@python/afpy/debnet)
[05:53:15] *** Joins: rtpg (sid443069@ilkley.irccloud.com)
[05:53:54] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[06:00:46] *** Quits: schinckel (uid38120@id-38120.ilkley.irccloud.com) (Ping timeout: 258 seconds)
[06:02:11] *** Quits: debnet (sid330295@python/afpy/debnet) (Ping timeout: 264 seconds)
[06:02:16] *** Quits: veb (sid43929@id-43929.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[06:02:31] *** Joins: veb (sid43929@ilkley.irccloud.com)
[06:02:47] *** Quits: dez (uid92154@user/dez) (Ping timeout: 264 seconds)
[06:02:58] *** Joins: schinckel (uid38120@ilkley.irccloud.com)
[06:04:04] *** Joins: dez (uid92154@user/dez)
[06:04:06] *** Joins: debnet (sid330295@python/afpy/debnet)
[06:38:11] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 264 seconds)
[06:55:39] *** Joins: Elodin (~weechat@user/elodin)
[06:58:55] *** Joins: Guest67 (~Guest67@pool-100-7-38-116.rcmdva.fios.verizon.net)
[06:59:02] *** Joins: nicode (~nic@2607:f2c0:93cf:4700:226:2dff:fe39:28ac)
[07:17:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[07:19:14] *** Joins: fikran (~fikran@user/fikran)
[07:49:41] *** Quits: Guest67 (~Guest67@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[08:03:49] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 252 seconds)
[08:04:07] *** Joins: djapo (~archangel@user/djapo)
[08:05:08] *** Joins: sourceforge (~Guest56@2001:67c:2628:647:12::1fd)
[08:20:41] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[08:29:39] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[09:03:01] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8)
[09:06:34] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[09:07:37] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8) (Ping timeout: 252 seconds)
[09:11:32] *** Quits: sourceforge (~Guest56@2001:67c:2628:647:12::1fd) (Quit: Client closed)
[09:19:14] *** Joins: yang_ (~yang@d207-6-48-121.bchsia.telus.net)
[09:26:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[09:28:36] *** Joins: fikran (~fikran@user/fikran)
[09:30:35] *** Joins: dor (~erg@78.11.12.207)
[09:34:03] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[09:51:52] *** Joins: hoodwinked (~hoodwinke@108-208-120-36.lightspeed.irvnca.sbcglobal.net)
[09:52:25] *** Quits: hoodwinked (~hoodwinke@108-208-120-36.lightspeed.irvnca.sbcglobal.net) (Client Quit)
[10:01:11] *** Joins: hoodwinked (~hoodwinke@108-208-120-36.lightspeed.irvnca.sbcglobal.net)
[10:16:30] *** Quits: hoodwinked (~hoodwinke@108-208-120-36.lightspeed.irvnca.sbcglobal.net) (Changing host)
[10:16:30] *** Joins: hoodwinked (~hoodwinke@user/hoodwinked)
[10:17:11] *** Parts: hoodwinked (~hoodwinke@user/hoodwinked) (Closing Window)
[10:17:11] *** Joins: hoodwinked (~hoodwinke@user/hoodwinked)
[10:39:46] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.3)
[11:01:34] *** Joins: slav0nic (slav0nic@python.su)
[11:02:11] *** Joins: jug (~jug@user/jug)
[11:03:40] *** Quits: yang_ (~yang@d207-6-48-121.bchsia.telus.net) (Ping timeout: 252 seconds)
[11:09:22] *** Joins: pycode (~pycode@2001:b07:5d28:551:d9a3:bb67:dbc2:bf2d)
[11:19:09] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[11:23:50] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 265 seconds)
[11:26:59] <pycode> hello
[11:27:02] *** Quits: dre_ (~dre@120.156.30.159) (Read error: Connection reset by peer)
[11:27:16] <pycode> can i save a list of sentences in an arrayfield ?
[11:27:40] *** Joins: dre (~dre@2001:8003:c932:c301:7979:11ac:b85b:ca55)
[11:35:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[11:36:33] <duoi> pycode yes
[11:37:07] <pycode> duoi, instead of adding complixity i have Section that needs a Feature list so intead of creating a model called Feature i can simple add strings on that array
[11:37:31] <pycode> i just need to understsand if i can "trasform" that with a list of <input>
[11:37:54] <duoi> The data is there for you to manipulate however you want to, so the answer is always yes
[11:37:57] *** Joins: fikran (~fikran@user/fikran)
[11:38:43] <duoi> features = ArrayField(models.TextField())
[11:38:48] <duoi> the syntax will be something like that on your model
[11:39:22] <pycode> duoi, yes that way yes but then i need to understand how to join it before save
[11:39:29] <pycode> should i transform it in a clean method  duoi ?
[11:42:32] *** Quits: hoodwinked (~hoodwinke@user/hoodwinked) (Quit: Going offline, see ya! (www.adiirc.com))
[11:42:57] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:45:30] <duoi> pycode I don't know the full overview of what you're trying to do so I'm not sure
[11:46:06] <pycode> duoi, that list must be edited by the user, so when i insert a new Section the "features" input list but be added
[11:46:25] <pycode> so iam asking how can i create a list of <input> for that ArrayField
[11:46:38] <pycode> and then how can i get all togheter and join them to save the section
[11:46:53] *** Quits: dre (~dre@2001:8003:c932:c301:7979:11ac:b85b:ca55) (Quit: Leaving)
[11:51:45] <pycode> duoi, i read that i can separated the senteces by a delimiter comma or | or whatever, ok but i should put those sentences inside a separated array of <input>
[11:51:53] <duoi> I'm not sure what your tech stack is, are you saying you want to do this with django templates and django forms?
[11:52:02] <pycode> exactly
[11:52:05] <pycode> i need to create the form
[11:52:12] <pycode> django forms
[11:52:31] <duoi> right, in the past I've done something like this using javascript on the django template to split it out
[11:52:32] <pycode> so i am asking how can i "covert" that input type inside a list of <input type="text">
[11:52:35] <duoi> i just use forms for validation
[11:53:18] <pycode> yes but in this case those <input> will be not managed by django if i add them after the rendering of the django form
[11:53:29] <pycode> {{ form.features }} <-- i would like to create a list
[11:53:34] <pycode> maybe can i create a kind of widget?
[11:53:52] <pycode> feature-1, feature-2, feature-3 and so on
[11:54:18] <duoi> No idea, haven't used forms like that for >5 years, sorry
[11:57:27] <pycode> duoi, i think something like https://stackoverflow.com/questions/39066199/how-can-i-use-a-splitarrayfield-in-a-modelform
[11:58:12] <duoi> is there any reason why you dont just consume the data and construct the html?
[11:58:21] <duoi> is it because you're trying to use this on django admin or somehting?
[12:00:31] <pycode> duoi, no no because i would like to handle everything with a django form... i mean calling {{ form.features }} i would like to see the list of <input>
[12:00:38] <pycode> instead of adding them manually
[12:00:54] <duoi> but why
[12:01:13] <pycode> because if i do not configure them inside a django-form i cant handle validation (i suppose) no?
[12:01:25] <duoi> you can still have the form do your cleaning/validation
[12:02:07] <pycode> duoi, yes but "sounds wrong" if i try to validate fields that i have not configured inside the django-form no?
[12:03:07] <duoi> no not really, if you start to see the form as just a serializer/deserializer then it might change your perspective
[12:04:48] <pycode> hmm ok
[12:07:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:12:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 264 seconds)
[12:19:52] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:52:38] <pycode> duoi, still there?
[13:01:23] <pycode> is there a way to put the size dinamically? https://github.com/django/django/blob/ca9872905559026af82000e46cde6f7dedc897b6/django/contrib/postgres/forms/array.py#L168
[13:04:42] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8)
[13:08:51] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8) (Ping timeout: 245 seconds)
[13:20:14] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[13:24:40] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 258 seconds)
[13:45:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[13:47:17] *** Joins: fikran (~fikran@user/fikran)
[13:50:46] *** Quits: dor (~erg@78.11.12.207) (Ping timeout: 244 seconds)
[14:21:34] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[14:50:55] *** Quits: pycode (~pycode@2001:b07:5d28:551:d9a3:bb67:dbc2:bf2d) (Ping timeout: 258 seconds)
[14:56:08] *** Joins: bjs (sid190364@user/bjs)
[15:05:22] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[15:14:57] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[15:15:01] *** Quits: pidroid (~pidroid@user/pidroid) (Quit: bye !)
[15:17:03] *** Joins: pycode (~pycode@2001:b07:5d28:551:4e14:fa23:db81:c877)
[15:21:00] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[15:25:35] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 264 seconds)
[15:35:08] *** Joins: pidroid (~pidroid@user/pidroid)
[15:53:22] *** Joins: pycode1 (~pycode@93-40-5-81.ip36.fastwebnet.it)
[15:54:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[15:55:19] *** Quits: pycode (~pycode@2001:b07:5d28:551:4e14:fa23:db81:c877) (Ping timeout: 258 seconds)
[15:56:37] *** Joins: fikran (~fikran@user/fikran)
[15:59:30] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[16:04:53] *** Joins: pro_z_ (~pro_z@37.214.46.4)
[16:20:43] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[16:42:17] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[16:44:08] *** Joins: Atque (~Atque@user/atque)
[16:47:37] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[16:51:45] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[16:55:44] *** Quits: pycode1 (~pycode@93-40-5-81.ip36.fastwebnet.it) (Ping timeout: 244 seconds)
[16:56:47] <AnselmoCampanas> Hi! I come here again after looking a lot for the problem, but I can't find it. I have dockerized the project with Django, celery, Redis and memcache. I need to implement a lock for a task as the official celery documentation explains. I am trying to use memcache for saving a value for the lock, and although it seems that the celery task is able to
[16:56:48] <AnselmoCampanas> connect with memcache, the cache.add, cache.set methods save the values. This is the docker-compose.yml (https://dpaste.org/5n0d) and this is how I configured memcache in settings.py (https://dpaste.org/ACoj)... somebody has experienced something similar?
[16:59:20] <AnselmoCampanas> sorry, I wanted to say that cache.add and cache.set do not save the values
[17:06:17] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8)
[17:08:22] <dodo> um, what is the question? you can't connect to the cache?
[17:08:42] <dodo> what happens when you cache.get() ?
[17:09:17] <dodo> fwiw, you use memcached and redis, first guess you're accessing different caches..
[17:10:31] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8) (Ping timeout: 252 seconds)
[17:13:21] <AnselmoCampanas> hi dodo, cache.get does raise errors, bu return None for a key set immediately before
[17:13:45] <AnselmoCampanas> I can connect with the memcache, but it does not save values
[17:14:15] <AnselmoCampanas> in the celery task, and for this lock, I'm using django.cache and not Redis one
[17:14:44] <AnselmoCampanas> sorry, cache.get does not raise errors, a lot of typos today
[17:15:09] <AnselmoCampanas> cache.get does not raise errors, but return None for a key set immediately before
[17:21:51] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[17:26:30] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 260 seconds)
[17:29:33] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:31:36] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8)
[17:32:22] <AnselmoCampanas> would you recommend to use django-redis and use reding cache?
[17:32:27] <AnselmoCampanas> *redis
[17:42:40] *** Joins: Atque (~Atque@user/atque)
[17:45:32] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8) (Remote host closed the connection)
[17:46:40] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8)
[17:48:16] *** Joins: audiobirb (~audio@2603-8081-1800-1546-2a4e-13bb-e70f-f3f7.res6.spectrum.com)
[17:49:00] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8) (Remote host closed the connection)
[17:49:35] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8)
[17:55:31] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8) (Ping timeout: 245 seconds)
[18:01:40] *** Joins: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl)
[18:04:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[18:05:59] *** Joins: fikran (~fikran@user/fikran)
[18:08:32] *** Quits: pbrunier (~pbrunier@84-24-22-131.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[18:14:23] <AnselmoCampanas> ok, finally I could make it work using django-redis as cache backend
[18:14:48] <AnselmoCampanas> exactly the same code worked just changing that, something rare
[18:21:26] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8)
[18:22:45] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[18:24:29] *** Joins: Ergo^ (~ergo@91.238.59.144)
[18:26:46] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8) (Ping timeout: 245 seconds)
[18:42:07] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Quit: Ping timeout (120 seconds))
[18:43:53] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[18:48:58] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8)
[18:55:25] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Quit: Ping timeout (120 seconds))
[19:10:11] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[19:27:26] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:35:08] *** Joins: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net)
[19:52:57] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[20:02:36] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8) (Ping timeout: 245 seconds)
[20:02:58] *** Joins: Kalov (~Thunderbi@181.226.249.159)
[20:09:05] *** Joins: AnselmoCampanas (~AnselmoCa@190.99.69.41)
[20:09:44] <nbjoerg> AnselmoCampanas: when using django's internal memory cache, are you sure that you are in the same process? it is *not* shared between instances
[20:13:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[20:15:19] *** Joins: fikran (~fikran@user/fikran)
[20:21:57] *** Joins: dez (uid92154@user/dez)
[20:30:15] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:30:43] *** Quits: AnselmoCampanas (~AnselmoCa@190.99.69.41) (Ping timeout: 256 seconds)
[20:41:32] *** Joins: pro_z__ (~pro_z@37.214.55.89)
[20:43:02] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[20:44:38] *** Quits: pro_z_ (~pro_z@37.214.46.4) (Ping timeout: 244 seconds)
[20:52:02] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[20:57:15] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8)
[20:58:33] *** Joins: simplicity (~yti@user/simplicity)
[21:02:11] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8) (Ping timeout: 264 seconds)
[21:11:56] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[21:19:35] *** Quits: rje (~rje@50.35.241.164) (Ping timeout: 264 seconds)
[21:19:43] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:b723:b59c:6d5b:2379)
[21:29:07] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:30:29] <pycode1> hello
[21:30:29] <pycode1> is there a way to put the size dinamically? https://github.com/django/django/blob/ca9872905559026af82000e46cde6f7dedc897b6/django/contrib/postgres/forms/array.py#L168
[21:30:54] *** Joins: rje (~rje@50.35.241.164)
[21:33:43] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 244 seconds)
[21:36:39] <pycode1> nevermind i am doing it in another way ... i would like to understand where do you usually put data when you avoid database
[21:37:02] <pycode1> for exmaple i need to load data of packages, so a list of features with their prices
[21:37:02] <doc> pycode1: user uploaded or your own?
[21:37:13] <pycode1> that list is immutable so i thought to put it as initiali data somewhere
[21:37:23] <pycode1> but where i should put that json ?
[21:37:33] <pycode1> my data
[21:37:36] <pycode1> my initial data
[21:37:48] <pycode1> so basically i am creating a new order so i have the package name
[21:37:55] <pycode1> with aroudn 10 features (sentences)
[21:37:58] <pycode1> with their prices
[21:38:05] <pycode1> it is fixed i can put those things in a db
[21:38:06] <pycode1> but
[21:38:11] <doc> dude, enter key abuse
[21:38:18] <pycode1> sounds wrong because creating a table for 1 record.. bah
[21:38:22] <pycode1> pardon doc
[21:38:56] <doc> pycode1: sounds like you can package that with your app
[21:39:04] <pycode1> so basically i have this quote form that i need to load with initial data, i can get the initial data from a db but sounds wrong, so where?
[21:39:18] <pycode1> doc, yes exactly so what can i do? should i create a config file and put that initial data there?
[21:39:32] <doc> pycode1: well you mentioned json, why not just save it as json and load that?
[21:40:11] <pycode1> yes yes sure, i am asking where i should put that json data, inside a view i do not think is correct....or better...ok it will works sure, but i would like to find a way to organize it better
[21:40:25] <doc> this sounds like analysis paralysis :)
[21:40:32] <pycode1> ahahahah
[21:40:37] <doc> just store it as a json file and load it into your python
[21:40:40] <doc> easy as
[21:40:48] <pycode1> inside the app folder root?
[21:40:49] <pycode1> ok
[21:41:12] <pycode1> hahaha
[21:41:18] <pycode1> overcomplicated a bit? ahahaha
[21:41:21] <doc> I mean, is there a reason it shouldn't be? It's only related to that one app, right? If you moved the app, you'd move the data too, right?
[21:41:31] <pycode1> yes yes related to Quote app
[21:41:41] <pycode1> but if i create a .json file i need to read that file for every request
[21:41:44] <doc> It won't change at a much greater rate than the rest of the app, so there's no reason it can't be deployed at the same time.
[21:41:51] <pycode1> so maybe is better to create a .py file with a dictionary there
[21:41:58] <doc> pycode1: is performance a concern?
[21:42:12] <doc> file reads are pretty damn quick
[21:42:17] <pycode1> doc, not to much but form initial data is a dictionary so i can create a dictionary instead.
[21:42:59] <doc> I mean, sure, create it as a standalone dictionary, but there's no major issue with it being json either.
[21:43:11] <pycode1> ok thank you!!
[21:43:20] <pycode1> :)
[21:43:29] <doc> no problem :)
[21:43:46] <pycode1> i will test it and i will understand if i can earn 1/2ms AHAHAH
[21:43:53] <doc> sometimes we all just overthink things rather than thinking "is this really a problem?"
[21:44:00] <pycode1> yes you are right
[21:44:32] <pycode1> then it is saturday 12hours/day all the week so a bit melted
[21:44:38] <pycode1> :D
[21:44:51] <doc> yeah, screw that. I've done that, I'm a better dev when rested
[21:45:34] <doc> I've solved way too many sticky problems after giving up for a day despite deadlines and then going back with a more chill mindset
[21:46:08] <pycode1> you are 100% right
[21:47:15] <pycode1> but django is a framework for perfectionists WITH deadlines so.. ahah ok that's all after this bull...t i can go home
[21:47:18] <pycode1> thank you doc
[21:49:23] <doc> no prob
[21:50:24] <pycode1> i think i can understand it myself (when i reach the limit).. it easy when i see prints like this one: print("saveeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee called")
[21:50:28] <pycode1> XD
[21:50:43] <doc> my logging messages get very sweary
[21:55:41] <pycode1> i feel like a noob, i need to implement logs correctly i cant go with those stupid prints
[21:58:36] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[21:59:35] *** Quits: zcheng3 (~zcheng3@d198-53-38-251.abhsia.telus.net) (Ping timeout: 260 seconds)
[22:02:24] *** Joins: thiras (~thiras@user/thiras)
[22:02:25] <doc> pycode1: logging is nice, just because you can have a terminal open and tail the logs
[22:02:49] <doc> (and also goes on into prod)
[22:03:14] <pycode1> yes you are right
[22:03:21] <pycode1> i need to implement it as soon as possible
[22:03:25] <pycode1> thank you doc i have to go
[22:03:25] <doc> that said, I still use print now and again
[22:03:29] <doc> bye
[22:03:31] <pycode1> bye
[22:03:32] <pycode1> :D
[22:03:34] <pycode1> bye
[22:08:04] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:b723:b59c:6d5b:2379) (Ping timeout: 252 seconds)
[22:11:02] *** Quits: rje (~rje@50.35.241.164) (Read error: Connection reset by peer)
[22:11:17] *** Joins: rje (~rje@50.35.241.164)
[22:20:56] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[22:22:09] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:22:52] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[22:24:41] *** Joins: fikran (~fikran@user/fikran)
[22:45:59] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[22:47:11] *** Quits: pro_z__ (~pro_z@37.214.55.89) (Ping timeout: 245 seconds)
[22:55:29] *** Quits: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net) (Ping timeout: 265 seconds)
[22:56:03] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:01:27] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[23:03:32] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[23:06:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:12:50] *** Quits: Kalov (~Thunderbi@181.226.249.159) (Quit: Kalov)
[23:14:03] *** Joins: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net)
[23:24:27] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[23:24:34] *** Joins: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8)
[23:26:22] *** Quits: doc (~doc@user/doc) (Quit: Things to do)
[23:28:51] *** Quits: ezarowny (~ezarowny@2600:1700:4090:4e8f:10cd:ed8b:99bf:5da8) (Ping timeout: 245 seconds)
