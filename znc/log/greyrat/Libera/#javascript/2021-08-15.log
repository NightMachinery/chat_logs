[00:00:15] <matsaman> being the literal primate cog that keeps advancements in technology from happening rapidly
[00:00:15] <sheetjs> its not an easy job
[00:00:33] <matsaman> should call it the office of profit over progress
[00:00:37] <sheetjs> also github copilot is making that whole activity obsolete
[00:00:58] <sheetjs> mass-scale copyright infringement
[00:01:02] <matsaman> haha
[00:01:24] <silly_> oh yea, somebody please edit this https://www.youtube.com/watch?v=Sdd4Ppd9CwU&t=867s
[00:01:25] <skillbot> YouTube Title: VTS 01 1
[00:01:47] <silly_> i'll try to find the camera man and slap him
[00:02:10] <matsaman> is this a test file for stabilization and anti-blur?
[00:04:34] *** Quits: qswz (~caub@91-175-196-225.subs.proxad.net) (Quit: leaving)
[00:05:06] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[00:10:16] <Rockwood> cya tc
[00:10:23] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[00:12:21] *** Joins: sillyslux__ (~silly@user/silly)
[00:15:17] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[00:16:17] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 268 seconds)
[00:27:23] *** Joins: mattil (~mattil@84-253-224-16.bb.dnainternet.fi)
[00:28:13] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Quit: Must not waste too much time here...)
[00:31:38] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[00:35:49] *** Joins: silly_ (~silly@user/silly)
[00:36:20] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[00:36:38] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[00:36:58] *** Quits: sillyslux__ (~silly@user/silly) (Read error: Connection reset by peer)
[00:40:40] <ljharb> Lewix: why are you not doing anything with the result tho?
[00:41:52] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[00:42:45] *** Joins: noobly (~noobly@50.38.119.3)
[00:48:56] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[00:49:54] *** Parts: noobly (~noobly@50.38.119.3) ()
[00:50:23] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 258 seconds)
[00:54:10] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[00:54:16] *** Quits: mattil (~mattil@84-253-224-16.bb.dnainternet.fi) (Read error: Connection reset by peer)
[00:55:29] *** Joins: Fozzworth (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net)
[00:55:53] *** Fozzworth is now known as Guest552
[01:00:45] <FightingFalcon> How can i get the name of the exact div when a click event occurs? Not the element inside the div which is clicked but the div
[01:00:54] <cantelope> https://code.whitehotrobot.com/d/2w9g
[01:01:54] <FightingFalcon> ?
[01:01:58] <hassoon> FightingFalcon: what do you mean ?
[01:02:45] <hassoon> FightingFalcon: usually you reference the element on which you set up a click event handler, which is a variable name
[01:02:56] <matsaman> FightingFalcon: maybe with .closest()
[01:02:59] <FightingFalcon> <div id="first><h2>whatever</h2><div>stuff here</div><div>anotherdiv</div></div>
[01:03:13] <FightingFalcon> event listener is attached to #first
[01:03:13] <hassoon> FightingFalcon: otherwise event.target might give you descendants of your said div
[01:03:35] <hassoon> FightingFalcon: use the variable on which you attached a click event listener
[01:03:39] <FightingFalcon> i want to the #first as the target but if you click on h2 it gives h2
[01:03:59] <hassoon> FightingFalcon: how is your js code written? share it
[01:04:24] <FightingFalcon> um i think i made it, thanks all
[01:05:26] *** Joins: pyzozord (pyzozord@user/pyzozord)
[01:05:48] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[01:06:00] <pyzozord> hey I wrote this, https://codesandbox.io/s/crazy-lederberg-p082m?file=/src/index.js I was wondering if there is a better way to to handle attaching/detaching functions whenver state chagnes
[01:06:04] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[01:06:22] <pyzozord> maybe I could dynamically change prototype of StateMachine instantce somehow?
[01:10:29] <GreenJello> maybe have all of the methods all of the time, but throw a useful error if they're not usable in the current state
[01:16:46] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[01:19:52] <buu> If I do something like.. form.onsubmit=event.preventDefault(); return false"
[01:19:56] <buu> Is there any way to actually submit the form?
[01:20:37] <ljharb> i mean, hopefully you wouldn't use `.onsubmit` or `return false`
[01:20:40] *** Joins: onosendi1 (~onosendi@user/onosendi)
[01:20:47] <ljharb> buu: but yes. the way would be to turn off JS
[01:20:47] <GreenJello> if you preventDefault in a submit handler, then nope
[01:20:49] <ljharb> otherwise no
[01:20:56] <GreenJello> aside from AJAX
[01:21:24] *** Joins: va5c0 (~vasco.nun@95.148.139.46)
[01:21:27] <ljharb> you could pretty easily clone the form and remove the submit handler tho
[01:21:31] <pyzozord> ideally I'd have something like a dynamic getter
[01:21:38] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[01:22:19] <pyzozord> where i call object.foo() it then calls generic object.unexistingMethodCalled(name) and I can call inside whatever I need
[01:22:45] <ljharb> pyzozord: why are you building a state machine class in the first place?
[01:23:30] <ljharb> seems like a single function that takes a state and returns a state would work fine, without needing to store mutable information
[01:23:56] <pyzozord> just learning about state machines
[01:25:21] *** Quits: onosendi1 (~onosendi@user/onosendi) (Ping timeout: 268 seconds)
[01:49:45] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:51:22] *** Joins: kill (~killown@user/killown)
[01:52:16] <pyzozord> that's the cleanest I could come up with, any ideas how to make it better? https://codesandbox.io/s/holy-surf-s12lb?file=/src/index.js
[01:53:45] *** Quits: roadt_ (~roadt@36.7.132.7) (Ping timeout: 248 seconds)
[01:54:05] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[01:59:38] *** Quits: va5c0 (~vasco.nun@95.148.139.46) (Quit: WeeChat 3.2)
[02:02:34] *** Joins: roadt_ (~roadt@36.7.132.7)
[02:06:02] *** Quits: Guest36 (~Guest36@p200300c8cf2276009739e07be2ed963e.dip0.t-ipconnect.de) (Quit: Client closed)
[02:08:36] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[02:14:47] *** Quits: strive (~strive@user/strive) (Quit: = "")
[02:17:31] *** Joins: strive (~strive@user/strive)
[02:19:29] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[02:21:55] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Ping timeout: 244 seconds)
[02:22:37] *** Quits: Celeo (~Celeo@user/celeo) (Ping timeout: 245 seconds)
[02:22:46] <sheetjs> just shuffle around the functions
[02:23:20] <sheetjs> this.transitions = {}; then each time you a transition, you can pull from the functions store
[02:23:43] <sheetjs> so when you transition to off, this.transitions = { on: ... }
[02:24:53] <pyzozord> sheetjs: not sure what do you mean
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:29] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:40] <jaawerth> the key term sheetjs is describing for finding further reading would be "finite state machine" ;-)
[02:30:42] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[02:31:58] <jaawerth> the coffee machine has one state at a time and each state has a set of other states it could transition to
[02:32:23] <jaawerth> instead of having rules you could model this as a single (circular) data structure
[02:32:41] <jaawerth> even if you don't code it that way it's useful to think of it that way, IMO
[02:33:04] *** Joins: hendursa1 (~weechat@user/hendursaga)
[02:33:21] <sheetjs> its saturday, not the day to be talking about epsilon transitions and the like
[02:33:43] <jaawerth> on the contrary, satuday is the day I talk about what I want
[02:33:59] <jaawerth> 'cause I do what I waaant
[02:34:01] <sheetjs> want to fall down a gaming rabbit hole?
[02:34:20] <sheetjs> turns out that warcraft 3 stores certain asset properties in a SYLK file
[02:34:34] *** Quits: dudek (~dudek@185.150.236.112) (Quit: Leaving)
[02:34:39] <jaawerth> what did you do
[02:34:43] <sheetjs> which is really really weird because SYLK is a microsoft format from 1982 that wasn't even properly documented
[02:35:00] <sheetjs> do you really want to know?
[02:35:13] <jaawerth> you've aleady drawn me in, it's too late
[02:35:36] <sheetjs> last week, came across a funny property about the SYLK files
[02:35:41] <jaawerth> I wonder if they just, like, had some old warcraft code lying around and when they finally worked on Warcraft 3 they were like "fuck it let's just keep that"
[02:35:51] <sheetjs> that doesnt even make sense tho
[02:36:04] <sheetjs> original warcraft was 1994
[02:36:12] <jaawerth> well I'm trying to picture how it would even happen
[02:36:25] <jaawerth> you should tweet some known warcraft devs lol
[02:37:15] <sheetjs> heh
[02:37:17] *** Parts: pyzozord (pyzozord@user/pyzozord) ()
[02:37:17] <buu> What nerdery is going on here
[02:37:30] <sheetjs> SYLK / SLK is a spreadsheet format from the early 1980s
[02:37:57] <sheetjs> recently found out warcraft 3 uses it
[02:38:07] <sheetjs> no part of this story makes sense
[02:38:30] <jaawerth> how did you find this out? did you like run a system searh for .SLK?
[02:38:43] <sheetjs> even worse
[02:38:51] <jaawerth> uh oh
[02:38:52] <sheetjs> i came across a funny issue with sheetjs
[02:39:04] <sheetjs> it affected other parsers too so did a github search
[02:39:10] <sheetjs> https://github.com/PHPOffice/PhpSpreadsheet/issues/2267 for example, phpspreadsheet has the same problem
[02:39:23] <sheetjs> randomly came across https://github.com/runi95/wc3-slk-edit-electron
[02:39:33] <jaawerth> hahahaha
[02:39:40] <sheetjs> and to be surei t was real
[02:39:41] <sheetjs> https://github.com/runi95/wc3-slk-edit-electron/blob/master/resources/app/splats/spawndata.slk
[02:39:50] <sheetjs> that ID line is the key
[02:41:15] *** Quits: Hanii (~textual@host86-138-112-34.range86-138.btcentralplus.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:41:27] <jaawerth> hey now you can market sheetjs as  warcraft 3 modding tool. you'll be rich rich, richer than astronauts!
[02:41:52] <sheetjs> https://github.com/Drake53/War3Net/blob/master/src/War3Net.IO.Slk/SylkParser.cs here's a .NET repo for warcraft 3 formats
[02:42:29] <sheetjs> https://github.com/Promises/WC3-json-to-slk here's a writer written in typescript
[02:43:55] <sheetjs> the weird thing about the format is it's old and undocumented
[02:44:05] <sheetjs> CSV or TSV would've been a much better choice in 1995
[02:44:36] *** Joins: smilingfrog (~smilingfr@S01061cabc06a4f03.no.shawcable.net)
[02:44:40] <sheetjs> and in 2002 there was really no reason to use it for a greenfield project
[02:44:51] *** Joins: dmgk (~dmgk@user/dmgk)
[02:46:24] <sheetjs> its been an extremely weird month to say the least
[02:46:53] *** Quits: smilingfrog (~smilingfr@S01061cabc06a4f03.no.shawcable.net) (Client Quit)
[02:46:54] <jaawerth> I *still* like tsv because it's trivial to parse and you can display it tabularly with `column` on the CLI lol
[02:47:16] <jaawerth> (it's also awk-friendly...)
[02:47:40] <sheetjs> I like PRN, informally "TSV for adults"
[02:47:46] <sheetjs> PRN is a really old format from Lotus 1-2-3
[02:47:55] <jaawerth> interesting
[02:48:03] <sheetjs> no delimiters, whitespace used to align columns
[02:48:26] <sheetjs> designed for human use, so makes for a bad format for automation
[02:48:28] <jaawerth> interesting
[02:50:40] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:51:38] <sheetjs> kinda curious if they stuck with SYLK for warcraft III reforged
[02:52:32] *** Joins: thiras (~thiras@user/thiras)
[02:53:49] *** Joins: onosendi1 (~onosendi@user/onosendi)
[02:55:23] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[03:02:27] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[03:03:17] *** Joins: hendursaga (~weechat@user/hendursaga)
[03:05:21] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Reconnecting)
[03:05:38] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[03:06:17] *** Quits: onosendi1 (~onosendi@user/onosendi) (Ping timeout: 248 seconds)
[03:08:18] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[03:08:55] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[03:12:44] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 252 seconds)
[03:14:25] *** Quits: codingcampbell (~codingcam@user/codingcampbell) (Quit: Ping timeout (120 seconds))
[03:14:46] *** Joins: codingcampbell (~codingcam@user/codingcampbell)
[03:17:12] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Ping timeout: 244 seconds)
[03:17:34] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[03:21:17] *** Joins: Praise (~Fat@user/praise)
[03:22:51] *** Quits: magellanicloud (~magellani@2a02:810b:c3bf:fc38:9ba3:b034:ec2b:39cb) (Remote host closed the connection)
[03:27:26] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[03:37:41] *** Joins: ferdna (~ferdna@user/ferdna)
[03:40:01] *** Joins: Celeo (~Celeo@user/celeo)
[03:45:29] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:8ce1:69c1:b612:d4f0)
[03:51:25] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:53:50] <cthulchu> omg, array functions are a blessing
[03:53:53] <cthulchu> God-sent
[03:53:57] <cthulchu> just amazing
[03:54:02] <cthulchu> I feel so powerful
[03:54:03] <cthulchu> with them
[03:54:33] <cthulchu> I can parse anything extremely concisely and efficiently
[03:54:37] <cthulchu> it feels like cheating.
[03:54:50] <sheetjs> reduce is the one true array function, everything else is a special case
[03:55:07] <ljharb> they can mostly all be implemented in terms of each other
[03:55:21] <ljharb> !iterations @ cthulchu
[03:55:22] <jellobot> cthulchu, ECMAScript's Array contains a number of built-in methods for iteration (e.g., map, reduce, every, some, filter, and forEach). They relieve the need for manual iteration, provide better abstraction than a `for` loop, and make it clear what your iteration is doing. See https://gist.github.com/ljharb/58faf1cfcb4e6808f74aae4ef7944cff
[03:55:25] <neshpion> are you talking about things like Array.prototype.my_array_function = function() ... ?
[03:55:39] <neshpion> or just the built-in ones
[03:55:50] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:55:52] <ljharb> neshpion: good god, i hope only the built in ones
[03:55:53] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 248 seconds)
[03:55:57] <ljharb> neshpion: never ever ever modify objects you don't own
[03:55:58] <neshpion> :^^^^0
[03:56:01] <neshpion> s/0/)
[03:56:04] <ljharb> that'd be horrifically bad code
[03:56:05] <cthulchu> buil-in ones
[03:56:15] <cthulchu> the ones lj highlighted
[03:57:21] *** Joins: theh (~theh@user/theh)
[03:58:34] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[04:03:10] *** Quits: amcsi (~amcsi@2E8B6851.catv.pool.telekom.hu) (Read error: Connection reset by peer)
[04:10:39] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[04:13:14] *** Quits: matsaman (~matsaman@user/matsaman) (Remote host closed the connection)
[04:15:54] *** Parts: theh (~theh@user/theh) ()
[04:16:02] <jaawerth> reduce/fold is definitely the ultimate in generalized data-munging
[04:16:14] <jaawerth> and/or processing etc
[04:18:55] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 258 seconds)
[04:26:58] *** Quits: Zauberfisch (~Zauberfis@cm83-180.liwest.at) (Ping timeout: 272 seconds)
[04:27:16] *** Joins: Zauberfisch (~Zauberfis@cm83-180.liwest.at)
[04:30:56] *** Joins: gry (~quassel@botters/gry)
[04:33:13] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[04:33:15] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[04:36:11] <cthulchu> you know what? I think you should be able to catch exceptions originated in nested functions.
[04:36:32] <cthulchu> in fact, I can't believe it's not possible
[04:36:50] <cthulchu> ok, how do you do it?
[04:38:01] <cis> cthulchu: that's how it works, isn't it?
[04:38:28] <cis> unless I misunderstand what you're asking
[04:38:56] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Quit: Atum_)
[04:39:23] <GreenJello> it works as long as the exception is thrown before your try/catch ends, and as long as nothing deeper caught the error
[04:40:03] <cthulchu> by deeper, what do you mean?
[04:40:09] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 248 seconds)
[04:40:24] <GreenJello> deeper in the call stack
[04:41:00] <GreenJello> if you call a function that has a try/catch, then it can handle the error itself
[04:41:20] <GreenJello> and it has the option to rethrow or throw another error
[04:41:30] <cthulchu> I want to try catch a huge blob of many times nested functions.
[04:42:01] <cthulchu> so that internal functions would be able to skip try catch
[04:44:07] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.2)
[04:44:20] <cis> cthulchu: do you mean functions whose definitions are nested in other functions, or functions which call other functions?
[04:44:33] <cthulchu> both
[04:44:43] <cthulchu> oh
[04:45:05] <cthulchu> so if a function is defined outside of try catch, but then called in try catch, and throws an error, then try catch doesn't catch it?
[04:45:20] <cis> it should
[04:45:29] <cthulchu> ok, then why does it NOT catch it?
[04:45:31] <GreenJello> it only matters where the function is invoked
[04:45:35] <cthulchu> sorry, when
[04:45:38] <cthulchu> right
[04:45:40] <cis> is something else catching it?
[04:45:45] <cthulchu> right
[04:46:04] <cis> it would be clearer if you could share some code
[04:46:50] <cthulchu> so then it's possible to catch any exception of the whole codebase with one global top-level try catch that appends something to every error before rethrowing it
[04:47:05] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 248 seconds)
[04:47:22] <cthulchu> I remember someone here warning me about some counterinuitive caviat of try catch
[04:47:33] <cthulchu> anyhow, I guess It's fine
[04:52:19] *** Sven_vB_ is now known as Sven_vB
[04:54:28] *** Joins: sillyslux__ (~silly@user/silly)
[04:56:02] *** Joins: silly (~silly@user/silly)
[04:57:47] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 252 seconds)
[04:58:41] *** Joins: funhouse (~funhouse@user/funhouse)
[04:58:49] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 248 seconds)
[04:58:52] *** Joins: silly_ (~silly@user/silly)
[05:01:29] *** Quits: silly (~silly@user/silly) (Ping timeout: 248 seconds)
[05:11:02] *** Joins: c4017_ (~c4017@2604:3d08:747f:7c90:54b4:c0da:a55c:9131)
[05:11:52] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[05:11:55] *** Joins: sillyslux__ (~silly@user/silly)
[05:14:42] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:d869:df28:2173:ba54) (Ping timeout: 240 seconds)
[05:15:58] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 268 seconds)
[05:22:10] *** phenom is now known as phenom_
[05:23:08] *** phenom_ is now known as plenum
[05:23:17] *** Joins: gggp_ (~gggp@114.243.61.163)
[05:23:18] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[05:23:54] *** Joins: gehn (~gehn@user/gehn)
[05:25:17] <codebam> what's the easiest way to determine the type that a function argument should be in typescript? I'm trying to get rid of all the "any" 's that I have
[05:25:38] <cis> codebam: read the code and choose the appropriate type
[05:26:11] <codebam> cis: what would the type be for a form onsubmit event handler?
[05:26:14] <GreenJello> it can be quite hard to do this after writing a considerable amount of code
[05:26:56] <codebam> it says this https://paste.sbehan.ca/files/aNy.png
[05:27:13] <GreenJello> codebam, you would look up the DOM type definition files and look for something appropriate, or you might use the class in the DOM for that event type
[05:27:13] <codebam> when I try setting it to (event: Event)
[05:27:55] <GreenJello> ah, in react event handlers there are react-specific types
[05:28:24] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[05:28:32] <codebam> I found this but I don't see any types https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/submit
[05:28:58] <GreenJello> check the react or react-dom type definitions
[05:29:18] <GreenJello> search for the types referenced there
[05:29:42] <GreenJello> specifically FormEvent
[05:29:53] <cis> codebam: types are specific to typescript, but MDN documents javascript
[05:30:24] <codebam> oh I see there's React.FormEvent
[05:30:27] <GreenJello> HTMLFormElement is a DOM class, independent of typescript
[05:31:08] <GreenJello> codebam, then use that, and HTMLFormElement can be referenced without a namespace
[05:31:55] <codebam> oh okay I see. I got that working now without any reference
[05:31:57] <codebam> thank you!
[05:32:54] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[05:36:38] *** plenum is now known as phenom
[05:36:38] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:cd9d:361a:f2d1:7694) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:39:48] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[05:43:26] *** Quits: cismee (~cisme_@2600:1700:d980:1a40:fd72:9d6b:de6e:3790) (Ping timeout: 252 seconds)
[05:44:17] *** Quits: Naan (~naan@user/naan) (Ping timeout: 245 seconds)
[05:53:06] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[05:55:11] *** Joins: chovy_ (~chovy@64.27.14.223)
[05:55:57] *** Quits: chovy_ (~chovy@64.27.14.223) (Client Quit)
[05:56:21] *** Joins: chovy_ (~chovy@64.27.14.223)
[05:58:52] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[06:10:38] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:47a9:31b5:b487:b261)
[06:12:03] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[06:12:06] *** Joins: Guest3880 (~kamui-ren@2001:470:69fc:105::f74)
[06:14:48] *** Joins: hax (~hax@69.165.175.67)
[06:14:48] *** Quits: hax (~hax@69.165.175.67) (Changing host)
[06:14:48] *** Joins: hax (~hax@user/hax)
[06:17:01] *** Joins: matsaman (~matsaman@user/matsaman)
[06:18:03] *** Joins: jjm (~Guest2@c-71-192-137-216.hsd1.nh.comcast.net)
[06:21:52] *** Quits: gggp_ (~gggp@114.243.61.163) (Remote host closed the connection)
[06:22:17] *** Joins: gggp_ (~gggp@114.243.61.163)
[06:22:27] *** Quits: jjm (~Guest2@c-71-192-137-216.hsd1.nh.comcast.net) (Changing host)
[06:22:27] *** Joins: jjm (~Guest2@user/jjm)
[06:26:06] *** Joins: TRCoder (~TRCoder@c-76-119-39-115.hsd1.ma.comcast.net)
[06:29:59] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[06:34:46] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[06:35:08] *** Quits: TRCoder (~TRCoder@c-76-119-39-115.hsd1.ma.comcast.net) (Quit: Client closed)
[06:52:12] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[06:53:04] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[06:53:27] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[07:00:56] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[07:11:48] *** Quits: mei (~mei@user/mei) (Ping timeout: 258 seconds)
[07:12:11] *** Quits: jjm (~Guest2@user/jjm) (Quit: Client closed)
[07:13:51] *** Quits: chovy_ (~chovy@64.27.14.223) (Quit: leaving)
[07:21:44] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:8954:d8dc:26ce:39ea) (Quit: Leaving)
[07:24:06] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[07:28:40] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 258 seconds)
[07:44:27] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[07:48:18] *** Quits: gggp_ (~gggp@114.243.61.163) (Ping timeout: 268 seconds)
[07:49:00] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 272 seconds)
[08:00:06] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 258 seconds)
[08:07:23] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[08:22:02] *** Joins: Rockwood (~Rocky@user/rocky)
[08:22:41] <theskillwithin> 🦚
[08:23:02] <Rockwood> o/
[08:25:45] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 248 seconds)
[08:33:25] *** Quits: codebam (~codebam@user/codebam) (Remote host closed the connection)
[08:33:29] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[08:34:36] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 258 seconds)
[08:44:26] *** Joins: codebam (~codebam@user/codebam)
[08:49:10] *** Quits: _nderscore (~nderscore@silentf.art) (Quit: Goodbye!)
[08:49:56] *** Joins: _nderscore (~nderscore@silentf.art)
[08:51:41] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[08:53:57] *** Joins: JennyB (~ircuser@S01069050ca4e3573.cg.shawcable.net)
[08:56:27] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 258 seconds)
[09:02:28] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[09:03:00] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[09:03:19] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[09:03:29] *** Joins: onosendi (~onosendi@user/onosendi)
[09:04:10] <onosendi> How am I getting a prop type error in `Bar` when it's not even mounted? https://dpaste.org/OHqD
[09:07:43] <theskillwithin> onosendi you can't return two sibling elements, you would have to wrap it in a fragment
[09:07:51] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[09:08:12] <theskillwithin> return (<> <p>foobar</p> {open && <Bar {...foo} />} </> )
[09:08:34] <onosendi> theskillwithin: yeah, I know that :P I wrote it in dpaste and forgot them. That's not the issue though.
[09:08:48] <onosendi> theskillwithin: btw, did you see dude's bow and arrow auto aimbot?
[09:09:01] <theskillwithin> Ya
[09:13:54] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[09:17:42] <theskillwithin> onosendi I don't see any errors when i make it a codesandbox https://codesandbox.io/s/eager-thunder-m1lbt?file=/src/App.js
[09:18:02] <onosendi> theskillwithin: yeah, it doesn't make sense.
[09:18:56] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[09:19:14] <theskillwithin> why are you returning a string
[09:20:50] <theskillwithin> whats the actual error say
[09:21:48] <theskillwithin> hard to debug when your not pasting the actual code your using
[09:24:43] <onosendi> theskillwithin: I'm not returning a string. I dumbed it down as much as possible for the sake of the channel. https://dpaste.org/9Veb - `showThankYou` is `false` on first render, and doesn't get set to true until `submit()` succeeds.
[09:24:54] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[09:26:55] <theskillwithin> const [showThankYou, setShowThankYou] = useState(true);
[09:27:01] <theskillwithin> initial state is true
[09:28:08] <theskillwithin> line 59, ur using useState, but it looks like your trying to use it like useEffect
[09:28:39] <onosendi> Blah
[09:29:25] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 258 seconds)
[09:30:29] <onosendi> theskillwithin: that fixed it. I'll just say I'm tired as my excuse for that.
[09:30:45] <theskillwithin> happens to the best of us
[09:32:47] *** Quits: Emil (emil@emil.fi) (Quit: leaving)
[09:34:45] <onosendi> I'm done for the night. Thanks theskillwithin, much appreciated.
[09:34:48] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.2)
[09:35:03] <theskillwithin> =]
[09:35:47] <theskillwithin> new thing I started doing with forms, is I wrap everything inside <form> in a <fieldset>   and use that to disable the entire form at once
[09:36:10] <theskillwithin> like <form><fieldset disabled={loading}> ..... </fieldset></form>
[09:37:09] <theskillwithin> or maybe this is better <fieldset disabled={loading} aria-busy={loading}>
[09:37:28] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:37:45] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:47:53] *** Quits: LiftLeft (~LiftLeft@212.102.58.180) (Ping timeout: 248 seconds)
[09:49:21] *** Quits: zerowalker (~ZeroWalke@2001:9b1:28f8:8300:4532:e5c1:92f2:919) (Ping timeout: 258 seconds)
[10:06:58] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[10:14:41] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[10:16:16] *** Joins: gehn (~gehn@user/gehn)
[10:17:01] *** Joins: mei (~mei@user/mei)
[10:19:22] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[10:22:08] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:23:01] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[10:27:47] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 252 seconds)
[10:36:35] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[10:37:28] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 272 seconds)
[10:41:30] *** Joins: tertullian_ (~tertullia@182.70.210.82)
[10:43:05] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[10:44:19] *** Joins: Rockwood (~Rocky@user/rocky)
[10:47:39] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[10:49:25] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:51:10] *** Quits: tertullian_ (~tertullia@182.70.210.82) (Quit: leaving)
[10:55:44] *** Joins: Akimb (~Akimb@86.100.13.100)
[10:59:15] *** Joins: cismee (~cisme_@108-218-190-101.lightspeed.frsnca.sbcglobal.net)
[10:59:43] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:47a9:31b5:b487:b261) (Remote host closed the connection)
[11:00:27] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[11:00:38] *** Joins: zerowalker (~ZeroWalke@2001:9b1:28f8:8300:d34:63a5:5ca9:1ab1)
[11:03:45] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[11:07:53] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 248 seconds)
[11:12:57] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[11:13:20] <whatsupdoc> Hi, I am trying to build a Google Chrome extension.
[11:13:47] <whatsupdoc> I need access to Github, so I used a "https://github.com/login/oauth/authorize" URL
[11:14:14] <whatsupdoc> My question is when the webpage changes, it becomes "https://github.com/?code=XXXXXXXXXXX"
[11:14:54] <whatsupdoc> In Javascript, how do I detect that the website changed and grab the new URL so I get the code?
[11:15:30] <whatsupdoc> The page redirects from "https://github.com/login/oauth/authorize" to "https://github.com/?code=XXXXXXXXXXX"
[11:15:36] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:15:44] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[11:16:10] <Maxdamantus> Are you not using a redirect URI?
[11:16:22] *** Quits: jetchisel (jetchisel@user/jetchisel) (Client Quit)
[11:16:27] *** Joins: yaymukund (~yaymukund@user/yaymukund)
[11:17:01] <whatsupdoc> No
[11:17:13] <whatsupdoc> I just redirect to github.com
[11:17:17] <yaymukund> What's this language or syntax? https://stackoverflow.com/a/21338754 `->`, no parens around the `if-`conditional o_O
[11:17:51] <Maxdamantus> whatsupdoc: you mean you're specifying the redirect_uri as "https://github.com/"?
[11:17:57] <yaymukund> (the top example)
[11:18:00] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 272 seconds)
[11:18:06] <whatsupdoc> Yes I think so
[11:18:43] <Maxdamantus> You're not going to know the client_secret for that URI (if there is one).
[11:19:15] <Maxdamantus> You need to have your own "redirect_uri" and a "client_secret" that has been provisioned for that URI by the auth provider (GitHub).
[11:20:09] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 248 seconds)
[11:20:28] <whatsupdoc> But I generated a client_secret and have it
[11:21:08] *** Joins: mattil (~mattil@87-92-192-25.rev.dnainternet.fi)
[11:21:36] *** Joins: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[11:22:17] <whatsupdoc> What is a client_secret anyway?
[11:23:35] <Maxdamantus> whatsupdoc: Actually, I guess it will correspond to the client_id rather than the redirect_uri, so maybe theoretically it will work.
[11:23:46] *** Quits: rogorido (~rogorido@mail.georeligion.org) (Quit: ZNC 1.8.2+deb1 - https://znc.in)
[11:24:40] *** Joins: rogorido (~rogorido@mail.georeligion.org)
[11:29:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:30:27] <whatsupdoc> How long do Authorization Codes last for?
[11:30:50] <Maxdamantus> Not long.
[11:31:07] <Maxdamantus> You use them to request an access token.
[11:31:26] <whatsupdoc> I don't really get the point of having a server if you can use the code you get in the url to access any data
[11:31:45] <Maxdamantus> The authorization code is just a one-use thing, and it should be used immediately, so it's reasonable for a provider to consider them invalid within a minute or so.
[11:32:21] <Maxdamantus> Well, you can't. You need an access token to access the data, not an authorization code.
[11:32:56] <Maxdamantus> The auth client is able to exchange the authorization code for an access token by also providing the client secret.
[11:35:25] <whatsupdoc> I thought authorization code gives you permanent access to their Github account
[11:35:28] <whatsupdoc> No?
[11:36:31] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Quit: tccki)
[11:36:34] <Maxdamantus> No. Only the access token, but it doesn't necessarily give full access. That depends on what scopes were requested.
[11:36:56] *** Quits: rogorido (~rogorido@mail.georeligion.org) (Quit: ZNC 1.8.2+deb1 - https://znc.in)
[11:37:45] <Maxdamantus> https://docs.github.com/en/developers/apps/building-oauth-apps/scopes-for-oauth-apps#available-scopes
[11:37:50] *** Joins: rogorido (~rogorido@mail.georeligion.org)
[11:38:06] *** Joins: gggp (~gggp@114.245.109.49)
[11:38:28] <whatsupdoc> I am using repo scope
[11:38:53] *** Joins: tccki (~tccki@box.webslate.co.nz)
[11:39:45] *** Quits: sillyslux__ (~silly@user/silly) (Read error: Connection reset by peer)
[11:42:02] <whatsupdoc> So is it not possible?
[11:42:30] <whatsupdoc> I want to grab the authorization code from a generic website like http://github.com?
[11:43:06] *** Quits: rogorido (~rogorido@mail.georeligion.org) (Quit: ZNC 1.8.2+deb1 - https://znc.in)
[11:43:19] <yaymukund> What's the most efficient way to read the data from a websocket message into an object (in the browser)?
[11:44:00] *** Joins: rogorido (~rogorido@mail.georeligion.org)
[11:44:58] <yaymukund> looks like I have to go through JSON.parse ..?
[11:46:23] <theskillwithin> yaymukund I have no idea what that is, but its not javascript, if i had to guess its coffeescript
[11:46:42] <theskillwithin> yaymukund referring to the link u provided way earlier
[11:46:45] <yaymukund> ya i just realized it's from 2014 and figured as much -_-;
[11:46:52] <yaymukund> thank you!
[11:49:32] <yaymukund> i wonder if i can just send bytes from the server and the read bytes into an object without having to allocate a string in between or parse JSON manually.
[11:50:16] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:8954:d8dc:26ce:39ea)
[11:50:28] *** Joins: pulse (~pulse@user/pulse)
[11:52:21] <whatsupdoc> what if i make it a random impossible redirect website like alksdjfalskdfjwoeiffjldsk.com and then grab the authorization code from that using if url.startsWith("alksdjfalskdfjwoeiffjldsk.com") in my Chrome extension or is that a bad idea?
[11:53:10] <theskillwithin> yaymukund idk websockets, but i don't see how json is bad
[11:54:21] <whatsupdoc> I just can't afford a server running constantly processing requests, so trying to avoid it
[11:55:00] *** Joins: IceMichael (~IceMichae@p4fc2474b.dip0.t-ipconnect.de)
[11:55:19] <IceMichael> php, yeah or add ?random to the URL
[11:55:40] <theskillwithin> yaymukund you can always just turn the json into a js object after, its not hard
[11:59:30] <yaymukund> theskillwithin: I'm not saying it's hard. It also performs well enough for most use-cases. I'm just trying to develop a mental model for how the bytes move around, and what level of control JS (in the browser) gives you.
[11:59:46] <Rockwood> yaymukund, are you using PHP as backend?
[12:01:00] <yaymukund> If you do JSON.parse(), you need to allocate a string, right? It seems like you should be able to avoid that allocation
[12:01:03] <theskillwithin> yaymukund well json is more performant than a js object anyways
[12:01:11] <yaymukund> Rockwood: no
[12:01:53] <Rockwood> websocket for what?
[12:02:06] <yaymukund> It's also possible this gets optimized out by V8/spidermonkey/etc, so maybe this doesn't matter.
[12:04:08] <theskillwithin> yaymukund avoid the allocation how?
[12:04:51] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[12:04:53] <theskillwithin> yaymukund im confused what your problem is
[12:05:20] <no_gravity> This fiddle breaks jsfiddle here: https://jsfiddle.net/4k28un3d/
[12:05:59] <no_gravity> After loading it, JSfiddles "Run" button is broken.
[12:06:33] <theskillwithin> no_gravity haha
[12:06:56] <theskillwithin> no_gravity how did you figure that out, dang
[12:07:06] <no_gravity> theskillwithin: Not only the run button now opens a new window, check the console of that window. It is in some kind of infinite loop spitting out stuff.
[12:08:04] <no_gravity> I wanted to see what the scope of event handlers is when the event handler is a function inside a module.
[12:09:49] <theskillwithin> no_gravity badass
[12:10:20] <theskillwithin> no_gravity altho i find it a bit cringe you didn't put your attribute values in ""
[12:10:43] <no_gravity> theskillwithin: You don't have to if they don't contain spaces.
[12:11:45] <theskillwithin> apparently, but still
[12:11:55] <no_gravity> I it liks human language. You say: I asked her if she wants to marry me and she said yes!
[12:12:04] <no_gravity> Only if the answer is longer, you use quotes:
[12:12:16] <no_gravity> I asked her if she wants to marry me and she said "Fuck off, idiot!".
[12:13:49] <yaymukund> theskillwithin: I do not know how to avoid the allocation. That is exactly my question
[12:14:20] <no_gravity> yaymukund: We are here to help!
[12:14:46] <yaymukund> If I get an arrayBuffer from `event.data`, then I need to create a `FileReader` and then `readAsArrayBuffer` into text and then JSON.parse that, right?
[12:15:12] <yaymukund> I'm trying to avoid the `readAsArrayBuffer` into text piece of that, because it requires allocating a string
[12:15:51] <no_gravity> yaymukund: Either make a minimal example on jsfiddle or some other codebin, or via the bot here in the channel.
[12:16:40] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 256 seconds)
[12:18:48] <yaymukund> minimal example of what? doing that operation I just described?
[12:20:18] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[12:20:29] <no_gravity> yaymukund: Probably.
[12:20:40] <yaymukund> haha
[12:21:59] <no_gravity> How can it be that the fiddle escapes the iframe sandbox?
[12:23:06] <theskillwithin> its always scary dealing with the shadow dom
[12:23:14] <theskillwithin> dun dun dun
[12:23:42] <fruitypunk> twilight music
[12:26:04] <no_gravity> jsfiddle has their PMs closed on Twitter :/
[12:26:31] *** Joins: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr)
[12:28:29] *** Joins: Rockwood (~Rocky@user/rocky)
[12:28:56] <theskillwithin> no_gravity should look up if they have a bug bounty program, could make money
[12:29:56] *** Joins: Rockwood_ (~Rocky@user/rocky)
[12:30:25] <no_gravity> theskillwithin: They only seem to have a bug tracker on GitHub.
[12:30:55] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[12:31:05] <theskillwithin> https://hackerone.com/jsfiddle?type=team
[12:31:47] <no_gravity> theskillwithin: Whats that?
[12:32:51] <no_gravity> It would be interesting to see the cause of this.
[12:33:10] <no_gravity> Breaking a parent frame via code in an iframe? Very strange.
[12:33:39] <theskillwithin> no_gravity well you said u wanted to contact them right?
[12:33:48] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 258 seconds)
[12:34:17] <theskillwithin> no_gravity thats how I would do it
[12:34:30] <no_gravity> theskillwithin: I don't want to sign up to some website to send a message.
[12:35:03] <theskillwithin> oh haha this site is a bug bounty site
[12:35:44] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:26] *** Joins: silly (~silly@user/silly)
[12:36:36] <theskillwithin> a lot of hackers make a shit ton of money finding exploits and reporting to programs like this
[12:37:57] <leduyquang753> Well that shit ton of money doesn't just come from nowhere.
[12:38:18] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:38:48] <theskillwithin> 🙄
[12:40:22] <fruitypunk> drugs, blood diamonds
[12:40:46] <fruitypunk> illegal moon travel
[12:41:08] *** Joins: matti_ (~mattil@87-92-192-25.rev.dnainternet.fi)
[12:41:38] <wintersky> jesus, jahve, madonna, holy spirit
[12:41:41] <no_gravity> This one line seems to be enough to break the jsfiddle interface: https://jsfiddle.net/3s6uqpa9/
[12:43:54] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[12:44:05] *** Joins: Camilo (~hugh@host-92-20-143-244.as13285.net)
[12:44:27] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:44:55] *** Quits: mattil (~mattil@87-92-192-25.rev.dnainternet.fi) (Ping timeout: 268 seconds)
[12:45:21] *** Joins: eXistenZ (~biskit@bzq-109-67-141-65.red.bezeqint.net)
[12:45:31] *** Quits: eXistenZ (~biskit@bzq-109-67-141-65.red.bezeqint.net) (Read error: Connection reset by peer)
[12:48:59] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[12:49:31] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[12:50:00] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[12:50:43] <yaymukund> I think this library addresses my question: https://github.com/LangZhai/json-bufferify
[12:51:17] *** Joins: sunbae (~euk@user/sunbae)
[12:52:37] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[12:52:58] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:55:01] <yaymukund> well, sort of
[12:57:43] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[12:59:13] <no_gravity> Looks like the fiddle escape is a known bug: https://github.com/jsfiddle/jsfiddle-issues/issues/1631
[13:03:05] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:07:02] <theskillwithin> no_gravity oh
[13:11:05] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 248 seconds)
[13:15:04] *** Quits: rogorido (~rogorido@mail.georeligion.org) (Quit: ZNC 1.8.2+deb1 - https://znc.in)
[13:16:42] *** Joins: rogorido (~rogorido@mail.georeligion.org)
[13:17:56] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[13:19:29] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[13:22:32] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[13:22:41] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[13:23:43] *** Joins: codebam (~codebam@user/codebam)
[13:24:18] *** Quits: rogorido (~rogorido@mail.georeligion.org) (Quit: ZNC 1.8.2+deb1 - https://znc.in)
[13:25:11] *** Joins: rogorido (~rogorido@mail.georeligion.org)
[13:26:47] *** Quits: rogorido (~rogorido@mail.georeligion.org) (Client Quit)
[13:27:42] *** Joins: rogorido (~rogorido@mail.georeligion.org)
[13:28:32] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[13:30:14] *** Quits: rogorido (~rogorido@mail.georeligion.org) (Client Quit)
[13:31:08] *** Joins: rogorido (~rogorido@mail.georeligion.org)
[13:31:55] *** Quits: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr) (Quit: Leaving)
[13:35:26] *** Quits: azizLIGHT (~azizLIGHT@user/azizlight) (Ping timeout: 252 seconds)
[13:36:16] *** Joins: azizLIGHT (~azizLIGHT@user/azizlight)
[13:37:14] *** Quits: Ducki_ (~ducki@user/ducki) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[13:37:57] *** Quits: sunbae (~euk@user/sunbae) (Ping timeout: 268 seconds)
[13:48:47] *** Joins: Ducki (~ducki@user/ducki)
[14:02:04] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[14:04:17] *** Quits: rogorido (~rogorido@mail.georeligion.org) (Quit: ZNC 1.8.2+deb1 - https://znc.in)
[14:04:38] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 272 seconds)
[14:05:09] *** Joins: rogorido (~rogorido@mail.georeligion.org)
[14:12:33] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:15:00] *** Joins: irthewinner (~null@bzq-79-180-186-169.red.bezeqint.net)
[14:17:08] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[14:17:35] *** Rockwood_ is now known as Rockwood
[14:18:04] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[14:18:42] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[14:19:52] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[14:24:12] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 258 seconds)
[14:28:52] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[14:31:37] *** Quits: doji (~doji@user/doji) (Read error: Connection reset by peer)
[14:32:33] *** Joins: doji (~doji@user/doji)
[14:33:46] *** Joins: sunbae (~euk@82.85-87-220.dynamic.clientes.euskaltel.es)
[14:36:10] *** Quits: sunbae (~euk@82.85-87-220.dynamic.clientes.euskaltel.es) (Changing host)
[14:36:10] *** Joins: sunbae (~euk@user/sunbae)
[14:38:41] *** Quits: sunbae (~euk@user/sunbae) (Quit: leaving)
[14:40:50] *** Quits: JennyB (~ircuser@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[14:42:09] *** Joins: andai (~andai@ip26-92-214-87.adsl2.static.versatel.nl)
[14:43:52] *** Quits: rogorido (~rogorido@mail.georeligion.org) (Quit: ZNC 1.8.2+deb1 - https://znc.in)
[14:44:28] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[14:44:46] *** Quits: vqueiroz (uid340368@stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:45:12] *** Joins: diamondbond (~diamondbo@175.157.123.42)
[14:46:22] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[14:46:34] *** Quits: diamondbond (~diamondbo@175.157.123.42) (Client Quit)
[14:46:36] *** Joins: rogorido (~rogorido@mail.georeligion.org)
[14:48:24] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[14:48:24] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[14:48:24] *** Joins: Heraes (~Heraes@user/romarain)
[14:48:32] *** Joins: gggp_ (~gggp@125.33.82.254)
[14:48:33] *** Quits: Heraes (~Heraes@user/romarain) (Read error: Connection reset by peer)
[14:51:20] *** Quits: gggp (~gggp@114.245.109.49) (Ping timeout: 268 seconds)
[14:55:36] *** Joins: jtomas (~jtomas@233.red-83-34-2.dynamicip.rima-tde.net)
[15:03:40] *** Parts: andai (~andai@ip26-92-214-87.adsl2.static.versatel.nl) ()
[15:09:59] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:20:16] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:24:57] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 248 seconds)
[15:26:46] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[15:27:23] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[15:30:03] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:eddb:c93b:fa60:14e0)
[15:32:38] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[15:33:03] *** Joins: hendursa1 (~weechat@user/hendursaga)
[15:45:41] *** Quits: recyclehero (~alistar@li2306-178.members.linode.com) (Ping timeout: 252 seconds)
[15:50:33] *** Joins: pulse (~pulse@user/pulse)
[15:58:06] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:f496:296d:50d8:b5b)
[16:01:23] *** Joins: gggp__ (~gggp@114.243.61.163)
[16:04:07] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[16:04:42] *** Quits: gggp_ (~gggp@125.33.82.254) (Ping timeout: 268 seconds)
[16:12:48] *** Joins: Tempesta (~Tempesta@user/tempesta)
[16:20:39] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:8954:d8dc:26ce:39ea) (Quit: Leaving)
[16:21:29] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:26:17] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[16:31:33] *** Joins: Rockwood_ (~Rocky@user/rocky)
[16:35:07] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 245 seconds)
[16:35:54] *** Joins: hacks (~hax@69.165.175.67)
[16:35:54] *** Quits: hacks (~hax@69.165.175.67) (Changing host)
[16:35:54] *** Joins: hacks (~hax@user/hax)
[16:37:12] *** Joins: ___Rockwood__ (~Rocky@user/rocky)
[16:39:37] *** Quits: hax (~hax@user/hax) (Ping timeout: 248 seconds)
[16:40:11] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[16:41:05] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 268 seconds)
[16:44:57] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 248 seconds)
[16:47:30] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:8954:d8dc:26ce:39ea)
[16:52:30] *** ___Rockwood__ is now known as Rockwood
[16:54:48] *** Joins: WishBoy (~WishBoy@user/wishboy)
[16:55:27] *** Quits: Rockwood (~Rocky@user/rocky) (Remote host closed the connection)
[16:56:50] *** Joins: Rockwood (~Rocky@user/rocky)
[17:03:38] *** kill is now known as php
[17:06:31] *** Joins: RougeR (~rougex250@user/rouger)
[17:10:43] *** Joins: dudek (~dudek@185.150.236.112)
[17:15:41] <DPA> Is there a place to propose a new html feature? I would like to propose an <textarea type="qr" />. It'd be cool if the browser could just provide a button in the textarea, which opens an in-browser camera view when pressed, which fills in the textarea with the first detected qr code.
[17:15:41] <DPA> Because my bank website only provides a textarea, and expects me to have a scanner software that pastes in there or use their app. (Usecase swiss qr codes). But the first is inconvenient, and I don't want the second. And I don't think they'll ever add a qr code scanner js library to the webpage.
[17:21:41] *** Quits: irthewinner (~null@bzq-79-180-186-169.red.bezeqint.net) (Quit: Leaving)
[17:22:09] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:23:27] *** Joins: OnkelBlade (~OnkelTem@user/onkeltem)
[17:23:39] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 268 seconds)
[17:26:33] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 248 seconds)
[17:36:02] *** Joins: susi (owl@huumeet.info)
[17:36:54] <susi> I have user.js and user-overrides.js with my Firefox, how would I 'source' -overrides.js from user.js? the user_prefs
[17:38:32] <incognito> DPA: the regular inbrowser camera after a regular button click doesn't fit iyo ?
[17:45:25] *** Quits: Camilo (~hugh@host-92-20-143-244.as13285.net) (Quit: WeeChat 2.8)
[18:07:59] *** Joins: thiras (~thiras@user/thiras)
[18:10:10] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:10:23] *** Quits: rustyshackleford (uid236774@brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[18:10:36] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:23:13] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:24:41] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Ping timeout: 268 seconds)
[18:27:53] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 248 seconds)
[18:40:58] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[18:42:48] *** Joins: onosendi (~onosendi@user/onosendi)
[18:45:29] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 248 seconds)
[18:46:01] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Ping timeout: 248 seconds)
[18:46:06] <optimant> DPA: One challenge is that QR can enode many different data types and the standardization varies.
[18:51:40] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[18:52:37] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:53:40] *** Quits: gggp__ (~gggp@114.243.61.163) (Ping timeout: 268 seconds)
[19:00:34] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[19:05:24] *** Quits: IceMichael (~IceMichae@p4fc2474b.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[19:22:34] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[19:24:03] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:25:06] <deniska> also "qr code" is a registered trademark
[19:25:17] <deniska> it was also patented, but seems like that expired
[19:26:45] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:28:50] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 272 seconds)
[19:29:40] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:31:26] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[19:32:24] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 258 seconds)
[19:35:47] *** Joins: thiras (~thiras@user/thiras)
[19:36:12] *** Pixi_ is now known as Pixi
[19:36:47] *** Joins: cthulchu (~Cthulchu@194.44.110.194)
[19:41:22] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[19:43:20] *** Joins: LiftLeft (~LiftLeft@154.21.28.123)
[19:45:56] *** Quits: moldorcoder7_ (~moldorcod@37.120.143.28) (Ping timeout: 272 seconds)
[19:49:26] *** Quits: OnkelBlade (~OnkelTem@user/onkeltem) (Ping timeout: 256 seconds)
[20:02:28] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[20:02:41] *** Parts: susi (owl@huumeet.info) ()
[20:03:59] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[20:05:15] *** php is now known as killown
[20:08:09] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[20:08:40] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[20:10:04] <Deneb> is the performace of javascrip in Firefox particularly slow? I am collaborating on a project which seems to work fine in Chrome, Safari and Edge, but is very slow in FF and IE11. I can understand problems with IE11 but was rather surpised that FF was so unbearably slow.
[20:12:37] *** Joins: gambl0re (~gambl0re@104.247.245.205)
[20:13:09] <onosendi> Deneb: does restarting FF fix the issue?
[20:14:36] <Deneb> onosendi: no, I'm afraid not. It seems inherent to FF.
[20:15:32] <Deneb> I am just looking around to see whether there are any performace tests I could run
[20:19:43] *** Joins: codebam (~codebam@user/codebam)
[20:24:12] *** Quits: gpap (~gpap@athedsl-386770.home.otenet.gr) (Quit: Leaving)
[20:24:22] *** Joins: Rockwood_ (~Rocky@user/rocky)
[20:25:05] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:26:39] *** Joins: Naan (~naan@user/naan)
[20:26:48] *** Quits: roadt_ (~roadt@36.7.132.7) (Ping timeout: 268 seconds)
[20:27:15] *** Joins: roadt_ (~roadt@36.7.132.7)
[20:27:25] *** Quits: cthulchu (~Cthulchu@194.44.110.194) (Ping timeout: 268 seconds)
[20:27:48] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 272 seconds)
[20:29:29] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 248 seconds)
[20:35:14] <paulcarroty> Chrome JS performance is better in general
[20:36:01] <Deneb> paulcarroty: with this particular project it is miles ahead of FF
[20:36:56] <Deneb> I generally work on Linux. On windows the difference is even more striking.
[20:39:13] <paulcarroty> Google invested in V8 tuning a lot and Mozilla ... if anybody know what they doing now - tell me 🤠 maybe too busy with MDN Pro
[20:39:31] <Deneb> are there any tools in FF that can help me determine whether there is a particular part of the code or even a specific command that is slowng things down?
[20:40:01] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:40:30] <silly> i can see a performance tab in ff devtools, on first glance it looks the same as in chrome
[20:40:46] <Deneb> I just did the online test at https://browserbench.org/Speedometer2.0/ and FF actually got a faster score 60.1. vs 65.77. Curious.
[20:41:12] <Deneb> ah, yes, so there is. Will have to explore that.
[20:41:48] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[20:43:08] *** Joins: IceMichael (~IceMichae@p4fc2474b.dip0.t-ipconnect.de)
[20:43:19] *** Joins: silly_ (~silly@user/silly)
[20:44:56] *** Quits: silly (~silly@user/silly) (Read error: Connection reset by peer)
[20:46:31] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[20:52:05] *** Quits: IceMichael (~IceMichae@p4fc2474b.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[20:52:54] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 256 seconds)
[20:56:16] *** Joins: Akimb (~Akimb@86.100.13.100)
[20:58:12] *** Rockwood_ is now known as Rockwood
[21:04:29] *** Joins: looby (~Robinson@mobile-access-b04845-165.dhcp.inet.fi)
[21:05:01] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[21:10:29] *** Quits: looby (~Robinson@mobile-access-b04845-165.dhcp.inet.fi) (Quit: looby)
[21:13:27] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:8954:d8dc:26ce:39ea) (Quit: Leaving)
[21:20:52] *** Joins: ferdna (~ferdna@user/ferdna)
[21:22:02] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[21:26:09] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[21:27:47] *** Joins: entuland (~entuland@user/entuland)
[21:30:49] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 248 seconds)
[21:34:14] <onosendi> When you click "open", this works as expected: https://codesandbox.io/s/red-silence-g51ql?resolutionWidth=661&resolutionHeight=342&file=/src/App.js. The issue comes in when the blue box is smaller than the white box, like this: https://codesandbox.io/s/red-silence-g51ql?resolutionWidth=611&resolutionHeight=164&file=/src/App.js. Any ideas?
[21:34:57] *** Joins: Betal (~Betal@user/betal)
[21:37:57] <Rockwood> bye
[21:38:02] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:40:47] *** Quits: RougeR (~rougex250@user/rouger) (Ping timeout: 268 seconds)
[21:43:53] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[21:48:25] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 248 seconds)
[21:50:04] *** Joins: codebam (~codebam@user/codebam)
[21:52:30] *** Joins: vysn (~vysn@user/vysn)
[21:54:46] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.2)
[21:58:50] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[22:00:16] *** Joins: codebam (~codebam@user/codebam)
[22:01:20] *** Joins: sillyslux__ (~silly@user/silly)
[22:02:04] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[22:02:30] *** Joins: onosendi (~onosendi@user/onosendi)
[22:03:41] *** Joins: han-solo (~hanish@user/han-solo)
[22:06:54] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[22:07:16] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[22:07:23] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[22:07:38] *** Joins: vysn (~vysn@user/vysn)
[22:07:55] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[22:09:00] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[22:09:20] *** Joins: codebam (~codebam@user/codebam)
[22:09:30] *** Joins: iffraff (~quassel@136.49.178.170)
[22:17:39] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[22:18:02] *** Joins: vysn (~vysn@user/vysn)
[22:19:50] *** Joins: silly_ (~silly@user/silly)
[22:20:51] *** Quits: sillyslux__ (~silly@user/silly) (Read error: Connection reset by peer)
[22:22:52] *** Joins: cthulchu (~Cthulchu@194.44.110.194)
[22:27:13] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:28:42] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[22:29:58] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:ec72:a5cd:f0a6:2c93)
[22:32:04] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[22:33:31] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[22:40:46] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[22:42:33] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[22:43:31] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[22:47:23] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[22:48:47] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[22:50:25] *** Joins: sillyslux__ (~silly@user/silly)
[22:50:55] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[22:53:34] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (Ping timeout: 268 seconds)
[22:54:58] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[22:55:30] *** Quits: sagax (~sagax@213.138.71.146) (Ping timeout: 240 seconds)
[22:56:57] *** Quits: iffraff (~quassel@136.49.178.170) (Quit: No Ping reply in 180 seconds.)
[22:57:05] *** Joins: iffraff (~quassel@136.49.178.170)
[22:57:10] *** Quits: iffraff (~quassel@136.49.178.170) (Client Quit)
[22:58:42] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:04:21] *** Joins: no_gravi1y (~no_gravit@user/no-gravity/x-5639427)
[23:05:11] <no_gravi1y> When I run "time node nothing.js" where nothing.js is an empty file, it takes 0.5s. Why is that?
[23:05:35] <no_gravi1y> Does that mean node as a backend language will add 0.5s of overhead to every request?
[23:05:46] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:05:54] <sheetjs> thats process start time
[23:06:12] <sheetjs> so if you're doing a CGI-style run-process-every-request then yes it will be 0.5s
[23:06:27] <GreenJello> no_gravi1y, that looks an order of magnitude too high
[23:06:30] <no_gravi1y> Why does node need 0.5s to start up?
[23:06:36] <no_gravi1y> GreenJello: Well, I see it on my screen.
[23:06:39] <sheetjs> but if you're using node to run the server, e.g. using http.createServer or express, then you wont pay that every time
[23:06:58] <no_gravi1y> sheetjs: So node needs kind of an application server?
[23:07:04] <sheetjs> GreenJello:  that sounds about right for raspberry pi 0
[23:07:21] <no_gravi1y> sheetjs: It is inside a docker container on my laptop.
[23:07:23] <sheetjs> node ships with the ability to run servers out of the box
[23:07:30] <no_gravi1y> PHP needs 0.03s in the same container.
[23:07:47] <sheetjs> that `time` command is just showing how long it takes to start up node and process the script
[23:07:54] <no_gravi1y> sheetjs: Sure
[23:08:02] <sheetjs> you don't measure apache startup time right?
[23:08:18] <no_gravi1y> sheetjs: Apache does not add much.
[23:08:21] <sheetjs> the time you are measuring is spiritually closer to the time it takes to startup apache
[23:08:41] <sheetjs> to put it differently, in the past there were two software (apache and php) and now there is one
[23:08:46] <no_gravi1y> "time wget 127.0.0.1" on the same machine: 0.009s
[23:08:54] <sheetjs> apples to oranges
[23:09:06] <sheetjs> try this
[23:09:42] *** Joins: mdemo (~mdemo@c-73-40-53-74.hsd1.va.comcast.net)
[23:09:43] <sheetjs> https://nodejs.org/en/docs/guides/getting-started-guide/ run the first code segment
[23:09:49] <sheetjs> that starts a server on port 3000
[23:10:02] <sheetjs> then `time wget http://127.0.0.1:3000/`
[23:10:05] <no_gravi1y> sheetjs: But is that how you run a nodejs application in production?
[23:10:09] <GreenJello> yes
[23:10:18] <sheetjs> in production you
[23:10:36] <sheetjs> may do extra things like putting an nginx reverse proxy between the outside world and node
[23:10:49] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[23:10:50] <sheetjs> load balancing etc
[23:10:50] <GreenJello> you run the server and only restart it when deploying new code or updating the node.js version
[23:11:08] <no_gravi1y> sheetjs: If you only run one server, why put nginx in front of it?
[23:11:22] <GreenJello> you can have 30 second startup time without issue
[23:11:31] <sheetjs> ssl termination
[23:11:51] <sheetjs> i find it easier to make the node process host an  http server and use nginx to handle https
[23:12:18] <GreenJello> yeah, especially with letsencrypt
[23:12:38] <no_gravi1y> sheetjs: Tried the app.js and yes, it answers in 0.01s
[23:13:33] <no_gravi1y> That is interesting. So that is how JS backends are served in production these days?
[23:13:45] <GreenJello> yeah
[23:14:05] <no_gravi1y> What are the most popular frameworks?
[23:14:26] <no_gravi1y> What is similar to Djang/Flask/Laravel/Symfony in the JS world?
[23:14:30] <GreenJello> express is by far the most popular
[23:14:49] <GreenJello> there's nothing compelling in the django/laravel space
[23:15:11] <GreenJello> it's more of a composition of packages ecosystem
[23:16:10] <no_gravi1y> https://trends.google.com/trends/explore?q=express%20framework,laravel%20framework,django%20framework,flask%20framework
[23:16:26] <no_gravi1y> Better:
[23:16:28] <no_gravi1y> https://trends.google.com/trends/explore?date=all&q=express%20framework,laravel%20framework,django%20framework,flask%20framework
[23:16:42] <no_gravi1y> Django seems way ahead in popularity.
[23:17:06] <no_gravi1y> But I sure will dive into express so I know what it is about.
[23:18:23] <GreenJello> or people don't google "express framework"
[23:18:30] <GreenJello> can't say I ever hav
[23:18:35] <GreenJello> have*
[23:18:52] <no_gravi1y> Github just published some yearly statistics ... lets check those..
[23:19:03] <GreenJello> but I have no idea how popularity compares between langauges/frameworks
[23:19:50] <no_gravi1y> https://insights.stackoverflow.com/survey/2021
[23:20:27] <no_gravi1y> Funny, that has jQuery at #2 for "Web frameworks".
[23:20:47] <no_gravi1y> But Express at #3. Interesting.
[23:21:11] <no_gravi1y> Why do they lump together backend and frontend frameworks?
[23:21:49] <GreenJello> react technically runs on both, but fair point
[23:22:21] <no_gravi1y> Strange. Google trends seem to have very different results:
[23:22:26] <no_gravi1y> https://trends.google.com/trends/explore?date=all&q=python%20django,javascript%20express
[23:23:07] <GreenJello> google trends is really hard to draw conclusions from
[23:23:13] <no_gravi1y> Why?
[23:24:28] <GreenJello> it doesn't really say anything aside from how many searches there are
[23:24:41] <cis> "express.js" or "express js" is likely the search term people use
[23:25:14] <no_gravi1y> cis: True: https://trends.google.com/trends/explore?date=all&q=python%20django,javascript%20express,python%20flask,express%20js
[23:25:30] <cis> no_gravi1y: your original question about full js frameworks though... the popular thing for js these days is Next.js
[23:25:33] <GreenJello> for example, django does more than express, so you might search for info about the django ORM thing, but for a node/express app you use knex which isn't affiliated with express
[23:25:43] <no_gravi1y> What is that giant drop in August 2020?
[23:26:01] <no_gravi1y> GreenJello: Good point.
[23:26:22] <cis> express.js is really barebones compared to those other frameworks
[23:26:40] <no_gravi1y> Wow, next js: https://trends.google.com/trends/explore?date=all&q=python%20django,next%20js,python%20flask,express%20js
[23:27:14] <no_gravi1y> So why is next not at all on the SO survey?
[23:27:24] <cis> no_gravi1y: when was the survey?
[23:27:40] <no_gravi1y> cis: https://insights.stackoverflow.com/survey/2021
[23:27:43] <no_gravi1y> cis: May 2021
[23:27:48] <GreenJello> next is just react + express + glue code
[23:28:13] <cis> yeah, plus a preconfigured build system and some reasonable defaults
[23:28:17] <GreenJello> it could be its own thing on the survey, or be considered an extension of others
[23:29:01] <no_gravi1y> The latter might be the reason.
[23:29:50] <no_gravi1y> GreenJello: Why does next need react on the backend? What does react do there?
[23:30:11] <cis> no_gravi1y: server side rendering
[23:30:50] <no_gravi1y> cis: I see.
[23:30:54] <GreenJello> it renders your app on the server (producing html), and then the client can take over when JS loads
[23:31:07] <GreenJello> it's called universal rendering
[23:31:07] <no_gravi1y> I don't think I like that approach.
[23:31:15] <cis> next can do that either dynamically, on each page load, or at build time for static pages
[23:31:16] <no_gravi1y> I prefer simple templating.
[23:31:40] <GreenJello> depends on what you're doing
[23:31:59] <no_gravi1y> <h1>Hello {NAME}!</h1> for the win!
[23:32:29] <GreenJello> simple templates work for some sites, but it can become very difficult to manage as complexity grows
[23:32:37] <sillyslux__> handlebars? nunchucks?
[23:32:56] <no_gravi1y> sillyslux__: handlebars works nicely for me on the backend.
[23:32:56] <cis> no_gravi1y: for static template rendering there's 11ty... I've been meaning to try that one out
[23:33:19] *** Joins: Arthur (IRC@gateway/vpn/airvpn/arthurmelo/x-07739757)
[23:33:33] <no_gravi1y> Man, I gotta stop for today. Too much reading about tech for today.
[23:33:38] *** Quits: Arthur (IRC@gateway/vpn/airvpn/arthurmelo/x-07739757) (Client Quit)
[23:33:40] <no_gravi1y> Thanks for the nice discussion! Cu tomorrow!
[23:33:42] *** Quits: no_gravi1y (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[23:36:11] *** Joins: arthur_melo (IRC@gateway/vpn/airvpn/arthurmelo/x-07739757)
[23:37:45] *** Quits: arthur_melo (IRC@gateway/vpn/airvpn/arthurmelo/x-07739757) (Client Quit)
[23:38:36] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[23:39:53] *** Quits: mei (~mei@user/mei) (Ping timeout: 248 seconds)
[23:40:46] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[23:40:50] *** Joins: vysn (~vysn@user/vysn)
[23:42:06] *** Joins: arthur_melo (IRC@gateway/vpn/airvpn/arthurmelo/x-07739757)
[23:43:11] *** Quits: arthur_melo (IRC@gateway/vpn/airvpn/arthurmelo/x-07739757) (Client Quit)
[23:46:10] <cantelope> https://codegolf.dweet.net/a/561
[23:46:15] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[23:46:22] *** Joins: arthur_melo (IRC@gateway/vpn/airvpn/arthurmelo/x-07739757)
[23:47:29] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[23:48:02] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 245 seconds)
[23:51:18] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[23:53:34] *** Quits: arthur_melo (IRC@gateway/vpn/airvpn/arthurmelo/x-07739757) (Quit: arthur_melo)
[23:54:48] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[23:55:14] *** Joins: vysn (~vysn@user/vysn)
[23:56:41] *** Quits: vysn (~vysn@user/vysn) (Client Quit)
