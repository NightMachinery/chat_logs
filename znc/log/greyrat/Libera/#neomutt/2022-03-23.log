[00:01:11] *** Quits: darkbit (~db@152.32.100.99) (Ping timeout: 245 seconds)
[00:15:26] *** Quits: rgrinberg (~textual@2806:102e:18:c0c1:a896:63f7:5249:df28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:23:47] *** Joins: rgrinberg (~textual@2806:102e:18:c0c1:a896:63f7:5249:df28)
[00:35:42] *** Joins: strajder (~strajder@user/strajder)
[00:52:22] *** Quits: rgrinberg (~textual@2806:102e:18:c0c1:a896:63f7:5249:df28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:54:15] *** Joins: rgrinberg (~textual@187.144.82.175)
[00:55:39] *** Quits: rgrinberg (~textual@187.144.82.175) (Client Quit)
[01:12:12] *** Quits: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10) (Ping timeout: 240 seconds)
[01:29:35] *** Quits: kzak (~kzak@nat-37.starnet.cz) (Ping timeout: 256 seconds)
[01:59:33] *** Quits: rsaavedra (~rodrigo@user/rsaavedra) (Quit: WeeChat 3.4)
[02:16:19] *** Quits: strcat_ (~strcat@p548541a3.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[02:18:16] *** Joins: CrashOverride (~strcat@p54855a92.dip0.t-ipconnect.de)
[02:27:50] *** Quits: qub411 (~user@60-242-81-127.tpgi.com.au) (Quit: WeeChat 3.4.1)
[02:36:37] *** Joins: vysn (~vysn@user/vysn)
[02:44:05] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[02:45:46] *** Quits: strajder (~strajder@user/strajder) (Quit: gn)
[02:54:24] *** Joins: qub411 (~user@60-242-81-127.tpgi.com.au)
[02:55:58] *** Quits: qub411 (~user@60-242-81-127.tpgi.com.au) (Client Quit)
[02:57:05] *** Joins: qub411 (~user@60-242-81-127.tpgi.com.au)
[03:10:44] *** Joins: saki (~saki@gateway/tor-sasl/saki)
[03:11:31] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:22:47] *** Quits: qub411 (~user@60-242-81-127.tpgi.com.au) (Quit: WeeChat 3.4.1)
[03:23:53] *** Joins: qub411 (~user@60-242-81-127.tpgi.com.au)
[03:39:01] *** Quits: qub411 (~user@60-242-81-127.tpgi.com.au) (Ping timeout: 240 seconds)
[03:40:24] *** Joins: qub411 (~user@60-242-81-127.tpgi.com.au)
[03:42:16] *** Quits: qub411 (~user@60-242-81-127.tpgi.com.au) (Client Quit)
[03:43:17] *** Joins: qub411 (~user@60-242-81-127.tpgi.com.au)
[03:51:51] *** Quits: amigan (dramoray@dtvax.dynatron.me) (Quit: patches)
[03:52:10] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:54:06] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[04:02:15] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[04:02:44] *** Joins: amigan (dramoray@dtvax.dynatron.me)
[04:04:50] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:19:56] *** Quits: reset (~reset@user/reset) (Quit: reset)
[04:37:36] *** Joins: dcpurton (~dcpurton@113.197.13.151)
[04:54:33] *** Quits: flatcap (flatcap@neomutt/flatcap) (Quit: WeeChat 3.4)
[04:54:34] *** Quits: neo-bot (~neo-bot@flatcap.org) (Remote host closed the connection)
[04:55:44] *** Joins: neo-bot (~neo-bot@flatcap.org)
[04:55:53] *** Quits: Pali (~pali@user/pali) (Ping timeout: 268 seconds)
[04:56:01] *** Quits: dcpurton (~dcpurton@113.197.13.151) (Ping timeout: 250 seconds)
[04:56:03] *** Joins: flatcap (flatcap@neomutt/flatcap)
[05:26:21] *** Joins: netx (~netx@23-24-2-197-static.hfc.comcastbusiness.net)
[05:41:34] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[05:54:06] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:56:17] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[06:01:03] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Ping timeout: 252 seconds)
[06:06:07] *** Quits: inak (~justme@228-134-237-24.gci.net) (Quit: Leaving)
[06:06:24] *** Joins: vysn (~vysn@user/vysn)
[06:11:34] *** Joins: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10)
[06:32:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:50] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[06:34:50] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[06:34:50] *** Joins: maetthew (~maetthew@user/maetthew)
[06:58:15] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 252 seconds)
[07:05:50] *** Joins: dcpurton (~dcpurton@1.124.105.253)
[08:05:41] *** Quits: riesebie (~riesebie@user/riesebie) (Ping timeout: 256 seconds)
[08:05:48] *** Joins: riesebie (~riesebie@ip-005-056-237-152.um04.pools.vodafone-ip.de)
[08:05:48] *** Quits: riesebie (~riesebie@ip-005-056-237-152.um04.pools.vodafone-ip.de) (Changing host)
[08:05:48] *** Joins: riesebie (~riesebie@user/riesebie)
[08:21:51] *** Quits: netx (~netx@23-24-2-197-static.hfc.comcastbusiness.net) (Ping timeout: 252 seconds)
[08:26:49] *** Quits: qub411 (~user@60-242-81-127.tpgi.com.au) (Quit: WeeChat 3.4.1)
[08:36:35] *** Quits: dcpurton (~dcpurton@1.124.105.253) (Ping timeout: 250 seconds)
[08:46:13] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[08:57:21] *** Joins: jotoho (~jotoho@user/jotoho)
[09:00:56] *** Parts: hwrd (aa272caead@2604:bf00:561:2000::137) (WeeChat 3.4.1)
[09:10:38] *** Joins: weirdsmiley (~weirdsmil@103.25.231.102)
[09:54:47] *** Joins: dcpurton (~dcpurton@1.124.106.36)
[10:15:30] *** Quits: jotoho (~jotoho@user/jotoho) (Quit: Closing client)
[10:39:20] *** Quits: sbach (~sbach@user/sbach) (Read error: Connection reset by peer)
[10:40:57] *** Quits: dcpurton (~dcpurton@1.124.106.36) (Ping timeout: 256 seconds)
[10:41:31] *** Joins: sbach (~sbach@user/sbach)
[10:57:27] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[10:57:43] *** Joins: madage (~madage@user/madage)
[11:08:33] *** Joins: vysn (~vysn@user/vysn)
[11:15:46] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[11:18:23] *** Joins: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c)
[11:50:18] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:00:12] *** Quits: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c) (Ping timeout: 252 seconds)
[12:00:43] *** Joins: kzak (~kzak@nat-37.starnet.cz)
[12:04:34] <gahr> morning
[12:20:27] *** Joins: reset (~reset@user/reset)
[13:05:50] *** Quits: baloona (~baloona@mail.baloona.de) (Remote host closed the connection)
[13:06:39] *** Joins: baloona (~baloona@mail.baloona.de)
[13:23:57] *** Joins: Pali (~pali@user/pali)
[13:40:57] *** Quits: Pali (~pali@user/pali) (Ping timeout: 240 seconds)
[14:02:26] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 245 seconds)
[14:03:32] *** Joins: azed (~azed@197.19.177.23)
[14:09:21] *** Joins: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c)
[14:11:39] *** Quits: azed (~azed@197.19.177.23) (Ping timeout: 252 seconds)
[14:21:10] *** Joins: realguy (~jan@user/realguy)
[14:45:12] *** Quits: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c) (Ping timeout: 252 seconds)
[14:49:25] <flatcap> morning all
[14:51:41] <gahr> hi flatcap 
[14:55:30] <flatcap> hi gahr 
[14:56:03] <flatcap> #3316?  oh! :-)
[14:56:03] <neo-bot> PR by @gahr "Do not insert an actual key mapping for noop": https://github.com/neomutt/neomutt/pull/3316
[14:57:50] <gahr> yeah, I had an interesting morning
[14:58:15] <gahr> was woken up at 5 because of an epic fail at $job, which got solved by the time I was able to connect 
[14:58:22] <gahr> so I was left wondering what to do:)
[14:58:34] <flatcap> hehe, lucky us :-)
[14:59:03] <gahr> if that PR makes sense to you, since I'm looking at that code, I'd like to get rid of LastKey
[15:00:31] <flatcap> ah, I'm aware of LastKey. (I've been looking at key handling with respect to menus)
[15:01:09] <flatcap> an ugly hack (is my most favourable description :-)
[15:01:48] <flatcap> how are you going to replace it?
[15:02:47] <gahr> by making km_dokey return both the op and the key pressed
[15:03:03] <gahr> and providing specialized functions for OP_JUMP initiated by a number
[15:03:37] <flatcap> great!
[15:05:05] <flatcap> is it common for work to hassle you out-of-hours?
[15:05:19] <gahr> not, it happens rarely
[15:06:20] <flatcap> good :-)
[15:07:22] <gahr> are you going to be mad at OP_JUMP_1 .. OP_JUMP_9 ?
[15:08:09] <flatcap> hmm...
[15:09:37] <flatcap> it's not brilliant, but it's better than "color quoted" and "color quoted{0..9}" (which are orthogonal to the rest of the colours :-)
[15:10:22] <gahr> I'll do a PoC
[15:10:32] <gahr> I don't like it either, but LastKey I hate proper.
[15:10:43] * flatcap wonders... can the user actually `bind index j jump` ?
[15:10:56] * flatcap tries
[15:11:13] <flatcap> yep
[15:11:39] <gahr> sure
[15:11:45] <gahr> you just won't get the first digit inserted
[15:12:30] <flatcap> oh, I just remembered something
[15:12:44] *** Joins: Guest71 (~Guest71@2001:1711:fa5c:b750::86c)
[15:13:00] <flatcap> just a potential feature that was discussed *long* ago
[15:13:30] <flatcap> in vim, numbers are queued as a potential *count*
[15:14:12] <Guest71> Hi there, when trying to send PGP-encrypted mail, I am getting the following error: "error encrypting data: Unusable public key". This happens with or without signing, with different recipient keys (even with my own key, which is ultimately trusted). I turned on debugging but couldn't find much in the log, just this:
[15:14:13] <Guest71> <E> encrypt_gpgme_object() error encrypting data: Unusable public key
[15:14:13] <Guest71> I found a recent article: https://blog.tfiu.de/mutt-says-error-encrypting-data-unusable-public-key-.html where this seems to be related to a missing subkey, but I don't think this is my case.
[15:14:14] <Guest71> Any ideas?
[15:14:14] <Guest71> Thanks!
[15:14:34] <flatcap> we realised that it wouldn't clash to have: `123<enter>` be a jump and `123d` be a 123 deletes (probably a bad example :-)
[15:15:04] <Guest71> ..... gpg on the command line works fine.
[15:16:20] <flatcap> that would require the numbers to be cached "somewhere", and displayed like the "tag-" prefix
[15:17:24] <flatcap> I'm not suggesting you implement this, but please could you have a quick think about how we might go about it
[15:18:53] * gahr thinks
[15:18:59] * flatcap thanks
[15:26:27] *** Quits: sss1_ (~sss1@107.189.11.85) (Ping timeout: 252 seconds)
[15:26:28] <flatcap> Guest71: I'm not a crypto-expert, but have a close look at the output of `gpg -k FRIENDS_ID`
[15:26:51] *** Joins: sss1_ (~sss1@107.189.11.85)
[15:27:00] <flatcap> on some keys, I see a separate expiry date for the subkey
[15:27:33] <flatcap> if gpg on the command-line works, then there must be an [E] (encryption) section (but check that too)
[15:30:46] <flatcap> also, you could try `gpg --refresh-keys` to make sure your keys are up-to-date (assuming your friend's key is published)
[15:34:15] <flatcap> hmm... looking at the code, I see that the error message "Unusable public key" is coming from GPGME, not NeoMutt
[15:35:58] <gahr> yep we don't "own" the error
[15:37:23] <gahr> Guest71: I don't think it's related to us (read: gpgme) not being able to pick a non-expired subkey
[15:37:53] <gahr> unless all the keys you are trying to encrypt to are expired and have unexpired subkeys
[15:38:06] *** Joins: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c)
[15:38:34] <gahr> flatcap: a difference between vim and us is that we tend to treat numbers as message numbers, which might not be consecutive if you have threading enabled and unexpanded
[15:38:48] <gahr> so would 4d mean delete the next 4 visible emails? 
[15:38:54] <gahr> or delete email 4?
[15:39:19] <gahr> or delete this email, then the next one that becomes visible, then loop
[15:39:47] <flatcap> I think `4d` is effectively `dddd`
[15:39:54] <gahr> if you delete a thread's head, its members might become visible
[15:40:05] <gahr> mh
[15:40:06] <flatcap> hmm...
[15:40:22] <gahr> sure, 4d = dddd makes sense
[15:40:53] <gahr> but because 4<enter> is jump to 4, I'd probably be happier if 4r is reply to the fourth email, not rrrr
[15:40:58] <flatcap> perhaps we wouldn't implement it for all operations.  4j is useful, 4d is borderline insane :-)
[15:42:30] <flatcap> hmm... does your `4r` move the cursor?  (in your mind)
[15:43:03] <gahr> yeah I guess 4r = 4<enter>r
[15:43:07] <gahr> (in my mind)
[15:43:21] <flatcap> ok
[15:44:47] <gahr> I guess each function could use a number prefix in its own way
[15:45:10] <flatcap> urgh!  unpredictable actions
[15:45:48] <gahr> even vim is kind of inconsistent
[15:45:57] <gahr> 10gg goes to line 10, 10d delete 10 lines
[15:45:58] <flatcap> how dare you say that! :-)
[15:46:00] <gahr> haha
[15:46:45] <gahr> I'm not convinced the model applies 100% to us
[15:47:03] <Guest71> Solved! The problem was Neomutt's pgp_default_key pointing to the old key (expired and also inconsistent with gpg.conf). Thanks for your help!
[15:47:05] <flatcap> possibly not
[15:47:32] <flatcap> Guest71: brilliant!  You're welcome
[15:47:33] <gahr> Guest71: good!
[15:48:00] <gahr> (why would NeoMutt use pgp_default_key for encrypting?)
[15:48:27] <flatcap> so vim's behaviour is different for gg (motion) vs d (action)
[15:48:43] <Guest71> gahr: this is perhaps because I also have pgp_self_encrypt
[15:48:53] <gahr> oh!
[15:48:56] <gahr> that explains
[15:49:07] <gahr> flatcap: yeah
[15:49:26] <Guest71> it looks one has to remember to rewrite pgp_default_key on each key change...
[15:53:35] <flatcap> I like {number}{motion}, but it needs a lot more thought first
[15:54:44] <flatcap> so back to your OP_JUMP_{0..9}... I take it they're not going to be exposed to the user
[15:56:21] <flatcap> or put another way, how are you going to hide them from the user?  the help?  :bind?
[15:56:36] <gahr> I can use op_jump and squash the number in the flags
[15:56:52] <gahr> let me do a very rough poc
[15:57:23] <flatcap> sure
[16:06:36] *** Quits: weirdsmiley (~weirdsmil@103.25.231.102) (Ping timeout: 252 seconds)
[16:09:59] <gahr> btw, I'm pretty happy that I can now "macro editor abcd <bol>", type :abce, and all four letters appear as soon as I press the 'e' :D
[16:10:11] *** Quits: Guest71 (~Guest71@2001:1711:fa5c:b750::86c) (Ping timeout: 256 seconds)
[16:11:17] <flatcap> nice!
[16:13:47] <flatcap> yep, that works for me
[16:16:55] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[16:17:36] <gahr> < flatcap> so back to your OP_JUMP_{0..9}... I take it they're not going to be exposed to the user
[16:17:46] <gahr> I thought they wouldn't need to, but apparently they do.
[16:18:03] <gahr> the code works, but the doc doesn't generate if I don't add them to the maps
[16:18:41] <flatcap> ah
[16:19:22] * flatcap has a poke around the code
[16:20:15] <gahr> https://github.com/neomutt/neomutt/tree/devel/jump-num
[16:20:24] <gahr> here's the code.. it works if you don't build the docs
[16:22:03] * flatcap builds ...
[16:22:58] *** Joins: weirdsmiley (~weirdsmil@103.25.231.102)
[16:23:08] *** Quits: realguy (~jan@user/realguy) (Quit: WeeChat 3.4.1)
[16:32:55] <flatcap> adding `{ "jump", OP_JUMP_1 },` (for 1-9) to both OpGeneric and OpPager doesn't seem to have any unwanted side-effects
[16:35:14] <flatcap> if you put OP_JUMP after 1-9, then the docs look good, the internal help page looks good
[16:35:31] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[16:35:51] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[16:37:19] <gahr> thanks, I was still parsing gen-map-doc :D
[16:38:09] <flatcap> :-)
[16:39:57] <flatcap> there's a strange bug if you `bind index 3 jump` then typing '3' gives the prompt 'Jump: 1'
[16:40:36] <gahr> is that a bug?
[16:40:50] <gahr> mh
[16:41:04] <flatcap> I can't imagine anyone actually binding jump
[16:41:16] *** Joins: realguy (~jan@user/realguy)
[16:41:18] <gahr> can you please refresh the branch?
[16:41:24] <flatcap> yep
[16:41:30] <gahr> I can't think of anything, but it doesn't behave like that here :)
[16:41:51] <gahr> I get an empty "Jump to message: " prompt
[16:41:57] <gahr> well, empty in that it has no number
[16:42:24] * flatcap builds ...
[16:43:36] *** Quits: realguy (~jan@user/realguy) (Client Quit)
[16:44:06] *** Joins: realguy (~jan@user/realguy)
[16:44:51] <gahr> lunch, bbl
[16:46:25] <flatcap> ok
[16:46:29] <flatcap> ah, I see
[16:47:23] <flatcap> the code and docs are treating OpGeneric and OpPager slightly differently
[16:48:16] <flatcap> if you put OP_JUMP first in OpGeneric/OpPager, then `bind index 3 jump` means '3' -> "Jump: " (no number)
[16:48:35] <flatcap> but the docs say that the default key for <jump> is '9'
[16:49:14] <flatcap> if you put OP_JUMP last in OpGeneric/OpPager (which I did), then `bind index 3 jump` means '3' -> "Jump: 1" (bug)
[16:49:30] <flatcap> but the docs say that the default key for <jump> is blank (none)
[16:51:53] <flatcap> oh I see, my change messed up `mutt_unget_event('0' + op - OP_JUMP, 0);`
[16:57:31] *** Joins: netx (~netx@23-24-2-197-static.hfc.comcastbusiness.net)
[16:59:28] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[16:59:40] *** Joins: madage (~madage@user/madage)
[17:05:39] *** Joins: strajder (~strajder@user/strajder)
[17:11:30] *** Quits: haritz (~hrtz@user/haritz) (Ping timeout: 252 seconds)
[17:28:23] <gahr> back
[17:28:27] <gahr> uhm, so what's the state?
[17:28:50] <flatcap> the docs are slightly wonky, but the code's good
[17:29:43] <flatcap> nobody will notice the docs :-)
[17:30:26] <gahr> oh
[17:30:27] <gahr> hehe
[17:30:38] <gahr> ok, so how ugly is that, compared to LastKey?
[17:31:05] <gahr> and (unrelated): do we perhaps want a label to say an issue is related to an old version of NeoMutt? /me eyes #3294
[17:31:05] <neo-bot> Issue by @orglube "Maildir mailboxes are not recognized by neomutt": https://github.com/neomutt/neomutt/issues/3294
[17:31:47] <flatcap> not at all ugly, vs hideously disfigured
[17:32:08] * flatcap looks at the existing labels...
[17:32:23] <gahr> I spotted the 9 as default mapping.. /methinks
[17:33:07] <flatcap> yes, that's the one
[17:33:35] <flatcap> there's a "closed:fixed" label
[17:34:17] <gahr> we need a half-closed:perhaps-fixed label
[17:34:24] <flatcap> hehe
[17:35:16] * flatcap is secretly planning a cull of issues, after the release
[17:40:24] <gahr> yup yup
[17:41:53] *** Joins: jotoho (~jotoho@user/jotoho)
[17:55:25] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[17:55:33] <gahr> https://github.com/neomutt/neomutt/commit/59ff5ead7e4ca88b4a53405df04a01329270a4f8
[17:57:05] <flatcap> ooh
[17:57:09] * flatcap gives it a try
[17:58:26] <gahr> I'd call this hunch-programming.. not sure what I'm doing, but the shape of it kind of makes sense
[18:00:51] <flatcap> hehe.  good enough for me
[18:01:15] <flatcap> the code work, the docs are correct
[18:05:22] <gahr> the commit message is misleading :D
[18:05:38] <gahr> I'll make it better and open a PR
[18:05:40] <flatcap> yes :-)
[18:06:15] <flatcap> if you tidy that branch, I'll merge it and the PR
[18:10:02] *** Quits: DebXWoody (~DebXWoody@neomutt/DebXWoody) (Quit: WeeChat 3.0)
[18:10:33] *** Joins: haritz (~hrtz@62.3.70.206)
[18:10:33] *** Quits: haritz (~hrtz@62.3.70.206) (Changing host)
[18:10:33] *** Joins: haritz (~hrtz@user/haritz)
[18:11:30] <gahr> uhm... I wonder if I can possibly do it some better way
[18:12:07] <gahr> we don't ever want "jump" to map to OP_JUMP_7
[18:12:20] <flatcap> true
[18:12:35] <flatcap> but only you or I would think to try _that_
[18:12:57] <gahr> and we only need "jump" -> OP_JUMP_1 so we can find OP_JUMP_1 later on in the scripot
[18:14:08] <gahr> why can't I just ignore (or warn) unmapped functions instead of die()ing?
[18:14:42] <gahr> or perhaps have a special "_skipme" function name?
[18:15:42] *** Quits: weirdsmiley (~weirdsmil@103.25.231.102) (Ping timeout: 268 seconds)
[18:16:13] *** Joins: Guest71 (~Guest71@2001:1711:fa5c:b750::86c)
[18:16:26] *** Quits: Guest71 (~Guest71@2001:1711:fa5c:b750::86c) (Client Quit)
[18:17:42] <flatcap> hmm... warnings tend to get ignored in the torrent of make output
[18:18:00] <gahr> a special "_ignore" function?
[18:18:25] <flatcap> in the code?
[18:18:42] <gahr> ah no, I need an entry to generate the help page :/
[18:19:38] <gahr> ok I think we'll have to make do with this solution for now :)
[18:21:26] <flatcap> ok, that's fine
[18:23:26] <gahr> #3317
[18:23:26] <neo-bot> PR by @gahr "Provide explicit (internal) functions to jump with a digit prefix": https://github.com/neomutt/neomutt/pull/3317
[18:30:48] <dcpurton> Hi flatcap 
[18:31:00] <dcpurton> I realise I haven't done anything on #3223 for a while
[18:31:00] <neo-bot> PR by @dcpurton "Support for inserting attachments": https://github.com/neomutt/neomutt/pull/3223
[18:31:04] <flatcap> hi dcpurton 
[18:31:19] <flatcap> no worries
[18:31:20] <dcpurton> Because of unresolved questions around what functions should be supported
[18:31:36] <dcpurton> and the insert before/after/end thing
[18:32:05] <flatcap> I'm basically happy with it, but I'd like to delay it until after the release (sorry)...
[18:32:10] <dcpurton> Did you have any more thoughts on it? Where would you like it the PR to go
[18:32:11] <dcpurton> ok
[18:32:17] <dcpurton> That's fine
[18:32:32] <flatcap> I don't want to introduce new functions that we might change our mind about later
[18:32:48] <dcpurton> I'm not in a rush. I'd be unlikely to use these myself
[18:33:17] <flatcap> I'll have a bit more time to think after the release
[18:33:20] <dcpurton> I am happy to code in the way you want
[18:33:27] <flatcap> thanks
[18:33:44] <dcpurton> cool
[18:34:07] <flatcap> I still think that "root" attachment is the right way forward for compose
[18:34:46] <flatcap> with that, we can unify more of the compose/view-attach code and ultimately tidy up Body
[18:34:53] <dcpurton> Yeah
[18:35:16] <flatcap> but it's quite a bit of fiddly work
[18:36:08] <flatcap> so... if you had the time and the inclination, please could you take a look (no pressure)
[18:36:56] <dcpurton> :) That might be beyond my skill as it would involve major redesign
[18:37:12] <dcpurton> But with some help maybe can
[18:37:26] <flatcap> the latter half of the sentence, yes it's a biggie
[18:37:41] <flatcap> but the compose part shouldn't be too bad
[18:37:58] <flatcap> (though I haven't dived deeply into the code, there)
[18:38:23] <dcpurton> I've been able to do the compose changes because they are all reasonably self contained and I can just copy how existing things are done
[18:38:40] <flatcap> cut'n'paste is the best sort of code :-)
[18:40:25] <flatcap> basically, we want to move mutt_make_multipart() / mutt_remove_multipart() into compose
[18:40:45] <dcpurton> #3209 is a feature I would use and have motivation to do, but I need to better understand the view mime code (and I hardly understand at all!)
[18:40:45] <neo-bot> 🔧 discussion by @flatcap "How to view HTML with embedded images" with 5 comments: https://github.com/neomutt/neomutt/discussions/3209
[18:40:59] <flatcap> rather than doing it on demand in mutt_send_message()
[18:41:01] <dcpurton> re multipart, yes
[18:41:22] <dcpurton> I guess that wouldn't be too hard actually
[18:41:34] * flatcap tempts dcpurton in :-)
[18:41:53] <dcpurton> I'm already making and braking groups
[18:41:59] <dcpurton> breaking
[18:42:21] <dcpurton> just not multipart/mixed
[18:42:34] <flatcap> yes
[18:46:35] <dcpurton> Slightly unrelated. Where can I learn how ARRAY and TAILQ work?
[18:47:05] <dcpurton> Or I just read the source?
[18:47:45] <flatcap> TAILQ is a "standard" used by Linux/BSDs, there may be docs somewhere
[18:47:59] <flatcap> ARRAY is our implemention (undoc'd)
[18:48:13] <flatcap> but there are quite a lots of examples of each in our code
[18:48:25] <gahr> man.freebsd.org/queue
[18:48:35] <flatcap> aha! thanks
[18:48:43] <gahr> for TAILQ
[18:48:54] <gahr> mutt/array.h for ARRAY :) it's small and very well written
[18:48:55] <gahr> lol
[18:49:02] <flatcap> :-)
[18:49:08] <gahr> well, it's documented...
[18:49:33] <flatcap> the important thing to note is: STAILQ (singly-linked), TAILQ (doubly-linked)
[18:51:36] <flatcap> mutt/queue.h lists which operations are supported and which are efficent
[18:52:01] <dcpurton> How does a LIST differ from an ARRAY? (Sorry Chem Eng Degree and Master of Theology here)
[18:52:19] <flatcap> that's an odd pairing!
[18:52:36] <dcpurton> :) I don't do Chem Eng now
[18:52:48] <dcpurton> And never really did for a job
[18:53:07] <flatcap> oh, ok
[18:53:08] <dcpurton> Technically Master of Divinity
[18:54:03] * flatcap has no idea what that means :-)
[18:54:14] <dcpurton> Course work vs reseach
[18:54:43] <flatcap> oh
[18:54:44] <dcpurton> I'm not cut out for research degree
[18:55:17] <flatcap> a LIST only has a pointer to the next item
[18:55:40] <flatcap> (S)TAILQ have a pointer to head and tail, so you can insert at either
[18:56:38] <flatcap> I thought we used a LIST once, but I can't find it now
[18:57:50] <dcpurton> But there is LIST_INSERT_BEFORE?
[18:58:16] <gahr> list is a doublylinked list
[18:58:25] <gahr> SLIST is a singly-linked list
[18:58:34] <flatcap> ah, yes
[18:58:38] <gahr> STAILQ is a singly-linked list with a pointer to the tail
[18:58:44] <gahr> so you have o(1) insertion at both ends
[18:59:16] <dcpurton> oh - that makes sense
[18:59:25] <gahr> 14:18 < gahr> man.freebsd.org/queue <-- really, that explains it very nicely
[18:59:42] <gahr> go to the DESCRIPTION section
[18:59:49] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:00:58] <dcpurton> Yep - I see.
[19:01:56] *** Joins: inak (~justme@228-134-237-24.gci.net)
[19:02:00] <dcpurton> So if all you want to do is add items to end and iterate you might use ARRAY?
[19:02:18] <dcpurton> but for more complex operations, you would use one of the others?
[19:02:29] <dcpurton> like inserting, swaping, moving, etc.
[19:03:14] <gahr> ARRAY has the pro that the memory layout is contiguous
[19:03:22] <gahr> you can get an element, do ++ and get to the next one
[19:03:36] <gahr> the downside is that when it's full it'll need to reallocate and move all the elements to the new location
[19:03:44] <gahr> so you probably don't want to keep inserting into it
[19:04:00] <dcpurton> OK! Good. Thanks
[19:04:01] <gahr> it's best used when you know how many element you're going to store, so you can pre-allocate
[19:04:41] *** Quits: netx (~netx@23-24-2-197-static.hfc.comcastbusiness.net) (Quit: Bye)
[19:10:52] <dcpurton> I better go to bed. night
[19:11:22] *** Quits: dcpurton (~dcpurton@2001:44b8:217:9e00:36f6:27b3:77f1:f65c) (Quit: WeeChat 3.4)
[19:58:30] <gahr> #3318 - just as a draft, I'm tired now
[19:58:31] <neo-bot> PR by @gahr "Get rid of the LastKey global variable": https://github.com/neomutt/neomutt/pull/3318
[20:01:28] <flatcap> thanks, I'll have a look in a bit
[20:07:42] *** Joins: vysn (~vysn@user/vysn)
[20:17:03] <gahr> can't...resist..the urge.. to make UngetKeyEvents an ARRAY
[20:19:43] <flatcap> hmm... I would have figured some list type
[20:20:14] <flatcap> isn't it a LIFO?
[20:24:13] <gahr> I think it's overkill to keep allocating nodes
[20:24:27] <gahr> we'll just allocate a few items and reuse them
[20:24:37] *** Quits: polve (~polve@user/polve) (Quit: WeeChat 3.0)
[20:25:28] *** Joins: polve (~polve@user/polve)
[20:27:08] <flatcap> yeah
[20:29:41] <gahr> btw, I guess we always leak UngetKeyEvents
[20:29:56] <gahr> not that it matters.. but I wonder how you haven't noticed yet :)
[20:30:29] <flatcap> hehe, you've got me there.  I hadn't noticed
[20:31:45] *** Quits: realguy (~jan@user/realguy) (Quit: WeeChat 3.4.1)
[20:41:54] * zsw docks flatcap's pay
[20:41:56] <zsw> ;)
[20:43:00] <flatcap> :-)
[20:47:39] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[20:55:28] <gahr> flatcap: I think I'm seeing issues with the index not properly repositioning the current idx, hence blank screen, when I switch between accounts
[20:55:39] <gahr> give me a sec I'll try to come up with a small reproducer
[21:02:23] <gahr> oh, it's not about the positioning
[21:02:37] <gahr> it's about changing index_format not triggering a repaint
[21:03:02] <gahr> I temporarily set index_format=" " when I switch accounts, so I know it's switching :)
[21:03:24] <gahr> if you change index_format, the index doesn't redraw until you move up or down or something
[21:07:04] <gahr> off, tty tomorrow
[21:37:31] <flatcap> gahr: [devel/index] should fix that
[21:49:43] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[21:54:04] *** Joins: strajder (~strajder@user/strajder)
[22:13:17] *** Quits: jotoho (~jotoho@user/jotoho) (Quit: Closing client)
[22:17:04] *** Joins: Pali (~pali@user/pali)
[22:22:00] <phoebos> o/ flatcap, idk if this is a useful thing to report, but after limiting with ~h (headers) and viewing a message, then going back to the view of all messages, there is a long delay (for a large mailbox) while it is "sorting mailbox". surely this step is not necessary?
[22:23:31] *** Joins: weirdsmiley (~weirdsmil@103.25.231.102)
[22:33:21] <flatcap> phoebos: thanks.  I'm not sure what's going on
[22:33:29] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[22:34:21] <flatcap> could you have a look at your logs: `neomutt -d6` -> `~/.neomuttdebug0` to see if there's anything obvious during that pause
[22:40:30] *** Joins: eroux (~eroux@102-65-72-61.ftth.web.africa)
[22:49:12] *** Quits: weirdsmiley (~weirdsmil@103.25.231.102) (Ping timeout: 252 seconds)
[22:49:20] *** Joins: weirdsmiley (~weirdsmil@103.25.231.104)
[22:50:51] *** Joins: plastico (~plastico@neomutt/plastico)
[22:56:48] <phoebos> all i can see is a lot of fold_one_header then write_one_header
[22:57:09] <phoebos> and mutt_copy_hdr
[22:57:39] <phoebos> those are, during the "sorting mailbox"
[22:58:45] *** Quits: vroom (~vroom@user/vroom) (Ping timeout: 268 seconds)
[23:25:35] *** Joins: vroom (~vroom@cable-84-43-163-47.mnet.bg)
[23:25:35] *** Quits: vroom (~vroom@cable-84-43-163-47.mnet.bg) (Changing host)
[23:25:35] *** Joins: vroom (~vroom@user/vroom)
[23:30:59] *** Quits: weirdsmiley (~weirdsmil@103.25.231.104) (Ping timeout: 252 seconds)
[23:32:56] *** Joins: weirdsmiley (~weirdsmil@103.25.231.102)
[23:41:36] <flatcap> phoebos: ok, thanks
[23:55:37] *** Joins: idakan (~justme@209-112-220-139-radius.dynamic.acsalaska.net)
[23:58:15] *** Quits: inak (~justme@228-134-237-24.gci.net) (Read error: No route to host)
