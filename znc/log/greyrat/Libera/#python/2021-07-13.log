[00:00:08] <Jin^eLD> SnoopJ: I think I was on the "wrong train" after all, its my cdef that does not match the target headers
[00:00:15] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[00:00:54] <SnoopJ> Jin^eLD, you can influence the stuff that is passed to the compiler with the distutils-alike args to ffibuilder.set_source(), but it sounds like you've found a misunderstanding to chase down anyway
[00:01:07] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[00:01:11] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[00:01:34] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[00:04:16] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[00:04:17] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[00:04:26] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 256 seconds)
[00:04:35] <Jin^eLD> yep, seems I figured it out, I was chasing the wrong trail
[00:04:39] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[00:05:34] *** Joins: rapier (~marcos@170.233.159.1)
[00:07:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:07:16] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Remote host closed the connection)
[00:07:57] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c:f009:5606:b7ea:3eb0)
[00:08:14] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[00:08:49] *** Joins: creese (~creese@136-25-168-142.cab.webpass.net)
[00:09:26] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[00:09:31] <NeilRG> should I usually put global variables in thread local storage?
[00:09:58] <KirkMcDonald> NeilRG: Probably not.
[00:10:06] <NeilRG> KirkMcDonald, oh no?
[00:10:14] <KirkMcDonald> NeilRG: What is the goal?
[00:11:10] <hackers> is there still a channel dedicated to python packaging?
[00:12:28] <SnoopJ> hackers, there's #pypa for topics that fall under PyPA's purview, but discussion of packaging is topical here
[00:12:35] <NeilRG> KirkMcDonald, just ensure that multiple threads don't clobber each other's use of the global variable
[00:12:53] <zware> NeilRG: It's usually better to avoid having global variables (global "constants" are fine, and wouldn't be affected by multiple threads)
[00:12:56] *** Joins: willcl_ark (~quassel@user/willcl-ark/x-8282106)
[00:13:55] <NeilRG> zware, yeah, I need to think about the design a bit more, but right now it seems harmless
[00:13:57] <nedbat> hackers: start by asking here :)
[00:13:58] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:14:21] <hackers> well, it was a container question but somewhat related to packaging IMO
[00:14:41] <hackers> are there any examples of distribution-less containerized Python apps in the wild? :)
[00:14:44] <nedbat> hackers: #pypa is for specific pip/pypi/etc questions
[00:14:44] *** Joins: argento (~argent0@168-227-97-29.ptr.westnet.com.ar)
[00:14:49] <hackers> arf. sorry for smiling
[00:14:55] <nedbat> hackers: what is distribution-less?
[00:15:28] *** Joins: dudek (~dudek@185.150.236.155)
[00:15:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:15:40] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[00:16:07] <hackers> I stumbled upon github.com/GoogleContainerTools/distroless and figured I'd like to do just that for Python apps, what I mean is "strip away all you can from a distro after installing all you need to run your Python app on it"
[00:16:42] <hackers> essentially all utilities, like shells
[00:17:00] <nedbat> hackers: there are examples in that repo: https://github.com/GoogleContainerTools/distroless/blob/main/examples/python3/Dockerfile
[00:17:10] *** Quits: creese (~creese@136-25-168-142.cab.webpass.net) (Quit: Client closed)
[00:17:15] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 255 seconds)
[00:17:17] <nedbat> though i'm enough of a docker-newb to not understand how two FROM's work together.
[00:17:23] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[00:17:30] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[00:17:30] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[00:17:32] <hackers> it's a really really simple example :)
[00:17:43] <hackers> sorry again for the smile
[00:17:47] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[00:17:50] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:17:57] <nedbat> funny to have to apologize for smiling :) :)
[00:18:04] <yogoyo> yeah, you need to be careful on IRC
[00:18:29] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[00:18:42] <hackers> I was reading about how some people interpret it as either arogant or seducing behavior
[00:18:48] <hackers> :)
[00:19:07] <SnoopJ> the build-env there is where you could invoke a compiler or somesuch, and then the `COPY --from=build-env ...` yanks out the desired files. As-is it's kind of pointless.
[00:19:14] <nedbat> hackers: yes, i guess thats true
[00:19:23] *** Joins: LunarJetman (LunarJetma@user/zogatribe)
[00:19:40] <SnoopJ> (but this "stages" approach is useful for dividing up the work that needs to be done to minimize rebuilding of images)
[00:20:02] <LunarJetman> python contributes to climate change.
[00:20:18] *** Joins: GNUtoo (~GNUtoo@cyberdimension.org)
[00:20:24] <SnoopJ> LunarJetman, you aren't wrong
[00:20:51] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 255 seconds)
[00:21:12] <hackers> I read ":)" are a european thing and I am technically north-american french
[00:22:26] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[00:22:36] <GNUtoo> Hi, I've a trace function (def trace(func)) that has another function inside (def trace_func(*args, **kwargs)), which calls func like that: func(*args, **kwargs)
[00:23:14] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[00:23:15] <GNUtoo> The idea is to add an @trace decorator on functions I want to trace (I want to add print("+ {}()".format(func.__qualname__)) before)
[00:24:04] <GNUtoo> Am I doing something wrong? because if I just return func in trace my test works and it fails with the code I just pasted
[00:24:22] <SnoopJ> GNUtoo, can we see the source and the error report of the failure?
[00:24:25] <GNUtoo> I tried to do a simple test case which doesn't require specific hardware and so on but it works fine in that case
[00:24:43] <GNUtoo> yes, the issue is that some arguments are messed up
[00:24:44] *** Joins: trace987 (~trace@dynamic-002-247-248-040.2.247.pool.telefonica.de)
[00:24:50] <GNUtoo> let me find the URL of the source
[00:25:51] <GNUtoo> I'll push the error in the commit message
[00:25:58] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[00:26:50] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:4481:3282:6da6:9a8e)
[00:27:18] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 276 seconds)
[00:27:28] <SnoopJ> you could use bpaste if you don't want to dirty your repo: https://bpaste.net/+python+pytb
[00:28:26] <GNUtoo> That won't work here as there are several files
[00:28:42] *** Joins: Celeo (~Celeo@user/celeo)
[00:29:11] <GNUtoo> https://git.replicant.us/contrib/GNUtoo/vendor_replicant-scripts/commit/?h=more-tools&id=f4dac486e4864da28eecb0aa83ac6f1d160ef53a
[00:29:24] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[00:29:27] <GNUtoo> The issue is that the situation is far from ideal: the code that I wrote isn't great
[00:29:39] <GNUtoo> And it also require special hardware to run and the configuration is hardcoded
[00:29:48] *** Joins: vsantana (~Thunderbi@2804:388:6081:ebab:e07c:7a:6f40:84e0)
[00:30:06] <SnoopJ> GNUtoo, the problem is that your inner function doesn't return the value produced by func(); your decorated result will always return None
[00:30:08] <GNUtoo> I've tried to reproduce it without all that but It worked fine with standalone code
[00:30:16] <GNUtoo> ohh thanks a lot
[00:30:25] <GNUtoo> I had None indeed
[00:30:27] <zware> (Aside, who runs bpaste?  The "removal", "expiry", and "about" links are all 404)
[00:30:29] <GNUtoo> Thanks!!!!
[00:30:40] <SnoopJ> probably you want `result = func(*args, **kwargs); ...; return result`
[00:30:59] <GNUtoo> indeed
[00:31:23] <SnoopJ> supakeen, ^ residual pain from the domain shift, maybe?
[00:32:30] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 276 seconds)
[00:33:13] <zware> Or instead of `result = func(...); ...; return result`, `try: return func(...); finally: ...` to handle the case of func() raising
[00:33:27] *** Quits: frostschutz (~frostschu@2a01:c22:d178:1700:3c93:ead7:c93:a219) (Ping timeout: 255 seconds)
[00:33:27] *** Parts: vsantana (~Thunderbi@2804:388:6081:ebab:e07c:7a:6f40:84e0) ()
[00:33:40] *** Joins: pegaso (~reis-r@131.72.121.184)
[00:33:46] <SnoopJ> zware, they want to print a message after calling the function, but before returning a value from the wrapper
[00:34:16] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[00:34:18] *** Joins: slav0nic (slav0nic@python.su)
[00:34:43] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[00:34:54] *** Quits: grantini (~kluskam@037008230115.dynamic-3-poz-k-1-2-0.vectranet.pl) (Ping timeout: 272 seconds)
[00:35:57] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:36:30] *** Joins: thiras (~thiras@user/thiras)
[00:36:32] <Henry151> from life import happiness
[00:37:41] <zware> SnoopJ: Not seeing the disconnect?  `finally` runs before return
[00:37:46] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[00:37:49] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2f4b) (Quit: Konversation terminated!)
[00:38:05] <zware> It just ensures that the print happens whether func raises or returns
[00:38:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:38:35] <SnoopJ> huh, I didn't realize it would execute even on a return from the body
[00:40:03] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[00:40:36] <zware> finally always runs.  You just need to be careful about raising or returning from finally if your try raised or returned
[00:41:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[00:41:18] <zware> (Generally best to *not* raise or return from finally if you can help it)
[00:42:00] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[00:42:29] <SnoopJ> pretty neat juggling of the emitted RETURN_VALUE
[00:43:41] <GNUtoo> Even if in this case it'd be overkill, this looks really interesting
[00:44:07] <GNUtoo> I recall vaguely having that issue with sh
[00:44:29] <GNUtoo> I wanted to return things and have its infos even if it raised some exceptions
[00:44:39] <GNUtoo> Though I don't recall the details
[00:45:05] *** Quits: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:45:19] <GNUtoo> And was not in that program but a completely different one that was running as part of an autotools test suite
[00:45:25] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[00:45:30] <GNUtoo> I found a workaround at the time though
[00:45:59] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[00:46:47] *** Joins: Thanattt (~Thanatos@102.91.4.38)
[00:47:08] *** Joins: frostschutz (~frostschu@2a01:c22:d134:6600:394a:d5eb:75af:66ca)
[00:47:24] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 255 seconds)
[00:47:34] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[00:47:34] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[00:47:36] <GNUtoo> I think I changed the expected shell return code not to have to deal with it if I recall well
[00:48:18] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 255 seconds)
[00:50:20] *** Quits: ThanatosJ (~Thanatos@197.210.53.15) (Ping timeout: 256 seconds)
[00:50:39] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[00:52:49] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[00:55:33] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[00:55:48] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 272 seconds)
[00:55:58] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 268 seconds)
[01:00:05] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:00:27] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 276 seconds)
[01:00:48] *** Joins: kafka (~kafka@user/kafka)
[01:01:17] *** Quits: kafka (~kafka@user/kafka) (Client Quit)
[01:01:28] *** Joins: kafka (~kafka@user/kafka)
[01:02:05] *** Quits: greedom (~greedom@2001:16b8:322c:e100:7eec:11ca:b7b2:bf5d) (Remote host closed the connection)
[01:02:41] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[01:03:22] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 256 seconds)
[01:03:23] *** Joins: greedom (~greedom@2001:16b8:322c:e100:7eec:11ca:b7b2:bf5d)
[01:03:55] *** Quits: magla (~gelignite@55d4ea1a.access.ecotel.net) (Quit: Stay safe!)
[01:04:21] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[01:06:08] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[01:06:46] <NeilRG> Can someone explain to me the difference between docker and poetry?
[01:06:52] *** Quits: ST47 (~ST47@user/st47) (Ping timeout: 252 seconds)
[01:06:58] <NeilRG> I understand poetry, but have no experience with docker
[01:07:02] <Widdershins> wat
[01:07:09] <graingert> hackers: #pypa ?
[01:07:27] <Lando-SpacePimp> isn't docker a brand of jeans?
[01:07:54] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f) (Ping timeout: 256 seconds)
[01:08:07] <hackers> â—ˆ
[01:08:15] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[01:08:31] <SnoopJ> NeilRG, Docker aims to be an "operating system in a box", Poetry is a tool for developing Python software that handles some of the busywork that implies (managing a virtual environment, resolving dependencies, etc.)
[01:08:33] <hackers> is anyone familiar with this symbol: â—ˆ or \xa1 ?
[01:09:02] <SnoopJ> hackers, let's assume the answer is "yes" if there's a follow-up question
[01:09:11] <randall> this ^
[01:09:12] <NeilRG> SnoopJ, I'm not sure what "operating system in a box means".  Besides synchronizing all the versions between users, what else does it do?
[01:09:15] <POGtastic> NeilRG: Poetry is just a wrapper on top of venv / dependency management / setuptools. Docker is OS-level virtualization.
[01:09:33] *** Quits: varaindemian (~varaindem@86.124.22.31) (Quit: Client closed)
[01:09:49] <POGtastic> It creates a separate filesystem for the container, has separate binaries, separate users, everything.
[01:09:58] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[01:10:12] <hackers> SnoopJ: I'm having this error when running a python 3.7 interpreter interactively via `docker run -it ... ...`: http://ix.io/3sNk
[01:10:40] *** Joins: ozoned (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[01:11:03] <NeilRG> POGtastic, thanks!
[01:11:12] <hackers> and I have no idea where to begin to troubleshoot this, the environment is a distro-less container
[01:11:25] <dav1d> hackers, did you check http://python.org/dev/peps/pep-0263/ ?
[01:11:37] <grym> NeilRG: know what a chroot jail is?
[01:11:43] <NeilRG> nope
[01:11:48] <grym> ah.  nvm
[01:12:04] <Widdershins> docker and poetry are completely different things for completely different purposes and it sounds like you should just pick either one of them and go learn what it does first
[01:12:21] <dav1d> docker is a vm without a vm
[01:12:28] <dav1d> kinda
[01:12:35] <Widdershins> docker neither provides an operating system nor is a virtual machine
[01:12:54] <dav1d> hence "without a vm"
[01:13:02] <hackers> no dav1d I'm not trying to solve the encoding issue I need it not to happen in first place
[01:13:16] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[01:13:21] <dav1d> hackers, you should read it anyways
[01:13:27] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 276 seconds)
[01:13:44] <hackers> the question I'm trying to answer is "in which circumstances would running a python 3.7 interpreter interactively yield this error?"
[01:13:53] <hackers> dav1d: why?
[01:13:56] <dav1d> hackers, without encoding python expects your source to be utf-8 (as outlined in the error), if you're file is not utf-8 you have to specify the encoding or fix the encoding
[01:13:56] <Widdershins> hackers: you are for some reason running python and telling it to run the python binary as a python file
[01:13:58] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.2)
[01:14:03] <dav1d> hackers, to understand your problem
[01:14:20] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 244 seconds)
[01:14:26] <Widdershins> dav1d: read it more closely. the "python source file" in question is /usr/bin/python3.7
[01:14:38] <Widdershins> the immediate problem is obvious
[01:14:38] <hackers> yeah exactly, I noted that Widdershins
[01:14:40] <SnoopJ> hackers, that looks like a bug in distroless
[01:14:41] <dav1d> he's running python with python?
[01:14:46] <Widdershins> dav1d: yes
[01:14:49] <dav1d> oh
[01:15:01] <hackers> ah my entry point is Python !
[01:15:02] <dav1d> you're probably setting the entrypoint to python and the cmd to python in your dockerfile
[01:15:08] <hackers> I'm passing python as argument to python
[01:15:13] <hackers> doh!
[01:15:18] <SnoopJ> oh, well that would do it I guess :)
[01:15:25] <hackers> thanks !
[01:15:29] <hackers> hihihi
[01:16:26] <SnoopJ> I can replicate that with a local 3.7 :)
[01:16:37] <hackers> yeah
[01:17:31] <Widdershins> yeah that'll be why
[01:18:08] <zware> Interestingly, 3.6, 3.8, and 3.9 are all \x80 instead of \xa1, at least on my machine
[01:18:37] <SnoopJ> churn in the binary I guess
[01:18:51] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[01:19:15] *** Joins: supakeen (~user@python/site-packages/supakeen)
[01:19:22] <habnabit_> Jin^eLD, sorted?
[01:19:32] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:19:57] *** Quits: venmx_ (~albasawa@host31-52-42-93.range31-52.btcentralplus.com) (Ping timeout: 276 seconds)
[01:20:48] *** Quits: kafka (~kafka@user/kafka) (Quit: WeeChat 3.2)
[01:21:03] <dav1d> I have \x80 as well and \xd5 on Python 2.7
[01:21:29] *** Joins: venmx (~albasawa@host31-52-111-223.range31-52.btcentralplus.com)
[01:26:01] <dostoyevsky2> Looking at the API of z3, how does one actually define an API that allows something like `s.add(xs[14] ^ xs[0] == 14)' to be added as a symbolic notation?  https://gist.github.com/sisoma2/509820711cf754796f32843569173fe4
[01:26:06] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[01:26:06] *** Quits: frostschutz (~frostschu@2a01:c22:d134:6600:394a:d5eb:75af:66ca) (Remote host closed the connection)
[01:26:36] <dostoyevsky2> I guess `xs = [BitVec('x{}'.format(i), 8) for i in xrange(25)]' has something to do with it...
[01:27:27] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 255 seconds)
[01:27:56] *** Parts: Togra (~Togra@user/togra) (I am in the upside down)
[01:29:11] <SnoopJ> dostoyevsky2, in that case, the `Solver` class defines a method named add() and the `BitVec` class defines the xor operator (i.e. __xor__())
[01:29:38] <SnoopJ> BitVec.__eq__() is probably also magical
[01:29:40] *** Quits: northernsage__ (northernsa@gateway/vpn/protonvpn/northernsage) (Quit: Leaving)
[01:30:00] <dostoyevsky2> SnoopJ: ah, and it creates a data structure from there to convert it into z3 format later
[01:30:06] *** Joins: northernsage (northernsa@gateway/vpn/protonvpn/northernsage)
[01:30:30] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:31:26] *** tumbleweed_ is now known as tumbleweed
[01:32:23] <SnoopJ> dostoyevsky2, looking a bit at the repo, it seems like maybe these classes are implemented in C++ anyway, and the classes being used there are wrappers
[01:33:01] <dostoyevsky2> SnoopJ: yeah, definitely written in C++... but the python api is nice enough
[01:33:21] <SnoopJ> dostoyevsky2, what I mean is that these don't look like they've been implemented in Python
[01:35:00] *** Joins: imp (~imp@186.205.11.214)
[01:36:08] <SnoopJ> oh interesting, looks like scripts/update_api.py does some introspection to generate z3core.py where I think BitVec would live
[01:36:55] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[01:37:18] *** Quits: Barones (~Barones@2804:48dc:8500:0:8158:462c:5c7a:9b6c) (Remote host closed the connection)
[01:37:32] *** Joins: Barones (~Barones@2804:48dc:8500:0:f0a6:a913:47d6:9e16)
[01:39:04] *** Quits: inom (~inom@176.59.102.225) (Ping timeout: 256 seconds)
[01:40:59] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[01:41:37] *** Joins: haniaF (~haniaF@79.191.100.82.ipv4.supernova.orange.pl)
[01:43:08] <Jin^eLD> habnabit_: roger that :) there was a discrepancy between can_frame structs on different systems, but "..." saved my butt again
[01:43:30] <Jin^eLD> I just went into a wrong direction in the beginning which confused me
[01:43:31] <habnabit_> Jin^eLD, yay
[01:43:57] *** Quits: andreas3- (andreas303@ip227.orange.bnc4free.com) (Remote host closed the connection)
[01:44:05] <SnoopJ> knowing which direction to proceed in seems like most of the magic trick, often
[01:44:28] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:44:44] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[01:44:48] <mike18> hi what does that warning mean? RuntimeWarning: divide by zero encountered in double_scalars ... return (df["spend"] / df["goal"]) * 1000.0
[01:44:53] <Jin^eLD> well, the right direction is kind of the prerequisite for finding a solution :)
[01:45:03] <ammar2> dostoyevsky2: protip use claripy from the angr project instead of using z3 directly https://github.com/angr/claripy
[01:45:04] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:45:09] <ammar2> might save you some trouble later down the road
[01:45:10] <SnoopJ> mike18, one of the entries in df["goal"] is zero
[01:45:13] <SnoopJ> at least one of*
[01:45:49] <mike18> can i use np.nan_to_num ?
[01:46:10] <mike18> i actually use it for that func
[01:46:13] <mike18> so all good?
[01:47:25] *** Quits: lavadonut (~lavadonut@user/lavadonut) (Ping timeout: 268 seconds)
[01:48:09] <SnoopJ> you could use .fillna() if you're sure it produces a NaN (it could be Â±inf I think, though)
[01:48:48] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[01:48:54] <SnoopJ> np.nan_to_num() will give you an ndarray as output (i.e. it won't be a Series or DataFrame anymore)
[01:49:37] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[01:50:45] <imp> Does python regex engine has any support to  "diacritics insentive"?
[01:50:55] <imp> *insensitive
[01:51:28] <SnoopJ> imp, do you mean you want to treat Ã¶, Ç«, Ã³, and o as the same character?
[01:51:29] <imp> something like re.IGNORECASE but for diacritics.
[01:51:41] <imp> SnoopJ: yes.
[01:51:53] <SnoopJ> there's nothing in stdlib that will do this, let me see if I can dig up the library that came up last time this was asked
[01:52:17] <imp> unidecode unfortunately do not works. Since my data is stored already with diacritics.
[01:55:12] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[01:55:23] <imp> To unidecode works I have to a. unidecode all my data when searching for it (cpu costy) or two. Store all the data in diacritics free database that is disk costy (but for me is cheaper). since I will do this only in a few fields.
[01:56:04] <SnoopJ> imp, I can't find a library referenced last time this was discussed (I may be remembering wrong), but this one looks pretty good: https://pypi.org/project/normality/
[01:56:04] *** Quits: Akuli (~Akuli@82-203-160-153.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[01:56:51] <imp> SnoopJ: thanks.
[01:58:02] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[01:58:49] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[01:58:49] <SnoopJ> I'd definitely use with pyicu since there's so much formal guidance on this in ICU
[01:58:57] *** Joins: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it)
[02:00:09] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[02:00:24] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-70e3-a5ff-63ed-5b44.res6.spectrum.com)
[02:00:57] *** Joins: rajkosto (~rajkosto@109-93-41-98.dynamic.isp.telekom.rs)
[02:03:16] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[02:05:01] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:06:58] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[02:06:58] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[02:07:24] *** Quits: trace987 (~trace@dynamic-002-247-248-040.2.247.pool.telefonica.de) (Remote host closed the connection)
[02:07:33] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[02:07:53] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:09:11] *** Quits: venmx (~albasawa@host31-52-111-223.range31-52.btcentralplus.com) (Read error: Connection reset by peer)
[02:09:17] *** Joins: venmx_ (~albasawa@host31-52-111-223.range31-52.btcentralplus.com)
[02:10:08] *** Quits: hackers (~self@bras-base-sttrpq3809w-grc-19-184-144-208-177.dsl.bell.ca) (Quit: leaving)
[02:10:32] *** Quits: ozoned (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 272 seconds)
[02:11:57] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 276 seconds)
[02:12:14] *** Quits: Barones (~Barones@2804:48dc:8500:0:f0a6:a913:47d6:9e16) (Quit: Leaving)
[02:16:30] *** Quits: bambams (~bambams@user/bambams) (Ping timeout: 255 seconds)
[02:18:46] *** Quits: northernsage (northernsa@gateway/vpn/protonvpn/northernsage) (Ping timeout: 272 seconds)
[02:19:05] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[02:21:00] *** Quits: philipp64|work (~philipp64@174.27.8.12) (Quit: philipp64|work)
[02:21:18] *** Quits: akk (~akk@97-123-109-214.albq.qwest.net) (Ping timeout: 272 seconds)
[02:22:34] *** Quits: greedom (~greedom@2001:16b8:322c:e100:7eec:11ca:b7b2:bf5d) (Ping timeout: 272 seconds)
[02:23:15] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: gildasio)
[02:23:39] *** Quits: argento (~argent0@168-227-97-29.ptr.westnet.com.ar) (Ping timeout: 276 seconds)
[02:23:39] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 276 seconds)
[02:25:34] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[02:25:49] *** Joins: northernsage (northernsa@gateway/vpn/protonvpn/northernsage)
[02:26:25] *** Quits: p-i- (~Ohmu@113.53.219.168) (Read error: Connection reset by peer)
[02:26:36] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[02:26:56] *** Joins: p-i- (~Ohmu@node-i5m.pool-118-173.dynamic.totinternet.net)
[02:27:13] *** Joins: c10l (~c10l@89.34.167.207)
[02:28:58] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-75ce-29b0-c6d6-983e.res6.spectrum.com) (Read error: Connection reset by peer)
[02:29:02] *** Joins: jazzy (~jaziz@2600:380:c114:2d85:2030:17e6:b76f:c1fa)
[02:29:33] *** Quits: thecoder (~mrrobot@c-73-27-71-147.hsd1.fl.comcast.net) (Ping timeout: 255 seconds)
[02:30:17] *** Joins: pnoud (~pnoud@user/pnoud)
[02:33:08] *** Quits: moto (~moto@user/moto) (Ping timeout: 258 seconds)
[02:33:38] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[02:33:46] *** Joins: bambams (~bambams@user/bambams)
[02:35:31] *** Joins: azazello (~azazello@109.75.158.195)
[02:35:41] *** Joins: Praise (~Fat@user/praise)
[02:36:00] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 276 seconds)
[02:37:00] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[02:37:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:39:28] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[02:40:18] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 272 seconds)
[02:43:13] *** Quits: northernsage (northernsa@gateway/vpn/protonvpn/northernsage) (Remote host closed the connection)
[02:44:18] *** Joins: northernsage (northernsa@gateway/vpn/protonvpn/northernsage)
[02:44:37] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[02:46:44] *** Joins: raxor2k (~raxor2k@204.109-247-146.customer.lyse.net)
[02:47:19] <raxor2k> the yesterday`s moral story from mekhami: use try catch blocks to find the bug/exception, once you do that, solve the bug and dont use try catch block
[02:48:01] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.0.1)
[02:48:50] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[02:49:21] *** Quits: northernsage (northernsa@gateway/vpn/protonvpn/northernsage) (Ping timeout: 255 seconds)
[02:49:24] <Repiphany> Eh, more like don't use try-except at all until you know exactly what exceptions will be raised and how to deal with them properly
[02:50:19] *** Quits: ntdll (~ntdll@user/ntdll) (Quit: WeeChat 2.8)
[02:50:24] *** Joins: northernsage (~northerns@187.107.158.146)
[02:50:28] <Repiphany> Exceptions aren't inherently bugs unless you don't understand why they're happening
[02:50:59] <imp> Repiphany: agreed.
[02:51:02] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 256 seconds)
[02:52:14] <SnoopJ> they're what it says on the tin: indicators that something exceptional has occurred. If you can do something about that, catching the exception *might* be appropriate. Otherwise, let it propagate.
[02:52:36] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:52:48] *** Joins: moog (~moog@107.126.53.20)
[02:53:25] *** Joins: ntdll (ntdll@user/ntdll)
[02:54:11] *** Quits: dudek (~dudek@185.150.236.155) (Quit: Leaving)
[02:54:32] *** Joins: northernsage_ (northernsa@gateway/vpn/protonvpn/northernsage)
[02:56:42] *** Quits: northernsage (~northerns@187.107.158.146) (Ping timeout: 256 seconds)
[02:57:05] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:57:50] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[02:57:55] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[02:58:19] *** Parts: blackout69 (~blackout6@net-109-116-208-45.cust.vodafonedsl.it) ()
[02:58:24] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[02:58:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:58:44] *** Joins: trace987 (~trace@91.66.151.181)
[03:01:33] *** Joins: b_jonas (~x@catv-176-63-12-145.catv.broadband.hu)
[03:02:03] *** Quits: pegaso (~reis-r@131.72.121.184) (Quit: Leaving)
[03:02:51] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 255 seconds)
[03:04:02] *** Quits: trace987 (~trace@91.66.151.181) (Remote host closed the connection)
[03:04:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:04:14] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[03:04:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:04:44] *** Joins: dfg (dfg@user/dfg)
[03:07:02] *** Joins: trace987 (~trace@91.66.151.181)
[03:07:05] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[03:08:14] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[03:09:36] *** Quits: rajkosto (~rajkosto@109-93-41-98.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[03:10:06] *** Joins: rajkosto (~rajkosto@109-93-41-98.dynamic.isp.telekom.rs)
[03:11:58] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[03:11:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[03:12:30] *** Joins: rajkohaxor (~rajkosto@109-93-41-98.dynamic.isp.telekom.rs)
[03:13:06] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[03:13:10] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[03:13:20] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[03:13:35] *** Joins: philipp64|work (~philipp64@mail.redfish-solutions.com)
[03:14:33] *** Quits: rajkosto (~rajkosto@109-93-41-98.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[03:14:47] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[03:14:49] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[03:14:56] *** Quits: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net) (Quit: WeeChat 3.2)
[03:15:54] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 255 seconds)
[03:16:55] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:16:57] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 276 seconds)
[03:17:51] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[03:18:03] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:18:32] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[03:22:11] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[03:23:52] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[03:25:16] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 272 seconds)
[03:26:58] *** Joins: tims (~tims@193-82-234-90.tpgi.com.au)
[03:27:17] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[03:27:20] *** Joins: semeion (~semeion@user/semeion)
[03:27:20] *** mnemonic is now known as Guest7668
[03:28:52] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[03:30:18] *** Quits: Guest7668 (~semeion@user/semeion) (Ping timeout: 255 seconds)
[03:30:30] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Read error: Connection reset by peer)
[03:32:15] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:34:24] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[03:34:31] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[03:35:34] *** Quits: Ivyy (~Ivyy@2001:a62:41d:fa01:4f5f:6d80:11ff:b930) (Remote host closed the connection)
[03:35:37] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 258 seconds)
[03:35:37] *** Wulf4 is now known as Wulf
[03:37:19] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:38:04] *** Quits: northernsage_ (northernsa@gateway/vpn/protonvpn/northernsage) (Ping timeout: 256 seconds)
[03:38:30] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[03:38:34] *** Joins: fikran (~fikran@user/fikran)
[03:38:40] <fikran> I might have asked something similar earlier...but I'm stuck
[03:39:02] <fikran> How do I logically and a value like b'\xFF' and b'\xFE' ?
[03:40:48] <bjs> fikran: bytes(a^b for (a, b) in zip(b'\xFF', b'\xFE'))  which gives you b'\x01'
[03:40:56] <bjs> if that's what you mean by "logical and"
[03:41:05] *** Joins: wyclif (~wyclif@user/wyclif)
[03:41:12] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[03:41:13] <fikran> I want to know what the result is if I AND \xFF and \xFE
[03:41:55] <fikran> Am I translating this correctly? bytes(b'\xFF') ^ bytes(b'\xFE')
[03:42:02] <bjs> fikran: bytes themselves don't support the bitwise operators ^&~ but they are iterables of ints which do. So you can do what I do
[03:42:55] <fikran> I don't understand what that line is doing...
[03:43:01] *** Quits: venmx_ (~albasawa@host31-52-111-223.range31-52.btcentralplus.com) (Read error: Connection reset by peer)
[03:43:03] <bjs> fikran: no, b"\x01\x02\x03" is the same as bytes([1,2,3])  (it's just sugar);  so if you loop over it you get the ints which *do* support &/^/~ etc and then you can re-combine them back into a bytes object
[03:43:17] *** Joins: venmx (~albasawa@host31-52-111-223.range31-52.btcentralplus.com)
[03:43:34] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[03:44:17] <fikran> hm...not sure how tp orceed then
[03:44:22] <bjs> fikran: what do you mean?
[03:44:34] *** Joins: bitrot (~rajkosto@109-93-41-98.dynamic.isp.telekom.rs)
[03:44:43] <fikran> I read a byte stream and received b'\xFF'
[03:44:49] <fikran> I want to know if the last bit of that value is set
[03:45:07] <fikran> so, I want to see the result if I AND that against 0xFE and check the result.
[03:45:17] <fikran> but, I can't figure out how to do that..
[03:45:25] <bjs> fikran: doesn't my code show you how to do that?
[03:45:35] <puff> Good afternoon.
[03:45:52] <fikran> bjs: I suppose I was trying to simplify that...but it does, you're right
[03:46:01] <bjs> fikran: (also, does your stream only give you 1 byte?)
[03:46:04] <Yhg1s> fikran: ord(b'\xFF') will give you an integer you can use bitwise operators on. like the & you're looking to do.
[03:47:03] <bjs> Yhg1s: ... what
[03:47:12] <bjs> Yhg1s: that is not mentioned anywhere in the docs and I've never seen that before https://docs.python.org/3/library/functions.html#ord
[03:47:50] <nedbat> puff: hey there
[03:47:51] *** Joins: drew (~drew@user/drew)
[03:47:51] *** Quits: rajkohaxor (~rajkosto@109-93-41-98.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[03:48:16] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[03:48:39] <Yhg1s> bjs: it's always worked, and it's a lot less magical than indexing bytes (which will hopefully, fingers crossed, eventually go away ;P)
[03:48:52] <fikran> thank you!
[03:48:56] <Yhg1s> bjs: and the thing with ord() is that it works on Python 2 bytes too ;P
[03:48:58] <bjs> Yhg1s: tbh bytes should just natively support the bitwise operators :)
[03:49:38] <bjs> Yhg1s: but what is its behaviour?  just some kind of weird identity?
[03:49:44] <bjs> `def ord(b): [x] = b; return x` ?
[03:50:18] <Yhg1s> bjs: no? It's just like ord('\xFF').
[03:50:40] *** Joins: mnemonic (~semeion@user/semeion)
[03:51:12] <bjs> Yhg1s: okay but the docs say that ord(c) takes a single-char string and returns the unicode codepoint of the character.  But what does that mean for bytes?
[03:51:27] <Yhg1s> bjs: it gives you the byte value. just like it did in Python 2 ;P
[03:51:55] <bjs> Yhg1s: I'm not sure the fact Python did it makes it any better ;)
[03:52:14] <bjs> I think the docs need updating to say... what it actually does better?
[03:52:23] <Yhg1s> bjs: the name 'ord' doesn't even make sense for the unicode string case, tbh ;P
[03:52:34] <bjs> Yhg1s: hey I'm not the one who got to name it
[03:52:51] <Yhg1s> bjs: the decision to make indexing of bytes work the way it works -- and how it works differently from other strings -- was clearly a mistake.
[03:54:00] <bjs> Yhg1s: I'm not defending these decisions;  I would much have preferred the stringy-ness of bytes objects to have been killed in totality in Python 3 and for bytes to natively support more numeric operations like & and ^.
[03:54:21] *** Quits: cul8r (~cul8r@198.133.178.20) (Quit: abducted by aliens)
[03:54:21] <bjs> I'm just saying,  the docs for the `ord` function do not mention even the fact it accepts bytes at all. I mean I guess it uses the hand-wavy "string"
[03:54:24] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 272 seconds)
[03:54:59] <bjs> but then it says stuff about Unicode code points which is not something you can even infer from a bytes object (unless you're being Python 2 levels of bad).  I had just never even thought to pass bytes to it in Python 3:P
[03:55:37] *** Joins: cjb (~cjb@user/cjb)
[03:58:23] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 252 seconds)
[03:58:45] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:59:33] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 255 seconds)
[03:59:42] *** Joins: m4v (~znc@ubuntu/member/m4v)
[04:00:55] *** Parts: CygniX (~CygniX@2605:6400:30:fdc6:68:f4:4e:78) (Konversation terminated!)
[04:02:07] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[04:02:13] *** Joins: CygniX (~CygniX@2605:6400:30:fdc6:68:f4:4e:78)
[04:02:49] *** Joins: zmt01 (~zmt00@user/zmt00)
[04:04:06] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[04:04:22] *** Joins: movingtxt (~movingtxt@user/movingtxt)
[04:05:16] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 256 seconds)
[04:06:07] *** Joins: heco (~redrum@user/redrum88)
[04:08:40] *** Quits: DX099 (~dx099@2a01:e0a:347:f1c1:b341:7307:37a4:afae) (Ping timeout: 256 seconds)
[04:09:00] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[04:09:35] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[04:09:51] *** Joins: dre_ (~dre@2001:8003:c932:c301:44a6:1427:4d7d:b99a)
[04:10:01] *** Parts: movingtxt (~movingtxt@user/movingtxt) ()
[04:11:41] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 252 seconds)
[04:11:58] *** Joins: slavfox (~slavfox@93.158.232.111)
[04:12:52] *** dre_ is now known as dre
[04:13:30] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 255 seconds)
[04:15:16] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[04:15:25] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[04:15:56] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[04:19:07] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[04:19:26] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:23:45] *** Joins: argento (~argent0@168-227-97-29.ptr.westnet.com.ar)
[04:23:51] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[04:24:50] *** Quits: argento (~argent0@168-227-97-29.ptr.westnet.com.ar) (Client Quit)
[04:29:54] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:30:24] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 276 seconds)
[04:31:07] *** Joins: pnoud (~pnoud@user/pnoud)
[04:33:12] *** Joins: vicfred (~vicfred@user/vicfred)
[04:33:18] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 255 seconds)
[04:33:18] *** Wulf4 is now known as Wulf
[04:33:55] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Read error: Connection reset by peer)
[04:33:58] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.2)
[04:34:03] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[04:34:14] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:34:58] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:36:12] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[04:36:26] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 256 seconds)
[04:37:21] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[04:37:22] *** Joins: pnoud (~pnoud@user/pnoud)
[04:39:07] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[04:39:50] *** Quits: hposca (~hposca@node-1w7jr9phoke2ssp3k5wcuo3j9.ipv6.telus.net) (Ping timeout: 256 seconds)
[04:42:29] *** Joins: y1n (~y1n@84-115-64-174.wifi.dynamic.surfer.at)
[04:43:31] *** Quits: KevinX (~KevinX@94.140.11.16) (Ping timeout: 268 seconds)
[04:45:42] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[04:45:54] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[04:46:44] *** brabrax_ is now known as brabrax
[04:46:45] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:46:53] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[04:48:30] *** Quits: nac (~nac@user/nac) (Quit: The Lounge - https://thelounge.chat)
[04:49:14] *** Joins: Jacktar_ (~whiteshad@gateway/tor-sasl/jacktar)
[04:49:15] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Remote host closed the connection)
[04:49:35] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:50:01] *** Jacktar_ is now known as jacktar
[04:50:25] *** Joins: brabrax_ (~brabrax@user/brabrax)
[04:50:26] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[04:52:17] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 252 seconds)
[04:52:50] *** Joins: trufas (~trufas@177.240.218.218)
[04:53:35] *** Parts: LunarJetman (LunarJetma@user/zogatribe) ()
[04:54:00] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[04:55:42] *** Quits: jazzy (~jaziz@2600:380:c114:2d85:2030:17e6:b76f:c1fa) (Ping timeout: 256 seconds)
[04:55:56] *** Joins: nac (~nac@user/nac)
[04:58:59] *** Joins: darksun (~darksun@user/darksun)
[04:59:22] *** Joins: JordiGH (~jordi@user/jordigh)
[04:59:45] <JordiGH> How do I get a temporary filename, but just the name, not the file? I've got a library function that wants a filename to save to. Should I just use uuid?
[05:00:22] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[05:01:50] <grym> JordiGH: i believe NamedTemporaryFile provides that
[05:01:56] <dre> JordiGH, just datestamp it?
[05:02:07] <ssbr_> JordiGH: I'd be tempted to use tempfile.TemporaryDirectory() instead
[05:02:17] <ssbr_> you can use NamedTemporaryFile and close the file.
[05:02:32] <InPhase> dre: Never rely on just dates for temporary files.  That's a security risk.
[05:02:38] <ssbr_> or I think there's a function in the os module or similar that NamedTemporaryFile uses, which has a big security warning next to it.
[05:03:04] <JordiGH> dre: Datestamps aren't low-res enough? I think I could get two files at the same instant?
[05:03:07] <InPhase> dre: That only works okay if you have a secured directory, and it's exclusive to one process.
[05:03:37] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[05:04:36] <ssbr_> can't be secured to just one process, the user is the best you can do. Which is pretty good for a typical multi-user setup in The Cloud
[05:04:48] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[05:04:49] <SnoopJ> JordiGH, do you want a temporary file, or do you want a unique filename?
[05:05:15] <ssbr_> The function I was thinking of was deleted, so disregard.
[05:05:32] <ssbr_> Yeah, I'd use TemporaryDirectory, that seems easiest.
[05:05:34] <JordiGH> Well, I want something like NamedTemporaryFile for a library function that wants a filename, not a file stream to write to.
[05:06:00] <SnoopJ> JordiGH, is it a problem if a file is created? If not, you could use .name on a NamedTemporaryFile
[05:06:06] <JordiGH> ssbr_: So TemporaryDirectory and use whatever filename I want? Okay, sure.
[05:06:23] <ssbr_> JordiGH: Yeah, that'd be my suggestion. Makes cleanup simple, and extends nicely to passing even more files in.
[05:06:31] <JordiGH> SnoopJ: I guess I can live with the tiny side effect of a zero length file being created and quickly destroyed.
[05:07:14] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[05:07:50] <SnoopJ> I'm asking clarifying questions to try and get a better sense of what your requirements are. Using UUIDs doesn't sound inappropriate based on what you've told us
[05:08:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:09:54] *** Joins: moto (~moto@user/moto)
[05:12:01] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[05:13:06] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[05:13:52] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[05:15:21] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[05:15:31] *** Joins: akk (~akk@97-123-109-214.albq.qwest.net)
[05:17:06] *** Joins: darksun (~darksun@user/darksun)
[05:18:49] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[05:23:04] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[05:23:11] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[05:23:42] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Ping timeout: 255 seconds)
[05:27:02] *** Joins: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net)
[05:27:25] *** Joins: bigRoo (~user@131.236.54.84)
[05:28:15] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 276 seconds)
[05:28:59] *** Joins: d00gy (~tonberry@2601:401:c400:8b30:ba27:ebff:fee2:f93c)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:27] <raxor2k> maybe a little bit of a different question: But inside the "taskReader" class, i am able to return 3 values dependent on how many tasks there is in a db(3). When i create a class B that imports the taskReader class, it then only return the latest value. What could the reason be ?
[05:31:47] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[05:31:48] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 255 seconds)
[05:31:58] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[05:32:01] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[05:34:03] *** Joins: vlm (~vlm@user/vlm)
[05:35:51] *** Quits: bitrot (~rajkosto@109-93-41-98.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[05:35:56] *** Joins: rajkohaxor (~rajkosto@109-93-41-98.dynamic.isp.telekom.rs)
[05:36:44] <SnoopJ> raxor2k, it's hard to say without seeing some of the code.
[05:38:06] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 255 seconds)
[05:39:50] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:40:40] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[05:41:16] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[05:41:35] *** Joins: pete443_ (~pete@user/pete443)
[05:42:10] *** Quits: pizdets (~pizdets@183.182.115.100) (Ping timeout: 245 seconds)
[05:42:28] *** Quits: moog (~moog@107.126.53.20) (Quit: Leaving)
[05:42:44] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[05:42:53] <Henry151> https://termbin.com/wwmo when using attr.s and creating classes, like in this paste, what's the correct way to specify the default values?
[05:42:54] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[05:43:08] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[05:43:32] <nedbat> Henry151: you don't want `brand=str`, you want `brand: str`
[05:43:38] *** Joins: darksun (~darksun@user/darksun)
[05:44:08] <Henry151> ah thanks
[05:44:22] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 272 seconds)
[05:44:51] <raxor2k> SnoopJ : my code is too complicated to show, its no point
[05:45:19] <SnoopJ> raxor2k, I have no advice for you, then
[05:45:44] <SnoopJ> Except that the object is holding some kind of state and it isn't what you expect it to be from B
[05:46:04] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Client Quit)
[05:46:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[05:46:25] <raxor2k> in class B, only the latest value from task_reader is shown..
[05:46:39] <raxor2k> and inside the task_reader, all 3 of the tasks is grabbed from the db
[05:46:42] *** Quits: y1n (~y1n@84-115-64-174.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[05:46:54] *** Joins: y1n (~y1n@84-115-64-174.wifi.dynamic.surfer.at)
[05:46:56] <nedbat> raxor2k: you need to show code if you want help
[05:46:57] *** Quits: d00gy (~tonberry@2601:401:c400:8b30:ba27:ebff:fee2:f93c) (Quit: WeeChat 3.0)
[05:49:19] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[05:50:12] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Quit: leaving)
[05:50:27] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[05:50:53] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[05:50:56] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[05:51:03] <veegee> hello!
[05:51:21] *** Quits: mnemonic (~semeion@user/semeion) (Quit: WeeChat 3.2)
[05:51:35] <veegee> nedbat is the one true constant in the universe
[05:51:48] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 256 seconds)
[05:51:50] <nedbat> veegee: you mean I'm stuck in a rut :)
[05:52:14] <veegee> you're always here for all the years I've been in this channel
[05:52:24] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[05:52:24] <nedbat> see? stuck!
[05:52:31] <veegee> that's a lot of years
[05:52:36] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[05:52:54] <veegee> the only reasonable moderator I've ever seen in my life
[05:53:29] <nedbat> veegee: i am certain that is not true
[05:53:57] *** Joins: kafka (~kafka@user/kafka)
[05:54:00] <veegee> I have trolled much in my life. Many channels indeed. You're the only one who made me not troll willfully
[05:54:02] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[05:54:22] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[05:54:45] *** Quits: bambams (~bambams@user/bambams) (Ping timeout: 255 seconds)
[05:55:15] <nedbat> veegee: i am glad you are mending your ways
[05:56:33] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[05:57:00] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 255 seconds)
[05:57:27] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[05:57:30] <tm007> How many years you guys are here in IRC
[05:57:35] <tm007> nedbat: veegee
[05:58:16] <veegee> Well I'm 30 now and I remember the trolling journey when I started university, so at least 12 years
[05:58:43] <veegee> I still troll, just not in this channel, and it's much more targeted to those who can't take a joke
[05:59:39] <tm007> veegee: nice man
[05:59:44] <nedbat> tm007: i've been in this channel for 10 years I think
[05:59:49] <tm007> there's a community feel about the IRC
[06:00:02] <veegee> Python 3 was released in 2008, I definitely remember that
[06:00:05] *** Joins: rajkosto (~rajkosto@109-93-41-98.dynamic.isp.telekom.rs)
[06:00:31] <tm007> With all the fancy new stuffs, one might have thought that IRC will become less popular
[06:01:17] <nedbat> tm007: there are plenty of other venues.  The Python discord is enormous
[06:01:27] <tm007> Yeah
[06:01:33] * SnoopJ enjoys a proliferation of options
[06:02:20] <veegee> they're not "fancy". They're just things made by script kiddies rediscovering OMG I CAN SEND TEXTS FROM DA SOCKETZ@@!!
[06:02:34] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[06:02:44] <veegee> like slack and so on
[06:02:53] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[06:03:13] <SnoopJ> Pays better than the time in which that perjorative was coined, I suppose
[06:03:18] *** Quits: rajkohaxor (~rajkosto@109-93-41-98.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[06:04:27] <veegee> I took a step back from the software engineering company I started. I've gone as far as I want to with software. I can do anything I want with any language on any system
[06:04:47] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:04:52] <veegee> Been doing machining lately. Got a hobby workshop with a few vertical mills, lathes, welding equipment, etc.
[06:05:09] *** Joins: brabrax- (~brabrax@user/brabrax)
[06:05:15] <veegee> Converting one of the large mills to CNC now
[06:05:31] <SnoopJ> Being able to program anything in any language will probably come in handy for that
[06:06:00] <veegee> Yeah. Software is the easy part
[06:07:23] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[06:08:19] <Jonno_FTW> there's a python discord?
[06:08:35] *** Quits: Sophon96 (~brandon@user/sophon96) (Ping timeout: 265 seconds)
[06:08:42] *** Quits: brabrax_ (~brabrax@user/brabrax) (Ping timeout: 255 seconds)
[06:08:48] *** brabrax- is now known as brabrax
[06:09:13] <nedbat> Jonno_FTW: https://discord.gg/python
[06:09:17] <Jonno_FTW> I'm in now
[06:09:20] <SnoopJ> also https://pythondiscord.com/
[06:09:20] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Read error: Connection reset by peer)
[06:09:30] <SnoopJ> although I think there is more than just one ;)
[06:10:09] <Jonno_FTW> i prefer irc still
[06:10:11] <tm007> I'm in too
[06:10:25] <Jonno_FTW> so much cleaner here
[06:11:24] <nedbat> SnoopJ: that's a different entry point to the same place
[06:11:38] *** Quits: kmh (~kmh@p200300df5f0430000ddb5b92e0a0f090.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:11:49] <SnoopJ> nedbat, yep, with some metadata
[06:14:34] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[06:14:48] *** Joins: veegee (~veegee@199.36.223.29)
[06:14:54] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[06:17:09] *** Joins: supbo (~kenan@li227-215.members.linode.com)
[06:17:19] *** Quits: supbo (~kenan@li227-215.members.linode.com) (Client Quit)
[06:17:52] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:17:58] *** Joins: supbo (~kenan@li227-215.members.linode.com)
[06:17:58] *** Joins: frost (~frost@59.71.241.179)
[06:20:12] *** Joins: kmh_ (~kmh@p200300df5f0f42000ddb5b92e0a0f090.dip0.t-ipconnect.de)
[06:20:25] *** Joins: CodePoint (~BitShift@2600:1700:3070:3790::29)
[06:20:35] *** Quits: veegee (~veegee@199.36.223.29) (Quit: Textual IRC Client: www.textualapp.com)
[06:21:05] *** Joins: djapo (~archangel@user/djapo)
[06:23:08] *** Quits: nac (~nac@user/nac) (Quit: The Lounge - https://thelounge.chat)
[06:24:18] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[06:26:14] *** Joins: rajkohaxor (~rajkosto@79-101-133-21.dynamic.isp.telekom.rs)
[06:26:17] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[06:26:55] <seanicus> hello, how do i turn a string into a random-seeming but deterministic integer?
[06:27:46] <nedbat> seanicus: do you need the mapping to be reversible?
[06:27:51] <seanicus> for example.... x = thefunction("hello world") ; print(x) -> 54366353467
[06:27:58] <seanicus> nedbat: no
[06:28:01] *** Joins: nac (~nac@user/nac)
[06:28:09] *** Joins: veegee (~veegee@172.98.71.46)
[06:28:23] <nedbat> seanicus: but different strings need to be different ints?
[06:28:25] <seanicus> I thought it was simply "hash" but that is not persistent through multiple python programs
[06:28:30] <seanicus> nedbat: not necessarily.
[06:28:35] <SnoopJ> hash() isn't, but the stuff in hashlib is
[06:28:44] <nedbat> seanicus: hashlib is the thing
[06:28:51] <seanicus> im looking in hashlib, and the return values are all strings.
[06:29:04] <nedbat> seanicus: you can get binary values also
[06:29:06] <seanicus> I need an int so i can modulo it.
[06:29:33] <SnoopJ> you may be looking too closely at the examples, which do focus on the (string) hex digests, but you can get what you want from it
[06:29:35] *** Quits: GadgetNerd (~GadgetNer@user/gadgetnerd) (Ping timeout: 255 seconds)
[06:29:35] <nedbat> seanicus: .digest() is bytes, you can turn that into ints
[06:29:38] *** Joins: d00gy (~tonberry@2601:401:c400:8b30:ba27:ebff:fee2:f93c)
[06:29:51] *** Quits: rajkosto (~rajkosto@109-93-41-98.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[06:29:52] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:30:36] *** Quits: driib (~driib@185.195.233.170) (Read error: Connection reset by peer)
[06:30:52] *** Joins: driib (~driib@185.195.233.170)
[06:31:25] <nedbat> seanicus: int.from_bytes(h.digest()[:8], "little")
[06:31:29] <seanicus> nedbat: int.from_bytes(h.digest(), "big")
[06:31:35] <seanicus> oh, you beat me to it
[06:31:38] <seanicus> okay, thank you!
[06:31:40] <nedbat> we can differ on byte order :)
[06:31:40] *** Joins: wonky (~joee@072-186-122-186.res.spectrum.com)
[06:31:56] * SnoopJ likes to byte the egg from the little side
[06:33:45] <SnoopJ> nedbat, is that [:8] for simplification purposes (limiting the output space) or is there something more nuanced to it?
[06:34:16] *** Quits: nac (~nac@user/nac) (Quit: The Lounge - https://thelounge.chat)
[06:34:21] <nedbat> SnoopJ: i just figured we didn't need enormous ints if there's going to be a mod happening.
[06:34:42] <nedbat> seanicus: is this for sharding?
[06:34:46] *** Joins: nac (~nac@user/nac)
[06:35:02] *** Quits: fluter (~fluter@user/fluter) (Ping timeout: 272 seconds)
[06:35:22] *** Quits: djapo (~archangel@user/djapo) (Quit: Lost terminal)
[06:35:59] <seanicus> nedbat: quickly looking up what sharding is...maybe?  Not sure.  What I'm doing is kinda similar to how rainbow tables work, I guess.  I don't know the term for this technique
[06:36:13] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[06:36:27] <nedbat> seanicus: sharding: i meant distributing items to a number of different servers or databases.
[06:36:39] <seanicus> No, not multiple servers or databases or anything
[06:37:03] <seanicus> i am making plain binary files that are acting as a simple database with pointers to other files with pointers
[06:37:25] *** Quits: wonky (~joee@072-186-122-186.res.spectrum.com) (Quit: WeeChat 2.3)
[06:37:48] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Ping timeout: 276 seconds)
[06:38:03] *** Quits: raxor2k (~raxor2k@204.109-247-146.customer.lyse.net) ()
[06:38:13] *** Joins: hendursaga (~weechat@user/hendursaga)
[06:38:51] *** Quits: y1n (~y1n@84-115-64-174.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[06:40:41] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[06:41:06] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 255 seconds)
[06:41:09] *** Quits: supbo (~kenan@li227-215.members.linode.com) (Quit: leaving)
[06:41:19] *** Joins: supbo (~kenan@li227-215.members.linode.com)
[06:41:38] *** Joins: pnoud (~pnoud@user/pnoud)
[06:42:05] *** Joins: Celeo (~Celeo@user/celeo)
[06:42:16] *** Quits: Celeo (~Celeo@user/celeo) (Remote host closed the connection)
[06:43:39] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 276 seconds)
[06:45:36] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 276 seconds)
[06:46:34] *** Quits: P1RATEZ (piratez@user/p1ratez) (Remote host closed the connection)
[06:47:18] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[06:49:24] *** Joins: northernsage (northernsa@gateway/vpn/protonvpn/northernsage)
[06:49:42] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:49:42] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[06:49:42] *** finn_elija is now known as FinnElija
[06:51:18] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 256 seconds)
[06:51:36] *** Quits: akk (~akk@97-123-109-214.albq.qwest.net) (Quit: +++)
[06:53:28] *** Joins: jpic_ (~jpic@82.142.18.222)
[06:54:19] *** Joins: iomari891 (~iomari891@105.112.138.38)
[06:56:34] *** Joins: mattmcc (matt@2600:3c00::f03c:91ff:fe89:c2e8)
[06:57:18] *** Quits: jpic (~jpic@82.142.8.102) (Ping timeout: 276 seconds)
[07:01:40] *** Joins: northernsage_ (northernsa@gateway/vpn/protonvpn/northernsage)
[07:02:32] *** Joins: pspiagicw (~pspiagicw@1.23.151.172)
[07:04:08] *** Quits: northernsage (northernsa@gateway/vpn/protonvpn/northernsage) (Remote host closed the connection)
[07:05:02] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[07:05:32] *** Quits: zmt01 (~zmt00@user/zmt00) (Quit: Gone.)
[07:06:07] <SnoopJ> seanicus, and you want no particular structure to these integers, right? A hash will distribute the possible inputs in a (hopefully satisfactorily!) random way into the output space (i.e. the integers 0...256**8 in that case)
[07:06:46] <seanicus> Correct, that's the plan
[07:07:19] <seanicus> not digits 8 bytes long though
[07:08:48] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:10:00] *** Quits: drew (~drew@user/drew) (Ping timeout: 256 seconds)
[07:13:24] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[07:13:43] *** Joins: pnoud (~pnoud@user/pnoud)
[07:14:00] *** Quits: CodePoint (~BitShift@2600:1700:3070:3790::29) (Quit: Never gonna give you up, never gonna let you down...)
[07:14:38] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[07:18:28] <sybariten> OK so i'm stuck on a pretty basic concept of variables and their acessibility here
[07:18:45] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 276 seconds)
[07:19:48] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[07:19:49] <sybariten> lets say that first i had a script called main.py, and one thing i could do was to list the contents of a basket, and i had functionality to add or remove fruits to the basket. The basked is a list
[07:22:11] <sybariten> then i redesign the script so that most of the functionality is in an external module servant.py that i import. Now, there is a function in servant.py thats called showBasket() and it does print(basket) and print(len(basket)) ....   well, i mean, this doesnt seem to work. Basket is defined at the top of main.py like this basket = []
[07:22:47] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Read error: Connection reset by peer)
[07:23:03] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[07:23:51] <sybariten> i thought the actual function from servant.py would just be "lifted in" into main.py, in memory, so that it could transparently be used as if it had actually been defined in main.py and not servant.py .  But apparently this function doesnt see the list basket ....  so is there a nice way to do this?
[07:24:38] <wgwz> you should be able to import it sybariten
[07:24:38] <habnabit_> sybariten, no, imports have no notion of scope whatosever
[07:24:59] <habnabit_> sybariten, you can't see what imported you
[07:25:01] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[07:25:28] <wgwz> whoops sorry i misunderstood what you were doing sybariten
[07:25:32] <sybariten> habnabit_: aha... yeah i was probably thinking about it the other way around, erroneously
[07:26:13] *** Joins: jinsun (~jinsun_@user/jinsun)
[07:26:34] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-70e3-a5ff-63ed-5b44.res6.spectrum.com) (Ping timeout: 272 seconds)
[07:28:08] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 256 seconds)
[07:29:15] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Ping timeout: 255 seconds)
[07:29:29] <sybariten> So, very oversimplified, i wouldnt use lists in a module if they were defined in the main script
[07:29:51] <habnabit_> sybariten, it sounds like you want to make a class with instances
[07:30:01] <habnabit_> sybariten, then the main script owns an instance of it
[07:30:05] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[07:30:15] <sybariten> habnabit_: thats possible but we're not really there yet in the education TBH
[07:30:24] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 256 seconds)
[07:30:31] *** Quits: d00gy (~tonberry@2601:401:c400:8b30:ba27:ebff:fee2:f93c) (Quit: WeeChat 3.0)
[07:30:36] *** Quits: jinsun (~jinsun_@user/jinsun) (Ping timeout: 255 seconds)
[07:30:39] <habnabit_> sybariten, then doing this will suck, because it's exactly what classes are for
[07:31:11] <sybariten> classes would come at a later moment for us... so i may just have misunderstood a bit about exactly how much we need to move out of the main script
[07:31:24] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[07:34:07] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[07:35:24] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[07:35:58] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:36:11] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[07:37:20] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[07:37:53] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[07:38:10] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[07:38:22] *** Joins: phax (~phax@user/phax)
[07:38:49] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:38:57] *** Joins: mexen (uid495612@user/mexen)
[07:38:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:39:38] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[07:40:11] *** Joins: djapo (~archangel@user/djapo)
[07:42:18] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 255 seconds)
[07:44:33] *** Joins: pnoud (~pnoud@user/pnoud)
[07:44:52] *** Quits: audiocat (~audio@2603-8081-1800-00ad-22ac-dc5d-4600-e5df.res6.spectrum.com) (Remote host closed the connection)
[07:45:10] *** Joins: audiocat (~audio@2603-8081-1800-00ad-9a66-7d6f-37d7-ca3f.res6.spectrum.com)
[07:46:15] *** Joins: darksun (~darksun@user/darksun)
[07:48:09] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[07:50:08] *** Joins: GadgetNerd (~GadgetNer@user/gadgetnerd)
[07:50:48] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 256 seconds)
[07:51:45] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[07:55:07] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:55:21] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[08:01:12] *** Quits: resmo (~resmo@2a00:d420:9:8a00:513a:f933:3c9f:c4f5) (Remote host closed the connection)
[08:01:22] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[08:01:25] *** Joins: resmo (~resmo@2a00:d420:9:8a00:26f9:c7db:610f:cdad)
[08:01:25] *** BlueShark_ is now known as BlueShark
[08:02:45] *** Joins: rajkosto (~rajkosto@109-92-10-127.dynamic.isp.telekom.rs)
[08:03:18] *** Quits: rajkohaxor (~rajkosto@79-101-133-21.dynamic.isp.telekom.rs) (Ping timeout: 272 seconds)
[08:03:20] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[08:03:39] *** Joins: pnoud (~pnoud@user/pnoud)
[08:05:28] <BrenBarn> importing doesn't "lift" things into the main script as you describe
[08:05:54] *** Joins: majdal (~majdal@bras-base-toroon0954w-grc-63-142-113-216-11.dsl.bell.ca)
[08:06:04] <BrenBarn> I mean another way to do it, depending on what you're doing, is to have your function take the basket as an argument
[08:06:09] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[08:06:29] <BrenBarn> so then in `main.py` you have `basket = []` and when you call the function you do `show_basket(basket)`
[08:06:51] *** Quits: Thanattt (~Thanatos@102.91.4.38) (Ping timeout: 276 seconds)
[08:07:55] *** Joins: clawh (~clawh@78.10.204.236)
[08:07:58] *** Parts: majdal (~majdal@bras-base-toroon0954w-grc-63-142-113-216-11.dsl.bell.ca) ()
[08:08:17] *** Quits: flyback (~flyback@2601:540:8201:1e60:b90d:9f30:19da:85a2) (Remote host closed the connection)
[08:08:29] *** Joins: flyback (~flyback@2601:540:8201:1e60:6105:a6f1:3967:8896)
[08:09:00] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[08:11:13] *** Joins: rajkohaxor (~rajkosto@109-92-10-127.dynamic.isp.telekom.rs)
[08:12:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[08:15:18] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 276 seconds)
[08:15:20] *** Quits: rajkosto (~rajkosto@109-92-10-127.dynamic.isp.telekom.rs) (Ping timeout: 272 seconds)
[08:15:46] *** Joins: devish (~Guest22@52.95.75.16)
[08:17:44] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[08:17:52] <devish> {"env":["Daemon:Prod:10155"],"entity":"Regional:Beta"}   I am getting a response like this but when I try to check the data type it is str. How can I parse it? I am looking to get the list of env
[08:18:59] <habnabit_> devish, how are you 'getting' it and what are you printing? can you pastebin your code and output?
[08:19:28] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[08:19:29] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[08:21:50] *** Joins: pnoud (~pnoud@user/pnoud)
[08:22:32] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[08:23:03] *** Joins: Guest22 (~Guest22@52.95.75.0)
[08:23:28] *** Quits: devish (~Guest22@52.95.75.16) (Ping timeout: 246 seconds)
[08:23:40] *** Quits: audiocat (~audio@2603-8081-1800-00ad-9a66-7d6f-37d7-ca3f.res6.spectrum.com) (Ping timeout: 256 seconds)
[08:25:22] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[08:25:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 276 seconds)
[08:26:01] *** Joins: Vonter (~Vonter@user/vonter)
[08:26:24] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 255 seconds)
[08:26:44] *** Guest22 is now known as devish
[08:27:45] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[08:28:50] <devish> Is there a way to cast a string to dict?
[08:29:12] <habnabit_> devish, is it json?
[08:29:14] <habnabit_> devish, how are you 'getting' it and what are you printing? can you pastebin your code and output?
[08:30:58] <devish> habnabit_ it is part of a response, it would be difficult to paste the response. I tried to parse it like dict but then it won't work so when I checked the data type it was string
[08:31:20] <dre> dict_obj = json.loads(string)
[08:31:45] <dre> then
[08:31:46] <habnabit_> devish, ok, but show us the code
[08:31:58] <habnabit_> devish, loads might be what you want, or there might be an easier way
[08:32:50] *** Joins: wyclif (~wyclif@user/wyclif)
[08:34:05] <devish> json.load works
[08:34:22] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[08:35:14] <devish> code is simple, recommend.details contains {"env":["Deamon:101552835664"],"entity":"Regional:Prod"}
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:06] *** Quits: {HD} (~{HD}@191.96.185.112) (Ping timeout: 276 seconds)
[08:36:19] *** Joins: nomic2 (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[08:36:23] *** Quits: nomic2 (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Read error: Connection reset by peer)
[08:36:38] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:44] <habnabit_> devish, the library that provides it might have the decoded json somewhere already
[08:37:14] <devish> ohk
[08:41:05] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[08:41:13] *** Joins: {HD} (~{HD}@191.96.185.201)
[08:41:16] *** Joins: pnoud (~pnoud@user/pnoud)
[08:41:42] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[08:41:51] *** Joins: Elzington_ (~Elzington@static-198-54-128-62.cust.tzulo.com)
[08:43:57] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 255 seconds)
[08:45:01] *** Joins: fluter (~fluter@user/fluter)
[08:45:51] *** Quits: Elzington (~Elzington@104.129.24.124) (Ping timeout: 276 seconds)
[08:46:30] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 276 seconds)
[08:47:16] *** Joins: i0e (~is0ke3@user/is0ke3)
[08:49:50] *** Joins: audiocat (~audio@2603-8081-1800-00ad-9f93-c162-db16-790c.res6.spectrum.com)
[08:52:03] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[08:52:14] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Read error: Connection reset by peer)
[08:53:40] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:53:51] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:54:21] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[08:57:33] *** Quits: LiftLeft (~LiftLeft@154.21.114.70) (Ping timeout: 276 seconds)
[08:57:55] *** Joins: pnoud (~pnoud@user/pnoud)
[08:59:55] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-9484-dafc-2024-9392.res6.spectrum.com)
[09:02:46] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 256 seconds)
[09:03:48] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[09:04:16] *** Joins: Guest42 (~textual@61.87.177.226)
[09:04:27] <Guest42> can a python function return two values
[09:05:04] <pspiagicw> Yes
[09:05:21] <Jonno_FTW> Guest42: return 1,2
[09:05:27] <Guest42> ok
[09:05:36] <Jonno_FTW> is there a limit to how many values you can return?
[09:06:02] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[09:06:39] <Jonno_FTW> I guess you can return as many values as you can fit in memory
[09:07:23] <pspiagicw> if returning lot of values , use generator instead
[09:09:46] <pspiagicw> Max size is stored in sys.maxsize , 2^64 in 64 bit machine
[09:10:10] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net) (Quit: Quitting)
[09:11:04] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[09:11:15] <Jonno_FTW> yeah but you still need to store the rest of your program , python runtime and the OS
[09:13:25] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net)
[09:13:55] <Guest42> Jonno_FTW if i have more than one return value
[09:14:01] <Guest42> how can i use that in the next funcation
[09:14:06] <Guest42> lets say i do return var1, var2
[09:14:17] <Guest42> how can i use it in another function
[09:16:30] <BrenBarn> it's more that you can return only one value, but that value can be a container that contains multiple values
[09:16:39] <BrenBarn> so if you do `return var1, var2`, what you returned is a tuple with two things inside it
[09:16:45] <BrenBarn> and you can use that like any tuple
[09:16:53] *** Quits: reset (~reset@user/reset) (Quit: reset)
[09:18:13] <Jonno_FTW> Guest42: if you have "def f(): return 1,2,3" then elsewhere you can have a,b,c = f()
[09:18:46] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:19:14] <Jonno_FTW> if you're only interested in the first few you can do this: a,b,*c = f()
[09:19:23] *** Parts: wwalker (~wwalker@platinum.solid-constructs.com) ()
[09:19:27] <Jonno_FTW> c will be a list of everything after the first two returned values
[09:20:21] <Jonno_FTW> Guest42: this is called variable unpacking
[09:20:45] <BrenBarn> the point is that if f() returns a tuple then you have a tuple
[09:21:01] <Guest42> great
[09:21:03] <BrenBarn> if you know how to do things with tuples then you know how to do things with the return value of f
[09:21:10] <BrenBarn> if not, then the question isn't really about returning multiple values, it's about how to use tuples
[09:21:12] <Guest42> thanks for the crisp explanation
[09:21:56] *** Joins: eyepeetee (~aa@075-135-186-198.res.spectrum.com)
[09:22:17] <Jonno_FTW> you can also use the * assignment to unpack generators
[09:22:25] <Jonno_FTW> Guest42: read this https://stackabuse.com/unpacking-in-python-beyond-parallel-assignment
[09:22:29] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[09:23:15] <eyepeetee> hi, it seems like the memory from within some functions i call does not get fully cleared even after the scope of its execution, and the scope of the variables in question, has finished
[09:23:20] <eyepeetee> not sure if i worded that correctly
[09:23:36] <eyepeetee> is there a meaningful way to debug how or where that's happening?
[09:24:29] <Jonno_FTW> eyepeetee: please post a minimal working example
[09:25:05] <Jonno_FTW> my first suspicion would that you are using global
[09:25:43] *** Joins: cedric (~cedric@2a01:cb11:867:c200:c82:b85b:e1ec:aee)
[09:25:54] <eyepeetee> Johno_FTW: i understand it's best to phrase a question with a piece of code but in this case i cannot since it's within a program that runs through many routines and memory is building up unexpectedly
[09:26:01] <eyepeetee> no global used
[09:26:29] <eyepeetee> i'm just inquiring about a good way to debug, so i can try and narrow this down to specific code
[09:26:36] <eyepeetee> to debug this sort of issue*
[09:26:42] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[09:26:54] *** Joins: auctus (~auctus@user/auctus)
[09:27:12] <auctus>     s='00 03 00 00 00 06 01 03 00 00 00 01'
[09:27:13] <auctus>     print(b''.join([int(c,16).to_bytes(1,'little') for c in s.split(' ')]))
[09:27:27] <auctus> is there a nicer-looking way to do it?
[09:27:55] <auctus> i like the readability of 00 03 00 etc instead of b'\x00\x03\x00'
[09:28:10] <auctus> but the conversion function is kinda ugly
[09:29:01] <grawity> hmm, either bytes([int(c, 16) for c in s.split()]) ...
[09:29:11] <grawity> ... or binascii.unhexlify(s.replace(" ", ""))
[09:29:25] *** Joins: stranac (~stranac@195.29.239.126)
[09:30:07] <eyepeetee> Johno_FTW: i literally have to end the program's execution and re-run it in order to reset its memory usage
[09:30:33] <eyepeetee> what basic code practice am i missing that would cause that to happen?
[09:31:03] <auctus> grawity: way way nicer, thanks :)
[09:31:31] <kor1> eyepeetee: closing resources inside a loop?
[09:31:31] *** Quits: bigRoo (~user@131.236.54.84) (Read error: Connection reset by peer)
[09:31:34] <kor1> llike files
[09:32:04] <eyepeetee> kor1: for files i always use `with`, so that should automatically close that resource always right?
[09:32:12] <kor1> yes
[09:32:19] <eyepeetee> ok so that should be okay
[09:32:34] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[09:32:55] <grawity> auctus: though I would just write bytes([0x00, 0x03, 0x00, 0x00, 0x00, 0x06, ...]) usually
[09:32:58] <kor1> are you calling some third party library, one that might be written in c?
[09:33:03] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:34:19] <eyepeetee> kor1: i would post the code, but the problem is i am trying to narrow down the issue to the problematic code
[09:34:36] <eyepeetee> there are third party libraries...there's a lot of code involved
[09:35:10] <eyepeetee> some large files are loaded into memory into variables whose scope should be limited to the functions they're in
[09:35:37] <eyepeetee> but it seems like that data is remaining in utilized memory even after the scope of those some functions passes
[09:35:43] <eyepeetee> and i'm not using `global` anywhere
[09:35:43] *** Joins: drmessano (sid104353@user/drmessano)
[09:36:42] <BrenBarn> are you passing large data from one function to another?
[09:38:02] <eyepeetee> BrenBarn: no large data is being passed from function to function, it's all saved into a file and loaded back into memory in a different function
[09:38:30] <eyepeetee> ...it wasn't really designed to be that way, it just happened that a number of different procedures got strung together into a single program over the last couple of years
[09:39:08] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[09:39:26] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[09:39:35] <kor1> i gotta sleep but have you tried tracemalloc?
[09:39:53] <eyepeetee> it's a big process that ingests medical pdf documents, parses them, extracts certain pieces of data, aggregates them, does some calculations and transformations, and imports to some tables in a db
[09:39:54] <kor1> i think it could be related to the large files
[09:39:59] <eyepeetee> i haven't kor1 i'll look it up
[09:40:46] <eyepeetee> hmm. tracemalloc looks like exactly what i need to debug this
[09:40:48] <eyepeetee> thank you kor1
[09:40:48] *** Quits: kor1 (~kor1@user/kor1) (Read error: Connection reset by peer)
[09:41:18] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 256 seconds)
[09:41:38] <BrenBarn> Python doesn't always release memory back to the OS just because an object is garbage collected
[09:41:59] *** Joins: bitrot (~rajkosto@109-92-10-127.dynamic.isp.telekom.rs)
[09:42:03] *** Joins: kor1 (~kor1@user/kor1)
[09:42:13] <BrenBarn> so if you read a big file memory usage may stay high even if that particular object goes away
[09:43:17] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[09:45:09] *** Quits: rajkohaxor (~rajkosto@109-92-10-127.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[09:45:27] *** Quits: kor1 (~kor1@user/kor1) (Client Quit)
[09:47:16] *** Joins: LiftLeft (~LiftLeft@154.21.23.84)
[09:47:25] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[09:47:45] *** Joins: darksun (~darksun@user/darksun)
[09:49:36] *** Joins: rajkosto (~rajkosto@109-92-10-127.dynamic.isp.telekom.rs)
[09:49:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 255 seconds)
[09:52:48] *** Quits: bitrot (~rajkosto@109-92-10-127.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[09:53:27] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 276 seconds)
[09:54:29] *** Joins: rajkohaxor (~rajkosto@109-92-10-127.dynamic.isp.telekom.rs)
[09:55:13] <Jonno_FTW> in gunicorn, I get an [ERROR] in the log, is it possible to get a stack trace of what caused that error?
[09:56:28] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[09:57:10] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[09:57:18] *** Joins: GvP (~GvP@ip70-162-85-176.ph.ph.cox.net)
[09:57:45] *** Quits: rajkosto (~rajkosto@109-92-10-127.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[09:57:49] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:59:45] *** Joins: haroon (~haroon@gw.wmd.de)
[10:02:00] *** Joins: dvx (~dvx@185.63.97.64)
[10:02:27] *** Joins: palasso (~palasso@user/palasso)
[10:03:17] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Read error: Connection reset by peer)
[10:03:55] *** Joins: bitrot (~rajkosto@109-92-10-127.dynamic.isp.telekom.rs)
[10:05:08] *** Quits: phax (~phax@user/phax) (Remote host closed the connection)
[10:05:17] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[10:07:53] *** Quits: Doffi (~doffi@91.132.197.188) (Ping timeout: 268 seconds)
[10:08:04] *** Quits: rajkohaxor (~rajkosto@109-92-10-127.dynamic.isp.telekom.rs) (Ping timeout: 272 seconds)
[10:08:33] *** Quits: LiftLeft (~LiftLeft@154.21.23.84) (Ping timeout: 255 seconds)
[10:09:19] *** Quits: pspiagicw (~pspiagicw@1.23.151.172) (Read error: Connection reset by peer)
[10:09:31] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[10:09:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:09:52] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[10:10:23] *** Joins: kiwi_36 (~thefuture@197.237.3.26)
[10:10:30] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[10:10:51] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[10:13:37] *** Joins: Jacktar_ (~whiteshad@gateway/tor-sasl/jacktar)
[10:13:57] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[10:15:17] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 244 seconds)
[10:15:18] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 256 seconds)
[10:15:18] *** Jacktar_ is now known as jacktar
[10:21:20] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[10:24:11] *** Joins: Jacktar_ (~whiteshad@gateway/tor-sasl/jacktar)
[10:26:07] *** Joins: rajkohaxor (~rajkosto@178-222-120-191.dynamic.isp.telekom.rs)
[10:26:49] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[10:27:41] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 244 seconds)
[10:27:42] *** Jacktar_ is now known as jacktar
[10:29:42] *** Quits: bitrot (~rajkosto@109-92-10-127.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[10:30:41] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[10:30:47] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[10:32:20] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[10:32:58] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[10:34:37] *** Quits: s1b1 (~s1b1@user/s1b1) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[10:35:40] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Remote host closed the connection)
[10:36:39] *** Quits: imp (~imp@186.205.11.214) (Quit: imp)
[10:37:38] *** Quits: jabberwock (~jessy@user/jabberwock) (Remote host closed the connection)
[10:37:59] *** Joins: jabberwock (~jessy@user/jabberwock)
[10:38:29] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:38:31] *** Joins: grayhemp (~grayhemp@107-203-253-139.lightspeed.sntcca.sbcglobal.net)
[10:39:21] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[10:41:11] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[10:42:36] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[10:43:12] *** Quits: alnr (~alnr@38.125.204.99) (Ping timeout: 255 seconds)
[10:44:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[10:46:04] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 272 seconds)
[10:46:04] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[10:46:49] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:04] *** Joins: s1b1 (~s1b1@user/s1b1)
[10:47:27] *** Joins: seednode (~seednode@user/seednode)
[10:47:49] *** Joins: inom (~inom@176.59.102.225)
[10:50:04] *** Quits: etiennem- (~etienne@176-149-215-214.abo.bbox.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[10:50:04] *** Quits: libussa (~libussa@libussa.net) (Quit: quit)
[10:50:04] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (Quit: ZNC 1.8.2 - https://znc.in)
[10:50:22] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[10:50:23] *** Joins: etienneme (~etienne@176-149-215-214.abo.bbox.fr)
[10:50:33] *** Joins: libussa (~libussa@libussa.net)
[10:52:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:54:08] *** Quits: MrFixIt (~samurai_@c-73-246-215-75.hsd1.il.comcast.net) (Ping timeout: 268 seconds)
[10:57:11] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[10:58:45] *** Joins: pnoud (~pnoud@user/pnoud)
[11:01:39] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[11:03:18] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:03:54] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[11:04:37] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[11:05:30] *** Joins: K285 (~K285@2401:4900:30c4:90a4:e4ec:1fbf:27d4:c90f)
[11:08:21] *** Joins: Hackerpcs (~user@user/hackerpcs)
[11:11:14] *** Joins: manti7 (~manti7@176.10.104.94)
[11:12:37] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[11:15:37] *** Joins: node1 (~node1@user/node1)
[11:17:30] *** Joins: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr)
[11:17:38] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[11:17:44] <AhmedAmerican_> if there's an IOS Application which you query a pattern and it's return some info. how can i interact with the requests made via the APP to be able to call the same API ?
[11:18:02] *** Joins: a6a45081-2b83 (~aditya@223.226.229.57)
[11:19:59] <AhmedAmerican_> Hmm seems it's easier, gonna give that a try https://apple.stackexchange.com/a/18770
[11:20:27] *** vinleod is now known as vdamewood
[11:21:05] *** Joins: rubin55 (sid175221@2001:67c:2f08:8::2:ac75)
[11:22:54] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[11:23:48] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 276 seconds)
[11:23:52] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 256 seconds)
[11:26:26] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:27:27] <Luyin> graingert: yes, that was it, thanks!
[11:27:52] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[11:29:03] *** Joins: chele (~chele@user/chele)
[11:30:24] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 272 seconds)
[11:30:26] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[11:31:20] *** Joins: djhankb (~djhankb@208.113.164.68)
[11:31:32] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[11:32:25] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[11:32:54] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 276 seconds)
[11:33:30] *** Quits: esaym153 (~esaym153@net153.net) (Ping timeout: 240 seconds)
[11:33:43] *** Joins: esaym153 (~esaym153@net153.net)
[11:34:14] <graingert> Luyin: nice
[11:34:54] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[11:39:14] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:39:20] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:f762:20dd:304e:4b1f)
[11:40:03] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 276 seconds)
[11:41:22] *** Quits: K285 (~K285@2401:4900:30c4:90a4:e4ec:1fbf:27d4:c90f) (Quit: Client closed)
[11:41:54] *** Joins: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041)
[11:42:34] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[11:42:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:43:46] *** Joins: ssbr_ (~ssbr@python/site-packages/ssbr)
[11:44:02] *** Joins: upsala (~zcb@185.213.155.160)
[11:44:03] *** Quits: etienneme (~etienne@176-149-215-214.abo.bbox.fr) (Changing host)
[11:44:03] *** Joins: etienneme (~etienne@user/etienneme)
[11:45:15] <eyepeetee> is there a way to guarantee that new fields i add to a dictionary get added on to the right side of the dict?
[11:45:26] <graingert> Jonno_FTW: I use sentry SDK with gunicorn
[11:45:50] <graingert> eyepeetee: That's the default behaviour
[11:46:14] *** Quits: northernsage_ (northernsa@gateway/vpn/protonvpn/northernsage) (Ping timeout: 272 seconds)
[11:46:21] *** Quits: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[11:47:47] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[11:48:30] *** Joins: darksun (~darksun@user/darksun)
[11:48:46] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[11:49:39] *** Joins: rajkosto (~rajkosto@109-93-123-155.dynamic.isp.telekom.rs)
[11:50:40] *** Quits: Guest42 (~textual@61.87.177.226) (Ping timeout: 272 seconds)
[11:50:42] *** Quits: rajkohaxor (~rajkosto@178-222-120-191.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[11:51:36] *** Joins: rendar (~rendar@user/rendar)
[11:51:57] <eyepeetee> thanks graingert, i had some separate code that caused that not to be the case
[11:51:59] <eyepeetee> ty :)
[11:52:27] *** Joins: Guddu (~Guddu@171.79.58.196)
[11:52:57] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[11:54:18] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 255 seconds)
[11:54:45] *** Quits: trufas (~trufas@177.240.218.218) (Ping timeout: 255 seconds)
[11:55:39] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 276 seconds)
[11:55:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:56:32] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[11:58:42] *** Joins: trufas (~trufas@177.240.218.218)
[11:58:47] *** Joins: rajkohaxor (~rajkosto@109-93-123-155.dynamic.isp.telekom.rs)
[11:58:49] *** Joins: pycode (~pycode@2001:b07:5d28:551:9fad:223f:22a7:d07c)
[12:00:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:00:42] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[12:01:20] *** Quits: foobaz212 (~foobaz212@2001:8f8:1361:27ac:ec89:5807:1ec4:d041) (Quit: Client closed)
[12:01:30] *** Quits: rajkosto (~rajkosto@109-93-123-155.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[12:01:34] *** Joins: iauc (~iauc@ti0061a400-1478.bb.online.no)
[12:01:38] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[12:02:06] *** Joins: Pickchea (~private@user/pickchea)
[12:02:42] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[12:03:07] *** Joins: CombatVet (~c4@user/combatvet)
[12:03:36] <Pickchea> Hey, quick question, is `isinstance(x, type(None))` equivalent to `x is None` for all x? If not, why so?
[12:05:14] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[12:05:48] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[12:05:59] *** Joins: Julian (~tos9@python/site-packages/Julian)
[12:08:45] <Luyin> ok I believe something here is wrong. this code: https://paste.xinu.at/ZPyU/python leads mypy to complain like this: https://paste.xinu.at/OSO7aL/; when I change the with-statement to a normal assignment of the form `tempdir = tempfile.TemporaryDirectory()`, the error vanishes. I've tested this code in an interactive session and I can ascertain that tempdir is indeed a TemporaryDirectory object,
[12:08:47] <Luyin> not a string. I believe something must be wrong with mypy's understanding.
[12:09:09] *** Quits: stranac (~stranac@195.29.239.126) (Ping timeout: 255 seconds)
[12:10:20] *** Joins: sudorm (~sudorm@126-28-127-151.dsl.ovh.fr)
[12:12:01] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[12:12:34] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 240 seconds)
[12:12:44] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[12:13:01] *** Joins: stranac (~stranac@195.29.239.126)
[12:13:10] *** Quits: {HD} (~{HD}@191.96.185.201) (Ping timeout: 256 seconds)
[12:15:39] *** Joins: Niko90 (~Niko@77.124.108.113)
[12:17:08] *** Joins: bitrot (~rajkosto@178-222-123-90.dynamic.isp.telekom.rs)
[12:17:42] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[12:17:45] <Niko90> Hi, I'm trying to understand better the differences using typing of sync\async functions (and awaitables, yields? not sure). I have a parameter that accept a function which defined as "async def" how can I use typing for it? moreover, I have another parameter that declared as "def ..." can I use a type that will indicate that this function is sync
[12:17:45] <Niko90> only? TY
[12:18:03] *** Joins: kevr (~kevr@user/kevr)
[12:18:55] *** Joins: y1n (~y1n@84-115-65-22.wifi.dynamic.surfer.at)
[12:19:03] *** Quits: eyepeetee (~aa@075-135-186-198.res.spectrum.com) (Ping timeout: 255 seconds)
[12:19:21] <Pickchea> Niko90, have you read https://mypy.readthedocs.io/en/stable/more_types.html#typing-async-await ?
[12:19:33] <Pickchea> It should answer your question concisely.
[12:19:58] <Niko90> ty will do
[12:20:51] *** Quits: rajkohaxor (~rajkosto@109-93-123-155.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[12:21:42] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 272 seconds)
[12:21:42] *** Joins: rajkosto (~rajkosto@178.220.209.103)
[12:22:39] *** Quits: bitrot (~rajkosto@178-222-123-90.dynamic.isp.telekom.rs) (Ping timeout: 255 seconds)
[12:23:20] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:23:35] *** Joins: Doffi (~doffi@91.132.197.188)
[12:24:03] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[12:24:04] *** Joins: shad (~shad@user/shad)
[12:29:58] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[12:31:48] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[12:31:57] *** Joins: varaindemian (~varaindem@86.124.22.31)
[12:33:17] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[12:36:42] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:54] *** Joins: LabMonkey (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net)
[12:37:56] <Luyin> ok so I figured my problem out: I retried doing the thing interactively, and the type actually _changes_ when I use a with statement
[12:37:58] <Luyin> WTF
[12:38:39] <Luyin> so `tempdir = tempfile.TemporaryDirectory()` creates a TemporaryDirectory object, but `with tempfile.TemporaryDirectory() as tempdir:` makes tempdir a str.
[12:38:55] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:26] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[12:39:34] <deniska> Luyin: with calls __enter__() on the object and gives you its return value
[12:40:05] <Luyin> but why is the return value different then in an assignment?!
[12:40:17] <dav1d> https://github.com/python/cpython/blob/3.9/Lib/tempfile.py#L822
[12:40:21] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[12:40:27] <grawity> yeah indeed why ._.
[12:40:29] <Luyin> lol
[12:40:31] <Luyin> wow
[12:40:40] <Luyin> that's a gross implementation
[12:40:50] <dav1d> it makes sense, it's just supposed to be a wrapper for mkdtemp which works as a context manager
[12:41:03] <dav1d> it's not supposed to be used for anything else
[12:41:33] <deniska> Luyin: some objects return `self` in __enter__, but some don't
[12:41:34] <Luyin> but why return a str when you can return an object
[12:41:35] *** Joins: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr)
[12:41:39] <Luyin> I don't understand why you would want that
[12:41:44] *** Quits: Mechanismus (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 272 seconds)
[12:41:54] <dav1d> because you want the path in basically every case
[12:42:19] <dav1d> with the object you just have to call .name again and make sure to not do anything else (like calling cleanup, which doesnt make sense)
[12:42:29] *** Joins: gutt_ (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net)
[12:42:29] <Luyin> hmm
[12:42:38] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 256 seconds)
[12:43:08] *** Quits: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net) (Remote host closed the connection)
[12:43:09] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Excess Flood)
[12:43:10] <dav1d> I agree the behaviour can be confusing, but from a usage standpoint, it gives you what you actually want (the path) and prevents you from misusing the object
[12:43:17] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[12:43:17] *** Quits: Vision (~Vision@024-178-231-009.res.spectrum.com) (Read error: Connection reset by peer)
[12:43:19] *** Joins: maxtim (~maxtim@c-71-228-128-153.hsd1.ga.comcast.net)
[12:43:21] *** Quits: Cyp_ (~cyp@192038128058.mbb.telenor.dk) (Excess Flood)
[12:43:35] *** Joins: Vision (~Vision@024-178-231-009.res.spectrum.com)
[12:43:38] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[12:43:46] *** Joins: Cyp_ (~cyp@192038128058.mbb.telenor.dk)
[12:44:07] <Luyin> okay, I have another question because mypy weirdness: I get an error: .tox/py39/lib/python3.9/site-packages/_pytest/python_api.py:23: error: Cannot find implementation or library stub for module named "numpy". I don't see why mypy would look into this package?
[12:44:25] *** Joins: gggpkm (~gggpkm@111.63.14.117)
[12:44:43] <gggpkm> why my irc client cannot auto join python
[12:44:47] <gggpkm> after offline
[12:44:54] *** Quits: venmx (~albasawa@host31-52-111-223.range31-52.btcentralplus.com) (Quit: leaving)
[12:44:57] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[12:45:04] <Luyin> gggpkm: you might not be registered with Nickserv? rather a question for #libera though :)
[12:45:09] *** Quits: rajkosto (~rajkosto@178.220.209.103) (Ping timeout: 255 seconds)
[12:46:10] *** Quits: cre (~x@p5b2ca3d4.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[12:46:10] *** Quits: gutt (~gutt@76-208-47-155.lightspeed.knvltn.sbcglobal.net) (Ping timeout: 272 seconds)
[12:46:19] *** Quits: devish (~Guest22@52.95.75.0) (Ping timeout: 246 seconds)
[12:46:48] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[12:46:49] <Luyin> lol nvm, it didn't do it again
[12:47:19] *** Joins: Jacktar_ (~whiteshad@gateway/tor-sasl/jacktar)
[12:47:53] *** Joins: genewitch (~genewitch@triggerwarning.projectftm.com)
[12:48:00] <genewitch> how do i migrate a python3.8 venv to python3.9?
[12:48:14] <Julian> genewitch: Generally by recreating it.
[12:48:21] <Julian> virtual environments are meant to be cheap to recreate.
[12:48:46] *** Quits: Niko90 (~Niko@77.124.108.113) (Ping timeout: 246 seconds)
[12:49:17] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[12:49:21] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[12:49:39] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 255 seconds)
[12:50:15] <AhmedAmerican_> is the barcode can hold a metadata? for example, am debugging an mobile application which calling the API after scanning `barcode` which it's EAN = `3012999642007` but for somehow the API calling it as `bkdgfhjiissut`
[12:50:48] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 244 seconds)
[12:50:49] *** Jacktar_ is now known as jacktar
[12:51:54] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[12:53:15] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 255 seconds)
[12:53:22] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[12:54:11] <deniska> ean13 is, well, 13 numbers
[12:54:18] <deniska> 13 digits even :)
[12:54:36] <FunkyBob> ah, but not all EANs are EAN13 because... America :P
[12:55:08] *** Joins: Naan (~Naan@user/naan)
[12:55:09] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:55:43] <deniska> well, EAN13 with leading 0 enables compatibility-UPC-mode in encoding libraries
[12:56:00] <deniska> and there's EAN8 if you are fancy like coca-cola
[12:56:10] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[12:56:18] <deniska> but still, shouldn't be letters in them :)
[12:56:24] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[12:56:37] <FunkyBob> ah, that time over a decade ago when I had to give a shit about barcode symbologies for work :P
[12:56:55] <FunkyBob> ah, yeah, no letters in EAN :)
[12:57:03] <AhmedAmerican_> am dealing with French website, so all the EAN is 13 Numbers.
[12:57:10] *** Quits: pycode (~pycode@2001:b07:5d28:551:9fad:223f:22a7:d07c) (Ping timeout: 272 seconds)
[12:57:27] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[12:57:32] <AhmedAmerican_> Just wondering how `3012999642007` became `bkdgfhjiissut`
[12:57:48] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[12:57:56] *** Lord_of_Life_ is now known as Lord_of_Life
[12:57:56] <deniska> AhmedAmerican_: whose API is that? Might be some sort of client side obfuscation?
[12:58:24] <Guddu> AhmedAmerican_, Can you scan a different barcode and see if you still get `bkdgfhjiissut`?
[12:59:43] *** Joins: pnoud (~pnoud@user/pnoud)
[13:00:34] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[13:00:39] *** Quits: gggpkm (~gggpkm@111.63.14.117) (Ping timeout: 276 seconds)
[13:00:55] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[13:01:14] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 252 seconds)
[13:01:21] *** Quits: y1n (~y1n@84-115-65-22.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[13:01:36] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 272 seconds)
[13:01:45] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[13:02:14] <AhmedAmerican_> Guddu  `4047023479297` is giving `ckglgknqlpktt`
[13:02:30] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[13:02:59] <AhmedAmerican_> deniska: Well, it's an IOS APP which scan the barcode via the camera where i found the call to the API as mentioned above.
[13:03:18] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[13:04:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[13:04:16] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:04:22] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[13:04:27] <deniska> AhmedAmerican_: I suspect obfuscation to avoid the use of the API without the application
[13:04:46] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Ping timeout: 272 seconds)
[13:04:57] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[13:05:14] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:05:28] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[13:05:51] *** Quits: shad (~shad@user/shad) (Ping timeout: 276 seconds)
[13:07:27] *** Joins: shad (~shad@user/shad)
[13:07:45] <AhmedAmerican_> deniska: seems so :( https://bpa.st/U67A it's an simple API but looks tricky
[13:08:08] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[13:08:10] <deniska> AhmedAmerican_: notice how they both end with 7 and their obfuscated version ends with t, both have 0=k on the second position, and the first position differs by 1 in both original and obfuscated variants
[13:08:30] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[13:08:43] <deniska> aka b=3, c=4 in the first position
[13:08:44] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Ping timeout: 255 seconds)
[13:09:00] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[13:09:55] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[13:11:07] <deniska> AhmedAmerican_: try feeding it barcodes like 1000000000009 and 9999999999994 :)
[13:11:17] <AhmedAmerican_> this is what am doing now :d
[13:11:33] <genewitch> okay recreating it worked. kinda. it said it was missing a bunch of stuff, so maybe whatever pip is fetching from is out of date
[13:15:56] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[13:16:23] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:17:33] <Julian> genewitch: That'd be whatever you used to create your virtualenv that's missing packages (e.g. a requirements.txt file) -- which you generally should be keeping up to date
[13:17:44] *** Quits: doko (~doko@2a02:8106:1a:7600:6841:b751:7975:88fb) (Ping timeout: 255 seconds)
[13:18:06] <AhmedAmerican_> returning `jkcegikmoqsuv`& `hjldfhjlnprtq`
[13:18:39] *** Quits: a6a45081-2b83 (~aditya@223.226.229.57) (Remote host closed the connection)
[13:19:42] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[13:20:47] <deniska> AhmedAmerican_: for c1, c2 in zip('jkcegikmoqsuv', 'hjldfhjlnprtq'): print(ord(c1)-ord(c2)) most of them are off by 1
[13:21:47] *** Joins: zaquest (~notzaques@5.128.210.178)
[13:21:52] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[13:22:17] <deniska> AhmedAmerican_: and another set of contrived barcodes to try: https://bpa.st/ETEQ
[13:22:28] <deniska> (the last digit is checksum, no much control over it)
[13:23:26] <AhmedAmerican_> Just tried on EAN8 `9031101` returning `ikceghkpprslt`
[13:24:03] <deniska> might be zero padded
[13:24:33] <deniska> 'kceg' part is common with all zero part of the 1000*
[13:24:38] <grawity> are you actually scanning the correct barcode type
[13:25:02] <deniska> grawity: I think we're reverse engineering an obfuscation scheme here
[13:25:05] <AhmedAmerican_> grawity: i do it from https://barcode.tec-it.com/en/EAN8
[13:25:06] <grawity> like, is it maybe interpreting the same bars according to a completely different standard
[13:26:02] <grawity> I'm not sure I'd see the point of such obfuscation in a barcode reader API...
[13:26:28] <deniska> grawity: I suspect it's some sort of get_info_about_the_product(barcode) kind of API
[13:26:33] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[13:27:25] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[13:27:55] <deniska> And I can see how makers of that app may not want to provide access to their database to everyone
[13:28:32] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 256 seconds)
[13:32:09] *** Quits: jelmer (~jelmer@user/jelmer) (Remote host closed the connection)
[13:32:34] *** Joins: jelmer (~jelmer@user/jelmer)
[13:34:17] *** Quits: grayhemp (~grayhemp@107-203-253-139.lightspeed.sntcca.sbcglobal.net) (Quit: Connection closed)
[13:34:20] *** Quits: dalan6 (~dalan@110-175-157-170.tpgi.com.au) (Ping timeout: 252 seconds)
[13:37:51] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[13:39:37] *** Quits: outsider (~sierkov@c89-176.i07-23.onvol.net) (Quit: WeeChat 3.2)
[13:40:18] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 276 seconds)
[13:41:44] *** Joins: thiras (~thiras@user/thiras)
[13:43:08] *** Joins: sebu06 (~suharek@87-6-142-46.pool.kielnet.net)
[13:43:35] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[13:45:19] *** Joins: darksun (~darksun@user/darksun)
[13:45:24] <Luyin> I can't get flake8 to respect the settings I put in the tox.ini config (which is inside pyproject.toml as the legacy_tox_ini str)
[13:45:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[13:45:49] *** Quits: Peng (~mnordhoff@fin.mattnordhoff.net) (Quit: Peng timeout)
[13:45:59] *** Joins: Peng (~mnordhoff@fin.mattnordhoff.net)
[13:46:11] <Luyin> I specifically disable F401 (unused imports), tried both per-file-ignores (for __init__.py) and just ignore, but I still get the unused imports errors when I run tox
[13:46:25] *** Parts: sebu06 (~suharek@87-6-142-46.pool.kielnet.net) (WeeChat 3.2)
[13:47:30] <Xaroth> afaik flake8 doesn't support pyproject.toml
[13:47:41] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[13:48:09] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 255 seconds)
[13:48:21] <Luyin> I know, but it should support tox.ini
[13:48:37] <Luyin> and if tox reads its ini through pyproject.toml, that should work, shouldn't it?
[13:48:52] <Xaroth> that really depends if flake8 reads tox.ini, or reads it _via_ tox.
[13:48:57] <Luyin> hmmm
[13:49:00] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[13:49:01] <Xaroth> if it does the former, no it won't work
[13:49:03] <Xaroth> if the latter, yes
[13:49:04] *** Joins: node1 (~node1@user/node1)
[13:49:08] <Luyin> ok I'll try to just use a .flake8 file then
[13:50:54] <Luyin> ok that works
[13:50:56] <Luyin> yay!
[13:53:25] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:54:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:56:04] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[13:58:43] *** Joins: wyclif (~wyclif@user/wyclif)
[13:58:59] *** Joins: Deneb (~johnch@58.111.189.80.dyn.plus.net)
[13:59:24] *** Quits: inom (~inom@176.59.102.225) (Ping timeout: 255 seconds)
[13:59:55] *** Quits: node1 (~node1@user/node1) (Killed (NickServ (GHOST command used by node1_!~node1@1.39.155.174)))
[14:00:21] *** Joins: greedom (~greedom@2001:16b8:2efa:0:5e75:890b:c06a:f6d5)
[14:01:16] *** Joins: inom (~inom@176.59.109.161)
[14:01:56] *** Quits: Xat` (~Xat`@ns300217.ip-91-121-29.eu) (Quit: Lost terminal)
[14:02:33] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[14:02:54] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[14:02:56] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2f4b)
[14:03:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[14:04:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:04:16] *** Joins: DX099 (~dx099@2a01:e0a:347:f1c1:ad49:5bf5:11e:5a6d)
[14:06:32] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 268 seconds)
[14:08:07] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[14:09:03] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[14:11:47] *** Joins: Xat` (~Xat`@ns300217.ip-91-121-29.eu)
[14:12:44] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[14:15:57] *** Quits: sudorm (~sudorm@126-28-127-151.dsl.ovh.fr) (Quit: Leaving)
[14:20:37] *** Joins: melba_ (~melba@user/melba)
[14:22:17] *** Joins: Niko80 (~Niko@bzq-84-110-62-22.cablep.bezeqint.net)
[14:25:10] *** Joins: wyclif (~wyclif@user/wyclif)
[14:25:35] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[14:26:28] <Niko80> Hi, I'm using PyCharm, when having this scratch: https://bpa.st/MMLA  I would expect to get a typing warning - because the second record in the Dict is not compatible, But I get no warning, any idea?
[14:26:36] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[14:27:07] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[14:27:23] *** Joins: c10l (~c10l@89.34.167.207)
[14:27:30] *** Quits: janemba (~janemba@94.204.254.193) (Ping timeout: 240 seconds)
[14:27:56] <The-Compiler> Niko80: you'd probably have to ask PyCharm people - mypy correctly complains about it
[14:29:01] <The-Compiler> (and VS Code does too)
[14:29:36] *** Joins: janemba (~janemba@185.107.80.152)
[14:29:50] *** Joins: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1)
[14:30:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[14:30:06] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Client Quit)
[14:33:45] *** Joins: dalan6 (~dalan@27-32-31-114.tpgi.com.au)
[14:34:53] *** Joins: entuland (~entuland@user/entuland)
[14:35:02] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[14:35:58] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 272 seconds)
[14:36:51] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 276 seconds)
[14:39:21] *** Joins: Thanatos (~Thanatos@197.210.77.171)
[14:39:31] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[14:40:19] *** Quits: p-i- (~Ohmu@node-i5m.pool-118-173.dynamic.totinternet.net) (Remote host closed the connection)
[14:42:18] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: No Ping reply in 180 seconds.)
[14:43:44] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[14:43:45] *** Joins: wyclif (~wyclif@user/wyclif)
[14:46:48] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[14:47:54] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 276 seconds)
[14:48:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[14:49:11] *** Joins: nirix (uid48447@id-48447.tinside.irccloud.com)
[14:51:47] *** Quits: Niko80 (~Niko@bzq-84-110-62-22.cablep.bezeqint.net) (Quit: Client closed)
[14:54:25] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Quit: Leaving)
[14:54:29] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[14:54:50] *** Joins: mickey (~user@user/mickey)
[14:58:04] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[15:00:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:00:35] *** Joins: pnoud (~pnoud@user/pnoud)
[15:00:47] *** Quits: todda7 (~torstein@2a02:587:3263:7a00:c164:3af2:38e5:311) (Ping timeout: 255 seconds)
[15:01:00] *** Joins: kadobanana (~mud@user/kadoban)
[15:01:10] *** Joins: wyclif (~wyclif@user/wyclif)
[15:02:51] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 276 seconds)
[15:03:07] *** Joins: liblame (~liblame@p200300dd674ade00acf9c3357492f438.dip0.t-ipconnect.de)
[15:03:09] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[15:03:18] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Ping timeout: 255 seconds)
[15:06:00] *** Quits: audiocat (~audio@2603-8081-1800-00ad-9f93-c162-db16-790c.res6.spectrum.com) (Ping timeout: 255 seconds)
[15:06:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 276 seconds)
[15:06:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[15:06:45] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 276 seconds)
[15:07:38] *** Quits: dre (~dre@2001:8003:c932:c301:44a6:1427:4d7d:b99a) (Quit: Leaving)
[15:08:02] *** Quits: tazle (tazle@kapsi.fi) (Ping timeout: 272 seconds)
[15:11:36] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[15:11:40] *** Joins: nanonyme1 (nanonyme@kapsi.fi)
[15:14:36] *** Quits: kmh_ (~kmh@p200300df5f0f42000ddb5b92e0a0f090.dip0.t-ipconnect.de) (Quit: Leaving)
[15:15:22] *** Joins: todda7 (~torstein@2a02:587:3220:a300:353c:f9bd:e6f6:91e5)
[15:16:53] *** Quits: trace987 (~trace@91.66.151.181) (Remote host closed the connection)
[15:19:34] *** Joins: wyclif (~wyclif@user/wyclif)
[15:20:30] *** Joins: bambams (~bambams@user/bambams)
[15:21:02] *** Quits: Mikaela (~sid12355@user/mikaela) (Quit: Mikaela)
[15:21:04] *** Quits: liblame (~liblame@p200300dd674ade00acf9c3357492f438.dip0.t-ipconnect.de) (Quit: Gone)
[15:21:23] *** Joins: liblame (~liblame@p200300dd674ade00acf9c3357492f438.dip0.t-ipconnect.de)
[15:22:38] *** Joins: Mikaela (~sid12355@user/mikaela)
[15:25:36] <enrh> Since 3.9.something you don't have to use Dict and can do dict[str, int]
[15:26:53] *** Quits: liblame (~liblame@p200300dd674ade00acf9c3357492f438.dip0.t-ipconnect.de) (Quit: Gone)
[15:27:33] *** Quits: nanonyme1 (nanonyme@kapsi.fi) (Ping timeout: 276 seconds)
[15:27:35] *** Joins: liblame (~liblame@p200300dd674ade00acf9c3357492f438.dip0.t-ipconnect.de)
[15:32:14] *** Joins: nanonyme1 (nanonyme@kapsi.fi)
[15:32:18] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[15:34:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:35:28] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[15:35:49] *** Joins: {HD} (~{HD}@102.165.16.41)
[15:35:51] *** Joins: cheater (~Username@user/cheater)
[15:37:04] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[15:38:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 255 seconds)
[15:39:58] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Client Quit)
[15:40:41] *** Joins: computeiro (~Wender@189.37.69.141)
[15:42:54] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[15:43:37] *** Joins: kmh (~kmh@p200300df5f0f4200b4935248eced1d46.dip0.t-ipconnect.de)
[15:43:44] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[15:43:58] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[15:45:27] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:47:28] *** Joins: Julian (~tos9@python/site-packages/Julian)
[15:47:42] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 276 seconds)
[15:49:48] *** Joins: y1n (~y1n@84-115-65-82.wifi.dynamic.surfer.at)
[15:50:15] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:50:37] *** Joins: wyclif (~wyclif@user/wyclif)
[15:53:40] *** Joins: reset (~reset@user/reset)
[15:54:32] *** LabMonkey is now known as Mechanismus
[15:55:15] *** Joins: asa22 (~asa22@www.asa2.xyz)
[15:55:47] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[15:56:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 276 seconds)
[15:57:49] <asa22> https://bpa.st/NIJQ why is the checksum that's created in generate_key() always the same even if the content of the file is different?
[15:58:21] <asa22> just noticed the comments are slightly wrong
[15:58:56] *** Quits: {HD} (~{HD}@102.165.16.41) (Ping timeout: 272 seconds)
[16:00:00] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[16:00:27] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[16:00:39] <bjs> asa22: I don't really understand the generate_key() function,  it doesn't look like it's reading a file? only creating one?
[16:01:29] *** Joins: akaWolf (~akaWolf@akawolf.org)
[16:01:33] <bjs> asa22: oh you mean the hash it does of the file it just created?
[16:01:40] <asa22>     f_to_checksum = open(filename_key, "r").read()
[16:01:40] <asa22>     checksum = hashlib.sha512((f_to_checksum).encode('utf-8')).hexdigest()
[16:01:41] <asa22> yea
[16:02:04] *** Quits: Teacup (~teacup@user/teacup) (Ping timeout: 246 seconds)
[16:02:05] *** Joins: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt)
[16:02:11] <supakeen> Is it perhaps hashing an empty file as data has not been flushed yet? :)
[16:02:16] <Yhg1s> asa22: you need to close the file before you re-open it.
[16:02:20] <asa22> oh
[16:02:38] <Yhg1s> also, you should be opening it in binary mode, at the very least for generating the sha512 digest.
[16:02:53] <Yhg1s> (instead of opening it in text mode and then encoding it in UTF-8)
[16:03:19] *** Joins: trace987 (~trace@ip5b4297b5.dynamic.kabel-deutschland.de)
[16:03:21] <asa22> ok I will try that
[16:03:36] *** Joins: Teacup (~teacup@user/teacup)
[16:04:57] <bjs> asa22: if you use a `with` block, Python will make sure the file is closed for you
[16:06:35] *** Joins: Pickchea (~private@user/pickchea)
[16:06:38] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[16:07:15] <asa22> thanks it works now
[16:08:03] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[16:08:23] *** Joins: wyclif (~wyclif@user/wyclif)
[16:11:14] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:11:58] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[16:12:30] <bjs> asa22: I'm a little confused by your code, you generate a big string of digits then you split it into groups of 60 digits, then you take each group of 60 digits and break it up into groups of 5 digits and then print all the 5 digit groups with a space between them?
[16:12:58] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[16:13:12] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[16:13:16] *** Joins: zeden (~zeden@user/zeden)
[16:13:49] *** Parts: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr) ()
[16:13:58] *** Joins: cheater1__ (~Username@user/cheater)
[16:14:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[16:14:32] <asa22> bjs yea that formatting is because historically one time pads which is the cipher that Im making uses blocks of 5 numbers like that
[16:14:44] <asa22> so in case someone wants to print them into paper, its properly formatted
[16:14:59] <asa22> originally the script just used a single line of all the numbers
[16:15:27] <asa22> when I read the files for encryption and decryption I remove all newlines and spaces
[16:16:02] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[16:16:05] *** cheater1__ is now known as cheater
[16:17:24] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[16:18:14] *** Joins: pycode (~pycode@2001:b07:5d28:551:b1e0:3484:5b3f:ada)
[16:19:12] *** Joins: azazello (~azazello@109.75.158.195)
[16:19:25] <asa22> There is probably some better way of making the text have that format but this is how I managed to do it
[16:19:51] *** Joins: wyclif (~wyclif@user/wyclif)
[16:20:49] <nubonix_> whats the best way to turn a windows computer into a slave? not sure a better way to put it
[16:21:29] <Julian> nubonix_: Probably better for #windows.
[16:21:31] <Wulf> nubonix_: connect it directly to the internet and surf the web with an old MSIE version.
[16:21:59] <nubonix_> an example of what im trying to build is here https://eternalfarm.net/
[16:22:30] <nubonix_> was just at windows, i think python is where i need to be
[16:22:37] <nubonix_> lemme explain a bit more on what im trying to do
[16:23:02] <Wulf> nubonix_: also explain how this is related to python.
[16:23:06] <supakeen> Not that historically, one time pads weren't in very wide spread use due to the difficulty of moving keys around and using a pad multiple times being such an information leak :)
[16:23:06] <nubonix_> so i have pairs of one .exe per one .jar, each .jar control the exe and i need to isolate each pair
[16:23:19] <nubonix_> the management of how im doing this is related to python
[16:23:22] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[16:23:38] *** Quits: todda7 (~torstein@2a02:587:3220:a300:353c:f9bd:e6f6:91e5) (Ping timeout: 272 seconds)
[16:23:40] <supakeen> It's probably because the example shown on wikipedia writes them down in that format ;)
[16:23:40] <nubonix_> the way im currently doing it is with rpyc, but i think that a http restful api might be easier, but im not sure
[16:24:19] <nubonix_> id like to automate the installation of a few programs, and ive written the installers for them using pywinauto
[16:24:35] <nubonix_> the problem im having with one of the installers is the uac
[16:24:43] <asa22> supakeen all pictures one can find of them wether from russians or CIA or whatever are in that format, and I've heard from multiple sources thats like an established thing to put them in columns of 5 like that
[16:24:50] <asa22> like old pictures I mean
[16:25:04] <nubonix_> i can use winpwnage to get around the uac, but its not really reliable, so was thinking there might be a better way [as i have admin rights for the other computers]
[16:25:38] <nubonix_> currently im using rdp to gain access [as ive enabled this manually]
[16:25:49] <asa22> also it looks cool and spyish ^^
[16:25:56] <asa22> lunch time g2g
[16:25:59] *** Quits: asa22 (~asa22@www.asa2.xyz) (Quit: Client closed)
[16:27:37] <nubonix_> so atm, im downloading a .exe that i packaged with pyinstaller that uses rpyc [not yet true, as im just running it with python atm], but im using this server to connect to when im trying to issue commands to the slave, suchas starting the .exe and launching the .jar with cli args
[16:27:55] <nubonix_> and im using the server to connect...*
[16:28:00] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[16:28:11] <nubonix_> the downloading of the .exe is my deployment
[16:28:18] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca)
[16:28:20] *** Quits: km (~km@static.55.93.181.135.clients.your-server.de) (Remote host closed the connection)
[16:28:37] <BtbN> Are you asking us how to write your botnet? lol
[16:28:40] *** Joins: km (~km@static.55.93.181.135.clients.your-server.de)
[16:28:43] <nubonix_> not really
[16:28:48] <nubonix_> as the servers are mine
[16:29:16] <BtbN> In either case, that sounds either like a straight up trojan, or a major entrypoint for one
[16:29:18] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[16:29:20] <nubonix_> or i pay access to use them [currently they are all local, could use more in the future potentially]
[16:29:21] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 244 seconds)
[16:29:59] *** Joins: de-facto (~de-facto@user/de-facto)
[16:30:00] <nubonix_> BtbN: so essentially what eternalfarm.net is doing is creating a trojan? they call it an agent, but idk
[16:30:01] *** Quits: LordKalma (~LordKalma@neth.ruilvo.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[16:30:03] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:30:14] *** Joins: LordKalma (~LordKalma@neth.ruilvo.com)
[16:30:17] <nubonix_> not sure if that term fits if its known and intentional
[16:30:36] *** Quits: azazello (~azazello@109.75.158.195) (Ping timeout: 255 seconds)
[16:30:42] <nubonix_> i could call distribution the same thing
[16:30:42] <BtbN> If it's not properly secured, anything that can execute arbitrary stuff is dangerous
[16:30:47] <BtbN> including ssh
[16:30:52] <nubonix_> well yeah
[16:31:00] <nubonix_> not really worried about security atm tho
[16:31:12] <BtbN> I wouldn't dare and homebrew something that can be sent binaries and executes them
[16:31:23] <nubonix_> im pre sure an 4096 char rsa encrpytion using ssl would be good enough
[16:31:24] *** Joins: Elzington__ (~Elzington@static-198-54-128-54.cust.tzulo.com)
[16:31:33] <nubonix_> as rpyc supports
[16:31:56] <BtbN> You need proper and strong authentication. Not transport encryption.
[16:31:56] <nubonix_> rpyc is the lower level of pupy, so a RAT may be more accurate than a trojan
[16:32:04] <nubonix_> why?
[16:32:15] <BtbN> Anyone can talk TLS
[16:32:32] *** Parts: b3z (~b3z@user/b3z) ()
[16:32:33] <BtbN> TLS does not offer authentication (if you ignore client-certs)
[16:32:52] <nubonix_> knowning the endpoints would be difficult i think
[16:33:09] <nubonix_> not really planning on selling this as a service atm
[16:33:16] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[16:33:30] <nubonix_> think id use the saas model to do so, and then yah, encrpytion would def need to be used
[16:34:28] <nubonix_> so, a one line sentence of what im trying to do:
[16:35:09] *** Quits: Elzington_ (~Elzington@static-198-54-128-62.cust.tzulo.com) (Ping timeout: 276 seconds)
[16:35:15] <nubonix_> id like to run a pair of one .exe and one .jar in isolation for the other pairs at scale as i dont have enough resources on one computer to do so
[16:35:28] <nubonix_> while having control over the .exe and the .jar
[16:35:41] <nubonix_> across all of the servers
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:27] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 255 seconds)
[16:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:20] <nubonix_> guess im not understanding the purpose of auth, to prevent hi-jacking yah?
[16:38:04] <nubonix_> the rypc ssl server does though?
[16:38:52] <nubonix_> not hearing alot of libs that can do this, so perhaps im on the right track,
[16:39:42] <nubonix_> guess my thought was a few clicks installation for the server and then i can gain access to it
[16:39:48] *** Quits: iauc (~iauc@ti0061a400-1478.bb.online.no) (Quit: Client closed)
[16:40:50] *** Joins: p-i- (~Ohmu@node-i5m.pool-118-173.dynamic.totinternet.net)
[16:41:15] <nubonix_> asking a different q, can i accomplish the same things with a http/s restful api as i can with rpyc? starting .exe's, creating folders on the server, downloading files, installing other software [via pywinauto]
[16:41:17] *** Joins: {HD} (~{HD}@143.244.44.72)
[16:41:22] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[16:41:36] <nubonix_> i dont see why not so
[16:41:59] <nubonix_> guess it just changes the way that ive written the mangement system [as i have a pyqt5 app atm]
[16:43:01] *** Joins: con3 (~con3@41.71.18.105)
[16:44:15] *** Joins: shad (~shad@user/shad)
[16:45:04] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[16:45:48] *** Quits: p-i- (~Ohmu@node-i5m.pool-118-173.dynamic.totinternet.net) (Ping timeout: 272 seconds)
[16:45:49] <nubonix_> having a problem with rpyc,im trying to use ssl instead of ssh, but im having some problems, and idky [says file not found, but i dont think this is the problem]
[16:45:49] <nubonix_> here's the code: https://bpa.st/KRYQ
[16:45:49] <nubonix_> heres how i generated the ssl stuff: https://mcilis.medium.com/how-to-create-a-self-signed-client-certificate-with-openssl-c4af9ac03e99
[16:46:14] <nubonix_> code includes server.py, client.py server traceback, client traceback
[16:46:44] <Confusioned> Does someone have an idea why tensorflow uses only two cores of the computing server but all on my local machine? :(
[16:46:56] *** Joins: kostkon_ (~androirc@ob21aa.static.otenet.gr)
[16:46:56] <Confusioned> Could it be related to using poetry?
[16:47:35] <nubonix_> Confusioned: #tensorflow might also be of help
[16:47:49] *** Quits: ph88 (~ph88@2a02:8109:9e00:7e5c:f009:5606:b7ea:3eb0) (Quit: Leaving)
[16:47:54] <nubonix_> can try there as well*
[16:48:09] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 276 seconds)
[16:48:19] <Confusioned> Well, it is worth a try :)
[16:48:46] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[16:50:27] <con3> Hey everyone, I have this little snippet here: https://bpa.st/37MA All I'm trying to do is create a moving time axis by using Qtimer. Every 25 milliseconds the array should be shifted and then the last element should be incremented with 0.025
[16:50:28] <nubonix_> Confusioned: im not sure if you are distributing your workload or if you are asking why its using 2/4 2/6 cores [e.g.], could also be a default setting by tensorflow to not bog the computer down so that you can still do other things on while its doing its thing
[16:50:50] <con3> However it seems to be happening a lot slower than 25 milliseconds.. Like orders of magnitude slower
[16:51:15] *** Quits: varaindemian (~varaindem@86.124.22.31) (Quit: Client closed)
[16:51:18] *** Quits: {HD} (~{HD}@143.244.44.72) (Ping timeout: 255 seconds)
[16:51:32] *** Joins: wakeup (~wakeup@user/wakeup)
[16:51:35] <nedbat> you can't put "yield from" in an async function? why not?
[16:52:04] <Confusioned> nubonix_: Using multiprocessing with 44 workers but cpu % in htop is only ~200% for the main process while it is ~400% on my local machine (4 threads)... if it was due to a default setting, wouldn't my local machine be hit by this default setting as well?
[16:52:31] <Confusioned> (4 workers on my local machine, of course...)
[16:52:34] <wakeup> Let's say I want to iterate through 2 lists, each of them with 2 elements, at the same time. The first and second elements of the 2 lists can range from say -N to M. I want to iterate through all combinations of these 2 lists
[16:52:46] <wakeup> how would you do that?
[16:52:52] <wakeup> yes, itertools is probably the key
[16:52:54] <nubonix_> Confusioned: could be if its hardcoded to use something like 2 cores no matter how many cores are available on the machine
[16:52:59] <nedbat> wakeup: for a, b in itertools.product(list1, list2):
[16:53:20] <wakeup> I don't want to iterate through the lists
[16:53:24] <Confusioned> But on my local machine it uses 4 cores (or threads at least which look to the system like cores)
[16:53:26] <wakeup> I want to iterate through all possible lists
[16:53:30] <wakeup> of 2 elements
[16:53:36] <nubonix_> Confusioned: im out of my depth here though
[16:53:52] <nedbat> wakeup: you want all pairs where you get one element from list 1, and one element from list 2?
[16:53:55] <Confusioned> K, thanks anyway :)
[16:54:00] *** Quits: y1n (~y1n@84-115-65-82.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[16:54:04] <nubonix_> Confusioned: yeah, wish you the best :)
[16:54:18] <wakeup> in your example, a and b should be lists of 2 elements, for my purposes
[16:54:24] *** Joins: y1n (~y1n@84-115-65-213.wifi.dynamic.surfer.at)
[16:54:26] *** Joins: wolfshappen (~waff@irc.furworks.de)
[16:54:31] <wakeup> and I want a and b to be all combinations
[16:54:32] <graingert> anyone know a function that does: `def __iter__(self): return (yield self)` without pushing a frame?
[16:54:51] <nedbat> wakeup: can you pastebin an example?
[16:55:09] <nubonix_> nedbat and graingert asking questions !!! O.O
[16:55:29] <nedbat> nubonix_: we are lifelong learners
[16:55:41] <nubonix_> :)
[16:55:55] <graingert> currently fixing https://github.com/twisted/twisted/pull/1624/files#diff-8d95429e1233c1c5f25e6f0acd93c6819745e8b6a6041b11b621c393cbaeac69R942
[16:56:10] <graingert> I want tracebacks to show exceptions to end at `await d`
[16:56:14] <nubonix_> good to see, and throwing some love :D
[16:56:38] <graingert> throwing some love into a generator and pushing some frames
[16:57:00] <wakeup> nedbat first of all, I want a and b to be lists of 2 elements, as I said. So, a and b should not be numbers, but lists. Second, I want a and b to be all possible combinations, where I decide what the ranges of the first and second elements are
[16:57:01] <nubonix_> ha, i really wish i could help graingert, i definitely owe you
[16:57:58] <wakeup> your example returns a and b as numbers
[16:58:04] <wakeup> but I want them to be lists of 2 elements
[16:58:18] <wakeup> so, one combination would be a=[0, 0] and b=[0, 0]
[16:58:31] <wakeup> another combination would be a=[0, 0] and b=[0, 1]
[16:58:33] <wakeup> and so on
[16:59:56] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[17:00:03] <graingert> it's here too https://github.com/python-trio/trio/blob/f2e23123b196358b85556c592cfd26882261b738/trio/_core/_traps.py#L19-L22
[17:00:47] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[17:01:15] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[17:01:21] *** Quits: alexyov (~alexyov@84.22.6.244) (Quit: alexyov)
[17:01:25] *** Joins: pnoud (~pnoud@user/pnoud)
[17:01:33] *** Joins: alexyov (~alexyov@79.124.0.2)
[17:01:44] *** Quits: alexyov (~alexyov@79.124.0.2) (Client Quit)
[17:01:56] *** Joins: alexyov (~alexyov@79.124.0.2)
[17:01:57] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[17:02:18] *** Quits: alexyov (~alexyov@79.124.0.2) (Client Quit)
[17:02:22] *** Joins: wolfshappen (~waff@irc.furworks.de)
[17:02:23] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[17:02:30] *** Joins: alexyov (~alexyov@79.124.0.2)
[17:02:31] *** Quits: alexyov (~alexyov@79.124.0.2) (Client Quit)
[17:02:40] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[17:02:43] *** Joins: alexyov (~alexyov@79.124.0.2)
[17:03:53] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 252 seconds)
[17:04:26] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[17:04:28] <wakeup> I managed to come up with a solution
[17:04:31] <wakeup> a=list(itertools.combinations(list(range(5)), 2))
[17:04:36] <wakeup> list(itertools.product(a, a))
[17:05:11] *** Quits: alexyov (~alexyov@79.124.0.2) (Client Quit)
[17:05:24] *** Joins: alexyov (~alexyov@79.124.0.2)
[17:05:28] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:05:29] *** Quits: alexyov (~alexyov@79.124.0.2) (Client Quit)
[17:05:40] *** Joins: alexyov (~alexyov@79.124.0.2)
[17:06:00] *** Joins: gusto (~Augustus@109.255.100.54)
[17:06:26] *** Quits: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:06:42] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 256 seconds)
[17:07:33] *** Joins: pycurious (~Adium@user/pycurious)
[17:08:36] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 272 seconds)
[17:08:55] <wakeup> but that doesn't seem to produce all combinations
[17:09:14] <wakeup> e.g. it doesn't seem to produce ((4, 4), (4, 4))
[17:09:20] *** Joins: Trieste (T@user/pilgrim)
[17:09:22] *** Joins: {HD} (~{HD}@191.96.185.192)
[17:09:28] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:09:36] *** Joins: jiffy (elijah@has.a.fluffy.sh33p.org)
[17:10:46] *** Joins: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt)
[17:11:08] <wakeup> maybe I need list(itertools.product(list(range(5)), repeat=2))
[17:11:40] <wakeup> yep
[17:12:52] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[17:13:56] *** Joins: Trieste_ (T@user/pilgrim)
[17:14:15] *** Quits: {HD} (~{HD}@191.96.185.192) (Ping timeout: 255 seconds)
[17:14:35] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Quit: Client closed)
[17:15:10] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[17:15:27] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 276 seconds)
[17:15:28] *** Joins: shoobie (~shoobie@user/shoobie)
[17:15:50] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[17:17:19] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[17:18:26] *** Joins: codificat (~pep@66.red-79-154-168.dynamicip.rima-tde.net)
[17:19:51] *** Joins: OPK (~OPK@user/opk)
[17:23:08] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[17:23:43] *** Joins: cheater (~Username@user/cheater)
[17:25:10] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:26:09] *** Joins: vsantana (~vsantana@170.231.141.84)
[17:27:57] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:28:39] *** Quits: jpic_ (~jpic@82.142.18.222) (Ping timeout: 255 seconds)
[17:28:48] *** Joins: jpic (~jpic@bernadette.objectif-libre.com)
[17:30:02] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[17:30:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:32:27] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[17:32:37] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[17:32:56] *** Quits: haroon (~haroon@gw.wmd.de) (Quit: Client closed)
[17:33:31] *** Quits: Naan (~Naan@user/naan) (Remote host closed the connection)
[17:33:43] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[17:34:06] *** Joins: Naan (~Naan@user/naan)
[17:35:23] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:35:24] *** Joins: devast (uid508308@id-508308.stonehaven.irccloud.com)
[17:35:45] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[17:35:48] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:37:20] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 265 seconds)
[17:37:43] *** Joins: dez (uid92154@user/dez)
[17:38:04] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[17:38:24] *** Joins: Roey (~Roey@user/Roey)
[17:42:00] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:42:10] *** Quits: zeden (~zeden@user/zeden) (Ping timeout: 272 seconds)
[17:42:58] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[17:43:04] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:44:04] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 272 seconds)
[17:45:10] *** Joins: aw1 (~aw1@203.171.246.77)
[17:45:31] *** Joins: zebrag (~chris@user/zebrag)
[17:47:12] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Quit: Leaving)
[17:47:52] *** Joins: ice9 (~ice9@user/ice9)
[17:47:56] *** Joins: {HD} (~{HD}@102.165.16.92)
[17:48:24] <aw1> what is the recommended workflow to introduce a new dependency when using pip-tools? If I add a new package foo to requirements.in and regenerate requirements.txt then it is possible that some packages will be upgraded. How do I achieve retaining the current versions and only bringing in changes related to the new package?
[17:49:04] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[17:49:07] <mefistofeles> aw1: my guess is that if the new dependency brings new versions it is because they are required for it to work
[17:49:17] <mefistofeles> so I don't think there's a good way around that
[17:49:32] *** Joins: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[17:49:36] <aw1> mefistofeles, ok. thanks.
[17:51:55] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[17:52:30] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 276 seconds)
[17:53:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 276 seconds)
[17:53:44] *** Quits: y1n (~y1n@84-115-65-213.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[17:54:17] *** Joins: thiras (~thiras@user/thiras)
[17:54:35] *** Joins: Pickchea (~private@user/pickchea)
[17:54:44] *** Joins: y1n (~y1n@84-115-65-122.wifi.dynamic.surfer.at)
[17:54:45] *** Quits: shoobie (~shoobie@user/shoobie) (Ping timeout: 255 seconds)
[17:55:07] *** Joins: shoobie (~shoobie@user/shoobie)
[17:57:53] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[17:58:10] <marduk> aw1: I think `pip-compile --upgrade-package` will do that.
[17:58:52] <aw1> marduk, i see. Let me check. thanks.
[17:59:32] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Client Quit)
[18:00:04] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[18:02:19] <aw1> marduk, may be i am doing it wrong but it did not work. Here is what I attempted. python -m piptools compile --upgrade-package flask-ask-sdk
[18:02:37] <aw1> then I examined the requirements.txt and did not find it changed at all
[18:03:18] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 255 seconds)
[18:03:30] <marduk> aw1: I've actually never used that flag before.
[18:03:47] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[18:03:49] *** Quits: tims (~tims@193-82-234-90.tpgi.com.au) (Quit: WeeChat 3.2)
[18:03:52] *** Quits: {4144}| (~{4144}@46.56.78.2) (Ping timeout: 246 seconds)
[18:03:55] <aw1> marduk, I see.
[18:04:09] *** Quits: greedom (~greedom@2001:16b8:2efa:0:5e75:890b:c06a:f6d5) (Remote host closed the connection)
[18:04:15] <marduk> That's what the --help seems to indicate it does though
[18:04:17] *** Quits: shoobie (~shoobie@user/shoobie) (Remote host closed the connection)
[18:04:23] *** Joins: wyclif (~wyclif@user/wyclif)
[18:04:27] <aw1> On reading the docs it seems like this upgrades the package IFF the package is in the requirements.in file already
[18:04:48] <aw1> marduk, I too thought it would achieve what I was looking for.
[18:04:48] <marduk> Oh, that would make sense.
[18:05:06] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Remote host closed the connection)
[18:05:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[18:05:39] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[18:06:59] *** Joins: mcope (~matt@user/mcope)
[18:07:05] *** Joins: {4144}| (~{4144}@46.56.64.31)
[18:08:35] *** Quits: kmh (~kmh@p200300df5f0f4200b4935248eced1d46.dip0.t-ipconnect.de) (Quit: Leaving)
[18:08:46] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[18:09:01] *** Quits: Guddu (~Guddu@171.79.58.196) (Read error: Connection reset by peer)
[18:09:26] *** Joins: Guddu (~Guddu@171.79.58.196)
[18:09:27] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[18:09:34] *** Joins: yourfate_ (~yourfate@cabal.yourfate.org)
[18:10:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[18:10:08] *** Quits: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1) (Remote host closed the connection)
[18:10:26] *** Quits: zeus (~user@user/kamyl) (Ping timeout: 250 seconds)
[18:10:52] *** Quits: yourfate (~yourfate@cabal.yourfate.org) (Ping timeout: 250 seconds)
[18:11:00] *** Joins: jinsun (~quassel@user/jinsun)
[18:11:29] *** Joins: zeus (~user@user/kamyl)
[18:11:42] *** Quits: liblame (~liblame@p200300dd674ade00acf9c3357492f438.dip0.t-ipconnect.de) (Quit: Gone)
[18:11:49] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[18:12:53] *** yourfate_ is now known as yourfate
[18:13:32] *** Quits: janemba (~janemba@185.107.80.152) (Read error: Connection reset by peer)
[18:13:59] *** Joins: janemba (~janemba@94.204.254.193)
[18:14:36] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 258 seconds)
[18:15:06] *** Joins: cheater (~Username@user/cheater)
[18:17:44] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-95db-0d7b-489b-5e3b.res6.spectrum.com)
[18:17:47] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:17:57] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[18:18:08] *** Quits: dulanic (~dulanic@47.187.147.69) (Ping timeout: 268 seconds)
[18:18:20] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[18:18:35] *** Joins: sebastianos (~sebastian@user/sebastianos)
[18:19:22] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[18:19:26] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[18:19:43] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[18:19:58] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 258 seconds)
[18:20:01] <fluter> in a module file there is a main function, how can i invoke it in my script?
[18:20:06] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Client Quit)
[18:20:22] <fluter> not a actual function, but if __name__ == '__main__': foo()
[18:20:29] <fluter> how can i invoke this branch?
[18:20:50] <grym> fluter: python thatfile.py
[18:20:55] <Yhg1s> fluter: by running the .py file directly. you can't do it when you've imported the module.
[18:20:58] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[18:21:04] *** Quits: snalty (~Shhh@user/snalty) (Quit: ZNC 1.8.2 - https://znc.in)
[18:21:08] *** Joins: p-i- (~Ohmu@node-i5m.pool-118-173.dynamic.totinternet.net)
[18:21:15] <fluter> i need to invoke it from my .py file, i cannot run it directly
[18:21:19] *** Joins: snalty (~Shhh@user/snalty)
[18:21:25] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[18:22:18] *** Quits: hays (~rootveget@fsf/member/hays) (Quit: No Ping reply in 180 seconds.)
[18:22:58] *** Quits: sirn (~sirn@user/sirn) (Quit: ZNC 1.8.2 - https://znc.in)
[18:23:04] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Client Quit)
[18:23:16] <SnoopJ> fluter, you might be able to do what you want with the `runpy` module: https://docs.python.org/3/library/runpy.html
[18:23:19] *** Joins: sirn (~sirn@user/sirn)
[18:23:21] <grym> fluter: then rewrite that file to encapsulate everything under the if __name__ test so that it's a real function; import it, call it
[18:23:25] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[18:23:36] *** Joins: hays (rootvegeta@fsf/member/hays)
[18:23:36] *** Quits: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) (Quit: Leaving)
[18:23:39] <SnoopJ> yea it would probably be better if you do that ^
[18:23:41] *** Quits: umimaso (~umimaso@188.166.147.131) (Ping timeout: 268 seconds)
[18:23:42] <fluter> grym: it's not under my control :(
[18:23:44] *** Joins: dob1 (~dob1@user/dob1)
[18:23:54] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[18:23:55] *** Quits: lxdr (~lxdr@user/lxdr) (Quit: Ping timeout (120 seconds))
[18:24:24] <grym> fluter: redo the work done in their __name__ test in your code, then
[18:24:31] *** Joins: skapata (~Skapata@user/skapata)
[18:24:46] *** Joins: lxdr (~lxdr@user/lxdr)
[18:24:47] <fluter> hmmm code duplication is bad, no?
[18:24:47] *** Joins: wyclif (~wyclif@user/wyclif)
[18:25:18] <SnoopJ> fluter, it's only duplication if you still depend on that file for some other reason
[18:25:29] <grym> fluter: practicality beats purity
[18:25:36] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Client Quit)
[18:25:37] <marduk> Well putting a lot of logic under `if __name__ == "__main__"` is bad too so why stop there lol
[18:25:37] *** Joins: umimaso (~umimaso@188.166.147.131)
[18:26:00] *** Quits: jiffy (elijah@has.a.fluffy.sh33p.org) (Ping timeout: 252 seconds)
[18:26:09] *** Quits: dlam (~dlam@dlam.me) (Ping timeout: 268 seconds)
[18:26:39] <fluter> lol okay
[18:26:45] <SnoopJ> marduk, they've already said that this wasn't their doing, it sounds like it's an external dependency
[18:26:46] *** Quits: thib (~thib@wikimedia/Thibaut120094) (Ping timeout: 268 seconds)
[18:27:24] *** Joins: thib (~thib@wikimedia/Thibaut120094)
[18:27:31] *** Joins: vassen (~vassen@178.176.217.248)
[18:27:41] <marduk> Yeah I'm just saying they don't' seem to have a lot of choices, so...
[18:28:04] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:28:09] *** Joins: Henryx (~ebianchi@2a01:4f8:1c0c:76ad::1)
[18:28:50] *** {4144}| is now known as {4144}
[18:29:02] *** {4144} is now known as {41444d494e}
[18:29:30] * SnoopJ wonders if something is wrong with runpy for this task
[18:29:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 258 seconds)
[18:30:13] *** Joins: dulanic (~dulanic@47.187.144.163)
[18:31:59] *** Joins: tonberry (~tonberry@2601:401:c400:8b30:ba27:ebff:fee2:f93c)
[18:32:16] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Ping timeout: 256 seconds)
[18:32:25] *** tonberry is now known as d00gy
[18:34:58] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[18:35:08] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[18:36:50] <jabberwock> SnoopJ: I doubt it. More likely that someone didn't know it existed
[18:36:51] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[18:38:16] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[18:38:24] *** Quits: vassen (~vassen@178.176.217.248) (Ping timeout: 255 seconds)
[18:38:57] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:39:43] *** Joins: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com)
[18:41:15] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 276 seconds)
[18:41:37] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[18:41:55] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[18:43:24] *** Joins: wyclif (~wyclif@user/wyclif)
[18:46:08] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[18:46:09] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Read error: Connection reset by peer)
[18:46:38] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:46:46] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Ping timeout: 272 seconds)
[18:47:17] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:49:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 276 seconds)
[18:51:35] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[18:51:45] *** Joins: kmh (~kmh@p200300df5f0f420090b8c32c2ae74bf4.dip0.t-ipconnect.de)
[18:52:18] *** Quits: kostkon_ (~androirc@ob21aa.static.otenet.gr) (Ping timeout: 276 seconds)
[18:52:25] *** Joins: magla (~gelignite@55d4dbb8.access.ecotel.net)
[18:52:40] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:52:54] *** Joins: dlam (~dlam@dlam.me)
[18:53:48] *** Quits: y1n (~y1n@84-115-65-122.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[18:54:12] *** Joins: y1n (~y1n@84-115-65-133.wifi.dynamic.surfer.at)
[18:54:13] *** Quits: vsantana (~vsantana@170.231.141.84) (Quit: Leaving)
[18:55:07] *** Joins: ba (~ba@cpc93788-hari17-2-0-cust405.20-2.cable.virginm.net)
[18:57:18] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 272 seconds)
[18:57:41] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[18:58:02] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[18:58:08] *** Quits: samleh (~slfeneaso@2001:470:69fc:105::5240) (*.net *.split)
[18:58:08] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (*.net *.split)
[18:58:10] *** Quits: mogad0n (~mogad0n@user/mogad0n) (*.net *.split)
[18:58:10] *** Quits: quesker (~idnet@mail.89vx.net) (*.net *.split)
[18:58:10] *** Quits: Fingel (fingel@user/fingel) (*.net *.split)
[18:58:10] *** Quits: waxfire23 (~waxfire@65.119.2.240) (*.net *.split)
[18:58:10] *** Quits: fructose (~fructose@user/fructose) (*.net *.split)
[18:58:10] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[18:58:10] *** Quits: susam (~susam@user/susam) (*.net *.split)
[18:58:10] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (*.net *.split)
[18:58:10] *** Quits: BillyZane2 (~BillyZane@91.196.220.173) (*.net *.split)
[18:58:10] *** Quits: dld (~davidlowr@2601:197:600:1210:f14b:4a8a:4522:f5d2) (*.net *.split)
[18:58:10] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (*.net *.split)
[18:58:10] *** Quits: Wu (~wu@254.red-83-52-60.dynamicip.rima-tde.net) (*.net *.split)
[18:58:10] *** Quits: bim9262 (~bim9262@cpe-70-113-84-126.austin.res.rr.com) (*.net *.split)
[18:58:10] *** Quits: Kvothe (~weechat@user/elodin) (*.net *.split)
[18:58:10] *** Quits: n-st (~n-st@user/n-st) (*.net *.split)
[18:58:10] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[18:58:10] *** Quits: syllin (~syllin@user/syllin) (*.net *.split)
[18:58:10] *** Quits: nrg (~NRG@user/nrg) (*.net *.split)
[18:58:10] *** Quits: roniez (~roniez@nixsec.se) (*.net *.split)
[18:58:10] *** Quits: onu (~onufn@gibbs.uberspace.de) (*.net *.split)
[18:58:10] *** Quits: Evolver (sid32215@user/evolver) (*.net *.split)
[18:58:10] *** Quits: neolem (~neolem@user/neolem) (*.net *.split)
[18:58:10] *** Quits: rndusr (~rndusr@user/rndusr) (*.net *.split)
[18:58:10] *** Quits: jessicara (~shirogits@user/jessicara) (*.net *.split)
[18:58:10] *** Quits: mossman93_ (~quassel@user/mossman93) (*.net *.split)
[18:58:10] *** Quits: enteral (~enteral@discovery.whatbox.ca) (*.net *.split)
[18:58:10] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (*.net *.split)
[18:58:10] *** Quits: lantech19446 (sid237550@id-237550.brockwell.irccloud.com) (*.net *.split)
[18:58:10] *** Quits: extmind (~lars@quasar.extmind.de) (*.net *.split)
[18:58:10] *** Quits: micronn (~micronn@user/micronn) (*.net *.split)
[18:58:10] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (*.net *.split)
[18:58:10] *** Quits: forgx (~agucova@vps-43c36ef5.vps.ovh.ca) (*.net *.split)
[18:58:10] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[18:58:10] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[18:58:15] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[18:58:15] *** Joins: Wu (~wu@254.red-83-52-60.dynamicip.rima-tde.net)
[18:58:18] *** Joins: extmind (~lars@quasar.extmind.de)
[18:58:18] *** Joins: susam (~susam@user/susam)
[18:58:20] *** Joins: dba (uid502594@id-502594.stonehaven.irccloud.com)
[18:58:20] *** Joins: lantech19446 (sid237550@id-237550.brockwell.irccloud.com)
[18:58:23] *** Joins: syllin (~syllin@user/syllin)
[18:58:24] *** Joins: mossman93 (~quassel@user/mossman93)
[18:58:28] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[18:58:28] *** Joins: Byteflux (~byte@byteflux.net)
[18:58:29] *** Joins: Evolver (sid32215@user/evolver)
[18:58:32] *** Joins: waxfire23 (~waxfire@65.119.2.240)
[18:58:32] *** Joins: jessicara (~shirogits@user/jessicara)
[18:58:37] *** Joins: wyre_ (~wyre@user/wyre)
[18:58:37] *** Joins: n000g (~NRG@user/nrg)
[18:58:40] *** Joins: neolem (~neolem@user/neolem)
[18:58:41] *** Joins: micronn (~micronn@user/micronn)
[18:58:45] *** Joins: bim9262 (~bim9262@cpe-70-113-84-126.austin.res.rr.com)
[18:58:53] *** Joins: n-st- (~n-st@user/n-st)
[18:59:02] *** Joins: BillyZane2 (~BillyZane@91.196.220.173)
[18:59:06] *** Joins: onu (~onufn@gibbs.uberspace.de)
[18:59:10] *** Joins: Fingel (~fingel@user/fingel)
[18:59:11] *** Joins: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2)
[18:59:11] *** Joins: enteral_ (~enteral@discovery.whatbox.ca)
[18:59:12] *** Joins: roniez (~roniez@nixsec.se)
[18:59:14] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[18:59:15] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[18:59:33] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[18:59:37] *** n-st- is now known as n-st
[19:00:07] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:00:28] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[19:00:41] *** Joins: kostkon_ (~androirc@ppp-94-65-184-172.home.otenet.gr)
[19:00:42] <ba> Hey up. How can I launch an application that will outlive my Python script? If I allow the result of `subprocess.Popen()` to fall out of scope, I get a ResourceWarning.
[19:00:51] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[19:01:48] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-9484-dafc-2024-9392.res6.spectrum.com) (Ping timeout: 255 seconds)
[19:02:16] *** Joins: pnoud (~pnoud@user/pnoud)
[19:02:40] <SnoopJ> ba, is spawning this application this the last thing your script is doing?
[19:03:26] *** MrBurns is now known as list
[19:03:36] *** Joins: wyclif (~wyclif@user/wyclif)
[19:03:37] <ba> SnoopJ: No. It's launching an external application to preview a file, in response to user interaction. I want to "fire and forget" the process, and continue with my app logic
[19:03:42] *** list is now known as MrBurns
[19:04:03] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[19:07:12] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 255 seconds)
[19:07:49] *** Joins: nyah (~nyah@90.221.186.180)
[19:07:51] *** Joins: doko (~doko@2a02:8106:1a:7600:e433:5fc5:a04:aaa1)
[19:09:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 276 seconds)
[19:09:39] *** Joins: akk (~akk@97-123-109-214.albq.qwest.net)
[19:10:18] *** Joins: PdimH (~pdimh@user/pdimh)
[19:11:06] *** Quits: odinsbane (~mbs@pat-pool-138.crick.ac.uk) (Ping timeout: 252 seconds)
[19:11:22] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[19:12:00] *** Joins: zeden (~zeden@user/zeden)
[19:12:40] *** Joins: eldenring0 (uid506233@id-506233.tooting.irccloud.com)
[19:13:09] <SnoopJ> weird, I have to go out of my way to get that warning to actually occur
[19:13:35] <SnoopJ> ba, the subprocess won't be ended by that warning, the subprocess library is just trying to be helpful. You can squelch it if it's a bother.
[19:14:03] <SnoopJ> or wait() on any Popen objects from the parent once it's done with its work, if you'd prefer
[19:15:06] <ba> Thank you SnoopJ!
[19:17:23] *** Joins: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr)
[19:18:00] *** Joins: Betal (~Beta@user/betal)
[19:18:43] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: tech_exorcist)
[19:20:13] *** Joins: wyclif (~wyclif@user/wyclif)
[19:22:46] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:23:34] *** Joins: kor1 (~kor1@user/kor1)
[19:25:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:26:40] <Luyin> I've got this: https://paste.xinu.at/OcMdCu/ in my pyproject.toml for voice_training_pipeline, but I get this error when I run pytest-cov via tox: Coverage.py warning: Module voice_training_pipeline was never imported. (module-not-imported). how do I solve this?
[19:26:50] *** Quits: kmh (~kmh@p200300df5f0f420090b8c32c2ae74bf4.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:27:43] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[19:30:37] *** zinc is now known as zdleaf
[19:31:45] *** Joins: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net)
[19:34:32] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[19:34:33] <Thanatos> Hello everyone'
[19:35:27] <Thanatos> Is it possible to install the fuzzyset package in windows without having to install a myriad of C++ related stuff
[19:37:54] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[19:38:11] *** Joins: wyclif (~wyclif@user/wyclif)
[19:38:15] *** Quits: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:38:37] *** Joins: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt)
[19:39:24] *** Quits: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt) (Client Quit)
[19:39:46] <SnoopJ> Thanatos, it looks like the setup.py for that package has a --pure-python argument, but it does look very much like it's been written with Cython in mind (not sure what "C++ related stuff" you're talking about, though)
[19:39:47] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[19:40:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:40:55] *** Joins: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt)
[19:41:06] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[19:42:06] *** Joins: derelict (~derelict@user/derelict)
[19:43:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[19:43:34] *** Quits: Jigsy (~Jigsy@user/jigsy) (Read error: Connection reset by peer)
[19:44:01] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[19:44:37] *** Joins: Akuli (~Akuli@87-94-111-176.bb.dnainternet.fi)
[19:45:06] *** Joins: Jigsy (~Jigsy@user/jigsy)
[19:45:33] *** Joins: Pickchea (~private@user/pickchea)
[19:46:31] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[19:47:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[19:47:26] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[19:47:34] <Thanatos> SnoopJ, Attempting to install it on Windows results in this https://groups.google.com/g/codename-taurus/c/e0RNaQoINB0
[19:48:41] <SnoopJ> Thanatos, you do need a compiler for Cython, and I guess it really wants you to use the C++ build tools
[19:50:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:51:29] *** Joins: pnoud (~pnoud@user/pnoud)
[19:52:06] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[19:52:29] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[19:52:43] <Thanatos> The download is HUGE, Downloading all that for one dependency is disconcerting
[19:53:16] <SnoopJ> the joys of building software on Windows :(
[19:53:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:53:56] <Thanatos> Well actually two but I found a precompiled version of levenshtein http://www.lfd.uci.edu/~gohlke/pythonlibs/#python-levenshtein
[19:54:06] <grym> yeah i was goign to recommend gohlke
[19:54:09] <grym> man's a saint
[19:54:32] *** Quits: y1n (~y1n@84-115-65-133.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[19:54:37] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:54:42] <Thanatos> grym, True, That site has saved me a number of times
[19:54:49] *** Joins: wyclif (~wyclif@user/wyclif)
[19:55:03] <grym> i need it less and less but it saved me many times in 2015--16 era
[19:55:03] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Remote host closed the connection)
[19:55:12] <SnoopJ> Thanatos, it's not just the levenshtein dep, fuzzyset itself has Cython files in it (although again, it looks like it has pure Python fallbacks)
[19:55:32] *** Joins: y1n (~y1n@84-115-65-204.wifi.dynamic.surfer.at)
[19:55:35] <SnoopJ> I can anecdotally say that the pain of getting a proper C extension is worth it here, but I've never had to do it on Windows.
[19:55:38] <Thanatos> Assuming I bite the bullet and install C++ build tools, Can I build a reusable windows .whl file?
[19:56:21] <Thanatos> SnoopJ, Is there a way to kindly as fuzzyset to install using only pure python stuff and ignore Cython?
[19:56:27] <Thanatos> *ask fuzzyset
[19:56:45] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-258a-c307-aef7-97f0.res6.spectrum.com)
[19:56:50] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[19:59:28] <SnoopJ> Thanatos, yes, the --pure-python argument I mentioned before. I don't think there's a way to pass this via pip, you'll need to run its setup.py directly I think.
[19:59:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[20:00:15] <SnoopJ> pip has --install-option but it passes this non-standard arg to the levenshtein module too :(
[20:01:19] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[20:01:55] *** Quits: nirix (uid48447@id-48447.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[20:02:08] *** Quits: Elzington__ (~Elzington@static-198-54-128-54.cust.tzulo.com) (Ping timeout: 272 seconds)
[20:02:09] *** wyre_ is now known as wyre
[20:04:04] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[20:06:34] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 272 seconds)
[20:06:38] <nedbat> can I use "pip install -e" with an extra?
[20:06:58] <grym> nedbat: yes
[20:07:01] <ammar2> yeah
[20:07:05] <grym> `pip install -e '.[foo]'
[20:07:07] <grym> `
[20:07:52] <nedbat> oh, only .  got it.
[20:08:36] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[20:08:51] *** Joins: cheater (~Username@user/cheater)
[20:10:58] <SnoopJ> I think the quotes are optional, too?
[20:11:16] <grym> i've had to require them, at least on zsh
[20:12:06] <ammar2> pep 657 is now implemented ðŸŽ‰ https://docs.python.org/3.11/whatsnew/3.11.html#enhanced-error-locations-in-tracebacks
[20:12:14] *** Joins: wyclif (~wyclif@user/wyclif)
[20:12:38] <SnoopJ> ammar2, congrats and thanks :)
[20:13:07] <zware> ðŸŽ‰
[20:13:41] <zware> SnoopJ: Quotes are optional depending on how your shell interprets square brackets
[20:14:05] <SnoopJ> zware, right, there's never any accounting for the shell
[20:16:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:17:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:17:38] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[20:17:38] *** michagogo_ is now known as michagogo
[20:17:45] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[20:19:31] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:20:06] *** Quits: Trieste_ (T@user/pilgrim) (Ping timeout: 255 seconds)
[20:20:44] *** Joins: varaindemian (~varaindem@86.124.22.31)
[20:20:54] <Thanatos> SnoopJ, Oh, I did it.
[20:21:15] <SnoopJ> Thanatos, cool :) Any pearls of wisdom to share?
[20:21:25] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[20:21:43] <Thanatos> Installed python levenshtein from http://www.lfd.uci.edu/~gohlke/pythonlibs/#python-levenshtein, then installed $ python -m pip install fuzzyset --install-option='--pure-python'
[20:21:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[20:22:24] <SnoopJ> ahh, that makes sense
[20:22:34] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:22:58] <Thanatos> I've learnt that I need to either get comfortable using Docker for everything or just bit the bullet and dual-boot linux.
[20:23:26] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[20:23:33] <Thanatos> Thanks, SnoopJ for pointing out the '--pure-python' flag.
[20:23:59] <deniska> I used a VM on a windows computer for a while
[20:24:11] <SnoopJ> Thanatos, WSL is pretty good, too. Definitely don't pass it up as an option.
[20:24:15] <deniska> nowadays they have WSL2 from what I've heard
[20:24:20] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[20:24:28] *** Quits: pycode (~pycode@2001:b07:5d28:551:b1e0:3484:5b3f:ada) (Ping timeout: 256 seconds)
[20:24:43] <SnoopJ> yea, WSL2 is neat
[20:25:15] *** Joins: wovixo (~wovixo@128.104.205.49)
[20:25:43] <deniska> the original WSL fell on its face the moment I tried it, granted that was when it was still a tech preview :)
[20:26:38] <SnoopJ> we use it extensively at $EMPLOYER, but mostly WSL2 because of the GPU stuff
[20:28:35] *** Joins: wyclif (~wyclif@user/wyclif)
[20:29:28] *** Joins: pnoud (~pnoud@user/pnoud)
[20:29:55] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0) (Quit: Leaving)
[20:30:19] *** Joins: decimuscorvinus_ (~jimmy@136.37.105.112)
[20:30:41] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Ping timeout: 252 seconds)
[20:30:42] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 256 seconds)
[20:31:18] <Henryx> for the sqlalchemy users, the behaviour of the function that uses the orm is similar to others functions (single transaction for all rows, commit when close the connection)? https://pastebin.com/eGce0EeN
[20:32:51] *** Quits: zdleaf (~zinc@163.ip-51-254-203.eu) (Quit:  )
[20:33:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[20:34:23] *** dartmouthed is now known as WashAndWaxmouthe
[20:34:35] *** WashAndWaxmouthe is now known as WashNWaxmouthed
[20:34:43] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[20:37:04] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[20:37:31] *** WashNWaxmouthed is now known as dartmouthed
[20:37:57] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:38:12] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[20:38:33] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[20:38:33] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[20:38:55] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[20:39:00] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[20:39:20] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[20:39:25] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[20:40:52] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[20:41:44] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:41:47] *** Quits: dvx (~dvx@185.63.97.64) (Quit: dvx)
[20:42:17] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[20:42:32] *** Joins: Barones (~Barones@2804:48dc:8500:0:f0a6:a913:47d6:9e16)
[20:44:51] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 255 seconds)
[20:45:14] *** Joins: zdleaf (~zdleaf@163.ip-51-254-203.eu)
[20:46:23] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:46:24] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 258 seconds)
[20:46:31] *** Joins: wyclif (~wyclif@user/wyclif)
[20:46:37] *** Quits: PdimH (~pdimh@user/pdimh) (Quit: May we meet again)
[20:46:41] *** Joins: Elzington (~Elzington@static-198-54-128-76.cust.tzulo.com)
[20:47:40] *** Joins: masber (~masber@vpn-66.cscs.ch)
[20:48:52] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:49:51] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:50:55] *** Joins: dvx (~dvx@185.63.97.64)
[20:51:18] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[20:51:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 276 seconds)
[20:51:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[20:52:23] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[20:52:34] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[20:54:28] *** Quits: y1n (~y1n@84-115-65-204.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[20:54:30] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 276 seconds)
[20:54:41] *** Joins: y1n (~y1n@84-115-65-204.wifi.dynamic.surfer.at)
[20:55:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:56:25] *** Quits: VaniaPy (~VaniaPy@79.103.30.29.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[20:58:01] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[20:58:03] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:58:32] *** Joins: programmerq (~programme@user/programmerq)
[20:59:23] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 2.3)
[20:59:42] *** Quits: jpic (~jpic@bernadette.objectif-libre.com) (Ping timeout: 255 seconds)
[21:00:53] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[21:01:40] *** Joins: jpic (~jpic@82.142.18.222)
[21:01:42] *** Quits: cedric (~cedric@2a01:cb11:867:c200:c82:b85b:e1ec:aee) (Quit: Konversation terminated!)
[21:02:18] *** Joins: wyclif (~wyclif@user/wyclif)
[21:07:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[21:07:35] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[21:08:38] *** Quits: bambams (~bambams@user/bambams) (Ping timeout: 272 seconds)
[21:11:41] *** Joins: bambams (~bambams@user/bambams)
[21:13:28] *** Quits: masber (~masber@vpn-66.cscs.ch) (Ping timeout: 246 seconds)
[21:14:05] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:15:13] <nubonix_> alright, so i have a fastapi server that is using Oauth2, but i dont understand how to secure routes
[21:15:13] <nubonix_> server.py and client.py are here: https://bpa.st/PECQ
[21:15:13] <nubonix_> im trying to secure the test route
[21:15:19] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 265 seconds)
[21:17:06] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[21:18:32] *** Quits: kostkon_ (~androirc@ppp-94-65-184-172.home.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[21:20:59] *** Joins: hposca (~hposca@node-1w7jr9phoke2td1e507xtdn5o.ipv6.telus.net)
[21:21:00] *** Joins: wyclif (~wyclif@user/wyclif)
[21:21:22] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:21:53] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[21:25:13] <graingert> nubonix_: why are you using oauth2 and have a verify_password ?
[21:25:16] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Remote host closed the connection)
[21:25:30] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[21:25:44] <nubonix_> jwt*
[21:26:14] <nubonix_> graingert: idk
[21:26:28] <graingert> nubonix_: http://cryto.net/~joepie91/blog/2016/06/13/stop-using-jwt-for-sessions/
[21:26:30] <nubonix_> was trying to follow along the tutorial by prettyprinted
[21:26:39] <graingert> just use a session cookie with httpsonly and samsite: lax
[21:27:26] <graingert> nubonix_: also there's an encode specific community for starlette:Starlette and her subclasses https://app.element.io/#/room/#encode_community:gitter.im
[21:27:29] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:28:24] <nubonix_> eh
[21:28:34] <nubonix_> how can i tag myself
[21:28:42] <nubonix_> when i didnt write that message
[21:28:46] <nubonix_> nvm
[21:29:13] <nubonix_> not used to the way ircloud splits mesages
[21:29:22] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:29:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[21:31:06] <Donitz> is there a difference between
[21:31:07] <Donitz> datetime.utcnow().strftime('%Y%m%dT%H%M%Sz')
[21:31:09] <Donitz> and
[21:31:12] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[21:31:13] <Donitz> datetime.now().strftime('%Y%m%dT%H%M%Sz')
[21:31:24] <nubonix_> yes
[21:31:27] <Donitz> the example I saw used the second, but how does that make sense
[21:31:28] <nubonix_> your locality
[21:31:37] <Donitz> z implies UTC
[21:31:46] <nubonix_> utc is the 'standard' time, now uses your own timezone
[21:31:51] <graingert> nubonix_: you can use `/me`
[21:32:13] <nubonix_> graingert no, i was tripping, it was you who tagged me
[21:32:25] <Donitz> https://www.tutorialspoint.com/How-do-I-get-an-ISO-8601-date-in-string-format-in-Python
[21:32:26] <Donitz> see
[21:32:29] <nubonix_> graingert pre tired i guess
[21:32:30] <Donitz> print(my_date.strftime('%Y-%m-%dT%H:%M:%S.%f%z'))
[21:32:54] *** Parts: thunfisch (~thunfisch@user/thunfisch) (frrrp!)
[21:33:07] <Donitz> wait, %z?
[21:33:08] <nubonix_> graingert so starlette over fastapi?
[21:33:24] <nubonix_> Donitz: i recommend pendulum for all things time related in python
[21:33:30] <Donitz> no need
[21:33:34] <nubonix_> your life will be much easier
[21:33:40] <Donitz> it won't be
[21:33:44] <Donitz> just like it won't be with moment.js
[21:33:49] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[21:33:53] <Donitz> adding yet ANOTHER library on top of it all does not simplify things
[21:34:02] <Donitz> it's better to understand the basic workings of the datetime class
[21:34:15] <Donitz> which I assumed was tz naive
[21:34:33] <zware> Donitz: It is, unless you give it a timezone
[21:34:49] <Donitz> right, so using utcnow does not do that then?
[21:34:58] <graingert> nubonix_: I'm a starlette dev and currently having trouble getting fastapi to update to starlette 0.15
[21:35:10] <zware> Donitz:  No; it gives a naive datetime with the current time in UTC
[21:35:24] <Donitz> isn't UTC pretty much the default
[21:35:29] <Donitz> the native storage format
[21:35:50] <zware> Donitz: To get a timezone-aware UTC datetime, `datetime.datetime.now(timezone=datetime.timezone.utc)`
[21:36:10] <Donitz> well, you said that is literally the same as utcnow
[21:36:29] <zware> Donitz: Nope, utcnow gives a naive datetime
[21:36:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:36:45] <Donitz> "No; it gives a naive datetime with the current time in UTC"
[21:36:53] <Donitz> but this is contradictory
[21:36:55] <Donitz> it can not be both
[21:36:59] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[21:37:18] <Donitz> eh, anyway
[21:37:26] <Donitz> it's utcnow I want. Naive or UTC
[21:37:28] <Donitz> same deal
[21:37:41] <Donitz> datetime.utcnow().strftime('%Y%m%dT%H%M%Sz')
[21:37:43] <Donitz> this is what I want
[21:37:50] <Donitz> a proper ISO format
[21:37:54] <Donitz> for log filenames
[21:38:02] <NeilRG> What do you guys of this snippet? https://stackoverflow.com/a/61471301/99989
[21:38:06] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[21:38:43] <nubonix_> graingert alright :) ill give it a try
[21:39:02] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[21:39:07] <zware> Donitz: For example, right now `datetime.now()` gives me `datetime(2021, 7, 13, 12, 7, 21, 367979)`.  `datetime.utcnow()` gives me `datetime(2021, 7, 13, 17, 7, 21, 367979)`.  `datetime.now(tz=timezone.utc)` gives me  `datetime(2021, 7, 13, 17, 8, 35, 578445, tzinfo=datetime.timezone.utc)`
[21:39:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[21:39:32] <zware> (I was wrong about the argument name; it's `tz`, not `timezone`)
[21:39:46] <zware> Donitz: For ISO format, use the `isoformat` method :)
[21:39:54] <Donitz> it won't give me the short format
[21:39:58] <Donitz> it includes - and :
[21:40:03] <Donitz> which do not really work well for filenames
[21:40:30] <ChrisWarrick> dashes work well for filenames
[21:40:40] <Donitz> well, dashes do
[21:40:45] <zware> Donitz: Then your `utcnow().strftime(...)` looks fine
[21:40:58] *** Quits: kiwi_36 (~thefuture@197.237.3.26) (Ping timeout: 256 seconds)
[21:41:06] <Donitz> I wish you could just say isoformat(short=True)
[21:41:07] <Donitz> or something
[21:41:12] <Donitz> it is a standard after all
[21:42:09] <nubonix_> graingert this library makes me feel dumb lols
[21:42:15] *** Joins: audiocat (~audio@2603-8081-1800-00ad-0f94-2547-14ef-ab6d.res6.spectrum.com)
[21:42:20] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:42:42] <zware> Donitz: You could open an issue to that effect (do look for an existing one first, though :))
[21:42:59] *** Quits: jess (~jess@libera/staff/jess) ()
[21:44:22] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[21:44:41] <Donitz> much complaining about fromisoformat not supporting all formats
[21:44:43] <Donitz> understandable
[21:46:08] *** Quits: varaindemian (~varaindem@86.124.22.31) (Quit: Client closed)
[21:46:26] <Donitz> "datetime module has no support for nanoseconds"
[21:46:26] <Donitz> hehe
[21:46:31] <Donitz> doesn't datetime still use a 64-bit float?
[21:47:09] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 276 seconds)
[21:47:22] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[21:47:41] <Donitz> I think those are still good to microseconds
[21:47:51] <Donitz> but no way can they go down to single digit nanoseconds
[21:47:51] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 255 seconds)
[21:48:09] <Donitz> and the precision only gets worse over time
[21:48:42] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[21:48:46] <Donitz> just start storing datetimes as strings and be done with it
[21:48:50] <Donitz> memory is cheap
[21:48:53] <graingert> nubonix_: ?
[21:49:16] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[21:49:42] <nubonix_> graingert: my understanding vs yours
[21:50:27] <zware> Donitz: That makes arithmetic rather expensive
[21:51:06] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[21:51:36] <Donitz> https://mail.python.org/pipermail/python-dev/2012-February/116837.html
[21:51:39] <Donitz> oh that's some hubris
[21:51:52] <graingert> ??
[21:52:21] *** Joins: wyclif (~wyclif@user/wyclif)
[21:52:31] <Donitz> it's just ignoring a problem until at some point it becomes a real issue
[21:52:40] <Donitz> like say, storing datetimes in floating-point values
[21:52:47] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[21:53:42] <nubonix_> graingert: coding knowledge
[21:54:00] *** Quits: y1n (~y1n@84-115-65-204.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[21:54:27] <Donitz> well zware, you don't often do a lot of really expensive arithmetic on dates afaik
[21:54:33] <Donitz> and if you do, you can always just convert them to floats
[21:54:40] <Donitz> which in itself is lossy
[21:54:48] <Donitz> but at least the original data is lossless
[21:55:01] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Client Quit)
[21:55:05] <nubonix_> graingert wdym by this? just use a session cookie with httpsonly and samsite: lax
[21:55:16] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[21:55:16] <nubonix_> r there examples?
[21:55:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:55:50] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[21:56:10] *** Quits: Lando-SpacePimp (~LandoC@user/lando-spacepimp) (Ping timeout: 258 seconds)
[21:57:55] *** Joins: y1n (~y1n@84-115-64-240.wifi.dynamic.surfer.at)
[21:58:15] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:69c5:2d38:da5d:16)
[21:58:42] <zumba_addict> is there a tool that we can use to manage different versions of pyhon? Just like nvm in node, it can install different nodejs versions
[21:59:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[22:00:19] <ammar2> zumba_addict: pyenv
[22:00:32] <zumba_addict> ok, let me google it. Thank you
[22:01:01] <zumba_addict> is it stable and recommended?
[22:01:53] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[22:01:59] <graingert> SameSite: lax sorry nubonix_
[22:02:26] <graingert> nubonix_: tbh you might be better off with Django Auth for now?
[22:02:30] <nubonix_> graingert ? never heard of it, and dono what httpsonly is
[22:02:42] <graingert> It's a type of cookie flag
[22:02:53] <nubonix_> o, i recognize it now
[22:03:06] <nubonix_> still dono what it does, but at least ik where it is
[22:03:21] <nubonix_> mm, using pyqt5 to call the api
[22:03:33] <graingert> It stops JavaScript being able to read it from globalThis.document.cookie
[22:03:56] <nubonix_> ah
[22:04:01] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[22:04:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:04:59] <graingert> You should usually enable HttpOnly: true, Secure: true, SameSite: lax by default
[22:05:31] <graingert> HttpsOnly is a sort of unnoficial shorthand for HttpOnly: true Secure: true
[22:05:33] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[22:05:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:06:04] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[22:07:54] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[22:08:24] <nubonix_> graingert mm, you know my goal ya?
[22:08:29] <graingert> no
[22:09:10] <nubonix_> to enslave other computers of mine
[22:09:17] *** Quits: zbr (~zbr@h.sbarnea.com) (Quit: Ping timeout (120 seconds))
[22:09:17] <hogarius> ovnicraft: x1
[22:09:18] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[22:09:31] <nubonix_> i need to start / stop a program(s) [.exe and .jar]
[22:09:42] <nubonix_> program(s)
[22:09:46] *** Joins: cheater (~Username@user/cheater)
[22:09:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 276 seconds)
[22:09:57] <hogarius> i apologize.  I tried to clean my screen.
[22:10:01] *** Joins: zbr (~zbr@h.sbarnea.com)
[22:10:30] <nubonix_> start / stop programs remotely* [.exe & .jar]*
[22:11:12] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 276 seconds)
[22:11:25] <nubonix_> so it looks like this: i rent a vps, install my program, and then i can run commands on the vps via my master / controller computer
[22:11:30] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[22:11:34] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 256 seconds)
[22:11:37] *** Joins: wyclif (~wyclif@user/wyclif)
[22:12:03] <nubonix_> basically ssh, but, something like fabric doesnt work because of the gui [to my knowledge]
[22:12:10] <nubonix_> so i used rpyc
[22:12:27] <nubonix_> and now im thinking i want to switch to a restful api
[22:12:32] <nubonix_> should*
[22:13:06] *** Joins: akaWolf (~akaWolf@akawolf.org)
[22:14:07] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[22:14:52] *** Joins: Auron (~Auron956@user/auron)
[22:16:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:16:49] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[22:16:55] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:69c5:2d38:da5d:16) (Quit: Client closed)
[22:17:36] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[22:18:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:19:31] *** Joins: rememberYou (~someone@user/rememberyou)
[22:21:00] *** Joins: zbr0 (~zbr@h.sbarnea.com)
[22:21:36] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 255 seconds)
[22:22:54] *** Quits: zbr (~zbr@h.sbarnea.com) (Ping timeout: 276 seconds)
[22:22:54] *** zbr0 is now known as zbr
[22:24:38] *** Quits: computeiro (~Wender@189.37.69.141) (Ping timeout: 272 seconds)
[22:25:52] *** Joins: Novi (~novi@user/novi)
[22:27:54] *** Joins: wyclif (~wyclif@user/wyclif)
[22:28:52] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 245 seconds)
[22:28:58] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[22:29:27] *** Quits: kor1 (~kor1@user/kor1) (Quit: Leaving.)
[22:29:59] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[22:30:18] *** Joins: pnoud (~pnoud@user/pnoud)
[22:30:33] *** Joins: Lando-SpacePimp (~LandoC@user/lando-spacepimp)
[22:30:50] *** Joins: rq (~rq@c-98-194-153-108.hsd1.tx.comcast.net)
[22:31:16] *** Joins: eru (~eru@103.100.150.2)
[22:31:22] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[22:31:27] *** Joins: Trieste (~T@user/pilgrim)
[22:32:46] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[22:32:51] <eru> if i have an iterable object , can i use the "in" operator to check if something is "in" this iterator ;
[22:32:55] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[22:33:06] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[22:33:09] <eru> reliably
[22:33:40] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:33:46] <eru> does it "exhaust" the iterator ?  i tried this with range and it doesnt seem to exhaust the iterator
[22:33:48] *** Quits: bambams (~bambams@user/bambams) (Quit: Rrrrrrrrregards)
[22:33:54] *** Joins: bambams_ (~bambams@user/bambams)
[22:33:58] *** Quits: bambams_ (~bambams@user/bambams) (Read error: Connection reset by peer)
[22:34:00] *** Quits: reset (~reset@user/reset) (Quit: reset)
[22:34:06] *** Joins: ras_manny (~ras_manny@196.24.136.255)
[22:34:21] *** Joins: bambams (~bambams@user/bambams)
[22:34:29] <SnoopJ> eru, clarification: all iterators are iterable. Are you talking about the case of having an iterator, or an object that is iterable for other reasons?
[22:34:39] <SnoopJ> range objects are iterable, but they are not iterators
[22:35:22] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 256 seconds)
[22:35:34] <zware> eru: `in` is handled by the `__contains__` method, completely independent of iteration AFAIR
[22:36:07] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[22:36:20] <SnoopJ> There's some fallback behavior, but __contains__ is the first place the runtime looks
[22:37:10] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Remote host closed the connection)
[22:37:28] <eru> oh alright ; to be more specific its the results from an sqlite query ; i run ```res = cur.execute("select ..." )``` , now i want to see if ```"something" in res```
[22:37:50] <NeilRG> when was np.int64 added to numpy?
[22:38:13] <zware> eru: Here's the relevant bit of the docs: https://docs.python.org/3/reference/expressions.html#membership-test-details
[22:38:17] <NeilRG> I'm getting some ridiculous criticism to my pull request
[22:38:27] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[22:38:31] <NeilRG> like is this a joke? https://github.com/tensorflow/tensorflow/pull/50527#pullrequestreview-705495063
[22:38:32] <zware> (I did not remember fully :))
[22:38:34] *** Quits: binarymutt[m] (~binarymut@2001:470:69fc:105::2b3f) (Changing host)
[22:38:34] *** Joins: binarymutt[m] (~binarymut@user/binarymutt)
[22:38:43] *** Joins: todda7 (~torstein@2a02:587:3260:9800:5001:8f86:3f65:c60a)
[22:38:49] <SnoopJ> NeilRG, assume good faith. If you can't do that, take a break.
[22:39:00] <NeilRG> SnoopJ, that's why I'm not saying that to him lol
[22:39:09] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 255 seconds)
[22:39:13] <NeilRG> anyway, do you know how I can find out when np.int64 was added?
[22:39:14] <SnoopJ> NeilRG, that doesn't mean you're assuming good faith, though.
[22:39:20] *** Joins: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net)
[22:39:31] *** Parts: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) ()
[22:39:33] <NeilRG> SnoopJ, it doesn't matter what I think. I'm just going to answer him
[22:39:42] <SnoopJ> I would be pretty surprised if int64 was "added" at any meaningful point, I'd expect it has always been there
[22:39:45] *** Quits: rq (~rq@c-98-194-153-108.hsd1.tx.comcast.net) (Changing host)
[22:39:45] *** Joins: rq (~rq@user/rq)
[22:39:51] <SnoopJ> but the answer will be in their repo history
[22:39:55] <NeilRG> SnoopJ, right, I just need to find a version number somehow
[22:39:58] *** Joins: reset (~reset@user/reset)
[22:41:27] *** Joins: computeiro (~Wender@189.37.64.59)
[22:42:07] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[22:42:08] *** Joins: finsternis (~X@23.226.237.192)
[22:43:09] *** Joins: bambams_ (~bambams@user/bambams)
[22:43:17] <NeilRG> SnoopJ, Do you think this reply is reasonable? > What is the compatibility story? Will these get renamed again in a later numpy version?
[22:43:18] <NeilRG> I think that's _extremely_ unlikely to happen in the next decade, but you're welcome to ask the NumPy people if they plan on renaming their fundamental dtypes.
[22:43:40] *** Quits: eru (~eru@103.100.150.2) (Quit: Client closed)
[22:44:13] <SnoopJ> NeilRG, yes, I think those are reasonable questions to ask, even if you personally consider them inane.
[22:44:25] <SnoopJ> (the asker may be completely unfamiliar with numpy)
[22:44:26] <NeilRG> sure, I'm asking if you think my reply seems okay
[22:45:01] <NeilRG> SnoopJ, I guess so.  I think I'm a bit disappointed with him because he made a few other inane comments in other threads
[22:45:05] *** Joins: derelict (~derelict@user/derelict)
[22:45:33] *** Joins: wyclif (~wyclif@user/wyclif)
[22:46:13] *** Quits: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net) (Quit: WeeChat 3.2)
[22:46:48] *** Joins: Elodin (~weechat@user/elodin)
[22:47:12] *** Quits: bambams (~bambams@user/bambams) (Ping timeout: 272 seconds)
[22:47:12] *** Quits: Trieste (~T@user/pilgrim) (Ping timeout: 245 seconds)
[22:47:28] <SnoopJ> NeilRG, I can tell it stings, which is why I think a break would be a good idea. It looks like "int64" started appearing around the tag v0.4.2b1 (Jan 2002), I don't see it in tags earlier than that.
[22:47:51] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[22:47:53] <NeilRG> SnoopJ, you think my reply stings?
[22:48:01] *** Joins: Trieste (T@user/pilgrim)
[22:48:04] *** Quits: bambams_ (~bambams@user/bambams) (Ping timeout: 272 seconds)
[22:48:06] <SnoopJ> NeilRG, no, I can tell that your interactions with that person have left you unsettled.
[22:48:11] *** Quits: rq (~rq@user/rq) (Quit: Client closed)
[22:48:17] <NeilRG> SnoopJ, that's irrelevant if it doesn't show in my reply :)
[22:48:17] <SnoopJ> I don't think your comment adds really much of anything, to tell you the truth.
[22:48:25] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a6ea:d549:1785:23d0)
[22:48:29] <NeilRG> I'm just answering his questions
[22:49:05] <grym> NeilRG: starting at "but you're welcome to ask t..." becomes unprofessional
[22:49:11] <SnoopJ> No, you're speculating about an answer to one of them, and you're inviting him to ask them for a solid answer, which I think could be read as combative ("you're welcome to...")
[22:49:44] <NeilRG> SnoopJ, yeah I'll remove that part
[22:49:48] <NeilRG> since it's obvious he won't ask
[22:49:56] * SnoopJ taps the "assume good faith or take a break" sign
[22:50:14] <SnoopJ> it's hard to do, but if you go into it looking for a fight, a fight is likely all you'll get out of it
[22:50:19] *** Joins: eru (~eru@103.100.150.2)
[22:50:27] <SnoopJ> (even if someone is being legitimately unreasonable on a PR)
[22:50:32] <NeilRG> SnoopJ it's possible to write a diplomatic answer without taking a break
[22:50:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:50:42] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[22:50:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:50:54] <SnoopJ> NeilRG, it is, but you do have to want to do it. I'm not really reading that here. Anyway, you have your answer, do with it what you will.
[22:51:26] <SnoopJ> if that's not precise enough historical information, I'd probably check the old committed docs
[22:51:45] *** Joins: bluss (~bluss@user/bluss)
[22:51:55] <NeilRG> SnoopJ, what does he mean by "compatibility story"?
[22:52:05] <NeilRG> what does that term mean exactly?
[22:52:15] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:52:19] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[22:52:43] <ChrisWarrick> NeilRG: Will this change have any adverse effects for people running an older version of numpy?
[22:52:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 276 seconds)
[22:53:02] <NeilRG> ChrisWarrick, ah, ok
[22:53:55] <SnoopJ> (unlikely, since you are following numpy's own guidance; the potential conflict is if PyTorch wants to support versions that NumPy themselves have deprecated)
[22:54:00] *** Quits: y1n (~y1n@84-115-64-240.wifi.dynamic.surfer.at) (Ping timeout: 255 seconds)
[22:54:33] *** Joins: y1n (~y1n@84-115-65-72.wifi.dynamic.surfer.at)
[22:54:39] *** Joins: jetchisel (jetchisel@user/jetchisel)
[22:54:53] <NeilRG> https://github.com/tensorflow/tensorflow/pull/50527#issuecomment-879304864
[22:55:16] <NeilRG> SnoopJ, yeah but like you said, those versions would have to be almost 20 years old (tensorflow--not pytorch)
[22:55:28] <SnoopJ> oops
[22:55:50] <SnoopJ> call it an unconscious aspiration to not use TF again
[22:56:29] <MacGyver> Also should they expect to have to update this code in the (near) future if numpy doesn't guarantee interface stability.
[22:56:29] <nedbat> in which i write five bugs about CPython tracing behavior in 24 hours...
[22:56:38] <NeilRG> SnoopJ, i totally agree.  I use JAX.  It's probably the most brilliantly designed automatic differentiation library out there
[22:56:42] <MacGyver> They're both reasonable questions if one is unfamiliar with numpy.
[22:56:54] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[22:56:55] <NeilRG> and the developers are amazing, probably the best team I've ever seen
[22:57:18] <SnoopJ> you can get a lot done when a BigCorp throws that much money at a problem
[22:57:37] <SnoopJ> (it's gone rather better than Tensorflow, though)
[22:57:51] <SnoopJ> nedbat, five? wow
[22:58:04] <NeilRG> SnoopJ, exactly!  Crazy how JAX killed it, and TensorFlow is thrashing around
[22:59:21] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:59:25] <nedbat> SnoopJ: mostly these are coverage.py issues that i probably should have jumped on sooner
[22:59:33] <nedbat> SnoopJ: but 3.10 has been a moving target
[22:59:53] <SnoopJ> NeilRG, the advantage of smaller scope I suppose
[23:00:10] <SnoopJ> ...and having had someone step on all the landmines already, heh.
[23:00:21] <nedbat> SnoopJ: oh, actually six, but one's already fixed
[23:00:25] <NeilRG> SnoopJ, I think the interaction went well, take a look :)
[23:00:28] <SnoopJ> nedbat, busy guy :)
[23:00:30] *** Quits: nyah (~nyah@90.221.186.180) (Quit: leaving)
[23:00:57] <SnoopJ> NeilRG, agreed
[23:00:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:01:28] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[23:01:29] <grym> nice!
[23:01:39] *** Quits: Thanatos (~Thanatos@197.210.77.171) (Ping timeout: 255 seconds)
[23:01:39] *** Joins: gone (uid508340@id-508340.highgate.irccloud.com)
[23:02:29] <gone> I know to do this right would be a much larger project, but is there a library out there that would be a good POC for string type detection? EG "123 Park st" -> Address, "John smith" -> name
[23:02:36] *** Joins: LuxuryMode (uid91005@id-91005.charlton.irccloud.com)
[23:03:02] <LuxuryMode> `factory.Faker('pydecimal', min_value=1000.00, max_value=1200.00)` works, but `factory.Faker('pydecimal', min_value=0.21, max_value=0.89)` results in `ValueError: non-integer arg 1 for randrange()`. What am I misunderstanding here?
[23:03:14] <NeilRG> SnoopJ, yeah, I guess you're right.  scope is a big issue
[23:03:20] <SnoopJ> gone, I would poke around in the spaCy community, someone may have written a network that tries to solve that problem. It's a pretty hard one in general.
[23:03:29] *** Quits: eru (~eru@103.100.150.2) (Quit: Client closed)
[23:04:15] *** Joins: wyclif (~wyclif@user/wyclif)
[23:04:23] <gone> @SnoopJ I know - I know you could build out a full classifier to do it, but I'm hoping there's something out there that would work 50% of the time
[23:04:30] <gone> or even less tbh
[23:04:32] *** Quits: todda7 (~torstein@2a02:587:3260:9800:5001:8f86:3f65:c60a) (Ping timeout: 272 seconds)
[23:04:37] <SnoopJ> gone, you can get a lot farther than you might think with regex if your data are reasonably bounded.
[23:05:02] <gone> @SnoopJ the data isn't super well bounded sadly - coming from an OCR source
[23:05:43] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Quit: The Lounge - https://thelounge.chat)
[23:05:44] <SnoopJ> gone, are ADDRESS and NAME the only possible outputs?
[23:05:54] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[23:05:56] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[23:06:17] *** Joins: pyfisch (~pyfisch@ip-95-223-230-181.hsi16.unitymediagroup.de)
[23:06:21] <gone> @SnoopJ  Theoretically it's arbitrary but for the poc I have 10 or 12 fields
[23:07:00] *** Quits: rany (~rany@user/rany) (Excess Flood)
[23:07:12] *** Joins: rany (~rany@user/rany)
[23:08:23] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[23:08:37] *** Joins: brabrax (~brabrax@user/brabrax)
[23:09:44] *** Quits: brabrax (~brabrax@user/brabrax) (Remote host closed the connection)
[23:09:51] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[23:09:58] *** Joins: brabrax (~brabrax@user/brabrax)
[23:10:02] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[23:10:50] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 265 seconds)
[23:12:21] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Ping timeout: 244 seconds)
[23:13:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:13:24] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[23:15:38] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[23:15:50] *** Quits: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:16:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[23:16:40] <Henry151> hey, given this: https://bpa.st/raw/L2HQ how can i specify "new Frame objects should by default have brand = "raleigh" and material = "steel""
[23:16:58] *** Joins: wyclif (~wyclif@user/wyclif)
[23:17:05] * Henry151 realizes this is elementary
[23:17:46] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[23:17:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:18:04] <grym> brand: str = attr.ib(default="raleigh")
[23:18:13] <grym> Henry151: ^
[23:18:28] <grym> Henry151: note that for mutable types (like "i want the default value to be an empty list), you want to use a factory
[23:18:53] <grym> Henry151: https://www.attrs.org/en/stable/api.html?highlight=factory#attr.Factory
[23:18:55] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[23:19:13] <grym> but immutable types can have defaults hardcoded
[23:19:26] *** Joins: rq (~rq@user/rq)
[23:19:43] <Henry151> thanks grym!
[23:19:51] <Henry151> awesome.
[23:20:04] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[23:20:15] <grym> cheers
[23:20:41] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[23:20:44] *** Quits: pyfisch (~pyfisch@ip-95-223-230-181.hsi16.unitymediagroup.de) (Quit: The Lounge - https://thelounge.chat)
[23:21:53] *** Joins: pyfisch (~pyfisch@ip-95-223-230-181.hsi16.unitymediagroup.de)
[23:23:56] *** Quits: computeiro (~Wender@189.37.64.59) (Ping timeout: 272 seconds)
[23:24:40] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[23:24:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[23:24:42] *** Quits: odoood (~odoood@pool-71-251-227-104.rcmdva.fios.verizon.net) (Ping timeout: 245 seconds)
[23:24:44] *** Joins: akaWolf (~akaWolf@akawolf.org)
[23:25:04] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[23:26:16] *** Quits: dvx (~dvx@185.63.97.64) (Read error: Connection reset by peer)
[23:26:40] *** Joins: dvx (~dvx@185.63.97.64)
[23:29:11] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Quit: Good bye everyone!)
[23:29:27] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[23:29:33] *** fedenix_ is now known as fedenix
[23:31:48] *** Quits: dvx (~dvx@185.63.97.64) (Ping timeout: 276 seconds)
[23:32:11] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[23:32:22] *** Joins: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net)
[23:32:27] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Remote host closed the connection)
[23:33:07] <furrykef> What's the latest Python 3 that works with OpenSSL 1.0.1?
[23:33:58] <grym> furrykef: 3.5, i think
[23:34:03] <grym> so, a dead one
[23:34:40] <RoyK> isn't openssl 1.0.1 rather dead as well?
[23:34:42] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 272 seconds)
[23:35:08] <furrykef> I'm just trying to get something working on an old VPS that I intend to kill as soon as DigitalOcean officially supports Rocky Linux or something
[23:35:14] <grym> 1.0.1's been dead since 2017
[23:35:28] <furrykef> I don't even need SSL, but uWSGI won't install without it.
[23:35:35] <grym> RoyK: you might have to roll your own openssl
[23:37:39] <Roey> RoyK: hi
[23:38:11] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[23:38:20] *** Joins: EGH (~EGH@185.25.195.104)
[23:38:23] <RoyK> Roey: hi
[23:38:42] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[23:38:46] *** Joins: jess (~jess@libera/staff/jess)
[23:38:58] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[23:40:07] <furrykef> Anyway, I want better than an "I think"... how can I definitively answer the question without just downloading it and installing it and finding it doesn't work?
[23:40:15] <raek> how do "eggs" relate to sdists and wheels?
[23:40:25] <furrykef> Are Python's requirements not listed anywhere?
[23:41:00] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-c486-c910-77b8-ae5c.res6.spectrum.com)
[23:41:22] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-258a-c307-aef7-97f0.res6.spectrum.com) (Ping timeout: 245 seconds)
[23:41:34] <Roey> RoyK: oh I remmeber you now, I rmemeber chatting with you before (I'm also a roey K)
[23:41:51] <SnoopJ> raek, "eggs are what we had before wheels" is the executive summary
[23:42:35] <raek> okay, a previous iteration of some disitribution format then...
[23:42:51] *** Quits: Deneb (~johnch@58.111.189.80.dyn.plus.net) (Remote host closed the connection)
[23:43:57] *** Quits: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl) (Ping timeout: 255 seconds)
[23:44:05] <raek> I've seen .egg-info directories when I build things. do parts of the egg standard continue to live in more recent standards?
[23:44:35] *** Joins: Pickchea (~private@user/pickchea)
[23:44:52] *** Joins: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl)
[23:44:56] <RoyK> Roey: ah :)
[23:45:00] <raek> furrykef: I found this: https://docs.python.org/3/whatsnew/3.7.html#platform-support-removals
[23:45:04] <RoyK> I'm just a Roy K
[23:45:22] <furrykef> Thanks
[23:45:26] <raek> What's new for Python 3.7: "OpenSSL 0.9.8 and 1.0.1 are no longer supported,"
[23:45:57] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 245 seconds)
[23:48:03] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:48:46] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[23:49:08] <grym> relevant discussion that stays polite for a few messages: https://mail.python.org/pipermail/python-dev/2016-August/145907.html
[23:49:13] <jamiejackson> hi folks. in pytest, say i have a fixture (delete_table) that truncates a database table. how do i keep the database table dynamic (so that the fixture gets called with that table name)?
[23:49:20] *** Joins: Dantalion (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl)
[23:49:42] *** Quits: Dantali0n (~Dantali0n@217-123-73-108.cable.dynamic.v4.ziggo.nl) (Ping timeout: 245 seconds)
[23:49:50] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[23:50:07] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[23:50:24] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[23:52:16] <NeilRG> what do the eyes emoji mean on github?
[23:52:28] <NeilRG> does it mean "I've seen this" or "I'm watching this"?
[23:52:49] *** Joins: grantini (~kluskam@037008230115.dynamic-3-poz-k-1-2-0.vectranet.pl)
[23:53:23] <SnoopJ> NeilRG, I've seen it used both ways
[23:53:30] <NeilRG> SnoopJ, ok thanks
[23:53:45] <NeilRG> and same
[23:53:52] *** Quits: y1n (~y1n@84-115-65-72.wifi.dynamic.surfer.at) (Ping timeout: 245 seconds)
[23:54:32] *** Joins: y1n (~y1n@84-115-65-72.wifi.dynamic.surfer.at)
[23:54:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:54:35] <jamiejackson> i'm reading through this SO answer to a similar fixture question: https://stackoverflow.com/a/33879151/1026263
[23:55:41] *** Joins: akaWolf (~akaWolf@akawolf.org)
[23:55:56] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Quit: Teleporting ...)
[23:56:17] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[23:56:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:57:37] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 245 seconds)
[23:57:38] <grym> NeilRG: connotations are muzzy at the moment
[23:58:33] <grym> (i never know if its side-eye and therefore throwing shade, or ...)
[23:58:45] <NeilRG> grym, GitHub should one day label them
[23:58:49] <NeilRG> hahhah throwing shade
[23:58:53] <NeilRG> lol
[23:59:02] *** Joins: desophos (~desophos@2601:249:1680:a570:489c:f364:abf0:5de7)
[23:59:12] <SnoopJ> not seen that reading before but I could see it
[23:59:19] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[23:59:57] <SnoopJ> reactions don't seem like a very helpful addition to GitHub, but it's an easy enough feature box to tick :/
