[00:09:07] *** Quits: LostKobrakai_ (~LostKobra@2001:16b8:2d73:f400:7106:dfd:6316:621e) (Quit: LostKobrakai_)
[00:19:30] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2d73:f400:7106:dfd:6316:621e)
[00:19:40] *** LostKobrakai_ is now known as LostKobrakai[awa
[00:21:03] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2d73:f400:7106:dfd:6316:621e) (Client Quit)
[00:24:17] *** Joins: wolan (~wolan@2a02:a317:e43a:8580:5972:6b70:9f8a:fd36)
[01:02:17] *** Quits: wolan (~wolan@2a02:a317:e43a:8580:5972:6b70:9f8a:fd36) (Quit: Client closed)
[01:03:22] *** Joins: wolan (~wolan@2a02:a317:e43a:8580:5972:6b70:9f8a:fd36)
[01:22:32] *** Quits: mahmutov (~mahmutov@176.30.247.79) (Ping timeout: 245 seconds)
[01:25:39] *** Joins: oddmunds (~oddmunds@81.0.168.166)
[01:48:16] *** Quits: oddmunds (~oddmunds@81.0.168.166) (Ping timeout: 268 seconds)
[01:50:52] *** Quits: wolan (~wolan@2a02:a317:e43a:8580:5972:6b70:9f8a:fd36) (Quit: Client closed)
[01:53:58] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 250 seconds)
[01:56:17] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 268 seconds)
[02:05:02] *** Joins: arpunk (~arpunk@user/arpunk)
[02:09:19] *** Joins: ur5us_ (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3)
[02:09:54] *** Joins: pi1 (~pi@177.223.162.41)
[02:20:22] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 252 seconds)
[02:22:05] *** Joins: oddmunds (~oddmunds@81.0.168.166)
[02:27:24] <mekhami> can you/should you test registries? i.e. i have a registry that i augment with a few functions for looking up processes by a domain based id
[02:27:29] <mekhami> can i test that? 
[02:33:23] *** Joins: natrys (~natrys@user/natrys)
[03:34:57] *** Quits: damjan (~damjan@user/damjan) (Quit: bye)
[03:36:03] *** Joins: damjan (~damjan@user/damjan)
[03:44:25] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[04:16:37] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[04:37:14] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 268 seconds)
[04:41:06] *** Quits: pi1 (~pi@177.223.162.41) (Read error: Connection reset by peer)
[05:05:15] *** Joins: hoppity (~user@user/hoppity)
[05:06:28] <hoppity>  Guys, how can I have a let's say python program talk to a phoenix app for example. I can imagine a json API for example but is there a better way? 
[05:10:18] *** Quits: ur5us_ (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3) (Ping timeout: 260 seconds)
[05:32:43] <Ankhers> What are my options for getting a list of failed tests? I know I could write an ExUnit formatter, but that seems like overkill.
[05:52:34] *** Joins: ur5us_ (~ur5us@2406:e002:6bd3:6701:ed2b:d166:a5fd:8ce5)
[06:13:08] *** Joins: pi1 (~pi@177.223.162.41)
[06:15:00] *** Quits: arpunk (~arpunk@user/arpunk) (Remote host closed the connection)
[06:21:19] *** Quits: oddmunds (~oddmunds@81.0.168.166) (Ping timeout: 252 seconds)
[06:24:48] *** Quits: MKGaming_ (~MKGaming_@2601:647:5a00:35:c9ec:fa1c:8f58:ca81) (Read error: Connection reset by peer)
[06:37:28] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[07:04:38] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 260 seconds)
[07:07:50] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[07:10:46] *** Quits: gitgood (~gitgood@85.210.186.158) (Ping timeout: 252 seconds)
[07:21:53] *** Joins: gitgood (~gitgood@85.210.186.158)
[07:37:02] *** Quits: gitgood (~gitgood@85.210.186.158) (Read error: Connection reset by peer)
[07:52:00] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[07:52:05] *** Joins: hendursa1 (~weechat@user/hendursaga)
[07:57:41] *** Joins: mahmutov (~mahmutov@5.176.48.39)
[08:07:10] *** Quits: mahmutov (~mahmutov@5.176.48.39) (Ping timeout: 260 seconds)
[08:28:24] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 276 seconds)
[09:06:48] *** Joins: ArctVaulMarsHMPJ (~pjetcetal@2.95.253.167)
[09:07:04] *** Quits: ArctVaulMarsHMPJ (~pjetcetal@2.95.253.167) (Read error: Connection reset by peer)
[09:08:34] *** Quits: mekhami (~ldv@2605:a601:aaf2:ef00:383f:a991:12f0:4f28) (Quit: WeeChat 1.9.1)
[09:24:38] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 260 seconds)
[09:36:34] <Nicd> hoppity: depends on the application, a Port is one possibility (talking over stdin/stdout)
[09:57:11] <serafeim> hello friends
[10:02:32] <Nicd> morning
[10:03:18] <serafeim> how's it going
[10:03:34] <Nicd> last day before vacation
[10:03:37] <serafeim> ooh
[10:05:09] <serafeim> so you worked during summer and take vacation now ?
[10:07:27] <Nicd> I took 3 weeks vacation during summer
[10:07:39] <Nicd> 1 week now, 1 week later in winter. roughly.
[10:07:44] <serafeim> ah nice
[10:07:54] <Nicd> it all goes according to my wife's schedule because she can't choose her vacations while I can
[10:08:54] <serafeim> vacation is diffucilt when there are multiple people involved... this year my vacation involved staying on home with the kids while school was closed
[10:20:34] *** Quits: ur5us_ (~ur5us@2406:e002:6bd3:6701:ed2b:d166:a5fd:8ce5) (Ping timeout: 252 seconds)
[10:21:12] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[10:22:52] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[10:24:18] <Nicd> also wife hasn't had her 2nd shot yet so this will be a movie / gaming vacation primarily :D
[10:25:09] <Nicd> hopefully I could finally finish my codestats LiveView renewal
[10:25:19] <serafeim> well the weather ain't that good this time anyway... we still get many tourists here though
[10:26:03] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[10:26:29] <serafeim> Nicd: cool. it'd be nice to remove the js stuff
[10:26:58] <Nicd> charts will still be JS
[10:27:23] <Nicd> but all the non-chart.js will be rendered with LV
[10:28:25] <serafeim> great
[10:29:16] *** Joins: chgr (~ek@nat-91-137-16-23.net.encoline.de)
[10:30:25] *** Joins: mexen (uid495612@user/mexen)
[10:32:57] <Nicd> the setup proved to be somewhat involved: https://gitlab.com/code-stats/code-stats/-/tree/wip/live-view/lib/code_stats_web/profile_live (this is very WIP)
[10:36:22] <serafeim> that's a lot of components!
[10:56:48] *** Quits: Perry (~perry@coffee-break.at) (Quit: ZNC - http://znc.in)
[10:57:42] *** Joins: Perry (~perry@coffee-break.at)
[11:04:04] *** Quits: chgr (~ek@nat-91-137-16-23.net.encoline.de) (Quit: WeeChat 3.2)
[11:09:22] <dch> hoppity: yes there are a number of options there. https://github.com/Pyrlang/Pyrlang https://www.lysator.liu.se/~tab/erlang/py_interface/ (old) http://erlport.org/docs/python.html or just talk to python via port driver yourself (which is what erlport does but you can make it as sophisticated as you like
[11:13:30] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 276 seconds)
[11:14:03] <dch> hoppity: https://github.com/emqx/erlport is almost certainly the "best" fork of the bunch, looks pretty well maintained
[11:19:06] *** Joins: LostKobrakai_ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de)
[11:26:52] <OliverMT> josevalim: do you have any examples of typed elixir being suggested? In the style of typescript, like .ext that compiles to .ex
[11:27:14] <OliverMT> A human friendly modern dialyzer so to say
[11:27:25] <OliverMT> Someone has to have suggested it at some
[11:27:27] <OliverMT> Time
[11:27:39] <OliverMT> But I found nothing on forums or the GJ
[11:27:40] <OliverMT> GH
[11:29:34] <josevalim> OliverMT: i mean, people can suggest, but the reality is that it is tons of work
[11:29:55] <josevalim> so unless someone is also planning to invest tons of work, money, and time, it is likely a suggestion won't be helpful :)
[11:30:07] <dch> hoppity: but for talking specifically to a phoenix app, I would probably have my phoenix controller subscribe to a PubSub topic, and then have the python<->elixir bridge shovel messages into the PubSub channel 
[11:30:24] <josevalim> OliverMT: there are projects though exploring this, such as Gradualizer
[11:30:34] <josevalim> and research being published, etc
[11:30:53] <josevalim> but yeah, it just takes a while
[11:30:57] <josevalim> OliverMT: does it make sense?
[11:31:21] <dch> hoppity: that gives you some nice decoupling. If you need to, you can put a websocket bridge in the middle https://github.com/NFIBrokerage/slipstream if things like erlport don't meet your needs
[11:31:42] <dch> hoppity: but it would be worth you explaining your use case a bit more, incl why REST isn't sufficient.
[11:33:25] <OliverMT> josevalim: yeah I was just interested in the suggestions to see if there was an interesting discussion around it
[11:33:30] <OliverMT> pros and cons
[11:33:45] <OliverMT> anything regarding better typing in elixir is gonna be tons of work, that is very clear :D
[11:34:10] <josevalim> i don't think anything centralized, unfortunately, because there has been different efforts
[11:34:22] <OliverMT> what do you think as the author?
[11:34:40] <OliverMT> my gut feeling is that something like the typescript approach (with proper funding) is the best we can get without a whole new language
[11:34:57] <OliverMT> and there is work ongoing to move dialyzer closer to the reach of mere mortals I understood
[11:35:11] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:35:16] <josevalim> i think a dialyzer with good error messages, it was fast, and ran all the time would already be a massive improvement, even without going to gradual types
[11:35:25] *** Joins: Sgeo (~Sgeo@user/sgeo)
[11:35:49] <josevalim> Elixir code is often assertive in nature, so there is a lot of typing information in our program that we can leverage
[11:36:36] <josevalim> (structs being an awkward exception because when as you match on structs everywhere, they don't carry their type information - as they have no type information)
[11:36:38] <OliverMT> do you think a ground up dialyzer in elixir?
[11:36:51] <OliverMT> or incremental improvement on the existing one
[11:37:02] <josevalim> i think a ground up would be necessary if that's the goal
[11:37:20] <OliverMT> but just to humour me
[11:37:24] <josevalim> the closest you can do type checking to the original source, the better, otherwise constructs get lost
[11:37:29] <OliverMT> what do you mean by that, just that a @spec is validated?
[11:37:48] <OliverMT> I havent really used dialyzer because it is like having a rabid monkey on your shoulder
[11:37:59] <josevalim> the hard thing is that I don't know if a always running, fast, with good error messages dialyzer is even possible
[11:38:00] *** Quits: LostKobrakai_ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:38:05] <OliverMT> and I couldnt defend spending a week making ten lines of code work because I dont understsand the error messages
[11:38:25] <OliverMT> what you normally want from types is like the stuff discussed in the Brex topic
[11:38:37] <OliverMT> and that you get nicely in typescript
[11:38:37] <josevalim> i think Dave Thomas summarized Dialyzer best. it is like a buddist monk, you know it is right, but the path to enlighment may be a long one
[11:38:38] *** Joins: LostKobrakai_ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de)
[11:38:38] <josevalim> :)
[11:38:54] <OliverMT> change a field that is used pervasive through your app in a class? red squiggles everywhere that you can clean up
[11:39:05] <serafeim> i'm getting this error:  (UndefinedFunctionError) function DateTime.shift_zone!/2 is undefined or private... any idea ?
[11:39:05] <OliverMT> would an actually working dialyzer fix that use case?
[11:39:30] <josevalim> serafeim: the function was added on v1.10, what is your elixir version?
[11:39:40] <josevalim> OliverMT: well, we actually already do some field tracking
[11:39:57] <josevalim> if you rename a struct or remove a struct field, you get warnings
[11:39:58] <OliverMT> on structs?
[11:40:00] <OliverMT> yeah
[11:40:00] <josevalim> or fail to compile
[11:40:04] <josevalim> but not on its types
[11:40:10] <OliverMT> does that carry over through the app?
[11:40:14] <josevalim> yes
[11:40:20] <josevalim> if i were to make a plan, here is what I would try
[11:40:21] <serafeim> ah i'm running on elixir 1.9 !
[11:40:25] <serafeim> thanks
[11:40:27] <OliverMT> if you pass a struct to a function and the function just has def foo(some_struct) do some_struct.bar end
[11:40:34] <OliverMT> if you remove the bar someplace else in the app
[11:40:36] <OliverMT> does that fail now?
[11:40:44] <OliverMT> if so that has flown under my radar :D
[11:40:46] <josevalim> OliverMT: no, but if you do %Foo{} = some_struct it will
[11:40:53] <OliverMT> yeah ok that makes senes
[11:40:54] <OliverMT> sense
[11:41:02] <josevalim> better type inference would help carry that a bit further
[11:41:17] <OliverMT> yeah you would look at call site? to see what is passed in as some_struct you mean?
[11:41:24] <OliverMT> in a theoretical optimization
[11:41:38] <josevalim> OliverMT: yeah, we don't look at the call site right now, but it can be improved to
[11:41:42] <josevalim> i have to go, but if i had infinite time, wisdom, and resources, i would try something like:
[11:41:55] <OliverMT> a struct technically has typing information in the @type t
[11:42:05] <OliverMT> so couldnt we also do type checking in the same way?
[11:42:14] <OliverMT> but we dont know the type of what we put in there maybe
[11:42:32] <OliverMT> you could at least verify literals like strings and ints
[11:42:54] <josevalim> 1. have a fast, always running dialyzer with good error messages (if at all possible)
[11:42:54] <josevalim> 2. add types to structs
[11:42:54] <josevalim> 3. introduce a new type annotation, separate to @spec/@type that behaves closer to gradual types (as in typescript/gradualizer)
[11:43:26] <josevalim> OliverMT: the answer to "could you?" is most likely yes, the question is the effort and the rate of false positives and false negatives
[11:43:39] <OliverMT> I guess the whole idea of elixir and bindings is a bit orthogonal as well
[11:43:44] <josevalim> gotta go :) still catching up with my inbox
[11:43:47] <OliverMT> in a typescript you can only rebind on a let
[11:43:55] <OliverMT> in elixir we dont rebind, we just overwrite the name symbol
[11:44:08] <OliverMT> ok thx for the discussion :) 
[11:44:14] <OliverMT> was just very curious what had been discussed before
[11:46:04] <Nicd> 10:08:37 <josevalim> i think Dave Thomas summarized Dialyzer best. it is like a buddist monk, you know it is right, but the path to enlighment may be a long one
[11:46:04] <Nicd> :D
[11:46:11] <Nicd> I'm going to use this
[11:46:32] <Nicd> (though I have one Dialyzer warning in my codebase that is not right but it's due to a bug with with)
[11:59:18] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:00:20] <dch> gen_rmq has a lager dependency, which can (finally!) be dropped when using OTP23+ *and* latest elixir, I think
[12:00:36] <dch> what's the best way to include that compile-time requirement into the library?
[12:03:20] <dch> I have found System.{build_info,otp_release,version} which look pretty good if they go back as far as OTP22
[12:05:45] <dch> the latter two give me the runtime info \o/ and is supported in elixir 1.9. awesome.
[12:12:21] *** Joins: ur5us_ (~ur5us@2406:e002:6bd3:6701:ed2b:d166:a5fd:8ce5)
[12:16:27] *** Joins: glassofethanol (~ethanmorg@82.16.192.251)
[12:22:19] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[12:25:23] *** Quits: notzmv (~zmv@user/notzmv) (Read error: Connection reset by peer)
[12:27:01] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[12:31:25] *** Joins: x28girl (~x28girl@181.46.32.25)
[12:35:55] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:39:18] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:54:10] *** Joins: floriann (~Thunderbi@2a02:8106:2e:1300:ea6a:64ff:fe67:369e)
[13:01:27] *** Quits: ur5us_ (~ur5us@2406:e002:6bd3:6701:ed2b:d166:a5fd:8ce5) (Ping timeout: 268 seconds)
[13:25:59] *** Quits: floriann (~Thunderbi@2a02:8106:2e:1300:ea6a:64ff:fe67:369e) (Remote host closed the connection)
[13:29:18] *** Joins: LostKobrakai__ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de)
[13:30:52] *** Quits: LostKobrakai_ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[14:03:41] *** Quits: LostKobrakai__ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:04:19] *** Joins: LostKobrakai_ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de)
[14:07:36] *** Joins: oddmunds (~oddmunds@81.0.168.166)
[14:12:57] *** Joins: wonko (~wjc@62.115.229.50)
[14:13:10] *** Quits: oddmunds (~oddmunds@81.0.168.166) (Ping timeout: 252 seconds)
[14:21:18] *** Joins: natrys (~natrys@user/natrys)
[14:24:09] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[14:29:14] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[14:32:48] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Quit: WeeChat 2.8)
[14:36:19] *** Joins: oddmunds (~oddmunds@81.0.168.166)
[14:41:36] *** Joins: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net)
[14:49:33] *** Quits: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net) (Remote host closed the connection)
[14:50:10] *** Joins: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net)
[14:55:07] *** Quits: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[15:06:49] *** Quits: pi1 (~pi@177.223.162.41) (Ping timeout: 265 seconds)
[15:10:13] *** Joins: LostKobrakai__ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de)
[15:14:10] *** Quits: LostKobrakai_ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[15:20:00] *** Joins: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net)
[15:20:28] *** Quits: LostKobrakai__ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:21:06] *** Joins: LostKobrakai_ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de)
[15:22:39] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[15:23:09] *** Joins: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651)
[15:25:21] *** Quits: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[15:26:29] *** Joins: LostKobrakai__ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de)
[15:27:36] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[15:30:17] *** Quits: LostKobrakai_ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[15:32:01] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[15:42:36] *** LostKobrakai__ is now known as LostKobrakai[awa
[15:42:36] *** Quits: LostKobrakai[awa (~LostKobra@pd956a2fd.dip0.t-ipconnect.de) (Quit: LostKobrakai[awa)
[15:50:59] *** Joins: LostKobrakai_ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de)
[15:55:28] *** Quits: Rubyn (~Rubyn@user/rubyn) (Quit: WeeChat 3.2)
[15:56:19] *** Joins: Rubyn (~Rubyn@user/rubyn)
[16:01:39] <hauleth> josevalim: what do you think about making `mix test --partitions 1` just ignore the value of MIX_TEST_PARTITION (or just allowing it to be empty)?
[16:02:11] <hauleth> I am working on set of helper modules for GitLab CI, and that would make implementation a little bit easier
[16:27:43] *** Quits: LostKobrakai_ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:28:21] *** Joins: LostKobrakai_ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de)
[17:00:54] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:08:04] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[17:09:29] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:12:52] <josevalim> hauleth: sounds sane to me. a PR is welcome
[17:12:53] *** Joins: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net)
[17:14:17] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[17:17:07] *** Quits: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[17:25:12] *** Quits: Rubyn (~Rubyn@user/rubyn) (Quit: WeeChat 3.2.1)
[17:28:45] *** Joins: Rubyn (~Rubyn@user/rubyn)
[17:38:07] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[17:38:57] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 276 seconds)
[17:39:32] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[18:02:25] *** Joins: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net)
[18:10:19] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[18:10:37] *** Joins: phaleth (~phaleth@user/phaleth)
[18:14:31] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:26:16] *** Quits: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net) (Remote host closed the connection)
[18:28:46] *** Quits: oddmunds (~oddmunds@81.0.168.166) (Ping timeout: 260 seconds)
[18:33:40] *** Joins: oddmunds (~oddmunds@81.0.168.166)
[19:01:46] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[19:07:44] *** Joins: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net)
[19:12:22] *** Quits: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[19:13:30] <hauleth> josevalim: only question left is what should happen with `--partitions 0` or `--partitions -1`. My current PR will just treat them as such flag was not set at all
[19:13:58] <josevalim> i would raise for partitions < 1, yeah
[19:15:01] *** Joins: jess (~jess@libera/staff/jess)
[19:23:59] *** Joins: odoood (~odoood@2601:c8:c003:a550::1)
[19:37:21] *** Quits: oddmunds (~oddmunds@81.0.168.166) (Ping timeout: 268 seconds)
[19:41:30] *** Joins: quasisyntaxed (~user@2804:1b2:181:e2b8:637d:d7b1:739d:f336)
[19:49:42] *** Joins: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net)
[19:54:39] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[19:58:37] *** Joins: yauhsien_ (~yauhsien@118-167-49-246.dynamic-ip.hinet.net)
[19:58:37] *** Quits: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[20:03:20] *** Joins: oddmunds (~oddmunds@81.0.168.166)
[20:04:37] *** Quits: yauhsien_ (~yauhsien@118-167-49-246.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[20:07:31] *** Quits: oddmunds (~oddmunds@81.0.168.166) (Ping timeout: 252 seconds)
[20:08:37] *** Joins: oddmunds (~oddmunds@81.0.168.166)
[20:09:06] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 276 seconds)
[20:17:02] *** Joins: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net)
[20:27:05] *** Quits: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net) (Remote host closed the connection)
[20:27:40] *** Joins: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net)
[20:35:56] *** Quits: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[20:37:01] *** Joins: SlicerDicer66 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net)
[20:37:03] *** Joins: feld1 (~feld@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net)
[20:38:43] *** Quits: feld (~feld@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net) (Ping timeout: 252 seconds)
[20:38:43] *** feld1 is now known as feld
[20:39:20] *** Quits: SlicerDicer6 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net) (Ping timeout: 260 seconds)
[20:39:20] *** SlicerDicer66 is now known as SlicerDicer6
[20:41:51] *** Joins: gitgood (~gitgood@85.210.186.158)
[20:52:36] *** Quits: glassofethanol (~ethanmorg@82.16.192.251) (Quit: leaving)
[21:40:09] *** Joins: LostKobrakai__ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de)
[21:42:11] *** Quits: LostKobrakai_ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[21:42:28] *** Quits: LostKobrakai__ (~LostKobra@pd956a2fd.dip0.t-ipconnect.de) (Client Quit)
[21:43:35] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[21:55:55] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[22:33:34] *** Quits: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651) (Quit: WeeChat 3.2.1)
[22:41:25] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 252 seconds)
[23:02:12] *** Quits: wess (~wess@188.166.99.85) (Ping timeout: 245 seconds)
[23:02:55] *** Joins: wess (~wess@188.166.99.85)
[23:18:14] *** Joins: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net)
[23:26:46] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[23:32:34] *** Quits: yauhsien (~yauhsien@118-167-49-246.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[23:55:28] *** Parts: drincruz (drincruz@2607:5300:203:3f52::19) (WeeChat 2.8)
[23:55:36] *** Joins: drincruz (drincruz@2607:5300:203:3f52::19)
