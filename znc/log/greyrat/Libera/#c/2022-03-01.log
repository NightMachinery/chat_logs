[00:00:03] <ChoHag> This is the problem. Precious little listening.
[00:00:08] <caze> That code looks familiar.
[00:03:02] <goodfella> caze: there is no malloc, no realloc it was my first solution before i did the dynamic allocation one
[00:03:06] <caze> goodfella: BTW, I wasn't telling you how your code works. I was describing an algorithm to you.
[00:03:17] <caze> goodfella: It is based off of my solution to 1-17.
[00:03:37] <caze> goodfella: But it follows the wrong strategy.
[00:03:45] <goodfella> im all ears
[00:03:52] <caze> I already told you.
[00:03:57] *** Quits: rpath (~rpath@gateway/tor-sasl/rpath) (Quit: Leaving)
[00:04:13] <caze> Reread everything I wrote starting from <caze> goodfella: What if I told you that the only characters that should ever be stored in your buffer are ' ' and '\t'?
[00:04:39] <caze> Ask if anything is unclear.
[00:04:57] <goodfella> i would love that caze ... that's already seems like a clean solution
[00:05:05] <caze> Great, then do it.
[00:07:07] <ChoHag> goodfella: Somebody was trying to help you yesterday (?) morning with, I think, this exactly same problem until you called him an asshole for some spurious reason. I too was about to step in and give you a hand since I had nothing going on, but you'd called some guy an asshole so I didn't.
[00:07:15] <ChoHag> You could have got this problem solved yesterday.
[00:07:57] <bnchs> ChoHag: can you tell me what happened
[00:08:04] * ChoHag shrugs
[00:08:07] <ChoHag> There are logs.
[00:08:18] <bnchs> yes but at what time
[00:08:33] <ChoHag> AM-ish GMT. It was quiet.
[00:08:47] <bnchs> i wanted to get a both-sided summary on what happened
[00:09:04] <sham1> Why
[00:09:16] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 250 seconds)
[00:09:34] <bnchs> because i wanna understand what happened
[00:09:56] <ChoHag> sham1: Because I called his reason spurious and a good developer fact-checks?
[00:10:19] <sham1> ChoHag: I didn't ask you, but sure
[00:10:20] <ChoHag> "God damn it there's a fact I don't know!"
[00:10:25] <caze> These are not facts that need to exist or to be checked.
[00:11:10] <ChoHag> I don't believe you.
[00:11:48] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-751f-c2d3-24b7-e2fb.inf6.spectrum.com)
[00:14:02] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-751f-c2d3-24b7-e2fb.inf6.spectrum.com) (Ping timeout: 240 seconds)
[00:14:09] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:17:00] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[00:18:31] *** Joins: constxo (~brad@hlfxns017vw-142-68-82-22.dhcp-dynamic.fibreop.ns.bellaliant.net)
[00:20:07] <twkm> bnchs: the isp isn't the only possibility.
[00:20:32] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fb4d-184.dhcp.inet.fi) (Ping timeout: 250 seconds)
[00:21:16] *** Quits: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d) (Read error: Connection reset by peer)
[00:22:23] *** Joins: hashfunc32 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[00:22:55] *** Quits: magla (~gelignite@d5362da6.access.ecotel.net) (Quit: Stay safe!)
[00:23:00] *** Quits: dld (~davidlowr@2601:197:600:1210:88cb:4d48:189:f8f8) (Ping timeout: 240 seconds)
[00:24:01] *** Joins: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d)
[00:26:58] *** Joins: drbeco (~beco@2804:351c:dd02:6800:c024:382c:90ec:dcb6)
[00:26:59] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[00:27:15] *** Quits: constxo (~brad@hlfxns017vw-142-68-82-22.dhcp-dynamic.fibreop.ns.bellaliant.net) (Ping timeout: 256 seconds)
[00:27:15] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[00:27:18] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[00:28:18] *** Joins: dld (~davidlowr@73.61.9.0)
[00:28:32] *** Quits: joev (~joev@user/joev) (Remote host closed the connection)
[00:28:56] *** Joins: joev (~joev@user/joev)
[00:29:48] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[00:30:55] <ioxzev1z> bnchs, grep "asshole" in your logs
[00:31:00] <goodfella> caze: https://bpa.st/WXZQ
[00:31:19] *** Quits: fapple (~user@92.60.40.199) (Quit: Lost terminal)
[00:31:21] <ioxzev1z> Might find the convo, assuming he used the literal word as above
[00:31:40] <cuppajoe> How can I get some syntax highlighting for disassembled code from objdump? When I redirect it to a *.s file, its doesn't quite work.
[00:32:08] <cuppajoe> Using vim by the way
[00:33:00] <ChoHag> goodfella: Can you explain what you think that does?
[00:33:14] <caze> goodfella: https://ideone.com/wSWZvI
[00:33:24] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:33:24] <caze> Didn't have time to debug it yet, but I gtg.
[00:33:47] *** Quits: dld (~davidlowr@73.61.9.0) (Ping timeout: 256 seconds)
[00:33:50] <goodfella> caze: ok cya
[00:34:07] *** Quits: drbeco (~beco@2804:351c:dd02:6800:c024:382c:90ec:dcb6) (Changing host)
[00:34:07] *** Joins: drbeco (~beco@user/beco)
[00:34:14] <ChoHag> It obviously doesn't do what you suppose, or at least doesn't solve the exercise.
[00:34:31] *** Quits: raym (~raym@user/raym) (Read error: Connection reset by peer)
[00:34:38] *** Joins: dld (~davidlowr@2601:197:600:1210:7c23:245c:3a8b:a0db)
[00:34:51] <caze> I guess there's no reason to chain those ifs.
[00:35:33] *** Quits: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d) (Quit: Reality.is.a.lie)
[00:36:02] <caze> MIght have an off by one error.
[00:36:14] <caze> Anyway I gtg.
[00:36:15] <ChoHag> So there's a gap in knowledge somewhere.
[00:37:33] *** Joins: sokan (~sokan@2a02:587:9e19:4700:227:eff:fe16:865d)
[00:38:19] <bnchs> whats the exercise
[00:38:54] <ChoHag> Print non-blank lines up to their last non-blank character.
[00:39:32] <bnchs> is blank [space]
[00:39:36] <ChoHag> Or something to that effect. Keep track of the tail of a buffered stream.
[00:39:49] *** Joins: strajder (~strajder@user/strajder)
[00:40:02] <ChoHag> It's from K&R.
[00:40:48] *** Joins: raym (~raym@user/raym)
[00:41:09] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[00:42:15] *** Joins: joev (~joev@user/joev)
[00:42:34] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 260 seconds)
[00:44:13] *** Quits: davros (~davros@host86-185-61-1.range86-185.btcentralplus.com) (Remote host closed the connection)
[00:44:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f)
[00:47:10] *** Joins: Darkcoal (~user@user/Darkcoal)
[00:47:40] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Ping timeout: 272 seconds)
[00:48:27] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[00:48:46] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:49:08] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[00:49:19] *** Quits: rgrinberg (~textual@2806:101e:7:8d89:ad31:8328:5a08:79cc) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:49:21] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[00:49:32] *** Joins: noteness (~noteness@user/noteness)
[00:54:15] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[00:54:17] *** Quits: goodfella (~archer@user/tessio) (Quit: WeeChat 3.4)
[00:56:22] *** Joins: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2)
[00:59:43] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[00:59:53] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:01:07] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:04:17] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[01:04:35] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[01:06:33] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[01:10:00] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[01:11:25] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 250 seconds)
[01:11:25] *** Quits: Alhazred (~Alhazred@86.106.74.40) (Ping timeout: 250 seconds)
[01:11:40] *** Joins: constxo (~brad@142.134.79.191)
[01:11:41] *** lukedashjr is now known as luke-jr
[01:15:25] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[01:16:13] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:16:17] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 256 seconds)
[01:16:49] *** Joins: seninha (~chatzilla@user/seninha)
[01:17:04] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[01:18:30] *** Quits: drbeco (~beco@user/beco) (Quit: Leaving)
[01:18:39] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[01:19:38] *** Joins: constxd (~brad@142.134.79.191)
[01:21:10] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[01:24:35] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[01:25:37] *** Quits: LeoNerd (~leo@2a03:b0c0:1:d0::feb:5001) (Quit: Reboot)
[01:27:01] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 250 seconds)
[01:27:27] *** Joins: gproto23_ (~gproto23@user/gproto23)
[01:28:37] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[01:28:52] *** Joins: LeoNerd (~leo@jaffa.dictatorshipcake.co.uk)
[01:29:29] *** Joins: andro (~stupidfox@user/stupidfox)
[01:29:36] *** Quits: gproto23_ (~gproto23@user/gproto23) (Remote host closed the connection)
[01:30:52] *** Quits: ekathva (~ekathva@n2gvphuai7dnh8dcm-1.v6.elisa-mobile.fi) (Remote host closed the connection)
[01:31:47] *** Joins: crashrep (~crashrep@user/crashrep)
[01:32:30] *** Parts: CygniX_ (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Konversation terminated!)
[01:34:17] *** Joins: Zenton (~user@user/zenton)
[01:35:20] *** Quits: carlavilla (~carlavill@2a0c:5a84:320d:6900:21f:16ff:fe0f:275a) (Remote host closed the connection)
[01:37:53] *** Quits: cart_ (~cart@2a01:4c8:470:8de:2d29:b1e0:8217:3fe4) (Quit: Konversation terminated!)
[01:38:51] *** Joins: tdcly^ (~tdcly@12.163.216.98)
[01:41:30] *** Quits: alch (~alch@151.36.109.46) (Ping timeout: 272 seconds)
[01:41:59] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 250 seconds)
[01:43:12] *** Joins: alch (~alch@151.34.114.11)
[01:45:11] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[01:45:18] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:46:04] <joomla9> So is it safe to say `structs, unions and enums` create new data types, whereas int, char, double and such are data types themsleves?
[01:46:37] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:49:03] <Inline> oh man
[01:49:15] <Inline> when you meet dinosaur code......
[01:49:18] <Inline> lol
[01:49:45] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: leaving)
[01:50:22] *** Joins: fapple (~user@92.60.40.199)
[01:53:00] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[01:53:01] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:218a:98a9:16e0:223)
[01:55:09] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:56:08] *** Quits: Akuli (~Akuli@82-203-165-162.bb.dnainternet.fi) (Quit: Akuli)
[02:00:16] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:00:59] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[02:02:51] *** Joins: kuber (~kuber@75-172-6-223.tukw.qwest.net)
[02:04:36] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[02:04:52] *** Joins: ian| (~kvirc@cpe-104-228-101-152.stny.res.rr.com)
[02:05:38] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[02:05:56] <ian|> hello. i'm working with functions cast to void*. i swear this was working this morning but now it doesn't compile. i must have changed something subtle. test.c: https://paste.centos.org/view/f28a379b
[02:06:50] *** Joins: wroathe (~wroathe@50-205-197-50-static.hfc.comcastbusiness.net)
[02:06:50] *** Quits: wroathe (~wroathe@50-205-197-50-static.hfc.comcastbusiness.net) (Changing host)
[02:06:50] *** Joins: wroathe (~wroathe@user/wroathe)
[02:07:11] <ian|> the return type of the function is 'int', and i mistyped 'char' for variable that holds the return type, but this isn't the issue.
[02:07:14] <nitrix> ian|, What you're doing is unsafe. Object and function pointers cannot cross over.
[02:07:51] <nitrix> ian|, You want something like `void (*)(void)` as your temporary type and you'd convert back to something with the right prototype before calling it.
[02:07:56] <nitrix> Anything else is UB.
[02:08:57] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:09:33] <ian|> is void (*func)(void) = add; good?
[02:09:47] <ian|> and then casting it to the proper type before calling it
[02:10:43] <fizzie> It needs a cast also for the initialization.
[02:10:57] <fizzie> `void (*func)(void) = (void (*)(void)) add;`
[02:11:05] <fizzie> But other than that, yes, it's a thing that can be done.
[02:12:13] <nitrix> Are there function pointer conversions that don't need to be explicit? Maybe where the prototype part is omitted?
[02:12:56] <fizzie> Yeah, if the return types match, I think you're allowed an implicit assignment of (say) `int (*)(double, int)` to `int (*)()` or vice versa.
[02:13:07] <nitrix> ,cc int add(int a, int b); int (*func)() = add;
[02:13:08] <candide> nitrix: /usr/bin/ld:  in function 'main': /home/vm/11383/ undefined reference to 'add'
[02:13:18] <nitrix> ,cc int add(int a, int b) { return 0; } int (*func)() = add;
[02:13:20] <candide> nitrix: no output: func = 0x4029ae <add>
[02:13:28] <nitrix> ,cc int add(int a, int b) { return 0; } int (*func)(int a) = add;
[02:13:30] <candide> nitrix: [warning: initialization of 'int (*)(int)' from incompatible pointer type 'int (*)(int,  int)' [-Wincompatible-pointer-types]] no output: func = 0x4029ae <add>
[02:13:47] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:953a:f456:a95e:2f9f)
[02:13:51] <nitrix> So they're compatible without the prototype, and as long as the return type matches of course. Interesting.
[02:14:19] <fizzie> Hmm, I wonder if it warns about types changed by default argument promotions.
[02:14:36] <nitrix> I'm also sure I've seen a VM dispatch closure calls this way, instead of a having a count of arguments with a massive switch case.
[02:14:36] <fizzie> ,cc int conv(float f) { return f; } int (*func)() = conv;
[02:14:36] *** Quits: Zenton (~user@user/zenton) (Ping timeout: 240 seconds)
[02:14:36] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[02:14:38] <candide> fizzie: [warning: initialization of 'int (*)()' from incompatible pointer type 'int (*)(float)' [-Wincompatible-pointer-types]] no output: func = 0x4029ae <conv>
[02:14:42] <fizzie> Yeah, it does.
[02:15:01] <nitrix> Good :)
[02:15:34] <ian|> thanks fizzie
[02:15:35] *** Quits: ian| (~kvirc@cpe-104-228-101-152.stny.res.rr.com) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[02:18:51] <constxd> kings
[02:19:04] *** Quits: andro (~stupidfox@user/stupidfox) (Changing host)
[02:19:04] *** Joins: andro (~stupidfox@user/andro)
[02:20:12] *** Joins: Zenton (~user@user/zenton)
[02:20:46] *** Joins: cart_ (~cart@2a01:4c8:470:8de:bc93:81a7:2c1:1327)
[02:23:11] *** Joins: mkf9 (~wm@cloud9p.org)
[02:24:54] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[02:30:04] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[02:30:13] *** Joins: newpy (~newpy@2601:280:4381:1390:ddea:9d0f:28b3:6398)
[02:30:22] <newpy> I'm a little confused on the syntax for function pointers
[02:30:25] *** Joins: mags (~mags@097-091-082-103.res.spectrum.com)
[02:30:35] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:30:59] <newpy> if a function expects a function pointer, can I just pass the name of the function or do I need an & ?
[02:31:37] *** Quits: Guest3896 (~Guest@181.91.158.121) (Remote host closed the connection)
[02:32:25] <fizzie> You can just use a function designator (a name of a function).
[02:32:53] <fizzie> But you can also use a & if you wish.
[02:33:16] <fizzie> There's a similar deal for expressions with a function type as for expressions with an array type.
[02:33:35] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:34:12] *** Joins: pizdets (~pizdets@183.182.111.139)
[02:34:41] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[02:34:46] *** Quits: fapple (~user@92.60.40.199) (Quit: leaving)
[02:35:07] <fizzie> (Also explains the other cute thing people bring up every time, where you can put as many *s in a function call as you wish, since the same conversion just keeps happening.)
[02:35:18] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[02:35:20] *** Quits: pizdets_ (~pizdets@183.182.114.254) (Ping timeout: 272 seconds)
[02:35:34] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[02:35:36] <newpy> fizzie, so in the function declaration, what do I put?
[02:35:41] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:49ba:4576:8008:625c)
[02:35:45] <newpy> btw this is c99
[02:35:55] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 240 seconds)
[02:35:58] <newpy> f(void a()); ?
[02:36:17] *** Quits: kriss (~kriss@213.239.83.90) (Ping timeout: 240 seconds)
[02:36:44] <fizzie> Yes, or `void (*a)(int)`. I think more often the latter.
[02:37:08] <newpy> ah ok so you still use the pointer syntax in the decl, but you can just pass the function name when calling/using
[02:37:30] <newpy> eg. void f(void (*a)()) {a();}
[02:37:55] <newpy> and f(hello); to call f with function hello
[02:38:15] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[02:38:19] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc) (Quit: Quit)
[02:38:21] <fizzie> Yes. If you want to emphasize the fact it's a pointer, you *can* use & and *, and some people do. As in, `f(&hello);` and in the function, `(*a)();` to call.
[02:38:23] *** Joins: kriss (~kriss@213.239.83.90)
[02:38:36] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[02:39:08] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-751f-c2d3-24b7-e2fb.inf6.spectrum.com) (Ping timeout: 252 seconds)
[02:39:45] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[02:39:48] <fizzie> You're allowed to use either a function type or a pointer-to-function type in the parameter declaration, because there's *also* a similar thing as with arrays. Just like function parameters with array types get converted to pointers (to the array's element type), function pointers with a function type get converted to pointers to that kind of a function.
[02:40:14] <fizzie> So `int f(int arr[], int func());` is equivalent to `int f(int *arr, int (*func)());`.
[02:41:24] *** Quits: hashfunc32 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[02:41:49] *** Joins: cation21 (cation@user/cation)
[02:42:51] *** Quits: cation (cation@user/cation) (Ping timeout: 245 seconds)
[02:44:18] *** Joins: hiroshi_ (~freedom@151.37.124.250)
[02:45:14] *** cation21 is now known as cation
[02:46:01] *** Joins: virmire1 (~Virmire@p200300cfc7264301560b5512c6bf7e3e.dip0.t-ipconnect.de)
[02:46:05] *** Joins: freakazoid12345 (~matt@35.136.233.205)
[02:46:06] *** Quits: bnchs (~bnchs@160.177.47.225) (Ping timeout: 272 seconds)
[02:46:08] *** Quits: freakazoid12345 (~matt@35.136.233.205) (Read error: Connection reset by peer)
[02:46:44] *** Quits: virmire1 (~Virmire@p200300cfc7264301560b5512c6bf7e3e.dip0.t-ipconnect.de) (Client Quit)
[02:47:33] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[02:48:10] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:48:16] *** Quits: freakazoid343 (~matt@2603:9000:cf03:86c3:49ba:4576:8008:625c) (Ping timeout: 245 seconds)
[02:52:06] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:218a:98a9:16e0:223) (Quit: Leaving)
[02:52:36] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 240 seconds)
[02:53:09] *** Quits: acerbic (~acerbic@cs-xdata-50-86-53-91.cspire.com) (Read error: Connection reset by peer)
[02:53:53] *** Quits: d_low (~dlow@107-210-161-84.lightspeed.tukrga.sbcglobal.net) (Quit: Leaving)
[02:56:16] *** Joins: DumbDumberDumb01 (~igloo@bcdd1fb5.skybroadband.com)
[02:56:34] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[02:56:51] *** Quits: kuber (~kuber@75-172-6-223.tukw.qwest.net) (Quit: leaving)
[02:57:24] *** Joins: Enitin (~Enitin@82.102.22.84)
[02:58:34] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[02:58:45] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[02:58:54] *** Quits: DumbDumberDumb01 (~igloo@bcdd1fb5.skybroadband.com) (Quit: Igloo IRC: https://iglooirc.com)
[02:59:18] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 260 seconds)
[02:59:26] *** Joins: DumbDumberDumb01 (~igloo@bcdd1fb5.skybroadband.com)
[02:59:47] *** Joins: jancoow (~jancoow@user/jancoow)
[02:59:59] *** Quits: DumbDumberDumb01 (~igloo@bcdd1fb5.skybroadband.com) (Client Quit)
[03:03:35] *** Joins: DumbDumberDumb01 (~igloo@bcdd1fb5.skybroadband.com)
[03:03:44] *** Quits: DumbDumberDumb01 (~igloo@bcdd1fb5.skybroadband.com) (Client Quit)
[03:05:01] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[03:09:19] *** Quits: zlg (~zlg@user/zlg) (Ping timeout: 256 seconds)
[03:09:43] *** Quits: cosimone (~user@93-47-229-38.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[03:10:36] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[03:12:13] *** Joins: KevinX (~KevinX@user/KevinX)
[03:19:56] *** Quits: cart_ (~cart@2a01:4c8:470:8de:bc93:81a7:2c1:1327) (Ping timeout: 245 seconds)
[03:23:42] *** Joins: zlg (~zlg@user/zlg)
[03:23:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[03:24:47] *** Joins: Guest3876 (~Guest@host171.190-224-208.telecom.net.ar)
[03:29:44] *** Quits: hiroshi_ (~freedom@151.37.124.250) (Quit: hiroshi_)
[03:30:03] *** Quits: zopsi (~zopsi@104-237-136-227.ip.linodeusercontent.com) (Quit: Oops)
[03:30:06] *** Quits: neunon (~neunon@user/neunon) (Quit: ZNC 1.8.2 - https://znc.in)
[03:30:39] *** Joins: neunon (~neunon@user/neunon)
[03:31:12] *** Joins: zopsi (~zopsi@104-237-136-227.ip.linodeusercontent.com)
[03:36:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[03:37:53] *** Quits: constxd (~brad@142.134.79.191) (Ping timeout: 250 seconds)
[03:38:24] *** Quits: zachel (~zachel@user/zachel) (Read error: Connection reset by peer)
[03:39:21] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:40:59] *** Joins: Wulf (~Wulf@user/wulf)
[03:42:08] *** Joins: zachel (~zachel@user/zachel)
[03:42:22] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[03:42:42] *** Joins: O0c (~O0c@216.249.150.39)
[03:43:23] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[03:44:15] <O0c> I'm just beginning my C journey. I made a program that tells if a number is even or odd. What should I program next?
[03:47:02] <mrus> O0c: just do what everyone seems to do after their first C program - start developing your own operating system and tell everyone about it
[03:47:13] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:47:51] <O0c> mrus Is there an in between step?
[03:48:15] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:1:d69a:97d2:7a78) (Quit: Textual IRC Client: www.textualapp.com)
[03:48:35] *** Quits: tusko (~yeurt@user/tusko) (Ping timeout: 240 seconds)
[03:49:12] *** Joins: tusko (~yeurt@user/tusko)
[03:49:50] <O0c> I plan on making a program that counts spaces in a string of text.
[03:50:03] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[03:50:42] *** Joins: justAstache (~justache@user/justache)
[03:51:07] *** Joins: waveclaw_ (~quassel@ip98-162-237-241.ok.ok.cox.net)
[03:51:58] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Ping timeout: 272 seconds)
[03:54:16] *** Quits: O0c (~O0c@216.249.150.39) (Quit: Connection closed)
[03:54:39] <apotheon> O0c: You could try looking at the simplest Unix utilities and reimplement them.  That would even start you gradually on your way toward writing your own OS.
[03:54:56] <apotheon> (I never started writing my own OS, so I guess I'm not part of "everyone".)
[03:55:13] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 250 seconds)
[03:55:43] <apotheon> (I did, however, reimplement some Unix utilities.  Easy-ish starting utils would be echo and wc.)
[03:56:25] *** Joins: ferdna (~ferdna@user/ferdna)
[03:56:34] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[03:56:38] <apotheon> hmm, missed O0c by seconds, it seems
[03:56:41] *** Joins: jack_rabbit (~jack_rabb@hpnd-dhcp-173-46-246-97.bloombb.net)
[03:56:49] <apotheon> lamesauce
[03:57:06] <apotheon> I was going to mention writing a todo list tool, too.
[03:57:15] <apotheon> Oops: I just mentioned it.
[03:57:19] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[04:00:35] *** Joins: xiongxin (~Thunderbi@2409:8955:3088:422e:dbd0:5f53:ba3b:be2f)
[04:00:56] *** Quits: brad_mssw|mbp (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[04:01:29] *** Joins: pnbeast (~pnbeast@2601:140:4280:3800::1)
[04:02:52] *** Joins: Guest56366 (~rx@dynamic-046-114-162-004.46.114.pool.telefonica.de)
[04:03:09] *** Quits: Guest56366 (~rx@dynamic-046-114-162-004.46.114.pool.telefonica.de) (Remote host closed the connection)
[04:07:23] <twkm> wc can be tricky.
[04:07:24] *** Quits: andro (~stupidfox@user/andro) (Ping timeout: 240 seconds)
[04:08:15] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 256 seconds)
[04:08:50] <twkm> * getwchar arrives to save the day.
[04:12:58] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[04:13:24] *** Quits: ferdna (~ferdna@user/ferdna) (Ping timeout: 240 seconds)
[04:16:37] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[04:17:00] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[04:17:06] *** Joins: drbeco (~beco@user/beco)
[04:18:16] *** Joins: masoudd (~masoudd@user/masoudd)
[04:19:01] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[04:20:02] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:20:02] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:20:02] *** Joins: wroathe (~wroathe@user/wroathe)
[04:20:49] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[04:21:05] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[04:21:06] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:21:09] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[04:25:26] *** Joins: andro (~andro@user/andro)
[04:27:02] *** Joins: ferdna (~ferdna@user/ferdna)
[04:32:25] *** Quits: andro (~andro@user/andro) (Read error: Connection reset by peer)
[04:33:24] *** Quits: Jong (~Jong@2620:10d:c090:400::5:804e) (Ping timeout: 240 seconds)
[04:34:58] *** Joins: andro (~andro@user/andro)
[04:35:41] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:39:54] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[04:41:49] *** Joins: X-Scale` (~ARM@135.232.28.37.rev.vodafone.pt)
[04:44:36] *** Quits: X-Scale (~ARM@89.214.150.15) (Ping timeout: 240 seconds)
[04:44:36] *** X-Scale` is now known as X-Scale
[04:47:02] *** Quits: sweetsymph (uid509475@id-509475.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:47:21] <nitrix> This feels like asking someone else what you favorite color should be. You normally know why you're learning C, they're going about it all backwards.
[04:48:36] <nitrix> Something inspires you, you set goals, assess what you know and don't know, inform yourself on those area, learn the intricacies, practice, conquer, master.
[04:49:30] <nitrix> They were polite so I'll remain nice, but too many people are just trying to fit whatever mold they're told.
[04:51:07] <jack_rabbit> Hi nitrix
[04:51:30] <nitrix> Hello long ears.
[04:53:20] *** Quits: arinov (~arinov@77.67.133.10) (Ping timeout: 252 seconds)
[04:53:22] <jack_rabbit> I remember your nick. I met you a long time ago.
[04:54:14] <nitrix> IRC is full of the same old people. :)
[04:54:28] <jack_rabbit> I don't remember our interactions much.:)  But hello anyway from the past. IRC is funny that way.
[04:55:22] <jack_rabbit> I learned a lot in #c (or ##c I think at one point) and I remember you having something to do with that, so I'll also say thanks.
[04:56:12] *** Quits: xiongxin (~Thunderbi@2409:8955:3088:422e:dbd0:5f53:ba3b:be2f) (Ping timeout: 240 seconds)
[04:56:43] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Quit: Surfing the great wave off Kanagawa)
[04:59:09] <nitrix> I see, welcome back. It's a good chance to pay it forward, lots of beginners passing by.
[04:59:44] <jack_rabbit> I'll be here.:)  Still love IRC.
[04:59:45] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: bbl)
[05:02:47] *** Joins: Emet-Selch (~haise01@user/haise01)
[05:04:41] *** Joins: acerbic (~acerbic@cs-xdata-50-86-53-91.cspire.com)
[05:09:38] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[05:12:16] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Read error: Connection reset by peer)
[05:12:42] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[05:13:07] *** Joins: lainon (~lainon@2601:7c0:c500:4d20::ae8)
[05:13:33] <nitrix> 2014-05-15 05:32:41	nitrix	jack_rabbit: There, for a moment I thought my world was falling.
[05:13:34] <nitrix> 2014-05-15 05:33:17	jack_rabbit	nitrix, but my strong arms were there to catch you.
[05:13:44] <nitrix> Cute.
[05:14:30] <jack_rabbit> XD
[05:14:36] *** Quits: tdcly^ (~tdcly@12.163.216.98) (Remote host closed the connection)
[05:15:09] <jack_rabbit> Wow. Thanks for finding that. Holy shit.
[05:15:13] <jack_rabbit> I'm dying.
[05:15:25] <nitrix> Apparently we were into Haskell too.
[05:15:34] <jack_rabbit> Oh yeah, we definitely were.
[05:16:06] <jack_rabbit> Haskell was awesome in 2014
[05:16:17] <nitrix> 2013-08-27 23:53:27	 *	nitrix grab jack by his rabbit ears.
[05:16:18] <nitrix> 2013-08-27 23:54:05	jack_rabbit	nitrix, It seems every day someone's after my ears.
[05:16:39] <jack_rabbit> Still after my ears
[05:16:55] <jack_rabbit> almost 10 years
[05:17:09] <jack_rabbit> Sorry, I'm getting bleary-eyed.
[05:17:27] <jack_rabbit> Really weird to come back to IRC and find the same people.
[05:18:47] <jack_rabbit> nitrix, Cheers buddy. We made it.
[05:19:26] *** Parts: lainon (~lainon@2601:7c0:c500:4d20::ae8) ()
[05:19:27] <nitrix> CaZe, pragma-, twkm, sha1, beaky, fizzie are all still very active.
[05:19:59] <jack_rabbit> I remember all of them. They all contributed heavily to my C knowledge.
[05:20:16] <jack_rabbit> I almost hesitate to ask about Zhivago
[05:20:28] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:21:14] *** Quits: acerbic (~acerbic@cs-xdata-50-86-53-91.cspire.com) (Read error: Connection reset by peer)
[05:21:15] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[05:22:02] <jack_rabbit> Was there someone named kate too?
[05:22:11] <nitrix> Zhivago left. The nick expired and someone took the name on Freenode and poorly impersonated him. Later on, I think the real Zhivago secured the nick on Libera, based on the cloaks, but they haven't said anything yet.
[05:22:35] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 240 seconds)
[05:22:42] <jack_rabbit> Zhivago left before the exodus?
[05:22:55] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[05:23:03] *** Quits: andro (~andro@user/andro) (Ping timeout: 256 seconds)
[05:23:10] <nitrix> kate is still around but moved to ##chess pastures and a few sad news like vendu.
[05:23:16] <jack_rabbit> What about zed?
[05:23:40] *** Joins: arinov (~arinov@78.162.41.211)
[05:23:58] <jack_rabbit> What happened to vendu?
[05:24:06] <pony> beaky talks here? :o
[05:24:28] <nitrix> He's mostly on ##programming :P
[05:25:15] <nitrix> Talking about tea databases and vaguely trolling until he drops absurd math knowledge or proof-assistant stuff. Guy's brilliant.
[05:25:48] *** Joins: lainon (~lainon@2601:7c0:c500:4d20::ae8)
[05:26:06] <nitrix> vendu worked on his Zero-OS until he died of bad health from what I heard. The repo was taken down, not sure by whom or why.
[05:27:50] <jack_rabbit> That's really a shame
[05:28:02] <jack_rabbit> I don't recall vendu very much.
[05:28:15] <jack_rabbit> Maybe they came after I stopped paying attention.
[05:28:29] *** Joins: xiongxin (~Thunderbi@117.136.33.235)
[05:28:34] <nitrix> Oh right, they weren't on ##c much.
[05:28:45] <jack_rabbit> I lurked other places
[05:28:52] <jack_rabbit> #osdev?
[05:29:40] <pony> nitrix: yeah, I know :)
[05:29:43] *** Joins: Betal (~Betal@user/betal)
[05:29:49] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[05:30:14] <nitrix> mniip, edk are still around as Libera staff.
[05:30:17] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[05:30:36] *** Joins: bindu (~bindu@user/bindu)
[05:30:54] <jack_rabbit> Very happy to have them both as staff. edk I know deserved it. Happy to know mniip rose to that level.
[05:31:02] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[05:31:22] <jack_rabbit> This is a trip
[05:31:34] *** Joins: dsrt^ (~dsrt@12.163.216.98)
[05:32:14] <jack_rabbit> Nothing stays the same.
[05:32:45] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:32:48] <nitrix> C does, lol. For better or worse.
[05:32:55] <jack_rabbit> haha.
[05:33:00] *** Joins: Jong (~Jong@2620:10d:c090:400::5:f783)
[05:33:22] <jack_rabbit> We'll see though.
[05:33:30] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:33:32] <jack_rabbit> C11 happened. More changes probably to come.
[05:33:39] <jack_rabbit> C89 won't live forever.
[05:33:57] <jack_rabbit> Even Linus is moving forward there.
[05:34:24] <nitrix> C2x is slated to be C23. Little quality of life additions like typeof, it's moving carefully :P
[05:34:49] *** Joins: crashrep (~crashrep@user/crashrep)
[05:34:51] <jack_rabbit> Hopefully it preserves the goodness of C.
[05:35:12] <jack_rabbit> C is "bad" in a lot of ways in the frame of modern programming.
[05:35:40] <jack_rabbit> If they try to change it too much it'll just become "bad" altogether.
[05:36:57] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:39:29] *** Quits: alch (~alch@151.34.114.11) (Read error: Connection reset by peer)
[05:41:17] *** Joins: O0c (~b@216.249.150.39)
[05:41:26] <nitrix> I do gamedev now and I have the same feeling about OpenGL. Fixing it would probably make me hate it.
[05:41:54] <O0c> I'm having difficulty with a program that I'm writing.
[05:42:23] <jack_rabbit> "fixing" is always done in a backwards-compatible way, which means it's never really fixed.
[05:42:24] <O0c> I forgot the command to take characters from the string and make keywords.
[05:42:46] <O0c> ot
[05:42:46] <jack_rabbit> O0c, would you elaborate?
[05:43:13] *** Joins: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net)
[05:43:25] <O0c> jack_rabbit: I'm writing a program for fun. I'm just a begginer. I'm trying to make a program that counts whitespaces.
[05:43:29] *** Joins: alch (~alch@151.34.110.143)
[05:43:56] <jack_rabbit> That sounds like a good beginner program. Where are you running into problems?
[05:44:16] <O0c> I'm stuck on the scanf();
[05:45:22] <jack_rabbit> Why did you choose to use scanf?
[05:46:13] <jack_rabbit> Are you counting whitespace individually or collectively? Do multiple spaces count as one "white space" or as multiple?
[05:46:35] <nitrix> You can use a paste site to share your code with us. Try explaining what you expect the code to do and what happens instead.
[05:47:11] <O0c> Multiple spaces should count as multiple spaces even if they are next to each other.
[05:47:32] <O0c> What paste site do you perfer?
[05:47:44] <O0c> Is dpaste acceptable?
[05:48:36] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 240 seconds)
[05:48:46] <nitrix> Sure.
[05:49:34] <nitrix> jack_rabbit, The code needed to draw a single triangle on the screen. Vulkan is the "improved"/"safer" API. http://sol.gfxile.net/temp/hellotriangle.png
[05:50:03] <O0c> Please be patient with me. I'm using tmux. I'm also new to tmux.
[05:50:20] <nitrix> jack_rabbit, I wish it was a joke.
[05:50:46] <jack_rabbit> haha. I never got into the graphics war.
[05:50:56] <jack_rabbit> But yeah, that *is* a joke.
[05:51:17] <O0c> dpaste.com/ADSUBVZAL
[05:52:03] <jack_rabbit> > bash: line 1: d.c: command not found
[05:52:07] <O0c> Were you able to read my paste okay?
[05:52:12] <jack_rabbit> That doesn't give us much
[05:52:14] <O0c> I'm sorry.
[05:52:23] <O0c> I messed up.
[05:52:31] <jack_rabbit> It looks like you're trying to execute a C file.
[05:52:32] <O0c> d.c is the name of the file.
[05:52:39] <jack_rabbit> You need to compile it first.
[05:52:55] <O0c> I have compliled it.
[05:53:02] <O0c> I was trying to show you the source code.
[05:53:31] <nitrix> We're interested in the source code inside of your .c file. We're also interested in what input you're feeding the program and what output it produces.
[05:53:47] <masoudd> how did you paste that
[05:54:55] <nitrix> Probably an emacs keybinding... Ctrl-Alt-Meta-Verse-2.0-V.
[05:55:06] *** Joins: f4t4l_3rr0r (~PhoenixCo@user/alien-fx-fiend/x-2328408)
[05:55:09] <jack_rabbit> hehe
[05:55:17] <O0c> I tired using a command called wgetpaste.
[05:55:21] *** Quits: shailangsa_ (~shailangs@host86-186-133-59.range86-186.btcentralplus.com) ()
[05:55:37] <O0c> Do you suggest a different program to paste it?
[05:55:53] <masoudd> do this: curl -s -F "content=<-" https://dpaste.com/api/v2/ < d.c
[05:56:17] <nitrix> Try using your mouse and keyboard and copying things like you normally do. No need the make the problem harder, you're already trying one problem, you don't need twos.
[05:56:28] <O0c> What does "content" mean in this case?
[05:56:59] <jack_rabbit> Likely, "content" means the entire contents of your C file.
[05:57:08] *** Joins: constxd (~brad@142.134.79.191)
[05:57:19] <jack_rabbit> But you can give us more context and we can give you a better answer.
[05:57:42] *** f4t4l_3rr0r is now known as DeepComa
[05:57:55] <jack_rabbit> Oh, I missed masoudd's message. Nevermind.
[05:58:03] <masoudd> I took that command from here https://dpaste.com/api/v2/
[05:58:23] <O0c> dpaste.com must have had an update.
[05:58:31] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:953a:f456:a95e:2f9f) (Ping timeout: 256 seconds)
[05:59:41] <O0c> I think that I found a solution.
[06:00:06] <O0c> Nevermind the command seems to be frozen.
[06:00:35] <jack_rabbit> Find some pastebin and read the instructions for posting your program .
[06:00:53] *** Joins: AverageJoe (~AverageJo@2603:3024:1535:3fc0:2db7:8617:d81d:29b7)
[06:01:37] <jack_rabbit> Read the channel topic for suggestions.
[06:01:39] <nitrix> The one in the topic doesn't need any kind of ceremonies.
[06:01:42] <masoudd> This one has a "Browse" button to select and upload a file from browser http://paste.debian.net/
[06:02:18] <jack_rabbit> http://sprunge.us/ or https://bpa.st/
[06:03:04] *** Quits: arinov (~arinov@78.162.41.211) (Ping timeout: 272 seconds)
[06:07:50] *** Quits: AverageJoe (~AverageJo@2603:3024:1535:3fc0:2db7:8617:d81d:29b7) (Changing host)
[06:07:50] *** Joins: AverageJoe (~AverageJo@user/AverageJoe)
[06:08:12] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[06:08:49] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:09:11] *** Quits: KevinX (~KevinX@user/KevinX) (Remote host closed the connection)
[06:10:10] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[06:10:29] *** Quits: justAstache (~justache@user/justache) (Remote host closed the connection)
[06:11:07] *** Joins: justAstache (~justache@user/justache)
[06:11:19] <O0c> I plan on returning soon.
[06:11:24] *** Parts: O0c (~b@216.249.150.39) ()
[06:11:42] <masoudd> We'll be here :)
[06:12:34] *** Joins: frostygoth (~frostygot@li1566-163.members.linode.com)
[06:12:37] *** Joins: O0c (~b@216.249.150.39)
[06:12:43] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[06:16:56] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[06:18:06] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:18:46] *** Joins: shailangsa (~shailangs@host86-186-133-59.range86-186.btcentralplus.com)
[06:18:55] <O0c> I got it pasted.
[06:19:00] <O0c> It took me long enough.
[06:19:19] <O0c> https://dpaste.com/83K69WSPB
[06:20:24] *** Joins: Inline__ (~Inline@p200300cd470d31009f2917ead5869a68.dip0.t-ipconnect.de)
[06:20:48] *** Joins: xiongxin1 (~Thunderbi@2409:8955:2e88:3278:b0c8:95dd:82b2:fcd6)
[06:20:51] *** Quits: xiongxin (~Thunderbi@117.136.33.235) (Ping timeout: 256 seconds)
[06:20:52] *** xiongxin1 is now known as xiongxin
[06:21:04] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[06:21:24] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[06:22:34] <yolo> in Makefile patsubst %.c, %.o, $(SRC) can make all .c to .o, how can I do: patsubst %.c, %.exe, $(SRC), not working for me
[06:22:37] *** Quits: Inline (~Inline@p200300cd4715f5002bb20ed77dab6816.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:23:17] <dave0> O0c: char b[100] = { 0 }; scanf("%99s", b);
[06:23:30] <dave0> or   char b[100] = "";
[06:23:32] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:23:54] <O0c> I like the latter.
[06:27:00] <yolo> arhh it actuall works
[06:27:32] <O0c> It doesn't work for me.
[06:28:01] <O0c> No matter what I type, It's saying the answer is always 0.
[06:28:37] <dave0> O0c: oh put a   d=0;   somewhere
[06:28:52] <dave0> forgot to initialize it
[06:28:55] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Ping timeout: 240 seconds)
[06:29:00] <O0c> Is something wrong with the line
[06:29:05] <O0c> int c, d;
[06:29:06] <O0c> ?
[06:29:21] <dave0> O0c: only that you forgot to initialize d ... try   int c, d=0;
[06:30:40] <O0c> I recompiled and I still have that issue.
[06:31:16] <dave0> what's this?   if(b[c] == '')    i think it's a typo, there should be something between ''
[06:31:32] <O0c> Let me double check that.
[06:31:57] <O0c> There is a space.
[06:31:59] <dave0> oh are you counting spaces?
[06:32:04] <O0c> Yes.
[06:32:05] <dave0> yeah scanf isn't the right thing
[06:32:16] <dave0> fgets(b, sizeof(b), stdin);
[06:32:36] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 240 seconds)
[06:32:42] <O0c> I saw something one time where someone used scanf
[06:33:02] <dave0> you can use scanf...
[06:33:12] <O0c> Please explain.
[06:33:37] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[06:33:45] <dave0> scanf("%[^\n]", b);    something like that i'm not real sure ... but if you're working with lines, fgets is the right thing to use
[06:34:02] <O0c> I'm working with 1 sentence.
[06:34:36] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Read error: Connection reset by peer)
[06:35:14] <O0c> I got it to work now.
[06:35:35] *** Quits: constxd (~brad@142.134.79.191) (Ping timeout: 256 seconds)
[06:36:54] *** Parts: O0c (~b@216.249.150.39) ()
[06:37:16] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:38:38] *** Joins: fe23 (~fe23@2409:8a34:46c:f80:8400:a1cf:f0f1:cceb)
[06:39:25] *** Joins: zer0x_ (~zer0x@58.186.65.98)
[06:39:48] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 272 seconds)
[06:40:05] <dave0> re
[06:41:44] *** Joins: asen (~asen@2408:821a:618:8ad0:c30b:1640:f4a3:fe2a)
[06:44:03] *** Joins: korg815 (~korg815@user/korg815)
[06:46:30] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[06:47:58] *** Quits: doorzan (~doorzan@user/doorzan) (Quit: Leaving)
[06:48:26] *** Joins: kts (~kts@103.73.237.13)
[06:48:47] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[06:49:11] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[06:49:23] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[06:52:23] *** Joins: jancoow (~jancoow@user/jancoow)
[06:54:28] *** Quits: Guest3876 (~Guest@host171.190-224-208.telecom.net.ar) (Remote host closed the connection)
[06:54:49] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:59:57] *** Quits: xiongxin (~Thunderbi@2409:8955:2e88:3278:b0c8:95dd:82b2:fcd6) (Ping timeout: 240 seconds)
[07:02:04] *** Joins: andro (~andro@user/andro)
[07:07:13] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[07:07:16] *** Joins: lainon_ (~lainon@c-68-46-201-40.hsd1.al.comcast.net)
[07:07:37] *** Joins: Azem (~haise01@user/haise01)
[07:08:03] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:09:22] *** Joins: f4t4l_3rr0r (~PhoenixCo@user/alien-fx-fiend/x-2328408)
[07:09:34] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 272 seconds)
[07:09:54] *** Quits: lainon (~lainon@2601:7c0:c500:4d20::ae8) (Ping timeout: 260 seconds)
[07:10:19] *** lukedashjr is now known as luke-jr
[07:10:43] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:11:37] *** Quits: DeepComa (~PhoenixCo@user/alien-fx-fiend/x-2328408) (Ping timeout: 256 seconds)
[07:11:47] *** f4t4l_3rr0r is now known as DeepComa
[07:12:20] *** Quits: kts (~kts@103.73.237.13) (Quit: Konversation terminated!)
[07:13:41] *** Quits: seninha (~chatzilla@user/seninha) (Remote host closed the connection)
[07:15:17] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[07:18:41] *** Quits: lainon_ (~lainon@c-68-46-201-40.hsd1.al.comcast.net) (Remote host closed the connection)
[07:20:11] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[07:21:21] *** Joins: chewbranca (sid35447@couchdb/committer/chewbranca)
[07:24:36] *** Quits: zlg (~zlg@user/zlg) (Ping timeout: 240 seconds)
[07:29:49] *** Quits: ik (uid540109@id-540109.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[07:32:18] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 252 seconds)
[07:34:22] *** Joins: newpy_ (~newpy@2610:148:2002:0:3248:5755:4741:9e6)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:36] *** Quits: newpy (~newpy@2601:280:4381:1390:ddea:9d0f:28b3:6398) (Ping timeout: 240 seconds)
[07:38:10] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[07:38:54] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[07:38:54] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[07:38:54] *** Joins: nortoh (~nortoh@user/nortoh)
[07:39:58] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[07:41:25] *** Joins: [2]cansam (~IceChat95@218.sub-174-252-194.myvzw.com)
[07:43:37] *** Quits: [2]cansam (~IceChat95@218.sub-174-252-194.myvzw.com) (Quit: Relax, its only ONES and ZEROS!)
[07:49:48] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[07:50:04] *** Joins: xiongxin (~Thunderbi@2409:8955:2e88:18e1:3184:f55a:7cbe:ae3b)
[07:51:26] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 260 seconds)
[07:52:03] *** Quits: Biolunar (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a) (Ping timeout: 250 seconds)
[07:52:47] *** Joins: seninha (~chatzilla@user/seninha)
[07:54:01] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:55:05] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:56:36] *** Quits: xiongxin (~Thunderbi@2409:8955:2e88:18e1:3184:f55a:7cbe:ae3b) (Ping timeout: 240 seconds)
[07:56:42] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:57:20] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:ec92:fad1:5a31:6c82)
[08:02:25] *** Joins: smeso (~smeso@user/smeso)
[08:03:55] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[08:05:22] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:350b:c716:fa56:ddbc)
[08:08:07] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[08:10:29] *** Joins: Starfoxxes (~Starfoxxe@ip-037-201-006-167.um10.pools.vodafone-ip.de)
[08:17:32] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:21:38] *** Joins: ekathva (~ekathva@2001:999:51:19b8:30eb:aab6:8fa5:4db8)
[08:23:42] *** Quits: seninha (~chatzilla@user/seninha) (Remote host closed the connection)
[08:25:34] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 272 seconds)
[08:37:46] *** Joins: Biolunar (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a)
[08:41:41] *** Quits: johnnyreb (~tth@user/johnnyreb) (Ping timeout: 256 seconds)
[08:43:10] *** Quits: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Read error: Connection reset by peer)
[08:43:11] *** Joins: nutboy (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[08:43:28] *** Quits: nutboy (~sergio@217-180-232-30.sycmilaa.metronetinc.net) (Remote host closed the connection)
[08:47:32] *** Quits: adip_ (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[08:47:32] *** Quits: adip (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[08:48:04] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[08:48:04] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[08:48:21] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[08:48:34] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[08:52:12] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[08:52:16] *** Joins: zlg (~zlg@user/zlg)
[08:53:47] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[08:54:59] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:58:27] *** Quits: joev (~joev@user/joev) (Remote host closed the connection)
[08:58:51] *** Joins: joev (~joev@user/joev)
[09:03:38] *** Joins: davros (~davros@host86-185-61-1.range86-185.btcentralplus.com)
[09:09:57] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 240 seconds)
[09:10:34] *** Joins: xiongxin (~Thunderbi@2409:8955:2e88:18de:2891:93d6:3a63:3ab4)
[09:10:47] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[09:13:42] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Read error: Connection reset by peer)
[09:13:42] *** Quits: noteness (~noteness@user/noteness) (Read error: Connection reset by peer)
[09:13:42] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Read error: Connection reset by peer)
[09:13:42] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Read error: Connection reset by peer)
[09:13:42] *** Quits: tusko (~yeurt@user/tusko) (Write error: Connection reset by peer)
[09:13:42] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Write error: Connection reset by peer)
[09:13:42] *** Quits: bindu (~bindu@user/bindu) (Read error: Connection reset by peer)
[09:13:42] *** Quits: teepee (~teepee@openscad/teepee) (Read error: Connection reset by peer)
[09:13:42] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Read error: Connection reset by peer)
[09:13:42] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Read error: Connection reset by peer)
[09:13:42] *** Quits: de-facto (~de-facto@user/de-facto) (Read error: Connection reset by peer)
[09:14:24] *** Joins: johnnyreb (~tth@user/johnnyreb)
[09:16:05] *** Joins: teepee (~teepee@openscad/teepee)
[09:16:24] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[09:16:27] *** Joins: de-facto (~de-facto@user/de-facto)
[09:16:28] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:16:33] *** Joins: bindu (~bindu@user/bindu)
[09:16:34] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[09:16:35] *** Joins: noteness (~noteness@user/noteness)
[09:16:38] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[09:16:39] *** Joins: tusko (~yeurt@user/tusko)
[09:17:33] *** Joins: slidercrank (~slidercra@user/slidercrank)
[09:18:12] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[09:18:59] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:21:35] *** Joins: sweetsymph (uid509475@id-509475.lymington.irccloud.com)
[09:25:35] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[09:27:03] *** Joins: joev (~joev@user/joev)
[09:29:09] *** Joins: kst (~user@cpe-70-95-182-43.san.res.rr.com)
[09:37:57] *** Quits: xiongxin (~Thunderbi@2409:8955:2e88:18de:2891:93d6:3a63:3ab4) (Ping timeout: 240 seconds)
[09:38:41] *** Quits: asen (~asen@2408:821a:618:8ad0:c30b:1640:f4a3:fe2a) (Quit: Leaving)
[09:39:11] *** Quits: Dotz0cat (~Dotz0cat@h234.234.186.173.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[09:39:41] *** Joins: Dotz0cat (~Dotz0cat@h1.215.213.151.dynamic.ip.windstream.net)
[09:40:53] *** Quits: alch (~alch@151.34.110.143) (Ping timeout: 256 seconds)
[09:42:23] *** Joins: alch (~alch@151.36.126.250)
[09:47:20] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Remote host closed the connection)
[09:50:33] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[09:50:37] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[09:50:37] *** Quits: bindu (~bindu@user/bindu) (Read error: Connection reset by peer)
[09:50:37] *** Quits: noteness (~noteness@user/noteness) (Read error: Connection reset by peer)
[09:50:37] *** Quits: teepee (~teepee@openscad/teepee) (Write error: Connection reset by peer)
[09:50:37] *** Quits: de-facto (~de-facto@user/de-facto) (Write error: Connection reset by peer)
[09:50:37] *** Quits: tusko (~yeurt@user/tusko) (Write error: Connection reset by peer)
[09:50:37] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Read error: Connection reset by peer)
[09:50:37] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Read error: Connection reset by peer)
[09:50:37] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Read error: Connection reset by peer)
[09:50:37] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Read error: Connection reset by peer)
[09:50:37] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Read error: Connection reset by peer)
[09:50:51] *** Joins: bindu (~bindu@user/bindu)
[09:50:52] *** Joins: de-facto (~de-facto@user/de-facto)
[09:50:52] *** Joins: noteness (~noteness@user/noteness)
[09:50:53] *** Joins: tusko (~yeurt@user/tusko)
[09:50:56] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:50:57] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[09:51:02] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:51:02] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[09:51:03] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[09:51:07] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[09:51:21] *** Joins: teepee (~teepee@openscad/teepee)
[09:51:50] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[09:51:52] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[09:52:36] *** Joins: bindu (~bindu@user/bindu)
[09:52:43] *** Joins: koo5_ (~quassel@51.140.155.227)
[09:54:04] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[09:55:31] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[09:56:08] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 272 seconds)
[10:02:09] <ChoHag> http://sol.gfxile.net/temp/hellotriangle.png This is what progress looks like.
[10:03:48] <sham1> Well Vulkan also exposes more knobs and is more amicable for parallelism on the side of the CPU, so it does make sense
[10:05:44] *** Quits: rampart (~rampart@2.sub-174-250-16.myvzw.com) (Remote host closed the connection)
[10:05:49] <ChoHag> I know it's been exaggerated for effect but that is too much code to draw a triangle.
[10:06:27] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:06:29] *** Joins: rampart (~rampart@3.sub-174-250-16.myvzw.com)
[10:07:11] *** Quits: DeepComa (~PhoenixCo@user/alien-fx-fiend/x-2328408) (Quit: .oO (bbl tc folks~!))
[10:07:31] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:07:32] *** Quits: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu) (Ping timeout: 272 seconds)
[10:11:17] *** Quits: AverageJoe (~AverageJo@user/AverageJoe) (Ping timeout: 240 seconds)
[10:12:54] *** Quits: petererer (~petern@2001:8b0:65dd:8ef1:37be:e06:fb80:4ba2) (Remote host closed the connection)
[10:13:02] <sham1> Well TBF it's a compromise. If it was too easy for triangles it might be way too complex for more complicated usage, while this ought to be more flat in terms of complexity
[10:13:40] *** Quits: rampart (~rampart@3.sub-174-250-16.myvzw.com) (Quit: Leaving)
[10:14:54] *** Joins: jancoow (~jancoow@user/jancoow)
[10:17:24] *** Joins: newpy__ (~newpy@2601:280:4381:1390:ddea:9d0f:28b3:6398)
[10:19:48] *** Quits: newpy_ (~newpy@2610:148:2002:0:3248:5755:4741:9e6) (Ping timeout: 240 seconds)
[10:22:22] *** Joins: xiongxin (~Thunderbi@2409:8955:2e88:2df3:beab:ad08:2d6a:98c5)
[10:23:17] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[10:23:30] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:ec92:fad1:5a31:6c82) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:27:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[10:29:37] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[10:29:40] <Dean> hello
[10:30:20] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:32:56] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[10:34:22] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:ec92:fad1:5a31:6c82)
[10:34:34] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:ec92:fad1:5a31:6c82) (Client Quit)
[10:36:25] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[10:36:49] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:44:15] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Quit: quit)
[10:44:32] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[10:44:38] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Read error: Connection reset by peer)
[10:44:41] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[10:44:54] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[10:45:06] *** Joins: masoudd (~masoudd@user/masoudd)
[10:45:18] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[10:45:45] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[10:51:36] <caze> Hello Dean.
[10:52:04] *** Quits: fluter (~fluter@user/fluter) (Quit: WeeChat 3.3)
[10:52:12] *** Quits: pnbeast (~pnbeast@2601:140:4280:3800::1) (Quit: WeeChat 2.7.1)
[10:55:26] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:00:13] *** Quits: Dotz0cat (~Dotz0cat@h1.215.213.151.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[11:03:36] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[11:04:33] *** Joins: fluter (~fluter@user/fluter)
[11:06:17] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[11:06:45] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[11:08:44] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Quit: Konversation terminated!)
[11:09:57] *** Joins: the_lanetly_052_ (~the_lanet@194.135.169.19)
[11:10:43] *** Quits: the_lanetly_052_ (~the_lanet@194.135.169.19) (Max SendQ exceeded)
[11:11:12] *** Joins: the_lanetly_052_ (~the_lanet@194.135.167.211)
[11:11:57] *** Quits: the_lanetly_052_ (~the_lanet@194.135.167.211) (Max SendQ exceeded)
[11:12:26] *** Joins: the_lanetly_052_ (~the_lanet@194.135.167.211)
[11:13:13] *** Quits: the_lanetly_052_ (~the_lanet@194.135.167.211) (Max SendQ exceeded)
[11:13:41] *** Joins: the_lanetly_052_ (~the_lanet@194.135.169.19)
[11:14:47] *** Quits: the_lanetly_052_ (~the_lanet@194.135.169.19) (Max SendQ exceeded)
[11:15:17] *** Joins: the_lanetly_052_ (~the_lanet@194.135.167.211)
[11:15:19] *** Quits: Jong (~Jong@2620:10d:c090:400::5:f783) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:15:36] *** Joins: Jong (~Jong@163.114.132.1)
[11:16:03] *** Joins: eddybilley (~freddieti@217.119.232.174)
[11:21:01] *** Joins: mahmutov (~mahmutov@5.176.57.214)
[11:21:52] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[11:22:09] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[11:26:25] *** Quits: ckdCreations (~ckdCreati@147.55.133.134) (Read error: Connection reset by peer)
[11:27:22] *** Joins: ckdCreations (~ckdCreati@147.55.133.132)
[11:30:26] *** Joins: cart_ (~cart@2a01:4c8:1482:1711:6afb:a593:7234:19ca)
[11:32:49] *** Joins: adip (~adip@den37.neoplus.adsl.tpnet.pl)
[11:32:50] *** Joins: adip_ (~adip@den37.neoplus.adsl.tpnet.pl)
[11:33:41] *** jamesmartinez is now known as keinbock
[11:35:42] <ChoHag> Does malloc formally come with any alignment guarantees or do you get what you're given?
[11:35:51] *** Quits: cart_ (~cart@2a01:4c8:1482:1711:6afb:a593:7234:19ca) (Ping timeout: 250 seconds)
[11:36:02] <ChoHag> Similarly is aligned_alloc standard and what happens when the result of one of those goes to realloc and it has to move it?
[11:36:06] *** Joins: cart_ (~cart@2a01:4c8:1420:d8d5:2710:3304:bf91:5bc2)
[11:36:57] *** Joins: kts (~kts@103.73.237.13)
[11:37:09] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[11:38:21] *** Quits: analognoise (~analognoi@185.229.59.133) (Read error: Connection reset by peer)
[11:38:39] <caze> "The pointer returned if the allocation succeeds is suitably aligned so that it may be assigned to a pointer to any type of object or an array of such objects in the space allocated"
[11:38:50] *** Quits: kts (~kts@103.73.237.13) (Client Quit)
[11:38:50] <sham1> malloc and realloc align by _Alignof(max_align_t)
[11:39:47] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[11:40:27] *** Joins: bzng (~bzng4@2a02:60a0:102:4302:7d03:3814:18ee:e9e0)
[11:41:01] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[11:41:36] *** Quits: cart_ (~cart@2a01:4c8:1420:d8d5:2710:3304:bf91:5bc2) (Ping timeout: 245 seconds)
[11:42:17] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:43:52] *** Joins: Rounin (~david@84.212.130.215)
[11:43:56] <caze> aligned_alloc is standard, and it seems like if you realloc a pointer returned by aligned_alloc, you gain the strictest alignment requirements.
[11:45:33] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[11:46:25] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[11:48:19] *** Joins: slidercrank (~slidercra@user/slidercrank)
[11:48:35] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[11:48:55] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[11:51:21] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.188)
[11:51:49] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[11:51:51] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.188) (Client Quit)
[11:52:35] *** Joins: oxfuxxx (~oxfuxxx@195.47.194.46)
[11:54:43] *** Joins: vysn (~vysn@user/vysn)
[11:56:36] *** Quits: xiongxin (~Thunderbi@2409:8955:2e88:2df3:beab:ad08:2d6a:98c5) (Ping timeout: 240 seconds)
[11:56:37] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 256 seconds)
[11:58:40] *** Joins: rcoote (~rcoote@2a02:908:690:a140:633a:3de6:73ee:bac1)
[12:00:25] *** Joins: eddybilley (~freddieti@217.119.232.174)
[12:02:40] <ChoHag> Well it seems that the standard doesn't mandate anything about the alignment of the pointer returned by realloc and in fact the wording is that it "deallocates the old object and ... returns a new pointer", so in theory all bets should be off.
[12:04:38] *** Joins: cosimone (~user@93-47-229-38.ip115.fastwebnet.it)
[12:09:47] *** Quits: andro (~andro@user/andro) (Ping timeout: 272 seconds)
[12:10:42] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[12:12:21] *** Joins: andro (~andro@user/andro)
[12:12:43] *** Quits: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Quit: heiner)
[12:13:09] *** Quits: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Remote host closed the connection)
[12:13:25] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[12:14:34] *** Joins: xiongxin (~Thunderbi@2409:8955:2e88:b55:2334:5dc4:2226:271c)
[12:15:02] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:17:53] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 250 seconds)
[12:18:39] *** Quits: jack_rabbit (~jack_rabb@hpnd-dhcp-173-46-246-97.bloombb.net) (Quit: Connection closed)
[12:19:08] *** Joins: hashfunc1930 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[12:19:33] <dave0> new=malloc;memcpy;free(old)
[12:20:01] *** Joins: MajorBiscuit (~MajorBisc@c-001-025-058.client.tudelft.eduvpn.nl)
[12:20:29] *** Quits: oxfuxxx (~oxfuxxx@195.47.194.46) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[12:20:50] <fluter> hi, is there any valid reasons to use mutexes in a single threaded reactor application?
[12:20:51] *** Joins: oxfuxxx (~oxfuxxx@195.47.194.46)
[12:22:01] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[12:23:14] <dave0> no, if there's no threads you never need to lock
[12:24:13] <dave0> maybe if you're doing something weird like interrupts, but then it's usually disable/enable interrupts instruction
[12:25:13] <dave0> signals would be like interrupts.. disable/enable .. but that's not really mutexes
[12:34:53] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:44:13] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[12:47:15] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[12:47:47] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 250 seconds)
[12:48:25] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 272 seconds)
[12:49:02] <fluter> dave0: i'm not using interruptes, just a reactor that schedules different events, and some of which handlers modifies a queue
[12:49:18] <fluter> so if no multi-threads, no need mutexes, hah
[12:52:57] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[12:53:00] <dave0> signals are like interrupts which can complicate things... but i'm not a fan of signals in general
[12:53:47] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[12:54:08] <dave0> i'm not sure if you call the part between mutex_lock/mutex_unlock a critical section
[12:54:34] <dave0> i don't think you do.. but mutex is to ensure only one thread executes the protected code at once
[12:55:29] <dave0> since you only have 1 thread there's never a possibility that another thread tries to execute the protected code section
[12:55:35] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[12:56:15] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[12:56:59] <dave0> i like threads but they aren't always the answer
[12:57:29] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:01:49] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[13:02:07] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[13:02:29] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[13:04:20] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[13:04:57] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:07:38] *** Joins: hinata (~hinata@2409:4042:d16:67df:8d0e:40ca:301d:b19f)
[13:08:43] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[13:10:12] *** Quits: oxfuxxx (~oxfuxxx@195.47.194.46) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[13:10:57] *** Joins: oxfuxxx (~oxfuxxx@195.47.194.46)
[13:11:59] *** Joins: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu)
[13:12:10] *** Joins: Masklin_Gurder (~joel@eduroam-rs-06.wireless.lu.se)
[13:12:28] *** Joins: arinov (~arinov@78.162.47.106)
[13:14:54] *** Quits: hashfunc1930 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 250 seconds)
[13:15:39] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[13:17:15] *** Quits: unlink2 (~unlink@p200300ebcf3e190012b7094ba83de7f3.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:18:24] *** Joins: bnchs (~bnchs@160.177.47.225)
[13:20:20] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:24:39] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[13:25:45] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:26:43] *** Joins: kamarat (~kamarat@81.161.60.198)
[13:28:51] *** Quits: kamarat (~kamarat@81.161.60.198) (Changing host)
[13:28:51] *** Joins: kamarat (~kamarat@user/kamarat)
[13:29:37] *** Quits: bch (~bch@S01069050ca2cbf63.ok.shawcable.net) (Ping timeout: 240 seconds)
[13:30:12] *** Quits: newpy__ (~newpy@2601:280:4381:1390:ddea:9d0f:28b3:6398) (Ping timeout: 240 seconds)
[13:37:40] *** Joins: kts (~kts@103.73.237.171)
[13:38:49] *** Quits: alch (~alch@151.36.126.250) (Read error: Connection reset by peer)
[13:39:36] *** Quits: xiongxin (~Thunderbi@2409:8955:2e88:b55:2334:5dc4:2226:271c) (Ping timeout: 250 seconds)
[13:40:30] *** Joins: MarderIII (~MarderIII@2a02:a45a:72f1:1:8587:dbce:9777:9595)
[13:42:03] *** Quits: oxfuxxx (~oxfuxxx@195.47.194.46) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[13:42:25] *** Joins: oxfuxxx (~oxfuxxx@195.47.194.46)
[13:43:40] *** Joins: alch (~alch@151.82.119.124)
[13:48:32] *** Quits: rcoote (~rcoote@2a02:908:690:a140:633a:3de6:73ee:bac1) (Ping timeout: 240 seconds)
[13:50:52] *** Joins: akuma (~i.am@user/marlboro)
[13:53:21] *** Quits: andro (~andro@user/andro) (Ping timeout: 256 seconds)
[14:00:21] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[14:00:22] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:02:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[14:04:56] *** Joins: arinov_ (~arinov@77.67.133.10)
[14:05:15] *** Quits: arinov (~arinov@78.162.47.106) (Ping timeout: 256 seconds)
[14:05:41] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[14:09:29] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:09:29] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[14:10:15] <fizzie> ChoHag: C11 7.22.3p1 applies to `realloc` just as much as it does to malloc. "The pointer returned if the allocation succeeds is suitably aligned so that it may be assigned to a pointer to any type of object with a fundamental alignment requirement and then used to access such an object --"
[14:11:29] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:11:29] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[14:11:41] *** Joins: bch (~bch@S01069050ca2cbf63.ok.shawcable.net)
[14:11:43] *** Joins: jellie (~luv_panda@user/jellie)
[14:11:58] <fizzie> Oh, I should've scrolled back more, the question was about realloc'ing and extended-alignment pointer.
[14:12:23] <fizzie> Yeah, I guess it wouldn't have to persist that.
[14:15:58] *** Joins: AmR (~AmREiSa@156.199.24.196)
[14:16:40] *** ElementW_ is now known as ElementW
[14:19:06] *** Joins: plastico (~plastico@neomutt/plastico)
[14:19:36] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[14:19:51] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 252 seconds)
[14:20:11] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[14:20:15] *** Quits: arinov_ (~arinov@77.67.133.10) (Ping timeout: 256 seconds)
[14:22:35] *** Quits: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[14:23:40] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[14:24:15] *** Quits: bzng (~bzng4@2a02:60a0:102:4302:7d03:3814:18ee:e9e0) (Ping timeout: 268 seconds)
[14:26:29] *** Joins: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de)
[14:29:46] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[14:36:19] *** Joins: control (~v1@user/control)
[14:37:19] <control> hello, im trying to print random numbers between 0 and 9999999. but im only getting numbers in length to 99999. what im doing wrong? heres the code: https://bpa.st/UQ2A
[14:39:12] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[14:39:51] <dave0> control: rand() returns numbers inthe range 0 ... RAND_MAX ... is RAND_MAX < 9999999 you can never get those high numbers
[14:40:14] <control> how can i make this code to print bigger numbers?
[14:40:28] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[14:40:42] <dave0> control: the usual way to get larger numbers from rand() is to call it twice and join the two numbers together to form a big number, then % 9999999
[14:41:08] <dave0> control: int a = rand(); int b = rand(); int c = a * RAND_MAX + b; printf("%d ", c % 99999999);
[14:42:49] *** Joins: constxd (~brad@142.134.79.191)
[14:43:24] <dave0> control: consider also   random()   instead of rand ... it returns larger numbers, up to 2**31
[14:43:47] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[14:43:49] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:43:55] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[14:43:58] *** Joins: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[14:44:22] *** Joins: joev (~joev@user/joev)
[14:44:57] *** Joins: bzng (~bzng4@2a02:60a0:102:4302:7d03:3814:18ee:e9e0)
[14:49:02] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[14:49:10] <fizzie> If you're planning to combine two values from rand(), the natural factor for the other one would be (RAND_MAX+1), not RAND_MAX. Though mind the overflow possibilities.
[14:49:30] <fizzie> (I think the weirder part about that pasted code's definitely the loop.)
[14:50:56] <fizzie> ,cc srand(3); int a = rand(); int b = rand(); int c = a * RAND_MAX + b; printf("%d ", c % 99999999); // easily a negative result
[14:50:58] <candide> fizzie:  runtime error: signed integer overflow: 1205554746 * 2147483647 cannot be represented in type 'int'  -22406768
[14:52:01] <control> still cant get it to works properly
[14:54:16] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:59:21] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[15:00:08] *** Joins: Enitin (~Enitin@82.180.145.226)
[15:00:32] *** Quits: MarderIII (~MarderIII@2a02:a45a:72f1:1:8587:dbce:9777:9595) (Ping timeout: 240 seconds)
[15:01:19] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:01:28] <dave0> oh RAND_MAX is large on the robot
[15:01:54] <tarzeau> i've wanted to make the wearout less hard, but i'm lost any hints? https://sources.debian.org/src/filters/2.55-3/nethackify.c/
[15:02:22] <dave0> ,cc unsigned int a = rand(), b = rand(), c = a * RAND_MAX + b; printf("%u ", c % 9999999);
[15:02:24] <candide> dave0: 125270
[15:03:11] <dave0> control: what's the problem?
[15:04:30] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[15:05:00] *** Quits: hinata (~hinata@2409:4042:d16:67df:8d0e:40ca:301d:b19f) (Ping timeout: 240 seconds)
[15:06:17] *** Joins: hinata (~hinata@152.57.118.166)
[15:06:37] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 240 seconds)
[15:09:25] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[15:09:36] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:10:02] <control> dave0: finally got it worked! thanks man
[15:10:37] *** Quits: hinata (~hinata@152.57.118.166) (Read error: Connection reset by peer)
[15:10:45] <fizzie> tarzeau: Depending on how you define "less hard", you could just adjust the overall probability of changing the character at all, which weirdly enough is 2/3 for `nethackify` (from `myrandom(3) > 0`), but a flat 1 for the stdin-processing code since it's missing that test.
[15:11:00] <cehteh> scanf( ... printf("%s%s%s...", rand(), rand()...) :D
[15:12:21] *** Joins: hinata (~hinata@2409:4042:230e:f604:8d0e:40ca:301d:b19f)
[15:12:38] <tarzeau> fizzie: thanks i guess i'll just make that run time configurable
[15:16:48] *** Joins: goodfella (~archer@user/tessio)
[15:17:23] *** Joins: Burgundy (~NA@86.121.143.206)
[15:22:32] *** Quits: hinata (~hinata@2409:4042:230e:f604:8d0e:40ca:301d:b19f) (Ping timeout: 252 seconds)
[15:23:21] *** Joins: hinata (~hinata@2409:4042:d16:67df:8d0e:40ca:301d:b19f)
[15:25:27] *** Joins: MarderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[15:26:38] *** Quits: oxfuxxx (~oxfuxxx@195.47.194.46) (Ping timeout: 250 seconds)
[15:26:49] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 250 seconds)
[15:27:20] *** Joins: aradesh (~aradesh@user/aradesh)
[15:27:41] *** Quits: AmR (~AmREiSa@156.199.24.196) (Ping timeout: 256 seconds)
[15:29:56] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:02] *** Joins: csrf (~csrf@user/csrf)
[15:32:26] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:6938:5d7:7e7:1023)
[15:33:00] *** Quits: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[15:34:29] <control> dave0: but sometimes it prints less than 7 digits in length. how can i be sure that the length is exact 7
[15:35:24] *** Quits: hinata (~hinata@2409:4042:d16:67df:8d0e:40ca:301d:b19f) (Ping timeout: 240 seconds)
[15:35:42] <control> to print not less than length of 7
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:04] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[15:36:21] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Ping timeout: 250 seconds)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:39:29] <dave0> ah
[15:39:40] <dave0> you must reject numbers <= 999999
[15:40:03] <dave0> so you want 7 to 9 digits?
[15:40:33] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:41:19] <control> dave0: i want only 7 digits
[15:41:25] <dave0> okay
[15:41:39] <dave0> you need a random number from    1000000 <= x <= 9999999
[15:41:56] <control> yes
[15:42:13] *** Joins: Enitin (~Enitin@82.180.145.230)
[15:42:39] <dave0> ,cc int c = random() % (9999999 - 1000000 + 1) + 1000000; printf("%d ", c);
[15:42:41] <candide> dave0: 5289383
[15:42:56] <dave0> you could write a separate function for that
[15:44:07] <dave0> ,cc /* return a random number from low...high inclusive */ int randrange(int low, int high) { return rand() % (hi - lo + 1) + lo; } int main(void) { int c = randrange(1000000, 9999999); printf("%d ", c); }
[15:44:09] <candide> dave0:  error: unterminated comment
[15:44:47] <dave0> ,cc int randrange(int low, int high) { return rand() % (high - low + 1) + low; } int main(void) { int c = randrange(1000000, 9999999); printf("%d ", c); }
[15:44:49] <candide> dave0: 5289383
[15:45:44] *** Joins: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de)
[15:46:39] <dave0> ,cc int randomrange(int low, int high) { return random() % (high - low + 1) + low; } int main(void) { srandom(3); printf("%d ", randomrange(1000000, 9999999)); }
[15:46:41] <candide> dave0: 9554746
[15:47:23] <control> undefined reference to `randomrange'
[15:47:37] *** Quits: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de) (Client Quit)
[15:48:12] <dave0> you cut&pasted my code? check for a typo
[15:49:47] *** Joins: Techcable (~Techcable@168.235.93.147)
[15:51:07] <fizzie> Just print it with leading 0s, then it's got the requisite number of digits even if the value's lower. ;)
[15:51:30] <dave0> :-p
[15:52:10] <fizzie> ,cc srand(5); int r = rand() % 10000000; printf("%07d", r); // 7 digits
[15:52:12] <candide> fizzie: 0011675
[15:52:42] *** Joins: AmR (~AmREiSa@156.207.214.125)
[15:52:57] *** Quits: figrita (~figrita@98.3.29.100) (Read error: Connection reset by peer)
[15:54:01] *** Joins: jjido (~Denis@94.4.149.217)
[15:54:32] *** Joins: figrita (~figrita@2603-7080-9801-332f-5813-eeaf-976d-830a.res6.spectrum.com)
[15:55:45] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[15:56:07] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[15:56:30] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[16:00:45] *** Joins: bebyx (~Thunderbi@user/bebyx)
[16:02:16] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[16:03:12] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[16:03:25] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[16:12:45] *** Joins: random-nick (~random-ni@87.116.176.196)
[16:16:37] *** Joins: Satin (uid193953@user/Seten)
[16:19:01] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[16:19:24] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[16:19:41] *** Joins: joev (~joev@user/joev)
[16:20:32] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[16:21:04] *** Joins: Klinda (~superleag@user/klinda)
[16:21:26] <sham1> rand tends to not be all that good even for non-cryptographic PRNGs in most libc implementations
[16:25:40] *** Joins: tejr_ (~tejr@user/tejr)
[16:25:44] *** Quits: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch) (Changing host)
[16:25:44] *** Joins: Xeha (~Xeha@user/Xeha)
[16:26:23] <dave0> random() is a little better
[16:26:42] <dave0> if you want strong randomness, you could use openssl
[16:27:15] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[16:27:20] *** tejr_ is now known as tejr
[16:27:29] *** Quits: AmR (~AmREiSa@156.207.214.125) (Ping timeout: 256 seconds)
[16:27:32] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 272 seconds)
[16:27:36] <supakeen> or read urandom, but it's not really about strong is it :)
[16:27:48] <fizzie> That's what they say, but I've always wondered how true it is. For example, glibc's additive-feedback generator is I think "meh, good enough". And certainly no longer has that classic "last N bits has a period of 2^N" issue.
[16:28:29] <koollman> glibc is definitely not the worse rand or random implementation out there :)
[16:29:04] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:30:30] <dave0> i rolled my own once, but i copied the magic constants from sedgewick
[16:30:44] *** Quits: bnchs (~bnchs@160.177.47.225) (Ping timeout: 252 seconds)
[16:30:54] <dave0> the one that is   x1 = x0 * a + b mod m
[16:30:56] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[16:31:00] <supakeen> the crux is just 'do you want a CSPRNG', in that case use urandom/openssl/arc4random/etc
[16:31:06] <supakeen> i usually copypaste some variant of xorshift
[16:31:13] <supakeen> for a normal PRNG
[16:33:01] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 240 seconds)
[16:33:22] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:33:24] <dave0> if there's money involved don't skimp on the random number generator :-)
[16:33:45] <dave0> like online poker
[16:34:10] <sham1> Yeah, xorshift is the way to go at least for me
[16:34:36] <sham1> And for gambling or cryptography you of course use a CGPRNG
[16:35:07] *** Quits: constxd (~brad@142.134.79.191) (Ping timeout: 256 seconds)
[16:35:21] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[16:36:56] *** Joins: seninha (~chatzilla@user/seninha)
[16:37:01] <supakeen> so many issues could've been avoided if we had collectively decided that CSPRNG's were to be the default source of randomness :>
[16:37:29] *** Quits: kts (~kts@103.73.237.171) (Quit: Konversation terminated!)
[16:40:37] <sham1> The problem with that is that they can be rather slow when compared to something like xorshift, even if they can be and are hardware accelerated
[16:41:48] <pragma-> ,cc /* foo */ 42;
[16:41:50] <candide> pragma-: No output.
[16:41:59] *** Joins: cart_ (~cart@host-78-144-125-214.as13285.net)
[16:44:39] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[16:44:43] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:45:10] *** Joins: acerbic (~acerbic@cs-xdata-50-86-53-91.cspire.com)
[16:45:12] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[16:45:19] *** Joins: jellie (~luv_panda@user/jellie)
[16:46:32] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:b061:f420:602:ebda)
[16:53:05] *** Quits: MarderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Quit: Leaving)
[16:53:42] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[16:54:13] *** Joins: pulse (~pulse@user/pulse)
[16:57:01] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[16:57:26] <Feuermagier> sham1, don't they trivially generate gigabytes of data per second nowdays?
[16:57:41] *** Joins: justAstache (~justache@user/justache)
[16:59:41] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[16:59:55] <koollman> Feuermagier: not trivially, depending on the hardware you have and the quality of randomness you want (and in some case the trust you give to hardware designers)
[17:02:43] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[17:03:14] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:03:16] <Feuermagier> koollman, well in the worst case you can just use your AES engine
[17:03:38] *** Quits: zer0x_ (~zer0x@58.186.65.98) (Ping timeout: 272 seconds)
[17:04:34] <Feuermagier> and if you are on an IoT device without hardware support for AES, I wonder what you'd need gigabytes of random-data for
[17:04:42] *** Quits: EtherNet (~ethernet@user/ethernet) (Quit: WeeChat 3.4)
[17:05:48] <Feuermagier> https://rust-random.github.io/book/guide-rngs.html#the-generators This includes some benchmarks - PRNGs appear to be at about 8GB/s with CSPRNGs at 25% the speed with ~2GB/s
[17:06:29] <Feuermagier> (no idea what they used though)
[17:06:44] <Feuermagier> [hardware wise I mean]
[17:07:03] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Quit: Lost terminal)
[17:07:25] <koollman> yeah, hardware is kind of very important in most of those tests :)
[17:08:44] *** Joins: AmR (~AmREiSa@156.199.192.24)
[17:09:01] <koollman> ah they did say: 3.4GHz Haswell
[17:10:58] <koollman> which, indeed, has a very good generator, and pretty decent acceleration for many things. Although on some OS rdrand is disabled (or at least optionnal) due to trust issue
[17:11:19] *** Joins: freddietilley (~freddieti@217.119.232.174)
[17:13:17] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 240 seconds)
[17:14:47] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 256 seconds)
[17:16:28] *** Joins: jellie (~luv_panda@user/jellie)
[17:18:53] *** Joins: lokirf (~lokirf@111.29.80.180)
[17:18:58] <SaltHilStroller_> How does padding work across different architectures? If I'm transferring data between 32bit and 64bit architectures, does that affect the memory offset when accessing a struct member?
[17:20:36] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[17:21:43] <supakeen> yes
[17:21:58] <supakeen> it's one of the good reasons to not just write structs to sockets
[17:22:27] <Feuermagier> SaltHilStroller_, massively. pls don't just dump structs into your socket. all kinds of stuff can and will go wrong
[17:22:27] <fizzie> ,cc struct s { char c; double d; }; printf("%zu", offsetof(struct s, d));
[17:22:29] <candide> fizzie: 8
[17:22:33] <fizzie> ,cc -m32 struct s { char c; double d; }; printf("%zu", offsetof(struct s, d));
[17:22:34] <candide> fizzie: 4
[17:23:23] <pragma-> ,cc diff
[17:23:23] <candide> pragma-: `inserted -m32` struct s { char c; double d; }; printf("%zu" , offsetof(struct s, d));
[17:25:04] *** Joins: Rynn (~rynn@216.30.158.198)
[17:26:05] *** Quits: s1b1 (~s1b1@user/s1b1) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[17:27:58] *** Joins: s1b1 (~s1b1@user/s1b1)
[17:28:21] *** Quits: mniip (mniip@libera/staff/mniip) (Ping timeout: 604 seconds)
[17:30:13] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[17:31:01] *** Joins: bebyx (~Thunderbi@user/bebyx)
[17:31:23] <sham1> Not just sockets. Generally don't dump structs anywhere without a proper serialisation format
[17:32:08] <Feuermagier> if it's undefined how it's stored in memory, it's still undefined if you dump that memory anywhere
[17:35:28] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[17:35:47] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:36:18] <sham1> That's why you have a serialisation format, so you can define the way it's stored in memory when dumped
[17:37:02] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[17:37:49] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:39:16] *** Quits: alch (~alch@151.82.119.124) (Read error: Connection reset by peer)
[17:41:33] *** Joins: Azem (~haise01@user/haise01)
[17:43:04] *** Joins: alch (~alch@151.44.56.24)
[17:43:36] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[17:46:36] *** Quits: mahmutov (~mahmutov@5.176.57.214) (Ping timeout: 240 seconds)
[17:47:15] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[17:49:31] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:49:55] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[17:50:30] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 272 seconds)
[17:51:00] *** Joins: joev (~joev@user/joev)
[17:51:06] *** Joins: karakedi (~eAC53C340@user/karakedi)
[17:51:07] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[17:56:22] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e10d:be3:25e9:7a3a)
[17:56:22] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e10d:be3:25e9:7a3a) (Changing host)
[17:56:22] *** Joins: skapata (~Skapata@user/skapata)
[17:58:12] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 240 seconds)
[18:00:15] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[18:00:19] *** Quits: justAstache (~justache@user/justache) (Read error: Connection reset by peer)
[18:00:58] *** Joins: justAstache (~justache@user/justache)
[18:01:10] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:01:20] <supakeen> is attribute(packed) a serialization format?
[18:01:22] * supakeen runs away
[18:01:23] *** Joins: meator (~meator@user/meator)
[18:02:04] *** Joins: Rynn (~rynn@216.30.158.198)
[18:03:55] *** Quits: sweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[18:04:54] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[18:05:02] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[18:05:37] * sham1 squints at supakeen
[18:05:38] <sham1> No
[18:07:43] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[18:08:09] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[18:08:52] *** drin is now known as geezabiscuit
[18:09:19] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[18:10:05] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[18:10:07] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[18:10:31] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[18:11:01] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[18:11:24] *** Joins: mahmutov (~mahmutov@37.155.12.201)
[18:12:02] *** Quits: bzng (~bzng4@2a02:60a0:102:4302:7d03:3814:18ee:e9e0) (Quit: Leaving)
[18:16:23] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[18:17:35] *** Joins: zer0x_ (~zer0x@58.186.65.98)
[18:17:45] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[18:18:17] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[18:19:20] *** Quits: lokirf (~lokirf@111.29.80.180) (Quit: Leaving)
[18:20:15] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: RAM test)
[18:21:44] *** Joins: X-Scale` (~ARM@83.223.232.175)
[18:22:56] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[18:23:11] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[18:23:46] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[18:23:55] *** Quits: X-Scale (~ARM@135.232.28.37.rev.vodafone.pt) (Ping timeout: 256 seconds)
[18:23:55] *** X-Scale` is now known as X-Scale
[18:24:04] *** Quits: zer0x_ (~zer0x@58.186.65.98) (Ping timeout: 272 seconds)
[18:25:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[18:26:11] *** Quits: joev (~joev@user/joev) (Ping timeout: 256 seconds)
[18:27:19] *** Joins: joev (~joev@user/joev)
[18:30:59] *** Quits: sidy (~sidy@user/sidy) (Ping timeout: 250 seconds)
[18:31:41] *** Joins: the_lanetly_052 (~the_lanet@194.135.167.54)
[18:31:58] *** Joins: sidy (~sidy@user/sidy)
[18:32:12] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:32:36] *** Quits: the_lanetly_052_ (~the_lanet@194.135.167.211) (Ping timeout: 240 seconds)
[18:33:47] *** Joins: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[18:35:13] *** Joins: gproto23 (~gproto23@user/gproto23)
[18:37:00] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[18:40:08] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[18:40:32] *** Joins: mrig (~mrig@user/mrig)
[18:40:37] *** Quits: seninha (~chatzilla@user/seninha) (Ping timeout: 240 seconds)
[18:44:41] *** Inline__ is now known as Inline
[18:46:57] *** Joins: constxd (~brad@142.134.79.191)
[18:47:31] *** Joins: seninha (~chatzilla@user/seninha)
[18:48:50] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:51:07] *** Quits: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee) (Ping timeout: 256 seconds)
[18:52:04] *** Joins: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee)
[18:56:23] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:01:15] *** Joins: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de)
[19:01:26] *** Quits: sidy (~sidy@user/sidy) (Ping timeout: 272 seconds)
[19:01:51] *** Joins: beepbooptheory (~mik-wsl@50.216.98.94)
[19:01:54] *** Joins: sidy (~sidy@user/sidy)
[19:02:37] <meator> Hi. How can I block write to a named pipe until someone reads from it after it has been successfully opened? Is it only possible via repeatedly open()ing and closing the file and relying in the blocking open()?
[19:05:18] *** Quits: dsrt^ (~dsrt@12.163.216.98) (Remote host closed the connection)
[19:05:46] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[19:09:50] <twkm> isn't blocked until another process opens for read sufficient?
[19:10:46] *** Quits: nuxil_ (~nuxil@141.195.51.213) (Ping timeout: 245 seconds)
[19:11:23] *** Joins: unlink2 (~unlink@p200300ebcf3e190012b7094ba83de7f3.dip0.t-ipconnect.de)
[19:13:39] *** Joins: nuxil (~nuxil@141.195.51.213)
[19:13:47] *** Quits: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu) (Ping timeout: 256 seconds)
[19:14:20] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[19:17:51] <meator> I have two programs. A client and a server. A server is running persistently. It provides info for clients through a FIFO. The client opens the FIFO, reads from it, handles the data and exits. The FIFO will be presumably opened multiple times by clients.
[19:17:56] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 252 seconds)
[19:18:16] *** Joins: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu)
[19:18:19] *** Joins: virmire (~Virmire@p200300cfc71981017ff3a2049d66781f.dip0.t-ipconnect.de)
[19:23:59] *** Joins: magla (~gelignite@55d47d67.access.ecotel.net)
[19:25:25] <meator> Wait, it's more complicated than that. I think I can't just reuse this connection, because it becomes broken after client exits and it will get SIGPIPE.
[19:28:36] <Feuermagier> meator, every client should have it's own queue
[19:29:28] <Feuermagier> you might be asking the wrong questions - what are you trying to distribute how?
[19:32:17] *** Joins: Hercules (~Hercules@user/hercules)
[19:33:07] <meator> The server is basically a timer. The client should be able to get the remaining time of the timer.
[19:35:27] <meator> I need some form of IPC to tell the client how much time is left in the server.
[19:36:30] <Feuermagier> meator, why not simply transmit an integer / proper timestamp?
[19:37:01] <meator> How can I transmit this information?
[19:37:08] <fizzie> Perhaps you want to listen on a local socket instead of trying to make a (named?) FIFO work for it.
[19:37:23] *** Joins: vysn (~vysn@user/vysn)
[19:37:43] <Feuermagier> meator, how about you transmit the milliseconds left on your timer?
[19:38:28] <Feuermagier> also, are you *really sure* that C is the right language for your task?
[19:38:32] <meator> Feuermagier: How can I transmit this information?
[19:39:29] <meator> fizzie: I'm not very familiar with sockets. I will read more about them.
[19:39:46] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:39:55] <Feuermagier> meator, well, you'd send(socket, time_left, sizeof(time_left), 0);
[19:40:06] <Feuermagier> (hopefully, maybe a bit different)
[19:41:20] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[19:42:31] <twkm> after writing the fifo is you need to close then open it again -- you will block when you open it again unless a new reader opened it first.
[19:43:24] <meator> By using client/server I don't mean that the programs are connecting to internet.
[19:44:05] <twkm> doesn't matter as long as the host has a stack for networking it can talk to itself.
[19:44:12] <meator> twkm: That is my current plan, but there might be some races.
[19:44:25] <meator> Opening and closing the fifo.
[19:44:44] <fizzie> That's why I said a *local* socket (AF_UNIX / AF_LOCAL), not an Internet (AF_INET, AF_INET6) one.
[19:45:05] <fizzie> (Not that people don't sometimes use the latter kind as well even on a single host.)
[19:45:12] <twkm> processes block until a peer appears.
[19:48:44] *** Quits: freddietilley (~freddieti@217.119.232.174) (Ping timeout: 252 seconds)
[19:48:44] <meator> If two clients will read from the fifo, then they might get corrupted data. I should probably use locks to circumvent this.
[19:48:46] <fizzie> One racy bit about that FIFO approach is the situation where two clients open it at about the same time (i.e., before the server has managed to write the "response" and close it), in which case only one client gets to read the data, and the other just gets the pipe unceremoniously closed on it.
[19:49:51] <Feuermagier> meator, sounds like what you want is to take the local timestamp when your timer starts and transmit (timer_length - (current_time - timer_start)). You need no lock this way. Use unixtimestamps in milliseconds.
[19:49:54] *** MrMobius_ is now known as MrMobius
[19:50:04] <Feuermagier> you do also not need a queue
[19:51:32] *** Quits: tusko (~yeurt@user/tusko) (Quit: (  *  y  *  ))
[19:51:42] *** Joins: tusko_ (~yeurt@user/tusko)
[19:53:17] <meator> Getting the remaining time in server isn't a problem. I just need to transfer this information.
[19:53:23] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bd2b-5293-8c83-b4c5.res6.spectrum.com)
[19:53:38] *** tusko_ is now known as tusko
[19:55:00] <Feuermagier> meator, choose any of these structs, put your time in it, then send the stuct https://en.wikipedia.org/wiki/C_date_and_time_functions
[19:55:32] <Feuermagier> then consult https://stackoverflow.com/questions/1577161/passing-a-structure-through-sockets-in-c
[20:00:24] <meator> Yeah, I can do this with FIFOs too. Are there any advantages of using sockets over FIFOs in this case? As I said, I don't really know sockets.
[20:01:04] <koollman> fifo are one way only, and usually can be messy to deal with regarding blocking or sharing
[20:01:06] <Feuermagier> What exactly do you want the FIFO to do? - like, how would that help in any way?
[20:01:34] <Feuermagier> I thought you want to transmit it to a different program, possibly a different computer?
[20:04:38] *** Quits: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de) (Quit: leaving)
[20:05:15] *** Quits: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net) (Read error: Connection reset by peer)
[20:05:30] *** Joins: bgs (~bgs@cpe-212-85-160-171.cable.telemach.net)
[20:06:15] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Ping timeout: 240 seconds)
[20:07:03] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[20:07:29] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[20:07:41] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[20:09:33] <fizzie> The bird's-eye view with sockets is that your server process would open a listening socket associated with a filesystem path name, do a blocking call to `accept` on that socket, and the result from (a successful) `accept` would be a separate, per-client socket that can be used for (bidirectionally) communicating with that particular client. So there's no possible confusion from multiple concurrent
[20:09:35] <fizzie> readers or whatnot.
[20:15:07] *** Joins: kektagen (~kektagen@173.211.12.62)
[20:15:22] <meator> fizzie: That sound interesting.
[20:18:15] *** Quits: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[20:19:07] <meator> Feuermagier: This is my (greatly simplified) FIFO approach: https://termbin.com/7t8t.
[20:19:54] <Feuermagier> meator, ah, you mean a file-fifo. alright
[20:20:30] <Feuermagier> meator, well, I'd use a socket anyway, because it seems better suited for the approach
[20:20:34] *** Joins: freddietilley (~freddieti@2a02-a454-7f89-1-b5b8-35b8-503e-988b.fixed6.kpn.net)
[20:20:38] <Feuermagier> ofc you *can* do it with a fifo
[20:20:42] <Feuermagier> or with a normal file
[20:21:00] *** Quits: constxd (~brad@142.134.79.191) (Ping timeout: 240 seconds)
[20:22:24] *** Joins: Akuli (~Akuli@82-203-164-13.bb.dnainternet.fi)
[20:23:35] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Ping timeout: 240 seconds)
[20:25:02] *** Quits: freddietilley (~freddieti@2a02-a454-7f89-1-b5b8-35b8-503e-988b.fixed6.kpn.net) (Ping timeout: 252 seconds)
[20:27:35] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 272 seconds)
[20:28:01] *** Joins: epony (epony@user/epony)
[20:29:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[20:30:43] *** Joins: tiotags (~tiotags@user/tiotags)
[20:32:34] *** Joins: Torr (~Torr@user/torr)
[20:33:49] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[20:37:42] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[20:38:05] <meator> Ok, thanks!
[20:38:22] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[20:39:57] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Quit: mikoto-chan)
[20:40:23] *** Joins: constxd (~brad@142.134.79.191)
[20:40:58] <twkm> server should close and goto the top of the loop if write results in epipe and clients if read results in eof.
[20:41:17] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[20:41:17] *** gildasio is now known as gilidasio
[20:42:32] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[20:48:49] *** Quits: unlink2 (~unlink@p200300ebcf3e190012b7094ba83de7f3.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:51:09] *** Joins: unlink2 (~unlink@p200300ebcf3e190012b7094ba83de7f3.dip0.t-ipconnect.de)
[20:54:33] *** Joins: rgrinberg (~textual@2806:101e:7:8d89:1802:de9a:e357:e4e3)
[20:55:18] *** Joins: cherrry9 (~jan@ded246.neoplus.adsl.tpnet.pl)
[20:57:01] *** Quits: unlink2 (~unlink@p200300ebcf3e190012b7094ba83de7f3.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:57:14] *** Joins: kuber (~kuber@75-172-6-223.tukw.qwest.net)
[20:57:52] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:49ba:4576:8008:625c)
[20:58:24] <pinheadmz> im trying to scan for unicode symbols in a text file. using fgetc, i hit a char with value fffffff0 which somehow does not test true for being > 0x7e ...?
[20:58:56] <pinheadmz> also, didnt think fgetc would return a 4-byte "char", i thought char was always 1 byte ?
[21:00:36] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:01:21] *** Joins: tforever (~Terabyte@85.103.104.198)
[21:02:15] *** Joins: phrix (~phrix@185.76.176.43)
[21:03:29] <koollman> pinheadmz: fgetc returns 1 char, cast as an int, or it returns EOF (which is not a char)
[21:04:33] <twkm> and it returns an int.
[21:04:58] <twkm> holding either EOF or an unsigned char.
[21:05:21] <twkm> yeah, what koollman wrote.
[21:05:30] <pinheadmz> so i have a text file with an emoji in the middle of it
[21:05:51] <pinheadmz> when fgetc hits that character it reutrns four 4-byte sequences
[21:05:58] <koollman> yes
[21:06:03] <pinheadmz> when i printf %02x
[21:06:06] <koollman> probably try to read a file with just one emoji in it to get a feel for it
[21:06:11] <pinheadmz> when I printf %d I see four negative numbers
[21:06:34] <pinheadmz> so im trying to test for pure ascii using if(c > 0x7e)
[21:06:47] <pinheadmz> and somehow these values like fffffff0 sneak past that
[21:06:52] <koollman> they are unsigned char, so you probably want to display them as unsigned something
[21:07:17] <koollman> if you store them in a signed char, the test is likely to fail
[21:07:31] *** Quits: tforever (~Terabyte@85.103.104.198) (Quit: Segmentation fault (core dumped))
[21:07:35] <pinheadmz> ah so, char = fgetc(fp)
[21:07:38] <pinheadmz> maybe isnt right?
[21:07:42] <koollman> yes
[21:07:46] <pinheadmz> er sorry char c = fgetc(fp)
[21:08:06] *** Quits: seninha (~chatzilla@user/seninha) (Remote host closed the connection)
[21:08:55] <koollman> pinheadmz: max value if the char is signed is 127, and anything higher will be negative, so not > 0x7e. use unsigned char :)
[21:09:01] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[21:10:28] <pinheadmz> ok got it thanks!
[21:10:42] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 252 seconds)
[21:11:39] <cherrry9> http://0x0.st/oPHi.c i was trying to work around warning "requires at least one variadic argument..." that appears when compiling with -pedantic -std=c99. Is it possible to suppress this somehow?
[21:12:30] *** Joins: jellie (~luv_panda@user/jellie)
[21:14:32] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bd2b-5293-8c83-b4c5.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:16:00] <twkm> you seem to want standard c99, so no.
[21:19:00] *** Joins: Akiva (~Akiva@user/Akiva)
[21:19:12] *** Joins: crashrep (~crashrep@user/crashrep)
[21:19:49] <pinheadmz> does c always read/write files in utf-8?
[21:20:44] <twkm> nope.
[21:20:45] <sham1> No. Indeed, C writes in whatever the locale is. But you can also just write bytes
[21:21:02] <twkm> not that either, unless you called setlocale.
[21:21:34] <pinheadmz> so if im scanning files using fgetc, how can i be sure ill be reading utf-8
[21:21:57] <twkm> you can't know.  you can assume.
[21:22:07] <koollman> you have no idea :)
[21:22:32] <twkm> setlocale then use fgetwc, though that still assumes.
[21:22:37] <koollman> you can ask very politely to the user "please give me only utf8" and you can try to detect some common pitfalls, but in the end ... you don't know
[21:28:12] <ChoHag> Which is to say you get what bytes you're given and can enforce strict utf-8 encoding if you wish.
[21:29:10] <ChoHag> C has some support but mostly relegates such things to libraries.
[21:30:04] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[21:31:05] *** Joins: lispy (~lispy@user/lispy)
[21:31:18] *** Joins: bnchs (~bnchs@160.177.15.129)
[21:32:21] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[21:34:10] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bd2b-5293-8c83-b4c5.res6.spectrum.com)
[21:34:43] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[21:34:57] *** Quits: fe23 (~fe23@2409:8a34:46c:f80:8400:a1cf:f0f1:cceb) (Quit: fe23)
[21:35:41] <twkm> heh, c relegates all i/o to libraries too/anyway.
[21:35:52] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[21:39:05] *** Joins: O0c (~b@216.249.151.122)
[21:39:05] *** Quits: alch (~alch@151.44.56.24) (Read error: Connection reset by peer)
[21:39:19] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[21:39:59] <O0c> I created a hello world program. I created a program that tells if a number is odd or even. I created a program that counts white spaces. What is the next program that I should make?
[21:41:06] <twkm> replace tabs with spaces.  replace spaces with tabs.
[21:41:39] <O0c> How do you know what my code looks like?
[21:42:47] *** Joins: nuxil (~nuxil@141.195.51.213)
[21:42:51] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[21:42:51] <twkm> i don't.
[21:42:59] <twkm> write those programs.
[21:43:00] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[21:43:09] <O0c> Okay.
[21:43:25] *** Joins: alch (~alch@151.44.80.228)
[21:45:08] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[21:45:20] *** Quits: nuxil_ (~nuxil@141.195.51.213) (Ping timeout: 252 seconds)
[21:45:38] <O0c> Please may I have some help with writing a program?
[21:46:46] <twkm> usually, but you have to articulate what help you need.
[21:46:51] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[21:47:12] <O0c> I'm writing a program, but I don't quite know everything to get it to work properly.
[21:47:13] *** Joins: mrig (~mrig@user/mrig)
[21:47:39] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[21:48:07] <twkm> what part is giving you trouble?
[21:48:25] *** Joins: shivesh (~shivesh@user/shivesh)
[21:48:28] <O0c> I know how to detect spaces, but I don't know how to replace then with tabs.
[21:50:36] <twkm> replace one char with another is easy, the harder part of the exercise is keep track of what column you are at.
[21:51:09] <O0c> I'm a begginer programmer. I'm doing this out of self interest. I don't have a class.
[21:52:59] <masoudd> char c = ' '; c = '\t'; space -> tab
[21:53:19] <O0c> Thank you.
[21:54:43] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[21:55:09] <O0c> Does a for loop need brackets?
[21:55:12] <twkm> you emit a tab if the spaces would take you to a tab stop column, else you emit those spaces.
[21:56:05] <twkm> some prefer them always.  some only use them if needed.
[21:56:38] <O0c> I'm almost ready to send my code to a paste bin.
[21:57:04] *** Joins: oxfuxxx (~oxfuxxx@185.216.32.156)
[21:57:30] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 268 seconds)
[21:59:42] <O0c> My program isn't giving the result I expected.
[22:00:20] <ChoHag> Don't try to make your code pretty if it's already short enough.
[22:00:37] <ChoHag> Just paste it.
[22:00:52] <ChoHag> Not *paste* it obviously.
[22:01:04] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[22:03:51] *** Quits: rgrinberg (~textual@2806:101e:7:8d89:1802:de9a:e357:e4e3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:06:15] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[22:07:31] <O0c> dpaste.com/6ZP8WULVJ
[22:07:57] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[22:08:00] *** Joins: nuh^ (~nuh@207.243.108.170)
[22:08:58] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[22:09:15] <fizzie> Ooh, a classic thing. `=` isn't the equality operator.
[22:09:32] *** Quits: oxfuxxx (~oxfuxxx@185.216.32.156) (Ping timeout: 272 seconds)
[22:09:35] <O0c> I'm sorry. Let me fix that.
[22:09:46] *** Joins: Guest3867 (~Guest@host129.190-139-78.telecom.net.ar)
[22:09:51] <masoudd> ,cc char c = ' '; printf("%d", c);
[22:09:52] <candide> masoudd: 32
[22:10:16] <masoudd> You'd be printing a bunch of numbers :)
[22:10:20] *** Joins: rgrinberg (~textual@2806:101e:7:8d89:1802:de9a:e357:e4e3)
[22:10:39] <O0c> I'm just a beginner.
[22:10:49] <masoudd> use %c instead
[22:11:08] *** gilidasio is now known as gildasio
[22:11:09] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 256 seconds)
[22:11:14] <twkm> no need for an array.
[22:12:02] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[22:12:26] <O0c> masoudd is correct. My program returns a buch of numbers.
[22:12:46] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:12:47] <twkm> you used %d.
[22:13:09] <twkm> perhaps use getchar and putchar instead of scanf and printf.
[22:13:15] <O0c> I did it.
[22:13:18] <O0c> I feel good.
[22:13:25] *** Quits: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu) (Ping timeout: 240 seconds)
[22:13:32] <masoudd> congratz :)
[22:13:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[22:14:41] <O0c> I did it with an array.
[22:14:49] <twkm> *shrug*
[22:15:02] <O0c> Does it make the code more efficient?
[22:15:03] <twkm> in that case you should provide a bound for the scanset.
[22:15:25] *** Quits: kuber (~kuber@75-172-6-223.tukw.qwest.net) (Quit: leaving)
[22:16:10] <masoudd> if you use an array you can't input a longer line than length of your array. you can read one single byte and write one single byte at a time with getchar and putchar as said before
[22:16:28] *** Joins: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu)
[22:17:09] * O0c considers taking their life
[22:17:21] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:17:30] <masoudd> oh no :(
[22:17:40] <twkm> the s is extraneous.
[22:17:44] <twkm> i.e., scanf("%99[^\n]", b).
[22:18:02] <O0c> What does the "99" mean?
[22:18:35] <twkm> it provides the maximum number of characters that will match the scanset.
[22:18:49] *** Joins: Dotz0cat (~Dotz0cat@h243.196.117.75.dynamic.ip.windstream.net)
[22:19:03] <O0c> Okay.
[22:19:05] <twkm> since you have a 100 element array scanf needs to be told to write at most 99 of them.
[22:20:16] <O0c> This is my new code.
[22:20:35] <O0c> dpaste.com/GB5ZC9494
[22:22:01] <masoudd> that works. Now consider the harder problem of replacing every consecutive 8 spaces with a single tab
[22:22:05] <ChoHag> O0c: The f in scanf/prinft is for "formatted". You are reading and writing byte-wise and doing the formatting yourself.
[22:22:12] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[22:22:42] <O0c> Okay.
[22:22:45] <masoudd> and then from there we can move up to considering columns and such
[22:22:55] <ChoHag> As twkm suggested those aren't the best functions to use and if you're learning they're just going to confuse you more than help.
[22:23:05] <ChoHag> Also FWIW I've never written code using scanf.
[22:23:21] *** Quits: Dotz0cat (~Dotz0cat@h243.196.117.75.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[22:23:56] <O0c> What does FWIW stand for?
[22:24:02] <sham1> For what it's worth
[22:24:10] *** Joins: Dotz0cat (~Dotz0cat@98.19.249.252)
[22:25:12] *** Quits: Psybur (~Psybur@mobile-166-170-32-247.mycingular.net) (Remote host closed the connection)
[22:25:20] <O0c> Thank you.
[22:25:21] <twkm> scanf can be fiddly.
[22:26:06] <ChoHag> From what I've seen of the problem you never need to consider more than the current byte at a time anyway.
[22:26:45] <sham1> If you (and I mean a generic 'you') want to use scanf, at least make it sscanf
[22:26:58] <twkm> for this problem, yes.  k&r intro chapter.
[22:26:58] <ChoHag> So buffers are a waste, you need something simple like while ((c = read(...)) != EOF) { if (c == ' ') { ... } else if (c == '\n') { ... } else { ... } }
[22:27:34] <sham1> It's less terrible there, but I personally still wouldn't use sscanf. Although it's better than nothing
[22:28:55] <O0c> Should I use putchar(); instead?
[22:29:03] <twkm> i suggest you do.
[22:29:12] <ChoHag> That looks more appropriate.
[22:29:24] <twkm> not read, that's getting another horse before your cart.
[22:29:37] <O0c> Is it okay if you look?
[22:29:50] <pragma-> wait til unicode enters the picture, what fun that'll be
[22:30:19] <ChoHag> Oh yes sorry what the one to get a char?
[22:30:28] <O0c> I need to beome a good programmer.
[22:30:34] <O0c> I need to become a good programmer.
[22:30:50] <sham1> And you will in due time if you just keep at it
[22:30:55] <O0c> Okay.
[22:31:05] <ChoHag> ... it is of course getchar(3).
[22:31:19] <O0c> What does the 3 mean?
[22:31:28] *** Joins: wlemuel_ (~wlemuel@210.22.124.110)
[22:31:29] <ChoHag> Manual section 3.
[22:31:40] <O0c> Where is this manual?
[22:31:43] <ChoHag> You can look up its docs with 'man 3 getchar' (or sometimes just 'man getchar').
[22:32:01] *** Quits: the_lanetly_052 (~the_lanet@194.135.167.54) (Ping timeout: 245 seconds)
[22:32:06] <O0c> Thank you so much.
[22:32:08] <ChoHag> It's installed with your system.
[22:32:11] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:32:25] <pragma-> sometimes.
[22:32:25] *** Quits: wlemuel_ (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:32:27] <twkm> some systems need a -s before the section specifier.
[22:32:33] <ChoHag> There are manuals online but it's best to use the installed version as the implementations vary and they're more likely to match what you have installed.
[22:32:36] <O0c> I use gentoo.
[22:32:55] <sham1> You should have the relevant manual in that case
[22:33:02] <O0c> I just realized it.
[22:34:01] <O0c> What's the difference between getc() and getchar() ?
[22:34:18] <ChoHag>      The getchar() function is equivalent to getc() with the argument stdin.
[22:34:18] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[22:34:44] <ChoHag> Dunno about your manpage but it's right there near the top.
[22:34:58] <twkm> either might be a macro though traditionally getc was more likely to be.
[22:35:15] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[22:35:19] <ChoHag> getchar is just a shortcut.
[22:35:20] <sham1> What would getc be a macro for?
[22:35:33] <sham1> I mean it does use the buffered input doesn't t?
[22:35:40] <twkm> diddling the FILE directly.
[22:35:51] <pragma-> diddling
[22:36:13] <O0c> What happens if I don't put #include<stdio.h> at the top of my program?
[22:36:21] <sham1> Diddling the FILE directly seems dangerous considering that that's them implementation details
[22:36:28] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:36:36] <sham1> O0c: you don't get the declarations of the functions and assorted structs and such
[22:36:38] <twkm> you shouldn't or can't use <stdio.h> stuff.
[22:36:47] <sham1> Sometimes you don't need stdio.h
[22:37:07] <O0c> Can you give me an example of when one wouldn't need stdio.h ?
[22:37:13] <ChoHag> Generally the manual should say which headers a function needs (and the order if that's important).
[22:37:58] <twkm> you want EOF so you can stop your getchar loop, so even if getchar doesn't need <stdio.h> for a declaration you still need EOF.
[22:38:11] *** Quits: kamarat (~kamarat@user/kamarat) (Quit: Leaving)
[22:38:20] <O0c> Does EOF stand for End Of File?
[22:38:33] <sham1> Yes
[22:38:37] <O0c> Thank you.
[22:38:38] <ChoHag> O0c: That particular header is pretty common but there are some things which don't do I/O.
[22:38:43] <sham1> See, you're getting it already!
[22:38:45] <twkm> the value returned by getchar to indicate it, yes.
[22:39:10] <O0c> What's a program that doesn't do I/O?
[22:39:44] <ChoHag> O0c: There are dozens of header files in the standard library and you'll find around 6-12 of them are in nearly everything (including stdio.h) while nothing is in absolutely everything.
[22:39:50] <sham1> Probably such a program doesn't exist, but there are plenty of situations where you don't need IO for a portion of a program
[22:40:20] <ChoHag> The trick is to slavishly follow the documentation.
[22:40:28] *** Quits: MajorBiscuit (~MajorBisc@c-001-025-058.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[22:40:35] *** Quits: Hercules (~Hercules@user/hercules) (Quit: Leaving)
[22:40:41] <ChoHag> getchar(3) says you #include <stdio.h> so you #include <stdio.h> and don't ask any questions.
[22:40:49] <O0c> Do I happen to be on topic for this channel?
[22:41:02] <sham1> Yes
[22:41:14] <O0c> What age is the best age for learning C?
[22:41:24] <ChoHag> 5.
[22:41:44] <ChoHag> Gotta use something to learn to read.
[22:41:52] <pragma-> well they didn't have computers or C before the Information Age
[22:42:09] <ChoHag> O0c: That, or now.
[22:42:27] <O0c> Is that how old you were when you started?
[22:42:28] <ChoHag> They had the C.
[22:42:42] <twkm> they had computers, and they werer shapely.
[22:43:27] <pragma-> well, I was trying to joke that the Bronze Age is probaby a bad time to learn C. Information Age apparently began around the 1970's, so yeah...
[22:43:47] *** Quits: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Ping timeout: 256 seconds)
[22:44:00] <O0c> I'm 21. Is that too late in life to learn programming?
[22:44:03] <sham1> pragma-: incidentially around C's invention
[22:44:07] <sham1> O0c: not at all
[22:44:08] <twkm> no.
[22:44:13] <sham1> Many people start in your age
[22:44:17] <O0c> Okay.
[22:44:30] <ChoHag> O0c: No but asking is a red flag.
[22:44:35] <twkm> you've been programming your whole life, just not in computer languages.
[22:44:38] *** Quits: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Ping timeout: 260 seconds)
[22:44:53] <O0c> How is asking a red flag?
[22:44:58] <ChoHag> Don't ask permission.
[22:45:06] *** Quits: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:20] <pragma-> asking why a red flag is a red flag is a red flag.
[22:45:22] <sham1> Not to forget "linear programming"
[22:45:26] <ChoHag> You don't ask the computer, you tell the computer.
[22:45:51] *** Joins: seachdamh (~seachdamh@user/seachdamh)
[22:46:10] <O0c> How have I been programming my entire life?
[22:46:43] *** Quits: seachdamh (~seachdamh@user/seachdamh) (Client Quit)
[22:47:16] *** Joins: Haxxa (~Haxxa@203-123-96-204.ip4.superloop.com)
[22:48:34] <twkm> you can type.  you likely can walk, stack boxes, sweep the floor, ... all are programs you created that your body runs.
[22:48:51] <ChoHag> To be fair, he wasn't the programmer.
[22:48:57] <ChoHag> That was God and his parents did that.
[22:49:10] <O0c> Yes. I agree with ChoHag.
[22:49:29] <twkm> parents arre only teachers, O0c had to program hirself.
[22:49:41] <O0c> I'm a man.
[22:49:47] <twkm> so?
[22:49:52] <ChoHag> The program was already there, he just had to run it.
[22:50:05] <ChoHag> That's a user not a developer.
[22:50:06] <twkm> sigh.  *whatever*
[22:50:22] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[22:50:40] <ChoHag> O0c: It's best not to fight that particular fight.
[22:50:44] *** Joins: noteness (~noteness@user/noteness)
[22:50:56] <ChoHag> It'll blow over within the decade anyway.
[22:51:04] <O0c> What particular fight?
[22:51:14] <O0c> I was agreeing with you.
[22:51:26] <ChoHag> The whole gender/pronoun thing.
[22:52:00] <O0c> I don't have social media. I don't wear pins.
[22:52:06] <ChoHag> It just derails conversations considering it. It's this century's godwin.
[22:52:58] <ChoHag> However when you carry on with programming for a while you'll see where twkm is coming from in saying you're been programming yourself.
[22:53:05] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[22:53:45] <O0c> Is that why I'm a failure in real life? I've been programming myself poorly.
[22:53:54] <ChoHag> No.
[22:54:00] <ChoHag> You're a failure in real life because you're a human.
[22:54:31] <ChoHag> Also you're still a kid so failure is the default option anyway.
[22:54:50] <O0c> I'm sorry for getting off topic.
[22:55:11] *** Joins: kts (~kts@103.73.237.49)
[22:55:47] *** Quits: justAstache (~justache@user/justache) (Ping timeout: 272 seconds)
[22:57:42] <twkm> in general i suggest using a book to learn c.
[22:58:21] <ChoHag> Interesting. I have never had much luck learning programming from books.
[22:58:30] <O0c> What's the difference between C and C# ?
[22:58:41] <ChoHag> Reference documentation on the other hand...
[22:58:54] <ChoHag> O0c: Everything. They are to all intents and purposes totally different languages.
[22:58:59] <sham1> What's the difference between C and C#? Most if not everything
[22:59:05] <sham1> The only real similarity is the syntax
[22:59:10] <sham1> And even then…
[22:59:29] <sham1> And I suppose that both are programming languages
[22:59:29] <ChoHag> Less so with C++ but you'd be better off treating them as 100% disjoint too.
[22:59:49] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[22:59:59] <koollman> (there's a sharp difference. sorry)
[23:00:10] <O0c> Do you mean that C++ is really different from C ?
[23:00:34] <ChoHag> O0c: C is Latin, C++ is French, C# is German.
[23:00:34] <sham1> Yes
[23:01:06] <tarzeau> O0c: absolutely
[23:01:11] <koollman> ChoHag: I'm not sure I agree with the difficulty level there ;)
[23:01:15] <ChoHag> Perl is Italian. Good for arguing in.
[23:01:24] <tarzeau> but it's okay to use C and Objective-C in one sentence.
[23:01:48] <ChoHag> Objective-C is Russian.
[23:01:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:02:06] *** Quits: bch (~bch@S01069050ca2cbf63.ok.shawcable.net) (Ping timeout: 272 seconds)
[23:02:11] <tarzeau> ChoHag: actually it's C but with object orientation done right
[23:02:28] *** Joins: bch (~bch@S01069050ca2cbf63.ok.shawcable.net)
[23:02:33] <ChoHag> Sorry mum.
[23:03:10] <O0c> ChoHag: What's assembly?
[23:03:16] <nomagno> The nationality of programming of languages is kinda a bonkers thing to argue about
[23:03:25] <nomagno> They're a collection of ones and zeros
[23:03:27] *** Quits: phrix (~phrix@185.76.176.43) (Quit: Leaving)
[23:03:28] <sham1> If we're going with the analogy of romance languages, objective-c could be sardinian or something
[23:03:29] <ChoHag> O0c: PIE.
[23:03:39] <nomagno> Is the water I drink Russian?
[23:03:42] <nomagno> Is it Italian?
[23:03:45] <sham1> But yeah, we're really torturing that metaphore
[23:03:52] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[23:03:56] *** Quits: rgrinberg (~textual@2806:101e:7:8d89:1802:de9a:e357:e4e3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:03:57] <ChoHag> nomagno: Does it make you want to invade your neighbours?
[23:04:01] <ChoHag> Actually no that's both...
[23:04:02] <nomagno> Oh....
[23:04:20] <nomagno> You're talking about languages, not natiobalities
[23:04:31] <nomagno> Still a bad analogy, but OMFG I'm dummy
[23:04:36] <sham1> Let's move on
[23:04:40] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[23:04:46] <O0c> What's PIE?
[23:04:48] <twkm> O0c: at this point not something to concern yourself with, but another language that isn't even defined.
[23:04:55] <ChoHag> Yeah I was definitely referring to their linguistic connection.
[23:05:01] <ChoHag> O0c: Proto-Indo-European.
[23:05:14] <ChoHag> The purpoted language spoken by all ancestors of India & Europe.
[23:05:16] *** Quits: beepbooptheory (~mik-wsl@50.216.98.94) (Ping timeout: 272 seconds)
[23:05:23] <sham1> Not all
[23:05:27] <ChoHag> FSVO
[23:05:59] <nomagno> Interesting how we can actually trace back some words to such ancient non-written languages, with any level of confidence
[23:06:10] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-bd2b-5293-8c83-b4c5.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:06:20] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Quit: WeeChat 3.4)
[23:06:21] <sham1> That's the power of statistics
[23:07:08] <twkm> O0c: at least i suggest you not try to learn some assembly while trying to learn c.
[23:07:25] <ChoHag> It depends *which* assembly.
[23:07:34] <ChoHag> Definitely don't look into the horror that is x86.
[23:07:36] <O0c> I want to make a "hello world" in assebly.
[23:08:30] <O0c> I meant assembly.
[23:08:34] <twkm> then you no longer want this channel.
[23:08:47] <ChoHag> Let your C compiler do it. Look at its output. Go "oh that's how it does it". Do not do it again.
[23:09:00] <ChoHag> Assembly 101.
[23:09:08] <O0c> What channel do you reccomend for me?
[23:09:31] <ChoHag> #asm for assembly.
[23:09:49] <ChoHag> But as a beginner you probably want to be heading in the other direction.
[23:10:08] <O0c> What's the other direction
[23:10:22] <ChoHag> Higher level languages.
[23:10:36] <ChoHag> Python and javascript are all the rage these days.
[23:11:17] <O0c> I don't understand javascript.
[23:11:45] *** Joins: oriba (~oriba@dynamic-078-055-220-151.78.55.pool.telefonica.de)
[23:11:48] <ChoHag> Maybe try the lisp or scheme direction if you don't insist on it being popular.
[23:12:01] <ChoHag> Better code, fewer jobs.
[23:12:11] <O0c> What do you mean?
[23:12:40] <ChoHag> Learning C and lisp will make you a better programmer than learning C and python, but you will get fewer job offers by knowing lisp.
[23:12:53] <O0c> Okay.
[23:13:08] <O0c> Is C the grandfather of most programming languages?
[23:13:12] <ChoHag> That's a massive generalisation of course.
[23:13:17] <ChoHag> Overgeneralisation.
[23:13:21] <O0c> I'm sorry.
[23:13:30] <ChoHag> No, what I said is.
[23:13:32] <ChoHag> And also no.
[23:13:47] <ChoHag> But many language implementations are written *in* C.
[23:13:57] <sham1> Well nowadays that's becoming less and less
[23:14:00] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:14:45] <O0c> I'm a bad programmer when it goes down to it.
[23:14:52] <ChoHag> You're 21.
[23:14:58] <O0c> Yes.
[23:15:01] <ChoHag> What did you expect?
[23:15:13] <O0c> I should have started when I was younger.
[23:15:20] * ChoHag shrugs
[23:15:25] <ChoHag> Them's the breaks.
[23:15:45] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:15:45] <ChoHag> No-one's inventing a time machine for you to go and redo.
[23:16:14] <ChoHag> You're here now so learn now.
[23:16:18] *** Joins: crashrep (~crashrep@user/crashrep)
[23:16:19] <O0c> Okay.
[23:16:43] <ChoHag> The process is simple. Write something just beyond your ability. Fix it until it works. Repeat.
[23:17:12] <O0c> Is changing 8 spaces into 1 tab just beyond my ability?
[23:17:17] <caze> A lot of languages have some shared syntax with C. But syntax is a very superficial part of a language.
[23:17:48] <ChoHag> Evidently.]
[23:18:04] <ChoHag> However that wasn't the question.
[23:18:13] <ChoHag> The question is, is it *just* beyond your ability?
[23:18:36] <O0c> Do I need to pick something more difficult?
[23:18:51] <ChoHag> Um I would say not...
[23:19:01] <O0c> Is writing an operating system just beyond my ability?
[23:19:10] <ChoHag> Very much more than just.
[23:19:26] <ChoHag> I think I can say that confidently.
[23:19:26] <O0c> Is it okay if I tell a short story.
[23:19:30] <O0c> Is it okay if I tell a short story?
[23:19:36] <ChoHag> It's not my channel.
[23:19:59] <ChoHag> If it has something to do with C it's probably OK.
[23:20:14] <O0c> This was a little while ago.
[23:20:21] <O0c> I wanted to learn some c.
[23:20:31] <O0c> I made a hello world program in c.
[23:20:54] <O0c> I made a program that tells if a number is even or odd.
[23:21:06] <O0c> I joined this irc channel.
[23:21:27] <O0c> mrus told me to write my own operating system and tell everyone about it.
[23:21:31] <O0c> The end.
[23:21:32] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[23:21:32] <ChoHag> Are you going to stop us, just sit right down, and tell us how your life got flipped, turned up-side down?
[23:21:37] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:22:10] <O0c> I think this irc channel turned my life for the better.
[23:22:19] <cthi> O0c: why is C your pick of language to learn right now?
[23:22:45] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:22:46] <O0c> I believe it to be a superior language.
[23:23:03] <ChoHag> That's a typical noob mistake.
[23:23:18] <O0c> I'm a begginner programer.
[23:23:52] <ChoHag> C is pretty hard (and pointless) if you don't already know what the machine is doing.
[23:24:02] *** Joins: strajder (~strajder@user/strajder)
[23:24:13] <ChoHag> But if you want to learn what the machine is doing it's not a bad place to start.
[23:24:21] <apotheon> I don't think I'd agree that it's pointless if you don't already know what the machine is doing.
[23:24:24] *** Lord_of_Life_ is now known as Lord_of_Life
[23:24:36] <apotheon> . . . but that does make it harder.
[23:24:45] <O0c> Have you heard of suckless software?
[23:24:49] <apotheon> yep
[23:24:59] <O0c> I use dmenu and dwm.
[23:25:07] <apotheon> I use dmenu, but not dwm.
[23:26:05] <ChoHag> apotheon: If you don't know what the machine is doing there's little point in using C, which is designed to make it do it.
[23:26:23] <ChoHag> If you want to do programming there are many much better languages for that.
[23:26:37] *** Quits: ckdCreations (~ckdCreati@147.55.133.132) (Read error: Connection reset by peer)
[23:27:01] <O0c> Do I not belong?
[23:27:03] *** Joins: ckdCreations (~ckdCreati@147.55.130.38)
[23:27:05] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[23:27:14] <apotheon> ChoHag: There's more to it than "do programming".
[23:27:33] <apotheon> It's more accurate to say that there's little point in using C if you aren't willing to learn about what the machine is doing.
[23:27:35] <ChoHag> O0c: No but yes.
[23:27:42] <phryk> I'm currently imlpementing some tests in cmocka. I just started testing some of the higher-level stuff that has some printf()s, but would like to suppress them when running the tests so they don't mess up the test output – how would I go about doing this? `#define stdout stderr` within the affected test functions?
[23:27:47] <apotheon> O0c: Don't let ChoHag chase you out.
[23:27:57] <O0c> I'm willing to learn about what the machine is doing.
[23:28:02] <apotheon> good
[23:28:11] <ChoHag> As a beginner you should probably start simpler, but on the other hand any half-decent programmer should know C.
[23:28:19] <ChoHag> And I thoroughly approve of diving in at the deep end.
[23:28:48] <ChoHag> If it's hard, you're learning right.
[23:29:10] <O0c> I like C because it's not an interpreter language.
[23:29:17] *** Joins: trav81787 (travankor@user/travankor)
[23:29:25] *** Joins: mendel_munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net)
[23:29:26] <apotheon> There's this weird cultural thing going on now where people are increasingly coming to the conclusion that understanding low-level stuff is pointless and out of date, but I think there will be a time before long where not being willing to learn the low-level stuff will expose people to significant potential harm, including possible sudden death or significant shortening of lifespan.
[23:29:27] *** Quits: travankor (travankor@user/travankor) (Remote host closed the connection)
[23:29:29] *** Joins: gce108_ (~gce@70.40.27.222)
[23:29:35] *** Joins: justAstache (~justache@user/justache)
[23:29:41] <apotheon> . . . so yeah, learn this stuff.  It may turn out to be quite bad for you to not learn it.
[23:29:45] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Remote host closed the connection)
[23:29:52] <ChoHag> apotheon: Knuth called it. TAOCP uses assembly.
[23:29:56] *** Joins: smlavine__ (~smlavine@sourcehut/user/smlavine)
[23:30:05] <O0c> What's TAOCP ?
[23:30:11] <constxd> the art of computer programming
[23:30:12] <apotheon> The Art Of Computer Programming
[23:30:14] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[23:30:14] <apotheon> a book
[23:30:21] *** Quits: jgart (16dd2205e4@irc.cheogram.com) (Ping timeout: 245 seconds)
[23:30:30] *** Joins: jgart (16dd2205e4@irc.cheogram.com)
[23:30:34] <constxd> O0c: what does that even mean? (the interpreted language remark)
[23:30:35] <sham1> A legendary book even
[23:30:57] * sham1 mumbles something about languages not being interpreted
[23:31:03] <apotheon> constxd: I'm guessing O0c means "because it doesn't require a separately installed runtime".
[23:31:04] <ChoHag> I do seriously hope he finishes it before he dies
[23:31:17] *** Quits: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net) (Ping timeout: 250 seconds)
[23:31:25] <O0c> Python is an interpreted language. It isn't compiled before running.
[23:31:26] <ChoHag> For us of course, but also how would you feel if you started that and died before it was done?
[23:31:29] *** Quits: gce108 (~gce@user/gce108) (Ping timeout: 252 seconds)
[23:31:30] <ChoHag> Poor guy.
[23:31:31] <apotheon> Game Of Codes; eventually abandoned
[23:31:42] <constxd> O0c: ACKSHUALLY
[23:31:51] *** Joins: gproto23 (~gproto23@user/gproto23)
[23:32:03] <constxd> u activated my trap card
[23:32:07] <ChoHag> O0c: Sorry but the distinction is beyond your ken at this time.
[23:32:11] <apotheon> I mean C doesn't require a separately installed runtime to *run a program*.
[23:32:12] <phryk> ChoHag: inb4 jit
[23:32:14] <O0c> Is python both?
[23:32:33] <ChoHag> phryk: CPU microcode.
[23:32:38] <phryk> s/ChoHag/constxd/
[23:32:42] <ChoHag> Oh.
[23:33:02] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[23:33:18] <phryk> ChoHag: Oh god, I'm still very much a noob in C but just the mention of CPU microcode gives me the creeps.
[23:33:26] <apotheon> O0c: The technical distinctions between "interpreted" and "compiled" have been muddied over time.
[23:33:32] <constxd> Python is a language. The interpreted/compiled doesn't really apply to it, but to implementations of it. The popular implementations of Python (CPython and PyPy) both compile the Python source code before interpreting it
[23:33:36] <phryk> Tho it'd be badass if it was FOSS and you could just run your own instruction set on your machines…
[23:33:42] <ChoHag> And the practical distinction is moot.
[23:34:08] <apotheon> constxd: see above, re: not requiring the installation of additional software to run a program, though
[23:34:18] <apotheon> I think that's what O0c is really trying to address.
[23:34:28] <O0c> Is it possible to run a  c program without compiling it first?
[23:34:31] <apotheon> You have a source file and hand it off to another program.
[23:34:35] <apotheon> at runtime
[23:34:35] <constxd> O0c: yes
[23:34:42] <tarzeau> O0c: look at tcc
[23:34:43] <apotheon> O0c: sorta
[23:34:52] <tarzeau> it's interpreting C
[23:34:54] <ChoHag> What do you mean by "compile"?
[23:34:57] *** Quits: magla (~gelignite@55d47d67.access.ecotel.net) (Quit: Stay safe!)
[23:35:07] <O0c> cc b.c -o b
[23:35:19] <tarzeau> it even supports #!/usr/bin/tcc -run
[23:35:22] <ChoHag> Every program is run in that way.
[23:35:37] <ChoHag> foo is shorthand for /somewhere/ld.so /path/to/foo.
[23:35:44] *** Joins: unlink2 (~unlink@p200300ebcf3e190012b7094ba83de7f3.dip0.t-ipconnect.de)
[23:35:46] <apotheon> I don't know of a Python implementation that allows you to carry around an ELF binary for direct execution as if you'd written software in C and compiled it with Clang.
[23:35:48] <ChoHag> Or some variation thereof.
[23:35:55] *** Quits: bebyx (~Thunderbi@user/bebyx) (Read error: Connection reset by peer)
[23:36:07] <constxd> This is just a classic case of somebody romanticizing C due to its legacy
[23:36:10] <apotheon> . . . though there might be a Python implementation or two that cold somehow translate it into C.
[23:36:13] *** Joins: bebyx (~Thunderbi@user/bebyx)
[23:36:19] <ChoHag> So I ask again: What do you mean by "compile"?
[23:36:22] <apotheon> probably not a full implementation
[23:36:39] <sham1> apotheon: cyton
[23:36:49] <strajder> C > Python, btw this is #c not #python
[23:37:01] <constxd> People who appreciate minimalism tend to gravitate toward C and suckless etc.
[23:37:08] <ChoHag> It would not be particularly hard to write a shell script which invoked a C compiler and ran its output on a source file every time it was invoked.
[23:37:19] <apotheon> sham1: Do you mean Cython?
[23:37:21] <sham1> Yes
[23:37:25] <sham1> I typoed
[23:37:28] <ChoHag> Then you have the #!/usr/bin/cc equivalent of #!/bin/sh
[23:38:08] <sham1> And of course we have other languages that do give you just a straight binary while being "interpreted", like for example the SBCL implementation of Common Lisp gives you the ability to have a stand-alone Lisp program
[23:38:22] <apotheon> sham1: I'm not sure that does what I described (translating an arbitrary whole Python program into C).
[23:38:28] <sham1> Well, standalone in that it gives you an executable with the SBCL core and the Lisp code in it
[23:38:37] <apotheon> s/an abitrary/any arbitrary/
[23:38:56] <sham1> apotheon: true, it's not "any arbitrary" because Cython requires special stuff, but then again that's not something that couldn't be done
[23:39:04] <apotheon> sure
[23:39:11] <apotheon> I was just talking about whether it has been done.
[23:39:54] *** Joins: mendel_munkis_ (~mendel_mu@ool-ae2cb229.dyn.optonline.net)
[23:39:57] *** Quits: mendel_munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net) (Remote host closed the connection)
[23:40:00] <ChoHag> O0c: You shouldn't learn C because "it's a 'better' language" for some spurious version of better. If you want to learn C it should be because you want to learn C.
[23:40:00] *** Quits: lonjil (~quassel@user/lonjil) (Remote host closed the connection)
[23:40:24] <ChoHag> If you want to learn programming then C should definitely be a goal but is definitely a hard place to start.
[23:40:27] *** Quits: nathanael (~nathanael@user/nathanael) (Ping timeout: 256 seconds)
[23:40:38] <O0c> I don't know what to do.
[23:41:06] <constxd> learn C
[23:41:07] <apotheon> It'd be an easier place to start if not for the fact pretty much every learning resource tries to insulate new students of the language from pointers.
[23:41:08] <constxd> it's based
[23:41:08] *** Joins: lonjil (~quassel@user/lonjil)
[23:41:15] *** Quits: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee) (Ping timeout: 250 seconds)
[23:41:26] <ChoHag> Find a small problem with the way you use your computer and strive to write a program to fix it.
[23:41:29] <apotheon> Instead, it should make pointers ubiquitous parts of the experience from day one.
[23:41:29] <strajder> O0c: read documentation, make programs in C
[23:41:31] <phryk> O0c: if you want a compiled language thats kinda like C, kinda like C++ but foregoes much of the pain while keeping ABI compatibility (i.e. you can use C libraries), you might want to have a look at https://dlang.org
[23:41:32] <candide> Title of phryk's link: Home - D Programming Language
[23:42:02] <apotheon> O0c: If you want practice projects, try reimplementing simple Unix userland programs, like echo and wc.
[23:42:02] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[23:42:11] <constxd> based
[23:42:39] <strajder> just have fun programming; if that doesn't sound compelling enough for you, then don't
[23:42:41] <ChoHag> O0c: What do you want to know?
[23:42:49] <constxd> just make sure if u get stuck u dont look to the GNU implementations for inspiration
[23:43:01] <apotheon> O0c: I'd also recommend reading OpenBSD manpages for C library functions.  They'll help you avoid some pitfalls, including some functions that you really shouldn't use, generally.
[23:43:06] *** Quits: kubrickdave (~kubrickda@80-121-15-46.adsl.highway.telekom.at) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[23:43:08] *** Quits: Exa (exa@irc.moe) (Quit: see ya!)
[23:43:10] <O0c> I'm overwelmed.
[23:43:19] *** Joins: kubrickdave (~kubrickda@80-121-15-46.adsl.highway.telekom.at)
[23:43:19] <apotheon> If you're about to use a C library function for the first time, look up the OpenBSD manpage for it.
[23:43:20] <ChoHag> O0c: Good.
[23:43:23] <ChoHag> Good start.
[23:43:26] <constxd> listen kid
[23:43:35] <constxd> get a copy of K&R
[23:43:36] <apotheon> Oh, yeah, *NEVER* read GNU implementations for inspiration.
[23:43:47] <apotheon> holy fuck GNU
[23:43:50] <constxd> just focus on getting through K&R
[23:43:55] *** Joins: Exa (exa@irc.moe)
[23:43:55] <ChoHag> Now consider all the things which are overwhelming you and figure out which one all the others depend on.
[23:43:56] <constxd> good foundation
[23:44:07] <apotheon> OpenBSD implementations tend to be good.
[23:44:18] <O0c> I give up.
[23:44:21] <apotheon> har
[23:44:31] <apotheon> C isn't hard to write.  It's just hard to write well.
[23:44:34] <ChoHag> Giving up is not an option.
[23:44:39] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 256 seconds)
[23:44:40] <apotheon> sheesh
[23:44:40] <constxd> O0c: don't give up we need you
[23:44:42] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 252 seconds)
[23:44:50] <constxd> read K&R
[23:44:59] <greeb> my 2c, you shouldn't be wanting to learn how to program in a vacuum. Programming is a skill used to solve problems. If you don't have a problem to solve, you're going to probably hate programming.
[23:45:20] <O0c> How do I write games in C ?
[23:45:24] <ChoHag> Don't.
[23:45:24] <constxd> LMAO
[23:45:27] <greeb> what
[23:45:36] <DPA> K&R is long outdated.
[23:45:42] <sham1> I disagree. Programming can be intrinsically motivated although it is often done for a purpose, for example and including, writing games
[23:45:43] <phryk> O0c: step 1) grow wizard beard over 20 years.
[23:45:53] <strajder> excellent start
[23:46:08] <constxd> DPA: could use a 3rd edition for sure but still there's no real replacement
[23:46:24] <constxd> it's still highly relevant
[23:46:32] <constxd> the exercises are great
[23:46:33] <sham1> constxd: Learn C the hard way
[23:46:35] * sham1 runs
[23:46:46] <phryk> O0c: If you want to do gamedev, have a look at https://godotengine.org it has a high-level scripting language (GDScript) that you can start learning programming with (very python-like) but you can integrate C++, python and most other languages into it.
[23:46:49] <candide> Title of phryk's link: Godot Engine - Free and open source 2D and 3D game engine
[23:46:50] <ChoHag> O0c: You're going into a steel foundry and asking how to make a formula 1 car.
[23:47:01] <greeb> ^^^^\
[23:47:07] *** Joins: Enitin (~Enitin@82.180.145.230)
[23:47:31] <DPA> O0c: Look into OpenGL. Or Vulkan, but that's more setub before yo uget anything.
[23:47:31] <DPA> Start with some triangle example, and then keep adding stuff. That's how I started programming.
[23:47:43] <O0c> I meant text based games.
[23:47:54] <DPA> Oh, that's simple.
[23:47:57] <ChoHag> Learn perl.
[23:47:59] <twkm> hah.
[23:48:00] *** Joins: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee)
[23:48:09] <sham1> Well it's not "simple", you still need to understand things like finite state automata
[23:48:20] <goodfella> caze: are you here ?
[23:48:21] <sham1> However, at least then one needn't think about graphics
[23:48:23] <phryk> O0c: I can't recommend Godot enough, especially for newcomers. If you want to do, like, 3D programming which is mathy wizard stuff, you don't want to have to deal with learning something as arcane as C at the same time.
[23:48:23] <ChoHag> If you want to do text processing to learn programming, learn perl.
[23:48:33] <strajder> as with any other problem, creating games requires good organization and planning
[23:49:05] <constxd> Are we talking *text* or just 2d graphics in a terminal emulator?
[23:49:16] *** Quits: gce108_ (~gce@70.40.27.222) (Quit: Leaving)
[23:49:35] <constxd> If you want like text adventure shit then use Perl (or Ty if you're based)
[23:49:38] <ChoHag> Perl is basically the last word in text processing.
[23:49:50] <O0c> Have you heard of the game "Dopewars"?
[23:50:02] <phryk> Classic.
[23:50:04] <constxd> If you want roguelike-style graphics then look at ncurses
[23:50:16] *** Joins: gce108 (~gce@user/gce108)
[23:50:27] <strajder> I had programming as one of the subjects in uni, in the first year we used Pascal, in the second year C++; one of the assignments on the exam was to create a game with specific rules
[23:50:38] <DPA> First, look at the control structures, if, while, for, switch. Also check out fread, fwrite, fprintf, fscanf & strcmp. Then, just print out stuff and read & interpret stuff as needed.
[23:50:46] <ChoHag> O0c: I was playing dopewars while you were still swimming around in a testicle.
[23:51:27] <strajder> part of what the assignment tested was the ability to think beyond "how will I create graphics", because the game featured textual representation of characters a la dungeon
[23:51:32] <phryk> ChoHag: are you already tripping over your wizard beard?
[23:51:43] <ChoHag> Shaved it off. It got in the way.
[23:51:57] <ChoHag> Chicks don't dig beards any more.
[23:52:06] <O0c> Why?
[23:52:11] <sham1> Did they ever
[23:52:13] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[23:52:23] *** Quits: Ap3 (~ape@kanonenjagd.panzer.ninja) (Ping timeout: 252 seconds)
[23:52:45] <constxd> They do, just not ones longer than ~14mm
[23:52:57] *** Quits: phundrak (~phundrak@82-65-91-105.subs.proxad.net) (Ping timeout: 250 seconds)
[23:53:05] <constxd> Well black dudes can pull off longer beards
[23:53:10] <constxd> Like Harden
[23:53:23] *** Quits: AStorm (astralstor@bc01n02.hswaw.net) (Ping timeout: 250 seconds)
[23:53:23] <O0c> Call me Harden.
[23:53:36] *** Joins: nuxil (~nuxil@141.195.51.213)
[23:53:40] *** Joins: phundrak (~phundrak@82-65-91-105.subs.proxad.net)
[23:53:44] *** Joins: Ap3 (~ape@kanonenjagd.panzer.ninja)
[23:53:50] <goodfella> Harden
[23:53:58] *** Quits: akuma (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[23:53:58] <O0c> I am a squad.
[23:54:03] <goodfella> you are
[23:54:39] <twkm> ugh.
[23:54:47] <O0c> I'm sorry.
[23:54:51] <sham1> This has turned into shitposting
[23:54:54] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[23:55:02] *** Quits: nuxil_ (~nuxil@141.195.51.213) (Ping timeout: 240 seconds)
[23:55:55] <constxd> can anybody name someone grumpier than twkm
[23:56:01] <constxd> christ
[23:56:03] <O0c> No.
[23:57:20] <apotheon> I'm pretty sure Christ could do it, if he tried.
[23:57:29] <O0c> I hate myself. Goodbye.
[23:57:31] <phryk> O0c: by the way, it's totally normal to be overwhelmed. nobody understands modern computers anyhow. they've gotten way too complex. even fully understanding an old 8-bit computer is serious wizard shit that maybe half a dozen people on the planet can realistically claim being able to do.
[23:57:32] *** Parts: O0c (~b@216.249.151.122) ()
[23:57:36] <phryk> aw
[23:57:38] <phryk> :<
[23:58:26] *** Joins: Torr (~Torr@user/torr)
[23:59:31] <sham1> :(
