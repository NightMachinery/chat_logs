[00:01:00] <ki9a> so from a com perspective, all winrt interface are based on IInspectable, not IUnknown?
[00:01:11] <ki9a> (where IInspectable is IUnknown ofc)
[00:01:13] *** Quits: Guest65 (~Guest65@2a02:c7f:582d:5100:19e6:2f1a:6de7:c6ac) (Quit: Client closed)
[00:01:38] <MatthiasVance> Raymond Chen often writes about that
[00:02:26] <MatthiasVance> ki9a: Just an example, this will probably not help you: https://devblogs.microsoft.com/oldnewthing/20220324-00/?p=106381
[00:02:36] *** Joins: Guest65 (~Guest65@2a02:c7f:582d:5100:19e6:2f1a:6de7:c6ac)
[00:04:39] <ki9a> yeah
[00:04:41] <ki9a> thanks
[00:05:44] <jonp> not quite sure how today's blog post is related to IInspectable directly…
[00:06:05] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[00:06:27] <ki9a> not really; now I'm 99% certain I'm "right"
[00:06:36] <ki9a> but I think the winmd dlls contain this info somehow
[00:06:47] <ki9a> but the docs on how that's encoded is a bit lacking
[00:07:20] <jonp> which reminds me, i still need to write some release notes…
[00:09:12] <ki9a> looks like the winuicontract attribute defines this
[00:09:26] <ki9a> [ContractVersion(typeof(WinUIContract), 65536u)]
[00:10:15] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Changing host)
[00:10:15] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[00:17:22] *** Joins: __gandhibobandhi (~gandhibob@ip-130-180-122-050.um40.pools.vodafone-ip.de)
[00:29:33] *** Quits: Guest65 (~Guest65@2a02:c7f:582d:5100:19e6:2f1a:6de7:c6ac) (Quit: Client closed)
[00:34:51] *** Joins: Guest65 (~Guest65@2a02:c7f:582d:5100:19e6:2f1a:6de7:c6ac)
[00:40:53] <MatthiasVance> Dean: You might want to change authentication to happen before you join channels, or use SASL :)
[00:41:06] <MatthiasVance> *or better yet, use SASL
[00:41:23] <MatthiasVance> (because only after authenticating your host is masked)
[00:45:38] *** Joins: varaindemian_ (uid73404@id-73404.ilkley.irccloud.com)
[00:46:28] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Read error: Connection reset by peer)
[00:46:28] *** varaindemian_ is now known as varaindemian
[00:50:48] *** Quits: Jong (~Jong@2620:10d:c090:400::5:7a46) (Ping timeout: 260 seconds)
[00:55:43] *** Quits: lz_ (l@gateway/vpn/protonvpn/lz/x-63480406) (Ping timeout: 260 seconds)
[00:56:18] *** Joins: lz_ (l@gateway/vpn/protonvpn/lz/x-63480406)
[00:59:21] *** Quits: Assault (~Assault@87-95-118-72.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[01:03:24] *** Quits: GunArm (~barrett@firewall.mitsi.com) (Read error: Connection reset by peer)
[01:03:26] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[01:03:46] *** Joins: GunArm (~barrett@firewall.mitsi.com)
[01:04:07] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Ping timeout: 260 seconds)
[01:06:45] *** Quits: GunArm (~barrett@firewall.mitsi.com) (Read error: Connection reset by peer)
[01:08:09] *** Quits: bomb (~bomb@user/bomb) (Quit: o/)
[01:08:33] *** Joins: GunArm (~barrett@firewall.mitsi.com)
[01:11:58] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[01:19:49] *** Joins: Jong (~Jong@2620:10d:c090:400::5:7a46)
[01:21:00] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[01:36:43] *** Quits: Guest65 (~Guest65@2a02:c7f:582d:5100:19e6:2f1a:6de7:c6ac) (Quit: Client closed)
[01:37:34] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[01:43:01] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:48:12] <lz_> i got bruises everywhere :o
[01:48:57] <Suchiman> lz_: i'd recommend less kickboxing
[01:52:56] <lz_> Suchiman: actually there are classes where things are even more brutal and I want to go to them too :) I'm afraid I could get hurt and have to stop everything though, that would be very bad
[01:53:40] <lz_> at least they wear protections
[02:06:31] *** Joins: GunArm1 (~barrett@2600:380:9b58:7cf1:21d8:ec3b:b008:39)
[02:08:57] *** Quits: GunArm (~barrett@firewall.mitsi.com) (Ping timeout: 240 seconds)
[02:18:46] <lz_> still wanna get drunk though
[02:19:09] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[02:22:35] *** Joins: Guest65 (~Guest65@2a02:c7f:582d:5100:19e6:2f1a:6de7:c6ac)
[02:27:01] <lz_> rip GIF guy
[02:28:20] <lz_> must be been amazing to have his legacy be so big and last so long
[02:36:10] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[02:36:16] *** Joins: sysRPL (~sysRPL@097-101-210-085.res.spectrum.com)
[02:37:50] *** Joins: GunArm (~barrett@firewall.mitsi.com)
[02:39:46] <blezz> lz_ it's "JIF"
[02:39:50] *** Quits: AbleBacon_ (~AbleBacon@user/AbleBacon) (Client Quit)
[02:40:57] *** Quits: GunArm1 (~barrett@2600:380:9b58:7cf1:21d8:ec3b:b008:39) (Ping timeout: 240 seconds)
[02:41:53] <blezz> "he must be with Jod now"
[02:44:28] *** Joins: Tazmainian (~Tazmainia@2001:1c02:170b:3d00::1016)
[02:45:02] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 272 seconds)
[02:48:39] *** Quits: Tazy (~Tazmainia@2001:1c02:170b:3d00::1012) (Ping timeout: 260 seconds)
[02:52:14] *** Joins: GunArm1 (~barrett@firewall.mitsi.com)
[02:52:38] *** Quits: GunArm (~barrett@firewall.mitsi.com) (Read error: Connection reset by peer)
[02:53:11] *** Joins: Dean (~Dean@165-73-119-36.ip.afrihost.capetown)
[02:56:04] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Changing host)
[02:56:04] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[02:56:40] <Dean> thank you MatthiasVance
[02:57:08] <irwiss> lz_: imo it's more sad to have browsers have stagnated image formats as badly as they did
[02:57:32] <irwiss> even webp is still not properly usable as apple sucks dick and you need fallback
[02:58:08] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:00:10] *** Quits: GunArm1 (~barrett@firewall.mitsi.com) (Quit: Leaving.)
[03:00:17] *** Joins: GunArm (~barrett@firewall.mitsi.com)
[03:01:16] <sysRPL> today i went for the first time to my county school system surplus center, and my county school system isn't that big
[03:02:03] <sysRPL> they had rows of big honking pallets of optiplex sff core 2 duo desktops, and dell all in ones core 2 duo desktop that they are paying someone to haul way as garbage
[03:07:53] <Nasp> So a previous collegue have copied some code from his time working here
[03:08:03] <Nasp> Put it on nuget and open on github, why
[03:08:21] <Suchiman> Nasp: smort
[03:12:27] *** Joins: k8yun (~k8yun@user/k8yun)
[03:15:01] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[03:20:45] <Nasp> Suchiman:  Atleast replace the company name everywhere with your own
[03:21:02] <Nasp> And dont put it fucking public
[03:24:48] <brianonymous_> lol, for real? are they coming after him?
[03:30:52] <Nasp> I dunno its just setup of like AspNetCore
[03:31:03] <Nasp> I remember he copied it while working here and i said it might be a bad idea
[03:31:05] <Nasp> Then put it on nuget
[03:34:57] *** Joins: Forgetwrk_Lion (~Foli@220-244-3-190.tpgi.com.au)
[03:38:16] *** Parts: SAMSUNG (~SAMSUNG@user/SAMSUNG) (Leaving)
[03:40:18] *** Quits: DoofusCanadensis (~DoofusCan@207.229.38.10) (Quit: So as you can see from this flowchSQUIRREL!!)
[03:46:46] *** Quits: Guest65 (~Guest65@2a02:c7f:582d:5100:19e6:2f1a:6de7:c6ac) (Quit: Client closed)
[03:47:06] <JakeSays> lol i saw a picture of the world leaders in brussels. everyone was looking all professional like.. except for boris johnson. he looked like he just woke up from sleeping in his suit all night.
[03:48:44] <blezz> as usual
[03:48:59] <Nasp> Doesn't he always does that
[03:49:03] <Nasp> That out of control hair
[03:49:09] <blezz> I hope this isn't what WW3 starts like
[03:50:20] <JakeSays> https://www.washingtonpost.com/wp-apps/imrs.php?src=https://arc-anglerfish-washpost-prod-washpost.s3.amazonaws.com/public/K2JDG5VLKYI6ZCUOTRXJ7R5A3Y.jpg&w=916
[03:51:08] <JakeSays> blezz: i dont think it matters how ww3 starts.
[03:51:13] *** Quits: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Excess Flood)
[03:51:14] <bpmedley> sysRPL : How many systems did you get away with?
[03:51:32] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[03:52:44] <blezz> JakeSays "we gonna stand strong against russia", cool photo, then in 2 days nuclear war
[03:53:08] <bpmedley> Nasp : People do exceptionally odd things at times
[03:55:54] <Nasp> Well was agood collegue and friends and i still talk to him
[03:56:08] <Nasp> Worst part is, i think the piece of code they are refering to is one i shared with him after he quit
[03:56:19] <Nasp> And it's like public class AllowAllAttribute : Attribute
[03:57:27] <bpmedley> And the company name was left intact?
[03:57:54] <Nasp> Yes
[03:58:06] <Nasp> I usually remove that when sharing snippets
[03:58:09] <bpmedley> How frustrating
[03:58:22] <Nasp> Oh well lets see what happens tomorrow, not like it can get any worse anyways
[04:04:07] <teegee> I wonder how many satellites the US have in space that can laser zap a nuke in flight
[04:04:58] <teegee> / on boats
[04:05:11] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Quit: Lost terminal)
[04:06:01] <Nasp> None
[04:06:21] <Nasp> Lasers aren't really useful for that
[04:07:22] <lz_> I wonder how powerful a laser you need to take down satellites
[04:07:56] <lz_> I guess the difficult part is the tracking system
[04:08:22] <Nasp> More powerful than is practical
[04:08:31] <lz_> I also wonder what's the % of power the satellite would receive if you shine a laser from the ground
[04:08:48] <Nasp> If the missile rotates you need even more power, if it's coated in a reflective surface even so
[04:09:01] <bpmedley> teegee : https://www.youtube.com/watch?v=MmkYcEcSLvA <-- Something like this?
[04:09:06] <lz_> Nasp: yeah I'm only focused on satellites :) nukes are too fast for some home laser anyway
[04:10:47] <JakeSays> Nasp: dont be so sure of that
[04:10:54] <Suchiman> JakeSays: gets even better
[04:11:31] <lz_> I'm afraid of googling "can you take down a satellite with a laser" and end up on some list
[04:11:32] <JakeSays> Suchiman: what does?
[04:11:32] <Suchiman> JakeSays: https://twitter.com/tradasro/status/1506923395765653510
[04:12:04] <Suchiman> JakeSays: and this one in particular xD https://twitter.com/ukiswitheu/status/1506933311331270659
[04:12:58] <JakeSays> Suchiman: weird. that first link won't come up.
[04:13:11] <Suchiman> JakeSays: huh
[04:13:21] <JakeSays> i just get a white page with the twitter bird in the center
[04:13:43] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[04:13:45] <JakeSays> interesting. it works in edge
[04:14:10] *** Joins: biberu (~biberu@user/biberu)
[04:14:16] <JakeSays> lol he's an odd duck
[04:14:25] <Nasp> JakeSays:  That i can just coat a missile in a reflective surface
[04:14:30] <Nasp> OR that lasers aren't practical?
[04:15:28] <JakeSays> Nasp: the latter
[04:16:27] <lz_> https://youtu.be/WAI7Lu4UFi4?t=310
[04:16:39] <Cecen> Any idea why MVC is redirecting every unauthenticated request to the configured OAuth provider when the server is run locally?
[04:16:41] <lz_> imagine this on a geo stationary satellite
[04:16:57] <bpmedley> Cecen : A lot hinges on the startup.cs options
[04:17:01] <Nasp> JakeSays:  You need quite a lo of power
[04:17:12] <Nasp> lz_:  That's very little power
[04:17:43] <lz_> Nasp: if it can burn through some metal in some minutes that's all you need though
[04:18:57] <Nasp> That is very close range, imaging needing to do this on kilometer range through hardened heat resistant steel
[04:19:57] <lz_> Nasp: lasers don't care about range, except for the stuff in the air; hence the question about the % of power you get I asked earlier
[04:20:43] <lz_> if it's a significant % and if you can aim it right then boom
[04:20:53] <JakeSays> Nasp: yup, but that's not a hard thing to do
[04:21:13] <brianonymous_> im pretty sure we have a test plane that can laser zap missles
[04:21:19] <lz_> what the dude is doing looks highly illegal though :D
[04:21:28] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[04:21:32] <JakeSays> brianonymous_: we do. see bpmedley's link above
[04:21:39] <brianonymous_> oh, lol
[04:21:39] <JakeSays> but we have a lot more than that
[04:21:40] <lz_> brianonymous_: I think I remember those laser airplanes aren't developed/used anymore
[04:22:08] <JakeSays> lockheed is developing laser pods for fighters that will knock down missiles
[04:22:30] <brianonymous_> the thing with the hypersonic ones.. man, all it would take is a handful of pennies to ef those things all up
[04:23:02] <brianonymous_> you just gotta find em in time
[04:24:16] <JakeSays> how fast is considered hypersonic
[04:24:24] <brianonymous_> mach 5+?
[04:24:38] <brianonymous_> yeah
[04:25:11] <JakeSays> so ~3800mph+
[04:25:52] <brianonymous_> i feel like i heard russias hypersonics are around mach 9
[04:26:38] <Nasp> JakeSays:  Stil lsure if it was easy we would have seen more laser weaposn and ships
[04:26:41] <Nasp> And guess what, we havent
[04:26:52] <JakeSays> Nasp: that you know of
[04:27:20] <brianonymous_> we have seen experiements with rail guns, i wonder if they think thats a better option
[04:27:38] <JakeSays> space based lasers have been controversial for decades, so it wouldn't surprise me at all if we have them but dont talk about it
[04:28:00] <Nasp> The most impressive thing about those railgun demos is that it looks like they use explosives, but it's just the air being set on fire by friction and the speed of the bullet :D
[04:28:04] <JakeSays> Nasp: and no one said it was easy
[04:28:14] <brianonymous_> nasp: yeah!!
[04:28:42] <JakeSays> we use rail guns to launch fighters
[04:29:00] <Nasp> Are you thinking aircraft carriers?
[04:29:05] <JakeSays> yes
[04:29:11] <Nasp> I dont think those are in service yet
[04:29:19] <brianonymous_> "Therefore, typical military railgun designs aim for muzzle velocities in the range of 2,000–3,500 m/s (4,500–7,800 mph; 7,200–12,600 km/h) with muzzle energies of 5–50 megajoules (MJ)."
[04:29:20] <brianonymous_> dang
[04:29:28] <Nasp> But next gen aircraft carries will get digital catapults :D
[04:29:31] <brianonymous_> i bet thats a lot of very, very large capacitors
[04:29:59] <Nasp> If you got the reference JakeSays
[04:30:34] <brianonymous_> oh, lots of articles saying the US abandoned railgun tech
[04:31:26] <Nasp> https://www.youtube.com/watch?v=pIDv1fzS6Hw
[04:33:23] <JakeSays> Nasp: we do have a carrier with a rail gun launcher
[04:34:58] <JakeSays> brianonymous_: yeah
[04:37:07] <Nasp> JakeSays:  Yes but only on one
[04:37:09] <Nasp> It's quite new
[04:37:43] <JakeSays> "yes but only one" - it only takes one
[04:38:08] <Nasp> Digital catapults
[04:38:18] <Nasp> I wonder if you can dial the launch force up too much
[04:38:23] <Nasp> Whoops
[04:38:37] <lz_> whoops, accidentally dug a hole in earth sorry
[04:39:22] <brianonymous_> heh, launches the ship backwards
[04:39:41] <brianonymous_> airplane falls in water
[04:40:07] <JakeSays> the railgun launcher is a digital catapult
[04:44:46] <JakeSays> i think it'd be so cool to buy a decommissioned aircraft carrier and turn it in to a yacht
[04:48:16] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[04:48:52] <brianonymous_> its all fun and games til you fill the tank
[04:50:14] <Nasp> Especially at the current prices
[04:50:47] <JakeSays> brianonymous_: they're nuclear powered
[04:51:11] <JakeSays> well, the one i'd want would be
[04:51:18] <JakeSays> it's only fun if it glows
[04:52:02] <Nasp> How much do you earn on your dev position again?
[04:52:12] <brianonymous_> when i worked at the naval acedemy, for the first full year, i had no idea that my office was 1000 feet from an active training reactor
[04:52:13] <Nasp> I must be underpaid if you can buy a nuclear powered aircraft carrier
[04:52:23] <Nasp> By like factor 10000000
[04:52:26] <JakeSays> the USS enterprise was decommissioned. wonder if it's available.
[04:52:36] <JakeSays> brianonymous_: lol
[04:52:44] <Nasp> Engage!
[04:53:34] <JakeSays> i'd name her the "Big E"
[04:55:29] <JakeSays> see, if those billionaires with their $500MM yachts were cool, they'd refurb a carrier, dammit
[04:57:50] <JakeSays> of course there's always the risk that the ruski's would mistake it for a real carrier
[04:58:21] <Nasp> Sail to to Crimea and see what happens
[05:00:33] *** Quits: Tazmainian (~Tazmainia@2001:1c02:170b:3d00::1016) (Quit: Leaving)
[05:05:03] *** Quits: Arokh (~MoveAlong@ip-088-153-209-030.um27.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[05:05:16] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[05:07:38] <JakeSays> you guys ever used a theorem solver?
[05:13:40] <Nasp> What's that
[05:15:19] <sysRPL> i i said earlier today i went for the first time to my county school system surplus center, and my county school system isn't that big
[05:15:50] <Nasp> What's that
[05:16:12] <sysRPL> they had rows of big honking pallets of optiplex sff core 2 duo desktop computers and dell all in ones core 2 duo desktop computers and they are pay someone to haul them away as garbage to grind into bits of metal and plastic
[05:17:11] <sysRPL> and think about this ... the situation i described above happens in every county in every state all across the usa
[05:17:21] <sysRPL> it's such a waste
[05:18:15] <sysRPL> i blame republican politicians for the problem
[05:19:20] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970::fb)
[05:19:21] <Nasp> Usually cheaper than to sell it real
[05:20:00] <sysRPL> they don't sell the computer because they are worried about someone getting their hands on personal information off these computers
[05:20:52] <sysRPL> rather than remove the hard drives and finding  a way to wipe / destroy them, then just have a cerified disposal company grind everything up into little pices, computers, monitors, everything
[05:21:32] <sysRPL> i talked to the guy who runs the public school surplus facility for quite some time today
[05:21:34] *** Joins: Lazenca (~lazenca@user/lazenca)
[05:22:09] <sysRPL> and that's just for this county, which isn't that terribly large
[05:22:26] <sysRPL> imagine jacksonville or dade counties
[05:23:23] <sysRPL> some linux group needs to get together with the school board
[05:23:56] <sysRPL> they are grdining up computers because they `need` windows 11 computers and the most recent versions of photoshop
[05:24:33] *** Joins: Arokh (~MoveAlong@ip-088-153-209-030.um27.pools.vodafone-ip.de)
[05:24:58] <sysRPL> when they could be using linux, gimp, vs code, cura, freecad, open office, and blender ... without the need to throw all their computers away
[05:26:17] <maroon> try blaming the sue-happy lawyers instead. this kind of stuff was happening with gubmint computers back when bill clinton was president too. they were destroying monitors with sledgehammers in case there was confidential info burned onto the screen
[05:26:56] <bpmedley> Or the sledge hammer manufacturers..
[05:27:35] <maroon> ive only ever seen 1 case of something identifiable burned onto a monitor, and it was a blank lotus 123 spreadsheet
[05:29:17] *** Quits: Forgetwrk_Lion (~Foli@220-244-3-190.tpgi.com.au) (Ping timeout: 240 seconds)
[05:32:19] *** Joins: Forgetwrk_Lion (~Foli@220-244-3-190.tpgi.com.au)
[05:34:40] <bpmedley> dotnet ef migrations script  <-- I love this command
[05:36:37] *** Quits: Forgetwrk_Lion (~Foli@220-244-3-190.tpgi.com.au) (Ping timeout: 240 seconds)
[05:37:59] <Nasp> It's not exactly new :D
[05:38:04] <sysRPL> maroon: part of the problem, which i tend to consder more than other factos, is that republican poltiticians absolutely refuse to all educations system to organize themselves better
[05:38:06] <Nasp> Been there for the last 10 or so years
[05:38:29] <sysRPL> they do not want national education standards, they do want local school boards
[05:38:54] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[05:41:02] <sysRPL> trpublicans want local school boards in the same way they want state rights ... it's all about making it difficult to stop republicans from sneaking in religion, racism, their point of view at the local levels
[05:41:28] <sysRPL> see the scopes monkey trial as an example
[05:41:48] <sysRPL> the final result is a disfunctional education system, and they are happy with that
[05:43:34] <sysRPL> republicans REALLY don't want the federal department of education
[05:43:46] *** Joins: Forgetwrk_Lion (~Foli@220-244-3-190.tpgi.com.au)
[05:44:27] <sysRPL> Why Republicans have long wanted to shut Education Department -> https://www.chicagotribune.com/nation-world/ct-republicans-shut-education-department-20180620-story.html
[05:44:53] <sysRPL> On April 4, 2016, Fox host Sean Hannity asked Donald Trump if he would eliminate any federal departments if he were to become president. Trump responded by saying that the Department of Education "is massive and it can be largely eliminated."
[05:47:27] <sysRPL> on a whole, more edcuated people vote significantly less for republicans than less edcuated people. republicans recognize this and try to make it into a class issue by attacking those `liberal elites`
[05:48:14] <sysRPL> from wikiepedia -> Liberal elite,[1] also referred to as the metropolitan elite or progressive elite,[2][3][4] is a stereotype of politically liberal people whose education had traditionally opened the doors to affluence and power
[05:48:59] <sysRPL> this is one of the reasons why we can't have nice things
[05:50:52] <teegee> bpmedley: yes, that
[05:51:48] <maroon> yes lets all blame the republicans. the butler act, proposed and named after a democrat politician, signed into law by a democrat governor, and at the monkey trial the prosecution counsel included william jennings bryan who ran for president as democrat 3 times
[06:13:59] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:15:42] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:23:24] *** Quits: __gandhibobandhi (~gandhibob@ip-130-180-122-050.um40.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[06:44:35] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:48:23] <JakeSays> what are we blaming the repubs for?
[06:48:59] *** Quits: Xenoprimate (Xenoprimat@gateway/vpn/protonvpn/xenoprimate) (Ping timeout: 256 seconds)
[06:51:29] <bkool> can we blame the R's for Russia being assholes, etc. or should we unite against them?
[06:59:51] *** Quits: muffin_storm (~muffin_st@user/muffin-storm/x-3740471) (Read error: Connection reset by peer)
[07:06:33] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 256 seconds)
[07:07:51] <JakeSays> Nasp: well, dotnet hasn't been around for 10 years..
[07:08:53] <Nasp> That's right, only 22
[07:09:41] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[07:12:13] <bkool> damn, 22. and Java is only getting around to adding features c# did 10-12 years ago. Sun really was not a good steward.
[07:17:34] *** Joins: __gandhibobandhi (~gandhibob@ip-130-180-122-050.um40.pools.vodafone-ip.de)
[07:33:51] <Nasp> :D
[07:37:42] <bpmedley> bkool : Sun or Oracle or both?
[07:38:11] <bkool> Oracle is awful. but at least they are *trying* to improve the language now.
[07:38:23] <bpmedley> hehe
[07:38:37] <bkool> Sun did nothing for many years while c# was cranking about linq, etc. etc.
[07:41:23] <bpmedley> Sun also buried a perfect OS
[07:41:35] <bkool> I really wish Oracle didn't own Java. but i guess people could say the same about c# with MS (big corp / not open source at the time) but MS definitely tried to improve c# over the 20+ years
[07:42:02] <bkool> ah, well Linux did canabalize Sun
[07:42:43] <bkool> i was in college in early 00's and they some Sun systems
[07:43:02] <bkool> still
[07:43:04] <bpmedley> I'm not sure.  I feel the stewardship of C# by MS is really great.  I pray in the direction of ASP .Net Core daily.  There have been a few mis-steps, but the software landscape is a crufty clusterfuck for almost all languages..
[07:43:16] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[07:43:30] <bpmedley> What do you dislike about the leadership of C# via MS?
[07:44:33] <bkool> bpmedley, was mainly referring to MS pre .net core. once they embraced .net core and putting it on github. it was a huge shift. and a great one.
[07:44:42] <bpmedley> Makes sense
[07:45:57] <bkool> c# is great language anyone who knocks it either hasn't used it or is coming from an anti-MS front. it has its faults yes, but plenty of languages do.
[07:46:13] <JakeSays> Nasp: .NET yes, but not dotnet :p
[07:46:51] <JakeSays> bpmedley: no, it was oracle that buried a perfect os
[07:47:03] <bpmedley> JakeSays : I was hoping no one caught my mistake..
[07:47:07] <JakeSays> lol
[07:48:34] <JakeSays> bpmedley: i would have much preferred that oracle would've closed java and left solaris open
[07:48:56] <bpmedley> By open, do you mean open source?
[07:49:04] <JakeSays> yes
[07:50:02] <bpmedley> I also miss solaris.  Maybe open source solaris would have kept it around..
[07:50:21] <bpmedley> Or, consistent and funded open source solaris
[07:50:40] <JakeSays> yeah that, instead of consistent and funded java
[07:51:11] <JakeSays> but at least we got zfs out of it
[07:51:18] <bpmedley> True, zfs rocks
[07:52:23] <bkool> wish i could stay but gotta go. g'night.
[07:52:36] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:12:36] *** Quits: sysRPL (~sysRPL@097-101-210-085.res.spectrum.com) (Remote host closed the connection)
[08:22:36] *** Quits: __gandhibobandhi (~gandhibob@ip-130-180-122-050.um40.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[08:23:54] *** Joins: __gandhibobandhi (~gandhibob@ip-130-180-122-050.um40.pools.vodafone-ip.de)
[08:48:00] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 260 seconds)
[08:57:34] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[08:58:12] *** Quits: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970::fb) (Quit: So as you can see from this flowchSQUIRREL!!)
[08:58:26] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[09:26:34] *** Quits: __gandhibobandhi (~gandhibob@ip-130-180-122-050.um40.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[09:50:10] *** Joins: spinningcat (~spinningc@about/web/muscles)
[09:50:11] <spinningcat> yo
[09:58:53] <spinningcat> how can i modify this like first element of lists are same so there is no difference between these two lists? https://dotnetfiddle.net/VGhJHh
[10:14:53] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[10:17:12] *** Joins: __gandhibobandhi (~gandhibob@ip-130-180-122-050.um40.pools.vodafone-ip.de)
[10:17:52] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[10:18:06] *** Joins: Forgetfwrk_Lion` (~Foli@220-244-3-190.tpgi.com.au)
[10:19:26] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[10:21:37] *** Quits: Forgetwrk_Lion (~Foli@220-244-3-190.tpgi.com.au) (Ping timeout: 240 seconds)
[10:31:39] <spinningcat> hope my question is understadable
[10:33:07] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[10:37:06] *** Joins: Forgetwrk_Lion`` (~Foli@220-244-3-190.tpgi.com.au)
[10:40:45] *** Quits: Forgetfwrk_Lion` (~Foli@220-244-3-190.tpgi.com.au) (Ping timeout: 256 seconds)
[10:59:42] *** Joins: bomb (~bomb@user/bomb)
[11:02:27] *** Quits: Forgetwrk_Lion`` (~Foli@220-244-3-190.tpgi.com.au) (Read error: Connection reset by peer)
[11:09:06] *** Joins: Assault (~Assault@87-95-118-72.bb.dnainternet.fi)
[11:21:08] *** Quits: Assault (~Assault@87-95-118-72.bb.dnainternet.fi) (Ping timeout: 268 seconds)
[11:36:38] <bomb> https://www.producthunt.com/
[11:36:39] <ap5> spinningcat, what is the expected outcome?
[11:36:43] <bomb> so many apps n shit
[11:36:52] <ap5> bomb, yeah :D
[11:37:17] <bomb> ap5 we should quit softare wngineering and make arcade games in qbasic
[11:37:47] <ap5> xD
[11:43:22] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 272 seconds)
[11:43:44] <MatthiasVance> That sounds like .. software engineering
[11:43:46] <MatthiasVance> Also I am in
[11:44:59] <MatthiasVance> So if you had to integrate with 100s of APIs, would you: 1) Build everything yourself (including everything that is required to monitor and whatnot and all the different protocols and message formats) 2) Opt for a SaaS solution that runs everything for you and posts it to your queue or API 3) Opt for a solution that you have full control over where it runs
[11:45:41] <bomb> 2
[11:45:46] <bomb> life is to short
[11:45:56] <phrosty> probably 2
[11:46:05] <MatthiasVance> Wow okay
[11:46:07] <phrosty> 100s apis is a lot
[11:46:13] <bomb> nah 1
[11:46:24] <bomb> I dont wana agree wit frosty
[11:46:43] <phrosty> thanks
[11:47:24] <MatthiasVance> At work we are currently doing #1, but I've been in a few companies that were integrating with lots of APIs for "the same kind of data" so now I am working on a platform that eases integration, but I am not sure (haven't talked to any potential customers yet because I wasn't taking it that seriously) if people would want to run stuff themselves.. it gets increasingly more complex to run it for them :D
[11:47:50] <ap5> Well ... I would go for something i control myself. So something like 2), but fx use Kong or something of the like.
[11:48:03] <bomb> you should be a novelist MatthiasVance
[11:48:17] <MatthiasVance> Because of the amount of words I can use to convey absolutely no meaning at all?
[11:48:19] <bomb> that's too much text for Friday morning :)
[11:48:24] <ap5> :D
[11:48:25] <MatthiasVance> Maybe a marketeer instead? ;p
[11:48:26] <ap5> TLDR
[11:49:05] <bomb> how much does #2 cost?
[11:49:22] <ap5> If you choose Azure and their offering, a lot :D
[11:49:28] <MatthiasVance> You pay for usage with some markup
[11:49:38] <MatthiasVance> So not that much I *think*
[11:49:42] <bomb> yeah but with your expected usage?
[11:49:56] <MatthiasVance> Good point I should calculate it with our production load
[11:50:14] <ap5> Azure API Management is expensive
[11:50:18] <MatthiasVance> ap5: I saw some calculations for AWS / GCP / Azure with all the benefits and there isn't THAT much difference
[11:50:25] <MatthiasVance> This was purely for compute though
[11:50:41] <MatthiasVance> ap5: I wouldn't use API management for it :)
[11:50:49] <ap5> Well you start at 2000 EUR for Azure API Managment if you want to have VNET integration
[11:50:52] <ap5> goood
[11:50:57] <ap5> It is shitty
[11:51:04] <MatthiasVance> Technically it is a no-code platform, of which "map external API to internal API" is just step 1
[11:51:10] <MatthiasVance> And then you can have logic etc and build from there
[11:51:31] <ap5> I would look into: https://konghq.com/kong/
[11:51:38] <bomb> we know, it's Pulumi
[11:51:47] <MatthiasVance> bomb: Heh? No
[11:51:54] <MatthiasVance> Pulumi is IaC
[11:52:00] <bomb> yuck
[11:52:09] <ap5> :D
[11:53:14] <MatthiasVance> ap5: Is Kong for integrating or more for exposing?
[11:53:38] <MatthiasVance> Their landing page sucks a bit :D
[11:53:42] <MatthiasVance> Doesn't describe the problem they're solving
[11:54:12] <ap5> It is an API gateway built ontop of nginx
[11:54:43] <MatthiasVance> "Discover & Design Services in Insomnia - then seamlessly publish for discovery on Portal - manage and extend Service functionality via a performant Gateway & composable plugins."
[11:55:32] <Nasp> I like traefik
[11:55:38] <MatthiasVance> ap5: How do you define "API gateway"?
[11:57:24] <ap5> It is a single entry point that does protocol translation to various internal APIs
[11:57:51] <MatthiasVance> Ah yes
[11:58:23] <MatthiasVance> So you run the product in Kubernetes and then you get a UI for mapping stuff etc
[11:58:25] <ap5> But there is so many different products, that it is hard to pick the right one for the problem
[11:58:37] <MatthiasVance> Kubernetes might also be an answer to hosting it for people
[11:58:40] <MatthiasVance> Then it's portable
[11:59:36] <bomb> try Leaseweb shared PHP hosting
[11:59:39] <MatthiasVance> :D
[11:59:55] <bomb> $5/month, unlimited bandwith, unlimited disk, and unlimited RAM
[12:00:25] <MatthiasVance> Too bad CPU is the bottleneck
[12:00:45] <bomb> 350 wordpress sites per core XD
[12:01:07] <ap5> :D
[12:02:47] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[12:04:26] *** Quits: jonp (~jonp@about/csharp/jonp) (Ping timeout: 256 seconds)
[12:04:35] *** Joins: jonp (~jonp@about/csharp/jonp)
[12:04:35] *** ChanServ sets mode: +v jonp
[12:04:36] <Nasp> ap5: is king built on top of nginx?
[12:05:38] <ap5> Nasp, it once was, but i dont know if that has changed
[12:06:39] <ap5> I have read somewhere that it was based on nginx and https://github.com/openresty/lua-nginx-module
[12:07:09] <ap5> Here: https://www.baeldung.com/kong - but it is not official source (That link is actually a good one MatthiasVance)
[12:09:44] <bomb> just use Go lol
[12:09:48] *** Quits: csrf (~csrf@user/csrf) (Ping timeout: 240 seconds)
[12:09:57] <bomb> OpenResty is fishy, and Nginx is Russian
[12:10:42] <ap5> :D
[12:10:52] <ap5> bomb, i like all your proposals
[12:13:18] <bomb> thamks :>
[12:17:42] <MatthiasVance> ap5: This seems focused on providing a uniform API landscape for the outside world, and on the inside you can have all kinds of different APIs
[12:17:49] <MatthiasVance> My solution works the other way around
[12:18:01] <MatthiasVance> But of course you could be an internal consumer in the first one too
[12:18:01] <MatthiasVance> hm
[12:18:26] <MatthiasVance> I'm convinced the idea is solid but execution is everything :D
[12:20:12] *** Quits: __gandhibobandhi (~gandhibob@ip-130-180-122-050.um40.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[12:20:12] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:21:02] <ap5> MatthiasVance, that is one of its purposes
[12:21:17] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[12:21:39] <bomb> MatthiasVance API startups
[12:22:10] <bomb> new text companies that provide API-only products
[12:22:29] <bomb> they're hot right now
[12:22:35] <bomb> because everyone needs cable organizers
[12:26:49] <MatthiasVance> bomb: Ah yeah
[12:27:49] <bomb> so #1 option is not bad at all. eventually you can make that a product for others too
[12:28:17] <bomb> AWS was once nothing but bunch of virtualized servers for Amazon's own use.
[12:28:36] *** Quits: CoderGuy (~CoderGuy@user/coderguy) (Read error: Connection reset by peer)
[12:28:47] <bomb> now _entire_ Silicon Valley lives on AWS.
[12:29:01] *** Joins: CoderGuy (~CoderGuy@2601:644:102:2820:4d9c:2d04:dc9e:a5cb)
[12:29:12] <MatthiasVance> bomb: Well yeah I'd use the product to also implement ready-to-go APIs
[12:29:25] <MatthiasVance> Since that's a piece of cake :P
[12:29:32] <ap5> Azure started out as a way to virtualize Windows :D
[12:29:37] <bomb> choose the hard path!
[12:29:44] <ap5> Build an OS
[12:29:59] <ap5> Virtualize it, make a cloud ... izi
[12:31:07] <bomb> ap5 and then $100-million exit!
[12:31:16] <ap5> Oh yis
[12:38:24] <bomb> we're gonna b rich!
[12:38:32] <bomb> so who's gonna write teh javescrept?
[12:38:36] <MatthiasVance> Nobody
[12:38:47] <MatthiasVance> No JS allowed
[12:39:02] <MatthiasVance> JSOFF, not JS ON
[12:39:11] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[12:39:15] <bomb> buh buh SaaaaS
[12:40:26] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[12:41:26] <bomb> man, serious programming is too stressful
[12:41:30] <bomb> gamedev is nothing but pure fun
[12:41:52] *** Joins: __gandhibobandhi (~gandhibob@ip-130-180-122-050.um40.pools.vodafone-ip.de)
[12:43:10] <MatthiasVance> Serious gamedev then?
[12:43:13] <MatthiasVance> Is also too stressful?
[12:44:32] <bomb> I don't know, let's play Serious Sam to see
[13:00:40] *** Joins: ASUS_ (~ASUS@user/ASUS)
[13:02:11] *** Quits: AKTheKnight (~AKTheKnig@user/aktheknight) (Quit: Ping timeout (120 seconds))
[13:02:25] *** Joins: AKTheKnight (~AKTheKnig@user/aktheknight)
[13:05:15] *** Quits: ASUS_ (~ASUS@user/ASUS) (Ping timeout: 256 seconds)
[13:06:07] *** Quits: Lizard_ (~Lizard@96-127-195-85.qc.cable.ebox.net) (Read error: Connection reset by peer)
[13:06:30] *** Joins: Lizard_ (~Lizard@96-127-195-85.qc.cable.ebox.net)
[13:11:00] <ap5> bomb, NoJavascript
[13:11:10] <ap5> We intent something new
[13:21:19] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[13:23:16] *** Joins: ASUS (~ASUS@user/ASUS)
[13:46:09] *** Joins: csrf (~csrf@user/csrf)
[13:47:37] *** Quits: csrf (~csrf@user/csrf) (Read error: Connection reset by peer)
[13:48:20] *** Joins: csrf (~csrf@user/csrf)
[14:00:39] * jmer just found out his bank has a 1% "green improvements to house" loan type.
[14:06:06] <ap5> Wow :D
[14:06:31] <jmer> ap5: yeeah I might need that with these insane gas prices xD
[14:06:38] <ap5> xD
[14:11:01] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[14:12:41] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 256 seconds)
[14:13:19] *** Joins: alguien (~alguien@user/alguien)
[14:16:27] <ap5> Somehow i am the SQL and Dapper expert in the team ... how do i get out of that role?
[14:16:46] <jmer> ap5: stop giving useful answers when people ask?
[14:16:49] <ap5> I am somewhat of an expert in the area .... buuuuuut
[14:16:52] <ap5> :D
[14:16:54] <ap5> Hahahaahah
[14:17:10] <ap5> That could actually be a proper solution xD
[14:17:30] <ap5> "you just UPDATE ... ", "but i want to select", "yes! UPDATE"
[14:18:54] <jmer> ap5: I think your example lacks some context :P
[14:19:39] <ap5> I was trying to be the guy who doesn't give good solutions
[14:19:44] *** Parts: ASUS (~ASUS@user/ASUS) (Leaving)
[14:20:06] <jmer> lol yeah ok xD
[14:26:07] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:26:07] *** Joins: vim_fans (~pi@user/vim-fans/x-3284168)
[14:27:01] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Ping timeout: 240 seconds)
[14:29:15] *** Joins: Roughy (~mdaw45ns@user/roughy)
[14:36:53] *** Joins: Assault (~Assault@87-95-118-72.bb.dnainternet.fi)
[14:46:27] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[14:46:31] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:47:47] *** Quits: vim_fans (~pi@user/vim-fans/x-3284168) (Ping timeout: 260 seconds)
[14:51:05] <Suchiman> ap5: giving good advice is a never ending rabbit hole, take it from an expert
[14:51:48] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Ping timeout: 240 seconds)
[14:54:10] *** Joins: vim_fans_ (~pi@user/vim-fans/x-3284168)
[14:59:43] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:02:52] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[15:18:27] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:27:25] *** Quits: bomb (~bomb@user/bomb) (Quit: o/)
[15:32:56] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:32:59] <blezz> https://twitter.com/nknewsorg/status/1507242223343001600
[15:33:40] *** Joins: csrf (~csrf@user/csrf)
[15:37:48] <Tobbi_> Hello
[15:38:01] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Ping timeout: 256 seconds)
[15:38:37] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[15:39:24] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 240 seconds)
[15:45:25] *** Joins: Alexthek1d (~Alexthek1@p5b3ae8df.dip0.t-ipconnect.de)
[15:47:17] *** Joins: alguien (~alguien@user/alguien)
[16:01:29] *** Quits: Alexthek1d (~Alexthek1@p5b3ae8df.dip0.t-ipconnect.de) (Quit: Leaving)
[16:09:48] *** Quits: Assault (~Assault@87-95-118-72.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[16:25:54] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[16:26:31] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[16:30:12] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[16:37:04] <MatthiasVance> So because there is no interest loss when going to the new mortgage, but there is 15k financed.. they'll just drop the 15k in our bank account?
[16:38:11] *** Joins: Tazy (~Tazmainia@2001:1c02:170b:3d00::1016)
[16:38:34] <MatthiasVance> This is going to be interesting :o
[16:39:30] <MatthiasVance> Also, damn this website is bad .. horizontal scrolling and it doesn't scroll the same distance as vertical .. it scrolls way less: https://www.lobster-world.com/en/
[16:39:37] <MatthiasVance> (also this isn't about lobsters :P)
[16:53:09] *** Quits: mahartma (~mahartma@fribbledom.com) (Quit: NO CARRIER)
[16:53:28] *** Joins: mahartma (~mahartma@fribbledom.com)
[16:59:24] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[17:14:06] <ap5> MatthiasVance, wow. What a ... trash site :D I hate the scrolling
[17:16:33] <MatthiasVance> Yeah!
[17:16:56] <MatthiasVance> Also the "Scroll right ->" indication .. people might wonder HOW to scroll right
[17:23:27] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[17:23:41] <smallville7123> does an Action require an instance?
[17:24:05] <smallville7123> eg  `Action foo; foo.Invoke(); // will this NPE ?`
[17:24:24] <jonp> yes
[17:25:03] <jonp> smallville7123: that's why you should enable nullable reference types ;-)
[17:25:11] <jonp> that wouldn't compile
[17:25:15] <jonp> well, would have warnings
[17:25:40] <smallville7123> hmm ok
[17:29:05] *** Quits: guideX (~guideX@user/guidex) (Read error: Connection reset by peer)
[17:30:32] <Andrio> That wouldn't compile because you have an unassigned local variable.
[17:30:59] <Andrio> it's the C# equivalent of saying 'do something'.
[17:32:28] <jonp> you can "fake" a similar situation by having `foo` as a field, though: class E { Action a; public void M() { a(); } }
[17:32:31] <jonp> will NRE
[17:32:37] <jonp> no warning about unassigned locals
[17:32:51] <Andrio> I just messed with it until it compiles. It's fine now, right?~
[17:33:11] <jonp> and nullable-reference-types would help; you'd need to instead do: class E { Action? a; public void M() { a(); /* issues a warning about possibly null */ } }
[17:34:05] <Andrio> Well, that's what the ! operator is for, to let you potentially shoot yourself in the foot without having to worry about warnings.
[17:34:34] <Andrio> It still bugs me though, that I have to suppress nullable warnings in order to let XML deserialisation work.
[17:36:19] *** Joins: Klinda (~superleag@user/klinda)
[17:39:27] *** Quits: Ducki (~ducki@user/ducki) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[17:40:13] <smallville7123> should i use action = newAction to remove the old action and attach the new action?
[17:40:54] <jonp> is there a broader context here?
[17:41:23] <smallville7123> callback
[17:41:42] <jonp> like an event?  or a callback method parameter?
[17:41:48] <jonp> can you gist some code?
[17:44:24] <smallville7123> https://gist.github.com/mgood7123/4b0ae9d0ba5843a1158870f786d6a4fb
[17:45:32] <jonp> line 12 *replaces* whatever application was referring to, setting it to value.
[17:45:47] <jonp> compare to lines 9/15, which removes or adds a delegate to the invocation list
[17:47:26] <smallville7123> and https://gist.github.com/mgood7123/682e9a11352ac11f545f66cbbb5cd857
[17:48:20] <smallville7123> jonp: yes
[17:48:49] <smallville7123> if an application is changed then it's onTouch callback should not be called any more
[17:49:24] <smallville7123> ideally mulyiple callbacks could be registered but i see no use for multiple callbacks
[17:49:49] <smallville7123> since a touch would specifically target a single application
[17:50:22] <smallville7123> or a single window that splits touch events for each application contained inside that window
[17:51:34] <smallville7123> only use where multiple-callbacks would be if you also want to add some kind of global touch logger or something :)
[17:52:15] <smallville7123> anyway, would it be correct?
[17:52:28] <smallville7123> https://gist.github.com/mgood7123/4b0ae9d0ba5843a1158870f786d6a4fb and https://gist.github.com/mgood7123/682e9a11352ac11f545f66cbbb5cd857
[17:53:43] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[17:54:21] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[17:58:19] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[17:58:31] <smallville7123> this is mainly for code clean up and ease of use, since the user wont have to manually check if and when they should call onTouch since the api will handle that for them
[18:01:10] <smallville7123> (thi can still can if they so wish)
[18:01:12] <smallville7123> tho*
[18:01:53] <smallville7123> jonp:
[18:05:56] <Beam> Yo
[18:06:03] <smallville7123> hi
[18:06:59] <Beam> is there a way to join multiple streams into one without reading them into memory? Say i have a file divided in 100 parts 1gb each on disk and i want to pass them into a function that takes a stream as one file
[18:08:06] <Suchiman> Beam: i don't think so, you'd need to write a custom stream function for that
[18:08:14] <Suchiman> s/function/class/
[18:08:21] <Beam> ah well
[18:08:56] <smallville7123> Beam: yes
[18:09:12] <smallville7123> read and write one stream at a time
[18:09:31] <smallville7123> (if your reading and writing all 1 GB at a time)
[18:09:50] <Beam> suchiman got my question
[18:10:09] *** Joins: Slade (uid128877@user/slade)
[18:10:25] <smallville7123> otherwise you can probs MT read/write all 100 files with a 512 KB buffer or smaller (should take 50 MB at most?)
[18:10:26] <Beam> i just have a function in a lib that needs access to all 100gb through a stream interface, so suchiman is right, if there's nothing for it i need to code it
[18:10:34] <Suchiman> Beam: shouldn't be too hard
[18:10:58] <Suchiman> Beam: you just gotta write a wrapper that forwards the call to the current stream and move to the next stream when the current stream runs out
[18:11:10] <Suchiman> + keeping track of position and length accurately
[18:11:21] <Beam> Suchiman: yea shouldn't be too hard
[18:11:21] <smallville7123> Beam: is it simply seeking/reading or is it writing too?
[18:11:41] <Beam> smallville7123: doesn't really matter does it?
[18:12:02] <smallville7123> or does it simply combine all files into one big file
[18:12:23] <interop_madness> this might be non-trivial IMHO
[18:12:49] <Beam> seems straightforward to me?
[18:12:55] <interop_madness> should the stream be seekable?
[18:13:08] <Beam> yes
[18:13:13] <smallville7123> Beam: if both R/W then you want to have two seperate HEAD's for keeping track of each read and write index
[18:13:40] <interop_madness> oh I just read the file sizes are statically known
[18:13:41] <Beam> isn't position for read and write the same on a Stream?
[18:13:44] <smallville7123> eg it could read from one portion and write to another portion (tho most streams dont do that)
[18:13:45] <interop_madness> then it's easier yes
[18:14:03] <smallville7123> (unless copying from one location to another)
[18:14:25] <Beam> thought Stream only has one Position property
[18:14:30] <Beam> i'll look into it
[18:14:39] <smallville7123> eg read data at index 8 and write it to index 80 with a length of 40
[18:14:56] <Beam> i'd think that's outside of Stream's logic ?
[18:15:16] <smallville7123> you could have a seperate R head and a seperate W head to keep track of what is being read/written more easily
[18:16:00] <smallville7123> easpecially if you are buffered (eg you read some then write some then read some then write some and so on)
[18:16:17] <Beam> well if it's a r/w stream and i read 40 bytes then write 40 bytes, without seeking, the written bytes should always start at byte 40 shouldn't they
[18:16:27] <Beam> anyway i digress
[18:16:42] <smallville7123> eg you could read and write 8 bytes at a time
[18:17:27] <smallville7123> tho a read/write head could simply be a position value in the stream and not an actual struct
[18:18:11] <smallville7123> assuming it is reading/writing to the same file
[18:19:20] <smallville7123> anyway
[18:21:28] <smallville7123> if your reading/writing multiple files as a single file then you will want a custom Stream that can read each file as a contigious stream, with file ordering (and re-ordering so you dont have to create a new stream with all the files and arguments as the old but with files in a different order)
[18:23:24] <smallville7123> something line stream.Clone().withOrder(4, 3, 1, 2, 4); or similarthat allows you to specify a stream order based on index and stream file count
[18:23:43] <smallville7123> like*
[18:24:30] <smallville7123> tho withOrder implies it returns a copy of itself with the given order, so Clone would be redundant (tho useful for temporary steams)
[18:24:55] <smallville7123> (depending on the stream type)
[18:25:50] <smallville7123> eg, if it is a string buffer than a Clone would be useful to temporarily add content to the buffer, send it somewhere, then revert back to the original buffer
[18:26:17] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[18:26:33] <smallville7123> which can be implemented as a stream that reads and writes to memory
[18:27:49] <smallville7123> imma shut up lol
[18:38:51] *** Quits: Eiler (~Eiler@c83-253-82-254.bredband.tele2.se) (Ping timeout: 272 seconds)
[18:43:02] <Suchiman> >:( are you fucking kidding me dell
[18:43:37] <Suchiman> after telling me yesterday "sorry your delivery will be one month late" now they're telling "hey, sorry again, your delivery will actually be 2 months late"
[18:45:29] <irwiss> consumer side delivery? you're basically worthless dirt to them :P
[18:52:17] *** Quits: spinningcat (~spinningc@about/web/muscles) (Remote host closed the connection)
[18:52:34] *** Joins: spinningcat (~spinningc@94.54.210.37)
[18:55:13] *** Quits: moldorcoder7 (~moldorcod@37.120.143.29) (Ping timeout: 256 seconds)
[19:01:06] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[19:14:55] <Beam> Anyone using Minio?
[19:15:00] *** Joins: Eiler (~Eiler@c83-253-82-254.bredband.tele2.se)
[19:15:25] <Beam> i'm getting exceptions that are defined as protected so i can't catch them - why would they make it so?
[19:18:00] *** Quits: vim_fans_ (~pi@user/vim-fans/x-3284168) (Ping timeout: 260 seconds)
[19:22:09] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[19:25:55] <Suchiman> Beam: very evil but you can still catch the base type :P
[19:28:11] *** Joins: DoofusCanadensis (~DoofusCan@207.229.38.10)
[19:31:41] *** Joins: Babbage_ (~Babbage@94.11.27.96)
[19:32:05] *** Quits: Babbage (~babbage@dmu-admin.dmu.ac.uk) (Remote host closed the connection)
[19:32:08] *** Quits: Babbage_ (~Babbage@94.11.27.96) (Remote host closed the connection)
[19:32:29] *** Joins: Babbage (~Babbage@94.11.27.96)
[19:43:08] *** Joins: Xenoprimate (Xenoprimat@gateway/vpn/protonvpn/xenoprimate)
[19:43:35] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:44:05] *** Joins: Guest87 (~Guest87@2a02:c7f:582d:5100:2df6:19c9:e0a:dc30)
[19:47:41] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[19:58:09] *** Joins: bomb (~bomb@user/bomb)
[20:05:43] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Ping timeout: 256 seconds)
[20:08:56] <interop_madness> I'm both amazed and confused with this https://poolsuite.net/
[20:09:24] <interop_madness> what is this about? perpetually evoking the 1990s summer feeling?
[20:09:32] <interop_madness> if so, based
[20:09:39] <bomb> <strong>We're sorry but Poolsuite doesn't work properly without JavaScript enabled. Please enable it to continue.</strong>
[20:10:24] <interop_madness> bomb, you are too 1990s even for Poolsuite if you have JS disabled
[20:10:37] <bomb> lel
[20:11:01] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[20:11:07] *** Joins: zln (~zln@c83-249-48-11.bredband.tele2.se)
[20:11:39] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[20:12:16] <blezz> interop_madness that's great
[20:12:21] <cloudbender> copying byte[256] to a byte[158].
[20:12:45] <cloudbender> Is it better to Copy(Array, Int32, Array, Int32, Int32) or Array.Resize a full copy ?
[20:12:47] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[20:13:20] <blezz> https://apps.apple.com/gb/app/poolside-fm/id1514817810?mt=12 cool
[20:15:58] <cloudbender> It looks like they either will have as much work to do under the hood since they both copy versus resizing in-place.
[20:16:02] <cloudbender> ok.
[20:16:30] <cloudbender> ... looks like either will have ...
[20:16:36] <bomb> > POOLSIDE WORLDWIDE CORPORATION LTD
[20:17:37] <cloudbender> Drop the 'CORPORATION and will have more zing.  The LTD implies a corporation.
[20:17:50] *** Quits: brianonymous_ (~int19h@pool-98-117-195-56.bltmmd.fios.verizon.net) (Read error: Connection reset by peer)
[20:18:10] <interop_madness> They got the late 1990s web style - arguably the high water mark of web design - down to a T (and by "arguably", I mean "objectively")
[20:18:26] <bomb> cloudbender their Bri'ish. companies are different there
[20:18:42] *** Joins: Guest48 (~textual@213-130-92-210.ip.btc-net.bg)
[20:18:52] <cloudbender> ah.
[20:19:48] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:20:25] <cloudbender> Verry happy with the Task API.  The UI code is much cleaner now.  Good-Bye flag and lock semantics.
[20:21:15] <cloudbender> (mostly) ... isBusy will always be a welcome participant in some form or another.
[20:23:44] *** Quits: Guest48 (~textual@213-130-92-210.ip.btc-net.bg) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:24:22] <blezz> taks are like 10+ years old
[20:24:26] <blezz> tasks*
[20:25:00] *** Joins: brianonymous (~int19h@pool-98-117-195-56.bltmmd.fios.verizon.net)
[20:25:00] *** Quits: brianonymous (~int19h@pool-98-117-195-56.bltmmd.fios.verizon.net) (Changing host)
[20:25:00] *** Joins: brianonymous (~int19h@user/brianonymous)
[20:25:22] <canton7> cloudbender, just be aware that being single-threaded async/await doesn't stop methods from being re-entrant. You can see have situations where the UI thread is executing the same method twice concurrently, just not in parallel
[20:25:36] <canton7> *You can still have situations
[20:26:50] <cloudbender> so, once again, ' isBusy ' saves the day.
[20:27:12] <canton7> Yeah. Or `SemaphoreSlim` is also handy, as it has a `WaitAsync` method
[20:27:20] <canton7> Depends whether you want to bail or just wait in that case
[20:27:36] <cloudbender> @+canton7 Thanks for the heads-up.
[20:28:01] <cloudbender> It's a listener.  If it's busy, block a second listener.
[20:29:09] <canton7> It feels dirty wrapping single-threaded code in something that is obviously a multi-threaded synchronisation primitive, but it works well
[20:29:16] <cloudbender> One listener on the form, I can check for listener!=null as a block.
[20:29:56] <cloudbender> I need to decouple the form UI from the sync stream waits on the listener.
[20:30:50] <cloudbender> It's for a very-high-latency link. I'm designing it to be sync, the latency will drive me effing crazy with timeouts.
[20:31:34] <cloudbender> I'd rather have the read wait a bit and bail if there is trubba
[20:31:55] <interop_madness> I've never got a satisfying answer to "what's the sane/correct way to block on a task from within synchronous code?"
[20:32:04] <interop_madness> Other than "don't do it" / "there is no way"
[20:32:33] <Guest87> Depends on where you want to do it, really
[20:32:40] <cloudbender> I'm doing it in a sub-thread.  IS that wrong ?
[20:32:58] <interop_madness> Fundamentally, we've got code that will always be synchronous (E.g. because it's unmanaged .exe calling into managed .NET libraries) and there are .NET APIs that are only async
[20:33:23] <bomb> async-only APIs. what is this, Node Jayes?
[20:33:42] <canton7> interop_madness, Task.Wait(), Task.Result, Task.GetAwaiter().GetResult()
[20:34:12] <canton7> interop_madness, task.Wait() lets you specify a timeout. Task.Wait() and Task.Result will however wrap any exceptions in an AggregateException. Task.GetAwaiter().GetResult() doesn't have a timeout, but also doesn't wrap
[20:34:33] <DevJohnC> my understanding is that there's no way to synchronously wait for a task to complete that isn't susceptible to race conditions/locking bugs
[20:34:41] <canton7> interop_madness, be careful that you don't do that from a thread which has a SynchronizationContext installed on it though, otherwise you could deadlock
[20:35:16] <canton7> It's fine (in the sense that it's safe, not in the sense that it's necessarily the best idea) so long as the thread you do it on something which has a SynchronizationContext on it, particularly something like a UI thread
[20:35:24] <interop_madness> canton7, isn't performing (..).ConfigureAwait(false) religiously inside the async code at least minimizing the chance for deadlocks?
[20:35:33] <canton7> *It's fine so long as the thread you do it on doesn't have a SynchronizationContext installed on it
[20:36:14] <canton7> interop_madness, yes, if every await in the async code has ConfigureAwait(false) on it, then that also avoids the deadlock if the calling thread has a SynchronizationContext installed on it
[20:36:18] <cloudbender> I'm checking stream.DataVailable up to a maximum of 10 seconds, then throwing out if we still don't have the EOM markers by then.
[20:36:43] <cloudbender> The user will get a frownie face as a warning.
[20:36:56] <interop_madness> yes, that's what i assumed is best effort that can be done in that scenario
[20:37:59] <canton7> interop_madness, if you're not sure whether the thread you're blocking is a UI thread or not, you can do the old hacky 'Task.Run(() => SomeAsyncMethod()).Wait()'
[20:38:19] <bomb> lz_ you kekeke https://i.imgur.com/T0MMV4Y.png
[20:38:20] <canton7> That runs SomeAsyncMethod on a thread which definitely doesn't have a SynchronizationContext on it
[20:38:27] <cloudbender> OK, prepare to fling poo ...
[20:38:49] <cloudbender> Can I safely Task.Run(async ()=>{});
[20:39:02] <cloudbender> and wrap some inner awaits ?
[20:39:17] <interop_madness> canton7, so that last suggestion of yours would be advisable if I called into an async API where I can't make sure that .ConfigureAwait(false) exists for every async call, internally, right?
[20:39:29] <cloudbender> seems to work, but I may be mis-informed.
[20:39:36] <canton7> interop_madness, .... and you're not sure if the thread you're on has a SynchronizationContext on it or not
[20:39:59] <cloudbender> ok I'll look at that topic.
[20:40:02] <canton7> interop_madness, if you know you're on a non-UI thread for example, feel free to block
[20:40:11] <cloudbender> ok
[20:40:24] <canton7> cloudbender, note those messages were to interop_madness , not you
[20:40:31] <cloudbender> oh.
[20:40:40] <interop_madness> canton7, would Task.Run(() => SomeAsyncMethod()).GetAwaiter().GetResult() work too in that scenario?
[20:41:05] <interop_madness> (other than the timeout and AggregateExeption caveats you mentioned)
[20:41:09] <canton7> interop_madness, yes, .Wait() and .GetAwaiter().GetResult() are functionally equivalent, except the former wraps exceptions in an AggregateException
[20:41:14] <cloudbender> <<< maintains illusions of his significance
[20:41:18] <cloudbender> Thanks all.
[20:41:25] <canton7> sorry, I can only handle one conversation at a time ><
[20:41:43] <cloudbender> np thanks
[20:41:49] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[20:42:08] *** Quits: Guest87 (~Guest87@2a02:c7f:582d:5100:2df6:19c9:e0a:dc30) (Quit: Client closed)
[20:42:45] <interop_madness> canton7, one last question: SynchronizationContexts exist for WPF and WinForms apps (probably too for other UI frameworks, though I don't know which SynchronizationContext-derived types are used there) - any other such scenario outside of UI code?
[20:43:03] <interop_madness> I dimly remember ASP.NET core having one...
[20:46:02] <canton7> interop_madness, various versions of asp.net have done different things with them at various points, yeah
[20:46:06] <canton7> All UI apps certainly
[20:46:44] <interop_madness> ok thank you, that was very helpful canton
[20:46:47] <canton7> I quite often define one in my apps: I like running the UI model of a single-threaded dispatcher loop, even for code which has nothing to do with a UI
[20:46:59] <canton7> just check SynchronizationContext.Current -- it's null if none is installed
[20:56:06] *** Joins: Guest87 (~Guest87@2a02:c7f:582d:5100:2df6:19c9:e0a:dc30)
[20:58:36] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[21:08:26] <interop_madness> does a minimal repro exist for Task<T> method that will reliably deadlock if called from within a SynchronizationContext-owning thread?
[21:09:06] <jonp> Task.Delay().Wait()?
[21:17:09] *** Quits: __gandhibobandhi (~gandhibob@ip-130-180-122-050.um40.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[21:22:05] <interop_madness> jonp, yep, that does it. didn't think it was so trivial ^^
[21:22:27] <jonp> well, in theory it's "not" a deadlock; it's "just" deadlocked until the delay finishes!
[21:22:45] <jonp> and if the delay is 3k years from now…
[21:22:57] <canton7> To actually deadlock, you need an await
[21:23:27] <canton7> So 'async Task Foo() => await Task.Delay(1); Foo.Wait()' will deadlock if called from a UI thread
[21:24:03] <canton7> The problem is that when the 'await' completes, it posts a message to the UI thread telling it to go ahead and complete the Task which Foo returned. But the UI thread isn't checking for messages, it's blocked on that .Wait()
[21:24:42] *** Joins: muffin_storm (~muffin_st@50-233-189-146-static.hfc.comcastbusiness.net)
[21:24:42] *** Quits: muffin_storm (~muffin_st@50-233-189-146-static.hfc.comcastbusiness.net) (Changing host)
[21:24:42] *** Joins: muffin_storm (~muffin_st@user/muffin-storm/x-3740471)
[21:25:35] <canton7> Perhaps 'async Task Foo() { await Task.Delay(1); Console.WriteLine("Done"); } Foo().Wait()' is clearer, although the `Console.WriteLine` is unnecessary. The 'await' posts a message back to the UI thread saying it needs to run that 'Console.WriteLine'. The 'Task' returned from 'Foo' can't be completed until the 'Console.WriteLine' has finished. But
[21:25:35] <canton7> the UI thread can't run the 'Console.WriteLine' because it's stuck on the .Wait(). And it's waiting for the Task returned from Foo to complete, but that won't complete because.... and so on
[21:27:01] <canton7> That's where the ConfigureAwait(false) comes in -- that tells the await to post a message to the thread pool when it's done, rather than to the UI thread. Which means the Console.WriteLine will be executed on the thread pool, and the whole system can make progress even though the UI thread is stuck
[21:30:23] <interop_madness> I came up with this for illustration purposes: https://paste.ee/r/E4UgG/0
[21:31:21] <jonp> interop_madness: "minor quibble": i *always* suggest using named parameters for bools
[21:31:38] *** Quits: Babbage (~Babbage@94.11.27.96) (Remote host closed the connection)
[21:31:47] <jonp> i find `.ConfigureAwait(continueOnCapturedContext:false)` to be better than `.ConfigureAwait(false)`
[21:32:17] <jonp> might also want "better" names than TaskMethod1() vs. TaskMethod2()
[21:32:34] <interop_madness> good idea
[21:33:58] <canton7> Thing is, you normally don't want to use ConfigureAwait(false) in UI code
[21:34:26] <jonp> you "can't" in UI code
[21:34:27] <canton7> The whole *point* of the SynchronizationContext is so that awaits will stay on the UI thread. That's really important if you're going to do something like update the UI after your await. That's where the whole joy of async/await in UI code comes from
[21:34:45] <canton7> So with UI code, the rule is "Don't block. Just don't"
[21:35:06] <canton7> Always has been, and async/await doesn't change that (although it makes the consequences a bit worse...)
[21:35:53] <interop_madness> yes, but we're also talking library code here
[21:36:26] <interop_madness> So a programmer who writes some async DLL method should have some guidance on how to write this stuff, in case another programmer does bad things inside his UI methods
[21:36:32] <canton7> Cool, your paste is in a Window, which isn't library code
[21:36:44] <Slade> do i want to use XDocument or XmlDocument
[21:36:50] <canton7> Slade, XDocument
[21:36:58] <interop_madness> true, but otherwise I would have had to paste the whole .sln ^^
[21:37:02] <Slade> thought so.  no SelectNodes
[21:37:47] <canton7> Slade, it does have XPathSelectElement though
[21:38:21] <Slade> hmm
[21:38:33] <Slade> dont see that might be able to use Descendants() tho
[21:38:46] <interop_madness> canton7, what would happen if my Window class had an async void event handler that does .ConfigureAwait(false) internally?
[21:38:48] <canton7> Slade, it's an extension method
[21:39:03] <interop_madness> (only scenario I can come up with where actual async/await is employed in WPF)
[21:39:10] <canton7> Slade, google it to find the namespace, or just type it out, then Ctrl+. and VS will find it
[21:39:44] <canton7> interop_madness, with no synchronous waits?
[21:40:52] <canton7> Slade, https://docs.microsoft.com/en-us/dotnet/api/system.xml.xpath.extensions.xpathselectelement?view=net-6.0
[21:41:23] <DevJohnC> interop_madness, the `await` keyword is the site at which your method will be resumed on whichever thread is appropriate, so if your UI code `await` doesn't use ConfigureAwait(false) the state machine should continue to run on your UI thread
[21:42:44] <canton7> Whether a method returns 'void' or 'Task' doesn't affect what happens inside it. It affects 1) Whether the caller can monitor it for completion / failure, and 2) What happens if an exception bubbles out of the method
[21:44:13] <interop_madness> So this is fine, actually? https://paste.ee/r/332jv/0
[21:44:42] <interop_madness> Because other than async void event handlers, I can't think of any async/await scenario inside WPF UI code
[21:44:51] <canton7> interop_madness, the ConfigureAwaits achieve method
[21:44:54] <canton7> *achieve nothing
[21:45:49] <Slade> canton7: ah
[21:46:10] <canton7> Well, depends how imaginative you're being. Anything triggered by user input ultimately comes from an event/command which is 'async void', but what if your app talks to a web service, or message bus, or database, or...?
[21:46:35] <interop_madness> the same assumptions can be made for ViewModel code right?
[21:46:56] <canton7> What same assumptions?
[21:47:14] <interop_madness> about the executing thread
[21:47:39] * smallville7123 is wondering if i should convert my bitwise list into an identity list
[21:47:58] <interop_madness> i.e. functionally it makes no difference between window event handler in the code behind and some method inside a viewmodel class, as far as the above caveats w.r.t. blocking are concerned
[21:48:54] <interop_madness> the thing with the webservice seems to hint at the answer already
[21:48:59] <canton7> interop_madness, I guess? You can't block on an async void method by definition, so I'm not sure exactly what assumptions you're referring to
[21:49:20] *** Joins: Klinda (~superleag@user/klinda)
[21:49:54] <interop_madness> Yes, as soon as I'm inside an async method, the whole blocking scenario doesn't apply
[21:49:57] <canton7> But the UI thread doesn't know/care whether it's executing code in a UI compoment or a VM, etc
[21:50:10] <canton7> Again, not sure what "the blocking scenario" is
[21:50:28] <canton7> In a UI application, you don't want to block the UI *thread*, regardless of what sort of method you're in
[21:51:04] <interop_madness> so, if I understood that right: .ConfigureAwait(false) doesn't make a lot of sense inside a WPF project, but it makes a lot of sense inside library code. Blocking on async methods has to be done like you mentioned earlier
[21:51:43] <smallville7123> why do you need to block?
[21:51:52] <interop_madness> Yes, you're right, I can probably express everything with async/await anyway in an UI app
[21:52:26] <smallville7123> interop_madness:
[21:52:30] <interop_madness> so, backtracking to places where I can't (e.g. C++ exe calling .NET via C++/CLI)...
[21:52:37] <canton7> As long as the async method your UI thread is blocking on uses 'ConfigureAwait(false)' with every 'await', no need for the 'Task.Run' trick
[21:52:54] <interop_madness> thinking about it, it seems to be mutually exclusive that we have a SynchronizationContext xor we need to block on async methods
[21:53:21] <canton7> Yeah, normally
[21:53:34] <smallville7123> interop_madness: why do you need to block an async method?
[21:53:45] <interop_madness> are there apocryphal exceptions to the rule?
[21:54:05] <canton7> It mainly seems to be people working within the constraints of a non-async interface somewhere along the lines
[21:54:30] <interop_madness> smallville7123, consider a MFC app which calls into a C++/CLI dll that calls into a C# DLL with async methods
[21:54:30] <canton7> The method call chain goes through some second- or third-party code which doesn't let you pass back a Task, for instance
[21:55:32] <smallville7123> interop_madness: and?
[21:56:03] <interop_madness> smallville7123, how do you await a Task<T> in unmanaged C++ or C++/CLI?
[21:56:06] <canton7> If it's pure C++/CLI, you can pass Tasks through it just fine
[21:56:20] <canton7> You can't await it, but you can pass it through, or use the old-school .ContinueWith, etc
[21:56:36] <canton7> It's more painful without the language sugar though
[21:56:39] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:56:54] <smallville7123> if the C++/CLI calls the an async method then it is the C++/CLI responsibility to ensure there is a way to obtain the result of the async call
[21:56:59] <interop_madness> true, but then again, I would never write a C++/CLI UI app ^^
[21:58:10] <smallville7123> eg, if it only provides, say `nativeAsyncMethod` and no other calls then there is not much you can do other then attempt to edit the source for it
[21:58:13] <interop_madness> yes, and ensuring implies blocking ultimately, before the boundary of unmanaged C++ interfaces
[21:58:30] <canton7> I once wrote some horrible C++/CLI glue which took an interface based on asynchronous callbask using WaitForMultipleObjects on one side, and a nice Task-based interface on the other, and made them happy with each other
[21:59:04] <smallville7123> " before the boundary of unmanaged C++ interfaces" not really
[21:59:10] <canton7> Anyway, it's past hometime for me I'm afraid. Have a good weekend!
[21:59:32] <interop_madness> you too canton, and thanks
[21:59:40] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[22:00:02] <smallville7123> you can "block" after the async method has executed/returned and you should still obtain some sort of indication that it has finished
[22:00:25] <interop_madness> maybe we are talking about the same thing her?
[22:00:32] <bomb> canton7 is like Stanley in The Office. he talks C# and then leaves :)
[22:00:47] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[22:00:56] <smallville7123> eg "blocking" could simply be continually polling the async method's return status until it enters a known return status, or some other variable/callback
[22:01:10] <Guest87> Might be slightly OT but have any of you moved away from Docker Desktop since the licence changes? If so, what to?
[22:02:03] <interop_madness> CString GetData() { return static_cast<CString>(CSharpDll::CSharpClass::GetDataAsync()->GetAwaiter()->GetResult()); }
[22:02:22] <smallville7123> eg `while(native_all_data_is_processed() == false) { native_process_data(data); }`
[22:03:04] <smallville7123> here `native_all_data_is_processed` would return true when all data has been processed by the background thread/method
[22:03:43] <smallville7123> and native_process_data could simply nop while it is processing to avoid reprocessing the same data multiple times
[22:03:48] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[22:05:42] <smallville7123> or a more complex example
[22:06:24] <smallville7123> Thread 1: `while (all_data_read() == false) read_data();`
[22:06:58] <smallville7123> Thread 2: `while (all_data_sent() == false) send_data();`
[22:08:31] <smallville7123> both threads would transfer data asynchronously but in a synchronized way as so if one thread operates faster than the other it will not block but it will do nothing until the other thread is ready
[22:08:43] <smallville7123> depending on the implementation
[22:09:38] <smallville7123> eg if Thread 2 sends data faster than Thread 1 can read then send_data will do nothing until read_data has been called
[22:10:23] <smallville7123> if Thread 1 reads data faster than send_data then Thread 1 will do nothing until send_data has been called
[22:11:04] <smallville7123> (by do nothing i mean it will just return without having anything done, it WILL NOT BLOCK )
[22:11:19] <smallville7123> interop_madness:
[22:12:11] *** Quits: Guest87 (~Guest87@2a02:c7f:582d:5100:2df6:19c9:e0a:dc30) (Quit: Client closed)
[22:12:12] <interop_madness> smallville7123, I'll have to think about this further
[22:12:34] *** Joins: Assault (~Assault@87-95-118-72.bb.dnainternet.fi)
[22:12:36] <interop_madness> but yes, of course, busy wait would be an option
[22:13:54] <smallville7123> conditionals + notify would be perfered
[22:14:09] <smallville7123> but those are kinda complex to do right
[22:14:14] *** Joins: Guest87 (~Guest87@2a02:c7f:582d:5100:e93d:8ba1:b75c:de4e)
[22:14:20] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:15:50] <smallville7123> also there is the additional overhead of thread-synchronization itself
[22:16:14] <smallville7123> which is especially important in very very fast running code tha must be synchronized
[22:16:31] <smallville7123> which is especially important in very very fast running code that must be multi-threaded and synthronized *
[22:16:45] <smallville7123> synchronized*
[22:17:54] <smallville7123> not so important for casual stuff tho as we mostly dont care how synchronization impacts our code, we only care that it works
[22:19:09] *** Quits: Guest87 (~Guest87@2a02:c7f:582d:5100:e93d:8ba1:b75c:de4e) (Quit: Client closed)
[22:20:14] <interop_madness> thanks for the input, I'll take it into account smallville7123 (I've made notes of your suggestions)
[22:20:23] <interop_madness> But now... weekend!
[22:20:35] <interop_madness> have a good one everyone
[22:20:50] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[22:20:56] <smallville7123> :)
[22:22:40] <Suchiman> https://github.com/dotnet/runtime/issues/67151 weeee
[22:23:15] <jonp> wait, what?
[22:23:56] <smallville7123> oof
[22:24:30] <jonp> might make certain lock-free algorithms possible on 64-bit platforms…
[22:24:57] <DevJohnC> LongLong
[22:25:04] <jonp> `long long`
[22:25:10] <jonp> it's about time for a spaced operator, right? :-)
[22:25:30] <jonp> er, keyword
[22:25:53] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[22:34:23] *** Joins: GunArm1 (~barrett@firewall.mitsi.com)
[22:34:23] *** Quits: GunArm (~barrett@firewall.mitsi.com) (Read error: Connection reset by peer)
[22:39:14] *** Quits: zln (~zln@c83-249-48-11.bredband.tele2.se) (Quit: WeeChat 3.4.1)
[22:40:24] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[22:41:01] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[22:41:10] *** Joins: Guest87 (~Guest87@2a02:c7f:582d:5100:7921:1c31:e1df:8102)
[22:44:57] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[22:53:37] <MatthiasVance> Finally ordered a fucking bike
[22:53:48] <MatthiasVance> Insert parenthesis
[22:53:59] <MatthiasVance> parentheses
[22:55:19] <DevJohnC> kinky
[22:56:43] <MatthiasVance> DevJohnC: Oh yes
[22:57:20] <MatthiasVance> There's also a "Super Hero" mode, I wonder what that does
[22:58:37] <bomb> is "bike" a new drug?
[22:59:14] <MatthiasVance> You mean is it the new Flakka?
[22:59:20] <MatthiasVance> Probably a lot healthier
[22:59:47] <DevJohnC> it's a fucking bike, so, one of those bikes with the seat modified with a thrusting dildo, so kinky, I didn't know MatthiasVance had it in him
[23:00:02] <MatthiasVance> I will now
[23:00:07] <MatthiasVance> ;p
[23:00:15] <MatthiasVance> *It will be now
[23:01:03] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[23:02:47] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:16:51] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[23:17:37] *** Joins: bomb (~bomb@user/bomb)
[23:21:15] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[23:23:34] <Dean> MatthiasVance: is it a bike to ride? or a coding thing?
[23:23:54] <Dean> wait what did i just read
[23:24:01] <MatthiasVance> Dean: To ride
[23:24:04] <Dean> CSharp channel is wild.
[23:24:05] <Dean> LOL
[23:24:09] <MatthiasVance> :P
[23:25:19] <Dean> MatthiasVance: i had a lesson in c# yesterday. it was fun. it was to take input from the user and calculate the age of the user. but i was wondering if it caters internally for leap years.
[23:25:50] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:25:59] <MatthiasVance> Dean: Where do you follow your lessons? School or course or?
[23:26:17] <Dean> it is a friend of mine. he wanted to give a lesson. so we spent 2 hours. *_*
[23:26:52] <Dean> i got a book to learn from. its really long over 700 pages. i think it is long? its called... C#10 and .NET 6
[23:27:53] <scalablecory> MatthiasVance nice, i picked up an e-bike last year. it's super fun.
[23:28:05] <MatthiasVance> Dean: Holy shit
[23:28:10] <MatthiasVance> Dean: I can also recommend "Head First C#"
[23:28:11] <Dean> here is the code i wrote: https://paste.debian.net/1235613/
[23:28:13] <MatthiasVance> Less reading
[23:28:18] <MatthiasVance> Well maybe not less
[23:28:25] <MatthiasVance> But structured in a reasonably "fun" way
[23:29:09] <MatthiasVance> scalablecory: Neat! I did wonder whether to go with a settled brand (major player) but went for the techy "startup" :P
[23:29:15] <Dean> adhd makes every book really hard. even if it's 2 pages. i am almost through 'effective c' so i will now study c#.
[23:29:28] <MatthiasVance> No Concerta?
[23:29:35] <MichaelLong> MatthiasVance, e,g. van Moof?
[23:29:41] <MatthiasVance> MichaelLong: Van Moof is mehhh
[23:29:50] <MatthiasVance> I was totally Van Moof first until I discovered more about it
[23:29:58] <MatthiasVance> Their tech is superb though
[23:30:02] <MatthiasVance> But not the specs of the bike
[23:30:15] <MatthiasVance> MichaelLong: Then there's Cowboy, but Veloretti tops them both
[23:30:21] <MatthiasVance> In terms of bike specs
[23:30:27] <bomb> https://www.youtube.com/watch?v=ePG6zUYvUZg
[23:31:23] <MichaelLong> I'm also in for a new bike, mine is over. But not an e-bike, more a gravel bike or how that is named
[23:32:03] <MatthiasVance> Ah yeah, nice, for a real adventure
[23:32:10] <bomb> gravel bike lol
[23:32:20] <MichaelLong> not correct?
[23:32:25] <MatthiasVance> It's correct
[23:32:25] <bomb> wait is that a real thing?
[23:32:28] <MatthiasVance> yes
[23:32:44] <bomb> they look like mountain bikes
[23:32:47] <MichaelLong> https://en.wikipedia.org/wiki/Gravelbike
[23:33:07] <MichaelLong> nah not working that, way: https://en.wikipedia.org/wiki/Gravel_cycling
[23:33:58] <bomb> nice legs
[23:34:15] <MichaelLong> https://de.wikipedia.org/wiki/Gravelbike#/media/Datei:CAT700_2019_Bikepacking_en_bicicleta_de_gravel.jpg still way to many gears and tires are a little bit to big
[23:34:43] *** Quits: GunArm1 (~barrett@firewall.mitsi.com) (Read error: Connection reset by peer)
[23:34:48] <bomb> I don't know, they all look the same to me
[23:36:56] *** Joins: GunArm (~barrett@firewall.mitsi.com)
[23:42:34] <dan01[m]> hey guys
[23:42:52] <dan01[m]> Why is that you can't update GUI from another thread?
[23:46:14] <irwiss> dan01[m]: vast majority of code doesn't work right if more than one thread touches it at same time, unless it says it's threadsafe you can assume it'll break
[23:51:12] <dan01[m]> irwiss: So I deduce the answer is becuase another thread, namely the main thread owns the resource?
[23:51:58] <irwiss> it's less about ownership, and more about most code not being designed to be reentrant
[23:52:44] <dan01[m]> Yeah but I mean why
[23:52:56] <dan01[m]> Like what's happening behind the scenes
[23:53:02] <irwiss> because it's significantly more complex to do it, and when you do it there's a tons of lost performance due to locking
[23:54:07] <irwiss> usually you either have a dispatcher or some kind of other queuing mechanism that'll just run your code synchronously
[23:55:53] <Suchiman> dan01[m]: there's also something about COM and apartment states and the likes
[23:59:23] *** Quits: Tazy (~Tazmainia@2001:1c02:170b:3d00::1016) (Ping timeout: 252 seconds)
