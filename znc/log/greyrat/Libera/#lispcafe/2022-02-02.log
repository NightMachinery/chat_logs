[00:00:08] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[00:11:02] <v3ga> ah that so f'ing weird... i'll come back to it.  
[00:11:13] <ck_> v3ga: oh, the promt you're seeing might be a part of the generated .js / .html files
[00:11:25] <ck_> in your build directory or whereever. did you clean that up too?
[00:12:08] <v3ga> i should have... deleted target...then in my public folder i'm pulling js from a diffrent file and directory. i'd think that would be enough
[00:12:45] <ck_> and the state you see in the browser is reflecting that? or is there caching going on
[00:13:17] <v3ga> yeah the state reflects it's pulling the right one... 
[00:13:58] <ck_> if all that is true, there must still be a shadow-cljs server running
[00:14:23] <v3ga> ck_: yeah I did a system reset thinking that was the case... actually let me check
[00:14:33] <v3ga> maybe tmux was holding one...
[00:14:39] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[00:17:47] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[00:19:32] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[00:27:06] *** Joins: Catie (~user@user/catie)
[00:43:04] *** Joins: hayley (~theemacss@user/hayley)
[00:45:42] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[00:47:58] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:56:10] <v3ga> ck_: oddly enough... no.   i'll come back to it tonight.  i have backend stuff i can work on.  i may need to just go back to shadow since it wont let me go.
[01:03:32] *** Quits: gilberth (~gilberth@p5b157756.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:03:54] *** Quits: ixelp (~ixelp@p5b157756.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:12:30] *** Parts: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) ()
[01:18:10] *** Joins: pjb (~pjb@user/pjb)
[01:25:29] <v3ga> oh crap, i'm sorry. i thought i was in #clojure lol
[01:26:34] <White_Flame> #lispclojafe
[01:34:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[01:34:41] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:35:54] <v3ga> lol...this damn 40% keyboard....
[01:36:23] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:39:11] <hayley> https://www.youtube.com/watch?v=VD4b6Sxz2A8
[01:40:47] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Ping timeout: 256 seconds)
[01:47:58] *** Joins: sham1_ (~sham1@212-146-44-107.aboa.net)
[01:48:32] *** Quits: sham1 (~sham1@212-146-44-107.aboa.net) (Ping timeout: 240 seconds)
[01:48:58] *** Quits: molson (~molson@2001:48f8:704a:123d::75f:1037) (Ping timeout: 250 seconds)
[01:53:47] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[02:11:30] *** sham1_ is now known as sham1
[02:20:29] <mfiano> Well, standard illuminant chromaticity coordinates mapped to their white points are coded. Yes, I am still deep in the weeds of color science.
[02:26:31] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[02:29:52] *** Joins: LispyLights (~LispyLigh@user/lispylights)
[02:30:11] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Killed (NickServ (GHOST command used by LispyLights)))
[02:30:19] *** LispyLights is now known as Aurora_v_kosmose
[02:38:43] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:1911:b0fe:6f92:2189)
[02:44:32] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[02:48:48] <neominimum> Doom Emacs wants to natively compile 2700 .el's on my 10 year old mid range laptop. It's been 1.25 hours and it's got 925 to go! Such speed!
[03:18:24] <hayley> JIT when
[03:43:17] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:1911:b0fe:6f92:2189) (Remote host closed the connection)
[03:53:20] <mfiano> If I have N things that need to be converted to every other thing (N-1), and I write a macro to generate each function, what is the Big O "code size complexity"?
[03:54:28] <sm2n> n^2
[03:54:52] <sm2n> Edge set of a complete digraph
[03:55:04] <semz> N(N-1) = N² - N ∈ O(N²)
[03:55:11] <mfiano> Ok someone told me it was N!, maybe I explained it improperly
[03:55:13] <kakuhen> ^
[03:55:24] <moon-child> yes, it's not n!
[03:55:33] <moon-child> it's the sum up to n, not the product; that is quadratic
[03:55:37] <moon-child> note if you pick a common format and make everything go through that instead you get O(n)
[03:55:43] <kakuhen> n! would be if you had to operate on like, every permutation of a list of elements
[03:55:53] <semz> very few things you usually encounter have O(n!), and if you do encounter one, yer fucked
[03:56:38] <mfiano> moon-child: Yeah I am doing the common format for color spaces, but this is for standard illuminants, which must be convertible to every other one. Luckily there are only about 30 ones defined by standards.
[03:56:41] <kakuhen> yeah, everything O(n!) i can think of will be computing some sum over all permutations in S_n
[03:58:16] <semz> but maybe still a thing to think about since O(n²) is infamously treacherous - low enough to be fast in tests and high enough to be a pain in real use
[03:58:33] <semz> ~900 functions is already starting to sound rough to me
[03:58:35] <mfiano> semz: Luckily this is compile time
[03:58:52] <mfiano> and that is nothing compared to GLSL swizzle operator generation :)
[03:59:12] <sm2n> semz: Rust does it so it is good
[03:59:22] <moon-child> semz: only 435
[03:59:29] <moon-child> n(n-1)/2
[03:59:41] <moon-child> mfiano: i want scatter/gather
[03:59:48] <mfiano> say what?
[04:00:30] <semz> he needs one conversion for each direction, no?
[04:01:39] <moon-child> mfiano: generalization of swizzling to vectors of arbitrary lengths
[04:01:45] <moon-child> scatter is write, gather is read
[04:02:27] <mfiano> Here are only a subset of the standard illuminants in the table, I am only interested in generating the Bradford matrices, but for more standard illuminants than these (about 30 total): http://www.brucelindbloom.com/index.html?Eqn_ChromAdapt.html
[04:02:54] <moon-child> oh--so it's all the same code, just different data?
[04:03:19] <mfiano> Different inputs and outputs, same algorithm for each function
[04:03:58] <mfiano> inputs would be 2 standard illuminants, output would be a matrix to multiply every color in an image by, to apply chromatic adaptation
[04:04:18] <mfiano> by standard illuminants, i mean the name, like :A or :D65
[04:04:19] <moon-child> then why do you need to generate multiple functions?  Just write one function and parametrize it appropriately
[04:04:32] <mfiano> so (foo :a :d65) ; => mat3
[04:04:55] <mfiano> It will be a single generic function.
[04:05:12] <mfiano> By multiple I mean methods, generated at compile time, with the result wrapped in LOAD-TIME-VALUE
[04:10:52] <aeth> amazing quarter for AMD... https://old.reddit.com/r/AMD_Stock/comments/shzhh6/amd_q4_2021_earnings_megathread/?sort=confidence
[04:12:58] *** Quits: Alfr (~Alfr@user/alfr) (Quit: Leaving)
[04:19:35] *** Joins: molson (~molson@2001-48F8-704A-123D-0-0-75F-1037-static.midco.net)
[04:38:15] *** Joins: Alfr (~Alfr@user/alfr)
[04:43:27] <epony> well, Taiwan is making these
[04:43:31] <epony> (TSMC)
[04:43:42] <epony> but the profit stays in USA
[04:44:39] <epony> and that's mostly consumer CPUs, have to see the server market reclaim AMD's presence too
[04:45:03] <epony> Ryzen is obviously the better general purpose processor series
[04:45:21] <clothespin_> i bought an amd
[04:45:36] <epony> nice, I'll get one too
[04:45:44] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 256 seconds)
[04:45:57] <epony> been getting Amd CPUs after the P5 peak in Intel's designs
[04:46:04] <clothespin_> my pc is the size of a to-go box for a sandwich
[04:46:28] <epony> my servers are now mini-ITX form factor since 2010
[04:46:54] <epony> the 64bit epoch belongs to AMD
[04:47:23] <hayley> gilberth is probably out celebrating.
[04:47:38] <epony> just laptops and servers are mostly Intel.. but that is due to market intertia and deals with manufacturers and board vendors
[04:47:55] <epony> is he an AMD proponent?
[04:47:59] <hayley> Someone suggested I just try to merge the commits and handle the fallout^Wconflicts and compiler errors from that.
[04:48:37] <epony> note, my personal laptop and server machines are Intel Atom CPUs ;-) go figure
[04:48:51] <epony> just the towers are AMD since PC99
[04:49:59] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 252 seconds)
[04:50:32] *** Joins: gilberth (~gilberth@p5492d317.dip0.t-ipconnect.de)
[04:50:33] *** ChanServ sets mode: +o gilberth
[04:52:11] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[04:52:17] <sm2n> sounds like it could work
[04:58:31] <gilberth> Ok. twm doesn't mind, if I just resize its window. That is my real parent with the decoration.
[05:04:16] <hayley> But the issue is that the SBCL GC stuff has almost all changed, so I don't want to find out what doesn't conflict according to git the hard way.
[05:09:19] <gilberth> In my case it should be easy. I have a top-level window only as all my subwindows are non-mirrored. That is: I could set the bit gravity to forget, render the top level window at its new size to a pixmap, set that pixmap as the background of my window and resize the window. The X server would then clear the window to just the background pixmap, which is the new content.
[05:12:33] *** Quits: Catie (~user@user/catie) (Remote host closed the connection)
[05:13:14] *** Joins: Catie (~user@user/catie)
[05:14:10] <gilberth> However there may be windows behind my window, which when I shrink in size are exposed and may flicker.
[05:15:21] *** Joins: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[05:21:27] <gilberth> I believe this whole bit gravity concept is there to make resize flicker less, as it also applies to the position of an inferior window. And there is this UnmapGravity, which is strange as subwindows will get unmapped when the window size changes.
[05:21:30] <gilberth> Hmm.
[05:22:36] *** Quits: qhong (~qhong@rescomp-21-400677.stanford.edu) (Ping timeout: 250 seconds)
[05:24:38] *** Quits: random-nick (~random-ni@87.116.181.150) (Ping timeout: 252 seconds)
[05:24:54] *** Joins: ixelp (~ixelp@p5492d317.dip0.t-ipconnect.de)
[05:24:54] *** ChanServ sets mode: +o ixelp
[05:28:41] <gilberth> As the X server is stupid an executes my requests as they come in without first batching all geometry changes to then get at new exposed region, I face a problem with the real parent, when I grow in size. Resizing the real parent first would expose its background, which the server would happily draw and only then process the subsequent resize of my top level window.
[05:30:40] <epony> which reminds me about Xephyr and Xnest and the need for a prefix to send to the internal WM here.. using cwm (calm window manager), part of OpenBSD (includes also fvwm, and the standard X ones like twm and ctwm)
[05:30:50] <gilberth> => Flicker. When I do in reverse, I would change my size, which with NorthWest gravity would result in no drawing as nothing is exposed. I resize the parent window, my new space would be exposed and perhapes the newly computed background of mine blittered. Half my window is old and the other half is new. => Flicker, again.
[05:31:09] <epony> oups, ctwm is an extra package
[05:32:49] <hayley> gilberth: You ever tried to use years old patches?
[05:33:53] <gilberth> hayley: Yes, it involved browsing .rej files and applying diffs manually.
[05:34:17] <hayley> .rej?
[05:34:43] <gilberth> The rejected patches patch(1) leaves for you to pick up.
[05:35:42] <hayley> Right.
[05:35:57] <epony> anyone tried lwm?
[05:35:59] <hayley> I expect to perform the patch myself, sure.
[05:37:33] *** Quits: Catie (~user@user/catie) (Quit: heading home)
[05:38:05] <gilberth> If it's a diff with context and patch(1) just doesn't find the spot to apply a diff, there is some option to patch to be less picky.
[05:39:00] <hayley> I'm pretty sure I would want patch to be picky, as seemingly most of the code has moved around. Thus being less picky would not work too well.
[05:39:46] <gilberth> Well diffs with contexts are there for coping with code just moving.
[05:40:24] <hayley> https://www.reddit.com/r/HermanCainAward/comments/shxxoq/blue_was_a_retired_cop_and_current_school_board/ lol
[05:50:47] <gilberth> Anyhow, I believe proposing any fixes to X11 is a futile attempt.
[05:54:04] <epony> https://a.fsdn.com/con/app/proj/motif/screenshots/motif234.png
[05:54:24] <gilberth> I mean, people brag about "every frame perfect" but don't even fix the DOUBLE-BUFFER extension. And that fix would be really trivial.
[05:56:13] <epony> motif window manager (mwm) uses that "openmotif" package
[05:56:52] <gilberth> I should call that a night and quit ranting. I am in bad mood whole day anyway. Tomorrow will be better.
[05:59:52] * hayley makes a shopping list <https://github.com/no-defun-allowed/swcl/issues/1>
[06:01:00] <gilberth> hayley, I am disappointed, I was hoping for you to configure me a new machine.
[06:01:18] <hayley> (Yes, most items are just one function, because lock free and/or DIY locking code is never fun.)
[06:01:34] <hayley> gilberth: You can thank me later, when you have a GC that uses more than one core.
[06:02:16] <gilberth> You work on a new GC for CCL?
[06:02:39] <hayley> SBCL. Probably sucks for you, come to think of it.
[06:02:47] <hayley> Or, pedantically SWCL.
[06:03:01] <gilberth> I am fine with the GC that I have available.
[06:03:16] <moon-child> you shan't send it upstream once you are done with it?
[06:03:40] <hayley> I will, but SWCL is basically staging. That's how the block reordering code worked.
[06:03:46] <gilberth> What kind of word is "shan't"?
[06:03:53] <moon-child> short for 'shall not'
[06:04:19] <gilberth> Oh, at least I learned something today.
[06:05:18] <gilberth> moon-child: I never heard that. Is that in common use or considered old or fancy?
[06:05:28] <hayley> Can I make a cpp macro s.t. with_one_thread { ... } == if (on_main_thread) { ... }? Guess so.
[06:05:53] <hayley> #define with_one_thread if (!on_main_thread) { wait(); } else 
[06:06:13] <moon-child> gilberth: hmm, it is not that common these days, but then again neither is 'shall'
[06:06:35] <gilberth> hayley: That's kind of evil. Consider for()
[06:07:46] <gilberth> moon-child: Right. You don't see "shall" often. Or at least I don't.
[06:08:21] <moon-child> why for?  I would rather:  if (on_main_thread || (wait(),0))
[06:09:27] <gilberth> I am afraid of that else. What should that achieve?
[06:09:55] <hayley> https://www.reddit.com/r/HolUp/comments/shr9pj/a_high_end_gaming_pc_after_realising_the/ lol again
[06:09:57] -ixelp- A high end gaming pc after realising the surpemacy of german science. : HolUp
[06:10:31] <moon-child> oh, yes, right
[06:12:56] <hayley> Odd, YouTube deleted my Baker posting comment on that Jon Blow video.
[06:13:54] <gilberth> Well, idk. I use for when I want to write a macro, which should accept one statement with if/while/for/switch like syntax. And I gathered that this is what hayley wanted. To use like: with_one_thread() printf ("hi, there\n");
[06:22:22] *** Joins: aeth_ (~aeth@user/aeth)
[06:25:15] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[06:26:56] *** aeth_ is now known as aeth
[06:31:56] <waleee> "Steel Wool Common Lisp" nice :)
[06:34:57] <hayley> gilberth: https://i.redd.it/2yfh0mlkp8f81.png
[06:41:51] <gilberth> There is no section 4.6.3.1.8 in the Hyperspec.
[06:42:23] <hayley> It says 4.3.6.1.8 though.
[06:42:40] <gilberth> My bad.
[06:43:01] <gilberth> Doesn't exist either.
[06:43:17] <hayley> Haha, made you check.
[06:43:29] <gilberth> Who wants to parse HTML with regular expressions?
[06:43:40] <gilberth> hayley: I know off my head. Not.
[06:44:04] <hayley> https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags
[06:44:05] -ixelp- html - RegEx match open tags except XHTML self-contained tags - Stack Overflow
[06:44:13] <gilberth> And for some reason I don't like the term "regex".
[06:45:43] <gilberth> The language of open tags should be regular. Watch out for attributes and comments, though.
[06:46:06] <hayley> "You can generate the correct pattern with a script that does each of these in order: Solve the Halting Problem. Square a circle. Work out the Traveling Salesman Problem in O(log n) or less. If it's any more than that, you'll run out of RAM and the engine will hang. The pattern will be pretty big, so make sure you have an algorithm that losslessly compresses random data. Almost there - just divide the whole thing by zero. Easy-peasy."
[06:47:00] <gilberth> I don't need to count to match an open tag. And there is no recursion either.
[06:52:02] <gilberth> And the original poster asked for a regular expression to match open tags. Not for sth to parse HTML.
[06:55:19] <moon-child> ah man
[06:55:27] <moon-child> microcontroller I ordered arrived
[06:55:48] <moon-child> it is smaller than I expected (shouldn't have been surprised, given it is called 'teensy', but)
[06:56:14] <moon-child> and in particular, the 8mb additional flash is tiny.  Don't know if my meager soldering skills will be up to the task
[06:57:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[06:57:40] <hayley> 8 milli-bits? Yes, that'd be tiny.
[06:57:43] <gilberth> moon-child: What's the pitch?
[06:58:09] <gilberth> Or the case?
[06:58:14] <moon-child> gilberth: i'm gonna make a keyboard
[06:58:51] <gilberth> They, that's kewl. With USB?
[06:59:10] <moon-child> indeed!
[06:59:14] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[06:59:23] <moon-child> I have the key switches, have now the microcontroller.  Still need keycaps and a case
[06:59:38] <moon-child> latter will probably order from maltron.  Former, I have been unable to find at a decent price :/
[07:00:18] <gilberth> Could the MCU of yours do both sides of USB. I really want a dongle to translate an existing USB keyboard. That is [keyboard]-->[dongle]-->[machine].
[07:00:36] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[07:01:33] <moon-child> yep.  I would need to solder some wires, but it can act as a host
[07:01:42] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 276 seconds)
[07:01:51] <moon-child> though idk if it can deliver power.  Might need to splice that in from elsewhere
[07:02:02] <gilberth> But I am an USB noob. I grew up with PS/2, which I know quite well.
[07:02:27] *** Joins: aeth (~aeth@user/aeth)
[07:02:40] <gilberth> moon-child: Perhaps we could cheat in my case and borrow the power from the device side.
[07:02:46] * moon-child knows little about either
[07:03:09] <moon-child> controller comes with a usb library.  I was planning to try to write my own, though
[07:03:12] <gilberth> moon-child: The keyboard yours, what kind will it be? A space cadet like one?
[07:03:24] * moon-child looks up space cadet keyboard
[07:03:44] <gilberth> Lispm keyboard with lots of modifier bits.
[07:03:48] <moon-child> oh the lisp machine thingies
[07:05:09] <moon-child> I was planning to get a case from one of these people http://maltron.com/uploads/6/1/2/5/61250099/s975165200556924565_p21_i5_w640.jpeg
[07:05:15] <moon-child> so, then, as many modifiers as will fit :P
[07:05:24] <moon-child> I have no need of a numpad, so can probably do something more fun with the centre bit
[07:05:52] <gilberth> You plan that shape?
[07:07:39] <moon-child> yeah
[07:13:52] <gilberth> Well I am happy with my keyboard but for macos and the silly idea of both Parallels and Virtual Box to not offer me to transport my keymap to the emulated machine. Macos lacks modifiers and what is <option> is either <meta> or <altgr> for accented characters. Only Emacs could be configured so that I have a <meta> key and an <altgr> key.
[07:14:24] <gilberth> The <command> key has so many shortcuts assigned to it, some of which you can't turn off, that it's useless.
[07:14:58] <moon-child> you cannot interpose your own key h andling in front of parallels and virtual box?
[07:15:07] <moon-child> I used a tool called karabiner on macos
[07:15:13] <gilberth> My idea is to have a dongle, which would translate my idea of a keymap to a standard US-ASCII layout and be set. It would generate <ESC> + key for meta, or sth.
[07:16:27] <moon-child> yes, it is nicer to do it in hardware.  I did my keymapping in x, and so it was frustrating to use arcan, or windows, or the kernel's ttys
[07:17:09] <gilberth> moon-child: Karabiner works fine for me with 10.10, I had no luck with 10.14. Especially not with the modifier mapping. The most annoying thing is that Parallels insists on what is my <control>-<meta> to be the key combination to release the mouse grab.
[07:18:47] <gilberth> The old Karabiner was clever. I have ( and ) where you usually have [ and ]. I press physical [ and Karabiner turns that into <shift> down <9> down <9> up <shift> up.
[07:19:02] <gilberth> And that worked with VMs too.
[07:20:06] <moon-child> hmm.  I do not know how it works on macos.  But usually a good input translation layer will distinguish the button which was pressed from the text it produced
[07:20:29] <moon-child> so pressing some key can produce a 'left bracket', but also be associated with the text "("
[07:20:57] <gilberth> What I don't get is why neither Parallels nor Virtual Box can't translate the keyboard for me. I do that with the CADR console of mine. I look at the keymap like any application, see the Keysym for say '(' and send the right sequence of keypresses to the CADR to make it type '('. Bad example as the CADR keyboard has '(' and ')' where I have it :-)
[07:22:02] <gilberth> moon-child: You have that in macos too. You could get keycodes or the cooked keysym. Just like with X11.
[07:23:26] <gilberth> It's just that those VMs translate on a keycode level, no matter what the keymap is. So I need to configure the correct keymap in every OS I want to run there. And for Windows, I don't even know where to start, nor would I really want to know.
[07:23:56] <moon-child> well, I would like more than just a cooked keysym.  Like, what if I have a keystroke which corresponds to multiple characters?  In particular, something like a separate IME
[07:24:13] <mfiano> Uh oh. My macro expansion blows my stack somehow
[07:24:16] <moon-child> I am pretty sure X has this.  I did something similar in my toy os (though somewhat more low-level)
[07:25:05] <hayley> https://www.reddit.com/r/rust/comments/shw313/announcing_leapfrog_a_faster_concurrent_hashmap/ But is it faster than NonBlockingHashMap?
[07:25:06] -ixelp- Announcing Leapfrog, a faster concurrent HashMap : rust
[07:25:21] <gilberth> There are input methods for X11. Pretty complicated stuff. And libX11 (NOT the keyboard extension) does its own thing.
[07:25:23] <hayley> "I have benchmarked this against other concurrent HashMap implementations and thus far the results are promising, at 16 CPU cores it's 2x the performance of DashMap" IME that's a "no" then.
[07:27:12] <moon-child> I put all the input translation stuff (including things like shift + x -> X) in its own service, so fancier IME can be done transparently.  I'm not 100% happy with the design still, but eh, it is a toy
[07:27:23] <hayley> At least, they claim to get 167.8 million mostly reads/second on a 3950x, whereas I recall NBHM getting scarily close to 500M on the somewhat olde university servers.
[07:27:40] <gilberth> moon-child: Anyhow, I have no special needs for fancy characters, at least not with some OS in a VM. All I want is that '(', '[', '{', '}', ']', ')', '-', and '/' are where I am used to to have them. And I want a working <meta> key and a working <altgr> key.
[07:27:58] <moon-child> what is altgr for but making fancy characters?
[07:28:54] <gilberth> Yøü cåll æccénted chäracters fäncÿ?
[07:29:11] * hayley tries to ssh to university and it hangs. Bad.
[07:29:17] <moon-child> gilberth, I am an american.  Everything but us-ascii is fancy
[07:29:35] <hayley> Oh, it only took two attempts.
[07:30:00] <gilberth> Yep, that suckß, I feel sårry for you.
[07:30:51] <gilberth> moon-child: Is iTerm open source?
[07:31:14] <moon-child> gpl apparently
[07:31:34] <gilberth> Good. I could perhaps teach it a <meta> key.
[07:31:37] <hayley> ok, best I got out of 32 threads on a dual E5-2690v2 machine was 275e6 ops/s. Which I deem to be better than 167.8e6 on a newer, UMA machine.
[07:32:08] <hayley> Given those CPUs are apparently 8.5 years old.
[07:33:16] <hayley> Cliff Click 1-0 crabs
[07:41:43] *** Quits: clothespin_ (~awolven@c-73-209-95-92.hsd1.il.comcast.net) (Remote host closed the connection)
[07:53:06] <moon-child> some things I do not understand.  I got an electric kettle on amazon.  Now it is suggesting I get more
[07:55:25] <hayley> Hm, maybe I should just start (some part of) the parallel GC from scratch.
[07:55:48] <hayley> All I need is the "block list" abstraction, and a thread safe forwarding pointer-grabbing system.
[07:56:37] <moon-child> oh, for some reason I assumed you were just doing parallel mark
[07:57:03] <hayley> Parallel copying.
[07:57:28] * moon-child nods
[07:57:42] <moon-child> atomic ptr bump or separate regions?
[07:58:08] <hayley> Separate regions (the Haskell people call them "blocks". Hence the block chain^Wlist)
[07:58:18] <moon-child> hahaha
[07:58:36] <hayley> SBCL already has "pages" for TLABs and for pinning objects.
[08:00:05] <masinter> we have a lot of issues with key bindings in Medley because modern keyboard drivers do lots of translations, while the lisp machine dealt with varying different keyboards in lisp
[08:01:28] <hayley> I wonder if I can afford to have CAS-or-not be a runtime test, instead of compile-time, based on the number of GC threads used. Then there'd be no need for a separate configuration for serial machines.
[08:01:58] <hayley> ...but then I'd have threading stuff in #-SB-THREAD builds. Oops.
[08:03:16] <moon-child> masinter: what's the issue?  Can you not still perform the same translations on translated keys?
[08:04:59] <masinter> i'm trying to understand the issue, it came up in a bug report from someone trying to use a german keyboard
[08:05:51] * moon-child nods
[08:05:57] <masinter> there are apparently (I don't have a german keyboard) there are combining characters
[08:06:06] <masinter> like a circumflex
[08:06:16] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:06:29] <masinter> when you press it there are no keyboard events sent over X or vnc
[08:06:36] <moon-child> sounds like a unicode issue honestly :P bet interlisp precedes unicode
[08:07:12] <masinter> but later if you press a U yoou'll get a U-with-circumflex in a normal unix application
[08:07:16] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[08:07:58] <masinter> but if you ask for key events instead of key codes it looks like the circumflex key is dead
[08:08:09] <hayley> And then /me wonders if the additional branches and tests will hurt. But we have branch predictors for a reason.
[08:08:29] *** Joins: semz_ (~semz@user/semz)
[08:08:44] <masinter> this has nothiing (or very little) to do with unicode vs. xccs
[08:09:15] <hayley> As the number of GC threads remains constant, then caches can safely share that cache line without any coherency-related problems.
[08:09:26] <masinter> medley had xccs but unicode was based on xccs
[08:10:41] <moon-child> oh, dead key; I thought it actually sent a combining circumflex character
[08:10:46] <moon-child> hayley: hotswap cpus? ;)
[08:11:10] *** Quits: semz (~semz@user/semz) (Ping timeout: 250 seconds)
[08:12:23] <hayley> https://simonmar.github.io/bib/papers/parallel-gc.pdf
[08:12:24] <masinter> i think we have to change the interface to the keyboard to allow a stream of characters in an encoding
[08:16:36] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 245 seconds)
[08:16:38] <masinter> there are at least 5 or 6 layers of keyboard handling in interlisp.online
[08:17:05] <hayley> Huh, so ourself.io has competition?
[08:18:30] <masinter> https://smalltalkzoo.thechm.org/
[08:18:31] -ixelp- welcome
[08:22:10] <masinter> haylay: https://www.softwarepreservationnetwork.org/emulation-as-a-service-infrastructure/
[08:22:11] -ixelp- Emulation-as-a-Service Infrastructure | Software Preservation Network (SPN)
[08:30:59] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:35:26] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[08:36:47] <gilberth> masinter: Are you sure that this not an libX11 issue?
[08:39:30] <gilberth> Or rather: Who processes the dead key? libX11 or the X server. What do you get when you use Core X11? On another note: What's the problem? Just translate the Keysyms you get whatever keys need to be pressed or depressed for the emulated machine. This is what I do with my CADR console and it works fine.
[08:40:54] <masinter> the medley interface was inherited from the d-machines
[08:41:41] <masinter> which had a bit vector of keyboard state
[08:42:43] <masinter> you could write code that did (while (keydownp (keycode p)) ...)
[08:42:57] <gilberth> And?
[08:43:21] <masinter> waiting until the P key was raised
[08:44:11] <masinter> the keyboard interface in X11 has two modes (I am told)
[08:44:26] <gilberth> Yes, and what's the problem?
[08:45:18] <masinter> the bit vector method doesn't pass any event when the circumflex is pressed
[08:47:09] <gilberth> First, who eats that? And second: Has the machine a dead circumflex? And third: Is that the regular '^' key without any compose prefix or something?
[08:47:43] <masinter> https://github.com/Interlisp/medley/issues/334
[08:47:44] -ixelp- Problems with German keyboard · Issue #334 · Interlisp/medley · GitHub
[08:50:24] <gilberth> This does not answer my questions.
[08:52:24] <epony> https://deskthority.net/wiki/images/e/e2/Mitsumi_KFK-EA4XA_--_top.jpg
[08:52:59] <masinter> "who eats that?"  -- there are at least two different layers
[08:54:28] <gilberth> Zes, and itäs ?not? X11. *meswitchesbacktoasanekeyboardmap* Yes, and it's not X11 which eats the silly dead <^>
[08:54:36] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[08:55:17] <gilberth> So it's up to the application to process the dead circumflex.
[08:57:28] <gilberth> Thus you have decide on which level you want to translate, pick one: keycodes, keysym, or whatever XLookupString says.
[09:02:36] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[09:03:47] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[09:08:12] *** Quits: gilberth (~gilberth@p5492d317.dip0.t-ipconnect.de) (*.net *.split)
[09:08:12] *** Quits: Alfr (~Alfr@user/alfr) (*.net *.split)
[09:08:12] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (*.net *.split)
[09:08:12] *** Quits: APic (~apic@apic.name) (*.net *.split)
[09:08:12] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (*.net *.split)
[09:08:12] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (*.net *.split)
[09:08:12] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (*.net *.split)
[09:08:13] *** Quits: contrapunctus (a75f5b1571@jabberfr.org) (*.net *.split)
[09:08:13] *** Quits: cross_ (~cross@spitfire.i.gajendra.net) (*.net *.split)
[09:08:13] *** Quits: semz_ (~semz@user/semz) (*.net *.split)
[09:08:13] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (*.net *.split)
[09:08:13] *** Quits: ixelp (~ixelp@p5492d317.dip0.t-ipconnect.de) (*.net *.split)
[09:08:14] *** Quits: molson (~molson@2001-48F8-704A-123D-0-0-75F-1037-static.midco.net) (*.net *.split)
[09:08:14] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (*.net *.split)
[09:08:14] *** Quits: easye (~user@oxi.slack.net) (*.net *.split)
[09:08:14] *** Quits: susam (~susam@user/susam) (*.net *.split)
[09:08:14] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[09:08:14] *** Quits: robin (~robin@user/terpri) (*.net *.split)
[09:08:14] *** Quits: payphone (dd09ba4109@2604:bf00:561:2000::20b) (*.net *.split)
[09:08:14] *** Quits: jasom (f3e90f0325@2604:bf00:561:2000::3a6) (*.net *.split)
[09:08:15] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (*.net *.split)
[09:08:15] *** Quits: lagash (lagash@lagash.shelltalk.net) (*.net *.split)
[09:08:15] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (*.net *.split)
[09:08:15] *** Quits: elflng (~elflng@5.28.137.182) (*.net *.split)
[09:08:15] *** Quits: mcoll (1cd8fbb055@2604:bf00:561:2000::160) (*.net *.split)
[09:08:15] *** Quits: sm2n (ae95cb1267@user/sm2n) (*.net *.split)
[09:08:15] *** Quits: axvr (757f658d76@2604:bf00:561:2000::e1) (*.net *.split)
[09:08:15] *** Quits: trn (jhj@sourcehut/user/trn) (*.net *.split)
[09:08:15] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:08:15] *** Quits: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se) (*.net *.split)
[09:08:16] *** Quits: malaclyps (~mala@user/malaclyps) (*.net *.split)
[09:08:16] *** Quits: Oddity (~Oddity@user/oddity) (*.net *.split)
[09:08:16] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (*.net *.split)
[09:08:16] *** Quits: luis (~luis@lisp/luis) (*.net *.split)
[09:08:17] *** Quits: JSharp (sid4580@id-4580.lymington.irccloud.com) (*.net *.split)
[09:11:51] *** Quits: sham1 (~sham1@212-146-44-107.aboa.net) (Ping timeout: 256 seconds)
[09:16:56] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[09:17:01] <moon-child> netspliiiiiiiiiiiiiit
[09:21:15] *** Joins: Oddity (~Oddity@user/oddity)
[09:21:15] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[09:21:15] *** Joins: luis (~luis@lisp/luis)
[09:22:45] *** Joins: semz_ (~semz@user/semz)
[09:22:45] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:22:45] *** Joins: ixelp (~ixelp@p5492d317.dip0.t-ipconnect.de)
[09:22:45] *** Joins: molson (~molson@2001-48F8-704A-123D-0-0-75F-1037-static.midco.net)
[09:22:45] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[09:22:45] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[09:22:45] *** Joins: easye (~user@oxi.slack.net)
[09:22:45] *** Joins: susam (~susam@user/susam)
[09:22:45] *** Joins: robin (~robin@user/terpri)
[09:22:45] *** Joins: payphone (dd09ba4109@2604:bf00:561:2000::20b)
[09:22:45] *** Joins: jasom (f3e90f0325@2604:bf00:561:2000::3a6)
[09:22:45] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[09:22:45] *** Joins: lagash (lagash@lagash.shelltalk.net)
[09:22:45] *** Joins: mfiano (~mfiano@li1282-157.members.linode.com)
[09:22:45] *** Joins: elflng (~elflng@5.28.137.182)
[09:22:45] *** Joins: mcoll (1cd8fbb055@2604:bf00:561:2000::160)
[09:22:45] *** Joins: sm2n (ae95cb1267@user/sm2n)
[09:22:45] *** Joins: axvr (757f658d76@2604:bf00:561:2000::e1)
[09:22:45] *** Joins: trn (jhj@sourcehut/user/trn)
[09:22:45] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:22:45] *** Joins: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se)
[09:22:45] *** Joins: malaclyps (~mala@user/malaclyps)
[09:22:45] *** erbium.libera.chat sets mode: +o ixelp
[09:23:35] *** Joins: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de)
[09:23:35] *** Joins: gilberth (~gilberth@p5492d317.dip0.t-ipconnect.de)
[09:23:35] *** Joins: Alfr (~Alfr@user/alfr)
[09:23:35] *** Joins: atw (~user@ool-18bf5678.dyn.optonline.net)
[09:23:35] *** Joins: APic (~apic@apic.name)
[09:23:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[09:23:35] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[09:23:35] *** Joins: contrapunctus (a75f5b1571@jabberfr.org)
[09:23:35] *** Joins: cross_ (~cross@spitfire.i.gajendra.net)
[09:23:35] *** erbium.libera.chat sets mode: +o gilberth
[09:24:21] <masinter> i'm hoping we can deprecate X11
[09:24:51] *** Joins: JSharp (sid4580@id-4580.lymington.irccloud.com)
[09:25:13] <masinter> use VNC for remote access and SDL for local
[09:25:38] <gilberth> That is I receive a keysym for say "&" and then go into the CADR keymap, which I extracted from the sources, and figure out what key press with what modifiers it wants to see to make that happen.
[09:26:05] <gilberth> You're kidding.
[09:28:46] <masinter> I think most tourists will use interlisp.online
[09:32:08] <gilberth> You will never match the speed of X11. ~30Mbps, ~60ms latency: <https://free-clim.org/cadr-munch.mov>
[09:33:11] <moon-child> never?  That's a tall order
[09:34:12] <gilberth> Well, for me SDL was a real speed killer.
[09:34:54] <masinter> it's plenty fast
[09:35:35] <moon-child> via net?
[09:35:39] <gilberth> And instead of SDL, we should rather use GLUT.
[09:36:03] <moon-child> eh??  GLUT??  I think that is not maintained
[09:36:03] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:36:11] * moon-child does not believe in real-time software rendering regardless, but
[09:36:19] <masinter> try it -- https://interlisp.online
[09:36:26] <gilberth> moon-child: Yes, my poor machine here cannot do the CADR 25ns cycle time.
[09:36:42] <masinter> it
[09:37:02] <gilberth> moon-child: GLUT works fine.
[09:38:33] <masinter> i was getting 250 to 1000 times speed of original dorado
[09:38:48] <gilberth> masinter: That does not load for me. The link that is.
[09:39:25] <masinter> https://online.interlisp.org ?
[09:39:27] -ixelp- Interlisp Online
[09:39:46] <masinter> older mac safari has problems
[09:40:03] <masinter> try chrome or firefox
[09:40:10] <gilberth> I'm using firefox and got a network timeout, no response from the server.
[09:40:25] <gilberth> masinter: That other link works, it asks me to register.
[09:40:59] <masinter> joe@example.com
[09:41:14] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 260 seconds)
[09:41:46] <masinter> it saves your edits and your lisp.virtualmem so you can continue a sesssion
[09:42:59] <masinter> it's not released yet so be gentle
[09:43:45] <masinter> r
[09:44:22] <masinter> right click in the background to get a menu
[09:44:48] <gilberth> I don't remember how to get at a CL REPL.
[09:45:11] <masinter> the REPL is an Exec
[09:45:26] <masinter> you can ask for common lisp or interlisp
[09:45:46] <masinter> which just switches the readtable and package
[09:45:47] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Quit: Aurora_v_kosmose)
[09:46:14] <masinter> it should start up with a CL
[09:46:20] <masinter> or XCL
[09:47:31] <masinter> READ [ apply eval command ] print loop
[09:47:42] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[09:47:43] <gilberth> Ah ok. The medley I once had was different. I believe it also came with CLIM.
[09:48:52] <masinter> there is a clos implementation but untested
[09:49:50] <gilberth> That is VNC session?
[09:50:30] <masinter> yes; medley does X and the docker container for it runs Xvnc
[09:50:40] <gilberth> Oh dear, going full screen made by tabs inoperative with firefox. Do they even test their stuff?
[09:51:00] <gilberth> masinter: That's surprisingly responsive.
[09:51:22] <masinter> make
[09:52:09] <masinter> (il:filesload life)
[09:52:33] <masinter> hmmm
[09:54:14] <masinter> The common lisp is CLtL 1 + a smattering
[09:54:22] *** Joins: domovod (~domovod@176.196.122.197)
[09:54:50] <gilberth> Is it considered safe to run Interlisp that way?
[09:55:12] <masinter> interlisp is just a separate package
[09:55:51] <masinter> it's all in a docker container with no credentials
[09:56:27] <masinter> altho'ugh you can Chat to SHELL to run a terminal
[09:57:13] <gilberth> See.
[09:57:35] <gilberth> Can I telnet somewhere else?
[09:58:05] <masinter> chat to other hosts runs ssh
[09:58:17] <gilberth> Oh!
[09:58:55] <masinter> seemed more useful
[09:59:36] <gilberth> Sure, but I guess, I could nowhere from interlisp.online.
[10:00:22] <masinter> github cli
[10:01:56] <gilberth> Would be nice when I could offer the CADR that way. It's not particular useful but of historical interest.
[10:02:53] <masinter> yes i was hoping our work would be useful for other projects
[10:03:34] <masinter> we've been working on a lisp bibliography
[10:03:52] <gilberth> Well, I only hacked a fast console and some FILE Chaosnet server in CL.
[10:04:54] <masinter> medley benefited from years of tuning
[10:05:23] <gilberth> Wasn't it a commercial product once?
[10:05:57] <masinter> yes xerox then envos then venue
[10:06:51] <gilberth> The CADR console Brad Parker wrote was just quick and dirty. To be fair, he never wanted a fast emulator, but a correct one as a step towards Verilog.
[10:08:19] <masinter> there's a dandelion emulator in C#
[10:08:46] <hayley> https://twitter.com/kennygunderman/status/1488567037945335808 POV: you are not using programming as a tool of thought
[10:08:57] *** Joins: notzmv (~zmv@user/notzmv)
[10:09:39] <Aurora_v_kosmose> There isn't something like Ocaml's Mirage for Common Lisp is there?
[10:10:20] <masinter> these days lookinsg at raw HTML is "coding"
[10:11:02] <masinter> telling alexa what to do is coding
[10:11:25] <Aurora_v_kosmose> Sounds most unimpressive.
[10:11:49] <dave0> masinter: looking at raw HTML is hacking... https://www.stltoday.com/news/local/govt-and-politics/essential-reading-governor-threatens-post-dispatch-after-discovery-of-data-vulnerability/collection_647c5ddb-fac9-5f83-8da9-f6dd58da9d70.html
[10:11:51] -ixelp- Essential reading: Governor threatens Post-Dispatch after discovery of data vulnerability | Politics | stltoday.com
[10:14:05] <masinter> Govenor is mad at post-dispatch for whatever reason
[10:14:23] <Aurora_v_kosmose> ???
[10:15:13] <dave0> post-dispatch reporter viewed html sourcecode and found teachers social security numbers in the html ... the governor launched a criminal investigation for hacking the website
[10:15:22] <Aurora_v_kosmose> Oh, that idiot.
[10:15:52] <Aurora_v_kosmose> Senility and terminal idiocy should be sufficient cause to lose your office.
[10:17:10] <gilberth> Lose? It's that a prerequisite to be voted into office?
[10:17:32] <Aurora_v_kosmose> Holding office should be conditional on functional ability.
[10:17:36] <masinter> these days i suspect exceptions to hanlon's razor
[10:19:57] <masinter> holding office is conditional on having funds to advertise
[10:20:49] <Aurora_v_kosmose> It's bizarre that gross incompetence is applicable to most jobs but hardly at all to political offices.
[10:21:01] <Aurora_v_kosmose> Where it is one of the most damaging places to have it.
[10:22:49] <gilberth> Hmm, xterm also scrolls by 5 lines on a mouse wheel tick.
[10:23:00] <Aurora_v_kosmose> ah
[10:24:20] <gilberth> Yeah, I wondering how much to scroll on one scroll wheel tick. Macos seems to do one line, and xterm and Emacs do five. I just want to feel "native", what ever that is.
[10:25:19] <masinter> mac and windows default to different directions
[10:25:34] <gilberth> Mac is configurable.
[10:25:35] * hayley counts 310 lines of code between static void garbage_collect_generation(generation_index_t generation, int raise) and the call to scavenge_newspace.
[10:26:55] <gilberth> First thing you fix :-)
[10:27:40] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[10:27:50] <kakuhen> i fix the scroll direction on windows and linux DEs ;)
[10:28:24] <gilberth> You really like that "natural" scroll direction?
[10:29:02] <gilberth> First thing I fix with games is [x] invert mouse :-)
[10:29:07] <kakuhen> Anecdotally, Mac scroll direction is the sane default considering my dad, who rarely touches any technology, moves the scrollwheel and expects movement just as mac does it
[10:30:13] <gilberth> Well, on that ground, you would also flip scrollbars. I mean, when you drag the thumb upwards the contents scrolls downwards.
[10:30:13] <kakuhen> i always have to remind him "move the scroll wheel in the opposite direction" since his office computer runs windows
[10:30:32] <masinter> medley defaults to mac conventions because Ron wrote WHEELSCROLL and he uses a mac
[10:30:57] <moon-child> gilberth: I think 3 lines is canonical
[10:31:19] <gilberth> moon-child: Right.
[10:31:36] *** Quits: domovod (~domovod@176.196.122.197) (Ping timeout: 245 seconds)
[10:31:48] <gilberth> Annoy both factions alike. Good plan.
[10:32:20] <moon-child> there are also some mice (and, more commonly, trackpads) that scroll continuously, rather than in discrete intervals
[10:32:45] <gilberth> Yes, but with the Core protocol I don't have that.
[10:33:07] <gilberth> The event class I defined for mouse wheel events has that though.
[10:33:42] *** Joins: domovod (~domovod@ec2-35-165-86-158.us-west-2.compute.amazonaws.com)
[10:35:30] <gilberth> But I need to do some homework: What does X provide via some extension? And: What events does Windows deliver?
[10:35:53] <kakuhen> <gilberth> "Well, on that ground, you..." <- the scrollbar indications the fraction of the document visible and the range of a document in view; ideally there would be an up and down button for moving this range
[10:36:49] <kakuhen> unfortunately everyone is obsessed with nearly-impossible-to-click, thin, grey pill shapes as scrollers
[10:37:01] <kakuhen> and these buttons have gone away
[10:37:13] <gilberth> kakuhen: Still, you need to move the mouse up to have the content move down and vice versa. Also: When you press a "v" box at the lower end of the scroll bar the contents move up, not down.
[10:38:00] <moon-child> kakuhen: you too??  I can not understand the fascination people have with clicking on scrollbars
[10:38:06] <gilberth> kakuhen: For good reason, those buttons were only taking up screen space. I can't remember me using those buttons ever.
[10:38:06] <kakuhen> yes but the little box of the scrollbar is modelled as being on top of some "mini map" of the document
[10:38:10] <moon-child> well--I can not understand the fascination people have with clicking on most things.  But.
[10:38:25] <masinter> medley scroll bars are different
[10:38:30] <kakuhen> when you have a paper on a wall and move a glass rectangle down, the content moves up
[10:38:33] <kakuhen> i fail to see the issue
[10:38:56] <kakuhen> move glass rectangle parallel and in front of the paper*
[10:39:00] <masinter> i
[10:39:09] <moon-child> sure, and when you move the paper itself, it moves down.  What is the trackpad controlling?
[10:39:49] <kakuhen> the trackpad controls the document, the box controls this imaginative glass rectangle
[10:39:54] <kakuhen> that's how ive always seen it
[10:40:02] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:40:02] <gilberth> Put a ball on the paper, place you hand on the ball, move your hand away from you (logical up) in which direction does the paper move, if the ball stays in place?
[10:40:30] <gilberth> Or do with a cylinder for just one dimension.
[10:40:30] <masinter> i can remember giving demos where i had to expla
[10:40:44] <moon-child> kakuhen: just curious; when you play 3-d video games, do you also reverse the direction in which the camera moves when you move the mouse or joystick?
[10:40:52] <masinter> iexplain what a mouse was
[10:41:10] <gilberth> Or think a paper scroll. :-)
[10:41:38] <kakuhen> moon-child: if you ask whether i want a joystick to behave similarly to the stick in planes, yes
[10:41:50] <kakuhen> most games ive played done this
[10:42:09] <masinter> I use a 3d space navigator
[10:42:31] <gilberth> Most games don't with a mouse, which annoys me. I want to look up when I move the mouse towards me. Like with a plane.
[10:43:41] <gilberth> And this is a good example. When with a 3d game you move the mouse left, in which direction does the picture move?
[10:43:54] <masinter> sleep
[10:44:01] <kakuhen> the  solution is to not play a 3d game
[10:44:14] <moon-child> ooh, speaking of, here is another dispute
[10:44:19] <moon-child> which direction is y, and which z?
[10:44:20] <kakuhen> all I need is visual novels & rogue
[10:44:36] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Quit: ~ Trillian - www.trillian.im ~)
[10:44:41] <moon-child> kakuhen: you play rogue still?
[10:44:42] <kakuhen> moon-child: the canonical direction
[10:44:49] <kakuhen> yes I play rogue, is there a problem?
[10:44:53] <kakuhen> i have it on my mac and freebsd machine
[10:44:56] <gilberth> moon-child: z is perpendicular to the screen surface.
[10:45:02] <kakuhen> i can send my most recent rogue.save as proof i play this game
[10:45:50] <moon-child> (at some point I had a strong opinion regarding y/z, and I have forgotten it now)
[10:46:23] <kakuhen> i assume the axes in 3d space to be set up like most mathematicians assume it
[10:46:28] <moon-child> one thing I will say for certain is that opengl using [-1 1] ndc is completely braindead.  Oddly enough they use [0 1] for texture coordinates...
[10:46:38] <ck_> is there a "most mathematicians" in this context?
[10:46:41] <kakuhen> open up any geometry book and however it points y and z-axis is very likely how I do it as well
[10:46:56] <kakuhen> yes, because there are standard sources for learning specific topics in math
[10:47:12] <ck_> my experience says that this can be a small majority
[10:47:19] <kakuhen> by "standard source" i mean a textbook (or lecture notes) that can be argued as the most common introduction for learning the topic
[10:47:21] <gilberth> kakuhen: Sits the book on your desk or do you hold it flat against the screen?
[10:47:30] <moon-child> kakuhen: well, the problem is--suppose I set a paper on a desk and draw a graph.  y goes forward/back, and z goes up/down.  But now how do I relate this to a vertical display?
[10:47:35] <ck_> I've witnessed many misunderstandings that stemmed from people not discussing whether their 3 axes are right-handed or left-handed
[10:47:59] <kakuhen> moon-child: i've never thought about this problem, but I would just make the screen copy what ive seen books drawing 3d axes do for all of my (memorable) life
[10:48:28] <moon-child> the plane of the books is perpendicular to the plane of your display
[10:48:32] <kakuhen> this is one of those questions where i dont think there's a right answer, and instead you pick a convention and agree with it
[10:48:46] <moon-child> so you can not make it 'copy'.  You have to decide how to relate one to the other
[10:49:27] <kakuhen> https://i.stack.imgur.com/o8BIR.png
[10:49:35] <kakuhen> this is exactly how i draw it, and how i see others do it
[10:49:37] <mfiano> I just tattood D3D on my left hand and OGL on my right.
[10:49:43] <kakuhen> so if i am writing some program that involves 3d, i will likely use this same convention
[10:49:48] <moon-child>  mfiano hahaha
[10:50:20] <kakuhen> gilberth: i have a book stand
[10:50:44] <kakuhen> so it's almost flat against my computer's screen, but not quite. there's a non-trivial angle of depression
[10:51:37] <gilberth> So z is perpendicular to the screen, at least when you read a graph of say y = x^2.
[10:52:17] <mfiano> Do you have basis vectors that aren't labeled or something?
[10:52:20] <gilberth> And this is how I see it, coming from 2d graphics, where the z axis is an additional axis to the existing x and y axes.
[10:52:43] <ck_> for relaxing times, draw your scenes in parallel coordinates
[10:52:49] *** Joins: sham1 (~sham1@212-146-44-107.aboa.net)
[10:52:55] <kakuhen> for relaxing times, ditch all coordinates
[10:53:12] <kakuhen> when you learn enough geometry, you realize coordinates are why everything becomes a god-awful mess of alphabet soup
[10:53:36] <kakuhen> re: basis vector labelling, I can't recall the last time I had to dedicate a variable for a basis vector
[10:53:56] <kakuhen> but yes i normally label basis vectors as v_i
[10:53:57] <kakuhen> b_i *
[10:55:28] <moon-child> eh.  When you are working in a fixed number of dimensions, I think letters are better.  Symbols can be distinguished from one another more easily than numbers
[10:57:55] <mfiano> 2-space is superior to TABs.
[10:58:16] <kakuhen> not in Objective-C
[10:58:27] <kakuhen> 2-space makes the text align in a funny way when you use objective-c, I'd have to give an example
[10:59:26] <mfiano> Luckily indentation space count is variable in Lisp.
[10:59:45] <kakuhen> http://pastie.org/p/0vIlumqsEfjgqiDST30zYX
[10:59:45] -ixelp- Pastie
[11:00:09] <mfiano> Not lisp. Downvoted
[11:00:10] <kakuhen> see how the [ aligns with the ( ? it blurs the borders for me
[11:00:16] <kakuhen> of course, the solution is place { on its own separate line
[11:00:31] <kakuhen> but then not every code i pull in does that, and i want to be consistent with conventions
[11:00:32] <hayley> **foo:**
[11:00:32] <hayley>   bar baz.
[11:00:34] <hayley> I don't see the problem
[11:00:53] * hayley thinks
[11:01:10] <kakuhen> the problem for me is that the code is on the same column as the function declaration, and it looks weird to my eyes
[11:01:17] <kakuhen> so for objective-c I opt for 4 spaces
[11:01:39] <hayley> https://plaster.tymoon.eu/view/2914 plaster doesn't have Smalltalk highlighting ):
[11:01:50] <kakuhen> damn... one day i will try using smalltalk
[11:02:11] <kakuhen> your example for me is fine, i'd have a problem if "bar" were aligned with "foo"
[11:02:27] <hayley> It might also help that, in most Smalltalk IDEs, foo: is bold.
[11:02:37] * moon-child uses 8-space tabs when writing normal c, and a single space when writing apl or apl-ish c
[11:03:03] * hayley still studying gencgc sources
[11:03:06] <kakuhen> 8-space writing C and a FreeBSD user.... you must be one of the original CSRG people
[11:03:26] <hayley> Well, scavenge_newspace does something.
[11:03:41] <moon-child> kakuhen: I am no traditionalist
[11:03:45] <hayley> The name is weird, but it seems to be used to collect any generation.
[11:03:46] <moon-child> I put the brace on the same line, in all cases!
[11:04:11] <hayley> ...or not.
[11:04:11] <kakuhen> i used to be a "traditionalist," I suppose, but then I decided to just follow what is clearly more popular in the code I see and use every day
[11:04:31] <moon-child> if I cared for popularity, I would write java and js
[11:04:37] <moon-child> and use (*shudder*) camelcase
[11:04:46] <kakuhen> iLikeCamelCase
[11:04:56] <kakuhen> i-actually-dont-just-kidding
[11:04:57] * moon-child slaps kakuhen around a bit with a large trout
[11:04:59] <Aurora_v_kosmose> (make-kebab)
[11:05:32] <kakuhen> anyway I am actually learning how to use clojure and it's pretty neat
[11:05:38] <kakuhen> my eventual goal is to mess around with clojurescript 
[11:05:43] * hayley uploaded an image: (19KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/WCgmApRCtqqCTUDxXhIchviQ/bruhcha.jpg >
[11:05:51] <kakuhen> i laughed a bit irl
[11:05:55] * moon-child does not understand the fascination with browsers
[11:06:28] <kakuhen> i was about to type "and I bet my choice of clojurescript+react is making all of the unix weenies living in DWM and a terminal irc client cringe at the sheer 'bloat' of such combo"
[11:06:47] <hayley> Hm, maybe I should see how ABCL performs on REGRIND. ECL is dead in the water by using a C compiler.
[11:06:55] <moon-child> I don't care about bloat.  It's a horrible environment
[11:06:58] <hayley> ...hm, ECL has a bytecode compiler still.
[11:07:09] <Aurora_v_kosmose> It's a horrible environment, but absurd resource usage is also a problem.
[11:07:10] <moon-child> I had to use browser js debugger at one point.  It was worse than gdb, which is not that great in the first palce
[11:07:21] <moon-child> Aurora_v_kosmose: resource usage is fine for what it does
[11:07:38] <kakuhen> ooh that reminds me firefox had a memory leak during a jitsi call
[11:07:45] <Aurora_v_kosmose> moon-child: It's problematic when you're using isolation-focused OSes.
[11:07:53] <kakuhen> i randomly opened activity monitor and for some reason it was allocating 19.30 gb to a single tab
[11:07:56] <Aurora_v_kosmose> Because it makes hardware requirements climb quickly.
[11:07:58] <kakuhen> running the gc twice didnt fix anything
[11:08:03] <moon-child> Aurora_v_kosmose: the browser _is_ an isolation-focused os
[11:08:07] <Aurora_v_kosmose> kakuhen: Weee god objects & leaks
[11:08:23] <Aurora_v_kosmose> moon-child: It sure fails to isolate anywhere near as well as Qubes.
[11:08:53] <moon-child> I do not buy that any software-oriented isolation solution works at all
[11:09:27] <hayley> "The test form   (first-match "[a-z]+" "Hello world") evaluated to    [undefined-rule-error] The rule one-more-re-nightmare::character-range-inner is undefined." Well that sucks.
[11:09:33] <Aurora_v_kosmose> There are no affordable hardware solutions. I'm not buying a mainframe.
[11:09:57] <moon-child> buy a few raspberry pis.  The cheapest one is like $5 a pop
[11:10:10] <kakuhen> i wish i could find $5 rapis right now
[11:10:13] <Aurora_v_kosmose> moon-child: Those are currently unbuyable.
[11:10:16] <kakuhen> I want to make a cheap and weak file server
[11:10:17] <moon-child> oh, are they more expensive now?
[11:10:19] <moon-child> ok
[11:10:26] <Aurora_v_kosmose> moon-child: Out of stock forever. Chips gone.
[11:10:31] <kakuhen> a raspi right now sells for like $50 minimum
[11:10:32] <moon-child> well, they were $5 when I got mine a few years ago :P
[11:10:38] <moon-child> oh, woww
[11:10:42] <hayley> Damn, it should be called CHARACTER-RANGE-RANGE. lol
[11:10:58] <Aurora_v_kosmose> Also, you need some sort of software to help corral all those machines' programs.
[11:11:16] <Aurora_v_kosmose> And plan 9 is mostly dead.
[11:11:38] <moon-child> sure
[11:11:49] <Aurora_v_kosmose> Xpra is not really meant for securely using remote compute nodes, more so than conveniently using htem.
[11:12:07] <Aurora_v_kosmose> Qubes has [eventual] projects on that end, but so far there's nothing implemented.
[11:12:09] <moon-child> arcan?
[11:12:41] <hayley> Hey, ABCL is actually great for running REGRIND, because the JIT doesn't kick in.
[11:12:48] <Aurora_v_kosmose> moon-child: I've been looking at it but I need to dig more into it. Does it actually do the kind of separation I'm thinking of?
[11:12:58] <moon-child> hayley: clisp, then? :)
[11:13:04] <moon-child> Aurora_v_kosmose: what kind of separation?
[11:13:32] <Aurora_v_kosmose> moon-child: e.g.: Local GUI display, remote program with only access to remote resources unless specifically handed some way of getting local resources.
[11:14:06] <moon-child> afaik such functionality is mostly nyi
[11:14:17] <Aurora_v_kosmose> not-yet-invented?
[11:14:21] <Aurora_v_kosmose> *implemented
[11:14:39] <moon-child> yea
[11:14:41] <moon-child> not yet implemented
[11:14:46] <Aurora_v_kosmose> Unfortunate.
[11:14:48] <hayley> Hm...it's about the same speed as SBCL at REGRIND. But that's still impressive.
[11:14:59] <Aurora_v_kosmose> But yeah, Arcan and Qubes are right now the main two OSes that have my attention.
[11:15:28] <hayley> "Compiling "((¬(S)*))|((¬X)«W»)«((G))|(AJ)»" fails with: ISTORE unsupported case" Ehm.
[11:15:53] *** Joins: lisp123 (~lisp123@5.30.23.247)
[11:16:11] <hayley> ISTORE (from memory) is a JVM instruction, so that's not a me problem.
[11:17:28] <Aurora_v_kosmose> In the longer term, given what Microsoft is trying to get major hardware manufacturers to do, I might have to do that sort of distributed computing if they manage to ruin x86.
[11:17:56] <Aurora_v_kosmose> As there's no way I can afford the few modern Power hardware platforms.
[11:18:00] <moon-child> ehhh I don't buy it
[11:18:07] <moon-child> x86 linux servers will continue to be a thing
[11:18:38] <moon-child> and if they were really going to try anything shady, they would have done it with efi
[11:19:26] <Aurora_v_kosmose> The connecting-cloud-to-cpu thing is what worries me.
[11:19:48] <hayley> ...Well, scavenge_newspace will collect any ol' generation, and not just the nursery. Hurts my head that we have "oldspace" and "newspace" for copying, and then generational GC has its own idea of "new" and "old".
[11:21:02] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[11:31:03] * hayley starts to think there isn't enough debugging information for perf to be of use, as many functions are just addresses, and they are probably C functions.
[11:42:01] <hayley> My own homegrown SWCL runtime has symbols at least. Phew.
[11:42:23] <moon-child> I should hope all lisp implementations have symbols!
[11:42:36] <hayley> (fmakunbound 'intern)
[11:43:04] <moon-child> fcge go brrr
[11:43:43] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[11:43:44] <hayley> "You can't get me, I'm behind seven modularity layers"
[11:44:24] <dave0> is hayley 2.0 backwards compatible with hayley 1.x ?
[11:44:44] <hayley> You're assuming that I am bold enough to ever release something past version 0.1.0.
[11:45:06] <hayley> ...okay, the predecessor to Netfarm got to version 0.8.4 but that's cheating.
[11:45:13] <hayley> ...because the releases were pretty shit.
[11:45:34] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:48:49] <hayley> Hm, I count about half the time taken in garbage_collect_generation calling heap_scavenge, and half with g_c_g calling newspace_full_scavenge calling h_s. Don't think it's a tail call.
[11:57:49] * hayley is told to work at the supermarket across the road. The last job was writing a register allocator.
[12:01:44] *** Joins: shka (~herr@109.231.0.226)
[12:06:05] * moon-child wonders whether anyone is on more papers than simon peyton jones
[12:11:59] * hayley launches a missile before finishing with gmod for the night.
[12:12:11] <hayley> "defun fucking bitch" "you know what they say, go out with a bang" "motherfucker i will STEAL YOUR KNEECAPS"
[12:14:53] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[12:16:55] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:22:11] <kakuhen> not all usb-c ethernet adapters r made equal it seems
[12:22:40] <kakuhen> i swore i was able to achieve up to 400 mbit/s download on wireless but this ethernet adapter i just bought maxes out at about 250 mbit/s
[12:23:18] <kakuhen> well, at least upload speed is measurably faster... I bought it so it'd be easier to directly send large (read: 3-5 GB) files to a friend 
[12:47:30] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 276 seconds)
[12:51:43] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[12:55:07] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[12:57:14] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:58:30] <ck_> moon-child: erdos?
[12:58:43] <moon-child> i mean like
[12:58:45] <moon-child> cs papers
[12:58:48] <ck_> I know I know
[13:09:51] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[13:11:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:16:53] *** Joins: kevingal (~quassel@149.157.105.172)
[13:17:48] *** Joins: lisp123 (~lisp123@5.30.23.247)
[13:18:42] <hayley> Leslie Lamport?
[13:19:45] <hayley> 191 publications is 190 more than I have.
[13:21:45] *** Quits: kevingal (~quassel@149.157.105.172) (Ping timeout: 256 seconds)
[13:22:31] *** Joins: kevingal (~quassel@2001:770:c0:401:c97:e93c:a163:302f)
[13:22:32] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[13:35:50] <moon-child> oh wow yeah maybe
[13:35:56] <moon-child> I haven't really run into his stuff
[13:36:25] <hayley> https://lamport.azurewebsites.net/pubs/pubs.html
[13:36:26] -ixelp- The Writings of Leslie Lamport
[13:37:04] <hayley> BTW make sure you don't say alllamportspubsontheweb at any time.
[13:37:35] <moon-child> why?
[13:38:06] <hayley> Cause Lamport said so.
[13:41:20] <hayley> Legend says that if you do, your mutexes won't work.
[13:44:17] * moon-child spots 'On Hair Color in France'
[13:46:59] <moon-child> 'A clue is provided by our observation that a number of the blonde and red-haired female subjects showed brown coloration in the few millimeters of hair closest to the scalp. This suggests two obvious possibilities. One is that chimerism may be involved.  However, our data were obtained in the fall, and so we offer an alternative conjecture: that the bright coloration displayed by females may be
[13:47:01] <moon-child> a seasonal phenomenon, with their hair turning brown in the colder months and then lighter with the return of warm weather.'
[13:47:23] <hayley> So they have to be CS papers?
[13:49:31] *** Joins: treflip (~user@user/treflip)
[14:06:04] <pjb> there's also the phenomenon of tainting hair…
[14:06:35] <hayley> Hey, we discussed your contributions to computer science study in #lispcafe yesterday.
[14:07:28] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Read error: Connection reset by peer)
[14:16:32] *** Joins: szos (~user@178.74.52.55)
[14:49:04] <Duuqnd> I just caught myself trying to use LOOP in something that is most certainly not Lisp
[14:50:45] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[14:53:11] <Gnuxie> i often find myself wishing for a LOOP
[15:17:21] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:19:11] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:19:25] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:20:12] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:24:09] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[15:24:41] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[15:26:32] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:43:38] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[15:49:30] <epony> granted
[15:59:09] *** semz_ is now known as semz
[16:35:47] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[16:44:06] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 276 seconds)
[16:56:25] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[17:03:24] *** Joins: jeosol (~jeosol@user/jeosol)
[17:08:01] *** Joins: lisp123 (~lisp123@5.30.23.247)
[17:08:54] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[17:09:09] *** Joins: lisp123 (~lisp123@5.30.23.247)
[17:21:34] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[17:24:17] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[17:28:02] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[17:39:28] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[17:44:21] *** Quits: atw (~user@ool-18bf5678.dyn.optonline.net) (Ping timeout: 256 seconds)
[17:46:31] <shka> https://github.com/admich/Doors
[17:46:32] -ixelp- GitHub - admich/Doors: A McCLIM window manager
[17:57:14] <humasect> ohh
[18:03:24] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 276 seconds)
[18:15:56] <gilberth> Good morning #lispcafe!
[18:16:05] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[18:28:41] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:33:38] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[18:37:30] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:42:32] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[18:49:38] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Remote host closed the connection)
[18:55:19] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[19:07:32] *** Quits: neominimum (sid537410@user/neominimum) (Ping timeout: 240 seconds)
[19:10:43] <humasect> good morning
[19:11:07] *** Joins: neominimum (sid537410@user/neominimum)
[19:17:10] *** Joins: lisp123 (~lisp123@5.30.23.247)
[19:24:33] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[19:38:59] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[19:46:27] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[19:54:20] *** Quits: szos (~user@178.74.52.55) (Remote host closed the connection)
[20:17:07] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Remote host closed the connection)
[20:17:28] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[20:23:13] *** Joins: clos-encounters (user@2600:3c00::f03c:92ff:fe19:3350)
[20:48:06] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:59:07] *** Joins: jeosol (~jeosol@user/jeosol)
[20:59:14] *** Quits: kevingal (~quassel@2001:770:c0:401:c97:e93c:a163:302f) (Remote host closed the connection)
[21:00:24] *** Joins: Rue (~rue@2001-b011-1000-1c39-cdcc-c9c1-11c3-6370.dynamic-ip6.hinet.net)
[21:06:24] *** Quits: humasect (~humasect@2001:1970:57e0:4100::1ae0) (Quit: Leaving...)
[21:08:19] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[21:09:49] *** Quits: domovod (~domovod@ec2-35-165-86-158.us-west-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[21:11:30] *** Joins: domovod (~domovod@176.196.122.197)
[21:35:19] *** Joins: Catie (~user@user/catie)
[21:37:47] *** Quits: domovod (~domovod@176.196.122.197) (Ping timeout: 250 seconds)
[21:42:06] *** Quits: Rue (~rue@2001-b011-1000-1c39-cdcc-c9c1-11c3-6370.dynamic-ip6.hinet.net) (Quit: WeeChat 3.4)
[21:59:37] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (Quit: WeeChat 3.3)
[22:00:15] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[22:36:29] <SAL9000> shka: I get a 500 error on that one -- is it just me?
[22:44:04] <masinter> sal900 wrong window? I'm getting Server error on github links
[22:47:56] <masinter> https://twitter.com/githubstatus
[22:48:41] *** Quits: robin (~robin@user/terpri) (Remote host closed the connection)
[22:49:01] *** Joins: robin (~robin@user/terpri)
[22:53:07] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[23:03:32] <SAL9000> works now :)
[23:03:59] <selwyn> i wonder what the global impact of github downtime is
[23:04:57] *** Parts: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) ()
[23:05:28] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[23:05:31] <selwyn> would some people not be able to function, or use it as an excuse to not do any work
[23:05:56] <masinter> one of the advantages of git is that you can work offline
[23:06:33] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[23:06:39] <masinter> everything is in your .git directory
[23:08:32] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:14:32] <lagash> provided you didn't do, say, a shallow clone or something akin to that
[23:14:57] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[23:15:17] *** Joins: santiagopim (~user@84.78.243.45)
[23:16:02] <selwyn> i assume ci becomes impossible if too many people are wfh and github goes offline?
[23:28:43] *** Joins: jeosol (~jeosol@user/jeosol)
[23:34:12] *** Joins: humasect (~humasect@2001:1970:57e0:4100::1ae0)
[23:36:41] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[23:38:23] <Aurora_v_kosmose> selwyn: Yes.
[23:38:41] <Aurora_v_kosmose> That's exactly what happened at a company I was at at some point.
[23:38:56] <Aurora_v_kosmose> Sure, we had the code lcoally... except all CI was down and so we couldn't actually test anything.
[23:39:30] <Aurora_v_kosmose> (Yeah they actually had a proper staging is not prod separation)
[23:41:58] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[23:43:08] *** Joins: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte)
[23:43:53] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
