[00:05:18] <pl> selwyn: market economy setting prices freely is orthogonal to capitalism 
[00:12:54] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:8033:35bf:bcd3:1f86) (Remote host closed the connection)
[00:49:52] <epony> free markets are the promises of capitalism but all it gives you is embargoe and isolationism and sanctions and reciprocal trade wars
[00:50:40] <epony> so, it's king to king or rather, government to government, secret treade deals and some public different cover up for that
[00:51:29] <epony> market economy is some mirage from the village vegetables and poultry Xmas demo-souvenir place
[00:52:59] <epony> capitalism is about capital, that is the land, the people, the natural resources over in and below and around the land, and the buildings and the infrastructure and the production technology and the machines and the dominion states of subjugation and ownership
[00:53:24] <epony> and that of other people's lands without those people
[00:54:54] <epony> extracting maximum possible profit through pressure by war and all other models of control and domination is the free market and it is exactly capitalism
[01:00:10] <shka> capitalism has many definitions
[01:00:35] <epony> yes, but only one of them is real outline of events
[01:00:50] <shka> sometimes it is type of economy
[01:00:58] <shka> and sometimes it is a type of society 
[01:01:19] <epony> the society organisation is not capitalism, it's an aftermath of capitalism
[01:03:18] <epony> capitalism is the extention of concentration of resources and control and exerting maximum effects on everyone domestic and foreign to complete reversal of all their resources outwards through force and pressure and threat and war
[01:03:52] <epony> capitalism is total war
[01:04:56] <epony> it is a military doctrine
[01:05:17] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 240 seconds)
[01:05:40] <epony> religions are.. just a pale shadow of that
[01:06:05] <epony> their indoctrination is archaic and primitive
[01:12:32] <epony> and no, the above was not translated from a Chinese official agency ;-)
[01:17:44] <selwyn> pl: indeed
[01:19:01] <pl> Well, capitalism is misunderstood by many to mean many different things, but unless we stick to some definitions we can end up arguing in circles 
[01:19:07] <moon-child> hayley: re memory encryption: do it in hardware
[01:19:21] <pl> And considering it got named by Marx... :-P
[01:19:33] <moon-child> hayley: which x86 kinda does already: uop cache
[01:22:21] <gilberth> Heh, I always wonder, if sth as a simple huffman-coding of instructions was ever considered.
[01:23:26] <gilberth> I mean, isn't a macro instruction set with a traditional micro-coded design like the Lisp machine, a kind of compression, too?
[01:24:22] <gilberth> Or abstraction in general?
[01:27:28] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Quit: Aurora_v_kosmose)
[01:27:39] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[01:28:13] <moon-child> I think some arm or riscv core was doing that
[01:29:56] <gilberth> Well, it's all a bit blurry. Thumb could be seen as a compressed version of the ARM instruction set. It's a real space saver.
[01:31:02] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:b7fd:fa95:80d6:f41) (Ping timeout: 240 seconds)
[01:31:08] <gilberth> But you pay a performance penalty is you only have eight registers left to play with.
[01:34:58] <moon-child> not thumb, they were actually gzipping their instructions
[01:35:00] <moon-child> transparently
[01:44:34] <hayley> moon-child: Memory compression, not encryption.
[01:44:45] <moon-child> err, yeah
[01:45:07] <hayley> https://www.youtube.com/watch?v=TqTFDK3Xiss
[01:45:08] -ixelp- A Saucerful Of Secrets (Live At Pompeii 2016 Remix) - YouTube
[01:45:56] <hayley> gilberth: Based on a study of Interlisp programs, where they found that CONS cells have an entropy of 7 to 12 bits after compaction, I'd be making bets on delta encoding for compression.
[01:55:28] *** Joins: notzmv (~zmv@user/notzmv)
[02:01:42] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:1bce:ba7c:3f01:c9f3)
[02:01:49] <hayley> https://www.youtube.com/watch?v=2IWX4QHUA30
[02:01:49] -ixelp- Talking Heads - The name of this programme is ONCE IN A LIFETIME (1984) - YouTube
[02:02:44] <selwyn> https://www.theguardian.com/uk-news/2021/dec/21/a-world-first-devon-calls-victory-in-27-year-war-on-termites
[02:02:44] -ixelp- ‘A world first’: Devon calls victory in 27-year war on termites | Devon | The Guardian
[02:02:57] <hayley> However, you couldn't use such objects very easily; you could only page out and keep compressed objects in memory, or compress on disk.
[02:05:25] <moon-child> hmm.  Move similar objects close to each other so it's easier to compress?
[02:07:07] <hayley> That'd be useful even without compression. Though I'm advocating for delta-coding which should work well for Lisp objects.
[02:07:56] <moon-child> not useless, but I think it would have some common failure cases
[02:08:46] <hayley> c.f. https://sci-hub.st/10.1145/359423.359427 page 3 figure 1, 4 tables 3 and 4, page 8 tables 8 and 9
[02:08:46] -ixelp- Sci-Hub | An empirical study of list structure in Lisp. Communications of the ACM, 20(2), 78–87 | 10.1145/359423.359427
[02:21:08] <hayley> Hm, can I meaningfully move enough objects closer to each other if I'm trying to focus on only compacting some regions, and doing partial collections?
[02:21:43] <hayley> If they're allocated at around the same time, but not exactly in the ideal order, I guess it'd work.
[02:28:40] <hayley> Well, per the study, almost all (85% to 94%) pointers are on the same 512-word page without list linearisation, compared to 93% to 97% with. So still plenty to compact.
[02:29:41] <gilberth> cdr-coding, when?
[02:32:11] <hayley> When RPLACD drops dead.
[02:44:39] <pjb> I would redo all those old studies, on modern hardware, with modern applications and workloads…
[02:45:15] <pjb> cache memory, large memories, and current problems have changed enough to invalidate most such studies, I'd bet.
[02:59:48] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:59ec:d1ad:d4aa:2d8e)
[03:01:04] <hayley> Well, we have SB-VM:MAP-ALLOCATED-OBJECTS and SB-KERNEL:GET-LISP-OBJ-ADDRESS to test with.
[03:21:42] <selwyn> hayley: it sounds like you are doing something fun but i am too dumb to understand
[03:21:47] <selwyn> are you compressing a lisp image?
[03:21:55] <hayley> selwyn: More or less.
[03:22:09] * hayley uploaded an image: (20KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/BwaBYsEVfeZavVLGWJtHVSaD/sbcl.png >
[03:22:23] <selwyn> hamming distance?
[03:22:28] <hayley> Here's a graph of pointers from conses and standard vectors to others.
[03:22:49] <hayley> (INTEGER-LENGTH (- FROM TO)) more or less.
[03:22:59] <selwyn> hm.
[03:23:34] <selwyn> why use that measure?
[03:24:20] <hayley> It'll show how useful delta encoding is.
[03:24:29] <selwyn> i suppose the idea is that high bits don't contribute as much
[03:24:30] <moon-child> selwyn: log scale
[03:24:39] <hayley> By this graph, most deltas are under 8 bits.
[03:24:47] <selwyn> oh right
[03:25:46] <selwyn> that makes sense
[03:27:19] <gilberth> So then, when you take a core file and encode each pointer as a relative pointer, shouldn't it compress to less with any vanilla compression algorithm?
[03:27:54] <hayley> Yes!
[03:27:59] <selwyn> and how does the entropy look?
[03:28:18] <hayley> No idea how to compute that.
[03:28:24] * hayley double checks paper
[03:29:15] <selwyn> uh
[03:29:32] <hayley> Don't think I can pull that off without consing, which would break MAP-ALLOCATED-OBJECTS.
[03:30:08] <hayley> I wonder what the little bump at about 22 is. Still would fit in a 32-bit pointer.
[03:31:21] <selwyn> if you assume that the distribution of pointers is identically independently distributed, it is fairly easy to compute an entropy
[03:31:39] <selwyn> however, i don't see why you would necessarily need to do so. i just wondered if you had already worked it out
[03:32:00] <gilberth> Does SBCL have static and dynamic space? Are they placed next to each other?
[03:33:16] <hayley> The not-fairly-easy part is figuring out how to stash probabilities for each absolute address, without consing.
[03:33:29] <hayley> gilberth: Yes to the former, idk to the latter. Good idea though.
[03:33:50] * hayley uploaded an image: (21KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/MOtRlrViLnOQNrCRQbLkcgbM/sbcl-deltas.png >
[03:34:00] <hayley> Same graph, but handling positive and negative distances separately.
[03:34:17] <selwyn> https://www.youtube.com/watch?v=5ciWB7VykII
[03:34:18] -ixelp- Poles Apart - YouTube
[03:34:45] <selwyn> hayley: do you like the division bell?
[03:35:13] <hayley> Haven't listened to it.
[03:36:08] <selwyn> i haven't listened to it much
[03:36:25] <selwyn> i always rated their earlier psychedelic stuff over the later prog stuff though
[03:44:29] * hayley sees someone confuse the two parts of CONS should not CONS its arguments.
[03:46:02] <hayley> https://www.reddit.com/r/GCSolidarity/comments/r7vnfn/who_the_fuck_is_scraeming_stop_posting_henry/hphkz72/
[03:46:03] -ixelp- who the fuck is scraeming "STOP POSTING HENRY BAKER" at my house. show yourself, coward. i will never not post henry bak [...]
[03:46:12] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:1bce:ba7c:3f01:c9f3) (Ping timeout: 268 seconds)
[03:46:15] <selwyn> bakerposting
[03:46:26] <gilberth> hayley: Curious, I get a 2^36 distance between a fresh CONS and NIL or other symbols. And 26 between a fresh cons and LAMBDA-LIST-KEYWORDS.
[03:46:49] <hayley> That could explain the peak there, yes.
[03:46:52] <gilberth> hayley: Is your distance measured in words?
[03:47:06] <hayley> Bytes currently.
[03:47:35] * hayley uploaded an image: (17KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/gRuYSiRxSodJHHEBIzpZfgBM/sbcl-delta-words.png >
[03:48:00] <hayley> https://gist.github.com/no-defun-allowed/874075b6efbb022ca98211fa9a4f6663
[03:48:00] -ixelp- SBCL pointer distances · GitHub
[03:48:13] <sm2n> selwyn: some people use pointer entropy for RE iirc
[03:48:34] <selwyn> re?
[03:48:41] <sm2n> it's a clue as to whether some bit pattern might be something you care about
[03:48:45] <sm2n> reverse engineering
[03:48:59] <selwyn> oh
[03:49:01] <selwyn> interesting
[03:49:28] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:59ec:d1ad:d4aa:2d8e) (Remote host closed the connection)
[03:49:33] <hayley> One subtlety is that the Interlisp paper floors the distance, whereas I take ceiling by INTEGER-LENGTH. The latter seems more useful to me.
[03:52:01] * hayley does a full GC and the peak around +0 disappears.
[03:52:18] * hayley uploaded an image: (17KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/JwfJCULHHbnThAWPJXyZAPoN/sbcl-after-gc.png >
[03:52:38] <hayley> https://twitter.com/stevemblackburn/status/1473448729914994688 LMAO
[03:58:40] <hayley> Oh, I had (- OBJECT REFERENCED) which would make "forward" pointers negative.
[03:59:27] * hayley uploaded an image: (17KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/cxVFpMlZBSOBGoyvSIhcYtge/sbcl-delta-words.png >
[03:59:40] <hayley> Most pointers point forwards, as the SBCL GC tries to lay out lists like that.
[04:04:00] <hayley> gilberth: If I make my test avoid (OR FIXNUM SINGLE-FLOAT CHARACTER) rather than the opposite, I get a huge pile of 33 bit backward pointers. That'd be your static space methinks.
[04:05:06] <gilberth> My NIL is 2^36 octets apart from a fresh cons, yes.
[04:07:06] <gilberth> But distance between a fresh cons and LAMBDA-LIST-KEYWORDS is less. hayley, what happens, if you exclude NIL from your analysis?
[04:07:19] <hayley> Hm, if I run decentralise-tests:run-tests I get even more backwards pointers there.
[04:07:22] <hayley> One second...
[04:07:52] <hayley> That spike drops from about 900k to 600k pointers.
[04:08:22] <gilberth> Ok.
[04:08:28] <hayley> Wouldn't hurt to special case NIL and T, as well as other common symbols, still.
[04:09:13] <hayley> Still funny that Steve Blackburn admits he reinvented that study without knowing it.
[04:09:47] <gilberth> Don't you do a research before doing research?
[04:12:06] <hayley> Depends.
[04:12:44] <hayley> In the case of the Netfarm ELS paper, I devised most things from first principles, then researched after. Finding details on other replicated data structures is great, because people document their libraries, but not algorithms. 
[04:13:03] <hayley> "Cool, I can use foo.setBlah() to set the blah, now where the hell is the blah going?"
[04:14:00] <gilberth> It disappears in the cloud. ;)
[04:14:55] <gilberth> Well, before I attacked submatch addressing, I did my homework.
[04:15:43] <hayley> FWIW I started when I was 17, and didn't know how to obtain papers, as we do.
[04:16:57] <gilberth> If that would have been 1990 I would almost buy that argument.
[04:17:24] <hayley> Dammit.
[04:18:08] <gilberth> I mean, these days there is this fantastic internet. At age 15, I hit the library of the local uni to do my homework.
[04:18:14] * hayley now wonders if the backpointers are going from instance -> class. Those are now in their own little heap to make future incremental GCs happy now.
[04:19:59] <gilberth> Do you have so many classes?
[04:20:37] <gilberth> Or are the backpointers "larger"?
[04:21:03] <hayley> The backpointers point further away, yes. My guess as to the backwards 32-bit-ish spike.
[04:21:19] <gilberth> I see.
[04:21:41] <hayley> But you'd have one such pointer per instance.
[04:22:00] <gilberth> Makes perfect sense.
[04:22:40] <hayley> Hm, no, about 900k of such pointers, but (ROOM T) only reports 209k "dynamic instances". I guess it could include structures too.
[04:22:54] <hayley> s/it/the backpointer theory/
[04:25:02] <hayley> gilberth: I mean, good luck getting anything from dl.acm.org without institution access. And my high school library access was a joke.
[04:26:13] <gilberth> hayley: Granted. But you still get a lot without acm.org. And: It's not written in a foreign language to you.
[04:26:23] <hayley> Yeah, fair.
[04:26:48] <selwyn> are a lot of comp sci papers on the arxiv?
[04:27:29] <hayley> Not many. And not many of the olde ones.
[04:28:53] <gilberth> Hmm, I usually have little trouble finding things. But, yes, I miss having an access to ACM and Springer for that matter.
[04:29:12] <selwyn> it will be annoying when i lose my access
[04:30:00] <hayley> Honestly, though, it is easier to go through sci-hub.st than the university library site.
[04:30:00] <gilberth> Place a Pi somewhere, where no one finds it on campus :-)
[04:30:14] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[04:31:28] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[04:32:42] <hayley> "Around 1977 when I was a college freshman I wrote a Lisp for the PDP-11 that took advantage of this and usually encoded CAR/CDR in the two halves of a 16 bit word." — Scott McKay
[04:32:48] <gilberth> hayley: Do instances have only one pointer to a class? What about the wrapper?
[04:33:03] * epony approves citations of reproducible / valid research from reputable ot at least useful and open access (without JS) and free to download
[04:33:41] <hayley> I don't know the object layout in SBCL, but the header in SICL will eventually just contain a hash code, so that you can just CAS out the storage vector to CHANGE-CLASS atomically.
[04:34:04] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:157f:fad:702e:d7a)
[04:34:26] <gilberth> Whatever, but you measured SBCL and thus PCL.
[04:34:31] <hayley> If you have to swap out two pointers then you're probably done for on stock hardware. (With the exception of CMPXCHG16B on x86-64 if the pointers are next to each other.)
[04:35:01] <epony> that's the second time I read about this instruction today ;-)
[04:35:27] <gilberth> hayley: I don't know. I was just asking silly questions.
[04:35:48] <hayley> Okay. I don't know, but that's my intuition assuming that the SBCL people did that safely.
[04:36:06] <hayley> ...which is really a coin flip.
[04:40:28] * hayley usually thinks she should be nicer about SBCL, as she is working on another implementation.
[04:46:58] * hayley googles "the lisp curse" and the redemption arc article comes up. Good start, I guess.
[04:48:05] <hayley> It's consistently on the bottom of the first page, which isn't so bad.
[04:57:45] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[04:58:11] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[05:00:28] <hayley> IIRC some of the late 68k had DCAS (CAS two arbitrary addresses at once) but it was slow.
[05:02:54] * moon-child whispers: HTM
[05:04:30] *** Quits: Catie (~user@user/catie) (Quit: heading home)
[05:22:18] <hayley> Also non-existent on stock hardware, yes.
[05:28:02] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[06:21:22] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:21:46] <dave0> maw
[06:22:09] <hayley> maw
[06:22:16] <dave0> hi hayley 
[06:23:54] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[06:28:29] <dave0> how are you?
[06:47:58] <hayley> Fine, how are you?
[06:56:21] * hayley tries to run the pointer distance program on her desktop and gets a memory fault.
[06:58:02] <dave0> i'm good thanks :-)
[06:58:38] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[06:59:34] <hayley> .oO(I still have the ASDF version of NQTHM I made. Maybe I'll play with that and see what the memory layout is like.
[07:00:18] <dave0> not quite something something something?
[07:01:35] <hayley> The Boyer-Moore theorem prover.
[07:02:38] <dave0> o_O
[07:03:23] <hayley> Somewhat more interesting now.
[07:03:51] * hayley uploaded an image: (48KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/mgNEuEOkYcDsfPcoAsIgKwpU/nqthm.png >
[07:07:21] <hayley> Seems there are like 4 million references to NIL.
[07:31:32] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[07:47:41] *** Joins: notzmv (~zmv@user/notzmv)
[07:48:24] *** Quits: Alfr (~Alfr@user/alfr) (Quit: Leaving)
[07:48:48] *** Joins: Alfr (~Alfr@user/alfr)
[07:56:02] *** Quits: semz (~none@user/semz) (Ping timeout: 240 seconds)
[08:08:29] *** Joins: semz (~none@user/semz)
[08:38:34] *** Joins: shka (~herr@109.231.0.226)
[09:10:26] <Aurora_v_kosmose> Opinion on SMTX?
[09:12:07] <moon-child> SMTX?
[09:12:30] <Aurora_v_kosmose> https://stmx.org/
[09:12:31] -ixelp- STMX
[09:13:23] <Aurora_v_kosmose> Mostly wondering if the library is contentious or if its use is generally a good idea.
[09:33:38] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:34:00] <epony> nckx, check your private messages
[09:34:46] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[09:35:14] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[09:36:00] <nckx> lol
[09:36:05] <nckx> Like I typed +g by accident.
[09:39:42] *** Quits: lisp123 (~lisp123@5.30.23.247) (Quit: Leaving...)
[09:40:08] <epony> nckx, you're not receiving still
[09:40:16] <epony> open a query to me
[09:43:33] <epony> nckx, want to make the discussion pubilc?
[09:45:26] <epony> nckx, or escalate this network wide?
[09:46:46] <nckx> Sure.  This sounds more like a topic for #libera.  No need to spam 3 unrelated channels.  No need to ping me anymore either.  I'm not interested in trolls.
[09:47:00] <nckx> Good luck!
[09:47:30] <epony> what?
[09:49:10] <epony> what is the reason, for your behaviour without any interaction in a #guix and #guix-offtopic channel?
[09:50:40] <epony> you seemed to be reasonable in other IRC neworks, and you've not been contacted prior to this..
[09:51:46] <Aurora_v_kosmose> I'll take the general lack of interest as the library being unknown or fine to use. *shrugs*
[09:52:33] <epony> we briefly talked, some weeks ago, you were frequent in #openbsd channels where I provided attention and support for years, you said you registered a greek domain on a contabo server and the termes remaind good then we have not talked?
[09:53:03] <epony> nckx, now you behave like some hostility exists from you towards my nick name? why is that?
[09:53:17] <mfiano> Take this discussion elsewhere
[09:53:33] <epony> where, the person does not respond elsewhere nowhere?
[09:57:26] <nckx> epony: Take this elsewhere.  Maybe you meant to tab-complete #libera and ended up here by mistake.  You'll find network staff who can help you there.
[09:59:59] <epony> nckx, network staff do not deal with personal micro-aggressions from a chanop towards their visitors
[10:00:51] <epony> nckx, visitors that have no spoken and not contacted anyone in their channels.. so what is the reason for your course of activity?
[10:00:53] *** Parts: nckx (~nckx@tobias.gr) ()
[10:05:44] <hayley> Aurora_v_kosmose: seems fine to me, though I haven't used it as hardware transactional memory still isn't a thing.
[10:11:10] <Aurora_v_kosmose> hayley: Yeah, seems that cpu support for it is hard to find.
[10:17:01] <hayley> What did I miss? Seems I can't unmute anyone.
[10:17:18] <hayley> Can't complain really.
[10:19:38] <moon-child> https://0x0.st/-C63.txt
[10:20:48] <hayley> Huh, epony can write coherent sentences??
[10:22:03] <hayley> I wonder if I can try my delta encoding trickery on SBCL core compression. The only problem is that the compression scheme really should be aware of what types of objects it's compressing.
[10:22:10] <moon-child> hayley: btw, I wonder about using all-0 representation for nil.  Bet it's a lot more common than self-references
[10:22:22] <hayley> Sure.
[10:22:35] * hayley goes to src/runtime/save.c
[10:22:39] <epony> that nick refuses contact, so it's a closed / unresolved issue, excuse the useless details
[10:22:46] <moon-child> (that said I feel like a completely different representation entirely is appropriate for symbols.  Since normally you don't actually look inside them)
[10:23:02] *** Quits: scymtym (~user@ip-94-114-248-79.unity-media.net) (Ping timeout: 256 seconds)
[10:23:41] <mfiano> hayley: might want to first use a scheme that isn't antiquated/inefficient
[10:23:57] <epony> maybe also there was no indication for a ban in #lispgames (no interaction whatsoever)
[10:23:57] <hayley> Not a fan of zlib?
[10:24:20] <epony> whoever did it, is repeating a discriminatory pattern
[10:24:28] <mfiano> it is slow and not very compressible. decompression time also is proportional to compression level
[10:24:45] <hayley> As long as the C interface isn't so terrible, it does not seem to be impossible to hack in, say, LZMA instead.
[10:24:49] <mfiano> unlike, say zstd, which is roughly the same speed to decompress regardless of compression settings
[10:24:58] <mfiano> /ignore epony
[10:25:14] <epony> mfiano, of course, no worries
[10:25:23] <moon-child> mfiano: that seems like a kinda orthogonal issue, though, no?
[10:25:24] <dave0> hayley: i like liblzf: http://liblzf.plan9.de/
[10:25:24] -ixelp- Marc Lehmann's "LibLZF"
[10:25:57] <mfiano> moon-child: no. it's very slow to compress and thus decompress zlib, and it offers subpar compressiblility
[10:26:03] <hayley> Yeah, I am scheming a preprocessing pass that is specific to pointer/object-heavy data like Lisp images.
[10:29:48] <hayley> At least core dumping and loading seems like a not-very-insane part of the SBCL C runtime.
[10:31:23] <hayley> mfiano: Thanks for the idea! Gives me something to put in <https://github.com/no-defun-allowed/swcl>
[10:31:24] -ixelp- GitHub - no-defun-allowed/swcl: Steel Wool Common Lisp
[10:31:51] <mfiano> hayley: I ran a crappy benchmark of various schemes against my arbitrary homedir data if you're interested
[10:34:44] * moon-child looks at sbcl runtime
[10:34:48] * moon-child spots horrid, horrid ifdef soup
[10:35:07] <epony> same soup is everywhere ;-)
[10:35:34] <epony> (don't look in ssl/tls)
[10:52:15] * hayley struggles to figure out how zlib is linked to SBCL. Some -lzlib or some crap?
[10:53:25] <moon-child> -lz
[10:53:37] <hayley> Thanks!
[10:54:38] <mfiano> Ah here it is, and this line surprised me, given the compressibility https://gist.github.com/mfiano/db0bf3048c466911773692c7684cda24#file-compression_algorithms-txt-L99
[10:54:39] -ixelp- compression_algorithms.txt · GitHub
[10:55:43] <hayley> So I just need to diddle src/runtime/Config.<cpu>-<os> apparently.
[10:55:57] <moon-child> mfiano: 100% of what?
[10:56:06] <mfiano> The reference at the top
[10:56:18] <mfiano> ie; the same speed as tar
[10:56:39] <moon-child> ah, I see
[10:56:49] <hayley> https://www.reddit.com/r/ProgrammingLanguages/comments/rlttx2/programming_language_ranked/hpic6ve/
[10:56:50] -ixelp- Programming language ranked? : ProgrammingLanguages
[10:57:24] <moon-child> I am surprised at that.  My recollection was lz4 is still faster than zstd for low compression ratios
[10:57:47] <moon-child> (however it may be a peculiarity of your data set, as nothing gets below 66%, which is a bit high)
[10:58:10] <mfiano> That benchmark shows that to only be the case for decompression by a small margin for this dataset
[10:58:40] <mfiano> and only for high zstd levels
[10:58:58] <moon-child> I mean, at the same compresssion ratio, lz4 can go faster
[10:59:08] <moon-child> I don't remember where I saw those numbers, one sec
[10:59:11] <mfiano> zstd decompression speed varies very little though
[10:59:47] <hayley> I also wonder why zlib uses a 64kiB buffer whereas zstd offers to take it all in one hit. Guess so that you don't have to keep a whole copy worst-case?
[11:00:06] <mfiano> Yeah this was for just one dataset, lots of small files, lots of large files, both compressible and not so compressible...a typical homedir. I was just trying to see which i would like to use as the backing scheme for ZFS
[11:00:16] <mfiano> and threw a few more schemes in for good measure :)
[11:01:19] <moon-child> https://facebook.github.io/zstd/  from the horse itself: lz4 ratio 2.1 decompress 4.5gb/s; zstd ratio 2.2 decompress 2.4gb/s
[11:01:19] -ixelp- Zstandard - Real-time data compression algorithm
[11:02:59] <mfiano> Not surprising, but really depends on the data
[11:03:08] <mfiano> also whether its a stream or a file
[11:03:13] <dave0> hayley: 64k limit might be for compatibility with msdos
[11:03:27] <hayley> lol
[11:03:59] <mfiano> zstd uses xxhash under the hood, which advertises itself as a hashing algorithm approaching memory bandwidth limits
[11:04:12] <mfiano> i don't know how true that claim is though
[11:04:30] <mfiano> and probably wouldnt be for a CL implementation very easily, as you need to return 64bit numbers
[11:04:43] <dave0> there's always classic unix compress
[11:04:44] <mfiano> unless you inline and let caller optimize it away if possible
[11:05:02] <moon-child> why would that matter?
[11:05:15] <moon-child> hasher works on a packed array of, say, 8-bit bytes
[11:05:27] <moon-child> no reason you couldn't exhaust memory b/w
[11:05:41] <hayley> mfiano: I got like 1 byte/cycle xxhash without using SIMD. So it's probably doable.
[11:06:03] <mfiano> I know a few people that tried implementing xxhash in CL, myself included...to nothing satisfactory
[11:06:10] <mfiano> Give it a go if you want :)
[11:06:16] <hayley> And cooking up a bignum as a return value wasn't really a performance problem for what I used xxhash for.
[11:06:24] <hayley> Oh, I did implement it though.
[11:06:30] <mfiano> Nice
[11:07:06] <hayley> ...and I also have a version in OpenCL which was a couple of magnitudes faster.
[11:07:13] <hayley> ...if you're brute forcing hashes like me.
[11:09:21] <mfiano> in any case, i would really like to see zstd-compressed core images in SBCL some day.
[11:09:27] <epony> so that you know, mfiano banning my nick from #lispgames is considered fashion-fascism-discrimination
[11:09:46] <mfiano> Or at least something that is fast both ways, as space is cheap
[11:09:53] <mfiano> (not xz/lzma)
[11:10:28] <hayley> Working on it.
[11:11:25] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 268 seconds)
[11:11:57] <mfiano> Cool, lemme know how that works out!
[11:17:41] <hayley> Seems I killed off a lot of code. But, to be fair, I am reading the whole file in one hit rather than chunking. Doesn't really bother me, as I don't use huge images.
[11:19:02] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[11:22:09] <moon-child> considering you have to fit the decompressed image in memory anyway, space requirement only goes up by a constant factor <2
[11:22:25] <moon-child> so probably not an issue anyway
[11:22:31] <moon-child> and there is always mmap
[11:23:01] <hayley> True!
[11:24:17] <hayley> Building SWCL now, C compiler hasn't complained yet.
[11:25:18] <moon-child> https://reference.wolfram.com/language/tutorial/SomeNotesOnInternalImplementation.html  apparently mathematica uses reference counting
[11:25:20] -ixelp- Some Notes on Internal Implementation—Wolfram Language Documentation
[11:25:34] <moon-child> I guess it does not have pointers.  Still.
[11:26:16] <hayley> "The contiguous storage of elements in expressions reduces memory fragmentation and swapping. However, it can lead to the copying of a complete array of pointers when a single element in a long expression is modified."
[11:26:18] <hayley> CDR coding?
[11:28:17] <moon-child> seems like just an array, no?
[11:29:03] <hayley> Now that you mention it.
[11:30:17] <hayley> Hm, an "empty" SBCL image compresses the same with zlib and zstd, but zstd was noticeably snappier. Also, zstd fails to decompress so far.
[11:31:50] <hayley> That said, I used :compression 9 and that means different things to zlib and zstd.
[11:32:50] <hayley> Aha, I read the length before I lseek()ed.
[11:35:26] <hayley> Stupid question, why have so many compression numbers? They are totally arbitrary, but 0 to 9 kinda makes sense. Apparently zstd goes from -7 to 22?
[11:35:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[11:36:08] <moon-child> lol
[11:36:42] <hayley> Or is the compression ratio of zstd's 0-9 supposed to coincide with zlib 0-9 maybe? Just a random guess.
[11:38:26] <hayley> Holy moly, it works!
[11:39:02] <hayley> Going to make a whole bunch of McCLIM images to test...
[11:40:00] <dave0> nice
[11:40:20] <dave0> progasm when you get your code working :-)
[11:41:07] <mfiano> negative levels switch modes to mostly affect compression speed
[11:41:29] <mfiano> for the same reason you have to supply ultra to specify higher than 19 iirc
[11:41:50] <hayley> And bloody hell, zlib feels slow now.
[11:42:08] <mfiano> the negative levels were added after the fact to achieve lz4 speeds
[11:42:17] <hayley> mfiano: 111M uncompressed, 26M zlib level 9, 24M zstd level 9
[11:42:43] <dave0> 20 levels seems like a lot
[11:42:50] <mfiano> try with zlib 6 and zstd 3 (defaults)
[11:43:16] <hayley> Also, zstd-compressed image takes 322ms to evaluate (quit) whereas zlib-compressed takes 731ms.
[11:43:42] *** Joins: treflip (~user@user/treflip)
[11:44:22] <moon-child> http://ix.io/3J6y
[11:44:56] <dave0> what settings gives you the same ratio, so you can check the relative speed?
[11:45:17] <hayley> Well, zlib and zstd are pretty similar for level 9 still.
[11:45:52] <mfiano> but zstd 9 is a lot slower to compress than the default, at not that much more compressibility
[11:47:34] <mfiano> though i always use all cores, so i dunno what other flags you are passing
[11:48:57] <hayley> 27MB for zlib 6, 750ms to quit.
[11:52:19] <hayley> 25MB for zstd 3, 345ms to quit. And SAVE-LISP-AND-DIE was pretty damn fast.
[11:52:33] <mfiano> i'm not sure what "to quit" is measuring
[11:52:44] <hayley> echo '(quit)' | ./some-binary
[11:53:13] <mfiano> right but what hooks are run that relate to compression of the core image that was already started
[11:53:57] <hayley> I didn't find any.
[11:54:09] <moon-child> also curious about time for an uncompressed image (though obviously you also pay extra i/o then, calculus gets strange)
[11:54:34] <hayley> Like 10ms or so, and the image is 110MB.
[11:54:49] <hayley> ...all on a tmpfs, so I/O is negligible in this specific case.
[11:55:08] <mfiano> hayley: also keep in mind that zlib doesn't decompress in parallel, whereas zstd does. so startup time may be misleading
[11:55:29] <moon-child> why is that misleading?
[11:56:01] <moon-child> if zstd can go faster by going in parallel, then it still goes faster and your application takes less time to start up; doesn't matter how it gets faster
[11:56:05] <mfiano> wildly varying results on different cpu's?
[11:56:09] <moon-child> unless you care about systems with fewer than 864 cores, I guess
[11:56:41] <hayley> I didn't enable anything to do with parallel decompression FWIW. Not entirely sure how it works.
[11:56:50] <mfiano> manpage says speeds > 500MB/s per core
[11:57:14] <moon-child> how many cores do you expect people to have?  My craptop has 4
[11:57:23] <hayley> 864?
[11:57:36] <shka> yeah
[11:57:43] <shka> eventually it will ocme to this
[11:58:23] <mfiano> 64 threads isn't all that uncommon, craptops aside
[11:58:31] <hayley> https://bugs.launchpad.net/sbcl/+bug/1881089
[11:58:33] -ixelp- Bug #1881089 “Feature request: Zstd / lz4 compression” : Bugs : SBCL
[11:58:37] <shka> not only this
[11:58:56] <hayley> Someone already implemented lz4 apparently.
[11:59:06] <shka> mfiano: silicon memory, silicon processor, combining two is the way of the future
[11:59:23] <hayley> mfiano: https://github.com/no-defun-allowed/swcl/commit/f836c655dd5ded1d25442c9a7736cc7e204d714b
[11:59:25] -ixelp- Use zstd instead of zlib · no-defun-allowed/swcl@f836c65 · GitHub
[11:59:48] <mfiano> hayley: nice. tbh i am actually already using zstd-compressed core images, implicitly
[12:00:19] <mfiano> since my ZFS dataset where my core image resides is compressing blocks with zstd :)
[12:00:38] * moon-child spots https://www.ebay.com/itm/223955161625
[12:00:57] <hayley> 👀
[12:02:47] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[12:04:38] *** Joins: aeth (~aeth@user/aeth)
[12:06:04] <mfiano> add build flag, chunking or whatever, and send a patch to the mailing list :)
[12:07:02] <hayley> 1m04s to S-L-A-D with McCLIM and :compression 9 zlib, 13.2s to S-L-A-D with :compression 9 zstd.
[12:07:17] <moon-child> nice
[12:07:33] <hayley> and zlib makes a 26MB image, zstd makes a 24MB image.
[12:07:55] <mfiano> try 19 with "long mode" enabled :)
[12:08:26] <hayley> Well, I had tried to map 0-9 to 0-18 for zstd, and :compression 9 was so slow that I lost interest.
[12:08:36] <hayley> So I map 0-9 to 0-9 still.
[12:09:08] <moon-child> gilberth: https://doc.rust-lang.org/std/panic/fn.catch_unwind.html apparently rust does have nonlocal exits
[12:09:09] -ixelp- catch_unwind in std::panic - Rust
[12:09:40] <mfiano> sounds arbitrary.
[12:10:26] <hayley> "It is **not** recommended to use this function for a general try/catch mechanism."
[12:10:44] <mfiano> i mean the levels are 1-19. or -7-0 with --fast, or 20-22 with --ultra
[12:11:39] <moon-child> who's that going to stop though?
[12:12:13] <hayley> The equivalent of beach for Rust style?
[12:22:38] * hayley tries mapping 0-9 to 0-14 next.
[12:23:11] <hayley> It's totally taste at this point. But :compression has to be (or boolean (mod 10))
[12:25:39] <mfiano> well <1 is for a whole different compression mode
[12:25:49] <shka> pub fn catch_unwind<F: FnOnce() -> R + UnwindSafe, R>(f: F) -> Result<R>
[12:25:56] <mfiano> I would map 0 to 1, 3 to 6 (defaults), and interpolate the rest of the domain
[12:26:10] <mfiano> err 6 to 3
[12:26:18] <shka> because simplicity is for noobs
[12:26:23] <hayley> Right.
[12:27:57] <hayley> Well, it still seems to taper off past 10 anyway.
[12:27:59] <dave0> if you don't pick a number, does it pick something suitable for you?
[12:28:19] <hayley> The difference between 10 and 14 is like 500k for a 24.4MB image.
[12:28:53] <mfiano> It's not so black and white though
[12:29:00] <mfiano> depends on your window size and the data etc
[12:29:14] <hayley> Still haven't configured anything about zstd, but sure.
[12:29:14] <dave0> i know zlib has Z_DEFAULT_COMPRESSION
[12:29:14] <mfiano> "long mode" increases window size
[12:30:00] <mfiano> and if data is trained or not, and if size hint is supplied, etc
[12:30:33] <hayley> I've done the bare minimum possible, I haven't trained or anything.
[12:30:54] <mfiano> if you are compressing a stream of bytes and the library doesn't know the size, you might want to supply that size hint
[12:31:01] <mfiano> otherwise you will probably suffer
[12:31:21] <mfiano> ah, fair enough
[12:31:24] <hayley> Well, it does know the size, I compress a whole region of memory in one go.
[12:31:44] <hayley> Otherwise I'm only fiddling with the compression level number.
[12:32:14] <mfiano> then the only thing really worth tweaking to see if it makes a difference is long mode
[12:32:54] <mfiano> i got significant compression ratios with it, at the expense of a little longer time to compress
[12:33:02] <mfiano> ymmv ofc
[12:34:27] <mfiano> also btw, the reference zstd encoder is able to compress with gzip and a few other algorithms. it might help you map the numbers
[12:35:55] <mfiano> --format=FORMAT: compress and decompress in other formats.
[12:36:28] <mfiano> and I'd assume the zstd levels are appropriately mapped, so maybe look in the source?
[13:23:17] *** Joins: nckxmas (~nckx@tobias.gr)
[13:25:05] <dave0> hayley: i have some code: https://paste.c-net.org/SeverBragging
[13:26:02] <dave0> it's a threaded gzip, and threaded liblzf, just for comparison for size and speed, how much threads helps
[13:26:50] <dave0> i put everything in it.. you have to build zlib and liblzf first, then you can build my programs
[13:27:39] <hayley> Noted.
[13:27:53] <hayley> Seems parallel zstd is more of a pain in the ass, c.f. https://github.com/facebook/zstd/blob/dev/examples/streaming_compression_thread_pool.c
[13:27:54] -ixelp- zstd/streaming_compression_thread_pool.c at dev · facebook/zstd · GitHub
[13:27:58] <dave0> just to see how much difference threads makes
[13:28:23] <dave0> i like lzf
[13:30:21] <dave0> zlib and liblzf is up to date
[13:30:45] <hayley> https://www.youtube.com/watch?v=CRnaYJcTd5c
[13:30:46] -ixelp- Fat Lady Of Limbourg (2004 Digital Remaster) - YouTube
[13:31:29] <epony> I'll need a stick figure artwork on matrix to go with that fatness too.
[13:31:46] <hayley> https://www.youtube.com/watch?v=MrPXR3sMPcE
[13:31:47] -ixelp- Shut Up - YouTube
[13:31:59] <epony> why?
[13:33:12] <moon-child> 'compressFile_orDie'
[13:33:15] <moon-child> what is this naming scheme?
[13:33:34] <hayley> SAVE-LISP-AND-OR-DIE
[13:33:45] <dave0> haha they've managed to merge camel case with snake case
[13:34:13] <moon-child> 'FILE* const' they also get the spacing wrong
[13:34:17] <epony> show a link to Lisp style guide then
[13:35:42] * epony pushes mfiano who are you going to ban and mute eh?
[13:36:31] <epony> and tomorrow?
[13:37:10] <dave0> hayley: i'd love to see you you go with the threaded lzf
[13:37:33] <dave0> *How you go
[13:37:53] <dave0> especially if threads makes it faster than zstd
[13:39:25] * hayley already asked what to do next in #sbcl
[13:41:03] <dave0> dammit i scrwed up the permissions
[13:43:21] <hayley> Still contemplating delta encoding, but it's totally useless for anything that isn't a whole pile of objects.
[13:44:59] <hayley> SBCL doesn't segregate pointer-y objects and not pointer-y objects, so it's a total stab in the dark.
[13:45:54] <epony> http://man.openbsd.org/style.9 is what Unix has to offer
[13:45:55] -ixelp- style(9) - OpenBSD manual pages
[13:46:26] <epony> compare with CL
[13:47:44] <moon-child> hayley: what do you mean by 'whole pile of objects'?  Something like what's contained in a region, in a language where they are first-class?
[13:48:31] <hayley> moon-child: I mean that delta-encoding would work best if we only delta encoded pointers. This would require knowing object layout, whereas SBCL just hands me a region of bytes.
[13:49:06] <moon-child> oh
[13:49:08] <dave0> hayley: i fixed the permissions: https://paste.c-net.org/CarouselAgitated
[13:49:11] <hayley> Practically, there will be a series of objects I could parse, but that's a hassle.
[13:49:12] <moon-child> time to learn sbcl's object representation?
[13:49:27] <hayley> Sadly I know a bit of it already.
[13:49:32] <moon-child> lol
[13:53:22] * hayley tries to guess the C types she wants.
[13:56:17] <hayley> write_bytes_to_file uses size_t for the byte count, but inflate_core_bytes uses int.
[13:59:30] <hayley> Well, SBCL is pissed at me that I went and did delta coding, since I overwrote the spaces with delta coding stuff. Guess I could change it back after compression.
[13:59:31] <dave0> can't go wrong with int
[14:02:28] <hayley> (room t) suggests there's a fair amount of conses and simple vectors to compress, but I'll still be amused if this works.
[14:07:29] <hayley> Nah, that's just the memory fault handler, cause I should be doing ((size_t*)addr) -= ... rather than s/addr/bytes/
[14:08:51] <hayley> Could still eyeball the lowtags to decide if something should be delta-encoded or not. Trouble then is how to decode it.
[14:15:59] <hayley> Indeed delta-encoding makes McCLIM 20% larger. ):
[14:16:18] <hayley> Wait, I'm building in the wrong directory. lol
[14:16:31] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 256 seconds)
[14:24:49] <hayley> From 25MB without delta encoding to 44MB with. Need to actually parse objects, as I had said before :(
[14:31:57] <moon-child> eh?
[14:32:05] <moon-child> is a relative pointer bigger than an absolute pointer?
[14:32:46] <hayley> No, they're the same size. But I would expect the compressor to have a better day with [1, 1, 1, 1, ...] rather than [1, 2, 3, 4, ...] but I really should benchmark that.
[14:33:03] <hayley> In my defense, I haven't found any descriptions of zstd say it does delta encoding.
[14:33:47] <moon-child> so--same size heap, with relative pointers instead of absolute ones, makes the compressor that much worse?
[14:33:49] <moon-child> I am surprised
[14:34:34] <hayley> Yes. But I haven't parsed anything, I've uniformly applied it, which blows out any regularity in things that aren't pointers.
[14:34:51] <moon-child> ah, ok
[15:27:40] *** Joins: random-nick (~random-ni@87.116.180.98)
[15:28:13] <hayley> At the very least, I could try to encode only the pointers that look like pointers to objects, and then keep the tags intact. Hmm.
[15:28:43] <hayley> Furthermore, delta encoding pointers that go outside the region being compressed is probably going to be worthless. A fair few heuristics I could try.
[15:29:44] <hayley> That would also avoid ruining as many unboxed values, too.
[15:30:22] <hayley> A bit like scanning ambiguous/conservative roots really.
[15:32:18] <hayley> But then avoiding cross-region pointers leads to more encoding issues. Hmph.
[15:53:51] <hayley> I could map deltas to numbers in the same region, and that'd avoid most false positives for pointers. But what does that cost? Hmm.
[15:58:01] <hayley> And does it hurt compression? Somehow I doubt it's looking for zeroes, but I really should check some day.
[15:58:56] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[16:00:17] *** Quits: shka (~herr@109.231.0.226) (Read error: Connection reset by peer)
[16:03:58] *** Joins: shka (~herr@109.231.0.226)
[16:07:13] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[16:32:07] *** Joins: kevingal (~quassel@149.157.122.206)
[16:36:36] *** Quits: kevingal (~quassel@149.157.122.206) (Ping timeout: 240 seconds)
[16:37:11] *** Joins: kevingal (~quassel@2001:770:c0:401:c8a4:cdd6:e6cc:d72f)
[16:43:33] <pjb> TikTok overtook Google as the most visited website in 2021 <https://qz.com/2105400/tiktok-overtook-google-as-the-most-popular-website-in-2021/>
[16:43:34] -ixelp- TikTok overtook Google as the most popular website in 2021 — Quartz
[16:43:46] <pjb> I never visited or used TikTok…
[16:47:47] <shka> i don't even know what tiktok is
[16:48:01] <shka> other then Chinese 
[16:48:04] <selwyn> video based social media site
[16:48:16] <selwyn> somewhat like vine
[16:48:57] <shka> never seen vine either
[16:49:05] <shka> is it instagram, but with videos?
[16:49:42] <selwyn> i think so
[16:49:59] <selwyn> i don't actually use it but i often see content reposted on twitter
[16:51:41] <selwyn> do you keep away from social media then?
[16:53:19] <gilberth> Good morning #lispcafe!
[16:53:26] <selwyn> good morning gilberth
[16:54:00] <shka> selwyn: i use facebook for messanger and linkedin, sometimes i visit instagram but i don't post anything
[16:54:15] <selwyn> linkedin is one of the most underrated social networks
[16:54:20] <selwyn> in terms of insane content
[16:54:42] <shka> riiiight
[16:54:58] <shka> i don't actually read stuff on linkedin 
[16:55:13] <shka> because it is full of "try-hards"
[16:55:58] <selwyn> there was a guy who posted on it while his wife was giving birth taking pictures and such
[16:56:12] <shka> ... god
[16:56:22] <selwyn> said sth like 'i wfh - work from hospital'
[16:58:39] <epony> that's how you get books like "head first IRC" and "learn to cough in 21 hours"
[17:00:21] <epony> if you get dropped on the floor, the cold reality gives you extra hardening for real chats
[17:16:58] *** Joins: lisp123 (~lisp123@5.30.23.247)
[17:27:18] <gilberth> Is there an easy way to have Quicklisp using a different specific directory for its cache?
[17:27:34] <selwyn> portacle does that
[17:27:43] <selwyn> so check the source code?
[17:28:23] <gilberth> Sure. I was hoping someone would know the parameter to tune without looking.
[17:30:14] <shka> gilberth: second
[17:32:58] <shka> gilberth: sorry, no idea
[17:33:39] <gilberth> Thanks for looking. I'll figure it out. When in doubt I create a new UNIX user. :-)
[17:35:21] <gilberth> shka: btw I still enjoy your Kangding Ray good morning song for getting awake.
[17:35:42] <shka> good, i don't have to look for anything else 
[17:35:47] <shka> yet
[17:37:36] <gilberth> My REQUIRE is a mess anyway. I have a ~/lisp/system/** directory it looks at first and a ~/lisp/patch/**/*.* to load patches after loading a system.
[17:52:25] *** Quits: random-nick (~random-ni@87.116.180.98) (Ping timeout: 256 seconds)
[17:54:25] *** Joins: scymtym (~user@ip-94-114-248-79.unity-media.net)
[17:57:25] <selwyn> how common are non english language social networks nowadays
[17:59:54] <White_Flame> probably depends on what country you're in.  china?  certainly
[18:00:02] <treflip> selwyn: We have vk.com in Russia. It's probably the most popular social network here. I guess, China has their own social (control) media platforms/
[18:00:25] <selwyn> it's all control
[18:00:31] <treflip> definitely
[18:00:46] <epony> s/control/stupidity/g
[18:08:42] <dave0> nite all
[18:08:45] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:14:59] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[18:15:14] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[18:38:22] *** Joins: makomo (~makomo@user/makomo)
[18:47:17] *** Quits: OlCe (~user@lfbn-nic-1-588-65.w90-118.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[18:57:32] <shka> selwyn: not very, Russia and China as treflip mentioned
[18:57:43] <shka> social media are mostly American
[19:04:18] <gilberth> Are we talking about networks provided by American companies, or the English language being used?
[19:05:09] <selwyn> either
[19:06:07] <selwyn> there was a kind of british proto facebook in the early 200s
[19:06:09] <selwyn> 2000s
[19:09:46] <gilberth> Well, with social media and messengers it's about proper timing, luck, and perhaps capital invested. Many things, which now have the monopoly, had forerunners. And it it's not, that the best solution would win.
[19:11:24] <gilberth> Youtube is a good example. In the early days, there were plenty of other video platforms, and Youtube wasn't the best.
[19:14:10] <gilberth> Amazon is an example where using lots of money helped. I am still surprised how bad their online store is, as you have no sensible means to search and/or filter for products. And mail order wasn't new. Of course it didn't help that the existing mail-order businesses slept while the internet got a thing.
[19:14:15] * gilberth shrugs.
[19:15:05] <selwyn> people underestimate how sophisticated delivery networks were/could be at local scale
[19:15:51] <selwyn> read once about a town in rural ireland in the 50s, where you could ring up any shop and order your groceries from that and other shops
[19:15:56] <selwyn> and you would get same day delivery
[19:18:49] <gilberth> Yep. What most people forget is that, groceries here usually offer to deliver their good. You'd need to phone them, though. This has been established for decades. And mail-order came up after the war here and already was really big. In particular for things like clothing.
[19:24:48] <gilberth> However, for Amazon, I believe it was a good move to start with books. For me it was very convenient, because all the books I would like to buy would be needed to be ordered anyway. And while you could get every German title with any regular book store within one or two days, you can't with science book.
[19:26:33] <gilberth> However, for regular books, people are not aware, that you could phone any book store nearby and order it, to pick it up the next day.
[19:28:29] <gilberth> At times I lived near a book store, I did that on a regular basis for regular books. For science texts, I would need to go down town to a specialized store, which could order those over-seas titles. And it would take ages for the title to arrive.
[19:29:27] <gilberth> These days, even for non-science books, if the original is in English, I would prefer the English original. Can't order those at a vanilla book store.
[19:31:05] <gilberth> We did that as a student for novels, too, as books as the UK titles are way cheaper than the German translation. About half the price.
[19:37:08] <selwyn> what
[19:37:16] *** Quits: treflip (~user@user/treflip) (Quit: I'll be back soon)
[19:37:20] <selwyn> books are so expensive here
[19:39:19] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[19:39:25] <gilberth> Not as expensive as here, it seems. At least for novels.
[19:46:29] <selwyn> ok
[19:47:55] *** Joins: treflip (~user@user/treflip)
[19:50:54] <gilberth> A random example (and this is the kind of trash we were reading at that time): EUR 13,00 for the German title <https://www.amazon.de/WarsTM-Darth-Plagueis-James-Luceno/dp/3442380456/> while only EUR 8,45 for the English title <https://www.amazon.de/Darth-Plagueis-Star-Wars-Legends/dp/0345511298/>
[19:51:47] <selwyn> that really is a random example lolol
[19:51:58] <selwyn> amazed that there is a market for star wars legends
[19:52:41] <selwyn> are there 'old believers' who reject the new canon?
[19:53:01] <gilberth> Well, we were reading this kind of novels a lot at that time, like others would watch TV. This is just a random Star Wars title I could find quick.
[19:53:12] <selwyn> right
[20:02:19] <pl> selwyn: old canon is IMHO much more solid
[20:02:31] <pl> well, old extended universe
[20:02:39] <selwyn> i can believe that
[20:04:46] <edgar-rft> I generally do not believe old people
[20:05:13] <lisp123> edgar-rft: lol
[20:07:52] <shka> my feelings about the star wars are summed up by Kreia in KOTOR2
[20:08:27] <shka> even more so after the Disney movies
[20:08:39] <aeth> survivorship bias
[20:08:48] <aeth> people like the Star Wars EU because it had a lot of good stories
[20:08:54] <aeth> but it also had a lot of bad and contradictory stories
[20:09:33] <shka> aeth: yeah, as opposed to the new canon xD
[20:09:36] <shka> which is all shit
[20:10:40] <aeth> Star Wars never really had good worldbuilding
[20:10:49] <shka> regardless
[20:10:54] <aeth> if you suspended disbelief on looking into things in more detail, the stories were good
[20:10:58] <aeth> but it was always a mess
[20:11:17] <shka> the endless cycle of death and violence in star wars is just unsettling to me 
[20:11:59] <shka> and how it is all controlled by "the will" of the force feels just wrong
[20:12:00] <White_Flame> given that "wars" is in the title of the series, it does kinda fit though :-P
[20:12:11] <aeth> what doesn't really make sense is the scale
[20:12:21] <shka> White_Flame: yeah, sure, but it is horrible still
[20:12:38] <White_Flame> its roots as a fantasy western is probably the biggest shoehorn into a coherent universe
[20:12:53] <shka> anyway
[20:13:03] <aeth> the scale of things, on multiple levels, is just weird. Usually too big for the kinds of stories they're telling
[20:13:07] <shka> legacy of kain / StarWars crossover, make it happen
[20:13:48] <aeth> it's like, here's a whole planet, but also everything of note takes place in a town of like 10,000 people, but it's an important planet even though it's an entire galaxy which probably has quintillions of inhabitants
[20:14:51] *** Joins: drakonis (drakonis@user/drakonis)
[20:15:28] <shka> aeth: i can ignore that, i can't ignore the broader message 
[20:16:17] <aeth> fate?
[20:16:26] <aeth> it's an old storytelling structure, going back to at least the Greeks
[20:16:46] <aeth> probably as old as stories, though
[20:16:49] <shka> yes, but fuck FATE
[20:17:03] <shka> well not FATE, FATE is actually fine RPG system
[20:17:12] <aeth> it's all about appealing to the inherent narcissism inside of people, who want to believe that they're the main character chosen by fate/providence/destiny/whatever
[20:17:23] <shka> the best stories about defiance, not compliance 
[20:17:25] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[20:17:39] <shka> fight me 
[20:17:58] <aeth> well, this is sort of like the TVTropes trope Seinfeld is unfunny
[20:18:12] <aeth> Star Wars popularized the whole cliche of fighting against the evil empire
[20:18:16] <aeth> which was subversive at the time
[20:18:33] <aeth> but nowadays, if you see an empire, it's evil
[20:18:43] <aeth> kingdom/republic good, empire bad
[20:19:14] <aeth> and then the sequel trilogy decides... sure, let's have them fight against the evil empire again even though it's no longer there.
[20:19:30] <aeth> and yet, more powerful than ever
[20:19:37] <shka> dunno, Americans seem to always lover rebelling against the empire ;-)
[20:19:45] <White_Flame> the federation was evil in ep1, which was interesting terminology
[20:20:15] <aeth> White_Flame: that might have been a subtle Star Trek reference
[20:20:38] <shka> aeth: yeah, that's what really is unsettling about it, just a higher power forcing the whole galaxy into another cycle of violence for no obvious reason
[20:20:58] <shka> if anything, this meta narration was more interesting then anything actually happening in the movies
[20:21:15] <aeth> I don't like it in sci fi when entire worlds get destroyed
[20:21:26] <aeth> I didn't like it when the Star Trek reboot did that, either
[20:21:43] <aeth> It's not original or creative. It's just... let's kill billions/trillions for drama even though we never show the billions/trillions or their society
[20:22:05] <selwyn> fighting against an evil empire is subversive?
[20:22:15] <shka> at least Picard tries to make something out of it, with, uh, mixed results
[20:22:39] <White_Flame> shka: well, there's magical forces driving behavior into the extremes
[20:22:49] <shka> anyway, that's my problem with Star Wars
[20:22:57] <shka> the force
[20:23:17] <shka> and how in a twist of fate Disney itself is the force now xD
[20:23:29] <White_Flame> also, it's like red letter media mocks them for: star wars is too tightly defined and must stick to its established tropes in order to stay "star wars"
[20:23:46] <aeth> If you're going to destroy a world, make people care about the world and turn it into a tragedy.
[20:23:54] <aeth> Star Trek actually did this right, in TNG. https://memory-alpha.fandom.com/wiki/The_Inner_Light_(episode)
[20:23:54] -ixelp- The Inner Light (episode) | Memory Alpha | Fandom
[20:24:18] <shka> aeth: TNG had the most humane stories i ever seen on the screen
[20:24:19] <aeth> That should be the standard of sci fi destroying worlds. Not Star Wars IV.
[20:25:20] <shka> and was not afraid to tackle morality 
[20:25:28] <shka> i really respect TNG for that
[20:26:23] <shka> and Star Wars, i feel like there was so much potential here
[20:26:38] <shka> to address the inherent problems of the originals 
[20:27:14] <shka> you know, the way Star Trek II addressed Kirk's crew never returning to places they've visit
[20:27:26] <shka> that was pretty neat and smart
[20:28:16] <selwyn> https://img.ifunny.co/images/a14adce88799174759a9806211774e071309f43583236d84d976ad64e9fa40d7_1.webp
[20:28:17] <shka> and that's why the most interesting every done with SW was KOTOR2 for me
[20:28:50] <shka> selwyn: it is difficult to crank good episodes non-stop :D
[20:29:01] <aeth> Star Wars video games, when done right anyway, are pretty good. Probably better than the stories, which have gotten cliche
[20:29:17] <aeth> Probably because the heart of Star Wars is a power fantasy with swords vs guns
[20:29:24] <aeth> and it's a familiar setting you can jump right into
[20:30:00] <aeth> Iirc, this is one of the better ones that mixed FPS with lightsaber combat. https://en.wikipedia.org/wiki/Star_Wars_Jedi_Knight_II:_Jedi_Outcast
[20:30:15] <aeth> Unfortunately, they had a license monopoly with EA for a decade or more, causing stagnation
[20:31:26] <selwyn> are there any good star trek games?
[20:31:31] <aeth> huh, no entry in the franchise since 2003 even though it was really good. https://en.wikipedia.org/wiki/Star_Wars:_Jedi_Knight
[20:31:57] <aeth> selwyn: maybe, but Star Trek would be more about ship combat than person-to-person combat if done right
[20:32:04] <aeth> selwyn: so it would probably have to be a Homeworld clone
[20:32:09] <aeth> (ship RTS)
[20:32:25] <shka> selwyn: kotor, kotor2, dark forces was really cool doom clone, jedi knight is really good
[20:32:25] <aeth> Star Wars can do spaceship combat, but it's more about fantastical fake dogfighting when they do it
[20:32:36] <shka> empire at war
[20:32:53] <shka> oh, sorry you asked about the trek
[20:32:54] <shka> xD
[20:33:06] <shka> selwyn: Elite Force!
[20:33:45] <aeth> the best (unofficial, unlicensed, clearly-inspired) Star Trek game is probably FTL
[20:33:49] <shka> but it is just dump shooter 
[20:33:53] <shka> *dumb
[20:34:06] <aeth> https://en.wikipedia.org/wiki/FTL:_Faster_Than_Light
[20:34:26] <aeth> This does everything you'd want from a Star Trek game. You jump from star to star, encountering random events and doing ship-on-ship 1:1 duels.
[20:34:41] <aeth> while being small scale enough for your crew to matter
[20:34:57] <shka> Star Control has Star Trek feel to it
[20:35:04] <aeth> If it took place on a bridge instead of on a small spaceship, FTL would effectively just be Star Trek
[20:35:07] <shka> but that's old 
[20:36:06] <shka> there was also star trek away team which was tactical sort of thing
[20:39:16] *** Joins: Catie (~user@user/catie)
[20:49:12] <treflip> Ah, FTL is one of my favorite games :)
[20:51:49] <aeth> FTL is probably more consistent than Star Trek in its spaceship design, anyway
[20:52:16] <aeth> Star Trek is effectively just 1% bridge, 1% engineering, 98% jobs program to prevent massive unemployment
[20:52:52] <aeth> it's a fully automated ship where they could do everything with a handful of people (and after TOS, all on a Holodeck, too), but they don't
[20:54:50] <aeth> I criticized the Star Wars worldbuilding, but at least they don't explicitly state that their ships are 99.9999% automated afaik.
[20:55:23] <aeth> Star Trek really just needs the bridge crew to make human decisions without latency and that's about it.
[20:55:33] <selwyn> i suppose 'jobs for the boys' is something we can see irl
[21:01:43] <aeth> right, and that speaks for how much better Star Trek's world building is at building something that's believable
[21:02:06] <aeth> > 90% of the crew being unnecessary is obvious, and yet you can still justify it within the logic of the world being realistic
[21:02:20] <selwyn> picard's brother simply has fun on a farm in france iirc
[21:02:33] <aeth> and I wouldn't be surprised if DS9 actually does go into how the ships are unnecessarily large
[21:02:41] <aeth> because the Federation isn't used to war
[21:02:52] <aeth> luxury ships, really
[21:03:00] <aeth> why not bring a city with you?
[21:03:37] <shka> aeth: yeah, Defiant of DS9 is a compact ship with big guns 
[21:03:49] <aeth> right, and cloaking
[21:03:56] <aeth> so it addresses "why don't they just have cloaking?" too
[21:04:12] <shka> cloaking is not a feature of a design
[21:04:16] <shka> just a custom modification
[21:04:25] <aeth> so even pre-web, they were addressing common complaints. Perhaps usenet complaints
[21:04:32] <shka> with a Romulan deal
[21:04:46] <selwyn> imo nerds complaining did a lot of damage
[21:05:30] <aeth> As for Star Wars... assuming similar or even superior levels of automation in Star Wars, the large crews on imperial ships would probably just be a prestige thing.
[21:05:32] *** Quits: kevingal (~quassel@2001:770:c0:401:c8a4:cdd6:e6cc:d72f) (Remote host closed the connection)
[21:05:47] <aeth> I can totally believe that "This ship has 10,000 crew" would be a vanity thing in a world where there are just so many people
[21:06:17] <aeth> no clue why the rebellion would also have similarly crewed ships, if they do
[21:06:37] <selwyn> https://www.youtube.com/watch?v=sVgVB3qsySQ
[21:06:38] -ixelp- A wizard did it - YouTube
[21:07:11] <shka> aeth: the thing with federation starships is that they are built to serve for a century at least
[21:07:32] <aeth> a clear sign of technological stagnation :-p
[21:07:49] <aeth> might explain why the entire ship isn't a Holodeck, though. They probably retrofit one into a pre-Holodeck design.
[21:07:54] <selwyn> they are building the new underground stations here to last 100 years
[21:07:59] <selwyn> idk how you do that
[21:08:06] <shka> well, enterprise D had simply a lot of free space for future upgrades
[21:08:11] <shka> whole decks in fact
[21:08:35] <aeth> in Star Trek, the only thing that you'd need to not have be a Holodeck is an emergency secondary bridge, for if the Holodeck was disabled/damaged.
[21:08:43] <aeth> s/have be/have as/
[21:09:23] <shka> so i would say that huge starships in this universe have some justification
[21:09:38] <shka> also, for diplomatic mission, having something large is a flex 
[21:10:17] <aeth> well, considering that they can be used to evacuate entire planets (assuming a small, not very urban population), the size makes sense
[21:10:25] <shka> anyway, there are problems in star trek and contradiction but whatever 
[21:10:49] <shka> i am here for the stories
[21:11:11] <aeth> right, the best episodes had nothing to do with the greater worldbuilding, story arcs, etc.
[21:11:19] <aeth> usually they just focused on something very small scale
[21:11:52] <aeth> and you can't really see that in TV shows today because they're all designed with their seasons as 10 hour movies to be binged watched at once on streaming services
[21:12:25] <aeth> but that's where the character development happened
[21:14:42] <shka> as for the modern TV i like "Good Place" 
[21:15:00] <shka> not SF, but i highly recommend it
[21:17:28] <selwyn> sigh
[21:17:39] <selwyn> i just barely tested positive
[21:17:58] <shka> selwyn: weee, happy new covid!
[21:18:02] <selwyn> so i will be watching a lot more tv in the immediate future
[21:18:09] <selwyn> happy to take tng recommendations
[21:19:32] <shka> i actually prefer DS9 ;-)
[21:20:04] * gilberth is surprise about the lengthy Star Trek and Star Wars discussion he unintentionally triggered.
[21:20:20] <selwyn> i feel i triggered it
[21:20:25] <shka> gilberth: this is IRC man
[21:20:27] <selwyn> anyway, many fans here
[21:21:03] <gilberth> shka: Yes, and I love it that we discuss all sorts of things at our cozy café.
[21:22:17] <shka> need to work out, see ya tomorrow
[21:22:24] <selwyn> what are you going to do
[21:28:31] <Aurora_v_kosmose> selwyn | they are building the new underground stations here to last 100 years | Some pretty interesting engineering & redundancy engineering.
[21:29:25] <selwyn> it certainly takes a long time
[21:29:36] <selwyn> doesn't it make it very difficult to do upgrades if they are built to last?
[21:29:45] *** Joins: aeth_ (~aeth@user/aeth)
[21:29:45] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[21:29:48] *** aeth_ is now known as aeth
[21:29:55] <Aurora_v_kosmose> selwyn: They have to be built with maintenance in mind.
[21:30:14] <Aurora_v_kosmose> 100 years without maintenance is a lot harder and more expensive to build than 100 with maintenance.
[21:30:33] <selwyn> ok
[21:32:39] <Aurora_v_kosmose> It's bit how you've got ships that are still usable after a century. They're built to last, but without maintenance they'd most definitely not still be floating.
[21:46:09] <epony> not always ;-) especially when the crew are not fed well and use the ship as a wreck to shove somewhere as an act of naval terrorism and insurance scams
[21:46:27] <epony> Turkish ships do that kind of shit
[21:47:17] <Aurora_v_kosmose> Well yeah, gross misuse will generally lead to expected service guarantees not holding.
[21:48:52] <epony> as for sci-fi and other fiction film works, my opinion is that previous decades films were done with more attention to the script and roles and the ethical and technical details, and modern ones are glorified pilot episodes of serials with more noise and flash but less value in the story, acting and consistency
[21:50:44] <epony> books and scripts are stories well told (and comment on the realities of the respective time period of the texts)
[21:53:00] <epony> I prefer the 80ies and 90ies sci-fi and early new century texts
[22:04:21] *** Quits: treflip (~user@user/treflip) (Quit: good night!)
[22:07:32] *** Joins: jmorrison_ (~jm@pool-74-104-177-164.bstnma.fios.verizon.net)
[22:08:34] <shka> B-52s are supposed to be kept in service until 2050s iirc
[22:08:47] <shka> and they were built in the 60s
[22:20:34] <gilberth> In LISP m-expressions symbols come as either evaluated or unevaluated. 'FOO' is a a quoted symbol, while 'foo' is the lexical 'foo'. This reminds me of PostScript where each value is tagged with an evaluate-me flag. In Postscript 'foo' is to evaluate 'foo' while '/foo' is the quoted foo. The '/' is not syntactic sugar like the single quote in Lisp, but a prefix for the reader to mark that 'foo' as not evaluate-me.
[22:27:52] <epony> in shell, \ prepended stops expansion too
[22:28:49] <epony> sigils indicate the declaration vs the value (usage) there too
[22:32:09] * epony thinks Lisps collect features from all decades and host these in reconcilliation
[22:32:34] <epony> (or pilot these)
[22:36:39] <epony> so LISP are "all programming languages" and "none of any of them" at the same time
[22:40:38] <epony> there is no counterindication why it can not be the century programming languages scriptorium
[22:45:16] <Catie> 20
[22:45:25] <Catie> Hhhh sorry wrong window
[22:52:48] <White_Flame> s/Lisps collect features/Lisps invented features/
[22:53:56] *** Joins: lisp123 (~lisp123@5.30.23.247)
[23:09:08] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[23:22:13] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[23:24:01] *** Joins: aeth (~aeth@user/aeth)
[23:30:10] *** Joins: ln43 (~ln43@user/ln43)
[23:30:35] <ln43> Hi all ... !
[23:31:01] <selwyn> hi
[23:31:04] <sham1> ih
[23:31:33] <ln43> hello selwyn, sham1
[23:33:18] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[23:35:25] <ln43> so someone plan to send me to the Java island for a trip the next year : /
[23:36:15] <sham1> Remember to take with you some armed bears. Either that or square brackets
[23:39:39] <ln43> yes but being a tourist i will have few concerns...
[23:41:42] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 260 seconds)
[23:51:25] <White_Flame> https://shaminospage.blogspot.com/2015/09/heraclitean-river-why-two-spaces-after.html
[23:51:26] -ixelp- Shamino's page: Heraclitean River: Why two spaces after a period isn't wrong (or, the lies typographers tell about histo [...]
[23:52:20] <White_Flame> hmm, which actually just cites https://web.archive.org/web/20171217060354/http://www.heracliteanriver.com/?p=324
[23:52:22] -ixelp- Page Under Construction
[23:54:34] <selwyn> interesting
[23:55:32] <White_Flame> oh wait, wrong channel... :-P
[23:55:46] <selwyn> well i enjoyed it
[23:55:48] <Catie> It's still an interesting read!
[23:55:49] <ln43> sometimes i use only two dots like this .. instead of 3 ...
[23:55:52] <selwyn> is there a typography channel?
[23:56:41] <ln43> Maybe yes!.
[23:58:21] <Catie> The sentence "Or even worse, dare to suggest that web pages should respect a user's personal font/size preferences (as configured in his web browser) and not force a style that may not be readable on the user's device." is particularly funny because the website on which it was written renders too wide for my half-width browser window
