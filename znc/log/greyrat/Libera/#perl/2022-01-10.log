[00:00:33] *** Quits: fstd (~fstd@xdsl-87-78-21-185.nc.de) (Read error: Connection reset by peer)
[00:00:40] *** Joins: fstd (~fstd@xdsl-87-78-21-185.nc.de)
[00:01:37] *** Quits: japh (~scp1@user/japh) (Remote host closed the connection)
[00:04:27] *** Joins: ouestbil1ie (~gallup@142.169.33.81)
[00:05:43] *** Joins: asdflkj_sh (asdflkj@bsdforall.org)
[00:09:38] *** Quits: ouestbillie (~gallup@modemcable053.204-20-96.mc.videotron.ca) (Quit: Lost terminal)
[00:11:29] *** Joins: pj (~pj@ghettoforge/pj)
[00:11:49] * GumbyPAN CPAN Upload: OpenGL-GLUT-0.72 by ETJ https://metacpan.org/release/ETJ/OpenGL-GLUT-0.72
[00:12:58] *** Quits: EGD_ (~egd@user/egd) ()
[00:14:16] *** Quits: ouestbil1ie (~gallup@142.169.33.81) (Ping timeout: 256 seconds)
[00:33:53] <ether> you can utf8-decode a json string first, because you'll still get valid json that you can then json-decode, but you should let the json decoder do it all for you
[00:34:10] <ether> so if you're reading from a file, read it raw, and then use the utf8=>1 option on the json decoder.
[00:34:22] <Yaakov> I like UTF-8.
[00:36:52] * GumbyPAN CPAN Upload: Syntax-Construct-1.023 by CHOROBA https://metacpan.org/release/CHOROBA/Syntax-Construct-1.023
[00:43:01] *** Quits: veesh (~veesh@5.28.155.48) (Ping timeout: 256 seconds)
[00:43:09] *** Joins: veesh (~veesh@5.28.155.48)
[00:44:57] *** Joins: Guest60 (~Guest60@2603:900a:1905:d68b:6904:9d27:d6de:b42d)
[00:45:22] *** Parts: Guest60 (~Guest60@2603:900a:1905:d68b:6904:9d27:d6de:b42d) ()
[00:47:04] <aquanight> hmm
[00:47:27] <aquanight> ether: ultimately I'm controlling encode *and* decode so I wanted to be sure if it mattered which layer
[00:48:34] <aquanight> perlbot: sweval use JSON::PP; my $obj = [8 .. 13]; open my $fd, ">", \(my $out); my $js = JSON::PP->new->utf8; $fd->print($js->encode($obj)); close $fd; [ $out ]
[00:48:36] <perlbot> aquanight: ["[8,9,10,11,12,13]"]
[00:52:25] *** Quits: magla (~gelignite@55d47b01.access.ecotel.net) (Quit: Stay safe!)
[00:56:17] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 240 seconds)
[00:57:57] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 240 seconds)
[01:00:58] <aquanight> what
[01:01:26] <aquanight> sweval: my $x = 42; if ($x) { say "Hi"; goto X; } else { say "No"; X: say "unless..." }
[01:01:28] <perlbot> aquanight: Hi unless... 
[01:02:14] <aquanight> sweval: my $x = 42; if ($x) { say "Hi"; goto X; } else { say "No"; X: my $q = 7; say "unless..."; }
[01:02:15] <perlbot> aquanight: Hi unless... 
[01:02:19] <aquanight> sweval: my $x = 42; if (1) { say "Hi"; goto X; } else { say "No"; X: my $q = 7; say "unless..."; }
[01:02:19] <daemon> so goto does not care about scope
[01:02:21] <perlbot> aquanight: Hi ERROR: Can't find label X at (IRC) line 1. 
[01:02:30] <aquanight> why?
[01:02:37] <aquanight> (the third one)
[01:02:40] <aquanight> why does it fail
[01:02:43] <daemon> hmm
[01:02:49] <aquanight> does if (<constant>) mean the entire block gets yeeted?
[01:03:16] <daemon> now I do not know this, this is perlcore stuff
[01:03:24] <daemon> but what I would assume is that if(1) { } 
[01:03:26] <ilmari> it still gets parsed and compiled, and label resolution happens then
[01:03:30] <daemon> is processed before the if(variable)
[01:03:56] <aquanight> perl -MO=Concise confirms the entire branch gets yeeted
[01:04:17] <aquanight> that's.... not great for me.
[01:05:04] <ilmari> sorry, I misread. yes, constant folding eliminates the else branch without checking that there is no goto into it
[01:05:13] <aquanight> fuuuuuck.
[01:05:20] <aquanight> looks like I need a new plan
[01:05:31] <aquanight> then again
[01:05:31] <ilmari> make the condition non-constant?
[01:05:48] <aquanight> why the hell am I using this condition in the first place. The condition is literally "can I load JSON::PP"
[01:05:54] <aquanight> it's a core module, it shouldn't fail...
[01:07:19] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:07:48] <aquanight> of course
[01:09:11] <aquanight> ugh. I don't like using 'goto's like this
[01:09:53] <aquanight> but probably the one time I think they're objectively better than an if ($do_it_the_other_way) bullshit
[01:10:58] <aquanight> LeoNerd: goto with lexically valid label should just rethread the optree to go straight to that label.
[01:11:15] <ilmari> aquanight: but why are you gotoing into the else branch instead of moving the code to after the whole if/else block?
[01:11:19] <aquanight> though
[01:11:55] * GumbyPAN CPAN Upload: Syntax-Construct-1.024 by CHOROBA https://metacpan.org/release/CHOROBA/Syntax-Construct-1.024
[01:11:56] <aquanight> ilmari: I was working on some code to upgrade a config file from a bullshit mickey-moused format to a proper JSON
[01:12:43] <aquanight> the reading code would need to determine if JSON is loadable, and if so, attempt to load a json config, and if there isn't one, fallback to the legacy config so it can be upgraded automagically
[01:13:16] <ilmari> put it in a function?
[01:13:34] <aquanight> the idea was to if (CAN_JSON) { open "<config.json" or goto LEGACY_CONFIG; ... } else { LEGACY_CONFIG: open "<legacy-config"; ... }
[01:13:54] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[01:14:16] <ilmari> if (HAS_JSON and json_config_config_exists()) { load_json() } else { load_legacy() }
[01:14:17] <aquanight> where CAN_JSON is the result of: BEGIN { my $can_json = 0; eval { require JSON::PP; $can_json = 1; }; require constant; constant->import(CAN_JSON => $can_json); }
[01:14:27] <aquanight> ... yeah I could've done it that way
[01:14:50] <aquanight> but I'm not generally a fan of 'does_file_exist(); open "file";'
[01:15:00] <aquanight> my preferred way to test if a file exists and is readable is to just fucking open it
[01:15:11] <aquanight> especially if I intend to ....... read it.
[01:15:23] <ilmari> if (HAS_JSON) { load_json_confi() or load_legacy_config() } else { load_legacy_config() }
[01:15:41] <aquanight> and I dislike repetition.
[01:15:47] <ilmari> that's what functions are for
[01:15:50] <aquanight> yes
[01:15:56] <aquanight> but even the function call itself is repeated
[01:16:00] <ilmari> better than goto
[01:16:01] <aquanight> and I could avoid it with a well-placed goto
[01:16:11] <aquanight> except fucking static cannabilization of if branches
[01:16:17] <ilmari> also, has the benefit of actually working...
[01:16:29] <aquanight> but it doesn't really matter because I don't need the fancy HAS_JSON nonsense to begin with
[01:16:33] <aquanight> because JSON::PP is a core module
[01:16:38] <vague> Make load_json_config call load_legacy_config if there is a problem
[01:16:42] <aquanight> if it doesn't exist for some strange reason your distro is bad and they should feel bad
[01:16:57] <vague> Hide the problem!
[01:17:06] <choroba> it might get removed from the core in the future, though
[01:17:13] <aquanight> choroba: wat
[01:17:34] <choroba> CGI was once in core, too
[01:17:36] <ilmari> choroba: 1) not without two releases of deprecation warnings. and 2) unlikely
[01:17:41] <ilmari> that's what dependencies are for
[01:17:50] <ilmari> (as in declaring them)
[01:17:54] <aquanight> vague: so new solution is now: { open "<config.json" or goto LEGACY; ...; goto CONF_LOADED; } { LEGACY: open "<legacy"; } CONF_LOADED:
[01:18:13] <aquanight> I hate it, but I like it only slightly better than the alternative
[01:18:20] <ilmari> eww.
[01:18:28] <ilmari> just use functions
[01:18:46] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[01:19:32] <aquanight> this irssi script is already 35K and 1K lines. I'm starting to look for ways to slim it down.
[01:20:38] <ilmari> if (open '<config.json')) { … } elsif (open '<legacy.conf')  { ... } else { # default config }
[01:20:49] <LeoNerd> aquanight: Yeah; it always annoys me that  while(1) {...}  loops really are threaded like that shape at compiletime. but `goto` is only determined at runtime
[01:20:55] <ilmari> structured programming has bene invented
[01:21:03] <ilmari> *been
[01:21:04] <LeoNerd> I think in practice it doesn't really matter, beacuse gotos are -suuuuper- rare in Perl
[01:21:43] <LeoNerd> I think I may have one on CPAN. A single one, across ~220 distros and thousands of actual .pm files
[01:21:56] <aquanight> LeoNerd: I was of the impression that if your goto target was within the same sub it's practically impossible for the goto to end up going elsewhere?
[01:22:07] <LeoNerd> foreach(THINGS) { want thing and goto done; } die "Didn't find a thing I liked"; done: ...
[01:22:13] <LeoNerd> ^-- that is the only shape I've ever used goto in
[01:22:32] <aquanight> people are, for some reason, hardwired to avoid goto like the plague
[01:22:42] <ilmari> because it makes code hard to reason about
[01:22:43] <aquanight> and it's understandable it can create some serious spaghetti
[01:23:01] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[01:23:10] *** Joins: forbes-award (~forbes@36.68.41.161)
[01:23:13] <aquanight> personally, my answer is: name your goto targets good enough and it'll document itself
[01:23:34] <LeoNerd> Yah mine are prettymuch only ever named `done`, or `retry` or somesuch name
[01:23:36] * forbes-award hi all anyone wanna chat for 0day chat , come to efnet channel #holyhacker , anyone need to be awarded at forbes magazine come there too.
[01:24:24] <aquanight> ilmari: hmm. That's fair actually I hadn't thought of the 'open in the conditional' approach.
[01:24:31] * forbes-award hi all anyone wanna chat for 0day chat , come to efnet channel #holyhacker , anyone need to be awarded at forbes magazine come there too.
[01:24:46] <aquanight> and with that I can still use a crossbranch goto if I need to since it'll actually exist in that case
[01:24:49] <aquanight> perlbot: ops
[01:24:50] <perlbot> aquanight: thrig paladin kitchen bod pink_mist Chris62vw khisanth tybalt89 simcop2387 sili tag BinGOs beth mst dhoss hobbs jaye tm604 geck Botje | /raw stats p | /msg ChanServ access #perl list
[01:24:53] <aquanight> ...
[01:25:01] *** ChanServ sets mode: +o ilmari
[01:25:02] <aquanight> that... was not what I was hoping it would do
[01:25:04] *** ilmari sets mode: +b *!*forbes@36.68.41.*
[01:25:04] *** forbes-award was kicked by ilmari (forbes-award)
[01:25:14] *** ilmari sets mode: -o ilmari
[01:25:24] <aquanight> ... and I have no idea why I expected it would do anything else.
[01:26:02] *** Joins: aspic (~shifty~~~@ppp121-44-126-139.syd-gls-har-bras39.tpg.internode.on.net)
[01:26:03] <ilmari> LeoNerd: then there's fun with local like https://metacpan.org/dist/DBIx-Class-ParameterizedJoinHack/source/lib/DBIx/Class/ResultSet/ParameterizedJoinHack.pm#L45-64
[01:26:04] <Paperbot_> Link title(s): [ lib/DBIx/Class/ResultSet/ParameterizedJoinHack.pm - metacpan.org ]
[01:27:44] <aquanight> ilmari: okay what the actual frick is that doing
[01:28:03] <ilmari> aquanight: localising a dynamic set of keys in a hash
[01:30:17] <aquanight> the only thing keeping me from trying to conceive of a non-goto way to do that is the fact that it's the non-toplevel hash that's parameterized
[01:31:08] <aquanight> wait hmm
[01:31:11] *** Quits: aspic (~shifty~~~@ppp121-44-126-139.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 250 seconds)
[01:31:30] <aquanight> sweval: our $x = 4; sub test { local $_[0] = 17; say $x; } test $x; 
[01:31:32] <perlbot> aquanight: 4 
[01:31:34] <aquanight> damn
[01:31:53] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[01:32:30] <aquanight> even if you could refalias it doesn't matter, local breaks the aliasing
[01:32:40] <ilmari> aquanight: as described in the comment, the problem is that looping over the parameters that need localising would create a scope for each iteration
[01:33:02] <aquanight> ilmari: if it was topmost you could local $store->@{keys %$params} = ...
[01:34:25] *** Joins: forbes-award-- (~forbes@36.83.187.141)
[01:34:35] *** Quits: forbes-award-- (~forbes@36.83.187.141) (K-Lined)
[01:34:36] <aquanight> ... and he's back
[01:34:38] <aquanight> or was
[01:35:04] <aquanight> have we seen that clown before?
[01:35:36] <aquanight> I feel like I've seen that nick before.
[01:35:42] <aquanight> anyway
[01:35:44] <ilmari> who what now? I have joins/parts/quits /ignored
[01:36:01] <aquanight> that bot you nuked
[01:36:14] <aquanight> he came back for like 11 seconds bot got squashed
[01:36:49] <aquanight> ilmari: so if I'm understanding correctly, 'local' doesn't get reversed if you 'goto' within the {}
[01:37:28] <aquanight> but this is the thing I was also asking about
[01:37:42] <aquanight> when it's compiled that goto is a real instruction with runtime location of the Loop label
[01:37:45] <aquanight> and it doesn't need to be
[01:38:08] <aquanight> it could've just threaded the "return ... unless..." into the op_next of "local $store-> ..."
[01:38:19] <aquanight> because I can't conceive of any way that goto could end up retargeted at runtime
[01:38:49] <aquanight> nothing short of savage optree surgery of &call_with_parameters itself
[01:40:02] * ilmari really doesn't care about that level of optimisation for something as rarely-used as goto
[01:41:57] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[01:46:29] *** Joins: sslfree- (~sslfree@125.165.107.55)
[01:46:54] *** Quits: sslfree- (~sslfree@125.165.107.55) (K-Lined)
[01:47:02] *** ChanServ sets mode: +o simcop2387
[01:47:21] <simcop2387> i'll leave mine around for a bit.  good chance he's going to sneak back in before  kline gets him
[01:47:48] <aquanight> eh the last two have been nailed pretty quick so far
[01:51:10] *** Quits: martinus__ (~martin@171.25.202.77.rev.sfr.net) (Ping timeout: 256 seconds)
[02:00:11] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[02:01:52] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[02:03:59] *** Joins: whynot (~whynot@37.73.43.21)
[02:06:28] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 256 seconds)
[02:09:18] <arthurpbs> Is there another Trace module, other than Devel::Trace ? I mean I am searching how I would run perl, as bash with set -x
[02:18:44] <aquanight> sweval: if (my $x = 42) { say "foo"; } elsif (my $x = 37) { ... }
[02:18:46] <perlbot> aquanight: "my" variable $x masks earlier declaration in same scope at (IRC) line 1. Found = in conditional, should be == at (IRC) line 1. foo 
[02:18:51] <aquanight> dammit frickin if scoping
[02:20:05] <aquanight> sweval: my $fd; if (open $fd, "<asferwoifhgwoeig") { ... } [ $fd ]
[02:20:06] <perlbot> aquanight: [\*{"::\$fd"}]
[02:20:17] *** Quits: todd_ (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[02:24:48] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[02:32:40] *** Quits: pizdets_ (~pizdets@183.182.115.92) (Ping timeout: 250 seconds)
[02:33:50] *** Joins: pizdets (~pizdets@183.182.111.169)
[02:34:31] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[02:34:54] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[02:38:28] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[02:43:45] *** Joins: EvanCarroll (~ecarroll@c-76-30-110-244.hsd1.tx.comcast.net)
[02:49:48] *** Joins: kensanata (~user@user/kensanata)
[02:49:49] *** Quits: kensanata (~user@user/kensanata) (Read error: Connection reset by peer)
[02:56:40] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Remote host closed the connection)
[02:57:59] *** Joins: rgrinberg (~textual@177.246.219.153)
[03:09:36] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[03:12:12] <aindilis> anyone know of dynamic pricing algorithms in Perl?
[03:13:50] <ether> such a thing is unlikely to be generic enough to be worthy of publishing to cpan
[03:14:01] <aindilis> true
[03:14:11] <ether> usually companies keep that sort of thing a closely-guarded secret, because it's how they profit
[03:15:09] <aindilis> well I'm using it to adjust the price of rewards for finishing work, like drinking a pop.
[03:16:12] <aindilis> trying to gate off all dopamine hits and use them like a carrot to encourage completion of tasks, to enhance self-discipline
[03:18:17] <ether> I"m sure you can find some prior art in some psychology papers
[03:18:25] <aindilis> cool
[03:18:51] <aindilis> I asked on economics and they said it didn't work.  but I think that's in general and not wrt my use case
[03:19:00] <aindilis> which is just to get myself off my ass
[03:19:27] <aindilis> I also belabored the point on prolog
[03:19:40] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[03:19:43] <aindilis> I was recommended "exponential backoff", but that seems to be for delays
[03:19:56] <aindilis> Algorithm::Backoff::Exponential
[03:20:46] <aindilis> so I'll probably just implement some no-where-near-optimal thing in perl and call it a day, best not to waste too much time on it
[03:23:49] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[03:28:01] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[03:28:04] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[03:28:43] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Quit: Lost terminal)
[03:37:21] *** Joins: aspic (~shifty~~~@ppp121-44-126-139.syd-gls-har-bras39.tpg.internode.on.net)
[03:55:54] *** Joins: frost (~frost@user/frost)
[04:06:08] *** Quits: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617) (Remote host closed the connection)
[04:06:13] *** Quits: Kimmono3 (~Kimmono@195-159-198-100.customer.powertech.no) (Ping timeout: 240 seconds)
[04:07:21] *** Joins: tybalt89 (~rick@2600:8800:8d00:8100:2e0:4cff:fe68:617)
[04:07:49] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[04:16:27] *** Joins: Kimmono (~Kimmono@195-159-198-100.customer.powertech.no)
[04:20:52] *** Joins: frost (~frost@user/frost)
[04:23:38] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[04:27:58] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[04:28:07] *** Quits: rgrinberg (~textual@177.246.219.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:29:17] *** Quits: clscott (~clscott@bras-base-otwaon0150w-grc-07-184-147-147-68.dsl.bell.ca) (Ping timeout: 240 seconds)
[04:34:43] *** Joins: gallup (~gallup@192-222-138-215.qc.cable.ebox.net)
[04:34:50] *** Quits: gallup (~gallup@192-222-138-215.qc.cable.ebox.net) (Client Quit)
[04:34:58] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Quit: leaving)
[04:36:15] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[04:42:36] *** Quits: aspic (~shifty~~~@ppp121-44-126-139.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[04:43:00] *** Joins: aspic (~shifty~~~@ppp121-44-124-10.syd-gls-har-bras39.tpg.internode.on.net)
[04:48:32] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[04:50:57] *** Quits: aspic (~shifty~~~@ppp121-44-124-10.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 250 seconds)
[04:51:17] *** Joins: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net)
[04:55:53] *** Joins: krismatrix (~krismatri@38.80.149.51)
[04:56:18] * GumbyPAN CPAN Upload: SPVM-0.9114 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-0.9114
[04:56:27] *** Quits: krismatrix (~krismatri@38.80.149.51) (Client Quit)
[05:00:58] *** Joins: krismatrix (~krismatri@38.80.149.51)
[05:03:08] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[05:05:49] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 240 seconds)
[05:11:09] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:12:13] *** Quits: Pali (~pali@user/pali) (Ping timeout: 240 seconds)
[05:15:01] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 256 seconds)
[05:15:22] *** Quits: whynot (~whynot@37.73.43.21) (Quit: leaving)
[05:28:36] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[05:34:31] *** Joins: frost (~frost@user/frost)
[05:36:03] *** Joins: gast0n (~g4570n@user/gast0n)
[05:40:06] *** Quits: Su-Shee (~Susanne@p4ff49740.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:41:26] *** Joins: Su-Shee (~Susanne@p50894c29.dip0.t-ipconnect.de)
[05:57:36] *** Joins: skraito (~skraito@user/skraito)
[05:57:45] *** Quits: skraito (~skraito@user/skraito) (K-Lined)
[05:57:54] *** Joins: krismatrix (~krismatri@38.80.149.51)
[05:59:22] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[06:07:19] *** Joins: frost (~frost@user/frost)
[06:20:11] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[06:22:32] *** Quits: krismatrix (~krismatri@38.80.149.51) (Remote host closed the connection)
[06:22:51] *** Joins: krismatrix (~krismatri@38.80.149.51)
[06:24:40] *** Joins: frost (~frost@user/frost)
[06:24:46] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:25:09] *** Quits: fstd (~fstd@xdsl-87-78-21-185.nc.de) (Read error: Connection reset by peer)
[06:25:16] *** Joins: fstd (~fstd@xdsl-87-78-21-185.nc.de)
[06:26:17] *** Quits: R2robot (~R2robot@user/r2robot) (Ping timeout: 240 seconds)
[06:27:08] *** Quits: EvanCarroll (~ecarroll@c-76-30-110-244.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[06:27:42] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 256 seconds)
[06:30:05] <ology> Mojo::File++
[06:35:57] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[06:44:16] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:44:16] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:44:16] *** finn_elija is now known as FinnElija
[06:48:10] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Quit: WeeChat 2.8)
[06:54:00] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[06:54:57] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[06:57:08] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[06:57:33] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:02:59] *** Quits: PancakeMatsuri (~textual@222-154-148-93-fibre.sparkbb.co.nz) (Quit: Textual IRC Client: www.textualapp.com)
[07:03:31] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:03:36] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:12:07] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:12:38] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:18:58] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:19:26] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:26:33] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:29:25] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 240 seconds)
[07:29:49] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:30:19] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:36:34] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:37:07] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:37:47] <genio> leont: keeping the bad design of Digest::Bcrypt was not that fun
[07:39:52] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[07:40:59] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[07:44:27] *** Joins: Shortstop (~Shortstop@70.126.240.148)
[07:44:39] <Shortstop> hey there, can anyone help me figure out how to update a Perl module on Slacko Puppy Linux 64 bit?
[07:44:55] <Shortstop> I need to somehow add this module to my Perl installation: https://metacpan.org/dist/perl/source/lib/Class/Struct.pm
[07:44:55] <Paperbot_> Link title(s): [ lib/Class/Struct.pm - metacpan.org ]
[07:45:00] <Shortstop> This is needed for Emacs apparently
[07:57:02] <xenu> Shortstop: it's very unlikely you need yo update it, it's a core module, it comes with perl
[07:57:22] <xenu> and it isn't on cpan and because of that it isn't updatable
[07:57:45] <xenu> also it has barely changed during the past 20 years or so
[07:58:33] <xenu> why do you think you need to update it?
[08:00:02] <Grinnz> if you don't have it, your perl installation is not complete and you need to fix that
[08:00:50] <Shortstop> I'm getting this particular error when attempting to compile Emacs:
[08:00:51] <Shortstop> https://bpa.st/S77Q
[08:00:52] <Paperbot_> Link title(s): [ View paste S77Q ]
[08:00:56] <Shortstop> xenu Grinnz
[08:01:15] <Shortstop> that's why I wanted to see how to update it. Apparently I'm using Perl 5 Version 25
[08:01:26] <Shortstop> Perl 5 Version 22, sorry*
[08:03:56] <Grinnz> the perl your autoconf is using appears to be broken
[08:04:31] <Grinnz> i don't know that distro of linux, is the perl a binary package?
[08:06:11] <Shortstop> not sure
[08:07:17] *** Quits: Martchus (~martchus@2a01:c22:7625:3900:d250:99ff:fe49:3cce) (Ping timeout: 240 seconds)
[08:07:40] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:07:46] <Grinnz> judging by the lib locations, it looks debian based at a guess?
[08:07:47] *** Joins: Martchus (~martchus@2a01:c22:76ed:2200:d250:99ff:fe49:3cce)
[08:08:21] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:08:25] *** Quits: tbcr (~tbcr@107.13.189.161) (Ping timeout: 256 seconds)
[08:08:33] *** Joins: tbcr_ (~tbcr@107.13.189.161)
[08:10:43] <Shortstop> its Slackware based
[08:11:38] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:11:45] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:15:38] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:2009:c7d3:533:666c)
[08:15:46] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:2009:c7d3:533:666c) (Excess Flood)
[08:16:11] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[08:16:39] * gordonfish remembers Slackware from way back
[08:21:36] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:23:11] *** Parts: Shortstop (~Shortstop@70.126.240.148) ()
[08:26:08] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[08:35:03] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Ping timeout: 256 seconds)
[08:45:47] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:46:04] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:46:43] * GumbyPAN CPAN Upload: MarpaX-ESLIF-6.0.11 by JDDPAUSE https://metacpan.org/release/JDDPAUSE/MarpaX-ESLIF-6.0.11
[08:52:40] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:52:49] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:55:34] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:55:41] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[09:06:50] *** Joins: mattil (~mattil@dy56vs7sqcwhj27c2836t-4.rev.dnainternet.fi)
[09:07:29] *** Quits: mattil (~mattil@dy56vs7sqcwhj27c2836t-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:07:57] *** Joins: mattil (~mattil@dy56vs7sqcwhj27c2836t-4.rev.dnainternet.fi)
[09:10:27] *** Quits: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com) (Quit: leaving)
[09:12:10] *** Joins: R2robot (~R2robot@user/r2robot)
[09:17:33] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 256 seconds)
[09:21:25] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 240 seconds)
[09:22:34] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:24:26] *** Quits: mattil (~mattil@dy56vs7sqcwhj27c2836t-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:24:55] *** Joins: mattil (~mattil@dy56vs7sqcwhj27c2836t-4.rev.dnainternet.fi)
[09:28:32] *** Joins: mixfix41 (~homefame@user/mixfix41)
[09:28:37] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[09:28:37] *** Quits: diskin (~diskin@185.49.242.51) (Killed (zirconium.libera.chat (Nickname regained by services)))
[09:28:37] *** diskin_ is now known as diskin
[09:28:57] *** Quits: mattil (~mattil@dy56vs7sqcwhj27c2836t-4.rev.dnainternet.fi) (Ping timeout: 240 seconds)
[09:29:42] *** Joins: mattil (~mattil@dy56vs7sqcwhj27c2836t-4.rev.dnainternet.fi)
[09:29:46] *** Quits: mattil (~mattil@dy56vs7sqcwhj27c2836t-4.rev.dnainternet.fi) (Read error: Connection reset by peer)
[09:30:23] *** Joins: mattil (~mattil@dy56vs7sqcwhj27c2836t-4.rev.dnainternet.fi)
[09:32:57] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[09:33:06] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[09:34:00] *** Quits: mattil (~mattil@dy56vs7sqcwhj27c2836t-4.rev.dnainternet.fi) (Remote host closed the connection)
[09:34:29] *** Joins: mattil (~mattil@dy56vs7sqcwhj27c2836t-4.rev.dnainternet.fi)
[09:38:37] *** Quits: mattil (~mattil@dy56vs7sqcwhj27c2836t-4.rev.dnainternet.fi) (Ping timeout: 240 seconds)
[09:51:15] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:51:42] *** Quits: randir (~randir@196.149.61.168) (Ping timeout: 256 seconds)
[09:52:09] *** Quits: pizdets (~pizdets@183.182.111.169) (Read error: Connection reset by peer)
[09:52:31] *** Joins: pizdets (~pizdets@183.182.111.169)
[09:54:32] *** Quits: tnez (~el@user/tnez) (Quit: %bye%)
[09:55:02] *** Joins: tnez (~el@user/tnez)
[09:58:21] *** Quits: tnez (~el@user/tnez) (Client Quit)
[09:59:22] *** Joins: japh (~scp1@user/japh)
[10:00:43] *** Joins: tnez (~el@user/tnez)
[10:01:10] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[10:01:31] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:04:09] *** Joins: llh (~llh@user/llh)
[10:04:44] *** Quits: japh (~scp1@user/japh) (Ping timeout: 256 seconds)
[10:10:08] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[10:10:28] *** Joins: tejr (~tejr@user/tejr)
[10:13:46] *** Joins: japh (~scp1@user/japh)
[10:16:20] *** Joins: mexen (uid495612@user/mexen)
[10:16:37] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:4d90:2e15:46ab:afd6) (Ping timeout: 240 seconds)
[10:20:59] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:21:35] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[10:24:01] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:24:07] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:26:02] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:26:17] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:31:01] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[10:33:21] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:33:42] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[10:40:10] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:42:34] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:45:10] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[10:57:56] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[10:58:08] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:58:59] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:59:23] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:59:24] *** Joins: art1 (~romeyke@p200300ccdf0541007b5eba8c924825b2.dip0.t-ipconnect.de)
[10:59:55] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:01:57] * GumbyPAN CPAN Upload: Business-Fixflo-0.47 by LEEJO https://metacpan.org/release/LEEJO/Business-Fixflo-0.47
[11:04:41] *** A_Dragon is now known as RemoteHost
[11:05:38] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:06:07] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:06:07] *** Joins: frost (~frost@user/frost)
[11:07:22] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[11:14:21] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:14:35] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:16:22] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:17:23] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:26:23] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:26:48] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[11:39:30] *** Quits: frost (~frost@user/frost) (*.net *.split)
[11:39:30] *** Quits: art1 (~romeyke@p200300ccdf0541007b5eba8c924825b2.dip0.t-ipconnect.de) (*.net *.split)
[11:39:30] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (*.net *.split)
[11:39:30] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (*.net *.split)
[11:39:31] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (*.net *.split)
[11:39:31] *** Quits: mattil (~mattil@helsinki.portalify.com) (*.net *.split)
[11:39:31] *** Quits: mexen (uid495612@user/mexen) (*.net *.split)
[11:39:31] *** Quits: japh (~scp1@user/japh) (*.net *.split)
[11:39:31] *** Quits: llh (~llh@user/llh) (*.net *.split)
[11:39:31] *** Quits: pizdets (~pizdets@183.182.111.169) (*.net *.split)
[11:39:31] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (*.net *.split)
[11:39:31] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (*.net *.split)
[11:39:31] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (*.net *.split)
[11:39:31] *** Quits: veesh (~veesh@5.28.155.48) (*.net *.split)
[11:39:31] *** Quits: henry40408 (~henry4040@175.182.108.239) (*.net *.split)
[11:39:31] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (*.net *.split)
[11:39:31] *** Quits: jadesoturi (~jadesotur@user/jadesoturi) (*.net *.split)
[11:39:31] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (*.net *.split)
[11:39:31] *** Quits: justIrresolute (~justache@user/justache) (*.net *.split)
[11:39:31] *** Quits: HvszrStykp (~X@81.171.62.86) (*.net *.split)
[11:39:31] *** Quits: defjam (~eb0t@90.203.120.248) (*.net *.split)
[11:39:32] *** Quits: ueberall (ueberall_l@user/ueberall) (*.net *.split)
[11:39:32] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (*.net *.split)
[11:39:32] *** Quits: revhippie (~jdavis@097-081-163-065.res.spectrum.com) (*.net *.split)
[11:39:32] *** Quits: Kobaz (~libera@its.kobaz.net) (*.net *.split)
[11:39:32] *** Quits: Nowaker (~quassel@188.116.38.80) (*.net *.split)
[11:39:32] *** Quits: homura (uid398348@user/homura) (*.net *.split)
[11:39:32] *** Quits: Ovid___ (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (*.net *.split)
[11:39:32] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (*.net *.split)
[11:39:32] *** Quits: kaitlyn03 (~kaitlyn@user/kaitlyn) (*.net *.split)
[11:39:32] *** Quits: kolcon (~kolcon@v.kolouch.org) (*.net *.split)
[11:39:32] *** Quits: alex11 (~alex11@user/alex11) (*.net *.split)
[11:39:32] *** Quits: jayray (~jayray@user/jayray) (*.net *.split)
[11:39:32] *** Quits: vrurg (~vrurg@45.74.95.181) (*.net *.split)
[11:39:32] *** Quits: cation (cation@user/cation) (*.net *.split)
[11:39:32] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[11:39:32] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (*.net *.split)
[11:39:32] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[11:39:32] *** Quits: Furai (~Furai@furai.pl) (*.net *.split)
[11:39:32] *** Quits: Croran (~Croran@71.231.214.173) (*.net *.split)
[11:39:32] *** Quits: bkhl (~bkhl@user/bkhl) (*.net *.split)
[11:39:32] *** Quits: GeekRuthie (~geekruthi@li1062-152.members.linode.com) (*.net *.split)
[11:39:32] *** Quits: dngor (~abuse@104-136-128-209.biz.spectrum.com) (*.net *.split)
[11:39:32] *** Quits: eseyman (~manu@lfbn-idf1-1-532-49.w86-242.abo.wanadoo.fr) (*.net *.split)
[11:39:32] *** Quits: timlegge (~quassel@142.167.255.204) (*.net *.split)
[11:39:32] *** Quits: genio (sid223130@id-223130.ilkley.irccloud.com) (*.net *.split)
[11:39:32] *** Quits: perlmaros (~perlmaros@master.k-1.com) (*.net *.split)
[11:39:32] *** Quits: tejr (~tejr@user/tejr) (*.net *.split)
[11:39:32] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (*.net *.split)
[11:39:32] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (*.net *.split)
[11:39:33] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (*.net *.split)
[11:39:33] *** Quits: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a) (*.net *.split)
[11:39:33] *** Quits: sloth (~sloth@84.16.241.179) (*.net *.split)
[11:39:33] *** Quits: Skarn (~skarn@user/skarn) (*.net *.split)
[11:39:33] *** Quits: heth (~heth@user/heth) (*.net *.split)
[11:39:33] *** Quits: celphi (sid97751@user/celphi) (*.net *.split)
[11:39:33] *** Quits: pieguy12- (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (*.net *.split)
[11:39:33] *** Quits: jelly (jelly@user/jelly) (*.net *.split)
[11:39:33] *** Quits: sgrs_ (~sgrs@185.112.146.78) (*.net *.split)
[11:39:33] *** Quits: earthbre| (earthbreak@2600:3c03::f03c:91ff:fece:9070) (*.net *.split)
[11:39:33] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (*.net *.split)
[11:39:33] *** Quits: treefrob (~treefrob@p2e5429e4.dip0.t-ipconnect.de) (*.net *.split)
[11:39:33] *** Quits: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com) (*.net *.split)
[11:39:33] *** Quits: WantToHelp (~WantToHel@96.77.40.70) (*.net *.split)
[11:39:33] *** Quits: tabakhase (tabakhase@user/tabakhase) (*.net *.split)
[11:39:33] *** Quits: LogicAside (~LogicAsid@user/logicaside) (*.net *.split)
[11:39:33] *** Quits: mcint (mcint@user/mcint) (*.net *.split)
[11:39:33] *** Quits: dansan (~daniel@75.81.148.51) (*.net *.split)
[11:39:33] *** Quits: GnuYawk (~GnuYawk@user/gnuyawk) (*.net *.split)
[11:39:33] *** Quits: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com) (*.net *.split)
[11:39:33] *** Quits: BlueShark (sid10311@user/blueshark) (*.net *.split)
[11:39:33] *** Quits: akaWolf (~akaWolf@akawolf.org) (*.net *.split)
[11:39:33] *** Quits: Kays (Kays@user/kays) (*.net *.split)
[11:39:33] *** Quits: bleb (~cm@user/bleb) (*.net *.split)
[11:39:34] *** Quits: phenom (~primus@user/phenom) (*.net *.split)
[11:39:34] *** Quits: berndj (~berndj@ns2.linksynergy.co.za) (*.net *.split)
[11:39:34] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (*.net *.split)
[11:39:34] *** Quits: Russell (russell@bnc4free/staff/russell) (*.net *.split)
[11:39:34] *** Quits: Xe (~cadey@tailscale/xe) (*.net *.split)
[11:39:34] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[11:39:34] *** Quits: tm604 (~tom@perlsite.default.entitypark.uk0.bigv.io) (*.net *.split)
[11:39:34] *** Quits: mruszczyk (sid160336@id-160336.tinside.irccloud.com) (*.net *.split)
[11:39:34] *** Quits: pierrot (~pi@user/pierrot) (*.net *.split)
[11:39:34] *** Quits: PonyBlocks (ponyblocks@user/ponyblocks) (*.net *.split)
[11:39:34] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[11:39:34] *** Quits: Champi (Champi@damn.e-leet.be) (*.net *.split)
[11:39:34] *** Quits: Juerd (juerd@computervrede.nl) (*.net *.split)
[11:39:34] *** Quits: f3ew (~f3ew@2a01:4f9:4b:3b57::2) (*.net *.split)
[11:39:34] *** Quits: latk (~latk@2001:470:69fc:105::255) (*.net *.split)
[11:39:34] *** Quits: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9) (*.net *.split)
[11:39:34] *** Quits: riceandbeans (~zach@user/riceandbeans) (*.net *.split)
[11:39:34] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[11:39:34] *** Quits: gko (~user@user/gko) (*.net *.split)
[11:39:34] *** Quits: TBSliver (sid321952@id-321952.hampstead.irccloud.com) (*.net *.split)
[11:39:34] *** Quits: oskie (usel@user/oskie) (*.net *.split)
[11:39:34] *** Quits: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1) (*.net *.split)
[11:39:34] *** Quits: plicease (quassel@2600:3c00::f03c:91ff:feea:c7bb) (*.net *.split)
[11:39:34] *** Quits: eof (~eof@tty3.dev) (*.net *.split)
[11:39:34] *** Quits: haarg (haarg@haarg.org) (*.net *.split)
[11:39:34] *** Quits: blo (~blo@user/blo) (*.net *.split)
[11:39:34] *** Quits: Exodist (sid433366@id-433366.hampstead.irccloud.com) (*.net *.split)
[11:39:35] *** Quits: pwillard (sid136981@id-136981.hampstead.irccloud.com) (*.net *.split)
[11:39:35] *** Quits: pb (~pb@polemon.org) (*.net *.split)
[11:39:35] *** Quits: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com) (*.net *.split)
[11:39:35] *** Quits: Botje (~Botje@mang.sgaap.be) (*.net *.split)
[11:39:35] *** Quits: edef (~edef@user/edef) (*.net *.split)
[11:39:35] *** Quits: karjala (sid176588@id-176588.lymington.irccloud.com) (*.net *.split)
[11:39:35] *** Quits: peder (4822@nidur.ifi.uio.no) (*.net *.split)
[11:39:35] *** Quits: corwin (someone@fosshost/director/corwin) (*.net *.split)
[11:39:35] *** Quits: Getty (getty@stardestroyer.de) (*.net *.split)
[11:39:35] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (*.net *.split)
[11:39:35] *** Quits: mixfix41 (~homefame@user/mixfix41) (*.net *.split)
[11:39:35] *** Quits: tbcr_ (~tbcr@107.13.189.161) (*.net *.split)
[11:39:35] *** Quits: BSaboia (~bsaboia@177.37.198.83) (*.net *.split)
[11:39:35] *** Quits: zakame (~zakame@user/zakame) (*.net *.split)
[11:39:35] *** Quits: last1 (last1@modemcable039.93-160-184.mc.videotron.ca) (*.net *.split)
[11:39:35] *** Quits: Linux77 (~LinuMage@186.233.182.173) (*.net *.split)
[11:39:35] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (*.net *.split)
[11:39:35] *** Quits: dacav (~dacav@h94-245-9-196.cust.a3fiber.se) (*.net *.split)
[11:39:35] *** Quits: skrzyp (~skrzyp@skrzyp.net) (*.net *.split)
[11:39:35] *** Quits: sysdef (~sysdef@user/sysdef) (*.net *.split)
[11:39:35] *** Quits: edr (~edr@user/edr) (*.net *.split)
[11:39:35] *** Quits: tharkun (tharkun@kvm6.telegraphics.com.au) (*.net *.split)
[11:39:35] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (*.net *.split)
[11:39:35] *** Quits: sokan (~sokan@athedsl-4548055.home.otenet.gr) (*.net *.split)
[11:39:36] *** Quits: deecat (~deecat@73.99.215.70) (*.net *.split)
[11:39:36] *** Quits: brunoramoslu (~brunoramo@94.252.122.87) (*.net *.split)
[11:39:36] *** Quits: rewt (~default@user/rewt) (*.net *.split)
[11:39:36] *** Quits: koo5_ (~quassel@51.140.155.227) (*.net *.split)
[11:39:36] *** Quits: pflanze (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch) (*.net *.split)
[11:39:36] *** Quits: Kulrak (Kulrak@n122-109-158-59.rdl2.qld.optusnet.com.au) (*.net *.split)
[11:39:36] *** Quits: ilmari (~ilmari@user/ilmari) (*.net *.split)
[11:39:36] *** Quits: lopid (~lopid@user/lopid) (*.net *.split)
[11:39:36] *** Quits: brainbuz (~brainbuz@151.197.242.207) (*.net *.split)
[11:39:36] *** Quits: judabuda (kowbunga@user/judabuda) (*.net *.split)
[11:39:36] *** Quits: arthurpbs (~arthurpbs@168.121.98.7) (*.net *.split)
[11:39:36] *** Quits: HiSPeed (znc@mail.holics.at) (*.net *.split)
[11:39:36] *** Quits: ProperNoun (~holyShizn@user/propernoun) (*.net *.split)
[11:39:36] *** Quits: merpaderp (~ircuser@89.111.36.243) (*.net *.split)
[11:39:36] *** Quits: edf0 (edef@panther.nathan7.eu) (*.net *.split)
[11:39:36] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (*.net *.split)
[11:39:36] *** Quits: torbjorn_ (~torbjorn@88.81-166-205.customer.lyse.net) (*.net *.split)
[11:39:36] *** Quits: jjhoo (~jahakala@user/jjhoo) (*.net *.split)
[11:39:36] *** Quits: Somni (insomnia@77-88-237-24.gci.net) (*.net *.split)
[11:39:36] *** Quits: cxreg2 (~count@63.228.111.44) (*.net *.split)
[11:39:36] *** Quits: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host) (*.net *.split)
[11:39:36] *** Quits: x5c30 (~x5c30@user/x5c30) (*.net *.split)
[11:39:36] *** Quits: v^ (~v@user/ctrl) (*.net *.split)
[11:39:37] *** Quits: maettu_ (~mbloch@guardian.werft22.net) (*.net *.split)
[11:39:37] *** Quits: Rich_ (~rich@nakts.net) (*.net *.split)
[11:39:37] *** Quits: tyep (~hatseflat@hatsuseno.rootaccess.nl) (*.net *.split)
[11:39:37] *** Quits: MDingas- (~MDingas@static.155.53.55.162.clients.your-server.de) (*.net *.split)
[11:39:37] *** Quits: nuclightq_ (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru) (*.net *.split)
[11:39:37] *** Quits: i7c (~i7c@user/i7c) (*.net *.split)
[11:39:37] *** Quits: Kassandry (~Kassandry@kassandry.net) (*.net *.split)
[11:39:37] *** Quits: p71 (~p71@096-042-034-230.res.spectrum.com) (*.net *.split)
[11:39:37] *** Quits: bnjf (~bnjf@vm.bnjf.id.au) (*.net *.split)
[11:39:37] *** Quits: thowe (~thowe@66.39.169.133) (*.net *.split)
[11:39:37] *** Quits: buZz (~buzz@sky.thebigblue.tk) (*.net *.split)
[11:39:37] *** Quits: Frosku (~frosku@user/frosku) (*.net *.split)
[11:39:37] *** Quits: tyldis (~vidar@tyldum.com) (*.net *.split)
[11:39:37] *** Quits: sivoais (~zaki@199.19.225.239) (*.net *.split)
[11:39:37] *** Quits: tkr (tkr@pi.ip.fi) (*.net *.split)
[11:39:37] *** Quits: pekster (~rewt@user/pekster) (*.net *.split)
[11:39:37] *** Quits: cjac (~cjac@li1196-20.members.linode.com) (*.net *.split)
[11:39:38] *** Quits: enick_397 (~mercvrivs@2001:470:69fc:105::2ee6) (*.net *.split)
[11:39:38] *** Quits: gordonfish[m] (~gordonfis@user/gordonfish) (*.net *.split)
[11:39:38] *** Quits: averell (~averell@user/averell) (*.net *.split)
[11:39:38] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (*.net *.split)
[11:39:38] *** Quits: sevvie (~sevvie@vps-6df5f188.vps.ovh.net) (*.net *.split)
[11:39:38] *** Quits: odc (sid197788@id-197788.helmsley.irccloud.com) (*.net *.split)
[11:39:38] *** Quits: mjgardner (sid182628@id-182628.ilkley.irccloud.com) (*.net *.split)
[11:39:38] *** Quits: mjones (sid6844@id-6844.helmsley.irccloud.com) (*.net *.split)
[11:39:39] *** Quits: JRaspass (~JRaspass@68.183.32.235) (*.net *.split)
[11:39:39] *** Quits: drevil (~igor@pool-173-54-17-110.nwrknj.fios.verizon.net) (*.net *.split)
[11:39:39] *** Quits: jdv (~jdv79@jdv.devuyst.com) (*.net *.split)
[11:39:39] *** Quits: El_Che (~nxadm@ssh2.ulyssis.student.kuleuven.be) (*.net *.split)
[11:39:39] *** Quits: glider (~glider@user/glider) (*.net *.split)
[11:39:39] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[11:39:39] *** Quits: alh (~alh@hiddenrealms.org) (*.net *.split)
[11:39:39] *** Quits: Benett (~Benett@xnetx.de) (*.net *.split)
[11:39:39] *** Quits: starz (starz@2001:41d0:8:4bd3::1) (*.net *.split)
[11:39:39] *** Quits: kiwiroy (sid374179@id-374179.lymington.irccloud.com) (*.net *.split)
[11:39:39] *** Quits: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88) (*.net *.split)
[11:39:40] *** Quits: Zubi[n] (rubin@2600:3c02::f03c:91ff:fe70:4a45) (*.net *.split)
[11:39:40] *** Quits: Paladin (~paladin@S0106c0eae42a785d.vc.shawcable.net) (*.net *.split)
[11:39:40] *** Quits: noctuks (7vrDyCK6LH@user/noctux) (*.net *.split)
[11:39:40] *** Quits: Bluewind (~Bluewind@user/bluewind) (*.net *.split)
[11:39:40] *** Quits: ew73 (~ew73@ec2-3-92-179-243.compute-1.amazonaws.com) (*.net *.split)
[11:39:40] *** Quits: klys (~mdasoh@show.op8.us) (*.net *.split)
[11:39:40] *** Quits: zeus (~user@user/kamyl) (*.net *.split)
[11:39:40] *** Quits: noctux (~noctux@user/noctux) (*.net *.split)
[11:39:40] *** Quits: nshp (hi@2600:3c03::f03c:91ff:fe2c:cd67) (*.net *.split)
[11:39:40] *** Quits: Riviera (Riviera@user/riviera) (*.net *.split)
[11:39:41] *** Quits: keir (~keir@user/keir) (*.net *.split)
[11:39:41] *** Quits: rfi_ (~rfi@216.70.102.172) (*.net *.split)
[11:39:41] *** Quits: huf (huf@user/huf) (*.net *.split)
[11:39:41] *** Quits: SysPete (~SysPete@fin.sysnix.com) (*.net *.split)
[11:39:41] *** Quits: rjsalts (~rjsalts@green.spectralmud.org) (*.net *.split)
[11:39:41] *** Quits: BinGOs (~bitbucket@user/bingos) (*.net *.split)
[11:39:41] *** Quits: RemoteHost (A_D@libera/staff/dragon) (*.net *.split)
[11:39:41] *** Quits: gk_ (~irkk@debrecziner.extrawurst.systems) (*.net *.split)
[11:39:41] *** Quits: zacts (~zacts@user/zacts) (*.net *.split)
[11:39:41] *** Quits: epony (~epony@user/epony) (*.net *.split)
[11:39:41] *** Quits: ugjka (~ugjka@ugjka.net) (*.net *.split)
[11:39:41] *** Quits: Guest9779 (~xdg@2a02:587:de00:400:1101:37b0:16ee:8966) (*.net *.split)
[11:39:41] *** Quits: ilmari_ (~ilmari@user/ilmari) (*.net *.split)
[11:39:41] *** Quits: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (*.net *.split)
[11:39:42] *** Quits: sergiotarxz[m] (~sergiotar@2001:470:69fc:105::1:15f2) (*.net *.split)
[11:39:42] *** Quits: madduck (~madduck@user/madduck) (*.net *.split)
[11:39:42] *** Quits: Sleepy63 (~Sleepy63@user/sleepy63) (*.net *.split)
[11:39:42] *** Quits: WinterStar (~IceLight@user/icelight) (*.net *.split)
[11:39:42] *** Quits: mncheck (~mncheck@193.224.205.254) (*.net *.split)
[11:39:42] *** Quits: solitario (~adrian@www3.kiess.onl) (*.net *.split)
[11:39:42] *** Quits: surrounder (~surrounde@tanaka.surrounder.nl) (*.net *.split)
[11:39:42] *** Quits: yano (~yano@ircpuzzles/staff/yano) (*.net *.split)
[11:39:42] *** Quits: garo (~garo@ptr-1pln5puxqxmejxq9kws.18120a2.ip6.access.telenet.be) (*.net *.split)
[11:39:42] *** Quits: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6) (*.net *.split)
[11:39:42] *** Quits: APic (apic@apic.name) (*.net *.split)
[11:39:42] *** Quits: samcv (~samcv@194.233.102.77) (*.net *.split)
[11:39:42] *** Quits: tag (sid271787@id-271787.lymington.irccloud.com) (*.net *.split)
[11:39:42] *** Quits: elcaro (~anonymous@45.32.191.75) (*.net *.split)
[11:39:42] *** Quits: Darxus (~darxus@panic.chaosreigns.com) (*.net *.split)
[11:39:42] *** Quits: Altreus (~altreus@2a03:b0c0:1:e0::439:5001) (*.net *.split)
[11:39:42] *** Quits: Maff (maff@user/maff) (*.net *.split)
[11:39:42] *** Quits: Spiney (~Spiney@2604:a880:400:d0::1d82:b001) (*.net *.split)
[11:39:42] *** Quits: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com) (*.net *.split)
[11:39:42] *** Quits: Yaakov (sid19863@user/Yaakov) (*.net *.split)
[11:39:42] *** Quits: jrayhawk (~jrayhawk@user/jrayhawk) (*.net *.split)
[11:39:42] *** Quits: nicomen (~nicolas@178.124.223.35.bc.googleusercontent.com) (*.net *.split)
[11:39:42] *** Quits: leosilva (~leosilva@canonical/leosilva) (*.net *.split)
[11:39:42] *** Quits: ingy (~ingy@143.244.187.20) (*.net *.split)
[11:39:42] *** Quits: k33p3r (kexik@2605:6400:c847:1948::8491) (*.net *.split)
[11:39:42] *** Quits: taeaad (~taeaad@user/taeaad) (*.net *.split)
[11:39:42] *** Quits: Dorward (~dorward@13.5.169.217.in-addr.arpa) (*.net *.split)
[11:39:42] *** Quits: shadowpaste (~shadowpas@kitty.scsys.co.uk) (*.net *.split)
[11:39:42] *** Quits: quesker (~idnet@mail.89vx.net) (*.net *.split)
[11:39:42] *** Quits: Te[u]K (teuk@teuk.org) (*.net *.split)
[11:39:42] *** Quits: jjatria (~jjatria@68.183.32.235) (*.net *.split)
[11:39:42] *** Quits: tobs (~tobs@taboege.de) (*.net *.split)
[11:39:42] *** Quits: ether (~ether@perl/cpan-druid/ether) (*.net *.split)
[11:39:43] *** Quits: arcanez (~arcanez@warpedreality.org) (*.net *.split)
[11:39:43] *** Quits: gugod (gugod@li7-202.members.linode.com) (*.net *.split)
[11:39:43] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (*.net *.split)
[11:39:43] *** Quits: graham (~gchristen@user/gchristensen) (*.net *.split)
[11:39:43] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (*.net *.split)
[11:39:43] *** Quits: hussam (~hussam@user/hussam) (*.net *.split)
[11:39:43] *** Quits: DK3 (~DK3@rs000042.fastrootserver.de) (*.net *.split)
[11:39:43] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[11:39:43] *** Quits: davebaker_ (sid143727@id-143727.lymington.irccloud.com) (*.net *.split)
[11:39:43] *** Quits: phr3ak (~noreply@gnet.hu) (*.net *.split)
[11:39:43] *** Quits: vinnix (~vinnix@user/vinnix) (*.net *.split)
[11:39:43] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (*.net *.split)
[11:39:43] *** Quits: castawayc (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net) (*.net *.split)
[11:39:43] *** Quits: k-man (~jason@user/k-man) (*.net *.split)
[11:39:43] *** Quits: finsternis (~X@23.226.237.192) (*.net *.split)
[11:39:43] *** Quits: bs338 (~pi@host31-51-176-41.range31-51.btcentralplus.com) (*.net *.split)
[11:39:43] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[11:39:43] *** Quits: LeoNerd (~leo@genoa.dictatorshipcake.co.uk) (*.net *.split)
[11:39:43] *** Quits: greeb (~greeb@blahblahblah.anime.horse) (*.net *.split)
[11:39:43] *** Quits: samebchase (~samebchas@51.15.68.182) (*.net *.split)
[11:39:43] *** Quits: castaway_ (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net) (*.net *.split)
[11:39:43] *** Quits: cooper_ (~mitchell@user/cooper) (*.net *.split)
[11:39:43] *** Quits: Joel (~jjshoe@user/joel) (*.net *.split)
[11:39:43] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[11:39:44] *** Quits: Duns_Scrotus (sid262565@id-262565.tinside.irccloud.com) (*.net *.split)
[11:39:44] *** Quits: depesz (~quassel@lana.depesz.com) (*.net *.split)
[11:39:44] *** Quits: fizzie (irc@selene.zem.fi) (*.net *.split)
[11:39:44] *** Quits: GumbyPAN (cpanbot@jingo.bingosnet.org) (*.net *.split)
[11:39:44] *** Quits: kcz (~quassel@2a01:430:12:ff11::1) (*.net *.split)
[11:39:44] *** Quits: digdilem (~digdilem@rolf.yuss.org) (*.net *.split)
[11:39:44] *** Quits: dwxreaper (~quinn@192.155.91.76) (*.net *.split)
[11:39:44] *** Quits: krako[m] (~krakozaur@2001:470:69fc:105::1:c0c) (*.net *.split)
[11:39:44] *** Quits: Grinnz (sid183254@id-183254.hampstead.irccloud.com) (*.net *.split)
[11:39:44] *** Quits: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663) (*.net *.split)
[11:39:44] *** Quits: rjbs (sid498898@id-498898.uxbridge.irccloud.com) (*.net *.split)
[11:39:44] *** Quits: rypervenche (~rypervenc@user/rypervenche) (*.net *.split)
[11:39:45] *** Quits: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca) (*.net *.split)
[11:39:45] *** Quits: jink (mrjink@chat.jink.net) (*.net *.split)
[11:39:45] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[11:39:45] *** Quits: bigpresh (~bigpresh@libera/staff/bigpresh) (*.net *.split)
[11:39:45] *** Quits: ozy (~ozy@libre.theyareafter.us) (*.net *.split)
[11:39:45] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[11:45:53] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[11:51:45] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Max SendQ exceeded)
[11:51:45] *** Quits: Repaster_ (~Repaster@perlbot/bot/grinnz/repaster) (Excess Flood)
[11:51:47] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Max SendQ exceeded)
[11:51:47] *** Quits: fling (~fling@user/fling) (Max SendQ exceeded)
[11:51:52] *** Joins: Repaster_ (~Repaster@2600:2b00:7330:9a01:1e6f:65ff:fec9:ce9f)
[11:51:58] *** Quits: Paperbot_ (~Paperbot@perlbot/bot/grinnz/paperbot) (Excess Flood)
[11:52:02] *** Joins: rewt (~default@user/rewt)
[11:52:02] *** Joins: tobybl (~tobybl@237.202.200.146.dyn.plus.net)
[11:52:02] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[11:52:02] *** Joins: art1 (~romeyke@p200300ccdf0541007b5eba8c924825b2.dip0.t-ipconnect.de)
[11:52:02] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:52:02] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[11:52:02] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[11:52:02] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:52:02] *** Joins: mexen (uid495612@user/mexen)
[11:52:02] *** Joins: japh (~scp1@user/japh)
[11:52:02] *** Joins: tejr (~tejr@user/tejr)
[11:52:02] *** Joins: llh (~llh@user/llh)
[11:52:02] *** Joins: pizdets (~pizdets@183.182.111.169)
[11:52:02] *** Joins: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[11:52:02] *** Joins: mixfix41 (~homefame@user/mixfix41)
[11:52:02] *** Joins: tbcr_ (~tbcr@107.13.189.161)
[11:52:02] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[11:52:02] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[11:52:02] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[11:52:02] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[11:52:02] *** Joins: veesh (~veesh@5.28.155.48)
[11:52:02] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[11:52:02] *** Joins: henry40408 (~henry4040@175.182.108.239)
[11:52:02] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[11:52:02] *** Joins: jadesoturi (~jadesotur@user/jadesoturi)
[11:52:02] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[11:52:02] *** Joins: zakame (~zakame@user/zakame)
[11:52:02] *** Joins: justIrresolute (~justache@user/justache)
[11:52:02] *** Joins: HvszrStykp (~X@81.171.62.86)
[11:52:02] *** Joins: last1 (last1@modemcable039.93-160-184.mc.videotron.ca)
[11:52:02] *** Joins: defjam (~eb0t@90.203.120.248)
[11:52:02] *** Joins: Linux77 (~LinuMage@186.233.182.173)
[11:52:02] *** Joins: gamo (~Thunderbi@cm-93-156-61-102.telecable.es)
[11:52:02] *** Joins: ueberall (ueberall_l@user/ueberall)
[11:52:02] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[11:52:02] *** Joins: dacav (~dacav@h94-245-9-196.cust.a3fiber.se)
[11:52:02] *** Joins: skrzyp (~skrzyp@skrzyp.net)
[11:52:02] *** Joins: revhippie (~jdavis@097-081-163-065.res.spectrum.com)
[11:52:02] *** Joins: sysdef (~sysdef@user/sysdef)
[11:52:02] *** Joins: Kobaz (~libera@its.kobaz.net)
[11:52:02] *** Joins: edr (~edr@user/edr)
[11:52:02] *** Joins: Nowaker (~quassel@188.116.38.80)
[11:52:02] *** Joins: homura (uid398348@user/homura)
[11:52:02] *** Joins: Ovid___ (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[11:52:02] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[11:52:02] *** Joins: kaitlyn03 (~kaitlyn@user/kaitlyn)
[11:52:02] *** Joins: kolcon (~kolcon@v.kolouch.org)
[11:52:02] *** Joins: alex11 (~alex11@user/alex11)
[11:52:02] *** Joins: tharkun (tharkun@kvm6.telegraphics.com.au)
[11:52:02] *** Joins: jayray (~jayray@user/jayray)
[11:52:02] *** Joins: vrurg (~vrurg@45.74.95.181)
[11:52:02] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[11:52:02] *** Joins: epony (~epony@user/epony)
[11:52:02] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[11:52:02] *** Joins: ugjka (~ugjka@ugjka.net)
[11:52:02] *** Joins: sokan (~sokan@athedsl-4548055.home.otenet.gr)
[11:52:02] *** Joins: cation (cation@user/cation)
[11:52:02] *** Joins: deecat (~deecat@73.99.215.70)
[11:52:02] *** Joins: brunoramoslu (~brunoramo@94.252.122.87)
[11:52:02] *** Joins: koo5_ (~quassel@51.140.155.227)
[11:52:02] *** Joins: pflanze (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch)
[11:52:02] *** Joins: Kulrak (Kulrak@n122-109-158-59.rdl2.qld.optusnet.com.au)
[11:52:02] *** Joins: Guest9779 (~xdg@2a02:587:de00:400:1101:37b0:16ee:8966)
[11:52:02] *** Joins: ilmari (~ilmari@user/ilmari)
[11:52:02] *** Joins: lopid (~lopid@user/lopid)
[11:52:02] *** Joins: brainbuz (~brainbuz@151.197.242.207)
[11:52:02] *** Joins: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88)
[11:52:02] *** Joins: krako[m] (~krakozaur@2001:470:69fc:105::1:c0c)
[11:52:02] *** Joins: latk (~latk@2001:470:69fc:105::255)
[11:52:02] *** Joins: enick_397 (~mercvrivs@2001:470:69fc:105::2ee6)
[11:52:02] *** Joins: heth (~heth@user/heth)
[11:52:02] *** Joins: magicalegg[m] (~magicaleg@2001:470:69fc:105::1:52e9)
[11:52:02] *** Joins: ilmari_ (~ilmari@user/ilmari)
[11:52:02] *** Joins: graham (~gchristen@user/gchristensen)
[11:52:02] *** Joins: heiner_ (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[11:52:02] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[11:52:02] *** Joins: gordonfish[m] (~gordonfis@user/gordonfish)
[11:52:02] *** Joins: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a)
[11:52:02] *** Joins: sergiotarxz[m] (~sergiotar@2001:470:69fc:105::1:15f2)
[11:52:02] *** Joins: hussam (~hussam@user/hussam)
[11:52:02] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[11:52:02] *** Joins: victori (~victori@cpe-76-174-179-126.socal.res.rr.com)
[11:52:02] *** Joins: cjac (~cjac@li1196-20.members.linode.com)
[11:52:02] *** Joins: tkr (tkr@pi.ip.fi)
[11:52:02] *** Joins: sivoais (~zaki@199.19.225.239)
[11:52:02] *** Joins: pekster (~rewt@user/pekster)
[11:52:02] *** Joins: tyldis (~vidar@tyldum.com)
[11:52:02] *** Joins: Frosku (~frosku@user/frosku)
[11:52:02] *** Joins: buZz (~buzz@sky.thebigblue.tk)
[11:52:02] *** Joins: thowe (~thowe@66.39.169.133)
[11:52:02] *** Joins: bnjf (~bnjf@vm.bnjf.id.au)
[11:52:02] *** Joins: p71 (~p71@096-042-034-230.res.spectrum.com)
[11:52:02] *** Joins: Kassandry (~Kassandry@kassandry.net)
[11:52:02] *** Joins: i7c (~i7c@user/i7c)
[11:52:02] *** Joins: nuclightq_ (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru)
[11:52:02] *** Joins: MDingas- (~MDingas@static.155.53.55.162.clients.your-server.de)
[11:52:02] *** Joins: tyep (~hatseflat@hatsuseno.rootaccess.nl)
[11:52:02] *** Joins: Rich_ (~rich@nakts.net)
[11:52:02] *** Joins: maettu_ (~mbloch@guardian.werft22.net)
[11:52:02] *** Joins: x5c30 (~x5c30@user/x5c30)
[11:52:02] *** Joins: v^ (~v@user/ctrl)
[11:52:02] *** Joins: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host)
[11:52:02] *** Joins: cxreg2 (~count@63.228.111.44)
[11:52:02] *** Joins: Somni (insomnia@77-88-237-24.gci.net)
[11:52:02] *** Joins: jjhoo (~jahakala@user/jjhoo)
[11:52:02] *** Joins: torbjorn_ (~torbjorn@88.81-166-205.customer.lyse.net)
[11:52:02] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[11:52:02] *** Joins: edf0 (edef@panther.nathan7.eu)
[11:52:02] *** Joins: merpaderp (~ircuser@89.111.36.243)
[11:52:02] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[11:52:02] *** Joins: HiSPeed (znc@mail.holics.at)
[11:52:02] *** Joins: arthurpbs (~arthurpbs@168.121.98.7)
[11:52:02] *** Joins: f3ew (~f3ew@2a01:4f9:4b:3b57::2)
[11:52:02] *** Joins: Juerd (juerd@computervrede.nl)
[11:52:02] *** Joins: Champi (Champi@damn.e-leet.be)
[11:52:02] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[11:52:02] *** Joins: PonyBlocks (ponyblocks@user/ponyblocks)
[11:52:02] *** Joins: pierrot (~pi@user/pierrot)
[11:52:02] *** Joins: mruszczyk (sid160336@id-160336.tinside.irccloud.com)
[11:52:02] *** Joins: mweckbecker (~matthias@weckbecker.name)
[11:52:02] *** Joins: Xe (~cadey@tailscale/xe)
[11:52:02] *** Joins: tm604 (~tom@perlsite.default.entitypark.uk0.bigv.io)
[11:52:02] *** Joins: Russell (russell@bnc4free/staff/russell)
[11:52:02] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[11:52:02] *** Joins: berndj (~berndj@ns2.linksynergy.co.za)
[11:52:02] *** Joins: phenom (~primus@user/phenom)
[11:52:02] *** Joins: bleb (~cm@user/bleb)
[11:52:02] *** Joins: Kays (Kays@user/kays)
[11:52:02] *** Joins: akaWolf (~akaWolf@akawolf.org)
[11:52:02] *** Joins: BlueShark (sid10311@user/blueshark)
[11:52:02] *** Joins: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com)
[11:52:02] *** Joins: GnuYawk (~GnuYawk@user/gnuyawk)
[11:52:02] *** Joins: dansan (~daniel@75.81.148.51)
[11:52:02] *** Joins: mcint (mcint@user/mcint)
[11:52:02] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[11:52:02] *** Joins: WantToHelp (~WantToHel@96.77.40.70)
[11:52:02] *** Joins: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[11:52:02] *** Joins: tabakhase (tabakhase@user/tabakhase)
[11:52:02] *** Joins: treefrob (~treefrob@p2e5429e4.dip0.t-ipconnect.de)
[11:52:02] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[11:52:02] *** Joins: sgrs_ (~sgrs@185.112.146.78)
[11:52:02] *** Joins: earthbre| (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[11:52:02] *** Joins: pieguy12- (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca)
[11:52:02] *** Joins: celphi (sid97751@user/celphi)
[11:52:02] *** Joins: Skarn (~skarn@user/skarn)
[11:52:02] *** Joins: sloth (~sloth@84.16.241.179)
[11:52:02] *** Joins: jelly (jelly@user/jelly)
[11:52:02] *** Joins: Getty (getty@stardestroyer.de)
[11:52:02] *** Joins: corwin (someone@fosshost/director/corwin)
[11:52:02] *** Joins: peder (4822@nidur.ifi.uio.no)
[11:52:02] *** Joins: karjala (sid176588@id-176588.lymington.irccloud.com)
[11:52:02] *** Joins: edef (~edef@user/edef)
[11:52:02] *** Joins: Botje (~Botje@mang.sgaap.be)
[11:52:02] *** Joins: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com)
[11:52:02] *** Joins: pb (~pb@polemon.org)
[11:52:02] *** Joins: pwillard (sid136981@id-136981.hampstead.irccloud.com)
[11:52:02] *** Joins: Exodist (sid433366@id-433366.hampstead.irccloud.com)
[11:52:02] *** Joins: blo (~blo@user/blo)
[11:52:02] *** Joins: plicease (quassel@2600:3c00::f03c:91ff:feea:c7bb)
[11:52:02] *** Joins: eof (~eof@tty3.dev)
[11:52:02] *** Joins: haarg (haarg@haarg.org)
[11:52:02] *** Joins: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1)
[11:52:02] *** Joins: oskie (usel@user/oskie)
[11:52:02] *** Joins: TBSliver (sid321952@id-321952.hampstead.irccloud.com)
[11:52:02] *** Joins: gko (~user@user/gko)
[11:52:02] *** Joins: Artea (~Lufia@artea.com.pt)
[11:52:02] *** Joins: riceandbeans (~zach@user/riceandbeans)
[11:52:02] *** Joins: enyc (~enyc@user/enyc)
[11:52:02] *** Joins: kiwiroy (sid374179@id-374179.lymington.irccloud.com)
[11:52:02] *** Joins: starz (starz@2001:41d0:8:4bd3::1)
[11:52:02] *** Joins: Benett (~Benett@xnetx.de)
[11:52:02] *** Joins: alh (~alh@hiddenrealms.org)
[11:52:02] *** Joins: Exa (exa@irc.moe)
[11:52:02] *** Joins: glider (~glider@user/glider)
[11:52:02] *** Joins: jdv (~jdv79@jdv.devuyst.com)
[11:52:02] *** Joins: El_Che (~nxadm@ssh2.ulyssis.student.kuleuven.be)
[11:52:02] *** Joins: drevil (~igor@pool-173-54-17-110.nwrknj.fios.verizon.net)
[11:52:02] *** Joins: JRaspass (~JRaspass@68.183.32.235)
[11:52:02] *** Joins: mjones (sid6844@id-6844.helmsley.irccloud.com)
[11:52:02] *** Joins: mjgardner (sid182628@id-182628.ilkley.irccloud.com)
[11:52:02] *** Joins: odc (sid197788@id-197788.helmsley.irccloud.com)
[11:52:02] *** Joins: sevvie (~sevvie@vps-6df5f188.vps.ovh.net)
[11:52:02] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[11:52:02] *** Joins: averell (~averell@user/averell)
[11:52:02] *** Joins: gk_ (~irkk@debrecziner.extrawurst.systems)
[11:52:02] *** Joins: RemoteHost (A_D@libera/staff/dragon)
[11:52:02] *** Joins: BinGOs (~bitbucket@user/bingos)
[11:52:02] *** Joins: rjsalts (~rjsalts@green.spectralmud.org)
[11:52:02] *** Joins: SysPete (~SysPete@fin.sysnix.com)
[11:52:02] *** Joins: huf (huf@user/huf)
[11:52:02] *** Joins: rfi_ (~rfi@216.70.102.172)
[11:52:02] *** Joins: keir (~keir@user/keir)
[11:52:02] *** Joins: zacts (~zacts@user/zacts)
[11:52:02] *** Joins: nshp (hi@2600:3c03::f03c:91ff:fe2c:cd67)
[11:52:02] *** Joins: Riviera (Riviera@user/riviera)
[11:52:02] *** Joins: noctux (~noctux@user/noctux)
[11:52:02] *** Joins: zeus (~user@user/kamyl)
[11:52:02] *** Joins: ew73 (~ew73@ec2-3-92-179-243.compute-1.amazonaws.com)
[11:52:02] *** Joins: klys (~mdasoh@show.op8.us)
[11:52:02] *** Joins: Bluewind (~Bluewind@user/bluewind)
[11:52:02] *** Joins: noctuks (7vrDyCK6LH@user/noctux)
[11:52:02] *** Joins: Paladin (~paladin@S0106c0eae42a785d.vc.shawcable.net)
[11:52:02] *** Joins: Zubi[n] (rubin@2600:3c02::f03c:91ff:fe70:4a45)
[11:52:02] *** Joins: dwxreaper (~quinn@192.155.91.76)
[11:52:02] *** Joins: digdilem (~digdilem@rolf.yuss.org)
[11:52:02] *** Joins: kcz (~quassel@2a01:430:12:ff11::1)
[11:52:02] *** Joins: GumbyPAN (cpanbot@jingo.bingosnet.org)
[11:52:02] *** Joins: fizzie (irc@selene.zem.fi)
[11:52:02] *** Joins: depesz (~quassel@lana.depesz.com)
[11:52:02] *** Joins: chronon (~chronon@user/chronon)
[11:52:02] *** Joins: Joel (~jjshoe@user/joel)
[11:52:02] *** Joins: cooper_ (~mitchell@user/cooper)
[11:52:02] *** Joins: castaway_ (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net)
[11:52:02] *** Joins: Duns_Scrotus (sid262565@id-262565.tinside.irccloud.com)
[11:52:02] *** Joins: greeb (~greeb@blahblahblah.anime.horse)
[11:52:02] *** Joins: samebchase (~samebchas@51.15.68.182)
[11:52:02] *** Joins: LeoNerd (~leo@genoa.dictatorshipcake.co.uk)
[11:52:02] *** Joins: phryk (~totallyno@user/phryk)
[11:52:02] *** Joins: bs338 (~pi@host31-51-176-41.range31-51.btcentralplus.com)
[11:52:02] *** Joins: finsternis (~X@23.226.237.192)
[11:52:02] *** Joins: k-man (~jason@user/k-man)
[11:52:02] *** Joins: castawayc (~castaway@cpc81822-swin19-2-0-cust3.3-1.cable.virginm.net)
[11:52:02] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[11:52:02] *** Joins: vinnix (~vinnix@user/vinnix)
[11:52:02] *** Joins: phr3ak (~noreply@gnet.hu)
[11:52:02] *** Joins: davebaker_ (sid143727@id-143727.lymington.irccloud.com)
[11:52:02] *** Joins: niko (~niko@libera/staff/niko)
[11:52:02] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[11:52:02] *** Joins: leosilva (~leosilva@canonical/leosilva)
[11:52:02] *** Joins: ingy (~ingy@143.244.187.20)
[11:52:02] *** Joins: nicomen (~nicolas@178.124.223.35.bc.googleusercontent.com)
[11:52:02] *** Joins: jrayhawk (~jrayhawk@user/jrayhawk)
[11:52:02] *** Joins: k33p3r (kexik@2605:6400:c847:1948::8491)
[11:52:02] *** Joins: Yaakov (sid19863@user/Yaakov)
[11:52:02] *** Joins: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com)
[11:52:02] *** Joins: Spiney (~Spiney@2604:a880:400:d0::1d82:b001)
[11:52:02] *** Joins: Maff (maff@user/maff)
[11:52:02] *** Joins: Altreus (~altreus@2a03:b0c0:1:e0::439:5001)
[11:52:02] *** Joins: taeaad (~taeaad@user/taeaad)
[11:52:02] *** Joins: Darxus (~darxus@panic.chaosreigns.com)
[11:52:02] *** Joins: elcaro (~anonymous@45.32.191.75)
[11:52:02] *** Joins: tag (sid271787@id-271787.lymington.irccloud.com)
[11:52:02] *** Joins: samcv (~samcv@194.233.102.77)
[11:52:02] *** Joins: APic (apic@apic.name)
[11:52:02] *** Joins: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6)
[11:52:02] *** Joins: garo (~garo@ptr-1pln5puxqxmejxq9kws.18120a2.ip6.access.telenet.be)
[11:52:02] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[11:52:02] *** Joins: surrounder (~surrounde@tanaka.surrounder.nl)
[11:52:02] *** Joins: solitario (~adrian@www3.kiess.onl)
[11:52:02] *** Joins: mncheck (~mncheck@193.224.205.254)
[11:52:02] *** Joins: WinterStar (~IceLight@user/icelight)
[11:52:02] *** Joins: Sleepy63 (~Sleepy63@user/sleepy63)
[11:52:02] *** Joins: madduck (~madduck@user/madduck)
[11:52:02] *** Joins: gugod (gugod@li7-202.members.linode.com)
[11:52:02] *** Joins: arcanez (~arcanez@warpedreality.org)
[11:52:02] *** Joins: ether (~ether@perl/cpan-druid/ether)
[11:52:02] *** Joins: tobs (~tobs@taboege.de)
[11:52:02] *** Joins: Te[u]K (teuk@teuk.org)
[11:52:02] *** Joins: jjatria (~jjatria@68.183.32.235)
[11:52:02] *** Joins: shadowpaste (~shadowpas@kitty.scsys.co.uk)
[11:52:02] *** Joins: quesker (~idnet@mail.89vx.net)
[11:52:02] *** Joins: Dorward (~dorward@13.5.169.217.in-addr.arpa)
[11:52:02] *** Joins: ozy (~ozy@libre.theyareafter.us)
[11:52:02] *** Joins: bigpresh (~bigpresh@libera/staff/bigpresh)
[11:52:02] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[11:52:02] *** Joins: jink (mrjink@chat.jink.net)
[11:52:02] *** Joins: aetnaeus (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca)
[11:52:02] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[11:52:02] *** Joins: rjbs (sid498898@id-498898.uxbridge.irccloud.com)
[11:52:02] *** Joins: daxim (~daxim@2a02:b18:c13b:28:42b0:76ff:fe7b:7663)
[11:52:02] *** Joins: Grinnz (sid183254@id-183254.hampstead.irccloud.com)
[11:52:02] *** Joins: perlmaros (~perlmaros@master.k-1.com)
[11:52:02] *** Joins: genio (sid223130@id-223130.ilkley.irccloud.com)
[11:52:02] *** Joins: timlegge (~quassel@142.167.255.204)
[11:52:02] *** Joins: eseyman (~manu@lfbn-idf1-1-532-49.w86-242.abo.wanadoo.fr)
[11:52:02] *** Joins: dngor (~abuse@104-136-128-209.biz.spectrum.com)
[11:52:02] *** Joins: GeekRuthie (~geekruthi@li1062-152.members.linode.com)
[11:52:02] *** Joins: bkhl (~bkhl@user/bkhl)
[11:52:02] *** Joins: Croran (~Croran@71.231.214.173)
[11:52:02] *** Joins: Furai (~Furai@furai.pl)
[11:52:02] *** Joins: ChanServ (ChanServ@services.libera.chat)
[11:52:02] *** molybdenum.libera.chat sets mode: +o ChanServ
[11:52:05] *** Joins: Paperbot_ (~Paperbot@2600:2b00:7330:9a01:1e6f:65ff:fec9:ce9f)
[11:52:05] *** Quits: Repaster_ (~Repaster@2600:2b00:7330:9a01:1e6f:65ff:fec9:ce9f) (Excess Flood)
[11:52:06] *** Quits: epony (~epony@user/epony) (Max SendQ exceeded)
[11:52:10] *** Joins: epony (~epony@user/epony)
[11:52:11] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[11:52:11] *** Joins: Repaster_ (~Repaster@2600:2b00:7330:9a01:1e6f:65ff:fec9:ce9f)
[11:52:11] *** Quits: Paperbot_ (~Paperbot@2600:2b00:7330:9a01:1e6f:65ff:fec9:ce9f) (Changing host)
[11:52:11] *** Joins: Paperbot_ (~Paperbot@perlbot/bot/grinnz/paperbot)
[11:52:12] *** Quits: Repaster_ (~Repaster@2600:2b00:7330:9a01:1e6f:65ff:fec9:ce9f) (Changing host)
[11:52:12] *** Joins: Repaster_ (~Repaster@perlbot/bot/grinnz/repaster)
[11:52:17] *** Joins: fling (~fling@user/fling)
[11:54:20] *** Joins: judabuda (kowbunga@thunderirc.net)
[11:54:37] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[11:55:18] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[11:58:44] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[11:58:51] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[11:58:55] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[12:00:35] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[12:03:10] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 256 seconds)
[12:06:07] *** Joins: Pali (~pali@user/pali)
[12:16:55] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[12:20:37] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[12:23:18] *** Joins: frost (~frost@user/frost)
[12:23:36] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[12:26:14] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[12:28:38] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[12:28:54] *** Joins: tejr (~tejr@user/tejr)
[12:30:56] *** Quits: D-ion (~D-ion___@0850724116.static.corbina.ru) (Ping timeout: 256 seconds)
[12:31:02] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[12:32:07] * GumbyPAN CPAN Upload: App-HL7-Dump-0.06 by SKIM https://metacpan.org/release/SKIM/App-HL7-Dump-0.06
[12:37:46] *** Joins: D-ion (~D-ion___@0850724116.static.corbina.ru)
[12:43:56] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[12:47:09] * GumbyPAN CPAN Upload: UI-Various-0.13 by DORNER https://metacpan.org/release/DORNER/UI-Various-0.13
[12:48:53] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[13:14:11] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[13:16:02] *** Quits: tag (sid271787@id-271787.lymington.irccloud.com) (Ping timeout: 240 seconds)
[13:16:02] *** Quits: Yaakov (sid19863@user/Yaakov) (Ping timeout: 240 seconds)
[13:16:12] *** Joins: Yaakov (sid19863@user/Yaakov)
[13:16:37] *** Quits: mexen (uid495612@user/mexen) (Ping timeout: 240 seconds)
[13:16:37] *** Quits: homura (uid398348@user/homura) (Ping timeout: 240 seconds)
[13:17:36] *** Joins: tag (sid271787@id-271787.lymington.irccloud.com)
[13:17:43] *** Joins: mexen (uid495612@user/mexen)
[13:17:44] *** Joins: homura (uid398348@user/homura)
[13:19:06] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[13:23:25] *** Quits: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[13:38:22] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[13:44:10] *** Joins: furrymcgee (~devuan@cgn-89-1-208-165.nc.de)
[13:47:37] *** Quits: B_fd (~root@user/B-fd/x-5525092) (Quit: WeeChat 2.8)
[13:50:17] <rindolf> * Cannot join #reddit (You are banned). ==
[13:51:36] <rindolf> * Cannot join #reddit (You are banned). ==> 'friends come and go; enemies accumulate'
[13:55:34] <rindolf> * Cannot join #israel (You are banned).==> haven't .il learnt anything from https://en.wikipedia.org/wiki/Kamsa_and_Bar_Kamsa
[13:55:34] <Paperbot_> Link title(s): [ Kamsa and Bar Kamsa - Wikipedia ]
[14:01:39] <gamo> Request for documentation on UDP transactions in Perl
[14:03:09] <Botje> gamo: that's, again, rather vague.
[14:03:20] <Botje> gamo: the straight-forward answer is "IO::Socket::IP"
[14:03:53] <Botje> gamo: but probably there is a module to speak whatever protocol you need, integrated with an async framework if you need to do multiple transactions concurrently.
[14:03:56] <gamo> enough for me. That's a starting point. Thanks
[14:04:12] <Botje> so what are you requirements beyond "UDP"?
[14:04:44] <gamo> not sure. I know UDP is the future
[14:04:51] <xenu> lol
[14:05:21] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Quit: leaving)
[14:06:22] <gamo> xenu: html/3 I heard
[14:06:54] <gamo> sorry http/3
[14:07:02] <xenu> http/3 uses QUIC as its transport, which is built on top of udp, yes
[14:07:33] <gamo> What does mean QUIC???
[14:08:05] <xenu> https://en.wikipedia.org/wiki/QUIC
[14:08:05] <Paperbot_> Link title(s): [ QUIC - Wikipedia ]
[14:08:08] <Botje> gamo: and that is why I asked.
[14:08:24] <Botje> gamo: if you're really serious about implementing HTTP/3 yourself, you're in for a hard time.
[14:09:07] <xenu> the first hurdle will be finding the right ssl library because openssl can't be used for that (yet)
[14:09:12] <Botje> also, the far more common use case is to terminate HTTP/3 at the edge of your network and speak HTTP/1.1 (or HTTP/2) internally.
[14:09:18] <gamo> no, but... if I could do a copy & pate to another service
[14:09:38] <Botje> which means you get to use all of the web/HTTP stacks on CPAN instead.
[14:09:50] <Botje> what the hell does "copy & paste to another service" mean
[14:11:09] <gamo> yes, suppose I want to open a service for transactions and I want the UDP but don't need the web interface
[14:11:26] <Botje> *sigh*
[14:11:29] <Botje> why is UDP a requirement
[14:11:39] <Botje> do you understand the difference between TCP and UDP?
[14:11:52] <gamo> Because tcp fail and fail and fail
[14:12:00] <Botje> what does _that_ mean
[14:12:13] <Botje> are you willing (and able) to implement your own retransmission scheme? I really doubt it.
[14:12:21] <gamo> yes, basically udp does not wait 
[14:12:34] <Botje> wait for what?
[14:12:36] <xenu> udp isn't just "tcp but faster". there are trade offs
[14:12:42] <Botje> and why is "waiting" a problem?
[14:13:04] <Botje> can you *PLEASE* explain your problem from the top down instead of spewing poorly-motivated requirements at us?
[14:13:41] <gamo> I have no problems I want to investingate something worth it
[14:13:57] <Botje> ... explain the thing you want to investigate then.
[14:14:31] <gamo> the better way to do transactions. 
[14:14:40] <Botje> "better" by what metric
[14:14:46] <Botje> and compared to what
[14:15:03] <gamo> http/3 yet do the metrics for me
[14:15:15] <Botje> I don't understand.
[14:15:41] <Botje> you want to implement http/3 yourself? or an alternative to it?
[14:15:46] <Botje> for what purpose?
[14:16:12] <Botje> and again, is this just mental masturbation or are you trying to solve an actual (or perceived) problem
[14:16:20] <gamo> no, por a conventional client/server transaction
[14:16:36] <Botje> what the hell is a "conventional client/server transaction"
[14:16:42] <Botje> Explain it to me in small words.
[14:18:24] <gamo> as an example ntp
[14:18:53] <Botje> how the hell is ntp conventional
[14:19:09] <Botje> it is the one service where you actually very much care about roundtrip time.
[14:19:17] <Botje> because it is part of the business logic.
[14:20:09] <Botje> so, is round-trip time one metric you are optimizing for?
[14:20:12] <Botje> and if so, why?
[14:21:16] <gamo> not sure, only curious. So I take a look at IO::Socket::IP
[14:21:35] <Botje> oh for fuck's sake. go waste someone else's time.
[14:22:02] <gamo> thanks for your help
[14:26:00] *** Quits: judabuda (kowbunga@thunderirc.net) (Changing host)
[14:26:00] *** Joins: judabuda (kowbunga@user/judabuda)
[14:28:49] *** Joins: perlu_work (~perlu_wor@213.135.246.59)
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:37] *** Joins: frost (~frost@user/frost)
[14:30:58] *** Joins: csrf (~csrf@user/csrf)
[14:32:01] *** Joins: proller (~p@2a02:6b8:0:40c:e4e9:dfa0:20d6:1961)
[14:34:11] <Yaakov> Hey, Botje. You look a little overwrought.
[14:34:57] <Yaakov> Don't worry, I LOVE YOU WITH A GREAT HUGE LOVE. A personal invocation just for you.
[14:36:02] <perlu_work> I'm running App::Opan on kubernetes, which could be completely unrelated to my problem, and I'm getting the following errors: https://paste.debian.net/hidden/afdd0a34/
[14:36:03] <Paperbot_> Link title(s): [ Debian Pastezone ]
[14:36:21] * GumbyPAN CPAN Upload: CallBackery-0.41.3 by OETIKER https://metacpan.org/release/OETIKER/CallBackery-0.41.3
[14:36:54] <perlu_work> We are using OPAN_MIRROR, and OPAN_RECURRING_PULL=1
[14:37:49] <perlu_work> I'm struggling to understand what is happening in line 121 https://github.com/brunoramoslu/App-opan/blob/custom_pan_web_page_update/script/opan#L121
[14:37:50] <Paperbot_> Link title(s): [ App-opan/opan at custom_pan_web_page_update · brunoramoslu/App-opan · GitHub ]
[14:38:17] <perlu_work> the whole write_packages_file function seems "weird" to me
[14:39:19] <perlu_work> I already looked at lib/PAUSE/mldistwatch.pm as mentioned in the comment in app::opan https://github.com/andk/pause/blob/master/lib/PAUSE/mldistwatch.pm#L633
[14:39:20] <Paperbot_> Link title(s): [ pause/mldistwatch.pm at master · andk/pause · GitHub ]
[14:40:03] <perlu_work> but I might be going way over my capacity to understand the code...
[14:40:31] <ilmari> perlu_work: ${one} and ${two} are interpolated before the string gets handed to sprintf, so they become length modifiers for the %s substitutions
[14:41:22] * GumbyPAN welcomes JEVANS - John Evans to CPAN!
[14:41:22] * GumbyPAN welcomes DLEVINE - David Levine to CPAN!
[14:41:24] * GumbyPAN welcomes FULTONM - Mike Fulton to CPAN!
[14:42:39] <ilmari> not sure what the point of the `local *_ = sub { … };` is, rather than `my $print_entry = sub { … };`
[14:42:59] <ilmari> excess cuteness
[14:46:37] <perlu_work> Am I understanding the error messages correctly and the problem is that @_ parameters are undef, or at least [1] is ?
[14:48:12] <ilmari> looks like there are arrayrefs in in $entries that are only one item, not two
[14:51:08] <perlu_work> yes
[14:52:03] <perlu_work> going to the callers
[14:53:05] <perlu_work> this should be called from the mojo ioloop recurring timer https://github.com/brunoramoslu/App-opan/blob/custom_pan_web_page_update/script/opan#L298
[14:53:06] <Paperbot_> Link title(s): [ App-opan/opan at custom_pan_web_page_update · brunoramoslu/App-opan · GitHub ]
[14:53:21] <perlu_work> need a couple of minutes
[14:55:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[14:58:46] <perlu_work> so disabling the recurring pull make the crashes stop
[14:59:20] <perlu_work> the call flow should then be starting from the recurring timer, call to do_pull, do_pull calls do_fetch and then do_merge, and do_merge calls write_packages_file function that throws the error
[15:03:32] <perlu_work> I'll try to reproduce this locally on either my host or docker
[15:03:38] <perlu_work> will take a bit
[15:12:17] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Ping timeout: 240 seconds)
[15:21:57] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[15:22:39] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:24:35] *** Joins: henry404088 (~henry4040@175.181.188.127)
[15:25:49] *** Quits: henry40408 (~henry4040@175.182.108.239) (Ping timeout: 240 seconds)
[15:25:49] *** henry404088 is now known as henry40408
[15:27:03] <arthurpbs> what does fallback => 1 means in overload module ?
[15:29:13] <ilmari> arthurpbs: https://metacpan.org/pod/overload#fallback
[15:29:16] <Paperbot_> Link title(s): [ overload - Package for overloading Perl operations - metacpan.org ]
[15:29:40] <daemon> just guessing, but it probably means fall back to the original function?
[15:35:31] *** Joins: pj (~pj@ghettoforge/pj)
[15:36:00] <daemon> been burning the house on a code project since last monday, all the way across the weekend
[15:36:05] <daemon> now I have no idea what I have written or why
[15:36:13] * daemon blinks
[15:36:28] * GumbyPAN welcomes LEOLCA - Leonardo Araujo to CPAN!
[15:36:28] * GumbyPAN welcomes YOUPONG - Yusaku NAKAJIMA to CPAN!
[15:43:01] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[15:43:02] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 256 seconds)
[15:56:47] <Mandevil> How does one join CPAN?
[16:01:55] <Botje>  https://www.cpan.org/modules/04pause.html ?
[16:01:55] <Paperbot_> Link title(s): [ PAUSE ]
[16:02:23] <Botje> see "how to contribute" on cpan.og
[16:06:06] *** Quits: Guest9779 (~xdg@2a02:587:de00:400:1101:37b0:16ee:8966) (Read error: Connection reset by peer)
[16:09:23] *** Joins: mattil (~mattil@dy56vs7n95t4s7zgpb8ft-4.rev.dnainternet.fi)
[16:20:17] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 256 seconds)
[16:22:16] *** Joins: zakame (~zakame@user/zakame)
[16:24:09] <perlu_work> I'm running opan locally trying to reproduce the issue without luck
[16:25:04] <perlu_work> and I found out that opan returns a flat file when I get combined/modules/02packages.details.txt.gz and not a GZIP file; unsure if that is by design or a bug ...
[16:26:33] * GumbyPAN CPAN Upload: Regex-Object-1.00 by ALEXPAN https://metacpan.org/release/ALEXPAN/Regex-Object-1.00
[16:29:17] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Remote host closed the connection)
[16:37:50] <simcop2387> perlu_work: do you have opan behind a web server like nginx or apache?
[16:38:15] <simcop2387> if so it could be the webserver decompressing it for you before going to the client.
[16:38:17] <perlu_work> we have it behind an haproxy
[16:39:07] <perlu_work> ah no, for that part I did it directly in localhost:3000 and I get the same behavior
[16:39:37] <Botje> how did you test it, exactly?
[16:39:43] <perlu_work> so for the GZIP "issue" I already reproduced it directly without any load balancer or web server in between
[16:39:45] *** Quits: proller (~p@2a02:6b8:0:40c:e4e9:dfa0:20d6:1961) (Ping timeout: 268 seconds)
[16:40:19] <perlu_work> check here: https://paste.debian.net/hidden/6a1b7cb5/
[16:40:21] <Paperbot_> Link title(s): [ Debian Pastezone ]
[16:40:36] <simcop2387> certainly directly local i wouldn't expect that behavior
[16:41:25] <perlu_work> in the filesystem the file is a GZIP: https://paste.debian.net/hidden/83c08d78/
[16:41:27] <Paperbot_> Link title(s): [ Debian Pastezone ]
[16:41:45] <Botje> perlu_work: what if you explicitly set an Accept-Encoding: gzip header?
[16:41:53] <perlu_work> 1s
[16:41:55] <simcop2387> perlu_work: any chance you can do: curl -v -s localhost:3000/... 1>/dev/null; to view the headers returned?
[16:41:57] <Botje> perhaps opan is "helpfully" decompressing.
[16:42:04] <simcop2387> or curl is doing something
[16:42:12] *** simcop2387 sets mode: -oooo Botje perlu_work Paperbot_ simcop2387
[16:42:14] <perlu_work> let me test
[16:42:24] <simcop2387> forgot to do that last night after stupid spammer
[16:42:33] <Botje> yeah, was just going to remark.
[16:42:51] <Botje> but since I was highlighted by the ops factoid: who do I talk to to get my +o bit on this network?
[16:43:06] *** Joins: Guest17 (~Guest17@wificampus-097061.grenet.fr)
[16:43:11] <simcop2387> oh we didn't get you back on? one moment, i think i've got the ability to do so
[16:43:26] <simcop2387> you might not have had a registered account when we did that all
[16:43:27] <Botje> I had not registered when we switched.
[16:43:30] <Botje> indeed.
[16:43:36] <Botje> I created mine last week
[16:43:51] <xenu> what took you so long
[16:44:30] <Botje> -ENOTIME
[16:44:48] <simcop2387> yea that'll do it :) i just have to figure out the commands for chanserv again, it's all *DIFFERENT*
[16:44:48] <perlu_work> with the header to accep gzip and verbose output: https://paste.debian.net/hidden/52bda934/
[16:44:49] <Paperbot_> Link title(s): [ Debian Pastezone ]
[16:47:56] <simcop2387> Botje: try now
[16:48:00] *** Joins: monkey_ (~user@190.104.116.153)
[16:48:05] *** Quits: mattil (~mattil@dy56vs7n95t4s7zgpb8ft-4.rev.dnainternet.fi) (Remote host closed the connection)
[16:48:20] <simcop2387> i always forget that it's the damned FLAGS command for this chanserv
[16:48:34] *** Joins: mattil (~mattil@dy56vs7n95t4s7zgpb8ft-4.rev.dnainternet.fi)
[16:49:05] *** ChanServ sets mode: +o Botje
[16:49:14] <Botje> thanks!
[16:49:18] *** Botje sets mode: -o Botje
[16:49:56] <perlu_work> Ok, progress in the crash investigation
[16:50:15] <perlu_work> opan memory usage is spiking when the recurring pull is being done
[16:50:40] <simcop2387> that sounds almost like mojo is doing it but i didn't think it'd do that...
[16:51:42] <perlu_work> 512M is not enough to run opan with the recurring pull, this seems odd...
[16:52:15] <perlu_work> there's really no activity on it, no client doing requests
[16:52:41] *** Joins: proller (~p@2a02:6b8:0:40c:4efa:2971:68f2:8ad5)
[16:53:17] *** Joins: randir (~randir@196.149.61.168)
[16:53:19] *** Quits: mattil (~mattil@dy56vs7n95t4s7zgpb8ft-4.rev.dnainternet.fi) (Ping timeout: 268 seconds)
[16:57:25] <simcop2387> i see nothing obvious looking at the code that'd do that
[17:02:20] <perlu_work> simcop2387, you are talking tout the GZIP issue correct? I think I'll take note of it, reproduce it back home and then report it in github if I still have the same behavior?
[17:02:26] *** Quits: Guest17 (~Guest17@wificampus-097061.grenet.fr) (Quit: Client closed)
[17:02:34] *** Quits: randir (~randir@196.149.61.168) (Read error: Connection reset by peer)
[17:03:07] *** Joins: randir (~randir@196.149.61.168)
[17:06:05] <simcop2387> perlu_work: definitely report it.  it'll be good to know where the issue is once people more knowledgable figure it out
[17:06:31] <simcop2387> if you need help reporting it for some reason then come back here and i can berate the author for being hard to get a hold of
[17:07:50] <perlu_work> thanks, I'll do that if needed
[17:08:07] <perlu_work> and now back to my initial issue with the kubernetes crash, OOM kill :)
[17:08:27] *** Joins: randir_ (~randir@196.149.61.168)
[17:09:47] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[17:10:13] *** Quits: randir (~randir@196.149.61.168) (Ping timeout: 240 seconds)
[17:10:20] *** Joins: randir (~randir@95-26-4-13.broadband.corbina.ru)
[17:13:08] *** Quits: randir_ (~randir@196.149.61.168) (Ping timeout: 256 seconds)
[17:14:58] *** Joins: mattil (~mattil@37-33-148-201.bb.dnainternet.fi)
[17:15:32] *** Joins: mattil_ (~mattil@dy56vs7n95t4s7zgpb8ft-4.rev.dnainternet.fi)
[17:15:32] *** Quits: mattil (~mattil@37-33-148-201.bb.dnainternet.fi) (Read error: Connection reset by peer)
[17:16:10] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:16:39] * GumbyPAN CPAN Upload: kateb-01.00.28 by KIAVASH https://metacpan.org/release/KIAVASH/kateb-01.00.28
[17:18:54] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:19:49] *** Quits: mattil_ (~mattil@dy56vs7n95t4s7zgpb8ft-4.rev.dnainternet.fi) (Ping timeout: 240 seconds)
[17:22:54] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:24:45] <perlu_work> So increasing the k8s pod memory fixed the issue, no more OOM/Restarts when recurring pull is enabled, I'll take note to understand why it's using so "much" memory...
[17:24:50] <perlu_work> Thanks for the help
[17:26:06] <Botje> taking heap snapshots with Devel::MAT before and after might help.
[17:26:10] <Botje> s/after/during/
[17:26:37] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[17:27:53] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:29:16] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[17:29:26] *** Joins: hudo (~hhudo_@mail.allm-elektro.de)
[17:29:37] *** Joins: hudo_ (~hhudo_@mail.allm-elektro.de)
[17:32:30] <perlu_work> never used Devel::MAT, looks interesting, I'll add it to the my todo/watch list
[17:32:36] <LeoNerd> :)
[17:33:27] *** Joins: Darkcoal (~user@2001:16a2:7a6c:b600:a849:5aeb:cabf:442e)
[17:34:58] <Botje> Can probably also take heap dumps with a debugger, but eh.
[17:35:45] *** Parts: hethw (~heth@46.238.32.56) (Leaving)
[17:36:51] <x5c30> random speculation but i recall looking into opan and being concerned that it used (directly or indirectly dont remember) Archive::Tar, and there are some big distributions out there. that could make it a memory hog.
[17:38:57] *** Quits: proller (~p@2a02:6b8:0:40c:4efa:2971:68f2:8ad5) (Ping timeout: 240 seconds)
[17:42:50] *** Quits: Darkcoal (~user@2001:16a2:7a6c:b600:a849:5aeb:cabf:442e) (Ping timeout: 252 seconds)
[17:43:07] *** Joins: Darkcoal (~user@2001:16a2:7a6c:b600:a849:5aeb:cabf:442e)
[17:44:49] <Mandevil> Botje: I used the PAUSE registration form, but I think I never received any response.
[17:44:55] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (Quit: gamo)
[17:45:19] <LeoNerd> There's some manual steps involved, so you'll have to wait for people to be awake and press buttons
[17:46:33] <Mandevil> Yeah, but this was like... 3 weeks ago?
[17:46:37] <ilmari> Mandevil: did your requeset show up in https://www.nntp.perl.org/group/perl.modules/?
[17:46:37] <Paperbot_> Link title(s): [ perl.modules archive -  nntp.perl.org ]
[17:47:06] <Botje> Mandevil: a little thing called christmas and new year happened inbetween. people probably forgot
[17:47:06] <zgu> probably still waiting on the background check to come back form the FBI
[17:47:14] <Mandevil> Botje: Yes, it did!
[17:47:31] <Mandevil> Apparently Dec 7.
[17:50:59] <ilmari> Mandevil: I see applications from after that have been processed. write an email to modules@perl.org to chase
[17:51:10] *** Joins: monkey_ (~user@190.104.116.153)
[17:52:10] *** Joins: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8)
[17:52:10] *** Quits: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8) (Remote host closed the connection)
[17:52:54] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[17:52:56] <Mandevil> ilmari: OK. It's not very pressing because too busy at work.
[17:54:57] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[17:55:17] *** Quits: Darkcoal (~user@2001:16a2:7a6c:b600:a849:5aeb:cabf:442e) (Ping timeout: 240 seconds)
[17:56:42] * GumbyPAN CPAN Upload: IP-Geolocation-MMDB-0.008 by VOEGELAS https://metacpan.org/release/VOEGELAS/IP-Geolocation-MMDB-0.008
[17:57:25] *** Joins: Darkcoal (~user@2001:16a2:7a6c:b600:a849:5aeb:cabf:442e)
[18:01:17] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[18:11:04] <daemon> hey all how would I create CSV with https://metacpan.org/pod/Text::CSV_XS
[18:11:04] <Paperbot_> Link title(s): [ Text::CSV_XS - comma-separated values manipulation routines - metacpan.org ]
[18:11:13] <daemon> I want to create a BOM csv with headers
[18:11:33] <Botje> daemon: .. did you bother to read the synopsis?
[18:12:13] *** Quits: Darkcoal (~user@2001:16a2:7a6c:b600:a849:5aeb:cabf:442e) (Ping timeout: 240 seconds)
[18:12:16] <Botje> or is your question "how do I produce the abomination that is a BOM with that module"
[18:12:44] <daemon> wait BOM is bad?
[18:12:51] *** Joins: Darkcoal (~user@2001:16a2:7a6c:b600:a849:5aeb:cabf:442e)
[18:13:38] <Botje> what multi-byte encoding were you planning to use?
[18:13:59] <daemon> utf-8
[18:14:08] <Botje> utf-8 with a BOM is doube plus plus bad.
[18:14:24] <daemon> well I need to make a blank csv template that people in excel can use
[18:14:29] <daemon> that excel won't cock up on save
[18:14:37] <ilmari> some of the mini-synopses imply a `bom => 1` that can be used with `out`, but there's no explicit documentation of it
[18:14:45] *** Joins: pj (~pj@ghettoforge/pj)
[18:15:55] <daemon> I got told the best thing to do is make a csv  with 'headers'
[18:15:58] <daemon> which implies BOM
[18:16:03] <daemon> but if there is a different way let me know
[18:16:03] <Botje> ... not really
[18:16:06] <ilmari> does it?
[18:16:07] <daemon> I have no stakes in this >.>
[18:16:12] <ilmari> did you try `csv( in => \@array_of_arrayrefs, out => 'template.csv', bom => 1 )`
[18:16:17] <Botje> daemon: do your headers contain any special character?
[18:16:21] <daemon> Botje, no
[18:16:28] <daemon> a-z 0-9
[18:16:43] <daemon> I do not even need headers
[18:17:01] <daemon> but ... when people send stuff excel has made and then set to save as: .csv
[18:17:09] <daemon> it adds the BOM thing with blank headers
[18:17:15] <daemon> so the idea was to make a template csv file
[18:17:20] <daemon> that way excel will hopefully behave
[18:17:49] <Botje> shrug. if excel wants to add a bom, let it
[18:17:57] *** Quits: Darkcoal (~user@2001:16a2:7a6c:b600:a849:5aeb:cabf:442e) (Ping timeout: 240 seconds)
[18:17:57] <daemon> it adds a bom with no headers
[18:18:02] <daemon> and adds random crap all over the place
[18:18:04] <Botje> headers are just a convention.
[18:18:18] <Botje> if the first line contains text, treat as headers
[18:18:25] <daemon> ah these will contain text
[18:18:30] <Botje> also "excel","likes","to","quote","everything"
[18:18:37] <Botje> well, yes
[18:18:40] <Botje> what else did you think headers were?
[18:18:49] <daemon> I did not think there was such a thing in a csv
[18:19:35] <Botje> csv is ridiculously underspecified
[18:19:55] *** Joins: diskin (~diskin@185.49.242.51)
[18:19:59] <Botje> at least excel is consistent in how it outputs csv :
[18:20:12] *** Joins: Darkcoal (~user@167.86.160.179)
[18:20:18] <daemon> right
[18:20:23] <Botje> just about the only thing you may want to add is the "sep=" metadata.
[18:20:28] <daemon> so I will open up ee and make a csv with text headers  I just wrote in
[18:20:30] <daemon> no BOM
[18:20:32] <daemon> saved as ASCII
[18:20:36] <Botje> correct.
[18:20:36] <daemon> and send that as a test template
[18:22:11] <Botje> you're also going against the grain here
[18:22:33] <Botje> at least with a "full" excel template you can lock down fields and add validations
[18:22:47] <Botje> but of course I don't know what kind of corruption you're aiming to mitigate
[18:24:37] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 240 seconds)
[18:24:57] *** Joins: diskin_ (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)
[18:24:57] *** diskin is now known as Guest3939
[18:24:57] *** Quits: Guest3939 (~diskin@185.49.242.51) (Killed (strontium.libera.chat (Nickname regained by services)))
[18:24:57] *** diskin_ is now known as diskin
[18:25:31] <daemon> well the data  is pretty  specific
[18:25:37] <daemon> no weirdness or anything
[18:25:49] <daemon> there is no reason it cannot be absolutely clean
[18:25:56] <daemon> however ... its being done by humans in excel for the time being
[18:26:05] <daemon> I need time to go forwards 3 months
[18:26:12] <daemon> see this is meant to be really json
[18:26:25] <daemon> but that constructor/app has not been written yet, this is the old 'standard'
[18:31:46] * GumbyPAN CPAN Upload: App-SpamcupNG-0.009 by ARFREITAS https://metacpan.org/release/ARFREITAS/App-SpamcupNG-0.009
[18:35:41] <daemon> Botje, success excel behaved its self!
[18:35:47] <daemon> > "243mfqi43m2koqtmo3gmq;lt,mg;23",",mfp;ol",",m3]p","o,mp]om,gfp","om,fpo2m,f'p","2mf,l",2kmf,"2;l,f2",";lf,","2po3f,2","3]pfo,","2pfo,","2pfklm,",2f,,,,
[18:35:51] <daemon> .. me testing
[18:35:52] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 256 seconds)
[18:36:25] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[18:36:33] *** Joins: krismatrix (~krismatri@38.80.149.51)
[18:36:47] * GumbyPAN CPAN Upload: Alien-libmaxminddb-1.001 by VOEGELAS https://metacpan.org/release/VOEGELAS/Alien-libmaxminddb-1.001
[18:38:02] *** Quits: Sleepy63 (~Sleepy63@user/sleepy63) (Ping timeout: 240 seconds)
[18:38:06] *** Joins: zakame (~zakame@user/zakame)
[18:38:24] <Grinnz> daemon: the only way to make a csv that excel won't cock up is to instead make an xlsx
[18:39:08] <Grinnz> otherwise, you can find out what version of excel they're using and google a bunch and pray
[18:40:48] <xenu> i *think* if you use the .tsv extension and tabs instead of commas/semicolons it should be safe
[18:41:06] <Grinnz> thats not enough to make encoding work consistently
[18:41:43] <xenu> no one needs more than 127 characters
[18:43:11] <LeoNerd> Or, ... 95 actually if you ignore the C0 controls and DEL
[18:44:20] <genio> Man. Why does the AWS-GitHub connector app suck so badly for enterprise use?
[18:45:01] <genio> two of the largest corporations in all of computing own the two services and can't make them play nicely?
[18:45:47] <revhippie> 0x1c, we mourn your lack of use.
[18:46:39] <zgu> press 0x46 to pay respects
[18:46:41] <revhippie> Or maybe I mean 1f... maybe that's why.
[18:46:47] <genio> Excel is absolutely DUMB with CSV. You can't have it load anything properly if you simply double click the CSV file and have Excel open it that way. You have to open Excel, start a new sheet, go to Data and select from Text/CSV
[18:47:09] <genio> If you open it that way, you can get the data in the sheet right. Any other way and Excel doesn't know what CSV actually stands for
[18:47:30] <revhippie> genio: not to mention https://imgur.com/t/incel/uqf83Ay
[18:47:30] <Paperbot_> Link title(s): [ Incel & Excel - incorrectly assuming something is a date - Album on Imgur ]
[18:48:22] *** Joins: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com)
[18:48:46] <zgu> where they differ is in assuming someone gave you their phone number
[18:49:48] <zgu> (NXX) NXX-XXXX? that's a string. NXXNXXXXXX? looks like a number, right justify it. someone tried to be clever with +1NXXNXXXXXX? try to parse it as a formula
[18:50:28] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[18:50:48] <aquanight> at least .xlsx is theoretically machine-generatable now.
[18:51:05] <aquanight> ... by things other than Excel that is
[18:51:28] <zgu> don't you still need a patent license or something for the "open" format?
[18:52:08] *** Joins: Sleepy63 (~Sleepy63@user/sleepy63)
[18:52:11] <aquanight> wouldn't know anything about that...
[18:53:54] <choroba> you need an army of corporatish speakers to ever understand it
[18:53:56] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:54:12] *** Joins: silug (~silug@068-188-018-154.biz.spectrum.com)
[18:54:20] <krismatrix> Probably a dumb question. The CPAN module 'Redis' is only the binding for Redis right? I still need to install Redis seperately?
[18:54:55] <krismatrix> And probably do the initial setup outside of perl, and use perl only for the interactions?
[18:56:48] * GumbyPAN CPAN Upload: Bundle-CPAN-Reporter-Smoker-Tests-0.005 by ARFREITAS https://metacpan.org/release/ARFREITAS/Bundle-CPAN-Reporter-Smoker-Tests-0.005
[18:56:57] <Altreus> that would be my assumption
[18:57:26] <Altreus> depending on... stuff ... you might need the redis client dev headers
[18:57:56] <krismatrix> maybe.
[18:58:27] <krismatrix> For some reason, I thought redis could be installed in my project folder, but really it is a system wide database like postgresql.
[18:58:33] <x5c30> krismatrix: yes, you'll have to set up redis (similar to how you had to set up postgres, though redis is fairly simpler). based on previous convo, i'm guessing you might want to look at Mojo::Redis instead? :)
[18:58:48] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[18:58:59] <zgu> looks like Redis.pm is a client written in pure perl
[18:58:59] <krismatrix> yeah...I see Mojo::Redis too.
[18:59:53] <x5c30> client dev headers (like you needed libpq stuff) is only necessary if you want Redis::Protocol::XS, but even then you don't really, cause there's an Alien:: that will install what you need if you prefer it that way
[19:00:02] <x5c30> er...Protocol::Redis::XS
[19:00:20] <x5c30> regular Protocol::Redis is pure perl, and there's a Faster one too if you want that option
[19:00:22] <krismatrix> I did not understand that.
[19:00:40] <krismatrix> I'd like simple for now.
[19:00:53] <krismatrix> simple but serviceable.
[19:01:14] <x5c30> then i'd suggest Mojo::Redis (or just Redis will work too), and Protocol::Redis
[19:01:19] <krismatrix> ok.
[19:02:04] <krismatrix> Anyway, so I need to actually install Redis separately on ubuntu. I have installed the perl modules. But once I install Redis, I can poke around.
[19:04:14] *** Joins: hudo__ (~hudo@62.68.18.50)
[19:09:24] *** Quits: TieUpYourCamel (~david@2600:1702:26a0:2000:1096:c3b4:5a77:adea) (Quit: Leaving)
[19:19:43] <krismatrix> it seems like the expire command in Mojo::redis doesn't work.
[19:20:02] <krismatrix> Can't locate object method "expire" via package "Mojo::Redis" at test.pl line 8.
[19:20:27] <krismatrix> $redis->db->set(foo => 42);
[19:20:27] <krismatrix> $redis->expire(foo => 300);
[19:20:27] <krismatrix> warn $redis->db->get('foo');
[19:20:31] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[19:20:54] <ilmari> that should probably be $mojo->db->expire
[19:21:35] <krismatrix> hmm..but I don't have a $mojo. And this is just me emulating the docs on cpan.
[19:21:37] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 256 seconds)
[19:21:50] <ilmari> eh, $redis->db->expire, I mean
[19:22:00] <krismatrix> that makes more sense.
[19:22:03] <krismatrix> let me try
[19:22:04] <ilmari> that's a doc bug, missing ->db on the ->expire call
[19:22:41] <krismatrix> thank you.
[19:23:33] *** Joins: zakame (~zakame@user/zakame)
[19:25:24] *** Joins: TieUpYourCamel (~david@2600:1702:26a0:2000:4153:fac0:584:2d2b)
[19:28:20] *** Quits: eseyman (~manu@lfbn-idf1-1-532-49.w86-242.abo.wanadoo.fr) (Read error: Connection reset by peer)
[19:41:49] *** Quits: japh (~scp1@user/japh) (Ping timeout: 240 seconds)
[19:43:51] *** Joins: japh (~scp1@user/japh)
[19:46:33] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 256 seconds)
[19:48:23] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[19:51:34] <daemon> eval: my @x = (1,2,3,4,5,'','',''); pop @x; [@x
[19:51:36] <perlbot> daemon: ERROR: syntax error at (IRC) line 1, at EOF Missing right curly or square bracket at (IRC) line 1, at end of line 
[19:51:37] <daemon> eval: my @x = (1,2,3,4,5,'','',''); pop @x; [@x]
[19:51:38] <perlbot> daemon: [1,2,3,4,5,"",""]
[19:51:54] * GumbyPAN CPAN Upload: Overload-FileCheck-0.011 by ATOOMIC https://metacpan.org/release/ATOOMIC/Overload-FileCheck-0.011
[19:55:26] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[19:57:45] <daemon> eval: my $raw_compress = 'a cv s sd sd           '; my $space_count = () = $raw_compress =~ m/(\s+)$/; $space_count
[19:57:47] <perlbot> daemon: 1
[19:58:16] <daemon> eval: my $raw_compress = 'a cv s sd sd           '; my $space_count = () = reverse $raw_compress =~ m/^(\s+)/; $space_count
[19:58:17] <perlbot> daemon: 0
[19:59:00] <choroba> you can /msg perlbot
[19:59:02] <perlbot> choroba: I am #perl's infobot and utility bot. I only answer if addressed. Type "perlbot: perl" to learn about "perl", "perlbot: re" to learn about "re", etc. I was originally written by Chris62vw but am currently maintained by simcop2387 and the codebase is based on "buubot".  For more information see, perlbot: source
[20:00:15] <ilmari> or use a repl
[20:00:17] <ilmari> perlbot: repl?
[20:00:17] <perlbot> ilmari: Read-Eval-Print-Loop - see reply from Reply, re.pl from Devel::REPL, tinyrepl from Eval::WithLexicals, or perlsh from App::perlsh | an anagram of perl!
[20:00:37] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 240 seconds)
[20:02:52] *** Joins: zakame (~zakame@user/zakame)
[20:03:29] <daemon> or regex101 site
[20:04:43] *** Joins: eseyman (~manu@lfbn-idf1-1-532-49.w86-242.abo.wanadoo.fr)
[20:06:14] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[20:09:10] <Altreus> you need /g if you want it to count more than one
[20:09:17] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[20:10:13] <aquanight> perlbot: sweval my @x = (5..10); @x = (pop @x), @x; [ @x ]
[20:10:15] <perlbot> aquanight: Useless use of private array in void context at (IRC) line 1. [10]
[20:10:32] <aquanight> perlbot: sweval my @x = (5..10); @x = ((pop @x), @x); [ @x ]
[20:10:33] <perlbot> aquanight: [10,5,6,7,8,9]
[20:11:24] <aquanight> admittedly that's probably better done as unshift @x, pop @x;
[20:11:26] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[20:13:06] <aquanight> eval: my $raw_compress = 'a cv s sd sd           '; my $space_count = () = reverse($raw_compress) =~ m/^(\s+)/; $space_count
[20:13:08] <perlbot> aquanight: 1
[20:14:04] *** Joins: Figworm (~inoor@user/figworm)
[20:14:35] <ilmari> «If the "/g" option is not used, "m//" in list context returns a list consisting of the subexpressions matched by the parentheses in the pattern» - L<perlfunc/m>
[20:15:49] <Altreus> oh should be the same then
[20:15:57] <Altreus> oh he used anchors, never mind :)
[20:16:15] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[20:16:17] <ilmari> there is one group, consisting of a sequence of spaces
[20:17:47] <Altreus> ... right, it means multiple sets of parens, not multiple matches
[20:17:56] <Altreus> in any case, he can't get more than one of either of those
[20:18:03] <ilmari> nor the length of the matched string
[20:18:06] <ilmari> s/matched/captured/
[20:19:02] <ilmari> my $raw_compress = 'a cv s sd sd           '; length($raw_compress =~ /(\s*)$/ and $1)
[20:19:08] <ilmari> sweval:  my $raw_compress = 'a cv s sd sd           '; length($raw_compress =~ /(\s*)$/ and $1)
[20:19:10] <perlbot> ilmari: 11
[20:19:32] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[20:19:36] <ilmari> sweval:  my $raw_compress = 'a cv s sd sd           '; length($raw_compress =~ s/.*?(\s*)$/$1/r)
[20:19:37] <perlbot> ilmari: 11
[20:20:37] *** Quits: randir (~randir@95-26-4-13.broadband.corbina.ru) (Ping timeout: 240 seconds)
[20:20:51] <aquanight> if the problem he was after was figuring out why reversing the string and anchor didn't produce the same result, the cause of that was operator precedence (=~ > reverse)
[20:21:08] *** Joins: PapaChub (~PapaChub@vzw-54.parabon.com)
[20:21:14] *** Joins: magla (~gelignite@55d483f5.access.ecotel.net)
[20:22:21] <Altreus> we'll never know
[20:22:23] <Altreus> unless we ask
[20:22:25] <Altreus> daemon: figure it out?
[20:22:33] *** Joins: pj (~pj@ghettoforge/pj)
[20:22:46] <aquanight> reverse is probably one of the worst examples of context-sensitive operation
[20:23:06] <aquanight> second only to m//g
[20:23:25] <LeoNerd> also print()
[20:23:35] <aquanight> why print?
[20:23:46] <LeoNerd> print reverse "a string"   <== reverse() is in list context
[20:23:56] <aquanight> oh that
[20:24:01] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Quit: Leaving)
[20:24:06] <Altreus> well yeah, it should be "print a reverse string"
[20:24:11] <Altreus> you expect it to read your mind?
[20:24:22] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[20:24:29] <aquanight> LeoNerd: or it could print "a string" to the filehandle in *reverse
[20:24:48] <Altreus> ...
[20:24:54] <aquanight> I mean
[20:24:56] <aquanight> unlikely
[20:25:07] <Altreus> sweval: open reverse, '>', \my $str;
[20:25:07] <gordonfish> sweval: my $raw_compress = 'a cv s sd sd           '; [ $raw_compress =~ /(\s+)$/ and length $1 ];
[20:25:08] <perlbot> Altreus: Use of uninitialized value in reverse at (IRC) line 1. ERROR: Can't use string ("") as a symbol ref while "strict refs" in use at (IRC) line 1. 
[20:25:09] <perlbot> gordonfish: [11]
[20:25:09] <aquanight> I think you'd have to spell it *reverse to get that version
[20:26:57] * GumbyPAN CPAN Upload: Text-Hyphen-PT-1.02 by LEOLCA https://metacpan.org/release/LEOLCA/Text-Hyphen-PT-1.02
[20:27:04] <aquanight> but yeah I don't really blame print reverse "blah" on print. That's just, again, reverse being bad.
[20:27:36] <LeoNerd> Ultimately I think it's a nice example of why context-sensitive functions are in fact probably not a good design
[20:27:40] <aquanight> I mean, one could easily have done something like "okay it's list context but there's literally only one thing and we even knew *at parse time* there was only one thing so maybe we should do the thing that makes sense"
[20:27:53] <LeoNerd> reverse() being listy and 'strrev' or somesuch being stringy, would have solved that problem
[20:28:22] <aquanight> kinda like how split // can auto-pickup the limit from the assignment
[20:28:23] <Altreus> oh it's a wantarray problem
[20:28:27] <Altreus> just hidden
[20:28:37] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:28:51] <Altreus> aquanight: i mentioned this the other day - LeoNerd showed me Want.pm
[20:29:15] <gordonfish> For want of a better way
[20:30:18] *** Quits: tobybl (~tobybl@237.202.200.146.dyn.plus.net) (Remote host closed the connection)
[20:30:55] <aquanight> LeoNerd: m//g is also awful as you don't have the option of "iterate one match at a time and assign captures to a variable list rather than force me to mess with $1/@{^CAPTURE}"
[20:31:28] <aquanight> instead you have to spell that as: my ($cap, $list) = do { $text =~ m/whatever/g ? @{^CAPTURE} : () }
[20:32:24] <aquanight> it's readline all over again
[20:34:50] <gordonfish> aquanight: You can use while (/.../g) { ... } for some of that
[20:35:03] <gordonfish> Re: one match at a time
[20:38:13] <Altreus> put that in a gather and you're sorted
[20:38:36] * ology practices knowing "... not when there is nothing left to add, but when there is nothing left to take away."
[20:40:22] *** Joins: gamo (~Thunderbi@cm-93-156-61-102.telecable.es)
[20:40:49] <Altreus> Sorry this CR is so long, but I did not have time to make it shorter
[20:40:56] <Altreus> PR*
[20:41:03] <Altreus> CR is when you look at a PR
[20:41:11] <ology> "code review" yep
[20:43:24] <aquanight> gordonfish: the problem is you can't do that and also ($assign, $captures, $to, $variables) = /../;
[20:43:37] <aquanight> at least, not in the same step
[20:45:00] <Altreus> oh now I understand
[20:47:10] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:a580:94ef:e9e9:f6e2)
[20:48:47] *** Quits: perlu_work (~perlu_wor@213.135.246.59) (Quit: Client closed)
[20:48:54] <gordonfish> aquanight: What do you mean exactly with that?
[20:50:55] *** Quits: PapaChub (~PapaChub@vzw-54.parabon.com) (Quit: Leaving)
[20:52:16] <gordonfish> aquanight: You have access to captures for each iteration
[20:53:27] <Altreus> right
[20:53:34] <Altreus> but then it's in list context
[20:53:41] <Altreus> So you can't get a list of captures from one iteration
[20:53:53] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[20:54:01] <Altreus> how do you put /g in scalar context but m// in list context?
[20:56:27] <gordonfish> You can do something like while (my @matches = $x =~ /\G.../) { pos($x) = $+[0]; ... }
[20:56:47] <gordonfish> err /\G.../g
[20:56:53] *** Joins: e1f (~user@141.117.1.134)
[20:56:59] <gordonfish> or not
[20:57:08] <gordonfish> (no /g )
[20:58:55] <Altreus> yeah, might as well use that @{^CAPTURE} thing then eh
[20:59:18] *** Joins: YaoNai (~YaoNai@user/yaonai)
[20:59:21] *** Quits: YaoNai (~YaoNai@user/yaonai) (Client Quit)
[21:01:03] <gordonfish> Altreus: I honestly forgot @{^CAPTURE} existed
[21:02:02] <gordonfish> sweval: $_ = 'a1 b23 c4 d56'; while (/(\S)(\d)(\d)?/g) { printf "Matches [%s]", join ',', @{^CAPTURE}; }
[21:02:03] <perlbot> gordonfish: Matches [a,1]Matches [b,2,3]Matches [c,4]Matches [d,5,6]
[21:02:12] <gordonfish> Looks rather nice.
[21:02:33] *** Joins: martinus__ (~martin@171.25.202.77.rev.sfr.net)
[21:03:29] <gordonfish> @{^CAPTURE} goes as far back as 5.26, so looks viable.
[21:03:32] <gordonfish> sweval5.26: $_ = 'a1 b23 c4 d56'; while (/(\S)(\d)(\d)?/g) { printf "Matches [%s]", join ',', @{^CAPTURE}; }
[21:03:35] <Altreus> nicer than setting pos, for sure
[21:03:36] <perlbot> gordonfish: Matches [a,1]Matches [b,2,3]Matches [c,4]Matches [d,5,6]
[21:04:07] <daemon> what would I use if I wanted to remove unicode from an ascii string, stuff like U+FFFD : REPLACEMENT CHARACTER
[21:04:16] <daemon> basically want to say 'if its not ascii get rid of it'
[21:04:35] <Altreus> There's a term for that, er
[21:04:40] *** Joins: randir (~randir@95-26-4-13.broadband.corbina.ru)
[21:04:45] <Altreus> eh, you might as well just regex it out
[21:04:58] <Altreus> s/[^[:ascii:]]//g maybe
[21:05:04] * Altreus checks
[21:05:07] <daemon> ah cool was not expecting regex
[21:05:38] <Altreus> yeah https://perldoc.perl.org/perlrecharclass#POSIX-Character-Classes
[21:05:38] <Paperbot_> Link title(s): [ perlrecharclass - Perl Regular Expression Character Classes - Perldoc Browser ]
[21:06:14] <daemon> eval: my $str = 'eye_examined|code�,�at0014' $str =~ s/[^[:ascii:]]//g; $str
[21:06:15] <perlbot> daemon: Scalar found where operator expected at (IRC) line 1, near "'eye_examined|code�,�at0014' $str" 	(Missing operator before  $str?) ERROR: syntax error at (IRC) line 1, near "'eye_examined|code�,�at0014' $str " 
[21:06:23] <daemon> eval: my $str = 'eye_examined|code�,�at0014'; $str =~ s/[^[:ascii:]]//g; $str
[21:06:24] <perlbot> daemon: eye_examined|code,at0014
[21:06:28] <daemon> cool
[21:06:50] <Altreus> have you considered applying the clue-by-four to the source?
[21:06:58] <gordonfish> If you really need to support older perls, though:
[21:06:58] <daemon> the what nopw
[21:07:00] <gordonfish> sweval5.8: $_ = 'a1 b23 c4 d56'; while (my @matches = /\G.*?(\S)(\d)(\d)?/) { pos($_) = $+[0]; printf "Matches [%s]", join ',', grep defined, @matches; } '';
[21:07:01] <perlbot> gordonfish: Matches [a,1]Matches [b,2,3]Matches [c,4]Matches [d,5,6]
[21:07:03] <Altreus> the clue-by-four
[21:07:14] <gordonfish> Otherwise @{^CAPTURE} is the way to go
[21:07:15] <daemon> perlbot clue-by-four
[21:07:15] <perlbot> daemon: No factoid found. Did you mean one of these: [clap] [clever] [clabino] [clobber] [cleverbot] [celebs] [coolfactor] [help for markup]
[21:07:19] <Altreus> It's big and heavy and you apply it with force to anyone failing to learn
[21:07:27] <daemon> ah
[21:07:43] <daemon> you know 2 by 4's are not really that heavy, @{
[21:07:43] <gordonfish> I once had a client that had a "clue bat" hanging in the server room, left by previous admins
[21:07:44] <daemon> :P
[21:08:20] <ology> A clue and battery
[21:09:31] <gordonfish> If you bludgened someone with a leadacid cell from a car, would you be.. charged.. with assult and battery, or assult with battery?
[21:09:38] <Altreus> daemon: depends what they're made of
[21:09:54] <gordonfish> assault*
[21:09:58] <Altreus> assault or battery
[21:10:07] <Altreus> assault xor battery :D
[21:10:41] <Altreus> you won't be charged with assault because it's an acid, not a base
[21:17:02] * GumbyPAN CPAN Upload: Mail-Exim-ACL-Attachments-1.000 by VOEGELAS https://metacpan.org/release/VOEGELAS/Mail-Exim-ACL-Attachments-1.000
[21:17:02] * GumbyPAN CPAN Upload: Mail-Exim-ACL-Geolocation-1.000 by VOEGELAS https://metacpan.org/release/VOEGELAS/Mail-Exim-ACL-Geolocation-1.000
[21:17:29] *** Quits: quernd (~quernd@boethin.uberspace.de) (Quit: The Lounge - https://thelounge.chat)
[21:17:32] *** Joins: rwbrambler (~Thunderbi@65.183.138.202)
[21:20:13] *** Joins: quernd (~quernd@boethin.uberspace.de)
[21:22:54] *** Quits: Darkcoal (~user@167.86.160.179) (Read error: Connection reset by peer)
[21:34:47] *** Quits: e1f (~user@141.117.1.134) (Ping timeout: 256 seconds)
[21:48:44] <v^> https://i.imgur.com/xHWawtk.jpg
[21:48:51] *** Quits: aspic (~shifty~~~@ppp121-44-119-37.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 250 seconds)
[21:49:48] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:56:22] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[22:15:30] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[22:18:20] *** Parts: art1 (~romeyke@p200300ccdf0541007b5eba8c924825b2.dip0.t-ipconnect.de) ()
[22:27:04] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 256 seconds)
[22:33:04] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[22:43:26] *** Joins: e1f (~user@141.117.1.184)
[22:44:40] *** choroba is now known as choroba_
[22:45:11] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[22:45:26] *** Quits: choroba_ (~E.Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[22:46:44] <aindilis> sivoais: ping
[22:57:13] * GumbyPAN CPAN Upload: Net-SSLeay-1.91_03 by CHRISN https://metacpan.org/release/CHRISN/Net-SSLeay-1.91_03
[23:00:37] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[23:02:00] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[23:10:33] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 256 seconds)
[23:11:38] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[23:13:33] *** Joins: pj (~pj@ghettoforge/pj)
[23:18:03] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[23:23:28] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[23:26:30] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[23:29:46] <sivoais> hi aindilis!
[23:32:40] *** Joins: monkey_ (~user@190.104.116.153)
[23:42:24] *** Joins: deadmarshal (~deadmarsh@95.38.231.124)
[23:46:49] *** Quits: deadmarshal (~deadmarsh@95.38.231.124) (Ping timeout: 256 seconds)
[23:53:22] *** Quits: Figworm (~inoor@user/figworm) (Quit: Figworm)
[23:55:08] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[23:56:33] *** Joins: clscott (~cs@bras-base-otwaon0150w-grc-07-184-147-147-68.dsl.bell.ca)
[23:58:17] *** Quits: clscott (~cs@bras-base-otwaon0150w-grc-07-184-147-147-68.dsl.bell.ca) (Client Quit)
[23:58:42] *** Joins: clscott (~clscott@bras-base-otwaon0150w-grc-07-184-147-147-68.dsl.bell.ca)
[23:59:04] *** Quits: clscott (~clscott@bras-base-otwaon0150w-grc-07-184-147-147-68.dsl.bell.ca) (Client Quit)
[23:59:26] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
