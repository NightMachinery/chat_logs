[00:36:00] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[00:44:07] *** Joins: morganu (~Morgan@2603-8001-7407-5879-a244-c21c-3c66-1811.res6.spectrum.com)
[01:00:31] *** Quits: mcint1 (mcint@pox.ocf.berkeley.edu) (Quit: WeeChat 2.3)
[01:00:50] *** Joins: mcint (mcint@user/mcint)
[01:03:04] *** Quits: mcint (mcint@user/mcint) (Client Quit)
[01:03:23] *** Joins: mcint (mcint@user/mcint)
[01:22:58] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[01:46:53] *** Quits: morganu (~Morgan@2603-8001-7407-5879-a244-c21c-3c66-1811.res6.spectrum.com) (Ping timeout: 250 seconds)
[02:44:11] *** Joins: morganu (~Morgan@2603-8001-7407-5879-abd2-ebfd-da0f-995d.res6.spectrum.com)
[03:08:16] <MaxLeiter> Does anyone know how to have a docker container in a docker-compose wait for another container to build and start before it builds
[03:08:24] <MaxLeiter> my client relies on the server being up
[03:21:52] <xnaas> yes
[03:22:06] <xnaas> you can see some examples in https://github.com/xnaas/docker-compose.yml/blob/master/docker-compose.yml MaxLeiter
[03:22:09] <xnaas> you need healchecks
[03:22:12] <xnaas> and depends_on
[03:22:16] <xnaas> healthchecks
[03:22:33] <MaxLeiter> hmm I was working with depends_on but it just seemed to affect running not building 
[03:22:38] <MaxLeiter> ill try proper healthchecks
[03:22:44] <MaxLeiter> ty
[03:22:47] <xnaas> yeah, gonna need a real healthcheck to know for sure
[03:22:55] <xnaas> np
[03:23:39] <xnaas> for examples, I have several setup for redis.postgres
[03:23:50] <xnaas> redis/postgres**
[03:23:52] * xnaas can type
[04:08:51] <MaxLeiter> xnaas: thoughts on https://stackoverflow.com/a/59072727?
[04:11:34] <xnaas> https://github.com/compose-spec/compose-spec/blob/master/spec.md#long-syntax-1 it's part of the latest spec and I don't see anything about it not being supporting in v3
[04:11:37] <xnaas> also works for me in v3
[04:11:42] <xnaas> if it wasn't valid, I'd get a warning lol
[04:11:49] <xnaas> but you can set your version to anything
[04:12:01] <xnaas> you can use 2.x if it makes you feel better and you don't need anything from 3
[04:13:59] <xnaas> but idk, https://docs.docker.com/compose/startup-order/ also mentions using a separate command: line
[04:14:14] <xnaas> but if you don't need anything from 3.x, you can also just set 2.x
[04:17:59] <MaxLeiter> i hate docker
[04:18:30] <MaxLeiter> does this look right https://paste.maxleiter.com/post/f1db5652-6c64-446f-b909-c8b04e800987#docker-compose.yml
[04:18:51] <MaxLeiter> ignore my convo with autopilot in the middle d:
[04:20:05] <xnaas> It looks like you'll want the version to be 2.4 if you want the condition: service_healthy to actually work, I guess, according to docker
[04:20:30] <xnaas> for 3.x I guess you need to use https://docs.docker.com/compose/startup-order/
[04:20:42] <xnaas> I suppose I just haven't run into the issue yet haha
[04:20:58] <xnaas> I'd change my version to test, but don't want to reboot my whole stack :P
[04:21:36] <xnaas> but yeah, looks right to me
[04:21:45] <MaxLeiter> these docs are throwing me on a goose chase
[04:21:47] <xnaas> note: expose only exposes the container's port to taht docker network
[04:21:53] <xnaas> yeah, docker docs suck ass
[04:22:07] <xnaas> and the default docker network doesn't let containers talk to each other either
[04:22:20] <xnaas> so you'll want ports: instead of expose: depending on what you're doing
[04:22:23] <MaxLeiter> oh, so i cant access the front-end this way?
[04:22:32] <MaxLeiter> i guess i want server to be expose but client to be ports
[04:22:44] <xnaas> they'll have to be in the same non-default network as well
[04:23:09] <xnaas> but yeah, expose to keep the port from being open on host
[04:23:14] <xnaas> and ports to open a port on host
[04:23:45] <xnaas> btw pls postgres for Drift when you add a db 🤪
[04:23:59] <MaxLeiter> i didnt want to go through the pain of setting up a postgres server
[04:24:02] <MaxLeiter> / requiring you to 
[04:24:06] <xnaas> 😢
[04:24:20] <MaxLeiter> if you submit the docker compose to set an env var to POSTGRES ill do it d:
[04:24:20] <xnaas> 💔, etc.
[04:24:37] <MaxLeiter> its two lines of code that needs to change really 
[04:24:44] <MaxLeiter> i just didnt want to mess with the setup
[04:24:46] <MaxLeiter> thanks to using an ORM
[04:24:49] <xnaas> you're fine lol
[04:25:07] <xnaas> anyway, once the containers are in the non-default network, shouldn't be any issue with them talking to each other
[04:25:13] <xnaas> can even refer to them by container name
[04:25:33] <xnaas> so client can say server:1234 or whatever and know what it needs to talk to
[04:25:37] <MaxLeiter> do you mean the networks blocks
[04:25:40] <xnaas> yeah
[04:25:53] <MaxLeiter> where do you initialize them
[04:25:57] <MaxLeiter> or do you just need to declare them per service
[04:26:00] <xnaas> the default docker network, if you specify nothing, doesn't allow containers to talk to each other
[04:26:05] <xnaas> security or something
[04:26:17] <xnaas> you have to define a network and then add to each container
[04:26:55] <xnaas> containers can be in multiple networks as well
[04:27:08] <xnaas> that's why networks: is a list in a container definition :D
[04:27:27] <MaxLeiter> oh i had to scroll to bottom of the compose
[04:28:28] <xnaas> So I guess you technically want it like this https://gist.github.com/5a8c6323380d7c3453dd9d3a85d32d0e
[04:29:22] <MaxLeiter> Creating network "drift_general" with driver "bridge" huh okay cool
[04:29:41] <xnaas> btw docker loves to leave shit all over the place
[04:29:53] <xnaas> docker system df to see how much shit is wasted
[04:29:53] <MaxLeiter> https://chat.maxleiter.com/uploads/cd2bba756a34625e/image.png 
[04:29:55] <MaxLeiter> 300mb lmao
[04:30:14] <MaxLeiter> hmm nope, client still couldnt build due to not seeing server
[04:30:20] <MaxLeiter> FetchError: request to http://localhost:3000/posts/ failed, reason: connect ECONNREFUSED 127.0.0.1:3000
[04:30:22] <xnaas> joplin is fuckin' dumb, dude https://xnaas.info/tmp/7WX.webp
[04:30:29] <xnaas> 1.2GB like wtf
[04:30:42] <MaxLeiter> jeez
[04:30:56] <xnaas> replace localhost with "server"
[04:31:05] <MaxLeiter> in code or docker-compose
[04:31:07] <xnaas> might need to specify container_name though
[04:31:10] <MaxLeiter> ah in healthcehck
[04:31:23] <xnaas> - "API_URL=http://localhost:3000"
[04:31:27] <xnaas> :P
[04:31:43] <MaxLeiter> yeah realized that after i set container name in server block
[04:32:19] * xnaas updates his github gist
[04:32:36] <MaxLeiter> same error
[04:32:38] <MaxLeiter> hm
[04:33:03] <MaxLeiter> oh
[04:33:07] <MaxLeiter> probably an env thing
[04:34:11] <xnaas> personally, I hate setting environment variables in the docker-compose.yml and switched to environment files 🙃 (also good for not accidentally sharing secret info)
[04:35:14] <MaxLeiter> yeah ill switch to that once it works
[04:35:21] <MaxLeiter> didnt know it was a thing until I saw yours
[04:35:56] <MaxLeiter> i dont need anything in the Dockerfile in order for `yarn build` in it to see the env set in docker-compose, right?
[04:36:08] <MaxLeiter> (im trying to track down why API_URL isnt being set properly)
[04:36:27] <xnaas> docker exec -it <container_name> echo $API_URL
[04:36:42] <xnaas> just to see what it sees
[04:36:51] <xnaas> it should be passed through
[04:36:52] <MaxLeiter> i know what it sees
[04:36:58] <MaxLeiter> trying to see why it sees that
[04:37:03] <MaxLeiter> aha 
[04:37:06] <MaxLeiter> i had a .env.local being copied over
[04:37:10] <xnaas> 😬
[04:37:10] <MaxLeiter> added to docker ignore
[04:37:43] <MaxLeiter> although now its being read as undefined/
[04:38:12] <MaxLeiter> and its not starting bc client fails so i cant docker exec
[04:40:14] <xnaas> what's failing, exactly — yarn can't build it or?
[04:41:13] <MaxLeiter> yeah yarn build, as a string that needs to start with http is undefined
[04:41:21] <MaxLeiter> (using process.env.API_URL)
[04:41:48] <xnaas> So yarn doesn't like http://server:3000 eh
[04:42:26] <MaxLeiter> i think its the dockerfile right 
[04:42:30] <MaxLeiter> because the env var is undefined
[04:43:29] <xnaas> can try without quotes
[04:43:48] *** Quits: Arch1mede (~arch1mede@user/Arch1mede) (Quit: Ping timeout (120 seconds))
[04:44:03] *** Quits: r00tobo (~r00tobo@r00tobo.on.ftp.sh) (Excess Flood)
[04:44:08] *** Joins: Arch1mede (~arch1mede@user/Arch1mede)
[04:44:08] *** Joins: tetrapod2 (~tetrapod@user/tetrapod)
[04:44:27] <xnaas> https://docs.docker.com/compose/compose-file/compose-file-v2/#environment
[04:44:27] <MaxLeiter> same problem
[04:44:28] *** Joins: r00tobo (~r00tobo@r00tobo.on.ftp.sh)
[04:44:32] <xnaas> those are the 2 ways it can be formatted
[04:44:35] <MaxLeiter> if i manually set ENV in dockerfile it uses the variable 
[04:44:44] *** Quits: luva (~luva@185.168.9.235) (Read error: Connection reset by peer)
[04:44:58] <xnaas>     Note
[04:44:58] <xnaas>     If your service specifies a build option, variables defined in environment are not automatically visible during the build. Use the args sub-option of build to define build-time environment variables.
[04:45:21] *** Joins: luva (~luva@185.168.9.235)
[04:45:30] <MaxLeiter> tf
[04:45:40] *** Quits: wendy (~thelounge@thelounge/bot) (Remote host closed the connection)
[04:45:40] <xnaas> So that would be the problem. environment: passed into an already built container
[04:45:50] <xnaas> and your yarn thing is failing during the build, so 😅
[04:45:53] *** Joins: wendy (~thelounge@thelounge/bot)
[04:45:54] *** ChanServ sets mode: +o wendy
[04:45:58] *** Quits: tetrapod (~tetrapod@user/tetrapod) (Ping timeout: 260 seconds)
[04:45:58] *** tetrapod2 is now known as tetrapod
[04:46:51] <xnaas> Your options are: include that as a build arg or don't have yarn need to talk to the server component to build? idk
[04:47:08] <MaxLeiter> its not yarn talking to the server really, but I need info from the server to pre-render pages
[04:47:08] <xnaas> I think you'll run into an issue trying to build and host the containers on, say, github
[04:47:24] <MaxLeiter> grrr
[04:48:01] <MaxLeiter> build arg it is
[04:51:09] <MaxLeiter> okay, declared ARG API_URL in Dockerfile and set it under build: arg: API_FILE in docker-compose
[04:51:36] <xnaas> since there will be no running docker network and communication etc. 🙃
[04:51:36] <xnaas> sounds like you might need to re-think the build process, but idk – kinda up to you 😅
[04:51:36] <xnaas> most people do not like building their own images
[04:51:36] <xnaas> :D
[04:51:36] <xnaas> see: this mess :D
[04:51:36] <MaxLeiter> FetchError: request to http://server:3000/posts/ failed, reason: getaddrinfo ENOTFOUND server
[04:51:58] <MaxLeiter> 😢
[04:52:10] <MaxLeiter> well it builds great w/o docker d: 
[04:56:22] <xnaas> I suppose the problem there is during build there's no networking context
[04:56:32] <xnaas> so it can't possible know what "server" is
[04:56:43] <xnaas> this is getting more janky
[04:56:43] <xnaas> but
[04:56:48] <xnaas> you could use ports: for server
[04:56:51] <xnaas> and point at hostip
[04:56:56] <xnaas> but that's like...super shitty lol
[05:01:07] <MaxLeiter> hmmm
[05:01:11] <MaxLeiter> there must be a way to do this
[05:01:29] <MaxLeiter> well okay hear me out, sometimes you *want* the server and container to be separate 
[05:01:39] <MaxLeiter> (for example I host my front-end with vercel; I'd only want to dockerize the server)
[05:01:45] <MaxLeiter> so can I just make two different composes...
[05:11:51] *** Quits: hook54321 (sid149355@user/hook54321) (Ping timeout: 250 seconds)
[05:14:26] *** Joins: hook54321 (sid149355@user/hook54321)
[05:22:26] <xnaas> Either that's not solving what you think it will or you're solving the problem in an extra roundabout way lol
[05:22:53] <xnaas> I was actually going to suggest the opposite and do the opposite of "the Docker way" and just have one container build with all components.
[05:23:34] <xnaas> You'd need to copy a startup script in instead of using CMD ["whatever", "stuff"]
[05:28:36] <MaxLeiter> Well I imagine being able to host the server and frontend separately / where ever you want
[05:28:46] <MaxLeiter> in my case i want to use vercels caching/cdn infra
[05:32:10] <xnaas> in that case, good luck I guess — I just don't see any universe where this is a simple/smooth task as long as the container image needs to be built with networking to talk to something else in a dynamic way 😅
[05:32:23] <xnaas> of course you can hardcode IP addresses in all day, but that's...a horrible, terrible thing to do lol
[06:34:23] <kinghat> get it sorted? hopefully i didnt cause this 😬
[06:35:04] <kinghat> xnaas: will you test my TL devcontainer PR? what os are you running?
[06:36:18] <MaxLeiter> xnaas: #docker agrees with you :( 
[06:36:23] <MaxLeiter> kinghat: this is for my own project, dw
[06:38:27] <kinghat> oh nice, still stuck on anything?
[06:42:41] <xnaas> Would it be possible to reorg the build process so that: 1) server image builds 2) client image builds 3) client container must talk to server to get configs or whatever, exit if it can't talk to anything?
[06:42:42] <xnaas> idk
[06:49:34] <MaxLeiter> xnaas: i mean, is anything stopping me from making the last step of the client `yarn build && node server.js` as opposed to just `node server.js`?
[06:49:44] <MaxLeiter> bc that just runs after the containers are both ready, correct?
[06:49:58] <MaxLeiter> I do think I got it *almost* working with manually upping server then client and using `network: host`
[06:54:25] <xnaas> if you're gonna force host networking, you're gonna need to make the ports very configurable
[06:54:31] <xnaas> everyone and their mom wants port 3000
[06:54:31] <xnaas> :P
[06:58:47] <MaxLeiter> isnt that the point of having a docker-compose
[07:02:23] <xnaas> I'm saying, don't hardcode it on the node apps side :P
[07:02:30] <xnaas> because whatever the port is in the container is what
[07:02:36] <xnaas> what's getting published to host
[07:03:14] <MaxLeiter> yeah, client and server both use env PORT
[07:03:31] <MaxLeiter> buuuut theres a problem once its running about the client accessing the server
[07:03:32] <MaxLeiter> i quit for now
[07:03:34] <MaxLeiter> people can learn pm2
[07:07:01] <xnaas> I can promise you your #1 open issue is going to be docker support. 😂
[07:07:21] <xnaas> docker is massive in the self-hosting space 😅
[07:11:27] <MaxLeiter> well that motivated me to try again
[07:11:29] <MaxLeiter> lets see
[07:11:44] <xnaas> this is not the end-all of data on the matter
[07:11:44] <xnaas> but
[07:11:45] <xnaas> https://i.redd.it/8jac4pt7frn81.png
[07:11:52] <xnaas> "N is 2078 in total, but not everyone answered all questions - N is somewhere between 1000 and 1500 for most questions."
[07:12:17] <xnaas> that's 80% of people at least partially utilizing containers lol
[07:13:13] <xnaas> you can always come back and tackle the problem after some sleep; too
[07:13:21] <xnaas> don't kill yourself trying to solve the world in a night :D
[07:15:08] <MaxLeiter> funny
[07:15:33] <MaxLeiter> okay so both are running, but client cant access the server connect ECONNREFUSED 127.0.0.1:3000
[07:15:34] <MaxLeiter> however, I can
[07:15:41] <MaxLeiter> and client has network: host
[07:15:47] <MaxLeiter> am i misunderstanding the networking
[07:16:54] <kinghat> you dont need host
[07:17:29] <MaxLeiter> without it `yarn build` in client fails when it tries to make a request to server
[07:17:57] <MaxLeiter> oh I guess its because thats just during the build phase
[07:18:06] <kinghat> can i see?
[07:18:31] <MaxLeiter> https://paste.maxleiter.com/post/dc45a62c-f9dd-4257-91dd-2b685df353b5#docker-compose.yml
[07:18:47] <MaxLeiter> ignore duplicate args and env, i got confused and cant be bothered figuring out which is working
[07:32:12] <kinghat> when the services are run from the same compose they will be part of the that composes default network
[07:33:12] <kinghat> you can also create a network and attach them both to that if you want, but i believe you have to actually create that outside of compose first if its not created.
[07:33:25] <kinghat> dont need to change the mode or driver either.
[07:45:30] *** Quits: venussa (~sarah@user/venussa) (Ping timeout: 252 seconds)
[08:35:02] *** Quits: kinghat (~kinghat@108.175.2.24) (Quit: duces ✌️)
[08:35:25] *** Joins: kinghat (~kinghat@108.175.2.24)
[08:43:27] *** Quits: kinghat (~kinghat@108.175.2.24) (Quit: duces ✌️)
[08:43:49] *** Joins: kinghat (~kinghat@108.175.2.24)
[09:15:04] <kinghat> can see how lsio swag example: https://docs.linuxserver.io/general/swag#hosting-a-wordpress-site
[09:19:33] <kinghat> MaxLeiter: closer to this: https://0bin.net/paste/iYAIG-YR#jlwhIumbzJoEeUFxUqbG72VYN9-naZg45mFkOGscE8G
[09:21:03] <kinghat> drop the expose too: https://0bin.net/paste/LOXXc0RJ#Vqvs24fopycCjCDQ9o-cnpJH8N9U5BGaowq9p3yOAve
[10:18:02] <MaxLeiter> then it fails building the client because yarn build needs to talk to the API
[10:18:39] <MaxLeiter> https://chat.maxleiter.com/uploads/f5dd66a18dd314cd/image.png 
[11:31:08] *** Quits: iXNyNe (~NyNe@user/nyne) (Quit: iXNyNe)
[11:31:08] *** Quits: d76d54367572 (~d76d5@pool-173-75-21-26.pitbpa.fios.verizon.net) (Remote host closed the connection)
[11:34:37] *** Joins: iXNyNe (~NyNe@user/nyne)
[12:33:00] *** Quits: iXNyNe (~NyNe@user/nyne) (Quit: iXNyNe)
[12:37:39] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[12:46:53] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[13:02:15] *** Joins: iXNyNe (~NyNe@user/nyne)
[13:32:10] *** Quits: oshae57 (~oshae@S010618e829bedec8.cg.shawcable.net) (Quit: The Lounge - https://thelounge.chat)
[13:46:33] *** Joins: oshae57 (~oshae@S010618e829bedec8.cg.shawcable.net)
[13:57:35] *** Quits: Vercas (~Vercas@gateway/tor-sasl/vercas) (Quit: buh bye)
[13:59:37] *** Joins: Vercas (~Vercas@gateway/tor-sasl/vercas)
[14:04:57] *** Quits: Baphomet (~baphomet@user/linguist) (Ping timeout: 240 seconds)
[14:17:05] *** Joins: Baphomet (~baphomet@user/linguist)
[14:30:36] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Quit: 🖖)
[14:32:53] *** Joins: dvanloon (~dvanloon@user/dvanloon)
[15:31:07] *** Quits: Vercas (~Vercas@gateway/tor-sasl/vercas) (Remote host closed the connection)
[15:31:43] *** Joins: Vercas (~Vercas@gateway/tor-sasl/vercas)
[15:48:07] *** Joins: Activ81 (58613918@user/aab/x-3846634)
[15:49:10] *** Quits: Activ8 (58613918@user/aab/x-3846634) (Ping timeout: 246 seconds)
[15:49:10] *** Activ81 is now known as Activ8
[19:20:54] <kinghat> were you able to manually ping the server as being up when the client tried to build?
[19:21:13] <kinghat> is it a CORS issue 🤔
[19:37:17] *** Quits: Xeon3D4 (~xeon3d@user/Xeon3D) (Ping timeout: 240 seconds)
[22:07:26] *** Joins: fr0stbyte1899 (~thelounge@37.19.221.168)
[22:11:12] *** Quits: cim (~cim@205.185.117.110) (Ping timeout: 252 seconds)
[22:12:11] *** Joins: val (~val@limnoria/val)
[22:26:24] *** Joins: cim (~cim@205.185.117.110)
[22:35:03] *** Quits: fr0stbyte1899 (~thelounge@37.19.221.168) (Quit: The Lounge - https://thelounge.chat)
[22:46:50] *** Joins: fr0stbyte1899 (~thelounge@37.19.221.155)
