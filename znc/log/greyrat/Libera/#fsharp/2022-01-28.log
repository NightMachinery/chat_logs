[00:09:01] <MatthiasVance> (went for that)
[00:36:44] <biberu> MatthiasVance: might perform better if you build a map / index from one list first, but i guess you considered that :)
[00:36:59] * biberu resumes parenting
[00:37:18] <MatthiasVance> biberu: I didn't consider that :D Not sure why though
[00:37:48] <MatthiasVance> Do you have a short example of what you mean?
[00:38:45] * biberu can resume parenting shortly
[00:39:48] <biberu> if i understand you correctly you have two lists and a key to join them on, e.g. person and adress, with say a personid to join them on?
[00:40:28] <biberu> if done naively you can easily get linear searches for each key
[00:41:37] <biberu> so an easy way to avoid that is to build a dictionary of e.g. map<personid, adress>, then map over the persons while doing lookups against the map rather than searching in the adress list
[00:42:24] <biberu> another version would be if the list is sorted on the key, then you could just seek up until the next larger id when looking for candidates
[00:43:00] * biberu resumes parenting
[00:48:56] <MatthiasVance> Ahh right that would be better
[00:49:04] <MatthiasVance> Thanks, I will improve that later!
[01:11:12] <biberu> success, child that does not want to fall asleep in bed has been transferred to bed \o/
[01:57:53] <MatthiasVance> Nice! We had a similar situation
[02:43:25] *** Quits: hseg (~hseg@195.192.229.23) (Remote host closed the connection)
[02:43:47] *** Joins: hseg (~hseg@195.192.229.23)
[03:35:08] *** Quits: hseg (~hseg@195.192.229.23) (Remote host closed the connection)
[09:37:09] *** Quits: ski (~ski@remote11.chalmers.se) (*.net *.split)
[09:42:52] *** Joins: ski (~ski@remote11.chalmers.se)
[12:07:42] *** Joins: xeno (~xeno@user/xeno)
[20:05:56] *** Quits: ski (~ski@remote11.chalmers.se) (Ping timeout: 256 seconds)
[21:02:49] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[21:09:34] *** Joins: jinsun (~quassel@user/jinsun)
[21:11:22] *** Quits: jinsun (~quassel@user/jinsun) (Client Quit)
[21:16:08] *** Joins: jinsun (~quassel@user/jinsun)
