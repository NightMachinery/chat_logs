[00:01:08] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[00:01:18] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 260 seconds)
[00:01:41] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[00:06:26] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[00:06:59] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 264 seconds)
[00:14:06] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[00:17:34] *** Quits: rbn (~rbn@user/rbn) (Read error: Connection reset by peer)
[00:19:45] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[00:22:45] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[00:24:16] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[00:24:27] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[00:33:00] *** Joins: typicat (~karl@user/typicat)
[00:37:40] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[00:42:01] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[00:43:49] *** Quits: darkstardevx (~darkstard@50.39.114.152) (Read error: Connection reset by peer)
[00:47:57] *** Joins: ricardo_ (~ricardo@2804:14c:138:3a18:d294:66ff:fea3:abd5)
[00:48:54] *** Quits: ricardo_ (~ricardo@2804:14c:138:3a18:d294:66ff:fea3:abd5) (Client Quit)
[00:49:24] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[00:52:32] *** Joins: darkstardevx (~darkstard@50.39.114.152)
[00:53:28] *** Quits: darkstardevx (~darkstard@50.39.114.152) (Remote host closed the connection)
[00:53:52] *** Joins: darkstardevx (~darkstard@50.39.114.152)
[00:54:10] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[00:54:30] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 260 seconds)
[00:56:45] <_nuke> I got my bindings working with Go 1.17 using the cgo.Handle, but I tried it on 1.16 and apparently cgo.Handle was introduced in 1.17... is there any chance that support might get backported to older versions?
[00:59:01] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[00:59:37] <_nuke> Or is it possible to include that support separately, the code looks pretty simple, I imagine it would work on older versions of Go
[01:02:25] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[01:03:40] <b0nn> the general nature of Go is to make later versions capable of building earlier versions, but I've never seen earlier versions have features bolted on from newer stuff
[01:04:35] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[01:07:11] <_nuke> Right... but that cgo.Handle feature seems to basically just use the sync package which is availble back to at least 1.9... would you be able to include it manually somehow?
[01:08:11] <fizzie> It *is* pretty simple, though; you could certainly just include your own internal version of it. I don't think there's a way to really include the standard one with its standard name.
[01:08:17] <fizzie> That's more of a JS thing. ;)
[01:08:40] <_nuke> Hmm ok
[01:09:07] <b0nn> can I ask why you're constrained on the older version?
[01:09:10] <_nuke> Not sure I want to include my own version of it... just was hoping I could support older versions of Go to run on older OS versions
[01:10:00] <_nuke> Since my library supports back to Windows 2000, MacOS 10.5, OS/2 Warp 3, GTK 2...
[01:10:07] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[01:10:36] <_nuke> Go 1.17 only really supports modern OS versions
[01:10:36] <b0nn> uhh, AIUI the latest version of Go will run on the older OS
[01:10:52] <_nuke> oh? what is AIUI
[01:11:02] <b0nn> This is the first time that I've heard of such a limitation
[01:11:12] <b0nn> As I understand It
[01:11:22] <_nuke> ohh
[01:11:40] <_nuke> pretty sure Go 1.17 requires MacOS 10.13 or later
[01:11:50] <_nuke> and Windows 8....
[01:11:53] <_nuke> but let me look
[01:12:15] <fizzie> There *is* a build constraint word for each Go major version, so I imagine it wouldn't be impossible to have a codebase that uses cgo.Handle on 1.17+, and something else before that. Not a common practice though.
[01:12:55] <b0nn> https://golang.org/doc/go1.17 It does indeed limit OS versions
[01:12:59] <_nuke> guess Windows 7... and MacOS 10.13
[01:13:23] <fizzie> (Ref. https://pkg.go.dev/cmd/go#hdr-Build_constraints "a term for each Go major release, through the current version" -- so you'd have one implementation in a file constrained with "go1.17", and another with "!go1.17".)
[01:14:10] <fizzie> On the other hand, if you need to include a version of the code that works on pre-1.17, and it doesn't really have any drawbacks as such, you might *only* include that. :)
[01:14:34] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[01:14:56] <_nuke> Yeah I'll have to think about it.... I imagine most people will be able to just use 1.17
[01:15:16] <_nuke> I just have this weird desire to make stuff work back to the dawn of time :P
[01:26:14] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[01:27:29] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 268 seconds)
[01:30:45] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[01:35:54] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Remote host closed the connection)
[01:35:56] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 245 seconds)
[01:37:36] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[01:39:40] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[01:39:48] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[01:43:30] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[01:44:54] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 260 seconds)
[01:48:23] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[01:53:18] *** Quits: rek2 (~ReK2@47.62.9.10) (Read error: Connection reset by peer)
[01:55:02] *** Joins: rek2 (~ReK2@47.62.9.10)
[02:04:41] <_nuke> I have a question about unsafe.Pointer ... I am on Windows getting a cgo Go Pointer panic... in a call where I am not passing any Go objects
[02:05:08] <_nuke> but I am pasing a Windows HWND window handle as an unsafe.Pointer
[02:06:39] <_nuke> is it possible that the window handle is the same numerically as a Go object pointer? and it is checking the unsafe.Pointer? if I used C.uintptr_t instead would it avoid that issue?
[02:07:04] *** Quits: typicat (~karl@user/typicat) (Quit: leaving)
[02:09:10] <KirkMcDonald> I believe a HWND is literally a pointer.
[02:09:20] <_nuke> yeah it is defined as a pointer
[02:09:26] <_nuke> but I am not really sure it points to memory
[02:10:15] <fizzie> There are a few special cases like that "built in" into cgo -- https://pkg.go.dev/cmd/cgo#hdr-Special_cases -- that are "pointery" but not necessarily real pointers, and they are indeed handled as `uintptr`s.
[02:10:34] <fizzie> I think at least there's "special" window handles that are not actual pointers to memory, which sounds similar.
[02:11:11] <_nuke> well I mean
[02:11:19] <_nuke> I don't know how the cgo pointer checks work
[02:11:32] <_nuke> but I am not passing a cgo objet in this code
[02:11:38] <_nuke> and it works on MacOS without problem
[02:11:42] <_nuke> but on Windows
[02:11:55] <_nuke> panic: runtime error: cgo argument has Go pointer to Go pointer
[02:12:30] <fizzie> I would sort of have expected that if you have a *real* C pointer to an actual piece of memory, it wouldn't confuse the GC or the pointer checks to make it think it's possibly a Go pointer.
[02:12:31] *** Quits: leonthemisfit (~Leon@user/leonthemisfit) (Ping timeout: 268 seconds)
[02:12:32] <_nuke> so I am wondering if the Windows HWND has a value that is in the Go address space
[02:13:29] <fizzie> There's definitely some special-purpose handles in the Windows world that are not actual pointers, and might consequently look like Go pointers. (No idea if HWNDs are ever like that.)
[02:13:54] <_nuke> well HWND is HANDLE in windows which is a C pointer
[02:13:54] <fizzie> Anyway, using an uintptr type sounds reasonable.
[02:14:09] <fizzie> Yes, but not all HANDLEs are actually pointers.
[02:14:16] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[02:14:21] <_nuke> right that is what I mean so when they aren't real pointers...
[02:14:38] <_nuke> they could be in the go address space and hit the cgo pointer check
[02:15:03] <_nuke> because changing everything over to uintptr_t is a major project lol
[02:15:21] <_nuke> so I don't want to do it if I don't have to....
[02:15:23] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[02:15:38] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Client Quit)
[02:15:41] <_nuke> but I can't grasp why this panic is occuring though other than what I just suggested
[02:15:44] <A_Dragon> passing even a go uintptr to C is proooobably a bad idea
[02:16:25] <fizzie> Depends on what it represents.
[02:16:39] <b0nn> uintptr is an offset isn't it?
[02:16:43] <A_Dragon> if it points to go memory it's not gonna be happy
[02:16:44] <_nuke> well my library is returning a window handle to go and storing that.. then passing it back to my library
[02:16:53] <fizzie> Yes, but if it *came* from C and has nothing to do with pointing at Go memory, passing it around as an uintptr sounds quite reasonable.
[02:16:53] <A_Dragon> b0nn: its a uint, generally just contains a pointer
[02:16:59] <b0nn> ...
[02:17:01] <A_Dragon> yes that should be fine
[02:17:06] <fizzie> And if it's a HWND, it definitely isn't pointing at Go memory "really".
[02:17:12] <b0nn> A_Dragon: It's relative to the address space for the runtime
[02:17:14] <_nuke> right
[02:17:33] <b0nn> Go pointers aren't /exactly/ this memory address
[02:18:09] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[02:18:39] <fizzie> Well, really, `uintptr` in Go is really just an unsigned integer type. Where it gets relevant to Go pointers is when you go from a pointer to unsafe.Pointer to uintptr, and that's AFAICT not what's going on here.
[02:18:48] <A_Dragon> ^
[02:18:54] <b0nn> Again
[02:18:54] <A_Dragon> the first half was what I wanted to say
[02:19:00] <b0nn> this misses the point I was making
[02:19:13] <b0nn> 09:47 < b0nn> A_Dragon: It's relative to the address space for the runtime
[02:19:16] <_nuke> I am currently storing HWND in unsafe.Pointer
[02:19:19] <A_Dragon> b0nn: its a pointer into go memory, whether or not its offset from some position does not matter here
[02:19:23] *** Joins: tzui (~tzui@p200300e817076e00012bada8b98f6b5d.dip0.t-ipconnect.de)
[02:19:26] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 260 seconds)
[02:19:31] <_nuke> and passing that back to my API with cgo
[02:19:33] <A_Dragon> _nuke: that may do it
[02:19:40] <A_Dragon> Im not sure, investigating
[02:19:45] <b0nn> It matters if the C cannot make the translation
[02:19:49] <_nuke> but it is giving me that panic in certain circumstances
[02:20:01] <A_Dragon> https://github.com/golang/go/blob/8d09f7c5178b04bade2859d32d0710233a620d4f/src/runtime/cgocall.go#L392 here's the code that does that
[02:20:04] <_nuke> uintptr_t is an integer with the same size as a pointer
[02:20:32] <A_Dragon> b0nn: uintptr is literally a word. It doesnt matter if it contains a go pointer, especially not in this case as it *doesnt*
[02:20:38] <b0nn> 09:49 < b0nn> It matters if the C cannot make the translation
[02:21:05] <fizzie> There's no "translation" to make, the (proposed) uintptr value has nothing to do with Go pointers here.
[02:21:12] <A_Dragon> ^
[02:21:42] <b0nn> So... passing a pointer (or uintptr value, which is relative to the Go runtime, does not have to be translated in the C
[02:21:47] <b0nn> righto
[02:21:54] <A_Dragon> b0nn: uintptr
[02:21:56] <A_Dragon> the type
[02:21:57] *** Quits: tzui (~tzui@p200300e817076e00012bada8b98f6b5d.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[02:21:59] <A_Dragon> is a word size uint
[02:22:02] <A_Dragon> it is a type alias
[02:22:04] <A_Dragon> nothing more
[02:22:08] <_nuke> yeah I am thinking I need to switch to uintptr from unsafe.Pointer
[02:22:12] <b0nn>  /ignore A_Dragon
[02:22:12] <A_Dragon> it is not treated specially by the compiler in any way.
[02:22:25] <fizzie> Although since you brought up uintptr_t aka C.uintptr_t, that's maybe also a reasonable choice for a type, and at least makes it very clear it's not related to Go pointers.
[02:22:43] <A_Dragon> _nuke: yeah I think so, though it appears that this checks if the value is a pointer that exists in the heap or stack
[02:22:45] <_nuke> yeah C.uintptr_t
[02:22:52] <_nuke> is what I'll use to store it
[02:22:57] <A_Dragon> so you might just be running into a lovely virtual memory collision thing
[02:23:05] <_nuke> that would avoid the check entirely
[02:23:37] <_nuke> A_Dragon: yeah that is what I suspect is happening
[02:23:46] <_nuke> can't explain it any other way right now
[02:24:06] <A_Dragon> but yeah if its a uintptr I think it'd just be ignored
[02:25:05] <_nuke> exactly it should skip the check if it isn't unsafe.Pointer
[02:25:21] <_nuke> just there is so many places where this change needs to happen
[02:25:32] <_nuke> :(
[02:25:37] <A_Dragon> gofmt might be able to automate some of it
[02:25:38] <_nuke> there are
[02:26:03] <_nuke> well half of it is C code
[02:26:11] <A_Dragon> check the - yeah I cant help you there
[02:27:21] <_nuke> oh well thanks for all the help everyone
[02:27:25] <_nuke> :)
[02:28:02] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[02:28:38] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:30:36] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:36:33] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 268 seconds)
[02:36:55] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[02:37:00] *** Joins: mickey87 (~user@user/mickey)
[02:38:17] *** Quits: zwindl (~abc@user/abc) (Ping timeout: 265 seconds)
[02:39:24] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[02:39:25] *** mickey87 is now known as mickey8
[02:39:56] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[02:42:05] *** Quits: Guest41 (~Guest41@112.133.192.241) (Quit: Client closed)
[02:49:00] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[02:52:03] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[02:52:27] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Client Quit)
[02:52:38] *** Quits: soxhlet (~soxhlet@81.171.29.137) (Quit: Ping timeout (120 seconds))
[02:53:51] *** Joins: alzgh (alzgh@user/alzgh)
[02:54:03] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[02:54:32] *** Joins: soxhlet (~soxhlet@81.171.29.137)
[02:55:24] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[02:58:56] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[03:00:15] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[03:00:23] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[03:02:12] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Client Quit)
[03:05:24] *** Joins: darkstarx (~darkstard@185.226.144.76)
[03:07:58] *** Quits: darkstardevx (~darkstard@50.39.114.152) (Ping timeout: 260 seconds)
[03:09:24] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[03:10:25] *** Joins: darkstardev13 (~darkstard@176.113.72.221)
[03:12:04] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[03:13:02] *** Quits: darkstarx (~darkstard@185.226.144.76) (Ping timeout: 260 seconds)
[03:13:43] *** Joins: alzgh (~alzgh@user/alzgh)
[03:13:49] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[03:18:10] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[03:18:24] *** Joins: darkstarx (~darkstard@50.39.114.152)
[03:20:56] *** Quits: darkstardev13 (~darkstard@176.113.72.221) (Ping timeout: 245 seconds)
[03:24:42] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[03:29:16] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 245 seconds)
[03:39:58] *** Joins: darkstardev13 (~darkstard@89.47.234.174)
[03:41:14] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:41:35] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[03:42:26] *** Quits: darkstarx (~darkstard@50.39.114.152) (Ping timeout: 260 seconds)
[03:47:29] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[03:51:51] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[03:54:07] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[04:03:42] * b0nn is going to miss foo := strings.Split(s, delim)[0]; https://github.com/golang/go/issues/46336
[04:04:03] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:04:35] *** Quits: elgraz (~elgraz@151.65.9.160) (Quit: Leaving)
[04:05:01] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:06:29] *** Joins: oltuvok (~user@2804:1b2:82:d836:a663:a1ff:fe49:c8ed)
[04:09:16] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[04:09:36] *** Quits: Atque_ (~Atque@user/atque) (Remote host closed the connection)
[04:09:40] <Sam> Oh nice, I missed that discussion. Pretty sure I write some form of this in basically every program I write that use strings or bytes at all, so definitely seems worth having in the standard lib.
[04:11:30] <b0nn> I <3 they call it cut too, - I'm a big fan of `cut -d "delim" -f "field"`
[04:11:51] *** Joins: Atque (~Atque@user/atque)
[04:14:36] *** Quits: egy (egy@tilde.team) (Ping timeout: 268 seconds)
[04:17:40] <A_Dragon> oh thats beautiful
[04:17:46] <A_Dragon> god I need that now
[04:18:17] <A_Dragon> you know; the analogy in python is partition, but I never understood why partition returns the string you gave it in the middle
[04:19:45] <A_Dragon> ` If the separator is not found, return a 3-tuple containing the string itself, followed by two empty strings.` that'll be why. but also why
[04:19:51] <rawtaz> has anyone here been using https://github.com/dghubble/sling for a while? i think it looks like a nice library, but i noticed the repo has issues disabled and that makes me slightly concerned
[04:21:20] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:21:52] <A_Dragon> mmm I dont like that
[04:22:56] <rawtaz> im also looking at https://github.com/go-resty/resty which is pretty similar and looks mature and all, but it doesnt seem great to me that the SetQueryParams (see https://github.com/go-resty/resty#enhanced-get ) doesnt use struct but plain strings, no tagging as well then.
[04:23:07] <rawtaz> thats the main reason i figured i'd go with sling, i like structured code
[04:23:24] <rawtaz> so now neither suits my high expectations xD
[04:23:36] <A_Dragon> could write your own but thats a pain
[04:23:47] <rawtaz> yeah, im not up for that. i suck too much :P
[04:24:01] <rawtaz> im so incompetent i can hardly run `go`
[04:24:22] *** Quits: lionheart (~lionheart@user/lionheart) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:25:07] <rawtaz> A_Dragon: you being a Go pro (no pun intended), how do you feel about such sloppiness as the SetQueryParams using plain string maps instead of a struct?
[04:25:22] <rawtaz> perhaps it's more conventional in Go programming than i know, and hence perfectly fine generally speaking
[04:25:25] <A_Dragon> it really depends on what you're writing, and how complex it is
[04:25:31] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[04:25:33] <rawtaz> that makes sense :)
[04:25:36] <A_Dragon> writing structs can be a pain if you're doing a 20 second bit of code
[04:25:42] <A_Dragon> also I am by no means a pro :P
[04:25:54] <A_Dragon> I wouldnt call myself a pro in any lang
[04:26:00] <rawtaz> me neither
[04:26:02] <A_Dragon> Im reasonably experienced, but that doesnt make me amazing :D
[04:26:28] <rawtaz> oh don't leave me in suspense, i finally found someone to look up to T_T
[04:26:46] <A_Dragon> well to clarify Ive been writing go for.... uh
[04:26:56] <A_Dragon> 4?
[04:26:58] <A_Dragon> 5?
[04:27:02] <A_Dragon> somewhere there, years
[04:27:03] <rawtaz> hours?
[04:27:05] <A_Dragon> might be 3
[04:27:07] <rawtaz> ok thats good
[04:27:22] <A_Dragon> my largest project is a 10LoC monster that I havent touched in months
[04:27:25] <rawtaz> honestly, generally speaking, according to job ads etc that makes you a senior go developer :>
[04:27:27] <A_Dragon> s/10/10k
[04:27:32] <rawtaz> LOL
[04:27:47] <A_Dragon> yeah tell the people I keep applying to that >.>
[04:27:55] <rawtaz> yeah..
[04:27:56] <A_Dragon> Im still trying to get *into* the software development field
[04:28:08] <rawtaz> what do you do now if not programming for a living?
[04:28:09] <A_Dragon> I have yet to have one non-quick and dirty contract job
[04:28:16] <A_Dragon> right now? nothing, unfortunately
[04:28:27] <rawtaz> ok :(
[04:28:37] <A_Dragon> I am a developer and a technical writer, I had a good job doing the later for two years but now Im just looking
[04:29:02] <rawtaz> thats pretty crazy, if you ahve years of go programming experience, presumably you can build stuff, and there being quite a number of go ads out there should mean you should be able to find something
[04:29:57] <rawtaz> you should do Java, there's endless amounts of java work out there
[04:30:02] <rawtaz> both as a consultant and as employee
[04:30:12] <A_Dragon> theres a problem of location for me
[04:30:19] <rawtaz> in what way?
[04:30:24] <A_Dragon> Im not in a country that has lots of go dev (or python) looking
[04:30:26] <A_Dragon> loads of java
[04:30:27] <rawtaz> (sorry if im asking too personal questions)
[04:30:27] <A_Dragon> but uh
[04:30:39] <A_Dragon> I like not feeling pain when I write code
[04:30:48] <rawtaz> hehe
[04:31:11] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:31:11] <A_Dragon> scala, that I can do
[04:31:13] <A_Dragon> kotlin, that too
[04:31:31] <rawtaz> do you have family so you cant move easily?
[04:31:41] <A_Dragon> semicolon langs are annoying though. and I dont like javas inability to not have a new keyword and stutter
[04:31:49] <A_Dragon> and nah just working towards it
[04:31:58] <A_Dragon> hopefully europe in the next few years
[04:32:06] <rawtaz> oh where are you now?
[04:32:17] <A_Dragon> you wont get that answer from me :P
[04:32:21] <rawtaz> ok thats fine
[04:32:26] <A_Dragon> I walked around it nicely repeatedly for a reason
[04:32:40] <A_Dragon> but yeah I otherwise contribute to open source
[04:32:47] <A_Dragon> and now volenteer for libera as well
[04:32:55] <rawtaz> no worries i can just google "where does A_Dragon live?" and thats it :P
[04:32:59] <A_Dragon> in fact Im working on a from scratch bot core for libera
[04:33:01] <A_Dragon> and suuuuure
[04:34:14] <rawtaz> if you were in sweden i think that you'd be able to find a job as a programmer. pretty darn sure of it
[04:34:21] <A_Dragon> very likely
[04:34:33] <rawtaz> obviously depends on personality and skill etc but thers so much of it here that i dont see why not
[04:34:46] <A_Dragon> if I get annoyed enough Ill bite it and apply for some java work
[04:34:52] <A_Dragon> but yeah, java sucks
[04:35:00] <rawtaz> what is it you dislike about java?
[04:35:07] <A_Dragon> private static final native strictfp synchronized void
[04:35:25] <A_Dragon> (native is cheating in there but the rest would work)
[04:35:30] <A_Dragon> oh and theres a new one
[04:35:45] <A_Dragon> sealed and unsealed and and for a few things IIRC, classes
[04:35:55] <A_Dragon> java has grating syntax, for me
[04:36:12] <A_Dragon> I dislike not having type inference (though it has it now), I dislike new keywords, I dislike semicolons
[04:36:21] *** Joins: egy (~egy@tilde.team)
[04:36:47] <rawtaz> hehe ok
[04:36:54] <rawtaz> egy: you forgot a g
[04:37:03] <rawtaz> please try again
[04:37:05] <rawtaz> next!
[04:37:27] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[04:41:56] <rawtaz> boring :(
[04:42:10] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:37] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:54:05] *** Joins: jbauer (~jbauer@146.71.11.98)
[05:04:34] *** Quits: c10l (~c10l@user/c10l) (Ping timeout: 268 seconds)
[05:11:54] *** Quits: Tv_ (uid62079@user/tv/x-3144562) (Quit: Connection closed for inactivity)
[05:12:57] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:17:31] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[05:21:49] *** Joins: c10l (~c10l@user/c10l)
[05:22:44] *** Quits: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:23:03] *** Quits: normen (~normen@p200300d71739c000a503d14c74892964.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:23:21] *** Joins: darkstarx (~darkstard@gateway/vpn/pia/darkstardevx)
[05:25:55] *** Quits: darkstardev13 (~darkstard@89.47.234.174) (Ping timeout: 256 seconds)
[05:35:28] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:39:37] *** Joins: normen (~normen@p200300d71739c000a503d14c74892964.dip0.t-ipconnect.de)
[05:39:41] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[05:41:32] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:44:30] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[05:46:06] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[05:46:10] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[05:47:23] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:48:58] *** Quits: darkstarx (~darkstard@gateway/vpn/pia/darkstardevx) (Remote host closed the connection)
[05:49:21] *** Joins: darkstarx (~darkstard@gateway/vpn/pia/darkstardevx)
[05:51:59] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[05:53:17] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:55:07] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[05:57:36] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[05:58:13] *** Quits: yonson (~yonson@2600:8801:d900:7bb::d7c) (Remote host closed the connection)
[05:58:21] *** Joins: yonson (~yonson@2600:8801:d900:7bb::d7c)
[05:59:09] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[05:59:11] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 264 seconds)
[06:03:53] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[06:05:03] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:09:30] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[06:10:11] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[06:10:53] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:10:58] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[06:11:09] *** Joins: kiril (~kiril@85.91.153.163)
[06:15:28] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[06:16:45] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:21:27] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[06:22:37] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:27:11] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 245 seconds)
[06:27:14] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[06:28:29] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:29:39] *** Quits: nemesis91 (~nem@user/nemesis91) (Remote host closed the connection)
[06:30:01] *** Joins: nemesis91 (~nem@user/nemesis91)
[06:33:18] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[06:34:36] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:34:45] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[06:38:51] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[06:40:30] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:45:05] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[06:46:20] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:50:55] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[06:52:12] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[06:54:19] *** Quits: normen (~normen@p200300d71739c000a503d14c74892964.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:56:38] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[06:58:04] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:02:36] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[07:03:56] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:07:39] *** Joins: normen (~normen@p200300d71739c000a503d14c74892964.dip0.t-ipconnect.de)
[07:08:29] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[07:09:48] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:13:11] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[07:14:40] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[07:15:40] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:20:23] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[07:21:32] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:23:24] *** Joins: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net)
[07:23:26] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 245 seconds)
[07:24:17] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[07:24:28] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[07:26:03] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[07:27:24] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:30:47] *** Quits: Torr_ (~Torr@user/torr) (Quit: Lost terminal)
[07:31:43] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[07:33:30] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:38:10] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[07:38:41] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[07:39:09] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[07:39:23] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:40:28] *** Joins: frost (~frost@user/frost)
[07:44:11] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[07:45:15] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:49:49] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[07:51:09] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:53:24] *** Joins: jackneilll (~jackneill@20014C4E18012400ECCD41057EEF070F.dsl.pool.telekom.hu)
[07:55:54] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[07:56:36] *** Quits: jackneill (~jackneill@20014C4E1807A600F7A430AF3AB015CF.dsl.pool.telekom.hu) (Ping timeout: 268 seconds)
[07:57:00] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[07:57:25] <b0nn> hat do you mean I can't name a package 'default' :(
[07:57:42] <b0nn> what*
[08:01:21] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[08:01:27] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[08:02:52] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:03:39] <KirkMcDonald> I mean it's a keyword.
[08:07:11] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[08:08:44] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:10:07] <b0nn> "don't rob your users of valuable names"
[08:13:10] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[08:14:36] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:17:03] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[08:19:25] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[08:20:28] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:25:35] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[08:26:20] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[08:27:59] *** Quits: normen (~normen@p200300d71739c000a503d14c74892964.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[08:33:42] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[08:37:08] *** Quits: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[08:37:53] *** Joins: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[08:42:08] *** Joins: Everything (~Everythin@37.115.210.35)
[08:51:27] *** Quits: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[08:52:18] *** Joins: gspbirel56 (~gspbirel5@c-73-214-199-7.hsd1.pa.comcast.net)
[08:57:03] *** Joins: jpw (~jpw@user/jpw)
[08:58:49] *** Joins: roland (~roland@124.59.28.105)
[08:59:52] *** Joins: normen (~normen@p200300d71739c000a503d14c74892964.dip0.t-ipconnect.de)
[09:02:12] *** Parts: roland (~roland@124.59.28.105) ()
[09:02:41] *** Joins: innamorato (~roland@124.59.28.105)
[09:03:03] *** Quits: innamorato (~roland@124.59.28.105) (Client Quit)
[09:03:42] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:08:03] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[09:14:41] *** Joins: oltuvok` (~user@179.162.52.165)
[09:14:56] *** Quits: oltuvok (~user@2804:1b2:82:d836:a663:a1ff:fe49:c8ed) (Remote host closed the connection)
[09:15:10] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[09:15:25] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[09:20:38] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:24:41] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[09:29:05] *** Quits: pepee (~pepee@user/pepee) (Quit: WeeChat 2.8)
[09:38:40] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[09:41:19] *** Joins: skeels (uid493124@id-493124.uxbridge.irccloud.com)
[09:41:30] *** Parts: skeels (uid493124@id-493124.uxbridge.irccloud.com) ()
[09:44:53] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[09:46:42] *** Quits: nostalgia (~nostalgia@110.8.30.213.rev.vodafone.pt) (Remote host closed the connection)
[09:57:57] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:02:47] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[10:12:07] *** Quits: khyr0n (~khyr0n@2806:2f0:9280:cf20:506d:ee7:bf3e:3a32) (Remote host closed the connection)
[10:14:08] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:19:08] *** Joins: khyr0n (~khyr0n@fixed-189-203-100-79.totalplay.net)
[10:21:09] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[10:21:32] *** Quits: normen (~normen@p200300d71739c000a503d14c74892964.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[10:24:25] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[10:29:05] *** Parts: mikey__ (~mikey__@user/mikey/x-6463285) (WeeChat 3.3)
[10:32:05] *** Joins: normen (~normen@p200300d71739c000a503d14c74892964.dip0.t-ipconnect.de)
[10:34:13] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:38:43] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[10:38:49] *** Joins: gio[m] (~giolekvam@2001:470:69fc:105::1:16a)
[10:51:24] *** Joins: mei3 (~mei@user/mei)
[10:52:38] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[10:56:51] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[11:02:06] *** Quits: oltuvok` (~user@179.162.52.165) (Ping timeout: 260 seconds)
[11:04:26] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 260 seconds)
[11:04:44] *** Joins: darkapex (~darkapex@user/darkapex)
[11:05:47] *** Quits: khyr0n (~khyr0n@fixed-189-203-100-79.totalplay.net) (Ping timeout: 264 seconds)
[11:09:08] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[11:09:27] *** Joins: khyr0n (~khyr0n@fixed-187-188-8-55.totalplay.net)
[11:09:29] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[11:13:42] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[11:28:31] *** Joins: jla (~jordi@64.225.79.195)
[11:32:36] *** Joins: darkapex_ (~darkapex@user/darkapex)
[11:33:07] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 256 seconds)
[11:35:46] *** Joins: alzgh (~alzgh@user/alzgh)
[11:38:56] *** Joins: mrig (~AdiIRC@user/mrig)
[11:42:17] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[11:43:26] *** Quits: normen (~normen@p200300d71739c000a503d14c74892964.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[11:47:14] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[11:59:32] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[12:04:06] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[12:11:03] *** Joins: normen (~normen@p200300d71739c000a503d14c74892964.dip0.t-ipconnect.de)
[12:20:09] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 256 seconds)
[12:32:36] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[12:37:14] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[12:50:54] *** Joins: bkircher (~bkircher@2001:a61:25e1:a901:f7b9:7a2c:5cbb:7cb)
[12:59:15] *** Joins: lionheart (~lionheart@user/lionheart)
[13:08:32] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[13:12:51] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[13:14:49] *** Joins: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de)
[13:14:49] *** Quits: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de) (Changing host)
[13:14:50] *** Joins: menace (~someone@user/menace)
[13:16:56] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[13:17:13] *** Joins: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de)
[13:18:31] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 256 seconds)
[13:18:35] *** sam1_sam1__ is now known as sam1
[13:25:02] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[13:27:27] *** Joins: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de)
[13:29:34] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[13:30:08] *** Quits: justUnited (~justache@user/justache) (Remote host closed the connection)
[13:31:39] *** Joins: justUnited (~justache@user/justache)
[13:32:22] *** Quits: lionheart (~lionheart@user/lionheart) (Quit: Textual IRC Client: www.textualapp.com)
[13:37:59] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[13:42:45] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[13:43:00] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[13:47:29] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[13:51:49] *** Joins: jla (~jordi@64.225.79.195)
[14:00:10] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[14:04:34] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[14:08:29] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[14:08:46] *** Joins: raryararawn (~ryan@220.240.158.188)
[14:09:42] *** Quits: normen (~normen@p200300d71739c000a503d14c74892964.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[14:12:50] <leitz> How do you generate base64 encoded strings for a []byte? Reading "Distributed services with Go" and I'd like to generate test data.
[14:14:25] *** Parts: raryararawn (~ryan@220.240.158.188) ()
[14:16:04] <Sam> leitz: see https://pkg.go.dev/math/rand (or https://pkg.go.dev/crypto/rand if you need this for security reasons, but math/rand will be fine for test data most likely) and https://pkg.go.dev/encoding/base64 to get it into the format you want.
[14:17:03] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[14:17:55] <leitz> Sam, thanks! math/rand should be amply sufficient.
[14:20:25] *** Joins: normen (~normen@p200300d71739c00018faa892e84eb33e.dip0.t-ipconnect.de)
[14:21:21] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[14:25:12] <Atque> Does anyone have a view of golang in the data science space?
[14:25:16] <Atque> (If there's much of an ecosystem, or the development community has that use case in mind).
[14:28:34] <Kane> Not sure if that can be useful, but yesterday I saw a link for an Udemy course (Free instead of 50$ for still 4 days) on Go for beginner, no idea if it's any good with my level, but is posting the link accepted for thoses who may be interested?
[14:29:21] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 256 seconds)
[14:32:38] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:35:02] <shiroyasha> Kane: Udemy has the habit of making those weird "free for X days" based on cookies. If you run out of time, delete cookies and that will probably reset the "free for X days" counter.
[14:35:06] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[14:35:39] <Kane> interesting to know, thanks shiroyasha!
[14:35:51] *** Joins: nostalgia (~nostalgia@110.8.30.213.rev.vodafone.pt)
[14:39:16] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[14:39:58] *** darkapex_ is now known as darkapex
[14:52:46] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[14:55:50] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[14:57:23] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[14:58:28] *** Joins: grzywacz (~grzywacz@user/grzywacz)
[15:08:24] <leitz> Sam, I think it got a bit long. Seems to work, though.    https://gist.github.com/LeamHall/873c7ac1eafaa51017f7702cc2360881
[15:09:48] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[15:14:07] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[15:15:42] *** Quits: resamvi (~resamvi@p4ff773f9.dip0.t-ipconnect.de) (Changing host)
[15:15:43] *** Joins: resamvi (~resamvi@user/resamvi)
[15:16:29] <resamvi> leitz: what's the slice operator on line 20 doing?
[15:19:15] <leitz> resamvi, IIUC it's taking the entireity of b. The honest answer is that I spent a lot of time trying to convert between rand output and something that could go into a []byte, so I use some code from the "3 vote" answer on:    https://stackoverflow.com/questions/46904588/efficient-way-to-to-generate-a-random-hex-string-of-a-fixed-length-in-golang
[15:20:23] <leitz> resamvi, the length of the output changes if I used [:9], [:10], and [:].
[15:21:35] <leitz> So, I'm pretty sure I don't fully understand it. Coffee is still kicking in.
[15:21:58] *** Quits: someone235 (uid419897@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:24:07] *** Joins: fef (~thedawn@user/thedawn)
[15:26:24] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[15:27:21] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[15:30:21] *** Quits: nostalgia (~nostalgia@110.8.30.213.rev.vodafone.pt) (Read error: Connection reset by peer)
[15:30:35] *** Joins: nostalgia (~nostalgia@110.8.30.213.rev.vodafone.pt)
[15:31:50] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[15:33:10] <Sam> Doing hex encoding *then* base64 encoding seems unnecessary, but that will work too. The extra slice that someone mentioned won't actually do anything
[15:33:31] <Sam> You could also just keep it as bytes instead of encoding to string so that you don't have to then just convert it right back to a byte slice
[15:33:33] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 268 seconds)
[15:34:10] <Sam> (I say that it's "unnecessary" but what I mean is that it's probably not actually what you want to do)
[15:34:29] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[15:37:18] <leitz> Funny that rand.Read(p) writes to p.  :)
[15:37:47] <leitz> Why do the strings end in "=="
[15:37:49] <leitz> ?
[15:40:24] <Sam> That's the default padding. Base64 encodes in groups of 4 characters. If the last bit of data doesn't take up 4 full characters of base64 it adds one or two padding characters to make the last block be 4 characters long even though there wasn't enough data
[15:40:54] <leitz> Cool, good to know.
[15:46:05] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[15:50:54] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[15:51:19] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[15:57:53] <leitz> So, changing the "10" in line 15 to 12 eliminates the "==" because len(b) & 4 == 0. Wait, no. Changing 10 to 16 goes back to padded character, but changing 10 to 18 eliminates them.
[16:09:09] *** Joins: leonthemisfit (~Leon@126.sub-174-198-194.myvzw.com)
[16:09:09] *** Quits: leonthemisfit (~Leon@126.sub-174-198-194.myvzw.com) (Changing host)
[16:09:09] *** Joins: leonthemisfit (~Leon@user/leonthemisfit)
[16:11:27] *** Joins: jla (~jordi@64.225.79.195)
[16:14:54] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:14:56] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:19:31] *** Joins: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de)
[16:21:11] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:25:17] *** Joins: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de)
[16:25:17] *** Quits: tane (~tane@dslb-002-201-234-197.002.201.pools.vodafone-ip.de) (Changing host)
[16:25:17] *** Joins: tane (~tane@user/tane)
[16:25:31] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[16:29:14] *** Joins: shiroyas1 (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com)
[16:31:32] *** Quits: shiroyasha (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com) (Ping timeout: 268 seconds)
[16:39:27] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[16:44:13] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[16:52:40] <lazyreader> The mapping is from 3 bytes to 4 bytes, so it’s not as simple as modulo 4
[16:53:29] *** Quits: shiroyas1 (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com) (Quit: WeeChat 3.3)
[16:53:43] *** Joins: shiroyasha (~shiroyash@ec2-3-124-70-31.eu-central-1.compute.amazonaws.com)
[16:54:11] <lazyreader> You want modulo 3
[16:55:08] <lazyreader> https://en.wikipedia.org/wiki/Base64#Output_padding
[16:56:45] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[17:01:26] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[17:08:46] <matt1982> hey i have an internal folder and when i try to build my project the changes i made to some internal modules doesnt seem to take effect. Any idea how to force a rebuild on everything?
[17:09:22] <matt1982> just writing that made me think better haha
[17:09:29] <matt1982> "go build -a"
[17:11:45] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[17:13:04] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[17:14:48] *** Quits: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[17:17:36] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 245 seconds)
[17:18:42] <Sam> If it's because you have a module that's not being rebuilt go build -a likely won't do what you want. That will just rebuild packages that are already up to date, probably using whatever the version of the module you already have is.
[17:18:49] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[17:19:17] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[17:19:28] <Sam> If I understood what you were asking correctly, that is. You probably want to temporarily use a replace line in your go.mod file to point to the latest version of your internal module, then when you're ready to pin to a version that's been released you can remove the replace line and point to a specific version.
[17:22:48] <krux02> Is there some documentation on how I can low level interface go modules? The question is about calling convention and name mangling, not about exporting a function to C.
[17:26:44] <Sam> Modules aren't dynamic libraries and since things are addressed by their package (not by their module) modules don't really have anything to do with name mangling (and name mangling isn't necessary since two things can't have the same name). Maybe if you ask about the specific thing you're looking for people can give you a better recommendation?
[17:30:49] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[17:31:50] <krux02> Sam, I am just exploring the possibilies here to interface with go.
[17:32:00] <Sam> From what?
[17:32:34] <krux02> From a custom programming language that is currently a very thin prototype
[17:32:53] <krux02> The idea solution would be to have wrapper free interop with go.
[17:32:58] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[17:32:58] <krux02> (and other languages)
[17:33:11] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 268 seconds)
[17:33:13] <krux02> the less friction to use existing solutions in existing languages the better.
[17:33:24] <Sam> Look at "go help buildmode", c-shared is probably what you want
[17:34:08] <krux02> Sam: "The only callable symbols will be those functions exported using a cgo //export comment."
[17:34:19] <krux02> that is exactly what I would like to avoid.
[17:34:36] <Sam> Correct, Go doesn't provide a stable calling convention for other things to use, if you'd like to use Go from other things (and not have it break with new versions) you probably need to use the C stuff.
[17:34:42] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[17:35:00] <krux02> make all symbols that a available from go also available to my language, that would be my goal.
[17:35:13] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[17:35:48] <Sam> That's likely not possible without modifications to Go or without the issue of it breaking between versions or on different Go compilers, but someone else may have more experience with this than I do.
[17:36:04] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[17:36:12] <krux02> that would be sad indeed.
[17:36:51] <krux02> after all, go has a very nice name mangling sheme and packages.
[17:36:58] <krux02> much better than interfacing C.
[17:37:50] *** Quits: grzywacz (~grzywacz@user/grzywacz) (Quit: :wq)
[17:40:27] *** Joins: agsv (~agsv@207.232.14.6)
[17:41:33] <agsv> hey is there a way to drop a match from sscanf? like `fmt.Sscanf("124321_foobar", "%d_%s", _, &suffix)` or do I need to put a junk variable there?
[17:41:49] <agsv> this one obviously complains about the underscore
[17:42:16] <matt1982> @Sam thanks for taking the time to reply to me. These are just internal modules so i have a cmd/ and internal folder from root project. The changes to files in internal/ didnt seem to be taking effect when i went into cmd/ and typed 'cmd build' sadly
[17:42:30] <krux02> agsv, have you tried a null pointer?
[17:42:36] *** Quits: nostalgia (~nostalgia@110.8.30.213.rev.vodafone.pt) (Ping timeout: 245 seconds)
[17:43:19] <fizzie> Heh, coincidentally I wanted to suppress assignment the other day too, and didn't find a way; you can't do it with a `nil` argument, and you can't do it with the '*' format flag like in C scanf.
[17:43:34] <Sam> matt1982: do you mean "modules" or "packages"? Both are a thing in Go but I can't tell what you're talking about from your question. Inside internal/something do you have a go.mod file?
[17:44:28] <agsv> krux02: null pointer?
[17:44:36] <krux02> agsv, sorry I mean nil
[17:44:38] <resamvi> leitz, I used your problem as a playground to practice my knowledge on reader and writers if you want to see an alternative: https://play.golang.com/p/7i1bp7jYScK
[17:45:24] <fizzie> fmt.Sscanf will just panic on a nil argument.
[17:46:28] <matt1982> ahhh @Sam there is no go.mod inside the internal/ folder
[17:47:53] <Sam> Then it is a package, not a module and it should definitely be using the latest code every time
[17:48:14] <matt1982> ahh cool thats great. Many many thanks for clarifying it for me
[17:48:22] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[17:51:10] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:5c20:adb3:d75f:164)
[17:51:36] <Sam> Do you have a go.mod file anywhere in your project? My guess is that you put one in cmd/go.mod. If you did that, the internal package won't be part of the same module and (I assume) won't be updated when you rebuild
[17:52:19] <Sam> (although I don't even know how you'd be importing it in that case now that I think about it, so maybe something else is going on here)
[17:52:28] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:5c20:adb3:d75f:164) (Ping timeout: 260 seconds)
[17:52:47] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[17:58:00] *** Quits: agsv (~agsv@207.232.14.6) (Remote host closed the connection)
[18:02:00] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:5c20:adb3:d75f:164)
[18:02:17] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[18:03:34] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:03:40] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:5c20:adb3:d75f:164) (Ping timeout: 260 seconds)
[18:03:56] *** Joins: mickey8 (~user@user/mickey)
[18:04:38] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[18:06:14] *** Quits: X-Scale (~ARM@31.22.160.27) (Ping timeout: 260 seconds)
[18:06:23] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[18:06:53] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[18:07:55] *** X-Scale` is now known as X-Scale
[18:10:34] *** Joins: adlternative (~adl@117.32.216.79)
[18:11:26] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[18:17:40] *** Quits: adlternative (~adl@117.32.216.79) (Quit: Konversation terminated!)
[18:19:26] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[18:23:19] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[18:24:36] *** Joins: neurocyte0132889 (~neurocyte@45.14.190.246)
[18:24:36] *** Quits: neurocyte0132889 (~neurocyte@45.14.190.246) (Changing host)
[18:24:36] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:25:47] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:27:11] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Client Quit)
[18:27:42] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[18:31:01] *** Joins: neurocyte0132889 (~neurocyte@45.14.190.246)
[18:31:02] *** Quits: neurocyte0132889 (~neurocyte@45.14.190.246) (Changing host)
[18:31:02] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:31:04] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[18:33:46] <leitz> resamvi, nice!
[18:34:05] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Client Quit)
[18:34:33] <leitz> lazyreader, thanks!
[18:35:39] *** Joins: neurocyte0132889 (~neurocyte@45.14.190.246)
[18:35:39] *** Quits: neurocyte0132889 (~neurocyte@45.14.190.246) (Changing host)
[18:35:39] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:44:14] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[18:49:47] *** Joins: jpw (~jpw@user/jpw)
[18:50:20] *** Quits: markkuit (~markkuit@93-43-234-84.ip94.fastwebnet.it) (Ping timeout: 260 seconds)
[18:52:05] *** Quits: monchi (~m-6uy5ag@lo3.online) (Remote host closed the connection)
[18:57:34] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[19:00:52] *** Joins: monchi (~m-6uy5ag@lo3.online)
[19:01:55] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[19:06:35] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[19:07:15] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[19:09:05] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Quit: A random quit message)
[19:09:20] *** Quits: menace (~someone@user/menace) (Remote host closed the connection)
[19:09:53] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[19:10:23] *** Joins: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de)
[19:12:28] *** Joins: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com)
[19:12:59] *** Quits: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de) (Changing host)
[19:12:59] *** Joins: menace (~someone@user/menace)
[19:14:40] *** Joins: wolfdale0 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[19:15:33] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 268 seconds)
[19:15:34] *** wolfdale0 is now known as wolfdale
[19:16:07] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[19:18:00] *** justUnited is now known as justCity
[19:18:25] *** Joins: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net)
[19:19:47] *** Quits: yonson (~yonson@2600:8801:d900:7bb::d7c) (Remote host closed the connection)
[19:20:37] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[19:20:58] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[19:21:00] *** Joins: markkuit (~markkuit@93-43-234-84.ip94.fastwebnet.it)
[19:21:24] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[19:26:19] *** Joins: jla (~jordi@64.225.79.195)
[19:33:34] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[19:36:21] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[19:36:43] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[19:38:23] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 268 seconds)
[19:46:59] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[19:47:22] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[19:50:11] *** Quits: markkuit (~markkuit@93-43-234-84.ip94.fastwebnet.it) (Ping timeout: 264 seconds)
[19:58:51] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[19:59:12] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[20:00:25] *** Joins: goldfish (~goldfish@user/goldfish)
[20:02:27] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[20:04:15] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Client Quit)
[20:05:33] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[20:06:13] *** Quits: tyson2 (~user@cpe688f2ec1f9b3-cm688f2ec1f9b0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[20:07:46] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[20:09:25] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[20:09:41] *** Joins: goldfish (~goldfish@user/goldfish)
[20:10:22] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[20:10:53] *** Joins: neurocyte0132889 (~neurocyte@45.14.190.246)
[20:10:53] *** Quits: neurocyte0132889 (~neurocyte@45.14.190.246) (Changing host)
[20:10:53] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[20:11:12] *** Joins: mei32 (~mei@user/mei)
[20:14:47] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 264 seconds)
[20:14:47] *** mei32 is now known as mei3
[20:18:29] *** Quits: rek2 (~ReK2@47.62.9.10) (Quit: WeeChat 3.3)
[20:37:39] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Quit: The Lounge - https://thelounge.chat)
[20:41:14] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[20:43:48] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[20:45:54] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[20:46:21] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Ping timeout: 245 seconds)
[20:58:11] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[21:01:22] *** Quits: resamvi (~resamvi@user/resamvi) (Quit: Lost terminal)
[21:02:24] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:02:41] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 244 seconds)
[21:02:42] *** Joins: mickey8 (~user@user/mickey)
[21:12:18] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[21:16:09] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[21:20:46] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 244 seconds)
[21:22:18] *** Joins: goldfish_ (~goldfish@user/goldfish)
[21:22:19] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[21:26:59] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 256 seconds)
[21:27:28] *** Joins: markkuit (~markkuit@93-43-234-84.ip94.fastwebnet.it)
[21:28:10] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[21:33:05] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[21:35:36] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[21:36:03] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[21:36:06] *** Joins: novns (~novns@user/novns)
[21:36:20] *** Quits: novns (~novns@user/novns) (Remote host closed the connection)
[21:36:51] *** Joins: novns (~novns@user/novns)
[21:37:45] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[21:42:49] *** Joins: mobbi (~quassel@dfs2j6yhkc7bg2jbrw1wy-3.rev.dnainternet.fi)
[21:50:08] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[21:54:21] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 244 seconds)
[22:00:59] *** Joins: attila_lendvai (~alendvai@catv-89-132-208-37.catv.broadband.hu)
[22:03:50] <ikke> Why is it so difficult to name things :-/ (mostly packages)
[22:04:46] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 260 seconds)
[22:06:43] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[22:06:50] *** Joins: tyson2 (~user@24.114.73.80)
[22:10:53] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 244 seconds)
[22:16:42] *** Quits: chasmo77 (~chas77@71.63.241.168) (Remote host closed the connection)
[22:21:27] <seebs> because naming things is one of the two hard problems in computer science.
[22:21:33] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[22:21:34] <seebs> the other is usually called cache invalidation.
[22:21:50] <ikke> and the third off-by-one errors :P
[22:24:05] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[22:24:23] *** Quits: menace (~someone@user/menace) (Remote host closed the connection)
[22:24:42] *** Joins: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de)
[22:25:59] *** Joins: _xor (~xor@72.49.199.147)
[22:27:26] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[22:28:45] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[22:31:27] *** Quits: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de) (Remote host closed the connection)
[22:31:32] *** Quits: tyson2 (~user@24.114.73.80) (Remote host closed the connection)
[22:31:44] *** Joins: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de)
[22:32:55] *** Joins: yonson (~yonson@2600:8801:d900:e::16db)
[22:41:38] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 260 seconds)
[22:42:26] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[22:49:42] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:57:19] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[23:01:31] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 244 seconds)
[23:04:26] *** Quits: menace (~someone@ppp-93-104-164-149.dynamic.mnet-online.de) (Quit: menace)
[23:06:06] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Quit: The Lounge - https://thelounge.chat)
[23:06:49] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[23:07:12] *** Joins: _xor (~xor@72.49.199.147)
[23:09:47] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:10:04] *** Joins: mickey8 (~user@user/mickey)
[23:10:05] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[23:13:35] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 268 seconds)
[23:13:43] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[23:18:23] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[23:24:41] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 268 seconds)
[23:25:49] *** Joins: gregf (~gregf@user/gregf)
[23:25:58] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 260 seconds)
[23:32:15] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[23:32:31] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 244 seconds)
[23:33:16] <b0nn> ikke: For project names I found a random name generator that has a list of adjectives and a list of nouns, randomly selecting one from each list generating a name
[23:33:32] <b0nn> It's how I found the name for my bot's project - fluentdrama :-)
[23:33:58] <b0nn> for packages where a meaningful name is required, you're screwed :\
[23:34:07] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[23:35:37] <ikke> ahuh
[23:35:41] <ikke> the latter is the case
[23:36:42] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[23:37:14] *** Joins: grzywacz (~grzywacz@user/grzywacz)
[23:49:25] *** Joins: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net)
[23:51:49] *** Quits: bkircher (~bkircher@2001:a61:25e1:a901:f7b9:7a2c:5cbb:7cb) (Ping timeout: 268 seconds)
[23:53:42] *** Quits: DogHackit (~nathanren@c-76-27-57-63.hsd1.ut.comcast.net) (Ping timeout: 244 seconds)
[23:54:36] *** Quits: marlinc (~marlinc@user/marlinc) (Quit: ZNC 1.8.2+deb1+focal2 - https://znc.in)
[23:55:22] *** Quits: GJdan_ (~quassel@107-190-25-70.cpe.teksavvy.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:55:27] *** Joins: marlinc (~marlinc@user/marlinc)
[23:56:45] *** Joins: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com)
[23:58:04] *** Joins: preisi_svr (~preisi@boron.tpreisner.de)
[23:58:15] *** Quits: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com) (Read error: Connection reset by peer)
[23:59:17] *** Joins: GJdan (~quassel@107-190-25-70.cpe.teksavvy.com)
[23:59:55] *** Quits: preisi_svr (~preisi@boron.tpreisner.de) (Client Quit)
[23:59:58] *** Quits: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
