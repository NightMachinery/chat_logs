[00:04:44] *** Joins: dmathieu (~textual@78.203.212.55)
[00:05:30] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 240 seconds)
[00:05:53] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[00:06:04] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[00:08:14] *** Joins: jolof (~jolof@user/jolof)
[00:12:58] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[00:14:54] *** Joins: NCSantos (~NCS_One@bl11-90-133.dsl.telepac.pt)
[00:16:12] *** Joins: arcatech (~arcatech@user/arcatech)
[00:17:10] *** Quits: dmathieu (~textual@78.203.212.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:28:25] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[00:31:27] *** Quits: Guest53 (~textual@170.250.221.149) (Remote host closed the connection)
[00:31:39] *** Joins: Guest53__ (~textual@170.250.221.149)
[00:32:58] *** Joins: GoLiath_ (~GoLiath@178.239.173.165)
[00:34:00] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[00:35:29] *** Joins: gilesc (~textual@2603-8001-3600-dad7-45ed-2a00-4396-4425.res6.spectrum.com)
[00:36:49] *** Joins: dmathieu (~textual@78.203.212.55)
[00:38:40] *** Quits: gilesc (~textual@2603-8001-3600-dad7-45ed-2a00-4396-4425.res6.spectrum.com) (Client Quit)
[00:41:28] *** Quits: dmathieu (~textual@78.203.212.55) (Ping timeout: 250 seconds)
[00:44:26] <foobaz> be careful, some characters are composed of multiple runes (e.g. ç), and some runes contain multiple characters (e.g. ﬁ)
[00:44:59] <chameleon> unicode is hardb
[00:45:06] <foobaz> also, the same character can be represented multiple ways
[00:45:47] <foobaz> i recommend normalizing your string before breaking it down into runes
[00:47:57] <j416> I want to have an interface foo, with implementation and mock implementation (for testing), within the same package. The mock I can call mockFoo, but the name of the interface kind of clashes with the name of the implementation. Does anyone have a good convention? I know about Ben Johnson's package layout thing, but I'd like to keep this within one package.
[00:48:04] <foobaz> there are multiple unicode normalization forms with different behavior, form KD is the strongest normalization and form C is the most conservative
[00:50:02] *** Joins: dr0n (~nabromov@94.11.23.235)
[00:50:03] <foobaz> i use form KD for usernames and form C for passwords
[00:50:44] <seebs> j416: i usually name the implementation after something *about* that implementation, or just don't export the name at all
[00:50:59] <seebs> but basically: think of what another implementation would do differently, and use that to guide naming.
[00:51:39] *** Quits: dr0n (~nabromov@94.11.23.235) (Client Quit)
[00:51:49] <j416> seebs: the name is unexported; this is package-internal
[00:52:25] <j416> seebs: I try to do that too, but in this case it's only a single implementation and one mock; the only reason I have the interface is so that I can run tests against a mock implementation
[00:52:28] <seebs> at that point, anything is probably fine, realInterfacename is probably fine, i guess? but the name will likely be rarely used.
[00:52:31] <seebs> hmm
[00:52:39] <seebs> i do have a general vague distrust of mocking tests, fwiw
[00:53:03] *** Quits: Guest53__ (~textual@170.250.221.149) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:53:06] <j416> yeah
[00:53:12] <j416> I might try to do away with the mock
[00:54:28] <j416> the only reason I have the mock is to pretend it returns an error, so that I can see that I'm handling that properly
[00:54:42] <j416> perhaps I can make it err in some way without the mock.
[00:55:12] <foobaz> yea give it bad data and it should return an error naturally
[00:55:17] <j416> yep
[00:55:32] <j416> thanks; I'll try to skip the interface+mock and see how far I get. cheers.
[00:56:51] *** Joins: kulak (~kulak@user/kulak)
[00:57:43] *** Joins: sadg (~odd@193.32.249.162)
[01:00:59] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[01:02:12] *** Quits: andlabs_ (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:02:45] *** Joins: dr0n (~nabromov@94.11.23.235)
[01:03:29] *** Quits: nachoes (~nachoes@user/nachoes) (Quit: bye)
[01:03:34] *** Joins: andlabs (~andlabs@71.190.119.164)
[01:05:13] *** Quits: tha (~user@2a05:f480:1400:f44:5400:3ff:fe6d:f349) (Quit: tha)
[01:05:56] *** Joins: tha (~user@2a05:f480:1400:f44:5400:3ff:fe6d:f349)
[01:05:58] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:07:02] *** Quits: andlabs (~andlabs@71.190.119.164) (Client Quit)
[01:07:07] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[01:10:06] *** Joins: andlabs (~andlabs@71.190.119.164)
[01:11:20] *** Quits: Kane (~Kane@2a01:e34:ee89:5d90:c922:2db8:2549:71e4) (Quit: Leaving)
[01:17:26] *** Joins: textbox (~textbox@78-56-77-125.static.zebra.lt)
[01:18:28] *** Joins: sweb (~sweb@static.187.181.76.144.clients.your-server.de)
[01:19:32] <sweb> how can i dynamicly build embed bytes to map structure ? https://paste.ubuntu.com/p/jSQCDWKQRF/
[01:23:13] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 272 seconds)
[01:28:58] *** Joins: theoceaniscool (~theoceani@188.127.173.202)
[01:29:05] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-df50-9334-2200-b3b6.res6.spectrum.com) (Remote host closed the connection)
[01:32:53] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[01:33:26] <Tv_> sweb: go:embed needs a variable, so use one
[01:34:37] *** Quits: textbox (~textbox@78-56-77-125.static.zebra.lt) (Ping timeout: 246 seconds)
[01:36:49] *** Joins: Guest53 (~textual@170.250.221.149)
[01:38:48] *** Quits: tebruno99 (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net) (Remote host closed the connection)
[01:39:53] *** Quits: Guest53 (~textual@170.250.221.149) (Client Quit)
[01:40:01] *** Quits: GoLiath_ (~GoLiath@178.239.173.165) (Quit: Textual IRC Client: www.textualapp.com)
[01:40:20] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 244 seconds)
[01:41:41] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[01:41:57] *** Joins: mickey (~user@user/mickey)
[01:48:02] *** Joins: Guest53 (~textual@170.250.221.149)
[01:48:29] <b0nn> sweb: I didn't think you did embeds inside init() - it's at package level and done at compile time
[01:48:38] <b0nn> Well, that's what I thought at any rate
[01:49:30] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[01:51:13] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[01:51:56] *** Quits: Guest53 (~textual@170.250.221.149) (Remote host closed the connection)
[01:52:13] *** Joins: Guest53__ (~textual@170.250.221.149)
[01:54:03] *** Quits: chasmo77 (~chas77@71.63.241.168) (Ping timeout: 268 seconds)
[01:54:58] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 265 seconds)
[01:58:21] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 265 seconds)
[01:59:49] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:00:36] <dza> for ((i = 0; i < 100; i++)); do go test -bench=. -benchmem; done .. I tried doing this with some jumpy allocs, it seems gorm.db(*DB).find is climbing in allocs on each iteration, started at 6000 allocs with 50 runs its about 14000, why is that?
[02:00:56] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[02:01:12] <dza> db.Find(reflect.New(m.Resource.Slice.Type()).Interface())  is the line tested
[02:06:24] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 250 seconds)
[02:08:33] *** Joins: dany74q (~dany74q@igld-84-229-190-86.inter.net.il)
[02:13:06] *** Quits: dany74q (~dany74q@igld-84-229-190-86.inter.net.il) (Ping timeout: 252 seconds)
[02:15:17] *** Quits: Guest53__ (~textual@170.250.221.149) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:18:28] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[02:18:31] *** Quits: jolof (~jolof@user/jolof) (Quit: leaving)
[02:27:25] *** Joins: cync (~blah@192.180.187.81.in-addr.arpa)
[02:34:16] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d) (Remote host closed the connection)
[02:34:37] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d)
[02:36:09] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-df50-9334-2200-b3b6.res6.spectrum.com)
[02:38:46] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:43:22] <seebs> I don't know, but my intuition is that implies a test case that's not cleaning up after itself correctly, because otherwise, multiple runs of go test shouldn't look different.
[02:43:32] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[02:50:00] *** Quits: Steeve (~steve@user/steeve) (Quit: end)
[02:53:09] *** Joins: Torr (~Torr@user/torr)
[02:56:00] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[03:00:25] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 244 seconds)
[03:00:32] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[03:01:26] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 250 seconds)
[03:01:59] *** Quits: Xjs (~jannis@user/xjs) (Quit: Good night.)
[03:02:15] *** Joins: Guest53 (~textual@170.250.221.149)
[03:10:01] <dza> seebs: that might be close, if I run the test singularly with -bench=Get then it shows same alloc. I only have a db init that is deferred, but its these 3 db tests that climb in a hundred allocs at a time together
[03:11:26] *** Quits: Guest53 (~textual@170.250.221.149) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:24:21] *** Joins: nachoes (~nachoes@user/nachoes)
[03:27:08] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 258 seconds)
[03:29:42] *** Quits: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:32:13] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[03:36:53] *** Quits: DeltaNova (~DeltaNova@user/deltanova) (Quit: WeeChat 3.0.1)
[03:37:29] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 272 seconds)
[03:48:30] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[03:55:20] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[03:55:59] *** Joins: kulak (~kulak@user/kulak)
[03:57:17] *** Parts: tha (~user@2a05:f480:1400:f44:5400:3ff:fe6d:f349) ()
[03:57:47] <dza> yeah it was the db filling up
[04:00:09] *** Joins: SandorClegane (~user@2a05:f480:1400:f44:5400:3ff:fe6d:f349)
[04:00:49] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[04:02:12] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Client Quit)
[04:02:45] *** Quits: SandorClegane (~user@2a05:f480:1400:f44:5400:3ff:fe6d:f349) (Client Quit)
[04:04:39] *** Joins: noarb- (~noarb@user/noarb)
[04:05:06] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Ping timeout: 272 seconds)
[04:05:08] *** Joins: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net)
[04:05:24] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 268 seconds)
[04:06:03] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[04:07:11] *** Quits: siika_ (~siika@139.226.50.205) (Remote host closed the connection)
[04:07:35] *** Joins: siika_ (~siika@139.226.50.41)
[04:07:36] *** Quits: kaleido_ (~adam@2604:4300:a:22a:202:c9ff:fec1:9e70) (Read error: Connection reset by peer)
[04:08:47] *** Joins: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1000.inf6.spectrum.com)
[04:09:09] *** Joins: Pent (sid313808@id-313808.tooting.irccloud.com)
[04:09:19] *** Joins: kmerfeld (~kmerfeld@99-184-106-79.lightspeed.sbndin.sbcglobal.net)
[04:11:59] *** Joins: fishgod (~evan@user/fishgod)
[04:15:42] *** Quits: fishgod (~evan@user/fishgod) (Client Quit)
[04:32:03] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[04:34:47] *** Joins: trusch_ (~trusch@i577B0A3A.versanet.de)
[04:37:38] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 250 seconds)
[04:38:03] *** Quits: trusch (~trusch@87.123.3.75) (Ping timeout: 258 seconds)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:21] *** Quits: NCSantos (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[04:47:36] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:49:56] <b0nn> integration tests are a PITA
[04:50:40] <b0nn> You wither need to set your fixtures right, and clear the DB each time, or they rely on tests being run in a certain order
[04:50:43] <b0nn> r
[04:50:55] <b0nn> either*
[04:52:23] <Tv_> one common mistake is to run a workload of b.N items, while the correct thing is to repeat the same workload b.N times
[04:53:23] <Tv_> for databases, i would hesitate to use the same instance for multiple runs, and even within that b.N loop there's going to be an accrual effect of postponed background maintenance
[04:53:38] <Tv_> comes down to "go test was never meant to be a *system* benchmark"
[04:54:07] *** Quits: pepee (~user@user/pepee) (Ping timeout: 268 seconds)
[04:54:21] <Tv_> db benchmarks really should be run on dedicated hardware over a long enough time interval that it suffers through all the maintenance chores too
[04:57:09] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[05:02:35] *** Joins: yoonkn (~user@175.197.208.79)
[05:02:44] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 272 seconds)
[05:03:38] * rk4 wonders is anything in anywhere he's worked in the last few years has been dedicated hardware
[05:05:06] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.8.2 - https://znc.in)
[05:05:48] *** Joins: pepee (~user@user/pepee)
[05:06:14] *** Joins: icy (~icy@user/icy)
[05:13:31] <Tv_> you can rent it
[05:13:45] <Tv_> "dedicated" = "does nothing else at the same time"
[05:14:46] <Tv_> and fwiw gcp does not oversubscribe its vms, so that one counts more like mainframe-style hw partitioning, which is fine for reproducible results
[05:15:32] <Tv_> but lol if your benchmarks rely on aws networking speed to be consistent
[05:20:50] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[05:26:21] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 258 seconds)
[05:32:57] *** Quits: dr0n (~nabromov@94.11.23.235) (Ping timeout: 265 seconds)
[05:50:00] *** Quits: KekSi (~KekSi@x4db684d7.dyn.telefonica.de) (Ping timeout: 250 seconds)
[05:54:03] *** Joins: KekSi (~KekSi@x4dbd0512.dyn.telefonica.de)
[05:56:27] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[06:04:19] <Tv_> there's not many things worse than hunting for typos in slow-running integration tests :-/
[06:06:18] <llorllale> Tv_: just make sure you're not pointing to prod :D
[06:06:35] <Tv_> that's my trick, there is no prod
[06:06:46] <Tv_> the joys of just writing software
[06:10:16] <llorllale> what are you doing working at this hour on this day anyway?
[06:10:22] <llorllale> pack up; go home
[06:11:27] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:13:43] <Tv_> i am home, and "working" is a funny word for someone who hasn't had a normal job in a very long time
[06:19:22] <llorllale> I'm afraid to ask
[06:20:42] *** Quits: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[06:23:32] *** Quits: Snyp (~rksht@49.207.198.3) (Quit: WeeChat 3.2)
[06:30:18] *** Joins: popey6 (~popey@ubuntu/member/popey)
[06:32:23] *** Quits: popey (~popey@ubuntu/member/popey) (Ping timeout: 256 seconds)
[06:32:24] *** popey6 is now known as popey
[06:51:30] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:52:42] *** Joins: Guest53 (~textual@170.250.221.149)
[06:53:21] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[06:53:52] *** Quits: Guest53 (~textual@170.250.221.149) (Read error: Connection reset by peer)
[06:56:05] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[07:01:47] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[07:05:22] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[07:05:36] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[07:06:26] *** Joins: kulak (~kulak@user/kulak)
[07:08:39] *** Joins: andlabs (~andlabs@71.190.119.164)
[07:12:47] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[07:13:46] *** Joins: kulak (~kulak@user/kulak)
[07:17:15] *** Joins: s-video (~s-video@2601:196:4b00:e70:3166:655c:cf0d:780e)
[07:23:20] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[07:24:09] *** Joins: kulak (~kulak@user/kulak)
[07:24:53] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[07:34:06] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[07:34:50] *** Joins: kulak (~kulak@user/kulak)
[07:35:30] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[07:35:49] *** Joins: kulak (~kulak@user/kulak)
[07:36:36] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 250 seconds)
[07:38:32] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[07:41:13] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Client Quit)
[07:42:33] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[07:49:02] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[07:50:40] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[07:50:53] *** Parts: ansimita (~ansimita@user/ansimita) ()
[07:59:53] *** Quits: jespada (~jespada@90.254.247.46) (Ping timeout: 265 seconds)
[08:00:36] *** Joins: ansimita (~ansimita@user/ansimita)
[08:01:49] *** Joins: jespada (~jespada@90.254.247.46)
[08:03:32] *** Quits: jackneilll (~jackneill@20014C4E181A4F00C4B4F3FE6613B3A9.unconfigured.pool.telekom.hu) (Remote host closed the connection)
[08:03:50] *** Joins: jackneilll (~jackneill@20014C4E181A4F00EC5F29AA093F6549.dsl.pool.telekom.hu)
[08:15:12] *** Joins: jsrnop (~mark@user/jsrnop)
[08:32:39] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[08:35:33] *** Quits: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1000.inf6.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[08:39:00] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 250 seconds)
[08:50:41] *** Joins: Crassus (~Crassus@user/crassus)
[08:52:15] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[08:58:02] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[08:58:28] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 244 seconds)
[09:02:12] *** Quits: rabbitear (~juice@142.93.115.104) (Remote host closed the connection)
[09:03:21] *** Joins: rabbitear (~juice@142.93.115.104)
[09:03:23] *** Quits: be3uykpy (~be3uykpy@141.226.9.247) (Quit: Leaving)
[09:05:10] *** Joins: mastardet (~mastardet@user/mastardet)
[09:09:59] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[09:10:30] *** Joins: oxum (~oxum@136.185.148.86)
[09:10:38] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 250 seconds)
[09:13:32] *** Joins: josta (~josta@23.226.133.74)
[09:15:35] *** Quits: oxum (~oxum@136.185.148.86) (Ping timeout: 268 seconds)
[09:16:49] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 268 seconds)
[09:18:16] *** Quits: josta (~josta@23.226.133.74) (Ping timeout: 258 seconds)
[09:18:33] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[09:19:47] *** Joins: kulak (~kulak@user/kulak)
[09:31:40] *** Joins: amigan (dramoray@dtvax.dynatron.me)
[09:34:08] *** Quits: Eddward (~Eddward@207.138.204.132) (Ping timeout: 265 seconds)
[09:37:19] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[09:38:53] <lack> Hey, is it better to have a 'func foo() (*Foo, error)' and 'return nil, err' for problems, or is having 'func foo() (Foo, error)' which does 'return Foo{}, err' preferred?
[09:42:21] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 265 seconds)
[09:44:03] *** Joins: telboon (~telboon@user/telboon)
[09:46:04] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.8.2 - https://znc.in)
[09:46:25] *** Quits: skrzyp (~skrzyp@skrzyp.net) (Ping timeout: 268 seconds)
[09:51:48] *** Quits: s-video (~s-video@2601:196:4b00:e70:3166:655c:cf0d:780e) (Ping timeout: 250 seconds)
[09:53:55] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[09:55:07] *** Joins: s-video (~s-video@2601:196:4b00:e70:f092:2ea1:6dfe:14c9)
[09:57:23] *** Joins: jkl (~jkl@45-19-26-123.lightspeed.cicril.sbcglobal.net)
[09:59:26] *** Joins: icy (~icy@user/icy)
[09:59:57] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 244 seconds)
[10:02:33] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 272 seconds)
[10:03:04] <KirkMcDonald> lack: It depends.
[10:03:09] <b0nn> lack: The choice of returning a pointer or a value /shouldn't/ be predicated on what's best for returns
[10:03:17] <b0nn> KirkMcDonald: snap
[10:03:30] <KirkMcDonald> Yeah. It's a matter of which type is the more meaningful one.
[10:05:48] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Ping timeout: 258 seconds)
[10:07:39] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[10:12:04] *** Quits: amigan (dramoray@dtvax.dynatron.me) (Quit: WeeChat 3.2)
[10:13:29] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[10:19:51] *** Joins: Snyp (~rksht@49.207.198.3)
[10:20:00] *** Parts: sweb (~sweb@static.187.181.76.144.clients.your-server.de) ()
[10:20:03] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 265 seconds)
[10:24:46] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[10:25:20] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Ping timeout: 268 seconds)
[10:26:31] *** Joins: kulak (~kulak@user/kulak)
[10:28:41] *** Joins: oxum (~oxum@136.185.148.86)
[10:29:09] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.8.2 - https://znc.in)
[10:30:56] *** Joins: icy (~icy@user/icy)
[10:32:09] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[10:33:24] *** Quits: oxum (~oxum@136.185.148.86) (Ping timeout: 258 seconds)
[10:38:24] *** Quits: s-video (~s-video@2601:196:4b00:e70:f092:2ea1:6dfe:14c9) (Ping timeout: 272 seconds)
[10:38:36] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 250 seconds)
[10:39:00] *** Joins: s-video (~s-video@2601:196:4b00:e70:e942:d750:a087:414d)
[10:39:29] <rk4> Tv_: oh i agree in theory on the dedicated hardware, but my prod runs on aws and is all shared, makes sense to benchmark in the same conditions as is applicable, albeit they won't be as repeatable! just like our prod performance :(
[10:50:06] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[10:50:10] *** Quits: kupi (uid212005@id-212005.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[10:56:08] *** Quits: PedroG1 (~android@45.77.216.181) (Quit: Got you)
[10:56:46] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 272 seconds)
[10:59:50] *** Joins: PedroG1 (~android@45.77.216.181)
[11:05:09] *** Joins: Deknos (~someone@2001:a61:3456:4d01:894e:8ca1:e6e:ed18)
[11:05:49] *** Quits: Deknos (~someone@2001:a61:3456:4d01:894e:8ca1:e6e:ed18) (Remote host closed the connection)
[11:06:56] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[11:07:27] *** Joins: kulak (~kulak@user/kulak)
[11:08:43] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[11:09:58] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[11:13:42] *** Quits: s-video (~s-video@2601:196:4b00:e70:e942:d750:a087:414d) (Ping timeout: 250 seconds)
[11:13:50] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[11:14:05] *** Joins: mrig (~mrig@user/mrig)
[11:15:23] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 272 seconds)
[11:21:20] *** Joins: Crassus (~Crassus@user/crassus)
[11:21:40] *** Joins: oxum (~oxum@136.185.148.86)
[11:25:35] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.8.2 - https://znc.in)
[11:26:24] *** Quits: oxum (~oxum@136.185.148.86) (Ping timeout: 252 seconds)
[11:28:20] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-54.prtc.net)
[11:31:41] *** Joins: icy (~icy@user/icy)
[11:34:55] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[11:40:30] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 268 seconds)
[11:41:09] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[11:54:03] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[11:59:16] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-df50-9334-2200-b3b6.res6.spectrum.com) (Quit: MrFantastik)
[11:59:26] *** Joins: reedrichards (~Thunderbi@2603-7080-ae03-948a-e3a6-2d3a-abd1-9a63.res6.spectrum.com)
[12:00:09] *** reedrichards is now known as MrFantastik
[12:02:28] *** Joins: shka (~herr@109.231.62.239)
[12:04:19] *** Joins: chasmo77 (~chas77@71.63.241.168)
[12:05:33] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[12:09:51] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 272 seconds)
[12:11:30] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 272 seconds)
[12:13:27] *** Joins: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de)
[12:20:58] <belak> Are there any sorts of routers which don't tie you to an http.Handler? I've got some stuff that I'd like to experiment with which needs basic path-based routing, but it's not over http.
[12:23:15] *** Joins: virtualroot (~virtualro@user/virtualroot)
[12:30:00] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[12:30:42] *** Quits: pepee (~user@user/pepee) (Quit: bye $IRC)
[12:31:05] *** Quits: dmang (~dmang@047-032-148-170.res.spectrum.com) (Ping timeout: 258 seconds)
[12:31:46] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 272 seconds)
[12:32:18] *** Joins: dmang (~dmang@user/dmang)
[12:32:26] *** Joins: rgl (~rgl@bl12-47-147.dsl.telepac.pt)
[12:34:26] *** Joins: souvik (~souvik@103.199.182.228)
[12:37:28] *** Quits: dmang (~dmang@user/dmang) (Ping timeout: 272 seconds)
[12:38:13] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[12:41:21] <mikoto-chan> https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control
[12:41:52] <mikoto-chan> what time does cache-control use?
[12:42:11] <mikoto-chan> if it's on the user's side he will just be able to mess with the system's time to make cache never expire
[12:43:48] *** imm__ is now known as imm_
[12:44:43] <belak> mikoto-chan: cache-control is a way for the server to politely request that a client cache (or not cache) something in a specific way
[12:44:57] <belak> mikoto-chan: so max-age is relying on the client, yes
[12:45:00] *** Joins: dmang (~dmang@user/dmang)
[12:45:04] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 272 seconds)
[12:46:08] <mikoto-chan> belak: sometimes websites refuse to allow you to visit if you have your system time set wrong, how does that work?
[12:47:19] <foobaz> if your system time is too far off, SSL certificates won't validate and https won't load
[12:47:56] <foobaz> your user might be accessing your site through a caching web proxy that ignores or extends the time specified in cache-control
[12:49:33] <mikoto-chan> interesting, there was an exploit found on Instagram a while ago where the attacker would use a proxy to set the size of the image he was posting on his story to ridiculously high values so that it would crash people's phone
[12:49:48] <mikoto-chan> something in that direction, you can find the technical details for yourself
[12:50:43] <foobaz> is the large image proxy related to your cache-control question or is this a new topic?
[12:51:29] *** Quits: bodhi (~bodhi@c-73-93-87-220.hsd1.ca.comcast.net) (Ping timeout: 244 seconds)
[12:56:11] <belak> Is there a common recommended router/mux for http applications once you grow beyond what the stdlib provides? I've seen Gorilla and Chi recommended fairly often.
[12:56:17] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[12:56:28] <mikoto-chan> probably not but when you mentioned proxy you reminded me of it. does HTML have a width attribute? because that's what's being changed in the video
[12:56:32] *** Joins: be3uykpy (~be3uykpy@141.226.9.247)
[12:56:39] <mikoto-chan> I can't find it in the MDN reference
[12:57:00] <foobaz> the img tag has a width attribute
[12:57:13] <belak> If you want to set the width of other items, you can use CSS
[12:57:46] <foobaz> you can use CSS to set the width of images too, it's not necessary to do it the old fashioned way
[12:58:05] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:58:25] *** Quits: sadg (~odd@193.32.249.162) (Quit: WeeChat 3.0.1)
[13:00:58] *** Joins: dmathieu (~textual@78.203.212.55)
[13:01:45] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 258 seconds)
[13:03:38] *** Quits: virtualroot (~virtualro@user/virtualroot) (Remote host closed the connection)
[13:09:57] <b0nn> belak: Gorilla/mux is slow (and a bit heavy in the memory consumption) but comes with lots of bells and whistles
[13:10:35] <b0nn> Chi, and HTTPRouter are good "middle ground" between stdlib and Gorilla
[13:11:04] <b0nn> Chi's routing paths are bit.. different ; you will be nesting paths
[13:13:46] <b0nn> If your codebas is currently stdlib, I'd look at httprouter
[13:14:35] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[13:14:36] <b0nn> oh, for non-http routing... maybelook at grpc server
[13:15:50] *** Quits: dmathieu (~textual@78.203.212.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:17:25] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-54.prtc.net) (Ping timeout: 246 seconds)
[13:18:01] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[13:21:06] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 250 seconds)
[13:21:39] *** Joins: fef (~thedawn@user/thedawn)
[13:24:31] *** Joins: Kane (~Kane@2a01:e34:ee89:5d90:c922:2db8:2549:71e4)
[13:31:57] *** Joins: Crassus (~Crassus@user/crassus)
[13:34:20] *** Quits: souvik (~souvik@103.199.182.228) (Ping timeout: 258 seconds)
[13:36:13] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-22.prtc.net)
[13:36:22] *** Quits: milosz (~milosz@user/milosz) (Quit: Leaving)
[13:40:19] *** Joins: somebody (~ninjin@momey.cs.ucl.ac.uk)
[13:41:10] *** Joins: souvik (~souvik@103.199.182.228)
[13:42:23] *** Quits: ninjin (~ninjin@user/ninjin) (Ping timeout: 258 seconds)
[13:45:12] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[13:51:35] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 258 seconds)
[13:51:39] *** Joins: gpeskens_ (~gpeskens@2001:985:7aa4:1:788:1fde:1d76:c72d)
[13:53:36] *** Quits: gpeskens (~gpeskens@2001:985:7aa4:1:a2f3:c589:2a5f:8ac9) (Ping timeout: 250 seconds)
[14:02:42] *** Joins: Ohlov3130 (~Ohlov3@dyndsl-085-016-110-004.ewe-ip-backbone.de)
[14:03:40] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[14:06:16] *** Quits: Ohlov313 (~Ohlov3@dyndsl-095-033-057-157.ewe-ip-backbone.de) (Ping timeout: 252 seconds)
[14:09:59] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 258 seconds)
[14:11:32] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[14:11:55] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[14:12:49] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[14:16:35] *** Joins: tha (~user@2a05:f480:1400:f44:5400:3ff:fe6d:f349)
[14:20:45] <j416> mikoto-chan: if you front your API with a CDN, the cache-control header can be used to tell the CDN for how long to cache the response before hitting your server again. Not only client-side.
[14:21:49] *** Parts: tha (~user@2a05:f480:1400:f44:5400:3ff:fe6d:f349) ()
[14:22:06] <j416> (the CDN is of course by some defintion a "client", but it's typically not the end-user)
[14:23:20] <j416> belak: figure out in what way you have grown beyond stdlib and take it from there?
[14:23:37] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[14:29:08] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 250 seconds)
[14:32:47] *** Joins: omegatron (~some@p5b056bc7.dip0.t-ipconnect.de)
[14:35:54] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 272 seconds)
[14:36:48] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[14:40:44] *** Joins: iateadonut (~dan@121.177.17.154)
[14:43:46] <iateadonut> my go doesn't have a godoc executable in /usr/local/go/bin/
[14:44:21] <iateadonut> but i'm wondering about documenting my own packages and getting them to appear when i use the command `go doc myPackage`
[14:47:22] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-22.prtc.net) (Ping timeout: 246 seconds)
[14:47:45] <mikoto-chan> iateadonut: did you manually install go-tools>
[14:47:51] <mikoto-chan> s/>/?/
[14:48:11] <iateadonut> or let's say i've downloaded ~/go/src/github.com/gorilla/websocket - how can i get documentaiton for that by typing `go doc gorilla websocket`?
[14:48:27] <iateadonut> i did not.  i'll check out installing go-tools now.  thanks.
[14:49:22] *** Joins: Garb0 (~Garb0@user/garb0)
[14:49:59] <mikoto-chan> if you're on Linux you should get one of the following: /usr/lib64/go/bin/godoc; /usr/lib/go/bin/godoc; /usr/bin/godoc;
[14:51:01] <iateadonut> i used this https://github.com/golang/tools - and installed 'godoc' into `~/bin`
[14:51:12] <iateadonut> by doing "go get -u golang.org/x/tools/..."
[14:51:36] *** Joins: sweb (~sweb@static.187.181.76.144.clients.your-server.de)
[14:52:02] <sweb> is there any method in reflect or etc to find defined variable with prefix?
[14:52:02] <iateadonut> thanks, so now that i have that, how do i output the docs for ~/go/src/github.com/gorilla/websocket from the command line?
[14:53:24] <sweb> https://play.golang.org/p/XphzXxbHJcJ ?
[14:54:04] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 258 seconds)
[14:54:04] <mikoto-chan> hmmmmm, I recommend you to give your distribution's go-tool package a shot. stuff that you install from github doesn't get automatically updated after all. what I do is "go get" into my project's folder and after that I can just go doc perfectly.
[14:54:21] <mikoto-chan> iateadonut: did you "go get" in your home directory?
[14:55:42] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[14:56:30] <mikoto-chan> sweb: I think this is only possible with structs and regex. I'm not experienced enough to give you a correct answer though.
[14:58:00] <iateadonut> mikoto-chan, thanks, that does work.
[14:58:27] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 265 seconds)
[14:59:02] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[14:59:20] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[14:59:56] <iateadonut> running 'go get' in src/github.com/gorilla/websocket worked to have it appear in the go docs
[15:04:02] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 258 seconds)
[15:10:10] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[15:10:48] *** Joins: tcm1911[m] (~tcm1911ma@2001:470:69fc:105::3649)
[15:14:23] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 258 seconds)
[15:18:15] *** Quits: tcm1911[m] (~tcm1911ma@2001:470:69fc:105::3649) (Quit: Reconnecting)
[15:18:30] *** Joins: tcm1911[m] (~tcm1911ma@2001:470:69fc:105::3649)
[15:20:03] *** Parts: tcm1911[m] (~tcm1911ma@2001:470:69fc:105::3649) ()
[15:21:17] *** Joins: kayprish (~kayprish@46.240.143.86)
[15:21:40] *** Joins: unmanbearpig (~unmanbear@45.76.95.141)
[15:30:56] <sweb> https://paste.ubuntu.com/p/j3qmMWbxsM/
[15:31:08] <sweb> panic: runtime error: index out of range [0] with length 0... what's the problem ?
[15:33:17] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[15:33:22] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[15:33:50] <j416> sweb: simplify
[15:34:11] <j416> sweb: line 38 is the problem
[15:35:02] <j416> you didn't allocate space for your slice.
[15:36:18] <j416> sweb: you are effectively doing this https://play.golang.org/p/Cnm8e0Ldled
[15:37:04] <j416> do this instead https://play.golang.org/p/6A79kOX7ZQ1
[15:37:05] <j416> or this https://play.golang.org/p/R8-X03enU9A
[15:37:18] <j416> or this https://play.golang.org/p/Z9S8BNV8Gkj
[15:37:19] *** Quits: gpeskens_ (~gpeskens@2001:985:7aa4:1:788:1fde:1d76:c72d) (Remote host closed the connection)
[15:41:22] *** Joins: frost (~frost@59.71.242.236)
[15:41:55] *** Joins: TcM1911 (~tcm1911@2001:470:69fc:105::3649)
[15:42:01] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 272 seconds)
[15:45:57] *** Joins: fef (~thedawn@user/thedawn)
[15:55:02] *** Joins: ac1 (~Guest1907@86.107.21.42)
[15:59:36] *** Quits: MD87 (~MD87@onl3.fr.929w.net) (Changing host)
[15:59:36] *** Joins: MD87 (~MD87@user/md87)
[15:59:40] *** Joins: bluehoney (~bluehoney@rrcs-70-61-49-98.central.biz.rr.com)
[16:01:53] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:08:58] *** Joins: oxum (~oxum@136.185.148.86)
[16:09:08] *** Quits: oxum (~oxum@136.185.148.86) (Remote host closed the connection)
[16:11:15] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[16:27:15] *** Quits: rgl (~rgl@bl12-47-147.dsl.telepac.pt) (Ping timeout: 268 seconds)
[16:34:17] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[16:37:11] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 258 seconds)
[16:37:33] *** Quits: bluehoney (~bluehoney@rrcs-70-61-49-98.central.biz.rr.com) (Remote host closed the connection)
[16:38:00] *** Joins: bluehoney (~bluehoney@rrcs-70-61-49-98.central.biz.rr.com)
[16:40:43] *** Quits: pez (~pez@user/pez) (Ping timeout: 272 seconds)
[16:50:07] *** Joins: pez (~pez@user/pez)
[17:04:49] *** Joins: rgl (~rgl@bl12-47-147.dsl.telepac.pt)
[17:12:33] *** Joins: fef (~thedawn@user/thedawn)
[17:25:13] *** Quits: pez (~pez@user/pez) (Ping timeout: 268 seconds)
[17:27:38] *** Joins: josta (~josta@23.226.133.86)
[17:31:12] *** Joins: andlabs (~andlabs@71.190.119.164)
[17:34:03] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[17:34:37] *** Quits: souvik (~souvik@103.199.182.228) (Ping timeout: 244 seconds)
[17:40:58] *** Parts: bluehoney (~bluehoney@rrcs-70-61-49-98.central.biz.rr.com) (Leaving)
[17:45:19] *** Joins: Torr (~Torr@user/torr)
[17:52:53] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[17:54:52] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[17:55:06] *** Joins: Torr (~Torr@user/torr)
[17:55:46] *** Joins: siika (~siika@223.166.246.234)
[17:56:02] *** Joins: souvik (~souvik@103.199.182.228)
[17:56:02] *** Quits: siika_ (~siika@139.226.50.41) (Ping timeout: 272 seconds)
[18:20:00] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 265 seconds)
[18:21:15] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[18:23:32] *** Quits: jjonah (~jjonah@p200300d5d723c400dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:23:42] *** Quits: josta (~josta@23.226.133.86) (Ping timeout: 244 seconds)
[18:26:10] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 250 seconds)
[18:27:30] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:29:54] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[18:30:14] *** Joins: andlabs (~andlabs@71.190.119.164)
[18:30:35] *** Joins: kulak (~kulak@user/kulak)
[18:33:56] *** Quits: souvik (~souvik@103.199.182.228) (Ping timeout: 252 seconds)
[18:35:01] *** Joins: souvik (~souvik@103.199.182.228)
[18:53:01] *** Joins: rhoshy (~rhoshy@p200300d84f2ee83718876b553e8569fb.dip0.t-ipconnect.de)
[18:53:57] *** Quits: rhoshy (~rhoshy@p200300d84f2ee83718876b553e8569fb.dip0.t-ipconnect.de) (Client Quit)
[18:55:33] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:597:b5cf:3629:f483) (Quit: WeeChat 3.2)
[19:02:26] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:ec8a:a593:8c39:c940)
[19:04:16] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:06:29] *** Quits: flommi_ (~flommi@puck942.startdedicated.de) (Quit: Quit)
[19:07:05] *** Joins: flommi (~flommi@puck942.startdedicated.de)
[19:09:27] *** Quits: frost (~frost@59.71.242.236) (Quit: Connection closed)
[19:13:10] *** Quits: cync (~blah@192.180.187.81.in-addr.arpa) (Quit: No Ping reply in 180 seconds.)
[19:14:00] *** Joins: flommi_ (~flommi@puck942.startdedicated.de)
[19:14:15] *** Joins: pez (~pez@user/pez)
[19:14:32] *** Joins: cync (~blah@192.180.187.81.in-addr.arpa)
[19:14:42] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[19:14:59] *** Quits: flommi (~flommi@puck942.startdedicated.de) (Ping timeout: 268 seconds)
[19:17:42] *** Quits: flommi_ (~flommi@puck942.startdedicated.de) (Client Quit)
[19:17:54] *** Joins: flommi (~flommi@puck942.startdedicated.de)
[19:22:34] *** Joins: dr0n (~nabromov@94.11.23.235)
[19:28:17] *** Quits: souvik (~souvik@103.199.182.228) (Ping timeout: 244 seconds)
[19:29:26] *** Joins: souvik (~souvik@103.199.182.47)
[19:37:34] *** Parts: FreeBDSM (~uzer@user/freebdsm) ()
[19:38:19] *** Joins: siika_ (~siika@139.226.50.205)
[19:38:37] *** Quits: siika (~siika@223.166.246.234) (Ping timeout: 244 seconds)
[19:42:07] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 268 seconds)
[19:45:20] *** Joins: skeels (~singurty@43.245.87.205)
[19:53:35] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-e3a6-2d3a-abd1-9a63.res6.spectrum.com) (Remote host closed the connection)
[19:56:23] *** Joins: micah (~micah@199.254.238.42)
[19:56:42] *** Quits: micah (~micah@199.254.238.42) (Changing host)
[19:56:42] *** Joins: micah (~micah@debian/micah)
[19:57:31] <micah> I'm importing a package from a remote module. I understood that I need to run `go mod tidy` now, but when I do that, I'm told: go: cannot find main module; see 'go help modules'
[20:00:51] <micah> oh, i need to `go mod init`
[20:07:15] *** Quits: skeels (~singurty@43.245.87.205) (Quit: Leaving)
[20:08:18] *** Joins: dany74q (~dany74q@igld-84-229-190-86.inter.net.il)
[20:09:03] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:11:04] *** Quits: ac1 (~Guest1907@86.107.21.42) (Quit: Leaving)
[20:11:41] *** Parts: ks_ (~kevin@nyc-0.mil.lat) (WeeChat 3.0.1)
[20:13:40] *** Quits: dany74q (~dany74q@igld-84-229-190-86.inter.net.il) (Ping timeout: 252 seconds)
[20:15:19] *** Quits: yoonkn (~user@175.197.208.79) (Remote host closed the connection)
[20:22:09] <j416> yes; modules only work with other modules
[20:22:22] <j416> kind of the idea.
[20:27:28] *** Quits: schmillin (~schmillin@user/schmillin) (Ping timeout: 246 seconds)
[20:28:41] *** Joins: skeels (~singurty@43.245.87.205)
[20:30:02] *** Joins: schmillin (~schmillin@user/schmillin)
[20:37:27] <skeels> I'm using go-prompt to create an interactive shell. If I print something from a background goroutine, the shell misbehaves. It doesn't prompt for input at all and doesn't respond to Control+C or Control+D and also causes this issue https://unix.stackexchange.com/questions/61584/how-to-solve-the-issue-that-a-terminal-screen-is-messed-up-usually-after-a-res. If I print from the main routine everything works as expected.
[20:39:30] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[20:39:44] *** Parts: iateadonut (~dan@121.177.17.154) ()
[20:42:37] *** Joins: Guest53 (~textual@170.250.221.149)
[20:45:59] *** Joins: jinks (~jinks@2001:470:1f18:3aa:1d8:0:1c:34ac)
[20:46:15] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 268 seconds)
[20:49:50] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 265 seconds)
[20:49:54] *** Joins: arcatech (~arcatech@user/arcatech)
[20:50:27] *** Quits: Guest53 (~textual@170.250.221.149) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:00:20] <micah> how can I turn "20210620" into time.Time format?
[21:02:30] <bookworm> https://golang.org/pkg/time/#Parse
[21:03:05] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[21:03:12] *** Parts: sweb (~sweb@static.187.181.76.144.clients.your-server.de) ()
[21:05:52] <micah> hmm, actually it would be better if I could easily turn file.ModTime() into time.Time
[21:14:24] <bookworm> that doesn't make sense. the output from ModTime() *is* a time.Time
[21:14:45] <bookworm> you can just use it
[21:25:32] *** Joins: s-video (~s-video@2601:196:4b00:e70:ed73:348c:9c83:cb34)
[21:35:27] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[21:43:46] <Torr> How would you prevent Scanf from get bugged with newlines from previous inputs?
[21:43:55] <Torr> Here's an example: http://ix.io/3rcO
[21:44:41] <Torr> When executing it, this is the output: http://ix.io/3rcN
[21:45:43] *** Quits: dr0n (~nabromov@94.11.23.235) (Ping timeout: 244 seconds)
[21:46:00] <Torr> Another problem is that <f2> is ignoring the rest of the string after the space.
[21:47:41] <micah> bookworm: indeed it is, thanks!
[21:49:58] <lazyreader> Torr that's not the output I get running it on the playground: https://play.golang.org/p/9RnPAWA1Fei
[21:50:22] *** Joins: kupi (uid212005@id-212005.stonehaven.irccloud.com)
[21:50:41] <lazyreader> oh wait, no std input
[21:50:44] <lazyreader> durr
[21:51:37] <lazyreader> what's the lines you're giving it?
[21:53:59] <Torr> lazyreader: What do you mean by giving lines? The input passed to the program was: 7<Enter> word word<Enter> 3<Enter>
[21:54:17] <bookworm> exactly that
[21:54:19] <lazyreader> right, now I'm following
[21:54:31] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[21:55:43] <lazyreader> this is a really weird way to write this. the idea of the for-loops is to "retry" on invalid input?
[21:55:54] *** Quits: s-video (~s-video@2601:196:4b00:e70:ed73:348c:9c83:cb34) (Ping timeout: 250 seconds)
[21:56:05] <lazyreader> like if the initial input is "-2" it re-scanf's?
[21:56:17] *** Joins: kulak (~kulak@user/kulak)
[21:57:10] *** Quits: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il) (Ping timeout: 268 seconds)
[22:01:11] *** Quits: trn (jhj@2600:3c00::f03c:92ff:feb2:b9ef) (Ping timeout: 272 seconds)
[22:01:51] *** Joins: Eddward (~Eddward@207.138.204.132)
[22:03:26] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:04:32] *** Joins: kulak (~kulak@user/kulak)
[22:05:49] *** Quits: skeels (~singurty@43.245.87.205) (Quit: Leaving)
[22:06:46] *** Joins: dmgk_ (~dmgk@user/dmgk)
[22:07:20] <lazyreader> honestly you should probably just use https://golang.org/pkg/bufio/#Scanner
[22:07:42] <lazyreader> instead of Scanf and Scanln.
[22:07:48] <Torr> lazyreader: Yes, that's the purpose of the loop.
[22:08:19] <lazyreader> it's not the newlines, it's attempting to parse every character "left over" by Scanln as an integer and failing
[22:09:50] <lazyreader> you could read and discard the rest of the contents out of os.Stdin, I guess, between the for loops, to make sure that your next call to Scanf is starting empty
[22:09:57] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[22:11:12] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[22:11:53] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[22:13:09] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[22:13:55] <Torr> Indeed, the problems is at the ignored chars.
[22:13:59] <Torr> Thanks lazyreader
[22:14:01] *** Joins: llorllale1 (~llorllale@2607:9880:3a18:69:ec5a:b1c5:599c:5def)
[22:14:11] <Torr> problem*
[22:14:26] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:ec8a:a593:8c39:c940) (Ping timeout: 272 seconds)
[22:19:16] *** Joins: andlabs (~andlabs@71.190.119.164)
[22:21:28] *** Joins: dr0n (~nabromov@94.11.23.235)
[22:21:34] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:21:53] *** Joins: kulak (~kulak@user/kulak)
[22:22:03] *** Joins: dany74q (~dany74q@IGLD-84-229-190-86.inter.net.il)
[22:26:47] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:27:11] *** Joins: kulak (~kulak@user/kulak)
[22:27:33] <dostoyevsky2> Atm I am doing `go mod init main && go get && go build' when setting up new projects -- but I heard "go get" is being deprecated -- what would be an alternative way to do the same thing?
[22:29:03] <kinduff> since it's not yet deprecated, i would continue until next release
[22:29:07] <kinduff> if you plan to upgrade
[22:30:36] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:31:29] <dostoyevsky2> kinduff: ah, so there is no alternative way yet?
[22:32:05] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[22:32:06] <mastardet> fyi https://utcc.utoronto.ca/~cks/space/blog/programming/GoAndDeprecatingGoGet
[22:32:08] *** Quits: dmgk_ (~dmgk@user/dmgk) (Quit: ZNC - https://znc.in)
[22:32:36] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[22:33:57] <bookworm> dostoyevsky2: go get is only being deprecated to install binaries... go get will still be used to get dependencies
[22:34:09] <dostoyevsky2> ah...
[22:34:10] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:34:31] *** Joins: kulak (~kulak@user/kulak)
[22:34:35] <bookworm> if you want to fetch a tool like say gopls you need to use go install
[22:34:39] <dostoyevsky2> yeah, it's quite convenient, just populates my go.mod with the right stuff
[22:35:04] *** Quits: dmgk (~dmgk@user/dmgk) (Quit: ZNC - https://znc.in)
[22:37:15] *** Joins: dmgk (~dmgk@user/dmgk)
[22:42:19] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[22:45:37] *** CommunistWolf is now known as CapitalistWolf
[22:45:44] *** CapitalistWolf is now known as CommunistWolf
[22:47:50] *** llorllale1 is now known as llorllale
[22:57:54] *** Joins: s-video (~s-video@c-73-17-214-8.hsd1.ma.comcast.net)
[23:00:39] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[23:01:09] *** Joins: kulak (~kulak@user/kulak)
[23:10:29] *** Quits: Catatonic (~Catatonic@ariel.whatbox.ca) (Quit: Quit)
[23:10:43] *** Joins: Catatonic (~Catatonic@ariel.whatbox.ca)
[23:14:36] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 272 seconds)
[23:15:38] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[23:18:27] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:ec5a:b1c5:599c:5def) (Quit: WeeChat 3.2)
[23:19:51] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:871:a4f2:4bfc:8d6d)
[23:23:31] *** Quits: s-video (~s-video@c-73-17-214-8.hsd1.ma.comcast.net) (Ping timeout: 258 seconds)
[23:23:50] *** Quits: dmgk (~dmgk@user/dmgk) (Quit: ZNC - https://znc.in)
[23:24:01] *** Joins: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com)
[23:24:14] *** Joins: dmgk (~dmgk@user/dmgk)
[23:24:48] *** Quits: rshinzon3 (~rshinzon@130.61.156.43) (Quit: rshinzon3)
[23:25:04] *** Joins: rshinzon3 (~rshinzon@130.61.156.43)
[23:25:07] *** Quits: rshinzon3 (~rshinzon@130.61.156.43) (Client Quit)
[23:25:39] *** Joins: rshinzon (~rshinzon@user/rshinzon)
[23:27:30] *** Joins: s-video (~s-video@c-73-17-214-8.hsd1.ma.comcast.net)
[23:28:30] *** Quits: dmgk (~dmgk@user/dmgk) (Client Quit)
[23:28:36] *** jkl is now known as jkl1337
[23:29:54] *** Joins: dmgk (~dmgk@user/dmgk)
[23:30:18] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[23:30:44] *** jkl1337 is now known as jkl
[23:31:31] *** Quits: jkl (~jkl@45-19-26-123.lightspeed.cicril.sbcglobal.net) (Changing host)
[23:31:31] *** Joins: jkl (~jkl@user/jkl)
[23:35:47] <noonien> this is probably not the right channel, but i have no idea where else to ask. is it possible to receive messages from firebase cloud messaging with go?
[23:35:54] *** Joins: dunderprotos (~Guest53@117.241.66.199)
[23:39:59] *** Quits: dunderprotos (~Guest53@117.241.66.199) (Quit: Client closed)
[23:40:35] *** Joins: dunderprotos (~dunderpro@117.241.66.199)
[23:42:04] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:871:a4f2:4bfc:8d6d) (Quit: WeeChat 3.2)
[23:42:55] *** Quits: dunderprotos (~dunderpro@117.241.66.199) (Client Quit)
[23:42:55] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[23:43:04] <Tv_> noonien: search on pkg.go.dev, it's there
[23:43:17] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:f1eb:8b18:ec10:ac53)
[23:43:50] <noonien> i'm not sure it is. i found some packages, but i'm pretty sure none of them are what i'm looking for
[23:47:58] *** Joins: dunderprotos (~textual@117.241.66.199)
[23:48:05] <Tv_> https://pkg.go.dev/firebase.google.com/go/messaging
[23:48:17] <Tv_> oh *receive*
[23:48:24] <Tv_> is that even a public api?
[23:48:34] *** Quits: s-video (~s-video@c-73-17-214-8.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[23:48:48] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Read error: Connection reset by peer)
[23:49:35] *** Joins: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be)
[23:49:42] <Tv_> well there's a C++ client that can receive...
[23:50:41] <Tv_> that assumes JNI and running on Android, it seems
[23:50:52] <Tv_> yeah i think the client side is tied to google services, android/ios/web
[23:51:14] *** Quits: dunderprotos (~textual@117.241.66.199) (Quit: Textual IRC Client: www.textualapp.com)
[23:51:43] *** Joins: dunderprotos (~textual@117.241.66.199)
[23:54:01] *** Joins: lauraaah (uid156848@id-156848.charlton.irccloud.com)
[23:55:55] *** Quits: souvik (~souvik@103.199.182.47) (Ping timeout: 265 seconds)
[23:56:12] *** Quits: dunderprotos (~textual@117.241.66.199) (Client Quit)
[23:59:54] <noonien> yeah
