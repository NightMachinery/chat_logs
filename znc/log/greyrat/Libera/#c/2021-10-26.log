[00:01:56] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-281d-023e-06d1-52a1.res6.spectrum.com)
[00:02:03] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:14:04] <Filystyn> markersmasher
[00:14:15] <Filystyn> for referance int main( void ) not int main(). 
[00:14:16] <Filystyn> Also
[00:14:29] <Filystyn> man isspace for future also 
[00:14:29] <candide> Filystyn: Please stop abusing the enter key. Feel free to type longer messages and to take a moment to think of anything else to say before you hit that enter key.
[00:15:21] *** Parts: KillerWasp (KillerWasp@user/killerwasp) ("YOU KIDDING ME?? YOU KIDDING MEEE????" (PC fried with venom slayer) *kernel panic!*)
[00:15:52] <Filystyn> the output seems that there is some bug like hey first a has no * than we have * etc..  should it not do *\n   five times?
[00:16:02] <Filystyn> Or maybe I miss the point candide baby ?
[00:16:38] *** Quits: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d) (Remote host closed the connection)
[00:17:23] <Filystyn> i never did the K&R exercise, I did thou read the book long time ago.
[00:17:37] *** Joins: Inline (~Inline@2a02:908:1252:7a80:aa94:ac75:d11d:97b0)
[00:17:49] <Filystyn> So might not be familiar with them hehe
[00:18:45] *** Joins: magic_ninja_work (~sparkie1@4.4.16.52)
[00:21:06] *** Quits: plainoldcheese (~plainoldc@user/plainoldcheese) (Quit: WeeChat 3.3)
[00:22:10] <makersmasher> Filystyn, if I am reading it right, it's supposed to count up the "words" ie, any consecutive letters w/o any spacing, and tally the count
[00:23:00] <makersmasher> so the histogram is saying there are 5 single letter "words", 2 2-letter, 1 5 letter etc
[00:24:19] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[00:24:25] <makersmasher> I didn't want to use any functions (ie isspace) that the book didn't teach me yet, I am trying to kind of break down my thinking about programming completely, and start with the basic building blocks
[00:24:54] *** Quits: pizdets_ (~pizdets@183.182.111.255) (Quit: pizdets)
[00:25:06] <makersmasher> (thanks for the response btw)
[00:26:10] *** Quits: Filystyn (~piotr@user/filystyn) (Quit: Lost terminal)
[00:26:39] *** Joins: pizdets (~pizdets@183.182.111.255)
[00:28:41] *** Joins: FIlystyn (~piotr@user/filystyn)
[00:28:46] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 244 seconds)
[00:29:05] <FIlystyn> gib me the link again, I crashed
[00:29:21] <FIlystyn> (code)
[00:29:56] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[00:30:26] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[00:34:09] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:34:29] <FIlystyn> well need to go sorry could not help more. ( I got the program working on ideone but crashed. Anyway it does not need to be complex to do what it has to
[00:34:58] *** Joins: delvx (~arek@77.252.63.98)
[00:35:07] <FIlystyn> So don't bother with *people* examples. Do your job and your own tests.
[00:35:09] *** Parts: FIlystyn (~piotr@user/filystyn) ()
[00:36:56] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:39:04] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Remote host closed the connection)
[00:39:33] *** Joins: kuber (~kuber@97-126-3-32.tukw.qwest.net)
[00:40:08] *** Joins: Quacc (~youbuntoe@user/quacc)
[00:40:12] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[00:46:10] *** Quits: haise01 (~haise01@user/haise01) (Quit: ZNC 1.8.2 - https://znc.in)
[00:47:35] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[00:48:58] *** Joins: kadavul (~vazha@103.165.21.248)
[00:51:28] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[00:51:43] *** Quits: delvx (~arek@77.252.63.98) (Quit: WeeChat 3.3)
[00:55:23] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:56:21] *** Quits: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de) (Quit: Textual IRC Client: www.textualapp.com)
[01:00:16] *** Quits: magic_ninja_work (~sparkie1@4.4.16.52) (Ping timeout: 244 seconds)
[01:00:24] *** Quits: kadavul (~vazha@103.165.21.248) (Quit: Leaving)
[01:01:56] *** Quits: alch (~alch@151.68.122.251) (Read error: Connection reset by peer)
[01:03:23] *** Quits: Narrat (~omnius@p200300df5f49111d06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:06:11] *** Joins: alch (~alch@pd-18-126-96.service.infuturo.it)
[01:06:30] *** Joins: magic_ninja_work (~sparkie1@4.4.16.52)
[01:07:36] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[01:15:21] *** Joins: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[01:18:15] *** Quits: magic_ninja_work (~sparkie1@4.4.16.52) (Ping timeout: 260 seconds)
[01:24:03] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 265 seconds)
[01:25:42] *** Quits: Akuli (~Akuli@213.216.209.22) (Quit: Leaving)
[01:26:45] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:27:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:29:20] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:30:25] *** Joins: presonic (~presonic@111-22-237-24.gci.net)
[01:30:40] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:299b:88e7:728b:a92) (Ping timeout: 260 seconds)
[01:31:10] *** Quits: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com) (Remote host closed the connection)
[01:31:48] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Ping timeout: 244 seconds)
[01:31:55] *** topside_ is now known as topside
[01:32:04] *** Quits: dlss^ (~dlss@wsip-68-227-92-38.mc.at.cox.net) (Remote host closed the connection)
[01:32:19] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 244 seconds)
[01:32:44] *** Quits: kilolympus (~kilolympu@185.65.135.177) (Read error: Connection reset by peer)
[01:34:21] *** Joins: tafama (~tafa@2a04:52c0:101:85c::1)
[01:35:13] *** Joins: kilolympus (~kilolympu@185.65.135.177)
[01:35:18] *** Quits: tafa (~tafa@5.2.76.31) (Read error: Connection reset by peer)
[01:35:46] *** Quits: larry87 (~quassel@98.40.245.193) (Remote host closed the connection)
[01:36:49] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:bddb:d75d:2e1e:4ad5) (Quit: Leaving)
[01:36:53] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-281d-023e-06d1-52a1.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:37:09] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:39:06] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:40:36] *** Joins: frankd_ (~frankd@69.206.2.53)
[01:40:40] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:40:42] *** Quits: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Read error: Connection reset by peer)
[01:40:51] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[01:40:57] *** Quits: FrankD (~frankd@69.206.2.53) (Read error: Connection reset by peer)
[01:40:58] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[01:41:02] *** Joins: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[01:41:17] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[01:41:24] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[01:41:24] *** frankd_ is now known as FrankD
[01:44:55] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[01:45:13] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[01:46:36] *** Quits: rgrinberg (~textual@ip152-195-159-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:46:46] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[01:46:58] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[01:49:21] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 244 seconds)
[01:51:06] *** Joins: slidercrank (~slidercra@user/slidercrank)
[01:51:23] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.3)
[01:52:47] *** Quits: Munnu (~timo@81-197-107-130.elisa-laajakaista.fi) (Ping timeout: 246 seconds)
[01:53:50] *** Joins: Munnu (~timo@81-197-107-130.elisa-laajakaista.fi)
[01:54:29] *** Joins: pony (~ed@smol/hors)
[01:55:32] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Read error: Connection reset by peer)
[01:58:00] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:33f9:2578:2f6:368f)
[02:01:32] *** Quits: jess (~jess@libera/staff/jess) ()
[02:05:51] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[02:06:51] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[02:13:40] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[02:14:36] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[02:17:03] *** Quits: presonic (~presonic@111-22-237-24.gci.net) (Ping timeout: 260 seconds)
[02:19:38] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[02:21:19] *** Joins: pnbeast (~pnbeast@2601:140:4280:3c90::1)
[02:22:56] *** Joins: arinov (~arinov@213.194.126.155)
[02:24:36] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[02:28:52] *** Joins: Macuser (~Macuser@216.30.159.201)
[02:31:14] *** Quits: kuber (~kuber@97-126-3-32.tukw.qwest.net) (Quit: leaving)
[02:32:18] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[02:32:55] *** Quits: pizdets (~pizdets@183.182.111.255) (Ping timeout: 260 seconds)
[02:33:01] *** Joins: Nspace (~Nspace@user/nspace)
[02:33:45] *** Joins: pizdets (~pizdets@183.182.110.228)
[02:33:57] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com)
[02:34:53] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[02:34:53] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[02:34:53] *** Joins: wroathe (~wroathe@user/wroathe)
[02:36:39] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:33f9:2578:2f6:368f) (Ping timeout: 260 seconds)
[02:37:04] *** Joins: lkor (~lionkor@i577BC4BA.versanet.de)
[02:38:09] *** Quits: lionkor (~lionkor@200116b80ff518009ef0135c65608c7d.dip.versatel-1u1.de) (Ping timeout: 258 seconds)
[02:38:27] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 244 seconds)
[02:39:13] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[02:39:14] *** Quits: Psybur (~Psybur@mobile-166-170-29-12.mycingular.net) (Remote host closed the connection)
[02:45:50] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:46:23] *** Quits: The_Jag (~The_Jag@host-79-13-46-237.retail.telecomitalia.it) (Quit: The_Jag)
[02:48:30] *** Joins: magic_ninja_work (~sparkie1@4.4.16.52)
[02:49:14] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Remote host closed the connection)
[02:50:08] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[02:51:21] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 244 seconds)
[02:53:07] *** Joins: Wulf (~Wulf@user/wulf)
[02:54:34] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-156-ac57c0e5 - https://znc.in)
[02:56:21] *** Joins: Telvana (~capo@user/telvana)
[02:59:18] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:b9d3:55ff:4c84:c8cf)
[03:03:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[03:13:39] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[03:14:59] *** Joins: The_Jag (~The_Jag@host-79-13-46-237.retail.telecomitalia.it)
[03:19:54] *** Quits: kilolympus (~kilolympu@185.65.135.177) (Ping timeout: 260 seconds)
[03:21:19] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Read error: Connection reset by peer)
[03:21:26] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:21:27] *** Joins: kurahaupo_ (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[03:25:55] *** Joins: quartz (~quartz@user/quartz)
[03:27:20] *** Joins: rgrinberg (~textual@ip152-195-159-186.ct.co.cr)
[03:30:06] *** Quits: deadk (edk@libera/staff/edk) (Read error: Connection reset by peer)
[03:31:41] *** Joins: edk (edk@libera/staff/edk)
[03:32:40] *** edk is now known as deadk
[03:33:54] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:34:22] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[03:38:59] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:40:43] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:41:14] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:41:21] *** Quits: BSaboia (~bsaboia@177.37.198.218) (Quit: This computer has gone to sleep)
[03:41:31] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:41:50] *** Quits: arand (~arand@c-0a01235c.05-662-7570703.bbcust.telenor.se) (Ping timeout: 260 seconds)
[03:47:02] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:47:41] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 244 seconds)
[03:48:22] *** Lord_of_Life_ is now known as Lord_of_Life
[03:48:43] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com)
[03:50:58] *** Joins: chenqisu1 (~xirndc@183.217.203.91)
[03:51:12] *** chenqisu1 is now known as chenqisu12
[03:54:45] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:b9d3:55ff:4c84:c8cf) (Ping timeout: 260 seconds)
[03:54:45] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[03:57:29] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 244 seconds)
[03:58:34] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:58:35] *** Joins: arand (~arand@c-0a01235c.05-662-7570703.bbcust.telenor.se)
[03:59:37] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[04:02:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[04:03:07] *** Joins: kilolympus (~kilolympu@185.65.135.177)
[04:08:35] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[04:10:44] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:15:07] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[04:15:54] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:18:09] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 244 seconds)
[04:23:40] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:24:18] *** Joins: Ox151 (~user@user/ox151)
[04:25:49] <Ox151> hello, i am using select for a fd_set and was wondering what would cause it to hang the process? I thought it supposed to return an int, but mine returns nothing and hangs the program.
[04:26:15] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:26:26] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:28:03] <fizzie> Well, maybe none of your file descriptors haven't had any activity to report? Or you didn't add them properly into the fd_set, I guess.
[04:29:11] *** Joins: gce108 (~gce@user/gce108)
[04:29:39] *** Quits: AmR (~AmREiSa@156.199.244.83) (Quit: Konversation terminated!)
[04:30:29] <fizzie> (`poll` has a better interface anyway.)
[04:31:06] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 265 seconds)
[04:31:12] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:31:55] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:32:37] <Ox151> fizzie: yes, that is what it is, they arent ready so it select goes into a block stated. I have to set the timeout argument, which i though NULL meant no it doesnt wait, but I guess i misunderstood.  
[04:32:56] <Ox151> I heard poll was better, might look at the. select was just my first introduction to this subject
[04:32:58] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[04:34:26] <fizzie> Yeah, NULL is "block indefinitely", you want a struct timeval with 0s in both fields for just polling. Or for poll, a zero, because it just takes an int in milliseconds (with -1 for an indefinite timeout).
[04:36:18] <Ox151> ty for the help
[04:36:23] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:def0:6996:2bb9:77) (Ping timeout: 264 seconds)
[04:37:19] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[04:38:29] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[04:38:37] <rndusr> does anyone know of a libpng developer's channel?
[04:38:40] <rndusr> i cannot find one 
[04:43:01] *** Joins: soapsudsxx (~soapsudsx@209.221.40.137)
[04:44:23] *** Joins: ferdna (~ferdna@user/ferdna)
[04:46:14] *** Quits: magic_ninja_work (~sparkie1@4.4.16.52) (Ping timeout: 260 seconds)
[04:46:24] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:4def:4e95:4385:6486)
[04:47:29] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:49:14] *** Joins: magic_ninja_work (~sparkie1@4.4.16.52)
[04:49:20] *** Joins: BSaboia (~bsaboia@177.37.198.218)
[04:54:37] <katnis> https://usercontent.irccloud-cdn.com/file/BgasGwbj/the%20god
[04:54:59] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 264 seconds)
[04:57:26] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:58:51] *** Joins: The_Jag_ (~The_Jag@host-87-19-40-26.retail.telecomitalia.it)
[05:01:33] *** Quits: The_Jag (~The_Jag@host-79-13-46-237.retail.telecomitalia.it) (Ping timeout: 265 seconds)
[05:02:22] *** Quits: alch (~alch@pd-18-126-96.service.infuturo.it) (Read error: Connection reset by peer)
[05:05:55] *** Joins: slidercrank (~slidercra@user/slidercrank)
[05:06:35] *** Joins: alch (~alch@151.34.120.121)
[05:07:38] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com)
[05:08:02] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[05:13:02] *** Joins: frost (~frost@user/frost)
[05:16:54] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[05:24:34] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[05:24:38] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:27:55] *** Quits: magic_ninja_work (~sparkie1@4.4.16.52) (Ping timeout: 260 seconds)
[05:31:22] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[05:32:26] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Quit: leaving)
[05:34:07] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 244 seconds)
[05:36:05] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[05:38:18] *** Joins: pedrini (~pedrini@189.215.211.133.cable.dyn.cableonline.com.mx)
[05:38:24] *** lkor is now known as lionkor
[05:39:10] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 260 seconds)
[05:41:19] *** Joins: johnjay (~pi@192.142.100.50)
[05:41:34] *** Joins: seninha (~seninha@user/seninha)
[05:43:27] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:52:31] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[05:53:45] *** Quits: lionkor (~lionkor@i577BC4BA.versanet.de) (Ping timeout: 260 seconds)
[05:54:04] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com) (Read error: Connection reset by peer)
[05:56:20] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[05:56:54] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[05:57:11] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[05:58:12] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:fa59:2f99:edd:cd7b)
[06:02:12] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:02:56] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 265 seconds)
[06:03:32] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:04:11] *** Joins: jompping (~xirndc@183.217.203.91)
[06:06:39] *** Quits: chenqisu12 (~xirndc@183.217.203.91) (Ping timeout: 260 seconds)
[06:07:36] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 245 seconds)
[06:07:54] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[06:08:44] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[06:08:54] *** Quits: Player001 (~Player001@user/player001) (Quit: Quitting)
[06:10:11] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[06:12:38] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com)
[06:13:36] *** Quits: pedrini (~pedrini@189.215.211.133.cable.dyn.cableonline.com.mx) (Remote host closed the connection)
[06:14:07] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[06:14:59] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:19:59] *** Joins: missogra (~missogra@dynamic-077-001-243-092.77.1.pool.telefonica.de)
[06:24:37] *** Quits: MrC (Ben@mrbenc.net) (Quit: Reboot, Updating ZNC, or Switching servers.)
[06:25:37] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:25:38] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:25:38] *** Joins: wroathe (~wroathe@user/wroathe)
[06:25:51] *** Joins: MrC (Ben@mrbenc.net)
[06:26:13] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[06:27:45] *** Joins: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[06:28:35] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 260 seconds)
[06:31:28] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:31:35] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 264 seconds)
[06:33:06] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[06:35:46] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:36:24] *** Joins: khoa (~khoa@user/khoa)
[06:37:31] *** Joins: monkey_ (~user@190.104.116.134)
[06:37:49] *** Quits: missogra (~missogra@dynamic-077-001-243-092.77.1.pool.telefonica.de) (Quit: Leaving)
[06:40:01] *** MrMobius_ is now known as MrMobius
[06:46:48] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[06:48:40] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:48:51] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 265 seconds)
[06:53:06] *** Joins: zyweo (~Svew@user/zyweo)
[06:55:06] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[06:59:22] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Quit: Client closed)
[06:59:35] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[07:02:16] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[07:03:22] *** Joins: smeso (~smeso@user/smeso)
[07:05:39] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[07:06:54] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[07:20:36] <jason1234> do you know a little C code to GET a file onto a FTP server?
[07:20:45] <jason1234> (no ssl)
[07:22:46] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) ()
[07:23:00] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[07:24:12] *** Quits: nostar (~nostar@45.14.195.153) (Quit: Leaving)
[07:24:36] *** Joins: roger (~rogerx@h20.83.17.98.dynamic.ip.windstream.net)
[07:25:19] *** Parts: roger (~rogerx@h20.83.17.98.dynamic.ip.windstream.net) ()
[07:25:29] *** Joins: nostar (~nostar@68.51.221.108)
[07:26:00] <bparker> jason1234: who is you? and you can't GET *onto*, you GET *from* a server
[07:26:18] *** Quits: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com) (Ping timeout: 260 seconds)
[07:26:21] <jason1234> wel.. it needs  a FTP login/password, then post GET and listen to file
[07:26:27] <jason1234> and write file on disk.
[07:28:04] *** Joins: johnjay (~pi@192.142.100.50)
[07:28:05] *** Joins: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com)
[07:28:07] *** Joins: dmaroo (~dhruv@2409:4070:2e1b:c65d:acb5:3c04:828:2b94)
[07:28:29] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b015:8261:acb8:581b:b352)
[07:33:36] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com)
[07:34:19] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com) (Client Quit)
[07:34:20] <floatcomplex> try bash
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:22] <jason1234> baSH?
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:02] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 260 seconds)
[07:38:45] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[07:38:50] <katnis> bish bash bush
[07:40:16] *** Joins: mahmutov (~mahmutov@37.155.35.85)
[07:40:42] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[07:46:11] <floatcomplex> i wonder how many students have turned candide's response to ,xy in as their homework submission
[07:49:49] <pnbeast> jason1234, yes, many popular operating systems include source code, so simply get (older?) source code for an ftp client from a Linux, a BSD or maybe one or two others.
[07:49:50] <jason1234> ok, i got a mini FTP client, but the  login does not work
[07:50:12] <jason1234>   mini FTP client:   https://termbin.com/85pb9     <-- but login does not work???
[07:50:28] <pnbeast> jason1234, so what?  This channel is about C, not logins.
[07:50:40] <katnis> OOF
[07:50:44] <jason1234> ah ah ;) you are joking?
[07:50:49] <pnbeast> jason1234, no.
[07:50:51] <jason1234> iu am seriosu about C
[07:50:53] <pnbeast> ,notc jason1234 
[07:50:53] <candide> jason1234: That is not a C issue. This channel exists for discussion of the Standard C Language itself; not tools such as Makefiles, IDEs, compilers (see ##workingset for these things) or random libraries (including OS-specific ones such as POSIX or Windows; see ##posix or #winapi).
[07:51:28] <jason1234> is there a C channel for userland talks about C?
[07:53:33] <khoa> jason1234: Well it's this channel
[07:53:49] <khoa> But that thing seems a bit too specific for any of us to know
[07:54:07] <jason1234> sockets is just basics
[07:54:17] <jason1234> if no sockets, no linux, no bsd
[07:54:41] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[07:56:56] <floatcomplex> i just had a terrible though. what if there are people who think "doing things in C" means doing anything at the unix command line
[07:57:05] <floatcomplex> as opposed to like, in matlab, or excel
[07:57:32] <floatcomplex> is that what is going on here
[07:57:45] *** Joins: uniquepointer (~uniquepoi@190.218.240.164)
[07:58:40] *** Quits: luizfrds (~Luiz@152.250.243.147) (Read error: Connection reset by peer)
[08:00:03] *** Quits: mahmutov (~mahmutov@37.155.35.85) (Ping timeout: 260 seconds)
[08:03:39] <jason1234> ftp-client.c is in progress. it works. but how to post Commands now... ftp-client.c at: https://termbin.com/6ls9 
[08:03:43] *** Joins: superboot (~agentgasm@user/superboot)
[08:05:00] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[08:05:58] *** Joins: loganlee (~Thunderbi@user/loganlee)
[08:06:53] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:09:41] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 245 seconds)
[08:09:55] <floatcomplex> this is 1700 lines of code
[08:10:10] <floatcomplex> some of which has 6+ levels of indentation of error handling
[08:10:13] <floatcomplex> (trigger warning)
[08:10:56] <floatcomplex> jason1234: consider spending some effort on writing more concise error handling
[08:10:58] <jason1234> it hangs at siftp_recv()
[08:11:25] <jason1234> size msg 1024, but total is 61 and n 61. 
[08:11:35] <floatcomplex> jason1234: was this written by a human?
[08:11:38] *** Quits: jompping (~xirndc@183.217.203.91) (Quit: Leaving)
[08:11:50] <jason1234> C is not human ;)
[08:11:59] <floatcomplex> jason1234: there is really inconsistent indentation
[08:12:59] <floatcomplex> if you are going to generate C using some tool and then attempt to debug it, you really need to be debugging that tool, not the resulting C
[08:13:03] <jason1234> have a look this is the solution:   http://termbin.com/lop8 
[08:13:50] <jason1234>  Boolean siftp_recv(... does not complete further.
[08:15:35] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:16:27] <jason1234> the probelem comes when it receives. it does not handle the receive well.
[08:16:40] <jason1234> I go for a nap. I did a lot already. tired.
[08:20:37] *** Quits: soapsudsxx (~soapsudsx@209.221.40.137) (Remote host closed the connection)
[08:22:01] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[08:26:39] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[08:26:57] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[08:31:01] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[08:31:16] *** Joins: jinsun (~quassel@user/jinsun)
[08:44:42] *** Quits: davros (~davros@host86-185-99-252.range86-185.btcentralplus.com) (Ping timeout: 260 seconds)
[08:47:07] *** Quits: dreamcat4 (uid157427@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:49:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[08:53:17] *** Joins: Dunce (~Dunce@gateway/tor-sasl/dunce)
[08:54:23] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[08:55:14] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:56:35] *** Joins: davros (~davros@host86-185-61-183.range86-185.btcentralplus.com)
[08:59:08] *** Joins: extern (~archer@80.246.130.141)
[08:59:19] <extern> why #define NELEM(x)   (sizeof(x) / sizeof((x)[0])); produce wrong result
[08:59:31] <extern> i have an array with five elements and it prints 8
[08:59:37] <extern> like i have 8 elements
[09:00:05] <caze> It doesn't work with pointers.
[09:01:01] *** Quits: Dunce (~Dunce@gateway/tor-sasl/dunce) (Remote host closed the connection)
[09:04:37] *** Joins: kadavul (~vazha@103.165.21.248)
[09:05:11] *** Quits: alch (~alch@151.34.120.121) (Ping timeout: 264 seconds)
[09:05:39] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[09:05:39] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[09:05:39] *** Joins: wroathe (~wroathe@user/wroathe)
[09:06:13] <jason1234> it is actually easy to make aftp client
[09:06:20] <extern> im reading this the second answer ... if i need to pass aditional parameter indicating the elements of the array than i don't need it all
[09:06:21] <extern> https://stackoverflow.com/questions/37538/how-do-i-determine-the-size-of-my-array-in-c
[09:06:31] <extern> what im trying to determine is the number of elements in the first place
[09:06:40] <jason1234> simple sockets and USER anonymous PASS ok, and then Get to get the file. it is just : TELNET 
[09:06:49] <sysRPL> here are two new demos i wrote today for my canvas library -> fire sparks https://streamable.com/fm02c4 .. and crowd walk https://streamable.com/mc3he6
[09:07:02] *** Joins: alch (~alch@151.68.109.208)
[09:07:08] <caze> extern: As I said, the macro can't work with pointers.
[09:07:26] <extern> caze: so how to determine length of array as efficiently as possible ?
[09:08:07] <caze> extern: Calculate it using the array itself, and not using a pointer to the first element of the array.
[09:08:24] <extern> so just sizeof without define ? 
[09:10:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[09:10:35] <extern> i thought the compiler is not treating define like a function 
[09:10:38] <caze> No, the macro will work on the array (probably without the semicolon though)
[09:11:06] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:12:31] <extern> isn't it #define it just replacing declerations before passing it to the compiler ?
[09:12:47] <extern> so in essence i never passed the array as a parameter
[09:12:51] <extern> im confused ..
[09:13:07] <caze> extern: https://ideone.com/59CxHy
[09:14:11] *** Quits: zyweo (~Svew@user/zyweo) (Ping timeout: 264 seconds)
[09:17:39] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Remote host closed the connection)
[09:18:52] *** Quits: hentai (~hentai@user/hentai) (Ping timeout: 252 seconds)
[09:19:25] *** Quits: gce108 (~gce@user/gce108) (Read error: Connection reset by peer)
[09:20:22] *** Joins: gce108 (~gce@user/gce108)
[09:21:57] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[09:23:18] <extern> thanks caze 
[09:23:32] <caze> extern: What did you learn from that?
[09:24:02] <extern> that semicolon at the end of #define is a bad idea
[09:24:42] <extern> and that array's when passed to a function is converted to a pointer
[09:25:01] <extern> to the first element of the array
[09:25:08] <extern> other than that not much
[09:25:26] <extern> caze any point you will want to emphasize ? 
[09:25:50] <caze> No, that's it, it's not all that complicated.
[09:26:16] <extern> there is something i don't understand 
[09:26:30] <extern> why the semicolon at the end broke the meaning of the entire declertaion ? 
[09:26:36] <caze> If you know that there is a value that you will never use in the array, you could use it as a sentinel value to mark the end of the array.
[09:26:37] <extern> #define
[09:27:02] *** Joins: meator (~meator@user/meator)
[09:27:07] <caze> Then to determine the size of the array, you could count each element until you see that value.
[09:28:14] <caze> extern: A semicolon marks the end of a statement. If you include a semicolon in the macro, then everytime you invoke the macro, you're ending the statement immediately after the invocation.
[09:28:48] <extern> ok
[09:29:21] <extern> thanks
[09:29:24] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[09:29:43] <caze> My print would look like this: printf("%zu\n", (sizeof(x) / sizeof((x)[0])); (missing a closing `)`)
[09:30:01] *** Quits: extern (~archer@80.246.130.141) (Quit: WeeChat 3.3)
[09:31:43] <katnis> lalala programming C langauge is so fun to learn! wahahahaha i love this langauge XD
[09:32:13] <caze> katnis: What have you learned?
[09:32:19] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:32:59] <katnis> desertion from education
[09:33:23] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[09:35:26] *** Joins: raj (uid72176@user/raj)
[09:35:42] <caze> What have you learned about C?
[09:37:52] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[09:39:54] *** Quits: gce108 (~gce@user/gce108) (Remote host closed the connection)
[09:40:53] *** Joins: gce108 (~gce@user/gce108)
[09:40:59] *** Quits: pnbeast (~pnbeast@2601:140:4280:3c90::1) (Quit: WeeChat 2.7.1)
[09:42:15] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[09:42:34] *** Joins: Enitin (~Enitin@82.102.22.84)
[09:42:46] *** Quits: rgrinberg (~textual@ip152-195-159-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:44:13] *** Joins: snehal (~snehal@2402:8100:3006:c8eb:d861:e29b:5199:c238)
[09:50:06] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[09:54:47] *** Quits: kadavul (~vazha@103.165.21.248) (Read error: Connection reset by peer)
[09:58:08] <katnis> function
[09:58:10] <katnis> pointer
[09:58:31] *** Joins: ravan (~ravan@user/ravan)
[10:02:10] *** Joins: extern (~archer@80.246.130.141)
[10:03:02] <extern> caze: https://ideone.com/59CxHy how does a pointer is 2 bytes ? 
[10:03:13] <extern> i just notice that in your code 
[10:04:12] <extern> isn't it suppouse to be 8 ? 
[10:06:01] *** snehal is now known as NewName
[10:06:52] *** NewName is now known as tonystark
[10:10:47] <extern> why the first output of this code is 2 ? 
[10:10:49] <extern> https://ideone.com/59CxHy
[10:10:54] <extern> can someone explain ? 
[10:12:07] <katnis> het is interessant
[10:12:11] <katnis> i see 2,3
[10:14:26] *** Quits: Ox151 (~user@user/ox151) (Remote host closed the connection)
[10:14:40] <katnis> ???
[10:14:46] <katnis> extern: i get 1 and 3
[10:15:14] <extern> don't look at me
[10:15:23] <extern> im probably more confuesd than you are
[10:15:38] <floatcomplex> we certainly do spend a lot of time discussiong that sizeof / sizeof idiom in this channel
[10:15:41] <katnis> okay...
[10:15:47] <floatcomplex> it doesn't appear in real world code as often as you'd think
[10:15:53] <katnis> is it division?
[10:16:02] <floatcomplex> just don't use it
[10:16:27] *** Joins: manas (~manas@122.161.50.41)
[10:16:34] <katnis> someone should help with his curiosity tho...
[10:16:43] <katnis> or he will never sleep
[10:16:46] *** Parts: manas (~manas@122.161.50.41) ()
[10:17:43] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[10:17:48] *** Joins: bl4cksyntax (~manas@122.161.50.41)
[10:18:06] <katnis> what is x here?
[10:18:19] <extern> floatcomplex: ok but if you here can you at least give answer ?
[10:18:27] <khoa> well sizeof(int *) = 8 and sizeof(int) = 4
[10:18:33] <khoa> 8 / 4 = 2
[10:18:43] <khoa> QED
[10:18:51] <katnis> but why do i get 1
[10:18:53] <katnis> OMG
[10:19:04] <khoa> It's 1 on 32-bit platform
[10:19:08] <katnis> oh.
[10:19:12] <katnis> i use windows
[10:19:14] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[10:19:15] <katnis> is that why
[10:19:46] <khoa> Depends on whether your version is 32-bit or 64-bit
[10:19:52] <katnis> gotcha
[10:20:01] <floatcomplex> the code is wrong regardless of platform
[10:20:13] <extern> so how it suppouse to be ? 
[10:20:17] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[10:21:13] <khoa> What are you trying to do ?
[10:21:39] <extern> if floatcomplex declared it as wrong so he probably know how to make it right
[10:21:44] <floatcomplex> extern: it cannot be fixed
[10:21:50] <floatcomplex> there is no way to write that function
[10:22:11] <extern> im reading here that there is 
[10:22:17] <extern> https://stackoverflow.com/questions/1461432/what-is-array-to-pointer-decay
[10:23:18] <floatcomplex> you seem to be attempting to write a function, foo(), that returns the size of an array, without regard to whether it is statically allocated or not
[10:23:35] <floatcomplex> that's not a thing you can do. foo() needs to be told the length of that array, not vice versa
[10:24:01] <khoa> Whoever promotes the idea that pointer and array are similar should be executed
[10:24:16] <extern> floatcomplex: i am under the impression here that const T (*array)[U] will prevent pointer decaying 
[10:24:48] <floatcomplex> this really doesn't have anything to do with pointer decay
[10:25:26] <floatcomplex> extern: foo() can either take a pointer, as how you've written it, or it can take an array of a size known at compile time
[10:25:36] <floatcomplex> it cannot determine the size of an array at runtime
[10:26:13] <extern> and there isn't any way to determine an array in runtime  ?
[10:26:31] <floatcomplex> extern: pointer are not magic
[10:26:49] <khoa> extern: strlen
[10:26:53] <floatcomplex> extern: in real world code, if arr were dynamically allocated, the number of elements would be in a variable
[10:27:10] <floatcomplex> you'd pass that variable, along with the pointer, to wherever it was needed
[10:27:14] <extern> right
[10:27:18] <extern> thank you floatcomplex 
[10:27:23] *** Joins: snehal_ (~snehal@2402:8100:2337:4511:d861:e29b:5199:c238)
[10:27:31] <floatcomplex> if arr were not dynamically allocated, its size would be known at compile time by all interested parties
[10:27:38] <floatcomplex> there would be no need to write a function that determines its size
[10:27:52] <extern> floatcomplex: yeah but i thought about passing an array through a network
[10:28:22] <floatcomplex> extern: if it's a dynamically allocated array, you pass its size explicitly
[10:28:22] <extern> but even then the server and client need to know the data size in advance
[10:28:31] <extern> yeah i got it 
[10:28:48] <floatcomplex> and you simply don't end up in a situation where you are wondering about the size of a non-dynamically allocated array
[10:29:41] *** Quits: tonystark (~snehal@2402:8100:3006:c8eb:d861:e29b:5199:c238) (Ping timeout: 245 seconds)
[10:30:22] *** Joins: Matt|home (~matt@adsl-74-233-58-219.mia.bellsouth.net)
[10:30:23] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b015:8261:acb8:581b:b352) (Ping timeout: 264 seconds)
[10:30:28] *** Quits: extern (~archer@80.246.130.141) (Quit: WeeChat 3.3)
[10:32:14] *** Joins: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de)
[10:37:12] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[10:37:35] *** Joins: immibis (~hexchat@62.156.144.218)
[10:37:54] *** Joins: snehal__ (~snehal@2409:4042:587:48bd:d861:e29b:5199:c238)
[10:40:31] *** Quits: snehal_ (~snehal@2402:8100:2337:4511:d861:e29b:5199:c238) (Ping timeout: 245 seconds)
[10:42:21] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 268 seconds)
[10:42:29] *** Joins: kashyaprushi (~kashyapru@2409:4042:4d34:f95c:e3bb:107f:507d:8622)
[10:42:43] *** Joins: jellie (~luv_panda@user/jellie)
[10:47:58] *** Joins: snehal_ (~snehal@2402:8100:22de:1a76:d861:e29b:5199:c238)
[10:49:02] *** Joins: aradesh (~aradesh@user/aradesh)
[10:50:31] *** Quits: snehal__ (~snehal@2409:4042:587:48bd:d861:e29b:5199:c238) (Ping timeout: 245 seconds)
[10:55:23] *** Parts: bl4cksyntax (~manas@122.161.50.41) (WeeChat 3.3)
[10:55:40] *** Joins: kashyaprushi_ (~kashyapru@2405:201:1010:b015:3a0f:31d6:aae9:4616)
[10:58:35] *** Quits: kashyaprushi (~kashyapru@2409:4042:4d34:f95c:e3bb:107f:507d:8622) (Ping timeout: 264 seconds)
[10:58:52] *** Joins: Rounin (~david@84.212.130.215)
[11:00:00] *** Joins: slidercrank (~slidercra@user/slidercrank)
[11:02:01] *** Joins: mrig (~AdiIRC@user/mrig)
[11:03:07] *** Joins: kashyaprushi__ (~kashyapru@2409:4042:4d34:f95c:ee11:b05f:6014:7546)
[11:05:09] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[11:05:22] <buu> Can anyone give me a clue what OP this futex call is? futex(140721957946356, 128, 2, 140721957946224, 0, 0) = -1 (connection timed out)
[11:05:31] *** Quits: kashyaprushi_ (~kashyapru@2405:201:1010:b015:3a0f:31d6:aae9:4616) (Ping timeout: 245 seconds)
[11:07:14] <floatcomplex> wait private
[11:07:37] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[11:07:40] <buu> Ohh
[11:08:11] *** Quits: snehal_ (~snehal@2402:8100:22de:1a76:d861:e29b:5199:c238) (Ping timeout: 264 seconds)
[11:08:38] <buu> I'm flailing around trying to debug a binary app, would timeouts on that be a potentially bad/weird/unexpected thing or super normal
[11:11:13] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:12:44] *** Joins: hexteex (~hexteex@gateway/tor-sasl/hexteex)
[11:14:07] <khoa> buu: Seems normal
[11:14:59] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[11:16:38] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[11:21:30] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[11:21:39] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[11:25:12] *** Joins: V-T60 (~v@91.203.24.166)
[11:26:13] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[11:29:19] *** Quits: khoa (~khoa@user/khoa) (Quit: leaving)
[11:29:25] *** Joins: sydo (~sydo@99-100-247-254.lightspeed.okcbok.sbcglobal.net)
[11:29:56] *** Quits: sydo (~sydo@99-100-247-254.lightspeed.okcbok.sbcglobal.net) (Client Quit)
[11:33:05] *** Quits: mrig (~AdiIRC@user/mrig) (Read error: Connection reset by peer)
[11:33:18] *** Joins: mrig (~AdiIRC@user/mrig)
[11:34:13] *** Joins: slidercrank (~slidercra@user/slidercrank)
[11:38:11] *** Quits: alch (~alch@151.68.109.208) (Ping timeout: 264 seconds)
[11:40:24] *** Joins: brelod (~me@90.244.150.142)
[11:43:12] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[11:43:13] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.3)
[11:44:38] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:48:35] *** Joins: plastico (~plastico@neomutt/plastico)
[11:49:19] *** Joins: Guest83 (~Guest83@2409:4062:4e0e:3abd:5aa1:1bfd:937a:9183)
[11:49:53] *** Joins: alch (~alch@151.36.51.207)
[11:51:40] *** Joins: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[11:52:47] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[11:53:13] *** Joins: vaio (~gary@user/ghost)
[11:53:22] <Guest83> I have ```char tokens[] = {'a','b'};``` but when I do ```char* tokens = {'a','b'};``` , I get warning
[11:53:37] *** Joins: plainoldcheese (~plainoldc@user/plainoldcheese)
[11:53:43] <Guest83> ```main.c:24:21: warning: incompatible integer to pointer conversion initializing 'char *' with an expression of type 'int'```
[11:53:56] <Guest83> what am I doing wrong here?
[11:57:46] <dave0> Guest83: '' is for characters, "" is for strings
[11:58:06] <Guest83> oh
[11:58:22] <dave0> Guest83: oh are you intentionally building a string from a list of ''s?
[11:58:37] <Guest83> yes
[11:59:09] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[11:59:17] <Guest83> am I doing it wrong here?
[11:59:45] <dave0> Guest83: when you create  tokens[]   the compiler (counts the number of elements and) allocates space for them, then initializes the array from the sequence of characters
[11:59:56] <Guest83> ok
[12:00:10] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[12:01:00] <dave0> Guest83: char *token   allocates space for the pointer, but not what it points to... when you use   char *tokens = { something }    something is not allocated or initializing memory
[12:01:15] <Guest83> I thought char* tokens and char tokens[] are interchangeable, although char tokens[] is const char* tokens
[12:01:35] <gl> ,array
[12:01:35] <candide> An array type describes a contiguously allocated nonempty set of objects with a particular member object type, called the element type.
[12:01:50] <dave0> Guest83: they are interchangable as function parameters
[12:02:04] <dave0> Guest83: but not defining or initializing
[12:02:37] <Guest83> oh
[12:02:39] <dave0> let me check the c-faq i think it explains it
[12:02:59] *** Joins: pony (~ed@smol/hors)
[12:03:20] <gl> http://www.c-faq.com/aryptr/index.html
[12:04:08] <dave0> yeah 6.2 in that
[12:04:31] <Guest83> oh thank you
[12:04:41] *** Joins: lionkor (~lionkor@200116b80fb518007285c2fffea63d72.dip.versatel-1u1.de)
[12:06:53] <dave0> Guest83: you don't normally create a string by listing individual characters, even though you can, it's much more common to use the convenience of quotes ""
[12:07:41] <Guest83> ok
[12:07:50] <dave0> there's nothing wrong with using individual characters, it's just more work for you
[12:08:07] <Guest83> but what about the warning message?
[12:08:34] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.3)
[12:08:34] <dave0> i don't have enough information to find the error
[12:08:52] <Guest83> also I get warning when doing this; char** tokens = {"as","sb"};
[12:09:18] *** Quits: raj (uid72176@user/raj) (Quit: Connection closed for inactivity)
[12:09:21] <dave0> again the pointers don't allocate space
[12:09:31] <Guest83> oh 
[12:09:36] <dave0> use an array   char *tokens[] = {"as","sb"};
[12:09:55] <Guest83> ok I will keep that in mind
[12:10:30] *** Joins: NEYi (~NEYi@109.251.216.38)
[12:13:10] *** Joins: kashyaprushi_ (~kashyapru@2405:201:1010:b015:1d6e:e787:8f98:b9d5)
[12:13:41] *** kashyaprushi_ is now known as kashyaprushi
[12:13:48] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:15:14] <jason1234> why the send() command to sock fails, and hangs the whole process?    ftp-client.c  https://termbin.com/r4zz 
[12:15:31] *** Quits: kashyaprushi__ (~kashyapru@2409:4042:4d34:f95c:ee11:b05f:6014:7546) (Ping timeout: 245 seconds)
[12:15:58] *** Joins: pony (~ed@smol/hors)
[12:17:56] *** Joins: arinov (~arinov@213.194.126.155)
[12:20:06] *** Quits: pony (~ed@smol/hors) (Client Quit)
[12:23:50] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b015:1d6e:e787:8f98:b9d5) (Quit: Leaving)
[12:25:48] *** Quits: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de) (Quit: Textual IRC Client: www.textualapp.com)
[12:25:54] <munkis> my issue with "falsehoods programmers believe about names" is that it can be restated as "the only way to properly support X (in this case names) is to special case every name"
[12:27:58] *** Quits: fossforus (~stan@99-173-128-32.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 244 seconds)
[12:29:06] <dave0> someone changed their name to a symbol the other day but google only tells me about prince/love symbol
[12:31:34] <dave0> oh i was thinking of kanye ... it's not a symbol it's "ye" from the bible
[12:33:00] *** Quits: Guest83 (~Guest83@2409:4062:4e0e:3abd:5aa1:1bfd:937a:9183) (Quit: Client closed)
[12:33:25] <munkis> ye from the bible?
[12:33:42] <dave0> apparently
[12:34:22] <munkis> I don't recall ever seeing the word ye in the bible.
[12:34:53] <munkis> although I guess i could be a really weird transliteration of יה
[12:35:46] <dave0> https://www.bbc.com/news/entertainment-arts-58965500
[12:37:10] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:38:17] <dave0> i thought celebrity dumbness bottomed out when what's-her-name's 3 year old girl said she was a boy and the celebrity supports her transgender kid
[12:38:26] <dave0> what the fuck does a 3 year old know
[12:39:48] <munkis> oh ye as in you in middle english
[12:40:30] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:40:34] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[12:40:47] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:40:56] *** Joins: snehal_ (~snehal@2409:4042:587:48bd:d861:e29b:5199:c238)
[12:41:08] *** Joins: vaio (~gary@user/ghost)
[12:42:02] <dave0> ye shalt not ... something
[12:47:38] *** Quits: ethoxy (~caretaker@cx21.havox.ru) (Ping timeout: 246 seconds)
[12:49:53] *** Joins: pony (~ed@smol/hors)
[12:52:19] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b015:b89:20c3:d408:a0dd)
[12:54:13] *** snehal_ is now known as hinata
[12:58:59] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[12:59:53] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[13:03:21] *** Quits: murych (~tmayzenbe@46.39.54.208) (Remote host closed the connection)
[13:03:47] *** Joins: murych (~tmayzenbe@46.39.54.208)
[13:05:05] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[13:05:13] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:05:43] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[13:07:44] *** Quits: hinata (~snehal@2409:4042:587:48bd:d861:e29b:5199:c238) (Quit: Leaving)
[13:08:02] *** Joins: snehal (~snehal@2409:4042:587:48bd:d861:e29b:5199:c238)
[13:10:05] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[13:14:31] *** Quits: murych (~tmayzenbe@46.39.54.208) (Quit: Konversation terminated!)
[13:14:42] *** Joins: synaps3 (~void@178-221-103-129.dynamic.isp.telekom.rs)
[13:15:14] *** Joins: snehal_ (~snehal@2402:8100:2331:b9a6:d861:e29b:5199:c238)
[13:15:22] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 260 seconds)
[13:16:56] *** snehal_ is now known as hinata
[13:17:36] *** Quits: snehal (~snehal@2409:4042:587:48bd:d861:e29b:5199:c238) (Ping timeout: 245 seconds)
[13:18:15] *** Joins: slidercrank (~slidercra@user/slidercrank)
[13:19:02] *** Quits: hinata (~snehal@2402:8100:2331:b9a6:d861:e29b:5199:c238) (Client Quit)
[13:19:19] *** Joins: snehal (~snehal@2402:8100:2331:b9a6:d861:e29b:5199:c238)
[13:19:20] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:25:19] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[13:26:31] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[13:27:19] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[13:27:25] *** Quits: snehal (~snehal@2402:8100:2331:b9a6:d861:e29b:5199:c238) (Quit: Leaving)
[13:27:41] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:27:42] *** Joins: snehal (~snehal@2402:8100:2331:b9a6:d861:e29b:5199:c238)
[13:29:20] *** Quits: LuKaRo_ (~LuKaRo@p4fc32190.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[13:29:48] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[13:31:10] *** Quits: snehal (~snehal@2402:8100:2331:b9a6:d861:e29b:5199:c238) (Client Quit)
[13:31:37] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[13:32:09] *** Joins: evocatus (~evocatus@84.51.113.13)
[13:32:21] *** Joins: csrf (~csrf@user/csrf)
[13:32:47] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[13:33:59] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:34:04] *** Joins: LuKaRo (~LuKaRo@p4fc32190.dip0.t-ipconnect.de)
[13:42:07] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 260 seconds)
[13:43:18] *** Joins: CaCode (~Cas@user/cacode)
[13:47:34] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:b600:12c3:7bff:fe6d:d374)
[13:47:50] *** Joins: shivesh (~shivesh@user/shivesh)
[13:52:31] *** Joins: random-nick (~random-ni@87.116.165.220)
[14:00:51] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[14:02:19] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[14:02:44] *** Joins: thing (~thing@user/thing)
[14:04:39] *** Quits: The_Jag_ (~The_Jag@host-87-19-40-26.retail.telecomitalia.it) (Read error: Connection reset by peer)
[14:05:40] *** Joins: The_Jag (~The_Jag@host-87-19-40-26.retail.telecomitalia.it)
[14:07:58] *** Joins: pixies (~i.am@user/marlboro)
[14:11:12] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[14:11:47] *** Quits: csrf (~csrf@user/csrf) (Ping timeout: 264 seconds)
[14:11:55] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[14:12:42] *** Quits: synaps3 (~void@178-221-103-129.dynamic.isp.telekom.rs) (Quit: Leaving)
[14:12:54] *** Quits: BSaboia (~bsaboia@177.37.198.218) (Quit: This computer has gone to sleep)
[14:14:00] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 276 seconds)
[14:17:41] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.3)
[14:18:00] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[14:20:51] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[14:21:48] *** Joins: seninha (~seninha@user/seninha)
[14:23:28] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[14:31:30] *** Quits: plainoldcheese (~plainoldc@user/plainoldcheese) (Quit: WeeChat 3.3)
[14:32:34] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:32:43] *** Joins: Arthuria (~Arthuria@user/arthuria)
[14:33:12] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:33:42] *** Joins: frost (~frost@user/frost)
[14:34:24] *** Joins: Klinda (~superleag@user/klinda)
[14:36:21] *** Joins: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:36:34] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[14:37:31] *** Joins: kish` (~aqua@user/aqua)
[14:38:00] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[14:40:35] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 264 seconds)
[14:40:54] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[14:42:24] *** Joins: kadavul (~vazha@103.165.20.238)
[14:48:16] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Quit: Bye!)
[14:48:24] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[14:52:28] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[14:53:21] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[14:56:54] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:57:03] *** Joins: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown)
[14:57:45] <De4nWhit3> Hello. I am currently starting to learn the C programming language. Is there individuals around here whom I may ask for advice when I get stuck?
[14:58:09] <omegatron> that's the purpose of this channel
[14:58:13] *** Quits: evocatus (~evocatus@84.51.113.13) (Read error: Connection reset by peer)
[14:58:16] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[14:58:24] <De4nWhit3> Excellent! Thank you very much. 
[14:58:25] <LiaoTao> You can probably ask out loud here. People tend to be helpful most of the time.
[14:58:29] <LiaoTao> Darn latency
[14:58:32] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[14:58:39] *** Quits: V-T60 (~v@91.203.24.166) (Ping timeout: 260 seconds)
[14:59:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:02:49] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:03:13] <kurahaupo_> LiaoTao: so much darn latency that it takes forever to mend a sock
[15:03:33] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[15:04:31] *** Quits: rahl (~rahl@102.114.70.97) (Ping timeout: 244 seconds)
[15:06:21] *** Joins: rahl (~rahl@102.114.92.54)
[15:08:07] *** Joins: subdelusional (~subdelusi@188.249.169.186)
[15:10:06] <subdelusional> is there a better way to do this https://bpa.st/VOKA
[15:11:18] <cehteh> certainly
[15:11:45] <subdelusional> does it qualify as shit code?
[15:12:07] <cehteh> yes
[15:12:18] <dave0> subdelusional: you trying to make it use stdin when there's no arguments, otherwise each argument is a filename and you loop through?
[15:12:32] <subdelusional> yes
[15:12:34] <cehteh> the goto is useless too
[15:12:46] <cehteh> and it uses ancient C style
[15:13:06] <subdelusional> it won't be useless if I put the loop at the top
[15:13:10] <dave0> subdelusional: the most obvious thing would be break the while(fgets)fprintf loop into a function
[15:13:48] <pragma-> I dislike how he thinks sizeof is a function.
[15:14:08] <dave0> subdelusional: if(argc == 1) { myfunc(stdin); } else for(i = 1; i < argc; i++) { f_ptr = fopen(argv[i], "r"); myfunc(f_ptr); fclose(f_ptr); }
[15:14:28] <cehteh> instead fprintf you can use fwrite for writong out
[15:14:58] <cehteh> there are *plenty* ways how it could be improved, plus real error handling
[15:15:00] <Matt|home> <pragma-> I dislike how he thinks sizeof is a function. <-- sizeof is a C operator. looks like a function but it's not. there's a couple examples of things looking like something else
[15:15:10] <Matt|home> e.g. the FILE macro 
[15:15:15] <pragma-> No error-checking on any of the fopens either.
[15:15:18] <Matt|home> it's almost unimportant
[15:15:35] <dave0> subdelusional: void myfunc(FILE *f_ptr) { char buf[BUFSIZ]; while(fgets(buf, sizeof(buf) /*hi pragma!*/, f_ptr) != NULL) { fprintf(stdout, "%s", buf); } }
[15:15:45] <subdelusional> I know sizeof is not a function but using function syntax on it just makes more sense to me
[15:16:33] <Matt|home> subdelusional : so, don't use goto for security reasons. it's deprecated and unecessary. your code is fine apart from that, there are better ways to write it but don't use goto
[15:16:48] <dave0> split it out into functions
[15:17:10] <Matt|home> either do what dave0 said, or just omit the goto LOOP and put the while block after else.
[15:17:49] <Matt|home> C is _not_ a good language to learn for the first time. it's really old, there's a lot of intracacies and weird bullshit you won't understand without a lot of background knowledge
[15:18:07] <subdelusional> I just realised capital K in vim gives searches man pages for the highlighted word
[15:19:08] <dave0> vintage is the new old
[15:19:42] <subdelusional> also why if(argc==1) and not if(argc<2)?
[15:19:59] <Matt|home> subdelusional : seriously , if the only takeaway you receive from this conversation/criticism is one thing, please make it "don't use goto in correct C code". 
[15:20:01] <dave0> subdelusional: that's fine too
[15:20:04] <Matt|home> either works
[15:20:39] <Bou> also it doesn't close any file descripters at all
[15:20:43] <subdelusional> Matt|home: what's wrong with goto?
[15:20:54] <Matt|home> in general i don't like to hardcode numeric values willy-nilly into the source code but it's fine here
[15:21:11] <dave0> subdelusional: it's like karate... you learn it in order to never use it
[15:21:26] <Matt|home> #1: it's intentionally obfuscating program flow and control, #2: it's bad practice, and #3: used to be a security risk
[15:21:39] <Matt|home> and most importantly
[15:21:49] <subdelusional> isn't goto just a jump statement in assembly? that's used a lot
[15:21:57] <dave0> subdelusional: first you must fill your head with knowledge, then you can goto
[15:21:59] <Matt|home> the existing loops make it useless. if/else while and for handle any looping perfectly
[15:22:23] <Matt|home> yes. but you're not writing assembly you're writing C, and the C compiler does a lot of under the hood optimization with your code as well that you never see
[15:22:31] <Matt|home> do what dave0 said
[15:23:15] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.1)
[15:23:33] <subdelusional> so instead of goto just write a void function? all the times?
[15:23:49] *** Joins: BSaboia (~bsaboia@177.37.198.218)
[15:23:54] <Matt|home> subdelusional : im gonna make a blanket statement. please take it to heart
[15:24:19] <Matt|home> While you are learning C, do not use goto. there is almost no program flow you will need that can not be easily solved with if, else, while, do while, and for.
[15:24:26] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[15:24:34] <Matt|home> and like we said earlier
[15:24:52] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[15:24:58] <Matt|home> either create a new function or just omit the goto statement and put the while loop after the else statement
[15:25:05] <Matt|home> your line 20 is redundant
[15:25:41] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:1116:bb94:84d0:d5e7)
[15:25:49] <omegatron> in many cases, you can avoid goto with a   do { ... } while ( 0 )  loop, where you insert a 'break' whenever you want to leave the loop
[15:26:16] <Matt|home> looping can be tricky in C. please do a lot of practice exercises with the various loop statements available
[15:26:56] <subdelusional> also C isn't my first language 
[15:27:16] <subdelusional> but I'm a beginner in C so I'm a bit confused
[15:27:32] <subdelusional> but I understand the basic stuff since I've been doing a lot of assembly before
[15:27:35] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[15:28:15] <Bou> I think you can just do `for (int i=1; i<argc; ++i) { f_ptr = (argc==1) ? stdin : fopen(argv[i]); ... }`
[15:28:21] <Matt|home> C is incredibly unintuitive and you can easily make programs that "work" but are incorrect because they break things without you realizing it. along with the tutorials you should read the C standard documentation as well
[15:28:58] <Bou> with argc==1 it runs once with stdin, with argc>1 it opens every argument
[15:29:29] <markand> I recommend rust as first language
[15:29:30] * markand hides
[15:30:20] <omegatron> you better do
[15:30:45] <subdelusional> eh
[15:30:56] <Bou> I meant `int i=0`
[15:31:02] <Matt|home> you can learn C as a first language just fine. just read the documentation along with tutorials, it covers a lot.
[15:31:04] <omegatron> and I object to "incredibly unintuitive" ... it's a programming language. you have to learn it. like you would do with other languages. nothing more or less.
[15:31:26] <subdelusional> I dislike rust because a lot of software relies on it and I'd have to compile it with rustc and cargo which takes ages
[15:31:37] <omegatron> the problem starts, if you learn it with false assumptions or expectations
[15:31:38] <Matt|home> omegatron : sure, but in my experience it's easier to break things in C than any other high level language without you realizing they're broken. the compiler is pretty forgiving in comparison to like java
[15:32:08] <subdelusional> C type system is weak and it permits a lot of things 
[15:32:15] <subdelusional> so yeah you're stuck with runtime errors
[15:32:22] <subdelusional> I'll show you this horror I wrote yesterday
[15:32:31] <subdelusional> I'm surprised it even compiles
[15:32:37] <omegatron> you want horror? program in PHP
[15:32:46] <markand> sanitizers ftw
[15:34:18] <omegatron> it's type coercion rules are the worst (at least last time when I checked) and no clean API (function naming scheme, parameter ordering)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:07] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[15:36:11] <dave0> subdelusional: https://bpa.st/AS4Q     not tested
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:43] <Bou> dave0: so with argc==2 it ignores the first argument?
[15:37:57] <dave0> Bou: yeah it looks like there's a bug
[15:38:09] *** Joins: V-T60 (~v@91.203.24.166)
[15:38:24] <dave0> he can fix it
[15:41:13] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[15:41:38] <Bou> I'd do something like https://bpa.st/44LQ
[15:41:53] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:42:24] <dave0> wow that's short
[15:43:03] <fizzie> I'd support the usual convention of "-" to denote stdin, at which point you can do the argc == 1 case by just using a different array with "-" as the only (pseudo-)filename.
[15:43:14] <nomagno> Greetings! I am probably missing some fairly basic knowledge here, but I need to compile together two object files, that currently both include the same header. How can I avoid "multiple definition of function" errors?
[15:43:32] <fizzie> And you don't want to open argv[0] as in Bou's example.
[15:43:47] <pragma-> nomagno: don't define things in headers.
[15:44:17] <Bou> lol yes that was a mess
[15:44:31] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Remote host closed the connection)
[15:45:41] <dave0> nomagno: http://www.c-faq.com/cpp/hfiles.html
[15:45:46] <Bou> I drop a `continue` in there for the i==0 && argc>1 case, but yuck
[15:46:19] <nomagno> pragma- : I recognize that is good advice, but the header itself isn't mine and it has a... peculiar architecture: https://raw.githubusercontent.com/zserge/jsmn/master/jsmn.h
[15:46:45] *** Quits: alch (~alch@151.36.51.207) (Read error: Connection reset by peer)
[15:47:19] <nomagno> I guess I will just refactor it
[15:48:01] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Ping timeout: 245 seconds)
[15:49:10] *** Joins: pulse (~pulse@user/pulse)
[15:49:12] <Bou> fizzie: `for (int i=argc>1; i<argc; ++i)` maybe? :^)
[15:50:34] <fizzie> Here's what I'd go with, probably, modulo error-checking and such: https://0x0.st/-d5X.c
[15:51:18] *** Joins: alch (~alch@151.68.184.74)
[15:51:57] *** Joins: arinov (~arinov@213.194.126.155)
[15:51:58] *** Quits: rkta (~kt@62.113.246.111) (Quit: leaving)
[15:52:00] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[15:52:16] *** Joins: rkta (~kt@62.113.246.111)
[15:53:46] *** Quits: dutch (~DutchIngr@user/dutch) (Ping timeout: 252 seconds)
[15:54:23] <dave0> no one else used another function :-(
[15:56:03] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[15:56:15] *** Joins: Guest82 (~Guest82@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[15:56:59] *** Quits: V-T60 (~v@91.203.24.166) (Ping timeout: 260 seconds)
[15:57:27] *** Joins: dutch (~DutchIngr@user/dutch)
[16:00:18] <Bou> hm, why the check for stdin, would it be a problem to fclose(stdin) after reading it until EOF?
[16:00:58] <fizzie> Sometimes people do things like `cat - tmp.txt -` and produce multiple EOFs from stdin. As an interactive terminal, it can do that.
[16:01:32] <fizzie> Not exactly commonplace, admittedly.
[16:01:52] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[16:02:35] <fizzie> Maybe that won't work through a `FILE *` anyway without a `clearerr` call, come to think of it. Anyway.
[16:04:12] *** Quits: kadavul (~vazha@103.165.20.238) (Ping timeout: 265 seconds)
[16:04:15] <fizzie> Sadly you can't do `(f == stdin ? clearerr : fclose)(f)`, the function types aren't compatible. ;)
[16:04:15] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:04:35] *** Joins: constxo (~brad@192.75.101.164)
[16:05:24] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[16:06:06] *** Joins: kadavul (~vazha@103.165.20.238)
[16:07:27] <fizzie> As for another function, I think my thinking was, making the same loop responsible for the no-args case as the with-args case makes it even more clear it will do exactly the same thing. (Even so the cat-a-file bit could be definitely be a separate function though.)
[16:12:15] *** pixies is now known as cartman
[16:12:51] *** Joins: NovumDXW (~NovumDXW@183.12.239.113)
[16:13:16] *** Joins: V-T60 (~v@91.203.24.166)
[16:13:24] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:13:42] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:13:51] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:1116:bb94:84d0:d5e7) (Ping timeout: 245 seconds)
[16:14:04] <DPA> If C had while else, this would be a case where it may be usable: https://bpa.st/O42Q
[16:15:41] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[16:16:24] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[16:17:29] <nomagno> DPA: How would a 'while else' even work? As in, code execution continues as normal if the while loop's condition ever becomes 'falsy'.
[16:18:05] <fizzie> There's at least two different `while else`s, and I couldn't tell at a glance (and don't remember any more from the other day) which one that is.
[16:19:15] <DPA> nomagno: While else is simply if the loop body never ran, run the else.
[16:19:28] *** Joins: krux02 (~krux02@p200300e817076e001575326a031bb152.dip0.t-ipconnect.de)
[16:19:37] <fizzie> There's one where the `else` statement is executed if (and only if) the main `while` statement did not execute even once; and there's one where the `else` statement is executed if the main `while` loop terminated due to the controlling expression becoming false, but skipped if it terminated due to a `break`.
[16:20:15] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[16:20:19] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Ping timeout: 260 seconds)
[16:20:43] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[16:20:56] <nomagno> DPA: Don't see why that deserves its own syntax TBH. You can check for that in a thousand ways already
[16:21:28] <nomagno> Both use cases seem very niche, but hey, if it works for Python, good for Python!
[16:21:34] *** Quits: subdelusional (~subdelusi@188.249.169.186) (Quit: leaving)
[16:21:47] <DPA> Interesting, I didn't know the second type yet. Why would one want that?
[16:21:48] <fizzie> The Python one is the latter one, for the record.
[16:22:26] <fizzie> It's intended for when you use a loop to find something, and want to have a fallback behavior when the thing you wanted wasn't found.
[16:22:29] <nomagno> DPA: Good question. You can literally do the same thing python does by setting a variable every time there is a break statement, so it doesn't make that much sense
[16:22:52] <fizzie> Well, you need a variable. And then you need an extra block to scope that variable, otherwise it stays in scope longer than needed.
[16:23:11] <fizzie> (Okay, that scope thing isn't really relevant for Python, what with its function scopes.)
[16:24:20] <fizzie> The "you can do the same thing" argument doesn't really make sense as a binary thing. Why do you need a for loop anyway? You can do the same with labels + `if` and `goto` statements.
[16:24:50] <nomagno> I know this isn't specifically C related, but can anyone recommend a memory-safe with similar design principles? Most I have found are nice but... just not C, a language full of love that has a syntax you can learn in an hour
[16:27:36] *** Quits: V-T60 (~v@91.203.24.166) (Ping timeout: 245 seconds)
[16:27:57] *** Joins: proneon267 (~proneon26@2409:4062:4e0e:3abd:5aa1:1bfd:937a:9183)
[16:27:58] <omegatron> maybe the new player on the field? Crystal
[16:28:08] *** Parts: proneon267 (~proneon26@2409:4062:4e0e:3abd:5aa1:1bfd:937a:9183) ()
[16:28:52] <omegatron> https://crystal-lang.org/
[16:30:33] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:30:42] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[16:31:23] <nomagno> OOOH! That is SO NICE!
[16:31:25] <krux02> nomagno: there is zig, nim, rust, and maybe GO
[16:31:31] *** Joins: llh (~llh@user/llh)
[16:31:45] <nomagno> A proper spec, a simple syntax, a nice reference, an LLVM implementation...
[16:32:06] <DPA> The examples seam to mix function(args) and function args
[16:32:52] <nomagno> krux02: Nim and Rust are not my thing, Golang... I have my reasons, and Zig is trying to be a jack of all trades, but needs to mature a lot to get remotely close for not
[16:33:01] <nomagno> s/for not/for now/
[16:33:17] <krux02> but I thik zig is weird, nim has many bugs and a specification that you can barely call a specification, rust is too complicated, and go has forced garbage collection
[16:33:19] <nomagno> Crystal seems promising for playing around though
[16:34:18] <omegatron> would like to hear your opinion/report in a week  =D
[16:34:26] <DPA> zig seamed kind of nice. But they removed header files. I do want API separation.
[16:35:04] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[16:35:38] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:35:53] <DPA> And I don't like how things are built. zig cc, oh no...
[16:36:41] <nomagno> Excluding the C bindings (which are obviously not trivial to implement), Crystal seems very worthy of praise for now!
[16:37:17] <clarity> I like zig cc
[16:37:47] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[16:38:11] <DPA> I like to ask, does one build a project happening to contain X, or does one build an X project. Rust and zig failed for me on this front.
[16:38:13] *** Joins: AmR (~AmREiSa@156.199.244.83)
[16:39:05] <krux02> nomagno: C bindings are something every language has for some reason. But there is a range of quality here. Go for example allows you to interact with C without wrappers. But having wrappers is generally still done.
[16:40:03] <nomagno> DPA: Are you talking about X as in, a random dependency, or as in an X11 protocol server?
[16:40:24] <markand> To compile Crystal, you need Crystal :).
[16:40:29] <markand> ._.
[16:40:46] <markand> yet another chicken and egg problem
[16:41:15] *** Quits: meator (~meator@user/meator) (Ping timeout: 260 seconds)
[16:41:35] <nomagno> markand: Eh, self-hosting compilers are nice, you just need to cross-compile them for a new platform and that's it
[16:42:03] <markand> yes and on my musl aarch64 there are no prebuilt binaries
[16:42:11] <DPA> X, as in a placeholder for a language name.
[16:42:15] <nomagno> Just don't go to a forest, open up your old 386BSD laptop, establish a satellite connection and expect to have Crystal support (:
[16:43:21] <nomagno> DPA: Yeah Rust and Zig both definitely just don't work as spare files. They have to be the 'highest level wrapper', else it's a pain
[16:43:30] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[16:43:33] *** Joins: not_a_robot[m] (~notarobot@2001:470:69fc:105::dd37)
[16:44:34] *** Quits: NovumDXW (~NovumDXW@183.12.239.113) (Quit: Leaving)
[16:46:30] *** Joins: magla (~gelignite@55d4747b.access.ecotel.net)
[16:47:09] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:2111:1b2c:6ebe:efdf)
[16:47:09] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:2111:1b2c:6ebe:efdf) (Changing host)
[16:47:09] *** Joins: skapata (~Skapata@user/skapata)
[16:47:57] <markand> oh crystal has a garbage collector, next.
[16:49:04] <not_a_robot[m]> heya, I'm new to C and programming in general. The book I'm learning C from has several exercises at the end of every chapter, and one of them is to find the largest and smallest of a group of 4 numbers. I'm meant to use as few `if` statements as possible, and apparently only 4 is sufficient, but  i can't really think of how to get it under 8 (without having a ridiculous number of comparisons in the brackets of the `if` statement). Here's what
[16:49:04] <not_a_robot[m]> I got: https://bpa.st/KQ4A . can anyone give me a hint or something as to how to get it to 4 `if` statements? 
[16:49:48] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[16:50:08] <nomagno> markand: You can disable it with a flag (:
[16:50:11] <markand> using an array would simplify
[16:50:21] <markand> nomagno, according to the FAQ it seems not
[16:51:05] <not_a_robot[m]> markand: haven't learnt how to use arrays yet, so I'm not meant to use them in this exercise.
[16:51:08] <sham1> not_a_robot[m]: you could use the fact that "less-than" is a transitive property
[16:51:10] <dave0> not_a_robot[m]: instead of only comparing the i's, you could compare an i to largest
[16:51:36] <not_a_robot[m]> sham1: wdym transitive ?
[16:51:53] <sham1> If a < b and b < c, then a < c
[16:51:54] <nomagno> markand: I can not find any reference to garbage collection in the FAQ
[16:52:11] <dave0> not_a_robot[m]: for example if i1 is greater than the current largest number, then the new largest number would be i1
[16:52:23] <dave0> not_a_robot[m]: then for i2
[16:52:36] <not_a_robot[m]> dave0: oh ye, I'll do that, and see what i come up with
[16:53:52] <not_a_robot[m]> sham1: oh yes, ofc, that would make things much shorter
[16:54:00] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:54:03] <not_a_robot[m]> damn i feel stupid for not thinking of that
[16:54:13] <sham1> In fact, with 4 integers you can get down to three comparisons if I can reason about it properly
[16:54:46] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[16:55:00] <dave0> that's heading towards sorting the numbers, which is a red herring
[16:55:18] *** Joins: Macuser (~Macuser@216.30.159.201)
[16:55:27] <not_a_robot[m]> wdym a 'red herring'?
[16:55:45] <dave0> it's the wrong approach
[16:55:45] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[16:56:07] <dave0> while you CAN sort the numbers and simply pick the first number, you don't need to sort the numbers to find the largest
[16:56:31] <not_a_robot[m]> then how do you do that without sorting?
[16:57:13] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:57:24] <sham1> Oh, I thought it was only about finding the smallest number, in which case you can only do with n-1 comparisons for n numbers
[16:57:50] <dave0> not_a_robot[m]: run a loop over the numbers and keep track of the largest as you go
[16:57:58] <dave0> that's not the same as sorting it
[16:58:12] <omegatron> or you could use an abomination of the ternary operator, like in https://bpa.st/LWCA
[16:58:14] <not_a_robot[m]> dave0: haven't learnt about loops yet, lol
[16:58:20] <DPA> https://bpa.st/M2TA
[16:58:34] <sham1> And besides, doesn't have arrays either in which case traversing over the numbers would get tricky
[16:58:44] <sham1> So a sorting network seems like the way to go
[16:58:56] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:59:00] <not_a_robot[m]> omegatron: hurts my head too much, wtf is that
[16:59:23] <omegatron> https://en.wikipedia.org/wiki/%3F:#C
[16:59:32] <sham1> Abuse
[16:59:38] <not_a_robot[m]> i learnt about the ternary operator, but i never thought i'd use it due to it's bad readability
[16:59:42] <dave0> largest = i1; if(i2 > largest) largest = i2; if(i3 > largest) largest = i3; if(i4 > largest) largest = i4;
[16:59:45] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[16:59:49] *** Joins: humky (~humky@user/humky)
[16:59:56] <omegatron> yeah, that's why I called it an "abomination"   =D
[17:00:00] <sham1> dave0: also needs to find the smallest
[17:00:05] <sham1> Both the largest and the smallest
[17:00:22] <dave0> swap "largest" to "smallest" and change ">" to "<"
[17:00:34] <Bou> then you have 6 comparisons
[17:00:35] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[17:00:43] <not_a_robot[m]> exactly
[17:01:09] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b015:b89:20c3:d408:a0dd) (Quit: Leaving)
[17:01:14] <sham1> And the ideal is 4 conditionals, which is what leads you to a sorting network
[17:01:52] <not_a_robot[m]> what's a sorting network?
[17:01:55] *** Joins: Sos (~Sos@d42-155.icpnet.pl)
[17:02:08] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:02:14] <sham1> https://en.wikipedia.org/wiki/Sorting_network
[17:03:22] <sham1> Although it seems that the optimal for four values is actually 5
[17:03:29] <sham1> 5 swaps
[17:04:14] <not_a_robot[m]> looks like this book wants me to rip my hair out instead of actually program, what the hell
[17:04:37] <not_a_robot[m]> why tell a beginner to aim for 4 statements if the optimal is 5
[17:04:56] <dave0> it said if's not comparisons
[17:05:00] <not_a_robot[m]> or if the most straightforward method requires 6 if statements, too
[17:05:52] <sham1> I think you can actually get to 4 since you don't actually care about the middle two number being sorted, you only care that the i1 is the smallest and i4 is the largest\
[17:06:00] <Bou> https://bpa.st/3ZDA
[17:07:20] <Bou> pairwise sort (i1,i2) and (i3,i4), then the lowest number is min(i1,i3) and the highest is max(i2,i4)
[17:08:34] <sham1> That's actually true yeah
[17:11:22] <nomagno> markand: Can confirm there is an implementation-specific call "GC.disable()". Garbage collection is not part of the spe
[17:11:41] <not_a_robot[m]> ok that code makes sense... but i had to format it myself so i can understand it lol. hmm would the `else` statements count as `if` statements or as part of the `if` statements?
[17:12:05] <not_a_robot[m]> have to say that was a pretty smart and straightforward way imo, thanks!
[17:13:12] *** Quits: kadavul (~vazha@103.165.20.238) (Read error: Connection reset by peer)
[17:13:23] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-04de-ef7d-4fbd-a956.res6.spectrum.com)
[17:13:40] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[17:13:51] *** Joins: node1 (~node1@user/node1)
[17:13:59] <node1> Hi
[17:14:11] *** Joins: thing (~thing@user/thing)
[17:14:16] <not_a_robot[m]> hello
[17:16:09] <node1> What is  void( *a)(void *b) meant in C?
[17:16:57] <omegatron> 'a' is a function pointer, with parameter signature of 'void *'
[17:17:18] <Bou> ,english void( *a)(void *b)
[17:17:19] <candide> Bou: Declare `a` as a pointer to function taking `b` as pointer to void and returning void.
[17:18:58] <omegatron> you might want to write it as  "void (*a)( void * b )"  (note the first space) for slightly better readability
[17:20:06] <node1> omegatron Yes that's what i meant "void (*a)( void * b )"  , could you please helps me to understand what does it mean?
[17:21:04] <omegatron> I whip up some sample code .. give me two minutes ..
[17:22:12] <node1> okay and what does here meant `parameter signature`?
[17:23:56] *** Joins: subdelusional (~subdelusi@188.249.169.186)
[17:25:39] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:25:53] <Bou> two minutes are up! :P
[17:26:19] <omegatron> https://bpa.st/PNQA
[17:26:50] <omegatron> parameter signature or function signature is just the order and type of function parameters
[17:27:50] <omegatron> my sample code might not compile but should show the general idea ...
[17:28:32] <omegatron> yeah i know, it's missing a free() at the end of main_function()
[17:29:21] *** Quits: geeknix (~pi@2001:e68:5432:1a6b:1b32:1143:c7cd:1d98) (Quit: WeeChat 2.3)
[17:30:25] *** Quits: BSaboia (~bsaboia@177.37.198.218) (Remote host closed the connection)
[17:31:52] <omegatron> function pointers are usually used in the following scenario: you have more than one implementation of a certain work to do, put it into functions which all have the same return type and parameter signature and can then (at runtime) make a decision which of them to use, by simply storing them in an appropiate struct and call afterwards
[17:32:09] <omegatron> often used for object-oriented programming in C
[17:32:50] *** Joins: geeknix_ (~pi@2001:e68:5432:1a6b:1b32:1143:c7cd:1d98)
[17:35:21] *** geeknix_ is now known as geeknix
[17:35:54] <node1> omegatron okay thanks
[17:36:18] <Bou> next time please ask your question in one channel at a time though
[17:36:30] <omegatron> simple approach would be like:  https://bpa.st/PO5A
[17:37:14] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:9b0:5b09:e84d:e089)
[17:37:25] <omegatron> you can look at Apple's CoreFoundation framework for example, but there are plenty other software frameworks which do it the same/similar way
[17:37:44] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:9b0:5b09:e84d:e089) (Read error: Connection reset by peer)
[17:38:04] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:9b0:5b09:e84d:e089)
[17:38:27] <node1> okay thanks
[17:38:34] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[17:38:53] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[17:40:29] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[17:40:46] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[17:41:29] *** Quits: justHaunt (~justache@user/justache) (Read error: Connection reset by peer)
[17:41:49] *** Quits: uniquepointer (~uniquepoi@190.218.240.164) (Quit: Leaving)
[17:42:06] *** Joins: justHaunt (~justache@user/justache)
[17:44:10] *** Joins: pulse (~pulse@user/pulse)
[17:46:39] *** Joins: meator (~meator@user/meator)
[17:48:17] *** Quits: mven (~mven@ip70-173-103-41.lv.lv.cox.net) (Ping timeout: 244 seconds)
[17:48:45] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[17:49:25] *** Joins: kadavul (~vazha@103.165.20.238)
[17:49:35] *** Quits: dmaroo (~dhruv@2409:4070:2e1b:c65d:acb5:3c04:828:2b94) (Ping timeout: 264 seconds)
[17:50:46] <nomagno> omegatron: I am trying to implement something like that with "int(*func_add)( int param1, int param2 ); typedef struct {func_add addimp;} add;"
[17:51:04] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[17:51:15] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:b600:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[17:51:27] <nomagno> But I am getting an error "expected specified-qualifier-list before func_add"
[17:53:50] *** Joins: dreamcat4 (uid157427@id-157427.hampstead.irccloud.com)
[17:54:07] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:54:30] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com) (Read error: Connection reset by peer)
[17:57:33] <nomagno> (What language even is this? Some minor syntax in your example is definitely not C)
[17:57:51] <ioxzev1z> Did you give link to code?
[18:00:28] <fizzie> `func_add` is a pointer object, not a type.
[18:00:37] <fizzie> Did you mean to do a `typedef` instead? 
[18:01:17] <fizzie> Also obligatory recommendation to typedef the *function* type rather than the pointer type, and keep the `*` at the object declaration, but that's an entirely orthogonal issue.
[18:01:33] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[18:02:10] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[18:03:01] <omegatron> sorry, I was afk ... yep, I missed the "typedef" before function pointer declarations (it was a quick and dirty job)
[18:03:52] <omegatron> only to demonstrate the concept (but I added the hint, that it might not compile as it is)
[18:05:15] <fizzie> Yeah, I'd go with `typedef int foo_func(int a, int b); /* ... */ struct { foo_func *foo_impl; /* ... */ } api;` but I admit for some reason or other, almost nobody else except #c regulars seem to go for that, out in the wild it's always a typedef of the pointer type.
[18:06:09] *** Joins: V-T60 (~v@91.203.24.166)
[18:06:40] *** Joins: quartz (~quartz@user/quartz)
[18:07:16] <omegatron> I use always typedef too, just forgot it this time  =D  (right now i'm in a "php mode" mindset, due to my current work)
[18:07:17] *** Quits: magla (~gelignite@55d4747b.access.ecotel.net) (Quit: Stay safe!)
[18:13:11] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com)
[18:14:22] <nomagno> Yup, fully working example: https://termbin.com/dz9q
[18:15:28] <omegatron> though, I would put the typedefs before some actual implementation
[18:15:59] <sham1> fizzie: TIL that's possible
[18:16:06] <sham1> And that explains why it's not done
[18:16:48] <nomagno> The syntax is fairly painless once you figure out HOW to do it, actually!
[18:17:13] *** Joins: dmaroo (~dhruv@2409:4070:2e1b:c65d:acb5:3c04:828:2b94)
[18:17:21] *** Joins: chomwitt (~chomwitt@ppp-94-68-249-8.home.otenet.gr)
[18:17:59] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[18:18:37] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[18:19:21] <nomagno> I also find making the struct a pointer complicates things unnecessarily with what allocation and dereference.
[18:20:34] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[18:22:58] <DPA> I sometimes put the implementations into a liked list, built up using __attribute__((used,constructor)) at startup. That way, functionality can be added / removed just by linking alone.
[18:23:56] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[18:24:10] <nomagno> This seems very useful for a hotswappable physics engine for my terminal game, actually
[18:24:57] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[18:25:53] *** Joins: magic_ninja_work (~sparkie1@4.4.16.52)
[18:28:53] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you later)
[18:31:04] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[18:31:39] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[18:32:42] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:33:35] *** Joins: Psybur (~Psybur@mobile-166-170-34-121.mycingular.net)
[18:34:21] *** Joins: Guest46 (~Guest46@pool-72-82-129-201.cmdnnj.fios.verizon.net)
[18:34:33] *** Quits: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown) (Quit: Connection closed)
[18:35:35] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Ping timeout: 260 seconds)
[18:36:32] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[18:36:39] <fizzie> One nice thing about typedef'ing the function type is, you can use it to provide a declaration of the function, and that way both say explicitly the function matches that specific typedef, and have the compiler check it too.
[18:36:41] <fizzie> As in, `typedef int binop(int a, int b); /* ... */ binop add; int add(int a, int b) { return a + b; }`.
[18:36:43] <fizzie> Of course you'll likely get the compile-time type-check *eventually*, when trying to use `add` in a context where an `binop *` is expected, but that way it's right there next to the definition, and also the error message will point at the right place.
[18:37:32] *** Joins: Tempesta (~Tempesta@user/tempesta)
[18:39:13] *** Quits: cartman (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[18:39:20] <tk> hmm, this is a good one, I once tried to use a typedef to actually define the function but obviously it didn't work
[18:40:05] <omegatron> yeah, the type check is the main reason, why I use it often
[18:42:32] *** Joins: Viewday (~Viewday@user/viewday)
[18:42:56] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[18:44:59] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[18:45:41] *** Quits: Guest46 (~Guest46@pool-72-82-129-201.cmdnnj.fios.verizon.net) (Quit: Guest46)
[18:46:23] *** Joins: kayprish (~kayprish@46.240.130.158)
[18:46:34] *** Quits: subdelusional (~subdelusi@188.249.169.186) (Quit: leaving)
[18:47:47] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 260 seconds)
[18:48:32] *** Joins: karakedi (~eAC53C340@user/karakedi)
[18:49:14] *** Joins: kuber (~kuber@97-126-3-32.tukw.qwest.net)
[18:50:49] *** Joins: davidlowryduda (~davidlowr@73.61.9.42)
[18:50:55] <DPA> https://bpa.st/6B4Q
[18:52:54] *** Quits: kayprish (~kayprish@46.240.130.158) (Quit: leaving)
[18:53:05] *** Joins: kayprish (~kayprish@46.240.130.158)
[18:53:37] *** davidlowryduda is now known as dld
[18:59:35] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[19:00:30] *** Joins: kayprish_ (~kayprish@46.240.130.158)
[19:00:43] *** Quits: kayprish_ (~kayprish@46.240.130.158) (Client Quit)
[19:00:47] *** Quits: kayprish (~kayprish@46.240.130.158) (Quit: leaving)
[19:00:57] *** Joins: kayprish (~kayprish@46.240.130.158)
[19:02:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 264 seconds)
[19:02:27] <ioxzev1z> DPA, ( ._.)
[19:02:32] *** Joins: SamuelMa1ks (~samuel@user/samuelmarks)
[19:05:17] *** Quits: KevinX (~KevinX@185.153.176.133) (Ping timeout: 244 seconds)
[19:05:56] <DPA> It's really nice. You can leave out any of add.c and sub.c, and it'll still link. You just have to be really careful with linking / not to forget anything. And use -Wl,--whole-archive if you want to put it in a .a
[19:07:18] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[19:08:08] *** Quits: kadavul (~vazha@103.165.20.238) (Read error: Connection reset by peer)
[19:08:36] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[19:08:50] *** Quits: EtherNet (~ethernet@user/ethernet) (Ping timeout: 260 seconds)
[19:09:11] <DPA> Also, this version can't be split over multiple dynamic libraries because of the __attribute__((weak)). But without that, that should also work, there would just have to be at least 1 list entry then.
[19:13:49] <DPA> Also, don't use LTO. I don't think any of my programs survive LTO.
[19:13:57] <omegatron> =)
[19:14:49] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[19:15:50] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 260 seconds)
[19:19:03] *** Quits: magic_ninja_work (~sparkie1@4.4.16.52) (Ping timeout: 260 seconds)
[19:20:09] *** Quits: juliopcrj (~juliopcrj@177.44.227.40) (Quit: Leaving)
[19:21:27] *** Joins: EtherNet (~ethernet@user/ethernet)
[19:21:55] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a08e:2845:2bb:1c33)
[19:21:55] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a08e:2845:2bb:1c33) (Changing host)
[19:21:55] *** Joins: skapata (~Skapata@user/skapata)
[19:25:26] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[19:25:56] *** Quits: dmaroo (~dhruv@2409:4070:2e1b:c65d:acb5:3c04:828:2b94) (Ping timeout: 245 seconds)
[19:26:11] *** Joins: dmaroo (~dhruv@2409:4070:2b98:1861:a501:f732:2cc8:100)
[19:27:41] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 265 seconds)
[19:30:07] *** Quits: SolomonGumball[m (~solomon-g@2001:470:69fc:105::2211) (Quit: You have been kicked for being idle)
[19:30:08] *** Quits: retr0taku[m] (~retr0taku@2001:470:69fc:105::f576) (Quit: You have been kicked for being idle)
[19:31:09] *** Joins: Arimja (~Arimja@45-30-22-133.lightspeed.nsvltn.sbcglobal.net)
[19:31:09] *** Quits: Arimja (~Arimja@45-30-22-133.lightspeed.nsvltn.sbcglobal.net) (Changing host)
[19:31:09] *** Joins: Arimja (~Arimja@user/arimja)
[19:32:08] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[19:34:27] *** Quits: X-Scale (~ARM@31.22.144.14) (Ping timeout: 260 seconds)
[19:35:05] *** X-Scale` is now known as X-Scale
[19:35:51] *** Joins: Famine_ (~Famine@user/famine)
[19:38:05] *** Joins: kadavul (~vazha@103.165.20.238)
[19:39:07] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Ping timeout: 260 seconds)
[19:39:23] *** Quits: Famine- (~Famine@user/famine) (Ping timeout: 264 seconds)
[19:45:11] *** Joins: wuldor (~supermumm@90.247.230.150)
[19:46:21] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[19:46:22] *** Quits: alch (~alch@151.68.184.74) (Read error: Connection reset by peer)
[19:46:27] *** Joins: blindguard (~blindguar@aftr-37-201-193-251.unity-media.net)
[19:46:32] *** Joins: magic_ninja_work (~sparkie1@4.4.16.52)
[19:47:16] <wuldor> Say I have a function that takes an array: void f(int *a[]){//do something with a }, then I want to call it with an array with a specific size, like: int a[6]; f(a); how do I do this correctly?
[19:47:41] <wuldor> s/f(a)/f(&a)
[19:48:18] <trenka> ,english int *a[10]
[19:48:19] <candide> trenka: Declare `a` as an array of 10 elements of pointer to i​nt.
[19:48:27] *** Quits: Psybur (~Psybur@mobile-166-170-34-121.mycingular.net) (Ping timeout: 260 seconds)
[19:51:38] *** Joins: alch (~alch@151.68.192.15)
[19:52:00] <constxo> wuldor: what does f do?
[19:53:03] <fizzie> `void f(int *a[])` is a function that takes a pointer to a pointer, not an array.
[19:53:47] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 265 seconds)
[19:54:02] <fizzie> (It's entirely equivalent to `void f(int **a)`.)
[19:54:16] *** Quits: SamuelMa1ks (~samuel@user/samuelmarks) (Ping timeout: 265 seconds)
[19:54:40] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[19:54:50] *** Joins: SamuelMa1ks (~samuel@user/samuelmarks)
[19:54:58] <nitrix> Shouldn't that be `void f(int (*a)[])`?
[19:55:52] <LiaoTao> Round and round the parsing spiral turns
[19:56:17] <wuldor> I just want to pass the address of an array to a function and do things with it.
[19:56:28] <constxo> ,cc #define COUNTOF(A) (sizeof (A) / sizeof ((A)[0]))\n void f(int (*a)[static 10]) { int sum = 0; for (int i = 0; i < 10; i < COUNTOF(*a); ++i) sum += a[0][i]; print(sum); } int a[10] = { 4, 5, 1, 2, 9 }; f(&a);
[19:56:29] <candide> constxo:  error: static or type qualifiers in non-parameter array declarator
[19:56:38] *** Joins: carlavilla (~carlavill@2a0c:5a84:3607:2f00:221:6bff:fe3b:cee4)
[19:56:51] <constxo> huh
[19:56:55] <wuldor> But the function cannot know how big the array will be, not really sure how to in C.
[19:56:58] <omegatron> if this is about the array size, you have three common options to give a function the knowledge what length your array has: either your array can contain a termination value or you supply the length in an additional parameter of the function or you put the array into a struct, which has also an attribute for the length and your function receives such a struct
[19:56:59] <fizzie> `void f(int (*a)[])` would be a function that takes a pointer to an array of unspecified size, usually not a particularly useful concept.
[19:57:29] <constxo> wuldor: why do you want to pass it as a 'pointer to array' and not 'pointer to element'
[19:57:50] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:58:26] <wuldor> constxo: I need to iterate through the array, is that a way to do it?
[19:58:29] <nitrix> You usually pass a pointer to the first element of the array and the element count as a separate argument.
[19:59:16] <wuldor> if I remember correctly, you can move through an array via the first element pointer yes?
[19:59:23] <constxo> yes
[19:59:35] <wuldor> Thanks, what is the syntax?
[19:59:35] *** Quits: BGL (fifty@75-149-171-58-Washington.hfc.comcastbusiness.net) (Ping timeout: 265 seconds)
[20:00:03] <constxo> void f(int *a, size_t n) { for (size_t i = 0; i < n; ++i) { /* do something with a[i] */ }
[20:00:12] <constxo> int a[10] = { ... }; f(a, 10);
[20:00:32] <wuldor> oh, got it, thanks.
[20:00:33] <constxo> oops i forgot a brace to end the function body
[20:00:36] <constxo> but you get the idea
[20:00:45] *** Joins: hentai (~hentai@2a01:e0a:a5c:a070:71a9:5f1b:43b8:ff5f)
[20:00:45] *** Quits: hentai (~hentai@2a01:e0a:a5c:a070:71a9:5f1b:43b8:ff5f) (Changing host)
[20:00:45] *** Joins: hentai (~hentai@user/hentai)
[20:01:12] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 258 seconds)
[20:01:31] *** Quits: SamuelMa1ks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[20:01:37] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[20:03:55] *** Quits: hentai (~hentai@user/hentai) (Max SendQ exceeded)
[20:04:41] *** Joins: hentai (~hentai@2a01:e0a:a5c:a070:71a9:5f1b:43b8:ff5f)
[20:04:41] *** Quits: hentai (~hentai@2a01:e0a:a5c:a070:71a9:5f1b:43b8:ff5f) (Changing host)
[20:04:41] *** Joins: hentai (~hentai@user/hentai)
[20:08:45] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:09:20] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[20:10:42] *** Quits: dld (~davidlowr@73.61.9.42) (Ping timeout: 265 seconds)
[20:10:44] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:10:53] *** Joins: vicfred (~vicfred@user/vicfred)
[20:12:28] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[20:12:35] *** Joins: dld (~dld@2601:197:600:1210:d10e:482c:eb89:99b9)
[20:13:18] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[20:14:22] *** Joins: mahmutov (~mahmutov@37.155.35.85)
[20:14:31] *** Quits: cursey (~cursey@user/cursey) (Ping timeout: 244 seconds)
[20:14:44] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[20:17:25] *** Joins: fossforus (~stan@99-173-128-32.lightspeed.rlghnc.sbcglobal.net)
[20:18:51] *** Joins: cursey (~cursey@user/cursey)
[20:24:07] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Quit: Connection closed)
[20:26:45] *** Quits: hexteex (~hexteex@gateway/tor-sasl/hexteex) (Quit: Leaving)
[20:27:59] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 264 seconds)
[20:29:57] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:31:58] *** Joins: khrbt (~znc@user/khrbt)
[20:35:49] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[20:36:04] *** Joins: rgrinberg (~textual@ip11-246-50-179.ct.co.cr)
[20:37:22] *** Joins: luizfrds (~Luiz@152.250.243.147)
[20:41:55] *** Joins: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi)
[20:43:54] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:43:56] *** Joins: SamuelMa1ks (~samuel@user/samuelmarks)
[20:44:50] *** Joins: jokleinn (~jokleinn@user/jokleinn)
[20:49:49] *** Joins: strajder (~strajder@user/strajder)
[20:50:56] *** Quits: jokleinn (~jokleinn@user/jokleinn) (Quit: WeeChat 3.3)
[20:53:26] *** Quits: Arthuria (~Arthuria@user/arthuria) (Ping timeout: 245 seconds)
[20:56:54] *** Quits: uso (~matthias@ows-148-253-67-208.eu-west-2.compute.outscale.com) (Ping timeout: 260 seconds)
[20:59:26] *** Joins: magla (~gelignite@55d4747b.access.ecotel.net)
[20:59:32] *** Joins: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net)
[21:00:15] *** Quits: magic_ninja_work (~sparkie1@4.4.16.52) (Ping timeout: 260 seconds)
[21:00:32] *** Quits: krux02 (~krux02@p200300e817076e001575326a031bb152.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:00:53] *** Quits: lionkor (~lionkor@200116b80fb518007285c2fffea63d72.dip.versatel-1u1.de) (Remote host closed the connection)
[21:01:16] *** Joins: lionkor (~lionkor@200116b80fb518006bb1b386965aceb8.dip.versatel-1u1.de)
[21:03:52] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 265 seconds)
[21:04:21] *** Quits: SamuelMa1ks (~samuel@user/samuelmarks) (Ping timeout: 265 seconds)
[21:04:52] <_73> I am looking at a function that returns void, however I don't see how this function could have a purpose if it didn't return anything. The function initializes a `sigaction` struct but if it doesn't return the struct so isn't it just creating it and throwing it away? http://dpaste.com/3EPS59AZX
[21:07:35] *** Quits: Arimja (~Arimja@user/arimja) (Ping timeout: 264 seconds)
[21:08:12] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com) (Read error: Connection reset by peer)
[21:10:19] *** Joins: extern (~archer@80.246.133.172)
[21:10:51] *** Joins: uso (~matthias@ows-148-253-67-208.eu-west-2.compute.outscale.com)
[21:11:11] <trenka> _73: it calls sigaction() to set up the handler
[21:13:35] <_73> so this function should be called when there is some sigaction table in scope that sigaction() will implicitly update?
[21:16:10] <omegatron> do you know what sigaction() does ?
[21:16:25] <_73> just found the manual
[21:16:54] <_73> now I see that this is kernel level behavior
[21:17:09] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[21:18:42] <omegatron> the struct is required to give sigaction() a valid parameter .. sigaction() itself will copy the contained data (but not the struct itself), therefore there is no further need after that in the calling function
[21:20:02] <_73> I understand now thanks
[21:21:50] *** Joins: flyingground (~flyinggro@2a01:117f:409:d600:c9b7:d4e2:7812:4802)
[21:21:57] *** Quits: extern (~archer@80.246.133.172) (Quit: tah tah H.)
[21:22:12] *** Joins: SamuelMa1ks (~samuel@user/samuelmarks)
[21:23:00] *** Joins: h4zel (~hazel@user/h4zel)
[21:26:00] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com)
[21:27:57] *** Quits: dmaroo (~dhruv@2409:4070:2b98:1861:a501:f732:2cc8:100) (Quit: Konversation terminated!)
[21:29:52] *** Joins: V-T60 (~v@91.203.24.166)
[21:35:54] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:36:03] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[21:38:41] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[21:40:24] *** Joins: Atque (~Atque@user/atque)
[21:40:52] *** Joins: meator (~meator@user/meator)
[21:42:20] *** Joins: haise01 (~haise01@user/haise01)
[21:42:23] *** Joins: LTCD (~LTCD@2a02:c7f:dd1c:b600:11f:b26e:1b79:1be3)
[21:43:33] <LTCD> Hello, I am looking to develop games professionally (even though I am an indie developer) in C, just for the computer market. Could someone recommend a framework/library/whatever I should use? It seems most are using C++ :-(/
[21:44:19] <omegatron> SDL might be useful
[21:44:20] *** Joins: ravan (~ravan@user/ravan)
[21:44:27] <LTCD> I found a Wikipedia page, however the suggestions were for libraries that have not been used in games since 1990.
[21:44:55] <omegatron> https://en.wikipedia.org/wiki/Simple_DirectMedia_Layer#Video_game_examples_using_SDL
[21:44:55] <LTCD> omegatron Strange, I have heard about SDL, but it was not included on my list: https://en.wikipedia.org/wiki/List_of_game_engines
[21:44:57] *** Quits: paulo (paulo@user/paulo/x-9032687) (Remote host closed the connection)
[21:44:57] *** Quits: sandman13 (sandman13@sandman13.jujube.ircnow.org) (Remote host closed the connection)
[21:45:13] <omegatron> what kind of game(s) are we talking about?
[21:46:24] <LTCD> 3D first person shooters, with role playing elements, I am thinking of a modem punk style genre.
[21:46:38] <nomagno> Can anyone provide resources on how to do... Sampling? I don't know, what is the mathematical/technical word for that thing where you 'throw darts' at an object to figure out its position and shape to the asked for resolution?
[21:48:05] *** Joins: jayi (~jayi@2603-8001-a301-2f00-0000-0000-0000-000e.res6.spectrum.com)
[21:48:08] *** Joins: Akuli (~Akuli@213.216.210.136)
[21:48:15] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[21:48:29] *** Joins: humky (~humky@user/humky)
[21:49:11] <LTCD> omegatron *
[21:50:14] <johnjay> i get arm64-apple-darwin20 when i type that
[21:52:55] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[21:54:48] <omegatron> there are also Blender and Godot with some capabilities for game creation (or at least provisional data for your game)
[21:55:24] <omegatron> though .. I don't know if Blender is made in C ..
[21:56:04] <omegatron> but Godot is (afaik) and it's source code could provide a base for a game, which also comes with content creation functionality for the user (in theory)
[21:56:18] *** Joins: lichform (~lichform@2601:85:8200:5a80:d962:72c0:6fa:956e)
[21:56:58] <LTCD> omegatron I am not fussed what it is coded in, so long as I can write my code in C.
[21:57:06] *** Quits: lichform (~lichform@2601:85:8200:5a80:d962:72c0:6fa:956e) (Client Quit)
[21:57:07] *** Quits: h4zel (~hazel@user/h4zel) (Quit: WeeChat 3.0.1)
[21:57:28] *** Joins: h4zel (~hazel@user/h4zel)
[21:58:31] *** Joins: lichform (~lichform@2601:85:8200:5a80:d962:72c0:6fa:956e)
[21:58:39] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[21:58:41] <nomagno> LTCD: Godot has a C#, GodotScript, VScript, C, and C++ interface. Source: https://docs.godotengine.org/en/latest/getting_started/step_by_step/scripting_languages.html#available-scripting-languages
[21:58:49] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:00:42] <nomagno> You're going to be pressing a 'run' button, and that button is going to be recompiling the logic and executing it Godot's custom ABI (GDNative)
[22:00:50] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[22:01:42] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[22:01:58] <nomagno> You can think of it as your Operating System being Godot
[22:03:23] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[22:04:01] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-04de-ef7d-4fbd-a956.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:04:59] <LTCD> nomagno Makes sense. But, do they have industry standard games? Obviously, I will need to pay a graphics person.
[22:06:01] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Client Quit)
[22:07:03] <omegatron> well .. do you want to develop your games all yourself? including composing music, graphics, etc. ?  (I know, today one can buy or copy such stuff from various websites - but finding the matching resources is also a time-consuming task)
[22:07:12] <omegatron> or do you "only" want to do the programming stuff?
[22:07:33] *** Joins: paulo (paulo@user/paulo/x-9032687)
[22:07:42] *** Joins: sandman13 (sandman13@sandman13.jujube.ircnow.org)
[22:08:03] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[22:08:11] *** Joins: tech_exorcist_ (txrcst@user/tech-exorcist/x-0447479)
[22:08:17] <nomagno> I can do anything BUT the graphics. This is exactly why I am developing a cool state-of-the-art physics engine, and plugging it into a terminal game :P
[22:08:28] *** Joins: Atque (~Atque@user/atque)
[22:08:28] *** Joins: Arimja (~Arimja@45-30-22-133.lightspeed.nsvltn.sbcglobal.net)
[22:08:29] *** Quits: Arimja (~Arimja@45-30-22-133.lightspeed.nsvltn.sbcglobal.net) (Changing host)
[22:08:29] *** Joins: Arimja (~Arimja@user/arimja)
[22:08:30] <LTCD> https://www.youtube.com/watch?v=IPCv6F-IgXU
[22:08:30] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:08:31] <candide> Title of LTCD's link: This game engine will disrupt the industry... introducing the Godot Engine - YouTube
[22:08:58] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[22:09:05] <LTCD> omegatron I will pay third parties to do music, voice, and graphics. I can handle story, coding, and promotional.
[22:09:51] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[22:11:08] <nomagno> 'disrupt the industry' is definitely an exaggeration. With what being FLOSS at least it makes my moral compass not explode, but it currently doesn't have any tangible advantages over Unity (though I will say it has THE ABSOLUTE BEST, most modular, most elegant architecture of any engine).
[22:11:46] <fbiagent> ladies, if I have a static variable I want defined at the bottom of the file, is it enough to do static int foo; at the top of the file so everything can use foo?
[22:11:59] <fbiagent> basically, how do I forward declare a static variable
[22:12:22] <nomagno> Example of what you can make with Godot: http://iteroni.com/watch?v=M1xzSrjKYhY
[22:13:28] <LTCD> nomagno What do you mean by the architecture part of your sentence?
[22:14:07] <nomagno> LTCD: https://en.wikipedia.org/wiki/Software_architecture
[22:14:30] <LTCD> nomagno I thought you were referring to the code.
[22:15:21] <nomagno> I mean, of course I am referring to the code. Software architecture refers almost exclusively to how the code is structured
[22:17:50] *** Joins: Lorra (~lorenzo@2001:a61:b2d:bb01:94ca:a8ff:cada:1f3)
[22:18:36] *** Quits: rgrinberg (~textual@ip11-246-50-179.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:19:18] <LTCD> Yeah!
[22:19:57] <Lorra> hi everybody, I am building a static C library on Linux which calls OpenGL functions. Later I want link this library in another program. When I link my library, I get this:
[22:19:57] *** Quits: Arimja (~Arimja@user/arimja) (Quit: leaving)
[22:20:01] <Lorra> /usr/bin/ld: ./lib/libtraces_render.a(DoubleFramebuffer.cpp.o): undefined reference to symbol 'glGenTextures'
[22:20:03] <Lorra> /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/libGL.so: error adding symbols: DSO missing from command line
[22:20:28] <Lorra> does anybody know if and how how this could be solved? Thank you very much!
[22:20:40] *** Joins: Arimja (~Arimja@45-30-22-133.lightspeed.nsvltn.sbcglobal.net)
[22:20:40] *** Quits: Arimja (~Arimja@45-30-22-133.lightspeed.nsvltn.sbcglobal.net) (Changing host)
[22:20:40] *** Joins: Arimja (~Arimja@user/arimja)
[22:21:14] <Lorra> I am building with: gcc -o test $(pkg-config --cflags glfw3) -I ./lib main.c $(pkg-config --libs --static glew glfw3) -L./lib -ltraces_render
[22:24:03] <omegatron> why a static library ?
[22:24:06] *** Joins: ravan (~ravan@42.201.198.151)
[22:24:06] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[22:24:06] *** Joins: ravan (~ravan@user/ravan)
[22:24:29] <omegatron> (just asking)
[22:25:22] <Lorra> @omegatron because I like more when a binary can be copied and it works, without moving dynamic libraries alongside
[22:25:52] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:26:05] *** Quits: ravan (~ravan@user/ravan) (Client Quit)
[22:26:22] *** Joins: ravan (~ravan@user/ravan)
[22:27:12] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[22:27:30] *** Joins: ravan (~ravan@42.201.198.151)
[22:27:31] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[22:27:31] *** Joins: ravan (~ravan@user/ravan)
[22:28:39] <omegatron> i guess you need to link also with libGL for the 'glGenTexture' symbol
[22:29:40] <Lorra> @omegatron I get the same
[22:29:43] <Lorra> gcc -o test $(pkg-config --cflags glfw3) -I ./lib main.c -lGL $(pkg-config --libs --static glew glfw3) -L./lib -ltraces_render
[22:29:44] <Lorra> /usr/bin/ld: ./lib/libtraces_render.a(DoubleFramebuffer.cpp.o): undefined reference to symbol 'glGenTextures'
[22:29:45] <Lorra> /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/libGL.so: error adding symbols: DSO missing from command line
[22:30:17] *** Quits: ravan (~ravan@user/ravan) (Client Quit)
[22:30:56] *** Joins: ravan (~ravan@user/ravan)
[22:31:02] <omegatron> I don't know, what $(pkg-config ...) yields on your system, but you may need to use a flag such as  -L/lib or -L/usr/lib  so the compiler/linker can find the libraries which reside there
[22:32:07] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[22:32:16] <omegatron> "undefined reference" means your code uses a symbol (in most cases a function) from somewhere else .. in your case a system library .. your compiler needs to be told, which library that is
[22:32:44] <omegatron> strings /lib/x86_64-linux-gnu/libGL.so.1 | grep glGenTextures    tells me on my system, that this would be the path to the Gl library
[22:33:01] <omegatron> or at least would also reference it
[22:33:08] *** Joins: extern (~archer@80.246.133.172)
[22:33:32] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:33:37] <omegatron> (but in this case it should be the matching library) ( I keep forgetting the linux command to show the symbols in a library =D  )
[22:34:28] <omegatron> ah, it was  'nm'   (duh!)
[22:35:27] *** Quits: LTCD (~LTCD@2a02:c7f:dd1c:b600:11f:b26e:1b79:1be3) (Quit: Client closed)
[22:35:39] *** Joins: brad_mssw|mac (~bhouse@2601:344:4100:b490:b555:3d8e:618:c309)
[22:35:59] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 260 seconds)
[22:38:18] *** Joins: Nspace (~Nspace@user/nspace)
[22:38:47] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Ping timeout: 264 seconds)
[22:39:01] <omegatron> I assume the pkg-config sub-commands add such a -L option to your link command, but as long you don't paste here the expanded command, I can only guess
[22:39:18] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[22:39:36] *** Joins: humky (~humky@user/humky)
[22:40:36] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Quit: mikoto-chan)
[22:41:46] *** Quits: Inline (~Inline@2a02:908:1252:7a80:aa94:ac75:d11d:97b0) (Ping timeout: 245 seconds)
[22:45:01] *** Joins: ravan (~ravan@42.201.198.151)
[22:45:02] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[22:45:02] *** Joins: ravan (~ravan@user/ravan)
[22:45:07] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:45] <Lorra> @omegatron pkg-config --cflags glfw3 gives:
[22:45:47] <Lorra> -I/usr/local/include
[22:46:04] <Lorra> pkg-config --libs --static glew glfw3 gives:
[22:46:13] <Lorra> -L/usr/local/lib -lGLEW -lGLU -lm -lGL -lglfw3 -lrt -lm -ldl -lX11 -lpthread -lxcb -lXau -lXdmcp
[22:46:27] *** Quits: ravan (~ravan@user/ravan) (Client Quit)
[22:47:08] *** Joins: ravan (~ravan@user/ravan)
[22:47:32] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[22:51:48] *** Quits: _73 (~user@pool-108-49-252-36.bstnma.fios.verizon.net) (Remote host closed the connection)
[22:51:58] *** Parts: ravan (~ravan@user/ravan) ()
[22:53:12] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[22:53:25] *** Quits: wootz (~wootz@2806:1000:8000:5352:4ce5:a901:c8e1:e422) (Ping timeout: 260 seconds)
[22:53:43] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 260 seconds)
[22:58:03] *** Joins: Klinda (~superleag@user/klinda)
[22:58:09] *** Quits: Klinda (~superleag@user/klinda) (Read error: Connection reset by peer)
[22:58:17] *** Quits: garo (~garo@ptr-1pln5puxqxmejxq9kws.18120a2.ip6.access.telenet.be) (Ping timeout: 264 seconds)
[22:58:30] *** Joins: Klinda (~superleag@user/klinda)
[22:59:09] *** Joins: garo (~garo@ptr-1pln5puxqxmejxq9kws.18120a2.ip6.access.telenet.be)
[22:59:21] <omegatron> .. and I assume  /usr/local/lib/libGL.so  exists and points to the actual library file ?
[23:00:05] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:00:06] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 260 seconds)
[23:00:23] <Lorra> it does, when I build the program not as a library, but with its own main function, libGL and its symbols are found alright
[23:00:29] <Lorra> omegatron: 
[23:00:37] *** Joins: boB_K7IQ (~boB_K7IQ@138.199.58.100)
[23:01:08] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[23:01:10] <nomagno> omegatron: Well if you want to make scripts capable of running on non-freedesktop-compliant systems you definitely need to take care of that stuff. But it is a safe bet on most systems, and specially if you don't need automatic compilation
[23:03:20] *** Quits: kadavul (~vazha@103.165.20.238) (Ping timeout: 260 seconds)
[23:06:37] <Lorra> @omegatron I call OpenGL functions in the form gl.... and not glX..., before calling the functions in this form, I need to glewInit() with the OpenGL context as the current context. I don't know if libGL.so exports the symbols in the form gl... or glX... .
[23:07:42] *** Joins: X-Scale` (~ARM@31.22.167.71)
[23:08:06] <omegatron> the linker tells you, it needs a symbol .. you have to resolve that first .. by providing the binary file which contains it
[23:08:27] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[23:09:16] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 245 seconds)
[23:09:17] *** Joins: kadavul (~vazha@103.165.20.238)
[23:10:29] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:10:52] *** X-Scale` is now known as X-Scale
[23:13:07] *** Joins: mrig (~mrig@user/mrig)
[23:13:47] *** Quits: alch (~alch@151.68.192.15) (Ping timeout: 260 seconds)
[23:14:33] <Lorra> @omegatron, thanks, I don't know which binary provides this symbol though
[23:15:14] <Lorra> (which exact binary, I know this is a pretty common OpenGL function, but I don't know which library exports this symbol)
[23:15:20] *** Joins: alch (~alch@151.34.135.104)
[23:15:35] <alien_lappy> check with strings (or other tools)
[23:15:45] <alien_lappy> strings command
[23:16:05] <alien_lappy> or probably ld can show symbols,... probably
[23:17:19] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[23:20:06] <SamuelMarks> libtool, otool &etc
[23:21:25] *** Quits: flyingground (~flyinggro@2a01:117f:409:d600:c9b7:d4e2:7812:4802) (Ping timeout: 260 seconds)
[23:24:24] *** Joins: pony (~ed@smol/hors)
[23:27:41] *** floatcomplex is now known as coroutines
[23:28:12] *** Quits: boB_K7IQ (~boB_K7IQ@138.199.58.100) (Ping timeout: 258 seconds)
[23:28:49] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[23:31:59] *** Quits: SamuelMa1ks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[23:31:59] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[23:32:42] *** Quits: extern (~archer@80.246.133.172) (Quit: WeeChat 3.3)
[23:34:47] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[23:34:53] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[23:34:54] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[23:37:54] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 260 seconds)
[23:38:09] *** lukedashjr is now known as luke-jr
[23:38:45] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:39:36] <nomagno> How much can you modify syntax trough the preprocessor?
[23:46:16] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 265 seconds)
[23:48:11] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.117)
[23:50:30] *** Joins: flyingground (~flyinggro@2a01:117f:409:d600:c9b7:d4e2:7812:4802)
[23:51:14] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[23:54:26] *** Joins: brad_mssw|mbp (~bhouse@2601:344:4100:b490:8942:df17:f8b4:1627)
[23:55:47] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[23:55:50] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[23:56:06] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 260 seconds)
[23:56:21] *** Quits: brad_mssw|mac (~bhouse@2601:344:4100:b490:b555:3d8e:618:c309) (Ping timeout: 245 seconds)
[23:56:37] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[23:56:39] *** Joins: SamuelMa1ks (~samuel@user/samuelmarks)
[23:56:56] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:57:21] *** lukedashjr is now known as luke-jr
[23:57:39] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:1849:4f5f:1c0b:e16f)
[23:57:39] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:1849:4f5f:1c0b:e16f) (Changing host)
[23:57:39] *** Joins: skapata (~Skapata@user/skapata)
[23:59:37] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[23:59:54] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
