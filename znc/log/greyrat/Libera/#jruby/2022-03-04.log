[00:30:28] *** Joins: contour[m] (~contourma@2001:470:69fc:105::1:d0dc)
[00:32:09] <headius> Nice work. More reasons why I hate maintaining shell scripts
[00:33:00] <contour[m]> Hi Everyone, Does anyone know if jruby ships with the appropriate ruby version needed?
[00:33:18] <headius> Hello there!
[00:33:53] <headius> The latest version of jruby, 9.3.x, is compatible with Ruby 2.6
[00:34:08] <headius> We have a 9.4 release coming up soon that bumps that up to Ruby 3.1 compatible
[00:36:21] <contour[m]> Ah, so I am attempting to upgrade a legacy app. The `$ gem env` command is showing the RUBY EXECUTABLE: /usr/local/jruby-9.2.19.0/bin/jruby
[00:38:02] <contour[m]> And the `RUBY VERSION: 2.5.8 (2021-06-15 patchlevel 0) [java]` But when I do `$ ruby -v` It says Ruby is 2.0.0
[00:38:42] <contour[m]> So I am wondering how the ruby version on my project is reflected an updated version
[00:54:47] <headius> That looks like your path is not picking up JRuby's version of the Ruby command
[00:55:17] <headius> 9.2.19 should say 2.5.8 for Ruby -v
[00:55:55] <contour[m]> Right!
[00:56:16] <headius> How did you install JRuby? I wonder if this is a case where you need to tell it to use JRuby for the Ruby command, like java_alternatives does for Java
[00:56:45] <contour[m]> well the Jruby command works fine
[00:56:53] <contour[m]> shows the correct version
[01:00:51] <headius> Where is the `ruby` command? If it is a symlink, where does it go?
[01:01:16] <headius> However this is being installed I would guess it is not setting up that command to point at JRuby
[01:01:18] <contour[m]> `$which ruby` goes to /usr/bin/ruby
[01:01:47] <contour[m]> which I believe is the systems generic ruby install?
[01:02:10] <headius> FWIW we would probably recommend you use a Ruby installer/switcher like rvm or rbenv, they make it much easier to have multiple versions and implementations of Ruby installed and you just pick the one you want before you start working
[01:02:31] <headius> Yeah that is probably just the system Ruby which on your system is currently 2.0.0
[01:02:44] <contour[m]> Yeah. this is a legacy app. 
[01:02:44] <headius> Is this Linux?
[01:02:51] <headius> Ah I see
[01:03:00] <contour[m]> Yes
[01:03:11] <headius> Does a `ruby` command exist in that JRuby bin dir above?
[01:03:27] <contour[m]> Where would be the Ruby for that shows its `RUBY VERSION: 2.5.8 (2021-06-15 patchlevel 0) [java]`
[01:03:39] <contour[m]> headius: thats what i thought I tried that
[01:03:45] <contour[m]> no it doesnt
[01:04:08] <headius> It will depend how you want to set this up and how your system wants it set up but the commands `jruby` and `ruby` are just the same executable for us
[01:04:46] <headius> So you could add a link there or somewhere in PATH from ruby to JRuby, it should work fine
[01:05:24] <enebo[m]> You can also use jruby -S gem etc... if you want both available
[01:05:54] <contour[m]> Well everything works fine on this version of the application. I have no problems. I am just curious how its showing `RUBY VERSION: 2.5.8 (2021-06-15 patchlevel 0) [java]` in the gem env
[01:06:37] <contour[m]> Like where did that RUBY VERSION come from? Did it ship when a update to `JRUBY` occured?
[01:11:03] <enebo[m]> contour: is there a .ruby-version file in your app?
[01:11:17] <enebo[m]> Maybe that is switching in your app to jruby
[01:12:08] <contour[m]> What `dir` would that be specified under?
[01:12:14] <headius> Yeah that's a possibility, or something is hard-coded to use the jruby command to start up?
[01:12:46] <headius> Hard to know without seeing your app and your environment but you were correct in assuming that that 2.0.0 number is not the correct version for your installed JRuby
[01:12:47] <enebo[m]> Another thought is you do not have rubygems installed in ruby 2.0 (whereever that is) and it is deferring further down to jruby install
[01:13:03] <enebo[m]> jruby -v; ruby -v
[01:13:17] <enebo[m]> If those two are different then ruby is installed in your path ahead of jruby
[01:13:34] <enebo[m]> which ruby is also useful command to run
[01:13:38] <headius> He mentioned above that there does not seem to be a ruby executable in the JRuby install
[01:13:47] <headius> So I'm curious how this was installed
[01:13:58] <contour[m]> Right! 
[01:14:16] <contour[m]> It's a legacy app and I didnt do previous patching
[01:14:18] <headius> Nothing we ship would install into /usr/local so this is something specific to that flavor of Linux
[01:14:55] <enebo[m]> type `which jruby` at a prompt
[01:15:03] <contour[m]> Right @headius
[01:15:08] <headius> But that's an answer anyway, the app is launching probably using the JRuby executable directly while your system Ruby is a different version
[01:15:34] <contour[m]> `$which jruby` shows /usr/local/jruby/bin/jruby
[01:16:23] <headius> I don't think we even ship an install script
[01:16:34] <headius> Whoever set this up may have just unpacked it in place
[01:16:41] <enebo[m]> Well that's mysterious
[01:16:59] <headius> Indeed
[01:17:02] <enebo[m]> Not an OS package.  Not a standard Ruby manager.
[01:17:13] <headius> Doesn't seem to be
[01:17:17] <enebo[m]> Could be just an image someone set up
[01:17:43] <headius> Yeah, a legacy app where they just unpacked JRuby in a specific spot and hard coded the app to use it
[01:17:43] <enebo[m]> If I made an image I would still use a Ruby manager but I could see someone installing to /usr/local
[01:17:51] <headius> Yeah
[01:17:57] <headius> Especially if this was a single purpose image
[01:18:03] <contour[m]> Right this is like a decade old app
[01:18:05] <contour[m]> legacy
[01:18:13] <headius> Ha nice
[01:18:44] <enebo[m]> contour: So it just appears this install of JRuby is missing bin/ruby in the install.  copying bin/jruby to bin/ruby should fix things.
[01:19:02] <headius> Well hopefully that answers your questions. If you want to have the ruby command point at jruby there's several ways to do that but that's up to you
[01:19:07] <enebo[m]> but I bet whoever was doing this in the past was just doing `jruby -S bundle whatever`
[01:19:18] <headius> Yeah that is a simple way
[01:19:18] <contour[m]> yes^
[01:19:28] <contour[m]> Well this is the testing server
[01:19:34] <contour[m]> and it works fine
[01:19:53] <contour[m]> but i need to upgrade the production server from testing server and its offline
[01:19:57] <headius> True, that would use JRuby for subprocesses as well I believe
[01:19:57] <headius> Unless they literally shell out to `ruby`
[01:19:59] <contour[m]> its offline so i cant do remote update
[01:20:51] <headius> Yeah I'm not sure what would be appropriate for your setup but now you know why the versions don't match
[01:21:41] <contour[m]> I'm just confused as to how jruby versioning correlates to ruby
[01:22:02] <contour[m]> Actually
[01:22:36] <contour[m]> Thanks for you help :D
[01:22:39] <contour[m]> I really appreciate it 
[01:24:13] <headius> No problem! It's pretty exciting to hear about a 10-year-old legacy JRuby app still in production. If your company is interested in sharing any information about that we'd love to tell others
[01:24:14] <headius> We never hear about the apps that just work üòÄ
[01:24:57] <enebo[m]> The other part of this is that test clearly got upgraded from a 10 year old codebase
[01:25:09] <enebo[m]> since it is showing 2.5.8
[01:25:15] <headius> Oh yeah that's a very good point
[01:25:46] <headius> So someone out there knows how it was set up üòè
[01:25:51] <enebo[m]> It might be a good idea to consider 9.3 but I am happy nonetheless :)
[01:26:09] <headius> I'm going to merge the shell script fix
[01:26:23] <headius> Goofy shell oddities 101
[01:26:24] <enebo[m]> yeah and that should make your wip tags green
[01:26:38] <headius> Yeah after that's merged I will rebase my branch and see how it looks
[01:37:37] *** Joins: subbu (~subbu@user/subbu)
[02:03:18] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[02:03:38] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[02:06:22] *** Server sets mode: +nt 
[04:11:48] *** Quits: subbu (~subbu@user/subbu) (Ping timeout: 240 seconds)
[05:28:06] <contour[m]> <headius> "So someone out there knows how..." <- for sure lol I joined the team 2 months ago and there was def a migration last july
[05:29:12] <contour[m]> We emailed him, he is currently out of the office. So he has some explaining to do...
[05:30:28] <contour[m]> <headius> "No problem! It's pretty exciting..." <- its pretty big application and the creators have since retired a while ago
[05:39:18] <contour[m]> I just realized enebo headius you guys are the main contributors for jruby! Absolute legends!
[07:16:29] *** Joins: subbu (~subbu@user/subbu)
[08:35:46] <headius> Well I don't know about legends but yup that's us!
[08:39:41] *** Quits: subbu (~subbu@user/subbu) (Ping timeout: 256 seconds)
[12:30:06] *** Quits: ahorek[m] (~ahorekmat@2001:470:69fc:105::30e2) (Quit: You have been kicked for being idle)
[12:30:11] *** Quits: basshelal[m] (~basshelal@2001:470:69fc:105::30e7) (Quit: You have been kicked for being idle)
[18:22:40] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[18:23:01] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[18:24:57] *** Joins: subbu (~subbu@user/subbu)
[18:25:44] *** Server sets mode: +nt 
[18:29:52] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[18:29:52] *** Quits: satyanash_alt (~satyanash@143.110.247.92) (*.net *.split)
[18:29:53] *** Quits: drbobbeaty (~drbob@c-24-14-127-107.hsd1.il.comcast.net) (*.net *.split)
[18:29:56] *** Joins: drbobbeaty_ (~drbob@c-24-14-127-107.hsd1.il.comcast.net)
[23:03:04] <headius> enebo: I have rebased my WIP branch on current master and running fast specs again locally
[23:03:30] <headius> I will try to get fast specs green in CI today and then we can proceed from the WIP job for ongoing work
[23:03:38] <enebo[m]> ok
[23:03:42] <headius> whenever we fix something we just remove tag and it will go back into the fast specs
[23:04:09] <enebo[m]> yeah it should work out well an incoming PRs we will just show this feature
[23:04:46] <enebo[m]> when spec:fast is doneish we can probably do MRI (although we can do it anytime really) but many issues may be gone by that point
[23:09:50] <headius> Yeah that would be possible with a separate exclude directory for work in progress stuff
[23:10:15] <headius> Though that doesn't overlay on the existing excludes hmm
[23:10:29] <headius> I might make a modification to the exclude feature so that you can specify multiple directories
[23:12:25] <headius> enebo: if you get a chance you might mention Kiichi and ahorek in their most recent poll requests and point out this WIP thing
[23:13:18] <enebo[m]> It would be just an excludes_wip with parallel set but lets cross that bridge later
[23:13:43] <enebo[m]> I think it woudl be a copy and add and we would diff the two dirs to see or something like that
[23:13:59] <enebo[m]> yeah definitely on notifying
[23:14:06] <enebo[m]> It will also be helpful for PR submitters
[23:14:21] <enebo[m]> I like the idea of this so we can maintain a run which shows what is left but still have confidence
[23:19:00] <headius> We can certainly copy and add but I think it would be a one-liner to make excludes check multiple directories
[23:19:20] <headius> I wrote the feature after all
[23:19:45] <headius> nobu got his hands on it though so I'm not sure what the code looks like now
[23:30:38] <enebo[m]> yeah
[23:35:44] <headius> 3489 files, 28179 examples, 107854 expectations, 0 failures, 0 errors, 1543 tagged
[23:35:45] <headius> pushing
[23:37:04] <headius> enebo: what do you think about having eregon tag incoming specs with WIP from now on
[23:37:24] <headius> I was going to tell him he could go back to tagging as fails but tagging as WIP would mean we can review new failing specs as they come in
[23:38:12] <headius> We can make the WIP CI run optional and have it always available to show what features we have not finished or evaluated
[23:38:16] <enebo[m]> I am pretty indifferent.  For development it would make sense but ordinarily I am happy enough to just have them get generic tags
[23:38:54] <enebo[m]> I can see the value that it gives us some "triage" ability
[23:38:56] <headius> yeah I will think on it a bit... I don't like that new spec failures just silently get tagged but we also don't want to go red every time we update
[23:39:06] <enebo[m]> I don't really have much of a feel on it though
[23:39:08] <enebo[m]> I will also think about it
[23:55:35] <headius> oh yay spec:ruby:fast is green across the board on my PR now
[23:56:30] <headius> the WIP job has specdoc turned on and appears to be running correctly: https://github.com/jruby/jruby/runs/5427573617?check_suite_focus=true
[23:56:31] <headius> I will merge this
[23:56:57] <headius> there's a couple things in there that passed on Linux, may be MacOS oddities that got swept into wip
[23:57:27] <headius> oh and a TCP#initialize spec appears to have hung
[23:57:40] <headius> probably missing timeout: keyword support
[23:57:55] <headius> anyway I will merge this, maybe you can do a look on Linux and add any other fails as wip
[23:58:19] <headius> I am pinging kiichi and ahorek in the PR
[23:59:30] <enebo[m]> I don't see any open pr for kiichi
[23:59:50] <headius> I just did it in the wip PR
