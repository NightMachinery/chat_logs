[00:32:41] <FromDiscord> <JohnAD (John Dupuy)> So, if designing a new collection type (a ref object) that uses bracketed assignment (`[]=`), then that proc will need to be {.inline.} so that it can recursively pass by ref when being chained. So, if doing `a["foo"]["bar"] = "99"` then a simple proc with a `var` first param won't cut it because the ref won't be passed back properly. Sound correct?
[00:34:20] <FromDiscord> <Elegantbeef> I believe as long as you have a `[]` operator which returns `var` it should be fine
[00:34:36] <FromDiscord> <Elegantbeef> Based of the subject matter i assume this is in some reference to https://forum.nim-lang.org/t/8568  ðŸ˜€
[00:37:47] <FromDiscord> <JohnAD (John Dupuy)> I didn't know of that thread. I'll read through it. I'll also experiment with changing my `[]` operators. To honest, I don't fully understand the impact of `{.inline.}`, so I'm reluctant to use it. Does it essentially make the proc an ad-hoc template?
[00:38:04] <FromDiscord> <Elegantbeef> If the C compiler rules it should be yes
[00:38:27] <FromDiscord> <Elegantbeef> It's not a guarantee just basically saying to the C compiler "Hey if possible can we make this pasted"
[00:38:56] <FromDiscord> <Elegantbeef> So in the end if it cannot be inlined it's no big deal since there is no forced inline aside from templates in nim
[00:40:16] <FromDiscord> <JohnAD (John Dupuy)> Ah, so using `inline` could subtly kick me in the butt later in complex scenarios. I'll look at changing the getter `[]` ops instead.
[00:40:56] <FromDiscord> <Elegantbeef> I dont think so, since the C compiler will not inline code in such a away to change the overall logic
[00:41:14] <FromDiscord> <Elegantbeef> But it also does tend to inline small procedures afaik
[00:41:36] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 260 seconds)
[00:41:41] <FromDiscord> <JohnAD (John Dupuy)> Good to know. Thanks for the help!
[00:41:42] <FromDiscord> <Elegantbeef> Depends on your compiler flags for that though, obviously inline isnt done in the fast/debug builds
[00:41:57] <FromDiscord> <Elegantbeef> No problem
[00:43:50] <NimEventer> New thread by Elcritch: Show Nim: Nephyr a Nim wrapper for Zephyr RTOS! , see https://forum.nim-lang.org/t/8599
[00:53:25] *** Joins: xet7 (~xet7@user/xet7)
[01:03:22] *** Quits: skrzyp (~skrzyp@skrzyp.net) (Ping timeout: 260 seconds)
[01:25:37] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[01:27:29] <FromDiscord> <cuddlefish> How can I add a compiler switch in my package? I want to download data via HTTPS in a library function, so I need `--d:ssl` but I don't know how to make it work in the `.nimble` file
[01:27:46] <FromDiscord> <cuddlefish> if I pass `--d:ssl` on the command line it works, but I'd like this to be hidden
[01:27:59] <FromDiscord> <enthus1ast> you can create a yourFile.nims file
[01:28:17] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3EeP
[01:29:27] <FromDiscord> <enthus1ast> pardon
[01:29:44] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3EeQ
[01:30:41] <FromDiscord> <cuddlefish> Hmm I tried putting that in `src/nimble.nim.cfg` (also `--d:ssl`) and it doesn't work in the nimble file either
[01:30:55] <FromDiscord> <cuddlefish> can I just slap a `.nims` file in my `src` and it will work magically?
[01:31:10] <FromDiscord> <cuddlefish> I have never worked with nims files before, I'm still pretty new to Nim in general
[01:31:15] <FromDiscord> <enthus1ast> sent a long message, see http://ix.io/3EeU
[01:31:26] <FromDiscord> <enthus1ast> then it is picked up automatically
[01:32:11] <FromDiscord> <cuddlefish> Hm it doesn't seem to work when I use `nimble test --verbose` at least, the flag doesn't show up
[01:36:39] <FromDiscord> <enthus1ast> i do not know how nimble test work, i use testament for testing
[01:37:03] <FromDiscord> <enthus1ast> but this enables ssl for normal compilation
[01:37:38] <FromDiscord> <cuddlefish> Ok thank you, I just added it to the test nims file for now and I'll test if it works in normal compilation too
[02:27:23] <FromDiscord> <that_dude> Is there a way I can "intercept" a proc call from another file/module? I want to be able to echo some debug information about it when it gets called
[02:27:37] <FromDiscord> <that_dude> The other proc is exported if that matters
[02:32:02] <FromDiscord> <impbox [ftsf]> Can you just edit the other module?
[02:33:23] <FromDiscord> <that_dude> No because I simplified my example here. There is functionality that I would be able to add to a proc that does not belong in the other module
[02:35:00] <FromDiscord> <impbox [ftsf]> I don't think you can do that, you could modify it for the current module with a template, but it won't help if it's used by other modules
[02:36:25] <FromDiscord> <that_dude> Yeah, its used internally in the module I don't want to change, but the main module needs to do some extra stuff when that proc gets called
[02:36:36] <FromDiscord> <that_dude> F
[02:56:07] <FromDiscord> <dom96> In reply to @cuddlefish "Hm it doesn't seem": for your tests: `echo "--d:ssl" > tests/nim.cfg` should work
[02:56:19] <FromDiscord> <dom96> (edit) ""--d:ssl"" => ""-d:ssl""
[02:57:17] <FromDiscord> <cuddlefish> In reply to @dom96 "for your tests: `echo": Yes I just added the switch to the tests cfg too, it works now, I just expected it to take it from the "main package" config
[02:58:43] <FromDiscord> <dom96> nim just looks for config files in the directory the file you are compiling is in
[02:59:02] <FromDiscord> <dom96> it doesn't check parent dirs and Nimble isn't aware of these config files at all
[02:59:20] <FromDiscord> <dom96> so yeah, no magic there
[03:09:47] <FromDiscord> <retkid> hey so i need to compile to JS But i cant find a good socket solution
[03:10:41] <FromDiscord> <dom96> what do you intend to use the sockets for?
[03:12:00] <FromDiscord> <retkid> sending and receiving
[03:12:12] <FromDiscord> <dom96> sending and receiving what?
[03:12:54] <FromDiscord> <retkid> strings?
[03:13:17] <FromDiscord> <retkid> data?
[03:13:55] <FromDiscord> <cuddlefish> In reply to @dom96 "nim just looks for": so if somebody depends on my package, they have to set this flag manually too? they don't "inherit" down package dependencies?
[03:14:09] <FromDiscord> <dom96> In reply to @cuddlefish "so if somebody depends": yep
[03:14:14] <FromDiscord> <cuddlefish> :/
[03:14:46] <FromDiscord> <cuddlefish> That's not that great, it means it's more work to use my package since a user also needs to modify another file then
[03:14:54] <FromDiscord> <cuddlefish> Well, if that's how it is there's not much I can do about it
[03:17:06] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[03:17:38] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[03:29:22] <nrds> <06Prestige99> Is there a way I can do something like the following?: https://play.nim-lang.org/#ix=3Efh
[03:29:36] <nrds> <06Prestige99> Essentially wanting this template to return a bool
[03:30:03] <FromDiscord> <dom96> just add a `: bool` to the template and it works
[03:31:00] <nrds> <06Prestige99> hm I need to find a better way to replicate why it isn't working in my actual code base
[03:39:26] <FromDiscord> <impbox [ftsf]> In reply to @retkid "hey so i need": Web sockets?
[03:39:36] <FromDiscord> <tandy> there is websockets in standard jsâ†µ(@retkid)
[03:39:52] <FromDiscord> <tandy> https://github.com/nim-lang/standardjs/blob/master/websockets.nim
[03:39:54] <FromDiscord> <impbox [ftsf]> Are you wanting to run the js in a browser?
[03:40:06] <FromDiscord> <retkid> i was about to just program it in JS
[03:40:23] <FromDiscord> <retkid> In reply to @tandy "there is websockets in": thank you
[03:40:31] <FromDiscord> <tandy> or hereâ†µhttps://github.com/juancarlospaco/nodejs/blob/main/src/nodejs/jswebsockets.nim
[03:40:31] <FromDiscord> <retkid> In reply to @impbox "Web sockets?": net is native and doesn't work in JS
[03:40:40] <FromDiscord> <retkid> In reply to @tandy "or here https://github.com/juancarlospaco/nodejs/bl": didn't like this one
[03:40:50] <FromDiscord> <tandy> you should do github search before doing that \:)â†µ(@retkid)
[03:41:08] <FromDiscord> <impbox [ftsf]> Well if you're running the js via node you can probably use native sockets
[03:41:13] <FromDiscord> <retkid> In reply to @tandy "you should do github": I had but standardJS is about like 2 bacons away from client
[03:41:26] <FromDiscord> <retkid> In reply to @impbox "Well if you're running": compile errors tho
[03:41:28] <FromDiscord> <impbox [ftsf]> But in a browser you'd need to use web sockets or something else, webrtc perhaps
[03:41:44] <FromDiscord> <tandy> huhâ†µ(@retkid)
[03:41:45] <FromDiscord> <impbox [ftsf]> I don't mean using that library
[03:42:26] <FromDiscord> <retkid> "JS web server nim" isn't gonna bring up standardJS
[03:42:56] <FromDiscord> <retkid> i looked for JSLIB Nim but nothing really came up either
[03:43:02] <FromDiscord> <tandy> language\:nim websockets will
[03:43:36] <FromDiscord> <retkid> i guess i just suck at github searching
[03:48:06] <FromDiscord> <dom96> you can easily use whatever JS libraries you need from Nim. Even the websockets wrapper is less than 60 LOC
[03:50:09] <FromDiscord> <dom96> so just get comfortable writing wrappers and you won't have any problems
[04:00:02] <FromDiscord> <salt rock lamp> i'm so confused, if i have `calc.nims` and `calc.nim` in the same directory, and i write `nim r calc.nim`, it looks like it is trying to run `calc.nims` instead... why is that?
[04:00:25] <FromDiscord> <Elegantbeef> It'll use calc.nims as the config
[04:00:49] <FromDiscord> <salt rock lamp> huh!
[04:00:55] <FromDiscord> <salt rock lamp> well that explains it
[04:01:10] <FromDiscord> <Elegantbeef> Are you doing some nimscript interop or something?
[04:01:13] <FromDiscord> <salt rock lamp> that's kind of confusing but i guess i can see why that's useful
[04:01:18] <FromDiscord> <salt rock lamp> no, i was just experimenting
[04:01:41] <FromDiscord> <salt rock lamp> i copied the same file and put a shebang at the top
[04:02:31] <FromDiscord> <salt rock lamp> would `#!/usr/bin/env nim r --hints:off` work?
[04:03:14] <FromDiscord> <salt rock lamp> hah it does
[04:03:16] <FromDiscord> <salt rock lamp> nice
[04:35:09] <NimEventer> New post on r/nim by insomniac_lemon: Godot for beginner projects? alternatives?, see https://reddit.com/r/nim/comments/qodqyc/godot_for_beginner_projects_alternatives/
[05:11:31] <FromDiscord> <impbox [ftsf]> It should probably need calc.cfg.nims or something
[05:22:44] *** Quits: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de) (Remote host closed the connection)
[06:27:11] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 245 seconds)
[06:30:50] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:48:19] <FromDiscord> <Goat> I don't know why I made this https://media.discordapp.net/attachments/371759389889003532/906744345548439582/unknown.png
[06:48:22] <FromDiscord> <Goat>  https://media.discordapp.net/attachments/371759389889003532/906744359381250088/unknown.png
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[10:15:21] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 268 seconds)
[10:58:39] <FromDiscord> <retkid> is there any way to like
[10:58:56] <FromDiscord> <retkid> Marshel from nim into JS
[10:59:18] <FromDiscord> <Elegantbeef> What do you mean
[11:00:00] <FromDiscord> <retkid> is Marshel using a standardized thing that I can just use Marshel in JS cast it into an array
[11:00:28] <FromDiscord> <Elegantbeef> I dont follow
[11:00:38] <nrds> <06Prestige99> I'm setting up CI for my game engine that uses chipmunk 7.0.3, but getting an error when running the tests `could not import: cpBodySetVelocityUpdateFunc` - That's the name of a c function that the chipmunk wrapper has wrapped; I thought it first maybe the chipmunk version in CI was outdated, but it seems correct. Any thoughts on what would cause this?
[11:01:02] <FromDiscord> <retkid> In reply to @Elegantbeef "I dont follow": ok so
[11:01:39] <FromDiscord> <retkid> You have a sequence in Nim, that you use marshal to save it to a Json
[11:02:05] <FromDiscord> <retkid> can I then read that Json and cast it to an array
[11:02:16] <FromDiscord> <retkid> (edit) "can I then read that Json and cast it to an array ... " 03added "or dict or something"
[11:02:28] <FromDiscord> <retkid> (edit) "can I then read that Json ... and" 03added "in JS"
[11:03:50] <FromDiscord> <Elegantbeef> is this native Nim -\> Js or Nim Js -\> Js?
[11:04:27] <FromDiscord> <retkid> Nim JS?
[11:04:29] <FromDiscord> <retkid> thats a thing
[11:04:40] <FromDiscord> <retkid> nah its just Nim -> JS
[11:04:45] <FromDiscord> <Elegantbeef> You can compile nim to JS yes
[11:04:49] <FromDiscord> <retkid> oh that
[11:04:51] <FromDiscord> <retkid> no
[11:05:14] <FromDiscord> <retkid> hand written JS
[11:05:26] <nrds> <06Prestige99> Regarding my above question, it is outdated
[11:05:40] <FromDiscord> <Elegantbeef> Is it interoping Nim's JS or native Nim?
[11:06:12] <FromDiscord> <retkid> native Nim
[11:06:25] <FromDiscord> <Elegantbeef> Ok so then the best thing to do is to convert to json directly and send that
[11:06:36] <FromDiscord> <Elegantbeef> the marshal module doesnt serve much of a purpose anyway
[11:06:52] <FromDiscord> <retkid> do i use Jsonify for that one?
[11:07:03] <FromDiscord> <Elegantbeef> You can use any Json library you want
[11:07:06] <FromDiscord> <retkid> that is a pain ;-;
[11:07:29] <FromDiscord> <retkid> actually
[11:07:32] <FromDiscord> <Elegantbeef> It's like 3 seconds to change
[11:07:39] <FromDiscord> <retkid> well, i have a whole database
[11:07:44] <FromDiscord> <retkid> that used Marshal
[11:07:46] <FromDiscord> <retkid> because im stupid
[11:08:14] <FromDiscord> <retkid> I can use my monkey brain to figure this out tho
[11:08:39] <FromDiscord> <Elegantbeef> Marhsal is a weird module that imo exists for 0 reason
[11:08:46] <FromDiscord> <Elegantbeef> It doesnt do anything any Json library cant do
[12:12:55] <FromDiscord> <evoalg> I figured out how to sort a seq[(int, int)] by the 2nd element, descending ... https://play.nim-lang.org/#ix=3EgH ... I'm wondering if there's a lambda way of doing it, or is this the right approach?
[12:16:03] <FromDiscord> <Elegantbeef> I dont like lambdas but this should work https://play.nim-lang.org/#ix=3EgJ
[12:18:33] <FromDiscord> <evoalg> Oh thank you! ... I didn't realize you could drop a proc right in there - that's so cool ... is this the way you would do it, or is it just how to make it work on one line type-of-thing?
[12:19:07] <FromDiscord> <Elegantbeef> I dont like lambdas so i'd probably just keep the way you did it just, but use cmp like i did
[12:19:47] <FromDiscord> <evoalg> gotcha thank you!
[12:21:44] <FromDiscord> <evoalg> You don't like lambdas because of readability right?
[12:22:34] <FromDiscord> <Elegantbeef> I also dont like that they limit reuse
[12:22:53] <FromDiscord> <Elegantbeef> For a slightly more readable version you can also do https://play.nim-lang.org/#ix=3EgM
[12:23:02] <FromDiscord> <Elegantbeef> Using `sugar`'s `=>`
[12:23:49] <FromDiscord> <evoalg> Ohhh thank you for the different options ... and thank you for the explanation - makes sense
[12:25:15] <FromDiscord> <Elegantbeef> For one offs i guess they make sense, and i've been using anonymous procedures for my game i'm working on though using the `do` notation for it https://github.com/beef331/mindthegap3D/blob/master/src/core/worlds.nim#L41-L50
[12:26:06] <FromDiscord> <Elegantbeef> But i think this is one of the cleaner solutions for my problem of asset loading after opengl has been init'd
[12:27:43] <NimEventer> New Nimble package! aossoa - Use a Structure of Arrays like an Array of Structures, see https://github.com/guibar64/aossoa
[12:29:09] <FromDiscord> <evoalg> What sort of game is it? What does the player have to do?
[12:29:39] <FromDiscord> <Elegantbeef> If i stick with it, it's just this but in 3D https://streamable.com/pj725f
[12:30:50] <FromDiscord> <evoalg> 3D sounds scary hard (to me)
[12:31:08] <FromDiscord> <Elegantbeef> Eh it's still mostly a 2D game
[12:31:20] <FromDiscord> <Elegantbeef> The 3Dness is mostly in rendering
[12:31:47] <FromDiscord> <evoalg> cool
[12:31:48] <FromDiscord> <Rika> In reply to @NimEventer "New Nimble package! aossoa": Cool package this SoA one
[12:32:03] <FromDiscord> <Elegantbeef> Doesnt lqdev's datarray already do this?
[12:32:26] <FromDiscord> <Rika> I donâ€™t remember it probably does
[12:32:37] <FromDiscord> <Rika> Not that I have any use for such things yet
[12:33:16] <FromDiscord> <Rika> In reply to @Elegantbeef "For one offs i": Honestly with regards to the do notation I feel like one of the function building syntaxes has to go
[12:33:32] <FromDiscord> <Rika> Feels redundant for no reason
[12:34:04] <FromDiscord> <Rika> Personally think the do function syntax should go but thatâ€™s because I have no idea what benefits that gives over anonymous proc syntax
[12:34:06] <FromDiscord> <Elegantbeef> I dont think i use any of the other variants ever so meh
[12:35:46] <FromDiscord> <Elegantbeef> Though the `do` syntax is a bit obscure, and i had quite a bit of trouble understanding it the first time i seen it
[12:36:47] <FromDiscord> <Elegantbeef> I dont even need it in this case
[12:36:52] <FromDiscord> <Elegantbeef> Since it's a `proc()`
[12:37:34] <FromDiscord> <Rika> I mean that do syntax is fine
[12:37:42] <FromDiscord> <Rika> I meant that do proc building syntax is not
[12:37:47] <FromDiscord> <Rika> There is a reason for do
[12:37:51] <FromDiscord> <Rika> Not for do ()
[12:39:00] <FromDiscord> <Elegantbeef> Anyway i need to go to sleep now before i forget about DST ðŸ˜€
[12:39:19] <FromDiscord> <Elegantbeef> Fuck DST
[12:52:09] <FromDiscord> <ynfle (ynfle)> @evoalg there is also `sortedByIt`, but it doesn't seem to support `Descending`
[13:09:19] <FromDiscord> <Rika> Yeah because you use comparison operators there instead of cmp function
[13:14:11] <FromDiscord> <ynfle (ynfle)> I don't get it? You don't pass in operators to `sortedByIt`
[13:18:34] <FromDiscord> <evoalg> yea no descending is `sortedByIt`'s big downfall (for me)
[13:25:02] <FromDiscord> <impbox [ftsf]> sortedByIt(-it.whatever)
[13:27:27] *** Joins: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de)
[13:28:32] <FromDiscord> <evoalg> In reply to @impbox "sortedByIt(-it.whatever)": gosh that works!
[13:30:22] <FromDiscord> <impbox [ftsf]> of course, you're just sorting by the negative of the value, which is the same as a descending sort
[13:31:41] <FromDiscord> <evoalg> Thank! ... it's not in-place sort, but it's still cool
[13:36:37] <FromDiscord> <evoalg> why can I do `var x = @[50, 40, 30, 20, 10].sorted` but I can't do `var x = @[50, 40, 30, 20, 10].sort` ?
[13:36:57] <FromDiscord> <impbox [ftsf]> because sort doesn't return a value
[13:37:13] <FromDiscord> <evoalg> of course - thank you!
[13:37:19] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3Eh9
[13:37:31] <FromDiscord> <impbox [ftsf]> the error message should give you a hint
[13:38:36] <FromDiscord> <evoalg> the error message says `'@[50, 40, 30, 20, 10]' is immutable, not 'var'` so it's confusing
[13:38:56] <FromDiscord> <impbox [ftsf]> yep `@[50, 40, 30, 20, 10]` is a seq literal
[13:39:25] <FromDiscord> <impbox [ftsf]> you're telling it to sort the seq literal rather than x
[13:39:53] <FromDiscord> <evoalg> gotcha ok, that makes sense
[13:40:41] <FromDiscord> <impbox [ftsf]> whereas `sorted` doesn't require a var argument
[13:41:00] <FromDiscord> <impbox [ftsf]> because it takes the argument and returns a new seq
[13:41:57] <FromDiscord> <evoalg> that's kind of nice, if it's to remain sorted ... also makes sense - thank you!
[14:32:32] *** Joins: Vladar (~Vladar@46.162.2.53)
[14:52:19] <Amun-Ra> that works exactly like in python
[15:16:27] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[15:17:30] *** Joins: xet7 (~xet7@user/xet7)
[15:18:53] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[15:19:21] *** Joins: xet7 (~xet7@user/xet7)
[15:32:14] *** Quits: elph (uid286227@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:34:14] <FromDiscord> <tandy> bruihhhhh im dumbâ†µ(@elmaco)
[16:58:25] <FromDiscord> <ratapenado> Btw why do Nimrod was renamed Nim ?
[17:31:34] *** Joins: arkurious (~arkurious@user/arkurious)
[17:53:24] <FromDiscord> <ynfle (ynfle)> Nimrod has a negative connotation in English
[18:16:59] <FromDiscord> <ratapenado> Oh ? What kind ?
[18:18:51] <FromDiscord> <Rika> stupid
[18:20:56] <FromDiscord> <IsaacPaul> yea pretty much, I'm sure it also has sarcastic roots since Nimrod was the name of a skilled hunter.
[18:24:36] *** Joins: neurocyte0132889 (~neurocyte@45.14.190.246)
[18:24:36] *** Quits: neurocyte0132889 (~neurocyte@45.14.190.246) (Changing host)
[18:24:36] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:27:11] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Client Quit)
[18:31:01] *** Joins: neurocyte0132889 (~neurocyte@45.14.190.246)
[18:31:02] *** Quits: neurocyte0132889 (~neurocyte@45.14.190.246) (Changing host)
[18:31:02] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:34:05] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Client Quit)
[18:35:39] *** Joins: neurocyte0132889 (~neurocyte@45.14.190.246)
[18:35:39] *** Quits: neurocyte0132889 (~neurocyte@45.14.190.246) (Changing host)
[18:35:39] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:55:28] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[19:04:19] <madprops> what am I doing wrong: toSeq(walkFiles(rpath))
[19:04:27] <madprops> I just want a list of file names
[19:04:53] <madprops> iterate over them
[19:05:02] <madprops> but it retuns an empty list
[19:07:21] <madprops> oh maybe I needed walkdir
[19:19:53] <CyberTailor> is it possible to install nimble packages that have deps without downloading package.json?
[19:21:00] <FromDiscord> <DMI-1407> is there a demo or tutorial or som project that shows how to create a gui that works on win and linux (e.g. ubuntu) ?
[19:21:14] <FromDiscord> <DMI-1407> (edit) "som" => "some sort of"
[19:21:53] <FromDiscord> <DMI-1407> (without doing everything from scratch in an canvas like webgl or so......)
[19:22:29] <FromDiscord> <dom96> CyberTailor: as long as all those deps are specified using urls it will work
[19:28:46] <CyberTailor> dom96: i mean, without nimble using network
[19:33:32] <FromDiscord> <dom96> then no, what are you trying to do? Why avoiding the network?
[19:35:51] <CyberTailor> because of sandbox
[19:36:58] <CyberTailor> if i do "nimble install --nimbleDir:/opt/nimble", it finds dependencies
[19:37:29] <CyberTailor> but then tries to write to /opt/nimble and gets access denied by sandbox
[19:38:16] <CyberTailor> so it has to read deps from /opt/nimble and install to /var/tmp/portage/dev-nim/example/image/opt/nimble
[19:42:12] <CyberTailor> is there something like "install without checking dependencies"?
[19:42:26] <FromDiscord> <tandy> is there a way to have an int as +/- infinity?
[19:42:46] <FromDiscord> <tandy> `high(BiggestInt)`
[19:44:41] <FromDiscord> <Rika> no, ints do not have infinity
[20:07:46] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[20:10:53] *** Joins: neurocyte0132889 (~neurocyte@45.14.190.246)
[20:10:53] *** Quits: neurocyte0132889 (~neurocyte@45.14.190.246) (Changing host)
[20:10:53] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[20:16:51] <CyberTailor> i'll just try sed'ding out all "require" lines :P
[20:41:39] *** Quits: anjovi (~userf@gateway/tor-sasl/mantisfan) (Ping timeout: 276 seconds)
[20:50:15] <madprops> is the a tool to extract tags from html like <title> ?
[20:50:22] <madprops> there*
[20:50:33] <madprops> from an html string
[20:50:46] <madprops> like what cheerio is to node
[20:51:21] <madprops> ah i see there's htmlparser
[20:51:47] *** Quits: rb (~augh@theguntretort.com) (Quit: ZNC - https://znc.in)
[20:52:46] <madprops> but it seems it only reads from a file
[20:53:37] *** Joins: rwb (~augh@theguntretort.com)
[20:54:55] <madprops> ah nvm
[20:56:39] <NimEventer> New thread by Carterza: Did you know that Nim has had enum-indexed arrays since 0.18? Poll Inside!, see https://forum.nim-lang.org/t/8600
[20:59:12] <madprops> why is the nim docs using "func" instead of "proc" ?
[21:00:03] <FromDiscord> <IsaacPaul> It's basically proc with extra macros:  {.noSideEffect, locks: 0.}
[21:02:40] <NimEventer> New thread by Arnetheduck: Nlvm update - llvm 13.0.0, see https://forum.nim-lang.org/t/8601
[21:02:59] <madprops> so when do I want to use func?
[21:04:11] <FromDiscord> <IsaacPaul> sent a code paste, see https://play.nim-lang.org/#ix=3EjY
[21:04:26] <nixfreak_nim[m]> When  you don't have any side-effects 
[21:04:39] <FromDiscord> <IsaacPaul> a is unchanged, b is unchanged in the provided example
[21:05:05] <FromDiscord> <IsaacPaul> Honestly, I'm surprised that it doesn't figure it out at compile time.
[21:05:37] <FromDiscord> <IsaacPaul> maybe It's more difficult than I'm imagining lol
[21:08:00] <FromDiscord> <Rika> In reply to @IsaacPaul "Honestly, I'm surprised that": wdym>
[21:08:48] <FromDiscord> <Rika> proc -> used when you explicitly want side effectsâ†µfunc -> used when you explicitly dont want side effects
[21:09:28] <madprops> what do you mean by side effects?
[21:09:47] <madprops> like changing global state?
[21:09:52] <FromDiscord> <Rika> yes
[21:10:30] <madprops> haven't seen that distinction in other languages
[21:10:40] <madprops> but i guess it makes sense
[21:10:48] <madprops> does it warn you if you don't use it properly?
[21:10:58] <madprops> gonna try it myself
[21:11:01] <FromDiscord> <Rika> it fails to compile
[21:11:10] <FromDiscord> <Rika> only if you use func
[21:11:58] <FromDiscord> <dom96> !eval var global = "foo"; func bad() = global.add("hello"); bad()
[21:12:01] <NimBot> Compile failed: /usercode/in.nim(1, 26) Error: 'bad' can have side effects
[21:12:31] <madprops> cool
[21:12:54] <FromDiscord> <Rika> explicit var parameters are not counted as side effects, which is a departure from the mathematical meaning
[21:12:56] <FromDiscord> <Rika> afaik
[21:13:47] *** rwb is now known as rb
[21:13:55] <FromDiscord> <Rika> so if you want "real" no-side-effect guarantees, dont use var params and use strict functions (i forgot the actual name, someone else please send the real name or so)
[21:39:01] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[21:48:56] <FromDiscord> <exelotl> it is `{.experimental:"strictFuncs".}` iirc
[21:53:12] <nixfreak_nim[m]> so only use let and make sure its immutable right?
[21:56:54] <FromDiscord> <IsaacPaul> In reply to @Rika "proc -> used when": ah I misunderstood it's use.
[22:15:41] <FromDiscord> <reilly> Does the standard library have something for splitting a seq into a seq of x equally-sized seqs? (+/- 1 for odd lengths)
[22:23:33] <FromDiscord> <brainproxy> sent a code paste, see https://play.nim-lang.org/#ix=3Ekq
[22:43:31] <FromDiscord> <brainproxy> seems to have to do with stdout being in non-blocking mode...  not sure actually
[22:50:39] <FromDiscord> <ynfle (ynfle)> side effects include file IO and stdout, stderr & stdin.
[22:51:13] <FromDiscord> <ynfle (ynfle)> @reilly, I tried finding something but couldn't find it
[23:38:05] <FromDiscord> <Goat> Are there any good guides on setting up a docker image for nim development?
[23:39:31] <nixfreak_nim[m]> I'm looking for examples of jsffi in Nim
[23:40:08] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/Nim/blob/version-1-6/lib/std/jsfetch.nim is probably a good reference
[23:40:41] <FromDiscord> <dom96> https://github.com/search?l=Nim&q=import+jsffi&type=Code ðŸ™‚
[23:41:47] <FromDiscord> <Elegantbeef> Hey the first two are just cause nimscripter ðŸ˜€
[23:42:30] <FromDiscord> <Elegantbeef> Hmm does this mean github search inst useless anymore in a repo?
[23:46:21] <nixfreak_nim[m]> probably a really dumb question, but since I'm new at this here it goes: If you want to use an external javascript library would you have to download the source of that library in order to use jssfi ? or how does that work? 
[23:47:32] <FromDiscord> <Elegantbeef> As long as the JS is accessible from the generated nim file it doesnt matter
[23:47:59] <FromDiscord> <Elegantbeef> When you do interop it doesnt know if procedures exist and will not know until runtime
[23:51:29] <nixfreak_nim[m]> Do you know of a really simple example of an external js library maybe a couple of functions then using nim to import those functions? 
[23:51:56] <nixfreak_nim[m]> I guess I'm just not understanding how this works 
[23:54:15] <FromDiscord> <Elegantbeef> This emits JS functions and wraps them in a single file, might be more clear
[23:54:16] <FromDiscord> <Elegantbeef> https://github.com/beef331/mrapi/blob/master/src/mrapi.nim
[23:54:34] <FromDiscord> <Elegantbeef> Though i wouldnt suggest using it, i couldnt be arsed to properly wrap the API since it suuuucks ðŸ˜€
[23:56:21] <FromDiscord> <Goat> From the manual https://media.discordapp.net/attachments/371759389889003532/907003058477752340/unknown.png
[23:59:02] <nixfreak_nim[m]> Oh there we go , thanks Goat and ElegantBeef
[23:59:26] *** ChanServ sets mode: +o dom96
[23:59:54] *** dom96 changes topic to 'ðŸ‘‘ Nim programming language - http://nim-lang.org/ | https://github.com/nim-lang/Nim/wiki/IRC-guidelines | Latest version: 1.6.0 - https://nim-lang.org/install.html | Forum: http://forum.nim-lang.org/ | IRC logs: http://irclogs.nim-lang.org/ | Bridged to Discord/Gitter/Matrix: https://discord.com/invite/nim | See also #nim-offtopic #nim-nologs | git.io/gHZGCg'
