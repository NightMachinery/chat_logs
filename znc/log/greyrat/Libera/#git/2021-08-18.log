[00:00:48] *** Joins: fnurkla (~fnurkla@46-162-87-192.cust.bredband2.com)
[00:02:28] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 268 seconds)
[00:04:48] *** Quits: mjbatty_ (~mjbatty@82.2.17.205) (Quit: Leaving)
[00:06:29] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[00:12:43] *** Joins: mort (~mort@188.166.114.29)
[00:13:41] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[00:13:55] <mort> hey, so I'm genuinely curious. I always see people saying that you *shouldn't* work in your own branch - most recently now on the official fossil SCM blog
[00:14:24] *** Joins: christall (~christall@24.235.88.243)
[00:14:54] <mort> so I have to ask, what am I supposed to do instead? If I'm done for the day, but what I have doesn't even build, am I actually supposed to push a completely broken build to the main repository and then leave for the day? What if I'm leaving for a holiday? Should the main branch just be broken for months until I come back and clean it up or someone
[00:14:54] <mort> else cleans up my mess?
[00:15:17] <mort> or am I completely misunderstanding the "you shouldn't work in your own branch" crowd?
[00:15:42] <gabin> can you link to their claim?
[00:16:22] <gabin> if i have some work that i want to push to remote in case of loss, i'll use the emacs project's convention of `scratch/some-name`
[00:17:03] <gabin> or if i want to notate to myself that i only want to push it to a private copy of the repo, i'll use `private/some-name`
[00:18:04] <mort> https://www.fossil-scm.org/home/doc/trunk/www/rebaseharm.md the latest time I saw people complain about working in your own branch was in this "rebase considered harmful" post
[00:18:36] <mort> "The golden rule of rebasing is that you should never do it on public branches, so if you are using rebase as intended, that means you are keeping private branches. Or, to put it another way, you are doing siloed development. You are not sharing your intermediate work with collaborators. This is not good for product quality."
[00:19:09] <mort> it doesn't sound very good for product quality to push a broken build to master and then leave for summer holiday
[00:19:14] <imMute> mort: "You are not sharing your intermediate work with collaborators." - but compare that to what you already noted: "am I actually supposed to push a completely broken build to the main repository and then leave for the day?"
[00:19:26] <gabin> Maybe you could interpret that as, try to contribute small changes as soon as possible
[00:19:37] *** Quits: christall (~christall@24.235.88.243) (Ping timeout: 245 seconds)
[00:19:48] <imMute> mort: both are extremes and the real way you should do it is likely in the middle somewhere
[00:19:49] <gabin> contribute small working changes
[00:20:32] <gabin> but if you can't get your change broken into small working changes sooner, that might be the nature of the problem you are working on at that moment
[00:20:37] <mort> but some changes are big, right
[00:20:49] <gabin> every once in a while, i make a big commit
[00:21:32] <gabin> it was too much work to break some problem into smaller commits, or smaller tasks
[00:21:33] <mort> personally, I sometimes work on huge changes where the product is entirely useless until all the work is complete, and in those cases, being able to rebase onto the master branch actively prevents siloed development with a huge difficult merge at the end
[00:22:37] *** Quits: randomuser (~randomuse@user/randomuser) (Quit: Leaving)
[00:22:46] <imMute> I've definitely had large changes go through, but I still try to break them down into smaller commits if I can.  and my branch just lives for a bit longer
[00:23:08] <mort> sure, smaller commits is nice, but you still have your own branch until stuff works again, right?
[00:23:17] <imMute> yes, definitely
[00:23:27] <mort> that's what the fossil blog post seems to be arguing against isn't it?
[00:24:14] <gabin> I expect there are pros and cons, and you can aspire to doing that, but sometimes it won't be practical
[00:24:15] <imMute> if their point really is "you shouldn't work in your own branch" (I've not read the article), then I would say that's so wrong I'd consider it clickbait and question if the author has ever used Git.
[00:24:59] <imMute> I started reading it.  their first two points are factually wrong.
[00:25:11] <mort> yeah
[00:25:29] <imMute> "rebase provides no new capabilities" - uh, rebase as a function doesn't exist in other SCMs, so I think that at least qualifies as "new"
[00:25:53] <mort> I mean I think the argument is: anything you can achieve through rebase, you could also achieve through other means
[00:25:53] <imMute> and 2.1 completely misses the point of what a rebase does and instead focuses on just one way of using rebase (a method I personally don't like either)
[00:26:07] <mort> I don't think my interpretation of the argument is correct either fwiw
[00:26:14] *** Joins: christall (~christall@24.235.88.243)
[00:26:26] <mort> to be honest that whole post kind of sounds like, "fossil doesn't have this hard-to-implement feature and here's why it's actually our users who are wrong for wanting it, not us who are wrong for not implementing it"
[00:26:30] <imMute> "could also achieve through other means" - yeah, and we can keep using a file share, or emailing zip files around.
[00:26:40] *** Quits: Samian (~Sami@2620:10d:c091:480::1:e746) (Ping timeout: 240 seconds)
[00:27:13] <gabin> the article seems to argue against having a sense of self or ego
[00:27:28] <gabin> which just sounds like some weird privilege crap
[00:27:52] <gabin> "my farts smell like roses"
[00:28:09] <mort> I stopped reading the post halfway through because it just became so ridiculous, rebase has been an invaluable feature while working on something big which actually requires time before it even works at all; rebase is a way of avoiding siloed development with a huge difficult merge at the end because I can rebase every now and then onto the main
[00:28:09] <mort> branch to keep track with whatever else is going on
[00:28:15] <imMute> "I want to get the code right before I publish it."      uhhh, so we're just going to put broken code out there?  or are we going to compensate by not comitting at all until it's working?
[00:28:35] <imMute> yeah, that article is trash and I've only read a quarter of it
[00:29:26] <mort> it also goes on a tangent about how one of the biggest predictor of bugs in Windows Vista was distance between groups in an org chart and therefore rebase is bad
[00:29:46] <imMute> I mean, that tangent is (I believe) correct.  just totally unrelated to rebasing.
[00:29:52] <mort> yeah
[00:30:19] *** Joins: horribleprogram (~horriblep@cpe9050cac22453-cm9050cac22450.cpe.net.cable.rogers.com)
[00:30:19] <mort> I agree, it's probably good research about the causes of bugs in Vista and in software in general
[00:30:42] <horribleprogram> Failedto connect to github.com port 443: No route to host
[00:30:53] <horribleprogram> probably not even the best place to ask this
[00:31:17] <mort> try to `ping github.com` to see if there's anything wrong unrelated to git
[00:31:42] <mort> then `curl -I https://github.com` to check if there's anything wrong unrelated to git on a higher level than what ping checks I suppose
[00:31:45] <horribleprogram> From 192.168.7.2 (192.168.7.2) icmp_seq=2 Destination Host Unreachable
[00:31:50] <mort> there ya go
[00:32:00] <horribleprogram> wtf
[00:32:10] <horribleprogram> wtf is 192.168.7.2
[00:32:17] <horribleprogram> I have a 192.168.0.0/24
[00:32:52] <mort> yea that's not right
[00:33:02] <mort> is your router's dns server messing with you
[00:33:13] <horribleprogram> 64 bytes from yyz10s14-in-x03.1e100.net (2607:f8b0:400b:80f::2003): icmp_seq=1 ttl=116 time=23.2 ms
[00:33:17] <horribleprogram> it pings to google
[00:33:24] <horribleprogram> it's a port 443 issue?
[00:33:38] <mort> no, ping doesn't operate on a level where ports are even relevant
[00:33:53] <horribleprogram> mort: why would google work but github.com doesn't
[00:34:10] <mort> wtf is yyz10s14-in-x03.1e100.net
[00:34:17] <horribleprogram> I have no clue
[00:34:26] <Peng> Google Toronto IP
[00:34:29] <imMute> horribleprogram: what does 'dig github.com' or 'nslookup github.com' output?
[00:34:42] <imMute> 1e100.net is google.
[00:35:05] <imMute> 1*10^100 is a googol (yes that's the right spelling)
[00:35:15] * Peng notes that google.com supports IPv6 and github.com does not
[00:35:31] <horribleprogram> AH
[00:35:31] <mort> is 1e100.net an IPv6-only thing?
[00:35:34] <horribleprogram> WAIT
[00:35:40] <horribleprogram> is it my /etc/hosts?
[00:35:42] <Peng> mort: No
[00:35:50] <Peng> horribleprogram: Maybe
[00:35:50] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[00:35:51] <imMute> mort: I don't think so.  I believe it's mostly their networking infrastructure that uses 1e100.net
[00:35:52] <mort> I can't look up 1.100.net, weird
[00:36:05] <mort> 1e100.net*
[00:36:24] <imMute> mort: 1e100.net doesn't have an A record, and probably doesn't have a website.  which makes sense.
[00:36:25] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[00:36:42] <horribleprogram> https://pastebin.com/dQxbVaeB
[00:37:01] <imMute> horribleprogram: and the two commands I asked about?
[00:37:46] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[00:37:49] <horribleprogram> imMute: fresh beaglebone
[00:37:56] <horribleprogram> imMute: dig nor nslookup installed
[00:38:08] <horribleprogram> E: Unable to locate package nslookup
[00:38:14] <mort> how about drill?
[00:38:16] <horribleprogram> E: Unable to locate package dig
[00:38:24] <horribleprogram> mort: same
[00:38:29] <mort> they're not from packages called nslookup or dig
[00:38:50] <mort> nslookup is dnsutils I think?
[00:38:55] <imMute> both are dnsutils
[00:39:02] <mort> ah
[00:39:26] <Peng> The package I'm using is called bind9-dnsutils though. :D
[00:39:32] <Peng> Dunno about your distro
[00:40:21] <horribleprogram> got it
[00:40:28] <horribleprogram> dnsutils worked
[00:40:53] <imMute> okay, pastebin the output of 'dig github.com' please
[00:43:06] <horribleprogram> https://pastebin.com/vsszSJ76
[00:43:40] <imMute> okkay, now do 'traceroute 140.82.113.4'
[00:44:36] <horribleprogram> one sec downloading
[00:45:02] <horribleprogram> https://pastebin.com/RiYiSyb1
[00:46:13] <imMute> fucking what...   okay, now do 'ip addr' and 'ip route' and pastebin those
[00:46:49] <horribleprogram> https://pastebin.com/0drxUQ6S
[00:46:50] <mort> that's very weird, I've never seen a traceroute like that
[00:47:28] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[00:47:31] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:47:47] <imMute> okay, so you have 192.168.7.2 assigned to interface usb0.  and the default gateway is set to use that.  but that link is down.
[00:48:07] <imMute> your network config is wonky.  like what are the two USB interfaces?  what's that SoftAp0?
[00:48:20] <horribleprogram> OMFG
[00:48:28] <horribleprogram> imMute: that makes sense now I think it's NGINX
[00:48:40] <horribleprogram> imMute: it's routing ipv4 locally
[00:48:40] <imMute> nginx is a webserver and would have nothing to do with usb interfaces
[00:48:52] <horribleprogram> softap0 comes with the beaglebone
[00:48:55] <horribleprogram> so u can connect to it
[00:48:59] <horribleprogram> like it broadcasts itself
[00:49:11] <mort> tbh networking in linux is a complete mess
[00:49:17] <horribleprogram> mhm
[00:49:26] <imMute> you'll probably have to take this to the beaglebone support.  clearly it's something wonky with their setup.
[00:49:27] <mort> my understanding is that Linux has no concept of a route only being usable through one interface
[00:49:28] <mackerman> If github had IPv6 (it doesn't)  that might still work  :(
[00:49:51] <imMute> mort: that's because of how routing works...
[00:49:54] <horribleprogram> brb rebooting
[00:49:58] <mort> imMute: no it's not
[00:50:05] <horribleprogram> imMute: trust me I think it's the NGINX service p
[00:50:08] <horribleprogram> brb
[00:50:16] <imMute> horribleprogram: it's not.  I'm very familiar with nginx.
[00:50:42] *** Quits: horribleprogram (~horriblep@cpe9050cac22453-cm9050cac22450.cpe.net.cable.rogers.com) (Quit: Leaving...)
[00:50:44] <mort> imMute: if you have a wifi card and a 4G modem, you're gonna have one route through your home router which is only reachable through the wifi card's interface, and one route through your carrier's router which is only reachable through the modem's interface
[00:50:53] <mort> but Linux doesn't understand that
[00:50:57] <imMute> mort: sure it does.
[00:51:06] <mort> imMute: not in my experience?
[00:51:27] <imMute> mort: linux would have routes for the subnets attached to each interface, that are "attached" to said interface.
[00:51:38] <mort> if your route over the router reachable through wwan0 has the lowest metric, `curl --interface wlan0 bleh` is gonna fail
[00:51:43] <imMute> mort: unless you're talking about the *default* route.  that gets tricky with multiple uplinks, but that's not unique to Linux.
[00:53:17] <mort> and what's more, DNS lookups in Linux isn't made for this, so unless you're extremely careful, your dns server file is gonna end up with dns servers only reachable through wwan0 and a default route going through wlan0 and dns lookups will fail
[00:53:19] <imMute> mort: I don't know what --interface does, but knowing how the API works, I'm gonna guess that it sets the source IP of the TCP connection.  which doesn't affect routing unless you use Policy Based Routing (or whatever it's called)
[00:53:21] *** Joins: rahl- (~rahl@102.114.101.163)
[00:53:32] <imMute> mort: but by definition, routing only looks at the destination IP.
[00:54:25] <mort> imMute: so --interface doesn't actually pick which interface the communication goes through?
[00:54:26] <imMute> sounds like you have a problem with the BSD socket API, which is used on far more things than just Linux.  (and yeah, I think that API is a little... dated)
[00:54:35] <imMute> mort: no, that's not how the BSD socket API works.
[00:54:55] <imMute> when doing TCP, applications open a socket with a source IP (if they desire), *not* picking an interface.
[00:55:29] *** Quits: srinidhi (~srinidhi@49.206.4.186) (Ping timeout: 268 seconds)
[00:56:10] *** Quits: rahl (~rahl@102.114.6.70) (Ping timeout: 240 seconds)
[00:56:12] <mort> maybe all issues I've had have just been due to DNS stuff then, if you think setting the source IP to your wlan0 with a default route which only works on wwan0 actually works
[00:57:10] <imMute> as I said, multiple connections to the internet is *tricky* and that's true of just about every OS.
[00:57:33] <imMute> even android doesn't even try - it switches wholesale between WiFi and LTE data based on what is available.
[00:57:49] <mort> but dns is certainly an issue, where you have two different DHCP servers, one for wifi and one for wwan, and the name servers provided by the router's DHCP server works only over wifi and the name servers provided by the carrier's DHCP servers works only over wwan
[00:58:16] <mort> clearly these systems aren't made for the modern world full of multiple interfaces behind different NATs
[00:58:35] <imMute> I would agree with "these systems aren't made for the modern world full of multiple interfaces"
[00:58:55] <mackerman> I prefer my router to... route... and get to the local DNS regardless of which subnet it is on.
[00:59:11] <mort> well, to be fair, a world with multiple interfaces works as long as there's no NAT and there's just one giant flat address space
[00:59:59] <imMute> mackerman: "*the* local DNS"  you're missing the point, there's *multiple* DNS servers available, each covering different domains
[01:00:40] <mort> really, Linux should have a mechanism to remember, "these name servers were provided by DHCP on this interface, these other name servers were provided by DHCP on this other interface"
[01:00:59] <mort> and then use the appropriate name servers based on which interface it's using to send the IP packets for the DNS lookup
[01:01:16] <TJ-> mort: that is done; systemd-resolved does that
[01:01:34] <TJ-> there are per-interface and global DNS servers
[01:01:40] <mort> TJ-: hmm, I've had big issues with that on systemd-resolved systems
[01:01:51] <TJ-> mort: just see "resolvectl status"
[01:02:13] <mort> maybe I'm wrong and the issues have actually been due to routing and not due to DNS
[01:03:09] <mort> *something* certainly doesn't work related to when the system tries to reach something from one LAN through the interface connected to the other LAN
[01:03:36] <mort> (I'm calling the carrier NAT a "LAN" here which feels wrong)
[01:03:53] <imMute> mort: that's not easy though.  if I lookup "foo.bar.local", how does the system know which interface/DNS server that should go to?
[01:04:17] <imMute> mort: *maybe* it can look at DNS search paths associated with each interface (well each DHCP lease) but that's far from generic.
[01:04:31] <mort> I suppose you can't really separate DNS lookup from routing
[01:05:19] *** Quits: JollyRoger (~JollyRoge@user/thejollyroger) (Remote host closed the connection)
[01:05:19] *** Quits: Mmike_ (~mario@li1411-253.members.linode.com) (Read error: Connection reset by peer)
[01:05:21] <imMute> it's *totally* separated from routing.    and perhaps that's part of the problem.
[01:05:38] <mort> yeah, I mean if you want to do this "correctly" it can't be totally separated from routing
[01:05:39] *** Joins: pulse (~pulse@user/pulse)
[01:05:42] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[01:05:45] *** Joins: Tetractys (~Tetractys@109-93-61-88.dynamic.isp.telekom.rs)
[01:06:07] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[01:06:11] <imMute> right.  well not just routing but really network configuration in general (whether it be DHCP, SLAAC, or manually configured)
[01:06:19] <mort> you could have a mechanism which asks all known name servers, then, for each alternative, it checks the routing table and chooses the one which is reachable over the route with the lowest metric
[01:06:21] <mort> but that's weird af
[01:06:33] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Remote host closed the connection)
[01:07:03] <mort> what if we just get rid of NATs and firewalls and IPv4 and make the IP address space completely flat with everything accessible from every node
[01:07:29] *** Joins: Mmike (~mario@user/mmike)
[01:07:53] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[01:08:28] <mackerman> That exists. Join us over at channel  #ipv6   :)
[01:08:41] <mackerman> Well, firewalls are still necessary.
[01:09:37] <imMute> I was gonna say, IPv6 does away with NAT and that's pretty nice.
[01:10:17] <TJ-> mackerman: there's such a channel?
[01:10:59] <mort> I'm not even on an ipv6-compatible network, lol
[01:11:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24) (Ping timeout: 240 seconds)
[01:11:45] <mort> the ipv6 rollout has been an absolute disaster
[01:12:04] *** Joins: imMute^ (~immute@user/immute)
[01:12:13] *** Quits: imMute (~immute@user/immute) (Quit: Reconnecting)
[01:12:24] *** imMute^ is now known as imMute
[01:12:35] <mackerman> Practical IPv6 is about as old as git is.
[01:12:51] <mort> then why can't I reach any ipv6 hosts
[01:13:10] <imMute> mort: because ISPs suck and are dragging their feet to implement IPv6
[01:13:24] <mort> wouldn't that mean IPv6 isn't practical?
[01:13:50] <mackerman> gitlab.com works fine over v6.
[01:14:00] *** Quits: dviola (~diego@user/dviola) (Ping timeout: 268 seconds)
[01:14:02] <imMute> you can get a tunnel from Tunnel Broker (HE.net) if your ISP is shitty.
[01:14:27] <mort> not very practical
[01:14:35] <imMute> mort: and that exact argument is why companies are dragging their heels and making it take for fucking ever.
[01:14:51] <mort> I mean they're not wrong
[01:14:59] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Remote host closed the connection)
[01:15:11] <imMute> perhaps, but it's extremely unhelpful and blocks transitioning to better systems.
[01:15:15] <mort> until more than 0% of internet users can reach ipv6 hosts there's no reason to go through the trouble of setting up ipv6
[01:15:17] <TJ-> and some of us operate IPV6-only networks :)
[01:15:49] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[01:15:49] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Read error: Connection reset by peer)
[01:16:00] <imMute> like how QUIC has to use UDP because making a new L4 protocol or even extending TCP is made impossible by blockers out on the internet.
[01:16:01] <mort> 0% is an exaggeration, but it's only 30% of users who can even reach a v6 host
[01:16:13] <TJ-> https://www.google.com/intl/en/ipv6/statistics.html
[01:16:28] <imMute> mort: until more than 0% of people can do a thing, we're not going to make it *possible* for them to do a thing.
[01:16:54] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[01:17:12] <mort> I mean, it's a cost benefit thing isn't it? You need a v4 address, and having only one kind of address simplifies your infrastructure a whole lot
[01:17:43] <imMute> ISP: "our users aren't using IPv6, so why should we bother implementing IPv6?"    completely glossing over the fact that they *can't* use IPv6 until the ISP deploys it.
[01:17:56] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[01:18:18] <imMute> mort: if we got people transitioned over faster, it would be easier.   not to mention, *getting* an IPv4 these days is getting harder and harder
[01:18:31] <TJ-> stuff like peer-to-peer for VoIP, conferencing, and the like is pushing IPv6 since it is pure routing with no messing about with PNAT, CGNAT, etc
[01:20:27] <mort> will it though?
[01:20:55] <mort> there are pretty attractive security properties to being unable to receive incoming packets from hosts which you didn't initiate communication with
[01:21:12] <mort> but as long as we have something like that, STUN will be necessary
[01:21:55] <mackerman> That's called a stateful firewall.
[01:22:02] <imMute> ... and is independent of NAT.
[01:22:04] *** Joins: manin (~x@185.242.190.95)
[01:22:12] <imMute> and NAT is wholly *not* required to have a stateful firewall
[01:22:21] <mort> yeah, I know
[01:22:35] <imMute> so nice strawman.
[01:22:38] <mort> but you need to punch a hole through either the NAT or the firewall
[01:22:51] <mort> I don't understand how it simplifies real-time p2p communications
[01:23:23] <imMute> because now you don't need STUN.  you just need a way for local hosts to tell the router to open a port for them.
[01:23:56] <mort> that sounds like something we'll 100% have standard protocols for which are well supported and ubiquitous and won't be a clusterfuck of competing half-implemented standards at all
[01:24:22] <imMute> UPnP is already an established standard (albeit a big one)
[01:24:48] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[01:24:54] <mort> and one which modern real-time communications don't really use
[01:24:55] *** Joins: dviola (~diego@187.39.20.53)
[01:25:05] <mort> because there are better ways to circumvent NAT, such as STUN
[01:25:40] <imMute> mort: how is STUN (which requires a cooperating 3rd party) better than a purely local firewall punching mechanism?
[01:26:00] *** Quits: navidr (uid112413@id-112413.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[01:26:18] <mort> you can punch a hole through the firewall, but you still need a central server to know each other's IP address, right?
[01:26:48] <mort> unless you're saying people will type in each other's 128-bit ipv6 addresses all the time
[01:26:53] <imMute> I'm not familiar with how VoIP addresses things, but I assume it uses DNS for at least part of it.
[01:27:32] <imMute> as for the general question, no, I expect people to use DNS insteead of memorizing IP addresses.
[01:27:36] <mort> well generally there's a central signaling server which all peers already know about
[01:28:49] <xx> I need to rewrite a number of commit messages, and then make it appear as if no rewrites happened in the git history
[01:28:52] <xx> how do I go about that?
[01:29:20] <mort> even in an ipv6 world, I wouldn't expect most people to have a domain which points to their desktop/laptop/phone/tablet/whatever which they give to other people in order to call each other, I'd expect most people to use some centralized service with user accounts
[01:29:48] <mort> xx: you can `git rebase -i <the first commit you wanna modify>`
[01:30:15] <mort> your editor will open with the list of commits, change the ones you wanna reword from "pick" to "reword"
[01:30:22] <xx> the hash of first commit I want to modify, or the one before that?
[01:30:52] <mort> eh, take the one before that just to be sure. Any commits you don't change from "pick" to "reword" won't be modified
[01:31:02] <xx> ah, right
[01:31:23] <mort> I think you can use the hash of the first commit you wanna modify but I'm not 100% sure on that
[01:31:33] <xx> I'm never sure on anything
[01:31:52] <xx> hence I have a lot of backups of my entire git repo, before every weird change like this...
[01:32:05] <xx> my backups probably consist of 90% of the file size...
[01:32:29] <mort> eventually, you'll probably reach a state where you're pretty confident you'll be able to dig yourself out of whatever hole you've ended up in... but that can take a while with git
[01:33:01] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[01:33:37] <mackerman> This rewrite still changes history, so if you pushed may impact other people.
[01:34:22] <mort> yeah, it will have to be force-pushed if you want it to look like the commit message was always how you write it
[01:34:49] <mort> usually, you wanna avoid force-pushing to public branches and only force-push to your own personal development branches
[01:36:29] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[01:37:55] *** Joins: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24)
[01:38:18] <imMute> xx: 'git rebase -i SHA' where SHA is the commit *one before* the first one you want to modify.  also note you'll have issues if any of the commits in the range are merges.
[01:40:57] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 248 seconds)
[01:42:57] *** Quits: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24) (Ping timeout: 245 seconds)
[01:44:12] *** Quits: dviola (~diego@187.39.20.53) (Ping timeout: 245 seconds)
[01:44:41] *** Parts: anddam (~anddam@user/anddam) (WeeChat 3.2)
[01:45:35] *** Joins: dviola (~diego@187.39.20.53)
[01:45:54] *** Quits: madewokherd (~urk@comcast.codeweavers.com) (Quit: If your computer stops responding for a long time, turn it off and then back on.)
[01:47:33] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:49:14] <xx> how do I deal with the merges?
[01:49:25] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:49:40] <imMute> there's a --preserve-merges option, but I guess that was replaced by --rebase-merges.  either way, I've not had to deal with it, so I dunno for sure.
[01:49:55] <xx> "You must edit all merge conflicts and then ..." I don't even know why there would be merge conflicts
[01:50:21] <imMute> when you rebase?  because the new base may have diverged from the old base.
[01:50:50] <imMute> and that divergence may render some of the diffs that are being rebased invalid
[01:55:17] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Remote host closed the connection)
[01:55:25] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[01:55:36] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[01:57:57] *** Quits: dviola (~diego@187.39.20.53) (Ping timeout: 245 seconds)
[01:59:15] *** Joins: dviola (~diego@187.39.20.53)
[02:00:14] *** Joins: Samian (~Sami@2620:10d:c091:480::1:9fe6)
[02:02:07] *** Quits: orbyt (~textual@172.92.4.78) (Quit: Textual IRC Client: www.textualapp.com)
[02:02:43] *** Joins: orbyt (~textual@172.92.4.78)
[02:03:41] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[02:05:10] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 240 seconds)
[02:05:57] <newton> what is y'alls take on this: my team has branched off of our main branch with an "epic" branch (that we'll be branching off and keeping up to date with main too). it's not a long term thing, but for some initial changes
[02:06:21] <newton> i feel like we should be rebasing the epic branch on main rather than merging main into it, and branches off of the epic will need to rebase on the epic regularly too
[02:06:57] <newton> right now we're just merging main into the epic and I'm rebasing my features but I assume everyone else is merging epic into theirs, which seems gross
[02:07:04] <imMute> I would probably avoid rebasing the epic branch as any branches based off it will also have to rebase, and coordinating all that might  be tricky
[02:07:39] *** Quits: dviola (~diego@187.39.20.53) (Ping timeout: 268 seconds)
[02:08:57] *** Joins: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24)
[02:12:11] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[02:13:15] <nedbat> newton: why do you assume others are merging epic into theirs? Can't you find out?
[02:13:27] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Client Quit)
[02:14:07] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Ping timeout: 258 seconds)
[02:14:22] <newton> nedbat, project just started but I'm aware that at least a couple of us aren't very rebase savvy, I don't want to push on it right now without some degree of confidence that it's the right move / teach them the process
[02:16:48] *** Quits: nobody_ (~nobody@host-79-50-185-199.retail.telecomitalia.it) (Remote host closed the connection)
[02:18:07] *** Joins: Dima[m] (~reddima10@2001:470:69fc:105::366)
[02:19:04] *** Joins: madewokherd (~urk@65-128-171-161.mpls.qwest.net)
[02:19:12] *** Quits: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24) (Ping timeout: 245 seconds)
[02:19:28] *** Joins: vysn (~vysn@user/vysn)
[02:22:39] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:25:35] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[02:26:46] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[02:31:03] *** Quits: agowa (~agowa338@p4fc228c6.dip0.t-ipconnect.de) (Quit: Leaving)
[02:31:40] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 240 seconds)
[02:32:58] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[02:34:51] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[02:35:08] *** Quits: CaptainYesterday (~CaptainYe@fw.gothaer.de) (Quit: Client closed)
[02:38:49] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[02:40:20] *** Joins: gast0n (~g4570n@user/gast0n)
[02:45:13] *** Joins: dviola (~diego@187.39.20.53)
[02:51:24] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[02:51:41] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 258 seconds)
[02:54:16] *** Joins: AnAverageHuman_ (~AnAverage@user/anaveragehuman)
[02:54:40] *** Quits: Samian (~Sami@2620:10d:c091:480::1:9fe6) (Ping timeout: 240 seconds)
[02:55:08] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Remote host closed the connection)
[02:56:22] *** Quits: reillybrogan (~reillybro@174-20-105-66.mpls.qwest.net) (Ping timeout: 268 seconds)
[02:57:25] <xx> I changed lots of file permissions in my repository, and also made other changes to contents. How can I make a commit that only includes file mode changes?
[02:57:52] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Ping timeout: 246 seconds)
[02:59:59] <thiago> manually
[03:00:12] <thiago> undo the part of the changes you don't want, comimt, re-do it, commit
[03:00:50] <thiago> it's probably easiest to stash, copy the permissions from the stashed commit, commit, then pop the stash
[03:01:00] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[03:01:01] <xx> hmm? My workaround is `git add -i .` and then select the files that have +0/-0
[03:01:10] *** Joins: toinen (~kvirc@user/yksi)
[03:01:30] <xx> and afterwards check git diff --staged to make sure it is only permission changes
[03:02:09] <thiago> that won't work for files that had both changes and file permission updates
[03:02:15] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:02:25] * thiago didn't know the text adventure game that is git add -i still existed
[03:02:42] *** Quits: yksi (~kvirc@user/yksi) (Ping timeout: 272 seconds)
[03:03:11] *** Joins: Samian (~Sami@2620:10d:c091:480::1:9fe6)
[03:03:56] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[03:09:17] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[03:09:48] *** Joins: christall (~christall@24.235.88.243)
[03:09:53] <mort> git is kind of bad about that
[03:10:21] <mort> it would've been nice if you had a good interface which let you pick which particular changes you want to commit
[03:10:49] <nedbat> many editors provide UI's like that
[03:11:23] <thiago> that's what git add -i is
[03:11:28] <thiago> doesn't make that any less of a text adventure
[03:11:42] <thiago> like you you can add the patches, then quit, then continue to the nxt file
[03:11:44] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[03:11:49] *** Joins: ferdna (~ferdna@user/ferdna)
[03:14:10] *** Quits: christall (~christall@24.235.88.243) (Ping timeout: 240 seconds)
[03:17:07] <nedbat> thiago: an editor can make it easier to see them all, pick individual lines, etc.
[03:18:16] <nedbat> thiago: vim's fugitive for example, shows a full diff, of the staged and unstaged, and you can move files, hunks, or lines back and forth.
[03:19:46] *** Joins: mutandis (~mut@c-73-129-211-144.hsd1.md.comcast.net)
[03:19:48] *** Quits: dviola (~diego@187.39.20.53) (Ping timeout: 268 seconds)
[03:21:34] *** Joins: dviola (~diego@187.39.20.53)
[03:24:44] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 268 seconds)
[03:29:59] *** Quits: orbyt (~textual@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:36:57] *** Joins: clime (~clime@ip-94-199-195-39.acvyskov.cz)
[03:37:49] *** Quits: codebam (~codebam@user/codebam) (Remote host closed the connection)
[03:38:35] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[03:38:54] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[03:40:28] *** Joins: reillybrogan (~reillybro@174-20-166-84.mpls.qwest.net)
[03:40:56] *** Joins: average (uid473595@user/average)
[03:41:11] *** Joins: christall (~christall@24.235.88.243)
[03:42:01] *** Quits: psaintlaurent000 (~psaintlau@ool-43541fc9.dyn.optonline.net) (Ping timeout: 248 seconds)
[03:44:37] *** Quits: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net) (Ping timeout: 245 seconds)
[03:44:51] *** Joins: Xenguy (~Xenguy@devuan/developer/Xenguy)
[03:48:07] *** Quits: clime (~clime@ip-94-199-195-39.acvyskov.cz) (Quit: WeeChat 3.2)
[03:57:14] *** Joins: codebam (~codebam@user/codebam)
[03:57:19] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[03:58:00] *** Quits: christall (~christall@24.235.88.243) (Ping timeout: 258 seconds)
[03:58:20] *** Quits: rtjure (~rtjure@vlan-153-aitos-30.comnet.bg) (Quit: Leaving)
[04:02:36] *** Joins: eligos (~eligos@181.43.107.190)
[04:04:00] *** Joins: Gurkenglas_ (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[04:04:51] *** Quits: eligos (~eligos@181.43.107.190) (Client Quit)
[04:07:10] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:15:35] *** Joins: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24)
[04:21:33] *** Joins: AMPed (~user@ip72-217-90-246.ph.ph.cox.net)
[04:26:00] *** Joins: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com)
[04:26:02] *** Joins: disi (~disi@c-98-207-149-218.hsd1.ca.comcast.net)
[04:26:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24) (Ping timeout: 240 seconds)
[04:30:05] *** Joins: christall (~christall@24.235.88.243)
[04:30:59] *** Joins: furincleavagesit (~textual@45.144.113.151)
[04:34:10] *** Quits: christall (~christall@24.235.88.243) (Ping timeout: 240 seconds)
[04:42:00] *** Quits: Shentino (~shentino@user/shentino) (Read error: Connection reset by peer)
[04:53:10] *** Quits: beshr (~beshr@user/beshr) (Ping timeout: 240 seconds)
[04:56:38] *** Quits: Tetractys (~Tetractys@109-93-61-88.dynamic.isp.telekom.rs) (Quit: Textual IRC Client: www.textualapp.com)
[04:59:49] *** Joins: christall (~christall@24.235.88.243)
[05:04:09] *** Quits: christall (~christall@24.235.88.243) (Ping timeout: 248 seconds)
[05:17:22] *** Joins: christall (~christall@24.235.88.243)
[05:23:47] *** Quits: christall (~christall@24.235.88.243) (Ping timeout: 245 seconds)
[05:34:23] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:37:45] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 248 seconds)
[05:40:47] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[05:47:33] *** Joins: austin987 (~null@2603-8080-2700-d768-0000-0000-0000-0b6a.res6.spectrum.com)
[05:49:59] *** Quits: JollyRoger (~JollyRoge@user/thejollyroger) (Ping timeout: 244 seconds)
[05:50:59] *** Joins: JollyRoger (~JollyRoge@user/thejollyroger)
[06:01:26] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[06:06:46] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[06:19:52] *** Quits: AMPed (~user@ip72-217-90-246.ph.ph.cox.net) (Quit: ERC (IRC client for Emacs 26.3))
[06:21:27] *** Quits: gry (~quassel@botters/gry) (Quit: gone)
[06:21:40] *** Quits: thiago (~thiago@2601:1c0:4501:635c:eaf3:ade:2b81:837e) (Ping timeout: 240 seconds)
[06:22:39] *** Joins: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24)
[06:24:09] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 248 seconds)
[06:26:04] *** Joins: thiago (~thiago@2601:1c0:4501:635c:fd2f:52f2:8226:97cd)
[06:27:35] *** Joins: travisghansen (~travisgha@192.74.130.86)
[06:33:45] *** Quits: nrg (~NRG@user/nrg) (Ping timeout: 248 seconds)
[06:33:47] *** Quits: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24) (Ping timeout: 245 seconds)
[06:34:22] *** Joins: nrg (~NRG@user/nrg)
[06:34:38] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[06:35:21] *** Quits: waterkip (~slakkie@95.211.147.230) (Quit: leaving)
[06:38:44] *** Joins: gry (~quassel@botters/gry)
[06:40:51] *** Joins: adlternative (~adl@117.32.216.79)
[06:41:48] *** Joins: arcatech (~arcatech@user/arcatech)
[06:43:53] *** Quits: codebam (~codebam@user/codebam) (Remote host closed the connection)
[06:48:41] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 248 seconds)
[06:50:40] *** Quits: Samian (~Sami@2620:10d:c091:480::1:9fe6) (Ping timeout: 240 seconds)
[06:52:05] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:52:05] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (zinc.libera.chat (Nickname regained by services)))
[06:52:05] *** finn_elija is now known as FinnElija
[06:52:30] *** Quits: AnAverageHuman_ (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[06:55:11] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[06:56:24] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Client Quit)
[07:00:37] *** Joins: Samian (~Sami@2620:10d:c091:480::1:9fe6)
[07:08:47] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 245 seconds)
[07:09:26] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: bye)
[07:10:48] *** Quits: dviola (~diego@187.39.20.53) (Changing host)
[07:10:48] *** Joins: dviola (~diego@user/dviola)
[07:13:14] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[07:13:47] *** Joins: Shentino (~shentino@user/shentino)
[07:14:43] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[07:15:41] *** Quits: Shentino (~shentino@user/shentino) (Remote host closed the connection)
[07:20:33] *** Quits: nyah (~nyah@51.146.30.113) (Quit: leaving)
[07:36:23] *** Joins: Shentino (~shentino@user/shentino)
[07:36:39] *** Joins: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24)
[07:37:02] *** Joins: sybariten (~jake@157.90.217.120)
[07:37:45] <sybariten> sooo... i accidentally did a git add of a directory, containing too much stuff that shouldnt be there. so under "changes to be commited" there are some files now that i wouldnt like.
[07:37:51] <sybariten> Can i just undo and restart somehow?
[07:40:09] <sybariten> ok i did git reset /for/each/file.name now, what seemed to work
[07:41:09] *** Joins: travisghansen (~travisgha@192.74.130.86)
[07:48:10] *** Quits: austin987 (~null@2603-8080-2700-d768-0000-0000-0000-0b6a.res6.spectrum.com) (Ping timeout: 240 seconds)
[07:51:25] *** Joins: guy_frm_yogaland (~gourab@2409:4062:2312:877b:f218:e3fb:8a43:9192)
[08:03:27] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:05:19] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[08:18:30] *** Joins: gnoo (~gnoo@user/gnoo)
[08:21:00] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[08:23:43] *** Quits: disi (~disi@c-98-207-149-218.hsd1.ca.comcast.net) (Ping timeout: 246 seconds)
[08:26:14] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[08:26:31] *** Quits: subopt (~subopt@2603-8081-2302-459a-9c73-ee90-251f-9a91.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:30:03] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[08:31:40] *** Quits: Samian (~Sami@2620:10d:c091:480::1:9fe6) (Ping timeout: 240 seconds)
[08:34:36] *** Joins: ByteHackr (~sanroy@43.252.250.113)
[08:36:36] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:37:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24) (Ping timeout: 240 seconds)
[08:38:31] *** Joins: vishal (~vishal@fedora/vishal)
[08:38:46] *** Joins: manin (~x@185.242.190.95)
[09:03:25] *** Quits: furincleavagesit (~textual@45.144.113.151) (Remote host closed the connection)
[09:03:53] *** Joins: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24)
[09:06:47] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[09:07:07] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[09:07:35] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[09:09:54] *** Quits: guy_frm_yogaland (~gourab@2409:4062:2312:877b:f218:e3fb:8a43:9192) (Remote host closed the connection)
[09:10:18] *** Joins: guy_frm_yogaland (~gourab@2409:4062:2312:877b:ef11:58c6:e631:d5d)
[09:10:56] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[09:11:41] *** Joins: ninjin (~ninjin@user/ninjin)
[09:17:20] *** Quits: guy_frm_yogaland (~gourab@2409:4062:2312:877b:ef11:58c6:e631:d5d) (Remote host closed the connection)
[09:17:44] *** Joins: guy_frm_yogaland (~gourab@2409:4062:2084:b2bf:86eb:11c8:b4f9:5e96)
[09:22:36] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:28:47] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 245 seconds)
[09:29:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24) (Ping timeout: 240 seconds)
[09:30:31] *** Joins: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24)
[09:32:36] *** Quits: tkazi (~tkazi@user/tkazi) (Quit: Disconnected)
[09:33:56] *** Joins: tkazi (~tkazi@user/tkazi)
[09:35:27] *** Quits: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24) (Ping timeout: 245 seconds)
[09:41:49] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:49:54] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[09:50:19] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[09:54:43] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[09:59:04] *** Quits: manin (~x@185.242.190.95) (Quit: Leaving)
[10:07:27] *** Joins: mic4ael (~mic4ael@kolodzie-pc.cern.ch)
[10:10:43] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[10:11:40] *** Quits: thiago (~thiago@2601:1c0:4501:635c:fd2f:52f2:8226:97cd) (Ping timeout: 240 seconds)
[10:16:00] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[10:19:45] *** Quits: Gurkenglas_ (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[10:21:18] *** Joins: theoceaniscool (~theoceani@93.177.120.45)
[10:29:25] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:30:47] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:35:02] *** Quits: hbautista (~hbautista@2806:10a6:e:7341::3) (Ping timeout: 245 seconds)
[10:37:55] *** Joins: hbautista (~hbautista@187.171.122.100)
[10:41:55] <Timvde> sybariten: you could also just reset the entore directory next time, depending on what is less work
[10:42:41] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (Quit: ZNC - http://znc.in)
[10:44:11] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[10:44:15] *** Joins: palasso (~palasso@user/palasso)
[10:44:32] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[10:46:17] *** Quits: theoceaniscool (~theoceani@93.177.120.45) (Ping timeout: 245 seconds)
[10:47:50] *** Joins: vysn (~vysn@user/vysn)
[10:48:01] *** Joins: mjbatty_ (~mjbatty@82.2.17.205)
[10:48:10] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:48:37] *** Joins: makara (~sol@196.61.104.101)
[10:50:04] <makara> how is it possible that I could execute this and not get any output?
[10:50:06] <makara> git diff 6b6523ab47d64dc58247cebaaca427bda870d46e..a8ea39e6917a69cc680993d8e48479e60b7f7954
[10:52:06] <makara> if the hashes were invalid id get an error. Diff shows theres no difference between the commits, yet the hash suggests there is
[10:53:20] <ikke> makara: the difference could be in the commit message, timestamps, parents and other things
[10:53:47] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[10:58:51] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:00:23] <makara> what timestamps?
[11:00:36] <ikke> committer, author
[11:00:41] <makara> are you saying commits are not reproducible?
[11:00:43] <ikke> git show --format=fuller <hash>
[11:00:54] <ikke> makara: not by default
[11:01:06] <ikke> When you commit matters
[11:01:54] <ikke> makara: I suspect you should be looking at the tree hashes
[11:02:09] <ikke> If the tree hash is the same, the content is the same
[11:02:55] *** Quits: hbautista (~hbautista@187.171.122.100) (Ping timeout: 268 seconds)
[11:04:25] *** Joins: Wuzzy (~Wuzzy@p5790e35a.dip0.t-ipconnect.de)
[11:05:07] <makara> got it
[11:05:10] <makara> git cat-file tree 6b6523ab47d64dc58247cebaaca427bda870d46e | md5sum
[11:05:13] <makara> thanks
[11:07:04] *** Joins: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr)
[11:07:39] <ikke> why are you taking a md5sum of the tree if you alreayd have a sha1sum?
[11:10:17] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:696d:203d:c02:8bef)
[11:14:43] <bookworm> collision security ;P for the ultra secure version rot13 it a bunch of times, at least 8 should do
[11:16:02] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[11:16:28] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[11:18:47] *** Quits: mjbatty_ (~mjbatty@82.2.17.205) (Ping timeout: 245 seconds)
[11:23:26] *** Quits: adlternative (~adl@117.32.216.79) (Quit: Konversation terminated!)
[11:25:00] *** Joins: theoceaniscool (~theoceani@93.177.120.45)
[11:25:51] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[11:31:23] *** Joins: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24)
[11:33:28] *** Joins: mjbatty_ (~mjbatty@213.205.194.250)
[11:34:15] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[11:34:40] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[11:35:28] *** Lord_of_Life_ is now known as Lord_of_Life
[11:36:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24) (Ping timeout: 240 seconds)
[11:46:26] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[11:47:24] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[11:52:25] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[11:54:48] *** Joins: khear (~khear@91-158-215-118.elisa-laajakaista.fi)
[11:54:54] *** Joins: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24)
[11:55:38] *** Quits: guy_frm_yogaland (~gourab@2409:4062:2084:b2bf:86eb:11c8:b4f9:5e96) (Quit: Konversation terminated!)
[11:57:51] *** Quits: khear (~khear@91-158-215-118.elisa-laajakaista.fi) (Client Quit)
[11:59:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[11:59:01] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 268 seconds)
[12:03:31] *** Joins: jim (~jim@about/linux/staff/jim)
[12:04:44] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[12:05:05] *** Joins: christall (~christall@24.235.88.243)
[12:08:40] *** Joins: guy_frm_yogaland (~gourab@2409:4062:2084:b2bf:86eb:11c8:b4f9:5e96)
[12:09:10] *** Quits: christall (~christall@24.235.88.243) (Ping timeout: 240 seconds)
[12:09:38] *** Joins: fdan (~fdan@192.146.154.3)
[12:10:44] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[12:10:59] *** Quits: justache (~justache@user/justache) (Ping timeout: 252 seconds)
[12:13:02] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[12:18:10] *** Quits: mjbatty_ (~mjbatty@213.205.194.250) (Read error: Connection reset by peer)
[12:22:27] *** Joins: justache (~justache@user/justache)
[12:28:27] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[12:28:49] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:29:35] *** Joins: justache (~justache@user/justache)
[12:31:49] *** Quits: guy_frm_yogaland (~gourab@2409:4062:2084:b2bf:86eb:11c8:b4f9:5e96) (Remote host closed the connection)
[12:32:13] *** Joins: guy_frm_yogaland (~gourab@2409:4062:2084:b2bf:c8f2:cabd:dff:9d77)
[12:37:30] *** Joins: rsx (~dummy@ppp-188-174-137-163.dynamic.mnet-online.de)
[12:41:38] *** Joins: mjbatty_ (~mjbatty@82.2.17.205)
[12:41:40] *** Quits: audiobirb (~audio@2603-8081-1801-3bb5-b85b-ab08-b222-f64f.res6.spectrum.com) (Ping timeout: 240 seconds)
[12:44:00] *** Joins: hornhack (~hackingho@user/hackinghorn)
[12:46:40] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 240 seconds)
[12:52:10] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 240 seconds)
[13:01:13] *** Quits: rovert (uid389732@id-389732.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[13:05:29] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[13:05:36] *** Joins: computeiro (~Wender@189.15.138.22)
[13:06:43] *** Joins: oxymoron93 (~oxymoron9@212.62.38.106)
[13:06:56] *** Quits: wender (~Wender@186.210.45.41) (Ping timeout: 258 seconds)
[13:10:46] <birkoff> how can I discard added updated changes but keep the changed files intact ?
[13:11:10] *** Quits: computeiro (~Wender@189.15.138.22) (Ping timeout: 268 seconds)
[13:11:11] <ikke> birkoff: so you want to unstage changes to a file?
[13:11:29] <birkoff> unstage but keep the files as they were and not restore to some other version
[13:11:38] <ikke> git reset
[13:11:45] <ikke> that will leave the files on disk alone
[13:12:13] <birkoff> with all unstaged modifications intact?
[13:12:21] <ikke> yes
[13:12:39] <birkoff> including conflict resolves?
[13:14:24] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:14:43] <birkoff> wouldn't a simple git reset reset back to HEAD ?
[13:14:58] <ikke> only the staging area
[13:15:06] <ikke> without --hard, it will not touch the workingtree
[13:20:42] *** Joins: baltazaar (~baltazar@91-82-172-59.pool.digikabel.hu)
[13:20:49] <Vipulk> Is it possible to add only few lines of a untracked file to staging area, not as a whole file? I don't want to add whole file to staging, only add few changes.
[13:21:12] <Vipulk> One solution could be, manually remove unwanted changes using text editor and do a commit, then re-enter all content and use git add --patch to control changes which will go staging area.
[13:21:13] *** Joins: rtjure (~rtjure@vlan-153-aitos-30.comnet.bg)
[13:22:14] <canton7> Vipulk, why can't you just use `git add -p`, without manually removing unwanted changes etc?
[13:22:26] <canton7> (or `git gui`  if you've got a desktop environment)
[13:22:31] <Vipulk> But I'm looking for something in which git could help me.
[13:22:39] <ikke> git add -N <new-file>
[13:23:05] <baltazaar> hi! how can I amend a commit in the past, specifically the initial commit? I've found a solution involving an interactive rebase, but that doesn't seem to work with the initial commit, since that has no parent
[13:23:17] <ikke> baltazaar: git rebase -i --root
[13:23:25] <Vipulk> canton7: Because add -p will not work for untracked files.
[13:23:57] <baltazaar> ikke: ah. thanks!
[13:24:12] <ikke> Vipulk: if you use -N (--intent-to-add), you can
[13:27:06] <baltazaar> uh, followup question: running a rebase like this fails, even if I chane nothing. how is that possible?
[13:27:54] <Vipulk> Thank you! looking into git-add(1), what does '-N' do? ikke saw your last message, I was just replying to canton7 message.
[13:28:32] <canton7> baltazaar, are you rebasing history which contains merges?
[13:28:35] *** Joins: natrys (~natrys@user/natrys)
[13:29:31] <baltazaar> canton7: merge commits? sure
[13:29:32] <ikke> Vipulk: It adds a dummy entry into the staging areay for that file, making the file tracked (but it's not fully tracked yet, I believe)
[13:30:05] <canton7> baltazaar, one of the things which rebase does it to linearise merges -- take history which contains merges, and turn it into a single line of linear history
[13:30:25] <canton7> baltazaar, things might work if you use --rebase-merges
[13:31:52] <baltazaar> canton7: ah, I see. yes, I just want to edit a past commit, without changing anything after it
[13:33:49] <baltazaar> nope, it still fails
[13:36:05] *** Quits: guy_frm_yogaland (~gourab@2409:4062:2084:b2bf:c8f2:cabd:dff:9d77) (Remote host closed the connection)
[13:38:20] <canton7> baltazaar, how does it fail, exactly?
[13:39:27] <baltazaar> canton7: CONFLICT (modify/delete): <file> deleted in refs/rewritten/master-2 and modified in HEAD. Version HEAD of <file> left in tree.
[13:40:30] <Vipulk> Okay, thanks everybody.
[13:46:24] *** Joins: randomuser (~randomuse@user/randomuser)
[13:53:25] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[14:02:30] *** Joins: rsrx (~rsrx@103.225.150.81)
[14:05:58] *** Joins: christall (~christall@24.235.88.243)
[14:06:00] *** Quits: rsrx (~rsrx@103.225.150.81) (Client Quit)
[14:06:48] <baltazaar> hm, running `git rebase --root --rebase-merges=rebase-cousins -i` works if I don't change anything
[14:07:21] <baltazaar> however, it still fails once I make the change in the initial commit. (the conflicting file is completely unrelated to the one I'm changing)
[14:08:22] *** Joins: jazzy (~jaziz@172.58.43.173)
[14:08:32] *** Quits: makara (~sol@196.61.104.101) (Ping timeout: 268 seconds)
[14:10:10] *** Quits: christall (~christall@24.235.88.243) (Ping timeout: 240 seconds)
[14:16:30] *** Joins: txtsd (~txtsd@user/txtsd)
[14:23:01] *** Joins: PinealGlandOptic (~PinealGla@37.115.210.35)
[14:23:42] *** Quits: NeoCron (~NeoCron@p200300c4cf4a8400dde9c021b1b0ad3f.dip0.t-ipconnect.de) (Quit: Leaving)
[14:24:12] <j416> why is everyone rebasing merges all the time suddenly o_O
[14:24:45] <j416> avoid rebasing merges, and your life will be easier
[14:25:02] *** Quits: mjbatty_ (~mjbatty@82.2.17.205) (Ping timeout: 245 seconds)
[14:25:12] *** Joins: NeoCron (~NeoCron@p200300c4cf4a8400dde9c021b1b0ad3f.dip0.t-ipconnect.de)
[14:25:24] <baltazaar> I don't wanna rebase merges, I want to rewrite history. but apparently rebase is the way to do that?
[14:25:25] <j416> (yes I read your question, sort of valid I suppose)
[14:25:51] <ikke> baltazaar: what do you want to change?
[14:25:58] <j416> well effectively you do since you want to move all of your history to be on top of a new root commit :)
[14:26:07] *** Joins: mjbatty_ (~mjbatty@82.2.17.205)
[14:26:24] <baltazaar> ikke: I just wanted to delete a single file that's been there since the initial commit, hasn't been changed since, and shouldn't be there
[14:26:40] <ikke> perhaps look at !filter-repo
[14:26:40] <gitinfo> A new git add-on that greatly improves on git-filter-branch: https://github.com/newren/git-filter-repo
[14:26:42] <j416> seems like an easier job for filter-branch, perhaps
[14:26:45] <j416> or that.
[14:28:53] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[14:29:18] *** Joins: jinsun (~quassel@user/jinsun)
[14:29:50] *** Joins: rutaka (~rutaka@2a02:8106:7:7601:716b:ec08:67f7:a1b6)
[14:35:53] <baltazaar> thanks, I'll check those out
[14:44:41] *** Quits: tsdh (~tsdh@j289989.servers.jiffybox.net) (Quit: Goodbye)
[14:44:48] *** Quits: rahl- (~rahl@102.114.101.163) (Remote host closed the connection)
[14:46:24] *** Quits: rutaka (~rutaka@2a02:8106:7:7601:716b:ec08:67f7:a1b6) (Quit: Client closed)
[14:50:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:55:55] *** Quits: PinealGlandOptic (~PinealGla@37.115.210.35) (Quit: leaving)
[14:56:16] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[14:56:51] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[14:57:54] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Remote host closed the connection)
[15:10:18] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:14:01] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[15:17:29] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 248 seconds)
[15:22:16] *** Joins: computeiro (~Wender@189.37.69.241)
[15:23:02] *** Joins: average (uid473595@user/average)
[15:24:19] <lpapp> hi, what is the best way to rebase HEAD~6 and split it into multiple commits?
[15:24:31] <lpapp> at that point, and then apply the next 5 changes on top of the split commits.
[15:25:39] *** Joins: tsdh (~tsdh@j289989.servers.jiffybox.net)
[15:29:59] <canton7> lpapp, rebase -i, 'edit' that commit, reset HEAD^ to get rid of it, then stage/commit as many times as you want, and `git rebase --continue` to replay those next 5 changes back on top of that
[15:32:00] <lpapp> canton7: thanks!
[15:32:35] <lpapp> is it equivalent to soft reset or something else?
[15:34:51] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[15:36:06] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[15:36:26] *** Quits: dsrt^ (~dsrt@209.65.131.194) (Ping timeout: 258 seconds)
[15:39:01] *** Joins: makara (~sol@196.61.111.63)
[15:40:40] *** Joins: Tetractys (~Tetractys@109-93-61-88.dynamic.isp.telekom.rs)
[15:43:19] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:34fb:288e:f5a3:e7be)
[15:43:19] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:34fb:288e:f5a3:e7be) (Changing host)
[15:43:19] *** Joins: skapata (~Skapata@user/skapata)
[15:43:25] *** Joins: masoudd (~masoudd@user/masoudd)
[15:43:43] <osse> reset with no flags is the same as reset --mixed
[15:44:44] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 268 seconds)
[15:46:34] *** Quits: jazzy (~jaziz@172.58.43.173) (Ping timeout: 268 seconds)
[15:48:53] *** Joins: jazzy (~jaziz@172.58.43.167)
[15:53:49] *** Quits: momomo (~momomo@user/momomo) (Quit: Textual IRC Client: www.textualapp.com)
[15:54:12] *** Joins: lgc (~lgc@user/lgc)
[15:55:40] <baltazaar> I've done a `git lfs migrate import` on a repo in hopes of decreasing the size of the git objects, but my .git/objects stayed the same size and now I have .git/lfs as well
[15:56:05] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[15:56:18] <baltazaar> do I have to do anything else? I've tried running gc and prune, but neither helped
[15:56:42] *** Quits: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24) (Ping timeout: 245 seconds)
[15:57:41] <baltazaar> hm, ~80% of my .git/objects' size is .git/objects/pack/pack-d84687a5588469778316f329688c749efb0e6ff6.pack
[15:57:50] <baltazaar> what's that?
[15:58:14] <osse> a file containing many objects
[15:59:00] <ikke> it's an optimization
[15:59:01] <osse> try: git repack -d  and git prune-packed
[15:59:10] <ikke> instead of storing all objects separate, git can pack them together
[15:59:24] <ikke> and using delta-compression, the size is reduced significantly
[15:59:59] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[16:00:12] <baltazaar> well, repack just says "Nothing new to pack.", and prune-packed doesn't seem to do much
[16:02:12] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[16:02:47] <ikke> What do you expect to happen?
[16:03:05] <ikke> In most circumstances, you do not need to run these commands, git will regarly perform these kinds of tasks
[16:05:30] <baltazaar> I assume what's happening is that the files I converted to lfs were in a pack, and they weren't removed from the pack by gc or prune
[16:06:31] <osse> did you remove them from history?
[16:06:35] *** Quits: rtjure (~rtjure@vlan-153-aitos-30.comnet.bg) (Quit: Leaving)
[16:07:14] <baltazaar> I believe so
[16:07:35] <ikke> git does not remove objects newer than 14 days by default
[16:07:50] <ikke> git prune --expire now
[16:08:23] <baltazaar> nope, that doesn't help either
[16:08:32] <baltazaar> can I check if they are removed from history?
[16:08:57] <osse> git ls-tree -r HEAD~100
[16:08:59] <baltazaar> I mean, I'm pretty sure that's what `git lfs migrate import` should do
[16:08:59] <osse> are they there?
[16:09:56] <baltazaar> osse: huh, they are
[16:10:07] <osse> then they were not removed from history
[16:10:13] <osse> they were just removed (I suppose)
[16:10:18] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[16:11:36] <ikke> LFS does not remove objects from history
[16:11:41] <ikke> it does not rewrite your history
[16:11:41] *** Joins: rtjure (~rtjure@vlan-153-aitos-30.comnet.bg)
[16:11:49] <ikke> It can only prevent new objects from being added
[16:12:56] <baltazaar> ikke: well, the migrate command does seem to do that
[16:13:16] <baltazaar> from the manpage: > The 'import' mode migrates large objects present in the Git history to pointer files tracked and stored with Git LFS.
[16:14:24] <baltazaar> and it most certainly did rewrite history, since I now have a .gitattributes whichever commit I check out (I didn't have one before)
[16:14:30] <ikke> ok
[16:14:53] <ikke> There is still the reflog
[16:15:15] <ikke> That will keep the old history referenced for 90 days
[16:15:38] <ikke> git reflog --expire=now
[16:16:16] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[16:16:20] <j416> baltazaar: simply cloning the repo will get rid of anything that's not referenced
[16:16:30] <baltazaar> ikke: didn't help either
[16:16:42] <ikke> After that, you need to run git gc
[16:16:55] <baltazaar> did that
[16:16:59] <ikke> git gc --prune=now
[16:17:08] <j416> baltazaar: although as hinted above, if they are indeed not referenced, these objects will get deleted in time anyway, so unless you're alarmingly short on diskspace I'd leave it be and let time handle it
[16:17:50] <baltazaar> j416: I just want to make sure that they aren't referenced
[16:18:04] <j416> I'd just clone the repo and check if the object was there
[16:18:06] <ikke> easy way to verify is to clone it indeed
[16:18:59] <baltazaar> alright, I'll try that
[16:23:10] *** Joins: roadie (~user@2a02:8108:ec0:1427:c5af:e4b5:208e:fb24)
[16:28:30] *** Joins: humanface (~humanface@20014C4E1C5140007060EC6CD0DEC83F.dsl.pool.telekom.hu)
[16:29:26] <baltazaar> huh alright, it did work
[16:29:27] <baltazaar> thanks
[16:31:00] <baltazaar> ah, except it messed up all the signed commits
[16:32:41] <ikke> yes, by definition
[16:32:48] <ikke> you cannot rewrite history and retain signatures
[16:33:19] <baltazaar> well, but usually when I rebase, the new commits get signed by my key
[16:33:45] <j416> are all commits yours?
[16:33:51] <baltazaar> nope
[16:34:10] <j416> rebasing other people's commits and signing them at that sounds like a bit of a bad habit tbh
[16:34:25] <ikke> j416: you _do_ become the committer though
[16:34:38] <baltazaar> j416: kinda, but it seemed to be the default
[16:34:50] <j416> there was this article I read about signing commits, where someone had done something similar and ended up with a commit that they had signed, which did something malicious
[16:34:54] <j416> kind of a pinch innit
[16:35:03] <j416> baltazaar: the default is not to sign at all
[16:35:04] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:35:15] <baltazaar> ok, other than enabling signing by default
[16:35:15] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[16:35:28] <j416> anyway, that's a different discussion. :D
[16:35:38] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[16:35:44] <j416> (I'm not a fan of signing commits, also it makes them unnecessarily large)
[16:36:06] <baltazaar> either way, I can assume I trust all these commits, so signing them would be safe
[16:36:33] <baltazaar> but I'd also be happy with just stripping the signatures altogether, since most other committers in this repo don't sign commits anyway
[16:37:07] <j416> signing the latest commit should be enough unless you base work on earlier commits
[16:37:27] <j416> (because signing one commit effectively includes all commits before it)
[16:39:36] *** Joins: jla (~jordi@64.225.79.195)
[16:39:54] <jla>  umh... why is git complaining about  (Emacs) 'places' changes not staged while this file is being listed in .gitignore ?
[16:40:18] <j416> jla: ignore rules don't apply to tracked files. Delete it first.
[16:44:04] <Nomikos> if you want to keep the contents of the file, use `git rm --cached <file>`
[16:47:13] <jaggz> on a production server, how might web or server-based projects be managed?  For instance, do they sometimes keep a copy of a repo and have the "production" branch, then work in their dev and beta branches (possibly on other servers), then switch the server over to a fully-tested beta branch?  (so they can just check back out the old-stable-production branch if something's broken and needs time to fix?)
[16:48:18] *** Joins: sQVe (~sQVe@user/sqve)
[17:00:36] *** Joins: christall (~christall@24.235.88.243)
[17:01:40] <j416> jaggz: I wouldn't work on a server to begin with; dev is local, deploy to a server when things are ready.
[17:03:16] *** Joins: pulse (~pulse@user/pulse)
[17:03:49] <j416> jaggz: often, you would use a CI system to handle the deploy to a cloud-based server. If you run your own server, you could set up something similar where you either have a hook on the server that does the deploy (i.e. puts the right files in the right directory), or for a simpler setup you could just set something up to say, rsync your files over.
[17:04:09] <j416> I haven't read this but I believe it has some ideas -> !deploy
[17:04:09] <gitinfo> Git is not a deployment tool, but you can build one around it (in simple environments) or use it as an object store(for complex ones). Here are some options/ideas to get you started: http://gitolite.com/deploy.html
[17:08:11] *** Joins: Bayes (~Bayes@ics177-97.icsincorporated.com)
[17:08:20] *** Quits: Bayes (~Bayes@ics177-97.icsincorporated.com) (Changing host)
[17:08:20] *** Joins: Bayes (~Bayes@user/bayes)
[17:14:12] *** Joins: rutaka (~rutaka@2a02:8106:7:7601:716b:ec08:67f7:a1b6)
[17:18:59] <jaggz> j416, I guess I need to learn about CI
[17:20:45] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[17:20:54] *** Joins: christall (~christall@24.235.88.243)
[17:22:01] *** Quits: rutaka (~rutaka@2a02:8106:7:7601:716b:ec08:67f7:a1b6) (Ping timeout: 246 seconds)
[17:22:37] <j416> jaggz: GitHub Actions is a popular one nowadays.
[17:22:49] <j416> jaggz: Travis CI, Circle CI, are examples of others.
[17:22:56] <ikke> Gitlab CI :)
[17:28:04] *** Quits: mutandis (~mut@c-73-129-211-144.hsd1.md.comcast.net) (Quit: zzzz)
[17:32:50] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[17:35:42] *** Parts: DevAntoine (~DevAntoin@195.101.183.21) (Leaving...)
[17:38:57] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[17:39:10] *** Quits: Tobbi_ (~Thunderbi@62.214.69.130) (Quit: Tobbi_)
[17:41:03] *** Quits: oxymoron93 (~oxymoron9@212.62.38.106) (Quit: Client closed)
[17:42:20] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:bd63:9569:9d30:b6b)
[17:42:55] *** Quits: humanface (~humanface@20014C4E1C5140007060EC6CD0DEC83F.dsl.pool.telekom.hu) (Quit: Client closed)
[17:43:28] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[17:44:53] *** Joins: Tobbi_ (~Thunderbi@62.214.69.130)
[17:48:24] *** Quits: Xenguy (~Xenguy@devuan/developer/Xenguy) (Quit: Leaving)
[17:59:43] *** Joins: oxymoron93 (~oxymoron9@212.62.38.106)
[18:00:22] *** Joins: Misotaur- (~Misotauro@193-181-35-235.cust.norisab.com)
[18:00:27] *** Quits: Misotauros (~Misotauro@193-181-35-251.cust.norisab.com) (Ping timeout: 245 seconds)
[18:01:08] *** Joins: humanface (~humanface@20014C4E1C5140007060EC6CD0DEC83F.dsl.pool.telekom.hu)
[18:10:21] *** Quits: hydrian (~hydrian@024-151-106-227.res.spectrum.com) (Quit: Leaving)
[18:13:36] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:bd63:9569:9d30:b6b) (Quit: Textual IRC Client: www.textualapp.com)
[18:15:55] *** Quits: humanface (~humanface@20014C4E1C5140007060EC6CD0DEC83F.dsl.pool.telekom.hu) (Quit: Client closed)
[18:16:09] *** Quits: randomuser (~randomuse@user/randomuser) (Ping timeout: 248 seconds)
[18:17:16] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:18:35] *** Joins: drogas (~drogas@jump2.jet.uk)
[18:35:47] *** Joins: Guest93 (~Guest93@92.40.178.18.threembb.co.uk)
[18:37:01] *** Quits: Guest93 (~Guest93@92.40.178.18.threembb.co.uk) (Client Quit)
[18:39:17] *** Joins: yates_home (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com)
[18:39:39] *** Joins: Guest9668 (~Guest96@69.160.255.133)
[18:39:51] <yates_home> is there a way to determine which branch a commit hash is in?
[18:40:01] <j416> yates_home: git branch --contains <hash>
[18:41:31] <yates_home> i get "master" but the commit was three years ago and pretty sure this was released since.. ?
[18:41:41] <yates_home> i'm lookging at the gcc repo
[18:42:23] <j416> yates_home: git branch -a --contains <hash>
[18:42:25] <osse> maybe you want git atg --contains ?
[18:42:27] <osse> tag
[18:42:48] <yates_home> git://gcc.gnu.org/git/gcc.git
[18:43:13] <yates_home> ah yes -a did the trick
[18:43:21] <yates_home> thank you
[18:43:26] <j416> o/
[18:45:23] *** Joins: randomuser (~randomuse@user/randomuser)
[18:47:05] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 248 seconds)
[18:50:35] *** Joins: humanface (~humanface@20014C4E1C5140007060EC6CD0DEC83F.unconfigured.pool.telekom.hu)
[18:50:47] *** Joins: subopt (~subopt@2603-8081-2302-459a-9c73-ee90-251f-9a91.res6.spectrum.com)
[18:50:56] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[18:51:13] *** Joins: pulse (~pulse@user/pulse)
[18:52:09] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[18:52:26] *** Joins: pulse (~pulse@user/pulse)
[18:53:11] *** Quits: jazzy (~jaziz@172.58.43.167) (Quit: Beddie bye-bye)
[18:54:30] *** Quits: oxymoron93 (~oxymoron9@212.62.38.106) (Quit: Client closed)
[18:55:10] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 240 seconds)
[19:00:15] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[19:03:06] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:bd63:9569:9d30:b6b)
[19:05:55] *** Joins: jla (~jordi@64.225.79.195)
[19:06:52] *** Joins: Lope (~lope@user/lope)
[19:07:12] <Lope> I accidentally ran `git restore *.js` instead of `git restore --stages *.js`
[19:07:24] <Lope> it *seems* like nothing happened, but I'm not 100% sure.
[19:07:27] *** Joins: oxymoron93 (~oxymoron9@212.62.38.106)
[19:07:39] <Lope> What does `git restore *.js` do?
[19:08:05] <Lope> Git 2.30.2
[19:08:30] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[19:09:15] <Lope> oh shit
[19:09:18] <Lope> I see what it did
[19:09:26] <Lope> it killed my changes!!
[19:09:28] <ikke> Bad news
[19:09:33] <Lope> is there any way to recover?
[19:09:40] <ikke> and that for a command called 'restore' 🤔
[19:09:45] *** Joins: thiago (~thiago@2601:1c0:4501:635c:fd2f:52f2:8226:97cd)
[19:10:13] <Lope> ikke, please tell me I can undo that?
[19:10:45] <ikke> not trivially, I'm afraid
[19:10:49] <Lope> I'm surprised it can be so destructive without --hard
[19:10:54] <Lope> or some such.
[19:10:55] <j416> !backup
[19:10:55] <gitinfo> Worried about your data while trying stuff out in your repo? The repository in its entirety lives inside the .git directory in the root of your work tree so to backup everything `cp -a path/to/workdir path/to/backup` or equivalent will suffice as long as the repo is not modified during backup. See also http://sethrobertson.github.com/GitBestPractices/#backups
[19:11:21] <ikke> Lope: were all your changes staged?
[19:11:28] <ikke> before you ran that command
[19:11:28] <j416> it's a good idea to keep things committed /captain hindsight
[19:12:08] <j416> Lope: could be that your editor has the data in its buffer or undo history; might be a last resort
[19:12:10] <Lope> My changes were staged, then I unstaged them
[19:12:15] *** Joins: natrys (~natrys@user/natrys)
[19:12:24] <ikke> git fsck --lost-found
[19:12:30] <Lope> then I accidentally ran `git restore *.js`
[19:12:44] <j416> ^ then go through the objects to see if you find your file
[19:13:08] <Lope> j416, haha, the undo of my editor actually recovered one file so far. Let me see what else it can recover.
[19:13:15] <Lope> Damn this git restore shit is dangerous.
[19:13:32] <Lope> I think I'll map an alias and use that instead.
[19:13:39] <Lope> so I don't forget --staged again.
[19:14:05] <j416> Lope: you can always redo commits later; good idea is to just commit everything every now and then, then go back and fix the commit history later. Git makes for a wonderful undo tool.
[19:14:19] <j416> that's at least how I work.
[19:14:25] <Lope> j416, I try to make my commits clean
[19:14:51] <Lope> I don't know if I'm using git wrong, but I try to commit code that is limited to a specific concept per commit.
[19:14:53] *** Joins: ouzel8_ (~ouzel8_@shams.boastblast.com)
[19:14:57] <Lope> and try to test code before I commit it.
[19:15:10] *** Quits: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3) (Ping timeout: 240 seconds)
[19:15:14] <Lope> with the idea that hopefully all commits are sort of working code.
[19:15:15] <j416> sure, I do that, but only after I'm done implementing something
[19:15:27] <Lope> instead of just committing loads of junk with only a few commits being working code.
[19:15:49] <Lope> j416, does that mean you somehow delete commits?
[19:15:51] <ouzel8_> Hi everybody!
[19:16:34] <j416> Lope: this is a typical commit history of a work-in-progress branch, in my workflow https://x0.at/SpIq.txt
[19:16:47] <j416> Lope: when done, I just squash those wip commits into good commits
[19:17:04] <ikke> Lope: in the future, if you want to just unstage, git reset safe
[19:17:23] <ouzel8_> I am using git on ubuntu, I have just created a repo on github. I added to the remote, now I want to set the upstream.
[19:18:03] <ouzel8_> `git branch --set-upstream-to=origin/main`
[19:18:22] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 245 seconds)
[19:18:27] <Lope> ikke, so `git reset safe` will unstage everything?
[19:18:36] <Lope> ikke, that's actually what I want to do, usually.
[19:18:38] <ouzel8_> fatal: branch 'master' does not exist
[19:18:54] <Lope> ikke, this lost and found thing is cool, pity the filenames are nonsensical
[19:18:56] <ikke> Lope: just `git reset` or `git reset *.js`
[19:19:01] <ouzel8_> I am aware that recently the master branch was renamed to main.
[19:19:08] <Lope> would have been cool if it had the real filenames in the other/ dir.
[19:19:09] <selckin> ouzel8_: did you fetch
[19:19:15] *** Quits: hornhack (~hackingho@user/hackinghorn) (Remote host closed the connection)
[19:19:16] <ikke> Lope: that's because blobs (file contents) don't have filenames
[19:19:29] <Lope> yeah, I figured. WOuld be cool if they did :)
[19:19:49] <ouzel8_> @selckin, No I have not
[19:19:53] <Lope> But I know git tracks code independently of filenames... but still, would be cool to have the metadata for lost-found
[19:20:11] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:22:50] <ouzel8_> selckin: Alright I have tried fetching it does not change. Any ideas?
[19:23:32] <Lope> lost-found is gold, thanks ikke j416
[19:23:59] <ikke> Lope: glad you found your files back
[19:24:13] <Lope> thanks, still working on it, but it's looking like it will be okay :)
[19:24:31] *** Quits: Guest9668 (~Guest96@69.160.255.133) (Ping timeout: 246 seconds)
[19:26:34] <j416> \^^/
[19:27:00] <j416> and thanks for keeping the 4-chars nick rule
[19:27:08] <j416> makes text line up nicely here
[19:27:11] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[19:27:42] <ouzel8_> Alright, I have updated the git tool to the latest version, now when initialising a repo it warns me about this `git config --global init.defaultBranch <name>`
[19:27:47] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[19:27:52] *** Quits: oxymoron93 (~oxymoron9@212.62.38.106) (Quit: Client closed)
[19:28:11] <j416> ouzel8_: did you read the warning?
[19:28:42] <ouzel8_> j416: Yes, I will set the default name to main
[19:28:48] <j416> fancy
[19:29:18] <j416> does the warning still say that the name 'master' is "subject to change"?
[19:29:55] <ouzel8_> j416: `This default branch name
[19:29:55] <ouzel8_> hint: is subject to change`
[19:30:10] <j416> right. same then. ty
[19:30:25] <j416> (just wondering when it'll change, if ever)
[19:30:39] <j416> in git, that is
[19:30:41] *** Parts: ksynwa (~ksynwa@v2202009129512127397.nicesrv.de) (WeeChat 2.8)
[19:30:43] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[19:31:35] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[19:32:13] <ouzel8_> so is the standard master branch going to have its name changed to main, or is it going to be an arbitrary choice for the developers who initialise the git repo?
[19:32:57] <j416> I don't know what the plan is
[19:34:30] *** Joins: hornhack (~hackingho@user/hackinghorn)
[19:35:24] *** Quits: ByteHackr (~sanroy@43.252.250.113) (Quit: Leaving)
[19:36:50] *** Parts: Tuor (~quassel@user/tuor) (https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:37:10] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 240 seconds)
[19:37:52] *** Joins: fdan (~fdan@192.146.154.3)
[19:38:16] *** Quits: fdan (~fdan@192.146.154.3) (Client Quit)
[19:38:39] *** Joins: fdan (~fdan@192.146.154.3)
[19:39:41] <Lope> ikke, j416 my most recent substantial file, luckily was in my code editor's undo. 2 files had trivial 1-2 line changes that I just re-coded. One file I was able to figure out the missing params. Finally there are 2 files that are totally lost, but I haven't worked on them for a few days, so will be in a system backup from a few days ago :)
[19:39:53] *** Quits: hornhack (~hackingho@user/hackinghorn) (Ping timeout: 248 seconds)
[19:39:54] <Lope> hahaha fucking git restore. Definitely will only use an alias for it now.
[19:40:14] <ikke> Lope: note that the same could have happened with git checkout
[19:40:14] <j416> still though. commit :)
[19:40:34] <j416> or reset, or clean, or other commands
[19:40:45] <ikke> reset required --hard, clean requires -f
[19:40:48] <ikke> requires*
[19:40:52] <j416> nod
[19:41:21] <osse> the trick is to do grep in the lost-found directory
[19:41:47] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:bd63:9569:9d30:b6b) (Quit: Textual IRC Client: www.textualapp.com)
[19:42:18] <Lope> ikke, surely you have to do a --hard or something with checkout?
[19:42:33] <Lope> I don't generally checkout when I've got a dirty working copy.
[19:42:42] <j416> Lope: just giving it a path will cause it to happily overwrite
[19:43:13] <Lope> yeah, luckily it's not part of my workflow.
[19:43:17] <Lope> but thanks for the heads up.
[19:43:21] <Lope> Glad I do backups.
[19:43:25] <Lope> *pats self on back*
[19:45:45] *** Quits: Lunatrius (~Lunatrius@77.38.22.128) (Ping timeout: 248 seconds)
[19:46:10] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Ping timeout: 240 seconds)
[19:46:13] *** Joins: Lunatrius (~Lunatrius@77.38.22.128)
[19:48:14] *** Quits: sQVe (~sQVe@user/sqve) (Quit: Bye!)
[19:49:14] *** Joins: nate1 (~nate@2600:1010:b02a:2679:7ca9:9738:1435:e8d1)
[19:51:18] *** Joins: gast0n (~g4570n@user/gast0n)
[19:53:13] *** Quits: madewokherd (~urk@65-128-171-161.mpls.qwest.net) (Quit: If your computer stops responding for a long time, turn it off and then back on.)
[19:53:24] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[19:58:28] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[20:00:01] *** Joins: beshr (~beshr@user/beshr)
[20:01:10] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 240 seconds)
[20:05:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[20:05:41] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[20:07:44] *** Gustavo6046_ is now known as Gustavo6046
[20:14:07] *** Joins: austin987 (~null@100.42.98.196)
[20:15:32] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[20:16:10] *** Quits: nate1 (~nate@2600:1010:b02a:2679:7ca9:9738:1435:e8d1) (Ping timeout: 240 seconds)
[20:17:22] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[20:18:19] *** Quits: Tetractys (~Tetractys@109-93-61-88.dynamic.isp.telekom.rs) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:18:36] *** Joins: Bayes39 (~Bayes@ics177-97.icsincorporated.com)
[20:18:38] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[20:18:53] *** Quits: Bayes39 (~Bayes@ics177-97.icsincorporated.com) (Client Quit)
[20:19:24] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 252 seconds)
[20:21:39] *** Joins: madewokherd (~urk@comcast.codeweavers.com)
[20:23:11] *** Joins: Tetractys (~Tetractys@109-93-61-88.dynamic.isp.telekom.rs)
[20:23:27] *** Joins: momomo (~momomo@user/momomo)
[20:26:31] *** Joins: ByteHackr (~sanroy@43.252.250.113)
[20:27:57] *** Quits: ByteHackr (~sanroy@43.252.250.113) (Client Quit)
[20:28:15] *** Joins: ByteHackr (~sanroy@43.252.250.113)
[20:30:26] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[20:31:10] *** Quits: theoceaniscool (~theoceani@93.177.120.45) (Ping timeout: 240 seconds)
[20:35:05] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[20:35:19] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[20:35:52] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[20:36:50] *** Joins: DoofusCanadensis (~DoofusCan@208.38.34.74)
[20:39:08] *** Joins: Betal (~Betal@user/betal)
[20:40:37] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 252 seconds)
[20:42:51] *** Joins: disi (~disi@c-98-207-149-218.hsd1.ca.comcast.net)
[20:44:09] *** Joins: jla (~jordi@64.225.79.195)
[20:45:10] *** Joins: manin (~x@185.242.190.95)
[20:45:53] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[20:47:05] *** Joins: kdsch (~kdsch@89.45.224.122)
[20:49:51] *** Quits: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr) (Remote host closed the connection)
[20:54:00] *** Joins: orbyt (~textual@172.92.4.78)
[20:54:59] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:55:35] *** Parts: lessless (~lessless@ip.82.144.211.11.stat.volia.net) (Textual IRC Client: www.textualapp.com)
[20:56:10] *** Quits: lgc (~lgc@user/lgc) (Ping timeout: 240 seconds)
[21:01:40] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[21:01:56] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[21:10:50] *** Joins: daoudr_ (~daoudr@101.17.104.92.dynamic.wline.res.cust.swisscom.ch)
[21:12:40] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:696d:203d:c02:8bef) (Ping timeout: 240 seconds)
[21:13:16] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[21:14:38] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[21:20:17] *** Joins: codebam (~codebam@user/codebam)
[21:24:01] *** Quits: kdsch (~kdsch@89.45.224.122) (Quit: WeeChat 2.8)
[21:24:17] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[21:27:33] *** Joins: gast0n (~g4570n@user/gast0n)
[21:28:00] *** Quits: ByteHackr (~sanroy@43.252.250.113) (Quit: Leaving)
[21:28:09] *** Quits: wgrant (~wgrant@ubuntu/member/wgrant) (Ping timeout: 248 seconds)
[21:28:12] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[21:29:07] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[21:29:44] *** Joins: natrys (~natrys@user/natrys)
[21:31:19] *** Quits: orbyt (~textual@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:33:06] *** Joins: orbyt (~textual@172.92.4.78)
[21:33:29] *** Joins: kdsch (~kdsch@89.45.224.122)
[21:35:16] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:35:37] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[21:36:56] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[21:37:26] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[21:37:57] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:38:09] *** CommunistWolf is now known as slime-mould
[21:38:27] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:39:26] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[21:40:07] <Swahili> Q: A directory was renamed. On conflict during a rebase what's the best strategy to solve this?
[21:40:12] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:40:28] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:40:44] <Swahili> thinking about it, just realise that maybe --abort first, rename it, move the rename commit as earlier as possible and start rebase
[21:41:01] *** Joins: jinsun (~quassel@user/jinsun)
[21:41:58] <Swahili> meh, or maybe not. any suggestion are appreciated, thanks!
[21:42:54] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:43:45] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:45:56] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:46:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:47:40] *** Quits: kobaz_ (~kobaz@modemcable215.109-20-96.mc.videotron.ca) (Ping timeout: 240 seconds)
[21:47:48] *** Quits: DoofusCanadensis (~DoofusCan@208.38.34.74) (Quit: So as you can see from this flowchSQUIRREL!!)
[21:47:57] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 245 seconds)
[21:50:13] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:50:50] *** Quits: mjbatty_ (~mjbatty@82.2.17.205) (Quit: Leaving)
[21:50:52] *** Joins: Samian (~Sami@2620:10d:c091:480::1:4ae4)
[21:52:15] *** Quits: kdsch (~kdsch@89.45.224.122) (Quit: WeeChat 2.8)
[21:56:21] *** Joins: Narrat (~omnius@p200300df5f15173406ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:57:14] *** Quits: rsx (~dummy@ppp-188-174-137-163.dynamic.mnet-online.de) (Quit: rsx)
[21:57:38] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[21:58:07] *** Joins: christall (~christall@24.235.88.243)
[22:00:30] *** Quits: christall (~christall@24.235.88.243) (Remote host closed the connection)
[22:01:12] *** Joins: fef (~thedawn@user/thedawn)
[22:01:38] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[22:02:43] *** Joins: christall (~christall@24.235.88.243)
[22:08:36] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[22:11:14] *** Joins: molt (~molt@79.140.150.21)
[22:12:40] *** Joins: sszark (~sszark@h-155-4-128-59.NA.cust.bahnhof.se)
[22:14:20] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 258 seconds)
[22:14:34] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[22:15:48] *** Joins: Windy (~windy@user/windy)
[22:16:15] *** Joins: txtsd (~txtsd@user/txtsd)
[22:16:26] <Windy> is there a command to return a repo to the state at a previous commit?  i have the ID just dont' know if i have to revert each subsequent commit individually ?
[22:18:41] *** Quits: Tetractys (~Tetractys@109-93-61-88.dynamic.isp.telekom.rs) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:18:49] *** Quits: makara (~sol@196.61.111.63) (Ping timeout: 248 seconds)
[22:19:34] *** Joins: Tetractys (~Tetractys@109-93-61-88.dynamic.isp.telekom.rs)
[22:20:55] <nedbat> Windy: git reset --hard THE_ID   # will do it.
[22:21:30] <Windy> thanks nedbat
[22:21:41] <Windy> i need to spend some serious time learning git
[22:21:46] <j416> !book
[22:21:46] <gitinfo> There are several good books available about git; 'Pro Git' is probably the best: https://git-scm.com/book but also look at !bottomup !cs !gcs !designers !gitt !vcbe and !parable
[22:22:02] <j416> a couple of days should suffice
[22:22:44] *** Joins: reis-r (~reis-r@131.72.121.3)
[22:31:23] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[22:35:01] <Windy> i wonder if anybody gamified it yet, that might help for me :)
[22:35:01] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[22:35:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:35:32] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[22:36:01] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[22:36:21] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[22:37:08] <lpapp> hi, if there is a branch, and then there is another branch off of that, with multiple commits added to the second branch, then the first ("parent") branch gets rebased, what is the best way to replay the changes in the second branch on top of the rebased first?
[22:37:24] <lpapp> git format-patch would work manually, I guess, but was wondering if there is a nicer approach.
[22:38:41] <lpapp> I am not sure if git rebase first-branch would simply update the squashes from the first branch in the second and replay the changes in the second-branch on top of those rebased commits.
[22:44:11] *** Quits: Windy (~windy@user/windy) (Read error: Connection reset by peer)
[22:44:35] *** Joins: Windy (~windy@user/windy)
[22:47:28] *** Joins: pizdets_ (~pizdets@183.182.111.5)
[22:47:31] *** Quits: Tetractys (~Tetractys@109-93-61-88.dynamic.isp.telekom.rs) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:47:46] *** Quits: pizdets (~pizdets@183.182.115.82) (Ping timeout: 268 seconds)
[22:49:01] *** Joins: Guest8 (~Guest8@92.82.199.32)
[22:49:15] <Guest8> Hi. I've hit a Runtime error during Git 2.33.0 Setup
[22:49:34] <ikke> I assume this is about github-for-windows?
[22:49:40] <Guest8> ah yes
[22:50:05] <Guest8> "Runtime error (at 325:19181) Could not call proc." during  "Initializing Explorer Integration" in Windows 7 64bit
[22:51:28] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 268 seconds)
[22:52:50] <Guest8> There's nothing interesting in Event Viewer related to it. I guess for me it doesn't really matter. But if you need more info let me know?
[22:53:59] <ikke> https://github.com/git-for-windows/git/issues/3368
[22:54:47] <Guest8> that's the one! how did you find it? it's not like searchable
[22:54:58] *** Joins: johannespirmann (~johannesp@p200300f467023e72adb23bda3a986ae4.dip0.t-ipconnect.de)
[22:55:01] <Guest8> also didn't know it had a github issues
[22:55:08] <ikke> Just looked here https://github.com/git-for-windows/git/issues
[22:55:16] <ikke> 3rd from top
[22:55:17] <Guest8> cool, thanks
[22:57:03] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[22:59:06] *** Quits: Guest8 (~Guest8@92.82.199.32) (Quit: Client closed)
[22:59:31] <Windy> https://ohmygit.org/ is at least one gamified tutorial
[23:04:04] *** Joins: R2robot_ (~R2robot@user/r2robot)
[23:05:27] *** Quits: R2robot (~R2robot@user/r2robot) (Ping timeout: 245 seconds)
[23:09:44] *** Joins: R2robot (~R2robot@user/r2robot)
[23:10:00] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[23:10:27] *** Quits: Narrat (~omnius@p200300df5f15173406ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[23:10:50] *** Joins: Narrat (~omnius@p200300df5f15173406ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:12:10] *** Quits: R2robot_ (~R2robot@user/r2robot) (Ping timeout: 240 seconds)
[23:15:06] *** Misotaur- is now known as Misotauros
[23:17:13] *** Quits: computeiro (~Wender@189.37.69.241) (Quit: Leaving)
[23:17:24] *** Joins: AMPed (~user@ip72-217-90-246.ph.ph.cox.net)
[23:19:07] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[23:19:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:25:23] *** Quits: dviola (~diego@user/dviola) (Ping timeout: 268 seconds)
[23:26:11] *** Joins: dviola (~diego@187.39.20.53)
[23:32:34] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[23:37:33] *** Quits: johannespirmann (~johannesp@p200300f467023e72adb23bda3a986ae4.dip0.t-ipconnect.de) (Quit: Leaving...)
[23:38:08] *** Joins: isemenov (~isemenov_@83.149.45.7)
[23:38:15] <isemenov> hi all!
[23:38:35] <isemenov> I believe I have a rather non-standard usecase, but I hope it's possible to solve
[23:39:39] <isemenov> suppose that when a project was just starting, and there were only one or two branches, someone committed a very large file. then they deleted it, but of course the data is now included in the checkout
[23:39:50] <isemenov> then, many branches proliferated on top of that single branch
[23:41:02] <isemenov> now a simple git rebase -i does not work, because there a multiple branches on top of that branch, many merges, and obviously some fixed conflicts and/or amends, because git --rebase-merges doesn't work, either
[23:41:49] <isemenov> is it possible via maybe git filter to remove said commit (with the goal of running git gc on the repo afterwards to remove that junk blob) *without* recreating every other branch?
[23:45:31] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:49:24] <osse> isemenov: pretend that huge file is sensitive and follow this guide
[23:49:26] <osse> !sensitive
[23:49:26] <gitinfo> [!filter_sensitive] You can use filter-branch to remove sensitive data from a repository's history. https://help.github.com/articles/remove-sensitive-data/
[23:50:13] <osse> note that filter-branch is de facto superceded by filter-repo: https://github.com/newren/git-filter-repo
[23:51:07] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[23:51:21] <j416> (except that doesn't come bundled with git, but does come bundled with some magic that may or may not be to your liking ymmv)
[23:51:28] <osse> what you are describing is a fairly common case for this sort of utils
[23:52:25] *** slime-mould is now known as CommunistWolf
[23:56:42] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[23:56:53] <baltazaar> by the way, is there a chance that stuff like filter-repo or lfs makes it into git?
[23:57:37] <ikke> baltazaar: no, not really
[23:57:43] <ikke> They are separate projects
[23:57:51] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:58:11] <baltazaar> real shame
[23:58:53] <mackerman> Doesn't need to have the same maintainers or in the same release to be a good tool
