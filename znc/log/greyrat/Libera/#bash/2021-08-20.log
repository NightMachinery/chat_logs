[00:00:11] *** Joins: infernix (nix@spirit.infernix.net)
[00:00:13] <FreeBDSM> that's already the case: bash uses globs the way it likes, zsh does it differently; lots of utils probably have their own expansion as well (I dunno about that really); you call sudo expecting "I have access to the full filesystem" but get failure
[00:00:42] <FreeBDSM> well, I doubt that if things were different in that regard - that'd be more hell than the current state of things
[00:00:44] <tirnanog> not it's not.
[00:00:56] <FreeBDSM> but that's subjective, no point in arguing, I guess
[00:01:04] <tirnanog> the fact that the shell performs pathname expansion as an early phase of processing a simple command is exactly what makes them generally applicable and useful.
[00:01:48] <tirnanog> anyway, either login as root, or instruct sudo to actually execute a shell. the former would obviously be simpler.
[00:03:01] <FreeBDSM> Thanks. So sometimes writing 'bicycles' and 'crutches' is the way.
[00:03:31] <geirha> yeah, very few commands parse globs. Of the standard commands, pretty much only sh and find parse globs in some way
[00:04:02] <tirnanog> you'd be screaming blue bloody murder were it otherwise. you can believe that.
[00:04:08] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[00:04:10] <geirha> maybe also make
[00:04:22] *** Joins: ano (~weechat@user/ano)
[00:04:31] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[00:05:25] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[00:06:15] *** Joins: tp43_ (~ndeem@2001:1970:501a:e201:7dd8:7bb5:b166:9697)
[00:06:17] <FreeBDSM> tirnanog: maybe (in that case I probably just don't understand why it would be so). Weird that no one thought of some option or something like 'shopt -s passglobexpansiontosudo` or something.
[00:06:42] <FreeBDSM> geirha: what about sed/awk?
[00:06:49] <geirha> they use regex
[00:07:12] <geirha> and not to match filenames
[00:07:29] <tirnanog> sudo doesn't give a damn about globs. and sudo is not special to begin with.
[00:08:21] <FreeBDSM> sudo raises permissions, so it's important that the same glob may have different outcomes depending on the currently active permissions set
[00:08:36] <tirnanog> the problem isn't in the conveyance but that you don't have permission to list the necessary entries of the relevant directory - or directories - to begin with.
[00:08:57] <geirha> if you need pathname expansion with sudo, just run a shell with sudo to do the pathname expansion in
[00:09:04] <FreeBDSM> just what I wrote. Me - I don't have permissions, but I ask sudo and he does.
[00:09:08] <tirnanog> or log in as root if you want to do 'root' things.
[00:09:43] <FreeBDSM> yeah, I already understood it, thanks, I just find this approach comparable to a 'crutch' for some mechanism
[00:10:04] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[00:10:11] <FreeBDSM> (dunno if you understand what I mean or whether this comparison makes sense only in my native language)
[00:10:25] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:10:26] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[00:10:30] <geirha> doesn't make much sense to me
[00:10:37] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[00:10:48] *** Joins: goldfish (~goldfish@user/goldfish)
[00:10:50] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[00:11:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[00:11:13] <tirnanog> passglobexpansiontosudo would be the most absurd crutch imaginable. you'd basically be asking for an option whereby the lexer treads "sudo" as being special as part of a simple command and with the shell suddenly elevating itself to being the root user (how?) just to expand the glob, dropping privileges again just before it executes the sudo command.
[00:11:48] <FreeBDSM> geirha: huh, never thought of it before. In russian it's even used in memes (mostly about coding and poor engineering solutions): https://www.meme-arsenal.com/en/create/template/126859
[00:12:05] <tirnanog> man alive; just log in as root to begin with.
[00:12:53] <tirnanog> in fact, it's your use of sudo that's the crutch here.
[00:13:04] *** Lord_of_Life_ is now known as Lord_of_Life
[00:13:28] <FreeBDSM> that's actually arguable
[00:14:35] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:14:38] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[00:14:47] <tirnanog> or, you could go and whine to the sudo authors that a literal glob should be expanded somehow. they'll just tell you to have sudo execute a shell to begin with, no doubt.
[00:15:12] <FreeBDSM> I am working with kafka right now and I don't know this system good enough yet, but I know of another good example: postgres. It is supposed to be executed under it's own user. But it's file structure expects its files to have modes like 700/600, not 770/660
[00:15:31] <FreeBDSM> so how should I work with it's files as an administrator?
[00:16:10] <FreeBDSM> `sudo su - postgres` is regarded as an antipattern
[00:16:16] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Read error: Connection reset by peer)
[00:16:37] <FreeBDSM> so I have to just prefix all the commands with sudo
[00:16:47] <tirnanog> generation ubuntu.
[00:17:11] <geirha> running both sudo and su is silly
[00:17:21] <FreeBDSM> geirha: no, not at all
[00:17:42] <geirha> you have to commands to run things as other users, you only need one of them
[00:17:43] <tirnanog> you need two utilities to switch the effective uid because ...?
[00:17:53] <geirha> *two
[00:17:58] *** Quits: besnn (~besnn@user/besnn) (Quit: Leaving)
[00:18:05] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[00:18:19] <tirnanog> not to mention that su has limitations. it can only ever execute a shell, bringing with it potential issues of quoting, code injection and such.
[00:18:32] <FreeBDSM> sudo checks if I'm sudoer and I can even configure sudoers file not to prompt for MY password. This way I don't need to know target user's password to become them.
[00:18:55] <tirnanog> and you need su after that because ...?
[00:19:03] <geirha> FreeBDSM: man sudo   look at the -u option
[00:19:06] <tirnanog> you don't know your tools.
[00:19:14] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[00:19:20] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[00:19:44] *** Joins: plarke (~plarke4@c-24-12-192-20.hsd1.il.comcast.net)
[00:20:30] <geirha> sudo -u postgres psql
[00:20:33] <FreeBDSM> so `sudo su - postgres` is the same as `sudo -iu postgres`?
[00:20:47] <geirha> more or less, yes
[00:20:48] <oldgalileo> Hi! Having an issue with escaping strings. I'm trying to use a script to write another script. In the child script, it has to reference $1, $2, etc. I cannot for the life of me escape those strings in the outer script.
[00:20:55] <tirnanog> not really, but for the sake of this discussion, yes will do.
[00:20:59] <oldgalileo> It will either show up as just `$` or just `2`
[00:21:24] <geirha> sudo and su differ a bit on what environment variables to pass on
[00:21:30] *** Joins: Lutin (~Lutin@user/lutin)
[00:21:48] <tirnanog> and sudo won't execute a shell, unless told to.
[00:21:51] <FreeBDSM> geirha: the tricky part (which is I just don't know how to even remember) is whether in both cases the same set of .rc files will get executed or not
[00:21:54] <tirnanog> it would execute psql directly.
[00:22:20] <tirnanog> su can only ever execute a shell. there's no option to act otherwise.
[00:22:24] <FreeBDSM> tirnanog: it will if you don't specify the command
[00:22:32] <FreeBDSM> `sudo su - postgres` executes shell.
[00:22:44] <tirnanog> you don't understand.
[00:23:18] <tirnanog> as I just said, su always executes a shell. there is no option for it to act otherwise. _that_ is why you're getting a shell in the case of the command that you mentioned.
[00:23:35] <phy1729> oldgalileo: If you're trying to pass in something like  'one is $1' and have the child expand that, that's not really something shells do
[00:23:46] <FreeBDSM> well, IMO that's good to have as default behavior.
[00:23:58] <FreeBDSM> shell may have some aliases/functions/etc
[00:23:59] <geirha> no, it's not
[00:24:00] <tirnanog> no, it's not.
[00:24:11] <oldgalileo> phy1729: Yeah, I mean I'm with you that it's good it's hard to do
[00:24:13] *** Joins: re101-jaguar-75 (~re101-jag@106.51.107.26)
[00:24:13] <geirha> damn, forgot the closing punctuation
[00:24:16] <FreeBDSM> when it's not - I just use sudo
[00:24:17] <oldgalileo> but I'd really rather not rewrite this in C :/  
[00:24:19] <tirnanog> especially as there is no option not to do so.
[00:24:36] <FreeBDSM> but yeah, I usually use sudo without '-m user'
[00:24:52] <FreeBDSM> yeah, agree, that's actually not very secure
[00:25:01] <phy1729> oldgalileo: you may be able to refactor things, what's the bigger picture
[00:25:08] <tirnanog> so, it is, in fact, being used as a crutch.
[00:25:20] <tirnanog> you presumably dole out passwordless root access only to drop privileges anyway.
[00:25:25] <re101-jaguar-75> Could someone help me with a sed substitution problem I'm having?
[00:25:50] <oldgalileo> I need to `scp` over a script to a remote system and, within that script, generate a bash systemd generator
[00:26:02] <phy1729> oh dear cthulhu
[00:26:17] <phy1729> Have you considered configuration management like ansible or salt?
[00:26:49] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 248 seconds)
[00:27:04] <FreeBDSM> tirnanog: to sum it up - you suggest `sudo -iu postgres` as a better alternative to `sudo su - postgres`, right? what about the set of .rc/.profile and similar files - will they more or less be executed in the same set in both cases?
[00:27:14] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[00:27:19] <oldgalileo> Lmfao phy1729 it's a nightmare
[00:27:28] <oldgalileo> Unfortunately i'm the one jumping into the project
[00:27:51] <FreeBDSM> ansible is a good answer to a lot of tasks/problems
[00:28:01] <tirnanog> FreeBDSM: yes, that would be a step in the right direction. -i will give you the login shell that you need in this case.
[00:28:16] <oldgalileo> Yeah. Using some ansible fuckery in other parts of the project I have ownership of
[00:28:19] <phy1729> and configuration management would get you a real templating engine
[00:28:34] <oldgalileo> but this is legacy shit that can only remotely run a script of a given name :eyeroll:
[00:28:42] <FreeBDSM> jinja2 is ~nice
[00:28:49] <oldgalileo> ik... ;(  
[00:29:31] <oldgalileo> I wouldn't be asking for bash dark magic if I had other options
[00:30:04] <FreeBDSM> thank you tirnanog and geirha for shaming me for my administration approach
[00:30:25] <llua> indeed, it was entertaining
[00:30:27] <phy1729> Sounds like time to go back to the boss and say "#bash has condemned our legacy system; I need time to rewrite it" :p
[00:30:31] <oldgalileo> IDK if any of you read brandon sanderson, but I feel like I'm coming to the Nightwatcher for a boon and a curse
[00:30:42] <FreeBDSM> (bullshit needs to be called)
[00:30:59] <oldgalileo> phy1729: I'll give you his email ahahaha
[00:31:34] <oldgalileo> "Listen guys, you didn't like it when it was just me asking to overhaul. But I asked on libera.chat#bash and they all agreed that this is terrible"
[00:31:42] <oldgalileo> lmfao
[00:32:10] *** Guest360 is now known as r00t
[00:32:29] <oldgalileo> OH. OH GOD.
[00:32:38] <oldgalileo> What about base64 encoding the child script
[00:32:39] <FreeBDSM> "I consulted with the Community and it was absolutely consensual that this solution is terrible"
[00:32:39] *** r00t is now known as Guest5923
[00:32:57] <tirnanog> FreeBDSM: while the outcome is more or less the same in this particular case, you now have the option of defining a more narrowly scoped sudoers policy, should you see fit. besides cutting out the unnecessary middle man that is su, that is.
[00:33:12] <FreeBDSM> oldgalileo: HEREDOC it. Nested if needed. lol.
[00:33:16] *** Parts: re101-jaguar-75 (~re101-jag@106.51.107.26) ()
[00:33:45] <oldgalileo> FreeBDSM: lmao
[00:33:48] <FreeBDSM> tirnanog: understood, agreed.
[00:34:02] <oldgalileo> FreeBDSM: Cool. Will look into it. Never heard of HEREDOC
[00:36:23] *** Joins: chomwitt (~chomwitt@2a02:587:dc0c:e200:12c3:7bff:fe6d:d374)
[00:38:54] <FreeBDSM> oldgalileo: take my suggestion with a grain of salt, I'm a newbie here among these gurus that transcended bash and probably even scripted their own existence; heredoc might not give you what you desire, I hardly understood what's your problem.
[00:39:45] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:39:59] *** Joins: Adoi (~Adoi@user/adoi)
[00:39:59] *** Quits: Burger (~burger@user/burger) (Quit: Textual IRC Client: www.textualapp.com)
[00:43:02] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Quit: Leaving)
[00:43:11] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[00:43:12] <oldgalileo> LMAO. The fucking base64 trick worked.
[00:43:17] <oldgalileo> I hate myself. But I love results.
[00:43:50] *** Quits: korros (~korros@li1845-92.members.linode.com) (Quit: WeeChat 2.8)
[00:44:00] <oldgalileo> FreeBDSM, phy1729: Just know at morning standup tomorrow, I promise you both I'll hear the screaming souls of future engineers 
[00:45:40] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[00:46:26] *** Quits: cuolin^ (~cuolin@209.65.131.194) (Remote host closed the connection)
[00:46:55] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 252 seconds)
[00:49:00] *** Quits: sQVe (~sQVe@user/sqve) (Quit: Bye!)
[00:50:09] *** Joins: audiobirb (~audio@2603-8081-1801-3bb5-e83e-f8c6-9aa2-28bc.res6.spectrum.com)
[00:51:40] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[00:53:29] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 248 seconds)
[00:54:05] *** Joins: sublim20 (~sublim20@user/sublim20)
[00:55:30] *** Joins: mihael (~mihael@2001:4454:24e:f800:9ddd:1b6:c5c3:3675)
[00:56:57] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[00:57:22] *** Joins: codebam (~codebam@user/codebam)
[00:57:37] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[00:58:17] *** Joins: mat001 (~mat001@246.sub-174-194-131.myvzw.com)
[00:59:05] *** Joins: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net)
[01:00:15] *** Joins: dsrt^ (~dsrt@209.65.131.194)
[01:00:42] *** Quits: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net) (Changing host)
[01:00:42] *** Joins: aead (~aead@user/aead)
[01:00:54] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[01:03:40] *** Quits: mat001 (~mat001@246.sub-174-194-131.myvzw.com) (Remote host closed the connection)
[01:04:06] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[01:06:33] *** Joins: mago (~mago@87.125.55.123)
[01:06:48] <mago> Hello, how do  i rename all files in folder to this pattern: 1x.mp3, 2x.mp3, 3x.mp3 ...?
[01:07:57] <greycat> porn2
[01:08:03] <greycat> !porn2
[01:08:03] <greybot> i=0; for f in ./*.jpg; do printf -v num %05d "$((++i))"; mv "$f" "$num.jpg"; done
[01:08:16] *** Joins: mat001 (~mat001@246.sub-174-194-131.myvzw.com)
[01:08:59] <FreeBDSM> why nobody likes {} around vars except for me?
[01:09:27] <FreeBDSM> `$num.jpg` - is your var `$n` or `$nu` or `$num`, or ...
[01:10:05] <phy1729> It's num
[01:10:07] <phy1729> !next
[01:10:07] <greybot> Another satisfied customer! Next please!
[01:10:21] <FreeBDSM> what if you also had $n declared?
[01:10:30] <phy1729> Still num
[01:10:58] *** Joins: chasmo77 (~chas77@71.63.241.168)
[01:11:06] <oprypin> troubles start when you write  $num_2
[01:11:15] <greycat> you're allowed to use the Gentoo Braces if you like, but most of us don't use them where they aren't required
[01:11:24] <phy1729> dammit what's the factoid for this?
[01:11:25] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[01:11:54] <greycat> !braces
[01:11:54] <greybot> Braces around variable names do not take the place of quotes, and are unnecessary unless the var name would otherwise be misread, eg "${size}Kb", or you are using arrays or parameter expansion like "${foo%.mp3}". mv ${file} ${newFile} is *unsafe* it should be mv "${file}" "${newFile}" or, more simply, mv "$file" "$newFile"
[01:12:22] <phy1729> There's one for what a pe name is and that braces are required for ${10} and up
[01:12:46] <FreeBDSM> in this case next goes the dot (which afaik means it's probably an end for your var's name), but what if the pattern was $numending?
[01:13:01] <greycat> then you have to write it ${num}ending
[01:13:02] <FreeBDSM> maybe you had $numen declared before;
[01:13:02] <phy1729> Then you need braces
[01:13:25] <FreeBDSM> isn't it easier not to think about it every time and just use braces by default?
[01:13:47] <FreeBDSM> when you walk - hardly you think about each of your steps
[01:13:48] <phy1729> Do you think for   $foobar the shell tries  $foobar then $fooba then $foob then $foo then $fo then $f and uses the first it finds?
[01:13:55] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 258 seconds)
[01:14:13] <FreeBDSM> I think so
[01:14:19] <phy1729> That's not what happens. $foobar just means $foobar and none of the rest of that
[01:14:29] <FreeBDSM> in all cases?
[01:14:54] <phy1729> yes (I mean positional parameters are just a single number without braces)
[01:15:24] <FreeBDSM> man, how did I never think of testing my belief...
[01:15:28] <phy1729> The shell never tries multiple names for the parameter expansion
[01:15:31] <FreeBDSM> # f=test; echo $foo
[01:15:33] <shbot> FreeBDSM: no output
[01:15:43] <greycat> When $ is followed by a letter or _, then shell's parser finds the longest possible variable name starting at that letter or _, and uses that.
[01:15:47] *** Joins: fuzzybear3965 (~fuzzybear@2a03:7380:2102:6c35:a571:b9ac:f049:d675)
[01:16:01] <greycat> The behavior is extremely well known.
[01:17:46] <phy1729> I swear there's a factoid for it
[01:17:55] <seninha> Is cat-v more secure than a plain cat?
[01:18:12] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[01:18:14] *** Joins: korros (korros@2600:3c03::f03c:92ff:febf:689a)
[01:18:18] <greycat> *blink*
[01:18:18] <phy1729> what
[01:18:20] <seninha> https://security.stackexchange.com/questions/56307/can-cat-ing-a-file-be-a-potential-security-risk
[01:18:33] <greycat> do you mean *writing binary data to your terminal*?
[01:18:44] <phy1729> Use a pager
[01:18:57] * grondilu reads the backlog and learns about the -v option to printf
[01:19:09] <seninha> cat-ing random binary files can be a security risk, but cat -v unfolds the escape sequences into printable ascii chars.
[01:19:10] <greycat> porn is very educational
[01:19:25] <greycat> seninha: or you could use less(1)
[01:19:28] <FreeBDSM> I thought it just has a string that contains literal substrings and references (variables), and since unlike some PLs (where you can't just write it as a single expression `asad$asdasdfm$addasd` - you'd have to chop it like `"asad" . asda . "sdfm" . add . "asd"`) it allows mixing both in 1 string - I always thought it's a problem that shell solves by sequentially trying 'longest name possible, then that minus last char, minus 2 chars and s
[01:19:28] <FreeBDSM> o on'
[01:19:40] <FreeBDSM> I feel exceptionally stupid today
[01:20:24] <seninha> I don't want a pager, I want to cat.
[01:20:26] <seninha> I usually put READMES into every directory to explain to my future self what I had put there. So I was thinking in overriding my shell's builtin cd command with a function in .kshrc which cats the README when I cd to a dir containing such file.
[01:20:37] <greycat> wel, do whatever you want then.  not sure why you came here.
[01:20:37] <seninha> cd() { cat -v README 2>/dev/null | head -n 10 ; command cd "$@" ; }
[01:20:47] <dermoth> afaik less to a pipe behaves a bit like cat anyway
[01:20:54] <phy1729> seninha: why the hell do you want cat?
[01:21:13] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[01:21:15] <grondilu> hang on that's why I didn't know about this option : it's not mentionned in the manual page
[01:21:46] <greycat> grondilu: it will be in "man bash", which documents BASH'S version of printf, which has extensions over POSIX'S version of printf, which is what your "man printf" probably shows.
[01:21:49] <dermoth> you're reading the posix manpage?
[01:21:53] <phy1729> If you must type the letters c a t,  cat() { if [ -t 1 ]; then ${PAGER:-less} "$@"; else command cat "$@"; fi; }
[01:22:19] <dermoth> lol
[01:22:20] <greycat> phy1729: see their "cd()" comment.  That seems to be the root of this.
[01:22:36] <dermoth> alias cat=less
[01:22:36] <grondilu> oh my bad there is indeed a note in the man page : NOTE: your shell may have its own version of printf, which usually supersedes the  version  de‐scribed here.  Please refer to your shell's documentation for details about the options it sup‐ports.
[01:22:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 240 seconds)
[01:22:55] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[01:23:00] <dermoth> ohhh talking about printf
[01:23:04] <phy1729> dermoth: that doesn't behave well in pipelines
[01:23:08] <dermoth> help printf
[01:23:08] <greycat> two separate conversations
[01:23:20] *** Quits: mat001 (~mat001@246.sub-174-194-131.myvzw.com) (Remote host closed the connection)
[01:23:20] <grondilu> yeah sorry
[01:24:33] *** Quits: mihael (~mihael@2001:4454:24e:f800:9ddd:1b6:c5c3:3675) (Quit: Client closed)
[01:24:55] <dermoth> phy1729, maybe we're not using the same thing, but "less <file>|cat" and "cat <file>" leads to the same output exactly
[01:25:11] <phy1729> wtf one can pipe less?
[01:25:21] <phy1729> I'll be damned
[01:25:21] <dermoth> yes :D
[01:25:23] <grondilu> I wrote `var="$(printf ...)"` so many times, jeez
[01:25:38] <seninha> my question is: does cat-v in place of a plain cat avoids such exploits in vulnerable terminal emulators?
[01:26:04] <greycat> The whole thing is built on their desire to run an "automatically cat README if there is one" every time they cd.  Then they learned that someone could build a malicious README file that will screw up their terminal.  They don't want an interactive pager.  They just want random text (and nothing but text) dumped at their eyeballs.
[01:26:31] <dermoth> not that I recommend it, or even do it besides piping from man and git which I'm not even sure invoke the pager, likely not... but I knew it worked
[01:26:35] <phy1729> or use less -E or something
[01:26:45] <greycat> grondilu: printf -v was added in bash 3.1, and it saves a *lot* of forking.
[01:26:46] *** Joins: codebam (~codebam@user/codebam)
[01:27:45] <dermoth> What if I dump the whole library of congress as ascii text in my README file?
[01:28:02] <greycat> 16:50  seninha> cd() { cat -v README 2>/dev/null | head -n 10 ; command cd "$@" ; }
[01:28:07] <seninha> there's a head -n there
[01:28:08] <greycat> I think nobody but me saw this.
[01:28:11] <dermoth> won'T that "screw up" their terminal (ex my making it spit out test for the next few hours)?
[01:28:50] <FreeBDSM> I learned a lot of things today.
[01:28:55] <FreeBDSM> from this channel.
[01:29:03] <dermoth> ha didn't pay attention to that func
[01:29:39] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Remote host closed the connection)
[01:31:09] *** Joins: mat001 (~mat001@246.sub-174-194-131.myvzw.com)
[01:31:28] *** Quits: fuzzybear3965 (~fuzzybear@2a03:7380:2102:6c35:a571:b9ac:f049:d675) (Quit: Client closed)
[01:31:38] *** tejr_ is now known as tejr
[01:32:07] *** Quits: rando25892 (~sthk@user/rando25892) (Ping timeout: 245 seconds)
[01:32:41] <dermoth> you could also pipe to:  tr -dc '\n[\040-\x076]'
[01:32:48] *** Guest5923 is now known as r00t
[01:33:17] *** r00t is now known as Guest5652
[01:33:22] <dermoth> will maybe print gibberish on utf8 but nothing unsafe :)
[01:33:29] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 248 seconds)
[01:33:40] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[01:33:50] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[01:34:28] *** Quits: aead (~aead@user/aead) (Quit: aead)
[01:34:33] <dermoth> you can add tabs (\t) too... \r would be safe as well but could hide some text by reprinting over
[01:34:40] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (Ping timeout: 240 seconds)
[01:35:18] <seninha> cd() { command cd "$@" ; head -n 10 README 2>/dev/null | vis ; } # cd must be called first; also s/cat -v/vis/ because I use BSD
[01:36:13] <FreeBDSM> I think I need to alias cat to run a check first against target file: if file is binary - prompt for user's confirmation
[01:36:54] <dermoth> bts back to that library of congress thing, what if I remove all the newlines?
[01:37:04] <dermoth> head -10 can print a lot of data
[01:37:41] <dermoth> cut youcan also use head -c
[01:38:26] <dermoth> not sure you can combine both but you can first limit on number of char then lines, so you never read too much data
[01:38:46] <FreeBDSM> also, a nice security scan/test: find all binary files in a clean OS install and check if cat'ing any of them results into any problems (might bits randomly form some command that produces some kind of a problem/vuln?)
[01:39:05] *** Quits: alzgh (~alzgh@user/alzgh) (Quit: WeeChat 2.8)
[01:39:15] *** Joins: rando25892 (~sthk@c-98-240-233-64.hsd1.mn.comcast.net)
[01:39:53] <dermoth> # printf '%.0s1234567890\n' {1..10}|head -c30 -n10|wc -l
[01:39:54] *** Joins: kingjulian (~kingjulia@41.1.141.44)
[01:39:54] <shbot> dermoth: bash: head: -c: invalid option
[01:39:54] <shbot> dermoth: head: usage: head [-n num] [file ...]
[01:39:54] <shbot> dermoth: 0
[01:40:07] <dermoth> ho comes -c is invalid
[01:40:23] <dermoth> anyway my head icnores the -c with both, it's stupid
[01:40:25] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 248 seconds)
[01:40:27] <seninha> cut -c 1-1000 | head -n 10
[01:40:29] <dermoth> it should error out or limit both
[01:41:05] <dermoth> but irrc -c is posix
[01:41:48] <dermoth> ha it's only for tail
[01:42:21] <dermoth> but tail -c works for both head or tail
[01:43:15] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[01:43:25] <FreeBDSM> why pipe FROM less?
[01:43:30] <FreeBDSM> a catless cat?
[01:43:50] *** Joins: aead (~aead@user/aead)
[01:44:18] <dermoth> Sign	Copying Starts
[01:44:18] <dermoth> +	Relative to the beginning of the file.
[01:44:19] <dermoth> -	Relative to the end of the file.
[01:44:19] <dermoth> none	Relative to the end of the file.
[01:44:19] *** Quits: aead (~aead@user/aead) (Client Quit)
[01:44:24] <dermoth> that's for -c
[01:45:29] <dermoth> ha no it's still the tail from that byte :(
[01:46:01] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 244 seconds)
[01:46:07] *** Joins: aead (~aead@user/aead)
[01:46:53] *** Quits: rando25892 (~sthk@c-98-240-233-64.hsd1.mn.comcast.net) (Changing host)
[01:46:53] *** Joins: rando25892 (~sthk@user/rando25892)
[01:47:08] <dermoth> cut limits line length, fine, though I would maybe not allow 1000 char per lines if I also print 10 lines
[01:47:41] <dermoth> at least use 998, it's the line length limit of smtp :)
[01:48:54] <dermoth> dd could always be used but I'm stunned if there is no simpler tool to just stop reading after n characters...
[01:49:18] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:49:19] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[01:49:46] <FreeBDSM> does printf fully replace echo?
[01:50:04] <FreeBDSM> if yes - then why does echo exist?
[01:50:16] <phy1729> historical reasons
[01:50:33] <phy1729> Same reason ` exists
[01:50:35] <geirha> removing echo would break existing scripts that use echo, so it will be supported forever
[01:50:49] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[01:50:55] *** Quits: aead (~aead@user/aead) (Client Quit)
[01:51:10] *** Joins: aead (~aead@user/aead)
[01:51:12] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:51:31] <geirha> Same reason $[], which was obsoleted and even removed from the documentation three decades ago, still works
[01:51:32] <dermoth> also echo doesn't require \n on every line
[01:51:53] <dermoth> $[] - what is it equivalent to?
[01:51:58] <geirha> !$[
[01:51:58] <greybot> $[...] is an obsolete, deprecated syntax for math. Don't use it. Use $((...)) instead. https://lists.gnu.org/archive/html/bug-bash/2012-04/msg00034.html
[01:52:09] <phy1729> Also expr
[01:52:22] <seninha> # echo $[ 3 + 1 ]
[01:52:23] <shbot> seninha: 4
[01:52:27] *** Quits: aead (~aead@user/aead) (Client Quit)
[01:52:33] <phy1729> # expr 3 + 1
[01:52:35] <shbot> phy1729: 4
[01:52:55] *** Joins: aead (~aead@user/aead)
[01:53:13] <seninha> k# echo $[ 3 + 1 ]
[01:53:14] <shbot> seninha: $[ 3 + 1 ]
[01:53:28] <seninha> so it's a bash thing
[01:53:28] *** Quits: nobody_ (~nobody@host-79-50-185-199.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[01:54:17] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 248 seconds)
[01:54:47] <grondilu> hey is there a way to have the - option for here-documents work with spaces and not tabs?
[01:54:55] <geirha> no
[01:55:11] <FreeBDSM> phy1729: I like `, I don't really understand why it was marked as legacy in favor of $()
[01:55:24] <phy1729> Now try nesting it
[01:55:43] <FreeBDSM> ``\`\`
[01:55:50] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[01:55:57] <phy1729> \ in the wrong place
[01:55:59] <seninha> tab is the one true indentation style, do not use space for that
[01:56:00] *** Joins: codebam (~codebam@user/codebam)
[01:56:12] <geirha> FreeBDSM: https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xcu_chap02.html#tag_23_02_06_03
[01:56:18] <phy1729> can you name the other 3 characters that can consume a backslash in `?
[01:56:39] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (Client Quit)
[01:57:13] <phy1729> Ok well geirha gave away $ with the link and obviously there's \, but iirc there's one more
[01:57:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 240 seconds)
[01:57:52] *** Quits: kingjulian (~kingjulia@41.1.141.44) (Ping timeout: 252 seconds)
[01:57:56] <phy1729> Nevermind I remember incorrectly
[01:58:14] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:58:34] *** Quits: mat001 (~mat001@246.sub-174-194-131.myvzw.com) (Remote host closed the connection)
[01:59:31] *** Quits: dsrt^ (~dsrt@209.65.131.194) (Ping timeout: 252 seconds)
[01:59:31] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[01:59:58] *** Joins: obiwahn (~heini@obiwahn.org)
[02:00:36] *** Quits: obiwahn (~heini@obiwahn.org) (Client Quit)
[02:02:24] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.2)
[02:03:34] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 250 seconds)
[02:03:55] *** Quits: motherr (~motherr@user/motherr) (Quit: zzz)
[02:04:26] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 250 seconds)
[02:04:59] *** Joins: codebam (~codebam@user/codebam)
[02:05:44] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[02:06:29] *** Joins: motherr (~motherr@user/motherr)
[02:06:36] *** Quits: motherr (~motherr@user/motherr) (Client Quit)
[02:07:00] *** Joins: lavaball (felix@31.204.155.215)
[02:08:44] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[02:08:45] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[02:08:52] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 252 seconds)
[02:10:30] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 250 seconds)
[02:10:50] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[02:12:14] *** Joins: obiwahn (~heini@obiwahn.org)
[02:12:52] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[02:14:31] *** Joins: totenkoph (~scythe@user/totenkoph)
[02:16:32] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[02:16:37] *** Joins: shimbles (~shimbles@h126.8.39.162.static.ip.windstream.net)
[02:17:00] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 250 seconds)
[02:17:48] *** Joins: n0haxt (~n0haxt@41.251.27.232)
[02:18:02] *** Quits: mago (~mago@87.125.55.123) (Quit: Client closed)
[02:20:45] <obiwahn> hi, not really a bash question but does anyone know by chance how to filter local addresses from the `ss -lt` command with a filter expression (`grep -v` is not what I am looking for)
[02:21:43] *** Quits: clime (~clime@ip-94-199-195-39.acvyskov.cz) (Quit: WeeChat 3.2)
[02:22:00] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[02:22:14] <esselfe> ss -lt |grep 127\.0\.0\.[0-9]*
[02:22:37] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:24:08] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[02:26:02] *** Joins: akoana (~ah@user/akoana)
[02:26:04] *** Joins: codebam (~codebam@user/codebam)
[02:26:58] <twkm> ewww.
[02:27:56] <geirha> it still baffles me that iproute2 replaced netstat with an even less parsable command
[02:28:20] *** Quits: invra_ (~invra@mail.aletheianature.es) (Quit: WeeChat 2.3)
[02:29:13] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[02:29:39] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:30:24] *** Quits: toad-x (~quassel@31.223.78.243) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:30:48] *** Joins: huzursuz (~quassel@31.223.78.243)
[02:31:07] *** huzursuz is now known as toad-x
[02:31:36] *** Quits: toad-x (~quassel@31.223.78.243) (Client Quit)
[02:32:36] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 250 seconds)
[02:32:53] <geirha> perhaps  awk '$4 !~ /^127\.0/'   will suffice in this case?
[02:33:07] *** Joins: codebam (~codebam@user/codebam)
[02:33:09] *** Joins: vlatko (~vlatko@93-138-235-45.adsl.net.t-com.hr)
[02:33:24] *** Guest5652 is now known as r00t
[02:33:53] *** r00t is now known as Guest3911
[02:34:08] <vlatko> I need to pass --domains=domain.tld,www.domain.tld to wget but I don't know which one the user will pass to me domain.tld or www.domain.tld
[02:34:17] <vlatko> How do I append the other one?
[02:34:20] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 250 seconds)
[02:35:37] <geirha> domain=${domain#www.}; wget "--domains=$domain,www.$domain"
[02:35:58] <vlatko> if I'm passed www.domain.tld it won't work
[02:36:10] <vlatko> oh wait
[02:36:24] <vlatko> This first thing strips www. if it exists?
[02:36:30] <geirha> yes
[02:37:07] <vlatko> Awesome. I knew it was gonna be some shell trickery there. It would've taken me ages to dig that out.
[02:37:16] <vlatko> Thanks a bunch.
[02:37:41] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[02:40:10] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[02:40:14] <vlatko> How do I sanitize user input so that it is safe for the shell?
[02:41:30] <phy1729> What do you mean by safe for the shell?
[02:41:46] <shimbles> That would be darn near impossible. bash(web-form) # don't do it
[02:42:21] <phy1729> If you're using eval, pray to your deity of choice. For most everything else, quote and use --.
[02:42:30] <vlatko> I need to allow the user to input a domain and I try to pass that to wget
[02:42:52] <vlatko> But that's obviously a huge hole unless sanitized somehow
[02:43:23] <shimbles> you should use a typed propgramming language for that
[02:43:38] <shimbles> to sanitize, run it through a DNS check
[02:43:50] <phy1729> eh, quoting and -- should be sufficient there (as long as arbitrary domains/URLs are ok)
[02:44:19] <vlatko> hmmm... DNS check sounds reasonable
[02:44:33] <vlatko> It has to be resolvable anyways to mean anything.
[02:45:03] <vlatko> Unless someone manages to register a domain with an embedded exploit
[02:45:25] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[02:46:40] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 240 seconds)
[02:47:01] *** Quits: n4dir (~user@i577bc95b.versanet.de) (Remote host closed the connection)
[02:47:26] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Quit: WeeChat 3.2)
[02:48:00] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[02:49:47] *** Joins: masoudd_ (~masoudd@user/masoudd)
[02:53:03] *** Joins: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net)
[02:53:25] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 252 seconds)
[02:54:27] *** Quits: troyt (~troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 276 seconds)
[02:55:01] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[02:55:16] *** Quits: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net) (Remote host closed the connection)
[02:55:41] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[03:03:42] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[03:09:29] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[03:11:54] *** Quits: dzdcnfzd (~anthonygr@104.132.34.65) (Quit: leaving)
[03:12:41] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 248 seconds)
[03:14:23] *** Quits: b0b (~bob@user/b0b) (Quit: o/)
[03:14:48] *** Joins: b0b (~bob@user/b0b)
[03:15:51] *** Quits: julius_c (~julius_c@70.red-88-0-63.dynamicip.rima-tde.net) (Quit: Leaving)
[03:16:36] *** Joins: masoudd__ (~masoudd@user/masoudd)
[03:17:50] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[03:18:55] <neshpion> # mapfile things < <(seq 1 10); while IFS= read -r thing; do printf 'item #%d: <%s>\n' $((++n)) "$thing"; done <<<"${things[@]:5:2}"
[03:18:56] <shbot> neshpion: item #1: <six>
[03:18:56] <shbot> neshpion: item #2: < seven>
[03:18:57] <shbot> neshpion: item #3: <>
[03:19:25] <neshpion> why is there a leading space and an empty element :(
[03:19:35] <greycat> what on earth are you trying to do
[03:19:50] *** Quits: masoudd_ (~masoudd@user/masoudd) (Ping timeout: 250 seconds)
[03:20:02] <neshpion> i wanted to while-read on a range of an array where the elements retain their terminating newlines
[03:20:34] <greycat> you're using "${a[@]}" in a HERE STRING context which means it gets smashed into a single string instead of being a sub-list of multiple words
[03:20:36] <neshpion> my intent was that the loop above would run only 2 times
[03:20:43] <neshpion> oh
[03:21:04] <greycat> you also used mapfile without the -t option, so your array elements have newlines in them
[03:21:11] *** Quits: masoudd__ (~masoudd@user/masoudd) (Ping timeout: 258 seconds)
[03:21:18] <neshpion> yes otherwise read only gets the entire array as 1 line
[03:21:33] <greycat> because you smashed it into a single string by putting it after <<<
[03:21:50] <neshpion> that's what i was missing about that
[03:21:58] <greycat> if you want to iterate over a piece of an array, just use   for ((i=5; i<7; i++)); do echo "${a[i]}"; done
[03:23:20] <greycat> (or in this particular case:  for i in 5 6; do ...)
[03:24:10] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[03:25:59] *** Quits: vlatko (~vlatko@93-138-235-45.adsl.net.t-com.hr) (Quit: WeeChat 2.3)
[03:26:27] *** Joins: masoudd (~masoudd@user/masoudd)
[03:29:21] *** Joins: mutandis (~mut@c-73-129-211-144.hsd1.va.comcast.net)
[03:29:51] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[03:30:37] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[03:32:12] *** Quits: jsrnop1 (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:32:25] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 248 seconds)
[03:34:00] *** Guest3911 is now known as r00t
[03:34:29] *** r00t is now known as Guest1611
[03:34:40] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[03:37:34] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[03:37:58] *** Quits: plarke (~plarke4@c-24-12-192-20.hsd1.il.comcast.net) (Remote host closed the connection)
[03:42:29] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:45:29] *** Quits: qub411 (~user@203-219-207-138.tpgi.com.au) (Quit: WeeChat 2.3)
[03:45:45] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[03:46:26] *** Joins: codebam (~codebam@user/codebam)
[03:49:54] *** Joins: ferdna (~ferdna@user/ferdna)
[03:50:36] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 250 seconds)
[03:52:38] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[03:52:56] *** Joins: JanC (~janc@user/janc)
[03:53:36] <nova> how to convert  IFS=' ' read -r a b < <(cmd)  to posix?
[03:54:10] *** Quits: n0haxt (~n0haxt@41.251.27.232) (Remote host closed the connection)
[03:56:40] <emanuele6> nova: cmd | { IFS=' ' read -r a b; the rest of your code here ;} 
[03:57:13] <emanuele6> or: cmd_out=$(cmd) a=${cmd_out%% *} b=${cmd_out##}
[03:57:18] <emanuele6> err
[03:57:24] <emanuele6> or: cmd_out=$(cmd) a=${cmd_out%% *} b=${cmd_out##* }
[03:57:34] <emanuele6> that is not quite the same thing, but close enough
[03:57:41] <nova> really it's like read -r a b c d e, so
[03:57:46] <e36freak> or more generally, replace process substitution with a fifo
[03:57:54] <nova> 5 tokens
[03:58:03] <e36freak> if you need process sub
[03:58:08] <nova> the first option is pretty annoying ...
[03:58:13] <emanuele6> !bashphorism1 > nova
[03:58:14] <greybot> nova: bashphorism 1: the questioner's first description of the problem/question will be misleading.
[03:58:37] <e36freak> mkfifo foo; cmd > fifo & IFS=' ' read -r a b < fifo
[03:58:49] <e36freak> erm, foo, not fifo
[03:58:52] <e36freak> but whatever
[03:58:52] <nova> no, you assumed things. I was not misleading
[03:59:00] <emanuele6> or, again: cmd | { IFS=' ' read -r a b c d e; the rest of your code here ;}
[03:59:14] <emanuele6> nova: "how to convert  IFS=' ' read -r a b < <(cmd)  to posix?"
[03:59:46] <e36freak> or put everything in a function and pipe to the function
[03:59:49] <nova> any other options for read -r a b c d e < <(foo)
[04:00:12] <e36freak> the fifo is the closest thing
[04:00:22] <e36freak> since process substitution is basically just shorthand for creating an anonymous fifo
[04:00:41] <greycat> Temp files are a viable option here as well.  It's two freakin' words.
[04:00:48] <nova> huh. maybe. let me try that.
[04:00:54] <e36freak> true
[04:01:22] <e36freak> i had assumed it's actually a while read loop or something more complex and they're leaving that bit out
[04:01:30] <emanuele6> greycat: no, it's like 5 freakin' words!
[04:01:42] <greycat> I was told "read -r a b".
[04:01:54] <greycat> Are you saying that the OP is a liar?
[04:02:00] <e36freak> i would never
[04:02:18] <greycat> (I certainly would, if it's true.)
[04:02:19] <emanuele6> greycat: i already sent the !b1, so yes
[04:03:55] <e36freak> for the more general question "how do i implement a process substitution in sh" the answer is "with a fifo"
[04:05:24] <greycat> For the most general question "How do I do everything in the WHOLE FUCKING WORLD in the FULLY GENERALIZED WAY", the answer is "this is BASH.  you don't generalize everything into one form.  every single problem has a uniquely stupid trick or hack."
[04:05:45] <e36freak> but but
[04:06:06] <greycat> If you want to read two words and they're on the zame line, you use trick #1.  If you want to read two words and they're on separate lines, you use trick #2.  They're not the same.
[04:06:16] <e36freak> how do i bash
[04:06:19] <greycat> !faq #bash
[04:06:20] <greybot> https://mywiki.wooledge.org/BashFAQ/064 -- Why is it so hard to get an answer to the question that I asked in #bash?
[04:06:22] <e36freak> in the general sense
[04:07:17] <greycat> If you want to loop twice, you write out "1 2".  If you want to loop 20 times, you write {1..20}.  If you want to loop a thosuand times, you use the C-style for syntax.
[04:08:35] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[04:11:26] <emg> nova: you'll get a much warmer reception and much better help here if you give an accurate description of the full real problem you're trying to solve instead of representing it as simpler abstract ideas
[04:11:51] <emg> nova: many people here can get very grouchy very quickly because it's a common pattern where someone comes and asks one question, and hours later it comes out they really wanted to do something else
[04:12:08] <nova> emg, here is the problem solved. http://sprunge.us/Oocqez?sh I understand. I refined what I asked and what I needed was pretty straight forward.
[04:12:46] <nova> e36freak, worked perfectly thanks
[04:12:47] <ede> vim-nox = vim + scripting-support, is that correct?
[04:13:30] <nova> vim-nox is "vim without Xorg support". Just install gvim. The binary is slightly larger but it pulls in no dependences if you already have a GTK application installed
[04:13:54] <emg> !nabq > ede
[04:13:54] <greybot> ede: Not a #bash question. We're no experts in that software or OS; consider asking the channel or mailing list with experts on that topic (eg. ##linux #openssh #ubuntu #zsh #systemd or PM alis with "list keyword" to search for channels).
[04:14:03] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Remote host closed the connection)
[04:14:18] <ede> meh. rearranging channels is ALWAYS a bad idea, especially at night time :>
[04:14:23] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[04:14:29] <emg> ede: I know that feeling
[04:14:55] <ede> i really would need a 2D model instead of just a linear list :|
[04:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:15:08] <nova> ede, weechat /bar toggle buflist
[04:15:18] <ede> nah, hexchat here
[04:15:37] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[04:16:25] *** Joins: Caffeinated (~Caffeine@user/alexdelarge)
[04:17:49] <ede> great, and it's going on. first i wanted to use tmux keys to switch tabs, then weechat.
[04:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:20:04] *** Quits: chomwitt (~chomwitt@2a02:587:dc0c:e200:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[04:20:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[04:21:17] *** Parts: akoana (~ah@user/akoana) (Leaving)
[04:22:59] *** Joins: ZucZero (~Zucca@user/zucca)
[04:23:10] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[04:23:51] *** Joins: YaoNai (~YaoNai@user/yaonai)
[04:25:12] *** Joins: Al2O3 (~Al2O3@user/al2o3)
[04:25:21] *** Parts: Al2O3 (~Al2O3@user/al2o3) ()
[04:25:55] <emanuele6> !quote > nova
[04:25:55] <greybot> nova: https://mywiki.wooledge.org/Quotes
[04:26:05] *** Joins: Al2O3 (~Al2O3@user/al2o3)
[04:26:14] *** Quits: Zucca (~Zucca@user/zucca) (Ping timeout: 268 seconds)
[04:27:22] <emanuele6> actually, that is clearly not your real script anyway, all it does is print what you just read..
[04:28:04] *** Quits: dom2 (~dom2@c-65-96-173-68.hsd1.ma.comcast.net) (Ping timeout: 268 seconds)
[04:28:10] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[04:30:44] <emg> nova: if you really want to avoid a temp file so badly that you use a temp fifo and a background process instead, you could use a heredoc: http://ix.io/3wuU
[04:30:53] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[04:32:28] *** Joins: motherr (~motherr@user/motherr)
[04:34:04] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[04:34:34] *** Guest1611 is now known as r00t
[04:35:03] *** r00t is now known as Guest6641
[04:36:04] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[04:39:40] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 240 seconds)
[04:41:11] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:42:03] *** Joins: pj (~pj@ghettoforge/pj)
[04:42:50] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 258 seconds)
[04:45:52] *** Joins: Gothiclown (uid512238@id-512238.tinside.irccloud.com)
[04:46:10] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[04:48:25] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 268 seconds)
[04:49:27] <FreeBDSM> I am going nuts: `for i in {1..6}; do ssh test_server_${i} bash -c "for ip in ${ips[@]}; do echo from [${i}] \$(hostname -I) to ${ip} 9093 && telnet ${ip} 9093 <<< exit; done"; done` throws error about syntax error near unexpected token 'do'
[04:49:45] <nova> oh interesting. I will try that out in a second. In the mean time, I have one extra problem. http://sprunge.us/7qUJE9?sh  .. so, line 10 complains "cannot open ...: No such file". The backgrounded process hasn't created the file yet. Maybe I just implemented it in a totally stupid way.
[04:49:46] <checkbot> nova: I think the problem is on line 5. Double quote array expansions to avoid re-splitting elements. See 8 issues on https://shellcheck.net/?id=cb18786
[04:49:54] <emg> !$@ > FreeBDSM
[04:49:54] <greybot> FreeBDSM: The difference between $@ and $*: "$@" (quoted) expands to each positional parameter as its own argument: "$1" "$2" ... while "$*" expands to the single argument "$1c$2c..." where c is the first character of IFS. You almost always want "$@". The same goes for arrays: "${array[@]}" or "${array[*]}". Unquoted $* and $@ are undefined; DO NOT use.
[04:50:10] <emg> you're creating multiple arguments by doing ${ips[@]} inside dobule quotes
[04:50:13] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[04:50:35] <nova> whoops. line five is totally broken. but it never gets run (until you run this script a second time, but we're not even there yet)
[04:50:44] *** Joins: YaoNai (~YaoNai@user/yaonai)
[04:50:52] <emg> so ssh sees something like :    ssh test_server_1 bash -c 'for ip in 192.168.1.4' 192.168.1.3 192.168.1.2 '192.168.1.1; do echo'
[04:50:53] <emg> etc.
[04:51:05] <FreeBDSM> yeah
[04:51:26] <FreeBDSM> how to quote here correctly? I tried \"${ips[@]}\"
[04:51:29] <FreeBDSM> still same error
[04:52:14] *** Quits: YaoNai (~YaoNai@user/yaonai) (Client Quit)
[04:52:17] <emanuele6> !$(< > nova
[04:52:17] <greybot> nova: In bash, $(cat file) can be replaced by the equivalent but faster $(< file).
[04:52:23] <emanuele6> $(< is not posix
[04:52:37] <emanuele6> !$@
[04:52:37] <greybot> The difference between $@ and $*: "$@" (quoted) expands to each positional parameter as its own argument: "$1" "$2" ... while "$*" expands to the single argument "$1c$2c..." where c is the first character of IFS. You almost always want "$@". The same goes for arrays: "${array[@]}" or "${array[*]}". Unquoted $* and $@ are undefined; DO NOT use.
[04:52:46] <nova> emanuele6, not posix though. I did have that prior, though
[04:52:48] <emanuele6> and unquoted $@ is not posix
[04:52:55] <nova> I just quoted it.
[04:53:28] <emg> FreeBDSM: trying to do complex commands via ssh is a pain in the ass, I usually just write a script and either scp it over or supply it on stdin
[04:54:01] <FreeBDSM> emg: could you show how'd you supply it on stdin?
[04:54:49] <nova> dang it. I accidentally didn't get rid of the $(< file) stuff. I un-did in vim. sorry
[04:55:12] *** Joins: Bhavuk (~BTaneja@122.173.25.44)
[04:55:27] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[04:55:45] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[04:56:43] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Client Quit)
[04:56:57] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[04:57:43] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[04:59:47] <FreeBDSM> so much non-obvious stuff :(
[05:00:13] <FreeBDSM> # for i in a b c; do echo $i; done 
[05:00:14] <shbot> FreeBDSM: a
[05:00:14] <shbot> FreeBDSM: b
[05:00:14] <shbot> FreeBDSM: c
[05:01:48] <Riviera> # :
[05:01:49] <shbot> Riviera: no output
[05:01:55] <FreeBDSM> ah, a typo
[05:02:04] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[05:05:01] *** Joins: Kingsy (~chris@kingsy.co.uk)
[05:05:47] <Kingsy> if I have a file listing like this -> https://bpa.st/OFPA <- how can I get ls to list them in the right order (given the numbers in the name)
[05:06:01] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:09:01] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[05:11:40] *** Quits: odoood (~odoood@2601:c8:c003:a550::8) (Ping timeout: 240 seconds)
[05:11:51] <nova> I finally got it. http://sprunge.us/uWCk0F?sh  I feel like lines 10 to 20 could be done much better, but I wasn't sure how to make that happen
[05:13:43] <Kingsy> nm got it
[05:14:16] <nova> ls -v  iirc
[05:14:46] *** Quits: guifipedro (~quassel@207.188.174.209) (Ping timeout: 252 seconds)
[05:19:13] *** Quits: Lutin (~Lutin@user/lutin) (Quit: Lutin)
[05:21:25] *** Quits: reset (~reset@user/reset) (Quit: reset)
[05:23:13] <emanuele6> nova: what's the subshell for?
[05:23:55] *** Quits: shimbles (~shimbles@h126.8.39.162.static.ip.windstream.net) (Quit: Client closed)
[05:23:59] <emanuele6> !(
[05:24:00] <greybot> Commands in parentheses are run in a subshell. Useful for cd'ing into a directory without needing to figure out how to back out. See http://mywiki.wooledge.org/SubShell
[05:24:31] <nova> emanuele6, maybe my reasoning was incorrect, but tabbed -c blocks. The & backgrounds it, but then I call wait. So, I put everything in { } to group them and then put all of that in ( .. &) so that it would run detatched in the background
[05:25:17] <nova> this works really well, too. http://ix.io/3wv5/sh thanks emg 
[05:25:34] <emanuele6> nova: you don't need () for that
[05:25:57] <nova> emanuele6, if you don't put it in a subprocess, what happens when the parent process closes? Doesn't it kill the child too?
[05:27:40] <emanuele6> nova: try: { sleep 3; notify-send hi ;} & exit
[05:28:49] <nova> nice. it does work. removed. thx
[05:30:34] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:54] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[05:31:22] *** Quits: xx (~xx@user/xx) (Ping timeout: 245 seconds)
[05:31:42] *** Joins: guifipedro (~quassel@139.47.43.137)
[05:32:04] *** Joins: earendel (uid498179@user/earendel)
[05:34:32] *** Joins: vlm (~vlm@user/vlm)
[05:35:10] *** Guest6641 is now known as r00t
[05:35:39] *** r00t is now known as Guest8893
[05:38:10] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 240 seconds)
[05:42:59] *** Quits: motherr (~motherr@user/motherr) (Quit: zzz)
[05:44:08] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 250 seconds)
[05:45:00] *** Joins: Lunaris (~Lunaris@gateway/tor-sasl/lunaris)
[05:45:40] *** Joins: downunder (~downunder@110.151.122.76)
[05:50:18] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[05:54:55] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[05:57:59] *** Joins: et_ (~et@user/et)
[05:58:47] *** Quits: et (~et@user/et) (Ping timeout: 245 seconds)
[05:58:47] *** et_ is now known as et
[06:02:32] <neshpion> is there an idiomatic way to filter an array?  i basically do   `mapfile -t array < <(printf %s\\n "${array[@]}" | while IFS= read -r item; do filter_func "$item" && printf %s\\n "$item"; done)`
[06:03:41] <greycat> Didn't we already give speeches about how you can't GENERALIZE things to this ludicrous degree?  What kind of "filtering" do you want?
[06:04:25] <greycat> And if you already *have* an array, you don't write it as a stream and then re-parse it with a read loop to make a new array.  You simply iterate over it.
[06:07:21] <Kingsy> how can I change this count=1; for f in $(ls -r *.mkv); do echo ""mv $f S05E0$count.mkv""; let count=count+1; done <- to support filenames that have spaces?
[06:07:28] <greycat> !pf 1
[06:07:28] <greybot> https://mywiki.wooledge.org/BashPitfalls#pf1 -- Don't do this! -- for f in $(ls *.mp3)
[06:07:49] <greycat> your quotes are entrely screwed up too
[06:08:04] <neshpion> you should be using find instead of ls
[06:08:06] *** Joins: Crescendo (~Crescendo@user/crescendo)
[06:08:29] <greycat> No.  Not in this case.
[06:08:40] <neshpion> o.o
[06:08:47] <greycat> Why are you going over the files in reverse order?  Did you screw up previously and now you need to undo it by repeating it?
[06:08:53] <Kingsy> ah I can just do for f in *
[06:08:55] <Kingsy> sorry
[06:09:03] <Kingsy> yeah correcting mistakes
[06:09:27] <greycat> Reversing the order is the hardest part of this.  That's why it would be great if we could drop that.
[06:09:41] <greycat> Going forward is easy, as you already found out:  for f in *.mkv
[06:10:06] <Kingsy> corrected the quotes too.. thanks
[06:10:26] <greycat> Going backward is *hard*.  f=(*.mkv); n=${#f[@]}; for ((i=n-1; i>=0; i--)); do mv "${f[i]}" "stuff goes here"; done
[06:11:05] <earendel> kingsy: from what i get you don't need to put quotes on a variable containing a filename with spaces
[06:11:22] <greycat> !quotes
[06:11:22] <greybot> https://mywiki.wooledge.org/Quotes
[06:11:40] *** Quits: audiobirb (~audio@2603-8081-1801-3bb5-e83e-f8c6-9aa2-28bc.res6.spectrum.com) (Ping timeout: 240 seconds)
[06:11:42] <greycat> You *do* need to quote variable expansions (like "$f") except in specific situations where quotes are optional.
[06:12:34] <earendel> or maybe it's when a var represents a handler to a file, like with what you get with globs, and not just a filename? 
[06:13:33] <greycat> You need to quote all parameter expansions (which includes variable expansions) except in SPECIFIC PLACES which are defined by the SYNTAX of where you are, not what's in the variable.
[06:14:00] <greycat> If you ignore the exceptions and simply ALWAYS quote, you will be safe 99% of the time.
[06:14:03] <greycat> But you should learn the rules.
[06:20:11] *** Joins: audiobirb (~audio@2603-8081-1801-3bb5-ecc4-2df9-195d-cbcb.res6.spectrum.com)
[06:21:54] <earendel> it's cool when rules turn out to derive from more fundamental principles, which sometimes  is the case. and would understanding those maybe allow to break the rules in sound ways
[06:22:03] <earendel> maybe. :p
[06:22:35] <greycat> There is no consistency in shell scripting.  Everything was bolted on randomly by a different person, and works differently from everything else.
[06:25:57] *** Quits: tp43_ (~ndeem@2001:1970:501a:e201:7dd8:7bb5:b166:9697) (Ping timeout: 258 seconds)
[06:26:09] <Kingsy> hmmm
[06:26:46] <Kingsy> so there is a problem. the filenames contain special chars like ' and !
[06:27:07] <greycat> That's fine.  Those characters do not cause problems if you quote correctly.
[06:27:08] <Kingsy> kinda screwed me becuase my script generated invalid mv statements
[06:27:20] <Kingsy> I couldnt though right?
[06:27:35] <emanuele6> why are you generating code?
[06:27:57] <greycat> You have to do things *wrong* in order to get syntax errors from filenames contained in variables.
[06:28:54] <greycat> The most likely case is you didn't quote, and your filename had whitespace, which caused you to generate a list of *more* than 2 arguments to mv, the last argument being not a directory, and that's an error.  Not a syntax error, though.
[06:29:12] <greycat> # mv 1 2 3
[06:29:13] <shbot> greycat: mv: target '3' is not a directory
[06:29:43] <Kingsy> count=53; for f in *.mkv; do echo "mv '$f' S01E0$count.mkv"; let count=count+1; done <- is what I have which gnerates for example -> mv 'S04E01 - Cell on the Verge of Defeat! Krillin, Destroy' Android' 18!.mkv' S01E053.mkv
[06:29:53] <Kingsy> so thefilename as it is right now is S04E01 - Cell on the Verge of Defeat! Krillin, Destroy' Android' 18!.mkv
[06:30:22] <greycat> that doesn't go backwards.  I thought you needed to go backwards.  And you're not running mv commands, so who knows what will happen when you run the actual command that you aren't showing.
[06:30:55] <Kingsy> by backwards I just meant I am trying to generate a mv command to put things into a more sane state.
[06:31:17] <greycat> Your first (wrong) example had $(ls -r *.mkv) which goes backward.
[06:31:20] <greycat> Or tries to.
[06:31:29] <Kingsy> ohhh yeah scrap that.
[06:31:29] <earendel> i think you could do that if you're out to create a script with that echo.  in that case it would be safe to quote the filenames in the resulting script. right?
[06:31:45] <earendel> maybe that's obvious.
[06:31:48] <Kingsy> for f in *.mkv did the job in the end
[06:31:59] <greycat> if you don't need to go backward, then:  count=53; for f in *.mkv; do mv "$f" FOOBAR"$((count++))".mkv; done
[06:32:53] <greycat> if you want to see the mv commands instead of running them, DO NOT CHANGE ANY OF THE QUOTES, and simply put echo in front of mv.
[06:33:11] <emanuele6> you could use to do *that* is: shopt -s nullglob; files=(*.mkv); for (( i = 0; i < ${#files[@]}; ++i )); do printf 'mv -- %q S05E0%q.mkv' "${files[-i]}" "$i"
[06:33:26] <emanuele6> but why would you generate code?
[06:33:32] <greycat> don't make it complicated
[06:33:34] <emanuele6> i forgot \n after mkv
[06:33:35] <tirnanog> to make it hard.
[06:33:45] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Ping timeout: 248 seconds)
[06:34:12] <emanuele6> and done
[06:34:24] <emanuele6> and i messed up the sentence
[06:35:48] *** Guest8893 is now known as r00t
[06:36:17] *** r00t is now known as Guest922
[06:38:43] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[06:39:30] <Kingsy> thanks! yeah Its a bit of a mess. but I appreciate the advice 
[06:42:39] <emanuele6> # for x in {a..c};do echo "$i">"$i".mkv;done;for ((i=0;i<${#files[@]};++i));do printf 'mv -- %q S05E0%q.mkv' "${files[-i]}" "$i;done
[06:42:46] <shbot> emanuele6: Missing terminating quote, bracket or keyword
[06:42:56] <earendel> emanuele6: 'but why would you generate code?' --> it's executable. if you create just a list of things (at a time, for instance), you'd need to know what to do with each item (in the future). scripts can do that.
[06:42:57] <emanuele6> # for x in {a..c};do echo "$i">"$i".mkv;done;for ((i=0;i<${#files[@]};++i));do printf 'mv -- %q S05E0%q.mkv' "${files[-i]}" "$i";done
[06:42:58] <shbot> emanuele6: no output
[06:43:27] <emanuele6> oh, i forgot files=(*.mkv) ...
[06:43:37] <emanuele6> # for x in {a..c};do echo "$i">"$i".mkv;done;files=(*.mkv);for ((i=0;i<${#files[@]};++i));do printf 'mv -- %q S05E0%q.mkv' "${files[-i]}" "$i";done
[06:43:38] <shbot> emanuele6: mv -- \*.mkv S05E00.mkv
[06:44:12] <greycat> for x   "$i"
[06:44:19] <earendel> !porn2
[06:44:19] <greybot> i=0; for f in ./*.jpg; do printf -v num %05d "$((++i))"; mv "$f" "$num.jpg"; done
[06:44:26] <earendel> iirc :>
[06:44:38] <emanuele6> # for x in {a..c};do echo "$x">"$x".mkv;done;files=(*.mkv);for ((i=0;i<${#files[@]};++i));do printf 'mv -- %q S05E0%q.mkv' "${files[-i]}" "$i";done
[06:44:39] <shbot> emanuele6: mv -- a.mkv S05E00.mkvmv -- c.mkv S05E01.mkvmv -- b.mkv S05E02.mkv
[06:44:42] <greycat> yes, porn2 is relevant here for sure
[06:44:50] <emanuele6> and \n again
[06:44:51] <emanuele6> whatever
[06:45:13] *** Joins: dom2 (~dom2@c-65-96-173-68.hsd1.ma.comcast.net)
[06:45:17] <emanuele6> # for x in {a..c};do echo "$x">"$x".mkv;done;shopt -s nullglob;files=(*.mkv);for ((i=0;i<${#files[@]};++i));do printf 'mv -- %q S05E0%q.mkv\n' "${files[-i]}" "$i";done
[06:45:19] <shbot> emanuele6: mv -- a.mkv S05E00.mkv
[06:45:19] <shbot> emanuele6: mv -- c.mkv S05E01.mkv
[06:45:19] <shbot> emanuele6: mv -- b.mkv S05E02.mkv
[06:45:43] <emanuele6> wait, why is it not in reverse though?
[06:46:42] <emanuele6> oh
[06:46:57] <greycat> you're doing [-0] [-1] [-2].  which is just [0] [-1] [-2].
[06:46:58] <emanuele6> # for x in {a..c};do echo "$x">"$x".mkv;done;shopt -s nullglob;files=(*.mkv);for ((i=0;i<${#files[@]};++i));do printf 'mv -- %q S05E0%q.mkv\n' "${files[-i-1]}" "$i";done
[06:46:59] <shbot> emanuele6: mv -- c.mkv S05E00.mkv
[06:47:00] <shbot> emanuele6: mv -- b.mkv S05E01.mkv
[06:47:00] <shbot> emanuele6: mv -- a.mkv S05E02.mkv
[06:47:06] <emanuele6> there
[06:47:07] *** Joins: gnoo (~gnoo@user/gnoo)
[06:49:36] <emanuele6> earendel: > it's executable. if you create just a list of things (at a time, for instance), you'd need to know what to do with each item (in the future). scripts can do that.
[06:49:42] <emanuele6> i don't understand what you mean
[06:49:55] *** Quits: dom2 (~dom2@c-65-96-173-68.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[06:50:00] <emanuele6> i'm asking why you want to print mv(1) commands
[06:50:11] <emanuele6> your original message had echo mv ...
[06:50:24] <greycat> to make sure the script is correct before you break things
[06:50:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 240 seconds)
[06:50:41] <greycat> but you don't use crazy %q shit for this; you just put echo in front of mv
[06:50:48] <earendel> # files=(a b c); for ((i={#files[@]};i-->0;)); do printf "[${files[$i]}]"; done;
[06:50:49] <shbot> earendel: bash: ((: i={#files[@]}: syntax error: operand expected (error token is "{#files[@]}")
[06:50:52] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 250 seconds)
[06:50:57] <greycat> you don't want to CHANGE the code that you're sanity-checking
[06:52:05] <Al2O3> 'code sanity-check', best oxymoron of the day/week and maybe year :)
[06:52:06] <emanuele6> oh, ok. the weird quoting made me thing he wanted to generate mv commands instead of running them
[06:52:21] <emanuele6> s/thing/think/
[06:52:30] <Al2O3> greycat: btw, great to see you here still :)  What a wonderful thing you do for bash and others.
[06:52:45] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[06:52:57] <emanuele6> also the "how can i change it to support filenames that have spaces"
[06:53:19] <greycat> (by quoting correctly)
[06:53:30] <emanuele6> right
[06:54:56] *** Joins: tp43_ (~ndeem@2001:1970:501a:e201:7dd8:7bb5:b166:9697)
[06:56:36] *** Joins: manin (~X@185.242.190.95)
[06:57:08] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[06:58:20] *** Joins: fstd_ (~fstd@xdsl-78-35-86-208.nc.de)
[06:58:24] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Remote host closed the connection)
[06:59:03] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[07:00:50] *** Quits: manin (~X@185.242.190.95) (Ping timeout: 250 seconds)
[07:01:10] *** Quits: audiobirb (~audio@2603-8081-1801-3bb5-ecc4-2df9-195d-cbcb.res6.spectrum.com) (Ping timeout: 240 seconds)
[07:02:04] *** Joins: cheer (~Firegem@104.238.129.143)
[07:02:08] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 250 seconds)
[07:02:34] *** Quits: fstd (~fstd@xdsl-78-35-72-109.nc.de) (Ping timeout: 272 seconds)
[07:03:28] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[07:04:13] *** Quits: jos1 (~jos3@dyndsl-091-096-035-163.ewe-ip-backbone.de) (Ping timeout: 252 seconds)
[07:05:10] *** Quits: Gothiclown (uid512238@id-512238.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:08:12] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 250 seconds)
[07:09:20] *** Joins: Rug (~matt@107-179-194-219.cpe.teksavvy.com)
[07:10:37] <Rug> Could somebody give me a hint why this doesn't work/how to make it work?     echo "up" >>"hostname.em"{0..3}
[07:10:39] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:10:55] <greycat> you need tee, or a loop, to write to more than one file
[07:11:04] <Rug> ahhhh
[07:11:17] <Rug> ok, thanks.
[07:11:34] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[07:11:57] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[07:11:58] <Rug> since this worked, I figured the other would too:     touch "hostname.em"{0..3}
[07:12:05] <Rug> greycat: Thank-you.
[07:13:18] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[07:13:55] *** Quits: Rug (~matt@107-179-194-219.cpe.teksavvy.com) (Client Quit)
[07:14:50] *** Joins: audiobirb (~audio@2603-8081-1801-3bb5-27c8-a94a-768a-c5a3.res6.spectrum.com)
[07:16:09] *** Joins: jos1 (~jos3@dyndsl-091-096-040-198.ewe-ip-backbone.de)
[07:16:16] <emanuele6> that works in zsh, but not in bash
[07:16:52] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[07:19:58] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[07:20:31] *** Quits: Lunaris (~Lunaris@gateway/tor-sasl/lunaris) (Quit: leaving)
[07:31:24] *** Joins: seninha (~seninha@user/seninha)
[07:33:55] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 252 seconds)
[07:35:10] <matthewcroughan> how do you make a multiline array in bash?
[07:35:28] <greycat> mapfile -t lines < file    # or < <(cmd)
[07:35:53] <matthewcroughan> < file ?
[07:36:02] <matthewcroughan> Is this assuming the lines I want in the array are in a file?
[07:36:09] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:36:15] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[07:36:24] *** Guest922 is now known as r00t
[07:36:26] <matthewcroughan> what about if I want to have these lines inside of the same script? How do I encode the lines?
[07:36:35] *** Joins: vysn (~vysn@user/vysn)
[07:36:53] <neshpion> you mean a heredoc?
[07:36:53] *** r00t is now known as Guest5552
[07:37:00] <neshpion> or do you mean the output of commands in the script
[07:37:02] <emanuele6> this is not an array
[07:37:09] <matthewcroughan> I mean commands to run, not outputs of commands
[07:37:17] <yitz> matthewcroughan: arr=("a b c" "def")
[07:37:29] <neshpion> then the second part of greycat's example: `mapfile -t lines < <(commands)`
[07:37:36] <neshpion> this is process substitution
[07:37:41] <matthewcroughan> yitz: yes, but I don't want to put everything into 1 line 
[07:37:51] <neshpion> oh not outputs
[07:37:55] <neshpion> nevermind me then
[07:37:56] <yitz> matthewcroughan: You can add newlines in there
[07:37:57] <emanuele6> matthewcroughan: what do you mean?
[07:38:05] <matthewcroughan> will make a pastebin, one moment 
[07:38:08] <neshpion> so basically, another script as a heredoc...
[07:38:16] <neshpion> except as lines in an array
[07:38:32] <matthewcroughan> neshpion: https://pastebin.com/raw/VE8EiRz9
[07:38:43] <matthewcroughan> these are the lines I want to put into a list, so I can do a for loop over them.
[07:39:46] <llua> to eventually run them as commands?
[07:39:51] <matthewcroughan> yeah
[07:40:02] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:17] <matthewcroughan> I actually want to say something like "Run each command in this list, then also run this zip command for each one of them"
[07:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:32] <matthewcroughan> because I don't want to write zip 9 times
[07:40:34] <neshpion> doesn't go have a build system that can do what you need?  this is going in the direction of `eval`...
[07:40:51] <matthewcroughan> neshpion: not with this level of control, no 
[07:40:55] <matthewcroughan> besides, I'm writing Nix.
[07:41:16] <matthewcroughan> I'm just aiming to package something up in an identical format to what someone is already doing, because I want to provide them with an example of how Nix works.
[07:41:28] <yitz> vals=("darwin amd64" "linux 386"); for i in "${vals}"; do read -r os arch <<< "$i"; GOOS=$os GOARCH=$arch go ...; done
[07:41:50] <yitz> The last line has out vs $out
[07:41:52] <matthewcroughan> yitz: if it modifies the composition, it's not really useful 
[07:42:17] <yitz> It doesn't
[07:42:22] <matthewcroughan> yitz: thanks, good catch, I removed that by accident when pasting 
[07:42:55] <matthewcroughan> yitz: it does, because it is no longer GOOS= anymore
[07:43:01] <matthewcroughan> it's now inside of vals
[07:43:14] <matthewcroughan> that means the guy who wrote the original script will assume I'm being bash-clever, which means he will reject what I am doing 
[07:43:26] <matthewcroughan> I'm only interested in reducing the work, not improving upon the composition
[07:44:08] <matthewcroughan> It's a simple matrix of outputs, you can't improve upon it.
[07:44:30] <matthewcroughan> If you try to improve on a matrix like that, you'll end up with something you can't easily modify in a text editor, which is what you've given me.
[07:45:13] <matthewcroughan> Assume you want to change `GOOS=linux GOARCH=riscv64 go build -o $out/webircgateway.linux_riscv64` to riscv64, if you put that into a list like you have, I don't think you can without some testing, but if you leave it as the matrix it currently is, you can easily modify the var.
[07:45:31] <matthewcroughan> to riscv32*
[07:45:33] *** Joins: lq (~lq@116.228.78.182)
[07:46:16] <matthewcroughan> I mean, I would see what you were doing if GOARM wasn't a variable that had to be set. It would be much neater.
[07:46:50] *** Quits: lq820105 (~lq@180.167.42.7) (Read error: Connection reset by peer)
[07:47:49] *** Joins: dermoth_ (~dermoth@user/dermoth)
[07:47:52] *** Quits: dermoth (~dermoth@user/dermoth) (Killed (NickServ (GHOST command used by dermoth_)))
[07:47:54] *** dermoth_ is now known as dermoth
[07:49:24] <matthewcroughan> https://stackoverflow.com/questions/46136611/how-to-define-array-in-multiple-lines-in-shell
[07:49:27] <matthewcroughan> this has been my solution :D
[07:49:40] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 240 seconds)
[07:49:50] <llua> yeah, that is janky
[07:50:00] <matthewcroughan> can you describe how it is janky?
[07:50:08] <llua> !faq complex
[07:50:09] <greybot> https://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
[07:50:35] <matthewcroughan> hehe
[07:50:44] <emanuele6> $out would not be quoted
[07:50:51] <emanuele6> !quote
[07:50:52] <greybot> https://mywiki.wooledge.org/Quotes
[07:51:06] <matthewcroughan> Hmm.. I shall use a let/in block in Nix then, instead of trying to do this in bash.
[07:51:38] <emanuele6> that is a better approach for sure 
[07:51:48] <matthewcroughan> are you familiar with Nix? :o
[07:52:02] <emanuele6> anything is better than `eval'-like nonsense
[07:53:11] <emanuele6> if you want to use bash, do as yitz suggested, that is a good solution
[07:53:31] <emanuele6> it is still a matrix
[07:55:47] *** Quits: ponies (~ponies@203.111.95.26) (Quit: Lost terminal)
[07:57:10] *** Joins: pj (~pj@ghettoforge/pj)
[07:57:47] *** Quits: jab416171 (~jab416171@c-174-52-176-66.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[07:58:26] *** Joins: CodePoint (~BitShift@2600:1700:3070:3790::29)
[08:01:34] *** Joins: aakashi2001 (~aakashi20@103.61.255.10)
[08:02:37] *** Joins: jab416171 (~jab416171@c-174-52-176-66.hsd1.ut.comcast.net)
[08:02:43] <emanuele6> matthewcroughan: http://paste.wooledge.org/8930
[08:02:47] <emanuele6> something like this
[08:05:29] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Ping timeout: 248 seconds)
[08:05:30] <emanuele6> or add el/hf as a fourth column in targets if you don't want to use a case
[08:06:47] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[08:09:07] *** Joins: grettke_ (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[08:11:10] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Ping timeout: 240 seconds)
[08:12:22] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[08:12:50] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[08:14:48] <matthewcroughan> emanuele6: hehe, the nix method worked great
[08:15:01] <matthewcroughan> nix and bash are just great companions, weird how it can even have a symbiosis
[08:15:11] <matthewcroughan> you'd think something that writes bash would be basically garbage, but it works out very nicely
[08:15:44] <matthewcroughan> emanuele6: https://pastebin.com/raw/YKg1K5Fh
[08:16:35] <emanuele6> !quote > matthewcroughan: your script is **very** bad
[08:16:35] <greybot> matthewcroughan: your script is **very** bad: https://mywiki.wooledge.org/Quotes
[08:16:51] <matthewcroughan> The buildPhase runs `echo $goCommands` and the result is the list I wanted which i can now parse with your mapfile
[08:17:20] <matthewcroughan> Why is it bad?
[08:17:39] <matthewcroughan> I mean, it's only bad if the input changes, which it doesn't.
[08:17:49] <matthewcroughan> The result I get is correct.
[08:18:19] <matthewcroughan> The input doesn't change, the whole point of nix is determinism, immutability, etc. So I understand what you're saying, but if I get the correct result here, it doesn't really matter, since the input data never changes.
[08:19:02] <matthewcroughan> And if it did fail, there'd be a nice handy error about it, because it wouldn't produce the right answer, and the application "kiwiirc" wouldn't be in the $out dir, so the build would fail and be easy to debug :D
[08:19:18] <emanuele6> unquoted variables are subject to (IFS-dependant) word splitting and are interpreted as glob patterns that are subject to pathname expansion
[08:19:36] <matthewcroughan> right, and why does that matter in the case of a pure function?
[08:19:52] <emanuele6> export IFS=/
[08:20:03] *** Joins: mihael (~mihael@2001:4454:24e:f800:1dc5:81af:a483:9184)
[08:20:24] <matthewcroughan> Oh wow, didn't know you could set that as a var, neat.
[08:21:03] <matthewcroughan> emanuele6: fwiw though, maybe look into what Nix is doing when you write attributes, and how it exposes them to the shell.
[08:21:14] <matthewcroughan> I'm pretty sure it is sanitizing what you're talking about 
[08:21:35] <emanuele6> just test it
[08:21:56] <emanuele6> run your script with IFS=/ in your environment and see if it works as you expect 
[08:22:11] <matthewcroughan> ? That can't possibly work, the build is sandboxed.
[08:22:21] <matthewcroughan> If I run `nix-build` it has absolutely no access to my environment variables
[08:22:30] <matthewcroughan> This is called purity, sorry if I'm explaining something you already know.
[08:22:46] *** Parts: nickodd (~nickodd@user/nickodd) ()
[08:22:50] <matthewcroughan> This script is ran inside a sandbox which is pure,
[08:23:18] <emanuele6> ok, but even if IFS is unset, you still have problems if out has spaces in its name
[08:23:23] <matthewcroughan> It won't be unset.
[08:23:33] <matthewcroughan> It will be set according to the stdenv, which is a Nix standard.
[08:23:35] <emanuele6> matthewcroughan: it's unset by default...
[08:23:47] <matthewcroughan> well let's see what the stdenv sets it to 
[08:24:12] <matthewcroughan> ( running `nix build nixpkgs#stdenv` ) to see
[08:24:42] <matthewcroughan> well.. it's not actually as simple as you'd expect
[08:24:56] <emanuele6> what are you talking about?
[08:24:59] *** Quits: grettke_ (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[08:25:02] <matthewcroughan> emanuele6: https://termbin.com/p1qk
[08:25:08] <matthewcroughan> this is roughly the environment the script has
[08:25:24] <emanuele6> it does not IFS
[08:25:29] <emanuele6> IFS is unset by default
[08:25:43] <matthewcroughan> It seems to define it in some contexts if you ctrl + f for it 
[08:26:03] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[08:26:07] <emanuele6> matthewcroughan: i did, where it sets them is scopped
[08:26:15] <emanuele6> s/pp/p/
[08:26:49] <matthewcroughan> Yup, you're right :D
[08:27:11] <matthewcroughan> yeah, okay, so I did `export ifs=/`
[08:27:19] <matthewcroughan> would you like to see how it failed? (meant capital IFS btw)
[08:27:21] *** Joins: austin987 (~null@100.42.98.196)
[08:27:35] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[08:27:45] <emanuele6> ok 
[08:27:53] <matthewcroughan> emanuele6: https://pastebin.com/raw/UuCb0YCw
[08:27:56] <matthewcroughan> here's how it failed
[08:28:17] <emanuele6> GOOS=linux GOARCH=arm GOARM=5 go build -o $out webircgateway.linux_armel
[08:28:39] <matthewcroughan> yes, but IFS is never set, so what is it you're thinking I should be quoting for?
[08:28:52] <matthewcroughan> The standard bash rules can't apply here, because of the env being "pure" and unscrewed with.
[08:29:14] <matthewcroughan> so I'm just gonna go with easier to read, because I know that my phase is uneffected by anything in the environment.
[08:29:42] <emanuele6> $out is still subject to word splitting if IFS is unset
[08:29:50] <emanuele6> it splits on any whitespace it that case
[08:29:59] <emanuele6> also to pathname expansion
[08:31:00] *** Joins: PinealGlandOptic (~PinealGla@37.115.210.35)
[08:31:19] <emanuele6> !quote: all you need to do to fix it is quote $out
[08:31:24] <emanuele6> !quote
[08:31:25] <greybot> https://mywiki.wooledge.org/Quotes
[08:31:47] <emanuele6> GOOS=darwin GOARCH=amd64 go build -o "$out/webircgateway.darwin"
[08:32:55] <emanuele6> if $out contains '*', '?' or '[' and ']' pathname expansion occurs if you don't
[08:33:48] <emanuele6> and if $out contains any whitespace (any whitespace is uses as IFS when IFS is not set), word splitting will occur on whitespace
[08:34:36] <emanuele6> this is how parameter expansion works, it has nothing to do with the system being sandboxed or not
[08:34:41] *** Joins: dsrt^ (~dsrt@209.65.131.194)
[08:35:44] <emanuele6> export IFS=/ is simply an easy way to show it
[08:36:02] <emanuele6> and you also need to quote: echo "$goCommands"
[08:36:49] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[08:37:02] *** Guest5552 is now known as r00t
[08:37:11] <emanuele6> but this solution is *janky* anyway. have you seen mine? http://paste.wooledge.org/8930
[08:37:31] *** r00t is now known as Guest3352
[08:39:22] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 252 seconds)
[08:39:46] <emanuele6> or also http://paste.wooledge.org/8931
[08:42:59] <emanuele6> or this if you don't want to use case http://paste.wooledge.org/8935
[08:45:02] *** Quits: CodePoint (~BitShift@2600:1700:3070:3790::29) (Quit: Never gonna give you up, never gonna let you down...)
[08:46:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 240 seconds)
[08:48:17] *** Quits: mihael (~mihael@2001:4454:24e:f800:1dc5:81af:a483:9184) (Quit: Client closed)
[08:48:22] <jaggz> what's a good way to get settings from another script?
[08:48:40] <jaggz> I currently source it, so I get these multiple vars available
[08:49:54] <jaggz> problem is, I was designing it so it (the settings script) could accept an arg, so it could make a decision on the settings
[08:52:55] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[08:53:40] <jaggz> looks like, if I don't pass any args, there's no choice and it'll take the current args
[08:54:55] <jaggz> "Fortunately, there's a workaround; just source the script in a context where there are no arguments:"
[08:55:53] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[08:58:25] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[09:02:36] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 250 seconds)
[09:04:07] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[09:04:20] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 268 seconds)
[09:08:00] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[09:08:35] *** Quits: skapate (~Skapata@user/skapata) (Remote host closed the connection)
[09:09:06] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 250 seconds)
[09:10:21] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[09:11:06] *** Joins: paulman (~kulernil@gateway/tor-sasl/kuler)
[09:11:36] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[09:17:24] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[09:23:27] <pj> jaggz: other options are to assign the args to an array, or to other variables, or to explicitly pass them to the sourced script.
[09:23:33] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:28:43] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[09:29:19] *** Quits: aakashi2001 (~aakashi20@103.61.255.10) (Quit: Leaving)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:06] *** Joins: fdan (~fdan@192.146.154.3)
[09:30:45] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[09:31:17] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[09:31:22] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:40] <fdan> hi there
[09:32:44] <fdan> what is the output of this snippet https://dpaste.org/QgzL
[09:33:10] *** Joins: aakashi2001 (~aakashi20@103.61.255.28)
[09:34:46] <joo> that will depend on what additional parameters You put when running it
[09:35:52] *** Quits: aakashi2001 (~aakashi20@103.61.255.28) (Client Quit)
[09:36:09] *** Joins: aakashi2001 (~aakashi20@103.61.255.10)
[09:36:14] *** Joins: aakashi2009 (~aakashi20@103.61.255.10)
[09:37:36] *** Guest3352 is now known as r00t
[09:38:05] *** r00t is now known as Guest549
[09:38:36] *** Quits: aakashi2009 (~aakashi20@103.61.255.10) (Remote host closed the connection)
[09:38:36] *** Quits: aakashi2001 (~aakashi20@103.61.255.10) (Remote host closed the connection)
[09:38:40] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 240 seconds)
[09:41:19] <geirha> In case it wasn't obvious, it will print all the environment variables, then run the command passed as arguments
[09:41:35] <fdan> sure
[09:44:05] *** Joins: aakashi2001 (~aakashi20@103.61.255.10)
[09:44:16] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 252 seconds)
[09:45:38] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:47:33] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[09:51:04] *** Quits: litheum (~kolbe@user/kolbe) (Quit: ZNC - http://znc.sourceforge.net)
[09:53:25] *** Joins: manin (~X@185.242.190.95)
[09:53:44] *** Joins: litheum (~kolbe@user/kolbe)
[09:55:02] *** Quits: manin (~X@185.242.190.95) (Remote host closed the connection)
[09:55:16] *** Joins: manin (~X@185.242.190.95)
[09:57:09] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[10:00:06] *** Quits: litheum (~kolbe@user/kolbe) (Quit: ZNC - http://znc.sourceforge.net)
[10:03:13] *** Joins: litheum (~kolbe@user/kolbe)
[10:04:08] *** Quits: carlos (~pum@user/carlos) (Remote host closed the connection)
[10:08:58] *** Quits: litheum (~kolbe@user/kolbe) (Quit: ZNC - http://znc.sourceforge.net)
[10:12:07] *** Joins: frostwork (~frostwork@user/frostwork)
[10:12:22] *** Joins: litheum (~kolbe@user/kolbe)
[10:15:16] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[10:16:10] *** Quits: aakashi2001 (~aakashi20@103.61.255.10) (Ping timeout: 252 seconds)
[10:17:44] *** Quits: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net) (Read error: Connection reset by peer)
[10:17:56] *** Joins: fdan (~fdan@192.146.154.3)
[10:18:48] <fdan> geirha i get this ../entrypoint.sh export test=val1l;  error:    line 5: exec: export: not found
[10:20:10] <geirha> export is a builtin command so you can't exec it. Doesn't make any sense to do so either
[10:20:34] <fdan> with exec what are the other things i am allowed to pass on
[10:20:36] <geirha> but s/export/env/  will probably do what you want
[10:20:38] <fdan> can you give some examples
[10:21:03] <fdan> yes that works
[10:21:09] <geirha> any file in the filesystem with executable permission
[10:21:25] <geirha> (is what you can run with exec)
[10:22:28] *** Joins: nickodd (~nickodd@user/nickodd)
[10:22:35] <geirha> the output from your entrypoint will not include the test var though
[10:28:22] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[10:31:59] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[10:32:07] *** Quits: plitter (~plitter@user/plitter) (Ping timeout: 245 seconds)
[10:32:34] *** Quits: unixman_home (~unixman2@216.137.241.98) (Remote host closed the connection)
[10:33:24] *** Joins: plitter (~plitter@78.31.86.243)
[10:33:24] *** Quits: plitter (~plitter@78.31.86.243) (Changing host)
[10:33:24] *** Joins: plitter (~plitter@user/plitter)
[10:33:30] *** Joins: unixman_home (~unixman2@216.137.241.98)
[10:33:32] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[10:35:53] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 258 seconds)
[10:38:10] *** Guest549 is now known as r00t
[10:38:39] *** r00t is now known as Guest5541
[10:39:33] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:42:02] *** Joins: lq820105 (~lq@116.228.78.182)
[10:42:22] *** Joins: jetchisel (jetchisel@user/jetchisel)
[10:43:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 240 seconds)
[10:43:11] *** Quits: lq (~lq@116.228.78.182) (Read error: Connection reset by peer)
[10:44:34] *** Quits: unixman_home (~unixman2@216.137.241.98) (Remote host closed the connection)
[10:44:53] *** Joins: unixman_home (~unixman2@216.137.241.98)
[10:46:56] *** Joins: lavaball (felix@31.204.155.215)
[10:52:14] *** Joins: dom2 (~dom2@c-65-96-173-68.hsd1.ma.comcast.net)
[10:59:37] *** Quits: dom2 (~dom2@c-65-96-173-68.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[11:07:34] <fdan> while true; do sleep 10; done
[11:07:44] <fdan> this keeps on running forever.. 
[11:07:50] <fdan> how to make this running for 10 seconds
[11:09:46] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[11:10:08] <pj> fdan: sleep 10
[11:13:34] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:13:46] *** Quits: hesco (~hesco@209.195.11.75) (Ping timeout: 240 seconds)
[11:15:30] <fdan> i saw in a tutorial that they use this while true; do sleep 10; done
[11:15:33] <fdan> what is the use of that
[11:16:21] *** Joins: hesco (~hesco@209.195.11.75)
[11:17:22] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Ping timeout: 250 seconds)
[11:17:54] *** Quits: codebam (~codebam@user/codebam) (Remote host closed the connection)
[11:21:17] *** Quits: fstd_ (~fstd@xdsl-78-35-86-208.nc.de) (Remote host closed the connection)
[11:21:28] *** Joins: fstd (~fstd@xdsl-78-35-86-208.nc.de)
[11:22:19] <jaggz> pj, irritating for "get-mic-device 1"  :)
[11:22:44] <jaggz> (to put the args in some arrays or something).. especially since sometimes that sourced script is called from shell by hand when working on something
[11:22:57] <jaggz> although, that'd just mean making a wrapper for it for the manual call so that isn't actually so bad 
[11:23:02] <osse> fdan: are you sure they don't intend it to run forever?
[11:23:20] <jaggz> still, I prefer simple.. not adding to the complexity and requirements of each thing
[11:23:45] *** Joins: codebam (~codebam@user/codebam)
[11:24:14] <jaggz> possibly the nicest solution (in my case) is to do foo () { source get-mic-device } 
[11:24:25] <jaggz> (which will get the first device, since I didn't give any args)
[11:24:45] <jaggz> there should be some way of sourcing where you can specify no args
[11:24:55] *** Quits: jos1 (~jos3@dyndsl-091-096-040-198.ewe-ip-backbone.de) (Ping timeout: 252 seconds)
[11:24:59] <jaggz> source --noargs foo
[11:25:58] *** Joins: jos1 (~jos3@dyndsl-091-096-040-198.ewe-ip-backbone.de)
[11:26:13] *** Joins: sQVe (~sQVe@user/sqve)
[11:26:35] *** Joins: Mo (~Mo@dynamic-077-006-149-153.77.6.pool.telefonica.de)
[11:36:08] *** Joins: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87)
[11:38:46] *** Guest5541 is now known as r00t
[11:38:55] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[11:39:15] *** r00t is now known as Guest1101
[11:41:35] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 268 seconds)
[11:44:10] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 252 seconds)
[11:44:14] *** Quits: tp43_ (~ndeem@2001:1970:501a:e201:7dd8:7bb5:b166:9697) (Ping timeout: 250 seconds)
[11:45:26] *** Joins: lq (~lq@210.72.8.208)
[11:46:55] *** Quits: lq820105 (~lq@116.228.78.182) (Ping timeout: 252 seconds)
[11:48:56] *** Joins: Atque (~Atque@user/atque)
[11:48:58] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Ping timeout: 244 seconds)
[11:49:02] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[11:50:33] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[11:50:36] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[11:54:40] <pj> jaggz: the only way I can think of is to set -- first
[11:56:10] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[11:56:24] <jaggz> pj, set what?
[11:56:42] <tirnanog> set no positional parameters.
[11:56:49] <pj> # printf '%s\n' 'printf "<%s>" "$#" "$@"' > sourcefile; set -- foo bar baz; ar=("$@"); set --; . sourcefile; set -- "${ar[@]}"
[11:56:51] <shbot> pj: <0>
[11:57:54] <jaggz> # printf '%s\n' 'printf "<%s>" "$#" "$@"' > sourcefile; set -- foo bar baz; ar=("$@"); set --; unset --; . sourcefile; set -- "${ar[@]}"
[11:57:55] <shbot> jaggz: <0>
[11:58:07] <jaggz> how do you unset it?
[11:58:21] <pj> how do you unset what?
[11:59:18] <jaggz> pj, nevermind. was reading about it.  setting -- will UNSET the positional parameters.  unsetting -- doesn't magically put them back
[11:59:35] <pj> no, that's why I stored them in an array and put them back
[11:59:51] <jaggz> thought it might have been more like a "disable positional parameters" thing
[12:00:10] <jaggz> oh that's that last part.. I see.  okay thanks
[12:00:20] <jaggz> cool :)
[12:00:24] <pj> found another way
[12:00:35] <jaggz> do tell!
[12:00:40] <pj> you can source from inside a function that doesn't have any args passed to it.
[12:00:52] <pj> printf '%s\n' 'printf "<%s>" "$#" "$@"' > sourcefile; set -- foo bar baz; f () { . sourcefile; }; f
[12:01:02] <pj> # printf '%s\n' 'printf "<%s>" "$#" "$@"' > sourcefile; set -- foo bar baz; f () { . sourcefile; }; f
[12:01:05] <shbot> pj: <0>
[12:01:15] *** Joins: karakedi (~eAC53C340@user/karakedi)
[12:01:19] <jaggz> yeah that's what I was referring to with: "Fortunately, there's a workaround; just source the script in a context where there are no arguments:"
[12:01:23] <pj> the function call resets the positional parameters for the function.
[12:01:42] <jaggz> I should have posted the actual "stick it in a function" example so it'd make sense more readily
[12:01:56] <pj> of course if your sourced code can get away with it then passing an empty arg is probably easiest...
[12:01:56] <jaggz> (it was in a post I found)
[12:02:10] <pj> # printf '%s\n' 'printf "<%s>" "$#" "$@"' > sourcefile; set -- foo bar baz; . sourcefile ''
[12:02:11] <shbot> pj: <1><>
[12:02:33] <jaggz> hmm
[12:02:51] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[12:03:16] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[12:03:45] <jaggz> right.. it is easy, but I don't want to make it have a required arg.. actually I *do* want it to handle its default (to set some vars for the first mic found) when caleed with nothing
[12:04:03] <jaggz> but I think we have some options here and are good for now and into the future
[12:04:13] <pj> sure, I was just pointing that one out, but it all really depends on your particular needs.
[12:04:27] <jaggz> still, source --noargs script   would be good
[12:04:44] <jaggz> nod.. I appreciate it, and it's really good to know
[12:04:56] <jaggz> now, how can we save lives with it
[12:04:57] <tirnanog> why not encapsulate the applicable code within a function so that this problem simply goes away?
[12:05:10] <jaggz> tirnanog, that's one of the options
[12:05:31] <jaggz> it's a good simple one
[12:06:00] *** Quits: p-i- (~Ohmu@2403:6200:8870:41ad:ddbd:4a28:9a94:dc2) (Remote host closed the connection)
[12:06:07] <pj> # printf '%s\n' 'printf "<%s>" "$#" "$@"' > sourcefile; set -- foo bar baz; mysource () { filename=$1; shift; . "$1"; }; mysource sourcefile
[12:06:08] <shbot> pj: bash: : No such file or directory
[12:06:09] *** Quits: mjbatty (uid512825@id-512825.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[12:06:18] <pj> hrmmmmm
[12:06:31] <pj> oh
[12:06:49] <pj> # printf '%s\n' 'printf "<%s>" "$#" "$@"' > sourcefile; set -- foo bar baz; mysource () { local fn="$1"; shift; . "$fn"; }; mysource sourcefile
[12:06:51] <shbot> pj: <0>
[12:07:00] <pj> # printf '%s\n' 'printf "<%s>" "$#" "$@"' > sourcefile; set -- foo bar baz; mysource () { local fn="$1"; shift; . "$fn"; }; mysource sourcefile "$@"
[12:07:02] <shbot> pj: <3><foo><bar><baz>
[12:07:33] <pj> that is kinda nice that way, you just use mysource instead of source and you can explicitly pass args to it.
[12:07:46] <pj> # printf '%s\n' 'printf "<%s>" "$#" "$@"' > sourcefile; set -- foo bar baz; mysource () { local fn="$1"; shift; . "$fn"; }; mysource sourcefile a b
[12:07:47] <shbot> pj: <2><a><b>
[12:07:52] <pj> # printf '%s\n' 'printf "<%s>" "$#" "$@"' > sourcefile; set -- foo bar baz; mysource () { local fn="$1"; shift; . "$fn"; }; mysource sourcefile a b "$@"
[12:07:53] <shbot> pj: <5><a><b><foo><bar><baz>
[12:08:40] <jaggz> hey that's cool too
[12:10:24] <pj> hrmmmmm, that can be simplified...
[12:10:34] <jaggz> my. () {} 
[12:10:45] <pj> # printf '%s\n' 'printf "<%s>" "$#" "$@"' > sourcefile; set -- foo bar baz; mysource () { . "$@"; }; mysource sourcefile a b "$@"
[12:10:47] <shbot> pj: <5><a><b><foo><bar><baz>
[12:10:52] <pj> # printf '%s\n' 'printf "<%s>" "$#" "$@"' > sourcefile; set -- foo bar baz; mysource () { . "$@"; }; mysource sourcefile
[12:10:53] <shbot> pj: <1><sourcefile>
[12:11:00] <pj> oh, that doesn't work quite right
[12:11:29] <pj> oh, I see why, heh, so you want the initial version.
[12:11:32] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[12:13:04] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[12:13:21] <jaggz> # printf '%s\n' 'printf "<%s>" "$#" "$@"' > sourcefile; set -- foo bar baz; mysauce () { . "$@"; }; my.sauce sourcefile a b
[12:13:23] <shbot> jaggz: bash: my.sauce: command not found
[12:13:30] <jaggz> # printf '%s\n' 'printf "<%s>" "$#" "$@"' > sourcefile; set -- foo bar baz; mysauce () { . "$@"; }; mysauce sourcefile a b
[12:13:31] <shbot> jaggz: <2><a><b>
[12:13:43] <jaggz> # printf '%s\n' 'printf "<%s>" "$#" "$@"' > sourcefile; set -- foo bar baz; mysauce () { . "$@"; }; mysauce sourcefile
[12:13:45] <shbot> jaggz: <1><sourcefile>
[12:14:10] <pj> yeah, don't use that version, use the one with local and shift.
[12:14:33] <jaggz> yeah I put that one in my script already
[12:14:37] <jaggz> :)
[12:14:39] <jaggz> thanks
[12:14:40] <jaggz> fun
[12:14:45] <pj> yw :-)
[12:14:51] <jaggz> so, yeah.. this is for mic recording stuff
[12:15:11] <jaggz> for training this neural net to recognize sounds at home, without using a cloud service
[12:15:33] <jaggz> so when my person who breaths on a ventilator talks, and her mom can't hear, it'll repeat back what she says louder
[12:15:49] * pj nods, makes sense because you don't want to be transmitting everything you say at home to amazon.
[12:16:06] <jaggz> I've gotten its accuracy up really high now, so it should work, and I'm now working on the "keep the audio buffered and play it back" part
[12:16:13] <jaggz> yup
[12:16:19] <jaggz> and they also wouldn't handle this task
[12:16:33] <jaggz> (I might also enhance the audio.. as a later step.. to make it even more clear)
[12:16:41] <jaggz> so patient's mama can understand even better
[12:16:53] <pj> yeah, well there's a reason why I won't get one of those devices.
[12:17:13] <pj> although, tbh, I have a smart phone, I suppose that's not much better.
[12:18:02] <jaggz> yeah, same issue here
[12:18:38] <jaggz> now our satellite/cable/whatever (it's secret!) provider sent us a remote with a mic in it
[12:18:46] <jaggz> I'm.. uh.. sticking with the old one
[12:19:20] <pj> open up the remote and disable the mic?
[12:19:55] <jaggz> and who knows what they do with our phones nowadays.  it's possible to encode data so small and send it on its merry way to some foreign land (or local) without it being noticable
[12:20:11] *** Joins: michigan (uid507982@id-507982.charlton.irccloud.com)
[12:20:20] <jaggz> yeah but the rest of the remote isn't really an improvement 
[12:20:27] <jaggz> not iirc
[12:20:35] <pj> ahhhh, so may as well just keep using the old one.
[12:20:36] *** Joins: sazawal (~sazawal@106.213.43.60)
[12:20:38] <jaggz> just some differences in button functions but nothing that special
[12:20:40] <jaggz> yeah it'll be backup
[12:20:57] <pj> if the old remote fails *then* you can open up the new one and disable the mic.
[12:20:59] <pj> hahaha
[12:21:02] <jaggz> I don't recall if I can short out an electret mic to disable it
[12:21:12] <jaggz> pj, that's a good point.. I might want to fix that first :)
[12:21:23] <jaggz> to know in advance
[12:21:37] <pj> don't short it, just clip or desolder one of the leads.
[12:22:18] <jaggz> depending on their throughholes it might work, or it might still touch
[12:22:25] * pj nods
[12:22:27] <jaggz> anyway, yeah I can handle that part one way or another
[12:22:42] <pj> or use a dremil and just grind away the whole mic.
[12:22:55] <jaggz> few layers of tape over its hole
[12:23:08] <pj> yeah, that will muffle it at least.
[12:23:10] <jaggz> then they can only do sentiment analysis when we're angry at each other
[12:23:20] <jaggz> :)
[12:23:40] * jaggz has a flashback to an hour ago
[12:23:58] <pj> shorting the mic will disable it, btw, but it might do damage elsewhere.
[12:24:04] <kurahaupo> # which which
[12:24:06] <shbot> kurahaupo: Sorry, I don't do whichcraft.
[12:26:10] <kurahaupo> Could shbot be slightly adjusted to change that message to: « Sorry, I don't do whichcraft; pitchforks available at burnthewhich.github.io » 
[12:27:00] <jaggz> https://upload.wikimedia.org/wikipedia/commons/5/57/Electret_condenser_microphone_schematic.png
[12:28:02] <pj> jaggz: right, condensor mics are powered, so shorting one out could take out other circuitry.
[12:28:14] <jaggz> according to that, the v+ would be shorted directly to ground
[12:28:18] <jaggz> no good :)
[12:28:20] <pj> exactly
[12:28:41] <pj> it will certainly disable the mic, but it may very well do other damage as well, like I said.
[12:29:02] <jaggz> I wonder if there's a way to say "hey tv network, repeat back what you hear from me"
[12:29:22] <jaggz> so I can test if tape or something worked fine and I don't need to remove the thing
[12:29:29] <jaggz> anyway, it's not an issue.. old remote is working fine anyway
[12:29:35] <pj> yep
[12:29:39] <jaggz> this one's probably listening even when it's not powered
[12:29:54] <pj> hahaha, nope, it can't do anything without power.
[12:30:07] <jaggz> gotta bias the internal fet
[12:31:25] <pj> I'm actually surprised it has a condensor mic, I would have thought they would use a dynamic mic.
[12:31:26] <jaggz> alright.. enough of this.  :)
[12:31:31] <jaggz> oops.. timing made that rude
[12:31:39] <jaggz> blame "timing"
[12:31:49] <pj> it's not like sound quality is important for its function.
[12:32:00] <jaggz> oh I've not taken it apart, just most things nowadays use the electrets I've noticed
[12:32:09] <pj> ahhhh, okay
[12:32:29] <jaggz> our baby monitor also uses an electret.. and it seems really high quality
[12:32:47] <jaggz> I mean, it's not designed to be a studio mic, but it's made to accurately send even very subtle baby noises
[12:33:01] <jaggz> which is useful to use for adult patients who speak very softly :)
[12:33:09] <pj> yeah, those are high quality mics, condensor mics are what they use in high quality recording studios.
[12:33:33] <pj> but there are some pretty good dynamic mics out there as well.
[12:34:43] <jaggz> so.. what are you working on?
[12:35:13] <pj> a lot of stuff.
[12:35:44] <jaggz> (voice recognition doesn't understand the patient anyway, by the way)
[12:35:59] <jaggz> that would have been nice for her though
[12:36:16] <pj> This is my most recent bash work: https://github.com/rocky-linux/rocky-tools/blob/main/migrate2rocky/migrate2rocky.sh
[12:36:17] <checkbot> pj: I think the problem is on line 397. Expanding an array without an index only gives the first element. See 14 issues on https://shellcheck.net/?id=cb46776
[12:36:25] <pj> oh shut up bot.
[12:36:27] *** Joins: pystardust (~pystardus@223.226.119.16)
[12:36:47] <jaggz> as this project progresses I might see if I can convert her voice to text
[12:36:58] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[12:37:04] <jaggz> if that's too difficult, it's easier to train audio patterns -> computer command
[12:37:11] <jaggz> than audio -> text
[12:37:30] <jaggz> but audio->text makes it a lot easier to do dictation :)
[12:37:36] <pystardust> I found out the `<file` would function like cat, where can I findout about this in the manual?
[12:37:48] <pj> funny that the channels' shellcheck shows more issues than my local one.
[12:38:06] <jaggz> lol bot
[12:38:17] <pj> !<
[12:38:17] <greybot> Redirections: http://mywiki.wooledge.org/Redirection
[12:38:20] <tirnanog> kurahaupo: the last sentence of the second section implies some relationship between posix and which(1) but isn't it the case that there is none?
[12:38:22] <pj> pystardust: ^^^^
[12:38:45] <pj> !< > pystardust 
[12:38:45] <greybot> pystardust: Redirections: http://mywiki.wooledge.org/Redirection
[12:38:57] <pj> !uuoc > pystardust: Also see:
[12:38:58] <greybot> pystardust: Also see:: Useless Use Of Cat (cat foo | grep bar). See https://mywiki.wooledge.org/BashFAQ/119 and http://www.iki.fi/era/unix/award.html#cat
[12:39:14] <jaggz> "REDIRECTION" section in manpage
[12:39:22] *** Guest1101 is now known as r00t
[12:39:51] *** r00t is now known as Guest5796
[12:40:04] <jaggz> ## Using this script means you accept all risks of system instability.
[12:40:10] <jaggz> "up to and including death"
[12:40:25] <Helmholtz> Is it possible to print whitespaces if the var is empty?
[12:40:28] <pystardust> jaggz: i have gone trough redirection section, couldn't find the behaviour of just `<file` without command
[12:40:35] <jaggz> (just a joke. you covered it with the disclaimer above that line)
[12:40:44] <Helmholtz> printf "%-4s" "$my_var"
[12:40:46] <jaggz> what's <file without command do
[12:41:03] <Soliton> same as with command.
[12:41:22] <jaggz> # echo echo hi > foo; <foo
[12:41:24] <shbot> jaggz: no output
[12:41:43] <Soliton> kurahaupo: https://github.com/geirha/shbot-initramfs/blob/master/skel/bin/which
[12:41:55] <jaggz> # echo no output > foo; <foo
[12:41:57] <shbot> jaggz: no output
[12:42:54] <pj> # echo hi >foo; <foo cat
[12:42:56] <shbot> pj: hi
[12:42:57] <pystardust> yes i wanna know where this behaviour is listed in bash manual
[12:43:01] <Soliton> opening a file for reading does not mean something is going to actually read and even write that out.
[12:43:25] <pystardust> in posix, redirection like this without command is not defined
[12:45:52] <Soliton> "Redirection is used to open and close files for the current shell execution environment or for any command."
[12:46:20] <kurahaupo> Aren't empty commands a thing?
[12:47:26] *** Joins: xx (~xx@user/xx)
[12:48:58] <Helmholtz> no ideas?
[12:49:06] <izabera> #
[12:49:19] <izabera> shbot says they are not
[12:49:41] <jaggz> # printf "{%s4s}" "hi"
[12:49:42] <shbot> jaggz: {hi4s}
[12:49:49] <jaggz> # printf "{%4s}" "hi"
[12:49:51] <shbot> jaggz: {  hi}
[12:49:54] <jaggz> # printf "{%4s}" ""
[12:49:55] <shbot> jaggz: {    }
[12:49:59] <pystardust> Soliton: isn't opening and closing file defined for a command
[12:50:00] <jaggz> Helmholtz, hm?
[12:50:13] <jaggz> # printf "{%-4s}" ""
[12:50:14] <shbot> jaggz: {    }
[12:50:21] <Soliton> or the current shell execution environment
[12:51:22] <Helmholtz> jaggz, so it already works?
[12:51:25] <Helmholtz> weird
[12:51:34] *** Joins: fstd_ (~fstd@xdsl-87-78-42-230.nc.de)
[12:51:40] *** Quits: fstd (~fstd@xdsl-78-35-86-208.nc.de) (Ping timeout: 240 seconds)
[12:51:43] <Soliton> you could test if a file is readable/writable with just redirections if you wanted.
[12:52:10] <Bilge> Can you conditionally define functions and/or redeclare existing functions implementations?
[12:52:23] <Soliton> yes.
[12:52:24] <tirnanog> yes and yes.
[12:52:30] <Bilge> :^)
[12:56:55] <jaggz> pj, <password2> or a catacitor in parallel would prolly distort it so muc
[12:56:57] <jaggz> h
[12:57:10] <jaggz> duh
[13:01:08] *** Joins: earnestly (~earnest@user/earnestly)
[13:03:41] *** Joins: jhondoe (~jhondoe@139.191.247.2)
[13:03:54] <jhondoe> hello!
[13:04:13] <jhondoe> someone can help me to make it work? ssh -t user@jumpserver ssh -t dbserver -C sudo \"su - postgres -c 'psql -c "\l+"'\"
[13:04:35] <Soliton> oh boy
[13:04:41] <jhondoe> i'm going crazy.. seems stupid but I can't escape the \l+
[13:04:54] <jhondoe> i don't know why.. :(
[13:05:09] <Soliton> well, you have a million layers there.
[13:05:18] <jhondoe> yes it's real
[13:05:36] <jhondoe> I have tried to use ssh -J but i haven't a local key
[13:05:44] <jhondoe> so it seems the only solution..
[13:06:11] <Soliton> ssh -J user@jumpserver -t dbserver -C 'sudo -u postgres psql -c "\l+"'
[13:06:25] <Soliton> maybe
[13:06:51] <jhondoe> yesterday you gave me the advice about -J but it doesn't work
[13:07:11] <jhondoe> with -J i need to have .pem file on my local computer
[13:08:46] <Soliton> no clue why that would be.
[13:09:12] *** Joins: shad (~shad@user/shad)
[13:11:09] *** Joins: toad-x (~quassel@31.223.78.243)
[13:14:19] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[13:15:28] *** Joins: dreinull (~dreinull@static.50.114.119.168.clients.your-server.de)
[13:15:33] *** Joins: Enissay (~Enissay@user/enissay)
[13:15:56] <Soliton> if you can log in to your jump host why would -J be different?
[13:15:59] <dreinull> which channel do I ask for networking questions? 
[13:16:00] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[13:16:04] <dreinull> linux
[13:16:25] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[13:16:34] <Soliton> you can ask alis for channel listings.
[13:16:54] <jhondoe> Soliton with -J I can't use a key with password
[13:17:04] <Soliton> why not?
[13:17:30] <jhondoe> ssh search the key on the local host
[13:17:48] <jhondoe> not on the jump server
[13:17:56] <Soliton> you login to your jump host from local host either way.
[13:18:23] <Soliton> you mean the key to the final server is on the jump host?
[13:18:31] <jhondoe> yes
[13:19:05] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 248 seconds)
[13:19:34] <Soliton> ask #openssh how to configure that.
[13:19:43] <jhondoe> i have tried to specify the identity file but it does't work; the option -i does't consider the jump server but always the local host
[13:19:50] <jhondoe> ok thanks
[13:21:23] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[13:21:26] *** Joins: Lutin (~Lutin@lfbn-lyo-1-1349-50.w86-207.abo.wanadoo.fr)
[13:22:13] *** Parts: jhondoe (~jhondoe@139.191.247.2) ()
[13:22:16] *** Joins: nobody_ (~nobody@host-79-50-185-199.retail.telecomitalia.it)
[13:33:32] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[13:34:37] *** Quits: skylite_ (~skylite@2E6B2CD6.catv.pool.telekom.hu) (Ping timeout: 245 seconds)
[13:34:54] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[13:38:34] *** Joins: lq820105 (~lq@210.72.8.208)
[13:39:59] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[13:40:00] *** Guest5796 is now known as r00t
[13:40:13] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[13:40:15] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[13:40:29] *** r00t is now known as Guest1408
[13:41:14] *** Quits: lq (~lq@210.72.8.208) (Ping timeout: 250 seconds)
[13:45:12] *** Joins: diamondbond (~diamondbo@175.157.238.245)
[13:50:44] *** Joins: aakashi2001 (~aakashi20@103.61.255.37)
[13:52:44] *** Quits: diamondbond (~diamondbo@175.157.238.245) (Quit: Leaving)
[13:52:57] *** Quits: Mo (~Mo@dynamic-077-006-149-153.77.6.pool.telefonica.de) (Ping timeout: 268 seconds)
[13:53:22] *** Quits: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se) (Quit: The Lounge - https://thelounge.chat)
[13:54:31] *** Joins: bandit_za (~bandit_za@2c0f:ed28:b016:7760::1ed)
[13:56:41] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[13:56:48] *** Joins: robobo (~robobo@c-e52c524e.015-74-6762675.bbcust.telenor.se)
[13:58:38] *** Quits: plitter (~plitter@user/plitter) (Quit: WeeChat 3.2)
[13:58:42] *** Quits: gr33nR10t (~greenriot@host-82-57-201-34.retail.telecomitalia.it) (Changing host)
[13:58:42] *** Joins: gr33nR10t (~greenriot@user/gr33nr10t)
[14:03:04] *** Joins: dokma (~vlatko@78-0-172-45.adsl.net.t-com.hr)
[14:03:12] <dokma> Is .xinitrc a bash script?
[14:03:20] <dokma> Can I use all bashism in it?
[14:03:26] <dokma> bashisms
[14:03:58] <dokma> How about the crontab ?
[14:04:10] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Ping timeout: 240 seconds)
[14:04:21] <dokma> I'd like to set my clock from the crontab but, obviously, only if dwm is running,
[14:05:06] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[14:07:10] *** Quits: nobody_ (~nobody@host-79-50-185-199.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[14:07:14] <lopid> obviously?
[14:07:58] <dokma> lopid: if it was obvious I wouldn't ask
[14:08:15] <lopid> so, not obviously
[14:09:19] <bandit_za> lopid, what is the knowledge you have access to which enables this to be obvious?
[14:09:20] <dokma> lopid: how do you know which shell is used to execute commands in xinitrc and crontab?
[14:10:13] <lopid> man page just says "shell commands"
[14:11:05] <lopid> so i'd guess it's your default user shell
[14:11:12] <dokma> probably
[14:11:35] <lopid> you could "echo "$SHELL" > /tmp/foo" and see 
[14:11:56] <Soliton> that will just show the user's login shell.
[14:12:09] <lopid> from xinitrc
[14:12:09] <Soliton> no relation to what is currently running.
[14:13:59] <Soliton> presumably depends on the OS what shell is used.
[14:14:05] <dokma> Soliton: I was asking what will execute the commands in xinitrc and crontab
[14:14:10] <dokma> Not what is currently running
[14:14:19] <lopid> crontab is /bin/sh by default
[14:14:43] <Soliton> what is currently running when executing xinitrc is exactly that.
[14:15:21] <lopid> man 5 crontab
[14:15:39] <kurahaupo> jaggz: Only99,99 up to death? So damage to immortal souls isn't99,99 excluded?
[14:16:50] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[14:17:29] <dokma> Soliton: how do you know that?
[14:17:37] <dokma> I couldn't find it.
[14:18:22] <Soliton> how do i know that what is running when xinitrc is executing is what is executing xinitrc??
[14:18:52] <dokma> Soliton: my xinitrc is executed by startx
[14:19:04] *** Quits: bandit_za (~bandit_za@2c0f:ed28:b016:7760::1ed) (Killed (NickServ (GHOST command used by bandit_za39)))
[14:19:07] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[14:19:14] <dokma> So, logically I assumed that startx must chose how to parse xinitrc
[14:19:22] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 250 seconds)
[14:19:34] <Soliton> so then what is even the question?
[14:19:57] <Soliton> you found the exact code that does what you're wondering about.
[14:20:04] <dokma> Well, obviously, if startx is choosing how to parse xinitrc the question is the same. How does it choose it?
[14:20:11] <Soliton> for me that is not how startx works btw.
[14:20:22] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 252 seconds)
[14:20:44] <dokma> I'm not speaking from knowledge. I'm guessing my way through.
[14:20:46] <Soliton> for me startx hands xinitrc to xinit.
[14:21:00] <Soliton> none of this has much to do with bash anyway.
[14:21:11] <dokma> So xinit chooses how to parse xinitrc?
[14:22:54] <Soliton> if you want to continue guessing then i would suggest to guess sh.
[14:24:05] <dokma> I could probably just run something from xinitrc to tell me which shell is executing it.
[14:24:33] <dokma> Soliton: when you said that 'what is currently running' will execute xinitrc was that a guess or are you certain?
[14:24:38] <Soliton> !interpreter
[14:24:38] <greybot> WTF interpreter? https://github.com/stephane-chazelas/misc-scripts/blob/master/which_interpreter or http://stchaz.free.fr/which_interpreter or https://raw.github.com/mauke/poly.poly/master/poly.poly
[14:26:47] <Soliton> the thing that executes a thing is the thing that runs the thing. i have no clue what your question is.
[14:28:04] <lopid> A executes B, which executes a shell to interpret C. "which shell was executed?"
[14:28:18] *** Quits: Bhavuk (~BTaneja@122.173.25.44) (Quit: Leaving)
[14:29:36] <dokma> lopid: exactly
[14:29:50] <lopid> you could also strace
[14:29:52] <dokma> startx is a shell script
[14:30:02] <dokma> xinit is a binary
[14:30:18] <dokma> xinit could execute .xinitrc with anything
[14:30:27] <pystardust> has anyone found the reason for `< file` acts as cat, i kept searching still no results :(
[14:30:40] <Soliton> that's not how bash works.
[14:30:52] <Soliton> i think it might work that way in zsh or so.
[14:31:39] <Soliton> dokma: so look at the documentation of xinit. #bash has no clue about it.
[14:32:03] *** Joins: besnn (~besnn@user/besnn)
[14:40:34] *** Guest1408 is now known as r00t
[14:41:03] *** r00t is now known as Guest2618
[14:41:52] <dokma> Soliton: I did... It's not clear
[14:42:06] *** Quits: dokma (~vlatko@78-0-172-45.adsl.net.t-com.hr) (Quit: WeeChat 2.3)
[14:42:28] <kurahaupo> !learn exponential If you have n layers of shells parsing and reparsing a command, you will need (2ⁿ-1) backslashes to escape each special character. This particularly includes eval cmd99,99, ssh host99,99 cmd99,99, sh -c cmd99,99, and su -c cmd99,99.
[14:42:28] <greybot> OK, kurahaupo
[14:42:44] <kurahaupo> !exponential
[14:42:44] <greybot> If you have n layers of shells parsing and reparsing a command, you will need (2ⁿ-1) backslashes to escape each special character. This particularly includes eval cmd99,99, ssh host99,99 cmd99,99, sh -c cmd99,99, and su -c cmd99,99.
[14:44:03] <kurahaupo> !learn 2ⁿ !exponential
[14:44:03] <greybot> OK, kurahaupo
[14:44:10] <kurahaupo> !2ⁿ
[14:44:10] <greybot> !exponential
[14:44:30] <kurahaupo> !redirect 2ⁿ !exponential
[14:45:20] <kurahaupo> !forget 2ⁿ
[14:45:20] <greybot> OK, kurahaupo
[14:46:35] *** Joins: dokma (~vlatko@78-0-172-45.adsl.net.t-com.hr)
[14:46:54] <emanuele6> !leard 2ⁿ #redirect exponential
[14:47:00] <dokma> Tricked the system to tell me how xinitrc is executed by putting a sleep at the end of xinitrc
[14:47:10] <dokma> It's sh /path/.xinitrc
[14:47:25] <dokma> Thanks for the help good folks of bash.
[14:47:46] <emanuele6> !learn 2ⁿ #redirect exponential
[14:47:46] <greybot> OK, emanuele6
[14:47:51] *** Quits: dokma (~vlatko@78-0-172-45.adsl.net.t-com.hr) (Client Quit)
[14:48:01] <kurahaupo> !2ⁿ
[14:48:01] <greybot> If you have n layers of shells parsing and reparsing a command, you will need (2ⁿ-1) backslashes to escape each special character. This particularly includes eval cmd99,99, ssh host99,99 cmd99,99, sh -c cmd99,99, and su -c cmd99,99.
[14:48:07] <kurahaupo> ahah! Thanks
[14:49:00] *** Quits: aakashi2001 (~aakashi20@103.61.255.37) (Changing host)
[14:49:00] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[14:49:24] *** Joins: furrymcgee (~devuan@31.179.186.66)
[14:50:00] *** Joins: arinov (~arinov@213.194.126.155)
[14:51:05] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Quit: Leaving)
[14:51:38] *** Joins: aakashi2001 (~aakashi20@103.61.255.37)
[14:51:42] <emanuele6> !learn quine A quine is a program that prints its own source code as output. You can find some quines written in bash here -> https://mywiki.wooledge.org/BashQuine
[14:51:42] <greybot> OK, emanuele6
[14:51:56] *** Joins: optative (~optative@198.13.159.235)
[14:52:18] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[14:52:30] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[14:54:37] *** Quits: aakashi2001 (~aakashi20@103.61.255.37) (Client Quit)
[14:54:54] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[14:55:34] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 252 seconds)
[14:56:16] *** Joins: shad (~shad@user/shad)
[14:56:39] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[14:57:55] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[15:02:16] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 250 seconds)
[15:03:40] *** Quits: audiobirb (~audio@2603-8081-1801-3bb5-27c8-a94a-768a-c5a3.res6.spectrum.com) (Ping timeout: 240 seconds)
[15:05:29] *** Joins: afernandez (~Wiilliam@12.187.181.32)
[15:05:37] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[15:06:57] *** Quits: afernandez (~Wiilliam@12.187.181.32) (Changing host)
[15:06:57] *** Joins: afernandez (~Wiilliam@user/wwilliam)
[15:06:57] *** Quits: wwilliam (~afernande@user/wwilliam) (Killed (tungsten.libera.chat (Nickname regained by services)))
[15:06:57] *** afernandez is now known as wwilliam
[15:07:20] *** Joins: Guest8649 (~afernande@63.240.73.102)
[15:09:52] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 252 seconds)
[15:18:05] *** Joins: julius_c (~julius_c@95.red-83-57-77.dynamicip.rima-tde.net)
[15:18:15] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[15:18:37] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 246 seconds)
[15:20:25] *** Joins: seninha (~seninha@user/seninha)
[15:22:58] *** Quits: sazawal (~sazawal@106.213.43.60) (Quit: Leaving)
[15:23:08] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Quit: Leaving)
[15:26:20] *** Quits: unclutter (~gentoo@60.81-166-246.customer.lyse.net) (Quit: leaving)
[15:28:27] *** Joins: aakashi2001 (~aakashi20@103.61.255.37)
[15:28:27] *** Quits: aakashi2001 (~aakashi20@103.61.255.37) (Changing host)
[15:28:27] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[15:34:01] *** Joins: unclutter (~gentoo@60.81-166-246.customer.lyse.net)
[15:37:34] *** Quits: z14 (~alzee@157.136.233.35.bc.googleusercontent.com) (Remote host closed the connection)
[15:38:59] *** Quits: downunder (~downunder@110.151.122.76) (Quit: WeeChat 3.2)
[15:40:36] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Quit: Leaving)
[15:40:37] *** Joins: motherr (~motherr@user/motherr)
[15:40:41] *** Joins: PaulePanter (~paul@mail.gw90.de)
[15:40:50] <PaulePanter> Hi. https://salsa.debian.org/installer-team/debootstrap/-/blob/master/functions#L544 is
[15:40:55] <PaulePanter> COMPONENTS=\"\$COMPONENTS \$c\"
[15:41:07] <PaulePanter> Unfortunately, this seems to create duplicates.
[15:41:12] *** Guest2618 is now known as r00t
[15:41:34] <PaulePanter> Is there a shortcut to only append c if it’s not yet present in COMPONENTS?
[15:41:41] *** r00t is now known as Guest2042
[15:41:50] <Soliton> use an assoc array.
[15:41:53] <Soliton> !lists
[15:41:53] <greybot> In bash, a list of things is expressed using arrays: things=( Bob "Long John" /home/* ). Do NOT use string variables (things="Bob Long John /home/*") and do NOT use wordsplitting: for thing in $(find /things/*). See !arrays !wordsplitting !drlwf !quotewhen
[15:41:59] <Soliton> !eval
[15:41:59] <greybot> 'eval' is a common misspelling of 'evil'. If eval is the answer, surely you are asking the wrong question. See http://mywiki.wooledge.org/BashFAQ/048
[15:43:17] *** Joins: tccki_ (~tccki@box.webslate.co.nz)
[15:43:31] <Soliton> declare -A components; while IFS= read -r c; do components[$c]=; done < <(sed -n 's/Components: *//p' "$reldest")
[15:44:07] <Soliton> then "${!components[@]}" expands to the list of components.
[15:45:01] <PaulePanter> Wow. Thank you. Lot’s of syntax reading ahead of me. Thank you for the pointers.
[15:45:11] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 268 seconds)
[15:45:11] *** tccki_ is now known as tccki
[15:45:12] <PaulePanter> Is that all compatible with all bash versions?
[15:45:18] <geirha> that won't work
[15:45:38] <geirha> the debootstrap script that sources that functions script has #!/bin/sh shebang
[15:45:58] *** Joins: besnn (~besnn@user/besnn)
[15:46:22] <Soliton> ugh, the script is littered with eval.
[15:46:45] <geirha> Yeah, lots of sloppy code
[15:46:51] <Soliton> lost cause i guess.
[15:49:28] <geirha> It's not apparent why it needs to use eval there; looks rather pointless
[15:49:50] <PaulePanter> geirha: Oh, I missed, that it’s using /bin/sh and not Bash. Thank you for checking.
[15:50:26] <geirha> ah, it's because USE_COMPONENTS contain  pattern1|pattern2|...  so it needs eval to inject it into case syntax
[15:51:53] <geirha> for c in $TMP_COMPONENTS ; do   case " $COMPONENTS " in *" $c "*) continue ;; esac;  eval "...
[15:52:21] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[15:52:34] <geirha> s/_//
[15:54:42] *** Joins: aakashi2009 (~aakashi20@103.61.255.37)
[15:54:42] *** Quits: aakashi2009 (~aakashi20@103.61.255.37) (Changing host)
[15:54:42] *** Joins: aakashi2009 (~aakashi20@user/aakashi2001)
[15:55:01] *** Quits: aakashi2009 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[15:55:01] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[15:55:09] <Soliton> how do you get to building so much crap in shell? they even have inline perl there.
[15:55:18] <PaulePanter> geirha: Thank you.
[15:55:48] <PaulePanter> Soliton: Good question. I guess historically grown, and patches from outside contributers with nobody there (or time) to review, and original author long gone.
[15:56:27] <PaulePanter> `extract_release_components ()` is called for each suite in `download_release_indices ()` and that’s why the duplicates come to play.
[15:56:45] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[15:56:55] <geirha> should really just be rewritten in bash. Should speed it up quite a bit too as it avoids a lot of unecessary command substitutions
[15:57:28] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[15:57:31] *** situ_ is now known as situ
[15:58:09] *** Joins: roadt__ (~roadt@36.5.216.242)
[15:58:49] <Kingsy> can someone think of a nicer way of writing this. the aim is to issue a mv command and change a prefix of S01EXX to S02EXX, which XX needs to start at 01 (it currently doesnt)
[15:58:55] <Kingsy> https://bpa.st/VDQQ
[15:59:10] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[15:59:26] <Kingsy> I mean now it echos out the correct mv command, but its not quoted and the filenames contain all sorts of special characters.
[15:59:29] <Soliton> do you want to emit code or actually run it?
[15:59:53] <Kingsy> I would love to just run it. but it would be good to know and make sure it isnt going to break anything before it runs
[15:59:58] <Kingsy> which is why I am ehcoing right now
[16:00:03] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[16:00:40] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[16:00:43] *** Joins: aakashi2001 (~aakashi20@103.61.255.59)
[16:00:43] *** Quits: aakashi2001 (~aakashi20@103.61.255.59) (Changing host)
[16:00:43] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[16:00:51] *** Joins: aakashi2009 (~aakashi20@103.61.255.59)
[16:00:51] *** Quits: aakashi2009 (~aakashi20@103.61.255.59) (Changing host)
[16:00:51] *** Joins: aakashi2009 (~aakashi20@user/aakashi2001)
[16:01:10] *** Quits: roadt_ (~roadt@36.5.93.233) (Ping timeout: 240 seconds)
[16:01:14] <Soliton> for f in *.mkv; do echo mv "$f" ${f/S01E/S02E}"; done
[16:01:17] <Soliton> maybe
[16:01:26] *** Quits: aakashi2009 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[16:01:28] <Soliton> missing a quote there.
[16:01:43] <geirha> I interpreted it as "renumber the episodes"
[16:02:12] <Kingsy> that doesnt increase the number of episodes.
[16:02:20] <Soliton> i suppose so. not going to guess the filenames though.
[16:02:22] <Kingsy> the output is
[16:02:23] <Kingsy> mv S01E19 - A Powerful New Foe! Frieza, Ruler of the Universe!.mkv S02E19 - A Powerful New Foe! Frieza, Ruler of the Universe!.mkv
[16:02:50] <Kingsy> and uyou see all the ! and potential ' chars etc I ened to account for there.
[16:03:37] <Kingsy> so the output I want would be S02E01 - A Powerful New Foe! Frieza, Ruler of the Universe!.mkv <- in that example
[16:03:44] <geirha> for f in *.mkv; do printf -v newname 'S02E%02d - %s' "$((++count))" "${f# - }"; echo mv -- "$f" "$newname"; done
[16:03:48] <Soliton> no need to account for them if you if you just quote properly.
[16:04:07] *** Joins: n4dir (~user@i577BC91A.versanet.de)
[16:04:15] <geirha> remove the echo to actual rename
[16:04:15] <Soliton> for f in *.mkv; do echo mv "$f" "${f/S01E??/S02E$(printf "%02d" "$((count++))")}"; done
[16:04:34] <geirha> that increments the counter inside a subshell ...
[16:04:38] <Soliton> well, yeah
[16:04:47] <Kingsy> geirha: that echos mv -- S01E19 - A Powerful New Foe! Frieza, Ruler of the Universe!.mkv S02E01 - S01E19 - A Powerful New Foe! Frieza, Ruler of the Universe!.mkv
[16:05:18] <Kingsy> that last one echos -> mv S01E19 - A Powerful New Foe! Frieza, Ruler of the Universe!.mkv S02E36 - A Powerful New Foe! Frieza, Ruler of the Universe!.mkv
[16:05:20] <geirha> ah sorry, forgot a *
[16:05:32] <geirha> "${f# - }" should be "${f#* - }"
[16:05:41] <Soliton> for f in *.mkv; do ((count++)); echo mv "$f" "${f/S01E??/S02E$(printf "%02d" "$count")}"; done
[16:06:15] <geirha> don't forget to reset count to 0. count=0
[16:06:26] <geirha> before each attempt
[16:06:56] <Kingsy> ah ha! nice!
[16:07:17] <Kingsy> SO. I have you solution here Soliton. can I literally just remove the echo and thats it?
[16:07:44] *** Quits: optative (~optative@198.13.159.235) (Quit: Good bye libera and take care.)
[16:09:29] <Kingsy> ah I took the risk and it works!! amazing thats Soliton and geirha . just going to have a read on this to try and see whats going on
[16:11:23] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[16:13:50] *** Quits: arya (uid512841@charlton.irccloud.com) (Quit: Connection closed for inactivity)
[16:15:59] *** Quits: milosz_ (~milosz@user/milosz) (Ping timeout: 252 seconds)
[16:16:59] <Soliton> it's just two different ways to generate the new filename. if you quote properly it doesn't matter what characters the filenames contain.
[16:18:00] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[16:19:04] <PaulePanter> geirha: Did you mean?
[16:19:59] <PaulePanter> https://paste.debian.net/1208323/
[16:20:04] <PaulePanter> I would have thought, case "$c" in
[16:20:07] *** Quits: dre (~dre@2001:8003:c932:c301:2c3:7064:672c:648) (Ping timeout: 258 seconds)
[16:20:19] <PaulePanter> "$COMPONENTS") continue ;;
[16:20:31] <PaulePanter> Or is that not possible, because it’s not a list?
[16:20:56] <Soliton> the surrounding spaces are there to prevent accidental prefix/suffix matches.
[16:20:57] <geirha> if COMPONENTS is "a b c" and c is "a", it will compare  " a b c " = *" a "*
[16:21:08] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 250 seconds)
[16:21:23] <geirha> "a b c" = *" a "* would not have matched
[16:21:40] <PaulePanter> geirha, Soliton: Thank you.
[16:21:52] *** Quits: esselfe (~steph@user/esselfe) (Quit: rebooting)
[16:22:13] *** Joins: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it)
[16:22:22] *** Quits: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it) (Client Quit)
[16:23:07] *** Joins: shad (~shad@user/shad)
[16:24:10] *** Quits: situ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[16:25:58] *** Joins: zeden (~zeden@user/zeden)
[16:27:46] *** Quits: roadie (~user@2a02:8108:ec0:1427:38f9:b1d0:3c58:1d87) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[16:28:10] *** Joins: esselfe (~steph@user/esselfe)
[16:28:19] *** Quits: motherr (~motherr@user/motherr) (Quit: zzz)
[16:31:10] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[16:33:45] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 248 seconds)
[16:36:11] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[16:38:40] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 240 seconds)
[16:39:29] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[16:41:46] *** Guest2042 is now known as r00t
[16:42:15] *** r00t is now known as Guest8264
[16:46:11] *** Joins: audiobirb (~audio@2603-8081-1801-3bb5-65bf-4803-7300-cd0a.res6.spectrum.com)
[16:48:09] *** Quits: rtjure (~rtjure@bras-79-132-26-123.comnet.bg) (Ping timeout: 248 seconds)
[16:49:11] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[16:51:52] *** Joins: Razva (sid17541@user/razva)
[16:52:47] <Razva> guys can you please let me know how can I list the server's IP, excluding any LAN IPs (192. / 172.)?
[16:53:10] *** Quits: mutandis (~mut@c-73-129-211-144.hsd1.va.comcast.net) (Quit: meow)
[16:53:21] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[16:56:36] <Razva> is "hostname --ip-address" reliable enough?
[16:56:54] *** Quits: Gamma (~Gamma@zsh/user/Gamma) (Ping timeout: 244 seconds)
[16:57:00] <lopid> !nabq
[16:57:00] <greybot> Not a #bash question. We're no experts in that software or OS; consider asking the channel or mailing list with experts on that topic (eg. ##linux #openssh #ubuntu #zsh #systemd or PM alis with "list keyword" to search for channels).
[16:57:03] <lopid> or a networking channel
[16:58:35] *** Joins: Gamma (~Gamma@zsh/user/Gamma)
[17:02:24] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:02:47] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:03:18] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[17:04:07] *** Joins: skylite (~skylite@2e6b2cd6.unconfigured.pool.telekom.hu)
[17:05:01] <Razva> what would be the simplest way to make a "Press any key to continue" script, maybe a oneliner? I've found some examples but most of them are way too complex for such a simple need.
[17:05:33] <Razva> what if I just make a simple read?
[17:05:36] <Razva> `read -p "Press enter to continue"`
[17:05:49] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Quit: Leaving)
[17:06:02] <lopid> yes
[17:06:35] <OMGOMG> i would not recommend yes, but read is good
[17:09:40] *** Quits: audiobirb (~audio@2603-8081-1801-3bb5-65bf-4803-7300-cd0a.res6.spectrum.com) (Ping timeout: 240 seconds)
[17:09:59] <lopid> use them together if you want a short timeout
[17:10:04] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[17:10:30] <emanuele6> if you want any key, you can use: read -n1 -sp 'Press any key...'
[17:11:19] <emanuele6> it will not work very well with some keys though, for example the arrow keys since they are a 3 character sequence
[17:11:32] <lopid> continue only if the any key is pressed
[17:11:59] *** Joins: tmm88 (~tmm88@2001:8a0:ff48:1500:b66b:fcff:fe62:e4a9)
[17:13:13] <emanuele6> oh, and you also want -r, otherwise \ does not count as a key
[17:13:28] <emanuele6> (as one character)
[17:19:27] <Swahili> Q: trying to lowercase the first char so this works> echo ${foobar,}, but I want to have it in a variable, I did: someVar=$(echo ${foobar,}), but this doesn't seem right, correct? 
[17:22:21] <emanuele6> Swahili: someVar=${foobar,}
[17:22:55] <Swahili> emanuele6: thanks for looking! ok makes more sense, thank you very much
[17:23:23] <emanuele6> Swahili: you are welcome :)
[17:24:19] *** Quits: venue (~venue@user/venue) (Quit: adios)
[17:25:04] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:eb83:919c:c248:eabe)
[17:26:40] *** Parts: PaulePanter (~paul@mail.gw90.de) ()
[17:27:52] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[17:31:58] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[17:36:51] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[17:37:07] <Razva> I'm struggling to understand how can I add a space after `read -p "Press ENTER to continue"`
[17:37:26] <djph> "Press ENTER to continue " 
[17:37:39] <Razva> I want to add a `\n\n` but `'` doesn't seem to work with `read`
[17:37:44] <Swahili> I'm using https://replit.com/languages/bash to test my script and works but when running in my machine it throws  bad substitution for someVar=${foobar,}: I use zsh but the shebang in the script is bash. Why would that be? :T 
[17:37:45] <Razva> an empty space
[17:37:52] <Razva> an empty line, excuse me
[17:37:59] <Razva> like a `echo ""`
[17:38:42] <Razva> `Press ENTER to continue \n\n` < nope
[17:38:43] <emanuele6> Razva: read -p $'Press ENTER to continue\n'
[17:38:57] <emanuele6> !$'
[17:38:57] <greybot> bash has a special form of quoting, $'string' in which backslash-character combinations are expanded. For example, IFS=$' \t\n' or echo $'It\'s embedded!' http://mywiki.wooledge.org/Quotes
[17:39:14] <Razva> ooooh I was forgetting about $
[17:39:15] <koollman_> or just put a real newline in ther. works fine :)
[17:39:17] <Razva> facepalm
[17:39:38] <Razva> also is there any way to make this more elegant: echo "Point your proxy to port$green 8181$normal. phpMyAdmin is looking for an SQL server on$green $ip$normal." ?
[17:41:32] <emanuele6> maybe make the space between "on" and the ip and between "port" and the port not green?
[17:41:34] <Swahili> oh I see bash in macOS is still version 3.2, missing operator
[17:41:40] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[17:41:58] <Razva> no I was referring at ... like ... don't use echo but printf?
[17:42:09] <Razva> does that makes any sense or echo is fine?
[17:42:22] *** Guest8264 is now known as r00t
[17:42:23] <emanuele6> echo is fine
[17:42:33] <emanuele6> in my opinion
[17:42:49] <koollman_> generally when trying to color stuff, I end up using some functions. it is sometimes easier to read/use
[17:42:52] *** r00t is now known as Guest2334
[17:47:07] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Read error: Connection reset by peer)
[17:47:39] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[17:49:10] *** Quits: jaggz (~jaggz@user/jaggz) (Ping timeout: 240 seconds)
[17:52:08] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 250 seconds)
[17:54:42] <Soliton> echo is ok for simple fixed strings. not much else.
[17:55:43] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:56:10] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[17:56:40] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[17:57:16] *** Joins: Lope (~lope@user/lope)
[17:57:30] <Lope> This works: `sleep 3 &`
[17:57:42] <Lope> But this doesn't: `sleep 3 &; echo blah`
[17:57:49] <Lope> is there a way to make it work?
[17:58:01] <Lope> without using 2 lines?
[17:58:46] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[17:58:48] *** Joins: darkbit (~db@152.32.99.67)
[17:58:55] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[17:59:30] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:eb83:919c:c248:eabe) (Ping timeout: 250 seconds)
[17:59:49] <Limbo> { sleep 3; echo blah; } &
[18:00:30] <Lope> Limbo, thanks :)
[18:00:39] <Lope> I noticed I can also just remove the semicolon.
[18:01:06] <Lope> pretending that & is a statement terminator
[18:01:20] <Limbo> it does terminate a line/command
[18:01:37] <Limbo> it is not pretend
[18:01:41] *** Joins: shad (~shad@user/shad)
[18:03:00] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[18:04:51] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[18:05:19] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 252 seconds)
[18:06:26] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 250 seconds)
[18:07:46] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:08:14] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Client Quit)
[18:08:32] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:08:35] <Soliton> !&;
[18:08:35] <greybot> '&;' is always wrong. So is '& ;'. If you want to run things in the background in a compact one-liner, omit the ';' entirely and simply use '&' between commands. for f in ./*; do my_command "$f" & done - see http://mywiki.wooledge.org/BashPitfalls#pf21
[18:08:52] *** Joins: aakashi2001 (~aakashi20@103.61.255.28)
[18:08:52] *** Quits: aakashi2001 (~aakashi20@103.61.255.28) (Changing host)
[18:08:52] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[18:09:42] *** Joins: situ (~situ@nat-pool-brq-t.redhat.com)
[18:09:50] *** Joins: thiras (~thiras@user/thiras)
[18:10:05] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 268 seconds)
[18:14:47] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[18:15:19] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Quit: Leaving)
[18:15:56] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[18:18:22] *** Joins: clime (~clime@ip-94-199-195-39.acvyskov.cz)
[18:20:40] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[18:23:10] *** Joins: shad (~shad@user/shad)
[18:26:42] *** Joins: nobody_ (~nobody@host-79-50-185-199.retail.telecomitalia.it)
[18:28:51] *** Joins: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk)
[18:30:45] *** Joins: kill (~killown@user/killown)
[18:31:08] *** Quits: medard (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 250 seconds)
[18:32:16] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[18:34:02] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[18:37:12] *** Joins: Administratorte (~sq@tempest.math.colostate.edu)
[18:39:28] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[18:39:48] <xx> if [[ ! $myvar ]] can always be rewritten as if [[ -z $myvar ]] correct?
[18:39:55] *** Joins: topoi (~topoi@user/topoi)
[18:40:02] <xx> because ! $myvar doesn't actually do what one would naively think it does
[18:42:43] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Ping timeout: 252 seconds)
[18:42:58] *** Guest2334 is now known as r00t
[18:43:24] <Soliton> you could write: [[ $myvar == '' ]]
[18:43:27] *** r00t is now known as Guest5691
[18:44:32] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[18:46:14] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Client Quit)
[18:48:48] *** Joins: sokle_68 (~sokle_68@ppp046177047088.access.hol.gr)
[18:53:30] *** Joins: medard (~sinhue@stip-static-55.213-81-207.telecom.sk)
[18:54:34] <emanuele6> or [[ ! -n $myvar ]] or [[ $myvar =~ ^$ ]]
[18:54:56] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:55:38] <xx> isn't [[ ! -n $myvar ]] always the same as [[ -z $myvar ]] ?
[18:56:02] *** Joins: seninha (~seninha@user/seninha)
[18:56:30] <xx> I'm just trying to understand if I'm getting whether those cases are *always* *identical* in functionality
[18:56:42] *** Quits: sinhue (~sinhue@stip-static-55.213-81-207.telecom.sk) (Ping timeout: 250 seconds)
[18:57:15] <emanuele6> [[ ! $myvar ]] is the same as  [[ -z $myvar ]] that is the same as [[ $myvar == '' ]] that is the same as [[ ! -n $myvar ]] that is the similar to [[ $myvar =~ ^$ ]] ($myvar =~ ^$ ]] has the side effect of setting BASH_REMATCH)
[18:58:00] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[18:58:10] *** Quits: situ (~situ@nat-pool-brq-t.redhat.com) (Ping timeout: 240 seconds)
[18:58:12] <Soliton> [[ $myvar != *?* ]]
[18:58:12] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[18:59:12] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[18:59:16] *** Quits: n4dir (~user@i577BC91A.versanet.de) (Remote host closed the connection)
[18:59:17] *** Parts: sokle_68 (~sokle_68@ppp046177047088.access.hol.gr) ()
[18:59:18] <emanuele6> [[ ${myvar:-)} ]]
[18:59:30] *** Joins: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3)
[18:59:40] *** Quits: besnn (~besnn@user/besnn) (Quit: Leaving)
[19:00:11] <Soliton> that's always true.
[19:00:18] <emanuele6> yeah... i just realised
[19:02:31] *** Quits: aead (~aead@user/aead) (Ping timeout: 252 seconds)
[19:04:31] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[19:04:39] *** Joins: aead (~aead@user/aead)
[19:04:58] <emanuele6> [[ $myvar > 0 ]]
[19:05:10] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[19:05:56] <Soliton> [[ ${#myvar} == 0 ]]
[19:07:17] *** Quits: PinealGlandOptic (~PinealGla@37.115.210.35) (Quit: leaving)
[19:07:19] *** Quits: tmm88 (~tmm88@2001:8a0:ff48:1500:b66b:fcff:fe62:e4a9) (Quit: Client closed)
[19:09:25] <emanuele6> oh, actually [[ $myvar > 0 ]] is wrong
[19:09:47] <emanuele6> > and < are alphabetical order, not string length comparison
[19:10:29] <Soliton> you're not comparing to the string length anyway.
[19:10:57] <emanuele6> length of '0' (1) vs length of mychar
[19:11:33] *** Quits: hugotty (~user@51.159.70.14) (Remote host closed the connection)
[19:11:56] *** Joins: aakashi2001 (~aakashi20@103.61.255.3)
[19:11:56] *** Quits: aakashi2001 (~aakashi20@103.61.255.3) (Changing host)
[19:11:56] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[19:12:13] *** Joins: lonewulf1 (~lonewulf@user/lonewulf)
[19:12:53] <Soliton> ${#myvar} expands to the length in characters.
[19:13:46] <emanuele6> this one is a valid solution using >: [[ $'\001' > $myvar ]]
[19:15:41] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Ping timeout: 258 seconds)
[19:17:43] <Soliton> unless crazy locale
[19:18:02] <emanuele6> i was actually just thinking about that ahah
[19:19:25] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:88f0:9a98:53bd:c0cd)
[19:19:25] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:88f0:9a98:53bd:c0cd) (Changing host)
[19:19:25] *** Joins: skapata (~Skapata@user/skapata)
[19:20:29] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[19:21:59] *** Joins: kj (~kj@beta.aerisnetwork.net)
[19:24:11] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[19:24:58] <Lope> Limbo, According to http://mywiki.wooledge.org/BashPitfalls#pf21 "& [already ]functions as a command terminator"
[19:25:04] *** Quits: aead (~aead@user/aead) (Ping timeout: 252 seconds)
[19:25:32] <Lope> Ah, sorry, I misread what you wrote.
[19:26:19] <Lope> Your grammar was a bit funny.
[19:26:54] *** Joins: ano (~weechat@user/ano)
[19:26:59] *** Joins: aead (~aead@user/aead)
[19:31:15] *** Quits: Strom (strom@fedora/strom) ()
[19:31:19] <Bilge> What's the best way to test if a value is in an array?
[19:31:27] <emanuele6> then LC_COLLATE=C eval $'[[ \001 > $myvar ]]' just to sure 
[19:31:28] *** Joins: codebam (~codebam@user/codebam)
[19:31:40] *** Quits: aead (~aead@user/aead) (Ping timeout: 252 seconds)
[19:31:46] <jetchisel> !inarray
[19:31:46] <greybot> Check whether a value is in an array: inarray() { local n=$1 h; shift; for h; do [[ $n = "$h" ]] && return; done; return 1; } # Usage: inarray "$value" "${array[@]}" Or just use an associative array if possible
[19:31:46] *** Quits: lq820105 (~lq@210.72.8.208) (Remote host closed the connection)
[19:32:01] *** Joins: lq820105 (~lq@210.72.8.208)
[19:32:57] *** Joins: Strom (strom@fedora/strom)
[19:33:19] *** Joins: aead (~aead@user/aead)
[19:33:26] *** Joins: maroloccio (~marolocci@37.100.40.252)
[19:33:32] *** Quits: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Read error: Connection reset by peer)
[19:34:11] <maroloccio> Hi. How do I <<< the value of $v to base64 without a trailing newline? e.g. not a=$(base64 <<< "$v")
[19:34:23] <Soliton> you don't.
[19:34:32] <Soliton> don't use <<<.
[19:34:35] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:34:52] <Soliton> printf %s "$v" | base64
[19:35:08] <emanuele6> a=$(printf %s "%v" | base64)
[19:35:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 258 seconds)
[19:35:41] <maroloccio> Thank you
[19:36:12] <maroloccio> It would be nice for <<< to have a <<<- form (or equivalent) to act as a trailing whitespace trimmer, maybe
[19:36:36] <ede> some languages have some things
[19:36:37] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[19:36:56] <ede> some languages have such things
[19:37:39] <maroloccio> ede which one(s) come to mind to you?
[19:38:19] *** Joins: zebrag (~chris@user/zebrag)
[19:39:43] *** Quits: sQVe (~sQVe@user/sqve) (Quit: Bye!)
[19:39:59] <Bilge> Can you have an associative array with values that are an array?
[19:40:08] <maroloccio> No
[19:40:20] <ede> wait, also POSIX?
[19:40:59] *** Quits: nobody_ (~nobody@host-79-50-185-199.retail.telecomitalia.it) (Ping timeout: 258 seconds)
[19:41:06] <ede> # cat <<- ENDOFTEXT
[19:41:13] <shbot> ede: Missing terminating quote, bracket or keyword
[19:41:20] <ede> never used it :o
[19:41:42] <Soliton> the point of using an assoc array is to put the array elements as keys.
[19:41:56] <maroloccio> ede different meaning with <<-
[19:42:07] <ede> yeah, still never used it ;)
[19:42:12] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 250 seconds)
[19:42:24] <llua> Bilge: only ksh93/2020
[19:42:28] <maroloccio> It's a valid use case, wanting arrays. Just not supported
[19:42:34] <ede> there's far too much using < and > to remember it all
[19:42:45] <maroloccio> ede cheatsheet?
[19:43:15] <ede> found a nice one on the web, lost it since.
[19:43:34] *** Guest5691 is now known as r00t
[19:44:04] *** r00t is now known as Guest9172
[19:44:12] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[19:44:41] <Soliton> # declare -A check=([key1]= [key2]= [key3]=); var=key2; [[ ${check[$var]+.} ]] && echo success
[19:44:43] <shbot> Soliton: success
[19:45:19] <Bilge> I was just going to ask that lol
[19:45:26] <Bilge> I guess that checks for associative array membership?
[19:45:37] <Soliton> yes.
[19:45:41] <Bilge> Nice :^)
[19:45:43] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[19:46:05] <Soliton> !assoc
[19:46:05] <greybot> Associative Arrays map strings to strings (Bash 4): http://mywiki.wooledge.org/BashGuide/Arrays#Associative_Arrays
[19:47:42] <emanuele6> there is also [[ -v check[$var] ]]
[19:47:54] *** Joins: zro (~zro@user/zro)
[19:47:55] <emanuele6> # declare -A check=([key1]= [key2]= [key3]=); var=key2; [[ -v check[$var] ]] && echo success
[19:47:56] <shbot> emanuele6: success
[19:48:06] <emanuele6> that is more explicit
[19:48:21] <Soliton> # declare -A check=([key1]= [key2]= [key3]=); var='$(echo oops>&2)1'; [[ -v check[$var] ]] && echo success
[19:48:22] <shbot> Soliton: oops
[19:48:54] <emanuele6> huh, why is that a math context?
[19:50:27] *** Quits: manin (~X@185.242.190.95) (Quit: Going offline, see ya! (www.adiirc.com))
[19:50:32] <Soliton> # declare -A check=([key1]= [key2]= [key3]=); var='$(echo oops>&2)1'; [[ -v 'check[$var]' ]] && echo success
[19:50:33] <shbot> Soliton: no output
[19:50:35] *** Joins: shad (~shad@user/shad)
[19:50:38] *** Joins: jaggz (~jaggz@user/jaggz)
[19:50:47] <Soliton> # declare -A check=([key1]= [key2]= [key3]=); var='key1'; [[ -v 'check[$var]' ]] && echo success
[19:50:48] <shbot> Soliton: success
[19:50:54] *** Quits: jaggz (~jaggz@user/jaggz) (Remote host closed the connection)
[19:51:04] <Soliton> because evaluation is fun?
[19:52:51] <Bilge> Is this a reasonable way to declare single and multiple IPs? https://gist.github.com/0xPaul/5e51b279f65c8ed8c2c176b13e4b5733
[19:52:59] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Remote host closed the connection)
[19:53:06] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[19:54:12] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[19:54:20] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[19:54:27] <Soliton> perhaps use a case statement that sets an array.
[19:55:23] <Soliton> case $key in prod) ips=(1.2.3.4 5.6.7.8);; dev) ...;; esac
[19:55:53] <Soliton> you could put that in a function if you need it multiple times.
[19:56:06] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Remote host closed the connection)
[19:56:52] *** Quits: kenyon (sid496813@id-496813.highgate.irccloud.com) (Ping timeout: 256 seconds)
[19:57:10] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Ping timeout: 240 seconds)
[19:57:10] *** Quits: kwilczynski (sid379192@user/kwilczynski) (Ping timeout: 240 seconds)
[19:57:16] *** Quits: Exterminador (sid116151@user/pegasus) (Read error: Connection reset by peer)
[19:57:17] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[19:57:28] <emanuele6> or you can use this with your array and it should be fine: IFS=$'\n ' read -rd '' -a ips <<< "${environments[$key]}"$'\0'
[19:57:41] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Read error: Connection reset by peer)
[19:58:33] *** Quits: terabit (sid146285@highgate.irccloud.com) (Ping timeout: 248 seconds)
[19:58:53] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[19:59:02] <Bilge> Works fine to just `for` it with default IFS
[19:59:19] <Bilge> for ip in ${environments[$environment]}; do
[19:59:47] <emanuele6> !set-f > Bilge 
[19:59:47] <greybot> Bilge: ''set -f'' disables glob expansion. You may need this in constructs like ''for w in $words'' or ''array=($words)'' just in case one of the words contains a * or ?.
[20:00:11] <emanuele6> pathname expansion will occur
[20:00:24] <Soliton> sure, with restricted data like IPs you can do silly things.
[20:00:56] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:01:08] <emanuele6> if you really want to use: `for ip in ${environments[$environment]}', you should consider using `set -f` before the loop
[20:01:20] *** Joins: Adoi (~Adoi@user/adoi)
[20:01:21] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[20:01:36] *** Joins: H3dn1ng (~H3dn1ng@2-248-149-85-no172.tbcn.telia.com)
[20:01:37] *** Joins: Exterminador (sid116151@user/pegasus)
[20:01:38] <Bilge> OK
[20:02:10] *** Joins: terabit (sid146285@id-146285.highgate.irccloud.com)
[20:02:37] *** Joins: kwilczynski (sid379192@user/kwilczynski)
[20:02:42] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[20:03:03] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[20:03:11] *** Joins: kenyon (sid496813@highgate.irccloud.com)
[20:03:19] <Soliton> getips() { case $1 in prod) ips=(...);; dev) ips=(...);; esac; }; getips prod; for ip in "${ips[@]}"; do ...; done
[20:04:15] *** Joins: Yssk_ (~Yssk@85.255.237.6)
[20:06:46] *** Quits: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3) (Remote host closed the connection)
[20:09:04] *** Quits: Lope (~lope@user/lope) (Ping timeout: 252 seconds)
[20:11:26] *** Joins: illuminated (~quassel@107-133-152-77.lightspeed.okcbok.sbcglobal.net)
[20:12:07] *** Quits: Yssk_ (~Yssk@85.255.237.6) (Quit: Yssk_)
[20:12:44] *** Joins: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3)
[20:14:33] *** Joins: rendar (~rendar@user/rendar)
[20:17:01] *** Quits: rendar (~rendar@user/rendar) (Client Quit)
[20:18:17] *** Joins: jess (~jess@libera/staff/jess)
[20:18:47] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[20:19:17] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:20:14] *** Joins: vaio (~gary@user/ghost)
[20:21:10] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[20:22:26] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:25:00] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[20:26:58] *** Joins: codebam (~codebam@user/codebam)
[20:28:29] *** Quits: maroloccio (~marolocci@37.100.40.252) (Quit: Client closed)
[20:31:24] *** Joins: rendar (~rendar@user/rendar)
[20:32:20] *** Joins: Yssk (~Yssk@85.255.237.6)
[20:33:20] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 250 seconds)
[20:40:37] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[20:41:07] *** Quits: Yssk (~Yssk@85.255.237.6) (Quit: Yssk)
[20:43:38] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[20:43:48] *** Joins: Lope (~lope@user/lope)
[20:44:10] *** Guest9172 is now known as r00t
[20:44:16] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 268 seconds)
[20:44:39] *** r00t is now known as Guest4915
[20:44:43] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[20:46:54] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[20:47:08] *** Joins: Yssk (~Yssk@85.255.237.6)
[20:47:45] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:50:19] *** Quits: simplicity (~yti@user/simplicity) (Remote host closed the connection)
[20:50:39] *** Quits: clime (~clime@ip-94-199-195-39.acvyskov.cz) (Quit: WeeChat 3.2)
[20:50:49] <bn_work> hi, apologies for the odd set of questions but anyone know of any good GUI frameworks that I can plugin to an existing bash setup/install script?  ie:  perhaps to bring up dialog boxes, etc?  I was just working with a Windows user that was uh... "severely computer challenged" with the CLI and I think the only thing that they may understand is a point-click-GUI.  Would I have to basically re-code everything from scratch in a 
[20:50:49] <bn_work> "higher-level language" with a UI toolkit, ie:  something like GTK?  I would really prefer to just re-use my shell script and just invoke GUI windows, not sure if that's possible?  Also, wondering what a good way to merge configs may be for upgrade scenarios?  (I know git has facilities for this but that's not its primary purpose?)
[20:51:22] *** Joins: simplicity (~yti@user/simplicity)
[20:51:26] <Soliton> !dialog
[20:51:26] <greybot> Dialog makes it easy to generate menus, progress bars and forms for your scripts. See http://mywiki.wooledge.org/BashFAQ/040. Similar tools include whiptail, xdialog, kdialog, gtkdialog, zenity and kommander
[20:52:27] <bn_work> Thanks Soliton!  I will try looking into those, any thoughts on how to handle config merging?
[20:53:23] <Soliton> why do you need to merge configs?
[20:55:20] <wwilliam> What is the size of this disk?
[20:55:21] <wwilliam> fdisk -l /dev/hda
[20:55:23] <wwilliam> Disk /dev/hda: 255 heads, 63 sectors, 4865 cylinders
[20:55:24] <wwilliam> Units = cylinders of 16065 * 512 bytes
[20:57:13] *** Joins: jaggz (~jaggz@user/jaggz)
[20:57:43] *** Quits: jaggz (~jaggz@user/jaggz) (Client Quit)
[20:58:17] *** Quits: Yssk (~Yssk@85.255.237.6) (Quit: Yssk)
[20:58:26] *** Joins: jaggz (~jaggz@user/jaggz)
[20:59:07] <twkm> any chance you have a bash question?
[20:59:53] <wwilliam> twkm: not right now,but thank you.
[20:59:56] *** Joins: kill (~killown@user/killown)
[21:01:29] *** Quits: Lope (~lope@user/lope) (Ping timeout: 258 seconds)
[21:03:45] *** Joins: aakashi2001 (~aakashi20@103.61.255.37)
[21:03:45] *** Quits: aakashi2001 (~aakashi20@103.61.255.37) (Changing host)
[21:03:45] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[21:04:41] *** Quits: k-man (~jason@user/k-man) (Ping timeout: 248 seconds)
[21:05:50] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 250 seconds)
[21:06:18] *** Joins: Crescendo (~Crescendo@user/crescendo)
[21:09:23] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[21:09:44] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[21:13:41] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[21:13:53] *** Joins: Crescendo (~Crescendo@user/crescendo)
[21:15:02] *** Joins: magla (~gelignite@55d4beb4.access.ecotel.net)
[21:21:48] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[21:24:11] *** Joins: k-man (~jason@user/k-man)
[21:26:21] *** Joins: fourHZ (~fourHZ@92-52-40-121.dynamic.orange.sk)
[21:27:42] *** Quits: jaggz (~jaggz@user/jaggz) (Ping timeout: 246 seconds)
[21:28:41] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[21:30:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:33:47] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[21:34:13] *** Joins: codebam (~codebam@user/codebam)
[21:35:33] *** Joins: greycat (~wooledg@139.137.128.70)
[21:36:34] *** Joins: YaoNai (~YaoNai@user/yaonai)
[21:37:08] *** Joins: killown (~killown@user/killown)
[21:39:53] *** Quits: kill (~killown@user/killown) (Ping timeout: 248 seconds)
[21:40:53] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (Quit: Konversation terminated!)
[21:43:33] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[21:45:45] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Ping timeout: 248 seconds)
[21:47:05] *** Joins: earendel (uid498179@user/earendel)
[21:47:45] *** Joins: n4dir (~user@i577BC91A.versanet.de)
[21:48:30] *** Joins: clime (~clime@ip-94-199-195-39.acvyskov.cz)
[21:48:37] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 252 seconds)
[21:51:28] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 268 seconds)
[21:53:18] *** Joins: sandb0y (~pirate@user/sandb0y)
[21:54:47] *** Quits: greycat (~wooledg@139.137.128.70) (Quit: They see me clawin' the love seat / They won't do nothin' 'cause I'm cute and furry)
[21:56:30] *** Joins: entropea (~entropea@user/entropea)
[21:57:35] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[21:58:15] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 268 seconds)
[21:59:50] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Remote host closed the connection)
[22:01:19] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[22:05:23] <ede> would this be the safe way to write strings starting with a dash? # printf "%s\n%s\n" -f -g
[22:06:21] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Remote host closed the connection)
[22:07:31] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[22:07:57] *** Quits: michigan (uid507982@id-507982.charlton.irccloud.com) ()
[22:08:13] *** Joins: sudomann (~sudomann@50.238.46.18)
[22:08:14] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[22:08:48] *** Joins: roadie (~user@2a02:8108:ec0:1427:48a4:64ab:e770:7043)
[22:12:28] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[22:13:00] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 250 seconds)
[22:14:10] *** Joins: unixman_home_ (~unixman2@216.137.241.98)
[22:14:12] *** Quits: unixman_home (~unixman2@216.137.241.98) (Remote host closed the connection)
[22:15:43] *** Quits: unixman_home_ (~unixman2@216.137.241.98) (Remote host closed the connection)
[22:17:45] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[22:17:52] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[22:18:52] *** Quits: aead (~aead@user/aead) (Ping timeout: 252 seconds)
[22:20:39] *** Joins: aead (~aead@user/aead)
[22:23:30] <tirnanog> yes, although a format of '%s\n' would accomplish the same thing.
[22:24:21] <bn_work> Soliton:  because they may have configured deployment-specific settings in older versions that they'd want to port over?
[22:25:20] <bn_work> Soliton:  I agree it's questionable whether we should be responsible for that but was just wondering if tools existing to automatically merge in old configs?
[22:25:34] <bn_work> s/existing/exist/
[22:26:20] *** Joins: Yssk (~Yssk@85.255.237.6)
[22:27:44] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 250 seconds)
[22:28:23] <ede> tirnang: i want to keep them separated, not sure what i may still have to change (not only scripting, but also workflow)
[22:28:25] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:29:21] <Soliton> the point is that printf repeats the format string if there are arguments left.
[22:30:18] <ede> and now find is causing issues with the same files... find'ing X/X is fine, bit -X/-X, hmpf. i can "find ./$id", then "-name $id" is fine, but i get the leading "./" which i don't want :/
[22:30:22] <ede> ah
[22:30:32] <bn_work> wwilliam: lsblk may help?
[22:31:01] <wwilliam> bn_work: fdisk -s was good.
[22:31:06] <wwilliam> Thanks.
[22:31:14] *** Joins: Drek45 (~jrept371@129.59.122.18)
[22:31:28] <Soliton> why do you not want leading ./? no worries about a leading dash then.
[22:31:37] *** Joins: ossifrage (~ossifrage@pool-72-78-189-30.phlapa.fios.verizon.net)
[22:32:00] <ossifrage> is there a way for a bash function to tell if it is part of a pipeline?
[22:32:01] *** Joins: reset (~reset@user/reset)
[22:32:23] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[22:32:24] <Soliton> maybe
[22:34:20] *** Joins: sazawal (~sazawal@106.213.43.60)
[22:34:56] <ede> Soliton: i may need to create pathes from them and then i'll get things like foo/./bar unless i fix it every time. also i just like to keep things clean. better have the work at a onetime job than every time in the future.
[22:35:40] <Soliton> you could also try to overcome your ocd.
[22:36:05] <Soliton> or just cut off the ./ when you don't want it.
[22:36:21] *** Joins: Betal (~Betal@user/betal)
[22:36:27] <tirnanog> ossifrage: not portably.
[22:36:39] *** Quits: Yssk (~Yssk@85.255.237.6) (Quit: Yssk)
[22:37:55] *** Joins: Yssk (~Yssk@85.255.237.6)
[22:38:01] *** Quits: Yssk (~Yssk@85.255.237.6) (Client Quit)
[22:39:02] <ede> x="x"; y="y"; p="."; mkdir "$p/$y" # this one works. but when i use $x instead of $p it does not.
[22:39:26] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 250 seconds)
[22:39:35] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 268 seconds)
[22:39:44] <Soliton> mkdir -p
[22:40:00] <ede> sure, this would keep it consistent at least
[22:40:15] <Soliton> consistent with what?
[22:40:29] <ede> with all the other possible strings
[22:44:07] <ossifrage> I have a function ssh() that sets the window title with an echo, but it breaks things like 'ssh host cmd | ...' because the escape sequences get sent to the pipe
[22:45:39] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[22:45:59] *** Joins: jaggz (~jaggz@user/jaggz)
[22:45:59] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[22:47:15] <tirnanog> I think you're asking the wrong question then. you can check whether stdout is a tty with [[ -t 1 ]].
[22:47:38] <tirnanog> and, presumably, adapt your function accordingly.
[22:48:37] <Soliton> since the escape sequence is meant for a terminal you should only send it to a terminal.
[22:48:50] <ede> and what's this now? i just killed Ctrl+Left/Right in xterm/screen. not even a full reset helps, but i still can switch tabs. cursor keys seem the only affected. a bash thing maybe?
[22:49:47] <ossifrage> ah, my mistake was I was just seeing if it was an interactive shell, but not if stdout is a tty
[22:50:22] *** Joins: tp43_ (~ndeem@2001:1970:501a:e201:7dd8:7bb5:b166:9697)
[22:51:20] <ede> when i start mc i can use them again in its command line.
[22:51:44] <tirnanog> ossifrage: the mode of the shell doesn't matter, as you probably now realise.
[22:52:07] <tirnanog> at least, not as far as this problem is concerned.
[22:52:26] *** Joins: austin987 (~null@100.42.98.196)
[22:53:15] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[22:54:07] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Read error: Connection reset by peer)
[22:54:39] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[22:58:40] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Ping timeout: 240 seconds)
[22:58:51] *** Joins: humky (~humky@user/humky)
[23:08:54] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 250 seconds)
[23:11:30] *** Quits: fourHZ (~fourHZ@92-52-40-121.dynamic.orange.sk) (Quit: Connection closed)
[23:13:58] *** Joins: manin (~x@185.242.190.95)
[23:14:06] *** Quits: tp43_ (~ndeem@2001:1970:501a:e201:7dd8:7bb5:b166:9697) (Ping timeout: 250 seconds)
[23:14:50] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[23:15:19] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[23:16:35] *** Quits: Namarrgon (~Namarrgon@archlinux/op/Namarrgon) (Ping timeout: 268 seconds)
[23:17:10] *** Joins: humky (~humky@user/humky)
[23:18:09] *** Joins: Namarrgon (~Namarrgon@archlinux/op/Namarrgon)
[23:19:07] *** Quits: kwilczynski (sid379192@user/kwilczynski) ()
[23:19:52] *** Quits: twobitsprite (~twobitspr@195.181.171.237) (Ping timeout: 258 seconds)
[23:21:32] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[23:21:40] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Ping timeout: 240 seconds)
[23:29:39] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.2)
[23:32:22] *** Joins: somlis (~somlis@user/somlis)
[23:36:36] *** Joins: sym (tekla@user/sym)
[23:38:23] *** Joins: tmm88 (~tmm88@2001:8a0:ff48:1500:b66b:fcff:fe62:e4a9)
[23:39:36] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[23:40:16] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[23:43:13] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[23:46:02] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[23:46:23] *** Joins: ano (~weechat@user/ano)
[23:49:04] *** Quits: Drek45 (~jrept371@129.59.122.18) (Ping timeout: 252 seconds)
[23:49:48] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:50:07] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:52:41] *** Joins: venue (~venue@user/venue)
[23:54:39] *** Quits: roadie (~user@2a02:8108:ec0:1427:48a4:64ab:e770:7043) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[23:54:45] *** Joins: rendar (~rendar@user/rendar)
[23:56:03] *** Joins: tmm8819 (~tmm88@2001:8a0:ff48:1500:b66b:fcff:fe62:e4a9)
[23:56:30] *** Joins: unixman_home (~unixman2@216.137.241.98)
[23:56:53] *** Quits: tmm88 (~tmm88@2001:8a0:ff48:1500:b66b:fcff:fe62:e4a9) (Quit: Client closed)
[23:58:47] *** Quits: ccl (ccl@shell.xshellz.com) (Ping timeout: 245 seconds)
[23:58:57] *** Quits: tmm8819 (~tmm88@2001:8a0:ff48:1500:b66b:fcff:fe62:e4a9) (Client Quit)
[23:59:10] *** Quits: aaro (aaro@user/aaro) (Ping timeout: 240 seconds)
[23:59:26] *** Joins: tmm88 (~tmm88@2001:8a0:ff48:1500:b66b:fcff:fe62:e4a9)
