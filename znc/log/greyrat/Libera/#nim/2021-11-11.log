[00:12:52] *** Joins: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net)
[00:15:32] <arkanoid> how can I creare a proc that takes a range as an argument?
[00:16:01] <arkanoid> I just want a func that does "myRange.toSeq.join(",")"
[00:16:17] <arkanoid> but I'm getting Error: invalid type: 'range' in this context: 'proc (r: range)
[00:20:28] <PMunch> You probably want an HSlice: https://play.nim-lang.org/#ix=3ECZ
[00:21:47] <nrds> <06Prestige99> https://nim-lang.org/docs/system.html#HSlice found it
[00:22:24] <nrds> <06Prestige99> Looks like `Slice` is an alias for HSlice
[00:22:34] <nrds> <06Prestige99> https://github.com/nim-lang/Nim/blob/version-1-6/lib/system.nim#L497
[00:25:24] <PMunch> Well Slice is homogenous, while HSlice is not
[00:26:10] <nrds> <06Prestige99> True
[00:26:19] <nrds> <06Prestige99> Interesting I hadn't seen HSlice previously
[00:28:13] <PMunch> It's typically used for negative indexes
[00:28:27] <PMunch> Where the second argument is a BackwardsIndex
[00:31:30] *** Quits: riceman_ (~riceman_@24.148.81.91) (Quit: Client closed)
[00:34:11] <FromDiscord> <zentoad> I am having trouble getting nim to find the c++ library installed by CMake.‚Üµ`switch("clib", "jxl")` is in my confg.nims but is searches the current directory.‚Üµadding `switch("clibdir", "/usr/local/lib")` doesn't do anything
[00:44:07] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Changing host)
[00:44:07] *** Joins: PMunch (~PMunch@user/pmunch)
[01:03:35] <FromDiscord> <hmmm> hey I have a: if thingy == condition: <do absolutely nothing> , what was the incantation? discard pass or what
[01:03:43] <nrds> <06Prestige99> discard
[01:03:51] <FromDiscord> <hmmm> ty bro üëç
[01:03:58] <nrds> <06Prestige99> Any time
[01:04:14] <FromDiscord> <Elegantbeef> You can also do `if x: ## Todo: anything` since doc comments are AST
[01:05:26] <FromDiscord> <hmmm> this looks cooler than discard
[01:06:11] <FromDiscord> <hmmm> but I intend for it to do nothing forever so no todo üòä
[01:06:48] <FromDiscord> <Elegantbeef> What's the point of a `if thing == condition` üòÄ
[01:07:13] <FromDiscord> <hmmm> skip the first line reading a file
[01:08:13] <FromDiscord> <Elegantbeef> I dont see how that achieves this but ok
[01:08:30] <FromDiscord> <hmmm> hmm it works trust me, I have a plan
[01:09:49] <PMunch> @Elegantbeef, probably something like `if myStream.readLine().len == 0:` or something like that
[01:10:02] <PMunch> Where the condition has a side effect
[01:14:57] <FromDiscord> <hmmm> oh god munchie knows the plan üò≥
[01:15:16] <FromDiscord> <Elegantbeef> i spose, but my instinct is to use the iterator the just do `if line.len >0: #do stuff`
[01:15:20] <FromDiscord> <hmmm> anyway inc somevar is idiomatic nim or cool people do something better?
[01:16:11] <FromDiscord> <Elegantbeef> It's idiomatic
[01:16:20] <FromDiscord> <hmmm> üëç
[01:17:12] <PMunch> I'd say `inc` is the most idiomatic
[01:17:27] <PMunch> If what you are doing is in fact incrementing a counter
[01:17:34] <FromDiscord> <hmmm> yes
[01:17:45] <PMunch> If you just need to add one to a variable for some other purpose then I'd do `+= 1`
[01:18:18] <PMunch> And it's not so much that I know the plan as that I've done exactly the same thing before :P
[01:19:02] <FromDiscord> <hmmm> we all had to take that route in our path to greatness I guess ü§î
[01:43:21] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[01:50:10] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[02:10:31] <FromDiscord> <deech> If I have a `proc` returning a `NimNode` do I have to call it through a template/macro to get it splice in that NimNode at this some point?
[02:12:46] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3EDr
[02:12:59] <FromDiscord> <Elegantbeef> Generally you only call them inside macros though
[02:13:13] <FromDiscord> <deech> Ahhah! Thanks
[02:13:59] <FromDiscord> <deech> What do I if the NimNode is some proc I'd like to splice in at the toplevel?
[02:14:19] <FromDiscord> <Elegantbeef> You'd need to call a macro which returns the AST
[02:14:29] <FromDiscord> <Elegantbeef> NimNodes are data not sem'd AST
[02:14:43] <FromDiscord> <Elegantbeef> Well they can be sem'd, but they're still just data
[02:15:00] <FromDiscord> <deech> Is there something like `toAst(doThing)`?
[02:15:22] <FromDiscord> <Elegantbeef> there is `getTypeImpl` and `getTypeInst`
[02:15:31] <FromDiscord> <Elegantbeef> Those let you extract the procedure def from the symbol
[02:15:32] <FromDiscord> <deech> Or is that simply the "identity" macro? `macro m(x:untyped):untyped = x`
[02:15:48] <FromDiscord> <Elegantbeef> That'd be what you want
[02:15:57] <FromDiscord> <Elegantbeef> Assuming `doThing` returns vali AST
[02:16:01] <FromDiscord> <Elegantbeef> valid even
[02:17:47] <FromDiscord> <deech> Is there such a macro/template in the stdlib?
[02:18:16] <FromDiscord> <Elegantbeef> I dont think so
[02:18:37] <FromDiscord> <deech> Cool. Seems useful.
[02:18:44] <FromDiscord> <Elegantbeef> Though i guess you'd want `macro m(x: typed): untyped`
[02:19:09] <FromDiscord> <Elegantbeef> Though I'm still uncertain the API desire so I guess I may be wrong
[02:19:28] <FromDiscord> <deech> I seem to remember seeing somewhere that `typed` arguments to macros is deprecated?
[02:19:35] <FromDiscord> <Elegantbeef> Nope
[02:20:24] <FromDiscord> <Elegantbeef> `typed` arguments are the only way to get a sem'd ast inside the macro, so it'd very much be bad to be deprecated
[02:20:24] <FromDiscord> <Elegantbeef> Well there are also the specific parameter types, but for an entire body there is no other way
[02:20:36] <FromDiscord> <Elegantbeef> Typed macros are really the bread and butter of the code introspection
[02:20:49] <FromDiscord> <Elegantbeef> If you can get around the odd differences in some AST
[02:22:00] <FromDiscord> <Elegantbeef> Araq's actually explictly said the opposite that i've seen in that he'd prefer only typed macros
[02:22:58] <FromDiscord> <Elegantbeef> Untyped macros are really double edged swords, they give tons of syntax flexibility at the cost of readability and understanding
[02:27:57] *** Joins: sagax (~sagax_nb@user/sagax)
[03:28:51] *** Quits: emery (~quassel@2a03:3b40:fe:ab::1) (Remote host closed the connection)
[03:29:12] *** Quits: lain (~lain@172.16.254.xxx) (Ping timeout: 260 seconds)
[03:30:07] *** Joins: ehmry (~quassel@2a03:3b40:fe:ab::1)
[03:30:32] *** Joins: lain (~lain@172.16.254.xxx)
[03:32:54] <FromDiscord> <hmmm> aaaa why python can have the beautiful a[1:] and we need to have this monstrosity a[1 .. ^1]
[03:37:39] <FromDiscord> <Elegantbeef> You... do realize you can make your own sugar
[03:37:44] <FromDiscord> <impbox [ftsf]> https://github.com/nim-lang/RFCs/issues/311
[03:39:19] <FromDiscord> <impbox [ftsf]> sounds like one reason is because nim doesn't have support for postfix operators, only prefix and infix
[03:39:35] <FromDiscord> <impbox [ftsf]> and `1..^1` does the job
[03:41:57] <FromDiscord> <evoalg> I would say that `a[1 .. ^1]` is more readable than `a[1:]` anyway. I used to write perl scripts where I would feel cool using a few symbols to do stuff, but it wasn't readable, so I now like the longer form
[03:44:46] <FromDiscord> <impbox [ftsf]> i wouldn't mind having `a[1..]` or `a[..5]` but easy to manage without, it could also be ambiguous in different contexts. `1..` -> `1..type(1).high` ? `..5` `type(5).low..5` would make sense for ranges, but slicing a string you'd probably want it to have a different meaning
[03:45:45] <FromDiscord> <Elegantbeef> Just make `1.^1` sugar üòõ
[03:47:22] <FromDiscord> <evoalg> `a[1 .. a.high]` may be even more readable, yea
[03:48:02] <FromDiscord> <evoalg> dunno
[03:48:20] <FromDiscord> <Elegantbeef> Ideally you avoid these slice operations though, unless you need a sequence
[03:48:30] <FromDiscord> <Elegantbeef> But that's just me going "Memory usage bad"
[03:49:43] <FromDiscord> <evoalg> so would `for x in a[1 .. ^1]` make a new seq and then loop over it?
[03:49:59] <FromDiscord> <Elegantbeef> Yep
[03:50:22] <FromDiscord> <Elegantbeef> to do the 0cost iteration you'd want `for x in a.toOpenArray(1, a.high)`
[03:50:47] <FromDiscord> <evoalg> ooooo
[03:51:00] <FromDiscord> <evoalg> lemme look up toOpenArray
[03:51:25] <FromDiscord> <impbox [ftsf]> oh, i've not encountered that
[03:51:38] <FromDiscord> <Elegantbeef> Though now we can use `[]` for iterators so we can make 0 cost iterators
[03:53:06] <FromDiscord> <evoalg> I looked up toOpenArray is system ... no explanation or examples ... I'm not able to glean stuff form proc definitions yet üò¶
[03:53:17] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3EDN
[03:53:29] <FromDiscord> <Elegantbeef> it just returns an `openArray` which is basically a `pointer, len`
[03:53:45] <FromDiscord> <Elegantbeef> It cannot be stored in a variable, it can only be passed to procedures or used in loops
[03:54:03] <FromDiscord> <evoalg> nice üôÇ
[03:54:06] *** Quits: LyndsySimon (sid34452@lymington.irccloud.com) (Ping timeout: 260 seconds)
[03:54:32] *** Quits: robertmeta (sid514@user/robertmeta) (Ping timeout: 268 seconds)
[03:54:42] *** Quits: euantorano (sid180289@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[03:54:42] <FromDiscord> <Elegantbeef> But yea if you care about memory usage/performance `toOpenArray` is the way to iterator over slices
[03:55:51] <FromDiscord> <evoalg> I guess if I'm writing something that will only be use used where they'll be plenty of mem and the seq / array isn't too long then I don't have to worry
[03:57:34] *** Quits: ormiret (sid314108@id-314108.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:57:34] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Write error: Connection reset by peer)
[03:58:27] *** Quits: elph (uid286227@id-286227.lymington.irccloud.com) (Ping timeout: 250 seconds)
[03:59:33] <FromDiscord> <Elegantbeef> Yep bikeshedding is a hobby üòõ
[04:00:46] <FromDiscord> <Elegantbeef> Eh i see zoom is happy that i passed a flag along üòõ
[04:01:41] <FromDiscord> <evoalg> huh?
[04:01:58] <FromDiscord> <Elegantbeef> They reacted to my `[]` comment, which was fixed by passing a flag along
[04:02:16] <FromDiscord> <Elegantbeef> Matrix/discord reactions arent cross bridge sadly
[04:02:32] <FromDiscord> <Zoom> Yeah, implicit seq creation makes me sad
[04:03:06] <FromDiscord> <Elegantbeef> Yea was the reason i looked into it, smelled like a simple issue that should've been easy to fix
[04:04:09] <FromDiscord> <Elegantbeef> Low hanging fruit is my forte!
[04:04:55] <FromDiscord> <impbox [ftsf]> Well slicing is not really implicit
[04:05:35] <FromDiscord> <Elegantbeef> The copy is implicit there are many usages of `for x in a[b..c]` which shouldnt be copies
[04:05:56] <FromDiscord> <Zoom> But you probably should expect it to return a "view type"‚Üµ(@impbox [ftsf])
[04:06:04] <FromDiscord> <Elegantbeef> Ideally the `a[b..c]` is only a copy when needs to be
[04:06:39] <FromDiscord> <impbox [ftsf]> `var b = a[1..5]` i wouldn't expect to be a view
[04:07:04] <FromDiscord> <Elegantbeef> In that case it shouldnt be you're right
[04:07:09] <FromDiscord> <Elegantbeef> Luckily we can support both now
[04:07:42] <FromDiscord> <impbox [ftsf]> `for x in a{1..5}:` or something for view perhaps?
[04:07:57] <FromDiscord> <Elegantbeef> It doesnt make sense in this case
[04:07:58] <FromDiscord> <impbox [ftsf]> Not sure if that syntax is already used by sets
[04:08:21] <FromDiscord> <impbox [ftsf]> But if the compiler can do the magic to determine the correct thing by context that's cool
[04:08:23] <FromDiscord> <Elegantbeef> `for x a[1..5]` doesnt need to copy since `x` is immutable
[04:08:31] <FromDiscord> <Elegantbeef> It can
[04:08:33] <FromDiscord> <impbox [ftsf]> Nice
[04:08:51] <FromDiscord> <Zoom> I would. Not in Nim, though \:D‚Üµ(@impbox [ftsf])
[04:11:07] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3EDQ
[04:13:18] <FromDiscord> <evoalg> seems like magic to me
[04:14:24] *** Joins: elph (uid286227@lymington.irccloud.com)
[04:14:48] <FromDiscord> <Zoom> `let s = x[0..1] & x[3..4]` it would be nice if it didn't create intermediate seqs and copied directly.
[04:15:35] <FromDiscord> <Elegantbeef> Well with TRM that's actually possible üòÄ
[04:16:29] <FromDiscord> <evoalg> TRM?
[04:17:18] <FromDiscord> <Elegantbeef> Term rewriting macros, they allow you to use pattern matching to define what to replace
[04:17:55] <FromDiscord> <Elegantbeef> So for instance you could replace `"Hello" & " " & "World"`  with `"Hello world"`
[04:18:09] <FromDiscord> <Elegantbeef> not a overly compelling example of course
[04:18:57] <FromDiscord> <Zoom> If slices were immutable by default it would be unnecessary.
[04:19:02] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3EDU
[04:19:17] <FromDiscord> <RattleyCooper> In reply to @evoalg "seems like magic to": Wait until you see a template that uses `{.inject.}` üòõ
[04:19:29] <FromDiscord> <evoalg> lol
[04:19:35] *** Quits: elph (uid286227@lymington.irccloud.com) (Ping timeout: 264 seconds)
[04:19:41] <FromDiscord> <Elegantbeef> Unhygienic templates arent that complicated though
[04:20:14] <FromDiscord> <RattleyCooper> But it def seems like magic to me
[04:20:36] <FromDiscord> <Elegantbeef> I dont recall Zoom do you have a performance focused library for iterators or is that someone else
[04:21:10] <FromDiscord> <Zoom> I got nothing. I just liked zero\_functional
[04:21:13] <FromDiscord> <Elegantbeef> Ah
[04:21:35] <FromDiscord> <Elegantbeef> I recall from the forum you + ZF but didnt remember who was the author
[04:21:42] <FromDiscord> <Zoom> Although it's limited
[04:22:20] *** Joins: elph (uid286227@lymington.irccloud.com)
[04:23:14] *** Joins: LyndsySimon (sid34452@lymington.irccloud.com)
[04:24:20] *** Joins: notchris (sid181145@hampstead.irccloud.com)
[04:32:06] <FromDiscord> <evoalg> so it's possible that nim could have done slices as iterators by default, but didn't go down that path when nim was developed?
[04:32:14] *** Joins: robertmeta (sid514@user/robertmeta)
[04:33:14] <FromDiscord> <RattleyCooper> The great thing about nim is you can usually just make it do the things you want, so even if it's not developed that way you can create the iterators you want/need.
[04:34:01] <FromDiscord> <Elegantbeef> Indeed evoalg, especially if someone fixed the bug when it was introduced üòõ
[04:34:59] <FromDiscord> <Elegantbeef> The issue was that `[]` was accidentally disallowed for iterators until 1.6.0, but there is no reason for the stdlib not to have them, personally i'm somewhat considering making a module for it
[04:36:08] <FromDiscord> <Elegantbeef> It'd never be introduced into `iterators` i assume since it'd be a possible breaking change
[04:38:54] <FromDiscord> <Zoom> It would be nice to be considered for v2
[04:39:51] <FromDiscord> <Elegantbeef> yep
[04:40:54] <FromDiscord> <Zoom> And to be considered it needs to be suggested..
[04:41:18] <FromDiscord> <evoalg> I heard a rumor that v2 is 1 year away, and it always will be 1 year away ... am I cynical?
[04:41:36] *** Joins: euantorano (sid180289@helmsley.irccloud.com)
[04:41:49] <FromDiscord> <evoalg> it's more that I'm worried this will be the case, as I've seen that sort of thing before
[04:44:11] <FromDiscord> <RattleyCooper> I haven't been around that long but since I started using nim it's gone from 1.4.8 to 1.6.  Don't know if that's normal or not for that timeframe though
[04:44:29] <FromDiscord> <impbox [ftsf]> does the number matter to you?
[04:44:51] <FromDiscord> <RattleyCooper> Yeah, so long as progress is made it really shouldn't matter if it's 2.0 or 1.9.99
[04:45:02] <FromDiscord> <impbox [ftsf]> is there's a specific feature you're waiting on?
[04:45:15] *** Quits: elph (uid286227@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:45:44] <FromDiscord> <impbox [ftsf]> since the scope for v2 isn't announced, I understand why you'd care when a version with that number it gets released.
[04:47:19] <FromDiscord> <impbox [ftsf]> i think a roadmap would be great though, hopefully we'll see something like that soon
[04:52:08] <FromDiscord> <evoalg> sent a long message, see http://ix.io/3EDY
[04:52:38] <FromDiscord> <RattleyCooper> Ahhh, that makes a lot of sense
[04:53:04] <FromDiscord> <RattleyCooper> Just a backlog of features
[04:53:54] <FromDiscord> <evoalg> will it be as backwards compatible as 1.6 is to 1.4 sort-of-thing?
[04:53:59] <FromDiscord> <Elegantbeef> v2 allows breaking changes, so it will allow many API changes
[04:54:05] <FromDiscord> <evoalg> ahhh ok
[04:54:27] <FromDiscord> <Elegantbeef> Major changes do not need to be backwards compatible
[04:54:40] *** Joins: ormiret (sid314108@lymington.irccloud.com)
[04:55:50] <FromDiscord> <evoalg> so would it be fair to compare v2 to Python2 -> Python3 ? (as fair as we can be with no roadmaps at this stage)
[04:56:11] <FromDiscord> <Elegantbeef> There is a forum post for what araq wants for 2.0
[04:56:55] <FromDiscord> <Elegantbeef> https://forum.nim-lang.org/t/7983
[04:57:25] <FromDiscord> <evoalg> thank you! (and I'll stop asking the tough questions üòâ )
[04:57:55] <FromDiscord> <Elegantbeef> none of us are core devs so cannot say much of what 2.0 will entail
[05:00:00] <FromDiscord> <evoalg> Makes sense ... and please remember I don't really know what I'm talking about ... thank you all for your thoughts
[05:00:21] <FromDiscord> <RattleyCooper> Neither do I!
[05:00:31] <FromDiscord> <Elegantbeef> Well i never know what i'm talking about, i just take the lack of argument for that i do üòõ
[05:01:53] <FromDiscord> <evoalg> üòâ
[05:04:06] <FromDiscord> <impbox [ftsf]> In reply to @evoalg "so would it be": I would guess not, python 2->3 completely fragmented their ecosystem, i imagine nim would not repeat their mistake
[05:05:01] <FromDiscord> <impbox [ftsf]> nim 0 -> 1 was an easy transition, as have been 1.x -> 1.x+1
[05:10:40] <FromDiscord> <Elegantbeef> you mean `1.x + 2` üòõ
[05:11:13] <FromDiscord> <impbox [ftsf]> true, 1.x -> 1.x+1 was troublesome =p
[05:11:18] <FromDiscord> <Elegantbeef> `x mod 2 == 0` are stable releases `x mod 2 == 1` are devel branches
[05:22:56] <FromDiscord> <Daniel M. Ja√©n> The best package for MySQL?
[05:23:17] <FromDiscord> <Daniel M. Ja√©n> (edit) "The" => "What is the"
[06:08:25] <FromDiscord> <exelotl> In reply to @Daniel M. Ja√©n "What is the best": sadly I think std/db_mysql is the only real option
[06:10:13] <FromDiscord> <exelotl> ndb would be preferable but it only supports sqlite and postgres :(
[06:10:32] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:11:00] <FromDiscord> <Daniel M. Ja√©n> In reply to @exelotl "ndb would be preferable": F
[06:11:06] <FromDiscord> <Daniel M. Ja√©n> In reply to @exelotl "sadly I think std/db_mysql": ok
[06:25:02] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[07:00:23] <FromDiscord> <Qixt> what's the most recommended nim gui toolkit
[07:10:32] <FromDiscord> <impbox [ftsf]> if you have the option, postgresql is significantly better than mysql
[07:10:47] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:24:18] <FromDiscord> <evoalg> I can do `echo @[1, 2, 3, 4, 5].find(3)` but I can't do the same with "rfind", ie `echo @[1, 2, 3, 4, 5].rfind(3)` ... should I reverse the seq and then use find?
[07:26:49] <FromDiscord> <Rika> Is there an rfind for regular seqs?
[07:26:54] <FromDiscord> <Yardanico> In reply to @Rika "Is there an rfind": no, that's the point
[07:27:00] <FromDiscord> <Yardanico> there's only rfind for strings
[07:27:27] <FromDiscord> <evoalg> ohhhhh ok ... so I should reverse using the algorithm module and then use find?
[07:29:22] <FromDiscord> <evoalg> or I could loop through the seq and keep the last matched index I guess
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:47:16] <FromDiscord> <impbox [ftsf]> or add an rfind for seqs
[07:47:23] <FromDiscord> <impbox [ftsf]> sounds like a useful thing to have
[07:47:51] <FromDiscord> <Elegantbeef> Well i guess i'll make that iterator module since i cannot be  arsed to try to debug opengl's debug handler causing a segfault
[07:48:09] <FromDiscord> <Elegantbeef> Grabbed an old laptop installed an OS and turns out i'm an idiot that forgot the GPU it had sucks üòÄ
[07:51:37] <FromDiscord> <evoalg> I make my own rfind https://play.nim-lang.org/#ix=3EEz ... but I haven't been brave enough to make a iterator for it instead
[07:54:05] <FromDiscord> <evoalg> I'm wanting the rfind for seq's so that I can compare eg user input of a number to if it has been previously entered, and if so when, ie the last time, ie the last index, so hence rfind ... if that makes sense
[07:55:10] <FromDiscord> <Elegantbeef> Why is it named `myrfind` üòÄ
[07:55:37] <FromDiscord> <Elegantbeef> try `proc rfind[T](s: seq[T], n: T): int` as the proc definition for infinite reuse üòõ
[07:56:06] <FromDiscord> <evoalg> I wasn't brave and thought it might break something ... it'd be the first time I named something the same as a standard proc ... ok I will do that! üôÇ
[07:56:14] <FromDiscord> <evoalg> Thank you!
[07:58:46] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3EEH
[07:58:50] <FromDiscord> <impbox [ftsf]> you can do something like this to make it more generic
[07:59:02] <FromDiscord> <impbox [ftsf]> then it'll work with any type of seq
[07:59:28] <FromDiscord> <Elegantbeef> I didnt even look at the body, use that implicit result if you're going to do that style of coding evoalg
[07:59:30] <FromDiscord> <evoalg> I want it to return on the last match not the first though
[07:59:44] <FromDiscord> <impbox [ftsf]> oh right, in which case ,iterate backwards
[07:59:52] <FromDiscord> <impbox [ftsf]> sorry i didn't realise it wasn't doing that
[08:00:07] <FromDiscord> <evoalg> oh I didn't realize I could iterate backwards!
[08:00:32] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3EEI
[08:00:36] <FromDiscord> <Elegantbeef> Is one way of doing it
[08:00:56] <FromDiscord> <Elegantbeef> I dont recall if the stdlib provides a reversed iterator
[08:01:01] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3EEJ
[08:01:10] <FromDiscord> <Elegantbeef> open arrays `s.low` is 0
[08:01:23] <FromDiscord> <evoalg> much nicer and much more efficient, both of you thank you!
[08:01:39] <FromDiscord> <impbox [ftsf]> openarray means it'll work with both seqs and arrrays
[08:02:10] <FromDiscord> <evoalg> ahhh ok!
[08:03:09] <FromDiscord> <impbox [ftsf]> if you wanted to find all occurrences starting from the back you could do an iterator
[08:03:34] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3EEK
[08:04:29] <FromDiscord> <evoalg> gotcha, thanks! ... Elegantbeef gave me a "find all" iterator going forward, so I've got lots to play with now - thank you both!
[08:04:54] <FromDiscord> <impbox [ftsf]> hurrah! have fun!
[08:23:52] <FromDiscord> <evoalg> for the iterator way, I looped over it and it works great. If I wanted to use the iterator only to grab the first match, how do I do that? ... as I can't do `v = myseq.rfind(4)` if it's an iterator
[08:24:26] <FromDiscord> <Elegantbeef> You'd need a proc for that syntax
[08:26:18] <FromDiscord> <evoalg> ok thank you ... gosh I was thinking of using the iterator and then using a for loop and breaking on the first iteration ... that's not particularly good programming practice right?
[08:26:39] <FromDiscord> <Elegantbeef> Not when it can be avoided, you can always make a proc to do that though
[08:26:59] <FromDiscord> <Elegantbeef> https://github.com/beef331/slicerator/blob/master/src/slicterator.nim here's a bunch of inspiration üòõ
[08:27:21] <FromDiscord> <Elegantbeef> Even got tests  https://github.com/beef331/slicerator/blob/master/tests/test1.nim
[08:28:05] <FromDiscord> <Rika> When the fuck did you become treeform where you have 91726493 libraries
[08:29:47] <FromDiscord> <evoalg> How do I import slicterator if it's not in nimble?
[08:30:25] <FromDiscord> <Elegantbeef> `requires "https://github.com/beef331/slicerator#0.10`
[08:30:29] <FromDiscord> <Elegantbeef> in your nimble file
[08:31:01] <FromDiscord> <Elegantbeef> If you dont have a nimble file you can just do `nimble install https://github.com/beef331/slicerator`
[08:31:06] <FromDiscord> <Elegantbeef> Then `import slicerator`
[08:31:33] <FromDiscord> <Elegantbeef> To be fair rika i mostly just made this to show evo how one would handle this üòÄ
[08:31:53] <FromDiscord> <evoalg> works!
[08:32:07] <FromDiscord> <impbox [ftsf]> In reply to @evoalg "ok thank you ...": you can create a proc and iterator with the same name and they'll do the right thing
[08:32:27] <FromDiscord> <! ash> :shrug:
[08:32:27] <FromDiscord> <Elegantbeef> Is that a question or a statement? üòÄ
[08:32:33] <FromDiscord> <! ash> wow
[08:33:05] <FromDiscord> <Elegantbeef> Wow indeed
[08:36:21] <FromDiscord> <evoalg> "Success: slicterator installed successfully." ... but do I import slicerator or slicterator ?
[08:36:36] <FromDiscord> <Elegantbeef> `import slicerator`
[08:37:04] <FromDiscord> <Elegantbeef> Lol i messed up the repo name
[08:37:30] <FromDiscord> <Rika> Lol
[08:37:34] <FromDiscord> <Rika> Like you always do
[08:37:38] <FromDiscord> <Elegantbeef> should be `import sliceterator`
[08:37:53] <FromDiscord> <Elegantbeef> Thanks rika, you're my best friend
[08:38:37] <FromDiscord> <Elegantbeef> You might ask yourself "Where would we be without rika" and the answer is "happy"
[08:38:51] <FromDiscord> <evoalg> or "imoport slicterator" ?
[08:39:10] <FromDiscord> <Elegantbeef> Just monkey at the keyboard it until it works
[08:39:31] <FromDiscord> <Elegantbeef> Do you have a `projectname.nimble`?
[08:39:47] <FromDiscord> <evoalg> "slicterator" worked not "sliceterator"
[08:40:35] <FromDiscord> <evoalg> ... in ~/.nimble/ I only have: bin  nimbledata.json  packages_official.json  packages_temp.json  pkgs
[08:41:02] <FromDiscord> <Elegantbeef> That's not what i meant
[08:41:16] <FromDiscord> <Elegantbeef> You generally want to have a nimble file for your project so you can pin dependancies
[08:41:30] <FromDiscord> <Elegantbeef> https://github.com/beef331/truss3d/blob/master/truss3D.nimble stuff like this
[08:43:07] <FromDiscord> <evoalg> oh ... would I put that in the same dir as my nim files?
[08:44:57] <FromDiscord> <Elegantbeef> Yea for your project so you dont need to manually fetch all dependancies if you move computers
[08:45:21] <FromDiscord> <evoalg> ie if I have a myprogram.nim and I'm programming and have includes etc, would I put myprogram.nimble in the same directory ... ahh ok
[08:45:36] <FromDiscord> <evoalg> makes sense!
[08:45:50] <FromDiscord> <Elegantbeef> It's more for libraries/serious projects, for one off stuff it doesnt matter
[08:46:11] <FromDiscord> <evoalg> gotcha ... I guess I'm just playing around learning at the moment
[08:47:11] <FromDiscord> <Elegantbeef> Well then yea no purpose making nimble
[08:47:47] <FromDiscord> <evoalg> I have to run out for a bit ... will play later ... thank you for your help Elegantbeef üôÇ
[08:48:24] <FromDiscord> <Rika> Please pin your dependencies
[08:49:06] <FromDiscord> <Elegantbeef> No problem
[08:49:16] <FromDiscord> <Elegantbeef> With evo i probably should make that tip jar impbox üòõ
[08:49:31] <FromDiscord> <impbox> you totally should make a tip jar
[08:50:05] <FromDiscord> <Elegantbeef> I should figure out my opengl issue üòõ
[08:50:35] <FromDiscord> <impbox> what's the prob?
[08:50:43] <FromDiscord> <Elegantbeef> the opengl debug handler causes a seg fault
[08:50:53] <FromDiscord> <Elegantbeef> Atleast enabling it causes it
[08:52:07] *** Quits: blackbeard420 (~blackbear@45.33.85.133) (Quit: ZNC 1.8.2 - https://znc.in)
[08:52:17] *** Joins: blackbeard420_ (~blackbear@45.33.85.133)
[08:52:17] <FromDiscord> <impbox> hmm, i've used it successfully in the past
[08:54:06] <FromDiscord> <impbox> but also getting crashes now when i use it
[08:54:13] <FromDiscord> <Elegantbeef> Oh so it's not just me?!
[08:55:09] <FromDiscord> <Yardanico> nim is good for when you're too lazy to calculate some stuff by hand :) at the level of python
[08:57:41] *** Joins: riceman_ (~riceman_@24.148.81.91)
[08:57:58] <FromDiscord> <impbox> [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)\: seems not, i can't get it to work, can look into it a bit more later
[08:58:15] *** Quits: ecs (ecs@user/ecs) (Ping timeout: 268 seconds)
[08:58:35] <FromDiscord> <Elegantbeef> Appreciated if you can, mine works sometimes but seg faults others
[08:58:41] <FromDiscord> <Elegantbeef> So something is off
[08:59:08] <FromDiscord> <Elegantbeef> Sometimes gdb points towards my gpu drivers sometimes to nim code
[08:59:21] <FromDiscord> <impbox [ftsf]> i'm certain it worked at some point in the past, wonder if a driver update broke it
[08:59:26] <FromDiscord> <impbox [ftsf]> on NVIDIA here
[08:59:36] <FromDiscord> <Elegantbeef> AMD OSS linux drivers here
[08:59:44] <FromDiscord> <impbox [ftsf]> hmm unlikely then
[09:00:13] *** Joins: ecs (ecs@user/ecs)
[09:00:28] *** Quits: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de) (Remote host closed the connection)
[09:00:30] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3EEX the odd backtrace from gdb
[09:01:01] <FromDiscord> <Elegantbeef> You're on windows right?
[09:01:06] <FromDiscord> <impbox [ftsf]> yaa
[09:01:24] <FromDiscord> <Elegantbeef> Odd
[09:01:47] <FromDiscord> <Elegantbeef> The last PR was in july
[10:20:43] <FromDiscord> <evoalg> In reply to @Elegantbeef "With evo i probably": Sure let me know when you make a tip jar
[10:21:26] <FromDiscord> <Rika> Damn people tip others for stuff like this?
[10:21:46] <FromDiscord> <Elegantbeef> Fuck if i know impbox suggested it half joking
[10:21:53] <FromDiscord> <Elegantbeef> I jokingly referenced it
[10:22:12] <FromDiscord> <Elegantbeef> Also if impbox responds on discord when i referenced him on matrix i'll question their sanity
[10:22:17] <FromDiscord> <impbox [ftsf]> not jokingly
[10:22:50] <FromDiscord> <Rika> BRB setting up a tip jar 9/10ths jk
[10:23:11] <FromDiscord> <evoalg> I dunno what's expected, I just know Elegantbeef has been answering so many of my noob questions with nice examples
[10:23:49] <FromDiscord> <Rika> Sounds like I need to be home more
[10:24:12] <FromDiscord> <Elegantbeef> You act like you'd be rolling in money
[10:24:39] <FromDiscord> <evoalg> and I try and limit my noob questions to 2 per day ... but then answers raise more questions as usual üòâ
[10:24:46] <FromDiscord> <impbox [ftsf]> well the amount of time you spend helping people here, i figure you're either unemployed or about to get fired, so i figure you could use a tip jar
[10:25:05] <FromDiscord> <Rika> Beef: you don‚Äôt know how valuable even a dollar is to me lol
[10:25:07] <FromDiscord> <Elegantbeef> Damn imp is onto me
[10:25:17] <FromDiscord> <Elegantbeef> Well then pitter patter
[10:25:32] <FromDiscord> <impbox [ftsf]> unless beef is getting some of those donated cryptobucks for being our mascot
[10:25:46] <FromDiscord> <Elegantbeef> Sadly not
[10:25:51] <FromDiscord> <Rika> Lol
[10:26:05] <FromDiscord> <Elegantbeef> I'm unemployed, but not needing money
[10:26:40] <FromDiscord> <Rika> Imagine not needing money
[10:26:41] <FromDiscord> <Rika> MBN
[10:26:59] <FromDiscord> <impbox [ftsf]> ahh the glucose guardian
[10:27:08] <FromDiscord> <Rika> What
[10:27:51] <FromDiscord> <Elegantbeef> Probably an australianism
[10:29:41] <FromDiscord> <Elegantbeef> Seems to be gender neutral for someone that doesnt work and gets money from a SO
[10:30:05] <FromDiscord> <Rika> Eh
[10:30:11] <FromDiscord> <Rika> Do you have an SO? I don‚Äôt actually know
[10:30:17] <FromDiscord> <Elegantbeef> Nope
[10:33:24] <FromDiscord> <evoalg> I had to look at urban dictionary to find what SO stood for, geez I'm so out of touch with that sort of speak
[10:33:48] <FromDiscord> <Elegantbeef> Evoalg  outting that they're a 40 year old üòõ
[10:34:02] <FromDiscord> <evoalg> If I were only that young
[10:34:04] <FromDiscord> <Rika> Better than most, still willing to learn
[10:34:32] <FromDiscord> <evoalg> I'm 53
[10:34:41] <FromDiscord> <Elegantbeef> Of course, no one is to close to death to learn to program, i mean no one is too old to lear... i mean....
[10:35:15] <FromDiscord> <Elegantbeef> Is that joke too dark? Hmm i'll have to find a flash light to see
[10:35:30] <FromDiscord> <Rika> Didn‚Äôt know you were legally blind
[10:35:37] <FromDiscord> <Elegantbeef> Only occasionally
[10:36:31] <FromDiscord> <evoalg> ... and it's difficult to keep up with you youngsters
[10:36:45] <FromDiscord> <Rika> Yeah I‚Äôm under 25
[10:36:51] <FromDiscord> <Rika> Tehe
[10:36:53] <FromDiscord> <Elegantbeef> Just go get your cricket bat and cap us
[10:36:56] <FromDiscord> <Elegantbeef> It'll slow us down
[10:37:14] <FromDiscord> <Elegantbeef> I forget if Rika is younger than me
[10:37:20] <FromDiscord> <Rika> Quick, use very zoomer-level slang
[10:37:24] <FromDiscord> <Rika> Obviously
[10:37:31] <FromDiscord> <Elegantbeef> Nah i'm not a fucking degenerate
[10:37:36] <FromDiscord> <Rika> I am younger than basically everyone here
[10:37:45] <FromDiscord> <Rika> Yet older than most teenagers
[10:38:11] <FromDiscord> <Elegantbeef> "Obviously" is so rude
[10:38:44] <FromDiscord> <Elegantbeef> People often think i'm 30 cause of how i type, so that's always fun
[10:38:53] <FromDiscord> <impbox [ftsf]> slowly?
[10:39:00] <FromDiscord> <impbox [ftsf]> with one finger?
[10:39:14] <FromDiscord> <Elegantbeef> Impbox the person with RSI talking about typing slow?!
[10:39:23] <FromDiscord> <Rika> I meant it more like ‚Äúobviously‚Äù as in against me than against you
[10:39:25] <FromDiscord> <Elegantbeef> Jeez i'm surprised your hands let you type insults like that
[10:39:42] <FromDiscord> <Rika> I don‚Äôt think 30 year olds use single finger typing
[10:39:46] <FromDiscord> <Rika> I‚Äôd say some 40
[10:39:59] <FromDiscord> <Elegantbeef> Evoalg nervously looks around
[10:40:11] <FromDiscord> <Rika> I doubt he does use single finger typing
[10:40:14] <FromDiscord> <impbox [ftsf]> i thought it was the youngsters who can't type fast because they're used to touchscreens?
[10:40:18] <FromDiscord> <evoalg> I'm one of the few of my generation to touch type
[10:40:21] <FromDiscord> <Rika> Nice
[10:40:30] <FromDiscord> <Rika> In reply to @impbox "i thought it was": I guess?
[10:40:32] <FromDiscord> <impbox [ftsf]> typewriters have been around for a long time
[10:40:45] <FromDiscord> <Elegantbeef> For sure he probably learned to touch type on an commodore 64 or whatever the kiwi equivlent is
[10:40:51] <FromDiscord> <Rika> Though I assume you mean the way younger youngsters since most people I know touch type
[10:40:58] <FromDiscord> <impbox [ftsf]> i learnt to type on a typewriter as a kid
[10:41:06] <FromDiscord> <evoalg> I did have a commodore 64 actually
[10:41:10] <FromDiscord> <Rika> Me too even if I‚Äôm like under 20
[10:41:14] <FromDiscord> <impbox [ftsf]> but it was one of those fancy electronic typewriters
[10:41:20] <FromDiscord> <Rika> Rather 25, I‚Äôm not fucking under 20
[10:41:24] <FromDiscord> <Rika> Mistype
[10:41:32] <FromDiscord> <Elegantbeef> See rika we're not that far apart in age
[10:41:35] <FromDiscord> <Elegantbeef> I'm only 22
[10:41:36] <FromDiscord> <Rika> My brain is lagging behind my real age
[10:41:52] <FromDiscord> <impbox [ftsf]> so sleek https://media.discordapp.net/attachments/371759389889003532/908252670404464680/unknown.png
[10:41:55] <FromDiscord> <Rika> Beef I was sure you were like 27 or something Christ
[10:42:12] <FromDiscord> <Elegantbeef> See look what i saidd
[10:42:14] <FromDiscord> <Rika> Ah my grandfather had a real mechanical typewriter and I used it before
[10:42:20] <FromDiscord> <Elegantbeef> I type like an asshole apparently
[10:42:26] <FromDiscord> <impbox [ftsf]> yeah, i think we had a mechanical one too
[10:42:28] <FromDiscord> <Rika> Beef: what‚Äôs new?
[10:42:29] <FromDiscord> <Elegantbeef> Well typing like an asshole was a given
[10:42:30] <FromDiscord> <impbox [ftsf]> it made cool sounds
[10:42:36] <FromDiscord> <Rika> Exactly beef
[10:43:06] <FromDiscord> <Elegantbeef> One person said that "you're so jaded which is why you seem old"
[10:43:10] <FromDiscord> <Rika> They made cool sounds but you better have fingers made of lead to type anything more than a paragraph on them
[10:43:40] <FromDiscord> <Rika> Beef I guess your communication reflects more of the older generation than our own generation
[10:44:22] <FromDiscord> <Elegantbeef> Yea certainly
[10:44:45] <FromDiscord> <Rika> I bet I sound like my age though
[10:45:45] <FromDiscord> <Elegantbeef> If you mean a zoomer that uses tiktok unironically, probably üòõ
[10:46:16] <FromDiscord> <Rika> I don‚Äôt use tiktok what the fuck dude
[10:46:41] <FromDiscord> <impbox [ftsf]> but it's what all the cool kids are using these days?
[10:47:15] <FromDiscord> <impbox [ftsf]> maybe can do nim tutorials on tiktok
[10:47:25] <FromDiscord> <Elegantbeef> !ban @impbox [ftsf]
[10:47:41] <FromDiscord> <Rika> What the fuck
[10:47:44] <FromDiscord> <Rika> Heresy
[10:48:08] <FromDiscord> <Rika> In reply to @impbox "but it's what all": I mean I guess you can become big as an influencer or entertainer
[10:48:11] <FromDiscord> <Rika> With using it
[10:50:40] <FromDiscord> <Elegantbeef> evoalg's now reminiscing about making stuff using basic, we've lost them
[10:50:52] <FromDiscord> <impbox [ftsf]> those were good times
[10:51:19] <FromDiscord> <Elegantbeef> Wouldnt know, do want to get a commedore eventually though
[10:51:22] <FromDiscord> <Rika> What
[10:51:33] <FromDiscord> <evoalg> why?
[10:51:33] <FromDiscord> <Rika> Sorry I spaced out
[10:52:30] <FromDiscord> <impbox [ftsf]> dunno how we did programming without the internet back then
[10:52:46] <FromDiscord> <evoalg> books
[10:53:46] <FromDiscord> <Rika> I probably could program without internet given the documentation pages of Nim and libraries
[10:53:47] <FromDiscord> <impbox [ftsf]> mmm i somehow learnt qbasic using the help files and a few example scripts, though i never learn to how to return, so i'd always blow the stack and i thought it was just a limitation of qbasic and i needed to upgrade or something
[10:53:54] <FromDiscord> <Rika> In print or in file
[10:54:19] <FromDiscord> <evoalg> but although I've dabbled in bits & pieces, I've never been a serious programmer or anything, I've just sometimes used programming languages to do stuff occasionally ... I don't know much
[10:55:23] <FromDiscord> <Elegantbeef> How'd you stumble onto nim?
[10:55:47] <FromDiscord> <impbox [ftsf]> finally made it back on topic, nice
[10:57:01] <FromDiscord> <Rika> In reply to @evoalg "but although I've dabbled": Isn‚Äôt that pretty much everything programmers are? ‚ÄúI just wanted to do this automatically and then I became a programmer‚Äù xd
[10:57:03] <FromDiscord> <evoalg> ahhh well python is a natural fit as I don't have to think about it too much, but then I had some ideas about doing something more serious, and so I wanted speed but I also didn't want me code easily read, so I started reading about compiling (even though some of that can be reversed) and one of the things I read about was nim
[10:57:34] <FromDiscord> <Rika> Lol that‚Äôs one more on the ‚ÄúI looked for fast Python‚Äù boat
[10:57:47] <FromDiscord> <Elegantbeef> Ah python -\> nim path for fast automation
[10:58:27] <FromDiscord> <impbox [ftsf]> i used to do a lot of python at old job, i loved it at first (after coming from php eww)
[10:58:54] <FromDiscord> <evoalg> I mean I've never had a job as a programmer ... it's just a hobby, and so I don't know much, hence all my noob questions
[10:59:18] <FromDiscord> <Elegantbeef> hey it's technically a hobby for me aswell
[10:59:36] <FromDiscord> <impbox [ftsf]> it's better as a hobby
[10:59:44] <FromDiscord> <impbox [ftsf]> though as far as jobs go, it's probably pretty good
[11:00:48] <FromDiscord> <Rika> It gets ya the money if ya ain‚Äôt picky
[11:01:41] <FromDiscord> <evoalg> so if I wanted to solve some math thing, I'd automatically fire up ipython ... and if fact I'm going through last years advent of code (which I've never done before) and trying them in both python and nim ... to help me learn nim ... and comparing my answers with narimiran's answer on github
[11:02:58] <FromDiscord> <Elegantbeef> Well if you ever want a code review you know where to find me
[11:03:25] <FromDiscord> <evoalg> Thank you Elegantbeef!
[11:04:52] <FromDiscord> <evoalg> but it's natural for me to first play around in ipython, and at the moment it takes me much longer to do it in nim. I find that my programming is very bottom-up and non-functional, so my python solutions look pretty similar to my nim ones
[11:05:11] <FromDiscord> <Rika> Nothing wrong with that is there?
[11:06:53] <FromDiscord> <evoalg> while I'm sharing, my ultimate goal is to try and program AGI ... not machine learning (as I don't like that) but true AGI like the arc challenge https://www.kaggle.com/c/abstraction-and-reasoning-challenge
[11:07:00] <FromDiscord> <Yardanico> wow
[11:07:07] <FromDiscord> <Yardanico> that's a very nice life goal :)
[11:07:13] *** Quits: LyndsySimon (sid34452@lymington.irccloud.com) (Ping timeout: 256 seconds)
[11:07:38] <FromDiscord> <Yardanico> i hope to see AGI during my lifetime
[11:08:04] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[11:08:23] <FromDiscord> <Rika> AGI is very challenging isn‚Äôt it
[11:08:25] <FromDiscord> <evoalg> heh yea it's a pretty grand goal but it's the only think I'm interested in, and I don't believe that machine learning is the way forward (and I don't like it)
[11:08:40] <FromDiscord> <Rika> Well it clearly isn‚Äôt, there‚Äôs something missing to it
[11:09:04] <FromDiscord> <Yardanico> In reply to @Rika "Well it clearly isn‚Äôt,": 86 billion neurons with complex interactions
[11:09:23] <FromDiscord> <Yardanico> but of course simply copying the human brain might be far from the best way to do AGI
[11:09:29] <FromDiscord> <impbox [ftsf]> ahh AGI is different to what I thought
[11:09:33] <FromDiscord> <evoalg> the most interesting and intriguing thing about AGI is that we've made such little progress, and it'll take some real out-of-the-box thinking and anyone might be able to come up with, even me
[11:09:49] <FromDiscord> <impbox [ftsf]> https://en.wikipedia.org/wiki/Adventure_Game_Interpreter
[11:09:53] <FromDiscord> <Yardanico> we just don't know anything than a human brain that can have true intelligence
[11:09:55] <FromDiscord> <Yardanico> In reply to @impbox "https://en.wikipedia.org/wiki/Adventure_Game_Interp": lol
[11:10:00] <FromDiscord> <Rika> https://en.m.wikipedia.org/wiki/Artificial_general_intelligence
[11:10:13] <FromDiscord> <Rika> For the curious
[11:10:45] <FromDiscord> <impbox [ftsf]> ahh
[11:10:56] <FromDiscord> <impbox [ftsf]> close
[11:11:14] <FromDiscord> <evoalg> Yardanico I can tell you know what you're talking about ... most people think it's just around the corner and that Elon Musk will invent it
[11:11:37] <FromDiscord> <Yardanico> i don't know much, I just like to read sci-fi novels :P
[11:12:19] <FromDiscord> <Rika> In reply to @Yardanico "we just don't know": Then we don‚Äôt even know how it fucking works lol
[11:12:25] <FromDiscord> <Yardanico> exactly
[11:12:39] <FromDiscord> <evoalg> that's absolutely right
[11:13:39] <FromDiscord> <Rika> Think I‚Äôve thought a bit too much today, I‚Äôve been brainstorming hard for a few hours and I‚Äôm tired
[11:13:41] <FromDiscord> <Elegantbeef> I hope this doesnt mean evo is a musk fan üòõ
[11:13:54] <FromDiscord> <evoalg> no I am not!
[11:14:06] <FromDiscord> <Rika> Beef you are, bet
[11:14:21] <FromDiscord> <Elegantbeef> Do i have douche energy
[11:14:32] <FromDiscord> <Rika> You‚Äôre seriously asking that?
[11:14:42] <FromDiscord> <Elegantbeef> Hey self awareness is for losers
[11:14:43] <FromDiscord> <impbox [ftsf]> i used to think he was cool when i was younger =\ i am ashamed
[11:16:56] <FromDiscord> <Elegantbeef> It's ok, we all get sold snake oil once in our lives
[11:20:26] <FromDiscord> <evoalg> it's easy to get trapped down the path in machine learning with AlphaGo and big NN's, and there's a lot of money in it too actually, but I want to purposely take a path where it might be untravelled
[11:21:07] <FromDiscord> <Rika> That‚Äôs nice
[11:21:08] <FromDiscord> <Elegantbeef> The only thing i know about AI is that it's a bunch of ifstatements üòõ
[11:21:16] <FromDiscord> <Elegantbeef> Wait that's my game dev hat speaking
[11:21:38] <FromDiscord> <impbox [ftsf]> FSMs are the future of AI
[11:21:49] <FromDiscord> <Elegantbeef> See imp gets it
[11:22:06] <FromDiscord> <Rika> Well technically
[11:22:28] <FromDiscord> <Rika> Current AI could be said to be just some really complicated FSM can‚Äôt it lol
[11:23:25] <FromDiscord> <evoalg> true AI, which is AGI, it's more like a 3 month old has leaned things we haven't even come close to getting computers to learn
[11:24:25] <FromDiscord> <evoalg> they can already make abstract inferences that no computer program can (yet)
[11:24:53] <FromDiscord> <evoalg> yes they can't do times tables or even count properly
[11:25:03] <FromDiscord> <evoalg> fascinating stuff üôÇ
[11:25:24] <FromDiscord> <Elegantbeef> Do any know why children love the taste of cinnamon toast crunch?
[11:25:33] <FromDiscord> <impbox [ftsf]> i played around a bit with linear regression and stuff, pretty cool, and q learning seems fun
[11:25:47] <FromDiscord> <impbox [ftsf]> speaking of i need to improve my racing AI
[11:25:56] <FromDiscord> <impbox [ftsf]> currently it's just a couple of PID controllers
[11:30:37] *** Quits: ecs (ecs@user/ecs) (Read error: Connection reset by peer)
[11:30:44] *** Joins: ecs (ecs@user/ecs)
[11:32:57] <FromDiscord> <evoalg> A chess playing program is very cool, but in terms of true intelligence it's very dense. No-one has come close to creating the intelligence of a dog, for example.
[11:33:12] <FromDiscord> <evoalg> anyway I digress
[11:33:39] <FromDiscord> <evoalg> the point is, I'm not sure the python will be enough for my needs üòâ
[11:33:53] <FromDiscord> <Rika> It probably won‚Äôt lol
[11:34:03] <FromDiscord> <impbox [ftsf]> depends how long you want to wait
[11:34:12] <FromDiscord> <Rika> The fast stuff is in C and are for traditional machine learning
[11:34:13] <FromDiscord> <impbox [ftsf]> does AGI need to be fast?
[11:34:31] <FromDiscord> <evoalg> In reply to @impbox "does AGI need to": very good question
[11:34:38] <FromDiscord> <impbox [ftsf]> deep thought wasn't very fast
[11:34:39] <FromDiscord> <Rika> In reply to @impbox "does AGI need to": It probably has a lot of complex pieces that need to be fast for the whole thing to even be viable
[11:35:02] <FromDiscord> <Rika> Iterating every few days is agonising
[11:35:20] <FromDiscord> <Yardanico> playing around a bit more with wasm4 https://media.discordapp.net/attachments/371759389889003532/908266127317160027/unknown.png
[11:35:25] <FromDiscord> <impbox [ftsf]> nice
[11:35:45] <FromDiscord> <Elegantbeef> What're you using?
[11:35:48] <FromDiscord> <Yardanico> (i don't know how to properly color mandelbrot and I just used the code from rosetta) https://media.discordapp.net/attachments/371759389889003532/908266244711538709/unknown.png
[11:35:56] <FromDiscord> <Yardanico> @ElegantBeef https://wasm4.org/
[11:36:09] <FromDiscord> <Yardanico> yesterday dom referred me to a tweet by contextfree about wasm4 for nim
[11:36:12] <FromDiscord> <Elegantbeef> Ah didnt realize it was a fantasy console
[11:36:30] <FromDiscord> <Elegantbeef> wasm4 + nimscript üòõ
[11:36:37] <FromDiscord> <Yardanico> 64KB hard binary limit :)
[11:36:41] <FromDiscord> <Yardanico> and total memory limit
[11:36:48] <FromDiscord> <Elegantbeef> Ah shucks
[11:36:50] <FromDiscord> <Yardanico> so only native languages qualify
[11:36:51] <FromDiscord> <impbox [ftsf]> yeah the name is a bit misleading
[11:37:03] <FromDiscord> <Rika> The limit is only for fun right
[11:37:16] <FromDiscord> <Yardanico> not sure what you mean
[11:37:21] <FromDiscord> <impbox [ftsf]> fantasy consoles are serious business
[11:37:24] <FromDiscord> <Yardanico> the binary limit - yes, it's not actually enforced unless you want to publish
[11:37:27] <FromDiscord> <Yardanico> but memory limit is enforced
[11:37:29] <FromDiscord> <Rika> For no real reason but to be there
[11:37:32] <FromDiscord> <Yardanico> yes
[11:37:41] <FromDiscord> <Rika> Okay I see
[11:37:44] <FromDiscord> <impbox [ftsf]> limitations to push creativity
[11:37:47] <FromDiscord> <Yardanico> you can allocate gigabytes of RAM with wasm and have binaries the size of tens of MBs
[11:38:11] <FromDiscord> <Yardanico> but yeah, with WASI SDK and wasm-opt nim wasm binaries are really small (almost same as C)
[11:38:16] <FromDiscord> <Yardanico> if you don't allocate memory of course :)
[11:38:33] <FromDiscord> <Yardanico> WASI uses dlmalloc for memory allocation so that's +9KB to your binary (after all optimizations)
[11:38:44] <FromDiscord> <Yardanico> i mean heap allocations
[12:05:04] *** Quits: riceman_ (~riceman_@24.148.81.91) (Ping timeout: 256 seconds)
[12:06:21] <FromDiscord> <evoalg> In reply to @Elegantbeef "To be fair rika": If it's a personal module, would an include file be just as good? I'm trying understand what's the advantage of a module if it's just a personal one, or are modules intended to be shared?
[12:08:15] <FromDiscord> <Elegantbeef> Include has different semantics if that's what you're talking about
[12:08:20] <FromDiscord> <Rika> Yes
[12:08:25] <FromDiscord> <Rika> It ‚Äúduplicates code‚Äù
[12:08:32] <FromDiscord> <Rika> If you include the same module in two other files
[12:08:50] <FromDiscord> <impbox> as to why you'd choose one over the other... i dunno, i just put all my code in one file mostly
[12:08:51] <FromDiscord> <Rika> You can‚Äôt use that module‚Äôs types to pass data to other files
[12:09:01] <FromDiscord> <Rika> Most people opt for imports because it‚Äôs just what‚Äôs recommende
[12:09:02] <FromDiscord> <Rika> S
[12:09:07] <FromDiscord> <Rika> In reply to @Rika "S": D
[12:09:11] <FromDiscord> <impbox> yeah, i use import when i split things up
[12:09:23] <FromDiscord> <Rika> Include is really for special cases
[12:09:24] <FromDiscord> <Elegantbeef> Well imports let you actually use modules, include is just splitting large files up and it's generally bad form
[12:09:56] <FromDiscord> <Rika> ‚ÄúActually use modules‚Äù is vague
[12:10:16] <FromDiscord> <impbox> include feels like C, and that's probably my most hated bit of C
[12:10:18] <FromDiscord> <Elegantbeef> Well include copy pastes the file into the `include` site so things like `yourModule.name` doesnt work
[12:10:43] <FromDiscord> <Rika> But basically if you include A in two files B and C, you can‚Äôt use A‚Äôs types included in B with functions that take in A‚Äôs types included in C
[12:11:01] <FromDiscord> <Rika> Since it‚Äôs just copy paste, there are two types named the same but are actually different
[12:12:21] <FromDiscord> <Rika> It‚Äôs functionally equivalent to defining the same types in module B and C, sure they‚Äôre the same name and the same data, but since they‚Äôre in different modules, they‚Äôre treated differently
[12:12:37] <FromDiscord> <Rika> And then including both B and C into a file D would probably cause an error
[12:12:50] <FromDiscord> <Rika> Also you don‚Äôt get access modifiers this way afaik
[12:13:18] <FromDiscord> <impbox> yeah, they're considered local to that file
[12:13:18] <FromDiscord> <Rika> There‚Äôs just a lot of generally undesirable behaviour in including
[12:14:39] *** Joins: neurocyte0132889 (~neurocyte@45.131.36.189)
[12:14:39] *** Quits: neurocyte0132889 (~neurocyte@45.131.36.189) (Changing host)
[12:14:39] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[12:15:16] <FromDiscord> <evoalg> so if I write a proc that depends on strutils (for example), and I import my file instead of include it, I'd also have to import strutils? (if I'm making sense)
[12:15:38] <FromDiscord> <Rika> Yes since imports do not implicitly transfer
[12:16:12] <FromDiscord> <Rika> You can either import again in the importing file or `export strutils` in the imported file
[12:16:42] <FromDiscord> <evoalg> oh I didn't know about export
[12:16:47] <FromDiscord> <Rika> Which you use is up to you
[12:16:59] <FromDiscord> <Rika> Most prefer importing again
[12:17:05] <FromDiscord> <Elegantbeef> Well if a proc depends on strutils you do not need to import strutils‚Üµ(@evoalg)
[12:17:06] <FromDiscord> <Rika> A few prefer the export
[12:17:22] <FromDiscord> <Rika> In reply to @Elegantbeef "Well if a proc": But if a type does then you would need to
[12:17:26] <FromDiscord> <Rika> I misread
[12:17:57] <FromDiscord> <Elegantbeef> You can use `export` for all symbols so `proc` `module` `var/let/const`s...
[12:18:09] <FromDiscord> <impbox> think of include as saying "paste this file here", that's pretty much all it is
[12:18:15] <FromDiscord> <impbox> but usually it's not what you want
[12:18:23] <FromDiscord> <impbox> import is much cnier
[12:18:26] <FromDiscord> <impbox> nicer\
[12:18:53] <FromDiscord> <Rika> It‚Äôs hard to explain when to export
[12:19:02] <FromDiscord> <Rika> But you don‚Äôt need to if only your procs need the module
[12:19:28] <FromDiscord> <evoalg> when I import something that's in nimble, like strutils, I never have to import anything that it might rely on (which it good)
[12:19:34] <FromDiscord> <Rika> Yes
[12:20:08] <FromDiscord> <Rika> Sometimes it does expose to you things that you might need to rely on for ergonomics
[12:20:47] <FromDiscord> <Rika> Like let‚Äôs say I have a module ‚Äújson‚Äù and I have it split into stuff like ‚Äúparser‚Äù and ‚Äúserialiser‚Äù files or so
[12:21:05] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 264 seconds)
[12:21:05] <FromDiscord> <Rika> I don‚Äôt want to import json/parser and json/serialiser all the time or whatever
[12:21:16] <FromDiscord> <Rika> So you can just make the json module file export those two
[12:21:25] <FromDiscord> <Rika> Now you just need to import json and you have both
[12:21:35] <FromDiscord> <Rika> Without including
[12:21:39] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[12:21:49] <FromDiscord> <Rika> Because including has caveats while export generally doesn‚Äôt
[12:21:53] *** Joins: pro (~pro@user/pro)
[12:22:13] <FromDiscord> <Rika> Or rather, including has more caveats than edporting
[12:22:15] <FromDiscord> <Rika> Exporting
[12:23:34] <FromDiscord> <Rika> It‚Äôs for convenience is the gist I guess
[12:23:54] <FromDiscord> <Rika> So you don‚Äôt need to keep on importing common modules you would need for a portion of your system
[12:24:24] <FromDiscord> <Rika> If you have a database module I don‚Äôt want to keep on importing certain files every time so I collate all module imports and export them in a common database module file
[12:25:18] <FromDiscord> <evoalg> Nice thank you Rika. I can put personal procs I've made into a file and import them (as long as I use the  in the right places), but when would I put them into a github module like ElegantBeef did with slicterator ?
[12:25:36] <FromDiscord> <Elegantbeef> When you want to easily distribute them
[12:25:59] <FromDiscord> <Rika> If you want to share üòõ
[12:26:04] *** Joins: PMunch (~PMunch@user/pmunch)
[12:26:11] <FromDiscord> <Elegantbeef> Well or want to easily develop/depend on it üòÄ
[12:26:19] <FromDiscord> <evoalg> nice I understand (or I'm starting to)
[12:26:24] <FromDiscord> <Rika> You don‚Äôt need to put it in GitHub for that
[12:26:37] <FromDiscord> <Rika> Could just make it a local git repo
[12:27:19] <FromDiscord> <evoalg> I'll try and keep things simple for as long as I can üòâ
[12:27:37] <FromDiscord> <Rika> Whatever floats your boat I guess
[12:27:45] <FromDiscord> <Rika> I tend to do as complex as I can handle to learn stuff
[12:29:19] <FromDiscord> <evoalg> hehe this is just a bit overwhelming ... but yea I was all intent on splitting code and using includes, but now I'll use imports, and for large bits of code I can fold it away (something I've never used before if you can believe it)
[12:29:36] <FromDiscord> <evoalg> (I've never used folds before neovim)
[12:32:42] <FromDiscord> <Rika> Most people haven‚Äôt used it afaik
[12:33:03] <FromDiscord> <Elegantbeef> You can fold code?! üòõ
[12:33:18] <FromDiscord> <Elegantbeef> I dont tend to fold code unless i'm debugging and need to really clear my mind
[12:34:28] <FromDiscord> <Rika> I tend to fold code when it is larger than a few lines
[12:34:32] <FromDiscord> <Rika> Let‚Äôs say 20
[12:34:51] <PMunch> I tend to fold mine into nice little paper crane
[12:34:51] <FromDiscord> <impbox> i usually find folding more annoying than not using it
[12:35:06] <FromDiscord> <Elegantbeef> Dont lie pmunch, i've seen your code üòõ
[12:35:17] <PMunch> Hehe
[12:35:47] *** Quits: notchris (sid181145@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[12:35:59] <FromDiscord> <evoalg> I don't know why I'm laughing so much at that, I must be tired
[12:36:07] <FromDiscord> <Rika> Folding gets useful when you‚Äôre at a few thousand lines really
[12:36:14] <FromDiscord> <Rika> It‚Äôs pretty funny
[12:36:30] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[12:36:43] <FromDiscord> <Elegantbeef> I'm a fantastic comedian, atleast people laugh at my face
[12:37:18] <PMunch> That's true comedy, making people laugh without even opening your mouth
[12:39:58] <FromDiscord> <impbox> image.png https://media.discordapp.net/attachments/371759389889003532/908282393679499284/image.png
[12:40:04] <FromDiscord> <impbox> i do like this kind of thing to help me navigate around
[12:40:18] <FromDiscord> <Elegantbeef> You dont like const blocks do you?
[12:40:22] <FromDiscord> <impbox> i find it more helpful than folding
[12:40:27] <FromDiscord> <Rika> Or import blocks
[12:40:35] <FromDiscord> <impbox> i should get into the habit of using blocks for things
[12:40:37] <FromDiscord> <impbox> i just never think of it
[12:40:58] <FromDiscord> <Rika> Thankfully it‚Äôs easy if they‚Äôre in a line like that
[12:41:26] <FromDiscord> <Rika> Just put the first one in a new line then replace every other occurrence of ‚Äúconst‚Äù with a space
[12:41:27] <FromDiscord> <impbox> i guess i just duplicate line and change
[12:41:48] <FromDiscord> <Rika> Ah I guess the multi line ones need an indent too
[12:41:48] <FromDiscord> <Elegantbeef> Let's bike shed about other stuff!
[12:42:05] <FromDiscord> <Rika> Use an enum for those sfx values smh
[12:42:32] <FromDiscord> <Rika> Etc hehe
[12:42:33] <FromDiscord> <impbox> mmm i did use an enum in the past with a converter
[12:42:39] <FromDiscord> <impbox> i forget why it switched to consts
[12:42:41] <FromDiscord> <Rika> You do it beef I‚Äôm mentally dead
[12:42:51] <FromDiscord> <Elegantbeef> you dont need a converter, you just do it `$yourEnum`
[12:43:17] <FromDiscord> <impbox> i'm passing them to procs that take an int
[12:43:30] <FromDiscord> <Rika> Then just make it take an enum instead hehe
[12:43:31] <PMunch> Then `.int` them?
[12:43:35] <PMunch> Or that :P
[12:43:36] <FromDiscord> <Rika> If you can‚Äôt use ord
[12:43:43] <FromDiscord> <Elegantbeef> using `self` for all your procedures!
[12:43:46] <FromDiscord> <impbox> the procs are in another module
[12:43:49] <FromDiscord> <Elegantbeef> That's a paddlin
[12:43:56] <FromDiscord> <Rika> Self is fine IMO but I don‚Äôt like it
[12:44:19] <FromDiscord> <Elegantbeef> i prefer `thisFuckingInstanceIsItself`
[12:44:21] <PMunch> I kinda like self when code is organised like this. Makes it more obvious what's going on, same as `result` in a way
[12:44:23] <FromDiscord> <impbox> my sidebar thing uses `self` to know which type to associate it with
[12:44:49] <FromDiscord> <impbox> so i can easily look up functions by their main type
[12:44:52] <FromDiscord> <Elegantbeef> I prefer a slightly more informative variable but to each their own
[12:45:03] * PMunch looking at newIngredient
[12:45:06] <FromDiscord> <impbox> eg `draw(cat: Cat)` ?
[12:45:12] <FromDiscord> <Elegantbeef> Hell yea!
[12:45:59] <FromDiscord> <Rika> In reply to @impbox "my sidebar thing uses": The main type is always the first one though?
[12:46:03] <NimEventer> New thread by Markspanbroek: Dot-like operations and calls, see https://forum.nim-lang.org/t/8610
[12:46:11] <FromDiscord> <impbox> yeah it has special cases for `new` and `init` based on their return type
[12:46:25] <FromDiscord> <impbox> @Rika\: not always
[12:46:49] <FromDiscord> <Rika> Then those procs are wrong smh
[12:46:55] <FromDiscord> <Rika> I kid, example?
[12:47:24] <FromDiscord> <impbox> hmm i forget, but i'm sure i encounter them from time to time and get annoyed
[12:47:35] <FromDiscord> <impbox> in think mostly from stdlib
[12:48:04] <FromDiscord> <impbox> or maybe i'm just tripping
[12:49:48] <FromDiscord> <impbox> ohh that's the reason it's using self not first argument, sometimes it shouldn't be linked to the type of the first argument
[12:50:11] <FromDiscord> <impbox> eg. `gameUpdate(dt: float32)` shouldn't be listed under float32
[12:50:14] <FromDiscord> <Rika> Ah I can see that
[12:50:50] <FromDiscord> <impbox> `proc drawTextBubble(origin: Vec2i, text: string, color: int, offset = vec2i(0,-4), bg = 7, step = -1) =`‚Üµand shouldn't be listed under `Vec2i`
[12:51:19] <FromDiscord> <impbox> by making the ones that should be listed under their type use `self` it knows how to display them in a nice way
[12:53:05] <FromDiscord> <Rika> Well I guess I would name it the same as my type so ‚Äúcontainer: Container‚Äù
[12:53:13] <FromDiscord> <Rika> So that would be what I would use to group with
[12:53:34] <PMunch> Aah I see, that's actually pretty clever. Can we get this for the official documentation as well? :P
[12:53:52] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Read error: No route to host)
[12:53:52] <FromDiscord> <impbox> it's such a pain finding which procs are for which type
[12:53:56] <FromDiscord> <impbox> though less useful for generics
[12:53:59] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[12:54:12] <FromDiscord> <impbox> @Rika\: could probably be done, though the regex would be even more messy \>\_\<
[12:54:26] <FromDiscord> <Rika> Wouldn‚Äôt be regular anymore
[12:54:28] <FromDiscord> <Elegantbeef> Well i feel like it's subjective, but using a pragma might be more appropriate
[12:55:02] <FromDiscord> <impbox> i want it to not be invasive, other than the kind of naming i'd use anyway
[12:55:31] <FromDiscord> <Rika> Ngl would say the pragma would look ugly as fuuuuck
[12:55:39] <FromDiscord> <Elegantbeef> Like the docgen could look for a `{.self: paramName.}` then attach that procedure  to that type in a nice list, given we have free standing procedures
[12:55:56] <FromDiscord> <Elegantbeef> I dont deny it
[12:56:23] <FromDiscord> <impbox> maybe something in the doccoments
[12:56:38] <FromDiscord> <impbox> `## listUnder:string`
[12:57:12] <FromDiscord> <Rika> Ngl kinda feel we need a more structured doc comment scheme
[12:57:16] <FromDiscord> <Rika> Would be easier for tooling
[12:57:28] <PMunch> Oh please god no
[12:57:39] <FromDiscord> <Rika> No I don‚Äôt mean the shitty one
[12:57:45] <FromDiscord> <Rika> You know not like javadoc or whatever
[12:57:54] <FromDiscord> <Rika> Something much nicer whilst still being structured
[12:57:56] <PMunch> Structured doc comments are such a pain. People never do them properly, and then they drift away from what they're documenting which just makes matters worse..
[12:58:39] <FromDiscord> <Rika> I see
[12:59:01] <FromDiscord> <Rika> Maybe structured things should be either a pragma or macro I guess
[12:59:15] <PMunch> What I would like though is argument references. So you can do things like "Argument `myarg` takes a value to be printed" and the compiler will complain if you rename `myarg` without renaming it in your documentation
[12:59:48] <FromDiscord> <Rika> Eh
[13:17:27] *** Quits: mjsir911 (~bnc@user/mjsir911) (Quit: Goodbye, World!)
[13:18:25] *** Joins: mjsir911 (~bnc@user/mjsir911)
[13:27:54] *** Quits: pch (~pch@66.49.131.33) (Remote host closed the connection)
[13:28:12] *** Joins: pch (~pch@66.49.131.33)
[15:04:11] *** Joins: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de)
[15:06:16] <PMunch> Is `repr` broken in 1.6.0?
[15:06:18] <PMunch> Error: ambiguous call; both repr_v2.repr(x: uint64) [proc declared in /home/peter/.choosenim/toolchains/nim-1.6.0/lib/system/repr_v2.nim(19, 6)] and repr_v2.repr(x: ref T or ptr T) [proc declared in /home/peter/.choosenim/toolchains/nim-1.6.0/lib/system/repr_v2.nim(133, 6)] match for: (uint16)
[15:21:26] <FromDiscord> <Rika> Why do those match what
[15:26:04] <PMunch> Beats me
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:08:21] <FromDiscord> <hmmm> hai nimblets I finally finished my small utility that connects to the web takes some data, does some google level magic calculation and spits out data in csv or html form. Now I kind of want to put this thing on some thingy-like server and execute it every hour. What is the most for dummies way of doing it for a dude that never touched web in his life? Possibly using nim since I hate every single lang out there except python
[16:09:15] <FromDiscord> <Rika> uh
[16:09:19] <FromDiscord> <Rika> good luck
[16:09:25] <FromDiscord> <hmmm> ha!
[16:09:34] <FromDiscord> <Rika> i can think of a few ways but its kinda
[16:09:36] <FromDiscord> <Rika> lol
[16:09:38] <FromDiscord> <Rika> not easy
[16:09:43] <FromDiscord> <hmmm> I knew it was impossible üòí
[16:09:48] <FromDiscord> <Rika> its not
[16:09:56] <FromDiscord> <Rika> oh maybe you can use heroku
[16:09:59] <FromDiscord> <Rika> not that i know how to
[16:10:01] <FromDiscord> <Rika> but its an option
[16:10:59] <FromDiscord> <hmmm> I do not like the not easy implication ü§î
[16:11:45] <FromDiscord> <hmmm> heroku seems ovekill tbh üò¨
[16:15:37] <FromDiscord> <Rika> where do you want to run this then
[16:15:41] <FromDiscord> <Rika> on your desktop?
[16:15:44] <FromDiscord> <Rika> or like on a webserver
[16:15:49] <FromDiscord> <Rika> because that was not clear to me
[16:16:06] <FromDiscord> <Rika> if its not on your desktop then its not getting any simpler than heroku i would say
[16:17:31] <FromDiscord> <hmmm> well I can, but I should leave the desktop up, I wanted to put this crap on a serverthingy if it wasn't an enormous hassle, even a raspberry thingy I think
[16:20:21] <FromDiscord> <Rika> well i guess it can be simple as uh
[16:20:24] <FromDiscord> <Rika> boot raspi
[16:20:26] <FromDiscord> <Rika> put program
[16:20:28] <FromDiscord> <Rika> make crontab
[16:20:30] <FromDiscord> <Rika> done
[16:20:38] <NimEventer> New thread by Oyster: When will nimble be ready for new/nightly nim?, see https://forum.nim-lang.org/t/8611
[16:20:55] <FromDiscord> <Rika> does this program have a webserver
[16:21:14] <FromDiscord> <hmmm> that's what I want rika, but can people other than me access it?
[16:21:29] <FromDiscord> <Rika> In reply to @Rika "does this program have": i asked that
[16:21:32] <FromDiscord> <Rika> so you want it to do that
[16:21:44] <FromDiscord> <hmmm> yea
[16:21:49] <FromDiscord> <Rika> you're gonna have a hell of a time then i would say, if you dont want to try heroku
[16:23:16] <FromDiscord> <Rika> sent a long message, see https://paste.rs/Y5w
[16:23:32] <FromDiscord> <Rika> (afaik most ISPs are using cgnat?)
[16:26:17] <FromDiscord> <hmmm> money is not a problem in general but still if the data served is minimal and the usecase is minimal too I expect to find a solution with appropriate costs, otherwise I can just call someone and pay him to do it for me. Since it's just an hobby project I wanted to DIY
[16:27:09] <FromDiscord> <Rika> i assume its a very cpu-lax program so its prolly gonna cost like idk 2 dollars a month if you try hard to look for the provider
[16:27:21] <FromDiscord> <Rika> (for bare metal, i mean)
[16:27:29] <FromDiscord> <Rika> im no pro at managed providers so i dont know their pricing
[16:27:42] <FromDiscord> <Rika> but they tend to bill per every single factor you can think of
[16:27:55] <FromDiscord> <hmmm> ye like 50$ year are not a problem lol, but if it's an hassle to do it, it is
[16:28:05] <FromDiscord> <Rika> (think money per data uploaded to user)
[16:28:28] <FromDiscord> <Rika> my internet is slow, im downloading a windows iso
[16:38:24] <FromDiscord> <Rika> well idk why do you think heroku is overkill
[16:44:36] <FromDiscord> <hmmm> don't know, I went to the site and seemed like something a small business would use, there is a get started guide and it seems to imply I need to use python/django
[16:44:53] <FromDiscord> <Rika> no you do not
[16:45:02] <FromDiscord> <Rika> many individuals use heroku
[16:45:32] <FromDiscord> <Rika> bare metal servers are even more "something a small business would use"
[16:47:06] <FromDiscord> <Benjamin> By 'bare metal,' do you mean a dedicated server or VPS?
[16:48:26] <FromDiscord> <Rika> perhaps it is the wrong word, i mean unmanaged
[16:52:59] <FromDiscord> <Benjamin> AlphaVPS is the cheapest VPS provider I know if you need a decent amount of space and have low RAM and CPU requirements\: https://alphavps.com/storage-vps.html
[16:54:27] <PMunch> The more I think about this the more I appreciate my server at the university..
[16:58:20] <FromDiscord> <dom96> Why? VPS' are awesome
[17:01:12] <PMunch> Well what I have is a VPS, but I know the people who run the underlying servers so I can get them to fix things (or get the keys to the castle and fix them myself). And maybe best of all, I don't pay for it :P
[17:02:41] <FromDiscord> <Rika> pay
[17:03:12] <PMunch> Huh?
[17:03:17] <FromDiscord> <Rika> uh
[17:03:21] <FromDiscord> <Rika> my internet fucked itself
[17:03:49] <FromDiscord> <Rika> i was gonna say the pay part but only one of the messages (the correction) seems to have sent
[17:04:19] <PMunch> Hmm, on IRC it just looks like you wrote the word "pay"
[17:04:56] <FromDiscord> <Rika> i know
[17:05:01] <FromDiscord> <Rika> discord didnt send my other message
[17:07:20] *** Joins: rockcavera (~rc@192.12.114.204)
[17:07:21] *** Quits: rockcavera (~rc@192.12.114.204) (Changing host)
[17:07:21] *** Joins: rockcavera (~rc@user/rockcavera)
[17:10:50] *** Quits: ormiret (sid314108@lymington.irccloud.com) (Ping timeout: 260 seconds)
[17:10:51] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Read error: Network is unreachable)
[17:10:57] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Read error: Connection reset by peer)
[17:11:01] *** Quits: euantorano (sid180289@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[17:12:28] *** Joins: robertmeta_ (sid514@user/robertmeta)
[17:12:30] *** Quits: robertmeta (sid514@user/robertmeta) (Ping timeout: 268 seconds)
[17:12:31] *** robertmeta_ is now known as robertmeta
[17:12:49] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[17:13:04] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[17:13:31] *** Joins: euantorano (sid180289@2a03:5180:f:1::2:c041)
[17:13:35] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[17:13:42] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[17:17:40] *** Joins: rockcavera (~rc@192.12.114.204)
[17:17:41] *** Quits: rockcavera (~rc@192.12.114.204) (Changing host)
[17:17:41] *** Joins: rockcavera (~rc@user/rockcavera)
[17:25:44] *** Joins: arkurious (~arkurious@user/arkurious)
[17:29:04] *** Quits: oddish (~oddish@2a01:4f8:1c1c:a9da::1) (Quit: nyaa~)
[17:32:45] <NimEventer> New thread by Deech: How do I inject a NimNode directly instead of going through a macro or template?, see https://forum.nim-lang.org/t/8612
[17:47:26] *** Quits: robertmeta (sid514@user/robertmeta) (Ping timeout: 250 seconds)
[17:47:32] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[17:48:02] *** Quits: euantorano (sid180289@2a03:5180:f:1::2:c041) (Ping timeout: 240 seconds)
[17:49:10] *** Quits: ormiret (sid314108@id-314108.lymington.irccloud.com) (Ping timeout: 250 seconds)
[17:49:36] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 250 seconds)
[17:52:58] *** Joins: euantorano (sid180289@helmsley.irccloud.com)
[17:53:21] *** Joins: LyndsySimon (sid34452@lymington.irccloud.com)
[17:53:24] *** Joins: robertmeta (sid514@user/robertmeta)
[17:53:44] *** Joins: ormiret (sid314108@lymington.irccloud.com)
[18:04:09] *** Joins: notchris (sid181145@hampstead.irccloud.com)
[18:05:38] *** Joins: SebastianM (~Sebastian@user/sebastianm)
[18:08:07] <SebastianM> Hi, is there a way to pass to function variable number of keyword arguments? Like in python **kwargs?
[18:08:57] *** Quits: SebastianM (~Sebastian@user/sebastianm) (Client Quit)
[18:10:35] <FromDiscord> <dom96> don't think so, you'd need a macro
[18:10:49] <FromDiscord> <dom96> we have `varargs` but no equivalent for kw args. Could be a nice addition
[18:12:04] <PMunch> What does kwargs do differently from varargs?
[18:13:58] *** Joins: SebastianM (~seba@user/sebastianm)
[18:18:03] <SebastianM> @dom96 Thank you 
[18:20:36] <SebastianM> @PMunch I just wanted to fire up function with f(name="Seba", lang="Nim") and get it like varargs
[18:20:55] <PMunch> Aah I see
[18:21:06] <PMunch> No that has to be a macro as dom said
[18:21:17] <PMunch> You might just want to pass it a tuple though..
[18:21:29] <PMunch> Or you know, name your arguments properly :P
[18:27:48] <SebastianM> @PMunch I'll check the tuple way. Thank you
[18:28:27] <PMunch> Hmm, it won't really do what you want though I think
[18:29:03] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.3)
[18:32:02] <FromDiscord> <dom96> proc f(data: (string, string)) = ...; f({"name": "Seba", "lang": "Nim"})
[18:32:12] <FromDiscord> <dom96> that's another option since Nim supports this syntax for tuples
[18:36:27] <SebastianM> @dom96 Haven't though about that. Thank you once again
[18:38:41] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[19:37:29] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[19:47:03] *** Joins: riceman_ (~riceman_@24.148.81.91)
[19:47:18] *** Quits: riceman_ (~riceman_@24.148.81.91) (Client Quit)
[20:00:18] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[20:05:04] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3EHO
[20:06:11] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[20:07:09] *** Joins: xet7 (~xet7@user/xet7)
[20:08:53] *** Joins: krux02_ (~krux02@p200300e81724fa00df6adfc8535a5cf3.dip0.t-ipconnect.de)
[20:10:12] *** Joins: Vladar (~Vladar@46.162.2.53)
[20:10:55] *** Joins: krux02__ (~krux02@p200300e817262300cdc0f08beefdcb79.dip0.t-ipconnect.de)
[20:11:29] *** Quits: krux02 (~krux02@p200300e817076e0044b6cdb56690220d.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[20:13:27] *** Quits: krux02_ (~krux02@p200300e81724fa00df6adfc8535a5cf3.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:16:29] *** Quits: krux02__ (~krux02@p200300e817262300cdc0f08beefdcb79.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:21:00] *** Joins: krux02 (~krux02@p54932086.dip0.t-ipconnect.de)
[20:32:48] <FromDiscord> <demotomohiro> `rand` proc in your code reads and modify same variable in random module.
[20:36:27] <FromDiscord> <demotomohiro> Create `Rand` with `initRand()` in each thread and use it.
[20:36:51] <FromDiscord> <Rika> they mean that the code compiles but should not
[20:52:33] <FromDiscord> <demotomohiro> Nim forbids threads sharing heap memory, but allows writing a same global variable...
[20:59:19] <Amun-Ra> Pragma mismatch: got '{.locks: 0.}', but expected '{.locks: 0.}'.
[20:59:25] <Amun-Ra> I love these kinds of errors
[21:01:01] <nrds> <06Prestige99> Was that the whole error?
[21:02:00] <Amun-Ra> {.gcsafe, locks: 0.} vs {.closure, gcsafe, locks: 0.}
[21:02:10] *** Joins: neurocyte0132889 (~neurocyte@45.131.36.189)
[21:02:10] *** Quits: neurocyte0132889 (~neurocyte@45.131.36.189) (Changing host)
[21:02:10] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[21:02:19] <nrds> <06Prestige99> The erorr is probably about closure
[21:02:31] <nrds> <06Prestige99> error*
[21:04:25] <Amun-Ra> yes, I removed raise of ValueError with "not yet implemented" and it worked ;>
[21:16:04] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[21:36:48] <FromDiscord> <dom96> In reply to @reilly "Shouldn't this code be": don't you get a warning for this?
[21:37:20] <FromDiscord> <Rika> i tried it, you dont
[21:41:29] <FromDiscord> <dom96> Oh. You only get the gc safety warnings when it‚Äôs a ref
[21:54:50] <FromDiscord> <LilTuxie> why can't I convert a BigInt to int32? I tried it with this and it doesn't work. `int32(BigInt.pow(int32) mod int32)`
[21:55:12] <FromDiscord> <LilTuxie> (replaced variables with their types)
[21:56:37] <FromDiscord> <konsumlamm> it would have to be builtin for that syntax to work
[21:57:02] <FromDiscord> <konsumlamm> and in general, you don't know if it would fit into 32 bits
[21:58:16] <FromDiscord> <LilTuxie> it will because  `mod int32`  can't be more than 32 bits
[21:58:34] <FromDiscord> <LilTuxie> so is there a way to make it work?
[22:00:10] <FromDiscord> <konsumlamm> apart from the fact that you can't do `x mod int32`, the compiler doesn't know that
[22:01:55] <FromDiscord> <konsumlamm> you could convert it to a string and then parse that, but that's an ugly hack
[22:03:17] <FromDiscord> <LilTuxie> i'd rather not do that. I'll just convert my functions argument from int32 to BigInt
[22:12:37] <Amun-Ra> what would mod int32 even mean?
[22:15:29] <FromDiscord> <konsumlamm> `mod (int32.high.uint32 + 1)` presumably
[22:16:23] <FromDiscord> <konsumlamm> tl;dr seems there is no function to turn a `BigInt` into some standard int, you may wanna open an issue about that
[22:18:02] *** Joins: PMunch (~PMunch@user/pmunch)
[22:19:16] <FromDiscord> <konsumlamm> a conversion could also just cut off the higher bit, so the modulo operation wouldn't even be necessary
[22:28:07] <FromDiscord> <Rika> he said `(replaced variables with their types)`
[22:28:34] <FromDiscord> <Rika> so `int32(<BigInt>.pow(<int32>) mod <int32>)`
[22:57:41] <FromDiscord> <reilly> In reply to @dom96 "Oh. You only get": Shouldn't this still be unsafe though?
[23:00:00] <FromDiscord> <Recruit_main707> its a race condition, its not unsafe perse is it?
[23:05:07] <FromDiscord> <dom96> In reply to @reilly "Shouldn't this still be": Might be worth starting a discussion about it on the forum
[23:06:45] <FromDiscord> <Recruit_main707> what should the warning be, and how easy it would be to implement it
[23:14:25] <FromDiscord> <reilly> Well, I imagine that practically speaking, reading/writing to an integer is fast enough that the likelihood of a race condition is very very low... but not zero. Maybe give us a compiler warning, but let us disable it with a pragma as a way of saying "I understand there is a small risk, now do as I say!"
[23:15:06] <FromDiscord> <Recruit_main707> if its a warning you dont need a flag since it will compile it anyways
[23:15:10] <FromDiscord> <konsumlamm> i think the main problem is not that two writes might happen at exactly the same time
[23:15:31] <FromDiscord> <konsumlamm> but rather that functions use old values of the variables
[23:16:13] <FromDiscord> <konsumlamm> e..g. if you have n threads that all add 1 to some variable (that is initially 0), the end result is not necessarily n
[23:19:11] <FromDiscord> <konsumlamm> "i understand there is a small risk" doesn't sound like you really understand tbh (a bug that only has a small chance of occuring is even worse), the point of such a pragma would be "i'm sure this is safe, eventhough the compiler doesn't know"
[23:33:45] <FromDiscord> <reilly> sent a long message, see http://ix.io/3EJ2
[23:33:50] *** Joins: kenran (~kenran@200116b82b539f00f3f309ebb0e24d35.dip.versatel-1u1.de)
[23:52:22] *** Joins: rockcavera (~rc@192.12.114.204)
[23:52:22] *** Quits: rockcavera (~rc@192.12.114.204) (Changing host)
[23:52:22] *** Joins: rockcavera (~rc@user/rockcavera)
