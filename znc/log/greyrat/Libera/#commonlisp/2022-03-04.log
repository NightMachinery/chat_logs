[00:05:56] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[00:06:42] *** Joins: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca)
[00:09:53] *** Quits: kpoeck (~kpoeck@2a01:598:92b1:854a:64aa:e231:1f33:858a) (Quit: Client closed)
[00:17:54] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[00:18:32] *** Joins: eugercek (~user@user/eugercek)
[00:19:26] *** Joins: kpoeck (~kpoeck@tmo-100-90.customers.d1-online.com)
[00:20:56] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[00:35:42] *** Joins: rogersm (~rogersm@90.166.180.250)
[00:40:02] *** Quits: attila_lendvai (~alendvai@2a02:ab88:3710:7c80:9130:5abf:96b3:dc0c) (Ping timeout: 252 seconds)
[00:43:43] *** Quits: cage (~cage@94-39-220-187.adsl-ull.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[00:44:14] <dbotton> _death This is a link to a tutorial I have been working on for the database stuff  in CLOG I mentioned the other day - https://docs.google.com/document/d/185Sh9rMhSCEwt14chbn4_gi0CV6xwWs8Z59rUvEWCN8/edit?usp=sharing
[00:44:44] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[00:52:40] *** Quits: amb007 (~a_bakic@93.151.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[00:56:59] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[00:57:51] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[00:58:01] *** Quits: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl) (Quit: WeeChat 3.4)
[01:05:26] *** Quits: kpoeck (~kpoeck@tmo-100-90.customers.d1-online.com) (Quit: Client closed)
[01:05:30] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[01:12:15] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:15:56] *** Joins: hashfunc107e (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[01:19:16] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:31:42] *** Quits: qhong (~qhong@rescomp-21-400677.stanford.edu) (Read error: Connection reset by peer)
[01:31:50] *** Joins: qhong (~qhong@rescomp-21-400677.stanford.edu)
[01:39:52] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[01:44:37] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[01:53:35] *** Joins: gamaliel (~gamaliel@24.171.220.123)
[01:56:03] <gamaliel> Hi, just want to say thank you for all the help I've received in this channel. I'm a CL newbie still wrapping my head around some concepts, but I'm slowly improving. It's not as easy to find tutorials or guidelines as for other languages, but my experience in this chat has been top-notch.
[01:58:43] <hashfunc107e> gamaliel: +100
[01:59:31] <dbotton> üëç
[02:00:05] <hashfunc107e> is there a way to keep the "#:" in the string "IN-PACKAGE #:TEST" when using format like so: ... (format nil "~A" '(IN-PACKAGE #:TEST)) ...
[02:03:18] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[02:03:38] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[02:05:12] *** Server sets mode: +Ccntz 
[02:05:58] <hashfunc107e> in other words:
[02:06:00] <mfiano> Well, you are printing the string ~a[esthetically]
[02:06:06] <hashfunc107e> (format nil "~A" '(IN-PACKAGE #:TEST)) => "(IN-PACKAGE TEST)"
[02:06:14] <hashfunc107e> i would like:
[02:06:18] <hashfunc107e> (format nil "~A" '(IN-PACKAGE #:TEST)) => "(IN-PACKAGE #:TEST)"
[02:06:53] <mfiano> You cannot do that with ~a
[02:07:01] <hashfunc107e> mfiano: how do i do it?
[02:07:08] <mfiano> ~s is one way.
[02:07:12] <hashfunc107e> thanks
[02:07:27] <hashfunc107e> that's what i was looking for
[02:08:22] *** Quits: mogan90 (~mogan90@132.140.7.93.rev.sfr.net) (Ping timeout: 260 seconds)
[02:09:44] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[02:16:08] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 250 seconds)
[02:16:52] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[02:19:09] <gamaliel> Could anyone recommend me a good resource on how to use streams? Thanks.
[02:21:25] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[02:22:06] *** Joins: zacque (~zacque@1.32.81.194)
[02:26:19] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[02:29:30] *** Quits: specbot (~specbot@common-lisp.net) (Remote host closed the connection)
[02:29:30] *** Quits: minion (~minion@common-lisp.net) (Read error: Connection reset by peer)
[02:29:53] *** Joins: specbot (~specbot@common-lisp.net)
[02:30:35] *** Joins: minion (~minion@common-lisp.net)
[02:30:35] <Guest74> what do you want to do with streams? make your own?
[02:33:17] <gamaliel> Kind of. For example, suppose I have a program that outputs in tcl. Could I use a stream to capture said tcl and feed it to ltk widgets? And if so, how?
[02:34:48] <Guest74> sorry, I don't know ltk.
[02:35:19] <Guest74> have you tried looking at their documentation?
[02:38:07] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[02:39:40] <|3b|> streams are the main IO abstraction in CL, so if you are doing IO to/from lisp you are probably doing so using streams (or using some sort of extension like direct FFI to OS APIs, or shared memory, or whatever). that may or may not apply to that specific case, but sounds reasonably likely you could do that with streams
[02:41:36] <|3b|> (assuming ltk lets you go past its abstractions to send raw tcl)
[02:41:39] <|3b|> is your "program that outputs tcl" some lisp code running in your CL image, or an external executable that you run from lisp?
[02:43:23] <gamaliel> An external executable, gnuplot. I looked up the code for the vgplot library, but it doesn't seem to return anything other than an empty string when run. However, I already have a nice layout built with ltk, to which I'd like to pass the gnuplot plot to. But without understanding streams and passing I/O between gnuplot and ltk, I'm stumped.
[02:44:55] <gamaliel> The ltk documentation offers the mention of a two-way stream used to connect to ltk, but I've got no idea on how to get the executable's output to pass to a running "wish" session from ltk.
[02:45:50] <Guest74> gnuplot doesn't output tcl though, as far as i know.
[02:45:56] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[02:47:19] <|3b|> the extension you would use to run the external executable probably has an option to use streams for communication with that process (as ltk appears to be doing with wish), but if you just run it once and just want to get the output after it finishes, there is probably also an option to just do that and get back the output as a string
[02:47:31] <|3b|> which would be simpler than doing so yourself
[02:48:52] <|3b|> but before looking into the details of that, probably should try to figure out if ltk either doesn't care if you mess with its internal streams, or if it provides some way to send raw tcl through the API
[02:49:03] <gamaliel> Gnuplot uses "set terminal tkcanvas" to output in tcl.
[02:50:03] <hashfunc107e> what is the idiomatic way to grab all CARs in an assoc list? e.g., ... '((1 . 2) (3 . 4) (5 . 6)) => '(1 3 5)
[02:50:43] <|3b|> hashfunc107e: (mapcar 'car alist)? it wouldn't be a literal (quoted) list though
[02:52:18] <gamaliel> |3b|: I think it's through the API, but I'm still new to this "stream" thing. If I wanted to output a string, I need to push to ltk's input stream, am I correct?
[02:52:48] <hashfunc107e> |3b|: yup, that works like a charm
[02:52:49] <hashfunc107e> thanks
[02:53:28] <|3b|> IO in CL is "streams". files, terminal, etc, so READ,WRITE,FORMAT,etc all operate on streams
[02:54:26] <|3b|> but if something is expecting to maintain state with a process on the other side of a stream, sending random garbage through that stream without telling it might cause that state to get out of sync, so i'd be suspicious of "just write to the internal stream"
[02:54:57] <gamaliel> |3b|: I'm just confused. I think it wouldn't be difficult if I could visualize it. In R I've used connections, but they are mostly transparent to the users, and the equivalent of pipes is just as confusing to me.
[02:58:13] <gamaliel> I wish I knew how to "grab" the output from gnuplot and feed it to the "input" in the tkcanvas I created.
[02:58:37] <Guest74> well, that's exactly what vgplot does.
[02:59:15] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[02:59:16] <gamaliel> Guest74: Does it? I always get an additional window, but the tkcanvas doesn't seem to grab the commands.
[02:59:47] <Guest74> it has its own separate connection.
[03:00:03] <|3b|> well, if nothing else, presumably it is doing what you want to do so shows how to do so :)
[03:00:57] <gamaliel> Guest74: So, an input stream from the tkcanvas I created? May look into that. Thank you.
[03:01:43] <|3b|> but for the first part, "grab the output from gnuplot" is probably trivial. tell the function you call to run gnuplot to give you the stdout of the subprocess as a string
[03:02:07] <Guest74> i don't understand that.¬† but as 3b reiterated, vgplot communicates with gnuplot, get's the output and sends it, just like you want so it will teach you how to do it.
[03:02:40] <|3b|> if you want to keep gnuplot open and get responses to individual commands instead of waiting for the subprocess to finish, then it is a bit harder
[03:03:32] <|3b|> in that case, you tell the function you call to run gnuplot to give you streams attached to the stdin and stdout of the subprocess. you can then read and write to those streams as you would any file
[03:03:53] <gamaliel> |3b|: That is mostly what I want. It's meant to be an interactive plot, in which a person changes some parameters and when they press replot, the canvas updates.
[03:04:01] <|3b|> (possibly with some complications to avoid blocking, or run in another thread if you told the function to block, etc)
[03:04:45] <|3b|> but there seem to be at least 3 or 4 libs for talking to gnuplot from CL, so probably easiest to let one of them deal with that stuff for you
[03:05:00] <|3b|> and since at least one of them also talks to ltk, probably start there :)
[03:05:46] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 260 seconds)
[03:05:59] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[03:06:23] <gamaliel> I should probably read the code from cgn. After all, a full-fledged library for just a single canvas sounds like overkill to me. Plus, this is just a learning project for myself only.
[03:06:47] <Guest74> if you're lucky, it would simply be a matter of rebinding the ltk stream that vgplot uses to the one that you use.
[03:07:45] <Guest74> though I'm still not understanding if you're writing a user interface to vgplot or to gnuplot.
[03:08:21] <gamaliel> To gnuplot, I just was using vgplot as a reference to understand how it all worked. It's for learning purposes.
[03:08:59] <gamaliel> They seem to push things to (plot-stream act-plot) which is simply pushing to the gnuplot stream created from ltk:do-execute.
[03:09:17] *** Quits: hashfunc107e (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[03:09:20] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[03:09:39] <gamaliel> But, I want the gnuplot output to show up in a tk-canvas I defined using ltk instead of a new window.
[03:12:25] <|3b|> ok, looks like ltk:do-execute is a way to run a subprocess that doesn't have an option for waiting for it to finish, and returns a stream for stdin/stdout
[03:12:40] <|3b|> so that covers that option for talking to gnuplot
[03:15:05] <gamaliel> Yep. It's supposedly a two-way stream, but I don't know how those work. If I input it a command, does it update the output according the input I just passed?
[03:15:55] <|3b|> looking at vgplot code, not sure it does things the way you want it to, it might parse output and then draw it manually instead of sending tk code from gnuplot?
[03:16:47] <Guest74> as I understand it now, gnuplot does the window, not vgplot.
[03:16:59] <gamaliel> |3b|: that is correct.
[03:17:10] <|3b|> if you have a stream S from do-execute, then (format S "whatever~%") would write the line whatever (with a newline) into STDIN of the subprocess started by do-execute
[03:17:18] <gamaliel> Guest74: correct.
[03:17:41] <|3b|> (READ-LINE S) would (try to) return a string containing one line of whatever the subprocess had written to STDOUT
[03:18:12] <|3b|> (it might wait indefinitely if subprocess hasn't written anything, etc)
[03:18:40] <Guest74> I would just swallow the window, though I don't know how ltk does that or if they can.
[03:18:46] <gamaliel> |3b|: Oh, so it could (presumably) get the (presumed) tk output from gnuplot if I fed it with some gnuplot commands?
[03:18:49] <|3b|> similarly READ-CHAR to wait for 1 character, READ-CHAR-NO-HANG to return immediately if there is nothing
[03:19:22] <|3b|> right, you would send command to gnuplot by writing to the stream, and get the output by reading from that stream
[03:19:31] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[03:19:55] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[03:20:27] <gamaliel> |3b|: Ok, perfect.
[03:21:31] <gamaliel> The remaining issue is "does the tkcanvas I created with ltk offer some sort of stream I can write to or is it some other way?"
[03:21:50] <|3b|> right
[03:22:09] <gamaliel> I just downloaded the code from cgn to check their implementation and see if it does what I want. Thank you very much, |3b| and Guest74.
[03:29:33] *** Joins: gamaliel2 (~gamaliel@24.171.220.123)
[03:32:30] *** Joins: gamaliel11 (~gamaliel@24.171.220.123)
[03:32:43] *** Quits: gamaliel2 (~gamaliel@24.171.220.123) (Client Quit)
[03:34:16] *** Joins: s-liao (~s-liao@101.86.96.21)
[03:39:37] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[03:43:23] *** Quits: gamaliel11 (~gamaliel@24.171.220.123) (Quit: Client closed)
[03:49:37] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 240 seconds)
[03:52:58] *** Quits: eugercek (~user@user/eugercek) (Read error: Connection reset by peer)
[03:53:14] *** Joins: eugercek (~user@user/eugercek)
[03:53:46] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 268 seconds)
[03:55:14] *** Quits: eugercek (~user@user/eugercek) (Read error: Connection reset by peer)
[04:11:21] *** Quits: gamaliel (~gamaliel@24.171.220.123) (Ping timeout: 256 seconds)
[04:15:43] <Guest74> anybody know of any examples of sb-alien:union?
[04:26:28] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[04:31:51] *** Joins: s-liao (~s-liao@101.86.96.21)
[04:55:09] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[04:56:17] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[05:09:23] <White_Flame> Guest74: yeah, I did some fp/int casting with it: https://plaster.tymoon.eu/view/2962
[05:10:45] <Guest74> thanks, that looks like the same format. I'm guessing it needs something special if placed inside a struct.
[05:13:14] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[05:13:41] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[05:14:12] <Guest74> oh, looks like I had to give a name to the slot holding it.¬† somehow I thought it'd just use the name of the union.
[05:14:21] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[05:14:33] *** Joins: s-liao (~s-liao@101.86.96.21)
[05:16:34] <White_Flame> it's been a long time since I tried that, can't answer any specifics :)
[05:17:49] <Guest74> Well your response led me to the solution either way :) ¬† Now to just get my macro to spit out the right code.
[05:22:45] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[05:23:00] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[05:24:05] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Client Quit)
[05:28:14] *** Joins: s-liao (~s-liao@101.86.96.21)
[05:40:53] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[06:00:35] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[06:00:53] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[06:18:52] *** Joins: Inline__ (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de)
[06:21:23] *** Joins: s-liao (~s-liao@101.86.96.21)
[06:21:24] *** Quits: Inline (~Inline@p200300cd470c380061a83d28f03bd1ae.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:25:56] *** Joins: torbo (~user@72.15.63.17)
[06:29:44] *** Joins: Bike (~Bike@71.69.170.70)
[06:40:23] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[06:45:56] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[06:46:56] *** Joins: s-liao (~s-liao@101.86.96.21)
[06:50:00] *** Parts: torbo (~user@72.15.63.17) (ERC (IRC client for Emacs 27.1))
[06:58:36] *** Quits: silasfox (~sbv@p4fe8dfb9.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[07:00:38] *** Joins: silasfox (~sbv@p200300cec714ca00956ec169de307dfd.dip0.t-ipconnect.de)
[07:01:21] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[07:18:41] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 245 seconds)
[07:27:21] *** Joins: recordgroovy (~recordgro@50.35.20.8)
[07:30:14] <beach> Good morning everyone!
[07:41:20] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[07:43:27] *** Joins: akoana (~ah@user/akoana)
[07:52:43] *** Joins: semz_ (~semz@user/semz)
[07:55:21] *** Quits: semz (~semz@user/semz) (Ping timeout: 245 seconds)
[08:03:11] *** semz_ is now known as semz
[08:10:06] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[08:17:51] <Josh_2> Mornin'
[08:37:40] *** Joins: s-liao (~s-liao@101.86.96.21)
[09:02:37] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[09:06:27] *** Joins: s-liao (~s-liao@101.86.96.21)
[09:09:59] *** Joins: s-liao18 (~s-liao@101.86.96.21)
[09:12:49] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[09:21:37] *** Joins: asen (~asen@2408:821a:618:8ad0:c30b:1640:f4a3:fe2a)
[09:46:31] *** Quits: asen (~asen@2408:821a:618:8ad0:c30b:1640:f4a3:fe2a) (Quit: Leaving)
[09:46:56] *** Joins: hashfunc528 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[09:47:57] *** Quits: s-liao18 (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[10:04:51] <hashfunc528> not quite sure how to go about this problem. what is the idiomatic approach for returning a full string when looking for a particular substring in a string? meaning, in pseudo-code ... (find-string-from-substring-idiom "TEST" "TEST123456789") => "TEST123456789 ... where "TEST" is the substring I'm specifying, and "TEST123456789" is the string I'm searching
[10:06:36] <beach> clhs search
[10:06:36] <specbot> http://www.lispworks.com/reference/HyperSpec/Body/f_search.htm
[10:07:13] <beach> You will get a position, and then you can use SUBSEQ to extract the subsequence.
[10:07:17] <beach> clhs subseq
[10:07:18] <specbot> http://www.lispworks.com/reference/HyperSpec/Body/f_subseq.htm
[10:09:45] <hashfunc528> beach: i think that'll work perfectly. thank you
[10:09:53] <beach> Pleasure.
[10:24:27] *** Joins: s-liao (~s-liao@101.86.96.21)
[10:25:44] *** Quits: jealousmonk (~user@user/jealousmonk) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 27.1))
[10:38:07] <Posterdati> hi
[10:39:14] <Posterdati> gsll, antik and cffi still brolen on freebsd and openbsd! :)
[10:45:01] *** Joins: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se)
[10:50:17] *** Joins: attila_lendvai (~alendvai@catv-89-132-245-188.catv.fixed.vodafone.hu)
[11:07:23] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[11:24:17] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[11:34:32] *** Quits: hashfunc528 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Remote host closed the connection)
[11:37:45] *** Joins: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net)
[11:40:42] *** Joins: eugercek (~user@user/eugercek)
[11:40:43] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[11:42:25] *** Quits: Cena (~cena@c-107-4-204-12.hsd1.mn.comcast.net) (Ping timeout: 256 seconds)
[11:42:25] *** Joins: hashfuncb70 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[11:43:46] <hashfuncb70> is it just me or is dugging LABELS functions seemingly impossible?
[11:43:46] <hashfuncb70> *debugging
[11:45:07] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[11:51:57] <hashfuncb70> what is the idiomatic way to return an object from a list of objects based on the value of a particular field?
[11:53:05] <White_Flame> (find value list :key #'field-reader)
[11:53:51] <White_Flame> of (find-if (lambda (obj) ...test stuff) list)
[11:54:24] *** Joins: rotateq (~user@ip-078-094-235-194.um19.pools.vodafone-ip.de)
[11:54:37] <White_Flame> s/of/or/
[11:54:59] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[11:55:42] <hashfuncb70> White_Flame: ok thanks, i'll give that a go
[11:58:31] *** Joins: random-nick (~random-ni@87.116.176.196)
[12:09:20] <hashfuncb70> White_Flame: that was a very frustrating four hours haha. i was using find, but i never changed the :test predicate
[12:09:33] <hashfuncb70> White_Flame: thanks for the quick reply tho. i think i learned a valuable lesson
[12:10:54] <pjb> hashfuncb70: of course, debugging features are implementation dependent. However, you can write your own flet/labels macro to help debugging in implementations that are not very supportive.  See for example com.informatimago.common-lisp.cesarum.utility:tracing-labels
[12:11:35] <hashfuncb70> pjb: ok, thanks
[12:11:55] <pjb> hashfuncb70: https://github.com/informatimago/lisp/blob/4bfb6893e7840b748648b749b22078f2facfee0a/common-lisp/cesarum/utility.lisp#L2019-L2088
[12:12:03] *** Joins: mogan90 (~mogan90@132.140.7.93.rev.sfr.net)
[12:12:54] <pjb> hashfuncb70: note: some implementations let you designate local functions with expressions such as (top-level-function local-function) in operators such as CL:TRACE.
[12:15:21] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[12:30:24] <hashfuncb70> why would a "local function" be meaningful in my case? i don't know what that means
[12:30:42] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[12:30:51] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[12:30:59] *** Joins: lisp123 (~lisp123@120.154.103.52)
[12:32:47] <White_Flame> labels & flet define functions that are local to a lexical scope
[12:33:35] *** Joins: s-liao (~s-liao@101.86.96.21)
[12:33:43] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 256 seconds)
[12:34:13] *** Joins: amb007 (~a_bakic@76.151.22.93.rev.sfr.net)
[12:36:12] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 240 seconds)
[12:38:48] *** Quits: lisp123 (~lisp123@120.154.103.52) (Quit: Leaving...)
[12:40:46] *** Quits: recordgroovy (~recordgro@50.35.20.8) (Ping timeout: 272 seconds)
[12:41:33] *** Joins: lisp123 (~lisp123@120.154.103.52)
[12:41:59] *** Joins: recordgroovy (~recordgro@50.35.20.8)
[12:42:11] <lisp123> Off topic, but are all of the Ukraine & Russian Lispers okay? Let us know if need any help..
[12:42:53] *** Joins: admich (~user@ip-129-52.sn-213-198.clouditalia.com)
[12:43:38] *** Quits: amb007 (~a_bakic@76.151.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[12:44:01] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[12:47:24] *** Quits: recordgroovy (~recordgro@50.35.20.8) (Ping timeout: 240 seconds)
[12:49:17] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[12:49:40] *** Joins: recordgroovy (~recordgro@50.35.20.8)
[12:52:55] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:57:48] <jackdaniel> n.b people in belarus are also in a situation that is not pleasent
[12:58:17] <lisp123> +1
[12:59:46] *** Joins: shka (~herr@109.231.3.55)
[12:59:55] <hashfuncb70> White_Flame: ok thanks. i understand. i was trying to connect the dots between my question and pjb's statement
[13:00:06] *** Quits: Alfr (~Alfr@user/alfr) (Quit: Leaving)
[13:00:28] <hashfuncb70> lisp123: ^ i agree. please let the channel know if there's anything the community can do to help
[13:00:29] *** Joins: Alfr (~Alfr@user/alfr)
[13:00:38] *** Quits: hashfuncb70 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Remote host closed the connection)
[13:00:50] *** Joins: s-liao (~s-liao@101.86.96.21)
[13:23:19] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[13:24:51] *** Joins: lisp123 (~lisp123@120.154.103.52)
[13:25:33] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[13:29:17] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 240 seconds)
[13:31:20] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[13:37:17] *** Quits: scymtym (~user@ip-094-114-248-079.um31.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[13:40:19] *** Joins: lisp123 (~lisp123@120.154.103.52)
[13:47:13] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[13:47:46] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[13:57:41] *** Quits: lisp123 (~lisp123@120.154.103.52) (Remote host closed the connection)
[13:57:50] *** Joins: s-liao (~s-liao@101.86.96.21)
[14:06:55] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[14:10:34] *** Joins: s-liao (~s-liao@101.86.96.21)
[14:10:58] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[14:14:32] *** Quits: s-liao (~s-liao@101.86.96.21) (Client Quit)
[14:36:18] *** Joins: lisp123 (~lisp123@120.154.103.52)
[14:41:02] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 250 seconds)
[14:54:27] *** Joins: Tallund16 (~Tallund@cbl-24-104-171-134.yyz.frontiernetworks.ca)
[14:55:24] *** Quits: mogan90 (~mogan90@132.140.7.93.rev.sfr.net) (Ping timeout: 240 seconds)
[14:56:04] *** Quits: Tallund16 (~Tallund@cbl-24-104-171-134.yyz.frontiernetworks.ca) (Client Quit)
[14:57:21] *** Quits: v88m (~Xiro@109-252-170-8.dynamic.spd-mgts.ru) (Ping timeout: 256 seconds)
[15:29:40] *** Joins: cage (~cage@94-39-220-187.adsl-ull.clienti.tiscali.it)
[15:29:41] *** Joins: v88m (~Xiro@213.87.89.22)
[15:35:19] *** Quits: attila_lendvai (~alendvai@catv-89-132-245-188.catv.fixed.vodafone.hu) (Ping timeout: 256 seconds)
[15:36:46] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[15:44:25] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[15:48:36] *** Quits: v88m (~Xiro@213.87.89.22) (Ping timeout: 240 seconds)
[15:48:56] *** Joins: v88m (~Xiro@213.87.133.114)
[15:51:42] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[15:59:06] *** Quits: v88m (~Xiro@213.87.133.114) (Ping timeout: 245 seconds)
[16:00:46] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[16:04:42] *** Quits: admich (~user@ip-129-52.sn-213-198.clouditalia.com) (Ping timeout: 272 seconds)
[16:12:29] *** Joins: mogan90 (~mogan90@132.140.7.93.rev.sfr.net)
[16:21:10] *** Quits: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 272 seconds)
[16:25:45] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:44:54] *** Joins: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se)
[16:50:00] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[16:52:31] *** Quits: danieli (~danieli@user/danieli) (Quit: Alpine Linux, the security-oriented, lightweight Linux distribution)
[16:53:16] *** Joins: danieli (~danieli@user/danieli)
[16:55:16] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[16:56:30] *** Quits: zacque (~zacque@1.32.81.194) (Quit: Goodbye :D)
[17:15:37] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[17:21:55] *** Quits: Inline__ (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de) (Quit: Leaving)
[17:26:24] *** Joins: Inline (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de)
[17:27:51] *** Joins: Bike (~Glossina@71.69.170.70)
[17:31:52] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[17:48:08] *** Joins: admich (~user@ip-129-52.sn-213-198.clouditalia.com)
[17:52:21] *** Joins: vcarvalho (~vcarvalho@bl20-114-170.dsl.telepac.pt)
[17:53:44] *** Quits: vcarvalho (~vcarvalho@bl20-114-170.dsl.telepac.pt) (Client Quit)
[17:57:12] *** Quits: admich (~user@ip-129-52.sn-213-198.clouditalia.com) (Read error: Connection reset by peer)
[18:12:33] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Quit: Client closed)
[18:22:40] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[18:23:01] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[18:23:26] *** Joins: zachel_ (~zachel@user/zachel)
[18:23:52] *** Joins: Bike_ (~Glossina@71.69.170.70)
[18:24:04] *** Joins: luna-is-here_ (~quassel@2a02:908:f761:2a3c::a)
[18:24:34] *** Server sets mode: +Ccntz 
[18:25:11] *** Joins: cross_ (~cross@spitfire.i.gajendra.net)
[18:25:18] *** Joins: aeth_ (~aeth@user/aeth)
[18:25:36] *** Joins: stack2 (~stack@ctrl-c.club)
[18:25:40] *** Joins: ryanbw1 (~ryanbw@mab.sdf.org)
[18:25:47] *** Joins: rdrg109_ (~rdrg109@user/rdrg109)
[18:26:52] *** Joins: Oladon (~olad@98.43.81.226)
[18:29:52] *** Quits: Bike (~Glossina@71.69.170.70) (*.net *.split)
[18:29:52] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[18:29:52] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[18:29:52] *** Quits: ryanbw (~ryanbw@mab.sdf.org) (*.net *.split)
[18:29:52] *** Quits: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt) (*.net *.split)
[18:29:52] *** Quits: stack1 (~stack@ctrl-c.club) (*.net *.split)
[18:29:52] *** Quits: cross (~cross@spitfire.i.gajendra.net) (*.net *.split)
[18:29:52] *** Quits: mister_m (~user@c-73-110-154-209.hsd1.il.comcast.net) (*.net *.split)
[18:29:53] *** Quits: luna-is-here (~quassel@ip-095-223-058-048.um35.pools.vodafone-ip.de) (*.net *.split)
[18:29:53] *** Quits: zachel (~zachel@user/zachel) (*.net *.split)
[18:29:53] *** Quits: phantomics (~phantomic@97-118-157-121.hlrn.qwest.net) (*.net *.split)
[18:29:53] *** Quits: aeth (~aeth@user/aeth) (*.net *.split)
[18:29:53] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[18:29:53] *** Lord_of_Life_ is now known as Lord_of_Life
[18:29:53] *** hineios3 is now known as hineios
[18:30:11] *** Quits: rotateq (~user@ip-078-094-235-194.um19.pools.vodafone-ip.de) (Remote host closed the connection)
[18:37:30] *** Joins: phantomics (~phantomic@97-118-157-121.hlrn.qwest.net)
[18:38:41] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 256 seconds)
[18:40:28] *** mister_m` is now known as mister_m
[18:43:00] *** Quits: Cymew (~ante@c-0c87225c.023-1144-7570702.bbcust.telenor.se) (Ping timeout: 240 seconds)
[18:51:40] *** Joins: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net)
[18:54:22] *** Bike_ is now known as Bike
[19:05:48] *** Quits: silasfox (~sbv@p200300cec714ca00956ec169de307dfd.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[19:06:05] *** Joins: silasfox (~sbv@p548d1235.dip0.t-ipconnect.de)
[19:07:20] *** Joins: lisp123 (~lisp123@120.154.103.52)
[19:11:36] *** Quits: lisp123 (~lisp123@120.154.103.52) (Ping timeout: 252 seconds)
[19:21:16] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:28:43] *** Quits: admich (~user@ip-129-52.sn-213-198.clouditalia.com) (Remote host closed the connection)
[19:51:13] *** Joins: jemoka (~jemoka@98.42.49.47)
[19:51:13] *** Quits: jemoka (~jemoka@98.42.49.47) (Changing host)
[19:51:13] *** Joins: jemoka (~jemoka@user/jemoka)
[19:52:02] *** Joins: jealousmonk (~user@user/jealousmonk)
[19:57:38] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[19:58:07] *** Quits: jemoka (~jemoka@user/jemoka) (Quit: ZNC 1.9.x-git-126-0b8276c1 - https://znc.in)
[19:58:22] *** Joins: jeosol (~jeosol@user/jeosol)
[20:06:46] *** ghost4096 is now known as pranshukhandal
[20:09:40] *** Joins: attila_lendvai (~alendvai@apn-94-44-238-1.vodafone.hu)
[20:12:41] *** Quits: attila_lendvai (~alendvai@apn-94-44-238-1.vodafone.hu) (Read error: Connection reset by peer)
[20:19:20] *** cross_ is now known as cross
[20:22:04] *** Joins: jmes (~james@216.154.22.238)
[20:30:17] *** Quits: mogan90 (~mogan90@132.140.7.93.rev.sfr.net) (Ping timeout: 240 seconds)
[20:33:15] *** ryanbw1 is now known as ryanbw
[20:37:41] *** Joins: ebrasca (~user@librepanther.com)
[20:39:58] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[20:41:48] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[20:41:53] *** Quits: mgl (~mgl@cpc87455-finc19-2-0-cust234.4-2.cable.virginm.net) (Ping timeout: 256 seconds)
[21:03:06] <jmes> Does anyone know of common lisp audio/video codec libraries (of any kind, but specifically AAC/H.265)? Also if anyone knows which IRC channel I can talk to codec people that would be useful :)
[21:08:08] <Josh_2> h.265 no chance
[21:08:12] *** Quits: Josh_2 (~user@197.185.99.232) (Quit: ERC (IRC client for Emacs 27.1))
[21:11:01] <jackdaniel> jmes: the best chance would be writing a library that uses a foreign function interface to access existing libraries with C ABI
[21:12:14] <jmes> jackdaniel: Thanks, that may be my approach. I'm looking for an excuse to try out the CFFI library anyway
[21:12:36] <|3b|> ffi to C libs is more likely to exist already, and much more likely to get useful results :)
[21:13:22] <random-nick> there's a codec for MJPEG in pure CL
[21:13:25] <|3b|> (for that specific task, i mean. implementing things in CL in general is good :)
[21:13:39] <jmes> Gotcha, |3b| :P
[21:13:42] <random-nick> or at least a decoder?
[21:13:56] <jackdaniel> decodec :)
[21:21:38] *** Quits: mgxm (~mgxm@user/mgxm) (Quit: ....)
[21:21:54] *** Joins: mgxm (~mgxm@user/mgxm)
[21:30:40] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Quit: WeeChat 3.4)
[21:31:46] *** Quits: Inline (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de) (Quit: Leaving)
[21:34:11] *** Joins: Inline (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de)
[21:36:46] <lagash> random-nick: which library would that be now? https://github.com/sharplispers/cl-jpeg
[21:37:47] <random-nick> https://github.com/varjagg/cl-video/
[21:38:01] <random-nick> it's what allows mezzano to play video
[21:39:13] <random-nick> though it would probably be possible to port a codec written in C/C++ to mezzano the same way quake and doom were ported
[21:40:02] <lagash> I was gonna say cl-video next :P it uses cl-jpeg
[21:40:19] *** Joins: dirtcastle (~dirtcastl@2409:4072:814:590f:1811:56ff:fefd:885a)
[21:41:41] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[21:42:43] *** Joins: notzmv (~zmv@user/notzmv)
[21:53:11] <|3b|> for ffi, there are at least cl-flac, cl-vorbis, cl-mpg123 in ql, and probably some UI or game libs can also do audio/video decoding
[21:53:35] <|3b|> and i think there have been a few attempts at wrapping ffmpeg and similar
[21:56:21] *** Joins: Brucio-61 (~Brucio-19@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[21:57:00] *** Joins: v88m (~Xiro@109-252-170-8.dynamic.spd-mgts.ru)
[22:02:19] <|3b|> also mixalot has similar set of ffi audio, and there seems to be easy-audio that does some CL decoding of flac and some other lossless audio
[22:02:37] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[22:03:25] <jmes> ooh, interesting, I'll have a look. Thanks |3b|
[22:04:48] *** Quits: Catie (~user@user/catie) (Remote host closed the connection)
[22:07:48] *** Quits: dirtcastle (~dirtcastl@2409:4072:814:590f:1811:56ff:fefd:885a) (Ping timeout: 240 seconds)
[22:08:04] *** Joins: morganw (~user@80.225.24.132)
[22:08:57] *** Joins: Catie (~user@user/catie)
[22:15:54] *** Joins: Desk (~user@90.253.52.105)
[22:42:11] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[22:43:43] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[22:46:36] *** Joins: mksybr (mksybr@tilde.team)
[23:08:34] *** Joins: santiagopim (~user@90.167.66.93)
[23:14:37] *** Quits: aeth_ (~aeth@user/aeth) (Ping timeout: 240 seconds)
[23:16:29] *** Joins: aeth (~aeth@user/aeth)
[23:21:44] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[23:22:52] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:23:41] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:25:38] *** Lord_of_Life_ is now known as Lord_of_Life
[23:33:48] *** Quits: gjvc (~gjvc@user/gjvc) (Quit: leaving)
[23:34:07] *** Joins: gjvc (~gjvc@user/gjvc)
[23:38:44] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Remote host closed the connection)
[23:39:05] *** Joins: lispy (~lispy@user/lispy)
[23:39:09] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:40:23] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:56:40] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[23:56:58] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
