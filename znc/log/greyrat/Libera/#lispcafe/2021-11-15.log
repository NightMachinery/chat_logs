[00:00:32] <shka> https://github.com/sirherrbatka/quantify
[00:00:32] -ixelp- GitHub - sirherrbatka/quantify: Fork of metering, with samples gathering code.
[00:00:36] <shka> i forked metering
[00:00:51] <shka> so i can finally have my flamegraphs
[00:00:54] <shka> eh :P
[00:01:00] <hayley> Good morning everyone!
[00:01:14] <shka> hayley: good morning, and good night!
[00:01:21] <selwyn> good morning
[00:01:58] <hayley> https://www.youtube.com/watch?v=RZJQ-JBHxWA
[00:01:58] -ixelp- Dazzle Ships 1-7 - YouTube
[00:18:26] <hayley> Apparently David Ungar now wants to put Common Lisp on a smartwatch or something.
[00:18:46] <shka> what for?
[00:19:37] <hayley> Funny that Rainer Joswig is now telling him about the Apple MessagePad which had special hardware for epheremal/generational GC. Suuuuure, like Dave thinks you need hardware for it.  
[00:19:53] <shka> also, i think that you could put ecl into smartwatch
[00:20:03] <shka> well, at least on the android smart watches 
[00:20:05] <hayley> Probably no reason: https://twitter.com/senderPath/status/1459936754396393472
[00:24:33] *** Quits: lotuseater (~user@p200300e7871bd300c158d62dc7544d08.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[00:28:21] *** Quits: mala (~mala@user/malaclyps) (Quit: ZNC 1.6.1 - http://znc.in)
[00:37:03] *** Joins: lotuseater (~user@p200300e7871bd300c158d62dc7544d08.dip0.t-ipconnect.de)
[00:42:03] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 265 seconds)
[00:57:03] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[00:57:56] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Client Quit)
[00:58:40] <selwyn> takes ages to build emacs
[00:58:57] <hayley> https://www.youtube.com/watch?v=O-iw3yyLApQ
[00:58:57] -ixelp- Sparks - "Tryouts For The Human Race" (official video) - YouTube
[01:03:20] *** Quits: X-Scale (~ARM@83.223.243.66) (Ping timeout: 256 seconds)
[01:03:41] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[01:04:32] *** Joins: mala (~mala@user/malaclyps)
[01:04:42] *** Quits: mala (~mala@user/malaclyps) (Remote host closed the connection)
[01:05:00] *** X-Scale` is now known as X-Scale
[01:05:10] *** Joins: mala (~mala@user/malaclyps)
[01:09:53] <hayley> https://www.youtube.com/watch?v=bUmkdO4Y1uY
[01:09:53] -ixelp- Using math to find “Who asked?” - YouTube
[01:14:24] *** Quits: random-nick (~random-ni@87.116.165.220) (Read error: Connection reset by peer)
[01:14:30] *** greaser|q is now known as GreaseMonkey
[01:45:15] <edgar-rft> selwyn: we live in the age of emacs...
[01:46:44] <sham1> The Emacs age. It's clearly after the Diamond age
[01:52:54] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[02:04:37] <gilberth> I made Perl having a segmentation fault. Is that supposed to happen?
[02:10:07] <sham1> Sounds like you did something really weird
[02:16:18] <gilberth> I said: my ($a,$b)=$_[0]; Not too weird.
[02:17:32] <selwyn> pkg-config
[02:17:35] <selwyn> sorry
[02:18:13] <gilberth> Bugs haunt me, even with not doing something weird. Perhaps I could do just nothing and they still find me.
[02:22:10] *** Quits: makomo (~makomo@user/makomo) (Quit: WeeChat 3.2)
[02:22:22] <gilberth> lol. It persists. Perhaps I could start a career finding bus faults. Where a bus fault is, there is some overflow, there is some exploit. And exploits have value. Nah, not a good idea.
[02:23:19] <selwyn> all aboard the bug bus
[02:23:51] <gilberth> Where does it go?
[02:24:34] <selwyn> um
[02:24:35] <selwyn> idk
[02:24:43] <selwyn> you are the only qualified driver :)
[02:24:50] <gilberth> lol
[02:25:00] <moon-child> wait, factor is open-source?
[02:25:10] <moon-child> I guess I had confused it with some commercial forth offering
[02:25:26] <gilberth> New career: Bus driver.
[02:29:33] <selwyn> there are lots of bus driver adverts here actually
[02:30:46] <gilberth> I read bus drivers became lorry drivers and therefore bus drivers are scarce. Is that true?
[02:33:06] <hayley> https://www.youtube.com/watch?v=4QA30qkRYy8
[02:33:07] -ixelp- Dogs - YouTube
[02:33:37] <selwyn> possibly, but iirc the bus driver shortage predates the lorry driver shortage
[02:35:29] <selwyn> gilberth: seems you are right
[02:39:44] <gilberth> Wasn't there some campaign to have Germans with old driver license steer lorries? Because we (with older licenses) are legally allowed to drive vehicles up to 7.5 tons in mass. I am not always sure which news I could trust.
[02:41:05] <hayley> You watch any news?
[02:41:41] <selwyn> gilberth: that was the plan, but in order to avoid immigration they invited only germans who were already living in the uk
[02:41:51] <hayley> BTW my Lisp JIT for LC-3 seems to only be 2x faster than the C++ interpreter, but I am going to blame it on 2/3 of all instructions updating flags for no reason. Hypothetically the compiler should see dead writes, but SBCL is not that clever. 
[02:42:36] <hayley> Which is funny, because beach wants me to work on global value numbering, and converting to SSA or SSA-like involves finding the dead writes.
[02:42:38] <gilberth> hayley: I read news. Just watching all those characters wouldn't give me much.
[02:42:56] <hayley> Well, same shit, different state of matter.
[02:43:42] <gilberth> Well, I prefer to stay informed about what is happening.
[02:44:35] <hayley> I don't. Sorry.
[02:45:00] <gilberth> selwyn: Would be fun otherwise, imagine a hoard of Germans, driving lorries, they never drove before, on the wrong side of the road.
[02:45:40] <gilberth> hayley: You should, milady. Sorry.
[02:47:16] <pl> gilberth: it perfectly matches the party that arranged brexit :V
[02:48:10] <gilberth> pl: How so? What's the match?
[02:49:03] <pl> a badly thought of last minute idea to deal with consequences of all previous such ideas
[03:04:56] <hayley> https://www.pcmag.com/news/seagate-creates-an-nvme-hard-disk-drive
[03:04:56] -ixelp- Seagate Creates an NVME Hard Disk Drive | PCMag
[03:13:53] <pl> I would like to point out that "600MB/s" is just lowest tier consumer interfaces, possibly missing the overhead even
[03:14:27] <pl> enterprise hard drives IIRC aren't too hard to find with 2x12Gbit interfaces
[03:15:35] <pl> not everyone continues to connect hard drives using ISA after all :P
[03:18:12] <gilberth> OTOH Being ISA is nice, as I contemplate adding an IDE drive to my TTL cpu design. This would be really trivial to do.
[03:19:27] *** Quits: lotuseater (~user@p200300e7871bd300c158d62dc7544d08.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[03:19:40] <pl> gilberth: well, to directly drive it you'd probably have to grab a very old PATA drive
[03:20:25] <pl> at such point I'm not sure if I wouldn't bite the bullet and simply figure a way to attach a modern controller anyway, or do something weird like ancient SCSI connected to SCSI2SD
[03:21:09] <gilberth> I still have plenty. BTW I find it ironic that there was DMA for floppy drives, but not for IDE initially.
[03:22:04] <pl> because FDC fits in the original IBM PC design, while IDE is... well, a cancerous growth? :P
[03:22:31] <gilberth> pl: Too much hassle for a TTL CPU.
[03:23:13] <pl> for example, NCR 5380 is IIRC very easy to integrate into IBM PC design, including DMA
[03:24:31] <pl> (put enough latching for either port or memory-mapped i/o plus connect simple DMA channel controller)
[03:24:52] <gilberth> What surprises me most, is that Linux took ages to keep interrupts enabled while doing a PIO transfer. It was so slow that at times characters coming from your modem could get lost.
[03:28:02] <gilberth> pl: Actually I would rather prefer a network interface instead of a disk interface. The primitive design of mine has no MMU anyway, so a file server should do. It would also be nicer to work with. I could implement the Chaosnet protocol :-)
[03:28:56] * pl would probably cheat and use serial networking :D
[03:30:43] <gilberth> I will indeed do that initially. But a network interface is nice. I also have plenty of ISA network adapters, which I could use.
[03:31:53] <gilberth> Perhaps I design my board with an ATX form factor. Then you could also plug in a video board, provided you find one that doesn't rely on its BIOS to get initialized.
[03:35:33] <selwyn> trying to figure out how ill the queen is is like reading pravda
[03:35:45] <selwyn> you have to read between the lines
[03:42:50] <selwyn> she has a 'back sprain'
[03:48:44] <pl> what, overdid it in game of ballistic corgie?
[04:06:08] <hayley> pl: So there's faster SATA, or some other not-NVMe interface (SCSI?) that's faster?
[04:06:36] <pl> hayley: current SAS is 12Gbit per lane, with 2 lane drives being somewhat common
[04:07:27] <hayley> Right, thanks.
[04:08:15] <pl> NVMe interface on hard drive would make it easier to have unified storage plane based on NVMeOF
[04:09:32] <pl> OTOH I think that's more of a problem if you insist on Ethernet, as with IB you have SRP and NVMeOF easily interacting on similar gear without needing iSCSI controller on JBOD or similar
[04:11:45] * hayley has https://www.youtube.com/watch?v=lwx8A0XUpfM stuck in head somehow
[04:17:51] <pl> IB makes it really easy to route everything together, methinks, pity it's rather... expensive
[04:18:01] <pl> ... but only for new gear (400gbit)
[04:38:14] <hayley> Can any system actually process 400Gb/s?
[04:41:26] <hayley> DDR4-3200 is 25.6GB/s/channel, i.e. 204.8Gb/s/channel, but then we need to be able to process it too I guess
[04:42:37] <gilberth> When all you do is to shuffle that data unseen somewhere else, there is not much processing. But: Where to shuffle it to?
[04:44:08] <hayley> A copy would halve that bandwidth figure, so you'd need quad channel DDR4-3200 to copy from a 400Gb source.
[04:44:53] <hayley> Slightly less exciting to have 300krequests/s node synchronisation on one connection now.
[04:45:10] <gilberth> What about /dev/null? How fast is that?
[04:45:57] <hayley> One second...
[04:46:28] <gilberth> You run a benchmark? dd if=/dev/zero of=/dev/null?
[04:46:30] <hayley> pv /dev/zero > /dev/null gives somewhere between 10 and 13 GB/s 
[04:47:23] <gilberth> Hmm.
[04:47:41] * hayley spots that the Twitter font moves the : up if you write :) or :-)
[04:48:44] <gilberth> I wonder, when someone will enter ":)" in a ligature table to map it to an emoji.
[04:49:11] <hayley> gilberth: Look at the ::) in https://twitter.com/nodefunallowed/status/1460054568423677954
[04:49:44] <gilberth> Strange. Is it the font doing that?
[04:50:10] <hayley> Yes.
[04:50:11] <hayley> It also doesn't work on (: or ):
[04:51:11] <hayley> My poll for article naming is tied though. 
[04:51:56] <hayley> Would you rather call something making fun of manual cooperative scheduling^W^W^Wasync/await "When concurrency doesn't happen concurrently" or "I'll YIELD to none!"
[04:55:05] <gilberth> hayley: It works for :-( and for ;-), too.
[04:57:02] <gilberth> hayley: And :-|
[04:58:21] <hayley> I should check :D
[04:58:45] <hayley> Nope, :D and D: look silly.
[05:00:11] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 268 seconds)
[05:01:10] *** Joins: X-Scale` (~ARM@31.22.167.45)
[05:02:29] *** X-Scale` is now known as X-Scale
[05:14:54] <hayley> https://www.youtube.com/watch?v=yKYkHAOpnJM
[05:14:54] -ixelp- The iMac SL (1999) - YouTube
[05:23:22] <gilberth> hayley: Speaking of stacks, I always felt like backtraces being written in the wrong way. The most current activation frame should be at the bottom, so that frames are displayed in chronological order.
[05:26:55] <gilberth> But I can see, how this would be inconvenient for user interfaces.
[05:31:02] <moon-child> gilberth: the call stack does not show past computation, but future computation
[05:31:06] <moon-child> so it is in chronological order
[05:32:02] <moon-child> from a more practical standpoint, we read from top to bottom.  And usually you do not need _all_ the context that a full backtrace provides.  'Where am I - how did I get there - how did I get _there_ - ok; that's enough information; now I understand'
[05:33:56] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[05:34:17] <gilberth> moon-child: The latter is why I said, it would be tricky for a user interface. And the trace shows past activations. And I actually prefer the most important information being at the bottom, where --- on a listener interface --- my prompt is.
[05:34:24] <dave0> maw
[05:35:59] <gilberth> And I don't like the recent trend to spit out a screen full of lines for one single error and hiding the actual error message among all that scribble. Often at the top and scrolled past view.
[05:36:16] <gilberth> Hello dave0!
[05:36:22] <dave0> hey gilberth !
[05:36:50] <hayley> It is 2021, but we cannot afford hypertext?
[05:36:52] <gilberth> More space! I love space!
[05:37:32] <gilberth> hayley: Do we really ever had hypertext?
[05:37:56] <moon-child> perhaps we should add supertext, and meta text, and alt text
[05:37:57] <hayley> I guess that "language server protocol" stuff sorta does it, but I haven't used it, and it doesn't look as cohesive as I'd like.
[05:38:37] <moon-child> hayley: lsp projects a 'hyper' interpretation onto plain text; but the text itself remains canonical and plain
[05:39:13] <hayley> e.g. if I was writing ML and had a type error, it should say "I inferred the type list int _here_, _here_ and _here_ but you use it in a place _here_ where it requires type set int _here_". But AIUI it only can put down one location at a time.
[05:40:20] <moon-child> that's an incidental limitation.  But imo much more interesting is a purely structural representation where you attach errors to ast nodes which you edit directly in some graphical fashion
[05:40:25] <gilberth> I like interfaces which would just expand such a "here" in place.
[05:40:59] <hayley> Furthermore, I also don't want to see all the places unless I expand the error or something like that, only revealing more "verbosity" if I need it. So it can't just be dumb text.
[05:41:33] <gilberth> For Lisp I'd like a listener which would allow me to abbrev pprint'ed stuff by default, but allow me to click on any ellipses like "..." or "#" to drill down.
[05:42:11] * hayley nods
[05:43:16] <gilberth> And the pretty printed output should relayout when I change the window width. I'll get there eventually, when I move past the silly CLIM 2.
[06:02:48] <hayley> So beach suggested a "SFA" (static few assignments) form which is SSA but you have an assignment in each predecessor, rather than a phi instruction. But I don't think Cleavir is even in SFA form, so someone still has to write a converter pass?
[06:05:39] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[06:06:44] <hayley> https://twitter.com/SandyFrizzle/status/1459997153624002571 "I now have every game from Squid Game built in real life"
[06:28:20] *** Quits: slyrus (~slyrus@192-184-223-165.static.sonic.net) (Quit: Leaving)
[07:31:01] <copec> piping /dev/zero to /dev/null is probably copying from kernel space to user space and back to kernel space
[07:33:04] <copec> Most linux distros have a memtest86 package that will add a grub option, that's usually a good peak performance test
[07:40:18] <gilberth> Silly copy-happy UNIX.
[07:41:17] <gilberth> And if Linux still really copies in that case, it's poor. I don't know if it does.
[07:41:36] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[07:43:08] <gilberth> Raku is a great target for a compiler. It has neither goto, nor TCO. Otherwise I am surprised that is has an integer data type and a ratio datatype.
[07:43:47] <hayley> "You can't write bug-free code" "What part of Spec == Init /\ [][Step]_vars do you not understand?"
[07:43:56] <copec> If there is a *nix that _doesn't_ copy, it would be Linux, they always go for performance first
[07:44:15] <copec> https://en.wikipedia.org/wiki/Splice_(system_call)
[07:44:17] <hayley> io_uring accelerated dd if=/dev/zero of=/dev/null
[07:45:07] * hayley uploaded an image: (275KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/ZOziSwKojLXyxRNoWGhIGwqJ/lamport2.png >
[07:45:29] <gilberth> copec: A kernel can implement copy-free I/O, with read(2) and write(2), if it cared.
[07:49:56] <hayley> https://www.youtube.com/watch?v=Ryc8gGfnL5M
[07:49:57] -ixelp- Pirates - YouTube
[07:51:34] <moon-child> gilberth: raku is slow though
[07:52:15] <moon-child> gilberth: re copy-free: with cow?  I suppose
[07:53:57] <copec> If I'm reading this right, could the extended LOOP form just have a name? https://unaen.org/cl/HyperSpec/Body/m_loop.htm#loop
[07:54:30] <gilberth> moon-child: For one thing. And not everything is a block device for which you want a cache.
[07:55:01] <moon-child> copec: that's right
[07:55:39] <White_Flame> LOOP doesn't even need anything else.  (loop) is a valid infinite loop
[07:55:44] <copec> at least SBCL always errors with blah where LOOP keyword expected
[07:56:02] <White_Flame> huh?
[07:56:10] <White_Flame> (loop named foo) => infinite loop, no errors
[07:56:41] <copec> now put some lisp expression that return-from foo
[07:57:14] <White_Flame> (loop named foo do (return-from foo)) => NIL
[07:57:15] <moon-child> (loop named foo do (return-from foo 5)) #| --> 5 |#
[07:58:08] <moon-child> (loop named foo (return-from foo))  doesn't work, because it's a non-simple loop form, so you need the DO in front of forms you want evaluated
[07:58:24] <copec> but DO is part of main-clause
[07:58:36] <copec> which * means 0 or more times, right?
[07:58:58] <White_Flame> main-clause ::= unconditional | ...
[07:59:04] <White_Flame> unconditional ::= {do | doing} ....
[07:59:25] <copec>  loop [name-clause] {variable-clause}* {main-clause}* => result*
[07:59:33] <White_Flame> but yeah, (loop named foo) has 0 main clauses, the one with return-from has 1 main-clause
[07:59:46] <White_Flame> main-clause still needs its own DO
[07:59:52] <White_Flame> for the unconditional case
[07:59:53] <copec> I guess that doesn't have {expression|*
[08:00:13] <White_Flame> it has compound-form+
[08:01:01] <White_Flame> hmm, are you trying to use a ``simple'' loop form?
[08:01:01] <copec> I'm trying to convert my processing of tree data structures from recursive functions to loops
[08:01:21] <moon-child> huh, recursion seems like a natural fit for trees
[08:01:35] <White_Flame> well, then use LOOPs? :-P
[08:01:41] <copec> I just want to see if I can do it iteration style
[08:03:18] <White_Flame> wow, the price of final fantasy vii for ps1 has really collapsed since ff7r I guess.  It's $20-40 on ebay now, instead of like $500+
[08:03:19] <copec> It seems like multiple nesting of loops, where you have arbitrary lisp instead of loop keywords, that naming simple loop forms would be a plus
[08:03:50] <White_Flame> you can't name a simple loop
[08:03:55] <White_Flame> you can only name extended loops
[08:04:05] <copec> Yeah
[08:04:15] <White_Flame> a simple loop has no loopy doopy things, only lisp
[08:04:36] <moon-child> (defmacro sloop (name &rest stuff) `(block ,name (loop ,@stuff)))
[08:04:37] <copec> It would seem useful to have a name to RETURN-FROM at least
[08:04:59] <copec> I assume simple loop still has a block named nil?
[08:05:14] <White_Flame> yes
[08:05:15] <moon-child> yeah
[08:05:28] <White_Flame> or you could do (loop (block foo ...)) if you want to nest things
[08:05:41] <White_Flame> hmm, no I guess not, that woudn't exit hte loop
[08:05:47] <copec> I'm just wondering out loud, why didn't they then give the option to name simple loops
[08:06:00] <moon-child> well, I guess the problem is you don't want to have to type 'do'?  So then just `(loop named ,name do ,@stuff)
[08:06:02] <White_Flame> it's not a commonly used feature
[08:06:15] <gilberth> copec: Because simple LOOPs are simple.
[08:06:38] <White_Flame> I normally turn to LOOP when I want to take advantage of things like COLLECT
[08:06:50] <White_Flame> so return-from isn't necessarily that often used either
[08:07:06] <White_Flame> (though that's just my style)
[08:07:12] <gilberth> copec: You can't name a DO, DO*, DOLIST, or DOTIMES either.
[08:07:31] <White_Flame> or name a MAPCAR etc to override its return value :-P
[08:07:55] <copec> well maybe you should be able to!
[08:07:55] <moon-child> one thing I do pretty frequently is finally (return ...).  It would be nice to have a resulting-in clause or w/e
[08:07:58] * copec stomps away
[08:08:01] <gilberth> White_Flame: I still need my time to get used to the "new" LOOP. Somehow LOOP and and me have a troubled relationship.
[08:08:11] <White_Flame> yeah, it took me a while to get into it
[08:11:48] <gilberth> Anyhow, I still use MAPCAR, MAPCAN, REDUCE and friends often.
[08:15:51] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[08:16:47] <copec> I'm just attempting to teach myself to think about iteration all the different ways
[08:17:24] *** Quits: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com) (Ping timeout: 256 seconds)
[08:18:17] <copec> finding isomorphic numeric operations, and vectorizing as standard practice
[08:27:30] *** Quits: semz (~none@user/semz) (Ping timeout: 265 seconds)
[08:29:20] <moon-child> copec: re isomorphic numeric operations, I want automatic inversion
[08:29:35] <moon-child> instead of relating x to f(y), relate f¯¹(x) to y
[08:31:34] <hayley> https://www.youtube.com/watch?v=Uo5oxU7Nfv4
[08:31:35] -ixelp- The Ocean Is The Ultimate Solution - YouTube
[08:34:28] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[08:39:50] *** Joins: semz (~none@user/semz)
[08:56:38] *** Quits: Oddity (Oddity@user/oddity) (Remote host closed the connection)
[09:42:26] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:44:29] *** Joins: retropikzel (~retropikz@83.245.254.187)
[09:47:34] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 260 seconds)
[09:49:00] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[10:00:45] <mfiano> moon-child: I could use your assistance if you're free for a minute.
[10:01:43] <moon-child> mfiano: what's up?
[10:02:46] <mfiano> I installed FreeBSD to a VM, and now I want to boot the livecd to make a tar archive of the root partition
[10:03:04] <mfiano> So I can install it on bare metal and then extract over it
[10:03:25] <mfiano> But mounting a zfs partition on the livecd says "No such file or directory"
[10:03:34] <mfiano> I am a newb :)
[10:03:44] <moon-child> that sounds like a very strange approach
[10:03:57] <mfiano> Well the block device is of a different size and partition layout
[10:04:05] <mfiano> So I don't want to backup at the block device level
[10:04:21] <moon-child> I mean, why not just make a new install?
[10:04:31] <moon-child> anyway: how are you mounting?  zpool import?
[10:04:35] <mfiano> Because this took me 4 days to perfect
[10:05:03] <mfiano> Which is why I didn't want to leave my main system inaccessible for that long
[10:05:16] <mfiano> I did `zpool import root` (the name is root)
[10:05:22] <mfiano> I don't know what to do next
[10:05:41] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[10:06:26] <moon-child> try something like: mkdir /tmp/whatever; zfs mount root /tmp/whatever
[10:06:54] <mfiano> Oh, huh. I was trying mount -t zfs ...
[10:07:20] <moon-child> yeah, don't do that.  Zfs hegemony!  All existing block and device abstractions must die!
[10:07:40] <moon-child> actually I guess mount -t zfs has to work, because of fstab.  Idk how though
[10:07:52] <sham1> It probably does something special
[10:07:58] <mfiano> I see. I will probably use UFS on the new system. ZFS uses a lot of ram for a single disk system with only 8G available. Not sure it buys me much
[10:08:01] <sham1> Because yeah, zfs wants to be your only abstraction
[10:08:14] <sham1> Everything is ZFS
[10:09:45] <mfiano> I have been in the freebsd channel for a few days and have seen "my zfs pool finally died" twice already. It doesn't inspire confidence, given I have such a low memory system anyway
[10:10:02] <moon-child> anyway speaking of--you will probably need to tweak your fstab for ufs.  (Probably just leave fstab out of the tarball, so the version the installer sticks in will remain)
[10:12:33] <mfiano> too many arguments for your zfs command
[10:13:20] <moon-child> oh, whoops, that was for unmount.  zfs mount -o mountpoint=/tmp/whatever root?
[10:18:07] <mfiano> Thanks
[10:28:39] *** Quits: ratzkewatzke (~ec2-user@ec2-34-217-87-98.us-west-2.compute.amazonaws.com) (*.net *.split)
[10:28:40] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (*.net *.split)
[10:29:18] *** Joins: ratzkewatzke (~ec2-user@ec2-34-217-87-98.us-west-2.compute.amazonaws.com)
[10:29:43] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[10:33:18] <contrapunctus> Funny...Lisp Web Tales can be had gratis on LeanPub, but requires you to pay with your data (email). And it's not available on LibGen 🤔️
[10:34:22] *** Quits: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se) (*.net *.split)
[10:34:22] *** Quits: okflo (~okflo@lisa.diesenbacher.net) (*.net *.split)
[10:34:23] *** Quits: derelict (derelict@user/derelict) (*.net *.split)
[10:34:57] *** Joins: derelict (~derelict@user/derelict)
[10:35:17] <mfiano> contrapunctus: you on matrix?
[10:35:23] *** Joins: okflo (~okflo@lisa.diesenbacher.net)
[10:35:48] <contrapunctus> mfiano: I have an account but avoid using it...
[10:36:09] <mfiano> ok i'd send it
[10:37:19] <mfiano> otherwise I'm also on Tox
[10:39:33] * mfiano prefers real p2p (tox)
[10:43:47] <contrapunctus> mfiano: can't you send it over the Matrix-IRC bridge?
[10:44:17] <mfiano> No
[10:45:03] <mfiano> I dont use the IRC bridge because its flaky as hell
[10:50:13] <contrapunctus> mfiano: cool ^^ Tox ID?
[10:50:35] <mfiano> 40150F889E584ACF5568714836E524294D93D7CD2610C71A97C0FDDFC0BB3C18AFDF9DE57234
[10:51:45] <shka> the main problem with the IM is that it is no longer popular
[10:52:08] <shka> every "normal" person i know of just uses FB chat or discord
[10:53:03] <contrapunctus> or Slack, or WhatsApp
[10:53:17] <shka> well, slack only for work
[10:53:26] <shka> and i've never use whatsapp in my life
[10:53:38] <shka> but just corporate bullshit everywhere 
[10:54:38] <contrapunctus> shka: WhatsApp is everything in India...even my ISP and phone carrier keep announcing their support for services over WA, and just about every small store supports ordering over WA :(
[10:54:40] <shka> and everything is focused on the mobile 
[10:55:00] <contrapunctus> Wish they'd use XMPP instead.
[10:55:17] <shka> and the days when texting was about the text seem to be coming to the end
[10:55:19] <sham1> IIRC WA was based on XMPP at one point
[10:55:49] <contrapunctus> sham1: yeah...binary encoded XMPP with their own extensions.
[10:56:14] <contrapunctus> (by the way, if anyone is on XMPP and looking for an active Lisp room, hop by xmpp:lisp@conference.a3.pm?join )
[10:56:19] <sham1> Binary-encoded XMPP sounds counter-productive considering that isn't the whole point of XMPP XML
[10:57:38] <shka> binary encoded text, great
[10:57:49] <sham1> You know what I mean
[10:58:31] <contrapunctus> I may be using incorrect terminology there.
[11:10:49] <mfiano> moon-child: would you happen to know how to dump a whole zfs pool to a single file to be stored on another machine through ssh? I don't have enough space locally, nor do i know how to dump it to a file
[11:12:46] <mfiano> i want to do that too just to be safe :)
[11:13:01] <mfiano> i'm taking every precaution i can think of here...this took a lot of time
[11:20:41] <moon-child> zfs send
[11:21:05] <mfiano> i'm reading about it. i'm not quite sure which flags i want or how to send over ssh to some non-BSD machine
[11:23:08] <moon-child> hm, looking through shell history I can only find the cmdline for the incremental version
[11:23:13] <moon-child> good luck!
[11:23:20] <moon-child> 'send over ssh' rsync?
[11:24:54] <mfiano> the manpage says it sends the second snapshot...
[11:25:10] <mfiano> i dont know if i have any snapshots. i didnt configure zfs at all. just created it and installed packages
[11:25:39] <moon-child> yeah, you have to make a snapshot in order to zfs send
[11:25:49] <mfiano> hmm :/
[11:26:00] <moon-child> which is sensible if you think about it: what if you make a change while the send is running?  Snapshot makes it atomic
[11:26:01] <mfiano> i wanted to finish this tonight. guess that ain't happening
[11:26:27] <mfiano> the pool is mounted read-only
[11:26:34] <mfiano> from a livecd
[11:27:15] <moon-child> should be able to remount it as read-write from the cd, no?
[11:27:30] <mfiano> yes but i dont see the point
[11:27:34] <mfiano> i dont want to alter it
[11:28:33] <moon-child> oh huh, looks like you can do that
[11:28:35] <moon-child> https://www.illumos.org/issues/4368
[11:29:28] <mfiano> i need a guide or something. this manpage is confusing
[11:29:38] <mfiano> for snapshotting, sending, and restoring
[11:29:48] <mfiano> or if the first is optional, even better
[11:30:05] <contrapunctus> mfiano: https://wiki.archlinux.org/title/Zfs ?
[11:30:30] <contrapunctus> (ah, but I think you said you're on BSD?)
[11:30:34] <mfiano> Yeah
[11:30:59] <moon-child> eh, arch wiki is helpful either way
[11:31:08] <moon-child> I've used it on freebsd
[11:32:53] <mfiano> I guess I want zfs send -R?
[11:35:07] <mfiano> I'm not seeing how to output it unless it writes to stdout
[11:36:23] <moon-child> it writes to stdout
[11:36:38] <moon-child> classic pipeline is  zfs send|ssh zfs recv
[11:37:40] <mfiano> so I guess I could do ... | ssh host "cat > file"
[11:38:02] <moon-child> yeah
[11:38:06] <mfiano> something is telling me I need at least -R though
[11:38:09] <mfiano> not sure what else
[11:38:35] <mfiano> and not sure if i specify the pool name or some other id
[11:39:35] <mfiano> That is, I'm not sure which object is the "filesystem" argument
[11:39:53] <mfiano> or do I want "volume"
[11:40:07] <mfiano> the manpage is hard for me to parse as a beginner to zfs
[11:40:53] <moon-child> i think you specify the pool name
[11:42:43] <mfiano> "Unsupported flag with filesystem or bookmark"
[11:43:34] <mfiano> Oh that's only for snapshots
[11:43:37] <mfiano> Hmm
[11:45:46] <mfiano> Well it's sending something to my server. I'll have to install another virtual disk and try restoring it before I nuke my bare metal disk
[11:50:11] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 264 seconds)
[11:59:44] <hayley> What's funny is that I suck at video games, despite being able to type 130-140wpm or so. Can't aim, apparently my strategies are shit for strategy games...
[12:00:19] *** Joins: rogersm (~rogersm@90.166.177.48)
[12:04:24] <moon-child> typing speed is bandwidth; reaction time is latency
[12:05:09] <hayley> Suppose so.
[12:06:06] <mfiano> I do too. I prefer turn-based tactical games like Wasteland 2-3 (or similarly Fallout Tactics)
[12:13:30] <mfiano> moon-child: hmm, zfs-receive is even more confusing. Not quite sure how to receive a _filesystem_ file from ssh, and write it as a new pool
[12:13:58] <hayley> I assume everyone here heard about the guy I talked to, who said that you could just fuzz test to find out if bounds checks were necessary.
[12:15:03] <moon-child> mfiano: iirc you create the pool first, and then you recv to make a new snapshot
[12:15:59] <mfiano> what is the proper way to nuke a zfs pool to be empty?
[12:16:12] <mfiano> I duplicated my vdisk so i can try that
[12:17:09] <mfiano> like, no snapshots, no files, nothing. just reset the pool
[12:18:16] <mfiano> i had the installer create it and import it/mount it for me but i'm doing everything on the cli to verify the integrity of my backup
[12:18:31] <moon-child> no idea
[12:21:35] <Alfr> Good morning.
[12:28:25] <moon-child> 'Any sufficiently complicated Rc<> contains an ad-hoc, informally-specified, bug-ridden, slow implementation of half an incremental GC.'
[12:30:03] <hayley> Baker's 10th law
[12:35:38] *** Quits: retropikzel (~retropikz@83.245.254.187) (Remote host closed the connection)
[12:36:17] *** Joins: retropikzel (~retropikz@83-245-254-187-nat-p.elisa-mobile.fi)
[12:38:21] *** Quits: rogersm (~rogersm@90.166.177.48) (Read error: Connection reset by peer)
[12:40:44] *** Quits: retropikzel (~retropikz@83-245-254-187-nat-p.elisa-mobile.fi) (Read error: Connection reset by peer)
[12:41:01] *** Joins: retropikzel (~retropikz@83.245.254.187)
[12:41:37] <sham1> Can't be a law but has to be a rule to match Greenspun
[12:42:08] *** Quits: retropikzel (~retropikz@83.245.254.187) (Remote host closed the connection)
[12:45:08] *** Joins: retropikzel (~retropikz@83-245-254-187-nat-p.elisa-mobile.fi)
[12:48:55] <hayley> https://www.youtube.com/watch?v=ns-fw7a16Gw
[12:48:55] -ixelp- jean-jacques burnel - Freddie Laker - YouTube
[12:58:39] <mfiano> moon-child: ZFS send/receive is badass! round trip offsite backup/restore worked. This is reason enough to keep using ZFS.
[12:59:21] <mfiano> It's awesome you can work with snapshots _or_ filesystems
[12:59:29] <mfiano> and incremental is nice too
[13:00:25] <moon-child> 'File not downloaded.  Potential security risk.  The file uses an insecure connection.  It may be corrupted or tampered with during the download process.  You can search for an alternate download source or try again later.'
[13:00:27] <moon-child> what the FUCK firefox
[13:00:34] <moon-child> that's it.  That's the last straw.  I'm switching to chrome
[13:00:42] <hayley> BANNED from the metamodular.com gang
[13:01:33] <mfiano> link?
[13:01:42] <mfiano> I'd like to try on my firefox
[13:01:49] <mfiano> I have never seen that
[13:02:16] <hayley> I recall Firefox did get pissy when I downloaded some video demo off http://metamodular.com (search the #sicl logs?) but that's it
[13:02:17] -ixelp- MetaModular
[13:02:46] <moon-child> mfiano: I assume you get that when downloading a file over http.  Happened to me clicking on the link at https://www.reddit.com/r/Common_Lisp/comments/qu0s3z/looking_for_manuals_of_obscureolder_repls/hkoj1n9/
[13:02:47] -ixelp- Looking for Manuals of Obscure/Older REPLs : Common_Lisp
[13:03:04] <moon-child> interestingly it only happens when clicking on a link; if you enter it directly into the address bar, it works fine
[13:04:11] <mfiano> Confirmed
[13:04:31] <mfiano> It's just a warning because of http being insecure
[13:05:02] <moon-child> it's not a warning.  It's a dark pattern that claims you cannot download the file
[13:05:20] <hayley> .oO(Is Google paying them to make Firefox shit, so that they can have a browser monopoly?)
[13:05:29] <moon-child> like how ff and chrome both claim you cannot connect to an hsts domain which is not using https (or has an expired cert etc).  Even though you obviously can and curl -k will do it
[13:05:39] <mfiano> moon-child: For me it has an Allow button
[13:06:09] <moon-child> anyway looks like you can toggle dom.block_download_insecure, so I'm too lazy to actually switch to chrome, esp since they seem to have fixed the stale frame bug
[13:06:18] <moon-child> mfiano: hmmm
[13:06:35] <mfiano> if you click the expanding arrow symbol that is
[13:11:02] <moon-child> oh, wow, apparently somebody is doing opensource moltengl with support for opengl 4.6
[13:11:36] <mfiano> sigh, too bad gptfdisk isn't available for freebsd
[13:12:25] <mfiano> would have liked to backup the gpt table and partitions too like i do for linux. that is more research...
[13:14:11] <mfiano> `sgdisk --backup=gpt.bin /dev/ada0` would have been nice and simple.
[13:20:03] <mfiano> eh, too lazy. I'll just boot a linux live image with it.
[13:22:29] <pl> moon-child: you mean zink?
[13:22:58] <pl> ah, molten... so on metal?
[13:24:41] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[13:32:56] <moon-child> no, a new thing
[13:32:59] <moon-child> unreleased as yet
[13:44:47] *** Joins: lisp123 (~lisp123@5.30.23.247)
[13:49:28] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[13:58:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[14:02:59] <selwyn> learning about accents
[14:03:13] <selwyn> do foreign learners of english get to pick an accent to learn?
[14:04:45] <ck_> in my experience, this comes mostly from staying in country for a while and picking up the local one
[14:06:07] <ck_> you can tell by some of the pixels and the fact that I typed this in a very Harrow accent
[14:06:42] <selwyn> lol
[14:09:36] <sham1> And I can tell from personal experience that if one doesn't live in a place where $LANGUAGE is not spoken naturally, the accent tends to of course just be anything one is exposed to
[14:16:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:34:17] *** Quits: retropikzel (~retropikz@83-245-254-187-nat-p.elisa-mobile.fi) (Remote host closed the connection)
[14:35:10] *** Joins: retropikzel (~retropikz@83-245-254-187-nat-p.elisa-mobile.fi)
[15:24:28] <selwyn> https://cdn.discordapp.com/attachments/873281830856577044/909773257723510814/unknown.png
[15:24:31] <selwyn> 🅰️
[15:28:18] <hayley> 🅰
[15:29:53] <selwyn> we will defend our a
[15:31:19] <hayley> (A)
[15:32:21] <hayley> "* hayley wonders whether to do Cleavir-style data flow and control flow graphs, or C2-style sea of nodes wherein the control flow is an abuse of "data" flow nodes. For my own compiler, of course, I can't change that much of Cleavir."
[15:32:28] <hayley> Oh, how the turns tabled.
[15:33:36] *** Joins: notzmv (~zmv@user/notzmv)
[15:36:03] <sham1> That generated picture looks like a screenshot from a Bill Wurtz video
[15:37:00] <selwyn> it seems to be even better than it was last week
[15:37:07] <selwyn> i wonder if they are online training it
[15:43:29] <dave0> hayley: smalltalk on hackernews: https://news.ycombinator.com/item?id=29223880
[15:43:30] -ixelp- The Rise and Fall of Commercial Smalltalk | Hacker News
[15:43:35] <dave0> i remember smalltalk from before
[15:44:12] <selwyn> every java book i have read pays tribute to smalltalk/simular
[15:44:14] <selwyn> simula
[15:56:17] <hayley> IMO only compiler hackers are morally allowed to, since Java the language is not awfully Smalltalk-y, but the compilers are yoinked from Smalltalk, Strongtalk, Self, etc.
[15:56:52] <hayley> Gilad said the technology was there, but lobotomized.
[15:59:08] <hayley> Ironically, Newspeak nowadays has none of the technology, as the current VM is a bytecode interpreter in C++, after being hosted on Squeak.
[16:01:18] <selwyn> they pay tribute to them more for being the originators of oop
[16:01:46] <selwyn> however, they are also cautionary examples because they 'take oop too far' and are 'slow'
[16:02:45] <selwyn> example is 'if' being an object in smalltalk instead of a syntactical control structure, or whatever it is in java
[16:04:31] *** Joins: random-nick (~random-ni@87.116.165.220)
[16:04:39] <sham1> If is a statement in Java
[16:04:46] <hayley> They didn't read Craig Chamber's PhD thesis either?
[16:04:47] <selwyn> right
[16:04:53] <hayley> *Chambers's
[16:05:27] <hayley> TL/DR: If you inline ifTrue/ifFalse, and you do, who gives a shit?
[16:06:20] <sham1> Some people just want to see the semantics acually match what actually happens
[16:06:41] <sham1> It's silly, not even C, the paramount of "low-level" does that
[16:07:59] <hayley> Well, if your if branches are simple enough, the compiler makes a CMOV or some other select instruction anyway.
[16:08:35] <sham1> Mhm
[16:09:55] <hayley> Also I heard that Java streams are mediocre cause the closures are invoked rather than being inlined (think deforestation). But Self could likely do it as it already inlined control flow closures.
[16:10:18] <hayley> Well, not proper deforestation, but at least producing intermediate objects would be turned into inline loops.
[16:13:05] <hayley> Isn't it funny that Java took another 30 years to rediscover block closures?
[16:14:31] <selwyn> i like the conditional operator in java and almost regret not using it more
[16:14:32] <pjb> hayley: there's clearly an education problem…
[16:14:39] <selwyn> is it a concession to common lisp if?
[16:15:30] <sham1> Well the conditional operator is from C and that could very well trace its history all the way back to ALGOL
[16:15:54] <selwyn> the conditional operator is from c
[16:15:57] <selwyn> damn i am ignorant
[16:19:27] <sham1> Of course, it seems like the very first conditional expression-type thing is from the Lambda Calculus with Church encoded booleans
[16:22:19] <hayley> Didn't JMC suggest the conditional operator for ALGOL following COND in Lisp?
[16:22:48] <hayley> Oh, the ?: thing rather than the if statement.
[16:23:30] <hayley> Well, COND is just cooler ?: as everything is an expression.
[16:25:33] <sham1> And it has multiple branches
[16:25:33] <pjb> (cond (a e) (b f) (c g) (d h) (t i)) --> return a?e:(b?f:(c?g:(d?h:i)));
[16:37:30] <selwyn> :?
[16:37:40] <gilberth> The original LISP also has this distinction between statements and expressions, as SETQ and GO may appear at the top-level of a PROG only.
[16:38:29] <gilberth> This is why it is called the "program feature" :)
[16:46:05] <sham1> I wonder where it changed so that everything* is an expression
[16:46:09] <sham1> *: almost everything
[16:47:58] <gilberth> PROG is funny. In the interpreter it is only allowed at the top level of PROG. The GO is computed, so you would say e.g. (GO (COND ((NULL Q) 'DONE) (T 'MORE)))
[16:49:26] <gilberth> In the compiler, you would say (COND ((NULL Q) (GO DONE)) (T (GO MORE))) instead. And in the compiler the GO is only allowed within either directly in PROG or some tail position of a COND, which itself is top-level in that PROG.
[16:49:48] <gilberth> Standard Lisp still has that restriction.
[16:50:57] <sham1> And GO in that is goto?
[16:51:10] <gilberth> Yep.
[16:53:14] <gilberth> You'd say (PROG ((Q ...)) AGAIN (COND ((NULL Q) (GO DONE))) (PRINT (CAR Q)) (SETQ Q (CDR Q)) (GO AGAIN)) for a simple loop to iterate over the elements of a list Q.
[16:54:25] <gilberth> Or in the interpreter (PROG ((Q ...)) (GO (COND ((NULL Q) 'DONE) (T 'MORE)) MORE (PRINT (CAR Q)) (SETQ Q (CDR Q)) (GO 'AGAIN) DONE)
[16:54:39] <gilberth> I missed the final DONE label in the former example.
[16:55:52] <gilberth> Anyhow, I wonder if there is any language but Common Lisp, which allows you to have a closure around a GO. I have not seen any so far.
[16:56:53] <gilberth> And btw, when GO is only allowed at tail position, you could trivially transform a PROG into a LABELS. I really have no clue, if that is accidental or intentional.
[16:58:57] <gilberth> Consider (LABELS ((AGAIN (Q) (COND ((NULL Q)) (T (MORE Q)))) (MORE (Q) (PRINT (CAR Q)) (AGAIN (CDR Q)))) (AGAIN <somelist>)) ;Look ma, no GOTO, no SETQ.
[17:00:48] <gilberth> And LABEL(S) was there before there was PROG.
[17:03:02] <dave0> nite all
[17:03:52] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:04:03] <gilberth> Or, if you like the computed GO: (LABELS ((AGAIN (Q) (FUNCALL (COND ((NULL Q) #'DONE) (T #'MORE)) Q)) (MORE (Q) (PRINT (CAR Q)) (AGAIN (CDR Q))) (DONE (Q) NIL)) (AGAIN <somelist>))
[17:06:02] <gilberth> Provided you have TCO, it's all the same. And as PostScript has TCO specified, this is a way to have a goto with PostScript, for example.
[17:07:43] <gilberth> And in this regard loop-unrolling becomes an instance of inlining, when you think about it.
[17:08:37] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[17:09:15] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[17:13:44] <gilberth> And thus, when a language has neither a goto, nor TCO, it becomes a very inconvenient target for a compiler. JS has neither and Raku has neither.
[17:15:29] <gilberth> You will end up with simulating goto with for (pc = 0; pc != 9999;) switch (pc) { case 0: ... pc=1; break; case 1: ...; ... pc=9999; }
[17:27:55] <selwyn> https://nitter.fdn.fr/pic/media%2FFD6xG24WQAs2cgx.jpg%3Fname%3Dorig
[17:29:46] <gilberth> "Daylight saving" should be called We-all-get-up-one-hour-earlier-time.
[17:31:21] <gilberth> As if there would be more daylight, when I raise early.
[17:46:29] *** Joins: lisp123 (~lisp123@5.30.23.247)
[17:50:59] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[18:01:41] <sham1> Not much of a saving nowadays. Perhaps it made more sense back with tungsten filament lamps, but not nowadays with very energy-efficient LEDs
[18:04:07] <gilberth> Well, if there would be plenty of energy that won't be a concern. And all I read about that was that the effect is zilch.
[18:04:32] <sham1> Mmmhm
[18:05:55] <gilberth> And btw, we live in a world governed by early birds. It might happen that for a good night sleep you would need to crash at 22:00. However with DST, there still is daylight at 23:00 in summer time. So only the curtain industry benefits.
[18:08:20] <gilberth> Anybody is free to raise one hour earlier in summer to belief to have more daylight. What I find silly, is that all should do that by law. And working hours are too early anyway.
[18:12:02] <gilberth> Eight hours sleep is healthy. The average time to get naturally asleep is approx 20min after midnight. Midnight with DST is at 01:20 here, which would mean, you get asleep at 01:40. Plus eight hours is 9:40. Then you need to get showered, dressed, a breakfast eaten, and commuted to work. That easily takes two hours, so you shouldn't be forced to hit work before 11:40.
[18:13:00] <gilberth> When you're not an early bird, that would be later even. I consider it unhealthy to permanently sleep different than your natural sleep pattern.
[18:14:51] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[18:15:17] *** Quits: retropikzel (~retropikz@83-245-254-187-nat-p.elisa-mobile.fi) (Quit: Leaving)
[18:24:34] <edgar-rft> I'm more like a late worm :-)
[18:30:07] <gilberth> Yes, and so you're safe from being eaten by that early bird. A good strategy.
[18:44:17] *** Joins: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se)
[18:55:53] *** Joins: ln43 (~ln43@user/ln43)
[18:56:02] <ln43> Hi all
[19:01:46] <ln43> https://www.youtube.com/watch?v=4qDYa2aIBxw
[19:01:47] -ixelp- Symptom of the Universe (2009 - Remaster) - YouTube
[19:08:46] <ln43> https://www.youtube.com/watch?v=YmJIccPWnEk
[19:08:46] -ixelp- Stargazer - YouTube
[19:11:42] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:16:46] <ln43> https://www.youtube.com/watch?v=CJxpKlTID2Q
[19:16:46] -ixelp- PROCOL HARUM - A Whiter Shade of Pale - STEREO - YouTube
[19:23:25] <ln43> https://www.youtube.com/watch?v=k10HtOF-LSA
[19:23:26] -ixelp- Françoise Hardy - Tous Les Garçons Et Les Filles (legendada/ traduzida em português) - YouTube
[19:25:49] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:30:06] <ln43> https://www.youtube.com/watch?v=zbtNeGQF95w
[19:30:07] -ixelp- IMAGINATION - Just An Illusion (Remix) (1982) - YouTube
[19:35:23] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[19:36:20] <ln43> https://www.youtube.com/watch?v=_GKQi4a78ZE
[19:36:20] -ixelp- Gazebo - I Like Chopin - YouTube
[19:41:14] *** Joins: treflip (~user@95.79.32.99)
[19:42:01] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[19:42:28] <ln43> https://www.youtube.com/watch?v=8ELnhjGw4Zs
[19:42:28] -ixelp- Gilbert O'Sullivan - Alone Again (Naturally) - YouTube
[19:56:21] *** Quits: phantomics (~phantomic@71-218-252-43.hlrn.qwest.net) (Ping timeout: 245 seconds)
[19:56:33] <shka> https://www.youtube.com/watch?v=vy3KBgT1dRw
[19:56:33] -ixelp- Half-Life 2 - Triage at Dawn (synthwave remix) - YouTube
[19:58:44] *** Joins: lisp123 (~lisp123@5.30.23.247)
[19:59:30] *** Quits: ln43 (~ln43@user/ln43) (Ping timeout: 256 seconds)
[20:03:59] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 264 seconds)
[20:15:56] *** Joins: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com)
[20:20:43] *** Joins: jasom (~aidenn@2600:8802:7fa0:500:f833:278f:1567:d354)
[20:24:05] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[20:38:16] *** Joins: phantomics (~phantomic@97-118-231-120.hlrn.qwest.net)
[20:45:37] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[20:47:50] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[21:06:05] *** Joins: bcasiello_ (~bcasiello@2600:380:8d63:6973:b809:997f:c4c0:f439)
[21:09:53] *** Quits: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com) (Ping timeout: 250 seconds)
[21:28:45] <White_Flame> I love finding gaming related videos from people unconventional for the audience: https://www.youtube.com/watch?v=rHhIOqaklwE
[21:28:45] -ixelp- Shin Megami Tensei V :: Fall of Man Premium Edition :: Unboxing - YouTube
[21:30:29] <copec> ^That's awesome
[21:39:59] *** Quits: treflip (~user@95.79.32.99) (Quit: good night)
[21:52:56] *** Joins: bcasiello__ (~bcasiello@066-189-087-112.biz.spectrum.com)
[21:56:47] *** Quits: bcasiello_ (~bcasiello@2600:380:8d63:6973:b809:997f:c4c0:f439) (Ping timeout: 264 seconds)
[22:19:51] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[22:26:54] *** Joins: Alfr (~Alfr@user/alfr)
[22:28:35] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[22:31:48] *** Joins: Alfr (~Alfr@user/alfr)
[22:33:57] *** Quits: Alfr (~Alfr@user/alfr) (Remote host closed the connection)
[22:43:44] *** Quits: minion (~minion@common-lisp.net) (Read error: Connection reset by peer)
[22:45:06] *** Joins: minion (~minion@common-lisp.net)
[22:48:04] *** Joins: Alfr (~Alfr@user/alfr)
[23:13:54] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[23:14:20] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[23:18:58] *** Joins: Inline (~Inline@2a02:908:1252:7a80:7c12:e31e:34fb:c517)
[23:45:50] *** Joins: slyrus (~slyrus@192-184-223-165.static.sonic.net)
