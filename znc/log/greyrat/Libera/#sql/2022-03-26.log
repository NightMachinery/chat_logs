[00:13:38] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[00:17:49] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Ping timeout: 240 seconds)
[00:31:03] *** Quits: MasterTMO (uid251870@id-251870.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[00:50:08] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[00:51:04] *** Quits: PTNapivoski (~PTNapivos@179.189.133.33) (Read error: Connection reset by peer)
[00:51:41] *** Joins: PTNapivoski (~PTNapivos@179.189.133.33)
[00:52:13] *** Quits: PTNapivoski (~PTNapivos@179.189.133.33) (Client Quit)
[00:57:13] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:04:08] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Read error: Connection reset by peer)
[01:07:04] *** Joins: sceptttre (~sceptttre@2603-6011-df05-84ab-ac30-213f-3501-dcb6.res6.spectrum.com)
[01:07:49] <sceptttre> I was here earlier and didn't get any responses. I was wondering if anyone could shed some light onto this issue, I'd like to model this https://www.allthingsgym.com/wp-content/uploads/2012/03/Starting-Strength-Routine-Calculator-Generator.jpg
[01:26:03] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[01:45:33] *** Quits: Rashad (~textual@2a01:9700:1290:7400:5c48:d281:c915:ff70) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[01:47:19] *** Parts: sceptttre (~sceptttre@2603-6011-df05-84ab-ac30-213f-3501-dcb6.res6.spectrum.com) ()
[01:50:01] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:10:50] *** Quits: ckdCreations (~ckdCreati@147.55.133.142) (Read error: Connection reset by peer)
[02:11:05] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[02:14:02] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[02:31:55] *** Joins: acidjnk (~acidjnk@p200300d0c7049f68816ae2824fdd5aac.dip0.t-ipconnect.de)
[02:37:47] *** Joins: grooverman_ (~grooverma@189.110.77.226)
[02:39:33] *** Quits: grooverman (~grooverma@152.250.149.49) (Ping timeout: 256 seconds)
[02:40:07] *** Quits: MrZeus_ (~MrZeus@194.37.96.151) (Ping timeout: 256 seconds)
[02:45:16] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[02:49:58] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[02:54:14] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:56:12] <BSaboia> If I do something like `SELECT COUNT(*) > 0 FROM t AS table WHERE t.foo > 0 GROUP BY t.id`, would it stop executing as soon as it finds a row where `t.foo > 0`?
[02:57:16] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[02:58:00] *** Joins: ckdCreations (~ckdCreati@147.55.133.131)
[03:17:03] <Gizmokid2005> BSaboia: no. It needs to check all the records in table 
[03:19:41] <BSaboia> Gizmokid2005, is there a way to stop it for the first match?
[03:20:32] <Gizmokid2005> That's not really how SQL works. Especially since you're grouping here. You could try adding a "TOP 1" or "LIMIT 1" to your query, but it's unlikely to do whatever it is you think you want.
[03:21:10] <BSaboia> What I want is to know whether I have a row where t.foo > 0 for a given id
[03:21:54] <BSaboia> In this case I did not specify the WHERE t.id = ?, but you can think of it like this
[03:22:11] <Gizmokid2005> Your group by clause in this statement is useless if that's your requirement.
[03:24:11] <BSaboia> Alright. I thought that I needed for a COUNT(*), since it is an aggregation method
[03:25:44] *** Joins: grooverman (~grooverma@152.250.164.233)
[03:26:18] <Gizmokid2005> BSaboia: if you want to know if you have a record where a column is larger than a given value, it's just as easy as "SELECT * FROM tbl WHERE foo > 0"
[03:26:25] <Gizmokid2005> That'll give you all the records where foo > 0.
[03:29:15] <BSaboia> This is not what I want. This would be very straightforward. What I want is to know whether I have a single row which satisfies my condition or not. Then I think something like `SELECT COUNT(*) > 0 FROM (SELECT FROM t AS table WHERE t.foo > 0 AND t.id = 1)`
[03:29:34] *** Quits: grooverman_ (~grooverma@189.110.77.226) (Ping timeout: 272 seconds)
[03:29:47] <BSaboia> I forgot the LIMIT 1 in the subquery
[03:29:58] <Gizmokid2005> What do you mean a "single row that satisfies my condition or not"
[03:30:06] <Gizmokid2005> Your query is currently looking at the values one row at a time.
[03:30:19] <Gizmokid2005> Either you're not explaining your requirements, or they're unclear to you as well.
[03:32:47] *** Quits: acidjnk (~acidjnk@p200300d0c7049f68816ae2824fdd5aac.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[03:34:00] <BSaboia> I already fixed it. Thanks. But it is what I described: I have a table and I want to know, for a given ID, if there is a row or not that satisfies my condition. This will be used in a CASE (perhaps that's why it was unclear to you)
[03:34:06] <BSaboia> I want a bool, not a set of rows
[03:34:37] <BSaboia> Either I have a row or more where t.foo > 0, or not. So either true or false
[03:37:18] <Gizmokid2005> You still don't need any aggregation. You've overcomplicated your issue.
[03:37:51] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:38:29] <BSaboia> I did not say I needed it. What I need is to stop as soon as it finds 1 single row that satisfies the condition
[03:38:42] <Gizmokid2005> Why?
[03:39:02] <Gizmokid2005> You just need to know if one exists or not, you don't need to "stop" in the sense of traditional programming. SQL isn't the same.
[03:39:43] <BSaboia> And I already fixed by doing this: `SELECT COUNT(*) > 0 FROM (SELECT FROM t AS table WHERE t.foo > 0 AND t.id = 1 LIMIT 1) AS _`
[03:40:02] <BSaboia> Gizmokid2005, because it's way faster if it stops on this big table that I have
[03:40:03] <Gizmokid2005> Which isn't actually valid SQL so...
[03:40:16] <Gizmokid2005> It's not though, you just think it is. With proper indexes it doesn't matter.
[03:41:03] <BSaboia> Gizmokid2005, well, I benchmarked it. The query that was taking 1m40s to complete is taking <10s to complete now. So I'd rather go with what I see than what your theory tells you
[03:41:32] <BSaboia> And whether is valid ANSI SQL or not... well, I am using Postgres, and it worked there. So I am happy with it
[03:42:37] <Gizmokid2005> the point is, you're still not doing what is actually a proper way to do this. Benchmarking two incorrect methods against each other is going to always provide incorrect results.
[03:43:13] <thumbs> but the user doesn't care about being right, for whatever reason
[03:43:21] <thumbs> doing it right, rather
[03:43:39] <Gizmokid2005> I mean, if 10s is fast enough for you, that's fine. I'd much rather cut that down another magnitude if it was me, but what do I know.
[03:44:32] <thumbs> indeed, 10s is very slow
[03:44:51] <BSaboia> Not for the amount of data that this table holds. It has 500 billions of rows
[03:46:08] <BSaboia> But anyway. The case is that I have a view that either uses a field or another from a table. It uses t.foo if t.foo > 0 in any of the rows for that id, otherwise it uses t.bar
[03:49:57] <BSaboia> 500 rows retrieved starting from 1 in 335 ms (execution: 298 ms, fetching: 37 ms) this is how it looks now
[03:58:11] <BSaboia> Gizmokid2005, , now I have read that you suggested creating an index. This is an idea, but there is a cost of updating with an index, and there is a lot of writing to that table
[04:03:50] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:7495:30c4:96e6:e598) (Quit: Textual IRC Client: www.textualapp.com)
[04:08:42] <BSaboia> https://gist.githubusercontent.com/brunosaboia/cb3d29542cba19a3a5ac36cd00ab6a4b/raw/3d9458896c0ef6ddd69be10af4918026008fb788/foo.sql
[04:08:56] <BSaboia> So the only way to improve this is by using indexes?
[04:09:04] <Gizmokid2005> No
[04:09:09] <Gizmokid2005> You could do this correctly instead.
[04:09:37] <Gizmokid2005> Your case statement means that select statement is running for *every* row in table.
[04:09:50] <Gizmokid2005> which is quite literally the *worst* and least performant way to do that.
[04:10:05] <Gizmokid2005> You should, at all costs, avoid subqueries in your select.
[04:10:20] <Gizmokid2005> Use derived tables in a join or ctes or temp tables, sure, but never subqueries in a select.
[04:15:57] <BSaboia> I need to run it for _at least_ all rows in the table that share the same other_table_id field
[04:20:16] <Gizmokid2005> Which can be done in a derived table, rather than a select subquery
[04:23:52] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:c93e:f33d:df5:a660)
[04:40:08] <BSaboia> OK, I will read on devired tables then
[04:41:20] <BSaboia> https://docs.oracle.com/cd/E17952_01/mysql-5.6-en/derived-tables.html tells me A derived table is an expression that generates a table within the scope of a query FROM clause. For example, a subquery in a SELECT statement FROM clause is a derived table:
[04:41:50] <BSaboia> Isn't that the same I am doing?
[04:44:07] <Gizmokid2005> No, "in a SELECT statement FROM clause" which you are *not* doing.
[04:45:04] <Gizmokid2005> Which is what I told you to do, but what you're not doing.
[04:46:36] <BSaboia> http://0x0.st/oqim.png
[04:46:55] <BSaboia> Line 3 is a SELECT statement FROM, as well as line 5
[04:47:20] <BSaboia> As well as Line 1 which ends in line 14
[04:47:34] <BSaboia> So what would be the correct way to write this query?
[04:47:40] <BSaboia> As a derived table
[04:48:55] <Gizmokid2005> No, it's not. Your select COUNT(*) is part of the parent select, which *also* has another sub-query as part of it.
[04:49:00] <Gizmokid2005> Do it in your from clause and join appropriately.
[04:49:14] <Gizmokid2005> SELECT * FROM tbl AS t1 JOIN (select ....) AS t2 ON t2.id = t1.id
[04:51:07] <BSaboia> Gizmokid2005, I don't think you understand what I need. Perhaps it would be better to create a fake table and explain from there. I don't understand why are you using SELECT * in your sample query
[04:51:36] <Gizmokid2005> Change * to what your need
[04:51:45] <Gizmokid2005> That's an example of structure
[04:51:49] <Gizmokid2005> Not a how to
[04:52:39] <BSaboia> I know. I mean... what I need where? In the first SELECT, or in the one after the CASE?
[05:23:50] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[05:25:53] *** Joins: The_Blod- (~Blode@user/the-blode/x-7164444)
[05:26:06] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[05:29:16] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[05:34:18] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[05:40:15] *** Joins: MrZeus_ (~MrZeus@194.37.96.103)
[05:41:27] *** Quits: reset (~reset@user/reset) (Quit: reset)
[06:16:07] <BSaboia> https://dbfiddle.uk/?rdbms=postgres_11&fiddle=ce9b3640bf23204077e131fd79f57f17
[06:17:18] <BSaboia> So this has what I need. If _any_ foo is > 0 for a given other_table_id, then use it no matter the value of bar. Otherwise use bar
[06:43:13] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:48:26] *** Quits: MrZeus_ (~MrZeus@194.37.96.103) (Ping timeout: 272 seconds)
[06:57:26] *** Joins: funhouse (~funhouse@user/funhouse)
[07:22:03] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-0961-7b0a-4f50-8e44.res6.spectrum.com) (Quit: Client closed)
[07:22:53] *** Quits: auri (~quassel@fsf/member/auri) (Quit: auri)
[07:23:28] *** Joins: auri (~quassel@fsf/member/auri)
[07:24:04] *** Quits: auri (~quassel@fsf/member/auri) (Client Quit)
[07:59:22] *** Quits: The_Blod- (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[08:01:57] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[08:04:12] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:13:35] *** Quits: AmR (~AmREiSa@156.199.157.142) (Quit: Konversation terminated!)
[08:17:54] *** Joins: millido (~millido@84.210.150.128)
[08:27:35] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[10:28:42] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:33:26] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[10:33:49] *** Joins: Jigsy (~Jigsy@user/jigsy)
[10:48:50] *** Joins: maret (~maret@195.12.158.102)
[11:10:07] *** Quits: ckdCreations (~ckdCreati@147.55.133.131) (Ping timeout: 256 seconds)
[11:10:24] *** Joins: ckdCreations (~ckdCreati@147.55.133.131)
[11:48:33] *** Joins: acidjnk (~acidjnk@p200300d0c7049f68816ae2824fdd5aac.dip0.t-ipconnect.de)
[11:49:00] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[13:00:57] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[13:07:03] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[13:18:47] *** Joins: palasso (~palasso@user/palasso)
[13:47:32] *** Joins: reset (~reset@user/reset)
[14:04:39] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[14:12:14] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:15:43] *** Quits: acidjnk (~acidjnk@p200300d0c7049f68816ae2824fdd5aac.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[14:38:54] *** Joins: masber (~masber@213.55.224.91)
[14:51:33] *** Quits: ckdCreations (~ckdCreati@147.55.133.131) (Read error: Connection reset by peer)
[14:51:52] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[14:56:13] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[15:05:14] *** Joins: MrZeus_ (~MrZeus@89.238.130.71)
[15:31:55] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[15:38:52] *** Quits: maret (~maret@195.12.158.102) (Quit: maret)
[16:06:06] *** Joins: wakeup (~wakeup@user/wakeup)
[16:06:47] <wakeup> There are 4 types of relationships between entities that I am aware of
[16:06:51] <wakeup> 1-to-1, 1-to-many, many-to-1, and many-to-many
[16:06:58] <wakeup> are there any others?
[16:24:19] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[16:25:17] *** Joins: wakeup (~wakeup@user/wakeup)
[16:29:50] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[16:53:16] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[16:54:48] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[17:17:40] *** Joins: Rashad (~textual@2a01:9700:1290:7400:5c48:d281:c915:ff70)
[17:30:30] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[17:35:18] *** Joins: Toneloc (~Toneloc@cpc104770-belf12-2-0-cust612.2-1.cable.virginm.net)
[17:43:43] *** Joins: karakedi (~eAC53C340@user/karakedi)
[17:49:12] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[17:52:12] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:02:40] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[18:03:47] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[18:08:07] *** Joins: CaCode_ (~CaCode@user/cacode)
[18:08:48] *** Joins: MrZeus__ (~MrZeus@86.106.136.215)
[18:11:37] *** Quits: MrZeus_ (~MrZeus@89.238.130.71) (Ping timeout: 240 seconds)
[18:14:33] *** Quits: masber (~masber@213.55.224.91) (Ping timeout: 256 seconds)
[18:16:46] *** Joins: wakeup (~wakeup@user/wakeup)
[18:36:33] *** Joins: PTNapivoski (~PTNapivos@179.189.133.33)
[18:45:49] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[18:55:01] *** Joins: Rathskalon (uid65285@id-65285.lymington.irccloud.com)
[18:59:01] *** Quits: CaCode_ (~CaCode@user/cacode) (Quit: Leaving)
[19:56:12] *** Joins: wakeup (~wakeup@user/wakeup)
[20:22:36] *** Quits: Rashad (~textual@2a01:9700:1290:7400:5c48:d281:c915:ff70) (Ping timeout: 252 seconds)
[20:27:09] *** Quits: Toneloc (~Toneloc@cpc104770-belf12-2-0-cust612.2-1.cable.virginm.net) (Ping timeout: 256 seconds)
[20:50:04] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[20:50:10] *** Quits: treefrob (~treefrob@pd9e2dc5a.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[21:08:52] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[21:23:56] *** Joins: treefrob (~treefrob@pd9e2d62e.dip0.t-ipconnect.de)
[21:43:34] *** Joins: Toneloc (~Toneloc@cpc104770-belf12-2-0-cust612.2-1.cable.virginm.net)
[22:04:42] *** Quits: Rathskalon (uid65285@id-65285.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[22:20:08] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[22:21:40] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[22:22:07] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[22:23:14] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[22:25:08] *** Joins: funhouse (~funhouse@user/funhouse)
[22:28:50] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Quit: Leaving)
[22:30:09] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[22:34:25] *** Quits: PTNapivoski (~PTNapivos@179.189.133.33) (Read error: Connection reset by peer)
[22:42:19] *** Joins: PTNapivoski (~PTNapivos@179.189.133.33)
[22:53:24] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[22:55:29] *** Quits: treefrob (~treefrob@pd9e2d62e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[22:58:11] *** Joins: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net)
[23:01:33] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:02:37] *** Quits: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net) (Ping timeout: 240 seconds)
[23:06:04] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[23:06:31] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[23:13:57] *** Quits: Toneloc (~Toneloc@cpc104770-belf12-2-0-cust612.2-1.cable.virginm.net) (Quit: Client closed)
[23:16:24] *** Quits: MrZeus__ (~MrZeus@86.106.136.215) (Ping timeout: 252 seconds)
[23:44:47] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[23:45:12] *** Joins: treefrob (~treefrob@p2e542bb5.dip0.t-ipconnect.de)
