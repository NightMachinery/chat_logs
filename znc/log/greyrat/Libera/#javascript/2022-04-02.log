[00:03:35] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 260 seconds)
[00:03:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[00:03:50] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:04:04] *** Joins: nomic2 (~nomic@185.217.117.233)
[00:05:45] *** voltage is now known as voltage_
[00:07:17] *** Quits: nomic (~nomic@185.217.117.233) (Ping timeout: 246 seconds)
[00:07:25] *** Quits: zstix (~zstix@c-76-115-137-165.hsd1.or.comcast.net) (Quit: Goodbye)
[00:08:14] *** Joins: taupiqueur (~taupiqueu@36.146.204.77.rev.sfr.net)
[00:08:56] *** Quits: taupiqueur_ (~taupiqueu@51.244.204.77.rev.sfr.net) (Ping timeout: 272 seconds)
[00:10:10] *** Quits: relms (~relms@user/relms) (Read error: Connection reset by peer)
[00:11:08] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[00:11:11] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:90d4:1750:f22d:5ef2) (Ping timeout: 250 seconds)
[00:11:14] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:b13c:cfe9:4c84:105a)
[00:11:44] *** Joins: relms (~relms@user/relms)
[00:12:30] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[00:13:27] *** Quits: Optimus (~risto@87.227.227.147) ()
[00:14:03] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:16:23] *** Quits: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:b13c:cfe9:4c84:105a) (Ping timeout: 250 seconds)
[00:17:05] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 246 seconds)
[00:18:08] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:342c:4ea2:4826:ecb)
[00:18:19] *** Quits: relms (~relms@user/relms) (Ping timeout: 256 seconds)
[00:21:21] *** Joins: teut (~teut@103.144.92.130)
[00:23:18] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:2162:87eb:a34e:c73b)
[00:23:39] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 260 seconds)
[00:24:37] *** Quits: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:342c:4ea2:4826:ecb) (Ping timeout: 240 seconds)
[00:26:58] <used____> Hello. I notice both Firefox on Linux and Fennec on Android, both recent, have trouble with WebAudio rendering when generated. This example makes no sound on desktop ff and just one muted beep then nothing on Fennec. https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API/Simple_synth -- the example runs in Vivaldi desktop and Chrome.
[00:27:05] <used____> Is this a known problem?
[00:27:39] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:2162:87eb:a34e:c73b) (Ping timeout: 250 seconds)
[00:28:38] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:f81b:729b:7ef0:993) (Ping timeout: 260 seconds)
[00:29:23] <corwin> enlightened dev: GOTO is bad, it makes code non-narrative and hard to follow.  also enlightened dev: *puts each function in it's own file along with 20 lines of boilerplate*
[00:29:24] <blueagain> used____: I'm on arch linux, ff 98, and the keyboard works for me
[00:29:45] *** Quits: chandash (~chandash@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: WeeChat 3.4)
[00:29:48] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[00:30:35] *** Joins: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de)
[00:31:06] *** Quits: brentaarnold (~brentaarn@24.112.47.164) (Ping timeout: 272 seconds)
[00:31:38] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[00:32:31] <used____> Sigh. Must be my old(er) ff. Do you have any ad blockers, nojs etc? I tried with and without, same outcome.
[00:33:01] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[00:33:23] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[00:33:35] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:1c12:bb21:1c32:53b8)
[00:33:39] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[00:33:52] *** Joins: pavonia (~user@user/siracusa)
[00:35:49] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:89f3:aed9:3683:7eb2)
[00:36:31] <blueagain> used____: ublock origin. I have all filters set, plus some local filters
[00:37:21] <blueagain> used____: one thing that is good for debugging is creating a brand-new ff profile, just do `firefox -P --no-remote`
[00:37:22] <used____> Interesting. No idea what causes this. It happens on Fennec from f-droid.org on Android too.
[00:37:51] <used____> blueagain: I tried various things. Only the Oscillator fails to work, WebAudio seems okay.
[00:38:06] <used____> As far as I can tell. I've moved on for now.
[00:38:35] *** Quits: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:1c12:bb21:1c32:53b8) (Ping timeout: 260 seconds)
[00:39:55] <KevinX> corwin what sparked the branching topic? I saw john carmak even talking about it today
[00:39:57] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:514b:b491:478b:bf51)
[00:40:01] <Naan> I have this one duration in a cucumber json report with decimal places O_O  "duration": 1271537832.9999998
[00:40:12] <Naan> what the frick
[00:40:18] <used____> ff web console reports something was blocked on load blueagain
[00:40:34] *** Quits: l__q (~modinfo@user/modinfo) (Quit: interet cut off, write me memo! it will be send to my mail!)
[00:40:52] <used____> "ontent Security Policy: The page’s settings blocked the loading of a resource at data: (“media-src”)."
[00:40:53] <KevinX> https://twitter.com/ID_AA_Carmack/status/1509979044770631680
[00:40:56] <used____> +C
[00:41:39] <used____> Naan: welcome to floating point "features"
[00:41:51] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:89f3:aed9:3683:7eb2) (Ping timeout: 260 seconds)
[00:42:03] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[00:42:24] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[00:45:12] *** Joins: cotko (~cotko@BSN-182-21-28.dynamic.siol.net)
[00:47:29] *** Joins: l__q (~modinfo@user/modinfo)
[00:48:47] *** Joins: filename (~kilitary@188.242.105.134)
[00:49:21] <used____> blueagain: in your ff, Tools, Web Console, do you see any errors on loading that page? I see: 'Content Security Policy: Couldn’t process unknown directive ‘script-src-elem’'
[00:49:29] <ProfSimm> My new favorite way of making "constructors":    let SomeClass = (construct, args) => ({prop: init, prop: init, method: function () {}, method: function () {}, method: function () {}});
[00:50:12] <used____> One liner obfuscation contest? (delete the spaces!)
[00:51:24] <used____> blueagain: fwiw I also issued manually entered code in the Web Console, no luck, everything is accepted, no sound output.
[00:51:33] <ProfSimm> used____:  eh I type it on one line because IRC
[00:52:14] <used____> method: =>
[00:52:14] <systemfault> ProfSimm: It's a very standard way to create objects :P
[00:52:20] <used____> should work, no? ;)
[00:52:29] <ProfSimm> systemfault: I'm sure it is.
[00:52:38] <systemfault> used____:  Yes, if you don't use 'this'
[00:52:38] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 272 seconds)
[00:52:49] <systemfault> ProfSimm: You can use the short syntax for "methods"
[00:52:51] <used____> With an empty rhs
[00:52:57] <ProfSimm> systemfault: I can't
[00:53:12] <systemfault> You can't do that? let SomeClass = (construct, args) => ({prop: init, prop: init, method() {}, method() {}, method() {}});
[00:53:25] <ProfSimm> Wait.
[00:53:26] <blueagain> used____: Content Security Policy: Couldn’t process unknown directive ‘script-src-elem’
[00:53:32] <blueagain> used____: that's the first line
[00:53:36] <used____> blueagain: right I get the same.
[00:53:41] <used____> So it's not that. Thanks.
[00:53:42] <ProfSimm> systemfault: that's the first time I see this in my damn life
[00:54:00] *** Joins: relms (~relms@user/relms)
[00:54:10] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[00:54:30] <ProfSimm> systemfault: neat
[00:54:32] <ProfSimm> thanks
[00:54:59] *** Joins: mexijoe (~mexijoe@13.sub-174-204-205.myvzw.com)
[00:55:55] <ProfSimm> systemfault: how is this feature called where can I read about it
[00:57:05] <KevinX> its just a shorthand syntax
[00:57:25] *** Quits: cotko (~cotko@BSN-182-21-28.dynamic.siol.net) (Ping timeout: 256 seconds)
[00:57:26] <ProfSimm> I assume, but I wanna see exact spec and compat
[00:57:50] <KevinX> object method initialization shorthand maybe
[00:58:08] <KevinX> close: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Method_definitions
[00:58:42] <ProfSimm> Thanks KevinX
[00:59:23] <blueagain> ProfSimm: https://caniuse.com/mdn-javascript_grammar_shorthand_object_literals
[00:59:29] <ProfSimm> blueagain: thanks
[00:59:52] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[01:00:15] *** Joins: thiras (~thiras@user/thiras)
[01:00:23] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:18ec:9063:4133:b132)
[01:00:34] *** Quits: jonifen (~jonifen@user/jonifen) (Quit: Bye everyone)
[01:02:23] *** Joins: jonifen (~jonifen@user/jonifen)
[01:02:31] *** Joins: llorllale (~llorllale@198.98.119.85)
[01:02:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[01:03:51] <KevinX> that's different right?
[01:04:29] *** Joins: wyclif (~wyclif@user/wyclif)
[01:06:04] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[01:06:14] *** Quits: teut (~teut@103.144.92.130) (Quit: Client closed)
[01:07:06] <systemfault> ProfSimm: It's just syntactic sugar, same as what you were doing
[01:07:32] *** Quits: jonifen (~jonifen@user/jonifen) (Quit: Bye everyone)
[01:08:32] *** Quits: redcat (~dev@user/redcat) (Remote host closed the connection)
[01:09:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[01:10:01] *** Joins: wyclif (~wyclif@user/wyclif)
[01:10:41] *** Quits: goddard (~goddard@user/goddard) (Quit: WeeChat 3.3)
[01:14:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[01:15:21] <ljharb> ProfSimm: part of ES2015, 7 years old at this point :-)
[01:15:33] *** Joins: wyclif (~wyclif@user/wyclif)
[01:16:15] <johnjohn101> ljharb: i'm using push state and we'll have to refactor, thanks
[01:17:07] <ProfSimm> ljharb: nice, thanks
[01:17:47] <ljharb> johnjohn101: huh?
[01:18:05] <ljharb> johnjohn101: push state is fine, but make sure your state is all in the URL so the server can render it properly on a refresh
[01:19:09] *** Quits: used____ (~used____@5-12-116-175.residential.rdsnet.ro) (Quit: leaving)
[01:20:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[01:21:18] *** Joins: wyclif (~wyclif@user/wyclif)
[01:22:17] <johnjohn101> ljharb: it will be.  took a bit to find out how to use it,  when i put in a bogus url, then it made sense!! :)
[01:23:59] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[01:26:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[01:26:49] *** Joins: wyclif (~wyclif@user/wyclif)
[01:28:31] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 260 seconds)
[01:32:48] *** Tobbi__ is now known as Tobbi
[01:42:01] *** Quits: nomic2 (~nomic@185.217.117.233) (Quit: Leaving)
[01:46:52] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[01:48:52] *** Joins: Tangent-Man (~Tang3nt-M@77.14.200.146.dyn.plus.net)
[01:50:22] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[01:50:40] *** Quits: Tangent-Man (~Tang3nt-M@77.14.200.146.dyn.plus.net) (Remote host closed the connection)
[01:51:05] *** Joins: Tangent-Man (~Tang3nt-M@77.14.200.146.dyn.plus.net)
[01:51:15] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[01:52:11] <austincheney> what would be an ideal pattern for a queue?
[01:52:33] <systemfault> In what way?
[01:52:42] <systemfault> What kind of queue?
[01:53:00] <austincheney> It seems inefficient to just push into an array, because the oldest item is at the front, and so if you are processing in time order that means removing indexes from the front, which is expensive
[01:53:10] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[01:53:13] *** Quits: duds- (~duds-@user/duds) (Max SendQ exceeded)
[01:53:24] <systemfault> Then use shift/unshift?
[01:53:29] <austincheney> this will be a queue of JSON payloads.  I am writing a queue for websocket messaging
[01:54:08] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[01:54:26] <systemfault> I mean, unshift + pop
[01:54:35] *** Joins: duds- (~duds-@user/duds)
[01:54:42] *** Quits: taupiqueur (~taupiqueu@36.146.204.77.rev.sfr.net) (Ping timeout: 272 seconds)
[01:54:51] <systemfault> n> const x = [1,2,3]; x.unshift(0); x. pop(); x
[01:54:51] <jellobot> (okay) [ 0, 1, 2 ]
[01:55:14] <austincheney> i will start with that.  Thank you.
[01:55:48] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:56:12] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[01:56:34] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:00:43] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[02:06:20] *** Joins: taupiqueur (~taupiqueu@133.146.204.77.rev.sfr.net)
[02:08:46] *** Quits: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 260 seconds)
[02:09:52] *** Joins: olle (~olle@i5E866D90.versanet.de)
[02:10:09] <olle> Using Babel in the browser, how do I expose a function from a <script type="text/babel"> part?
[02:10:35] <olle> Ah wait
[02:10:48] <olle> It's not ready at the point where jQuery runs. Nevermind.
[02:11:55] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:11:57] <systemfault> You're not really supposed to use that at all in production, it's mostly a toy
[02:12:17] <olle> I know, this is just a prototype
[02:12:25] <olle> Speed is irrelevant
[02:13:38] <systemfault> Then why do you care using babel at all then?
[02:13:44] <olle> Trying out JSX
[02:13:50] <systemfault> Ahhhh
[02:15:07] <olle> General question, but why did function-based components "win" over class-based?
[02:17:46] <olle> Meh, lots of google results, ignore.
[02:18:02] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:18ec:9063:4133:b132) (Read error: Connection reset by peer)
[02:19:58] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:26:56] *** Joins: Tang3nt-Man (~Tang3nt-M@81.174.132.104)
[02:27:03] *** Quits: Tangent-Man (~Tang3nt-M@77.14.200.146.dyn.plus.net) (Ping timeout: 260 seconds)
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:27] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:35] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[02:30:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[02:31:48] *** Joins: wyclif (~wyclif@user/wyclif)
[02:32:14] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[02:32:27] <ThePendulum> til you can type 50p into less and it'll take you 50% into the file. guess I should've figured it could do that at least a decade ago
[02:33:42] <ProfSimm> What's the fastest way to store a direct reference to a method while maintaining this binding. Performance-wise, not syntax
[02:34:02] <ProfSimm> Oh wait, arrow function :P
[02:34:04] <ProfSimm> I'm stupid
[02:34:37] *** Quits: olle (~olle@i5E866D90.versanet.de) (Ping timeout: 260 seconds)
[02:36:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[02:37:19] *** Joins: wyclif (~wyclif@user/wyclif)
[02:38:08] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 246 seconds)
[02:38:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:40:26] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:514b:b491:478b:bf51) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:41:35] *** Parts: johnjohn101 (~johnjohn1@2600:1700:3905:6010:5e78:713f:42a:ee9e) ()
[02:44:43] *** Joins: clf059 (~clf059@2603:3023:a2b:a800:5dcb:29b9:b26d:4ee1)
[02:46:09] *** Quits: clf059 (~clf059@2603:3023:a2b:a800:5dcb:29b9:b26d:4ee1) (Client Quit)
[02:46:49] *** Quits: Naan (~Naan@user/naan) (Read error: Connection reset by peer)
[02:46:49] <austincheney> ProfSimm, a regular assignment
[02:47:19] <austincheney> ProfSimm, but if you are talkinga bout the DOM and normal usage on commercial site you need to be using listeners
[02:48:33] <austincheney> ProfSimm, this isn't you, but I love it when developers ask a performance related question.  Then when they don't like the answer they throw the data in the trash or find every excuse to invalidate the data they just asked for
[02:48:44] *** Joins: m__ (~mat001@89.45.90.84)
[02:48:59] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Read error: Connection reset by peer)
[02:49:17] <systemfault> ProfSimm wants to keep the "this"... so it's either an arrow function or .bind, no?
[02:49:17] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[02:49:43] <austincheney> I recommend not using "this"
[02:49:50] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[02:51:17] <ProfSimm> systemfault: yup arrow function seems like best
[02:51:28] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:51:35] *** Quits: m_ (~mat001@static-198-54-129-70.cust.tzulo.com) (Ping timeout: 260 seconds)
[02:51:47] <ProfSimm> austincheney: I benched a lot, and I've come to the conclusion that while passing argument is slightly faster, this is not harmful. What's harmful though is using prototypes
[02:52:06] <ProfSimm> austincheney: talking about state in the function that is.
[02:52:32] <wez> I like arrow functions
[02:54:34] <systemfault> Why would using prototypes be harmful, it's usually the best thing you can do in terms of perf.
[02:55:04] <ProfSimm> systemfault: for some reason it's way slower when I test it. By a lot. Maybe it's useful for objects with lots of methods, but I have one method.
[02:55:35] <wez> systemfault: OOP is dead, FP is the next and greatest paradym :)
[02:56:23] <systemfault> wez: Yup, I'm all-in FP... but I'm not the one deciding what the V8 devs optimize.
[02:56:24] <ProfSimm> wez: is this the new "the year of Linux on the desktop" meme
[02:56:38] <systemfault> wez: For example, Array#flatMap and Array#flat are slow as F.
[02:57:03] <wez> ProfSimm: Probably, I'm not familiar with that meme
[02:57:21] <systemfault> Sad, it's a classic :P
[02:57:44] <systemfault> wez: Every year, people keep saying that "this year is the year of the Linux desktop"... but it never happens
[02:58:12] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:58:52] <systemfault> It's never going to happen.
[02:59:05] <ProfSimm> I see OOP and FP as two halves of a circle trying way too hard to each be the full circle.
[02:59:06] <systemfault> The idea of "Desktop" will die before
[02:59:51] <ProfSimm> The full paradigm combines both, and drops some BS from both.
[03:00:14] <systemfault> Replaced by "smart tablets/phones"... only "professionals" (video editing/programming/etc) are going to use desktops
[03:00:15] <wez> systemfault: Is Array.protype.concat(...a, ...b) faster?
[03:00:30] <wez> prototype even
[03:00:40] <systemfault> wez: Yep, until you stackoverflow :p
[03:00:50] <wez> :)
[03:01:30] <wez> systemfault: I'll be on another project when that happens, let ops handle it :p
[03:02:38] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 246 seconds)
[03:03:18] <systemfault> The reason why I say it's a problem is that both of those Array functions are as fast or faster on Firefox and Safar
[03:03:19] <systemfault> i
[03:03:47] *** Quits: bambanxx (~bambanx@2800:150:106:137e:c4a6:3f9e:cc61:dd25) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:04:54] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[03:05:13] <wez> systemfault: oh, you're browser optimising. I was referring to node.js usage.
[03:05:32] <wez> Does lodash do a better job at it?
[03:07:15] *** Joins: Buoy172 (~Buoy172@95.86.30.148)
[03:08:20] <systemfault> I never used lodash since ES5 with the exception of its debounce function
[03:08:53] *** Quits: D4mned (~D1mned@212.101.251.252) (Remote host closed the connection)
[03:09:46] *** Joins: voltage (voltage@user/voltage)
[03:09:53] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[03:09:57] *** voltage is now known as voltage_
[03:11:29] <Buoy172> I have a coworker that uses lodash. We work on the same project. Lucky for him we're not physically close, otherwise I would kill him.
[03:12:08] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[03:12:23] <Buoy172> Uses all kinds of functions from lodash that idiot
[03:12:53] <systemfault> Offtopic... the usual april fools LockpickingLawyer video https://www.youtube.com/watch?v=EhuNRWskgNQ (with the usual sexual innuendos)
[03:12:54] <skillbot> YouTube Title: [1435] How To Fill My Wife’s Beaver
[03:12:59] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:2474:6427:dbe5:74f0) (Ping timeout: 250 seconds)
[03:13:13] <wez> Buoy172: haha, nothing wrong with lodash as you wait for JavaScript to catch up.
[03:14:24] <Buoy172> wez: oh no, the idiot hasn't caught up with JS
[03:14:28] <wez> I used to use lodash's get, but now I use optional chaining instead.
[03:15:09] <Buoy172> He used to use some lodash function instead of ... operator, until I told him: hey JS has [...arr] and {...obj}
[03:15:45] <Buoy172> He uses lodash like it's 1998
[03:15:52] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:18:26] <Buoy172> It's easy to tell which files were made by that idiot. They all have import { some_bullshit } from 'lodash'; at the top
[03:18:47] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[03:18:54] <systemfault> JS has caught up with most of what made lodash a "must-have"
[03:19:14] <Buoy172> systemfault: yup, but some idiots still live in 1998
[03:19:32] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[03:20:16] <Buoy172> I'm sorry, I don't mean to be negative. But at least here I can open my heart and speak my mind. :)
[03:21:23] <systemfault> One thing that is still fine with lodash, is how you can import "single functions"
[03:21:28] *** Quits: pmercado (~pmercado@190.22.73.57) (Ping timeout: 272 seconds)
[03:22:10] <systemfault> I kept myself reaching for lodash debounce/throttle for cases like autocompletion... or to slow down the flood of events moving the mouse creates... etc
[03:22:35] <systemfault> But you can just install "lodash.debounce", no need for the whole lib
[03:23:23] <Buoy172> We don't have a lodash dependency in package.json, but other dependencies use it, so can't get rid of the lib
[03:23:59] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 246 seconds)
[03:27:48] <systemfault> You could probably fix that with a eslint import rule
[03:27:57] <systemfault> (I know it's probably too late..)
[03:28:45] *** Quits: Tang3nt-Man (~Tang3nt-M@81.174.132.104) (Remote host closed the connection)
[03:30:50] *** Quits: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[03:31:22] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[03:32:03] *** Joins: bambanxx (~bambanx@2800:150:106:137e:c4a6:3f9e:cc61:dd25)
[03:32:11] *** Quits: Buoy172 (~Buoy172@95.86.30.148) ()
[03:33:01] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 256 seconds)
[03:33:59] *** Joins: pizdets_ (~pizdets@183.182.111.52)
[03:34:03] *** Quits: pizdets (~pizdets@183.182.110.250) (Ping timeout: 260 seconds)
[03:34:52] *** Joins: pluri (~pluri@user/pluri)
[03:37:12] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[03:37:12] *** Joins: aindilis (~aindilis@152-44-40-72.us-chi1.upcloud.host)
[03:40:00] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:99e0:1241:1efc:a160) (Remote host closed the connection)
[03:40:41] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:922:9594:2c6e:2b07)
[03:44:18] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[03:44:41] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[03:45:22] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:922:9594:2c6e:2b07) (Ping timeout: 260 seconds)
[03:45:28] *** Quits: ckdCreations (~ckdCreati@147.55.133.134) (Read error: Connection reset by peer)
[03:47:08] *** Joins: ckdCreations (~ckdCreati@147.55.133.142)
[03:59:13] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:01:35] *** Quits: blahboybaz (~blahboyba@c-67-161-97-199.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[04:03:52] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[04:07:19] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[04:07:42] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 272 seconds)
[04:10:01] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:12:36] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[04:13:32] *** Joins: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[04:15:51] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[04:20:41] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:25:46] *** Joins: escargoux (~escargoux@108-202-238-89.lightspeed.livnmi.sbcglobal.net)
[04:30:48] *** Quits: duds- (~duds-@user/duds) (Quit: Leaving.)
[04:30:57] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[04:31:05] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Remote host closed the connection)
[04:32:15] *** Joins: seifeslimene (~seifeslim@197.2.39.226)
[04:32:33] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) ()
[04:32:47] *** Quits: ckdCreations (~ckdCreati@147.55.133.142) (Read error: Connection reset by peer)
[04:33:04] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[04:33:05] *** Joins: duds- (~duds-@user/duds)
[04:33:55] *** [office]hassoon is now known as [work]hassoon
[04:34:03] *** Joins: resio (~resio@108-202-238-89.lightspeed.livnmi.sbcglobal.net)
[04:35:10] *** Quits: resio (~resio@108-202-238-89.lightspeed.livnmi.sbcglobal.net) (Client Quit)
[04:37:12] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:40:13] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[04:40:49] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[04:41:07] *** Joins: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net)
[04:41:50] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:41:50] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:41:50] *** Joins: wroathe (~wroathe@user/wroathe)
[04:44:42] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 260 seconds)
[04:45:52] *** Quits: autodev (~autodev@67-198-118-247.dyn.grandenetworks.net) (Ping timeout: 260 seconds)
[04:48:13] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[04:49:39] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[04:52:53] *** Quits: escargoux (~escargoux@108-202-238-89.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 246 seconds)
[05:00:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[05:00:24] *** Joins: pluri_ (~pluri@user/pluri)
[05:00:31] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[05:00:56] *** Quits: taupiqueur (~taupiqueu@133.146.204.77.rev.sfr.net) (Ping timeout: 246 seconds)
[05:02:16] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[05:06:55] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 260 seconds)
[05:10:22] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[05:12:36] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[05:13:41] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[05:18:06] *** Joins: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net)
[05:18:25] <ljharb> wez: don’t use spread with concat, and yes it’s much faster
[05:18:50] <ljharb> wez: `[].concat(a, b)` is leagues better than `[…a, …b]`
[05:19:37] *** Quits: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net) (Client Quit)
[05:19:44] *** Joins: nomic (~nomic@185.217.117.233)
[05:20:19] *** Joins: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net)
[05:20:59] *** Joins: filename (~kilitary@82.148.25.66)
[05:22:02] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[05:28:32] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:5c2a:80c9:a714:be65)
[05:29:59] <KevinX> not as cool though
[05:33:03] <sheetjs> n> ["[].concat(a, b)".length, "[...a, ...b]".length]
[05:33:03] <jellobot> (okay) [ 15, 12 ]
[05:33:21] <sheetjs> the google metrics favor spread
[05:34:13] <theskillwithin> systemfault LOL
[05:34:14] <KevinX> lol
[05:34:52] <theskillwithin> systemfault did you watch video I shared with you on slack?
[05:35:03] <theskillwithin> systemfault https://youtu.be/USKD3vPD6ZA
[05:35:03] <skillbot> YouTube Title: I Gave My Goldfish $50,000 to Trade Stocks
[05:36:33] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[05:37:00] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[05:38:32] <systemfault> theskillwithin: I haven't yet, I watching a movie called "Dark Waters" on Netflix... it's about Teflon.. I'll watch after
[05:41:53] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Ping timeout: 256 seconds)
[05:49:35] *** Joins: dob1_ (~dob1@user/dob1)
[05:49:40] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 272 seconds)
[05:52:12] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[05:59:44] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 246 seconds)
[06:04:02] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[06:09:56] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 272 seconds)
[06:12:08] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[06:13:49] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:16:05] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[06:18:47] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[06:19:20] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[06:20:11] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:20:11] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:20:11] *** Joins: wroathe (~wroathe@user/wroathe)
[06:20:24] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[06:24:17] <ljharb> seifeslimene: please don’t cross-post. You need to auth tho
[06:24:50] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[06:26:20] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:922:9594:2c6e:2b07)
[06:27:57] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:28:13] <seifeslimene> ljharb how is that?
[06:28:14] <seifeslimene> I'm already in
[06:28:55] <systemfault> Most of us are also on the #Node.js channel... for obvious reason
[06:29:54] <seifeslimene> systemfault you have very strict rules lol
[06:30:11] <systemfault> They're not even rules, I don't believe anyone would enforce that...
[06:30:20] <systemfault> It's just proper IRC etiquette
[06:31:39] <seifeslimene> systemfault I mean the cross-post stuff
[06:32:34] <KevinX> that's just general chat etiquette anywhere
[06:32:37] <theskillwithin> seifeslimene if your not registered AND authed/logged in,  then no one can see you talk other than an op whos tagd up
[06:33:09] <seifeslimene> [2:36:07 AM] [NOTICE] You are now identified for seifeslimene.
[06:33:10] <seifeslimene> [2:36:07 AM] [NOTICE] Last login from: ~seifeslim@197.2.39.226 on Apr 01 15:39:56 2022 +0000.
[06:33:10] <seifeslimene> [2:55:11 AM] <seifeslimene> IDENTIFY seifeslimene 123456789
[06:33:11] <seifeslimene> [2:55:11 AM] [NOTICE] You are already logged in as seifeslimene.
[06:33:11] <seifeslimene> [2:58:19 AM] <seifeslimene> IDENTIFY seifeslimene 123456789
[06:33:12] <seifeslimene> [2:58:19 AM] [NOTICE] You are already logged in as seifeslimene.
[06:33:14] <seifeslimene> look
[06:33:16] <KevinX> if you post in 5 places the same question it just shows you arent interested in engaging. Something like that
[06:33:34] <seifeslimene> I don't know what I'm supposed to do.
[06:33:44] <KevinX> well we see u now
[06:34:19] <KevinX> maybe the server is messin with you for april 1st
[06:34:33] <seifeslimene> I don't know what's happening.. -_-
[06:34:43] <systemfault> seifeslimene: How are you? Do you have a question with JavaScript?
[06:34:58] <seifeslimene> yes I do.
[06:35:04] <systemfault> Please ask :)
[06:35:21] <KevinX> well don't force them now
[06:35:46] <seifeslimene> well
[06:35:47] <seifeslimene> https://justpaste.it/9r22j
[06:36:35] <seifeslimene> It's something that I've noticed about Closure when hitting the second breakpoint
[06:36:42] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[06:36:58] <seifeslimene> That the products variable is not even in the closure scope which is very weird imo
[06:37:42] *** Joins: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net)
[06:38:02] <KevinX> huh
[06:38:05] <theskillwithin> seifeslimene please tell me thats not your real pw that u pasted into the channel
[06:38:08] *** Quits: Slade (uid128877@user/slade) (Quit: Connection closed for inactivity)
[06:38:14] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 246 seconds)
[06:38:42] <KevinX> one way to find out
[06:38:59] <seifeslimene> sorry not the second breakpoint I just mean the breakpoint..
[06:38:59] <systemfault> KevinX: That's mean if you do that :p
[06:39:10] <KevinX> lol i wouldn't
[06:39:21] <seifeslimene> theskillwithin I really don't know what you're talking about
[06:39:21] <theskillwithin> i agree, however id rather KevinX do it than some rando
[06:39:50] <KevinX> is your pw 123456789?
[06:39:54] <seifeslimene> theskillwithin What i'm supposed to do
[06:39:59] <seifeslimene> Yes it is
[06:40:20] <theskillwithin> jesus christ
[06:40:29] <seifeslimene> I already paste it here
[06:40:34] <seifeslimene> from NickServ
[06:41:29] <seifeslimene> theskillwithin I don't understand
[06:41:44] <KevinX> why share your password with us? Youre ok with that?
[06:42:49] <seifeslimene> Because I told you guys I'm already logged in but you keep saying to me please register and stuff..
[06:43:06] <seifeslimene> I don't know what I'm supposed to do!
[06:44:36] <KevinX> Someone could take the nick from you pretty easily
[06:44:47] <theskillwithin> seifeslimene yes you are logged in now, otherwise I would not be able to see what your saying
[06:44:59] <systemfault> seifeslimene: Just do: /msg NickServ SET PASSWORD yournewpassword
[06:47:04] <seifeslimene> I trust you guys:D  I'm not elon musk or bill gates anyway:p  :p
[06:47:11] <seifeslimene> x'D
[06:47:17] <systemfault> I don't know, are you?
[06:47:29] <systemfault> :)
[06:47:33] <seifeslimene> :)
[06:48:02] *** Quits: chandash (~chandash@c-76-116-112-52.hsd1.nj.comcast.net) (Quit: WeeChat 3.4)
[06:48:11] <systemfault> I'm pretty bad at React so I cannot help you, maybe someone else can
[06:48:39] *** Quits: pluri (~pluri@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[06:48:47] <seifeslimene> alright, thanks anyway:)  with the password stuff I just felt I lost control of my mind :p
[06:49:24] <KevinX> i think the question is incomplete
[06:49:36] <KevinX> im not super familiar with redux though, thankfully
[06:52:01] <seifeslimene> KevinX is that make any difference if I make products = 5 instead of products=useSelector... ?
[06:52:06] *** Joins: pluri (~pluri@user/pluri)
[06:52:24] <KevinX> cant see where you're using it
[06:52:36] <KevinX> you shared about 5 lines of code
[06:52:53] <seifeslimene> https://justpaste.it/9r22j
[06:53:08] <KevinX> thats the same code
[06:53:51] <KevinX> you declare products, but where are you using it?
[06:55:06] <KevinX> does your product reducer have a product property? what happens if you log products?
[06:55:24] <KevinX> what's returned from getProductAction()?
[06:55:57] <KevinX> dont you need to import dispatch?
[06:56:37] <KevinX> doesnt dispatch come from a hook actually?
[06:57:06] <seifeslimene> KevinX I though this is not really relevant for this example I just wanna know why products it's not  even there in the scope closure..
[06:57:07] <seifeslimene> But here is the full snippet of code https://justpaste.it/9r22j
[06:57:33] *** Quits: codebam_ (~codebam@user/codebam) (Quit: WeeChat 3.4)
[06:58:40] <KevinX> having the full context is always relevant
[06:58:53] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:922:9594:2c6e:2b07) (Ping timeout: 252 seconds)
[06:59:18] <KevinX> why do people always use these jank paste sites lol
[06:59:30] <KevinX> So is `products` undefined or what's the value?
[07:00:46] <KevinX> i have a feeling they asked the question in 5 places and can't continuously engage in one place because they have to respond to others
[07:00:59] *** Quits: suss (~user@user/suss) (Remote host closed the connection)
[07:02:01] <seifeslimene> KevinX no it's not
[07:02:19] <KevinX> then what is it?
[07:03:05] <KevinX> if you can reproduce it on codesandbox i'll fix it for you
[07:03:06] <seifeslimene> I use chrome debugger once inside useeffect it's not even show in closure scope in dev tools
[07:03:11] *** Joins: escargoux (~escargoux@108-202-238-89.lightspeed.livnmi.sbcglobal.net)
[07:03:47] <seifeslimene> No you don't understand me! I just want to understand something about scope closure
[07:03:57] <seifeslimene> It's not a bug or something
[07:04:04] <seifeslimene> Thanks by the way :)
[07:05:10] <seifeslimene> It suppose to be there but undefined because first when the debugger go through the code the action of updating products is not dispatched yet
[07:05:22] <seifeslimene> but still it should be there
[07:05:33] <theskillwithin> !xy @ seifeslimene
[07:05:34] <jellobot> seifeslimene, The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/
[07:06:20] <KevinX> the value hasn
[07:06:32] <KevinX> hasnt been populated by the time the debugger runs
[07:06:59] <KevinX> when it does, react rerenders
[07:07:24] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[07:07:39] <theskillwithin> wait wtf, you just have a useEffect with only debugger; in it?
[07:07:41] <seifeslimene> yes but but should it first declare products in the scope?
[07:08:21] <banana_> when youre tired on friday and your project has a timezone related bug
[07:09:23] <systemfault> According to their IP, it's probably nearly 4am...
[07:09:26] *** Joins: codebam (~codebam@user/codebam)
[07:09:31] <systemfault> So, I guess you're right
[07:09:43] <theskillwithin> why would you ever have a useEffect with just debugger
[07:09:47] <theskillwithin> im so confused
[07:10:09] <banana_> reverse engineering react?
[07:10:16] <banana_> instead of reading the docs?
[07:10:53] <KevinX> they are just asking about scope and hoisting or something
[07:11:00] <seifeslimene> theskillwithin easy banana_ easy
[07:11:01] <banana_> you mean the callback of useEffect?
[07:11:13] <KevinX> I really don't know the answer without looking
[07:11:47] <seifeslimene> fine I should look at it by myself thank you guys!!
[07:11:52] <seifeslimene> ;)
[07:12:02] <banana_> n> setTimeout(() => debugger, 0)
[07:12:03] <jellobot> (fail) SyntaxError: Unexpected token 'debugger'
[07:12:24] <banana_> oh node doesnt have that statement
[07:12:41] <banana_> what
[07:13:10] <banana_> n>debugger;
[07:13:11] <jellobot> (okay) undefined
[07:13:39] <seifeslimene> banana_  being sarcastic now ;)
[07:13:54] <seifeslimene> you're being sarcastic
[07:14:09] <systemfault> Node has "debugger" but not the "bot"
[07:14:23] <banana_> what the parser cant figure that out?
[07:14:24] <systemfault> n> console.log('Hi seifeslimene!')
[07:14:25] <jellobot> (okay) Hi seifeslimene!
[07:14:37] <banana_> no
[07:14:41] <banana_> its not a syntax error
[07:14:42] <theskillwithin> systemfault i think the node debugger uses browser or something
[07:14:51] <banana_> how is that a ReferenceError
[07:15:01] <theskillwithin> systemfault websockets
[07:15:15] <banana_> n> setTimeout(() =>{  debugger; }, 0)
[07:15:15] <jellobot> (okay) Timeout { _idleTimeout: 1, _idlePrev: [TimersList], _idleNext: [TimersList], _idleStart: 50, _onTimeout: [Function (anonymous)], _timerArgs: undefined, _repeat: null, _destroyed: false, [Symbol(refed)]: true, [Symbol(kHasPrimitive)]: false, [Symbol(asyncId)]: 9, [Symbol(triggerId)]: 0 }
[07:15:20] <banana_> it has it
[07:15:40] <banana_> the arrow function just needs the curlies there for that situation
[07:15:46] <systemfault> Ah, thought it was a ReferenceError, oopsie
[07:15:47] <banana_> oh what word?
[07:15:59] <banana_> it was a reference error without the curlies
[07:16:04] <seifeslimene> I use regular function instead.
[07:16:05] <theskillwithin> still, ud never be able to use debugger inside n>
[07:16:23] <seifeslimene> I know I said I was just experimenting something.
[07:16:28] <banana_> so an arrow function without curlies doesnt inherit the scope of the surrounding scope?
[07:16:36] <banana_> surounding lexical scope
[07:16:52] <theskillwithin> an arrow function without curlies returns wtver its pointing to
[07:17:03] *** Joins: gproto23 (~gproto23@user/gproto23)
[07:17:16] <theskillwithin> with curlies, it just runs it as a side effect almost
[07:17:20] <banana_> im confused af
[07:17:44] <theskillwithin> ya i prob explained it in the worst possible way
[07:17:49] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.4)
[07:18:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[07:18:31] <banana_> n> let yo = 'tsup'; setTimeout(() => yo);
[07:18:31] <jellobot> (okay) Timeout { _idleTimeout: 1, _idlePrev: [TimersList], _idleNext: [TimersList], _idleStart: 55, _onTimeout: [Function (anonymous)], _timerArgs: undefined, _repeat: null, _destroyed: false, [Symbol(refed)]: true, [Symbol(kHasPrimitive)]: false, [Symbol(asyncId)]: 9, [Symbol(triggerId)]: 0 }
[07:18:43] <banana_> n> let yo = 'tsup'; setTimeout(() => boobs);
[07:18:43] <jellobot> (fail) Timeout { _idleTimeout: 1, _idlePrev: [TimersList], _idleNext: [TimersList], _idleStart: 53, _onTimeout: [Function (anonymous)], _timerArgs: undefined, _repeat: null, _destroyed: false, [Symbol(refed)]: true, [Symbol(kHasPrimitive)]: false, [Symbol(asyncId)]: 9, [Symbol(triggerId)]: 0 }evalmachine.<anonymous>:1  let yo = 'tsup'; setTimeout(() => boobs);                                    ^  ReferenceError: boobs is not defin …
[07:18:48] <banana_> reference errors
[07:18:59] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[07:19:04] <KevinX> the issue is that useEffect isn't invoked within the same scope
[07:19:05] <banana_> that's odd you'd think debugger would be evaluted
[07:19:08] *** Joins: wyclif (~wyclif@user/wyclif)
[07:19:24] <KevinX> if you move the debugger into the function im sure you'd see it
[07:19:26] <banana_> sorry i made a tangent from the original issue
[07:19:48] <banana_> n>(() => debugger)()
[07:19:48] <jellobot> (fail) SyntaxError: Unexpected token 'debugger'
[07:20:15] <banana_> n>let what = 'huh'; (() => what)()
[07:20:16] <jellobot> (okay) 'huh'
[07:20:36] <banana_> wat?
[07:20:45] <banana_> that time it was a syntax error
[07:20:52] *** Joins: trafficjam (~trafficja@203.176.111.34)
[07:21:04] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[07:21:30] <theskillwithin> banana_ fun fact, you can pm jellobot these commands
[07:21:35] <banana_> oh so if a syntax error is thrown in an async callback then that callback throws a reference error?
[07:21:50] <banana_> oh really dam thanks
[07:22:15] <seifeslimene> KevinX useEffect is invoked in the same scope as products
[07:22:50] *** Joins: dvanloon8 (~dvanloon@user/dvanloon)
[07:22:51] <seifeslimene> in fact other variables inside rhe same scope I can see them through debugger
[07:23:07] <KevinX> i mean the function you pass in isn't
[07:23:10] <seifeslimene> not products tho
[07:23:11] *** Quits: dvanloon (~dvanloon@user/dvanloon) (Ping timeout: 260 seconds)
[07:23:12] *** dvanloon8 is now known as dvanloon
[07:23:19] <seifeslimene> yes
[07:23:53] <seifeslimene> but I can see variables in outerscope
[07:24:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[07:24:15] <seifeslimene> so why not products in this case
[07:24:21] <seifeslimene> that's my question
[07:24:53] *** Joins: wyclif (~wyclif@user/wyclif)
[07:25:17] <KevinX> if you change it to `let products = 1` you see it?
[07:25:26] <seifeslimene> yes
[07:25:34] <seifeslimene> already tried this one
[07:25:55] <seifeslimene> and it's fine
[07:25:56] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[07:26:42] *** Joins: _filename (~kilitary@188.242.105.134)
[07:26:51] <seifeslimene> sorry I mean it's not there also
[07:27:04] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[07:27:08] <seifeslimene> same problem
[07:27:31] <KevinX> ugh, for a moment i thought you were going to make me set up a codesandbox ;-)
[07:28:08] <seifeslimene> haha sorry for that :p
[07:28:16] <banana_> oh shit i have poor eye-sight
[07:28:20] <banana_> n>setTimeout(() => debugger, 0)
[07:28:20] <jellobot> (fail) SyntaxError: Unexpected token 'debugger'
[07:28:24] <banana_> it was a syntax error
[07:29:12] <banana_> language parser
[07:29:13] *** Quits: filename (~kilitary@82.148.25.66) (Ping timeout: 260 seconds)
[07:29:20] <KevinX> i dont think the devtools will show you variables out of scope
[07:29:35] <KevinX> i dont use the debugger that much though so maybe theres a way
[07:30:38] <KevinX> fyi people usually use arrow functions with useEffect
[07:31:29] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[07:31:54] *** Joins: codebam (~codebam@user/codebam)
[07:33:08] <seifeslimene> yes
[07:34:54] <banana_> people usually use arrow functions for callbacks
[07:35:26] <seifeslimene> I think I really surrender to this :/
[07:35:53] <banana_> also more than that but too lazy, most js devs use arrow function expressions instead of regular function expressions
[07:35:54] <KevinX> thats a good idea. it really isnt something to think about
[07:36:13] <KevinX> banana_ it depends a bit on style and on scope
[07:36:20] <seifeslimene> KevinX yes, it's just out of curiosity
[07:36:43] <banana_> unless you to do someFunc.call(someObj)
[07:36:45] <seifeslimene> something stuff are really doesn't make sense in javascript world
[07:36:49] <banana_> stuff like that
[07:36:52] <seifeslimene> some stuffs I mean
[07:36:55] <banana_> need to^
[07:37:15] <banana_> KevinX: style?
[07:37:37] <banana_> I said usually though?
[07:37:51] <seifeslimene> I don't need any binding of the context here..
[07:37:57] <banana_> and most? I'd say that's accurate
[07:38:21] <banana_> maybe "most good js devs now" ?
[07:38:58] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[07:38:59] <banana_> yeah if you dont need bindings for an invoked function then use an arrow function
[07:39:40] <banana_> also in js there's such thing as a function declaration vs just a function expression
[07:40:28] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:41:07] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[07:41:25] <banana_> function declaration statements are just regular function expressions that assign it's expression to the function's name
[07:41:33] <banana_> and hoisting that shit
[07:43:43] <banana_> hoisted function statement expressions are available in the entire immediate surrounding block
[07:44:33] <banana_> n> func(); function func() { return 'yep' };
[07:44:34] <jellobot> (okay) 'yep'
[07:45:21] <KevinX> seeding a postgres db with 60mb of data using prisma via a GH action took 25 minutes one time and 2 minutes the next.
[07:45:51] <KevinX> on my old MBP it takes a consistent 10min
[07:49:10] *** Quits: bambanxx (~bambanx@2800:150:106:137e:c4a6:3f9e:cc61:dd25) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:50:19] *** Joins: bambanxx (~bambanx@2800:150:106:137e:c4a6:3f9e:cc61:dd25)
[07:51:16] *** Quits: bambanxx (~bambanx@2800:150:106:137e:c4a6:3f9e:cc61:dd25) (Client Quit)
[07:53:31] *** Joins: chovy (~chovy@tilde.club)
[07:56:19] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[08:00:53] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:01:08] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[08:04:18] *** Joins: bambanxx (~bambanx@2800:150:106:137e:c4a6:3f9e:cc61:dd25)
[08:04:43] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[08:05:37] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) ()
[08:07:59] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 260 seconds)
[08:08:29] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[08:13:17] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:14:39] <seifeslimene> by the way I can use eval("debugger;");
[08:15:20] <seifeslimene> The reason I didn't see some variables in the outerscope is that they're optimized away
[08:15:53] <seifeslimene> I can see this in firefox dev tools debugger
[08:18:13] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Remote host closed the connection)
[08:20:04] *** _filename is now known as filename
[08:21:03] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 260 seconds)
[08:21:32] <seifeslimene> https://stackoverflow.com/questions/58861823/can-i-turn-off-optimization-so-in-scope-variables-from-closures-arent-optimiz
[08:21:46] <seifeslimene> and this article helped me!
[08:24:58] <KevinX> nice one
[08:25:20] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:28:38] *** Quits: nomic (~nomic@185.217.117.233) (Quit: Leaving)
[08:30:22] <seifeslimene> I think I start to hate V8 now :p
[08:31:30] <systemfault> Try V9 then! </awful-joke>
[08:32:06] *** Quits: trafficjam (~trafficja@203.176.111.34) (Ping timeout: 250 seconds)
[08:32:21] <seifeslimene> No I use SpiderMonkey :D
[08:35:37] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 256 seconds)
[08:36:45] *** Joins: trafficjam (~trafficja@203.176.111.34)
[08:45:53] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[08:49:08] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 246 seconds)
[08:49:46] <systemfault> seifeslimene: Are you actually located in Tunis or you're just using a Proxy?
[08:54:49] <seifeslimene> systemfault why you asking that?
[08:54:51] <seifeslimene> :D
[08:55:03] <systemfault> Curious.
[08:55:18] <systemfault> I also like that country
[08:55:31] *** Joins: viva (~viva@2601:2c7:8900:169:9114:816a:b7a0:b497)
[08:55:47] <seifeslimene> Which country?
[08:55:55] <systemfault> Tunisia
[08:56:21] <viva> hello ev1, im learning JS via a video lecture course i purchased online... im taking in a LOT of information very quickly and something slipped by me that i cant remember (and cant remember where to find it) and i was hoping someone here can help me figure out... its a JS trick where you put
[08:56:26] <viva> if (!!var) to tell if its something
[08:56:35] <viva> and i cant remember if you use that trick to check if its truthy or boolean or what
[08:56:40] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:922:9594:2c6e:2b07)
[08:56:44] <viva> does anyone know this trick and can help me remember it?
[08:57:14] <systemfault> viva: !! is indeed to check truthiness
[08:57:15] <theskillwithin> your checking it as truthy
[08:57:24] <Maxdamantus> viva: it's a way of forcing a truthy/falsy value into a boolean, true or false value.
[08:57:33] <viva> ah thank you
[08:57:44] <Maxdamantus> n> const a = 5; [a, !a, !!a]; @ viva
[08:57:45] <jellobot> viva, [ 5, false, true ]
[08:57:52] <Maxdamantus> n> const a = 0; [a, !a, !!a]; @ viva
[08:57:52] <jellobot> viva, [ 0, true, false ]
[08:59:13] <sheetjs> n> (a => [a, !a, !!a])(5) @Maxdamantus
[08:59:13] <jellobot> Maxdamantus, [ 5, false, true ]
[08:59:59] <viva> and const a = 0; [!a]; = true because of type coercion converts it to string right? and a string is showing (to the interpreter) ascii value 48 right?
[09:00:48] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 260 seconds)
[09:00:48] <systemfault> It's true because 0 is falsy, ! reverses the boolean
[09:00:52] <Maxdamantus> n> No. There is no string involved. `!a` will always return a boolean, but it will be false if `a` is truthy and it will be true if `a` is falsy.
[09:00:52] <jellobot> (fail) SyntaxError: Unexpected identifier
[09:01:27] <Maxdamantus> If you want truthy to turn into true, you need to invert it a second time to turn `false` into `true`.
[09:01:49] <systemfault> By doing !!variable, you convert it to a boolean and negate it... and then the second ! cancels the negate
[09:01:50] <viva> oh
[09:02:11] <Maxdamantus> `!!a` is `!(!a)`
[09:02:11] <viva> but doesnt type coersion come into play with truth-"ness" ?
[09:02:33] <Maxdamantus> It comes into play with the `!` operator, since `!` always returns a boolean (true or false).
[09:02:37] <systemfault> For sure, but there's no conversion to string.
[09:02:41] <seifeslimene> no type coersion is when you concatenate a string with a number
[09:03:30] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[09:03:39] <viva> const a = 0 ; console.log(!a); that should return true because its converting the 0 to ascii right?
[09:03:41] <sheetjs> !variable coerces the variable to a boolean
[09:03:44] <viva> else it would be false?
[09:04:01] <Maxdamantus> There's no ASCII or strings involved.
[09:04:08] <seifeslimene> for example "some_string" + 5
[09:04:13] <viva> then how is 0 truthy?
[09:04:20] <Maxdamantus> `0` is falsy.
[09:04:23] <seifeslimene> javascript will coerse the 5 type to string
[09:04:27] <Maxdamantus> so `!0` is true
[09:04:39] <systemfault> viva: ! reverses a boolean
[09:04:41] <Maxdamantus> `!` means "not"
[09:05:06] <Maxdamantus> !true === false; !false === true; !1 === false; !0 === true
[09:05:11] *** Joins: l__q (~modinfo@user/modinfo)
[09:05:16] <viva> but doesnt 0 == true return true?
[09:05:23] <Maxdamantus> No.
[09:05:25] <systemfault> n> 0 == true
[09:05:26] <jellobot> (okay) false
[09:05:33] <seifeslimene> I just gave you one example of coercion and guys here gave you another example
[09:05:39] <viva> n> 0 === true
[09:05:40] <jellobot> (okay) false
[09:06:11] <viva> n> "0" == true
[09:06:12] <jellobot> (okay) false
[09:06:19] <viva> n> "0" === true
[09:06:20] <jellobot> (okay) false
[09:07:07] <seifeslimene> n> {} === {}
[09:07:08] <jellobot> (fail) SyntaxError: Unexpected token '==='
[09:07:33] <seifeslimene> n> {} == {}
[09:07:33] <jellobot> (fail) SyntaxError: Unexpected token '=='
[09:07:41] <sheetjs> use parentheses
[09:07:46] <seifeslimene> why it gives such an error!?
[09:07:47] <sheetjs> n> ({}) === ({})
[09:07:48] <jellobot> (okay) false
[09:07:50] <sheetjs> n> ({}) ===({})
[09:07:50] <jellobot> (okay) false
[09:07:53] <seifeslimene> weird! no?
[09:07:59] <sheetjs> same reason for
[09:08:09] <sheetjs> n> (() => {})()
[09:08:10] <jellobot> (okay) undefined
[09:08:12] <viva> im not getting the same output from my jsfiddle
[09:08:13] <sheetjs> n> (() => ({}))()
[09:08:13] <jellobot> (okay) {}
[09:08:34] <viva> oops nvm
[09:09:01] <systemfault> {} is ambiguous to the parser, can be an empty object literal or an empty block(scope)
[09:10:08] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 246 seconds)
[09:10:53] <seifeslimene> n> Symbol('foo') === Symbol('foo')
[09:10:53] <jellobot> (okay) false
[09:10:54] <systemfault> () => { lol: 10 } // Is this function returning an object literal with a property lol being equal to 10... or it's a function body with a "label" and and the value 10, returning nothing at the end
[09:11:05] <systemfault> JS is like...dunno
[09:11:07] <viva> n> "0" == 0
[09:11:08] <jellobot> (okay) true
[09:11:14] <viva> n> "0" === 0
[09:11:15] <jellobot> (okay) false
[09:11:21] <viva> sorry guys thats what i was getting at
[09:11:43] <viva> n> "0" != 0
[09:11:44] <jellobot> (okay) false
[09:11:48] <viva> n> "0" !== 0
[09:11:49] <jellobot> (okay) true
[09:12:04] <viva> has nothing to do with the double ! operator
[09:12:12] <viva> just got mixed up a lil
[09:12:33] <seifeslimene> strict comparaison
[09:12:44] <seifeslimene> i checking both value and type
[09:12:54] <seifeslimene> you need to be careful
[09:12:57] *** Joins: jazzy2 (~jaziz@user/jaziz)
[09:12:58] <seifeslimene> with those
[09:13:12] <systemfault> Using === most of the time will eventually save you an headache.
[09:13:31] <seifeslimene> indeed
[09:13:43] <viva> agreed, and thats my plan, i just had that extra bit about the !! in there that kinda got it mixed up
[09:13:51] <seifeslimene> just forget about != and ==
[09:14:00] <viva> n> 0 == "0"
[09:14:01] <jellobot> (okay) true
[09:14:19] <viva> so for that, it converts the 0 to a string?
[09:14:29] <viva> or does it convert the string to a number?
[09:14:32] <viva> int or w/e
[09:15:07] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[09:15:12] <systemfault> I'm not even sure.. I always assumed that it would try to convert the right side value to the same as the left side
[09:15:25] <viva> ah
[09:15:25] <systemfault> But if you don't use == at all, you don't even have to know.
[09:15:27] <theskillwithin> n> Array(16).join('systemfault<3' - 1) + ' Batman!!'
[09:15:28] <jellobot> (okay) 'NaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaN Batman!!'
[09:15:49] <viva> right i forgot about that. it does some type of LtoR or RtoL pass
[09:16:07] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[09:16:26] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 246 seconds)
[09:16:35] <viva> says here associativity is left to right
[09:17:05] <viva> for both strict and standard equality
[09:17:53] <seifeslimene> In most cases, using loose equality is discouraged. The result of a comparison using strict equality is easier to predict, and may evaluate more quickly due to the lack of type coercion.
[09:18:09] <theskillwithin> https://www.destroyallsoftware.com/talks/wat
[09:18:53] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[09:19:57] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[09:29:06] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[09:29:23] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:922:9594:2c6e:2b07) (Ping timeout: 260 seconds)
[09:33:14] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de) (Ping timeout: 246 seconds)
[09:44:04] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[09:46:38] *** Joins: filename (~kilitary@188.242.105.134)
[09:47:00] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Remote host closed the connection)
[09:47:56] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 246 seconds)
[09:50:35] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[09:51:43] *** Joins: han-solo (~han-solo@user/han-solo)
[09:51:46] *** Joins: adroitmachine (uid532177@id-532177.hampstead.irccloud.com)
[09:53:17] *** Joins: jazzy3 (~jaziz@user/jaziz)
[09:54:05] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[09:54:26] *** Quits: seifeslimene (~seifeslim@197.2.39.226) (Ping timeout: 250 seconds)
[09:57:23] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[10:06:59] *** Joins: vysn (~vysn@user/vysn)
[10:07:00] *** Quits: trafficjam (~trafficja@203.176.111.34) (Ping timeout: 250 seconds)
[10:07:35] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Bye)
[10:09:11] <wez> ljharb: Thanks!! that will flattern too?
[10:11:04] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[10:14:53] *** Quits: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[10:15:03] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[10:18:19] *** Joins: suss (~user@user/suss)
[10:24:46] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[10:27:17] *** Joins: karabaja4 (~karabaja4@dh207-94-57.xnet.hr)
[10:29:17] *** Quits: kmh (~kmh@2a00:6020:5004:6800:9863:ed91:ec8f:6351) (Read error: Connection reset by peer)
[10:29:44] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:30:53] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[10:31:16] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 250 seconds)
[10:34:08] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 246 seconds)
[10:34:29] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:34:55] *** Quits: keypusher (keypusher@user/keypusher) (Read error: Connection reset by peer)
[10:37:12] *** Joins: keypusher (keypusher@user/keypusher)
[10:37:50] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 272 seconds)
[10:39:03] *** Joins: pluri (~pluri@user/pluri)
[10:41:25] *** Quits: viva (~viva@2601:2c7:8900:169:9114:816a:b7a0:b497) (Remote host closed the connection)
[10:43:20] *** Joins: kmh (~kmh@2a00:6020:5004:6800:c28f:c4f0:695a:5bbb)
[10:44:01] *** Joins: Guest97 (~Guest97@12.70.29.57)
[10:46:50] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[10:48:30] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[10:51:13] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[10:52:21] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[10:53:40] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 272 seconds)
[10:54:20] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[10:54:37] *** Joins: defn (~n0b0dy@user/defn)
[10:56:32] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 246 seconds)
[11:02:38] *** Joins: gproto23 (~gproto23@user/gproto23)
[11:05:28] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[11:11:02] *** Quits: Guest97 (~Guest97@12.70.29.57) (Quit: Client closed)
[11:11:16] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:c0ae:3c7:95b4:d49d)
[11:11:30] *** Joins: nomic (~nomic@185.217.117.233)
[11:13:28] *** Joins: adroitmachine_ (~adroitmac@182.64.104.84)
[11:13:34] *** Joins: Tangent-Man (~Tang3nt-M@mutantalien.plus.com)
[11:14:26] *** Joins: trafficjam (~trafficja@203.176.111.34)
[11:17:36] *** Quits: bambanxx (~bambanx@2800:150:106:137e:c4a6:3f9e:cc61:dd25) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:18:16] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[11:31:45] <ljharb> wez: yes, since 1995
[11:38:56] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 260 seconds)
[11:39:44] *** Quits: trafficjam (~trafficja@203.176.111.34) (Ping timeout: 250 seconds)
[11:42:11] *** Quits: adroitmachine_ (~adroitmac@182.64.104.84) (Ping timeout: 260 seconds)
[11:45:07] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[11:47:14] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[11:47:45] *** Joins: filename (~kilitary@188.242.105.134)
[11:53:51] *** Quits: pluri_ (~pluri@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[12:00:29] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[12:01:48] *** Joins: trafficjam (~trafficja@203.176.111.34)
[12:03:31] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[12:06:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[12:06:33] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:13:28] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 272 seconds)
[12:16:58] *** Joins: pluri (~pluri@user/pluri)
[12:20:47] <MootPoot> what are some hard to find JS skills in the current market?
[12:21:03] <MootPoot> everyone wants JS so I'm trying to figure out what to learn
[12:23:06] <pavonia> Bug-free programming?
[12:23:43] <theskillwithin> haha
[12:24:07] *** Joins: wyclif (~wyclif@user/wyclif)
[12:25:07] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[12:25:53] <pavonia> I think there's demand for framework programming like Angular, React, Vue etc.
[12:28:38] <theskillwithin> react
[12:29:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[12:29:39] *** Joins: wyclif (~wyclif@user/wyclif)
[12:29:50] <wez> The skillz, deep within!!!
[12:30:43] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:922:9594:2c6e:2b07)
[12:34:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[12:35:12] *** Joins: wyclif (~wyclif@user/wyclif)
[12:40:52] *** Quits: adroitmachine (uid532177@id-532177.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:43:26] *** Joins: iomari891 (~iomari891@197.210.52.185)
[12:43:29] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 256 seconds)
[12:44:50] <theskillwithin> hard to find, maybe like knowing a bunch of AWS stuffs and serverless using js in that
[12:45:39] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[12:47:42] <MootPoot> well, that's what everyone wants
[12:48:00] <MootPoot> I'm more of looking for a subset which ideally - I no longer have to compete with others
[12:48:04] <MootPoot> or as much
[12:48:15] <MootPoot> right now I'm in the recent grad grinder
[12:50:08] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[12:51:32] *** Joins: adroitmachine_ (~adroitmac@182.64.104.84)
[12:52:23] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[12:58:08] <theskillwithin> you don't have to compete with others either way
[12:58:16] *** Joins: Talon (~Talon@172.77.102.142)
[13:02:47] *** Joins: mange (~user@n114-78-12-98.bla3.nsw.optusnet.com.au)
[13:02:47] *** Quits: mange (~user@n114-78-12-98.bla3.nsw.optusnet.com.au) (Changing host)
[13:02:47] *** Joins: mange (~user@user/mange)
[13:02:54] *** Joins: olle (~olle@i5E866D97.versanet.de)
[13:04:40] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[13:05:44] *** Joins: D4mned (~D1mned@212.101.234.130)
[13:06:28] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[13:08:12] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[13:08:32] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[13:09:41] *** Quits: ColorShes (~yoann@1.618.talagrand.com) (Quit: Ping timeout (120 seconds))
[13:09:59] *** Joins: ColorShes (~yoann@1.618.talagrand.com)
[13:11:06] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Ping timeout: 272 seconds)
[13:13:00] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:c0ae:3c7:95b4:d49d) (Ping timeout: 240 seconds)
[13:13:18] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[13:13:46] *** Quits: trafficjam (~trafficja@203.176.111.34) (Ping timeout: 250 seconds)
[13:18:44] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:3523:4963:ba83:5394)
[13:22:49] *** Quits: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net) (Remote host closed the connection)
[13:23:09] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[13:26:00] *** Joins: cotko (~cotko@BSN-182-21-28.dynamic.siol.net)
[13:27:25] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:3523:4963:ba83:5394) (Ping timeout: 240 seconds)
[13:27:58] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[13:33:32] *** Joins: taupiqueur (~taupiqueu@137.145.204.77.rev.sfr.net)
[13:33:54] *** Joins: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de)
[13:34:20] *** Quits: sa0 (~sa0sin@2a01:e0a:414:b360:922:9594:2c6e:2b07) (Ping timeout: 252 seconds)
[13:39:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[13:40:15] *** Joins: wyclif (~wyclif@user/wyclif)
[13:50:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[13:51:21] *** Joins: wyclif (~wyclif@user/wyclif)
[13:54:50] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[13:57:55] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[14:04:16] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[14:04:36] *** Joins: sa0 (~sa0sin@88.120.82.205)
[14:08:47] *** Quits: olle (~olle@i5E866D97.versanet.de) (Ping timeout: 260 seconds)
[14:11:27] *** Quits: stagas (~stagas@2a02:587:c4b4:ded5:376c:f956:2209:965d) (Remote host closed the connection)
[14:13:26] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:16:13] *** Joins: stagas (~stagas@2a02:587:c4b4:ded5:44b2:6561:ea26:63b3)
[14:18:43] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 260 seconds)
[14:21:44] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:23:04] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[14:23:21] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:23:49] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[14:25:23] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:36:38] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:36:50] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[14:37:29] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:39:07] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[14:40:47] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 256 seconds)
[14:50:41] *** Quits: adroitmachine_ (~adroitmac@182.64.104.84) (Ping timeout: 246 seconds)
[14:50:46] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[14:51:23] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[14:51:44] *** Quits: iomari891 (~iomari891@197.210.52.185) (Ping timeout: 246 seconds)
[14:56:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[14:59:27] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[15:00:03] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:6576:47b0:4677:7229)
[15:01:07] *** Quits: Svitkona (~Svitkona@157.245.38.135) (Quit: The Lounge - https://thelounge.chat)
[15:05:39] *** Joins: thiras (~thiras@user/thiras)
[15:06:53] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[15:09:32] *** Quits: KevinX (~KevinX@user/KevinX) (Ping timeout: 272 seconds)
[15:11:17] *** Quits: Svitkona (~Svitkona@157.245.38.135) (Client Quit)
[15:11:44] *** Joins: KevinX (~KevinX@user/KevinX)
[15:12:52] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:25:13] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[15:25:26] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:25:26] *** Joins: wyclif (~wyclif@user/wyclif)
[15:26:06] <MootPoot> how so?
[15:26:32] <MootPoot> presumably I'm not as good as others - seeing as I've applied to like 200-250 jobs and have no job yet
[15:27:40] *** Joins: vysn (~vysn@user/vysn)
[15:29:40] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:a519:6081:f3da:f296)
[15:30:42] <blueagain> MootPoot: 200-250 is a lot, you should have established a pattern by now
[15:34:23] <MootPoot> pattern?
[15:39:43] *** Quits: cotko (~cotko@BSN-182-21-28.dynamic.siol.net) (Ping timeout: 256 seconds)
[15:39:43] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[15:42:37] <blueagain> MootPoot: why you're not landing a job. you could be asking for too much, applying to a position for which you're not qualified, etc.
[15:43:14] <MootPoot> well, I'm not really getting any callbacks - mostly I'm just applying to jobs tagged entry level
[15:43:43] <blueagain> how many of the 200 got back to you for an interview?
[15:44:23] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[15:44:32] <MootPoot> about maybe...10 of them
[15:44:51] <MootPoot> half of them had a quick phone call or something and weeded me out there
[15:44:59] <MootPoot> the others I had interviews for
[15:45:16] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:45:20] <blueagain> could you get a feel for at which point they weed you out?
[15:46:07] <MootPoot> generally its the JS familiarity portion - or higher level code stuff
[15:46:28] <MootPoot> I write JS on occasion but I dont have JS or react on my resume - the jobs seem to cast a wide of a net as possible
[15:46:36] <MootPoot> then cancel me out since I dont do front end dev much
[15:46:47] <MootPoot> the line always goes
[15:47:15] <MootPoot> "so you're good in C# and .net and server stuff, and SQL too. Impressive. Now, tell me - do you know react?"
[15:47:38] *** Joins: nulixes (~Thunderbi@dynamic-046-114-161-095.46.114.pool.telefonica.de)
[15:49:07] <MootPoot> I don't have a sense for building visual things so react and front end has always curbstomped me
[15:50:35] <MootPoot> as for why they are interviewing a person without JS or react listed about react...I dont know either
[15:50:46] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:50:57] <MootPoot> I have a interview this next week about a spot which demands 2 years of react when I dont do any....
[15:51:04] <MootPoot> nor do I have it on my resume
[15:51:51] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[15:52:17] *** Quits: filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[15:52:48] *** Joins: paule32_ (~paul@user/paule32)
[15:53:22] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:55:14] <MootPoot> I've done react a few times before but it never mentally clicked
[15:56:16] *** Quits: paule32 (~paul@user/paule32) (Quit: Leaving)
[15:56:37] *** paule32_ is now known as paule32
[15:56:47] <doug16k> which react is the counter. function or class style
[15:57:27] *** Quits: suss (~user@user/suss) (Ping timeout: 260 seconds)
[15:57:59] <doug16k> the class style is easier to follow if you don't know react yet but do know OO somewhat
[15:58:20] <doug16k> once you learn that, the stuff functional style does makes more sense
[15:59:46] <doug16k> I'd have to say I know newer react stuff but not really old purely functional style
[16:00:29] <doug16k> it's not even a binary question. he wants an analog readout of which react you know and how much
[16:03:21] <doug16k> could be "I can barely change the state" all the way up to "I can spontaneously create and destroy arbitrary trees of components under arbitrary elements that I created"
[16:05:05] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[16:07:13] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 260 seconds)
[16:07:44] <doug16k> if you are already C# dev, then export class CustomerSelect extends Component<CustomerSelectProps, CustomerSelectState> should be familiar
[16:09:00] <doug16k> bunch of virtual functions you implement like render, shouldComponentUpdate, etc
[16:09:56] <doug16k> the attributes they said in <CustomerSelect foo={123}/> come through as prop foo: 123
[16:10:03] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 260 seconds)
[16:10:22] <doug16k> nothing to it :D
[16:12:45] <doug16k> if they put elements under <CustomerSelect>Like <span>this</span></CustomerSelect> then you get them in prop named children with type ReactNode, you can just pass them through in your render with {this.props.children}
[16:12:53] <doug16k> that is the majority of what you do in react
[16:14:08] *** Joins: han-solo (~han-solo@user/han-solo)
[16:14:12] <doug16k> not hard to get familiar with react, if you feel it will help a lot in interviews
[16:22:16] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-974-194.w86-238.abo.wanadoo.fr) (Quit: Ping timeout (120 seconds))
[16:23:16] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-974-194.w86-238.abo.wanadoo.fr)
[16:23:46] <MootPoot> so I The main thing with react is that I don't understand the flow of things
[16:24:03] <MootPoot> like--- sure, I make component, component gets props, props show up in component
[16:24:10] <MootPoot> how does that component *do* stuff
[16:24:34] <doug16k> mostly, there are event handlers on elements, they change the state, the state change causes it to rerender
[16:24:40] <MootPoot> okay
[16:24:53] <MootPoot> and for props...do I have to pass them all down the tree every time?
[16:25:18] <doug16k> you probably want to. if you didn't, how could you force that value to change?
[16:25:30] <MootPoot> it sounds good for large apps but for small ones having to pass values through three nested functions sounds like a pain
[16:25:39] <MootPoot> or maybe I'm understanding it wrong
[16:25:44] <doug16k> you pass what they care about. usually it's one thing at a time
[16:26:09] *** Joins: polyrob (~rob@user/polyrob)
[16:26:13] <doug16k> the customer select. sure you probably pass them an id. they call your onchange to tell you they selected another customer
[16:26:21] <MootPoot> in native - say if there is a button that calls a external API that gives a value which then is applied to the text of the button
[16:26:34] <doug16k> you change your state to make the screen change to react to the customer change
[16:26:59] <MootPoot> I simply write a onclick - call a api on a promise then make it update the value when its done using a simple innertext or something
[16:27:20] <MootPoot> but in react I would need to make that value first go to the parent box, then the container for the button, then the button?
[16:27:27] <doug16k> then you would have a string in the state. in the render it would {this.state.thatThing} and in the .then handler of the API request, you setState({thatThing: newValue})
[16:28:13] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[16:28:37] <MootPoot> okay, so the value does not get passed down through all the components
[16:28:44] <MootPoot> it just goes there directly
[16:28:44] <doug16k> it could be a whole ReactNode of stuff you rendered from the .then, it could set the state to <div>Blah blah {response.whatever}</div> and in render pass that through
[16:28:49] *** Quits: arthur_melo (~IRC@user/arthur-melo/x-6822691) (Client Quit)
[16:29:24] *** Joins: arthur_melo (~IRC@user/arthur-melo/x-6822691)
[16:29:29] <doug16k> thing of the attributes as parameters that tell it the input
[16:29:41] <doug16k> and there are inputs where you give it callbacks, which it calls to give you output
[16:29:53] *** Quits: clamiax (~clamiax@net-93-65-240-75.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[16:30:09] <doug16k> input of a <select> would probably be the .value you want (matches with <option value=>
[16:30:19] <doug16k> output would be an onChange that tells you they changed it
[16:30:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[16:30:35] <doug16k> but you can do that at a high level
[16:30:43] <doug16k> you could make a select that knows about Customer object
[16:30:56] <doug16k> and does cool search by phone number or whatever
[16:31:07] <doug16k> you could just value= the whole customer object
[16:31:12] *** Joins: wyclif (~wyclif@user/wyclif)
[16:31:26] <doug16k> not just a string because of <select> limitations
[16:32:17] <MootPoot> I...I kind of get it but I also have no idea what you are saying
[16:32:26] <MootPoot> I'd need to do it
[16:36:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[16:36:47] *** Joins: wyclif (~wyclif@user/wyclif)
[16:37:20] *** Quits: doug16k (~doug16k@172-97-188-4.cpe.distributel.net) (Remote host closed the connection)
[16:39:03] *** Joins: cotko (~cotko@BSN-182-21-28.dynamic.siol.net)
[16:41:16] *** Joins: doug16k (~doug16k@172-97-188-4.cpe.distributel.net)
[16:41:17] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:a519:6081:f3da:f296) ()
[16:41:31] <MootPoot> I think the problem is that I need hands on to get it
[16:41:43] <MootPoot> all the tutorials I'm finding are all very....
[16:41:46] <MootPoot> blind
[16:41:52] <MootPoot> they dont explain anything, just do it
[16:41:57] <doug16k> yeah. I think if you try class style react, you will get it at 2x speed because of C# experience
[16:42:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[16:42:07] <doug16k> then functional will be easier to follow from there
[16:42:26] *** Joins: wyclif (~wyclif@user/wyclif)
[16:48:53] <doug16k> tsx react is much like what you would do in UI code in java, or C#, or C++, or something else that has virtual functions - override the render, do something in optional lifecycle calls
[16:50:14] <doug16k> because the "composite" design pattern fits UIs perfectly
[16:55:24] *** Joins: olle (~olle@i5E866D97.versanet.de)
[16:57:05] <blueagain> MootPoot: it sounds to me like you have a clear way forward. improve your react skills, build a few apps you can present as part of your portfolio
[16:57:38] <MootPoot> Right now I'm in a predicament
[16:57:51] <MootPoot> interview on mon for a job that mandates react even though I didn't have react on my resume
[16:57:54] <MootPoot> or JS for that matter
[16:58:04] <blueagain> MootPoot: if you don't like react per se you might need to recalibrate here, is the job more important to you or is not working with react?
[16:58:08] <MootPoot> so I'm just trying to put together a simple react app thing to demo
[16:58:26] <MootPoot> blueagain - I'd prefer getting the job
[16:58:35] <MootPoot> I can change later whenever
[16:58:47] <blueagain> then it's settled, you need to invest your energy into becoming better at react
[16:58:54] <MootPoot> mmm
[16:59:17] <MootPoot> I wish there was a resource as good as explaining react as eloquent JavaScript
[16:59:35] <blueagain> start with the official tutorial on react's website
[17:00:04] <blueagain> MootPoot: https://reactjs.org/tutorial/tutorial.html
[17:00:32] <blueagain> you should feel confident about that entire page first, imho
[17:00:38] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[17:01:04] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[17:04:14] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Quit: Leaving)
[17:07:40] *** Quits: bliminse (~bliminse@host86-185-253-73.range86-185.btcentralplus.com) (Quit: leaving)
[17:07:58] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 272 seconds)
[17:10:58] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[17:14:49] *** Joins: bliminse (~bliminse@host86-185-253-73.range86-185.btcentralplus.com)
[17:16:59] *** Quits: mange (~user@user/mange) (Ping timeout: 246 seconds)
[17:22:51] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[17:23:12] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.4)
[17:23:19] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[17:26:41] *** Joins: ubri (~ubri@2001:861:5384:a0c0:d31c:d5e5:5c4b:bfb7)
[17:30:30] <doug16k> when I was learning react, I wish someone told me, don't even try to make it refresh the screen without actually changing the state. just put the data that is used to render the screen in the state and be happy
[17:30:48] <doug16k> at first I thought I could hack around it and do dummy setstate with empty object. not really. doesn't really work
[17:30:55] <doug16k> works enough to fool you a bit maybe
[17:35:18] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 260 seconds)
[17:39:27] *** Quits: stagas (~stagas@2a02:587:c4b4:ded5:44b2:6561:ea26:63b3) (Remote host closed the connection)
[17:39:50] *** Joins: stagas (~stagas@2a02:587:c4b4:ded5:44b2:6561:ea26:63b3)
[17:42:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:42:11] <doug16k> this was my little react hello world I made when I started with react: http://172.97.188.4:14500/  you can grab the balls and throw them around, and change the number of balls at the top
[17:42:24] <doug16k> the balls are components
[17:42:45] *** Joins: wyclif (~wyclif@user/wyclif)
[17:43:14] *** Quits: cotko (~cotko@BSN-182-21-28.dynamic.siol.net) (Ping timeout: 246 seconds)
[17:44:37] <doug16k> stuff like that is why I wonder why people worry about js performance
[17:45:00] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[17:45:09] <doug16k> hammering react at 240Hz no problem
[17:45:55] <doug16k> er 140 I mean
[17:46:09] <gjvc> doug16k, wow
[17:47:26] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[17:47:31] <gjvc> doug16k: how did you do the windows ?
[17:47:56] <Maxdamantus> Seems quite jittery for me.
[17:48:10] *** Joins: wyclif (~wyclif@user/wyclif)
[17:48:10] <doug16k> Maxdamantus, what fps does timegraph say
[17:49:25] <doug16k> gjvc, by hand just divs IIRC
[17:49:25] <Maxdamantus> it varies between 15 fps and 75 fps.
[17:49:27] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[17:49:51] <Maxdamantus> spikes to lower than 15 fps, presumably due to GC or something.
[17:49:57] <doug16k> I wonder if that webgl is doing it
[17:50:04] <doug16k> what is the hardware
[17:50:24] <doug16k> ah I see. yeah that timegraph is there to study how glitchy it is
[17:50:32] <doug16k> it can be super good
[17:51:05] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[17:51:13] <doug16k> try a powerful gaming machine and it'll sit at 120Hz or whatever, no problem
[17:51:17] <Maxdamantus> I can see that the balls are using divs, not webgl.
[17:51:24] <doug16k> the planet is webgl
[17:51:31] *** Quits: stagas (~stagas@2a02:587:c4b4:ded5:44b2:6561:ea26:63b3) (Ping timeout: 256 seconds)
[17:51:54] <Maxdamantus> Sure, but I suspect webgl itself is not what is causing the jitter.
[17:52:06] <Maxdamantus> it will very likely be GC.
[17:52:13] <doug16k> yeah probably
[17:52:24] <Maxdamantus> unless there's other userspace code doing its own cleanup.
[17:52:28] <doug16k> the test is meant to hammer react and see if it is not bad if you spam updates
[17:52:33] <doug16k> it's not meant to be fully optimized
[17:52:53] <doug16k> I wanted to see what happens if you spray changes at react really hard
[17:53:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[17:53:04] <Maxdamantus> and chromium is using over 800% CPU.
[17:53:35] <Maxdamantus> is it using web workers or something?
[17:53:39] *** Joins: wyclif (~wyclif@user/wyclif)
[17:53:41] <doug16k> react is I think
[17:53:42] <Maxdamantus> I think I've heard of React doing that.
[17:53:43] <doug16k> I'm not
[17:53:55] <Maxdamantus> Seems very inefficient.
[17:54:07] <doug16k> I just get an awful lot of requestAnimationFrame callbacks and look how much time elapsed
[17:54:32] <doug16k> on my monitors it is 140 something hz
[17:55:01] <doug16k> 160 something? I forget the new numbers :D
[17:55:34] <doug16k> 165
[17:56:22] <Maxdamantus> If I turn on the profiler, it runs consistently at 60 fps.
[17:56:32] <doug16k> because of your monitor
[17:56:48] <doug16k> on a gaming monitor it'll be whatever hz that is
[17:57:22] <Maxdamantus> Sure, the point is it doesn't go down to 15 fps (and then overcompensate at 75 fps).
[17:57:58] <doug16k> depends on browser too. browser might cap it to 120 for compatibility
[17:58:44] <doug16k> it's in terms of how much time elapsed since the last animation frame
[17:58:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[17:58:52] <Maxdamantus> I know.
[17:58:52] <doug16k> if that is all over the place, the graph shows it
[17:59:00] <doug16k> yeah I figured
[17:59:11] *** Joins: wyclif (~wyclif@user/wyclif)
[18:00:06] <rick123> man
[18:00:21] <Maxdamantus> Oh, maybe it was to do with the webgl thing. I killed the 800% chromium process and the globe disappeared, but everythng else is running smoothly.
[18:00:45] <rick123> There's dangerouslySetInnerHTML in React that renders any HTML you give it via innerHTML, if that can't execute the script tags passed in it, what makes it dangerous ?
[18:01:38] <doug16k> rick123, you get so much control you can make it appear to be one thing, and put a button or link for another thing on top
[18:02:04] *** Joins: stagas (~stagas@2a02:587:c4b4:ded5:3983:d2ca:47b5:c4a8)
[18:02:13] *** Joins: dan01 (~dan01@2a02:2f09:360d:2e00:d5b8:f1ed:67a5:b9d3)
[18:02:31] <doug16k> and perhaps circumvent a protection by user click
[18:02:35] <Maxdamantus> Gets a bit crazy when you try to grab the smallest ball.
[18:03:52] <Maxdamantus> actually, they have random sizes.
[18:03:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[18:04:09] <doug16k> it's doing the real physics for the bounces
[18:04:19] <Maxdamantus> anyway, with a sufficiently small ball, the speed that it moves towards the cursor seems to be greater than the escape velocity.
[18:04:44] *** Joins: wyclif (~wyclif@user/wyclif)
[18:04:55] <doug16k> oh ya if it is too small, yeah, it can explode due to the simple way it does the rubber band connecting to the ball
[18:05:25] <rick123> So basically you can do phishing, thats whats dangerous about dangerousinnerhtml, they should write that instead of XSS in the docs :P
[18:05:34] <doug16k> the max time increment is too high for the smallest balls
[18:05:39] <doug16k> min time I mean
[18:05:47] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[18:06:14] <doug16k> rick123, it says "dangerous" in the name, but people doubt the danger!
[18:06:56] <doug16k> it is only really dangerous if there can be data from a user in there somewhere in what you render
[18:07:20] <rick123> yeah just that it says XSS and that doesn't seem obvious on the first go
[18:07:20] *** Joins: l__q (~modinfo@user/modinfo)
[18:07:21] <fweht> is there a one liner for returning a value from an array/object while setting it simultaneously if undefined?  something like `arr[0] ?= 42`, it should return `arr[0]` if it exists and otherwise return `42` while setting `arr[0]` to `42`?
[18:07:27] <doug16k> that's why it even exists. sometimes you can say "I know I know, but this is machine generated just now and you can't hurt anyone"
[18:07:46] <fweht> the shortest  i could come up with is `arr[0] || arr[0] = 42`
[18:07:58] <rick123> brainfuck would be shorter than that
[18:08:22] <doug16k> fweht, you did it
[18:08:44] <fweht> doug16k: hehe yeah, but my `arr` is some `object.withALongPropertyName`
[18:09:19] <doug16k> I'd put parens around the assignment, to remove all doubt
[18:09:23] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[18:09:28] <fweht> thanks!
[18:09:29] <doug16k> hardly anybody knows precedence properly
[18:09:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[18:10:04] *** Joins: adroitmachine_ (~adroitmac@182.64.104.84)
[18:10:13] <doug16k> arr[0] || (arr[0] = 42)
[18:10:16] *** Joins: wyclif (~wyclif@user/wyclif)
[18:10:37] <fweht> i see
[18:11:46] <blueagain> what's wrong with `arr[0] ??= 42`
[18:12:20] <blueagain> (will return null too, which is fine imho)
[18:13:13] *** Quits: nulixes (~Thunderbi@dynamic-046-114-161-095.46.114.pool.telefonica.de) (Ping timeout: 260 seconds)
[18:20:34] <fweht> blueagain: oh i didnt know that!
[18:20:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[18:21:22] <fweht> and it actually returns the value!
[18:21:33] *** Joins: wyclif (~wyclif@user/wyclif)
[18:21:34] <fweht> so i almost guessed it with `?=` :D
[18:22:48] <doug16k> oh wow, there is a null coalescing operator
[18:23:27] <doug16k> it doesn't assign anything to anything though
[18:23:35] <doug16k> it won't arr[0] = 42
[18:23:49] <doug16k> you can null coalesce equal like += ??
[18:23:58] <doug16k> wow
[18:25:29] <blueagain> ??= will assign if lval is not null and not undefined
[18:25:33] <hassoon> 'afternoon
[18:25:48] <doug16k> ah, this shows what really happens: https://www.typescriptlang.org/play?#code/PTAEBUAsFNQOwK4BskEsDOlQGMD2BDJadbVOAc1FwAdoAnfAF1ztA1Hzg6UfridQA3WM1AAfMQFgAUCFAB3SKmxY60Rgjpx0oRjFB1U5SIwC06VABNY0AB7U16C7i6oAZrv1E3Zi9Zly7IgoVKwIcNZuZNCWAHQyAWAAklx4cIwM6IwANOJioAjoxKBuhOgAnjgw2ADW6LkAttCcZJScoNAN1IzliaBZhhShnrCIDQBG9KAADAq4yJagkzgufvQxJWXQ8dJ9AIKg5Li4i3b4XUQlLJ7sbs0aamw61oStCqh6oNT4dIyohH1cOMAFbQbCMHSKZRYSD4YSgSL4ZAQhQwLj4UA1aCVDBwADkj
[18:25:48] <doug16k> C++CcGzIOxkZF4dFK2Fge2o1AAwi4ouRNAIXKAAN4yUCgOQAEWgpWRAC5QAAiAAUcFw8HO0AAlBKANwdLo9foZN5JADKoEEr0svPlTXFA1aKoS0j5guFSJ44tMAEY1bN2Ia0MabWxeA10OKxpM6Fbdj67SLHbo6AhoCb8OChNBxeNjkROKGAL7WtzhROchDUSxMaD06hStKs8UABR+f0IAB4y8y4Kz2X8XAA+RXck1yADqHywwSQpjwhGIpCGNHoTBYJsrRli-CaoAAvCtW0uV7AAPy7jfS2WmpWqhcspcfTo6DeL8ixK-+0D7jcu0N8u+xBN-eG3i-378k2fA9o1jUM+zARlNDUdJ+lwJAEA7OBzy3e8d3XXRyloXAPE-dC1wIyULQoCVn03VllwVUBxSPOUd2Vd9yMvP0b0w7DcP-B8WPXQiJS
[18:25:48] <doug16k> DehSN3Jj70fHQnVdFCKMA382OgHDhK-RNf141N4OaOBBIU6TYHFDIwOtW0wAAVQsIYJCoWgGGYVgoRUFYFkOIDxnwRZi0YfBJO3Ki-1QyjV3M2iTwY-kwEsXBillQlCCQXB5CuVgJVIshqEQzyRO4nyKNEvJQDfEKEXCnRIu4GK4rca53TgFLGDSxSf1gTKl20nK9OgNU5DUaLKmcyxckIeR8HKHRWpkbMwzkABNeYcHaTrFgaFhYHwVNEPgZA0EwFYJxIN4yBGUAAGZYgAdiWGLKGoXAslFRI+hMRhqADEBrEEcZzvQWIGmUOgrpwxhYjwBpgB6WgSEMbpgE4WU81aUwQcncGzAO0xjuAIA
[18:25:55] <doug16k> oh no, sorry
[18:25:56] <hassoon> wow
[18:26:10] <blueagain> dude you just ascii-killed my screen
[18:26:18] <doug16k> typescriptlang.org bad
[18:26:35] <blueagain> does it try to base64 the code and then pack it into the URL?
[18:26:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[18:26:42] <ProfSimm> doug16k: if I decrypt this will I have your social media passwords
[18:26:47] <doug16k> blueagain, yes exactly
[18:26:53] <hassoon> when he pasted that, my ssh session froze for some seconds
[18:26:54] <hassoon> ahah
[18:27:10] *** Joins: wyclif (~wyclif@user/wyclif)
[18:27:23] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[18:28:06] <doug16k> `config.name = config.name ??= "(no name)"`  becomes   `config.name = (_a = config.name) !== null && _a !== void 0 ? _a : (config.name = "(no name)");`
[18:28:09] <qswz> who's already using --experimental-fetch ?
[18:28:13] <blueagain> well, given url limits in chrome is about 2MiB, it would probably work for most stuff
[18:28:43] <doug16k> sorry, `config.name ??= "(no name)"` becomes `(_a = config.name) !== null && _a !== void 0 ? _a : (config.name = "(no name)");`
[18:29:08] <qswz> that's babel ugly shit
[18:29:11] <blueagain> doug16k: that looks like a transpiler
[18:29:23] <doug16k> yeah
[18:29:37] <qswz> it's just: config.name = config.name == null ? "(no name)" : config.name
[18:29:47] <qswz> in more readbale way
[18:30:33] <doug16k> don't you transpile just in case their user agent sucks?
[18:30:33] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:30:40] <qswz> who here sometimes write "====" happens too foen to me
[18:31:07] <qswz> sure we do, but I never look at that code
[18:31:17] <qswz> with sourcemaps i's transprent
[18:31:33] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:31:34] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:31:34] *** Joins: wroathe (~wroathe@user/wroathe)
[18:31:50] <doug16k> I like to know what it really does when I say stuff, if possible
[18:32:03] <doug16k> I'm one of those nuts that go check the generated assembly of a C++ compiler
[18:32:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[18:32:13] <doug16k> to see how bad it is
[18:32:25] <blueagain> it's a task beyond your scope though
[18:32:39] *** Joins: wyclif (~wyclif@user/wyclif)
[18:32:40] <blueagain> you will never have time to review all the code your compiler/transpiler generates
[18:33:00] <doug16k> I don't have to review it all to have a familiarity of how it expands the shorthand stuff into pure js
[18:33:46] <doug16k> lets you decompose it into "oh is that all it does" and it becomes a 0 size knowledge point
[18:34:02] <blueagain> what do you gain from that?
[18:34:20] <doug16k> when you look at an expression that uses it, you can picture what it is really doing
[18:36:54] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
[18:37:48] *** Joins: rogorido (~rogorido@mail.georeligion.org)
[18:38:20] <doug16k> knowing what really happens is the only defence against superstitions
[18:39:20] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[18:39:44] *** Joins: thiras (~thiras@user/thiras)
[18:40:32] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[18:40:46] <corwin> I used to be superstitious then I found out that it's bad luck.
[18:41:45] <qswz> then I became hyperstitious
[18:42:33] *** Joins: clamiax (~clamiax@net-93-65-240-235.cust.vodafonedsl.it)
[18:46:04] <corwin> seems legit
[18:46:43] *** Quits: olle (~olle@i5E866D97.versanet.de) (Ping timeout: 256 seconds)
[18:46:43] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[18:47:36] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:49:02] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Client Quit)
[18:50:47] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[18:51:04] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[18:52:38] *** Joins: pulse (~pulse@user/pulse)
[18:53:44] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[18:54:03] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:55:01] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[18:55:39] *** Joins: Arisco (~ckmptnml@201-11-16-179.user3p.brasiltelecom.net.br)
[18:56:26] *** Joins: bambanxx (~bambanx@2800:150:106:137e:c4a6:3f9e:cc61:dd25)
[19:00:23] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 260 seconds)
[19:01:06] *** Joins: filename (~kilitary@188.242.105.134)
[19:02:31] *** Joins: l__q (~modinfo@2a02:3038:1:30e4:dcfa:52ac:158b:e928)
[19:02:35] *** Joins: ssh073 (~serg073@79.164.47.232)
[19:03:14] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:07:27] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[19:07:28] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[19:07:31] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:09:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:12:18] *** Quits: ssh073 (~serg073@79.164.47.232) (Quit: The Lounge - https://thelounge.chat)
[19:12:28] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:d90e:8b62:fe9d:3118)
[19:15:21] *** Joins: voltage_ (voltage@user/voltage)
[19:17:53] *** Joins: geosmile (~geosmile@user/geosmile)
[19:18:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:18:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:18:40] *** Joins: wroathe (~wroathe@user/wroathe)
[19:18:42] *** Quits: geosmile (~geosmile@user/geosmile) (Client Quit)
[19:18:57] *** Joins: geosmile (~geosmile@user/geosmile)
[19:19:25] *** Joins: ssh073 (~serg073@79.164.47.232)
[19:19:36] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[19:22:03] *** Quits: adroitmachine_ (~adroitmac@182.64.104.84) (Ping timeout: 260 seconds)
[19:24:45] *** Quits: filename (~kilitary@188.242.105.134) (Quit: joined libera)
[19:24:53] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:26:24] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[19:27:07] *** Joins: junebug (~junebug@2600:1700:3db0:2540:335d:547c:5bbd:ea26)
[19:36:20] *** Joins: nomic2 (~nomic@2a00:23c7:ec90:a501:1ca6:8527:5890:736)
[19:39:05] *** Quits: nomic (~nomic@185.217.117.233) (Ping timeout: 246 seconds)
[19:42:15] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[19:43:39] *** Joins: cotko (~cotko@BSN-182-21-28.dynamic.siol.net)
[19:48:08] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[19:56:11] *** Quits: l__q (~modinfo@2a02:3038:1:30e4:dcfa:52ac:158b:e928) (Ping timeout: 256 seconds)
[19:56:42] <mmlj4> I have a null problem, I took ttps://www.w3schools.com/howto/howto_js_autocomplete.asp (which works fine), but I took the file apart and stuck the CSS and JS in separate files and included them (<script src="autocomplete.js"></script>), yet I'm getting "TypeError: searchEle is null". I do not understand why sticking the JS in a separate file would cause a null. The separated files are here: http://joeykelly.net/nullerror/
[19:56:59] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[19:58:23] <mmlj4> ..and of course the autocomplete doesn't work :-/
[20:01:03] *** Joins: nulixes (~Thunderbi@p508523e1.dip0.t-ipconnect.de)
[20:01:31] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[20:02:07] *** Joins: nulixes1 (~Thunderbi@gateway/vpn/pia/nulixes)
[20:03:35] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:04:43] *** Joins: csm3105 (~csm3105@47.61.127.217)
[20:05:20] *** Quits: nulixes (~Thunderbi@p508523e1.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[20:05:20] *** nulixes1 is now known as nulixes
[20:08:08] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[20:08:28] *** Quits: taupiqueur (~taupiqueu@137.145.204.77.rev.sfr.net) (Ping timeout: 272 seconds)
[20:08:59] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[20:10:06] *** Joins: adroitmachine_ (~adroitmac@182.64.104.84)
[20:11:29] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:12:15] *** Quits: nulixes (~Thunderbi@gateway/vpn/pia/nulixes) (Ping timeout: 260 seconds)
[20:16:37] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[20:23:16] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[20:23:28] <Svitkona> mmlj4, try wrapping your code in a document.onready
[20:24:59] <Svitkona> or, uh
[20:25:07] <Svitkona> document.addEventListener('DOMContentLoaded', ...)
[20:25:16] <mmlj4> hmm...
[20:26:15] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[20:34:04] *** Quits: sa0 (~sa0sin@88.120.82.205) (Remote host closed the connection)
[20:34:39] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:922:9594:2c6e:2b07)
[20:35:11] *** Joins: pluri (~pluri@user/pluri)
[20:39:07] *** Joins: vysn (~vysn@user/vysn)
[20:39:47] *** Quits: kmh (~kmh@2a00:6020:5004:6800:c28f:c4f0:695a:5bbb) (Quit: Leaving)
[20:40:03] *** Quits: bambanxx (~bambanx@2800:150:106:137e:c4a6:3f9e:cc61:dd25) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:40:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[20:40:37] *** Joins: wyclif (~wyclif@user/wyclif)
[20:43:43] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[20:45:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[20:46:09] *** Joins: wyclif (~wyclif@user/wyclif)
[20:48:23] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[20:50:16] *** Quits: cotko (~cotko@BSN-182-21-28.dynamic.siol.net) (Ping timeout: 272 seconds)
[20:50:20] *** Joins: kmh (~kmh@2a00:6020:5004:6800:2c38:c900:70ea:cd14)
[20:50:35] *** Joins: kmh_ (~kmh@2a00:6020:5004:6800:2c38:c900:70ea:cd14)
[20:51:56] *** Quits: kmh_ (~kmh@2a00:6020:5004:6800:2c38:c900:70ea:cd14) (Client Quit)
[20:52:24] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[20:55:10] *** Joins: l__q (~modinfo@user/modinfo)
[20:56:47] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 246 seconds)
[20:59:53] *** Joins: D3mned (~D1mned@212.101.253.81)
[20:59:53] *** Quits: D4mned (~D1mned@212.101.234.130) (Read error: Connection reset by peer)
[21:01:13] *** Joins: kakashiA1 (~kakashi@ip-037-201-198-071.um10.pools.vodafone-ip.de)
[21:05:33] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:06:39] *** Quits: average_ (uid473595@id-473595.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:07:42] <rick123> What's up with the <script>< + /script> here https://github.com/facebook/react/blob/e41fd1fc0605dde41cff53e01039633c8e852b6d/packages/react-dom/src/client/ReactDOMComponent.js#L405 ?
[21:09:29] *** Joins: olle (~olle@i5E866D97.versanet.de)
[21:10:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 272 seconds)
[21:12:14] <Alexendoo> rick123: https://github.com/facebook/react/pull/8855#pullrequestreview-18434625
[21:12:57] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:12:59] *** Joins: pmercado (~pmercado@190.22.83.12)
[21:13:39] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:14:15] *** Quits: junebug (~junebug@2600:1700:3db0:2540:335d:547c:5bbd:ea26) (Quit: Leaving)
[21:14:47] *** Quits: olle (~olle@i5E866D97.versanet.de) (Quit: leaving)
[21:17:23] <rick123> wow nice, how did you find that ?
[21:18:16] <rick123> Alexendoo: ^
[21:18:41] <rick123> You seem to be a silent detective
[21:18:51] <Alexendoo> rick123: the blame view
[21:19:30] <rick123> I did blame it goes to PR which might have a link to the other PR that you linked, sure. Would have to fo through each and every reference in that PR then. hehe
[21:19:50] <Alexendoo> The first commit is often not the one that introduced the change
[21:20:22] <Alexendoo> Generally hit prior until the thing you're looking for disappears, then check the one before that
[21:22:25] <rick123> Hah nice, yeah found it by myself now. Although guess we were lucky with this one :)
[21:22:43] <rick123> if no discussions would've happened, then...
[21:23:21] <Alexendoo> I guessed it was for that, I just didn't want to be the one to say it's a hack
[21:24:31] <rick123> hehe
[21:27:37] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[21:28:31] *** Joins: suss (~user@user/suss)
[21:29:54] *** Joins: konrados (~konrados@user-5-173-20-21.play-internet.pl)
[21:31:24] *** Joins: _filename (~kilitary@188.242.105.134)
[21:33:32] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 246 seconds)
[21:34:32] *** Joins: Snyp (~Snyp@49.207.197.152)
[21:35:47] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[21:38:45] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 256 seconds)
[21:42:29] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:45:17] *** Quits: jsmooth (~quassel@user/jsmooth) (Quit: jsmooth)
[21:47:15] *** Joins: Slade (uid128877@user/slade)
[21:49:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[21:50:25] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[21:51:01] *** Joins: wyclif (~wyclif@user/wyclif)
[21:51:42] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[21:52:05] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[21:52:30] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[21:53:33] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:53:48] *** Joins: codebam (~codebam@user/codebam)
[22:02:31] *** Joins: olle (~olle@i5E866D97.versanet.de)
[22:04:11] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[22:06:01] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:06:16] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[22:08:53] *** Quits: pmercado (~pmercado@190.22.83.12) (Ping timeout: 260 seconds)
[22:09:42] <OnkelTem> Hi all. How to abort test? In the middle if something goes wrong
[22:09:58] <OnkelTem> I tried throwing new Erorr but jest doesn't give s
[22:10:53] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[22:12:16] <OnkelTem> So throwing error doesn't fail test, and fail('assadsa') as well
[22:12:26] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[22:13:22] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Quit: Leaving...)
[22:13:47] *** Quits: adroitmachine_ (~adroitmac@182.64.104.84) (Ping timeout: 246 seconds)
[22:13:52] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 272 seconds)
[22:16:41] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:18:49] *** Joins: nulixes (~Thunderbi@gateway/vpn/pia/nulixes)
[22:19:10] *** Joins: cotko (~cotko@BSN-182-21-28.dynamic.siol.net)
[22:20:33] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[22:21:24] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[22:21:59] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[22:22:00] *** Quits: pulse (~pulse@user/pulse) (Quit: { indiedevs.net })
[22:22:23] *** Joins: Tempesta (Tempesta@user/tempesta)
[22:22:42] *** Joins: MRDPZK (~MRDPZK@d205-250-152-220.bchsia.telus.net)
[22:24:04] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:24:20] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[22:24:26] *** Joins: anomal (~anomal@176-12-60-137.pon.spectrumnet.bg)
[22:24:42] *** Joins: duuude (~user@user/duuude)
[22:25:17] *** Quits: anomal (~anomal@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[22:25:37] *** Joins: anomal (~anomal@176-12-60-137.pon.spectrumnet.bg)
[22:26:18] <duuude> have you seen github tags for repos? where when you put a "," the word become a tag, a word in a rectangle with a X to remove it. how can I do that? what should I do search for?
[22:29:44] *** Quits: anomal (~anomal@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 250 seconds)
[22:31:01] *** Joins: pulse (~pulse@user/pulse)
[22:36:06] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[22:37:15] *** Quits: ssh073 (~serg073@79.164.47.232) (Quit: The Lounge - https://thelounge.chat)
[22:37:23] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:6576:47b0:4677:7229) (Ping timeout: 260 seconds)
[22:38:30] *** Joins: voltage (voltage@user/voltage)
[22:38:36] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:e14b:b35c:9d30:4a6c)
[22:39:33] *** Joins: ssh073 (~serg073@79.164.47.232)
[22:40:02] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:40:21] *** Quits: ssh073 (~serg073@79.164.47.232) (Client Quit)
[22:40:28] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 272 seconds)
[22:41:52] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[22:41:57] *** Joins: anomal (~anomal@176-12-60-137.pon.spectrumnet.bg)
[22:42:08] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 261 seconds)
[22:43:53] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[22:45:27] *** Joins: i0e (~is0ke3@user/is0ke3)
[22:47:00] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[22:49:00] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[22:52:12] *** Joins: duuude (~user@user/duuude)
[22:55:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:56:54] *** Joins: useretail (~useretail@213.55.243.238)
[22:56:56] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[22:57:18] *** Joins: wyclif (~wyclif@user/wyclif)
[22:57:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[22:58:22] <useretail> how can i download a file if i have following tag: <video class="custom" src="blob:https://www.example.com/9e3531c3-4a37-4d0e-8674-2fd4e9ee7068">
[22:59:29] <useretail> *from console
[22:59:52] *** Joins: i0e (~is0ke3@user/is0ke3)
[23:02:36] *** voltage is now known as voltage_
[23:06:34] <mmlj4> how do you mean, from console?
[23:07:27] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:07:37] <useretail> mmlj4, so i could download it using js
[23:07:42] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[23:08:22] *** Joins: wyclif (~wyclif@user/wyclif)
[23:08:29] <mmlj4> does JS have a downloader, or fetcher?
[23:09:03] <mmlj4> I thought you meant something else be console
[23:09:21] <mmlj4> s/be/by/
[23:09:53] <useretail> no idea
[23:10:43] <mmlj4> https://www.delftstack.com/howto/javascript/javascript-download/
[23:10:54] <mmlj4> and probably a hundred other google hits
[23:10:58] <useretail> one idea is to create new <a> and use that blob as a href
[23:12:15] *** Quits: Snyp (~Snyp@49.207.197.152) (Quit: Textual IRC Client: www.textualapp.com)
[23:14:11] *** Joins: han-solo (~han-solo@user/han-solo)
[23:18:11] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[23:19:05] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[23:19:35] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 246 seconds)
[23:20:17] *** Joins: i0e (~is0ke3@user/is0ke3)
[23:20:47] *** Quits: cotko (~cotko@BSN-182-21-28.dynamic.siol.net) (Ping timeout: 260 seconds)
[23:21:59] *** Quits: anomal (~anomal@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[23:22:19] *** Joins: anomal (~anomal@176-12-60-137.pon.spectrumnet.bg)
[23:23:02] <useretail> mmlj4, the method described there doesn't work for blobs
[23:23:32] *** Quits: prawnsal_ (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (Ping timeout: 272 seconds)
[23:26:30] *** Quits: anomal (~anomal@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 250 seconds)
[23:31:54] <blueagain> mmlj4: in the browser, you have the Fetch API. node is on track to add it too, it's currently experimental afaik
[23:40:49] *** Joins: anomal (~anomal@87.227.196.109)
[23:43:04] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:45:08] *** Quits: anomal (~anomal@87.227.196.109) (Ping timeout: 250 seconds)
[23:48:19] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[23:55:13] *** Joins: bambanxx (~bambanx@2800:150:106:137e:185c:4752:d872:6620)
[23:55:47] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[23:58:13] *** Joins: i0e (~is0ke3@user/is0ke3)
[23:59:33] *** Joins: average_ (uid473595@id-473595.hampstead.irccloud.com)
