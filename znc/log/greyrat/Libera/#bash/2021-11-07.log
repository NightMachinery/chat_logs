[00:00:20] *** Joins: yourfate (~yourfate@cabal.yourfate.org)
[00:01:08] <xx> rendar: what was the bug?
[00:01:08] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[00:01:18] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 260 seconds)
[00:01:35] <rendar> now i have a question: i want to fill a device (e.g. a /dev/loop device) with random data, so i call dd with /dev/urandom, but now my question is: when the device is full (e.g. the image file associated with that /dev/loop has been completely written with random data from /dev/urandom) dd returns an error 'no space left on the device', which in my specific use case it NOT an error: i WANTED to fill the entire device with random data.. but the script also
[00:01:35] <rendar> checks if dd returned successfully to signal an error -- any idea how can i transform that no space left on the device not in an error?
[00:01:36] <vaio> hello, is there a easy way to strip punctuation mark from a "word" ? i'm currently using something along:   word=$1; word=${word//$'.'/}; word=${word//$'!'/}; etc ; but i feel something more efficient might exist ? :p
[00:02:16] <emanuele6> $'' are not needed
[00:02:24] <emanuele6> and yes, you can use a character class
[00:02:37] <vaio> thanks, i'll look that up!
[00:02:45] <emanuele6> word=${word//[.!]}
[00:02:55] <vaio> oh, righ
[00:02:57] <vaio> tyvm
[00:03:06] <emanuele6> important to not do [!.]
[00:03:10] *** Quits: sinaowolabi__ (~SinaOwola@160.152.117.193) (Ping timeout: 260 seconds)
[00:03:15] <emanuele6> that would mean any character but .
[00:03:35] <yourfate> I wrote a simple script to back up bitwarden password database using restic: https://gitlab.com/-/snippets/2201841 It stores the password in a variable. do I need to do any sort of clean up? to ensure the password is gone after the script exits?
[00:04:02] <rendar> any clues how to fix that problem?
[00:04:10] <vaio> emanuele6: thanks
[00:04:40] <vaio> so, does the "!" sign need to come as last ? (ie, any char after that one would be "negated" ?)
[00:04:57] <vaio> well, i'll tias :)
[00:05:00] *** Joins: Raguile (~Raguile@user/raguile)
[00:05:03] <llua> not write more data to the device than is possible?
[00:05:05] <emanuele6> no, it just needs to not be the first character
[00:05:14] <twkm> rendar: not a bash issue, try a channel related to your o/s.
[00:05:16] <vaio> ok :)
[00:05:19] <rendar> ok
[00:05:57] <emanuele6> !glob > vaio
[00:05:57] <greybot> vaio: Globs are shell patterns that can be used for matching strings or expanding pathnames: [[ $name = Bob* ]]; rm -- *.txt; see http://mywiki.wooledge.org/glob
[00:06:14] <emanuele6> you can learn about glob patterns there ^
[00:06:30] <vaio> reading, thanks!
[00:06:59] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 264 seconds)
[00:07:47] <vaio> aah, so [![:alnum:]] might totally do it (as i'm ok to keep number, if any)
[00:08:04] <xx> rendar: || true
[00:08:22] <emanuele6> if you only want letters and numbers, then you should be using that
[00:08:32] <emanuele6> that also excludes spaces though
[00:08:35] *** Quits: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[00:09:02] <emanuele6> [![:blank:][:alnum:]] could be used to also allow space characters
[00:09:18] *** Joins: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479)
[00:09:30] <rendar> xx, huh?
[00:09:53] <emanuele6> by the way, note that these are locale dependant classes that include may or may not match non ascii characters like à, è, etc
[00:09:54] <xx> rendar: dd if=/dev/zero of=/dev/null bs=1M count=100 || true
[00:09:58] <xx> will always return true
[00:13:09] *** Joins: dermoth (~dermoth@dsl-10-148-61.b2b2c.ca)
[00:13:23] <rendar> xx, but i don't want that! i want that dd signal errors when they occur
[00:13:34] <rendar> i don't want *only* the no space left error
[00:13:39] <rendar> ENOSPC
[00:13:40] *** Quits: earnestly (~earnest@user/earnestly) (Read error: Connection reset by peer)
[00:13:48] *** Quits: AndreYuhai (~porfavord@088156211167.radom.vectranet.pl) (Quit: Lost terminal)
[00:14:01] *** Joins: magla (~gelignite@55d4f5a2.access.ecotel.net)
[00:14:06] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[00:14:29] <tangy> rendar, what is it now?
[00:14:45] <xx> rendar: then you'll have to capture and parse the output of dd
[00:15:44] *** Quits: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970) (Quit: WeeChat 3.3)
[00:15:47] <geirha> or use a general purpose programming language
[00:15:59] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 264 seconds)
[00:16:44] *** Joins: earnestly (~earnest@user/earnestly)
[00:18:26] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[00:18:27] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[00:18:33] <llua> or not write more data to the device than is possible
[00:18:43] <kurahaupo> xx: s/output/stderr/ (dd almost goes out of its way to be unhelpful)
[00:20:00] <rendar> llua, i think it's dd fault here
[00:20:21] <llua> its a user error
[00:20:44] <kurahaupo> If writing to a file, it may be possible to use truncate(1) to preallocate its size and detect ENOSPC before you start copying
[00:22:19] <llua> sticking your hand into fire isn't a problem of the fire being hot.
[00:22:45] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[00:24:37] *** Parts: Raguile (~Raguile@user/raguile) ()
[00:25:00] <rendar> kurahaupo, yep
[00:25:15] <rendar> in your opinion, what is the best way to detect ENOSPC from dd?
[00:25:50] *** Joins: mikeliuk (~mikeliuk@213.205.198.125)
[00:27:48] <xx> in my opinion, it's easier to prevent errors than try to deal with them once they happen
[00:28:39] <kurahaupo> if report=$( 2>&1 dd of=… if=… etc ) ; then Ok ; else case $report in *'out of space message here'*) Handle ENOSPC ;; *) handle unknown error ; esac; fi
[00:29:00] *** Joins: ano (~ano@user/ano)
[00:30:04] <rendar> kurahaupo, i think that's quite fragile
[00:30:07] <tirnanog> why, though?
[00:30:47] <kurahaupo> rendar: Agreed. You said "best", not "good". There is no "good"
[00:30:49] <tirnanog> I mean, why do you need to know that it failed on account of ENOSPC?
[00:31:42] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[00:32:51] <rendar> tirnanog, because i'm filling a device with random data, and ENOSPC is not an error in my case
[00:33:21] <tirnanog> if you mean a block device, ascertaining the size in advance should be feasible.
[00:33:46] <kurahaupo> Or equivalently: case $( 2>&1 dd of=… if=… etc ):$? in *:0| *'out of space message here'*) Success ;; *) Handle error ; esac
[00:34:08] <tirnanog> if it's just a regular file within a filesystem, it's another matter.
[00:34:22] <kurahaupo> What about if it's a sparse virtual block device?
[00:34:25] <rendar> tirnanog, it's not always feasible
[00:34:39] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:35:17] <tirnanog> in the case of block devices, it almost always is.
[00:35:18] <geirha> I'd switch to python
[00:35:55] <kurahaupo> I'd switch to Perl
[00:36:07] <rendar> geirha, i use python daily, but i don't see how it can help more than bash here
[00:36:13] <rendar> even python would call dd, i guess
[00:36:35] <geirha> reading a chunk of bytes and writing it to another file is not very hard to do in python
[00:36:45] <geirha> and then you have actual error handling in python
[00:36:58] *** Joins: earendel (uid498179@user/earendel)
[00:37:04] <kurahaupo> rendar: Open input file, open output file, loop read block, write block, end loop, close files. Error check everything
[00:37:18] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[00:37:57] <kurahaupo> Why invoke dd to do s such a simple task from Python (or Perl)?
[00:38:05] <rendar> geirha, my problem is that i'd need another python file, i'm doing this because this script should be stand-alone, without 3rd party stuff, this is why i'm falling back to dd if not more advanced tools exist in the system
[00:38:08] <tirnanog> rendar: why do you think it's not feasible? can you clarify your use case?
[00:38:27] <rendar> tirnanog, i'm filling of random data a device
[00:38:42] <tirnanog> ok. and?
[00:38:47] *** Joins: seninha (~seninha@user/seninha)
[00:38:50] <kurahaupo> rendar: Both Python & Perl allow you to specify an entire program as a command line argument
[00:38:51] <tirnanog> is it a block device?
[00:38:59] <rendar> which i don't know anything about, it can even be virtual block device or something like that, as kurahaupo said
[00:39:00] <tirnanog> (that you are writing to)
[00:39:04] <rendar> yes
[00:39:08] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:39:12] <tirnanog> does it need to be portable?
[00:39:17] <rendar> yes
[00:39:22] <tirnanog> in what respect?
[00:39:34] <rendar> the more use cases it covers, the better
[00:40:42] <tirnanog> is portability really a goal? I only ask because you seemed to be happy with some of the gnu/linux specific ideas emanating in #linux.
[00:40:55] <rendar> well, it's not a priority, no
[00:41:04] <tirnanog> then please answer questions honestly.
[00:41:18] <rendar> usually we're speaking of blocking devices like USB keys, loop devices, hdd's devices
[00:41:25] <rendar> so, TJ's solution is pretty good
[00:41:37] <rendar> i can read the size from those /sys files, and use that in dd
[00:41:56] <rendar> but i wish to handle ENOSPC error anyway, because that's not an error, and it will block the entire script
[00:42:12] <tirnanog> util-linux gives you blockdev(8) for example, which is scripting-friendly.
[00:42:18] <tirnanog> and yes, there is sysfs also.
[00:42:56] <rendar> yes, problem solved on that side, but i still want to handle ENOSPC correctly... shouldn't dd return ENOSPC in exit code?
[00:43:01] <tirnanog> otherwise, there is no proper way to know that dd failed on account of ENOSPC and, if you were to insist on that, I would have to agree that you should use something else.
[00:43:09] <tirnanog> no.
[00:43:13] <rendar> ok
[00:43:18] <tirnanog> if the specification does not say that it should do so (it doesn't) then you can't rely on it doing so.
[00:43:23] <emanuele6> LSB requires both a perl interpreter and a python interpreter
[00:43:33] <tirnanog> th eonly thing that is guaranted is that it exits >0 in the case of failure.
[00:43:49] *** Quits: darkstardevx (~darkstard@50.39.114.152) (Read error: Connection reset by peer)
[00:43:51] *** Quits: djph (~dpurgert@cpe-107-10-235-152.neo.res.rr.com) (Remote host closed the connection)
[00:43:59] <rendar> so, the best thing to do, at least is to check if in dd's stderr there are "no" "space" "left" words
[00:44:37] <llua> preventing the error from occurring
[00:44:46] <rendar> llua, IT'S NOT AN ERROR!
[00:45:07] <tirnanog> it is an error. how you respond to it is a distinct matter.
[00:45:08] <llua> clearly it is
[00:45:16] <emanuele6> the best thing is to check the undocumented output of GNU dd that is not specified neither by POSIX nor by LSB instead of just using python it seems
[00:45:19] <tirnanog> in any case, that doesn't sound like a good idea to me.
[00:45:27] <rendar> tirnanog, which one?
[00:45:29] <tirnanog> if you only want to target GNU dd, I suppose you could wing it.
[00:45:34] <tirnanog> scraping stderr.
[00:45:41] <rendar> tirnanog, at least, its a thing
[00:46:05] <tirnanog> it's not a specified thing. that's the issue.
[00:46:22] <rendar> but at least it will work in a big % of dd's out there
[00:47:18] <tirnanog> probably.
[00:49:24] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[00:52:32] *** Joins: darkstardevx (~darkstard@50.39.114.152)
[00:52:35] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[00:53:28] *** Quits: darkstardevx (~darkstard@50.39.114.152) (Remote host closed the connection)
[00:53:54] *** Joins: dante (~dante@111.119.245.186)
[00:53:55] *** Joins: darkstardevx (~darkstard@50.39.114.152)
[00:54:30] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 260 seconds)
[00:54:43] <dante> hi
[00:55:10] <llua> hi
[00:55:21] *** Quits: dante (~dante@111.119.245.186) (Client Quit)
[00:55:41] <llua> bye
[00:56:09] <tirnanog> rendar: by the way, you could just use shred(1), as far as gnu systems go. at least it won't try to write more more data than the reported capacity of the block device affords.
[00:56:50] <rendar> tirnanog, i know, i'm using dd as a fallback, if all other tools doesn't exist in the system
[00:56:53] <tirnanog> ok.
[00:56:56] <rendar> since it is always present in almost any system
[00:57:36] <xx> rendar: cat is always present too
[00:58:08] <rendar> xx yes, i could use cat instead of dd
[00:58:16] *** Joins: sebastorama (~sebastora@190.83.56.68)
[00:58:27] <rendar> but i think cat also returns error on ENOSPC
[00:58:27] <xx> I mean, since you're in #bash, you might as well use bash instead of cat
[00:58:47] <tirnanog> it's not going to address the stated requirement.
[00:59:17] <xx> the stated requirement is weird in my opinion, why not find the size of the drive before trying to write to it?
[00:59:31] <rendar> xx, it's not always feasible
[00:59:47] <emanuele6> # printf 'a\0b\0c' | read -r; declare -p PIPESTATUS # bash, can't handle binary data :(
[00:59:47] <shbot> emanuele6: declare -a PIPESTATUS=([0]="0" [1]="1")
[01:00:13] <emanuele6> err, bad example
[01:00:21] <emanuele6> # printf 'a\0b\0c\nx\n' | read -r; declare -p PIPESTATUS # bash, can't handle binary data :(
[01:00:22] <shbot> emanuele6: declare -a PIPESTATUS=([0]="0" [1]="0")
[01:00:41] <emanuele6> no error, no failure
[01:00:47] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[01:00:49] <xx> rendar: not feasible? How so?
[01:00:56] <rendar> xx, here's what i think:
[01:01:00] <emanuele6> # printf 'a\0b\0c\nx\n' | { read -r; declare -p REPLY ;}; declare -p PIPESTATUS
[01:01:01] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:01:01] <shbot> emanuele6: declare -- REPLY="abc"
[01:01:01] <shbot> emanuele6: declare -a PIPESTATUS=([0]="0" [1]="0")
[01:01:11] <emanuele6> and the NULs are just ignored
[01:01:16] <xx> that was a fun thought
[01:02:29] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[01:03:25] <llua> !b6
[01:03:25] <greybot> When given a choice of solutions, the newbie will always choose the wrong one.
[01:03:55] <xx> well stop making the wrong solutions so appealing then
[01:08:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[01:10:54] *** Quits: H3dn1ng (~H3dn1ng@185.213.154.236) (Quit: leaving)
[01:13:36] *** Joins: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970)
[01:18:17] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[01:21:07] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[01:22:07] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:22:50] *** Joins: user837347 (~user83734@2a02:c7f:1ec1:4000:3aec:3dbd:6b75:c1a4)
[01:26:49] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:27:29] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 268 seconds)
[01:27:32] *** Joins: sebastorama (~sebastora@190.83.56.68)
[01:29:25] *** Quits: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479) (Quit: see you tomorrow)
[01:29:47] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[01:30:26] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[01:32:18] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[01:33:44] <akoana> python3 -c $'with open("file","w") as f:\n for i in range(1000):\n  f.write("x"*1024)'  # for example on a 100k ext4 fs throws an exception with the correct errno:  "OSError: [Errno 28] No space left on device"
[01:35:06] *** Quits: makara_ (~makara@196.214.171.83) (Ping timeout: 245 seconds)
[01:37:13] <akoana> sorry for posting a python program here, that was meant for rendar (though they left...)
[01:37:15] *** Joins: makara1 (~makara@196.214.171.83)
[01:37:26] *** Quits: makara (~makara@196.214.171.83) (Ping timeout: 260 seconds)
[01:37:37] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[01:37:45] *** Joins: makara (~makara@196.214.171.83)
[01:39:40] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[01:39:48] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[01:43:16] <emanuele6> akoana: you don't even need $'\n', you can use ;
[01:43:27] *** Joins: rando25892 (~user@user/rando25892)
[01:43:51] <emanuele6> ah, didn't notice it was a with statement, nevermind
[01:44:10] <akoana> and for requires a newline too
[01:44:18] <emanuele6> yeah
[01:44:26] <emanuele6> my bad
[01:44:54] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 260 seconds)
[01:46:01] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Quit: Leaving)
[01:48:59] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:48:59] <extern> if [[ $NEWFILE == "" || ! -e $FILE ]]; then
[01:49:06] <akoana> but, to be fair, the for loop could be avoided, f.write("x"*1024000)  :)
[01:49:10] <extern> where FILE="$1" and NEWFILE="$2"
[01:49:51] <extern> why the script is entering this statement even though there is second parameter and FILE exists
[01:50:59] <extern> what am i doing wrogn
[01:51:03] *** Quits: wigums (~wigums@user/wigums) (Read error: No route to host)
[01:51:50] <extern> geirha:
[01:52:08] *** Quits: n4dir (~user@i577BC98A.versanet.de) (Remote host closed the connection)
[01:54:14] *** Quits: sebastorama (~sebastora@190.83.56.68) (Ping timeout: 260 seconds)
[01:55:21] *** Joins: wigums (~wigums@user/wigums)
[01:56:31] *** Joins: CaCode (~CaCode@user/cacode)
[02:04:35] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[02:04:57] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[02:12:04] *** Joins: sebastorama (~sebastora@190.83.56.68)
[02:13:49] <Soliton> ! is negation.
[02:14:16] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[02:14:21] *** Quits: ogis (~Android@240d:1c:3d:9500:c5bb:8662:fba7:ec08) (Ping timeout: 268 seconds)
[02:16:19] *** Joins: ogis_ (~Android@neoau1-133-203-129-191.tky.mesh.ad.jp)
[02:17:30] <Soliton> if you want to check for existence of an argument you should check $#, btw.
[02:18:42] *** Quits: mikeliuk (~mikeliuk@213.205.198.125) (Quit: Connection closed)
[02:18:51] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:19:19] <Benway> thank you #bash!  ICANWIN terminal system monitor!  http://0x0.st/-51_.sh
[02:19:26] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 260 seconds)
[02:19:45] <Benway> temp, cpu, memory, time.
[02:20:06] <Soliton> !check
[02:20:07] <checkbot> Benway: Line 50: Declare and assign separately to avoid masking return values. Line 55: Quote this to prevent word splitting. Line 116: read without -r will mangle backslashes. See https://shellcheck.net/?id=cb39007 for all 34 issues.
[02:20:10] *** Joins: rgrinberg (~textual@190.113.102.153)
[02:20:25] <Benway> oh dear :)
[02:21:02] <Soliton> !lists
[02:21:02] <greybot> In bash, a list of things is expressed using arrays: things=( Bob "Long John" /home/* ). Do NOT use string variables (things="Bob Long John /home/*") and do NOT use wordsplitting: for thing in $(find /things/*). See !arrays !wordsplitting !drlwf !quotewhen
[02:23:17] <emanuele6> I don't get that extract function
[02:24:01] <Benway> use a readarray instead?
[02:24:15] <emanuele6> what does that even do?
[02:24:57] <Soliton> use an array and just access array elements.
[02:25:15] <emanuele6> # extract () { n=$2; set -- $1; echo ${!n} ;}; extract 432423 4
[02:25:16] <shbot> emanuele6: no output
[02:25:23] <emanuele6> as expected
[02:25:32] <emanuele6> i don't get what you think it should do
[02:25:38] <emanuele6> # extract () { n=$2; set -- $1; echo ${!n} ;}; extract 432423 4 321 3021 9830 18039180
[02:25:38] <Soliton> also should use (()) for math and don't inject arbitrary variables into the print format.
[02:25:38] <shbot> emanuele6: no output
[02:25:55] <Benway> return element at index
[02:26:09] <emanuele6> but it doesn't do that as you can see
[02:26:40] <emanuele6> oh, you are passing a "list of words"
[02:27:11] <emanuele6> yuck
[02:27:24] <emanuele6> # extract () { n=$2; set -- $1; echo ${!n} ;}; extract "list of words" 2
[02:27:25] <shbot> emanuele6: of
[02:27:45] <emanuele6> you don't need ${!n}
[02:27:56] <emanuele6> # extract () { n=$2; set -- $1; echo ${@:n:1} ;}; extract "list of words" 2
[02:27:57] <shbot> emanuele6: of
[02:28:02] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[02:28:10] <emanuele6> but you should not be using this stuff
[02:28:33] <Benway> thank you both
[02:28:38] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:28:53] *** Joins: MTecknology (~Mike@user/mtecknology)
[02:30:04] <Benway> Soliton: this is bad? DELAY=${1:-3}
[02:30:12] *** Joins: iamGavinJ (~iamGavinJ@user/iamgavinj)
[02:30:34] <Soliton> !caps
[02:30:34] <greybot> By convention, environment variables (PATH, EDITOR, SHELL, ...) and internal shell variables (BASH_VERSION, RANDOM, ...) are fully capitalized. All other variable names should be lowercase. Since variable names are case-sensitive, this convention avoids accidentally overriding environmental and internal variables. https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html
[02:32:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[02:34:41] *** Joins: kill (~killown@user/killown)
[02:36:33] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 268 seconds)
[02:39:56] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[02:40:15] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 268 seconds)
[02:41:38] *** Quits: Inline (~Inline@2a02:908:1252:7a80:da94:668f:b78c:97b1) (Remote host closed the connection)
[02:41:56] *** Joins: Inline (~Inline@2a02:908:1252:7a80:d6e1:9cdb:c2c:75e6)
[02:42:49] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:43:03] <Benway> http://0x0.st/-51x.sh
[02:43:06] <sixwheeledbeast> Is there a reason for not using variables in printf format? Should it never be done?
[02:43:31] <Benway> i couldn't get the escape sequences working putting them outside of the quotes
[02:43:54] <Soliton> because they're not escape sequences.
[02:44:34] <Benway> i printed the vars as %s strings
[02:44:41] <Soliton> if you specifically write printf format stuff into the variable it's fine but not for variables with arbitrary contents.
[02:45:01] <ormaaj> sixwheeledbeast: You probably mean constructing a
[02:45:16] <ormaaj> ...format string
[02:48:02] <ormaaj> For the most part format strings don't interact with shell variables except `%n` (which is rare and should be avoided) and %p (which most shells don't support)
[02:48:27] <sixwheeledbeast> I believe I have used a var to hold printf escape sequences for colour. I read SC2059 and understood it as ok?
[02:48:39] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Quit: /msg NickServ IDENTIFY john_johnk Dg/ZXA'N)
[02:49:00] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[02:49:28] *** Joins: djph (~dpurgert@cpe-107-10-235-152.neo.res.rr.com)
[02:49:47] <sixwheeledbeast> # txtRed='\e[31m%s\e[0m\n' ; printf "$txtRed" "foo"
[02:49:48] <shbot> sixwheeledbeast: [31mfoo[0m
[02:50:00] <sixwheeledbeast> maybe it's not and there's a better way?
[02:50:35] <ormaaj> It is almost never necessary to inject code into a format string.
[02:51:42] <ormaaj> that usage is ok.
[02:51:45] <Soliton> looks unreadable to me but it's not wrong.
[02:51:46] <Benway> irc color codes are not same as shell/ansi color codes btw
[02:52:38] *** Quits: djph (~dpurgert@cpe-107-10-235-152.neo.res.rr.com) (Client Quit)
[02:52:49] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[02:52:53] *** Joins: djph (~dpurgert@cpe-107-10-235-152.neo.res.rr.com)
[02:53:05] <Soliton> if you want to print red text multiple times i'd write a function.
[02:53:12] <xx> if tput is available, use that to define the colors
[02:53:16] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[02:53:40] <sixwheeledbeast> I have seen arguments for and against tput
[02:53:51] *** Joins: alzgh (alzgh@user/alzgh)
[02:54:01] <xx> what would be an argument against?
[02:54:03] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 256 seconds)
[02:54:11] <ormaaj> printf %b%s%b '\e31[' foo '\e0m\n'
[02:54:43] *** Quits: extern (~archer@80.246.130.109) (Quit: WeeChat 3.3)
[02:54:48] <ormaaj> One of many possibilities.
[02:54:56] <MTecknology> # printf %b%s%b '\e31[' foo '\e0m\n'
[02:54:57] <shbot> MTecknology: 31[foo0m
[02:55:24] <xx> # red=$(tput setaf 1); nc=$(tput sgr0); printf '%b' "${red}hello${nc}"
[02:55:25] <shbot> xx: hello
[02:56:20] <Benway> tput is for terminfo compatibility mapping
[02:57:15] *** Quits: user837347 (~user83734@2a02:c7f:1ec1:4000:3aec:3dbd:6b75:c1a4) (Quit: user837347)
[02:57:30] *** Joins: user837347 (~user83734@2a02:c7f:1ec1:4000:3aec:3dbd:6b75:c1a4)
[02:57:45] <ormaaj> looks like those escapes are wrong anyway
[02:58:01] *** Joins: loganlee (~Thunderbi@user/loganlee)
[02:58:17] <sixwheeledbeast> xx: as per https://mywiki.wooledge.org/BashFAQ/037
[02:58:19] <Soliton> you messed them up, yes.
[02:58:26] *** Quits: nyjets (~zz@2001:8003:1612:d500:1a8:7013:fe5c:fbd4) (Quit: WeeChat 1.1.1)
[02:59:01] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:59:08] <ormaaj> Oh yes.
[03:03:23] *** Joins: fstd (~fstd@xdsl-87-79-44-169.nc.de)
[03:03:26] *** Quits: fstd_ (~fstd@xdsl-81-173-152-177.nc.de) (Ping timeout: 245 seconds)
[03:05:04] *** Joins: rgrinberg (~textual@190.113.102.153)
[03:05:06] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[03:05:27] *** Joins: darkstarx (~darkstard@185.226.144.76)
[03:06:02] *** Quits: zro (~zro@user/zro) (Ping timeout: 260 seconds)
[03:06:14] <xx> kind of a pity that linux-16color is not default on the vty
[03:06:27] <Benway> thank you ormaaj the %b works
[03:06:42] <xx> I can make it default somehow probably
[03:07:19] <ormaaj> xx: I just do it in bashrc
[03:07:21] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:07:40] *** Quits: iamGavinJ (~iamGavinJ@user/iamgavinj) (Quit: iamGavinJ)
[03:07:49] *** Joins: zro (~zro@user/zro)
[03:07:58] *** Quits: darkstardevx (~darkstard@50.39.114.152) (Ping timeout: 260 seconds)
[03:08:48] <xx> if [[ $TERM == 'linux' ]]; then TERM='linux-16color'; fi
[03:09:24] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[03:09:28] <xx> of course it goes against the advice of never setting TERM in bashrc
[03:10:12] <ormaaj> I always set it there.
[03:10:19] <Soliton> if you conditionally set it like that because the terminal cannot set linux-16color itself it's not so bad.
[03:10:23] <ormaaj> Works fine
[03:10:29] *** Joins: darkstardev13 (~darkstard@176.113.72.221)
[03:13:02] *** Quits: darkstarx (~darkstard@185.226.144.76) (Ping timeout: 260 seconds)
[03:13:35] *** Joins: John_Ivan (~John_Ivan@user/john-ivan/x-1515935)
[03:13:43] *** Joins: alzgh (~alzgh@user/alzgh)
[03:13:43] *** Quits: glazed (~glazed@2603-8001-6902-f659-f84f-0178-3e06-897e.res6.spectrum.com) (Quit: Client closed)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:50] *** Joins: iamGavinJ (~iamGavinJ@user/iamgavinj)
[03:16:10] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:17:06] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[03:17:17] <ormaaj> oh nevermind no i don't. I'm thinking of some other code for dealing with tmux.
[03:17:26] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[03:18:27] *** Joins: darkstarx (~darkstard@50.39.114.152)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:20:56] *** Quits: darkstardev13 (~darkstard@176.113.72.221) (Ping timeout: 245 seconds)
[03:23:09] *** Joins: ntwk (~ntwk@user/ntwk)
[03:24:42] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[03:25:54] *** Joins: jess (~jess@libera/staff/jess)
[03:26:25] <loganlee> hello can i replace this if statement with something like {....}? https://paste.debian.net/1218483/
[03:26:50] <yitz> !&&
[03:26:51] <greybot> Short-circuit control operators <http://mywiki.wooledge.org/BashSheet#Tests> A || B means "Run A. If A fails, run B." A && B means "Run A. If A succeeds, run B." Example: foobar || { echo "error" >&2; exit 1; }
[03:27:59] <ormaaj> You want to conditionally define the function?
[03:28:30] <loganlee> no i want to conditionally execute a block
[03:29:16] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 245 seconds)
[03:29:22] <loganlee> i want something that looks neater than if statement
[03:29:35] <xx> loganlee: if statements are neat and readable
[03:29:39] <yitz> !&& > loganlee
[03:29:39] <greybot> loganlee: Short-circuit control operators <http://mywiki.wooledge.org/BashSheet#Tests> A || B means "Run A. If A fails, run B." A && B means "Run A. If A succeeds, run B." Example: foobar || { echo "error" >&2; exit 1; }
[03:30:02] *** Quits: waxfire (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:30:12] *** Joins: waxfire (~waxfire@65.119.2.240)
[03:30:31] <xx> I'm still not clear on the whole A && B || C meaning that C can run if A or B is false
[03:30:34] <loganlee> xx: code inside if statement will be very long
[03:30:44] <loganlee> and there will be multiple if statements
[03:30:49] <xx> loganlee: that's fine, a computer can read long things
[03:31:13] <loganlee> my problem is like a decision tree. if A then do this if B do this
[03:31:27] <loganlee> but A and B are very long
[03:31:27] <xx> then you might want a switch statement, and not if statements
[03:31:45] <yitz> # sleep 1; true && false || echo 'Will this run?'
[03:31:47] <shbot> yitz: Will this run?
[03:31:56] <xx> yitz: blows my mind
[03:32:18] <loganlee> so i was thinking surround each of them with { ... }
[03:32:22] <ormaaj> If Is tidier if the branch you're guarding is more than one simple command and a few less common exceptions.
[03:34:11] <ormaaj> e.g. condition || [[ ... ]]
[03:34:28] *** Joins: totenkoph (~scythe@user/totenkoph)
[03:35:10] *** Joins: raz (~raz@107.191.104.145)
[03:35:10] *** Quits: raz (~raz@107.191.104.145) (Changing host)
[03:35:10] *** Joins: raz (~raz@user/raz)
[03:35:29] <loganlee> i guess i'll stick with if statements for each block
[03:37:58] <ormaaj> There are no "blocks"
[03:39:23] *** Quits: makara1 (~makara@196.214.171.83) (Ping timeout: 264 seconds)
[03:39:59] *** Quits: makara (~makara@196.214.171.83) (Ping timeout: 264 seconds)
[03:40:02] *** Joins: darkstardev13 (~darkstard@89.47.234.174)
[03:40:17] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[03:41:14] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:41:35] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[03:41:36] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[03:42:26] *** Quits: darkstarx (~darkstard@50.39.114.152) (Ping timeout: 260 seconds)
[03:42:27] *** Quits: unclutter (~gentoo@60.81-166-246.customer.lyse.net) (Ping timeout: 260 seconds)
[03:42:33] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 268 seconds)
[03:42:42] *** Quits: fstd (~fstd@xdsl-87-79-44-169.nc.de) (Read error: Connection reset by peer)
[03:43:47] *** Joins: zebrag (~chris@user/zebrag)
[03:43:49] *** Joins: fstd (~fstd@xdsl-87-79-44-169.nc.de)
[03:50:36] <ormaaj> Heh my sgr0 is $'\E(B\E[m' for xterm-256color and $'\E[m\017' for screen-256color. I never really paid attention to the value.
[03:53:38] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 268 seconds)
[03:54:07] *** Joins: nickdiazswag209 (~bjpenn_@98.42.87.100)
[03:54:16] *** Joins: makara (~makara@196.214.171.83)
[03:54:35] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:54:43] *** Joins: makara1 (~makara@196.214.171.83)
[03:55:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[03:55:15] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:55:53] *** Lord_of_Life_ is now known as Lord_of_Life
[03:58:35] *** Quits: jab416171_ (~jab416171@c-67-161-208-101.hsd1.ut.comcast.net) (Ping timeout: 264 seconds)
[04:00:14] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[04:01:44] *** Quits: magla (~gelignite@55d4f5a2.access.ecotel.net) (Quit: Stay safe!)
[04:04:47] *** Joins: jab416171 (~jab416171@c-67-161-208-101.hsd1.ut.comcast.net)
[04:05:11] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:05:31] *** Quits: zro (~zro@user/zro) (Ping timeout: 245 seconds)
[04:06:38] *** Joins: zro (~zro@user/zro)
[04:07:27] *** Quits: user837347 (~user83734@2a02:c7f:1ec1:4000:3aec:3dbd:6b75:c1a4) (Quit: user837347)
[04:09:36] *** Quits: Atque_ (~Atque@user/atque) (Remote host closed the connection)
[04:09:50] *** Joins: rgrinberg (~textual@190.113.102.153)
[04:12:04] *** Joins: Atque (~Atque@user/atque)
[04:13:08] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[04:13:41] *** Joins: ano (~ano@user/ano)
[04:17:15] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:20:29] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[04:23:34] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[04:31:11] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:37:14] *** Quits: rgrinberg (~textual@190.113.102.153) (Read error: Connection reset by peer)
[04:38:28] *** Joins: rgrinberg (~textual@190.113.102.153)
[04:40:01] *** Quits: brw (~bas@static.66.39.12.49.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[04:41:08] *** Joins: brw (~bas@static.66.39.12.49.clients.your-server.de)
[04:42:27] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[04:43:10] *** Quits: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net) (Ping timeout: 260 seconds)
[04:43:12] *** Quits: brw (~bas@static.66.39.12.49.clients.your-server.de) (Client Quit)
[04:44:17] *** Joins: brw (~bas@static.66.39.12.49.clients.your-server.de)
[04:47:51] *** Quits: knstn (~knstn@ppp-94-66-57-119.home.otenet.gr) (Quit: leaving)
[04:49:32] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[04:50:38] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[04:55:53] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[04:58:44] *** Joins: zostj (~rue@1-162-45-243.dynamic-ip.hinet.net)
[04:58:51] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 245 seconds)
[05:00:17] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[05:02:02] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[05:02:18] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[05:03:18] *** Joins: irf21k (~irf21k@2401:4900:4bca:2d46:1:0:d4e:7027)
[05:03:49] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[05:04:04] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:08:04] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 260 seconds)
[05:11:56] *** Enissay2 is now known as Enissay
[05:19:23] *** Quits: N4buc0 (~N4buc0@186.212.203.26) (Remote host closed the connection)
[05:23:26] *** Joins: darkstarx (~darkstard@gateway/vpn/pia/darkstardevx)
[05:25:12] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:25:55] *** Quits: darkstardev13 (~darkstard@89.47.234.174) (Ping timeout: 256 seconds)
[05:32:16] *** Joins: CaCode_ (~CaCode@user/cacode)
[05:35:11] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 264 seconds)
[05:35:19] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:37:46] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[05:38:05] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[05:40:34] *** Joins: WinterStar (~IceLight@user/icelight)
[05:46:10] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[05:46:31] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[05:48:58] *** Quits: darkstarx (~darkstard@gateway/vpn/pia/darkstardevx) (Remote host closed the connection)
[05:49:26] *** Joins: darkstarx (~darkstard@gateway/vpn/pia/darkstardevx)
[05:51:09] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[05:55:07] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[05:56:21] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:58:26] *** Quits: zro (~zro@user/zro) (Ping timeout: 245 seconds)
[05:59:11] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 264 seconds)
[06:00:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[06:00:42] *** Quits: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596) (Read error: Connection reset by peer)
[06:02:22] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:03:26] *** Joins: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596)
[06:04:59] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 268 seconds)
[06:06:43] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[06:09:16] *** Quits: Inline (~Inline@2a02:908:1252:7a80:d6e1:9cdb:c2c:75e6) (Ping timeout: 245 seconds)
[06:10:20] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:11:32] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[06:12:24] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[06:14:17] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[06:14:54] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[06:15:47] *** Quits: Nact (~l@host-85-27-120-251.dynamic.voo.be) (Quit: Konversation terminated!)
[06:16:41] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[06:17:18] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:22:43] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[06:26:15] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[06:29:43] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:33:55] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:34:24] *** Quits: John_Ivan (~John_Ivan@user/john-ivan/x-1515935) (Quit: Leaving)
[06:34:45] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[06:35:49] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[06:35:56] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[06:36:55] *** Joins: totenkoph (~scythe@user/totenkoph)
[06:44:28] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[06:46:32] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[06:49:10] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[06:50:57] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[06:52:44] *** Joins: ano (~ano@user/ano)
[06:56:33] *** Quits: saki (~saki@gateway/tor-sasl/saki) (Remote host closed the connection)
[06:56:53] *** Joins: saki (~saki@gateway/tor-sasl/saki)
[07:02:15] *** Quits: xx (~xx@user/xx) (Ping timeout: 256 seconds)
[07:02:23] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[07:02:25] *** Quits: ogis_ (~Android@neoau1-133-203-129-191.tky.mesh.ad.jp) (Quit: -a- Connection Timed Out)
[07:02:31] *** Joins: ferdna (~ferdna@user/ferdna)
[07:07:45] *** Joins: ogis (~Android@neoau1-133-203-129-191.tky.mesh.ad.jp)
[07:08:38] *** Quits: shailangsa (~shailangs@host86-185-98-19.range86-185.btcentralplus.com) ()
[07:09:12] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[07:14:05] *** Joins: rMdes (~rmdes@my.armada.digital)
[07:17:31] *** Joins: ponies (~ponies@61.69.203.88)
[07:22:57] *** Joins: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net)
[07:23:26] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 245 seconds)
[07:29:47] *** Quits: jos1 (~jos3@dyndsl-091-096-036-208.ewe-ip-backbone.de) (Ping timeout: 264 seconds)
[07:34:26] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 260 seconds)
[07:34:41] <jcbjoe2021> can somebody look at this https://dpaste.org/YtSy
[07:34:47] <jcbjoe2021> trying to figure out what is wrong
[07:36:07] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:37:09] <jetchisel> !check
[07:37:09] <checkbot> jetchisel: Unable to read that :/
[07:37:20] <jetchisel> !find > jcbjoe2021
[07:37:20] <greybot> jcbjoe2021: http://mywiki.wooledge.org/UsingFind
[07:40:02] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:19] <Benway> amazin channel :)  here's a version with up/download speeds, printing to terminal window title! :)  http://0x0.st/-5j5.sh
[07:41:03] <jcbjoe2021> this resolved it   find . -type f -exec sh -c 'cp -- "$@" /target' _ {} +
[07:41:05] <jcbjoe2021> ^
[07:41:56] <Benway> may i ask why sh -c instead of cp directly?
[07:42:15] <Benway> can't you do the -- before -exec ?
[07:42:52] *** Quits: cdown (~cdown@89.32.122.5) (Quit: Lost terminal)
[07:43:01] *** Joins: jos1 (~jos3@dyndsl-095-033-175-047.ewe-ip-backbone.de)
[07:44:05] <e36freak> because you can't use {} + and put another argument after it
[07:44:18] <e36freak> -- isn't needed though, it's already getting ./file
[07:44:42] <e36freak> with GNU cp you can do find ... -exec cp -t /target {} +
[07:45:41] *** Joins: shailangsa (~shailangs@host86-185-98-19.range86-185.btcentralplus.com)
[07:51:53] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[07:52:48] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[07:53:41] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[07:53:45] *** Joins: vishal (~vishal@fedora/vishal)
[07:57:03] <jcbjoe2021> ok i need help it worked but didn't
[07:57:10] <jcbjoe2021> ok e36freak so cp -t ?
[07:57:33] <jcbjoe2021>  find . -type f -iname '2106*.*' -exec sh -c 'cp -- "$@" /mnt/d/MAIN PICTURES/Josef/Google Photos_1of9/Photos from 2021/test/test2/' _ {} +
[07:57:33] <jcbjoe2021> cp: target '2021/test/test2/' is not a directory
[07:57:39] <jcbjoe2021> not working
[07:57:45] *** Joins: annomy (~annomy@103.38.199.98)
[07:57:47] <annomy> s
[07:58:08] <e36freak> are you trying to also recreate the directory structure?
[07:58:20] *** Quits: annomy (~annomy@103.38.199.98) (Client Quit)
[07:58:20] <e36freak> oh
[07:58:23] <e36freak> you're missing quotes
[07:58:25] <e36freak> obviously
[07:58:25] <jcbjoe2021> e36freak: nope
[07:58:31] <jcbjoe2021> where are the quotes im missing
[07:58:54] <e36freak> what happens if you run cp foo /mnt/d/MAIN PICTURES/Josef/Google Photos_1of9/Photos from 2021/test/test2/
[07:59:00] <e36freak> what's missing there
[07:59:07] *** Joins: annomy (~annomy@103.38.199.98)
[07:59:23] <e36freak> is /mnt/d/MAIN one of the files?
[07:59:38] <jcbjoe2021> yea its the main folder
[07:59:48] <e36freak> "/mnt/d/MAIN"
[07:59:49] <e36freak> just that
[07:59:59] <e36freak> that exists?
[08:00:15] <e36freak> what about "PICTURES/Josef/Google" ?
[08:00:29] <jcbjoe2021> joe@DESKTOP-LFG2FEV:/mnt/d/MAIN PICTURES/Josef/Google Photos_1of9/Photos from 2021/test$ cp 210614_200749.heic /mnt/d/MAIN\ PICTURES/Josef/Google\ Photos_1of9/Photos\ from\ 2021/test/test2/
[08:00:36] <jcbjoe2021> its from windows they have spaces
[08:00:40] <e36freak> one of those things is not like the other
[08:01:01] <e36freak> how does cp know whether the spaces distinguish separate arguments or spaces in one filename?
[08:01:13] <jcbjoe2021> don't know is that the problem ?
[08:01:25] <e36freak> obviously
[08:01:27] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[08:01:39] <e36freak> it's looking for a directory named "2021/test/test2"
[08:01:41] <e36freak> which doesn't exist
[08:01:47] <e36freak> you need to escape the spaces
[08:01:51] <e36freak> how did you do that
[08:02:02] <jcbjoe2021> joe@DESKTOP-LFG2FEV:/mnt/d/MAIN PICTURES/Josef/Google Photos_1of9/Photos from 2021/test/test2$
[08:02:04] <jcbjoe2021> ^
[08:02:12] <e36freak> no?
[08:02:22] <jcbjoe2021> test2 exist
[08:02:33] <e36freak> 2021/test/test2 does not exist
[08:02:42] <jcbjoe2021> oh
[08:03:11] <e36freak> 00:27 < jcbjoe2021> cp: target '2021/test/test2/' is not a directory
[08:03:18] <jcbjoe2021> nope
[08:03:21] <e36freak> right
[08:03:32] <e36freak> you need to tell cp those spaces are part of the filename
[08:03:41] <jcbjoe2021> is that in the man page?
[08:03:43] <e36freak> cp 210614_200749.heic /mnt/d/MAIN\ PICTURES/Josef/Google\ Photos_1of9/Photos\ from\ 2021/test/test2/
[08:03:48] <e36freak> it has nothing to do with cp itself
[08:03:50] <e36freak> this is part of bash
[08:03:53] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[08:03:56] <e36freak> what's in that command that's not in the other command?
[08:04:08] <jcbjoe2021> backslashes
[08:04:12] <e36freak> THERE you go
[08:04:22] <e36freak> !arguments > jcbjoe2021
[08:04:23] <greybot> jcbjoe2021: Understanding Arguments and Word Splitting: http://mywiki.wooledge.org/Arguments
[08:04:25] <e36freak> !quotes > jcbjoe2021
[08:04:26] <greybot> jcbjoe2021: https://mywiki.wooledge.org/Quotes
[08:06:09] <jcbjoe2021> e36freak: why when i tab complete the spaces in the directory it completes?
[08:06:28] *** Quits: zoe (~zoe@fsf/member/zoe) (Ping timeout: 268 seconds)
[08:06:32] <e36freak> huh?
[08:06:44] <e36freak> tab completion adds the backslashes or other needed quoting/escaping
[08:07:06] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 260 seconds)
[08:15:55] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[08:16:26] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Ping timeout: 260 seconds)
[08:17:03] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[08:17:37] <jcbjoe2021> ok
[08:19:51] <e36freak> !guide > jcbjoe2021
[08:19:52] <greybot> jcbjoe2021: http://mywiki.wooledge.org/BashGuide or in PDF: http://s.ntnu.no/bashguide.pdf
[08:20:17] <jcbjoe2021> ok thanks e36freak
[08:20:24] *** Joins: MercilessDeth (~brad@136.49.59.177)
[08:25:38] *** Joins: TuckerBrandy (~KAs@209.161.248.138)
[08:26:57] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[08:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[08:30:43] *** Joins: zro (~zro@user/zro)
[08:31:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[08:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[08:39:23] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 264 seconds)
[08:42:08] *** Joins: Everything (~Everythin@37.115.210.35)
[08:51:46] *** Quits: A|an (~Alan@173.216.51.200) (Quit: A|an)
[08:56:24] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:59:38] <Benway> at my uni they said 'dont use spaces in filenames'.   this was before the eternal september though
[09:01:20] * dodo puts emojis in filenames
[09:02:20] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:03:17] <e36freak> put whatever the fuck you want in filenames, just learn to handle them properly
[09:04:00] *** Joins: sinaowolabi__ (~SinaOwola@160.152.173.38)
[09:06:06] <dodo> what makes you think i don't already know?
[09:08:25] <ormaaj> Best practice is to run `touch -- /**/\*` on all systems, especially student computers.
[09:09:14] <peterrooney> Benway: that was probably easier on the profs than delivering the "here's how quoting, double quoting, meta characters, and escape characters work" lessons
[09:09:24] <Benway> yes
[09:09:30] <Benway> beginners, not sysadmins
[09:10:25] <Benway> what does that touch do ormaaj ?
[09:10:26] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:10:52] <ormaaj> Enhances learning.
[09:11:15] *** Joins: sebastorama_ (~sebastora@190.83.56.68)
[09:11:41] <Benway> learning would be knowing what it does
[09:11:51] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: Textual IRC Client: www.textualapp.com)
[09:12:07] *** sebastorama_ is now known as sebastorama
[09:12:09] <e36freak> ormaaj: i've already told you, no inappropriate touching
[09:13:04] <ormaaj> # echo /**/\* # might timeout
[09:13:05] <shbot> ormaaj: /**/*
[09:13:19] <e36freak> could, yeah
[09:15:13] <ormaaj> # shopt -s globstar; echo /**/\*
[09:15:13] <shbot> ormaaj: /**/*
[09:15:32] <ormaaj> Interesting...
[09:18:22] <ormaaj> I guess it considers extra parts part of the glob match so that's just a non-matching glob
[09:19:27] <jcbjoe2021> so i have a directory with lots of mp4 files i used find to find them all. question is how can i play them one by one and once done it cycles to the next one. not fast but i have time to close one and open the other?
[09:22:11] <ormaaj> Depends how you'd like to play them. You're probably using some media player that queues up its args.
[09:23:57] <jcbjoe2021> this command find . \( -iname '2106*.mp4' \) -exec xdg-open "{}" \; plays them all at once it dosen't pause or wait
[09:24:06] *** Quits: sinaowolabi__ (~SinaOwola@160.152.173.38) (Ping timeout: 260 seconds)
[09:25:04] <e36freak> whatever you're using to play them forks a child and the initial process ends
[09:25:18] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[09:25:20] <e36freak> bash, find, etc has no way of knowing when that child process finishes playing the song
[09:25:34] <e36freak> one option would be to use a different player that's not shit
[09:25:46] <jcbjoe2021> whats a good play mpv or something?
[09:25:51] <e36freak> you could also try passing all the filenames to it at once and letting it do its thing, try + instead of \;
[09:25:52] <jcbjoe2021> s/play/player/
[09:27:04] <e36freak> that's more an OS question, but yes mpv wouldn't be a bad choice
[09:27:19] <ormaaj> (assuming file count < ARG_MAX)
[09:27:22] <e36freak> ya
[09:27:36] <e36freak> probably a pretty safe assumption though
[09:27:46] <e36freak> unless they plan on queueing years worth of video
[09:27:48] <ormaaj> Hopefully
[09:27:59] *** Quits: iamGavinJ (~iamGavinJ@user/iamgavinj) (Ping timeout: 264 seconds)
[09:32:19] *** Quits: simplicity (~yti@user/simplicity) (Remote host closed the connection)
[09:33:20] *** Joins: simplicity (~yti@user/simplicity)
[09:33:58] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: Leaving)
[09:34:15] *** Joins: sebastorama (~sebastora@190.83.56.68)
[09:36:29] *** Joins: sinaowolabi__ (~SinaOwola@169.159.115.54)
[09:38:31] *** Joins: earendel (uid498179@user/earendel)
[09:40:01] *** Quits: sebastorama (~sebastora@190.83.56.68) (Remote host closed the connection)
[09:40:31] *** Joins: sebastorama (~sebastora@190.83.56.68)
[09:52:16] *** Quits: ogis (~Android@neoau1-133-203-129-191.tky.mesh.ad.jp) (Read error: Connection reset by peer)
[09:53:47] *** Quits: dermoth (~dermoth@dsl-10-148-61.b2b2c.ca) (Ping timeout: 264 seconds)
[09:54:30] *** Joins: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp)
[09:56:14] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 260 seconds)
[09:58:42] *** Joins: johnjay (~pi@192.142.100.50)
[10:01:25] *** Joins: lavaball (felix@31.204.155.215)
[10:01:33] *** Quits: annomy (~annomy@103.38.199.98) (Quit: WeeChat 3.3)
[10:05:33] *** Joins: dermoth (~dermoth@dsl-10-148-82.b2b2c.ca)
[10:05:38] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 260 seconds)
[10:08:15] *** Joins: johnjay (~pi@192.142.100.50)
[10:12:12] *** Joins: Hax0r (~Hax0r@93.169.49.84)
[10:15:21] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 268 seconds)
[10:15:29] *** Quits: sdu (~doo@185.44.146.165) (Remote host closed the connection)
[10:22:45] *** Quits: sinaowolabi__ (~SinaOwola@169.159.115.54) (Ping timeout: 268 seconds)
[10:27:19] *** Joins: vysn (~vysn@user/vysn)
[10:27:42] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:29:53] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[10:30:41] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[10:35:56] *** Quits: qub411 (~user@220.253.95.124) (Quit: WeeChat 3.0)
[10:36:56] *** Joins: sinaowolabi__ (~SinaOwola@102.134.114.1)
[10:39:18] *** Quits: sinaowolabi__ (~SinaOwola@102.134.114.1) (Remote host closed the connection)
[10:43:23] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[10:43:43] *** Quits: dre (~dre@2001:8003:c932:c301:c7a0:423f:5a6a:50c7) (Ping timeout: 268 seconds)
[10:45:53] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[10:48:33] *** Joins: rgrinberg (~textual@190.113.102.153)
[10:50:27] *** Quits: rgrinberg (~textual@190.113.102.153) (Client Quit)
[10:51:14] *** Joins: mei3 (~mei@user/mei)
[10:51:34] *** Joins: rgrinberg (~textual@190.113.102.153)
[10:56:30] *** Quits: Hax0r (~Hax0r@93.169.49.84) (Remote host closed the connection)
[10:56:54] *** Joins: Hax0r (~Hax0r@93.169.49.84)
[10:57:45] *** Quits: TuckerBrandy (~KAs@209.161.248.138) ()
[11:08:20] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:10:35] *** Quits: dermoth (~dermoth@dsl-10-148-82.b2b2c.ca) (Ping timeout: 264 seconds)
[11:16:12] *** Quits: kold (~quassel@S0106b0e4d5642fb6.cg.shawcable.net) (Quit: kold)
[11:17:14] *** Joins: rendar (~rendar@user/rendar)
[11:18:23] *** Quits: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au) (Ping timeout: 256 seconds)
[11:18:36] *** Joins: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au)
[11:22:31] *** Joins: dermoth (~dermoth@dsl-236-124-149.b2b2c.ca)
[11:25:26] *** Joins: angkat (~angkat@2a02:587:121f:f103:7e7a:c8ae:bfec:cb23)
[11:28:56] *** Joins: Hercules (~Hercules@user/hercules)
[11:29:02] *** Joins: unclutter (~gentoo@60.81-166-246.customer.lyse.net)
[11:29:59] *** Quits: Marbug (~Marbug@94-226-144-213.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[11:31:15] *** Joins: Marbug (~Marbug@94-226-144-213.access.telenet.be)
[11:35:46] *** Joins: alzgh (~alzgh@user/alzgh)
[11:42:59] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[11:50:07] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[11:50:56] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[11:50:57] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[11:50:57] *** Joins: wuseman (~wuseman@user/wuseman)
[11:50:59] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[11:52:23] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 256 seconds)
[11:53:31] *** Quits: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au) (Ping timeout: 256 seconds)
[11:53:51] *** Quits: irf21k (~irf21k@2401:4900:4bca:2d46:1:0:d4e:7027) (Ping timeout: 245 seconds)
[11:55:57] *** Joins: tex (~super@user/dix)
[11:56:32] *** Joins: polve (~polve@twcitalia/polve)
[11:56:54] *** Joins: extern (~archer@80.246.137.4)
[11:57:54] *** Quits: zeraphel (~daddy@2a00:a040:196:56d:96de:80ff:fefa:44a) (Quit: zeraphel)
[11:57:55] *** Joins: irf21k (~irf21k@223.186.101.236)
[12:02:07] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[12:02:48] *** Quits: ogis (~Android@fpa0563d97.aicf503.ap.nuro.jp) (Quit: -a- IRC for Android 2.1.59)
[12:04:22] *** Joins: pyre (~pyre@crimeboss.nillas-power.com)
[12:04:34] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 260 seconds)
[12:06:04] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[12:06:04] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[12:06:04] *** Joins: wuseman (~wuseman@user/wuseman)
[12:09:10] *** Quits: libsys (~libsys@186.105.159.91) (Read error: Connection reset by peer)
[12:09:29] *** Joins: libsys (~libsys@186.105.159.91)
[12:09:36] *** Quits: wuseman (~wuseman@user/wuseman) (Excess Flood)
[12:11:50] *** Joins: CaCode (~CaCode@user/cacode)
[12:13:44] *** Quits: CaCode (~CaCode@user/cacode) (Remote host closed the connection)
[12:14:03] *** Joins: CaCode (~CaCode@user/cacode)
[12:14:03] *** CaCode is now known as netester
[12:14:06] *** Quits: Marbug (~Marbug@94-226-144-213.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[12:14:22] *** Quits: netester (~CaCode@user/cacode) (Remote host closed the connection)
[12:14:52] *** Joins: netester (~CaCode@user/cacode)
[12:15:08] *** Joins: kurahaupo (~kurahaupo@pa49-195-92-201.pa.nsw.optusnet.com.au)
[12:16:03] *** Joins: Marbug (~Marbug@94-226-144-213.access.telenet.be)
[12:17:14] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[12:19:20] <rendar> if i have "/dev/loop/0" what is the best way to get "loop/0" ?
[12:19:42] <emanuele6> !pe
[12:19:42] <greybot> Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
[12:19:58] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:20:21] *** Joins: kurahaupo_ (~kurahaupo@123-243-221-134.tpgi.com.au)
[12:24:07] *** Quits: kurahaupo (~kurahaupo@pa49-195-92-201.pa.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[12:26:07] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:26:21] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[12:27:01] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[12:27:01] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[12:27:01] *** Joins: wuseman (~wuseman@user/wuseman)
[12:27:24] *** Lord_of_Life_ is now known as Lord_of_Life
[12:28:26] <rendar> aa="/dev/loop/0"; echo "${aa##*/}"  prints "0", but can't get how to print the latest 2 tokens separated by /
[12:28:36] <rendar> or, "loop/0"
[12:32:37] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[12:33:16] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[12:33:36] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[12:33:36] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[12:33:36] *** Joins: wuseman (~wuseman@user/wuseman)
[12:33:37] <rendar> echo "${aa##/dev/}" does what i want, but i don't know its the best solution
[12:35:27] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Read error: Connection reset by peer)
[12:36:10] *** Quits: wuseman (~wuseman@user/wuseman) (Remote host closed the connection)
[12:38:59] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[12:40:27] <ormaaj> # x=aaa/bbb/ccc/ddd/eee; shopt -s extglob; echo "${x#"${x%%*([^/])/*([^/])?(/)}"}"
[12:40:27] <shbot> ormaaj: ddd/eee
[12:41:35] <emanuele6> # x=aaa/bbb/ccc/ddd/eee; printf '%s\n' "${x#"${x%[!/]*/*}"}"
[12:41:36] <shbot> emanuele6: d/eee
[12:41:42] <emanuele6> err
[12:41:54] <emanuele6> you need exglobs
[12:42:24] <ormaaj> Yeah not globs. Dumb.
[12:42:31] <rendar> :|
[12:43:03] <emanuele6> # x=aaa/bbb/ccc/ddd/eee; printf '%s\n' "${x#"${x/%\/*\/*//}"}"
[12:43:04] <shbot> emanuele6: bbb/ccc/ddd/eee
[12:43:12] <emanuele6> nevermind
[12:44:50] <rendar> what is the best way to return from a function 2 integer values? separate them with "." into a string and then parse those tokens?
[12:45:07] <emanuele6> mmm, so ${var/#pat} and ${var/%pat} are equivalent to ${var##pat} and ${var%%pat} (always greedy), not to ${var#pat} and ${var%pat}
[12:45:48] <ormaaj> Better! Functions can't return anything ever.
[12:46:35] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 264 seconds)
[12:48:16] <emanuele6> # x=aaa/bbb/ccc/ddd/eee; printf '%s\n' "${x#"${x%/*/*}/"}"
[12:48:17] <shbot> emanuele6: ddd/eee
[12:48:21] <emanuele6> can still do this
[12:48:25] <emanuele6> without extglobs
[12:49:03] <ormaaj> namerefs, but good luck.
[12:49:16] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[12:49:16] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[12:49:16] *** Joins: wuseman (~wuseman@user/wuseman)
[12:50:09] *** Joins: pycurious (~Adium@user/pycurious)
[12:51:23] *** Quits: Hax0r (~Hax0r@93.169.49.84) (Remote host closed the connection)
[12:51:54] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:53:32] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:53:48] <gnoo> # declare -A ret; f() { ret[0]=2 ; ret[1]=4; ret[2]=$((ret[1]+2)) ; } ; f ; for ((i=1;i<${#ret[@]};i++)) ; do printf '%s\n' "returned-value-$i: ${ret[$i]}" ; done ;
[12:53:49] <shbot> gnoo: returned-value-1: 4
[12:53:49] <shbot> gnoo: returned-value-2: 6
[12:54:04] <gnoo> rendar: something like this i'd guess
[12:54:12] <rendar> i see, thanks
[12:54:23] *** Joins: extern_ (~archer@185.32.176.95)
[12:54:28] <rendar> it's a mess for such a simple thing
[12:54:41] <gnoo> hmm, it should be ${ret[0]} inside that for loop
[12:54:44] <emanuele6> !graduated
[12:54:44] <greybot> Congratulations! You've graduated to needing to use a real language!
[12:54:50] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[12:55:38] <emanuele6> gnoo: that is non-sense
[12:55:56] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 245 seconds)
[12:55:59] <emanuele6> why are you using an associative array if your keys are numbers?
[12:56:02] <gnoo> the convention being that first element stores no of return values
[12:56:17] <gnoo> (so multiple functions can use the same array)
[12:56:42] <gnoo> ohh, -A is associative. should've used -a
[12:56:47] *** Quits: extern (~archer@80.246.137.4) (Remote host closed the connection)
[12:57:24] <emanuele6> if you use a regular array, then you should access values as ${ret[i]}, not ${ret[$i]}
[12:58:19] *** Joins: earnestly (~earnest@user/earnestly)
[12:58:40] <emanuele6> and if you follow that convention, should it be: ((i=0+1;i<=ret[0];i++))  instead of the length of the array?
[12:58:41] <gnoo> okay, will keep that in mind. (i should really read that guide soon)
[12:58:50] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[12:58:50] <ormaaj> emanuele6: yes that works. It's litterally the only context that modifies everything to non-greedy so I thought of the extglob first.
[12:59:28] <emanuele6> also this doesn't really help much since the array is global anyway, so you can't use it for recursion
[12:59:38] *** Quits: vysn (~vysn@user/vysn) (Read error: Connection reset by peer)
[12:59:42] <ormaaj> That and the substitution pe
[12:59:58] <emanuele6> it just an overcomplicated functionname_ret1=    functionname_ret2=   really
[13:00:15] <gnoo> emanuele6: yes, so that if a function uses ret[5] and current one returns 3, you can set ret[0]=3. it kinda works if you assign return values at the end only
[13:00:46] *** netester is now known as CaCode
[13:00:55] <emanuele6> ormaaj: yes, it's weird. i actually though ${var/#} and ${var/%} would also be non-greedy, but they are
[13:01:06] *** Joins: ano (~ano@user/ano)
[13:01:08] <emanuele6> ${var#} and ${var%} are the odd PE
[13:01:13] <emanuele6> s/$/s/
[13:02:14] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[13:02:59] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[13:05:00] <pj> # var=xxx:yyy:zzz; echo "${var/#*:/aaa} ${var/%:*/bbb}"
[13:05:00] <shbot> pj: aaazzz xxxbbb
[13:05:03] <pj> Interesting, I didn't realize that ${var/#} and ${var/%} are greedy.
[13:05:09] <emanuele6> same
[13:05:56] <ormaaj> You'd think fnmatch would have a flag for that. Basically forces the shell to reimplement tbe matcher.
[13:06:38] <rendar> is this line correct? `if report=$( 2>&1 1>/dev/null sudo dd if="${filler_device}" of="${device_to_fill}" "${dd_options[@]}"; then`
[13:06:47] <pj> ...but tbh I would just use ${var#...} and ${var%...} for that.  What I find ${var/#} and ${var/%} come in handy for is something like this: cmd "${files[@]/#/--file=}"
[13:06:52] <rendar> my doubt would be about redirecting before 'sudo', any clues?
[13:07:12] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[13:07:36] <emanuele6> that is at least missing a parenthesis
[13:08:04] *** Joins: frostwork (~frostwork@user/frostwork)
[13:08:16] <pj> # files=(foo bar baz); echo mycommand "${files[@]/#/--file=}"
[13:08:16] <ormaaj> rendar: it is valid. But don't.
[13:08:16] <shbot> pj: mycommand --file=foo --file=bar --file=baz
[13:08:19] *** Joins: ^wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[13:08:19] *** Quits: ^wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[13:08:19] *** Joins: ^wuseman (~wuseman@user/wuseman/x-1147134)
[13:08:26] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 245 seconds)
[13:09:52] <rendar> ormaaj, why not?
[13:09:57] <pj> rendar: I think that would result in $report always being an empty string.
[13:10:02] <emanuele6> bash is going to add captures for ${var/pat/rep} in the next release iirc
[13:10:11] <ormaaj> rendar: missing )
[13:10:24] <emanuele6> pj: no, it's 2>&1 >/dev/null, not the other way around
[13:10:24] <rendar> oh right
[13:10:25] <pj> that too
[13:11:02] <pj> emanuele6: oh, right, I always get that confused, and putting that at the beginning of the command confused me further (I know it's allows I'm just not used to seeing it there).
[13:11:02] <emanuele6> 2>&1 save the old stdout in fd2 and then opens /dev/null on fd1
[13:11:38] <emanuele6> !redirvar
[13:11:54] <pj> I always put my redirections at the end, so it tends to throw me for a loop when they're not.
[13:12:01] <emanuele6> !redir2var
[13:12:01] <greybot> Try thinking of FDs as variables. Change > into = and >& into =$. 0=keyboard; 1=terminal; 2=logfile; command 2>&1 1>otherlog; does 2=$1 (so 2=terminal) and 1=otherlog. At the end, command's 0=keyboard, 1=otherlog and 2=terminal
[13:12:27] <emanuele6> pj: i generally prefer to have < at the start of the line and > 2> etc at the end
[13:12:37] <pj> emanuele6: interesting
[13:12:48] <pj> at the end of the day it's just a matter of style and personal preference.
[13:12:59] <emanuele6> but i prefer to put output redirection after echo and printf when using them
[13:13:11] <earnestly> Interactively using < at the front is useful so that you can adjust flags/arguments without having to jump over the redirect to get at them
[13:13:13] <gnoo> rendar: can't you get the size of device_to_fill using something like lsblk and then fill it?
[13:13:41] <rendar> gnoo, nope
[13:14:08] <ormaaj> fallocate
[13:14:33] *** Quits: ^wuseman (~wuseman@user/wuseman/x-1147134) (Ping timeout: 256 seconds)
[13:14:37] <emanuele6> gnoo: rendar is parsing the undocumented stderr output of GNU dd, that is already questionable.
[13:14:56] <rendar> there is no other way
[13:15:36] <gnoo> rendar: you haven't told what you're doing or why you're doing it like that. maybe someone else knows of a better way to do something similar?
[13:15:52] <rendar> gnoo, filling a device with random data using dd + /dev/urandom
[13:15:57] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[13:15:58] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[13:15:58] *** Joins: wuseman (~wuseman@user/wuseman)
[13:16:13] <ormaaj> I have no clue what you're doing with that
[13:16:27] <earnestly> security™
[13:16:32] <gnoo> that device being a block device? and why dd? and why random data?
[13:16:48] <ormaaj> cp /dev/urandom /dev/foo
[13:16:56] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[13:17:11] <earnestly> If it's a hdd and you use encryption, the unused parts will look 'blank' under fairly sophisticated analysis
[13:17:19] <rendar> gnoo, 1) it may be char device 2) dd is the fallback when other advanced tools are not present into the system 3) random data because a LUKS encrypted filesystem will go in that device
[13:17:23] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[13:17:37] <earnestly> rendar: You don't need dd to copy data to a block device, cp, cat, etc. work just fine
[13:17:49] <earnestly> Even pv if you want fancy progress bars
[13:17:51] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[13:17:53] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 268 seconds)
[13:17:55] <rendar> earnestly, also those tools will fail on ENOSPC
[13:17:59] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[13:18:06] *** Joins: pj (~pj@ghettoforge/pj)
[13:18:18] <earnestly> That's quite normal because urandom is infinite and the destination is not
[13:18:27] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Client Quit)
[13:18:34] <earnestly> So when the latter fills up it gets nospc and the process is stopped
[13:18:36] <rendar> right, but i don't have to threat ENOSPC like an error
[13:18:40] <rendar> since that's what i want to do
[13:19:02] <gnoo> and LUKS encrypted filesystems have to have random data before being formatted because...
[13:19:06] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[13:19:11] <earnestly> gnoo: I just mentioned why
[13:19:17] <rendar> and since there is NO way to get ENOSPC code from process exit code or whatever, i must parse dd stderr output
[13:19:29] <earnestly> I don't think it applies to ssds though
[13:19:32] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[13:19:45] <rendar> gnoo, for security, read more about that on google
[13:19:57] <emanuele6> !google
[13:19:58] <greybot> Google is NOT a preferred source for learning bash, because almost all the "tutorials" and scripts out there are JUNK. Instead, ask a good question here or refer to the Guide and FAQ (see topic)
[13:20:27] <rendar> i told to search on google about security, not bash, tho :)
[13:20:31] <earnestly> It's a bit theater though, but most security is when people just follow lists from google about 'best practice' without context
[13:20:52] <rendar> earnestly, that, or when your company ASSIGNS YOU a task, and you must do that
[13:21:21] <earnestly> rip that company
[13:21:51] <rendar> so i have to quit my job only because the company assigned to me to do a pretty standard task, which everyone does, right dude.. :)
[13:22:13] *** Joins: mikeliuk (~mikeliuk@213.205.198.125)
[13:22:25] <earnestly> rip is rest in peace
[13:22:31] <rendar> i see
[13:22:34] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[13:22:34] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 260 seconds)
[13:22:51] <rendar> the main problem here is that i cannot access to the dd's errno, otherwise i'd check ==ENOSPC and that's all
[13:23:06] <rendar> easy peasy. but ..no!
[13:23:22] <emanuele6> you can use python as it has been said yesterday.
[13:23:58] <rendar> emanuele6, i can't because 3rd tools are useless when you're writing a FALL BACK routine to run when all other tools are missing
[13:24:26] <emanuele6> python is guaranteed to be present by LSB, the stderr output of GNU dd is not guaranteed by LSB nor POSIX nor GNU themselves.
[13:24:30] <ormaaj> I'd suggest if they're not going to utilize my insight they should hire someone cheaper.
[13:25:10] *** Quits: extern_ (~archer@185.32.176.95) (Remote host closed the connection)
[13:25:22] <gnoo> rendar: if you don't want to graduate, why not use something like... for ((i=0;i<1000;i++) ; do if check_if_drives_are_accessible ;then dd "${dd_args[@]}" ; else error_handling_func ; fi ; done ;
[13:25:58] <rendar> what? drives are accessible?
[13:26:04] <rendar> that's not the problem here...
[13:26:18] <gnoo> whatever you're writing to. i assume that's the error you want to handle
[13:26:45] <rendar> i have already solved the problem
[13:26:52] <gnoo> okay
[13:27:11] <rendar> here's my solution https://bpa.st/Y23Q -- which is pretty good to what it has to do
[13:27:15] <emanuele6> !check
[13:27:17] <checkbot> rendar: Line 6: device_to_fill is referenced but not assigned. Line 40: filler_device is referenced but not assigned. Line 31: Use -n instead of ! -z. See https://shellcheck.net/?id=cb79037 for all 6 issues.
[13:27:55] <earnestly> I remember dimming this user long ago, now I know why
[13:28:13] <rendar> earnestly, what i have done now?
[13:30:08] *** Quits: justUnited (~justache@user/justache) (Remote host closed the connection)
[13:30:32] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[13:30:32] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[13:30:32] *** Joins: wuseman (~wuseman@user/wuseman)
[13:30:57] *** Joins: justUnited (~justache@user/justache)
[13:31:26] <rendar> we will never know! :)
[13:35:01] <gnoo> rendar: you could use blockdev(8)
[13:37:44] *** Joins: ^wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[13:37:45] *** Quits: ^wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[13:37:45] *** Joins: ^wuseman (~wuseman@user/wuseman/x-1147134)
[13:37:54] *** Quits: wuseman (~wuseman@user/wuseman) (Remote host closed the connection)
[13:38:05] *** Joins: dre (~dre@2001:8003:c932:c301:a34d:66ac:4577:d0c)
[13:40:52] <rendar> gnoo, again, this is a fall back routine that will be called when all other useful tools are not present into the system
[13:41:02] <ormaaj> gnoo: Nice. idn't know about that one.
[13:41:55] <rendar> gnoo, btw nice tool! thanks
[13:43:07] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[13:43:46] *** Joins: tobybl (~tobybl@213.31.135.91)
[13:44:35] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[13:44:36] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[13:44:36] *** Joins: wuseman (~wuseman@user/wuseman)
[13:45:34] *** Joins: furrymcgee (~devuan@cgn-213-196-210-222.nc.de)
[13:45:38] *** Quits: ^wuseman (~wuseman@user/wuseman/x-1147134) (Ping timeout: 268 seconds)
[13:53:56] <rendar> gnoo, FYI: `blockdev --getbsz /dev/sda1` returns 4096 instead of 512
[13:58:43] <gnoo> and the man page says: This size does not describe device topology. It’s the size used internally by the kernel and it may be modified
[13:59:01] *** Joins: timj (~timj@user/timj)
[13:59:01] <gnoo> there's a flag for logical sector size
[13:59:22] <rendar> yep, i have to use --getss
[14:01:44] <Benway> copied to notes.  #bash best channel.
[14:03:46] *** Joins: han-solo (~han-solo@user/han-solo)
[14:05:20] <rendar> if i have `block_size=$( sudo blockdev --getss "${device_to_fill}" )` what is the best way to check errors from blockdev command?
[14:05:54] *** Quits: dre (~dre@2001:8003:c932:c301:a34d:66ac:4577:d0c) (Ping timeout: 260 seconds)
[14:07:25] *** Quits: wuseman (~wuseman@user/wuseman) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[14:08:53] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[14:08:53] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[14:08:53] *** Joins: wuseman (~wuseman@user/wuseman)
[14:12:21] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[14:14:03] *** Quits: kurahaupo_ (~kurahaupo@123-243-221-134.tpgi.com.au) (Ping timeout: 256 seconds)
[14:15:53] <llua> if ! var=$(...); then handle_error; fi
[14:15:56] *** Joins: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com)
[14:16:51] *** Quits: Hercules (~Hercules@user/hercules) (Quit: Leaving)
[14:18:11] *** Joins: ^wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[14:18:11] *** Quits: ^wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[14:18:11] *** Joins: ^wuseman (~wuseman@user/wuseman/x-1147134)
[14:18:20] *** Joins: seninha (~seninha@user/seninha)
[14:18:35] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[14:18:41] *** Joins: Hercules (~Hercules@user/hercules)
[14:20:10] *** Quits: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com) (Client Quit)
[14:21:59] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 264 seconds)
[14:22:41] *** Joins: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com)
[14:23:22] <Benway> i think he asks how to get some error from blockdev cmd
[14:23:36] <Benway> there's some var for the exit code right?
[14:25:36] *** Joins: damxsa (~damx@2001:16a2:df3c:b500:fcfd:fe1a:694f:da85)
[14:27:03] <Benway> $? gives the exit code
[14:27:53] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[14:28:50] <rendar> if block_size=$( blockdev ... ); then ...
[14:30:18] <llua> that checks if it succeeds
[14:30:20] <han-solo> missed a !
[14:33:06] *** Joins: xx (~xx@user/xx)
[14:34:33] *** Joins: thiras (~thiras@user/thiras)
[14:34:48] *** Joins: pj (~pj@ghettoforge/pj)
[14:35:01] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[14:35:50] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[14:41:47] *** Quits: sebastorama (~sebastora@190.83.56.68) (Ping timeout: 264 seconds)
[14:52:36] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[14:55:50] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[14:59:07] *** Quits: mikeliuk (~mikeliuk@213.205.198.125) (Quit: Connection closed)
[15:00:31] <geirha> if you just want to abort if it returns non-zero, you can do  block_size=$(blockdev...) || exit
[15:01:45] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[15:01:49] <emanuele6> but he has already asked that thursday :/
[15:02:32] <emanuele6> and kept complaining that my code was broken because he didn't get that   ! cmd  setted to $?=0
[15:02:44] *** Quits: Samian (~s@user/samian) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:04:24] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:05:14] *** Joins: pj (~pj@ghettoforge/pj)
[15:06:34] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[15:10:27] <rendar> # if [[ /bin/false ]]; then echo "YES"; fi
[15:10:27] <shbot> rendar: YES
[15:10:31] <rendar> why is that?
[15:10:46] <rendar> it seems that [[ checks for the existence of /bin/false instead of running it
[15:12:00] <han-solo> run the command directly
[15:12:54] <rendar> han-solo, yes, i know that /bin/false exit code is 1 and that `if /bin/false; then ..` won't trigger the condition, but i want to get why inside the [[ ]] it triggers
[15:13:45] <han-solo> # [[ '' ]] && echo 'nothing happened ?'; [[ 0 ]] && echo ':O'
[15:13:46] <shbot> han-solo: :O
[15:15:15] *** Quits: ^wuseman (~wuseman@user/wuseman/x-1147134) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[15:15:39] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[15:15:39] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[15:15:39] *** Joins: wuseman (~wuseman@user/wuseman)
[15:16:23] <geirha> # set -x; [[ /bin/false ]]
[15:16:24] <shbot> geirha: + [[ -n /bin/false ]]
[15:16:36] <geirha> is "/bin/false" a non-empty string? yes, yes it is
[15:16:42] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[15:17:00] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[15:17:40] *** Joins: zoe (~zoe@fsf/member/zoe)
[15:18:02] *** Joins: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au)
[15:19:20] *** Quits: irf21k (~irf21k@223.186.101.236) (Read error: Connection reset by peer)
[15:19:45] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[15:22:33] *** Quits: zoe (~zoe@fsf/member/zoe) (Remote host closed the connection)
[15:24:15] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[15:24:42] *** Quits: wuseman (~wuseman@user/wuseman) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[15:26:32] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[15:26:32] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[15:26:32] *** Joins: wuseman (~wuseman@user/wuseman)
[15:26:44] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[15:31:17] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[15:33:33] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 268 seconds)
[15:34:06] *** Quits: damxsa (~damx@2001:16a2:df3c:b500:fcfd:fe1a:694f:da85) (Ping timeout: 260 seconds)
[15:34:29] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[15:35:34] *** Quits: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 260 seconds)
[15:38:32] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[15:38:51] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 245 seconds)
[15:38:59] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[15:41:06] *** Quits: wuseman (~wuseman@user/wuseman) (Read error: Connection reset by peer)
[15:41:48] *** Joins: polve (~polve@twcitalia/polve)
[15:42:58] *** Quits: armands_ (~armands@46.109.8.165) (Ping timeout: 260 seconds)
[15:43:38] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:44:24] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[15:52:36] *** Quits: azerty (~azerty@user/badwolf) (Ping timeout: 245 seconds)
[15:54:39] *** Joins: azerty (~azerty@user/badwolf)
[15:54:59] *** Quits: dermoth (~dermoth@dsl-236-124-149.b2b2c.ca) (Ping timeout: 264 seconds)
[15:55:18] *** Quits: zouhair (~zouhair@lnsm1-montreal02-142-122-74-190.internet.virginmobile.ca) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[15:55:59] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[15:56:39] <rendar> ok, clear
[15:56:58] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[15:56:58] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[15:56:58] *** Joins: wuseman (~wuseman@user/wuseman)
[15:57:00] *** Joins: vlm (~vlm@user/vlm)
[15:57:24] *** Joins: zouhair (~zouhair@lnsm1-montreal02-142-122-74-190.internet.virginmobile.ca)
[16:02:32] *** Quits: e36freak (~e36freak@user/e36freak) (Ping timeout: 268 seconds)
[16:04:58] *** Joins: seninha (~seninha@user/seninha)
[16:05:03] *** Joins: armands (~armands@46.109.8.165)
[16:07:01] *** Joins: dermoth (~dermoth@dsl-236-123-187.b2b2c.ca)
[16:07:47] *** Quits: angkat (~angkat@2a02:587:121f:f103:7e7a:c8ae:bfec:cb23) (Quit: Leaving)
[16:08:53] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[16:10:05] *** Quits: docmax (~docmax@dynamic-077-008-238-069.77.8.pool.telefonica.de) (Remote host closed the connection)
[16:10:35] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 264 seconds)
[16:10:47] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[16:11:39] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:11:47] *** Quits: dermoth (~dermoth@dsl-236-123-187.b2b2c.ca) (Ping timeout: 264 seconds)
[16:13:13] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[16:14:35] <xx> rendar: you still don't want to use `$ lsblk -bno SIZE /dev/sdX | head -1
[16:14:54] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:15:30] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 268 seconds)
[16:16:01] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[16:18:05] *** Quits: reset (~reset@user/reset) (Quit: reset)
[16:18:27] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:22:45] *** Joins: cdown (~cdown@89.32.122.5)
[16:23:17] *** Joins: dermoth (~dermoth@dsl-151-60.b2b2c.ca)
[16:23:18] *** Joins: ogis (~Android@neoau1-133-203-128-175.tky.mesh.ad.jp)
[16:26:05] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[16:27:01] <rendar> xx, another solution, yes
[16:27:04] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[16:27:11] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 245 seconds)
[16:29:51] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[16:31:33] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[16:31:34] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[16:31:34] *** Joins: wuseman (~wuseman@user/wuseman)
[16:33:26] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Client Quit)
[16:35:08] *** Quits: ogis (~Android@neoau1-133-203-128-175.tky.mesh.ad.jp) (Quit: -a- IRC for Android 2.1.59)
[16:35:09] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 256 seconds)
[16:36:58] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[16:40:34] *** Quits: somlis (~somlis@user/somlis) (Remote host closed the connection)
[16:40:37] *** Joins: annomy (~annomy@103.38.199.98)
[16:40:49] <xx> # which bash
[16:40:50] <shbot> xx: Sorry, I don't do whichcraft.
[16:40:56] <xx> is that a new thing from the bot?
[16:41:19] <emanuele6> !which
[16:41:19] <greybot> which(1) is an external program used to search PATH for an executable. It behaves differently on different systems and you can't rely on a useful exit code; use (from most to least portable) ''command -v'' or ''type -P'' (to find the path) or ''hash'' (to check) instead. See http://mywiki.wooledge.org/BashFAQ/081
[16:41:34] <emanuele6> no, it is not new
[16:41:47] <xx> I must have never come across it then, thanks
[16:41:54] <xx> heh, whichcraft
[16:42:14] <emanuele6> 8 years ago :) https://gitlab.com/geirha/shbot-initramfs/-/blob/master/skel/bin/which
[16:42:31] *** Joins: tobybl (~tobybl@213.31.135.91)
[16:43:29] <xx> I would have thought the bot used docker and not qemu, interseting
[16:43:46] <emanuele6> it loads a snapshot
[16:43:58] <emanuele6> that is why uptime is always >7 if you check
[16:44:04] <emanuele6> # seq 10231230182309182{,}
[16:44:05] <shbot> emanuele6: ten quadrillion two hundred and thirty-one trillion two hundred and thirty billion one hundred and eighty-two million three hundred and nine thousand one hundred and eighty-two
[16:44:09] <emanuele6> hehe
[16:44:36] <emanuele6> # cut -d' ' -f1 /proc/uptime
[16:44:37] <shbot> emanuele6: 7.39
[16:45:23] *** Quits: dermoth (~dermoth@dsl-151-60.b2b2c.ca) (Ping timeout: 264 seconds)
[16:48:23] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[16:57:13] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[16:57:19] *** Joins: irf21k (~irf21k@2401:4900:4bca:2d46:1:0:d4e:7027)
[16:57:29] *** Joins: dermoth (~dermoth@dsl-10-136-208.b2b2c.ca)
[16:57:30] <xx> I see, so https://github.com/geirha/shbot-initramfs is not synchronized with https://gitlab.com/geirha/shbot-initramfs
[17:02:44] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[17:05:45] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[17:08:16] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[17:09:00] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[17:10:05] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[17:11:22] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[17:12:33] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[17:13:45] *** Joins: iconoclasthero__ (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net)
[17:13:46] *** Quits: iconoclasthero__ (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net) (Read error: Connection reset by peer)
[17:14:48] *** Quits: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[17:18:49] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[17:19:00] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 268 seconds)
[17:19:11] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[17:19:44] *** Joins: somlis (~somlis@user/somlis)
[17:23:35] *** Joins: han-solo (~han-solo@user/han-solo)
[17:24:10] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Read error: Connection reset by peer)
[17:24:25] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[17:26:42] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[17:32:47] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[17:32:58] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[17:34:21] *** Joins: karakedi (~eAC53C340@user/karakedi)
[17:36:26] *** Quits: makara1 (~makara@196.214.171.83) (Ping timeout: 260 seconds)
[17:36:26] *** Quits: makara (~makara@196.214.171.83) (Ping timeout: 260 seconds)
[17:37:03] *** Joins: makara (~makara@196.214.171.83)
[17:37:34] *** Joins: makara_ (~makara@196.214.171.83)
[17:39:44] <geirha> I abandoned github when it got bought up by MS
[17:40:53] <Freneticks> is there a way to wait until unixsocket answer ? maybe with a WHILE netcat
[17:45:58] <earnestly> It's blocking IO
[17:49:51] *** Quits: annomy (~annomy@103.38.199.98) (Quit: WeeChat 3.3)
[17:51:12] <xx> geirha: usually people put a note on the github repo pointing to the new home and archive it (or delete it)
[17:52:25] <emanuele6> that would require using github
[17:53:17] <geirha> Yeah, I probably should do that
[17:53:32] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.3)
[17:54:38] <xx> emanuele6: I see the problem
[17:57:03] <rendar> geirha, why? MS today is a very different company, much more "open" than before
[17:58:21] <djph> how fast everyone forgot 'embrace, extend, extinguish'
[17:59:16] <xx> not really a discussion for #bash, but yeah MS is not to be viewed as anyone's friend
[18:03:28] <Benway> 'beep' used to be a standard (terminals, x86 pcs) - is there any equivalent now for linux that will beep on whatever sound backend is available?  without me requiring someone to install a particular player like aplay
[18:03:42] <Benway> sorry it's OT but it was pretty quiet
[18:04:19] <Benway> linux's pcspkr module requires pc speaker hardware, afaik.  so that's not an option
[18:04:32] <Benway> we have lost a standard 'beep' from shell :/
[18:04:38] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[18:05:10] <xx> beep was a security vulnerability nightmare
[18:07:18] <emanuele6> you can print BEL, but most terminal emulators won't beep with BEL
[18:07:33] <emanuele6> printf '\a'
[18:07:55] <emanuele6> at least not by default
[18:08:11] <geirha> by my experience it's usually on by default, but you turn it off pretty quickly, because it beeps everytime you hit backspace on an empty line, or tab complete when there's nothing more to complete
[18:08:35] <xx> that's if your system still has an actual pcspeaker
[18:08:39] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 256 seconds)
[18:09:19] <emanuele6> mm, xterm and rxvt-unicode don't beep by default on my computer
[18:09:35] <geirha> gnome-terminal and Terminal.app typically use system sound
[18:09:41] <xx> emanuele6: did you blacklist the kernel module?
[18:10:07] <emanuele6> i don't think i have, but maybe i did
[18:10:27] <emanuele6> this system was installed almost 4 years ago
[18:11:11] <xx> so strange to think that beep binary was(is) setuid root
[18:11:26] <xx> and that it could(can) be used for exploits
[18:11:37] <xx> beep your way to privilege escalation :)
[18:12:32] <geirha> didn't know that. Would make more sense to have a separate sound user that owned the necessary device, and have it setuid sound instead
[18:12:39] <xx> https://holeybeep.ninja/
[18:12:49] <xx> yet another one of the vulnerabilities with funny name and logo
[18:13:22] <xx> oh wow, "Please run this command to find out: curl https://holeybeep.ninja/am_i_vulnerable.sh | sudo bash"
[18:13:30] <xx> of course I'm gonna curl a script into sudo bash
[18:14:42] *** Joins: sazawal (~sazawal@2401:4900:51d6:3714:57d9:77fb:e83d:d6ba)
[18:14:55] <xx> "According to the Debian popularity contest, beep is installed on 1.86% of all machines. Extrapolating that by the earth population, we estimate roughly 130 million affected users."
[18:15:00] *** Quits: sazawal (~sazawal@2401:4900:51d6:3714:57d9:77fb:e83d:d6ba) (Remote host closed the connection)
[18:15:11] *** Joins: akoana (~ah@user/akoana)
[18:16:01] <xx> I asked 3 people if they liked me, and two of them said yes. Estrapolating that by the earth population, there are 5B people that like me
[18:17:37] <geirha> imagine being hated by 2B people ... you're in Trump territory here
[18:18:29] <xx> I probably already am hated by at least 2B people
[18:18:42] <xx> humans really like to hate others
[18:20:11] *** Joins: mongy (~mongy@user/mongy)
[18:20:15] <sixwheeledbeast> hate is strong to tar with so many.
[18:21:21] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[18:21:30] <sixwheeledbeast> You can't maintain knowledge of so many individuals, hence why people stereotype
[18:21:46] *** Quits: _val__ (~valentin@82-169-14-137.biz.kpn.net) (Ping timeout: 245 seconds)
[18:21:52] <xx> it's not a stereotype if they are all the same /s
[18:22:55] <emanuele6> ah, i think the beeper on my PC is simply broken
[18:23:15] <xx> that's an unusual component to break
[18:23:18] <emanuele6> or maybe it does not have a beeper at all
[18:23:22] *** Joins: Inline (~Inline@2a02:908:1252:7a80:89e7:f55a:92fd:8abb)
[18:23:24] <xx> isn't it just a small magnet?
[18:23:29] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[18:24:11] <sixwheeledbeast> I don't have the beeper header occupied
[18:24:21] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[18:31:51] *** Joins: igemnace (~ian@user/igemnace)
[18:34:20] *** Joins: pj (~pj@ghettoforge/pj)
[18:35:15] *** Quits: Inline (~Inline@2a02:908:1252:7a80:89e7:f55a:92fd:8abb) (Quit: Leaving)
[18:36:05] *** Joins: marguesto (~marguesto@37.220.203.250)
[18:38:13] *** Joins: ChmEarl (~chmearl@user/chmearl)
[18:40:14] *** Joins: Inline (~Inline@2a02:908:1252:7a80:fbbe:75e0:a944:53e0)
[18:41:07] *** Joins: n4dir (~user@i59F77C3B.versanet.de)
[18:42:29] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[18:42:29] *** Quits: marguesto (~marguesto@37.220.203.250) (Quit: leaving)
[18:44:14] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[18:44:24] *** Joins: marguesto (~marguesto@37.220.203.250)
[18:45:53] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[18:47:42] *** Quits: wuseman (~wuseman@user/wuseman) (Read error: Connection reset by peer)
[18:47:43] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[18:49:12] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 276 seconds)
[18:50:09] *** Joins: tangy (~tangy@user/tangy)
[18:51:06] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[18:51:06] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Changing host)
[18:51:06] *** Joins: wuseman (~wuseman@user/wuseman)
[18:54:13] *** Joins: John_Ivan (~John_Ivan@user/john-ivan/x-1515935)
[19:04:31] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[19:05:47] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[19:06:35] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[19:07:08] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[19:09:05] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Quit: A random quit message)
[19:09:53] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[19:14:33] *** Joins: wolfdale0 (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[19:15:33] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 268 seconds)
[19:15:34] *** wolfdale0 is now known as wolfdale
[19:15:56] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[19:18:00] *** justUnited is now known as justCity
[19:18:09] *** Joins: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net)
[19:20:58] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[19:21:18] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[19:24:17] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:48e0:406d:e67c:af6)
[19:24:17] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:48e0:406d:e67c:af6) (Changing host)
[19:24:17] *** Joins: skapata (~Skapata@user/skapata)
[19:24:55] *** Joins: ansimita (~ansimita@user/ansimita)
[19:24:57] *** Quits: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net) (Quit: Quit)
[19:27:18] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[19:28:00] *** Joins: pj (~pj@ghettoforge/pj)
[19:29:18] <ansimita> Hi, I have my PS1 set to ">\$(__exit) " where __exit() calls printf '\b?' on a non-zero exit. It works but sometimes when pressing up to view the previous command history, I don't know how to describe it but the prompt and the command gets messed up. Any ideas?
[19:30:51] <xx> ansimita: yeah, bash doesn't know that those things are supposed to be zero width
[19:31:23] <lopid> !prompt
[19:31:23] <greybot> "\u@\h \w\$"? These are explained in man bash, under PROMPTING. Or see http://www.ibm.com/developerworks/library/l-tip-prompt/
[19:31:50] <xx> that link looks dead
[19:32:04] <lopid> yes, looks like !faq 53 instead
[19:32:24] <lopid> !faq 53
[19:32:25] <greybot> https://mywiki.wooledge.org/BashFAQ/053 -- I have a fancy prompt with colors, and now bash doesn't seem to know how wide my terminal is.  Lines wrap around incorrectly.
[19:33:20] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[19:33:52] *** Joins: magla (~gelignite@55d4a5c9.access.ecotel.net)
[19:33:57] *** Quits: nitro_ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net) (Read error: Connection reset by peer)
[19:33:58] *** Joins: nitro__ (~nitro_@c-73-165-183-88.hsd1.pa.comcast.net)
[19:36:21] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[19:36:36] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[19:38:07] <emanuele6> !forget prompt
[19:38:07] <greybot> OK, emanuele6
[19:38:43] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[19:38:56] <emanuele6> !learn '\u@\h \w\$'? These are explained in man bash, under PROMPTING. Or see info '(bash) Controlling the Prompt' or https://www.gnu.org/software/bash/manual/html_node/Controlling-the-Prompt.html
[19:38:56] <greybot> OK, emanuele6
[19:39:07] <emanuele6> in double quotes \$ is just $
[19:39:27] <ansimita> My takeaway is that I should use `printf '\[\b\]!'` instead but it produces ':\\]! ' as the prompt on non-zero exit...
[19:39:33] <kurahaupo> ansimita: You want \[ \] around parts of PS1 that don't result in a printable char
[19:40:07] <kurahaupo> \[$(__exit)\]
[19:40:33] <kurahaupo> The \[\] have to be present BEFORE expansions
[19:41:01] <emanuele6> if it is printing '\b?', i think \[$(__exit)\] is not ok
[19:41:12] <emanuele6> it should be \[\b\]?
[19:42:09] <kurahaupo> printf '\b' outputs a backspace. Did you mean \a instead?
[19:43:20] <ansimita> kurahaupo: backspace, '!' replaces '>', \[ \] around __exit solves the issue, thanks
[19:44:35] <emanuele6> if your prompt is only going to be that, you are better off using a PROMPT_COMMAND instead
[19:44:59] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[19:45:04] <kurahaupo> PSC='>!' ; PS1='${PSC:!$?:1}…'
[19:45:12] <kurahaupo> emanuele6: please no
[19:45:22] <ansimita> I'll just stick to print '>' if 0 else '!' instead...
[19:45:58] <ansimita> It was just bugging me that I couldn't figure out why it was behaving like this.
[19:46:21] *** NoelFlantier7 is now known as NoelFlantier
[19:46:44] <emanuele6> my_prompt () { if [[ $? = 0 ]]; then PS1='> '; else PS1='! '; fi ;}; PROMPT_COMMAND=my_prompt
[19:46:47] <kurahaupo> ansimita: As I said before, the \[\] must be present BEFORE expansions
[19:46:55] <emanuele6> $(__exit) forks at each prompt
[19:46:59] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[19:47:03] *** Quits: NoelFlantier (~Hubert@gifi.cassossie.net) (Remote host closed the connection)
[19:47:13] <emanuele6> kurahaupo: that is a funny solution hehe
[19:47:15] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[19:47:20] *** Joins: NoelFlantier (~Hubert@gifi.cassossie.net)
[19:48:03] <kurahaupo> emanuele6: fork is cheap compared with the fork+execve that occurs for most commands; is not really worth worrying about
[19:48:05] <emanuele6> actually doesn't posix say that literal ! in prompts should be written as !!?
[19:48:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:48:53] <kurahaupo> \! gives the command number, \$ gives $ for a normal user or # for root
[19:49:37] <kurahaupo> At least for bash. I haven't actually checked POSIX
[19:49:39] *** Joins: seninha (~seninha@user/seninha)
[19:49:51] <emanuele6> ah
[19:50:06] <gnoo> !forget prompt
[19:50:06] <greybot> I don't know what prompt is
[19:50:27] <gnoo> ohh
[19:50:34] <xx> !forget
[19:50:34] <greybot> usage: !forget key
[19:50:42] <emanuele6> > The shell shall replace each instance of the character '!' in PS1 with the history file number of the next command to be typed. Escaping the '!' with another '!' (that is, "!!" ) shall place the literal character '!' in the prompt.
[19:50:44] <gnoo> !learn prompt '\u@\h \w\$'? These are explained in man bash, under PROMPTING. Or see info "(bash) Controlling the Prompt" or https://www.gnu.org/software/bash/manual/html_node/Controlling-the-Prompt.html
[19:50:44] <greybot> OK, gnoo
[19:50:55] <gnoo> !forget '\u@\h \w\$'?
[19:50:55] <greybot> OK, gnoo
[19:50:56] <emanuele6> yeah, bash is not following posix on that
[19:51:14] <xx> posix says something about this?
[19:51:17] <gnoo> emanuele6: you forgot something in !forget :)
[19:51:23] *** Buliarou1 is now known as Buliarous
[19:51:26] <gnoo> err, i mean learn
[19:51:30] <ansimita> emanuele6: Thanks. I'll use your my_prompt() solution :)
[19:51:48] <emanuele6> gnoo: oh, in !learn, hehe
[19:52:42] <emanuele6> xx: yes, that's the only thing posix defines about PS1
[19:53:04] <xx> til, thanks
[19:53:10] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[19:53:19] <emanuele6> it only says that the default should be "$ " and what i quoted basically
[19:53:29] <emanuele6> and bash implements neither hehe
[19:53:57] <emanuele6> default is "bash-5.1$ " (or whichever release) and !1 does not expand history but \!1 does
[19:54:21] <xx> I never understood why bash chose to have the version in default prompt
[19:55:11] <xx> env -i INPUTRC=/dev/null bash --norc --noprofile
[19:55:27] <xx> (I need to learn how to use that qemu bash bot or something similar for testing)
[19:55:49] <emanuele6> i did that last month i think
[19:56:23] <xx> yeah, because I really don't feel comfortable testing out things in a real environment
[19:56:46] <emanuele6> if you set PS1 to something non zero start bash with -i, you can pipe control characters into it you can test readline bindings on shbot
[19:56:58] <emanuele6> xx: oh, i thought you meant something else, nevermind
[19:57:15] <xx> emanuele6: don't worry, most of these days I don't even know what I mean :)
[19:57:35] <kurahaupo> emanuele6: ansimita: please no, don't recommend using PROMPT_COMMAND for every random problem. There is no standardized method for sharing it between multiple uses, and a simple assignment like that will certainly break other libraries.
[19:58:40] <ansimita> ... ok
[19:58:51] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[19:59:05] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[19:59:05] <emanuele6> xx: this is what i meant
[19:59:11] <emanuele6> # echo $'$if mode=vi\n"a":display-shell-version\n$endif' > .inputrc; printf 'set -o vi\na\nbind -f ~/.inputrc\na' | PS1='$ ' bash -i |& paste -s
[19:59:12] <shbot> emanuele6: $ set -o vi     $ a     bash: a: command not found      $ bind -f ~/.inputrc    $       GNU bash, version 5.1.8(1)-release (x86_64-pc-linux-gnu)        $ exit
[19:59:22] <kurahaupo> ansimita: Did you try: pschar='$!'; PS1='${pschar:($?==0?0:1):1} '
[19:59:22] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[20:00:08] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[20:00:25] *** Joins: goldfish (~goldfish@user/goldfish)
[20:00:46] <kurahaupo> ansimita: or more briefly: pschar='!$'; PS1='${pschar:(!$?):1} '
[20:02:16] *** Joins: rgrinberg (~textual@200.5.63.76)
[20:03:18] <ansimita> kurahaupo: yeap, that works.
[20:09:25] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[20:09:41] *** Joins: goldfish (~goldfish@user/goldfish)
[20:09:46] <kurahaupo> # kill -l | grep KILL
[20:09:47] <shbot> kurahaupo:  6) SIGABRT      7) SIGBUS       8) SIGFPE       9) SIGKILL     10) SIGUSR1
[20:10:03] <emanuele6> i see that the parentheses are needed either as !($?) or as (!$?), but i don't understand why
[20:10:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:11:02] *** Joins: mei32 (~mei@user/mei)
[20:11:07] <twkm> # kill -l kill
[20:11:07] <shbot> twkm: 9
[20:12:56] <emanuele6> it also seems that ${var:!$?} works, but ${var:!$?:1} doesn't
[20:14:28] <kurahaupo> ansimita: psstat=( '$' [64]=USAGE! [127]=NOEXEC! [9+128]=KILL! [6+128]=ABRT! [2+128]=INT! [1+128]=HUP! ) ; PS1='${psstat[$?]:-[$?]!} '
[20:14:36] *** Joins: ano (~ano@user/ano)
[20:14:47] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 264 seconds)
[20:14:47] *** mei32 is now known as mei3
[20:15:00] <kurahaupo> emanuele6: that's weird
[20:15:30] <emanuele6> yeah, ${var:   !$?    :   1} doesn't work either
[20:15:51] <emanuele6> if you write it either as !($?) or as (!$?) it works
[20:15:57] <kurahaupo> # var=abc ; ( exit 4 ) ; echo "${var:!$?:1}"
[20:15:58] <shbot> kurahaupo: bash: var: !4:1: syntax error in expression (error token is ":1")
[20:15:59] <emanuele6> and if you remove :1 it also works
[20:16:08] <kurahaupo> # var=abc ; ( exit 4 ) ; echo "${var:(!$?):1}"
[20:16:09] <shbot> kurahaupo: a
[20:16:34] <kurahaupo> # var=abc ; ( exit 4 ) ; echo "${var:! $?:1}"
[20:16:34] <shbot> kurahaupo: bash: var: ! 4:1: syntax error in expression (error token is ":1")
[20:16:46] <kurahaupo> # var=abc ; ( exit 4 ) ; echo "${var: ! $?:1}"
[20:16:47] <shbot> kurahaupo: bash: var: ! 4:1: syntax error in expression (error token is ":1")
[20:16:58] * kurahaupo scratches head
[20:16:58] <emanuele6> yeah, i already tried that, doesn't work
[20:17:01] *** Joins: FreeBDSM (~uzer@user/freebdsm)
[20:17:09] <emanuele6> i am checking out bash's parse code right now
[20:17:23] <kurahaupo> # var=abc ; ( exit 4 ) ; echo "${var: !($?):1}"
[20:17:24] <shbot> kurahaupo: a
[20:17:40] <kurahaupo> # var=abc ; ( exit 4 ) ; echo "${var: 1-!$?:1}"
[20:17:40] <shbot> kurahaupo: bash: var: 1-!4:1: syntax error in expression (error token is ":1")
[20:18:10] *** Joins: Burger (~burger@user/burger)
[20:18:41] <emanuele6> ah, maybe the parser see ? and : and expects it to be a ternary operator
[20:19:08] <kurahaupo> # var=abc ; ( exit 4 ) ; echo "${var: $? ? 1 : 2 :1}"
[20:19:09] <shbot> kurahaupo: bash: var: 4 ? 1 : 2 :1: syntax error in expression (error token is ":1")
[20:19:19] <kurahaupo> yeah, that sounds like it
[20:20:55] <kurahaupo> With that I think the array method is cleaner
[20:24:39] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[20:25:48] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[20:26:36] *** Quits: Inline (~Inline@2a02:908:1252:7a80:fbbe:75e0:a944:53e0) (Remote host closed the connection)
[20:26:59] *** Joins: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0)
[20:28:56] *** Quits: iconoclasthero (~quassel@pool-68-238-241-198.phlapa.fios.verizon.net) (Ping timeout: 268 seconds)
[20:30:23] <emanuele6> that's weird though
[20:31:10] <emanuele6> that means that it parsing and only then expanding the expression in ${var:mat1:mat2}
[20:31:35] <emanuele6> that is not the way it works in $(())
[20:32:01] <emanuele6> you can do stuff like $(( 1 $op 2 ))
[20:32:19] <emanuele6> # x=?; echo "$(( 1 $x 2 : 4 ))"
[20:32:19] <shbot> emanuele6: 2
[20:32:24] <emanuele6> also this
[20:34:51] *** Quits: l4yer (~l4yer@159.48.55.10) (Remote host closed the connection)
[20:36:11] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:36:37] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[20:36:43] *** Joins: horribleprogram (~user@2607:fea8:7040:830:b87c:5d6:8ebc:5e7c)
[20:36:56] *** Quits: horribleprogram (~user@2607:fea8:7040:830:b87c:5d6:8ebc:5e7c) (Changing host)
[20:36:56] *** Joins: horribleprogram (~user@user/horribleprogram)
[20:37:11] *** Joins: l4yer (~l4yer@195.181.170.210)
[20:37:45] *** Quits: dermoth (~dermoth@dsl-10-136-208.b2b2c.ca) (Quit: Leaving)
[20:42:06] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[20:44:47] <kurahaupo> emanuele6: I guess it's trying to figure out if you've written ${var: a?b:c : l}
[20:47:15] *** Joins: uplime (~uplime@offtopia/nomad)
[20:47:32] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[20:47:37] *** Joins: sandb0y (~pirate@user/sandb0y)
[20:48:48] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Read error: Connection reset by peer)
[20:49:28] <xx> what could be the cause of https://0x0.st/-5LO.txt that I get the line "bash: no match: *.txt" twice?
[20:49:33] <xx> it doesn't happen in a fresh profile
[20:50:44] <emanuele6> is it printing the error twice?
[20:50:51] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[20:50:55] *** Quits: n4dir (~user@i59F77C3B.versanet.de) (Remote host closed the connection)
[20:52:10] <kurahaupo> do you have an alias for echo?
[20:53:10] *** Joins: vysn (~vysn@user/vysn)
[20:55:01] *** Joins: wuseman (wuseman@81-234-120-217-no68.tbcn.telia.com)
[20:57:25] *** Quits: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0) (Read error: Connection reset by peer)
[21:00:18] <emanuele6> well, actually he said it
[21:04:07] <emanuele6> # trap ': $BASH_COMMAND' DEBUG; touch a b c d; echo *.txt; shopt -s failglob; echo *.txt
[21:04:07] <shbot> emanuele6: *.txt
[21:04:08] <shbot> emanuele6: bash: no match: *.txt
[21:04:08] <shbot> emanuele6: bash: no match: *.txt
[21:04:13] <emanuele6> here is one way :)
[21:04:49] <kurahaupo> yeah that would do it
[21:05:09] <kurahaupo> where was the trap shown?
[21:05:33] <kurahaupo> (it's not in https://0x0.st/-5LO.txt)
[21:05:50] <emanuele6> xx said  it doesn't happen in a fresh profile
[21:11:38] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[21:12:18] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[21:15:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0)
[21:18:39] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[21:19:05] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[21:20:19] *** Quits: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0) (Read error: Connection reset by peer)
[21:20:23] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0)
[21:20:35] *** Joins: luva1 (~luva@45.141.152.54)
[21:21:35] *** Quits: Inline_ (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0) (Remote host closed the connection)
[21:21:50] *** Quits: luva (~luva@45.141.152.62) (Ping timeout: 260 seconds)
[21:21:51] *** luva1 is now known as luva
[21:22:01] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[21:22:18] *** Joins: goldfish_ (~goldfish@user/goldfish)
[21:22:19] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[21:23:08] *** Quits: wuseman (wuseman@81-234-120-217-no68.tbcn.telia.com) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[21:23:58] *** Joins: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0)
[21:25:10] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:29:06] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[21:29:33] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 244 seconds)
[21:32:07] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[21:32:25] *** Joins: ano (~ano@user/ano)
[21:34:21] <xx> yeah the error is printed twice. No alias for echo.
[21:34:37] <xx> I'm slowly going through my bashrc, adding things until it breaks
[21:35:29] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[21:37:46] <pj> # set -x' trap ': $BASH_COMMAND' DEBUG; touch a b c d; echo *.txt; shopt -s failglob; echo *.txt
[21:37:52] <shbot> pj: Missing terminating quote, bracket or keyword
[21:37:56] <pj> bleh
[21:38:00] <pj> # set -x; trap ': $BASH_COMMAND' DEBUG; touch a b c d; echo *.txt; shopt -s failglob; echo *.txt
[21:38:08] <shbot> pj: + trap ': $BASH_COMMAND' DEBUG
[21:38:08] <shbot> pj: ++ : touch a b c d
[21:38:08] <shbot> pj: etc... ( http://ix.io/3Eka )
[21:43:10] *** Joins: Hax0r (~Hax0r@128.127.222.243)
[21:43:49] *** Joins: mvdev_836 (~mvdev_836@user/mvdev-836/x-7776380)
[21:44:31] *** Joins: pncl1 (~Hax0r@128.127.222.243)
[21:45:03] *** Joins: A|an (~Alan@173.216.51.200)
[21:45:05] *** Quits: pncl1 (~Hax0r@128.127.222.243) (Remote host closed the connection)
[21:46:05] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[21:47:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:47:31] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[21:48:55] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[21:49:39] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[21:51:00] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[21:52:11] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[21:52:14] *** Quits: Hax0r (~Hax0r@128.127.222.243) (Remote host closed the connection)
[21:55:53] <xx> found the culprit - fasd
[21:56:54] *** Parts: uplime (~uplime@offtopia/nomad) ()
[21:56:58] *** Joins: zeden (~zeden@user/zeden)
[21:58:09] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 256 seconds)
[22:01:16] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[22:03:21] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Quit: ɯlɐɔ uı ʞɹoʍ oʇ ƃuıoƃ)
[22:03:56] <xx> looks like I'll need to find a replacement for fasd
[22:04:07] <xx> https://github.com/clvv/fasd
[22:04:14] <xx> it hasn't been updated in a long time
[22:07:09] <xx> any recommendations? What I'm looking for is `z somedirname` to cd into the most frecent directory that has somedirname in the name, `zz somedirname` to present a list of dirs to cd into, `v somefilename` to open most frecent file with that name and `vv somefilename` to present a list of files, and for all of these lists to be populated and updated automatically as I navigate the filesystem and open
[22:07:10] <xx> files
[22:10:29] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[22:16:42] *** Quits: chasmo77 (~chas77@71.63.241.168) (Remote host closed the connection)
[22:17:11] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[22:18:48] <furrymcgee> maybe something like this# bind -x '"ZZ": frecent'
[22:22:05] <Celmor[m]> how would I rebind the default for Ctrl+R? since my binding seems to somehow broke. I would prefer no having to reset my session for that
[22:22:41] *** Joins: d630 (~d630@user/d630)
[22:23:07] *** Quits: marguesto (~marguesto@37.220.203.250) (Quit: leaving)
[22:23:33] *** Joins: Samian (~s@user/samian)
[22:23:46] <emanuele6> Celmor[m]: bind '"yourkeycombo":reverse-search-history'
[22:24:30] <emanuele6> so: bind '"\C-r":reverse-search-history'   in your case
[22:24:55] <Celmor[m]> yeah, already got it. (used `bind 'Control-r:reverse-search-history'`) thanks
[22:25:39] <Celmor[m]> for some reason that fzf-tmux thing keeps breaking so I'll have to replace it with the built-in one for the current session
[22:26:56] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[22:28:05] *** Quits: d630 (~d630@user/d630) (Quit: quit)
[22:30:28] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[22:32:36] *** Joins: e36freak (~e36freak@user/e36freak)
[22:34:57] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[22:35:41] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[22:36:11] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:37:01] *** Joins: n4dir (~user@i59F77C3B.versanet.de)
[22:37:31] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:37:50] *** Quits: Inline (~Inline@2a02:908:1252:7a80:a4ba:4eba:916d:1ed0) (Remote host closed the connection)
[22:38:08] *** Joins: Inline (~Inline@2a02:908:1252:7a80:2315:e7f0:55c7:7d49)
[22:38:13] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:38:26] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[22:38:27] *** Joins: thiras (~thiras@user/thiras)
[22:38:57] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[22:39:32] *** Quits: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar) (Max SendQ exceeded)
[22:40:01] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:40:02] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:41:11] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:41:13] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[22:41:39] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:7e94:3856:5140:4361)
[22:42:31] *** Quits: Inline_ (~Inline@2a02:908:1252:7a80:7e94:3856:5140:4361) (Remote host closed the connection)
[22:42:58] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:7e94:3856:5140:4361)
[22:45:07] <Samian> Hello bashers
[22:45:14] *** Quits: Inline (~Inline@2a02:908:1252:7a80:2315:e7f0:55c7:7d49) (Ping timeout: 268 seconds)
[22:48:35] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Ping timeout: 256 seconds)
[22:50:41] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:51:44] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[22:52:06] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Max SendQ exceeded)
[22:52:36] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:52:57] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[22:53:15] *** Quits: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 268 seconds)
[22:55:57] *** Quits: horribleprogram (~user@user/horribleprogram) (Remote host closed the connection)
[22:56:15] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:56:56] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[22:57:23] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 244 seconds)
[22:57:31] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Max SendQ exceeded)
[22:57:59] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:59:45] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[23:02:45] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 256 seconds)
[23:09:24] *** Joins: damxsa (~damx@2001:16a2:df3c:b500:52e7:1c66:409b:139f)
[23:09:51] *** Joins: reset (~reset@user/reset)
[23:10:49] <Benway> i keep trying to scroll back irssi with vim keys.  so much bashing last three days
[23:11:31] *** Joins: damxsa_ (~damx@2001:16a2:df3c:b500:fcfd:fe1a:694f:da85)
[23:11:58] *** Quits: zostj (~rue@1-162-45-243.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[23:13:35] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 268 seconds)
[23:14:16] *** Joins: wildo (~lain6141@119.224.72.222)
[23:14:49] *** Quits: damxsa (~damx@2001:16a2:df3c:b500:52e7:1c66:409b:139f) (Ping timeout: 268 seconds)
[23:15:48] *** Quits: mvdev_836 (~mvdev_836@user/mvdev-836/x-7776380) (Remote host closed the connection)
[23:16:20] *** Joins: Titan23 (~Titan23@host109-155-157-194.range109-155.btcentralplus.com)
[23:16:39] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[23:19:17] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Read error: Connection reset by peer)
[23:20:11] <xx> irssi? vim? this is #bash
[23:20:39] *** Quits: Burger (~burger@user/burger) (Quit: Textual IRC Client: www.textualapp.com)
[23:21:36] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 268 seconds)
[23:22:00] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[23:22:03] *** Joins: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[23:22:15] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Remote host closed the connection)
[23:25:53] *** Quits: damxsa_ (~damx@2001:16a2:df3c:b500:fcfd:fe1a:694f:da85) (Quit: Leaving)
[23:25:58] *** Quits: nickdiazswag209 (~bjpenn_@98.42.87.100) (Ping timeout: 260 seconds)
[23:26:12] *** Joins: kold (~quassel@S0106b0e4d5642fb6.cg.shawcable.net)
[23:26:33] *** Joins: seninha (~seninha@user/seninha)
[23:26:52] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:27:02] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[23:30:36] *** Joins: sebastorama (~sebastora@190.83.56.68)
[23:32:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[23:32:31] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 244 seconds)
[23:35:04] *** Joins: akaporu (~akaporu@hs17.make2.me)
[23:36:47] *** Joins: zebrag (~chris@user/zebrag)
[23:39:46] *** Quits: Titan23 (~Titan23@host109-155-157-194.range109-155.btcentralplus.com) (Quit: Leaving)
[23:41:13] *** Quits: furrymcgee (~devuan@cgn-213-196-210-222.nc.de) (Quit: leaving)
[23:41:27] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[23:42:05] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[23:42:42] *** Joins: tobybl (~tobybl@213.31.135.91)
[23:44:51] *** Joins: Paruza (~Entelin@c-107-4-246-114.hsd1.mn.comcast.net)
[23:45:53] <emanuele6> and that is bashing
[23:47:19] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[23:48:15] *** Joins: ano (~ano@user/ano)
[23:48:43] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[23:49:47] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[23:51:06] <Samian> emanuele6  what is?
[23:51:57] <Benway> # mydec=255; printf "%x" ${mydec}
[23:51:58] <shbot> Benway: ff
[23:52:20] <Benway> so that's two text characters in ascii
[23:52:32] <Benway> how do i get two BYTES
[23:52:39] <Benway> er one byte
[23:52:46] *** Joins: angkat (~angkat@2a02:587:121f:f103:7e7a:c8ae:bfec:cb23)
[23:52:57] <Benway> to echo to a file.  a char 0-255 00-FF
[23:53:19] <osse> !faq ascii
[23:53:20] <greybot> https://mywiki.wooledge.org/BashFAQ/071 -- How do I convert an ASCII character to its decimal (or hexadecimal) value and back? How do I do URL encoding or URL decoding?
[23:53:27] <Benway> no
[23:53:30] <Benway> i don't want hex
[23:53:35] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[23:53:54] <emanuele6> your example shows hex
[23:53:57] <Benway> i want to write a U8 raw audio file
[23:54:01] <Benway> yeah i don't want hex
[23:54:08] <emanuele6> you want to write \xff ?
[23:54:09] <osse> the faq addresses your question too
[23:54:16] <emanuele6> yes, it does
[23:54:36] *** Quits: marlinc (~marlinc@user/marlinc) (Quit: ZNC 1.8.2+deb1+focal2 - https://znc.in)
[23:55:27] *** Joins: marlinc (~marlinc@user/marlinc)
[23:55:32] <Benway> \x not found on page
[23:56:04] <emanuele6> in what?
[23:56:06] <Benway> byte not found on page
[23:56:11] <Benway> http://mywiki.wooledge.org/BashFAQ
[23:56:16] <osse> chr() is the one you want
[23:56:31] <osse> in the one I linked to
[23:56:43] <Benway> Can bash handle binary data?
[23:56:43] <Benway> The answer is, basically, no....
[23:56:46] *** Quits: micronn (~micronn@user/micronn) (Quit: brb)
[23:56:48] <osse> correct
[23:57:04] <Benway> can i write a string of bytes
[23:57:06] <emanuele6> well, it can store one byte
[23:57:07] *** Joins: micronn (~micronn@user/micronn)
[23:57:16] <emanuele6> but not read binary data
[23:57:22] <Benway> that's fine
[23:57:24] <yitz> bash? No. But most shell scripts invoke commands/tools and many of those can
[23:57:25] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[23:57:50] <emanuele6> <Benway> can i write a string of bytes
[23:57:56] <emanuele6> i don't understand the question
[23:58:17] <emanuele6> and what all this has to do with   mydec=255; printf "%x" ${mydec}
[23:58:18] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[23:58:46] <osse> they want to write raw bytes
[23:58:51] <emanuele6> i get that
[23:58:57] <emanuele6> but i don't understand what the input is
[23:59:00] <osse> chr() does that
[23:59:03] <Benway> a function
[23:59:05] <Benway> thx osse
[23:59:34] <Benway> doesn't need to go to FF though, EF would be fine
