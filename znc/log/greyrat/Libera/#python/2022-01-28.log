[00:00:04] *** Quits: vitali64 (~vitali64a@xdsl-31-164-198-163.adslplus.ch) (Ping timeout: 256 seconds)
[00:00:37] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[00:01:12] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[00:01:14] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 250 seconds)
[00:01:36] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[00:06:07] *** Joins: visl (visl@user/visl)
[00:07:05] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:07:37] *** Joins: summersault (~summersau@179.221.251.36)
[00:08:25] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[00:08:38] *** Joins: aknot (~aknot@2603:900a:1503:17bb:eeac:d13c:46fe:4dd7)
[00:09:07] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[00:09:17] *** Quits: pro_z (~pro_z@37.214.69.237) (Ping timeout: 240 seconds)
[00:09:42] *** Quits: admin123 (~harrymore@cpe-69-203-109-69.nyc.res.rr.com) (Ping timeout: 257 seconds)
[00:09:50] *** Quits: tmm88_ (~tmm88@bl22-240-102.dsl.telepac.pt) (Quit: Lost terminal)
[00:09:50] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[00:10:11] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Quit: Leaving)
[00:10:29] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[00:11:58] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[00:15:26] *** Quits: aknot (~aknot@2603:900a:1503:17bb:eeac:d13c:46fe:4dd7) (Killed (NickServ (GHOST command used by aknot_)))
[00:15:45] *** Joins: aknot_ (~aknot@2603:900a:1503:17bb:eeac:d13c:46fe:4dd7)
[00:16:11] *** Joins: aknot (~aknot@2603-900a-1503-17bb-eeac-d13c-46fe-4dd7.inf6.spectrum.com)
[00:16:35] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[00:17:18] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:a9ef:8cb1:3f34:9694) (Read error: Connection reset by peer)
[00:17:21] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[00:18:39] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:18:44] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:18:55] *** Joins: nunggu (~q@user/nunggu)
[00:19:36] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[00:20:30] *** Quits: luva (~luva@37.120.197.54) (Remote host closed the connection)
[00:21:19] <novapy> Is there a way to specify with click values that an option can take?
[00:21:29] *** Joins: luva (~luva@146.70.62.236)
[00:21:31] <novapy> not type values
[00:21:43] <grym> novapy: there's a choices= option, i beleive
[00:22:04] <novapy> thanks
[00:22:10] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:22:15] <grym> novapy: https://click.palletsprojects.com/en/8.0.x/options/#choice-options
[00:23:18] *** Quits: mike18 (~geri@216.200.232.252) (Ping timeout: 256 seconds)
[00:24:41] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[00:25:55] *** Quits: l4yer (~l4yer@2001:ac8:31:8900:1011:34c9:7321:99e2) (Remote host closed the connection)
[00:26:22] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[00:26:35] *** Joins: summersault (~summersau@179.221.251.36)
[00:27:02] *** Quits: aknot (~aknot@2603-900a-1503-17bb-eeac-d13c-46fe-4dd7.inf6.spectrum.com) (Ping timeout: 240 seconds)
[00:27:06] *** Quits: aknot_ (~aknot@2603:900a:1503:17bb:eeac:d13c:46fe:4dd7) (Ping timeout: 260 seconds)
[00:27:49] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-35e0-06b2-095d-de4d.res6.spectrum.com)
[00:28:51] *** Joins: Guest98 (~Guest98@192-222-180-235.qc.cable.ebox.net)
[00:29:05] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[00:30:14] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:31:51] *** Quits: Siecje (~Siecje@45.72.219.188) (Remote host closed the connection)
[00:32:07] *** Joins: anotheruser (~user@45.130.86.4)
[00:32:14] *** Joins: upsala (~zcb@185.213.155.232)
[00:33:50] *** Joins: CoolerX (~CoolerX@user/coolerx)
[00:35:28] *** Quits: demon__ (~user@197.54.38.140) (Ping timeout: 250 seconds)
[00:35:36] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[00:37:00] <Swahili> Q: How to handle a GET http response which is a Array of Objects in Python? I do `requests.get(apiUrl)` where requests is import requests. A curl response for> curl -X GET xxxxx/endpoint returns [{...}, {...}]. Any hints?
[00:37:59] <Guest98> Hi, I am new to Python. I try to do something that I am pretty sure, for you, will be very easy.
[00:38:00] <Guest98> I have a string.
[00:38:00] <Guest98> STR="TEST"
[00:38:01] <Guest98> And I want to send it by ethernet. So I do something like that: msg = bytes(STR, 'utf-8')
[00:38:01] <Guest98> But, on C side (other side are in C code) I always have an unwanted character at the beginning of the payload ('\xf').
[00:38:02] <Guest98> I understand that it is a way for Python to conserve the encoding.
[00:38:02] *** litharge sets mode: +q *!*@192.222.180.235
[00:38:34] *** litharge sets mode: -q *!*@192.222.180.235
[00:38:36] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[00:38:57] *** Joins: sa23m (~sa23m@pool-71-178-191-202.washdc.fios.verizon.net)
[00:39:29] <bjs> Guest98: I think you typed too quick for the bot and your message got chopped, was there more?
[00:39:36] <novapy> Swahili: what information do you need from the api? figure that out and then extract it. a tip, you should be able to serialize it and iterate with the json module
[00:40:23] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:e9cd:feb6:68fd:12df)
[00:40:24] <Swahili> novapy: tks for looking! I'd like to get the response as an array so that I can do the computations. iterate or access by index, etc.
[00:40:39] <sa23m> If I have e.g. 20 different datetimes in a list across 3 hours, how can I keep data closest to every 20 minutes
[00:40:55] <Swahili> at the moment seems that response = request.get(...), data = json.loads(response.content), data[0] seems to work
[00:41:00] <Guest98> Let retry: Hi, I am new to Python. I try to do something that I am pretty sure, for you, will be very easy.
[00:41:01] <Guest98> I have a string.
[00:41:01] <Guest98> STR="TEST"
[00:41:02] <Swahili> but seems a bit to verbose
[00:41:02] <Guest98> And I want to send it by ethernet. So I do something like that:
[00:41:02] <Guest98> msg = bytes(STR, 'utf-8')
[00:41:03] <Guest98> But, on C side (other side are in C code) I alwayse have an unwanted caractere at the begining of the payload ('\xf').
[00:41:03] *** litharge sets mode: +q *!*@192.222.180.235
[00:41:22] <jinsun> Swahili: you can just do `data = requests.get(apiUrl).json()`
[00:41:34] *** litharge sets mode: -q *!*@192.222.180.235
[00:41:42] <bjs> Guest98: no don't paste so many lines at once, the bot does not like it.  Either make a pastebin if you have so many lines,  or just continue from where you got cut off last time, but try to be less spammy or the bot will think you're a bot
[00:41:43] <bjs> and spam you
[00:41:47] <ssbr> Guest98: if you try again you get quieted by the robot again for the same reason haha
[00:41:48] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[00:41:51] <bjs> uh and de-spam you
[00:41:54] <Swahili> jinsun: thanks!
[00:42:19] <Swahili> jinsun: that worked nicely, thank you
[00:42:34] <bjs> Guest98: you said something about having an \xf at the start of your encoded strings?
[00:43:25] <Guest98> I have a string.
[00:43:32] <Guest98> STR="TEST"
[00:43:39] <Guest98> And I want to send it by ethernet. So I do something like that:
[00:43:47] <Guest98> msg = bytes(STR, 'utf-8')
[00:43:49] <sn_fk_n> \xf is the unicode for paragraph seperator so it's probably a new line deal i would guess
[00:43:56] <Guest98> But, on C side (other side are in C code) I alwayse have an unwanted caractere at the begining of the payload ('\xf').
[00:44:02] <Guest98> I understant that it is a way for Python to conservate the encoding.
[00:44:08] <Guest98> But I want a plain byte stream.
[00:44:11] <sa23m> If I have e.g. 20 different datetimes across 3 hours, how can I keep datetimes closest to every 20 minutes. So that instead of 20 datetimes, I have only 12 left (1 approximately every 20 minutes)
[00:44:26] <Swahili> Q: On a simple request.get(apiUrl).json(), finding that when making a call to remote https differs from the localhost. When curl -X GET apiUrl the data is similar. Why would that be happening through the python request?
[00:44:52] <bjs> Guest98: Python won't be putting that character there;  is it \x0f or \xff or \xf0
[00:45:19] <Guest98> on C side, in debugger, I observe \x0F
[00:45:36] <novapy> Swahili: what do you mean? how does it differ?
[00:45:45] <bjs> Guest98: have you tried print(msg) to see if the \x0F is coming from your msg
[00:45:57] <Swahili> novapy: let me double check will make a a fetch call via js through a the browser console
[00:47:13] <Guest98> If I do a print, I see b'TEST'
[00:47:31] <bjs> Guest98: none of those bytes are the byte \x0f
[00:47:38] <bjs> so it's not coming from python encoding the string
[00:47:57] <bjs> Guest98: what do you do *after* you encode? might the extra bytes be being added later
[00:49:22] <Guest98> interesting, I was so sure that it was coming of this statement (msg = bytes(STR, 'utf-8')) let me dig more near of the ethernet "wire"
[00:49:27] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[00:49:34] <whatsupdoc> Can someone help with argparse?
[00:49:34] <bjs> Guest98: well your print(msg) seems to prove it was not
[00:49:45] <whatsupdoc> I have the following: https://dpaste.org/B4cz
[00:49:48] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[00:50:03] <novapy> What is the difference between click.argument and click.option
[00:50:38] <whatsupdoc> It works fine without --date, but when I uncomment line 2, it fails
[00:50:51] <bjs> novapy: https://click.palletsprojects.com/en/8.0.x/parameters/#parameters explains in detail
[00:51:13] <bjs> whatsupdoc: it "fails"?
[00:51:26] <whatsupdoc> ./script.py get --date 2017-01-01 thisshouldgointotasks
[00:52:00] <whatsupdoc> Namespace(action=['get'], date=['2017-01-01'], task=['thisshouldgointotasks'])
[00:52:27] <whatsupdoc> Instead I get proj4.py: error: unrecognized arguments: thisshouldgointotasks
[00:52:42] <bjs> whatsupdoc: I don't think you can have --args in between positional ones like that
[00:52:44] *** Joins: therufuser (~therufuse@p5b02e34f.dip0.t-ipconnect.de)
[00:52:54] <whatsupdoc> That's what I'm thinking, but why not
[00:52:58] <bjs> Maybe you want sub parsers
[00:53:04] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[00:53:15] <c4017w_> what's the magic bpaste link to paste code with a traceback attached?
[00:53:33] <bjs> c4017w_: well bpaste has an "Add another file" button you can just press and select Python traceback as the file type
[00:53:48] <bjs> c4017w_: but maybe you want https://bpa.st/+python+pytb
[00:53:52] <grym> c4017w_: you can just tack on different formats; you probably mean bpa.st/+python+pytb
[00:54:08] <c4017w_> yes that thanks. It should be in the topic I think...
[00:54:10] <grym> but you can just as well bpa.st/+text+html+...
[00:54:11] <whatsupdoc> It's impossible to So is the functionality I'm trying to get impossible to do?
[00:54:17] *** Quits: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[00:54:18] <therufuser> Ahoi! Quick question: Is there a limit to how many interpreters I can embed into a C program? And if it's more than one: Are they thread-safe?
[00:54:22] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[00:54:31] <bjs> whatsupdoc: did you just ignore the "maybe you want sub parsers" part :P
[00:54:57] <bjs> whatsupdoc: probably it's simply not allowed here because it'd complicate the parsing logic too much to try figure out when it's allowed and when it's not and to disambiguate
[00:55:20] *** Joins: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch)
[00:56:22] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:56:35] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[00:56:58] <c4017w_> Can someone explain how I'm using the 'decorator' module incorrectly here? https://bpa.st/OP7A  I found that commenting out lines 230:231 in decorator.py fixes it (`if not kwsyntax...`), but I'm not sure how to pass the `kwsyntax` argument in my code
[00:59:00] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Ping timeout: 256 seconds)
[00:59:14] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:e9cd:feb6:68fd:12df) (Quit: Konversation terminated!)
[00:59:37] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:e9cd:feb6:68fd:12df)
[00:59:40] <bjs> c4017w_: you say res = func() but doesn't func take a "self" argument at least.  What does this decorator module do?
[01:00:14] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[01:00:27] <bjs> and what's the point of _func_wrapper? I'm a little confused by it all :P
[01:02:10] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 268 seconds)
[01:02:14] <c4017w_> decorator module is used to preserve the name of the decorated function in the call stack. _func_wrapper is there for the same reason, since I need to pass a function to `retry_func`
[01:02:24] *** Quits: emx (~emx@adsl-84-226-68-198.adslplus.ch) (Ping timeout: 256 seconds)
[01:02:36] <bjs> c4017w_: why not just pass func and also pass args and kwargs and apply them there
[01:02:51] <c4017w_> yes, I just thought of that
[01:02:55] <c4017w_> let me try
[01:03:06] <bjs> it seems a bit of a long way to do this, but the error seems to be saying that self somehow got lost through all of this
[01:03:39] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:ec0c:2b48:cde7:7c7e) (Quit: Client closed)
[01:03:49] <bjs> you could try write the decorator manually (With functools.wraps if you care about the name and such) to see if it's the decorator module that has the issue
[01:04:08] <whatsupdoc> So is it correct to say that optional arguments can't follow positional arguments
[01:05:04] *** Joins: ntropy (~ntropy@146.70.21.21)
[01:05:32] <bjs> whatsupdoc: argparse seems to have that restriction yeah
[01:05:42] *** Quits: Timvde (~tim@towely.vdeynde.com) (Quit: WeeChat 3.3)
[01:06:06] <c4017w_> looks like removing _func_wrapper fixed it. Let's see if it broke anything else...
[01:06:14] *** Joins: Guest7856 (~max@200-140-128-103.bsace703.dsl.brasiltelecom.net.br)
[01:06:41] *** Joins: _ev (ev@user/ev/x-8999918)
[01:07:08] *** Joins: Timvde (~tim@towely.vdeynde.com)
[01:07:08] *** Quits: Narrat (~omnius@p2e511ab8.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:07:49] <novapy> How would I make argument exclusive of each other? (click)
[01:08:28] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:08:32] <c4017w_> ah well now I can't pass a kwargs named 'retries' to the decorated function
[01:08:40] *** Joins: mickey8 (~user@user/mickey)
[01:09:17] *** Quits: ntropy (~ntropy@146.70.21.21) (Quit: Leaving)
[01:10:42] <Repiphany> Seems like you want a decorator factory that takes the kwarg rather than trying to modify the function to take a new argument
[01:11:07] <Repiphany> so you could do `@retries(n_retries = 3)` instead
[01:12:07] <grym> novapy: click doesn't like it when you do that
[01:12:24] <meejah> novapy: you mean, if you do --foo you can't also have --bar ...?
[01:12:56] *** Quits: elgraz (~elgraz@151.65.7.178) (Quit: Leaving)
[01:13:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:13:28] <grym> but there's this which seems new https://cloup.readthedocs.io/en/stable/index.html
[01:14:11] <parv> "Ooh Shiny✨"
[01:14:51] <SnoopJ> novapy, I usually just check inside the callable consuming the options (note: it doesn't really make sense to do this for arguments, but it does for options)
[01:15:18] <SnoopJ> e.g. https://github.com/SnoopJeDi/playground/blob/master/python/monitor_memory_usage.py#L31-L32
[01:15:23] <novapy> meejah yep
[01:16:15] *** Quits: coldmountain (uid484352@id-484352.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:16:40] <novapy> SnoopJ how would it be best to handle if i did give exclusive arguments?
[01:16:45] <c4017w_> Repiphany, I guess that's why I had _func_wrapper. So I could separate kwargs going to the decorator from kwargs going to the function
[01:17:06] <_ev> Can django_rest_framework be used to login website uses? Such as set a session cookie? DRF seems ideal for rate-limiting, not solely relying on nftables/jails
[01:17:43] <SnoopJ> novapy, I have no idea what mutually exclusive arguments would mean. --foo is an option, not an argument, in click's jargon.
[01:17:55] *** Quits: captainchris (~captainch@i19-les01-t2-31-37-211-84.sfr.lns.abo.bbox.fr) (Remote host closed the connection)
[01:18:06] <novapy> yeah, I meant options, sorry
[01:18:10] <SnoopJ> novapy, did you look at my link?
[01:18:38] <novapy> Ah, i'm not using a gui right now
[01:18:48] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:e9cd:feb6:68fd:12df) (Quit: Konversation terminated!)
[01:19:07] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:e9cd:feb6:68fd:12df)
[01:19:16] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:19:19] <SnoopJ> I usually do: `def cli(opt_A, opt_B): if opt_A and opt_B: raise ValueError("--optA and --optB are mutually exclusive")`
[01:19:53] <novapy> completely working from terminal, vim screen, and weechat
[01:20:07] <meejah> click.UsageError might be better, but yeah what SnoopJ says
[01:20:14] <novapy> SnoopJ, k makes sense
[01:20:51] <SnoopJ> novapy, you might want to consider getting a browser that can be used from the terminal, then. This channel makes heavy use of references to documentation.
[01:20:58] <zerosum> so odd, I have a list of dicts trying to access a key inside these dicts but for w/e reason i get TypeError: string indices must be integers not sure why as I literally just did the same with another piece of code and worked.. here's what I have https://bpa.st/UN5A
[01:21:07] <SnoopJ> (I like links2, personally)
[01:21:33] *** Quits: purple_cthulhu (~purple_ct@2.186.248.31) (Quit: Client closed)
[01:22:03] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[01:22:49] <SnoopJ> zerosum, `for item in ip_v4_aggregates:` --> item will be a line from the file (i.e. a string). You should parse the JSON first using `json.load()`
[01:22:51] <zerosum> wow never mind guys I forgot to do a json.load
[01:23:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[01:23:11] <zerosum> SnoopJ yep just realized that :P thank you
[01:23:13] <novapy> SnoopJ, such things are rather difficult, as they make use of ansi characters, and really slow down a terminal, I mostly make use of curl and read the links from that, though I might eventually find something that will return it as a plain text rather than html
[01:23:49] <SnoopJ> novapy, sounds very frustrating, but noted, I won't respond if my response necessarily includes a link.
[01:24:34] <novapy> :P not frustrating really, just difficult to read html
[01:24:34] <grym> novapy: you can curl the  raw by mangling the URL; https://raw.githubusercontent.com/SnoopJeDi/playground/master/python/monitor_memory_usage.py
[01:24:59] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:25:14] * SnoopJ should probably factor out the mutual-exclusion part of that into its own sample
[01:26:19] <grym> but github looks semi reasonable in my TUI browser.  kind of shockingly
[01:26:25] *** Quits: guest7776 (uid537313@id-537313.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:26:26] <grym> i didn't expect that to be true
[01:26:36] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[01:27:54] *** Quits: dreamon (~dreamon@pd950385d.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:28:06] <novapy> grym which tui brower?
[01:29:04] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:dcf2:f40b:6901:1627)
[01:29:38] *** Quits: tmm88 (~tmm88@user/tmm88) (Ping timeout: 250 seconds)
[01:29:45] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[01:30:29] <grym> novapy: eww
[01:30:44] <novapy> that the name of it?
[01:31:04] <grym> yes, the "emacs web wowser"
[01:31:28] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:9180:5f8c:f264:7669)
[01:31:40] <grym> i don't know why it's named that, either
[01:32:06] <novapy> wow
[01:32:28] <jiffe> if I have an array such as [ 'a', 'b', 'c', 'd', 'e', 'f', ... ], is there a one liner to combine into 2 character strings, ie [ 'ab', 'cd', 'ef', ... ] ?
[01:32:42] <novapy> I (try to) use browsh
[01:32:46] <novapy> its slow
[01:32:51] *** Quits: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi) (Ping timeout: 250 seconds)
[01:32:53] <grym> but w3m ain't bad either
[01:33:46] <grym> [''.join(first,second) for first,second in zip(thelist[0::2], thelist[1::2])]
[01:34:22] <CrtxReavr> YIkes. .
[01:34:27] <CrtxReavr> That's ugly, but it'd work.
[01:34:28] <grym> er, .join((first,second)), sorry
[01:34:44] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:34:46] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:a897:3dc:78c:cee7) (Ping timeout: 260 seconds)
[01:35:01] <jinsun> first + second is a bit prettier I guess?
[01:35:02] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:5da4:1e7b:24a6:7c79)
[01:35:23] <grym> oh, yeah
[01:35:39] <grym> i like to pretend like adding strings isn't possible :P
[01:36:41] <jinsun> only pretty for the case of 2 though, any more then .join looks better
[01:37:40] *** Quits: aslicedbanjo (~aslicedba@host86-150-115-146.range86-150.btcentralplus.com) (Quit: Leaving.)
[01:37:51] <grym> i am pleased to discover that sum() tells you not to use sum that way, too
[01:37:59] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:9180:5f8c:f264:7669) (Ping timeout: 252 seconds)
[01:38:13] <grym> `TypeError: sum() can't sum strings [use ''.join(seq) instead]`
[01:38:27] *** Joins: purple_cthulhu (~purple_ct@2.186.248.31)
[01:40:21] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:40:28] *** Joins: bluedust (~bluedust@103.161.144.140)
[01:40:36] <purple_cthulhu> zerosum, the code opens the JSON file for reading in text mode, the items read from the file are text lines (not dict instances representing JSON objects), to read the JSON file into a dict, use json.load(file_handle).
[01:41:14] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[01:43:15] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:20a4:c6fa:1fb9:86ec)
[01:43:55] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[01:44:02] <yuesbeez> Is there a way to speed up asyncio.gather by increasing the number of concurrent threads or some other means?
[01:44:48] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 250 seconds)
[01:44:51] <bjs> yuesbeez: no, all of asyncio's work happens in one thread
[01:45:12] <bjs> yuesbeez: what kind of things are you gathering
[01:45:35] <yuesbeez> I see. I am trying to process database data which includes an api call for each row and print some result to stdout
[01:45:37] *** Joins: awmv_ (~awmv@2a02:21b0:644f:c181:5ca:310c:fe54:1f48)
[01:45:41] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:5da4:1e7b:24a6:7c79) (Ping timeout: 252 seconds)
[01:46:15] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:46:16] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.3)
[01:46:30] <yuesbeez> Once I increase the number of database data it starts to take a lot longer. I was assuming using async it wouldnt be affected as much by increasing the amount of data
[01:47:22] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[01:47:35] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:20a4:c6fa:1fb9:86ec) (Ping timeout: 250 seconds)
[01:48:19] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[01:49:13] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[01:49:57] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[01:50:17] *** Quits: xx (~xx@user/xx) (Ping timeout: 240 seconds)
[01:50:34] *** Quits: neceve (~quassel@2.26.93.228) (Ping timeout: 256 seconds)
[01:51:03] *** Joins: vakera_pingveno (~dan@static-198-54-129-53.cust.tzulo.com)
[01:51:06] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:8518:7189:4482:91c6) (Ping timeout: 260 seconds)
[01:51:31] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[01:51:36] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Client Quit)
[01:52:57] *** Quits: dfinr (~dfinr@user/dfinr) ()
[01:53:07] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[01:53:53] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:ec0c:2b48:cde7:7c7e)
[01:56:09] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[01:56:42] <novapy> so, I'm trying to make some filters for a list of object to sort it, and I have this to sort by date ```sorted(self.cache_list, key=lambda video:video.date)```, which works because the timestamp get put in numerical order, but how might I do a search do get all the video objects whose video.author = somename ?
[01:57:05] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[01:57:50] *** Quits: puzzled (~puzzled@83-85-202-120.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[01:58:03] *** Joins: noobie (~noobie@dyx0pyyc9g2k53j5ymrry-3.rev.dnainternet.fi)
[01:58:18] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[01:58:49] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:58:58] *** Quits: magla (~gelignite@55d4248d.access.ecotel.net) (Quit: Stay safe!)
[01:59:42] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:59:49] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[02:00:28] <jinsun> [video for video in self.cache_list if video.author == somename] ?
[02:00:54] *** Quits: cebtenzzre (~cebtenzzr@2603-7081-3406-8f26-93c0-a4a6-e593-a003.res6.spectrum.com) (Quit: Konversation terminated!)
[02:01:21] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[02:01:59] *** Quits: sydbarret (~anton@static-186-121-195-51.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:02:44] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:d9cc:83f4:ec37:de3f)
[02:03:01] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Quit: RabidToaster)
[02:03:13] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[02:04:55] *** Quits: awmv_ (~awmv@2a02:21b0:644f:c181:5ca:310c:fe54:1f48) (Ping timeout: 250 seconds)
[02:04:59] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[02:05:52] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:06:57] <SnoopJ> yuesbeez, which part of it is slow? If the API call is what's eating your time (e.g. if it's hitting the network) you might benefit from threads, but if it's CPU bound it won't do much.
[02:07:10] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[02:07:39] *** Joins: teut (~teut@2401:4900:1c68:97ee:c14d:567d:7988:3ca2)
[02:07:40] *** Quits: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[02:07:57] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[02:08:04] <yuesbeez> Its not CPU bound just that it cant process the data and api calls at the same time it seems. I was recommended against threads as async is safer
[02:09:17] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[02:09:39] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:4844:d1b4:fa72:85a4)
[02:09:52] <jinsun> "process the data" sounds cpu bound
[02:10:21] <bss> yeah, async will, generally speaking, just let python do other stuff where it would normally be blocking waiting for I/O, but if you're not I/O-bound...
[02:10:50] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl487twykgbpuebf2.ipv6.telus.net) (Quit: Leaving)
[02:11:37] * SnoopJ notes that "threads" and "async" are not mutually exclusive
[02:11:49] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[02:11:53] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:12:15] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[02:12:31] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:12:34] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[02:13:29] *** Quits: noobie (~noobie@dyx0pyyc9g2k53j5ymrry-3.rev.dnainternet.fi) (Quit: Client closed)
[02:14:05] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[02:14:06] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[02:14:06] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[02:14:45] *** Quits: fstd_ (~fstd@xdsl-89-1-56-234.nc.de) (Read error: Connection reset by peer)
[02:14:51] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:ec0d:cb1d:9380:24e9)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:13] *** Joins: johnkeats7 (~johnkeats@186.220.240.39)
[02:15:52] *** Joins: fstd (~fstd@xdsl-89-1-56-234.nc.de)
[02:15:54] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:18:57] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:ec0d:cb1d:9380:24e9) (Ping timeout: 240 seconds)
[02:19:45] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:20:14] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:ec0c:2b48:cde7:7c7e) (Quit: Client closed)
[02:21:12] *** Quits: dbbr__ (~dbbr___@2804:5f80:70a0:3700:d8db:4389:49c1:1c28) (Ping timeout: 250 seconds)
[02:21:46] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[02:22:05] <yuesbeez> Another unrelated question. I notice my sql cursor.execute() queries (not running with asyncio) are staying running in the background even if I kill my python script. Is it possible to make killing a python script result in killing any queries it started?
[02:22:18] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 256 seconds)
[02:23:17] <Spunk> I don't think so
[02:23:22] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[02:23:28] <Spunk> a cursor is a process running on your rdbms
[02:23:31] <Spunk> whatever that may be
[02:23:42] <Spunk> killing the script doesn't kill the cursor process
[02:24:15] <KirkMcDonald> However, I guess I'd expect the RDBMS to notice if the connection closes, and then end the query.
[02:24:30] *** Joins: dbbr__ (~dbbr___@2804:5f80:70a0:3700:d8db:4389:49c1:1c28)
[02:24:39] <Spunk> it doesn't
[02:24:49] <Spunk> I also question why anyone would need a cursor
[02:24:54] <Spunk> but that's a topic for another day
[02:25:25] *** Quits: purple_cthulhu (~purple_ct@2.186.248.31) (Quit: Client closed)
[02:25:27] <KirkMcDonald> It might not notice immediately.
[02:25:38] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 260 seconds)
[02:26:25] <Spunk> I have to go back to my old days of db2 and UNIX AIX and bringing the rdbms down to a crawl because killing the script would not kill the procedure running on db2
[02:26:35] <Spunk> I would always need to go to a DBA to kill it for me
[02:26:37] <KirkMcDonald> The worst case is that the connection isn't closed properly, causing the RDBMS to not notice until either the TCP timeout, or until the buffer fills up.
[02:26:39] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[02:26:50] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[02:27:17] <Spunk> something like that
[02:27:19] <Spunk> but it's not immediate
[02:27:20] *** Joins: ouestbillie (~gallup@185.195.233.151)
[02:27:44] <KirkMcDonald> Yes. In particular, it's entirely likely that it wouldn't happen until the query completes anyway.
[02:28:04] <Spunk> that's right
[02:28:20] <Spunk> most times you start a stupid query like select * from transactions
[02:28:35] <Spunk> and transactions has hundreds of millions of rows
[02:28:43] <Spunk> killing the ksh would not stop the query from running
[02:28:51] <Spunk> and the database would eventually come down
[02:28:57] <Spunk> the cursor is the same thing
[02:29:47] <Spunk> I am not a DBA, and that knowledge is well beyond me
[02:30:03] <Spunk> but you need admin access to the rdbms to kill anything in its memory
[02:31:32] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:31:36] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[02:32:40] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[02:33:52] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[02:33:57] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[02:34:39] <novapy> jinsun: [video for video in self.cache_list if video.author == somename] how can I assign this to a variable?
[02:34:50] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[02:35:01] <grym> novapy: well, it's a list
[02:35:02] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:dcf2:f40b:6901:1627) (Ping timeout: 240 seconds)
[02:35:07] <grym> so with =, like anything else
[02:35:08] <yuesbeez> Yes running show processlist and then kill works. But I was hoping there was a way to avoid the problem in the first place aside from the script not having to be killed
[02:35:16] <grym> (a list comprehension)
[02:35:33] <grym> novapy: = always means assignment
[02:35:44] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:35:54] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:fd45:3dd0:416d:24ed)
[02:36:33] <NoImNotNineVolt> https://nedbatchelder.com/text/names.html helped me understand what assignment means in python
[02:37:09] <SnoopJ> names.html +1
[02:37:45] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[02:37:59] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:38:14] *** Quits: dbbr__ (~dbbr___@2804:5f80:70a0:3700:d8db:4389:49c1:1c28) (Ping timeout: 260 seconds)
[02:38:19] *** Joins: mickey8 (~user@user/mickey)
[02:38:28] <whatsupdoc> In argparse, can you make argument groups mutually exclusive?
[02:38:37] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:d9cc:83f4:ec37:de3f) (Ping timeout: 240 seconds)
[02:39:10] <SnoopJ> whatsupdoc, yes: https://docs.python.org/3/library/argparse.html#mutual-exclusion
[02:39:36] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:39:49] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:40:08] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[02:42:51] *** Quits: mickey8 (~user@user/mickey) (Client Quit)
[02:43:01] <whatsupdoc> Doesn't work :/
[02:43:05] *** Joins: mickey8 (~user@user/mickey)
[02:43:17] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[02:43:25] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:4c0a:4e68:6f7f:23ed) (Quit: Leaving)
[02:43:51] <SnoopJ> I assure you it does
[02:44:12] <whatsupdoc> https://dpaste.org/KMab
[02:44:18] *** Quits: ryu` (~ryusaku@user/ryu/x-3206151) (Quit: SCV ready!)
[02:44:27] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:44:45] *** Quits: jladd_ (~jladd@c-71-63-157-185.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[02:45:06] *** Quits: teut (~teut@2401:4900:1c68:97ee:c14d:567d:7988:3ca2) (Quit: Client closed)
[02:45:12] <SnoopJ> whatsupdoc, read the documentation once more, carefully. add_mutually_exclusive_group() returns a group.
[02:45:21] <bjs> whatsupdoc: line 10 you don't use the group it returned?
[02:46:40] *** Joins: jladd (~jladd@c-71-63-157-185.hsd1.or.comcast.net)
[02:46:51] <whatsupdoc> https://dpaste.org/Ghec
[02:47:37] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[02:47:40] <whatsupdoc> Still doesn't work
[02:47:53] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[02:48:56] <SnoopJ> my mistake, I misread "argument groups." No, argparse can't do it (the docs mention this)
[02:48:59] <SnoopJ> sorry about that
[02:49:47] *** gentooclimax is now known as climax
[02:49:56] *** Joins: Viewday11 (~Viewday@user/viewday)
[02:50:10] <SnoopJ> this is one of the thresholds where I throw my hands up and use click because argparse just doesn't cut it
[02:50:57] *** climax is now known as gentooclimax
[02:51:03] <whatsupdoc> it'll take me yeras to learn click
[02:51:07] <whatsupdoc> *years
[02:51:19] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 268 seconds)
[02:51:21] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:51:34] *** Joins: mickey8 (~user@user/mickey)
[02:51:35] *** Joins: djapo (~archangel@user/djapo)
[02:51:39] *** Joins: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:98dc:2f18:f0d3:94b0)
[02:51:43] <SnoopJ> then I suppose you're in a pickle, indeed.
[02:52:17] <monkeyPlus> hey.im processing multiplication on large numbers, which i think its slow, because it uses a lof of memory. Is there a way to customize the memory?? any tricks?
[02:52:33] <monkeyPlus> i think that the multiplication is not that expensive right? so must be memory
[02:52:57] <ssbr> whatsupdoc: you can create subcommands with disjoint arguments.
[02:53:03] <ssbr> click will not take years to learn.
[02:53:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:53:26] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:11a8:b622:801:adca)
[02:54:07] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[02:54:38] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:56:39] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:56:52] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:fd45:3dd0:416d:24ed) (Ping timeout: 268 seconds)
[02:58:32] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[02:59:08] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[02:59:44] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[03:00:31] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[03:01:14] <Guest98> Ok, sorry it took me a long time but, still chasing my \x0F.
[03:01:20] *** Joins: chenqisu1 (~bhca7d@183.217.200.249)
[03:01:20] <Guest98> You were right, it was not related to this line of code (msg = bytes(STR, 'utf-8')).
[03:01:26] <Guest98> I still not figure out where it came from. But it is related to the packing of the data.
[03:01:31] <Guest98> It appears after that line:  packed_data = self.data_structure.pack(self.version)
[03:01:32] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[03:01:36] <Guest98> The "struct" is defined like that:  super().__init__('45p') self.version is good but packed_data contains the \x0F
[03:02:03] *** Quits: chenqisu1 (~bhca7d@183.217.200.249) (Read error: Connection reset by peer)
[03:03:52] *** Joins: gtz (~gtz@46.251.99.222)
[03:04:16] *** Quits: gtz_ (~gtz@46.251.99.222) (Ping timeout: 268 seconds)
[03:04:17] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 240 seconds)
[03:04:48] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[03:05:20] <Repiphany> Guest98: pastebin all of the code that shows this behaviour
[03:06:07] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 268 seconds)
[03:06:21] *** Joins: Axy (~Axy@user/axy)
[03:07:03] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:07:27] <Guest98> Ish, It is part of a big project. I will try to isolate the bug in a shorter version if necessary.
[03:07:55] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[03:07:58] *** Joins: Naan` (~Naan@user/naan)
[03:08:25] <SnoopJ> monkeyPlus, the biggest tip of all for optimizing memory (or speed, or...): measure your program first to figure out where the expensive parts are
[03:08:30] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Quit: WeeChat 3.3)
[03:09:02] <monkeyPlus> i know where they are..the algoritm just uses multiplication..and it stuck there.. i assum its memmory because i only multiply...
[03:09:10] *** Joins: thevar1able (~textual@46.39.45.122)
[03:09:27] <monkeyPlus> i was thinking of using string to represent numbers..but cant find algorithm on web
[03:09:49] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[03:10:07] <sco1> You can't have "know" and "assume" in the same sentence.
[03:10:39] <SnoopJ> sco1, I assume you know that you can, actually, but the point is well made: why guess/assume when you can measure?
[03:11:02] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[03:11:06] <monkeyPlus> oh ok..ill search thanks for advbice
[03:12:05] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[03:12:31] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a)
[03:12:54] *** Quits: remote (~self@user/hackers) (Ping timeout: 268 seconds)
[03:12:59] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:13:14] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:13:31] <lseactuary> hello. i am trying to understand why this code is giving an error but cant understand wh
[03:13:52] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:14:02] *** Quits: vakera_pingveno (~dan@static-198-54-129-53.cust.tzulo.com) (Ping timeout: 240 seconds)
[03:14:13] <lseactuary> https://pastebin.com/Lt6Ucnem
[03:14:32] *** Joins: remote (~self@user/hackers)
[03:14:51] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:15:00] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[03:15:02] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Ping timeout: 240 seconds)
[03:15:39] *** Joins: Haxxa (~Haxxa@125-253-30-218.ip4.superloop.com)
[03:16:40] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 250 seconds)
[03:18:57] <sco1> What is the type of `df1[left_on]`?
[03:19:24] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:19:52] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:20:02] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[03:20:15] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:20:21] <tpr> lseactuary: I have seen similar error commonly when the series has some null values
[03:20:41] <lseactuary> sco1 - left_on is an input no?
[03:21:12] <sco1> I don't know, we don't have access to your data.
[03:21:13] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::40)
[03:21:18] <lseactuary> tpr - how to check this is causing the issue please?
[03:21:28] <lseactuary> or how to fix?
[03:21:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:21:53] <tpr> although, I'm unfamiliar with difflib. but that 'TypeError: 'float' object is not iterable' is something that I see happening often when there are nulls in dataframe contexts
[03:22:07] *** Quits: mat001_ (~mat001@72.28.108.216) (Remote host closed the connection)
[03:22:14] *** Joins: Betal (~Betal@user/betal)
[03:22:25] <Guest98> Ok, I write a small example. it is not anymor \x0F that appear but still, an unwanted char appear! https://pastebin.com/AzQUe5e9
[03:22:43] *** Quits: sa23m (~sa23m@pool-71-178-191-202.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[03:23:44] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:23:59] <tpr> lseactuary: check if your dataframe columns (je_id, gl_je_id) have nulls. piper_df['je_id'].isnull() and same for the other one
[03:24:02] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[03:24:04] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:24:13] *** Quits: mattfoxxx (~mattfoxxx@200116b822bc0200488a33089d12babe.dip.versatel-1u1.de) (Quit: WeeChat 3.4)
[03:24:23] *** Joins: mattfoxxx (~mattfoxxx@200116b822bc0200488a33089d12babe.dip.versatel-1u1.de)
[03:25:01] <c4017w__> Guest98, "The 'p' format character encodes a “Pascal string”, meaning a short variable-length string stored in a fixed number of bytes, given by the count. The first byte stored is the length of the string, or 255, whichever is smaller."
[03:25:02] <Repiphany> Guest98: struct.pack('p') encodes the length of the string as the first byte (up to 255)
[03:25:09] <c4017w__> heh beat you
[03:25:10] *** Joins: sudomann (~sudomann@98.219.211.182)
[03:25:10] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a) (Quit: Client closed)
[03:25:12] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[03:25:24] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[03:25:34] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[03:25:45] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Remote host closed the connection)
[03:26:09] *** Quits: skapate (~Skapata@user/skapata) (Remote host closed the connection)
[03:26:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[03:27:01] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[03:28:20] <Guest98> ok good, I feel like we will solve this...  My C "struct" is only a "char var[45]" what is the right format to use?
[03:28:36] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[03:28:57] *** Joins: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e)
[03:30:18] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:30:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:31:58] <Guest98> I can try 'cccc...' 45 times but ?
[03:32:53] <Yhg1s> Guest98: format for what?
[03:32:57] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[03:33:11] <Guest98> for a char var[45]
[03:33:20] <Yhg1s> Guest98: yes, but format for what? What are you passing the format to?
[03:33:32] *** Quits: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6) (Ping timeout: 240 seconds)
[03:33:58] <Guest98> to a struct definition https://pastebin.com/AzQUe5e9
[03:34:21] <Yhg1s> okay, so, "for the struct module". You probably want "45s"
[03:35:37] *** Joins: fukuda (~fukuda@2804:431:c7f5:a3c3:2de6:51f5:697:b187)
[03:36:21] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[03:36:21] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[03:36:27] *** Joins: martums5 (~martums@user/martums)
[03:36:38] *** Quits: matdev (~matdev@2a01:6e60:10:793:666:feed:dead:beef) (Remote host closed the connection)
[03:36:40] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[03:36:47] <Guest98> TYVM all,  when we know the answer, the documentation suddenly appears clear.
[03:36:57] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 240 seconds)
[03:37:41] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:38:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:40:01] <monkeyPlus> why does the following code is very slow?! https://bpa.st/ERDQ
[03:40:06] <monkeyPlus> 100*100*100 values
[03:40:19] *** Quits: gossie (~gossie@2001:1c02:11e:c700:4a28:456f:cfe0:5c8e) (Quit: = "bye bye")
[03:41:11] *** Joins: bluedust (~bluedust@103.161.144.140)
[03:41:48] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[03:43:10] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[03:43:15] *** Joins: funhouse (~funhouse@user/funhouse)
[03:43:48] *** Quits: _ev (ev@user/ev/x-8999918) (Quit: Leaving.)
[03:43:54] <funhouse> Hello, I am  getting this error on amazon linux 2 --> configure: error: the PGXS Makefile /usr/pgsql-13/lib/pgxs/src/makefiles/pgxs.mk cannot be found. Please install the PostgreSQL server development packages and re-run configure.
[03:44:08] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a)
[03:44:17] <funhouse> I cannot find postgresql-server-dev
[03:44:39] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[03:44:49] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 256 seconds)
[03:44:55] <lseactuary> thanks tpr  am checking
[03:45:17] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[03:45:31] *** Quits: Guest98 (~Guest98@192-222-180-235.qc.cable.ebox.net) (Quit: Client closed)
[03:45:34] *** Joins: Elodin (~weechat@user/elodin)
[03:45:41] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[03:46:03] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[03:47:35] *** Joins: jazzy (~jaziz@user/jaziz)
[03:47:48] *** gentooclimax is now known as climax
[03:48:02] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[03:48:25] *** Joins: idiocrash (~textual@191.101.132.96)
[03:49:12] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:8518:7189:4482:91c6)
[03:49:37] *** Quits: julia (~quassel@user/julia) (Ping timeout: 240 seconds)
[03:50:02] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[03:50:38] *** climax is now known as gentooclimax
[03:50:57] <funhouse> does anyone know where to find it for centos?
[03:51:19] *** Quits: AkechiShiro (~licht@user/akechishiro) (Ping timeout: 250 seconds)
[03:53:18] *** Joins: AkechiShiro (~licht@user/akechishiro)
[03:53:41] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[03:54:17] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[03:57:31] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[03:57:49] <lseactuary> trp - even with nulls, shouldn't the loop continue?
[03:57:59] <lseactuary> i should remove the nulls from the df?
[03:58:55] *** Joins: hqdruxn08__ (~hqdruxn08@user/hqdruxn08)
[04:02:19] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:02:48] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a) (Quit: Client closed)
[04:03:10] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 256 seconds)
[04:03:38] <johnkeats7> not exactly on topic but any suggestions on what should i read if i wanna know how sql works internally?
[04:04:11] <bjs> monkeyPlus: well that's a lot of looping
[04:04:47] *** Quits: Vornicus (~Vornicus@cpe-23-243-151-111.socal.res.rr.com) (Read error: Connection reset by peer)
[04:04:50] <monkeyPlus> bjs, 1 million?? 1 million instructions?!
[04:05:00] <bjs> monkeyPlus: "instructions"? you're doing a whole print() in there
[04:05:06] <monkeyPlus> oh ok
[04:05:10] <monkeyPlus> yes that slows it
[04:05:26] <monkeyPlus> but is in fact many cyclesa?!
[04:05:30] <bjs> monkeyPlus: you're converting numbers to strings (slow), then printing to the screen (slow)
[04:05:41] <monkeyPlus> oh
[04:05:53] <bjs> monkeyPlus: yes, i have no idea how many cycles a Python print() will take, but probably .. millions? idk
[04:06:08] <monkeyPlus> what about complex projects?
[04:06:33] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a)
[04:07:11] <bjs> monkeyPlus: complex projects don't try do millions of prints like this
[04:07:47] <monkeyPlus> yeah, but there isnt other instructions that are slower than print, and require speed
[04:08:01] *** Joins: MercilessDeth (~brad@136.49.59.177)
[04:08:17] <bjs> monkeyPlus: print isn't an instruction,  it's a Python function.  and a relatively big and complicated one
[04:08:25] <monkeyPlus> i see
[04:08:51] <monkeyPlus> so..for example you want to debug a function with cycles
[04:08:57] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:08:59] <monkeyPlus> and use print
[04:09:01] <bjs> monkeyPlus: with cycles?
[04:09:04] <monkeyPlus> yeah
[04:09:07] <bjs> What do you mean
[04:09:11] <monkeyPlus> like to check for cycle correctness
[04:09:17] <bjs> monkeyPlus: I'm not sure what you mean
[04:09:20] <bjs> what is "cycle correctness"
[04:09:21] <monkeyPlus> like checking variables
[04:09:26] <monkeyPlus> check indices
[04:09:27] <bjs> checking them for what?
[04:09:35] <monkeyPlus> check for varaible values
[04:09:36] <bjs> I really don't know what you're trying to ask
[04:09:42] <bjs> monkeyPlus: check them... for what?
[04:09:54] <monkeyPlus> if we get runtime errors..to debug
[04:10:06] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:98d9:bfa8:4e6:d50f)
[04:10:16] <bjs> monkeyPlus: you're asking about adding print()s to debug things?
[04:10:17] <monkeyPlus> i know there are debuggers..but i use prints
[04:10:20] <monkeyPlus> yeah
[04:10:32] <bjs> monkeyPlus: well you can do that, but putting it in a tight nested loop is probably a bad idea
[04:10:37] <monkeyPlus> it takes me 5 secs to type print, isntead of debugger
[04:10:51] <bjs> you can't read a million printed lines anyway
[04:10:55] <monkeyPlus> bjs, do you use debugger?
[04:11:03] <bjs> monkeyPlus: yes, but I also use print
[04:11:09] <monkeyPlus> ok
[04:11:12] <sco1> Also, why would one care about performance while debugging?
[04:11:13] <bjs> sometimes you need both, print/logging to find where to aim the debugger
[04:11:17] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:11a8:b622:801:adca) (Ping timeout: 240 seconds)
[04:11:36] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[04:11:37] <monkeyPlus> just an example, in case a print must be in a very large cycle
[04:11:46] <monkeyPlus> when i meant print i mean other functions as well
[04:11:47] <bjs> sco1: well if you're putting a print like monkeyPlus is doing here, you might turn a calculation that goes wrong in just a minute or two into one that will take literally years before it gets to the failure
[04:12:36] *** Joins: Elodin (~weechat@user/elodin)
[04:12:42] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a) (Quit: Client closed)
[04:12:54] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[04:12:56] <bjs> monkeyPlus: putting prints or logging things in your code when/for debugging is good,  you just want to make sure you don't get too much output.  Both because printing is slow and because too many lines of output is not readable by a human and quite often you're not sure what you're searching for in the log anyway
[04:13:00] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[04:13:31] <bjs> monkeyPlus: debuggers can be nice because you can begin debugging when the exception happens
[04:13:38] <bjs> and then work backwards from there as well
[04:13:54] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[04:14:02] *** Quits: ndim (hun@moooo.n-dimensional.de) (Ping timeout: 240 seconds)
[04:14:05] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[04:14:38] <monkeyPlus> i wonder if the printf function in c, is faster.. :/
[04:14:43] <novapy> How would I go about making a application that i can install wih pip?
[04:14:48] *** Joins: Wulf (~Wulf@user/wulf)
[04:14:56] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:15:12] <sco1> https://packaging.python.org/en/latest/ might be a good place to start
[04:15:42] <bjs> monkeyPlus: yes it will be, much much faster.
[04:15:53] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a)
[04:17:25] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[04:17:37] *** Joins: kaiseisei (~Thunderbi@183.191.221.65)
[04:17:48] <bjs> monkeyPlus: it's (A) not dealing with Python objects and all the work the Python interpreter is doing (assuming you aren't using PyPy) and (B) doesn't do as much work as Python's print().
[04:18:07] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a) (Client Quit)
[04:18:24] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:18:35] <bjs> monkeyPlus: either way, you wouldn't want to output millions of lines of unstructured logs because even if it was fast you *couldnt read it* :P
[04:18:46] <bjs> so Python isn't going to care about improving the performance of this
[04:18:48] <Yhg1s> However, printf() in C is *still* a very, very slow function.
[04:18:52] <Yhg1s> The I/O is what makes it very slow.
[04:19:08] <bjs> Even the speediest C program gets killed if you stick some printfs in there
[04:19:56] <monkeyPlus> oh man im baggining my head against the wall..cant figure why my code is slow
[04:20:17] <sco1> https://docs.python.org/3/library/profile.html
[04:20:26] <bjs> monkeyPlus: Python also has profilers, which tell you where the time was spent.
[04:20:34] <bjs> monkeyPlus: but if you mean the program earlier, it is the print()s yeah
[04:20:42] <monkeyPlus> :/
[04:20:45] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:20:53] <monkeyPlus> thks for link
[04:21:14] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:22:00] *** Quits: litharge (litharge@libera/bot/litharge) (Remote host closed the connection)
[04:23:56] *** Joins: litharge (litharge@libera/bot/litharge)
[04:23:57] *** ChanServ sets mode: +o litharge
[04:24:08] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:24:26] *** Quits: grimvar (~grimvar@i5C75FE7D.versanet.de) (Ping timeout: 268 seconds)
[04:25:02] *** Joins: Forty-Bot (~kvirc@pool-108-18-137-133.washdc.fios.verizon.net)
[04:25:14] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[04:25:32] *** Joins: grimvar (~grimvar@i5C75FEEF.versanet.de)
[04:25:50] *** Quits: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:25:50] *** Quits: Spunk (~SioUx@user/spunk) (Ping timeout: 256 seconds)
[04:26:51] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[04:26:58] *** Quits: ouestbillie (~gallup@185.195.233.151) (Ping timeout: 256 seconds)
[04:27:09] *** Joins: Barones (~Barones@user/Barones)
[04:28:28] *** Joins: Z-cat (~Z-cat@user/z-cat)
[04:28:38] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[04:28:43] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:28:57] *** Quits: Barones (~Barones@user/Barones) (Client Quit)
[04:29:55] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[04:31:54] *** gentooclimax is now known as climax
[04:32:01] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:e9cd:feb6:68fd:12df) (Quit: Konversation terminated!)
[04:32:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[04:33:41] *** Joins: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi)
[04:34:27] *** Joins: Elodin (~weechat@user/elodin)
[04:34:48] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:35:12] *** Quits: Elodin (~weechat@user/elodin) (Client Quit)
[04:35:23] *** Joins: Elodin (~weechat@user/elodin)
[04:36:05] *** Joins: Fohsap_ (~Muimi@175.170.14.166)
[04:37:21] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[04:37:27] *** Joins: justm33_ (~Username@84-84-41-7.fixed.kpn.net)
[04:37:44] *** Quits: Fohsap (~Muimi@113.226.206.208) (Ping timeout: 256 seconds)
[04:37:51] *** Fohsap_ is now known as Fohsap
[04:38:25] *** climax is now known as gentooclimax
[04:38:32] *** Quits: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[04:38:52] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[04:39:14] <c4017w_> Why is this not valid???
[04:39:16] <c4017w_> def a(param1=1, param2=1):
[04:39:16] <c4017w_>     def b():
[04:39:16] <c4017w_>         print(param1)
[04:39:16] <c4017w_>         param2 -= 1
[04:39:51] *** Quits: justm33 (~Username@84-84-41-7.fixed.kpn.net) (Ping timeout: 268 seconds)
[04:39:51] <LDerJim> -=
[04:40:06] *** Quits: idiocrash (~textual@191.101.132.96) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:40:06] <phy1729> What's the error?
[04:40:06] <c4017w_> but why can't I use param2 inside the inner func?
[04:41:02] <c4017w_> local variable 'param2' referenced before assignment
[04:41:44] <nedbat> c4017w_: assigning to param2 makes it local to b.
[04:41:52] <nedbat> c4017w_: put "nonlocal param2" inside b
[04:42:06] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:42:23] <c4017w_> nedbat, you're a magician
[04:42:26] <c4017w_> thank you
[04:42:31] <nedbat> c4017w_: any time
[04:43:39] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[04:43:58] *** Quits: mattfoxxx (~mattfoxxx@200116b822bc0200488a33089d12babe.dip.versatel-1u1.de) (Quit: WeeChat 3.4)
[04:44:03] *** Joins: Elodin (~weechat@user/elodin)
[04:46:13] *** Joins: portalrat (~portalrat@user/portalrat)
[04:46:48] *** Quits: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 256 seconds)
[04:47:22] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:4c0a:4e68:6f7f:23ed)
[04:47:50] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[04:47:58] *** Joins: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch)
[04:48:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:48:53] *** Joins: dbbr__ (~dbbr___@2804:5f80:70a0:3700:2045:891:e5c3:a307)
[04:49:24] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[04:50:18] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:51:53] <monkeyPlus> turns out i had a bug...
[04:51:58] <monkeyPlus> it was impossible to be so slow :)
[04:52:31] *** zmotaj_ is now known as zmotaj
[04:52:32] *** Quits: zmotaj (~zmotaj@86.61.81.185) (Changing host)
[04:52:32] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[04:52:48] <foo> Is there a "that's too deep" python principle? eg. myapp/project/skills/communication/services/communication_service.py -> is this too much? Is there a best practice here on how deep to go with folders?
[04:53:31] <sco1> Depends on your line length :)
[04:54:25] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:54:37] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[04:55:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:55:52] <parv> ... seems to have passed tolerance too. And that is all that matters ... unless you would be more inclined /now/ to make an alias of the module.
[04:56:23] <parv> s/(passed) (tolerance)/$1 personal $2/
[04:56:26] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[04:57:32] *** Quits: dbbr__ (~dbbr___@2804:5f80:70a0:3700:2045:891:e5c3:a307) (Ping timeout: 240 seconds)
[04:57:47] *** Joins: Barones (~Barones@user/Barones)
[05:01:13] *** Joins: Pandadub (~Barones@user/Barones)
[05:01:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[05:01:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:02:33] *** Joins: jazzy (~jaziz@user/jaziz)
[05:02:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:03:00] *** Quits: Barones (~Barones@user/Barones) (Read error: Connection reset by peer)
[05:03:12] *** Quits: Pandadub (~Barones@user/Barones) (Read error: Connection reset by peer)
[05:03:25] <whatsupdoc> How do you access items in Namespace()?
[05:03:39] *** Joins: Barones (~Barones@user/Barones)
[05:03:39] <parv> Context?
[05:03:47] <whatsupdoc> argsparse lol
[05:03:52] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[05:04:13] <whatsupdoc> Namespace(command='search', from=None, tag=None, task=[], to=None, today=True)
[05:04:36] <whatsupdoc> I try accessing from by using dot notation and it doesn't work
[05:05:16] *** Joins: minip (~minip@user/minip)
[05:05:20] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[05:06:14] *** Joins: fukuda1 (~fukuda@200-207-99-165.dsl.telesp.net.br)
[05:06:18] *** Quits: fukuda (~fukuda@2804:431:c7f5:a3c3:2de6:51f5:697:b187) (Ping timeout: 250 seconds)
[05:06:33] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:06:48] <Repiphany> whatsupdoc: `args.today` etc should work (if you assign the namespace to args or whatever else)
[05:07:07] <whatsupdoc> args.from doesn't work, idk whh
[05:07:10] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[05:08:03] <parv> I use vars() over parse_args (or parse_known_args) function(s) value to get a dict
[05:08:09] <whatsupdoc> SyntaxError: invalid syntax
[05:08:10] <Repiphany> from is a keyword in python
[05:08:21] <Repiphany> Need to change it to from_ or something
[05:08:41] <Repiphany> dest = 'from_'
[05:09:18] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a)
[05:09:23] <whatsupdoc> omg thank you
[05:09:27] <lseactuary> thanks for the tip - it worked :)
[05:09:37] <whatsupdoc> Why is from a keyword, so weird
[05:09:49] *** Quits: funhouse (~funhouse@user/funhouse) (Ping timeout: 256 seconds)
[05:09:51] <Repiphany> from ... import blah
[05:12:18] *** Quits: dsrt^ (~dsrt@50.231.5.242) (Ping timeout: 256 seconds)
[05:12:18] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[05:12:19] <whatsupdoc> oh
[05:12:19] <whatsupdoc> lol
[05:12:20] <whatsupdoc> ok
[05:13:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:13:16] *** Joins: marshall (~mmm@197.211.63.25)
[05:14:13] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[05:14:57] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[05:14:57] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:9def:475b:fceb:fed9)
[05:15:40] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Quit: Bye!)
[05:15:42] *** Quits: Haxxa (~Haxxa@125-253-30-218.ip4.superloop.com) (Ping timeout: 256 seconds)
[05:16:24] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a) (Quit: Client closed)
[05:16:43] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[05:17:01] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Client Quit)
[05:17:05] <SnoopJ> whatsupdoc, you can do `getattr(yournamespace, "from")` but probably you just want to rename it with `dest="from_"` or somesuch to avoid the collision.
[05:17:34] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[05:17:48] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Client Quit)
[05:17:53] <whatsupdoc> Yea, that's what I did. I used from..import earlier on lol
[05:18:19] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[05:19:21] *** Joins: Lenkov45 (~Lenkov45@45.133.193.26)
[05:20:48] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 256 seconds)
[05:21:20] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:21:34] *** Joins: Spunk (~SioUx@user/spunk)
[05:22:30] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[05:22:46] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[05:24:09] *** Joins: sudomann (~sudomann@98.219.211.182)
[05:24:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:25:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:25:51] *** gentooclimax is now known as climax
[05:26:31] *** Quits: parv (~quass@user/parv) (Quit: parv)
[05:28:44] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[05:28:51] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::40) (Quit: Konversation terminated!)
[05:29:33] *** Joins: frost (~frost@user/frost)
[05:29:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:29:52] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[05:30:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:31] *** Joins: Elodin (~weechat@user/elodin)
[05:31:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:32:43] <seanicus> Hello.  I made a server using the asyncssh library.  Is there a way I can get keypresses such as up/left/down/right arrows?
[05:32:48] *** Joins: vlm (~vlm@user/vlm)
[05:33:00] *** Joins: sudomann (~sudomann@98.219.211.182)
[05:33:23] <seanicus> it's unclear to me if this is necessarily a client-side thing (like the client has to send those keypresses through) or if there's a specific method that will tell the client to do such.
[05:33:37] *** climax is now known as gentooclimax
[05:34:28] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[05:34:58] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[05:36:06] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:e502:a244:bdcc:aece)
[05:36:06] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:e502:a244:bdcc:aece) (Changing host)
[05:36:06] *** Joins: skapata (~Skapata@user/skapata)
[05:36:12] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[05:36:17] *** Quits: MrFantastik (~f@2607:f598:bbda:2c0:c0f7:afbe:3df1:ebb0) (Quit: Leaving)
[05:37:05] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:41:40] *** Quits: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de) (Read error: Connection reset by peer)
[05:42:04] *** Joins: bluedust (~bluedust@103.161.144.140)
[05:42:48] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[05:44:04] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:44:20] *** Joins: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de)
[05:46:17] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[05:46:17] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[05:46:38] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:49:41] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:51:24] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[05:51:47] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[05:51:54] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[05:52:40] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:8518:7189:4482:91c6) (Ping timeout: 250 seconds)
[05:53:00] *** Joins: zaquest (~notzaques@5.130.79.72)
[05:54:48] *** Quits: therufuser (~therufuse@p5b02e34f.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:54:48] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 256 seconds)
[05:55:17] *** Joins: maryo_87 (~Maryo@user/maryo)
[05:55:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:55:56] *** Quits: fukuda1 (~fukuda@200-207-99-165.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[05:56:40] *** Joins: therufuser (~therufuse@p5b02e2b2.dip0.t-ipconnect.de)
[05:58:12] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[05:58:17] *** Quits: Schrostfutz (~Schrostfu@55d4f092.access.ecotel.net) (Ping timeout: 240 seconds)
[05:58:17] *** Quits: M3troidman (~buttler@196.196.203.100) (Ping timeout: 240 seconds)
[05:59:15] *** Joins: M3troidman (~buttler@196.196.203.100)
[06:00:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:00:13] *** Quits: marshall (~mmm@197.211.63.25) (Remote host closed the connection)
[06:00:58] *** Joins: marshall (~mmm@197.211.63.25)
[06:01:12] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[06:01:42] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:02:25] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[06:02:39] *** Quits: marshall (~mmm@197.211.63.25) (Remote host closed the connection)
[06:02:59] *** Joins: Elodin (~weechat@user/elodin)
[06:03:15] *** Joins: marshall (~mmm@197.211.63.25)
[06:05:19] *** Quits: marshall (~mmm@197.211.63.25) (Remote host closed the connection)
[06:05:34] *** Quits: knkay (~knkay@213.190.30.120) (Ping timeout: 268 seconds)
[06:05:42] *** Quits: Pixi (~Pixi@user/pixi) (Read error: Connection reset by peer)
[06:06:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:06:07] *** Joins: Pixi (~Pixi@user/pixi)
[06:06:14] *** Joins: marshall (~mmm@197.211.63.25)
[06:06:55] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:07:25] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: Ping timeout (120 seconds))
[06:07:47] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[06:07:52] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[06:08:02] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 268 seconds)
[06:08:02] *** Quits: nbin (~nbin@user/nbin) (Ping timeout: 268 seconds)
[06:08:08] *** Joins: nbin_ (~nbin@user/nbin)
[06:08:16] *** Joins: Elodin (~weechat@user/elodin)
[06:08:19] *** Joins: taeaad_ (~taeaad@user/taeaad)
[06:08:32] *** Quits: taeaad (~taeaad@user/taeaad) (Ping timeout: 240 seconds)
[06:08:43] *** Joins: abc_- (~abc@user/abc)
[06:08:45] *** Joins: qpdb (~qpdb@user/qpdb)
[06:09:11] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[06:09:16] *** Quits: zwindl (~abc@user/abc) (Ping timeout: 268 seconds)
[06:09:53] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[06:10:18] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[06:10:36] *** Joins: knkay (~knkay@213.190.30.120)
[06:11:02] *** Quits: marshall (~mmm@197.211.63.25) (Remote host closed the connection)
[06:11:39] *** Joins: marshall (~mmm@197.211.63.25)
[06:13:44] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[06:14:04] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 256 seconds)
[06:14:04] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[06:14:44] *** Joins: Elodin (~weechat@user/elodin)
[06:14:47] *** Quits: marshall (~mmm@197.211.63.25) (Remote host closed the connection)
[06:16:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[06:18:16] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[06:19:06] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[06:19:17] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[06:19:56] *** Joins: sudomann (~sudomann@98.219.211.182)
[06:20:30] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:2891:6bd5:ed2a:ab88) (Remote host closed the connection)
[06:20:35] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:21:19] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[06:21:20] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[06:21:32] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:21:40] *** Joins: thiras (~thiras@user/thiras)
[06:21:49] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:22:43] *** Joins: califax- (~califax@user/califx)
[06:23:08] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[06:23:11] *** Quits: tristan_ (~tristan@223.62.163.67) (Ping timeout: 250 seconds)
[06:23:34] *** Joins: d1cor (~diego@179.63.242.120)
[06:24:57] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:24:58] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:b89f:3526:404:e4fa)
[06:25:04] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:25:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:25:36] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[06:25:36] *** brabrax_ is now known as brabrax
[06:25:54] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[06:25:54] *** califax- is now known as califax
[06:26:01] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[06:26:18] *** Joins: Guest98 (~Guest98@192-222-180-235.qc.cable.ebox.net)
[06:26:44] *** Quits: oscurochu (~oscurochu@2603:9000:c202:1034:bdc2:5ae0:346e:f66f) (Ping timeout: 252 seconds)
[06:26:56] *** Joins: gtz_ (~gtz@46.251.99.222)
[06:27:32] *** Joins: frost (~frost@user/frost)
[06:28:48] *** Quits: gtz (~gtz@46.251.99.222) (Ping timeout: 256 seconds)
[06:29:34] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:bdc2:5ae0:346e:f66f)
[06:29:56] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:30:02] <Guest98> Hi, Trying to use Pydantic with bool param. When I try to override it with env var (Windows) it doesn't work. Anything special to know? I tried many format =True =1 ="1" = "True" ... I have another one as str, and it works perfectly!
[06:30:51] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[06:31:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:34:16] *** Quits: vsantana (~Thunderbi@ec2-54-159-73-164.compute-1.amazonaws.com) (Ping timeout: 250 seconds)
[06:34:21] *** Joins: gtz (~gtz@46.251.99.222)
[06:35:33] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:35:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:36:52] *** Quits: gtz_ (~gtz@46.251.99.222) (Ping timeout: 250 seconds)
[06:37:44] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[06:38:28] <Guest98> Sorry, I was wrong, my str don't work too. I set it in PyCharm / RunConfiguration / Environment variables
[06:39:41] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[06:39:52] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:41:09] *** Joins: audio (~audio@user/audio)
[06:42:24] *** Quits: botfather (~botfather@shell1.dds.nl) (Quit: -)
[06:42:58] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:42:58] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:42:58] *** finn_elija is now known as FinnElija
[06:43:33] <aphysically> I found a bug in the dataclasses test suite
[06:43:43] <aphysically> and made a faux pas on bpo
[06:43:54] <aphysically> 😔
[06:44:26] *** botfathe1 is now known as botfather
[06:44:33] <Repiphany> ls
[06:44:57] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48b8it3nu0px1sz.ipv6.telus.net)
[06:45:39] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:46:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[06:48:51] *** Quits: Omega037-B (~Omega037@047-233-057-109.res.spectrum.com) ()
[06:49:05] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:49:21] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[06:50:18] *** Joins: sudomann (~sudomann@98.219.211.182)
[06:50:25] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[06:50:39] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[06:51:28] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48b8it3nu0px1sz.ipv6.telus.net) (Remote host closed the connection)
[06:52:31] *** Joins: KombuchaKip (~kip@192.252.230.5)
[06:54:21] *** Joins: hanzo (uid532183@user/hanzo)
[06:56:02] *** Joins: psychothan (~psychotha@cpe-72-230-110-138.twcny.res.rr.com)
[06:57:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:57:22] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[06:57:34] *** Joins: tijuco (~tijuco@user/tijuco)
[06:58:18] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:58:38] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Ping timeout: 252 seconds)
[07:00:06] *** Joins: Guest60 (~Guest60@cpe-72-230-110-138.twcny.res.rr.com)
[07:00:53] *** Quits: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se) (Read error: Connection reset by peer)
[07:01:04] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 268 seconds)
[07:01:24] *** Joins: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se)
[07:02:01] *** Quits: audio (~audio@user/audio) (Ping timeout: 256 seconds)
[07:02:48] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 256 seconds)
[07:03:11] *** Quits: Guest60 (~Guest60@cpe-72-230-110-138.twcny.res.rr.com) (Client Quit)
[07:03:12] *** Joins: tijuco (~tijuco@user/tijuco)
[07:03:14] *** Quits: psychothan (~psychotha@cpe-72-230-110-138.twcny.res.rr.com) (Remote host closed the connection)
[07:03:35] <llanhmod> seanicus: Have you checked the docs on using AsyncSSH? Seems they have some channel read methods that may be useful to you.
[07:04:34] <llanhmod> or maybe the line editing even
[07:04:44] <seanicus> llanhmod: Yes, I have, and it's difficult for me to understand and the best i can do is the line editing
[07:04:45] *** Joins: EsoAlgo (~EsoAlgo@152.70.142.52)
[07:04:54] <seanicus> But this doesn't fulfill my goals.
[07:05:13] <seanicus> I'm trying to move a little character around.  Right now I'm using WASD but it'd be nice if I had the actual arrows.
[07:05:54] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[07:05:55] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[07:06:12] <seanicus> Theoretically I could register *every single key* with the line editing, but that doesn't seem like how line editing should be used, and seems like it'll be liable to break with an update.
[07:06:39] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[07:06:45] *** Joins: frost (~frost@user/frost)
[07:06:46] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[07:07:01] *** Quits: michagogo (uid14316@user/michagogo) (Quit: Connection closed for inactivity)
[07:07:15] <llanhmod> Not sure how it would do that by itself. I'm not familiar with AsyncSSH honestly. Does the feature you require work anything like the sendKeys() in Django?
[07:07:15] *** Joins: on^ (~on@50.231.5.242)
[07:07:20] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:07:20] *** Joins: adeliktas6 (~adeliktas@i59F4DEFF.versanet.de)
[07:07:56] <seanicus> llanhmod: unsure, sorry.
[07:08:16] *** Joins: Elodin (~weechat@user/elodin)
[07:08:29] <seanicus> I could also get it to accept two characters so it'd see a "
[07:08:38] <seanicus> "[A" and be like "up, that's an up arrow"
[07:08:45] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:4844:d1b4:fa72:85a4) (Quit: Ping timeout (120 seconds))
[07:08:56] *** Quits: adeliktas (~adeliktas@i59F4A074.versanet.de) (Ping timeout: 250 seconds)
[07:08:56] *** adeliktas6 is now known as adeliktas
[07:08:59] <seanicus> What do you even call that string?  [A for up, [B for down arrow, etc.
[07:09:06] *** Joins: Vonter (~Vonter@user/vonter)
[07:09:09] *** Joins: sudomann (~sudomann@98.219.211.182)
[07:11:44] <llanhmod> seanicus: keybindings?
[07:11:52] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[07:12:02] <llanhmod> or keymapping
[07:12:37] <seanicus> No, that's not keybinding.  I'm talking about representing the up arrow with the string "[A"
[07:13:17] *** Quits: Lenkov45 (~Lenkov45@45.133.193.26) (Ping timeout: 240 seconds)
[07:13:17] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[07:13:48] <Repiphany> seanicus: https://en.wikipedia.org/wiki/ANSI_escape_code
[07:13:50] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:13:51] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Remote host closed the connection)
[07:14:34] *** Quits: maryo_87 (~Maryo@user/maryo) (Ping timeout: 250 seconds)
[07:16:53] <llanhmod> ah, escape sequences
[07:17:41] * llanhmod was never good at shell scripting anyway
[07:17:52] *** Joins: Atque (~Atque@user/atque)
[07:18:37] *** Quits: strugee (~strugee@ool-4575d6b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[07:19:11] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[07:19:22] *** Joins: Haxxa (~Haxxa@125-253-30-155.ip4.superloop.com)
[07:19:36] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[07:19:51] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[07:20:46] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:5773:16:bf62:61bf) (Remote host closed the connection)
[07:21:03] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[07:21:09] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[07:21:56] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:22:20] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:23:25] *** Joins: strugee (~strugee@ool-4575d6b1.dyn.optonline.net)
[07:25:50] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[07:26:34] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[07:27:12] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:27:37] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[07:29:42] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:30:07] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:08] *** Joins: Elodin (~weechat@user/elodin)
[07:30:13] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:31:15] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[07:31:28] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[07:31:42] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:32:21] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:14] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:43] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[07:40:07] <monkeyPlus> sorry for a possible dumb question. When is said to multiply strings as numbers, why do i need a custom algorithm?? why cant i just convert the string, like "123", with int("123") an multiply by there. ISnt the same thing?
[07:40:46] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:40:47] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[07:40:55] <SnoopJ> monkeyPlus, it isn't clear what you're asking.
[07:40:59] *** Joins: sudomann (~sudomann@98.219.211.182)
[07:41:31] <monkeyPlus> like, for example , if i want to save memory, and instead of using the normal operators on numbers, use numbers represented as strings. Why is this used?
[07:42:04] <monkeyPlus> like "3" * "2" =  "6" ... but this is equal to 3*2= 6.... :/
[07:42:34] <llanhmod> seanicus: may be a better source (for specific descriptions)
[07:42:37] <llanhmod> https://man7.org/linux/man-pages/man4/console_codes.4.html
[07:42:51] <monkeyPlus> namely java uses BigInteger and strings
[07:43:06] *** Joins: bluedust (~bluedust@103.161.144.140)
[07:43:47] <seanicus> llanhmod: this looks like ansi escape codes, which is not what im referring to
[07:43:52] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[07:43:52] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[07:43:52] *** Joins: JordiGH (~jordi@user/jordigh)
[07:44:57] <seanicus> I am talking about what you see if you, say, did a time.sleep(1000) in a live python interpreter on the terminal, and just press the arrow keys
[07:45:18] <seanicus> it outputs a string, like this: ^[[A^[[A^[[B^[[B^[[D^[[D^[[C^[[C^[[C^[[D^[[A^[[C^[[D
[07:45:44] <seanicus> ansi codes do things like change colors, scroll, move a cursor around, etc, on a terminal.
[07:45:57] <llanhmod> oh...why would you want that? I don't know what that would be called.
[07:46:21] <seanicus> Why would I want what?  ansi codes?
[07:46:26] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[07:47:17] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[07:48:09] <llanhmod> those aren't still ansi codes?
[07:48:33] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[07:48:47] <ssbr> monkeyPlus: are you asking why Java-like BigInteger types use custom integer representations, which are strings of digits under the hood?
[07:48:48] *** Quits: BlankGT (uid537360@id-537360.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:49:00] <monkeyPlus> yes
[07:49:07] <seanicus> Well, maybe they are?  That's a good point
[07:49:08] <ssbr> monkeyPlus: well, how else would you represent it?
[07:49:16] <monkeyPlus> normal number
[07:49:24] <ssbr> monkeyPlus: right, but how is a "normal number" represented?
[07:49:38] <seanicus> i guess i was thrown off because there arent escape characters when i send it through asyncssh, but they are there withthe python sleep() test.
[07:49:39] <monkeyPlus> like use more bytes..like 5 bytes...a string of "12312" that's 5 bytes
[07:49:46] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:8518:7189:4482:91c6)
[07:49:48] <monkeyPlus> 12312 is two bytes...
[07:50:19] <ssbr> monkeyPlus: BigNum-like classes don't represent the number 12312 using 5 bytes -- they'll probably use a normal integer size of bytes. I think Python's digits are sequences of 30 bits or something like that.
[07:50:20] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[07:50:20] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[07:50:20] *** Joins: hams (~hams@user/hams)
[07:50:28] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:50:44] <ssbr> scratch that, I'm just vaguely remembering a mailing list thread
[07:51:00] <monkeyPlus> i see
[07:51:00] <monkeyPlus> ok
[07:51:14] <whatsupdoc> Why does cur.fetchall() not work with an UPDATE SQL command?
[07:51:24] <seanicus> llanhmod: ah, im a bit foolish.  it is also sending the escape character, but its invisible.  still, this solution seems suboptimal to me but its probably what ill go with ultimately.
[07:51:24] <ssbr> monkeyPlus: To try to directly answer your question, a normal integer representation in computers is a sequence of 1-bit digits. BigNum types use much larger numbers of bits per digit for efficiency, because they're implemented in software, not hardware.
[07:51:54] <whatsupdoc> Anyway to use sqlite3 and get an array of values that were updated?
[07:51:55] <monkeyPlus> oh
[07:51:59] <ssbr> in software, it's actually really slow to go 1 bit at a time -- you'd actually be faster going 8 bits at a time, at least. Potentially faster still going 16, 32, etc., due to vectorized CPU instructions
[07:52:18] <monkeyPlus> ok
[07:52:19] <monkeyPlus> thks
[07:52:32] <ssbr> so while computers use binary (base 2), and humans use base 10, BigNum types will use like base 256 or something ridiculous
[07:52:40] <ssbr> (potentially much larger than that)
[07:53:05] <ssbr> np
[07:53:08] <SnoopJ> monkeyPlus, bytes are a sequence of numbers. Strings are interpreting a sequence of bytes as text, but there is not a unique interpretation.
[07:53:13] <SnoopJ> (far from it!)
[07:53:25] *** Quits: johnkeats7 (~johnkeats@186.220.240.39) (Read error: Connection reset by peer)
[07:55:18] <SnoopJ> "12312" could take up substantially more than 5 bytes in some interpretations. In UTF-16 it's 12 bytes!
[07:55:25] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[07:55:27] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[07:55:43] <ssbr> (incidentally, Python integers are actually bignums :P)
[07:56:26] <SnoopJ> which is why have such funny scaling behavior
[07:56:46] <SnoopJ> scaling of object size, that is
[07:57:03] *** Joins: Elodin (~weechat@user/elodin)
[07:59:38] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 250 seconds)
[08:00:30] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[08:01:10] *** Quits: sreve (~quassel@p4ff44e89.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[08:01:13] *** Joins: walterwhip (~www@user/walterwhip)
[08:01:17] <whatsupdoc> Anyone know how to get updated rows in sqlite3 using python after a cur.exectute() command?
[08:01:26] *** Joins: sreve (~quassel@p4ff44dfd.dip0.t-ipconnect.de)
[08:01:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:05:59] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:c644:f24f:6572:b43d)
[08:07:28] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[08:08:17] *** Quits: oscurochu (~oscurochu@2603:9000:c202:1034:bdc2:5ae0:346e:f66f) (Ping timeout: 240 seconds)
[08:08:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:09:36] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[08:09:55] *** Joins: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi)
[08:12:51] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[08:12:51] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[08:12:51] *** Joins: JordiGH (~jordi@user/jordigh)
[08:12:56] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:bdc2:5ae0:346e:f66f)
[08:13:43] *** Joins: pudup (~pudup@180.148.44.210)
[08:13:50] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 268 seconds)
[08:13:57] *** Quits: pudup (~pudup@180.148.44.210) (Client Quit)
[08:15:04] *** Quits: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi) (Ping timeout: 268 seconds)
[08:17:50] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[08:19:10] *** Joins: sudomann (~sudomann@98.219.211.182)
[08:19:48] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[08:19:58] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:b89f:3526:404:e4fa) (Quit: I have gone to sleep. ZZZzzz…)
[08:20:52] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[08:21:05] *** Joins: tristan_ (~tristan@223.62.172.61)
[08:21:57] *** Quits: oscurochu (~oscurochu@2603:9000:c202:1034:bdc2:5ae0:346e:f66f) (Ping timeout: 240 seconds)
[08:22:35] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[08:22:49] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:23:28] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[08:25:25] *** Joins: Elodin (~weechat@user/elodin)
[08:25:54] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:26:15] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:26:30] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[08:29:22] *** Joins: epony (epony@user/epony)
[08:30:09] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[08:30:38] *** Joins: Elodin (~weechat@user/elodin)
[08:31:06] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[08:35:32] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[08:35:59] *** Joins: Elodin (~weechat@user/elodin)
[08:36:23] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:36:31] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:3d68:e938:5362:5275)
[08:37:02] *** Joins: sudomann (~sudomann@98.219.211.182)
[08:37:46] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[08:38:49] *** Joins: brookesy66 (~will@203.220.123.174)
[08:39:42] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[08:40:23] *** Quits: subopt (~subopt@2603-8081-2302-459a-086a-fa1d-b647-6aee.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:40:57] *** Quits: Shikadi (~Shikadi@50.125.190.237) (Ping timeout: 240 seconds)
[08:44:14] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:47:51] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 245 seconds)
[08:48:05] <monkeyPlus> ok...so now, im not doing any operations..im just iterating through lists...it is extremely slow
[08:48:40] *** Joins: idiocrash (~textual@191.101.132.147)
[08:49:09] <monkeyPlus> create the list is fast...but not traversing it
[08:49:51] <monkeyPlus> since the creation of a list is fast..shouldnt the iteration be fast as well?
[08:50:23] <BrenBarn> well, no, not necessarily
[08:51:42] <meejah> agronholm: latest cbor2 release shows as 5.4.2.post1 .. is that intentional? (the "post1" part)
[08:53:33] <monkeyPlus> ok..so i want to add two strings "123" + "123" and get "246" ...but i dont want to use int("123") because im dealing with large numbers, and is slow
[08:53:35] <SnoopJ> monkeyPlus, in Python each iteration of a loop involves a function call, so it can be slower than you might expect if you're used to loops in languages where there isn't the case
[08:53:37] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[08:53:40] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[08:54:09] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[08:54:14] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[08:54:20] *** Joins: jmd_ (~jmdaemon@user/jmdaemon)
[08:54:55] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - https://znc.in)
[08:55:03] <SnoopJ> there might be programming languages that let you do what you want to do with string literals, but Python is not that language, strings are defined so that the + operator performs concatenation.
[08:55:34] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[08:55:38] <monkeyPlus> i know
[08:56:08] *** Quits: gtz (~gtz@46.251.99.222) (Ping timeout: 256 seconds)
[08:56:49] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[08:56:50] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 250 seconds)
[08:57:22] <monkeyPlus> is there any library that i can use?
[08:57:56] <monkeyPlus> to get "246" from "123"+"123" for example?
[08:58:13] <BrenBarn> it's unlikely you'll find a solution that's quicker than converting them to ints
[08:58:30] *** Joins: vanessa (~annada@103.160.128.7)
[08:58:31] <BrenBarn> dare I ask why you're storing numbers as strings if you want to do numerical operations on them?
[08:58:40] <SnoopJ> ^
[08:58:52] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[08:59:20] <phy1729> You're not going to out perform a bignum library by using strings
[08:59:57] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[09:00:02] <Repiphany> Ints are already arbitrary precision too
[09:00:28] <monkeyPlus> isnt comparing large numbers, in string format, faster than arithmetic operations?!
[09:00:42] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 268 seconds)
[09:00:42] <monkeyPlus> compare two strings is faster right
[09:00:52] <tpr> https://bpa.st/UNOA any ideas why nbconvert is not finding the nbextensions template?
[09:00:56] <BrenBarn> comparing them how?
[09:01:05] <phy1729> Doubtful. For strings you have to get the length first.
[09:01:23] <monkeyPlus> like "246" == "123"+"123"
[09:01:28] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:02:08] <phy1729> Everything is just numbers to computers, so adding a layer of indirection through strings is unlikely to make things faster. There's always the timeit module to be sure.
[09:02:13] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:4c0a:4e68:6f7f:23ed) (Quit: Leaving)
[09:02:22] <Repiphany> `'123' < '24' # True`
[09:02:25] <SnoopJ> phy1729, well, that isn't much of a problem, it's stored on the object. But wanting the types to behave as if they were the same type is a pretty tall ask.
[09:02:28] <BrenBarn> tpr: it looks like there's a typo there because one says `template_path` and one says `template_paths`
[09:02:55] <monkeyPlus> like , i guess that python is "used" to compare strings for large strings..but not for numbers
[09:03:03] <BrenBarn> but if that stuff was done by jupyter/nbextensions then it would seem to be a bug in their code
[09:03:06] <monkeyPlus> so string would be faster
[09:03:13] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.4)
[09:03:16] <BrenBarn> no
[09:03:21] <SnoopJ> monkeyPlus, string comparison is for comparing strings. Integer comparison is for comparing integers. They don't compare the same way because they are not the same type.
[09:03:43] <BrenBarn> "246" == "123"+"123" will take much longer than 246==123+123
[09:03:49] *** Quits: tristan_ (~tristan@223.62.172.61) (Remote host closed the connection)
[09:04:00] <BrenBarn> the first will take infinite time because no matter how long you wait it will not equal that
[09:04:05] <BrenBarn> (if you're expecting to get True)
[09:04:14] <tpr> BrenBarn: you mean the "typo" in the exception message? I think that's intentional :p
[09:04:17] <monkeyPlus> that was an example..i meant add the strings not use concat operator
[09:04:18] *** Joins: tristan_ (~tristan@223.62.172.61)
[09:04:34] <SnoopJ> there is not a distinction between those two things in Python
[09:05:01] <BrenBarn> tpr: hmmm, it is?
[09:05:02] <monkeyPlus> but compare strings is faster that than big number comparison, i guess python has good support for strings operartions
[09:05:09] <monkeyPlus> like any other language
[09:05:29] <SnoopJ> monkeyPlus, can you give us an example of a language where "123" + "123" is "246" ?
[09:05:29] <BrenBarn> monkeyPlus: unfortunately most of what you're saying simply doesn't make any sense
[09:05:44] <monkeyPlus> that was an example
[09:05:54] * SnoopJ would appreciate an answer to the question
[09:06:15] *** Joins: gtz (~gtz@46.251.99.222)
[09:06:35] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[09:07:00] <monkeyPlus> like use a cycle, to parse the string, summing every digit
[09:07:05] <monkeyPlus> mmmm ok that i can do :)
[09:07:07] <monkeyPlus> hold on
[09:07:08] <monkeyPlus> thks
[09:07:18] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[09:07:38] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:98d9:bfa8:4e6:d50f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:07:39] <BrenBarn> sure, you can reimplement addition yourself and do your ersatz addition on strings, that will be way slower than just using ints
[09:07:44] *** Joins: sudomann (~sudomann@98.219.211.182)
[09:08:02] <phy1729> "12345678" == "12345678" takes about 70.5 nsec in timeit here; 12345678 == 12345678 takes about 69 nsec in timeit
[09:08:17] <monkeyPlus> phy1729, did you use large numbers?!
[09:08:38] <monkeyPlus> like isnt python oriented to reading text files?
[09:08:47] <BrenBarn> Python can do many things
[09:08:57] <monkeyPlus> instead read numbers...wouldnt that be slow?
[09:09:02] <phy1729> you're welcome to play with it yourself   python3 -m timeit  '1 == 1'     replace the expression with whatever you like
[09:09:10] *** Quits: idiocrash (~textual@191.101.132.147) (Ping timeout: 256 seconds)
[09:10:19] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[09:11:00] <tpr> BrenBarn: I think so at least, considering it's just the exception mesage
[09:11:17] *** Quits: oscurochu (~oscurochu@2603:9000:c202:1034:3d68:e938:5362:5275) (Ping timeout: 240 seconds)
[09:11:29] <monkeyPlus> ok thks gotta go
[09:11:30] <monkeyPlus> later
[09:11:34] *** Quits: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:98dc:2f18:f0d3:94b0) (Remote host closed the connection)
[09:11:56] *** Joins: idiocrash (~textual@191.101.132.175)
[09:13:22] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[09:13:36] <tpr> for some reason jupyter_core.paths.jupyter_path() is not returning that extra path :/
[09:13:45] <BrenBarn> I just mean that in the config json there's a key called `template_path` but there's a KeyError looking for `template_paths`
[09:14:03] <BrenBarn> but maybe those are actually different things
[09:15:12] *** Joins: _vanessa_ (~farawayas@103.160.128.7)
[09:16:17] *** Quits: idiocrash (~textual@191.101.132.175) (Ping timeout: 240 seconds)
[09:16:26] <BrenBarn> is it possible your versions of nbconvert and nbextensions are mismatched and the expected paths changed somehow
[09:16:38] <BrenBarn> +?
[09:16:45] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:bdc2:5ae0:346e:f66f)
[09:17:01] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[09:17:50] *** Joins: maryo_87 (~Maryo@user/maryo)
[09:18:02] *** Joins: _ev (ev@user/ev/x-8999918)
[09:18:06] <BrenBarn> I see this: https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/runtools/readme.html?highlight=templates_directory#internals
[09:18:32] <_ev> How do I properly pass in  request args here?:   https://bpa.st/AEOA
[09:18:42] *** kurisumakise is now known as kurisukurisukuri
[09:19:52] *** kurisukurisukuri is now known as kurisumakise
[09:19:53] *** kurisumakise is now known as kurisukurisukuri
[09:20:13] <tpr> BrenBarn: ah, I see. huh, renaming the config file item to paths stops erroring on that, but just fails to find the jinja2 template.. the link you gave is likely related, let's see :)
[09:20:44] *** Joins: fef (~thedawn@user/thedawn)
[09:20:59] <BrenBarn> I see the docs say that installing the extensions "attempts" to edit the config JSON to put the template path in, but maybe it's not succeeding for whatever reason
[09:21:06] <BrenBarn> _ev: what do you mean?  what are you trying?
[09:21:34] *** Joins: upsala (~zcb@185.213.155.232)
[09:21:50] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:22:24] <tpr> BrenBarn: I removed the file for testing, but that didn't help. rerunning the install will create the one but still say that it updated it
[09:22:40] *** Joins: audio (~audio@user/audio)
[09:22:53] *** kurisukurisukuri is now known as kurisumakise
[09:22:53] *** kurisumakise is now known as kurisukurisukuri
[09:23:18] <_ev> BrenBarn: I am unsure how use requests properly with serialization I suppose. New to this API stuff.
[09:23:19] <_ev> https://bpa.st/KNMA
[09:23:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:23:45] <_ev> Id like to get request data in the "perform_create" function
[09:24:26] <_ev> def perform_create(self,  serializer):    |   def perform_create(self, request, serializer):. Not sure where to set request arg to be accepted here
[09:24:46] <tpr> this is the trace I get if I rename the path inside the config: https://bpa.st/WMOA
[09:24:56] <_ev> Has to be in a post() perhaps?
[09:25:24] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:25:41] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[09:25:52] *** kurisukurisukuri is now known as kurisumakise
[09:25:53] *** kurisumakise is now known as kurisukurisukuri
[09:26:30] <tpr> hide_input_output.tpl is nowhere to be seen in my filesystem, but it could be that the doc is out-of-date
[09:26:57] <BrenBarn> _ev: are you using some kind of library here?
[09:27:24] *** Quits: analoq (~yashi@user/dies) (Read error: Connection reset by peer)
[09:27:25] *** Joins: dhellmann_ (~dhellmann@097-081-099-073.res.spectrum.com)
[09:27:31] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[09:27:45] *** Joins: mncheckm (~mncheck@193.224.205.254)
[09:27:45] *** Joins: justm33 (~Username@84-84-41-7.fixed.kpn.net)
[09:27:49] *** Joins: fstd_ (~fstd@xdsl-89-1-56-234.nc.de)
[09:27:50] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[09:27:56] *** Joins: lllh (~llh@198.48.244.21)
[09:28:00] *** Joins: bryce_ (~bryce@ool-457dd6ac.dyn.optonline.net)
[09:28:04] *** Joins: pyever___ (~pyeveryth@64-18-153-56.starry-inc.net)
[09:28:04] *** Joins: alex_ (~alex11@user/alex11)
[09:28:09] *** Joins: tracey (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[09:28:12] *** Joins: esv_ (~esv@74.124.178.154)
[09:28:20] *** Joins: zuQe89 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[09:28:26] *** Joins: jjasghar7 (~jjasghar@idlerpg/player/jjasghar)
[09:28:30] *** Joins: xakan7 (~xakan@pnmx.zdx.fr)
[09:28:30] *** Joins: Tatarize (~Tat@137-025-218-069.res.spectrum.com)
[09:28:30] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[09:28:32] *** Joins: greknod2821 (~grek@120.88.171.98)
[09:28:35] *** Quits: Cienisty (Cienisty@user/cienisty) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[09:28:36] *** Joins: blurry0 (xbaranov@lounge.fi.muni.cz)
[09:28:36] *** Joins: trashbird1 (~trashbird@user/trashbird)
[09:28:37] *** Joins: alexyov8 (~alexyov@79.124.0.2)
[09:28:37] *** Joins: Cienisty (Cienisty@user/cienisty)
[09:28:41] *** Joins: Phase6 (~phase@user/phase)
[09:28:48] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[09:28:50] *** Joins: EsoAlgo3 (~EsoAlgo@152.70.142.52)
[09:28:53] *** kurisukurisukuri is now known as kurisumakise
[09:28:53] *** kurisumakise is now known as kurisukurisukuri
[09:28:53] *** Joins: tristan__ (~tristan@223.62.172.61)
[09:28:56] <_ev> BrenBarn:  Ah yes, django_rest_framework. I see now.
[09:29:07] *** Joins: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi)
[09:29:10] *** Joins: jayray_ (~jayray@user/jayray)
[09:29:15] *** Joins: jrjsmrtn_ (~jrjsmrtn@ip-212-239-244-124.dsl.scarlet.be)
[09:29:31] *** Joins: lithamme- (~lithammer@2a02:2770::21a:4aff:fe88:c18d)
[09:29:41] *** Joins: Bitflux (~byte@byteflux.net)
[09:29:42] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:29:53] *** Joins: euidzero_ (~euidzero@158.101.10.150)
[09:30:08] *** Joins: DerpGusta_ (~quassel@user/derpgusta)
[09:30:23] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:30:25] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Quit: Leaving)
[09:30:25] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Write error: Connection reset by peer)
[09:30:33] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:30:50] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[09:30:52] *** Joins: hyiltiz_ (~quassel@31.220.5.250)
[09:30:54] *** Joins: walterwhip_ (~www@103.251.64.254)
[09:30:58] *** Joins: M3troidman_ (~buttler@196.196.203.100)
[09:30:58] *** Joins: Kraus_ (~quassel@075-141-246-250.res.spectrum.com)
[09:31:02] *** Joins: jbeimler_ (~quassel@75.183.82.166)
[09:31:03] *** Joins: effprime_ (~effprime@user/effprime)
[09:31:05] *** Quits: walterwhip_ (~www@103.251.64.254) (Client Quit)
[09:31:08] *** Joins: adeliktas6 (~adeliktas@i59F4DEFF.versanet.de)
[09:31:20] *** Joins: pycode (~pycode3@2001:b07:5d28:551:3ccd:8bd3:af65:ead2)
[09:31:25] *** Quits: M3troidman_ (~buttler@196.196.203.100) (Client Quit)
[09:31:29] *** Joins: mjh4386_ (~mjh4386@165.22.53.231)
[09:31:43] *** Joins: ezzieygu1wuf (~Unknown@user/ezzieyguywuf)
[09:31:49] *** Joins: Xat`_ (~Xat`@ns300217.ip-91-121-29.eu)
[09:31:50] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[09:31:52] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[09:31:52] *** Joins: grnman_ (~grnman@159.89.27.73)
[09:31:53] *** kurisukurisukuri is now known as kurisumakise
[09:31:53] *** kurisumakise is now known as kurisukurisukuri
[09:31:55] *** Joins: SuperL4g (~akulbe@user/superlag)
[09:31:56] *** Joins: FastJack_ (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de)
[09:31:56] *** Joins: dupl0x (~duplox@137.220.127.235)
[09:32:00] *** Joins: noyb_ (~noyb@cpe-76-176-219-160.san.res.rr.com)
[09:32:02] *** Joins: et_ (~et@user/et)
[09:32:05] *** Joins: botfathe1 (~botfather@shell1.dds.nl)
[09:32:06] *** Joins: spiderma1 (~spiderman@user/spiderman)
[09:32:11] *** Joins: nepeat_ (~nepeat@79.110.170.60)
[09:32:13] *** Joins: bdiddy_ (~bdiddy@li654-123.members.linode.com)
[09:32:14] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[09:32:14] <BrenBarn> oh, ok, I know nothing about django
[09:32:14] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:32:18] *** Joins: Wulf4 (~Wulf@user/wulf)
[09:32:20] *** Joins: BlessJah_ (~BlessJah@user/blessjah)
[09:32:27] *** Joins: gegensch1in (~james@ec2-54-210-169-253.compute-1.amazonaws.com)
[09:32:33] *** Joins: GeorgeK_ (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com)
[09:32:37] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[09:32:37] *** et_ is now known as et
[09:32:48] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[09:32:51] *** Joins: supakeen_ (~user@python/site-packages/supakeen)
[09:33:00] *** Joins: revolve_ (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[09:33:03] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[09:33:24] *** Joins: marduk9 (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[09:33:30] *** Joins: qwedfg_ (~qwedfg@user/qwedfg)
[09:34:00] *** Quits: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi) (Ping timeout: 268 seconds)
[09:34:12] *** Joins: M3troidman_ (~buttler@196.196.203.100)
[09:34:52] *** kurisukurisukuri is now known as kurisumakise
[09:34:53] *** kurisumakise is now known as kurisukurisukuri
[09:35:14] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[09:35:27] *** Joins: cyphase_eviltwin (~cyphase@user/cyphase)
[09:35:53] *** Joins: strugee_ (~strugee@ool-4575d6b1.dyn.optonline.net)
[09:35:57] *** Joins: markw_dev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net)
[09:35:59] <tpr> ah, oh well. I just injected that template manually (https://nbconvert.readthedocs.io/en/latest/nbconvert_library.html#Programmatically-creating-templates) and modified the ipynb to have the hide_input metadata, which seemed to do the trick :-)
[09:36:35] *** Joins: frost (~frost@user/frost)
[09:36:52] *** Joins: Koffa_ (jkohvakk@user/koffa)
[09:37:08] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (*.net *.split)
[09:37:08] *** Quits: tristan_ (~tristan@223.62.172.61) (*.net *.split)
[09:37:08] *** Quits: jmd_ (~jmdaemon@user/jmdaemon) (*.net *.split)
[09:37:08] *** Quits: c4017w_ (~c4017@209.52.68.8) (*.net *.split)
[09:37:08] *** Quits: walterwhip (~www@user/walterwhip) (*.net *.split)
[09:37:08] *** Quits: hams (~hams@user/hams) (*.net *.split)
[09:37:08] *** Quits: supakeen (~user@python/site-packages/supakeen) (*.net *.split)
[09:37:08] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (*.net *.split)
[09:37:08] *** Quits: strugee (~strugee@ool-4575d6b1.dyn.optonline.net) (*.net *.split)
[09:37:08] *** Quits: on^ (~on@50.231.5.242) (*.net *.split)
[09:37:08] *** Quits: adeliktas (~adeliktas@i59F4DEFF.versanet.de) (*.net *.split)
[09:37:08] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[09:37:08] *** Quits: EsoAlgo (~EsoAlgo@152.70.142.52) (*.net *.split)
[09:37:08] *** Quits: tijuco (~tijuco@user/tijuco) (*.net *.split)
[09:37:08] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[09:37:08] *** Quits: taeaad_ (~taeaad@user/taeaad) (*.net *.split)
[09:37:08] *** Quits: M3troidman (~buttler@196.196.203.100) (*.net *.split)
[09:37:08] *** Quits: FastJack (~fastjack@ip-078-094-022-014.um19.pools.vodafone-ip.de) (*.net *.split)
[09:37:08] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (*.net *.split)
[09:37:08] *** Quits: justm33_ (~Username@84-84-41-7.fixed.kpn.net) (*.net *.split)
[09:37:08] *** Quits: Fohsap (~Muimi@175.170.14.166) (*.net *.split)
[09:37:08] *** Quits: Wulf (~Wulf@user/wulf) (*.net *.split)
[09:37:09] *** Quits: remote (~self@user/hackers) (*.net *.split)
[09:37:09] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (*.net *.split)
[09:37:09] *** Quits: Viewday11 (~Viewday@user/viewday) (*.net *.split)
[09:37:09] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (*.net *.split)
[09:37:09] *** Quits: fstd (~fstd@xdsl-89-1-56-234.nc.de) (*.net *.split)
[09:37:09] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (*.net *.split)
[09:37:09] *** Quits: Timvde (~tim@towely.vdeynde.com) (*.net *.split)
[09:37:09] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (*.net *.split)
[09:37:09] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (*.net *.split)
[09:37:09] *** Quits: dsp00 (~dsp00@20.79.249.135) (*.net *.split)
[09:37:09] *** Quits: Batzy (~quassel@user/batzy) (*.net *.split)
[09:37:09] *** Quits: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com) (*.net *.split)
[09:37:09] *** Quits: Melon_Bread (~Melon_Bre@li958-238.members.linode.com) (*.net *.split)
[09:37:09] *** Quits: jpic (~jpic@82.142.23.238) (*.net *.split)
[09:37:09] *** Quits: jrjsmrtn (~jrjsmrtn@ip-212-239-244-124.dsl.scarlet.be) (*.net *.split)
[09:37:09] *** Quits: jbeimler (~quassel@75.183.82.166) (*.net *.split)
[09:37:09] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (*.net *.split)
[09:37:09] *** Quits: mncheck (~mncheck@193.224.205.254) (*.net *.split)
[09:37:09] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (*.net *.split)
[09:37:09] *** Quits: xakan (~xakan@pnmx.zdx.fr) (*.net *.split)
[09:37:09] *** Quits: Guest7856 (~max@200-140-128-103.bsace703.dsl.brasiltelecom.net.br) (*.net *.split)
[09:37:09] *** Quits: MJ (~mjpieters@zopatista.plus.com) (*.net *.split)
[09:37:09] *** Quits: digilink (~digilink@user/digilink) (*.net *.split)
[09:37:09] *** Quits: alexyov (~alexyov@79.124.0.2) (*.net *.split)
[09:37:09] *** Quits: cyphase (~cyphase@user/cyphase) (*.net *.split)
[09:37:09] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (*.net *.split)
[09:37:09] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (*.net *.split)
[09:37:09] *** Quits: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net) (*.net *.split)
[09:37:09] *** Quits: AlanMD_ (~AlanMD@5-12-8-203.residential.rdsnet.ro) (*.net *.split)
[09:37:09] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (*.net *.split)
[09:37:09] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (*.net *.split)
[09:37:09] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (*.net *.split)
[09:37:09] *** Quits: botfather (~botfather@shell1.dds.nl) (*.net *.split)
[09:37:09] *** Quits: lithammer (~lithammer@arch-vps.cloud.tilaa.com) (*.net *.split)
[09:37:09] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (*.net *.split)
[09:37:09] *** Quits: pr3d4t0r (~zhenya01@user/pr3d4t0r) (*.net *.split)
[09:37:09] *** Quits: grnman (~grnman@159.89.27.73) (*.net *.split)
[09:37:09] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (*.net *.split)
[09:37:09] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[09:37:09] *** Quits: jim (~jim@about/linux/staff/jim) (*.net *.split)
[09:37:09] *** Quits: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net) (*.net *.split)
[09:37:09] *** Quits: Kraus (~quassel@075-141-246-250.res.spectrum.com) (*.net *.split)
[09:37:09] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (*.net *.split)
[09:37:09] *** Quits: iphone (~spiderman@user/spiderman) (*.net *.split)
[09:37:09] *** Quits: pepper (~pepper@user/pepper) (*.net *.split)
[09:37:09] *** Quits: ngp (~ngp@199.180.249.183) (*.net *.split)
[09:37:09] *** Quits: esv (~esv@74.124.178.154) (*.net *.split)
[09:37:09] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (*.net *.split)
[09:37:09] *** Quits: dminuoso (~dminuoso@user/dminuoso) (*.net *.split)
[09:37:09] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:37:09] *** Quits: oz4ga (~tim@hator.sunsite.lv) (*.net *.split)
[09:37:09] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[09:37:09] *** Quits: nigelb (~nigel@zeus.nigelb.me) (*.net *.split)
[09:37:09] *** Quits: alex11 (~alex11@user/alex11) (*.net *.split)
[09:37:09] *** Quits: gjvc (~gjvc@user/gjvc) (*.net *.split)
[09:37:09] *** Quits: noyb (~noyb@user/noyb) (*.net *.split)
[09:37:09] *** Quits: ecool (~ecool@ecool.dev) (*.net *.split)
[09:37:09] *** Quits: sleepingforest (~sleepingf@pool-108-39-234-208.pitbpa.fios.verizon.net) (*.net *.split)
[09:37:09] *** Quits: lidless (~lidless@user/lidless) (*.net *.split)
[09:37:09] *** Quits: Goodbye_Vincent (~Goodbye_V@freakshells.net) (*.net *.split)
[09:37:09] *** Quits: DerpGusta (~quassel@user/derpgusta) (*.net *.split)
[09:37:09] *** Quits: greknod282 (~grek@120.88.171.98) (*.net *.split)
[09:37:09] *** Quits: SuperLag (~akulbe@user/superlag) (*.net *.split)
[09:37:09] *** Quits: bryce (~bryce@ool-457dd6ac.dyn.optonline.net) (*.net *.split)
[09:37:09] *** Quits: llh (~llh@user/llh) (*.net *.split)
[09:37:09] *** Quits: Bkid (~Bkid@user/bkid) (*.net *.split)
[09:37:09] *** Quits: Gerula (~Gerula@user/gerula) (*.net *.split)
[09:37:09] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (*.net *.split)
[09:37:09] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[09:37:09] *** Quits: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net) (*.net *.split)
[09:37:09] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (*.net *.split)
[09:37:09] *** Quits: runelind (~runelind@user/runelind) (*.net *.split)
[09:37:09] *** Quits: mmalter (~mmalter@88.126.10.237) (*.net *.split)
[09:37:09] *** Quits: enkrypt (~enkrypt@user/enkrypt) (*.net *.split)
[09:37:09] *** Quits: KeiraT (~k@lulzsec.co.uk) (*.net *.split)
[09:37:09] *** Quits: birkoff (birkoff@user/birkoff) (*.net *.split)
[09:37:09] *** Quits: n1000 (~n1000@user/n1000) (*.net *.split)
[09:37:09] *** Quits: _VanCity (~Sixx@S0106d850e6cdc670.vs.shawcable.net) (*.net *.split)
[09:37:09] *** Quits: euidzero (~euidzero@158.101.10.150) (*.net *.split)
[09:37:09] *** Quits: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se) (*.net *.split)
[09:37:09] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[09:37:09] *** Quits: stella (~aoei@nethackscoreboard/aoei) (*.net *.split)
[09:37:09] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (*.net *.split)
[09:37:09] *** Quits: Helle (~helle@45.83.235.185) (*.net *.split)
[09:37:09] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (*.net *.split)
[09:37:09] *** Quits: blurry (xbaranov@lounge.fi.muni.cz) (*.net *.split)
[09:37:09] *** Quits: dstein64 (~dstein64@dannyadam.com) (*.net *.split)
[09:37:09] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (*.net *.split)
[09:37:09] *** Quits: meejah (~meejah@rutas.meejah.ca) (*.net *.split)
[09:37:09] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[09:37:09] *** Quits: sagax (~sagax_nb@user/sagax) (*.net *.split)
[09:37:09] *** Quits: queue- (~nerd@user/queue/x-7267619) (*.net *.split)
[09:37:09] *** Quits: hyiltiz (~quassel@31.220.5.250) (*.net *.split)
[09:37:09] *** Quits: jayray (~jayray@user/jayray) (*.net *.split)
[09:37:09] *** Quits: potatosal (~salad@user/potatosal) (*.net *.split)
[09:37:09] *** Quits: capn (~capn@user/capn) (*.net *.split)
[09:37:09] *** Quits: moose (~moose@user/moose) (*.net *.split)
[09:37:09] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (*.net *.split)
[09:37:09] *** Quits: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net) (*.net *.split)
[09:37:09] *** Quits: jjasghar (~jjasghar@idlerpg/player/jjasghar) (*.net *.split)
[09:37:09] *** Quits: hrm (~hrm@nimbus.harmtemolder.nl) (*.net *.split)
[09:37:09] *** Quits: Leonarbro (~Leonet@user/leonarbro) (*.net *.split)
[09:37:09] *** Quits: kolcon (~kolcon@v.kolouch.org) (*.net *.split)
[09:37:09] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[09:37:09] *** Quits: NOTevil (~notevil@user/notevil) (*.net *.split)
[09:37:09] *** Quits: BlessJah (~BlessJah@user/blessjah) (*.net *.split)
[09:37:09] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (*.net *.split)
[09:37:09] *** Quits: dude-x (~textual@72.76.74.165) (*.net *.split)
[09:37:09] *** Quits: Phase (~phase@user/phase) (*.net *.split)
[09:37:09] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (*.net *.split)
[09:37:09] *** Quits: duplox (~duplox@137.220.127.235) (*.net *.split)
[09:37:09] *** Quits: selikolg (~selikolg@178.62.2.76) (*.net *.split)
[09:37:09] *** Quits: peanuter_ (~peanuter@static.190.220.201.138.clients.your-server.de) (*.net *.split)
[09:37:09] *** Quits: Koffa (~jkohvakk@user/koffa) (*.net *.split)
[09:37:09] *** Quits: effprime (~effprime@user/effprime) (*.net *.split)
[09:37:09] *** Quits: streety (~streety@li761-24.members.linode.com) (*.net *.split)
[09:37:09] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (*.net *.split)
[09:37:09] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[09:37:09] *** Quits: Xat` (~Xat`@ns300217.ip-91-121-29.eu) (*.net *.split)
[09:37:09] *** Quits: trashbird (~trashbird@user/trashbird) (*.net *.split)
[09:37:09] *** Quits: nepeat (~nepeat@79.110.170.60) (*.net *.split)
[09:37:09] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (*.net *.split)
[09:37:09] *** Quits: achilleas (~ach@user/achilleas) (*.net *.split)
[09:37:09] *** Quits: bdiddy (~bdiddy@li654-123.members.linode.com) (*.net *.split)
[09:37:09] *** Quits: gegenschein (~james@ec2-54-210-169-253.compute-1.amazonaws.com) (*.net *.split)
[09:37:09] *** Quits: _0ne (~one@user/0ne/x-2101768) (*.net *.split)
[09:37:10] *** Quits: ntdll_ (~ntdll@shion.saiban.me) (*.net *.split)
[09:37:10] *** Quits: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net) (*.net *.split)
[09:37:10] *** Quits: _val_ (~valentin@82-169-14-137.biz.kpn.net) (*.net *.split)
[09:37:10] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (*.net *.split)
[09:37:10] *** Quits: dv^_^ (~dv@eclipse.oxfordfun.com) (*.net *.split)
[09:37:10] *** Quits: lantech19446 (~lantech19@144.202.10.138) (*.net *.split)
[09:37:10] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (*.net *.split)
[09:37:10] *** Quits: AnimalFarmPig (~quassel@user/animalfarmpig) (*.net *.split)
[09:37:10] *** Quits: Deaygo (~Deaygo@let.deaygo.in) (*.net *.split)
[09:37:10] *** Quits: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net) (*.net *.split)
[09:37:10] *** Quits: han-` (~han`@user/han-/x-0887595) (*.net *.split)
[09:37:10] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (*.net *.split)
[09:37:10] *** Quits: nickodd (~nickodd@user/nickodd) (*.net *.split)
[09:37:10] *** Quits: Nei (~ailin@openSUSE/member/ailin-nemui) (*.net *.split)
[09:37:10] *** Quits: asix (~Anders@user/asix) (*.net *.split)
[09:37:10] *** marduk9 is now known as marduk
[09:37:10] *** Wulf4 is now known as Wulf
[09:37:11] *** adeliktas6 is now known as adeliktas
[09:37:11] *** zuQe89 is now known as zuQe8
[09:37:11] *** xakan7 is now known as xakan
[09:37:11] *** blurry0 is now known as blurry
[09:37:11] *** greknod2821 is now known as greknod282
[09:37:11] *** Phase6 is now known as Phase
[09:37:11] *** alexyov8 is now known as alexyov
[09:37:11] *** jjasghar7 is now known as jjasghar
[09:37:11] *** trashbird1 is now known as trashbird
[09:37:12] *** Koffa_ is now known as Koffa
[09:37:32] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[09:37:39] *** jayray_ is now known as jayray
[09:37:45] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[09:37:46] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[09:37:53] *** kurisukurisukuri is now known as kurisumakise
[09:37:53] *** kurisumakise is now known as kurisukurisukuri
[09:37:53] <BrenBarn> I see some stackoverflow questions with similar problems
[09:37:54] *** Joins: tijuco (~tijuco@user/tijuco)
[09:38:15] *** Joins: on^ (~on@50.231.5.242)
[09:38:19] <BrenBarn> since nbextensions is unofficial I could imagine it might get out of sync with jupyter's machinations
[09:38:37] *** EsoAlgo3 is now known as EsoAlgo
[09:38:44] *** Joins: capn (~capn@user/capn)
[09:39:15] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[09:39:48] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[09:39:54] *** Joins: djhankb (~djhankb@208.113.164.68)
[09:39:59] *** Parts: oscurochu (~oscurochu@2603:9000:c202:1034:bdc2:5ae0:346e:f66f) ()
[09:40:00] *** Joins: djapo (~archangel@user/djapo)
[09:40:50] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[09:40:52] *** kurisukurisukuri is now known as kurisumakise
[09:40:53] *** kurisumakise is now known as kurisukurisukuri
[09:41:17] *** Joins: xkuru (~xkuru@user/xkuru)
[09:41:46] *** Joins: scruz (~scruz@41.58.61.79)
[09:42:39] *** Joins: Bkid (~Bkid@user/bkid)
[09:42:50] <scruz> tried to do some (aware) datetime math, but i get a typeerror: datetime.timezone object cannot be interpreted as an integer. any help with this?
[09:42:50] *** Joins: berong91 (~noob4ever@75.154.235.153)
[09:42:50] *** Joins: analoq_ (~yashi@user/dies)
[09:42:50] *** Joins: enkrypt (~enkrypt@onosendai.root.sx)
[09:42:50] *** Joins: dsp00 (~dsp00@20.79.249.135)
[09:42:50] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[09:42:50] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[09:42:50] *** Joins: eN_Joy (~eN_Joy@wsip-72-213-93-155.ok.ok.cox.net)
[09:42:50] *** Joins: ethoxy (~root@bison.alphaw0lf.xyz)
[09:42:50] *** Joins: _val_ (~valentin@82-169-14-137.biz.kpn.net)
[09:42:50] *** Joins: Guest7856 (~Guest7856@200-140-128-103.bsace703.dsl.brasiltelecom.net.br)
[09:42:50] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[09:42:50] *** Joins: queue- (~nerd@rektnet.com)
[09:42:50] *** Joins: hams (~hams@user/hams)
[09:42:50] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[09:42:50] *** Joins: taeaad_ (~taeaad@user/taeaad)
[09:42:50] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[09:42:50] *** Joins: Fohsap (~Muimi@175.170.14.166)
[09:42:50] *** Joins: remote (~self@user/hackers)
[09:42:50] *** Joins: Viewday11 (~Viewday@user/viewday)
[09:42:50] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[09:42:50] *** Joins: Batzy (~quassel@user/batzy)
[09:42:50] *** Joins: Melon_Bread (~Melon_Bre@li958-238.members.linode.com)
[09:42:50] *** Joins: jpic (~jpic@82.142.23.238)
[09:42:50] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[09:42:50] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[09:42:50] *** Joins: digilink (~digilink@user/digilink)
[09:42:50] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[09:42:50] *** Joins: AlanMD_ (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[09:42:50] *** Joins: potatosal (~salad@user/potatosal)
[09:42:50] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[09:42:50] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[09:42:50] *** Joins: pr3d4t0r (~zhenya01@user/pr3d4t0r)
[09:42:50] *** Joins: pepper (~pepper@user/pepper)
[09:42:50] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[09:42:50] *** Joins: dminuoso (~dminuoso@user/dminuoso)
[09:42:50] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:42:50] *** Joins: oz4ga (~tim@hator.sunsite.lv)
[09:42:50] *** Joins: simplicity (~yti@user/simplicity)
[09:42:50] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[09:42:50] *** Joins: gjvc (~gjvc@user/gjvc)
[09:42:50] *** Joins: ecool (~ecool@ecool.dev)
[09:42:50] *** Joins: sleepingforest (~sleepingf@pool-108-39-234-208.pitbpa.fios.verizon.net)
[09:42:50] *** Joins: lidless (~lidless@user/lidless)
[09:42:50] *** Joins: Gerula (~Gerula@user/gerula)
[09:42:50] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[09:42:50] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[09:42:50] *** Joins: runelind (~runelind@user/runelind)
[09:42:50] *** Joins: mmalter (~mmalter@88.126.10.237)
[09:42:50] *** Joins: KeiraT (~k@lulzsec.co.uk)
[09:42:50] *** Joins: n1000 (~n1000@user/n1000)
[09:42:50] *** Joins: stella (~aoei@nethackscoreboard/aoei)
[09:42:50] *** Joins: Helle (~helle@45.83.235.185)
[09:42:50] *** Joins: dstein64 (~dstein64@dannyadam.com)
[09:42:50] *** Joins: meejah (~meejah@rutas.meejah.ca)
[09:42:50] *** Joins: dlam (~dlam@dlam.me)
[09:42:50] *** Joins: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net)
[09:42:50] *** Joins: moose (~moose@user/moose)
[09:42:50] *** Joins: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net)
[09:42:50] *** Joins: hrm (~hrm@nimbus.harmtemolder.nl)
[09:42:50] *** Joins: kolcon (~kolcon@v.kolouch.org)
[09:42:50] *** Joins: NOTevil (~notevil@user/notevil)
[09:42:50] *** Joins: dude-x (~textual@72.76.74.165)
[09:42:50] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[09:42:50] *** Joins: peanuter_ (~peanuter@static.190.220.201.138.clients.your-server.de)
[09:42:50] *** Joins: streety (~streety@li761-24.members.linode.com)
[09:42:50] *** Joins: achilleas (~ach@user/achilleas)
[09:42:50] *** Joins: ntdll_ (~ntdll@shion.saiban.me)
[09:42:50] *** Joins: Dantali0n (~Dantali0n@251-228-138-45.connected.by.freedominter.net)
[09:42:50] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[09:42:50] *** Joins: dv^_^ (~dv@eclipse.oxfordfun.com)
[09:42:50] *** Joins: lantech19446 (~lantech19@144.202.10.138)
[09:42:50] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[09:42:50] *** Joins: AnimalFarmPig (~quassel@user/animalfarmpig)
[09:42:50] *** Joins: Deaygo (~Deaygo@let.deaygo.in)
[09:42:50] *** Joins: han-` (~han`@user/han-/x-0887595)
[09:42:50] *** Joins: nickodd (~nickodd@user/nickodd)
[09:42:50] *** Joins: Nei (~ailin@openSUSE/member/ailin-nemui)
[09:42:50] *** Joins: asix (~Anders@user/asix)
[09:42:51] *** Joins: Atque (~Atque@user/atque)
[09:42:57] *** Quits: pyever___ (~pyeveryth@64-18-153-56.starry-inc.net) (Quit: Leaving...)
[09:43:09] <tpr> true that. those questions I saw were mostly on mac or windows, but it may very well be that it's just because plenty of people use jupyters and python outside linux :)
[09:43:16] *** Joins: KombuchaKip (~kip@192.252.230.5)
[09:43:24] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[09:43:30] *** Joins: jim (~jim@about/linux/staff/jim)
[09:43:31] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[09:43:41] *** Joins: CodeGeek (~codegeek@about/java/CodeGeek)
[09:43:46] <scruz> basically datetime.now(timezone.utc) - somedatetime.replace(timezone.utc) <- this is what gives the typeerror
[09:43:52] *** kurisukurisukuri is now known as kurisumakise
[09:43:53] *** kurisumakise is now known as kurisukurisukuri
[09:43:58] *** enkrypt is now known as Guest5888
[09:44:11] *** Joins: _0ne (~one@user/0ne/x-2101768)
[09:44:17] *** Joins: _VanCity (~Sixx@S0106d850e6cdc670.vs.shawcable.net)
[09:44:24] *** Joins: Timvde (~tim@towely.vdeynde.com)
[09:44:25] *** Quits: queue- (~nerd@rektnet.com) (Changing host)
[09:44:25] *** Joins: queue- (~nerd@user/queue/x-7267619)
[09:44:48] *** Joins: birkoff (birkoff@birkoff.thunderirc.net)
[09:44:48] *** Quits: birkoff (birkoff@birkoff.thunderirc.net) (Changing host)
[09:44:48] *** Joins: birkoff (birkoff@user/birkoff)
[09:45:45] <phy1729> you're missing tzinfo=
[09:46:20] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 268 seconds)
[09:46:52] *** kurisukurisukuri is now known as kurisumakise
[09:46:53] *** kurisumakise is now known as kurisukurisukuri
[09:48:18] <scruz> thanks. can't believe i missed that.
[09:48:50] *** Quits: pycode (~pycode3@2001:b07:5d28:551:3ccd:8bd3:af65:ead2) (Ping timeout: 250 seconds)
[09:48:58] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[09:49:36] *** Joins: bluedust (~bluedust@103.161.144.140)
[09:49:41] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[09:49:52] *** kurisukurisukuri is now known as kurisumakise
[09:49:53] *** kurisumakise is now known as kurisukurisukuri
[09:49:56] *** Joins: bluedust (~bluedust@103.161.144.140)
[09:50:10] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[09:50:27] *** Joins: bluedust (~bluedust@103.161.144.140)
[09:52:52] *** kurisukurisukuri is now known as kurisumakise
[09:52:53] *** kurisumakise is now known as kurisukurisukuri
[09:52:57] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:8518:7189:4482:91c6) (Ping timeout: 240 seconds)
[09:53:36] *** Quits: emerent (~quassel@p200300cd57044312ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[09:53:45] *** Joins: emerent (~quassel@p200300cd57044332ba27ebfffed28a59.dip0.t-ipconnect.de)
[09:54:24] *** irelativism is now known as lola
[09:54:30] *** Joins: koolazer (~koo@user/koolazer)
[09:54:32] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 240 seconds)
[09:54:37] *** Joins: Ox151 (~user@user/ox151)
[09:54:46] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[09:55:02] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[09:55:05] *** Quits: scruz (~scruz@41.58.61.79) (Ping timeout: 250 seconds)
[09:55:20] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 250 seconds)
[09:55:20] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 250 seconds)
[09:55:52] *** kurisukurisukuri is now known as kurisumakise
[09:55:53] *** kurisumakise is now known as kurisukurisukuri
[09:56:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:56:38] *** Joins: scruz (~scruz@41.58.61.79)
[09:56:50] *** Joins: Guest_8877 (~WebIRC@223.189.25.87)
[09:57:44] <Ox151> hello, i have two 2000x2 matrix and am trying to use multiply them with temp = Z[:,j] @ X[:,k], but temp is only in a single integer. I would think it would be a vector
[09:58:27] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[09:58:45] <scruz> phy1729: thanks again. wonder why i left that kwarg out.
[09:58:52] *** kurisukurisukuri is now known as kurisumakise
[09:58:53] *** kurisumakise is now known as kurisukurisukuri
[09:59:12] *** llanhmod_ is now known as llanhmod
[10:00:32] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 250 seconds)
[10:00:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:01:52] *** kurisukurisukuri is now known as kurisumakise
[10:01:53] <jinsun> Ox151: if you wanted to do elementwise multiplication use * instead of @
[10:02:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:03:18] *** Joins: Jong (~Jong@2620:10d:c090:400::5:6a53)
[10:03:40] *** Quits: _vanessa_ (~farawayas@103.160.128.7) (Quit: Leaving)
[10:03:55] *** Quits: audio (~audio@user/audio) (Ping timeout: 256 seconds)
[10:03:57] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[10:05:05] <tpr> BrenBarn: thanks for the help btw! :)
[10:08:26] *** Joins: Vonter (~Vonter@user/vonter)
[10:08:40] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[10:09:33] *** Quits: vanessa (~annada@103.160.128.7) (Quit: WeeChat 3.4)
[10:09:45] *** Joins: vanessa (~annada@103.160.128.7)
[10:10:11] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:9def:475b:fceb:fed9) (Read error: Connection reset by peer)
[10:10:32] *** Joins: quosa (~jussiku@82-181-4-77.bb.dnainternet.fi)
[10:11:47] *** Quits: vanessa (~annada@103.160.128.7) (Client Quit)
[10:11:59] *** Joins: vanessa (~farawayas@103.160.128.7)
[10:12:53] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:13:49] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[10:14:06] *** Quits: scruz (~scruz@41.58.61.79) (Ping timeout: 245 seconds)
[10:14:14] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[10:15:33] *** Quits: kaiseisei (~Thunderbi@183.191.221.65) (Quit: kaiseisei)
[10:16:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:17:06] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.111)
[10:18:07] *** Joins: fef (~thedawn@user/thedawn)
[10:20:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:23:47] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 252 seconds)
[10:23:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:24:12] *** Joins: scruz (~scruz@41.58.61.79)
[10:24:34] *** Quits: scruz (~scruz@41.58.61.79) (Client Quit)
[10:27:11] *** Quits: vanessa (~farawayas@103.160.128.7) (Remote host closed the connection)
[10:27:39] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[10:27:56] <Ox151> jinsun thank you, that is what it was
[10:28:14] *** Parts: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net) (WeeChat 3.4)
[10:29:48] *** Joins: vanessa (~annada@103.160.128.7)
[10:31:01] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-69-109.poda.cz)
[10:31:22] *** Joins: _vanessa_ (~farawayas@103.160.128.7)
[10:31:52] *** Quits: vanessa (~annada@103.160.128.7) (Client Quit)
[10:32:47] *** Joins: mrwick (~mrwick@user/mrwick)
[10:32:57] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[10:34:01] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-69-109.poda.cz) (Client Quit)
[10:34:01] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[10:34:28] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-35e0-06b2-095d-de4d.res6.spectrum.com) (Quit: jarthur)
[10:34:50] *** Joins: walterwhip (~www@user/walterwhip)
[10:34:57] *** Quits: tristan__ (~tristan@223.62.172.61) (Ping timeout: 240 seconds)
[10:35:12] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-69-109.poda.cz)
[10:36:08] *** Joins: Vonter (~Vonter@user/vonter)
[10:37:00] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 256 seconds)
[10:37:31] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[10:38:29] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:38:57] *** Joins: digilink (~digilink@user/digilink)
[10:40:24] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 250 seconds)
[10:41:32] *** Joins: vanessa (~vanessa@103.160.128.7)
[10:41:42] *** Joins: Nutte35 (~Nutte@43.231.30.216)
[10:42:19] *** Quits: _vanessa_ (~farawayas@103.160.128.7) (Quit: Leaving)
[10:46:36] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:4271:7ce:3b2a:680b)
[10:47:17] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:4271:7ce:3b2a:680b) (Remote host closed the connection)
[10:49:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:50:21] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 245 seconds)
[10:50:34] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:da9e:2595:9a3b:161b)
[10:53:10] *** Joins: __mitu (~Thunderbi@86.126.7.110)
[10:53:50] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[10:54:00] *** Joins: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net)
[10:54:46] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[10:54:50] *** Joins: dvx (~dvx@5.181.92.64)
[10:55:24] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:57:25] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[10:57:33] *** Quits: __mitu (~Thunderbi@86.126.7.110) (Client Quit)
[10:59:19] *** Quits: AlanMD_ (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Quit: ZZZzzz…)
[10:59:49] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:00:20] *** Joins: xkuru (~xkuru@user/xkuru)
[11:01:13] *** Joins: Vonter (~Vonter@user/vonter)
[11:01:33] *** Joins: zeenk (~zeenk@2a02:2f04:a208:c500:649e:b5e2:d15c:7960)
[11:01:43] *** Quits: Nutte35 (~Nutte@43.231.30.216) (Read error: Connection reset by peer)
[11:01:51] *** Joins: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at)
[11:01:59] *** Joins: Nutte35 (~Nutte@43.231.30.216)
[11:02:07] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:02:20] *** Joins: __mitu (~Thunderbi@86.126.7.110)
[11:05:19] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:05:57] *** Quits: Nutte35 (~Nutte@43.231.30.216) (Ping timeout: 240 seconds)
[11:06:11] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[11:06:28] *** Joins: martums54 (~martums@user/martums)
[11:06:37] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:06:58] *** Joins: nesoi1 (~Adium@172-3-140-156.lightspeed.sntcca.sbcglobal.net)
[11:08:54] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[11:09:00] *** Quits: martums5 (~martums@user/martums) (Ping timeout: 250 seconds)
[11:09:01] *** martums54 is now known as martums5
[11:10:55] *** Joins: ndim (hun@moooo.n-dimensional.de)
[11:11:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[11:12:11] *** Joins: manti7 (~manti7@176.10.104.94)
[11:12:38] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[11:13:17] *** Joins: Guest67 (~Guest67@2600:1700:e620:3eb0:71b5:374b:e8b0:9734)
[11:13:17] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[11:13:24] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[11:13:30] <Guest67> hello
[11:13:49] *** Leonarbro_ is now known as Leonarbro
[11:13:49] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[11:16:26] <lola> o/ Guest67
[11:17:53] <Guest67> o/?
[11:18:00] <Guest67> not sure what that means?
[11:18:50] *** Quits: EsoAlgo (~EsoAlgo@152.70.142.52) (Ping timeout: 268 seconds)
[11:19:12] *** Joins: Vonter (~Vonter@user/vonter)
[11:19:36] <lola> it is a representation of someone raising their hand while saying hello
[11:19:49] <lola> Guest67: ;)
[11:20:01] <Guest67> got that!
[11:20:01] <lola> o/
[11:20:07] <lola> \o/
[11:20:16] <Guest67> that makes more sense
[11:20:18] <lola> \o
[11:20:20] <Guest67> \o/
[11:20:29] <lola> eheh true
[11:21:32] <Guest67> how are you this evening
[11:21:35] *** Joins: palasso (~palasso@user/palasso)
[11:21:43] *** Joins: Omega037-B (~Omega037@047-233-057-109.res.spectrum.com)
[11:21:43] *** Quits: Omega037 (~Omega037@047-233-057-109.res.spectrum.com) (Killed (NickServ (GHOST command used by Omega037-B)))
[11:21:52] <Guest67> I was just exploring IRC chats, and heard this one is pretty good
[11:21:55] <lola> all good thanks
[11:22:08] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: back later)
[11:22:15] <lola> #python is usefull yes
[11:22:24] <SGautam> I have a list of objects, and I have a list of indices to remove from said list.
[11:22:32] <SGautam> How do I do it without messing it up?
[11:22:34] <SGautam> because
[11:22:45] <nesoi1> is there any reason not to use a heredoc like this, for multi-line strings? https://sadique.io/blog/2012/07/04/heredocs-in-ruby-and-python/
[11:22:49] *** nesoi1 is now known as nesoi
[11:22:55] *** Joins: kaiseisei (~Thunderbi@183.191.221.65)
[11:23:00] <SGautam> for i in range(0, len(list_of_indices_to_remove)): del object_list[i] messes it up since every loop the list indices change.
[11:23:01] <lola> is better to use other channels for banter though given we dont want to spam this channel with offtopic maters, Guest67 ;) welcome ! though
[11:23:28] <energizer> there is #python-offtopic too
[11:24:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:24:23] <Guest67> nope, this is Exactly what I was looking for
[11:25:09] <energizer> SGautam: that is an interesting requirement
[11:25:28] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[11:25:46] *** Joins: dbbr (~dbbr___@2804:5f80:70a0:3700:2045:891:e5c3:a307)
[11:25:52] <energizer> i guess i'd create a second list of indices to keep and then a third list that uses it
[11:25:59] <nesoi> anyone have a comment on the heredoc?
[11:26:15] <nesoi> probably a dumb question :/
[11:26:21] *** Quits: Spunk (~SioUx@user/spunk) (Quit: Leaving)
[11:26:28] *** Joins: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se)
[11:26:37] <energizer> i think heredoc is a bash term
[11:26:44] <energizer> in python they are just called multi-line strings
[11:26:47] <nesoi> it's also a ruby term
[11:26:51] <energizer> ok
[11:27:05] <nesoi> but is the format at that link good and reasonable to use?
[11:27:12] <nesoi> or is there a reason it's not preferred?
[11:27:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:27:49] *** Quits: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[11:27:51] <energizer> people use \ for the first line, i've never seen it used on the last line
[11:28:10] *** Joins: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net)
[11:28:13] <nesoi> so what's the right way to do a multiline string without quoting each line separately?
[11:28:35] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[11:28:41] *** Joins: Vonter (~Vonter@user/vonter)
[11:29:00] <energizer> that's what the triple-quote syntax is for
[11:29:03] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:29:25] <energizer> i guess i'm not sure what you're doubting
[11:29:48] *** Joins: emx (~emx@adsl-84-226-68-198.adslplus.ch)
[11:29:49] <energizer> like, the syntax """foo""" exists so you can make a multiline string
[11:30:00] <energizer> so yes it's ok to use it for that
[11:30:56] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:16] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:24] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[11:31:32] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[11:33:05] *** Joins: Vonter (~Vonter@user/vonter)
[11:33:09] *** Joins: grooverman (~grooverma@177.102.119.200)
[11:33:46] *** Joins: lawt (~lawt@2601:200:8101:f140:dea6:32ff:fea1:adf9)
[11:34:18] <Guest67> I have questions, but will ask tomorrow, for tonight I am off. Glad to have finally found this and figured out how to join.
[11:34:36] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[11:34:37] *** Quits: grooverman_ (~grooverma@177.102.119.200) (Ping timeout: 240 seconds)
[11:34:49] *** Joins: iamkarlson_ (~iamkarlso@80-61-94-238.fixed.kpn.net)
[11:36:00] *** Quits: Guest67 (~Guest67@2600:1700:e620:3eb0:71b5:374b:e8b0:9734) (Quit: Client closed)
[11:36:27] *** Joins: CoolerX (~CoolerX@user/coolerx)
[11:37:39] *** Quits: iamkarlson_ (~iamkarlso@80-61-94-238.fixed.kpn.net) (Client Quit)
[11:38:04] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:38:30] *** Quits: gtz (~gtz@46.251.99.222) (Remote host closed the connection)
[11:38:43] *** Joins: gtz (~gtz@46.251.99.222)
[11:39:16] <jinsun> SGautam: object_list[:] = [x for i, x in enumerate(object_list) if i not in list_of_indices_to_remove]
[11:39:29] <jinsun> and it would be better if list_of_indices_to_remove was a set
[11:39:29] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[11:39:34] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 260 seconds)
[11:40:39] <energizer> that's quadratic
[11:40:55] <energizer> i guess that's a reasonable way
[11:41:06] <energizer> sets are good
[11:41:19] <jinsun> yeah that's why better to have a set instead of list
[11:41:33] *** Joins: Vonter (~Vonter@user/vonter)
[11:43:41] <Ox151> I am trying to append a 3 x 1 column matrix to a 1 x 3 matrix, but after appending the 1 x 3 matrix does not turn into a 2 x 3 matrix. I am using temp = Z[:,j] * X[:,k] and then np.append(Z, temp.reshape(-1,1), 1), ive used Z.append before, but seems you cant do that with a numpy.ndarray
[11:45:16] *** Joins: newdimension (~newdimnes@user/newdimension)
[11:45:46] <Repiphany> concatenate, stack, dstack, column_stack, row_stack
[11:46:06] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 260 seconds)
[11:46:29] <Repiphany> (1, 3) and (3, 1) wouldn't make sense to stack for any of them anyway
[11:46:55] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[11:47:06] <Ox151> please ignore my question
[11:47:16] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[11:47:29] <Ox151> i forgot to assign it back to Z = np.append(Z, temp)
[11:48:24] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[11:48:44] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[11:48:45] *** Joins: remote (~self@user/hackers)
[11:48:51] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:49:09] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[11:49:48] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[11:50:01] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:8518:7189:4482:91c6)
[11:51:01] <nesoi> what is the correct way in python to guard against malicious input into form fields that cause db exploits?
[11:51:14] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 260 seconds)
[11:51:44] *** Joins: Major_Biscuit (~MajorBisc@c-001-005-022.client.tudelft.eduvpn.nl)
[11:52:17] <newdimension> Is there a way to have logging handler takes a variable for the file location? Something like so https://dpaste.org/jY7q
[11:52:34] *** Joins: CoolerX (~CoolerX@user/coolerx)
[11:53:32] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:53:53] *** Joins: tristan (~tristan@223.62.172.61)
[11:55:14] *** supakeen_ is now known as supakeen
[11:57:08] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[12:00:17] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[12:00:20] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[12:01:24] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[12:01:42] *** Quits: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[12:01:46] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[12:01:57] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[12:02:07] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:02:25] *** Joins: xx (~xx@user/xx)
[12:03:15] *** Joins: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de)
[12:03:16] *** Joins: kosh (~kosh@user/kosh)
[12:03:21] *** Quits: Liblx (~Liblx@ip4d15ff43.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[12:03:31] *** Joins: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net)
[12:03:48] *** Joins: parv (~quass@user/parv)
[12:04:44] <energizer> nesoi: all the database tools have support for query parameters
[12:04:48] <energizer> https://www.psycopg.org/psycopg3/docs/basic/params.html
[12:05:24] <energizer> the safe syntax is unfortunately very similar to the unsafe syntax
[12:05:34] <energizer> in appearance, but the behavior is very different
[12:05:43] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[12:05:57] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[12:06:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:06:54] *** Joins: raym (~raym@user/raym)
[12:08:39] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10f4:5ff0:397b:3ff9:d4a9:1b8e)
[12:10:11] *** Joins: e2m4n (~ezman@user/e2m4n)
[12:11:49] *** Parts: emx (~emx@adsl-84-226-68-198.adslplus.ch) (Leaving)
[12:11:50] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:13:20] *** Joins: Vonter (~Vonter@user/vonter)
[12:13:53] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Quit: Connection closed)
[12:13:59] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[12:14:17] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[12:14:21] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[12:15:50] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[12:16:10] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 250 seconds)
[12:16:21] *** Joins: xa0s (~xa0s@mab.sdf.org)
[12:16:37] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[12:17:13] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:9816:bdcb:e1c3:4257)
[12:18:02] *** Joins: BlackBishop (dexter@user/blackbishop)
[12:18:57] *** Quits: tristan (~tristan@223.62.172.61) (Ping timeout: 240 seconds)
[12:19:35] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[12:19:51] *** Joins: chele (~chele@user/chele)
[12:19:52] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[12:20:55] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 250 seconds)
[12:22:24] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[12:23:28] *** Joins: jay-m126 (~jay-m@129.0.76.222)
[12:23:33] *** Joins: jay-m126_ (~jay-m@129.0.76.222)
[12:23:33] *** Joins: jay-m1261 (~jay-m@129.0.76.222)
[12:24:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:24:52] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:26:08] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:26:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:28:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[12:30:54] *** Quits: tesuji_ (~quassel@2a02:908:180:9500:a0da:e697:f0fa:d750) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:31:19] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[12:31:53] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[12:32:34] *** Joins: mage (~julien@orval.bbpf.belspo.be)
[12:32:38] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 250 seconds)
[12:33:49] *** Joins: DaleNa9g (~DaleNa9g@097-093-139-162.biz.spectrum.com)
[12:34:15] *** Quits: DaleNa9g (~DaleNa9g@097-093-139-162.biz.spectrum.com) (Client Quit)
[12:34:37] *** Joins: d0ku (~d0ku@178.43.19.180.ipv4.supernova.orange.pl)
[12:34:53] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[12:36:10] *** Joins: Vonter (~Vonter@user/vonter)
[12:37:11] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[12:37:18] *** Joins: Auron (Auron956@user/auron)
[12:37:33] *** Joins: walterwhip (~www@user/walterwhip)
[12:37:58] *** Joins: Gurkenglas (~Gurkengla@dslb-090-186-104-244.090.186.pools.vodafone-ip.de)
[12:38:28] *** Quits: walterwhip (~www@user/walterwhip) (Client Quit)
[12:38:46] *** Joins: ubert1 (~Thunderbi@p200300ecdf099479a7980b6460b31c47.dip0.t-ipconnect.de)
[12:39:34] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Ping timeout: 250 seconds)
[12:40:11] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[12:41:24] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[12:43:03] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[12:43:51] *** Joins: lakrass (~lakrass@user/lakrass)
[12:46:23] *** Joins: kosh (~kosh@user/kosh)
[12:49:43] *** Quits: on^ (~on@50.231.5.242) (Ping timeout: 250 seconds)
[12:50:29] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[12:51:59] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:53:26] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[12:54:38] *** Quits: nesoi (~Adium@172-3-140-156.lightspeed.sntcca.sbcglobal.net) (Quit: Leaving.)
[12:55:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:59:50] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[13:00:51] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[13:00:57] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:04:17] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[13:05:28] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:05:51] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:fd84:e20e:591b:a89)
[13:05:59] *** Quits: xakan (~xakan@pnmx.zdx.fr) (Quit: The Lounge - https://thelounge.chat)
[13:06:09] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[13:06:39] *** Joins: demon__ (~user@197.54.38.140)
[13:10:15] *** Joins: Vonter (~Vonter@user/vonter)
[13:10:20] *** Quits: anotheruser (~user@45.130.86.4) (Ping timeout: 250 seconds)
[13:11:28] *** Joins: xakan (~xakan@pnmx.zdx.fr)
[13:12:42] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--29b.oracle-ocna.com)
[13:13:41] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Ping timeout: 245 seconds)
[13:14:12] *** Joins: plastico (~plastico@neomutt/plastico)
[13:15:11] *** Quits: newdimension (~newdimnes@user/newdimension) (Quit: Ping timeout (120 seconds))
[13:15:33] *** Joins: newdimension (~newdimnes@user/newdimension)
[13:16:43] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[13:16:54] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:9102:5c27:2e48:97c2)
[13:17:08] *** Joins: mickey8 (~user@user/mickey)
[13:18:17] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[13:19:28] *** Joins: kristijonas (~kristijon@78-56-32-39.static.zebra.lt)
[13:20:05] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[13:21:29] *** Joins: bluedust_ (~bluedust@59.98.49.134)
[13:23:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[13:24:44] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 252 seconds)
[13:24:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:25:05] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:25:12] *** Joins: locrian9 (~mike@211.sub-174-193-208.myvzw.com)
[13:25:15] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.111) (Ping timeout: 250 seconds)
[13:25:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:25:36] *** Joins: rendar (~rendar@user/rendar)
[13:26:22] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:27:25] *** Joins: sudomann (~sudomann@98.219.211.182)
[13:27:58] *** Quits: kaiseisei (~Thunderbi@183.191.221.65) (Quit: kaiseisei)
[13:28:15] *** Joins: LordOfLive_ (~igloo@c-69-248-83-247.hsd1.nj.comcast.net)
[13:28:39] *** LordOfLive_ is now known as Guest2836
[13:28:42] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:28:56] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:29:12] *** Joins: LimeOn (~user@user/limeon)
[13:29:19] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[13:29:24] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[13:30:28] *** Quits: zeenk (~zeenk@2a02:2f04:a208:c500:649e:b5e2:d15c:7960) (Quit: Konversation terminated!)
[13:31:17] *** Quits: Guest2836 (~igloo@c-69-248-83-247.hsd1.nj.comcast.net) (Remote host closed the connection)
[13:31:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:32:06] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[13:33:32] *** Quits: jay-m126 (~jay-m@129.0.76.222) (Ping timeout: 240 seconds)
[13:34:02] *** Quits: jay-m1261 (~jay-m@129.0.76.222) (Ping timeout: 240 seconds)
[13:34:02] *** Quits: jay-m126_ (~jay-m@129.0.76.222) (Ping timeout: 240 seconds)
[13:34:32] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.111)
[13:34:44] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[13:36:04] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:36:08] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[13:36:14] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:39:21] *** Joins: shad (~shad@user/shad)
[13:39:21] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:39:26] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[13:39:59] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.111) (Ping timeout: 250 seconds)
[13:40:37] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[13:41:01] *** Quits: cation (cation@user/cation) (Ping timeout: 240 seconds)
[13:41:26] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Remote host closed the connection)
[13:41:46] *** Joins: cation (cation@user/cation)
[13:42:18] *** Joins: pycode (~pycode3@2001:b07:5d28:551:4fd:dbce:481a:2caf)
[13:43:03] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:43:10] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:43:26] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[13:43:58] *** Joins: Klinda (~superleag@user/klinda)
[13:44:31] *** Joins: iamkarlson_ (~iamkarlso@80-61-94-238.fixed.kpn.net)
[13:45:23] *** Quits: iamkarlson_ (~iamkarlso@80-61-94-238.fixed.kpn.net) (Client Quit)
[13:46:59] *** Joins: michagogo (uid14316@user/michagogo)
[13:47:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[13:49:55] *** Joins: kts (~kts@103.73.237.81)
[13:51:04] *** Joins: anotheruser (~user@45.130.86.7)
[13:51:43] *** Joins: slav0nic (slav0nic@python.su)
[13:52:33] *** Quits: cation (cation@user/cation) (Ping timeout: 250 seconds)
[13:53:00] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[13:53:17] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:8518:7189:4482:91c6) (Ping timeout: 240 seconds)
[13:53:22] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[13:53:22] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[13:53:22] *** Joins: hams (~hams@user/hams)
[13:54:12] *** Quits: demon__ (~user@197.54.38.140) (Ping timeout: 256 seconds)
[13:55:12] *** Joins: Vonter (~Vonter@user/vonter)
[13:55:46] *** Quits: gtz (~gtz@46.251.99.222) (Ping timeout: 245 seconds)
[13:56:46] *** Joins: Naan (~Naan@user/naan)
[14:02:02] *** Joins: cation (cation@user/cation)
[14:02:39] *** Joins: gtz (~gtz@46.251.99.222)
[14:02:48] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[14:03:16] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:05:19] *** Quits: kts (~kts@103.73.237.81) (Quit: Konversation terminated!)
[14:07:32] <dante-as> Hi guys, is any way that I can save the dist, egg and the build in a different folder?
[14:07:48] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:07:48] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[14:08:03] <dante-as> I've been trying with `python3 devops/setup.py bdist_wheel --bdist-dir test` but no success
[14:08:10] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[14:08:39] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:08:41] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Remote host closed the connection)
[14:10:05] <jinsun> python -m build has a --outdir option
[14:13:21] *** Joins: vsantana (~Thunderbi@fttx-177136149200.usr.predialnet.com.br)
[14:14:56] *** Joins: kts (~kts@103.73.237.81)
[14:15:31] *** Joins: ivii (~ivan@user/ivii)
[14:15:58] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[14:16:52] *** Quits: gtz (~gtz@46.251.99.222) (Ping timeout: 256 seconds)
[14:16:55] *** Quits: kts (~kts@103.73.237.81) (Client Quit)
[14:17:34] *** Quits: Guest_8877 (~WebIRC@223.189.25.87) (Read error: Connection reset by peer)
[14:18:20] *** Joins: Guest_8877 (~WebIRC@223.189.25.87)
[14:19:40] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:19:44] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[14:19:44] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[14:20:16] *** Quits: vsantana (~Thunderbi@fttx-177136149200.usr.predialnet.com.br) (Ping timeout: 256 seconds)
[14:20:21] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 245 seconds)
[14:20:24] *** Joins: vsantana1 (~Thunderbi@ec2-54-159-73-164.compute-1.amazonaws.com)
[14:20:37] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[14:20:57] *** Lord_of_Life_ is now known as Lord_of_Life
[14:22:23] *** Quits: _ev (ev@user/ev/x-8999918) (Quit: Leaving.)
[14:22:42] *** vsantana1 is now known as vsantana
[14:22:52] *** Joins: jay-m126 (~jay-m@129.0.77.195)
[14:22:55] *** Joins: jay-m126_ (~jay-m@129.0.77.195)
[14:22:56] *** Joins: jay-m1261 (~jay-m@129.0.77.195)
[14:24:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:25:43] *** Joins: marcello42 (~mp@2001:1a81:12b9:a400:c8ae:49f5:70f:f33f)
[14:25:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:27:11] *** Joins: demon__ (~user@197.54.38.140)
[14:27:36] *** Joins: Vonter (~Vonter@user/vonter)
[14:28:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[14:29:20] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:30:41] *** Joins: someuser (~user@197.54.38.140)
[14:30:55] *** Quits: anotheruser (~user@45.130.86.7) (Ping timeout: 250 seconds)
[14:32:05] *** Joins: anotheruser (~user@45.130.86.11)
[14:32:10] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[14:32:57] *** Quits: demon__ (~user@197.54.38.140) (Ping timeout: 240 seconds)
[14:33:08] *** Joins: ntome (~ntome@user/ntome)
[14:33:10] <ntome> hi
[14:33:36] <ntome> how to get the __doc__ on simple members of a class? (not methods)
[14:33:58] *** Joins: remote (~self@user/hackers)
[14:34:38] <energizer> ntome: they don't have __doc__
[14:34:57] *** Quits: someuser (~user@197.54.38.140) (Ping timeout: 240 seconds)
[14:35:25] <ntome> it seems https://www.python.org/dev/peps/pep-0224/ was rejected but IIRC sphinx displays the docstrings anyway
[14:35:33] <energizer> yes
[14:36:02] <energizer> sphinx probably has its own parser or something, idk
[14:36:05] *** Quits: locrian9 (~mike@211.sub-174-193-208.myvzw.com) (Quit: Lost terminal)
[14:36:17] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[14:36:32] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[14:37:04] <energizer> yeah it does
[14:37:49] <ntome> oh so there's nothing builtin? :(
[14:38:05] <energizer> correct
[14:38:17] <energizer> most classes just put the member docs in the class docs
[14:38:18] *** Quits: naari (~naari@user/naari) (Ping timeout: 260 seconds)
[14:38:28] <energizer> not in a separate member doc thing
[14:38:32] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[14:38:41] <energizer> (but some do)
[14:39:19] *** Joins: sudomann (~sudomann@98.219.211.182)
[14:39:20] *** Joins: gtz (~gtz@46.251.99.222)
[14:39:28] <energizer> i mean, if you need it for something you could get it from sphinx.parser
[14:39:42] * energizer out
[14:40:19] *** Joins: RiFo (~RiFo@user/rifo)
[14:42:54] *** Joins: naari (~naari@user/naari)
[14:44:34] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[14:45:51] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[14:46:11] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:46:54] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:47:00] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[14:47:14] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[14:47:19] *** Joins: ExeciN (~ExeciN@user/nicexe)
[14:47:31] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:49:10] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[14:51:26] *** Quits: hams (~hams@user/hams) (Ping timeout: 256 seconds)
[14:52:10] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[14:53:58] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:54:38] *** Joins: shad (~shad@user/shad)
[14:54:40] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:56:01] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:57:48] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[15:00:31] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[15:01:01] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[15:02:12] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:02:12] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[15:02:13] *** Quits: ubert1 (~Thunderbi@p200300ecdf099479a7980b6460b31c47.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:04:08] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:05:05] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:e880:89ff:3e74:550f)
[15:05:27] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[15:06:04] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:06:40] *** Joins: maryo87 (~Maryo@user/maryo)
[15:07:02] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 240 seconds)
[15:07:06] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[15:07:07] *** Joins: marduk4 (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[15:07:26] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[15:07:43] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:08:08] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Read error: Connection reset by peer)
[15:09:35] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[15:09:37] *** Quits: maryo_87 (~Maryo@user/maryo) (Ping timeout: 240 seconds)
[15:09:47] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[15:10:06] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:12:24] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:12:24] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 256 seconds)
[15:12:26] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:9102:5c27:2e48:97c2) (Read error: Connection reset by peer)
[15:12:59] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[15:15:52] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[15:16:29] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[15:16:34] <ApostleInTriumph> Hello. I've installed a package with great struggle by building from source. it exists in my environment. how can I make whl out of it?
[15:16:57] *** Joins: arinov (~arinov@85.106.97.174)
[15:17:28] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[15:19:09] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:401e:6c79:eb9f:cb4e)
[15:19:12] *** Joins: walterwhip (~www@user/walterwhip)
[15:19:22] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[15:20:41] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Client Quit)
[15:21:42] *** Quits: brookesy66 (~will@203.220.123.174) (Quit: WeeChat 3.4)
[15:22:03] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:9816:bdcb:e1c3:4257) (Ping timeout: 250 seconds)
[15:23:01] *** Joins: dav1d4 (~dav1d@user/dav1d)
[15:24:01] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[15:24:57] *** Quits: dav1d (~dav1d@user/dav1d) (Ping timeout: 240 seconds)
[15:24:57] *** dav1d4 is now known as dav1d
[15:25:54] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Quit: Textual IRC Client: www.textualapp.com)
[15:26:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:27:50] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:29:24] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[15:29:27] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:30:08] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[15:30:35] *** Joins: vitali64 (~vitali64a@xdsl-31-164-198-163.adslplus.ch)
[15:31:14] *** Quits: grooverman (~grooverma@177.102.119.200) (Read error: Connection reset by peer)
[15:31:48] *** Joins: sudomann (~sudomann@98.219.211.182)
[15:32:13] *** Joins: vsantana1 (~Thunderbi@fttx-177136149200.usr.predialnet.com.br)
[15:32:14] *** Joins: grooverman (~grooverma@177.102.119.200)
[15:32:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:32:17] *** Quits: vsantana (~Thunderbi@ec2-54-159-73-164.compute-1.amazonaws.com) (Ping timeout: 240 seconds)
[15:32:17] *** vsantana1 is now known as vsantana
[15:32:22] *** Joins: BillyZane2 (~BillyZane@185.202.221.36)
[15:33:18] *** Quits: BillyZane (~BillyZane@185.202.221.36) (Remote host closed the connection)
[15:33:31] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10f4:5ff0:397b:3ff9:d4a9:1b8e) (Ping timeout: 250 seconds)
[15:33:56] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:20] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:36] *** Quits: arinov (~arinov@85.106.97.174) (Ping timeout: 268 seconds)
[15:36:36] <purplex> after inserting to set, e.g. s is some set() and i do s.add(5) can i check if '5' was added to set or not? 5 years ago it wasn't possible but now? in c++, iterator is returned with bool value.
[15:37:13] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 268 seconds)
[15:37:41] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[15:39:06] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:39:30] *** Joins: Kimeon (~Kimeon@183.87.15.39)
[15:40:10] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[15:41:36] *** Joins: maryo (~Maryo@user/maryo)
[15:41:41] *** Quits: LuKaRo (~LuKaRo@p200300dfa72f4b2b00000000000001f9.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[15:42:32] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[15:42:49] *** Joins: xkuru (~xkuru@user/xkuru)
[15:43:14] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[15:44:07] <Affliction> if 5 in s
[15:44:15] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[15:44:15] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[15:44:15] *** Joins: JordiGH (~jordi@user/jordigh)
[15:45:15] *** Joins: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de)
[15:45:22] *** Quits: marcello42 (~mp@2001:1a81:12b9:a400:c8ae:49f5:70f:f33f) (Quit: WeeChat 3.4)
[15:45:43] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[15:45:44] <Repiphany> Not particularly readable, but `if 5 in s or s.add(5): print('5 was already in s')`
[15:46:15] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[15:47:12] <Affliction> oh, upon re-reading, yeah, that's probably the way to go
[15:48:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:49:04] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[15:49:20] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[15:49:23] *** Joins: portalrat (~portalrat@user/portalrat)
[15:49:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:49:49] *** Quits: luigibu (~luigi@235.red-79-159-68.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[15:49:49] <ChrisWarrick> ApostleInTriumph: pip wheel
[15:50:01] *** Joins: darksun (~darksun@user/darksun)
[15:50:03] *** Joins: x_kuru (~xkuru@user/xkuru)
[15:50:10] <ChrisWarrick> ApostleInTriumph: it won’t take files out of your environment though
[15:50:12] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Remote host closed the connection)
[15:50:28] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:653c:9519:8897:3200)
[15:50:51] *** Quits: pycode (~pycode3@2001:b07:5d28:551:4fd:dbce:481a:2caf) (Ping timeout: 250 seconds)
[15:51:01] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--29b.oracle-ocna.com) (Ping timeout: 240 seconds)
[15:51:12] *** Joins: huoy99 (~huoy99@gateway/vpn/pia/huoy99)
[15:51:15] *** Parts: huoy99 (~huoy99@gateway/vpn/pia/huoy99) ()
[15:51:26] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:51:51] *** Joins: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net)
[15:52:13] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 240 seconds)
[15:52:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:55:17] *** Quits: vsantana (~Thunderbi@fttx-177136149200.usr.predialnet.com.br) (Ping timeout: 240 seconds)
[15:55:22] *** Joins: vsantana1 (~Thunderbi@ec2-54-159-73-164.compute-1.amazonaws.com)
[15:55:37] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:57:03] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[15:57:09] *** Joins: d1cor (~diego@179.63.242.120)
[15:57:20] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Read error: Connection reset by peer)
[15:57:23] *** Joins: portalrat (~portalrat@user/portalrat)
[15:57:41] *** vsantana1 is now known as vsantana
[15:58:38] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:58:38] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:e4b0:adf8:305f:a850)
[15:58:49] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[15:58:54] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[15:59:16] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[15:59:26] *** Quits: vitali64 (~vitali64a@xdsl-31-164-198-163.adslplus.ch) (Ping timeout: 256 seconds)
[16:00:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[16:00:25] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[16:00:37] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[16:01:29] *** Joins: thiras (~thiras@user/thiras)
[16:01:56] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:a91a:3b2a:695b:176)
[16:02:25] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[16:02:26] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10f4:5ff0:397b:3ff9:d4a9:1b8e)
[16:02:52] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[16:03:13] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[16:04:35] *** Quits: revolve_ (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: No route to host)
[16:06:47] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[16:07:36] *** Joins: shad (~shad@user/shad)
[16:08:29] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:09:56] <Andrew> How do I get all of the list except for the first item (basically I want what cdr does in lisp) in python?
[16:10:27] <Andrew> l[1:-1] doesnt return the last one, [1:0] is empty
[16:11:01] *** Quits: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[16:11:07] *** Quits: RiFo (~RiFo@user/rifo) (Read error: Connection reset by peer)
[16:11:17] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 240 seconds)
[16:12:16] *** Joins: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net)
[16:13:27] <Andrew> I don't just want l[1:-1] + l[-1]
[16:14:17] <Juhaz> Andrew, [1:]
[16:14:24] * Andrew slaps himself
[16:14:26] <Andrew> Thanks
[16:14:34] *** Joins: Vonter (~Vonter@user/vonter)
[16:14:45] * mrwick was going to suggest l.pop(0) .. not sure if that's what you want
[16:15:37] *** Joins: georgios (~georgios@user/georgios)
[16:16:37] *** Quits: Babar (~Babar@2405:4803:ff4d:98d0:582b:457a:6968:a411) (Ping timeout: 240 seconds)
[16:17:13] *** Quits: bluedust_ (~bluedust@59.98.49.134) (Remote host closed the connection)
[16:17:13] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:17:14] *** Joins: Amadiro (~Amadiro@31.11.55.179)
[16:17:15] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:17:25] *** Joins: eliasy (~user@2804:14c:4e6:85ba:8e12:ccb6:d537:9fe6)
[16:18:50] *** Joins: RiFo (~RiFo@user/rifo)
[16:18:51] *** Joins: zeden (~zeden@user/zeden)
[16:19:39] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[16:19:59] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[16:20:00] *** Joins: zeden (~zeden@user/zeden)
[16:20:18] *** Joins: CoolerX (~CoolerX@user/coolerx)
[16:20:41] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:412c:4a02:6319:f4bb)
[16:20:49] *** Joins: summersault (~summersau@179.221.251.36)
[16:21:46] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[16:21:52] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 250 seconds)
[16:23:32] *** Joins: Trieste (T@user/pilgrim)
[16:24:05] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:401e:6c79:eb9f:cb4e) (Ping timeout: 268 seconds)
[16:24:20] *** Quits: ph88 (~ph88@2a02:8109:9e00:71d0:f12b:1b26:c11c:e722) (Quit: Leaving)
[16:25:17] *** Quits: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[16:25:46] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[16:26:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:28:45] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[16:28:58] *** Joins: summersault (~summersau@179.221.251.36)
[16:29:28] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[16:29:37] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:30:06] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:30:08] *** Joins: Z-cat (~Z-cat@user/z-cat)
[16:30:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:30:37] *** Joins: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net)
[16:30:58] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[16:31:14] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 260 seconds)
[16:31:15] *** Joins: zeenk (~zeenk@2a02:2f04:a208:c500:649e:b5e2:d15c:7960)
[16:31:27] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[16:31:50] *** Joins: arinov (~arinov@78.162.47.28)
[16:32:21] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:32:27] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[16:34:18] *** Joins: bluedust (~bluedust@59.98.49.134)
[16:34:53] *** Quits: grooverman (~grooverma@177.102.119.200) (Remote host closed the connection)
[16:35:32] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[16:36:01] *** Joins: grooverman (~grooverma@152.254.155.54)
[16:36:08] *** Joins: Plain-Sight (~Plain-Sig@152.26.89.232)
[16:36:40] *** Joins: Payam (~Payam@138.106.57.132)
[16:38:11] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:39:02] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:40:06] *** Joins: pmcnabb9 (~pmcnabb@user/pmcnabb)
[16:40:47] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:40:48] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:42:01] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:42:14] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 250 seconds)
[16:42:14] *** pmcnabb9 is now known as pmcnabb
[16:42:37] *** Quits: vanessa (~vanessa@103.160.128.7) (Ping timeout: 240 seconds)
[16:43:19] *** Joins: madprops (hj8oijo@user/madprops)
[16:43:40] <madprops> is there a method to rename a file by specifying first the original path, and then just the  new basename?
[16:44:56] *** Joins: vanessa (~vanessa@103.160.128.10)
[16:45:12] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[16:46:33] *** Joins: summersault (~summersau@179.221.251.36)
[16:46:36] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[16:46:44] *** Quits: michagogo (uid14316@user/michagogo) (Quit: Connection closed for inactivity)
[16:48:10] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[16:48:28] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[16:48:34] *** Parts: madprops (hj8oijo@user/madprops) (Leaving)
[16:49:00] *** Quits: _SKiTZO (~SKiTZO@64.89-10-146.nextgentel.com) (Remote host closed the connection)
[16:49:20] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:316b:27c2:da79:315)
[16:50:28] *** Quits: CoolerX (~CoolerX@user/coolerx) (Read error: Connection reset by peer)
[16:51:11] *** Joins: CoolerX (~CoolerX@user/coolerx)
[16:51:34] *** Quits: vanessa (~vanessa@103.160.128.10) (Ping timeout: 256 seconds)
[16:51:36] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:412c:4a02:6319:f4bb) (Ping timeout: 245 seconds)
[16:53:20] *** Joins: vanessa (~vanessa@103.160.128.7)
[16:54:22] *** Quits: Kimeon (~Kimeon@183.87.15.39) (Quit: Client closed)
[16:55:14] <The-Compiler> wow mad props for that patience I guess
[16:56:47] *** Joins: Jaro2k (~Jaro2k@host-185-78-133-160.jmdi.pl)
[16:58:32] *** Joins: Zweimer (~Zweimer@p50971a57.dip0.t-ipconnect.de)
[16:58:48] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[16:59:27] *** Joins: arinov_ (~arinov@78.162.46.154)
[16:59:30] *** Quits: arinov (~arinov@78.162.47.28) (Ping timeout: 256 seconds)
[17:01:21] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[17:02:15] *** Joins: neverfindme (~hayden@158.123.160.43)
[17:02:54] *** Joins: han-solo (~hanish@user/han-solo)
[17:04:37] *** Quits: jay-m1261 (~jay-m@129.0.77.195) (Ping timeout: 240 seconds)
[17:04:37] *** Quits: jay-m126 (~jay-m@129.0.77.195) (Ping timeout: 240 seconds)
[17:04:40] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[17:05:03] *** Joins: jay-m126 (~jay-m@129.0.77.195)
[17:05:49] *** Parts: Jaro2k (~Jaro2k@host-185-78-133-160.jmdi.pl) ()
[17:06:11] *** Quits: BinarySavior_ (~BinarySav@josh.vet) (Remote host closed the connection)
[17:06:22] *** Joins: sydbarret (~anton@static-186-121-195-51.acelerate.net)
[17:06:27] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[17:06:36] *** Joins: aniketgm (~aniketgm@49.36.61.69)
[17:06:57] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 240 seconds)
[17:07:23] <sydbarret> how can i convert this to google ads?    oauth2_client = oauth2.GoogleRefreshTokenClient(client_id, client_secret, refresh_token)
[17:07:31] <sydbarret> that was old adwords api
[17:07:42] *** Quits: jay-m126_ (~jay-m@129.0.77.195) (Remote host closed the connection)
[17:08:19] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[17:08:24] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[17:08:25] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:08:41] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[17:08:51] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:e880:89ff:3e74:550f) (Ping timeout: 250 seconds)
[17:09:42] *** Joins: revolve (~u0_a227@82-132-238-254.dab.02.net)
[17:09:43] *** Quits: jay-m126 (~jay-m@129.0.77.195) (Ping timeout: 268 seconds)
[17:09:54] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[17:09:56] <d1rewolf> Yhg1s: thanks very much pointing me to attrs. It's awesome ;)
[17:09:57] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:10:26] *** Quits: bmr (~bmr@user/bmr) (Ping timeout: 260 seconds)
[17:10:27] *** Joins: jazzy2 (~jaziz@user/jaziz)
[17:10:50] *** Joins: jay-m126 (~jay-m@129.0.77.195)
[17:11:26] *** BlessJah_ is now known as BlessJah
[17:11:52] *** Joins: jay-m126_ (~jay-m@129.0.77.195)
[17:12:46] *** esv_ is now known as esv
[17:13:00] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[17:13:06] *** Quits: esv (~esv@74.124.178.154) (Quit: Leaving)
[17:13:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[17:13:29] *** Joins: andreasbuhr (~quassel@p548dde8f.dip0.t-ipconnect.de)
[17:13:37] *** Joins: esv (~esv@74.124.178.154)
[17:14:52] *** Quits: Plain-Sight (~Plain-Sig@152.26.89.232) (Quit: Client closed)
[17:15:19] *** Joins: summersault (~summersau@179.221.251.36)
[17:15:44] *** Joins: bmr (~bmr@user/bmr)
[17:15:53] *** Joins: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr)
[17:15:56] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[17:16:51] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[17:18:23] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 250 seconds)
[17:18:35] *** Quits: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr) (Changing host)
[17:18:35] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[17:18:54] *** Quits: qpdb (~qpdb@user/qpdb) (Quit: WeeChat 3.3)
[17:20:37] *** Quits: jay-m126 (~jay-m@129.0.77.195) (Ping timeout: 240 seconds)
[17:21:02] <debnet> attrs is fraking awesome.
[17:21:22] *** Joins: panella32 (~panella32@45.67.97.26)
[17:21:26] <panella32> When I'm trying to open a VOD show of a website the browser sends lots of requests and among them there is a "get" request whose header includes a token. I can manually find that request and its token using tools like Fiddler/Wireshark but I'm curious if there's a way to capture it automatically?
[17:21:29] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[17:21:29] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[17:21:29] *** Joins: JordiGH (~jordi@user/jordigh)
[17:21:36] *** Quits: jay-m126_ (~jay-m@129.0.77.195) (Ping timeout: 256 seconds)
[17:21:43] *** Joins: pycode (~pycode3@2001:b07:5d28:551:61cf:4bdb:4826:f1c3)
[17:22:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:23:56] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[17:24:05] *** Joins: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr)
[17:24:37] *** Quits: Guest9505 (~roro@78.192.226.182) (Ping timeout: 240 seconds)
[17:25:28] *** Joins: jay-m126 (~jay-m@129.0.77.195)
[17:25:39] *** Joins: jay-m126_ (~jay-m@129.0.77.195)
[17:25:59] *** yourfate_ is now known as yourfate
[17:26:00] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[17:26:12] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[17:26:13] *** Quits: arinov_ (~arinov@78.162.46.154) (Ping timeout: 240 seconds)
[17:26:23] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:fd84:e20e:591b:a89) (Quit: Leaving)
[17:26:28] *** Joins: arinov_ (~arinov@78.162.147.102)
[17:26:35] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[17:26:44] *** Quits: dbbr (~dbbr___@2804:5f80:70a0:3700:2045:891:e5c3:a307) (Ping timeout: 252 seconds)
[17:26:54] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[17:27:16] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:27:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:28:07] *** Joins: jay-m1261 (~jay-m@129.0.77.195)
[17:29:14] *** Joins: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c)
[17:30:40] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:30:41] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 268 seconds)
[17:30:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[17:31:03] *** Quits: grooverman (~grooverma@152.254.155.54) (Read error: Connection reset by peer)
[17:31:55] *** SallyAhaj__ is now known as SallyAhaj
[17:32:06] *** Joins: grooverman (~grooverma@177.102.119.200)
[17:32:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:32:44] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[17:32:50] *** Quits: bluedust (~bluedust@59.98.49.134) (Remote host closed the connection)
[17:33:37] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[17:35:02] *** Quits: arinov_ (~arinov@78.162.147.102) (Ping timeout: 240 seconds)
[17:35:06] *** Joins: arinov (~arinov@78.162.147.120)
[17:35:38] *** Quits: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c) (Ping timeout: 260 seconds)
[17:36:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:37:10] *** Quits: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr) (Changing host)
[17:37:10] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[17:37:54] *** Joins: califax- (~califax@user/califx)
[17:39:13] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[17:39:18] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[17:39:18] *** califax- is now known as califax
[17:40:53] <leitz> Recommended tutorial for building a REST API?
[17:41:36] *** Joins: roro (~roro@78.192.226.182)
[17:41:53] *** Quits: neverfindme (~hayden@158.123.160.43) (Quit: Leaving)
[17:42:00] *** roro is now known as Guest6693
[17:42:30] <grym> leitz: design wise, or implementation wise
[17:43:46] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 250 seconds)
[17:43:59] <leitz> grym, I'm still on the standard library, and I'm trying to figure out the very basics. In this case, working code gives me a success to build on.
[17:44:16] *** Joins: Barones (~Barones@user/Barones)
[17:45:12] <leitz> I *may* be going to a new team that I *think* uses Python. They mentioned REST APIs, and the more I know the better I'll be able to serve. Still not sure if they allow non-standard library code though.
[17:45:42] *** Joins: upsala (~zcb@185.213.155.232)
[17:45:44] <grym> leitz: they'd better, there are no production webservers in stdlib :)
[17:45:49] *** Quits: zeenk (~zeenk@2a02:2f04:a208:c500:649e:b5e2:d15c:7960) (Quit: Konversation terminated!)
[17:45:59] <The-Compiler> was about to say, good luck building a REST API with the stdlib only
[17:46:29] <d3x> You don't want to work in a team that does not allow 3rd party code
[17:47:02] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:47:27] *** Joins: morteza24 (~morteza24@178.131.28.98)
[17:47:38] *** Quits: dj_pi (~dj_pi@d4-50-214-166.col.wideopenwest.com) (Quit: Leaving)
[17:47:48] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:48:00] <grym> with the caveat that i don't write things that directly create or render or manage or have anything to do with _websites_, i have come to think (roughly) of REST as "a command line tool that for some weird reason gets JSON over the wire instead of text from sys.argv"
[17:48:06] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 250 seconds)
[17:48:18] <grym> endpoints are subcommands
[17:48:37] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:b89f:3526:404:e4fa)
[17:48:57] <grym> i do not know if this "monads are a burrito!" epiphany is good for anyone else, but ... i think the analogy works.   (https://byorgey.wordpress.com/2009/01/12/abstraction-intuition-and-the-monad-tutorial-fallacy/amp/ )
[17:49:13] <han-solo> fastapi goes brrr
[17:49:19] <grym> and yeah, i use fastAPI
[17:49:25] <grym> free docs and pydantic are great
[17:49:36] *** Joins: yaraju (~yaraju@user/yaraju)
[17:49:51] <han-solo> yep
[17:50:02] *** Joins: bluedust (~bluedust@59.98.49.134)
[17:51:08] *** Joins: pro_z (~pro_z@37.214.69.237)
[17:51:17] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[17:53:06] <leitz> d3x, I want to work on a team that pays my bills. I care less about pip-ness and more about taking care of my family.
[17:53:43] <grym> leitz: it's more a question of how much you like beating your head against a brick wall every day, but i understand your point
[17:53:47] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:54:34] <leitz> grym, I'm a couple of paragraphs into that Monad URL, and that's the path I usually take. I've been playing with socketserver, and today moved to http.server. Next step is figuring out a minimal viable REST API.
[17:55:04] <leitz> Of course, if the team uses PyTest, MongoDB, Flask, etc, I'm all in.
[17:55:10] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:b89f:3526:404:e4fa) (Quit: I have gone to sleep. ZZZzzz…)
[17:55:29] <leitz> By starting at the bottom I'll have a more solid understanding.
[17:55:31] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[17:55:35] <grym> if they don't, we can reasonably infer some unhappy things about their work culture, is what you're hearing here
[17:55:55] <grym> i don't think thaat http.server had ~anything to do with design for APIs, but ymmv
[17:56:07] *** Joins: nunggu (~q@user/nunggu)
[17:56:20] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[17:56:25] <leitz> grym, I understand. However, I've lived in those sorts of work cultures for decades. They aren't bad, and I can come home and play with whatever I like.
[17:56:26] <grym> and i understand the wheel-reinvention-as-understanding; just know that you're likely to get solution-oriented answers more than the other kind
[17:56:26] <han-solo> i just don't want to reinvent the wheel....
[17:56:51] <han-solo> and this wheel is pretty tricky wheel, i'd assume. I just wanna use the high level apis and be done with it
[17:57:05] <leitz> han-solo, I want to understand the wheel better, so when I use it, I know what I'm doing.
[17:57:06] *** Joins: Duality (~robert@217.119.239.2)
[17:57:09] <Duality> hey all
[17:57:32] *** Quits: arinov (~arinov@78.162.147.120) (Ping timeout: 240 seconds)
[17:57:48] <Duality> is it possible to get the contents of a webpage that is behind a login essentially I want to grab a webpage from a wiki where for example i am already logged in with firefox
[17:58:01] *** Joins: arinov (~arinov@78.162.47.24)
[17:58:31] <Wooble> Duality: it's possible to login through python-run http requests the same way your browser does it. What way that is depends on the site, though.
[17:59:16] <leitz> It took a low level understanding to know if I needed 27.5 or 700C.
[17:59:37] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:00:04] <grym> leitz: well, one's comfortable and the other's hot enough to solder with
[18:00:09] <grym> :)
[18:00:24] <morteza24> !ix
[18:00:39] <grym> or if you mean bike tire dimensions... mostly, your rim geometry :)
[18:00:44] <grym> (and brake choice)
[18:00:51] <leitz> grym, :)
[18:01:32] *** Quits: Dotz0cat (~Dotz0cat@h59.213.213.151.dynamic.ip.windstream.net) (Ping timeout: 250 seconds)
[18:01:35] <grym> (and obviously it's 650b!!!)
[18:01:48] <leitz> Most of the API tutorials I've seen use Flask or Bottle, which are great, but not what I need for the moment.
[18:01:48] <han-solo> morteza24: Upload to http://ix.io from your terminal: <command> | curl -n -F 'f:1=<-' http://ix.io # or add a function to your .bashrc: ix() { curl -n -F 'f:1=<-' http://ix.io; } # examples: ix < file; command | ix
[18:02:07] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f444:a000:4917:bc56:f54d:812b)
[18:02:27] <grym> leitz: fastAPI should absolutely be on your radar though, once you feel grounded enough
[18:03:17] <jinsun> han-solo: good bot :D
[18:03:26] <leitz> grym, I've seen fastAPI before, but haven't gotten to it yet. I have personal projects that it would probably be great for.
[18:03:33] <Duality> Wooble: I don't want to enter the password in my python script it's stored in firefox. and not sure what you meen in what way it depends on the site.
[18:03:35] <grym> leitz: it's like flask, but without the suck!
[18:03:35] *** Quits: arinov (~arinov@78.162.47.24) (Ping timeout: 252 seconds)
[18:03:48] <han-solo> jinsun: :D
[18:03:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[18:04:03] <leitz> grym, ah, so it would replace Flask/Bottle?
[18:04:19] <grym> leitz: i've converted two projects at work from flask to fastAPI; both times i've reduced total project code on the order of hundreds of lines of source code
[18:05:02] <grym> leitz: yes, i think so
[18:05:10] <Wooble> Duality: you might be able to get the cookie out of firefox (or drive already-logged-in firefox with something like selenium), then.
[18:05:17] <leitz> grym, would you want something line NGINX in front of fastAPI? Or send client requests straight to fastAPI?
[18:05:41] <grym> leitz: i put uvicorn or gunicorn in front, but nginx works fine too; you will want something like that for ~any python web framework
[18:05:52] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:e4b0:adf8:305f:a850) (Ping timeout: 250 seconds)
[18:05:59] <leitz> for the record, nothing I do on my personal projects really gets resource intensive.
[18:06:15] <grym> flask explicitly tells you not to use its baked in tools in prod, for example
[18:06:33] *** Joins: Dotz0cat (~Dotz0cat@h184.231.187.173.dynamic.ip.windstream.net)
[18:06:42] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[18:06:50] <leitz> yeah, same for http.server. I'm just doing proof of concept and self-training, though.
[18:06:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[18:07:26] <grym> http.server is _really_ not meant for real work, correct
[18:08:03] <leitz> yeah, but the first time I had a little bit of code that actually gave me a web page was heart warming.
[18:08:20] <Duality> Wooble: yea was looking at selenium but I don't fully understand how that works yet :)
[18:08:34] <grym> leitz: oh yeah, i felt that way about curling something to my code and getting a dict back
[18:08:39] <grym> "ha hA! it worked!"
[18:08:59] *** Joins: Vonter (~Vonter@user/vonter)
[18:09:51] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:10:23] <d1rewolf> debnet: indeed it is ;)
[18:10:36] *** Joins: psychothan49 (~psychotha@cpe-72-230-110-138.twcny.res.rr.com)
[18:10:43] *** Quits: psychothan49 (~psychotha@cpe-72-230-110-138.twcny.res.rr.com) (Client Quit)
[18:11:31] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:12:00] <leitz> grym, oohhh....there's a book that talks about fastAPI. "Building Data Science Applications with FastAPI".
[18:12:10] <grym> leitz: the actual docs are pretty good too :P
[18:12:12] <leitz> Though I'm not much of a data scientest.
[18:12:38] *** Quits: Deneb (~johnch@23.143.9.51.dyn.plus.net) (Quit: Leaving)
[18:12:49] <han-solo> https://fastapi.tiangolo.com/tutorial/first-steps/
[18:13:35] *** Joins: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net)
[18:13:53] <Duality> Wooble: got it as far as using the right profile but it just opens an instance of the web browser but I want to just say Grab the contents of this page for me please
[18:14:04] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-35e0-06b2-095d-de4d.res6.spectrum.com)
[18:14:05] <Duality> not sure if you have any experience with selenium or not though :D
[18:14:34] *** Joins: esther (~esther@2607:fb90:5fe4:c79a:d872:c37:c758:fb05)
[18:15:10] <morteza24> I can't install yellowbrick. here's the out put of `pip install yellowbrick`: https://paste.rs/xEs
[18:15:25] <morteza24> guess I should go back to python 3.9 right?
[18:15:31] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[18:15:41] *** Joins: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr)
[18:15:47] *** Quits: Omega037-B (~Omega037@047-233-057-109.res.spectrum.com) ()
[18:16:16] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[18:17:10] *** Quits: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr) (Changing host)
[18:17:10] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[18:17:24] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:18:09] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Client Quit)
[18:18:18] *** Quits: newdimension (~newdimnes@user/newdimension) (Read error: Connection reset by peer)
[18:18:19] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[18:18:36] *** Quits: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[18:18:37] *** Quits: esther (~esther@2607:fb90:5fe4:c79a:d872:c37:c758:fb05) (Ping timeout: 240 seconds)
[18:18:44] <grym> morteza24: i think so
[18:18:47] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[18:18:49] *** Quits: eliasy (~user@2804:14c:4e6:85ba:8e12:ccb6:d537:9fe6) (Read error: Connection reset by peer)
[18:18:49] <grym> that's probably the easiest
[18:18:49] <Yhg1s> morteza24: it's trying to install numpy 1.19.5, which is from January last year and does not provide binary wheels for Python 3.10 (because 3.10 wasn't out yet). Compilation from source may be possible, but may require things you haven't installed.
[18:19:06] *** Quits: janemba (~janemba@94.204.254.193) (Ping timeout: 245 seconds)
[18:19:50] <morteza24> Yhg1s why doesn't it use the latest version of numpy? :(
[18:20:12] <Yhg1s> morteza24: yellowbrick explicitly says "numpy<1.20,>=1.16.0" (see line 4 of your paste).
[18:20:14] <sco1> Because the release on PyPI is from a year ago
[18:20:32] <Wooble> morteza24: ask them? pinning <1.20 seems weird; it's not like numpy's known for breaking backwards compatibility
[18:20:33] *** Quits: Zweimer (~Zweimer@p50971a57.dip0.t-ipconnect.de) (Quit: Client closed)
[18:21:03] <sco1> It is unpinned on their development branch
[18:21:12] <sco1> Last July
[18:22:32] <han-solo> https://github.com/DistrictDataLabs/yellowbrick/pull/1184
[18:22:46] *** Joins: kristijonas (~kristijon@88-119-92-43.static.zebra.lt)
[18:22:48] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[18:22:54] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:23:04] <han-solo> maybe install from @git ?...
[18:24:02] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 240 seconds)
[18:24:14] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:25:20] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[18:26:04] *** Joins: VaniaPy (~VaniaPy@79.103.221.163.dsl.dyn.forthnet.gr)
[18:26:17] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[18:26:54] <Duality> figured out why it was blocking it was waiting on some dialogs for me to click on to login as certain users.
[18:26:58] <morteza24> so I just clone the repo and run pip install?
[18:27:26] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--78.oracle-ocna.com)
[18:27:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:28:50] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[18:29:25] <sco1> Pip can install from a git repository directly: pip install git+<url.git>@<commit or branch>
[18:29:59] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:30:57] *** Joins: mxp (~mxp@185.16.205.131)
[18:31:02] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[18:31:07] <leitz> Hmmm... trying to add "?this=that&them=us" to an API call, reading: https://www.tutorialspoint.com/accessing-the-internet-using-the-urllib-request-module-in-python
[18:31:16] <leitz> Getting:   https://bpa.st/ZSCQ
[18:31:50] <morteza24> thank you guys so much
[18:32:03] *** Joins: janemba (~janemba@185.107.80.152)
[18:32:03] <leitz> I'm betting on "operator error", myself...
[18:32:45] *** Quits: GeorgeK_ (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[18:33:26] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[18:33:40] <zerosum> hey all if I have two dictionary of lists and say I want to iterate over each item on both lists would this code do it? https://bpa.st/4Z3Q
[18:33:47] <leitz> Hmm, even when I fix the "date" (should be data) on lin5, I get:   rllib.error.HTTPError: HTTP Error 405: Method Not Allowed
[18:34:42] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[18:34:42] <novapy> leitz You would need to send a different format of POST request
[18:34:51] <han-solo> leitz: you have a typo `date = data.encode('ascii')`
[18:35:12] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:35:21] <han-solo> er
[18:35:45] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:35:49] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[18:36:00] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-90c0-942b-858d-62ce.res6.spectrum.com)
[18:36:01] <han-solo> leitz: maybe the post endpoint doesn't support POST ?
[18:36:17] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[18:36:21] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:36:22] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[18:36:47] *** Quits: sydbarret (~anton@static-186-121-195-51.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[18:36:48] <leitz> And the API documentation for the actual site works:   https://travellermap.com/?sector=Spinward Marches&hex=1526
[18:37:25] *** Joins: sydbarret (~anton@static-186-121-195-51.acelerate.net)
[18:37:50] <novapy> leitz: any particular eason for using urllib over requests?
[18:38:07] *** Quits: kristijonas (~kristijon@88-119-92-43.static.zebra.lt) (Remote host closed the connection)
[18:38:23] *** Joins: bluedust_ (~bluedust@103.161.144.140)
[18:38:25] <leitz> novapy, I'm staying with the standard library while I learn the plumbin.
[18:38:28] *** Joins: kristijonas (~kristijon@88-119-92-43.static.zebra.lt)
[18:38:31] <han-solo> leitz: where is the api docs ?
[18:38:33] <leitz> plumbing.
[18:39:10] *** Joins: bluedus__ (~bluedust@185.248.85.10)
[18:39:16] <leitz> han-solo, about 1/3 of the way down the page. Look for "API URLs:"    https://travellermap.com/doc/api
[18:40:03] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[18:41:02] <han-solo> thanks
[18:41:24] *** Quits: grooverman (~grooverma@177.102.119.200) (Read error: Connection reset by peer)
[18:41:24] *** Quits: bluedust (~bluedust@59.98.49.134) (Ping timeout: 250 seconds)
[18:42:22] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:42:37] *** Quits: bluedust_ (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[18:42:43] *** Joins: grooverman (~grooverma@152.254.155.54)
[18:43:12] <grym> leitz: (i know this is a broken record) why do you think the stdlib is a better option for learning the plumbing than other libraries?  In general that's not a very strong prior
[18:46:29] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[18:47:07] <leitz> grym, well, it's one of the many reasons. I've been a "low level" admin for a long time, and that's mostly how I think. Things like FastAPI, etc, are more full featured, but once you step out of the standard library you're at more risk for things like the recent NPM payment issue. Since many/most third party libraries use other third-party libraries, the risk increase can be exponential.
[18:47:17] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[18:47:36] <leitz> There's also the issue of dependency management, as mentioned above.
[18:47:52] <grym> leitz: ok, just don't want you to labor under the false belief that the stdlib represents any particularly golden way to do a particular thing
[18:47:56] <grym> (in general it doesn't)
[18:48:04] *** Joins: tomasfarias8 (~tomasfari@user/tomasfarias)
[18:48:39] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 256 seconds)
[18:48:52] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[18:48:53] <leitz> grym, well understood. I realize that the standard library can do a lot of things, but third party libraries can do a lot more. I'm not smart enough to compete with FastAPI, or much of anything else.
[18:48:59] *** Quits: __mitu (~Thunderbi@86.126.7.110) (Quit: __mitu)
[18:49:11] *** Quits: VaniaPy (~VaniaPy@79.103.221.163.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[18:49:14] <grym> leitz: that's not quite my point
[18:49:35] *** Joins: bluedust (~bluedust@103.161.144.140)
[18:49:57] *** Quits: tomasfarias (~tomasfari@user/tomasfarias) (Ping timeout: 240 seconds)
[18:49:57] *** tomasfarias8 is now known as tomasfarias
[18:50:00] <han-solo> i couldn't find a post api with url 'https://travellermap.com/' maybe it's something else
[18:50:14] <leitz> grym, I *think* your point is that the standard library isn't necessarily the best way, correct? Or close?
[18:50:18] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:50:57] <grym> leitz: yeah, there's nothing particularly sacred about it's code quality or implementation w/r/t a particular idea
[18:51:23] <leitz> han-solo, did you see the line:  https://travellermap.com/go/sector/hex ? If you change sector to spin and hex to 1526, it should work.
[18:51:44] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:51:53] <leitz> grym, would you agree that the std lib gets more code review than the *average* third party library?
[18:51:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[18:52:36] <novapy> leitz: I tried doing it with the requests module, and I got a response in the form of an html page.
[18:52:37] <leitz> han-solo, or do I misunderstand your statement?
[18:52:50] *** Quits: bluedus__ (~bluedust@185.248.85.10) (Ping timeout: 256 seconds)
[18:52:56] *** Quits: morteza24 (~morteza24@178.131.28.98) (Quit: Leaving)
[18:53:11] <han-solo> ...but that is a different endpoint
[18:53:14] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:53:32] <grym> leitz: no
[18:53:51] <jinsun> leitz: have you looked at urlllib docs? it says use requests instead urllib
[18:53:52] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:53:53] <grym> leitz: (fsvo 'average' and 'third party library', i suppose)
[18:54:36] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:54:58] <leitz> novapy, I changed line 7 in the post to:    with urllib.request.urlopen('https://travellermap.com/go/spin/1526') as response:, and it worked. So my guess is I'm botching the data or encoding.
[18:55:01] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[18:55:17] *** Joins: mike18 (~geri@71-220-52-187.mpls.qwest.net)
[18:55:26] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[18:55:42] <leitz> jinsun, understood. However, the author of that statement probably doesn't expect it to cover every use case or every need. Would you agree?
[18:56:10] <ChrisWarrick> leitz: I don’t really agree
[18:56:22] <mike18> hi i have an slow api i need to get data from - i currently have a thread pool with 20 threads and measured that adding more threads does not help to read more data. could adding a second process help to be able to read more data in parallel since im i/o bound?
[18:56:50] <ChrisWarrick> leitz: requests covers effectively all use-cases there can be
[18:57:21] <jinsun> and definitely more use cases than urllib.request
[18:57:34] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[18:58:06] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[18:58:14] <leitz> Hey ChrisWarrick good morning! Does the requests module cover the "want to stay in the standard library" use case?
[18:58:15] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 268 seconds)
[18:58:56] <novapy> leitz: can you givve the link?
[18:59:02] *** Joins: sudomann (~sudomann@98.219.211.182)
[18:59:13] <ChrisWarrick> leitz: that is not a use-case
[18:59:42] <leitz> ChrisWarrick, are you assuming you know everyone's use case? Especially since you and I have disussed this before?
[18:59:44] <ChrisWarrick> leitz: that is a political decision that has many drawbacks
[18:59:51] <ChrisWarrick> leitz: no.
[19:00:06] <ChrisWarrick> leitz: I’m saying that “standard library” is not a use-case of urllib.request or requests.
[19:00:14] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[19:00:39] <leitz> novapy, sorry, there's a lot of dialoge. Which link?
[19:01:09] <novapy> leitz: to your code
[19:01:50] *** Joins: shutnoshut9 (~shutnoshu@ec2-52-29-68-122.eu-central-1.compute.amazonaws.com)
[19:02:01] *** Quits: Guest98 (~Guest98@192-222-180-235.qc.cable.ebox.net) (Quit: Client closed)
[19:02:06] <ChrisWarrick> The sole use-case of urllib.request / requests / httpx is making HTTP(S) requests to a server. It might be extended by streaming, by transparently handling json or auth, by taking care of cookies, etc..
[19:02:06] *** Parts: bancroft (~bancroft@user/bancroft) (WeeChat 3.2)
[19:02:10] *** Quits: maryo (~Maryo@user/maryo) (Remote host closed the connection)
[19:02:11] <leitz> jinsun, for the most part, I agree on requests having more use cases. I certainly wouldn't recommend building a production client on urllib.request unless you had no choice.
[19:02:30] *** Joins: maryo (~Maryo@user/maryo)
[19:02:58] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:653c:9519:8897:3200) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[19:03:02] *** Joins: Vonter (~Vonter@user/vonter)
[19:03:04] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:316b:27c2:da79:315) (Ping timeout: 250 seconds)
[19:03:10] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[19:03:17] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:653c:9519:8897:3200)
[19:03:25] <leitz> novapy, https://bpa.st/ZSCQ   Except for an earlier import of urllib.request, and the change for line 7, that's it/
[19:03:28] <leitz> it.
[19:03:32] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[19:03:39] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:7ce8:3fb1:9da3:a544)
[19:03:54] <leitz> That's also one of the reasons I really like python; not much code to do lots of cool stuff.
[19:04:31] *** Joins: dez (uid92154@user/dez)
[19:04:47] *** Joins: sudomann (~sudomann@98.219.211.182)
[19:05:17] *** Quits: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[19:05:31] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:e880:89ff:3e74:550f)
[19:05:34] <novapy> leitz: Is this the proper endpoint? : response = get( "https://travellermap.com/go/spin/1526", params={"sector": "Spinward Marches", "hex": 1526})
[19:05:59] <leitz> ChrisWarrick, do you mind if we agree to disagree on this? I'll do my best to promote other python code where it seems to fit the need, but I would ask that you respect the paramaters I choose to work under. Okay?
[19:06:30] <leitz> novapy, with the long url like that, the params aren't needed.
[19:06:37] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 240 seconds)
[19:06:42] *** Joins: frost (~frost@user/frost)
[19:07:00] <leitz> novapy, and where you use "params", the tutorial used "values". That may be the origin of the original issue.
[19:07:07] <leitz> Well, and lousy typing on my part.
[19:07:43] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[19:08:07] <ChrisWarrick> leitz: You don’t need to agree with me. I would recommend working towards improving the circumstances that cause you to use substandard code in the stdlib.
[19:08:15] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:91db:ac1b:ff6d:eb34)
[19:08:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[19:08:57] *** Quits: tracey (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[19:09:05] <novapy> leitz: if you were to get the data with curl, what would the url be?
[19:09:05] <gitesh> How can I improve this code --------> https://dpaste.org/AsdE
[19:09:34] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:09:44] *** Quits: zmt00 (~zmt00@user/zmt00) (Remote host closed the connection)
[19:09:52] <ChrisWarrick> gitesh: What does this code do?
[19:10:03] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48agstdwh6k6osf.ipv6.telus.net)
[19:10:07] <ChrisWarrick> gitesh: Or more precisely, what is the goal of this code?
[19:11:37] <leitz> novapy, it's a lot of data:    curl https://travellermap.com?sector=spin&hex=1526
[19:11:43] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:f9d2:19cb:6c68:664)
[19:12:19] <leitz> novapy, urllib.request handles "https://travellermap.com/go/spin/1526", but curl does not.
[19:12:59] <novapy> leitz: I just wanted to verify that my python output vs curl's output
[19:13:30] <leitz> novapy, gotcha.
[19:14:14] <Wooble> gitesh: (also, dpaste isn't great; your snippet is already gone.)
[19:14:23] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:15:06] <Wooble> anyway ChrisWarrick wasn't asking a rhetorical question, although it would have been a good one since almost any mode can be improved by documentation and making it really clear what it's doing :)
[19:15:14] <Wooble> s/mode/code/
[19:15:24] <SnoopJ> Wooble, do you think it's not-great because of the auto-expiry, or just that the default value is quite low?
[19:15:41] <ChrisWarrick> SnoopJ: there’s a publicly-accessible delete button
[19:16:07] <Wooble> SnoopJ: the 1 hour default is fine; it being deleted by some random click 4 minutes after pasting... ugh.
[19:17:02] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[19:17:39] *** Joins: cheater (~Username@user/cheater)
[19:18:00] <novapy> leitz: I got it using the requests library quite easily
[19:18:13] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.111)
[19:18:20] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[19:18:47] <SnoopJ> ah, right
[19:20:10] <novapy> leitz: quite simply this ->  requests.get("https://travellermap.com", params={"sector": "spin", "hex": 1526}).content
[19:20:57] *** Quits: Tatarize (~Tat@137-025-218-069.res.spectrum.com) (Ping timeout: 240 seconds)
[19:21:05] <leitz> novapy, this works too:   https://bpa.st/K4DA
[19:21:16] *** Joins: Naan (~Naan@user/naan)
[19:21:20] *** Joins: sudomann (~sudomann@98.219.211.182)
[19:21:37] <supakeen> 5https://github.com/DarrenOfficial/dpaste/issues/130
[19:21:43] <supakeen> related issue i made in 2019
[19:22:06] *** Joins: vitali64 (~vitali64a@xdsl-31-164-198-163.adslplus.ch)
[19:22:26] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--78.oracle-ocna.com) (Ping timeout: 245 seconds)
[19:22:59] <SnoopJ> "I do not believe this" yikes
[19:24:36] *** Quits: kristijonas (~kristijon@88-119-92-43.static.zebra.lt) (Remote host closed the connection)
[19:24:56] *** Joins: kristijonas (~kristijon@88-119-92-43.static.zebra.lt)
[19:24:59] *** Joins: fdsdf (~fdsdf@178.49.152.42)
[19:25:33] <fdsdf> how did they read files in loop when you couldn't iterate over them?
[19:25:34] *** Joins: the_lanetly_052_ (~the_lanet@185.30.90.202)
[19:25:47] *** Joins: Tat (~Tat@137-025-218-069.res.spectrum.com)
[19:26:05] <sco1> Is there some context I'm missing?
[19:26:39] *** Joins: dntreou (~yakiza@105-209-155-171.access.mtnbusiness.co.za)
[19:26:43] <NoImNotNineVolt> lol
[19:26:48] *** Joins: Barones (~Barones@user/Barones)
[19:26:51] <NoImNotNineVolt> time to delete all pastes
[19:27:08] <SnoopJ> fdsdf, are you asking about some code that you are reading?
[19:27:08] *** Quits: shutnoshut9 (~shutnoshu@ec2-52-29-68-122.eu-central-1.compute.amazonaws.com) (Quit: Bye!)
[19:27:26] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.111) (Ping timeout: 245 seconds)
[19:27:53] <fdsdf> no, I've just discovered that you cannot iterate over a file object in early python2
[19:28:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:28:38] *** Joins: Azin (~Azin@user/azin)
[19:28:52] <nedbat> fdsdf: how early?
[19:30:02] <fdsdf> 2.0>=x<2.5
[19:30:19] *** Quits: RiFo (~RiFo@user/rifo) (Read error: Connection reset by peer)
[19:31:29] *** Joins: rsx (~dummy@ppp-188-174-136-190.dynamic.mnet-online.de)
[19:31:37] * SnoopJ squints
[19:31:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[19:31:46] <SnoopJ> is it just me or is that saying "any version at or before 2.0"
[19:32:04] <fdsdf> it's a typo
[19:32:29] <Wooble> fdsdf: was .readline() a thing?
[19:32:30] <jinsun> looks like added in 2.1? https://www.python.org/dev/peps/pep-0234/#file-iterators
[19:32:58] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:33:18] <SnoopJ> Wooble, yep
[19:33:20] <jinsun> and that pep says you used to be able to do for line in iter(file.readline, "") or while 1: line = file.readline()
[19:33:26] <Duality> Wooble: what i think needed to know what that wiki had a api xD
[19:33:29] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[19:33:35] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:33:43] <Wooble> Duality: well that certainly makes things easier.
[19:34:23] <Duality> just spend 2 hours making a solution while it could have been so much easier lol well it's extra experience for when i need it :D
[19:35:05] *** Quits: rsx (~dummy@ppp-188-174-136-190.dynamic.mnet-online.de) (Client Quit)
[19:35:08] *** Quits: gtz (~gtz@46.251.99.222) (Ping timeout: 250 seconds)
[19:35:15] <Wooble> fdsdf: anyway, reading files in chunks and finding the lines yourself was good enough for our programming forebears.
[19:35:28] * SnoopJ is consistently impressed by what Ka-Ping Yee helped add to the language
[19:35:53] *** Joins: gtz (~gtz@46.251.99.222)
[19:36:44] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[19:36:54] <novapy> is there a way to search a string without regex?
[19:37:06] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:37:09] <SnoopJ> novapy, sure. What are you searching for?
[19:37:12] <novapy> search a string for matches
[19:37:15] *** Joins: neure (~TimoSuora@dzpyrrs4yyyyyyyyyyyyt-3.rev.dnainternet.fi)
[19:37:53] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[19:38:07] <novapy> 'This is a string' search the for `this`, and return true
[19:38:27] *** Joins: pycode1 (~pycode3@93-40-5-81.ip36.fastwebnet.it)
[19:38:27] <Wooble> well for one thing that string doesn't contain "this"
[19:38:55] <Wooble> novapy: but   "this" in "some string containing this"   is True
[19:39:10] <SnoopJ> you could also casefold() the string first and then use the `in` operator
[19:39:39] *** Joins: Liblx (~Alex@2a02:810c:280:59c:9ca7:ab60:462e:5792)
[19:39:40] <novapy> what does casefold do?
[19:39:54] *** Quits: pycode (~pycode3@2001:b07:5d28:551:61cf:4bdb:4826:f1c3) (Ping timeout: 250 seconds)
[19:39:59] <Wooble> novapy: basically makes it all lowercase.
[19:40:04] <SnoopJ> "Casefolding is similar to lowercasing but more aggressive because it is intended to remove all case distinctions in a string."
[19:40:10] <SnoopJ> https://docs.python.org/3/library/stdtypes.html#str.casefold
[19:40:43] <Wooble> if you're not dealing with turkish or german you can largely ignore the details.
[19:40:48] <jinsun> it is always  'ß' causing problems
[19:40:50] <SnoopJ> you can use .lower() if you are absolutely certain that your strings contain text it will play nicely with, but .casefold() is a nice habit to build
[19:41:16] <novapy> How does it deal with emojis?
[19:41:23] <SnoopJ> emoji do not have case
[19:41:30] <Wooble> *yet* :)
[19:41:32] <SnoopJ> so they just pass right through
[19:41:37] <novapy> ok
[19:41:38] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[19:41:50] <novapy> Wooble: uppercase emojis :P
[19:42:41] * Wooble starts RFC to submit to the unicode consortium on april 1
[19:43:35] <SnoopJ> not to spoil the joke, but are there any emoji that are in category L? :P
[19:43:52] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[19:44:24] *** Quits: d0ku (~d0ku@178.43.19.180.ipv4.supernova.orange.pl) (Ping timeout: 256 seconds)
[19:44:46] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[19:45:17] <grym> jinsun: for fun orthographical reasons :)
[19:45:44] <SnoopJ> I don't actually know if case is restricted to L* but I suspect it is since there are subcategories for upper/lower
[19:45:57] *** Quits: gtz (~gtz@46.251.99.222) (Ping timeout: 240 seconds)
[19:45:58] <grym> https://darrenburns.net/posts/emoji-in-the-terminal/  came across my reading list this morning
[19:46:11] <SnoopJ> or I guess "subcategory" is a misnomer since L itself isn't a thing, you're just either in Ll, Lu, or whatever
[19:46:25] <grym> "in which we all remember that you can add emoji and wcwidth can get it wrong"
[19:47:01] <SnoopJ> grym, that isn't an incorrect way to render ZWJ sequences
[19:47:04] <SnoopJ> (I think)
[19:47:12] <Wooble> "🅰".lower() leaving it unchanged is disappointing. :)
[19:47:42] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 250 seconds)
[19:48:02] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:91db:ac1b:ff6d:eb34) (Ping timeout: 240 seconds)
[19:48:06] * SnoopJ means the first part of the article, not the bit about typesetting problems
[19:48:08] <neure> hi
[19:48:18] <neure> In this code: weights = [wd[0]] + [wd[x] + wd[x + 1] for x in range(1, w_count - 1, 2)] # what does the for loop apply to?
[19:48:29] <SnoopJ> I believe falling back on rendering each codepoint separately is explicitly-correct behavior
[19:48:50] <grym> this does explain a few things about why my weather sniffer bot mooshes characters horribly, though :)
[19:48:53] <SnoopJ> phew, I remembered correctly http://www.unicode.org/reports/tr51/#Emoji_ZWJ_Sequences
[19:49:07] <Wooble> "🔠".lower() != "🔡"
[19:49:15] <bjs> neure: it's roughly the same as going `some_list = [wd[0]]; for x in range(1, w_count - 1, 2): some_list.append(wd[x] + wd[x + 1])`
[19:49:18] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[19:49:18] <grym> wttr.in is very (too?) clever
[19:50:29] <bjs> neure: the + adds two lists together: [1,2]+[3,4] == [1,2,3,4] and in your example the second list is a "list comprehension".
[19:50:32] *** Quits: CoolerX (~CoolerX@user/coolerx) (Read error: Connection reset by peer)
[19:51:06] <SnoopJ> https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions
[19:51:29] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[19:51:37] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[19:51:39] *** Joins: ic3blx_ (~ic3blx___@87.116.182.42)
[19:51:39] *** Quits: ic3blx_ (~ic3blx___@87.116.182.42) (Changing host)
[19:51:39] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[19:52:59] *** Joins: CoolerX (~CoolerX@user/coolerx)
[19:54:49] *** ezzieygu1wuf is now known as ezzieyguywuf
[19:55:04] <novapy> Is this a valid statement: if 'string' in 'This is a string':
[19:55:45] <han-solo> sure
[19:56:18] *** Joins: gtz (~gtz@46.251.99.222)
[19:56:44] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[19:57:41] <SnoopJ> novapy, there needs to be something inside the if for it to be a complete statement, but nothing looks amiss with that.
[19:58:17] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[19:58:18] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[19:58:19] <novapy> so, assuming assuming that i have created all these variables, this is valid python? : filtered_list = [video for video in self.cache_list if query.casefold() in video.title.casefold()]
[19:58:39] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:58:43] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[19:58:49] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:58:54] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[19:59:00] <SnoopJ> it's valid syntax, yes. whether or not it does what you expect depends on the semantics of the program it's part of
[19:59:34] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[20:01:07] *** Joins: d00gy (~tonberry@user/d00gy)
[20:01:14] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:01:17] *** Quits: nicode (~nic@2607:f2c0:948c:c300:d115:fc66:1a1:1b6c) (Ping timeout: 240 seconds)
[20:01:17] *** Joins: nathanjell (~Nathan@198.166.82.183)
[20:01:25] <novapy> It seems to work fine
[20:01:33] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[20:01:47] <neure> bjs, thanks!
[20:02:10] *** Joins: maryo (~Maryo@user/maryo)
[20:02:25] <novapy> anyone familiar with rich?
[20:02:32] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[20:03:02] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:03:33] *** Joins: han-solo (~han-solo@user/han-solo)
[20:04:16] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:fd84:e20e:591b:a89)
[20:04:38] <SnoopJ> novapy, let's assume the answer to that question is yes, what's the next one?
[20:04:40] *** Joins: nicode (~nic@45.72.226.166)
[20:05:44] <novapy> When I print a date in color, the color seems to break: ie 2022-01-27T18:00:03+00:00, only half in printed in green
[20:07:04] *** Quits: Azin (~Azin@user/azin) (Remote host closed the connection)
[20:07:19] *** Joins: Snyp (~Snyp@49.207.193.236)
[20:08:25] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[20:08:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[20:08:38] <Batzy> SnoopJ: what a smooth way to enforce the "dont ask to ask" rule
[20:08:43] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[20:08:56] <neure> what kind of values does i and x get with this code: for i, x in enumerate(range(1, bar, 2))]
[20:09:16] <sco1> novapy: can you provide a reproducible example
[20:09:17] <han-solo> very easy to test
[20:09:31] <nathanjell> @neure integer count, value
[20:09:38] *** Quits: jay-m126_ (~jay-m@129.0.77.195) (Ping timeout: 260 seconds)
[20:09:51] <novapy> scol, wym?
[20:09:54] *** Quits: jay-m126 (~jay-m@129.0.77.195) (Ping timeout: 256 seconds)
[20:10:00] <nathanjell> @neure https://docs.python.org/3/library/functions.html#enumerate
[20:10:02] *** Quits: jay-m1261 (~jay-m@129.0.77.195) (Ping timeout: 240 seconds)
[20:10:12] *** Joins: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09)
[20:10:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:10:35] <sco1> novapy: "When I print a date in color" isn't helpful. Show *how* you're doing this so someone can help you.
[20:11:01] *** Joins: jay-m126 (~jay-m@129.0.77.195)
[20:11:36] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-69-109.poda.cz) (Ping timeout: 256 seconds)
[20:11:37] *** Joins: jay-m126_ (~jay-m@129.0.77.195)
[20:11:49] *** Joins: jay-m1261 (~jay-m@129.0.77.195)
[20:12:04] *** Joins: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt)
[20:12:38] *** Quits: kristijonas (~kristijon@88-119-92-43.static.zebra.lt) (Read error: Connection reset by peer)
[20:12:41] <toma> [is_prime, any, is it messy?] I made a prime checker using any but it looks like a mess. For an experience python programmer is this a mess? "not any((num/factor).is_integer() == True for factor in range(2,int(sqrt(num)) + 1))"
[20:13:29] <novapy> ```from rich.console import Console \n console = Console() \n console.print("2022-01-27T18:00:03+00:00", style="green italic")```
[20:13:33] <grym> toma: the == True is redundant
[20:13:34] *** Quits: sudomann (~sudomann@98.219.211.182) (Quit: Lost terminal)
[20:13:46] <bjs> toma: (num/factor).is_integer() is jumping out at me as suspicious
[20:13:51] <novapy> that help?
[20:14:51] *** Joins: vicfred (~vicfred@user/vicfred)
[20:15:11] <toma> bjs: thanks. i need to break the == True/False habit. the is_integer() thing is weird to me too.  I'll test a bunch of cases.
[20:15:27] <bjs> toma: I would write this with % (mod)
[20:15:31] <novapy> sco1: from rich.console import Console \n console = Console() \n console.print("2022-01-27T18:00:03+00:00", style="green italic")
[20:15:39] <sn_fk_n> is there a way to use `in` for both ints and lists of ints or similar?
[20:15:46] *** Joins: bitplane (~bitplane@2a00:23a8:826:a800:9cf7:b796:c13f:e90f)
[20:15:52] <akk> novapy: What about it? works for me. (Though I've also used termcolor for that)
[20:15:56] <bjs> sn_fk_n: i'm not sure what it would mean to use it for ints
[20:16:08] <sn_fk_n> well really just for it to be ==
[20:16:18] <bjs> sn_fk_n: I'm not following
[20:16:26] <bjs> sn_fk_n: you want `3 in 3` to do something?
[20:16:27] *** Joins: vicfred_ (~vicfred@user/vicfred)
[20:16:33] <novapy> akk is it fully in green italics?
[20:16:43] <phy1729> toma: depending on context, if you have a list of smaller primes you could use those instead of range, or at least step the range by 2 to skip even numbers
[20:16:48] <sn_fk_n> or put the second 3 in some iterable so i dont have to check the type before `in`
[20:16:51] <akk> novapy: actually no, and if I use red rather than green it's more obvious
[20:16:58] <SnoopJ> toma, that's a pretty busy line, yes. When I get a really busy generator comprehension like this, I usually capture it to a name. Here's how I might refactor that into a few lines with some good names: https://bpa.st/7DMA
[20:17:05] *** Quits: nathanjell (~Nathan@198.166.82.183) (Quit: Leaving)
[20:17:21] <SnoopJ> oops, I missed a closing paren on Line 6 of that
[20:17:28] <bjs> sn_fk_n: you can't change what `in` does, you can of course add an `if isinstance()` check to see if it's an int and if so make it a list
[20:17:40] <toma> phy1729: thanks, forgot about skipping by 2. my version also fails the small numbers like 1 :(
[20:17:54] *** Quits: Trashlord (~trash@user/trashlord) (Read error: Connection reset by peer)
[20:17:57] *** Joins: Trashlord__ (~trash@user/trashlord)
[20:18:01] <novapy> anyone else reproducing that?
[20:18:54] <bitplane> hello. is there a simple way to do 8-bit arithmetic with underflows and overflows, like constrain an output so it's in a ring of 0-255? I'm currently doing this sort of ugly thing and I don't like it: `event_no = (self.last_event + 256 - events_returned + index) & 0xFF`
[20:18:57] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 240 seconds)
[20:19:24] <SnoopJ> novapy, here's how that renders for me: https://i.imgur.com/kIcYd0l.png
[20:19:27] <toma> SnoopJ: Your version is much more readable. Thanks.
[20:19:32] <Wooble> novapy: rich.print("[green italic]2022-01-27T18:00:03+00:00[/green italic]") seems to work fine. :/
[20:19:33] <sn_fk_n> yeah that makes sense still weird i was just hoping maybe there was a nice way to be like 'equal or in'
[20:19:34] *** Quits: sydbarret (~anton@static-186-121-195-51.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[20:20:30] <novapy> Wooble I think screen is unable to display the italics, which is part of my problem
[20:20:32] <toma> bjs: (prime question) I should have done it with a mod. You're right but was trying something new.
[20:20:39] <Wooble> novapy: both rich.print() and console.print() with no style at all do some weird things though
[20:20:41] <SnoopJ> toma, an alternative refactor would be write a function `def int_divisible(num, factor): ...;  result = any not(int_divisible(num, factor) for factor in range(lo, hi))`
[20:21:40] <toma> SnoopJ: didn't know I could do "any not" in that order. thanks.
[20:21:57] <SnoopJ> toma, uh, oops, you can't. I just need to drink more of this coffee :)
[20:22:10] <SnoopJ> should read `not any(...)` as before
[20:22:26] <toma> SnoopJ: phew!
[20:22:48] *** Joins: Roey (~Roey@user/Roey)
[20:23:02] *** Joins: greedom (~greedom@p200300de670cc60012abc39657554751.dip0.t-ipconnect.de)
[20:23:09] <novapy> Wooble: thanks, I think part of my problem is the screen can't do italics
[20:23:18] *** Joins: marloi (~mark@69-165-156-124.dsl.teksavvy.com)
[20:23:50] <Wooble> novapy: nope, take out the italic part from your original and it's still broken
[20:23:57] *** Quits: iob (~iob@nat1.prg.suse.com) (Quit: WeeChat 3.4)
[20:24:49] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Remote host closed the connection)
[20:25:09] <Wooble> novapy: something definitely buggy going on in the handling of the first part of the string.
[20:25:15] *** Joins: mat001 (~mat001@213.143.69.121)
[20:26:05] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:26:21] <novapy> While using screen, it doesn't display as italics, it displays as a hilight
[20:26:37] <nedbat> Wooble, novapy: rich.Console does Python syntax highlighting.  It seems like an odd default, but there it is
[20:27:05] <marloi> What's the correct way to do importing here: I have a jupyter notebook that imports my files helper.py and data.py. Inside helper.py is a function help(). I want to call help() from both data.py and the jupyter notebook.
[20:28:09] <marduk4> gnu screen supports italics so long as the "real" terminal supports it.
[20:28:28] *** Quits: gtz (~gtz@46.251.99.222) (Read error: Connection reset by peer)
[20:28:35] <nedbat> marloi: in the notebook:  import helper     then:  helper.help()
[20:28:40] <nedbat> marloi: same in data.py
[20:28:44] *** Quits: Liblx (~Alex@2a02:810c:280:59c:9ca7:ab60:462e:5792) (Quit: WeeChat 3.2)
[20:28:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:29:23] <marloi> nedbat, and if I want to use numpy in all files I need to import it in all of them?
[20:29:46] <nedbat> marloi: yes. Any name you want to use in a file, you have to define, with class, def, =, or import
[20:29:56] <nedbat> (unless it's a builtin)
[20:30:27] <han-solo> novapy: https://imgur.com/a/RfJcRhG # for me, i have solarized theme set, so maybe it might be messing with it
[20:30:50] <han-solo> https://github.com/Textualize/rich/pull/1852
[20:31:16] <leitz> grym, thank you for the way you handled the FastAPI vs standard library conversation. I felt that you heard my position well, and you gracefully presented a good option for when it fit the operational parameters. Because of you, FastAPI is definitely on my radar.
[20:31:52] <Wooble> nedbat: even now knowing that I'm not finding how to turn it off. yeesh.
[20:31:57] *** Joins: Azin (~Azin@user/azin)
[20:31:59] *** Joins: bluedust (~bluedust@103.161.144.140)
[20:32:02] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[20:32:27] <nedbat> Wooble: Console(highlight=False)
[20:32:31] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[20:32:34] <nedbat> i don't understand the logic
[20:32:40] *** Joins: mat001 (~mat001@72.28.108.216)
[20:32:44] *** Quits: luigibu (~luigi@61.red-79-159-77.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:33:03] <nedbat> Wooble: or,  Console().print("...", highlight=False)
[20:33:12] *** Quits: grooverman (~grooverma@152.254.155.54) (Ping timeout: 250 seconds)
[20:34:27] <Wooble> nedbat: just found that as you said it. I was looking for "syntax" since they literally have an entire API just for highlighting syntax called "Syntax"
[20:34:48] *** Quits: greedom (~greedom@p200300de670cc60012abc39657554751.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:35:00] <Wooble> novapy: ^^^^
[20:35:36] *** Joins: greedom (~greedom@p200300de670cc60012abc39657554751.dip0.t-ipconnect.de)
[20:35:46] <Wooble> (probably your terminal will still render "italic" as green on black but that's not rich's problem.)
[20:36:09] *** Joins: CoolerY (~CoolerX@user/coolerx)
[20:36:57] <novapy> Yeah, I got it all working
[20:37:26] <novapy> I think with that I'm just about done with this project for now
[20:37:32] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[20:37:53] <Wooble> nice.
[20:38:15] <Wooble> unless by "just about done" you mean "this is terrible, I give up" :)
[20:38:24] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[20:38:43] <novapy> Wooble: for once, I actually got something to work very nicely
[20:39:17] *** Quits: bryce_ (~bryce@ool-457dd6ac.dyn.optonline.net) (Ping timeout: 240 seconds)
[20:39:33] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[20:39:52] *** Joins: grooverman (~grooverma@187.11.220.159)
[20:39:56] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 256 seconds)
[20:40:06] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[20:40:08] <novapy> I made a CLI program to display a youtube sub feed, with sorting options to filter
[20:40:12] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[20:40:17] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[20:41:36] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:41:48] <SnoopJ> uninformed opinion: from afar, rich seems like one of those libraries that requires you to bend your mental model of a problem to meet their solution
[20:41:56] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:42:31] <Wooble> I suspect in this case just using colorama directly would have been easier, although I don't know what the rest of the outputting looks like. :)
[20:43:02] *** Joins: magla (~gelignite@55d49292.access.ecotel.net)
[20:43:10] <akk> I like termcolor but it doesn't support italic.
[20:43:35] *** Joins: bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[20:43:35] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[20:43:38] *** Quits: Guest_8877 (~WebIRC@223.189.25.87) (Ping timeout: 252 seconds)
[20:43:40] *** Joins: zoooz (~zoooz@204.43.240.216)
[20:43:45] <zoooz> can anyone help me with this lesson?
[20:44:03] <Wooble> akk: well it's got that in common with most terminals, anyway :)
[20:44:04] <zoooz> https://www.hackinscience.org/exercises/counting-words
[20:44:31] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 245 seconds)
[20:44:33] <novapy> akk I got rid of the italics.
[20:44:36] <Wooble> zoooz: did you look at the split method? Do you remember len()?
[20:44:45] <akk> yeah, I wish terminals were more consistent about such things. My urxvt does support italics.
[20:44:51] <BinarySavior> how does os.listdir() sort the results?
[20:45:09] <marloi> When using autoreload in jupyter notebok, how can I do something %aimport mymodule as M ? I can do %aimport mymodule, but can't assign it the name M
[20:45:17] <grym> BinarySavior: arbitrarily
[20:45:18] <Wooble> BinarySavior: pretty sure it doesn't
[20:45:20] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:b45b:c4a9:477:d786)
[20:45:20] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:b45b:c4a9:477:d786) (Changing host)
[20:45:20] *** Joins: skapata (~Skapata@user/skapata)
[20:45:31] <grym> "The list is in arbitrary order, and does not include the special entries '.' and '..' even if they are present in the directory. If a file is removed from or added to the directory during the call of this function, whether a name for that file be included is unspecified."
[20:45:38] <novapy> akk: My terminal supports italics too, but not when I use screen
[20:46:19] <Wooble> novapy: probably the $TERM setting under screen.
[20:46:43] <zoooz> wooble: how do you import the split is it just   split.    ?
[20:46:43] <zoooz> \
[20:46:56] <Wooble> zoooz: it's a method on string objects; no import.
[20:47:00] <novapy> Wooble wym?
[20:47:37] <Wooble> novapy: I don't know the details but you should see what my nethack games look like to watchers when I play in screen in putty.
[20:47:48] <zoooz> oh is it   print(lin(split(text)))?
[20:48:01] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[20:48:03] <Wooble> zoooz: print(len(text.split()))
[20:48:17] <zoooz> oh i did it out fof order
[20:48:23] <novapy> Wooble haha
[20:48:26] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[20:48:29] <Wooble> novapy: (there are like 3 levels of translation going on)
[20:48:47] *** Quits: m1dnight (~christoph@christophe.dev) (Ping timeout: 256 seconds)
[20:49:02] <zoooz> it didn't work
[20:49:32] <novapy> my normal $TERM is xterm-256color, but for screen its screen.xterm-256color
[20:49:35] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[20:49:39] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:49:46] <zoooz> wooble: it didn't work
[20:49:50] *** Joins: ede (~ede@user/ede)
[20:49:54] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[20:49:59] <Wooble> zoooz: it accepts:   print(len(whetting_your_appetite.split()))  for me.
[20:50:55] <fdsdf> learning stdlib is good and well, but using splitting on whitespace to count words is a really bad idea
[20:51:34] <fdsdf> (especially in English texts)
[20:51:36] <Wooble> fdsdf: even the concept of "words" is a problem :)
[20:51:46] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[20:52:21] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[20:52:35] <BinarySavior> i named my files with numbers e.g. 1-foo.html, 2-bar.html, 3-foobar.html, 4-spam.html, 5-eggs.html
[20:52:42] <BinarySavior> then i ran os.listdir() and they came out in the order i want
[20:52:52] <zoooz> Where do I learn python so I don't have to ask you, because the python cite doesn'y teach you?
[20:52:56] <BinarySavior> is this risky to assume this will work ?
[20:53:04] <Wooble> BinarySavior: coincidentally, or OS dependent
[20:53:18] <Wooble> BinarySavior: also if your OS does do lexical sorting 10 will break it. :)
[20:53:25] <BinarySavior> haha
[20:53:27] <grym> BinarySavior: you should explicitly sort the list in the order you intend
[20:53:40] *** Joins: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net)
[20:53:46] <Wooble> BinarySavior: I'd recommend natsort if you have numbers in strings
[20:53:51] <grym> (and yeah, either natsort or zero-pad or what have you
[20:54:02] <han-solo> `sorted(that, key=lambda x: int(x.split('-')[0]))` # assuming a lot of things
[20:54:04] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:178:3bce:7e3c:a914)
[20:54:07] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[20:54:08] <zoooz> does anyone know where you can learn python?
[20:54:17] <Wooble> zoooz: see the new programmer link in /topic
[20:54:18] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-35e0-06b2-095d-de4d.res6.spectrum.com) (Quit: jarthur)
[20:54:38] <Wooble> (or the python.org docs are fine if you know another programming language)
[20:54:38] <zoooz> where do I go?
[20:54:54] <Wooble> zoooz: https://j.mp/23X7emF
[20:55:47] *** Joins: gasbag (~gasbag@024-216-149-125.res.spectrum.com)
[20:55:57] *** Quits: gasbag (~gasbag@024-216-149-125.res.spectrum.com) (Remote host closed the connection)
[20:56:10] <BinarySavior> am I remembering correctly that now conventional dict() will preserve order added?
[20:56:19] *** Joins: summersault (~summersau@179.221.251.36)
[20:56:23] <BinarySavior> or do I have to use OrderedDict()
[20:56:41] <han-solo> dict now keeps insertion order, yes
[20:56:48] <Wooble> BinarySavior: yes, although OrderedDict may still be more convenient since it has added methods
[20:57:01] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:57:16] *** Joins: mickey8 (~user@user/mickey)
[20:59:12] *** Quits: jay-m126 (~jay-m@129.0.77.195) (Ping timeout: 256 seconds)
[20:59:32] *** Quits: jay-m126_ (~jay-m@129.0.77.195) (Ping timeout: 240 seconds)
[21:00:04] *** Quits: jay-m1261 (~jay-m@129.0.77.195) (Ping timeout: 250 seconds)
[21:00:20] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[21:00:35] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:00:44] *** Joins: kristijonas (~kristijon@88-119-92-43.static.zebra.lt)
[21:00:56] <marduk4> For those that do Python for a living, what other languages do you typically work with in your jobs?
[21:00:57] *** Quits: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt) (Read error: Connection reset by peer)
[21:00:58] <zoooz> does anyone know how to create a function for this?
[21:01:02] <zoooz> https://www.hackinscience.org/exercises/first-function
[21:02:25] <zoooz> marduk4: I typically work with  c++ and fortran
[21:02:42] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[21:02:49] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[21:02:51] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[21:02:52] <zoooz> but for me python is the hardest to learn
[21:03:07] <marduk4> Oh wow I used to "support" fortran but that was so longa go
[21:03:31] *** Joins: XV8 (~XV8@2601:5cb:c001:50:ddea:1b08:25c:b114)
[21:03:41] *** Quits: XV8 (~XV8@2601:5cb:c001:50:ddea:1b08:25c:b114) (Client Quit)
[21:03:59] <zoooz> yeah now people who are hiring are starting to want people with fortran expieriance.
[21:04:35] <zoooz> because most systems used to use it.
[21:04:53] <marduk4> still used a lot in the scientific community, or at least used to be
[21:05:00] <SnoopJ> marduk4, I'm attached to a team that works almost exclusively in C++
[21:05:06] <zoooz> same
[21:05:19] <SnoopJ> you end up in Fortran more often than you might think. If there's a BLAS below you, the odds are good it's in Fortran.
[21:05:23] * leitz feels very sorry ofr SnoopJ and zoooz..
[21:05:27] <SnoopJ> leitz, why?
[21:05:46] <zoooz> yeah why?
[21:06:00] *** Joins: Shikadi (~Shikadi@50.125.190.237)
[21:06:06] <leitz> SnoopJ, c++ seems fairly "OOP tacked on after the fact".
[21:06:30] <lambda> the ++ is for the added footguns over C
[21:06:36] *** Joins: Sco-Ross (~Sco-Ross3@2a02:c7f:d049:600:3805:993d:ce44:818b)
[21:07:05] <deniska> C-pew-pew
[21:07:24] <zoooz> does anyone know how to do this?
[21:07:25] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 250 seconds)
[21:07:26] <zoooz> https://www.hackinscience.org/exercises/first-function
[21:07:35] *** vitali64matrix is now known as vitali64[m]
[21:08:00] *** Joins: CoolerX (~CoolerX@user/coolerx)
[21:08:16] <lambda> zoooz: do what?
[21:08:17] <SnoopJ> leitz, why do you say that? Objects are a big reason the language exists in the first place
[21:08:26] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[21:08:35] <leitz> What I hear, which arguably isn't really a real metric, is that C++ is more difficult because it as an addition, of sorts, to C. Other languages, desigend from the ground up to support OOP, are "better" in some neblulous sense.
[21:08:48] *** vitali64[m] is now known as vitali64[matrix]
[21:08:48] <SnoopJ> nebulous indeed
[21:09:17] <leitz> Note that I've done C, and some other languages, but not much C++. So I'm going off of second/third/fourth hand information.
[21:09:21] <zoooz> lambda: do that lesson
[21:09:27] <zoooz> https://www.hackinscience.org/exercises/first-function
[21:09:30] <zoooz> the answer
[21:09:34] *** Joins: jinsun (~quassel@user/jinsun)
[21:09:51] <lambda> zoooz: what, exactly, would be the point of us just giving you the answer? I though you want to learn python
[21:10:01] <marduk4> zoooz: `def circle_perimiter(radis):` ...calculate permiter, return perimiter.
[21:10:19] <zoooz> I do but I just need help. SO can you teach me?
[21:10:32] *** vitali64[matrix] is now known as vitali64[m]
[21:10:43] <Sco-Ross> I would start by finding out if you know how to get up a function #
[21:10:50] <SnoopJ> leitz, I didn't like it very much when I dabbled in C++03, but I like C++11 well enough. I don't care for some of the navel-gazing, but you get that in any language.
[21:11:03] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:178:3bce:7e3c:a914) (Remote host closed the connection)
[21:11:13] <lambda> zoooz: have you read the linked tutorial?
[21:11:22] *** Quits: jinsun (~quassel@user/jinsun) (Client Quit)
[21:11:33] <lambda> I recommend just playing around a bit with the given code examples to get a feel for it
[21:11:35] *** Joins: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com)
[21:11:38] <zoooz> yes but I dont understand it?
[21:11:43] *** Quits: vicfred_ (~vicfred@user/vicfred) (Quit: Leaving)
[21:11:43] <leitz> SnoopJ, my bet is you have a lot more actual data than I, so I'll alter my opinion.
[21:11:56] <leitz> Now, if I can just remember it from one day to the next...
[21:12:01] <marduk4> I haven't worked with c++ since... sometime around 1994
[21:12:12] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 250 seconds)
[21:12:15] <zoooz> lil I wasn't even born.
[21:12:17] <SnoopJ> leitz, just curious why it should be a sorry thing is all. I like programming and I try to keep in mind that languages are tools anyway
[21:12:18] <zoooz> lol
[21:12:21] <marduk4> i imagine it's very different now
[21:12:28] <deniska> I swing between liking and hating C++, nowadays I'm in the liking phase
[21:12:28] <lambda> marduk4: it's definitely changed a lot since then, for better or for worse
[21:12:28] <zoooz> not really
[21:12:39] <neure> another one: what does offsets = [0] + [<stuff>] do? Does it make array like [0, <stuff>] or what does it do?
[21:12:40] <SnoopJ> marduk4, very. They've bolted on at least two additional languages to it ;)
[21:12:55] *** Quits: zoooz (~zoooz@204.43.240.216) (Quit: Client closed)
[21:12:59] <SnoopJ> (templates and constexpr are both turing-complete so this is less of a joke than it might seem)
[21:13:13] <deniska> neure: you can launch python interpreter and see for yourself
[21:13:16] <SnoopJ> ah, but I'm veering ##python-offtopic now, sorry
[21:13:24] <marduk4> STL was the hotness I think around then
[21:13:34] <neure> true that
[21:13:34] <dirtwash> what'd be a good approach to compare 2 files which entail a set of integers, to figoure out which arent in file1 and only in file2?
[21:13:47] <dirtwash> line by line scanning is too slow, talking million lines
[21:14:05] <leitz> SnoopJ, for me, the drivers are two fold; to really understand what's going on, and to get stuff done. Python, and some other languages, really let me get things done without a lot of type planning or parameter preperation.
[21:14:36] <lambda> dirtwash: are they sorted?
[21:15:04] <Staunch> is anyone here using Playwright? I do `playwright install` like it tells me to, but it gives me the wrong versions of the browsers. For example, when i try to use Firefox, i get an error saying Playwright was looking for "firefox-1313" when `playwright install` gave me "firefox-1234".
[21:15:12] *** Joins: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[21:15:17] <leitz> SnoopJ, my first experience with Python was tryng to do something with Twisted. I was able to get things to work, and I didn't know anything about Python. That's a real recommendation for me; the code clarity and ease of use were awesome.
[21:15:23] <dirtwash> lambda: depends, I havent benched sorting in python yet, so lets assume yes
[21:15:37] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[21:15:37] <grym> dirtwash: do you care if there are multiples
[21:15:39] <jiffe> I have a script that takes input from stdin and looks for specific lines and once everything is found it performs an action, this is in a while loop so you can paste multiple times.. any idea how I can flush out the remains of the previous paste from stdin before continuing the next loop?  Just putting a while loop with select/read on stdin at the beginning of the loop doesn't seem to do it
[21:15:53] <dirtwash> grym: they are all unique, cant have multiples
[21:16:01] <lambda> dirtwash: should be pretty easy and fast then
[21:16:08] *** Joins: jinsun (~quassel@user/jinsun)
[21:16:14] <marduk4> Staunch: I don't know what Playright is but those don't look like real firefox versions (the latest firefox is like 96.something)
[21:16:21] <grym> dirtwash: then that's set.difference
[21:16:37] <dirtwash> thanks, will look into that
[21:16:49] <deniska> neure: (but yes, using operator + between two lists creates a new list which is a concatenation of the two operands)
[21:17:02] *** Quits: dre (~dre@2001:8003:c932:c301:c799:698e:a7d8:4ce6) (Ping timeout: 240 seconds)
[21:17:12] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[21:17:20] <jiffe> nm, having a small delay on the select does work
[21:17:29] <Sco-Ross> anyone here got any good stuff here for building a key-logger , don't need delivery methods or anything im just wanting to see what triggers things across a couple of virtual environments cheers
[21:17:47] *** Joins: bluedust (~bluedust@103.161.144.140)
[21:17:48] <dirtwash> grym: I reckon I dont need this sorted then
[21:17:50] <SnoopJ> dirtwash, you're going to have to scan the entire files either way, but here's what I would try first (and only pursue further optimization if it's necessary; set() knows how to do some of it already): https://bpa.st/LNVQ
[21:17:54] <grym> dirtwash: you don't
[21:18:02] *** Quits: aniketgm (~aniketgm@49.36.61.69) (Quit: leaving)
[21:18:11] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[21:18:22] <Staunch> marduk4: it's a web automation tool by Microsoft, it's an alternative to Selenium. It seems like they forego using the *actual* browsers and instead use the underlying base programs -- instead of choosing Safari, you choose webkit.
[21:18:24] <dirtwash> ok thanks I'll try how it deals with 100mio lines
[21:18:36] <dirtwash> hope wont become a memory issue with set diff
[21:18:51] <lambda> dirtwash: if the files are sorted, you can do it in constant space and linear time
[21:18:52] <han-solo> https://mywiki.wooledge.org/BashFAQ/036
[21:19:07] <dirtwash> lambda: yea right now I just use gnu's comm
[21:19:18] <dirtwash> works too, just curious if python can do it afster
[21:19:28] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:19:29] <lambda> almost definitely not
[21:19:43] <dirtwash> cant beat C eh
[21:19:46] <lambda> python is way slower in general, and if there were a better algorithm, comm would use it
[21:19:58] <SnoopJ> dirtwash, the sets will only grow as large as the data in them (i.e. you aren't paying for duplication), and only one line at a time will be held in memory. set() is implemented in C, FWIW.
[21:20:06] <SnoopJ> (in CPython, anyway)
[21:20:11] <marduk4> Staunch: oh. sorry I've no experience with that. I thought things like selenium use gecko/webdriver for firefox though.
[21:20:23] *** Joins: sidro (~sidro@86.126.125.141)
[21:20:25] <dirtwash> thanks guys, I'll try and see how it does
[21:21:52] *** Quits: odoood (~odoood@c-71-204-80-147.hsd1.ga.comcast.net) (Ping timeout: 256 seconds)
[21:22:12] *** Quits: Sco-Ross (~Sco-Ross3@2a02:c7f:d049:600:3805:993d:ce44:818b) (Quit: Leaving)
[21:22:33] *** Joins: xizhendu_ (~xizhendu@240e:305:7380:8900:395b:be7:2347:dfa7)
[21:22:47] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 250 seconds)
[21:22:50] *** Joins: maryo (~Maryo@user/maryo)
[21:23:53] <novapy> ANy good debuggers for python?
[21:24:05] <marduk4> pdb
[21:24:07] <SnoopJ> novapy, I like pudb, but I also hear great things about PyCharm's debugger experience
[21:24:52] <novapy> Let me rephrase that: CLI debuggers
[21:24:57] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Ping timeout: 240 seconds)
[21:25:00] <SnoopJ> novapy, pudb is a CLI debugger.
[21:25:04] <novapy> k
[21:25:32] <SnoopJ> or I guess it's TUI, not CLI, but it is designed for use in a terminal, is what I mean.
[21:25:53] <SnoopJ> (which reminds me, it doesn't respond to SIGWINCH but that would be a straightforward PR)
[21:26:27] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:26:52] *** Joins: m1dnight (~christoph@christophe.dev)
[21:26:54] <novapy> SnoopJ, its in pip right?
[21:27:07] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[21:27:25] *** Joins: fdan (~fdan@2600:6000:ff7e:f6d5::97b)
[21:28:04] <SnoopJ> novapy, it's on PyPI, yes (pip can install from places that aren't PyPI, FWIW)
[21:28:18] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10f1:5a5f:397b:3ff9:d4a9:1b8e)
[21:28:29] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-35e0-06b2-095d-de4d.res6.spectrum.com)
[21:28:52] <SnoopJ> https://pypi.org/project/pudb/
[21:29:00] <dirtwash> hm icant hold that much data in memory unfortunately, guess comm is fine for now
[21:29:19] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Read error: Connection reset by peer)
[21:29:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:29:46] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[21:29:48] *** Joins: mefistof1les (~mefistofe@user/mefistofeles)
[21:30:37] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.4)
[21:30:37] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:31:12] *** Joins: zamanf (~dev@user/zamanf)
[21:31:15] <SnoopJ> dirtwash, that must be a lot of integers. The next thing I would try is loading the files with numpy (using e.g. `numpy.loadtxt("file1.txt", dtype=int)`) and then making use of `numpy.setdiff1d(arr1, arr2)`
[21:31:20] <Wooble> dirtwash: 100 million integers isn't a huge amount to store unless you're on a raspberry pi or something...
[21:31:29] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10f4:5ff0:397b:3ff9:d4a9:1b8e) (Ping timeout: 252 seconds)
[21:31:30] *** Quits: Ox151 (~user@user/ox151) (Remote host closed the connection)
[21:31:41] *** Quits: Azin (~Azin@user/azin) (Remote host closed the connection)
[21:32:08] <zamanf> can I load all necessary modules in a file, say mods.py and then import it to my main python file and use all the rest modules in my main fiile?
[21:32:08] *** Quits: the_lanetly_052_ (~the_lanet@185.30.90.202) (Ping timeout: 250 seconds)
[21:32:12] *** Joins: dbbr (~dbbr___@2804:5f80:70a0:3700:2045:891:e5c3:a307)
[21:32:13] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:32:26] <grym> zamanf: imports are not transitive in that sense
[21:32:31] <grym> zamanf: import things where you need them
[21:32:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[21:32:40] <SnoopJ> Wooble, OTOH, that's at _least_ 2.8 GB of integers on my system assuming the worst case of all-unique ints
[21:33:23] <Wooble> well I mean sure it's not *tiny* :)
[21:33:26] *** Quits: Major_Biscuit (~MajorBisc@c-001-005-022.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.3)
[21:33:37] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 250 seconds)
[21:33:58] <zamanf> if I have 3 .py files and I need to load 1 of them in the other 2 files, should I import it separately to each one?
[21:34:20] *** Quits: pycode1 (~pycode3@93-40-5-81.ip36.fastwebnet.it) (Ping timeout: 256 seconds)
[21:34:43] <grym> zamanf:yes
[21:34:54] *** Quits: remote (~self@user/hackers) (Ping timeout: 256 seconds)
[21:34:58] <zamanf> I see
[21:35:30] *** Quits: grooverman (~grooverma@187.11.220.159) (Ping timeout: 260 seconds)
[21:36:59] *** Quits: greedom (~greedom@p200300de670cc60012abc39657554751.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:37:56] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[21:38:03] <novapy> How can I install a script with pip?
[21:38:28] <Wooble> novapy: pip install name_of_package
[21:38:30] <SnoopJ> novapy, a "script" is not installable, only packages are
[21:38:57] <novapy> ok, can I make a package out of a script?
[21:39:13] *** Quits: sidro (~sidro@86.126.125.141) (Quit: Konversation terminated!)
[21:39:14] <SnoopJ> yes. see the PyPA tutorial: https://packaging.python.org/en/latest/tutorials/packaging-projects/
[21:39:32] *** Joins: sidro (~sidro@86.126.125.141)
[21:39:58] *** mefistof1les is now known as mefistofeles
[21:40:10] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[21:40:37] *** Quits: Trashlord__ (~trash@user/trashlord) (Ping timeout: 240 seconds)
[21:41:00] *** Joins: Trashlord (~trash@user/trashlord)
[21:41:16] *** Quits: neure (~TimoSuora@dzpyrrs4yyyyyyyyyyyyt-3.rev.dnainternet.fi) (Quit: Leaving)
[21:41:48] *** Joins: grooverman (~grooverma@152.254.155.54)
[21:42:00] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:c644:f24f:6572:b43d) (Quit: pvergain)
[21:42:01] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[21:42:01] *** Joins: mcon (~Thunderbi@host-82-61-91-236.retail.telecomitalia.it)
[21:42:14] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[21:42:15] *** Joins: grooverman_ (~grooverma@177.102.119.200)
[21:42:23] <xheimlich> I can never silence warnings. Never could.
[21:42:41] <xheimlich> Tried recipes using the warn module, using command-line arguments to the python interpreter.
[21:42:55] <xheimlich> it really cramps my print debugging
[21:42:58] *** Quits: dntreou (~yakiza@105-209-155-171.access.mtnbusiness.co.za) (Ping timeout: 250 seconds)
[21:43:46] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[21:43:47] <jinsun> https://docs.python.org/3/library/warnings.html#temporarily-suppressing-warnings
[21:43:48] <grym> xheimlich: don't warnings go to stderr though
[21:44:19] <grym> xheimlich: also, https://github.com/zestyping/q <3
[21:44:31] <mcon> how can I determine, in a called method, if argument is a string or a list of strings? I tried `isinstance(arg, list)` but it returns always `True`
[21:44:48] <SnoopJ> xheimlich, is there a question somewhere in there?
[21:44:49] <Wooble> mcon: then it's always a list.
[21:45:11] *** Joins: gasbag (~gasbag@024-216-149-125.res.spectrum.com)
[21:45:15] *** Quits: sidro (~sidro@86.126.125.141) (Remote host closed the connection)
[21:45:46] *** Joins: neceve (~quassel@2.26.93.228)
[21:46:00] *** Joins: dreamon (~dreamon@pd950385d.dip0.t-ipconnect.de)
[21:46:02] *** Quits: grooverman (~grooverma@152.254.155.54) (Ping timeout: 240 seconds)
[21:46:02] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 240 seconds)
[21:46:36] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[21:46:37] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Ping timeout: 240 seconds)
[21:46:48] *** Joins: Trashlord (~trash@user/trashlord)
[21:47:55] *** Joins: audio (~audio@user/audio)
[21:47:59] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[21:48:30] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[21:48:41] *** Joins: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt)
[21:48:44] *** Joins: sidro (~sidro@86.126.125.141)
[21:48:59] *** Joins: aphysically (~aphysical@user/aphysically)
[21:49:24] <aphysically> \o/ hurrah my third cpython patch merged
[21:49:53] *** Quits: dbristow (~dbristow@user/dbristow) (Quit: Leaving)
[21:49:54] *** Joins: jvega (~jose_vega@187.130.223.237)
[21:49:55] <Wooble> congrats
[21:50:07] *** Quits: kristijonas (~kristijon@88-119-92-43.static.zebra.lt) (Read error: Connection reset by peer)
[21:50:20] <InPhase> aphysically: What did you change?
[21:50:29] *** Quits: sidro (~sidro@86.126.125.141) (Client Quit)
[21:50:44] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 252 seconds)
[21:50:53] <InPhase> aphysically: So that I can appropriately credit or blame you if I encounter it.  :)
[21:51:02] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 240 seconds)
[21:51:13] <aphysically> a bare typing.ClassVar annotation raised at runtime if stringified and used with get_type_hints
[21:51:54] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[21:51:56] <aphysically> This is a bit of a weird one, the original PEP didn't address whether or not a bare ClassVar annotation should be allowed, and it working when not stringified meant that type checkers and code in the wild adopted this pattern
[21:52:28] <aphysically> so anyway the code is consistent now and the stringified version works too
[21:52:29] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:52:47] <aphysically> https://github.com/python/cpython/commit/5445e173e76ec792358082caf660fbdc846c64b2
[21:52:49] *** Quits: fdan (~fdan@2600:6000:ff7e:f6d5::97b) (Ping timeout: 256 seconds)
[21:53:17] <InPhase> Ah.
[21:53:33] <aphysically> the patch is *very* trivial, it's just a matter that I was probably the first to notice the oversight/inconsistency
[21:53:47] <aphysically> (because why would anyone stringify ClassVar in the first place?)
[21:54:09] <jvega> I'm new here what is the channel for beginners in python
[21:54:10] <aphysically> this was covered in the dataclasses unit tests, but it wasn't caught because dataclasses doesn't use get_type_hints
[21:54:34] <InPhase> 90% of the work on such things is identifying and tracking down the source of the problem in the first place.  That is the way of things.
[21:54:40] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:54:40] <SnoopJ> jvega, beginner questions/discussion are very welcome in #python
[21:55:06] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[21:55:35] <toma> jvega: There's #python, ##python-friendly, ##learnpython. This is by far the most active channel and where I've gotten the most assistance for my recent, beginner questions.
[21:56:25] *** Joins: dbristow (~dbristow@user/dbristow)
[21:56:36] *** Quits: kristijonas_ (~kristijon@88-119-92-43.static.zebra.lt) (Remote host closed the connection)
[21:56:57] *** Quits: audio (~audio@user/audio) (Quit: Client closed)
[21:57:05] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[21:57:33] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[21:57:34] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[21:58:13] *** Quits: jvega (~jose_vega@187.130.223.237) (Ping timeout: 240 seconds)
[21:58:13] *** Joins: m_ (~m@143.255.100.142)
[21:58:33] <aphysically> I'm working on a 4th patches to dataclasses right now, but it's a bit more involved. Mostly it's going to need a lot of new testcases.
[21:58:33] *** Joins: jvega (~jose_vega@187.130.223.237)
[21:58:40] *** Joins: gusto (~Augustus@109.255.100.54)
[21:58:55] <aphysically> It's just adding support for Annotated to wrap any dataclasses annotation
[22:00:24] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[22:00:40] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[22:00:44] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[22:01:04] <aphysically> in the process of making this patch I discovered a gap in the runtime checking of type annotations, but I'm not sure how much of a "bug" it should be considered
[22:01:28] <aphysically> *runtime* checking of valid type annotation (syntax) is intentionally on the lax side for code simplicity/flexibility
[22:01:51] *** Quits: gasbag (~gasbag@024-216-149-125.res.spectrum.com) (Quit: Leaving)
[22:02:12] <aphysically> I discovered that for example while ClassVar[Final[int]] isn't valid (cannot nest ClassVar/Final), ClassVar[Final] is totally fine :)
[22:02:40] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 256 seconds)
[22:04:11] *** Joins: Elodin (~weechat@user/elodin)
[22:06:42] *** Joins: cheater (~Username@user/cheater)
[22:07:06] *** Quits: casastorta (~casastort@neo1.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[22:07:11] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[22:07:16] *** Quits: m_ (~m@143.255.100.142) (Quit: Leaving)
[22:08:23] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:da9e:2595:9a3b:161b) (Quit: Leaving)
[22:08:44] *** Joins: casastorta (~casastort@neo2.krivokuca.net)
[22:08:51] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[22:08:53] *** Joins: summersault (~summersau@179.221.251.36)
[22:09:06] *** Joins: blackhats (~blackhats@2602:fccf:1:1050::)
[22:09:29] *** Quits: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09) (Remote host closed the connection)
[22:09:35] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:e880:89ff:3e74:550f) (Ping timeout: 250 seconds)
[22:10:57] *** Joins: dfinr (~dfinr@user/dfinr)
[22:11:19] *** Joins: sam_sepi0l (~me@151.233.67.76)
[22:11:26] *** Quits: dfinr (~dfinr@user/dfinr) (Read error: Connection reset by peer)
[22:11:30] <sam_sepi0l> hi
[22:12:37] <sam_sepi0l> how can i get ascii value of a char in python?
[22:12:52] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 256 seconds)
[22:13:20] <Wooble> sam_sepi0l: ord()
[22:13:21] <ssbr> sam_sepi0l: ord()
[22:13:24] <ssbr> damn
[22:13:26] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[22:13:40] <ssbr> note that it can give non-ascii numbers if the character isn't ascii :)
[22:13:47] *** Quits: bitplane (~bitplane@2a00:23a8:826:a800:9cf7:b796:c13f:e90f) (Ping timeout: 256 seconds)
[22:14:22] <sam_sepi0l> Thanks that really helped me :-)
[22:14:29] *** Joins: kosh (~kosh@user/kosh)
[22:14:44] <SnoopJ> but it will do the right thing for chars that fall into ASCII because Unicode does this alignment for pretty much exactly this reason
[22:15:11] <Wooble> You can .encode('ascii') first for maximum asciiness.
[22:15:16] <SnoopJ> if you wanted to absolutely restrict it to ASCII, you'd enco--yea, that.
[22:15:22] *** Joins: zumba_addict24 (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[22:15:39] <SnoopJ> or maybe check .isascii() first and then use ord() with confidence
[22:16:12] *** Joins: smrtz (~smrtz@user/smrtz)
[22:16:21] <Wooble> I'd be happy with the exception from .encode() if I thought I had ascii and didn't :)
[22:17:30] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:17:34] <ssbr> I had been thinking check if the ord() return value is less than 128. <_<
[22:17:55] *** Quits: revolve (~u0_a227@82-132-238-254.dab.02.net) (Read error: Connection reset by peer)
[22:18:54] <sam_sepi0l> i think python is the best programming language in the world. cuz you can develop web,windows app,linux app,security tool and ... thanks all for helping me :)
[22:19:32] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[22:20:06] <sam_sepi0l> excuse me please. i had a question. who knows about iran country? what do you think about it?
[22:20:25] <Wooble> sam_sepi0l: #python-offtopic
[22:20:32] *** Quits: bytehackr (~Sandipan@43.252.250.126) (Ping timeout: 240 seconds)
[22:21:36] <sam_sepi0l> bye
[22:21:38] *** Joins: revolve (~u0_a227@82-132-238-205.dab.02.net)
[22:21:49] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[22:22:19] <SnoopJ> n.b. #python-offtopic is moving to ##python-offtopic (the former will be closed in a few days)
[22:23:00] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[22:23:10] *** Joins: greatgatsby__ (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[22:23:28] *** Joins: pflanze_ (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch)
[22:23:59] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[22:24:06] *** Joins: Electric_Sheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net)
[22:24:07] *** Joins: phryk_ (~totallyno@user/phryk)
[22:24:18] *** Joins: jootoi (~jootoi@130.61.158.197)
[22:24:46] *** Joins: jvega_bgn (~jose_vega@187.130.223.237)
[22:24:47] *** Joins: purplex_ (~purplex@user/purplex)
[22:24:48] *** Joins: Adrixan (~Adrixan@218.72.75.34.bc.googleusercontent.com)
[22:24:49] *** Joins: connor_goodwolf_ (~connor@user/connor-goodwolf/x-2615606)
[22:24:54] *** Joins: aslicedbanjo (~aslicedba@host86-150-115-152.range86-150.btcentralplus.com)
[22:24:54] *** Joins: mawk` (~mawk@wireguard/contributor/mawk)
[22:25:02] *** Joins: Masklin (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[22:25:08] *** Joins: Elodin (~weechat@user/elodin)
[22:25:13] *** Joins: WarpedAI (~Warped@user/warped)
[22:25:14] *** Joins: cryocaustik73 (~cryocaust@user/cryocaustik)
[22:25:14] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection reset by peer)
[22:25:14] *** Quits: pflanze (~pflanze@5-168-208-80.dyn.fiber.qlnet.ch) (Read error: Connection reset by peer)
[22:25:14] *** Quits: phryk (~totallyno@user/phryk) (Read error: Connection reset by peer)
[22:25:14] *** Quits: tonitch (~tonitch@user/tonitch) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: jootoi- (~jootoi@130.61.158.197) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: Adrixan_ (~Adrixan@218.72.75.34.bc.googleusercontent.com) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: mawk (mawk@wireguard/contributor/mawk) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: purplex (~purplex@user/purplex) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (Read error: Connection reset by peer)
[22:25:14] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.a230.priv.bahnhof.se) (Read error: Connection reset by peer)
[22:25:14] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (Remote host closed the connection)
[22:25:14] *** Quits: modlin (modlin@user/modlin) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: Jonno_FTW (~come@user/jonno-ftw/x-0835346) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: llua (~llua@zsh/developer/llua) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: tharkun (tharkun@kvm6.telegraphics.com.au) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: Dan39 (~dan@user/dan39) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: phy1729 (~phy1729@zsh/wizard/phy1729) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: frrs (~ferros@vps-eacaba1b.vps.ovh.net) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: svet (~ec2-user@ec2-3-144-179-53.us-east-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: pyre (~pyre@crimeboss.nillas-power.com) (Ping timeout: 256 seconds)
[22:25:14] *** Quits: remolej (~kenoba@user/kenoba) (Read error: Connection reset by peer)
[22:25:14] *** cryocaustik73 is now known as cryocaustik7
[22:25:16] *** scoobydoo_ is now known as scoobydoo
[22:25:19] *** Parts: jvega_bgn (~jose_vega@187.130.223.237) ()
[22:25:20] *** Joins: modlin_ (modlin@user/modlin)
[22:25:21] *** Joins: pyre_ (~pyre@crimeboss.nillas-power.com)
[22:25:25] *** Joins: svet_ (~ec2-user@ec2-3-144-179-53.us-east-2.compute.amazonaws.com)
[22:25:27] *** Joins: phy1729 (~phy1729@zsh/wizard/phy1729)
[22:25:28] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[22:25:30] *** Joins: tonitch_ (~tonitch@user/tonitch)
[22:25:31] *** Joins: Dan39 (~dan@user/dan39)
[22:25:39] *** Joins: HexaCube6 (~HexaCube@vmi438683.contaboserver.net)
[22:25:41] *** Quits: ThomasJ (~ThomasJ@user/thomasj) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: canton7 (~canton7@about/csharp/canton7) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: amaenli (~amaenli@user/amaenli) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: koo5_ (~quassel@51.140.155.227) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: Tashtari (~tashtari@user/tashtari) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: Avaris (~Avaris@avar.is) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: erhandsome (~erhandsom@user/erhandsome) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: erica (~erica@user/erica) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: harleypig (thelounge@harleypig.com) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: shodan45 (~quassel@107.161.22.155) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: b_jonas (~x@catv-176-63-3-122.catv.broadband.hu) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: Ekho (~Ekho@user/ekho) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: hsv_ (~unknown@user/hsv) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: HexaCube (~HexaCube@vmi438683.contaboserver.net) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: eagleflo (~aku@163.172.137.34) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: greatgatsby_ (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: DXR (~lyrical@194.219.251.132.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: dzz007 (~dzz007@user/dzz007) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: m_tadeu (~quassel@bl11-135-102.dsl.telepac.pt) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: Neopolitan (~tn5421@45.76.61.24) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: Juhaz (juhaz@hilla.kapsi.fi) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: exarkun (~exarkun@user/exarkun) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: feoh (~feoh@idlerpg/player/feoh) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: zerosum (~zerosum@user/zerosum) (Ping timeout: 256 seconds)
[22:25:41] *** Joins: remolej (~kenoba@user/kenoba)
[22:25:41] *** HexaCube6 is now known as HexaCube
[22:25:41] *** Quits: habnabit_ (~habnabit@python/site-packages/habnabit) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de) (Ping timeout: 256 seconds)
[22:25:41] *** Quits: aileran (~ubuntu@ec2-18-219-39-125.us-east-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[22:25:47] *** Joins: tharkun (tharkun@kvm6.telegraphics.com.au)
[22:25:51] *** Joins: shodan45 (~quassel@107.161.22.155)
[22:25:53] *** Joins: amaenli (~amaenli@aries.uberspace.de)
[22:25:54] *** Joins: Avaris (~Avaris@avar.is)
[22:25:54] *** Joins: harleypig (thelounge@harleypig.com)
[22:25:57] *** Joins: zerosum (~zerosum@162.255.139.2)
[22:25:57] *** Joins: eagleflo (~aku@163.172.137.34)
[22:26:00] *** Joins: koo5_ (~quassel@51.140.155.227)
[22:26:03] *** Joins: elmcrest (~elmcrest@static.48.211.217.95.clients.your-server.de)
[22:26:04] *** Joins: Neopolitan (~tn5421@45.76.61.24)
[22:26:04] *** Joins: habnabit_ (habnabit@python/site-packages/habnabit)
[22:26:05] *** Joins: polyrob (~rob@user/polyrob)
[22:26:07] *** Joins: Tomassi-1 (~Tomassi-1@ec2-16-170-233-250.eu-north-1.compute.amazonaws.com)
[22:26:07] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[22:26:12] *** Joins: dzz007 (~dzz007@user/dzz007)
[22:26:13] *** Joins: Juhaz (juhaz@hilla.kapsi.fi)
[22:26:15] *** Quits: dodo (~dodo@user/dodo) (Ping timeout: 256 seconds)
[22:26:15] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (Ping timeout: 256 seconds)
[22:26:15] *** Quits: sunyour (~sunyour@129.226.182.99) (Ping timeout: 256 seconds)
[22:26:17] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[22:26:17] *** Joins: feoh (~feoh@idlerpg/player/feoh)
[22:26:19] *** Joins: erica (~erica@user/erica)
[22:26:22] *** zerosum is now known as Guest2797
[22:26:24] *** Joins: m_tadeu (~quassel@bl11-135-102.dsl.telepac.pt)
[22:26:27] *** Joins: hsv (~unknown@user/hsv)
[22:26:27] *** Joins: ferros (~ferros@vps-eacaba1b.vps.ovh.net)
[22:26:31] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[22:26:34] *** Joins: exarkun (~exarkun@user/exarkun)
[22:26:35] *** Joins: dodo (~dodo@user/dodo)
[22:26:35] *** Joins: ThomasJ (~ThomasJ@user/thomasj)
[22:26:37] *** Joins: llua (~llua@zsh/developer/llua)
[22:26:37] *** Quits: jvega (~jose_vega@187.130.223.237) (Ping timeout: 240 seconds)
[22:26:38] *** Joins: canton7 (~canton7@about/csharp/canton7)
[22:26:48] *** Joins: aileran (~ubuntu@ec2-18-219-39-125.us-east-2.compute.amazonaws.com)
[22:26:56] *** Joins: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net)
[22:26:56] *** Joins: Jonno_FTW (~come@api.carswap.me)
[22:26:56] *** Quits: Jonno_FTW (~come@api.carswap.me) (Changing host)
[22:26:56] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[22:27:03] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[22:27:08] *** Joins: Tashtari (~tashtari@user/tashtari)
[22:27:08] *** Joins: b_jonas (~x@catv-176-63-3-122.catv.fixed.vodafone.hu)
[22:27:11] *** Joins: beencubed (~beencubed@209.131.238.248)
[22:27:23] *** Quits: t4nk_freenode (~Go@user/t4nk) (Ping timeout: 256 seconds)
[22:27:43] *** Joins: DXR (~lyrical@194.219.251.132)
[22:27:57] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 256 seconds)
[22:27:58] *** Joins: sunyour (~sunyour@129.226.182.99)
[22:28:05] *** Joins: t4nk_freenode (~Go@user/t4nk)
[22:28:28] *** mawk` is now known as mawk
[22:29:02] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[22:29:37] *** Joins: Ekho (~Ekho@user/ekho)
[22:29:50] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[22:29:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:29:57] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[22:29:58] *** Joins: beli6147 (~Thunderbi@EPAM-SYSTEM.ear2.LosAngeles1.Level3.net)
[22:30:17] *** Joins: mcglk (~mcglk@131.191.49.120)
[22:30:28] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[22:30:38] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Remote host closed the connection)
[22:31:10] *** Quits: mcglk_ (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[22:31:13] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[22:31:19] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[22:31:29] *** Quits: Amadiro (~Amadiro@31.11.55.179) (Ping timeout: 250 seconds)
[22:31:32] *** Quits: mpmc (~mpmc@user/mpmc) (Remote host closed the connection)
[22:31:32] *** Quits: gcbirzan (~gcbirzan@user/gcbirzan) (Remote host closed the connection)
[22:31:40] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:31:48] *** Joins: mpmc (~mpmc@user/mpmc)
[22:31:49] *** Joins: gcbirzan (~gcbirzan@user/gcbirzan)
[22:31:49] *** Quits: akmod (~akmod@c-73-228-115-212.hsd1.ut.comcast.net) (Read error: Connection reset by peer)
[22:31:55] *** Quits: lz_ (l@gateway/vpn/protonvpn/lz/x-63480406) (Ping timeout: 256 seconds)
[22:32:07] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[22:32:09] *** Joins: lz_ (l@gateway/vpn/protonvpn/lz/x-63480406)
[22:32:13] *** Joins: akmod (~akmod@c-73-228-115-212.hsd1.ut.comcast.net)
[22:32:13] <smrtz> Heyo, is there an official Python Package with `--enable-shared` (or `--enable-framework`), or should I attempt to build it myself?
[22:32:29] *** Quits: Luke (~ldm@hacksoc/member) (Ping timeout: 256 seconds)
[22:32:34] *** Quits: sam_sepi0l (~me@151.233.67.76) (Quit: BitchX: now with Olestra!)
[22:32:42] <aphysically> https://github.com/tree-sitter/tree-sitter-python/commit/ed0fe62e55dc617ed9dec8817ebf771aa7cf3c42
[22:32:43] *** Joins: Luke (~ldm@hacksoc/member)
[22:32:58] <aphysically> :^) match/case support merged for treesitter parser
[22:33:26] <grym> smrtz: i usually build my own; pyenv is good at helping you do this
[22:33:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[22:33:41] <smrtz> grym Ahh, thanks!
[22:34:10] <grym> smrtz: and then i `export PYTHON_CONFIGURE_OPTS='--enable-shared'`  and we're off to the race
[22:34:13] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[22:34:13] <grym> s
[22:34:19] *** Joins: Sadale (~Sadale@user/sadale)
[22:34:37] <SnoopJ> pyenv +1
[22:34:43] *** Quits: pacbard (~pacbard@user/pacbard) (Quit: Ping timeout (120 seconds))
[22:34:43] *** Quits: gerty (~gerty@user/gerty) (Read error: Connection reset by peer)
[22:35:01] *** Joins: gerty (~gerty@user/gerty)
[22:35:03] <marduk4> fwiw Gentoo's python package is built with `--enable-shared`
[22:35:05] *** Joins: pacbard (~pacbard@user/pacbard)
[22:35:13] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[22:35:13] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10f1:5a5f:397b:3ff9:d4a9:1b8e) (Read error: Network is unreachable)
[22:35:19] *** Quits: arooni (~arooni@li1062-244.members.linode.com) (Ping timeout: 256 seconds)
[22:35:19] *** Quits: sabet (~sabet@user/sabet) (Ping timeout: 256 seconds)
[22:35:31] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:35:42] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[22:35:56] <aphysically> this means I get match/case support in neovim w/treesitter now :D
[22:36:11] *** Joins: sabet (~sabet@user/sabet)
[22:37:43] *** Joins: arooni (~arooni@li1062-244.members.linode.com)
[22:37:58] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[22:38:03] <grym> aphysically: mmm, treesitter
[22:38:20] * grym M-x straight-rebuild-package
[22:38:22] *** Quits: Snyp (~Snyp@49.207.193.236) (Ping timeout: 256 seconds)
[22:40:20] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Client Quit)
[22:41:02] *** Joins: Sadale (~Sadale@user/sadale)
[22:41:12] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[22:41:25] *** withered_wolf is now known as thoughtfu
[22:41:52] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[22:42:34] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[22:43:15] *** Joins: Celeo (~Celeo@user/celeo)
[22:43:18] *** thoughtfu is now known as withered_wolf
[22:43:18] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:43:39] *** Joins: Betal (~Betal@user/betal)
[22:43:43] *** Quits: smrtz (~smrtz@user/smrtz) (Quit: Client closed)
[22:43:44] <NoImNotNineVolt> how would i use a nested list comprehension to give me 9 tuples (a,b) where a and b cover range(1,4)
[22:43:53] <NoImNotNineVolt> [each]
[22:44:04] <NoImNotNineVolt> e.g. (1,1) through (3,3)
[22:44:41] <phy1729> [(a, b) for a in range(1, 4) for b in range(1, 4)]
[22:44:58] <NoImNotNineVolt> ... seriously?
[22:45:20] <NoImNotNineVolt> oh wow that's nice.
[22:45:22] <NoImNotNineVolt> thanks.
[22:45:27] <phy1729> could use itertools.product if you like I suppose
[22:45:45] <NoImNotNineVolt> nope i thought i'd need to nest two or something
[22:46:14] *** Quits: vitali64 (~vitali64a@xdsl-31-164-198-163.adslplus.ch) (Ping timeout: 250 seconds)
[22:46:36] <phy1729> itertools.product(range(1, 4), repeat=2)  is the same thing fwiw
[22:46:44] *** Joins: Elodin (~weechat@user/elodin)
[22:46:49] <phy1729> I'd probably go the listcomp route myself
[22:46:57] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[22:46:57] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:48:18] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[22:48:33] *** Joins: gentooclimax (~gentoocli@2a02-8440-6440-1beb-e1b7-a79a-cff9-1dbe.rev.sfr.net)
[22:50:52] *** Joins: Azin (~Azin@user/azin)
[22:51:00] *** Quits: Celeo (~Celeo@user/celeo) (Ping timeout: 250 seconds)
[22:51:21] *** Joins: Sadale (~Sadale@user/sadale)
[22:52:24] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:53:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[22:53:41] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[22:53:50] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:54:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[22:55:23] *** Joins: vitali64 (~vitali64a@xdsl-31-164-198-163.adslplus.ch)
[22:56:20] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[22:56:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:56:42] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[22:56:53] *** Quits: beli6147 (~Thunderbi@EPAM-SYSTEM.ear2.LosAngeles1.Level3.net) (Quit: beli6147)
[22:57:24] <novapy> I get this error when building my package:
[22:57:33] <novapy> ERROR Backend subproccess exited when trying to invoke get_requires_for_build_sdist
[22:57:42] <novapy> Whats happening?
[22:57:47] <SnoopJ> novapy, share the complete error report
[22:57:48] *** Joins: Sadale (~Sadale@user/sadale)
[22:59:14] <novapy> can I send you it as a file?
[22:59:24] <SnoopJ> novapy, you can share it on https://bpa.st
[22:59:33] *** Joins: parv (~quass@user/parv)
[22:59:37] <novapy> erm, no gui
[22:59:56] <SnoopJ> I suppose you will want to find a service that meets your personal workflow, then.
[23:00:09] *** Joins: blei (~blei@209.201.38.106)
[23:00:31] <novapy> I can dm you a text file...
[23:00:35] <novns> novapy, you still can use links or lynx
[23:00:45] <Wooble> there are also command line pastebin tools
[23:00:50] <novns> or xlinks -g  in a console
[23:00:51] <SnoopJ> there's one for bpa.st, even
[23:01:10] <SnoopJ> https://steck.readthedocs.io/en/latest/
[23:01:25] <blei> what algorithm might you use to parse (1+222343+2+4)(123+3+5+2)(...)...
[23:01:55] <blei> could use a list comprehension or regex, but what about a parser, and what kind of parser might be suited?
[23:02:09] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[23:03:03] <novns> blei, https://github.com/gnebehay/parser
[23:03:16] <novns> blei, https://github.com/pyparsing/pyparsing
[23:03:25] <novns> there are lot of parsers
[23:03:26] *** Joins: dsrt^ (~dsrt@75-147-197-198-Atlanta.hfc.comcastbusiness.net)
[23:03:38] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[23:03:40] <blei> yes, but which kind of parser would be suited
[23:04:02] <novns> blei, https://www.dabeaz.com/ply/
[23:04:02] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Remote host closed the connection)
[23:04:05] <novns> this one
[23:04:27] *** Joins: bluedust (~bluedust@103.161.144.140)
[23:04:34] <SnoopJ> blei, here is a program I wrote when you asked a previous related question about parsing a sequence of literals in such a string. It could be modified to do this task (you'd want something like `ast.parse()` rather than `ast.eval_literal`): https://bpa.st/4M7Q
[23:05:12] *** Joins: Sadale (~Sadale@user/sadale)
[23:05:18] *** Quits: pro_z (~pro_z@37.214.69.237) (Ping timeout: 250 seconds)
[23:05:34] <blei> SnoopJ i'm looking for a formalized / textbook approach instead of regex / list comprehension / custom which is harder to maintain. i tried an NLTK ChartParser but it experiences combinatorial explosion
[23:06:00] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[23:06:18] <blei> also i am working on this project to find a great way to quickly and maintainably write small DSLs for low-code ideas
[23:07:03] <SnoopJ> blei, I have no idea what that means. If your expressions are a subset of Python, `ast` is a very expedient way to proceed. Here's a modification of the above program that results in a list of expressions: https://bpa.st/E7NA
[23:07:05] <blei> SnoopJ that is an interesting approach
[23:07:16] <blei> (they are not a subset of python)
[23:07:40] <SnoopJ> I like parsimonious as a parser generator
[23:08:23] *** gentooclimax is now known as climax
[23:08:25] <SnoopJ> it wouldn't be too hard to substitute in place of ast.parse() there
[23:08:44] <SnoopJ> although parsimonious could just solve the whole thing, actually
[23:08:55] <novapy> SnoopJ: here https://bpaste.net/WOHQ
[23:10:16] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[23:10:35] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[23:10:59] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[23:12:00] <SnoopJ> novapy, looks like something is wrong with the package's setuptools configuration. Can you share the contents of setup.cfg?
[23:12:39] *** Joins: crashrep (~crashrep@user/crashrep)
[23:12:51] *** Quits: vsantana (~Thunderbi@ec2-54-159-73-164.compute-1.amazonaws.com) (Ping timeout: 250 seconds)
[23:13:00] <novapy> https://bpaste.net/BEPA
[23:13:05] *** Joins: vsantana (~Thunderbi@fttx-177136149200.usr.predialnet.com.br)
[23:13:05] *** Joins: ikus060 (~ikus060@96.127.228.230)
[23:13:56] <SnoopJ> novapy, the indentation is badly garbled starting with line 12
[23:14:04] *** Quits: vitali64 (~vitali64a@xdsl-31-164-198-163.adslplus.ch) (Ping timeout: 256 seconds)
[23:14:12] <novapy> hmm, ok
[23:14:22] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[23:14:57] *** Quits: moto (~moto@user/moto) (Ping timeout: 240 seconds)
[23:15:32] *** Quits: revolve (~u0_a227@82-132-238-205.dab.02.net) (Read error: Connection reset by peer)
[23:16:56] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[23:16:59] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 250 seconds)
[23:17:28] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[23:18:18] *** Joins: Celeo (~Celeo@user/celeo)
[23:18:36] <blei> i have concerns about these parser implemenations
[23:18:47] <blei> can we incorporate formal verification?
[23:18:48] <novapy> SnoopJ, Yeah, it was the indents
[23:18:51] <novapy> works now
[23:19:17] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:19:23] <SnoopJ> novapy, the file you shared was basically defining all that stuff as if it were an entry in the dictionary of URLs
[23:19:34] <SnoopJ> blei, formal verification of what?
[23:19:46] <blei> the parser
[23:20:21] <SnoopJ> blei, what would you "incorporate" into a parser generator to get this
[23:20:34] <blei> everything could be formally verified.
[23:20:35] <SnoopJ> perhaps you just want to read the parser generator's source?
[23:20:43] <blei> my brain hasn't been formally verified
[23:20:53] <SnoopJ> blei, I don't disbelieve that, I'm just not sure what it is you intend to add to a parser generator like parsimonious.
[23:20:58] <SnoopJ> (or Python's, for that matter)
[23:21:17] *** Joins: cheater1__ (~Username@user/cheater)
[23:21:33] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a)
[23:21:37] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 240 seconds)
[23:21:46] *** cheater1__ is now known as cheater
[23:22:02] <blei> found one https://dl.acm.org/doi/pdf/10.1145/3453483.3454053
[23:22:03] *** Joins: moto (~moto@user/moto)
[23:22:56] <SnoopJ> "We give proofs of..."  <---  "here, we'll show you outside the program why this is formally correct"
[23:23:42] <blei> good point, it doesnt go all the way
[23:24:01] <SnoopJ> I'm still not sure what "all the way" even means.
[23:24:30] *** Quits: Lauxley (~lauxley@2a01:e34:ec55:2700:853a:fd1e:be90:55cb) (Quit: Leaving)
[23:24:52] <blei> just as far as we could reasonably go
[23:25:06] <blei> the best thats available basically
[23:25:15] <lseactuary> i made some code to get the leaves of a parent. im using the networkx package to basically search for the parent and then get the leaves. but my code doesnt seem to spit out the right list of leaves. but when i print each line it seems correct until the get_child function. but i cant see what I am doing wrong. https://pastebin.com/8BBnQp0z
[23:26:06] <SnoopJ> blei, I can't really see what reason has to do with it, but anyway, the answer to your question is "yes," and the corollary is that it's almost certainly going to be your problem to write it or work through the necessary proofs.
[23:26:13] <novapy> I build and installed it but how do I invoke it?
[23:26:53] <blei> its obviously a good idea to implement parsers for your low-code languages using the most verified stack available
[23:26:56] <SnoopJ> novapy, import the module and call some function, usually. Setuptools also offers a way to define entrypoints to packages, which are very useful.
[23:27:04] <blei> i'd like to have such a stack avail, and be able to whip em' up quickly
[23:27:16] <SnoopJ> If you'd like to run your package as `python3 -m mypkg` then you can define a __main__.py in your package.
[23:27:37] <blei> but yeah, i can also see how this isn't controversial and is obviously a fantastic idea!
[23:27:42] *** Joins: Elodin (~weechat@user/elodin)
[23:27:51] *** Quits: mmalter (~mmalter@88.126.10.237) (Quit: Lost terminal)
[23:27:51] <novapy> I want to invoke like one would invoke black
[23:28:07] <SnoopJ> novapy, then you want an entrypoint. Consult the setuptools documentation.
[23:28:12] <novapy> ok
[23:28:18] *** Joins: dbbr_ (~dbbr___@2804:248:f779:5900:210d:301e:cec6:e5fc)
[23:28:19] <hexa-> is there a shorthand for passing a variable to a kwarg of the same name? func(foo=foo)?
[23:28:44] <SnoopJ> blei, I don't really see where it goes to. It's not like whatever thing you're imagining would not itself have to be verified, so it seems to come back to "write the proof" with a lot more steps.
[23:28:45] <novapy> what should go in the __main__.py?
[23:29:05] <SnoopJ> novapy, the code that should be executed when the package itself is being executed.
[23:29:10] <blei> a self-verifying formal verifier. i believe i recall reading about such a thing
[23:29:14] <blei> a quine of sorts
[23:29:22] <SnoopJ> Usually `from . import main; if __name__ == "__main__": main()`  or somesuch
[23:29:32] <SnoopJ> blei, and how can you trust its verification? :)
[23:29:48] <SnoopJ> it's turtles all the way down, I'm afraid.
[23:29:51] <ssbr> blei: the parser is the least important/subtle thing to go wrong, FWIW. Usually you'd want to verify the optimizing passes and translation.
[23:29:57] *** Joins: gareppa (~gareppa@user/gareppa)
[23:29:58] *** Joins: Guest60 (~Guest60@190.239.93.228)
[23:30:09] <blei> thats a cognitive trap. dont buy into it
[23:30:16] <ssbr> and yes, in the end, formal verification isn't absolute proof -- it's just writing the same specification in a second way, making it less likely that you got it wrong
[23:30:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:30:25] <sco1> hexa-: No. It was proposed a couple years ago though: https://lwn.net/ml/python-ideas/158705060425.9084.16965516528018448213@mail.python.org/
[23:30:32] <SnoopJ> yea, I mean this is why parser generators exist: you verify a class of generator by hand, audit an implementation to be sure it's correctly implementing the abstraction, and there you go.
[23:30:48] <hexa-> sco1: thanks
[23:31:01] *** Quits: ajf_ (~ajf_@user/ajf/x-9593112) (Remote host closed the connection)
[23:31:02] <SnoopJ> blei, I will note that you did not answer my question.
[23:31:12] <blei> do any of these have ie a NIST seal of approval?
[23:31:16] <sco1> I can't remember if a PEP was ever drafted
[23:31:16] <SnoopJ> If you want to go "all the way" this question cannot be avoided.
[23:31:25] <ssbr> blei: NIST doesn't require formal verification, sadly
[23:31:53] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Quit: %bye mirc%)
[23:31:59] *** Quits: gareppa (~gareppa@user/gareppa) (Client Quit)
[23:32:01] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:32:10] *** Quits: dbbr (~dbbr___@2804:5f80:70a0:3700:2045:891:e5c3:a307) (Ping timeout: 250 seconds)
[23:32:20] <SnoopJ> and "someone else verified this for me" is not philosophically different from "the author verified this for me"
[23:32:26] *** Quits: kmh (~kmh@2a00:6020:5004:6800:d55:196:f32b:b0f1) (Remote host closed the connection)
[23:32:30] *** Parts: Guest60 (~Guest60@190.239.93.228) ()
[23:32:45] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[23:32:58] <Wooble> I'll go out on a limb and say there probably aren't many python open source projects that have attempted to get NIST to certify them.
[23:32:59] <blei> you can't verify something all on your own, you could have blindsight, a double dissociation, suffered a stroke or had a seizure while doing it
[23:33:18] *** Quits: bart__ (~Xano@2a00:23c4:4204:700:8ef:52cb:6f5c:55dc) (Remote host closed the connection)
[23:33:22] <SnoopJ> blei, like I said, the answer to your question is "yes, and it's almost certainly *your* problem to do it"
[23:33:54] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:33:57] <ssbr> blei: the same is true for any verification program, human or not.
[23:34:11] <SnoopJ> and also like, the notion of computation in the first place
[23:34:12] <Wooble> blei: heck, aristotle may have just been a brain in a vat and formal logic could all be bunk.
[23:34:13] <blei> true, ECC could have failed somehow
[23:34:29] <ssbr> also, there's a chain of verified compilers etc. that will eventually root at something a human verified
[23:34:41] *** Joins: audio (~audio@user/audio)
[23:35:02] <ssbr> (I mean, you can root it at cycles, but those cycles aren't sound either: "def verify(program: str): return True" will self-verify.)
[23:35:02] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:35:04] <SnoopJ> all roads lead to formal logic, and certainly those proofs were written this way
[23:35:17] <blei> i think the idea would be to blame someone with ideally more repute than NIST ( who may have allowed the NSA to backdoor elliptic curves etc )
[23:35:33] * SnoopJ has entirely lost the plot
[23:35:41] <SnoopJ> weren't we talking about parsing?
[23:36:03] *** Joins: kmh (~kmh@2a00:6020:5004:6800:f874:97da:ed2c:e94)
[23:36:04] <blei> we are still talking about parsing, an expression from a language provided by the user over the web
[23:36:06] <ssbr> FWIW, for writing software like this, Python is not your best bet. It only even recently added static types. Formal methods have been used to find bugs in CPython, but it's not currently standard practice.
[23:36:12] *** Quits: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a) (Quit: Client closed)
[23:36:18] <blei> ssbr i was looking at daphny
[23:36:27] *** Joins: SanchoPanza (~rose@2a03:ef42:4005:ba31:27bd:11e5:7ad2:5a14)
[23:36:30] <blei> dafny https://github.com/dafny-lang/dafny
[23:36:32] <ssbr> blei: I quite like dafny, yes. I think the authors are more focused on F* right now.
[23:36:37] <SnoopJ> yea you might as well switch over to a programming language that gives you all the tools you need as primitives
[23:36:48] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[23:36:50] <SnoopJ> ...you'll have exactly the same problem, but you'll have better tools to address it
[23:37:18] *** Joins: lseactuary (~lseactuar@2601:646:202:2f10:8483:597a:7d85:7d6a)
[23:37:35] *** Joins: crashrep (~crashrep@user/crashrep)
[23:37:39] *** Parts: SanchoPanza (~rose@2a03:ef42:4005:ba31:27bd:11e5:7ad2:5a14) ()
[23:37:55] *** Quits: crashrep (~crashrep@user/crashrep) (Client Quit)
[23:38:02] *** Quits: ikus060 (~ikus060@96.127.228.230) (Quit: Leaving)
[23:39:18] <lseactuary> anyone familiar with the networkx package to help me out?
[23:39:42] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[23:39:56] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Quit: WeeChat 3.4)
[23:39:58] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[23:40:03] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[23:41:28] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[23:41:28] <exarkun> lseactuary: Just ask what you want to ask, maybe someone will know
[23:41:29] *** Quits: Pseudocrat (~sudo@user/pseudocrat) (Client Quit)
[23:41:39] <lseactuary> yup i posted the code, needing help on it
[23:41:42] *** Quits: tijuco (~tijuco@user/tijuco) (Ping timeout: 250 seconds)
[23:41:54] <exarkun> Then maybe no one knows. :)
[23:41:55] *** Joins: tijuco (~tijuco@user/tijuco)
[23:42:09] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[23:42:27] *** Joins: mike18_ (~geri@71-220-52-187.mpls.qwest.net)
[23:42:36] <BrenBarn> I've used networkx a fair amount
[23:42:42] <mike18_> hi how can i read 2 or 3 urls per thread in here? https://ideone.com/6rI0uw
[23:42:47] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[23:42:57] <mike18_> using this thread pool
[23:43:01] <lseactuary> BrenBarn can I PM you? may be easier?
[23:43:02] <SnoopJ> I've used it, but I can't actually understand what the question is.
[23:43:45] <lseactuary> https://pastebin.com/8BBnQp0z
[23:44:08] <lseactuary> I have a dataframe. I am trying to make it into a graph. Then I want to search a node and pull the leaves, and return a list.
[23:44:25] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[23:44:48] <lseactuary> My code at the moment is not doing as expected. I think its either not generating the graph correctly or searching the parent correctly. Not sure.
[23:45:18] <BrenBarn> what is it doing that you don't expect?
[23:45:21] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[23:45:25] <SnoopJ> And your question is...? There isn't enough in your paste to actually reproduce whatever you're running, and we don't know what your expectation is, either.
[23:45:39] <lseactuary> It returns a list of nodes, but these are not the leaves, or even children.
[23:45:48] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[23:46:09] <lseactuary> you need a sample dataframe?
[23:46:13] <toma> [beginner, tkinter, python, book recommendation] ?
[23:46:30] <mike18_> how can i read 2 or 3 urls per thread using the thread pool here? https://ideone.com/6rI0uw
[23:46:32] <SnoopJ> toma, Think Python 2e is good and free. Not sure if it covers tkinter at all, though.
[23:46:33] <mike18_> any idea?
[23:46:43] <novapy> SnoopJ, my runnable code is in a __main__.py file, and I installed it, but python -m <pkgname> doesn`t work
[23:46:44] <toma> SnoopJ: just finished it. it did not.
[23:46:52] <toma> SnoopJ: thanks.
[23:47:13] <SnoopJ> toma, Automate the Boring Stuff is also well-liked, although it's more of an "a la carte" sort of experience.
[23:47:39] <toma> SnoopJ: Cool. I'll check it out.
[23:47:42] <BrenBarn> lseactuary: what would be nice is a self-contained example that can actually be run
[23:47:46] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:48:03] <BrenBarn> and a description of what output you expect versus the output the sample produces
[23:48:22] <SnoopJ> novapy, "doesn't work" isn't a lot to go on. Are you getting an error, etc.?
[23:48:33] <lseactuary> https://pastebin.com/cxBzJF8W
[23:48:35] <lseactuary> does this help?
[23:48:45] <novapy> /usr/local/bin/python3: No module named yt_feed
[23:49:04] <BrenBarn> not really, because that's still not a runnable example
[23:49:17] <lseactuary> oki 5 mins
[23:49:25] <BrenBarn> don't create a combination of text and code and output, create a single block of code that can be run by copying and pasting it
[23:49:54] <SnoopJ> novapy, sounds like it didn't install the module at all, then. It's relatively easy to make a mistake in your project metadata and end up with an empty distribution.
[23:50:12] <lseactuary> ok
[23:50:14] <novapy> Neat, let try to fix that
[23:50:39] <SnoopJ> `python3 -m pip show <yourpkg>` should show you where the files got installed, a quick sanity check is to look in there and see if the files you expected to be there made it (but probably not!)
[23:50:55] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[23:51:02] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[23:51:25] *** Quits: zamanf (~dev@user/zamanf) (Ping timeout: 250 seconds)
[23:51:53] <novapy> what is the tests directory for?
[23:52:25] <exarkun> tests
[23:52:43] <novapy> yea, what kind?
[23:52:53] <SnoopJ> novapy, any directory that is part of a package is for whatever the author intended it to be for, setuptools itself doesn't have an opinion.
[23:52:53] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[23:52:58] <exarkun> whatever your heart desires
[23:52:59] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:6c5d:b410:2b97:32e2)
[23:53:27] <SnoopJ> or any file, for that matter; you can include arbitrary data in a distribution
[23:53:36] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[23:53:46] <novapy> ok, though, what kinds of tests can be done?
[23:54:22] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[23:54:23] <SnoopJ> regression tests, unit tests, integration tests, ...
[23:54:37] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[23:54:39] *** lukedashjr is now known as luke-jr
[23:55:23] *** Joins: admin123 (~harrymore@2607:fb90:558f:42d1:ed7f:df64:71cb:d760)
[23:55:23] *** Joins: semeion (~semeion@user/semeion)
[23:56:41] *** Quits: Azin (~Azin@user/azin) (Quit: Leaving...)
[23:56:57] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[23:57:15] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: leaving)
[23:57:15] <novapy> SnoopJ, yeah, no python files actually made it in.
[23:57:18] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[23:57:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[23:57:42] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[23:58:00] <novapy> Other files did though, like the License
[23:58:40] <lseactuary> BrenBarn https://pastebin.com/apJ2pErZ
[23:58:44] <lseactuary> is this ok?
[23:58:58] <SnoopJ> novapy, that probably indicates that you told setuptools to find your package(s) in the wrong place, and so it found nothing
[23:59:02] <blei> write simple code (for loops) to generate many valid expressions of your language ie (2123+2+2+1)(1+2+3+4)(...).... Use grex to induce a regular expression. Write a regular expression. Prove that the regular expressions are equal.
[23:59:07] <mike18_> hi someone here understand thread pools in python?
[23:59:36] <fdsdf> will updating python from 2.0 to 2.5 break existing scripts?
[23:59:58] <Wooble> fdsdf: probably?
