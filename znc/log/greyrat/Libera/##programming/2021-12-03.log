[00:02:21] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[00:02:38] *** Quits: Guest14 (~Guest14@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[00:02:55] *** Joins: tomathy (~jenova@user/quetzl)
[00:03:07] <tomathy> if i buy something from USA and pay standard postage will it arrive in the UK?
[00:03:10] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Quit: alefir)
[00:03:29] <GeDaMo> I haven't tried it but I suspect there will be import duties
[00:03:53] <tomathy> ok that's fine
[00:04:28] <tomathy> i can't believe it it's already in the UK and i bought it a day ago
[00:04:39] <tomathy> well a few days
[00:04:53] *** Quits: xff0x (~xff0x@port-92-193-253-16.dynamic.as20676.net) (Ping timeout: 256 seconds)
[00:05:33] *** Joins: Elzington_ (~Elzington@68.235.43.38)
[00:05:49] *** Joins: xff0x (~xff0x@2001:1a81:5351:7200:9887:9cf7:56de:2525)
[00:06:05] <CalimeroTeknik> it takes anywhere from 3 to 14 days on median in my experience
[00:06:22] <CalimeroTeknik> a month or two if something goes south
[00:07:53] *** Quits: Elzington (~Elzington@static-68-235-44-10.cust.tzulo.com) (Ping timeout: 252 seconds)
[00:07:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:08:22] *** Joins: vysn (~vysn@user/vysn)
[00:11:04] *** Joins: DevAntoine (~DevAntoin@pop.92-184-100-171.mobile.abo.orange.fr)
[00:14:38] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:b882:42b4:f44e:9996) (Remote host closed the connection)
[00:15:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[00:15:39] *** Quits: DevAntoine (~DevAntoin@pop.92-184-100-171.mobile.abo.orange.fr) (Ping timeout: 256 seconds)
[00:18:53] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:20:22] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[00:21:57] *** Quits: getynge (~getynge@2601:702:80:2fc0::b76e) (Remote host closed the connection)
[00:26:09] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Read error: Connection reset by peer)
[00:29:14] *** Joins: jamea77 (~jamea@189.237.49.1)
[00:29:58] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[00:30:58] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-119c-b00a-a373-e238.res6.spectrum.com)
[00:30:59] *** Quits: jamea (~jamea@189.237.49.1) (Ping timeout: 252 seconds)
[00:31:53] *** Quits: Akuli (~Akuli@82-203-160-219.bb.dnainternet.fi) (Quit: Akuli)
[00:32:05] *** Quits: runlevel_0 (~nyarlatho@user/runlevel-0/x-6929182) (Ping timeout: 256 seconds)
[00:34:36] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[00:35:45] *** Quits: jamea77 (~jamea@189.237.49.1) (Ping timeout: 252 seconds)
[00:39:02] *** Quits: teut (~teut@182.64.39.227) (Quit: Client closed)
[00:40:38] *** Joins: mrig (~mrig@user/mrig)
[00:41:43] *** Quits: src (~src@user/src) (Ping timeout: 256 seconds)
[00:41:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[00:43:00] *** Joins: DevAntoine (~DevAntoin@pop.92-184-100-171.mobile.abo.orange.fr)
[00:43:44] *** Joins: src (~src@user/src)
[00:44:52] *** Quits: absc (~absc@dynamic-adsl-94-34-203-164.clienti.tiscali.it) (Quit: Leaving)
[00:46:40] *** Quits: jess (~jess@libera/staff/jess) ()
[00:47:48] <KillerWasp> 🙋
[00:48:13] *** Quits: DevAntoine (~DevAntoin@pop.92-184-100-171.mobile.abo.orange.fr) (Ping timeout: 252 seconds)
[00:48:13] *** Quits: xff0x (~xff0x@2001:1a81:5351:7200:9887:9cf7:56de:2525) (Ping timeout: 252 seconds)
[00:48:46] *** Quits: src (~src@user/src) (Quit: Leaving)
[00:48:56] *** Joins: src (~src@user/src)
[00:49:01] *** Joins: xff0x (~xff0x@2001:1a81:5351:7200:d75b:ca2f:7cd3:f39)
[00:49:05] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[00:50:59] *** Joins: SJrX (~sjr@S0106302303dfb018.vf.shawcable.net)
[00:56:14] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[00:58:41] *** Quits: user51 (~user51@176.228.151.30) (Remote host closed the connection)
[01:03:16] *** Quits: Narrat (~omnius@p200300df5f14e29206ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:03:27] *** Joins: Hashida (~DaSH@ro2.flokinet.is)
[01:03:30] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:05:41] *** Joins: Devzone (~Devzone@87-243-81-21.ip.btc-net.bg)
[01:05:51] *** Quits: Hashida (~DaSH@ro2.flokinet.is) (Remote host closed the connection)
[01:06:11] *** Quits: src (~src@user/src) (Ping timeout: 252 seconds)
[01:06:33] *** Quits: Itaru (~DaSH@ro2.flokinet.is) (Ping timeout: 252 seconds)
[01:07:04] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Remote host closed the connection)
[01:07:48] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[01:08:29] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[01:10:26] *** Joins: xkuru (~xkuru@user/xkuru)
[01:12:40] *** Joins: jamea (~jamea@200.68.141.13)
[01:13:05] *** Quits: grandrew (~grandrew@2601:642:c301:c600:f22f:74ff:feac:90a3) (Remote host closed the connection)
[01:14:37] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 252 seconds)
[01:14:37] *** Parts: kish` (~sid742412@user/aqua) (Leaving)
[01:17:48] *** Joins: pierino (~piero@host-95-237-132-254.retail.telecomitalia.it)
[01:17:53] *** Quits: Devzone (~Devzone@87-243-81-21.ip.btc-net.bg) (Quit: Leaving)
[01:26:05] *** Joins: jamea77 (~jamea@200.68.141.14)
[01:26:29] *** Quits: jamea (~jamea@200.68.141.13) (Ping timeout: 256 seconds)
[01:26:38] *** stella is now known as BasedStella
[01:27:19] *** Joins: Inline (~Inline@aftr-37-201-241-35.unity-media.net)
[01:28:26] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:28:43] <pierino> can i do a strange question ? 
[01:30:02] <pierino> has anyone faced problem of compatibility encrypting with pure python implementation of aes256 pycryptodome and decrypting with openssl ?
[01:32:13] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[01:32:44] *** Quits: Intelo (~Intelo@88.246.77.255) (Ping timeout: 256 seconds)
[01:37:44] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[01:38:42] <tvm> different results ?
[01:39:44] *** Joins: flakland (~flaknet99@32.211.211.39)
[01:40:23] <tvm> i'd concentrate on how you handle the input data in the python before the actual processing
[01:41:12] <tvm> oh, nevermind.
[01:41:27] <tvm> i thought that you area getting different results using these two for some reason
[01:42:05] *** Joins: jokoon (~eio@2a01:e0a:542:e160:e955:5046:6194:4a14)
[01:42:34] <tvm> pierino: but there's #crypto channel, go there and ask
[01:44:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:44:32] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:46:04] *** Quits: maxzor (~maxzor@2a01cb04054faa009cdfae5585550337.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[01:46:14] *** Joins: maxzor (~maxzor@2a01cb04054faa009cdfae5585550337.ipv6.abo.wanadoo.fr)
[01:46:20] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[01:49:19] *** Quits: ShockTohp (~kevin@155.138.224.160) (Read error: Connection reset by peer)
[01:51:25] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Ping timeout: 256 seconds)
[01:53:43] *** Quits: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Read error: Connection reset by peer)
[01:54:13] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 252 seconds)
[02:00:16] *** Joins: src (~src@user/src)
[02:00:48] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[02:00:59] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[02:05:48] *** Quits: BUSY (~BUSY@user/busy) (Remote host closed the connection)
[02:06:17] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:07:47] *** Joins: zaher (~zaher@37.48.153.229)
[02:11:36] *** Joins: sonny27 (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[02:12:42] <arahael> pierino: you need to ensure *all* the params are the same.  the params for the encryption, not the params that happen to be exposed by the api you just happen to use.
[02:12:54] *** Quits: src (~src@user/src) (Quit: Leaving)
[02:13:04] *** Joins: src (~src@user/src)
[02:15:14] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:16:25] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[02:16:41] *** Joins: wildo (~lain6141@119.224.72.222)
[02:16:56] *** Quits: rya (~ry@user/rya) (Remote host closed the connection)
[02:18:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[02:19:19] <flakland> i retract my FTC is useless statement from yesterday, someone finally doing their job https://www.theverge.com/2021/12/2/22814633/nvidia-arm-purchase-semiconductor-ftc-40-billion-lawsuit-block-deal
[02:19:21] <bayaz> Title: The FTC is suing to block Nvidia’s $40 billion purchase of Arm 
[02:20:49] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:20:58] *** Quits: jaysicks (~jaysicks@94-21-138-235.pool.digikabel.hu) (Remote host closed the connection)
[02:21:15] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[02:21:45] *** Joins: jaysicks (~jaysicks@94-21-138-235.pool.digikabel.hu)
[02:23:47] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[02:24:52] *** Quits: sonny27 (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:31:27] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:32:00] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[02:32:38] *** Quits: pizdets_ (~pizdets@183.182.115.34) (Ping timeout: 250 seconds)
[02:32:45] <dre> SO THE FTC WON'T LET ME ME AND WON'T LET ME BE ME SO LET ME SEE, THEY TRIED TO SHUT ME DOWN ON IRC BUT IT FEELS SO EMPTY WITHOUT ME
[02:33:42] <flakland> is today dre day?
[02:34:03] *** Joins: pizdets (~pizdets@183.182.111.226)
[02:34:53] *** Quits: jokoon (~eio@2a01:e0a:542:e160:e955:5046:6194:4a14) (Quit: Leaving)
[02:35:29] <dre> AK 
[02:37:20] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:38:19] *** Quits: lilgopher (~textual@2601:241:8000:38f0:8143:8523:7b45:dec8) (Quit: Textual IRC Client: www.textualapp.com)
[02:38:41] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[02:40:33] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[02:46:07] <arahael> flakland: Today is dry day.
[02:46:17] <arahael> Damn it, typo.
[02:46:20] <arahael> flakland: Today is dre day.
[02:46:37] <dre> every day is dre day 
[02:46:59] <dre> https://www.youtube.com/watch?v=0xS9hvs5F7s
[02:47:00] <bayaz> Title: Dre Day by Dr. Dre ft. Snoop Dogg | Interscope 
[02:49:14] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:50:10] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[02:51:28] *** Joins: soapsudsxx (~soapsudsx@209.221.40.158)
[02:51:57] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[02:54:40] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Client Quit)
[02:54:46] *** Joins: quartz (~quartz@user/quartz)
[02:56:35] *** Quits: xff0x (~xff0x@2001:1a81:5351:7200:d75b:ca2f:7cd3:f39) (Ping timeout: 268 seconds)
[02:57:13] *** Joins: xff0x (~xff0x@2001:1a81:5351:7200:c8d5:d64b:ba01:92ce)
[02:58:09] <jinsun> ugh clean version
[02:59:12] <jinsun> sounds so bad with those censored lyrics
[03:01:19] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of rain shamans at https://indiedevs.net/)
[03:01:41] *** Quits: superdupond (~Kev@2a01cb0400149f00b8fab7e94a382922.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[03:02:47] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 252 seconds)
[03:03:05] *** Quits: jasonmason (~bc8165b6@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[03:03:45] *** Joins: cliluw (~cliluw@47.147.80.149)
[03:05:33] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Quit: Leaving)
[03:05:49] *** Joins: namkeleser (~namkelese@101.175.102.188)
[03:09:18] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:09:21] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:10:55] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:15:16] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:16:21] *** Joins: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net)
[03:19:46] *** Quits: KDDLB (kevin@user/kddlb) (Quit: The Lounge - https://thelounge.chat)
[03:21:11] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Quit: leaving)
[03:21:21] *** Quits: dudek (~dudek@185.150.236.103) (Quit: Leaving)
[03:21:26] *** Joins: KDDLB (~Kevin@user/kddlb)
[03:22:06] *** Quits: pierino (~piero@host-95-237-132-254.retail.telecomitalia.it) (Remote host closed the connection)
[03:23:31] *** Joins: Lazenca (~lazenca@user/lazenca)
[03:23:40] *** Joins: maxzor_ (~maxzor@lfbn-idf2-1-402-19.w86-246.abo.wanadoo.fr)
[03:24:11] *** Quits: maxzor (~maxzor@2a01cb04054faa009cdfae5585550337.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:25:33] *** Quits: jamea77 (~jamea@200.68.141.14) (Ping timeout: 256 seconds)
[03:26:09] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[03:29:19] *** Joins: ShockTohp (~kevin@155.138.224.160)
[03:29:47] *** Quits: namkeleser (~namkelese@101.175.102.188) (Quit: Client closed)
[03:30:02] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:32:55] *** Quits: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net) (Ping timeout: 256 seconds)
[03:33:36] <jiffe> anyone know if there is a way to tell if stdin is open via gdb ?
[03:33:55] <jiffe> I'm currently attached to a running process which is failing on fgets stdin
[03:33:59] <jiffe> bad file descriptor
[03:34:04] <flakland> is open?
[03:34:05] *** Joins: BUSY (~BUSY@user/busy)
[03:34:42] <jiffe> yeah, thats the only thing I can think is happening is for some reason stdin is closed
[03:34:48] <flakland> ls -l /proc/<pid>/fd/0  is stdin
[03:34:51] <flakland> on a linux
[03:35:42] <jiffe> ok looks like that is pointed to a pipe
[03:36:49] *** Quits: geeknix (~pi@180.74.190.212) (Ping timeout: 256 seconds)
[03:36:54] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:37:35] *** Quits: Fairy (~Fairy@2001:464a:4992:0:78b9:dd77:b9a4:c92d) (Ping timeout: 250 seconds)
[03:39:05] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[03:39:24] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[03:39:40] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Ping timeout: 256 seconds)
[03:41:15] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:42:54] *** Joins: Fairy (~Fairy@ti0004a400-3806.bb.online.no)
[03:43:09] *** Quits: jaysicks (~jaysicks@94-21-138-235.pool.digikabel.hu) (Remote host closed the connection)
[03:43:37] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:991a:b3a2:81ea:181a) (Read error: Connection reset by peer)
[03:45:31] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:991a:b3a2:81ea:181a)
[03:46:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:48:26] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 252 seconds)
[03:49:23] *** Joins: geeknix (~pi@2001:e68:5432:d6a8:64df:806:e8d6:354c)
[03:50:01] *** Joins: anyone (~filler@a4.inai.de)
[03:51:47] *** Joins: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net)
[03:52:49] <jiffe> any idea how to troubleshoot fgets returning bad file descriptor on stdin when stdin points to a named pipe that does appear to exist?
[03:55:03] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (Remote host closed the connection)
[03:55:35] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:b88:c471:2693:c4b1) (Ping timeout: 252 seconds)
[03:55:41] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[04:01:45] *** Quits: Inline (~Inline@aftr-37-201-241-35.unity-media.net) (Ping timeout: 256 seconds)
[04:02:00] *** Joins: Inline (~Inline@aftr-37-201-241-35.unity-media.net)
[04:02:39] *** Quits: src (~src@user/src) (Quit: Leaving)
[04:05:13] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[04:06:20] <sgt_chuckles> is it normal to feel reluctant to learn a new language for the job?
[04:07:52] <KillerWasp> jiffe: with error.h and errno.h
[04:08:07] <KillerWasp> you also can get the string from %m of printf
[04:09:01] <KillerWasp> any details you can get from 'man fgets'
[04:09:08] *** Joins: jamea (~jamea@177.239.80.39)
[04:10:16] <KillerWasp> also in 'man 3 errno'
[04:10:30] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[04:13:32] <[itchyjunk]> sgt_chuckles, depends
[04:13:45] <[itchyjunk]> If it's english, it's pretty standard all over the world
[04:13:58] <[itchyjunk]> I think mandarin is similarly popular in some businesses
[04:14:10] <sgt_chuckles> i know python and love using it, then i got a job doing the same stuff w. ruby but i dislike using it.
[04:14:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:14:38] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-10a9-6df7-8cac-a961.res6.spectrum.com)
[04:14:43] <[itchyjunk]> Why the dislike?
[04:16:07] *** Quits: audio (~audio@user/audio) (Ping timeout: 252 seconds)
[04:16:29] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-119c-b00a-a373-e238.res6.spectrum.com) (Ping timeout: 252 seconds)
[04:16:29] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[04:17:19] <sgt_chuckles> for one, most things in ruby is centered around rails, and I'm working on a non-rails project and the disparity between robust general purpose packages in rb and py bother me.
[04:17:53] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[04:18:01] <sgt_chuckles> it's a cli to be exact.
[04:18:02] *** Joins: incog (~ayy@pool-108-46-169-14.nycmny.fios.verizon.net)
[04:18:29] <sgt_chuckles> much rather build it in python, but its a ruby shop
[04:19:01] *** Joins: CoderGuy (~CoderGuy@user/coderguy)
[04:19:11] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:20:20] *** Quits: raj (uid72176@user/raj) (Quit: Connection closed for inactivity)
[04:22:42] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:c588:3aec:99:3905)
[04:23:23] <arahael> sgt_chuckles: to be honest, i think the ruby tooling is more mature, *especially* if you use bundler.
[04:25:26] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:31:03] <[itchyjunk]> Hey, i need some jargons
[04:31:15] <[itchyjunk]> in, say, linked lists, what is the link called?
[04:31:34] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[04:31:37] <[itchyjunk]> I am tasked in creating an object that holds a value and a link to the next object 
[04:31:38] <anyone> well, a link...?
[04:31:41] <[itchyjunk]> of the same type
[04:31:56] <[itchyjunk]> "link" doesn't make for a good field name though
[04:32:05] <anyone> no, we'd usually just call it "next" or so.
[04:32:06] <[itchyjunk]> if there was any specific name for this thing..
[04:32:18] <[itchyjunk]> hmm
[04:32:22] <anyone> assuming a typical singly-linked or doubly-linked list implementation
[04:32:38] <anyone> in trees, the links would be parent,child,sibling, whatever you model it on
[04:33:41] <jamea> c# hi all, winform, how to open a PDF with Chrome? (open a Chrome window, separately of my winform app)
[04:33:43] <[itchyjunk]> i think the point of this exercise is to create something like linked lists but using classes and objects and such
[04:34:38] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 252 seconds)
[04:34:53] *** Joins: cliluw (~cliluw@47.147.80.149)
[04:35:59] <anyone> [itchyjunk]: a linked list is a class (e.g. C++)
[04:37:45] <[itchyjunk]> ah
[04:37:55] <[itchyjunk]> probably is in java as well
[04:37:57] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:38:02] <[itchyjunk]> i'm working in java if i forgot to mention
[04:38:18] <ircuser> do you guys ever think how like every day we grow older, and lose brain cells and every day it grows more likely that your greatest accomplishment as a programmer is long behind you (whatever that was) and even your knowledge has an expiration date as the languages we spent our lives using fade into obscurity along with us
[04:39:33] <anyone> ircuser: some things you can only accomplish after having attained N years of prior experience
[04:41:36] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[04:41:57] <ircuser> ya I guess but it all just seems pointless
[04:42:03] *** night_wulfe_ is now known as night_wulfe
[04:42:31] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 252 seconds)
[04:42:34] *** Joins: koo5_ (~quassel@51.140.155.227)
[04:43:05] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:43:18] *** Joins: cliluw (~cliluw@47.147.80.149)
[04:43:32] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:43:33] <KillerWasp> https://external-preview.redd.it/vgv7Yvg4UxiuQwK8fkZurzDP3WziaUuYSEkvwyiTTiI.jpg?auto=webp&s=d1bf4bfcd30782c206f2dac140f8fa5bdb592278
[04:43:34] <bayaz> Type: image/jpeg Size: 1.3 MB 
[04:43:36] <[itchyjunk]> Some things can only be achieved after dying.
[04:43:45] <KillerWasp> damn... bad channel again!
[04:44:10] <KillerWasp> I'm not used to leaving this channel open.
[04:44:15] <anyone> same bat-channel same bat-time
[04:46:11] *** Quits: incog (~ayy@pool-108-46-169-14.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[04:46:28] <[itchyjunk]> argh, i am annoyed.
[04:46:32] <[itchyjunk]> My instructions says :
[04:46:35] <[itchyjunk]> "You should now have two fields, four functions, and six statements in total.  (The accessors/mutator are one line each.)"
[04:46:45] <[itchyjunk]> i have two fields, four functions and 5 statements in total..
[04:46:53] <[itchyjunk]> why does it matter how many line of code i have?
[04:46:55] * [itchyjunk] rips hair
[04:47:02] <[itchyjunk]> idk why it would be 6..
[04:48:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[04:48:50] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:51:41] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 252 seconds)
[04:51:50] *** Joins: jazzy (~jaziz@user/jaziz)
[04:52:39] *** Joins: cliluw (~cliluw@47.147.80.149)
[04:56:27] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[04:57:17] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 256 seconds)
[05:01:40] *** Joins: Atque (~Atque@user/atque)
[05:04:53] *** Quits: quartz (~quartz@user/quartz) (Ping timeout: 252 seconds)
[05:12:47] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:13:41] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 252 seconds)
[05:17:35] *** Joins: quartz (~quartz@user/quartz)
[05:18:11] <PlanckWalk> [itchyjunk]: Maybe it has a slightly different definition of "statement"?
[05:18:49] <PlanckWalk> By the Java Language Specification there should be more than 6 statements
[05:20:56] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[05:20:57] <PlanckWalk> Oh, nevermind.  I was misreading ClassOrInterfaceDeclaration
[05:21:16] <PlanckWalk> In that context it refers to inline declarations
[05:21:54] <smallville7123> my logger can now output to a std::string instead of printing output :)
[05:22:34] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-10a9-6df7-8cac-a961.res6.spectrum.com) (Quit: jarthur_)
[05:22:49] <[itchyjunk]> yeah
[05:22:56] <[itchyjunk]> there is 2 statements for two fields
[05:23:05] <[itchyjunk]> and 1 for each of the helper function, total of 3
[05:23:07] <[itchyjunk]> so 5
[05:24:18] *** Quits: Gaboradon (~Gaboradon@cpe-86-58-57-5.static.triera.net) (Quit: Shutdown)
[05:24:24] <PlanckWalk> In the JLS, statements are only inside blocks, which are either class-level static blocks or method bodies.
[05:25:29] <PlanckWalk> So (for example)  public class Test { int someField;  void someMethod() { } }  has zero statements.
[05:27:42] <PlanckWalk> Err class-level initializer blocks, not necessarily static.
[05:28:24] *** Joins: premultiplied (~premultip@69.84.6.130)
[05:29:05] *** Quits: gitgood (~gitgood@85.210.185.0) (Ping timeout: 252 seconds)
[05:29:44] *** Joins: X-Scale (~ARM@83.223.227.126)
[05:29:54] <jamea> how to fix this error: https://postimg.cc/hzxsYsNH/8964a880   "Could not load file or assembly 'Interop.AcroPDFLib, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies. The system cannot find the file specified. "
[05:29:56] <bayaz> Title: Image — Postimages 
[05:30:27] <arkanoid> which languages let me program backend and web frontend with the same language/libraries?
[05:31:11] <[itchyjunk]> i think that's how i am counting it
[05:31:20] <[itchyjunk]> the instruction is getting worse by the second
[05:31:51] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[05:32:06] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:32:59] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 256 seconds)
[05:35:05] <PlanckWalk> arkanoid: There's basically only one web frontend language, and that's Javascript.  However, you can write code in other languages to generate Javascript.
[05:35:29] <PlanckWalk> You can use just about any language to write a backend.
[05:35:55] <PlanckWalk> So depending upon what you mean, the answer is either "Javascript" or "essentially any language at all"
[05:36:17] <arkanoid> PlanckWalk: which languages do exist that generates javascript and are worth looking into to create a web application sharing code between frontend and backend?
[05:38:37] *** Quits: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net) (Ping timeout: 252 seconds)
[05:42:51] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 245 seconds)
[05:43:16] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[05:50:43] *** Quits: droid3 (~fffd@071-010-228-178.res.spectrum.com) (Read error: Connection reset by peer)
[05:53:02] *** Joins: jazzy (~jaziz@user/jaziz)
[05:55:25] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[05:56:58] *** Joins: zaher_ (~zaher@37.48.145.165)
[05:57:31] *** Joins: zaher__ (~zaher@188.229.202.60)
[05:59:26] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[06:00:15] *** Quits: zaher (~zaher@37.48.153.229) (Ping timeout: 256 seconds)
[06:00:58] *** Quits: xff0x (~xff0x@2001:1a81:5351:7200:c8d5:d64b:ba01:92ce) (Ping timeout: 268 seconds)
[06:01:23] *** Quits: zaher_ (~zaher@37.48.145.165) (Ping timeout: 256 seconds)
[06:02:25] *** Joins: xff0x (~xff0x@2001:1a81:5394:4100:b17b:62d7:7f1e:4d8a)
[06:03:07] *** Joins: premultiplied (~premultip@69.84.6.130)
[06:04:17] *** Quits: breavyn (~breavyn@user/breavyn) (Ping timeout: 252 seconds)
[06:04:50] *** Joins: breavyn (~breavyn@user/breavyn)
[06:05:45] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[06:06:29] *** Quits: arahael (~arahael@27-32-144-20.tpgi.com.au) (Ping timeout: 252 seconds)
[06:08:04] *** Joins: arahael (~arahael@27-32-144-20.tpgi.com.au)
[06:08:45] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 256 seconds)
[06:11:57] *** Joins: ejjfunky (~ejjfunky@125.164.16.166)
[06:13:39] *** Joins: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net)
[06:18:13] *** Quits: ejjfunky (~ejjfunky@125.164.16.166) (Ping timeout: 252 seconds)
[06:18:53] *** Quits: Inline (~Inline@aftr-37-201-241-35.unity-media.net) (Ping timeout: 256 seconds)
[06:19:07] *** Joins: namkeleser (~namkelese@101.175.102.188)
[06:19:08] *** anyone is now known as zz
[06:21:09] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[06:21:33] *** Joins: brabrax (~brabrax@user/brabrax)
[06:27:23] *** Quits: zaher__ (~zaher@188.229.202.60) (Ping timeout: 252 seconds)
[06:31:01] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[06:31:31] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[06:34:06] *** Joins: premultiplied (~premultip@69.84.6.130)
[06:34:11] *** Joins: password2 (~password8@user/password2)
[06:37:35] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[06:38:25] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:39:29] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 252 seconds)
[06:40:26] <Gamah> twas the month before christmas and all through the channel, not a keyboard was stirring, not even a bot
[06:40:54] <unetudiantJS> i'm here Gamah I just don't have anything to contribute lol, i've been fucking with yaml recently though
[06:41:17] <Gamah> I'm going to have to pick a format for sending data to my c++ app soon
[06:41:25] <Gamah> i felt like json was just going to be the go-to default
[06:41:59] <unetudiantJS> yaml is really easy if learning the indentation doesn't drive you nuts first i'm learning it to write playbooks for ansible
[06:42:10] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 265 seconds)
[06:42:48] <Gamah> yaml is "strongly typed" where json is just all "strings" right?
[06:43:17] *** Joins: Trieste (T@user/pilgrim)
[06:43:19] <dodo> unetudiantJS: get your editor to indent..
[06:43:28] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:43:44] <unetudiantJS> i don't know about json honestly
[06:43:52] <unetudiantJS> dodo: I've tried ansible still wouldn't take it
[06:44:31] <PlanckWalk> No, json has a lot more types than just strings
[06:44:47] <jeaye> Gamah: Yaml and JSON are not very differently typed.
[06:45:08] <Gamah> are either built-in to c++ std?
[06:45:12] <jeaye> Gamah: JSON supports string, numbers, objects, arrays, bools, etc.
[06:45:20] <jeaye> No, neither are in the C++stdlib.
[06:45:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:45:24] <jeaye> Fortunately.
[06:46:04] <Gamah> hmmm
[06:46:10] <Gamah> python can RPC into c++ tho right?
[06:48:48] <jeaye> Python and C++ programs can talk in a lot of ways.
[06:49:19] <KillerWasp> jiffe: did it help you?
[06:49:44] <Gamah> what's a common way where python is the UI and c++ is a work routine that only needs a few bytes of input information?
[06:52:12] <ircuser> Garmah: threads
[06:52:52] *** Hash is now known as stoned
[06:53:29] <ircuser> also I doubt python and C++ can talk to each other since python can process things on the fly but C++ would lag as it needs to be compiled ahead of time 
[06:54:12] <Gamah> well that's what i'm saying
[06:54:26] <Gamah> i'd have some sort of "config file" the python app can pass to the c++ at runtime
[06:54:46] <Gamah> or even read from stdin maybe?
[06:54:50] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[06:55:04] *** Quits: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net) (Quit: Leaving)
[06:55:18] <ircuser> why not embed python interpreter in C++?
[06:55:26] <ircuser> in the program itself
[06:55:29] *** Joins: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net)
[06:55:45] <Gamah> because i just want to use python to do a simle portable gui
[06:56:54] <Gamah> do some graphing of the results from the c++ number crunching without having to build the gui in something like QT
[06:57:32] *** Joins: quartz (~quartz@user/quartz)
[06:57:53] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[06:58:42] <oldlaptop> The general preference these days is to structure the C or C++ code as a python (or whatever other scripting language) extension, rather than embed the interpreter
[06:58:54] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[06:59:24] *** Joins: Guest14 (~Guest14@pool-96-253-74-73.rcmdva.fios.verizon.net)
[07:01:05] <jeaye> Gamah: The C++ could just be compiled to a shared library which is loaded by Python. Python could then call into it to run any of the expose functions.
[07:01:05] <ircuser> oldlaptop: doesn't that just imply those people think python is superior to C++? 
[07:01:16] <ircuser> I'd rather embed the weaker language in a more powerful language
[07:01:40] <jeaye> Gamah: If not that, then the C++ program could be running in the background and the two communicate using gRPC or HTTP.
[07:02:11] *** Joins: newpy (~newpy@206.168.231.90)
[07:03:17] <oldlaptop> ircuser: They think python is faster and easier to write in, at the cost of (generally) being slower in practice.
[07:03:39] <lockywolf> How would I extract port numbers from netstat -4 -t -p using awk? Using ip:port is just `netstat -4 -t -p | awk '{print($4);}' , and it is possible to do netstat -4 -n -t -p | awk '{ print($4); }' | awk -F: '{print($2);}', but is there a way without the second pipe?
[07:03:44] <oldlaptop> (Incidentally, I would say Tkinter is a much flabbier way of talking to Tk than Tcl itself.)
[07:05:20] <oldlaptop> ircuser: The general idea is that the parts that don't need to be fast (which in practice are most of most programs) can be done in the scripting language, which is more economical with the programmer's time, and the parts that do need to be fast can be in C or C++, which is more economical with the machine's time.
[07:06:16] <oldlaptop> This implies that the program may well begin as a prototype written entirely in the scripting language, with profiling after the fact to determine which parts will benefit from the extra effort.
[07:06:25] *** Joins: gr1m (~gr1m@45.83.220.194)
[07:06:43] <jeaye> lockywolf: I'd argue that two invocations is going to be simpler than one.
[07:07:33] <oldlaptop> (Another common realization of this idea is to use such libraries as numpy or tensorflow - or for that matter things like sqlite - to do the things that wouldn't make sense to write in the scripting language.)
[07:07:40] <lockywolf> jeaye, ok :)
[07:07:56] <jeaye> lockywolf: What you have works well. Move onto the next task! :)
[07:09:04] *** Joins: simon323 (~simon323@2409:8a34:468:83d0:80e5:1992:5e66:41ca)
[07:09:23] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 256 seconds)
[07:10:17] *** Quits: RedNifre (~michael@dslb-188-100-021-036.188.100.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[07:10:21] <KillerWasp> what's Qt5LinguistTools?
[07:10:46] <KillerWasp> i can't find it in my repositories
[07:10:53] <jeaye> https://doc.qt.io/qt-5/qtlinguist-index.html
[07:10:55] <bayaz> Title: Qt Linguist Manual 
[07:11:42] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[07:11:45] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[07:12:16] *** Joins: RedNifre (~michael@dslb-090-186-054-058.090.186.pools.vodafone-ip.de)
[07:16:06] <oldlaptop> Gamah: as a sense of what I mean, this layout: <https://repository-images.githubusercontent.com/273791207/b7c76a80-b5bc-11ea-9457-c8ae7ef8411e> is defined by this code: <https://github.com/oldlaptop/tkrunner/blob/f1dd160931dd99c8d0a41b560dcaa250878f8ac0/tkrunner#L125>
[07:16:23] <oldlaptop> the careful reader will note a wondrous thing: the code actually looks like the final layout
[07:18:03] <oldlaptop> (the .foo.bar.baz things are widget paths, with names whose lousy shortness demonstrate one downside of this approach to layout definition)
[07:18:59] <oldlaptop> https://www.tcl.tk/man/tcl8.6/TkCmd/grid.html#M29 formally defines the behavior - it's the kind of thing that is obviously too simple and sensible to work, but does anyway
[07:19:00] <bayaz> Title: grid manual page - Tk Built-In Commands 
[07:19:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[07:19:32] <vdamewood> Foof!
[07:19:34] <oldlaptop> (well, not *that* formally and carefully, I guess :))
[07:19:37] <vdamewood> Food!
[07:20:07] <oldlaptop> vdamewood: https://en.wikipedia.org/wiki/Dioxygen_difluoride
[07:20:07] <bayaz> Title: Dioxygen difluoride - Wikipedia 
[07:20:31] <vdamewood> oldlaptop: FOOF!
[07:20:38] <oldlaptop> Indeed.
[07:20:46] <vdamewood> HOH!
[07:21:06] <oldlaptop> FOOF plus HOH should indeed make a large FOOF.
[07:21:14] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[07:21:30] <vdamewood> Dammit, there's no Wikipedia page on HOH.
[07:22:21] <KillerWasp> 0xF00F
[07:22:22] *** Quits: znedw5 (~znedw@home.znedw.com) (Quit: The Lounge - https://thelounge.chat)
[07:22:27] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[07:22:45] <vdamewood> Oh, Wow. Foof melts at 110K
[07:23:17] <oldlaptop> It causes FOOFs on contact with lots of things at considerably lower temperatures
[07:23:29] *** Quits: namkeleser (~namkelese@101.175.102.188) (Quit: Client closed)
[07:23:30] <oldlaptop> including things that under normal circumstances would be regarded as pre-foofed
[07:24:41] *** Joins: coolchrome (~cool333@bzq-79-176-139-177.red.bezeqint.net)
[07:25:19] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[07:26:09] *** Joins: znedw5 (~znedw@home.znedw.com)
[07:26:55] <amigojapan> vdamewood: konnichola
[07:27:31] *** Quits: jamea (~jamea@177.239.80.39) (Ping timeout: 252 seconds)
[07:28:01] *** Quits: cool6502 (~cool333@bzq-79-176-139-177.red.bezeqint.net) (Ping timeout: 256 seconds)
[07:28:31] <vdamewood> amigojapan:Konnichola. Ogenki destas?
[07:29:21] <amigojapan> vdamewood: destroy ii. Don vdamewood wa?
[07:29:43] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 252 seconds)
[07:30:07] <ircuser> Et tu, Brute?
[07:30:13] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Read error: Connection reset by peer)
[07:30:30] <vdamewood> Yomo genki destoy.
[07:30:45] <amigojapan> :)
[07:31:08] <vdamewood> ircuser: That's only one language.
[07:33:01] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 252 seconds)
[07:33:56] <vdamewood> amigojapan: A friend of mine is taking Japanese. I got to explain to her why Konnichiwa is spelled with a ha.
[07:35:13] <amigojapan> Ah nice vdamewood besides it being a rule for the particle in hiragana is there any reason why?
[07:35:13] *** Joins: homura (uid398348@user/homura)
[07:36:12] <vdamewood> amigojapan: No. Just that Konnichiwa was part of a longer, full sentence so it makes gramtical sense to use the particle.
[07:37:18] <amigojapan> I see
[07:37:52] <amigojapan> Konnnichi ha ii hi desu ne
[07:38:07] *** Joins: grandrew (~grandrew@mobile-166-170-43-176.mycingular.net)
[07:38:13] <amigojapan> Yoi hi
[07:39:23] <vdamewood> Hmm... one page I found said it was Konnichi wa ikaga desu ka?
[07:40:29] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[07:41:16] <amigojapan> vdamewood: that would be more like "how are you today?"
[07:41:56] <amigojapan> vdamewood: do you know the full sentence of itadakimasu?
[07:42:04] <vdamewood> amigojapan: Yep. Languages do that a lot. For example, the English 'Howdy' is a shortening of 'How do you do?'
[07:42:15] <KillerWasp> amigojapan: hello, why i can see you in any side?... :/
[07:42:40] <vdamewood> amigojapan: No. I thought that was the whole thing.
[07:42:47] <amigojapan> KillerWasp: hmm I feel the same
[07:42:56] <KillerWasp> xD
[07:43:29] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[07:43:41] <vdamewood> Another page says it's Konnichi wa gokigen ikaga desu ka?
[07:44:12] <amigojapan> vdamewood: it's "anata no inochi wo watashi no inochi to koukan sasete itadakimasu" said to the Kami in the food
[07:44:59] <vdamewood> Cool.
[07:46:15] <vdamewood> Okay, I found another page that includes gokiken. The one without it is Quora, and the two with it look like legit Japanese websites, so I'm going with that.
[07:47:17] <amigojapan> Ok vdamewood 
[07:47:41] *** Quits: RedNifre (~michael@dslb-090-186-054-058.090.186.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[07:49:29] *** Joins: RedNifre (~michael@dslb-002-206-121-223.002.206.pools.vodafone-ip.de)
[07:50:02] <amigojapan> vdamewood: both kyou ha gokigen ikaga desu ka and kyou ha yoi hi desu ne are both common greetings
[07:50:10] <ircuser> if Japanese were a programming language what programming language would it be?
[07:50:38] <amigojapan> ircuser: probably nadeshiko
[07:51:03] <ircuser> English would be C
[07:51:23] <amigojapan> Nadeshiko is a language written in Japanese characters
[07:52:24] <ircuser> I think Japanese would be Java
[07:53:31] <vdamewood> Javanese would be Java.
[07:56:22] <amigojapan> Nadeshiko had a nice name. But it is Windows only, but there is a similar language called mind, here is an article on it http://no-sword.jp/blog/2006/12/programming-without-ascii.html
[07:56:23] <bayaz> Title: Programming without ASCII | No-sword 
[07:58:24] *** Joins: LiftLeft (~LiftLeft@2603:9000:ec02:7dfd:4efc:71e9:13d9:b8b5)
[07:59:12] *** Quits: Guest14 (~Guest14@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[07:59:26] *** Quits: LiftLeft (~LiftLeft@2603:9000:ec02:7dfd:4efc:71e9:13d9:b8b5) (Read error: Connection reset by peer)
[07:59:45] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[08:00:44] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[08:01:49] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:d8a1:d15e:bf3b:b33f)
[08:02:29] *** Joins: NEYi (~NEYi@109.251.216.38)
[08:04:21] <oldlaptop> ircuser: APL, naturally.
[08:04:43] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[08:04:58] <oldlaptop> (Or is that what would happen if kanji were a programming language?)
[08:05:01] *** Quits: grandrew (~grandrew@mobile-166-170-43-176.mycingular.net) (Remote host closed the connection)
[08:06:04] *** Joins: grandrew (~grandrew@mobile-166-170-43-176.mycingular.net)
[08:06:20] *** Joins: premultiplied (~premultip@69.84.6.130)
[08:07:21] *** Joins: kaizushi1 (~kaizushi@gateway/tor-sasl/kaizushi)
[08:07:51] *** Quits: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net) (Ping timeout: 252 seconds)
[08:08:18] *** Quits: kaizushi (~kaizushi@gateway/tor-sasl/kaizushi) (Ping timeout: 276 seconds)
[08:08:37] <amigojapan> oldlaptop: there are too few APL instructions to be like Kanji
[08:08:46] *** Quits: zippit (~chirag@user/chir4gm) (Quit: ZNC - https://znc.in)
[08:08:48] <oldlaptop> That's true enough.
[08:09:07] <oldlaptop> The /density/ is still similar, though.
[08:09:19] <amigojapan> Alright
[08:10:29] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[08:10:35] <oldlaptop> I'd argue it's also conceptually similar in that it assigns special graphemes to individual operations, instead of naming them with collections of graphemes
[08:11:02] <amigojapan> Ok
[08:11:09] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 252 seconds)
[08:11:52] <smallville7123> ok i made a VERY basic GLSL shader generator https://gist.github.com/mgood7123/9f83ba787fb14b0f7eb6ee58ae5b995a
[08:11:53] <bayaz> Title: GL_FBO.cpp 
[08:12:22] <d3x0r> no lights/shadows?
[08:13:06] *** Joins: Burgundy (~yomon@79.115.213.171)
[08:13:56] <smallville7123> nope
[08:14:14] <d3x0r> texture/font atlas?
[08:14:19] <smallville7123> nope
[08:14:49] <smallville7123> just basic input's and output's
[08:16:21] *** Joins: LiftLeft (~LiftLeft@2603:9000:ec02:7dfd:4efc:71e9:13d9:b8b5)
[08:16:57] <smallville7123> the code is equivilant to this https://gist.github.com/32f95addef9b1ab8882690a0b1c14f59
[08:16:58] <bayaz> Title: GL_FBO.cpp 
[08:17:16] *** Joins: audio (~audio@user/audio)
[08:17:16] *** Quits: LiftLeft (~LiftLeft@2603:9000:ec02:7dfd:4efc:71e9:13d9:b8b5) (Read error: Connection reset by peer)
[08:19:15] <smallville7123> however i intend for it to be multi-staged, eg the input from one frag shader can become the output to the next frag shader and so on
[08:21:14] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[08:21:33] <smallville7123> tho i should probably be writing a source translator instead
[08:22:09] *** stoned is now known as Hash
[08:22:29] *** Quits: password2 (~password8@user/password2) (Ping timeout: 256 seconds)
[08:23:06] *** Joins: RenAdjest (~RenAdjest@user/renadjest)
[08:25:05] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[08:25:35] <smallville7123> or rather a cross compiler?
[08:30:39] *** Parts: KillerWasp (KillerWasp@user/killerwasp) (YOU KIDDING ME?? YOU KIDDING MEEE???? (PC drinking beer) *kernel panic!*)
[08:30:50] <smallville7123> im not sure
[08:30:57] *** Joins: ja (~ja@c-98-210-121-99.hsd1.ca.comcast.net)
[08:31:47] <sonny> cross compiler is only architecture related
[08:32:08] <sonny> shader is a language right? sounds like source 2 source
[08:32:32] <d3x0r> transpile
[08:33:45] <smallville7123> yea
[08:33:59] <smallville7123> tho i kinda dont want to do that
[08:34:54] <smallville7123> cus complexity
[08:35:19] <ja> I'm not sure that it's the right channel to ask this question but whatever 
[08:35:33] <ja> I enjoy george hotz's live streams
[08:36:06] <ja> and I'm looking for a similar content on youtube or twitch 
[08:37:27] <ja> george's stuff is kind of a strange but that's what I'm looking for
[08:38:04] <ja> so does anyone here have any recommendations for me?
[08:40:03] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Ping timeout: 256 seconds)
[08:40:36] <sonny> never heard of him, what type of show is it?
[08:45:41] <ja> that's the guy who unlocked and hacked iphone in 2007 and basically invented jail break
[08:46:32] <ja> also hacked PS3 and got sued by SONY
[08:46:49] *** Joins: nickorta12 (~nickorta1@174-28-167-187.albq.qwest.net)
[08:46:50] <ja> now he is working on autonomous vehicles
[08:47:09] <d3x0r> defcon?
[08:47:50] <d3x0r> https://www.youtube.com/user/DEFCONConference/videos
[08:47:50] <ja> well now he is more interested in AI/ML stuff 
[08:47:56] <ja> not in security
[08:48:03] <ja> and that's what I would prefer as well
[08:48:13] <deniska> ja: are you looking for something RE-related or something more general?
[08:48:24] <d3x0r> well Lex Fridman wants to talk to that sort of people too
[08:48:30] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:49:23] <deniska> I've been recently enjoying NCommander streams (well, VODs), he likes to mess with various old OS stuff
[08:49:32] <smallville7123> tho how do we chain shaders if their input and output variable names can differ?
[08:49:45] <d3x0r> through render targets
[08:50:10] <ja> He has been on Lex Podcast two times already
[08:50:44] <d3x0r> glsl has this 'include' sort of feature; three.js shader ends up being composed of one long script with #ifdefs that check to load various includes; and glsl is good at filtering out what actually gets used even if you declare it extra
[08:51:37] <deniska> ja: For security/RE, I like LiveOverflow, not as high profile as George Hotz obviously :)
[08:52:38] <smallville7123> d3x0r: but those require specific locations
[08:52:55] <d3x0r> 'those'?
[08:53:03] <smallville7123> eg two shaders must have their variables attributed to the same locations
[08:53:13] <ja> thanks for all your suggestions
[08:54:08] <ja> deniska: I'm was just hoping that someone also watches George Hotz and knows something else in the similar vein
[08:54:13] *** Quits: nickorta12 (~nickorta1@174-28-167-187.albq.qwest.net) (Ping timeout: 256 seconds)
[08:54:48] <ja> I don't really care about the content as long as it is Computer Science or even math related
[08:56:22] <d3x0r> ja eigenchris   https://www.youtube.com/channel/UCsz6GM8EcLkaGIauutfSeJg/videos and physics unsimplified 
[08:57:00] <d3x0r> https://www.youtube.com/c/eigenchris
[08:57:12] <d3x0r> actually https://www.youtube.com/c/eigenchris/videos
[08:58:52] <ja> eigenchris sounds interesting :)
[08:59:18] <ja> I will definitely check all this stuff out
[08:59:34] <d3x0r> he's a little dryer than lex :)
[09:00:02] <deniska> dryer than lex? Literal dessicant?
[09:00:19] <d3x0r> fairly so
[09:02:05] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[09:05:20] *** Joins: Inline (~Inline@aftr-37-201-240-188.unity-media.net)
[09:05:28] *** Quits: Inline (~Inline@aftr-37-201-240-188.unity-media.net) (Remote host closed the connection)
[09:06:09] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[09:12:36] *** Quits: grandrew (~grandrew@mobile-166-170-43-176.mycingular.net) (Remote host closed the connection)
[09:12:59] *** Joins: grandrew (~grandrew@mobile-166-170-43-176.mycingular.net)
[09:13:24] *** Joins: sheepduck (~sheepduck@user/sheepduck)
[09:15:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:29:46] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[09:29:59] *** Joins: Rounin (~david@84.212.130.215)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:03] *** Joins: JanC (~janc@user/janc)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:42] <smallville7123> maybe something like this https://gist.github.com/bbd2ae771aecb9ba52816a6703a5f1f2
[09:32:43] <bayaz> Title: GL_FBO.cpp 
[09:35:29] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:39:31] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[09:39:46] *** Quits: ja (~ja@c-98-210-121-99.hsd1.ca.comcast.net) (Quit: WeeChat 2.8)
[09:44:05] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[09:48:28] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[09:50:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[09:51:53] *** Joins: premultiplied (~premultip@69.84.6.130)
[09:55:21] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:6953:f4be:264a:efd4) (Read error: Connection reset by peer)
[09:56:38] <lockywolf> In CMake, how do I add a target in a subdirectory without adding a separate CMakeLists.txt?
[09:56:45] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 252 seconds)
[09:57:19] <d3x0r> well you can specify files for a target from any directioy you can have lots of targts in a cmakelists
[09:57:35] <d3x0r> otherwise you put a CMakeLists there and add_subdirectory or external_project()
[09:58:04] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[09:58:10] <d3x0r> add_library addlibrary addlibrary addexeuctable - 4 targets 1 cmake
[09:58:50] <d3x0r> there is just include() so you can in your root camke include( cmakeLists.target1.txt) and that runs in the current context
[09:59:33] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[09:59:43] *** Joins: rany (~rany@user/rany)
[10:00:17] <lockywolf> that is exactly the thing I want to avoid
[10:00:27] <lockywolf> having one more additional CMakeLists
[10:00:37] <d3x0r> call it target1.txt
[10:00:48] <d3x0r> or just put them in the one
[10:01:00] <lockywolf> I want something like add_executable( tests/test_lib DEPENDS src/test_lib )
[10:01:23] <d3x0r> hmm I don't think there's like namespacing like that
[10:01:27] <d3x0r> just drop tests and src there
[10:02:05] <d3x0r> and above add_library(test_lib tests/*...) add_library( test_lib2 src/* )
[10:02:38] <d3x0r> oh ya you need to make them different names too 
[10:02:53] <d3x0r> add_executable( test_for_lib test_lib )
[10:03:03] *** Joins: Buttercat (~Buttercat@user/buttercat)
[10:03:17] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[10:03:21] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[10:03:22] <lockywolf> that is not what I want to do
[10:03:26] <d3x0r> add_executable( test_for_lib2 test_lib2 )
[10:03:31] <lockywolf> I do not want to put tests and the code in one place
[10:03:36] <lockywolf> *and objects
[10:03:40] <d3x0r> they aren't
[10:04:05] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[10:04:07] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[10:04:12] <d3x0r> FILE( srclist glob * ) something can build the lists if you're lazy otherwise put the sources in the right place
[10:04:34] <d3x0r> set( testlib_srcs src/... ) set(testlib2_srcs  test/.... ) 
[10:05:03] <d3x0r> add_executable ( testlib_exe ${test_lib_srcs} test_lib)
[10:05:15] <d3x0r> add_target_libraries ?
[10:06:12] <lockywolf> found
[10:06:41] <lockywolf> you use set_target_properties( target_name PROPERTIES RUNTIME_OUTPUT_DIRECTORY "tests")
[10:07:16] <d3x0r> each input file is only that file though - it gets compiled with the same options
[10:07:40] <d3x0r> even if compiled to multiple targets
[10:08:33] *** Quits: Satin (uid193953@id-193953.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[10:09:05] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:09:28] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[10:11:02] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:11:53] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[10:13:24] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[10:17:24] *** Quits: okt (~okt@user/okt) (Quit: leaving)
[10:25:42] *** Joins: RenAdjest2 (~RenAdjest@user/renadjest)
[10:26:27] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[10:28:38] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[10:29:18] *** Quits: RenAdjest (~RenAdjest@user/renadjest) (Ping timeout: 250 seconds)
[10:30:08] <ishan> Hey
[10:31:02] <ishan> Is there some way to find the most often occuring bit in a number? I was thinking of doing a ^ b ^ c ^ d but this breaks if a = 0; b = 0; c = 0; d= 1; (It should output 0 but it'll output 1) 
[10:31:38] <d3x0r> I use a lookup table of 256 entries for the count of 1's or 0's per byte and add them up
[10:31:48] <d3x0r> 0's is 8-1's
[10:32:01] <d3x0r> n(8-1's)
[10:32:23] <d3x0r> blah... 8n - 1's
[10:32:32] *** Joins: okt (560965ea7b@user/okt)
[10:33:15] *** Quits: RenAdjest2 (~RenAdjest@user/renadjest) (Quit: Leaving)
[10:33:52] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:33:59] <PlanckWalk> Some CPUs have a "count 1 bits" instruction
[10:34:08] <ishan> PlanckWalk, pop_count yess
[10:34:12] <d3x0r> some langauges expose intrinsics for those
[10:35:07] <PlanckWalk> Yes, so that even if the CPU doesn't have that instruction, it will produce code that is at least pretty good
[10:35:33] <ishan> Hmm. I'll just use that. Thank you everyone!
[10:35:58] <ishan> Another question. How do I count the most often occuring digit at an index I across N binary numbers? 
[10:36:20] <d3x0r> the same way :)
[10:36:45] <PlanckWalk> Well, I don't know a nice way for that
[10:36:48] <ishan> The only solution I have come up with is to simply create an array of length equal to the length of the longest binary number. Then track the count of one or zero at each index and at the end generrate a mask based on this 
[10:38:40] <d3x0r> https://github.com/d3x0r/srg/blob/main/salty_random_generator.js#L1144-L1170 this is a brute force bit mask iteration that counts 1's and 0's 
[10:38:44] <bayaz> Title: srg/salty_random_generator.js at main · d3x0r/srg 
[10:38:56] <PlanckWalk> Like, if you had a thousand 64-bit numbers I can't think of a way that takes much less than 64000 operations.
[10:39:20] <d3x0r> 8000 operations
[10:40:51] <ishan> Alright folks. I'll stick to my implementation then. thank yo u:) 
[10:41:17] <d3x0r> https://github.com/d3x0r/sack.vfs/blob/master/src/srg_module.cc#L247-L384 this builds a lookup table
[10:41:18] <bayaz> Title: sack.vfs/srg_module.cc at master · d3x0r/sack.vfs 
[10:41:23] <d3x0r> ishan ^
[10:42:10] *** Joins: qbt (~qbt@user/edun)
[10:42:34] <PlanckWalk> If the code had to be as fast as possible, I'd probably process it in short chunks for register and cache friendliness
[10:43:04] <d3x0r> 64k isn't that much either could cut it down to 4k
[10:43:12] <d3x0r> with a 16 bit lookup table
[10:43:20] <PlanckWalk> Looking up by what?
[10:43:30] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:43:45] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[10:43:46] *** Parts: qbt (~qbt@user/edun) ()
[10:44:02] <d3x0r> words 
[10:45:23] <ishan> d3x0r: Yes, this is similar to what I am doing except I am using u64 and I have to do this upto the left most 1. Here is my current impl https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=f7de13052583f043ff54c2b1971fa6d6
[10:45:36] <PlanckWalk> Hmm, I suppose you could count odd bits then even bits, and so on
[10:46:27] <PlanckWalk> x & 0x0101etc + y & 0x0101etc + z & 0x0101etc  gives interleaved 2-bit counts
[10:46:27] <d3x0r> ya
[10:47:52] <d3x0r> ones += x[0..16] ones += table[17..32]; ... 4 operations per 64 bits.  The count of ones is less than 1 byte in 16 bits ...
[10:48:17] <d3x0r> and some masking on the ends for the odd index into 16 bit modulo
[10:48:21] *** Parts: okt (560965ea7b@user/okt) ()
[10:48:36] <PlanckWalk> Then you can accumulate those counts in much the same way, so each input integer is only handled about 2-3 times instead of 64 times.
[10:49:07] *** Joins: okt (560965ea7b@user/okt)
[10:49:13] <d3x0r> or x & 0xFFFF; (x >>16) & 0xffff ... adds a few more operations
[10:51:06] *** Joins: kmh_ (~kmh@2a00:6020:5004:6800:99bf:955b:2568:7fcd)
[10:51:25] <PlanckWalk> So yeah, we could count the bits in each position across many integers without multiplying by the number of bits in each.
[10:51:35] <PlanckWalk> It's only a constant factor speedup, but worth it
[10:51:55] <PlanckWalk> (Assuming speed is critical compared with maintenance complexity)
[10:54:09] <d3x0r> it's a fairly simple state machine; not really much to maintain; one and done ;)
[10:54:30] *** Quits: kmh (~kmh@2a00:6020:5004:6800:f48c:606a:7e94:b0ae) (Ping timeout: 268 seconds)
[10:58:53] <ishan> I am trying to understand this but it's a bit advanced for me 
[11:00:11] <d3x0r> well the .cc version example counts longest strings of 1's and 0's too... so it's overcomplicted....
[11:05:31] *** Joins: rany (~rany@user/rany)
[11:07:25] *** Joins: tercaL (~tercaL@user/tercal)
[11:09:26] <tercaL> I've a local render.exe file, getting renders of our 3D images (adding parameters like; -s start frame, -e end frame and so on) I'd like to make a GUI app to send it all those parameters on a GUI interface (with browse button, pointing it to a project directory, instead of writing in the console manually), so my question is, where should I start, which language would be easy for that simple task? Shortly; A GUI app, few tickboxes, textboxes and few 
[11:09:26] <tercaL> browse buttons, and all those values would be sent/passed to a local program's file named: render.exe
[11:09:33] <tercaL> any suggestions would be much appreciated, thanks!
[11:13:00] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Ping timeout: 268 seconds)
[11:15:57] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[11:17:00] *** Joins: runlevel_0 (~nyarlatho@user/runlevel-0/x-6929182)
[11:17:29] *** Joins: palasso (~palasso@user/palasso)
[11:20:31] <flakland> i bet perl can handle that task!
[11:21:25] *** Joins: user51 (~user51@176.228.151.30)
[11:21:49] <flakland> sup user51
[11:23:05] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:23:50] *** Quits: caramel (~caramel@user/caramel) (Quit: Leaving)
[11:23:56] *** Joins: raj (uid72176@user/raj)
[11:24:40] <user51> flakland: yo
[11:27:13] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[11:27:51] <d3x0r> I got this JS gui... either as an HTml module or native; and JS would do all that well - the task module in node (child_process) is pretty good; abstracts details to higher level constructs
[11:29:15] <tercaL> flakland: Windows GUI?
[11:29:39] <flakland> why not?
[11:30:41] <flakland> https://metacpan.org/pod/Win32::API
[11:30:43] <bayaz> Title: Win32::API - Perl Win32 API Import Facility - metacpan.org 
[11:31:59] <flakland> http://perl-win32-gui.sourceforge.net/cgi-bin/docs.cgi?doc=tutorial
[11:32:00] <bayaz> Title: Win32::GUI::Tutorial 
[11:32:27] <d3x0r> higher level skinnable borderless alpha transparent windows...
[11:34:39] *** Quits: audio (~audio@user/audio) (Ping timeout: 252 seconds)
[11:35:39] *** Quits: _inky (~inky_@141.136.79.85) (Ping timeout: 256 seconds)
[11:38:32] *** Joins: premultiplied (~premultip@69.84.6.130)
[11:39:37] *** Joins: absc (~absc@81.31.144.28)
[11:40:48] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[11:41:37] *** Quits: inky_ (~inky@141.136.79.85) (Ping timeout: 252 seconds)
[11:42:25] *** Joins: inky_ (~inky@188.115.224.238)
[11:43:07] *** Joins: aradesh (~aradesh@user/aradesh)
[11:43:35] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 256 seconds)
[11:45:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:46:23] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[11:48:50] *** Joins: jaysicks (~jaysicks@94-21-138-235.pool.digikabel.hu)
[11:49:28] *** Joins: _inky (~inky_@188.115.224.238)
[11:49:44] *** Joins: operateur (~operateur@91.143.220.230)
[11:50:05] *** Parts: tomathy (~jenova@user/quetzl) (Leaving)
[11:53:07] *** Joins: DevAntoine (~DevAntoin@pop.92-184-100-12.mobile.abo.orange.fr)
[11:57:18] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Remote host closed the connection)
[11:58:07] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[12:06:45] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:08:56] *** Joins: vysn (~vysn@user/vysn)
[12:09:01] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[12:14:45] *** Joins: DevAntoi_ (~DevAntoin@pop.92-184-100-12.mobile.abo.orange.fr)
[12:16:27] *** Quits: DevAntoine (~DevAntoin@pop.92-184-100-12.mobile.abo.orange.fr) (Ping timeout: 256 seconds)
[12:21:34] *** Joins: Haxxa (~Haxxa@202-130-210-132.ip4.superloop.com)
[12:23:50] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[12:24:43] *** Joins: kdbxw (~kdbxw@94.180.162.218)
[12:26:28] <kdbxw> Hi! Can anyone suggest a job queue software witch can actually _execute_ tasks (start a child process and wait for exit code, call http)? People talking about Rabbit, but it seems to be just a message store. I don't need Rabbit for that, I can use RDBMS for that if I need.
[12:26:48] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:28:03] <d3x0r> bash?
[12:29:02] <ent58> job queue software witch sounds like a wonderful title ^_^
[12:31:19] *** Quits: dld (~dld@2601:197:600:1210:4c8f:59ca:20e7:8c51) (Ping timeout: 268 seconds)
[12:31:57] <kdbxw> ent58, Currently I have DIY job queue written in python around postgres. It starts multiple subprocesses for jobs execution, handles row locking correctly, uses notify/listen instead of polling. It's 500 lines multithreaded thing daemonized by systemd/supervisord. Web app inserts a row into postgres, describes details of execution and that's it. It works well, but I am thinking of replacing it with something ready-made.
[12:33:05] <ent58> My first thought would not have been to use a database....not sure if that's a good or bad thing, but that sounds like it's pretty slick
[12:33:24] *** Joins: dld (~dld@2601:197:600:1210:3148:3480:a32a:c902)
[12:34:58] <ent58> web-app-to-system-process sounds scary, it might be better to roll your own very bullheaded simple solution just to make sure that doesn't have exploitable gotchas
[12:35:46] <ent58> yours sounds pretty effective
[12:46:55] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:49:06] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 245 seconds)
[12:50:34] *** Joins: jazzy2 (~jaziz@user/jaziz)
[12:51:08] <kdbxw> ent58, It calls our partner slow api, sends emails, makes video-preview files. Supports auto-retry, "asap" and "after timestamptz" scheduling, "prioritized" execution (for "lost password" emails). And my boss asks to add even more features. But I would like to replace my NIH code with off the shelf solution.
[12:53:39] <ent58> hmm
[12:53:51] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[12:53:55] *** Joins: mrig (~AdiIRC@user/mrig)
[12:53:56] *** jazzy2 is now known as jazzy
[12:57:27] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[12:57:46] <CoJaBo> kdbxw: Ha, if you ever find one, let me know; I maintain one of those projects, and it's way more featuritised lol
[12:58:45] *** Joins: caramel (~caramel@user/caramel)
[12:59:01] *** Joins: DevAntoine (~DevAntoin@pop.92-184-112-247.mobile.abo.orange.fr)
[12:59:06] <lockywolf> Using git, how do I pull from a push-url?
[12:59:12] *** Joins: operateur (~operateur@91.143.220.230)
[12:59:41] <d3x0r> pull and push urlsare usually the same
[13:00:01] *** Joins: alguien (~alguien@user/alguien)
[13:00:11] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[13:01:11] *** Quits: DevAntoi_ (~DevAntoin@pop.92-184-100-12.mobile.abo.orange.fr) (Ping timeout: 252 seconds)
[13:01:59] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:07:46] <deniska> ent58: a popular job queue people use with python is celery, but it executes python functions, it's up to you to make http calls and start subprocesses
[13:07:55] <deniska> oops, kdbxw ^
[13:11:37] *** Joins: kiryin (~kiryin@nh2zmlaepkj8hom7z-3.v6.elisa-mobile.fi)
[13:12:30] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:13:05] <kdbxw> deniska, thank you for suggestion
[13:13:33] *** Joins: plastico (~plastico@neomutt/plastico)
[13:14:08] <ent58> neat
[13:15:37] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[13:16:15] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Remote host closed the connection)
[13:17:25] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[13:17:51] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[13:17:51] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[13:18:00] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[13:22:15] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[13:22:53] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[13:23:06] *** Joins: mrig (~AdiIRC@user/mrig)
[13:25:52] <mrig> Good day, coding companions :)
[13:26:06] <ent58> I've seen you before mrig, hello :)
[13:26:55] <arahael> mrig: Just realised that if I swap your first and last letters, you become grim!
[13:27:12] *** Quits: jaskal (jaskal@user/jaskal) (Quit: Lost terminal)
[13:27:18] <mrig> hello :)
[13:28:13] <mrig> arahael are you playing scrabble this evening? :)
[13:28:23] <arahael> mrig: No. I'm drinking port. :)
[13:28:36] *** Joins: x_kuru (~xkuru@user/xkuru)
[13:28:52] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[13:28:58] <mrig> the r really should be an R or an r with a dot underneath, but I'm not sure that this would work on many servers. 
[13:29:34] <mrig> and the a is lacking to, the consonant without a vowel is not really logical at all, in the context :)
[13:29:57] <mrig> arahael Any cheese with that?
[13:30:14] <arahael> mrig: For some reason I never have cheese with port.
[13:30:22] <mrig> I always remember that being quite a good melange.
[13:30:59] <arahael> mrig: Specifically, I'm drinking Tawny port, which is quite sweet.
[13:31:15] <mrig> oh that is less of a match perhaps.
[13:31:15] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 252 seconds)
[13:31:20] *** Joins: jaskal (jaskal@user/jaskal)
[13:31:34] <mrig> There are both red and white variants too, if memory serves.
[13:32:02] <mrig> Well of fortified wine, not sure if the same classifications still hold.
[13:32:09] *** Quits: operateur (~operateur@91.143.220.230) (Quit: WeeChat 3.3)
[13:32:33] *** Joins: operateur (~operateur@91.143.220.230)
[13:33:21] <arahael> Cheese with wine is a popular, and good, pairing.
[13:33:45] <arahael> But I don't think it's the same with the fortified wines. I haven't actually tried it though - however, I'm allergic to cows milk products, so I don't tend to go for them.
[13:34:15] <mrig> I just read that the gemini protocol closes the connection between each request, and uses a new handshake and connection on each use, is gopher the same?
[13:34:22] <deniska> after consuming some amount of fortified wine, everything goes well with it
[13:34:52] <deniska> cheese, meat, youtube videos you delete from your watch history afterwards etc
[13:35:00] <mrig> I suppose that is really martini and chinzarno, that sort of thing.
[13:35:13] <mrig> all fortified wines of a sort I suppose.
[13:35:15] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[13:35:18] *** jazzy is now known as jazzy2
[13:35:59] <amigojapan> arahael: the only wine I like is manishewitz. But I don't think it goes well with cheese
[13:36:00] <dan01[m]> History question
[13:36:04] <mrig> deniska the time compression is incredible, and what did I buy last night, I don't remember?
[13:36:04] <deniska> "wine but much stronger" seems to be a common theme among various cultures
[13:36:22] <dan01[m]> How come GNU merged with Linux and not some BSD that like OpenBSD?
[13:36:23] <mrig> shopping whilst having a tipple, what could possibly go wrong?
[13:36:38] <deniska> dan01[m]: depends on your definition of "merged"
[13:36:45] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[13:36:50] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:36:59] <ent58> heh, merged
[13:37:07] <deniska> dan01[m]: but I guess because *bsd already have userspace utilities, they don't need replacement
[13:37:11] <amigojapan> dan01[m]: my guess it they could not agree to the bsd licence
[13:37:30] <mrig> dan01[m] GNU did not have a working kernel, and the interface fitted with Linux.
[13:37:33] <deniska> dan01[m]: *bsd systems used gnu gcc until clang became viable
[13:38:03] <arahael> amigojapan: I've actually only had australian wines.
[13:38:29] <amigojapan> I see arahael . Manishewitz tastes like pure sugar
[13:39:40] *** Lord_of_Life_ is now known as Lord_of_Life
[13:39:56] <arahael> amigojapan: The images I see online seem to say "Specially sweetened".
[13:41:43] <amigojapan> Ah ok arahael . Yeah. I have treated other "dessert wines" but none of them come close to being as sweet
[13:42:28] <arahael> amigojapan: That's strangely sweet, then. Why do they make it so sweet, and why do you prefer it?
[13:42:46] <arahael> amigojapan: The port I'm having is probably a desert wine.
[13:43:12] *** Quits: jdmark (~jdmark@097-102-095-007.res.spectrum.com) (Read error: Connection reset by peer)
[13:44:13] <ent58> What type of wine do I need to select to get what amounts to basically grape juice with a kick
[13:44:42] <arahael> ent58: I'm very tempted to say: "That would be wine". :)
[13:44:50] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[13:44:50] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:45:13] <amigojapan> arahael: I read on Wikipedia that they use a bad kind of grape, which only becomes palatable by adding tonnes of sweeteness. I think I only like it cause I drank lost of it when I grew up in many Jewish ceremonies
[13:45:55] *** Joins: Twipply (~Twipply@user/twipply)
[13:46:41] <arahael> amigojapan: Interesting - Labrusca grapes.
[13:46:56] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[13:47:17] <mrig> Personally I'd consume mushrooms or some other hallucinogen before alcohol, for any kind of rite or celebration.
[13:47:36] <ent58> lol!
[13:47:54] <mrig> Not that I have any need for that either, singing is my mind alternating activity of choice.
[13:48:06] <mrig> It works amazingly well.
[13:48:12] * arahael never sings.
[13:48:15] <ent58> I mean that's not a bad choice at all
[13:48:44] <amigojapan> arahael: apparently Concorde grapes
[13:48:51] <mrig> arahael yes sorry, this is one of life's more simple pleasures that you have been denied. :(
[13:48:54] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[13:49:00] <arahael> amigojapan: A type of Labrusca grape.
[13:49:18] <arahael> mrig: I substitute with port. ;)
[13:49:29] <mrig> Greatly underestimated in this modern age of technical devices.
[13:49:35] <mrig> arahael right on!
[13:49:37] <mrig> :)
[13:50:11] <amigojapan> mrig: karaoke is big in Japan
[13:50:46] <mrig> amigojapan I've never really tried karaoke, does seem like fun-
[13:51:30] <mrig> I really like the folk traditions with acoustic music though, they are really cool.
[13:51:48] *** Parts: zz (~filler@a4.inai.de) ()
[13:51:55] <mrig> when playing with others like that they can be such an amazing vibe.
[13:52:00] *** Joins: pulse (~pulse@user/pulse)
[13:52:04] <mrig> there rather.
[13:52:15] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[13:52:32] <amigojapan> mrig: recently I have gotten into singing enka, more traditional Japanese songs. Not jpop
[13:52:46] <DPA> I've a helm / go templat problem. I've an array .x containing strings, and an object .y, I would like an array containing .y[$k] for every $k in .x
[13:52:53] <mrig> oh nice, i'm not fond of pop either.
[13:53:05] <mrig> it kills the soul somehow
[13:53:56] <amigojapan> mrig: should I link you an example enka song?
[13:54:21] *** Quits: inky_ (~inky@188.115.224.238) (Ping timeout: 252 seconds)
[13:54:36] <mrig> I am just having a listen, was going to say [scurries off to look up enka]
[13:54:38] <mrig> :)
[13:54:45] *** Joins: zaher (~zaher@37.48.177.56)
[13:54:57] <mrig> Please do link one if you have a recommendation.
[13:55:15] <arahael> Two channels I'm in are now talking abaut karaoke.
[13:55:48] <mrig> oh it is very rhythmic :)
[13:56:21] <amigojapan> mrig: https://youtu.be/yvc0LadtZUk
[13:56:24] <ent58> How do you sing without wanting to hide in a box, in a box, in a box
[13:56:24] <bayaz> Title: 天城越え 石川さゆり 昭和歌謡 
[13:58:59] <mrig> oh nice, it is pretty sung
[13:59:23] <amigojapan> mrig: thanks
[13:59:59] <zaher> hi, wha hexchat is using as control to show formatted messages?
[14:00:03] <zaher> what*
[14:04:03] <mrig> amigojapan this has a nice rundown on the origins : https://www.youtube.com/watch?v=pRcwYPzFQHc
[14:04:04] <bayaz> Title: What is Enka (演歌)? | Japanese Music 
[14:04:36] <amigojapan> Let me see mrig 
[14:06:02] <mrig> amigojapan This is one of my favourite French songs : https://www.youtube.com/watch?v=xuLtm9fWATA
[14:06:03] <bayaz> Title: Emmenez-moi - Charles Aznavour (Paroles/Karaoké) 
[14:06:50] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[14:08:24] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[14:08:27] *** Joins: Syzygy (~Syzygy@178-190-83-165.adsl.highway.telekom.at)
[14:09:58] *** Joins: premultiplied (~premultip@69.84.6.130)
[14:12:17] <mawk> emmenez-moi au bout de la terreeeeeeeeee
[14:12:25] <mawk> emmenez-moi au pays des merveilleeeeeeeeeeeees
[14:12:31] *** Joins: inky_ (~inky@188.115.224.238)
[14:12:45] <mawk> il me semble que la miseeeeeeeeeeereeeeeuh serait moins penible au soleiiil
[14:12:47] *** Joins: wei2912 (~wei2912@116.88.103.128)
[14:13:57] *** Joins: ixil (~ixil@mpp-cp1-natpool-2-004.ethz.ch)
[14:14:53] *** Quits: premultiplied (~premultip@69.84.6.130) (Ping timeout: 252 seconds)
[14:14:53] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 252 seconds)
[14:15:01] <amigojapan> mrig: of sorry. I was watching your previous link. It's long. Let me take a look
[14:16:32] *** Parts: tercaL (~tercaL@user/tercal) (Closing Window)
[14:19:06] <pulse> zaher, The source is open, you could just check :P
[14:19:49] <amigojapan> mrig: my wife says I should have shown you this song instead https://youtu.be/yWpZh6s-L14
[14:19:51] <bayaz> Title: 【望郷じょんから】 島津亜矢 
[14:20:13] <pyzozord> ugh advent of code day 3 part 2 is actually putting up some resistance
[14:20:25] * mrig sways to mawk's dulcite tones sung along with the masterful music of Aznavour ...
[14:20:41] <zaher> i am lazy :P, the idea i need a control that show simple html, and i can use it by API
[14:21:00] <ent58> oh hey pyzo
[14:21:02] *** Quits: death916 (~death916@user/death916) (Ping timeout: 240 seconds)
[14:21:56] <mrig> amigojapan oh wow, thank her for me, this girls voice is amazing.
[14:22:34] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[14:24:40] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[14:24:59] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[14:25:20] <arahael> pyzozord: I found it pretty easy, though I had to read the details quite a few times.  I also suspect I got lucky as I didn't handle one of the edge cases.
[14:26:12] <amigojapan> mrig: no problem :)
[14:26:40] *** Joins: Gentpup (~Gentpup@217.75.212.43)
[14:26:51] <arahael> pyzozord: What are you finding challenging about it?
[14:27:30] <amigojapan> mrig: and I find enka especially dun to sing in karaoke
[14:27:39] <amigojapan> Fun*
[14:30:06] <pyzozord> arahael: right now it's just python putting up resistance
[14:30:39] <merijn> the biggest challenge for me was misreading the objective and wasting time that way :p
[14:31:07] <arahael> pyzozord: Python tends to do that. ;)
[14:32:42] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[14:34:09] *** Quits: jtgd (~jtgd@user/jtgd) (Quit: WeeChat 3.3)
[14:34:29] *** Joins: jtgd (~jtgd@user/jtgd)
[14:34:57] * mrig imagines pyzozord grappling with a large constricter.
[14:36:00] <arahael> mrig: It's named after *monty* python.
[14:36:10] <pulse> Not to be confused with monthly python
[14:36:29] <amigojapan> arahael: but what is Monty python named after?
[14:36:34] *** Joins: Klinda (~superleag@user/klinda)
[14:37:11] <arahael> amigojapan: Probably the pythons.
[14:37:31] *** Joins: mattil (~mattil@helsinki.portalify.com)
[14:38:54] <mrig> arahael arguably the coolest thing that python has going :)
[14:39:01] <pyzozord> ooh I think I know
[14:39:13] <pyzozord> i loop over a list and delete elements from it
[14:39:17] <arahael> mrig: It's a bit of a flying circus.
[14:39:23] <mrig> :D
[14:39:32] <pyzozord> but every time I delete an element the list is reindex, so next delete is not deleting the right thing anymore
[14:39:36] <arahael> pyzozord: Even if the language allows it, it's generally a bad idea to modify the structures you're iterating over.
[14:39:54] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[14:39:54] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[14:39:54] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[14:40:10] <arahael> pyzozord: The only reason it might make sense is for efficiency reasons, but Day3 doesn't need it.
[14:42:49] <amigojapan> mrig: can I show you just one more? This enka singer should surprise you https://youtu.be/KFdUGs6qIuw
[14:42:52] <bayaz> Title: ジェロ Jero - 海雪（MUSIC VIDEO） 
[14:44:01] *** Joins: alguien_ (~alguien@user/alguien)
[14:45:17] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[14:46:24] <mrig> amigojapan It certainly did! I thought the sound was synced to a different video for a moment.
[14:46:25] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 252 seconds)
[14:46:37] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[14:46:52] <amigojapan> Hahaha mrig :)
[14:48:18] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[14:48:36] <mrig> amigojapan curiously I'm realising that Japanese when sung, really reminds me of Turkish sung.
[14:48:51] *** Joins: namkeleser (~namkelese@101.175.102.188)
[14:49:36] <pyzozord> arahael: right, maybe I am putting too much extra challange for myself
[14:49:45] <pyzozord> arahael: on the other hand I just realized that I could use a trie for this
[14:50:05] *** Quits: VincentValentine (~VincentVa@95.84.48.87) (Ping timeout: 252 seconds)
[14:50:16] <amigojapan> mrig: I have heard people claim that Japanese and Turkish are related languages. Tho linguists disagree, but they also disagree that Korean is related and that seems to be mistaken to me
[14:52:12] <arahael> pyzozord: A trie?
[14:52:44] <arahael> amigojapan: Did you compare _reasons_ why you agree/disagree?
[14:53:15] <Gentpup> in bash:  why would sudo echo file names instead of the file text ?  works : cat /tmp/grub.cfg    does not work : echo $(cat /tmp/grub.cfg)
[14:53:32] <amigojapan> arahael: I know nothing about Turkish, but Japanese and Korean share an identical grammar
[14:53:44] <pyzozord> arahael: yeah, for the part 2, that way I can delete in log time
[14:53:54] <arahael> pyzozord: There's only a thousand words.
[14:54:09] <mrig> I'm not sure that I would trust an academic when it comes to phonetics, there is little that suggests to me that the aptitude of ears are ever brought into question.
[14:54:12] <arahael> A thousand numbers, even.
[14:54:43] <arahael> mrig: The detail is always in the elaboration. They should have an academic reason backing up their stance.
[14:54:49] <arahael> mrig: It might be insightful.
[14:55:11] <mrig> amigojapan this is quite nice : https://www.youtube.com/watch?v=r-G7GpKPZyw&list=PLvfmfWKTh35Vv1UitrqL9xYbpPramUyM8
[14:55:12] <bayaz> Title: Nesrin Sipahi - Gözleri Aşka Gülen (Official Video) 
[14:55:15] <pyzozord> arahael: I know, I have it working now but it's O(n²) now because i need to go over the list each time to count the occurances.
[14:55:36] <arahael> pyzozord: Fortunately, n is small.
[14:55:39] <pyzozord> arahael: oh wait! It's not n², it is n log n, because each time the list is smaller?
[14:55:41] <amigojapan> Let me see mrig 
[14:55:44] <mrig> But Dalida is well worth a listen, I was looking for something by her which is in a more similar style.
[14:56:14] <mrig> Both having 50 western influence, like some of those Japanese examples.
[14:56:15] <arahael> pyzozord: Did you consider using a list comprehension?
[14:56:42] <pyzozord> arahael: let me finish what I have and I can show you, it's pretty ugly
[14:56:53] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:57:36] <Raziel> if it isn't our favorite [itchyjunk] 
[14:57:55] <arahael> pyzozord: Be warned I'm falling asleep and half way through my third port. :D
[14:58:06] <[itchyjunk]> you have more than one [itchyjunk] ?
[14:58:15] <GeDaMo> Gentpup: what does the echo version output?
[14:58:19] <arahael> [itchyjunk]: I'm also intrigued by Raziel's claim. :)
[14:58:32] <Raziel> lol
[14:58:36] <[itchyjunk]> There is so much programming shit to do for me :(
[14:58:54] <[itchyjunk]> quiz, fix assignments because of typo, finish the td game ..
[14:59:00] <Gentpup> GeDaMo, very big string, filenames and mishmashed content of textfile / s
[14:59:02] <[itchyjunk]> its a coffee day
[14:59:10] <arahael> [itchyjunk]: Refresh my memory - was it you who needed a pencil for an exam? If so, how did you go?
[14:59:31] <[itchyjunk]> i "borrowed" two led pencils.
[14:59:39] <arahael> Perfect!
[14:59:48] <Raziel> led pencils?
[14:59:51] <[itchyjunk]> the final is the next monday, the quiz got turned into "take home" whichh i am working on now
[14:59:55] <[itchyjunk]> mechanical pencils?
[15:00:02] <[itchyjunk]> w/e they are called
[15:00:15] <Raziel> they make them with leds now? shieeet
[15:00:26] <[itchyjunk]> its graphite + clay
[15:00:38] <amigojapan> mrig: heh, now I want to eat a kebab
[15:00:40] <arahael> In any case, assuming they're mechanical, "mechanical pencils" are right. :)
[15:00:52] <arahael> [itchyjunk]: Good luck with it!
[15:01:22] <[itchyjunk]> thanks. the quiz requires me to make classes such that each can hold an item and link to the next one and such
[15:01:23] <Raziel> yeah in that case I think the right term is lead not led :p
[15:01:31] <[itchyjunk]> i think this is "linked list" personally
[15:01:36] <GeDaMo> Gentpup: that's what cat outputs, how is that different from what you want?
[15:01:39] <[itchyjunk]> oh led
[15:01:40] <[itchyjunk]> i see
[15:01:50] <[itchyjunk]> didn't know there was another word hiding in there
[15:02:18] <Gentpup> it is suppose to cat only the text of grub.cfg
[15:02:34] <arahael> [itchyjunk]: Yeah, the correct spelling of a lead pencil is with an 'a' in it. :) Even though they don't actually contain lead.
[15:02:38] <Raziel> that does sound like linked list, although depending on the details it might be something else
[15:03:24] <[itchyjunk]> in my case, its "quiz04" :D
[15:03:32] <GeDaMo> Gentpup: possibly echo is interpreting some of the text from the file as commands
[15:03:48] <Raziel> [itchyjunk], ah yes, quiz04, I remember it well.
[15:03:51] <Raziel> disclaimer: that's a lie
[15:04:44] *** Joins: premultiplied (~premultip@69.84.6.130)
[15:05:20] <mrig> amigojapan oh this is lovely https://www.youtube.com/watch?v=_zl0WvHEGXY
[15:05:21] <bayaz> Title: Original Turkish Folk Songs - Traditional Music - Türküler 
[15:06:32] <mrig> amigojapan it is the intonation and cadence that I find similar.
[15:06:40] <amigojapan> Let me give it a listen mrig 
[15:06:59] <mrig> the rhythms of the speech or singing patterns
[15:07:47] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[15:08:45] <pyzozord> arahael: here is my full day 3 in python, I'm really not proud of it https://ideone.com/8ShMkT
[15:09:09] <pyzozord> after about 1.5h I gave up and just did it any way I could instead of trying to optimize and make it beautiful
[15:09:17] <arahael> pyzozord: And here's mine: https://github.com/arafangion/super-eureka/blob/main/app/Day3.md
[15:09:18] <bayaz> Title: super-eureka/Day3.md at main · arafangion/super-eureka 
[15:09:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:09:30] <arahael> OOh. Fancy. Requests.
[15:10:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:12:04] <pyzozord> your's looks like haskell, unfortunatelly I can't follow haskell (yet)
[15:12:37] *** Joins: Trieste_ (T@user/pilgrim)
[15:13:11] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 252 seconds)
[15:13:23] <arahael> pyzozord: It is indeed haskell.  Want some help understanding it?
[15:13:27] *** Joins: ELCYC (~ELCYC@user/elcyc)
[15:14:35] <pyzozord> arahael: not for the haskell, but for the conceptual solution you chose
[15:15:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:15:54] <arahael> Ok, give me a moment.
[15:16:00] *** Trieste_ is now known as Trieste
[15:16:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:16:22] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:19:34] *** Joins: sjmulder (~sjmulder@2a02-a443-33e5-1-d382-e0bc-4d31-d1c5.fixed6.kpn.net)
[15:20:03] *** Quits: _inky (~inky_@188.115.224.238) (Ping timeout: 256 seconds)
[15:20:35] *** Quits: raj (uid72176@user/raj) ()
[15:22:26] *** Joins: zaher_ (~zaher@130.180.176.3)
[15:23:41] <arahael> pyzozord: Take another look, I've just elaborated it.
[15:24:29] <arahael> pyzozord: Let me know if a particular section is still difficult to understand, or if I should further elaborate a particular section. :)  I'm playing with "Literate Haskell", which lends itself to exactly this sort of documentation.
[15:24:51] <mrig> arahael yes you are quite right, just pondering what it is exactly that I find similar, I think its the balance of consonants to vowels and use of pitch; I've no idea if there is any technical term for that.
[15:25:39] *** Quits: zaher (~zaher@37.48.177.56) (Ping timeout: 252 seconds)
[15:25:49] <arahael> mrig: The phonology, perhaps?  You should probably be asking vdamewood :)
[15:26:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:26:21] <mrig> I was thinking along those lines, he would likely know.
[15:26:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:27:16] *** zaher_ is now known as zaher
[15:27:19] *** Joins: Fauto_ (~dante@gateway/tor-sasl/filohuhum)
[15:27:20] <[itchyjunk]> awe man, wish i was coding haskell
[15:27:39] <pyzozord> arahael: will have a longer train trip in 1h, I'll ready it carefully then
[15:29:13] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[15:29:34] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[15:30:02] <mrig> Right back to my lessons, after that wonderful musical tour of the world :)
[15:30:11] <arahael> pyzozord: No worries!  One thing I've realised is that part 2 specifies what to do when 0's and 1's are equally common.  I don't think either of us bothered with that bit.
[15:30:47] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 252 seconds)
[15:31:43] *** Joins: TCZ (~tcz@91.150.178.124)
[15:32:03] <TCZ> ppp
[15:32:58] <pulse> Comfy train coding
[15:34:50] *** Joins: _inky (~inky_@31.7.162.99)
[15:35:53] <[itchyjunk]> oh, last part of the quiz is recursion.
[15:36:07] <[itchyjunk]> It's funny that recursion is showing up in so many different places for me.
[15:36:54] <arahael> [itchyjunk]: I just chose to do it using recursion.
[15:37:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:37:16] <[itchyjunk]> well id use recursion for everything haskell too
[15:37:25] <deniska> [itchyjunk]: any recursion can be written out as a loop and vice versa
[15:37:27] <arahael> Heh, well, that too. :)
[15:37:31] <[itchyjunk]> but i mean it showing up in my quiz, in my history of math class, in the book i am reading
[15:37:45] <[itchyjunk]> deniska, is that true for any recrusion?
[15:38:05] <[itchyjunk]> or in general it can but not always?
[15:38:10] <arahael> It is true.  Not neccessarily as "elegantly", but you can definitely do it - in general, and always.
[15:38:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:38:16] <deniska> [itchyjunk]: it's true for any recursion
[15:38:22] <[itchyjunk]> hmmmm
[15:38:28] * [itchyjunk] is not convienced.
[15:38:33] <[itchyjunk]> will have to read up on that
[15:38:36] * mrig likes a stack :)
[15:39:01] *** Joins: acaciause (~acaciause@cpc140764-burn9-2-0-cust788.10-1.cable.virginm.net)
[15:39:03] <deniska> [itchyjunk]: that's basically how computers work, they know how to loop, but they don't really know how to recurse :)
[15:39:28] <deniska> (although at this level both concepts mostly break down to the same primitives anyway)
[15:39:41] <pyzozord> [itchyjunk]: also that's because how your mind works, you think about it, so your mind is now hyperaware of it everywhere
[15:40:03] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:40:08] <pyzozord> [itchyjunk]: start thinking of color red, and it will start showing up everywhere
[15:40:10] <deniska> (and some CPUs do have instructions specific to calling subroutines etc)
[15:40:30] <GeDaMo> https://en.wikipedia.org/wiki/Frequency_illusion
[15:40:31] <bayaz> Title: Frequency illusion - Wikipedia 
[15:40:38] <mrig> I think my mind does bubble sort quite often to sort its heap.
[15:40:42] <mrig> :)
[15:40:45] <deniska> mrig: bogobogosort
[15:40:49] <mrig> lol
[15:40:59] <mrig> that has got to be it!
[15:41:29] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c7-233.dhcp.inet.fi)
[15:41:45] <[itchyjunk]> I don't think it's hyperawareness in this case.
[15:42:04] <[itchyjunk]> I would have noticed studying about fractals, but this is the first time it's howing up this way.
[15:42:26] <[itchyjunk]> I also don't remember reading about recursion explicitly this way, but the book is now doing so
[15:42:40] <[itchyjunk]> i think it's just a very odd coincidence
[15:43:21] <GeDaMo> Recursion has repetition and an exit condition, just like a loop
[15:43:31] <[itchyjunk]> apparently you get the recursion -> iteration correspondence from church turing theorem
[15:43:32] <[itchyjunk]> https://stackoverflow.com/questions/931762/can-every-recursion-be-converted-into-iteration
[15:43:32] <bayaz> Title: Can every recursion be converted into iteration? 
[15:43:53] <[itchyjunk]> I can't handle learning CS theorems i think :/
[15:44:02] <[itchyjunk]> i'll take peoples word for it!
[15:44:09] <arahael> [itchyjunk]: You should probably focus on your current quizes :)
[15:44:56] *** Joins: jamea (~jamea@177.239.80.39)
[15:46:33] <GeDaMo> You can also have recursive data structures like lists and trees
[15:46:48] *** Quits: dld (~dld@2601:197:600:1210:3148:3480:a32a:c902) (Ping timeout: 268 seconds)
[15:48:11] <[itchyjunk]> yeah i should work on this quiz :<
[15:48:26] *** Quits: jazzy2 (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[15:48:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:49:02] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c7-233.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:49:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:49:50] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[15:52:21] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[15:52:32] <amigojapan> [itchyjunk]: but it's there an algorithm to convert iterative things to recursive form?
[15:52:46] <amigojapan> Is there*
[15:53:29] <amigojapan> I am too used to iterative form
[15:54:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:54:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:55:09] <Raziel> iterative things, in general? not really. a simple loop? that should be easy to convert.
[15:55:11] <[itchyjunk]> There is no algorithm to do either
[15:55:12] <Raziel> but also, why?
[15:55:19] <Raziel> generally speaking iterative is preferred
[15:55:25] <[itchyjunk]> but the theorem says it can be done
[15:55:28] <[itchyjunk]> not how to do it
[15:55:33] <[itchyjunk]> i am in a pickle
[15:55:43] <[itchyjunk]> i need to accumulate stuff in my recursive function
[15:55:53] <[itchyjunk]> but i can't declare thing in it cause that messes up things.
[15:56:10] <[itchyjunk]> but i can't declare things outside it because instruction says no adding of fields
[15:56:11] <[itchyjunk]> hmmm
[15:56:18] <Raziel> ...how does it mess things up if you declare things in it?
[15:56:33] <GeDaMo> You can pass an accumulator as a parameter
[15:56:37] <amigojapan> Raziel: for the same reason that the article that [itchyjunk] linked said you may want to covert recursive code to C
[15:57:17] <Raziel> amigojapan, well, right, but I mean, I assume [itchyjunk] is trying to do something quite specific, not actually convert shit automatically in the general case
[15:57:19] <GeDaMo> sum [] s = s
[15:57:19] <GeDaMo> sum x:xs s = sum xs (s+x)
[15:57:21] <[itchyjunk]> Raziel, `total = 0;` next recursion in it sets it to 0
[15:57:32] <[itchyjunk]> (java)
[15:57:43] <Raziel> [itchyjunk], normally you'd be sending that total in to the function...
[15:57:44] *** Joins: cykid128 (~cykid128@36-227-66-114.dynamic-ip.hinet.net)
[15:57:47] <[itchyjunk]> but if i don't `int total = 0;` i don't get to use it
[15:57:56] <[itchyjunk]> oh good idea
[15:58:00] <GeDaMo> What does your function return?
[15:58:09] <[itchyjunk]> counts and returns total
[15:58:13] <amigojapan> Raziel: no I am just talking about the article here linked https://stackoverflow.com/questions/931762/can-every-recursion-be-converted-into-iteration
[15:58:14] <bayaz> Title: Can every recursion be converted into iteration? 
[15:58:24] <acaciause> yes
[15:58:27] <[itchyjunk]> public int getHeight() {}
[15:58:30] <cykid128> Absolutely, Yes
[15:58:35] <acaciause> not the other way around though
[15:58:37] <[itchyjunk]> idk if i want to pass it a total variable unless i have to
[15:58:47] <GeDaMo> [itchyjunk]: return thisOne + recurse()
[15:58:49] <amigojapan> Ah ok acaciause 
[15:59:04] <nomagno> The main reason for conversion from recursive to iterative (in C) is that the compiler doesn't actually optimize away recursion, so you can exhaust the call stack easily. In other compilers/interpreters more geared towards recursion, they'll just be converted to the most efficient structure in the machine code
[15:59:17] <[itchyjunk]> how do i initialize the thisOne ?
[15:59:24] <nomagno> Some problems definitely perform better in one way or the other
[15:59:32] <nomagno> But it isn't always a significant difference
[15:59:52] <GeDaMo> sum(list) = if list is empty return 0 else return first(list) + rest(list)
[15:59:53] <Raziel> the second reason would be to actually be able to figure out if you can parallelize the thing. :p
[16:00:07] <acaciause> nomango: also an iterative version of an algorithm is easier to paralellize later.  
[16:00:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[16:00:10] <GeDaMo> Er, sum(list) = if list is empty return 0 else return first(list) + sum(rest(list))
[16:00:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:00:46] <[itchyjunk]> this is java
[16:00:53] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[16:00:55] <Raziel> no this is patrick
[16:00:55] <GeDaMo> This is pseudocode :P
[16:01:11] <[itchyjunk]> and this is weird box stacking thats kinda like linked list but there is no lists involved
[16:01:27] <GeDaMo> You have an exit condition when you reach the end of the data
[16:01:32] <Raziel> box stacking? you playin tetris, you little shit?! :p
[16:01:42] <GeDaMo> When you hit that, you return 0 or whatever the intial value is
[16:01:50] <[itchyjunk]> if next == null, height = 1
[16:02:03] <GeDaMo> Right, so return 1
[16:02:04] <[itchyjunk]> total ++
[16:02:07] <Raziel> you usually must have an exit condition for recursion, yes. just like you usually must have an exit condition for a loop
[16:02:11] <[itchyjunk]> hmm
[16:02:17] *** Joins: aliosablack (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[16:02:33] <[itchyjunk]> okay, return 1
[16:02:34] <GeDaMo> If you pass your function a null value, it returns 1
[16:02:38] <[itchyjunk]> i was doing something weirf there
[16:02:42] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[16:02:42] <[itchyjunk]> right
[16:02:48] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[16:03:33] <GeDaMo> If it's not null it's 1 + the recursive call
[16:04:44] <GeDaMo> Is this the height of a tree?
[16:04:46] <CalimeroTeknik> [itchyjunk], you're probably doing mindless "habitual coding" stuff, but I contend that "getFoo" constructors are best named "foo"
[16:04:50] <[itchyjunk]> Exception in thread "main" java.lang.StackOverflowError
[16:04:51] <[itchyjunk]> lol
[16:04:57] <acaciause> haha
[16:05:06] <Raziel> and this is why recursion sucks
[16:05:07] <[itchyjunk]> CalimeroTeknik, i can't call it "foo"
[16:05:12] <Raziel> well, part of why, anyway
[16:05:15] <[itchyjunk]> i lose points because its not "self documenting"
[16:05:30] <CalimeroTeknik> yeah, mindless habits
[16:05:30] <[itchyjunk]> i lost points on (xCord, yCord) because variable names are not "self documenting"
[16:05:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[16:05:37] <CalimeroTeknik> example of what I do: TimePoint.year() instead of TImePoint.getYear()
[16:05:57] <CalimeroTeknik> because this is a pure function, it can bear the name of the value that it evaluates to
[16:05:58] <[itchyjunk]> yeah i would have done that in the past
[16:06:04] <[itchyjunk]> but now i am a reformed man
[16:06:04] <deniska> [itchyjunk]: I'd name them CoordinateOnTheVerticalAxis and CoordinateOnTheHorizontalAxis, out of spite
[16:06:07] <Raziel> imagine actually using getters and setters for simple data that needs to special operations done on it when getting or setting
[16:06:12] <Raziel> this message brought to you by the C++ gang
[16:06:20] <Raziel> no special*
[16:06:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:06:54] <CalimeroTeknik> you are being brainwashed to conform to the nOrmAl WaY oF doINg tHinGs, right, [itchyjunk]
[16:07:01] <mrig> dang, is it really humanly possible to listen to and watch the same section of video 5 times over and to float off into thought each and every time?
[16:07:10] <[itchyjunk]> my base case is working
[16:07:22] <[itchyjunk]> if my box has nothing beneth it, it returns the height as 1 correctly
[16:07:31] <Raziel> mrig, it sure is
[16:07:38] <Raziel> this message brought to you by the ADHD gang
[16:07:47] <GeDaMo> [itchyjunk]: are you calculating the height of a tree?
[16:08:04] <mrig> Raziel I don't believe in that rubbish!
[16:08:10] <CalimeroTeknik> mrig, are you bored or is the section of video extremely insightful?
[16:08:13] *** Quits: inky_ (~inky@188.115.224.238) (Ping timeout: 256 seconds)
[16:08:17] <GeDaMo> At uni, i found myself falling asleep in psychology classes so I bought a tape recorder to record them
[16:08:19] <mrig> Something is telling me that I need to sing for a while I think.
[16:08:22] <mrig> need a break
[16:08:37] <GeDaMo> The problem was I kept falling asleep listening to the tapes too :P
[16:08:53] <Raziel> GeDaMo, sell them as sleeping aids
[16:08:54] <mrig> CalimeroTeknik it is really important, I'm not bored but am keen to be using the info rather than taking in more.
[16:08:55] <Raziel> profit!
[16:09:10] <mrig> GeDaMo heh
[16:09:11] <acaciause> itchyjunk: post your code somewhere so we can see it, your stack overflow is probably an error unless you have 1 billion boxes or something
[16:09:25] <Raziel> yeah you're probably not breaking out of it
[16:09:26] <mrig> GeDaMo you needed an adventure to learn the material on!
[16:09:33] <mrig> that is the way to do it.
[16:09:36] *** Joins: inky_ (~inky@31.7.162.99)
[16:09:44] <mrig> mystery and adventure!
[16:10:19] <mrig> I'm going to try playing a while and getting back to it.
[16:10:28] <pulse> To the mystery machine!
[16:10:30] <[itchyjunk]> GeDaMo, height of boxes
[16:10:41] <GeDaMo> "Adventure and excitement and really wild things" :P
[16:10:42] <[itchyjunk]> box class can hold and object and a refrence to box below it
[16:10:44] <mrig> Raziel thing is for me is that it is quite literally related to time too.
[16:10:52] <[itchyjunk]> and height is how many boxes are below it
[16:11:03] *** Quits: inky_ (~inky@31.7.162.99) (Remote host closed the connection)
[16:11:21] <GeDaMo> [itchyjunk]: the height of a binary tree is 1 + max(height(left), height(right))
[16:11:29] <[itchyjunk]> i think its just debugging though, i'll give it a few minutes and try again
[16:11:35] <Raziel> that sounds like it's a linked list, not a binary tree
[16:11:35] *** Joins: inky_ (~inky@31.7.162.99)
[16:11:38] <[itchyjunk]> oh interesting
[16:11:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[16:12:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:14:57] <[itchyjunk]> Once this semester is done, i wanna try a blockchain hello world :x
[16:15:03] <[itchyjunk]> how hard can it be?
[16:15:32] <deniska> blockchain is basically a linked list :)
[16:15:59] <merijn> "Merkle list" :p
[16:16:20] <[itchyjunk]> oh really?
[16:16:24] <[itchyjunk]> interesting!
[16:16:39] <GeDaMo> https://en.wikipedia.org/wiki/Merkle_tree
[16:16:39] <bayaz> Title: Merkle tree - Wikipedia 
[16:16:40] <[itchyjunk]> each block is a db + a refrence to next db ?
[16:16:48] <[itchyjunk]> i thought merkle was a fish
[16:16:50] <cykid128>  
[16:16:52] <[itchyjunk]> or german politician
[16:17:03] <DPA> In helm / go templates, is there some way to set a global from within a {{range}} scope? I need something like {{ range .x }}{{ if .y }}{{ $has_y := true }}{{ end }}{{ end }} ... {{ if $has_y }} but that didn't work.
[16:17:49] <[itchyjunk]> oh this is nice
[16:17:58] <[itchyjunk]> i wish i could have taken the next cs class :(
[16:18:06] <[itchyjunk]> "data structures and algorithm"
[16:18:12] <[itchyjunk]> bet this is the type of shit i would have learned
[16:20:20] <amigojapan> Hmm I assume it is possible after all to convert iterative to recursion since I found this program that claims to convert python to Haskell https://hackage.haskell.org/package/berp
[16:20:21] <bayaz> Title: berp 
[16:21:13] <[itchyjunk]> f, my code was working
[16:21:23] <[itchyjunk]> my test had junk code that was f'ing up
[16:21:32] <[itchyjunk]> amigojapan, that's what the theorem said
[16:21:48] <[itchyjunk]> you can go back and forth between them
[16:22:04] <[itchyjunk]> both are equally expressive on a turing machine
[16:22:30] <amigojapan> [itchyjunk]: someone in here said it was not possible to go from iterative to recursive using an algorithm
[16:23:15] <[itchyjunk]> https://stackoverflow.com/questions/63783069/does-church-turing-thesis-guarantee-that-recursive-code-can-be-implemented-into
[16:23:15] <bayaz> Title: Does Church Turing Thesis guarantee that recursive code can be implemented into as an iterative implementation? 
[16:23:22] <merijn> amigojapan: "iterative" and "recursive" are way to undefined to make such a statement
[16:23:25] <[itchyjunk]> need bigger guns to answer this question
[16:23:38] <[itchyjunk]> too bad int-e doesn't hang out in here
[16:23:53] <amigojapan> That's the opposite operation [itchyjunk] 
[16:24:14] <[itchyjunk]> "and vice versa"
[16:24:23] <[itchyjunk]> claim is always about "iff" if it's made
[16:24:45] <amigojapan> Ah ok
[16:25:02] <[itchyjunk]> my stupid recursion was always working
[16:25:08] <[itchyjunk]> it was my stupid test that was broken
[16:25:09] <[itchyjunk]> sigh
[16:27:50] <PlanckWalk> The answer is "no".
[16:27:54] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[16:28:12] <PlanckWalk> It is not true that "Church Turing Thesis guarantees that recursive code can be implemented into as an iterative implementation"
[16:28:20] <amigojapan> Using this I can get a Haskell coding job but just code in python and compile it into Haskell
[16:28:23] <CalimeroTeknik> but it's true regardless
[16:28:27] <PlanckWalk> That's guaranteed by a theorem, not just CTT
[16:28:30] <pyzozord> what does zip(*lst) do in python? what does * do in python?
[16:28:41] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:991a:b3a2:81ea:181a) (Read error: Connection reset by peer)
[16:28:43] <PlanckWalk> (CTT isn't a theorem)
[16:28:44] <acaciause> get used to it if your programming, i've spent weeks finding small mistakes before and i've been doing this years XD
[16:29:05] <CalimeroTeknik> pyzozord, expand the list as routine parameters
[16:29:14] <CalimeroTeknik> the sequence* actually
[16:29:30] <CalimeroTeknik> you shouldn't do it on anything but tuples if you want to remain sane
[16:29:54] *** Quits: dre (~dre@2001:8003:c932:c301:8916:3a5f:8275:217d) (Quit: Leaving)
[16:30:15] <CalimeroTeknik> and doesn't anyone dare say tuples are just const lists in Python, that's completely against any good notion of typing ^^
[16:30:17] <pyzozord> oh right vargs and related stuff
[16:30:30] <merijn> CalimeroTeknik: I mean, if you wanna stay sane you just wanna avoid python codebase over more than a thousand-ish LOC :p
[16:30:44] <[itchyjunk]> Which theorem garuntees it?
[16:30:48] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:30:57] <amigojapan> If Haskell code is better for parallel processing, I can just compile my python3 into Haskell and use that
[16:31:01] <[itchyjunk]> iteration recursion correspondence?
[16:31:22] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[16:31:26] <lf94> If assembly is better for speed, I can just compile my brainfuck into assembly and use that
[16:31:30] <[itchyjunk]> if you py code run on turing maching and is a computable function
[16:31:34] <[itchyjunk]> and haskell is the same
[16:31:46] <[itchyjunk]> there has to be a way to express one to another anyways
[16:32:11] <[itchyjunk]> So what theorem garunteed interation <=> recursion ?
[16:32:22] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[16:32:26] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:d5f2:596d:2133:4501) (Read error: Connection reset by peer)
[16:34:16] *** Joins: inky (~inky@188.115.224.238)
[16:34:18] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[16:34:21] *** Quits: inky_ (~inky@31.7.162.99) (Ping timeout: 256 seconds)
[16:34:28] <pyzozord> they aren't the same, but you can implement simulate each with the other
[16:35:08] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 252 seconds)
[16:35:16] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:35:28] <merijn> lf94: That's a great analogy :D
[16:35:34] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[16:35:41] *** Quits: _inky (~inky_@31.7.162.99) (Ping timeout: 252 seconds)
[16:36:05] <PlanckWalk> [itchyjunk]: I don't even know if it has a name.  It was a simple exercise in one of my CS classes.
[16:37:09] <PlanckWalk> It turns up in all sorts of ways.
[16:37:17] *** Joins: src (~src@user/src)
[16:37:20] *** Quits: aliosablack (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[16:37:33] *** Joins: flandish (~flandish@user/flandish)
[16:37:52] <flandish> Morning!
[16:38:00] *** gitesh is now known as git3sh
[16:38:57] <GeDaMo> Hi flandish :)
[16:39:01] * tangy waves hello
[16:39:22] *** git3sh is now known as gitesh
[16:39:39] <pyzozord> arahael for the first part it's not clear to me how fetching the median from sorted list gives the most commonly element
[16:40:21] <[itchyjunk]> hmm
[16:40:52] <merijn> pyzozord: It doesn't
[16:40:54] <[itchyjunk]> sounds like it's not clear that alll recursion can be turned to iteration and vice versa based on all this then..
[16:41:18] <PlanckWalk> It's very clear.
[16:41:25] <PlanckWalk> Well okay, not to everyone perhaps.
[16:41:32] <arahael> pyzozord: imagine you have a bunch of blue marbles and a bunch of red marbles, and you put them all into a 'sorted' line, how would you determine which is more numerous?
[16:41:39] <merijn> It seems fairly obvious that you can
[16:41:58] <merijn> I'm not 100% Church-Turing is sufficient to prove it (although it seems like it should be)
[16:42:00] <pyzozord> ooh it does but only if your list has only two kinds of elements
[16:42:07] <arahael> pyzozord: Only two, yep.
[16:42:31] <pyzozord> so you are sorting inside ever single binary string, i though you were sorting the list of strings
[16:42:33] <PlanckWalk> Well, it's "sufficient" in the sense that it can be proved without it and therefore can *certainly* be proved with it.
[16:43:00] <arahael> PlanckWalk: Yes, only for each item.
[16:43:12] <arahael> PlanckWalk: Each of the transposed items - so one column at a time.
[16:43:35] <merijn> PlanckWalk: ah, that's what you meant. Yeah, I agree with you, then
[16:43:45] *** Joins: rtypo (~alex@user/rtypo)
[16:43:52] *** Quits: flandish (~flandish@user/flandish) (Quit: flandish)
[16:44:48] <PlanckWalk> The exact details of proof will depend upon your exact computation models.
[16:45:17] <arahael> I've been looking at Oculus, it's... Intriguing.  Any other companies do this well, or is it only Facebook (ie, meta)
[16:45:40] <arahael> I guess you'd have to use this only with people who have the same product. :/
[16:45:42] *** Joins: dld (~dld@148.59.24.6)
[16:47:04] <acaciause> got a rift here ready to sell, gives me nausea XD
[16:47:10] <[itchyjunk]> you are supposed to look with oculus not at it
[16:47:17] <pyzozord> arahael also not sure what transpose does in your example. does it just change each string into tuple of index, string?
[16:47:38] <[itchyjunk]> what is one proof for the interation <=> recursion ?
[16:47:43] <[itchyjunk]> for whatever computational model
[16:47:46] <merijn> arahael: Well it's all locked and limited to Facebook accounts and marketplace...so, eh, I'd rather die than use it :p
[16:47:48] <Raziel> basically, facebook/meta is doing the best so far, as far as consumer vr
[16:48:01] <Raziel> probably because they're the only ones selling a product with actually decent value.
[16:48:07] <arahael> merijn: What's intriguing me is the possibility of using it for Sign Language.
[16:48:10] <[itchyjunk]> i hear you have ot login with fb 
[16:48:26] <arahael> But...  Blegh, indeed.  I so dislike Facebook.
[16:48:47] <dan01[m]> Hey guys, is there any sort of free alternative to macOS, something like GNUStep, but that's still alive out there?
[16:48:52] <Raziel> I hear they're actually removing the fb login requirement in the future, but ye
[16:48:58] <acaciause> https://en.wikipedia.org/wiki/General_recursive_function
[16:48:59] <bayaz> Title: General recursive function - Wikipedia 
[16:49:00] <merijn> tbh, the fact that you can rewrite any iteration into recursion seems so obvious I kinda struggle to see what's there to explin
[16:49:24] *** Joins: _inky (~inky_@188.115.224.238)
[16:49:28] <arahael> Raziel: It's still an FB company, though.
[16:49:33] <Raziel> dan01[m], how do you define "macOS alternative"?
[16:49:38] <Raziel> arahael, unfortunately, yes. :p
[16:49:40] <merijn> Hell, you can rewrite any iteration into a fold + helper :p
[16:49:45] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[16:49:48] <[itchyjunk]> acaciause, that defines recrusive funstions
[16:50:02] <[itchyjunk]> doesn't build a relationship between that and iterative function from what i can see
[16:50:10] <[itchyjunk]> so not sure what that link is supposed to do
[16:50:10] <nomagno> dan0: GNUStep is pretty much your only bet for a Free ObjC libc/Cocoa drop-in replacement
[16:50:19] <arahael> nomagno: It's far from "drop-in".
[16:50:30] <bjs> [itchyjunk]: sure it does, if you have recursive functions and recursive functions are equivalent to Turing machines and Turing machines work on iteration 
[16:50:35] <nomagno> I said it's your only bet
[16:50:35] <acaciause> "In computability theory, it is shown that the ?-recursive functions are precisely the functions that can be computed by Turing machines[2]"
[16:50:39] <merijn> [itchyjunk]: I mean a for loop is just a "start value", "increment operation" and "stop condition", that's kinda trivial to turn into recursion
[16:50:44] <acaciause> ie an iterative process
[16:50:47] *** Quits: dld (~dld@148.59.24.6) (Ping timeout: 256 seconds)
[16:50:48] <[itchyjunk]> bjs, that at best says recrusion => iteration
[16:50:54] <GeDaMo> dan01[m]: would HaikuOS (BeOS clone) count?
[16:50:58] <[itchyjunk]> the claim is recrusion <=> iteration
[16:51:01] <bjs> [itchyjunk]: no, you're reading an implication that isn't there
[16:51:06] <nomagno> BeOS is its own thibg
[16:51:12] <[itchyjunk]> bjs, not sure what you mean.
[16:51:14] <dan01[m]> GeDaMo: Guess so
[16:51:20] <[itchyjunk]> You're claiming a =>
[16:51:22] <bjs> [itchyjunk]: it's an equivalence, recursive functions are exactly the same as Turing machines
[16:51:23] <bjs> [itchyjunk]: no?
[16:51:25] <[itchyjunk]> original claim was <=>
[16:51:33] <[itchyjunk]> if not, then i'm not sure what you are saying.
[16:51:35] *** Quits: ixil (~ixil@mpp-cp1-natpool-2-004.ethz.ch) (Remote host closed the connection)
[16:51:49] <[itchyjunk]> merijn, for simple loops, sure
[16:51:58] <nomagno> BeOS was developed as a competitor to MacOS, not a replacement
[16:52:02] <bjs> [itchyjunk]: I'm not sure what you're confused by. Recursive functions and Turing machines are equivalent models, anything you can do with Turing machines (e.g. iteration) you can make a recursive function and vice-versa
[16:52:15] <merijn> [itchyjunk]: Define a "complicated" loop, then?
[16:52:19] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[16:52:21] <nomagno> Its like MacOS Classic vs. Windows 95, literally
[16:52:23] <[itchyjunk]> bjs, what does turing machine have anything to do with this?
[16:52:30] <[itchyjunk]> idk how the link provide was relavent. you claimed it is
[16:52:34] <[itchyjunk]> by bringing up turing machines
[16:52:35] <nomagno> It doesn't compete against NT nor Darwin
[16:52:43] <nomagno> And it is dead anyways
[16:52:44] <bjs> [itchyjunk]: well... if you have a problem that you solve with iteration, I claim I can solve it entirely with recursion
[16:52:48] <[itchyjunk]> merijn, i dont have to. the claim talks about iff
[16:52:49] <nomagno> HaikuOS is alive
[16:53:00] <bjs> [itchyjunk]: would that not suffice for your question?
[16:53:00] <[itchyjunk]> bjs, yes that's the claim
[16:53:01] <nomagno> You can give it a go, but still not a replacement
[16:53:04] <[itchyjunk]> what's lacking is proof
[16:53:06] <acaciause> itchyjunk: because a turing machine is iterative therfore if a turing machine can do it, its iterative
[16:53:11] <[itchyjunk]> bjs, the claim was already there
[16:53:17] <deniska> well, BeOS used real (huehue) protected mode, and was quite good at multimedia for its time
[16:53:19] <[itchyjunk]> my question was what is the proof for that
[16:53:24] <bjs> [itchyjunk]: the proof was given, recursive functions are equivalent to Turing machines
[16:53:36] <[itchyjunk]> that says recrusive => iterative
[16:53:42] <[itchyjunk]> not recrusive <=> iterative
[16:53:50] <deniska> but yeah, HaikuOS is a hobbyist OS at this point
[16:53:50] <bjs> [itchyjunk]: where are you getting the => from?
[16:54:06] <[itchyjunk]> recrusive => turing machine => iterative 
[16:54:13] <acaciause> itchyjunk: its on the wiki page I posted earlier 
[16:54:17] <bjs> [itchyjunk]: that first => I don't knwo where you're getting it from
[16:54:19] <deniska> "netbsd is way too mainstream for my taste" kind of hobbyist
[16:54:25] <bjs> [itchyjunk]: recursive functions and turing machines are *equivalent*
[16:54:28] <bjs> one is not a subset of the other
[16:54:31] <[itchyjunk]> acaciause, i know, that's why the link you posted is irrelevent
[16:54:37] <nomagno> Everything is a hobbyist OS
[16:54:39] <acaciause> itchyjunk: bear in mind there are different types of recursion 
[16:54:41] <nomagno> :D
[16:54:48] *** Joins: triad (~triad@user/triad)
[16:54:53] <[itchyjunk]> bjs, that means recruvice functions implies computable by turing machine
[16:54:58] *** Joins: dld (~dld@148.59.24.15)
[16:55:06] <merijn> [itchyjunk]: It also means the opposite
[16:55:09] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[16:55:11] <bjs> [itchyjunk]: and because they're equivalent, the other way around as well...
[16:55:13] <pyzozord> nomagno with that mindset you end up with Emacs :D
[16:55:16] <[itchyjunk]> no it doesnt
[16:55:19] <bjs> [itchyjunk]: ...!?
[16:55:21] <[itchyjunk]> => doesn't mean <=
[16:55:27] <bjs> [itchyjunk]: but it doesn't say =>
[16:55:30] <bjs> it says equivalent
[16:55:33] <nomagno> pyzozord: Fair enough
[16:55:37] <[itchyjunk]> this is dumb. iteration <=> recrusive is the claim.
[16:55:46] <merijn> [itchyjunk]: Turing machines and general recursive functions are *the same thing*
[16:55:53] <[itchyjunk]> the proof is that you say recrusive implies computable by turing complete.
[16:55:53] <bjs> [itchyjunk]: yes and the fact recursive functions and turing machines are equivalent is (a) proof
[16:55:55] <merijn> Anything you can do on one, you can do on the other
[16:56:01] <[itchyjunk]> that doesn't clarify iteration <=> recrusive
[16:56:11] <[itchyjunk]> no, it's partial proof.
[16:56:13] <bjs> [itchyjunk]: how?
[16:56:24] <[itchyjunk]> I've explained it 10 times above
[16:56:27] <bjs> [itchyjunk]: they are *equivalent*
[16:56:28] <merijn> [itchyjunk]: What part is missing?
[16:56:30] <[itchyjunk]> you have one way implication
[16:56:35] <pyzozord> is even a mathematical statement to say iteration <=> recursion? what does that mean
[16:56:36] <merijn> [itchyjunk]: You don't
[16:56:43] <bjs> [itchyjunk]: I really have no idea where you're getting the idea of the one-way implication from
[16:56:45] <[itchyjunk]> => and <=
[16:56:58] <bjs> [itchyjunk]: even the wiki article there is very clear that TMs and recursive functions are exactly the same
[16:57:05] <acaciause> lol its not integer factorization or discrete log, theres no one way
[16:57:11] <[itchyjunk]> you showed recrusive can be turned into interation via turing machine
[16:57:13] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[16:57:16] <pyzozord> iteration is not equal not greater than recursion, they don't have size or volume
[16:57:29] <bjs> [itchyjunk]: I show that they are exactly *the same model of computation* and so anything you can do in one you can do in the other
[16:57:30] <[itchyjunk]> who is talking about TM's other than y ou?
[16:57:30] <acaciause> even akaman function can be done iteratively(but ugly) 
[16:57:31] <[itchyjunk]> iteration <=> recrusive
[16:57:36] <[itchyjunk]> you're bringin in TM
[16:57:42] <merijn> [itchyjunk]: You can implemenent Turing machine via general recursive functions, therefore any iteration can be implemented using general recursive functions
[16:57:42] <bjs> [itchyjunk]: anything you can do with iteration can be done with a TM
[16:57:49] <bjs> and anything you can do with a TM can be done with a recursive function
[16:57:50] <[itchyjunk]> just because you say TM doesn't mean iteration <=> recrusive magically holds
[16:58:02] <[itchyjunk]> bjs, a -> b and b-> c
[16:58:09] <merijn> [itchyjunk]: Define iteration
[16:58:14] <[itchyjunk]> doesn't mean c -> a
[16:58:25] <amigojapan> merijn: I can't think of a perfect comeback for what lf94 said, but I think his statement ignores that both brainfuck is a hard language and python is an easy language and also that maybe it is also possible to optimise the code the way a C compiler optimises things. When going from one language to another. If I remember properly, the complaint against procedural code is that it changes state. But I assume if it is compiled 
[16:58:25] <amigojapan> into Haskell then it won't be changing state when it should not. That it would optimize the code in some way
[16:58:27] <[itchyjunk]> you're missing c->a there
[16:58:29] <bjs> [itchyjunk]: I don't understand where the => is coming from, all the steps are equivalence steps
[16:59:13] <merijn> amigojapan: His point was, that the things that make Haskell "good at concurrency" are part of Haskell's semantics. If you write Python code (and compile that to Haskell) you don't have Haskell's semantics while writing, and thus no benefit
[16:59:14] <[itchyjunk]> like is said, this isn't really proof. this is a hand waving exercise
[16:59:26] <bjs> [itchyjunk]: I'm confused, which part is the part you're not sure about?
[16:59:40] <[itchyjunk]> i've explained it the best i can already.
[16:59:41] <merijn> [itchyjunk]: Ok, you want proof? Give me a definition of iteration and recursion and I will give you a proof they're equivalent
[17:00:09] *** Quits: cykid128 (~cykid128@36-227-66-114.dynamic-ip.hinet.net) (Quit: Lost terminal)
[17:00:16] <[itchyjunk]> turning it into a game of nuance is even less interesting that this patchy claims of its all true
[17:00:20] <bjs> The TM <=> Recursive function thing is very clear.  The fact Recursive functions correspond to recursion seems evident.  TMs are purely iterative (no functions or anything, only looping).  The two models are equivalent
[17:00:29] <merijn> amigojapan: Haskell is good at concurrency/parallelism because: Explicit IO/effects, purely functional computation and immutability. Python code doesn't have those and thus "python compiled to haskell" doesn't have that either
[17:00:30] <bjs> Unless you're defining either recursion or iteration in a much more narrow scope
[17:00:34] <merijn> amigojapan: So you gain no benefit
[17:00:47] <acaciause> iteration is recursion with an empty/non existent stack frame :)
[17:01:02] <[itchyjunk]> <bjs> The TM <=> Recursive function thing is very clear.
[17:01:04] <[itchyjunk]> its not
[17:01:04] <merijn> acaciause: Fun fact: (GHC) Haskell doesn't have a call stack :p
[17:01:10] <[itchyjunk]> Recursive function => TM is clear
[17:01:18] <[itchyjunk]> TM => rf isn't that clear to begin with
[17:01:25] <amigojapan> Ok merijn if that is so, then I guess so
[17:01:27] <[itchyjunk]> it's a calim being made
[17:01:32] *** Quits: zwr (~zwr@2804:d45:b966:fb00:e8f3:9015:4194:f553) (Ping timeout: 252 seconds)
[17:01:32] <merijn> [itchyjunk]: It is, that's literally what Turing's thesis was about
[17:01:36] <[itchyjunk]> vaguely pointing to wiki which isn't saying it
[17:01:49] <[itchyjunk]> "literally" turing thesis was about computability
[17:01:55] <[itchyjunk]> had nothing to do with recursion
[17:02:14] <[itchyjunk]> this is an inference being made from turing church thesis
[17:02:14] *** Joins: zwr (~zwr@2804:d45:b966:fb00:c634:1c10:a560:ee24)
[17:02:15] <merijn> [itchyjunk]: By proving Turing machines were equivelnt to Gödel's general recursive functions *and* Church's lambda calculus
[17:02:23] <[itchyjunk]> the stackexchange earlier explained that part
[17:02:38] <pyzozord> the dude who invented lambda calculus had probably similar paper about his stuffs computability
[17:02:53] <merijn> [itchyjunk]: Like, that's *literally* why Turing is famous (well, in CS, I guess in popular society it might be because of Enigma)
[17:03:12] <acaciause> merijn: how does that even work ? XD
[17:03:16] <[itchyjunk]> "In computability theory, the Church–Turing thesis (also known as computability thesis,[1] the Turing–Church thesis,[2] the Church–Turing conjecture, Church's thesis, Church's conjecture, and Turing's thesis) is a hypothesis about the nature of computable functions. It states that a function on the natural numbers can be calculated by an effective method if and only if it is computable by a Turing machine."
[17:03:24] <merijn> He proved "general recursive functions" (from Gödel), lambda calculus (from Church) and his own Turing machines are all equivalent
[17:03:25] <bjs> pyzozord: the dude who invented lambda calculus was Alonzo Church, and he worked with Alan Turing and indeed it was clearly proved that LC <=> TM
[17:03:26] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[17:03:34] <merijn> acaciause: How does what work?
[17:03:44] <acaciause> no call stack
[17:03:59] <merijn> acaciause: ah, call stacks are for losers who "return" :)
[17:04:08] <acaciause> haha
[17:04:10] <bjs> [itchyjunk]: okay, what about Church-Turing?
[17:04:26] <merijn> acaciause: Since Haskell's function are all expressions (i.e. no statements), there is only one branch for returning a value
[17:04:27] <acaciause> ah i'm not big up on pure functional programming 
[17:04:36] <[itchyjunk]> he's claiming the statement has "literal" recursion stuff mentioned
[17:04:41] <[itchyjunk]> wiki has the literal statement
[17:04:44] <[itchyjunk]> it doesn't.
[17:04:54] <bjs> [itchyjunk]: Church-Turing is a different theorem
[17:04:54] <[itchyjunk]> https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis#Statement_in_Church's_and_Turing's_words
[17:04:55] <bayaz> Title: Church–Turing thesis - Wikipedia 
[17:04:56] <bjs> or well hypothesis
[17:04:58] <pyzozord> i always thought that "church turing" thin was about whacky religion that we live in a simulation...
[17:05:01] <acaciause> merijn: I see, nice
[17:05:01] <GeDaMo> acaciause: https://en.wikipedia.org/wiki/Continuation-passing_style
[17:05:01] <bayaz> Title: Continuation-passing style - Wikipedia 
[17:05:06] <merijn> acaciause: And if you don't have multiple return paths, you can skip "returning and continuing" and instead change it into "pass a continuation to call with the result"
[17:05:22] <merijn> GeDaMo's link is relevant, yes. GHC compiles via CPS
[17:05:25] <bjs> [itchyjunk]: I think you're confusing things,  take for example lambda calculus. It is one of the most fundamental results in CS that Lambda calculus and Turing machines are equivalent models
[17:05:25] <[itchyjunk]> nothing "literally" there about recrusion/iteration
[17:05:41] <[itchyjunk]> bjs, no, merijn claimed something literal about church turing thesis.
[17:05:48] <[itchyjunk]> i'm pointing out that's not true.
[17:05:51] <bjs> [itchyjunk]: Church-Turing is a much broader statement, that in some sense these models are "the best" and there are no stronger models that can do more than a TM
[17:05:51] <[itchyjunk]> no confusion there.
[17:06:12] <merijn> [itchyjunk]: I didn't mean "the Church-Turing thesis" which is just short for hypothesis
[17:06:14] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[17:06:20] <merijn> [itchyjunk]: I meant Turing's *literal* phd thesis
[17:06:36] <bjs> (Alonzo Church, aka the guy who made Lambda Calculus, was Turing's PhD supervisor)
[17:06:55] <pyzozord> right interation and recursion are just a way to use those conceptual machines. they proved entire machines have the same set of computable problems
[17:07:15] <[itchyjunk]> your claim about the godels' recrusive fucntions was a completly different thing
[17:07:27] <[itchyjunk]> not part of the original turing paper
[17:07:37] *** Joins: hololeap (~hololeap@user/hololeap)
[17:07:38] <[itchyjunk]> which is what you brought up above, godels recrusion
[17:07:51] *** Joins: cherim (UserNick@host-217-197-197-182.rev.as20985.net)
[17:08:00] <bjs> [itchyjunk]: I mean in the end you can take your pick, there are N+1 different "recursive" models and lots of them have been proven equivalent to TMs
[17:08:19] <[itchyjunk]> on the other hand, the recrusive => turing machines can be gotton to by that other wiki article someone else linked
[17:08:27] <[itchyjunk]> but not the turing machine => recursion part
[17:08:44] <merijn> Anyway, this is a boring discussions with you simply saying "you didn't provide proof and it isn't true" in response to, like, one of the most well known equivalencies in CS and asking us to spoonfed you all of Church and Turing's papers/work
[17:08:52] <[itchyjunk]> See, this is all fine and well that there is a lot of things pointing to this interation <=> recrusion being true.
[17:08:56] <[itchyjunk]> It probably is true.
[17:08:57] <mrig> I'm not sure that they are temporally equivalent are they, lambda calculus requiring a lot of abstraction?
[17:09:01] <bjs> [itchyjunk]: equivalnet means both ways.  Take something like LC.  We know for sure that LC <=> TM
[17:09:02] <[itchyjunk]> But the claim was that this was provable.
[17:09:05] <merijn> You don't believe me? Fine. Go read the work of Church and Turing yourself, why do I gotta convince you
[17:09:07] <[itchyjunk]> And i asked for proof.
[17:09:14] <mrig> a lot more work to achieve the same thing.
[17:09:19] <[itchyjunk]> But all i am getting is a lot of hand waving with "you just odn't understand"
[17:09:21] <pyzozord> isn't all or science supposed to assume they might be wrong? isn't that what science is about? :p
[17:09:28] <[itchyjunk]> point me to an actual proof and i'm good
[17:09:37] <bjs> [itchyjunk]: of what? that LC == TM ?
[17:09:45] <[itchyjunk]> scroll up
[17:09:47] <[itchyjunk]> you keep doing that
[17:09:50] <[itchyjunk]> i keep clarifying.
[17:09:55] <[itchyjunk]> and you do it again.
[17:10:02] <[itchyjunk]> YOU brought up TM.
[17:10:03] <merijn> mrig: Well, "equivalent" in this case "you *can* compute all of the same things", it doesn't mean "it will be equally efficient"
[17:10:05] <[itchyjunk]> I didn't.
[17:10:12] <[itchyjunk]> YOU keep bringing up TMs.
[17:10:13] <pyzozord> what's is the difference between <=> and =
[17:10:16] <[itchyjunk]> I didn't.
[17:10:24] <[itchyjunk]> I keep saying what the original claim was.
[17:10:28] <merijn> mrig: Most of the proofs rely on (rather inefficient) encodings of other problems, just to prove you *can* not that it was good
[17:10:33] <mrig> merijn right yes, so it is a loose equivalence in a way.
[17:10:41] <[itchyjunk]> 10 seconds later, YOU ask about "LC <=> TM" agian.
[17:10:43] <merijn> [itchyjunk]: Well, define iteration without Turing machines then
[17:10:44] <bjs> [itchyjunk]: my claim is that recursive == iterative, because recursive == LC, and iterative == TM and we know LC == TM
[17:11:18] *** Joins: average (uid473595@user/average)
[17:11:23] <[itchyjunk]> merijn, not interested in neuances. amigojapan already went down that route 
[17:11:35] <acaciause> not sure where the confusion is, anything that can be solved by a turing machine is a computable thefore tm->recursion and visa versa
[17:11:45] <pyzozord> is <=> = =
[17:11:48] <merijn> [itchyjunk]: You can't ask for a proof two things are equal, then refusing to define the things we should prove are equal
[17:11:49] <[itchyjunk]> "and vice versa"
[17:11:54] <bjs> pyzozord: sure, anything you can do you can do in the other
[17:11:55] <[itchyjunk]> you're getting that part for free.
[17:11:59] *** Joins: password2 (~password8@user/password2)
[17:12:05] <bjs> [itchyjunk]: what part? take my 3 statements there which are you arguing with?
[17:12:07] <[itchyjunk]> merijn, i can.
[17:12:11] <[itchyjunk]> I did.
[17:12:31] <merijn> [itchyjunk]: You can't prove properties on undefined systems
[17:12:53] <[itchyjunk]> Because the claim wasn't made by me to begin with.
[17:13:01] <[itchyjunk]> The claim was already there and i asked about it.
[17:13:05] *** Quits: jamea (~jamea@177.239.80.39) (Ping timeout: 252 seconds)
[17:13:13] <[itchyjunk]> people partially follow conversations and just change half the things around
[17:13:27] <merijn> [itchyjunk]: You seem to disagree that "iteration" equals "computable on a Turing machine". Well, everyone else thinks that definitin is fine, if you don't, you should provide an alternative definition of iteration
[17:13:28] <[itchyjunk]> The conclusion is, there is no definative proof for this.
[17:13:29] <bjs> [itchyjunk]: my claim is that "recursive" means uses Lambda Calculus, and that "iterative" means done with a Turing machine ; and that's how you get the proof that they're the same
[17:13:32] <[itchyjunk]> Just strong claims.
[17:13:41] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:13:49] <[itchyjunk]> bjs, yes i follow what you're saying
[17:14:05] <[itchyjunk]> merijn, no. that's what YOU seem to think i am thinking
[17:14:11] <bjs> [itchyjunk]: do you agree or disagree with that? "recursion" and "iteration" are very hand-wavy terms and it's important to ground them in some model 
[17:14:34] <[itchyjunk]> bjs, i follow your idea of linking things together. which is the closest to the proof we've gotton to
[17:14:41] <merijn> "Prove this is true, but I refuse to state what should be proved"
[17:14:45] <[itchyjunk]> assuming all your premise holds, i buy your idea
[17:14:51] <bjs> [itchyjunk]: I mean, you cannot prove that "iterative" means TM, because that's just definitional
[17:14:53] <[itchyjunk]> merijn, it was a fucking claim already made.
[17:14:56] <[itchyjunk]> Not made by me.
[17:15:03] <[itchyjunk]> What part of that are you struggling with?
[17:15:09] <merijn> If you don't define "iteration" then you're just asking "prove 'foo' is 'bar'" and then refuse to define 'foo' or 'bar'
[17:15:10] <[itchyjunk]> we were discussing stackexchange
[17:15:15] <[itchyjunk]> Fuck off.
[17:15:19] <acaciause> XD
[17:15:44] <merijn> The implicit definition of 'iteration' on stackexchange is "Turing machine", because that's the definition *everyone* in CS uses
[17:16:10] <bjs> [itchyjunk]: you shouldn't read too much into stackexchange, especially when written by non-CS people
[17:16:25] <bjs> especially given that particular question got the Church-Turing thesis wrong
[17:16:43] <pyzozord> right read/write/seek is essentially goto and memory, which is iteration
[17:16:44] <bjs> merijn: well not necessairly true, this is why I try to make a deal out of it
[17:16:52] <[itchyjunk]> bjs, sure but exploring a claims on se seems valid though
[17:16:57] <pyzozord> Turing machine IS iteration ad far as i am concerned
[17:16:59] <[itchyjunk]> people were confident it's trivially true
[17:17:00] <bjs> iteration is just a very hand wavy term
[17:17:12] * mrig waves hands "these are not the droids that you are looking for"
[17:17:13] <[itchyjunk]> turns out it's NOT that easy of a thing to prove or disprove or quantify even
[17:17:21] <bjs> [itchyjunk]: "trivially" no, proving that LC == TM is not trivial (for example) and that's basically the work you have to do for any of these proofs
[17:17:47] <[itchyjunk]> bjs, yes but that's not how the se presented it and initially some people here were convienced it's just follows from C-T thesis
[17:17:47] <pyzozord> same with recursion and lambda calculus. for all intents and purposes those can be assumed to be the same thing imo
[17:17:50] <bjs> [itchyjunk]: but if you assume LC==TM (e.g. because you read Turing's '37 paper or whatever) then all you're left with is trying to define things
[17:18:08] <bjs> recursion == LC/primitive recursive/mu recursive seems fairly evident.  The only question is how *you* define "iterative"
[17:18:13] *** Quits: frost (~frost@user/frost) (Ping timeout: 252 seconds)
[17:18:34] <bjs> [itchyjunk]: anyone that thinks it "follows" from the CT-thesis is just wrong, the CT-thesis is just a hypothesis you can't use it to infer anything
[17:18:58] <amigojapan> Yeah [itchyjunk] I agree that TMs are iteration based,I really don't know about the other one much. 
[17:19:03] <merijn> I am willing to bet you 500 dollars that for any given definition of iteration you give (that most programmers agree with) I can prove them equivalent to recursion in lambda calculus
[17:19:18] <merijn> Even if that definition is different from Turing machines
[17:19:21] <[itchyjunk]> bjs, that's what i said (base on reading a different se)
[17:19:32] <[itchyjunk]> amigojapan, i am in the same boat it seems
[17:19:48] <merijn> Hell, fuck it, I'll bet you 2000 dollar, because it's a lot of work and I need it to be worth my time when I'm done with the proof
[17:20:02] <bjs> [itchyjunk]: yes, but just because they got it wrong doesn't mean the claim that recursive<=>iterative is bogus.  The biggest question is how you define "iterative" because people have many different definitions
[17:20:11] <[itchyjunk]> i never said it was.
[17:20:13] *** Joins: _kimchi (~kimchi@87.247.123.112)
[17:20:25] <bjs> and indeed some people (I have personally seen this) have super weird definitions of iterative/recursive
[17:20:29] <merijn> bjs: Actually, even if you don't think "iteration" is "Turing machine", the equivalence is *still* proof
[17:20:30] <[itchyjunk]> I said, mroe than once, that i believe it's true but there seems to be not definative verification for it
[17:20:43] <merijn> bjs: Unless you're arguing for a non-computable definition of iteration :)
[17:20:47] <merijn> bjs: Which seems stupid :p
[17:20:55] <[itchyjunk]> if you don't believe in the first part, there is no equivalence to begin with
[17:20:58] <bjs> [itchyjunk]: well you -cannot- prove anything with the word "iteration" in it, because that's ... not a concrete thing
[17:21:06] <bjs> but if you say "when I say 'iteration' I mean ..."
[17:21:33] <merijn> I'd like to amend my bet: You don't even need to get most programmers to agree with your definition of iteration
[17:21:35] <bjs> then you can prove things, same with "recursion" although the idea that "recursion == only using recursive functions" is (to me) much more obvious
[17:21:48] <[itchyjunk]> it's not clear that iteration is not a formal concept
[17:21:49] <[itchyjunk]> https://computersciencewiki.org/index.php/Iteration
[17:21:49] <bjs> merijn: you definitely do, if I define iteration to mean "uses constant memory"
[17:21:51] <bayaz> Title: Iteration - Computer Science Wiki 
[17:21:51] <bjs> then it's not true
[17:21:56] <[itchyjunk]> it seems to be `used` formally in some context
[17:22:02] <[itchyjunk]> and in others, it's not
[17:22:03] <merijn> "Given *any*, *computable* definition of iteration, I will prove it equivalent to recursion"
[17:22:07] <[itchyjunk]> that's on the theoritical CS people
[17:22:28] <bjs> [itchyjunk]: if that "wiki" page hand waves any harder its hands will fall off :P
[17:22:56] <[itchyjunk]> https://en.wikipedia.org/wiki/Iteration
[17:22:57] <bayaz> Title: Iteration - Wikipedia 
[17:22:59] <bjs> merijn: and sadly I have seen people define iterative/iteration to mean "uses constant memory" before 
[17:23:03] <[itchyjunk]> the def seems to be more of less consistant though
[17:23:14] <[itchyjunk]> block of instructions that is repeated
[17:23:24] <bjs> [itchyjunk]: it's not formal at all,  because a recursive function also fits that definition
[17:23:31] <merijn> [itchyjunk]: Do you or do you not agree that iteration *must* be computable?
[17:23:32] <[itchyjunk]> right
[17:23:51] <[itchyjunk]> i have no comment on that
[17:24:13] *** Quits: inky (~inky@188.115.224.238) (Ping timeout: 256 seconds)
[17:24:14] <[itchyjunk]> may or maynot be computable, since you like chasing definitions. i could ask for everything to be defined
[17:24:17] <dan01[m]> Can someone explain me what's the idea behing Intel's Clear Linux? How does it differ from any ofther Linux distro? What's the whole stateless thing?
[17:24:21] <acaciause> if you include memory its gets trickier, technically iterative processes are not always constant memory
[17:24:57] <acaciause> it just grows less than the recursive version of it ie, the size of what stack would be associated with the loop if it were recursive 
[17:25:00] <[itchyjunk]> give me an easy example of iterative process where it is constant memory and where it isn't
[17:25:08] <[itchyjunk]> i think examples will help me follow along
[17:25:12] <acaciause> adding 1 to a number in a for loop
[17:25:17] <acaciause> eventually you overflow
[17:25:26] <[itchyjunk]> right, that one makes sense
[17:25:29] <acaciause> you should really just keep adding bits, ie its growing
[17:25:34] <[itchyjunk]> and constant would be do nothing in a loop?
[17:25:59] <amigojapan> dan01[m]: I have no idea, but I don't see why it would be a special kind of Linux different from the rest
[17:26:03] <bjs> [itchyjunk]: for example yeah, and imagine a recursive function which was tail-recursive, some people call this an iterative function!
[17:26:33] <acaciause> no it would just a be a loop than keeps its data bounded, so additive and subractive in equal measure 
[17:26:45] <acaciause> think of sha function run over a value infinite times
[17:26:48] <acaciause> still the same size
[17:27:47] <[itchyjunk]> ah
[17:28:21] <[itchyjunk]> so this example is iterative but adding one is not iterative by some definition?
[17:28:27] <[itchyjunk]> since the requirement is constant memory
[17:28:39] <bjs> [itchyjunk]: I have a little WHILE language (e.g. with loops,variables,ifs),  I know for sure that anything I can do in the WHILE language I can do in Lambda Calculus with recursive functions and vice-versa
[17:28:54] <amigojapan> dan01[m]: I will check their page, but I suspect it will just be another Linux distro
[17:29:02] *** Joins: inky (~inky@188.115.224.238)
[17:29:15] <acaciause> itchyjunk: if you were going to make a formal distinction that included memory yes. not very useful in the real world though
[17:29:50] *** Quits: mattil (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[17:30:12] <[itchyjunk]> i feel like this lambda calculus <=> TM thingy should have somehow included curry-howard correspondence 
[17:30:16] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Remote host closed the connection)
[17:30:26] <[itchyjunk]> i should learn lambda calculus at some point..
[17:30:35] <[itchyjunk]> comes up a lot as a glue between CS and math
[17:30:39] <amigojapan> dan01[m]: "Clear Linux OS is an open source, rolling release Linux distribution optimized for performance and security, from the Cloud to the Edge, designed for customization, and manageability."
[17:30:41] *** Quits: dld (~dld@148.59.24.15) (Ping timeout: 252 seconds)
[17:30:46] <bjs> [itchyjunk]: Curry-Howard is about proofs-as-programs
[17:31:20] <[itchyjunk]> yes but we have programs (hypothetical) that turns recursion <=> interation right?
[17:31:23] <dan01[m]> OpenBSD has an .img file for USB sticks and ISO files for DVD.
[17:31:23] <dan01[m]> Huh? I always just put the ISO on a usb or whatever, what's different?
[17:31:35] <[itchyjunk]> but what we want is a formal proof if possible
[17:31:45] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[17:31:54] <bjs> [itchyjunk]: proofs *about* programs is not what Curry-Howard is about
[17:32:00] <bjs> sort of
[17:32:04] <deniska> dan01[m]: ISO file meant for both usb and optical disks has to be prepared in a special way
[17:32:08] <[itchyjunk]> program is the proof of that type though
[17:32:09] <[itchyjunk]> hmm
[17:32:12] <amigojapan> dan01[m]: probably size
[17:32:13] <[itchyjunk]> this is above my paygrade
[17:32:21] <deniska> dan01[m]: most linux distros do that, some other OSes don't
[17:34:08] <bjs> [itchyjunk]: a program which always exhibits a witness is a fine way to prove something, it's not quite what Curry-Howard is talking about.
[17:34:19] *** Joins: flandish (~flandish@user/flandish)
[17:34:22] <bjs> Curry-Howard is a much more broad thing saying that a proof and a program are the same thing
[17:34:23] *** Quits: flandish (~flandish@user/flandish) (Client Quit)
[17:34:32] <acaciause> itchyjunk: as I understand it, the call stack is unwound iteratively, so again not including memory contraints you can just simulate recursion call stack in a for loop yourself 
[17:35:39] *** Joins: aliosablack (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[17:36:00] *** Joins: flandish (~flandish@user/flandish)
[17:36:07] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[17:36:26] <[itchyjunk]> hmm
[17:37:19] <acaciause> so add all stack variables to a list and return address, continue your loop. kind of like an emulator 
[17:37:42] <dan01[m]> deniska: ah
[17:38:07] *** Joins: tomathy (~jenova@user/quetzl)
[17:38:12] <deniska> dan01[m]: and I believe hybrid ISOs may fail to boot on older computers
[17:38:29] <dan01[m]> Stupid question by why do some prefer BSD over Linux? I mean what are main reasons?
[17:38:29] <Raziel> is this an EFI vs oldshit thing?
[17:38:37] *** Quits: alguien_ (~alguien@user/alguien) (Remote host closed the connection)
[17:38:49] *** Joins: hexingb (~hexingb@2409:8902:f64:5432:dd47:f0c3:232c:c426)
[17:39:00] <acaciause> itchyjunk: of course the list would grow exponentially, so it isnt pure iterative so it depends of your definition. Kind of shows how they are the same thing really :)
[17:39:05] <Raziel> dan01[m], bsd is more of a pain because less things directly support it, but there's also less main choices to deal with (freebsd, openbsd, a few things based on those two, that's it)
[17:39:21] <Raziel> but more importantly, I think the main difference between bsd and linux is the ideological licensing stuff.
[17:39:30] <Raziel> bsd license is truly free wile linux is usually GPL based stuff
[17:39:35] <amigojapan> dan01[m]: I would not recommend clear Linux, just cause it is a rolling releases, and those are prone to break
[17:40:08] <acaciause> GPL = freedom for end user
[17:40:11] <Raziel> dan01[m], if you do want to try a *polite* bsd distro, probably ghostBSD (based on freeBSD) would be the go-to
[17:40:20] <acaciause> BSD = freedom for programmer
[17:40:39] <Raziel> well, bsd = freedom for everyone. it's no less free for the user :p
[17:41:03] *** Joins: X-Scale` (~ARM@25.55.43.5.rev.vodafone.pt)
[17:41:08] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[17:41:22] <amigojapan> Raziel: bsd does not require the programmer to share the source
[17:41:37] <Raziel> correct
[17:41:59] <amigojapan> Raziel: that means less freedom for the end user
[17:42:47] <deniska> Users are as free to do whatever with the code they receive
[17:42:49] <Raziel> it can, indirectly, once something proprietary based on bsd stuff is in play
[17:42:52] <deniska> even moreso than with gpl :)
[17:42:55] <Raziel> yeah.
[17:42:57] <acaciause> especially when the code gets hoovered up by a big corporation never to be seen again. 
[17:43:21] <Raziel> they can never really take away the initial code they hoovered up
[17:43:29] <acaciause> cant do that with GPL, I cant take an existing GPL codebase, improve it, sell it, and then never give back
[17:43:37] <deniska> I don't think that's what happens often. Why would you keep the code to yourself, that means now you have to support it
[17:43:41] <amigojapan> Raziel: case in point Mac OS is propriety, because it used BSD
[17:44:22] <Raziel> sure, but current macos is so far from bsd I dun even know if there's any point in comparing them
[17:44:25] <amigojapan> acaciause: you can sell GPL stuff
[17:44:32] <acaciause> no but they take without giving, it harms the end users in practise because the improved version end up being used more without being able to access the source anymore
[17:44:43] <acaciause> you can sell it, but not without providing your changes 
[17:44:49] *** Quits: X-Scale (~ARM@83.223.227.126) (Ping timeout: 265 seconds)
[17:44:49] *** X-Scale` is now known as X-Scale
[17:44:54] <deniska> you can download source for bsd parts of macos from https://opensource.apple.com/
[17:44:54] <bayaz> Title: Open Source - Releases 
[17:45:09] <deniska> people even try to make an OS out of it, opendarwin and stuff :)
[17:45:22] <acaciause> thats there choice though, next week apple could decide to not do that
[17:45:26] <acaciause> their*
[17:45:35] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:46:02] <Raziel> but what they did release so far will still be out there, they can't really take that away.
[17:46:14] <deniska> It's not like gpl helps with that much, look at Qt
[17:46:27] <acaciause> true, but as soon as it doesn't suit them they can stop with no issues
[17:46:56] <acaciause> QT is a bit weird though isnt it, was always dual licenced 
[17:47:11] <dan01[m]> Raziel: Ah, thanks
[17:47:13] <[itchyjunk]> i just changed that "on"
[17:47:19] <deniska> any code can be double or triple or whatever times licensed if all authors agree to do that
[17:47:25] <[itchyjunk]> I went from 83% to 100% in the assignment
[17:47:29] <dan01[m]> Yeah, I just ordered a raspberryPI 400 or something 
[17:47:33] *** Quits: hexingb (~hexingb@2409:8902:f64:5432:dd47:f0c3:232c:c426) (Ping timeout: 252 seconds)
[17:47:34] <amigojapan> deniska: I can't fork macos tho, but I can Linux
[17:47:43] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:47:44] <merijn> deniska: Not if one of the earlier licenses was exclusive :p
[17:47:48] <dan01[m]> Comes with Raspbian but I was thinking to give some BSD a try
[17:47:56] <merijn> dan01[m]: FreeBSD is nice
[17:48:06] *** Joins: hexingb (~hexingb@111.32.64.73)
[17:48:17] <merijn> Was the first unix-like OS I ever used...permanently ruined the hellhole that is linux for me >.>
[17:48:28] <acaciause> haha
[17:48:31] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 256 seconds)
[17:48:42] <Raziel> ah, this is for a pi? there's a lot less choice for a pi, for relatively obvious reasons :p
[17:48:43] <acaciause> linux isnt a hellhole its constructive chaos 
[17:49:06] <merijn> acaciause: Have you ever used a non-linux unix?
[17:49:26] <amigojapan> I have used Solaris
[17:49:46] <deniska> amigojapan: even if all bsd parts of macos would be gpl licensed, you still couldn't fork macos, because parts of macos which actually make it interesting were never open
[17:50:03] <[itchyjunk]> <dan01[m]> Yeah, I just ordered a raspberryPI 400 or something 
[17:50:13] <[itchyjunk]> how many $ was it? and what's the specs
[17:50:27] <[itchyjunk]> i wanted to get one but then i realized i would have to buy keyboard and otehr stuff
[17:50:28] <amigojapan> Ok deniska 
[17:50:29] <deniska> raspberry pi 400, not to be confused with 400 raspberry pis
[17:50:30] <[itchyjunk]> and it wasn't worth it
[17:50:42] <[itchyjunk]> the latter seems cooler
[17:51:05] <Raziel> can't say I'm a huge fan of raspberry pis myself
[17:51:34] <amigojapan> [itchyjunk]: there is a new RPI that includes everything including the keyboard and the mouse
[17:51:40] <Raziel> it's not really powerful enough for serious usecases, but not cheap or small enough for specialized uses
[17:51:46] <Raziel> a bit of a toy v:
[17:52:10] <[itchyjunk]> amigojapan, but that one is expensive
[17:52:14] <[itchyjunk]> 100+
[17:52:20] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:52:23] <[itchyjunk]> i thought i could get one for 40 :P
[17:52:27] <[itchyjunk]> which is all i had at the time
[17:52:44] <amigojapan> I see [itchyjunk] 
[17:53:02] <[itchyjunk]> actually the one i looekd at didn't even come with the ssd :(
[17:53:07] <[itchyjunk]> for an oeprating system
[17:53:37] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[17:53:39] <[itchyjunk]> is rpi "open source" like arduino i.e diffeent manufactures make it?
[17:53:49] <[itchyjunk]> or only official ones get made?
[17:54:24] <Raziel> no, it's not open source
[17:54:29] <Guest17> what does scripting mean?
[17:54:43] <deniska> [itchyjunk]: some other manufacturers make PIs which are size and pin compatible, but they're not really compatible as far as the software goes
[17:54:52] <[itchyjunk]> ahh
[17:55:08] *** Quits: flandish (~flandish@user/flandish) (Quit: flandish)
[17:55:09] <deniska> [itchyjunk]: and by "PIs" I mean SBCs, single board computers
[17:55:12] <Raziel> parts of it are open source, but
[17:55:15] <merijn> Guest17: Depends on who you ask and how much they try to gatekeep
[17:55:19] <[itchyjunk]> wonder why pi is so popular then. sounds like other companies could make small cheap computers too
[17:55:20] <deniska> some literally have "pi" in its name, like banana pi
[17:55:29] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Read error: Connection reset by peer)
[17:55:29] <deniska> [itchyjunk]: it was the first
[17:55:43] <[itchyjunk]> oh its just first mover advantage? that's itneresting
[17:55:53] *** Joins: dld (~dld@148.59.24.15)
[17:55:57] <[itchyjunk]> are there SBC's that's cheaper than PI that has similar functionality?
[17:56:05] <deniska> [itchyjunk]: and then network effect happened, rpi has the mindshare, firmwares, forums, chats, projects etc
[17:56:06] <[itchyjunk]> i assume i could just install ubuntu on one of those and be fine
[17:56:12] <acaciause> pi zero was the best one imho, never even though it was possible to make a computer so cheap
[17:56:33] <[itchyjunk]> i didn't know pi was more powerful that pentium I i had used long time ago
[17:56:34] <Guest17> merijn: what confuses me is that a backend running on Python for example couldn't be called a script but most people will say python is a "scripting language"
[17:56:38] *** Joins: flandish (~flandish@user/flandish)
[17:56:40] <[itchyjunk]> i only learned about that recently
[17:56:55] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[17:57:25] <deniska> Guest17: it's more of "you know it when you see it" kind of thing, than something which you can define
[17:57:57] <deniska> Guest17: generally the term "scripting" is using when you write small programs
[17:58:01] <deniska> used*
[17:58:05] <Raziel> for python, I think that mostly comes from the fact that you can just run a pyton "script", without having to compile it or anything
[17:58:40] <deniska> I use "scripting" and "programming" fairly interchangeably
[17:58:44] <[itchyjunk]> i think of things i don't compile but run it as scripts
[17:59:08] <deniska> you can use tcc as a shebang in C programs
[17:59:12] <[itchyjunk]> i think of programs as something that has been compiled and can run on it's own. but that's probably not useful
[17:59:14] <deniska> so you can write C scripts :)
[17:59:55] *** Quits: zaher (~zaher@130.180.176.3) (Ping timeout: 256 seconds)
[18:00:17] <Raziel> even compiled stuff may not run "on its own", cause of runtimes and such, but yeah
[18:00:18] <acaciause> you probably can literally too, cant you compile to LLVM il and jit it 
[18:00:32] <merijn> acaciause: There are C and C++ repls even
[18:01:01] <deniska> it's all computation all the way down
[18:01:19] *** Quits: Gentpup (~Gentpup@217.75.212.43) (Remote host closed the connection)
[18:01:33] *** Quits: jaysicks (~jaysicks@94-21-138-235.pool.digikabel.hu) (Ping timeout: 256 seconds)
[18:02:02] *** Joins: Amnesia (~Amnesia@user/amnesia)
[18:02:07] <acaciause> merijn: nice I wonder how much overhead there is with that vs compiled 
[18:02:14] <Amnesia> question, does anyone over here know if it's possible to combine multiple proto services?
[18:02:35] *** Joins: KillerWasp (KillerWasp@user/killerwasp)
[18:02:46] <deniska> what are proto services?
[18:02:47] <KillerWasp> hello random neutrinos guys
[18:03:02] <Amnesia> deniska: grpc services
[18:05:19] *** Quits: ELCYC (~ELCYC@user/elcyc) (Quit: Leaving.)
[18:08:11] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (Quit: ZNC 1.8.2 - https://znc.in)
[18:08:24] *** Joins: victori (~victori@cpe-76-174-179-126.socal.res.rr.com)
[18:08:39] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[18:09:08] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.72)
[18:10:03] *** Quits: inky (~inky@188.115.224.238) (Ping timeout: 256 seconds)
[18:10:03] *** Quits: _inky (~inky_@188.115.224.238) (Ping timeout: 256 seconds)
[18:10:14] *** Quits: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[18:10:36] *** Joins: inky (~inky@37.252.88.111)
[18:14:22] *** Joins: jaysicks (~jaysicks@188-143-121-232.pool.digikabel.hu)
[18:14:23] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[18:18:09] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[18:18:09] *** Joins: death916 (~death916@user/death916)
[18:18:32] *** Quits: inky (~inky@37.252.88.111) (Remote host closed the connection)
[18:19:05] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 252 seconds)
[18:19:52] *** Joins: operateur (~operateur@91.143.220.230)
[18:20:01] *** Quits: _kimchi (~kimchi@87.247.123.112) (Quit: Leaving)
[18:23:05] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[18:24:31] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[18:24:47] *** Joins: _inky (~inky_@37.252.88.111)
[18:25:44] *** Joins: Libero (~Libero@130.43.23.56.dsl.dyn.forthnet.gr)
[18:30:38] *** Quits: triad (~triad@user/triad) (Ping timeout: 252 seconds)
[18:32:19] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:393:e590:b69b:2236)
[18:32:20] *** Quits: flandish (~flandish@user/flandish) (Quit: flandish)
[18:32:41] <pyzozord> arahael not sure what transpose does in part one of your aoc
[18:36:20] *** Quits: hexingb (~hexingb@111.32.64.73) (Read error: Connection reset by peer)
[18:37:02] *** Joins: hexingb (~hexingb@111.32.64.73)
[18:37:25] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[18:37:38] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[18:40:17] *** Joins: nickorta12 (~nickorta1@172.58.56.230)
[18:40:38] *** Quits: nickorta12 (~nickorta1@172.58.56.230) (Client Quit)
[18:43:24] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:d8a1:d15e:bf3b:b33f) (Remote host closed the connection)
[18:43:46] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:d8a1:d15e:bf3b:b33f)
[18:46:18] *** Parts: cherim (UserNick@host-217-197-197-182.rev.as20985.net) (Closing Window)
[18:48:27] *** Parts: pyzozord (pyzozord@user/pyzozord) (AndroIRC)
[18:49:11] *** Joins: pyzozord (pyzozord@user/pyzozord)
[18:53:58] *** Joins: cation21 (cation@user/cation)
[18:54:33] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:54:39] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[18:56:10] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[18:57:03] *** cation21 is now known as cation
[18:57:05] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[18:57:17] *** Quits: baakeydow (~baake@2001:41d0:203:b12c::) (Quit: baakeydow)
[19:00:08] *** Joins: baakeydow (~baake@2001:41d0:203:b12c::)
[19:02:15] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[19:03:36] *** Joins: jdmark (~jdmark@097-102-095-007.res.spectrum.com)
[19:04:15] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:06:53] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:07:12] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[19:10:35] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[19:10:58] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[19:14:19] *** Joins: alguien_ (~alguien@user/alguien)
[19:14:19] *** alguien_ is now known as alguien
[19:14:35] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:15:17] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Quit: WeeChat 3.3)
[19:15:17] *** Quits: dld (~dld@148.59.24.15) (Ping timeout: 256 seconds)
[19:15:22] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[19:15:32] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 250 seconds)
[19:16:31] *** Joins: Gamara (~Gamara@66-203-186-197.ded.execulink.com)
[19:17:04] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:19:19] *** Parts: Amnesia (~Amnesia@user/amnesia) ()
[19:22:28] *** Quits: xsperry (~xs@user/xsperry) ()
[19:23:16] *** Joins: rsx (~dummy@ppp-188-174-133-37.dynamic.mnet-online.de)
[19:25:36] *** Quits: Fauto_ (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[19:26:04] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[19:26:36] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:d9ba:db19:4ac0:8420)
[19:28:10] *** Joins: Ben_1 (~ben@2001:16b8:50e6:b000:87a6:1f26:a19a:93ea)
[19:28:20] <Ben_1> Hi, I have a regular expression question.
[19:28:58] <GeDaMo> Ask and ye shall receive many Kleene stars :P
[19:29:25] <pulse> As long as it's not an irregular expression question
[19:29:53] <acaciause> are perl extensions irregular ? XD
[19:30:19] <GeDaMo> Yes! :P
[19:30:28] <merijn> acaciause: I mean, if you define irregular to be "not regular", then yes
[19:30:31] <acaciause> were all doomed then
[19:30:58] <Ben_1> I want to match all characters, except a few characters. e.g. I found this pattern [^KEPXa-z], but unfortunately this allows everything except what is in the brackets
[19:31:17] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:31:39] *** Quits: Twipply (~Twipply@user/twipply) (Read error: Connection reset by peer)
[19:31:42] <KillerWasp> There is a lot of racism against those who speak Spanish in the United States.
[19:31:54] <Ben_1> Is there a way to attach [A-Z] and [^KEPX] just removes K E P and X from A-Z?
[19:32:01] *** Joins: Twipply (~Twipply@user/twipply)
[19:32:38] <KillerWasp> bah. offtopic.
[19:33:42] <KillerWasp> Ben_1: [] only take 1 character in the list
[19:34:01] <GeDaMo> [A-DF-JL-OQ-Z]
[19:34:06] <KillerWasp> ^ or K or E or P or X or any of A to Z
[19:34:10] <GeDaMo> Oh, missed X
[19:34:11] <KillerWasp> a to z*
[19:34:13] <acaciause> clever bastard XD
[19:34:23] <acaciause> i was gonna type all the letters out haha
[19:34:35] <GeDaMo> [A-DF-JL-OQ-WYZ]
[19:34:48] <Ben_1> GeDaMo: ok, sounds reasonable, but quite inconvenient if the list of exceptions is getting bigger
[19:35:07] <acaciause> yes can you remove from a built in character set is the question I suppose
[19:35:18] *** Joins: cykid128 (~cykid128@36-227-66-114.dynamic-ip.hinet.net)
[19:35:33] <GeDaMo> I'm just looking for that now https://regex101.com/
[19:35:36] <bayaz> Title: regex101: build, test, and debug regex 
[19:35:45] <KillerWasp> i don't know how to negate the characters in the regular expresion
[19:36:19] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[19:36:19] <KillerWasp> Ben_1: for what command is this?
[19:36:28] <acaciause> negative lookahead
[19:36:31] <acaciause> can do it 
[19:36:46] <acaciause> there we are onto irregular already XD
[19:36:55] *** Joins: lilgopher (~textual@2601:241:8000:38f0:cdf7:d65d:b907:6f36)
[19:37:04] <acaciause> https://stackoverflow.com/questions/44771741/regex-any-alphabet-except-e
[19:37:05] <bayaz> Title: Regex - any alphabet except "e" 
[19:37:08] *** Joins: quartz (~quartz@user/quartz)
[19:37:48] <acaciause> I don't think think there is a pure way to do it other than that without lookahead look behind
[19:38:53] <KillerWasp> also [^] cont like ^ character, but ^[] count like the begin character
[19:39:00] <KillerWasp> count*
[19:39:20] *** Quits: nabaiste^ (~nabaiste@68.101.58.90) (Remote host closed the connection)
[19:39:38] <KillerWasp> seem in regex don't exist something for negate some characters.
[19:40:09] <acaciause> I just posted a link about it KillerWasp, it uses extended regex though
[19:40:34] <KillerWasp> acaciause: well, the solution already give by GeDaMo :/
[19:40:52] <acaciause> Yes this is a more general solution though
[19:41:05] <GeDaMo> Ben_1: (?![KEPX])[A-Z] also works
[19:41:09] <KillerWasp> negate for e [a-df-z]
[19:41:35] *** Quits: xff0x (~xff0x@2001:1a81:5394:4100:b17b:62d7:7f1e:4d8a) (Ping timeout: 252 seconds)
[19:41:40] <acaciause> GeDaMO: beat ya its in the link negative lookahead XD
[19:41:50] <GeDaMo> That's where I got it from :P
[19:41:54] <acaciause> oh haha
[19:42:27] <Ben_1> GeDaMo: ah thanks, this is the solution I was searching for!
[19:42:41] *** Joins: xff0x (~xff0x@2001:1a81:5394:4100:724:71c4:c7ef:b5ba)
[19:42:51] <GeDaMo> Ben_1: I got it from acaciause's link
[19:43:06] <acaciause> no worries I was too lazy to type it out
[19:43:30] <Ben_1> then thanks you two. :)
[19:43:41] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:43:46] <Ben_1> the chat was too quick, the link was already behind a lot of text :P
[19:44:39] <GeDaMo> Ben_1: https://regex101.com/ is useful for testing reexes
[19:44:41] <bayaz> Title: regex101: build, test, and debug regex 
[19:44:41] *** Quits: cation (cation@user/cation) (Ping timeout: 256 seconds)
[19:45:26] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 252 seconds)
[19:45:41] <Ben_1> GeDaMo: I'm already using this page, but without an glue, this does not help :P
[19:45:57] *** Joins: cation (cation@user/cation)
[19:46:21] <GeDaMo> The negative lookahead is under group constructs in the quick reference at the bottom right
[19:49:36] *** Joins: sonny88 (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[19:49:39] *** Quits: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[19:49:58] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[19:51:30] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Ping timeout: 256 seconds)
[19:55:22] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Read error: Connection reset by peer)
[19:55:31] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[19:56:18] *** Quits: rsx (~dummy@ppp-188-174-133-37.dynamic.mnet-online.de) (Quit: rsx)
[19:56:19] *** Quits: Buttercat (~Buttercat@user/buttercat) (Read error: Connection reset by peer)
[19:57:45] *** Joins: vigumnov (~victori@cpe-76-174-179-126.socal.res.rr.com)
[19:58:27] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (Ping timeout: 252 seconds)
[19:58:42] *** Joins: murii (~murii@2a02:a58:835a:1100:d466:9ac4:4aba:ea6e)
[19:59:12] <murii> Hey guys, do you know if I can write custom plugins in Java and attach them to Keycloak ?
[20:00:36] *** Quits: Mangy_Dog (~Mange@user/mangy-dog/x-7397214) ()
[20:01:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:02:35] *** Joins: erts (~erts@user/erts)
[20:02:41] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[20:08:21] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 252 seconds)
[20:09:38] *** Parts: erts (~erts@user/erts) (.)
[20:10:05] *** Joins: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[20:10:54] <mspe> if any of you did ever want ks servers but never could because they're fucking rare
[20:11:00] <mspe> take a look at their website right now
[20:12:46] <GeDaMo> What's a "ks server" and why would I want one?
[20:13:20] <mspe> cheap big ram big storage servers
[20:13:48] <mspe> https://www.kimsufi.com/us/en/servers.xml
[20:13:53] *** Quits: namkeleser (~namkelese@101.175.102.188) (Quit: Client closed)
[20:13:53] <bayaz> Title: Le serveur dédié pas cher ! Serveur à prix imbattable - Kimsufi 
[20:14:32] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[20:14:50] *** Joins: mickey8 (~user@user/mickey)
[20:15:14] *** Quits: murii (~murii@2a02:a58:835a:1100:d466:9ac4:4aba:ea6e) (Remote host closed the connection)
[20:15:41] *** Joins: murii (~murii@2a02:a58:835a:1100:d466:9ac4:4aba:ea6e)
[20:19:15] <acaciause> I'll stick to my openvz vps for $4 a year thank you XD
[20:20:03] *** Joins: Buttercat (~Buttercat@user/buttercat)
[20:20:12] <jamea> c# why get this error: https://postimg.cc/T5dLbDCY   i checked on the pc and have isntalled the correct version of .net 4.7.2 any advice? (in the rest of 15 computers no error)
[20:20:13] <bayaz> Title: Image — Postimages 
[20:20:27] *** Joins: CaCode (~CaCode@user/cacode)
[20:20:50] <CaCode> https://pastebin.com/rCtXRDV0
[20:20:51] <bayaz> Title: Generate Subets Off Of A Set - Pastebin.com 
[20:21:30] <CaCode> when generating subsets of a set, building a collection of vectors i assume, shouldn't the variable subsets be a vector of vectors instead of a vector?
[20:21:51] *** Parts: Ben_1 (~ben@2001:16b8:50e6:b000:87a6:1f26:a19a:93ea) ()
[20:22:00] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[20:22:26] *** Quits: wei2912 (~wei2912@116.88.103.128) (Quit: Lost terminal)
[20:22:30] <acaciause> jamea: missing dll
[20:24:21] <CaCode> shouldn't the result be a multidimensional vector? instead of just a one dimensional vector?
[20:25:32] *** Quits: Buttercat (~Buttercat@user/buttercat) (Read error: Connection reset by peer)
[20:26:12] *** Joins: Akuli (~Akuli@82-203-166-207.bb.dnainternet.fi)
[20:27:26] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:27:59] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:28:43] <jamea> acaciause: https://postimg.cc/ct330S9f  i transfer this dll files
[20:28:44] <bayaz> Title: Image — Postimages 
[20:29:00] *** Joins: Duja (~Duja@89.116.143.37)
[20:29:10] <acaciause> CaCode: usually you should be returning a vector from your search function and concating it, with a recursive problem to build your subset
[20:29:29] <acaciause> thats an ugly way to do it as you have there if you are removing and adding to it down the call stack
[20:29:59] <jamea> also in solution explorer references: https://postimg.cc/WFgp41Vp/29c5c2fc
[20:30:00] <bayaz> Title: Image — Postimages 
[20:30:31] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[20:31:14] <acaciause> jamea: it the same version of the software on all machines right? see the .net checks the version, name and token of the dll which can change from version to version
[20:31:18] *** Joins: raj (uid72176@user/raj)
[20:31:39] <acaciause> so if you have an older version of the app and you try to add more recent version DLL, it will fail, as the program expects the old version.
[20:32:22] <jamea> yes
[20:32:26] <jamea> new installation
[20:32:33] *** Quits: tesuji (~quassel@2a02:908:180:9500:ed81:4afc:8e41:e7c1) (Ping timeout: 252 seconds)
[20:32:35] <acaciause> yeah but is it new version?
[20:32:47] <CaCode> acaciause, it's from a book, and I do not understand how it doesnt end up to be a collection of integers rather than a collection of vectors inside of subset
[20:32:55] *** Quits: cykid128 (~cykid128@36-227-66-114.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[20:33:00] *** Joins: average (uid473595@user/average)
[20:34:22] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[20:34:28] <CaCode> if the set is (1,2,3) you dont want (1,2,3,1,2,1,3,2,3,1,2,3) but rather (1,2,3,12,13,23,123,,)
[20:34:30] <acaciause> CaCode: because he is pushing integer K into the vector subset, then popping some off.
[20:34:43] <acaciause> he isnt pushing a vector into another vector, only K
[20:35:04] <CaCode> I am not sure I am communicating effectively
[20:35:08] <acaciause> subset.push_back(k);  int k
[20:35:17] <CaCode> acaciause, does he end up with a vector of vectors?
[20:35:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:35:37] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[20:35:39] <acaciause> no its just a flat vector
[20:35:43] <CaCode> acaciause, does he end up with a one or with a multidemensional vector
[20:35:55] <acaciause> 1 dimensional vector
[20:36:04] <CaCode> (1,2,3,1,2,1,3,2,3,1,2,3) so this instead of(1,2,3,12,13,23,123,,)
[20:37:02] <acaciause> well no, a multi dimensional vector is more like [[1, 2, 3], [1, 2, 3], [1, 2, 3]]
[20:37:14] <acaciause> is that what you mean by multidimensional vector?
[20:37:33] <acaciause> and 1d is [1, 2, 3, 4, ...]
[20:37:56] <CaCode> i mean he should have ((1)( 2 )(3 )(1,2)( 1,3)( 2,3)( 1,2,3))
[20:38:01] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Remote host closed the connection)
[20:38:16] <acaciause> sure I was just understanding your notation 
[20:38:38] *** Joins: Jantz (~IceChat95@2407:7000:8d04:100:20ab:df6:4a36:a7ba)
[20:38:41] <CaCode> a vector of vectors i mean
[20:38:41] <acaciause> c languages tend to use square brackets not () :)
[20:39:02] <acaciause> to answer your question, no he will not get a vector of vectors
[20:39:19] *** Joins: buzzard (~quassel@37.120.203.166)
[20:39:22] <acaciause> because no new vectors are being created in the recursive function, and only an integer is being added to subset
[20:39:36] <CaCode> either way he ends up with a colletion of the integers k without any delimination on where one subset ends and the next begins.no?
[20:39:38] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[20:40:08] <acaciause> thats right
[20:40:10] <CaCode> so he is not really generating all the subsets but one large list of integers?
[20:40:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[20:40:16] <CaCode> ok this is where my problem is 
[20:40:23] <acaciause> yes
[20:40:24] <CaCode> shouldn't he be creating a list of lists?
[20:40:42] <acaciause> what does it say he is trying to do in the book?
[20:41:07] <CaCode> build all the subsets of an array for ex. {1,2,3}
[20:41:14] <CaCode> including of course emtpy set
[20:41:56] <acaciause> them yes, he should be creating a new vector for each subset, and returning it from search function
[20:42:08] <CaCode> sigh
[20:42:10] <CaCode> thanks
[20:42:19] *** Joins: Buttercat (~Buttercat@user/buttercat)
[20:42:23] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:42:34] *** Joins: mickey8 (~user@user/mickey)
[20:44:03] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[20:44:11] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[20:44:24] <jamea> acaciause solved, copy files from other computer...
[20:45:06] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[20:45:14] <acaciause> jamea: you must have mixed software versions or something :)
[20:45:32] *** Quits: Buttercat (~Buttercat@user/buttercat) (Read error: Connection reset by peer)
[20:45:39] <acaciause> jamea: glad you fixed it 
[20:46:06] <vdamewood> I just woke up, but I'm still sleepy.
[20:46:12] *** Quits: simon323 (~simon323@2409:8a34:468:83d0:80e5:1992:5e66:41ca) (Quit: simon323)
[20:47:11] *** Joins: rvalue (~rvalue@user/rvalue)
[20:48:13] *** Quits: gambl0re (~gambl0re@216.154.4.187) (Ping timeout: 256 seconds)
[20:50:35] *** Joins: gitgood (~gitgood@85.210.185.0)
[20:54:01] *** Parts: CaCode (~CaCode@user/cacode) (Leaving)
[20:55:53] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[20:56:03] *** Quits: Gamara (~Gamara@66-203-186-197.ded.execulink.com) (Quit: Going offline, see ya! (www.adiirc.com))
[20:57:11] *** Joins: qbt (~qbt@user/edun)
[20:59:32] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:00:14] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 252 seconds)
[21:00:40] *** Joins: ejjfunky (~ejjfunky@125.164.23.135)
[21:02:48] *** Joins: Gamara (~Gamara@66-203-186-197.ded.execulink.com)
[21:03:56] *** Joins: Buttercat (~Buttercat@user/buttercat)
[21:04:36] *** Quits: murii (~murii@2a02:a58:835a:1100:d466:9ac4:4aba:ea6e) (Remote host closed the connection)
[21:04:38] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 252 seconds)
[21:04:46] *** Joins: murii (~murii@2a02:a58:835a:1100:d466:9ac4:4aba:ea6e)
[21:09:09] *** Quits: sjmulder (~sjmulder@2a02-a443-33e5-1-d382-e0bc-4d31-d1c5.fixed6.kpn.net) (Quit: Leaving)
[21:09:39] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.193)
[21:10:17] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[21:10:19] *** Quits: Buttercat (~Buttercat@user/buttercat) (Ping timeout: 252 seconds)
[21:12:31] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.72) (Ping timeout: 256 seconds)
[21:12:34] *** Joins: Buttercat (~Buttercat@user/buttercat)
[21:12:36] *** Joins: plantman (~plantman@2601:405:4680:1b0::2)
[21:15:11] *** Joins: rickybob (uid410295@id-410295.helmsley.irccloud.com)
[21:19:13] *** Joins: tesuji (~quassel@2a02:908:180:9500:3852:8ba:a318:ea61)
[21:21:22] <tomathy> hi
[21:21:54] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:26:01] *** Quits: Buttercat (~Buttercat@user/buttercat) (Quit: Leaving.)
[21:30:04] *** Joins: gambl0re (~gambl0re@205.189.187.4)
[21:32:55] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[21:35:53] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:36:40] *** Joins: Auron (Auron956@user/auron)
[21:41:29] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 256 seconds)
[21:42:31] <smallville7123> i like PEGTL :_
[21:42:34] <smallville7123> i like PEGTL :)
[21:43:41] *** Quits: premultiplied (~premultip@69.84.6.130) (Quit: WeeChat 3.3)
[21:43:56] *** Quits: Duja (~Duja@89.116.143.37) (Quit: Leaving)
[21:45:01] <tomathy> onions
[21:45:07] *** Joins: Guest14 (~Guest14@pool-96-253-74-73.rcmdva.fios.verizon.net)
[21:48:16] *** Parts: qbt (~qbt@user/edun) ()
[21:50:39] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 252 seconds)
[21:53:02] *** Quits: DevAntoine (~DevAntoin@pop.92-184-112-247.mobile.abo.orange.fr) (Remote host closed the connection)
[21:54:19] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[21:55:25] *** Joins: Klinda (~superleag@user/klinda)
[21:57:56] <pulse> If onions is C, garlic is C++
[21:59:15] *** Joins: VincentValentine (~VincentVa@79.126.87.86)
[21:59:32] *** Joins: Nex6 (~Nex6@149.142.80.37)
[22:00:06] *** Quits: ejjfunky (~ejjfunky@125.164.23.135) (Quit: Leaving)
[22:00:10] <Raziel> because C makes you cry, but C++ keeps vampires away?
[22:00:12] <acaciause> bad analogy, garlic is still edible
[22:00:21] <acaciause> haha
[22:00:52] <sonny88> waaa
[22:00:59] *** launchd is now known as BuddyTheElf
[22:01:02] <sonny88> I'd eat onions way before garlic
[22:02:31] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[22:06:49] <pyzozord> onions and garlic are amazing
[22:07:52] <pyzozord> c++ is more like chilly peppers
[22:08:08] <dan01[m]> Does anyone has an opinion on Firefox vs Brave performance? In terms of memory and CPU consumption 
[22:09:08] <Raziel> oh so that's why I love spicy shit
[22:11:33] * oldlaptop declines to comment on whether cow manure or pig manure smells better
[22:11:33] *** Quits: the_lanetly_052_ (~the_lanet@185.30.88.193) (Ping timeout: 252 seconds)
[22:11:45] *** Quits: Syzygy (~Syzygy@178-190-83-165.adsl.highway.telekom.at) (Remote host closed the connection)
[22:12:00] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[22:12:21] *** Joins: mickey8 (~user@user/mickey)
[22:13:44] *** Joins: DevAntoine (~DevAntoin@pop.92-184-112-247.mobile.abo.orange.fr)
[22:15:56] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:393:e590:b69b:2236) (Remote host closed the connection)
[22:17:37] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:18:49] *** Quits: DevAntoine (~DevAntoin@pop.92-184-112-247.mobile.abo.orange.fr) (Ping timeout: 256 seconds)
[22:19:33] <dan01[m]> I have a question about Signals, in POSIX, so things like SIGKILL, etc.
[22:20:34] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[22:20:50] <sonny88> just ask
[22:20:57] <sonny88> there is also a posix channel
[22:21:01] <dan01[m]> So I read signals are a form of IPC (Inter-Process-Communication) and what I don't exactly get is this:
[22:21:01] <dan01[m]> So let's say you have SIGKILL, say I have a main executable waiting for SIGKILL, can any other process send a SIGKILL to it? Or just the Kernel?
[22:22:20] <GeDaMo> There's a kill command which sends signals to processes
[22:22:49] <dan01[m]> True
[22:22:56] <GeDaMo> Depends on whether you have permsissions
[22:23:12] <dan01[m]> But I mean... yeah I gues I can send that kill command from another process to another process
[22:23:28] <dan01[m]> I mean, I usually use kill in the terminal, in bash
[22:23:34] <dan01[m]> But can I use it in a C program, for example?
[22:23:52] <GeDaMo> https://man7.org/linux/man-pages/man2/signal.2.html
[22:23:54] <bayaz> Title: signal(2) - Linux manual page 
[22:24:48] <GeDaMo> Oh wait, that's for setting the handler
[22:24:53] <GeDaMo> https://man7.org/linux/man-pages/man2/kill.2.html
[22:24:54] <bayaz> Title: kill(2) - Linux manual page 
[22:25:12] <GeDaMo> "The kill() system call can be used to send any signal to any process group or process."
[22:25:28] <user51> http://sprunge.us/uNU15x
[22:25:31] <user51> advent of code day 3
[22:25:41] <user51> in awk, of course
[22:26:39] *** Quits: xeno (~xeno@user/xeno) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:27:00] <novns> there's also the murder(2) syscall and the slaughter(3) libc function
[22:28:45] <user51> you still need to worry about zombie processes..
[22:28:59] *** Joins: superdupond (~Kev@2a01cb0400149f0034a31c71df36b337.ipv6.abo.wanadoo.fr)
[22:29:37] *** Joins: murii_ (~murii@2a02:a58:835a:1100:c941:f24b:e3fa:2b6)
[22:31:36] <novns> user51, you can do chmod 666, and start some daemon then
[22:33:11] *** Quits: murii (~murii@2a02:a58:835a:1100:d466:9ac4:4aba:ea6e) (Ping timeout: 268 seconds)
[22:33:13] *** Quits: hololeap (~hololeap@user/hololeap) (Read error: Connection reset by peer)
[22:34:32] *** Joins: hololeap (~hololeap@user/hololeap)
[22:34:41] *** Quits: _inky (~inky_@37.252.88.111) (Ping timeout: 256 seconds)
[22:36:07] <plantman> that would be a mistake, starting daemons is very bad
[22:36:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:37:41] *** Joins: murii (~murii@2a02:a58:835a:1100:38be:ab5c:1371:c6fb)
[22:37:45] <plantman> once you start daemons, they go around making atrocities
[22:39:03] *** Quits: buzzard (~quassel@37.120.203.166) (Ping timeout: 252 seconds)
[22:40:53] *** Quits: murii_ (~murii@2a02:a58:835a:1100:c941:f24b:e3fa:2b6) (Ping timeout: 252 seconds)
[22:42:00] *** Quits: hexingb (~hexingb@111.32.64.73) (Read error: Connection reset by peer)
[22:43:45] *** Quits: password2 (~password8@user/password2) (Ping timeout: 256 seconds)
[22:46:32] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:46:41] *** Quits: Guest14 (~Guest14@pool-96-253-74-73.rcmdva.fios.verizon.net) (Quit: Client closed)
[22:48:20] *** Joins: _inky (~inky_@5.77.176.222)
[22:51:43] *** Joins: triad (~triad@user/triad)
[22:52:54] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[22:56:17] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 252 seconds)
[22:57:57] *** Joins: geekcowboy (~geekcowbo@45.132.227.107)
[22:59:22] *** Quits: geekcowboy (~geekcowbo@45.132.227.107) (Client Quit)
[22:59:45] *** Joins: geekcowboy (~geekcowbo@45.132.227.107)
[23:02:01] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[23:02:32] *** Joins: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de)
[23:02:33] *** Quits: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de) (Changing host)
[23:02:33] *** Joins: tane (~tane@user/tane)
[23:04:12] *** Joins: murii_ (~murii@2a02:a58:835a:1100:78f7:1ebe:751e:ffcf)
[23:04:59] *** Quits: jdmark (~jdmark@097-102-095-007.res.spectrum.com) (Changing host)
[23:04:59] *** Joins: jdmark (~jdmark@user/jdmark)
[23:05:57] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Read error: Connection reset by peer)
[23:06:12] *** Quits: geekcowboy (~geekcowbo@45.132.227.107) (Quit: Leaving)
[23:06:33] *** Quits: geeknix (~pi@2001:e68:5432:d6a8:64df:806:e8d6:354c) (Ping timeout: 252 seconds)
[23:07:07] *** Joins: geekcowboy (~geekcowbo@45.132.227.107)
[23:08:01] *** Quits: murii (~murii@2a02:a58:835a:1100:38be:ab5c:1371:c6fb) (Ping timeout: 252 seconds)
[23:09:36] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[23:09:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:09:53] <dan01[m]> About ZFS, so I hear you can just throw a disk at it and it will do, no need to evet edit /etfc/fstab
[23:10:02] <KillerWasp> <pulse18> If onions is C, garlic is C++
[23:10:07] <KillerWasp> i like onions and garlics
[23:10:09] <dan01[m]> Ok... I still don't understand what filesystem does ZFS use under the hood
[23:10:44] <sonny88> zfs
[23:10:54] <sonny88> it is a filesystem
[23:11:04] *** Quits: geekcowboy (~geekcowbo@45.132.227.107) (Client Quit)
[23:11:20] <mspe> Ze File System ^^
[23:11:39] <dan01[m]> Ah, right
[23:11:54] <dan01[m]> I was so caught up in it being a sort of fs manager...
[23:12:18] <dan01[m]> But then in Ubuntu, if you install via ZFS, I still see some ext4 stuff
[23:12:33] <Raziel> zfs is a filesystem *and* a volume manager
[23:12:47] <sonny88> not sure what's up with zfs in ubuntu
[23:12:53] <mspe> it handles and orchestrates several different file systems' concepts, but it is a whole file system in itself
[23:12:59] <sonny88> probably better to use btrfs
[23:13:29] <dan01[m]> sonny88: yes
[23:13:38] *** Joins: j1mu5 (~j1mu5@shep-15-b2-v4wan-162677-cust96.vm44.cable.virginm.net)
[23:13:38] *** Quits: j1mu5 (~j1mu5@shep-15-b2-v4wan-162677-cust96.vm44.cable.virginm.net) (Changing host)
[23:13:38] *** Joins: j1mu5 (~j1mu5@user/j1mu5)
[23:13:48] <dan01[m]> zfs vs btrfs?
[23:13:49] <mspe> I've been keeping PDF of a whole comparison between btrfs and zfs, but didn't take time yet to read it
[23:14:34] *** Quits: grandrew (~grandrew@mobile-166-170-43-176.mycingular.net) (Remote host closed the connection)
[23:15:01] <mspe> I guess btrfs must be production ok, because it's been running my phone since 2014 without any issue
[23:15:06] *** Joins: grandrew (~grandrew@mobile-166-170-43-176.mycingular.net)
[23:15:14] <sonny88> zfs on linux seems pretty odd
[23:15:27] *** Quits: grandrew (~grandrew@mobile-166-170-43-176.mycingular.net) (Remote host closed the connection)
[23:15:39] <Raziel> zfs really strikes me as more of a thing for, yknow, actual storage servers. large things that you'll be expanding and such.
[23:15:42] <sonny88> btrfs is much more supported, and now used by default in 2 distributions
[23:15:50] *** Joins: grandrew (~grandrew@mobile-166-170-43-176.mycingular.net)
[23:15:58] *** Joins: rvalue (~rvalue@user/rvalue)
[23:16:59] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[23:17:07] *** Quits: rickybob (uid410295@id-410295.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:17:31] *** Joins: Leone (~Leo@216.154.50.172)
[23:18:26] <user51> anyone else having problems with the english in advent of code?
[23:18:51] <sonny88> nah, just solving the problem :(
[23:18:58] <user51> first part of day 3 was easy
[23:19:10] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[23:19:51] *** Joins: geeknix (~pi@2001:e68:5432:3223:5ebb:b60a:8745:12b9)
[23:20:46] *** Joins: trafficjam (~trafficja@2a03:1b20:3:f011::a02e)
[23:20:50] <Linkandzelda> when I make a prototype for something, should I invest time into making it with good code? i am in 2 minds about it
[23:21:00] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Read error: Connection reset by peer)
[23:23:03] *** Joins: nvmd (~nvmd@user/nvmd)
[23:23:18] <sonny88> nah
[23:23:22] *** Quits: j1mu5 (~j1mu5@user/j1mu5) (Remote host closed the connection)
[23:23:27] <sonny88> prototype doesn't even have to be real code
[23:24:18] *** Joins: alguien (~alguien@user/alguien)
[23:24:24] *** Quits: grandrew (~grandrew@mobile-166-170-43-176.mycingular.net) (Remote host closed the connection)
[23:24:38] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[23:24:39] <Linkandzelda> sonny88: that's basically what i thought. but the prototype i just made now i need to remake it into good code. thats why im wondering, should i have just made it good to begin with
[23:24:47] *** Joins: grandrew (~grandrew@mobile-166-170-43-176.mycingular.net)
[23:24:54] <Raziel> well that kinda depends on what your plans are with that prototype v:
[23:25:20] <Raziel> if you think you are going to turn it into actual code then probably keep that in mind and make it half-decent at least
[23:25:45] <Raziel> if you're just throwing shit at the wall to see what might stick, maybe not so much
[23:25:59] *** Quits: grandrew (~grandrew@mobile-166-170-43-176.mycingular.net) (Remote host closed the connection)
[23:26:22] *** Joins: grandrew (~grandrew@mobile-166-170-43-176.mycingular.net)
[23:27:15] *** Joins: j1mu5 (~j1mu5@shep-15-b2-v4wan-162677-cust96.vm44.cable.virginm.net)
[23:27:15] *** Quits: j1mu5 (~j1mu5@shep-15-b2-v4wan-162677-cust96.vm44.cable.virginm.net) (Changing host)
[23:27:15] *** Joins: j1mu5 (~j1mu5@user/j1mu5)
[23:27:38] <Linkandzelda> Raziel: I like the idea of half-good hehe
[23:28:10] <Raziel> the half-good should be focused on you being able to read and walk through it without too much pain, so that you can further refactor it into actually good stuff
[23:28:32] *** Joins: xsperry (~xs@user/xsperry)
[23:29:08] *** Joins: hexingb (~hexingb@111.32.64.73)
[23:29:24] <Linkandzelda> yea, the only focus I did was making working code and the result is 99% unmaintainable, which is why im having trouble now picking out the pieces
[23:31:15] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[23:32:33] *** Quits: _inky (~inky_@5.77.176.222) (Ping timeout: 256 seconds)
[23:33:06] <pyzozord> imo half-good means it's working
[23:34:21] <pyzozord> the other half is making it clear, maintainable, make sure all errors are handled, translations are added, code is instrumented, and other devs reviewed it
[23:35:14] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:35:20] <Raziel> ehhh, I dunno, I feel like "working" is the minimum baseline rather than half-good
[23:35:31] <Raziel> or "working in the general case" at least
[23:37:21] *** Quits: murii_ (~murii@2a02:a58:835a:1100:78f7:1ebe:751e:ffcf) (Remote host closed the connection)
[23:39:06] <pyzozord> oh i forgot about unit and e2e tests
[23:40:34] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[23:40:56] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:b9f3:641d:b0ab:48c0)
[23:41:04] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:b9f3:641d:b0ab:48c0) (Remote host closed the connection)
[23:41:36] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:28e8:52c2:40a2:e18c)
[23:42:08] *** Joins: dre (~dre@2001:8003:c932:c301:4931:2ba9:a613:d21a)
[23:42:18] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:b9f3:641d:b0ab:48c0)
[23:47:58] <Linkandzelda> pyzozord: for me MVP is "it runs and satisfies all requirements". no testing, no maintainablity. anything past "it works" is getting into "good code" territory
[23:48:19] <Linkandzelda> but im very bad at writing good code and it takes me 10x longer most of the time
[23:48:42] <Raziel> what parts do you actually feel you're bad at?
[23:48:48] <Raziel> what makes your code bad, currently?
[23:48:52] <sonny88> good code is a not appropriate for this, I think you mean in prod
[23:48:56] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[23:49:02] <sonny88> code that doesn't work sucks
[23:49:18] <[itchyjunk]> maybe you have really good code that doesn't work
[23:49:20] <[itchyjunk]> that can happen
[23:49:25] <Raziel> code that doesn't work can't be graded, because it just doesn't work. it's broken.
[23:49:30] <Raziel> I guess something being broken does suck :p
[23:49:32] <pyzozord> Linkandzelda: imo what you describe is a "prototype", mvp usually wants to be tested and instrumented, it just has only critical features
[23:49:59] <sonny88> [itchyjunk] how so?
[23:50:09] *** Joins: _inky (~inky_@141.136.79.85)
[23:50:10] <sonny88> cosmic rays?
[23:50:30] <Raziel> [itchyjunk], I guess if you only consider style and structure and such when you say really good, that could happen
[23:50:31] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[23:50:45] <[itchyjunk]> sonny88, maybe you want it to do a) but it does b) really well
[23:50:56] <Raziel> then you must've been really fukken drunk
[23:51:00] <[itchyjunk]> and under inspection, what you wanted to closed to b) then a) 
[23:51:01] <sonny88> lmao
[23:51:29] <sonny88> I guess, but I would not call that good code
[23:51:41] <[itchyjunk]> eh, its still good code
[23:51:47] <[itchyjunk]> just doest something other than what you want
[23:51:51] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[23:52:02] <[itchyjunk]> say you want a strawberry cake
[23:52:09] <sonny88> yeah, hence me considering it bad
[23:52:10] <[itchyjunk]> and someone bakes a really good chocolate cake
[23:52:15] <[itchyjunk]> would you call it a bad cake?
[23:52:24] <pyzozord> https://www.youtube.com/watch?v=JL1lMPxR7KQ
[23:52:25] <bayaz> Title: Avoid These Common Mistakes Junior Developers Make • Dave Farley • GOTO 2021 
[23:52:26] <sonny88> no
[23:52:31] <[itchyjunk]> see?
[23:52:34] <Raziel> I'd call it a terrible strawberry cake considering it's not a strawberry cake
[23:52:38] <sonny88> code isn't cake tho
[23:52:40] <[itchyjunk]> it can be not something you want but still good
[23:52:50] <[itchyjunk]> code is cake!
[23:53:01] <[itchyjunk]> both have a lot of sugar
[23:53:04] <pyzozord> working code is only half of the story
[23:53:18] <[itchyjunk]> syntax sugar
[23:53:27] <Linkandzelda> Raziel: i would describe myself as a good programmer, because I can make anything i want and it works. but under the hood im a terrible programmer. my code's only maintainable because i know where everything is and how it works. 0 comments, not following proper class design principles, and most of the time not tested. i test in production as and when
[23:53:28] <[itchyjunk]> compiler/interpreter is the ovan
[23:53:29] <[itchyjunk]> oven
[23:53:39] <sonny88> don't want to fire a missile on a sub because someone went to the toilet
[23:53:59] <Raziel> Linkandzelda, so you find it difficult to... follow some decent coding styles? name your stuff decently?
[23:54:04] <[itchyjunk]> yes but maybe it's a feature
[23:54:12] <sonny88> heh
[23:54:17] <[itchyjunk]> if your crew shit their pants when they see enemy
[23:54:23] <sonny88> lol
[23:54:26] <[itchyjunk]> shitting to fire might be good design
[23:54:41] <AbleBacon> i'm the opposite. i'm awful at writing clever algorithms, but i can do best practices and nice formatting like a boss
[23:54:57] <[itchyjunk]> I can do it all (*).
[23:54:59] <sonny88> I can just talk banter :D
[23:55:09] <Linkandzelda> Raziel: yes, structure mostly. i dream of writing fully maintainable code which is fully testable, follows all the good principles
[23:55:33] <[itchyjunk]> only code that is 100% good is the code that was never written.
[23:55:35] <AbleBacon> i do the little things too--i get rid of the never-used 32-bit build configs on my projects, document everything in comments, gropu things together nicely
[23:55:47] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:56:05] <AbleBacon> i'm... kind of mixed on having everything be testable
[23:56:27] <sonny88> tests just sound nice
[23:56:37] <AbleBacon> it's just so much clutter to have absolutely every function test for any possible garbage input that it could possibly receive
[23:56:41] <sonny88> I'm testing so it must be doing it right!
[23:57:29] <Linkandzelda> i overuse static methods, which just ends up with classes being glorified namespacing. i use array's as my data structure rather than value objects, just because its eaiser to think in arrays than having to write the class objects
[23:57:53] <[itchyjunk]> Sounds like you're a lazy programmer
[23:57:58] <sonny88> heh, maybe time to use another language
[23:58:00] <pyzozord> hmm, maybe I should try emacs after all...
[23:58:05] <[itchyjunk]> maybe you'll like haskell
[23:58:11] <[itchyjunk]> its a lazy language
[23:58:16] <Linkandzelda> i probably am a lazy programmer hehe
[23:58:25] <sonny88> or a language that doesn't restrict methods to classes
[23:58:38] <nomagno> pyzozord: what are you trying out/coding with atm?
[23:58:46] <sonny88> pyzozord give it a whirl, it's pretty ez
[23:59:03] *** Quits: Mangy_Dog (~Mange@user/mangy-dog/x-7397214) ()
[23:59:27] <[itchyjunk]> its not!
[23:59:30] <pyzozord> nomagno: a personal fork o nvi
[23:59:30] <[itchyjunk]> i tried once
[23:59:38] <nomagno> What is nvi?
[23:59:49] <pyzozord> https://en.wikipedia.org/wiki/Nvi
[23:59:50] <bayaz> Title: nvi - Wikipedia 
