[00:01:16] *** Joins: trinipino (~eramirez@49.149.131.61)
[00:02:23] *** Joins: proller (~p@2a02:6b8:b081:8803::1:6)
[00:05:44] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:10:15] *** Quits: trinipino (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[00:11:45] *** Joins: trinipino (~eramirez@49.149.131.61)
[00:12:57] *** Quits: trinipino (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[00:14:46] *** Joins: trinipino (~eramirez@49.149.131.61)
[00:15:22] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:16:20] *** Quits: trinipino (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[00:17:22] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[00:17:46] *** Joins: trinipino (~eramirez@49.149.131.61)
[00:19:02] *** Quits: trinipino (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[00:20:45] *** Joins: trinipino (~eramirez@49.149.131.61)
[00:22:17] *** Quits: trinipino (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[00:25:09] *** Joins: Manderson_ (~manderson@45.40.80.170)
[00:27:46] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 244 seconds)
[00:29:00] *** Joins: pucara (~i@181.111.22.32)
[00:32:49] *** Quits: magla (~gelignite@55d45175.access.ecotel.net) (Read error: Connection reset by peer)
[00:33:10] *** Joins: magla (~gelignite@55d45175.access.ecotel.net)
[00:33:23] *** Quits: zgu (~zgu@2603-7080-b704-0800-e4e2-df43-fd5d-e657.res6.spectrum.com) (Remote host closed the connection)
[00:33:42] *** Joins: zgu (~zgu@2603-7080-b704-0800-e4e2-df43-fd5d-e657.res6.spectrum.com)
[00:34:09] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[00:36:26] <ether> I have a buffering problem on my $work machine in my terminal and I'm not sure where to to debug it. it's been more than an aeon since I dug through termcap files... :/
[00:37:01] <ether> text is very slow to show up when I type, both in the shell and in editors.  in the shell, I have to bang on a second key before the first keystroke will show up, often..
[00:37:18] <ether> I guess it's time for a reboot anyway
[00:40:18] *** Quits: magla (~gelignite@55d45175.access.ecotel.net) (Quit: Stay safe!)
[00:54:26] *** Quits: gryphn (~gryphon@154.21.20.135) (Quit: kthxbye)
[00:56:41] <dimbag> i feel I become expert in dbix::class :p
[01:24:45] <gordonfish> I could of sworn that was worked:
[01:24:46] <gordonfish> sweval: use experimental qw(try); my $x = try { die 'Foo'; } catch ($e) { 'Bar' }; [ $x ];
[01:24:47] <perlbot> gordonfish: ERROR: syntax error at (IRC) line 1, near "= try" Global symbol "$e" requires explicit package name (did you forget to declare "my $e"?) at (IRC) line 1. Global symbol "$x" requires explicit package name (did you forget to declare "my $x"?) at (IRC) line 1. 
[01:25:02] <LeoNerd> No. you'll need to put it in a `do { ... }` block
[01:25:10] <gordonfish> Ah it needs to be wrap... yeah that
[01:25:11] <gordonfish> sweval: use experimental qw(try); my $x = do { try { die 'Foo'; } catch ($e) { 'Bar' } }; [ $x ];
[01:25:12] <LeoNerd> Treat it like if/else or anything else of that nature. It's control flow. Not an expression
[01:25:13] <perlbot> gordonfish: ["Bar"]
[01:25:27] <gordonfish> LeoNerd: Thanks
[01:27:38] *** Joins: Aniar (~Aniar@23-116-8-40.lightspeed.cicril.sbcglobal.net)
[01:35:01] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[01:45:51] *** Quits: ZZzz (~ZZzz@213.57.70.192) (Quit: ZZzz)
[01:46:18] * GumbyPAN CPAN Upload: Devel-Git-MultiBisect-0.18 by JKEENAN https://metacpan.org/release/JKEENAN/Devel-Git-MultiBisect-0.18
[02:00:15] <aquanight> LeoNerd: what ended up happening to try-expressions?
[02:00:54] <aquanight> I mean, I can't help but feel like if (eval { ... }) was a thing?
[02:01:36] <LeoNerd> The basic problem is that Perl isn't Scheme
[02:01:55] <LeoNerd> Perl cares about statement vs. expression. We already have if/else vs ?:, foreach vs. map,...
[02:02:14] <LeoNerd> Whereas we don't have an expression form of while loops, or anything else.. But that's OK - that's what do {} is for
[02:02:50] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 244 seconds)
[02:02:50] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 244 seconds)
[02:02:53] <aquanight> while expressions don't seem like they'd make much sense... they'd always be some kind of false value
[02:03:42] <aquanight> my $x = do { while (...) { ... }; }; if ($x) { print "foo"; } # how would you ever get foo to print
[02:04:00] <LeoNerd> Surely not... surely the "result" of a while loop would be the list of body expressions it created?
[02:04:12] <LeoNerd> A shortcut for  gather { while(COND) { take BODY; } }
[02:04:20] <LeoNerd> But then.. eh.. we have gather/take anyway
[02:05:06] <aquanight> perlbot: sweval my (@z) = 1..5; my @x; push @x, do { while ($_ = shift @z) { $_; } }; \@x
[02:05:08] <perlbot> aquanight: Useless use of a variable in void context at (IRC) line 1. [undef]
[02:05:45] <aquanight> much like if/else the "value" of the statement is that of the last thing it evaluates
[02:06:00] <aquanight> in the case of while that isn't exiting due to 'last', that means the conditional
[02:06:12] <aquanight> perlbot: sweval my (@z) = 1..5; my @x; push @x, do { while ($_ = shift @z) { last if $_ == 3; } }; \@x
[02:06:14] <perlbot> aquanight: []
[02:06:27] <LeoNerd> Anywa.y. in summary: it's a mess. This is what  do {}  is for. So that's why I didn't make "try expressions"
[02:06:28] <aquanight> and I guess nothing at all if it's exiting due to 'last'
[02:07:17] <Grinnz> which is why it doesn't purport to provide a return value
[02:07:26] <Grinnz> it just accidentally has one which isn't useful
[02:07:43] <aquanight> I don't even know what an expression form of try/catch would do. There's subtle differences in the "expression" version of certain loops. if vs. ?: not so much but map and do { foreach } produce different "results"
[02:08:15] <aquanight> try EXPR catch EXPR might seem obvious
[02:08:39] <aquanight> but I think most of the time I ever see if (eval {}) get used the only thing you care about is whether or not the thing throws
[02:09:09] <aquanight> and that's if you're not using it as a pre-modern try
[02:09:09] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[02:09:40] <ether> I do  my $foo = try { ... } catch { ... }; all the time with Try::Tiny
[02:10:09] <ether> but I understand why SKT doesn't allow it, and have adjusted as I convert my code.
[02:10:22] <LeoNerd> Yah, that's because Try::Tiny's try() is an expression, not a statement
[02:10:25] <LeoNerd> Things in Perl can't be both
[02:10:27] *** Joins: tejr (~tejr@user/tejr)
[02:10:38] <ether> it being implemented in PP makes it easier to be an expression
[02:10:49] <LeoNerd> They have to be an expression (so you'd need the `;`), or a statement (so they can't be an rvalue)
[02:10:58] <ether> as it's just a function call that returns a value. which is also why the trailing ; is needed :)
[02:11:10] <ether> *nod*
[02:11:40] <aquanight> I'm not opposed to not having expression-try. I was just curious if there was a deeper reason to not having it (or an equivalent) than "do can do it just fine" and "a thing can't be both a statement and an expresion"
[02:12:04] <ilmari> aquanight: the latter is the reason, the former is a workaround
[02:12:20] <ilmari> just like you can't have my $foo = if { ... } else { ... };
[02:13:05] <aquanight> wait a minute where is gather/take from
[02:13:45] <aquanight> ah List::Gather
[02:13:46] <LeoNerd> Raku, or some syntax module
[02:14:26] <aquanight> wow there's like... 5 of them
[02:15:16] <LeoNerd> Yeah I don't know which ones are any good... I haven't written any of them
[02:16:10] <Grinnz> i believe Syntax::Keyword::Gather is preferred
[02:16:58] <leont> TBH, all of them lack the essential semantic point of Raku's gather/take. They're just a bit of pretty syntax
[02:17:18] *** Quits: EvanCarroll (~ecarroll@46.196.88.53) (Ping timeout: 244 seconds)
[02:18:24] <leont> Raku's gather returns an iterator. take is more like yield in Python.
[02:18:39] <LeoNerd> Mmm.. well until we have lazy arrays in Perl, we can't really do that
[02:18:48] <LeoNerd> And no, I have enough already to do this week :P
[02:18:52] <leont> Except the scope is (dynamically) set by gather, instead of a sub
[02:19:23] *** Joins: EvanCarroll (~ecarroll@46.196.88.53)
[02:24:09] *** Quits: icecoldcola37 (~tc@193.92.141.161.dsl.dyn.forthnet.gr) (Quit: leaving)
[02:26:05] *** Quits: EvanCarroll (~ecarroll@46.196.88.53) (Ping timeout: 244 seconds)
[02:26:22] * GumbyPAN welcomes GEORGEB - George Barron to CPAN!
[02:27:12] *** Quits: Peppard (~quassel@2001:470:1f0b:751:9a5:91e3:a6ce:55b) (Quit: No Ping reply in 180 seconds.)
[02:28:22] *** Joins: Peppard (~quassel@2001:470:1f0b:751:d067:62f1:8833:f73f)
[02:36:37] *** Joins: eramirez (~eramirez@49.149.131.61)
[02:36:41] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[02:38:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[02:40:16] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[02:41:23] * GumbyPAN CPAN Upload: Pod-Reader-1.000 by MONSIEURP https://metacpan.org/release/MONSIEURP/Pod-Reader-1.000
[02:44:05] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[02:45:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[02:47:58] *** Quits: Peppard (~quassel@2001:470:1f0b:751:d067:62f1:8833:f73f) (Ping timeout: 252 seconds)
[02:48:48] *** Joins: Peppard (~quassel@2001:470:1f0b:751:d067:62f1:8833:f73f)
[02:50:19] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[02:51:44] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 250 seconds)
[02:51:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[02:53:14] *** Joins: Manderson (~manderson@45.40.80.170)
[02:55:04] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[02:56:25] * GumbyPAN CPAN Upload: Pod-Reader-1.010 by MONSIEURP https://metacpan.org/release/MONSIEURP/Pod-Reader-1.010
[02:56:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[02:57:20] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:57:36] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[02:57:44] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[02:59:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[03:01:35] *** Joins: vyv (~vyv@bras-vprn-nrbaon0452w-lp130-16-76-68-64-7.dsl.bell.ca)
[03:05:14] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Quit: What is Hope? That all of your wishes and all of your dreams come true? To turn back time because things were not supposed to happen like that (C) Rau Le Creuset)
[03:07:25] *** Quits: Pali (~pali@user/pali) (Ping timeout: 244 seconds)
[03:07:38] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[03:07:38] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[03:11:51] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[03:13:15] *** Joins: eramirez (~eramirez@49.149.131.61)
[03:13:15] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[03:14:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[03:15:40] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:17:07] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[03:17:21] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[03:18:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[03:19:19] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[03:20:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[03:21:11] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[03:21:37] *** Quits: adherzog (uid387168@id-387168.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[03:22:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[03:25:42] <aquanight> 15:48:39/A8A6B < LeoNerd> Mmm.. well until we have lazy arrays in Perl, we can't really do that ## um, don't we already? Sort-of?
[03:25:55] <LeoNerd> I don't believe so
[03:26:05] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[03:26:08] <aquanight> Tie::Array ?
[03:26:18] <aquanight> I mean we have the mechanism to do it
[03:26:36] <LeoNerd> Hrm... you could make the individual elements lazy, but the array -itself- has to be eagerly-sized
[03:27:27] <aquanight> does it though? I think mst once posited the idea of having FETCHSIZE advance the array every time it's called until the end
[03:27:36] <aquanight> sure ->[-1] probably won't work right
[03:27:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[03:27:48] <aquanight> but I don't think people want lazy arrays for random access
[03:28:23] <LeoNerd> Quite
[03:28:43] <LeoNerd> A lazy array would have to have a smaller exposed API of operations you could do. No random access, no query for size
[03:29:39] <Grinnz> yeah, the main thing is there's no perl level structure that operates like that, all of the wrappers that do it are slow
[03:30:24] <Grinnz> which is a bit of a problem when the reasn to use them is performance
[03:31:23] *** Joins: whynot (~whynot@88.155.78.144)
[03:31:40] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[03:33:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[03:35:33] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[03:37:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[03:37:21] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[03:38:45] *** Joins: eramirez (~eramirez@49.149.131.61)
[03:39:40] *** Quits: proller (~p@2a02:6b8:b081:8803::1:6) (Ping timeout: 240 seconds)
[03:41:50] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:42:10] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[03:43:11] <aquanight> really I think the bigger problem is trying to make lazy arrays for an iterator, when we could instead be using <>
[03:43:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[03:44:42] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[03:45:15] <Grinnz> i can't tell if that was tm604 style sarcasm or just a really bad idea
[03:45:51] *** Joins: tejr (~tejr@user/tejr)
[03:46:25] *** Joins: whynot_ (~whynot@88.155.24.60)
[03:46:37] *** Quits: whynot (~whynot@88.155.78.144) (Killed (NickServ (GHOST command used by whynot_!~whynot@88.155.24.60)))
[03:46:48] *** whynot_ is now known as whynot
[03:48:11] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 250 seconds)
[03:48:53] <aquanight> Grinnz: uh
[03:49:13] <aquanight> wtf do you use for iterable objects, if it's not <> and not lazy arrays?
[03:49:47] <Grinnz> usually an iterator object with method calls? definitely not overloading an operator which already means two unrelated things
[03:50:24] <aquanight> the problem is that if you want a general-purpose "iterable" interface, we basically have to get literally everyone to agree on how that interface is shaped
[03:50:41] <Grinnz> thats the problem with any feature, yes
[03:50:42] <aquanight> we don't have the luxury of having always had a standard class library or anything like that
[03:51:03] <aquanight> but we do have some precedent in the form of overload.pm with <>
[03:51:17] <Grinnz> getting multipel perspectives is nice to avoid doing stupid things like overloading readline not to read lines
[03:51:59] <aquanight> if it were up to me, we'd deprecate <> being either readline or glob depending on what you put in it
[03:52:02] <aquanight> and existing only for iterating objects
[03:52:09] <Grinnz> heh
[03:52:13] <aquanight> and if you want to be nice, IO::Handle could define iterator into readline
[03:52:16] <aquanight> but glob should just go away
[03:52:16] <pts33> lazy arrays?
[03:52:18] <Grinnz> i mean, that's just called "adding a new operator"
[03:52:23] <Grinnz> and you can do it without touching <>
[03:52:36] <aquanight> unless we want everyone to agree on something like
[03:52:40] <aquanight> role Iterable { requires next; }
[03:52:56] <Grinnz> that way leads to everything is an object
[03:53:02] <Grinnz> and perl isn't fast enough at objects for that
[03:53:05] *** Joins: krismatrix (~krismatri@38.80.149.51)
[03:53:09] <aquanight> well what else are you going to do?
[03:53:16] <Grinnz> better to have things do what they mean directly without method calls
[03:53:16] *** Joins: proller (~p@2002:50f0:d845:10:4a51:b7ff:fe43:6e30)
[03:53:38] <aquanight> the alternative is to slurp whatever data set
[03:53:40] <Grinnz> if we're talking about a core feature
[03:53:54] <Grinnz> right, i'm saying, the faster way to do this is not base it around method calls
[03:54:10] <Grinnz> there's other options, i don't know what specifically they would be 
[03:54:12] <aquanight> if we had "iterable" as a core feature, how exactly do you think it'll populate?
[03:54:32] <Grinnz> there's like 6 questions before you even get to that question
[03:54:40] <aquanight> the only reason method calls are bad is because they're inherently a run-time, late-bound dynamic dispatch
[03:54:47] <aquanight> solve that problem and objects aren't a problem anymore
[03:54:49] <Grinnz> not the only reason but yes
[03:54:53] <aquanight> it's not an easy problem to solve
[03:55:01] <Grinnz> the other reason is it's a sub call
[03:55:07] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[03:55:09] <aquanight> unavoidable
[03:55:13] <Grinnz> it isn't
[03:55:22] <aquanight> if you want perl code to be able to define the iteration at all
[03:55:28] <Grinnz> yes
[03:55:33] <Grinnz> have you seen Object::Pad?
[03:55:42] <aquanight> unless you're doing something like gather / take which could be an embedded block
[03:55:49] <Grinnz> several instances of perl code which (even if they're sub calls right now) don't need to be sub calls
[03:56:09] <Grinnz> yes exactly
[03:56:56] <aquanight> ok I guess that can be done a bit more primitively
[03:57:22] <Grinnz> yeah once you're talking about a core feature there's a lot more options to design it for performance
[03:57:33] <aquanight> but the moment you need to separate data production from consumption at all you're back to Iterable objects
[03:57:34] <Grinnz> but that means more designing
[03:57:53] <aquanight> but that's not a new problem
[03:58:21] <aquanight> also
[03:58:33] <aquanight> because I friggin felt like it here's my hackjob of a lazy array type of thing
[03:58:39] <perlbot> aquanight pasted a new file at https://l.perl.bot/p/bkudzs - 
[03:58:57] <aquanight> not sure if it'll work like that with O:P
[03:59:00] <aquanight> but whatevs
[04:00:26] *** Joins: pj (~pj@ghettoforge/pj)
[04:01:37] *** Quits: KnoP (~KnoP@p57b21b3f.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[04:05:40] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[04:07:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[04:11:21] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[04:12:36] *** Quits: e1f (~user@141.117.1.148) (Quit: goodnight...will be back in helltember)
[04:12:47] *** Joins: eramirez (~eramirez@49.149.131.61)
[04:13:10] *** Quits: Dorward (~dorward@13.5.169.217.in-addr.arpa) (Ping timeout: 252 seconds)
[04:14:19] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[04:15:11] *** Joins: Dorward (~dorward@13.5.169.217.in-addr.arpa)
[04:15:30] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[04:17:45] *** Joins: KnoP (~KnoP@p57b21ac7.dip0.t-ipconnect.de)
[04:21:28] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[04:23:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[04:25:05] <haarg> fun note: both glob() and readline() will trigger a <> overload
[04:25:57] <Grinnz> nice
[04:26:34] * GumbyPAN CPAN Upload: Perl-Critic-TooMuchCode-0.16 by GUGOD https://metacpan.org/release/GUGOD/Perl-Critic-TooMuchCode-0.16
[04:27:59] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[04:29:07] *** Quits: waltman (waltman@2601:4a:701:4451:d13d:6ac1:90ec:5c4f) (Ping timeout: 240 seconds)
[04:29:44] *** Quits: n0xff (~0xff@gateway/tor-sasl/n0xff) (Remote host closed the connection)
[04:30:02] *** Joins: waltman (waltman@2601:4a:701:4451:ec67:e820:91c0:3679)
[04:30:18] *** Joins: n0xff (~0xff@gateway/tor-sasl/n0xff)
[04:30:53] <jaggz> what's it mean to trigger a <> overload?
[04:31:27] *** Joins: bfr (~yaaic@ip-109-43-115-141.web.vodafone.de)
[04:31:46] <pts33> too many ufos
[04:32:21] <jaggz> byte compiler may not set an overload of <>, but those modules (calls?) cause it to be done at bytecode compile time?
[04:32:40] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Client Quit)
[04:32:46] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[04:33:20] *** Quits: bfr (~yaaic@ip-109-43-115-141.web.vodafone.de) (Remote host closed the connection)
[04:33:24] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[04:34:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[04:36:13] <haarg> i can't parse that sentence
[04:36:37] <ilmari> perlbot: tell jaggz about perldoc overload
[04:36:37] <perlbot> jaggz: https://perldoc.perl.org/overload
[04:38:22] <ilmari> it means that the method/coderef specified with for the <> overload will be called by the glob() and readline() functions as well as the actual <> operator
[04:41:36] * GumbyPAN CPAN Upload: Task-PerlCriticAllPolicies-0.03 by GUGOD https://metacpan.org/release/GUGOD/Task-PerlCriticAllPolicies-0.03
[04:46:56] <jaggz> perlbot: port numpy to perl plz
[04:46:56] <perlbot> jaggz: No factoid found. Did you mean one of these: [port 0] [port 1] [port 2] [port 3] [port 5] [port 7] [port 9] [port 11] [port 13] [port 15]
[04:47:28] <jaggz> oh we have pdl
[04:48:06] <ilmari> perlbot: numpy?
[04:48:06] <perlbot> ilmari: No factoid found. Did you mean one of these: [nlp] [dump] [nano] [nena] [wump] [names] [nouns] [bimbw] [bnf] [chimp]
[04:49:45] <jaggz> perlbot: numpy is numpy is an advanced numerical processing library for scientific computing in Python. For an option in Perl you might like to look into PDL ("Perl Data Language").
[04:49:45] <perlbot> jaggz: Stored numpy is numpy is an advanced numerical processing library for scientific computing in Python. For an option in Perl you might like to look into PDL ("Perl Data Language").
[04:50:01] <ilmari> perlbot: numpy?
[04:50:01] <perlbot> ilmari: numpy is an advanced numerical processing library for scientific computing in Python. For an option in Perl you might like to look into PDL ("Perl Data Language").
[04:50:07] <jaggz> how can I add to that?  I'd add "http://pdl.perl.org/"
[04:50:08] <Paperbot_> Link title(s): [ Perl Data Language ]
[04:50:30] <ilmari> oh, it got rid of the repetition at the start
[04:50:35] <ilmari> perlbot: pdl?
[04:50:35] <perlbot> ilmari: The Perl Data Language http://pdl.perl.org/
[04:51:29] <jaggz> I'm afraid if I do another "numpy is" command, perlbot might add it as "Also..."
[04:51:41] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[04:52:11] <ilmari> perlbot: numpy =~ s/\)./, http://pdl.perl.org/)./
[04:52:12] <Paperbot_> Link title(s): [ Perl Data Language ]
[04:52:12] <perlbot> ilmari: Stored numpy as numpy is an advanced numerical processing library for scientific computing in Python. For an option in Perl you might like to look into PDL ("Perl Data Language", http:
[04:52:28] <xq> I'm pretty sure you can just overwrite it without any problems
[04:52:37] <ilmari> perlbot: numpy =~ s/$/\/\/pdl.perl.org\/).
[04:52:37] <perlbot> ilmari: Stored numpy as numpy is an advanced numerical processing library for scientific computing in Python. For an option in Perl you might like to look into PDL ("Perl Data Language", http:\/\/pdl.perl.org\/).
[04:52:38] <jaggz> (or it looks like it has a forget command)
[04:52:43] <xq> for adding "also... " there is special syntax
[04:52:55] <jaggz> ilmari, heh.. "see below \/"
[04:53:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[04:53:18] <ilmari> perlbot: no, numpy is an advanced numerical processing library for scientific computing in Python. For an option in Perl you might like to look into PDL ("Perl Data Language"), http://pdl.perl.org/
[04:53:18] <perlbot> ilmari: Stored numpy is an advanced numerical processing library for scientific computing in Python. For an option in Perl you might like to look into PDL ("Perl Data Language"), http://pdl.perl.org/
[04:53:18] <Paperbot_> Link title(s): [ Perl Data Language ]
[04:53:23] <ilmari> perlbot: numpy?
[04:53:23] <perlbot> ilmari: an advanced numerical processing library for scientific computing in Python. For an option in Perl you might like to look into PDL ("Perl Data Language"), http://pdl.perl.org/
[04:53:39] <jaggz> yay. better world.
[04:53:45] <jaggz> perlbot: war
[04:53:46] <perlbot> jaggz: No factoid found. Did you mean one of these: [wa] [wat] [wax] [way] [-w] [\w] [.ar] [wb] [wd] [.wf]
[04:53:51] <xq> does anyone use pdl for anything serious?
[04:53:53] <jaggz> war doesn't exist in the perl universe
[04:54:04] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[04:54:44] <jaggz> xq, not me.. but when I started doing actual machine learning stuff it was in python (for the neural net project provisions)
[04:55:14] <xq> if someone uses some perl module for serious things, they usually end up coming to this channel asking about some aspect of that module/application usage
[04:55:17] <jaggz> one of the main things I hate about python is that it doesn't have regex built into its syntax.. irritating.
[04:55:22] <jaggz> :)
[04:55:28] <xq> and I can't seem to remember anyone asking anything concrete about PDL
[04:55:41] <xq> so makes me wonder just how popular exactly it is
[04:55:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[04:55:50] <jaggz> hm
[04:56:02] <jaggz> might get some idea by looking for cpan modules with it as a dependency
[04:56:07] <jaggz> indirect way
[04:56:17] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[04:57:13] <leitz> when running sh Configure, is there an option to say "when you install into /usr/local/bin, don't include the version number in the command name?
[04:59:47] <xq> what are you installing?
[04:59:53] <leitz> Perl
[05:00:07] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Ping timeout: 240 seconds)
[05:01:17] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[05:01:20] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[05:01:34] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Ping timeout: 252 seconds)
[05:01:36] <xq> I don't know the answer to your question because it has been years since I built perl from source. However I can tell you that if you need to build and install a custom perl, just use perlbrew
[05:02:11] <xq> unless you have some Very Specific reason to be doing this by hand
[05:02:34] <leitz> Not really interested in brew. I'd rather build a VM or a container for an application than try to manage multiple installs of anything on one machine.
[05:02:42] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[05:03:22] <xq> that response does not strike me as if you fully understand what you are talking about
[05:03:26] <xq> but alright
[05:03:38] <xq> sorry once again that I don't have the answer to your question
[05:03:56] <xq> also, it's perlbrew, not brew
[05:04:13] <leitz> No worries. I've seen the option, but can't remember it this late in the day.
[05:04:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[05:04:20] <jaggz> symlink!
[05:04:26] <leitz> There are lots of brews, IIRC. 
[05:04:36] <leitz> jaggz, if I can automate it, sure.  :)
[05:04:44] <jaggz> :)
[05:04:46] <xq> no
[05:05:18] <xq> 'brew' if a very specific installer of things for Mac operating systems
[05:05:38] <xq> and it has nothing to do with perl or perlbrew
[05:06:24] <xq> at least if we refer to things by names of the primary executable that they provide
[05:07:12] <xq> also, I am pretty sure perlbot should have a factoid with other options
[05:07:18] <xq> perlbot: plenv
[05:07:18] <perlbot> xq: A perl installation manager like perlbrew, lets you switch between multiple local perls, but runs via shell scripts instead of perl. https://github.com/tokuhirom/plenv and see https://github.com/miyagawa/plenv-contrib for "perlbrew exec" and "perlbrew lib" analogues.
[05:07:28] <xq> perlbot: Perl::Build
[05:07:28] <perlbot> xq: perl-build, the part of perlbrew that builds and installs a perl, without the installation switching wheels. Useful for installing a perl for a specific application or systemwide use, or to avoid messing with the system perl. http://p3rl.org/perl-build
[05:07:38] <xq> the other options being ^
[05:07:48] <xq> there might be other, newer or more fancier ones
[05:08:06] <xq> Though I still use perlbrew and have no complaints.
[05:09:09] <xq> point being, installing a custom perl is a well solved problem, and manual installation would be needed only in some Very Special circumstances
[05:09:23] <xq> circumstances that you do not seem to be in
[05:09:46] <mov_eax> @leitz: there are official images for Perl. Moreover, most Perl projects also provision their own images. as @xq has mentioned, what is it exactly that you're trying to do?
[05:10:24] <xq> perlbot: plx
[05:10:25] <perlbot> xq: No factoid found. Did you mean one of these: [pls] [plz] [.pl] [pl] [plp] [p6l] [pdc] [png] [ppl] [xls]
[05:10:47] *** Quits: vyv (~vyv@bras-vprn-nrbaon0452w-lp130-16-76-68-64-7.dsl.bell.ca) (Quit: Konversation terminated!)
[05:10:51] <xq> what was the fancy thing's name again ....
[05:10:54] *** Joins: Manderson_ (~manderson@45.40.80.170)
[05:10:58] <xq> I am 99% sure it's plx
[05:11:36] <xq> leitz: here https://metacpan.org/pod/App::plx
[05:11:36] <Paperbot_> Link title(s): [ App::plx - Perl Layout Executor - metacpan.org ]
[05:11:42] <xq> this is the new fancy one
[05:11:53] <xq> as you can see, plenty of options
[05:13:08] *** Joins: __Manderson (~manderson@45.40.80.170)
[05:13:10] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[05:15:22] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[05:16:25] *** Quits: tabris (~northman@c-107-4-92-118.hsd1.mi.comcast.net) (Ping timeout: 248 seconds)
[05:17:44] <leitz> My goal is to build a pure and simple perl on a clean system, and then install just the CPAN modules the target app requires. The build will be automated via Ansible.
[05:18:17] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[05:18:21] <jaggz> OMG!
[05:18:28] <jaggz> pactl set-sink-input-volume 3536 3120111
[05:18:57] <jaggz> my perl line: $vol = ($vol_percentage * 65535) / 100; 
[05:18:58] <jaggz> was wrong
[05:19:12] <xq> leitz: yep, we have had this exact problem for many years now, the tools above are all solving it in one form or another
[05:19:29] <jaggz> (wait.. was it?)  anyway.. so instead of a max of 65535 my script just set the volume to 3 million
[05:19:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[05:19:55] <jaggz> and pulseaudio accepted it.. volume in pavucontrol showed it as 4700% volume!
[05:20:08] * jaggz rubs his ears and his poor speaker diaphragms
[05:21:14] <jaggz> $vol *= int(($vol * 65535) / 100);
[05:21:20] <jaggz> there's my problem.. holy mackerel
[05:21:23] <jaggz> *=
[05:23:49] <leitz> xq, those tools have their own issues that I don't want to deal with.
[05:24:01] <leitz> That's why I choose this path. 
[05:24:58] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[05:25:46] <xq> have you brought up said issues with tool authors, maintainers, or at least in this channel?
[05:26:45] *** Joins: eramirez (~eramirez@49.149.131.61)
[05:30:10] <leitz> xq, multiple times. I get the same "you should do <cool tool here> instead of whatever you're doing." 
[05:31:06] *** Joins: Manderson (~manderson@45.40.80.170)
[05:31:10] <leitz> Sorry for being gruff about it, but very few people bother to ask if I am a junior computer person. They seem to assume I'm unskilled in everything because I'm trying to learn Perl.
[05:32:03] <xq> do you have a link to the bug report or some other venue where you have had that conversation?
[05:32:17] <xq> or alternatively, what was the exact question that you have asked, and what was the exact response that mentioned a cool tool?
[05:32:31] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[05:32:58] *** Quits: __Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[05:33:58] *** Joins: akaWolf (~akaWolf@akawolf.org)
[05:34:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[05:34:47] *** Quits: Su-Shee (~Susanne@p4ffc787a.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[05:34:58] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[05:36:30] *** Joins: Su-Shee (~Susanne@p4ffc7344.dip0.t-ipconnect.de)
[05:36:52] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:37:30] <leitz> xq, multiple conversations here. To be fair, not just on the Perl channel; Ruby and Python have much the same "use this automation even if you don't understand it" push. 
[05:37:34] <leitz> https://perlmonks.org/?node_id=11134957
[05:37:36] <Paperbot_> Link title(s): [ Prefer Pure Perl Core Modules ]
[05:38:19] <leitz> If perlbrew, carton, or whatever, works for someone, then great. It doesn't work for me.
[05:38:58] <xq> you do realize that what you have linked is not related to either of four tools that are being discussed?
[05:39:15] <xq> anyway, this does not seem to be going anywhere
[05:39:52] <leitz> I agree, we seem to be covering the same ground. Enjoy your evening!
[05:40:04] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:40:23] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[05:40:36] <xq> you are rejecting what is extremely well understood, well established and most importantly battle-tested methodology of fully automatic deployment of perl applications (perlbrew/plenv/Perl::Build)
[05:40:52] <xq> with extremely-vague-to-zero justifications
[05:41:35] <xq> And they left. What a waste of time.
[05:41:47] *** Joins: eramirez (~eramirez@49.149.131.61)
[05:42:00] <jaggz> https://paste.debian.net/hidden/89625515/
[05:42:02] <Paperbot_> Link title(s): [ Debian Pastezone ]
[05:42:34] <jaggz> there.. you can change "aardvark" there (lines 12 and 14) to have this control the volume of an app of your choice.
[05:42:56] <jaggz> aardvark-vol mute;  or unmute.  or aardvark-vol 50  # Sets to 50%
[05:43:20] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[05:43:25] *** Quits: proller (~p@2002:50f0:d845:10:4a51:b7ff:fe43:6e30) (Ping timeout: 252 seconds)
[05:43:36] <jaggz> also handles store and restore (also accepted as 'save' and 'load')
[05:43:59] *** Joins: Manderson_ (~manderson@45.40.80.170)
[05:44:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[05:45:11] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[05:45:20] <krismatrix> xq: I was reading leitz's forum post. I am curious what you think about his point 4 on security. I had the same concerns 1-5 that leitz did but after chatting with you guys I came to accept the use of carton as it provided a lot of convenience.
[05:45:23] <jaggz> useful for scripts or hotkeys, named after the app of your choice:  foo-vol store; foo-vol unmute; foo-vol 50%; ...do-something...; foo-vol restore
[05:45:58] <krismatrix> As for the uninstall..because carton install all the modules in a local/ directory, you can just delete the directory...and simply comment out the cpan module you don't want in the cpanfile.
[05:46:17] <xq> krismatrix: 3 answers:
[05:46:29] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 250 seconds)
[05:46:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[05:46:58] <xq> 1) it's all open source, if you are that concerned, you can schedule time and review all of the code of all of your dependencies
[05:47:58] <xq> 2) there are OS packages of some of CPAN modules, that have the stamp of approval of your linux distribution on them. If you trust your OS more than you trust CPAN, you can build your application around those
[05:48:19] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 252 seconds)
[05:49:12] <xq> 3) I am not aware of any major security incidents on CPAN caused by malicious actors
[05:49:59] <xq> but again, if your code must be so secure that you stand to lose money (or worse) due to a bad dependency, then by all means 1) is your only answer
[05:50:47] <xq> this is not perl specific too
[05:51:11] <krismatrix> hmm...fair.
[05:51:45] <krismatrix> I don't understand you point 2. What do you mean by OS packages of some of CPAN modules?
[05:52:15] <xq> example: you are on Centos 7 and you want to use Path::Tiny
[05:52:33] <xq> option a) you install it from CPAN using cpanm (or Carton or whatever)
[05:52:55] <xq> option b) you install it from your OS https://centos.pkgs.org/7/epel-x86_64/perl-Path-Tiny-0.076-1.el7.noarch.rpm.html
[05:52:55] <Paperbot_> Link title(s): [ perl-Path-Tiny-0.076-1.el7.noarch.rpm CentOS 7 Download ]
[05:53:21] *** Joins: Manderson (~manderson@45.40.80.170)
[05:53:37] <xq> large amount of perl modules have been packaged for debian into apt and for centos/rhel into rpm/yum/dnf repos
[05:53:57] <krismatrix> Oh...you are saying that some moduels that are available on CPAN are also available from an OS repository?
[05:54:02] <xq> yes
[05:54:17] <xq> but they live in vendorperl ecosystem
[05:54:22] <krismatrix> And your point being...if you don't trust CPAN but trust the OS repository, you can get many cpan modules from the OS repo.
[05:54:26] <xq> yes
[05:54:34] <krismatrix> but not all right ?
[05:54:40] <xq> yes, not all
[05:54:54] <krismatrix> thank you for clarifying. I learned something interesting.
[05:55:51] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 244 seconds)
[05:57:10] <xq> vendorperl ecosystem is very special
[05:57:58] <krismatrix> can I get a recommendation for a learning resource for perl modules for beginners?
[05:58:29] <xq> the only consistent way to use it is to have all of your dependencies (and all of theirs, recursively) packaged into the OS repo *AND* having your own application packaged as an OS package that depends on perl + all of those packages
[05:58:45] <krismatrix> right
[05:59:09] <xq> krismatrix: what do you mean by learning resource for perl modules? you mean authoring perl modules?
[06:00:27] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[06:00:33] <krismatrix> umm..yeah...python's modules are simply...you just create funny.py and import. But perl has require, use, and bunch of other little complexities. I need a way to create and use simple modules, as well as learn how to create modules that I can uload to cpan.
[06:01:41] <xq> start with perldoc perlmod
[06:02:06] <xq> if you have questions after going through that + the pages it links to, come back and ask
[06:02:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[06:02:20] <xq> perlbot: perldoc perlmod
[06:02:20] <perlbot> xq: Your documentation is available at: https://perldoc.perl.org/perlmod
[06:02:42] <krismatrix> sounds good...will do.
[06:03:46] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[06:04:31] <xq> krismatrix: simple modules are not much harder than creating funny.py - you create funny.pm which contains 2 lines: 1) use Exporter 'import'; 2) our @EXPORT_OK = qw[foo bar];
[06:04:53] <xq> then of course you write functions foo and bar in funny.pm
[06:05:12] <krismatrix> and how do you call them in another script (test.pl)?
[06:05:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[06:05:30] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[06:05:36] <xq> now you can create a .pl file that does: 'use lib "."; use funny qw[foo bar];'
[06:05:49] <xq> now you have your functions available in the .pl file
[06:06:46] <krismatrix> ok...so the use lib is required.
[06:06:57] <krismatrix> without it, perl is look for the @INC.
[06:07:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[06:07:25] <xq> yes, current directory (".") was removed from @INC due to security concerns
[06:07:46] <krismatrix> huh...wonder what that is.
[06:07:46] <xq> alternatively you will have to install funny.pm somewhere where perl already looks
[06:07:52] <krismatrix> right.
[06:08:09] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[06:08:37] <rewt> `perl -V` (upper-case V) shows what's in @INC (and some other useful info)
[06:11:31] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[06:12:11] <krismatrix> cool.
[06:14:08] <xq> also note that Exporter is specifically for exporting functions/variables
[06:14:32] <xq> OOP does not need it
[06:14:58] <krismatrix> ok...i assume that is because you have do a new() on the module.
[06:15:12] <krismatrix> Dir::Module->new()
[06:15:36] <krismatrix> and the object has the associated methods and properties.
[06:16:37] <xq> perldoc perlootut
[06:16:37] <perlbot> xq: Your documentation is available at: https://perldoc.perl.org/perlootut
[06:16:58] <xq> see this for OOP module creation with examples
[06:17:44] <rewt> perl itself does not have `new()`; that's just a `sub new { ... }` in your module... you can name it whatever you want and perl won't care (but people using your module might)
[06:18:03] <krismatrix> right right...i remember that...but sticking with standard..i use new()
[06:18:49] <xq> note that unless in some specific circumstances you should not be writing your own constructor (sub new) nowadays
[06:19:30] <xq> usually you would use one of the OOP frameworks from CPAN
[06:19:38] <xq> like Moo or Moose or Class::Tiny
[06:20:18] <krismatrix> right...Since I use mojolicius for web related stuff..i use the OOP framework that is part of mojo base.
[06:20:35] <xq> yeah that is another way to do it
[06:22:55] <krismatrix> oh...when I was testing my example code...i found that I didn't need the @EXPORT_OK...in my module.
[06:24:07] <xq> that's probably because your funny.pm does not contain "package funny;" line like a real world module would
[06:25:02] <krismatrix> oh yeah.
[06:25:22] <krismatrix> I guess what I created is the equivalent of pythons import funny.py.
[06:26:28] <xq> you should really read those perldocs if you want to have a chance to get all of this right
[06:26:37] <krismatrix> lol
[06:27:23] <krismatrix> sigh...fair enough.
[06:29:21] *** Quits: whynot (~whynot@88.155.24.60) (Quit: leaving)
[06:31:46] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[06:33:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[06:36:18] <mov_eax> ;q
[06:38:51] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[06:39:46] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 244 seconds)
[06:40:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[06:41:02] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[06:43:42] *** Joins: eramirez (~eramirez@49.149.131.61)
[06:44:06] *** Joins: AI4AI (~subie@2601:4c0:4080:bc0:7863:7e39:d0d7:6146)
[06:44:25] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 252 seconds)
[06:44:46] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[06:46:15] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:46:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[06:46:17] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[06:47:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[06:48:01] *** Quits: subie (~subie@2601:4c0:4080:bc0:8d2a:aff3:3c16:df7) (Ping timeout: 250 seconds)
[06:49:11] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:49:12] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:54:15] <celphi> ok so don't hang me,. because I know almost next to nothing about perl,. but perhaps from reading my code you'll see what i'm trying to do. it would be great if someone can help me out finish it https://wandbox.org/permlink/Tsia8AsO9rVZ6lAu#
[06:54:15] <Paperbot_> Link title(s): [ [Wandbox]三へ( へ՞ਊ ՞)へ ﾊｯﾊｯ ]
[06:54:27] <celphi> crap wrong one. https://wandbox.org/permlink/V441ASPRdwx0X2Ev
[06:54:29] <Paperbot_> Link title(s): [ [Wandbox]三へ( へ՞ਊ ՞)へ ﾊｯﾊｯ ]
[06:56:31] <xq> can you ask a more specific question?
[06:57:12] <xq> unless someone is very bored, "it would be great if someone wrote code for me" probably isn't gonna fly
[06:57:51] <celphi> sure,. if you notice my errors i dont know what they mean
[06:58:17] <celphi> i program in C++,javascript, php ect,. but perl is strange to me
[06:59:37] <xq> the first error is about `keys $row` which is not valid
[07:00:00] <celphi> rows is an array of hashes
[07:00:13] <celphi> so row is a hash
[07:00:13] <xq> arrays do not have keys
[07:00:25] <celphi> wouldnt then row have keys?
[07:00:34] <xq> arrays cannot contain hashes
[07:00:42] <xq> because all lists are flat
[07:00:54] <xq> what you can have is an array of hashrefs
[07:00:55] <emanuele6> they can contain references to hashes
[07:01:18] <celphi> ok so wouldnt $row be a ref to hash?
[07:01:20] <xq> in which cas $row is a hashref, and to use keys on it you need to: keys %{ $row }
[07:01:37] <xenu> or %$row or $row->%*
[07:01:40] <xq> or in newer perls, you can also do: keys $row->%*
[07:01:59] <xq> but this is all very moot
[07:01:59] <celphi> ok cool that fixes one
[07:02:05] <pts33> what about foreach \$row
[07:02:08] <celphi> i would have never guessed keys %{ $row }
[07:02:11] <xq> because what you have posted is basically kind of pseudocode
[07:02:56] <xq> because there is no code for actual database interaction
[07:03:16] <celphi> i have one
[07:03:22] <celphi> it's just not attached to this
[07:03:38] <xenu> perl doesn't have actual multideminsional datastructures and as xq said, they're emulated with references
[07:03:53] <xenu> perl references are like C pointers (you said you know C++, that's why i'm using this analogy)
[07:04:00] <xenu> and you need to dereference them before using them
[07:04:16] <pts33> $b[x][y][z] 
[07:04:30] <celphi> sure i can work that part later- but can you explain why the error on 74?
[07:04:45] <celphi> `Global symbol "%row" requires explicit package name (did you forget to declare "my %row"?) at prog.pl line 74.`
[07:05:13] <xq> $row{xyz} accesses hash %row
[07:05:20] <xq> which does not exist
[07:05:43] <xq> to access an element using a hashref $row you do: $row->{xyz} instead
[07:05:43] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[07:06:01] <xenu> unfortunately $row->{xyz} can't be interpolated
[07:06:01] <emanuele6> $row->{xyz}
[07:06:04] <celphi> i see
[07:06:29] <celphi> is it better to use $row->{bareword} or with quotes
[07:06:43] <xenu> oh wait, it can
[07:06:47] <xenu> i confused it with method calls
[07:06:49] <xenu> nvm
[07:06:49] <xq> bareword unless key requires quotes
[07:06:56] <celphi> ok cool
[07:07:04] <xq> e.g. contains spaces or other special stuff
[07:07:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[07:07:28] <celphi> what does `Experimental keys on scalar is now forbidden at prog.pl line 77.` mean
[07:07:35] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[07:07:55] <xq> same thing - keys on hashref with is invalid
[07:08:02] <xenu> the next line explains it
[07:08:11] <xq> which is*
[07:08:19] <xenu> "*now* forbidden" because it used to be legal for a while
[07:09:15] *** Joins: eramirez (~eramirez@49.149.131.61)
[07:09:19] <celphi> ok cool makes sense
[07:10:20] <emanuele6> keys() can be run on hashes; $backupData starts with a $ meaning it is not an hash, it must be something else that is a scalar (e.g. an hashref that you want to deref)
[07:12:49] *** Joins: samir (~azureuser@user/samir)
[07:13:10] *** Joins: krismatrix (~krismatri@38.80.149.51)
[07:27:06] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[07:28:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[07:28:51] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 244 seconds)
[07:29:14] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[07:30:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[07:32:19] *** Quits: pts33 (~pts33@cpe-172-113-85-232.socal.res.rr.com) (Ping timeout: 252 seconds)
[07:33:24] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[07:33:52] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[07:34:43] *** Joins: Manderson_ (~manderson@45.40.80.170)
[07:35:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[07:36:43] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[07:36:47] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[07:38:06] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[07:39:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[07:40:28] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[07:42:39] *** Joins: eramirez (~eramirez@49.149.131.61)
[07:43:42] *** Joins: Manderson (~manderson@45.40.80.170)
[07:45:43] *** Joins: Martchus_ (~martchus@2a01:c22:7bf2:e00:d250:99ff:fe49:3cce)
[07:45:58] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 250 seconds)
[07:46:47] *** Quits: Martchus (~martchus@2a01:c23:c40b:1000:d250:99ff:fe49:3cce) (Ping timeout: 240 seconds)
[07:50:58] *** Parts: samir (~azureuser@user/samir) (WeeChat 2.8)
[07:57:02] *** Joins: Manderson_ (~manderson@45.40.80.170)
[07:57:31] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Quit: WeeChat 3.0.1)
[07:59:31] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 250 seconds)
[08:07:36] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 244 seconds)
[08:07:36] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 244 seconds)
[08:16:07] *** Joins: Linux77_ (~Linux7_7@237-182-233-186.raimax.com.br)
[08:16:16] *** Quits: Linux77 (~Linux7_7@237-182-233-186.raimax.com.br) (Ping timeout: 252 seconds)
[08:18:27] *** Joins: Manderson (~manderson@45.40.80.170)
[08:20:29] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:20:40] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 240 seconds)
[08:35:09] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[08:39:04] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[08:39:19] *** Joins: humky (~humky@user/humky)
[08:40:34] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[08:44:15] *** Quits: pizdets (~pizdets@183.182.114.107) (Ping timeout: 245 seconds)
[08:44:25] *** Joins: pizdets_ (~pizdets@183.182.114.153)
[08:57:18] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:01:51] *** Quits: fling (~fling@user/fling) (Ping timeout: 244 seconds)
[09:05:46] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[09:13:12] *** Joins: krismatrix (~krismatri@38.80.149.51)
[09:20:09] *** Joins: clarjon_1 (~clarjon1@user/clarjon1)
[09:20:44] *** Joins: fling (~fling@user/fling)
[09:22:49] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Ping timeout: 252 seconds)
[09:23:13] *** Joins: EvanCarroll (~ecarroll@46.196.88.53)
[09:29:25] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Ping timeout: 252 seconds)
[09:34:13] *** Joins: mattil (~mattil@airio.portalify.com)
[09:36:04] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:e0ea:fe60:d354:bb9c) (Ping timeout: 252 seconds)
[09:43:25] *** Joins: zacts (~zacts@user/zacts)
[09:51:20] *** Joins: rake (~anomander@vps-e9abfd3d.vps.ovh.net)
[09:51:22] *** Quits: vykook (~vykook@mail.zabij.se) (Quit: No Ping reply in 180 seconds.)
[09:51:40] *** Joins: vykook (~vykook@mail.zabij.se)
[09:52:09] *** Quits: anomander (~anomander@vps-e9abfd3d.vps.ovh.net) (Read error: Connection reset by peer)
[09:55:17] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[09:56:54] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:59:25] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[10:00:30] *** Quits: bocaneri_ (~bismilah@li889-61.members.linode.com) (Changing host)
[10:00:30] *** Joins: bocaneri_ (~bismilah@about/linux/staff/sauvin)
[10:00:50] *** bocaneri_ is now known as bocaneri
[10:00:59] *** Joins: diskin (~diskin@46.41.101.239)
[10:12:00] *** Joins: diskin_ (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[10:12:00] *** diskin is now known as Guest6925
[10:12:00] *** diskin_ is now known as diskin
[10:14:34] *** Quits: Guest6925 (~diskin@46.41.101.239) (Ping timeout: 252 seconds)
[10:15:59] *** Joins: norkle (~norkle@admin.nasa-g0v.com)
[10:17:30] *** norkle is now known as NORKLE
[10:17:40] *** NORKLE is now known as Norkle
[10:19:29] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 250 seconds)
[10:22:04] *** Joins: jplesnik (~jplesnik@nat-pool-brq-t.redhat.com)
[10:22:38] *** Quits: jplesnik (~jplesnik@nat-pool-brq-t.redhat.com) (Client Quit)
[10:23:04] *** Joins: jplesnik (~jplesnik@nat-pool-brq-t.redhat.com)
[10:25:01] *** Quits: EvanCarroll (~ecarroll@46.196.88.53) (Ping timeout: 252 seconds)
[10:29:00] *** Joins: ufobat_ (~martin@dynamic-095-115-080-145.95.115.pool.telefonica.de)
[10:31:51] *** Joins: EvanCarroll (~ecarroll@46.196.88.53)
[10:40:52] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[10:50:20] *** Joins: eramirez (~eramirez@49.149.131.61)
[10:51:08] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[10:52:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[10:54:09] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[10:55:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[10:55:52] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[10:57:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[10:59:21] *** Joins: horsepatat (~horsepata@80.89.78.166)
[11:01:04] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[11:01:49] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[11:02:02] *** rake is now known as anomander
[11:02:14] * GumbyPAN CPAN Upload: SPVM-0.9011 by KIMOTO https://metacpan.org/release/KIMOTO/SPVM-0.9011
[11:03:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[11:04:33] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 250 seconds)
[11:09:14] *** Quits: pucara (~i@181.111.22.32) (Quit: Lost terminal)
[11:11:47] *** Joins: furrymcgee (~devuan@31.179.186.66)
[11:12:56] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[11:13:15] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[11:13:35] *** Quits: zacts (~zacts@user/zacts) (Quit: zacts)
[11:14:38] *** Joins: Manderson_ (~manderson@45.40.80.170)
[11:17:16] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[11:17:41] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[11:25:31] *** Quits: msk (~msk@49.207.201.57) (Ping timeout: 252 seconds)
[11:32:13] *** Joins: semeion (~semeion@user/semeion)
[11:39:05] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-85.prtc.net)
[11:39:59] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[11:43:34] *** Quits: EvanCarroll (~ecarroll@46.196.88.53) (Ping timeout: 244 seconds)
[11:43:40] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 252 seconds)
[11:54:04] *** Joins: art1 (~romeyke@p200300ccdf07d400f7f2e6b1dcf35b6c.dip0.t-ipconnect.de)
[11:59:47] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-85.prtc.net) (Quit: Client closed)
[12:00:07] *** Quits: arthurpbs (~arthurpbs@168.121.98.204) (Ping timeout: 252 seconds)
[12:04:26] *** Quits: WinterStar (~IceLight@user/icelight) (Quit: WeeChat 3.2)
[12:28:58] *** Joins: tobybl_ (~tobybl@189.192.115.87.dyn.plus.net)
[12:29:16] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Ping timeout: 252 seconds)
[12:31:00] *** Quits: Manderson_ (~manderson@45.40.80.170) (Read error: Connection reset by peer)
[12:31:45] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[12:31:51] *** Joins: Manderson (~manderson@45.40.80.170)
[12:32:20] *** Joins: choroba (~E.Choroba@88.146.255.106)
[12:34:16] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 252 seconds)
[12:46:29] *** Joins: pj (~pj@ghettoforge/pj)
[12:51:26] * GumbyPAN CPAN Upload: Redis-OpenTracing-v0.0.3 by VANHOESEL https://metacpan.org/release/VANHOESEL/Redis-OpenTracing-v0.0.3
[12:51:42] *** Joins: Adoi (~Adoi@user/adoi)
[12:52:37] *** Joins: msk (~msk@49.207.201.57)
[12:58:05] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (Ping timeout: 250 seconds)
[13:03:48] *** Joins: locsmif (~none@user/locsmif)
[13:05:25] <locsmif> Hi all. Anybody have the same trouble installing Net::Whois via cpan as I do? https://paste.debian.net/hidden/44ff256d/
[13:05:26] <Paperbot_> Link title(s): [ Debian Pastezone ]
[13:07:01] <vague> locsmif, it's a really old dist, last release in 1999
[13:07:02] <Botje> don't 'sudo cpan install'
[13:07:07] <Botje> ever
[13:07:43] *** Quits: Linux77_ (~Linux7_7@237-182-233-186.raimax.com.br) (Read error: Connection reset by peer)
[13:07:51] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:08:05] *** Joins: Linux77_ (~Linux7_7@237-182-233-186.raimax.com.br)
[13:08:24] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:09:02] <vague> locsmif, it hasn't compiled on linux since 5.8.5, 5.8.6 on fbsd
[13:11:31] <locsmif> Alright
[13:11:34] <locsmif> Botje: ok
[13:11:51] <locsmif> Is there maybe an alternative module?
[13:13:02] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[13:13:42] * Botje enters 'whois' on metacpan.org
[13:14:38] <locsmif> I googled it while lookign for results from metacpan
[13:15:06] <locsmif> But .. I wasn't sure what would be the best alternative, I didn't see any obvious candidate, thought it would be better to ask here
[13:16:14] <shlomif> locsmif: there is https://metacpan.org/pod/Net::Whois::Raw but i never tried it
[13:16:15] <Paperbot_> Link title(s): [ Net::Whois::Raw - Get Whois information of domains and IP addresses. - metacpan.org ]
[13:16:35] <locsmif> https://metacpan.org/pod/Net::Whois::IP prthspd?
[13:16:35] <Paperbot_> Link title(s): [ Net::Whois::IP - Perl extension for looking up the whois information for ip addresses - metacpan.org ]
[13:16:39] <locsmif> perhaps? heh
[13:16:40] *** Joins: ZZzz (~ZZzz@213.57.70.196)
[13:16:42] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 245 seconds)
[13:18:35] *** Joins: mattil (~mattil@helsinki.portalify.com)
[13:22:07] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[13:26:30] * GumbyPAN CPAN Upload: Number-ZipCode-JP-0.20210831 by TANIGUCHI https://metacpan.org/release/TANIGUCHI/Number-ZipCode-JP-0.20210831
[13:27:37] *** Joins: eramirez (~eramirez@49.149.131.61)
[13:30:55] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[13:31:21] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[13:32:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[13:38:37] *** Quits: ZZzz (~ZZzz@213.57.70.196) (Ping timeout: 252 seconds)
[13:43:53] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[13:45:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[13:45:35] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[13:47:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[13:50:33] *** Joins: Manderson_ (~manderson@45.40.80.170)
[13:52:52] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[13:53:04] *** Joins: Guest24 (~Guest24@adsl-72-50-4-41.prtc.net)
[14:01:34] * GumbyPAN CPAN Upload: Locale-Utils-Autotranslator-1.013 by STEFFENW https://metacpan.org/release/STEFFENW/Locale-Utils-Autotranslator-1.013
[14:02:02] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[14:11:58] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[14:12:30] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 250 seconds)
[14:30:50] *** Quits: Guest24 (~Guest24@adsl-72-50-4-41.prtc.net) (Quit: Client closed)
[14:32:50] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:33:12] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:58] *** Joins: csrf (~csrf@user/csrf)
[14:34:10] *** Quits: art1 (~romeyke@p200300ccdf07d400f7f2e6b1dcf35b6c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[14:35:58] *** Joins: Adoi (~Adoi@user/adoi)
[14:41:36] *** Quits: Linux77_ (~Linux7_7@237-182-233-186.raimax.com.br) (Read error: Connection reset by peer)
[14:41:57] *** Joins: Linux77_ (~Linux7_7@237-182-233-186.raimax.com.br)
[14:43:55] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[14:45:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[14:48:09] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[14:49:20] *** Joins: art1 (~romeyke@p200300ccdf27ab00bf2b4e1126b0dffa.dip0.t-ipconnect.de)
[14:49:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[14:50:32] *** Quits: Dorward (~dorward@13.5.169.217.in-addr.arpa) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[14:55:39] *** Joins: Dorward (~dorward@13.5.169.217.in-addr.arpa)
[14:55:39] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[14:57:02] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[14:57:06] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[14:57:15] *** Joins: eramirez (~eramirez@49.149.131.61)
[14:59:35] *** Joins: stanrifkin (~stanrifki@p200300dbcf1a1600e68bbc90c3bf5851.dip0.t-ipconnect.de)
[15:00:31] *** Quits: tobybl_ (~tobybl@189.192.115.87.dyn.plus.net) (Ping timeout: 252 seconds)
[15:00:38] <stanrifkin> does use warnings; slowing down a program and should be removed after the program was tested?
[15:01:09] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[15:02:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[15:02:55] *** Joins: ZZzz (~ZZzz@213.57.70.196)
[15:03:40] <Dorward> stanrifkin: No. https://www.perlmonks.org/?node_id=578835
[15:03:43] <Paperbot_> Link title(s): [ Warnings and Strict in Production/Performance ]
[15:06:51] <stanrifkin> Dorward: thank you
[15:07:21] *** Quits: ZZzz (~ZZzz@213.57.70.196) (Client Quit)
[15:07:38] *** Joins: ZZzz (~ZZzz@213.57.70.196)
[15:09:07] *** Joins: tcohen (~tcohen@192.141.149.64)
[15:11:41] *** Quits: stanrifkin (~stanrifki@p200300dbcf1a1600e68bbc90c3bf5851.dip0.t-ipconnect.de) (Quit: Leaving)
[15:16:40] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 240 seconds)
[15:17:02] *** Joins: Kharec (~Kharec@lfbn-lyo-1-2099-53.w90-66.abo.wanadoo.fr)
[15:17:59] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[15:19:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[15:19:59] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[15:20:52] *** Joins: kylese (~kylese@p5dd8b430.dip0.t-ipconnect.de)
[15:21:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[15:22:07] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 244 seconds)
[15:30:47] *** Joins: krismatrix (~krismatri@38.80.149.51)
[15:32:36] <LeoNerd> Hrm. How do you grep(1) for a pattern that is exactly two hyphens?
[15:33:08] <LeoNerd> Oh. I suppose I could  grep [-][-]
[15:33:08] <Botje> grep -- --?
[15:33:30] <Botje> or grep -e --
[15:34:03] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[15:34:07] <LeoNerd> Actually  grep [-]-  was sufficient. Didn't need to do both of them
[15:35:45] *** Joins: eramirez (~eramirez@49.149.131.61)
[15:36:36] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[15:37:48] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:38:15] *** Joins: eramirez (~eramirez@49.149.131.61)
[15:38:21] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:38:28] <Botje> ugly but working
[15:38:31] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 252 seconds)
[15:40:18] *** Quits: tcohen (~tcohen@192.141.149.64) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:41:58] *** Joins: tcohen (~tcohen@192.141.149.53)
[15:44:21] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[15:45:04] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:45:16] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:45:45] *** Joins: eramirez (~eramirez@49.149.131.61)
[15:46:19] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[15:51:14] *** Joins: pj (~pj@ghettoforge/pj)
[15:54:09] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 244 seconds)
[15:57:12] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[15:58:17] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[16:01:32] *** Quits: tcohen (~tcohen@192.141.149.53) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:01:52] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[16:06:58] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:08:06] *** Joins: niedobry (~bbrindle@li1839-111.members.linode.com)
[16:10:40] <El_Che> It sound like a employee evaluation
[16:11:47] * GumbyPAN CPAN Upload: Task-PerlCriticAllPolicies-0.04 by GUGOD https://metacpan.org/release/GUGOD/Task-PerlCriticAllPolicies-0.04
[16:12:29] *** Joins: proller (~p@2a02:6b8:0:40c:f7a5:b838:a8ff:27d)
[16:19:34] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[16:20:07] *** Joins: mattil (~mattil@airio.portalify.com)
[16:24:13] *** Joins: Adoi (~Adoi@user/adoi)
[16:34:17] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[16:36:50] * GumbyPAN CPAN Upload: Alien-RtMidi-0.01-TRIAL by JBARRETT https://metacpan.org/release/JBARRETT/Alien-RtMidi-0.01-TRIAL
[16:42:52] *** Quits: proller (~p@2a02:6b8:0:40c:f7a5:b838:a8ff:27d) (Ping timeout: 252 seconds)
[16:47:30] *** Joins: WinterStar (~IceLight@user/icelight)
[16:48:42] *** Joins: pizdets (~pizdets@183.182.110.19)
[16:48:55] *** Quits: pizdets_ (~pizdets@183.182.114.153) (Ping timeout: 252 seconds)
[16:49:10] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[16:51:51] * GumbyPAN CPAN Upload: App-CPANtoRPM-1.10 by SBECK https://metacpan.org/release/SBECK/App-CPANtoRPM-1.10
[16:54:58] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[16:56:05] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[16:56:08] *** Joins: proller (~p@2a02:6b8:0:40c:f087:c2e:92e8:1ada)
[16:58:37] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Quit: Lost terminal)
[17:01:06] *** Joins: EvanCarroll (~ecarroll@46.196.88.53)
[17:01:06] *** Quits: nuclightq_ (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru) (Ping timeout: 252 seconds)
[17:01:36] *** Quits: Stealth (stealth@sourcemage/archon/stealth) (Excess Flood)
[17:02:28] *** Joins: Stealth (stealth@sourcemage/archon/stealth)
[17:02:40] *** Quits: proller (~p@2a02:6b8:0:40c:f087:c2e:92e8:1ada) (Ping timeout: 240 seconds)
[17:05:25] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[17:07:21] *** Joins: proller (~p@2a02:6b8:0:40c:2b84:9c6a:95fe:8f86)
[17:07:27] *** Joins: nuclightq (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru)
[17:07:37] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 245 seconds)
[17:12:04] *** Quits: Dima[m] (~reddima10@2001:470:69fc:105::366) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: ilmari_ (~ilmari@user/ilmari) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: latk (~latk@2001:470:69fc:105::255) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: gordonfish[m] (~gordonfis@user/gordonfish) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Quit: Bridge terminating on SIGTERM)
[17:12:07] *** Quits: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88) (Quit: Bridge terminating on SIGTERM)
[17:12:12] *** Quits: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a) (Quit: Bridge terminating on SIGTERM)
[17:12:12] *** Quits: kesa4[m] (~kesa4matr@2001:470:69fc:105::d723) (Quit: Bridge terminating on SIGTERM)
[17:12:12] *** Quits: entonian[m] (~entonianm@2001:470:69fc:105::7ac0) (Quit: Bridge terminating on SIGTERM)
[17:15:10] *** Joins: ilmari_ (~ilmari@user/ilmari)
[17:17:31] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 252 seconds)
[17:18:51] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[17:24:42] *** Joins: latk (~latk@2001:470:69fc:105::255)
[17:24:42] *** Joins: gordonfish[m] (~gordonfis@user/gordonfish)
[17:24:42] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[17:24:42] *** Joins: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a)
[17:24:42] *** Joins: Dima[m] (~reddima10@2001:470:69fc:105::366)
[17:24:54] *** Joins: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88)
[17:24:54] *** Joins: kesa4[m] (~kesa4matr@2001:470:69fc:105::d723)
[17:24:54] *** Joins: entonian[m] (~entonianm@2001:470:69fc:105::7ac0)
[17:31:13] *** Quits: horsepatat (~horsepata@80.89.78.166) (Ping timeout: 252 seconds)
[17:34:40] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 256 seconds)
[17:37:26] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[17:39:53] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:39:54] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:41:20] *** Quits: kylese (~kylese@p5dd8b430.dip0.t-ipconnect.de) (Quit: Leaving)
[17:53:49] *** Quits: locsmif (~none@user/locsmif) (Ping timeout: 252 seconds)
[18:00:00] *** Quits: proller (~p@2a02:6b8:0:40c:2b84:9c6a:95fe:8f86) (Ping timeout: 250 seconds)
[18:01:20] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[18:01:59] * GumbyPAN CPAN Upload: Pod-Reader-1.020 by MONSIEURP https://metacpan.org/release/MONSIEURP/Pod-Reader-1.020
[18:02:52] *** Joins: eramirez (~eramirez@49.149.131.61)
[18:07:05] *** Quits: rewt (~default@user/rewt) (Ping timeout: 248 seconds)
[18:07:12] *** Joins: samir (~azureuser@user/samir)
[18:08:07] *** Joins: rewt (~default@user/rewt)
[18:10:06] *** Quits: Linux77_ (~Linux7_7@237-182-233-186.raimax.com.br) (Remote host closed the connection)
[18:10:30] *** Joins: Linux77_ (~Linux7_7@237-182-233-186.raimax.com.br)
[18:12:04] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 256 seconds)
[18:12:34] *** Joins: proller (~p@2a02:6b8:0:40c:36bb:e244:e5f5:700f)
[18:12:37] *** Quits: ZZzz (~ZZzz@213.57.70.196) (Ping timeout: 244 seconds)
[18:13:53] *** Joins: tcohen (~tcohen@186.122.180.102)
[18:15:13] *** Quits: scp1 (~magnus.wo@195-198-186-122.customer.telia.com) (Ping timeout: 252 seconds)
[18:15:26] *** Joins: scp1 (~magnus.wo@195-198-186-122.customer.telia.com)
[18:18:35] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[18:20:36] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-4.prtc.net)
[18:24:27] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[18:25:06] *** Joins: zacts (~zacts@user/zacts)
[18:26:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[18:26:42] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 245 seconds)
[18:27:06] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[18:27:49] *** Joins: adherzog (uid387168@id-387168.tooting.irccloud.com)
[18:28:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[18:31:13] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 252 seconds)
[18:32:02] * GumbyPAN CPAN Upload: grpc-xs-0.36 by JOYREX https://metacpan.org/release/JOYREX/grpc-xs-0.36
[18:40:16] <djerius> xq: yes PDL is used for serious things. PDL questions don't come here; there are other mailing lists for it.
[18:41:17] <djerius> and a separate pdl irc channel 
[18:43:45] *** Joins: ZZzz (~ZZzz@213.57.70.144)
[18:43:46] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[18:44:25] *** Joins: zacts (~zacts@user/zacts)
[18:49:19] *** Joins: krismatrix (~krismatri@38.80.149.51)
[18:52:15] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[18:53:50] <krismatrix> what is the difference between perlbrew use and perlbrew switch?
[18:55:23] <vague> krismatrix, https://metacpan.org/dist/App-perlbrew/view/script/perlbrew#COMMAND:-USE
[18:55:24] <Paperbot_> Link title(s): [ perlbrew - Perl environment manager. - metacpan.org ]
[18:56:18] <krismatrix> that is what I thought, but when I use perlbrew switch...it seems to open a subshell. When I exit the subshell, I am back to system perl.
[18:56:28] <krismatrix> I am not seeing how this is different from perlbrew use.
[18:56:49] <xq> perlbrew switch is permanent
[18:56:58] <xq> perlbrew use is one session only
[18:57:02] <choroba> Have you set up the profile as instructed in perlbrew init?
[18:57:23] <krismatrix> I typed perlbrew init and updated the .profile if that is what you are asking
[18:57:46] <choroba> switch should change what .profile does
[18:58:23] <krismatrix> I don't know what the change the line source ~/perl5/perlbrew/etc/bashrc is doing.
[18:58:31] <choroba> but you need to run a new session to see it happen
[18:58:48] <krismatrix> just so i am clear...what do you mean by new session.
[18:59:47] *** Parts: art1 (~romeyke@p200300ccdf27ab00bf2b4e1126b0dffa.dip0.t-ipconnect.de) ()
[19:01:08] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[19:02:10] <xq> also, neither of those open a subshell, what makes you think that they do?
[19:02:37] <krismatrix> let me see if I can share a picture...hold on.
[19:02:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[19:03:19] <krismatrix> https://ibb.co/f172pMV
[19:03:20] <Paperbot_> Link title(s): [ picPerl — ImgBB ]
[19:04:01] <krismatrix> that image says a new sub-shell launched.
[19:04:04] <xq> how did you install perlbrew?
[19:04:15] <krismatrix> I think sudo apt install perlbrew
[19:04:22] <xq> which version is it?
[19:04:32] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:70b4:1948:70a0:1ca9)
[19:04:54] <krismatrix> what is the command to check that?
[19:05:17] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-4.prtc.net) (Ping timeout: 256 seconds)
[19:05:44] <xq> apt policy perlbrew
[19:05:50] <xq> and look for Installed
[19:06:01] <krismatrix> 0.88-1
[19:07:06] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[19:08:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[19:09:53] <krismatrix> I see that the latest version is 0.92 on cpan.
[19:10:09] <krismatrix> but 0.88 is only a year old, and the updates appear to be small.
[19:11:45] <xq> krismatrix: what does echo $PERLBREW_SHELLRC_VERSION say (in your shell)
[19:12:20] <krismatrix> are those spaces or underscores? (I see spaces)
[19:12:30] <xq> underscores
[19:12:44] <krismatrix> ok..i get nothing back.
[19:13:19] <xq> after you have added the line to your .profile, did you relogin?
[19:13:19] *** Joins: Nei_ (~ailin@user/nemui)
[19:13:30] <krismatrix> no.
[19:13:37] <xq> do a relogin
[19:13:43] <krismatrix> I am doing this on my desktop not on a server.
[19:14:01] <vague> relogin = start a new terminal
[19:14:14] <krismatrix> ah..maybe i did that...but i can try that now..
[19:14:19] <xq> assuming your terminal emulator opens a login shell, just open a new shell
[19:14:30] <xq> but that assumption may or may not hold
[19:14:42] <krismatrix> ok..i have closed all my terminals...and reopened one...what now?
[19:14:51] <xq> echo $PERLBREW_SHELLRC_VERSION
[19:14:56] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[19:14:58] <krismatrix> still empty.
[19:14:59] <vague> or perl -v
[19:15:13] <krismatrix> perl -v shows my system perl version.
[19:15:28] *** Quits: Getty (getty@stardestroyer.de) (Quit: changing servers)
[19:15:31] <krismatrix> do I need to restart my computer?
[19:15:33] <vague> Then your .profile isn't run
[19:15:47] *** Joins: Getty (getty@stardestroyer.de)
[19:15:48] <xq> run manually: source ~/perl5/perlbrew/etc/bashrc
[19:15:49] *** Quits: Nei (~ailin@user/nemui) (Remote host closed the connection)
[19:16:02] <xq> (this is the thing from your profile that is not being run)
[19:16:09] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[19:16:18] <krismatrix> ok...i ran the command on the shell.
[19:16:22] <xq> echo $PERLBREW_SHELLRC_VERSION
[19:16:26] <krismatrix> now I get 0.88
[19:16:39] <xq> try use and switch now
[19:16:45] <xq> you should see no subshells
[19:16:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[19:16:49] <xq> from either
[19:16:52] *** Nei_ is now known as Nei
[19:16:52] *** Joins: tejr (~tejr@user/tejr)
[19:17:31] <krismatrix> tried switch...and you got it.
[19:17:35] <xq> so yes, this thing: < xq> assuming your terminal emulator opens a login shell, just open a new shell
[19:17:41] <xq> does not hold on your system
[19:17:56] <xq> you might want to look into settings of your terminal emulator application
[19:18:02] <xq> to configure it to use login shells
[19:18:33] <xq> because non-login shells do not run .profile as you can see
[19:18:51] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[19:18:52] <krismatrix> right...perhaps I need to add the line in .bash_profile rather than .profile.
[19:19:08] <xq> uhh
[19:19:23] <xq> I suggest to actually do what I described
[19:19:32] <xq> not some $other_random_thing
[19:19:43] <xq> what terminal emulator do you use?
[19:19:52] <krismatrix> whatever comes with ubuntu by default.
[19:20:12] <krismatrix> not sure how to check what it is.
[19:20:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[19:20:27] <xq> does it have a menu bar or something like that?
[19:20:31] <krismatrix> yes
[19:20:35] <xq> help -> about ?
[19:20:48] <krismatrix> ok..it says Gnome Terminal
[19:20:51] <krismatrix> 3.36.2
[19:22:14] <krismatrix> I guess there is a checkbox called "Run command as login shell". I assume this is what you are referring to/
[19:22:15] <krismatrix> ?
[19:23:45] *** Quits: scp1_ (~scp1@host-90-232-59-59.mobileonline.telia.com) (Ping timeout: 250 seconds)
[19:24:41] <vague>  Try it and start a new terminal. If all works you should have the perlbrew perl there
[19:25:18] <krismatrix> yeah...i tried it...Apparently running this way means the terminal will use .bash_profile or .profile...whereas default looks at .bashrc.
[19:25:44] *** Joins: japh (~scp1@host-90-232-58-62.mobileonline.telia.com)
[19:25:44] *** Quits: japh (~scp1@host-90-232-58-62.mobileonline.telia.com) (Changing host)
[19:25:44] *** Joins: japh (~scp1@user/japh)
[19:27:14] <xq> my ~/.profile loads ~/.bashrc, so I don't have that problem
[19:27:28] <xq> but I can see what you mean
[19:28:47] <krismatrix> ok...i think you solved my problem...
[19:28:58] <krismatrix> now let me check what the difference is between perl use vs switch
[19:29:01] *** Quits: tcohen (~tcohen@186.122.180.102) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:30:26] <krismatrix> i need to step away from my desk for a bit. So I may log out. Presently I am installing an older perl version for the purpose of testing. Thanks for the help so far.
[19:30:39] *** Quits: japh (~scp1@user/japh) (Read error: Connection reset by peer)
[19:30:48] *** Joins: scp1_ (~scp1@host-95-192-200-91.mobileonline.telia.com)
[19:33:14] <xq> krismatrix: https://paste.debian.net/hidden/56f3a4df/
[19:33:15] <Paperbot_> Link title(s): [ Debian Pastezone ]
[19:33:31] <xq> from my ~/.profile
[19:33:41] *** Joins: thrig (~thrig@65.113.153.50)
[19:34:01] *** Quits: rfi_ (~rfi@216.70.102.172) (Ping timeout: 248 seconds)
[19:35:23] *** Joins: rfi (~rfi@216.70.102.172)
[19:36:20] *** Joins: magla (~gelignite@55d413e5.access.ecotel.net)
[19:38:02] *** Joins: YaoNai (~YaoNai@user/yaonai)
[19:43:59] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[19:45:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[19:46:34] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-44.prtc.net)
[19:47:41] *** Quits: EvanCarroll (~ecarroll@46.196.88.53) (Ping timeout: 244 seconds)
[19:49:29] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[19:51:38] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[19:53:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[19:57:38] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:59:56] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[20:01:45] *** Joins: eramirez (~eramirez@49.149.131.61)
[20:03:47] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[20:08:09] *** Joins: bmeneg_ (~bmeneg@2001:1284:f016:e232:1f2a:ece7:a373:a431)
[20:08:16] *** Quits: bmeneg (~bmeneg@2001:1284:f013:3746:dc7e:5a3e:ae72:397e) (Ping timeout: 250 seconds)
[20:09:04] <vanfanel64> wseval: package A; sub method_foo { {foo => 'abc', bar => 'def'} } package main; "<${A->method_foo}{bar}>";
[20:09:05] <perlbot> vanfanel64: <def>
[20:09:31] <vanfanel64> Why does that work? ${...} on a hash reference
[20:09:39] <vanfanel64> wseval: package A; sub method_foo { {foo => 'abc', bar => 'def'} } package main; "<${A->method_foo}->{bar}>";
[20:09:41] <perlbot> vanfanel64: ERROR: Not a SCALAR reference at (IRC) line 1. 
[20:09:57] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[20:10:04] <vanfanel64> This fails as I would have expected of the first one also
[20:10:08] <Botje> ${EXPR}{KEY} === $EXPR->{KEY}
[20:10:33] <Botje> !== ${EXPR}->{KEY}
[20:10:52] *** Quits: ZZzz (~ZZzz@213.57.70.144) (Ping timeout: 245 seconds)
[20:11:00] <vanfanel64> What exactly is the first one doing then, Botje?
[20:11:08] <vanfanel64> wseval: package A; sub method_foo { {foo => 'abc', bar => 'def'} } package main; "<${A->method_foo}>";
[20:11:10] <perlbot> vanfanel64: ERROR: Not a SCALAR reference at (IRC) line 1. 
[20:11:18] <vanfanel64> That also fails as I would have expected.
[20:11:37] <vanfanel64> wseval: package A; sub method_foo { {foo => 'abc', bar => 'def'} } package main; "<%{A->method_foo}>";
[20:11:38] <perlbot> vanfanel64: <%{A->method_foo}>
[20:11:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[20:11:49] <vanfanel64> Errrum
[20:12:00] <vanfanel64> %{...} not interpolate-able?
[20:12:11] <thrig> a hash reference is probably not a scalar reference
[20:12:21] <vanfanel64> That would explain why % works in double quotes for sprintf/prinf
[20:12:37] <vanfanel64> For formats
[20:12:43] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-44.prtc.net) (Ping timeout: 256 seconds)
[20:13:13] <vanfanel64> wseval: package A; sub method_foo { {foo => 'abc', bar => 'def'} } package main; "<${A->method_foo}{bar}>";
[20:13:14] <perlbot> vanfanel64: <def>
[20:13:22] <vanfanel64> What is going on with this one?
[20:15:49] <Botje> that's ${EXPR}{KEY} again.
[20:16:08] <Botje> see perldoc perlreftut
[20:17:19] <vanfanel64> What is that doing though? I do not quite recognize ${EXPR}{KEY}, though I am well aware of $href->{key} and returns_href->{key}
[20:18:03] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[20:18:26] <Botje> the exact same thing as EXPR->{KEY}.
[20:18:33] <Botje> as perldoc perlreftut documents.
[20:18:37] *** Joins: keir (~keir@user/keir)
[20:18:56] <Botje> except the parser is happy about the ${EXPR}{KEY} form and not about the EXPR->{KEY} form because reasons.
[20:19:17] <Botje> All of this is a non-issue with Quote::Code.
[20:19:19] <vanfanel64> Ok I get whwat ${...} does in general, I do not get why ${A->method_foo} works when method_foo returns a hash reference
[20:19:36] <Botje> ${A->method_foo} very explicitly does NOT work.
[20:19:44] <Botje> only ${A->method_foo}{bar} works.
[20:19:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[20:19:48] <vanfanel64> Yes, as I demonstrated above
[20:19:54] <vanfanel64> Of, wait
[20:20:14] <zgu> ${$a}{$b} is a very different thing from ${a}
[20:20:18] <vanfanel64> ${...}{key} is just doing a key look up on a hash reference
[20:20:20] <vanfanel64> Right?
[20:20:21] <zgu> err, ${$a}
[20:20:28] <zgu> yes
[20:20:32] <Botje> YES AS I TOLD YOU THREE TIMES NOW
[20:20:48] <zgu> ${...} would assume scalar reference, not a hash ref
[20:21:02] <vanfanel64> Botje, yes, my apologies, I guess I was running a little cold at first
[20:23:26] <vanfanel64> My revs have come up and it makes perfect sense now
[20:24:22] *** Quits: Manderson_ (~manderson@45.40.80.170) (Ping timeout: 244 seconds)
[20:25:02] <xenu> zgu: nope, ${} doesn't mean "dereference scalar reference" it means "scalar dereference". the difference is subtle but very important
[20:26:13] <xenu> ah
[20:26:14] <vanfanel64> A scalar reference is a reference pointing to a scalar (number, string, reference), and not an array, hash, object, etc
[20:26:17] *** Joins: Manderson (~manderson@45.40.80.170)
[20:26:22] <xenu> you mean *just* ${}, without anything else
[20:26:33] <xenu> sorry, i didn't read the whole context
[20:27:14] * GumbyPAN CPAN Upload: Games-Sudoku-General-0.025_01 by WYANT https://metacpan.org/release/WYANT/Games-Sudoku-General-0.025_01
[20:27:58] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[20:29:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[20:29:47] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[20:30:22] *** Quits: bmeneg_ (~bmeneg@2001:1284:f016:e232:1f2a:ece7:a373:a431) (Remote host closed the connection)
[20:31:00] *** Quits: jplesnik (~jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[20:31:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[20:32:58] *** Quits: ufobat_ (~martin@dynamic-095-115-080-145.95.115.pool.telefonica.de) (Ping timeout: 250 seconds)
[20:33:30] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-199.prtc.net)
[20:34:50] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[20:36:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[20:38:08] *** Joins: ufobat_ (~martin@dynamic-095-115-080-145.95.115.pool.telefonica.de)
[20:38:50] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 244 seconds)
[20:41:01] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 252 seconds)
[20:41:37] *** Joins: semeion (~semeion@user/semeion)
[20:43:52] *** Joins: icecoldjava37 (~quassel@193.92.141.161.dsl.dyn.forthnet.gr)
[20:44:21] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 250 seconds)
[20:44:22] *** icecoldjava37 is now known as icecoldcola37
[20:44:54] *** Quits: icecoldcola37 (~quassel@193.92.141.161.dsl.dyn.forthnet.gr) (Client Quit)
[20:48:46] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[20:50:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[20:50:21] <genio> Why on earth do people put code snippets in their blog article as an IMAGE?
[20:50:46] <gordonfish> I reeeeealy hate that
[20:50:46] <thrig> could be worse, could be attached to a word document
[20:50:50] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[20:51:50] <thrig> e.g. xkcd://2116
[20:52:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[20:52:36] <gordonfish> Last week someone sent me a document from a classic MS works version
[20:53:22] *** Joins: Manderson_ (~manderson@45.40.80.170)
[20:53:39] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Remote host closed the connection)
[20:54:46] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[20:55:52] <Nei> neat
[20:55:52] *** Quits: Manderson (~manderson@45.40.80.170) (Ping timeout: 252 seconds)
[20:56:10] <Nei> I remember there once was a project to extract technical documentation from some obscure word documents
[20:56:22] <Nei> word or wordperfect
[20:57:08] * gordonfish can remember using wordstar 2000 in dos 3.0/5.0 on an XT
[20:57:32] <gordonfish> (And Lotus 1-2-3)
[20:57:40] <xq> genio: maybe they want syntax highlighting but their blog software has no support for that?
[20:58:21] <xq> (I'm just guessing)
[20:58:59] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 244 seconds)
[20:59:47] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[21:01:17] * GumbyPAN CPAN Upload: Acme-Resume-0.0104 by CSSON https://metacpan.org/release/CSSON/Acme-Resume-0.0104
[21:02:06] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[21:03:45] *** Joins: eramirez (~eramirez@49.149.131.61)
[21:06:34] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-199.prtc.net) (Ping timeout: 256 seconds)
[21:07:59] *** Quits: choroba (~E.Choroba@88.146.255.106) (Quit: Leaving)
[21:09:04] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 252 seconds)
[21:10:35] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[21:12:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[21:12:38] *** Quits: niedobry (~bbrindle@li1839-111.members.linode.com) (Quit: leaving)
[21:13:08] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[21:13:14] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[21:14:45] *** Joins: eramirez (~eramirez@49.149.131.61)
[21:16:38] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[21:17:37] *** Quits: keir (~keir@user/keir) (Quit: keir)
[21:18:15] *** Joins: eramirez (~eramirez@49.149.131.61)
[21:18:52] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[21:20:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[21:22:30] *** Joins: Pali (~pali@user/pali)
[21:23:57] <genio> xq: even so. unacceptable!
[21:24:12] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[21:25:19] <thrig> even less, given the colors make it less readable
[21:25:45] *** Joins: eramirez (~eramirez@49.149.131.61)
[21:27:10] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[21:28:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[21:29:51] *** Joins: ufobat__ (~martin@dynamic-077-004-014-173.77.4.pool.telefonica.de)
[21:30:48] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[21:31:37] *** Quits: proller (~p@2a02:6b8:0:40c:36bb:e244:e5f5:700f) (Ping timeout: 252 seconds)
[21:32:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[21:32:34] *** Quits: ufobat_ (~martin@dynamic-095-115-080-145.95.115.pool.telefonica.de) (Ping timeout: 244 seconds)
[21:40:41] *** Quits: KnoP (~KnoP@p57b21ac7.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[21:42:04] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[21:42:30] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[21:43:44] <mjgardner> New blog on Moose method modifiers instead of overriding in subclasses (thanks perigrin, haarg, & ether) : https://phoenixtrap.com/2021/08/31/taming-the-moose-method-modifiers-instead-of-overrides-in-object-oriented-perl/
[21:43:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[21:43:46] <Paperbot_> Link title(s): [ Taming the Moose: Method modifiers instead of overrides in object-oriented Perl - The Phoenix Trap ]
[21:45:51] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[21:46:23] <xq> mjgardner: nice post
[21:46:39] <xq> have some internet points mjgardner++
[21:46:45] <mjgardner> 🙂
[21:47:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[21:48:51] *** Joins: jabberwok (~wlindley@75.105.20.104)
[21:49:17] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[21:50:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[21:51:23] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[21:52:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[21:56:23] * GumbyPAN welcomes UHLE - Thomas Uhle to CPAN!
[21:59:00] *** Joins: Pixi (~Pixi@user/pixi)
[21:59:42] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[22:01:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[22:04:09] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[22:05:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[22:07:59] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[22:09:01] *** Quits: Kharec (~Kharec@lfbn-lyo-1-2099-53.w90-66.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[22:09:12] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[22:09:45] *** Joins: eramirez (~eramirez@49.149.131.61)
[22:11:55] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[22:13:42] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[22:13:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[22:13:47] *** Joins: jaguart (~jaguart@178.171.187.81.in-addr.arpa)
[22:14:47] *** Quits: ggherdov (sid11402@id-11402.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[22:15:07] *** Quits: odc (sid197788@id-197788.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[22:15:16] *** Joins: proller (~p@2a02:6b8:0:40c:830d:e744:30d1:9f80)
[22:15:21] *** Quits: liam (sid7517@id-7517.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[22:15:21] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[22:16:17] *** Joins: ggherdov (sid11402@id-11402.helmsley.irccloud.com)
[22:16:19] *** Joins: odc (sid197788@id-197788.helmsley.irccloud.com)
[22:16:25] *** Joins: liam (sid7517@id-7517.helmsley.irccloud.com)
[22:16:39] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 250 seconds)
[22:16:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[22:18:11] *** Joins: BlueShark (sid10311@user/blueshark)
[22:19:15] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[22:20:25] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Quit: Quit)
[22:20:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[22:21:11] *** Joins: Kharec (~Kharec@lfbn-lyo-1-2099-53.w90-66.abo.wanadoo.fr)
[22:21:25] * GumbyPAN CPAN Upload: XS-Parse-Keyword-0.14 by PEVANS https://metacpan.org/release/PEVANS/XS-Parse-Keyword-0.14
[22:25:47] *** Quits: Kharec (~Kharec@lfbn-lyo-1-2099-53.w90-66.abo.wanadoo.fr) (Ping timeout: 244 seconds)
[22:25:51] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[22:26:22] *** Quits: Manderson_ (~manderson@45.40.80.170) (Remote host closed the connection)
[22:26:26] * GumbyPAN CPAN Upload: Syntax-Keyword-Match-0.08 by PEVANS https://metacpan.org/release/PEVANS/Syntax-Keyword-Match-0.08
[22:29:00] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-5-6.prtc.net)
[22:31:26] * GumbyPAN CPAN Upload: Syntax-Operator-Divides-0.01 by PEVANS https://metacpan.org/release/PEVANS/Syntax-Operator-Divides-0.01
[22:31:27] * GumbyPAN CPAN Upload: Syntax-Operator-Equ-0.01 by PEVANS https://metacpan.org/release/PEVANS/Syntax-Operator-Equ-0.01
[22:31:45] <LeoNerd> ^-- ooh.. what's this? New infix operators, you say?
[22:32:59] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[22:33:30] *** Joins: EvanCarroll (~ecarroll@46.196.88.53)
[22:33:58] <thrig> some strings are more equality tested than others?
[22:34:32] <ehuelsmann[m]> LeoNerd: yay! does it still generate warnings when either is a string and the other undef?
[22:34:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[22:35:15] <ehuelsmann[m]> ah. the answer is in the docs.
[22:35:26] <ehuelsmann[m]> well, that saves an entire category of warnings.
[22:36:02] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[22:37:45] *** Joins: eramirez (~eramirez@49.149.131.61)
[22:39:10] *** Joins: Kharec (~Kharec@lfbn-lyo-1-2099-53.w90-66.abo.wanadoo.fr)
[22:40:11] *** Joins: icecoldcola37 (~tc@193.92.141.161.dsl.dyn.forthnet.gr)
[22:42:11] <xq> seems interesting
[22:42:37] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[22:42:56] <xq> a =~ that does not warn on undef will be genuinely useful
[22:43:36] <thrig> equtwiddle ?
[22:43:41] <xenu> i wonder if it would be a better idea to change the behavior of 'eq' with a feature flag instead of making 'equ'
[22:43:54] <xenu> the current behavior of eq is stupid
[22:44:15] *** Joins: eramirez (~eramirez@49.149.131.61)
[22:44:23] *** Quits: Kharec (~Kharec@lfbn-lyo-1-2099-53.w90-66.abo.wanadoo.fr) (Ping timeout: 244 seconds)
[22:44:36] <jabberwok> IF ( X IS STRINGWISE EQUAL TO Y OR BOTH ARE UNDEF )    C GRACE HOPPER GETS THIS JOKE
[22:45:37] <thrig> pretty sure there's a reason why common lisp ended up with eq eql equal equalp
[22:45:40] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[22:46:42] <LeoNerd> xenu: I'm also a bit on the fence currently, as to whether   my $aref = [];  my $str = "$aref";  $aref equ $str   should be true or not
[22:46:57] <LeoNerd> Currently it is
[22:47:29] *** icecoldcola37 is now known as icecoldjava37
[22:47:40] <xenu> tbh it should because otherwise it should also ignore "" overload of objects
[22:47:49] <huf> wait what?
[22:47:52] <huf> how is that sane behavior?
[22:47:54] <thrig> you'd presumably want to do different things with a string vs. array ref
[22:48:16] <xenu> s/tbh/imo/ s/it should/it should be true/
[22:48:36] <xenu> i wish it was possible to edit irc messages
[22:48:48] <huf> sign of a criminal mind
[22:49:05] <jabberwok> i had no idea that references, for stringwise comparisons, acted the same as the text value of their ref() 
[22:51:29] * GumbyPAN CPAN Upload: RapidApp-1.3402 by VANSTYN https://metacpan.org/release/VANSTYN/RapidApp-1.3402
[22:52:15] <xq> the question that I would ask rather is:
[22:52:53] <xq> how is ref stringification to BLAH(0xNUMBERS) useful in any way so much as to be a part of default core functionality?
[22:53:17] <xq> or, in other words, why doesn't an attempt to stringify a ref throw an exception by default?
[22:54:06] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[22:54:13] <xq> because in a real language with a real type system `$ref eq $string` would throw, no questions asked
[22:54:28] <xenu> $foo{$arrayref} is perfectly reasonable code
[22:55:27] <jabberwok> LeoNerd:  so those are actually _trinary_ equality operators (yes, no, i-don't-know)
[22:55:45] *** Joins: eramirez (~eramirez@49.149.131.61)
[22:56:31] <thrig> (defun foo ()) (eq 'foo (symbol-function 'foo))
[22:56:36] *** Joins: Moonlight (~Moonlight@64.253.17.182)
[22:56:45] <Moonlight> What's brackin', my homies?
[22:57:12] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[22:57:25] <xq> xenu: I hope you are joking
[22:57:39] <ehuelsmann[m]> thrig: 'FOO NIL
[22:57:41] <huf> no, because that *is* perfectly reasonable code
[22:57:49] <xq> I question your reason then
[22:57:58] *** Quits: Su-Shee (~Susanne@p4ffc7344.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[22:58:11] <huf> but maybe we could get equality operators that treat refs as different from nonrefs?
[22:58:16] <thrig> apparently common lisp isn't a real language or lacks a real type system (both good points in its favor)
[22:58:30] <huf> xq: that's okay, you'll learn
[22:58:55] <ehuelsmann[m]> thrig: define "real"?
[22:58:57] <xenu> xq: it can be used for reference deduplication or matching refs to something
[22:59:07] <huf> or ... INSIDE OUT OBJECTS :D
[22:59:12] <huf> ah the nostalgia
[22:59:18] <xq> xenu: based on what guarantees?
[22:59:35] <ehuelsmann[m]> thrig: it has a type system, but not like any of the ones you'd be used to.
[22:59:38] <xenu> xq: refs stringify to their memory addresses
[22:59:42] *** Joins: Su-Shee (~Susanne@p4ff495b1.dip0.t-ipconnect.de)
[22:59:54] <xenu> memory addresses are unique
[23:00:06] <thrig> not sure what type systems I'm supposed to be used to
[23:00:08] <Moonlight>  I would certainly hope so!
[23:00:38] <xq> memory addresses can be reused
[23:01:09] <huf> and you cant handle that
[23:01:12] <huf> it's just not possible, right?
[23:01:45] <Grinnz> yeah, inside out objects have to handle that lifecycle
[23:01:49] <Grinnz> the bigger issue is threading
[23:01:52] <huf> nah
[23:01:57] <huf> because threading sucks and you shouldnt use it
[23:01:59] <Grinnz> anyway, the numification of the reference is a better key
[23:02:16] <Grinnz> (or just use refaddr so overload doesn't happen)
[23:02:18] <xenu> it is, but it's more verbose and slightly less obvious
[23:02:57] <Grinnz> also this is why stringification.pm exists in LeoNerd's head
[23:03:09] <xq> not relying on nonsense is a better way
[23:03:23] <ehuelsmann[m]> thrig: subtypep has a return value where it indicates "don't know".
[23:03:23] <huf> you've yet to demonstrate that it is nonsense
[23:03:23] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[23:03:26] <huf> so you know, gg
[23:03:57] <xenu> there should definitely be a way to catch reference stringifications, but i'm not sure if it should be an error or a warning
[23:03:59] <ehuelsmann[m]> I don't think any other programming language has a return value of "no idea" in response to the question "is A a subtype of B"
[23:04:25] <ehuelsmann[m]> or at least none of the ones I know do.
[23:05:07] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[23:05:12] <ehuelsmann[m]> (see http://clhs.lisp.se/Body/f_subtpp.htm figure 4-9)
[23:05:16] *** Joins: eramirez (~eramirez@49.149.131.61)
[23:05:17] <Paperbot_> Link title(s): [ CLHS: Function SUBTYPEP ]
[23:05:20] <xenu> come to think of it, numification is a potential problem for exactly the same reason
[23:05:58] <xenu> although to be fair stringification probably happens more often
[23:06:06] <xenu> accidental stringification*
[23:06:36] <xq> ref stringification should be an error
[23:07:05] <xq> unless perl goes all the way to specify it in gory details for all supported platforms
[23:07:15] <Moonlight> very big brain language organization discussion :)
[23:07:36] <jabberwok> xq:  Data::Dumper prints the HASH(0x...) values, not because they are useful but because you can at least compare them in the printout
[23:08:39] <xq> looks like LeoNerd had this idea too https://metacpan.org/release/PEVANS/stringification-0.01_003/view/lib/stringification.pm
[23:08:39] <Paperbot_> Link title(s): [ stringification - allow or forbid implicitly converting references into strings - metacpan.org ]
[23:09:41] *** Joins: Guest46 (~Guest46@p200300c49f2c7e01a5bd7d54dc525410.dip0.t-ipconnect.de)
[23:10:58] <xq> the way I see it, 'get an underlying address of a variable' belongs somewhere in Devel::
[23:11:00] <huf> that code is full of real pps
[23:11:01] <huf> ooer
[23:13:32] *** Joins: Kharec (~Kharec@lfbn-lyo-1-2099-53.w90-66.abo.wanadoo.fr)
[23:13:57] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[23:14:46] <jabberwok> would it be desirable for S::O::Equ to compare without stringifying references
[23:15:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[23:16:31] * GumbyPAN CPAN Upload: App-Music-ChordPro-5.982 by JV https://metacpan.org/release/JV/App-Music-ChordPro-5.982
[23:19:14] <xq> thrig: your lisp example is non-representative though.
[23:19:35] <xq> a real language with a real type system `$ref eq $string` would throw, no questions asked
[23:19:55] <xq> 'eq' in the above code is the important part, meaning string equality operator
[23:20:06] <xq> common lisp string equality operator is string=
[23:20:40] *** Quits: Kharec (~Kharec@lfbn-lyo-1-2099-53.w90-66.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[23:20:40] <xq> and since common lisp is a real language with a real type system, string= properly throws on string and non-string argument
[23:21:09] <xq> specifically:
[23:21:13] <xq>   The value #<FUNCTION FOO> is not of type (OR (VECTOR CHARACTER) (VECTOR NIL) BASE-STRING SYMBOL CHARACTER)
[23:21:29] <xq> this is what perl would do if it was sane
[23:21:46] <xenu> the real solution is not to have references at all and instead just use variable names and uplevel, tcl style
[23:22:41] <ehuelsmann[m]> I can't remember Common Lisp having references.
[23:23:10] *** Quits: Moonlight (~Moonlight@64.253.17.182) (Ping timeout: 256 seconds)
[23:23:46] <xq> reference or symbol or anything else does not matter in principle
[23:24:18] <xq> what matters is, if you feed a non-string parameter to a string comparison function, exception is the only reasonable result
[23:24:50] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Remote host closed the connection)
[23:25:12] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[23:28:47] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-5-6.prtc.net) (Ping timeout: 256 seconds)
[23:29:23] <huf> let's hope LeoNerd's idea gets implemented so we can do ==:<eq> and eq:<==>
[23:29:30] <huf> that was the idea, right? :D
[23:31:07] *** acidsys is now known as cranberry
[23:31:26] *** cranberry is now known as Lysergsaeure
[23:32:16] <xq> was it?
[23:32:58] *** Quits: Guest46 (~Guest46@p200300c49f2c7e01a5bd7d54dc525410.dip0.t-ipconnect.de) (Quit: Client closed)
[23:34:05] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[23:35:46] *** Joins: eramirez (~eramirez@49.149.131.61)
[23:39:06] <jabberwok> . =< =< O= =< * . .     Uh-oh (  A> STARTREK )
[23:39:12] *** Quits: thrig (~thrig@65.113.153.50) (Ping timeout: 245 seconds)
[23:46:25] *** Quits: adherzog (uid387168@id-387168.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[23:47:20] <LeoNerd> huf: What even would that mean? :P
[23:48:08] <huf> LeoNerd: :)
[23:48:31] <LeoNerd> I wonder if I could get a  :P  hyperoperator somehow
[23:48:50] <xq> what would that do?
[23:49:00] <huf> we'll figure that out later
[23:49:07] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[23:51:40] <LeoNerd> Well, I feel that a  :U  would do an undef-aware variant
[23:51:55] <LeoNerd> eq:U  ==:U  =~:U  etc
[23:52:35] <xq> I need this
[23:52:51] <huf> :UwU ? :)
[23:53:16] *** Joins: ZZzz (~ZZzz@213.57.70.168)
[23:55:07] *** Quits: ufobat__ (~martin@dynamic-077-004-014-173.77.4.pool.telefonica.de) (Ping timeout: 252 seconds)
[23:55:07] *** Quits: eramirez (~eramirez@49.149.131.61) (Read error: Connection reset by peer)
[23:55:38] *** Joins: Maaaanu (~manuel@91.65.193.123)
[23:56:46] *** Joins: eramirez (~eramirez@49.149.131.61)
