[00:00:13] *** Joins: zircona (~zircona@c-73-207-108-132.hsd1.ga.comcast.net)
[00:00:20] *** Quits: zircona (~zircona@c-73-207-108-132.hsd1.ga.comcast.net) (Client Quit)
[00:00:27] *** Quits: luva (~luva@185.168.9.233) (Quit: Ping timeout (120 seconds))
[00:00:30] <Guest1778> I thought conda environments did not come with python
[00:00:45] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[00:00:53] <Guest1778> isn't that the whole point of environments? To keep versions of packages separate ?
[00:01:03] *** Joins: luva (~luva@185.168.9.233)
[00:01:19] <jinsun> the base environment comes with python, because conda itself needs python
[00:01:38] <Repiphany> Batzy: My guess is that children aren't properly being created with the proper parent so you're not increasing the depth
[00:01:42] <jinsun> if you create a new environment it won't have python (unless you ask for it, or you config says to install it)
[00:01:52] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[00:01:55] <Batzy> Repiphany: the depth just gets passed through
[00:01:57] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[00:02:07] <Repiphany> The depth of the current node
[00:02:08] <Batzy> so if initialize with depth 4, the depth attribute should be 4 for all nodes
[00:02:11] <Guest1778> I ran conda install Python and 3.8.5 is what I was given
[00:02:12] <Repiphany> Not the max depth
[00:02:18] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Read error: Connection reset by peer)
[00:02:20] <Batzy> i can get the depth of the current node with len(str(node))
[00:02:25] <Batzy> or len(str(self))
[00:02:26] <Batzy> really
[00:02:29] <Repiphany> and that's what I'm saying isn't being increased
[00:02:30] <Batzy> oh wait
[00:02:35] <Batzy> you have a good point
[00:02:35] <Batzy> sec
[00:02:48] <Batzy> Repiphany: u genius
[00:02:48] <Batzy> ok
[00:02:57] *** Quits: humbertowoody (~humbertow@148.204.6.250) (Ping timeout: 240 seconds)
[00:03:00] *** Joins: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[00:03:20] <jinsun> Guest1778: doesn't sound right, unless you are using very old version of conda
[00:03:24] <jinsun> check conda --version
[00:03:39] <jinsun> should be 4.11
[00:03:40] <Batzy> Repiphany: i think it's working :))))
[00:03:50] <Guest1778> 4.11 indeed
[00:03:54] *** Joins: dtg01100 (~dtg01100@199.21.141.37)
[00:04:09] <Repiphany> Batzy: By the way if you're keeping all of the child nodes in an array instead of dynamically creating them, you are just essentially creating the whole tree
[00:04:24] <Batzy> Repiphany:  ah yeah, idk how to get around that
[00:04:30] *** Joins: Guest99 (~Guest99@2a00:f41:9015:6ab7:0:52:c2b4:8501)
[00:04:44] *** Quits: Guest99 (~Guest99@2a00:f41:9015:6ab7:0:52:c2b4:8501) (Client Quit)
[00:05:00] <Repiphany> Have a function that returns all the child nodes without storing them in that list
[00:05:01] <Guest1778> oh well, I upgraded it
[00:05:04] <Batzy> Repiphany: maybe i dont use the children array, i just make an array there that's thrown away at each call?
[00:05:16] <Batzy> what
[00:05:20] <Batzy> how would i link them
[00:05:21] <Batzy> if not storing it
[00:05:53] <Repiphany> The parent node doesn't need to be aware of its children, only the children need to know the parent
[00:06:03] <Guest1778> :)  https://i.imgur.com/5UgruaW.png
[00:06:56] <Batzy> Repiphany: but if you're calling this function on a root node, how do i find the children..?
[00:07:16] *** Joins: audiobirb (~audio@user/audio)
[00:07:20] <Repiphany> The whole point was that they could be generated dynamically somehow
[00:07:57] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 240 seconds)
[00:08:12] *** Quits: audiobirb (~audio@user/audio) (Remote host closed the connection)
[00:08:26] *** Quits: luva (~luva@185.168.9.233) (Quit: Ping timeout (120 seconds))
[00:08:40] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[00:09:01] *** Joins: luva (~luva@185.168.9.233)
[00:09:03] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:09:03] <Batzy> ok hang on then
[00:09:23] *** Joins: lidless (lidless@user/lidless)
[00:09:24] <Batzy> so instead of "for child in self.children"
[00:09:36] <Batzy> ill just allocate a list there, and push the children, and run the loop on them
[00:09:49] <Batzy> and itll deallocate later on
[00:10:28] <Repiphany> Sure
[00:10:32] *** Joins: KeiraT (~k@lulzsec.co.uk)
[00:10:33] *** Joins: audio (~audio@user/audio)
[00:11:22] <Batzy> hm
[00:11:51] <Batzy> it breaks my len(str(self))
[00:12:06] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[00:12:14] <stewie925> hey guys, am working on python `concurrent.futures.ThreadPoolExecutor` - if no `max_workers=` is passed,  does it  default to  `max_workers=os.cpu_count()` ?
[00:12:21] <Batzy> oh nvm
[00:12:22] <Batzy> i got it
[00:12:24] <Batzy> Repiphany: woooo
[00:12:33] <Batzy> this is black magic man ill have to figure out wtf `yield from` is
[00:12:58] <Repiphany> `yield from x` is the same as `for elem in x: yield elem`
[00:13:03] *** Quits: KeiraT (~k@lulzsec.co.uk) (Client Quit)
[00:13:19] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:44d8:1b81:5bb3:bc9) (Quit: pvergain)
[00:13:30] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:14:02] <ssbr> it's a bit more than that (also forwards coroutine stuff along), but otherwise that.
[00:14:14] <Batzy> ssbr: i guess i am only using this part ofi t
[00:14:22] <Batzy> that's amazing
[00:14:39] <ssbr> Batzy: the coroutine features of generators have nearly no reason to exist anymore.
[00:14:44] <ssbr> so it's no surprise
[00:15:30] <Batzy> really cool stuff
[00:15:53] *** Quits: nomic (~nomic@185.198.243.198) (Quit: Leaving)
[00:16:14] *** Joins: nomic (~nomic@185.198.243.198)
[00:17:01] <jinsun> stewie925: no, depends on your python version, for 3.8+ it is min(32, os.cpu_count() + 4), see the docs https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor
[00:17:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[00:17:39] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[00:17:45] <stewie925> jinsun: hey, thanks man - yes I am running on 3.8+
[00:18:57] *** Quits: MikZyth (~MikZyth@host-192-158-66-217.spbmts.ru) (Ping timeout: 240 seconds)
[00:19:14] *** Joins: fikran (~fikran@user/fikran)
[00:19:29] <Guest1778> What does this do: "sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys D6BC243565B2087BC3F897C9277A7293F59E4889" from https://miktex.org/download ?
[00:19:45] *** Joins: MikZyth (~MikZyth@host-6-156-66-217.spbmts.ru)
[00:19:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[00:20:47] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[00:21:04] <jinsun> probably something #linux would know
[00:21:52] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:22:32] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[00:22:47] *** Joins: KeiraT (~k@lulzsec.co.uk)
[00:23:23] <Batzy> Repiphany: thanks ur the greatest
[00:23:37] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:24:21] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[00:24:49] *** Joins: pycurious (~Adium@user/pycurious)
[00:26:22] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 260 seconds)
[00:26:57] *** Quits: Moosadee (~Moosadee@198.248.96.42) (Ping timeout: 240 seconds)
[00:27:17] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[00:27:25] *** Quits: luva (~luva@185.168.9.233) (Quit: Ping timeout (120 seconds))
[00:27:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:28:03] *** Joins: luva (~luva@185.168.9.233)
[00:29:56] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Quit: Leaving)
[00:30:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[00:31:31] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:31:54] *** Quits: maxzor_ (~maxzor@2a01cb04054faa00939181896acf2434.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[00:32:18] *** Quits: oneforall2 (~guru@S0106ec086bc3574f.mh.shawcable.net) (Quit: Leaving)
[00:32:40] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:32:57] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[00:33:05] *** Joins: zebrag (~chris@user/zebrag)
[00:35:14] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 260 seconds)
[00:38:20] *** Quits: foul_owl (~kerry@94.140.8.51) (Read error: Connection reset by peer)
[00:39:23] *** Joins: Elzington (~Elzington@68.235.43.110)
[00:39:43] *** audio is now known as audiobirb
[00:41:47] *** Joins: Moosadee (~Moosadee@198.248.96.43)
[00:43:57] *** Quits: MikZyth (~MikZyth@host-6-156-66-217.spbmts.ru) (Ping timeout: 240 seconds)
[00:44:06] *** Parts: bancroft (~bancroft@user/bancroft) (WeeChat 3.2)
[00:44:08] *** Joins: MikZyth (~MikZyth@host-192-158-66-217.spbmts.ru)
[00:45:08] *** Quits: avaxar (~avaxar@36.72.215.150) (Read error: Connection reset by peer)
[00:45:16] *** Joins: avaxar_ (~avaxar@36.72.214.28)
[00:46:15] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:d140:c463:bfea:917b) (Quit: Client closed)
[00:46:15] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[00:46:33] *** Quits: ajhurst (~ajhurst@142.162.112.217) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:46:41] *** Joins: tracey (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[00:47:15] *** Joins: sudomann (~sudomann@98.219.211.182)
[00:47:29] *** Quits: Guest1778 (~Guest1778@172-223-077-135.res.spectrum.com) (Quit: Client closed)
[00:49:05] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[00:49:28] *** Joins: adde9708 (uid139358@id-139358.tinside.irccloud.com)
[00:51:06] *** Quits: paul424 (~tom@ip-5-172-237-33.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[00:51:35] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[00:52:13] *** Quits: emf (~emf@2620:10d:c090:400::5:57ea) (Quit: emf)
[00:53:20] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 252 seconds)
[00:53:21] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:54:31] *** Joins: foul_owl (~kerry@23.82.194.73)
[00:55:00] *** Quits: tomg (~tomg@user/tomg) (Remote host closed the connection)
[00:55:20] *** Joins: tomg (~tomg@user/tomg)
[00:55:26] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[00:56:17] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[00:57:25] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[01:00:50] *** Joins: parv (~quass@user/parv)
[01:00:52] *** Quits: sidro (~sidro@86.126.115.212) (Quit: Konversation terminated!)
[01:01:00] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[01:01:36] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[01:03:22] *** Joins: sudomann (~sudomann@98.219.211.182)
[01:03:35] *** Quits: nicode (~nic@2607:f2c0:9545:fa00:47ff:84f1:8a69:2f9) (Ping timeout: 256 seconds)
[01:03:57] *** Joins: rtrs (~arturs@m77-219-5-227.cust.tele2.lv)
[01:04:25] *** Quits: magla (~gelignite@d5367123.access.ecotel.net) (Quit: Stay safe!)
[01:04:27] *** Joins: MrFantastik (~f@2607:f598:bbda:170:9975:1508:5896:d1b)
[01:05:05] *** Quits: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09) (Quit: harpia)
[01:05:40] *** Joins: nicode (~nic@45.72.202.17)
[01:06:35] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:07:45] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[01:07:47] *** Quits: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[01:10:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[01:11:45] *** Joins: esther (~esther@2607:fb90:20df:9d16:c627:2b27:7740:ecb9)
[01:11:50] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[01:12:11] *** Quits: rtrs (~arturs@m77-219-5-227.cust.tele2.lv) (Read error: Connection reset by peer)
[01:12:21] *** Quits: stwange (~j@82.21.202.140) (Quit: This computer has gone to sleep)
[01:12:39] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[01:13:17] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[01:16:17] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 240 seconds)
[01:16:41] *** Joins: sudomann (~sudomann@98.219.211.182)
[01:17:55] *** Joins: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no)
[01:19:12] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[01:20:25] *** Joins: hiroshi_ (~freedom@151.47.239.181)
[01:21:17] *** Quits: tracey (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[01:22:01] *** Joins: pgib (~textual@173.38.117.82)
[01:22:25] *** Joins: funhouse (~funhouse@user/funhouse)
[01:23:54] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[01:25:00] *** Quits: aslicedbanjo (~aslicedba@host86-160-16-1.range86-160.btcentralplus.com) (Quit: Leaving.)
[01:25:09] *** Joins: Pickchea (~private@user/pickchea)
[01:26:15] *** Quits: msek_ (~Username@pd9fb2073.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:27:49] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[01:28:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:28:53] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[01:29:26] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48854t3vztuu7gj.ipv6.telus.net)
[01:30:02] *** Quits: nomic (~nomic@185.198.243.198) (Quit: Leaving)
[01:30:25] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[01:30:59] <moth> What's the question?
[01:31:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[01:32:02] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[01:32:02] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[01:32:02] *** Joins: JordiGH (~jordi@user/jordigh)
[01:32:23] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 256 seconds)
[01:32:27] <moth> Oh ages late. Nvm
[01:33:01] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:33:51] *** Joins: matsaman (~matsaman@user/matsaman)
[01:34:53] *** Joins: hiroshi__ (~freedom@151.37.113.75)
[01:35:06] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:d140:c463:bfea:917b)
[01:35:12] *** Quits: hiroshi_ (~freedom@151.47.239.181) (Read error: Connection reset by peer)
[01:35:33] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[01:36:07] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 256 seconds)
[01:36:14] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:f0b8:3399:f5d8:1348)
[01:36:43] *** Quits: merrinx1 (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.4)
[01:38:23] *** Joins: ice9 (~ice9@user/ice9)
[01:39:21] *** Quits: hiroshi__ (~freedom@151.37.113.75) (Client Quit)
[01:40:14] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[01:40:15] *** Quits: cosimone (~user@93-47-228-151.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[01:43:36] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[01:44:31] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[01:46:08] *** Quits: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com) (Ping timeout: 250 seconds)
[01:46:49] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[01:46:51] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[01:46:59] *** Quits: admin123 (~harrymore@cpe-69-203-109-69.nyc.res.rr.com) (Ping timeout: 250 seconds)
[01:47:57] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 240 seconds)
[01:50:01] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[01:50:21] *** Quits: dntreou (~yakiza@105-209-145-202.access.mtnbusiness.co.za) (Ping timeout: 245 seconds)
[01:50:40] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[01:50:46] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:51:41] *** Joins: dme86 (~dan@user/dan86)
[01:51:45] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[01:52:11] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[01:52:23] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--3e.oracle-ocna.com)
[01:52:46] *** Joins: Guddu (~Guddu@59.95.234.221)
[01:53:18] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:53:32] *** Quits: luva (~luva@185.168.9.233) (Quit: Ping timeout (120 seconds))
[01:53:38] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[01:53:38] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Ping timeout: 260 seconds)
[01:53:41] *** Quits: Moosadee (~Moosadee@198.248.96.43) (Ping timeout: 256 seconds)
[01:54:10] *** Joins: luva (~luva@185.168.9.233)
[01:55:03] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[01:55:08] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[01:55:18] *** Quits: bluedust (~bluedust@117.204.128.175) (Remote host closed the connection)
[01:56:05] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[01:56:11] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[01:56:50] *** Joins: Barones (~Barones@user/Barones)
[01:57:01] *** Joins: ckdCreations (~ckdCreati@147.55.130.32)
[01:57:01] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:57:55] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[01:58:04] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[01:58:19] *** Joins: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com)
[01:58:29] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[01:58:33] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[01:58:57] *** Quits: greedom (~greedom@p200300de67146b00fd02b3152e542744.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:00:41] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[02:00:49] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 256 seconds)
[02:00:56] *** Joins: abamon (~abamon@177.37.179.167)
[02:01:40] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com)
[02:01:51] *** Joins: nomic (~nomic@185.198.243.198)
[02:02:35] *** Joins: mickey84 (~user@user/mickey)
[02:04:12] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[02:04:12] *** mickey84 is now known as mickey8
[02:04:13] *** Joins: ovelny (~ovelny@user/ovelny)
[02:04:41] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:d140:c463:bfea:917b) (Quit: Client closed)
[02:05:02] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[02:05:10] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[02:05:21] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[02:05:44] *** Joins: ovelny (~ovelny@user/ovelny)
[02:06:50] *** Joins: moose (~moose@user/moose)
[02:06:51] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[02:06:57] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[02:07:05] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[02:08:29] *** Quits: ttys000 (~ttys000@user/ttys000) (Quit: Textual IRC Client: www.textualapp.com)
[02:09:14] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48854t3vztuu7gj.ipv6.telus.net) (Quit: Leaving)
[02:09:49] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[02:10:17] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[02:10:41] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[02:10:50] *** Quits: aphysically (~aphysical@user/aphysically) (Ping timeout: 250 seconds)
[02:11:51] *** Joins: aphysically (~aphysical@user/aphysically)
[02:11:57] *** Quits: esther (~esther@2607:fb90:20df:9d16:c627:2b27:7740:ecb9) (Ping timeout: 240 seconds)
[02:13:12] *** Joins: SOMBRIO (~SOMBRIO@177.137.113.66)
[02:13:21] *** Joins: Guddddu (~Guddu@196.196.232.10)
[02:13:40] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[02:14:19] *** Quits: foul_owl (~kerry@23.82.194.73) (Ping timeout: 256 seconds)
[02:14:25] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:8731:3641:88ba:5f80) (Ping timeout: 256 seconds)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:16:01] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:21] *** Quits: Guddu (~Guddu@59.95.234.221) (Ping timeout: 256 seconds)
[02:16:33] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[02:16:45] *** Quits: moth (~moth@2600:1700:5d5c:110:c4f2:36a3:3133:522b) (Remote host closed the connection)
[02:17:03] *** Joins: moth (~moth@2600:1700:5d5c:110:2593:f021:bb3d:e62e)
[02:17:19] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: Ping timeout (120 seconds))
[02:17:39] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[02:18:23] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:d140:c463:bfea:917b)
[02:19:04] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[02:21:23] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:21:26] <p-i-> I'm struggling with regex module. I've tested my pattern on data on regex101 and it matches correctly (12 matches). But implementing in Python, I get 5 '' matches tagged onto the end.
[02:21:38] <p-i-> I'm trying to figure out where they might be coming from.
[02:21:48] *** Joins: Oddity (~Oddity@user/oddity)
[02:23:05] <p-i-> https://bpa.st/BHQA
[02:23:24] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[02:23:41] <p-i-> I can of course manually prune [m for m in matches if m] but I'd love to get to the root of the problem.
[02:23:52] <SnoopJ> p-i-, to clarify: you selected the Python flavor on the left when using regex101, right? (it defaults to PCRE2)
[02:23:55] *** Joins: Gudddu (~Guddu@59.95.234.221)
[02:24:44] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[02:25:14] <p-i-> Thanks for making me aware of that. It fails in multiple places if I set to Python.
[02:25:25] *** Quits: abamon (~abamon@177.37.179.167) (Quit: leaving)
[02:25:28] <p-i-> I thought that using regex instead of re will allow me to PCRE2 it.
[02:25:32] <p-i-> And it does work!
[02:25:33] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--3e.oracle-ocna.com) (Ping timeout: 250 seconds)
[02:25:33] *** Joins: sudomann (~sudomann@98.219.211.182)
[02:25:37] <SnoopJ> It's relatively common to assume that regular expressions are a universal language, but the truth is that it is anything but
[02:25:50] <p-i-> It just gives these unwanted extra matches.
[02:26:24] <SnoopJ> `regex` is to my knowledge supposed to be a drop-in replacement for `re` so I would not expect it to use any other flavor
[02:26:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[02:26:47] <p-i-> Pretty sure it does!
[02:27:07] <SnoopJ> Quite a trick if it does both simultaneously
[02:27:18] <p-i-> It's got a V0 V1 toggle
[02:27:21] *** Quits: Guddddu (~Guddu@196.196.232.10) (Ping timeout: 256 seconds)
[02:27:23] <p-i-> V0 is back-compat to re
[02:27:26] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.4)
[02:27:42] *** Joins: dntreou (~yakiza@105-209-145-202.access.mtnbusiness.co.za)
[02:28:02] <p-i-> I imagine it's reason to exist is to provide PCRE2
[02:28:13] *** Joins: ajhurst (~ajhurst@142.162.112.217)
[02:28:25] <p-i-> I'm using (?(DEFINE()...) in my regex, which I don't think I can do with re.
[02:28:33] <SnoopJ> is that documented somewhere, or are you guessing?
[02:28:35] *** Joins: fikran (~fikran@user/fikran)
[02:28:49] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 256 seconds)
[02:28:51] <p-i-> I'm guessing. It's 6AM ;)
[02:28:55] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[02:28:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:28:59] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[02:29:02] <p-i-> 18h codeburn
[02:29:10] <SnoopJ> mm, well bear it in mind when comparing against regex101, you'll get exactly what you ask for
[02:29:24] <p-i-> yeah noted
[02:29:32] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[02:29:41] *** Joins: emf (~emf@2620:10d:c090:400::5:c6d7)
[02:29:56] <p-i-> I'll whittle it down to a testcase and flag an issue tomorrow
[02:30:57] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:30:57] * SnoopJ suspects it will turn out to be a regex gotcha rather than a bug
[02:30:58] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[02:32:08] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:32:47] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:33:25] <lantech19446> is pycharm like an industry standard? Every class I see uses pycharm and I mean it's ok but I found it kinda clunky to be honest that's why I started using vscode
[02:35:00] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[02:35:24] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:35:26] *** Joins: foul_owl (~kerry@23.82.194.73)
[02:35:32] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[02:36:16] *** Quits: MasterK (~MK@79.117.158.53) (Remote host closed the connection)
[02:36:47] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:37:42] <meejah> lantech19446: i use emacs .. i think it's a popular "default choice"? (might be why it's shown in classes, tutorials etc)
[02:38:14] *** Quits: ajhurst (~ajhurst@142.162.112.217) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:38:22] <matsaman> lantech19446: vscode is fairly new still, by comparison
[02:39:00] <lantech19446> There's just some things I prefer about it, the one downside is that i can't use it with anaconda. I also like brackets
[02:39:07] <Timvde> lantech19446: just use whatever you feel comfortable with, really
[02:39:07] *** Quits: vladoski (~foo@2001:b07:add:d406:e59b:f4ba:39d7:98c4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:39:19] <matsaman> lantech19446: someone I know did a software development degree recently, and was asked to use an ide from JetBrains at one point and vscode at another
[02:39:40] *** Quits: yitz (~yitz@exercism/yitz) (Remote host closed the connection)
[02:39:43] <lantech19446> ok so better off knowing more than one option anyway
[02:39:47] *** Joins: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net)
[02:39:49] <Timvde> I use vim in my day job and it hasn't been a problem since forever
[02:39:58] <Timvde> I'm not even the only one :)
[02:40:04] *** Joins: yitz (~yitz@exercism/yitz)
[02:40:04] <matsaman> ditto, & ditto
[02:40:29] <matsaman> although I had trouble using Vim one time at a place that institutionalized visual studio project files
[02:40:41] <lantech19446> ok cool, of course none of this makes up for the fact that I fing blow at programming still
[02:40:43] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Ping timeout: 256 seconds)
[02:40:45] <matsaman> wasn't actually impossible, just intolerable
[02:40:58] <matsaman> lantech19446: well check the Think Python book in the /topic, it's great
[02:41:19] <lantech19446> ok
[02:41:25] <Timvde> Any decent company will give you free choice in editor (while providing for a paid license if the editor you're most comfortable with is PyCharm or another paid product), as they just want you to be productive, really
[02:42:11] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:ac8b:76d2:9030:fa62) (Quit: Client closed)
[02:42:26] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:ac8b:76d2:9030:fa62)
[02:42:50] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[02:43:09] <lantech19446> right now I'm doing a udemy class, it's good lots of projects but I lack a couple things one is experience in the thought process behind OOP and how it's structured correctly and I'm really new at python and have a tendency to jump in over my head and not be able to figure shit out. TML bailed me out on my project after like 3wks of trying to get it to work, I learned a ton over those three weeks
[02:43:11] <lantech19446> and from seeing how they did it but still makes me feel kinda bad lol
[02:43:45] *** Joins: ttys000 (~ttys000@user/ttys000)
[02:44:06] *** Quits: AlexisTP (~AlexisTP3@92.57.44.63) (Ping timeout: 245 seconds)
[02:44:57] *** Joins: BillyZane2 (~BillyZane@185.202.221.34)
[02:45:04] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[02:45:06] <SnoopJ> lantech19446, text editors edit text. Some people like the way PyCharm edits text, some people don't.
[02:45:13] <matsaman> compared to buying you a computer, the editor is nothing
[02:45:46] <matsaman> lantech19446: can't recommend the 'New programmer?' book in /topic enough
[02:45:52] <lantech19446> as long as they give me linux and a computer with moderate power i'm set I'm really not hard to please
[02:46:18] <lantech19446> matsaman: I was actually just about to say wow this book looks really good and it covers one of the things I think I'm missing most, how to think in programming
[02:46:34] <lantech19446> and best of all it's free
[02:47:02] <matsaman> lantech19446: it's really great
[02:47:10] <matsaman> covers OO, too
[02:47:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[02:47:23] <matsaman> and honestly, you could go through it in a day
[02:47:30] <lantech19446> really?
[02:47:37] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:47:47] <matsaman> yeah. It might be nice to linger on some subjects to really get your head around them, but you could definitely do it in a day
[02:47:49] <lantech19446> it's 244 pages how do you get through that in a day?
[02:47:52] *** Quits: oriba (~oriba@dynamic-077-191-002-071.77.191.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:48:11] <matsaman> because English is easy to get through, and the actual code/coding parts are really really straightforwardly presented
[02:48:26] <Timvde> lantech19446: who said anything about "in a day"?
[02:48:30] <matsaman> I did
[02:48:31] <Timvde> Oh, nvm
[02:48:35] <Timvde> Missed that :P
[02:48:38] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[02:48:39] *** Quits: BillyZane (~BillyZane@185.202.221.34) (Ping timeout: 256 seconds)
[02:48:39] *** Joins: Cyp_ (~cyp@213.237.87.142)
[02:49:07] <Timvde> I haven't read the book, but I can't imagine a beginner going through any programming book in a day and actually getting something meaningful from it tbh
[02:50:32] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:51:29] *** Quits: Cyp (~cyp@213.237.88.120) (Ping timeout: 256 seconds)
[02:52:02] *** Joins: ajhurst (~ajhurst@142.162.112.217)
[02:52:07] <lantech19446> I really appreciate this channel though, I've learned more from the people here and from struggling than I have through the course but the course gave me a decent basic overview
[02:52:50] <Timvde> lantech19446: you learn the most by doing and discussing with more experienced people, it's like that with most skills
[02:53:06] <Timvde> If I compare my skill level now to when I just graduated, it's a crazy difference
[02:53:17] * SnoopJ remembers fondly a line of books titled "Learn X in 24 Hours"
[02:53:39] <lantech19446> SnoopJ: I used one for java in college I learned a six week class in 3 days it was awesome
[02:53:39] <SnoopJ> (yes, it was all marketing)
[02:53:44] <p-i-> https://learnxinyminutes.com/
[02:54:03] *** Quits: wallsY (~weechat@c-73-211-135-175.hsd1.il.comcast.net) (Changing host)
[02:54:03] *** Joins: wallsY (~weechat@user/wallsY)
[02:54:09] <p-i-> It always used to be "30 days" when I was at school
[02:54:26] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[02:54:30] <lantech19446> Timvde: fortunately the people here seem to get less frustrated than in some channels and I'm probably too hard on myself but I really want to get into devops and I feel like this is my biggest road block
[02:54:34] <SnoopJ> perhaps it was "Teach yourself X in 24 Hours" but either way, it's just marketing fluff.
[02:55:58] <Timvde> lantech19446: people here can definitely be some of those more experienced people :)
[02:56:20] <Timvde> I'm not too active in this channel myself, but I learned a lot of things by talking to people on IRC
[02:56:47] *** Joins: pycurious (~Adium@user/pycurious)
[02:57:03] <lantech19446> I'm amazed at the level of knowledge in some of the channels I'm in. I was depressed for the last 30yrs and honestly I don't know anything as thoroughly as some of these people do it's incredible
[02:57:08] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:57:09] *** Quits: avaxar_ (~avaxar@36.72.214.28) (Remote host closed the connection)
[02:57:19] *** Joins: stwange (~j@82.21.202.140)
[02:57:24] <wallsY> "Teach yourself X in 30 days of lunches" was a decent series
[02:58:17] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[02:58:30] *** Joins: avaxar (~avaxar@36.72.214.28)
[02:58:38] <lantech19446> lol i think this is kinda funny actually i'm skimming over the contributors and one of the guys found a bug in the debugging section
[02:58:51] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 256 seconds)
[02:58:53] *** Joins: portalrat (~portalrat@user/portalrat)
[02:58:59] *** Quits: adde9708 (uid139358@id-139358.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:59:42] <matsaman> IRC is great
[02:59:44] *** Joins: sudomann (~sudomann@98.219.211.182)
[02:59:46] <MacGyver> Timvde: Heh. I'll take that as a compliment.
[03:00:07] <matsaman> something else, the author of that book is actually a person you can reach
[03:00:08] <Timvde> MacGyver: You can, you're definitely one of those people :)
[03:00:13] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:00:17] <matsaman> if you find a bug, he'll hear you
[03:00:39] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[03:00:40] <lantech19446> yea gotta love open source
[03:00:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:01:13] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:02:39] *** Quits: Polyblank (~Polyblank@user/polyblank) (Quit: Leaving)
[03:03:00] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[03:04:29] *** Quits: stwange (~j@82.21.202.140) (Quit: This computer has gone to sleep)
[03:04:30] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[03:04:32] *** Quits: ovelny (~ovelny@user/ovelny) (Quit: leaving)
[03:04:40] <p-i-> regex101 is the bomb
[03:05:02] *** Joins: ovelny (~ovelny@user/ovelny)
[03:05:05] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 256 seconds)
[03:05:14] *** Quits: Gudddu (~Guddu@59.95.234.221) (Quit: Leaving)
[03:05:15] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[03:05:25] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:06:08] *** Joins: ovelny (~ovelny@user/ovelny)
[03:06:11] *** Joins: MercilessDeth (~brad@136.49.59.177)
[03:06:12] *** Quits: ovelny (~ovelny@user/ovelny) (Client Quit)
[03:07:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[03:08:39] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[03:08:47] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[03:09:03] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:09:20] *** Joins: nilson (~nilson@2601:c4:c430:23d:4601:bbff:feaf:9214)
[03:09:52] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[03:09:54] *** Joins: ovelny (~ovelny@user/ovelny)
[03:10:04] *** Quits: voidiov (~voidiov@2a02:2f0e:6203:4c00:5192:8373:f586:1f80) (Remote host closed the connection)
[03:10:25] *** Joins: duuude (~user@user/duuude)
[03:11:03] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[03:11:08] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:11:18] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:11:30] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:60ef:8113:9157:1102) (Ping timeout: 250 seconds)
[03:11:37] *** Joins: sudomann (~sudomann@98.219.211.182)
[03:12:02] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[03:13:41] *** Joins: p-i-_ (~Ohmu@183.89.35.200)
[03:14:18] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:14:28] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[03:14:28] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[03:14:28] *** Joins: JordiGH (~jordi@user/jordigh)
[03:15:21] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[03:15:25] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[03:15:51] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:15:51] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:16:47] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Client Quit)
[03:17:00] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710)
[03:17:13] *** Quits: foul_owl (~kerry@23.82.194.73) (Ping timeout: 256 seconds)
[03:17:19] *** Quits: p-i- (~Ohmu@mx-ll-183.89.35-200.dynamic.3bb.co.th) (Ping timeout: 256 seconds)
[03:18:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[03:18:55] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[03:19:07] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:19:35] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:20:25] *** Joins: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c)
[03:20:27] *** Joins: jonthesnow (~xizhendu@36.112.179.225)
[03:20:46] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[03:21:35] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[03:21:57] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Quit: ThePhilgrim)
[03:22:17] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[03:22:39] *** Joins: CombatVet (~c4@user/combatvet)
[03:22:53] *** Quits: alnr (~alnr@38.125.204.99) (Read error: Connection reset by peer)
[03:22:55] *** Quits: ajhurst (~ajhurst@142.162.112.217) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:22:57] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 240 seconds)
[03:23:13] *** Quits: dntreou (~yakiza@105-209-145-202.access.mtnbusiness.co.za) (Ping timeout: 256 seconds)
[03:23:15] *** Joins: alnr (~alnr@38.125.204.99)
[03:24:01] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[03:24:43] *** Joins: Bakunin (~maplefing@user/lindis)
[03:25:01] *** Joins: ajhurst (~ajhurst@142.162.112.217)
[03:25:05] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710) (Quit: Leaving)
[03:25:21] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710)
[03:25:29] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[03:25:29] *** Joins: Moosadee (~Moosadee@198.248.96.43)
[03:25:46] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[03:26:52] <cl> I have two datasets of timeseries data. One is significantly higher time resolution than the other. Is there a ready built function from numpy or scipy or somewhere that will let me pull elements from the higher frequency data that most closely corresponds to the lower frequency data?
[03:27:30] <cl> the resample functions I've found so far assume you want N evenly spaced samples in the result, but I want "whatever most closely matches, within some tolerance"
[03:28:08] <p-i-_> Sounds a little vague
[03:28:50] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[03:29:04] <p-i-_> why not just resample the HF to the LF
[03:29:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:29:50] <cl> p-i-_: that's what I said, as long as you're not talking about interpolating anything
[03:30:21] <cl> the time values are sparse, and not necessarily aligned, so I can't just index the HF array with the LF data
[03:30:32] *** Quits: someone235 (uid419897@id-419897.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:30:55] <p-i-_> evenly time-spaced on both signals?
[03:30:59] <cl> nope
[03:31:25] <p-i-_> so you need to curve fit maybe?
[03:31:41] *** Joins: foul_owl (~kerry@217.114.38.61)
[03:32:08] <cl> I mean, the simplest way to code it is to calculate the min difference between x0[i] and the elements of x1, then check if the distance is less than the tolerance, and if so, add it to an output
[03:32:13] <cl> but that's going to be super slow
[03:32:17] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[03:32:27] <cl> unless there's a vectorized way of doing it with np or something
[03:32:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[03:32:45] <p-i-_> If you're worried about performance check out numba
[03:33:15] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[03:33:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c) (Ping timeout: 240 seconds)
[03:33:24] <p-i-_> It jit-compiles python thru LLVM to get within 50% of C performance
[03:33:54] <p-i-_> But you can nearly always pull some numpy/scipy voodoo
[03:33:59] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[03:34:14] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 256 seconds)
[03:34:33] *** Quits: dreamon (~dreamon@p54b14d36.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:34:52] <Celelibi> numpy voodoo ♥
[03:35:20] <p-i-_> so you're trying to measure level of correlation between 2 datasets over time?
[03:35:34] *** Joins: Bardon (~Bardon@user/Bardon)
[03:35:37] *** Joins: CombatVet (~c4@user/combatvet)
[03:36:07] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[03:36:23] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[03:36:32] <Celelibi> This reminds me of Dynamic Time Warping.
[03:36:47] <Celelibi> https://en.wikipedia.org/wiki/Dynamic_time_warping
[03:37:07] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[03:37:42] <Celelibi> Although, this might not be needed here.
[03:38:54] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[03:39:12] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[03:39:26] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[03:39:52] <Celelibi> cl, If you're ready to accept a complexity of O(nm) (bilinear run time and space) you can use broadcasing with numpy to get the time difference between each pair of valies from the datasets X and Y.
[03:40:02] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 260 seconds)
[03:40:10] <cl> Celelibi: that would need something like 2 TB mem
[03:40:14] <cl> :(
[03:40:19] <cl> ask me how I know... lol
[03:40:25] <Celelibi> lol :D
[03:40:28] <p-i-_> "how to interpolate non linear sampled time data" might be a good goole search
[03:40:37] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 240 seconds)
[03:40:45] <p-i-_> and throw 'scipy' in for good luck
[03:41:07] <p-i-_> you'll probably find something off the shelf
[03:41:11] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[03:41:21] <p-i-_> It's a common enough problem
[03:41:24] <cl> it's not interpolation
[03:41:24] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[03:41:31] *** Joins: CombatVet (~c4@user/combatvet)
[03:41:33] <Celelibi> cl, well, look for a DTW implementation. It's basically a shortest path algorithm IIRC.
[03:41:46] <cl> I want the value from the array that's closest to the corresponding time in the other array, no interpolation
[03:41:50] <p-i-_> yeah but if you interpolate both datasets, you can work with the interpolated values
[03:42:04] <cl> searchsorted might be it, that or bisect, but still having to loop there
[03:42:59] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[03:43:04] <Celelibi> Or use a KNN with k=1.
[03:43:31] <Celelibi> sklearn has some nice data structures to speed up the search.
[03:43:40] <p-i-_> yeah you could splice the 2 sigs as tuples. Each sample is (time, value, dataset#).
[03:43:42] <NeilRG> what's the problem?
[03:43:49] <p-i-_> Then just merge and sort by time
[03:43:52] <NeilRG> you have two datasets and you want to find the closest pair?
[03:44:08] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[03:44:08] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[03:44:13] <cl> NeilRG: for all values of the lower resolution array
[03:44:16] <cl> yes
[03:44:18] <NeilRG> if this is low-dimensional data, you can solve this with dynamic programming
[03:44:21] <Celelibi> NeilRG, for all the samples in dataset X, find the closest in dataset Y.
[03:44:33] <NeilRG> how many dimensions?
[03:44:34] <cl> it's timeseries data
[03:44:45] <SnoopJ> searchsorted() +1
[03:44:46] <NeilRG> yes, but how how many dimensions per point?
[03:44:49] <Celelibi> 1 dimension. It's only about the time.
[03:44:56] <cl> so there's actually x0, y0, x1, y1, and I'm trying to align on x's
[03:45:00] <cl> all are 1D arrays
[03:45:01] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[03:45:19] <cl> so technically 2d data
[03:45:22] *** Joins: CombatVet (~c4@user/combatvet)
[03:45:22] <NeilRG> for each x_i, you want to find the nearest y_i?
[03:45:31] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[03:45:42] <NeilRG> or for each pair (x, y)_i, you want to find a nearest pair (z, w)_j ?
[03:45:47] <cl> that one
[03:45:50] <NeilRG> which one?
[03:45:53] <cl> second
[03:46:08] <NeilRG> you can find the dynamic programming algorithm in Udi Manber's algorithm's book
[03:46:09] <cl> and "nearest" is defined only in time (x and z) values
[03:46:20] <NeilRG> oh
[03:46:26] <SnoopJ> for each point in x0, find the closest corresponding point in x1, is how I understood it (the y values are just the samples)
[03:46:27] <NeilRG> if it's just x and z then it's the first problem then
[03:46:39] <p-i-_> you want nearest euclidean distance?
[03:46:43] <NeilRG> so just sort both lists (the firsrt by x and and the second by z)
[03:46:47] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:46:50] <NeilRG> and then you can solve this problem in linear time
[03:47:02] <cl> NeilRG: I mean, I'll need the pairs eventually, but the comparison doesn't involve the values of the y/w data
[03:47:06] <NeilRG> so total time is nlogn + mlogm
[03:47:12] <NeilRG> needing the pairs is irrelevant
[03:47:21] <NeilRG> to the time complexity
[03:47:33] <NeilRG> this is linearithmic
[03:47:33] <SnoopJ> that looks decidedly not-linear
[03:47:53] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[03:47:58] <NeilRG> SnoopJ, yeah, i said "and *then* you can solve it from there in linear time"
[03:48:04] <NeilRG> the sort is obviously linearithmic
[03:48:07] <cl> NeilRG: worth noting these not regularly spaced
[03:48:18] <NeilRG> cl, doesn't matter
[03:48:20] <Celelibi> Chances are, the datasets are already sorted.
[03:48:30] <cl> they are (supposed to be)
[03:48:39] <cl> I could sort them in advance to be sure
[03:48:42] <SnoopJ> NeilRG, computing every paired distance is also linear, but it blows up in memory.
[03:49:01] <SnoopJ> since they're already monotonic, searchsorted() should I think be logarithmic (it's basically a binary search)
[03:49:05] <NeilRG> SnoopJ, no.  Computing every paired distance is Omega(mn), which is not linear.
[03:49:11] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 250 seconds)
[03:49:18] <SnoopJ> NeilRG, (2*m)*n is 2*(m*n)
[03:49:33] <AhmedAmerican> what do you think about my Function here ? https://bpa.st/32EQ i there more Pythonic way than this ? actually am calling an `API` which return `JSON` and then i pickup the desired data while i keep navigate to the `next_url` if it's returned on each call.
[03:49:37] <NeilRG> SnoopJ, yes, and that's not linear.   And the searchsorted idea is also quadratic.
[03:49:45] <SnoopJ> it's bilinear if you want to be a pedant about it
[03:49:46] <NeilRG> actually worse than quadratic
[03:49:52] <NeilRG> SnoopJ, no.  it's quadratic.
[03:50:05] <Celelibi> It's bilinear, you have two variables.
[03:50:11] <SnoopJ> NeilRG, why is searchsorted quadratic?
[03:50:18] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 260 seconds)
[03:50:27] <NeilRG> because you iterate over every x, and search for each one
[03:50:28] <NeilRG> gotta run
[03:50:29] <NeilRG> gn
[03:50:48] <SnoopJ> it'll be M*ln(N) or the other way around
[03:50:59] <SnoopJ> (so I guess I lied, it's linear in one, logarithmic in the other)
[03:52:05] <SnoopJ> (that's worst case, I believe; numpy might take some shortcuts)
[03:53:04] *** Joins: smoke (~smoke@user/smoke)
[03:54:47] *** Quits: smoke (~smoke@user/smoke) (Client Quit)
[03:55:25] *** Quits: nilson (~nilson@2601:c4:c430:23d:4601:bbff:feaf:9214) (Remote host closed the connection)
[03:55:55] *** Joins: bluedust (~bluedust@117.204.128.175)
[03:56:06] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[03:56:07] *** Joins: crashrep (~crashrep@user/crashrep)
[03:56:57] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:57:40] *** Quits: ajhurst (~ajhurst@142.162.112.217) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:58:44] <AhmedAmerican> what do you think about my Function here ? https://bpa.st/32EQ is there more Pythonic way than this ? actually am calling an `API` which return `JSON` and then i pickup the desired data while i keep navigate to the `next_url` if it's returned on each call.
[03:59:38] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[03:59:53] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[04:00:00] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[04:00:16] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[04:00:37] *** Quits: bluedust (~bluedust@117.204.128.175) (Ping timeout: 240 seconds)
[04:00:49] *** Quits: strugee_ (~strugee@173.211.12.73) (Quit: ZNC - http://znc.in)
[04:00:54] *** Quits: nfc_ (nfc@tilde.institute) (Ping timeout: 250 seconds)
[04:01:20] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[04:01:26] *** Joins: Wulf (~Wulf@user/wulf)
[04:03:44] <Celelibi> AhmedAmerican, you might want to use a generator there to delay the query to the next_url until it's really needed.
[04:04:01] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[04:04:36] <AhmedAmerican> Celelibi: what do you mean by that? `next_url` will include only one url !
[04:04:41] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:05:20] <Celelibi> I mean, do you always need ALL the data returned from whole chain of next_url?
[04:05:40] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:05:53] <Celelibi> Or do you sometimes need only the beginning?
[04:06:01] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:06:05] *** Quits: ExpiredKebab (~sgreadly@2407:7000:8995:c103:9110:ac9e:1aa8:97f5) (Ping timeout: 250 seconds)
[04:06:10] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[04:06:19] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:06:25] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:06:57] <Celelibi> This kind of API often has some quota and rate limit. You might want to avoid making queries you don't need.
[04:07:09] <Celelibi> But if you don't care about that, then your code is pretty good.
[04:07:31] <Celelibi> I mean, just a few stylistic adjusments could be made.
[04:08:14] *** Joins: ExpiredKebab (~sgreadly@118-93-42-129.dsl.dyn.ihug.co.nz)
[04:08:30] *** Joins: Barones (~Barones@user/Barones)
[04:08:37] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[04:08:45] *** Joins: Cyp (~cyp@213.237.87.142)
[04:08:47] *** Quits: Cyp_ (~cyp@213.237.87.142) (Ping timeout: 256 seconds)
[04:08:48] *** Quits: lothar_m (~lothar_m@user/lothar-m/x-8875873) (Quit: WeeChat 3.5-dev)
[04:08:55] <Celelibi> Like merging the "if" line 16 and the "while" line 19. They're redundant. Store r.json() once instead of calling the json method each time.
[04:09:25] <AhmedAmerican> Celelibi: i pickup 1k tickers from the page using `[x['ticker'] for x in r.json()['results']]` do  you meant that i need to make `symbols` as generator
[04:09:27] <Celelibi> Maybe use the + operator on lists rather than the extend method.
[04:09:41] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[04:09:56] <Celelibi> I mean make get_symbols a generator.
[04:10:34] <AhmedAmerican> get_symbols is an Function within `Trio` and Trio advise of not using async generator within it
[04:10:56] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:11:09] <Celelibi> Ah. Well, I never used Trio.
[04:11:19] <AhmedAmerican> https://trio.readthedocs.io/en/stable/reference-core.html#finalization
[04:11:54] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[04:12:09] *** Quits: grimvar (~grimvar@i5C75F569.versanet.de) (Ping timeout: 250 seconds)
[04:13:34] <altendky> i guess the alternative form is shoving the results through a channel.  you still get the lazy effect due to backpressure+cancellation if you stop early.  not that i know if you need that here.
[04:13:54] *** Joins: grimvar (~grimvar@i5C75F553.versanet.de)
[04:15:27] *** Joins: kaiseisei (~Thunderbi@171.116.215.250)
[04:16:45] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com)
[04:16:49] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[04:17:04] <Celelibi> Oh, yes, an async queue would work too.
[04:17:31] <Celelibi> But it honnestly just make the issue mentioned in the trio doc more explicit.
[04:17:38] *** Quits: kaiseisei (~Thunderbi@171.116.215.250) (Client Quit)
[04:18:03] *** DarkTrick_ is now known as DarkTrick
[04:18:03] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[04:18:10] <Celelibi> Your producer task will just never terminate of you don't consume all the data.
[04:18:52] <AhmedAmerican> Celelibi: like that -> https://bpa.st/5ZGA
[04:19:15] <AhmedAmerican> altendky: i think yes, i will move to channel to continue my operation ASAP i got the ticker name
[04:19:28] <AhmedAmerican> instead of appending to list and wait till it's done then run the second operation.
[04:19:40] *** Joins: kaiseisei (~Thunderbi@171.116.215.250)
[04:19:41] <Celelibi> AhmedAmerican, while 'next_url' in r.json()
[04:20:00] *** Quits: kaiseisei (~Thunderbi@171.116.215.250) (Client Quit)
[04:20:02] <Celelibi> The value of r would change on every iteration, but that's ok.
[04:20:22] <altendky> Celelibi: but handily trio guarantees shutdown unlike other places where tasks float disconnected from the rest of your program
[04:20:44] <altendky> all depends on the bigger picture though
[04:21:14] *** Quits: Guest7003 (~vit@chello085216193138.chello.sk) (Ping timeout: 252 seconds)
[04:21:33] <Celelibi> altendky, it would handle the case with a queue communication?
[04:22:53] <AhmedAmerican> Celelibi: https://bpa.st/PXFQyou meant like that ?
[04:22:59] <AhmedAmerican> https://bpa.st/PXFQ ^
[04:23:13] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[04:23:19] <altendky> Celelibi: rather than `asyncio.create_task()` where the task is entirely disconnected and you can just never await nor cancel it etc, with trio you `async with trio.open_nursery() as nursery:` and then `nursery.start_soon(your_source_task, a_channel_send_side)`.  you won't leave the nursery context manager without `your_source_task` either ending itself or getting cancelled (and ending).
[04:23:46] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[04:24:11] <altendky> structured concurrency is basically about requiring that you glue your sub-task stacks to their parent-task stacks so that cancellation can propagate down, errors can propagate up, and you know how long things might live
[04:24:12] <Celelibi> AhmedAmerican, symbols += [...]
[04:24:25] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:24:54] <AhmedAmerican> why `+=` ? >>> [1 , 2, 3] + [4, 5, 6]
[04:24:54] <AhmedAmerican> [1, 2, 3, 4, 5, 6]
[04:25:27] <Celelibi> x = 3; x + 2
[04:25:35] <Celelibi> It's 5, right. But x is still 3.
[04:26:21] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:26:48] <AhmedAmerican> ops my mistake, thank you. got it now
[04:27:07] *** Joins: jeho1 (~jehoshaph@c-73-96-96-243.hsd1.or.comcast.net)
[04:27:07] *** Quits: jeho1 (~jehoshaph@c-73-96-96-243.hsd1.or.comcast.net) (Changing host)
[04:27:07] *** Joins: jeho1 (~jehoshaph@user/jehoshaphat)
[04:27:29] *** Joins: Nintendo (~smb3@user/great)
[04:27:34] *** Quits: jeho1 (~jehoshaph@user/jehoshaphat) (Client Quit)
[04:28:12] <Celelibi> altendky, looks nice.
[04:28:16] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[04:28:27] <altendky> Celelibi: it's a different world
[04:28:30] <Celelibi> If it were standard, I might use it. :)
[04:29:02] <altendky> Celelibi: i think i've heard inklings that asyncio might be interested in the concept.  but...  all the standard stdlib-vs-3rd-party stuff
[04:29:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:30:17] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 240 seconds)
[04:30:19] <Nintendo> I have a listening, server socket wrapped in ssl.  It accepts http requests from a proxy server.  The proxy server is localhost.
[04:30:48] <Nintendo> The http requests contain X-Forwarded-For headers with remote addresses.
[04:31:00] <Nintendo> How do I read those headers?
[04:31:13] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[04:31:25] <Nintendo> The wrapped socket only sees localhost.
[04:31:52] <Celelibi> altendky, Asynchronous programming is nice. But the issue is that there are often many third part libraries to support this, and they're fundamentally incompatible. They all want to run the main loop in the main thread.
[04:32:15] <Celelibi> So either all the libs you use rely on the same async framework, or you don't use those libs.
[04:32:32] <Nintendo> A wrapped socket looks like this, for example:  <ssl.SSLSocket fd=6, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 8444), raddr=('127.0.0.1', 42834)>
[04:32:33] <altendky> Celelibi: see anyio and as well as trio guest mode
[04:32:55] <altendky> Celelibi: most of my historical experience is with async frameworks with qt so i'm well aware `:]`
[04:33:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:33:58] <Celelibi> asyncio being standard solves most of the issue.
[04:34:17] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 240 seconds)
[04:34:26] <altendky> Celelibi: how?  it just means you can only use asyncio compat libs.  it certainly doesn't address qt integration in any way.
[04:34:42] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[04:35:29] <Celelibi> altendky, yeah but there is a standard interface. As opposed to a wild bunch of libs.
[04:35:46] <altendky> Celelibi: by 'std' you mean 'the thing in the library we call standard', i think?
[04:36:08] <altendky> it's just one of the options, the one that happens to ship in python.  there are upsides to that and downsides.
[04:36:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[04:37:10] <altendky> Celelibi: trio provides as much of a standard as asyncio does, at least for the level at which most devs are interacting with it.  it's just not included with python distributions
[04:37:57] *** Joins: fikran (~fikran@user/fikran)
[04:38:20] <Celelibi> Well, I've never really looked into trio. I don't know how well it plays with other libs that uses async stuff.
[04:38:59] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710) (Read error: Connection reset by peer)
[04:40:36] *** Joins: strugee (~strugee@steevie.strugee.net)
[04:40:51] *** Joins: grooverman (~grooverma@179.97.162.187)
[04:42:08] *** Joins: j0ma (~jonne@146.115.163.209)
[04:43:13] *** Joins: Zeturic (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net)
[04:43:32] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[04:43:54] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[04:44:03] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[04:44:05] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:44:36] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:45:00] *** Parts: sw (~sw@user/sw) ()
[04:45:04] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710)
[04:46:23] *** Quits: imp (~imp@177-131-189-195.static.sumicity.net.br) (Quit: imp)
[04:46:26] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:46:40] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Client Quit)
[04:47:40] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[04:48:13] <Celelibi> Nintendo, you have to parse the HTTP protocol one way or another if you accept HTTP requests.
[04:48:26] <Celelibi> What's the big deal with the X-Forwarded-For header?
[04:48:37] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[04:48:38] <Nintendo> Big deal?
[04:49:27] *** Parts: iflema (~ian@user/iflema) ()
[04:49:52] <Celelibi> What's harder with this header in particular?
[04:50:08] <Nintendo> It's the only one I need.
[04:50:16] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:50:17] <Nintendo> So it's not harder.  Just the only one.
[04:50:23] *** Joins: OPK (~OPK@user/opk)
[04:51:14] <Celelibi> How do you parse your HTTP requests?
[04:53:02] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:53:23] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:53:41] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[04:53:49] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[04:53:57] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:54:25] *** Joins: mat001 (~mat001@72.28.108.216)
[04:54:33] <meejah> Celelibi: asyncio is the least-good of the three main async python frameworks (IMO) .. Twisted at least can play nicely with asyncio libs (I haven't used trio "for real")
[04:55:06] *** Quits: jonthesnow (~xizhendu@36.112.179.225) (Remote host closed the connection)
[04:55:33] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[04:55:58] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[04:56:23] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[04:56:38] <Celelibi> You mean I could easily make an program that uses two modules, one that uses twisted and one that uses asyncio?
[04:56:47] <Nintendo> The proxy tacks on X-Forwarded-For and forwards the request (upgraded) to a WebSocket, Celelibi.
[04:56:50] <Celelibi> I guess it depends how they're done.
[04:57:47] <Nintendo> And the WebSocket is bound to this ssl-wrapped socket.
[04:57:55] *** Quits: revilaika (~revilaika@151.144.8.109.rev.sfr.net) (Quit: WeeChat 3.4)
[05:00:10] <altendky> Celelibi: there's the python async/await syntax.  then there are the libraries that provide event loops that can process the coroutines that are written with async/await.  options include twisted, curio, asyncio, trio, tornado, and presumably various more.  none of them, including asyncio, magically cross compat with each other.  some have specific cross-compat features.  so you end up with a community of libraries for each.
[05:00:15] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[05:00:18] <meejah> Celelibi: yes
[05:00:33] <meejah> Celelibi: https://meejah.ca/blog/python3-twisted-and-asyncio
[05:00:47] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[05:01:16] <altendky> one just happens to have been consumed into stdlib.  that's the bit that makes it qualitatively different.  that has the upside of making it more used, it also has the downside of making it less compatible across versions and so on.  you just have to wait for a new python release for anything to happen with it.
[05:02:09] *** Quits: parv (~quass@user/parv) (Ping timeout: 256 seconds)
[05:02:26] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:02:31] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[05:03:04] <altendky> anyio is the attempt to offer an abstraction layer so you can write a library that will be usable on asyncio or trio.  maybe someday twisted support will get added, there's been a slow start on even just adding it to sniffio.
[05:03:21] <AhmedAmerican> is there `pymongo` lib supporting `trio` ?
[05:04:38] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[05:05:57] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 240 seconds)
[05:06:37] <Celelibi> meejah, I guess it depends how the lib uses the event loop. I mean, with twisted, could a task spawn several other tasks when the main program uses asyncio to manage the main event loop?
[05:07:06] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[05:07:12] <Celelibi> Or would the twisted-using-lib have to return the task objects for the main program to insert into the event loop?
[05:07:42] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[05:08:55] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:09:31] <Celelibi> AhmedAmerican, I think I've seen something on pypi to use mongodb asynchronously. But you would likely find it youself.
[05:10:02] <AhmedAmerican> https://docs.mongodb.com/drivers/motor/
[05:10:10] *** Quits: ivii (~ivan@user/ivii) (Quit: Konversation terminated!)
[05:10:19] <altendky> i forget even which way the twisted integration is...  ah, it provides the twisted interface backed by the asyncio loop.  https://github.com/twisted/twisted/blob/1d439dd1d9c7d302641550a925705d479ea5457f/src/twisted/internet/asyncioreactor.py#L31
[05:11:53] <altendky> you may or may not be able to make sense of the contrived hopping back and forth in these tests.  though i guess trial doesn't (?) support async/await yet i think so it's extra ugly.
[05:12:26] <altendky> but i guess you have `.asFuture()` to wrap a twisted thing for access by asyncio code.
[05:12:37] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[05:12:57] <altendky> and `.fromFuture()` for the other direction.
[05:13:09] <altendky> so yeah, it's not beautiful.
[05:13:16] *** Quits: Moosadee (~Moosadee@198.248.96.43) (Quit: Leaving)
[05:13:38] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[05:17:55] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[05:18:06] *** Joins: ensyde (~ensyde@2600:1700:2050:1040::48)
[05:20:11] *** Quits: duuude (~user@user/duuude) (Ping timeout: 250 seconds)
[05:24:16] <AhmedAmerican> seems no mongodb client supporting trio
[05:26:14] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Remote host closed the connection)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:30:33] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[05:30:37] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:30:56] *** Joins: ano (~ano@user/ano)
[05:31:04] *** Quits: ckdCreations (~ckdCreati@147.55.130.32) (Read error: Connection reset by peer)
[05:31:25] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[05:31:48] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[05:32:35] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[05:33:18] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Client Quit)
[05:33:21] *** Joins: vlm (~vlm@user/vlm)
[05:34:07] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:34:16] *** Joins: frost (~frost@user/frost)
[05:35:25] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[05:35:52] *** Joins: hqdruxn08__ (~hqdruxn08@user/hqdruxn08)
[05:36:19] *** Joins: duuude (~user@user/duuude)
[05:36:25] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[05:36:26] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Client Quit)
[05:37:39] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[05:38:52] *** Quits: waynew (~wayne@user/waynew) (Remote host closed the connection)
[05:39:05] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[05:40:07] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 256 seconds)
[05:42:52] <pr3d4t0r> Greetings.
[05:43:31] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[05:43:59] *** Joins: califax- (~califax@user/califx)
[05:44:07] <pr3d4t0r> Q. I'm trying to solve the best way to install a man page that's part of a Python project.  I've read about the pros and cons of using setup.py for that, wonder if you guys can suggest a best practice.  Thanks in advance.
[05:44:48] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Read error: Connection reset by peer)
[05:45:11] *** Joins: djapo (~archangel@user/djapo)
[05:45:12] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[05:45:24] <pr3d4t0r> (Looking at Homebrew and Debian packaging because it's required for practical purposes, but need to solve for the use case of installation from PyPI.)
[05:46:37] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com)
[05:46:48] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:47:09] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:47:09] *** califax- is now known as califax
[05:47:18] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[05:47:23] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[05:47:32] *** Joins: Barones (~Barones@user/Barones)
[05:48:03] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 256 seconds)
[05:48:03] *** brabrax_ is now known as brabrax
[05:48:22] *** Quits: Ha-Jo (~hajo@2a01:c23:948b:8b00:821f:2ff:feef:dabf) (Ping timeout: 250 seconds)
[05:48:31] <grym> pr3d4t0r: https://github.com/pypa/packaging-problems/issues/72#issuecomment-355743196  there isn't really a good answer for what you want, i believe
[05:50:57] *** Quits: ovelny (~ovelny@user/ovelny) (Quit: leaving)
[05:51:07] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[05:51:47] *** Quits: wac (~wac@user/wac) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:51:57] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:52:14] *** Parts: Guest19 (~Guest19@2601:647:5280:2a50:ac8b:76d2:9030:fa62) ()
[05:52:42] <Jonno_FTW> should it be requirements-dev.txt or dev_requirements.txt?
[05:52:44] *** Quits: wereii (~wereii@37.205.14.89) (Quit: ZNC - https://znc.in)
[05:52:45] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[05:52:47] <Jonno_FTW> or something else?
[05:55:17] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[05:56:12] <ensyde> ./requirements/dev.txt ./requirements/prod.txt
[05:56:13] <pr3d4t0r> grym: Yeah, I saw that during my research :) some times peeps here have good advise that can be construed as unendorsed best practice.
[05:56:15] <ensyde> possibly
[05:56:51] <pr3d4t0r> grym: I guess I'll outsource that to the package manager du jour, and handle that via Homebrew, dpkg/apt, and so on.
[05:56:56] <pr3d4t0r> grym: Thanks for your time.
[05:56:59] <grym> pr3d4t0r: in this case i think your best option is to do that, yeah
[05:57:21] *** Quits: j0ma (~jonne@146.115.163.209) (Ping timeout: 256 seconds)
[05:59:23] *** Joins: j0ma (~jonne@static-68-235-44-10.cust.tzulo.com)
[05:59:23] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[06:00:08] *** Joins: fef (~thedawn@user/thedawn)
[06:00:08] *** Quits: mgedmin (~mg@user/mgedmin) (Quit: ZNC - http://znc.sourceforge.net)
[06:00:13] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:01:16] *** Joins: ert (~ert@2001:4b99:1:1:216:3eff:fee5:446f)
[06:01:26] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[06:01:58] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e46c-2249-14c3-79d4.res6.spectrum.com) (Read error: Connection reset by peer)
[06:02:17] *** Joins: mgedmin (~mg@user/mgedmin)
[06:02:51] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:03:54] *** Parts: Leftmost (sid232534@id-232534.helmsley.irccloud.com) ()
[06:06:08] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[06:07:01] *** Quits: sanmingzhi (~duimech@h96-61-237-176.tlpltn.broadband.dynamic.tds.net) (Quit: Leaving.)
[06:07:21] *** Joins: els12 (~els12@130.76.24.11)
[06:09:27] *** Joins: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[06:12:22] *** Joins: wereii (~wereii@2a03:3b40:fe:4f::1)
[06:12:25] <ert> is there a way to read from stdin unbuffered using asyncio? I'm `stdin = open(sys.stdin.fileno(), "rb", buffering=0)` and then `loop.connect_read_pipe(MyProtocol, stdin)`, but my `data_received` callback is still line-buffered
[06:12:45] <ert> I'd love for it to callback when it has all/some new data from stdin since the last callback, not just one byte or one line at a time. How would I go about doing that? or is there a better way?
[06:13:33] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[06:15:46] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[06:16:37] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 256 seconds)
[06:21:08] *** Joins: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[06:25:15] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[06:26:01] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:26:20] *** Joins: hub (~hub@user/hub)
[06:26:27] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:26:49] *** Quits: j0ma (~jonne@static-68-235-44-10.cust.tzulo.com) (Ping timeout: 256 seconds)
[06:26:52] *** Parts: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[06:28:37] *** Joins: j0ma (~jonne@89.45.90.164)
[06:29:29] <Batzy> Repiphany: If im using that word generator we made before to iterate through words, would you expect RAM consumption to continuously increase?
[06:29:59] <Batzy> im noticing in htop that it's using more and more RAM, but it could be some other code somewhere (i didnt think to test it individually)
[06:30:03] *** Joins: Vonter (~Vonter@user/vonter)
[06:30:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:31:11] *** Joins: yossi (~yossi@c-73-223-182-38.hsd1.ca.comcast.net)
[06:31:39] *** Quits: mags (~mags@097-091-082-103.res.spectrum.com) (Quit: leaving)
[06:32:11] *** Joins: junebug (~junebug@2600:1700:3db0:2540:8663:d736:8b67:a99f)
[06:32:21] *** Joins: saroy (~Sandipan@115.187.50.151)
[06:32:27] <Guest1778> can anyone help me understand this error message from running "conda install pandas" ? https://i.imgur.com/Jw9BpaA.png
[06:32:28] <Guest1778> I do not understand the message about the python version nor what "version 2.31" refers to
[06:33:05] <yossi> is there a nice way to detect that a string doesnt have non html text in it? for example s='<p></p>' i want to be able to say this is empty
[06:33:30] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[06:34:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[06:34:44] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 250 seconds)
[06:35:25] *** Quits: MikZyth (~MikZyth@host-192-158-66-217.spbmts.ru) (Quit: WeeChat 3.4)
[06:36:52] <AhmedAmerican> altendky: if i used `limiter = trio.CapacityLimiter(20)` and i already used `async with limiter, sender:` from function `A`, do i need to async again with limiter within func `B` and `C` ?
[06:37:01] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[06:38:02] <AhmedAmerican> ^ https://bpa.st/ZM4Q
[06:39:14] *** Joins: djapo (~archangel@user/djapo)
[06:39:42] <altendky> AhmedAmerican: what's the goal with the capacity limiter?  you only ever get it once in that code i think
[06:40:02] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 240 seconds)
[06:40:11] *** Joins: nfc_ (nfc@tilde.institute)
[06:40:46] <altendky> AhmedAmerican: i would also default to not passing a nursery around.  that doesn't entirely lose the value of the nursery but it certainly is a bit smelly.
[06:41:10] <AhmedAmerican> meant that i do need need to do `async with limiter` within `get_options` and `get_contract`
[06:41:30] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[06:41:36] <altendky> AhmedAmerican: you want to limit to 20 concurrent requests to `polygon.io`?
[06:41:44] <AhmedAmerican> you meant to create a nursery within the other 2 functions instead?
[06:42:13] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[06:42:24] <AhmedAmerican> Yes, i know they supporting Unlimited API calls. but am just asking if i would like to limit my entire code to use `20` concurrent request
[06:42:46] <AhmedAmerican> Just for knowledge purpose :P
[06:43:08] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[06:44:43] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[06:44:46] *** Joins: Pixi (~Pixi@user/pixi)
[06:45:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:45:41] *** Joins: ClearlyRandom (~ClearlyRa@075-132-054-135.res.spectrum.com)
[06:46:18] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[06:46:19] <altendky> AhmedAmerican: i would pass the limiter where it is needed.  but the rest is just creating piles of tasks, one for each 'thing' to process.  like each ticker gets it's own task created.  i would expect to have more of a pipeline with channels between.  the first is making a request to get the list of tickers.  it feeds the tickers into a channel.  the second group of workers would process those tickers.  the second group would
[06:46:19] <altendky> have as many workers as you want concurrency.
[06:46:40] *** Quits: ClearlyRandom (~ClearlyRa@075-132-054-135.res.spectrum.com) (Client Quit)
[06:46:50] <altendky> AhmedAmerican: instead of having 2731 tasks and a 20x limiter, just don't have more than 20 tasks that can be making a request.
[06:46:57] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[06:47:06] <altendky> at least i'd start in that direction
[06:47:17] *** Joins: fikran (~fikran@user/fikran)
[06:48:05] *** Quits: j0ma (~jonne@89.45.90.164) (Ping timeout: 252 seconds)
[06:48:12] <altendky> you might have three groups and two channels connecting them.  get_symbols -> get_options x10 -> get_contract x10 or something maybe.  where -> is referring to a channel connection
[06:48:40] <altendky> and at the level above those you have a nursery that has spawned all those tasks.
[06:49:01] <altendky> (admittedly, it's been awhile since i've done this quick kind of design so presumably i'm missing something...)
[06:49:19] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: Ping timeout (120 seconds))
[06:49:52] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[06:50:11] *** Joins: j0ma (~jonne@146.115.163.209)
[06:50:17] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 240 seconds)
[06:50:53] <gambl0re> hello?
[06:51:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[06:51:33] <altendky> gambl0re: heya
[06:52:31] <gambl0re> hey how can I get the row number back?
[06:53:04] <altendky> gambl0re: i'm guessing you have some code that would provide more details?  https://bpa.st/+python
[06:53:20] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[06:53:32] <gambl0re> ok i will paste here. one sec
[06:54:56] *** Joins: adeliktas5 (~adeliktas@i59F5203E.versanet.de)
[06:55:18] *** Quits: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com) (Read error: No route to host)
[06:56:01] *** Joins: luva3 (~luva@185.168.9.234)
[06:56:37] *** Quits: adeliktas (~adeliktas@i59F5F474.versanet.de) (Ping timeout: 240 seconds)
[06:56:37] *** adeliktas5 is now known as adeliktas
[06:56:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 256 seconds)
[06:59:21] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:59:25] *** Quits: luva (~luva@185.168.9.233) (Ping timeout: 250 seconds)
[06:59:25] *** luva3 is now known as luva
[07:00:33] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:03:54] <altendky> gambl0re: not sure if you pasted already, but if so, you need to copy the link here
[07:05:57] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[07:07:06] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:07:57] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:08:36] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Remote host closed the connection)
[07:10:27] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:11:06] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[07:13:50] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[07:16:52] *** Joins: skogarmaor (~Srain@64.184.2.236)
[07:17:17] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[07:17:24] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:d140:c463:bfea:917b) (Quit: Client closed)
[07:19:21] *** Joins: luva8 (~luva@37.120.197.53)
[07:19:28] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[07:21:02] <gambl0re>  SELECT
[07:21:04] <gambl0re>         ROW_NUMBER() OVER (ORDER BY projects.created_on) AS challenge_no,
[07:21:06] <gambl0re>         projects.project_id,
[07:21:08] <gambl0re>         projects.name,
[07:21:10] <gambl0re>         projects.description,
[07:21:12] <gambl0re>         projects.difficulty,
[07:21:14] <gambl0re>         projects.repo_url,
[07:21:16] <gambl0re>         projects.slug,
[07:21:18] <gambl0re>         projects.is_active,
[07:21:20] <gambl0re>         projects.created_on,
[07:21:22] <gambl0re>         project_user_count.participants,
[07:21:24] <gambl0re>         best_project.best_project,
[07:21:26] <gambl0re>         best_design.best_design,
[07:21:28] <gambl0re>         best_readme.best_readme
[07:21:30] <gambl0re>     FROM projects
[07:21:32] <gambl0re>     LEFT JOIN project_user_count USING (project_id)
[07:21:34] <gambl0re>     LEFT JOIN best_project USING (project_id)
[07:21:36] <gambl0re>     LEFT JOIN best_design USING (project_id)
[07:21:38] <gambl0re>     LEFT JOIN best_readme USING (project_id)
[07:21:40] <gambl0re>     ORDER BY projects.created_on DESC
[07:21:42] <gambl0re> look at the second line....thats what i was trying to do
[07:21:44] <gambl0re> but i wasnt getting the result i was expecting
[07:22:16] <AhmedAmerican> https://bpa.st/+mysql ^
[07:22:55] *** Quits: luva (~luva@185.168.9.234) (Ping timeout: 256 seconds)
[07:22:55] *** luva8 is now known as luva
[07:23:44] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 256 seconds)
[07:24:14] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[07:27:53] *** Joins: SensibleSalmon[m (~jakematri@2001:470:69fc:105::1:add5)
[07:28:17] *** Joins: dme86 (~dan@user/dan86)
[07:28:38] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[07:28:44] *** Joins: mags (~mags@097-091-082-103.res.spectrum.com)
[07:30:01] *** Quits: haasn (~nand@haasn.dev) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:30:13] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:31:29] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:31:56] *** Joins: haasn (~nand@haasn.dev)
[07:32:17] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[07:32:44] *** Joins: jazzy2 (~jaziz@user/jaziz)
[07:33:21] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 256 seconds)
[07:33:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:8663:d736:8b67:a99f) (Ping timeout: 240 seconds)
[07:33:50] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:34:16] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[07:35:14] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[07:35:23] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:35:37] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[07:36:00] *** Quits: llua (~llua@zsh/developer/llua) (Quit: <Rudolph> shell code is what greycat reads to kids when he tucks them in)
[07:36:01] *** Quits: ensyde (~ensyde@2600:1700:2050:1040::48) (Ping timeout: 250 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:13] *** Joins: hanzo (uid532183@user/hanzo)
[07:36:18] *** Joins: junebug (~junebug@2600:1700:3db0:2540:c292:9d72:3880:e24c)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:53] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-78d5-e2ea-a2f1-e76e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[07:40:09] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 256 seconds)
[07:41:07] *** Joins: adham (~adham@37.239.160.9)
[07:42:53] <Jonno_FTW> in pylint, is there a way to get it to group by warning?
[07:44:09] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[07:47:14] <Repiphany> Batzy: No, if you're not keeping any references to children nodes
[07:47:26] <Batzy> hm
[07:49:53] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 256 seconds)
[07:51:46] *** Joins: humbertowoody (~humbertow@187.202.198.64)
[07:52:02] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[07:53:57] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Ping timeout: 240 seconds)
[07:54:47] *** Quits: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[07:54:47] *** Quits: yemel (~yemel@user/yemel) (Quit: love you)
[07:54:50] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:54:57] *** Joins: PaC-mEn (~PaC-mEn@5.29.177.78)
[07:55:49] *** Quits: sreve (~quassel@p4ff44ec8.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[07:56:00] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[07:56:17] *** Joins: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c)
[07:56:27] *** Joins: sreve (~quassel@p549d724b.dip0.t-ipconnect.de)
[07:56:28] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[07:56:36] *** Joins: yemel (~yemel@user/yemel)
[07:57:02] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Remote host closed the connection)
[07:57:19] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[07:57:31] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[07:57:40] *** Joins: SR-71 (~Duck@user/SR-71)
[07:58:27] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[07:59:39] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:b67b:cc40:8cbf:8800)
[08:00:43] *** Quits: mnabid (uid448607@user/mnabid) (Quit: Connection closed for inactivity)
[08:01:28] *** Quits: Bakunin (~maplefing@user/lindis) (Remote host closed the connection)
[08:01:48] *** Quits: SR-71 (~Duck@user/SR-71) (Quit: Leaving)
[08:02:01] *** Joins: SR-71 (~Duck@2405:201:3003:8024:348e:466c:a606:1eb8)
[08:02:28] *** Quits: SR-71 (~Duck@2405:201:3003:8024:348e:466c:a606:1eb8) (Changing host)
[08:02:28] *** Joins: SR-71 (~Duck@user/SR-71)
[08:02:44] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[08:03:27] *** Quits: AlanMD_ (~AlanMD@5-12-91-140.residential.rdsnet.ro) (Quit: ZZZzzz…)
[08:03:43] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (Ping timeout: 256 seconds)
[08:06:16] *** Quits: junebug (~junebug@2600:1700:3db0:2540:c292:9d72:3880:e24c) (Quit: Leaving)
[08:06:55] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[08:06:57] *** Quits: humbertowoody (~humbertow@187.202.198.64) (Ping timeout: 240 seconds)
[08:09:57] *** Quits: nicode (~nic@45.72.202.17) (Ping timeout: 256 seconds)
[08:09:59] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[08:10:19] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f4:345c:9441:82c4:a226:af6b) (Remote host closed the connection)
[08:13:04] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:681d:16af:8dc7:c838)
[08:16:17] *** psystemupdate is now known as BrazillianVax
[08:18:20] *** Quits: SR-71 (~Duck@user/SR-71) (Quit: Leaving)
[08:21:16] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[08:24:21] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[08:25:32] *** Quits: BrazillianVax (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Quit: leaving)
[08:27:31] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[08:28:59] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[08:29:58] *** Quits: d00gy (~tonberry@user/d00gy) (Quit: WeeChat 3.4)
[08:30:31] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[08:30:46] *** Joins: mickey8 (~user@user/mickey)
[08:31:58] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:32:03] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[08:34:02] *** Quits: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[08:35:06] *** Joins: the_lanetly_052_ (~the_lanet@185.30.91.158)
[08:35:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[08:37:43] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[08:38:16] *** Joins: SR-71 (~user@user/SR-71)
[08:38:21] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[08:38:21] *** Parts: Nintendo (~smb3@user/great) (Time's up.)
[08:38:50] *** Joins: bluedust (~bluedust@117.204.128.175)
[08:39:05] *** Joins: analoq (~yashi@user/dies)
[08:39:39] *** Quits: PaC-mEn (~PaC-mEn@5.29.177.78) (Ping timeout: 256 seconds)
[08:42:47] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:43:12] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:44:54] *** Quits: notepad7 (~notepad@129.159.46.243) (Quit: The Lounge - https://thelounge.chat)
[08:45:29] *** Joins: notepad7 (~notepad@129.159.46.243)
[08:46:20] *** Quits: notepad7 (~notepad@129.159.46.243) (Client Quit)
[08:47:56] *** Joins: notepad7 (~notepad@129.159.46.243)
[08:47:57] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[08:51:20] *** Quits: Zeturic (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[08:51:37] *** Joins: han-solo (~hanish@user/han-solo)
[08:53:31] *** Joins: savolla (~quassel@84.44.28.28)
[08:53:57] *** Quits: dtg01100 (~dtg01100@199.21.141.37) (Quit: Leaving)
[08:54:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[08:56:38] *** Joins: fikran (~fikran@user/fikran)
[09:02:26] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[09:05:30] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[09:06:39] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[09:07:10] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[09:07:25] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[09:08:12] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[09:08:33] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[09:09:44] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[09:09:45] *** Joins: mexen (uid495612@user/mexen)
[09:10:16] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[09:11:14] *** Joins: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[09:13:15] *** Joins: msek_ (~Username@pd9fb26d3.dip0.t-ipconnect.de)
[09:13:17] *** Joins: bluedust_ (~bluedust@194.37.96.105)
[09:13:54] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[09:14:18] *** Joins: parv (~quass@user/parv)
[09:14:37] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 240 seconds)
[09:14:41] *** Quits: saroy (~Sandipan@115.187.50.151) (Quit: Leaving)
[09:16:47] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[09:16:52] *** Quits: SR-71 (~user@user/SR-71) (Remote host closed the connection)
[09:17:23] *** Quits: bluedust (~bluedust@117.204.128.175) (Ping timeout: 256 seconds)
[09:17:43] *** Quits: msek_ (~Username@pd9fb26d3.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[09:18:41] *** Joins: bluedust (~bluedust@117.204.128.175)
[09:20:31] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[09:20:51] *** Joins: CombatVet (~c4@user/combatvet)
[09:21:41] *** Quits: bluedust_ (~bluedust@194.37.96.105) (Ping timeout: 256 seconds)
[09:22:15] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[09:24:06] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[09:27:19] *** Quits: mrlemke (~quassel@2604:a880:4:1d0::394:0) (Quit: bye)
[09:27:39] *** Joins: mrlemke (~quassel@2604:a880:4:1d0::394:0)
[09:27:47] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:29:08] <whatsupdoc> How would you go about calculating the number of combinations in python 3.7?
[09:29:29] <whatsupdoc> For example 10choose3 = 120
[09:29:54] <leduyquang753> `math.comb`.
[09:30:02] *** Quits: alnr (~alnr@38.125.204.99) (Read error: Connection reset by peer)
[09:31:00] <savolla> hello all o/ Is there any python library where I can read CAD data (for example step, stl, collada) and get the coordinates of it's edges, frames? I'm working on a robotics project and this robot will perform welding operation on the given part. I have cad data of this part and I need to draw a trajectory path and control the robot to go through each point and weld. I'm using rviz for visualization. Do you recommend any good quality library suitable for this
[09:31:01] <savolla>  kind of job?
[09:31:19] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[09:32:05] <jinsun> leduyquang753: 3.8+ only apparently
[09:32:08] <whatsupdoc> leduyquang753: does work, needs 3.8+
[09:32:12] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[09:32:15] <whatsupdoc> doesn't*
[09:32:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:32:42] <whatsupdoc> ok i'll just manually calculate it lol
[09:33:17] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[09:34:56] <jinsun> you could do `sum(1 for _ in itertools.combinations(range(n), k))`
[09:35:04] <jinsun> but that's going to be slow
[09:35:16] *** Quits: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net) (Quit: leaving)
[09:36:16] <jinsun> so yeah manually calculating would be better
[09:36:19] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:36:20] *** Joins: mickey80 (~user@user/mickey)
[09:36:34] <jinsun> you have math.factorial at least
[09:36:52] <jinsun> which would be okay to use if the numbers aren't too large
[09:36:59] *** Joins: emerent_ (~quassel@p200300cd570443fbba27ebfffed28a59.dip0.t-ipconnect.de)
[09:36:59] *** Quits: emerent (~quassel@p200300cd570443a1ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (mercury.libera.chat (Nickname regained by services)))
[09:36:59] *** emerent_ is now known as emerent
[09:37:17] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[09:37:46] *** Quits: mrlemke (~quassel@2604:a880:4:1d0::394:0) (Quit: bye)
[09:37:54] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[09:37:55] *** mickey80 is now known as mickey8
[09:38:06] *** Joins: mrlemke (~quassel@2604:a880:4:1d0::394:0)
[09:38:33] <parv> whatsupdoc, Could you explain how "10 choose 3 is 120"?  https://www.mathsisfun.com/combinatorics/combinations-permutations.html suggests 10**3
[09:38:35] <EtherMan> Hey so I'm trying to build a plugin system and was looking at http://www.codestudyblog.com/cnb/0319182939.html a bit and trying to follow along for what steps are needed and such. Towards the end there it implements a walk_package function that does "Import_package = __import__(package, fromlist=[&39;blah&39;])"... Now, apart from that it uses "imported_package" to refer to that import after that (it's corrected in the github code though not on
[09:38:35] <EtherMan> the webpage), I know what __import__ does in principle, but what does that fromlist=[&39;blah&39;] do?
[09:38:56] <Guest1778> I am having trouble using Texlive via Anaconda on WSL. Earlier I installed miktex, but this wasn't working. So I made a new environment and tried texlive-core, but then writing xelatex --version lists miktex information. Why?
[09:38:57] *** Quits: NealRame (~a@125-253-107-134.ip4.superloop.com) (Ping timeout: 240 seconds)
[09:39:08] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:39:30] <grawity> EtherMan: that &39; is supposed to be &#39; – an HTML entity for a single-quote or ASCII apostrophe
[09:39:48] <grawity> EtherMan: so pretend the page says fromlist=['blah']
[09:40:00] <jinsun> parv: math.comb(10, 3) is 120, https://docs.python.org/3/library/math.html#math.comb
[09:40:05] <grawity> it is not part of python's syntax
[09:40:33] <EtherMan> grawity, well the github code uses double quote but the question is, what does it DO?
[09:40:35] *** Quits: nomic (~nomic@185.198.243.198) (Remote host closed the connection)
[09:41:08] <parv> jinsun, whatsupdoc, Ok, I see; that combination is without repetitions.
[09:41:14] <whatsupdoc> yes
[09:42:03] <whatsupdoc> 10!/(7! * 3!)
[09:43:17] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[09:43:37] * vdamewood pulls three marbles out of a bag... and eats them.
[09:43:40] *** Joins: dvx (~dvx@5.181.92.64)
[09:44:09] <dba> I have instantiated a class like this `ci = class1(arg)` and the content of  `ci` is a `dict` but the`type()` is a class type. How do I make the `ci` type exactly what the class returns?
[09:44:35] <jinsun> whatsupdoc: a bit overkill, but you could use scipy https://docs.scipy.org/doc/scipy/reference/generated/scipy.special.comb.html
[09:45:32] <parv> Is a "class" not a glorified "dict"?
[09:45:35] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[09:45:54] <EtherMan> parv: No.
[09:46:03] *** Joins: frost (~frost@user/frost)
[09:46:19] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[09:47:17] <parv> .oO( If the suspense does not kill me, holding my breath certainly would )
[09:47:27] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[09:47:51] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[09:47:56] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[09:48:07] <jinsun> the attributes are stored in a dict (not always), but that's where the similarity ends
[09:48:31] *** Joins: upsala (~zcb@185.213.155.252)
[09:49:16] <jinsun> dba: if you do `ci = class1(arg)` then ci is exactly what class1 returns, so not sure how you see anything else
[09:49:27] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 256 seconds)
[09:49:43] <jinsun> dba: maybe show code?
[09:51:22] *** Quits: Jimmy2027 (~hendrik@2001:1620:2018:38:dde3:1b0f:dc57:eb0f) (Quit: WeeChat 3.3)
[09:52:04] <grawity> EtherMan: causes it to return the actual foo.bar module instead of the parent foo
[09:52:13] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[09:52:21] *** Quits: upsala (~zcb@185.213.155.252) (Client Quit)
[09:52:28] <grawity> according to help(__import__) pretty much the only difference is "when fromlist is not empty"
[09:53:01] <aphysically> I think I'm up to like 4 or 5 bugs in stringified types I've found >.<
[09:53:14] <EtherMan> grawity, but there is no module named blah anywhere in its example, and it's loading everything dynamically?
[09:53:41] *** Joins: upsala (~zcb@185.213.155.252)
[09:53:51] <grawity> EtherMan: "not empty", the actual contents of fromlist do not seem to matter
[09:53:52] <dba> jinsun: here is the code https://github.com/hamidnahli/rs-app/blob/main/main.py error raised by pd.DataFrame() in utils.py as it does not understand the type provided
[09:53:52] <aphysically> am I using this right https://i.imgflip.com/64ihxb.jpg
[09:54:10] *** Joins: nomic (~nomic@185.217.117.245)
[09:56:45] *** Joins: zamanf (~dev@213.133.91.246)
[09:56:45] *** Quits: zamanf (~dev@213.133.91.246) (Changing host)
[09:56:45] *** Joins: zamanf (~dev@user/zamanf)
[09:58:31] *** Joins: NealRame (~a@125-253-107-134.ip4.superloop.com)
[09:58:40] <jinsun> aphysically: yeah lots of mess in typing, shows that stringified types weren't tested well
[10:00:07] <jinsun> aphysically: your annotated post should go to python-dev too maybe? since it concerns non-typing users, and previous discussions showed they don't read typing-sig
[10:01:15] *** Quits: bluedust (~bluedust@117.204.128.175) (Remote host closed the connection)
[10:03:42] *** Joins: onichomp (~onichomp@2806:264:4408:d8:48d7:b394:c88f:a09a)
[10:04:27] <aphysically> mmmmmmmmmmmmmmmmmm
[10:04:31] *** Quits: onichomp (~onichomp@2806:264:4408:d8:48d7:b394:c88f:a09a) (Read error: Connection reset by peer)
[10:04:58] <aphysically> I don't think it concerns non-typing users really, but it's typing people that asked me to put it on typing-sig so I'll leave it there for now
[10:05:08] <aphysically> I also consider it mostly a formality
[10:05:08] *** Joins: onichomp (~onichomp@2806:264:4408:d8:48d7:b394:c88f:a09a)
[10:05:08] <jinsun> dba: can't see pd.DataFrame in that file, can you show the error you get?
[10:05:29] <aphysically> the P.args P.kwargs thing needs fixed actually independently of whether or not you want to wrap it in Annotated
[10:05:35] *** Quits: onichomp (~onichomp@2806:264:4408:d8:48d7:b394:c88f:a09a) (Read error: Connection reset by peer)
[10:05:49] <aphysically> because typing.py doesn't distinguish between "being able to be wrapped in Annotated" and "throwing errors when stringified and run through get_type_hints"
[10:05:56] <aphysically> and the latter is supposed to always work, so it's a bug either way
[10:06:11] *** Joins: onichomp (~onichomp@2806:264:4408:d8:48d7:b394:c88f:a09a)
[10:06:34] <aphysically> but if we decide Annotated is specifically not supposed to work for P.args/P.kwargs (to my knowledge that's the only thing in all of Python it doesn't work for (!!)), I will need to slightly refactor typing.py to handle this as a special case
[10:06:44] <aphysically> I will do this if I need to, but I'd really rather not
[10:07:18] <aphysically> trying to find the least intrusive way to fit in something typing.py wasn't designed around is not my idea of a fun afternoon
[10:07:20] <jinsun> okay, to this is more about stringified annotations than annotated
[10:07:39] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[10:07:41] <aphysically> they're independent concerns from a spec point of view
[10:07:52] <aphysically> they're not independent from the implementation specifics of typing.py's internals
[10:08:19] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[10:08:20] <aphysically> and concerns with the spec point of view for Annotated have come up several times now, so I'd like to answer the question once and for all
[10:08:31] <aphysically> then it's answered and we don't have to relitigate it
[10:08:47] *** Joins: portalrat (~portalrat@user/portalrat)
[10:08:52] *** Joins: jazzy3 (~jaziz@user/jaziz)
[10:08:54] <aphysically> and plus it's *way* easier to test with Annotated than the stringification nonsense
[10:09:11] *** Quits: adham (~adham@37.239.160.9) (Ping timeout: 256 seconds)
[10:09:14] <nunggu> hi, i have a shell account and i want to run python cgi app. simple python script for testing cgi (just content-type: text/html and print hello world works). i want to use flask but: i don't have root access, no pip (tried using python -m pip, pip). tried python -m ensurepip but got error: no module pyexpat. tried get-pip, got the same error: no module pyexpat. is there any way to make pyexpat
[10:09:16] <nunggu> available (not as root) so that i can get pip then install virtualenv then flask?
[10:09:23] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 252 seconds)
[10:09:23] <aphysically> so if we agree Annotated is supported then it's much easier for everyone to agree "yes this is a bug" or "no this isnt"
[10:09:53] *** Quits: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73) (Quit: Leaving)
[10:10:05] <jinsun> you got pyright to support it already right?
[10:10:15] <aphysically> yes
[10:10:28] <aphysically> I would actually be really shocked if the result of the thread was that we shouldn't support P.args and P.kwargs
[10:10:36] *** Joins: adham (~adham@37.239.160.21)
[10:10:49] <aphysically> I think that's completely clear. It's more interesting to answer once and full all if other things are supported
[10:11:00] <aphysically> like should Annotated be able to wrap a ParamSpec instance itself?
[10:11:08] <aphysically> also not a type, but not a top level typeform either
[10:11:22] *** Quits: nomic (~nomic@185.217.117.245) (Quit: Leaving)
[10:11:40] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[10:11:46] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:11:57] *** Joins: spithash (~spithash@user/spithash)
[10:12:02] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:12:30] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[10:12:56] <aphysically> if Annotated can't wrap P.args and P.kwargs the Annotated PEP has basically failed, which would be a ridiculous outcome. There's no other way to support that annotation space.
[10:13:33] <jinsun> okay good, so Eric already supports that, and yeah that thread would probably result in support for Annotated
[10:13:35] <aphysically> so that's why I'm pretty confident those specific things won't be a problem. I'm not as confident about stuff like ParamSpec P. I think it enormously complicates typing.py if we decide it's disallowed, and for basically no reason. But we'll have to discuss it.
[10:14:01] *** Joins: Oddity (~Oddity@user/oddity)
[10:14:02] *** Joins: carl-- (~carl-@185.103.188.130)
[10:15:26] *** Joins: vanessa (~vanessa@103.160.128.7)
[10:15:31] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[10:16:12] <aphysically> jinsun: but I'm particular in my wording of hte posts. Obviously ParamSpec isn't the last time somethign that's kinda-a-type-but-kinda-not that's going to be introduced in python. But I need the goahead before I add to the documentation clarifying "yes this is allowed"
[10:16:24] <aphysically> (in Annotated)
[10:16:44] *** Joins: Arw- (~Arwalk@lfbn-dij-1-964-247.w90-125.abo.wanadoo.fr)
[10:16:53] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[10:17:27] *** Quits: Arw| (~Arwalk@lfbn-dij-1-964-247.w90-125.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[10:17:30] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[10:17:59] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[10:18:20] *** Joins: callq (~callq@2409:4062:2d8d:345f:4836:a5d4:7aa7:5f2b)
[10:18:35] *** Quits: savolla (~quassel@84.44.28.28) (Ping timeout: 256 seconds)
[10:18:56] *** Joins: savolla (~quassel@84.44.28.28)
[10:19:01] <aphysically> Anyway, I'll fix Annotated and stringification eventually. Probably even before the next round of point releases. Just takes a bit of time :0
[10:19:03] <aphysically> :)
[10:20:15] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 250 seconds)
[10:20:36] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:21:51] *** Seto_Kaiba is now known as Hunterkll
[10:25:49] *** gentooclimax is now known as climax
[10:25:57] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[10:26:33] *** Quits: duuude (~user@user/duuude) (Ping timeout: 250 seconds)
[10:29:14] *** Quits: savolla (~quassel@84.44.28.28) (Quit: No Ping reply in 180 seconds.)
[10:29:18] *** Joins: PJBoy (~PJBoy@user/pjboy)
[10:30:29] *** Joins: bluedust (~bluedust@103.148.20.48)
[10:30:36] *** Joins: savolla (~quassel@84.44.28.28)
[10:31:38] *** Joins: python-learner-x (~python-le@p0723575-vcngn.tkyo.nt.ngn.ppp.ocn.ne.jp)
[10:32:51] <python-learner-x> hi, is it true that when a function is called in Python, its frame is placed not on stack (as in most languages), but rather on the heap?
[10:32:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:33:11] *** climax is now known as gentooclimax
[10:35:18] <deniska> python-learner-x: it's an implementation detail
[10:35:49] *** Quits: dude-x_ (~textual@72.76.74.165) (Read error: Connection reset by peer)
[10:35:55] <deniska> python-learner-x: in cpython it was going onto the C language stack for a while, but I think it may change soon? Not sure, wasn't following that lately
[10:36:13] *** Joins: dude-x (~textual@72.76.74.165)
[10:36:30] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:185e:847f:16f8:7aa7)
[10:36:43] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:39:21] *** Joins: tristan_ (~tristan@223.62.175.125)
[10:40:50] <python-learner-x> deniska: I was just curious how generators are implemented, and one explanation I read explained them based on this assumption. However, I didn't find more supporting material on the Internets, so just wanted to confirm with people here...
[10:44:27] <deniska> python-learner-x: generators work differently from ordinary function calls
[10:44:59] *** Quits: MrFantastik (~f@2607:f598:bbda:170:9975:1508:5896:d1b) (Ping timeout: 256 seconds)
[10:46:54] *** Joins: darks0ul (~darksoul@user/darks0ul)
[10:46:55] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[10:47:15] *** Quits: adham (~adham@37.239.160.21) (Quit: Leaving)
[10:47:29] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[10:47:39] *** Joins: adham (~adham@37.239.160.21)
[10:48:18] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[10:49:01] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[10:49:11] *** Quits: tristan_ (~tristan@223.62.175.125) (Remote host closed the connection)
[10:49:30] *** Joins: tristan_ (~tristan@223.62.175.125)
[10:49:42] *** Joins: vanessa (~farawayas@103.160.128.7)
[10:50:04] *** Joins: mrwick (~mrwick@user/mrwick)
[10:51:44] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[10:52:03] *** Joins: naranja (~orange@user/orangeboxcutter)
[10:52:15] *** Joins: dcimense (~dcimer@ip68-5-48-79.oc.oc.cox.net)
[10:52:18] *** gentooclimax is now known as climax
[10:52:39] *** Quits: p-i-_ (~Ohmu@183.89.35.200) (Remote host closed the connection)
[10:52:59] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[10:53:12] *** Joins: manti7 (~manti7@176.10.104.94)
[10:53:16] *** Joins: p-i- (~Ohmu@183.89.35.200)
[10:53:23] *** Quits: j0ma (~jonne@146.115.163.209) (Ping timeout: 256 seconds)
[10:53:24] *** climax is now known as gentooclimax
[10:57:19] *** Joins: cosimone (~user@93-34-133-254.ip49.fastwebnet.it)
[10:57:57] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 250 seconds)
[10:58:01] *** Quits: onichomp (~onichomp@2806:264:4408:d8:48d7:b394:c88f:a09a) (Read error: Connection reset by peer)
[10:58:40] *** Joins: onichomp (~onichomp@2806:264:4408:d8:48d7:b394:c88f:a09a)
[10:59:00] *** Joins: luigibu (~luigi@93.176.155.54)
[10:59:06] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[11:00:46] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[11:01:33] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[11:02:14] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[11:02:58] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:03:06] *** Quits: luigibu (~luigi@93.176.155.54) (Client Quit)
[11:03:21] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[11:04:08] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[11:04:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[11:05:12] *** Quits: hendry (~hendry@210.23.22.2) (Quit: brb)
[11:05:37] *** Joins: dme86 (~dan@user/dan86)
[11:05:59] *** Joins: fikran (~fikran@user/fikran)
[11:06:05] *** Joins: hendry (~hendry@210.23.22.2)
[11:06:39] *** Joins: Guest7003 (~vit@chello085216193138.chello.sk)
[11:06:52] *** Joins: zaquest (~notzaques@5.130.79.72)
[11:07:47] *** Quits: ExpiredKebab (~sgreadly@118-93-42-129.dsl.dyn.ihug.co.nz) (Quit: Textual IRC Client: www.textualapp.com)
[11:07:49] *** Joins: luigibu (~luigi@93.176.155.54)
[11:08:28] *** Joins: matsaman (~matsaman@user/matsaman)
[11:08:34] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:09:49] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:10:19] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[11:11:44] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:13:19] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[11:13:23] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Remote host closed the connection)
[11:14:30] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[11:14:33] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:14:39] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 250 seconds)
[11:15:00] *** Joins: audiobirb (~audio@user/audio)
[11:15:15] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[11:15:22] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Remote host closed the connection)
[11:16:04] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-035.client.tudelft.eduvpn.nl)
[11:16:09] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:17:36] *** Joins: philomath (~philomath@103.79.168.3)
[11:17:36] *** Quits: philomath (~philomath@103.79.168.3) (Changing host)
[11:17:36] *** Joins: philomath (~philomath@dgplug/philomath)
[11:20:59] *** Joins: masoudd (~masoudd@user/masoudd)
[11:21:15] *** Joins: jmd (~user@de.cellform.com)
[11:21:26] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 252 seconds)
[11:21:28] *** Joins: NeoCore (~neocore@37.120.204.174)
[11:22:03] *** Quits: ericlee_ (~ericlee@23-120-34-97.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[11:22:05] *** Quits: masoudd (~masoudd@user/masoudd) (Max SendQ exceeded)
[11:22:24] <EtherMan> When creating an object from a class, does the __init__ of the parent class get executed if the subclass has an __init__ defined itself, or only if left undefined?
[11:22:26] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 245 seconds)
[11:22:33] *** Joins: masoudd (~masoudd@user/masoudd)
[11:22:41] *** Quits: vanessa (~farawayas@103.160.128.7) (Remote host closed the connection)
[11:23:18] <meejah> EtherMan: you have to call it with super()
[11:23:26] *** Quits: masoudd (~masoudd@user/masoudd) (Max SendQ exceeded)
[11:23:27] <The-Compiler> EtherMan: there is nothing special about __init__ - if the subclass overrides it, the parent class one doesn't get called, unless the subclass does (usually via super())
[11:23:38] *** Quits: lockywolf_ (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:23:55] *** Joins: masoudd (~masoudd@user/masoudd)
[11:24:12] *** Joins: chele (~chele@user/chele)
[11:24:58] <EtherMan> Like super().__init__() ? (since I don't wan't to actually create an instance of that parent)
[11:25:35] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:4839:a2a7:487b:278c)
[11:25:46] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[11:25:47] <jinsun> yes, put that inside your subclass __init__
[11:25:49] *** Joins: gusto (~Augustus@109.255.100.54)
[11:25:57] *** Joins: pro_z_ (~pro_z@37.214.69.56)
[11:27:17] *** Joins: lockywolf_ (~lockywolf@public.lockywolf.net)
[11:27:32] <EtherMan> Any way to tell all subclasses to always do that ^_^;   like say I'm doing a plugin system. And I want to enforce that plugins do certain things during their init phase?
[11:27:37] *** Joins: mcpackey (~pm0001@p57b83bd8.dip0.t-ipconnect.de)
[11:28:53] <deniska> EtherMan: you may want to invent your own function to initialize a plugin instead of relying on __init__ of a class
[11:29:09] <deniska> and then require plugins to implement that function
[11:29:17] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 240 seconds)
[11:29:25] *** Quits: darks0ul (~darksoul@user/darks0ul) (Ping timeout: 240 seconds)
[11:29:30] *** Joins: vanessa (~vanessa@103.160.128.7)
[11:30:03] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[11:30:56] *** Joins: kaiseisei (~Thunderbi@171.116.215.250)
[11:31:08] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:29] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:30] *** Joins: msk (~Thunderbi@89.205.124.19)
[11:31:35] <EtherMan> Except plugins can then not implement their own variables on the class, since they need to be initialized in __init__
[11:31:45] *** Joins: grooverman_ (~grooverma@179.97.133.197)
[11:32:04] <deniska> they can still make an __init__
[11:32:19] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[11:32:24] <deniska> but if a plugin, say, needs to do some IO on startup, it doesn't fit inside __init__ anyway
[11:32:24] *** Joins: masoudd_ (~masoudd@user/masoudd)
[11:33:05] <EtherMan> But then the parent's init doesn't get called, and if parent's init doesn't get called, and then my own init func doesn't get called since that would be called from the parents init :/
[11:33:28] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:33:44] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[11:34:07] <deniska> If someone writes a subclass, makes their own __init__, and doesn't call super().__init__, it's on them
[11:34:21] <deniska> Alternatively you can redesign your system not to require inheritance
[11:34:46] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:35:19] *** Quits: grooverman (~grooverma@179.97.162.187) (Ping timeout: 256 seconds)
[11:35:20] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[11:35:37] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[11:36:33] *** Joins: kosh (~kosh@user/kosh)
[11:36:46] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[11:36:56] <The-Compiler> EtherMan: your plugins need to be well behaved, there is no way around that. A plugin might as well call sys.exit() or whatever.
[11:37:21] <EtherMan> I'm the one writing the plugins so it's not about that. But requiring a plugin to call on the parent just feels wrong on multiple levels :/
[11:37:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:37:35] <The-Compiler> not sure why it would
[11:37:51] <The-Compiler> if you're overriding __init__, calling the superclass init is the normal thing to do
[11:37:53] *** Joins: palasso (~palasso@user/palasso)
[11:38:03] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[11:39:03] <EtherMan> Really? First I'm hearing of it and I've never seen it in any previous projects I've looked at plugin systems for O_o
[11:39:07] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Ping timeout: 250 seconds)
[11:39:32] <Repiphany> What are you doing in __init__ that needs to be individualised for each subclass
[11:39:46] <The-Compiler> If you write a class inheriting from Base, overriding __init__, and not calling super().__init__(), you're doing a rather weird thing
[11:40:08] *** Joins: AlexisTP (~AlexisTP3@92.57.44.63)
[11:40:27] <EtherMan> Repiphany, as I said before, a subclass wouldn't be able to make its own class var without being able to override it.
[11:40:42] <jinsun> you could hack around with __init_subclass__ to check if all expected attributes are there
[11:41:06] <The-Compiler> EtherMan: when you say "class var", do you mean "instance var"?
[11:41:10] *** Quits: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Quit: Client closed)
[11:41:24] *** Quits: AlexisTP (~AlexisTP3@92.57.44.63) (Client Quit)
[11:41:44] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:41:45] *** Joins: AlexisTP (~AlexisTP3@92.57.44.63)
[11:41:52] <jinsun> hmm, but that works only for class vars I guess, not for instance vars
[11:41:59] *** Joins: darks0ul (~darksoul@2409:4043:2202:7ae7:e0d6:aac9:fbfd:affe)
[11:42:21] <EtherMan> The-Compiler, I mean a var that is stuck to the object and lives for the lifespan of the object, rather than a temporary one that only lives while a specific function is being executed.
[11:42:49] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:43:07] <EtherMan> Vars that could be populated in one function, and then read from in another.
[11:43:19] *** Joins: dme86 (~dan@user/dan86)
[11:43:40] <deniska> EtherMan: "instance attribute" if we're getting technical about that
[11:43:53] *** Quits: AlexisTP (~AlexisTP3@92.57.44.63) (Client Quit)
[11:44:11] *** Joins: AlexisTP (~AlexisTP3@92.57.44.63)
[11:44:39] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[11:44:46] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[11:45:40] *** Quits: AlexisTP (~AlexisTP3@92.57.44.63) (Client Quit)
[11:46:03] *** Joins: AlexisTP (~AlexisTP@92.57.44.63)
[11:46:37] <The-Compiler> EtherMan: ok, because you set class variables at class scope (outside of __init__), but those are shared across all instances of that class
[11:47:32] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[11:48:20] <EtherMan> How? Pycharm doesn't let me set up any vars that would be saved like that unless defined in __init__ first :/
[11:48:27] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[11:48:40] <p-i-> I'm getting a true regex101 fail on regex101. https://regex101.com/r/EIT4MM/1 `foo (\d+)` operating on "foo 123" ... and it's not finding a match. wtf? What am I missing?
[11:49:03] <deniska> EtherMan: "class attributes" is something you put directly in a class body, outside of def's
[11:49:22] <deniska> EtherMan: and they are shared, essentially behaving like static members in some other languages
[11:49:34] <EtherMan> deniska: But those can't be changed as I understand it.
[11:49:46] <deniska> they can
[11:49:48] <p-i-> ok gottit, x flag is extended and ignores whitespace
[11:49:49] *** Joins: teut (~teut@2401:4900:1c68:dbe1:10ec:5212:d799:1742)
[11:49:58] <deniska> but they are essentially a global, so probably they shouldn't change :)
[11:50:31] <EtherMan> Pycharm complains that I should define it as a static, and if I do, it complains that I'm trying to change a static :/
[11:51:27] <jinsun> Pycharm complaining and python complaining are different things
[11:52:07] <yanmaani> Say you have a program in Python
[11:52:12] <yanmaani> you have a series of test cases
[11:52:13] <jinsun> Pycharm can complain about perfectly valid code, if you have stuff like linting and type checking enabled
[11:52:26] <yanmaani> You want to find all of the dead code, with respect to those test cases
[11:52:28] <yanmaani> and remove it
[11:52:29] *** Joins: andreasbuhr (~quassel@p549dbbae.dip0.t-ipconnect.de)
[11:52:34] <yanmaani> Is there a simple way to do this?
[11:52:43] <yanmaani> OR at least, like, mark it
[11:52:53] <teut> what is dead code wrt test cases?
[11:52:58] <matsaman> yanmaani: 'coverage'
[11:53:08] <matsaman> but realistically
[11:53:14] <EtherMan> jinsun: Right, but so while it's possible to have those vars change, it's bad practice?
[11:53:17] <matsaman> if you have that much dead code, you should probably start from scratch
[11:53:20] *** gentooclimax is now known as climax
[11:53:29] <matsaman> by copying out only the code you feel is absolutely necessary
[11:53:51] <yanmaani> matsaman: yeah, it's a specific use-case
[11:53:55] <matsaman> same as you would pare down a test case
[11:54:00] <yanmaani> I have a program that does X, Y, and Z
[11:54:05] <yanmaani> I only need it to do X
[11:54:05] <jinsun> EtherMan: depends, but normally yes it is bad
[11:54:15] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[11:54:24] <yanmaani> so I want to see how small I can get it, if I remove everything not needed for my use-case
[11:54:41] <yanmaani> Is coverage entirely accurate? For example, what if I import code that defines some variables
[11:54:49] <yanmaani> will that get the marking?
[11:54:57] <jinsun> EtherMan: I mean changing through the instance is bad, change it through the class object
[11:55:00] <yanmaani> can I strip out all the code with 0 in coverage? or will that cause it not to run
[11:55:03] *** climax is now known as gentooclimax
[11:55:40] *** Joins: arinov (~arinov@213.194.126.155)
[11:55:48] <teut> you get the line numbers which are not covered
[11:55:53] <teut> in coverage
[11:56:00] <teut> maybe that can help
[11:56:22] <EtherMan> jinsun: Guess I'm gonna have to rethink how I want this thing to work :/
[11:56:34] *** Quits: kaiseisei (~Thunderbi@171.116.215.250) (Ping timeout: 260 seconds)
[11:57:44] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[11:58:04] <jinsun> yanmaani: normally yes you can just delete the not-covered lines, since they didn't even run, but have a backup of your code before doing that, and re-run the tests after doing it to see if it worked
[11:59:08] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[12:02:04] *** Joins: kosh (~kosh@user/kosh)
[12:03:25] *** Quits: foul_owl (~kerry@217.114.38.61) (Ping timeout: 256 seconds)
[12:04:29] *** Joins: Pickchea (~private@user/pickchea)
[12:05:28] <p-i-> I've been getting a problem with regex.findall (not re) returning an extra unwanted match, if there is a DEFINE in the pattern.
[12:05:34] <p-i-> I've reduced it to a testcase: https://bpa.st/SWPQ
[12:05:39] *** Joins: rendar (~rendar@user/rendar)
[12:05:47] <p-i-> Does anyone have any insight into this before I file an issue?
[12:06:56] <p-i-> As per paste, output is coming out ('1', '2', ''). If I remove the (?(DEFINE)...) from the pattern I get the expected ('1', '2')
[12:07:04] *** Joins: jinsl (~jinsl@180.88.96.9)
[12:07:13] *** Quits: python-learner-x (~python-le@p0723575-vcngn.tkyo.nt.ngn.ppp.ocn.ne.jp) (Quit: Client closed)
[12:10:11] <KirkMcDonald> p-i-: I would note that it isn't finding an additional *match*, it's returning an additional *group*.
[12:10:39] *** Joins: philectro (~quassel@2a02:2788:1024:671:c9fd:6b6:3733:8489)
[12:11:17] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[12:11:35] <KirkMcDonald> p-i-: Which I'd expect has something to do with the DEFINE defining an additional capture group. Even if it's never referenced.
[12:11:56] <p-i-> regex.findall(r"foo \s (\d+) \s bar \s (\d+)", "foo 1 bar 2", regex.VERBOSE)  # ('1', '2', '')
[12:13:06] <p-i-> KirkMcDonald: Is there a cleaner way to implement this? My actual pattern is more involved and defines 3 capture groups, and I get 5 superfluous '' matches.
[12:13:23] *** Quits: moth (~moth@2600:1700:5d5c:110:2593:f021:bb3d:e62e) (Remote host closed the connection)
[12:13:35] *** Quits: philectro (~quassel@2a02:2788:1024:671:c9fd:6b6:3733:8489) (Client Quit)
[12:13:36] <p-i-> So for a given pattern I'm unsure how many trailing '' matches to remove ahead of time, without testing it out.
[12:13:38] <KirkMcDonald> Is it, as in this example, defining capture groups that are not used?
[12:13:51] <EtherMan> Just the way that that pattern is defined is weird... Why are you using multiple lines like that?
[12:14:13] <KirkMcDonald> EtherMan: This is what the VERBOSE flag allows.
[12:14:26] <p-i-> EtherMan: That's the .VERBOSE flag... it allows you to whitespace your regex. To actually USE whitespace you need \s or [ ]+
[12:14:30] *** Joins: moth (~moth@2600:1700:5d5c:110:46c:d578:94b6:669d)
[12:14:42] <EtherMan> Allows ofc. But it makes the pattern very difficult to read.
[12:14:52] <p-i-> KirkMcDonald: ok let me modify to actually USE the group. I'll get the same thing tho'.
[12:15:06] <p-i-> EtherMan: Try a 20-line pattern ;)
[12:15:23] <p-i-> It depends on the complexity of your pattern.
[12:15:34] <p-i-> You can also put # comments in
[12:15:42] *** Quits: jinsl (~jinsl@180.88.96.9) (Quit: Client closed)
[12:16:01] <EtherMan> p-i-: I think you're missing the point here... It's not the whitespacing or verbose I was commenting on, but rather the very inconsistent use of linebreaks and indentation.
[12:16:05] *** Joins: ychaouche (~ychaouche@197.201.1.50)
[12:16:05] *** Quits: ychaouche (~ychaouche@197.201.1.50) (Changing host)
[12:16:05] *** Joins: ychaouche (~ychaouche@user/ychaouche)
[12:16:20] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:16:20] <The-Compiler> how to not do error handling:   logger.warning(...); return pathlib.Path("WARNING: LOOK ABOVE FOR DETAILS")
[12:16:57] <EtherMan> The-Compiler, It beats "An error has occured" ;)
[12:17:10] <KirkMcDonald> The-Compiler: What is wrong with this perfectly valid file name?
[12:17:21] <ychaouche> hello #python, I am parsing a file and adding extracted elements to a list. These can have multiple occurences, but I only need to have one occurence in the list. I also need the elements to stay in order in that list when I process it later.
[12:17:28] <p-i-> Sorry, example should have been: `regex.findall(r"foo \s (\d+) \s bar \s (\d+)  (?(DEFINE)(?<integer>\d+))", "foo 1 bar 2", regex.VERBOSE)`
[12:17:44] <ychaouche> should I test if the element is already in the list before adding it or is there another solution ?
[12:18:45] <KirkMcDonald> ychaouche: You could track a list and a set. Checking whether an element is in a set is faster than in a list.
[12:18:49] <Repiphany> ychaouche: Use a dictionary or Counter, they preserve insertion-order in python >=3.7
[12:18:51] <KirkMcDonald> Or use a dict, heh.
[12:19:07] *** Joins: ivii (~ivan@user/ivii)
[12:19:09] <parv> p-i-, Why DEFINE something if not using it?
[12:19:12] <ychaouche> oh, dicts preserve order now ? good.
[12:19:17] *** Quits: tristan_ (~tristan@223.62.175.125) (Ping timeout: 240 seconds)
[12:19:27] <p-i-> And if I actualy _use_ the pattern, I get the same thing: `regex.findall(r"foo \s ((?&integer)) \s bar \s (\d+)  (?(DEFINE)(?<integer>\d+))", "foo 1 bar 2", regex.VERBOSE)  # [('1', '2', '')]`
[12:19:39] <p-i-> parv: I'm trying to reduce to a testcase
[12:19:42] *** Joins: philectro (~quassel@2a02:2788:1024:671:f62e:ca82:1fdd:931)
[12:19:49] <The-Compiler> ychaouche: if with "now" you maen "4 years ago", sure
[12:19:52] <The-Compiler> mean*
[12:20:14] <ychaouche> The-Compiler: I've lost track of python since version 2.7
[12:20:56] <p-i-> ychaouche: Let me be the first to welcome you to the new millennium ;)
[12:21:05] <ychaouche> hah
[12:21:40] <KirkMcDonald> p-i-: The documentation of this feature seems practically nonexistent.
[12:21:40] <han-solo> `*l, = dict.fromkeys(that_list)` # not too confusing ?
[12:22:18] <ychaouche> I learned python when it was 2.4 I think, and haven't learned python since then
[12:22:19] <KirkMcDonald> han-solo: Simpler ways to express that, I expect.
[12:22:33] *** Quits: moth (~moth@2600:1700:5d5c:110:46c:d578:94b6:669d) (Remote host closed the connection)
[12:22:56] *** Joins: atrigent_ (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[12:23:04] <han-solo> KirkMcDonald: i see. `list(dict(that_list))` vs `list(dict(that_list).keys())` # ?
[12:23:14] <KirkMcDonald> p-i-: But the one example of this that I see in there puts the definition before the use; I have utterly no idea if that makes a difference.
[12:23:25] <The-Compiler> KirkMcDonald: for starters, that they call .absolute() on it (didn't even know it existed, it's undocumented), so I now get "/home/florian/hsr/autpy/grading-area/wuffcli/WARNING: LOOK ABOVE FOR DETAIL". Would've been more fun if it actually created the file too.
[12:23:34] *** Joins: moth (~moth@2600:1700:5d5c:110:46c:d578:94b6:669d)
[12:23:52] *** Joins: __ld (63a6f45fee@2a00:c70:1:178:170:40:189:1)
[12:23:57] <KirkMcDonald> han-solo: No need to call .keys() I suppose.
[12:24:05] <han-solo> is that explicit ?
[12:24:14] <The-Compiler> depends on whom you ask
[12:24:24] <han-solo> right
[12:24:24] <KirkMcDonald> han-solo: Iterating over the dict yields its keys.
[12:24:37] *** Quits: AlexisTP (~AlexisTP@92.57.44.63) (Ping timeout: 250 seconds)
[12:24:38] <The-Compiler> there are people who like .keys() because it's clearer, there are people (and linters) which hate it because it's not needed
[12:24:41] <p-i-> KirkMcDonald: Good test! Yes, putting the def first I now get [('', '1', '2')]
[12:24:46] <han-solo> i usually wonder if i write `list(dict)` do they get i just want the keys
[12:24:59] <p-i-> So it is indeed creating an empty match for a templatae. This looks like a bug.
[12:25:00] <han-solo> The-Compiler: i see
[12:25:06] <The-Compiler> I can't decide, but I'm Swiss, so I suppose it's okay if I stay neutral on the matter
[12:25:23] <han-solo> :)
[12:25:38] <KirkMcDonald> p-i-: But it isn't really a template? It's defining a capture group. Which is never referenced. So the content of the group is empty.
[12:26:26] <KirkMcDonald> p-i-: In that sense, this behavior seems entirely sensible. Why would you include a definition that is not referenced?
[12:26:37] <p-i-> KirkMcDonald: If I use it, it doesn't change a thing: regex.findall(r" (?(DEFINE)(?<integer>\d+)) foo \s ((?&integer)) \s bar \s (\d+)", "foo 1 bar 2", regex.VERBOSE)
[12:26:59] <KirkMcDonald> p-i-: You seem to have an extra set of parentheses there.
[12:27:32] <p-i-> They seem to be necessary, otherwise I just get ['']
[12:28:12] <KirkMcDonald> p-i-: The documentation seems to just be using (?&foo)
[12:28:39] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:29:39] *** Joins: fearnothing (~fearnothi@user/fearnothing)
[12:29:42] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Quit: WeeChat 2.8)
[12:29:48] <p-i-> Looking in the issues e.g. https://github.com/mrabarnett/mrab-regex/issues/431 I see different ways of using the module ... maybe I want '.match' rather than '.findall'
[12:30:06] *** Quits: VictorKostyuk[m] (~thevicmat@2001:470:69fc:105::1:64e4) (Quit: You have been kicked for being idle)
[12:30:06] *** Quits: purplepinky[m] (~purplepin@2001:470:69fc:105::1:6535) (Quit: You have been kicked for being idle)
[12:30:06] *** Quits: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6) (Quit: You have been kicked for being idle)
[12:30:06] *** Quits: Simon[m]12 (~srwalker1@2001:470:69fc:105::1:64ea) (Quit: You have been kicked for being idle)
[12:30:12] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[12:30:22] *** Joins: Lindrian (~Lindrian@about/regex/lindrian)
[12:30:25] <p-i-> The doc seems to focus on moving from re to regex, and I'm not that comfortable with re module (or even regex) yet.
[12:30:37] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[12:30:52] <Lindrian> Hi. I want to compile the python regex engine into wasm and call it from JS. Is this possible, or will I have to compile the entire interpreter?
[12:31:54] <KirkMcDonald> Lindrian: The standard library's re module is mostly implemented in C.
[12:32:04] *** Joins: nomic (~nomic@185.217.117.245)
[12:32:23] <Lindrian> KirkMcDonald: that gives me hope. Would I use cython with emscripten? Or is there an easier way?
[12:32:46] <KirkMcDonald> Lindrian: Significant parts are also written in Python.
[12:33:43] *** Joins: weedmic (~weedmic@5.102.235.240)
[12:33:58] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:34:10] <Lindrian> KirkMcDonald: welp okay.
[12:34:57] <KirkMcDonald> p-i-: Well, the short version is that .match anchors to the start of the string (impliciting adding ^ to the start of the regex, more or less), .search looks through the string until a match is found, and .findall looks through the string for every match.
[12:35:03] <KirkMcDonald> implicitly*
[12:35:20] *** Quits: SOMBRIO (~SOMBRIO@177.137.113.66) (Quit: Client closed)
[12:35:31] <KirkMcDonald> And also there's .fullmatch which basically adds ^ to the start and $ to the end of the pattern.
[12:35:38] <Lindrian> KirkMcDonald: are both "re" and "regex" equally hard to compile to wasm?
[12:35:57] <jinsun> Lindrian: you could give this a try https://github.com/ethanhs/python-wasm, it is supposed to give you full cpython though, not just re
[12:36:12] <KirkMcDonald> Lindrian: I have utterly no idea what the level of difficulty of these would be, but I imagine you'd be in for a task.
[12:36:44] <Lindrian> Right.
[12:36:54] <Lindrian> jinsun: that looks interesting, maybe I can connect with the author
[12:37:25] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:37:42] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:fd90:3f9a:65c3:e850)
[12:37:57] *** Joins: cdown (~cdown@163.114.131.1)
[12:39:16] <p-i-> KirkMcDonald: Thankyou! Added to my regex notes!
[12:39:29] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:41:08] <p-i-> KirkMcDonald: I'm filing an issue? Would would be a good title? I'm thinking "DEFINE in pattern creates unwanted empty match"
[12:41:11] *** Quits: moth (~moth@2600:1700:5d5c:110:46c:d578:94b6:669d) (Ping timeout: 252 seconds)
[12:41:38] <KirkMcDonald> p-i-: Like I said, I don't think that's an issue in and of itself.
[12:41:40] <grawity> hmm are you sure it should't be (?(DEFINE)?<integer>\d+)
[12:41:51] <grawity> oh wait nevermind
[12:42:27] <KirkMcDonald> p-i-: The DEFINE is indeed adding a capture group to the pattern.
[12:42:37] <KirkMcDonald> That's... what it's for, really.
[12:42:52] <grawity> KirkMcDonald: tbh that makes no sense to me
[12:43:37] <KirkMcDonald> I guess I see this as an edge case: You define the group but never reference it.
[12:43:59] <Lindrian> The DEFINE construct allows you to define groups for later use. They are not matched your your pattern until you call them.
[12:45:19] <KirkMcDonald> And I kinda expect my regexes to be pretty bloodymindedly literal about which groups exist.
[12:45:28] <KirkMcDonald> And in what order.
[12:45:35] *** Quits: darks0ul (~darksoul@2409:4043:2202:7ae7:e0d6:aac9:fbfd:affe) (Ping timeout: 252 seconds)
[12:46:02] <Lindrian> grawity: https://regex101.com/r/hQ0ljc/1 here is an example to showcase it.
[12:46:19] <Lindrian> It can be useful to use this for more complex patterns, especially where you have repeating use of the same group construct.
[12:46:39] <grawity> right, that's what I imagined DEFINE would do
[12:46:57] <grawity> not adding any capture groups
[12:47:15] <Lindrian> Yes, it does not add any capture groups. It simply defines "functions" you can call later down the line
[12:47:24] *** Joins: darks0ul (~darksoul@103.69.47.214)
[12:47:53] <KirkMcDonald> Well, the regex module's documentation seems to suggest that it's implemented in terms of capture groups.
[12:48:00] *** Joins: mcope (~matt@user/mcope)
[12:48:00] <KirkMcDonald> So perhaps that's the problem in the first place.
[12:48:12] <Lindrian> KirkMcDonald: the capture groups are used to "name" the functions.
[12:48:12] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:b54:51f:6720:5b3c) (Remote host closed the connection)
[12:48:41] <KirkMcDonald> Well it all seems to be one namespace, as it were.
[12:49:33] <KirkMcDonald> (I admit, I try to stay away from PCRE esoterica, so I am not familiar with this feature.)
[12:49:39] *** Quits: atrigent_ (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[12:50:01] <Lindrian> KirkMcDonald: you're not wrong, its a confusing way of introducing the functionality.
[12:50:16] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:8b58:1b83:a2e1:a1df)
[12:51:21] *** Joins: vladoski (~vladoski@2001:b07:add:d406:2f84:5cd3:7287:8160)
[12:51:28] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:8b58:1b83:a2e1:a1df) (Remote host closed the connection)
[12:51:29] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[12:52:03] *** Quits: vladoski (~vladoski@2001:b07:add:d406:2f84:5cd3:7287:8160) (Remote host closed the connection)
[12:52:06] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 260 seconds)
[12:52:46] *** Joins: stwange (~j@82.21.202.140)
[12:52:57] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[12:53:39] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[12:53:40] *** Joins: tristan_ (~tristan@223.62.175.125)
[12:54:06] *** Joins: vladoski (~vladoski@2001:b07:add:d406:b87c:82d:b0c0:3578)
[12:54:35] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:df3e:ef17:255f:ee78)
[12:54:45] *** Quits: dcimense (~dcimer@ip68-5-48-79.oc.oc.cox.net) (Ping timeout: 256 seconds)
[12:55:19] *** Quits: stwange (~j@82.21.202.140) (Client Quit)
[12:55:49] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:2df2:1ec5:8dd3:29f0)
[12:56:06] *** Joins: fearnoth1ng (~fearnothi@user/fearnothing)
[12:56:21] *** Quits: fearnothing (~fearnothi@user/fearnothing) (Ping timeout: 256 seconds)
[12:57:45] *** Quits: NeoCore (~neocore@37.120.204.174) (Quit: Leaving)
[12:59:08] *** Joins: iptable (~iptable@host-80-41-139-172.as13285.net)
[13:00:05] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: dtux)
[13:00:09] *** Joins: foobared (~kl@2E8BB06D.catv.pool.telekom.hu)
[13:02:36] *** Quits: iptable (~iptable@host-80-41-139-172.as13285.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:03:06] *** Joins: iptable (~iptable@host86-178-62-113.range86-178.btcentralplus.com)
[13:04:15] *** Joins: BAD (~mad@user/god)
[13:05:49] *** Joins: revilaika (~revilaika@151.144.8.109.rev.sfr.net)
[13:06:25] <parv> Well r'...{}'.format( ... ) works to create a regex from other variables just fine: https://termbin.com/dwpe
[13:07:11] *** Quits: lyr (~lyr@user/lyr) (Read error: Connection reset by peer)
[13:09:15] *** Joins: lyr (~lyr@user/lyr)
[13:09:29] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Restarting for Windows updates.)
[13:10:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[13:11:04] *** Joins: m_tadeu (~quassel@bl7-240-233.dsl.telepac.pt)
[13:12:01] *** Joins: dcimense (~dcimer@ip68-5-48-79.oc.oc.cox.net)
[13:12:18] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:12:20] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:13:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[13:13:30] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Remote host closed the connection)
[13:14:04] *** Joins: AlexisTP (~AlexisTP@92.57.44.63)
[13:14:46] <p-i-> Filed https://github.com/mrabarnett/mrab-regex/issues/452
[13:15:20] *** Joins: fikran (~fikran@user/fikran)
[13:15:30] <p-i-> parv: Can you get r-strings into r-strings that way?
[13:15:44] <p-i-> I tried doing it with f-strings, but got into a tangle.
[13:15:51] <p-i-> or rf-strings I suppose
[13:16:32] <parv> p-i-, I do not know, neither had I tried.
[13:18:03] *** Joins: rsx (~dummy@ppp-188-174-159-192.dynamic.mnet-online.de)
[13:18:58] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[13:19:31] *** Joins: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net)
[13:20:14] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[13:21:22] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:21:37] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[13:21:38] *** Joins: yac (~user@user/yac)
[13:21:57] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Ping timeout: 240 seconds)
[13:22:04] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[13:22:18] *** Quits: tobybl_ (~tobybl@214.242.200.146.dyn.plus.net) (Client Quit)
[13:23:01] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Max SendQ exceeded)
[13:23:28] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[13:23:57] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[13:25:06] <parv> ... that was also why I went straight to str.format()
[13:25:11] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 252 seconds)
[13:26:22] *** Joins: clarkk (~clarkk@2a00:23c7:d106:2600:c956:e349:7555:8148)
[13:27:08] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[13:27:20] <p-i-> Great! I didn't realize it could do things that f-strings couldn't. I thought f-strings were obsolete now.
[13:27:22] *** Quits: parv (~quass@user/parv) (Quit: parv)
[13:27:25] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[13:27:53] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[13:28:00] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[13:28:16] *** Joins: ubert (~Thunderbi@p200300ecdf0994700e1bfcbc5fe04b55.dip0.t-ipconnect.de)
[13:29:11] <teut> you can use  lambda a, b , c: f"{a}{b}{c}"  too
[13:29:30] <teut> but ya format is better since it exists
[13:29:52] <jinsun> some people even have extreme opinions that str.format is all you need
[13:30:17] *** Quits: dcimense (~dcimer@ip68-5-48-79.oc.oc.cox.net) (Ping timeout: 240 seconds)
[13:30:23] *** Joins: dntreou (~yakiza@105-209-145-202.access.mtnbusiness.co.za)
[13:31:22] *** Parts: foobared (~kl@2E8BB06D.catv.pool.telekom.hu) ()
[13:31:30] <jinsun> for example I recently saw this https://github.com/wemake-services/wemake-python-styleguide/issues/32
[13:32:32] *** Joins: shad (~shad@user/shad)
[13:32:51] *** Joins: faceface (~faceface@user/faceface)
[13:33:09] *** Joins: nikos (~nikos@nikos.dev)
[13:33:21] <nikos> "urllib.error.URLError: <urlopen error unknown url type: unix>"
[13:33:28] <nikos> Hm, urllib doesn't like unix:// urls?
[13:34:11] <nikos> What's the correct way to make a request to a socket?
[13:34:30] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:34:37] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[13:35:47] *** Quits: davix (~nephilim@DSL62-0-142-225.bb.netvision.net.il) (Remote host closed the connection)
[13:36:34] *** Joins: davix (~nephilim@DSL62-0-142-225.bb.netvision.net.il)
[13:36:37] *** Joins: stwange (~j@82.21.202.140)
[13:37:17] *** Quits: onichomp (~onichomp@2806:264:4408:d8:48d7:b394:c88f:a09a) (Ping timeout: 252 seconds)
[13:37:33] <grawity> there's no standard for unix:// urls
[13:38:01] <grawity> (the whole "unix://" part doesn't even make sense semantically, as far as URL schemes go...)
[13:38:03] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:38:29] <grawity> there might be ways to do this, I'm not sure if you would need to pass urllib an already open socket somehow
[13:38:29] <nikos> tried http+unix:// that didn't work either. I'm just looking for how to point urllib to a socket
[13:38:38] <nikos> Hm...
[13:39:05] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[13:39:08] *** Joins: bluedust_ (~bluedust@103.160.194.12)
[13:39:20] *** Joins: tomg_ (~tomg@user/tomg)
[13:39:37] *** Quits: bluedust (~bluedust@103.148.20.48) (Ping timeout: 240 seconds)
[13:39:43] <grawity> hmm maybe just manually connect to the socket, send an urllib.Request to it, then have urllib.Response parse the reply
[13:39:45] <grawity> "just"
[13:39:46] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[13:41:09] *** Joins: audiobirb (~audio@user/audio)
[13:41:13] <grawity> so many abstractions I can't even find the part that deals with sockets
[13:41:42] *** Quits: tomg (~tomg@user/tomg) (Ping timeout: 256 seconds)
[13:41:59] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[13:42:17] <grawity> if you were using `requests`, then I found https://pypi.org/project/requests-unixsocket/
[13:42:23] <grawity> for urllib not sure
[13:42:55] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 256 seconds)
[13:44:08] *** Seto_Kaiba is now known as Hunterkll
[13:44:11] *** Quits: BAD (~mad@user/god) (Quit: brb)
[13:45:33] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[13:45:35] *** Joins: timkofu (~timkofu@196.106.22.73)
[13:45:35] *** Quits: timkofu (~timkofu@196.106.22.73) (Changing host)
[13:45:35] *** Joins: timkofu (~timkofu@user/timkofu)
[13:46:50] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[13:47:13] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[13:47:22] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Client Quit)
[13:48:01] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 256 seconds)
[13:48:15] *** Quits: els12 (~els12@130.76.24.11) (Ping timeout: 256 seconds)
[13:49:04] *** Joins: bindu (~bindu@user/bindu)
[13:51:17] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[13:52:24] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[13:52:31] <nikos> Was looking for a way to do it with only the standard lib to avoid extra dependencies. Seems like way too complicated than what it should be :/
[13:52:43] *** Joins: darksun (~darksun@user/darksun)
[13:54:06] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 245 seconds)
[13:54:29] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.4)
[13:54:45] * nikos debates solving this with a subprocess to curl
[13:54:56] *** Joins: dme86 (~dan@user/dan86)
[13:55:22] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[13:55:47] *** Joins: Klinda (~superleag@user/klinda)
[13:57:42] *** Joins: upsala (~zcb@185.213.155.252)
[13:58:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:58:37] *** Joins: imp (~imp@177-131-189-195.static.sumicity.net.br)
[14:01:32] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[14:01:36] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[14:01:53] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Client Quit)
[14:03:12] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[14:03:36] *** Joins: Payam (~Payam@138.106.57.132)
[14:04:22] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[14:06:05] *** Joins: xkuru (~xkuru@user/xkuru)
[14:07:17] *** Quits: tristan_ (~tristan@223.62.175.125) (Ping timeout: 256 seconds)
[14:07:59] *** Quits: amaenli (~amaenli@aries.uberspace.de) (Changing host)
[14:07:59] *** Joins: amaenli (~amaenli@user/amaenli)
[14:10:35] *** Joins: Guest22 (~Guest22@dslb-188-096-121-068.188.096.pools.vodafone-ip.de)
[14:10:40] *** Guest22 is now known as Gurkenglas_
[14:12:01] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 245 seconds)
[14:12:18] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[14:14:10] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[14:14:15] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[14:15:27] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[14:15:27] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[14:15:27] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[14:15:38] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Client Quit)
[14:16:09] <kai> hi folks
[14:16:24] <nedbat> kai: hey there
[14:16:31] <kai> I'm trying to add type hints to a CLI I'm building
[14:17:31] *** Joins: dme86 (~dan@user/dan86)
[14:17:32] <kai> I've got a bunch of subcommands that all live in their own modules and have a `register(subcommands)` function
[14:18:07] <kai> er `register(subparsers)`, sorry
[14:18:20] <kai> where `subparsers = parser.add_subparsers("thing")`
[14:19:12] <kai> Pylance suggests that the return type of `parsers.add_subparsers()` is `_SubParsersAction[ArgumentParser]`
[14:20:19] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[14:20:43] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[14:20:43] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:fd90:3f9a:65c3:e850) (Remote host closed the connection)
[14:20:59] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[14:21:06] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:60ef:8113:9157:1102)
[14:22:30] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[14:22:40] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[14:24:29] <kai> but the python interpreter doesn't like that: `TypeError: 'type' object is not subscriptable`
[14:25:44] *** Joins: jhulten_ (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[14:25:51] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[14:25:59] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[14:26:26] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:26:26] <kai> and it seems like the html docs don't mention any types
[14:26:52] *** Joins: mickey8 (~user@user/mickey)
[14:27:37] *** Quits: callq (~callq@2409:4062:2d8d:345f:4836:a5d4:7aa7:5f2b) (Ping timeout: 240 seconds)
[14:28:58] <The-Compiler> Is there some kind of package on PyPI I could use to calculate grades? Things like multiple assignments, each with a reached/total score, and then those weighted in different ways to get a final grade. I know I could just hand-roll it, but it's easy to make a dumb mistake with those kind of things, and then there are questions like rounding (I don't think banker rounding makes sense, I'd probably
[14:29:00] <The-Compiler> prefer always rounding up on ties, and I need to round to quarters)
[14:29:15] <yanmaani> sounds like a job for excel
[14:29:23] <p-i-> or numpy
[14:29:29] *** Joins: AlanMD (~AlanMD@5-12-91-140.residential.rdsnet.ro)
[14:29:30] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:29:56] <p-i-> pandas + numpy
[14:30:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[14:30:50] *** Lord_of_Life_ is now known as Lord_of_Life
[14:30:57] <kai> ah, to answer my own question, `def register(subparsers: "argparse._SubParsersAction[argparse.ArgumentParser]"):` fixes this properly in a way that python, mypy, and pylance like
[14:31:56] <nedbat> kai: it's unfortunate to have to use an underscored type name like that
[14:32:58] <kai> yeah, but argparse isn't super typing-friendly in many regards
[14:33:12] *** Joins: voidiov (~voidiov@2a02:2f0e:6203:4c00:7800:f54c:e520:dd6f)
[14:33:27] <kai> argparse.Namespace is a mess
[14:33:41] <kai> arguably, a convenient mess
[14:33:52] *** Joins: walterwhip (~www@user/walterwhip)
[14:34:11] <nedbat> kai: are you sure it's worth it to use that type annotation?
[14:34:18] *** Joins: dme86 (~dan@user/dan86)
[14:34:53] <kai> yes, because that makes type completion work, and with all the argparse functions taking approximately 3 billion parameters, it's really nice to have that
[14:34:58] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:35:43] <kai> arguably a type alias would be a bit nicer
[14:36:02] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[14:36:16] *** Joins: califax (~califax@user/califx)
[14:38:13] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[14:38:18] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:38:53] *** Quits: luigibu (~luigi@93.176.155.54) (Quit: WeeChat 3.4)
[14:38:54] <kai> but that again breaks on the subscript, and you can't quote type alias definitions
[14:39:01] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[14:41:29] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[14:41:53] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:42:11] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[14:44:30] *** Joins: luigibu (~luigi@93.176.155.54)
[14:45:23] *** Joins: bindu (~bindu@user/bindu)
[14:45:37] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[14:46:39] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:47:15] *** tinystoat is now known as typoholic
[14:48:19] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[14:49:08] *** Quits: skogarmaor (~Srain@64.184.2.236) (Remote host closed the connection)
[14:51:08] *** Joins: dme86 (~dan@user/dan86)
[14:51:39] *** Joins: foul_owl (~kerry@23.82.193.78)
[14:52:22] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:52:55] *** Parts: ychaouche (~ychaouche@user/ychaouche) (Konversation terminated!)
[14:53:16] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:54:21] *** Joins: damonlynch (~ngaio@static-68-235-44-43.cust.tzulo.com)
[14:54:53] *** Quits: voidiov (~voidiov@2a02:2f0e:6203:4c00:7800:f54c:e520:dd6f) ()
[14:54:57] *** Joins: timkofu_ (~timkofu@196.106.22.73)
[14:54:57] *** Quits: timkofu_ (~timkofu@196.106.22.73) (Changing host)
[14:54:57] *** Joins: timkofu_ (~timkofu@user/timkofu)
[14:55:00] *** Quits: vin (~vin@user/crash) (Quit: WeeChat 2.8)
[14:55:37] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:55:41] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[14:56:51] *** Quits: walterwhip (~www@user/walterwhip) (Read error: Connection reset by peer)
[14:56:52] *** Joins: dme86 (~dan@user/dan86)
[14:58:09] *** Quits: nomic (~nomic@185.217.117.245) (Quit: Leaving)
[14:58:12] *** Quits: timkofu (~timkofu@user/timkofu) (Ping timeout: 256 seconds)
[14:58:31] *** Quits: the_lanetly_052_ (~the_lanet@185.30.91.158) (Ping timeout: 256 seconds)
[14:59:44] *** Joins: Xedtr (~Xedtr@185.97.201.104)
[15:03:26] *** Quits: luigibu (~luigi@93.176.155.54) (Quit: WeeChat 3.4)
[15:03:46] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[15:04:10] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 260 seconds)
[15:04:18] <voldial> is there a way to hook into the exception handeler to print out the repr(values) on the last line when this happens? https://bpa.st/4WXQ
[15:05:42] *** Joins: han-solo (~hanish@103.82.184.207)
[15:06:19] *** Joins: esther (~esther@2607:fb90:20d1:4b2c:51c4:aef0:1f3d:4511)
[15:06:27] *** Quits: foul_owl (~kerry@23.82.193.78) (Ping timeout: 256 seconds)
[15:06:27] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[15:06:34] *** Joins: dcimense (~dcimer@ip68-5-48-79.oc.oc.cox.net)
[15:07:23] <jinsun> kai: the base class for argparse._SubParsersAction is argparse.Action, which is public, maybe you could use that?, unless your code really needs that specific class
[15:08:27] <kai> jinsun: code completion needs the specific class
[15:08:28] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[15:09:09] <jinsun> no, code completion will work for both the base and the subclass
[15:09:23] <jinsun> it just won't show you the extra methods the subclass added
[15:09:43] <jinsun> and if you don't need them, you don't need to care about missing them
[15:10:17] *** Quits: esther (~esther@2607:fb90:20d1:4b2c:51c4:aef0:1f3d:4511) (Ping timeout: 240 seconds)
[15:11:30] <kai> jinsun: well, getting the return type right for `subparsers.add_parser()` is the whole reason of the exercise
[15:11:40] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[15:12:01] <jinsun> okay, sounds like you really need the subclass then
[15:12:06] <kai> because if I type hint `argparse.Action`, that is assumed to return `Any`, and then the type-based code completion is busted
[15:13:23] *** Joins: vitali64 (~vitali64@user/vitali64)
[15:14:03] <jinsun> eh? argparse.Action is not the same as Any, I get auto-completion if I use that as the type hint, it shows .help .default etc.
[15:14:28] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[15:15:41] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[15:16:03] *** Quits: vitali64 (~vitali64@user/vitali64) (Client Quit)
[15:16:18] *** Joins: vitali64 (~vitali64@user/vitali64)
[15:16:29] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[15:16:49] *** Joins: kevr (~kevr@user/kevr)
[15:18:02] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:18:06] *** Joins: paul424 (~tom@ip-5-172-239-26.multi.internet.cyfrowypolsat.pl)
[15:18:07] *** Quits: dcimense (~dcimer@ip68-5-48-79.oc.oc.cox.net) (Ping timeout: 256 seconds)
[15:19:39] <paul424> Hello, hello I have problem with the pygame module : Suppose I intricattly create a creature with rect, line and circle
[15:19:52] <paul424> How do I shift it around the screen and scale as I wish ?
[15:20:59] *** Quits: grooverman_ (~grooverma@179.97.133.197) (Read error: Connection reset by peer)
[15:21:22] <The-Compiler> some more "tales from grading students": eval(response.content) to... parse JSON
[15:22:10] <apollo13> The-Compiler: now you make me curious, does that work for every json object?
[15:22:23] <The-Compiler> apollo13: it does not work for true/false/null
[15:22:32] <apollo13> oh yeah, stupid me
[15:22:40] <The-Compiler> it happens to work for https://random.dog/woof.json
[15:22:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[15:22:56] *** Joins: grooverman (~grooverma@179.97.133.197)
[15:23:42] *** Quits: martums5 (~martums@user/martums) (Ping timeout: 256 seconds)
[15:23:45] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[15:24:41] *** Joins: fikran (~fikran@user/fikran)
[15:26:34] *** Joins: cdown_ (~cdown@188.214.11.14)
[15:26:48] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:27:31] *** Quits: bluedust_ (~bluedust@103.160.194.12) (Remote host closed the connection)
[15:28:22] <jmd> I have a thread which throws an exception.  I'm catching that exception inside the thread and dealing with it accordingly.  However, it seems that after that, the thread dies.   It this the documented behaviour?  I don't see anything about it.
[15:29:13] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 250 seconds)
[15:29:20] *** cdown_ is now known as cdown
[15:29:25] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[15:29:52] *** Joins: blingrang_ (~blingrang@user/blingrang)
[15:29:56] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[15:30:22] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[15:30:39] *** Joins: mickey8 (~user@user/mickey)
[15:31:04] *** Joins: bluedust (~bluedust@103.160.194.12)
[15:31:19] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:31:29] *** Joins: martums5 (~martums@user/martums)
[15:32:38] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:4839:a2a7:487b:278c) (Ping timeout: 260 seconds)
[15:33:12] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:9cfa:ea51:f041:e757)
[15:35:02] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 256 seconds)
[15:35:05] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 250 seconds)
[15:35:08] *** Joins: luigibu (~luigi@93.176.155.54)
[15:35:30] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:35:55] *** Quits: han-solo (~hanish@103.82.184.207) (Changing host)
[15:35:55] *** Joins: han-solo (~hanish@user/han-solo)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:23] *** Joins: blingrang_ (~blingrang@user/blingrang)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:03] *** Quits: dntreou (~yakiza@105-209-145-202.access.mtnbusiness.co.za) (Ping timeout: 256 seconds)
[15:37:25] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[15:38:41] *** Joins: maxzor (~maxzor@2a01cb04054faa00c11e5dc6b0c99ebb.ipv6.abo.wanadoo.fr)
[15:38:59] *** Joins: pycurious (~Adium@user/pycurious)
[15:39:05] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:41:02] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 260 seconds)
[15:41:21] *** Joins: Z-cat (~Z-cat@user/z-cat)
[15:41:35] *** Quits: M3troidman (~buttler@196.244.191.100) (Ping timeout: 256 seconds)
[15:41:48] *** Quits: paul424 (~tom@ip-5-172-239-26.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[15:42:01] *** Joins: M3troidman (~buttler@196.244.191.100)
[15:42:09] <iptable> jmd no, if you catch the exception and deal with it, that's it. your code can continue. when you say thread dies, you mean it stops execution abruptly? Check on which code line, is it in the exception handling, or further down in the code for some other reason.
[15:42:11] *** Quits: teut (~teut@2401:4900:1c68:dbe1:10ec:5212:d799:1742) (Quit: Client closed)
[15:42:15] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[15:42:21] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[15:42:27] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[15:43:05] *** Quits: darks0ul (~darksoul@103.69.47.214) (Ping timeout: 250 seconds)
[15:43:40] <jmd> iptable: Okay, I'm having a look now to see what's going on.  Thanks.
[15:43:46] *** Quits: waveform (~quassel@waveform.plus.com) (Ping timeout: 250 seconds)
[15:44:40] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[15:45:11] *** Joins: darks0ul (~darksoul@2409:4043:89d:a29:c217:f358:a4ab:b294)
[15:45:14] *** Joins: dme86 (~dan@user/dan86)
[15:45:20] *** Joins: waveform (~quassel@waveform.plus.com)
[15:45:56] *** Joins: zauq (~zauq@94.203.254.221)
[15:47:19] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 268 seconds)
[15:47:45] *** Joins: txhc4lif- (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[15:48:09] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 256 seconds)
[15:48:58] *** Joins: BlessJah (~BlessJah@user/blessjah)
[15:49:40] *** Joins: onichomp (~onichomp@2806:264:4408:870:ddc8:ba3f:3971:8979)
[15:50:15] *** Joins: timkofu (~timkofu@196.106.22.73)
[15:50:15] *** Quits: timkofu (~timkofu@196.106.22.73) (Changing host)
[15:50:15] *** Joins: timkofu (~timkofu@user/timkofu)
[15:50:18] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[15:50:29] *** Quits: zauq (~zauq@94.203.254.221) (Client Quit)
[15:50:30] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Remote host closed the connection)
[15:51:51] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[15:53:44] *** Quits: timkofu_ (~timkofu@user/timkofu) (Ping timeout: 256 seconds)
[15:54:03] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 256 seconds)
[15:55:09] *** masoudd_ is now known as masoudd
[15:55:36] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[15:56:33] *** Quits: bluedust (~bluedust@103.160.194.12) (Remote host closed the connection)
[15:57:21] *** Joins: AnimalFarmPig (~quassel@user/animalfarmpig)
[15:58:38] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:9cfa:ea51:f041:e757) (Ping timeout: 252 seconds)
[15:59:33] <wyre> how can I include a whole directory recursively with `package_data`?
[16:00:28] <wyre> package_data={'mypackage': ['resources']} doesn't include the folder 🤔
[16:00:28] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[16:00:41] *** Joins: han-solo (~hanish@103.82.184.207)
[16:02:01] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:b004:f50:2de1:c5af)
[16:02:01] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:b004:f50:2de1:c5af) (Changing host)
[16:02:01] *** Joins: skapata (~Skapata@user/skapata)
[16:02:02] *** Joins: d1cor (~diego@179.63.242.122)
[16:02:56] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[16:03:18] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[16:03:41] *** Quits: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com) (Ping timeout: 256 seconds)
[16:04:10] *** Joins: ekathva_ (~ekathva@2001:999:50:cab1:2a0:4370:b0b2:db60)
[16:04:20] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[16:04:33] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[16:04:55] *** Joins: zeden (~zeden@user/zeden)
[16:05:18] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[16:06:15] *** Quits: zeden (~zeden@user/zeden) (Remote host closed the connection)
[16:06:26] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[16:06:32] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[16:06:52] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[16:07:37] *** Quits: ekathva_ (~ekathva@2001:999:50:cab1:2a0:4370:b0b2:db60) (Remote host closed the connection)
[16:08:17] *** Joins: Guddu (~Guddu@59.95.234.221)
[16:08:37] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[16:09:59] *** Joins: rddd (~user@c-407ce255.012-81-73746f39.cust.ownit.se)
[16:10:26] *** Quits: han-solo (~hanish@103.82.184.207) (Ping timeout: 260 seconds)
[16:11:40] <zamanf> do you guys have any recommendations for multiprocessing and shared variables?
[16:12:00] *** Joins: han-solo (~hanish@103.104.46.32)
[16:12:03] *** Quits: Linux77 (~LinuMage@186.233.179.225) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[16:12:45] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[16:12:55] *** Joins: bindu (~bindu@user/bindu)
[16:14:08] *** Quits: han-solo (~hanish@103.104.46.32) (Changing host)
[16:14:08] *** Joins: han-solo (~hanish@user/han-solo)
[16:14:13] <kosh> zamanf, basically you copy the variables to the children, there is also a way to do sharing through numpy arrays but that is more complicated
[16:14:30] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[16:14:43] <zamanf> how about from child process to the main one?
[16:15:09] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[16:15:35] *** Quits: Allegretto (~allegrett@92-249-212-236.pool.digikabel.hu) (Ping timeout: 256 seconds)
[16:19:00] *** Joins: gtk2 (~gtk2@snf-885513.vm.okeanos.grnet.gr)
[16:20:41] <kosh> basically return that to the parent
[16:21:21] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[16:21:45] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Quit: ThePhilgrim)
[16:22:03] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[16:22:37] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[16:22:59] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[16:23:15] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[16:23:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[16:23:55] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[16:23:56] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 252 seconds)
[16:24:19] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[16:24:21] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Quit: Leaving)
[16:24:40] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[16:25:04] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Remote host closed the connection)
[16:25:17] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[16:25:23] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[16:25:32] *** Joins: tristan_ (~tristan@223.62.202.113)
[16:25:46] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:26:05] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[16:26:18] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[16:26:49] <wyre> hi guys, I'm not sure why I'm having problems to build my app in a venv https://bpa.st/U7BQ
[16:26:59] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[16:26:59] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Remote host closed the connection)
[16:27:11] <wyre> it cannot import numpy, but it's installed and I can import it if I open a python3 interpreter and import it manually
[16:27:12] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[16:27:24] <wyre> so ... why it cannot be imported?
[16:27:32] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[16:27:44] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[16:27:49] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[16:27:55] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[16:27:59] *** Joins: Allegretto (~allegrett@87-97-89-29.pool.digikabel.hu)
[16:28:00] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[16:29:46] <han-solo> `venv/bin/python -m pip ...`OC
[16:29:49] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:29:55] *** Quits: rsx (~dummy@ppp-188-174-159-192.dynamic.mnet-online.de) (Quit: rsx)
[16:30:01] <han-solo> s/OC//
[16:30:01] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:e4af:750c:7b8:c5e6)
[16:30:14] <kai> jinsun: sorry, was in a meeting. I meant the return type of `subparsers.add_parser()` seems to be interpreted as `Any` if I use `argparse.Action` as the type for `subparsers`
[16:30:28] <wyre> han-solo, https://bpa.st/3K2A
[16:30:29] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[16:30:30] <wyre> it's the same
[16:30:37] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Remote host closed the connection)
[16:30:51] *** Joins: ThePhilgrim (~Fubbebubb@151.40.115.120)
[16:31:03] *** Quits: ThePhilgrim (~Fubbebubb@151.40.115.120) (Remote host closed the connection)
[16:31:04] <han-solo> i mean, `venv/bin/python -m pip install .`
[16:31:07] <wyre> https://bpa.st/EEXQ
[16:31:11] <wyre> the very same, han-solo
[16:31:15] *** Joins: Fubbebubbe (~Fubbebubb@151.40.115.120)
[16:31:20] *** Quits: Xedtr (~Xedtr@185.97.201.104) (Quit: Leaving)
[16:31:26] *** Joins: matkor (~matkor@ns0.ant.gliwice.pl)
[16:31:30] <jinsun> kai: ah right, I didn't read properly, that one is definitely in the subclass only, the base class doesn't provide
[16:31:32] <wyre> I've activated the venv, so I guess using the full path doesn't make the difference
[16:32:11] <matsaman> wyre: what's your arch?
[16:32:26] <wyre> matsaman, x86_64
[16:32:51] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[16:33:33] *** Quits: Fubbebubbe (~Fubbebubb@151.40.115.120) (Client Quit)
[16:33:48] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[16:33:48] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[16:33:48] *** Joins: JordiGH (~jordi@user/jordigh)
[16:33:56] *** Joins: ThePhilgrim (~ThePhilgr@151.40.115.120)
[16:34:13] <jinsun> kai: another alternative is to define a Protocol with the add_parser method, but that will be too much work compared to just using the "private" class
[16:34:26] *** Joins: defiant (~defiant@user/defiant)
[16:34:46] *** Quits: ThePhilgrim (~ThePhilgr@151.40.115.120) (Client Quit)
[16:34:53] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[16:35:01] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[16:35:01] *** Joins: menace (~someone@user/menace)
[16:35:03] <kai> jinsun: yeah, I think the private class will do for now
[16:35:05] *** menace is now known as Deknos
[16:35:18] <wyre> han-solo, I find this particularly weird ... because ... as I've said ... I'm able to import the module
[16:35:58] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:36:01] <matsaman> wyre: so what's 'type python' say?
[16:36:26] <wyre> matsaman, python is /home/packager/packages/coordinator_p191/venv/bin/python
[16:36:32] <wyre> as I've said ... I've activated the venv
[16:37:12] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[16:37:27] <matsaman> what's $VIRTUAL_ENV?
[16:37:57] <wyre> soooo weird, definitely https://bpa.st/FYIA matsaman han-solo
[16:38:05] <dante-as> Hi guys, I would need some help. I need exactly what it is asked in this Stackoverflow question https://stackoverflow.com/questions/52929290/how-can-i-rename-levelname-to-level-in-python-log-messages but I would need that `level` to be on the same spot as `levelname`. How can I achieve that?
[16:38:24] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[16:38:30] *** Joins: bluedust (~bluedust@103.160.194.12)
[16:39:23] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:39:43] <matsaman> wyre: and if you recreate the venv?
[16:39:45] *** Quits: fearnoth1ng (~fearnothi@user/fearnothing) (Remote host closed the connection)
[16:40:07] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[16:40:21] *** Joins: AlanMD_ (~AlanMD@193.105.140.131)
[16:40:55] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[16:41:27] *** Joins: By3way (~byeway@2001:448a:50e0:160c:9b69:b232:7ec6:1b89)
[16:41:29] <wyre> matsaman, the very same https://bpa.st/HVHQ
[16:42:20] <matsaman> wyre: what's the dir structure like?
[16:42:30] <wyre> matsaman, for the venv?
[16:42:40] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[16:43:13] <matsaman> well, the project
[16:43:33] *** Quits: AlanMD (~AlanMD@5-12-91-140.residential.rdsnet.ro) (Ping timeout: 250 seconds)
[16:43:47] <matsaman> the '.' in your pip install .
[16:44:48] <han-solo> do you have a pyproject.toml as well ?
[16:44:50] *** Quits: grooverman (~grooverma@179.97.133.197) (Read error: Connection reset by peer)
[16:44:58] <wyre> https://bpa.st/E2XQ matsaman han-solo
[16:45:08] <wyre> but that's only dirs 🤔
[16:45:08] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[16:45:26] <wyre> https://bpa.st/KZ4A
[16:45:31] <wyre> I think this is better
[16:45:37] <wyre> but the project needs to be cleaned, for sure
[16:45:39] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[16:45:57] *** Quits: By3way (~byeway@2001:448a:50e0:160c:9b69:b232:7ec6:1b89) (Client Quit)
[16:45:58] *** Joins: grooverman (~grooverma@189.110.126.17)
[16:46:51] <matsaman> wyre: 'type pip3'?
[16:47:02] <wyre> matsaman, pip3 is /home/packager/packages/coordinator_p191/venv/bin/pip3
[16:47:09] *** Joins: By3way (~kasf@2001:448a:50e0:160c:9b69:b232:7ec6:1b89)
[16:47:24] <matsaman> plllbbb, hum
[16:47:35] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:48:41] <wyre> I find particularly weird that I'm able to import it from python3 interpreter but ... I setup.py cannot import it 😞
[16:48:50] <matsaman> wyre: you see numpy in venv/lib/python#/site-packages?
[16:49:27] <wyre> matsaman, sure https://bpa.st/ALZQ
[16:50:06] <han-solo> wyre: can you try `venv/bin/python -m pip install --no-use-pep517 .`
[16:50:13] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 240 seconds)
[16:50:33] <han-solo> if they have pyproject.toml, i think this has something to do with build isolation ?
[16:50:42] <wyre> han-solo, ERROR: Disabling PEP 517 processing is invalid: project specifies a build backend of setuptools.build_meta in pyproject.toml
[16:51:43] *** Quits: NovaXrine (~NovaXrine@void.novaxrine.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[16:52:03] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[16:52:28] <wyre> han-solo, well, I added the pyproject.toml because maybe in a future we could switch the build system
[16:52:49] <wyre> but I actually don't need it because pip3 install . apparently parses the setup.py directly, am I right?
[16:53:26] <jinsun> to disable isolation use --no-build-isolation
[16:53:34] <jinsun> not --no-use-pep517
[16:53:56] <apollo13> or fix your setup.py/pyproject.toml to properly have numpy as build dependency
[16:54:22] <apollo13> ie add numpy to [build-system] requires
[16:54:31] <jinsun> or yeah add stuff to the build-system requires, insted of installing in the current venv
[16:55:16] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (Client Quit)
[16:55:26] <wyre> thank you apollo13 😊
[16:56:01] <wyre> so apparently pip3 install . also parses the pyproject.toml?
[16:56:13] <apollo13> yes
[16:56:14] *** Quits: urb4nm (~urb4nm@165.227.158.65) (Quit: The Lounge - https://thelounge.chat)
[16:56:19] <apollo13> (hopefully :D)
[16:56:27] <apollo13> everything should parse pyproject.toml if it is there
[16:56:42] *** Joins: urb4nm (~urb4nm@165.227.158.65)
[16:56:42] *** Quits: urb4nm (~urb4nm@165.227.158.65) (Client Quit)
[16:57:07] <wyre> well, ... I'm still having problems to include the resources folder as part of the coordinator module ...
[16:57:10] *** Joins: urb4nm (~urb4nm@165.227.158.65)
[16:57:19] <wyre> I'm not sure if this is because coordinator is actually a module, not a package 🤔
[16:57:22] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[16:57:51] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 256 seconds)
[16:58:04] <apollo13> that might make it hard to install, maybe switch over to a package?
[16:59:26] *** Quits: jcass (~cindy@50-0-146-31.dsl.dynamic.fusionbroadband.com) (Quit: Leaving)
[17:00:08] *** Quits: clarkk (~clarkk@2a00:23c7:d106:2600:c956:e349:7555:8148) (Quit: Leaving)
[17:00:11] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[17:01:29] *** Quits: philomath (~philomath@dgplug/philomath) (Ping timeout: 256 seconds)
[17:01:54] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[17:02:36] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:02:53] *** Quits: urb4nm (~urb4nm@165.227.158.65) (Remote host closed the connection)
[17:03:16] *** Joins: urb4nm (~urb4nm@165.227.158.65)
[17:04:07] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (Ping timeout: 250 seconds)
[17:05:04] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:06:04] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[17:06:06] *** Parts: By3way (~kasf@2001:448a:50e0:160c:9b69:b232:7ec6:1b89) (WeeChat 3.4)
[17:07:29] *** Quits: darks0ul (~darksoul@2409:4043:89d:a29:c217:f358:a4ab:b294) (Ping timeout: 256 seconds)
[17:08:26] *** Joins: vitali64 (~vitali64@user/vitali64)
[17:09:32] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[17:09:40] *** Joins: bloody (~bloody@user/bloody)
[17:11:01] <zamba> how many bits are needed to represent an ip address?
[17:11:06] <zamba> i want as few as possible
[17:11:38] <apollo13> zamba: depends on the type of ip address :)
[17:11:42] <zamba> ipv4 :)
[17:11:48] <zamba> i guess representing it as a string is the worst way :)
[17:12:10] <apollo13> it is, so take a guess, how many bytes will each part need?
[17:12:47] <zamba> well.. ipv4 addresses are 32-bits.. so there should be one byte per octet
[17:13:11] <zamba> what is the best way of struct-ing it?
[17:13:38] <zamba> is that what socket.inet_aton does?
[17:13:58] <zamba> yeah, it is :D
[17:14:05] *** Joins: Guest60 (~Guest60@2603-6080-5806-c200-397d-fce3-6da0-6449.res6.spectrum.com)
[17:14:07] <Guest60> I found this North Carolina Supreme Court oral argument. A prosecutor appears to be taking cases off the calendar until a defendant pleads guilty, forcing a guilty plea cause the defendant cant get drivers license until he pleads guilty. https://www.youtube.com/watch?v=4TQOltG7zJc
[17:15:17] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10ee:b747:e0aa:4207:e691:8ab8)
[17:15:17] *** Joins: Esexe_ (~aa@024-151-038-076.res.spectrum.com)
[17:15:22] *** Joins: Guest54 (~Guest54@c227-91.icpnet.pl)
[17:15:34] *** Quits: mcpackey (~pm0001@p57b83bd8.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:15:45] *** Quits: Guest54 (~Guest54@c227-91.icpnet.pl) (Client Quit)
[17:15:49] <jinsun> Guest60: and that is related to python how?
[17:16:35] *** Joins: joaofukuda (~joaofukuk@2804:431:c7f4:345c:9441:82c4:a226:af6b)
[17:16:41] <Guest60> isnt this a general chat room
[17:16:48] <Guest60> which chat room can i talk about this in
[17:17:14] <apollo13> zamba: yes :) and given that ipv4 addrs are 32 bit, anything encoding it in more than 4 bytes would be wasting space
[17:17:32] <Guest60> i think i need to go elsewhere to talk about thso
[17:18:01] *** Quits: Guest60 (~Guest60@2603-6080-5806-c200-397d-fce3-6da0-6449.res6.spectrum.com) (Quit: Client closed)
[17:18:10] *** Quits: eyepeetee (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 256 seconds)
[17:19:09] <exarkun> zamba: inet_pton is preferred now
[17:19:32] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[17:19:46] <zamba> if using the struct module.. then this should be packed into a i?
[17:19:53] <zamba> or unsigned? I?
[17:20:21] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710) (Read error: Connection reset by peer)
[17:20:34] <apollo13> since you need to represent 0-255 with one byte I'd call that unsigned
[17:21:00] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[17:21:03] <apollo13> but i has 4 bytes, not what you want
[17:21:16] <apollo13> you probably want B
[17:21:33] <apollo13> though I am not 100% sure how inet_pton packs internally
[17:21:36] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[17:21:39] <zamba> unsigned char?
[17:21:44] <apollo13> yes
[17:22:10] <apollo13> struct.pack('BBBB', 192, 168, 24, 12) for instance
[17:22:38] <zamba> ah, if you want to pack directly.. but i want to pack using socket.inet_pton()
[17:22:47] <zamba> and then i guess it should be into I?
[17:22:54] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[17:23:16] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:23:17] <apollo13> no, more likely s or p
[17:23:28] <apollo13> you don't have an integer as result from inet_pton but bytes
[17:23:41] <apollo13> hence you'd look for "bytes" in the python type section
[17:24:06] *** Joins: fofoni_ (~fofoni@user/fofoni)
[17:24:17] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:24:31] <apollo13> note that inet_aton returns the same as my struct call, so I guess that is what it internally does as well (it is what on a first glance would make most sense anyways)
[17:24:48] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[17:25:54] *** Joins: kingqwin2[m] (~kingqwin2@2001:470:69fc:105::1:ae97)
[17:26:06] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[17:26:46] *** Joins: mothrog (~Skunkape@2603-6000-d300-8b1b-91f4-6cb4-e72c-c7dc.res6.spectrum.com)
[17:27:03] *** Parts: kingqwin2[m] (~kingqwin2@2001:470:69fc:105::1:ae97) ()
[17:27:05] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[17:28:13] <zamba> ok, so i did "!s4"?
[17:28:33] <zamba> and that would consume 4 bytes across the wire?
[17:28:34] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Read error: Connection reset by peer)
[17:29:07] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[17:29:16] <apollo13> well if the struct packing returns 4 bytes then that is what it contains on the wire
[17:29:28] <apollo13> aside from whatever protocol framing you have for your messages
[17:29:31] <zamba> len()?
[17:29:37] <zamba> that returns 4
[17:30:21] <apollo13> well yes that struct call will return 4 bytes, there is not much else "s4" could return
[17:30:36] <apollo13> I mean you are explicitly asking for 4 bytes
[17:31:01] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[17:31:38] *** Joins: jsmooth (~quassel@user/jsmooth)
[17:32:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[17:32:12] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[17:32:46] *** Quits: delarge (~chamigo@ctm.linuxers.cl) (Ping timeout: 268 seconds)
[17:32:47] <jsmooth> Anyone know of an option for writing Python, even using python libraries, but having it run in browser as javascript or JIT transpiled to JavaScript? I'm not fond of JS's quirks and I haven't preferred TypeSCript or CoffeeScript
[17:33:23] <jsmooth> Or are there a few libraries that I really should learn to use?
[17:33:25] *** Joins: bluedust_ (~bluedust@59.89.220.95)
[17:33:28] <zamba> apollo13: sweet
[17:34:02] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[17:34:02] *** Joins: fikran (~fikran@user/fikran)
[17:34:16] <apollo13> jsmooth: python as of very recently can be compiled into webassembly, but you really don't want to use it for normal websites I guess
[17:34:21] *** Quits: vaio (~gary@user/ghost) (Ping timeout: 276 seconds)
[17:34:32] <apollo13> you can try something like htmx/hyperscript if you do not like javascript
[17:35:49] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[17:36:01] *** Joins: vaio (~gary@user/ghost)
[17:36:29] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:36:37] *** Quits: bluedust (~bluedust@103.160.194.12) (Ping timeout: 240 seconds)
[17:37:36] *** Joins: bluedust (~bluedust@185.248.85.10)
[17:37:56] <matsaman> brython? =P
[17:38:04] <matsaman> jsmooth: what quirks are we talking about
[17:38:19] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[17:38:51] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[17:39:15] *** Joins: neverfindme (~hayden@158.123.160.43)
[17:39:20] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[17:39:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:39:53] *** Joins: mdkarthik (~mdkarthik@2405:201:e020:705d:1b21:9fbe:4c9c:6180)
[17:40:09] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[17:40:34] *** Joins: p-i-_ (~Ohmu@mx-ll-183.89.35-200.dynamic.3bb.co.th)
[17:40:37] *** Quits: bluedust_ (~bluedust@59.89.220.95) (Ping timeout: 240 seconds)
[17:40:52] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Quit: Client closed)
[17:40:54] *** Quits: NovaXrine (~NovaXrine@zen.novaxrine.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[17:41:49] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10ee:b747:e0aa:4207:e691:8ab8) (Ping timeout: 240 seconds)
[17:41:50] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[17:43:44] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710)
[17:43:57] *** Quits: p-i- (~Ohmu@183.89.35.200) (Ping timeout: 240 seconds)
[17:46:47] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:48:26] *** Joins: qlixed (~qlixed@181.44.129.13)
[17:49:20] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[17:49:49] *** Joins: NovaXrine (~NovaXrine@zen.novaxrine.com)
[17:51:14] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:2df2:1ec5:8dd3:29f0) (Ping timeout: 260 seconds)
[17:51:53] <wyre> apollo13, I find particularly bothering to have the same info triplicated (setup.py, setup.cfg and pyproject.toml) 😞
[17:51:55] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[17:52:08] <apollo13> wyre: I do not follow
[17:52:25] <apollo13> you shouldn't have the same information in multiple places
[17:52:34] *** Joins: qlixed (~qlixed@181.44.129.13)
[17:52:39] <wyre> apollo13, for example, I've to define version= in these three
[17:52:44] <apollo13> no you don't
[17:52:53] <wyre> then? where should I set this?
[17:53:21] <jinsun> it should go in setup.cfg
[17:53:23] <apollo13> depends on your build system
[17:53:34] <apollo13> but setup.cfg is probably enough, see for instance https://github.com/django/django/blob/main/setup.py which is basically empty
[17:53:41] <wyre> apollo13, I usually use setuptools
[17:53:51] <wyre> I think you can automate this with setuptools-scm
[17:53:57] <apollo13> you can even do stuff like https://github.com/django/django/blob/2d472ad05c7fb2a5fe405be46af2062cdb5eaeee/setup.cfg#L3
[17:53:58] <wyre> but ... just for the setup.py
[17:54:01] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[17:54:08] <apollo13> (this is also plain setuptools)
[17:54:23] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[17:54:25] <jinsun> no, setuptools_scm recommends pyproject.toml config now
[17:55:00] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[17:55:07] <apollo13> wyre: either way, whatever you do, setup() in setup.py fills in whatever it doesn't have from setup.cfg iirc
[17:55:20] <jinsun> https://pypi.org/project/setuptools-scm, pyproject.toml usage, setup.py usage (deprecated)
[17:55:32] <apollo13> and depending on the buildsystem you use you will solely need pyproject.toml (and nothing else)
[17:55:36] <xheimlich> so wait. if I have a class (i.e. not an instance) class C, for example if I said from library import C
[17:56:01] <apollo13> although depending on which 3rd party software you use you will need setup.cfg to store config in there (flake etc… not all of them support pyproject.toml)
[17:56:10] <xheimlich> and i make an instance my_c = C(), I can call C.fit_transform(my_c, other_args)
[17:56:12] <ronny> If possible I recommend pyproject.toml and modern setuptools over anything else
[17:56:23] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10ee:b747:e0aa:4207:e691:8ab8)
[17:56:32] <xheimlich> but what if I don't know what C is, just an instance of it.
[17:56:53] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Remote host closed the connection)
[17:57:06] <xheimlich> but I happen to know C inherits from an abstract class BaseC that has fit_transform as an abstrat method.
[17:57:24] <mdkarthik> what is python?
[17:57:41] *** Joins: gerj79 (~gerj79@user/gerj79)
[17:57:48] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[17:57:49] <xheimlich> this is clearly sklearn, right. So can I call sklearn.base.BaseTransformer.fit_transform(my_obj, other_args)?
[17:58:09] *** Quits: adham (~adham@37.239.160.21) (Ping timeout: 256 seconds)
[17:58:25] <xheimlich> I keep having functions thare like def fit_transform(obj): return lambda x: obj.fit_transform(x)
[17:58:26] *** Joins: Wulf (~Wulf@user/wulf)
[17:58:50] <xheimlich> maybe it would be better to say from sklearn.base import BaseTransformer as BT
[17:59:06] <gerj79> hello, can this code be shortened by writing it differently or using alternative methods: https://bpa.st/XQEA ?
[17:59:17] <fbiagent> is there a way to "freeze" python because I've got a script that needs to run quickly and half the time is taken up with imports
[17:59:53] *** Joins: darks0ul (~darksoul@2409:4043:89d:a29:c217:f358:a4ab:b294)
[18:00:09] <fbiagent> https://i.imgur.com/0gJsp5u.png
[18:00:37] *** Joins: dme86 (~dan@user/dan86)
[18:00:43] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[18:00:58] <apollo13> probably no, most "freezing" tools keep the module structure etc
[18:01:12] <apollo13> you might be able to install a delayed import hook on newer python versions
[18:01:21] <apollo13> not sure how much that will help if you actually need the imports
[18:02:59] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710) (Quit: Leaving)
[18:03:11] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:a4ab:d048:41d8:b710)
[18:04:00] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[18:04:00] *** Joins: drbeco (~beco@2804:351c:dd01:b700:1b03:6b85:20d4:ad73)
[18:04:49] *** Quits: blddk (~blddk@user/blddk) (Quit: The Lounge - https://thelounge.chat)
[18:04:51] <wyre> apollo13, are both setup.cfg and setup.py setuptools specific files?
[18:05:01] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[18:05:07] <wyre> I'd say pyproject.toml is not 🤔
[18:05:08] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[18:05:10] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[18:05:23] *** Quits: mdkarthik (~mdkarthik@2405:201:e020:705d:1b21:9fbe:4c9c:6180) (Quit: Leaving)
[18:05:48] <NeilRG> in which python version is set[int] allowed?
[18:05:53] <NeilRG> first* allowed
[18:05:58] <sco1> 3.9
[18:05:58] <jinsun> 3.9
[18:06:01] *** Joins: mdkarthik (~mdkarthik@2405:201:e020:705d:1b21:9fbe:4c9c:6180)
[18:06:01] <NeilRG> thanks!
[18:06:01] <apollo13> wyre: yes setup.cfg and setup.py are basically setuptools, though other projects reuse setup.cfg as configuration storage
[18:06:14] <sco1> https://www.python.org/dev/peps/pep-0585/
[18:06:21] <NeilRG> you guys are so fast
[18:06:30] *** Quits: mdkarthik (~mdkarthik@2405:201:e020:705d:1b21:9fbe:4c9c:6180) (Client Quit)
[18:06:37] <NeilRG> I was looking at the what's new 3.10 and couldn't find it
[18:06:45] *** Emet-Selch is now known as Azem
[18:09:58] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[18:10:08] *** Joins: edthix (~ed@175.141.150.118)
[18:10:55] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[18:13:50] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[18:14:36] *** Joins: lakrass (~lakrass@user/lakrass)
[18:14:42] <xheimlich> apollo13: at some point modularity and DRY becomes, well, leftpad fiascos, in the extreme, but costly beyond benefits.
[18:15:09] *** Joins: dme86 (~dan@user/dan86)
[18:15:37] <xheimlich> I find myself more and more fishing for pieces of code in open source projects (respecting attribution conditions on permissive licensing and never copyleft)
[18:15:49] <xheimlich> rather than adding something else to pip install at build time.
[18:15:52] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[18:16:09] *** Joins: Linux77 (~LinuMage@186.233.179.225)
[18:17:15] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:18:03] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[18:18:52] *** Joins: ElQelinho (~ElQelinho@91.192.21.152)
[18:18:53] *** Quits: Dotz0cat (~Dotz0cat@173.187.195.128) (Ping timeout: 252 seconds)
[18:19:08] <jinsun> that works only for small things, like something small enough to fit in single py file
[18:19:36] <jinsun> anything larger than that, it won't be worth it to avoid pip
[18:20:14] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[18:20:56] *** Joins: basedboy (~ninjaspid@175.142.111.245)
[18:21:06] *** Parts: basedboy (~ninjaspid@175.142.111.245) (Leaving)
[18:21:32] *** Joins: artemon` (~user@p200300d627102f00b1c98e657177662c.dip0.t-ipconnect.de)
[18:22:06] *** Joins: fef (~thedawn@user/thedawn)
[18:23:35] *** Quits: savolla (~quassel@84.44.28.28) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:23:55] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[18:24:16] *** Quits: philectro (~quassel@2a02:2788:1024:671:f62e:ca82:1fdd:931) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:24:17] <Forty-Bot> is this a bug in multiprocessing? https://bpa.st/4T4Q
[18:24:34] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:24:50] *** Joins: Dotz0cat (~Dotz0cat@h81.15.31.71.dynamic.ip.windstream.net)
[18:24:52] <Forty-Bot> the trace is from the manager's server process (NB: "most recent call first")
[18:24:58] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[18:25:20] <bjs> Forty-Bot: the code doesn't actually do anything or run anything, so i'm a bit confused
[18:25:29] <Forty-Bot> bjs: please run the hang method
[18:26:13] <bjs> Forty-Bot: okay I get an AttributeError on 'A' now, is that what you mean?
[18:26:25] <Forty-Bot> you will need to import the file
[18:26:31] <Forty-Bot> instead of running it directly
[18:26:41] *** Quits: fofoni_ (~fofoni@user/fofoni) (Quit: Leaving)
[18:26:44] <Forty-Bot> otherwise it will be named __main__ which doesn't match the file name
[18:28:30] <bjs> Forty-Bot: yes that makes sense,  why are you creating a Manager object at the module level?
[18:28:50] <fbiagent> apollo13, hmm ok sucks
[18:28:57] <Forty-Bot> I am trying to implement a library for some existing code which doesn't expect to need to pass in a manager
[18:29:02] <fbiagent> with lisp you got save-lisp-and-die, thought there would be something similar on python
[18:29:09] <Forty-Bot> so I need to get a default manager from somewhere
[18:29:19] *** Joins: Fiji (~Fiji@user/fiji)
[18:29:31] <bjs> Forty-Bot: okay but, this is multiprocessing so there isn't a single manager
[18:29:50] <Forty-Bot> right, and I don't want to spawn a new manager server just for one dict
[18:29:51] <bjs> (depending on the method used)
[18:30:38] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:30:52] *** Joins: hlauk (~hlauk@176.33.96.72)
[18:31:01] *** Joins: waynew (~wayne@user/waynew)
[18:31:02] *** Quits: Fiji (~Fiji@user/fiji) (Read error: Connection reset by peer)
[18:31:37] <bjs> Forty-Bot: i'm not following, but you are creating a manager?
[18:31:40] *** Joins: vsantana1 (~Thunderbi@ec2-54-159-73-164.compute-1.amazonaws.com)
[18:31:59] <Forty-Bot> yes, but I only want to create one manager and re-use it for subsequent calls
[18:32:28] <AhmedAmerican> graingert: i need your help to find `mongodb` client supporting `trio`
[18:33:12] <bjs> Forty-Bot: but if you make it at module scope when you actually introduce multiprocessing you get a copy of all the globals, so you'll end up with many managers
[18:33:17] *** Quits: vsantana (~Thunderbi@fttx-177136149223.usr.predialnet.com.br) (Ping timeout: 256 seconds)
[18:33:17] *** vsantana1 is now known as vsantana
[18:33:21] <bjs> so something seems very fishy
[18:33:33] <Forty-Bot> so maybe I should make it in the kwargs?
[18:34:09] <bjs> Forty-Bot: go `with multiprocessing.Manager() as manager:` where you want to create it, then pass it to the child processes
[18:34:22] *** Joins: Elzington_ (~Elzington@static-68-235-44-28.cust.tzulo.com)
[18:34:24] *** Joins: r4ulrm (~raul@181.27.127.43)
[18:34:25] <bjs> e.g. through arguments in the multiprocessing.Pool.submit/map interface
[18:34:33] <Forty-Bot> I'm writing a library, so I don't control how forking is done
[18:34:44] <Forty-Bot> all I can do is say "call this before you fork"
[18:34:57] *** Joins: mdnotg (~mdnotg@78.185.225.213)
[18:35:09] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[18:35:11] <bjs> Forty-Bot: can you explain a bit more what you're trying to do? where does the manager come into it
[18:35:29] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[18:35:48] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[18:36:00] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-edbc-4b04-23d8-dcd6.res6.spectrum.com)
[18:36:39] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:f0b8:3399:f5d8:1348) (Ping timeout: 250 seconds)
[18:36:54] *** Quits: matkor (~matkor@ns0.ant.gliwice.pl) (Quit: Konversation terminated!)
[18:36:59] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:37:15] *** Quits: Elzington (~Elzington@68.235.43.110) (Ping timeout: 256 seconds)
[18:37:34] <graingert[m]> AhmedAmerican: fyi the asyncio mongodb client just uses threads
[18:37:36] *** Joins: Elzington (~Elzington@static-68-235-44-44.cust.tzulo.com)
[18:37:36] *** Joins: esther (~esther@2607:fb90:20de:d312:1ff8:64e4:ab29:b4eb)
[18:37:37] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 240 seconds)
[18:37:43] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 250 seconds)
[18:38:00] <gerj79> hello, I am curious to know if some magic ultra-short python way exists to write this code alternatively https://bpa.st/XQEA
[18:38:22] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 260 seconds)
[18:38:24] <AhmedAmerican> graingert[m]: Hmm, so i can use it with trio ? what you recommending ?
[18:38:35] <graingert[m]> AhmedAmerican: what are you using mongodb for?
[18:38:36] <apollo13> gerj79: why would the goal be ultra-short?
[18:38:40] <apollo13> keep it readable :D
[18:39:02] *** Quits: mdnotg (~mdnotg@78.185.225.213) (Quit: mdnotg)
[18:39:38] *** Joins: humbertowoody (~humbertow@189.144.109.242)
[18:39:41] <Forty-Bot> bjs: effectively the existing API is structured like Threaded, and I want to make an implementation like Multiprocess https://bpa.st/XNQQ
[18:39:42] *** Quits: Elzington_ (~Elzington@static-68-235-44-28.cust.tzulo.com) (Ping timeout: 250 seconds)
[18:39:43] <AhmedAmerican> graingert[m]: going to append records to it. https://bpa.st/4MYA from Function `rec`
[18:39:44] <gerj79> apollo13, not a goal, also not ultra-short, but just the lower half of the code evoked an intuitive sense of being shortenable
[18:40:04] <jinsun> gerj79: changing sys.stdout and printing is weird, why not just write into the file directly?
[18:40:07] *** Joins: revolve (~u0_a227@82-132-227-141.dab.02.net)
[18:40:18] <mothrog> Hey Everyone, I'm pretty new to python. Would anyone want to give me a hand with a short script I have for a class assignment? only ~25 lines. The code looks all correct to me and I don't get any errors, but it isn't spitting out the data I want.
[18:40:20] *** Joins: blddk (~blddk@user/blddk)
[18:40:32] <mothrog> https://bpa.st/I3EQ assignment instructions in the comments https://bpa.st/I3EQ
[18:40:32] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[18:40:33] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[18:40:36] <apollo13> gerj79: you know that you can tell print to write to a file handle right? you don't need to override stdout for that
[18:40:37] <gerj79> jinsun, the source file contains different dates, which require being written to different files, that is why I did so
[18:40:45] *** Joins: vsantana1 (~Thunderbi@2804:214:816a:6712:2525:8e63:7662:52a2)
[18:41:11] <apollo13> gerj79: still, just do with open(…) as f: print(msg, file=f)
[18:41:28] <apollo13> takes automatic care of closing etc
[18:41:35] <jinsun> gerj79: no you did the % formatting in the open functinos call because of that, you don't need to change sys.stdout for that
[18:41:37] *** Quits: esther (~esther@2607:fb90:20de:d312:1ff8:64e4:ab29:b4eb) (Ping timeout: 240 seconds)
[18:41:51] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[18:41:52] *** Quits: vsantana (~Thunderbi@ec2-54-159-73-164.compute-1.amazonaws.com) (Ping timeout: 250 seconds)
[18:41:53] *** vsantana1 is now known as vsantana
[18:41:53] *** Joins: slav0nic (slav0nic@python.su)
[18:41:54] <grym> mothrog: are you sure you're comparing values in the correct direction
[18:41:55] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[18:42:01] <graingert[m]> AhmedAmerican: You can use the sync client with trip.to_thread.run_sync
[18:42:06] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[18:42:11] <graingert[m]> * You can use the sync client with trio.to_thread.run_sync
[18:42:52] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[18:43:05] <gerj79> jinsun, ah, right, sorry :) so print command was redundant?
[18:43:23] <graingert[m]> AhmedAmerican: You might prefer a different database
[18:43:32] <jinsun> gerj79: print is okay, changing sys.stdout was bad
[18:43:48] <AhmedAmerican> graingert[m]: it's not my choice. it's a client choice.
[18:43:53] <gerj79> jinsun, in which line did I do that?
[18:44:23] <apollo13> gerj79: well generally you can just open a file and then write to that. you don't really need print either
[18:44:25] <AhmedAmerican> so you meant to run `mongodb` click under thread sync on each row which i append ?
[18:44:28] <jinsun> gerj79: line 25, sys.stdout = open(...)
[18:44:52] <grym> mothrog: try it and see :)
[18:45:00] <apollo13> with open(…) as f: f.write(str(item)) would probably do the same thing (sans the newline)
[18:45:02] <grym> mothrog: (and reply in channel, generally speaking)
[18:45:19] <bjs> Forty-Bot: the problem is that you're creating this just as the module gets imported rather than during the hang() call,  and presumably here the same thing happens because of the default argument to __init__.  IF you create it and pass it in then it should all work correctly
[18:45:32] <graingert[m]> AhmedAmerican: Which mongo host are you using? Atlas has an http API
[18:45:48] <Forty-Bot> I can't pass it in because existing users don't expect to have to pass anything in
[18:46:14] <bjs> Forty-Bot: that said why it deadlocks in the way it does I cannot explain,  I'm not surprised it goes wrong when trying it this way but a deadlock is probably not the way
[18:46:16] <graingert[m]> https://docs.atlas.mongodb.com/api/data-api/
[18:46:30] <gerj79> but I did line 25 that way in order to name the output file after the date its contained links refer to
[18:46:33] <bjs> well the issue will be that this approach cannot work (at all) with 'spawn' contexts,  with 'fork' contexts it might work...
[18:46:53] *** Joins: _8lurry (~blurry@180.210.182.190)
[18:46:54] *** Joins: adham (~adham@37.239.160.47)
[18:47:03] *** Joins: lazy1 (~tebeka@2a10:8006:f920:0:9c76:41bb:e862:c4b5)
[18:47:15] *** Quits: lazy1 (~tebeka@2a10:8006:f920:0:9c76:41bb:e862:c4b5) (Quit: Leaving)
[18:47:15] *** Parts: _8lurry (~blurry@180.210.182.190) ()
[18:47:17] <jinsun> gerj79: that is the RHS, the LHS is the bad part
[18:47:40] <Forty-Bot> well, if you want to make it work with non-fork contexts you would need to pass your Multiprocess instances to the children
[18:48:09] <Forty-Bot> which I think is reasonable, since this is how the existing API work
[18:48:10] <jinsun> gerj79: see apollo13's suggestioins above about how to do it, and https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files for details
[18:48:30] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[18:49:59] <xheimlich> when I first learned about packages  (subfolders with an __init__.py) it all seemed too abstract and I had no need for it. When I needed them, I had forgotten about the basics.
[18:52:20] *** Quits: bluedust (~bluedust@185.248.85.10) (Remote host closed the connection)
[18:53:08] <varaindemian> What can I change to print only the first occurrance of the largest string? https://www.irccloud.com/pastebin/LBXxiyr1/
[18:53:08] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[18:53:23] <gerj79> apollo13, like this, I suppose; https://bpa.st/P4AQ ?
[18:54:07] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[18:54:45] <gerj79> or, rather, https://bpa.st/SC7A
[18:54:48] <apollo13> gerj79: kinda, but break after ":" and put the write into a new line (like you'd do with an if etc)
[18:55:03] <apollo13> also not sure about the multiple "" in the filename
[18:55:07] <apollo13> that seems weird at least
[18:55:15] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:55:24] <apollo13> shouldn't it be just "l-%s.html"
[18:56:59] *** Joins: vitali64 (~vitali64@user/vitali64)
[18:57:34] <jaggz> "is this the Blender 3d python support channel?"
[18:59:00] <wyre> apollo13, what about requirements? I mean ... I know I can just define them in the setup.cfg but ... I'm building also a debian package ... and I'm not sure if the debian helper will find the requirements in their official repositories 🤔
[18:59:49] <apollo13> wyre: best to talk to some debian maintainers about best practices
[19:00:05] *** Joins: kts (~kts@103.73.237.104)
[19:00:07] <apollo13> usually the debian rules files list the matching packages from the repo
[19:00:10] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:00:17] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[19:00:21] <apollo13> whether they can auto extract that from setup.cfg or others I do not know
[19:00:25] *** Joins: mickey8 (~user@user/mickey)
[19:00:29] *** Quits: hlauk (~hlauk@176.33.96.72) (Ping timeout: 256 seconds)
[19:00:33] <gerj79> apollo13, oh yes indeed, only one pair is enough
[19:00:39] <wyre> I see
[19:01:01] <apollo13> wyre: generally I gave up on distros and just ship an executable :D
[19:01:12] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:03:20] <grym> ^
[19:03:25] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[19:03:34] <wyre> apollo13, I'd like to manage the software with the system package manager 🤔
[19:03:43] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[19:03:44] <gerj79> why was the stdout way bad?
[19:04:20] <apollo13> wyre: well I do pack my executables into a package with a systemd service file etc… I just don't have dependencies on other debian packages
[19:04:27] *** Joins: nomic (~nomic@185.217.117.245)
[19:04:36] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[19:04:41] <apollo13> but yeah that means it will also never get into debian (which is okay since it is closed source anyways)
[19:04:42] <wyre> apollo13, but how do you pack it?
[19:04:58] <apollo13> wyre: depends, if I am okay with depending on python beeing there pex and otherwise pyinstaller
[19:05:11] <apollo13> then handwritten debian packaging files
[19:05:15] <wyre> apollo13, I was talking about a custom repositories, not the officials :)
[19:05:16] <apollo13> or rpm spec files for that matter
[19:05:17] <AhmedAmerican> graingert[m]: Unfortunately my client refused to use any online DB. looks like I've only the solution of running async thread of trio.
[19:05:18] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:a89e:b347:cccb:c7e5)
[19:05:44] <AhmedAmerican> so in my case i will use the default client of Mongodb yes ?
[19:06:07] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[19:07:14] *** Joins: j0ma (~jonne@146.115.163.209)
[19:07:29] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[19:09:00] <mothrog> grym: Still doesn't seem to be working for me...
[19:09:48] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:10:17] *** Joins: odoood (~odoood@2601:c8:c000:c4e0:f799:b570:9765:917c)
[19:11:46] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:11:49] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[19:12:17] *** Joins: georgios (~georgios@user/georgios)
[19:12:54] *** Joins: fofoni_ (~fofoni@user/fofoni)
[19:12:57] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.35-200.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[19:13:32] *** Joins: p-i- (~Ohmu@183.89.35.200)
[19:14:17] <jinsun> gerj79: it is just not the normal way to do it, sys.stdout should not be modified in normal code unless you can explain why you can't do it any other way, in your code, the print function would be broken after you close the file
[19:14:41] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[19:14:53] *** Quits: bfortified (~bfortifie@user/bfortified) (Remote host closed the connection)
[19:15:14] *** Joins: bfortified (~bfortifie@user/bfortified)
[19:16:22] <gerj79> jinsun, but the printed files are correct
[19:16:57] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 240 seconds)
[19:17:07] *** Quits: fofoni_ (~fofoni@user/fofoni) (Client Quit)
[19:17:19] <jinsun> gerj79: yes, for small scripts like that is possible to write bad code and still end up with correct results, it is still bad
[19:17:23] *** Quits: edthix (~ed@175.141.150.118) (Quit: Konversation terminated!)
[19:18:19] *** Joins: dme86 (~dan@user/dan86)
[19:18:48] <apollo13> gerj79: the reason why it works for you is that you overrode sys.stdout on every iteration, but for fun try adding a print() after sys.stdout.close() and see where it ends up
[19:19:00] *** Joins: mdnotg (~mdnotg@78.185.225.213)
[19:19:32] *** Joins: capjack[m] (~raffaem@2001:470:69fc:105::393)
[19:19:51] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:20:52] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:21:08] *** Joins: mickey8 (~user@user/mickey)
[19:21:39] <zamba> can someone give me a practical example on the difference between an argument and an option?
[19:21:46] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 260 seconds)
[19:21:48] <zamba> this is when invoking python scripts from the command line
[19:21:49] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[19:22:20] <zamba> ./myscript -o --somethingelse option argument1
[19:22:32] <zamba> but when to use the different? when does it make sense to use one over the other?
[19:22:37] <SnoopJ> zamba, e.g. `python3 zambda.py --option1 --option2=value arg1 arg2`
[19:22:39] <grawity> everything in the command line is "arguments" (sys.argv), which might be parsed into either "-o -p -t --ions" or "positional arguments"
[19:22:51] <zamba> options are, well, optional and arguments are more mandatory?
[19:22:53] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:23:05] <zamba> is that the bottom line here?
[19:23:06] <grawity> in theory yes
[19:23:07] <TML> zamba: options are a subset of arguments
[19:23:08] <SnoopJ> not necessarily, but arguments have no associated flag
[19:23:19] <gerj79> apollo13, but "print" has to be placed in-between the sys.stdout lines, AFAIK
[19:23:23] <zamba> well, when would you use one or the other?
[19:23:24] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Ping timeout: 256 seconds)
[19:23:32] <apollo13> gerj79: no, print can be placed anywhere you want
[19:23:56] <apollo13> open a new python file and add print("HI") as sole content
[19:24:05] <apollo13> that is perfectly valid python and will print properly
[19:24:16] <gerj79> yes, but for my purpose of writing the result in the file, I mean
[19:24:23] <TML> zamba: For example, if my program offers a help, I'd use "foo -h/--help" instead of "foo help"
[19:24:25] <SnoopJ> zamba, in my experience, arguments represent the 'domain' of the program, its inputs, and options represent (optional) modifications to behavior over that domain.
[19:24:26] <zamba> for instance.. i have a script that _requires_ a source and a destination, along with a channel (that's an integer).. in addition something called a filter service (it's basically the http address to an api) could/should be provided.. but it's possible to just say that the filter service is running locally and then assume 127.0.0.1 as the default
[19:24:38] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[19:24:53] <apollo13> gerj79: yes, but a) print is not needed and b) changing of sys.stdout is suboptimal and a code smell
[19:25:02] <zamba> so in this case it makes sense to have filter service as an option and then have the other three as arguments?
[19:25:04] <SnoopJ> (it sort of depends on the particular context, too; as far as the operating system is concerned, they're all "arguments," for instance)
[19:25:20] <zamba> yeah, i realize the difference.. they are all _arguments_ per se
[19:25:47] <zamba> but i'm now thinking about what the click module calls .option() and argument()
[19:25:49] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[19:25:53] <SnoopJ> right
[19:26:02] *** Joins: timkofu_ (~timkofu@196.106.22.73)
[19:26:02] *** Quits: timkofu_ (~timkofu@196.106.22.73) (Changing host)
[19:26:02] *** Joins: timkofu_ (~timkofu@user/timkofu)
[19:26:06] <jinsun> gerj79: just that code in isolation is not broken, but it is doing broken things that would cause problems if it was part of a bigger program
[19:26:27] <gerj79> jinsun, right, I see
[19:26:38] <SnoopJ> zamba, have you read the click documentation on parameters (the catch-all term for both of these ideas)? It has some remarks on the differences
[19:26:42] <SnoopJ> https://click.palletsprojects.com/en/8.0.x/parameters/
[19:26:48] <gerj79> the reasons are not too clear to me right now, but I suppose they will, in time :)
[19:27:40] <SnoopJ> for this question you'll generally be stuck with the documentation of whatever library/etc. is providing the semantics of "option" on top of the OS's notion of arguments. I.e. an option in click is a little different than an option in argparse, although the broad strokes we've been discussing here still apply.
[19:28:54] *** Joins: Fiji (~Fiji@user/fiji)
[19:28:59] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[19:29:23] *** Quits: timkofu (~timkofu@user/timkofu) (Ping timeout: 256 seconds)
[19:30:57] *** Quits: grooverman (~grooverma@189.110.126.17) (Ping timeout: 240 seconds)
[19:30:59] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[19:32:31] *** Joins: Anis[m] (~aniskdeor@2001:470:69fc:105::c1d5)
[19:33:16] *** Joins: grooverman (~grooverma@179.97.133.197)
[19:33:28] *** Joins: ovelny (~ovelny@user/ovelny)
[19:33:45] <mothrog> grym: I fixed some indents and moved the except to the end of the loop and it's doing what I want it to do now.
[19:33:51] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[19:35:17] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[19:35:41] *** Parts: mothrog (~Skunkape@2603-6000-d300-8b1b-91f4-6cb4-e72c-c7dc.res6.spectrum.com) (Leaving)
[19:35:50] *** Joins: bluedust (~bluedust@185.248.85.26)
[19:36:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:37:03] *** Joins: ice9 (~ice9@user/ice9)
[19:37:31] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:37:34] <gerj79> jinsun, apollo13, thank you!
[19:38:00] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[19:39:49] <wyre> apollo13, what's the difference between using include_package_data=True + MANIFEST.in and defining the [options.package_data] and write in that section the corresponding files for every package?
[19:39:51] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[19:40:10] <wyre> I mean ... will produce both ways the same result? 🤔
[19:40:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[19:41:22] <apollo13> wyre: MANIFEST.in determines what is packaged in the source dist, include_package_data is a shortcut for options.package_data I think
[19:41:32] <apollo13> I don't know out of my head, but there are diffs
[19:41:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[19:42:20] *** Joins: hlauk (~hlauk@176.33.96.72)
[19:42:21] <wyre> apollo13, I'm not sure what exactly is 'the source dist' ...
[19:42:57] <apollo13> wyre: the .tar.gz that is uploaded to pypi usually
[19:43:10] <wyre> but ... according to this https://setuptools.pypa.io/en/latest/references/keywords.html include_package_data=True will use MANIFEST.in
[19:43:16] <apollo13> manifest.in describes what ends up there and package_data describes what is actually installed out of it
[19:43:23] *** Joins: fikran (~fikran@user/fikran)
[19:43:29] *** Quits: casastorta (~casastort@neo2.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[19:43:37] <apollo13> well as I said, I am not sure about this stuff :) so yeah, chances are I mixed it up
[19:43:51] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[19:44:20] <wyre> I see, thank you anyway 😊
[19:44:29] <jinsun> it is a bit weird, if you have include_package_data specified, then the sdist will contain the stuff from the manifest.in
[19:44:52] <jinsun> but if you define package_data also, then bdist will have that
[19:45:05] *** Joins: casastorta (~casastort@neo1.krivokuca.net)
[19:45:06] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 260 seconds)
[19:45:08] <wyre> jinsun, bdist?
[19:45:10] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:ada2:d851:435b:28b1)
[19:45:45] <jinsun> but sdist won't have it, unless you do remove include package data option
[19:46:05] <jinsun> wyre: binary distribution, wheel files
[19:47:01] <jinsun> wyre: read this for details, https://setuptools.pypa.io/en/latest/userguide/datafiles.html
[19:47:06] *** Joins: dme86 (~dan@user/dan86)
[19:47:29] <jinsun> wyre: but in summary, don't use both include_package_data and package_data
[19:47:56] <wyre> I guess they are alternative, I see
[19:47:57] *** Quits: AlexisTP (~AlexisTP@92.57.44.63) (Ping timeout: 240 seconds)
[19:48:17] *** Joins: PaC-mEn (~PaC-mEn@5.29.177.78)
[19:48:24] <jinsun> package_data is better, since it allows you to have "finer-grained control over what files are included" according to that page
[19:48:45] <xheimlich> does fastapi play nicely with trio?
[19:48:49] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:49:17] <wyre> I'm now a little bit confused with wheel files, I see them usually, but I didn't know they were binaries
[19:49:35] <jinsun> xheimlich: yeah https://fastapi.tiangolo.com/async/#write-your-own-async-code
[19:49:35] <xheimlich> we had this whole kerfuffle as my son was being born prematurely where they needed my backend to check some URLs to see if they were alive.
[19:49:41] <wyre> and ... it's confusing to me to talk about binaries in a interpreted language as python 🤔
[19:49:48] <xheimlich> I first tried something on top of trio with a requests-like package that existed.
[19:50:16] <xheimlich> but got bad results that I didn't feel like debugging, given as how I was invited to watch a live birth of a human being in a few hours' time.
[19:50:25] <grym> wyre: `unzip -l something.whl` :)
[19:50:39] <xheimlich> so I stuck the blocking requests-based url checking there and never thought of it again.
[19:50:45] <wyre> grym, so are they zip files?
[19:50:48] <grym> wyre: ish
[19:51:13] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.4)
[19:51:16] <grym> wyre: https://www.python.org/dev/peps/pep-0427/
[19:51:32] <grym> they're very carefully structured zip files
[19:51:53] <xheimlich> soo. algebraic topology is a language that has to be interpreted; as formal as it is, it isn't unambiguous, and I haven't seen the theorem proving mailing lists discuss anything on that particular topic.
[19:51:58] <wyre> grym, what about eggs?
[19:52:04] <jinsun> wyre: and if you have C extensions then you are compiling binary files
[19:52:29] <grym> wyre: i tend to regard eggs as nothing to care about, but something that might get made along the way
[19:52:33] <xheimlich> otoh python is a fully specified computer language which can by definition produce binaries. maybe they have to contain a full python interpreter to deal with eval, but hey.
[19:53:01] <jinsun> wyre: eggs are history, no need to learn about them, unless you somehow went 10 years back in time
[19:53:01] *** Quits: hlauk (~hlauk@176.33.96.72) (Quit: Leaving)
[19:53:03] <grym> wyre: you shouldn't bother thinking about eggs very much if at all, they're history
[19:53:15] *** Joins: bluedust_ (~bluedust@59.89.220.95)
[19:53:29] <wyre> oh, I see
[19:54:02] <grym> xheimlich: fastapi supports anyio, so it also supports trip
[19:54:03] *** Quits: reset (~reset@user/reset) (Quit: reset)
[19:54:04] <grym> trio*
[19:54:05] *** Quits: naquad (~naquad@79.135.214.17) (Ping timeout: 256 seconds)
[19:54:12] *** Joins: ed (~ed@175.141.150.118)
[19:54:14] *** Quits: timkofu_ (~timkofu@user/timkofu) (Quit: leaving)
[19:54:20] <grym> xheimlich: https://fastapi.tiangolo.com/deployment/manually/#hypercorn-with-trio
[19:55:05] <wyre> so ... in summary the MANIFEST.in will have impact on sdist, while package_data will have impact over the bdist? 🤔
[19:55:18] <wyre> but I shouldn't use both at the very same time ...
[19:56:03] <jinsun> wyre: no, that is the weird thing that happens if you use both include_package_data and package_data
[19:56:26] <jinsun> if you use only package_data, then those files will go in both sdist and bdist
[19:56:35] *** Quits: bluedust (~bluedust@185.248.85.26) (Ping timeout: 256 seconds)
[19:56:47] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[19:56:53] <jinsun> the manifest.in only goes in sdist I think
[19:57:24] <jinsun> and you can have manifest.in with package_data too
[19:57:56] <jinsun> really simple stuff :D
[19:58:05] *** Joins: Warped (~Warped@user/warped)
[19:58:27] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[19:58:51] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[19:59:26] <wyre> jinsun, but package_data will not read the MANIFEST.in, won't it?
[19:59:52] *** Quits: humbertowoody (~humbertow@189.144.109.242) (Ping timeout: 250 seconds)
[19:59:57] <xheimlich> grym: ahhhh
[20:00:00] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[20:01:43] <jinsun> wyre: it does, but puts the manifest fiiles only in sdist, not bdist, and the stuff that you supply with options.package_data will go in both, unless you specify include_package_data also, in which case they will go in bdist only
[20:01:56] <wyre> I mean, I wouldn't like to have duplicated info ... so ... I don't see the point of mixing MANIFEST.in (which will be used by include_package_data) and package_data with granularity 🤔
[20:02:17] *** Joins: Hackerpcs (~user@user/hackerpcs)
[20:02:20] <jinsun> wyre: now I'm speaking from past experience, and setuptools docs are not good, so would be good to try it and see
[20:02:34] *** Quits: Hackerpcs (~user@user/hackerpcs) (Max SendQ exceeded)
[20:03:41] <wyre> jinsun, I guess both (bdist and sdist) are generated in venv/lib/python3.9/site-packages (yes, I'm testing these things in a venv, ofc 😊)
[20:04:47] *** Joins: reset (~reset@user/reset)
[20:05:14] <jinsun> wyre: no, the installed packagee goes in site-packages, after they are extracted, sdist and bdist are normally generated in a subfolder of the folder where you run your build
[20:06:01] <wyre> jinsun, .pybuild?
[20:06:38] *** Quits: uhu (~uhu@2a01:4f9:c010:1087::2) (Excess Flood)
[20:06:42] <wyre> I can't identify that folder 🤔
[20:06:54] *** Joins: uhu (~uhu@2a01:4f9:c010:1087::2)
[20:06:54] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Quit: The true sign of intelligence is not knowledge but imagination.)
[20:06:56] *** Joins: humbertowoody (~humbertow@148.204.6.250)
[20:07:03] *** Joins: naquad (~naquad@79.135.214.17)
[20:07:26] <jinsun> there is no standard location I think, with setuptools, i get those files in ./dist
[20:07:29] *** Quits: dvx (~dvx@5.181.92.64) (Remote host closed the connection)
[20:07:49] <wyre> jinsun, I don't have that folder 🤔
[20:08:01] <wyre> how could I figure out where is being built? 🤔
[20:08:32] *** Quits: onichomp (~onichomp@2806:264:4408:870:ddc8:ba3f:3971:8979) (Read error: Connection reset by peer)
[20:08:41] <jinsun> how are you building?
[20:08:50] *** Joins: jfcaron (~jfcaron@scp-8480-gw1.phys.sfu.ca)
[20:08:51] <wyre> jinsun, `pip install .`
[20:08:57] *** Joins: Fiji_ (~Fiji@user/fiji)
[20:09:03] <wyre> but ... I guess that's build+install 😆
[20:09:10] *** Joins: onichomp (~onichomp@2806:264:4408:870:ddc8:ba3f:3971:8979)
[20:09:33] <jinsun> yeah, so pip is building for you, and I guess by default that is in some temp folder that gets deleted
[20:09:50] <jfcaron> I'm using telnetlib and when I try to talk to a device that is turned off I get a "gaierror" exception, but that error is apparently from the "socket" namespace.  So I need to do "import socket" just to catch the exception in a try/except?
[20:10:25] *** Joins: Auron (Auron956@user/auron)
[20:11:05] *** Joins: cdown_ (~cdown@163.114.131.1)
[20:11:05] *** Quits: ed (~ed@175.141.150.118) (Quit: Konversation terminated!)
[20:11:41] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com)
[20:11:59] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[20:12:09] *** Quits: giesen (~ggiesen@ego.giesen.me) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[20:12:16] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[20:12:41] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[20:13:29] <jinsun_> wyre:  if you use python -m build you can set the output folder and dist is the default
[20:13:39] <Batzy> Repiphany: so i used your idea for memoryless tree looking and it works fine but i noticed something. https://bpa.st/TKHA in the top 2 methods, i generate the entire tree in the first and then collect terminal nodes in the 2nd. Do you know what's wrong with the code that collects terminal nodes? because iterate_words() returns a lot more words then doing like collect_words()
[20:13:46] *** Joins: spawnmc (~spawnmc@user/spawnmc)
[20:13:50] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[20:13:58] *** cdown_ is now known as cdown
[20:13:59] <Batzy> i guess how i am passing the word "back up" is wrong
[20:14:11] *** Joins: jinsun__ (~quassel@user/jinsun)
[20:14:43] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 256 seconds)
[20:15:16] *** Quits: vladoski (~vladoski@2001:b07:add:d406:b87c:82d:b0c0:3578) (Remote host closed the connection)
[20:15:38] *** Joins: giesen (~ggiesen@ego.giesen.me)
[20:16:02] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[20:17:40] *** Joins: davixx (~nephilim@DSL62-0-142-225.bb.netvision.net.il)
[20:18:07] *** Quits: davix (~nephilim@DSL62-0-142-225.bb.netvision.net.il) (Ping timeout: 256 seconds)
[20:18:09] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[20:18:39] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[20:19:10] *** Quits: ph88 (~ph88@2a02:8109:9e00:71d0:713a:ad1d:dd0:bdcc) (Remote host closed the connection)
[20:19:25] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[20:19:28] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0:980:dccb:621a:6731)
[20:19:32] *** Joins: zebrag (~chris@user/zebrag)
[20:20:29] *** Quits: PaC-mEn (~PaC-mEn@5.29.177.78) (Quit: Leaving)
[20:20:50] *** Joins: PaC-mEn (~pac@5.29.177.78)
[20:21:10] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[20:22:22] *** Joins: kickingvegas (~cchoi@c-67-170-234-150.hsd1.ca.comcast.net)
[20:22:26] *** Quits: PaC-mEn (~pac@5.29.177.78) (Client Quit)
[20:22:46] *** Joins: PaC-mEn (~pac@5.29.177.78)
[20:23:03] *** Joins: davix (~nephilim@DSL62-0-142-225.bb.netvision.net.il)
[20:23:57] *** Joins: Hackerpcs (~user@user/hackerpcs)
[20:25:04] *** Joins: mEn (~PaC-mEn@5.29.177.78)
[20:25:29] *** Quits: PaC-mEn (~pac@5.29.177.78) (Client Quit)
[20:25:37] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 240 seconds)
[20:25:37] *** Quits: davixx (~nephilim@DSL62-0-142-225.bb.netvision.net.il) (Ping timeout: 250 seconds)
[20:26:18] *** Joins: teut (~teut@2401:4900:1c68:dbe1:482e:df7e:b828:f451)
[20:26:41] *** Joins: llua (~llua@zsh/developer/llua)
[20:27:37] *** llua is now known as looah
[20:29:19] *** Joins: berong91 (~noob4ever@75.154.235.153)
[20:30:21] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 256 seconds)
[20:30:25] *** Joins: davixx (~nephilim@DSL62-0-142-225.bb.netvision.net.il)
[20:30:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[20:30:47] *** Quits: berong91 (~noob4ever@75.154.235.153) (Remote host closed the connection)
[20:31:59] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 252 seconds)
[20:32:17] *** Quits: davor (~davor@user/davor) (Ping timeout: 256 seconds)
[20:32:34] *** Joins: MasterK (~MK@86.127.18.87)
[20:33:00] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[20:33:51] *** Quits: davix (~nephilim@DSL62-0-142-225.bb.netvision.net.il) (Ping timeout: 250 seconds)
[20:36:21] *** Quits: bluedust_ (~bluedust@59.89.220.95) (Remote host closed the connection)
[20:36:28] *** Joins: davor (~davor@user/davor)
[20:37:51] *** Quits: jinsun__ (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:37:59] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:38:28] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[20:38:54] *** Joins: callq (~callq@2409:4062:2296:71d:edc0:24f8:78e1:290e)
[20:39:12] <callq> Hey. I started out with a little loop-based console menu, but now, as it grows, it's getting messy, lots of nesting.
[20:39:22] <callq> Any recommendations for a good menu-system library or framework?
[20:39:47] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:681d:16af:8dc7:c838) (Remote host closed the connection)
[20:39:52] <InPhase> pyside
[20:39:54] <NoImNotNineVolt> curses?
[20:39:57] <SnoopJ> callq, `urwid` is well-liked, `rich` is also popular
[20:40:02] *** Joins: water_27300935_ (~xe@182.90.129.124)
[20:40:18] <SnoopJ> although rich is a little less about menu-y stuff
[20:40:24] <callq> Will compare, and probably choose the simplest and easiest. Nothing too fancy
[20:40:46] <InPhase> callq: It's not really too hard to upgrade to a gui with pyside, unless you need to lock this down to something you can ssh into.
[20:41:05] <callq> GUI would be cool. Never done it before though.
[20:41:17] *** Joins: jinsun (~quassel@user/jinsun)
[20:41:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:41:47] <InPhase> callq: First do an "open a window" demo, then a button demo, then try to make a very simple drop-down menu.  These aren't too ahrd.
[20:41:54] <InPhase> s/ahrd/hard/
[20:42:04] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:42:19] *** Quits: gerj79 (~gerj79@user/gerj79) (Quit: Leaving)
[20:42:20] <callq> cool
[20:44:15] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-035.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[20:44:40] *** Parts: artemon` (~user@p200300d627102f00b1c98e657177662c.dip0.t-ipconnect.de) (ERC (IRC client for Emacs 27.2))
[20:44:59] <SnoopJ> pyside's also quite popular, if you're ready to put on hold whatever you're working on for a bit to learn it :P
[20:45:49] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:60ef:8113:9157:1102) (Quit: Konversation terminated!)
[20:46:38] *** Joins: luva4 (~luva@45.141.152.62)
[20:46:56] <callq> "How hard could it be..." *12 hours later and 40 new tabs opened....*
[20:47:01] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 256 seconds)
[20:47:22] *** Joins: faLUKE (~paolo@host-212-171-66-64.retail.telecomitalia.it)
[20:48:31] <InPhase> It's not too bad of a time investment, and then it pays off because you know how to do it, and you're potentially making some good professional-grade stuff for usability.
[20:49:15] <SnoopJ> I can attest to it being pretty simple to get a dumb GUI application off the ground with Qt, although I haven't used the pyside bindings
[20:49:51] *** Quits: luva (~luva@37.120.197.53) (Ping timeout: 256 seconds)
[20:49:51] *** luva4 is now known as luva
[20:49:53] <sveinse> flake8 keeps throwing either W503 and W504 at me, which is about line breaks before or after the newline. Looking at the docs, they are perfectly complementary, but W504 is the updated policy according to pep8. Since they contradict, do I essentially need to mute the one I'm not interested in?
[20:50:16] *** Quits: MasterK (~MK@86.127.18.87) (Remote host closed the connection)
[20:50:32] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8) (Ping timeout: 240 seconds)
[20:51:09] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:51:18] *** Joins: masoudd (~masoudd@user/masoudd)
[20:52:00] <jinsun> W504 is disabled by default
[20:52:20] <jinsun> so just follow W503
[20:52:20] *** Quits: iptable (~iptable@host86-178-62-113.range86-178.btcentralplus.com) (Quit: Textual IRC Client: www.textualapp.com)
[20:52:41] *** Joins: AlanMD (~AlanMD@86.124.30.89)
[20:53:46] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[20:53:53] <water_27300935_> I want to 'dumps' dict 'a' to JSON, the 'key2' value include complex string, is it have better way without base64 encode the 'key2' value before 'json.dumps'?
[20:53:56] <water_27300935_> https://bpa.st/MXEA
[20:54:23] <sveinse> wait, isn't it oposite jinsun? The best practice of https://www.flake8rules.com/rules/W504.html is the recommended practice?
[20:55:14] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[20:55:17] *** Quits: AlanMD_ (~AlanMD@193.105.140.131) (Ping timeout: 240 seconds)
[20:55:34] <SnoopJ> water_27300935_, why do you want to encode it?
[20:55:43] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:55:48] <jinsun> sveinse: oh oops, both are disabled by default it seems, earlier only one of them use to be I think, so when I saw W504 in the list I didn't even look for 503
[20:56:49] <sveinse> Thanks. Interesting, thou. I'm coding with VSCode and it apparently reenables them evidently
[20:57:05] <jinsun> sveinse: yeah W503 is the bad one, follow W504
[20:57:32] *** Joins: RedAero (~RedAero@0526F8D3.dsl.pool.telekom.hu)
[20:57:54] <soundwave[m]> I installed pipenv into my pipenv project. I get this error:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/864434d5cd80195b30ed5fb8b341e51b0cb39599)
[20:58:24] *** Joins: vsantana1 (~Thunderbi@fttx-177136148223.usr.predialnet.com.br)
[20:58:25] *** Joins: georgios (~georgios@user/georgios)
[20:58:33] <RedAero> Is it possible to use 32-bit ODBC drivers from 64-bit Python?
[20:59:24] <water_27300935_> SnoopJ: The 'key2' value just example, actually, maybe include more complex char or format, and unknow, maybe rise uncertain error when 'json.dumps'.
[20:59:48] <SnoopJ> water_27300935_, JSON strings are quite permissive, only a handful of things are disallowed
[21:00:17] *** Quits: vsantana (~Thunderbi@2804:214:816a:6712:2525:8e63:7662:52a2) (Ping timeout: 240 seconds)
[21:00:17] *** vsantana1 is now known as vsantana
[21:00:47] <SnoopJ> I think only control characters are truly forbidden, and even those can be encoded with \u I think
[21:01:02] *** Joins: Barones (~Barones@user/Barones)
[21:01:17] <bjs> water_27300935_: do you have an example string you need to "encode" ?
[21:01:52] <nomic> is there any way to see if the value is a global in pdb
[21:02:08] *** Joins: bluedust (~bluedust@59.89.220.95)
[21:02:59] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[21:03:57] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[21:04:01] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[21:04:14] *** Quits: TransitusFluvii (~ingfix-2m@wikipedia/-Alabama-) (Quit: Reconnecting)
[21:04:39] *** Joins: TransitusFluvii (~ingfix-2m@2001:470:69fc:105::1:6ca2)
[21:05:38] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[21:05:44] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[21:06:17] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[21:06:17] *** Quits: mEn (~PaC-mEn@5.29.177.78) (Ping timeout: 240 seconds)
[21:06:37] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[21:06:37] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 256 seconds)
[21:06:54] *** Quits: xxyxx (~none@ip-037-024-160-145.um08.pools.vodafone-ip.de) (Remote host closed the connection)
[21:07:50] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[21:08:13] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[21:08:13] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[21:08:38] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[21:08:50] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[21:09:06] <water_27300935_> bjs: I have no idea, just worry. :)
[21:09:09] <ChrisWarrick> soundwave[m]: pretty sure you aren’t supposed to do that
[21:09:18] *** Joins: dme86 (~dan@user/dan86)
[21:10:30] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[21:10:36] *** Joins: xxyxx (~none@ip-037-024-160-145.um08.pools.vodafone-ip.de)
[21:11:36] *** Joins: smrtz (~smrtz@user/smrtz)
[21:12:46] *** Joins: luva6 (~luva@45.141.152.61)
[21:13:04] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:13:25] <soundwave[m]> ChrisWarrick: Ya, I thought so, thanks
[21:14:15] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:15:55] *** Quits: Dotz0cat (~Dotz0cat@h81.15.31.71.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[21:16:07] *** Quits: luva (~luva@45.141.152.62) (Ping timeout: 250 seconds)
[21:16:07] *** luva6 is now known as luva
[21:18:25] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[21:18:57] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[21:20:07] <p-i-> https://bpa.st/BUBA wtfff? Why regex Why?
[21:20:17] *** Joins: Dotz0cat (~Dotz0cat@h227.228.187.173.dynamic.ip.windstream.net)
[21:20:22] <p-i-> real 101 fail here
[21:21:03] <SnoopJ> nomic, interesting question. I don't see a way to do that. That information is definitely in the parse tree, though.
[21:21:26] *** Quits: mdnotg (~mdnotg@78.185.225.213) (Quit: mdnotg)
[21:21:48] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:3caf:1512:480a:ea92) (Quit: Leaving)
[21:22:11] <nomic> would be v v handy
[21:22:51] <exarkun> Anyone want to tell me (in detail, I know the general answer) why 4.94065645841246544288e-324 comes out of sqlite3 as 0.0 (when accessed via python sqlite3 module)?
[21:23:16] <bjs> p-i-: I'm not sure what line I'm supposed to be surprised at?
[21:23:25] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[21:24:07] <sveinse> exarkun: <speculating>Lesser datatype, so the numbers gets too small for e.g. float?
[21:24:12] *** Joins: d1cor (~diego@179.63.242.122)
[21:24:25] <exarkun> sveinse: It's ieee754 Binary64 (aka Double) all around, as far as I can tell.
[21:24:46] <exarkun> It /is/ pretty much the smallest representable double value
[21:24:57] *** Quits: humbertowoody (~humbertow@148.204.6.250) (Ping timeout: 240 seconds)
[21:24:59] *** Joins: mdemo (~mdemo@user/mdemo22)
[21:26:02] <nomic> must be achievable snoopj
[21:26:42] <nomic> ur in pdb and you import some function
[21:27:00] <SnoopJ> nomic, I guess you can check locals().keys() to see if the variable is there. This isn't really specific to pdb, though.
[21:27:44] <nomic> if its not in keys its global
[21:27:45] <SnoopJ> i.e. if it's not local, it will be resolved somewhere else. I think if you wanted to distinguish between "that's defined somewhere else" and "that is defined at the top level" you'd need to walk the call stack.
[21:27:51] <SnoopJ> nomic, no, not necessarily.
[21:27:57] <SnoopJ> It could be defined in an enclosing non-global scope.
[21:29:25] *** Quits: TransitusFluvii (~ingfix-2m@2001:470:69fc:105::1:6ca2) (Changing host)
[21:29:25] *** Joins: TransitusFluvii (~ingfix-2m@wikipedia/-Alabama-)
[21:29:31] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[21:29:39] *** Joins: humbertowoody (~humbertow@148.204.6.250)
[21:29:50] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:31:01] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[21:31:59] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:b67b:cc40:8cbf:8800) (Quit: Leaving)
[21:32:42] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ff:95b4:e0aa:4207:e691:8ab8)
[21:32:54] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[21:33:11] *** Joins: vindex10 (~vindex10@gateway/tor-sasl/vindex10)
[21:34:46] *** Quits: Gurkenglas_ (~Guest22@dslb-188-096-121-068.188.096.pools.vodafone-ip.de) (Quit: Client closed)
[21:34:48] <SnoopJ> At least I think. globals() has a slightly confusing name
[21:34:52] *** Parts: water_27300935_ (~xe@182.90.129.124) (WeeChat 3.4)
[21:35:01] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:36:16] *** Joins: MrFantastik (~f@2607:f598:bbda:170:58a7:29fa:4a60:524a)
[21:36:20] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10ee:b747:e0aa:4207:e691:8ab8) (Ping timeout: 252 seconds)
[21:36:52] *** Joins: crashrep (~crashrep@user/crashrep)
[21:38:24] *** Joins: reedrichards (~f@2607:f598:bbda:170:58a7:29fa:4a60:524a)
[21:38:30] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:39:17] *** Quits: revolve (~u0_a227@82-132-227-141.dab.02.net) (Ping timeout: 240 seconds)
[21:39:26] *** Quits: MrFantastik (~f@2607:f598:bbda:170:58a7:29fa:4a60:524a) (Read error: Connection reset by peer)
[21:40:29] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com)
[21:40:35] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:40:46] *** Joins: Anonima (~Anonima@bl11-160-152.dsl.telepac.pt)
[21:40:56] <Anonima> o/ python
[21:41:22] *** Quits: AlanMD (~AlanMD@86.124.30.89) (Remote host closed the connection)
[21:41:40] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 256 seconds)
[21:42:02] *** Joins: AlanMD (~AlanMD@86.124.30.89)
[21:42:05] <Anonima> Question regarding argparser
[21:42:19] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:42:46] <Anonima> regarding on having the some argument being able to be optional and positional at the same time
[21:42:55] <Anonima> so like, having "num" as a positional argument in argparse, but when flag -n is used num no longer is positional and becomes optional, in other words having a positional and optional counter parts being mutually exclusive muttually exclusive = just means cant be used at the same time. arg: "num"(positional) and "-n"(optional) cant be used at the
[21:42:56] <Anonima> same time. Could I have any tips on how to do this? Thanks.
[21:43:51] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 250 seconds)
[21:44:15] *** Joins: Zeturic (~Orimendix@50-25-77-41.krmtcmta02.res.dyn.suddenlink.net)
[21:44:31] *** Joins: mEn (~PaC-mEn@5.29.177.78)
[21:44:35] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 252 seconds)
[21:44:43] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 250 seconds)
[21:46:03] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Read error: Connection reset by peer)
[21:46:11] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[21:46:36] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[21:47:57] *** Joins: Fiji- (~Fiji@user/fiji)
[21:48:37] *** Quits: Guddu (~Guddu@59.95.234.221) (Ping timeout: 240 seconds)
[21:49:49] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 240 seconds)
[21:50:48] *** Joins: paul424 (~tom@ip-5-172-235-23.multi.internet.cyfrowypolsat.pl)
[21:50:57] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 240 seconds)
[21:51:09] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[21:51:17] *** Joins: vitali64 (~vitali64@user/vitali64)
[21:51:23] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:a85e:5217:60c2:bcc7) (Ping timeout: 256 seconds)
[21:52:02] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:52:10] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78)
[21:52:44] *** Joins: fikran (~fikran@user/fikran)
[21:53:53] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 256 seconds)
[21:54:10] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[21:54:22] *** Joins: magla (~gelignite@55d46452.access.ecotel.net)
[21:55:07] *** Joins: junebug (~junebug@2600:1700:3db0:2540:e5c:7359:da93:f16c)
[21:55:21] *** Quits: carl-- (~carl-@185.103.188.130) (Ping timeout: 256 seconds)
[21:55:23] <AhmedAmerican> graingert: is there a way to know how much workers my CPU support ?  I meant when I start nursery like “nursery.start_soon"
[21:55:34] *** Joins: blingrang_ (~blingrang@user/blingrang)
[21:55:40] <AhmedAmerican> So I can assign that number to capacity limited
[21:55:43] <AhmedAmerican> Limiter
[21:55:50] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:56:17] *** Quits: luva (~luva@45.141.152.61) (Quit: Ping timeout (120 seconds))
[21:56:36] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 245 seconds)
[21:56:49] <stewie925> hehe AhmedAmerican: good question, I am learning it too
[21:56:56] *** Joins: luva (~luva@45.141.152.61)
[21:56:58] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[21:57:28] <stewie925> AhmedAmerican: if you dont specify the max_worker, python will allot the maximum available for your computer
[21:57:28] <AhmedAmerican> By the way I never found a real answer for that question as it’s depends multiple things and the kind of operation itself
[21:57:36] *** Quits: vindex10 (~vindex10@gateway/tor-sasl/vindex10) (Quit: vindex10)
[21:58:24] *** Quits: Anonima (~Anonima@bl11-160-152.dsl.telepac.pt) (Quit: Client closed)
[21:59:04] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[21:59:31] <p-i-> Is there any way to get 42 out of regex.match(r"FOO (\d+)", "FOO 42") ?  I can't see why it seems to fail. .groupdict()
[21:59:36] *** Quits: smrtz (~smrtz@user/smrtz) (Quit: Client closed)
[21:59:36] <p-i-> Should I not be using .match?
[22:00:02] <stewie925> AhmedAmerican: this should answer your question in https://docs.python.org/3/library/concurrent.futures.html -
[22:00:21] <stewie925> Changed in version 3.8: Default value of max_workers is changed to min(32, os.cpu_count() + 4). This default value preserves at least 5 workers for I/O bound tasks. It utilizes at most 32 CPU cores for CPU bound tasks which release the GIL. And it avoids using very large resources implicitly on many-core machines.
[22:01:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Quit: Leaving)
[22:01:29] <nedbat> p-i-: that matches for me.  are you sure it doesn't?
[22:01:29] <stewie925> so you can assign as much as you can, but Python would default to 32 or os.cpu_count() +4, whichever is SMALLER.  That is the largest allocation it would provide you.
[22:01:35] *** Joins: dme86 (~dan@user/dan86)
[22:01:49] <p-i-> nedbat: Are you using re or regex
[22:01:49] <grym> nedbat: iirc p-i- is not using `re`
[22:01:50] <stewie925> but the python gurus please correct me if i am wrong.
[22:02:01] <grym> possibly https://pypi.org/project/regex/ instead
[22:02:04] <nedbat> p-i-: sorry, i'm using re.
[22:02:07] <AhmedAmerican> stewie925: so in case of `64`, i would need to replace it with `32`
[22:02:21] <p-i-> yah I have to use 'regex' as I'm using DEFINE-s
[22:02:22] *** Quits: luigibu (~luigi@93.176.155.54) (Quit: WeeChat 3.4)
[22:02:27] <stewie925> are you trying to do max_worker=64?
[22:02:33] *** Joins: Anonima (~Anonima@bl11-160-152.dsl.telepac.pt)
[22:02:38] *** Quits: mEn (~PaC-mEn@5.29.177.78) (Ping timeout: 256 seconds)
[22:02:46] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[22:02:57] <nedbat> p-i-: regex works for me too: m = regex.match(r"FOO (\d+)", "FOO 42"); m.group(1) --> '42'
[22:03:12] <Anonima> o/ python
[22:03:12] <stewie925> AhmedAmerican: try that,  but I believe python will just reset it to 32 or os.cpu_count internally
[22:03:18] <AhmedAmerican> i meant if the machine is 64 bit so it's will be determinate using `min(os.cpu_count() +4)`
[22:03:24] *** Joins: aslicedbanjo (~aslicedba@host86-168-244-71.range86-168.btcentralplus.com)
[22:03:25] <stewie925> no
[22:03:33] <stewie925> Ahmed, no
[22:03:40] <AhmedAmerican> ah
[22:03:45] <nedbat> Anonima: hey there
[22:03:46] *** Joins: raxor2k (~raxor2k@78.158.253.229)
[22:03:49] *** Parts: raxor2k (~raxor2k@78.158.253.229) ()
[22:03:50] <stewie925> run os.cpu_count()
[22:03:56] <AhmedAmerican> ok
[22:04:02] <stewie925> it tells you how much cpu you have
[22:04:07] <Anonima> o/ python
[22:04:15] <AhmedAmerican> giving 8
[22:04:24] <AhmedAmerican> >>> import os
[22:04:24] <AhmedAmerican> >>> os.cpu_count()
[22:04:24] <AhmedAmerican> 8
[22:04:24] *** Joins: blingrang__ (~blingrang@user/blingrang)
[22:04:24] <stewie925> then just put 8 or less
[22:04:25] <faLUKE> hello. given myStr = "this is a long string" and  [{"elem":"FRED", "idx1":2, "idx2":3},{"elem":"WILMA", "idx1":5, "idx2":8}]   is there a short way to remove chars idx1:idx2 from myStr and replace them with the values of "elem" keys?
[22:04:37] <Anis[m]> Hmm?
[22:04:44] <stewie925> if you put 9  or more, Python would still allot you 8
[22:05:04] <AhmedAmerican> `limiter = trio.CapacityLimiter(8)`then
[22:05:15] <Anonima> Question regarding argparser
[22:05:15] <Anonima> regarding on having the some argument being able to be optional and positional at the same time
[22:05:16] <Anonima> so like, having "num" as a positional argument in argparse, but when flag -n is used num no longer is positional and becomes optional, in other words having a positional and optional counter parts being mutually exclusive muttually exclusive = just means cant be used at the same time. arg: "num"(positional) and "-n"(optional) cant be used at the
[22:05:16] <Anonima> same time. Could I have any tips on how to do this? Thanks.
[22:05:17] <stewie925> sorry I dont know about that limiter
[22:05:34] <stewie925> AhmedAmerican: I am learning as well:)
[22:05:47] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 256 seconds)
[22:05:47] *** Joins: skapata (~Skapata@user/skapata)
[22:05:48] <AhmedAmerican> https://trio.readthedocs.io/en/stable/reference-core.html#trio.CapacityLimiter
[22:05:49] <AhmedAmerican> :D
[22:06:09] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 250 seconds)
[22:07:40] <Anonima> hello nedbat
[22:07:44] <stewie925> AhmedAmerican: ehhh
[22:07:59] <Anonima> do you know anything regarding argparser question?
[22:08:42] *** TransitusFluvii is now known as Alabama
[22:08:51] <jinsun> stewie925: that's not how ThreadPoolExecutor works either, if you give x wokers as input you will get x, it doesn't get capped at cpu count.
[22:09:02] <Anonima> ;(
[22:09:23] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[22:09:23] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[22:09:23] *** Joins: JordiGH (~jordi@user/jordigh)
[22:09:24] <stewie925> jinsun: thank you! I am waiting for the rebuttal LOL
[22:09:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b) (Ping timeout: 240 seconds)
[22:09:51] *** Joins: pycurious (~Adium@user/pycurious)
[22:10:00] <stewie925> but jinsun, if you provide worker=64 and you have os,cpu_count() of 8, what happens?  doesnt it just give you 8?
[22:10:05] *** Quits: ElQelinho (~ElQelinho@91.192.21.152) (Ping timeout: 256 seconds)
[22:10:17] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[22:10:26] <stewie925> I am learning as I go
[22:10:30] *** Joins: pycurious (~Adium@user/pycurious)
[22:11:05] *** Joins: c4017w (~c4017@209.52.68.8)
[22:11:21] <jinsun> stewie925: just the default value and best practices are dependent on cpu count, but if you decide you need 64 workers you can ask for it and you'll get it (at the cost of extra memory consumption)
[22:11:23] <stewie925> I suppose it depends on the machine you 're running
[22:12:35] <stewie925> jinsun, like in my case I was running a multithread when I run worker=1000 or worker=12 (my cpu count), the execution time is the same, otherwise its slower
[22:12:38] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[22:12:41] <AhmedAmerican> stewie925: https://stackoverflow.com/a/4480202
[22:12:45] * Anonima leaves
[22:13:00] *** Quits: Anonima (~Anonima@bl11-160-152.dsl.telepac.pt) (Quit: Client closed)
[22:13:36] <stewie925> AhmedAmerican:  you meant for anonima, but the person left.
[22:13:39] *** Joins: emf_ (~emf@2620:10d:c090:400::5:c6d7)
[22:13:39] <SnoopJ> nomic, here's an attempt at trying to solve that problem using `inspect`: https://bpa.st/RX5Q
[22:13:47] <sveinse> also remember that unless you tweak the os, there is no affinity towards specific CPUs when creating many workers. The os might as well assign two threads on the same CPU
[22:14:09] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[22:14:27] *** Joins: qlixed (~qlixed@181.44.129.13)
[22:14:35] <SnoopJ> It's not quite an exact solution, though. As I note there, it can result in a false negative. A 'proper' solution that resolves that probably requires getting the parse tree for the function, which you can do with inspect/ast, but I didn't want to bother :)
[22:14:49] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[22:14:55] *** Joins: audiobirb (~audio@user/audio)
[22:15:17] *** Quits: emf (~emf@2620:10d:c090:400::5:c6d7) (Ping timeout: 240 seconds)
[22:15:26] <SnoopJ> But that solution would probably be something like a NodeVisitor that collects Global nodes
[22:15:46] <SnoopJ> (assuming there aren't any nested function definitions, anyway...)
[22:15:55] <jinsun> stewie925: depends a lot on what your code was doing, if it was cpu bound work (that released the GIL) then yes it won't do much good to have 1000 workers if you have only 12 cores
[22:16:50] <stewie925> jinsun: really appreciate you sharing this.
[22:17:21] <jinsun> stewie925: but IO bound stuff can be done in "parallel" even with a single core, you are more limited by your other hardware there
[22:17:21] <AhmedAmerican> if my cpu count giving me `64` so that's means i can run up to 64 process in same time then ?
[22:17:25] <stewie925> what if it is I/O bound tasks (threading)
[22:17:56] *** Quits: RedAero (~RedAero@0526F8D3.dsl.pool.telekom.hu) (Quit: Client closed)
[22:18:19] <sveinse> AhmedAmerican: that depends on your os more than anthing
[22:18:22] <stewie925> jinsun you rad my mind hehe
[22:18:25] <stewie925> read
[22:18:35] <stewie925> thanks again
[22:19:36] <bjs> AhmedAmerican: well if you have 64 cores (or hardware threads or whatever) then yes you can run *up to* 64 threads "at the same time", but it's really up to the OS scheduler to decide who runs where
[22:19:45] *** Quits: darks0ul (~darksoul@2409:4043:89d:a29:c217:f358:a4ab:b294) (Quit: WeeChat 3.4)
[22:20:01] *** Joins: Betal (~Betal@user/betal)
[22:20:09] <AhmedAmerican> I understand
[22:20:12] *** Joins: lakrass (~lakrass@user/lakrass)
[22:20:51] <AhmedAmerican> I just try to understand trio capacity limiter is treating tokens as process or threads within process
[22:21:02] <AhmedAmerican> If I’m correct . Process is running threads ?
[22:21:55] <bjs> AhmedAmerican: trio is an extra layer ontop of threads and processes
[22:22:23] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:511a:5eb2:c96:106b)
[22:22:24] <stewie925> ad on the topic of mutlthreading - I have this question https://bpa.st/2CCQ
[22:23:11] <jinsun> stewie925: it's the executor that is shutdown
[22:23:11] *** Joins: RedAero (~RedAero@0526F8D3.dsl.pool.telekom.hu)
[22:23:15] <jpic> hi all, how do disable pip install backtracking? I tried --no-deps as specified in the documentation but that actually doesnt't install dependencies at all xD
[22:23:15] <bjs> AhmedAmerican: the OS doesn't know about trio,  and trio can all run within a single thread.  CapacityLimiter is really just an object that has a counter inside it, if the counter reaches the max your async task has to wait for the counter to decrement before continuing.  It's not actually doing anything interesting and/or fancy (I think)
[22:23:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:e5c:7359:da93:f16c) (Quit: Leaving)
[22:23:21] <jinsun> stewie925: so it should be executor.shutdown()
[22:23:36] <stewie925> jinsun: again, thank you so much!
[22:23:48] <jinsun> stewie925: f1 and f2 are futures, they don't have .shutdown
[22:24:11] <stewie925> jinsun - now that makes so much sense - clear explanation
[22:24:27] <AhmedAmerican> Really is trio using just a single thread ? I thought it’s using all available resources
[22:24:54] <stewie925> and jinsun, I should do the shutdown after printing the future results(), or it will be lost, I guess?
[22:25:41] *** Quits: cosimone (~user@93-34-133-254.ip49.fastwebnet.it) (Remote host closed the connection)
[22:26:02] *** Joins: vicfred (~vicfred@user/vicfred)
[22:26:49] <bjs> AhmedAmerican: really trio itself runs in a single thread, and when that thread runs it just keeps switching between running different `async def`s.  Now trio programs will `await` many things that aren't using trio,  and may be running in other threads or doing other things (e.g. networking and such) and trio knows how to keep track of those
[22:26:54] <stewie925> sorry, no worries, I will try it out
[22:27:00] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 256 seconds)
[22:27:07] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[22:27:27] *** Joins: ElQelinho (~ElQelinho@91.192.21.152)
[22:27:28] <jinsun> stewie925: if you just do .shutdown() without args, it will wait for the futures to complete, so you will be able to able to get the result after shutdown too
[22:27:59] <stewie925> jinsun, thank you!!!
[22:29:07] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:e4af:750c:7b8:c5e6) (Ping timeout: 250 seconds)
[22:29:10] <bjs> AhmedAmerican: so that when your trio `async def` says `await network.recv()` then when trio's thread runs then it can check to see if the data has been received and if so then it can switch to running that `async def` with the received data.  Quite often these "receiver" things are actually other threads the OS can schedule that at the end tell trio that it's ready,  but there are other ways.
[22:29:11] <jpic> is there any alternative to pip which allows to skip backtracking maybe?
[22:29:19] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:30:01] <AhmedAmerican> bjs: interesting , it’s more deep about the underlying OS
[22:30:17] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-8c2b-39c2-5b67-a4ff.res6.spectrum.com)
[22:30:31] <bjs> AhmedAmerican: well in some sense it's the other way around,  trio isn't very deep at all,  the OS doesn't know anything about trio and trio cannot interact with the OS directly
[22:30:37] <bjs> it's just another Python program running in that thread
[22:30:44] <AhmedAmerican> Got it
[22:30:46] <bjs> just a clever one that tricks you into thinking many things are running "at once"
[22:31:02] <jinsun> jpic: pip doesn't allow it, there are some open issues about it like this one https://github.com/pypa/pip/issues/10417
[22:31:56] <AhmedAmerican> In case if I would like to send 1Million https request ( away from having a real good internet connection ) in that case threads is good enough to use than Async ?
[22:32:32] <exarkun> Who are you sending 1 million HTTPS requests to
[22:32:40] *** Joins: raxor2k (~raxor2k@78.158.253.229)
[22:33:05] *** Quits: Alabama (~ingfix-2m@wikipedia/-Alabama-) (Quit: Reconnecting)
[22:33:27] <raxor2k> I am arguing with the mobile app developer who says that i should use try and catch everywhere in the backend code, because this "helps" him find errors easier on the app. Please remind me why using try and catch exceptions is a bad thing again?
[22:33:28] *** Joins: Alabama (~bizkit@2001:470:69fc:105::1:6ca2)
[22:33:43] *** Alabama is now known as Guest9990
[22:33:48] *** Joins: Atque (~Atque@user/atque)
[22:34:19] <sveinse> raxor2k: try catch in C++ is somewhat different than try except in py
[22:34:53] <jpic> jinsun: thanks, I don't get it, I have 100% coverage as such am very confident that I'm not using any of the *potentially* incompatible dependency versions, I wish I just had the freedom to skip it ... what's the next step maybe making static typing mandatory ...
[22:34:58] <bjs> raxor2k: why does catching it help find errors?
[22:35:00] *** Quits: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[22:35:23] <bjs> if you don't catch it, the program crashes and Python prints out where the error was already.
[22:35:32] <jpic> it's breaking my project because it's affraid to *potentially* break it xD
[22:35:35] *** Quits: reedrichards (~f@2607:f598:bbda:170:58a7:29fa:4a60:524a) (Ping timeout: 256 seconds)
[22:35:43] <raxor2k> bjs: so you say i should use try and exceptions?
[22:35:46] <jpic> irony at its best
[22:35:51] <bjs> raxor2k: I didn't say either way.
[22:35:58] <ssbr> sveinse: nothing wrong with catching exceptions and logging them, and then reraising them.
[22:35:59] <bjs> You should use them the right amount in the right place :)
[22:36:02] <exarkun> raxor2k: The answer might be more subtle than "exceptions good" or "exceptions bad".
[22:36:09] <sveinse> I am currently working on a py package clearly written by a c++ author, so everything is type checked and compared against None, rather than just raising an exception.
[22:36:10] <ssbr> sveinse: you'll find a lot of errors this way, which helps users get a more reliable product by the end
[22:36:24] <sveinse> ssbr: yep, absolutely
[22:36:39] <raxor2k> ok but please
[22:36:42] <raxor2k> give me an answer
[22:36:44] <AhmedAmerican> exarkun: Unlimited API of stocks dealing with it
[22:36:46] <exarkun> raxor2k: "it depends"
[22:36:47] <bjs> raxor2k: in Python exceptions are everywhere, and people use them a lot for various reasons.  For *reporting* errors,  or just for special cases and as control-flow
[22:36:50] <ssbr> sveinse: sorry, I had the wrong person -- nicks were the same length
[22:36:51] <raxor2k> why should i use that and why should I NOT use that
[22:36:58] <ssbr> raxor2k: see my messages to sveinse
[22:37:25] <ssbr> sveinse: wrt C++: it's legitimately funny to think of someone trying to program in Python via extensive use of a dynamic_cast analogue
[22:37:25] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[22:37:27] <bjs> raxor2k: I don't see how catching the error "helps find errors"
[22:37:49] *** Quits: Guest9990 (~bizkit@2001:470:69fc:105::1:6ca2) (Client Quit)
[22:37:50] <sveinse> ssbr: heh, do you have an example?
[22:37:57] *** Joins: parv (~quass@user/parv)
[22:38:02] *** Joins: Guest9990 (~bizkit@wikipedia/-Alabama-)
[22:38:05] <bjs> raxor2k: because *not* catching the exception means the program will stop when the error happens and Python will print out where it happened, why would catching it be better than that?
[22:38:20] <ssbr> sveinse: no, that's just what it sounds like they were  -- dynamic_cast returns a casted pointer of the new type, or the equivalent of None if it doesn't have this type
[22:39:06] *** Joins: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[22:39:12] <bjs> raxor2k: that said there are *other* reasons to raise (and catch) exceptions to do with error reporting, and warnings, and special-cases and control-flow and Python uses exceptions all over the place and there are many good reasons to catch an exception.
[22:39:13] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[22:39:38] <ssbr> right, it's not that you catch it, it's that you catch it and do something with it that is helpful (and then, if you don't know what it is, probably reraise it)
[22:39:48] *** Guest9990 is now known as bizkit
[22:39:48] <jinsun> yeah they are probably just asking to log it and reraise it
[22:39:50] <ssbr> the top level of your app loop might not do the reraising part though
[22:40:01] <sveinse> ssbr: Another difference I see, is that in py it is often more relied on falseness of things rather than explicit type comparison with None (is None), which is much more prevalent in C++
[22:40:35] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[22:40:51] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[22:40:59] <ssbr> sveinse: C++ programmers don't like implicit falseness because, in C++, the following can print "true lmao": `x = false; if (x) { std::cout << "true lmao\n"; }`
[22:41:11] <ssbr> (because x was, for example, an optional<bool>)
[22:41:15] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:41:31] <ssbr> it's different in Python, not as confusing
[22:41:54] *** Joins: gambl0re (~gambl0re@216.154.39.244)
[22:42:08] <sveinse> On limited platforms (not sure mobile counts as limited anymore), try catch can be mighty expensive. So C++ devs coming from these systems tend to program around the need for exceptions programmatically, and I've seen that leak into py programming as well.
[22:42:10] <bjs> raxor2k: and while not catching the exception means the program stops and shows you exactly where the error is, and what could be better than that for finding errors,  often you really don't want to the program to *just stop*  so catching exceptions is also useful there. In general I argue against trying to be overly fault-tolerant wrt bugs as the state of your program after a programmer-induced bug occurs is often ... unclear
[22:42:17] <bjs> so it's often better to just crash and restart from a consistent state
[22:42:45] <ssbr> https://en.wikipedia.org/wiki/Crash-only_software
[22:43:41] <sveinse> ssbr: Well, I've run into a handful of surprises when doing JS as well. They have not the same truthness definition as py. Perhaps its more like C/C++, but I'm unsure
[22:43:46] <bjs> ssbr: that's not quite what I was arguing but yeah,  you can go to either extreme
[22:43:48] <ssbr> I think the reason I would not just crash the top level for an application is: 1) I might be in a thread, and this actually might result in *less* error reporting than if I manually logged and signalled an exit; 2) I might be a concurrent program, and crashing one request might hurt hundreds of neighboring requests -- instead, I should "lame duck", stop accepting new requests, and then terminate. This requires a temporary graceful recovery.
[22:44:32] <parv> p-i-, Your regex issue of DEFINE creating empty captured value was closed without addressing it. What do you make of that?
[22:44:34] <ssbr> there is a third reason, "it's really expensive and the error probably doesn't matter, we get like a gazillion errors/second", but it doesn't sound as principled
[22:44:46] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ff:95b4:e0aa:4207:e691:8ab8) (Ping timeout: 260 seconds)
[22:44:48] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78) (Quit: Client closed)
[22:45:07] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:08] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:883:87ae:5ce4:ab78)
[22:46:08] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ff:95b4:e0aa:4207:e691:8ab8)
[22:46:32] <ElQelinho> Hi, I used overrideredirect in tkinter, and this method doesn't work in linux. Is there another method?
[22:46:56] <sveinse> If I'm making an app for end-users, I usually handle the known user-error exceptions and print friendlier messages in order not to expose all the gory details to the end-user. But at the same time, I have a debug flag where I can enable it to reraise everything.
[22:47:08] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:47:10] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[22:47:33] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:47:45] *** Joins: funhouse (~funhouse@user/funhouse)
[22:47:58] *** Joins: nucranium (~nucranium@2a02:8010:6173:0:1117:d807:3cb6:8b9c)
[22:48:15] <ssbr> sveinse: the last time I worked on user-facing software, our last-resort crash handler had a dump of the traceback and other debugging info you could send to an employee. Also, an SVG of a monkey with a wrench.
[22:48:29] <ssbr> of course, if the software is client-side, no point with the encryption
[22:48:41] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:645d:2a7c:96cb:dc8)
[22:48:53] <p-i-> parv: https://github.com/mrabarnett/mrab-regex/issues/452 ... I'm ok with the resolution. I figured it out myself... key was to print out the .groupdict() that comes back from .match. Then I could see what was going on.
[22:49:03] *** Joins: LuKaRo (~LuKaRo@p200300dfa72f4b3100000000000001f9.dip0.t-ipconnect.de)
[22:49:42] <parv> p-i-, Alright.
[22:49:44] <p-i-> It's a defect/limitation in regex; as the author infers: if it could be reinvented from scratch, it would be a lot cleaner.
[22:50:04] <p-i-> As it is, we have to hack away. Bit like bash :)
[22:50:18] *** Joins: Guest1778 (~Guest1778@cpe-173-174-25-173.stx.res.rr.com)
[22:50:28] <parv> That at least needs to be documented.
[22:50:58] *** Joins: greedom (~greedom@p200300de670e2100dece487a760ec6f8.dip0.t-ipconnect.de)
[22:51:04] <Guest1778> I am using Anaconda and am trying to install the package "Sage". I copy/pasted the first command written here: https://anaconda.org/conda-forge/sage
[22:51:04] <Guest1778> But it didn't work. Why?
[22:51:54] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[22:52:02] * parv wonders what other undocumented issues are hiding in "regex" module ...
[22:52:12] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10ff:95b4:e0aa:4207:e691:8ab8) (Ping timeout: 268 seconds)
[22:52:15] *** Quits: pro_z_ (~pro_z@37.214.69.56) (Ping timeout: 256 seconds)
[22:52:31] *** Quits: greedom (~greedom@p200300de670e2100dece487a760ec6f8.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:52:46] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[22:53:03] *** Quits: nomic (~nomic@185.217.117.245) (Quit: Leaving)
[22:53:09] <p-i-> parv: I just wish that these tools had, right at the start of the root README, a long list of minimal examples. I've lost so many hours thrashing at this.
[22:53:13] *** Joins: greedom (~greedom@p200300de670e2100dece487a760ec6f8.dip0.t-ipconnect.de)
[22:53:14] *** Quits: j0ma (~jonne@146.115.163.209) (Quit: WeeChat 3.4)
[22:53:23] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[22:53:38] *** Quits: spawnmc (~spawnmc@user/spawnmc) (Quit: Client closed)
[22:54:07] <p-i-> Or even a TRYME.ipynb ... I think that would be a beautiful doc-tool, as markdown cells could intersperse with code cells.
[22:55:16] *** Joins: Atque (~Atque@user/atque)
[22:55:25] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:56:47] *** Quits: ElQelinho (~ElQelinho@91.192.21.152) (Remote host closed the connection)
[23:03:47] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[23:03:58] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[23:04:22] *** Joins: pycurious (~Adium@user/pycurious)
[23:06:05] *** Joins: macros_ (~macros@55d4b767.access.ecotel.net)
[23:06:05] <ChrisWarrick> Guest1778: how did it not work?
[23:06:06] <jinsun> Guest1778: how do you know it didn't work?
[23:06:24] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl487lg3g4utvpjhp.ipv6.telus.net)
[23:06:36] *** Joins: grooverman_ (~grooverma@179.97.162.187)
[23:06:39] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl487lg3g4utvpjhp.ipv6.telus.net) (Remote host closed the connection)
[23:06:42] *** Quits: Guest1778 (~Guest1778@cpe-173-174-25-173.stx.res.rr.com) (Quit: Client closed)
[23:06:45] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[23:06:53] *** Joins: Guest1778 (~Guest1778@cpe-173-174-25-173.stx.res.rr.com)
[23:06:58] <Guest1778> I am using WSL. Here is the failure message: https://i.imgur.com/TZqckqG.png
[23:07:02] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl487lg3g4utvpjhp.ipv6.telus.net)
[23:07:30] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec4d-94c6-3914-8d3d.res6.spectrum.com)
[23:07:49] *** Quits: zamanf (~dev@user/zamanf) (Ping timeout: 240 seconds)
[23:07:57] <jinsun> the command says -c conda-forge too after conda install
[23:07:57] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Ping timeout: 240 seconds)
[23:07:57] <ChrisWarrick> Guest1778: your conda is not configured for conda-forge
[23:08:02] <SnoopJ> yes you need to use conda-forge
[23:08:12] <SnoopJ> https://doc.sagemath.org/html/en/installation/conda.html
[23:08:12] <Anis[m]> Guest1778: Can you try with root?
[23:08:15] *** Joins: jazzy (~jaziz@user/jaziz)
[23:08:17] <ChrisWarrick> Guest1778: that said, you might prefer to install sage via https://github.com/sagemath/sage-windows/releases
[23:08:27] <SnoopJ> Anis[m], running with root won't suddenly make the packages appear on the remote server
[23:08:31] <ChrisWarrick> Anis[m]: running stuff with root usually doesn’t help.
[23:09:56] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Quit: The Lounge - https://thelounge.chat)
[23:10:05] *** Quits: grooverman (~grooverma@179.97.133.197) (Ping timeout: 250 seconds)
[23:10:39] *** Joins: mbrndtgn (~mbrndtgn@undecidable.de)
[23:10:48] *** Joins: eyepeetee (~aa@024-151-038-076.res.spectrum.com)
[23:11:00] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:11:03] <Guest1778> Here is the next attempt: https://i.imgur.com/ClFz7Sm.png
[23:11:20] <SnoopJ> That looks like the command is still running
[23:11:47] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:12:42] *** Quits: Esexe_ (~aa@024-151-038-076.res.spectrum.com) (Ping timeout: 250 seconds)
[23:12:48] <Guest1778> Yeah, you're right still running. Taking a long time for some reason
[23:13:53] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[23:14:07] <jinsun> adding conda-forge makes conda even slower, that is expected
[23:14:29] *** tomg_ is now known as tomg
[23:14:31] <ChrisWarrick> the sage installer is 800+ MB for a reason
[23:14:47] <Guest1778> what is conda-forge ? a big repository of packages?
[23:14:51] <SnoopJ> yes
[23:14:57] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[23:15:17] <Guest1778> what was happening when I just ran "conda install sage" where were the packages coming from?
[23:15:18] <SnoopJ> ChrisWarrick, probably includes all of its dependencies since their target UX is "like Mathematica"
[23:15:53] <SnoopJ> Guest1778, it was checking the default repositories, but sage isn't defined in those. conda-forge is a community repository.
[23:16:09] <jinsun> Guest1778: it looks in the default channels only by default, which doesn't inside conda-forge unless you use miniforge
[23:16:20] <jinsun> s/inside/include
[23:16:22] <SnoopJ> it's exactly analogous to adding a PPA with apt on Debian/Ubuntu, if you've done that before.
[23:16:38] <Guest1778> I haven't, but what you both said is understandable.
[23:16:54] <Guest1778> I guess I'll go buy a coffee. Glad I'm at a cafe haha
[23:16:59] *** Joins: cosimone (~user@93-34-133-254.ip49.fastwebnet.it)
[23:17:34] <jinsun> you can run `conda config --show default_channels` to see the defaults if you want
[23:18:06] <SnoopJ> see also the conda user guide: https://docs.conda.io/projects/conda/en/latest/user-guide/concepts/channels.html
[23:18:12] *** Quits: imp (~imp@177-131-189-195.static.sumicity.net.br) (Quit: imp)
[23:20:03] *** Quits: ubert (~Thunderbi@p200300ecdf0994700e1bfcbc5fe04b55.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:22:12] *** Joins: jeho1 (~jehoshaph@c-73-96-96-243.hsd1.or.comcast.net)
[23:22:12] *** Quits: jeho1 (~jehoshaph@c-73-96-96-243.hsd1.or.comcast.net) (Changing host)
[23:22:12] *** Joins: jeho1 (~jehoshaph@user/jehoshaphat)
[23:23:25] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 256 seconds)
[23:23:57] *** Quits: macros_ (~macros@55d4b767.access.ecotel.net) (Ping timeout: 240 seconds)
[23:23:59] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (Remote host closed the connection)
[23:24:09] *** Joins: Fubbe (~Fubbe@151.40.115.120)
[23:24:19] *** Quits: nucranium (~nucranium@2a02:8010:6173:0:1117:d807:3cb6:8b9c) (Ping timeout: 256 seconds)
[23:24:26] *** Quits: onichomp (~onichomp@2806:264:4408:870:ddc8:ba3f:3971:8979) (Ping timeout: 260 seconds)
[23:24:26] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[23:24:36] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[23:24:52] *** Quits: Fubbe (~Fubbe@151.40.115.120) (Client Quit)
[23:25:04] *** Joins: crashrep (~crashrep@user/crashrep)
[23:26:13] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[23:26:21] *** Joins: nucranium (~nucranium@2a02:8010:6173:0:1117:d807:3cb6:8b9c)
[23:26:23] *** Joins: nomic (~nomic@185.217.117.245)
[23:27:32] <Guest1778> hm, its doing this "Found Conflicts!" thing
[23:27:52] <SnoopJ> did it finish?
[23:28:17] <Guest1778> Not yet. Looks like it is going to take forever
[23:28:21] <SnoopJ> let it finish.
[23:29:14] <Anis[m]> Guest1778: No, sometimes it needs a lot of time.
[23:32:00] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:32:20] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[23:32:21] <jinsun> and it can be really really lot, like 2-3 hours is also possible
[23:32:49] <jinsun> at that point you give up and learn to use mamba instead
[23:33:46] <SnoopJ> which doesn't make the hard problem suddenly not-hard, but I hear it's faster
[23:34:16] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[23:34:32] *** Quits: paul424 (~tom@ip-5-172-235-23.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[23:35:14] <jinsun> it is much faster, and decides to give up much faster too if things are not workin out
[23:35:19] *** Quits: nuclearg1 (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 256 seconds)
[23:35:29] <exarkun> `nix-shell -p sage` works and takes about 30 seconds here, fwiw :)
[23:35:52] <SnoopJ> the ol' nixeroo
[23:38:38] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[23:39:41] *** Joins: Goblins (~mz@12.231.191.170)
[23:40:29] *** Joins: KombuchaKip (~kip@192.252.230.5)
[23:40:52] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[23:40:54] *** Quits: greedom (~greedom@p200300de670e2100dece487a760ec6f8.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:41:33] *** Quits: gambl0re (~gambl0re@216.154.39.244) (Ping timeout: 256 seconds)
[23:42:10] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 260 seconds)
[23:42:51] *** Quits: yossi (~yossi@c-73-223-182-38.hsd1.ca.comcast.net) (Remote host closed the connection)
[23:42:52] *** Quits: RedAero (~RedAero@0526F8D3.dsl.pool.telekom.hu) (Quit: Client closed)
[23:43:49] *** Quits: Guest1778 (~Guest1778@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 256 seconds)
[23:45:30] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:ada2:d851:435b:28b1)
[23:46:43] <toma> [type hints, is this right?] def mysum(*nums: Union[int, float]) -> Union[int, float]:
[23:46:54] *** Joins: plastico (~plastico@neomutt/plastico)
[23:47:05] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:ada2:d851:435b:28b1) (Ping timeout: 268 seconds)
[23:47:10] *** Joins: junebug (~junebug@2600:1700:3db0:2540:bb54:f69c:5ce0:5722)
[23:47:11] *** Quits: tristan_ (~tristan@223.62.202.113) (Remote host closed the connection)
[23:47:19] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: leaving)
[23:47:30] *** Joins: tristan_ (~tristan@223.62.202.113)
[23:47:48] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[23:48:03] <grym> toma: mysum(1, 4.5)  returns 5.5 and mysum(1,1) returns 2 ?
[23:48:51] *** Joins: Fiji_ (~Fiji@user/fiji)
[23:49:03] <toma> grym, yup. the function works but I'm wondering the way I've added the type hints is the right way.
[23:49:13] <grym> toma: i think so
[23:49:19] <toma> thanks grym.
[23:49:42] <grym> toma: you can run it through the mypy playground or the like, too
[23:49:51] <sco1> https://mypy-play.net/
[23:50:53] *** Joins: ThePhilgrim (~thephilgr@151.40.115.120)
[23:51:41] *** Quits: nucranium (~nucranium@2a02:8010:6173:0:1117:d807:3cb6:8b9c) (Ping timeout: 250 seconds)
[23:52:25] <toma> grym, sco1: Thanks. That's really helpful.
[23:52:34] *** Quits: Fiji- (~Fiji@user/fiji) (Ping timeout: 256 seconds)
[23:54:45] *** Joins: macros_ (~macros@55d4b767.access.ecotel.net)
[23:56:42] *** Joins: Fubbe (~Fubbe@151.40.115.120)
[23:56:57] *** Joins: jay-m126 (~jay-m@154.72.162.191)
[23:57:11] <SnoopJ> toma, yes, the annotation for a star argument is the type of each thing in the sequence
[23:57:31] *** Quits: Fubbe (~Fubbe@151.40.115.120) (Client Quit)
[23:57:50] *** Joins: nucranium (~nucranium@2a02:8010:6173:0:1117:d807:3cb6:8b9c)
[23:59:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
