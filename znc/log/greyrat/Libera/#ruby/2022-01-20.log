[00:03:10] *** Joins: duderonomy (~duderonom@c-73-158-190-156.hsd1.ca.comcast.net)
[00:13:13] <nakilon> I still don't know what's better in roda than sinatra
[00:14:16] <nakilon> btw there is also smaller version of it )) https://github.com/rkh/almost-sinatra/blob/trunk/almost_sinatra.rb
[00:23:47] <adam12> hanami-api ! :)
[00:27:51] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.4)
[00:32:41] <havenwood> nakilon: A few things. Roda is faster and uses less memory. The plugin system lets you compose the framework you need, and not get stuck with bloat. I've been so burned by namespace pollution with Sinatra and never happens in Roda.
[00:33:32] <havenwood> nakilon: If you have tons of routes, it's also preferable since the routing tree handles them efficiently. Sinatra may use finite automata like Rails now but for the longest time was just iterating through an Array of Regexp for route matches and it could slow to a crawl.
[00:33:49] <havenwood> nakilon: Basically, Roda is a fresh take on Sinatra with lessons learned and in practice it's just so lovely.
[00:34:14] <havenwood> Also, maintained by a member of Ruby core who made it about as lovely as it can be and maintains it alongside Sequel.
[00:34:39] <havenwood> adam12: Have you been tempted to port Roda apps to hanami-api? I'm curious.
[00:34:54] <adam12> havenwood: Not hanami-api, but more so hanami-router + hanami-controller.
[00:35:16] <adam12> tbh, I really miss having a router I can introspect. And when I introduce Roda on teams, they just struggle constantly with the Roda routing tree style of working.
[00:35:47] <adam12> I miss having classes too. Somewhere to stick random private methods that are relevant to that specific action.
[00:35:55] <havenwood> adam12: Yeah, I generate a routes.json but it's not ideal, for sure.
[00:36:00] <adam12> I have some fairly large apps I consult on, so I'm seeing the pain more than I think anyone else is.
[00:36:36] <adam12> I generate routes.json too on some projects. It does solve some issues, but there's a disconnect between the comment and the location in the tree.
[00:36:57] <adam12> And as per my rant earlier, documentation is often ignored. Moving a routing block doesnt' necessarily mean the person will update the comment about the route :(
[00:37:28] <havenwood> adam12: I've looked at hanami and appreciate the internals code quality but haven't had a chance to use it since I've gone Rails or Roda every time in Ruby land in recent years.
[00:38:00] <adam12> havenwood: It's moving faster than it has been, which is great. I'd like to contribute more but it's impossible with little ones (as you know)
[00:38:16] <nakilon> I had a very funny, disgusting and shameful encounter with hanami developer
[00:38:19] <adam12> I enjoy Roda+Sequel because Jeremy has a regular release cadence. I'm not stuck on my own forks for eternity.
[00:38:43] <havenwood> For small apps, Roda+Sequel has for sure been lovely.
[00:38:45] <adam12> Jeremy's ethics of OSS maintainership are a blessing when I'm just trying to get stuff done.
[00:39:32] <nakilon> (I mean the russian one)
[00:40:42] <havenwood> adam12: Curious if you've checked out Utopia? https://socketry.github.io/utopia/
[00:40:58] <adam12> havenwood: I've flirted with my own framework, using hanami-router and hanami-controller, in the spirit of Merb. I spent some time on it last year, but it kinda dwindled.
[00:41:06] <havenwood> adam12: Nice
[00:41:08] <adam12> I'm in the camp of Rails, where a good framework is _extracted_.
[00:41:38] <adam12> havenwood: I've seen Utopia. Samuel has an interesting approach to APIs that doesnt' always jive with me.
[00:41:50] <havenwood> Speaking of no docs, https://github.com/socketry/lively
[00:41:56] <adam12> havenwood: Tho he has something in Utopia I absolutely want to steal, and it's the custom element stuff. <foo:bar></foo:bar>
[00:42:14] <havenwood> adam12: I agree it's interesting but not something I'm jumping at either.
[00:42:31] <havenwood> lively is super cool though
[00:42:47] <adam12> I was bullish on Padrino for a while but it kind of suffers from maintainership issues, which is fine.
[00:43:07] <adam12> I'd love to see something like the PHP League, but for Ruby. So many good gems just die off, when it would be easier to share the load.
[00:43:35] <adam12> Have a core group of maintainers that can all cut releases for libraries, instead of it falling on just one person.
[00:44:00] <adam12> https://thephpleague.com
[00:44:16] <havenwood> adam12: Yeah, oddly the best stuff is often heroed by a single person.
[00:44:17] *** Quits: _ht (~quassel@82-168-34-160.fixed.kpn.net) (Remote host closed the connection)
[00:44:31] <adam12> nakilon: those russians :P
[00:44:32] * havenwood looks at ioquatix and jeremy evans
[00:44:43] <adam12> Yeah. I can see why, for sure.
[00:45:06] <adam12> The dry-rb org seems to do OK, but it's definitely one "hero" and a few people with commit/release abilities.
[00:46:04] <adam12> one hero per project, that is. Not for the entire org.
[00:46:29] <adam12> I guess now that I've said it, the Dry.rb org is similar to the PHP League.
[00:46:55] <havenwood> League of Extraordinarily Dry Ruby 
[00:47:23] <nakilon> I wish dryrb had anything to do with DRY
[00:47:39] <adam12> nakilon: lol.
[00:47:40] <leah2> :D
[00:47:57] <leah2> i'm totally out of the loop wrt web frameworks it seems
[00:48:50] <nakilon> if I want to fool people and make them adopt a pile of random gems I'll call it a oop-rb
[00:49:11] <adam12> There's some interesting stuff coming out from Sharon Rosner (original author of Sequel) lately too.
[00:49:15] <nakilon> make a website, create a sect^W^W^W
[00:49:17] <adam12> We seem to have a few super-producers.
[00:50:51] <adam12> https://github.com/ciconia
[00:58:04] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[00:59:24] <havenwood> adam12: I wonder how Tipi does so well compared to Falcon. Good stuff.
[01:01:59] <adam12> havenwood: I haven't explored it yet. Tho interestingly, it's following a similar change in hanami for passing in request and response as individual args. A divergence of the Rack API.
[01:02:03] <havenwood> I guess it's just out of the box tuning and one configures more aggresively.
[01:02:19] <havenwood> Probably closes the gap to use `falcon serve --preload` but still, great performance.
[01:05:19] <havenwood> https://github.com/socketry/falcon-benchmark
[01:08:05] <adam12> https://github.com/digital-fabric/impression
[01:08:08] <adam12> Kinda interesting too.
[01:08:11] <adam12> So much interesting stuff.
[01:10:30] *** Joins: bluedust_ (~bluedust@185.248.85.41)
[01:12:37] *** Quits: bluedust (~bluedust@59.89.209.234) (Ping timeout: 240 seconds)
[01:13:26] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[01:17:37] *** Quits: bluedust_ (~bluedust@185.248.85.41) (Ping timeout: 240 seconds)
[01:23:06] <nakilon>  error: Async::Task [oid=0xc3c8] [ec=0xc3dc] [pid=50344] [2022-01-20 00:52:27 +0300]                |   RuntimeError: You want to finish 3 frames, but stack size is only -7
[01:23:09] <ox1eef> puma-dev is really nice, it makes it easy to serve personal web apps over the local network.
[01:23:24] <nakilon> also have stack size -161 lol
[01:24:08] *** Joins: bluedust (~bluedust@static-198-54-131-105.cust.tzulo.com)
[01:27:44] <nakilon> looks like I can't just call byebug inside this async stuff ..\
[01:27:53] *** Joins: bluedust_ (~bluedust@103.160.233.171)
[01:28:03] <nakilon> it just throws thousands of such errors 
[01:28:31] <nakilon> starting with this one:  Async::Task [oid=0xc3a0] [ec=0xc3b4] [pid=50344] [2022-01-20 00:52:27 +0300]               |   Errno::EIO: Input/output error - read
[01:28:58] <nakilon> how do I debug then?
[01:31:38] *** Quits: bluedust (~bluedust@static-198-54-131-105.cust.tzulo.com) (Ping timeout: 250 seconds)
[01:33:24] *** Quits: bluedust_ (~bluedust@103.160.233.171) (Remote host closed the connection)
[01:35:21] <nakilon> really, I have no clue how to debug and fix when this thing starts throwing thousands error for other reasons
[01:35:53] <nakilon> and am not sure where the error was really stopping my threads
[01:36:39] *** Joins: Guest63 (~Guest63@105.71.144.226)
[01:36:51] <Guest63> Slm
[01:37:44] *** Quits: Guest63 (~Guest63@105.71.144.226) (Client Quit)
[01:44:17] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.4) (Ping timeout: 240 seconds)
[01:50:30] *** Quits: Thanzex (~Thanzex@37.103.212.236) (Read error: Connection reset by peer)
[01:50:39] *** Joins: Thanzex7 (~Thanzex@37.103.212.236)
[01:55:24] <nakilon> if I put the "abort" there instead of byebug to then just inspect the file artifacts nothing happens, no error in log, program is still going
[01:55:45] <nakilon> but if I after that do ^C I get back into bash with no backtrace and the process is still running in background
[01:55:48] <nakilon> _<>
[01:56:38] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[02:06:05] *** Quits: havenwood (~havenwood@about/ruby/havenwood) (Quit: The Lounge - https://thelounge.chat)
[02:06:47] *** Joins: havenwood (~havenwood@about/ruby/havenwood)
[02:15:16] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[02:29:57] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[02:30:06] *** Quits: mixfix41 (~homefame@user/mixfix41) (Quit: leaving)
[02:36:59] <weaksauce> nakilon https://github.com/socketry/async-debug
[02:49:29] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:50:35] *** Quits: szkl_ (uid110435@id-110435.uxbridge.irccloud.com) ()
[02:51:02] *** Joins: szkl_ (uid110435@id-110435.uxbridge.irccloud.com)
[02:51:25] *** Quits: szkl_ (uid110435@id-110435.uxbridge.irccloud.com) (Client Quit)
[02:51:48] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[03:04:57] <nakilon> I feel like once some async routine gets an error the whole stdout is fucked and is frozen
[03:05:31] <nakilon> I see that new and new routines are starting and ending but there is no output anymore while each of them had to puts a line
[03:06:13] <nakilon> and the error or whatever it is that has frozen by stdout isn't printed, the terminal is just stuck
[03:06:48] <nakilon> oh now it's printing, thousands of lines of backtraces
[03:07:02] *** Joins: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz)
[03:09:11] <nakilon> yeah I throw a Timeout in them and when it happened instead of printing it and crash it was accumulating a ton of backtraces to then spit out them as "    5m    error: Async::Task ...               |   Timeout::Error: execution expired" for several minutes to finally abort yet not finishing the whole list of tasks as I understand from the
[03:09:11] <nakilon> progressbar gem
[03:10:15] <nakilon> I suppose it has to either go to the end or abort on the first fail, not this useless intermediate behaviour
[03:10:29] *** Quits: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 256 seconds)
[03:11:58] <nakilon> yeah it has processed something between 45 and 70 percents of tasks and now I'll have to start it over again two-three more times
[03:14:24] <nakilon> https://i.imgur.com/mAvihdu.png see this gap between ~45% and ~75% ? that's when the console was stuck and it was working silently to then finally abort and spit the backtraces; now it's stuck again... neither ensuring to go to the end, nor to print me the progress
[03:19:20] <nakilon> if you ask how do I know that it didn't try to execute all the tasks? I see that they didn't add anything to my cache
[03:23:06] <weaksauce> tough to say
[03:29:48] *** Joins: John_Ivan_ (~John_Ivan@31-187-33-75.dynamic.upc.ie)
[03:32:17] *** Quits: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Ping timeout: 240 seconds)
[03:40:17] *** Quits: darkxploit (~jay@c-67-172-32-230.hsd1.ct.comcast.net) (Ping timeout: 240 seconds)
[03:40:23] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:50:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[03:51:17] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[03:58:44] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:07:43] <nakilon> that moment when you realise you just wanted to use a single concurrent pattern but it's already two of them and you need the third one...
[04:09:52] <nakilon> to obtain the data that isn't exposed in API I use chromium wrapped in semaphore(1) and now I'm thinking to use some pool of 5 browser instances
[04:13:47] <nakilon> how do I implement it with stdlib? I'm thinking about 5 loops that are somehow readd themselves to Queue
[04:16:17] <nakilon> or should they readd themselves to Enumerator?
[04:22:41] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:24:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:25:06] <nakilon> hm, the enumerator block does not know when the instance is free
[04:27:24] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[04:51:15] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:54:26] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:00:48] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[05:01:04] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:01:04] <nakilon> with Queue I can now even get rid of Async::Semaphore; but now another weird thing happened: "Async::Task  |   ThreadError: Attempt to unlock a mutex which is not locked  | Caused by Async::Stop: Async::Stop"
[05:01:17] <nakilon> I feel like Timeout and Async aren't friends
[05:13:16] <nakilon> maybe in ruby 3 I should use something different from Timeout::timeout.new?
[05:20:17] <nakilon> where are the async gem normal docs?
[05:26:17] <nakilon> ok found it here https://www.rubydoc.info/gems/async/Async/Task
[05:30:07] <nakilon> though it's not clear what is this method https://www.rubydoc.info/gems/async/Async/Task#with_timeout-instance_method -- is it available if I add "do |subtask|"? I see aliases and some that object is some "parent" but it's not clear what class it is
[05:31:20] <nakilon> weird to call "Scheduler" object a "subtask" but I've seen it in some example
[05:33:11] <ox1eef> if it's IO i think you can use IO.select with a fourth arg as the duration of the timeout
[05:35:14] <nakilon> so I've replaced Timeout::timeout.new with subtask.with_timeout and it threw the "ThreadError: Attempt to unlock a mutex which is not locked" even faster lol
[05:36:24] <ox1eef> fun
[05:38:59] <nakilon> or actually maybe that's actually ok and I had to have this exception always but it was supressed/delayed and that was probably a reason of unpleasant progress behaviour of the program I described earlier; I should think what to do with failed tasks
[05:39:41] <nakilon> though the error message makes no sense to lib user who just faced a timeout
[05:43:29] <nakilon> I even see in docs: message = "execution expired" -- but it's never to be found in the error printed
[05:44:00] <ox1eef> still early days for async, if you find something to improve might be worth a GH issue
[05:45:48] <nakilon> hm, I've reduced the timelimit to cause the error and saw "Async::TimeoutError: execution expired" printed so that error above was for some another unknown reason, it's not my timeout
[05:49:57] *** Quits: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 240 seconds)
[05:53:08] <nakilon> found some another "hanging stdout" issue: https://github.com/socketry/async/issues/137
[06:13:06] *** Quits: Thanzex7 (~Thanzex@37.103.212.236) (Read error: Connection reset by peer)
[06:13:16] *** Joins: Thanzex (~Thanzex@37.103.212.236)
[06:18:12] <nakilon> looks like when you define a task that immediately fails and you do .wait it quickly prints the exception but the return from .wait takes almost a second
[06:20:29] *** Quits: duderonomy (~duderonom@c-73-158-190-156.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:22:35] <nakilon> or even to two seconds; I rescue the .wait to print the task.status (it is :failed) and reraise to stop the program (because it does not stop on its own if it's StandardError)
[06:33:24] <nakilon> finally after this https://dpaste.org/ZLfW/slim it really fails now and prints the real reason; and before it hangs )
[06:36:25] <nakilon> now I see not only "ThreadError: Attempt to unlock a mutex which is not locked" followed by "Caused by Async::Stop: Async::Stop" but also "some async task failed (Exception)", "Attempt to unlock a mutex which is not locked (ThreadError)", "execution expired (Async::TimeoutError)"
[06:37:44] <nakilon> for some reason my (4th) error was not printed and it confused me; though it's weird that if I throw Timeout a bit earlier (like when I tested setting very low Timeout.new arg value) it was printed
[06:38:33] *** Quits: e2 (e2@sponsored.by.bnc4you.xyz) (Quit: Stable ZNC provider #bnc4you)
[06:39:07] <nakilon> ok, async docs don't open anymore; I need adam12 )
[06:46:12] *** Quits: cdown (~cdown@163.114.131.1) (Remote host closed the connection)
[06:46:25] *** Joins: cdown (~cdown@163.114.131.1)
[06:55:29] <nakilon> subtask.with_timeout accepts the error message arg only in async -v 2.0.0 that is only for ruby 3.1 but in rbenv there is only 3.0.2 and 3.1.0-dev _<>
[07:03:49] *** Joins: e2 (e2@sponsored.by.bnc4you.xyz)
[07:13:57] *** Joins: fef (~thedawn@user/thedawn)
[07:20:38] *** Quits: jlindgren (~jlindgren@user/jlindgren) (Remote host closed the connection)
[07:21:45] *** Joins: jlindgren (~jlindgren@user/jlindgren)
[07:30:04] *** Quits: mooff (mooff@awful.cooking) (Quit: Quit)
[07:32:12] *** Joins: mooff (mooff@awful.cooking)
[07:44:00] <havenwood> nakilon: update ruby-build
[07:49:45] <nakilon> havenwood Warning: ruby-build 20211019 already installed
[07:53:12] *** Parts: nakilon (~nakilon@user/nakilon) (rasengan did nothing wrong)
[07:53:20] *** Joins: nakilon (~nakilon@user/nakilon)
[07:53:52] <nakilon> oops, pressed something
[07:58:31] <nakilon> the error chain is still changing time to time; now I see my timeout line in backtrace but not my error message -- instead it is "Attempt to unlock a mutex which is not locked", "attempt to resume the current fiber (FiberError)"
[08:03:48] *** Quits: nullheroes2 (~nullheroe@168.235.66.22) (Quit: WeeChat 2.3)
[08:34:17] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 240 seconds)
[08:41:59] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 256 seconds)
[08:51:37] *** Joins: bluedust (~bluedust@103.160.233.171)
[08:54:09] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[09:17:24] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.5)
[09:23:51] <nakilon> google knows nothing about "attempt to resume the current fiber"; I would report it if I could localize it; the backtrace is short: https://dpaste.org/X02b/slim
[09:25:11] *** Joins: bluedust_ (~bluedust@static-198-54-130-137.cust.tzulo.com)
[09:25:18] *** Quits: bluedust (~bluedust@103.160.233.171) (Remote host closed the connection)
[09:26:33] *** Joins: bluedust (~bluedust@103.160.233.171)
[09:29:35] *** Quits: bluedust_ (~bluedust@static-198-54-130-137.cust.tzulo.com) (Ping timeout: 256 seconds)
[09:33:55] <nakilon> changed Timeout::timeout to subtask.with_timeout and error is gone
[09:55:11] <nakilon> (the 2 seconds large lag I said about earlier -- that's maybe because thousands of tasks starting together eat too much ram or disk read)
[09:58:36] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.5) (Quit: can you please adjust your IRC quit message to be less transphobic?)
[09:59:19] *** Joins: Duneyrr (~Tomte@user/Tomte)
[10:19:00] *** Joins: _ht (~quassel@2a02:a468:b619:1:4334:88f2:ba01:c6e)
[10:37:19] *** Quits: Thanzex (~Thanzex@37.103.212.236) (Read error: Connection reset by peer)
[10:37:54] *** Joins: Thanzex (~Thanzex@37.103.212.236)
[10:40:08] *** Quits: bluedust (~bluedust@103.160.233.171) (Read error: Connection reset by peer)
[10:40:31] *** Joins: bluedust (~bluedust@103.160.233.171)
[10:44:33] *** Joins: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz)
[10:50:12] *** Quits: Duneyrr (~Tomte@user/Tomte) (Ping timeout: 250 seconds)
[11:00:18] *** Joins: infinityfye (~infinityf@102.47.59.10)
[11:06:09] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[11:14:10] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[11:27:20] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[11:27:31] *** Joins: ZAJDAN2 (~ZAJDAN@chladek-jar.zno.skynet.cz)
[11:30:57] *** Quits: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 240 seconds)
[11:52:35] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[12:50:32] *** Joins: duderonomy (~duderonom@c-73-158-190-156.hsd1.ca.comcast.net)
[12:53:28] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:59:09] <nakilon> meh, the "attempt to resume the current fiber" is with me again, and happens just every several seconds _--
[13:04:14] *** wnd-conn is now known as wnd
[13:29:46] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:30:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[13:32:16] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:39:57] *** Quits: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-3d8b-1f80-ab8f-9df3.ip6.gigabit.dk) (Remote host closed the connection)
[13:40:16] *** Joins: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-cfa8-be86-5a22-ee27.ip6.gigabit.dk)
[13:44:14] *** Joins: Bounga (~nico@82-65-32-175.subs.proxad.net)
[14:03:13] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[14:08:02] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[14:38:15] *** Joins: Duneyrr (~Tomte@user/Tomte)
[14:54:52] *** Joins: fef (~thedawn@user/thedawn)
[14:56:00] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[15:00:33] *** Quits: Thanzex (~Thanzex@37.103.212.236) (Read error: Connection reset by peer)
[15:01:00] *** Joins: Thanzex (~Thanzex@37.103.212.236)
[15:02:42] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[15:04:33] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94)
[15:15:15] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[15:22:47] *** Quits: John_Ivan_ (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Read error: Connection reset by peer)
[15:30:30] *** Joins: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie)
[15:32:05] *** Joins: constxd_ (~brad@142.167.170.88)
[15:33:57] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[15:41:04] *** Joins: taupiqueur (~taupiqueu@211.144.204.77.rev.sfr.net)
[15:54:37] *** Quits: taupiqueur (~taupiqueu@211.144.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[16:13:54] *** Quits: Duneyrr (~Tomte@user/Tomte) (Ping timeout: 250 seconds)
[16:27:03] *** Joins: taupiqueur (~taupiqueu@211.144.204.77.rev.sfr.net)
[16:38:35] *** Joins: fef (~thedawn@user/thedawn)
[16:43:17] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[16:51:27] *** Joins: mayo (~mayo@211.186.131.226)
[16:51:30] <mayo> hi
[16:52:06] <mayo> anyone here?
[16:53:25] *** Quits: mayo (~mayo@211.186.131.226) (Client Quit)
[16:58:56] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[17:00:30] <yassernasc> hi mayo, how are you?
[17:05:11] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[17:36:32] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 256 seconds)
[17:37:33] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[17:38:12] *** Joins: Duneyrr (~Tomte@user/Tomte)
[17:40:16] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:00:43] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94) (Ping timeout: 256 seconds)
[18:03:22] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.4)
[18:04:12] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94)
[18:07:18] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:7937:b295:da60:ef94) (Remote host closed the connection)
[18:10:59] <adam12> morning
[18:24:08] *** Quits: ZAJDAN2 (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 256 seconds)
[18:28:34] <oz> hello
[18:29:18] <oz> hey, has anyone played with yjit in prod yet? :)
[18:30:05] <adam12> oz: I haven't yet. And I can't try it in dev currently since I'm working from an M1
[18:31:46] <adam12> I actually don't find Ruby slow, other than at startup when it walks $LOAD_PATH a billion times.
[18:33:16] <oz> well, it's fast enough for a lot of folks, and I'm not complaining either, but I also like free performance improvements.
[18:34:12] <adam12> Yeah, I'm just saying for my projects I haven't had a need yet, so it's not been top of my radar. I'm generally IO Bound.
[18:34:36] <adam12> It will be nice to experiment with once it supports M1.
[18:39:56] *** Quits: Duneyrr (~Tomte@user/Tomte) (Ping timeout: 250 seconds)
[18:42:39] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[18:46:07] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:47:31] *** Joins: bluedust_ (~bluedust@117.241.183.103)
[18:51:09] *** Quits: bluedust (~bluedust@103.160.233.171) (Ping timeout: 256 seconds)
[19:01:27] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.4) (Quit: can you please adjust your IRC quit message to be less transphobic?)
[19:03:06] *** Joins: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz)
[19:06:39] *** Quits: jlindgren (~jlindgren@user/jlindgren) (Quit: ZNC 1.8.2 - https://znc.in)
[19:07:07] *** Joins: jlindgren (~jlindgren@user/jlindgren)
[19:09:43] *** Joins: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz)
[19:12:18] *** Quits: Thanzex (~Thanzex@37.103.212.236) (Read error: Connection reset by peer)
[19:12:39] *** Joins: Thanzex (~Thanzex@37.103.212.236)
[19:13:15] *** Quits: ZAJDAN (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 256 seconds)
[19:14:41] *** Joins: roadie (~user@2a02:8108:ec0:1427:ad55:1a95:65e4:1b82)
[19:24:10] *** Quits: bluedust_ (~bluedust@117.241.183.103) (Remote host closed the connection)
[19:29:43] *** Joins: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:29:52] *** Quits: taupiqueur (~taupiqueu@211.144.204.77.rev.sfr.net) (Ping timeout: 256 seconds)
[19:36:17] *** Quits: taupiqueur_ (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[19:38:58] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:40:26] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[19:42:31] *** Joins: Duneyrr (~Tomte@user/Tomte)
[19:43:28] *** Quits: BSaboia (~bsaboia@189.45.78.253) (Quit: This computer has gone to sleep)
[19:43:51] *** Joins: BSaboia (~bsaboia@189.45.78.253)
[19:45:25] *** Quits: Duneyrr (~Tomte@user/Tomte) (Client Quit)
[19:45:38] *** Joins: Duneyrr (~Tomte@user/Tomte)
[19:49:51] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[19:52:30] *** Quits: Duneyrr (~Tomte@user/Tomte) (Quit: Leaving)
[19:52:43] *** Joins: Tomte (~Tomte@user/Tomte)
[19:53:28] *** Joins: fef (~thedawn@user/thedawn)
[19:53:35] *** Joins: taupiqueur_ (~taupiqueu@67.245.204.77.rev.sfr.net)
[19:54:14] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[19:55:13] *** Joins: John_Ivan_ (~John_Ivan@31-187-33-75.dynamic.upc.ie)
[19:57:57] *** Quits: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Ping timeout: 240 seconds)
[20:29:20] *** Quits: gproto23 (~gproto23@user/gproto23) (Quit: Leaving)
[20:47:10] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[20:48:37] *** Quits: Bounga (~nico@82-65-32-175.subs.proxad.net) (Ping timeout: 240 seconds)
[20:59:23] *** Joins: bluedust (~bluedust@117.241.183.103)
[21:00:37] *** Quits: taupiqueur_ (~taupiqueu@67.245.204.77.rev.sfr.net) (Ping timeout: 240 seconds)
[21:00:46] *** Quits: Tomte (~Tomte@user/Tomte) (Ping timeout: 250 seconds)
[21:05:42] *** Quits: bluedust (~bluedust@117.241.183.103) (Remote host closed the connection)
[21:12:49] *** Quits: ZAJDAN1 (~ZAJDAN@chladek-jar.zno.skynet.cz) (Ping timeout: 256 seconds)
[21:13:42] *** Joins: goldfish (~goldfish@user/goldfish)
[21:21:30] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[21:35:11] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[21:39:27] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[21:41:32] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[21:47:43] *** Quits: cdown (~cdown@163.114.131.1) (Remote host closed the connection)
[21:47:56] *** Joins: cdown (~cdown@163.114.131.1)
[22:07:25] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[22:09:12] *** Joins: Tomte (~Tomte@user/Tomte)
[22:10:59] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:12:30] *** Quits: axsuul (~axsuul@138.68.30.232) (Ping timeout: 256 seconds)
[22:15:20] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[22:18:26] *** Joins: axsuul (~axsuul@138.68.30.232)
[22:45:34] <Sheilong> How do I add multiple keys at once to a hash instance with the same default value for all keys?
[22:47:09] <adam12> Sheilong: Something like hash["foo"] = hash["bar"] = hash["baz"] = "ohai" ?
[22:47:48] <adam12> Sheilong: I'm not sure I'd do that, tbh, but if you're careful it might be OK. I'd probably try to #dup the value if possible.
[22:47:51] <Sheilong> adam12: Yes, but the keys are all in a list. 
[22:48:28] <Sheilong> I wanted all keys to have a default value of zero, but somehow populate the hash passing the list with the keys
[22:48:36] <adam12> keys.each_with_object(initial_hash) { |key, obj| obj[key] = 0 }
[22:48:44] <adam12> Sheilong: You could always set a default for the entire Hash?
[22:49:32] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[22:53:37] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[22:54:16] <Sheilong> adam12: I thanks, that did the job
[23:03:43] *** Joins: fredlinhares (~fredlinha@186.206.254.59)
[23:03:44] *** Quits: roadie (~user@2a02:8108:ec0:1427:ad55:1a95:65e4:1b82) (Ping timeout: 268 seconds)
[23:06:20] *** Joins: bluedust (~bluedust@117.241.183.103)
[23:09:17] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 268 seconds)
[23:09:17] *** Quits: fredlinhares (~fredlinha@186.206.254.59) (Read error: Connection reset by peer)
[23:10:37] *** Quits: bluedust (~bluedust@117.241.183.103) (Ping timeout: 240 seconds)
[23:15:02] *** Joins: fredlinhares (~fredlinha@186.206.254.59)
[23:17:41] *** Joins: taupiqueur (~taupiqueu@126.144.204.77.rev.sfr.net)
[23:21:29] *** Joins: roadie (~user@2a02:8108:ec0:1427:ad55:1a95:65e4:1b82)
[23:25:57] *** Quits: roadie (~user@2a02:8108:ec0:1427:ad55:1a95:65e4:1b82) (Ping timeout: 240 seconds)
[23:27:36] *** Joins: roadie (~user@2a02:8108:ec0:1427:ad55:1a95:65e4:1b82)
[23:32:43] *** Quits: roadie (~user@2a02:8108:ec0:1427:ad55:1a95:65e4:1b82) (Ping timeout: 268 seconds)
[23:32:43] *** Quits: fredlinhares (~fredlinha@186.206.254.59) (Read error: Connection reset by peer)
[23:34:17] *** Quits: Tomte (~Tomte@user/Tomte) (Read error: Connection reset by peer)
[23:38:24] *** Joins: fredlinhares (~fredlinha@186.206.254.59)
[23:38:25] *** Quits: Thanzex (~Thanzex@37.103.212.236) (Read error: Connection reset by peer)
[23:38:48] *** Joins: Thanzex (~Thanzex@37.103.212.236)
[23:40:37] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:9d9f:f6f8:55dd:d1e2)
[23:41:40] *** Joins: roadie (~user@2a02:8108:ec0:1427:d5d8:ef61:83ae:3b67)
[23:46:54] *** Quits: roadie (~user@2a02:8108:ec0:1427:d5d8:ef61:83ae:3b67) (Ping timeout: 268 seconds)
[23:54:20] *** Joins: roadie (~user@2a02:8108:ec0:1427:d5d8:ef61:83ae:3b67)
[23:58:57] *** Quits: roadie (~user@2a02:8108:ec0:1427:d5d8:ef61:83ae:3b67) (Ping timeout: 240 seconds)
