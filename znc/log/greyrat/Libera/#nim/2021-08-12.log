[00:12:49] <nrds> <06Prestige99> Elegantbeef thanks for the heads up about XAlloc, I'll look into it later 
[00:13:16] <FromDiscord> <System64 ~ Flandre Scarlet> Okay, my game crashes with SDL audio, my game crashes with PortAudio, I think there is an UB in the graphics library
[00:20:00] <FromDiscord> <System64 ~ Flandre Scarlet> Does Nim have undefined behaviors?
[00:22:28] <FromDiscord> <Elegantbeef> In some places but mostly strides away
[00:23:11] <FromDiscord> <System64 ~ Flandre Scarlet> is it possible to enable UBs?
[00:23:26] <FromDiscord> <Elegantbeef> "enable UB"
[00:23:43] <FromDiscord> <Elegantbeef> What does that even mean
[00:24:16] <FromDiscord> <System64 ~ Flandre Scarlet> well I meant allowing Undefined Behaviors
[00:24:35] <FromDiscord> <Elegantbeef> Still doesnt make much sense, why would you want UB
[00:27:09] <FromDiscord> <System64 ~ Flandre Scarlet> Cause I m pretty sure Tilengine (yeah again) has UBs or smth  cause I tried with SDL audio, crash, portaudio, crash↵So pretty sure its this lib
[00:38:44] <FromDiscord> <konsumlamm> arr you sure that you understand what UB is?
[00:40:10] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[00:40:38] <FromDiscord> <System64 ~ Flandre Scarlet> yeah a behavior not defined in the program
[00:41:21] <FromDiscord> <konsumlamm> in particular, it's behaviour that the compiler may addume never occurs
[00:41:59] <FromDiscord> <konsumlamm> (edit) "addume" => "assume"
[00:42:22] <FromDiscord> <konsumlamm> so it's not something you should ever want to "enable"
[00:42:26] <FromDiscord> <System64 ~ Flandre Scarlet> so its compiler s fault?
[00:44:39] <FromDiscord> <Elegantbeef> I think you're looking for someone to blame and not point at yourself
[00:44:49] <FromDiscord> <konsumlamm> In reply to @System64 "so its compiler s": what is?
[00:45:06] <FromDiscord> <Paupi woodberg> Hey y'all!
[00:45:42] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @konsumlamm "what is?": No its not that↵I tried with both portaudio and SDL audio, crash
[00:47:42] <FromDiscord> <System64 ~ Flandre Scarlet> So I am thinking ah maybe its cause of the Tilengine lib
[00:47:58] <FromDiscord> <konsumlamm> "enabling UB" (whatever that is) won't help with that, it'd only make things worse
[00:48:42] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[00:49:51] <FromDiscord> <konsumlamm> the compiler assumes that invoking UB never happens, if things using UB happen to work, it's only by chance, you have no guarantees that it also works for other compilers, for other versions, for other platforms or at other times
[00:50:39] <FromDiscord> <konsumlamm> (edit) "the compiler assumes that invoking UB never happens, if things using UB happen to work, it's only by chance, you have no guarantees that it also works for other compilers, for other ... versions,when" 03added "compiler" | "compilerversions, for other platforms or ... atanother" 03added "when running it" | "other" => "another"
[00:50:43] <FromDiscord> <System64 ~ Flandre Scarlet> it works in C but not Nim
[00:51:05] <FromDiscord> <konsumlamm> if it's because of UB, refer to the above
[00:51:06] <FromDiscord> <Elegantbeef> Then your nim bindings are wrong
[00:51:50] <FromDiscord> <System64 ~ Flandre Scarlet> Ah its cause of my bindings?
[00:52:02] <FromDiscord> <Elegantbeef> Well if it works in C it's probably
[00:52:47] <FromDiscord> <System64 ~ Flandre Scarlet> The weird thing is it only crashes when I have both Audio Callback and Raster Callback
[00:55:26] <FromDiscord> <System64 ~ Flandre Scarlet> but yeah I can try with regular C
[01:02:00] <FromDiscord> <System64 ~ Flandre Scarlet> if it works with C, it should work with Nim
[01:02:10] <FromDiscord> <System64 ~ Flandre Scarlet> or every lang
[01:19:53] <FromDiscord> <dain> something of an open ended question: in dynamic interpreted languages I'm used to just fucking around in the repl or notebooks, trying out different throwaway iterations of code to see what works. once im happy with it I'll put it into a proper module. it seems difficult to do this sort of haphazard experimentation in a statically typed language. is there  a comparable way of doing this in nim? ( people said the other day that the secret rep
[01:20:17] <FromDiscord> <dain> (edit) "something of an open ended question: in dynamic interpreted languages I'm used to just fucking around in the repl or notebooks, trying out different throwaway iterations of code to see what works. once im happy with it I'll put it into a proper module. it seems difficult to do this sort of haphazard experimentation in a statically typed ... language." 03added "compiled"
[01:20:26] <FromDiscord> <Elegantbeef> inim exists
[01:21:06] <FromDiscord> <Elegantbeef> I dont know though i've never really done the haphazard stuff, i've just made a file and tested in there
[01:21:35] <FromDiscord> <haxscramper> Wandbox/playground is a thing as well
[01:22:04] <FromDiscord> <haxscramper> Or `entr | nim c --cc:tcc`
[01:22:51] <FromDiscord> <dain> In reply to @haxscramper "Or `entr | nim": ohh I hadn't thought of that
[01:24:42] <FromDiscord> <dain> that's like what I do for pdfs
[01:26:04] <FromDiscord> <haxscramper> Yes. I personally do this even for interpreted languages, because it is hard to do a quick clean tests in repl due to accumulated state
[01:27:04] <FromDiscord> <dain> I often do a half way thing in python where I run a module with `python -i`
[01:27:18] <FromDiscord> <dain> so it runs the module then drops into interactive session
[01:27:30] <FromDiscord> <dain> so I can play with the functions
[01:30:56] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Quit: Connection closed)
[01:31:22] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[01:36:49] <Pyautogui> How do you add a social networking thing to the list on the website?
[01:37:12] <Pyautogui> Is there a repo I can pull request?
[01:37:18] <FromDiscord> <Elegantbeef> Make a PR here
[01:37:18] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/website
[01:37:20] <nrds> <04prestigebot99> 4GitHub: 7"Code for the official Nim programming language website"
[01:37:30] <Pyautogui> Thanks
[01:46:25] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[01:52:51] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @Elegantbeef "Then your nim bindings": The thing is it seems to work in Danger mode
[01:56:21] <FromDiscord> <Yardanico> In reply to @System64 "The thing is it": because "danger" means "disable all possible runtime checks" which is not what you want for debugging
[01:56:32] <FromDiscord> <Yardanico> if something works in danger but not in release, it usually means there's something wrong with your code
[01:56:46] <FromDiscord> <Elegantbeef> hello yard
[01:56:49] <FromDiscord> <Yardanico> hallo
[01:56:54] <FromDiscord> <Yardanico> using matrix?
[01:56:59] <FromDiscord> <Elegantbeef> Yes
[01:57:33] <FromDiscord> <Elegantbeef> I'd reason you have something wrong with your bindings causing this issue, considering it works with C
[01:58:24] <FromDiscord> <System64 ~ Flandre Scarlet> But C doesn't have runtime checks too, it does?
[01:58:31] <FromDiscord> <dain> In reply to @Yardanico "if something works in": no it just means your code is _exciting_
[01:58:43] <FromDiscord> <Yardanico> In reply to @System64 "But C doesn't have": that's the thing with C - it doesn't
[01:58:51] <FromDiscord> <Yardanico> but that doesn't mean that you would _want_ code like that yourself
[01:59:18] <FromDiscord> <Elegantbeef> But it doesnt matter if it does or not, if you enable danger it works, something is wrong
[02:01:23] <Pyautogui> bundle install is giving an error. how am I supposed to install jekyll?
[02:02:09] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3vHi
[02:02:27] <FromDiscord> <Yardanico> and how are you passing the callback itself?
[02:03:16] <FromDiscord> <Elegantbeef> Depending on your bundle version you'll have to update it but just dont pusuh it
[02:03:16] <FromDiscord> <Elegantbeef> Depending on your bundle version you'll have to update it but just dont push it
[02:03:18] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3vHj
[02:04:14] <FromDiscord> <System64 ~ Flandre Scarlet> and even with a named proc it crashes
[02:05:06] <FromDiscord> <Yardanico> maybe tLN_SetLayerPosition actually returns an error which you don't check?
[02:06:33] <FromDiscord> <System64 ~ Flandre Scarlet> Ah maybe, let's check that
[02:07:36] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[02:10:27] <FromDiscord> <System64 ~ Flandre Scarlet> it returns true or false
[02:32:40] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Quit: Connection closed)
[02:34:24] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[02:38:26] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Client Quit)
[02:39:02] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[02:53:35] <Pyautogui> Does anyone have suggestions for getting around "https://github.com/nim-lang/Nim/issues/17139"?
[02:53:50] <Pyautogui> I am on an Intel Mac with Big Sur.
[02:53:58] <Pyautogui> Nim 1.5.1
[02:55:06] <FromDiscord> <undersquire> wait 1.5.1 is out?
[02:55:27] <FromDiscord> <undersquire> In reply to @Pyautogui "Does anyone have suggestions": this link goes nowhere
[02:55:28] <Pyautogui> No, the devel.
[02:55:34] <FromDiscord> <undersquire> ah ok
[02:56:01] <Pyautogui> For me it goes to this issue https://github.com/nim-lang/Nim/issues/17139.
[02:56:08] <Pyautogui>  nim compiler flag --asm fails on arm64 macs #17139 
[02:56:15] <Pyautogui> Same with intel.
[02:56:22] <FromDiscord> <undersquire> ok there we go it went to it
[02:56:23] <Pyautogui> At least for me
[02:56:39] <FromDiscord> <undersquire> You are on an intel mac or a M1 mac?
[02:56:43] <Pyautogui> Intel
[02:57:07] <Pyautogui> 2015 MacBook Air,  Clang 12.0.0 
[02:57:26] <FromDiscord> <undersquire> is clang the issue?
[02:57:29] <FromDiscord> <undersquire> or nim
[02:57:46] <FromDiscord> <undersquire> it seems to be a clang issue, try updating your clang to the latest if you can
[02:57:51] <Pyautogui> It is giving an error "
[02:57:51] <Pyautogui> : error: unsupported argument '-acdl=/Users/ramirosenstock/.cache/nim/a_d/stdlib_system.nim.c.asm' to option 'Wa,'
[02:57:52] <Pyautogui> Error: execution of an external compiler program 'clang -Wa,-acdl=/Users/ramirosenstock/.cache/nim/a_d/stdlib_digitsutils.nim.c.asm -g -fverbose-asm -masm=intel -c  -w -ferror-limit=3   -I'/Users/ramirosenstock/.choosenim/toolchains/nim-#devel/lib' -I/Users/ramirosenstock/r -o /Users/ramirosenstock/.cache/nim/a_d/stdlib_digitsutils.nim.c.o
[02:57:52] <Pyautogui> /Users/ramirosenstock/.cache/nim/a_d/stdlib_digitsutils.nim.c' failed with exit code: 1"
[02:58:36] <FromDiscord> <undersquire> Let me try that flag and see if I get any errors
[02:59:19] <FromDiscord> <undersquire> yeah I am getting the same issue, Im not sure if there is any fix for it atm
[03:00:02] <Pyautogui> Got it. I'll try to find a workaround. Maybe compile manually.
[03:00:16] <Pyautogui> The output C, I mean
[03:00:46] <FromDiscord> <undersquire> yeah that seems to be the only solution atm
[03:03:53] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[03:05:01] *** Joins: flynn (~mcbloch@user/flynn)
[03:07:23] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Quit: Connection closed)
[03:13:34] <FromDiscord> <ynfle (ynfle)> Is there some way to write a concept for tuple where all the fields are of type `SomeNumber` but of any combination and length?
[03:15:23] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[03:16:31] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Client Quit)
[03:17:14] <FromDiscord> <exelotl> @undersquire Nim releases always use even numbers, so 1.5 is a development version, 1.6 will be the next release.
[03:26:00] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[03:26:33] <FromDiscord> <undersquire> Oh ok
[03:26:58] <FromDiscord> <undersquire> I also saw a post on 2.0, when do u think 2.0 will release? (or is it going to go to 1.6 and 1.8 first)
[03:27:05] <FromDiscord> <undersquire> (edit) "to" => "through"
[03:27:39] <Pyautogui> I think 1.6 is the next one.
[03:27:45] <Pyautogui> I do not know about 1.8
[03:29:39] <FromDiscord> <undersquire> this post i found io2.print("Hello, world!")
[03:29:49] <FromDiscord> <undersquire> (edit) "io2.print("Hello, world!")" => "https://forum.nim-lang.org/t/7983"
[03:31:28] <FromDiscord> <ynfle (ynfle)> I don't think 2.0 needs 1.6, 1.8, 1.10, etc. I think it's just gonna come when a new major release is ready
[03:32:19] <FromDiscord> <undersquire> ye
[03:35:50] <FromDiscord> <konsumlamm> the next release will be 1.6, but after that, nobody knows
[03:42:29] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 268 seconds)
[03:42:30] *** Quits: max22- (~maxime@2a01cb0883359800f0438e9693278ee9.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[04:06:37] <FromDiscord> <Ayy Lmao> How do you do FFI with a cpp function within a namespace without using the header?
[04:33:41] <FromDiscord> <Ayy Lmao> I seem to be having an issue with FFI with c++ in general actually. Is there no way to link against a cpp file without having a .h file?
[04:35:58] <FromDiscord> <Ayy Lmao> sent a code paste, see https://play.nim-lang.org/#ix=3vHN
[04:49:56] <FromDiscord> <undersquire> your changing the {.compile: "somelib/somelib.cpp".} right?
[04:50:08] <FromDiscord> <undersquire> as well as the file itself name from somelib.c to somelib.cpp
[04:51:02] <FromDiscord> <Ayy Lmao> @undersquire yes
[04:53:46] <FromDiscord> <Ayy Lmao> If I leave it as `importc` the compiler gives me linker errors, and if i change it to `proc plus(vec: Vector2): cint {.importcpp: "plus(@)", cdecl.}` it doesn't generate a declaration, I'm assuming because it thinks the function is a method.
[05:10:13] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:12:02] <FromDiscord> <Ayy Lmao> I'm guessing this has to do with name mangling in the compiler.
[05:34:56] <FromDiscord> <Ayy Lmao> Is there a way to tell `importcpp` to generate a forward declaration for a proc? Or a way to get `importc` to obey cpp name mangling?
[05:59:08] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[06:00:57] <FromDiscord> <treeform> have you tried `nim cpp` instead of `nim c`?
[06:01:15] <FromDiscord> <treeform> Then nim would generate C++ code that should work with your other C++ code.
[06:06:43] <FromDiscord> <Ayy Lmao> In reply to @treeform "have you tried `nim": I have, it doesn't seem to help.
[06:06:49] <FromDiscord> <Jakraes> Is there a way to completely delete a variable from memory manually?
[06:06:50] <FromDiscord> <treeform> ok
[06:10:09] <FromDiscord> <Elegantbeef> What do you mean by delete from memory?↵(@Jakraes)
[06:11:00] <FromDiscord> <Jakraes> Like, delete a huge var from the ram
[06:11:24] <FromDiscord> <Jakraes> Pretty much manual garbage collection
[06:12:05] <FromDiscord> <Elegantbeef> Well you can just set it to nil if it's a reference type, otherwise it'll be freed when it leaves the stack
[06:14:27] <FromDiscord> <Jakraes> Nice, I was curious about manual garbage collection in nim, so that's always nice to learn, thank you!
[06:14:42] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 245 seconds)
[06:15:11] <FromDiscord> <Elegantbeef> Well if it's a pointer you need to manually free using `dealloc`
[06:42:25] <FromDiscord> <Rika> unless it is not a pointer you allocated
[07:27:58] <FromDiscord> <lamersc.com 🐧> Curious if anyone knows why zig has more traction than nim, even though it hasn’t reached its 1.0 yet, unless it’s other factors also playing in I’m not aware of
[07:28:11] <FromDiscord> <lamersc.com 🐧> Just been curious while looking into a few languages
[07:40:39] <FromDiscord> <Nim 👺> Idk how to code I’m just here cuz my name’s Nim :sunglas:
[07:40:59] <FromDiscord> <Elegantbeef> Well the act of not coding is the first step to learning to code
[07:41:51] <FromDiscord> <Nim 👺> Words of wisdom
[07:45:37] <FromDiscord> <undersquire> In reply to @Rika "unless it is not": If there is no GC present you must regardless, but I see no reason to not at least use --gc:arc
[07:45:57] <FromDiscord> <undersquire> I just like the fact that the stdlib has memory leaks if you dont use a GC 😂
[07:46:27] <FromDiscord> <Elegantbeef> Atleast it tells you
[07:47:49] <FromDiscord> <codic> if you are using the stdlib memory is still being allocated its just that a function is doing it for you
[07:48:49] <FromDiscord> <Elegantbeef> Would be nice if strings had a dealloc proc
[08:04:18] <FromDiscord> <Rika> In reply to @undersquire "If there is no": Yes but not via the deallocation procs provided by Nim
[08:17:05] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:17:10] <FromDiscord> <lamersc.com 🐧> In reply to @Nim 👺 "Idk how to code": Perfect start on your programming journey 😉
[08:17:19] <FromDiscord> <Nim 👺> Awesome
[08:17:39] <FromDiscord> <Nim 👺> Might learn just for shits and giggles
[08:18:07] <FromDiscord> <lamersc.com 🐧> I think you’d enjoy it, the language is quite friendly to use
[08:18:15] <FromDiscord> <Nim 👺> Awesome
[08:18:48] <FromDiscord> <Nim 👺> Ig it would be useful to learn some type of code
[08:32:57] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[08:34:04] *** Joins: flynn (~mcbloch@user/flynn)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:01:59] <FromDiscord> <InventorMatt> Learning to code is useful even if you don't want to be a programmer. It can really augment a lot of things
[09:03:25] <FromDiscord> <Elegantbeef> Very good for automating tasks
[09:11:34] <FromDiscord> <codic> Das ist ja mal ein lebhafter Channel ^^
[09:55:43] <FromDiscord> <undersquire> what is the purpose of the export keyword in nim?
[09:56:10] <FromDiscord> <undersquire> can it be used to create like a prelude for a librarY?
[09:56:12] <FromDiscord> <undersquire> (edit) "librarY?" => "library?"
[09:59:25] <FromDiscord> <Elegantbeef> export is to export specific things such as an imported type or a module
[09:59:55] <FromDiscord> <undersquire> so u can do like
[10:00:33] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3vIB
[10:01:23] <FromDiscord> <undersquire> sent a code paste, see https://play.nim-lang.org/#ix=3vIC
[10:02:05] <FromDiscord> <Elegantbeef> yes
[10:02:11] <FromDiscord> <undersquire> ok thats pretty nice
[10:02:17] <FromDiscord> <Elegantbeef> alternatively `export entity, scene`
[10:02:27] <FromDiscord> <undersquire> ah ok i meant to do that 😉
[10:02:56] <FromDiscord> <undersquire> sent a code paste, see https://play.nim-lang.org/#ix=3vID
[10:03:14] <FromDiscord> <undersquire> sent a code paste, see https://play.nim-lang.org/#ix=3vIE
[10:03:18] <FromDiscord> <Elegantbeef> Indeed
[10:03:31] <FromDiscord> <undersquire> and is the static keyword just for compile time scripts?
[10:03:39] <FromDiscord> <undersquire> or can it be used for variables?
[10:03:59] <FromDiscord> <undersquire> i see its used in macros but im not sure what it really does there
[10:04:01] <FromDiscord> <Elegantbeef> It can be used for compile time logic that is stored to consts or as a generic type
[10:04:11] <FromDiscord> <undersquire> a hok
[10:04:46] <FromDiscord> <Elegantbeef> Like `proc someThing(v: static bool)` is a generic that is instantiated based off the value passed
[10:04:54] <FromDiscord> <Clonkk> The equivalent of C `static` variable in Nim is the global pragma↵(@undersquire)
[10:05:06] <FromDiscord> <Elegantbeef> So in this case it can generate max 2 procedures
[10:05:07] <FromDiscord> <undersquire> In reply to @Clonkk "The equivalent of C": yeah ik about that
[10:05:43] <FromDiscord> <undersquire> In reply to @Elegantbeef "Like `proc someThing(v: static": wait so how does this differ from just a bool type parameter
[10:06:05] <FromDiscord> <Elegantbeef> It generates a procedure for each value given at compile time so you can do specific logic `when v`
[10:06:08] <FromDiscord> <undersquire> does it affect overloading? or the actual procedure
[10:06:21] <FromDiscord> <undersquire> In reply to @Elegantbeef "It generates a procedure": ah ok
[10:07:57] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3vIG
[10:08:09] <FromDiscord> <undersquire> Oh i see
[10:08:40] <FromDiscord> <undersquire> so using static basically means the parameter must be a literal? (or some value that can be determined at compiel time)
[10:09:00] <FromDiscord> <Elegantbeef> Yea it's a compile time value
[10:09:07] <FromDiscord> <undersquire> oh nice thats pretty useful
[10:09:07] <FromDiscord> <Elegantbeef> that's what `static` means in nim
[10:09:10] <FromDiscord> <undersquire> yeah
[10:41:00] <FromDiscord> <Cark> question : how come i can call params.len without parenthesis, but i have to put parenthesis for initTable[A,B]() ?
[10:41:11] <FromDiscord> <Cark> maybe is it bad form to call len without these ?
[10:41:29] <FromDiscord> <Elegantbeef> Nah it's actually pretty idiomatic, it's due to not having the first parameter
[10:41:50] <FromDiscord> <undersquire> you cannot call a proc by itself without () unless you have at least a parameter
[10:42:04] <FromDiscord> <Cark> ah ok i see !
[10:42:04] <FromDiscord> <Elegantbeef> Procedures without parameters need `()` otherwise you're retrieving the procedure pointer
[10:42:22] <FromDiscord> <undersquire> sent a code paste, see https://play.nim-lang.org/#ix=3vIM
[10:42:24] <FromDiscord> <Elegantbeef> to expand on the above `let a = print1` is valid
[10:42:29] <FromDiscord> <Cark> in params.len , params is the parameter
[10:42:38] <FromDiscord> <undersquire> ye
[10:42:47] <FromDiscord> <Cark> bad choice for an example =)
[10:42:49] <FromDiscord> <Cark> ok thanks !
[10:42:55] <FromDiscord> <Elegantbeef> yes, though you can also drop the `()` for command syntax `echo 1` for instance
[10:43:01] <FromDiscord> <undersquire> u can also do len params, len(params)
[10:43:13] <FromDiscord> <undersquire> i really love the way nim does that 😂
[10:43:33] <FromDiscord> <Elegantbeef> Command syntax has the rule that using it inside another statement means you can only have 1 parameter passed that way
[10:44:01] <FromDiscord> <Elegantbeef> so like `doThing 1, 2.doThing 20, 40` is `doThing(1, doThing(2, 20), 40)`
[10:44:32] <FromDiscord> <Cark> i gave it a try, but i think i'll won't go further than the dot sugar in my own code
[10:44:50] <FromDiscord> <Cark> it becomes somewhat harder to follow otherwise
[10:44:56] <FromDiscord> <Paupi woodberg> sent a code paste, see https://play.nim-lang.org/#ix=3vIN
[10:45:04] *** Joins: Vladar (~Vladar@46.162.2.53)
[10:45:24] <FromDiscord> <Elegantbeef> Depends on what the procedures are and how you're using them, i often remove `()` when doing changed procedures
[10:45:28] <FromDiscord> <undersquire> In reply to @Paupi woodberg "I don't think these": ?
[10:46:26] <FromDiscord> <Elegantbeef> No paupi the above code is right
[10:46:29] <FromDiscord> <Elegantbeef> Well right for the example
[10:46:51] <FromDiscord> <Cark> another question : does anyone use emacs at all with nim ? i got lsp working somewhat but it often breaks, with nim specifically, got it working very well with clang
[10:47:39] <FromDiscord> <Elegantbeef> Some people use emacs with it, but i do not so cannot give any guidance \:D
[10:47:59] <FromDiscord> <Cark> you already helped, so we'll let it slide =)
[10:47:59] <FromDiscord> <undersquire> In reply to @Elegantbeef "Some people use emacs": waht editor do you use?
[10:48:12] <FromDiscord> <Elegantbeef> I use vscodium
[10:48:20] <FromDiscord> <undersquire> oh nice same
[10:48:28] <FromDiscord> <Elegantbeef> I'm a heathen i know, though onivim2 was looking good 😛
[10:48:45] <FromDiscord> <undersquire> which nim extension do you use, cause there are like 4 of them
[10:48:52] <FromDiscord> <Elegantbeef> nimsaem's
[10:48:54] <FromDiscord> <undersquire> im using the one written in nim
[10:49:00] <FromDiscord> <Elegantbeef> yea that's it
[10:49:01] <FromDiscord> <undersquire> yeah
[10:49:06] <FromDiscord> <undersquire> i think its the only actively developed one
[10:49:15] <FromDiscord> <undersquire> the original one hasnt updated since 2020
[10:49:37] <FromDiscord> <Paupi woodberg> In reply to @undersquire "?": Am sorry man am new to Nim I was kinda writing in another language!
[10:49:49] <FromDiscord> <undersquire> lol its fine
[10:50:08] <FromDiscord> <Paupi woodberg> In reply to @undersquire "lol its fine": Thanks!
[10:50:14] <FromDiscord> <undersquire> 👍
[10:50:54] <FromDiscord> <Paupi woodberg> Where did y'all learn Nim cause for a new language y'all seem to know it pretty much!
[10:51:13] <FromDiscord> <Elegantbeef> Manual, here, using it, it's not that new 😀
[10:51:14] <FromDiscord> <undersquire> I just starting using it a little over a week ago
[10:51:22] <FromDiscord> <undersquire> I just learned it from the docs
[10:51:41] <FromDiscord> <undersquire> In reply to @Elegantbeef "Manual, here, using it,": how long have you been using nim?
[10:52:49] <FromDiscord> <Elegantbeef> I first toyed with it on it's 1.0(2019) release since i was wanting to try something lower than rust, but then in early 2020 i started learning/using it semi seriously
[10:54:00] <FromDiscord> <Rika> Hey that means I’ve been using it for longer than beef
[10:54:22] <FromDiscord> <Elegantbeef> Congrats?!
[10:55:02] <FromDiscord> <Elegantbeef> should be lower than C#, like rust. But whatever bridge sucks
[10:55:18] <FromDiscord> <Paupi woodberg> In reply to @undersquire "how long have you": I needed a scripting Language for some bug testing so I needed a language that not many crackers would no about there I found Nim!
[10:55:47] <FromDiscord> <Elegantbeef> Nim isnt a scripting language
[10:56:04] <FromDiscord> <undersquire> lol
[10:56:05] <FromDiscord> <undersquire> well
[10:56:09] <FromDiscord> <undersquire> nimscript is
[10:56:12] <FromDiscord> <undersquire> 😉
[10:56:18] <FromDiscord> <Elegantbeef> lol
[10:56:59] <FromDiscord> <Paupi woodberg> O!↵Anyway I guess am doing Nim now😹
[10:57:08] <FromDiscord> <Paupi woodberg> O Thanks
[10:57:45] <FromDiscord> <undersquire> nim is my favorite C alternative, and I might move to it fully permenantly
[10:57:56] <FromDiscord> <undersquire> I tried zig and rust and neither really appealed to me
[10:58:13] <FromDiscord> <Elegantbeef> Someone somewhere a person is saying "Nim isnt a C alternative cause of X"
[10:58:41] <FromDiscord> <Cark> aren't we headed for a more rust like situation with orc ?
[10:59:01] <FromDiscord> <Cark> or you know unique_ptr headache
[10:59:06] <FromDiscord> <Elegantbeef> Well without the always in your face borrow checker
[10:59:36] <FromDiscord> <Elegantbeef> Though nim does have a borrow checker in experimental
[10:59:48] <FromDiscord> <Cark> i would argue that the borrow checker actually helps if you go that direction, which i don't personally like
[11:00:22] <FromDiscord> <Elegantbeef> Well we get a memory management that's based on move semantics without the headaches thanks to the compiler copying when it makes sense
[11:01:02] <FromDiscord> <undersquire> In reply to @Elegantbeef "Someone somewhere a person": lol
[11:01:20] <FromDiscord> <Paupi woodberg> In reply to @undersquire "nim is my favorite": I kinda find it difficult to learn using docs so I kinda only use solo learn and Google product
[11:01:34] <FromDiscord> <Paupi woodberg> And sadly Nim isn't available!
[11:01:53] <FromDiscord> <Paupi woodberg> I guess I'll start off learning c
[11:02:04] <FromDiscord> <Cark> it's a good place to start
[11:02:56] <FromDiscord> <Elegantbeef> Nim is on excercism.io
[11:02:57] <FromDiscord> <Cark> simple and just annoying enough to understand why you want better
[11:03:27] <FromDiscord> <Elegantbeef> Could also learn pascal and have an easier transition to Nim if it's your end goal, but knowing C helps anyway
[11:03:37] <FromDiscord> <Elegantbeef> Especially if you want to use libraries that already exist
[11:05:08] <FromDiscord> <Paupi woodberg> In reply to @Elegantbeef "*Could also learn pascal": Pascal isn't really on solo learn ↵So I'll look into it a bit
[11:06:18] <FromDiscord> <Elegantbeef> It's an older language with shared stuff with Nim so it'd make it easier to get into Nim, but C is probably more sensible due to a high chance of actively needing it eventually
[11:06:46] <FromDiscord> <Paupi woodberg>  https://media.discordapp.net/attachments/371759389889003532/875266538335240222/Screenshot_20210812-073629.png
[11:06:46] <FromDiscord> <Paupi woodberg> Doing some research
[11:06:49] <FromDiscord> <Elegantbeef> Be it integrating with a C library or getting Nim to build in an odd environment the need to understand C appears occasionally
[11:08:02] <FromDiscord> <Rika> In reply to @Elegantbeef "Someone somewhere a person": Well technically everything is a C alternative if you squeeze in enough reasons
[11:08:53] <FromDiscord> <Elegantbeef> If you cannot reason it yet grab a shoe horn and push more in
[11:11:06] <FromDiscord> <Rika> I’ve been thinking about this for a few days but I wonder what programming languages would have been like if Pascal was the bigger language versus C
[11:12:07] <FromDiscord> <Elegantbeef> Wirth likes with people on C/C++ style languages in the minority
[11:12:34] <FromDiscord> <Elegantbeef> More languages with sensible bitsets, and fancier type systems
[11:12:46] <FromDiscord> <Rika> I’m sorry but that first message doesn’t read like English to me
[11:13:06] <FromDiscord> <Elegantbeef> There'd be more withlikes, with people on C/C++ in the minority\
[11:13:11] <FromDiscord> <leorize> i'd not recommend learning pascal aa transition to nim
[11:13:14] <FromDiscord> <leorize> as\
[11:51:20] <FromDiscord> <Clonkk> In reply to @Paupi woodberg "Where did y'all learn": Best way to learn is to practice. Either do a small project with the language (and yeah the beginning will be a bit rough, you'll have to read the manual / tutorial constantly) or yo ucan go to exercism.io where coding practice are available
[11:53:55] <FromDiscord> <Clonkk> sent a long message, see http://ix.io/3vIX
[12:11:05] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[12:23:46] <FromDiscord> <Paupi woodberg> Thanks man!
[12:23:52] <FromDiscord> <Paupi woodberg> Ial use them!
[12:33:13] <PMunch> @Cark, NimLSP does unfortunately break a bit on every platform.. Please report specific bugs if you find them. I'm working on creating a better tool for testing and debugging LSP stuff so it will be easier to develop it.
[12:33:59] <FromDiscord> <Cark> i'd love to help, though it's pretty hard pinpointing the actual bug
[12:34:33] <FromDiscord> <Cark> also, maybe lsp-mode is the cause, or interoperate poorly with nimlsp specifically
[12:34:39] <FromDiscord> <Cark> (edit) "interoperate" => "interoperates"
[12:35:23] <FromDiscord> <Cark> couple years ago i resorted to use VSCode because of this, and it worked great there
[12:36:27] <PMunch> You could build a debug build of NimLSP and run that while triggering the bug. It's a bit slower, but it logs a lot more and shows better errors in the log.
[12:37:00] <FromDiscord> <Cark> i'll investigate, and thanks for your work btw =)
[12:40:46] <PMunch> Simultaneously happy that a lot of people use NimLSP, but also a bit sad about how much of a mess it is :P
[12:42:37] <FromDiscord> <Cark> we would all be out of work if everything came out perfect on the first try =)
[13:02:17] <PMunch> Fair point
[13:07:48] <FromDiscord> <gogolxdong (liuxiaodong)> https://chialisp.com/
[13:08:03] *** Joins: max22- (~maxime@2a01cb08833598007acbfcab53bf1a09.ipv6.abo.wanadoo.fr)
[13:57:51] <FromDiscord> <bolino> Hi! Is there any way to convert a sequence of strings to `varargs`, as I need to pass them as arguments of a function that accept `varargs`?
[13:58:10] <FromDiscord> <Elegantbeef> varargs accepts seqs
[13:58:14] <FromDiscord> <fwsgonzo> what's the best way to take in a buffer, length from a C function?
[13:58:20] <FromDiscord> <fwsgonzo> that is, I'm going to call a Nim function from C
[13:58:48] <FromDiscord> <fwsgonzo> sent a code paste, see https://play.nim-lang.org/#ix=3vJj
[13:58:55] <FromDiscord> <Elegantbeef> `ptr[UnCheckedArray[T]], len`?
[13:59:24] <FromDiscord> <fwsgonzo> well, in C you can specify the length of the array with another argument, like size_t len, char array[len]
[14:00:28] <FromDiscord> <fwsgonzo> so, I probably want a trampoline function that takes these arguments from C and converts them to something that is checked, then call the "real" Nim function afterwards
[14:08:34] <FromDiscord> <fwsgonzo> so, given a cstring, int what is the best Nim type I should convert that to?
[14:08:46] <FromDiscord> <fwsgonzo> some kind of bounds-checked slice type?
[14:15:53] <FromDiscord> <Rika> A string? Are you avoiding a copy
[14:16:18] <FromDiscord> <Rika> If you are then I think a custom data type would be needed I think
[14:27:06] <FromDiscord> <fwsgonzo> I want to implement a function that matches a prototype, is that possible?
[14:27:44] <FromDiscord> <fwsgonzo> sent a code paste, see https://play.nim-lang.org/#ix=3vJo
[14:30:31] <FromDiscord> <Rika> Just make a function that does? If it doesn’t the code will not compile
[14:30:44] <FromDiscord> <fwsgonzo> it will compile just fine because this function is called from C
[14:31:08] <FromDiscord> <fwsgonzo> (edit) "it will compile just fine because this function is called ... from" 03added "indirectly"
[14:31:11] <FromDiscord> <Rika> No? It’s a type, if Nim sees it’s the wrong type it won’t compile
[14:31:28] <FromDiscord> <fwsgonzo> sent a code paste, see https://play.nim-lang.org/#ix=3vJr
[14:31:44] <FromDiscord> <fwsgonzo> the function is callback, which is provided from C by externing it
[14:32:08] <FromDiscord> <fwsgonzo> Nim ends up calling it, but doesn't really know about it
[14:32:49] <FromDiscord> <Rika> Oh so the callback is from C
[14:33:03] <FromDiscord> <fwsgonzo> this is for edge compute (i've done it in many other languages), so I am effectively making a remote function call into Nim code
[14:33:10] <FromDiscord> <Rika> Or what? I don’t exactly understand
[14:33:26] <FromDiscord> <fwsgonzo> sent a code paste, see https://play.nim-lang.org/#ix=3vJs
[14:34:01] <FromDiscord> <fwsgonzo> that's the entry point, it calls the trampoline with "post_backend" as the Nim handling function - Ḯm sure it can be done a better way, but I'm not much of a Nim expert 🙂
[14:34:35] <FromDiscord> <fwsgonzo> the trampoline converts things (inefficiently) into strings, and then calls the Nim post handler, which is what the user sees, and that handler must return a pair of strings, so it's a question of how to enforce that
[14:34:40] <FromDiscord> <bolino> In reply to @Elegantbeef "varargs accepts seqs": Oh great
[14:34:56] <FromDiscord> <bolino> (edit) "great" => "great, didn't know. Thanks for quick and efficient answer, as usual!"
[14:35:17] <FromDiscord> <fwsgonzo> sent a code paste, see https://play.nim-lang.org/#ix=3vJt
[14:35:53] <FromDiscord> <fwsgonzo> maybe the other way around is better where the user must set a handler function by calling a function that takes the callback type as argument
[14:35:56] <FromDiscord> <Rika> Nah I don’t think you can check the type of C stuff from Nim
[14:45:11] *** Joins: xet7 (~xet7@user/xet7)
[15:18:19] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[15:19:02] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[15:22:18] *** Joins: Vladar (~Vladar@46.162.2.53)
[15:35:24] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[15:42:01] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 248 seconds)
[16:05:12] *** Joins: ethycol (~ethycol@d-216-189-168-37.fl.cpe.atlanticbb.net)
[16:08:18] *** Quits: ethycol (~ethycol@d-216-189-168-37.fl.cpe.atlanticbb.net) (Remote host closed the connection)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:39:42] *** Quits: max22- (~maxime@2a01cb08833598007acbfcab53bf1a09.ipv6.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[17:20:38] *** Joins: arkurious (~arkurious@user/arkurious)
[17:41:34] *** Joins: max22- (~maxime@2a01cb0883359800dac1c33184607296.ipv6.abo.wanadoo.fr)
[18:57:21] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[19:05:36] <FromDiscord> <Ayy Lmao> Is there a way to get `importc` to use just `extern` and not `extern "C"` for the function prototype?
[19:12:15] <FromDiscord> <levovix> importcpp?
[19:13:02] <FromDiscord> <Ayy Lmao> In reply to @levovix "importcpp?": I've tried, it doesn't seem to generate a function prototype.
[19:13:38] <FromDiscord> <levovix> codegenDecl?
[19:15:23] <FromDiscord> <Ayy Lmao> That would probably work but would be a huge hassle to pull off for all the functions I have. Is there no other way?
[20:18:21] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:42:32] <FromDiscord> <haxscramper> Does anyone know if it is possible to access `attribute((visibility("default")))` symbol from a shared library? This is not strictly a nim question, but I want to pull in gcc's profiling info out at runtime to maybe integrate profiling and unit tests somehow. Data is stored in the https://code.woboq.org/userspace/glibc/gmon/gmon.c.html#bb_head hidden global variable in GCC, so I can't just `dlsym` it
[20:42:54] <FromDiscord> <tbrekalo> How can I change nible dstBuildDir for tests?
[20:43:05] <FromDiscord> <haxscramper> Or maybe nim has a built-in support for dealing with that kind of things
[21:00:00] <FromDiscord> <System64 ~ Flandre Scarlet> Do you think my binding is good?↵https://github.com/megamarc/Tilengine/blob/master/include/Tilengine.h↵This is the include file https://media.discordapp.net/attachments/371759389889003532/875415832514166804/tilengine.nim
[21:00:29] <FromDiscord> <System64 ~ Flandre Scarlet> (edit) "Do you think my binding is good?↵https://github.com/megamarc/Tilengine/blob/master/include/Tilengine.h↵This is the include file ... https://media.discordapp.net/attachments/371759389889003532/875415832514166804/tilengine.nim" 03added "⬆️"
[21:02:26] <FromDiscord> <haxscramper> define "good"
[21:03:05] <FromDiscord> <haxscramper> If it doesn't error at compile/ library load time then it is probably doing everything correctly
[21:03:27] <FromDiscord> <haxscramper> If you are still looking for something where error occurs I sugest you to compare generated C code to handwritten
[21:03:33] <FromDiscord> <System64 ~ Flandre Scarlet> so if it do everything correctly, it shouldn't crash but it crash
[21:03:59] <FromDiscord> <haxscramper> have you run debugger, checked for error codes, checked for generated C code?
[21:04:17] <FromDiscord> <haxscramper> Are you sure the nim version is 1:1 mapping
[21:05:05] <FromDiscord> <System64 ~ Flandre Scarlet> it's normally 1:1 mapping↵And also, the crash only occurs when I have an audio callback + Tilengine's Raster Callback
[21:05:42] <FromDiscord> <System64 ~ Flandre Scarlet> I also tried the callbacks with only an echo statement inside, still crash
[21:09:18] <FromDiscord> <System64 ~ Flandre Scarlet> Alright the app completely freeze with the Frame Callback (not the raster one)
[21:10:20] <FromDiscord> <System64 ~ Flandre Scarlet> Just have the sound
[21:19:21] <FromDiscord> <enthus1ast> can i let the compiler know that it needs to recompile a certain module (withouth -f)?↵When i change a compiled template file, which is staticRead then it does not catch the changes, and does not recompile.
[21:20:13] <FromDiscord> <enthus1ast> only -f compiles it then, but all the other stuff as well
[21:22:28] <FromDiscord> <enthus1ast> something like a "customMustRecompileProc"
[21:28:06] <FromDiscord> <haxscramper> I don't think there is any per-module recompilation enforcing. At least looking at the conditions for recompilation - https://github.com/nim-lang/Nim/blob/devel/compiler/cgen.nim#L1940 and https://github.com/nim-lang/Nim/blob/devel/compiler/passes.nim#L110
[21:28:53] <FromDiscord> <haxscramper> And nim recompiles everything if even one module has changed
[21:29:07] <FromDiscord> <haxscramper> Nim recompiles all nim modules if one has changed
[21:29:18] <FromDiscord> <haxscramper> C files are not recompiled on each run
[21:29:21] <FromDiscord> <haxscramper> At least not all of them
[21:29:43] <FromDiscord> <enthus1ast> mh i see
[21:30:44] <FromDiscord> <enthus1ast> then i guess i should look into useing the compiler as a library
[21:31:15] *** Joins: xet7 (~xet7@user/xet7)
[21:41:24] <FromDiscord> <haxscramper> You are working on https://github.com/enthus1ast/nimja
[21:41:26] <FromDiscord> <haxscramper> ?
[21:41:27] <nrds> <04prestigebot99> 4GitHub: 7"typed and compiled template engine inspired by jinja2, twig and onionhammer/nim-templates for Nim."
[21:41:43] <FromDiscord> <haxscramper> I would literally die if it worked with nimscript
[21:41:50] <FromDiscord> <haxscramper> Or rather I would use it for haxdoc
[21:42:11] <FromDiscord> <haxscramper> So yes, if you need any help with compiler API I would be glad go help
[21:44:04] <FromDiscord> <haxscramper> I myself considered writing jinja template, though I was leaning more towards adding custom embedded scripting language for that one↵(@haxscramper)
[21:45:13] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3vLq
[21:45:28] <FromDiscord> <haxscramper> so compiler API is a right way to go IMO
[21:45:36] *** Joins: rockcavera (~rc@192.12.115.201)
[21:45:37] *** Quits: rockcavera (~rc@192.12.115.201) (Changing host)
[21:45:37] *** Joins: rockcavera (~rc@user/rockcavera)
[21:51:47] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 245 seconds)
[21:52:44] <FromDiscord> <System64 ~ Flandre Scarlet> In reply to @haxscramper "Are you sure the": It freezes with the other callback, (freeze, not crash)↵I know an infinite loop can be the issue, but is it possible there are other things that can bring a freeze?
[22:00:17] <FromDiscord> <haxscramper> `sleep(high(int))`
[22:02:17] <FromDiscord> <System64 ~ Flandre Scarlet> I don't have that
[22:06:57] <FromDiscord> <haxscramper> sent a long message, see http://ix.io/3vLw
[22:09:16] <FromDiscord> <System64 ~ Flandre Scarlet> the thing is this code interacts with a library
[22:10:47] <FromDiscord> <haxscramper> Does C version that interacts with a library work fine?
[22:11:55] <FromDiscord> <System64 ~ Flandre Scarlet> But Tilengine IS the library
[22:13:23] <FromDiscord> <haxscramper> If I recall correctly, you have a C code that you first tried implementing things in, and it works fine. Then you tried to write the same in nim, and this version freezes randomly, and you are not sure what is the problem. Is my inderstanding correct?
[22:15:49] <FromDiscord> <System64 ~ Flandre Scarlet> yeah, freeze with the Framecallback (music still play) and CRASH with Raster Callback (the program close, music included)
[22:16:16] <FromDiscord> <haxscramper> so you do have working C code that you wrote yourself/copied from somewhere?
[22:17:43] <FromDiscord> <System64 ~ Flandre Scarlet> Coded myself
[22:18:53] <FromDiscord> <haxscramper> Which means you have a working C code, and non-working nim code, that use the same library. And my suggestion - look at the generated C code to figure out what is different. You can compile with `--nimcache:myDir`, and `--stracktrace:off --lineinfos:off --embedsrc:off` to reduce noise in the generated code
[22:18:59] <FromDiscord> <System64 ~ Flandre Scarlet> This is my C code https://media.discordapp.net/attachments/371759389889003532/875435712365875220/main.c
[22:20:37] <FromDiscord> <haxscramper> Well, ~70 lines, it should not be particularly hard to minimize nim vesion and compare implementations
[22:21:29] <FromDiscord> <haxscramper> You can start safely and declare callbacks as regular, `exportc, cdecl` procedures, which would make them pretty much identical to how you pass thigns from C
[22:30:28] *** Joins: xet7 (~xet7@user/xet7)
[22:41:23] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3vLG
[22:44:51] <FromDiscord> <haxscramper> well, now compare generated C code
[22:45:08] <FromDiscord> <System64 ~ Flandre Scarlet> where can I find it?
[22:47:12] <FromDiscord> <haxscramper> In reply to @haxscramper "Which means you have": You can specify `--nimcache:myDir` and it would output code there
[22:50:40] <FromDiscord> <System64 ~ Flandre Scarlet> sent a code paste, see https://play.nim-lang.org/#ix=3vLN
[22:51:40] <FromDiscord> <haxscramper> What do you mean "doesn't output". No directory is created?
[22:51:59] <FromDiscord> <ynfle (ynfle)> Is it possible to iterate over the fields of 3 tuples at once or to access the third tuple with the name of the desired field?
[22:52:21] <FromDiscord> <System64 ~ Flandre Scarlet> I created the dir, but nothing inside the dir
[22:52:35] <FromDiscord> <ynfle (ynfle)> @system64, You have to put `--nimcache:"./cache"` before the file name or nim thinks it's supposed to by passed in as arguments at runtime
[22:53:06] <FromDiscord> <haxscramper> Not using built-in iterators such as `fieldPairs`.
[22:53:30] <FromDiscord> <ynfle (ynfle)> They are all the same type
[22:53:33] <FromDiscord> <ynfle (ynfle)> Any suggestions?
[22:54:34] <FromDiscord> <haxscramper> What exactly do you mean by field of 3 tuples ... like `field: (int, int, int)`, or what
[22:55:14] <FromDiscord> <ynfle (ynfle)> No
[22:55:20] <FromDiscord> <ynfle (ynfle)> (a\: 1, b\: 2)
[22:55:56] <FromDiscord> <System64 ~ Flandre Scarlet> This is the generated code https://media.discordapp.net/attachments/371759389889003532/875445010978463784/output.c
[22:55:56] <FromDiscord> <haxscramper> so you have three tuples with fields `(a: 1, b: 2)` and you want to iterate in paralel?
[22:56:54] <FromDiscord> <ynfle (ynfle)> Yup
[22:57:12] <FromDiscord> <ynfle (ynfle)> I did it when nested loops and `when` statements because it's unrolled and compile time
[22:58:07] <FromDiscord> <haxscramper> In reply to @System64 "This is the generated": great, now actually do it with ` --stacktrace:off --linetrace:off --embedsrc:off ` so it wold be clean
[22:58:58] <FromDiscord> <haxscramper> yes, that is the only way basically. You can write macro for that, but `fieldPairs` does not support three elements in paralel
[22:59:13] <FromDiscord> <haxscramper> And internally `fieldPairs` does the same unrolling
[22:59:24] <FromDiscord> <System64 ~ Flandre Scarlet> > --stacktrace:off --linetrace:off --embedsrc:off↵What does it do?
[22:59:31] <FromDiscord> <haxscramper> `nim --fullhelp`
[22:59:32] <FromDiscord> <haxscramper> read docs
[22:59:35] <FromDiscord> <ynfle (ynfle)> Don't really need a macro, it's not really worth the effort yet at at least
[23:01:06] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3vLP
[23:02:14] <FromDiscord> <haxscramper> If that's you want, I don't think there is anything in stdlib that would work for that case, or at list I don't know of anything.
[23:02:19] <FromDiscord> <ynfle (ynfle)> ?
[23:02:22] <FromDiscord> <ynfle (ynfle)> I'm confused
[23:02:47] <FromDiscord> <haxscramper> That's what I meant
[23:03:06] <FromDiscord> <ynfle (ynfle)> This is what I did↵\`\`\`nim
[23:03:18] <FromDiscord> <ynfle (ynfle)> sent a code paste, see https://play.nim-lang.org/#ix=3vLQ
[23:03:49] <FromDiscord> <System64 ~ Flandre Scarlet> Ah alright I understand now
[23:04:12] <FromDiscord> <System64 ~ Flandre Scarlet> Now I'll add more features to my program until it crashes
[23:05:44] <FromDiscord> <haxscramper> ﻿ynfle (ynfle)\:  yes, but what do you want then? I assumed you want to compact two outer loops into a single one that would iterate everything in parallel
[23:06:12] <FromDiscord> <haxscramper> `for name, a, b, val in fieldPairs(x, y, result): ...`
[23:07:13] <FromDiscord> <ynfle (ynfle)> It is in parallel, the inner loop is really just one at run time
[23:10:59] <FromDiscord> <enthus1ast> Yes↵(@haxscramper)
[23:15:29] <FromDiscord> <mlokis> sent a code paste, see https://play.nim-lang.org/#ix=3vLT
[23:17:36] <FromDiscord> <haxscramper (haxscramper)> This happens for gitter -\> matrix -\> discord
[23:18:01] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3vLU
[23:18:08] <FromDiscord> <haxscramper> hm
[23:18:08] <FromDiscord> <haxscramper (haxscramper)> sent a code paste, see https://play.nim-lang.org/#ix=3vLV
[23:18:27] <FromDiscord> <haxscramper (haxscramper)> sent a code paste, see https://play.nim-lang.org/#ix=3vLW
[23:18:39] <FromDiscord> <haxscramper> yes, if gitter code has highlighting it is completely destroyed
[23:19:36] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[23:37:23] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[23:44:46] *** Joins: audiophile_ (~audiophil@user/audiophile)
[23:44:54] <audiophile_> oh nice nim exists
[23:44:59] <audiophile_> on libera i mean
[23:46:21] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[23:47:28] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[23:47:33] *** Joins: rockcavera (~rc@192.12.115.201)
[23:47:33] *** Quits: rockcavera (~rc@192.12.115.201) (Changing host)
[23:47:33] *** Joins: rockcavera (~rc@user/rockcavera)
[23:47:51] *** Joins: supakeen (~user@python/site-packages/supakeen)
[23:52:02] *** Joins: tiorock (~rc@192.12.115.201)
[23:52:02] *** Quits: tiorock (~rc@192.12.115.201) (Changing host)
[23:52:02] *** Joins: tiorock (~rc@user/rockcavera)
[23:52:02] *** rockcavera is now known as Guest5963
[23:52:02] *** tiorock is now known as rockcavera
[23:55:30] *** Quits: Guest5963 (~rc@user/rockcavera) (Ping timeout: 272 seconds)
