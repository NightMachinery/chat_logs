[00:00:09] <FromDiscord> <demotomohiro> https://nim-lang.org/docs/manual.html#methods
[00:05:51] <FromDiscord> <konsumlamm> i'd say concepts are a better fit for that (methods are rarely used), albeit still being experimental: https://nim-lang.github.io/Nim/manual_experimental.html#concepts
[00:06:36] <FromDiscord> <konsumlamm> for new-styled concepts (which are even more experimental), see https://github.com/nim-lang/RFCs/issues/168
[00:08:07] <FromDiscord> <demotomohiro> But concept doesn't work like virtual function.
[00:09:05] <FromDiscord> <konsumlamm> they're the right tool for defining abstract interfaces though
[00:09:16] <FromDiscord> <konsumlamm> i'm not sure they actually need virtual functions
[00:11:45] <FromDiscord> <demotomohiro> Concept determines which procedure is called at compile time but `method` determines at runtime.
[00:17:32] *** Joins: jjido (~Denis@94.4.149.217)
[00:31:45] <FromDiscord> <ynfle> They doesn't want that. They want some way to refer to types with out haven't to specify too much.
[00:37:44] *** Joins: fowl9 (~fowlmouth@user/fowl)
[00:39:38] *** Quits: fowl (~fowlmouth@user/fowl) (Ping timeout: 272 seconds)
[00:39:39] *** fowl9 is now known as fowl
[00:43:45] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[00:46:28] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[00:54:30] *** Joins: vicfred (~vicfred@user/vicfred)
[01:02:00] *** Joins: Gustavo6046__ (~Gustavo60@user/gustavo6046)
[01:04:27] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[01:08:07] *** Gustavo6046__ is now known as Gustavo6046
[01:09:04] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[01:12:15] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[01:14:14] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:16:41] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[01:19:21] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:23:32] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:26:26] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[01:30:44] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Client Quit)
[01:52:12] *** Gustavo6046_ is now known as Gustavo6046
[01:59:25] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:00:01] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Client Quit)
[02:01:42] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[02:18:16] *** Joins: tinytoast (~squeek@user/tinystoat)
[02:19:16] *** Joins: blackbeard420_ (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a)
[02:19:28] *** Joins: ltriant_ (~ltriant@118.102.122.246)
[02:19:36] *** Joins: flynn8 (~mcbloch@user/flynn)
[02:20:13] *** Joins: syl_ (~z@user/syl)
[02:20:13] *** Quits: lumidify (~lumidify@user/lumidify) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: systemdsucks (~systemdsu@user/systemdsucks) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: blackbeard420 (~blackbear@45.33.85.133) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: syl (~z@user/syl) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: tinystoat (~squeek@user/tinystoat) (Ping timeout: 256 seconds)
[02:20:47] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 256 seconds)
[02:20:51] *** flynn8 is now known as flynn
[02:21:53] *** Joins: lumidify (~lumidify@user/lumidify)
[02:22:19] *** Joins: systemdsucks (~systemdsu@user/systemdsucks)
[02:22:28] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (Quit: -)
[02:22:39] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[02:35:42] *** Quits: blackbeard420_ (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a) (Quit: ZNC 1.8.2 - https://znc.in)
[02:35:53] *** Joins: blackbeard420 (blackbeard@2600:3c03::f03c:91ff:fe92:3f2a)
[02:37:00] <FromDiscord> <Nick.> Is there something in nim to open a binary file, seek the address  and get x bytes. When I open it in a hex editor I know that I need to jump to 0x1006F921
[02:37:19] <FromDiscord> <Nick.> Or can point me in the right direction?
[02:37:55] <FromDiscord> <Elegantbeef> you can use the stream api or the file api in Nim
[02:38:09] <FromDiscord> <Elegantbeef> Both have the abillity to seek to a specific position
[02:38:51] <FromDiscord> <Elegantbeef> for streams you'd use `setPosition` for the fileApi you'd use `setFilePos`
[02:39:07] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[02:39:38] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[02:40:42] <FromDiscord> <Nick.> that I've figured but the address 0x1006F921 its in int and I get no results back.
[02:40:56] <FromDiscord> <Elegantbeef> Is it perhaps in big endian and you're going too far?
[02:41:33] <FromDiscord> <Nick.> Hmm, how would I do that? Not really familiar with that.
[02:42:36] <FromDiscord> <Elegantbeef> Try `0x21F90610` instead
[02:45:41] <FromDiscord> <Nick.> doesnt work
[02:47:29] <FromDiscord> <Nick.> echo(fmt"{a:x}") trying to get the hex value but just returning nothing
[02:53:55] <FromDiscord> <Elegantbeef> Could i see the code and the file?
[02:55:47] <FromDiscord> <Nick.> sent a code paste, see https://play.nim-lang.org/#ix=3R7J
[02:57:11] <FromDiscord> <Elegantbeef> `0x21F90610` is not 4091
[02:57:14] <FromDiscord> <Nick.> So im trying to jump to that address and get get 4091 bytes
[02:57:41] <FromDiscord> <Elegantbeef> sure and what you're doing now is jumpoing to position `1` and reading 7 bytes
[02:58:04] <FromDiscord> <Nick.> Yes, I was testing
[02:59:07] <FromDiscord> <Elegantbeef> so you should be doing `strm.setPosition` then `strm.readData` or `strm.readStr`
[02:59:35] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:01:58] <FromDiscord> <Nick.> With strm.readData how would I work with the buffer pointer?
[03:02:00] <FromDiscord> <Rika> I’m confused
[03:02:18] <FromDiscord> <Rika> You two seem to not understand each other, it reads like
[03:02:42] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3R7L
[03:03:01] <FromDiscord> <Elegantbeef> My understanding rika is they want to offset a file position and read a buffer of data to an array
[03:03:23] <FromDiscord> <Rika> Okay
[03:04:34] <FromDiscord> <Nick.> I'm trying to read a malicious file read the 4019 bytes at a position and grab the data to xor to get the config. In python I would import pefile.
[03:04:39] <FromDiscord> <Nick.> that's basically it.
[03:04:50] <FromDiscord> <Elegantbeef> So seems what i said should be fine
[03:04:53] <FromDiscord> <Nick.> (edit) "file" => "file."
[03:05:39] <FromDiscord> <Rika> Just change the array size lol
[03:05:51] <FromDiscord> <Rika> Make it a byte array too
[03:06:58] <FromDiscord> <Elegantbeef> ^
[03:07:47] <FromDiscord> <Nick.> Error: expression 'readData(strm, unsafeAddr(buff[0]), len(buff))' is of type 'int' and has to be used (or discarded);
[03:07:58] <FromDiscord> <Rika> Discard it too
[03:08:34] <FromDiscord> <Elegantbeef> Nim forces handling of returned values unless the procedure is marked discardable
[03:08:39] <FromDiscord> <Elegantbeef> It's an nice feature imo
[03:09:28] <FromDiscord> <Nick.> How would I make it a byte array?
[03:09:34] <FromDiscord> <Rika> Change char for byte
[03:09:39] <FromDiscord> <Elegantbeef> `array[4019, byte]`
[03:09:46] <FromDiscord> <Elegantbeef> Cmon it's right there 😛
[03:09:54] <NimEventer> New question by nimlang: PTR DWORD in nim lang, see https://stackoverflow.com/questions/71315840/ptr-dword-in-nim-lang
[03:10:58] <FromDiscord> <Elegantbeef> Damn matrix bridge making me look siilly
[03:13:30] <FromDiscord> <Rika> Haha dum
[03:13:31] <FromDiscord> <Elegantbeef> Damn yardanico beat me
[03:13:39] <FromDiscord> <Rika> What
[03:13:48] <FromDiscord> <Elegantbeef> Yardanico responded to the SO post
[03:13:58] <FromDiscord> <Elegantbeef> Somehow the person lied about their runtime eitherway
[03:14:36] <FromDiscord> <Elegantbeef> passing `cast[pointer](zeroInitedInt)` to a procedure didnt result in a nil error is just a plain lie, i refuse to believe otherwise
[03:30:18] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:34:48] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[03:51:18] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[03:51:34] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[03:51:58] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 250 seconds)
[03:52:30] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[03:52:41] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:00:20] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:02:12] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[04:05:07] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:43:52] <FromDiscord> <huantian> When using jsony to parse json into an object, is there a way to do something special with a certain field of that one specific type
[04:45:17] <FromDiscord> <Elegantbeef> write a json hook for that object then do something special for that field
[04:52:21] <FromDiscord> <huantian> would I then have to implement the rest of the parsing myself?
[04:52:38] <FromDiscord> <huantian> or is there a way to borrow it
[04:53:07] <FromDiscord> <Elegantbeef> You can just call the hook manually, or atleast should be able to
[04:54:07] <FromDiscord> <huantian> then it turns into a recursive function since the overload matches the more specific hook that I'm definig
[04:54:16] <FromDiscord> <huantian> at least that's what I think it does
[04:55:26] <FromDiscord> <Elegantbeef> What's your code?
[04:56:32] <FromDiscord> <huantian> sent a code paste, see https://play.nim-lang.org/#ix=3R7Z
[04:56:55] <FromDiscord> <Elegantbeef> Well yea who said to call this object's proc?!
[04:57:56] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3R80
[04:59:53] <FromDiscord> <huantian> ah that makes a lot more sense
[05:00:06] <FromDiscord> <huantian> thanks 🙏
[05:00:24] <FromDiscord> <Elegantbeef> Personally i'd say to make a distinct type for the field
[05:00:32] <FromDiscord> <Elegantbeef> This way you dont need your own hook for the object
[05:02:12] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3R81
[05:27:11] <FromDiscord> <kalbhairab> Can we include units of measure in nim
[05:27:25] <FromDiscord> <Rika> sure why not
[05:27:32] <FromDiscord> <Rika> what do you mean exactly though
[05:27:44] <FromDiscord> <kalbhairab> See fsharp
[05:27:50] <FromDiscord> <kalbhairab> Units of measure
[05:27:51] <FromDiscord> <Elegantbeef> https://github.com/SciNim/Measuremancer#other-distinct-data-types
[05:28:26] <FromDiscord> <Rika> does it have nonunicode ops too?
[05:28:37] <FromDiscord> <Elegantbeef> Sorry it's unchained https://github.com/SciNim/Unchained
[05:29:31] <FromDiscord> <ynfle> Great and mind boggling implementation
[05:29:36] <FromDiscord> <Rika> mind boggling?
[05:29:37] <FromDiscord> <ynfle> (edit) "Great ... and" 03added "library"
[05:29:58] <FromDiscord> <ynfle> Have you taken a look at the implementation?
[05:30:01] <FromDiscord> <kalbhairab> Very great than fsharp
[05:34:00] <FromDiscord> <kalbhairab> Strformat should be core library
[05:34:33] <FromDiscord> <Rika> ? it is part of the stdlib
[05:34:43] <FromDiscord> <Elegantbeef> I think they mean it should be auto imported
[05:34:53] <FromDiscord> <Elegantbeef> Which i say, you can always add that to your project config, or your global config
[05:35:02] <FromDiscord> <Elegantbeef> The latter is going to be more error prone
[05:35:11] <FromDiscord> <kalbhairab> Yes
[05:35:19] <FromDiscord> <kalbhairab> I am saying that
[05:35:26] <FromDiscord> <kalbhairab> Auto imported
[05:35:42] <FromDiscord> <Elegantbeef> The core nim devs presently think the system library is to big, so it's going to get smaller in time
[05:35:54] <FromDiscord> <Elegantbeef> Modules exist and should be used
[05:36:04] <FromDiscord> <kalbhairab> "{person.name} is "
[05:36:07] <FromDiscord> <Elegantbeef> Just cause it's easier to auto import doesnt mean it should be
[05:36:14] <FromDiscord> <kalbhairab> Ohh
[05:36:17] <FromDiscord> <kalbhairab> Why
[05:36:50] <FromDiscord> <Elegantbeef> Cause it pollutes the namespace, and it fails to follow proper module conventions
[05:37:01] <FromDiscord> <Elegantbeef> You the modules you need, all modules available
[05:37:03] <FromDiscord> <Rika> it doesnt really pollute the namespace here
[05:37:08] <FromDiscord> <Elegantbeef> not all modules available\
[05:37:19] <FromDiscord> <Elegantbeef> I'm talking about generally
[05:38:59] <FromDiscord> <kalbhairab> Ohh
[05:40:25] <FromDiscord> <Elegantbeef> Atleast it's my view that a nim with no imports should pretty much just have the builtins and basic operations for them
[05:40:45] <FromDiscord> <kalbhairab> Ohh
[05:41:41] <FromDiscord> <Elegantbeef> I do say it does pollute the namespace rika, say you dont like nim's `fmt` for whatever reason so implement your own, you now get told "ambigious call for `fmt`" when you try to invoke your own
[05:42:19] <FromDiscord> <kalbhairab> I am not expert in programming
[05:42:30] <FromDiscord> <kalbhairab> I am civil engineer
[05:42:49] <FromDiscord> <kalbhairab> I think there should be design for syntax
[05:43:01] <FromDiscord> <Elegantbeef> I'm not an expert either
[05:43:07] <FromDiscord> <Elegantbeef> I'm a self taught numpty
[05:43:24] <FromDiscord> <kalbhairab> Ohh
[05:43:26] <FromDiscord> <kalbhairab> Same
[05:43:29] <FromDiscord> <kalbhairab> 😃
[05:45:22] <FromDiscord> <Rika> In reply to @Elegantbeef "I do say it": i said really, it does but it is a rare case that you would want to do such
[05:45:38] <FromDiscord> <kalbhairab> I elegantbeef and rika can we talk in off topic?
[05:45:49] <FromDiscord> <Elegantbeef> There's a chance we could
[05:45:59] <FromDiscord> <Rika> why?
[05:46:03] <FromDiscord> <Elegantbeef> Presently this is still nim related
[05:46:10] <FromDiscord> <kalbhairab> Ohh
[05:46:19] <FromDiscord> <Elegantbeef> You like those three letter
[05:46:22] <FromDiscord> <Elegantbeef> letters\
[05:46:37] <FromDiscord> <kalbhairab> Once i got kicked from flutter so 😃
[05:46:56] <FromDiscord> <kalbhairab> I have posted one pic to 3 chat rooms
[05:47:08] <FromDiscord> <kalbhairab> They kicked without warning
[05:48:03] <FromDiscord> <kalbhairab> In reply to @Elegantbeef "You like those three": ???
[05:48:36] <FromDiscord> <Elegantbeef> Ohh
[05:48:47] <FromDiscord> <kalbhairab> Haha
[05:49:07] <FromDiscord> <kalbhairab> Is there any graphics library for nim?
[05:49:12] <FromDiscord> <Rika> a lot
[05:49:28] <FromDiscord> <kalbhairab> Thats bcz of fb chat
[06:11:53] *** Quits: ltriant_ (~ltriant@118.102.122.246) (Ping timeout: 252 seconds)
[06:17:57] <FromDiscord> <demotomohiro> https://github.com/xflywind/awesome-nim#image
[06:22:08] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[06:23:01] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[06:34:44] *** Joins: rockcavera (~rc@192.12.113.198)
[06:34:44] *** Quits: rockcavera (~rc@192.12.113.198) (Changing host)
[06:34:44] *** Joins: rockcavera (~rc@user/rockcavera)
[06:37:00] <FromDiscord> <huantian> sent a code paste, see https://paste.rs/Am5
[06:40:49] <FromDiscord> <huantian> I suppose the distinct method is the best
[06:41:48] <FromDiscord> <Elegantbeef> Well call the jsony method instead of `parseHook`
[06:44:44] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:45:15] <FromDiscord> <Elegantbeef> Ah I guess nevermind
[06:45:58] <FromDiscord> <huantian> I could just copy paste a bunch of stuff :P
[07:24:12] <FromDiscord> <retkid> There’s not enough audio libraries
[07:24:42] <FromDiscord> <retkid> Well there’s none
[07:24:58] <FromDiscord> <Elegantbeef> There are audio libraries
[07:25:20] <FromDiscord> <retkid> Not on the awesome list
[07:25:39] <FromDiscord> <retkid> Omni is less of an audio manipulation library and more of a sound library
[07:25:42] <FromDiscord> <Elegantbeef> https://nimble.directory/search?query=audio
[07:26:43] <FromDiscord> <retkid> Well I couldn’t really find a library which allowed me to get the amplitude of a wav file over time but I didn’t look too hard
[07:29:09] <FromDiscord> <Elegantbeef> https://github.com/jiro4989/wave also seems to exist
[07:31:25] <FromDiscord> <retkid> It’s really cool he gave the docs for the pcm format I couldn’t find it 😭
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:32] <FromDiscord> <retkid> In reply to @Elegantbeef "https://github.com/jiro4989/wave also seems to": cant find anything on the audio itself only getting data from it?
[07:36:45] *** Joins: ltriant (~ltriant@118.102.122.246)
[07:37:54] <FromDiscord> <Elegantbeef> No clue
[07:42:01] <FromDiscord> <congusbongus> isn't amplitude just data / max amplitude
[07:54:54] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Quit: leaving)
[07:58:21] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[08:20:34] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:34:40] <FromDiscord> <retkid> In reply to @congusbongus "isn't amplitude just data": yes
[08:34:48] <FromDiscord> <retkid> but you cant get the data
[08:34:50] <FromDiscord> <retkid> so fuck it?\
[08:34:52] <FromDiscord> <retkid> (edit) "it?\" => "it?"
[08:35:08] <FromDiscord> <retkid> its literally just the 16 bit value / 2^16
[09:03:56] *** Joins: girvo (~default@125.119.218.139.dyn.wbroadband.net.au)
[09:07:24] <FromDiscord> <demotomohiro> How about to convert it to float and multiply some value and convert back to uint16?
[09:21:16] *** Joins: vicfred (~vicfred@user/vicfred)
[09:22:39] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:24:31] <NimEventer> New thread by Pyautogui: Replit featured us in their newsletter this week!, see https://forum.nim-lang.org/t/8968
[09:36:42] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 272 seconds)
[09:37:21] <FromDiscord> <sOkam!> sent a long message, see http://ix.io/3R8F
[09:39:58] <FromDiscord> <Elegantbeef> It's mostly just what do you prefer the most, use whichever tool you like
[10:06:17] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[10:06:32] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[10:07:18] <FromDiscord> <sOkam!> i have no preference, i would need to learn any of them from 0↵is the end result the exact same, though?
[10:11:44] <FromDiscord> <sOkam!> like, if cimterop was inspired by nimline... but they are different projects... why are they different and why would one decide on one over the other?↵that type of question is what I don't know how to answer, so don't know how/what to choose
[10:12:28] <FromDiscord> <demotomohiro> If you use only a few functions/types in large C code, write binding manually that only import what you use.
[10:15:48] <FromDiscord> <Elegantbeef> I think nimterop and futhark require the user have libclang  on their pc or similar
[10:25:37] <FromDiscord> <geekrelief> In reply to @Elegantbeef "I think nimterop and": Nimterop only requires gcc.  Futhark needs libclang
[10:26:17] <FromDiscord> <Elegantbeef> Ah my bad
[10:34:33] <FromDiscord> <geekrelief> In reply to @sOkam! "I'm having a really": If the API is small, just bind it manually as demotomohiro suggests. Quite a few people have used Futhark with success, but the libclang requirement might be annoying on Windows. I forked nimterop and use it for The Machinery. It works well enough for me, but probably has a steeper learning curve than Futhark.
[10:35:57] <FromDiscord> <sOkam!> In reply to @geekrelief "If the API is": it is no small project, and it has no api. the games are hooked straight into the engine. its not like the current theme of lib-ified engines with clean and nice apis
[10:36:43] <FromDiscord> <Elegantbeef> Someone clearly talking about the quake engine
[10:37:18] <FromDiscord> <sOkam!> yep
[10:37:41] <FromDiscord> <Elegantbeef> Well then the best thing to do is wrap what you need as you need it
[10:38:03] <FromDiscord> <Elegantbeef> So use c2nim + hand wrapped stuff
[10:38:28] <FromDiscord> <sOkam!> i see
[10:38:31] <FromDiscord> <Elegantbeef> I think things like nimterop/futhark would be more annoying for something like this, i could be wrong though
[10:38:58] <FromDiscord> <sOkam!> should I use nimline/cinterop as the projects suggest, just to get the code up and compiling?
[10:39:11] <FromDiscord> <sOkam!> or just straight to c2nim+manual?
[10:42:03] <FromDiscord> <Elegantbeef> I dont know what to say there's a lot of code spread out, so wrapping it all automated or manually is going to be a hassle, I guess futhark/nimterop might be able to give you the C api directly in Nim, no clue really
[10:42:13] <FromDiscord> <Elegantbeef> I havent used them ever so no clue how effective they are for large apis like this
[10:42:46] <FromDiscord> <sOkam!> kk
[10:45:13] <FromDiscord> <sOkam!> also, dunno if we were talking about the same thing↵you guys say nimterop, but i was thinking of Cinterop↵dunno how much difference there is between them
[10:45:37] <FromDiscord> <sOkam!> nimterop is more akin to futhark? or are cinterop and nimterop the same type of tool?
[10:45:45] <FromDiscord> <Elegantbeef> I never have heard of cinterop before
[10:45:54] <FromDiscord> <sOkam!> https://github.com/n0bra1n3r/cinterop
[10:46:39] <FromDiscord> <sOkam!> this paragraph was the source of my questions, basically https://media.discordapp.net/attachments/371759389889003532/948478930548064266/unknown.png
[10:47:45] <FromDiscord> <sOkam!> the other one of my doubts was this: https://github.com/sinkingsugar/nimline
[10:48:35] <FromDiscord> <sOkam!> but you guys were sending me to wrappers/bindings, so not sure if these tools could change the answer
[10:49:31] <FromDiscord> <Elegantbeef> Well you're going to need to wrap the API, nimline does it in a sort of dynamic way where it just assumes code is valid, the other method is to emit the Nimcode from the C code like Futhark/Nimterop/C2nim do
[10:50:44] <FromDiscord> <Elegantbeef> The latter is better if you actually plan on using the code, as it's concrete
[10:51:59] <FromDiscord> <sOkam!> is there any specific benefit to c2nim vs futhark/nimterop?
[10:53:59] <FromDiscord> <Elegantbeef> The generated code is what people use, instead of the methods of generating the code, so it's a bit more concrete
[10:54:50] *** Joins: PMunch (~PMunch@user/pmunch)
[10:55:09] <FromDiscord> <sOkam!> not sure i follow, sry me dummie 😔 ↵what do you mean by "concrete"?
[10:56:20] <FromDiscord> <Elegantbeef> With C2Nim your share your nim files that are actual `importc`'d types/procs, with futhark/nimterop you share files that run over the C code and emit the bindings and your share the wrapping templates/procedures
[11:00:09] <FromDiscord> <sOkam!> do you have an example of a project made with c2nim, and one with either of the others?↵maybe ill understand what you mean by seeing the code compared
[11:00:37] <FromDiscord> <sOkam!> i get the feeling that i understand it the idea in such a superficial level, that i wont be able to actually use any of them 😔
[11:00:58] <FromDiscord> <sOkam!> (edit) 04removed "any of"
[11:01:27] <FromDiscord> <Elegantbeef> Compare https://gitlab.com/define-private-public/stb_image-Nim to the futhark example
[11:01:38] <FromDiscord> <sOkam!> 👌
[11:01:48] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3R8P
[11:01:55] <FromDiscord> <Elegantbeef> God damn i'm tired
[11:02:18] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/OVL
[11:03:26] <FromDiscord> <Elegantbeef> There are benefits with futhark in that it regenerates, so library changes that are breaking will be caught
[11:04:11] <PMunch> That's pretty much why I wrote Futhark. Well that and having something which actually just works without hours/days of hair pulling frustration
[11:04:35] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[11:04:51] <FromDiscord> <Elegantbeef> Surprised pmunch hasnt said "Yea i just wrapped the quake 3 engine in 30 second with futhark"
[11:05:04] <PMunch> But yeah, automatically catching changes in the underlying library so you don't end up chasing obscure bugs in some wrapper
[11:05:31] <PMunch> @Elegantbeef, haha, maybe when I add the next version with better folder support :)
[11:05:32] <FromDiscord> <Elegantbeef> I mean I just learned but Nim can do some amount of API assurances
[11:05:33] <FromDiscord> <sOkam!> sent a code paste, see https://play.nim-lang.org/#ix=3R8S
[11:06:52] <FromDiscord> <sOkam!> In reply to @Elegantbeef "There are benefits with": this engine is quite stagnant, though. not sure how much adaptation/regeneration I'll ever need
[11:06:57] <FromDiscord> <Elegantbeef> There is a `--checkAbi` flag apparently
[11:07:14] <FromDiscord> <Elegantbeef> Yea i mean you can just pester pmunch until you get your bindings
[11:07:23] <FromDiscord> <sOkam!> the community version i'm will be using is supported, but nothing out of the rare bugfix
[11:07:29] <FromDiscord> <Elegantbeef> Either pester him to make them or for help 😛
[11:08:16] <FromDiscord> <sOkam!> In reply to @PMunch "<@145405730571288577>, haha, maybe when": 🙏 🥺 🙏
[11:11:42] <FromDiscord> <sOkam!> In reply to @PMunch "That's pretty much why": do you think futhark might have issues with something when dealing with q3 engine?
[11:12:06] <PMunch> Hard to tell without having ever looked at the sources for q3 engine
[11:12:15] <PMunch> But if it's pretty standard C code then you should be fine
[11:12:23] <FromDiscord> <sOkam!> what does futhark currently have issues with?
[11:12:38] <PMunch> Mostly macros that the user is supposed to use
[11:12:48] <PMunch> It handles macros used by the library just fine
[11:13:08] <FromDiscord> <sOkam!> its ansi C '89, coded in 1999 by tons of carmack-ian weirdness. dunno how standard or non-standard that will be 🤔
[11:13:17] <PMunch> But if they define macros that the user is supposed to use it starts to struggle because those aren't really typed
[11:13:20] <PMunch> Do you have a link?
[11:13:24] <FromDiscord> <sOkam!> ye
[11:13:52] <FromDiscord> <sOkam!> This is the one that we use nowadays for mods↵https://github.com/ec-/Quake3e
[11:15:23] <PMunch> From the two files I've opened it seems like it should be fine
[11:15:32] <FromDiscord> <sOkam!> that project has no gamecode. you can see the gamecode specific things in this other engine inside cgame/game/q3_ui : https://github.com/ioquake/ioq3
[11:16:02] <FromDiscord> <sOkam!> In reply to @PMunch "From the two files": kk. any tuts written for futhark? i literally haven't used it yet because i have no clue where to start
[11:16:32] <PMunch> Not apart from the sample code and the various wrappers I've helped people write in the issues
[11:16:45] <FromDiscord> <sOkam!> 👌
[11:17:11] <PMunch> But it's pretty simple, you just give it a block of things to import from C, and then you sit back and enjoy your wrapper
[11:17:44] <FromDiscord> <sOkam!> yeah, someone recommended me that before
[11:17:58] <PMunch> Might've been me :P
[11:18:11] <FromDiscord> <sOkam!> I don't know how to go about that, though. like, i know its probably dummie not being able to understand that, but i cant grasp how
[11:18:42] <FromDiscord> <sOkam!> i have a list of .h files that i generated, but what do i do with that?
[11:18:58] <PMunch> That you generated?
[11:19:05] <FromDiscord> <sOkam!> yeah with find or ls
[11:19:09] <FromDiscord> <sOkam!> or similar, dont remember
[11:19:14] <PMunch> Uhm, don't do that
[11:19:20] <FromDiscord> <sOkam!> see?
[11:19:21] <FromDiscord> <sOkam!> 😄
[11:20:30] <PMunch> Download the Quake library from GitHub, then have an `importc` block which tells futhark where to find clang standard libraries and the libraries you just cloned (the two first lines of the stb example) then just list all the .h files you want to import the same way you would do it in C
[11:21:58] <FromDiscord> <sOkam!> this is what that aforementioned list looks like https://media.discordapp.net/attachments/371759389889003532/948487816957009920/unknown.png
[11:24:54] <PMunch> Why have you only copied those things out?
[11:25:03] <PMunch> They must depend on some other files as well?
[11:25:29] <FromDiscord> <sOkam!> because, like i said, i have no clue how to get the .h file list
[11:25:37] <FromDiscord> <sOkam!> other than by bash scripting
[11:26:05] <PMunch> You don't need a list though?
[11:26:58] <FromDiscord> <sOkam!> sent a code paste, see https://play.nim-lang.org/#ix=3R8Z
[11:27:21] <FromDiscord> <Elegantbeef> You treat `importc` like the `#include` in C
[11:27:27] <FromDiscord> <Elegantbeef> So you importC the header files you want
[11:27:38] <PMunch> Exactly
[11:27:54] <FromDiscord> <Elegantbeef> So you might want to importC all the files of a folder together so you can expose them as a Nim module
[11:28:17] <FromDiscord> <sOkam!> im so lost 😔
[11:28:25] *** Joins: Guest2979 (~Guest29@182.150.63.124)
[11:28:30] <PMunch> Do you have a minimal sample in C?
[11:28:32] <FromDiscord> <sOkam!> i don't think im understanding the methodology
[11:29:01] <FromDiscord> <sOkam!> In reply to @PMunch "Do you have a": wdym? of q3 engine?
[11:29:14] <PMunch> Of a game which uses it
[11:29:34] <FromDiscord> <sOkam!> q3 games are ingrained in the engine. not sure how i would do that, and make it compile
[11:29:39] <PMunch> Doesn't have to do anything, like the "hello world" of using it
[11:30:13] <FromDiscord> <sOkam!> the engine is so hairy, that we all start by modding the original game directly. i dont think such a minimal example exists
[11:30:41] <FromDiscord> <sOkam!> only a handful of people actually understand the architecture enough to dissect it in such a way
[11:31:21] <PMunch> Then it's not really a library is it?
[11:31:41] <FromDiscord> <sOkam!> which is my point, its an engine not really an api or library
[11:31:50] <FromDiscord> <Elegantbeef> It's not a library it's C code so it's going to be 'fun' to make Nim work with it
[11:31:53] <FromDiscord> <sOkam!> so don't know how to approach the issue
[11:33:25] <FromDiscord> <sOkam!> its like, if you have firefox already coded, and you want to start using firefox code from nim (or any fully fledged app that's not lib-ified)
[11:34:07] *** Quits: Guest2979 (~Guest29@182.150.63.124) (Ping timeout: 256 seconds)
[11:34:30] *** Quits: girvo (~default@125.119.218.139.dyn.wbroadband.net.au) (Ping timeout: 272 seconds)
[11:34:44] <nrds> <06Prestige99> Anyone here using windows? My friend installed nim from the site and ran the "finish.exe" to add nim to his path but it seems to not have worked
[11:34:51] <nrds> <06Prestige99> Curious if anyone else is having this issue
[11:34:58] <FromDiscord> <Elegantbeef> Well you get to generate C code using Nim then include it in your C file and call it
[11:35:01] <FromDiscord> <Elegantbeef> Did anti virus get involved prestige?
[11:35:05] <FromDiscord> <Elegantbeef> Did they restart?
[11:35:06] <FromDiscord> <sOkam!> from what I know about the engine, the "only wrap those things you need" actually means "wrap and rewrite the whole main loop in a new nim main loop function", and start from there
[11:35:18] <FromDiscord> <Elegantbeef> Windows path is a funky beast
[11:35:29] <nrds> <06Prestige99> Yeah antivirus complained but he told it to continue
[11:35:32] <nrds> <06Prestige99> the install, I mean
[11:35:32] <FromDiscord> <Elegantbeef> Well that'd be one way of doing it
[11:38:02] <FromDiscord> <sOkam!> In reply to @Elegantbeef "Well you get to": that's another approach I thought about, but that wouldn't really be a nim engine eventually.↵it would still be C that uses code auto-generated from nim compiling as C code instead of as binary
[11:38:24] <FromDiscord> <Elegantbeef> It's never going to be a "Nim engine"
[11:38:45] <FromDiscord> <Elegantbeef> It's 23 years of C, if you want a Nim engine, write it in Nim 😛
[11:39:07] <FromDiscord> <sOkam!> i would, but it wouldn't be the same
[11:40:06] <FromDiscord> <sOkam!> for some freaky weird reason i dont understand, not even id2 / id4 feel good enough 😦↵i tried all engines, and nothing is close. definitely not the modern ones with gjk/bvh
[11:40:32] <FromDiscord> <sOkam!> (edit) "feel" => "feels" | "feelsgood enough ... 😦↵i" 03added "compared to id3"
[11:40:48] <FromDiscord> <Elegantbeef> Well make an engine that feels the same, it'll probably be less of a pain than trying to make this work nicelyt
[11:41:46] <FromDiscord> <sOkam!> aware of how many people have said that? 25y, tens of games, hundreds of programmers, none achieved what it was achieved with id3. not even the same guys with their very next engine (id4)
[11:42:01] <FromDiscord> <sOkam!> i know its not an easy task
[11:42:14] <FromDiscord> <sOkam!> just trying to understand how, that's all. even if its hard
[11:50:57] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[11:53:19] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:55:01] <FromDiscord> <sOkam!> sent a code paste, see https://play.nim-lang.org/#ix=3R99
[11:55:34] <FromDiscord> <Elegantbeef> With what pmunch said you just include `one.h` and `two.h`
[11:55:38] <FromDiscord> <sOkam!> (edit) "https://play.nim-lang.org/#ix=3R99" => "https://play.nim-lang.org/#ix=3R9a"
[11:55:45] <FromDiscord> <Elegantbeef> Now if he's a liar that's bad
[11:56:16] <FromDiscord> <sOkam!> Ok, so then I would only need to manage the main loop and the functions that it calls
[11:56:33] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[11:58:35] <FromDiscord> <sOkam!> basically, this function https://github.com/ec-/Quake3e/blob/65db7c877cb37e37315b6bfbf52c1f3066376436/code/win32/win_main.c#L740
[12:00:01] <FromDiscord> <sOkam!> how does futhark do its thing in the background?↵does it manage the C compiler automatically or smth?
[12:08:22] <nrds> <06Prestige99> Elegantbeef do you know how to link dlls on windows by chance?
[12:08:49] <nrds> <06Prestige99> Trying to get my sdl project to compile on windows but have been running into issues, I think it's not finding the files
[12:08:58] <FromDiscord> <Elegantbeef> The same as on linux
[12:12:08] <nrds> <06Prestige99> Okay how do you do that? :P
[12:12:20] <PMunch> Sorry I was in a meeting
[12:12:33] <FromDiscord> <Elegantbeef> Download the dev files then import the file with dynlib
[12:12:48] <FromDiscord> <Elegantbeef> If static linking also having the static library and linking it with command line arguments
[12:13:59] <PMunch> sOkam, so basically what Futhark does is that it loads the header files you specified with libclang, then it asks Clang to list out everything which is defined in those headers. It then converts those definitions to Nim, and tells it to grab it from the C sources. So in Nim you just import the C header files, Futhark converts them to Nim definitions, and when you call them in Nim it will call the C functions for you.
[12:14:21] <FromDiscord> <Elegantbeef> Does it recurse down includes?
[12:15:30] <PMunch> Yes
[12:15:53] <FromDiscord> <demotomohiro> If you use dll with https://docs.microsoft.com/en-us/troubleshoot/windows-client/deployment/dynamic-link-library#types-of-dlls
[12:15:57] <PMunch> Well it recurses down the includes to get the definitions it needs, but it only exports the definitions for the files you've specified
[12:16:38] <PMunch> This is what I was talking about with the folder import thing. I want to add a flag which makes it so that it will add all the definitions in a given folder automatically
[12:17:02] <PMunch> So For this you could say that you wanted `one.h` and everything it imports which lives in `Quake32/code`
[12:17:20] <FromDiscord> <demotomohiro> If you use dll with Load-time dynamic linking, you need to add .lib file to linker. That is bit different from Linux. If you use dll as Run-time dynamic linking, you don't need to link .lib or .dll files at link time.
[12:17:48] <PMunch> The reason I've done it like this is because otherwise it will go all the way to the top of the C definitions and start pulling in the C definition for an integer and things like that
[12:18:25] <PMunch> So with the above sample you pasted sOkam it would look something like this in Nim: https://play.nim-lang.org/#ix=3R9h
[12:18:53] <PMunch> And in myMethod you could call procedures from one.h and two.h and access their types just as if it was written in C
[12:22:29] <nrds> <06Prestige99> Elegantbeef any guides on that?
[12:22:38] <nrds> <06Prestige99> I don't know how any of this linking business works
[12:22:57] <FromDiscord> <abdu> How is  Nim for C's #define preprocessor eg.↵#define foo 99
[12:23:34] <PMunch> @abdu, not sure what you mean
[12:23:37] <FromDiscord> <demotomohiro> `const Foo = 99`
[12:23:51] <PMunch> In Nim you would do it like @demotomohiro said, with a compile-time constant
[12:26:00] <FromDiscord> <demotomohiro> If you want macro like `#define min(x, y) ((x) < (y) ? (x): (y))`, `template min(x, y: untyped): untyped = if x < y: x else: y`.
[12:26:03] <PMunch> You could use `{.emit: ["#define ", somename, " ", something].}` or maybe even `let foo {.codegenDecl: "#define $2 $1".} = 99` to put such defines into Nim code
[12:26:34] <PMunch> Prestige, do you just need to link a DLL into your program?
[12:28:00] <nrds> <06Prestige99> Uh well now we're trying to do static linking
[12:28:07] <nrds> <06Prestige99> have the .lib files
[12:28:28] <FromDiscord> <demotomohiro> On windows, .dll is not a file linked to executable file. Link .lib file with --passL:"foo.lib".
[12:28:49] <nrds> <06Prestige99> do we need dynlibOverride for that?
[12:30:23] <PMunch> Nah I think that is just to stop procedures marked with `{.dynlib.}` from being imported from a dynamic library
[12:30:52] <PMunch> Like if you wanted to use the standard library ssl implementation but static link it
[12:31:06] <nrds> <06Prestige99> hmm okay
[12:31:50] <FromDiscord> <sOkam!> PMunch, you mentioned something about macros earlier. Q3 engine has quite a lot of them↵what happens in futhark with macros? does it handle them properly?
[12:33:13] <PMunch> It depends
[12:33:29] <PMunch> It handles all the macros that just live inside the library just fine
[12:34:05] <PMunch> And it should handle most static values just fine
[12:34:29] <PMunch> But macros which are intended to be called like a procedure is a bit worse
[12:34:58] <FromDiscord> <sOkam!> In reply to @PMunch "But macros which are": there\ are procedures, yep
[12:35:07] <FromDiscord> <sOkam!> (edit) "there\" => "there" | "yep" => "yep. quite a few"
[12:35:09] <PMunch> Which you are supposed to call?
[12:35:56] <FromDiscord> <sOkam!> hmmm, don't have an answer to that yet. maybe the C code does, but you'd call them if you write in the engine in C, yep
[12:36:22] <FromDiscord> <sOkam!> unless they are behind some other functions and can be avoided, which I don't know yet
[12:36:30] <FromDiscord> <sOkam!> are they fine if they are called from C code only?
[12:37:38] <FromDiscord> <abdu> In reply to @demotomohiro "If you want macro": solved! thanks
[12:38:39] <PMunch> sOkam, yeah they're fine as long as they are behind C code
[12:39:10] <PMunch> The problem is that clang can't figure out the signature of such a macro, because it doesn't really have one, so I can't convert it into anything useful in Nim
[12:46:13] <nrds> <06Prestige99> So I'm having an issue getting this lib statically linked, "undefined reference to GPU_TRANSLATE" and any other functions that are used. Here https://github.com/Vladar4/sdl2_nim/blob/master/sdl2_nim/sdl_gpu.nim#L1703
[12:46:32] <nrds> <06Prestige99> It's using the dynlib pragma, don't know what I'm missing here
[12:46:55] <nrds> <06Prestige99> using --passL:path/to/my.lib
[12:48:02] <PMunch> Shouldn't that be `--passL:"-Lpath/to/library -lmy"`?
[12:48:22] <PMunch> --passL only sends things to the linker
[12:48:22] <nrds> <06Prestige99> I have no idea
[12:48:49] <PMunch> On Linux at least -L is used to pass a folder to search for libraries
[12:49:07] <PMunch> And -l to link to an actual library (but I think dynlib should handle that automatically)
[12:49:08] <FromDiscord> <demotomohiro> `GPU_TRANSLATE` is a symbol in your static lib? Or it is in other library?
[12:49:34] <nrds> <06Prestige99> It should be in the static lib afaik
[12:49:44] <PMunch> So you would need `--passL:"-Lpath/to/lib"` in order to pass the folder that Nim will go looking for that library
[12:50:00] <PMunch> But since it uses dynlib you probably need to use dynlibOverride
[12:50:45] <nrds> <06Prestige99> I thought that's what clibdir was for
[12:51:41] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[12:51:43] <nrds> <06Prestige99> I got it to build using absolute paths, but the binary does nothing. Weird
[12:51:51] <PMunch> Oh, never seen that before, but yeah I guess that does the same thing
[12:53:20] <FromDiscord> <demotomohiro> Do you got error like `path/to/my.lib was not found`?
[12:53:53] <nrds> <06Prestige99> Can't get either of those to work for some reason - the error is "undefined reference to GPU_TRANSLATE" etc
[12:56:06] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Read error: Connection reset by peer)
[13:03:14] <nrds> <06Prestige99> after statically linking using absolute paths, I had to put the dll's next to the executable for it to run
[13:03:19] <nrds> <06Prestige99> so the static libs aren't actually static?
[13:03:39] <PMunch> No that just sounds like you dynamically linked them
[13:04:26] <nrds> <06Prestige99> I'm using dynlibOverrideAll so I don't think so..?
[13:04:37] <nrds> <06Prestige99> Unless that doesn't do what I think it does
[13:05:15] <PMunch> Well it's not very static if you need the files to be there is it?
[13:05:33] <nrds> <06Prestige99> Yeah that's my point
[13:06:01] <nrds> <06Prestige99> maybe the .lib file is just a loader for the dll
[13:06:28] <nrds> <06Prestige99> SDL2.lib is only 171kb but the .dll is 2179kb, seems weird
[13:07:24] <FromDiscord> <demotomohiro> File size depends on compiler options.
[13:08:00] <FromDiscord> <demotomohiro> Maybe your .lib was not built correctly?
[13:08:14] <nrds> <06Prestige99> I got it from the sdl website so, hopefully it's correct
[13:08:58] <PMunch> Why do you want to static link it anyways?
[13:09:20] <nrds> <06Prestige99> Easier to ship binaries
[13:10:06] <FromDiscord> <demotomohiro> Did you read SDL2 manual? It should tells which library you need to link. Maybe you need to link other library.
[13:12:18] <FromDiscord> <demotomohiro> Maybe, C compiler that built .lib file and C compiler your Nim uses are different and .lib file is not compatible with your C compiler
[13:12:55] <nrds> <06Prestige99> idk about that
[13:18:54] <nrds> <06Prestige99> Well I've been working on this for too long, will try getting it working again another day
[13:25:32] <NimEventer> New thread by Drkameleon: C/C++-wrapping Windows/VCC-related issues again, see https://forum.nim-lang.org/t/8969
[13:34:41] <FromDiscord> <MaskDuck> hi
[13:37:03] <FromDiscord> <demotomohiro> hi
[13:37:31] <FromDiscord> <Rika> hi
[13:39:23] <FromDiscord> <MaskDuck> nim looks cooler than python ig
[13:39:31] <FromDiscord> <MaskDuck> i right now only code using python
[13:39:36] <FromDiscord> <MaskDuck> and wanting to learn another language
[13:39:42] <FromDiscord> <MaskDuck> (edit) "i right now only code using python ... " 03added "(proficient)"
[13:40:24] <FromDiscord> <MaskDuck> maybe ill learn nim
[13:40:43] <FromDiscord> <MaskDuck> btw i think nim structure looks like a command line™️
[13:41:34] <PMunch> Like a command line?
[13:41:51] <FromDiscord> <Rika> Good to hear that you like it
[13:42:07] <PMunch> Prestige, just take into account that you probably need to GPL license whatever it is you're doing if you want to static link against SDL2
[13:42:29] <nrds> <06Prestige99> Yeah that's fine
[13:42:40] <FromDiscord> <Rika> Is SDL2 GPL and not lesser?
[13:42:57] <FromDiscord> <MaskDuck> yup
[13:43:08] <PMunch> Ah it might be LGPL, I just found some references to it when I searched for static linking things earlier
[13:43:18] <PMunch> And it's not that hard to ship a couple extra dlls
[13:43:38] <FromDiscord> <Rika> It’s zlib license
[13:43:50] <PMunch> How does that work, if you write a program which has staticRead the DLLs during compile-time and if the libraries don't exists it spits them out before loading them?
[13:44:35] <FromDiscord> <Rika> Semi-static hahaha
[13:45:00] <FromDiscord> <Rika> I can imagine AV would hate that though
[13:45:09] <FromDiscord> <demotomohiro> Nim has command invocation syntax and many proc/func/template/macro can be called like command line.
[13:45:13] <FromDiscord> <demotomohiro> https://nim-lang.org/docs/manual.html#procedures-command-invocation-syntax
[13:45:19] <FromDiscord> <MaskDuck> ho
[13:45:21] <FromDiscord> <MaskDuck> how can i
[13:45:24] <FromDiscord> <MaskDuck> install nim
[13:45:29] <FromDiscord> <MaskDuck> using source distributor
[13:45:36] <FromDiscord> <MaskDuck> i can find the build.sh file
[13:46:04] <FromDiscord> <MaskDuck> cant
[13:47:12] <FromDiscord> <demotomohiro> Here is how to build from source: https://github.com/nim-lang/nim#compiling
[13:49:02] <FromDiscord> <demotomohiro> There are build_all.sh for Linux/Mac and build_all.bat for Windows.
[13:51:11] <PMunch> Source distributor?
[13:51:18] <PMunch> I recommend you do it through choosenim
[13:51:36] <PMunch> That way you're sure it's installed correctly, and that you can easily upgrade to future versions
[13:53:06] <FromDiscord> <MaskDuck> aic thanks
[13:53:15] <FromDiscord> <MaskDuck> In reply to @PMunch "I recommend you do": i tried choosenim
[13:53:23] <FromDiscord> <MaskDuck> but it is too slow
[13:54:07] <PMunch> Too slow?
[13:54:14] <FromDiscord> <MaskDuck> do we neeed any dependacies
[13:54:28] <PMunch> It literally just downloads a tarball and extracts it
[13:54:33] <PMunch> How can that be too slow?
[13:54:49] <FromDiscord> <MaskDuck> it is faster now
[13:54:50] <PMunch> As for dependencies you need a C compiler, but not much else
[13:54:55] <FromDiscord> <MaskDuck> ok i installed thanks guys
[13:55:04] <FromDiscord> <MaskDuck> now
[13:55:09] <FromDiscord> <MaskDuck> if i wanna write hello world
[13:55:15] <FromDiscord> <MaskDuck> `echo "Hello World"`?
[13:56:11] <PMunch> Yup
[13:56:13] <FromDiscord> <demotomohiro> yes. Then save it to file hello.nim and `nim c -r hello.nim`
[13:56:41] <FromDiscord> <MaskDuck> ah thanks ya
[13:57:05] <FromDiscord> <MaskDuck (MaskDuck)> tysm
[13:57:19] <PMunch> I mean technically you don't even need to save it to a file: nim --eval:'echo "hello world"'
[13:57:28] <FromDiscord> <MaskDuck> lmao
[13:57:49] <FromDiscord> <MaskDuck>  https://media.discordapp.net/attachments/371759389889003532/948527038267011072/unknown.png
[13:58:06] <PMunch> Well you didn't install it properly then
[13:58:15] <PMunch> You need to make sure that the Nim binary is in your path
[13:58:28] <PMunch> Ad do you have `nim` repeated twice, or is that just your shell?
[13:59:11] <PMunch> I think choosenim asks you if you want it to add it to your path for you
[14:00:00] <FromDiscord> <MaskDuck> In reply to @PMunch "I think choosenim asks": well
[14:00:05] <FromDiscord> <MaskDuck> it doesnt add it into the path
[14:00:16] <FromDiscord> <MaskDuck> and the nim folder is something contain the `hello.nim` file
[14:00:57] <FromDiscord> <MaskDuck> In reply to @PMunch "I think choosenim asks": well it doesnt
[14:01:57] <FromDiscord> <Rika> In reply to @MaskDuck "well it doesnt": It does, otherwise it’s somehow broken
[14:02:15] <FromDiscord> <Rika> In reply to @MaskDuck "it doesnt add it": It can’t add it for you, you have to do that yourself in this case
[14:03:24] <PMunch> You shouldn't put your project files in the Nim compiler folder
[14:03:30] <PMunch> I mean you can, but you shouldn't
[14:04:16] <PMunch> Either way it's just a matter of getting your shell to find the Nim binary. If you have built the Nim binary from sources it should be enough to add the `bin` folder in the Nim sources you've got to your path
[14:04:30] <PMunch> Simply update your PATH variable to include that folder
[14:04:49] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:04:54] <PMunch> Of course if you don't want to do that you could pass the full path to the compiler when you want to invoke it
[14:05:31] <FromDiscord> <Rika> Or symlink into a bin folder you already have in your path lol
[14:06:10] <PMunch> That would probably cause Nim to fail to find the standard library though wouldn't it?
[14:07:19] <FromDiscord> <Rika> Dunno never used it
[14:07:37] <FromDiscord> <Rika> If so then that should be fixed
[14:08:09] <PMunch> Oh well, time for lunch
[14:08:10] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[14:12:58] <FromDiscord> <demotomohiro> Running nim with absolute path worked.
[14:21:14] *** Joins: ltriant (~ltriant@203.63.103.126)
[14:22:34] <nrds> <06Prestige99> Is there a way to have a template return a bool, but also allow the user to pass in a body?
[14:22:56] <FromDiscord> <Rika> Templates don’t really “return”
[14:23:42] <nrds> <06Prestige99> yeah
[14:23:50] <nrds> <06Prestige99> But do you know what I mean?
[14:23:53] <FromDiscord> <Rika> Make a template with a block inside, put the passes body in the block, then after the body at the end of a block do an “explicit value return”
[14:24:00] <FromDiscord> <demotomohiro> `template foo(body: untyped): bool = body; true`?
[14:24:16] <nrds> <06Prestige99> yeah
[14:24:17] <FromDiscord> <Rika> ^Pretty much the same as what I mean except with a block too
[14:25:09] <FromDiscord> <demotomohiro> sent a code paste, see https://play.nim-lang.org/#ix=3R9H
[14:25:28] <FromDiscord> <demotomohiro> true without '?'
[14:25:53] <nrds> <06Prestige99> so I'm trying to do something like https://play.nim-lang.org/#ix=3R9I
[14:25:56] <nrds> <06Prestige99> if that makes sense
[14:26:40] <nrds> <06Prestige99> I think I'm too tired, lol
[14:28:40] <FromDiscord> <demotomohiro> It works without block: https://play.nim-lang.org/#ix=3R9K
[14:29:09] <FromDiscord> <Rika> Of course it does, I just wrap with a block for sanitation
[14:29:28] <nrds> <06Prestige99> So I can't use it in an if statement though?
[14:29:29] <FromDiscord> <Rika> Even if there’s no real benefit to that since it’s sanitary either way when used in that case
[14:35:45] <nrds> <06Prestige99> Any ideas?
[14:40:02] <FromDiscord> <demotomohiro> https://play.nim-lang.org/#ix=3R9M
[14:40:43] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[14:42:55] <nrds> <06Prestige99> hm doesn't work well for multiline does it?
[14:44:44] <FromDiscord> <demotomohiro> https://play.nim-lang.org/#ix=3R9N
[14:45:22] <nrds> <06Prestige99> hmm
[14:45:38] <FromDiscord> <demotomohiro> It seems using `foo` with if statement requires `(block:...)`.
[14:45:46] <nrds> <06Prestige99> interesting
[14:47:00] *** Quits: ltriant (~ltriant@203.63.103.126) (Ping timeout: 240 seconds)
[14:56:50] <FromDiscord> <whisperdev> How can I get sha256 from a file?
[15:03:19] <FromDiscord> <demotomohiro> Probaby `let content = readFile("myfile")` and pass it to `update` proc  in nimcrypto/sha2.
[15:03:31] <FromDiscord> <demotomohiro> https://github.com/cheatfate/nimcrypto
[15:05:09] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[15:07:03] <FromDiscord> <whisperdev> Thanks. Found some old code for nimSHA2 on forum that also works!
[15:07:46] <FromDiscord> <demotomohiro> !eval import osproc; echo execCmd "sha256sum /usercode/in.nim"
[15:07:50] <NimBot> Compile failed: 7555e94d3c86083b5d6df92f38fb0a6c411170b6f6c9fe9d03ddf8bc63d3d0d5  /usercode/in.nim↵0
[15:08:39] <FromDiscord> <haoliang> sent a code paste, see https://play.nim-lang.org/#ix=3R9R
[15:08:55] <FromDiscord> <demotomohiro> It say compile failed but output is correct?
[15:09:56] <FromDiscord> <demotomohiro> sent a code paste, see https://paste.rs/U2P
[15:10:36] <FromDiscord> <demotomohiro> sent a code paste, see https://play.nim-lang.org/#ix=3R9W
[15:11:23] *** Joins: PMunch (~PMunch@user/pmunch)
[15:11:34] <FromDiscord> <demotomohiro> In reply to @haoliang "i was wondering how": https://play.nim-lang.org/#ix=3R9X
[15:12:18] <FromDiscord> <demotomohiro> It is same to how to write Nim code in github issue or Readme.md.
[15:12:27] <FromDiscord> <Sense> sent a code paste, see https://paste.rs/Gdo
[15:12:55] <FromDiscord> <Sense> It's pretty simple but uh... I would like to see how it will look like in Nim code self.
[15:13:06] <FromDiscord> <haoliang> In reply to @demotomohiro "https://play.nim-lang.org/#ix=3R9X": thanks!
[15:18:32] <PMunch> @Sense, it would look a little something like this: http://ix.io/3R9Z/nim
[15:20:43] <FromDiscord> <demotomohiro> https://play.nim-lang.org/#ix=3Ra0
[15:21:13] <FromDiscord> <demotomohiro> "Write a number: " prints without "\n", isn't it?
[15:21:39] <PMunch> Ah okay, fair enough
[15:21:41] <FromDiscord> <demotomohiro> Maybe my code is wrong. I don't know much about Pascal.
[15:22:22] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 260 seconds)
[15:34:58] <FromDiscord> <Michal Maršálek> What is the Nim way to work with unicode characters? Like if I wanted to print yeah character of the given string in its own line? As far as I can tell, std/unicode only has support for runes. Related question: why does std/unicode deviate from the unicode terminology (rune = code point, character = grapheme cluster)?
[15:35:19] <FromDiscord> <Michal Maršálek> (edit) "yeah" => "each"
[15:35:26] <PMunch> Probably just to have shorter names
[15:35:39] <FromDiscord> <Michal Maršálek> (edit) "in" => "on"
[15:35:39] <PMunch> rune is a fairly common name for a unicode character
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:12] <PMunch> By the way, try to edit your messages as little as possible. Each edit you makes gets sent as a separate message to IRC, which is a bit annoying
[15:36:16] <FromDiscord> <Rika> I’ve heard of runes before Nim as well
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:53] <FromDiscord> <Rika> What is the difference between a “character” that you say and a code point
[15:37:03] <PMunch> And to print out each unicode character you would probably do `for c in myStr.runes: echo c`
[15:37:12] <FromDiscord> <Michal Maršálek> In reply to @PMunch "rune is a fairly": I neber heard it but I see that golang uses that word too.
[15:37:24] <PMunch> It's a nice short word :)
[15:37:56] <PMunch> @Rika, I guess things like zero-width joiners are their own code points but not a printable character
[15:38:02] <FromDiscord> <Michal Maršálek> In reply to @Rika "What is the difference": What users usually perceive as one character can be one or multiple codepoints.
[15:38:09] <PMunch> Exactly
[15:38:19] <FromDiscord> <Michal Maršálek> Like a letter and an accent
[15:38:29] <FromDiscord> <Rika> Denormalise then I guess
[15:38:38] <FromDiscord> <Michal Maršálek> Two codepoints combined to a single character.
[15:38:39] <FromDiscord> <Rika> Doesn’t work for all I guess
[15:38:51] <FromDiscord> <ajusa> PMunch this is bordering on #offtopic but could you explain what the tour endpoint does for the Nim forums? I was planning on migrating it to HTMX this week in a fork using the existing stack with Nimja as the templating engine.
[15:39:11] <PMunch> @ajusa, for the Nim forum?
[15:39:22] <PMunch> Or do you mean the playground
[15:40:03] <FromDiscord> <ajusa> Playground, my bad
[15:51:11] <PMunch> Well, it's a feature I built ages ago that has never really been used
[15:51:50] <PMunch> The idea was that people would be able to write their own "tours" in a subset of HTML and the playground would then display them similar to how "A tour of Go" is done
[15:52:28] <FromDiscord> <deeuu> sent a long message, see http://ix.io/3Rab
[15:53:57] *** Joins: ltriant (~ltriant@203.63.103.126)
[15:53:59] <PMunch> It doesn't really seem to work at the moment though
[15:54:04] <FromDiscord> <deeuu> And for context I'm executing a Python application on Windows, which fails with an exit code of -1, thus leaving me in a pickle
[15:55:04] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:55:46] <PMunch> @deeuu, maybe try execCmdEx: https://nim-lang.org/docs/osproc.html#execCmdEx%2Cstring%2Cset%5BProcessOption%5D%2CStringTableRef%2Cstring%2Cstring
[15:56:06] <FromDiscord> <ajusa> PMunch would it be fine if I took it out for now then? It would simplify the changes I'd be making, plus to make it work with HTMX changes would be needed anyway. Do you have any issues with what I'm proposing so far? If not, I can start coding
[15:57:04] <PMunch> Yeah I think it's time to axe that feature
[15:57:46] <PMunch> I've actually been looking at reimplementing the playground with HTMX myself
[15:58:00] <FromDiscord> <deeuu> In reply to @PMunch "<@746663152459972669>, maybe try execCmdEx:": Yeah I'll try that, thanks. I was more thinking is it correct that `readLines` iterates until `p.peekExitCode != -1` (which in my example never occurs).
[15:58:38] <PMunch> I started rewriting the front-end to be more contributor-friendly but I got lost in writing my own CSS library :P
[15:59:10] <PMunch> readLines likely reads until the stream returns atEnd
[15:59:39] *** Quits: ltriant (~ltriant@203.63.103.126) (Ping timeout: 256 seconds)
[16:00:57] <PMunch> Ah no, it actualy runs until p.peekExitCode != -1
[16:01:04] <PMunch> That's weird
[16:01:28] <FromDiscord> <abdu> How identifier naming?↵it's so narrow with insensitive letter-case execpt the first !↵please share tour best tips!
[16:01:49] <PMunch> @abdu, do you want to know how people name things?
[16:02:08] <FromDiscord> <Rika> Types are capitalised and variables are not
[16:02:16] <PMunch> Do you normally have myVar, myvar, and my_var point to different variables?
[16:02:17] <FromDiscord> <Rika> Pretty much the general consensus at least
[16:02:24] <PMunch> If so remind me to never read your code :P
[16:02:55] <PMunch> Yeah, types start with a capital letter, variables are snakeCase
[16:02:59] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[16:03:25] <FromDiscord> <ajusa> In that case I'll send you a link once I have stuff working, with the intention of merging it back eventually. I'm not planning on touching the CSS, just removing Karax and replacing it with HTMX
[16:04:37] <FromDiscord> <Rika> In reply to @PMunch "Yeah, types start with": snakeThatSwallowedAFewElephantsCase
[16:05:11] <PMunch> Haha, I meant camelCase :P
[16:05:51] <PMunch> @ajusa, send me a link? Send me a PR instead
[16:07:34] <FromDiscord> <deeuu> sent a long message, see https://paste.rs/7tp
[16:08:50] <PMunch> That is unfortunate
[16:09:16] <PMunch> I thought negative numbers where just treated as unsigned uint8s
[16:15:15] <FromDiscord> <hmmm> boiz is there something automatic to escape a windows path string to double the slashes
[16:15:20] <FromDiscord> <deeuu> Yeah thought so. Note that this issue only appears to arise on Windows
[16:16:30] <FromDiscord> <Rika> In reply to @hmmm "boiz is there something": ? why would you need this?
[16:16:45] <FromDiscord> <Rika> when you get user input it's already "escaped"
[16:17:14] <FromDiscord> <hmmm> apparently in pythonland they use something like os.path.join
[16:17:16] <FromDiscord> <Rika> so like if the user types "a\b" you receive "in code", "a\\b" or a, then \ as a char, then b
[16:17:37] <FromDiscord> <Rika> oh you mean you have a group of strings that represent folders?
[16:17:44] <PMunch> @hmmm, it sounds like you're looking for `/`
[16:17:48] <FromDiscord> <Rika> yes
[16:17:51] <FromDiscord> <Rika> in os
[16:18:04] <PMunch> https://nim-lang.org/docs/os.html#%2F%2Cstring%2Cstring
[16:18:23] <FromDiscord> <abdu> https://forum.nim-lang.org/t/8967#58573↵How do you think,↵"my frustration that Nim is slower than Python "
[16:18:38] <FromDiscord> <hmmm> hmm I'll try it, see if it works
[16:18:42] <PMunch> @deeuu, aah Windows probably derps with the error codes
[16:18:48] <PMunch> Because it's Windows I guess
[16:18:57] <FromDiscord> <deeuu> Fair
[16:19:12] <FromDiscord> <Rika> isnt bigint specifically mentioning that its not optimised
[16:19:19] <PMunch> Yup
[16:20:18] <PMunch> bigint specifically says that it is not fast. Nim is faster than Python, but some Python libraries are written in highly optimised C code and just shimmied in which I guess is what's going on here. If you use a library which is actually optimised for speed you will get more speed (who'da thunk?)
[16:21:24] <FromDiscord> <Rika> lol
[16:21:56] <PMunch> But yeah, if you don't write Python code which essentially boils down to calling out to a C library that does all the work Nim will be faster
[16:22:28] <PMunch> If you find a similarly optimised Nim library Nim is likely to be faster again because of faster startups
[16:24:00] <PMunch> Hmm, I'm porting some C code to Nim, it adds a signal handler for SIGINT which just sets an atomic int and then the main loop is looking for that atomic int and stops if it is 0. Then it has cleanup after the loop
[16:24:19] <PMunch> What would be the best way to implement something similar in Nim that can be Ctrl+C'ed with proper shutdown code?
[16:24:45] <PMunch> I guess just use setControlCHook..
[16:31:31] <FromDiscord> <hmmm> solved with r"<path>"
[16:31:36] <FromDiscord> <hmmm> handy stuff!
[16:55:22] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:58:56] *** Joins: rockcavera (~rc@192.12.113.198)
[16:58:56] *** Quits: rockcavera (~rc@192.12.113.198) (Changing host)
[16:58:56] *** Joins: rockcavera (~rc@user/rockcavera)
[17:04:01] <FromDiscord> <deeuu> sent a code paste, see https://paste.rs/3Lm
[17:05:34] <FromDiscord> <deeuu> (edit) "https://play.nim-lang.org/#ix=3Ray" => "https://paste.rs/kM8"
[17:19:18] *** Joins: ltriant (~ltriant@203.63.103.126)
[17:21:22] <PMunch> @deeuu, that would probably be a good idea
[17:21:35] <PMunch> Please create a PR to the Nim repository with this fix
[17:25:27] *** Quits: ltriant (~ltriant@203.63.103.126) (Ping timeout: 256 seconds)
[18:06:44] *** Joins: ltriant (~ltriant@203.63.103.126)
[18:09:53] *** Joins: arkurious (~arkurious@user/arkurious)
[18:11:17] *** Quits: ltriant (~ltriant@203.63.103.126) (Ping timeout: 240 seconds)
[18:38:19] *** Joins: ltriant (~ltriant@203.63.103.126)
[18:43:05] *** Quits: ltriant (~ltriant@203.63.103.126) (Ping timeout: 256 seconds)
[18:47:11] <FromDiscord> <abdu> How to reset over again↵`arr = newSeqOfCap[ int ](99)`↵after so many push i.e. arr.add( ) so as if start the very first push again on completely empt array?
[18:56:01] <PMunch> @abdu, `arr.setLen(0)` if you want to keep the internally allocated buffer, or you can use `reset arr` to completely reset it.
[18:56:06] <PMunch> Probably want setLen though
[18:56:15] <PMunch> To avoid extra allocations
[18:56:16] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: Leaving)
[19:09:53] *** Joins: ltriant (~ltriant@203.63.103.126)
[19:09:54] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:14:46] *** Quits: ltriant (~ltriant@203.63.103.126) (Ping timeout: 260 seconds)
[19:23:21] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[19:27:58] <ehmry> can I read asynchronously from io.stdin or do I need to read from an extra thread?
[19:30:22] <FromDiscord> <abdu> What's "reset arr to completely reset it" supposed to mean to be different to `arr.setLen(0)` ?
[19:35:36] <FromDiscord> <Rika> In reply to @abdu "What's "reset arr to": Reset will reallocate the buffer, which is an internal aspect that you don’t really notice aside from performance and memory usage
[19:41:29] *** Joins: ltriant (~ltriant@203.63.103.126)
[19:46:13] *** Quits: ltriant (~ltriant@203.63.103.126) (Ping timeout: 240 seconds)
[19:52:02] *** Quits: LyndsySimon (sid34452@lymington.irccloud.com) (Ping timeout: 240 seconds)
[19:53:09] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[20:05:13] *** Joins: gsalazar (~gsalazar@194.38.148.130)
[20:26:19] <FromDiscord> <Waldecir Santos> I've 2 modules/files with the same name but they live in different folders and I'm having a redefinition error, how should I import ? does nim have a `as` command like python ?
[20:28:16] <FromDiscord> <Waldecir Santos> Just fond on the docs there is an `as` let me try it
[20:29:57] <FromDiscord> <Waldecir Santos> It worked \o/
[21:00:14] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[21:08:58] <FromDiscord> <whisperdev> Does anyone use Nim with Svelte?
[21:09:27] <FromDiscord> <whisperdev> I was going to go with Karax but there is not that many projects out there to look at and I am kinda dumb
[21:13:35] <FromDiscord> <planetis> There are react bindings
[21:20:44] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[21:29:18] <FromDiscord> <-|-> Henlo, everyone↵I'm relatively new to Nim and working on a project that has a client, server, and some common components. Can I have some advice on what might be the best and most painless way to organize it, as far as directory structure and package management goes?
[21:44:25] *** tinytoast is now known as tinystoat
[21:48:40] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:49:51] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[22:01:01] *** Joins: ltriant (~ltriant@194-223-10-27.tpgi.com.au)
[22:07:48] *** Quits: ltriant (~ltriant@194-223-10-27.tpgi.com.au) (Ping timeout: 240 seconds)
[22:14:14] <FromDiscord> <Phil> Okay I have this faint feeling that std/logging is just hopelessly not working whatsoever
[22:14:25] <FromDiscord> <Goat> sent a code paste, see https://play.nim-lang.org/#ix=3Rcg
[22:14:26] <FromDiscord> <Phil> Time to try out a library
[22:14:46] <FromDiscord> <Phil> .... that is valid syntax?
[22:14:59] <FromDiscord> <Goat> Its for a macro I have, so yes
[22:15:11] <FromDiscord> <Phil> Oh, macro, nevermind I'll shut up, not my area
[22:15:34] <FromDiscord> <Phil> Sidenote, if anyone here got std/logging to properly work for them, I'd love to get some pointer
[22:15:35] <FromDiscord> <Phil> (edit) "pointer" => "pointers"
[22:23:53] <FromDiscord> <ajusa> In reply to @Goat "Which syntax is better?": like as someone who might be using this macro? I'd probably prefer the second to be honest. Is this a novel/story decision DSL?
[22:25:49] <FromDiscord> <Goat> Its a DSL that randomly rolls on a table, displays the flavor text of the choice and increases the two skills associated with it. I'm using it for a character generator https://media.discordapp.net/attachments/371759389889003532/948654878090203196/unknown.png
[22:39:28] <FromDiscord> <Phil> So apparently jsony and chronicles really don't like each other
[22:41:07] <FromDiscord> <Phil> (edit) "So apparently jsony and chronicles really don't like each other ... " 03added "since both make "toJson" procs available and partial imports on chronicles don't really alleviate the issue when you try to use it in a template"
[22:45:51] *** Joins: shadow0133 (~shadow013@194.146.248.72)
[22:47:20] <shadow0133> Is there a way to turn `seq[Future[Foo]]` into `Future[seq[Foo]]`?
[22:48:48] <FromDiscord> <dom96> You can use `all` (https://nim-lang.org/docs/asyncfutures.html#all%2Cvarargs%5BFuture%5BT%5D%5D)` and then call .read() on each of the futures
[22:58:51] <FromDiscord> <exelotl> sent a long message, see http://ix.io/3Rco
[22:59:45] <FromDiscord> <Phil> I'm not sure how to get out of this hell I find myself in, anyone with ideas?↵The "ambiguous call" strangely happens within jsony. And merely because both of them are imported within the same module, which is just beyond strange for me. https://media.discordapp.net/attachments/371759389889003532/948663418074828850/unknown.png
[23:00:32] <FromDiscord> <Phil> (edit) "module," => "module (controllers.nim by virtue of otherModule being imported there while it also exports chronicles),"
[23:01:38] <FromDiscord> <Phil> sent a long message, see http://ix.io/3Rcp
[23:03:16] <FromDiscord> <dom96> weird, but implies a problem in jsony or the json_serialization package
[23:03:48] <FromDiscord> <Phil> I'm... not sure whom to give a github issue for that one
[23:04:16] <FromDiscord> <dom96> you could try modifying the code it points to and see if you can resolve the problem
[23:04:59] <FromDiscord> <Phil> Can do, but first I feel like there's something fundamental about nims import rules I don't get here
[23:05:30] <FromDiscord> <dom96> I don't think this is so much about Nim's import rules as much as it is about Nim's late binding generics
[23:05:31] <FromDiscord> <Phil> when jsony.nim calls "toJson", that proc is defined within that module or a module it imports
[23:05:49] <FromDiscord> <Phil> jsony.nim never imports chronicles
[23:06:33] <FromDiscord> <Phil> So due to generics it's able for a proc from "downstream" to cause ambiguity issues "upstream"?
[23:06:57] <FromDiscord> <dom96> I'm not 100% sure but I think so
[23:07:21] <FromDiscord> <-|-> In reply to @exelotl "There's lots of ways": Do you have a single <name>.nimble file for the whole project?
[23:10:23] <shadow0133> Can you `map` the Future?
[23:10:52] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3Rcq
[23:11:08] <FromDiscord> <dom96> In reply to @shadow0133 "Can you `map` the": there is no async map so no, but you can easily write one
[23:11:17] <FromDiscord> <exelotl> In reply to @-|- "Do you have a": I'm not using Nimble but if you are (which is probably a more conventional approach tbh) then you could have a single .nimble and single source directory, and the .nimble can have 2 binary targets in it, no problem
[23:12:00] <FromDiscord> <dom96> In reply to @exelotl "I'm not using Nimble": yep, for my game I have a single nimble file with many different tasks. For example "backend", "server", "android" to build for different targets
[23:18:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[23:19:09] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[23:21:57] <FromDiscord> <Phil> dom? can you just throw multiple -d compiler flags behind one another or can you only specify -d once and have to throw multiple values in some strange syntax into it at once?
[23:22:23] <shadow0133> how to construct ready Future?
[23:25:24] <FromDiscord> <dom96> In reply to @Isofruit "dom? can you just": you can throw multiple
[23:25:31] <FromDiscord> <dom96> In reply to @shadow0133 "how to construct ready": `newFuture`
[23:27:04] <shadow0133> but with value? something like `ready(T): Future[T]`
[23:27:54] <FromDiscord> <dom96> newFuture + complete
[23:28:01] <FromDiscord> <dom96> you can't construct a completed future
[23:32:32] <FromDiscord> <-|-> In reply to @exelotl "I'm not using Nimble": Thanks for the advice. I think I see how I want to do it now.
[23:55:44] <shadow0133> How to iterate over `seq[T]` such that it returns `T`, not `lent T`?
[23:56:38] <nrds> <06Prestige99> maybe using mitems?
[23:57:14] <nrds> <06Prestige99> https://nim-lang.org/docs/iterators.html#mitems.i%2CopenArray%5BT%5D
