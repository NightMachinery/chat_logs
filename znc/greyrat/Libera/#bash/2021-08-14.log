[00:02:31] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[00:02:40] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 272 seconds)
[00:03:22] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:05:39] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: bye)
[00:06:18] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[00:08:26] *** Joins: goldfish (~goldfish@user/goldfish)
[00:08:47] *** Quits: goldfish (~goldfish@user/goldfish) (Remote host closed the connection)
[00:09:36] <xx> [[ $a == $b ]] vs [[ $a == "$b" ]] says that the 2nd form performs exact pattern matching, but how exactly is the first one inexact?
[00:09:53] <greycat> $b is treated as a glob in the first one
[00:10:06] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[00:10:31] <xx> can someone show me an example of the difference, or link me to a page that shows such examples?
[00:10:45] <greycat> b=foo*
[00:11:18] <llua> # b=foo*; [[ foobar == $b ]]; echo "$?"
[00:11:19] <tirnanog> # a="whatever"; b="*"; [[ $a == $b ]]; echo $?
[00:11:20] <shbot> llua: 0
[00:11:20] <shbot> tirnanog: 0
[00:11:33] *** Joins: Guest41 (~Guest41@2600:1015:b00b:e2e1:5e92:ef29:5287:f976)
[00:11:58] <xx> hmm
[00:12:14] *** Joins: tradar (~tradar@user/tradar)
[00:12:21] <xx> sounds like I never want to use the unqouoted version then
[00:12:31] <llua> it depends
[00:12:53] *** Joins: mci64 (~x@185.242.190.95)
[00:12:54] <xx> in fact, at first glance it looks dangerous to use the unquoted version, even more than in [ $a = $b ]
[00:13:02] <CrtxReavr> What's the sytax to pipe both stdout & stderr to the same place? Is it $|
[00:13:10] *** Quits: Steeve (~steve@user/steeve) (Quit: end)
[00:13:11] <greycat> 2>&1 |
[00:14:46] <neshpion> # ls yeet |& tr [:lower:] [:upper:]
[00:14:47] <shbot> neshpion: /BIN/LS: CANNOT ACCESS 'YEET': NO SUCH FILE OR DIRECTORY
[00:15:13] <tirnanog> xx: [ $a = $b ] is arguably worse,as pathname expansion may then come into it.
[00:15:15] <greycat> # ls yeet 2>&1 | tr '[:lower:]' '[:upper:]'
[00:15:16] <shbot> greycat: /BIN/LS: CANNOT ACCESS 'YEET': NO SUCH FILE OR DIRECTORY
[00:15:22] <CrtxReavr> neshpion, I think |& is what I was thinking of.
[00:15:48] <greycat> of course it was, because it's more l33t and unportable and you can't even remember it, so obviously it's your heart's desire
[00:16:10] <tirnanog> xx: either way, the solution is to quote.
[00:16:23] <greycat> the quotes are mandatory around both "$a" and "$b" inside [ ]
[00:16:46] <greycat> in [[ ]] you get a choice, and the ability to do either of two different things
[00:18:00] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[00:18:48] *** Quits: pystardust (~pystardus@117.96.229.96) (Quit: pystardust)
[00:19:59] *** Joins: pystardust (~pystardus@117.96.229.96)
[00:20:45] *** mnrmnaugh is now known as KeziahMason
[00:21:00] *** Quits: pystardust (~pystardus@117.96.229.96) (Client Quit)
[00:22:33] *** Quits: darkbit (~db@152.32.99.67) (Ping timeout: 248 seconds)
[00:22:45] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[00:22:51] *** Joins: superboot (~agentgasm@user/superboot)
[00:23:32] *** Joins: karakedi (~eAC53C340@user/karakedi)
[00:23:35] <superboot> Has anyone written a quine in bash?
[00:23:57] <CrtxReavr> quine?
[00:24:19] <Inline> let let let let
[00:24:25] <neshpion> # echo "cat quine.sh" >quine.sh; bash -c quine.sh
[00:24:27] <shbot> neshpion: bash: line 1: quine.sh: command not found
[00:24:31] <neshpion> rip
[00:24:59] <neshpion> # echo "cat quine.sh" >quine.sh; chmod +x quine.sh; ./quine.sh
[00:25:00] <geirha> # > quine; bash quine
[00:25:01] <shbot> neshpion: cat quine.sh
[00:25:02] <shbot> geirha: no output
[00:25:04] <geirha> !next
[00:25:04] <greybot> Another satisfied customer! Next please!
[00:25:06] *** Joins: mci64 (~x@185.242.190.95)
[00:25:12] *** Quits: Starmina (~Starmina@194.110.113.26) (Quit: Bye)
[00:28:38] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:908f:abc5:8c06:be43) (Ping timeout: 272 seconds)
[00:28:49] *** Quits: tecnico (~tecnico@207.157.74.130) (Ping timeout: 246 seconds)
[00:29:09] *** Quits: lalitmee (~lalitmee@180.94.33.244) (Quit: Konversation terminated!)
[00:29:26] *** Joins: lalitmee (~lalitmee@180.94.33.244)
[00:32:21] *** Joins: Starmina (~Starmina@194.110.113.89)
[00:34:02] *** Joins: magla (~gelignite@55d4fe02.access.ecotel.net)
[00:34:08] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[00:34:14] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[00:35:57] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[00:39:17] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[00:43:36] <greycat> wikipedia claims that reading the source code from disk, or using a zero-length program, are "cheating"
[00:44:19] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[00:44:20] *** KeziahMason is now known as mnrmnaugh
[00:44:45] <alzgh> hello greycat I was wondering if you have a bash challenge for me. An easy one for my level :)
[00:45:06] *** Joins: mci64 (~x@185.242.190.95)
[00:46:06] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[00:46:13] <lopid> sounds like an open goal
[00:46:27] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[00:46:59] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[00:47:44] <alzgh> https://cmdchallenge.com/ found this. presentation is really good.
[00:47:54] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 258 seconds)
[00:47:56] <greycat> you could try the examples on the BashProgramming pages, or try the first few days of any year of Advent of Code
[00:48:07] *** gordonfish- is now known as gordonfish
[00:48:41] *** Quits: mci64 (~x@185.242.190.95) (Client Quit)
[00:49:34] *** Joins: mci64 (~x@185.242.190.95)
[00:50:02] <alzgh> examples on BashProgramming pages are good.
[00:50:10] *** Quits: Guest41 (~Guest41@2600:1015:b00b:e2e1:5e92:ef29:5287:f976) (Ping timeout: 246 seconds)
[00:50:20] <greycat> they're taken from actual questions that were asked here
[00:51:31] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[00:52:46] <alzgh> going to solve them and then compare with the solutions
[00:53:45] *** Parts: dunpeal (~dunpeal@2001:470:69fc:105::3e80) ()
[00:54:56] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[01:00:00] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[01:00:26] *** Joins: carlos (~pum@user/carlos)
[01:02:08] <emg> something must be wrong with me because I love reading the XY examples on the wiki just to feel outraged
[01:03:00] *** Quits: zeraphel (~daddy@2a00:a040:196:1438::2) (Quit: zeraphel)
[01:03:43] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[01:04:52] *** Joins: russw (~russw@bras-base-otwaon0150w-grc-06-184-147-146-48.dsl.bell.ca)
[01:05:09] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 258 seconds)
[01:05:45] *** Quits: nobody_ (~nobody@87.13.30.222) (Ping timeout: 248 seconds)
[01:06:10] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:06:26] <russw> Why is my sum var still 0 at the end of this loop? https://bpa.st/F6GA
[01:06:33] <greycat> !check
[01:06:35] <checkbot> russw: Line 10: sum was modified in a subshell. That change might be lost. Line 7: Modification of sum is local (to subshell caused by pipeline). Line 10: Double quote to prevent globbing and word splitting. See https://shellcheck.net/?id=cb86994 for all 9 issues.
[01:06:48] <russw> wow. nice bot!!
[01:06:49] <greycat> Best bot.
[01:08:21] <russw> so... how can I push that sum out?  I already new, and was going to type before that bot output, that dropping the pipe to sort keeps the sum,
[01:08:26] *** Quits: ori (~atdt@user/ori) (Ping timeout: 250 seconds)
[01:08:34] *** Quits: libera- (~utunbu@user/utunbu) (Ping timeout: 240 seconds)
[01:08:36] *** Quits: wwalker (~wwalker@platinum.solid-constructs.com) (Ping timeout: 258 seconds)
[01:08:42] <greycat> !faq disappear
[01:08:42] <greybot> https://mywiki.wooledge.org/BashFAQ/024 -- I set variables in a loop that's in a pipeline. Why do they disappear after the loop terminates? Or, why can't I pipe data to read?
[01:08:49] <alzgh> lol, these are funny. real world examples, I assume
[01:08:52] *** Quits: bkhl (~bkhl@user/bkhl) (Ping timeout: 250 seconds)
[01:09:05] *** Quits: tkazi (~tkazi@user/tkazi) (Ping timeout: 252 seconds)
[01:09:37] *** Quits: thiccdaddy (~OwO@thiccdaddy.sexy) (Ping timeout: 268 seconds)
[01:10:00] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (Ping timeout: 276 seconds)
[01:13:51] *** Joins: Guest11 (~Guest11@m95-153-32-132.cust.tele2.ee)
[01:13:52] <russw> very interesting stuff, but not seeing an easy solution yet. :(  Was hoping to not have to fully rewrite, but seems I may have to.
[01:13:53] *** Joins: zeraphel (~daddy@2a00:a040:196:1438::2)
[01:14:04] *** Quits: guest856 (~guest@host45.186-125-29.telecom.net.ar) (Remote host closed the connection)
[01:14:09] *** Joins: joshcom (~joshcom@2600:8800:a706:2b00:57fa:c99f:96ed:ee89)
[01:14:49] <greycat> I'm just hoping I don't have to read your program.  I'm hoping that enough bot factoids and answers will help you find your own answer.  The first bot said you have a subshell caused by a pipeline.  So the usual solution (as the second bot's wiki page says) is to rewrite a pipeline as a process sub.
[01:14:52] <tirnanog> have you looked at the workarounds section yet?
[01:15:10] *** Joins: tkazi (~tkazi@user/tkazi)
[01:15:21] <russw> yes... multiple passes through. Still on it.
[01:15:21] *** Joins: utunbu_ (~utunbu@user/utunbu)
[01:15:31] <greycat> i.e. rewrite   foo | while...  as   while... < <(foo)
[01:15:55] <emg> or in this case:   while ... done > >(sort)    # I think
[01:17:05] *** Joins: bkhl (~bkhl@user/bkhl)
[01:17:42] *** Joins: ori (~atdt@user/ori)
[01:17:42] <emg> note that you may want a    wait    after that as it's no longer synchronous
[01:18:30] <russw> I'm basically just struggling to match my looping case against the workaround examples (or that "foo | while") example. I have no file in this case, and most are citing files.
[01:18:35] *** Joins: thiccdaddy (~OwO@thiccdaddy.sexy)
[01:18:45] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:18:52] *** Quits: joshcom (~joshcom@2600:8800:a706:2b00:57fa:c99f:96ed:ee89) (Ping timeout: 256 seconds)
[01:19:17] <greycat> he's *writing* from a loop, not *reading* into a loop?  and he wants side effects that occur within the loop to persist as well?
[01:19:32] <russw> look like process substitution may work. Just need to figure that out.
[01:19:41] <emg> I... I just told you how
[01:20:23] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[01:20:33] <russw> emg: like I said... trying to match your cited example to my use case.
[01:20:43] <emg> # while ((i < 10)); do echo $((i++)); done > >(sort); wait; echo $i
[01:20:44] <tirnanog> as it seems probable that you have no further use for sum after the function has concluded, consider: done | { ... remaining commands ...; }
[01:20:46] <shbot> emg: 0
[01:20:46] <shbot> emg: 1
[01:20:47] <shbot> emg: etc... ( http://ix.io/2sih )
[01:20:53] <russw> greycat: I'm clearly not 100% versed with bash scoping... hence my problem
[01:20:55] <tirnanog> and, in that case, consider also localising the sum variable.
[01:21:20] <tirnanog> oh never mind, misread the thing.
[01:21:28] <greycat> It's just that this is an incredibly *unique* problem.  I don't think I've ever seen someone with the !faq disappear question when their loop is the *writer* rather than a reader.
[01:21:32] <tirnanog> yeah.
[01:21:45] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[01:22:35] <greycat> And a writer with persistent side effects as well ... not typical.
[01:22:52] <emg> I guess I could actually read the code and see what the X is here
[01:23:01] *** Parts: Guest11 (~Guest11@m95-153-32-132.cust.tele2.ee) ()
[01:23:16] <emg> I regret my choice
[01:23:44] *** Quits: n4dir (~user@mue-88-130-56-193.dsl.tropolys.de) (Remote host closed the connection)
[01:24:08] <russw> the reactions here are interesting.  Clearly I've unknowingly done something seriously screwy here.
[01:24:34] <russw> this was perfectly functional and I was just adding the sum when I ran into problems
[01:24:46] <russw> I'm honestly confused why people think this is so messed up
[01:25:27] <tirnanog> you have to understand that both sides of the pipeline run a distinct subshell. even lastpipe won't save you here, because it's the first of those that is performing the variable assignment.
[01:26:09] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[01:26:41] <russw> that makes sense and clarified things. thanks.
[01:26:50] *** Quits: lalitmee (~lalitmee@180.94.33.244) (Quit: Konversation terminated!)
[01:26:53] <tirnanog> you could just push the lines to a (localized) array then run that through sort after the loop has concluded.
[01:27:08] *** Joins: Adoi (~Adoi@user/adoi)
[01:28:33] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[01:29:23] *** Parts: emg (~emg@cpe-70-93-247-186.natsow.res.rr.com) ()
[01:29:26] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[01:29:46] <russw> that also makes sense. the distinct subshells comment clarifies all. Only connection is through stdout.
[01:31:13] <russw> certainly fell into the boneheaded trap of thinking function scoping is more like typical programming
[01:31:55] <ash_worksi> can extglob match "not filenames A or B" ?
[01:31:55] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[01:32:28] <Riviera> ash_worksi: !(A|B)
[01:32:58] <ash_worksi> oh neat
[01:33:55] <tirnanog> russw: untested, but should address some of the issues with it: https://termbin.com/nhrk
[01:36:14] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[01:37:12] *** Parts: stemid (~nocturnal@i-lands.anark.ist) ()
[01:39:18] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[01:39:45] <alzgh> does `\d` work in gnu grep regex as a named class for digits?
[01:40:07] <alzgh> in the mans pages I only see [:digit:]
[01:40:15] <tirnanog> only with non-standard extensions, such as GNU's grep -P.
[01:40:28] <alzgh> OK, thanks
[01:42:50] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[01:43:20] <tirnanog> if you're only concerned with ASCII digits, [0-9] should be OK, regardless of the collation (I think).
[01:44:16] <greycat> I've never seen a system where it fails.
[01:44:30] <greycat> although [[:digit:]] is technically the correct spelling
[01:44:32] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[01:47:12] *** Joins: earendel (uid498179@user/earendel)
[01:50:29] *** Quits: magla (~gelignite@55d4fe02.access.ecotel.net) (Quit: Stay safe!)
[01:51:15] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[01:52:56] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[01:53:13] <neshpion> IIRC \d is PCRE
[01:53:39] <neshpion> whereas (portable) grep is POSIX
[01:53:48] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[01:54:13] <greycat> POSIX grep only understands BRE and ERE (the latter with the -E option).
[01:55:15] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Quit: WeeChat 3.2)
[01:56:38] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:56:39] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Killed (copper.libera.chat (Nickname regained by services)))
[01:56:39] *** __jmcantrell__ is now known as jmcantrell
[01:58:46] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:00:19] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[02:00:27] *** Joins: emg (~emg@cpe-70-93-247-186.natsow.res.rr.com)
[02:01:45] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:06:31] *** __jmcantrell__ is now known as jmcantrell
[02:07:08] <neshpion> i have something that does `tee >(printf 'DEBUG\t' >>"$log"; gzip -c | base64 -w0 >>"$log"; printf \\n >>"$log")`  but i'm thinking since this runs in a subshell and writes 3 times to $log, it's possible that another command could interrupt between the three writes and my formatting could get messed up.  should i just write this to a mktemp file and then `cat "$temp" >>"$log" && rm -f "$temp"`?
[02:09:26] <emanuele6> \s "works" in bash on GNU/Linux when used as `re='\s'; [[ $string =~ $re ]]', but that is only because bash uses regcomp() and the underlying GNU libc adds to EREs \s as an extension. it is not guaranteed to work on all systems
[02:10:30] <Soliton> tee >({ printf 'DEBUG\t'; gzip -c | base64 -w0; printf \\n; } >>"$log")
[02:10:51] <neshpion> oh
[02:10:57] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[02:11:16] <Soliton> if something else writes concurrently that can go wrong either way.
[02:13:08] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[02:13:44] *** Quits: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net) (Ping timeout: 268 seconds)
[02:13:51] *** Quits: julius_c (~julius_c@59.red-88-0-56.dynamicip.rima-tde.net) (Quit: Leaving)
[02:14:51] *** Quits: wwalker (~wwalker@platinum.solid-constructs.com) (Quit: leaving)
[02:15:08] <emanuele6> !learn re=\\s \s "works", on GNU/Linux, when used as `re='\s'; [[ $string =~ $re ]]', but that is only because bash uses regcomp() to implement =~ and the underlying GNU libc adds to EREs \s as an extension. This is not guaranteed to work on all systems; you should stick to POSIX EREs as the bash manual says. [[ $string =~ [[:space:]] ]]
[02:15:08] <greybot> OK, emanuele6
[02:15:51] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[02:16:56] <Riviera> !re=\\s
[02:16:56] <greybot> \s "works", on GNU/Linux, when used as `re='\s'; [[ $string =~ $re ]]', but that is only because bash uses regcomp() to implement =~ and the underlying GNU libc adds to EREs \s as an extension. This is not guaranteed to work on all systems; you should stick to POSIX EREs as the bash manual says. [[ $string =~ [[:space:]] ]]
[02:17:19] <Riviera> !\s
[02:17:19] <greybot> \s and \d are PCRE features. They will not work in ERE (which is what awk, egrep, and bash's =~ all use). The ERE equivalent of \s is [[:space:]], and of \d is [[:digit:]].
[02:20:09] <neshpion> is there a better way to make a function pass stdin to stdout other than just invoking `cat`?
[02:21:09] <Riviera> yup, not doing cat in the first place
[02:21:28] <Riviera> but, what are you trying to do?
[02:22:38] <neshpion> i have some wrappers around curl/wget that redirect to `&> >(pipe_net_output)` which is this https://termbin.com/h9er
[02:22:51] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[02:22:59] <emanuele6> !check
[02:23:00] <checkbot> neshpion: Line 2: _debug is referenced but not assigned. See https://shellcheck.net/?id=cb91579
[02:23:06] *** Joins: Adoi (~Adoi@user/adoi)
[02:23:28] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[02:23:43] <neshpion> (_debug is set if the user invokes the script with -g)
[02:24:01] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[02:24:22] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:25:10] *** Guest330 is now known as jmcantrell
[02:25:34] <neshpion> actually have to go, bbl
[02:25:53] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Quit: Bye!)
[02:27:16] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[02:28:16] *** Quits: edlou (uid413273@id-413273.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[02:29:20] *** Quits: Oddly (~sacr@mailserver.rshs.nl) (Quit: Ping timeout (120 seconds))
[02:29:31] *** Joins: Oddly (~sacr@mailserver.rshs.nl)
[02:30:57] *** Joins: joshcom (~joshcom@2600:8800:a706:2b00:2cfe:4c51:9bb2:8518)
[02:31:19] *** Quits: joshcom (~joshcom@2600:8800:a706:2b00:2cfe:4c51:9bb2:8518) (Remote host closed the connection)
[02:39:42] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 245 seconds)
[02:40:21] *** Quits: Dotz0cat (~Dotz0cat@h186.236.31.71.dynamic.ip.windstream.net) (Ping timeout: 276 seconds)
[02:41:02] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[02:41:23] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:42:08] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 258 seconds)
[02:43:12] *** Quits: Liblx (~Alex@2a02:810c:280:59c:3581:6527:4f24:5729) (Quit: WeeChat 3.2)
[02:44:09] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[02:44:57] *** Quits: dom2 (~dom2@c-65-96-173-68.hsd1.ma.comcast.net) (Ping timeout: 248 seconds)
[02:48:52] *** Joins: dob1_ (~dob1@user/dob1)
[02:49:17] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 245 seconds)
[02:49:50] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[02:52:36] <alzgh> I have files with this format and want to display the IPs one on each line. I manages it with 
[02:52:37] <alzgh> `cut -d' ' -f1 $(find . -name "access.log*")` but didn't get it with grep. Maybe my regex is wrong. This was one of my grep attempts `grep -ho  "[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,
[02:52:37] <alzgh> 3}" $(find . -name "access\.log*")`
[02:52:44] <alzgh> f
[02:53:46] <alzgh> `grep -ho  "[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}" $(find . -name "access\.log*")` grep attempt again.
[02:54:39] <alzgh> I know the regex is full of holes for wrong IPs. I just want to get it working first.
[02:55:01] <Soliton> if you want to use ERE you need to specify -E.
[02:55:32] <emanuele6> superboot: a quine in bash https://0x0.st/-JDA.bash
[02:55:41] <emanuele6> i think {1,3} is PCRE, not ERE
[02:55:46] <emanuele6> so you need -P
[02:55:51] <emanuele6> and you need GNU grep
[02:56:09] <alzgh> man, this is a mine field
[02:56:45] <Soliton> also use find ... -exec grep ... +
[02:57:02] <alzgh> Soliton -E solved it
[02:57:09] <greycat> {1,3} is ERE.  $(find) is !pf1
[02:57:11] <Soliton> and -name takes a glob not a regex.
[02:57:37] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Read error: Connection reset by peer)
[02:57:41] <greycat> and -o is GNU only, not that you will care
[02:57:50] <alzgh> I don't know all these flavors of regex. only used to the most modern ones.
[02:58:21] *** Joins: cree (~cree@2a00:23c4:dd0f:ae00:16c0:6c18:d306:6263)
[02:58:54] <alzgh> Soliton What do you mean with "-naame takes a glob not a regex"? Did I use regex in this `"access\.log*"` ?
[02:59:17] <emanuele6> \. is literally \.
[02:59:22] <emanuele6> in glob
[02:59:23] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 258 seconds)
[02:59:49] <alzgh> find must work regex on this system because without escaping . it didn't work
[03:00:00] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:00:37] *** Quits: b0b (~bob@user/b0b) (Quit: o/)
[03:00:54] <emanuele6> i don't think that is the issue; if it did work with regex, then it would match 'access.lo' and not match 'access.log1'
[03:01:10] *** Joins: b0b (~bob@user/b0b)
[03:01:27] <emanuele6> gnu find seems to work with "access\.log*" also, but i'm not sure if that is standard
[03:01:28] <alzgh> O, true
[03:01:54] <alzgh> It didn't specifically work without escaping.
[03:01:58] <alzgh> Or let me check that again
[03:02:05] <alzgh> maybe I'm confused :)
[03:02:09] <emanuele6> alzgh: I think it didn't work originally because you did not quote *, not because you did not excape .; try -name 'access.log*', it should work
[03:02:30] <alzgh> yeah, you probably right. will check.
[03:03:02] *** Quits: klys (~mdasoh@show.op8.us) (Read error: Connection reset by peer)
[03:03:32] *** Joins: klys (~mdasoh@show.op8.us)
[03:03:40] *** Parts: cree (~cree@2a00:23c4:dd0f:ae00:16c0:6c18:d306:6263) ()
[03:04:13] *** Joins: tejr (~tejr@user/tejr)
[03:06:22] *** Joins: codebam (~codebam@user/codebam)
[03:06:46] <codebam> how do I remove the newline from this? it's only copying the last line for some reason `paste png < /tmp/screenshot.png | wl-copy`
[03:06:54] <codebam> so it's copying nothing
[03:07:12] <codebam> I tried piping through `head -n1` but that didn't work
[03:07:22] <codebam> paste is this script
[03:07:36] <codebam> https://paste.sbehan.ca/files/fEL
[03:07:49] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[03:07:53] <codebam> with txt ext https://paste.sbehan.ca/files/Waa.txt
[03:08:04] *** Quits: klys (~mdasoh@show.op8.us) (Remote host closed the connection)
[03:08:35] *** Joins: klys (~mdasoh@show.op8.us)
[03:11:28] <emanuele6> i'm guessing that that paste is not paste(1)
[03:11:47] <emanuele6> why would you name a custom script as a POSIX standard utility?
[03:13:49] *** Quits: chomwitt (~chomwitt@athedsl-32301.home.otenet.gr) (Remote host closed the connection)
[03:16:27] <emanuele6> codebam: I tried `echo hi | curl -F 'file=@-;filename=.txt' https://paste.sbehan.ca/' and the output did not have a leading newline; i'm not sure what you mean
[03:17:42] <emanuele6> also, why are you redirecting /tmp/screenshot.png to curl -F'file=@-;filename=.png'?
[03:17:55] <codebam> emanuele6: oh yeah it's not paste. uhhh I'll rename it
[03:18:07] <codebam> emanuele6: to upload it
[03:18:18] <emanuele6> why not just run curl -F'file=@/tmp/screenshot.png'?
[03:18:36] <codebam> I don't know, I thought it was fine to redirect like that?
[03:18:41] <codebam> I can change it I guess
[03:18:53] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[03:18:57] <emanuele6> i don't understand what your newline problem is though
[03:19:32] *** Joins: debsan (~debsan@2800:810:471:8425::1000)
[03:19:34] <tirnanog> consuming from stdin is more amenable to safely scripting. don't really see the problem with that.
[03:19:48] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[03:20:44] <codebam> emanuele6: yeah I'm not really sure how to debug it. essentially it copies https://url.com/whatever with a newline at the end
[03:21:06] <codebam> so I want it without the newline
[03:21:10] <emanuele6> ah, ok
[03:21:49] <emanuele6> then use | tr -d '\n' | wl-copy
[03:21:51] <tirnanog> because that's what the server responds with. as interactive use is typical, it would be rather annoying if it didn't.
[03:22:33] <codebam> oh okay I'll try that, thank you
[03:22:55] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.2)
[03:23:11] <emanuele6> or save the output of curl in a variable and then use `wl-copy -- "$var"', I don't use wayland, but I think that should work: https://manpages.debian.org/buster/wl-clipboard/wl-copy.1.en.html
[03:23:46] <codebam> that worked, thank you!
[03:23:56] <codebam> it also fixed the graphical copy with my keybind
[03:24:50] <codebam> oh cool I could use a variable too
[03:25:04] *** Quits: mci64 (~x@185.242.190.95) (Ping timeout: 258 seconds)
[03:25:39] *** Joins: somlis (~somlis@user/somlis)
[03:26:01] *** Quits: birkoff (birkoff@user/birkoff) (Ping timeout: 248 seconds)
[03:26:45] *** Joins: Sabinno (~Sabinno@75.26.52.152)
[03:29:13] *** Joins: zeden (~zeden@user/zeden)
[03:30:49] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 248 seconds)
[03:32:02] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:32:30] *** Joins: jsrnop (~mark@user/jsrnop)
[03:33:01] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[03:34:27] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[03:35:37] *** Quits: jelly (jelly@user/jelly) (Ping timeout: 248 seconds)
[03:37:13] *** Quits: xx (~xx@user/xx) (Ping timeout: 248 seconds)
[03:40:13] *** Quits: qub411 (~user@203-219-207-138.tpgi.com.au) (Quit: WeeChat 2.3)
[03:45:45] *** Quits: Camilo (~hugh@host-92-20-143-244.as13285.net) (Ping timeout: 248 seconds)
[03:47:25] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[03:49:01] *** Joins: daniel-k2 (~daniel-k@192.241.135.211)
[03:49:06] *** Joins: harleypig5 (thelounge@harleypig.com)
[03:49:08] *** Joins: tofran3 (~tofran@37.189.158.134)
[03:49:09] *** Joins: humky (~humky@user/humky)
[03:49:57] *** Joins: strungout (znc@mutant.penguin.fyi)
[03:50:02] *** Joins: colo_ (~colo@user/colo)
[03:50:03] *** Joins: Mmike_ (~mario@li1411-253.members.linode.com)
[03:50:10] *** Joins: cache (~cache@user/cacheyourdreams)
[03:50:47] *** Quits: daniel-k (~daniel-k@192.241.135.211) (Quit: Ping timeout (120 seconds))
[03:50:47] *** Quits: harleypig (thelounge@harleypig.com) (Quit: Ping timeout (120 seconds))
[03:50:47] *** Quits: tofran (~tofran@37.189.158.134) (Quit: Ping timeout (120 seconds))
[03:50:47] *** Quits: greybot (~greybot@remote.wooledge.org) (Ping timeout: 268 seconds)
[03:50:47] *** Quits: suffer (znc@mutant.penguin.fyi) (Quit: ZNC - https://znc.in seek the truth or pay the price)
[03:50:47] *** Quits: cacheyourdreams (~cache@user/cacheyourdreams) (Quit: left)
[03:50:47] *** Quits: colo (~colo@user/colo) (Quit: Bye.)
[03:50:47] *** Quits: Mmike (~mario@user/mmike) (Quit: Purpuratum, floret pratum...)
[03:50:47] *** daniel-k2 is now known as daniel-k
[03:50:47] *** tofran3 is now known as tofran
[03:50:47] *** harleypig5 is now known as harleypig
[03:53:00] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 256 seconds)
[03:53:29] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[03:55:42] <matthewcroughan> Is there a way to duplicate a ffmpeg stream such that I can listen to its output twice?
[03:55:56] *** Joins: greybot (~greybot@remote.wooledge.org)
[03:56:16] <greycat> ask #ffmpeg
[03:59:05] <matthewcroughan> greycat: I meant the stdout.
[03:59:10] <matthewcroughan> any program could be generating stdout.
[04:00:52] *** Joins: seninha (~seninha@user/seninha)
[04:01:12] *** Parts: peterrooney (~peter@2604:3d08:1583:7400:222:4dff:fe69:d6ed) (Dammit Jim, ^W is NOT erase word in hexchat.)
[04:01:22] *** Joins: akoana (~ah@user/akoana)
[04:01:27] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:222:4dff:fe69:d6ed)
[04:02:25] <emanuele6> matthewcroughan: do you want to duplicate line by line or the whole stream?
[04:02:33] <matthewcroughan> whole stream
[04:02:37] <emanuele6> cat - -
[04:02:40] <matthewcroughan> I want to send the same stdout to two different commands.
[04:03:12] <emanuele6> that's a different question then
[04:03:31] <emanuele6> stream | tee -- >(cmd1) >(cmd2)
[04:06:10] *** Joins: ferdna (~ferdna@user/ferdna)
[04:07:17] <emanuele6> # echo hi | tee -- >(sed 's/^/ooo /') >(tr '[:lower:]' '[:upper:]')
[04:07:19] <shbot> emanuele6: hi
[04:08:01] <emanuele6> without the --
[04:08:15] <emanuele6> # echo hi | tee >(sed 's/^/ooo /') | tr '[:lower:]' '[:upper:]'
[04:08:17] <shbot> emanuele6: HI
[04:08:17] <shbot> emanuele6: OOO HI
[04:08:40] <emanuele6> # echo hi | tee >(sed 's/^/ooo /') >(tr '[:lower:]' '[:upper:]') > /dev/null
[04:08:41] <shbot> emanuele6: no output
[04:08:52] *** Quits: debsan (~debsan@2800:810:471:8425::1000) (Ping timeout: 256 seconds)
[04:09:29] <emanuele6> # echo hi | tee >(sed 's/^/ooo /' >&1) >(tr '[:lower:]' '[:upper:]' >&1) > /dev/null
[04:09:30] <shbot> emanuele6: no output
[04:09:46] <emanuele6> this works on my PC :/
[04:10:17] <greycat> I have no idea what you're really trying to do, but for god's sake just write to a temp file and cat it multiple times.  You'd be done in 30 seconds.
[04:14:09] <emanuele6> < <(echo hi) tee >(sed 's/^/ooo /') >(tr '[:lower:]' '[:upper:]' >(sed 's/^/ooo') > /dev/null
[04:14:14] <emanuele6> # < <(echo hi) tee >(sed 's/^/ooo /') >(tr '[:lower:]' '[:upper:]' >(sed 's/^/ooo') > /dev/null
[04:14:21] <shbot> emanuele6: Missing terminating quote, bracket or keyword
[04:14:31] <emanuele6> # < <(echo hi) tee >(sed 's/^/ooo /') >(tr '[:lower:]' '[:upper:]') >(sed 's/^/ooo') > /dev/null
[04:14:33] <shbot> emanuele6: no output
[04:14:37] <emanuele6> why?
[04:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:15:37] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[04:15:41] <emanuele6> oh, probably because tee is not /bin/tee
[04:15:44] <emanuele6> # type tee
[04:15:45] <shbot> emanuele6: tee is a shell builtin
[04:16:44] <emanuele6> # < <(echo hi) /bin/tee >(sed 's/^/ooo /') >(tr '[:lower:]' '[:upper:]') >(sed 's/^/ooo') > /dev/null
[04:16:46] <shbot> emanuele6: HI
[04:16:46] <shbot> emanuele6: sed: -e expression #1, char 7: unterminated `s' command
[04:16:52] <emanuele6> # < <(echo hi) /bin/tee >(sed 's/^/ooo /') >(tr '[:lower:]' '[:upper:]') >(sed 's/^/ooo/') > /dev/null
[04:16:54] <shbot> emanuele6: HI
[04:18:56] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[04:22:25] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 268 seconds)
[04:22:42] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[04:22:51] *** Joins: iomari891 (~iomari891@105.112.138.38)
[04:24:06] <emanuele6> i'm not sure why the >(sed) does not work on shbot (sed is GNU sed), multiple >(tr) do work fine
[04:25:11] *** Joins: edlou (uid413273@id-413273.brockwell.irccloud.com)
[04:28:25] *** Quits: darkxploit (~jay@32.209.19.50) (Ping timeout: 248 seconds)
[04:28:42] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[04:30:01] *** Quits: bertptrs (~quassel@user/bertptrs) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:30:34] *** Joins: bertptrs (~quassel@user/bertptrs)
[04:31:29] <tirnanog> # < <(echo hi) /bin/tee >(sed 's/^/ooo /') >(tr '[:lower:]' '[:upper:]') >(sed 's/^/ooo/') > /dev/null; wait
[04:31:30] <shbot> tirnanog: HI
[04:31:31] <shbot> tirnanog: ooo hi
[04:31:31] <shbot> tirnanog: ooohi
[04:40:58] <greycat> Temp files are much easier.
[04:43:07] <emanuele6> but why does tr work and sed doesn't?
[04:43:41] <emanuele6> just because it's faster?
[04:43:44] <tirnanog> probably.
[04:45:42] <tirnanog> the output sequencing is intrinsically unpredictable but I imagine that you'll find tr taking the top spot each time.
[04:46:22] <tirnanog> and with the two sed commands occasionally switching places, so to speak.
[04:48:46] <matthewcroughan> emanuele6: that's what I thought too
[04:49:04] <matthewcroughan> `ffmpeg -vcodec mjpeg -i /dev/video0 -f avi - | tee -- >(nc -l 1234) >(nc -l 5678)` results in some stdout from ffmpeg being spat out into the console, rather than into the second command, any ideas?
[04:49:18] *** Quits: alzgh (~alzgh@163.172.90.118) (Quit: Client closed)
[04:49:38] <emg> tee does write to stdout
[04:49:53] <emg> if you don't want that, then redirect stdout to /dev/null
[04:50:11] <emg> "rather than into the second command"   <--  do you have proof that it's not getting into the second command?
[04:51:28] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 272 seconds)
[04:52:48] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[04:52:57] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 248 seconds)
[04:53:02] <emanuele6> matthewcroughan: read the last example that we sent
[04:53:24] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[04:53:36] <emanuele6> matthewcroughan: < <(ffmpeg -vcodec mjpeg -i /dev/video0 -f avi -) tee -- >(nc -l 1234) >(nc -l 5678) > /dev/null
[04:54:07] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:55:02] <emanuele6> also, add a wait at the end
[04:55:10] <emanuele6> < <(ffmpeg -vcodec mjpeg -i /dev/video0 -f avi -) tee -- >(nc -l 1234) >(nc -l 5678) > /dev/null; wait
[04:55:40] <emg> why the    < <(ffmpeg)   instead of     ffmpeg |     ?
[04:55:53] <llua> leetness
[04:56:03] *** Joins: superboot (~agentgasm@user/superboot)
[04:56:52] *** Quits: michigan_ (uid507982@id-507982.charlton.irccloud.com) ()
[04:56:55] *** Quits: riddle (riddle@user/riddle) (Quit: WeeChat 2.3)
[04:57:27] *** Joins: riddle (riddle@user/riddle)
[04:57:31] <emanuele6> right, that works too
[04:58:14] <emanuele6> shbot's silly tee builtin confused me so i started using < <() instead of | because that seemed to work better
[04:58:43] <emanuele6> ffmpeg -vcodec mjpeg -i /dev/video0 -f avi - | tee -- >(nc -l 1234) >(nc -l 5678) > /dev/null; wait
[04:59:45] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 258 seconds)
[04:59:46] <emg> huh, didn't know bash had tee as a loadable builtin
[04:59:59] <emanuele6> emg: https://git.savannah.gnu.org/cgit/bash.git/tree/examples/loadables/tee.c
[05:00:47] <akoana> why is wait needed?
[05:00:51] <akoana> # < <(date +%T) /bin/tee >(sed 's/$/ ZZZ/') >(tr '[:lower:]' '[:upper:]') >(sed 's/^/AAA /')  >/dev/null ; sleep 1
[05:00:54] <shbot> akoana: 00:30:52 ZZZ
[05:00:54] <shbot> akoana: 00:30:52
[05:00:54] <shbot> akoana: AAA 00:30:52
[05:01:06] <emanuele6> <(cmd) run in the background
[05:02:21] <akoana> really, here it's just shbot terminating to early without wait, but sleep prevents that
[05:02:36] <akoana> too early*
[05:03:00] <llua> <() is indeed in the background, but since the program is reading input from it, that isn't why the wait is needed
[05:03:00] <tirnanog> wait won't function as intended there, owing to the subshells introduced by the pipeline. it would work with < <(...), heh.
[05:04:59] <akoana> llua: yes, that's what I though too, wait isn't needed in this case...
[05:05:23] <llua> >() is async tho
[05:05:35] *** Joins: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net)
[05:05:52] <llua> and may be a reason to want to wait
[05:06:06] <emanuele6> yeah, i meant to say that >() runs in the background, not <()
[05:06:27] <emanuele6> my shift key doesn't work well 
[05:06:46] <emanuele6> (> is shift+< in my keyboard layout)
[05:10:23] <tirnanog> in the case of the pipelined example, you'd need to place the wait command in the same subshell as where tee is being executed for it to count.
[05:11:42] <emanuele6> right
[05:12:00] <emanuele6> ffmpeg -vcodec mjpeg -i /dev/video0 -f avi - | { tee -- >(nc -l 1234) >(nc -l 5678) > /dev/null; wait ;}
[05:12:15] <emanuele6> this is also better because it does not mess with the jobs of the main shell
[05:12:52] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[05:13:43] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:13:49] <greycat> I don't see how piping to two *simultaneous* network-listening processes is a solution to "such that I can listen to its output twice"
[05:14:31] <greycat> if the output is a playlist of URLs, which is the only thing that ever made sense to me in this weird-ass problem, and you wanted to run the playlist multiple times, then saving the output to a temp file is the perfect solution
[05:15:02] <greycat> but people in this channel are allergic to temp files, so I suppose you'd save the results in a variable
[05:15:20] <tirnanog> noooo, not my filesystemerino.
[05:15:20] <greycat> either that, or it's !b1 !b2
[05:17:48] *** Joins: ano (~weechat@user/ano)
[05:26:56] *** Joins: mnrmnaughmnrgle (~mnrmnaugh@68.162.206.56)
[05:29:45] *** Quits: mnrmnaugh (~mnrmnaugh@68.162.206.56) (Ping timeout: 248 seconds)
[05:30:35] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:10] *** Joins: Gerula (~Gerula@user/gerula)
[05:31:53] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 248 seconds)
[05:34:47] *** Joins: vlm (~vlm@user/vlm)
[05:36:46] *** Quits: andydude (~arobbins@c-76-111-101-250.hsd1.md.comcast.net) (Quit: andydude)
[05:40:20] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:46:47] *** Sabinno is now known as DenverCoder9
[05:46:54] *** Quits: LiftLeft (~LiftLeft@154.21.114.116) (Ping timeout: 258 seconds)
[05:46:56] *** DenverCoder9 is now known as Sabinno
[05:56:54] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[05:57:36] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[05:58:56] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[05:59:59] *** Joins: LiftLeft (~LiftLeft@154.21.23.99)
[06:03:46] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: bye)
[06:04:10] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[06:04:13] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[06:04:19] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:04:39] *** Quits: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net) (Remote host closed the connection)
[06:05:07] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2)
[06:07:30] *** Joins: lmv (vml@onyx.moon-station.us)
[06:07:44] <lmv> found you!
[06:07:49] <lmv> ;D
[06:09:13] *** Quits: zro (~zro@user/zro) (Ping timeout: 248 seconds)
[06:10:04] *** Joins: fabs (~fabs@c-66-31-20-19.hsd1.ma.comcast.net)
[06:10:40] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 258 seconds)
[06:11:04] *** Joins: zro (zro@user/zro)
[06:11:40] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[06:14:55] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[06:17:16] <eggbean> $alert == 0, so why isn't the bit after || happening?
[06:17:18] <eggbean> (( alert > 0 )) && tmux set status-left-style "bg=#{@bell}" || tmux set -g status-left-style "bg=default"
[06:17:20] *** Quits: noarb- (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[06:20:23] *** Joins: andydude (~arobbins@c-76-111-101-250.hsd1.md.comcast.net)
[06:20:23] *** Quits: andydude (~arobbins@c-76-111-101-250.hsd1.md.comcast.net) (Client Quit)
[06:21:58] <phy1729> It should; however,
[06:22:01] <phy1729> !&&||
[06:22:01] <greybot> foo && bar || baz is not equivalent to 'if foo; then bar; else baz; fi'. In the former case, baz will happen if *either* foo *or* bar return false. In the latter case, baz will only trigger if foo returns false, regardless of the exit code for bar. See http://mywiki.wooledge.org/BashPitfalls
[06:22:43] *** Joins: noarb (~noarb@user/noarb)
[06:23:15] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Ping timeout: 244 seconds)
[06:23:40] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[06:23:52] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[06:24:36] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[06:25:16] <eggbean> phy1729: Yeah I use this a lot and shellcheck is always going on about it, but in this case and the other cases I use it I don't think it's a problem. But why isn't working here?
[06:26:35] <eggbean> This method is even used in the default debian .bashrc, iirc, and shellcheck doesn't like that either
[06:26:44] *** Joins: dza (~dza@user/dza)
[06:27:39] <eggbean> I'll try the if statement way
[06:29:24] <phy1729> It should be working; I suspect alert is not 0
[06:30:22] <eggbean> Yeah, looks like it. 
[06:30:33] <phy1729> !itworks
[06:30:34] <greybot> It is a usual technique to make a program and then to test it. But: program testing can be a very effective way to show the presence of bugs, but it is hopelessly inadequate for showing their absence. -- Edsger W. Dijkstra
[06:30:48] <phy1729> Just because && || has worked for you so far doesn't mean it isn't incorrect
[06:31:40] <eggbean> I like the way it looks
[06:31:59] <phy1729> Because it looks "leet"?
[06:32:14] <eggbean> The if stuff just looks messy
[06:33:51] *** Quits: lmv (vml@onyx.moon-station.us) (Quit: leaving)
[06:34:14] <eggbean> I do of course use if statements when it would matter
[06:34:17] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 248 seconds)
[06:35:44] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Quit: Leaving)
[06:36:17] <eggbean> Oh duh. shoudl be $alert, not alert
[06:36:27] <phy1729> not in ((
[06:36:32] <eggbean> oh
[06:37:40] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[06:38:42] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 268 seconds)
[06:40:42] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[06:46:01] *** Quits: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net) (Read error: Connection reset by peer)
[06:49:46] *** Quits: Sabinno (~Sabinno@75.26.52.152) (Quit: Client closed)
[06:54:01] <greycat> !pf ||
[06:54:01] <greybot> https://mywiki.wooledge.org/BashPitfalls#pf22 -- Don't do this! -- cmd1 && cmd2 || cmd3
[06:54:11] *** Joins: gnoo (~gnoo@user/gnoo)
[06:55:30] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[06:57:03] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 258 seconds)
[06:57:36] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:04:08] *** Joins: jos1 (~jos3@dyndsl-091-096-040-007.ewe-ip-backbone.de)
[07:06:49] *** Quits: jos2 (~jos3@dyndsl-178-142-071-191.ewe-ip-backbone.de) (Ping timeout: 248 seconds)
[07:07:39] *** Joins: Dotz0cat (~Dotz0cat@h41.199.117.75.dynamic.ip.windstream.net)
[07:09:15] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[07:11:46] <emanuele6> variable substitution in (( is evil
[07:12:06] <emanuele6> or any substitution
[07:13:38] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[07:15:38] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[07:16:03] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[07:16:22] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:18:01] *** Joins: debsan (~debsan@2800:810:471:8425::1000)
[07:19:32] *** Quits: debsan (~debsan@2800:810:471:8425::1000) (Remote host closed the connection)
[07:20:02] *** Joins: kingjulian (~kingjulia@41.1.65.185)
[07:21:38] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[07:26:39] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:30:40] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:34:12] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 268 seconds)
[07:37:34] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[07:37:55] *** mnrmnaughmnrgle is now known as mnrmnaugh
[07:38:05] *** Joins: gnoo (~gnoo@user/gnoo)
[07:39:21] *** Quits: zro (zro@user/zro) (Ping timeout: 248 seconds)
[07:40:01] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.2)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:21] <eggbean> why?
[07:40:41] <emanuele6> eggbean: it's code injection
[07:41:07] <eggbean> any substitution? seems extreme
[07:41:18] <emanuele6> any substitution in ((
[07:41:23] *** Joins: zro (~zro@user/zro)
[07:41:52] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[07:44:03] <emanuele6> # a=b b=2; printf 'no sub: %s\n' "$(( a + 1 ))"; printf 'sub: %s\n' "$(( $a + 1 ))"
[07:44:05] <shbot> emanuele6: no sub: 3
[07:44:05] <shbot> emanuele6: sub: 3
[07:44:35] <emanuele6> # a=' b' b=2; printf 'no sub: %s\n' "$(( a + 1 ))"; printf 'sub: %s\n' "$(( $a + 1 ))"
[07:44:36] <shbot> emanuele6: no sub: 3
[07:44:36] <shbot> emanuele6: sub: 3
[07:44:43] <emanuele6> # a=''; printf 'no sub: %s\n' "$(( a + 1 ))"; printf 'sub: %s\n' "$(( $a + 1 ))"
[07:44:44] <shbot> emanuele6: no sub: 1
[07:44:44] <shbot> emanuele6: sub: 1
[07:45:00] <emanuele6> # a=''; printf 'no sub: %s\n' "$(( a * 1 ))"; printf 'sub: %s\n' "$(( $a * 1 ))"
[07:45:02] <shbot> emanuele6: no sub: 0
[07:45:02] <shbot> emanuele6: bash: * 1 : syntax error: operand expected (error token is "* 1 ")
[07:45:40] <emanuele6> $(($a+1)) was a bad example since +1 evaluates to 1 
[07:46:04] <emanuele6> !$(($ > also there is this
[07:46:04] <greybot> also there is this: # six=1+5 nine=8+1; echo $(($six * $nine)) vs $((six * nine))
[07:46:39] *** Joins: darkbit (~db@152.32.99.67)
[07:49:47] <emanuele6> # user_input='user_input=11,1'; if (($user_input < 10)); then echo "$user_input is less than 10"; fi
[07:49:49] <shbot> emanuele6: 11 is less than 10
[07:49:51] <emanuele6> # user_input='user_input=11,1'; if ((user_input < 10)); then echo "$user_input is less than 10"; fi
[07:49:52] <shbot> emanuele6: 11 is less than 10
[07:49:55] <emanuele6> i am surprised
[07:50:13] <emanuele6> I thought this kind of code injection would only happen with substitution
[07:50:31] <emanuele6> but it seems that bash also evaluates user_input if it is a valid expression
[07:51:01] <emanuele6> oh, it's because user_input evaluates to 1, not because it injects a 1 before < 10
[07:51:59] <emanuele6> # user_input='1,user_input=11'; if ((10 >= user_input)); then echo "$user_input is less than 10"; fi
[07:52:00] <shbot> emanuele6: no output
[07:52:06] <emanuele6> # user_input='1,user_input=11'; if ((10 >= $user_input)); then echo "$user_input is less than 10"; fi
[07:52:07] <shbot> emanuele6: 11 is less than 10
[07:53:15] <emanuele6> putting anything that is user input in a ((...)) is a vulnerability :(
[07:53:16] *** Joins: birkoff (birkoff@birkoff.thunderirc.net)
[07:53:17] *** Quits: birkoff (birkoff@birkoff.thunderirc.net) (Changing host)
[07:53:17] *** Joins: birkoff (birkoff@user/birkoff)
[07:53:18] <emanuele6> i am sad now
[07:54:28] <izabera> # user_input='q[0$(date >&2)]'; if ((10 >= user_input)); then echo "$user_input is less than 10"; fi
[07:54:29] <shbot> izabera: Sat Aug 14 03:24:28 UTC 2021
[07:54:29] <shbot> izabera: q[0$(date >&2)] is less than 10
[07:54:47] <emanuele6> scary
[07:56:23] <izabera> it's kinda bad because if you try to sanitise things and accept simple variables that don't contain $( ) or ` `, you can just add another indirection level and hide it
[07:56:51] <izabera> you're only safe with numbers and simple math symbols
[07:57:17] <emanuele6> !scriptinglanguage
[07:57:18] <greybot> Consider using perl, python, or ruby for such a task.
[07:57:25] <emanuele6> :D
[07:58:52] <emanuele6> omg
[07:59:23] <emanuele6> # declare -i user_input; read -r user_input <<< 'q[0$(date >&2)]'
[07:59:24] <shbot> emanuele6: Sat Aug 14 03:29:23 UTC 2021
[07:59:45] <izabera> right yeah and same in [[ x -lt y ]]
[07:59:51] <emanuele6> this freaks me out
[08:02:17] <izabera> # user_input='q[0$(date >&2)]'; unset 'var[user_input]'    # also this seems safe but it's not
[08:02:19] <shbot> izabera: no output
[08:02:28] <izabera> # user_input='q[0$(date >&2)]'; var=(); unset 'var[user_input]'
[08:02:29] <shbot> izabera: Sat Aug 14 03:32:28 UTC 2021
[08:03:15] <emanuele6> mathematics considered harmful
[08:03:50] <izabera> # user_input='q[0$(date >&2)]'; [[ -v 'var[user_input]' ]]
[08:03:51] <shbot> izabera: Sat Aug 14 03:33:51 UTC 2021
[08:04:07] <izabera> # user_input='q[0$(date >&2)]'; [[ ${var[user_input]+x} ]]
[08:04:08] <shbot> izabera: Sat Aug 14 03:34:08 UTC 2021
[08:05:13] <emanuele6> # user_input='q[0$(date >&2)]'; printf '%s\n' "${PWD:user_input}"
[08:05:14] <shbot> emanuele6: Sat Aug 14 03:35:13 UTC 2021
[08:05:14] <shbot> emanuele6: /root
[08:07:39] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[08:08:07] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: bye)
[08:08:26] <izabera> this is a pretty serious footgun that no   set -euo pipefail   will stop
[08:08:27] <neshpion> what is this stuff with q[] actually doing
[08:08:35] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[08:09:56] <izabera> neshpion: q is interpreted as an array and bash decides to evaluate '0$(date >&2)' to find the index
[08:13:21] <izabera> this happens whenever user_input is used in a math context, and it happens in more places than most people realise
[08:13:36] <neshpion> is (( ${#some_internal_array[@]} )) safe?
[08:13:47] <izabera> yes
[08:14:09] <neshpion> and (( $# )) should be safe right?  it's not user input
[08:14:11] <izabera> yes
[08:14:20] <neshpion> ok those are the only cases in which $ appears in any of my math contexts
[08:14:27] * neshpion safe
[08:14:39] <izabera> right but please look at the unset examples ^
[08:14:46] <izabera> and the [[ -v var ]] ^
[08:14:53] <neshpion> i am inwincible
[08:14:57] <izabera> okies
[08:16:51] <neshpion> i don't think any of my expansions include actual user input anywhere
[08:17:16] <neshpion> actually no i can think of several places
[08:17:17] <neshpion> :D
[08:17:39] <neshpion> fg
[08:17:40] <neshpion> oops
[08:17:42] <izabera> right but in a normal language it shouldn't be /impossible/ to check if a key exists in an array 
[08:18:10] <neshpion> i have a place where i'm using an associative array where i really don't *need* to, i should just boil that down to more regular varialbes
[08:18:18] <izabera> assoc is fine
[08:18:35] <emanuele6> associative arrays are not math
[08:19:00] <neshpion> actually the keys are not defined by user input, just the values
[08:19:41] <emanuele6> # declare -A arr=(); user_input='q[0$(date >&2)]'; : "${arr[user_input]}"
[08:19:42] <shbot> emanuele6: no output
[08:19:44] <emanuele6> # declare -a arr=(); user_input='q[0$(date >&2)]'; : "${arr[user_input]}"
[08:19:45] <shbot> emanuele6: Sat Aug 14 03:49:45 UTC 2021
[08:20:09] <emanuele6> [user_input] indexes the string "user_input" in associative arrays
[08:20:18] <neshpion> oh
[08:24:23] <emanuele6> !faq 54
[08:24:24] <greybot> https://mywiki.wooledge.org/BashFAQ/054 -- How can I tell whether a variable contains a valid number?
[08:25:21] <neshpion> is parameter expansion sufficient to parse proto://domain:port or should i keep on using ripgrep/PCRE for that?
[08:26:26] <neshpion> # addr='https://www.thing.com:8080'; proto=${addr%%://*}; domain=${addr#*://}; domain=${domain%%:*}; port=${addr##*:}; declare -p addr proto domain port
[08:26:33] <shbot> neshpion: declare -- addr="https://www.thing.com:8080"
[08:26:34] <shbot> neshpion: declare -- proto="https"
[08:26:34] <shbot> neshpion: etc... ( http://ix.io/3vXq )
[08:27:40] <izabera> how do you use ripgrep for that?
[08:28:25] <neshpion> proto=$(rg -o '^\w+://' <<<$addr); domain=$(rg -o '\w+\.\w+\.\w+' <<<$addr); port=$(rg -o ':[0-9]+' <<<$addr)
[08:29:35] <izabera> right but i thought ripgrep's main feature was that it greps recursively 
[08:29:45] <neshpion> yes but i just use it everywhere
[08:30:40] <neshpion> sometimes the -o -r combination is more clear than sed, and it has PCRE capabilities which sed lacks, so it's my go-to for most pattern matching tasks that i would have used grep/sed for in its absence
[08:31:51] <izabera> ok it looks like you also did it with pe
[08:32:47] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Remote host closed the connection)
[08:33:10] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[08:33:23] <neshpion> yes i was just wondering if there are cases where pe might not be sufficient for parsing proto/domain/port, i may not be creative enough to think of a valid one that breaks what i did
[08:33:56] *** Joins: Atque (~Atque@user/atque)
[08:35:18] <emanuele6> neshpion: <<<$addr should have quotes
[08:35:23] <emanuele6> 42# var='a    b'; cat <<< $var; cat <<< "$var"
[08:35:24] <shbot> emanuele6: a b
[08:35:24] <shbot> emanuele6: a    b
[08:35:26] <emanuele6> # var='a    b'; cat <<< $var; cat <<< "$var"
[08:35:28] <shbot> emanuele6: a    b
[08:35:28] <shbot> emanuele6: a    b
[08:36:04] <emanuele6> unless you don't want to support bash 4.2 specifically to save two characters
[08:36:09] <emanuele6> 41# var='a    b'; cat <<< $var; cat <<< "$var"
[08:36:17] <emanuele6> 4# var='a    b'; cat <<< $var; cat <<< "$var"
[08:36:18] <shbot> emanuele6: a    b
[08:36:18] <shbot> emanuele6: a    b
[08:36:22] <emanuele6> 3# var='a    b'; cat <<< $var; cat <<< "$var"
[08:36:24] <shbot> emanuele6: a b
[08:36:24] <shbot> emanuele6: a    b
[08:36:57] <emanuele6> oh, nevermind, any version before 4.3 needs quotes (i remembered that it was just 4.2 for some reason)
[08:38:06] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[08:38:08] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:42:03] <neshpion> actually if a user provides only proto://domain, then port=${addr##*:} will get the domain so i should declare -i port
[08:42:41] <emanuele6> lmao
[08:43:12] <neshpion> or not because that throws a syntax error :^)
[08:43:22] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[08:43:25] <emanuele6> neshpion: not just that
[08:44:03] <neshpion> actually isn't an assignment to a -i var implicitly math context?
[08:44:26] <emanuele6> # declare -i port; addr='https://www.thing.com:q[0$(date >&2)]'; port=${addr##*:}
[08:44:28] <shbot> emanuele6: Sat Aug 14 04:14:27 UTC 2021
[08:44:34] <neshpion> so yes :^)
[08:44:45] <emanuele6> # declare -i user_input; read -r user_input <<< 'q[0$(date >&2)]'
[08:44:46] <shbot> emanuele6: Sat Aug 14 04:14:45 UTC 2021
[08:47:17] <emanuele6> neshpion: you can use `if printf %d "$user_input" &> /dev/null; then echo number; else echo 'not a number'; fi` to check that user_input is a number without a math_context
[08:48:15] <emanuele6> note that this also passes if userinput is an octal or hex number
[08:48:52] <emanuele6> # if printf %d 0xff &> /dev/null; then echo number; else echo 'not a number'; fi
[08:48:53] <shbot> emanuele6: number
[08:48:58] <emanuele6> # if printf %d 01 &> /dev/null; then echo number; else echo 'not a number'; fi
[08:48:59] <shbot> emanuele6: number
[08:49:05] <emanuele6> # if printf %d a &> /dev/null; then echo number; else echo 'not a number'; fi
[08:49:07] <shbot> emanuele6: not a number
[08:50:53] <emanuele6> oh, wait it's not that simple
[08:53:25] *** mnrmnaugh is now known as KeziahMason
[08:54:26] <emanuele6> # user_input=0; if printf %d "$user_input" &> /dev/null; then echo -n number; echo ' $((user_input))'; else echo 'not a number'; fi
[08:54:28] <shbot> emanuele6: number $((user_input))
[08:54:37] <emanuele6> # user_input=0; if printf %d "$user_input" &> /dev/null; then echo -n number; echo " $((user_input))"; else echo 'not a number'; fi
[08:54:38] <shbot> emanuele6: number 0
[08:54:43] <emanuele6> # user_input=a; if printf %d "$user_input" &> /dev/null; then echo -n number; echo " $((user_input))"; else echo 'not a number'; fi
[08:54:44] <shbot> emanuele6: not a number
[08:55:05] <emanuele6> # user_input=\''q[$(date >&2)]'; if printf %d "$user_input" &> /dev/null; then echo -n number; echo " $((user_input))"; else echo 'not a number'; fi
[08:55:07] <shbot> emanuele6: numberbash: 'q[$(date >&2)]: syntax error: operand expected (error token is "'q[$(date >&2)]")
[08:55:57] <emanuele6> it does not let you run date because the leading ' is a syntax error, but it detects it as a number when it is not
[08:56:00] <emanuele6> oh wait
[08:56:03] <emanuele6> !$(("
[08:56:03] <greybot> Quotes expanding in math contexts is a bash-specific feature. If you must use substitutions in a math context (e.g. you need to do maths on $?, $# or ${#var}) and you are targeting POSIX sh, you should not quote those substitutions since the quotes are not guaranteed to expand: e.g. `echo "$(( "$#" + 1 ))"' causes a syntax error in dash and zsh; use `echo "$(( $# + 1 ))"' instead.
[08:56:18] <emanuele6> i wonder if we can exploit this ^
[08:56:29] <emanuele6> # user_input='"q[$(date >&2)]"'; if printf %d "$user_input" &> /dev/null; then echo -n number; echo " $((user_input))"; else echo 'not a number'; fi
[08:56:31] <shbot> emanuele6: numberbash: "q[$(date >&2)]": syntax error: operand expected (error token is ""q[$(date >&2)]"")
[08:56:52] <emanuele6> no, "unfortunately"
[08:57:08] <llua> you could've totally did most of that in a pm
[08:57:13] <neshpion> # a() { b() { e=$?; echo returning $e; }; trap b RETURN; echo 'a!'; return 3; }; a
[08:57:15] <shbot> neshpion: a!
[08:57:15] <shbot> neshpion: returning 0
[08:57:26] <neshpion> can i make b grab a's return code?
[08:57:40] <emanuele6> # user_input='"q[$(date >&2)]"'; if printf %d "$user_input" &> /dev/null && [[ $user_input != ["']* ]]; then echo -n number; echo " $((user_input))"; else echo 'not a number'; fi
[08:57:47] <shbot> emanuele6: Missing terminating quote, bracket or keyword
[08:57:56] <emanuele6> # user_input='"q[$(date >&2)]"'; if printf %d "$user_input" &> /dev/null && [[ $user_input != [\"\']* ]]; then echo -n number; echo " $((user_input))"; else echo 'not a number'; fi
[08:57:57] <shbot> emanuele6: not a number
[08:58:07] <emanuele6> this should be safe
[08:58:15] <emanuele6> printf %d "$user_input" &> /dev/null && [[ $user_input != [\"\']* ]]
[08:59:39] <a1> how about you try explainshell.net or shellcheck.net
[08:59:48] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[09:00:35] <emanuele6> a1: https://explainshell.com/explain?cmd=sort+%2B0nr+-2+%2B2d
[09:01:00] <a1> yes it's not perfect, we know
[09:01:16] *** Joins: mci64 (~x@185.242.190.95)
[09:01:33] <emanuele6> a1: it can't even parse the last command I typed
[09:01:53] <a1> then use a different type.. or a shell, and quit spamming in her
[09:01:55] <emanuele6> https://explainshell.com/explain?cmd=printf+%25d+%22%24user_input%22+%26%3E+%2Fdev%2Fnull+%26%26+%5B%5B+%24user_input+%21%3D+%5B%5C%22%5C%27%5D*+%5D%5D
[09:02:59] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[09:03:41] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[09:03:49] *** Joins: noarb (~noarb@user/noarb)
[09:04:47] <emanuele6> neshpion: yes
[09:05:05] <emanuele6> # a() { b() { e=$?; echo returning $e; }; trap b RETURN; echo 'a!'; (exit 3) ;}; a
[09:05:07] <shbot> emanuele6: a!
[09:05:07] <shbot> emanuele6: returning 3
[09:05:41] *** Quits: noarb (~noarb@user/noarb) (Client Quit)
[09:05:53] <emanuele6> if you want to return in the middle of the function, use e.g. `(exit 3); return' instead of just `return 3`
[09:09:36] <emanuele6> `return 3' does not set $?; $? is set to 3 when the function finishes running
[09:10:32] <neshpion> i think i've solved my number sanitation problem (i need ints > 0)
[09:10:45] *** Joins: noarb (~noarb@user/noarb)
[09:12:07] <neshpion> # setint() { local -n var=$1; local val=$(printf %d "$2"); (( var=$val <= 0 )) && echo yikes; }; declare -i a; setint a 2; setint a; setint a yeet;
[09:12:09] <shbot> neshpion: yikes
[09:12:09] <shbot> neshpion: bash: printf: yeet: invalid number
[09:12:09] <shbot> neshpion: yikes
[09:16:15] <emanuele6> neshpion: if $2 starts with ' or ", it will be detected as a number 
[09:17:20] <emanuele6> maybe you are ok with that, but, if you are, you should use LC_CTYPE=C with printf
[09:18:00] <emanuele6> also, you can't set a to 0 or negative numbers with that function
[09:18:30] <izabera> this is insane btw
[09:18:49] <emanuele6> i think my suggestion was the best solution
[09:18:54] <emanuele6> printf %d "$user_input" &> /dev/null && [[ $user_input != [\"\']* ]]
[09:18:59] <izabera> no i get it, i meant the whole ordeal 
[09:19:10] *** Joins: aramtsamtsam (~Thunderbi@2001:861:388a:5600:a00:5cff:ee34:76b)
[09:19:18] <neshpion> i need >0 ints
[09:20:11] <neshpion> hmmm `printf %d "${2//[\'\"]/}"` might work
[09:20:32] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Quit: PROTO-IRC v0.73a (C) 1988 NetSoft - Built on 11-13-1988 on AT&T System V)
[09:20:44] <emanuele6> neshpion: then ''''0'''2''"""" would be ok
[09:20:57] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[09:21:37] <neshpion> i can't see why my users would pass that in but ok :^)
[09:21:46] <emanuele6> neshpion: i'd use: printf %d "$user_input" &> /dev/null && [[ $user_input != [\"\']* && $user_input != 0* && user_input >= 0 ]]
[09:22:22] <emanuele6> if you don't want octal and hex
[09:22:41] <emanuele6> if you are ok with hex and octal remove $user_info != 0*
[09:23:19] <neshpion> yes as long as printf resolves it to a decimal int > 0
[09:23:30] <emanuele6> oh
[09:23:41] <neshpion> it's just args for things like number of jobs, sleep times, etc
[09:23:49] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[09:24:12] <emanuele6> then just use: printf -v ok_number %d "$user_input" 2> /dev/null && (( ok_number >= 0 ))
[09:24:19] <emanuele6> and allow ordeal too
[09:24:41] <emanuele6> actually, since we allow ordeal, LC_CTYPE=C printf -v ok_number %d "$user_input" 2> /dev/null && (( ok_number >= 0 ))
[09:24:58] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[09:25:25] <emanuele6> >0, not >=0
[09:26:53] *** Joins: vishal (~vishal@fedora/vishal)
[09:27:39] *** Joins: timj (~timj@user/timj)
[09:27:48] <emanuele6> izabera: wait, it was a pun, lol. it's ordinal, not ordeal
[09:28:29] *** Quits: timj1 (~timj@user/timj) (Ping timeout: 252 seconds)
[09:28:53] *** Joins: pj (~pj@ghettoforge/pj)
[09:30:10] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 256 seconds)
[09:31:34] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.2)
[09:32:09] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[09:33:00] *** Quits: aramtsamtsam (~Thunderbi@2001:861:388a:5600:a00:5cff:ee34:76b) (Ping timeout: 256 seconds)
[09:33:02] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 245 seconds)
[09:33:04] *** Quits: carlos (~pum@user/carlos) (Ping timeout: 258 seconds)
[09:33:50] *** Quits: kingjulian (~kingjulia@41.1.65.185) (Ping timeout: 258 seconds)
[09:38:54] *** Joins: furrymcgee (~devuan@31.179.186.66)
[09:39:40] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:5490:ac06:9bf6:a5de)
[09:39:40] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:5490:ac06:9bf6:a5de) (Changing host)
[09:39:40] *** Joins: skapata (~Skapata@user/skapata)
[09:48:50] *** Quits: korros (korros@2600:3c03::f03c:92ff:febf:689a) (Ping timeout: 268 seconds)
[09:49:15] *** Joins: korros (~korros@li1845-92.members.linode.com)
[09:52:24] *** Quits: ZucZero (~Zucca@user/zucca) (Quit: WeeChat 3.1)
[09:52:41] *** Joins: Zucca (~Zucca@user/zucca)
[09:52:59] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:54:38] *** Joins: totenkoph (~scythe@user/totenkoph)
[09:59:08] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[09:59:44] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[10:00:15] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[10:00:34] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[10:09:33] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[10:10:44] <twkm> other things are insane as well.
[10:13:41] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[10:24:55] *** Joins: lordrishav (~LordRisha@157.42.0.70)
[10:25:18] *** Joins: aakashi2001 (~aakashi20@103.61.255.3)
[10:26:02] *** Joins: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de)
[10:29:50] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:31:27] *** Joins: Mo (~Mo@dynamic-077-000-061-246.77.0.pool.telefonica.de)
[10:35:11] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[10:35:56] *** Quits: alnr (~alnr@38.125.204.99) (Ping timeout: 258 seconds)
[10:36:11] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[10:36:42] *** Quits: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de) (Ping timeout: 258 seconds)
[10:40:08] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[10:40:58] *** Joins: pystardust (~pystardus@117.96.229.96)
[10:41:13] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Remote host closed the connection)
[10:41:37] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[10:42:43] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Remote host closed the connection)
[10:43:09] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[10:43:21] *** Quits: LiftLeft (~LiftLeft@154.21.23.99) (Ping timeout: 248 seconds)
[10:43:53] *** Quits: Mo (~Mo@dynamic-077-000-061-246.77.0.pool.telefonica.de) (Ping timeout: 248 seconds)
[10:44:13] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Remote host closed the connection)
[10:44:20] *** Joins: dom2 (~dom2@c-65-96-173-68.hsd1.ma.comcast.net)
[10:44:36] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[10:46:50] *** Joins: Adoi (~Adoi@user/adoi)
[10:48:53] *** Joins: alnr (~alnr@38.125.204.99)
[10:49:12] *** Quits: lordrishav (~LordRisha@157.42.0.70) (Quit: WeeChat 2.8)
[10:53:13] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:53:24] *** Joins: alzgh (~alzgh@216.155.158.214)
[10:53:41] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[10:55:01] <alzgh> hello, what is the name of `(( ))` where you can put in arithmetic comparisons in conditionals but also do variable assignment, bitwise operations, etc.? It isn't arithmetic expansion $(( )).
[10:56:08] *** Joins: frostwork (~frostwork@user/frostwork)
[10:56:27] *** Quits: joo (~joo@fsf/member/joo--) (Ping timeout: 268 seconds)
[10:56:30] *** Quits: aakashi2001 (~aakashi20@103.61.255.3) (Read error: Connection reset by peer)
[10:58:32] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:59:45] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[11:00:29] <twkm> technically it has no name, it's just the (()) compound command.  it is identical to the let command -- usually the expression is quoted since whitespace is significant for let but not for (()).
[11:00:56] *** Joins: mjbatty_ (~mjbatty@82.2.17.205)
[11:01:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[11:01:38] *** Lord_of_Life_ is now known as Lord_of_Life
[11:03:54] <twkm> some might call it an arithmetic expression because the expression is processed using the arithmetic evaluation rules.
[11:04:28] *** Joins: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de)
[11:04:29] <twkm> but such expressions can be elsewhere, such as the index for an indexed array.
[11:05:28] <twkm> # x=0 a=(one) ; echo $x ${a[x++]} $x
[11:05:30] <shbot> twkm: 0 one 1
[11:08:16] *** Joins: joo (~joo@87-49-147-206-mobile.dk.customer.tdc.net)
[11:08:16] *** Quits: joo (~joo@87-49-147-206-mobile.dk.customer.tdc.net) (Changing host)
[11:08:16] *** Joins: joo (~joo@fsf/member/joo--)
[11:13:07] *** Quits: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[11:14:02] *** Quits: WinterStar (~IceLight@user/icelight) (Quit: WeeChat 3.2)
[11:14:45] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[11:15:09] *** Joins: BSaboia (~bsaboia@188-178-217-166-cable.dk.customer.tdc.net)
[11:15:35] *** Quits: dom2 (~dom2@c-65-96-173-68.hsd1.ma.comcast.net) (Ping timeout: 268 seconds)
[11:16:12] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[11:17:24] *** Joins: codebam (~codebam@user/codebam)
[11:21:09] *** Joins: WinterStar (~IceLight@user/icelight)
[11:29:10] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 256 seconds)
[11:29:58] <alzgh> thanks
[11:30:22] *** Joins: codebam (~codebam@user/codebam)
[11:31:48] *** Quits: vee_ (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 272 seconds)
[11:33:22] *** Quits: rs (~rs@user/rs) (Ping timeout: 240 seconds)
[11:39:11] *** Quits: mjbatty_ (~mjbatty@82.2.17.205) (Ping timeout: 258 seconds)
[11:39:33] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[11:40:19] *** Joins: mci64 (~x@185.242.190.95)
[11:40:25] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (Ping timeout: 248 seconds)
[11:42:12] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[11:42:19] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[11:42:31] *** Joins: Crescendo (~Crescendo@user/crescendo)
[11:42:59] *** Joins: lordrishav (~LordRisha@157.42.0.70)
[11:43:48] *** Quits: greknod (~grek@203-33-166-232.dyn.iinet.net.au) (Quit: -)
[11:46:35] *** Joins: greknod (~grek@203-33-166-232.dyn.iinet.net.au)
[11:52:04] *** Joins: szutt (~szutt@116.37.2.145)
[11:54:10] *** Joins: kingjulian (~kingjulia@41.1.65.185)
[11:58:39] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[11:58:49] *** Joins: mjbatty_ (~mjbatty@213.205.194.89)
[11:58:52] *** Joins: Crescendo (~Crescendo@user/crescendo)
[11:59:22] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[11:59:38] *** Joins: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de)
[12:03:36] *** Joins: lavaball (felix@31.204.155.215)
[12:03:38] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[12:03:40] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[12:04:06] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:06:23] *** Joins: sokle_68 (~sokle_68@ppp046177047088.access.hol.gr)
[12:10:22] *** Quits: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[12:11:12] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:f0ad:6854:e73:20d8)
[12:11:38] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 272 seconds)
[12:12:00] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:f0ad:6854:e73:20d8) (Client Quit)
[12:13:06] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[12:13:58] *** Joins: Crescendo (~Crescendo@user/crescendo)
[12:16:16] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[12:16:25] *** Joins: joo_ (~joo@87-49-146-190-mobile.dk.customer.tdc.net)
[12:16:25] *** Quits: joo_ (~joo@87-49-146-190-mobile.dk.customer.tdc.net) (Changing host)
[12:16:25] *** Joins: joo_ (~joo@fsf/member/joo--)
[12:16:39] *** Joins: mci64 (~x@185.242.190.95)
[12:16:41] *** Quits: joo (~joo@fsf/member/joo--) (Ping timeout: 248 seconds)
[12:18:36] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 272 seconds)
[12:19:15] *** Quits: scoobydoo (~scooby@138.199.59.36) (Changing host)
[12:19:15] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[12:19:22] *** Quits: mjbatty_ (~mjbatty@213.205.194.89) (Remote host closed the connection)
[12:19:32] *** Joins: sdu (~doo@185.44.146.64)
[12:19:44] *** Joins: mjbatty_ (~mjbatty@213.205.194.89)
[12:19:51] *** Parts: sokle_68 (~sokle_68@ppp046177047088.access.hol.gr) ()
[12:21:29] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 248 seconds)
[12:22:14] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[12:22:25] *** Joins: karakedi (~eAC53C340@user/karakedi)
[12:22:28] *** Quits: milosz__ (~milosz@user/milosz) (Ping timeout: 272 seconds)
[12:23:21] *** Joins: mci64 (~x@185.242.190.95)
[12:23:34] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:28:58] *** Joins: Crescendo (~Crescendo@user/crescendo)
[12:29:20] *** Joins: codebam (~codebam@user/codebam)
[12:33:12] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[12:37:15] *** Joins: earnestly (~earnest@user/earnestly)
[12:37:52] *** Quits: lordrishav (~LordRisha@157.42.0.70) (Changing host)
[12:37:52] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[12:38:17] *** Joins: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de)
[12:38:52] *** Quits: joo_ (~joo@fsf/member/joo--) (Ping timeout: 245 seconds)
[12:39:34] *** Joins: indiana-bones (~indignant@185.216.74.105)
[12:39:49] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[12:40:29] *** Joins: mci64 (~x@185.242.190.95)
[12:42:49] *** Quits: darkbit (~db@152.32.99.67) (Ping timeout: 248 seconds)
[12:43:57] *** Joins: Crescendo (~Crescendo@user/crescendo)
[12:48:08] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[12:50:06] *** Quits: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de) (Ping timeout: 258 seconds)
[12:50:39] *** Joins: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[12:51:11] *** Joins: joo_ (~joo@fsf/member/joo--)
[12:54:20] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-221.prtc.net)
[12:55:37] *** Joins: kingjulian_ (~kingjulia@41.1.80.2)
[12:55:51] *** Quits: kingjulian (~kingjulia@41.1.65.185) (Ping timeout: 258 seconds)
[12:55:57] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[12:56:48] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[12:57:17] *** Joins: mci64 (~x@185.242.190.95)
[12:58:58] *** Joins: Crescendo (~Crescendo@user/crescendo)
[13:00:44] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[13:03:14] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[13:08:21] *** Quits: ByteSlayer (~byteslaye@user/byteslayer) (Quit: That's about it, see ya)
[13:13:57] *** Joins: Crescendo (~Crescendo@user/crescendo)
[13:14:06] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[13:14:28] *** Joins: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de)
[13:14:38] *** Joins: mci64 (~x@185.242.190.95)
[13:18:48] *** Quits: nickodd (~nickodd@user/nickodd) (Quit: nickodd)
[13:19:08] *** Joins: nickodd (~nickodd@user/nickodd)
[13:19:15] *** Joins: polve (~polve@twcitalia/polve)
[13:19:44] *** Joins: xx (~xx@user/xx)
[13:20:16] *** Joins: wstrnr (~wstrnr@user/wstrnr)
[13:21:22] *** Quits: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[13:22:54] <polve> Hi.  When using bash regexes, how can I condense this: "^([[:digit:]] ){2}[[:digit:]]$" into something like "^([[:digit:]] ){3}$", without the last space?
[13:23:20] <wstrnr> this isn't a very complicated regex
[13:23:44] <polve> Do you mean I shouldn't be bothered condensing it?
[13:23:57] <wstrnr> if it works, it's better to leave it as it is. refactoring of regexes is dangerous
[13:24:30] *** Joins: Adois (~Adoi@user/adoi)
[13:24:34] <lopid> consider [0-9]
[13:24:56] <wstrnr> imho, :digit: is better.
[13:25:05] *** Quits: kingjulian_ (~kingjulia@41.1.80.2) (Ping timeout: 268 seconds)
[13:25:19] <polve> wstrnr: thank you, I see your point.  Though what I brought was just the simplest form I could think of in order to explain what I needed, and nothing more
[13:25:54] <polve> lopid: that would reduce it length character-wise, yes.  But it's not what I was specifically after
[13:25:58] <lopid> say what you *actually* want, not proxy by example
[13:27:07] <wstrnr> it seems that polve has 3 columns of numbers.  and he wants to... check the lines for correctness... maybe.
[13:27:18] <polve> I think my way of conveying the question is appropriate, but thanks for the advice lopid 
[13:27:18] *** Joins: Camilo (~hugh@host-92-20-143-244.as13285.net)
[13:27:45] <pystardust> I have a string that contails quoted arguments like string="'something' 'someother thing' 'another string'", I wanna make an array out of this. What are my options other than eval?
[13:28:03] <wstrnr> seems like a trivial thing to do.  digit<space>digit<space>digit would be closer to the point, more obvious
[13:28:09] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 268 seconds)
[13:28:16] <geirha> pystardust: mainly just eval
[13:28:27] <pystardust> ah
[13:29:05] <geirha> bash does not expose any quote-parsing syntax or commands, so you'd have to write one yourself
[13:29:19] <wstrnr> personally, when i have this kind of deal, rarely with digits, but often with hex-digits, i do   x=[[:xdigit:]]; before the [[ ... ]] command, then i write like this: [[ $input == $x\ $x\ $x ]]. something like that
[13:29:36] <pystardust> geirha: I am using jq with @sh , it produces a quoted output like that
[13:30:11] <geirha> then it's safe to eval, so use eval
[13:30:18] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[13:30:29] *** Joins: maroloccio (~marolocci@37.100.6.154)
[13:30:33] *** Joins: nobody_ (~nobody@host-87-0-177-222.retail.telecomitalia.it)
[13:31:24] <pystardust> hmm, i got a better way todo it. I used the @tsv option in jq and then im just using IFS as tab
[13:31:27] <wstrnr> by the way, regexes in bash, especially in the [[ ... ]] command do not need explicit ^ and $, they are already "anchored", right?
[13:31:36] <wstrnr> so when you have the command like say, 
[13:31:40] <maroloccio> Hi. How can I read two variables from a command which outputs valueNULvalue? e.g. read -r first second < <(cmd). Would setting IFS to NUL to do the splitting for me work?
[13:31:42] <wstrnr> # echo 9 3 3 | while read -r x; do [[ $x == [[:digit:]]\ [[:digit:]]\ [[:digit:]] ]] && echo "$x"; done
[13:31:43] <shbot> wstrnr: 9 3 3
[13:31:51] <geirha> that'll work as long as your data will never contain tabs or newlines
[13:31:57] <wstrnr> it's not needed to add ^ and $ in the regex...
[13:32:10] <wstrnr> # echo ancored 9 3 3 this line does not match | while read -r x; do [[ $x == [[:digit:]]\ [[:digit:]]\ [[:digit:]] ]] && echo "$x"; done
[13:32:11] <shbot> wstrnr: no output
[13:32:17] <geirha> wstrnr: no regexes are not anchored
[13:32:25] <geirha> wstrnr: but globs are
[13:32:47] <wstrnr> ah. yeah, right!
[13:33:02] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[13:33:17] *** Joins: aakashi2001 (~aakashi20@103.61.255.59)
[13:33:18] <geirha> maroloccio: { read -rd '' one; read -rd '' two; } < 
[13:33:20] <wstrnr> absolutely right. heh, thanks for this warning
[13:34:04] <maroloccio> geirha: thank you. why can't I read both in a single read statement and have the word splitting do the chopping up for me?
[13:34:27] *** Joins: besnn (~besnn@user/besnn)
[13:34:27] <geirha> because you can't store a NUL byte in IFS
[13:34:41] <Jimmy2027> hi, I have a folder with images that are stored as "image_{step}.png" with step going from 0 to 10000. I'm trying to make a video with the images in this folder using ffmpeg, but they are unsorted.. Does someone know a grlob command that would give the filenames sorted to ffmpeg?
[13:34:43] <pystardust> geirha: man you are really active on this channel. respect
[13:34:43] <geirha> also, what would be the line terminator for read in that case?
[13:34:54] <Jimmy2027> 'glob command
[13:35:15] <geirha> maroloccio: there's also mapfile, if you don't mind reading into an array.  mapfile -d '' -t array < <(cmd)
[13:35:29] <maroloccio> # { read -r -d '' x; read -r -d '' y; echo "$x|$y"; } < <(printf 'a\0b')
[13:35:30] <shbot> maroloccio: a|b
[13:35:57] <geirha> # mapfile -d '' -t array < <(printf 'a\0b'); declare -p array
[13:35:58] <shbot> geirha: declare -a array=([0]="a" [1]="b")
[13:36:19] <wstrnr> Jimmy2027: you can rename the files.  for ((i = 0; i <= 10000; i++)); do printf -v znum %05d "$i"; echo mv "image_$i.png" "image_$znum.png"; done
[13:36:33] <wstrnr> # for ((i = 0; i <= 2; i++)); do printf -v znum %05d "$i"; echo mv "image_$i.png" "image_$znum.png"; done
[13:36:34] <shbot> wstrnr: mv image_0.png image_00000.png
[13:36:34] <shbot> wstrnr: mv image_1.png image_00001.png
[13:36:34] <shbot> wstrnr: mv image_2.png image_00002.png
[13:36:34] <pystardust> I thought -d '' would go till the end of the file
[13:36:55] <maroloccio> That's great, thanks again. But I would also like to understand why this would not work: IFS=$'\0' read -r x y < <(printf 'a\0b')
[13:36:55] <wstrnr> Jimmy2027: you can fill an array with filenames
[13:37:32] <maroloccio> Maybe use mv -vn there wstrnr?
[13:37:36] *** Quits: mjbatty_ (~mjbatty@213.205.194.89) (Read error: Connection reset by peer)
[13:37:48] <wstrnr> # fnames=(); for ((i = 0; i <= 2; i++)); do nam=image_$i.png; [[ -f $nam ]] && fnames+=("$nam"); done;  echo in array now: "${fnames[@]}"
[13:37:48] <geirha> Jimmy2027: if the numbers aren't zero-padded you can use multiple globs;   for file in image_[0-9].png image_[0-9][0-9].png image_[0-9][0-9][0-9].png ...   as many as you need, and you can compact it a bit by using brace expansion
[13:37:50] <shbot> wstrnr: in array now:
[13:38:03] <Jimmy2027> wstrnr: but would the files not be read in the order they are stored regardless of their name?
[13:38:08] <wstrnr> (well, it's empty because in shbot no files were there...)
[13:38:12] *** Joins: julius_c (~julius_c@163.red-83-57-79.dynamicip.rima-tde.net)
[13:38:40] <wstrnr> Jimmy2027: arguments to ffmpeg are stored internally in the same order they were given in command line
[13:38:41] <Jimmy2027> is it possible to give an array of file names to ffmpeg?
[13:38:45] <geirha> maroloccio: IFS=$'\0' is the exact same as IFS=''. Setting an empty string as IFS tells read not to do any whitespace trimming or word splitting
[13:39:30] <wstrnr> Jimmy2027: if file names will be generated by for loop, they will be provided to ffmpeg in numerical order (in the same order the loop iterated over numbers)
[13:39:31] <maroloccio> So it is the assignment to a variable, in this case IFS, that breaks it. Possibly because of the internal representation of strings being C-like?
[13:40:00] <geirha> yes, since string variables are internally stores as C strings, they cannot contain NUL bytes
[13:40:05] <maroloccio> As in: IFS is not actually being assigned \0 but rather no characters, terminated by the string terminator?
[13:40:13] <maroloccio> Gotcha
[13:40:38] <wstrnr> Jimmy2027: if the filenames will be zero-prefixed and then you provide a glob like image-*.png in command that is going to run ffmpeg, the filenames in command line arguments will be alpha-numerically sorted, so the filenames with zero-prefixed numbers will be properly ordered in arguments
[13:40:55] <maroloccio> 10 years ago this was second nature to me. Leave a scripting language alone for a while and you have to relearn what used to be natural patterns... :-\
[13:41:20] <wstrnr> Jimmy2027: yet without of zero-prefixes the sorting order will be erroneous. e.g.  the number "2" will sort after 19, 199 etc.
[13:41:56] <maroloccio> sort -n
[13:42:28] <wstrnr> yeah, it's possible to do it in sysadminish way using sort -n, heh
[13:42:29] *** Joins: n4dir (~user@mue-88-130-56-250.dsl.tropolys.de)
[13:42:54] <maroloccio> 0digit can be confused for an octal if ever parsed
[13:43:48] <wstrnr> # touch file{1..20}; printf %s\\n file* | sort -V
[13:43:55] <shbot> wstrnr: file1
[13:43:55] <shbot> wstrnr: file2
[13:43:55] <shbot> wstrnr: etc... ( http://ix.io/3vYv )
[13:44:27] <wstrnr> you see it, right. even in first 2 lines. 2 sorts immediately after 1 by -V "version sort"
[13:44:31] <geirha> so next time, zero-pad those numbers!
[13:45:00] <wstrnr> yeah, when they are zero-padded, bash will sort them automatically without of need for any hacks
[13:45:02] <Jimmy2027> I'm not sure how to give the file name to ffmpeg then, once there padded
[13:45:07] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 245 seconds)
[13:45:10] <wstrnr> the sorting will be done by *-including glob
[13:46:06] <geirha> ffmpeg image_*.png ...  though with that many files you risk hitting "Argument list too long" error
[13:46:12] <wstrnr> just image-*.png will be fine.  if you have filenames where "*" should substitute to 00001 etc., all the 5 numbers will be properly substituted. * matches any amount of characters, not just one character
[13:46:43] *** Joins: Crescendo (~Crescendo@user/crescendo)
[13:46:52] *** Joins: codebam (~codebam@user/codebam)
[13:47:13] <geirha> though from previous ffmpeg encounters in here, it can apparently take a text file, in a bit weird format, containing a list of filenames to use. That would work around the argument list too long problem if it occurs
[13:47:47] *** Joins: vee_ (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[13:48:25] <Jimmy2027> okay cool renaming the files worked :)
[13:48:44] <Jimmy2027> yeah I tried using a text file but somehow I didn't get it to work
[13:51:04] <wstrnr> ffmpeg supports "#EXTM3U playlists", afaik
[13:51:35] *** docmax_ is now known as docmax
[13:52:00] *** Joins: rendar (~rendar@user/rendar)
[13:54:13] <wstrnr> by the way, about that "multiple glob arguments `optimized' by brace expansion" thing, it's actually not that hard to grasp
[13:54:14] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 256 seconds)
[13:54:20] *** Quits: lq820105 (~lq@116.228.78.184) (Read error: Connection reset by peer)
[13:54:36] *** Joins: lq820105 (~lq@116.228.78.178)
[13:54:48] *** Joins: codebam (~codebam@user/codebam)
[13:54:51] <wstrnr> # touch file{1..20}.png;   echo file{[0-9],[0-9][0-9]}.png
[13:54:52] <shbot> wstrnr: file1.png file2.png file3.png file4.png file5.png file6.png file7.png file8.png file9.png file10.png file11.png file12.png file13.png file14.png file15.png file16.png file17.png file18.png file19.png file20.png
[13:55:22] <wstrnr> it turns into 2 glob-including arguments:   file[0-9].png file[0-9][0-9].png
[13:55:29] <wstrnr> by the way, ? would work too
[13:55:33] *** Joins: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de)
[13:55:38] <wstrnr> # touch file{1..20}.png;   echo file{?,??}.png
[13:55:39] <shbot> wstrnr: file1.png file2.png file3.png file4.png file5.png file6.png file7.png file8.png file9.png file10.png file11.png file12.png file13.png file14.png file15.png file16.png file17.png file18.png file19.png file20.png
[13:56:06] <wstrnr> not very hard at all
[13:56:26] <wstrnr> though having zero-padded filenames is still better nevertheless
[13:57:40] <wstrnr> also it's a bit dangerous, if you will not have a single file for a e.g. file??.png glob, you will end up with literal "file??.png" argument in your command's list of arguments
[13:57:48] <Jimmy2027> any idea why this txt file with paths https://dpaste.com/DG2NDBVAD gives me an "Unsafe file name" error for the command "ffmpeg -f concat -i img_paths.txt out.mp4"? 
[13:58:48] <wstrnr> Jimmy2027: probably because you have space in the directory name "file out"
[14:00:04] <Jimmy2027> the file is actually a keyword that needs to be included before the path I think
[14:00:28] *** Quits: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[14:00:44] <wstrnr> uh. if so, ok.
[14:01:00] <wstrnr> that's not a lot of filenames, by the way. they are only 100, your system will not overflow with just 100 arguments.
[14:01:21] <wstrnr> but if they were really tens of thousands...
[14:01:31] <Jimmy2027> yup just wanted to know how it would work with a txt file in case
[14:02:48] *** Parts: polve (~polve@twcitalia/polve) (WeeChat 2.3)
[14:07:05] *** Quits: nobody_ (~nobody@host-87-0-177-222.retail.telecomitalia.it) (Ping timeout: 248 seconds)
[14:10:23] *** Joins: nobody_ (~nobody@host-87-0-177-222.retail.telecomitalia.it)
[14:11:42] <alzgh> # LANG=es_ES.UTF-8; ls ./none_existing_dir;
[14:11:43] <shbot> alzgh: /bin/ls: cannot access './none_existing_dir': No such file or directory
[14:12:05] <alzgh> # LANG=es_ES.UTF-8 ls ./none_existing_dir
[14:12:07] <shbot> alzgh: /bin/ls: cannot access './none_existing_dir': No such file or directory
[14:12:55] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[14:15:15] <wstrnr> alzgh: it's not that easy to use non-prepared locales in a GNU system
[14:15:47] <wstrnr> alzgh: if you want to know more, you can read   man locale-gen
[14:16:05] *** Quits: downtrip (~downtrip@188.166.151.198) (Quit: WeeChat 3.2)
[14:17:18] <wstrnr> so you have to prepare /etc/locale.gen file, then run locale-gen command
[14:17:48] *** Joins: downtrip (~downtrip@188.166.151.198)
[14:18:06] <alzgh> On my system, I have to install some base lang pack for Spanish and it worked.
[14:18:14] <alzgh> I was testing something on bash and here's what happened. I set LANG to spanish. command output becomes spanish. I open a new bash (a subprocess) by typing bash. It inherits the lang and outputs spanish while I haven't exported LANG.
[14:19:18] *** Quits: n4dir (~user@mue-88-130-56-250.dsl.tropolys.de) (Remote host closed the connection)
[14:19:42] <wstrnr> LANG is typically always in the environment of all programs running on your computer, including bash.
[14:19:57] <alzgh> So it's either copying all the variables local to its parent like a sub-shell, or the parent is setting the LANG env var in the global space without me exporting it.
[14:20:12] <wstrnr> in bash, when some variable presents in environment when the bash is started, the variable is considered exported
[14:20:28] <wstrnr> so any alterations to the variable will affect its value in child processes
[14:20:30] *** Quits: john1__ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[14:20:35] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[14:20:52] <wstrnr> even if the variable is not explicitly exported in current bash process using the "export" built-in command
[14:20:56] *** Joins: NIXKnight (~NIXKnight@198.98.57.76)
[14:21:06] <alzgh> Aha, once exported it's global. Changes to it are global.
[14:21:13] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[14:21:26] <geirha> I wouldn't call it global
[14:21:35] *** Joins: codebam (~codebam@user/codebam)
[14:21:36] <wstrnr> i'm not sure it's really meaningful to call it "global"
[14:21:43] <geirha> that would imply that changing it one place would change it in other existing processes
[14:21:57] <alzgh> True
[14:22:02] <alzgh> the change affects new processes
[14:22:25] <geirha> yes, new processes that are descendants of the process you changed it in
[14:22:50] *** Joins: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de)
[14:23:05] *** Quits: aakashi2001 (~aakashi20@103.61.255.59) (Ping timeout: 248 seconds)
[14:23:14] <alzgh> OK, thank you
[14:25:39] *** Quits: NIXKnight (~NIXKnight@198.98.57.76) (Quit: ZNC 1.8.2 - https://znc.in)
[14:29:19] *** Joins: NIXKnight (~NIXKnight@198.98.57.76)
[14:29:27] *** Joins: mhmd (~mhmd@37.48.90.208)
[14:30:43] *** Joins: darkbit (~db@152.32.99.67)
[14:30:57] <mhmd> How can I run "> file" on multiple files (or all files in a directory)?
[14:31:04] *** Quits: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[14:31:04] <mhmd> I want to remove the contents
[14:31:21] <mhmd> I prefer to use simplest way
[14:31:53] <lordrishav> `> ./*`?
[14:33:30] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[14:34:11] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[14:34:14] *** Joins: mci64 (~x@185.242.190.95)
[14:34:32] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[14:36:42] *** Quits: NIXKnight (~NIXKnight@198.98.57.76) (Quit: ZNC - https://znc.in)
[14:37:53] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[14:39:24] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[14:40:37] <geirha> either GNU truncate, or a loop
[14:40:54] <geirha> for f in *; do > "$f"; done
[14:41:10] *** Joins: NIXKnight (~NIXKnight@198.98.57.76)
[14:41:12] <geirha> truncate -s 0 -- *
[14:42:39] *** Joins: jinsun (~quassel@user/jinsun)
[14:42:40] *** Quits: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f) (Quit: Leaving)
[14:44:38] *** Quits: darkbit (~db@152.32.99.67) (Ping timeout: 268 seconds)
[14:44:40] *** Quits: joo_ (~joo@fsf/member/joo--) (Ping timeout: 256 seconds)
[14:52:57] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 248 seconds)
[14:54:07] <mhmd> thanks!
[14:54:24] *** Joins: codebam (~codebam@user/codebam)
[14:57:45] *** Quits: Camilo (~hugh@host-92-20-143-244.as13285.net) (Ping timeout: 248 seconds)
[14:59:01] *** Joins: Atque (~Atque@user/atque)
[15:01:31] <pj> also "global" has a specific meaning in bash, so does "exported", they are not the same thing.
[15:02:01] *** Quits: nobody_ (~nobody@host-87-0-177-222.retail.telecomitalia.it) (Ping timeout: 248 seconds)
[15:02:11] *** Joins: keypusher (keypusher@user/keypusher)
[15:02:22] <pj> # help declare | grep -i global
[15:02:23] <shbot> pj:       -g        create global variables when used in a shell function; otherwise
[15:02:59] <pj> that's global, and declare -g does not export a variable, so different meanings ^^^^^
[15:03:39] *** Parts: mhmd (~mhmd@37.48.90.208) (WeeChat 2.7.1)
[15:05:41] *** Joins: kill (~killown@user/killown)
[15:05:43] *** Joins: zeden (~zeden@user/zeden)
[15:07:39] <alzgh> could also use tee for writing to multiple files
[15:11:09] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[15:11:53] *** Joins: sazawal (~sazawal@122.161.189.200)
[15:12:30] *** Joins: codebam (~codebam@user/codebam)
[15:12:38] *** Quits: pystardust (~pystardus@117.96.229.96) (Quit: pystardust)
[15:20:58] *** Quits: alzgh (~alzgh@216.155.158.214) (Ping timeout: 246 seconds)
[15:22:28] *** Joins: mhmd (~mhmd@37.48.90.208)
[15:22:58] *** Parts: mhmd (~mhmd@37.48.90.208) (WeeChat 2.7.1)
[15:26:24] *** Joins: mci6451 (~mci64@185.242.190.95)
[15:27:31] *** Quits: mci6451 (~mci64@185.242.190.95) (Client Quit)
[15:29:39] *** Quits: mci64 (~x@185.242.190.95) (Ping timeout: 268 seconds)
[15:33:01] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[15:33:22] *** Quits: indiana-bones (~indignant@185.216.74.105) (Quit: Leaving)
[15:33:33] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[15:33:41] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[15:34:33] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 248 seconds)
[15:34:47] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[15:38:15] *** Joins: mci64 (~x@185.242.190.95)
[15:39:53] *** Quits: mci64 (~x@185.242.190.95) (Client Quit)
[15:40:07] *** Joins: mci64 (~x@185.242.190.95)
[15:40:40] *** Quits: mci64 (~x@185.242.190.95) (Read error: Connection reset by peer)
[15:41:34] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[15:45:13] *** Quits: Caffeinated (~alexboy@user/alexdelarge) (Ping timeout: 248 seconds)
[15:46:21] *** Joins: besnn (~besnn@user/besnn)
[15:46:27] *** colo_ is now known as colo
[15:48:14] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[15:49:03] <wstrnr> # printf '' | tee file{1..3}; ls -l *
[15:49:05] <shbot> wstrnr: -rw-r--r-- 1 root root 0 Aug 14 11:19 file1
[15:49:05] <shbot> wstrnr: -rw-r--r-- 1 root root 0 Aug 14 11:19 file2
[15:49:05] <shbot> wstrnr: -rw-r--r-- 1 root root 0 Aug 14 11:19 file3
[15:50:21] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[15:50:35] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[15:51:04] <Soliton> </dev/null
[15:51:30] <xx> if [ -z "$(ls -A "${someplace}/bin")" ]; then
[15:51:39] <xx> is how I am checking if a directory is empty - is that fine?
[15:51:40] <Soliton> !faq empty
[15:51:41] <greybot> https://mywiki.wooledge.org/BashFAQ/004 -- How can I check whether a directory is empty or not?  How do I check for any *.mpg files, or count how many there are?
[15:52:55] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Client Quit)
[15:53:08] <xx> that looks much more complex than what I have now
[15:53:33] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[15:53:43] *** Joins: joo (~joo@87-49-44-44-mobile.dk.customer.tdc.net)
[15:53:43] *** Quits: joo (~joo@87-49-44-44-mobile.dk.customer.tdc.net) (Changing host)
[15:53:43] *** Joins: joo (~joo@fsf/member/joo--)
[15:55:09] *** Joins: darkbit (~db@152.32.99.67)
[15:56:00] *** Joins: timj (~timj@user/timj)
[15:56:13] <wstrnr> sh# mkdir -p empty_dir dir_with_stuff/the_stuff;  for d in */; do if (set -- "$d"/*; [ -e "$1" ]); then printf '%s is not empty\n' "$d"; else printf '%s is empty\n' "$d"; fi; done
[15:56:15] <shbot> wstrnr: dir_with_stuff/ is not empty
[15:56:15] <shbot> wstrnr: empty_dir/ is empty
[15:57:00] <pj> I happen to like ( shopt -s dotglob failglob; : "$dir"/*; ) 2>/dev/null || echo "Directory is empty"
[15:58:34] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Remote host closed the connection)
[15:59:55] *** Joins: pystardust (~pystardus@117.96.229.96)
[16:01:46] *** Joins: joshcom (~joshcom@2600:8800:a706:2b00:5be3:4224:17a3:9012)
[16:05:08] *** Quits: terabyte (~terabyte@27.176-105-213.static.virginmediabusiness.co.uk) (Quit: Client closed)
[16:06:49] <pj> # mkdir empty; ( shopt -s dotglob failglob; : empty/*; ) 2>/dev/null || echo "Directory is empty"
[16:06:50] <shbot> pj: Directory is empty
[16:07:17] <pj> # mkdir not-empty; touch not-empty/foo; ( shopt -s dotglob failglob; : empty/*; ) 2>/dev/null || echo "Directory is empty"
[16:07:18] <shbot> pj: Directory is empty
[16:07:22] <pj> hrmmmmm
[16:07:29] <pj> oh
[16:07:35] <pj> # mkdir not-empty; touch not-empty/foo; ( shopt -s dotglob failglob; : not-empty/*; ) 2>/dev/null || echo "Directory is empty"
[16:07:37] <shbot> pj: no output
[16:08:06] *** Quits: maroloccio (~marolocci@37.100.6.154) (Quit: Client closed)
[16:08:52] *** Parts: joshcom (~joshcom@2600:8800:a706:2b00:5be3:4224:17a3:9012) (Leaving)
[16:11:35] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[16:16:07] *** Joins: sinaowolabi (~SinaOwola@102.134.114.19)
[16:17:27] *** Joins: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de)
[16:17:44] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[16:18:28] <kurahaupo> xx: "ls" is almost always a suboptimal solution
[16:18:52] <xx> kurahaupo: yes, I've read that I'm not supposed to parse ls output, and agree with that
[16:18:58] <xx> but for checking if a dir is empty?
[16:20:12] <pj> okay, I finally added that one to the faq.
[16:20:22] <kurahaupo> xx: if ( shopt -s nullglob ; set -- /path/to/dir/* ;  (($#==0)) ) ; then echo empty ; fi
[16:20:59] *** Joins: mci64 (~X@185.242.190.95)
[16:21:28] <pj> anyways, g2g
[16:22:01] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 248 seconds)
[16:22:33] <kurahaupo> Or the very similar solution that pj posted a few minutes ago
[16:23:25] *** Quits: mci64 (~X@185.242.190.95) (Quit: Going offline, see ya! (www.adiirc.com))
[16:23:55] *** Quits: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[16:23:55] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[16:23:57] *** Joins: mci64 (~X@185.242.190.95)
[16:24:21] <wstrnr> it also had dotglob
[16:24:47] <pj> yes, without dotglob it will not see "hidden" files taht start with a dot.
[16:25:05] <pj> the main difference with mine is it uses failglob.
[16:26:23] *** Joins: roadt_ (~roadt@36.7.132.7)
[16:27:30] <pj> so it doesn't rely on expanding the glob and counting the matches or anything and doesn't have to assign the results to an array or to the positional args.  It triggers failure if the directory is empty just by the very act of attempting to expand the glob.
[16:28:58] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:29:29] *** Quits: roadt (~roadt@114.100.129.141) (Ping timeout: 248 seconds)
[16:29:40] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[16:31:00] <kurahaupo> pj: Smart! I like it
[16:31:28] <wstrnr> sh# mkdir -p empty has_something/something;  for d in */; do  if find "$d" -maxdepth 0 -empty | grep ''; then printf '%s is empty\n' "$d"; else printf '%s is not empty\n' "$d"; fi; done
[16:31:30] <shbot> wstrnr: empty/
[16:31:30] <shbot> wstrnr: empty/ is empty
[16:31:30] <shbot> wstrnr: has_something/ is not empty
[16:31:50] <wstrnr> grep should be with -q here
[16:32:14] *** Quits: mci64 (~X@185.242.190.95) (Quit: Going offline, see ya! (www.adiirc.com))
[16:32:39] *** Joins: mci64 (~X@185.242.190.95)
[16:32:53] <wstrnr> sh# mkdir -p empty has_something/something;  for d in */; do  if find "$d" -maxdepth 0 -empty | grep -q ''; then printf '%s is empty\n' "$d"; else printf '%s is not empty\n' "$d"; fi; done
[16:32:54] <shbot> wstrnr: empty/ is empty
[16:32:54] <shbot> wstrnr: has_something/ is not empty
[16:33:02] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[16:34:49] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 248 seconds)
[16:35:02] <kurahaupo> wstrnr: If we're going the GNU find route, I'd add -printf X so that the output is predictable.
[16:36:19] *** Joins: codebam (~codebam@user/codebam)
[16:37:56] *** Joins: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de)
[16:38:03] *** Quits: mci64 (~X@185.242.190.95) (Quit: Going offline, see ya! (www.adiirc.com))
[16:38:26] *** Joins: mci64 (~X@185.242.190.95)
[16:40:10] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[16:40:12] <wstrnr> true. with ``-printf x'' we can reduce the amount of data that is going to be passed through pipe to a bare minimum of 1 byte
[16:41:22] <pj> you could check the string length of the output to see hoe many files there are.
[16:41:38] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[16:43:32] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:43:52] <wstrnr> with ``-maxdepth 0'' find will only process one location, it will not inspect "children" of that directory if it is a directory
[16:44:03] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[16:44:16] <wstrnr> with ``-print x'' it will print just 1 byte, without it it will print just one filename
[16:44:33] <kurahaupo> wstrnr: yes, but you could give it a list of directories and the length would tell you how many are empty
[16:44:57] <kurahaupo> (omit -quit of course)
[16:45:33] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[16:45:35] <wstrnr> damn it, this command is still dangerous, with GNU find
[16:45:58] <wstrnr> GNU find does not crash when the first argument is not a filename
[16:46:33] *** Joins: codebam (~codebam@user/codebam)
[16:46:34] <kurahaupo> wstrnr: find never cares whether the args are directories
[16:46:40] <wstrnr> so explicit [ -e $d ] should be added before find...
[16:46:49] <wstrnr> with double quotes of course
[16:46:59] <wstrnr> [ -e "$d" ] 
[16:47:18] <wstrnr> why did i type it without of quotes... so embarrassing.
[16:48:33] *** Joins: tradar (~tradar@user/tradar)
[16:48:55] <wstrnr> though POSIX find also won't crash if first argument is -H or -L, it seems from the POSIX manpage
[16:49:07] <wstrnr> so,
[16:49:45] <wstrnr> and not [[ -e "$d" ]]
[16:50:13] <wstrnr> we have to check if it's beginning with "-", and if it does, we have to add ./ before it
[16:50:56] *** Quits: kewl_fft (~kewl_fft@82-65-252-209.subs.proxad.net) (Ping timeout: 272 seconds)
[16:52:13] *** Quits: mci64 (~X@185.242.190.95) (Quit: Going offline, see ya! (www.adiirc.com))
[16:52:43] <kurahaupo> wstrnr: Just use find -type d -empty
[16:53:19] <phogg> I would not describe "exiting with an error because your parameters were invalid" as a "crash"
[16:53:50] <wstrnr> # mkdir -p -- -delete empty has_something/something;  for d in */; do  if find "${d/#'-'/'./-'}" -maxdepth 0 -empty -printf \\n | grep -q ''; then printf '%s is empty\n' "$d"; else printf '%s is not empty\n' "$d"; fi; done
[16:53:52] <shbot> wstrnr: -delete/ is empty
[16:53:52] <shbot> wstrnr: empty/ is empty
[16:53:52] <shbot> wstrnr: has_something/ is not empty
[16:54:00] <kurahaupo> phogg: Indeed. I would describe that as "behaving as expected"
[16:54:40] <wstrnr> "exiting with diagnostic message"
[16:55:03] *** dob1_ is now known as dob1
[16:55:45] *** Joins: mci64 (~X@185.242.190.95)
[16:56:46] *** Quits: mci64 (~X@185.242.190.95) (Client Quit)
[17:00:10] *** Joins: mci64 (~X@185.242.190.95)
[17:00:18] *** Quits: mci64 (~X@185.242.190.95) (Client Quit)
[17:01:02] <phogg> wstrnr: That's inconveniently long. I would just say "die" in favor of "crash"
[17:02:16] *** Joins: mci64 (~X@185.242.190.95)
[17:03:27] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[17:03:28] *** Joins: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[17:04:01] *** Quits: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f) (Remote host closed the connection)
[17:05:30] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[17:06:55] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Quit: WeeChat 3.2)
[17:07:42] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 258 seconds)
[17:08:26] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[17:09:14] *** Joins: codebam (~codebam@user/codebam)
[17:09:17] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[17:09:33] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 268 seconds)
[17:11:13] *** Quits: af (~af@awalgarg.me) (Remote host closed the connection)
[17:11:37] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 248 seconds)
[17:12:57] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[17:13:52] *** Quits: cark (~cark@91.110.54.120) (Ping timeout: 245 seconds)
[17:14:26] *** Joins: cark (~cark@91.110.54.120)
[17:14:59] *** Quits: Night-Shade (~Tim@ip5b403d56.dynamic.kabel-deutschland.de) (Ping timeout: 258 seconds)
[17:15:06] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[17:16:06] *** Joins: codebam (~codebam@user/codebam)
[17:16:32] *** Joins: af (~af@awalgarg.me)
[17:23:21] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 248 seconds)
[17:24:11] *** Joins: codebam (~codebam@user/codebam)
[17:24:21] *** Quits: joo (~joo@fsf/member/joo--) (Ping timeout: 268 seconds)
[17:27:43] *** kurahaupo is now known as Martin
[17:27:47] *** Joins: thiras (~thiras@user/thiras)
[17:27:56] *** boreas is now known as heiner
[17:28:10] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:29:09] *** Joins: gnoo (~gnoo@user/gnoo)
[17:31:50] *** Quits: mci64 (~X@185.242.190.95) (Quit: Going offline, see ya! (www.adiirc.com))
[17:32:37] *** Martin is now known as inquorate
[17:32:41] *** Joins: MaximB (~MaximB@87.68.164.26)
[17:34:51] *** inquorate is now known as kurahaupo
[17:35:41] *** Joins: joo (~joo@80-62-117-226-mobile.dk.customer.tdc.net)
[17:35:41] *** Quits: joo (~joo@80-62-117-226-mobile.dk.customer.tdc.net) (Changing host)
[17:35:41] *** Joins: joo (~joo@fsf/member/joo--)
[17:36:42] *** Quits: kurahaupo (~kurahaupo@pa49-181-237-197.pa.nsw.optusnet.com.au) (Quit: Quit)
[17:37:54] *** Quits: julius_c (~julius_c@163.red-83-57-79.dynamicip.rima-tde.net) (Quit: Leaving)
[17:37:54] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[17:42:11] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[17:44:05] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 268 seconds)
[17:44:41] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 268 seconds)
[17:46:02] *** Joins: mci64 (~X@185.242.190.95)
[17:48:12] *** Joins: alzgh (~alzgh@51.15.9.205)
[17:48:16] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[17:49:28] *** Joins: lavaball (felix@31.204.155.215)
[17:49:40] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[17:50:42] <alzgh> is there a preferred bin/paste for this channel? I vaguely remember the was one but can't find it.
[17:50:57] *** Joins: thiras (~thiras@user/thiras)
[17:51:16] <wstrnr> !paste
[17:51:16] <greybot> Paste short snippets (<= 5 lines) in channel. Paste more using http://paste.debian.net/ or http://paste.wooledge.org/ or see !ix or !sprunge. Please don't use pastebin.com -- it's full of ads and mangles whitespace. NEVER upload screen shots. Don't use a site that requires Javascript, or registration to view raw.
[17:53:37] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[17:57:13] <xx> if [ "string" = "$var" ] vs if [ "$var" = "string" ] - where can I read about how these two differ?
[17:58:18] *** Quits: af (~af@awalgarg.me) (Remote host closed the connection)
[17:58:37] *** Joins: af (~af@awalgarg.me)
[17:59:06] *** Joins: dcand (~dcand@user/dcand)
[18:00:32] <dcand> is there a way to have line continuation with indentation
[18:00:41] <dcand> without lines being splited
[18:01:40] *** Quits: af (~af@awalgarg.me) (Client Quit)
[18:02:35] *** Joins: af (~af@awalgarg.me)
[18:02:53] *** Quits: af (~af@awalgarg.me) (Client Quit)
[18:05:10] <wstrnr> in bash you can split any long line of code by adding literal backslash and newline in a place of wanted split
[18:05:24] <wstrnr> echo long time ago \
[18:05:35] <wstrnr>     people were living much \
[18:05:40] <wstrnr>     much much much
[18:06:54] <dcand> if i do this with printf(1) it doesn't work
[18:07:23] <wstrnr> printf 'Warning:
[18:07:36] <wstrnr> Wear masks and such.
[18:07:41] <nitro> printf "bob is \n\t nowhere to be found"
[18:07:48] <wstrnr> i mean you, %s!\n' "$USER"
[18:09:19] <wstrnr> in printf the first argument is almost always quoted, so you can just ... you know, write the literal quoted string across multiple lines as-is, and it will literally include the newlines appearing inside it as a legitimate part of the argument 
[18:10:11] <wstrnr> of course in format string you can use \n for newline
[18:10:17] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[18:10:32] *** Joins: Crescendo (~Crescendo@user/crescendo)
[18:10:54] *** Joins: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[18:11:13] *** Quits: pystardust (~pystardus@117.96.229.96) (Ping timeout: 268 seconds)
[18:11:39] <wstrnr> if you are writing a long quoted string argument across multiple lines, for example when it is a AWK program, or bash -c ... program, you typically do not indent this fragment to the indentation level of the script around it
[18:13:43] <wstrnr> for example, when awk '...' appears in the "then"-clause of "if" compound command, and the '...' part is written across multiple lines, the text of the AWK program is not given additional level of indentation because of "if" in bash, the indentation of the program starts at first column, as if the script around it did not exist
[18:14:50] <wstrnr> multi-line format arguments of printf, for example long texts of --help output, should be treated similarly, i think
[18:15:59] <wstrnr> another level of indentation is painful to maintain, for example when you are using cat <<-heredoc for this purpose
[18:16:05] *** Joins: af (~af@awalgarg.me)
[18:16:44] *** Quits: Strom (strom@fedora/strom) ()
[18:17:00] <dcand> i understand what is happenning, string after \ are treated as a separate argument
[18:17:30] *** Joins: mjbatty_ (~mjbatty@82.2.17.205)
[18:17:30] <dcand> this issue arises when there is strict 80 char line length
[18:18:20] <wstrnr> not really
[18:18:47] *** Joins: Strom (strom@fedora/strom)
[18:18:54] <wstrnr> the \<newline> is just ignored by bash, it's not saved in memory, it's just skipped at parsing
[18:19:05] <wstrnr> you can   echo aaaaa\
[18:19:07] <wstrnr> bbbbbb\
[18:19:10] <wstrnr> ccccc
[18:19:24] <wstrnr> without of any indentation of course, and it will print   aaaaabbbbbccccc
[18:19:32] <wstrnr> without any spaces
[18:19:56] <wstrnr> because the aaaaabbbbbbcccccc will be treated just as 1 argument
[18:20:31] <wstrnr> this thing works in double-quoted strings, but does not work in 'single-quoted' ones
[18:20:39] <dcand> oh yes. i forgot.
[18:21:49] <dcand> sorry, which thing
[18:22:46] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 272 seconds)
[18:23:52] *** Joins: Crescendo (~Crescendo@user/crescendo)
[18:23:54] *** Quits: nf (~n@monade.li) (Quit: Fairfarren.)
[18:24:05] *** Joins: jelly (jelly@user/jelly)
[18:24:06] *** Joins: nf (~n@monade.li)
[18:24:20] <wstrnr> by "this thing" i mean the \<newline> being treated as nothing during parsing
[18:24:37] <wstrnr> by the way, this works in C too
[18:25:15] <wstrnr> in similar fashion
[18:28:09] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Remote host closed the connection)
[18:29:09] *** Joins: besnn (~besnn@user/besnn)
[18:32:03] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[18:32:05] *** Quits: wstrnr (~wstrnr@user/wstrnr) (Read error: Connection reset by peer)
[18:32:42] <dcand> how do i have c like escape sequences in "" string
[18:39:25] *** Quits: s1b1 (~s1b1@user/s1b1) (Read error: Connection reset by peer)
[18:40:21] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[18:42:05] *** Joins: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net)
[18:42:35] *** Quits: mci64 (~X@185.242.190.95) (Quit: Going offline, see ya! (www.adiirc.com))
[18:43:00] *** Joins: mci64 (~X@185.242.190.95)
[18:43:11] <heiner> dcand: it depends on the program you are using the strings with. Some understand the escape sequences (e.g. printf(1)), others don't (e.g. echo(1))
[18:47:21] *** Parts: dcand (~dcand@user/dcand) ()
[18:47:46] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 244 seconds)
[18:48:58] *** Joins: maroloccio (~marolocci@37.100.6.154)
[18:49:21] *** Joins: superboot (~agentgasm@user/superboot)
[18:49:35] *** Joins: tejr (~tejr@user/tejr)
[18:50:04] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:50:08] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:222:4dff:fe69:d6ed) (Read error: Connection reset by peer)
[18:50:42] <heiner> POSIX requires echo(1) to interpret escape sequences, Debian echo needs an additional -e option for this purpose.
[18:52:26] *** Joins: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net)
[18:52:44] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 258 seconds)
[18:55:00] *** Quits: aeadio (~aead@ec2-52-2-178-231.compute-1.amazonaws.com) (Ping timeout: 268 seconds)
[18:57:58] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-221.prtc.net) (Ping timeout: 246 seconds)
[18:58:04] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:59:08] *** Joins: kwilczynski (sid379192@user/kwilczynski)
[19:01:13] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:222:4dff:fe69:d6ed)
[19:03:51] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[19:05:45] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[19:06:58] *** Joins: pj (~pj@ghettoforge/pj)
[19:09:23] *** Joins: s1b1 (~s1b1@user/s1b1)
[19:10:08] *** Quits: totenkoph (~scythe@user/totenkoph) (Quit: totenkoph)
[19:10:27] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[19:10:30] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:12:15] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 268 seconds)
[19:17:11] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 268 seconds)
[19:19:51] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Quit: tccki)
[19:20:43] *** Joins: besnn (~besnn@user/besnn)
[19:22:07] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[19:23:34] *** kill is now known as php
[19:24:12] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[19:27:00] *** Joins: LiftLeft (~LiftLeft@212.102.58.180)
[19:29:16] *** Quits: af (~af@awalgarg.me) (Ping timeout: 272 seconds)
[19:29:22] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[19:30:56] *** Joins: af (~af@awalgarg.me)
[19:31:27] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Quit: leaving)
[19:34:43] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:35:11] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Read error: Connection reset by peer)
[19:35:36] *** Joins: dom2 (~dom2@c-65-96-173-68.hsd1.ma.comcast.net)
[19:36:29] *** Joins: pr-asadi (~pr-asadi@5.235.114.142)
[19:37:11] *** Parts: pr-asadi (~pr-asadi@5.235.114.142) ()
[19:37:19] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:38:08] *** Joins: han-solo (~hanish@user/han-solo)
[19:39:24] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[19:39:42] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[19:39:56] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[19:40:45] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Remote host closed the connection)
[19:41:08] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[19:42:16] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Remote host closed the connection)
[19:42:40] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[19:43:45] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Remote host closed the connection)
[19:44:08] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[19:45:15] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Remote host closed the connection)
[19:45:38] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:45:40] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[19:46:45] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Remote host closed the connection)
[19:47:10] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[19:47:33] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[19:48:15] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Remote host closed the connection)
[19:48:19] *** Joins: ByteSlayer (~byteslaye@user/byteslayer)
[19:55:36] *** Quits: mci64 (~X@185.242.190.95) (Quit: Going offline, see ya! (www.adiirc.com))
[19:56:14] *** Joins: mci64 (~X@185.242.190.95)
[19:56:55] <alzgh>  `find . -print -type f -name '*.txt'` why am I still getting directories? also my name pattern doesn't work. It's supposed to get files with .txt extension.
[19:58:10] <colo> alzgh, get rid of the '-print' at that position
[20:00:46] <alzgh> colo man, I'm so confused.
[20:01:12] <alzgh> why would -print do that? I only added it for presentation purposes.
[20:01:24] <emanuele6> alzgh: find is basically a programming language, if there are no action predicate, `-print` at the end is assumed
[20:01:35] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[20:02:15] <emanuele6> your "code", for, each directory, prints the directory name (-print) and then check (for no reason) if the directory is a file and its file name matches -name '*.txt'
[20:02:37] <emanuele6> s/each directory/each file in ./
[20:02:44] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[20:02:47] <alzgh> OOO
[20:02:47] <emanuele6> s/directory name/file name/
[20:03:13] <alzgh> it does the business serially according to my switches
[20:03:26] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 268 seconds)
[20:03:58] <alzgh> thanks
[20:04:04] <emanuele6> there are also other predicates: `-exec cat -- {} ';'` will run cat (with --) on every file 
[20:04:20] *** Joins: tex (~dee@user/dix)
[20:04:34] <alzgh> So, first comes root, then type, then name, then print stuff
[20:04:37] <emanuele6> `-exec cat -- {} +` will run `cat --' passing every file that match to cat at the same file
[20:04:41] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (Ping timeout: 268 seconds)
[20:04:52] <emanuele6> GNU find also has `-delete` that delete the files that  match
[20:04:54] <emanuele6> etc.
[20:06:03] *** Joins: gpap (~gpap@athedsl-386770.home.otenet.gr)
[20:06:42] <alzgh> yesterday, almost every find command I ran was correct. I thought I got it. Today, I'm stuck on step one.
[20:07:05] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 248 seconds)
[20:07:11] <OMGOMG> FML.
[20:08:26] *** Joins: kj (~kj@kj.aerisnetwork.net)
[20:10:35] *** Joins: ferdna (~ferdna@user/ferdna)
[20:13:34] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[20:17:25] *** Joins: docmax_ (~docmax@dynamic-077-006-161-151.77.6.pool.telefonica.de)
[20:17:41] <alzgh> https://github.com/sharkdp/bat this looks good
[20:17:56] <han-solo> !check
[20:17:57] <checkbot> han-solo: Unable to read that :/
[20:18:02] *** Quits: roadt_ (~roadt@36.7.132.7) (Ping timeout: 245 seconds)
[20:18:05] <han-solo> er
[20:18:33] <emanuele6> i remember finding it in my package manager, but i've never used it
[20:18:37] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[20:18:40] *** Joins: roadt_ (~roadt@36.7.132.7)
[20:18:42] <emanuele6> oh, nevermind
[20:19:30] <emanuele6> alzgh: I thought you sent a link for this https://github.com/bats-core/bats-core (Bash Automated Testing system)
[20:19:48] <alzgh> bat is acronym for this in Ubuntu
[20:19:49] <emanuele6> I hate those "modern unix utilities"
[20:19:57] <alzgh> haha
[20:20:06] <emanuele6> they are so bad
[20:20:31] <alzgh> you guys, probably lived all of the internet history
[20:20:55] <emanuele6> i'm 21 yo, bro.
[20:21:08] *** Joins: humky (~humky@user/humky)
[20:21:20] *** Quits: docmax (~docmax@dynamic-095-116-052-131.95.116.pool.telefonica.de) (Ping timeout: 268 seconds)
[20:21:26] <alzgh> wow, then an old school by nature
[20:22:05] <alzgh> I can imagine if you have enough experience with the older stuff, you gonna love it because they give you the most flexibility
[20:22:21] <alzgh> but that much experience takes some time
[20:22:38] <alzgh> maybe around 3 to 5 years
[20:23:51] *** Joins: jinsun (~quassel@user/jinsun)
[20:25:50] *** Joins: Caffeinated (~Caffeine@user/alexdelarge)
[20:27:29] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[20:27:47] *** Joins: n4dir (~user@mue-88-130-56-250.dsl.tropolys.de)
[20:28:20] *** Quits: potamides (~amnifiliu@2003:a:270f:c400:28d8:e046:7d92:3970) (Quit: WeeChat 3.2)
[20:29:40] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[20:30:28] *** Joins: rs (~rs@50.125.84.218)
[20:30:52] *** rs is now known as Guest8276
[20:31:32] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[20:32:01] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[20:32:20] *** Joins: Crescendo (~Crescendo@user/crescendo)
[20:34:21] *** Joins: greycat (~greg@209.142.155.49)
[20:37:56] *** Quits: s1b1 (~s1b1@user/s1b1) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[20:38:13] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[20:39:22] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[20:40:32] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[20:40:43] *** Quits: superboot (~agentgasm@user/superboot) (Remote host closed the connection)
[20:40:52] *** Joins: Crescendo (~Crescendo@user/crescendo)
[20:44:03] *** Joins: pystardust (~pystardus@117.96.229.96)
[20:44:23] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:44:43] *** Joins: rocktop (~rocktop@196.65.62.209)
[20:50:48] *** Quits: darxun (sid504814@tinside.irccloud.com) (Ping timeout: 258 seconds)
[20:53:27] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[20:53:38] *** Joins: s1b1 (~s1b1@user/s1b1)
[20:54:24] *** Joins: darxun (sid504814@id-504814.tinside.irccloud.com)
[20:57:30] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[20:58:51] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 258 seconds)
[20:59:07] <alzgh> reading man pages I see some operators quoted like this `{}' with an opening backtick and closing single quote. Why/what is that?
[20:59:40] <yitz> alzgh: That's just a writing/documentation quote style. It's a grammar/doc question, not something meant to be ran on the terminal
[21:01:10] *** Quits: N0ZYC (~N0ZYC@173-16-166-245.client.mchsi.com) (Ping timeout: 272 seconds)
[21:01:52] <alzgh> right, maybe they wanted to differentiate between quoting/emphasizing/separating (something that manual does) and actual syntax related quotes that they must show in the manual. Since mismatched quote types are a nono in bash, you can be sure they are documentation related.
[21:02:54] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[21:03:08] <yitz> Open and close quotes as different chars is very common in documentation/literature. It could even be the tooling that generates the docs converting "" to something different
[21:03:35] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[21:03:51] *** Joins: humky (~humky@user/humky)
[21:09:35] *** Quits: rocktop (~rocktop@196.65.62.209) (Quit: Leaving)
[21:14:31] <emanuele6> alzgh: GNU programs are likely to also have info pages along with man pages. the info pages usually have more detailed descriptions, extra information and some examples. sometimes the man pages are still better and more detailed, but it's always good to read both when you are studying a tool. `info find`
[21:14:35] *** Quits: mci64 (~X@185.242.190.95) (Remote host closed the connection)
[21:15:35] <emanuele6> by the way, `info --vi-keys` exists if you prefer that
[21:15:39] *** Quits: maroloccio (~marolocci@37.100.6.154) (Quit: Client closed)
[21:16:09] <emanuele6> !vi
[21:16:09] <greybot> Vi is an editor. Use it in scripts like this: vi -c 's/foo/bar/|x' file -- See http://www.opengroup.org/onlinepubs/009695399/utilities/vi.html
[21:16:14] <emanuele6> !vim
[21:16:14] <greybot> "Vim is best" - geirha
[21:16:18] *** Joins: ExeciN (~ExeciN@user/nicexe)
[21:20:01] *** Joins: ogis (~Android@p311253-omed01.osaka.ocn.ne.jp)
[21:21:28] *** Quits: ogis (~Android@p311253-omed01.osaka.ocn.ne.jp) (Client Quit)
[21:22:06] <alzgh> thanks emanuele6 have never used `info` before. vaguely remember to have heard of it once maybe. going to use it more.
[21:22:45] <alzgh> I'm using find right and left and it almost works everytime like I predicted. Feels good.
[21:24:26] <emanuele6> GNU find is cool
[21:24:35] <emanuele6> -maxdepth 0 is nice
[21:24:57] *** Quits: edlou (uid413273@id-413273.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[21:25:32] *** Joins: mci64 (~X@185.242.190.95)
[21:25:32] <pystardust> woah, i didn't know ppl use vi for scripting with vi -c ''
[21:26:52] <emanuele6> # mkdir a; touch b; ls; find b -maxdepth 0 -type d -delete; ls; find a -maxdepth 0 -type d -delete; ls # alzgh
[21:26:54] <shbot> emanuele6: 99,9912,99a99,99  b
[21:26:54] <shbot> emanuele6: 99,9912,99a99,99  b
[21:26:54] <shbot> emanuele6: b
[21:27:09] <emanuele6> only delete the given paths if they are directories
[21:27:29] <greycat> wait, shbot has a *colored* ls?!
[21:28:19] *** Joins: Betal (~Betal@user/betal)
[21:28:22] *** Quits: mci64 (~X@185.242.190.95) (Client Quit)
[21:28:28] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 246 seconds)
[21:28:28] <emanuele6> pystardust: I think `vi -c ''` and `ex -c ''` are equivalent (prefer `-sc` to `-c`)
[21:28:44] <emanuele6> vi is just visual ex
[21:28:53] *** Joins: mci64 (~X@185.242.190.95)
[21:29:44] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[21:29:53] *** Joins: pncl1 (~Hax0r@87.101.193.195)
[21:30:01] <emanuele6> alzgh: obviously you can make the conditional more complex and use a paths array instead of just a or b
[21:30:11] *** Quits: wolfgang (~wolfgang@101.174.170.3) (Remote host closed the connection)
[21:30:12] *** Quits: pncl1 (~Hax0r@87.101.193.195) (Client Quit)
[21:30:32] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[21:30:37] <emanuele6> note, if you pass an array of paths to find use "${arr[@]/#-/./-}"
[21:30:39] <emanuele6> !find$
[21:30:39] <greybot> `find "$dir" -type f' is problematic if $dir starts with '-'; a solution is to use `find "${dir/#-/./-}" -type f' (i.e. prepend './' to $dir only if $dir begins with '-')
[21:31:18] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[21:31:37] *** Joins: ogis (~Android@p311253-omed01.osaka.ocn.ne.jp)
[21:31:51] <emanuele6> # type ls
[21:31:52] <shbot> emanuele6: ls is /usr/bin/ls
[21:32:02] <emanuele6> why are colours on by default?
[21:32:08] <greycat> # env | grep LS
[21:32:11] <shbot> greycat: no output
[21:32:22] <emanuele6> # ls --version
[21:32:31] <shbot> emanuele6: ls (GNU coreutils) 8.28
[21:32:31] <shbot> emanuele6: Copyright (C) 2017 Free Software Foundation, Inc.
[21:32:31] <shbot> emanuele6: etc... ( http://ix.io/3w0J )
[21:32:40] <emanuele6> huh, it's GNU ls
[21:32:44] *** Quits: mci64 (~X@185.242.190.95) (Client Quit)
[21:32:47] <greycat> that part isn't surprising
[21:33:00] <emanuele6> aren't colours off by default? 
[21:33:13] *** Joins: mci64 (~X@185.242.190.95)
[21:33:18] <emanuele6> ls is not an alias, it's /usr/bin/ls
[21:33:32] <alzgh> yeah, gnu ls does not have colors by default
[21:33:49] <alzgh> at least on my ubuntu focal
[21:33:51] *** Joins: wolfgang (~wolfgang@101.174.170.3)
[21:34:44] <emanuele6> and LS_COLORS is not set in the environment
[21:35:56] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Remote host closed the connection)
[21:36:07] <emanuele6> # printf '%s\n' "$LS_COLORS"
[21:36:09] <shbot> emanuele6: no output
[21:36:14] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[21:36:19] *** Quits: ogis (~Android@p311253-omed01.osaka.ocn.ne.jp) (Client Quit)
[21:36:28] *** Joins: ogis (~Android@p311253-omed01.osaka.ocn.ne.jp)
[21:37:52] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[21:38:37] *** Quits: alzgh (~alzgh@51.15.9.205) (Ping timeout: 246 seconds)
[21:38:40] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[21:38:47] *** Quits: ogis (~Android@p311253-omed01.osaka.ocn.ne.jp) (Client Quit)
[21:39:10] *** Joins: ExeciN (~ExeciN@user/nicexe)
[21:39:29] *** lordrishav is now known as LordRishav
[21:39:40] *** Joins: ogis (~Android@p311253-omed01.osaka.ocn.ne.jp)
[21:39:54] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Client Quit)
[21:40:21] *** Joins: codebam (~codebam@user/codebam)
[21:41:01] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[21:41:46] *** Quits: ogis (~Android@p311253-omed01.osaka.ocn.ne.jp) (Client Quit)
[21:42:21] *** Quits: voiceofreason (~voiceofre@207.148.10.181) (Quit: ZNC 1.8.2 - https://znc.in)
[21:42:25] *** ponyofdeath is now known as bearkitten
[21:42:42] *** Joins: ogis (~Android@p311253-omed01.osaka.ocn.ne.jp)
[21:42:56] *** Quits: ogis (~Android@p311253-omed01.osaka.ocn.ne.jp) (Client Quit)
[21:43:20] *** Joins: ogis (~Android@p311253-omed01.osaka.ocn.ne.jp)
[21:43:51] *** bearkitten is now known as hardfloppy
[21:43:52] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 246 seconds)
[21:44:22] *** hardfloppy is now known as ponyofdeath
[21:45:08] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[21:45:48] *** Quits: ogis (~Android@p311253-omed01.osaka.ocn.ne.jp) (Client Quit)
[21:47:16] *** Joins: voiceofreason (~voiceofre@207.148.10.181)
[21:47:52] *** Joins: besnn (~besnn@user/besnn)
[21:50:32] *** Joins: ogis (~Android@p311253-omed01.osaka.ocn.ne.jp)
[21:51:12] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[21:51:17] *** Quits: af (~af@awalgarg.me) (Quit: bye)
[21:51:59] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[21:52:38] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Quit: QUIT)
[21:52:45] *** Quits: ogis (~Android@p311253-omed01.osaka.ocn.ne.jp) (Client Quit)
[21:53:13] *** Joins: Atque (~Atque@user/atque)
[21:53:14] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[21:53:18] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[21:53:32] *** Joins: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7)
[21:55:20] *** Joins: roadie (~user@2a02:8108:ec0:1427:50ec:8d7a:4423:d1e2)
[21:55:54] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[21:59:21] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (Read error: Connection reset by peer)
[22:00:26] *** Joins: Iryon (~Iryon@185-12-21-77.sigma.jaslo.pl)
[22:00:31] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:00:56] *** Quits: Guest8276 (~rs@50.125.84.218) ()
[22:01:41] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[22:01:55] *** Quits: ogis (~Android@240d:1c:3d:9500:c57d:fb6f:b32f:7cd7) (Quit: -a- IRC for Android 2.1.59)
[22:02:00] *** Joins: ExeciN (~ExeciN@user/nicexe)
[22:02:13] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[22:03:03] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.2)
[22:03:04] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Ping timeout: 244 seconds)
[22:04:19] *** Joins: rs (~rs@user/rs)
[22:06:20] *** Joins: FoodMan_ (~glucose@194.110.13.12)
[22:06:47] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (Ping timeout: 268 seconds)
[22:07:43] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[22:13:15] *** Quits: dom2 (~dom2@c-65-96-173-68.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[22:13:37] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 246 seconds)
[22:14:15] *** Quits: JesseW (~nuc@user/jessew) (Ping timeout: 276 seconds)
[22:14:36] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[22:14:41] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.2)
[22:16:22] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[22:16:47] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[22:21:05] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[22:26:09] *** Quits: mjbatty_ (~mjbatty@82.2.17.205) (Quit: Leaving)
[22:26:42] *** Quits: mw_ (~mw@catv-86-101-13-145.catv.broadband.hu) (Read error: Connection reset by peer)
[22:26:44] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[22:26:52] *** Joins: mw_ (~mw@catv-86-101-13-145.catv.broadband.hu)
[22:27:08] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (Ping timeout: 268 seconds)
[22:30:03] <greycat> OK... I think I've finished the MoinMoin 1.9.11 upgrade.  Restored the ability to create accounts, and gave universal read/write access by default, both of which were changed in 1.9.11.
[22:30:29] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[22:31:54] <greycat> (or actually in 1.9.10 but whatever)
[22:32:57] *** Joins: alzgh (~alzgh@51.15.9.205)
[22:35:03] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[22:35:45] *** Quits: mci64 (~X@185.242.190.95) (Quit: Going offline, see ya! (www.adiirc.com))
[22:36:09] *** Joins: mci64 (~x@185.242.190.95)
[22:37:03] *** Joins: ExeciN (~ExeciN@user/nicexe)
[22:37:29] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 248 seconds)
[22:40:58] *** Quits: php (~killown@user/killown) (Quit: Leaving)
[22:41:20] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[22:43:07] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[22:45:49] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 246 seconds)
[22:47:24] *** Quits: metal_egg (~metal0egg@pool-72-94-145-43.phlapa.fios.verizon.net) (Remote host closed the connection)
[22:48:26] *** Atque is now known as Atque-
[22:48:33] *** Atque- is now known as Atque
[22:48:40] *** Joins: alzgh_ (~alzgh@51.15.9.205)
[22:51:09] *** Quits: alzgh (~alzgh@51.15.9.205) (Quit: Client closed)
[22:51:27] *** Quits: alzgh_ (~alzgh@51.15.9.205) (Client Quit)
[22:51:38] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:51:57] *** Joins: jinsun (~quassel@user/jinsun)
[22:55:30] *** Joins: alzgh (~alzgh@51.15.9.205)
[22:56:50] *** Joins: jsrnop1 (~mark@user/jsrnop)
[22:57:23] *** Joins: af (~af@awalgarg.me)
[22:58:12] *** Quits: jsrnop (~mark@user/jsrnop) (Read error: Connection reset by peer)
[22:58:12] *** jsrnop1 is now known as jsrnop
[23:00:10] *** Quits: Adois (~Adoi@user/adoi) (Ping timeout: 272 seconds)
[23:02:01] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[23:03:44] *** Joins: magla (~gelignite@55d4fb74.access.ecotel.net)
[23:05:13] *** Quits: vee_ (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 248 seconds)
[23:08:04] *** Joins: gruuf (~gruuf@94.31.99.29)
[23:09:42] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[23:14:13] *** Joins: ExeciN (~ExeciN@user/nicexe)
[23:14:13] *** Joins: wedwards (~wedwards@rtr0.17.31.bogert.cyberfusion.cloud)
[23:14:52] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[23:18:43] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 246 seconds)
[23:18:57] *** Joins: besnn (~besnn@user/besnn)
[23:19:53] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[23:21:19] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[23:21:37] *** Joins: vee_ (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[23:21:52] *** Joins: keypusher (keypusher@user/keypusher)
[23:22:38] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[23:22:56] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[23:24:18] *** Quits: itok (sid418430@id-418430.charlton.irccloud.com) (Ping timeout: 256 seconds)
[23:24:18] *** Quits: Manouchehri (sid384576@id-384576.stonehaven.irccloud.com) (Ping timeout: 272 seconds)
[23:24:21] *** Joins: Buliarous (~gypsydang@185.207.166.57)
[23:24:45] *** Quits: Buliarous (~gypsydang@185.207.166.57) (Remote host closed the connection)
[23:25:07] *** Quits: kwilczynski (sid379192@user/kwilczynski) (Ping timeout: 245 seconds)
[23:25:07] *** Quits: starman_jr (sid265462@id-265462.stonehaven.irccloud.com) (Ping timeout: 245 seconds)
[23:25:08] *** Quits: ljharb (sid43720@user/ljharb) (Ping timeout: 252 seconds)
[23:25:08] *** Quits: odc (sid197788@id-197788.brockwell.irccloud.com) (Ping timeout: 252 seconds)
[23:25:17] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) (Ping timeout: 258 seconds)
[23:25:17] *** Quits: pwillard (sid136981@id-136981.stonehaven.irccloud.com) (Ping timeout: 258 seconds)
[23:25:26] *** Quits: terabit (sid146285@id-146285.highgate.irccloud.com) (Ping timeout: 256 seconds)
[23:25:30] *** Quits: liam (sid7517@id-7517.brockwell.irccloud.com) (Ping timeout: 240 seconds)
[23:25:30] *** Quits: kenyon (sid496813@id-496813.highgate.irccloud.com) (Ping timeout: 240 seconds)
[23:25:35] *** Quits: arya (uid512841@id-512841.charlton.irccloud.com) (Ping timeout: 252 seconds)
[23:25:54] *** Quits: Darkfoe (sid402081@id-402081.brockwell.irccloud.com) (Ping timeout: 240 seconds)
[23:25:57] *** Quits: jsatk (sid304796@id-304796.brockwell.irccloud.com) (Ping timeout: 245 seconds)
[23:26:00] *** Quits: mjbatty (uid512825@id-512825.charlton.irccloud.com) (Ping timeout: 256 seconds)
[23:26:12] *** Quits: rubin55___ (sid175221@id-175221.stonehaven.irccloud.com) (Ping timeout: 272 seconds)
[23:26:26] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Ping timeout: 258 seconds)
[23:26:36] *** Joins: ExeciN (~ExeciN@user/nicexe)
[23:26:43] *** Joins: mjbatty (uid512825@charlton.irccloud.com)
[23:26:43] *** Joins: tejr (~tejr@user/tejr)
[23:27:01] *** Joins: itok (sid418430@charlton.irccloud.com)
[23:27:42] *** Joins: odc (sid197788@brockwell.irccloud.com)
[23:27:54] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 240 seconds)
[23:28:16] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Ping timeout: 256 seconds)
[23:28:20] *** Quits: lantech19446 (sid237550@id-237550.brockwell.irccloud.com) (Ping timeout: 252 seconds)
[23:28:22] *** Quits: ullbeking (sid5364@id-5364.charlton.irccloud.com) (Ping timeout: 258 seconds)
[23:28:42] *** Quits: mjbatty (uid512825@charlton.irccloud.com) (Max SendQ exceeded)
[23:29:00] *** Quits: hwrd (sid64402@id-64402.tooting.irccloud.com) (Ping timeout: 276 seconds)
[23:29:07] *** Quits: Pent (sid313808@id-313808.tooting.irccloud.com) (Ping timeout: 258 seconds)
[23:29:11] *** Joins: kwilczynski (sid379192@user/kwilczynski)
[23:29:19] *** Quits: itok (sid418430@charlton.irccloud.com) (Max SendQ exceeded)
[23:29:40] *** Joins: kenyon (sid496813@id-496813.highgate.irccloud.com)
[23:29:45] *** Joins: BlueShark (sid10311@user/blueshark)
[23:29:46] *** Joins: rustyshackleford (uid236774@brockwell.irccloud.com)
[23:29:56] *** Joins: ljharb (sid43720@id-43720.tooting.irccloud.com)
[23:29:57] *** Quits: ljharb (sid43720@id-43720.tooting.irccloud.com) (Changing host)
[23:29:57] *** Joins: ljharb (sid43720@user/ljharb)
[23:29:58] *** Joins: ullbeking (sid5364@id-5364.charlton.irccloud.com)
[23:29:59] *** Joins: jsatk (sid304796@id-304796.brockwell.irccloud.com)
[23:30:00] *** Joins: itok (sid418430@id-418430.charlton.irccloud.com)
[23:30:00] *** Joins: arya (uid512841@charlton.irccloud.com)
[23:30:12] *** Joins: liam (sid7517@brockwell.irccloud.com)
[23:30:18] *** Joins: mjbatty (uid512825@id-512825.charlton.irccloud.com)
[23:30:28] *** Joins: bn_work (uid268505@id-268505.highgate.irccloud.com)
[23:30:28] *** Joins: terabit (sid146285@highgate.irccloud.com)
[23:30:32] *** Joins: Darkfoe (sid402081@id-402081.brockwell.irccloud.com)
[23:30:34] *** Joins: hwrd (sid64402@id-64402.tooting.irccloud.com)
[23:30:35] *** Joins: lantech19446 (sid237550@id-237550.brockwell.irccloud.com)
[23:30:52] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[23:30:56] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[23:30:56] *** Joins: mci64_ (~X@185.242.190.95)
[23:30:56] *** Joins: Pent (sid313808@id-313808.tooting.irccloud.com)
[23:31:02] *** Quits: LordRishav (~LordRisha@user/lordrishav) (Ping timeout: 258 seconds)
[23:31:31] *** Joins: LSD (~LSD@2.lsd.systems)
[23:31:44] *** Joins: tejr (~tejr@user/tejr)
[23:31:57] *** LSD is now known as acidsys
[23:32:01] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 246 seconds)
[23:32:07] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Client closed)
[23:33:26] *** Joins: LordRishav (~LordRisha@user/lordrishav)
[23:34:25] *** Joins: mci64 (~X@185.242.190.95)
[23:35:02] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[23:35:31] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[23:36:06] *** Quits: mci64_ (~X@185.242.190.95) (Quit: Going offline, see ya! (www.adiirc.com))
[23:36:25] *** Joins: jakesyl (sid56879@id-56879.stonehaven.irccloud.com)
[23:36:39] *** Joins: rubin55___ (sid175221@id-175221.stonehaven.irccloud.com)
[23:36:53] *** Joins: pwillard (sid136981@id-136981.stonehaven.irccloud.com)
[23:37:24] *** Joins: Manouchehri (sid384576@id-384576.stonehaven.irccloud.com)
[23:37:44] *** Quits: mci64 (~X@185.242.190.95) (Client Quit)
[23:40:28] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[23:41:10] *** Joins: mci64 (~X@185.242.190.95)
[23:41:38] *** Joins: starman_jr (sid265462@stonehaven.irccloud.com)
[23:44:13] *** Quits: mci64 (~X@185.242.190.95) (Client Quit)
[23:45:05] *** Joins: mci64 (~X@185.242.190.95)
[23:46:45] *** Quits: mci64 (~X@185.242.190.95) (Client Quit)
[23:48:11] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Quit: Leaving)
[23:49:38] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: Textual IRC Client: www.textualapp.com)
[23:52:51] *** Quits: darkbit (~db@152.32.99.67) (Ping timeout: 268 seconds)
[23:52:57] *** Joins: mci64 (~X@185.242.190.95)
[23:55:53] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 248 seconds)
[23:57:16] *** Quits: mci64 (~X@185.242.190.95) (Client Quit)
[23:57:38] *** Joins: mci64 (~x@185.242.190.95)
[23:58:22] *** Quits: mci64 (~x@185.242.190.95) (Remote host closed the connection)
[23:59:04] *** Joins: mci64 (~x@185.242.190.95)
[23:59:11] *** Joins: mci64_ (~X@185.242.190.95)
[23:59:17] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
