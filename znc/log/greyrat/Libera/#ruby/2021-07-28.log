[00:00:16] *** Joins: qunzhong1luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[00:02:34] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 240 seconds)
[00:10:31] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[00:11:18] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:18:45] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[00:19:15] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:26:33] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[00:27:15] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[00:30:37] *** Quits: qunzhong1luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Quit: leaving)
[00:30:52] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[00:31:50] *** Quits: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com) (Ping timeout: 256 seconds)
[00:43:12] *** Joins: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com)
[00:43:23] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Quit: leaving)
[00:43:41] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[00:45:02] *** Joins: mrkz_c (uid503554@user/mrkz-c/x-7247691)
[00:53:09] *** Quits: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[00:53:58] <nakilon> are things like these now easier with "pattern matching" in Ruby? https://dpaste.org/3bTJ/slim
[00:54:22] <nakilon> or maybe there is some specific cool gem to assert the json structure
[00:54:23] *** Quits: slothby (~JoshAshby@irc.isin.space) (Ping timeout: 268 seconds)
[00:54:34] *** Joins: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[00:55:17] *** Joins: slothby (~JoshAshby@irc.isin.space)
[00:55:47] <nakilon> I don't want to write a ton of "fail unless" -- I want to write all the regexes and rules in one object
[00:56:41] <adam12> nakilon: dry-schema or dry-validation?
[00:57:16] <nakilon> dry is a sect
[00:57:31] <adam12> O_O
[00:58:38] <nakilon> and doesn't see like any clearer than multiple fail unlesses https://dry-rb.org/gems/dry-schema/1.5/
[00:58:48] <nakilon> *seem to be any
[00:59:47] <nakilon> this looks better https://github.com/ruby-json-schema/json-schema
[01:00:00] <weaksauce> i mean it does error reporting in the object 
[01:01:33] <nakilon> yeah I don't see neat error messages in json-schema
[01:03:09] <nakilon> I already did similar  schema check in my old project that was checking if data are collected correctly before putting it as noSQL values -- it was telling where and what went wrong, but I don't want to make the wheel again
[01:05:09] <nakilon> or do I...
[01:05:34] <weaksauce> that dry library looks pretty solid tbh
[01:07:35] <nakilon> and not DRY at all
[01:08:29] <nakilon> they are just piling together dozens of non-related gems under the dry-* namespace because they are the company of friends
[01:08:36] <nakilon> that's how I see it
[01:18:48] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 276 seconds)
[01:19:12] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[01:20:50] <oz> these are more utils/oop support libs, than "DRY" as in "Dont' Repeat Yourself"
[01:21:00] <oz> but it's a pretty cool project. :)
[01:22:46] <weaksauce> yeah does it need to be dry for you to use it? 
[01:23:10] <weaksauce> though it is somewhat dry in the sense that your validations are all in one place 
[01:23:10] <nakilon> does is it to add "dry-" prefix in every gem name? it's like ads banners
[01:46:27] <nakilon> this works: https://dpaste.org/pPYy/slim
[01:50:23] <nakilon> so it took only 20 minutes to implement most of it, now only needs Array checks and maybe something else
[01:55:20] <nakilon> more complex assertions will be harder to make, like "this one hash keys should be equal to this one .map{ ... }", but probably possible
[01:56:00] <weaksauce> seems kinda brittle for what you gain 
[01:56:03] <weaksauce> but you do you
[01:56:04] <nakilon> either put callback in some common ancestor or using some kinds of anchors
[02:01:00] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Quit: leaving)
[02:01:29] *** Joins: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[02:02:12] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 245 seconds)
[02:02:43] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:02:44] *** Quits: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 255 seconds)
[02:09:30] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 276 seconds)
[02:10:38] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:19:42] *** Quits: motherr (~motherr@user/motherr) (Quit: zzz)
[02:20:38] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 256 seconds)
[02:21:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:21:39] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[02:24:23] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[02:28:21] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[02:29:02] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:42:56] <rg> maybe dry isn't for you but it provides much needed diversity in an ecosystem dominated by rails, i dont hate rails or anything but competition is healthy.
[02:45:54] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 276 seconds)
[02:46:37] <nakilon> I'm not into websites
[02:46:58] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[02:49:41] *** Quits: crankharder (~crankhard@static-71-121-154-44.bltmmd.fios.verizon.net) (Ping timeout: 258 seconds)
[02:59:49] *** Quits: orbyt (~textual@172.92.4.78) (Quit: Textual IRC Client: www.textualapp.com)
[03:02:07] *** Quits: ua_ (~ua@public-gprs224698.centertel.pl) (Ping timeout: 250 seconds)
[03:03:05] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[03:05:08] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[03:06:25] *** Joins: ua_ (~ua@public-gprs222106.centertel.pl)
[03:10:51] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[03:11:54] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[03:12:04] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[03:21:27] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[03:23:39] *** Joins: crankharder (~crankhard@pool-71-127-147-231.bltmmd.fios.verizon.net)
[03:24:14] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 268 seconds)
[03:28:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[03:28:32] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[03:30:26] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:33:00] *** Quits: crankharder (~crankhard@pool-71-127-147-231.bltmmd.fios.verizon.net) (Ping timeout: 258 seconds)
[03:49:32] *** Joins: crankharder (~crankhard@pool-71-127-147-231.bltmmd.fios.verizon.net)
[04:21:38] *** Joins: finsternis (~X@23.226.237.192)
[04:30:33] *** Quits: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com) (Ping timeout: 252 seconds)
[04:35:28] *** Quits: ua_ (~ua@public-gprs222106.centertel.pl) (Ping timeout: 265 seconds)
[04:36:30] *** Joins: ua_ (~ua@public-gprs222106.centertel.pl)
[04:55:22] *** Joins: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com)
[04:59:05] <nakilon> so finally it looks like this https://dpaste.org/ER8i/slim I now just expand the ranges and regexes
[05:05:22] *** Quits: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 240 seconds)
[05:12:42] *** Quits: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com) (Ping timeout: 240 seconds)
[05:25:25] <nakilon> the only issue is that it's harder  to user line-profiler to find the bottlenecking matcher in this Hash, but no one uses line-profilers in Ruby anyway
[05:25:58] <nakilon> *to use
[05:32:26] *** Quits: seisatsu (~seisatsu@2604:180:1:563::3652) (Ping timeout: 255 seconds)
[05:34:23] *** Joins: seisatsu (~seisatsu@107.161.24.70)
[05:35:04] <weaksauce> yeah that's a lot better than the dry-json thing
[05:38:06] *** Joins: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com)
[05:43:42] *** Quits: crankharder (~crankhard@pool-71-127-147-231.bltmmd.fios.verizon.net) (Ping timeout: 252 seconds)
[05:56:29] <nakilon> is it considered ok to have \n in exception messages?
[05:59:38] *** Quits: ua_ (~ua@public-gprs222106.centertel.pl) (Ping timeout: 268 seconds)
[06:00:06] *** Joins: ua_ (~ua@public-gprs222106.centertel.pl)
[06:06:47] *** Quits: ua_ (~ua@public-gprs222106.centertel.pl) (Ping timeout: 245 seconds)
[06:07:22] *** Joins: ua_ (~ua@public-gprs222106.centertel.pl)
[06:10:46] *** Joins: crankharder (~crankhard@pool-71-127-147-231.bltmmd.fios.verizon.net)
[06:13:59] *** Joins: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4)
[06:15:55] *** Quits: crankharder (~crankhard@pool-71-127-147-231.bltmmd.fios.verizon.net) (Ping timeout: 258 seconds)
[06:18:00] <nakilon> you said it's brittle ..D
[06:18:43] <nakilon> I'll gemify it later after I reuse it once or twice somewhere else
[06:29:47] *** Quits: ua_ (~ua@public-gprs222106.centertel.pl) (Ping timeout: 252 seconds)
[06:29:55] *** Joins: crankharder (~crankhard@pool-71-127-147-231.bltmmd.fios.verizon.net)
[06:30:22] *** Joins: ua_ (~ua@public-gprs222106.centertel.pl)
[06:35:57] *** Quits: crankharder (~crankhard@pool-71-127-147-231.bltmmd.fios.verizon.net) (Ping timeout: 252 seconds)
[06:44:57] *** Joins: crankharder (~crankhard@pool-71-127-147-231.bltmmd.fios.verizon.net)
[07:07:33] *** Quits: crankharder (~crankhard@pool-71-127-147-231.bltmmd.fios.verizon.net) (Quit: leaving)
[07:15:39] *** Joins: Guest6182 (~Guest61@181.99.69.236)
[07:35:53] *** Quits: Guest6182 (~Guest61@181.99.69.236) (Quit: Client closed)
[07:51:24] *** Quits: ua_ (~ua@public-gprs222106.centertel.pl) (Ping timeout: 276 seconds)
[07:52:30] *** Joins: ua_ (~ua@public-gprs222106.centertel.pl)
[08:10:39] *** Joins: gggp (~gggp@60.10.194.43)
[08:13:27] *** Quits: ua_ (~ua@public-gprs222106.centertel.pl) (Ping timeout: 268 seconds)
[08:14:12] *** Joins: ua_ (~ua@public-gprs222106.centertel.pl)
[08:32:17] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:33:34] <rg> as long as its readable a new line is fine by me.
[08:47:57] *** Quits: willow (~willow@173-228-31-194.dsl.static.fusionbroadband.com) (Quit: willow)
[09:11:32] *** Quits: gggp (~gggp@60.10.194.43) (Remote host closed the connection)
[09:11:55] *** Joins: gggp (~gggp@111.63.14.119)
[09:13:06] *** Joins: gggp_ (~gggp@60.10.194.43)
[09:17:14] *** Quits: gggp (~gggp@111.63.14.119) (Ping timeout: 272 seconds)
[09:30:07] *** Quits: ur5us (~ur5us@2406:e002:6b40:5201:1e1c:afed:873a:e5e4) (Ping timeout: 245 seconds)
[09:38:12] *** Joins: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[09:40:34] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[09:40:56] *** Quits: Melantha (~pyon@user/pyon) (Ping timeout: 256 seconds)
[09:42:43] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[09:47:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[09:53:18] *** Joins: gggp__ (~gggp@60.10.194.43)
[09:56:18] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[09:56:42] *** Joins: gggp (~gggp@60.10.194.43)
[09:59:18] *** Quits: gggp__ (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[09:59:45] *** Joins: gggp_ (~gggp@60.10.194.43)
[10:02:53] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 250 seconds)
[10:11:23] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[10:35:31] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[10:39:43] *** Quits: Nowaker (~quassel@188.116.38.80) (Remote host closed the connection)
[10:44:01] *** Joins: perrierj1 (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[10:45:12] *** Quits: perrierj1 (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[10:46:00] *** Joins: Nowaker (~quassel@188.116.38.80)
[10:48:57] *** Joins: perrierj1 (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[10:49:11] *** Quits: perrierj1 (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[10:55:38] *** Joins: Nik- (~textual@p5b3f9388.dip0.t-ipconnect.de)
[10:57:15] *** Quits: Nik- (~textual@p5b3f9388.dip0.t-ipconnect.de) (Client Quit)
[11:16:48] *** Quits: easbarbosa (~user@2804:1b2:82:e989:3335:154c:a507:9308) (Ping timeout: 276 seconds)
[11:26:54] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[11:31:37] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:34:50] *** Quits: mrkz_c (uid503554@user/mrkz-c/x-7247691) (Quit: Connection closed for inactivity)
[11:40:41] *** Joins: perrierj1 (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[11:40:45] *** Quits: perrierj1 (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Remote host closed the connection)
[11:40:58] *** Joins: perrierj1 (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[11:41:38] *** Quits: perrierj1 (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[11:41:48] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.0)
[11:42:49] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[11:44:04] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[11:47:16] *** Joins: gggp__ (~gggp@60.10.194.43)
[11:50:18] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[11:53:38] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 258 seconds)
[11:58:50] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[12:01:31] *** gggp__ is now known as gggp
[12:03:37] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:07:00] *** Joins: hexreel (~hr@69.233.98.238)
[12:27:50] *** Joins: royo25 (~supergeek@user/royo25)
[12:32:56] *** Quits: hexreel (~hr@69.233.98.238) (Quit: nyaa~)
[12:53:08] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[12:53:32] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[12:58:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[13:01:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[13:11:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[13:19:15] *** Joins: gggp_ (~gggp@60.10.194.43)
[13:22:18] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[13:23:16] *** Joins: gggp__ (~gggp@111.63.14.119)
[13:25:09] *** Joins: Melantha (~pyon@user/pyon)
[13:26:18] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[13:33:25] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[13:34:00] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:00:16] *** Joins: gggp_ (~gggp@111.63.14.119)
[14:04:08] *** Quits: gggp__ (~gggp@111.63.14.119) (Ping timeout: 272 seconds)
[14:05:42] *** Joins: aeri- (~aeris@gateway/tor-sasl/aeris)
[14:06:00] *** Quits: aeris (~aeris@gateway/tor-sasl/aeris) (Ping timeout: 244 seconds)
[14:11:53] *** Joins: gggp__ (~gggp@60.10.194.43)
[14:15:05] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 258 seconds)
[14:32:12] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 256 seconds)
[14:32:23] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:44:33] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[14:44:45] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[15:49:47] *** Joins: motherr (~motherr@user/motherr)
[16:01:30] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 268 seconds)
[16:01:45] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:10:56] *** Joins: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com)
[16:11:28] *** Quits: dviola (~diego@user/dviola) (Ping timeout: 265 seconds)
[16:13:12] *** Joins: dviola (~diego@187.39.20.53)
[16:21:45] *** Joins: aeris (~aeris@gateway/tor-sasl/aeris)
[16:22:24] *** Quits: aeri- (~aeris@gateway/tor-sasl/aeris) (Ping timeout: 244 seconds)
[16:27:33] *** Joins: Bounga (~nico@82-65-32-175.subs.proxad.net)
[16:54:14] *** Joins: sleetdrop (~sleetdrop@61.135.152.135)
[17:11:33] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[17:11:42] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:15:35] *** Joins: FetidToot7 (~FetidToot@user/fetidtoot)
[17:17:24] *** Quits: FetidToot (~FetidToot@user/fetidtoot) (Ping timeout: 252 seconds)
[17:17:24] *** FetidToot7 is now known as FetidToot
[17:18:21] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[17:19:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:23:50] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[17:34:47] *** Quits: sleetdrop (~sleetdrop@61.135.152.135) (Quit: Textual IRC Client: www.textualapp.com)
[17:47:38] *** Quits: gggp__ (~gggp@60.10.194.43) (Read error: Connection reset by peer)
[18:08:05] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:23:42] *** Joins: seydar (~seydar@154-27-113-252.starry-inc.net)
[18:25:46] <seydar> I've got a CPU-bound process that I'm trying to use multithreading to tackle (on a 4-core laptop). Right now, it's using Ruby threads, which I *think* correlate to native threads and are not bound by a GIL. I am likely wrong, because it is not giving me the speedup I desire. How would you recommend I improve upon this to get *actual* parallel processing? https://pastebin.com/J7xyaSN4
[18:25:46] <ruby[bot]> seydar: we in #ruby do not like pastebin.com, it loads slowly for most, has ads which are distracting and has terrible formatting. Please use https://gist.github.com
[18:27:08] <adam12> seydar: Have you looked at the parallel gem?
[18:27:22] <adam12> seydar: Your only option is likely multiple processes, which will avoid the GIL.
[18:29:14] <seydar> adam12: I have, but it uses a queuing system for multithreading: 1st elt to one thread, 2nd elt to another thread, etc. I was afraid that that was providing too much overhead which was why I wasn't getting any speedup, so I tried splitting it by chunks (first quarter of the array to one thread, second quarter to another, etc.)
[18:29:41] <seydar> adam12: If I'm using fork to do my multithreading, what's the best way to get a result back?
[18:29:56] <adam12> seydar: Maybe IO.pipe? or some other IPC mechanism.
[18:30:11] <seydar> adam12: and after digging into the code for parallel, it still seems to use Thread.new, even for multiple processes
[18:31:58] <adam12> seydar: It should use fork if you pass it a processes option.
[18:35:47] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[18:35:56] <nakilon> is there any search service for homebrew? not just regex matching the formula name bug something more clever, like matching description or machine-learning or community-organized topics like tags in ruby toolbox
[18:35:59] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[18:37:31] <seydar> adam12: Welp, I'm terrible at reading code. I should've known my conclusion was fishy. It definitely uses fork and it definitely uses pipes to send data from a child to the parent.
[18:37:44] <seydar> Please scrub my question from the logs
[18:38:13] <nakilon> seydar's snippet above seems good enough but
[18:38:22] <nakilon> you do the Integer#/
[18:38:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[18:38:41] <seydar> nakilon: yeah, that'd deliberate because I can't slice an array with a Float
[18:38:44] <nakilon> so you'll lose last mod(4) elements, lol
[18:39:12] <seydar> nakilon: Enumerable#each_slice returns you the last mod(4) elements at the end
[18:40:06] <nakilon> oh, true, you'll just get the very tiny 5th thread
[18:40:12] *** Quits: dviola (~diego@187.39.20.53) (Changing host)
[18:40:12] *** Joins: dviola (~diego@user/dviola)
[18:40:35] *** Quits: seydar (~seydar@154-27-113-252.starry-inc.net) (Quit: leaving)
[18:41:01] *** Joins: seydar (~seydar@154-27-113-252.starry-inc.net)
[18:41:37] *** Quits: royo25 (~supergeek@user/royo25) (Quit: Bye)
[18:41:39] <seydar> I think I'm going to rent out some AWS space and try running my code over there with the Parallel gem
[18:41:51] <nakilon> are your threads finishing at the same time? otherwise I would teach them Array#pop the value from the queue until nil
[18:43:32] <nakilon> or using Enumerable and #next, whatever, both is thread-safe I suppose
[18:43:41] <nakilon> *are
[18:52:56] *** Quits: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com) (Ping timeout: 268 seconds)
[18:55:49] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:05:32] *** Quits: pgib (~textual@173.38.117.81) (Quit: 00 PC LOAD LETTER)
[19:18:30] *** Joins: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com)
[19:19:35] <nakilon> also seydar don't do #<< and then #flatten -- instead just do #concat
[19:23:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[19:24:07] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:30:46] <seydar> nakilon: great point about #concat, thank you
[19:30:48] *** Quits: seydar (~seydar@154-27-113-252.starry-inc.net) (Quit: leaving)
[19:45:15] *** Joins: TorpedoSkyline (~torpedosk@wsip-70-168-198-102.br.br.cox.net)
[19:45:15] *** Quits: TorpedoSkyline (~torpedosk@wsip-70-168-198-102.br.br.cox.net) (Changing host)
[19:45:15] *** Joins: TorpedoSkyline (~torpedosk@user/torpedoskyline)
[19:47:04] *** Joins: gggp (~gggp@125.33.89.68)
[20:05:22] *** Quits: Bounga (~nico@82-65-32-175.subs.proxad.net) (Ping timeout: 240 seconds)
[20:05:35] *** Quits: chonkbit (~chonkbit@2600:1700:2150:1d40:86c5:a6ff:fe3b:ae7a) (Remote host closed the connection)
[20:21:35] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[20:34:12] *** Quits: jtdowney (~jtdowney@user/jtdowney) (Ping timeout: 258 seconds)
[20:37:31] *** Joins: reset (~reset@user/reset)
[20:38:59] *** Quits: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com) (Ping timeout: 252 seconds)
[20:40:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[20:41:20] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[20:43:33] *** Joins: jtdowney (~jtdowney@user/jtdowney)
[20:45:59] *** Joins: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com)
[20:46:24] *** Quits: lad (~lad@user/lad) (Ping timeout: 268 seconds)
[20:47:42] *** Joins: orbyt (~textual@172.92.4.78)
[20:58:47] *** Quits: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com) (Ping timeout: 252 seconds)
[21:01:37] *** Joins: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com)
[21:04:54] *** Joins: lad (~lad@user/lad)
[21:05:54] *** Quits: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com) (Ping timeout: 240 seconds)
[21:14:03] *** Quits: TorpedoSkyline (~torpedosk@user/torpedoskyline) (Quit: Konversation terminated!)
[21:19:41] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[21:19:49] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:20:56] *** Quits: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416) (Ping timeout: 268 seconds)
[21:22:20] *** Joins: qunzhong_luxian (~qunzhong_@user/qunzhong-luxian/x-4995416)
[21:24:21] *** Joins: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com)
[21:27:19] *** Joins: lunarkitty (uid501895@user/pyra)
[21:48:27] *** Quits: gggp (~gggp@125.33.89.68) (Read error: Connection reset by peer)
[21:50:25] *** Joins: TomyWork (~TomyLobo@p200300e80f133c003cd1713e5d023bbb.dip0.t-ipconnect.de)
[22:03:31] <rg> why did no one suggest Ractor?
[22:04:01] <adam12> rg: Too experimental.
[22:04:06] <rg> fair enough
[22:12:25] *** Joins: wei1 (~wei@172-97-224-178.cpe.distributel.net)
[22:14:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[22:15:34] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[22:22:40] *** Quits: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com) (Ping timeout: 265 seconds)
[22:25:22] *** Quits: TomyWork (~TomyLobo@p200300e80f133c003cd1713e5d023bbb.dip0.t-ipconnect.de) (Quit: Leaving)
[22:42:23] *** Joins: Greg59 (~Greg59@226.107.192.77.rev.sfr.net)
[22:46:53] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[22:47:43] *** Joins: cahoots (~cahoots@cpe-24-193-236-84.nyc.res.rr.com)
[22:53:21] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:03:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:04:21] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:05:01] *** Quits: SuperLag (~akulbe@user/superlag) (Quit: leaving)
[23:05:33] *** Joins: SuperLag (~akulbe@user/superlag)
[23:05:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[23:06:01] *** Quits: Greg59 (~Greg59@226.107.192.77.rev.sfr.net) (Quit: Ping timeout (120 seconds))
[23:12:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:13:37] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:13:47] *** Quits: justache (~justache@user/justache) (Quit: The Lounge - https://thelounge.chat)
[23:15:01] *** Joins: justache (~justache@user/justache)
[23:17:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:19:30] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:20:23] *** Quits: aeris (~aeris@gateway/tor-sasl/aeris) (Ping timeout: 244 seconds)
[23:20:33] *** Joins: aeri- (~aeris@gateway/tor-sasl/aeris)
[23:26:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:27:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:31:46] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:32:25] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[23:38:50] *** Joins: easbarbosa (~user@2804:1b2:82:e989:3335:154c:a507:9308)
[23:40:46] *** Joins: goldfish (~goldfish@user/goldfish)
[23:46:58] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[23:48:00] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
