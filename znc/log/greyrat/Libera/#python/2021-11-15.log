[00:00:00] <Julian> the word is sentinel
[00:00:20] <Julian> use `is` with bools if your bool is a sentinel, don't use is or == if you're just comparing normally, which is 99% of the time
[00:00:34] <Julian> where "sentinel" means "a value whose identity itself represents the condition you care about"
[00:01:09] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:01:10] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[00:01:21] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[00:01:26] <Julian> (so if you have some argument whose value can be any object, or False, and False means some specific behavior, compare to that argument with `if argument is False`)
[00:01:33] <Celelibi> Anyway, since the PEP 285 guarantees that there won't be any other instance than the two builtin True and False, using is should be ok.
[00:02:08] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 256 seconds)
[00:02:27] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Quit: WeeChat 3.3)
[00:03:33] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:f1f8:4a6f:61d7:183) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[00:04:11] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[00:05:31] *** Quits: schumaml (~schumaml@p200300e2ef31de0053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[00:05:53] *** Joins: Macuser (~Macuser@216.30.159.201)
[00:08:43] *** Joins: zebrag (~chris@user/zebrag)
[00:08:48] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[00:08:48] *** Quits: menace (~someone@user/menace) (Quit: menace)
[00:09:19] *** Joins: schumaml (~schumaml@p200300e2ef31de0053c1821a43d17d29.dip0.t-ipconnect.de)
[00:10:38] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:11:36] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 265 seconds)
[00:11:37] *** Quits: revilaika (~revilaika@151.144.8.109.rev.sfr.net) (Quit: WeeChat 3.3)
[00:11:48] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[00:14:27] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[00:14:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[00:14:45] *** Joins: bindu (~bindu@user/bindu)
[00:16:54] *** Joins: fikran (~fikran@user/fikran)
[00:20:11] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 264 seconds)
[00:20:11] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 264 seconds)
[00:20:36] *** Quits: interweb (~interweb@user/interweb) (Quit: Leaving)
[00:21:39] *** Joins: shokohsc865 (~shokohsc@175.196.23.93.rev.sfr.net)
[00:21:58] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 256 seconds)
[00:22:04] *** Quits: shokohsc86 (~shokohsc@38.248.23.93.rev.sfr.net) (Ping timeout: 268 seconds)
[00:22:05] *** shokohsc865 is now known as shokohsc86
[00:23:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:23:42] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[00:24:38] *** Joins: l4yer (~l4yer@195.181.170.210)
[00:24:41] *** Quits: sazawal (~sazawal@122.161.93.207) (Quit: Leaving)
[00:25:30] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[00:27:27] *** Joins: interweb (~interweb@user/interweb)
[00:27:36] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[00:28:50] *** Joins: llh (~llh@user/llh)
[00:30:12] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[00:30:28] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Ping timeout: 256 seconds)
[00:31:15] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[00:32:25] *** Quits: humdrumcoffee (~humdrumco@88.97.110.231) (Quit: WeeChat 3.3)
[00:32:47] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 264 seconds)
[00:34:47] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[00:35:02] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[00:35:26] *** Quits: teut (~teut@122.181.77.154) (Quit: Client closed)
[00:35:30] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[00:36:12] *** Joins: causa-sui (~causasui@192.241.228.169)
[00:36:47] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[00:37:05] *** Joins: Gerula (~Gerula@user/gerula)
[00:37:12] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[00:41:59] *** Joins: flok (~flok@keetweej.vanheusden.com)
[00:42:02] <flok> trying to play a frequency sweep via headphone and recording it via the microphone in python. now the strange thing is that the software always "hears" itself, as if there's a loopback somewhere. anyone any idea what I'm doing wrong? https://vps001.vanheusden.com/~folkert/testfreqs2.py I also don't see the test-frequency (stable at 3kHz)
[00:42:10] *** Quits: greedom (~greedom@x59cc994c.dyn.telefonica.de) ()
[00:42:29] *** Quits: rany (~rany@user/rany) (Quit: No Ping reply in 180 seconds.)
[00:42:31] *** Quits: magla (~gelignite@55d41163.access.ecotel.net) (Quit: Stay safe!)
[00:43:02] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[00:43:19] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Quit: WeeChat 3.3)
[00:43:51] *** Joins: rany (~rany@user/rany)
[00:44:53] *** Quits: emerent (~quassel@p200300cd57430969ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[00:45:01] *** Joins: emerent (~quassel@p200300cd574309a3ba27ebfffed28a59.dip0.t-ipconnect.de)
[00:47:50] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[00:48:36] *** Joins: moog (~moog@107.126.53.9)
[00:49:52] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[00:50:08] *** Joins: bindu (~bindu@user/bindu)
[00:50:34] *** Joins: totvs (~sidj@user/sidj)
[00:52:05] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[00:52:59] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[00:53:14] *** Quits: sidj (~sidj@user/sidj) (Ping timeout: 260 seconds)
[00:53:17] *** Quits: interweb (~interweb@user/interweb) (Remote host closed the connection)
[00:54:45] *** Quits: Narrat (~omnius@p200300df5f399f5d06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[00:54:56] *** Quits: ubert (~Thunderbi@p548c9652.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:55:14] *** Joins: ubert (~Thunderbi@p548c9652.dip0.t-ipconnect.de)
[00:55:48] *** Joins: teut (~teut@122.181.77.154)
[00:56:21] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 245 seconds)
[00:56:22] <teut> final = concatenate_videoclips([VideoFileClip(i.absolute()) for i in pathlib.Path(r'D:\Advanced+React').glob('*.mp4')])        'WindowsPath' object has no attribute 'endswith'
[00:56:45] <teut> can someone tell what is wrong here?
[00:57:49] *** Joins: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl)
[00:57:55] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[00:58:01] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[00:58:08] <bjs> teut: no,  where did endswith come from?  is that really the line that raised the error
[00:58:13] <bjs> teut: can you share the actual code and traceback
[00:58:14] *** Quits: totvs (~sidj@user/sidj) (Ping timeout: 256 seconds)
[00:58:17] <teut> its a compilation error
[00:58:24] <bjs> ... a compilation error?
[00:58:31] <BrenBarn> you'll need to show the full traceback, and more code
[00:58:51] *** Quits: fivegruel (~fivegruel@HSI-KBW-095-208-248-068.hsi5.kabel-badenwuerttemberg.de) (Ping timeout: 245 seconds)
[00:58:52] <bjs> teut: I doubt it's a compilation error, and especially not from Python itself.  Can we see the actual error+traceback+code ?
[00:59:53] <teut> ya , without the breakpont the debugger stopped at line 3
[00:59:54] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[00:59:59] <bjs> line 3 of what?
[01:00:08] <bjs> and what breakpoint? :p
[01:00:17] <graingert[m]> teut: You can't treat a Path like a str
[01:00:26] <teut> https://ibb.co/HTDZkjn
[01:00:39] <teut> this red, its compilation error right?
[01:00:44] <BrenBarn> please don't post images of code
[01:00:44] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[01:00:45] <hzm74> Hello, trying to create multiple dicts, each dictionary-name must get the name which is in a list. So I wanna loop trough a list and then each item in the list creates a dict with the name of that item.
[01:00:46] <graingert[m]> No
[01:00:50] <BrenBarn> copy and paste the actual code into a pastebin
[01:00:51] <hzm74> https://bpa.st/CKCQ
[01:01:05] <bjs> teut: this concatenate_videoclips function, where did it come from? What inputs does it expect?
[01:01:05] <graingert[m]> ffmpeg_reader can't handle os.PathLike instances
[01:01:09] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[01:01:10] <teut> that traceback in the console is what I got when I clicked continue
[01:01:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:01:29] <graingert[m]> You need to os.fsencode your paths before you pass them or fix ffmpeg_reader
[01:01:38] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[01:01:38] <teut> moviepy
[01:01:50] <teut> https://bpa.st/OB4Q
[01:02:29] <teut> https://bpa.st/EK5A  like really its 1 line only
[01:02:30] <BrenBarn> hzm: what are you intending the output to look like?
[01:02:49] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[01:02:53] <bjs> teut: it looks like the VideoFileClip doesn't support pathlib Paths
[01:03:40] <teut> but this lib has options for posix and other types of paths right?
[01:03:54] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[01:04:17] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 265 seconds)
[01:04:19] <bjs> teut: what is "this lib" ?
[01:04:45] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[01:04:57] <teut> oh it was an AttribiteError,  When it comes red banner I thought it was for compilation error
[01:05:07] *** Joins: sidj (~sidj@user/sidj)
[01:05:08] <hzm74> BrenBarn: output must be like 3 dicts: each dict contains the name of the player and further the keys which are mentioned in the list ‘oefeningen’
[01:05:18] <teut> pathlib bjs
[01:05:29] <bjs> teut: yes pathlib does,  but moviepy doesn't support pathlib
[01:05:32] <bjs> (it looks like)
[01:05:39] <teut> what does that mean?
[01:05:42] <bjs> maybe you'll have to convert the pathlib Paths to strings before you pass them to moviepy
[01:05:45] *** Joins: interweb (~interweb@user/interweb)
[01:06:00] <sgt_chuckles> how can I upgrade to python 3.10 via wsl on windows?
[01:06:01] <BrenBarn> hzm: What are the values supposed to be?
[01:06:02] <bjs> teut: I don't know how to phrase it another way,  moviepy doesn't know what to do with a pathlib object,  try turning it into a string
[01:06:10] <teut> oops, I printed i.absolute() and thought it was str
[01:06:18] <teut> I should ve checked type
[01:06:28] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[01:06:41] *** Joins: binary01 (~binary01@192.110.171.216)
[01:06:46] <bjs> teut: absolute() isn't even a documented feature of pathlib
[01:07:08] <teut> strange, vscode showed it in dropdown
[01:07:26] <bjs> teut: well that just tells me you don't read the documentation of the functions you use
[01:07:27] <bjs> :P
[01:07:44] <teut> this libs docs are difficult
[01:07:45] <bjs> which i believe has been the cause of more than one or two questions of yours ;)
[01:07:45] *** Quits: audiobirb (~audio@user/audio) (Remote host closed the connection)
[01:07:54] <bjs> teut: pathlib?
[01:07:57] <teut> ya
[01:08:01] *** Joins: audiobirb (~audio@user/audio)
[01:08:06] <bjs> teut: difficult how? to find?
[01:08:17] <teut> everything is an object
[01:08:22] *** Joins: korg815 (~korg815@user/korg815)
[01:08:33] <bjs> teut: ... yes?  this is Python, *everything* is an object always
[01:08:33] <teut> thats why I dont like to use it and use os always
[01:08:47] <teut> but I needed only *.mp4
[01:08:53] <bjs> teut: pathlib is good though, and its docs are very good and almost everything has lots of explanation and examples https://docs.python.org/3/library/pathlib.html
[01:09:12] *** Quits: NeoCore (~neocore@45.152.181.13) (Quit: Leaving)
[01:09:25] <bjs> when a function returns a pathlib Path object the docs are very clear, and the examples show that.  So I'm not sure what problem you're having with the docs
[01:09:31] <teut> that diagram is not helpful
[01:09:32] <bjs> (other than the obvious problem of ... not reading it at all)
[01:10:04] <teut> its formidable
[01:10:06] <bjs> teut: that page is not just one diagram at the top, the "diagram" (i assume you mean the one right at the top of that very big page) is just explaining the relationship between the different kind of pathlib Paths
[01:10:27] *** Quits: zoneu (~zoneu@user/zoneu) (Quit: Leaving)
[01:11:24] <hzm74> BrenBarn: I wan’t this : https://bpa.st/MJTQ
[01:11:45] <bjs> teut: well... I'm not sure what to say.  The docs are there, they are good and clear and have lots of details and examples for all the methods and attributes.
[01:11:46] <teut> like you see the examples the next thing and they look cool but then it took me too much searching to get the string out of the object
[01:12:18] *** Quits: interweb (~interweb@user/interweb) (Quit: Leaving)
[01:12:20] <teut> is there any lib that uses the objects?
[01:12:39] <bjs> teut: yes lots of things accept so-called "path-like" objects.  and you can always turn a pathlib Path into a string
[01:12:43] <teut> maybe  str(#pathlib object)  works
[01:12:58] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 256 seconds)
[01:12:59] <bjs> teut: why "maybe"? we *literally just talked about reading the docs to see*
[01:13:03] <bjs> like 2 seocnds ago
[01:13:56] *** Parts: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Leaving)
[01:14:30] *** greaser|q is now known as GreaseMonkey
[01:14:42] <teut> for a quick two line script 30 min went into just figuring out how to extract the path from this stuff
[01:15:08] *** Joins: binary01 (~binary01@192.110.171.216)
[01:17:12] <marduk> sounds a lot like programming
[01:17:34] <teut> the str() thing should had been in the first example, talking from UX perspectives
[01:17:49] <graingert[m]> <sgt_chuckles> "how can I upgrade to python 3.10..." <- Depends on which Linux distro you used, Ubuntu? Use deadsnakes
[01:18:04] <graingert[m]> teut: Don't use str(...) with Path
[01:18:11] <graingert[m]> Use os.fsdecode
[01:18:19] <teut> ya that I too saw
[01:18:28] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[01:18:59] <teut> I would rather use [i for i in os.listdir() if i.endswith(".mp4")]
[01:20:10] <nedbat> i agree that the diagram at the top of the pathlib docs should not be at the top
[01:20:58] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) ()
[01:21:13] <teut> I agree I m not paying you and availing free service , but from a customer's perspective these things do matter
[01:23:05] <hzm74> Hello, trying to create multiple dicts, each dictionary-name must get the name which is in a list. So I wanna loop trough a list and then each item in the list creates a dict with the name of that item.
[01:23:14] <hzm74> https://bpa.st/CKCQ
[01:23:55] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[01:24:09] <hzm74> Wanted output: https://bpa.st/MJTQ
[01:24:11] <grym> hzm74: what do you expect the result to look like
[01:24:22] <Naan> <marduk> sounds a lot like programming > i giggled
[01:24:47] <parv> Examples in pathlib document show str() to get string version. Is there a pending bug request to change that to os.fsdecode() (which is missing entirely from https://docs.python.org/3/library/pathlib.html as of now)?
[01:24:48] <grym> hzm74: {p:dict.fromkeys(oefeningen) for p in players}
[01:25:44] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:26:20] <nedbat> hzm74: you can't easily make variables with names from a list like that. maybe you want a dict of dicts?
[01:26:34] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Quit: ERC (IRC client for Emacs 27.1))
[01:27:12] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[01:27:58] <hzm74> Gru
[01:28:25] *** Joins: rany (~rany@user/rany)
[01:29:22] <hzm74> grym: I don’t understand that code😳 ( am new to this)
[01:29:26] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[01:29:43] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: The Lounge - https://thelounge.chat)
[01:30:19] <teut> https://www.programiz.com/python-programming/dictionary-comprehension  look at this or the official docs hzm74
[01:30:46] <grym> hzm74: run it and see what you get; but you'll get a dict of player name : exercises
[01:31:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:31:54] *** Quits: jemark (jemark@user/jemark) (Quit: leaving)
[01:32:08] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:32:38] <hzm74> nedbat: I have an excel-file with names of players and player-results. I wanna create for each player a dictionary which contains the name of the player and the results of the excersises.
[01:32:42] *** Joins: jemark (jemark@user/jemark)
[01:33:01] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 245 seconds)
[01:33:33] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:33:49] <hzm74> grym: I added you’re codeline to my code. How to display the dicts(s) ?
[01:34:00] *** Joins: jbox (~jbox@user/jbox)
[01:34:01] <teut> you need pandas hzm74
[01:34:03] *** Quits: jemark (jemark@user/jemark) (Client Quit)
[01:34:13] <parv> hzm74, pprint.pprint()
[01:34:19] <nedbat> hzm74: but then how would you use those variables? You don't know what they'll be called.
[01:34:42] <nedbat> hzm74: instead you could make one dict with player names as the keys, and the values are the dict with the results
[01:34:48] *** Parts: flok (~flok@keetweej.vanheusden.com) (Leaving)
[01:34:49] <hzm74> Teut: thnx gonna read on that.
[01:35:36] <teut> see a tutorial on youtube, you can read excel  with it and get basic commands pretty fast without knowing python
[01:36:02] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[01:36:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[01:36:13] *** Joins: jemark (jemark@user/jemark)
[01:36:32] <hzm74> nedbat: thnx. Gonna try things out.
[01:36:52] <teut> pd.read_excel(#path).to_dict("records")   probably  be your command  if your  excel has two column  "player names" and "score"
[01:37:20] *** Quits: jemark (jemark@user/jemark) (Client Quit)
[01:38:37] <teut> https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.to_dict.html   see the examples here
[01:38:51] *** Quits: AM (~techman@82-203-164-23.bb.dnainternet.fi) (Ping timeout: 245 seconds)
[01:39:12] *** Joins: jemark (jemark@user/jemark)
[01:39:27] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[01:39:41] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 245 seconds)
[01:39:52] <hzm74> Teut: thnx 👍
[01:40:29] <teut> np
[01:40:36] *** Joins: dre (~dre@2001:8003:c932:c301:e788:c1b2:43c3:18c)
[01:40:55] *** Joins: AM (~techman@82-203-167-114.bb.dnainternet.fi)
[01:41:31] *** Joins: grateful (grateful@user/grateful)
[01:41:51] *** Joins: audiobirb (~audio@user/audio)
[01:42:10] <grateful> anyone have experience with pychromecast or suggest a different route? for some reason i am having issues casting to it from my localip
[01:43:07] <Julian> grateful: works fine for me
[01:43:36] <grateful> it connects, but for some reason doesn't show my local files
[01:43:43] *** Quits: dre (~dre@2001:8003:c932:c301:e788:c1b2:43c3:18c) (Remote host closed the connection)
[01:43:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:44:12] <grateful> like my httpd shows the chromecast connecting, and visually on the tv it shows blank...
[01:44:16] *** Joins: binary011 (~binary01@192.110.171.216)
[01:44:20] *** Joins: Csm319_ (~csm3105@62.83.74.180.dyn.user.ono.com)
[01:44:50] *** Quits: binary01 (~binary01@192.110.171.216) (Read error: Connection reset by peer)
[01:44:55] <Julian> what do you mean by local files? local to what?
[01:45:01] *** Quits: fannagoganna (uid110488@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:46:07] <Julian> oh as in you're trying to cast a URL which has a domain on your local network?
[01:46:18] <Julian> does the normal case work? casting a youtube URL or something?
[01:46:22] *** Joins: pycurious (~Adium@user/pycurious)
[01:46:30] <queue[m]> im sure he means local to his network on his desktop, though it was confusing to hear that when he just spoke about his chromecast
[01:46:55] *** Quits: jemark (jemark@user/jemark) (Quit: leaving)
[01:47:32] *** Quits: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[01:47:38] *** Joins: dre (~dre@2001:8003:c932:c301:c5de:7260:cf6e:da0c)
[01:47:44] *** Joins: jemark (jemark@user/jemark)
[01:47:51] <Julian> grateful: I use pychromecast through catt FWIW, so you can try that -- https://pypi.org/project/catt/ though all it does is set up the objects pychromecast wants, so if it works for your usecase you can just look at what it sets up and how
[01:49:34] *** Joins: cheater (~Username@user/cheater)
[01:50:34] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:50:43] *** Joins: akk (~akk@75.161.146.115)
[01:51:20] *** Joins: revilaika (~revilaika@151.144.8.109.rev.sfr.net)
[01:51:23] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 264 seconds)
[01:51:31] *** Joins: Viewday118 (~Viewday@user/viewday)
[01:51:39] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[01:51:56] *** Joins: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob)
[01:52:17] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[01:53:20] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[01:53:32] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[01:53:46] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[01:53:46] *** Viewday118 is now known as Viewday11
[01:53:56] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[01:55:06] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 245 seconds)
[01:55:21] *** Quits: Julian1988 (~Julian198@ip-95-223-70-164.hsi16.unitymediagroup.de) (Remote host closed the connection)
[01:56:04] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[01:56:35] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[01:57:08] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[01:57:53] *** Quits: teut (~teut@122.181.77.154) (Quit: Client closed)
[02:01:02] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[02:03:45] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:05:33] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:07:40] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[02:08:27] <grateful> local network
[02:10:24] <grateful> can't seem to play anything local on port 80 or 8080, connects to it but doesn't visually display it on my chromecast
[02:10:56] <grateful> whereas if i take the png i generate, and upload it to imgur and play that url it plays fine
[02:11:09] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[02:11:21] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[02:12:25] <grateful> i'll give catt a try when i get home thanks Julian
[02:14:14] *** Quits: revilaika (~revilaika@151.144.8.109.rev.sfr.net) (Quit: WeeChat 3.3)
[02:14:48] *** cads is now known as DoseMeBoofy
[02:15:41] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[02:15:42] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[02:18:13] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:24:12] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:24:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[02:24:16] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[02:24:46] *** Joins: zaquest (~notzaques@5.130.79.72)
[02:24:59] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:26:15] *** Joins: fikran (~fikran@user/fikran)
[02:27:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:27:58] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[02:28:27] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[02:28:57] *** Quits: anonymous (~anonymous@gateway/tor-sasl/anonymous) (Ping timeout: 276 seconds)
[02:29:02] *** Joins: pycurious (~Adium@user/pycurious)
[02:29:16] *** Joins: anonymous (~anonymous@gateway/tor-sasl/anonymous)
[02:29:50] *** Joins: Enitin (~Enitin@82.102.22.84)
[02:30:45] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:30:59] *** Quits: Csm319_ (~csm3105@62.83.74.180.dyn.user.ono.com) (Ping timeout: 264 seconds)
[02:31:24] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:ae8e:62cc:a945:31eb) (Quit: Konversation terminated!)
[02:34:24] *** Joins: todda7 (~torstein@31.4.142.28)
[02:35:48] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:36:45] *** Quits: anonymous (~anonymous@gateway/tor-sasl/anonymous) (Ping timeout: 276 seconds)
[02:37:09] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:39:40] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[02:39:51] *** Joins: QpQ4 (~qpq4@47.188.117.13)
[02:40:22] *** Joins: Tomassi-1800 (~Tomassi-1@2a01:799:12a0:6800:aa1e:26d5:57e6:8e8d)
[02:40:45] <twainwek> is there a good git interface for python?
[02:40:46] *** Joins: anonymous (~anonymous@gateway/tor-sasl/anonymous)
[02:41:04] <twainwek> to checkout branches and step through commits
[02:41:22] <nedbat> twainwek: there are a few
[02:41:41] <nedbat> (unfortunately, the tools we've developed at work have used all of them :)  )
[02:42:23] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 264 seconds)
[02:43:29] *** Joins: causa-sui (~causasui@192.241.228.169)
[02:44:55] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[02:45:59] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.3)
[02:47:02] *** Quits: mortn (~weechat@81-234-122-230-no158.tbcn.telia.com) (Ping timeout: 260 seconds)
[02:47:26] *** Joins: mortn (~weechat@81-234-122-230-no158.tbcn.telia.com)
[02:48:51] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 245 seconds)
[02:49:39] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:50:04] *** Quits: vit (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[02:50:08] *** Joins: mefistof1les (~mefistofe@user/mefistofeles)
[02:50:21] *** Joins: vit (~vit@chello085216193138.chello.sk)
[02:52:03] <BtbN> Dies pip have an equivalent to "make -j4" when compiling native code?
[02:52:14] *** Quits: Helle (~helle@84.241.196.119) (Ping timeout: 260 seconds)
[02:52:15] <BtbN> It's right now pegging one core to 100%. Out of 16.
[02:52:46] *** Quits: EGH (~EGH@185.25.195.104) (Remote host closed the connection)
[02:53:34] *** Joins: w0rp_ (~w0rp@w0rp.com)
[02:54:41] *** Quits: w0rp (w0rp@2a01:7e00::f03c:91ff:fedb:589) (Ping timeout: 245 seconds)
[02:54:41] *** w0rp_ is now known as w0rp
[02:57:31] *** Joins: EGH (~EGH@185.25.195.104)
[02:58:42] *** Joins: tomeaton17 (~tomeaton1@51.195.150.49)
[02:59:46] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[03:00:36] <grateful> could the handler class i'm using in http.server be the reason why my chromecast connects but then doesn't actually play anything?
[03:00:44] *** Joins: ede (~ede@user/ede)
[03:01:02] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[03:03:39] <tomeaton17> whats the pythonic way to do for item in list: and then overwrite said item in the list, similar to a by reference parameter?
[03:03:51] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[03:04:14] *** Joins: ede (~ede@user/ede)
[03:04:38] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 265 seconds)
[03:04:50] *** Quits: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: rickybob2)
[03:05:47] <mefistof1les> tomeaton17: I don't know what the "best" way is but I guess something like `list[list.index(item)] = new_value` or something like that could do it, I don't know how you would escape using some kind of indexing
[03:06:10] <mefistof1les> that said, that's kinda ugly tbh, depends on the actual items/values in the list
[03:06:35] <tomeaton17> mefistof1les I suppose I am looking for a pointer to the item really but that's not python. I think indexing is the way to go.
[03:06:39] <jinsun> get the index for free witth enumerate and use that instead of doing list.index
[03:06:58] <mefistof1les> jinsun: ah yeah, that's better
[03:08:09] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:08:17] *** Joins: anddam (~anddam@user/anddam)
[03:08:27] <tomeaton17> okay I will try that. thans
[03:08:44] <BrenBarn> yeah, using `list.index` also won't work if the same item occurs more than once in the list
[03:10:45] *** Quits: dre (~dre@2001:8003:c932:c301:c5de:7260:cf6e:da0c) (Quit: Leaving)
[03:11:02] *** Joins: dre (~dre@2001:8003:c932:c301:c5de:7260:cf6e:da0c)
[03:11:23] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[03:11:38] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:13:38] *** Quits: Geronimo (~Geronimo@user/geronimo) (Quit: Ping timeout (120 seconds))
[03:13:41] *** Quits: harleypig (thelounge@harleypig.com) (Quit: Ping timeout (120 seconds))
[03:13:52] *** Joins: Geronimo (~Geronimo@user/geronimo)
[03:14:02] *** Joins: harleypig (thelounge@harleypig.com)
[03:15:33] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[03:15:41] *** Quits: Rain428 (~Rain@li958-238.members.linode.com) (Quit: Ping timeout (120 seconds))
[03:16:04] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:16:06] *** Joins: Rain42 (~Rain@li958-238.members.linode.com)
[03:16:19] <BtbN> Hm, there seem to be various competing and incompatible answers to the issue
[03:16:21] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[03:16:24] *** Joins: Guest85 (~Guest85@176.228.201.237)
[03:16:37] *** Quits: deathspawn (deathspawn@user/poxifide) (Read error: Connection reset by peer)
[03:16:38] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[03:16:42] <grym> BtbN: welcome to python!
[03:16:45] <BtbN> Some say 'pip install --install-option="--jobs=6"', some say --global-option="-j4"
[03:16:46] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[03:16:49] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[03:17:05] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[03:17:09] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Read error: Connection reset by peer)
[03:17:20] <BtbN> I just want my pip install to not take 3h when it could be done in 20 minutes...
[03:17:32] <Guest85> Hi, I want to have a class that will inherit(?) from dict/orderedict, that will expose functions like: "sort_by_x" and so on, can I sort the items from inside the instance?
[03:17:41] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[03:18:01] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:19:16] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[03:20:29] <grym> Guest85: https://treyhunner.com/2019/04/why-you-shouldnt-inherit-from-list-and-dict-in-python/  has some suggestions
[03:20:37] <nedbat> BtbN: are you installing something from PyPI?
[03:20:56] *** Quits: Alleria (~textual@user/alleria) (Ping timeout: 245 seconds)
[03:20:56] <BtbN> Yeah
[03:21:01] <BtbN> But there's no wheels
[03:21:06] <nedbat> BtbN: :(
[03:21:11] <BtbN> And even if there are, I'd like to avoid them
[03:21:17] <nedbat> BtbN: why avoid wheels?
[03:21:23] <BtbN> Because I want to build the stuff with aocc
[03:21:37] <BtbN> With -march=native in the mix
[03:22:32] <Guest85> They offer to inherit from MutableMapping and implement everything from scratch :S
[03:22:37] *** Joins: poxifide (deathspawn@user/poxifide)
[03:23:25] <grym> Guest85: keep reading
[03:23:35] *** Joins: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl)
[03:23:51] *** Quits: todda7 (~torstein@31.4.142.28) (Ping timeout: 245 seconds)
[03:23:58] *** Joins: tsaka__ (~torstein@31.4.142.3)
[03:24:31] *** Joins: jonthesnow (~xizhendu@36.112.204.20)
[03:24:42] <BtbN> Also, I'm messing around with Pyston. Which I think has no wheels in general?
[03:27:09] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[03:28:06] <Guest85> Could not find any reference besides UserDict which is looks like a wrapper, what do you meant please?
[03:28:21] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2542:c386:8a8a:6a06)
[03:29:01] <bjs> Guest85: it's not quite clear what level of answer you want, but you'd have to write your own class
[03:29:03] <bjs> that had those methods
[03:29:27] <bjs> Probably the easiest way to do this is just to make a class that has a dictionary inside it
[03:29:34] <imp> I have a dictionary that one of it's values is a pathlib.Path, when I try to json serialize it, it fails with: Path isn´t serializeable. What is a good way to fix it. I prefer not change my values to str and keep it as is.
[03:29:57] <Guest85> I derived from dict, I'm not sure how to resort the items within the class itself
[03:30:12] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:12] <bjs> Guest85: don't do that
[03:30:32] <bjs> Guest85: make a class that has a(n ordered) dictionary as an attribute, then you can do whatever you need in the method call
[03:30:37] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:30:47] <bjs> imp: the json library lets you specify encoders for types,  the problem will be that it won't know to turn it back into a pathlib.Path on decode unless you tell it somehow
[03:30:52] *** Joins: tomeaton1779 (~tomeaton1@92.234.2.175)
[03:31:14] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 256 seconds)
[03:31:28] <bjs> imp: see JSONEncoder and the "Extending JSONEncoder:" example at the top of the json docs https://docs.python.org/3/library/json.html
[03:31:49] <Guest85> Wdym by "you can do whatever you want ..."? you mean recreate the inner dict that I hold?
[03:32:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:32:13] <imp> bjs: makes sense. And thanks.
[03:32:43] <bjs> Guest85: you could, or if it was an OrderedDict you can re-order the elements using its move_to_end method or do whatever you need
[03:32:45] *** Quits: lxdr (~lxdr@user/lxdr) (Quit: Bye)
[03:32:58] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[03:33:12] <Guest85> I can change it to OrderDict, I though that from 3.6 they are the same
[03:33:31] *** Joins: Atque (~Atque@user/atque)
[03:33:37] <bjs> Guest85: they're not "the same", normal dicts have insertion order but OrderedDict actually has methods that change the order
[03:33:54] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:33:59] <bjs> But a sort_by method might need even more work, so you might just want to re-create the dictionary alltogether when you do that.
[03:34:06] *** Quits: tomeaton17 (~tomeaton1@51.195.150.49) (Ping timeout: 256 seconds)
[03:34:20] <Guest85> And I can't do it if I inherit from OrderedDict right?
[03:34:28] <bjs> Making it be an attribute means you can just make a new one and replace it easily, if you inherited it'd be impossible to do
[03:34:38] <Guest85> Yes, thanks!
[03:34:57] <bjs> Guest85: i'm not sure why you're so obsessed with inheriiting, you could do that it will just make this particular thing you want to do very hard
[03:35:34] <bjs> Guest85: if you inherit from collections.abc.MutableMapping then that'll help you make a class that has all the same methods as dict
[03:35:45] *** tomeaton1779 is now known as tomeaton17
[03:35:49] <Guest85> Just wanted to get the same behaviour as dict for the user
[03:37:18] <imp> bjs: worked flawlessly. thanks.
[03:37:36] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:41:51] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:32ce:3d23:ed7d:a5c1) (Ping timeout: 265 seconds)
[03:44:17] *** Quits: Guest85 (~Guest85@176.228.201.237) (Quit: Client closed)
[03:44:30] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Ping timeout: 260 seconds)
[03:45:23] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:45:45] *** Joins: lxdr (~lxdr@user/lxdr)
[03:46:48] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 268 seconds)
[03:47:37] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[03:48:11] *** Joins: korg815 (~korg815@user/korg815)
[03:48:48] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:2178:42cf:7342:ed4a)
[03:49:44] *** Joins: spithash (~spithash@user/spithash)
[03:49:59] *** Quits: ArtfulDodger_ (~ArtfulDod@2a02-8440-631d-4167-78ba-13a3-5b05-4fb6.rev.sfr.net) (Read error: Connection reset by peer)
[03:50:05] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[03:52:06] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[03:54:25] *** Joins: ano (~ano@user/ano)
[03:54:40] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[03:55:27] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[03:55:30] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:56:05] *** Quits: dhch (~dhch@185.213.154.168) (Ping timeout: 246 seconds)
[03:56:08] *** Quits: thurs806014 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[03:57:23] *** Joins: pycurious (~Adium@user/pycurious)
[03:57:48] *** Joins: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[03:58:17] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[03:58:30] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Ping timeout: 260 seconds)
[03:58:34] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[03:58:35] *** Quits: moog (~moog@107.126.53.9) (Ping timeout: 264 seconds)
[03:58:39] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.3)
[03:59:54] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[04:01:21] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:03:10] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[04:03:51] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[04:04:05] *** Quits: grimvar (~grimvar@i5C75F459.versanet.de) (Ping timeout: 265 seconds)
[04:05:36] *** Joins: grimvar (~grimvar@i5C75F60E.versanet.de)
[04:06:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[04:06:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:07:26] *** Joins: BSaboia (~bsaboia@187.19.136.126)
[04:07:36] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[04:07:52] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: sdfgsdfg)
[04:08:15] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:08:39] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:09:13] *** Quits: binary011 (~binary01@192.110.171.216) (Remote host closed the connection)
[04:09:27] *** Joins: binary011 (~binary01@192.110.171.216)
[04:10:39] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:10:55] <tomeaton17> I am getting this error  divide by zero encountered in reciprocal in my jupyter notebook, how can I track down what is causing this?
[04:11:21] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[04:12:22] <InPhase> tomeaton17: Start by looking at exactly where it says it happened in the traceback?
[04:12:30] *** Joins: anddam (~anddam@user/anddam)
[04:12:57] <tomeaton17> how do I see the traceback
[04:13:23] <InPhase> How do you not?  :)  Take a screenshot of what you're looking at which is providing this error.
[04:13:49] <InPhase> imgur can be used for uploading a screenshot, or another image service of your choice.
[04:13:56] <tomeaton17> https://i.imgur.com/RWM0uoM.png not very helpful
[04:16:39] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[04:16:51] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Quit: Leaving)
[04:18:05] *** Joins: Wulf (~Wulf@user/wulf)
[04:18:39] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[04:18:48] *** Joins: dhch (~dhch@185.213.154.168)
[04:18:50] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[04:20:02] *** Joins: rany_ (~rany@user/rany)
[04:20:13] <dre> tomeaton17, is there not more information that you can provide
[04:20:20] <dre> because obviously there's not a lot to go off
[04:20:54] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[04:21:07] <InPhase> tomeaton17: Well, that's not a traceback because that's not an error, it's a numpy warning.  But it's also not much of a screenshot.  Surrounding visual data or explaining and pastebinning what you did to generate this might help.
[04:21:53] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[04:22:49] <InPhase> tomeaton17: For example, did you call np.reciprocal by any chance?
[04:23:21] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Ping timeout: 276 seconds)
[04:23:59] <tomeaton17> InPhase I expect it is called by scikit learn at some point
[04:24:00] *** Quits: rany (~rany@user/rany) (Ping timeout: 276 seconds)
[04:24:13] <tomeaton17> I am using the linear regression
[04:25:42] <tomeaton17> It still seems to work I think I am not sure
[04:25:46] <tomeaton17> Anyway thanks I must go
[04:25:47] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[04:26:39] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[04:26:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:27:19] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[04:27:57] *** Quits: QpQ4 (~qpq4@47.188.117.13) (Quit: Textual IRC Client: www.textualapp.com)
[04:28:22] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[04:28:48] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:29:01] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:30:25] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[04:30:26] *** Quits: mefistof1les (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[04:30:37] <InPhase> Divide by zero is usually not a great component of an analysis.
[04:31:46] *** Joins: solrize (~solrize@user/solrize)
[04:32:25] *** Joins: adiKt (uid472628@tinside.irccloud.com)
[04:33:33] <solrize> https://github.com/jatinmandav/Authorship-Attribution  anyone understand the readme where it says copy from "Release"?  there is no Release in the repo.  so i wonder if it refers to some other repo
[04:33:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[04:33:48] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2542:c386:8a8a:6a06) (Quit: Client closed)
[04:34:54] *** Joins: interweb (~interweb@user/interweb)
[04:35:00] <solrize> https://github.com/jatinmandav/Authorship-Attribution/releases   hmm
[04:35:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:35:14] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[04:35:36] *** Joins: fikran (~fikran@user/fikran)
[04:36:33] <solrize> not clear to me how to get the downloads except one by one
[04:37:01] <deltab> I guess you only need dataset.zip, the 316 MB file
[04:37:56] <deltab> clone the repo, then add that dataset to it
[04:38:16] *** Joins: audiobirb (~audio@user/audio)
[04:39:22] <solrize> ok thanks
[04:39:24] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[04:39:29] <deltab> look slike it reads from a file called data/profession_dataset.csv
[04:42:01] <solrize> maybe that's in the zip, i'll get it and see what's there
[04:42:16] <solrize> i didn't realize github had these extra hoops to get the data
[04:42:18] *** Joins: mimmy (~mimmy@45.14.195.121)
[04:42:52] <deltab> git is designed for smallish source code files, not multi-megabyte datasets
[04:43:15] *** Quits: binary011 (~binary01@192.110.171.216) (Remote host closed the connection)
[04:43:30] *** Joins: binary011 (~binary01@192.110.171.216)
[04:43:55] <deltab> and everything added to a repo stays there, so a few dataset versions would result in a repo taking up gigabytes
[04:44:18] <deltab> better to keep the source and data separate
[04:44:23] <solrize> yeah it makes sense, i just didn't know about this and had some trouble finding the data
[04:44:34] <solrize> it's not that solidly associated with the code tree
[04:44:38] <solrize> but it's ok
[04:44:51] <deltab> it cold be clearer, e.g. giving a command to download the data
[04:44:51] <solrize> profession.csv is in the dataset zip
[04:45:01] <solrize> yeah i wget'ed the file
[04:46:00] <solrize> also there's no command to get all the data files, and it looks like i have to get multiple ones from different releases
[04:46:50] <deltab> oh, I didn't notice the other files
[04:47:05] <wallbroken> I'm having fun in learning python
[04:47:21] *** Joins: causa-sui (~causasui@192.241.228.169)
[04:47:32] <deltab> solrize: maybe make an issue about improving the readme
[04:47:54] <wallbroken> https://www.dropbox.com/s/uly3wgqfcnxh8fe/Capture.PNG?dl=0
[04:48:06] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:2178:42cf:7342:ed4a) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[04:48:09] <wallbroken> i'm doing some exercises on this platform
[04:48:12] <solrize> i'll see if i can email the person... i don't have a github account and want to avoid it
[04:49:25] <solrize> wallbroken, hmm i dunno if i'd consider that beginner friendly.  there's lots of painful stuff going on inside that.
[04:49:33] <solrize> but basically: sum(array) adds up the elements
[04:49:41] <wallbroken> solrize: i know
[04:49:59] <wallbroken> but the exercise said that there could be very high numbers
[04:50:17] <solrize> it says they're integers <= 10**10
[04:50:28] <solrize> that's no big deal in python since ints are arbitrary precision
[04:51:00] <wallbroken> "keeping in mind that some of those integers may be quite large."
[04:51:07] <wallbroken> why it is specifying that?
[04:52:15] <solrize> dunno, maybe the concern is they won't fit in 32 bits?
[04:52:23] <solrize> or that the input line could be long?
[04:52:28] <wallbroken> return sum(ar)
[04:52:33] <wallbroken> i completed the function this way
[04:52:39] <solrize> yeah see if that satisfies it
[04:52:39] <wallbroken> and it said it's correct
[04:52:42] <solrize> there ya go
[04:52:45] <wallbroken> very weird exercise
[04:52:55] <solrize> maybe that's an intro one and they get more interesting
[04:53:04] *** Joins: Julian (~tos9@python/site-packages/Julian)
[04:53:23] *** Quits: mallkrampus (~mallkramp@89.238.150.157) (Ping timeout: 265 seconds)
[04:53:49] <solrize> deltab, it looks like the _logs.zip files have the trained models so i should be able make progress from here
[04:53:51] <solrize> thanks
[04:53:54] <wallbroken> "Given a square matrix, calculate the absolute difference between the sums of its diagonals."
[04:53:58] <wallbroken> this is more interesting
[04:54:40] <wallbroken> does a matrix is lines[n]*rows[n]
[04:54:43] <solrize> you need the representation of the matrix, or maybe you get to choose that too
[04:54:49] <solrize> columns x rows
[04:54:51] <solrize> or the other way
[04:55:33] <wallbroken> arr[i][j]
[04:55:36] <wallbroken> this is the matrix
[04:55:57] <wallbroken> so if i put i = j i'll move on the main diagonal
[04:56:02] <solrize> so if you can read the whole matrix into memory, the main diagonal is the a[i][i]'s and the other one is a[i][n-i-1] or sth like that
[04:56:03] <aileran> assuming it's square, for x in range(len(row)):
[04:56:06] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[04:56:12] <SpeakerToMeat__> Hello all
[04:56:19] <solrize> hey speaker
[04:56:20] <wallbroken> don't give me a solution plase
[04:56:26] <wallbroken> it's more fun if i do it myself
[04:56:26] <aileran> oh sorry lol
[04:56:41] <solrize> wallbroken, if you want to be fancy, do it without reading the whole matrix first
[04:56:47] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 264 seconds)
[04:57:07] <wallbroken> why should i read the whole matrix?
[04:57:09] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 276 seconds)
[04:57:16] <wallbroken> i just need to read the diagonals
[04:57:16] <solrize> well that's the simplest
[04:57:31] <wallbroken> main and reverse
[04:58:01] <wallbroken> a question:
[04:58:02] <wallbroken> https://dpaste.org/eeMO
[04:58:04] <wallbroken> what is this code?
[04:58:18] *** Joins: rany (~rany@user/rany)
[04:58:27] <SpeakerToMeat__> Question, if I have this: { "tribbles" : [ { "type" : "wild", "age": 10 }, { "type": "tame", "age": 12 } ]  is there any concise quick way in which I can get the "age" for an entry in the list whose "type" value is "x" ?
[04:58:47] <solrize> wallbroken, it wants you to put a filename into that env var so it writes the output there
[04:58:53] <SpeakerToMeat__> Right now all I can think of is doing a foreach loop and match, but I'm sure there's faster ways....
[04:59:02] <SpeakerToMeat__> type values will not repeat, ever
[04:59:20] <solrize> SpeakerToMeat__, you could do a list or generator comprehension that amounts to the same thing
[04:59:20] <aileran> like in a for loop, one diagonal would be like array[x][x] and the other would be array[x][-x - 1] right
[04:59:28] <solrize> i mean fewer keystrokes but same algorithm
[05:00:00] <SpeakerToMeat__> hmmm
[05:00:00] <solrize> aileran, n-x-1 i think, where n is the # of rows, 0-based indices
[05:00:23] <solrize> the faster way if you do a lot of these on the same dataset would be an indexed structure
[05:00:25] <aileran> well was just thinking you could use negative index to count from end
[05:00:28] *** Joins: causa-sui (~causasui@192.241.228.169)
[05:00:29] <solrize> SQL is good for stuff like that
[05:00:46] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 256 seconds)
[05:00:56] <solrize> aileran, hmm oh maybe.  yeah i forgot about that, it's a weird feature of python because -0 does the wrong thing
[05:01:34] <SpeakerToMeat__> solrize, Ok but then a comprehension will return a list. right?
[05:02:09] *** Quits: interweb (~interweb@user/interweb) (Quit: Leaving)
[05:02:19] <solrize> yeah, with 1 element if there are no dups
[05:02:32] <solrize> assuming the only array you want to search is tribbles
[05:03:02] <wallbroken> https://dpaste.org/G7TB
[05:03:05] <wallbroken> that's a good idea?
[05:03:09] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[05:03:46] *** Joins: Pixi (~Pixi@user/pixi)
[05:04:06] <solrize> 3-x?   looks off by one
[05:04:24] <solrize> also they want the absolute different
[05:04:31] <solrize> *difference
[05:04:32] <wallbroken> yes, abs()
[05:04:34] <wallbroken> ?
[05:04:43] <solrize> range(0,3)  is  0,1,2
[05:04:57] <solrize> so 3-x will be 3,2,1
[05:05:01] <solrize> you want it to be 2,1,0
[05:05:18] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[05:05:40] <aileran> in range(0,3), the 0 is unnecessary.  same as range(3)
[05:05:49] <solrize> that too
[05:06:07] <wallbroken>     mainDiag = sum(arr[x][x])
[05:06:07] <wallbroken> TypeError: 'int' object is not iterable
[05:06:21] <solrize> wait sec
[05:06:33] <aileran> and mainDiag += arr[x][x]
[05:06:41] <aileran> same with reverseDiag
[05:06:43] <solrize> no you don't want sum there
[05:06:48] <solrize> you have to initialize both of those to 0
[05:06:52] <solrize> otherwise you can use comprehenisons:
[05:07:04] <solrize> mainDiag = sum(arr[x][x] for x in range(3))
[05:07:08] *** Joins: mallkrampus (~mallkramp@89.238.150.157)
[05:07:19] <aileran> ah good point
[05:07:36] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 245 seconds)
[05:08:14] <wallbroken> mainDiag = mainDiag + arr[x][x]
[05:08:23] <aileran> and instead of hard coding 3 you might want to do something like: mainDiag = sum(arr[x][x] for x in range(len(arr[0])))
[05:08:40] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[05:08:44] <deltab> SpeakerToMeat__: [i['age'] for i in o['tribbles'] if i['type'] == x]
[05:08:45] <aileran> so it would work for any array size theoretically
[05:09:28] <aileran> as long as the array is square
[05:09:37] <solrize> i like to use i.get('type') in case the type is missing etc
[05:09:53] <solrize> mainDiag += arr[x][x]
[05:10:11] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2542:c386:8a8a:6a06)
[05:10:31] *** Joins: causa-sui (~causasui@192.241.228.169)
[05:10:36] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:12:20] <wallbroken> https://dpaste.org/o7DL
[05:12:23] <wallbroken> do you like it?
[05:12:26] <wallbroken> i did this way
[05:12:38] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[05:13:39] <solrize> that looks ok except aren't you supposed to read the number of rows from the input?  it's not necessarily 3
[05:13:41] <solrize> it should be a variable
[05:14:16] *** Quits: eis (~eis@2601:446:580:c080:20c:29ff:fe96:c172) (Ping timeout: 245 seconds)
[05:14:16] <solrize> you also don't need "output" though it doesn't hurt
[05:14:27] <solrize> i.e. you can just "return abs(...)"
[05:14:40] <solrize> having output can help debugging if you want to put a print or breakpoint there
[05:15:30] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[05:15:39] <wallbroken> len(arr) will give me the matrix length?
[05:17:31] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[05:17:38] <grym> wallbroken: probably not
[05:17:53] <grym> wallbroken: probably number of rows
[05:18:08] <wallbroken> but the track of the exercise told me that it's a square matrix
[05:18:10] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.3)
[05:18:12] <wallbroken> then it's ok
[05:18:51] *** Joins: onichomp (~onichomp@2806:264:4404:8301:5ded:ed19:900f:c919)
[05:19:53] *** Quits: onichomp (~onichomp@2806:264:4404:8301:5ded:ed19:900f:c919) (Read error: Connection reset by peer)
[05:20:12] <SpeakerToMeat__> deltab, so... I need something like.... age = [x['age'] for x in data["tribbles"] if x['type'] == "x"][0] basically
[05:20:24] <wallbroken> "Given an array of integers, calculate the ratios of its elements that are positive, negative, and zero. Print the decimal value of each fraction on a new line with  places after the decimal. Note: This challenge introduces precision problems. The test cases are scaled to six decimal places, though answers with absolute error of up to  are acceptable."
[05:20:29] *** Joins: onichomp (~onichomp@2806:264:4404:8301:5ded:ed19:900f:c919)
[05:20:31] <wallbroken> well, the Note it's not quite clear
[05:20:33] <aileran> wallbroken: the comprehension version would look like this:  https://dpaste.org/9ph7
[05:21:19] <wallbroken> yes, you're iterating inside the sum() function
[05:22:23] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 268 seconds)
[05:23:54] *** Quits: flokuehn (~flokuehn@87.123.247.37) (Ping timeout: 260 seconds)
[05:25:08] <aileran> and technically I don't need to do len(arr[0]).. same thing as len(arr) in a square array
[05:25:08] *** Quits: reset (~reset@user/reset) (Quit: reset)
[05:25:48] *** Joins: flokuehn (~flokuehn@87.123.247.94)
[05:26:04] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[05:27:27] <wallbroken> well, I'm start thinking that those kind of training exercises are pointless and unuseful
[05:27:35] <wallbroken> i should try something like open socket
[05:27:37] <wallbroken> webAPI
[05:27:38] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 260 seconds)
[05:27:44] <wallbroken> something used in the real world
[05:27:56] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[05:29:40] <aileran> yeah most courses just like to drill the fundamental a bunch before moving on to bigger and better things
[05:29:45] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:29:56] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Quit: This computer has gone to sleep)
[05:30:14] *** Joins: BSaboia (~bsaboia@187.19.136.126)
[05:30:17] <aileran> it gets boring quick though
[05:30:45] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[05:31:37] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:31:51] <BrenBarn> it's useful to learn the fundamentals for sure though
[05:32:01] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[05:32:16] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:32:42] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[05:32:58] <BrenBarn> I think it can be somewhat more fun to pick a project that's small enough to be a toy but big enough to be a toy that can be interesting to play with
[05:33:46] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:34:03] *** Joins: causaui1 (~causasui@192.241.228.169)
[05:34:11] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[05:34:26] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[05:34:32] <BrenBarn> like writing a thing to play hangman or whatever
[05:34:38] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:34:46] *** Quits: sharperguy (~sharpergu@88.130.222.57) (Ping timeout: 256 seconds)
[05:35:03] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[05:35:13] <wallbroken> the reason why i started learning python is to build up a Rest API provider
[05:35:23] <aileran> yeah the Jetbrains training has lots of good projects like that
[05:35:44] <aileran> https://hyperskill.org/
[05:35:54] *** Quits: causa-sui (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[05:35:55] <wallbroken> somebody told me to use Django
[05:36:08] *** Joins: sharperguy (~sharpergu@89.244.125.159)
[05:36:11] <wallbroken> it has a REST api library built in
[05:36:23] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 264 seconds)
[05:36:25] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:36:53] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-7c30-d6d4-cc96-be8a.res6.spectrum.com) (Read error: Connection reset by peer)
[05:37:18] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[05:38:00] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:38:26] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[05:38:38] <bparker> wallbroken: django-rest-api is separate from django itself, different project
[05:39:06] <bparker> but you already know that asking questions in #django every day for the last many months :p
[05:39:31] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Remote host closed the connection)
[05:40:16] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[05:41:16] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[05:43:01] *** Joins: monkey_ (~user@190.104.116.153)
[05:43:33] *** Quits: subopt (~subopt@2603-8081-2302-459a-e48b-1ae1-4f74-9c2f.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:43:41] <deltab> SpeakerToMeat__: yeah
[05:45:18] *** Joins: sadara_ (~sadara@mail.xynex.us)
[05:45:27] <phy1729> Why does mypy complain Unexpected "..."  on  Keys = tuple[Union[str, int], ...]  ?
[05:46:18] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[05:46:27] *** Joins: non-sense (~light@user/non-sense)
[05:49:27] <wallbroken> is there a way to make vs code to when you type a function, it returns a dialog on which parameters take and what it returns?
[05:49:46] <wallbroken> it's very unconfortable to google everytime i need to know this information
[05:50:11] *** Quits: parv (~quass@user/parv) (Ping timeout: 264 seconds)
[05:50:17] *** Joins: mud (~mud@user/kadoban)
[05:50:28] <deltab> phy1729: does typing.tuple work instead?
[05:50:56] <phy1729> assuming typing.Tuple and yes oddly
[05:52:06] <deltab> could be mypy bug #10242
[05:52:40] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:53:20] <deltab> o r##9980
[05:53:29] <deltab> or #9980
[05:54:34] <grym> wallbroken: https://stackoverflow.com/questions/63200181/show-complete-documentation-in-vscode ; zealdocs.org is also very good
[05:55:15] <wallbroken> grym: in VS, using C#, when you hover on some function, it gives you those informations
[05:55:28] <grym> wallbroken: yes
[05:56:57] <phy1729> deltab: thanks; Tuple will work until that's released
[05:57:44] *** Joins: pycurious (~Adium@user/pycurious)
[05:58:39] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[05:59:20] *** Quits: akaWolf (~akaWolf@akawolf.org) (Read error: Connection reset by peer)
[06:00:14] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[06:00:23] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[06:00:49] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[06:02:34] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[06:02:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:03:05] *** Joins: akaWolf (~akaWolf@akawolf.org)
[06:03:58] *** sadara_ is now known as sadara
[06:04:46] *** Joins: skintimidation (~lkjasldjf@69.162.231.16)
[06:05:36] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2542:c386:8a8a:6a06) (Quit: Client closed)
[06:06:22] <skintimidation> Thinking about ways to check if an integer is all nines.
[06:06:29] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Quit: Bye)
[06:06:34] <skintimidation> Currently, I've got some of what feels like a nonpythonic method together that should work:
[06:06:57] <skintimidation> for x in string: // if x != "9": return False // return True
[06:07:00] <skintimidation> / being linebreaks
[06:07:34] <skintimidation> Is there a better way?
[06:08:32] *** Quits: sadara (~sadara@mail.xynex.us) (Changing host)
[06:08:32] *** Joins: sadara (~sadara@user/sadara)
[06:08:46] <skintimidation> Actually, in python, how do string compares work under the hood? If I constructed the whole string by doing some length checking thing, would that, under the hood, do what I did?
[06:09:54] *** Quits: zepolen (~zepolen@ppp-94-66-223-212.home.otenet.gr) (Ping timeout: 256 seconds)
[06:10:27] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:11:51] <BrenBarn> what do you mean by "doing some length checking thing"?
[06:12:04] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[06:14:08] *** Joins: causaui1 (~causasui@192.241.228.169)
[06:14:11] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:14:11] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 268 seconds)
[06:14:16] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 245 seconds)
[06:15:06] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 245 seconds)
[06:15:06] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 245 seconds)
[06:15:06] *** brabrax_ is now known as brabrax
[06:15:16] <Repiphany> `return all(d == '9' for d in digit_string)`
[06:15:17] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[06:15:48] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[06:15:59] <aphysically> jinsun: it seems the binding format in rust is basically the same as mypy's but I wonder what type inference system pyright was inspired by
[06:17:52] *** Joins: bindu (~bindu@user/bindu)
[06:18:11] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[06:18:31] *** Joins: Julian (~tos9@python/site-packages/Julian)
[06:20:28] <skintimidation> Repiphany, oh, is that how you'd do it the functional way?
[06:21:46] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[06:21:46] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:23:23] <skintimidation> Oh, Repiphany, if I had a really long string, would that be a really big memory commitment?
[06:23:30] <skintimidation> I guess it's going to do the same thing
[06:24:23] <deltab> set(digit_string) == {'9'}
[06:24:47] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:70a2:49f8:9d87:430a) (Remote host closed the connection)
[06:25:27] *** Parts: sadara (~sadara@user/sadara) (Leaving)
[06:25:42] <deltab> all(d == '9' for d in digit_string)  makes a generator expression which yields values as they're needed by all(), so it's not using more memory for longer strings
[06:26:29] <deltab> that is, (d == '9' for d in digit_string) makes the generator and all() consumes it
[06:28:12] <deltab> unlike [d == '9' for d in digit_string] which constructs a whole list in memory first
[06:30:02] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[06:31:02] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:27] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:32:08] *** Joins: driib8 (~driib@185.195.233.160)
[06:32:20] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:33:08] *** Quits: sharperguy (~sharpergu@89.244.125.159) (Ping timeout: 256 seconds)
[06:33:13] *** Joins: frost (~frost@user/frost)
[06:33:36] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[06:33:37] <ali1234> anyone used pyserial in WSL? it seems like comport.vid and comport.pid don't work there?
[06:33:55] <ali1234> eg this https://github.com/32blit/32blit-tools/blob/master/src/ttblit/core/blitserial.py#L24
[06:34:02] *** Quits: driib (~driib@185.65.135.233) (Ping timeout: 240 seconds)
[06:34:02] *** driib8 is now known as driib
[06:34:05] <ali1234> does not work in WSL, it does not match any port
[06:34:16] <ali1234> i'm not sure precisely why as I don't have windows
[06:34:45] *** Quits: lemonsni- (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:49] <ali1234> it would not surprise me if whatever wrapper MS use hides that information
[06:34:51] *** Joins: sharperguy (~sharpergu@88.130.217.97)
[06:35:11] <ali1234> just wondering if anyone knows before i start building a windows PC to test it
[06:36:50] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[06:37:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[06:41:59] *** Joins: zepolen (~zepolen@ppp-94-66-223-212.home.otenet.gr)
[06:42:06] *** Quits: adiKt (uid472628@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[06:43:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[06:43:49] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:43:49] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:43:49] *** finn_elija is now known as FinnElija
[06:44:57] *** Joins: fikran (~fikran@user/fikran)
[06:45:23] *** Quits: ubert (~Thunderbi@p548c9652.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[06:45:40] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:45:44] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:4cb6:2d39:d3d2:5e27)
[06:46:10] *** Quits: skintimidation (~lkjasldjf@69.162.231.16) (Ping timeout: 256 seconds)
[06:47:11] <jinsun> aphysically: the empty list thing? or some other stuff too
[06:47:32] <aphysically> some other stuff allow late binding too in the same way
[06:47:47] *** Quits: mimmy (~mimmy@45.14.195.121) (Ping timeout: 264 seconds)
[06:48:24] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[06:49:10] <jinsun> okay yeah mypy tries to be convenient like that in other places too
[06:50:39] <jinsun> like mypy has --allow-redefinition flag to allow changing types of a name in the same scope at the same indentation level by explicitly annotating
[06:51:23] <jinsun> and Eric refuses that every time, I have seen few threads about that on pyright and pylance repos
[06:52:38] <jinsun> pyright is inspired by TypeScript and C# maybe since it is coming from MS
[06:52:48] *** Joins: skintimidation (~lkjasldjf@69.162.231.16)
[06:53:02] *** Joins: Coldblackice (~c@user/coldblackice)
[06:53:03] <skintimidation> dude, deltab
[06:53:05] <aphysically> rust actually allows shadowing outright
[06:53:09] <skintimidation> the set idea is exactly what i should have thought about, fuck
[06:53:11] <aphysically> (no restrictions)
[06:53:49] *** Joins: mimmy (~mimmy@45.14.195.121)
[06:53:52] <jinsun> yeah people compare it with rust a lot s of times when asking for that feature in pyright/pylance repo
[06:53:53] <aphysically> in fact the rust book tries to make pretty clear shadowing/redefinition to change type is idiomatic in a few spots
[06:54:09] <aphysically> so it's not surprising people would compare it
[06:54:21] <aphysically> (they're being encouraged to do it one place and told it's bad in another)
[06:54:23] <skintimidation> also, actually, is it really syntactically correct to do it as "for d in digit string?" that feels wrong to me somehow
[06:54:26] *** Quits: jonthesnow (~xizhendu@36.112.204.20) (Read error: Connection reset by peer)
[06:54:32] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[06:54:37] <skintimidation> are we just pseudonaming "digit string"
[06:54:55] <jinsun> his argument against that is python doesn't create new scopes for loops and if conditions, so it would be hard to do
[06:54:59] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:58a3:2984:8b7e:2099) (Quit: guenhael)
[06:55:02] *** Joins: dodocrypto (0dev@bsdforall.org)
[06:55:04] <dodocrypto> hey guys
[06:55:15] <dodocrypto> how do i loop string + 1
[06:55:16] <dodocrypto> ?
[06:55:18] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[06:55:38] *** Joins: causaui1 (~causasui@192.241.228.169)
[06:55:39] <dodocrypto> example for i in text:
[06:55:50] <jinsun> and that python doesn't have a let syntax so declaring and assinging is hard to distinguish
[06:55:59] <aphysically> true
[06:56:04] <dodocrypto> but i want to check text[i + 1]
[06:56:09] <aphysically> it's not a feature I particularly want/need (ability to shadow)
[06:56:20] <aphysically> it's easy enough to just use different names
[06:56:21] <skintimidation> dodocrypto, there is no i+1, you'd read past the end of i
[06:56:33] <dodocrypto> yes
[06:56:35] <skintimidation> "for i in text" gives you an iterable structure that encompasses all members of text.
[06:56:42] <aphysically> the no special syntax for declaration vs assignment is a decent point I think
[06:56:44] <dodocrypto> skintimidation
[06:56:50] <dodocrypto> how do i read the next element
[06:57:03] <aphysically> of course explicit type annotation could be seen to override that but eh
[06:57:08] <skintimidation> dodocrypto, what are you actually trying to do? I bet you want enumerate, but you probably don't want to use enumerate.
[06:57:12] <dodocrypto> i want to check array[1] while i am on array[0]
[06:57:16] <dodocrypto> to compare the value
[06:57:34] <dodocrypto> i want to check if ? . or !
[06:57:43] <dodocrypto> check next value if it is space
[06:57:52] <dodocrypto> than sum += 1
[06:57:54] <skintimidation> Yes, so in that case, I would either use for i in xrange(0,text.length) or for i in enumerate(text), right
[06:58:18] <dodocrypto> no easy way t do it skintimidation ?
[06:58:22] <dodocrypto> like in c
[06:58:30] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:58:37] <skintimidation> dodocrypto, that IS easy
[06:58:40] <dodocrypto> array[i] != array[i+1]
[06:58:50] <dodocrypto> how about that c code
[06:58:57] <skintimidation> that's not all of the c code
[06:59:06] <dodocrypto> is there equivalent of it in python
[06:59:16] <ali1234> for a,b in zip(array, array[1:]):
[06:59:16] <dodocrypto> yeah something liek that i mean
[06:59:17] <skintimidation> the c code before it does a declaration (i = n; i<k; i+j)
[06:59:25] <dodocrypto> yes
[06:59:29] <dodocrypto> with for loop
[06:59:30] <skintimidation> ali1234, is that how it's usually done in the wild?
[06:59:35] <ali1234> it's how i do it
[06:59:42] <skintimidation> where'd you learn that?
[06:59:47] <aphysically> jinsun: I'm really not convinced by the lack of late binding tho, surely it would improve the number of situations pyright gives good completion suggestions even for people that aren't using type checking
[06:59:52] <ali1234> uh... this channel probably
[07:00:19] <dodocrypto> how is it skintimidation
[07:00:26] <dodocrypto> anyway i can get it
[07:00:27] <dodocrypto> ?
[07:00:28] <dodocrypto> :(
[07:00:30] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[07:00:31] <dodocrypto> i am confused
[07:00:44] <dodocrypto> for i in text: blabla
[07:00:55] <dodocrypto> than text[i+1] give error
[07:00:57] <dodocrypto> :(
[07:01:12] <dodocrypto> if text[i - 1] == 63 or text[i - 1] == 33 or text[i - 1] == 46:
[07:01:12] <dodocrypto>             if i == 32:
[07:01:18] <dodocrypto> i just want to check that
[07:01:28] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Quit: This computer has gone to sleep)
[07:01:38] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[07:02:41] <jinsun> aphysically: yeah it would be nicer definitely, and since rust has done it, it kinda proves it is possible to do that safely
[07:02:45] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[07:02:47] *** Joins: monkey_ (~user@190.104.116.153)
[07:04:13] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[07:04:27] <dodocrypto> ah i got it now
[07:04:32] <dodocrypto> thank you though
[07:05:34] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[07:05:37] *** Joins: adiKt (uid472628@tinside.irccloud.com)
[07:07:17] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:07:40] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[07:09:23] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 264 seconds)
[07:09:44] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[07:10:52] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[07:15:29] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 265 seconds)
[07:16:13] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[07:16:27] *** Joins: causaui1 (~causasui@192.241.228.169)
[07:16:58] *** Joins: TJ- (~root@about/linux/staff/tj-)
[07:17:44] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:20:32] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[07:20:42] <skintimidation> dodocrypto, ali1234 told you how
[07:20:47] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[07:21:52] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[07:23:19] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[07:24:24] *** Joins: poiqwepoiqwe (uid525840@hampstead.irccloud.com)
[07:26:07] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[07:29:13] *** Joins: Valeria (~Valeria@user/valeria)
[07:29:51] *** Quits: onichomp (~onichomp@2806:264:4404:8301:5ded:ed19:900f:c919) (Read error: Connection reset by peer)
[07:30:28] *** Joins: onichomp (~onichomp@2806:264:4404:8301:5ded:ed19:900f:c919)
[07:30:48] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[07:30:50] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[07:32:01] *** Quits: FergusL (~freenode4@user/fergusl) (Quit: Ping timeout (120 seconds))
[07:32:58] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[07:34:04] <twainwek> how can i export myvar_${i}=3 where the i is an integer?
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:09] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:47] <dodocrypto> no
[07:36:54] <dodocrypto> i am still confused
[07:38:07] <jinsun> twainwek: what does "export" mean?
[07:39:13] *** Joins: rk4 (~r@user/rk4)
[07:39:17] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:39:32] <dodocrypto> man
[07:39:48] <dodocrypto> how do i access this for i in array[]
[07:39:49] <dodocrypto> :(
[07:40:05] <dodocrypto> is only iterate at 0 = 0
[07:40:07] <dodocrypto> 1 = 1
[07:40:20] <dodocrypto> but i want array[i + 1]
[07:40:23] <dodocrypto> how to do that ?
[07:40:31] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 245 seconds)
[07:42:04] <jinsun> dodocrypto: loop over range(len(your_list)) if you want indices and not the items inside the array
[07:42:21] <dodocrypto> jinsun
[07:42:56] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Quit: Konversation terminated!)
[07:42:58] <dodocrypto> i want to get the value of if array[i + 1] == space
[07:43:00] <jinsun> though if you just want two consecutive items at a time, zip looks more nicer (even though a bit confusing for new people)
[07:43:03] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[07:43:08] <dodocrypto> zip ?
[07:43:19] <dodocrypto> let me google it
[07:43:46] <jinsun> with zip you don't have to do array[i + 1] you will get that as the loop variable
[07:43:58] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:44:36] <dodocrypto> wait i just want to compare the value of
[07:45:05] <dodocrypto> array[i] != array[i + 1 ]
[07:45:08] <dodocrypto> how to do it
[07:45:13] <dodocrypto> in simple layman term
[07:45:18] <dodocrypto> :(
[07:45:40] <dodocrypto> using for i in array
[07:45:58] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[07:46:14] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[07:46:15] <jinsun> for i in range(len(array))
[07:46:56] <dodocrypto> hmm isn't it just print 1 2 3 4 5
[07:46:58] <dodocrypto> ?
[07:47:01] <dodocrypto> in i
[07:47:03] <dodocrypto> let me check
[07:47:12] <dodocrypto> i want the content inside the array
[07:47:20] <jinsun> then do array[i] inside the loop
[07:47:20] <dodocrypto> not the length of them
[07:47:32] <jinsun> and array[i+1]
[07:47:40] <dodocrypto> how to do it jinsun
[07:47:44] <dodocrypto> mind to guide me
[07:47:47] <dodocrypto> with real code
[07:47:55] <dodocrypto> i have google but nothing there
[07:48:03] <dodocrypto> for i in array:
[07:48:22] <dodocrypto> for z + 1 in array: ?
[07:48:57] <dodocrypto> or for z in array[z+1] ?
[07:49:01] *** Joins: bitreverb (~bitcycle@174-21-103-142.tukw.qwest.net)
[07:49:16] <hogarius> dodocrypto: loop over the indexes instead of over the actual elements.
[07:49:18] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:4cb6:2d39:d3d2:5e27) (Quit: Client closed)
[07:49:44] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:49:44] <jinsun> might be better idea to start over now, I am not sure what you want to do now
[07:50:47] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[07:50:50] <dodocrypto> https://pastebin.com/3d5EwgD1
[07:50:56] <dodocrypto> this jinsun and hogarius
[07:51:34] <dodocrypto> i am stuck in that if ( i + 1 = 32 )
[07:51:45] <dodocrypto> checking the next element if it is space
[07:52:19] *** Quits: sidj (~sidj@user/sidj) (Quit: Leaving)
[07:52:20] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[07:52:29] *** Joins: causaui1 (~causasui@192.241.228.169)
[07:53:05] <jinsun> okay first, why are you converting to ascii codes and comparing with integers instead of just comparing with the strings?
[07:53:29] <dodocrypto> i am comparing one by one
[07:53:31] <dodocrypto> the elemnet
[07:53:34] <dodocrypto> just like c
[07:53:49] <dodocrypto> i convert the string to integer value
[07:53:55] <jinsun> don't do it like C
[07:54:06] <dodocrypto> to check their value in ascii
[07:54:08] <dodocrypto> like char
[07:54:39] <jinsun> (also in C you can compare with char literals also instead of ints, which would be the better way)
[07:55:59] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[07:57:00] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[08:00:59] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[08:01:01] <jinsun> dodocrypto: so you want to count the number of times you have words in ending in "?" "!" or "." ?
[08:02:11] *** Quits: jbox (~jbox@user/jbox) (Ping timeout: 264 seconds)
[08:02:22] *** Joins: kdc (~kdc@196.211.197.159)
[08:02:30] <grateful> is there an easy way to get my local ip address?
[08:03:40] <grateful> as in my ip address on my local network
[08:03:48] <grateful> 192.168.0.1
[08:05:03] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[08:05:22] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[08:06:08] <adder> grateful, $ ifconfig
[08:06:10] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[08:06:13] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Quit: Konversation terminated!)
[08:09:28] <jinsun> dodocrypto: assuming yes, you can replace that function with one line `sum(a in "?!." and b == " " for a, b in zip(text, text[1:]))`
[08:09:58] *** Joins: Valeria (~Valeria@user/valeria)
[08:10:16] *** Joins: brentaarnold (~brentaarn@32.132.115.46)
[08:10:44] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[08:11:10] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 256 seconds)
[08:11:44] *** Joins: nomic (~nomic@185.192.69.224)
[08:12:34] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[08:17:11] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 264 seconds)
[08:20:03] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:20:15] *** Joins: BSaboia (~bsaboia@187.19.136.126)
[08:22:45] <grateful> like do a subproccess to call ifconfig?
[08:24:46] *** Quits: mimmy (~mimmy@45.14.195.121) (Ping timeout: 256 seconds)
[08:25:08] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:4cb6:2d39:d3d2:5e27)
[08:25:59] *** Quits: skintimidation (~lkjasldjf@69.162.231.16) (Quit: Leaving)
[08:26:20] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:4cb6:2d39:d3d2:5e27) (Client Quit)
[08:27:50] *** Joins: causaui1 (~causasui@192.241.228.169)
[08:28:05] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[08:28:22] <dodocrypto> sorry back
[08:28:33] <dodocrypto> this is whati am trying to jinsun
[08:28:38] <dodocrypto> hang on let me paste it
[08:29:17] *** Joins: l4yer (~l4yer@195.181.170.210)
[08:29:17] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Quit: This computer has gone to sleep)
[08:29:24] *** Joins: rany_ (~rany@user/rany)
[08:29:43] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[08:30:27] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[08:30:42] <dodocrypto> https://pastebin.com/r3SmTLz5
[08:30:43] <dodocrypto> this one
[08:30:49] <jinsun> grateful: I haven't tried but psutil has some stuff to get network information https://psutil.readthedocs.io/en/latest/#network that might be useful
[08:31:02] <dodocrypto> all i just need to do compare it with next value in array
[08:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:20] <grateful> ty
[08:31:33] <dodocrypto> and if array[i+1] == null meaning like nothing there exit
[08:32:18] *** Quits: rany (~rany@user/rany) (Ping timeout: 276 seconds)
[08:32:23] <jinsun> dodocrypto: yeah, and I guess you just want, `sum(a in "?!." and b == " " for a, b in zip(text, text[1:]))`, try it
[08:32:24] <dodocrypto> # how to call text[i+1] while i is text[i]
[08:32:42] <dodocrypto> awww
[08:32:48] <dodocrypto> is really cryptic to me
[08:32:49] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 265 seconds)
[08:32:53] <dodocrypto> but let me try
[08:32:57] <dodocrypto> i hate python now
[08:33:01] <dodocrypto> c is better
[08:33:02] <dodocrypto> zzzzzzzz
[08:33:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:33:52] <dodocrypto> woahh
[08:34:05] <dodocrypto> after i put it in text editor is look nice
[08:34:08] <dodocrypto> thank you jinsun
[08:34:13] <dodocrypto> let me convert it
[08:34:16] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 265 seconds)
[08:34:17] <jinsun> the only slighly crytic thing is zip
[08:34:46] <Repiphany> Sounds like regex
[08:35:09] <jinsun> if you understand from the docs https://docs.python.org/3/library/functions.html#zip it becomes less cryptic
[08:35:47] <dodocrypto> dodocrypto@dodocrypto-S451LB:~$ python3 mario.py
[08:35:48] <dodocrypto> Text: name name. name.
[08:35:48] <dodocrypto> Total : 12
[08:35:48] <dodocrypto> Total : 3
[08:35:48] <dodocrypto> Total : <built-in function sum>
[08:36:01] <dodocrypto> hmm
[08:36:05] <dodocrypto> sum is function ?
[08:36:24] <jinsun> yeah regex would definitely be the solution if it was even slighly more complicated requirement
[08:36:37] <jinsun> dodocrypto: yes sum is a function
[08:37:13] <jinsun> dodocrypto: https://docs.python.org/3/library/functions.html#sum
[08:37:36] *** Joins: sagax (~sagax_nb@user/sagax)
[08:39:46] <dodocrypto> ah i convert it now
[08:39:51] <dodocrypto> to normal for loop
[08:41:14] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:42:51] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:43:24] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[08:44:06] *** Quits: \\ (~\0x5c@miaow/nonantedeux) (Read error: Connection reset by peer)
[08:44:06] *** Quits: voidcat_ (~voidcat@user/voidcat) (Read error: Connection reset by peer)
[08:46:36] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Ping timeout: 260 seconds)
[08:46:55] *** Joins: voidcat (~voidcat@user/voidcat)
[08:47:22] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:47:27] *** Joins: \\ (~\0x5c@miaow/nonantedeux)
[08:48:51] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[08:50:02] *** Joins: causaui1 (~causasui@192.241.228.169)
[08:50:44] *** Joins: Valeria (~Valeria@user/valeria)
[08:52:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[08:54:17] *** Joins: fikran (~fikran@user/fikran)
[08:55:08] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[08:56:38] *** Quits: Oddity (Oddity@user/oddity) (Remote host closed the connection)
[08:59:21] <dodocrypto> hmm
[08:59:26] <dodocrypto> let me analyze jinsun
[08:59:34] <dodocrypto> i still got no idea
[08:59:48] <dodocrypto> if it just comparing to next one
[08:59:57] <dodocrypto> and handle error message on the last of array
[09:00:06] <dodocrypto> is there any equivalent or array like
[09:00:17] <dodocrypto> end of string may be "\0"
[09:00:24] <dodocrypto> with this in other language
[09:00:25] <dodocrypto> ?
[09:00:25] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[09:00:43] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:02:17] * dodocrypto ROARRRRRRRRRRRRRRRRR LOL
[09:02:23] * dodocrypto back for awhile tired
[09:02:50] <dodocrypto> aww wrong button
[09:04:35] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:04:35] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 264 seconds)
[09:04:42] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[09:05:56] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[09:07:01] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[09:07:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[09:09:59] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 264 seconds)
[09:11:28] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[09:11:42] *** Joins: analoq (~yashi@user/dies)
[09:11:47] *** Quits: \\ (~\0x5c@miaow/nonantedeux) (Ping timeout: 268 seconds)
[09:12:16] *** Quits: voidcat (~voidcat@user/voidcat) (Quit: nyaa~)
[09:13:16] *** Joins: voidcat (~voidcat@user/voidcat)
[09:13:47] *** Joins: \\ (~\0x5c@miaow/nonantedeux)
[09:13:53] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[09:16:51] *** Joins: BSaboia (~bsaboia@187.19.136.126)
[09:17:02] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Remote host closed the connection)
[09:18:36] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[09:19:27] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[09:19:35] *** Quits: \\ (~\0x5c@miaow/nonantedeux) (Ping timeout: 264 seconds)
[09:20:18] *** Quits: voidcat (~voidcat@user/voidcat) (Ping timeout: 256 seconds)
[09:21:59] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[09:23:40] *** Joins: palasso (~palasso@user/palasso)
[09:25:13] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[09:25:26] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[09:26:34] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[09:26:49] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[09:28:33] *** Joins: causaui1 (~causasui@192.241.228.169)
[09:28:46] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[09:30:15] *** Joins: stranac (~stranac@195.29.239.126)
[09:30:49] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[09:31:24] *** Joins: Valeria (~Valeria@user/valeria)
[09:32:06] *** Quits: adiKt (uid472628@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:32:08] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[09:33:03] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[09:33:20] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[09:34:44] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[09:34:54] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[09:35:02] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[09:36:13] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:36:42] *** Joins: voidcat (~voidcat@user/voidcat)
[09:38:12] *** Joins: \\ (~\0x5c@miaow/nonantedeux)
[09:38:49] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[09:39:19] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[09:40:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[09:41:51] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:42:36] *** Joins: buzzard (~buzzard@2.56.190.253)
[09:44:27] *** Quits: anonymous (~anonymous@gateway/tor-sasl/anonymous) (Ping timeout: 276 seconds)
[09:44:37] *** Quits: Rain42 (~Rain@li958-238.members.linode.com) (Quit: The Lounge - https://thelounge.chat)
[09:44:47] *** Quits: fling (~fling@user/fling) (Ping timeout: 264 seconds)
[09:46:44] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:48:23] *** Joins: Rain42 (~Rain@li958-238.members.linode.com)
[09:50:23] *** Quits: BCB (~fdajkddce@cpe-66-65-105-23.nyc.res.rr.com) (Remote host closed the connection)
[09:52:25] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Remote host closed the connection)
[09:55:26] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[09:55:41] <buzzard> hello all.  is there a clean way to get windows to use a conda environment to run python files via ".\file.py"?
[09:55:53] *** Joins: bindu (~bindu@user/bindu)
[09:56:13] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[09:56:18] <buzzard> can assume that the environment has already been activated in the shell
[09:56:21] *** Joins: vit (~vit@chello085216193138.chello.sk)
[10:04:09] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:05:11] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 264 seconds)
[10:07:55] *** Quits: buzzard (~buzzard@2.56.190.253) (Quit: Leaving)
[10:08:34] *** Joins: Valeria (~Valeria@user/valeria)
[10:08:37] *** Joins: buzzard (~buzzard@2.56.190.253)
[10:10:30] *** Joins: causaui1 (~causasui@192.241.228.169)
[10:11:53] *** Quits: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[10:12:57] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[10:13:27] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[10:14:22] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[10:15:38] *** Joins: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[10:16:02] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 260 seconds)
[10:16:39] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[10:17:30] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[10:18:45] *** Quits: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Client Quit)
[10:18:59] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 264 seconds)
[10:19:34] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[10:19:58] *** Joins: dvx (~dvx@5.181.92.64)
[10:20:39] *** Joins: dba (uid502594@hampstead.irccloud.com)
[10:20:49] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[10:22:00] *** Joins: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[10:22:01] *** Joins: Enitin (~Enitin@82.102.22.86)
[10:23:28] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[10:23:34] <jinsun> dodocrypto: oh yeah you want to check at the end of the string too
[10:23:58] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[10:24:30] <jinsun> dodocrypto: there is no "\0" at the end of the string in python, you can get the last character with text[-1], and do the if check on that one too
[10:26:49] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[10:27:03] *** Joins: dvx (~dvx@5.181.92.64)
[10:28:39] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (*.net *.split)
[10:28:39] *** Quits: gizmo_ (~gizmo@45.91.125.2) (*.net *.split)
[10:28:39] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[10:28:39] *** Quits: beanzilla (beanzilla@user/beanzilla) (*.net *.split)
[10:28:39] *** Quits: urth (~urth@geertswei.nl) (*.net *.split)
[10:28:39] *** Quits: dskull (~dskull@user/dskull) (*.net *.split)
[10:28:39] *** Quits: seanBE (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com) (*.net *.split)
[10:28:39] *** Quits: newdimension (~newdimnes@user/newdimension) (*.net *.split)
[10:28:39] *** Quits: sale (~sale@ypocit.initech.link) (*.net *.split)
[10:28:39] *** Quits: linuxdaemon (linuxdemon@bnc.linuxdemon.xyz) (*.net *.split)
[10:28:39] *** Quits: DXR (~lyrical@77.49.234.159.dsl.dyn.forthnet.gr) (*.net *.split)
[10:28:39] *** Quits: Dev0n (~Dev0n@user/dev0n) (*.net *.split)
[10:28:39] *** Quits: murr4y (ali@user/murr4y) (*.net *.split)
[10:28:39] *** Quits: douglaswinship (~douglaswi@78.40.148.180) (*.net *.split)
[10:28:39] *** Quits: rk4 (~r@user/rk4) (*.net *.split)
[10:28:39] *** Quits: ringo__ (~ringo@157.230.117.128) (*.net *.split)
[10:28:39] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[10:28:39] *** Quits: lericson (~lericson@user/lericson) (*.net *.split)
[10:28:39] *** Quits: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2) (*.net *.split)
[10:28:39] *** Quits: introom (introom@2600:3c01::f03c:92ff:fea3:2cf) (*.net *.split)
[10:28:39] *** Quits: marienz__ (~marienz@libera/staff/marienz) (*.net *.split)
[10:28:39] *** Quits: jpaa (~jpaa@87.118.126.66) (*.net *.split)
[10:28:39] *** Quits: asix (~Anders@user/asix) (*.net *.split)
[10:28:39] *** Quits: deniska (~denis@user/deniska) (*.net *.split)
[10:28:39] *** Quits: hook (~hook@user/silver-hook/x-9987513) (*.net *.split)
[10:28:39] *** Quits: Koffa (jkohvakk@user/koffa) (*.net *.split)
[10:28:39] *** Quits: poorboy (~poorboy@159.89.189.144) (*.net *.split)
[10:28:39] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (*.net *.split)
[10:28:39] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[10:28:39] *** Quits: argoneus (~argoneus@argoneus.com) (*.net *.split)
[10:28:39] *** Quits: shodan45 (~quassel@107.161.22.155) (*.net *.split)
[10:28:39] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (*.net *.split)
[10:28:39] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (*.net *.split)
[10:28:39] *** Quits: dangrenier83 (~pi@user/dangrenier83) (*.net *.split)
[10:28:40] *** Quits: ialokin (~ialokin@user/ialokin) (*.net *.split)
[10:28:40] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (*.net *.split)
[10:28:40] *** Quits: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net) (*.net *.split)
[10:28:40] *** Quits: ldericher (~LDer@pantalaimon.yavook.de) (*.net *.split)
[10:28:40] *** Quits: SeeM (~SeeM@153.ip-54-38-53.eu) (*.net *.split)
[10:28:40] *** Quits: The-Compiler (~compiler@the-compiler.org) (*.net *.split)
[10:28:40] *** Quits: bidouille (~user_name@trois.potager.org) (*.net *.split)
[10:28:40] *** Quits: matdev (~matdev@2a01:6e60:10:793:666:feed:dead:beef) (*.net *.split)
[10:28:40] *** Quits: IceMichael (~IceMichae@h2878436.stratoserver.net) (*.net *.split)
[10:28:40] *** Quits: p3lim (~p3lim@ti0006q161-0896.bb.online.no) (*.net *.split)
[10:28:40] *** Quits: kolcon (~kolcon@v.kolouch.org) (*.net *.split)
[10:28:40] *** Quits: matrixise (~matrixise@python/psf/matrixise) (*.net *.split)
[10:28:48] *** Joins: shodan45 (~quassel@107.161.22.155)
[10:28:49] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[10:28:50] *** Joins: deniska (~denis@user/deniska)
[10:28:52] *** Joins: Koffa (jkohvakk@user/koffa)
[10:28:54] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[10:28:56] *** Joins: SeeM (~SeeM@153.ip-54-38-53.eu)
[10:28:56] *** Joins: urth (~urth@geertswei.nl)
[10:28:57] *** Joins: linuxdaemon (linuxdemon@bnc.linuxdemon.xyz)
[10:28:59] *** Joins: argoneus (~argoneus@argoneus.com)
[10:29:08] *** Joins: Exa (exa@irc.moe)
[10:29:10] *** Joins: rk4 (~r@user/rk4)
[10:29:13] *** Joins: jpaa (~jpaa@87.118.126.66)
[10:29:13] *** Joins: matdev (~matdev@2a01:6e60:10:793:666:feed:dead:beef)
[10:29:15] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[10:29:17] *** Joins: DXR (~lyrical@77.49.234.159.dsl.dyn.forthnet.gr)
[10:29:17] *** Joins: beanzilla (beanzilla@user/beanzilla)
[10:29:20] *** Joins: newdimension (~newdimnes@user/newdimension)
[10:29:21] *** Joins: poorboy (~poorboy@159.89.189.144)
[10:29:22] *** Joins: Byteflux (~byte@byteflux.net)
[10:29:25] *** Joins: dskull (~dskull@user/dskull)
[10:29:26] *** Joins: p3lim (~p3lim@ti0006q161-0896.bb.online.no)
[10:29:26] *** Joins: asix (~Anders@user/asix)
[10:29:27] *** Joins: seanBE (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com)
[10:29:34] *** Joins: hook (~hook@user/silver-hook/x-9987513)
[10:29:37] *** Joins: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net)
[10:29:38] *** Joins: ialokin (znc@user/ialokin)
[10:29:41] *** Joins: ringo__ (~ringo@157.230.117.128)
[10:29:42] *** Joins: murr4y (ali@user/murr4y)
[10:29:43] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[10:29:44] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[10:29:49] *** Joins: IceMichael (~IceMichae@h2878436.stratoserver.net)
[10:29:50] *** Joins: sale (~sale@ypocit.initech.link)
[10:29:51] *** Joins: marienz__ (~marienz@libera/staff/marienz)
[10:30:20] *** Joins: gizmo_ (~gizmo@45.91.125.2)
[10:31:20] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[10:31:46] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[10:31:58] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:32:32] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[10:33:33] *** Joins: mrwick (~mrwick@user/mrwick)
[10:34:22] *** Quits: mspe (~user@tilde.team/user/mspe) (*.net *.split)
[10:34:22] *** Quits: mgocobachi (~m@ancrae.com) (*.net *.split)
[10:34:22] *** Quits: RoyK (~roy@user/royk) (*.net *.split)
[10:34:22] *** Quits: Wooble (~Wooble@107.170.27.240) (*.net *.split)
[10:34:22] *** Quits: yemel (~yemel@user/yemel) (*.net *.split)
[10:34:22] *** Quits: anorthall_ (~anorthall@user/anorthall) (*.net *.split)
[10:34:22] *** Quits: ouemt (~quassel@user/ouemt) (*.net *.split)
[10:34:22] *** Quits: mjacob (~mjacob@adrastea.uberspace.de) (*.net *.split)
[10:34:22] *** Quits: voldial (~user@user/voldial) (*.net *.split)
[10:34:22] *** Quits: gegenschein (~james@ec2-52-91-126-104.compute-1.amazonaws.com) (*.net *.split)
[10:34:22] *** Quits: gaken (~gaken@user/galen) (*.net *.split)
[10:34:22] *** Quits: FLHerne (flh@flherne.uk) (*.net *.split)
[10:34:22] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (*.net *.split)
[10:34:23] *** Quits: xMopx (~xMopx-lib@192.95.23.134) (*.net *.split)
[10:34:23] *** Quits: d33tah (~d33tah@2a03:b0c0:3:d0::14d2:c001) (*.net *.split)
[10:34:23] *** Quits: derelict (derelict@user/derelict) (*.net *.split)
[10:34:23] *** Quits: znf (~ibm86@toaster.linge-ma.ro) (*.net *.split)
[10:34:23] *** Quits: mgubyt (u@mgub.yt) (*.net *.split)
[10:34:23] *** Quits: hays (rootvegeta@fsf/member/hays) (*.net *.split)
[10:34:23] *** Quits: petemc (~pete@vps-80fad31a.vps.ovh.net) (*.net *.split)
[10:34:23] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (*.net *.split)
[10:34:23] *** Quits: vodkra (~vodkra@user/vodkra) (*.net *.split)
[10:34:23] *** Quits: jrabbit (~jack@user/jrabbit) (*.net *.split)
[10:34:23] *** Quits: tpr (~tpr@user/tpr) (*.net *.split)
[10:34:23] *** Quits: vegii (~quassel@2001:470:1f18:3aa:30f::5439) (*.net *.split)
[10:34:23] *** Quits: mwilson (mwilson@2600:3c01::f03c:92ff:fe7f:1149) (*.net *.split)
[10:34:23] *** Quits: SnoopJ (~snoopj@user/snoopj) (*.net *.split)
[10:34:23] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (*.net *.split)
[10:34:23] *** Quits: LostInWeb (~quassel@narvi.bifroest.eu) (*.net *.split)
[10:34:31] *** Joins: vegii (~quassel@2001:470:1f18:3aa:30f::5439)
[10:34:32] *** Joins: vodkra (~vodkra@user/vodkra)
[10:34:34] *** Joins: mjacob (~mjacob@adrastea.uberspace.de)
[10:34:34] *** Joins: gaken (~gaken@user/galen)
[10:34:34] *** Joins: hays (rootvegeta@fsf/member/hays)
[10:34:35] *** Joins: yemel (~yemel@user/yemel)
[10:34:36] *** Joins: LostInWeb (~quassel@narvi.bifroest.eu)
[10:34:39] *** Joins: mgubyt (u@mgub.yt)
[10:34:39] *** Joins: mwilson (~mwilson@li159-72.members.linode.com)
[10:34:40] *** Joins: ouemt (~quassel@user/ouemt)
[10:34:42] *** Joins: gegenschein (~james@ec2-52-91-126-104.compute-1.amazonaws.com)
[10:34:43] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[10:34:43] *** Joins: RoyK (~roy@user/royk)
[10:34:47] *** Joins: earthbre- (~earthbrea@li778-229.members.linode.com)
[10:34:49] *** Joins: SnoopJ (~snoopj@user/snoopj)
[10:34:50] *** Joins: jrabbit (~jack@user/jrabbit)
[10:34:52] *** Joins: FLHerne (~flh@flherne.uk)
[10:34:57] *** Joins: derelict (~derelict@user/derelict)
[10:35:04] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[10:35:09] *** Joins: d33tah (~d33tah@2a03:b0c0:3:d0::14d2:c001)
[10:35:10] *** Joins: xMopx (~xMopx-lib@192.95.23.134)
[10:35:26] *** Joins: mspe (~user@tilde.team/user/mspe)
[10:35:27] *** Joins: anorthall_ (~anorthall@user/anorthall)
[10:35:27] *** Joins: tpr (~tpr@user/tpr)
[10:35:28] *** Joins: Wooble (~Wooble@107.170.27.240)
[10:35:31] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:35:42] *** Joins: mgocobachi (~m@ancrae.com)
[10:36:05] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[10:36:57] *** Joins: Dev0n (~Dev0n@user/dev0n)
[10:36:59] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[10:37:10] *** Joins: znf (~ibm86@toaster.linge-ma.ro)
[10:42:08] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[10:46:45] *** Joins: causaui1 (~causasui@192.241.228.169)
[10:48:01] *** Quits: Tomassi-1800 (~Tomassi-1@2a01:799:12a0:6800:aa1e:26d5:57e6:8e8d) (Ping timeout: 245 seconds)
[10:48:26] *** Quits: sagax (~sagax_nb@user/sagax) (Read error: Connection reset by peer)
[10:51:13] *** Joins: manti7 (~manti7@176.10.104.94)
[10:51:31] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[10:51:32] *** Quits: bitreverb (~bitcycle@174-21-103-142.tukw.qwest.net) (Ping timeout: 256 seconds)
[10:53:16] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[10:53:50] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[10:54:18] *** Joins: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[10:54:40] *** Joins: s1b1 (~s1b1@user/s1b1)
[10:54:46] *** Quits: \\ (~\0x5c@miaow/nonantedeux) (Ping timeout: 260 seconds)
[10:54:46] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 260 seconds)
[10:55:42] *** Quits: voidcat (~voidcat@user/voidcat) (Ping timeout: 260 seconds)
[10:57:38] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:58:35] *** Joins: seednode (~seednode@user/seednode)
[10:58:44] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[11:01:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:01:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[11:02:10] *** Joins: MrSunshine (~MrSunshin@217-64-148-113.pool.ovpn.com)
[11:02:45] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[11:03:39] *** Joins: fikran (~fikran@user/fikran)
[11:03:50] <MrSunshine> hey! Im trying to filter a pandas dataframe using "df = df.loc[df[filter.keys()].isin(filter.values()).all(axis = 1),: ]
[11:03:50] <MrSunshine> " works fine but only takes exact matches, i would like the filter.values() to be a regex so i can do some fun stuff with it but i ust cant figure it out =)
[11:03:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:04:33] *** Joins: kosh (~kosh@user/kosh)
[11:04:43] *** Joins: sagax (~sagax_nb@user/sagax)
[11:07:37] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:08:15] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[11:08:20] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 268 seconds)
[11:08:23] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:09:34] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:11:11] <bookworm> MrSunshine: https://pandas.pydata.org/docs/reference/api/pandas.Series.str.contains.html#pandas.Series.str.contains
[11:11:15] <BrenBarn> not sure exactly what you're doing there, but for a pandas Series, the `.str.contains()` method can take a regex
[11:11:42] <BrenBarn> so you can do like `df[df.SomeColumn.str.contains(r'this.*that=?stuff')]`
[11:11:56] <MrSunshine> BrenBarn, its a list of dictionaries i want to iterate over and filter the dataframe from
[11:12:50] <MrSunshine> df = df[df[filter.keys()].str.contains(filter.values())] this failes somehow .. its a lbireoffice macro im trying to write and the error output isnt that great so i dont realy get exactly what goes wrong :/
[11:12:59] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:13:23] <BrenBarn> it doesn't typically make sense to apply a filter on the whole df
[11:13:41] <BrenBarn> like usually you want to apply a filter to columns and then select the rows that match the filter
[11:14:08] <MrSunshine> the df[filters.keys()] selects the column ?
[11:14:09] <MrSunshine> https://snipboard.io/Z8qwio.jpg
[11:14:31] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[11:14:33] <MrSunshine> the pairs are { columnName: filterString } in the list of dictionaries
[11:14:56] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[11:15:02] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:16:29] <jinsun> .str can be done on Series only, df[filters.keys()] will give you a dataframe probably
[11:16:42] *** Joins: zacts (~zacts@user/zacts)
[11:17:11] <MrSunshine> https://snipboard.io/hykJ3e.jpg
[11:17:25] <MrSunshine> sorry for the snippets but dpaste.com wont let me paste anything
[11:18:00] <jinsun> yeah that is your error
[11:18:34] <jinsun> you need to give a single key, not filters.keys() even if it has only one key
[11:18:52] <jinsun> there is a difference between Series and Dataframe with one column, you want Series
[11:18:52] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[11:18:56] <NeilRG> what does this mean? TypeError: __class__ assignment only supported for heap types or ModuleType subclasses
[11:19:00] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[11:19:00] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Client Quit)
[11:19:02] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[11:19:18] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 256 seconds)
[11:19:25] <NeilRG> ah nm
[11:19:27] <NeilRG> got it
[11:20:34] *** Joins: chele (~chele@user/chele)
[11:20:43] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:21:17] *** Joins: reset (~reset@user/reset)
[11:21:17] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:22:26] <jinsun> MrSunshine: choose the single key with `key, = filters.keys()` and do df[key], or just df[next(ter(filters.keys()))] if you don't want temp variable
[11:23:54] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[11:24:14] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[11:27:40] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[11:30:18] <NeilRG> how do I get __init_subclass__ working with dataclasses?
[11:30:21] <MrSunshine> https://snipboard.io/VKaEy5.jpg that worked atleast =)
[11:30:28] <NeilRG> the dataclass decorator runs after __init_subclass__
[11:30:49] <NeilRG> dataclasses really should have been a class, but the author was too shortsighted imo
[11:32:34] *** Joins: grooverman (~grooverma@177.102.117.95)
[11:33:43] <jinsun> it was inspired by attrs, and attrs also uses decorators
[11:34:33] <NeilRG> jinsun, yes I know
[11:34:37] <jinsun> pydantic uses a base class
[11:34:38] <NeilRG> jinsun, that's the author I'm talking about
[11:34:51] *** Quits: grooverman__ (~grooverma@177.95.12.14) (Ping timeout: 268 seconds)
[11:35:12] <NeilRG> anyway, any idea on how to get __init_subclass__ to see the decorated class?
[11:35:26] <NeilRG> probably impossible right? and so I now need to tack on more decorators
[11:36:17] <jinsun> waht is doing wrong with `__init_subclass__` ?
[11:36:26] *** Joins: rendar (~rendar@user/rendar)
[11:36:33] <jinsun> s/doing/going
[11:37:00] *** Joins: mcpac82 (~textual@212.25.0.228)
[11:37:20] <NeilRG> I need it to see the decorated class
[11:37:24] <NeilRG> but the decorator runs after it
[11:37:28] *** Joins: todda7 (~torstein@31.4.142.81)
[11:37:35] *** Quits: tsaka__ (~torstein@31.4.142.3) (Ping timeout: 264 seconds)
[11:38:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[11:38:33] *** Joins: causaui1 (~causasui@192.241.228.169)
[11:38:44] *** Joins: twb (~twb@203.7.155.73)
[11:39:21] <twb> The /etc/X11/xdm/Xresources file sets a "xlogin.Login.Foreground" property -- I think on the root window.  How can I query this from Python?
[11:39:21] <jinsun> haven't tried but you can probably monkey patch it after the decorator runs
[11:39:29] <NeilRG> jinsun, yeah :(
[11:39:33] <twb> (Plan B is to parse the config files)
[11:39:37] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:42:02] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[11:42:45] *** Joins: tobybl (~tobybl@213.31.134.235)
[11:43:57] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[11:45:16] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[11:46:23] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Client Quit)
[11:46:39] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:49:28] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:d044:77cc:5d76:8553)
[11:51:04] *** Joins: Tas-sos (~Tas-sos@ppp046176221197.access.hol.gr)
[11:51:53] *** Joins: AsenMx (~AsenMx@user/asenmx)
[11:52:11] *** Quits: resmo (~resmo@2a00:d420:9:8a00:9fdc:2eaa:9da8:5ce5) (Ping timeout: 245 seconds)
[11:53:36] *** Joins: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net)
[11:54:02] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 260 seconds)
[11:55:17] *** Joins: fivegruel (~fivegruel@HSI-KBW-109-192-195-188.hsi6.kabel-badenwuerttemberg.de)
[11:55:59] <NeilRG> what's the PEP for functions that validate against a type?
[11:56:05] <NeilRG> ah
[11:56:09] <NeilRG> just remmbered
[11:58:02] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[11:58:20] *** Joins: nomic (~nomic@185.192.69.224)
[12:00:21] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:00:21] *** Quits: nomic (~nomic@185.192.69.224) (Client Quit)
[12:00:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:00:49] *** Joins: \\ (~\0x5c@miaow/nonantedeux)
[12:00:51] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[12:01:18] *** Joins: voidcat (~voidcat@user/voidcat)
[12:03:11] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[12:03:12] *** Joins: upsala (~zcb@185.213.155.252)
[12:03:14] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Client Quit)
[12:03:16] *** Joins: skintimidation (~g@user/skintimidation)
[12:03:32] <jinsun> NeilRG: was it TypeGuard?
[12:03:40] <NeilRG> jinsun, yup
[12:03:55] <NeilRG> jinsun, good memory, it took me 5 min
[12:04:59] <skintimidation> Still thinking about this "next palindrome" problem. I'll try and get a working demo to share.
[12:05:21] <NeilRG> skintimidation, what's that?
[12:05:22] <skintimidation> Do google colab links share well in here? What's the preferred browser codesharing site for thisc hannel?
[12:05:35] <NeilRG> depends on how long your code is
[12:05:41] <NeilRG> bpaste for short things
[12:05:52] <skintimidation> NeilRG: Given an integer N, find the next palindromic integer. My current idea is to find the PRIOR, because the NEXT will always follow the prior with a simple algorithm, or so I think.
[12:06:04] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[12:06:18] <NeilRG> skintimidation, how is that easier than finding the next?
[12:06:21] *** Quits: TJ- (~root@about/linux/staff/tj-) (Ping timeout: 245 seconds)
[12:06:33] <skintimidation> Given a palindromic integer, you can "just" separate it in "half," increment that "half," and then mirror it to make the palindrome. 3553 -> 3663, 35653, 35753.
[12:06:57] <skintimidation> This is "easier" because you're not just doing a walk through everything, which would get extremely long given large n.
[12:07:16] <NeilRG> skintimidation, I see, but how is finding the previous an easier problem than finding the next?
[12:07:25] <skintimidation> The corner cases I found are powers of ten, which I need to deal with, and also any number that is all 9s. I can deal with the latter very eaisly.
[12:07:49] <skintimidation> NeilRG: because the previous can be done the way I stated but through decrementation, I think.
[12:07:55] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:08:00] <NeilRG> skintimidation, decrementation sounds way too slow
[12:08:02] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[12:08:13] <skintimidation> In my head, it seems simplest to do that entirely through string manipulation. To clarify, I mean that you do my generation method, but instead of incrementing, you decrement.
[12:08:14] <NeilRG> I'm assuming this is a contest problem?
[12:08:27] <skintimidation> I'm not in a contest; someone else asked it to me and it stuck really well
[12:08:43] <NeilRG> if I give you 12345678
[12:08:45] <skintimidation> When I learned about the elegance of generating it through strings instead of staying entirely in the integer domain, it became interesting
[12:08:48] <NeilRG> how do you find the next palindrome?
[12:09:14] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:09:20] <NeilRG> I think the right approach to this is to reason by induction and solve it for 2 digits
[12:09:32] <skintimidation> find the last palindrome, which is 12344321, then find the next palindrome, which is 12355321.
[12:09:34] <NeilRG> bbin 10
[12:09:42] <NeilRG> how do you find that last palindrome?
[12:09:46] <NeilRG> decrementation is way too slow
[12:10:02] <NeilRG> if your numbers are 40 digits, you will never get there
[12:10:30] <skintimidation> you split in half, and i just realized that you have to get more clever, as this one you can't just decrement 1234, you'd do 1234 and go from there because it was larger than 12340000
[12:10:39] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[12:10:55] <skintimidation> oh wait, it's always larger, big brain stupid. hold on. hmm.
[12:13:09] <skintimidation> the repetitive divergence is interesting, actually. in this case, i'd 1) generate the naive palindrome "half" + "flah", and then if it was greater than n, that's the answer, right?
[12:13:20] <skintimidation> i'm trying to think of a corner case THERE, aside from the mentions I had earlier.
[12:14:09] <skintimidation> and then if it was smaller, as in this case, we then generate the next palindrome (through my incrementation of the half and its mirroring), and that takes care of everything even-numbered in digits.
[12:14:14] *** Joins: causaui1 (~causasui@192.241.228.169)
[12:14:30] <jinsun> that works for powers of 10 and all 9s I think, those are not really corner cases
[12:15:49] <skintimidation> i'm curious, though, if there's another property of the string that i'm missing, as this is already a complicated solutions. jinsun: orly? i figured the problem of all-9s is that my generation phase creates 99 -> 9+1 -> 10 -> 1001 instead of 101. my idea is to short-circuit, find if set(n) == {9} [c.f. earlier discussion] and then just return n+2
[12:16:10] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:16:48] <NeilRG> skintimidation, alright I'm back
[12:16:54] <skintimidation> and for the same reason, 10, 20, 30, are all going to act strange, and so i'd simply take n[0] and put it on the end
[12:16:57] <skintimidation> welcome back, NeilRG
[12:17:08] <NeilRG> skintimidation, you should look for an algorithm that's O(N) where N is the number of digits
[12:17:11] *** Joins: delvian (~delvian@41.13.200.201)
[12:17:25] <NeilRG> the algorithm you're describing with decrementing is O(10^N)
[12:17:28] <jinsun> skintimidation: ah yeah, you need next, I was thinking same number will be fine too
[12:17:44] <skintimidation> jinsun: indeed, it would have been nice.
[12:18:27] <NeilRG> skintimidation, if I code up my solution, are you interested in looking at it, or should I leave you this excellent puzzle?
[12:18:33] <skintimidation> NeilRG: wait, how, exactly? no matter the string size, i'm going to be taking 2 main operations in the "worst case," neither of which will involve enumeration
[12:18:45] <NeilRG> skintimidation, please explain
[12:18:51] <skintimidation> when i say decrementing, i mean taking half of the number, decrementing that half, and then generating the palindrome
[12:19:04] <skintimidation> NeilRG: i'm absolutely interested in the solution you've got in mind
[12:19:19] <skintimidation> i'll start programming my nightmare and be here, as well
[12:19:29] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[12:19:46] <NeilRG> skintimidation, ok, looking forward to it
[12:19:53] <NeilRG> I used to do these contests when I was younger :)
[12:20:17] *** Joins: iflema (~ian@user/iflema)
[12:21:23] *** Quits: buzzard (~buzzard@2.56.190.253) (Ping timeout: 264 seconds)
[12:21:44] *** Joins: davor_ (~davor@user/davor)
[12:21:46] *** Quits: davor (~davor@user/davor) (Ping timeout: 245 seconds)
[12:22:04] <jinsun> skintimidation: that 10 --> 101 can be solved by slicing off the string before reversing, so you don't reverse 10 you reverse 10[:1]
[12:22:53] <NeilRG> skintimidation, yeah you have the right idea
[12:23:12] <NeilRG> skintimidation, just the edge cases
[12:23:21] *** Joins: greedom (~greedom@x59cc9a78.dyn.telefonica.de)
[12:24:49] *** Joins: fdan (~fdan@192.146.154.3)
[12:25:06] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:25:18] <analoq> if you create a python application that relies on a few external packages, how do you ship that to the enduser so that it includes all dependencies and runs without any further downloads/installations?
[12:25:56] <analoq> basically the equivalent to a statically compiled exe. (doesnt need to be a single file though, a folder structure would be perfectly fine)
[12:26:54] <Repiphany> pyinstaller
[12:27:42] *** Quits: FurCoatStarlette (FurCoatSta@159.196.89.115) (Remote host closed the connection)
[12:30:01] <analoq> ty. i'll look into that.
[12:30:14] *** Joins: TJ- (~root@about/linux/staff/tj-)
[12:30:30] *** dcaro_away is now known as dcaro
[12:30:46] *** Joins: The-Compiler (~compiler@the-compiler.org)
[12:31:10] *** Joins: e2m4n (~ezman@user/e2m4n)
[12:31:23] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[12:32:47] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[12:32:49] *** Joins: ExeciN (~ExeciN@user/nicexe)
[12:37:26] <NeilRG> skintimidation, ok, I coded it
[12:37:38] <NeilRG> https://bpa.st/ALCQ
[12:37:39] <skintimidation> you shut up, lmao, i have the code for even-digited palindromes
[12:37:39] <skintimidation> lol
[12:37:46] *** Joins: luischi (~luigi@80.30.201.209)
[12:38:06] <skintimidation> fast work; i'm going to program the next logic
[12:38:41] <skintimidation> i'm currently thinking if there's an easy way to say "mirror about the center, whether or not the 'center' is null or a number" in python, but that seems a little abstract here
[12:38:43] *** Joins: shad (~shad@user/shad)
[12:40:47] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:40:52] <NeilRG> skintimidation, :)
[12:40:57] <NeilRG> I used to these contests for fun
[12:41:03] <NeilRG> in college
[12:41:19] <NeilRG> anyway, I used your algorithm
[12:41:24] <NeilRG> so you figured out the hard stuff
[12:41:56] <skintimidation> lmao i took a second to look at your code (no substance, just lines), and it's already real short
[12:41:58] <skintimidation> gonna have to test it soon
[12:42:00] <skintimidation> sec
[12:42:21] <NeilRG> I think I can simplify it lol
[12:42:39] <NeilRG> maybe not worth it though
[12:43:11] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[12:47:29] *** Quits: greedom (~greedom@x59cc9a78.dyn.telefonica.de) ()
[12:47:53] <NeilRG> skintimidation, okay, way shorter! https://bpa.st/EVPA
[12:49:07] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:49:07] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[12:49:33] <NeilRG> https://bpa.st/6WJA
[12:49:39] *** Joins: Pickchea (~private@user/pickchea)
[12:49:48] <skintimidation> oh you cheeky bastard, lmao
[12:50:02] <skintimidation> super interesting setup
[12:50:10] <skintimidation> especially doing it with math
[12:50:20] <skintimidation> versus my stringed approach
[12:50:32] <NeilRG> skintimidation, I did a mix :)
[12:50:54] <NeilRG> strings are easier to reverse and compare with 9s, and math is better for incrementing
[12:51:28] <analoq> NeilRG: why the all(x=='9' ...? what is so special about the 9?
[12:51:34] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Remote host closed the connection)
[12:51:46] <NeilRG> analoq, the next palindrome after all 9s has one extra digits
[12:51:58] <NeilRG> the easiest way to cover that case is just to special case it
[12:52:04] <NeilRG> 9999 -> 10001
[12:52:09] <NeilRG> 99 -> 101
[12:52:29] <NeilRG> if you let that flow through, the algorithm would do 99 -> 1001!
[12:52:45] <NeilRG> or
[12:52:48] <NeilRG> maybe not lol
[12:52:52] <NeilRG> might actually work, hang on
[12:53:08] <NeilRG> analoq, aha, good point, it works withotu it
[12:53:19] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[12:53:34] <skintimidation> NeilRG: your last submission can be improved; you just need to remove the math import, lmao
[12:53:49] <skintimidation> how is it that easy? why is it called little_d in your code?
[12:53:51] <NeilRG> skintimidation, https://bpa.st/ZG4A
[12:53:55] <NeilRG> check this one now
[12:54:07] *** Quits: twb (~twb@203.7.155.73) (Remote host closed the connection)
[12:54:10] *** Joins: tofran7 (~tofran@37.189.158.134)
[12:54:12] <NeilRG> (because I was doing things in a complicated way)
[12:54:20] <skintimidation> lol
[12:54:53] *** Joins: causaui1 (~causasui@192.241.228.169)
[12:55:13] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[12:55:24] <skintimidation> and then why m? because it comes after n? =P
[12:55:38] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 268 seconds)
[12:55:39] *** tofran7 is now known as tofran
[12:55:45] <NeilRG> even shorter https://bpa.st/7YEA
[12:55:59] <NeilRG> skintimidation yeah, m and n no idea why
[12:58:18] <skintimidation> Are you using % for truncation, along with //?
[12:59:17] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 246 seconds)
[12:59:26] <NeilRG> skintimidation, yup
[12:59:32] *** Joins: rpittau (sid346891@tinside.irccloud.com)
[12:59:36] <skintimidation> Iiiinteresting.
[12:59:54] *** Joins: ubert (~Thunderbi@p200300ecdf0ba27448631365ce659eb5.dip0.t-ipconnect.de)
[12:59:56] <skintimidation> How does this account for the case that it's even or odd?
[13:00:16] <skintimidation> Also, you can remove line 7 by putting 5-6 before 4, right?
[13:01:14] *** Joins: gulzar (~gulzar@14.139.123.36)
[13:02:05] *** Joins: drogas (~drogas@jump2.jet.uk)
[13:02:12] <skintimidation> And you covered the all 9s case? Whaaat?
[13:02:19] *** Joins: mcope (~matt@user/mcope)
[13:02:24] <NeilRG> skintimidation, haha yup
[13:02:40] *** Joins: fling (~fling@user/fling)
[13:02:53] <NeilRG> skintimidation, I can't remove line 7
[13:02:53] <gulzar> hi. With this https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.cut.html  , any way to remove the (] of the bins?  There is a parameter 'label' but i am generating bins dynamically based on min , max values. I need to keep same ranges as the labels. instead of (2,3], (4,5],(6,7]  to    2-3, 4-5, 6-7    , Any ideas please
[13:03:41] <skintimidation> ah duh, because it's not bound yet, of course
[13:04:00] *** Joins: ArtfulDodger_ (~ArtfulDod@2a02-8440-6306-def5-78ba-13a3-5b05-4fb6.rev.sfr.net)
[13:06:08] <skintimidation> So does multiplying m by p give you the first part + the 0s that you need to then insert the next part?
[13:06:22] *** Joins: NeoCore (~neocore@37.120.204.222)
[13:06:53] <skintimidation> I'm really trying to think of if this can be done with strict string manipulation in this case, because this is crazy to think about in terms of building it again
[13:08:24] <NeilRG> skintimidation, exactly
[13:08:38] <NeilRG> yes, string manipulation would also have been equally easy
[13:09:05] <skintimidation> hard to grok here, probably because it's somehow 2:45 already, lmao
[13:09:19] <NeilRG> yeah I need to go to sleep too
[13:09:21] <NeilRG> thanks for the fun problem
[13:09:23] <skintimidation> i'm glad i took the second to look at your submission, because this is a good puzzle on its own
[13:09:24] <NeilRG> goodnight
[13:09:29] <NeilRG> lol
[13:09:30] <skintimidation> thanks for the fun look; have a good one
[13:10:41] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:10:56] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[13:11:20] *** Joins: plastico (~plastico@neomutt/plastico)
[13:12:59] *** Joins: fikran (~fikran@user/fikran)
[13:13:18] *** Joins: lovelace (~Elspeth@2.24.23.175)
[13:14:15] *** Joins: Klinda (~superleag@user/klinda)
[13:15:17] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[13:16:55] *** Joins: ub (~Thunderbi@p548c9fcb.dip0.t-ipconnect.de)
[13:17:33] *** Quits: ubert (~Thunderbi@p200300ecdf0ba27448631365ce659eb5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[13:17:33] *** ub is now known as ubert
[13:17:57] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:19:43] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 250 seconds)
[13:21:28] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[13:23:10] *** Joins: ammarsalmi (~ammarsalm@154.121.67.216)
[13:25:48] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[13:26:20] *** Joins: Coldblackice_ (~c@user/coldblackice)
[13:26:36] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[13:29:14] *** Joins: binary0110 (~binary01@192.110.171.216)
[13:30:07] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Read error: Connection reset by peer)
[13:30:10] *** Quits: Coldblackice (~c@user/coldblackice) (Ping timeout: 260 seconds)
[13:30:22] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[13:31:13] *** Joins: CraigP (~Guest96@host-92-27-26-32.static.as13285.net)
[13:32:02] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[13:33:06] <CraigP> I am trying to compile my entire python project, venv and pip with pip packages into a single EXE file to run on windows that does not depend on python or any packages outside of the executeable, is this possible? I have seen several ways to do this simply on google with pyinstaller however I get ImportErrors exceptions. Any help would be greatly
[13:33:06] <CraigP> appreciated.
[13:33:36] *** Quits: binary011 (~binary01@192.110.171.216) (Ping timeout: 256 seconds)
[13:33:57] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:34:28] *** Joins: vlm (~vlm@user/vlm)
[13:35:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:35:06] *** Quits: onichomp (~onichomp@2806:264:4404:8301:5ded:ed19:900f:c919) (Ping timeout: 268 seconds)
[13:35:06] *** Quits: mallkrampus (~mallkramp@89.238.150.157) (Ping timeout: 268 seconds)
[13:35:37] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[13:35:37] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:36:58] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[13:37:04] *** Joins: anonymous (~anonymous@gateway/tor-sasl/anonymous)
[13:37:26] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:38:56] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:39:41] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[13:40:08] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[13:40:23] <tomeaton17> is it possible to get python to actually print the value that causes Input contains NaN, infinity or a value too large for dtype('float64'). ? I am having trouble what is causing sklearn to give this error
[13:40:57] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[13:41:00] <skintimidation> I'm mostly confused on the generate of p, I think, NeilRG: Why do you do digits // 2 in order to get p for the calculation of m? What property of 10^(digits)--ah, you're saying "half the number" and getting the conditional state of if the number is odd-digited? Is that it? 3 // 2 = 1, so 10, cutting off 1? Hmmmmmm. I'll think on it longer.
[13:41:48] <skintimidation> tomeaton17: should be available in a debugger if you set a breakpoint on the line where python's telling you that error comes from.
[13:42:31] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[13:45:23] *** Joins: petemc (~pete@vps-80fad31a.vps.ovh.net)
[13:47:03] <tomeaton17> np.all(np.isfinite(features)) returns false so there is some infinite points in the data set
[13:48:55] *** Joins: mallkrampus (~mallkramp@89.238.150.158)
[13:50:30] *** Joins: causaui1 (~causasui@192.241.228.169)
[13:51:10] *** Joins: trainsley69 (~trainsley@c151-177-173-170.bredband.tele2.se)
[13:51:32] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:52:56] <rindolf> tomeaton17: ah
[13:53:12] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Read error: Connection reset by peer)
[13:53:45] <rindolf> tomeaton17: you can find their locations
[13:54:04] *** Joins: rsx (~dummy@ppp-188-174-151-168.dynamic.mnet-online.de)
[13:55:15] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[13:55:15] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 250 seconds)
[13:55:54] *** Joins: AsenMx (~AsenMx@user/asenmx)
[13:56:20] *** Joins: Naan (~Naan@user/naan)
[13:58:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[13:58:49] <tomeaton17> rindolf with what?
[13:58:54] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 265 seconds)
[13:59:53] *** Quits: ArtfulDodger_ (~ArtfulDod@2a02-8440-6306-def5-78ba-13a3-5b05-4fb6.rev.sfr.net) (Read error: Connection reset by peer)
[14:01:01] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:01:13] *** Quits: thevishy (~thevishy@2405:201:f005:c04c:8449:f950:f9ed:a38c) (Quit: Client closed)
[14:02:18] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:02:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[14:03:21] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[14:03:44] <rindolf> tomeaton17: https://numpy.org/doc/stable/reference/generated/numpy.nonzero.html#numpy.nonzero
[14:05:43] *** Quits: binary0110 (~binary01@192.110.171.216) (Remote host closed the connection)
[14:08:11] <rindolf> tomeaton17: ping
[14:08:35] *** Joins: shad (~shad@user/shad)
[14:09:21] <tomeaton17> thanks
[14:09:22] <bluss> something like xs[np.where(~np.isfinite(xs))]   "get xs values where xs is not finite"
[14:09:42] <tomeaton17> the problem is in my non-linear transform
[14:11:30] *** Quits: rany_ (~rany@user/rany) (Remote host closed the connection)
[14:11:41] *** Joins: rany (~rany@user/rany)
[14:11:58] *** Joins: causaui1 (~causasui@192.241.228.169)
[14:11:58] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[14:12:31] *** Joins: tobybl (~tobybl@213.31.134.235)
[14:13:24] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 265 seconds)
[14:13:47] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:13:57] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:15:24] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[14:16:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:16:39] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[14:16:40] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[14:17:00] *** Quits: cnsunyour (~sunyour@129.226.182.99) (Ping timeout: 260 seconds)
[14:18:56] *** Joins: cnsunyour (~sunyour@129.226.182.99)
[14:19:57] *** Joins: jokoon (~eio@2a01:e0a:542:e160:516a:ffac:287b:2362)
[14:20:08] *** Quits: jemark (jemark@user/jemark) (Ping timeout: 268 seconds)
[14:20:21] <jokoon> is it possible to sort an array of tuple first from a certain key and then from another?
[14:20:27] *** Joins: jemark (~jemark@user/jemark)
[14:20:42] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:20:47] *** Quits: dawg (dirtydawg@triton.blinkenshell.org) (Ping timeout: 264 seconds)
[14:20:49] <Repiphany> Have your key return a tuple
[14:21:15] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[14:21:38] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[14:21:45] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:21:46] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[14:21:48] *** ayusta is now known as ayustae
[14:21:58] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 260 seconds)
[14:22:19] *** Joins: alkino (~quassel@user/alkino)
[14:22:59] <rindolf> jokoon: ^^^
[14:23:19] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:24:50] *** Joins: jim87 (~quassel@93.55.249.30)
[14:25:10] *** Quits: jemark (~jemark@user/jemark) (Ping timeout: 265 seconds)
[14:26:34] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[14:26:47] *** Joins: jemark (~jemark@user/jemark)
[14:26:48] <jim87> Hello! I've got a question about PIDs and threads: I have to monitor the main application and its threads, and whether one of them crash, I should send an alert. I honestly don't remember if a thread is a separated process or not (because getpid() always return the same identifier), but what could be the right strategy? At the moment I'm querying the pid of the main app, but that's not sufficient. Thanks :)
[14:29:12] *** Joins: darksun (~darksun@user/darksun)
[14:29:51] <Swayze> https://stackoverflow.com/questions/25855023/how-do-i-detect-if-a-thread-died-and-then-restart-it
[14:29:59] <Swayze> you might find this useful jim87 let me know
[14:30:14] <jim87> thanks Swayze :)
[14:30:17] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[14:30:38] <jim87> aww the timeout argument is awesome!
[14:30:41] <jim87> Thanks :)
[14:31:00] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[14:31:25] *** Joins: ArtfulDodger (~ArtfulDod@2a04:cec0:1135:d816:2355:a875:4237:1a0b)
[14:31:30] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:31:59] <Yhg1s> jim87: no, threads aren't separate processes.
[14:32:05] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Quit: guenhael)
[14:32:39] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:33:23] *** Quits: ArtfulDodger (~ArtfulDod@2a04:cec0:1135:d816:2355:a875:4237:1a0b) (Client Quit)
[14:33:54] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:34:15] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[14:34:39] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[14:35:03] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:35:41] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[14:36:27] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[14:41:16] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[14:43:42] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Remote host closed the connection)
[14:44:11] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[14:44:11] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[14:44:28] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:45:19] *** Joins: cursey (~cursey@user/cursey)
[14:45:24] <Swayze> yw jim87
[14:46:21] <rendar> do i have always to "prime" a coroutine before using it? e.g. my_coro = my_coro_gen(); next(my_coro); lib_3rd_party(my_coro) <- now i can use it
[14:48:00] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[14:48:07] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 250 seconds)
[14:50:40] *** Joins: causaui1 (~causasui@192.241.228.169)
[14:51:10] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[14:51:23] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 264 seconds)
[14:51:46] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:53:51] <Yhg1s> rendar: it's hard to tell what my_coro_gen is supposed to be there. Is it a coroutine or a generator being used as a coroutine? What do you expect the 'priming' to do? How does lib_3rd_party() use my_coro?
[14:54:45] <rendar> Yhg1s, https://bpa.st/6SOQ this is what the coroutine does
[14:54:54] <rendar> and the library use it to .send() data iterations
[14:55:03] <rendar> as long as it processes pieces of JSON text
[14:55:29] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[14:56:44] <Yhg1s> okay, so, not what we call a coroutine nowadays. Yes, you can't send anything to the first iteration of a generator (because there's nothing to receive the data yet). You can send None instead of calling next() on it, though (next() actually sends None.)
[14:56:54] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[14:57:15] <Yhg1s> rendar: so if the third-party library knows how to handle that first iteration, you don't have to call next().
[14:57:28] *** Quits: argoneus (~argoneus@argoneus.com) (Ping timeout: 256 seconds)
[14:59:11] *** Joins: argoneus (~argoneus@argoneus.com)
[15:00:11] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[15:00:30] *** Joins: ExeciN (~ExeciN@user/nicexe)
[15:00:58] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[15:01:14] <rendar> Yhg1s, it seems i have to call it, because if i don't do that, i get: TypeError: can't send non-None value to a just-started generator
[15:01:34] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[15:01:39] <Yhg1s> rendar: sounds like the third-party library doesn't know how to handle that first iteration.
[15:01:48] <Yhg1s> (what kind of library still uses generators as coroutines?)
[15:02:34] <rendar> Yhg1s, ijson
[15:03:05] *** Quits: libussa (~libussa@libussa.net) (Read error: Connection reset by peer)
[15:04:09] <Yhg1s> Which functions are you calling? It has support for proper coroutines as well.
[15:04:34] *** Joins: libussa (~libussa@libussa.net)
[15:04:48] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[15:05:03] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[15:05:08] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[15:05:29] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[15:05:47] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[15:06:37] *** dcaro is now known as dcaro_lunch
[15:07:19] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:08:13] <rendar> Yhg1s,  https://bpa.st/CB6Q
[15:09:25] <rendar> Yhg1s, basically this library has a class called 'sendable_list' which inherits from python's list, and add a 'send()' method which just call list.append() method..
[15:09:38] <rendar> that's when you want a list, otherwise you pass your coroutine
[15:09:40] <Yhg1s> rendar: if you insist on using this interface (rather than something based on asyncio file-like objects), you need to apply the @ijson.coroutine decorator.
[15:10:03] <Yhg1s> rendar: I don't know what you mean by 'this library'.
[15:10:34] <rendar> this library = ijson
[15:10:57] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[15:11:27] <rendar> Yhg1s, i use asyncio indeed, but i also need a coroutine to get the events produced by the library, instead of a list
[15:11:59] <rendar> i think i can use @ijson.coroutine decorator for a function, but not for a class method
[15:12:10] <rendar> and i need a class to keep the state of the elements i get
[15:13:12] <Dev0n> Hey, I have a flask app running on AWS ECS that seems to use up all the disk space after a few hours. I'm not persisting any data on the disk so not sure how to try and debug this. I'm unable to replicate this local development. Is there some obvious things I should be looking at first?
[15:13:21] <Yhg1s> rendar: okay, so don't use any of the methods that produce lists. ijson.parse_async() will yield parser events.
[15:14:21] <Yhg1s> rendar: don't make the coroutine a method of the class, make it a function that *uses* the class.
[15:14:22] <rendar> Yhg1s, but with that one i would need an async for loop
[15:14:31] <Yhg1s> rendar: correct. To use asyncio, you need async functions.
[15:14:42] <bjs> rendar: is this https://pypi.org/project/ijson/#asyncio-support the library?
[15:14:52] <rendar> bjs, yes
[15:15:31] <rendar> Yhg1s, the problem i already have a while loop that reads *bytes* from a file, and it sends those bytes to the ijson coroutine, i'd need a second while loop then
[15:15:57] <rendar> this is the main loop i have now https://bpa.st/WQ5A
[15:16:16] *** Quits: ammarsalmi (~ammarsalm@154.121.67.216) (Quit: Going offline, see ya! (www.adiirc.com))
[15:16:17] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[15:17:13] <rendar> so i need items_coro() or, at least, parse_coro() for having that .send()
[15:17:14] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[15:17:21] <rendar> thing that i cannot get with parse_async()
[15:17:37] <Yhg1s> rendar: I don't understand why you're writing code like this, sorry. Why don't you send self.input to ijson.parse_async directly? The munging you do seems immaterial.
[15:17:53] <Yhg1s> rendar: but if it isn't, create your own asyncio file-like object that does the munging, pass that to ijson.parse_async.
[15:18:41] <rendar> Yhg1s, i'm simply trying to get multiple JSON pieces from a socket
[15:19:07] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:3e3a:2011:b785:a7e6:b558)
[15:19:42] <Yhg1s> rendar: I understand that's what you're trying to do, yes. I wouldn't say you're doing it 'simply', since you seem to want to do it in the most complicated way possible :)
[15:20:05] <rendar> i don't send it directly because i needed to "clean" byte stream, with .strip() function for instance
[15:20:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[15:20:21] *** Joins: arseru (uid515527@user/arseru)
[15:20:40] <Yhg1s> rendar: why do you think you need to? whitespace is immaterial to JSON (except inside string literals, where I can't imagine you really want to 'clean' it up.)
[15:21:11] *** Joins: georgios (~georgios@user/georgios)
[15:21:24] <rendar> Yhg1s, ijson failed with \n\r\t
[15:21:29] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 250 seconds)
[15:21:36] <bjs> and even if you wanted to couldn't you make some kind of object that looked like the file object but secretly stripped some stuff away in between
[15:21:36] <rendar> e.g. '{"e\n":23}' <- fails
[15:21:42] *** Quits: gulzar (~gulzar@14.139.123.36) (Quit: Konversation terminated!)
[15:22:11] <bjs> rendar: how did you get a newline in a string literal? that wasn't valid JSON to start with
[15:22:20] *** Joins: fikran (~fikran@user/fikran)
[15:22:36] <rendar> bjs, ask to the server which i cannot control
[15:22:53] <arseru> Hi there! I found something very weird with printing a joined list, depending on how I format the print/logger statement, the list items are shown in different places in the terminal https://bpa.st/2XDQ
[15:22:58] <bjs> rendar: the server is streaming bytes but adding random newlines in it?
[15:22:59] <arseru> does anybody know why this happens?
[15:22:59] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[15:23:04] <Yhg1s> rendar: that would be because it is, infact, invalid JSON, yes.
[15:23:10] <rendar> bjs, plus, i need this control because i receive *multiple* JSON chunks, e.g. '{"e":2}{"t":3}'
[15:23:24] <rendar> with this deep control i can get the first one, and reset the state for the second one
[15:23:26] <bjs> arseru: you missed the comma in the first example
[15:23:36] <rendar> using only parse_async directly, i cannot get this
[15:24:06] <rendar> i could use a list, e.g. [{"e":2},{"t":3} ... but i'd not receive the result until the last ']' which should never come
[15:24:31] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 250 seconds)
[15:24:31] *** ayusta is now known as ayustae
[15:24:38] <arseru> bjs: if I add the comma in the logger.info example, I get the error `TypeError: not all arguments converted during string formatting`
[15:24:40] <Yhg1s> rendar: but as I said, if you must munge the data before it gets to ijson, wrap your asyncio file-like object in a file-like object of your own.
[15:24:48] <bjs> arseru: oh maybe you want to explicitly format yourself
[15:25:01] <Yhg1s> arseru: logging.info() takes a single string to log. You have to make a single string.
[15:25:09] <bjs> arseru: "some str" "".join(...)  is probably not what you wanted to do
[15:25:10] <arseru> bjs: yes, I know how to solve, but I was just curious as why this happens, so weird
[15:25:13] <rendar> Yhg1s, yes i can do that, but that doesn't solve the problem of multiple JSONs chunks
[15:25:16] <bjs> arseru: because "a" "b" == "ab"
[15:25:25] <bjs> I'm guessing
[15:25:27] <Yhg1s> arseru: your current code does that seemingly by accident; ' foo' 'bar'.join(...) is an awkward way of writing ' foobar'.join(...)
[15:25:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 264 seconds)
[15:25:49] *** Joins: anonymous__ (~anonymous@gateway/tor-sasl/anonymous)
[15:25:55] <arseru> Yhg1s: ooooooh I understand now! thanks :D
[15:26:14] <Yhg1s> rendar: okay, you know what, nevermind.
[15:26:31] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[15:26:31] <bjs> arseru: you probably want the first one to be something like "{} {}".format("Hello World", "".join(...))
[15:26:55] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[15:26:56] <bjs> arseru: (or "Hello World! {}".format("".join(...)))  or some other variation
[15:26:59] <rendar> Yhg1s, i have multiple JSON chunks, not only 1 JSON file
[15:27:39] *** Quits: anonymous (~anonymous@gateway/tor-sasl/anonymous) (Ping timeout: 276 seconds)
[15:28:48] *** Joins: lericson (~lericson@user/lericson)
[15:28:50] *** Joins: causaui1 (~causasui@192.241.228.169)
[15:29:11] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:29:43] *** Joins: BSaboia (~bsaboia@187.19.136.126)
[15:29:48] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[15:30:05] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:30:16] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[15:30:59] *** Joins: nomic (~nomic@185.192.69.224)
[15:31:00] <bjs> rendar: you mean like, multiple sockets?
[15:31:13] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 265 seconds)
[15:31:27] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 250 seconds)
[15:31:50] <rendar> bjs, nope, multiple JSON chunks in the same socket, e.g. i receive: {"e":2}  {"x":6} ... and so on
[15:32:25] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[15:33:33] <bjs> rendar: it looks like ijson just supports that with multiple_values=True
[15:33:38] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 265 seconds)
[15:33:44] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:33:54] *** Joins: onichomp (~onichomp@2806:264:4404:8008:c491:d61d:c06:de94)
[15:34:40] <rendar> bjs, oh, i didn't catch that, let's see
[15:35:01] <bjs> ... i've never seen this library before all I can do is read the page I found earlier
[15:35:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:36:01] <arseru> bjs: it's fine, I'm already switching everything to f-string (this code was from someone else) si I'll be safe then :)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:02] <rendar> bjs, yes! thanks man, that's the option i was looking for
[15:36:27] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:05] <bjs> rendar: don't thank me, I didn't write this library or its readme
[15:37:09] <bjs> (which btw, you are supposed to read :P)
[15:37:21] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:37:48] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:37:54] <rendar> i was reading it, i just missed that option
[15:38:52] <bjs> it has a section called "Options" and there were only 5 options :d
[15:39:16] <rendar> i'm inattentive
[15:39:25] <bjs> It presumably won't fixed mal-formed JSON with newlines in the middle of string literals,  but I don't know what you can do about those.
[15:39:30] <bjs> other than mangle your text
[15:40:12] <rendar> yes, indeed
[15:40:21] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[15:40:22] <rendar> i'll look into that
[15:40:32] <rendar> for now an important problem is solved
[15:40:52] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:40:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:40:59] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[15:41:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:41:46] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[15:42:55] *** Joins: magla (~gelignite@55d4d56a.access.ecotel.net)
[15:43:35] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[15:44:29] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:46:03] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:46:40] *** Joins: slavfox_ (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[15:46:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:47:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:47:32] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 260 seconds)
[15:47:32] *** slavfox_ is now known as slavfox
[15:48:08] *** Quits: shad (~shad@user/shad) (Ping timeout: 265 seconds)
[15:48:29] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[15:48:48] *** Joins: nomic (~nomic@185.192.69.224)
[15:48:57] *** Quits: CraigP (~Guest96@host-92-27-26-32.static.as13285.net) (Quit: Client closed)
[15:49:06] *** Quits: jemark (~jemark@user/jemark) (Ping timeout: 265 seconds)
[15:49:15] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[15:49:32] *** Joins: jemark (jemark@user/jemark)
[15:49:36] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Ping timeout: 256 seconds)
[15:49:57] *** Joins: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch)
[15:50:49] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[15:50:54] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[15:51:41] *** Quits: anonymous__ (~anonymous@gateway/tor-sasl/anonymous) (Remote host closed the connection)
[15:52:02] *** Joins: anonymous__ (~anonymous@gateway/tor-sasl/anonymous)
[15:52:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:52:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:53:22] *** Joins: Payam (~Payam@138.106.57.132)
[15:53:59] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 250 seconds)
[15:55:35] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[15:55:46] *** Quits: NeoCore (~neocore@37.120.204.222) (Quit: Leaving)
[15:55:52] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[15:56:35] *** Joins: ammarsalmi (~ammarsalm@154.121.67.216)
[15:58:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:58:30] *** Quits: jemark (jemark@user/jemark) (Ping timeout: 260 seconds)
[15:58:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:59:26] *** Joins: jemark (jemark@user/jemark)
[15:59:26] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[15:59:53] *** Joins: Atque (~Atque@user/atque)
[16:00:48] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[16:00:52] *** Quits: mcpac82 (~textual@212.25.0.228) (Quit: mcpac82)
[16:01:11] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 265 seconds)
[16:01:15] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 268 seconds)
[16:01:16] *** ayusta is now known as ayustae
[16:01:30] *** Joins: mcpac82 (~textual@212.25.0.228)
[16:01:48] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:04:04] *** Joins: causaui1 (~causasui@192.241.228.169)
[16:04:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[16:04:23] *** anonymous__ is now known as anonymous
[16:05:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:06:07] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[16:08:47] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:08:54] *** Quits: luischi (~luigi@80.30.201.209) (Quit: WeeChat 3.3)
[16:08:56] *** Joins: ravan (~ravan@user/ravan)
[16:09:01] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[16:09:53] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:3e3a:2011:b785:a7e6:b558) (Quit: Client closed)
[16:10:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[16:10:27] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[16:10:28] *** Parts: arseru (uid515527@user/arseru) ()
[16:10:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:11:11] *** Joins: bitplane (~bitplane@2a00:23a8:826:a800:582a:59d8:bec8:df99)
[16:11:26] *** Joins: kolcon (~kolcon@v.kolouch.org)
[16:13:30] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 260 seconds)
[16:13:40] *** Quits: ammarsalmi (~ammarsalm@154.121.67.216) (Remote host closed the connection)
[16:14:41] *** Joins: dawg (~dirtydawg@triton.blinkenshell.org)
[16:15:03] *** dcaro_lunch is now known as dcaro
[16:16:09] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[16:16:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[16:16:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:17:19] *** Joins: shad (~shad@user/shad)
[16:17:31] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:3e3a:2011:b785:a7e6:b558)
[16:18:51] *** Joins: xensie (~xensie@88-115-236-81.elisa-laajakaista.fi)
[16:18:57] *** Joins: pycurious (~Adium@user/pycurious)
[16:19:15] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[16:19:33] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 250 seconds)
[16:19:34] *** Quits: LuKaRo_ (~LuKaRo@p57b1560c.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[16:20:16] *** Joins: rindolf (~shlomif@87.68.242.74.adsl.012.net.il)
[16:20:25] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:23:25] *** Joins: LuKaRo (~LuKaRo@p4fc32d6b.dip0.t-ipconnect.de)
[16:24:42] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[16:27:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[16:27:47] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 250 seconds)
[16:28:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:30:41] <dodocrypto> hi guys
[16:30:42] <dodocrypto> https://pastebin.com/jZuudhcH
[16:30:47] <dodocrypto> is there away to do this
[16:30:53] <dodocrypto> using try: except:
[16:31:27] *** Quits: mcpac82 (~textual@212.25.0.228) (Read error: Connection reset by peer)
[16:33:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[16:33:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:35:19] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[16:35:34] *** Joins: varaindemian (uid73404@ilkley.irccloud.com)
[16:36:30] <varaindemian> how can I check if there is something after `abc` in
[16:36:54] <varaindemian> in `string = abc\sdsd\sds`?
[16:37:21] <Yhg1s> varaindemian: s.endswith('abc')
[16:37:52] <dv^_^> if string[3:]: ...?
[16:38:02] <varaindemian> Yhg1s: you mean it doesn't end with? :D
[16:38:06] <Yhg1s> dodocrypto: never use 'except:'. You want to check len(sys.argv) instead. Or, use something like argparse or click to process sys.argv.
[16:38:15] *** Quits: onichomp (~onichomp@2806:264:4404:8008:c491:d61d:c06:de94) (Read error: Connection reset by peer)
[16:38:19] <Yhg1s> varaindemian: you can use 'not' with it, sure.
[16:38:22] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:38:47] <dodocrypto> yhgis
[16:39:08] <dodocrypto> i just want to check if i can open file which argv[1] return good i can open
[16:39:10] *** Joins: causaui1 (~causasui@192.241.228.169)
[16:39:15] <dodocrypto> if i can't break and print out usage
[16:39:21] <dodocrypto> can try be use that way ?
[16:39:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[16:39:29] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[16:39:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:39:40] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:40:01] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:40:28] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[16:40:44] <Yhg1s> dodocrypto: yes, catch the exceptions you want to handle. Like FileNotFoundError or PermissionDeniedError.
[16:40:53] <Yhg1s> Or, you know, just let the exception get raised.
[16:41:14] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[16:41:21] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[16:41:41] *** Joins: metaace (~metaace@user/metaace)
[16:42:04] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:42:06] *** Joins: alzgh (~alzgh@user/alzgh)
[16:42:31] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:42:34] <dodocrypto> ah it can
[16:42:38] <dodocrypto> thank you
[16:42:50] <iflema> varaindemian: maybe check its length first, what if the big string endswith abc
[16:43:03] <dodocrypto> should i put FileNotFoundError ?
[16:43:09] <dodocrypto> or just except FileNotFoundError ?
[16:43:21] <dodocrypto> or just except: than print(usage)?
[16:43:30] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[16:43:54] *** Joins: georgios (~georgios@user/georgios)
[16:43:58] <Payam> Hi, Where can I find python programming tests?
[16:44:18] <Yhg1s> dodocrypto: never 'except:', yes. Always catch specific exception types.
[16:44:32] <dodocrypto> hmmm
[16:44:34] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 256 seconds)
[16:44:39] <dodocrypto> so except FileNotFoundError ?
[16:44:42] *** Joins: edocod (~edocod@user/edocod)
[16:44:50] <Yhg1s> dodocrypto: if that's the exception you want to handle, yes.
[16:44:51] <dodocrypto> let me check document
[16:44:54] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Read error: No route to host)
[16:45:05] <Yhg1s> iflema: I'm not sure how you think checking the length would help.
[16:45:35] <iflema> it should be the same as abc
[16:45:53] <Yhg1s> iflema: I don't understand, sorry.
[16:45:59] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[16:45:59] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[16:46:00] <iflema> length
[16:46:04] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[16:46:17] *** Joins: Enitin (~Enitin@82.102.22.86)
[16:46:24] <Yhg1s> iflema: why should the length be the same? Also, why does it matter to check that beforehand?
[16:46:28] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[16:46:56] <iflema> the string might start with, have some stuff in the mddle and end with abc
[16:47:34] <dodocrypto> i can't find exception FileNotFoundError
[16:47:36] <dodocrypto> :(
[16:47:42] <Yhg1s> iflema: I'm not sure how that's relevant, sorry. If you want to check if the string ends with a particular substring, str.endswith is the simple thing to use. It won't be confused by the substring appearing multiple times.
[16:47:47] <Yhg1s> dodocrypto: where are you looking?
[16:48:00] *** Joins: legola (~legola@46.235.101.181)
[16:48:40] <iflema> ok maybe it should be the same as abc
[16:48:56] *** Joins: drogas (~drogas@jump2.jet.uk)
[16:49:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[16:50:00] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[16:50:22] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[16:50:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:51:36] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:51:42] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:51:48] <rindolf> Payam: hi! https://www.hackerrank.com/ ?
[16:52:23] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[16:53:04] <dodocrypto>  except FileNotFoundError as error:
[16:53:05] <dodocrypto>             print(f"{error}")
[16:53:12] <dodocrypto> Yhg1s like this
[16:53:17] <dodocrypto> it didn't print out anything
[16:53:19] <dodocrypto> :(
[16:53:49] <hexnewbie> dodocrypto: The code executed successfully, then?
[16:53:58] <dodocrypto> not really
[16:54:02] <dodocrypto> i try it
[16:54:13] <dodocrypto> with 2 input both is not found
[16:54:17] *** Parts: Nspace (~Nspace@user/nspace) ()
[16:54:22] <dodocrypto> oh i am idiot
[16:54:25] <dodocrypto> sorry :(
[16:54:31] <dodocrypto> i forgot to call main()
[16:54:32] <dodocrypto> zzzzzzzzz
[16:55:38] <dodocrypto> is there away  except FileNotFoundError:
[16:55:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[16:55:51] <dodocrypto> to just name  except FileNotFoundError: not  except FileNotFoundError as error: ?
[16:55:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:56:16] <hexnewbie> dodocrypto: If you aren't going to be using the exception value, you don't have to assign it to a variable with ‘as’
[16:56:19] <Yhg1s> dodocrypto: either will work. The latter assigns the exception to 'error', so you can print information from it.
[16:56:40] <dodocrypto> oh so when i need to print
[16:56:45] <dodocrypto> i need as yeah ?
[16:56:50] <dodocrypto> hmm okay thank you
[16:58:00] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[16:59:13] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 268 seconds)
[16:59:56] *** Joins: rookie101 (~rookie@165.232.121.13)
[17:01:27] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:01:33] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[17:01:35] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 250 seconds)
[17:01:37] *** ayusta is now known as ayustae
[17:03:58] *** Joins: noord (~noord@user/noord)
[17:04:14] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:04:58] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:05:01] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[17:05:08] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:05:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[17:06:17] <dodocrypto> when we do try:
[17:06:39] <dodocrypto> does it close the file automatically if it is succeed
[17:06:49] <dodocrypto> or should i use with open as f: ?
[17:06:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:06:59] *** Joins: Pickchea (~private@user/pickchea)
[17:07:49] <Yhg1s> You should use 'with open() as f:', yes. try/except catches exceptions. It doesn't do anything you don't tell it to do.
[17:07:52] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:08:17] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e) (Ping timeout: 250 seconds)
[17:08:38] <dodocrypto> hmm okay
[17:08:53] <dodocrypto> so Yhg1s try mean just try and exit right ?
[17:09:04] <dodocrypto> like try f = 1
[17:09:18] <dodocrypto> will it assign f=1 permanently for us ?
[17:09:22] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[17:09:25] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:09:29] <dodocrypto> after we exit try block ?
[17:09:38] *** Joins: ham5urg (~ham5urg@2a00:20:7047:214e:3b77:c1ab:76b0:2b5d)
[17:10:14] <gloomy> Hey, I have an arbitrary distribution of data (like frequency/value for a range of values). does anyone know if one of the science libraries has something that allows me to generate more data which follows the same distribution as the data I already have?
[17:10:21] <ham5urg> Is there a way to ignore upper/lowercase with pathlib? files = list(pathlib.Path(PATH).glob('*.jpg'))?
[17:10:23] <bjs> dodocrypto: did you try and see? :)
[17:10:30] *** Quits: poiqwepoiqwe (uid525840@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:10:39] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[17:10:43] <gloomy> Not really sure what to search for, found a few old blog posts on how to do it manually but I'm sure something like this must have been implemented as a generic function?
[17:10:43] <bjs> dodocrypto: by ignore do you mean pretend as if they were all lowercase?
[17:10:45] <bjs> oops
[17:10:47] <bjs> ham5urg: by ignore do you mean pretend as if they were all lowercase?
[17:10:56] <dodocrypto> hang on let me check
[17:11:59] *** Joins: hzm74 (~hzm74@217-121-154-127.cable.dynamic.v4.ziggo.nl)
[17:12:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[17:12:31] <ham5urg> bjs, I would prefer to take both cases (upper/lower) as equal and store the paths into a list. E.g.: files = list(pathlib.Path(PATH).glob('*.jpg|*.JPG'))
[17:12:34] *** Joins: Ergo^ (~ergo@91.238.59.144)
[17:12:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:12:44] <hexnewbie> ham5urg: glob('*.[Jj][Pp][Gg]')?
[17:12:53] <ham5urg> Aha
[17:13:05] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:13:41] <ham5urg> Thanks
[17:14:35] <hexnewbie> ham5urg: The presence of example.jpeg files will be a bigger problem, though.
[17:15:33] <jinsun> gloomy: maybe https://scikit-learn.org/stable/modules/density.html#kernel-density
[17:15:55] <dodocrypto> https://pastebin.com/M8fKKjEX
[17:15:57] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:16:00] <dodocrypto> is there anyway we can do this
[17:16:07] <dodocrypto> with two open as f: ?
[17:16:24] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:17:03] *** Quits: magla (~gelignite@55d4d56a.access.ecotel.net) (Quit: Stay safe!)
[17:17:18] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[17:17:37] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[17:17:39] <gloomy> ham5urg: wouldn't it be easier and more readable to just do those 2 (3) cases separately? jpg = list(....glob("*.jpg")); JPG = list(...); jpeg = list(...); images = jpg + JPG + jpeg
[17:18:01] <gloomy> jinsun: thanks, looking
[17:18:10] <jinsun> dodocrypto: indent the second line, and after the with you need a statement, if you want to do nothng then put `pass`
[17:18:22] *** Joins: Zephyrus (~Zephyrus@user/zephyrus)
[17:18:24] <dodocrypto> pass jinsun ?
[17:18:28] <dodocrypto> like saying pass
[17:18:34] <dodocrypto> i try continue but it said error
[17:18:37] <dodocrypto> thank you let me try
[17:18:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Quit: Reconnecting)
[17:18:44] <Dev0n> hey, I'm seeing a lot of core.<number> files generated on my python flask app, any idea where these could be coming from?
[17:18:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:19:15] <dodocrypto> thank you it work
[17:19:17] <dodocrypto> finally
[17:19:40] *** Joins: causaui1 (~causasui@192.241.228.169)
[17:20:47] *** Joins: tobybl (~tobybl@213.31.134.235)
[17:21:18] <hexnewbie> Dev0n: If this is Linux, what is the value of /proc/sys/kernel/core_pattern ? core.%p perhaps?
[17:21:47] <Dev0n> hexnewbie, it's "core"
[17:21:54] <Dev0n> and yea, it's ubuntu
[17:22:28] <Dev0n> hexnewbie, ok so it's something related to crore dumps I guess? any idea why it's happening and generating files?
[17:22:33] <Dev0n> the files eventually causes the server to run out of space
[17:24:07] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[17:24:45] <hexnewbie> Dev0n: The core dumps would happen if the program experiences segmentation fault (or other major fault). That should be clearly evident (a message is printed to dmesg as well) if it were the case, and only happens if core file size is set to something >0.
[17:25:14] <hexnewbie> Dev0n: Check if those are really core dumps, and not something a module you use generates. Run 'file' on one of those
[17:26:08] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[17:26:17] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[17:26:25] *** Joins: Klinda (~superleag@user/klinda)
[17:26:28] <Dev0n> hexnewbie ahh, this is that 'file' gives me: /app/core.240: ELF 64-bit LSB core file, x86-64, version 1 (SYSV), SVR4-style, from 'uWSGI worker 2', real uid: 0, effective uid: 0, real gid: 0, effective gid: 0, execfn: '/usr/local/bin/uwsgi', platform: 'x86_64'
[17:26:30] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[17:26:55] <Dev0n> ok so I shouldn't try to set core=0 as there seems to be an underlying issue that is causing the files to be generated
[17:27:06] <hexnewbie> Dev0n: gdb /usr/local/bin/uwsgi /app/core.240 # then run bt
[17:27:35] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 250 seconds)
[17:27:35] *** ayusta is now known as ayustae
[17:27:38] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 256 seconds)
[17:27:58] *** Joins: Valeria (~Valeria@user/valeria)
[17:28:06] *** Joins: alkino (~quassel@user/alkino)
[17:28:20] <hexnewbie> If the segfault is triggered inside Python code, Python has faulthandler module that can log a traceback to a file which is potentially more useful (and *smaller*) than a core dump, though I'm not sure how uwsgi executed the Python code to tell if that's a possibility here.
[17:29:45] *** Joins: pycurious (~Adium@user/pycurious)
[17:29:46] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:30:03] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[17:30:32] <BinarySavior> what is f before a string, (EXAMPLE: f'({time.time()}\t{func.__name__}\t{total_time}\n')
[17:31:03] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[17:31:32] <Yhg1s> BinarySavior: it's an f-string. https://docs.python.org/3/tutorial/inputoutput.html#formatted-string-literals
[17:31:41] *** Joins: fikran (~fikran@user/fikran)
[17:32:09] <Dev0n> hexnewbie, ahh, I've used a standard config for the uwsgi to un python using module, with runs a main.py that starts the flask create_app code
[17:32:18] *** Joins: tobybl_ (~tobybl@213.31.134.235)
[17:33:10] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[17:33:16] <Dev0n> damn, I don't have interactive shell access to run gdb/bt on this instance, and the non-interactive command didn't work either
[17:33:38] *** Joins: pycurious (~Adium@user/pycurious)
[17:33:54] *** Joins: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[17:34:27] *** Quits: cm315 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Remote host closed the connection)
[17:34:28] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Remote host closed the connection)
[17:35:20] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[17:35:26] *** Quits: tobybl (~tobybl@213.31.134.235) (Ping timeout: 265 seconds)
[17:36:28] *** Joins: bindu (~bindu@user/bindu)
[17:36:53] *** Quits: Csm319_ (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 265 seconds)
[17:37:04] <Dev0n> hexnewbie, the weird thing, if this is caused by uwsgi crashing then any error logging I'm doing on python won't be executed right? e.g. if I have a datadog integration for example
[17:37:06] <hexnewbie> subprocess.check_output(['gdb', '/usr/local/bin/uwsgi', '/app/core.240'], input='bt\n', text=True)
[17:37:27] *** Joins: causaui1 (~causasui@192.241.228.169)
[17:37:38] <hexnewbie> Dev0n: I'm not sure
[17:37:41] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[17:38:58] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 256 seconds)
[17:41:30] <hzm74> Hello, i´m having a hard time getting my pandas dataframe correctly formatted. In excel i have a column with playernames and a colomn with dates and columns with excersize results. What i wan´t is read the excel-sheet and create a pandas dataframe with playernames as rows and the dates and results as columncells.
[17:41:53] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 250 seconds)
[17:42:00] *** Joins: jokoon2 (~eio@2a01:e0a:542:e160:91b6:97b8:3d4e:720d)
[17:42:12] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[17:42:13] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[17:42:24] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[17:42:35] <hzm74> Here is my code. First coding is my effort. I´m getting a dataframe with only rows, no columns. Below my code i have a dataframe with the results i wanna have.
[17:42:36] <hzm74> https://bpa.st/IVUA
[17:42:43] *** Joins: eio__ (~eio@2a01:e0a:542:e160:b1a5:edae:ef93:654e)
[17:43:34] *** Quits: flokuehn (~flokuehn@87.123.247.94) (Ping timeout: 260 seconds)
[17:43:38] *** Quits: grimvar (~grimvar@i5C75F60E.versanet.de) (Ping timeout: 268 seconds)
[17:44:39] *** Joins: slav0nic (slav0nic@python.su)
[17:44:48] <gloomy> hzm74: you'll have a much easier time by saving the excel as a csv and using pandas.read_csv (actually, I even think it has a read_excel so you can probably read your file directly)
[17:44:48] *** Joins: daoudr (~daoudr@77.73.244.222)
[17:44:49] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[17:45:06] *** Quits: jokoon (~eio@2a01:e0a:542:e160:516a:ffac:287b:2362) (Ping timeout: 265 seconds)
[17:45:29] *** Joins: grimvar (~grimvar@i5C75F60E.versanet.de)
[17:45:33] *** Joins: OPK (~OPK@user/opk)
[17:46:07] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[17:46:22] <hzm74> gloomy, im using pandas. And reading the file is not the problem. I´m strugling with getting the layout correctly.
[17:46:37] *** Joins: via_c7 (~orangeext@user/orangeextract)
[17:46:46] *** Parts: via_c7 (~orangeext@user/orangeextract) ()
[17:47:02] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 265 seconds)
[17:47:02] *** Quits: jokoon2 (~eio@2a01:e0a:542:e160:91b6:97b8:3d4e:720d) (Ping timeout: 265 seconds)
[17:47:25] <hzm74> Here you see the first results of printing dataframe and second results. First is what i have with my coding and second is what i wan´t:
[17:47:25] <gloomy> hzm74: yes, my point is that it's much easier to first read it into a dataframe, and then manipulate that df into the shape you want
[17:47:26] <hzm74> https://ibb.co/0pLgkqj
[17:47:54] *** Joins: nyah (~nyah@94.6.71.219)
[17:47:55] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Quit: Leaving)
[17:47:59] <hzm74> gloomy: i have i in a dataframe. But with my coding it only has rows.
[17:48:10] <hzm74> https://ibb.co/0pLgkqj
[17:48:51] <gloomy> hzm74: yes, but you're using really weird and convoluted code to build it. Just do my_dataframe = pandas.read_excel("your_file.xlsx")
[17:48:54] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[17:49:36] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:50:14] *** Joins: flokuehn (~flokuehn@87.123.247.94)
[17:50:33] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Ping timeout: 250 seconds)
[17:51:52] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 265 seconds)
[17:52:06] <hzm74> i´m using openpyxl to read the excel-data. This is because i run the code in my tablet using the app PyTo. Pyto doesn´t support the module xldr to read excel-files. So pandas.read_excel doesn´t work for me.
[17:52:40] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:53:00] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 265 seconds)
[17:53:04] <Wooble> read_excel uses openpyxl.
[17:53:38] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[17:54:13] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[17:54:30] <hzm74> Wooble: hmm, gonna look at it...
[17:55:50] <gloomy> hzm74: you have a tablet running windows and pycharm but it cannot run xldr??
[17:55:56] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:85bc:764e:7689:fb9f)
[17:55:57] *** Joins: LucaTM (~LucaTM@user/lucatm)
[17:56:26] <gloomy> (besides the fact that read_excel can use multiple backends as wooble says)
[17:56:39] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[17:57:07] <hzm74> no, i started creating the code on my tablet using Pyto. I´m now sitting behind my pc running pycharm to test the code.
[17:57:11] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 265 seconds)
[17:57:11] *** ayusta is now known as ayustae
[17:57:34] <Wooble> (xlrd can't read .xlsx files anyway, but this is all tangental to the actual problem...)
[17:58:01] <gloomy> you can just add `engine="openpyx"` to read_excel and it'll use openpyxl.
[17:58:23] <gloomy> openpyxl*
[17:59:05] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[17:59:26] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:01:05] <Wooble> hzm74: anyway, it's unclear where the datum and dribbel values are coming from in your desired df; if they're in your original spreadsheet you're not doing anything there to try to get them out of it...
[18:01:09] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Read error: Connection reset by peer)
[18:01:45] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[18:02:10] <Wooble> (also unclear why you're making a dict with player names as keys when you show below you want them in a list)
[18:02:23] <hzm74> Wooble: i was first trying to get the format of the dataframe correctly. So the values of the keys are still ¨None¨.
[18:02:30] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:02:59] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 265 seconds)
[18:03:31] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[18:03:47] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[18:04:20] <Wooble> hzm74: maybe something like data = {'spelers': players} instead of your line 18?  (although if the data in your spreadsheet is already shaped like the df you want to end up with, read_excel will just do the right thing.)
[18:04:29] *** Joins: bindu (~bindu@user/bindu)
[18:04:55] <ham5urg> Does an elegant oneliner exists to create a list of all files with pathlib. Something in a way like pathlib.Path(PATH).glob("*").is_file()
[18:05:29] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com)
[18:05:35] *** Joins: causaui1 (~causasui@192.241.228.169)
[18:06:54] *** Quits: anonymous (~anonymous@gateway/tor-sasl/anonymous) (Ping timeout: 276 seconds)
[18:06:57] *** Joins: mimmy (~mimmy@72.142.88.18)
[18:07:34] <hzm74> Wooble: on my pc _read_excel works like a charm! I´m afraid it can not be run on the tablet using Pyto.
[18:07:36] <marduk> dare you put "elegant" and "oneliner" in the same thought?!
[18:07:56] <grym> (p for p in Path(root).glob(**/*) if p.is_file())
[18:07:59] <hexnewbie> ham5urg: There isn't an advantage to using an outliner, but if you want to avoid appending to a list, you can use a list comprehension
[18:08:20] <grym> er those asterisks are in a string though
[18:08:50] <hexnewbie> ham5urg: If an iterator/generator is wanted, I find a multi-line loop with yield, more readable and without disadvantages, though
[18:08:55] <Wooble> hzm74: but openpyxl works on the tablet? It should be doing literally the same thing. :/
[18:08:58] *** Joins: ravan_ (~ravan@user/ravan)
[18:09:16] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 245 seconds)
[18:09:31] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[18:10:09] *** Quits: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl) (Ping timeout: 268 seconds)
[18:11:34] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 260 seconds)
[18:11:39] <hzm74> Wooble: just installed xlrd on the tablet. Now i can use read_excel. Only now it gives error: xlsx file not supported. So i think i have to save the excel file as .xls
[18:11:39] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[18:11:59] *** Quits: causaui1 (~causasui@192.241.228.169) (Ping timeout: 268 seconds)
[18:12:52] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[18:13:13] <Wooble> hzm74: if you have a .xlsx file and openpyxl is installed, pandas should use openpyxl.
[18:13:48] <Wooble> (in fact, if you have a .xlsx file and openpyxl isn't installed, pandas should just tell you to install openpyxl.)
[18:14:29] <deltab> "xlrd is a library for reading data and formatting information from Excel files in the historical .xls format. This library will no longer read anything other than .xls files. For alternatives that read newer file formats, please see [110]http://www.python-excel.org/."
[18:14:40] *** Quits: daoudr (~daoudr@77.73.244.222) (Remote host closed the connection)
[18:14:51] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[18:15:00] *** Joins: daoudr (~daoudr@77.73.244.222)
[18:15:15] <rapha> hi all
[18:15:19] *** Joins: cow_2001 (~un@user/cow-2001/x-5712099)
[18:15:32] <rapha> what's the importlib.import_module() equivalent to "import foobar AS blah"?
[18:17:21] <deltab> rapha: I imagine it's  blah = importlib.import_module('foobar')
[18:17:40] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-7c30-d6d4-cc96-be8a.res6.spectrum.com)
[18:18:18] *** Joins: causaui1 (~causasui@192.241.228.169)
[18:18:59] *** Joins: QuantumCurious15 (~adarsh@122.179.242.35)
[18:19:51] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:19:57] *** Joins: pycurious (~Adium@user/pycurious)
[18:20:08] *** Quits: xensie (~xensie@88-115-236-81.elisa-laajakaista.fi) (Quit: Textual IRC Client: www.textualapp.com)
[18:20:47] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[18:21:12] *** Quits: QuantumCurious15 (~adarsh@122.179.242.35) (Client Quit)
[18:21:14] *** Quits: delvian (~delvian@41.13.200.201) (Ping timeout: 268 seconds)
[18:21:34] <rapha> aaaah
[18:21:40] <rapha> okay that makes a lot of sense
[18:21:50] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 265 seconds)
[18:21:59] *** Joins: delvian (~delvian@41.13.200.201)
[18:22:11] <cow_2001> https://bpa.st/PV3A
[18:22:27] <cow_2001> closures are funky. what gives?
[18:22:33] *** Joins: Atque (~Atque@user/atque)
[18:23:01] <hexnewbie> cow_2001: ‘nonlocal an_int’ inside g
[18:23:11] <cow_2001> oooooh thanks, hexnewbie!
[18:23:16] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:23:43] <cow_2001> i was looking at global, globals(), and locals()
[18:23:44] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[18:24:00] <bjs> cow_2001: without nonlocal/global the variable is automatically considered local
[18:24:12] <Wooble> cow_2001: and for your first example, you just can't rebind the name a_dict non-locally; it's fine to reference it and mutate it.
[18:24:17] <bjs> and so `some_unassigned_local += 1` fails :)
[18:24:54] <Wooble> (for values of "fine" where you still have nonlocal mutable data, anyway :) )
[18:24:57] <cow_2001> explicit is better than implicit
[18:25:14] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[18:25:45] <hzm74> Wooble: somehow on the tablet running Pyto pandas.read_excel is using xlrd to read the excel. Anyway, saved the file as .xls and now it works on my tablet.
[18:25:52] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[18:26:11] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 265 seconds)
[18:26:22] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[18:26:51] <Wooble> hzm74: engine='openpyxl' might have fixed that, but sounds like an out of date version of pandas, maybe.
[18:27:28] <Wooble> but if converting the file to a ridiculously old format fixes the problem, I guess that's ok too :)
[18:28:20] <cow_2001> can't rebind nonlocally. integers are rebound whenever they are changed, right?
[18:28:43] <cow_2001> each int value is its own address
[18:28:44] <bjs> cow_2001: i'm not sure what integers have to do with it.  the = operator "rebinds" the name
[18:28:56] <bjs> to the object
[18:29:09] <cow_2001> oh!
[18:29:10] *** Joins: mimmy (~mimmy@72.142.88.18)
[18:29:11] <cow_2001> ooooh!
[18:30:11] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[18:32:06] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:32:13] <Wooble> but yes, it's more obvious when the values are immutable since there's only one way to mess with them. :)
[18:32:40] *** Parts: dodocrypto (0dev@bsdforall.org) (Leaving)
[18:33:04] *** Joins: onichomp (~onichomp@2806:264:4404:8008:f098:eaa0:57b7:948)
[18:33:37] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Client Quit)
[18:33:53] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:3e3a:2011:b785:a7e6:b558) (Quit: Client closed)
[18:36:03] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[18:36:40] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[18:36:46] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 260 seconds)
[18:37:21] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[18:37:24] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[18:38:16] *** Joins: anonymous (~anonymous@gateway/tor-sasl/anonymous)
[18:39:43] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:43:35] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[18:43:51] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[18:46:48] *** Joins: alexprengere (~alexpreng@163.116.174.63)
[18:48:45] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:410b:731a:6592:864d)
[18:48:54] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[18:49:36] *** Quits: emerent (~quassel@p200300cd574309a3ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[18:49:52] *** Joins: stealth[] (~stealth]@2001:9e8:36fb:7f00:8d30:acae:5df0:7de8)
[18:50:12] *** Joins: emerent (~quassel@p200300cd57430928ba27ebfffed28a59.dip0.t-ipconnect.de)
[18:51:07] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-204-12.dynamic.dial.as9105.com) (Remote host closed the connection)
[18:55:20] *** Joins: ericoc (sid179921@uxbridge.irccloud.com)
[18:55:32] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:56:38] *** Quits: fivegruel (~fivegruel@HSI-KBW-109-192-195-188.hsi6.kabel-badenwuerttemberg.de) (Ping timeout: 265 seconds)
[18:58:36] *** Quits: tobybl_ (~tobybl@213.31.134.235) (Remote host closed the connection)
[18:59:22] *** Joins: sarantos (~sarantos@2a02:587:3431:f3d7:7990:f181:6ff:9756)
[19:00:04] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[19:00:21] <sarantos> is there a way to keep original format of attributes inside xml tags with elementtree? In particular preserve newlines
[19:04:46] *** Quits: zepolen (~zepolen@ppp-94-66-223-212.home.otenet.gr) (Ping timeout: 260 seconds)
[19:05:28] *** Joins: teut (~teut@182.64.62.109)
[19:06:16] *** Joins: zepolen (~zepolen@ppp-94-66-223-67.home.otenet.gr)
[19:08:25] <schemanic[m]> How do I get argparse to choose from a dictionary and store that value?
[19:08:47] *** Joins: orbatos (~orbatos@user/orbatos)
[19:08:54] <schemanic[m]> I'm trying action='store_const', const=mydict['???']
[19:09:12] <schemanic[m]> I'm struggling with how to refer to the value passed into the argument before parse_args() has been called
[19:10:09] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:10:15] <deltab> is it a constant?
[19:11:36] *** Joins: sinbad (~sinbad@user/sinbad)
[19:11:37] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 265 seconds)
[19:11:42] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:11:51] *** Joins: xkuru (~xkuru@user/xkuru)
[19:12:06] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[19:13:45] <rapha> hmm
[19:14:23] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Client Quit)
[19:14:29] <rapha> is there a well-known algorithm with a python implementation for finding the inflection points of a function described by a set of points (a list and its index)?
[19:14:32] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[19:14:47] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[19:15:17] <MacGyver> Sounds like something numpy or sage might have.
[19:15:25] <rapha> my data are _very_ clear, there's not a lot of ambiguity in them, but they do vary ... example: https://gist.github.com/sixtyfive/d8cc9cf25a6dc09065bb5b77f0ed84f4
[19:15:41] * rapha google's for numpy and inflection poiint
[19:15:59] <Feuermagier> how do I grab the last x elements of a list?
[19:16:15] <sco1> list[-x]
[19:16:25] <sco1> oops
[19:16:35] <Feuermagier> sco1, i mean all starting from -x onwards
[19:16:45] <sco1> -x:
[19:16:57] <sco1> Can't type today
[19:17:07] <Feuermagier> ah
[19:17:07] <MacGyver> So to clarify, list[-x:]
[19:17:13] <Feuermagier> thx
[19:17:20] *** Quits: anonymous (~anonymous@gateway/tor-sasl/anonymous) (Quit: see you later)
[19:17:28] *** Joins: magla (~gelignite@55d4d56a.access.ecotel.net)
[19:18:01] *** Quits: ubert (~Thunderbi@p548c9fcb.dip0.t-ipconnect.de) (Quit: ubert)
[19:18:41] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:19:26] <gloomy> rapha: Pretty sure scipy has it, I'd look at peak detection and see in the "related functions"
[19:20:22] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:21:03] *** Joins: bindu (~bindu@user/bindu)
[19:22:06] <rapha> ah that's a nice strategy
[19:22:25] <rapha> oh ... what is a "prominence"?
[19:22:27] <gloomy> (or, failing that, somehow compute the derivative numerically and then use peak detection on the derivative? )
[19:22:30] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 260 seconds)
[19:22:42] <rapha> ooooh highschool math memories!
[19:24:06] *** Joins: Klinda (~superleag@user/klinda)
[19:24:39] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[19:24:47] <rapha> gloomy: btw, what is the-absolutely-fastest-way (1-liner?) of seeing something like the data i posted as an x-y-graph? i know i can do this with matplotlib but not as a rememberable one-liner.
[19:24:59] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[19:25:33] <gloomy> plt.plot(x=range(len(data)), y= data)?
[19:25:38] *** Quits: eio__ (~eio@2a01:e0a:542:e160:b1a5:edae:ef93:654e) (Ping timeout: 265 seconds)
[19:25:45] <rapha> btw there's an examle here where they do it exactly like that: take derivative first: https://stackoverflow.com/a/62538912/5354137
[19:25:53] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[19:26:12] *** Joins: Valeria (~Valeria@user/valeria)
[19:26:23] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[19:26:41] *** Joins: mimmy (~mimmy@72.142.88.18)
[19:27:31] *** Joins: subopt (~subopt@2603-8081-2302-459a-3001-25c7-b27b-cad7.res6.spectrum.com)
[19:29:27] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[19:30:21] <rapha> that didn't work ... the shortest i was able to come up with so far is `import matplotlib.pyplot as plt;plt.scatter(range(len(data)), data);plt.show()`
[19:31:27] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Quit: ZNC - http://znc.in)
[19:32:06] *** Joins: Coldblackice (~c@user/coldblackice)
[19:32:25] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[19:33:11] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[19:33:47] <gloomy> yup sorry, scatter not plot
[19:33:56] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Client Quit)
[19:35:18] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[19:35:33] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[19:35:42] *** Quits: Coldblackice_ (~c@user/coldblackice) (Ping timeout: 256 seconds)
[19:36:33] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:38:45] *** Joins: zeden (~zeden@user/zeden)
[19:39:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[19:39:15] <rapha> gloomy: look what a beautifully clear function it is: https://i.imgur.com/TIC1YSV.png ... it can't be very difficult to find the three lowest valleys here. i thought inflection points would be the easiest/safest route to go, but perhaps not.
[19:39:29] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[19:39:39] <rapha> or, well, the first and the last. the one in the middle doesn't matter much.
[19:39:39] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 265 seconds)
[19:39:57] <gloomy> Why do you want inflection points if you're interested in minima?
[19:40:27] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Remote host closed the connection)
[19:40:52] <gloomy> I mean depending on your problem you could literally just so np.argmin?
[19:40:55] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[19:41:02] *** Joins: fikran (~fikran@user/fikran)
[19:41:20] *** Joins: nomic (~nomic@185.192.69.224)
[19:41:34] <gloomy> and if that doesn't cut it, then google for peak detection, not inflection points
[19:42:05] <DnzAtWrk> can you say: def f():\n return open(...)
[19:42:14] <DnzAtWrk> and say with f as a:
[19:42:49] <phy1729> DnzAtWrk: you're probably looking for https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager
[19:42:52] <Evolver> Which are the best packages for detecting and applying type annotations on a preexisting untyped code-base (python v3.8)?
[19:43:34] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[19:43:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[19:44:15] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[19:45:27] <rapha> gloomy: because with the stuff i've been trying so far, i was always getting the local minima and not the most minimal of minima.
[19:45:46] <rapha> hmm with inflection points the problem would be the same
[19:45:50] <rapha> maybe i need to smooth more
[19:45:53] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:46:16] <sudomann> how does pip behave if I install with both -r and --constraints?
[19:47:12] <sudomann> I'm thinking it might be a god idea to have our devs manage a requirements.txt file by hand, while the constraints file is created using pip freeze
[19:47:34] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 268 seconds)
[19:47:57] <schemanic[m]> Hey, I'm using logging with just the basic config. I'm not getting any log messages from my main() function
[19:48:35] <grym> sudomann: so, pip-tools more or leas
[19:48:55] <Evolver> schemanic[m]: try logging a warning?
[19:49:08] <gloomy> rapha it really depends on your data, if you're just looking for the global minimum then np.argmin is really all you need. in the data you show peak detection would probably be thrown off by the fact that your big peaks are actually flat on the top (well, bottom), so yes, smoothing would likely help
[19:49:41] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[19:49:43] <sudomann> grym: hmm I'm not an active oython dev, I didnt know about that. Looks neat
[19:49:46] <schemanic[m]> Evolver:  thats my point. messages from the top level work, and I've set the level to INFO, but messages from inside def main(): don't work
[19:51:04] <Evolver> schemanic[m]: Don't know. I use dict config as in https://stackoverflow.com/a/7507842/ and it works fine.
[19:52:16] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[19:52:18] <schemanic[m]> No it was me. I called main incorrectly
[19:54:16] *** Joins: kostkon_ (~androirc@2a02:1388:8b:e9a8:dd9:6fd1:65a0:83c9)
[19:54:39] *** Joins: guenhael1 (~Thunderbi@193.52.208.30)
[19:54:41] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[19:54:51] *** Joins: chele (~chele@user/chele)
[19:55:47] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 250 seconds)
[19:55:47] *** guenhael1 is now known as guenhael
[19:56:02] *** Quits: asd (~noname@user/asd) (Ping timeout: 240 seconds)
[19:58:01] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[19:58:23] <rapha> gloomy: okay, that gaussian smoothing does seem to be very helpful
[19:58:51] <rapha> also i confused the 2nd and 1st derivative
[19:59:00] <rapha> 2nd is totally stupid here
[20:00:08] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:01:04] <rapha> gloomy: but how do you get _multiple_ minima out of .argmin()?
[20:01:53] *** Quits: kostkon_ (~androirc@2a02:1388:8b:e9a8:dd9:6fd1:65a0:83c9) (Ping timeout: 265 seconds)
[20:02:15] <gloomy> rapha:  you can't really. It's only if you want *the* global minimum
[20:02:18] <ham5urg> Has anyone extracted the date from images exif-data? I'm using exofread and it looks to me that many different tags are used for date. E.g. "Image DateTime" or "GPS GPSDate"
[20:02:30] <ham5urg> exifread*
[20:02:53] <gloomy> but once your data is smoothed, peak detection should work quite fine? Then it's just a matter of sorting your peaks by the minimum value (and only keep the n highest peaks)
[20:03:11] <Atque> Umm... I've got a silly question... does python3.9'ish have call by name.
[20:03:30] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:03:47] <rapha> gloomy: okay, so then no. they're similar but not the same.
[20:03:48] <supakeen> ham5urg: Sadly there are many fields and everyone sets something else :)
[20:03:50] <CodeMouse92> Atque: call by name? Meaning what?
[20:04:09] <supakeen> ham5urg: Generally I think DateTime/DateTimeOriginal is supposed to be there?
[20:04:17] <CodeMouse92> All callables can be bound to a name, like anything else (functions are first class citizens) and get called that way, but I somehow doubt that's what you're after. :)
[20:04:54] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[20:05:07] <Atque> CodeMouse92: Umm... meaning by the expression provided to a method or function is not evaluated prior to the function call or something like that.
[20:05:18] <Wooble> Atque: no.
[20:05:26] <CodeMouse92> Atque: Everything is evaluated at declaration.
[20:05:29] <Atque> Wooble: Aww... that's no good.
[20:05:35] *** Quits: rsx (~dummy@ppp-188-174-151-168.dynamic.mnet-online.de) (Quit: rsx)
[20:06:11] *** Joins: ede (~ede@user/ede)
[20:06:13] <sco1> It might be helpful to describe more about what you're trying to accomplish
[20:06:41] <Wooble> porting scheme code to python? :)
[20:07:01] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[20:07:14] *** Joins: Valeria (~Valeria@user/valeria)
[20:07:34] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:07:43] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[20:07:54] *** Quits: sarantos (~sarantos@2a02:587:3431:f3d7:7990:f181:6ff:9756) (Quit: Client closed)
[20:08:12] <CodeMouse92> Atque: What are you trying to accomplish?
[20:08:15] *** Joins: ali1234 (~al@user/ali1234)
[20:08:46] *** Quits: onichomp (~onichomp@2806:264:4404:8008:f098:eaa0:57b7:948) (Read error: Connection reset by peer)
[20:09:26] *** Joins: onichomp (~onichomp@2806:264:4404:8008:f098:eaa0:57b7:948)
[20:09:30] <Atque> CodeMouse92: Trying to find out if python supported call by name.
[20:09:46] <CodeMouse92> Atque: I know, but what are you wanting to use it for?
[20:09:53] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[20:09:53] <CodeMouse92> What's your situation/use case?
[20:09:54] <Atque> I didn't think it did, but was just curious and wanted to confirm.
[20:10:17] <Atque> Some recursive algorithms don't half in call by value.
[20:10:17] <CodeMouse92> Ah, okay. I only ask because, if this was related to a live project, there may be some other way to accomplish what you want to do.
[20:10:22] <Atque> * don't halt
[20:10:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:10:50] *** Quits: daoudr (~daoudr@77.73.244.222) (Ping timeout: 256 seconds)
[20:10:57] *** Quits: edocod (~edocod@user/edocod) (Ping timeout: 250 seconds)
[20:10:59] <Wooble> in case you're wondering python also doesn't do tail-call optimization ;)
[20:11:25] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:12:06] <Atque> Wooble: Yup, I was wondering that.
[20:12:25] <rapha> gloomy: why is scipy's find_peaks always giving the same result, no matter what i set the height parameter to?
[20:12:38] *** Joins: guenhael1 (~Thunderbi@193.52.208.97)
[20:13:29] *** Joins: daoudr (~daoudr@77.73.244.222)
[20:13:52] *** Parts: sinbad (~sinbad@user/sinbad) ()
[20:13:52] <Wooble> Atque: it's pretty common to try to do everything iteratively in python unless the recursive version is *much* nicer.
[20:13:58] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[20:14:01] <rapha> oh, wait
[20:14:10] <rapha> gloomy: i think i've got it!!! find_peaks(smooth, height=smooth.max()/3*2)
[20:14:28] <rapha> where smooth = gaussian_filter1d(data, 20)
[20:14:38] *** Joins: dohtem (uid524096@user/dohtem)
[20:14:56] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 265 seconds)
[20:14:56] *** Quits: guenhael (~Thunderbi@193.52.208.30) (Ping timeout: 265 seconds)
[20:15:00] *** Joins: ravan__ (~ravan@user/ravan)
[20:16:56] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:17:01] *** Quits: guenhael1 (~Thunderbi@193.52.208.97) (Ping timeout: 250 seconds)
[20:17:47] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 268 seconds)
[20:19:06] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:20:01] *** Joins: pycurious (~Adium@user/pycurious)
[20:21:07] *** Quits: pycurious (~Adium@user/pycurious) (Read error: Connection reset by peer)
[20:21:18] *** Joins: pycurious (~Adium@user/pycurious)
[20:23:38] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 260 seconds)
[20:23:41] *** Joins: alkino_ (~quassel@user/alkino)
[20:24:04] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[20:26:32] *** Quits: daoudr (~daoudr@77.73.244.222) (Ping timeout: 265 seconds)
[20:27:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:29:23] *** Joins: jsmock (~joern@xdsl-81-173-232-150.nc.de)
[20:29:58] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[20:30:05] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[20:31:22] *** Quits: ham5urg (~ham5urg@2a00:20:7047:214e:3b77:c1ab:76b0:2b5d) (Ping timeout: 265 seconds)
[20:31:46] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:31:53] *** Quits: lack (~lack@user/lack) (Read error: Connection reset by peer)
[20:32:20] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Read error: Connection reset by peer)
[20:32:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:33:06] *** Joins: gimzmoe (~gimzmoe@user/gimzmoe)
[20:33:55] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[20:33:55] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[20:33:59] *** Joins: Macuser (~Macuser@216.30.159.201)
[20:34:54] *** Joins: lack (~lack@user/lack)
[20:34:57] *** Joins: ham5urg (~ham5urg@2a00:20:7047:214e:15b1:4bd6:7841:59f4)
[20:36:02] *** Joins: Arw (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr)
[20:36:25] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[20:37:31] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[20:38:17] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:39:18] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[20:40:27] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:40:54] *** Quits: alexprengere (~alexpreng@163.116.174.63) (Ping timeout: 256 seconds)
[20:41:22] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 260 seconds)
[20:41:29] *** Quits: rvgate (~rvgate@user/rvgate) (Ping timeout: 250 seconds)
[20:42:20] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[20:42:53] *** Joins: mimmy (~mimmy@72.142.88.18)
[20:43:03] *** Quits: ham5urg (~ham5urg@2a00:20:7047:214e:15b1:4bd6:7841:59f4) (Remote host closed the connection)
[20:43:17] *** Joins: ham5urg (~ham5urg@2a00:20:7047:214e:4014:76fa:8a52:eb54)
[20:44:31] <deltab> Atque: https://www.python.org/dev/peps/pep-0563/
[20:46:07] *** Joins: petaflot_ (~root@lutolf.vserver.nimag.net)
[20:46:49] <petaflot_> hello! I amm trying to generate a file with python (from the shell) and then run vim on this file. I thought Popen would do it, but I was wrong....
[20:47:12] <bjs> petaflot_: do you mean you just did it wrong or that Popen can't do what you want?
[20:47:38] *** Joins: Valeria (~Valeria@user/valeria)
[20:47:57] <petaflot_> bjs: not sure. vim complains that no input was received.
[20:47:57] *** Joins: Coldblackice_ (~c@user/coldblackice)
[20:48:01] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[20:48:04] <bjs> petaflot_: okay, how can we help?
[20:48:29] <petaflot_> efore I spend hours searching for a unicorn, is it possible and straighforward?
[20:49:53] <bjs> petaflot_: sure
[20:49:57] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:50:56] <petaflot_> bjs: you know if this also works with gui apps? I just need python to wait until the app is closed to resume and exit
[20:51:05] <bjs> petaflot_: sure it should work with any program
[20:51:21] <bjs> petaflot_: maybe if you show the code you tried, we can help better?
[20:51:22] <petaflot_> with Popen?
[20:51:24] <bjs> yes
[20:52:04] <bjs> (although vim isn't a gui program so I'm not sure what's going on)
[20:52:09] *** Quits: Coldblackice (~c@user/coldblackice) (Ping timeout: 265 seconds)
[20:52:23] <petaflot_> bjs: http://dpaste.com/DKCJEZFZE
[20:52:51] <bjs> petaflot_: you need to wait() the Popen object (or use subprocess.run) to wait for it to finish
[20:52:59] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[20:53:00] <petaflot_> the thing with openinig a gui program was more a general question. because some people like gui editors
[20:53:21] <bjs> petaflot_: also this code is a bit weird, why are you raising SystemExit rather than calling sys.exit(...)
[20:53:24] <Wooble> petaflot_: a gui will work a lot better, because you don't have issues with stdin/out not being a tty.
[20:53:38] <bjs> petaflot_: and you can `with open(...) as f:` to open/close for you automatically.  And yeah Popen will work fine with a gui
[20:53:51] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[20:54:22] *** Joins: guenhael (~Thunderbi@2a01:e0a:163:7060:683b:f08b:8829:f03d)
[20:54:43] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[20:54:50] <petaflot_> jkl: nice thanks!
[20:55:03] <Wooble> petaflot_: by "no input was received" do you mean "Vim: Warning: Input is not from a terminal"
[20:55:04] * petaflot_ tired... should eat and sleep
[20:55:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:55:52] <petaflot_> bjs: err... raising SystemExits avoid the need to import sys.exit
[20:56:01] <bjs> petaflot_: why are you avoiding importing sys?
[20:56:01] *** Quits: ham5urg (~ham5urg@2a00:20:7047:214e:4014:76fa:8a52:eb54) (Ping timeout: 265 seconds)
[20:56:22] <petaflot_> bjs: saving keystrokes? my keyboard is wearing out fats... ;-)
[20:56:30] <petaflot_> ^fats^fast
[20:57:35] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:58:19] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[21:00:01] *** Quits: rindolf (~shlomif@87.68.242.74.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[21:01:20] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:683b:f08b:8829:f03d) (Ping timeout: 265 seconds)
[21:02:47] *** Quits: jsmock (~joern@xdsl-81-173-232-150.nc.de) (Ping timeout: 265 seconds)
[21:03:32] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[21:04:14] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 265 seconds)
[21:05:56] *** Quits: Samian (~s@user/samian) (Ping timeout: 245 seconds)
[21:07:52] *** Joins: sammie (~sammie@155.33.134.60)
[21:08:03] *** Joins: upsala (~zcb@185.213.155.252)
[21:08:51] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:09:02] *** Quits: lovelace (~Elspeth@2.24.23.175) (Quit: Konversation terminated!)
[21:09:23] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 264 seconds)
[21:09:41] *** Joins: anonymous (~anonymous@gateway/tor-sasl/anonymous)
[21:09:43] *** Joins: spiderman (~spiderman@user/spiderman)
[21:10:19] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 250 seconds)
[21:12:27] *** Quits: todda7 (~torstein@31.4.142.81) (Ping timeout: 265 seconds)
[21:13:12] *** Quits: bitplane (~bitplane@2a00:23a8:826:a800:582a:59d8:bec8:df99) (Ping timeout: 256 seconds)
[21:13:47] *** Joins: jsmock (~joern@xdsl-81-173-232-150.nc.de)
[21:14:25] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:14:46] *** Joins: AquaticBoy (AquaticBoy@2a01:7e01::f03c:92ff:fe21:238c)
[21:15:42] *** Joins: tobybl (~tobybl@213.31.134.235)
[21:20:11] *** Quits: tobybl (~tobybl@213.31.134.235) (Ping timeout: 265 seconds)
[21:20:13] *** Quits: AquaticBoy (AquaticBoy@2a01:7e01::f03c:92ff:fe21:238c) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:21:00] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[21:21:02] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:21:14] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[21:21:42] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:22:24] *** Quits: sammie (~sammie@155.33.134.60) (Quit: WeeChat 3.0.1)
[21:22:40] *** dcaro is now known as dcaro_away
[21:23:50] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[21:24:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:24:26] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[21:24:46] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[21:25:03] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 250 seconds)
[21:25:03] *** ayusta is now known as ayustae
[21:25:16] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[21:25:54] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:27:42] *** Joins: Moosadee (~Moosadee@216.185.233.28)
[21:27:58] *** Joins: mimmy (~mimmy@72.142.88.18)
[21:28:18] *** Joins: Valeria (~Valeria@user/valeria)
[21:28:26] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7)
[21:28:37] *** Joins: markvandenborre (~mark@static.88.183.119.168.clients.your-server.de)
[21:28:45] *** Joins: AquaticBoy (~AquaticBo@li1424-88.members.linode.com)
[21:30:46] *** Joins: sazawal (~sazawal@122.161.93.207)
[21:31:10] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[21:31:27] <markvandenborre> what is your favorite graph plotting library in python?
[21:31:47] <grym> markvandenborre: static or dynamic
[21:31:49] <markvandenborre> I want to visualise some fiscal choices
[21:32:04] <markvandenborre> so ideally something at least somewhat dynamic
[21:32:07] <grym> markvandenborre: and, are you using pandas already or not
[21:32:09] <mefistofeles> graph as in network graphs?
[21:32:11] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 264 seconds)
[21:32:45] <markvandenborre> mefistofeles: it's mostly about assembling first degree math functions
[21:32:54] <markvandenborre> (tax brackets and whatnot)
[21:33:10] <markvandenborre> grym: not really used pandas yet
[21:33:13] *** Joins: emf (~emf@162.218.217.186)
[21:33:22] <mefistofeles> hmm, that doesn't answer the question, but I have the feeling it's not related to network graphs
[21:33:24] <grym> markvandenborre: for making plots of numerical values, matplotlib is the foundation for basically every tool
[21:33:35] <markvandenborre> but I'm really open to tryng something new
[21:33:39] *** Parts: jsmock (~joern@xdsl-81-173-232-150.nc.de) (WeeChat 3.2)
[21:33:48] *** Joins: trashbird7 (~trashbird@user/trashbird)
[21:33:56] <markvandenborre> matplotlib does sound familiar
[21:34:01] <mefistofeles> markvandenborre: what are the common visualizations for that? If you give an example maybe we can provide a better answer
[21:34:06] <grym> markvandenborre: if you're using pandas, seaborn is a popular helper (or plotnine), but it's just mpl at the bottom
[21:34:38] <grym> and if you want click and drag on a webpage, vega/altair
[21:34:50] <mefistofeles> or plotly or bokeh :P
[21:34:52] <markvandenborre> mefistofeles: x axis, y axis, first degree (linear) equation
[21:35:02] *** Quits: trashbird (~trashbird@user/trashbird) (Ping timeout: 260 seconds)
[21:35:02] *** trashbird7 is now known as trashbird
[21:35:46] *** Joins: Samian (~s@user/samian)
[21:35:51] *** Joins: eio__ (~eio@2a01:e0a:542:e160:b1a5:edae:ef93:654e)
[21:36:08] <markvandenborre> grym: there's very few data involved, more like a model based upon about 5 figures
[21:36:17] <mefistofeles> markvandenborre: that should be pretty straightforward to do in basically any of the mentioned, you need to figure out if you want interactivity in the browser and things like that
[21:36:23] <grym> yup
[21:36:23] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 264 seconds)
[21:36:25] <mefistofeles> matplotlib is not great for that
[21:36:59] <markvandenborre> I've also played with jupyter notebooks in the past
[21:37:37] <markvandenborre> what would be your personal choice, and why?
[21:37:48] *** Joins: emf_ (~emf@2620:10d:c090:400::5:91bf)
[21:37:57] <markvandenborre> grym: mefistofeles: thx for your hints already
[21:37:57] <grym> i produce static figures most often, and typically just use matplotlib to do so
[21:37:59] *** Joins: guenhael (~Thunderbi@2a01:e0a:163:7060:683b:f08b:8829:f03d)
[21:38:11] *** Quits: emf (~emf@162.218.217.186) (Ping timeout: 264 seconds)
[21:38:17] <markvandenborre> ack
[21:38:21] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:38:29] <grym> very often, as the artifact produced by a command line tool
[21:38:44] <grym> i will occasionally use a notebook environment to design the figure, and then delete the notebook
[21:38:48] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:683b:f08b:8829:f03d) (Client Quit)
[21:39:02] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Ping timeout: 265 seconds)
[21:39:08] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[21:39:09] <grym> after copying the completed plotting function back into my main package
[21:39:31] <markvandenborre> grym: you're speaking of jupyter then?
[21:39:51] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:39:57] <grym> markvandenborre: for "notebook environment", yes
[21:40:01] <grym> i don't use them much
[21:40:11] <grym> typically i write code in pycharm or emacs
[21:40:26] <markvandenborre> grym: vim here
[21:40:54] <mefistofeles> for static figures I liked this one, for tweaking and styling without much hassle https://github.com/rgerum/pylustrator I used it in my disertation :P
[21:41:04] <mefistofeles> grym: you might find it helpful/useful
[21:41:27] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[21:41:30] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 256 seconds)
[21:41:30] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 256 seconds)
[21:42:08] <grym> mefistofeles: hah! nice
[21:42:54] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:42:59] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[21:43:10] *** Joins: guenhael1 (Thunderbir@gateway/vpn/protonvpn/guenhael)
[21:44:01] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[21:44:28] <markvandenborre> thank you very much, this should get me started
[21:44:59] *** Quits: varaindemian (uid73404@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:45:40] <markvandenborre> pandas is probably not the right choice, because tabular data
[21:45:42] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[21:45:51] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 250 seconds)
[21:45:51] *** guenhael1 is now known as guenhael
[21:46:00] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:46:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:46:54] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[21:48:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[21:48:48] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[21:49:03] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 268 seconds)
[21:50:23] *** Joins: fikran (~fikran@user/fikran)
[21:50:23] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[21:50:40] *** Joins: dfg (~dfg@user/dfg)
[21:51:42] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[21:52:05] *** Quits: eio__ (~eio@2a01:e0a:542:e160:b1a5:edae:ef93:654e) (Quit: Leaving)
[21:54:07] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[21:54:08] *** Quits: jim87 (~quassel@93.55.249.30) (Read error: Connection reset by peer)
[21:54:27] *** Joins: pycurious (~Adium@user/pycurious)
[21:54:27] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[21:54:31] *** Joins: mickey85 (~user@user/mickey)
[21:55:42] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[21:55:43] *** mickey85 is now known as mickey8
[21:58:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[21:59:19] *** Joins: george-smiley (~george_sm@user/george-smiley/x-3139219)
[21:59:26] *** Quits: george-smiley (~george_sm@user/george-smiley/x-3139219) (Remote host closed the connection)
[22:01:29] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[22:01:40] <no_gravity> Hello! Is this the shortest way to write this? https://www.online-python.com/7iQVSh8I1C
[22:02:19] <dude-x> no_gravity line 8 you need to pass (self.name)
[22:02:44] <phy1729> neither init takes args
[22:03:00] *** Joins: djapo (~archangel@user/djapo)
[22:03:11] <phy1729> The shortest way is   print('Joe')   but perhaps you had some constraints in mind :)
[22:03:22] <no_gravity> dude-x: What do you mean? It works without.
[22:03:49] <dude-x> oh you're right. don't mind me. i'm losing my mind
[22:03:56] <no_gravity> phy1729: Not sure what you mean by "neither init takes args"?
[22:04:06] <phy1729> was in response to dude-x's line
[22:04:14] <dude-x> no_gravity anyway it looks good and it's correct
[22:04:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:04:20] *** Joins: kdc (~kdc@196.211.197.159)
[22:04:38] <Wooble> for some value of "correct" where there was no reason to have a class, let alone MI :P
[22:04:45] <no_gravity> I wish there were a shorter version where B would be just this: class B(A): name = 'Joe'
[22:05:08] <phy1729> You can do that if you don't mind all instances of B sharing the same value
[22:05:14] <no_gravity> Hole F it works: https://www.online-python.com/Ln8qBgvMiV
[22:05:17] <dude-x> no_gravity let's take a step back. you have a parent class that is operating on sa
[22:05:17] <dude-x> a
[22:05:25] <phy1729> You can make it a class variable rather than an instance variable
[22:05:27] <dude-x> you have a parent class that depends on teh children
[22:05:41] *** Quits: mcglk (~mcglk@131.191.49.120) (Quit: (seeya))
[22:05:52] *** Quits: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 256 seconds)
[22:05:53] *** Joins: vakera_pingveno_ (~dan@89.45.90.225)
[22:05:55] <bjs> no_gravity: yes that's the shortest (where you define __init__ on both classes)
[22:06:17] <no_gravity> bjs: This is shorter: https://www.online-python.com/7iQVSh8I1C
[22:06:29] <bjs> no_gravity: if you did the `class B(A): name = "Joe"` that would also work but it does something different
[22:06:31] <no_gravity> bjs: Ups, wrong link
[22:06:33] <bjs> no_gravity: that's the same code?
[22:06:51] *** Quits: vakera_pingveno_ (~dan@89.45.90.225) (Client Quit)
[22:07:04] <no_gravity> bjs: https://www.online-python.com/Xh01YTSiHC
[22:07:16] <Wooble> no_gravity: print("Joe") is really starting to sound like the actual solution if that is one too :P
[22:07:38] <bjs> no_gravity: yes like I said that does something different.  In one you have a name for each instance, whereas this one you have a name on the class (that is accessible by all instances)
[22:07:45] <bjs> so in some sense all B instances "share" the same name
[22:07:47] *** Joins: vakera_pingveno (~dan@107-209-165-75.lightspeed.hstntx.sbcglobal.net)
[22:08:01] <no_gravity> Wooble: The thing I am looking at is if the base class can access the members of its ancestors.
[22:08:05] *** Joins: mimmy (~mimmy@72.142.88.18)
[22:08:16] <dude-x> no_gravity yes it can. i've done some API's like that.
[22:08:17] <no_gravity> Wooble: It works in Python, it works in PHP but not in JS.
[22:08:29] <no_gravity> bjs: Yes
[22:08:38] <bjs> no_gravity: I'm not sure what you mean,  `self` is the object and `self.name` accesses the name attribute of the object.
[22:08:46] <Wooble> no_gravity: would be hard to have inheritance if it couldn't. but you're villating the LSP here...
[22:09:00] <bjs> no_gravity: the `self` is just passed around and is the same object
[22:09:03] <no_gravity> Wooble: Exactly. That is why inheritance *is* hard in JS.
[22:09:03] *** Joins: Valeria (~Valeria@user/valeria)
[22:09:09] <no_gravity> bjs: Yes
[22:09:28] <no_gravity> bjs: To my amazement, there is no way to do this in JS.
[22:10:17] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[22:10:39] <bjs> no_gravity: well this is #python you might want to try a JS channel to get help on how to do this in JS
[22:10:45] <no_gravity> So I looked at other languages to see if JS is the only insane language in this regard. So far, it is.
[22:11:02] <no_gravity> bjs: Yeah, I talked to the guys in #javascript about it.
[22:11:25] <Wooble> I'm not sure how accurate that is, but enforcing LSP doesn't seem *too* insane.
[22:11:35] <no_gravity> Wooble: LSP?
[22:11:44] <no_gravity> Late Static Binding?
[22:11:46] <bjs> No
[22:11:52] <bjs> it doesn't matter  that much anyway, enforcing that kind of thing
[22:12:10] <Wooble> no_gravity: the liskov substitution principle
[22:12:20] <bjs> Wooble: given how broken subtyping is for MI and things it's already a "give up" scenario
[22:12:24] <bjs> :d
[22:12:38] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[22:12:48] <Wooble> in this case you can't even instatiate A at all, which seems like a problem :)
[22:14:43] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[22:15:21] <no_gravity> Wooble: It makes something like this impossible: https://www.online-python.com/GOSbjr3f0X
[22:15:59] <Omega037> morning yall
[22:16:15] <Wooble> no_gravity: someone_else = Person() # oops, a person can't exist
[22:16:37] <dude-x> no_gravity i would study the JS version of "registry pattern" when you have a parent object that knows about its children
[22:18:12] <Wooble> (certainly in JS subclasses can override stuff the superclass sets in the constructor)
[22:18:41] <no_gravity> Wooble: Not before the constructor of the superclass runs.
[22:18:50] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:20:58] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:b980:e9e:375e:2046)
[22:21:35] *** Joins: Klinda (~superleag@user/klinda)
[22:23:07] *** Quits: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[22:23:11] *** Joins: jay-m1261 (~jay-m@154.72.161.106)
[22:23:30] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 265 seconds)
[22:24:04] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[22:25:08] <Wooble> you'd think when they named the thing javascript they'd at least have stolen java's class structure instead of bolting it on decades later :)
[22:27:24] <dude-x> brendan eich called it liveScript. Sun changed it.
[22:27:35] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Quit: This computer has gone to sleep)
[22:28:18] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[22:28:29] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[22:28:45] *** Quits: jay-m1261 (~jay-m@154.72.161.106) (Ping timeout: 250 seconds)
[22:29:49] *** Joins: Amnesia (~Amnesia@user/amnesia)
[22:29:58] <Amnesia> question, is there some way to use Pipfile's with pip ?
[22:30:03] *** Quits: Moosadee (~Moosadee@216.185.233.28) (Remote host closed the connection)
[22:30:56] <Feuermagier> if I have a bytearray A and say B = A and the change A, will it impact B ?
[22:31:02] *** Joins: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net)
[22:31:02] *** Joins: BSaboia (~bsaboia@187.19.136.126)
[22:31:11] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Remote host closed the connection)
[22:31:18] <Feuermagier> (like A[0] = 0)
[22:31:28] *** Joins: pycurious (~Adium@user/pycurious)
[22:31:32] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[22:32:35] <bluss> Feuermagier: yes, it will impact B.  An assignment in Python, B = A this *always* means B refers to the same python object as A does
[22:32:57] <bluss> not a copy, not a separate object, but another reference to the same
[22:33:02] <Feuermagier> bluss, what if i create array A out of array B + array C ?
[22:33:26] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[22:33:29] <bluss> I'm not sure what that means in actual Python code, so don't know
[22:33:58] <Feuermagier> 2 bytearrays A,B: c = a + b
[22:34:18] <grym> Feuermagier: i think c's a new object in that case
[22:34:31] <kek_> hi
[22:34:52] <grym> or am i thinking about byes
[22:34:54] <grym> bytes*
[22:35:10] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[22:35:27] <kek_> I use pyCBC, some library which uses numpy in the background, to generate some data. Apparently the data is of type float. Can I somehow tell python to use double for the data generated by that library? If not, can I somehow tell pytorhc to work with float isntead of double globally?
[22:35:29] *** Joins: jay-m1261 (~jay-m@154.72.161.106)
[22:35:34] <bluss> Feuermagier: yes c is a new separate object then. For bytearrays, that's the case
[22:35:35] *** Quits: gimzmoe (~gimzmoe@user/gimzmoe) (Ping timeout: 265 seconds)
[22:35:38] <Nothing4You> if i were to build a wheel of a package with c bindings, do i need to build that with the same python version i want to build it for?
[22:35:45] <Feuermagier> thx
[22:35:53] <grym> kek_: specify the dtype you need on the array with thearray.astype()
[22:36:24] <Nothing4You> e.g. to build a wheel that can be used in py3.3 on macos arm, do i need to get py3.3 working on macos arm to build that?
[22:36:38] <grym> kek_: numpy calls all floats float<something>, so float16, float32, ...
[22:36:41] <kek_> grym, yeah but then I'm still stuck with single presicion for the initla data
[22:36:43] *** Quits: AquaticBoy (~AquaticBo@li1424-88.members.linode.com) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:37:17] <grym> kek_: i believe the default dtype is floag64
[22:37:27] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[22:37:58] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Read error: Connection reset by peer)
[22:38:12] <grym> so you get doubles by defaulty
[22:38:39] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[22:38:42] <kek_> so my data is float64, true. If I feed that to pytroch it tells me "got float, want double". that's why I though I have single presicion. Thanks, the problem seems to be somewhere else then.
[22:39:03] <grym> yeah, seems like
[22:39:15] *** Quits: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (Remote host closed the connection)
[22:39:40] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[22:40:13] *** Joins: cyphase (~cyphase@user/cyphase)
[22:40:34] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[22:41:25] *** Joins: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca)
[22:43:19] *** Joins: kororaa (~kororaa@user/kororaa)
[22:43:29] *** Quits: xcm (~xcm@user/xcm) (Remote host closed the connection)
[22:43:46] *** Joins: xcm (~xcm@user/xcm)
[22:44:00] <kororaa> what is a good method to make an animation of some pre-generated data points over time?
[22:44:27] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[22:44:47] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[22:44:48] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:44:49] <mefistofeles> kororaa: matplotlib has animate capabilities, that might do the trick, what kind of data is it? And where do you want to see the animation?
[22:44:57] <kororaa> the plot animation tutorials i can find are all based on some function, but i just have x,y coordinates of particles at different points in time
[22:45:03] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:45] <kororaa> just outputting it to some animation file or displaying in browser
[22:47:07] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:50] *** Joins: topside (~topside@ip68-226-238-34.lf.br.cox.net)
[22:48:09] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 265 seconds)
[22:48:58] *** Joins: winlundn (nick@2600:3c01::f03c:92ff:fe32:c297)
[22:49:10] *** Joins: audiobirb (~audio@user/audio)
[22:49:12] *** Joins: greedom (~greedom@x59cc9a78.dyn.telefonica.de)
[22:49:32] *** Joins: Valeria (~Valeria@user/valeria)
[22:50:08] <kororaa> maybe ArtistAnimation is what i want.. but it seems like i need to save all 500 images of the animation first? :'D
[22:51:57] *** Quits: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net) (Quit: Textual IRC Client: www.textualapp.com)
[22:54:24] *** Quits: barbarossa93 (~barbaross@c-73-39-107-44.hsd1.md.comcast.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[22:54:26] *** Quits: onichomp (~onichomp@2806:264:4404:8008:f098:eaa0:57b7:948) (Ping timeout: 265 seconds)
[22:57:11] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[22:57:40] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:59:16] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 265 seconds)
[22:59:16] *** Joins: Foxyloxy (~foxyloxy@cpc151593-shef16-2-0-cust343.17-1.cable.virginm.net)
[23:01:28] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[23:02:00] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:02:07] <mefistofeles>  kororaa: the function approach should still work, as long as you return each pair at a time, so it should be pretty straightforward
[23:02:30] *** Quits: teut (~teut@182.64.62.109) (Quit: Client closed)
[23:03:00] <kororaa> what about 30,000 pairs at a time
[23:03:38] *** Joins: teut (~teut@182.64.62.109)
[23:03:46] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[23:05:35] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:06:35] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[23:08:03] *** Joins: sidj (~sidj@user/sidj)
[23:09:02] *** Joins: Betal (~Betal@user/betal)
[23:12:13] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[23:14:45] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[23:14:47] *** Quits: jay-m1261 (~jay-m@154.72.161.106) (Ping timeout: 264 seconds)
[23:14:53] <no_gravity> Wooble: What was this LSB concept again?
[23:17:04] <no_gravity> Or who brought it up?
[23:17:33] <deltab> Liskov Substition Principle
[23:17:39] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr)
[23:17:40] <no_gravity> deltab: Great, thanks.
[23:18:02] <no_gravity> So that is a line of thought that proclaims super classes should not know anything about their subclasses?
[23:18:14] *** Quits: adder (~adder@user/adder) (Remote host closed the connection)
[23:18:24] *** Quits: Arw (~Arwalk@lfbn-dij-1-1329-53.w92-141.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[23:18:24] <deltab> https://en.wikipedia.org/wiki/Liskov_substitution_principle
[23:18:38] *** Joins: adder (~adder@user/adder)
[23:18:39] <deltab> instance should be interchangeable
[23:18:52] <exarkun> It's very easy to achieve if you just don't use subclassing.
[23:18:58] *** Joins: Inline (~Inline@2a02:908:1252:7a80:7c12:e31e:34fb:c517)
[23:19:14] <no_gravity> exarkun: You mean if you don't do inheritance?
[23:19:33] <exarkun> sure
[23:19:45] *** Joins: odix (~ok@65.141.163.206)
[23:20:02] *** Joins: Auron (~Auron956@user/auron)
[23:20:56] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 268 seconds)
[23:22:16] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[23:25:15] *** Quits: audiobirb (~audio@user/audio) (Remote host closed the connection)
[23:25:31] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 250 seconds)
[23:25:33] *** Joins: audiobirb (~audio@user/audio)
[23:26:20] *** Quits: alkino_ (~quassel@user/alkino) (Ping timeout: 265 seconds)
[23:26:26] *** Joins: alkino (~quassel@user/alkino)
[23:26:58] *** Quits: kek_ (~kek_@2a02:168:200f:1f10:410b:731a:6592:864d) (Quit: Leaving)
[23:27:55] *** Joins: mimmy (~mimmy@72.142.88.18)
[23:28:09] *** Joins: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael)
[23:29:42] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[23:30:59] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[23:31:33] *** Joins: JordiGH (~jordi@user/jordigh)
[23:31:35] *** Parts: JordiGH (~jordi@user/jordigh) (Leaving)
[23:32:08] *** Quits: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net) (Ping timeout: 265 seconds)
[23:32:13] *** Joins: Bakunin (~Lindis@user/lindis)
[23:33:02] <no_gravity> I am confused about the LSP.
[23:33:15] <no_gravity> How can T be replaced with S when S depends on T?
[23:33:49] <deltab> an instance of T
[23:33:51] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[23:34:08] <no_gravity> Yes
[23:34:10] <deltab> and an instance of S
[23:34:24] <no_gravity> Ok
[23:34:51] <no_gravity> How does that go down the drain when the constructor of T knows about the S?
[23:36:04] <deltab> I missed the earlier discussion
[23:36:18] <no_gravity> Can you scroll up and see my link to online-python?
[23:36:23] <no_gravity> I don't have it anymore.
[23:36:37] <deltab> yeah, but there was no code when I loaded it
[23:36:39] *** Quits: Wulf (~Wulf@user/wulf) (Remote host closed the connection)
[23:37:14] <no_gravity> One moment, recoding it ...
[23:37:15] *** Joins: Wulf (~Wulf@user/wulf)
[23:37:29] <no_gravity> Here we go: https://www.online-python.com/WxsotP38fg
[23:37:40] <no_gravity> This is possible in Python, but impossible in Javascript.
[23:37:56] <no_gravity> And someone here in the channel said it is due to the Liskov Substitution Principle.
[23:38:19] *** Joins: adiKt (uid472628@tinside.irccloud.com)
[23:38:51] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[23:38:58] <no_gravity> But I don't see how that is related. As every Person *is* replacable by a Developer, right?
[23:39:10] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[23:39:22] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[23:40:32] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7) (Ping timeout: 256 seconds)
[23:41:04] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[23:42:27] *** Joins: ham5urg (~ham5urg@2a00:20:7047:214e:e27b:a84a:30df:fde3)
[23:43:08] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[23:43:22] *** Quits: teut (~teut@182.64.62.109) (Quit: Client closed)
[23:44:19] *** Joins: extnct (~extnct@2604:180:2:a54:1::9ce7)
[23:44:28] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[23:44:45] *** Parts: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Leaving)
[23:44:52] *** Joins: CombatVet_ (~c4@user/combatvet)
[23:46:00] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[23:46:11] *** Joins: sudomann (~sudomann@c-98-219-165-55.hsd1.md.comcast.net)
[23:46:12] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[23:46:13] *** CombatVet_ is now known as CombatVet
[23:46:40] *** tar_xvf is now known as Guest81
[23:46:51] *** Joins: rama (~rama@2601:642:4c0a:148a:e5c3:970d:3186:9b74)
[23:46:54] *** Quits: Guest81 (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[23:46:57] *** Joins: SnowCode (~debian@vps-709aceac.vps.ovh.net)
[23:47:12] <SnowCode> Hello, I have a little problem with datetime and pytz
[23:47:13] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[23:47:13] *** tar_xvf is now known as Guest81
[23:47:33] <deltab> you can't make instances of Person because __init__ tries to access self.name
[23:47:45] <Wooble> no_gravity: I may have misunderstood your issue at the time.
[23:47:52] *** Quits: delvian (~delvian@41.13.200.201) (Ping timeout: 256 seconds)
[23:48:11] <no_gravity> Wooble: Aha!
[23:48:12] <SnowCode> I've run the line: `print(datetime.datetime.now(pytz.timezone("America/Sao_Paulo")))` but someone told me the time isn't correct (the correct time is 17h, but python says it's 18h)
[23:48:41] <Wooble> SnowCode: you have to localize using pytz, you can't just plug in a tz like that.
[23:48:44] <Wulf> SnowCode: try 15th.
[23:48:56] <Wulf> oh, not the day, the hour.
[23:49:17] <SnowCode> Wooble: What do you mean?
[23:49:24] <Wulf> SnowCode: should be 17:19 now
[23:49:24] *** Joins: delvian (~delvian@41.13.232.107)
[23:49:38] *** Guest81 is now known as tar_xvf
[23:49:40] <Wooble> SnowCode: see the examples at https://pythonhosted.org/pytz/#example-usage
[23:49:47] <SnowCode> Yes but it says 18h19
[23:49:53] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:1937:5740:9a75:d704)
[23:49:53] <no_gravity> deltab: We can fix that: https://www.online-python.com/1mCU5ubxLG
[23:49:55] <be3uykpy> hi
[23:50:02] <Wulf> SnowCode: probably a problem of daylight saving
[23:50:13] <Wooble> SnowCode: also https://stackoverflow.com/questions/11473721/weird-timezone-issue-with-pytz
[23:50:14] *** tar_xvf is now known as tar
[23:50:15] <no_gravity> deltab: Still, this is possible in Python but not in Javascript.
[23:50:36] <Wooble> (getting the *minute* right is just as surprising as getting the hour right, if it happens.)
[23:50:39] *** tar is now known as Guest81
[23:50:49] *** Guest81 is now known as tar_xvf
[23:50:50] <Wulf> SnowCode: "Brazil abolished DST in 2019"
[23:50:51] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:8d40:e10d:37be:4ec7)
[23:51:07] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Client Quit)
[23:51:09] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 268 seconds)
[23:51:26] <SnowCode> Wulf: Oh OK
[23:51:51] <SnowCode> Wooble: OK, I don't understand the localize thing but I'm going to look at that thank
[23:51:54] <SnowCode> *thanks
[23:52:17] <deltab> I tried that and got 2021-11-15 17:22:06.908558-03:00
[23:53:15] *** Quits: rama (~rama@2601:642:4c0a:148a:e5c3:970d:3186:9b74) (Ping timeout: 250 seconds)
[23:53:30] <Wulf> SnowCode: on an older linux system which hasn't seen updates in years I get 18:23 -0200; on my system I get 17:23 -0300
[23:53:31] <deltab> SnowCode: what do you see as the time offset in your output?
[23:53:32] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 256 seconds)
[23:54:08] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[23:54:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:54:47] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[23:54:56] <Wulf> upgraded its tzdata package, now shows the -0300 time too :)
[23:55:01] <SnowCode> deltab: It says -02:00
[23:55:27] <Evolver> Which is the best tool for automated type annotation inferencing of legacy 3.x code?
[23:55:58] *** Joins: guenhael1 (~Thunderbi@2a01:e0a:163:7060:683b:f08b:8829:f03d)
[23:56:05] *** Joins: wovixo (~wovixo@128.104.205.49)
[23:56:17] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 250 seconds)
[23:56:17] *** guenhael1 is now known as guenhael
[23:56:33] <Wulf> SnowCode: how did you install pytz? Which version is installed?
[23:57:06] <SnowCode> Wulf: Thanks, just upgraded it and now it works :)
[23:57:12] <SnowCode> You are right
[23:57:12] <deltab> looks like it changed in 2019
[23:57:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[23:57:37] <SnowCode> Yup
[23:58:00] <kororaa> how do you build a 2d array where each sub-array has different lengths?
[23:58:10] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[23:58:21] <kororaa> like [[1,2,3],[4,5],[6,7,8,9]]
[23:59:05] <kororaa> trying to make an array from simulation data of the x-coordinates of particles, where axis 0 is each time snapshot and the sub-array is a list of particle x-coordinates, and each snapshot has different numbers of particles
[23:59:11] <Wulf> SnowCode: You're welcome!
[23:59:44] *** Joins: fikran (~fikran@user/fikran)
[23:59:50] <grym> kororaa: lists of lists can be ragged; numpy arrays cannot
