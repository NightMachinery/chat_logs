[00:18:30] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[00:23:44] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[00:31:33] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:39:12] *** Quits: dor (~erg@188.147.1.86.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[00:50:55] *** Joins: schinckel (uid38120@user/schinckel)
[00:51:48] *** Joins: tuxflo (~tuxflo@2a02:810b:1ea0:14a3:62cd:5253:29a0:89ff)
[00:53:20] *** Quits: fikran (~fikran@user/fikran) (Quit: WeeChat 3.0.1)
[00:55:15] *** Quits: tuxflo (~tuxflo@2a02:810b:1ea0:14a3:62cd:5253:29a0:89ff) (Quit: Client closed)
[00:57:55] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-8005-b093-6067-6ab8.res6.spectrum.com)
[01:02:37] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[01:03:23] *** Quits: rtpg (sid443069@id-443069.ilkley.irccloud.com) (Read error: Connection reset by peer)
[01:03:24] *** Quits: schinckel (uid38120@user/schinckel) (Ping timeout: 240 seconds)
[01:03:25] *** Quits: holbrode (sid339826@id-339826.tinside.irccloud.com) (Ping timeout: 240 seconds)
[01:03:31] *** Joins: rtpg (sid443069@id-443069.ilkley.irccloud.com)
[01:03:44] *** Joins: schinckel (uid38120@user/schinckel)
[01:03:48] *** Quits: parst (sid30815@id-30815.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[01:04:32] *** Joins: holbrode (sid339826@id-339826.tinside.irccloud.com)
[01:04:36] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[01:05:35] *** Joins: parst (sid30815@id-30815.helmsley.irccloud.com)
[01:05:54] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[01:22:16] *** Joins: fikran (~fikran@user/fikran)
[01:38:28] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[01:41:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:49:21] *** Joins: dre (~dre@2001:8003:c932:c301:2079:4593:1556:be9c)
[02:03:41] <shodan45> does django's ORM have a way to do replace queries? not a string replace function, a replace query
[02:04:28] <shodan45> like https://dev.mysql.com/doc/refman/8.0/en/replace.html
[02:12:11] *** Joins: Atque (~Atque@user/atque)
[02:12:26] *** Quits: Atque (~Atque@user/atque) (Client Quit)
[02:15:56] <ubernostrum> shodan45: nothing built-in at the moment, but you could write your own support for it using the tools the ORM provides, or do it with raw SQL: https://docs.djangoproject.com/en/4.0/topics/db/sql/
[02:20:04] <shodan45> ubernostrum: huh, interesting. thanks.
[02:20:41] <ubernostrum> It's the sort of thing that, if there were a django.contrib.mysql, would be a good candidate for inclusion there :)
[02:20:47] <ubernostrum> (right now there's only a django.contrib.postgres)
[02:22:34] <ubernostrum> Might also look into this, though I don't know anything about its overall quality: https://django-mysql.readthedocs.io/en/latest/index.html
[02:22:42] *** Joins: djapo (~archangel@user/djapo)
[02:23:56] <ubernostrum> Dunno if they have some tooling that might make it easier to implement.
[02:27:03] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:30:50] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[02:31:26] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[02:42:12] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[02:42:27] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[02:45:45] *** Quits: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[02:52:28] *** Parts: dminuoso (~dminuoso@user/dminuoso) (WeeChat 3.3)
[02:53:40] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[02:55:35] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:00:36] *** Quits: MarkusH (MarkusH@django/moderator/MarkusH) (Quit: ZNC - http://znc.sourceforge.net)
[03:01:10] *** Joins: MarkusH (MarkusH@django/moderator/MarkusH)
[03:01:10] *** ChanServ sets mode: +v MarkusH
[03:11:36] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[03:15:11] *** Joins: theprophet (~theprophe@212.58.102.155)
[03:15:39] <theprophet> guys , can you please tell me, which of these os should i pick for docker?
[03:15:40] <theprophet> Ubuntu 18.04 LTS
[03:15:41] <theprophet> Ubuntu 20.04 LTS
[03:15:41] <theprophet> openSUSE Leap 15.1
[03:15:42] <theprophet> SUSE Linux Enterprise Server 12 SP5
[03:15:42] <theprophet> SUSE Linux Enterprise Server 15 SP1
[03:15:43] <theprophet> Kali Linux
[03:15:43] <theprophet> Debian GNU/Linux
[03:15:44] <theprophet> Fedora Remix for WSL
[03:15:44] <theprophet> Pengwin
[03:15:45] <theprophet> Pengwin Enterprise
[03:15:45] <theprophet> Alpine WSL
[03:15:46] <theprophet> Raft(Free Trial)
[03:18:03] <dodobrain> theprophet, i would recommend you stick to debian
[03:18:39] <theprophet> dodobrain can you tell me the most important part you think, why?
[03:20:40] <FunkyBob> theprophet: please don't spam the channel
[03:20:49] <FunkyBob> you could just have easily used a pastebin for that list
[03:21:23] <theprophet> i tought that was not neccessary since its not a code, but ill keep that in mind for the future.
[03:22:56] <FunkyBob> don't care if it's code or not...
[03:23:23] <FunkyBob> Debian has a nice, smallish base image you can use...
[03:23:49] <FunkyBob> alpine can provide a very small base image, but if it's not what you're developing on, you can run into compat problems
[03:23:53] <theprophet> FunkyBob who dont care?
[03:23:54] <FunkyBob> because they use a different libc by default
[03:24:10] <FunkyBob> theprophet: I don't care. Code or not, don't paste to channel
[03:24:36] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 240 seconds)
[03:25:22] <theprophet> FunkyBob  admitting mistake, thats exactly what i did, did not i? saying that you dont care was not necessary
[03:25:48] <FunkyBob> I was clarifying that code or not is irrelevant.
[03:26:17] <FunkyBob> yes, I recognise and appreciate that you committed to not repeating this.
[03:26:29] <theprophet> yes
[03:31:23] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Ping timeout (120 seconds))
[03:31:38] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[04:00:50] *** Quits: theprophet (~theprophe@212.58.102.155) (Quit: Client closed)
[04:09:04] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[04:09:38] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[04:29:54] *** Joins: rje (~textual@65.141.156.170)
[04:43:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:44:00] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:00:09] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:01:21] *** Joins: MiguelX413 (~MiguelX41@108-195-200-9.uvs.frokca.sbcglobal.net)
[05:24:20] *** Joins: rje (~textual@50.35.241.164)
[05:30:17] *** Quits: dre (~dre@2001:8003:c932:c301:2079:4593:1556:be9c) (Quit: Leaving)
[05:33:44] *** Joins: kostkon_ (~androirc@2a02:587:a10f:c988:b1a9:e0ab:2766:b2d2)
[05:59:31] *** Joins: Kalov (~Thunderbi@181.226.96.240)
[06:04:04] *** Quits: justGhost (~justache@user/justache) (Read error: Connection reset by peer)
[06:05:35] *** Joins: justGhost (~justache@user/justache)
[06:08:59] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[06:09:45] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:23:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[06:27:36] *** Joins: rusrushal13 (~rusrushal@103.85.18.34)
[06:39:37] *** Quits: thiras_ (~thiras@user/thiras) (Ping timeout: 250 seconds)
[06:50:26] *** Quits: Xof (~Xof@198-0-193-113-static.hfc.comcastbusiness.net) (Quit: Bye.)
[07:13:31] *** Quits: rusrushal13 (~rusrushal@103.85.18.34) (Ping timeout: 256 seconds)
[07:43:34] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:46:36] *** Quits: sreve (~quassel@p4ff4449e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:47:08] *** Joins: sreve (~quassel@p4ff44eec.dip0.t-ipconnect.de)
[07:54:47] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[08:02:01] *** Joins: dre (~dre@2001:8003:c932:c301:2079:4593:1556:be9c)
[08:30:34] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:32:13] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[08:34:03] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[08:34:03] *** vinleod is now known as vdamewood
[08:45:40] *** Joins: djapo (~archangel@user/djapo)
[09:02:08] *** Joins: testuser12 (~testuser1@c-76-21-76-46.hsd1.ca.comcast.net)
[09:05:44] <testuser12> Hi, I have a question about the license. If I have a project made with django that has code generated by django when I create a project, can I say that it is made with django? The license says "Neither the name of Django nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior
[09:05:45] <testuser12> written permission" and I'm assuming the code generated by django is under this license.
[09:08:51] *** Parts: testuser12 (~testuser1@c-76-21-76-46.hsd1.ca.comcast.net) ()
[09:08:53] *** Joins: testuser12 (~testuser1@c-76-21-76-46.hsd1.ca.comcast.net)
[09:10:05] <testuser12> Hi, I have a question about the license. If I have a project made with django that has code generated by django when I create a project, can I say that it is made with django? The license says "Neither the name of Django nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior
[09:10:05] <testuser12> written permission" and I'm assuming the code generated by django is under this license.
[09:17:23] *** Joins: testuser13 (~testuser1@c-76-21-76-46.hsd1.ca.comcast.net)
[09:18:29] *** Quits: testuser13 (~testuser1@c-76-21-76-46.hsd1.ca.comcast.net) (Client Quit)
[09:19:27] *** Quits: testuser12 (~testuser1@c-76-21-76-46.hsd1.ca.comcast.net) (Quit: Client closed)
[09:25:48] *** Joins: dor (~erg@188.147.1.86.nat.umts.dynamic.t-mobile.pl)
[09:43:46] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Quit: ping timeout... you sure??)
[09:53:19] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Quit: leaving)
[09:53:38] *** Joins: Atque (~Atque@user/atque)
[09:59:31] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[10:02:01] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[10:04:33] *** Joins: ekathva (~ekathva@n3k05vuqs1ol74l3j-1.v6.elisa-mobile.fi)
[10:08:28] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[10:08:45] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[10:21:48] *** Quits: dre (~dre@2001:8003:c932:c301:2079:4593:1556:be9c) (Ping timeout: 240 seconds)
[10:21:53] *** Quits: Kalov (~Thunderbi@181.226.96.240) (Quit: Kalov)
[10:24:38] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[10:25:01] *** Joins: djapo (~archangel@user/djapo)
[10:34:22] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:38:36] <glik22_> i want to change a the column type on my model but don't want django itself to create the sql. how do i go about this (not the sql itself, i can handle that)? basically i want django to know the type changed but not actually do anything.
[10:39:18] *** Quits: cowsay-moo (~cowsay-mo@2a0d:5600:24:1400:1016:ed97:1df8:b3cc) (Ping timeout: 252 seconds)
[10:42:58] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[10:43:11] *** Joins: paprika (~pepper@user/pepper)
[10:45:14] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 272 seconds)
[10:45:56] *** Joins: djapo (~archangel@user/djapo)
[10:47:58] <moldy> glik22_: with a RunSQL migration, you can write the SQL itself
[10:48:22] <moldy> glik22_: if you want to change the column type completely outside of django and inform django about it, you can use SeparateDatabaseAndState
[10:48:29] <moldy> s/itself/yourself/
[10:50:53] *** Joins: slav0nic (slav0nic@python.su)
[10:51:34] <glik22_> moldy: aha, SeparateDatabaseAndState is what i'm looking for. thank you!
[10:52:03] <glik22_> ah not available in 2.2.
[10:53:14] <glik22_> actually it is. whoops.
[10:55:24] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[10:57:23] *** Joins: csm3105 (~csm3105@143.red-83-48-84.staticip.rima-tde.net)
[10:57:40] *** Joins: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net)
[11:02:16] *** Joins: djapo (~archangel@user/djapo)
[11:05:02] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:06:13] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-8005-b093-6067-6ab8.res6.spectrum.com) (Quit: Client closed)
[11:07:30] *** Joins: dre (~dre@2001:8003:c932:c301:f5ca:6748:5b2:4153)
[11:25:18] *** Joins: pycode (~pycode3@2001:b07:5d28:551:1628:764f:34d3:3603)
[11:25:58] *** Joins: mrwick (~mrwick@user/mrwick)
[11:26:32] *** Quits: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net) (Remote host closed the connection)
[11:32:06] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[11:33:45] *** Quits: kostkon_ (~androirc@2a02:587:a10f:c988:b1a9:e0ab:2766:b2d2) (Ping timeout: 252 seconds)
[11:33:53] *** Quits: dre (~dre@2001:8003:c932:c301:f5ca:6748:5b2:4153) (Quit: Leaving)
[11:36:24] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Quit: Ping timeout (120 seconds))
[11:36:43] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[11:41:11] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[11:58:28] *** Quits: dor (~erg@188.147.1.86.nat.umts.dynamic.t-mobile.pl) (Read error: Connection reset by peer)
[12:04:42] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:14:32] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[12:16:16] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[12:29:44] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 272 seconds)
[12:29:46] *** Joins: Guddu (~Guddu@117.247.153.18)
[12:35:21] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[12:36:09] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[12:37:30] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[12:47:26] *** Joins: yanchai (~yanchai@115.147.34.99)
[12:53:10] *** Quits: Guddu (~Guddu@117.247.153.18) (Ping timeout: 272 seconds)
[12:53:11] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:12:42] *** Joins: mattil (~mattil@87-92-28-123.bb.dnainternet.fi)
[13:13:57] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[13:21:00] *** Quits: mattil (~mattil@87-92-28-123.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[13:21:00] *** paprika is now known as pepper
[13:22:56] *** Quits: yanchai (~yanchai@115.147.34.99) (Ping timeout: 272 seconds)
[13:22:58] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: No Ping reply in 180 seconds.)
[13:28:19] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-0861-9bd2-90c4-00bf.res6.spectrum.com)
[13:38:01] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:40:38] *** Joins: yanchai (~yanchai@115.147.34.99)
[13:43:25] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: Bridge terminating on SIGTERM)
[13:43:25] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: mambang[m] (~mambang@user/mambang) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: ktosiek (~ktosiek@2001:470:69fc:105::87ab) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: workingsea (~workingse@2001:470:69fc:105::418a) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: sheepman[m] (~sheepman@2001:470:69fc:105::8cd) (Quit: Bridge terminating on SIGTERM)
[13:43:26] *** Quits: myii[m]1 (~myii@2001:470:69fc:105::177) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: mattcen (~mattcen@2001:470:69fc:105::936) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: kerouac (~kerouac@2001:470:69fc:105::4e36) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1) (Quit: Bridge terminating on SIGTERM)
[13:43:27] *** Quits: vancha112[m] (~vancha@2001:470:69fc:105::3473) (Quit: Bridge terminating on SIGTERM)
[13:43:28] *** Quits: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553) (Quit: Bridge terminating on SIGTERM)
[13:43:29] *** Quits: brownan (~brownan@2001:470:69fc:105::e01b) (Quit: Bridge terminating on SIGTERM)
[13:43:29] *** Quits: humancalico (~humancali@2001:470:69fc:105::d1ce) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: bmbouter[m] (~bmbouter@2001:470:69fc:105::162f) (Quit: Bridge terminating on SIGTERM)
[13:43:30] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Bridge terminating on SIGTERM)
[13:48:22] *** Joins: mambang[m] (~mambang@user/mambang)
[13:48:38] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[13:49:26] *** Joins: mattil (~mattil@87-92-28-123.bb.dnainternet.fi)
[14:20:36] *** Joins: workingsea (~workingse@2001:470:69fc:105::418a)
[14:20:36] *** Joins: bmbouter[m] (~bmbouter@2001:470:69fc:105::162f)
[14:20:36] *** Joins: allegary (~allegary@apache/committer/gjm)
[14:20:36] *** Joins: myii[m]1 (~myii@2001:470:69fc:105::177)
[14:20:36] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[14:20:36] *** Joins: sheepman[m] (~sheepman@2001:470:69fc:105::8cd)
[14:20:36] *** Joins: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553)
[14:20:36] *** Joins: ktosiek (~ktosiek@2001:470:69fc:105::87ab)
[14:20:36] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[14:20:36] *** Joins: vancha112[m] (~vancha@2001:470:69fc:105::3473)
[14:20:36] *** Joins: kerouac (~kerouac@2001:470:69fc:105::4e36)
[14:20:36] *** Joins: mattcen[mx] (~mattcen@2001:470:69fc:105::5d1)
[14:20:36] *** Joins: mattcen (~mattcen@2001:470:69fc:105::936)
[14:20:36] *** Joins: brownan (~brownan@2001:470:69fc:105::e01b)
[14:21:58] *** Quits: mattil (~mattil@87-92-28-123.bb.dnainternet.fi) (Ping timeout: 260 seconds)
[14:27:10] *** Joins: Timvde (~tim@towely.vdeynde.com)
[14:29:30] <Timvde> We are using Django REST Framework ViewSets. In the retrieve() function (which maps on GET /endpoint/id), we get a pk parameter. These ids should always be integers and we have typed it as such. However, because Python is dynamically typed, basically anything can come in. Is there a way to tell DRF that we only want to accept integers, and otherwise give a 404, without us having to add the check
[14:29:32] <Timvde> manually everywhere?
[14:29:44] *** Joins: humancalico (~humancali@2001:470:69fc:105::d1ce)
[14:33:22] <GinFuyou> doesn't router prevent it? In "plain" django urlpattern can
[14:33:36] <moldy> Timvde: if your URL patterns are properly set up, that should do it, iirc?
[14:34:00] <moldy> also, what is the behaviour you are seeing right now, instead of a 404?
[14:35:28] *** Joins: Guddu (~Guddu@117.247.153.18)
[14:38:23] <Timvde> moldy: We use a DefaultRouter from DRF, which lets us just register a ViewSet to an /endpoint, and all the rest is done automatically by the magic ViewSet functions like retrieve(), list(), create() etc. You made me look at the router more in detail though, and I found that I can set a lookup_value_regex on a ViewSet (at least with a SimpleRouter, must check DefaultRouter). That could fix it, let
[14:38:25] <Timvde> me test :)
[14:38:52] <moldy> Timvde: if i remember correctly, you shouldn't really have to do anything here
[14:39:00] <moldy> what exactly is it that you need to fix?
[14:39:23] <moldy> i'm prett sure /endpoint/foo should give you a 404 out of the box
[14:40:00] <yanchai> hi
[14:40:15] <yanchai> why do i get this error Database returned an invalid datetime value. Are time zone definitions for your database installed?
[14:40:31] *** wez is now known as notwez
[14:40:36] *** notwez is now known as we
[14:40:38] *** we is now known as wez
[14:43:40] <Timvde> moldy: when a client passes a string instead of an int, something further down the line crashes, resulting in a 500. The default lookup_value_regex seems to be '[^/.]+'
[14:44:21] <moldy> Timvde: that's probably due to some custom code on your side then, we'd have to see the code and the full traceback to help, probably
[14:45:06] *** rwb is now known as rb
[14:45:57] <Timvde> moldy: no, it's just DRF doing that: https://github.com/encode/django-rest-framework/blob/master/rest_framework/routers.py#L221. But the lookup_value_regex property will work to override it, thanks for pointing me in the right direction!
[14:46:36] *** Quits: pycode (~pycode3@2001:b07:5d28:551:1628:764f:34d3:3603) (Ping timeout: 240 seconds)
[14:46:38] <moldy> it shouldn't result in a 500
[14:46:45] <moldy> unless you have some custom code that causes it
[14:47:24] <Timvde> moldy: Ah, yes, that's our code that expects an int and can't handle the string.
[14:47:34] <moldy> yeah, that makes sense then
[14:47:56] <Timvde> But we want to just return 404 early
[14:48:10] <moldy> how does the line that throws the 500 look like?
[14:50:07] <Timvde> moldy: it's actually a bit more complicated, it's a third party component we communicate with that gives a 500, and we translate that to a 502, which is why it's not easy to change it there. I just simplified it because that part wasn't really relevant :)
[14:50:23] <moldy> ah, ok
[15:03:23] *** Joins: Atque (~Atque@user/atque)
[15:03:28] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[15:15:09] *** Joins: mattil (~mattil@87-92-28-123.bb.dnainternet.fi)
[15:22:36] *** Quits: mattil (~mattil@87-92-28-123.bb.dnainternet.fi) (Ping timeout: 240 seconds)
[15:47:38] *** Joins: thiras_ (~thiras@user/thiras)
[15:55:07] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[16:20:17] *** Joins: epony (epony@user/epony)
[16:26:57] *** Quits: yanchai (~yanchai@115.147.34.99) (Ping timeout: 240 seconds)
[16:31:51] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:32:36] *** Quits: rje (~textual@50.35.241.164) (Ping timeout: 240 seconds)
[16:39:14] *** Joins: rje (~textual@65.141.156.170)
[16:40:56] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:05:24] *** Quits: thiras_ (~thiras@user/thiras) (Quit: Leaving)
[17:16:46] *** Joins: pycode (~pycode3@2001:b07:5d28:551:f47e:75b2:aa28:86ce)
[17:23:26] *** Quits: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br) (Quit: Leaving)
[17:23:41] *** Joins: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br)
[17:24:59] *** Joins: xkuru (~xkuru@user/xkuru)
[17:27:24] *** Quits: ekathva (~ekathva@n3k05vuqs1ol74l3j-1.v6.elisa-mobile.fi) (Remote host closed the connection)
[17:49:30] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-0861-9bd2-90c4-00bf.res6.spectrum.com) (Quit: Client closed)
[17:53:22] *** Quits: Harlin (~DonQixote@75-163-174-136.clsp.qwest.net) (Quit: Leaving)
[17:53:39] *** Joins: Harlin (~DonQixote@75-163-174-136.clsp.qwest.net)
[17:56:43] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[17:56:55] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[18:16:12] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Ping timeout: 240 seconds)
[18:22:55] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 250 seconds)
[18:25:40] *** Quits: Guddu (~Guddu@117.247.153.18) (Ping timeout: 272 seconds)
[18:26:47] *** Joins: kostkon_ (~androirc@athedsl-393845.home.otenet.gr)
[18:30:24] *** Joins: pro_z (~pro_z@37.214.74.198)
[18:35:17] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[18:35:42] *** Joins: pepper (~pepper@user/pepper)
[18:47:17] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[18:47:39] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[18:48:26] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[18:51:33] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[18:54:19] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[19:00:40] *** Quits: schinckel (uid38120@user/schinckel) (Quit: Connection closed for inactivity)
[19:00:54] *** Joins: cowsay-moo (~cowsay-mo@2001:1b60:1010:3:1015:ee1c:7647:701b)
[19:01:24] *** Quits: rtpg (sid443069@id-443069.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[19:02:04] *** Joins: rtpg (sid443069@id-443069.ilkley.irccloud.com)
[19:04:39] <fikran> I'm getting an error I do not understand. I'm getting a 404 error Page not found, "No Control matches the given query"
[19:04:51] <fikran> but...it also says: The current path, apps/piv/1/1/implementation/DO/, matched the last one.
[19:05:03] <fikran> the last one being ^apps/piv/ ^(?P<orgid>\d+)/(?P<facilpubid>\d+)/implementation/(?P<family>[A-Za-z]{2})/$ [name='implementation']
[19:05:18] <fikran> if it matched, what's the issue...?
[19:06:06] *** Joins: mattil (~mattil@helsinki.portalify.com)
[19:06:09] <apollo13> fikran: is the database model you are trying to query named control?
[19:06:35] <apollo13> it seems as if the URL matches fine but the python code inside the view threw the 404
[19:08:04] <fikran> wait, I think I got it...
[19:08:07] <fikran> yeah...I think its related to that.
[19:09:05] <pycode> hello i need your help, suppose you have a project with Recruiter --> Projects --> Companies --> Job Posting    would you create 4 different applications that share their models or 1 single app with everything? In my case i do not need to use the applicaiton for others projects, so i do not need reusability, maybe just a good core organization.
[19:09:36] <apollo13> one app probably
[19:09:50] <apollo13> using wrong app per model is most certainly always the wrong approach
[19:09:52] *** Quits: kostkon (~kostkon@2a02:587:a10f:c988:64f8:adee:a69:7ea) (Quit: Leaving)
[19:10:12] <fikran> yeah.
[19:11:34] <pycode> ok so just one app
[19:12:21] <pycode> as i wrote i do not need to reuse the code for other projects but i also read that sometimes devs are splitting code into different apps for more organization.
[19:12:26] <pycode> idk why
[19:13:00] <apollo13> you usually split into modules; an app is rather high lvel
[19:17:09] *** Joins: kostkon (~kostkon@2a02:587:a10f:c988:64f8:adee:a69:7ea)
[19:22:36] <pycode> apollo13, but in this case how can i split into modules? i mean ok ONE app, i call that app CORE....then inside that app should i create /recruiter/views.py /recruiter/forms.py and so on ?
[19:22:51] <pycode> could you give me an example or a repository to look into
[19:23:15] <apollo13> pycode: start simple (ie a single views.py file) and when that gets to big split it up into project_views.py recruiter_views.py etc…
[19:23:24] *** Quits: cliluw (~cliluw@47.147.77.43) (Ping timeout: 240 seconds)
[19:23:39] <apollo13> don't have any examples, you have to figure out what makes most sense for you and your code / project size
[19:23:51] <pycode> apollo13, that's sounds correct to me, but i have to adopt a similar solutions for...forms.py tables.py (django-tables) and so on
[19:24:23] <apollo13> well you can structure them rather freely (packages are okay as well). Though models will probably have to stay in models.py
[19:24:38] *** Joins: cliluw (~cliluw@47.147.77.43)
[19:24:50] <apollo13> not sure how picky Django is there :) at least you will need to import all models in models.py for discovery reasons or so
[19:25:04] <pycode> yes i put all the models in models.py but then i orgnaize the code that way
[19:25:23] <pycode> to avoid giant views.py
[19:25:28] <pycode> and forms.py
[19:27:33] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:29:00] <pycode> django "apps" still confusing me :D ahah i come from cakephp i never used that kind of "apps"
[19:30:48] <pycode> apollo13, pardon for the stupid question what is the main reason you split your code into a new app? (aside from its reusability)
[19:35:24] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[20:01:16] *** Joins: teut (~teut@122.161.83.81)
[20:11:18] <doismellburning> pycode: the "apps" name is unfortunate and a common source of confusion alas!
[20:12:22] <pycode> doismellburning, yeah i am a bit confused about them
[20:13:11] <pycode> doismellburning, i still do not understand how to split, and when i see big projects i see that there is a lot of freedom on how to structure the whole project
[20:16:00] <pycode> so..i am not alone :D
[20:17:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:17:35] <pycode> doismellburning, do you use a single "app" if you do not need reusability?
[20:17:48] <doismellburning> pycode: https://blog.doismellburning.co.uk/django-an-unofficial-opinionated-faq/ is showing its age a bit but I think it generally still stands - basically I'd keep it all together until you really feel like splitting would add value
[20:18:47] <pycode> thank you i am reading the article
[20:19:00] *** Joins: elwoodpd (~elwoodpd@cpc87171-aztw31-2-0-cust152.18-1.cable.virginm.net)
[20:19:06] <doismellburning> apparently I broke the ability to link to subsections, whoops
[20:20:48] <pycode> doismellburning, the doubt is that if i split code inside ONE app i will have views/recruiter.py         forms/recruiter.py so many files that have the "thing" i am working
[20:21:02] <pycode> so same name over multiple py module
[20:22:05] <elwoodpd> Hello, I am trying to follow the django project tutorial and it seems django isn't looking in my templates folder
[20:22:18] <elwoodpd> any ideas what I could have messed up
[20:23:35] <elwoodpd> I am getting TemplateDoesNotExist despite putting a template where the tutorial describes
[20:24:54] <elwoodpd> https://pastebin.com/JdbMmkPP
[20:26:11] <elwoodpd> I have solved my own problem
[20:26:16] <elwoodpd> sorry to bother you all haha
[20:28:40] *** Joins: rusrushal13 (~rusrushal@103.85.18.43)
[20:29:02] *** Quits: pycode (~pycode3@2001:b07:5d28:551:f47e:75b2:aa28:86ce) (Ping timeout: 250 seconds)
[20:33:51] *** Quits: elwoodpd (~elwoodpd@cpc87171-aztw31-2-0-cust152.18-1.cable.virginm.net) (Quit: Leaving)
[20:40:09] <sheepman[m]> Rubber duck debugging is real.
[20:41:48] <Wooble> plus if you do it on IRC instead of out loud to a real rubber duck the people in nearby offices don't think you're as insane
[20:44:07] *** Quits: lucascastro (~lucascast@192-140-51-239.static.oncabo.net.br) (Ping timeout: 256 seconds)
[20:44:07] *** Quits: rje (~textual@65.141.156.170) (Ping timeout: 256 seconds)
[20:44:13] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[21:06:44] *** Joins: lucascastro (~lucascast@177-185-131-162.corp.isotelco.net.br)
[21:18:51] *** Joins: rje (~textual@65.141.156.170)
[21:30:50] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[21:36:34] *** Joins: LordVan (~lordvan@gentoo/developer/lordvan)
[21:48:27] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[21:49:37] *** Quits: kostkon_ (~androirc@athedsl-393845.home.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[21:53:14] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[22:18:05] *** Joins: Xof (~Xof@198-0-193-113-static.hfc.comcastbusiness.net)
[22:25:26] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[22:27:28] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:30:23] *** Quits: rusrushal13 (~rusrushal@103.85.18.43) (Ping timeout: 256 seconds)
[22:32:34] *** Quits: brsc2909 (~Thunderbi@109.255.244.60) (Quit: brsc2909)
[22:36:04] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:37:06] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:53:03] *** Quits: pro_z (~pro_z@37.214.74.198) (Ping timeout: 256 seconds)
[22:53:37] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 256 seconds)
[22:53:55] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[22:55:37] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[23:42:40] *** Quits: LordVan (~lordvan@gentoo/developer/lordvan) (Quit: Leaving)
