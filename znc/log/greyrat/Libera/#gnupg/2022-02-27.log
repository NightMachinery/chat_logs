[00:14:17] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[00:19:45] *** Quits: duxsco (~Thunderbi@user/duxsco) (Quit: duxsco)
[00:20:02] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[00:22:00] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[00:34:33] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:49:35] *** Joins: duxsco (~Thunderbi@user/duxsco)
[01:05:09] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[01:15:05] <phryk> GPGME (or its official python bindings): broken. python-gnupg: broken. I hate GnuPG so much. I might actually start learning Rust just to be able to complete the python bindings for sequoia-sop just so I can be rid of this absolute garbage fire. No fucking idea how this shit is acceptable in any way for security critical tooling.
[01:15:50] *** Parts: phryk (~totallyno@user/phryk) (Fuck Werner in particular, I guess.)
[01:38:31] *** Quits: emagex (~user@user/emagex) (Quit: ERC (IRC client for Emacs 27.1))
[01:46:40] <GNUHacker> I hate python so much lol
[01:46:46] *** Quits: GNUHacker (~foobar@fsf/member/GNUHacker) (Quit: Free Software, Free Society https://gnu.org)
[02:45:15] *** Joins: junebug (~junebug@2600:1700:3db0:2540:9123:34a9:7bc6:8825)
[02:47:01] <dfdx> Hi #gnupg. I've gone through the initial steps of learning about public and private keys, and learning how to use gnupg to generate those for myself. I can now send and receive PGP-encrypted e-mails to my friends and stuff, which is nice. But can someone point me to a good resource in terms of good public/private key practice? E.g., I've heard on various forums that you should have your public/private keys 
[02:47:07] <dfdx> expire after sometime. Any guidance there would be helpful. Thanks.
[03:00:07] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[03:29:05] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[03:29:40] <duxsco> dfdx: you don't need to make them expire. just set an expiration date, and extend them before they expire if you wish
[03:34:15] *** Quits: erle- (~stephan@2a04:ee41:3:3297:da03:cbf1:479:3640) (Remote host closed the connection)
[03:44:17] *** Quits: duxsco (~Thunderbi@user/duxsco) (Quit: duxsco)
[03:44:55] *** Quits: daddy (3645@hashbang/bdfl) (Quit: WeeChat 3.4 <:3)~)
[03:45:38] *** Joins: daddy (3645@hashbang/bdfl)
[04:04:55] *** Joins: duxsco (~Thunderbi@user/duxsco)
[04:12:28] *** Joins: nlhowell1 (~nlhowell@172.58.84.66)
[04:20:29] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[04:27:48] *** Quits: duxsco (~Thunderbi@user/duxsco) (Ping timeout: 240 seconds)
[04:51:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:9123:34a9:7bc6:8825) (Ping timeout: 240 seconds)
[05:01:46] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[05:02:11] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[05:24:08] *** Quits: nlhowell1 (~nlhowell@172.58.84.66) (Read error: Connection reset by peer)
[05:24:56] *** Joins: nlhowell1 (~nlhowell@172.58.87.87)
[05:43:04] *** Joins: junebug (~junebug@2600:1700:3db0:2540:e12d:3059:2a81:a407)
[07:28:49] *** Joins: gast0n (~g4570n@user/gast0n)
[07:37:27] <dfdx> that's helpful, thanks.
[07:37:51] <dfdx> is there a list of reputable key servers? is pgp.mit.edu the most reputable one? 
[07:45:16] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 272 seconds)
[07:49:19] <dfdx> nvm, I think I answered my own question.
[08:03:57] *** Quits: nlhowell1 (~nlhowell@172.58.87.87) (Ping timeout: 240 seconds)
[08:46:29] *** Quits: junebug (~junebug@2600:1700:3db0:2540:e12d:3059:2a81:a407) (Quit: Leaving)
[09:19:24] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! ðŸ‘‹)
[09:50:52] *** Joins: two_oes (~two_oes@46-116-50-229.bb.netvision.net.il)
[09:54:48] *** Quits: two_oes (~two_oes@46-116-50-229.bb.netvision.net.il) (Client Quit)
[11:07:24] *** Joins: EGH (~EGH@185.25.195.104)
[12:34:39] *** Joins: Akiva (~Akiva@user/Akiva)
[12:37:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:05:48] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[13:23:35] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 240 seconds)
[13:41:07] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[14:08:20] *** Joins: labrador (~labrador@user/labrador)
[14:09:12] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[14:31:53] *** Joins: duxsco (~Thunderbi@user/duxsco)
[14:44:54] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:46:28] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:46:47] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[14:48:27] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[15:01:48] *** Joins: two_oes (~two_oes@46-116-50-229.bb.netvision.net.il)
[15:15:15] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 240 seconds)
[15:32:53] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[16:15:25] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[17:01:58] *** Joins: nlhowell1 (~nlhowell@172.58.84.37)
[17:05:37] *** Quits: GNUHacker (~foobar@fsf/member/GNUHacker) (Quit: https://www.gnu.org/philosophy/)
[17:16:26] *** Quits: nlhowell (~nlhowell@don28-11.ln.rinet.ru) (Quit: WeeChat 3.3)
[17:49:49] *** Joins: nlhowell2 (~nlhowell@172.58.84.17)
[17:52:23] *** Quits: nlhowell1 (~nlhowell@172.58.84.37) (Ping timeout: 256 seconds)
[18:01:00] *** Quits: nlhowell2 (~nlhowell@172.58.84.17) (Ping timeout: 240 seconds)
[18:02:50] *** Joins: nlhowell2 (~nlhowell@172.58.84.207)
[18:10:45] *** Joins: nlhowell3 (~nlhowell@172.58.84.0)
[18:13:01] *** Quits: nlhowell2 (~nlhowell@172.58.84.207) (Ping timeout: 240 seconds)
[18:30:23] *** Joins: gast0n (~g4570n@user/gast0n)
[18:33:49] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[18:44:31] *** Joins: euouae (~euouae@user/euouae)
[18:44:34] <euouae> Hello
[18:44:47] <euouae> are trust levels different than trust signatures? https://datatracker.ietf.org/doc/html/rfc4880#section-5.2.3.13 (trust signatures)
[18:45:04] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[18:45:05] <euouae> trust levels, https://gnupg.org/gph/en/manual.html#AEN346
[18:47:00] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[18:48:01] <labrador> euouae, are you in a hierarchial environment like a company?
[18:48:26] <euouae> labrador, no, I am reading on gpg as a means to enjoy my paranoid sunday
[18:48:33] <labrador> oh
[18:48:59] <labrador> Then I don't exactly know how it works but you giving a trust sig to someone else basically makes them a CA
[18:49:12] <euouae> Hmm... that's what the RFC says
[18:49:47] <euouae> it says `n` level trust is trusted to certify `n-1` and below trust-level keys   
[18:50:37] <labrador> Like if you trust sig at lvl 3 then the chain can have max level of 3 so basically you tsign the root ca which tsigns at level 2(for you) the sub ca which tsigns the sub-sub ca(at 1 for you) which SIGNS the people's keys
[18:50:37] <euouae> but the (admittedly looks outdated) gpg book says something else about what `none/margina/full/ultimate` means
[18:50:53] <labrador> Now they will be both fully valid and trusted
[18:51:10] <euouae> ah interesting, I didn't realize there's an implication of depth there
[18:51:21] <labrador> trusts will be given to the CAs but not the people
[18:51:25] <labrador> All will be fully valid
[18:51:56] <labrador> That trust can be set when you issue your trust sig,....its basically a full trust sig or a partial trust sig
[18:51:59] <euouae> but you're familiar with the margina/full/ultimate characterizatoins, right?
[18:52:19] <labrador> ye kinda...I don't really understand the diff b/w full and ultimate tho
[18:53:05] <labrador> its basically an addition to openpgp to allow it to work with a hierarchial ca trust model
[18:53:08] <labrador> Nothing else
[18:53:20] <euouae> but those characterizations are basically what you're talking about?
[18:53:21] <euouae> or not?
[18:53:35] <euouae> because trust levels and characterizations, that seems different to me. Maybe it's just fixed trust values
[18:53:44] <labrador> euouae, yeah I dunno if you can mark it ultimate but the full.marginal difference is what I'm talking about
[18:53:50] <labrador> It adds 1 score to marginal
[18:54:04] <euouae> do you know if this stuff is part of pgp or gpg?
[18:54:10] <labrador> So you can combine both ca trust(in key) and WoT
[18:54:34] <labrador> LIke 1 validation point(out of say 3 for marginal) from CA and rest 2 from co-workers
[18:54:37] <labrador> euouae, pgp
[18:54:48] <labrador> Pgp has this trust certificate thingy
[18:55:01] <euouae> got it, thanks 
[18:55:32] <euouae> is the 'global strong set' still in use?
[18:56:01] <euouae> or did that fall off after the 2019 keyserver DoS attack?
[19:00:47] <euouae> ah wait a second, I just realized: a trust level consists of two values
[19:01:04] <euouae> or rather, a _trust signature_ does: a _trust level_ and a _trust amount_
[19:02:45] <euouae> So the trust level has to do with depth in the web, while the trust amount has to do with the trustworthiness of the owner(s) of the key. So only the second value is left to the user to interpret as they wish. 
[19:06:16] <labrador> euouae, yeah but....the second value ie the trust of the owner gets imbued throught the chain to the last guy
[19:06:32] <labrador> That is how you will get a validity on the last key...ie the normal guy
[19:06:35] <labrador> In a ca setup
[19:06:49] <euouae> imbued?
[19:06:53] <euouae> you mean, it propagates?
[19:07:02] <labrador> actually it should get imbued to the second last guy or the sub-sub-sub....CA
[19:07:06] <labrador> euouae, ye
[19:07:14] <labrador> but I think imbued is also correct english
[19:07:25] <labrador> I'll just check
[19:07:32] <euouae> it may be, propagate is something I'm familiar with from physics
[19:07:40] *** Quits: GNUCracker (~gnu@vps-93-95-226-254.1984.is) (Remote host closed the connection)
[19:07:49] *** Joins: GNUCracker (~gnu@vps-93-95-226-254.1984.is)
[19:08:00] <labrador> To inspire or influence thoroughly; pervade.
[19:08:05] <labrador> Yeah I think that works here
[19:08:21] <labrador> Anyway the ownertrust in a trustsig isn't only for the root CA
[19:08:23] <labrador> I think
[19:08:36] *** Quits: GNUCracker (~gnu@vps-93-95-226-254.1984.is) (Remote host closed the connection)
[19:08:44] *** Joins: GNUCracker (~gnu@vps-93-95-226-254.1984.is)
[19:08:49] <euouae> I don't know why you're talking of CAs
[19:09:14] <labrador> euouae, because thats the place where this setup makes sense....using the right words makes it easier to understand
[19:09:27] <euouae> doesn't it also make sense for the wot?
[19:09:28] <labrador> The root ca is who you are signing a trustsig for
[19:09:33] <labrador> euouae, uh not really
[19:09:55] <labrador> Like even the manpage says that
[19:10:06] <euouae> what should I search for in the man page?
[19:10:16] <labrador> euouae, uh tsign?
[19:10:19] <labrador> Thats what it is
[19:10:24] <labrador> But its only like 3 lines
[19:10:43] <labrador> You'll get more info in openpgp's rfc which I think you've already read
[19:10:50] <euouae> I guess the wot refers to the global wot, there's no other, right
[19:11:07] <euouae> so when they're speaking of specializde communities, they don't mean the wot
[19:11:08] <labrador> euouae, there can be an infinite number of webs
[19:11:23] <euouae> ok then, how did you figure out that tsign is not for wot?
[19:11:23] <labrador> No specialized communities can use the wot
[19:11:53] <labrador> euouae, cuz its written there...and all mailing list discussions point to it being only for a ca setup
[19:12:04] <labrador> I have no idea what kinda confirmation you want euouae 
[19:12:26] <euouae>  I'm just trying to understand these things
[19:12:30] <labrador> oh
[19:13:35] <euouae> so the wot only works by signing others' keys
[19:13:48] <labrador> So first euouae I think one place where you're concept is wrong is in a WoT community. There's not singular WoT. Actually WoT as a term just means a web of trust. Not a particular web of trust. Like the global one with 55k keys
[19:13:52] <labrador> euouae, ye
[19:14:15] <euouae> wait, that is not the wot, that's the strong set of the wot
[19:14:18] <labrador> Thats an "instance" of a WoT
[19:14:24] <labrador> euouae, a strong set means nothing
[19:14:30] <euouae> it means a clique
[19:14:33] <labrador> Its just a term given to the largest pgp WoT
[19:14:42] <euouae> no you're thinking of cliques
[19:14:53] <euouae> a clique is a graph where every two nodes are connected
[19:15:13] <labrador> ok?
[19:15:18] <euouae> that's what they refer to as the strong set, and indeed there's more than one, but there's a big one with 55k (claimed) nodes
[19:15:30] <labrador> But that still means its just the largest clique
[19:15:32] <labrador> Not the only clique
[19:15:37] <labrador> yeah
[19:15:38] <euouae> a graph like A <-> B <-> C is not a clique for instance
[19:15:51] <euouae> the problem being that there's no connection between A and C
[19:16:15] <labrador> euouae, wait a minute then the strong set shouldn't be a clique should it? I think its just weird that some people are going on with 55k sigs
[19:16:22] <labrador> I think thats a little ridiculous
[19:16:34] <euouae> I think keyservers have it (or had it)
[19:16:49] <euouae> the idea was that if you trusted one key from the strong set, then you had access to all others if you so wished
[19:17:08] <euouae> and you also had access to all neighbors of the strong set too
[19:19:11] <euouae> also you don't have to sign 55k signatures to add yourself to the strong set
[19:19:19] <euouae> you can sign one only, and then use gpg's automation for the rest
[19:19:52] <euouae> I /think/ that idea was rubbished by the DoS attack. I'm not 100% sure 
[19:21:30] <labrador> euouae, yes it was because now no signatures are imported by default on gpg
[19:21:39] <labrador> So none of those 55k sigs mater
[19:21:42] <labrador> matter*
[19:22:31] <euouae> private instances of keyservers can still serve their purpose though
[19:22:35] <euouae> for organizations
[19:22:43] <labrador> well they can yeah
[19:22:54] <euouae> with strong sets and such
[19:23:24] <euouae> hmmm... thanks for the brainstorming
[19:24:32] <euouae> I think I'll ignore that trust stuff for now, it doesn't seem important
[19:24:45] <labrador> yeah
[19:25:15] *** Joins: nlhowell4 (~nlhowell@172.58.84.101)
[19:26:43] <euouae> labrador https://gnupg.org/gph/en/manual.html#AEN385 mentions trust is for WoT as well
[19:28:27] *** Quits: nlhowell3 (~nlhowell@172.58.84.0) (Ping timeout: 256 seconds)
[19:30:06] *** Quits: nielsdg[m] (~nielsdggn@2001:470:69fc:105::1:149b) (Quit: You have been kicked for being idle)
[19:35:17] <labrador> Well duh euouae this is the WoT trust model
[19:35:25] <labrador> There's many trust models
[19:36:22] <euouae> Ok I don't get why you said trust doesn't have to do with WoT 
[19:36:31] <euouae> and only spoke of CAs, what did I miss?
[19:36:37] <labrador> euouae, that was the CA trust model....
[19:36:58] <labrador> That is why I said that the CAs absolute trust doesn't apply to WoT
[19:37:35] <euouae> but why did you talk of the ca trust model
[19:38:11] <labrador> euouae, because trustsigs only make sense in the ca trust model
[19:38:35] <euouae> aha, okay
[19:38:38] <labrador> Another trust model is tofu euouae 
[19:38:43] <labrador> trust on first use
[19:38:50] <labrador> But remember
[19:39:03] <labrador> Ownertrust is a WoT concept
[19:39:10] <labrador> Key trust is the universal concept
[19:39:20] <euouae> how do you marginally trust a key in WoT? 
[19:39:46] <duxsco> i just use "trust-model direct"
[19:39:49] <labrador> euouae, that would be done by marginally ownertrusted people signing a key
[19:39:55] <labrador> But the number less than 3
[19:39:56] <labrador> default
[19:39:58] <duxsco> everything else doesn't make sense these days (IMHO)
[19:40:00] <labrador> You can change that
[19:40:13] <labrador> duxsco, WoT>CA
[19:40:25] <duxsco> WoT is dead
[19:40:32] <labrador> nah
[19:40:39] <labrador> I'd rather it not be centralize
[19:40:41] <labrador> d
[19:41:21] <labrador> Whats the point of encrypting if the NSA could just make the CA spoof a key
[19:42:00] <duxsco> and how do you share public keys with signatures?
[19:42:27] <labrador> duxsco, email them
[19:42:29] <labrador> DUh
[19:43:04] <duxsco> nice way to build up wot.
[19:43:04] <duxsco> not
[19:43:14] <labrador> duxsco, it works
[19:43:43] <duxsco> i a small group with your direct friends, perhaps
[19:43:58] <duxsco> something on a scale of cacert.org is dead
[19:44:05] <duxsco> and, this is what i am talking about
[19:45:33] <euouae> yeah I get that automation in wot doesn't scale
[19:46:16] <euouae> the direct model, ok, thanks. interesting
[19:46:29] <euouae> so I guess trust is assigned via --edit-key. but what is trust?
[19:46:56] <duxsco> euouae: this is how i do stuff https://github.com/duxsco/gpg-config-and-scripts
[19:48:03] <euouae> nice! thank you, I will read it
[19:49:00] <duxsco> my other gpg repos: https://github.com/duxsco?tab=repositories&q=gpg-
[19:49:04] <euouae> ah nice, you wrote a bash script to colorize the output
[19:49:15] <euouae> I mean, /that/ is a no-brainer. The output is so bad
[19:49:17] <duxsco> gpg-web-of-trust was just for fun, not serious
[19:50:53] <euouae> cool stuff. you might know https://github.com/drduh/YubiKey-Guide it's the one I used when I purchased my yubikey
[19:50:58] <duxsco> but, there i was thinking what to do of web of trust. the only thing i could think of was small scale WoT or the misuse of cacert.org
[19:51:33] <euouae> I don't know anything about cacert.org
[19:51:43] <duxsco> i prefer using a pinpad. thus, i am using a real smartcard with a reader, gpg-smartcard repo
[19:52:12] <duxsco> https://en.wikipedia.org/wiki/CAcert.org
[19:52:28] <euouae> yeah the pinpad is even better, are you also a fellow paranoiac or is this stuff actually useful for you
[19:53:23] *** Quits: nlhowell4 (~nlhowell@172.58.84.101) (Read error: Connection reset by peer)
[19:53:40] <euouae> myself, I mostly do this stuff for fun, as I enjoy learning more on cyber security and so on... so I need to be careful not to go too crazy. A yubikey is good enough for me
[19:54:06] *** Joins: nlhowell4 (~nlhowell@172.58.87.89)
[19:54:46] <duxsco> yeah, i try to use my smartcard for everything. missing things are luks decryption with smartcard upon boot and login with smartcard. dracut seem to support the first one in the newest release: https://github.com/dracutdevs/dracut/blob/2d83bce21bfc874b29c1fb99e8fabb843f038725/modules.d/91crypt-gpg/README
[19:54:52] <euouae> ah so CAcert.org is an attempt against the "CA mafia"
[19:55:15] <duxsco> smartcard login should be possible with poldi. unfortunately the last release is pretty old https://github.com/gpg/poldi
[19:56:14] <euouae> interesting. yes, those are good ideas
[19:56:21] <duxsco> i mean tag. which is from 2008...
[19:56:53] *** Joins: junebug (~junebug@2600:1700:3db0:2540:c800:b907:a7af:3732)
[19:56:56] <duxsco> currently, i use the smartcard for git signing, gopass and ssh logins
[19:57:13] <euouae> I do that too yeah
[19:57:22] <euouae> I use keepassxc myself
[19:58:05] <euouae> duxsco, https://fedoraproject.org/wiki/Using_Yubikeys_with_Fedora#Using_a_Yubikey_to_authenticate_to_a_machine_running_Fedora
[19:58:13] <euouae> That seems to be related to logging in with smartcard
[19:58:43] *** Joins: jealousmonk (~user@user/jealousmonk)
[19:58:54] <duxsco> euouae: i prefer nitrokey 3 https://www.nitrokey.com/news/2021/new-nitrokey-3-nfc-usb-c-rust-common-criteria-eal-6
[19:59:15] <duxsco> unfortunately, some features are not fully developed https://www.nitrokey.com/#comparison
[20:00:08] <euouae> yeah I know yubikey has its issues too
[20:01:04] <duxsco> i don't like yubikey being closed source
[20:01:32] <euouae> yup
[20:01:33] <euouae> https://www.nitrokey.com/sites/default/files/images/Teamfoto_1_KristallGesichter_stark.jpg
[20:01:35] <euouae> ^ lol
[20:01:48] <euouae> "The Team"
[20:03:43] <euouae> well the /good/ thing is that I'm not beholden to Yubico for using their yubikeys the way I do. So I can switch when I wish
[20:05:27] <euouae> but you said you're using a pinpad? does nitrokey make those?
[20:09:54] <duxsco> i flash my smartcard (https://github.com/duxsco/gpg-smartcard).
[20:10:01] <duxsco> reader drivers: 
[20:10:14] <duxsco> gnupg in-built: https://wiki.debian.org/GnuPG/CCID_Driver and https://wiki.gnupg.org/CardReader/PinpadInput
[20:10:24] <duxsco> ccid project: https://github.com/LudovicRousseau/CCID/
[20:11:21] <duxsco> or from the reader manufacturer: https://packages.gentoo.org/packages/dev-libs/cyberjack
[20:12:01] <euouae> wait, I thought you meant that there's an external pinpad
[20:12:04] <euouae> maybe I misunderstood, nevermind
[20:12:37] <euouae> let me look at those links
[20:12:47] <duxsco> i have this one: https://shop.reiner-sct.com/chipkartenleser-fuer-die-sicherheitsklasse-3/cyberjack-rfid-standard-usb-2718600000
[20:13:11] <duxsco> small, real buttons (you don't have to look to type)
[20:13:38] <duxsco> but, i recommend a reader supported by gnupg's built-in driver if you can get one
[20:13:59] <euouae> ah okay so you are using an actual reader
[20:14:09] <euouae> and I guess you have a smart card too?
[20:14:13] <duxsco> yes
[20:14:17] <euouae> because I was confused when you brought up the nitrokey stuff 
[20:14:46] <duxsco> i wanted to say that i prefer the nitrokey over the yubikey
[20:14:57] <euouae> got it, what smartcard are you using then?
[20:15:41] <duxsco> J3H145 https://github.com/duxsco/gpg-smartcard#prepare-the-system
[20:15:49] <labrador> euouae, yeah use a nitrokey
[20:15:57] <labrador> Its better than a yubikey
[20:16:23] <duxsco> got my card here https://www.smartcardfocus.com/shop/ilp/id~879/nxp-j3h145-dual-interface-java-card-144k/p/index.shtml
[20:16:45] <labrador> Also I'd like to put on another view on WoT. It did receive a huge blow when keyservers cannot be used but its still the best in terms of control
[20:17:00] <labrador> Like it eliminates the trusted third party
[20:17:08] <euouae> I don't know the exact benefit of using a smartcard & reader instead of a usb key with pin
[20:17:19] <labrador> While still verifying trust unlike tofu euouae 
[20:17:32] <labrador> Its the best combination of those two
[20:17:54] <duxsco> euouae: keylogger don't affect you as you type in the pin on the pinpad
[20:17:56] <labrador> And even sending individual emails can work with longer term keys
[20:18:04] <euouae> duxsco ah yeah, that's right :D
[20:18:12] <labrador> like my keys last for 5 years....how hard can it be to send an email every 5 years?
[20:18:13] <labrador> Right
[20:18:45] <duxsco> i extend my subkeys once every year
[20:18:56] <labrador> duxsco, uh ok
[20:19:18] <duxsco> i don't even use the usual keyserver. i have my own running on nginx https://github.com/duxsco/gpg-keyserver
[20:19:49] <duxsco> beside the keyserver i provide my keys over wkd and dane
[20:20:11] <labrador> I think wkd is a good solution to this absence of keyservers too
[20:20:13] <labrador> Nice reminder
[20:20:26] <labrador> If every domain has a wkd you don't need keyservers
[20:21:48] <duxsco> i think most people are used to "--recv-keys" which doesn't work with wkd. you have to use "--locate-keys" or "--locate-external-keys"
[20:22:49] <euouae> still the keylogger mitigation does not seem very important
[20:22:59] <euouae> assuming you activate the yubikey with touch
[20:23:22] <labrador> ey duxsco can your nitrokey encrypt stuff on it?
[20:23:29] <labrador> Like not expose it to the system and all?
[20:23:30] <euouae> it's still better, but if a program tries to use your yubikey without your knowledge, you might notice because your action was not taken when you touched it
[20:24:14] <euouae> labrador, I thought that's how they work
[20:24:46] <duxsco> labrador: i don't use the nitrokey. i just wanted to say that i would choose the nitrokey over the yubikey if i have to buy a usb stick
[20:25:22] <duxsco> but, i am happy with my smartcard and smartcard reader setup
[20:25:26] <labrador> duxsco, then lets talk about the yubikey....
[20:25:29] <duxsco> so, no need for a usb stick
[20:25:33] <labrador> Can it encrypt stuff on it?
[20:26:05] <euouae> actually on second thought, no
[20:26:13] <duxsco> i am not familiar with the yubikey. and, as it's closed source nobody knows how stuff is secured on the yubikey
[20:26:25] <duxsco> afaik
[20:27:03] <euouae> yubikeys do encrypt their own stuff, like HMACs, but when you use the pgp slots, I think they are just communicating your keys to gpg-agent 
[20:27:15] <euouae> so encryption happens on your computer
[20:27:32] <labrador> euouae, then that sucks
[20:27:37] <labrador> Whats the point lmao
[20:28:13] <euouae> well I'm not 100% sure, let me check 
[20:28:21] <euouae> I know the keys don't leave the yubikey 
[20:30:01] *** Joins: georgios (~georgios@user/georgios)
[20:30:44] <duxsco> nitrokey.com says: The Nitrokey contains an integrated smart card (based on Common Criteria 5-high certification) that stores and protects cryptographic keys (RSA-4096, ECC-256, AES-256). All sensitive cryptographic operations (e.g. generation of secret keys) are securely computed in the Nitrokey. The tamper-resistant design prevents sophisticated physical attacks with laboratory equipment.  An additional administrator PIN enables hierarchical use cases and t
[20:30:44] <duxsco> existing keys and backup of keys are possible.
[20:31:10] <duxsco> i have the same with my setup, but with a pinpad on the reader
[20:31:50] <duxsco> the "nitrokey start" and "nitrokey fido 2" is not tamper-resistant https://www.nitrokey.com/#comparison
[20:32:51] <euouae> ah that's right, that's how it works
[20:33:03] <euouae> yubikey/nitrokey support e.g. RSA4096 
[20:33:11] <duxsco> the question is: does the yubikey use a smartcard chip on the usb stick? or is it like the "nitroykey start" for exmaple
[20:33:21] <euouae> which is used for generating a password that then you feed into AES to encrypt
[20:33:36] <euouae> and the AES part is done on the computer. right?
[20:35:22] <euouae> hm, not sure. In any case, trying to encrypt stuff on a compromised computer doesn't work
[20:35:43] <labrador> euouae, could work if it did everything on the yubikey
[20:35:52] <duxsco> unfortunately, smartcard cards on the market don't support javacard 3.1, which is required for x25519 or x448 to be used. thus, i have a ed25519 primary key, nistp521 for sign/encrypt and nistp384 for authentication
[20:35:53] <labrador> Like take in file....spit out encrypted file
[20:36:01] <labrador> Don't leak any keys
[20:36:02] <euouae> labrador the computer is already compromised, the file is already compromised
[20:36:08] <labrador> euouae, hmmmm
[20:36:11] <euouae> the keys are not leaked
[20:36:16] <labrador> But like this is better
[20:36:20] <labrador> The file is leaked
[20:36:22] <labrador> Not the keys
[20:36:30] <labrador> More security if computer gets compromised
[20:36:37] <euouae> the way it works is that RSA-4096 is used to encrypt a blob; the blob is the passphrase for symmetric encryption like AES-256
[20:37:00] <euouae> there's no leakage of keys
[20:37:31] <labrador> euouae, yeah seems like it keeps the rsa keys intact so its fine
[20:37:35] <euouae> in public-key cryptography (asymmetric) you don't use the primitive to encrypt data; you encrypt a key
[20:37:42] <labrador> yeah ik that
[20:37:47] <labrador> Hybrid encryption
[20:38:04] <euouae> so that's how they get around it, they only support a few algorithms like rsa-4096 on the key (yubikey/nitrokey)
[20:38:16] <labrador> No ecc?
[20:38:20] <labrador> Weird
[20:38:32] <euouae> That's supported too probably, I don't know what ecc is 
[20:38:41] <euouae> my point is, the key doesn't do AES
[20:38:49] <labrador> euouae, uhh epilliptic curve cryptography
[20:38:51] <labrador> yeah
[20:39:17] <euouae> I haven't looked into ecc yet
[20:39:23] <labrador> oh
[20:40:06] <duxsco> euouae: here are my thoughts on ecc https://github.com/duxsco/gpg-smartcard#create-a-gnupg-keypair
[20:42:56] <euouae> I'm not losing my sleep over that stuff
[20:43:01] <euouae> if rsa is broken then whatever
[20:43:22] <labrador> RSA isn't broken
[20:43:37] <euouae> also the question of speed is not important for me
[20:43:37] <labrador> ECC is just more efficient. I say this while using RSA for all my keys
[20:43:53] <euouae> let them suffer while trying to verify my signatures
[20:43:59] <labrador> lmaoo
[20:45:09] <euouae> but my opinion is not important, I am not a cryptographer or anything :P
[20:50:27] <duxsco> i like how small ecc keys are
[20:53:08] <labrador> duxsco, efficiency is not very important for me too
[20:53:19] <euouae> that's valid. I was going to revoke my keys in a year so I'm sitting it out with rsa for now
[20:55:34] <duxsco> euouae: why do you want to revoke?
[20:56:10] <euouae> key hygiene
[20:56:24] <labrador> euouae, huh?
[20:56:40] <labrador> How much time for them to expire?
[20:56:48] <euouae>  a forward secrecy of period 1yr
[20:57:01] <labrador> euouae, then just let it expire
[20:57:03] <labrador> DOn't revoke
[20:57:15] <euouae> why not
[20:58:31] <euouae> this is stuff I was going to think about many months from now on, so I don't really care right now, but feel free to explain, maybe I got that wrong too
[20:59:06] <labrador> euouae, I read in the manual to let them naturally expire or people start distrusting you
[20:59:11] <labrador> Cuz you revoked so many keys
[20:59:18] <labrador> Seems like a careless person
[20:59:38] <euouae> even better of a reason to revoke them then
[20:59:53] <euouae> judgy people :< 
[21:00:09] <euouae> but in seriousness, I read the opposite, that revoking is better than expiring
[21:00:37] <euouae> you can't undo revoking
[21:02:15] <henk> when revoking you can specify a reason. and itâ€™s permanent, expiration is not.
[21:07:23] <euouae> ah wait a moment, now I see
[21:07:34] <euouae> I had set an expiration duration of 1year on my subkeys, and no expiration on my primary key
[21:08:19] <euouae> however, I do intend to also revoke the subkeys when their time is due
[21:08:56] <euouae> there's this https://security.stackexchange.com/questions/14718/does-openpgp-key-expiration-add-to-security/79386#79386 that explains things 
[21:17:56] <duxsco> the advantage of a real smartcard is that they are cheap on you just keep the old one should you need the old subkey for decryption. a new one is flashed with the new subkeys
[21:19:03] <euouae> yeah also javacards can be programmed
[21:19:32] <euouae> it's just one level more than what I'm willing right now. Although I might actually purchase the reader & card to play around with and learn some
[21:20:15] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 240 seconds)
[21:21:01] <duxsco> readers are cheap to get. i got me four different one to play around. i recommend getting a compact one, with real buttons to blindly push the buttons and support for gnupg built-in drivers if possible. if not, support for https://github.com/LudovicRousseau/CCID/. cyberjack drivers are good too
[21:22:40] <euouae> I didn't know there's a difference between ccid and gnupg drivers
[21:22:59] <duxsco> i use gentoo and gnupg built-in drivers are the only ones you can theoretically use to unlock initramfs created with genkernel
[21:23:09] <duxsco> dracut supports https://github.com/LudovicRousseau/CCID/
[21:23:18] <duxsco> no support for cyberjack to unlock upon boot
[21:23:40] <euouae> gnupg just has ccid internally?
[21:23:40] <duxsco> gnupg built-in driver come with gpg binary
[21:24:44] <duxsco> see "ccid" https://git.gnupg.org/cgi-bin/gitweb.cgi?p=gnupg.git;a=tree;f=scd;h=04afe9ce29d6441fec9bdd7b3c32a66e0374dea7;hb=HEAD
[21:25:54] <euouae> yeah you're right, they have a different driver than Rousseaou
[21:26:42] <duxsco> the full list: https://github.com/LudovicRousseau/CCID/blob/master/readers/supported_readers.txt
[21:27:17] <euouae> yeah so Rousseau's driver has a wider availability of supported readers
[21:27:22] <duxsco> with sections "# section: supported", "# section: shouldwork", "# section: unsupported"  etc
[21:28:06] <euouae> interesting stuff, thanks
[21:30:06] *** Joins: nlhowell (~nlhowell@172.58.84.111)
[21:30:17] <duxsco> and, it's convenient to attach a popsocket to your reader. helps holding it with one hand and the pinpad facing the table. so other can't see you typing https://www.amazon.de/s?k=popsocket&__mk_de_DE=%C3%85M%C3%85%C5%BD%C3%95%C3%91&crid=1IF6ACX95I1T9&sprefix=popsocket%2Caps%2C88
[21:30:47] *** Quits: two_oes (~two_oes@46-116-50-229.bb.netvision.net.il) (Quit: Leaving)
[21:32:36] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[21:33:26] *** Quits: nlhowell4 (~nlhowell@172.58.87.89) (Ping timeout: 260 seconds)
[21:34:22] *** Quits: herd (~herd@mta763.solicitae.com) (Read error: Connection reset by peer)
[21:34:41] *** Joins: herd (~herd@mta763.solicitae.com)
[21:37:25] <euouae> heh nice
[21:37:37] <euouae> so they're called popsockets... I had no idea
[21:39:38] <duxsco> i got this one because it was cheap :D https://www.amazon.de/Popsocket-Ausziehbarer-Sockel-Smartphones-Tablets/dp/B07NY39HQP/ref=sr_1_5?__mk_de_DE=%C3%85M%C3%85%C5%BD%C3%95%C3%91&crid=1ELFE5E9MHPXP&keywords=popsocket+lama&sprefix=popsocket+lama%2Caps%2C80&sr=8-5
[21:39:55] <duxsco> 5â‚¬
[21:39:59] <duxsco> at that time
[21:40:29] <euouae> no way, really? hahah
[21:40:38] <euouae> that's cute
[21:41:08] *** Joins: Narrat (~omnius@p200300df5f126b5206ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:49:09] *** Quits: junebug (~junebug@2600:1700:3db0:2540:c800:b907:a7af:3732) (Remote host closed the connection)
[21:49:34] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b54b:f8c3:ed3a:ac59)
[21:50:49] <euouae> alright, got to go. Thanks for the chat everyone
[21:50:55] *** Quits: euouae (~euouae@user/euouae) (Quit: got to go)
[21:53:01] <duxsco> bye. have to go, too
[21:54:41] *** Quits: duxsco (~Thunderbi@user/duxsco) (Quit: duxsco)
[21:55:35] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b54b:f8c3:ed3a:ac59) (Ping timeout: 250 seconds)
[22:11:37] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 240 seconds)
[22:13:35] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[22:19:38] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[22:22:27] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 272 seconds)
[22:22:30] *** lukedashjr is now known as luke-jr
[22:24:12] *** Joins: junebug (~junebug@2600:1700:3db0:2540:dc7f:3b1b:9adc:b400)
[22:32:12] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[22:35:01] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[22:35:02] *** lukedashjr is now known as luke-jr
[22:42:15] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 240 seconds)
[22:43:58] *** Joins: erle- (~stephan@2a04:ee41:3:3297:57dd:2068:14aa:69ae)
[22:50:07] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[22:50:51] *** Joins: Betal (~Betal@user/betal)
[22:52:36] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 240 seconds)
[22:53:49] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[22:55:35] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 240 seconds)
[23:02:26] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[23:24:47] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 256 seconds)
[23:25:58] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[23:32:17] *** Joins: phebus (~phebus@fsf/member/phebus)
[23:42:35] *** Quits: labrador (~labrador@user/labrador) (Quit: Leaving)
[23:45:02] *** Quits: junebug (~junebug@2600:1700:3db0:2540:dc7f:3b1b:9adc:b400) (Ping timeout: 240 seconds)
