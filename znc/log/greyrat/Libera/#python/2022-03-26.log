[00:00:57] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[00:01:50] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 272 seconds)
[00:02:33] *** Joins: pycurious (~Adium@user/pycurious)
[00:03:06] *** Quits: mmdbalkhi (~Thunderbi@2.186.4.2) (Ping timeout: 272 seconds)
[00:03:40] *** Joins: stockholm (~Andreas@p200300d2c70aa400b19d904a9cf374e7.dip0.t-ipconnect.de)
[00:04:32] *** Joins: a1eaiact1 (~a1eaiacta@user/a1eaiactaest)
[00:04:36] *** Joins: shad (~shad@user/shad)
[00:04:42] *** a1eaiactaest is now known as Guest5344
[00:04:42] *** Quits: Guest5344 (~a1eaiacta@user/a1eaiactaest) (Killed (calcium.libera.chat (Nickname regained by services)))
[00:04:42] *** a1eaiact1 is now known as a1eaiactaest
[00:05:51] *** Quits: shad (~shad@user/shad) (Client Quit)
[00:06:16] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[00:06:27] *** Joins: novns (~novns@user/novns)
[00:06:35] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[00:07:19] *** Joins: jpn (~jpn@user/jpn)
[00:08:05] *** Joins: Guest42 (~Guest42@78.174.2.240)
[00:08:10] *** Quits: Guest42 (~Guest42@78.174.2.240) (Client Quit)
[00:09:22] *** Quits: Giovanni (~Giovanni@46.106.252.219) (Remote host closed the connection)
[00:09:38] *** Joins: Giovanni (~Giovanni@46.106.252.219)
[00:11:03] *** Quits: Giovanni (~Giovanni@46.106.252.219) (Remote host closed the connection)
[00:13:20] *** Joins: mmdbalkhi (~Thunderbi@5.122.72.209)
[00:14:56] *** Quits: mmdbalkhi (~Thunderbi@5.122.72.209) (Client Quit)
[00:17:54] *** Joins: bart__ (~Xano@2a00:23c4:4204:700:4e94:8b1e:3e49:b121)
[00:18:17] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Ping timeout: 240 seconds)
[00:18:30] *** Joins: jmd (~user@de.cellform.com)
[00:19:53] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:19:54] *** Joins: humbertowoody (~humbertow@189.132.110.180)
[00:20:03] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[00:20:18] *** Quits: Xano_ (~Xano@217.146.87.162) (Ping timeout: 252 seconds)
[00:20:46] *** Joins: purple_cthulhu (~rax@user/purple-cthulhu/x-9868388)
[00:22:19] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[00:22:19] *** Joins: mvkvc (~mvkvc@141.117.116.251)
[00:22:43] *** Joins: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94)
[00:23:19] *** Quits: mvkvc (~mvkvc@141.117.116.251) (Client Quit)
[00:23:24] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[00:24:12] *** Quits: humbertowoody (~humbertow@189.132.110.180) (Ping timeout: 240 seconds)
[00:25:16] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 272 seconds)
[00:25:29] *** Joins: jmd_ (~jmdaemon@user/jmdaemon)
[00:25:32] *** Quits: bart__ (~Xano@2a00:23c4:4204:700:4e94:8b1e:3e49:b121) (Ping timeout: 268 seconds)
[00:25:43] *** Joins: humbertowoody (~humbertow@189.132.110.180)
[00:26:09] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 268 seconds)
[00:26:12] *** Parts: blissful (~blissful@user/blissful) (WeeChat 3.4.1)
[00:26:12] <ghost43_> Tritium: I've tracked it down. :) it's in distlib, vendored by pip. #pypa is not very active, but thanks to your tip I've found the code. https://github.com/pypa/distlib/issues/164
[00:26:57] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[00:27:07] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Read error: Connection reset by peer)
[00:27:32] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Remote host closed the connection)
[00:28:40] *** Joins: summersault (~summersau@179.221.251.36)
[00:29:16] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[00:30:19] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-18f6-e9d1-2e71-ac11.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:30:41] *** Joins: Joss (~joss@user/Joss)
[00:31:33] *** Joins: pedahzur (~jkugler@mobile-166-176-184-166.mycingular.net)
[00:32:37] *** Quits: Masklin (~joel@130.235.150.20) (Ping timeout: 240 seconds)
[00:32:53] *** Quits: Joss (~joss@user/Joss) (Client Quit)
[00:32:54] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[00:33:11] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[00:33:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:33:56] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:35:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:36:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:36:40] *** Joins: Donitz (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[00:36:40] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[00:36:41] *** Joins: Donitz2 (~Donitz4@88-115-149-215.elisa-laajakaista.fi)
[00:37:04] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[00:37:29] *** Quits: apeirony (~apeirony@5.165.236.210) (Quit: Leaving)
[00:38:21] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[00:39:14] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:39:30] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:39:51] *** Quits: Elzington (~Elzington@66.63.167.156) (Quit: Leaving)
[00:41:01] *** Joins: Axy (~Axy@user/axy)
[00:41:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[00:42:02] *** Quits: on^ (~on@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[00:42:16] *** Lord_of_Life_ is now known as Lord_of_Life
[00:43:24] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[00:44:24] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[00:45:22] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-18f6-e9d1-2e71-ac11.res6.spectrum.com)
[00:45:52] <altendky> https://github.com/pytest-dev/pytest-asyncio/issues/314 i've fiddled with this locally and also observed it in qtrio now.  did something change about how to include data files, `py.typed` in this case, in wheels?  `build` is putting it in the sdist but not the wheel.
[00:45:58] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-18f6-e9d1-2e71-ac11.res6.spectrum.com) (Client Quit)
[00:49:17] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[00:49:37] *** Quits: medecau (~medecau@2a02:1210:78da:cc00:ed8a:581d:7e6e:a5a9) (Quit: medecau)
[00:50:27] *** Quits: jpn (~jpn@user/jpn) (Quit: Lost terminal)
[00:50:31] *** Quits: jpodivin (~jpodivin@cgnat44-pool1-237-44.poda.cz) (Remote host closed the connection)
[00:51:42] *** Joins: Elzington (~Elzington@66.63.167.156)
[00:53:18] *** Quits: cincoswim (~cincoswim@24-52-65-147.telesystem.us) (Quit: WeeChat 2.8)
[00:53:59] *** Joins: ice9 (~ice9@user/ice9)
[00:53:59] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:479d:e278:f9a5:ef05) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[00:54:39] *** Joins: summersault (~summersau@179.221.251.36)
[00:54:49] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[00:55:57] *** Joins: Non-ICE (~lisse@20.89-11-139.customer.lyse.net)
[00:56:39] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:56:47] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 260 seconds)
[00:56:51] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:57:01] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[00:57:13] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:01:31] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:02:00] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[01:03:24] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[01:03:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:04:21] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:04:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:05:51] *** Joins: pkapp_ (~pkapp@2601:58c:c500:6900:b00:a2df:be8c:f524)
[01:06:02] *** Joins: humberto1 (~humbertow@189.132.110.180)
[01:06:29] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[01:07:31] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[01:08:57] *** Quits: humbertowoody (~humbertow@189.132.110.180) (Ping timeout: 240 seconds)
[01:09:16] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[01:10:54] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Ping timeout: 252 seconds)
[01:11:09] *** Joins: Auron (Auron956@cpc77395-ches6-2-0-cust905.9-1.cable.virginm.net)
[01:11:19] *** Quits: Auron (Auron956@cpc77395-ches6-2-0-cust905.9-1.cable.virginm.net) (Changing host)
[01:11:19] *** Joins: Auron (Auron956@user/auron)
[01:11:22] <AhmedAmerican> `tr[bgcolor=white] td:nth-child(5), td:nth-child(6)` is there a shorter way to select childs 5 and 6 directly ?
[01:11:41] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:11:54] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Client Quit)
[01:12:07] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:12:55] <SnoopJ> AhmedAmerican, is the length of that selector a problem?
[01:12:57] <KirkMcDonald> This seems like more of a CSS question than a Python question.
[01:13:07] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[01:13:09] <xavierd>   
[01:13:26] *** Joins: newpy (~newpy@2601:280:4381:1390:df05:c07d:331f:b2a3)
[01:13:35] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 260 seconds)
[01:13:39] <AhmedAmerican> SnoopJ: No, it's not but i thought there could be more shorter way for knowledge purpose.
[01:13:47] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[01:16:43] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[01:16:49] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:17:50] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 272 seconds)
[01:18:12] *** Quits: Staunch (~Staunch@134.238.165.172) (Remote host closed the connection)
[01:18:15] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:18:28] *** Quits: _h4x0r_ (~till@user/till/x-8616149) (Ping timeout: 272 seconds)
[01:18:42] <SnoopJ> nth-child(n+6) and select only the first two results, maybe? I don't see any point to changing what you have, anything else would be more confusing
[01:18:48] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[01:19:28] *** Joins: Auron (Auron956@user/auron)
[01:20:54] *** Joins: greaser|q (greaser@antihype.space)
[01:21:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:21:59] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[01:21:59] *** Joins: greaser|q (greaser@user/greasemonkey)
[01:22:03] *** greaser|q is now known as GreaseMonkey
[01:22:46] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[01:23:17] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 240 seconds)
[01:24:09] *** Joins: irc_user (uid423822@id-423822.lymington.irccloud.com)
[01:27:53] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[01:31:27] *** Joins: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is)
[01:31:37] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 240 seconds)
[01:32:09] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Remote host closed the connection)
[01:33:20] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[01:35:58] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[01:37:46] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[01:37:47] *** Quits: newpy (~newpy@2601:280:4381:1390:df05:c07d:331f:b2a3) (Quit: Leaving)
[01:38:17] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:535:e539:e5ca:5cf9) (Ping timeout: 240 seconds)
[01:39:37] *** Quits: Guest32 (~Guest32@2601:5c0:4201:1fc0::98a4) (Quit: Client closed)
[01:40:05] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[01:40:11] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[01:41:14] *** Quits: ps_ (~mad_moses@2a02:6d40:2348:4601:a49c:3cf4:d1bd:d1eb) (Quit: Leaving)
[01:42:19] *** Joins: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur)
[01:43:23] *** Joins: schumaml (~schumaml@p200300e2ef26950053c1821a43d17d29.dip0.t-ipconnect.de)
[01:43:25] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[01:43:29] *** Parts: purple_cthulhu (~rax@user/purple-cthulhu/x-9868388) ()
[01:43:44] *** Joins: piscvau (~odile@lfbn-gre-1-323-48.w90-112.abo.wanadoo.fr)
[01:43:58] *** Quits: piscvau (~odile@lfbn-gre-1-323-48.w90-112.abo.wanadoo.fr) (Client Quit)
[01:46:12] *** Quits: paul424 (~tom@ip-5-172-238-122.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[01:46:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:46:49] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:47:07] *** Stench is now known as Staunch
[01:47:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:47:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:48:31] *** Quits: Techcable (~Techcable@user/Techcable) (Remote host closed the connection)
[01:48:39] *** Joins: Techcable (~Techcable@user/Techcable)
[01:50:01] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[01:53:45] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:53:57] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 240 seconds)
[01:54:17] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[01:54:31] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:56:23] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[01:56:35] *** Joins: minip (~minip@user/minip)
[01:57:25] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[01:58:36] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4302:423d:8a3e:7573) (Ping timeout: 240 seconds)
[01:58:37] *** Quits: widp (~widp@2406:7400:73:dbbb:e902:a28:1954:6217) (Ping timeout: 240 seconds)
[02:00:12] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:01:31] *** Quits: Deknos (~someone@user/menace) (Read error: Connection reset by peer)
[02:01:36] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:14e7:f69e:a89e:f5fb)
[02:02:10] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:5dd8:11f2:46cd:3f4f)
[02:02:30] *** Joins: theo (~theo@user/theo)
[02:03:16] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 245 seconds)
[02:03:30] *** Joins: zacts (~zacts@user/zacts)
[02:05:25] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[02:05:54] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:14e7:f69e:a89e:f5fb) (Ping timeout: 252 seconds)
[02:06:00] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[02:06:28] *** Joins: widp (~widp@124.123.106.66)
[02:08:25] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (calcium.libera.chat (Nickname regained by services)))
[02:08:31] *** Joins: PJBoy (~PJBoy@user/pjboy)
[02:09:13] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[02:10:50] *** Quits: ckdCreations (~ckdCreati@147.55.133.142) (Read error: Connection reset by peer)
[02:11:05] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[02:11:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[02:12:12] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[02:12:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[02:13:16] *** Quits: PurpleBo_ (~purpleboo@047-040-214-188.res.spectrum.com) ()
[02:13:27] *** Joins: shuck (~shuck@user/shuck)
[02:14:02] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[02:14:02] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:14:31] *** Joins: pycurious (~Adium@user/pycurious)
[02:15:13] *** Joins: qlixed (~qlixed@181.44.129.13)
[02:17:23] *** Quits: shuck (~shuck@user/shuck) (Read error: Connection reset by peer)
[02:17:29] *** Joins: parv (~quass@user/parv)
[02:18:56] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[02:19:07] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[02:19:12] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:19:16] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 272 seconds)
[02:19:36] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[02:20:52] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[02:21:35] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[02:21:36] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:22:49] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[02:23:04] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[02:23:47] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[02:25:57] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[02:26:31] *** Joins: nomn (nomn@user/nomn)
[02:28:02] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[02:28:48] *** Joins: novusordo (~nostrasec@user/novusordo)
[02:29:03] *** Quits: kostkon_ (~androirc@2a02:587:a106:f8d0:5455:7996:42cf:6660) (Remote host closed the connection)
[02:29:34] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:29:40] *** Quits: wereii (~wereii@37.205.14.89) (Quit: ZNC - https://znc.in)
[02:30:00] *** Quits: magla (~gelignite@d5367a39.access.ecotel.net) (Quit: Stay safe!)
[02:30:37] *** Quits: novusordo (~nostrasec@user/novusordo) (Client Quit)
[02:30:46] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[02:31:53] *** Joins: blei100 (~blei@user/blei)
[02:32:05] *** Quits: BrokenCog (~BrokenCog@c-73-92-151-140.hsd1.ca.comcast.net) (Quit: leaving)
[02:32:42] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[02:33:53] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 256 seconds)
[02:35:49] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[02:36:19] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[02:36:50] *** Joins: wereii (~wereii@37.205.14.89)
[02:36:54] *** Quits: MasterK (~MK@86.127.26.176) (Remote host closed the connection)
[02:36:57] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:37:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[02:37:07] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 260 seconds)
[02:37:19] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[02:37:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:37:33] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[02:37:47] *** Joins: grooverman_ (~grooverma@189.110.77.226)
[02:38:02] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:38:08] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:38:24] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:39:33] *** Quits: grooverman (~grooverma@152.250.149.49) (Ping timeout: 256 seconds)
[02:41:29] *** Joins: filename (~kilitary@188.242.105.134)
[02:41:39] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:5dd8:11f2:46cd:3f4f) (Ping timeout: 252 seconds)
[02:42:04] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[02:44:36] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Remote host closed the connection)
[02:44:36] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[02:45:51] *** Quits: dallegos (~dallegos@191.97.196.147) (Remote host closed the connection)
[02:46:45] *** Joins: zacts (~zacts@user/zacts)
[02:48:02] *** Quits: zacts (~zacts@user/zacts) (Client Quit)
[02:48:59] *** Quits: dvx (~dvx@5.181.92.64) (Remote host closed the connection)
[02:49:01] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Ping timeout: 240 seconds)
[02:49:58] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[02:50:00] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[02:51:13] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[02:52:00] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:52:16] *** Joins: wakeup (~wakeup@user/wakeup)
[02:54:38] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[02:54:53] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:57:10] *** Joins: jpn (~jpn@user/jpn)
[02:57:16] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[02:57:55] *** Quits: aslicedbanjo (~aslicedba@host86-160-16-56.range86-160.btcentralplus.com) (Quit: Leaving.)
[02:58:00] *** Joins: ckdCreations (~ckdCreati@147.55.133.131)
[02:58:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:58:36] *** Joins: zacts (~zacts@user/zacts)
[02:58:39] *** Quits: zacts (~zacts@user/zacts) (Client Quit)
[02:58:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:59:12] *** Quits: jpn (~jpn@user/jpn) (Client Quit)
[02:59:13] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:59:31] *** Joins: jpn (~jpn@user/jpn)
[03:00:19] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[03:00:36] *** Quits: jpn (~jpn@user/jpn) (Client Quit)
[03:00:36] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[03:01:00] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 240 seconds)
[03:01:05] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[03:01:22] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[03:01:23] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 260 seconds)
[03:03:40] *** Joins: pycurious (~Adium@user/pycurious)
[03:03:58] *** Joins: jpn (~jpn@user/jpn)
[03:04:24] *** Quits: jpn (~jpn@user/jpn) (Client Quit)
[03:06:01] *** Joins: jpn (~jpn@user/jpn)
[03:06:13] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[03:06:55] *** Joins: hiroshi_ (~freedom@151.57.59.90)
[03:08:26] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[03:08:57] *** Quits: dreamon (~dreamon@pd9503f46.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[03:10:59] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[03:11:24] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[03:11:39] <BSaboia> Should we always prefer ' over " in Python?
[03:12:20] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:12:24] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[03:12:52] <blei100> probably, it takes up less space
[03:12:55] <SnoopJ> BSaboia, PEP 8 gives the guidance to "Pick a rule and stick to it" and this is pretty good advice
[03:13:03] <BSaboia> https://docs.python.org/2.0/ref/strings.html I read this but I cannot find an answer on style
[03:13:18] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:13:26] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[03:13:29] <BSaboia> SnoopJ, yeah. The project I am working now mixes both, and I will need to decide on single or double
[03:13:34] <SnoopJ> I tend to use "" by default because most of my strings may be user-facing (and I am more likely to use ' inside the string)
[03:13:38] <BSaboia> I will not leave it with both
[03:15:02] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:15:19] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving.)
[03:15:23] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[03:16:02] *** Joins: _0x00 (~0x00@user/0x00/x-6246543)
[03:16:25] *** Joins: dthpulse (~quassel@podciarou.sk)
[03:17:18] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[03:17:18] *** Joins: Siecje (~Siecje@97.111.200.190)
[03:17:30] <SnoopJ> BSaboia, many users (myself included) like to use a tool that handles formatting issues like this. Black is a popular one, and it tends to prefer " over '
[03:17:44] <SnoopJ> (but more importantly, the tool worries about it so *I* don't have to)
[03:17:49] <parv> In text on console & files (not code), " are easier to notice
[03:17:56] *** Quits: MerrinX (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[03:18:05] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:18:16] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:18:24] <Shapeshifter> Hi. Is there some way to get the bash completer into readline within python? What I mean is, I would like to use the python readline library, but it should tab-complete like native bash.
[03:19:22] <SnoopJ> Shapeshifter, what are you tab-completing?
[03:19:26] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[03:19:36] <parv> ... that leaves to use ' in code wherever possible
[03:20:35] <Shapeshifter> SnoopJ: whatever, Basically, it should 'feel like bash'. But what I want to do is intercept stdin/stdout to the shell so I can restrict commands or give feedback on return values. It's for education.
[03:21:14] *** Joins: kts_ (~kts@103.73.237.112)
[03:21:17] *** Quits: kts (~kts@103.73.237.196) (Ping timeout: 240 seconds)
[03:21:35] <SnoopJ> Shapeshifter, the `readline` module is worth knowing about, although I don't think there's any immediate way to defer the completion to bash if that's what you mean https://docs.python.org/3/library/readline.html
[03:21:39] <Shapeshifter> Ah I found this https://pypi.org/project/bash-completion/
[03:21:55] <Shapeshifter> SnoopJ: yes, I'm using readline.
[03:21:57] <SnoopJ> if you want to write your own completion behavior that is "like" bash, though, that module may be handy indeed
[03:22:42] *** Joins: raxor2k (~raxor2k@3.109-247-153.customer.lyse.net)
[03:22:58] *** Joins: junebug (~junebug@2600:1700:3db0:2540:c5b0:9800:8007:e7b5)
[03:22:59] *** Joins: Bandicoot_ (~bandicoot@212.58.114.93)
[03:23:06] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Quit: Leaving)
[03:23:08] *** Quits: Bandicoot_ (~bandicoot@212.58.114.93) (Remote host closed the connection)
[03:23:11] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 256 seconds)
[03:23:29] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[03:24:07] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[03:24:52] *** Quits: Donitz2 (~Donitz4@88-115-149-215.elisa-laajakaista.fi) (Quit: Leaving)
[03:25:01] *** Joins: elb0w (~elb0w@pool-98-109-49-7.nwrknj.fios.verizon.net)
[03:25:44] *** Joins: grooverman (~grooverma@152.250.164.233)
[03:26:28] *** Quits: sharksauce (~sharksauc@user/sharksauce) (Quit: Why do you keep going into our closet?)
[03:26:50] *** Joins: sharksauce (~sharksauc@user/sharksauce)
[03:27:16] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:27:31] *** Joins: zacts (~zacts@user/zacts)
[03:28:55] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[03:29:11] *** Quits: hiroshi_ (~freedom@151.57.59.90) (Quit: hiroshi_)
[03:29:25] *** Quits: elb0w (~elb0w@pool-98-109-49-7.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[03:29:34] *** Quits: grooverman_ (~grooverma@189.110.77.226) (Ping timeout: 272 seconds)
[03:31:34] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[03:31:50] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:32:15] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[03:33:34] <AsenMx> Hello, where I can ask for a code reviw? Is this channel suitable for such things?
[03:33:46] <SnoopJ> AsenMx, sure
[03:33:54] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[03:33:55] *** Joins: awmv (~awmv@mob-194-230-148-91.cgn.sunrise.net)
[03:34:39] <awmv> How do I over engineer this more so that nobody understands it? https://bpa.st/PT3A
[03:35:22] *** Quits: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl) (Quit: leaving)
[03:35:22] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:535:e539:e5ca:5cf9)
[03:35:55] <AsenMx> SnoopJ, how to do that properly? Is giving link to repository enough?
[03:36:11] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[03:36:14] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[03:36:47] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[03:36:48] <SnoopJ> AsenMx, if you're looking for review of a particular bit of the project, it would be helpful to describe what you'd like the reader to focus on, too
[03:37:05] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Read error: Connection reset by peer)
[03:37:10] *** Quits: tazle (tazle@kapsi.fi) (Ping timeout: 272 seconds)
[03:37:23] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[03:37:30] *** Quits: raxor2k (~raxor2k@3.109-247-153.customer.lyse.net) (Remote host closed the connection)
[03:37:40] *** Joins: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl)
[03:37:41] *** Quits: nanonyme (nanonyme@kapsi.fi) (Ping timeout: 250 seconds)
[03:37:47] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[03:37:51] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:38:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:38:26] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 272 seconds)
[03:39:10] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:39:55] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[03:40:35] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[03:41:19] *** Quits: pedahzur (~jkugler@mobile-166-176-184-166.mycingular.net) (Ping timeout: 256 seconds)
[03:42:40] *** Joins: blissful (~blissful@user/blissful)
[03:42:50] *** Joins: tazle (tazle@kapsi.fi)
[03:43:02] <hodapp> awmv: wut, why are you trying to make eit less comprehensible?
[03:43:12] *** Joins: nanonyme (nanonyme@kapsi.fi)
[03:43:35] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 256 seconds)
[03:44:00] *** Quits: Siecje (~Siecje@97.111.200.190) (Remote host closed the connection)
[03:44:47] *** Quits: stockholm (~Andreas@p200300d2c70aa400b19d904a9cf374e7.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[03:44:50] <blissful> My `pip install -e` command isn't installing to $PYTHONUSERBASE. But `pip install` does install to $PYTHONUSERBASE. Does anyone know why this is or how I could have `pip install -e` write to $PYTHONUSERBASE?
[03:44:52] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[03:45:41] *** Joins: comet23 (comet23@user/comet23)
[03:45:43] *** Joins: jpn (~jpn@user/jpn)
[03:46:23] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: I'm a quit message virus. Please replace your old line with this line and help me take over the world. <screw you aloo_shu my old line was better and more creative!>)
[03:46:35] <comet23> hello python! how do i make it so that i don't get an out of range error? https://bpa.st/EB6Q
[03:46:36] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:47:50] *** Quits: d3sync (~d3sync@212.251.16.252.dsl.dyn.forthnet.gr) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:48:23] <grym> comet23: `for first, second in zip(lst, lst[1:]): if first==second==3 ...`
[03:48:31] <blissful> Nvm, found a thread here https://github.com/pypa/pip/issues/7953
[03:48:47] <SnoopJ> comet23, you're going out of range because enumerate(lst) will go all the way up to (len(lst)-1) which is the maximum index. You are adding one to your index, so on the last element, you will be out of range.
[03:48:49] <comet23> grym how does zip work in that ocntext
[03:49:35] <grym> comet23: the same way it normally does
[03:49:37] <SnoopJ> comet23, zipping a sequence with an offset version of itself is often a useful way to work on pairs of values when that's what you want to do
[03:49:42] <grym> here it gives you the list and the list offset by one
[03:50:07] <SnoopJ> `zip(lst, lst[1:])` is going to give you every pair (lst[idx], lst[idx+1]), and won't go out of range
[03:50:18] <comet23> that's brillian
[03:50:20] <comet23> t
[03:50:36] *** Quits: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94) (Quit: Konversation terminated!)
[03:50:37] <SnoopJ> it's a lovely little spelling once it's made a groove in your brain :)
[03:50:38] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[03:50:51] <SnoopJ> maybe a little hard to discover naturally, though
[03:51:02] <comet23> i still don't get it i'm going to run it right now
[03:51:06] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[03:51:14] *** Joins: zln (~zln@c83-249-48-11.bredband.tele2.se)
[03:52:42] <bjs> comet23: zip([a,b,c], [1,2,3]) == [(a,1), (b,2), (c,3)]
[03:53:07] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[03:53:15] <bjs> it "zips" up two sequences into one where the elements get paired together
[03:53:47] <comet23> but how does that give me the index
[03:54:01] <bjs> comet23: why do you need the index.
[03:54:17] <comet23> so i can tell which number is next to another number
[03:54:23] <comet23> like is 3 next to a 3
[03:54:40] <bjs> comet23: zip([a,b,c,d,e], [b,c,d,e]) == [(a,b), (b,c), (c,d), (d,e)]
[03:54:47] <bjs> no indexes needed
[03:55:09] <parsnip> 1,3,3 ==> (1,3), (3,3)
[03:55:18] <parsnip> reveals that 3 and 3 are adjacent
[03:55:36] <SnoopJ> parsnip, repeating a value makes it kind of hard to see what's going on here
[03:55:56] <parsnip> 1,3,4,5 ==> (1,3),(3,4),(4,5), no repeats
[03:56:03] <parsnip> ^
[03:56:06] <comet23> i'm so confused lol
[03:56:11] <bjs> comet23: at which part
[03:56:20] <comet23> my adhd isn't following any of it
[03:56:52] <parsnip> comet23: do you get what the does the previous zip does to (1,3,4,5)?
[03:57:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[03:57:08] <parsnip> it zips (1,3,4) with (3,4,5)
[03:57:11] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[03:57:17] *** Quits: blei100 (~blei@user/blei) (Quit: Client closed)
[03:57:17] <bjs> comet23: so the problem with your loop is that you try to use index+1 but also try to loop over every element.  You can make the loop stop before the end (i.e. `enumerate(lst[:-1])`)
[03:57:23] <parsnip> so the adjacency is represented sufficiently in the resulting zip
[03:57:36] *** Joins: blei19 (~blei@user/blei)
[03:58:15] <bjs> comet23: but you don't need the index at all, because you can use zip() to create a sequence of pairs like in my example.  zip([a,b,c,d,e], [b,c,d,e]) will give you [(a,b), (b,c), (c,d), (d,e)] i.e. the current and next
[03:58:20] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[03:58:34] *** Quits: fuze (uid76888@id-76888.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:58:59] *** Quits: junebug (~junebug@2600:1700:3db0:2540:c5b0:9800:8007:e7b5) (Quit: Leaving)
[03:59:09] <comet23> but given [3, 1, 3] it will return True instead of False
[03:59:15] <bjs> comet23: what is "it"?
[03:59:17] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[03:59:26] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[03:59:27] <comet23> it the programming language python?
[03:59:29] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[03:59:35] *** Joins: pycurious (~Adium@user/pycurious)
[03:59:36] <bjs> comet23: I'm not sure what you mean,  what would return True?
[04:00:03] *** Joins: Xano (~Xano@host86-157-207-90.range86-157.btcentralplus.com)
[04:00:07] <comet23> if i have a list that has the items [3, 1, 3] it will return True
[04:00:12] <grym> comet23: my zip example would return false; there are two threes in that list but they're not next to each other
[04:00:22] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:00:24] <bjs> comet23: what would return true? you keep saying "it"
[04:00:32] <comet23> it meaning python
[04:00:50] <comet23> i guess my if statement has the wrong logic
[04:00:54] <parsnip> 3,1,3 ==> (3,1),(1,3)
[04:00:57] <parsnip> comet23: ^
[04:00:58] <bjs> comet23: are you trying to say, the code you have written or some other code you haven't written if you wrote it would return True?
[04:01:00] <comet23> for idx, item in zip(lst, lst[1:]):
[04:01:05] <grym> comet23: dunno, you haven't told us what the goal is :)
[04:01:06] <comet23> if item == 3 and lst[idx + 1] == 3:
[04:01:14] <bjs> comet23: or are you trying to say, you want it to return True? or are you saying it shouldn't return True?
[04:01:17] <comet23> the goal is to check if there is a 3 next to a 3
[04:01:17] *** Joins: aknot (~aknot@2603-900a-1503-17bb-af5b-753c-973f-2400.inf6.spectrum.com)
[04:01:35] <bjs> comet23: [3,1,3] doesn't look like there's a 3 next to a 3 to me
[04:01:39] <parsnip> we should convince them with a proof
[04:01:42] <Repiphany> zip doesn't give you an index
[04:01:56] <Repiphany> You don't index anything when iterating over zip(...)
[04:02:09] *** Joins: jpn (~jpn@user/jpn)
[04:02:16] <comet23> https://bpa.st/NRHA
[04:02:17] <parsnip> you don't need the index, it's not needed with the zip approach
[04:02:19] <parsnip> they are skeptical
[04:02:32] <comet23> i'm not skeptical i just don't know how to check without the index
[04:02:36] *** Quits: schumaml (~schumaml@p200300e2ef26950053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:02:38] <Repiphany> `lst[idx + 1]` is wrong
[04:02:51] <parsnip> comet23: don't call it idx, it's not an index
[04:03:02] <parsnip> comet23: the zip gives you each successive adjacent pair
[04:03:02] <comet23> so how would i check if there is a 3 next to a 3 with the zip approach
[04:03:09] <bjs> comet23: zip doesn't return the index, `for first, second in zip(lst, lst[1:])` then `if first == second == 3: return True`
[04:03:09] <parsnip> you look at each adjacent pair
[04:03:32] * parsnip nods at `first, second` naming
[04:03:47] <grym> comet23: https://bpa.st/G7AQ
[04:04:15] <bjs> grym: that doesn't look right
[04:04:17] <comet23> based on what you're saying you mean something like this?  if val1 == 3 and val2 == 3:
[04:04:21] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[04:04:30] <parsnip> sure, that's fine
[04:04:45] <parsnip> it looks equivalent to their examples
[04:04:48] <comet23> https://bpa.st/DSLA
[04:04:52] <grym> bjs: derp
[04:05:08] <parsnip> yes
[04:05:13] <comet23> i can't believe i'm becoming fluent in nerd talk... i haven't been this happy with something so small in a long time =D
[04:05:27] <parsnip> grym: lol
[04:05:29] <comet23> i mean i'm happy i was able to understand what you were saying to figure out a solution
[04:05:48] <comet23> i love you guys <3
[04:05:58] <parsnip> grym only wants to know if the last pair are 3
[04:06:14] <parsnip> ;-)
[04:06:31] <comet23> it's a homework problem i just don't know enough about python to make it work the way i want to just yet
[04:06:37] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[04:06:55] <grym> comet23: https://bpa.st/AYFQ that's less wrong :D
[04:07:19] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Read error: Connection reset by peer)
[04:07:38] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[04:07:48] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[04:07:49] *** Joins: wyclif (~wyclif@user/wyclif)
[04:07:50] <parsnip> comet23: for extra credit, use a more functional approach, like `any` or `all`
[04:08:06] *** Joins: comet2374 (comet23@user/comet23)
[04:08:16] *** Joins: Guest22 (~Guest22@68.200.17.244)
[04:08:20] *** Quits: comet23 (comet23@user/comet23) (Killed (NickServ (GHOST command used by comet2374)))
[04:08:25] *** comet2374 is now known as comet23
[04:08:27] <grym> yeah, i wrote that one too but figured that's a bit of a firehose :D
[04:08:48] *** Quits: Guest22 (~Guest22@68.200.17.244) (Client Quit)
[04:08:49] <comet23> is there a reason to store a boolean in a variable
[04:09:07] <ChrisWarrick> comet23: why would there not be a reason to?
[04:09:09] <comet23> instead of returning True or False
[04:09:21] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[04:09:30] <parv> comet23, grym's example does not use early-exit, unlike yours
[04:09:35] <comet23> in my code i just return True or False whereas grym's code he returns a variable
[04:09:44] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[04:09:48] <parv> s/use/do/
[04:10:04] <comet23> i thought early exits were good for efficiency
[04:10:08] <comet23> that's what someone told me
[04:10:20] <bjs> comet23: maybe you're worrying about the wrong things
[04:10:24] <InPhase> Overengineered solution:  https://bpa.st/THUQ
[04:10:39] <anddam> Repiphany, jinsun: https://termbin.com/m714d
[04:11:01] <anddam> this is how I digested your suggestions, it's incomparably faster
[04:11:19] <anddam> well it is comparable, tens of seconds vs. tens of minutes for N=2e6
[04:11:23] <InPhase> comet23: Yeah, the early exit is pretty reasonable for this problem I think.
[04:11:36] <comet23> bjs i'm not worried about it i was just critiqued on my code in javascript before and they said an improvement every time i have a pattern like this is to exit early
[04:11:48] <grym> it's really a matter of taste, i think
[04:11:56] <grym> getting correct functionality is more important
[04:12:09] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[04:12:13] <grym> the version with any() will short circuit
[04:12:39] <comet23> InPhase your code is very hard to read and understand for me
[04:12:53] <bjs> I think InPhase wanted it to be :P
[04:13:06] <comet23> the whole << 1 != 0 throws me off
[04:13:22] <grym> it throws me off too :P
[04:13:24] <comet23> it's crazy how he knows how to do that
[04:13:24] <bjs> comet23: << is bitwise shift.  0b01010 << 1 == 0b10100
[04:13:40] *** Quits: finsternis (~X@23.226.237.192) (Read error: Connection reset by peer)
[04:13:40] <comet23> how do you know when to use those that's really impressive
[04:13:42] <grym> `return any(first == second == 3 for first, second in zip(lst, lst[1:])`  is a nice little tidy one-liner though
[04:13:54] <grym> i have never used bitshifting in real life
[04:13:56] <grym> like, ever
[04:14:08] <bjs> comet23: well numbers are made of bits, and bits are like little booleans and grym's solution had a boolean
[04:14:28] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:14:34] <bjs> so using numbers is like computing all of the booleans and then the final shift + bitwise AND to do the adjacency check
[04:14:47] <comet23> that's crazy
[04:14:52] <comet23> i wanna become that good at programming
[04:14:53] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[04:15:01] <parsnip> maybe you could also do the "previous" trick, avoiding functional or zip
[04:15:07] *** Quits: awmv (~awmv@mob-194-230-148-91.cgn.sunrise.net) (Quit: Client closed)
[04:15:11] <grym> knowing when not to go golfing is a good skill :P
[04:15:12] <bjs> I'm sure InPhase wouldn't feel too insulted if I debate the word "good" for that solution :D
[04:15:16] *** Joins: Pickchea (~private@user/pickchea)
[04:15:28] <parsnip> for each value, check if equal to the previous, if so, exit, if not, update "previous"
[04:15:30] <InPhase> bjs: Even I wouldn't use the solution I posted.  Feel free.  ;)
[04:15:50] <anddam> Repiphany, jinsun: not even tens of seconds, real    0m3.956s
[04:15:57] <comet23> but it's amazing how you were able to come up with it it's super creative to say the least
[04:17:26] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[04:17:39] <parsnip> comet23: https://dpaste.org/fMD3
[04:17:49] <InPhase> Code golf solution:  https://bpa.st/6FAA
[04:18:10] *** Quits: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is) (Quit: WeeChat 3.4)
[04:18:19] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[04:18:53] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[04:18:53] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:19:22] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[04:20:02] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:20:04] <comet23> is code golf necessary for becoming a good developer?
[04:20:10] <parsnip> better naming: https://dpaste.org/1H4E
[04:20:15] *** Quits: jpic (~jpic@145.224.76.42) (Ping timeout: 260 seconds)
[04:20:32] <parsnip> it doesn't have to be framed as code golf
[04:20:53] <parsnip> it is good to eventually be comfortable with that functional style
[04:20:54] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: cvmn)
[04:20:57] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[04:20:57] <bjs> comet23: if a developer golfs during work hours they will soon find themselves golfing in their spare time
[04:20:57] <InPhase> comet23: Usually code golf solutions lack clarity, and are not recommended.  (Although that particular one isn't too bad.)  Code golfing is more of a mental exercise puzzle to get comfortable with edge cases of a language.
[04:20:58] <comet23> idk how else you'd call writing code as short as possible
[04:21:00] <parsnip> "why not both"
[04:21:01] <EdFletcher> too much golfing can actually make one a worse developer
[04:21:19] <EdFletcher> you don't want to be golfing with code you need to have reviewed by others, for example
[04:21:25] <grym> bjs: ouch :)
[04:21:27] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:21:30] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[04:21:42] <parsnip> comet23: most of us will find that pretty readable, though short
[04:21:43] <hodapp> bjs: whoa, you mean they'll get promoted to management?
[04:21:47] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[04:21:51] <comet23> bjs how is golfing at work and in your spare time a problem?
[04:22:08] <parsnip> comet23: sometimes efforts are made to make code short, that begin to ofuscate
[04:22:10] <comet23> parsnip i can't read that it's very confusing for me haha
[04:22:32] <bjs> comet23: golfing == writing shortest code as possible;  at work hours => will no longer work there,  so you'll be doing it in your spare time instead ;)
[04:22:37] <grym> comet23: the joke bjs was making is that if you write inscrutable code at work, you'll get fired
[04:22:44] <parsnip> comet23: likely eventually you'll be fine with `any` and `zip` like that
[04:22:51] <hodapp> also, "making code shorter" and "making the code as short as possible" are... kinda both code golf but sometimes pretty far apart
[04:22:56] *** Quits: TheCat (~TheCat@user/z-cat) (Quit: Leaving)
[04:23:19] <parsnip> to an extent, making code shorter can make it more readable
[04:23:20] <EdFletcher> comet23: ultimately we write code for other humans, not the machine right? so writing extremely terse-but-obtuse code makes it a lot harder for other humans to read, whereas the machine doesn't care. so at work, writing golfy code will make your colleagues hate you, and as bjs notes, you'll likely be out real-golfing a lot more when you get fired
[04:23:20] <EdFletcher> :)
[04:23:40] <comet23> haha
[04:23:50] <InPhase> Numpy solution:  https://bpa.st/226Q
[04:23:54] <bjs> making code shorter can often make it more readable and easier to understand, a 1,000 line file might be easier to understand as a slightly clever 100 line file. But turning it into a 1 line file might be a bad idea
[04:24:01] <comet23> i swear golf code was real programming when i was first learning until i saw github
[04:24:17] <EdFletcher> (although real golf is actually pretty expensive unless you play at municipal courses, so if you're unemployed you probably won't be doing much of that either!)
[04:24:23] *** Joins: TheCat (~TheCat@user/z-cat)
[04:24:38] <hodapp> real golf is a pox on humanity and a waste of land
[04:24:38] <parsnip> i thought golfers were unemployed
[04:24:39] <bjs> InPhase: I feel like a project euler problem coming,  to detect if a given positive integer has two consecutive 3 digits in its base 10 representation
[04:24:41] <comet23> like i thought that's what real programming was like trying to understand minified code and writing code that looks minified
[04:25:06] <parsnip> is miniature golf just a small pox and a small waste?
[04:25:10] <EdFletcher> parsnip: no most of them are out on the course during the day "taking meetings", it's "where business gets done"... or something
[04:25:13] <bjs> InPhase: where you do mod some random prime, and if it's 17 you know it's true or some crazy number theory result :P
[04:25:15] <hodapp> small pox?!
[04:25:26] *** Joins: Masklin (~joel@130.235.150.20)
[04:25:56] <EdFletcher> seriously, a single round of golf at high-end country clubs can be over $300. and that's not including the $200k membership fee or the $50k-year "upkeep" fees!
[04:26:00] <parsnip> comet23: there is an aspect of programming, but that's not the main focus
[04:26:23] <parsnip> comet23: consider reverse engineering, or deliberate code obfuscation
[04:26:34] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 272 seconds)
[04:26:43] <parsnip> but usually you want to write readable code
[04:26:58] <bjs> generally you write readable code, and generate unreadable versions of it
[04:26:58] *** Joins: _h4x0r_ (~till@user/till/x-8616149)
[04:27:06] <comet23> so when i'm going to be learning about reverse engineering i will become a lot better at code golf
[04:27:08] *** Joins: jpic (~jpic@145.224.76.90)
[04:27:14] <parsnip> but often you have to struggle to read code... like even your own from last month
[04:27:24] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[04:27:25] <hodapp> my sister lives adjacent to a country club, and has to deal with drunk idiot golfers landing golf balls on her yard and then bitching to management about how this is her fault
[04:27:36] <EdFletcher> lol yup
[04:27:49] <comet23> so if i'm able to understand code i wrote years ago that means i'm doing it wrong?
[04:28:07] <hodapp> comet23: that means you're probably doing it right :P
[04:28:17] <EdFletcher> yup other way 'round, means you did it right
[04:28:27] <bjs> in practice it usually means you weren't doing anything very fun :)
[04:28:33] <EdFletcher> haha truth
[04:28:42] <parsnip> i think comet23 is actually nedbat
[04:28:47] <comet23> i wish
[04:28:52] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:77e5:8ad4:39a2:4500)
[04:28:53] <comet23> nedbat is nice and a genius
[04:28:55] <InPhase> comet23: When you come back to old code and you can figure it out quickly, it probably means do more of that.  The stuff you come back to and it no longer makes sense, aim to do less of that.  :)
[04:28:55] <hodapp> on the contrary, code that I write for personal projects tends to be the code that I document copiously
[04:29:03] <hodapp> because I don't know when I'll have a good chance to pick it up again
[04:29:13] <comet23> parsnip i look up to nedbat :)
[04:29:33] <parsnip> sounds good
[04:30:24] <parsnip> y'know
[04:30:29] <parsnip> if you want to use an index, that's fine
[04:30:38] <parsnip> you might consider it easiest to read
[04:31:22] *** Joins: comet2341 (comet23@user/comet23)
[04:31:39] *** Quits: comet23 (comet23@user/comet23) (Killed (NickServ (GHOST command used by comet2341)))
[04:31:45] *** Quits: Xano (~Xano@host86-157-207-90.range86-157.btcentralplus.com) (Ping timeout: 256 seconds)
[04:31:46] *** comet2341 is now known as comet23
[04:32:16] *** Joins: hams (~hams@73.232.205.0)
[04:32:16] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[04:32:16] *** Joins: hams (~hams@user/hams)
[04:32:24] <comet23> i keep disconnecting =/
[04:33:03] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[04:35:20] *** Joins: jpn (~jpn@user/jpn)
[04:35:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:36:18] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:37:14] <parsnip> https://bpa.st/ZO7A
[04:37:27] <FunkyBob> hmm... t he issue I have with pandas is... all of its clever tricks with slices/indexing/lookups... make it feel like another language
[04:37:31] <parsnip> more bug prone though
[04:37:33] <FunkyBob> and I'm never sure if it's doing what I want
[04:38:03] <FunkyBob> makes me feel like I'm back in Perl :/
[04:38:42] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[04:39:31] *** Joins: schumaml (~schumaml@p200300e2ef26950053c1821a43d17d29.dip0.t-ipconnect.de)
[04:39:44] *** Joins: Lindrian (~Lindrian@about/regex/lindrian)
[04:40:02] *** Parts: Lindrian (~Lindrian@about/regex/lindrian) (WeeChat 3.4)
[04:40:17] *** Quits: Vision (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 240 seconds)
[04:40:38] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[04:41:42] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[04:42:42] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:42:46] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[04:43:10] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[04:43:30] <hodapp> I'm not sure I ever saw an approach to indexing that concisely improved on that
[04:43:35] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[04:44:47] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 256 seconds)
[04:46:07] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[04:46:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:46:54] *** Joins: eahm (~z@23.234.200.144)
[04:47:33] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:48:41] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[04:48:44] *** Quits: vlado (~vlado@181.50.79.237) (Ping timeout: 272 seconds)
[04:48:51] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:48:57] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[04:49:04] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:50:39] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[04:51:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:52:09] *** Quits: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[04:52:47] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:52:50] *** Parts: eahm (~z@23.234.200.144) ()
[04:53:58] *** Quits: irc_user (uid423822@id-423822.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:54:15] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[04:54:28] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[04:54:53] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[04:54:59] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[04:56:33] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[04:56:46] *** Joins: spithash (~spithash@user/spithash)
[04:56:58] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[04:57:41] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[04:58:15] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[04:58:42] <anddam> this works but is a bit dull https://termbin.com/21rd
[04:58:53] <anddam> what's a more "elegant" approach?
[04:59:07] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Quit: Leaving)
[04:59:14] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Client Quit)
[04:59:48] *** Quits: julia__ (~quassel@user/julia) (Ping timeout: 240 seconds)
[04:59:59] <SnoopJ> hodapp, FunkyBob I think numpy's indexing is quite elegant. Pandas is a little too much to keep in my brain if I'm not currently using it
[05:01:10] *** Joins: julia (~quassel@user/julia)
[05:01:54] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[05:02:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[05:02:24] *** Joins: zacts (~zacts@user/zacts)
[05:06:57] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Quit: %bye mirc%)
[05:07:33] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[05:09:25] *** Joins: medecau (~medecau@2a02:1210:78da:cc00:ed8a:581d:7e6e:a5a9)
[05:10:29] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:13:52] *** Joins: SlaveGeek334269 (~root@li2114-242.members.linode.com)
[05:15:05] <parsnip> anddam: you could express the four vectors as four directions, like (0, 1), (1, 0), (1, 1), (1, -1)
[05:15:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[05:16:04] <parsnip> on the one hand, that will force the need for some "continuation of points off the board"
[05:16:07] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[05:16:13] <parsnip> on the other hand, it would simplify the range
[05:17:51] *** Joins: Barones (~Barones@user/Barones)
[05:18:00] *** Quits: b1ack0p (~ocloud@user/blackop) (Quit: leaving)
[05:18:14] *** Joins: filename (~kilitary@188.242.105.134)
[05:18:22] *** Joins: nelgau_ (~nelgau@cpe-75-82-216-42.socal.res.rr.com)
[05:18:50] *** Quits: medecau (~medecau@2a02:1210:78da:cc00:ed8a:581d:7e6e:a5a9) (Quit: medecau)
[05:18:53] *** Quits: nelgau (~nelgau@cpe-75-82-216-42.socal.res.rr.com) (Ping timeout: 250 seconds)
[05:19:31] *** Joins: korg815 (~korg815@user/korg815)
[05:19:33] <parsnip> for the "continuation", you could just make the element get 0 when point is outside or range, since you are looking for max product presumably positive value
[05:19:42] <parsnip> *outside of range
[05:20:43] *** Quits: Barones (~Barones@user/Barones) (Client Quit)
[05:23:00] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[05:24:48] *** Joins: Wulf (~Wulf@user/wulf)
[05:26:12] <anddam> parsnip: then use a dedicated function to get 4 elements in row along a direction?
[05:26:37] <parsnip> that sounds right
[05:27:05] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[05:27:08] <parsnip> i'm imagining like this: def get_product(x, y, dx, dy):
[05:27:17] <anddam> I went with the straight access since it seemed approachable in this case of length 4
[05:27:36] <anddam> but with 4 lines it starts to seems reasonable to make that more compact
[05:27:39] <anddam> OTOH https://termbin.com/cphg
[05:27:44] <anddam> this does not work well
[05:27:46] <parsnip> yes but you have repetition of 16 elements, when really you could just have 4 + 4 = 8
[05:28:09] <anddam> parsnip: yes, I am agreeing with the 4 repeated values
[05:28:26] <anddam> I am agreeing *it's better with a function*
[05:28:32] <anddam> anyway I
[05:28:52] <anddam> anyway I'll euler that better tomorrow
[05:29:23] <parsnip> hmm, i guess it's good to get a function to create vector first
[05:29:34] <parsnip> like def get_vector(x, y, dx, dy):
[05:30:09] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[05:30:28] *** Joins: Barones (~Barones@user/Barones)
[05:30:29] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:30:37] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[05:30:54] *** Joins: ericleer (~ericleer@77.249.173.130)
[05:31:47] <parsnip>   return [for var i in range(4) | (x + i * dx, y + i * dy)];
[05:33:23] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[05:34:18] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[05:34:29] *** Quits: akk (~akk@75.161.150.5) (Quit: +++)
[05:34:32] *** Joins: jpn (~jpn@user/jpn)
[05:35:12] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[05:35:13] *** Quits: ericleer (~ericleer@77.249.173.130) (Ping timeout: 256 seconds)
[05:35:13] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:35:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:35:41] *** Joins: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net)
[05:35:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:38:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:38:45] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:535:e539:e5ca:5cf9) (Ping timeout: 252 seconds)
[05:38:45] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[05:38:56] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[05:38:57] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:39:26] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[05:40:59] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 260 seconds)
[05:41:27] *** Quits: reset (~reset@user/reset) (Quit: reset)
[05:42:51] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[05:43:12] *** Joins: summersault (~summersau@179.221.251.36)
[05:43:18] *** Joins: et (~et@user/et)
[05:47:00] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[05:47:14] <parsnip>   return [(x + i * dx, y + i * dy) for i in range(4)];
[05:49:28] *** Joins: uwu28 (~uwu@dynamic-190-25-161-81.dynamic.etb.net.co)
[05:49:48] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[05:50:10] *** Joins: uwu93 (~uwu@dynamic-190-25-161-81.dynamic.etb.net.co)
[05:50:23] <uwu93> :)
[05:52:08] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[05:52:39] *** Quits: _h4x0r_ (~till@user/till/x-8616149) (Ping timeout: 260 seconds)
[05:53:11] *** Quits: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net) (Quit: WeeChat 3.4)
[05:53:55] *** Quits: uwu28 (~uwu@dynamic-190-25-161-81.dynamic.etb.net.co) (Ping timeout: 256 seconds)
[05:54:25] *** Joins: summersault (~summersau@179.221.251.36)
[05:58:09] <mattf> is there a way i can see circleci logs, outputs, workflows from terminal
[05:58:13] <mattf> is there some tool or something
[05:58:44] <SnoopJ> there often is for that kind of thing
[05:59:15] *** Quits: pkapp_ (~pkapp@2601:58c:c500:6900:b00:a2df:be8c:f524) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[05:59:30] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[06:01:37] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[06:01:43] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:02:50] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 272 seconds)
[06:03:23] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[06:03:41] *** Joins: vlm (~vlm@user/vlm)
[06:05:15] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[06:05:15] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[06:06:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[06:06:35] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[06:08:46] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[06:09:27] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[06:09:44] *** Quits: parv (~quass@user/parv) (Quit: parv)
[06:09:52] *** Parts: SlaveGeek334269 (~root@li2114-242.members.linode.com) ()
[06:10:58] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Client Quit)
[06:11:19] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[06:12:48] *** byzandula is now known as byzafk
[06:13:17] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[06:13:32] <EdFletcher> mattf: With circleci you can rerun pipelines with SSH enabled and log right into the machine, so if anything that would work
[06:13:33] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:b00:a2df:be8c:f524)
[06:14:07] <mattf> EdFletcher: well i just want to know if it went okay and if not, then i would like to see the logs :P
[06:14:42] <EdFletcher> mattf: Oh yeah the web interface has a way to view all the logs and results for sure, might take some digging but it’s there
[06:14:58] *** Joins: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net)
[06:14:58] <mattf> yeah i know the web interface, i wanted that on the terminal :P
[06:15:04] <TML> mattf: You can fetch the logs from the API
[06:15:23] <mattf> can't believe someone didn't make it yet, they have a cli but is pretty useless
[06:15:30] <EdFletcher> Oh lol, reading comprehension: need to get me some!
[06:15:37] <TML> mattf: https://github.com/artemv/circleci-step-outputter might help there
[06:15:53] <mattf> oh that helps
[06:16:32] *** Joins: rje (~textual@50.35.241.164)
[06:16:37] <TML> mattf: another person suggests curl -s $(curl -sku $token: https://circleci.com/api/v1.1/project/${vcs}/${user}/${project}/$(curl -sku $token: https://circleci.com/api/v1.1/project/${vcs}/${user}/${project}?filter=failed | jq -r '.[0] | .build_num')| jq -r '.steps[] | select(.actions | select( .[] | .failed==true)) | .actions[] | .output_url' ) | gzip -dc| jq -r '.[] | .message'
[06:16:43] <TML> pretty ugly
[06:16:49] <mattf> oh i like that kind of ting
[06:17:05] <TML> and the use of `curl -k` concerns me
[06:17:06] <mattf> what is vcs
[06:17:08] <TML> but YMMV
[06:17:45] *** Quits: knstn (~knstn@ppp-94-66-57-249.home.otenet.gr) (Quit: leaving)
[06:17:51] <grym> mattf: 'version control system'
[06:18:10] <mattf> i mean what is that variable supposed to be? git ?
[06:19:24] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[06:19:33] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:21:34] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[06:21:56] <KnowledgeShark> grym greetings; you helped me the other day with creating Variables using Pathlib from text file using file names. I tried getting it to work with the code you wrote so quickly and kindly. I'm not doing something right. I'm getting an output of the text file name; instead of the line(s) inside the text file. Can you spot my not understanding(s)? Thank you in advance! I wasn't even sure you were active.
[06:22:06] <KnowledgeShark> https://bpa.st/V7TQ
[06:23:10] *** Joins: pycurious (~Adium@user/pycurious)
[06:23:46] <grym> KnowledgeShark: what is `pathlib2`
[06:24:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[06:24:24] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 252 seconds)
[06:25:38] <KnowledgeShark> grym: It's the only pathlib I could find and get working on Debian 11 Bullseye and Python 3.10.0
[06:26:03] <KnowledgeShark> It's pathlib; just with a different package name "pip"; I am guessing you may compile packages or perhaps a different Linux O/S?
[06:26:15] <grym> KnowledgeShark: pathlib is stdlib, you don't need to install anything to have it
[06:26:36] <KnowledgeShark> grym: I throw errors when I use "pathlib"
[06:26:53] <KnowledgeShark> grym: Let me try again.
[06:27:20] <grym> KnowledgeShark: i see the contents of the file in your comment.  what do you want to do with them, again?
[06:27:51] *** Joins: Guest5798 (~Guest57@39.183.147.78)
[06:27:52] <KnowledgeShark> grym: I want to assign specified lines to variables. Specified and Full if possible.
[06:28:09] <KnowledgeShark> grym: I appreciate your time.
[06:28:36] *** Quits: aknot (~aknot@2603-900a-1503-17bb-af5b-753c-973f-2400.inf6.spectrum.com) (Ping timeout: 240 seconds)
[06:28:40] *** Quits: XV8 (~XV8@2601:5cb:c001:50::4a2c) (Quit: Textual IRC Client: www.textualapp.com)
[06:28:53] *** Joins: jpn (~jpn@user/jpn)
[06:29:27] <grym> KnowledgeShark: what do you mean by specified and full
[06:29:44] <KnowledgeShark> grym: strange; I removed the 2 from pathlib and sure enough it ran without an error. Thank you.
[06:30:56] <grym> KnowledgeShark: https://bpa.st/SEIA  perhaps something like this?
[06:31:01] <KnowledgeShark> grym: Such as; readline(1) -> filename variable , readline(2) -> filename variable && the entire text file to assigned variables. Basically the last; however I need to know how to specify just 1 line at a time.
[06:31:43] <grym> that will give you {"141474":"141474.json","87116":"87116.json",...} and so on
[06:31:48] *** Joins: rampart (~rampart@2607:fb90:a239:6f9e:4de9:d538:f75c:effe)
[06:32:21] <KnowledgeShark> grym: Thank you. I will go back to this. Much obliged! :)
[06:33:43] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[06:36:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:37:33] *** Quits: kts_ (~kts@103.73.237.112) (Ping timeout: 256 seconds)
[06:38:49] *** Joins: chenqisu1 (~chenqisu1@183.217.201.88)
[06:39:33] <TML> mattf: I don't use circleci, so I wouldn't have any way to even guess - look at your URLs in the API documentation and see if you can make a guess?
[06:40:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[06:40:47] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:42:00] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:43:17] *** Joins: filename (~kilitary@188.242.105.134)
[06:43:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:44:17] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:44:19] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:46:26] *** Joins: jdmark (~jdmark@user/jdmark)
[06:49:24] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[06:51:56] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[06:52:35] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:54:16] *** Joins: kts_ (~kts@103.73.237.112)
[06:55:37] *** Quits: schumaml (~schumaml@p200300e2ef26950053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:56:40] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 272 seconds)
[06:57:03] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[06:57:26] *** Joins: funhouse (~funhouse@user/funhouse)
[06:59:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:00:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:00:19] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 260 seconds)
[07:00:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:01:29] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[07:01:43] *** Quits: kts_ (~kts@103.73.237.112) (Ping timeout: 260 seconds)
[07:01:45] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[07:02:41] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4d5c:3d55:e680:fa10)
[07:03:20] <KnowledgeShark> grym: How do I remove the page break / carriage return? Thank you again by the way. I kept changing the index numbers to see what happened. I received different results. using 0 as you coded: gave me the following: {'141474': '141474.json\n', '87116': '87116.json\n', '125804': '125804.json\n', '89762': '89762.json\n', '4408667': '4408667.json'} . Is there an easy way to remove the \n?
[07:03:52] <grym> KnowledgeShark: oh, sure; line_dict[stem] = line.strip()
[07:03:54] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[07:03:58] *** Joins: newpy (~newpy@206.168.231.90)
[07:04:02] <KnowledgeShark> grym: Thank you!!!
[07:04:40] <Guest80> Hi can someone tell me why the first commit passes and why the last commit fails even though they are the same? https://github.com/bmihelac/django-cookie-consent/pull/60
[07:07:00] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[07:07:57] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[07:09:25] *** Joins: asocialblade (~quassel@static.16.62.161.5.clients.your-server.de)
[07:10:53] <TML> Guest80: You can drill into the build logs and see why
[07:11:19] *** Joins: damien_ (~damien@76.78.66.116)
[07:11:29] *** Joins: yosef[m]12 (~yosefmatr@2001:470:69fc:105::1:e592)
[07:11:29] <Guest80> https://app.travis-ci.com/github/bmihelac/django-cookie-consent/jobs/564778832
[07:11:45] <Guest80> AttributeError: 'str' object has no attribute 'name'. The command "python setup.py -q install" failed and exited with 1 during .
[07:12:43] *** Quits: damien_ (~damien@76.78.66.116) (Remote host closed the connection)
[07:12:44] <Guest80> I have no clue why though that log doesn't seem like it has anything to do with the code I am working on
[07:13:14] <TML> which could absolutely be true - it could be some other dependency was broken at the time your build ran
[07:13:37] <Guest80> so it is the travis CI fault and not mine?
[07:14:27] <TML> it's certainly possible - it could also be possible that something else was merged between your two builds that now breaks your code
[07:15:53] <Guest80> I don't think there was any code changes i made them after
[07:16:15] <Guest80> merged changes i mean
[07:16:38] <Guest80> does this travis thing ever run again automatically?
[07:17:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[07:17:25] <TML> Looks like an upstream issue in setuptools: https://github.com/pypa/setuptools/issues/3113
[07:18:01] <Guest80> that seems like it was reported a while ago though?
[07:18:33] <TML> it's still an open issue
[07:18:46] <Guest80> yea true but weird how it succeeded then failed
[07:19:01] <Guest80> do maintainers normally merge PRs with red X's on them?>
[07:19:37] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:77e5:8ad4:39a2:4500) (Ping timeout: 240 seconds)
[07:19:38] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:19:55] <uwu93> i found this article " Don’t use Python… if you’re starting a big project " what do you think
[07:20:27] <uwu93> "Dependency collisions en masse" , "Different machines, different Pythons" , "Locking out performance with the global interpreter lock"
[07:21:24] <SnoopJ> uwu93, sounds like somebody's got an axe to grind
[07:21:41] <uwu93> okay
[07:21:53] <InPhase> uwu93: Well, I would say generally don't use Python to write very large projects.  There are other languages with better large-project architectural support that will keep you from shooting yourself in the foot as complexity scales.
[07:21:54] <SnoopJ> the last point is...hyperbolic.
[07:21:58] <TML> Guest80: depends on the maintainer, but for example it appears that the .travis.yml for this project changed between your first build and your most recent
[07:22:03] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-0961-7b0a-4f50-8e44.res6.spectrum.com) (Quit: Client closed)
[07:22:08] <InPhase> uwu93: But you can use Python concurrently with writing large projects.
[07:22:35] <SnoopJ> But it's true that the GIL can make getting good performance tricky, especially if you're expecting to thread in Python as if it will be threading in other languages
[07:22:40] <TML> Guest80: So possibly they've decided to include builds that were previously out of scope
[07:22:53] *** Quits: auri (~quassel@fsf/member/auri) (Quit: auri)
[07:23:03] *** Joins: jpn (~jpn@user/jpn)
[07:23:05] <SnoopJ> ...and the typical approach is to circumvent the GIL entirely and use an extension module that does the expensive stuff outside its domain
[07:23:06] <Guest80> ah i see
[07:23:28] *** Joins: auri (~quassel@fsf/member/auri)
[07:23:31] <EdFletcher> You can also use Python concurrently with other languages in big projects/systems, offloading performance critical stuff
[07:23:33] <SnoopJ> (i.e. numpy gets good performance without the GIL)
[07:23:53] <Guest80> I will be so happy if that solved the problem
[07:24:04] *** Quits: auri (~quassel@fsf/member/auri) (Client Quit)
[07:24:06] <TML> Guest80: I would ping the project maintainer and ask them what they think about the failed builds, it doesn't look to me like your code caused it, so if I were the maintainer, I'd probably accept your PR
[07:24:17] <Guest80> thank you :)
[07:24:32] <Guest80> For accepting my PR if you were a maintainer
[07:25:15] <Guest80> ah nope it still fails after i fetched upstream
[07:25:31] *** Joins: elb0w (~elb0w@pool-98-109-49-7.nwrknj.fios.verizon.net)
[07:25:31] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[07:26:17] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[07:26:56] <Guest80> unfortunately i think i have to make my own version of this library
[07:27:09] <Guest80> the original maintainer has been MIA
[07:27:35] *** [_] is now known as [itchyjunk]
[07:27:50] <Guest80> Plus don't want to rely on another github library. We have all seen what happened with that nodejs vulnerability
[07:27:59] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[07:28:10] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4.1)
[07:28:10] *** Joins: nomic (~nomic@185.217.117.249)
[07:28:16] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[07:29:12] *** Joins: Vision (~Vision@023-084-128-214.res.spectrum.com)
[07:29:31] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[07:29:38] *** Joins: bleaker (~bleaker@static-198-54-134-126.cust.tzulo.com)
[07:30:15] *** Quits: elb0w (~elb0w@pool-98-109-49-7.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[07:30:44] *** Joins: iflema (~ian@user/iflema)
[07:31:32] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[07:31:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:35:23] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:535:e539:e5ca:5cf9)
[07:35:52] *** Joins: tWqaq (~tWqaq@240e:389:5d41:5900:4177:720f:df3f:d8b2)
[07:36:29] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[07:36:32] *** Quits: srg (~srg@user/srg) (Quit: :wqa)
[07:38:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[07:39:55] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[07:40:11] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[07:40:23] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[07:40:55] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[07:40:56] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[07:41:22] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Client Quit)
[07:42:39] *** Joins: white2 (~mahengrui@user/mahengrui1)
[07:43:18] *** Quits: filename (~kilitary@188.242.105.134) (Quit: joined libera)
[07:44:02] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[07:44:25] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 256 seconds)
[07:44:51] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4.1)
[07:44:59] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:46:15] *** Joins: adeliktas0 (~adeliktas@i59F520C3.versanet.de)
[07:46:21] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 252 seconds)
[07:47:27] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 252 seconds)
[07:47:27] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 252 seconds)
[07:48:23] *** Quits: adeliktas (~adeliktas@i59F4DF8C.versanet.de) (Ping timeout: 256 seconds)
[07:48:23] *** adeliktas0 is now known as adeliktas
[07:48:34] *** Joins: dubs (~user@user/sbudnik)
[07:49:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[07:49:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:49:37] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[07:49:44] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:49:57] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[07:50:02] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[07:50:06] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[07:50:07] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[07:50:17] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 240 seconds)
[07:52:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:52:26] *** Joins: KeiraT (~k@lulzsec.co.uk)
[07:52:35] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 240 seconds)
[07:53:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:54:46] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[07:54:55] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 260 seconds)
[07:55:44] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:55:59] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:57:21] *** Joins: frmlof (~frmlof@70.243.238.191)
[07:58:53] *** Quits: frmlof (~frmlof@70.243.238.191) (Client Quit)
[07:59:34] *** Joins: Henry_ (~mahengrui@user/mahengrui1)
[07:59:40] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Quit: Leaving)
[08:01:07] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[08:01:57] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[08:02:19] *** Quits: jay-m1263 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[08:02:23] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 260 seconds)
[08:03:10] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 272 seconds)
[08:04:23] *** Joins: Jck_true1 (~jcktrue@user/jck-true/x-0200799)
[08:04:49] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Ping timeout: 256 seconds)
[08:04:49] *** Jck_true1 is now known as Jck_true
[08:05:11] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 260 seconds)
[08:05:11] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 260 seconds)
[08:07:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4d5c:3d55:e680:fa10) (Ping timeout: 240 seconds)
[08:08:46] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[08:09:04] *** Joins: Sadale (~Sadale@user/sadale)
[08:10:19] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 260 seconds)
[08:10:43] *** Joins: anom777[m] (~anom777hi@2001:470:69fc:105::1:e598)
[08:10:54] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:11:22] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[08:12:03] *** Joins: filename (~kilitary@188.242.105.134)
[08:12:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:14:15] *** Joins: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net)
[08:17:05] *** Joins: jpn (~jpn@user/jpn)
[08:17:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[08:17:54] *** Joins: millido (~millido@84.210.150.128)
[08:18:11] *** Quits: uwu93 (~uwu@dynamic-190-25-161-81.dynamic.etb.net.co) (Quit: Client closed)
[08:18:34] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3a9c:9bd9:933c:fcdf)
[08:19:55] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[08:22:10] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[08:24:48] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[08:24:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[08:25:13] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 256 seconds)
[08:26:31] *** Quits: _0x00 (~0x00@user/0x00/x-6246543) (Quit: Leaving)
[08:26:58] *** Joins: waynew (~wayne@user/waynew)
[08:28:31] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[08:30:06] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[08:30:19] *** Quits: comet23 (comet23@user/comet23) (Ping timeout: 256 seconds)
[08:30:21] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:31:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[08:31:42] *** Joins: wyclif (~wyclif@user/wyclif)
[08:32:36] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[08:35:10] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:35:31] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[08:37:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:38:06] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:6c75:c89d:916b:3b14) (Read error: Connection reset by peer)
[08:38:14] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:38:17] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:41:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[08:42:03] *** Quits: Henry_ (~mahengrui@user/mahengrui1) (Ping timeout: 260 seconds)
[08:42:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[08:42:42] *** Joins: wyclif (~wyclif@user/wyclif)
[08:47:24] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[08:48:12] *** Quits: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur) (Remote host closed the connection)
[08:48:14] *** Joins: wyclif (~wyclif@user/wyclif)
[08:48:51] *** Joins: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za)
[08:49:57] *** Quits: spiderman (spiderman@spiderman.shelltalk.net) (Ping timeout: 240 seconds)
[08:50:48] *** Joins: iflema_ (~ian@user/iflema)
[08:52:01] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[08:54:30] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[08:56:31] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:58:05] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[08:59:19] *** Joins: wyclif (~wyclif@user/wyclif)
[08:59:31] *** Joins: spiderman (spiderman@spiderman.shelltalk.net)
[09:00:28] <Barones> why does vscode focus-mouse-on-hover doesnt move on?
[09:00:37] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[09:03:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[09:04:51] *** Joins: wyclif (~wyclif@user/wyclif)
[09:06:33] *** Joins: zacts (~zacts@user/zacts)
[09:09:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[09:10:35] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[09:10:39] *** Joins: wyclif (~wyclif@user/wyclif)
[09:11:13] *** Joins: jpn (~jpn@user/jpn)
[09:11:27] *** Joins: PJBoy (~PJBoy@user/pjboy)
[09:14:25] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:15:19] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[09:15:22] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[09:15:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[09:16:07] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[09:16:13] *** Joins: wyclif (~wyclif@user/wyclif)
[09:17:08] *** Joins: llanhmod_ (~developer@user/domhnall/x-2887755)
[09:17:37] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[09:19:11] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[09:19:32] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:4156:bbe5:9259:5976) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:19:37] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[09:19:57] *** Joins: djapo (~archangel@user/djapo)
[09:20:11] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[09:20:45] *** Quits: sreve (~quassel@p4ff44d34.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[09:21:13] *** Joins: sreve (~quassel@p54a71d5a.dip0.t-ipconnect.de)
[09:21:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[09:21:43] *** Joins: wyclif (~wyclif@user/wyclif)
[09:21:46] *** Joins: waterpuddle (~waterpudd@141.193.89.19)
[09:24:32] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[09:26:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[09:27:15] *** Joins: wyclif (~wyclif@user/wyclif)
[09:27:33] *** Quits: d1b (~db@user/d1b) (Ping timeout: 256 seconds)
[09:27:56] *** Joins: Henry_ (~mahengrui@user/mahengrui1)
[09:29:15] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[09:29:24] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Quit: Leaving)
[09:29:30] *** Joins: c4017 (~c4017@2604:3d08:747f:7c90:308f:de35:e19:6888)
[09:32:17] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[09:32:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[09:32:50] *** Joins: wyclif (~wyclif@user/wyclif)
[09:35:20] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[09:35:54] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:37:07] *** Quits: widp (~widp@124.123.106.66) (Ping timeout: 260 seconds)
[09:37:11] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[09:37:20] *** Joins: widp (~widp@2405:204:5704:6944::132a:70ad)
[09:37:24] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:535:e539:e5ca:5cf9) (Ping timeout: 240 seconds)
[09:38:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[09:38:19] *** Joins: wyclif (~wyclif@user/wyclif)
[09:40:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:40:40] *** Joins: humbertowoody (~humbertow@189.132.110.180)
[09:40:55] *** Joins: d1b (~db@user/d1b)
[09:41:11] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:42:41] *** Joins: Xardas (~Xardas@149.233.51.127)
[09:42:57] *** Quits: humberto1 (~humbertow@189.132.110.180) (Ping timeout: 240 seconds)
[09:43:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[09:43:53] *** Joins: wyclif (~wyclif@user/wyclif)
[09:43:59] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[09:46:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:47:00] *** Quits: rampart (~rampart@2607:fb90:a239:6f9e:4de9:d538:f75c:effe) (Remote host closed the connection)
[09:48:19] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[09:48:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[09:49:24] *** Joins: wyclif (~wyclif@user/wyclif)
[09:49:30] <Guest5798> Hello
[09:49:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:52:02] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:52:31] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[09:52:42] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[09:52:59] *** Quits: humbertowoody (~humbertow@189.132.110.180) (Ping timeout: 260 seconds)
[09:53:25] *** Joins: audio (~audio@user/audio)
[09:53:52] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[09:55:17] *** Joins: zmt00 (~zmt00@user/zmt00)
[09:57:45] *** Quits: widp (~widp@2405:204:5704:6944::132a:70ad) (Read error: Connection reset by peer)
[10:00:15] <Batzy> what's a good cross platform console UI library I can use?
[10:00:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[10:01:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[10:02:36] *** Joins: wyclif (~wyclif@user/wyclif)
[10:04:01] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:05:15] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3a9c:9bd9:933c:fcdf) (Quit: Leaving)
[10:05:27] *** Joins: jpn (~jpn@user/jpn)
[10:07:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[10:08:21] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[10:08:22] *** Joins: wyclif (~wyclif@user/wyclif)
[10:08:25] *** PJBoy is now known as Guest6605
[10:08:31] *** Joins: PJBoy (~PJBoy@user/pjboy)
[10:09:10] *** Joins: manti7 (~manti7@176.10.104.94)
[10:09:29] *** Quits: Jacques (~Jacques@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[10:10:06] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[10:10:17] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[10:10:28] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[10:11:11] *** Quits: Guest6605 (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[10:11:49] *** Joins: upsala (~zcb@185.209.196.134)
[10:12:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[10:13:56] *** Joins: wyclif (~wyclif@user/wyclif)
[10:14:09] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[10:16:20] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[10:18:08] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[10:19:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[10:19:34] *** Joins: wyclif (~wyclif@user/wyclif)
[10:20:49] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[10:24:42] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[10:24:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[10:25:07] *** Joins: wyclif (~wyclif@user/wyclif)
[10:25:35] *** Joins: cuanim (~cuanim@31.215.207.104)
[10:25:36] *** Quits: cuanim (~cuanim@31.215.207.104) (Changing host)
[10:25:36] *** Joins: cuanim (~cuanim@user/cuanim)
[10:25:49] *** Joins: elb0w (~elb0w@pool-98-109-49-7.nwrknj.fios.verizon.net)
[10:29:03] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[10:29:06] *** Quits: Guest5798 (~Guest57@39.183.147.78) (Quit: Client closed)
[10:30:19] *** Quits: elb0w (~elb0w@pool-98-109-49-7.nwrknj.fios.verizon.net) (Ping timeout: 260 seconds)
[10:31:48] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[10:33:26] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[10:33:31] *** Joins: jpn (~jpn@user/jpn)
[10:33:49] *** Joins: Jigsy (~Jigsy@user/jigsy)
[10:33:51] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 256 seconds)
[10:35:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[10:35:14] *** Henry_ is now known as white2
[10:35:33] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 256 seconds)
[10:35:55] *** Joins: drbeco (~beco@user/beco)
[10:36:02] *** Joins: mike18_ (~geri@216.200.232.252)
[10:36:06] <mike18_> hi
[10:36:09] *** Joins: wyclif (~wyclif@user/wyclif)
[10:36:17] <mike18_> quick question to thread pool
[10:36:17] <mike18_> why does increasing the number of works not help here? https://ideone.com/YW4bcY
[10:36:48] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[10:36:51] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[10:37:23] *** Joins: digilink (~digilink@user/digilink)
[10:38:20] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[10:39:10] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[10:39:29] *** Quits: tmart (~tmart@47-220-166-159.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[10:41:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[10:41:40] *** Joins: wyclif (~wyclif@user/wyclif)
[10:41:45] *** Joins: tmart (~tmart@47-220-166-159.gtwncmkt04.res.dyn.suddenlink.net)
[10:44:03] *** Quits: waterpuddle (~waterpudd@141.193.89.19) (Ping timeout: 256 seconds)
[10:44:21] *** Joins: widp (~widp@124.123.107.152)
[10:44:24] *** Quits: wallsY (~weechat@user/wallsY) (Quit: WeeChat 2.8)
[10:46:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[10:47:07] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[10:47:15] *** Joins: wyclif (~wyclif@user/wyclif)
[10:47:21] *** Quits: AlanMD_ (~AlanMD@86.124.30.89) (Remote host closed the connection)
[10:47:37] *** Joins: wallsY (~weechat@user/wallsY)
[10:50:01] *** Joins: AlanMD (~AlanMD@86.124.30.89)
[10:53:31] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[10:54:04] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[10:54:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:56:06] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 252 seconds)
[10:56:39] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:57:11] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[10:57:39] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[10:58:17] *** Joins: wyclif (~wyclif@user/wyclif)
[10:58:54] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[10:58:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[10:59:00] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4.1)
[11:00:29] *** Joins: fling (~fling@user/fling)
[11:02:24] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 272 seconds)
[11:03:28] *** Joins: Enitin (~Enitin@82.180.145.230)
[11:03:53] *** Quits: jmd_ (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[11:05:38] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 268 seconds)
[11:07:00] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[11:08:17] *** Joins: bry-guy (~bry-guy@50.54.245.234)
[11:08:18] *** Quits: bry-guy (~bry-guy@50.54.245.234) (Excess Flood)
[11:08:34] *** Joins: bry-guy (~bry-guy@50.54.245.234)
[11:08:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[11:09:34] *** Joins: wyclif (~wyclif@user/wyclif)
[11:10:07] *** Quits: ckdCreations (~ckdCreati@147.55.133.131) (Ping timeout: 256 seconds)
[11:10:24] *** Joins: ckdCreations (~ckdCreati@147.55.133.131)
[11:11:17] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[11:12:01] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[11:12:05] *** Quits: bry-guy (~bry-guy@50.54.245.234) (Excess Flood)
[11:12:29] *** Joins: bry-guy (~bry-guy@50.54.245.234)
[11:14:26] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 272 seconds)
[11:15:13] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[11:17:49] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:b00:a2df:be8c:f524) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[11:18:05] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:4449:d7c0:1687:65cc)
[11:18:11] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[11:19:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[11:20:39] *** Joins: wyclif (~wyclif@user/wyclif)
[11:20:50] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[11:22:02] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Ping timeout: 272 seconds)
[11:22:58] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[11:23:36] *** Joins: parv (~quass@user/parv)
[11:25:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[11:26:12] *** Joins: wyclif (~wyclif@user/wyclif)
[11:26:33] *** Quits: mike18_ (~geri@216.200.232.252) (Ping timeout: 256 seconds)
[11:27:34] *** Quits: bry-guy (~bry-guy@50.54.245.234) (Remote host closed the connection)
[11:27:39] *** Joins: jpn (~jpn@user/jpn)
[11:28:00] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[11:28:37] *** Quits: emerent (~quassel@p200300cd5743c32bba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[11:29:01] *** Joins: emerent (~quassel@p200300cd5743c398ba27ebfffed28a59.dip0.t-ipconnect.de)
[11:29:41] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[11:31:04] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:24] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:32:12] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[11:33:26] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[11:34:04] *** Quits: Babar (~Babar@116.102.90.66) (Ping timeout: 272 seconds)
[11:35:08] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:535:e539:e5ca:5cf9)
[11:36:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[11:37:16] *** Joins: wyclif (~wyclif@user/wyclif)
[11:37:16] *** Quits: widp (~widp@124.123.107.152) (Read error: Connection reset by peer)
[11:37:29] *** Joins: widp (~widp@124.123.107.152)
[11:37:53] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[11:38:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:38:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:39:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[11:41:10] *** Joins: dreamon (~dreamon@p57a4c25c.dip0.t-ipconnect.de)
[11:42:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[11:42:13] *** Joins: jpn (~jpn@user/jpn)
[11:42:28] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:aeeb:9075:ec4c:907)
[11:42:50] *** Joins: wyclif (~wyclif@user/wyclif)
[11:46:06] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[11:46:19] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[11:47:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[11:48:20] *** Joins: wyclif (~wyclif@user/wyclif)
[11:48:50] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:49:00] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[11:49:00] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[11:53:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[11:53:45] *** Quits: dreamon (~dreamon@p57a4c25c.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[11:54:18] *** Quits: white2 (~mahengrui@user/mahengrui1) (Read error: Connection reset by peer)
[11:54:42] *** Joins: diamondbond_ (~diamondbo@175.157.58.221)
[11:54:51] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[11:55:20] *** Joins: white2 (~mahengrui@user/mahengrui1)
[11:55:27] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 256 seconds)
[11:59:25] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 256 seconds)
[11:59:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:59:40] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[11:59:40] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:59:44] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[12:00:02] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[12:00:02] *** Quits: blei19 (~blei@user/blei) (Quit: Client closed)
[12:00:16] *** Joins: _dmc_ (~dcm@27.2.216.148)
[12:00:33] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Ping timeout: 256 seconds)
[12:03:03] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[12:07:02] *** Joins: rampart (~rampart@2607:fb90:a239:6f9e:bc2f:d06d:9220:b7c)
[12:08:07] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[12:08:48] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[12:09:14] *** Joins: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de)
[12:10:33] *** Quits: _dmc_ (~dcm@27.2.216.148) (Quit: Leaving)
[12:10:51] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[12:11:48] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:ec7f:bf70:4897:f9a7)
[12:16:06] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[12:16:06] *** Joins: kts_ (~kts@103.73.237.112)
[12:18:53] *** Joins: djapo (~archangel@user/djapo)
[12:19:27] *** Joins: Lazenca (~lazenca@user/lazenca)
[12:19:52] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[12:22:27] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[12:22:39] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 256 seconds)
[12:22:59] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[12:23:41] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[12:26:16] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[12:26:31] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:26:45] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[12:27:06] *** Joins: drflashd[m] (~flashdmat@2001:470:69fc:105::1:3d0b)
[12:28:16] *** Joins: irf21k (~irf21k@2401:4900:32a5:d337::1224:88ba)
[12:28:44] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[12:28:52] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Quit: ZNC - http://znc.in)
[12:28:52] *** Joins: stockholm (~Andreas@p200300d2c72b800071557c39a52517c3.dip0.t-ipconnect.de)
[12:31:31] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[12:31:37] *** Joins: filename (~kilitary@188.242.105.134)
[12:31:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[12:32:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 240 seconds)
[12:35:33] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.179)
[12:37:17] *** Joins: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de)
[12:37:23] *** Quits: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net) (Ping timeout: 256 seconds)
[12:37:57] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[12:38:04] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[12:39:32] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[12:41:55] *** Joins: medecau (~medecau@2a02:1210:78da:cc00:ed8a:581d:7e6e:a5a9)
[12:41:59] *** Quits: medecau (~medecau@2a02:1210:78da:cc00:ed8a:581d:7e6e:a5a9) (Client Quit)
[12:44:21] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:44:49] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:aeeb:9075:ec4c:907) (Quit: pvergain)
[12:45:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:45:11] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[12:45:28] *** Joins: rsx (~dummy@ppp-188-174-159-56.dynamic.mnet-online.de)
[12:49:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:49:26] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.179) (Ping timeout: 272 seconds)
[12:51:58] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:52:29] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[12:53:54] *** Joins: djapo (~archangel@user/djapo)
[12:54:42] *** Joins: Pickchea (~private@user/pickchea)
[12:56:05] *** Quits: jab416171 (~jab416171@c-67-172-226-173.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[12:59:55] *** Joins: han-solo (~han-solo@user/han-solo)
[13:01:24] *** Joins: jab416171 (~jab416171@c-67-172-226-173.hsd1.ut.comcast.net)
[13:02:20] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[13:02:51] *** Joins: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net)
[13:03:06] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Client Quit)
[13:03:24] *** Quits: FLHerne (flh@flherne.uk) (Quit: There's a real world out here!)
[13:03:28] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[13:03:40] *** Joins: han-solo_ (~han-solo@user/han-solo)
[13:03:58] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Client Quit)
[13:04:00] *** Quits: kts_ (~kts@103.73.237.112) (Ping timeout: 272 seconds)
[13:04:43] *** Quits: han-solo (~han-solo@user/han-solo) (Killed (NickServ (GHOST command used by han-solo_)))
[13:04:47] *** han-solo_ is now known as han-solo
[13:06:01] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[13:06:07] *** Joins: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[13:07:03] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[13:07:30] *** Joins: Giovanni (~Giovanni@176.55.124.0)
[13:08:48] *** Quits: nomic (~nomic@185.217.117.249) (Quit: Leaving)
[13:09:13] *** Joins: jpn (~jpn@user/jpn)
[13:09:44] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[13:10:39] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[13:10:44] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[13:11:02] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[13:12:54] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[13:13:06] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[13:13:39] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[13:14:08] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[13:14:29] *** Quits: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[13:14:35] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 260 seconds)
[13:14:45] *** Joins: kosh (~kosh@user/kosh)
[13:14:47] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[13:15:29] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:15:45] *** Quits: shailangsa (~shailangs@host165-120-169-51.range165-120.btcentralplus.com) (Ping timeout: 268 seconds)
[13:16:44] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[13:17:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:18:11] *** Quits: diamondbond_ (~diamondbo@175.157.58.221) (Ping timeout: 256 seconds)
[13:18:47] *** Joins: palasso (~palasso@user/palasso)
[13:19:28] *** Joins: FLHerne (flh@flherne.uk)
[13:19:41] *** Joins: namkeleser (~namkelese@101.175.155.55)
[13:20:56] *** Quits: Giovanni (~Giovanni@176.55.124.0) (Read error: Connection reset by peer)
[13:21:29] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[13:21:57] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[13:22:22] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[13:22:41] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[13:26:55] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[13:27:03] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[13:27:20] *** Joins: Giovanni (~Giovanni@176.55.124.0)
[13:28:21] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:29:57] *** Quits: Giovanni (~Giovanni@176.55.124.0) (Read error: Connection reset by peer)
[13:30:10] *** Quits: evander[m] (~khelllmat@2001:470:69fc:105::1:4ec4) (Quit: You have been kicked for being idle)
[13:30:15] *** Quits: nitchi[m] (~nitchimat@2001:470:69fc:105::1:8f53) (Quit: You have been kicked for being idle)
[13:30:21] *** Joins: djapo (~archangel@user/djapo)
[13:32:15] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 240 seconds)
[13:33:40] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[13:33:47] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:33:51] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[13:34:10] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[13:34:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:35:11] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:35:36] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[13:36:10] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[13:37:08] *** Quits: widp (~widp@124.123.107.152) (Read error: Connection reset by peer)
[13:39:00] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[13:39:09] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:39:34] *** Joins: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com)
[13:40:50] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Ping timeout (120 seconds))
[13:41:54] *** Quits: chenqisu1 (~chenqisu1@183.217.201.88) (Quit: Leaving)
[13:42:33] *** Joins: teut (~teut@103.144.92.214)
[13:42:50] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[13:44:12] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[13:44:50] *** Joins: schumaml (~schumaml@p200300e2ef26950053c1821a43d17d29.dip0.t-ipconnect.de)
[13:46:49] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[13:46:55] *** Quits: llanhmod_ (~developer@user/domhnall/x-2887755) (Quit: leaving)
[13:47:32] *** Joins: reset (~reset@user/reset)
[13:47:37] *** Quits: Dreamwea- (~Dreamweav@37.48.111.199) (Ping timeout: 250 seconds)
[13:47:49] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[13:48:32] *** Quits: PsyZeus (~TheLight@user/psyzeus) (Ping timeout: 240 seconds)
[13:49:21] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:535:e539:e5ca:5cf9) (Ping timeout: 252 seconds)
[13:49:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:49:40] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:50:16] *** Joins: DreamweaverN (~Dreamweav@37.48.111.199)
[13:50:59] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[13:52:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:54:16] *** Joins: Giovanni (~Giovanni@176.55.124.0)
[13:54:18] *** Quits: Giovanni (~Giovanni@176.55.124.0) (Read error: Connection reset by peer)
[13:54:43] *** Joins: Giovanni (~Giovanni@176.55.124.0)
[13:55:37] *** Joins: MerrinX (~merrinx@ti0028a400-3686.bb.online.no)
[13:55:57] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 252 seconds)
[13:56:37] *** Joins: PsyZeus (~TheLight@2001:1af8:4700:b0e0:e00::)
[13:56:37] *** Quits: PsyZeus (~TheLight@2001:1af8:4700:b0e0:e00::) (Changing host)
[13:56:37] *** Joins: PsyZeus (~TheLight@user/psyzeus)
[13:57:03] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[13:57:40] *** Quits: Giovanni (~Giovanni@176.55.124.0) (Read error: Connection reset by peer)
[13:59:05] *** Quits: someone235 (uid419897@id-419897.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[13:59:44] *** Quits: hams (~hams@user/hams) (Ping timeout: 272 seconds)
[14:01:05] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[14:03:39] *** Quits: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da) (Ping timeout: 252 seconds)
[14:04:13] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[14:04:39] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[14:04:55] *** Joins: kts_ (~kts@103.73.237.112)
[14:07:07] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[14:07:58] *** Quits: parv (~quass@user/parv) (Ping timeout: 272 seconds)
[14:10:05] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[14:11:41] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:11:46] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[14:12:14] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:13:42] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[14:14:18] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 272 seconds)
[14:14:56] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 272 seconds)
[14:17:50] *** Joins: asa22 (~asa22@77.211.7.130)
[14:17:59] *** Parts: asa22 (~asa22@77.211.7.130) ()
[14:18:05] *** Joins: zacts (~zacts@user/zacts)
[14:18:27] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[14:21:27] *** Joins: dvx (~dvx@5.181.92.64)
[14:21:42] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[14:22:45] *** Quits: dalan62 (~dalan@59-102-63-107.tpgi.com.au) (Quit: dalan62)
[14:23:34] *** Joins: dalan62 (~dalan@59-102-63-107.tpgi.com.au)
[14:24:04] *** Joins: rememberYou (~someone@user/rememberyou)
[14:24:34] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:26:39] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[14:26:55] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 260 seconds)
[14:27:40] *** Quits: MerrinX (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[14:28:36] *** Joins: MerrinX (~merrinx@ti0028a400-3686.bb.online.no)
[14:29:30] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[14:30:27] *** Joins: veek (~veek@117.192.17.111)
[14:30:46] *** Quits: kts_ (~kts@103.73.237.112) (Ping timeout: 272 seconds)
[14:31:15] *** Joins: jaez[m] (~jaezmatri@2001:470:69fc:105::1:e5bf)
[14:31:18] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[14:32:37] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[14:32:38] *** Joins: jpn (~jpn@user/jpn)
[14:33:04] *** Joins: paul424 (~tom@ip-5-172-233-33.multi.internet.cyfrowypolsat.pl)
[14:35:19] *** Joins: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is)
[14:35:35] *** Quits: veek (~veek@117.192.17.111) (Quit: Leaving)
[14:35:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[14:38:22] *** Quits: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is) (Client Quit)
[14:38:51] *** Quits: m_tadeu (~quassel@bl7-240-233.dsl.telepac.pt) (Ping timeout: 252 seconds)
[14:40:17] *** Joins: Everything (~Everythin@37.115.210.35)
[14:41:13] *** Joins: sobkas (~sobkas@95.175.17.217)
[14:41:36] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[14:42:03] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 256 seconds)
[14:42:20] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[14:42:33] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[14:43:10] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[14:43:37] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:46:25] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[14:46:49] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[14:46:57] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 240 seconds)
[14:47:04] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[14:47:48] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[14:47:48] *** Joins: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is)
[14:48:02] *** Joins: Enitin (~Enitin@82.180.145.228)
[14:48:05] *** Joins: Xardas (~Xardas@149.233.51.127)
[14:48:30] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:48:46] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:49:51] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[14:50:07] *** Joins: savolla (~quassel@95.10.200.51)
[14:50:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:51:13] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:51:33] *** Quits: ckdCreations (~ckdCreati@147.55.133.131) (Read error: Connection reset by peer)
[14:51:52] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[14:52:51] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:54:21] *** Joins: ice9 (~ice9@user/ice9)
[14:54:57] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[14:56:13] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[14:56:30] *** Joins: arun (~arun@49.15.202.136)
[14:57:55] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[14:58:18] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:b675:9221:6d36:de5f)
[14:58:46] *** Quits: arun (~arun@49.15.202.136) (Client Quit)
[14:58:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:00:16] *** Quits: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com) ()
[15:00:32] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Ping timeout: 272 seconds)
[15:01:39] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Client Quit)
[15:01:52] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:02:05] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[15:02:19] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[15:02:23] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[15:02:30] *** Joins: sobkas (~sobkas@95.175.17.217)
[15:03:35] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[15:03:45] *** Joins: Vrganj (~Vrganj@93-142-89-137.adsl.net.t-com.hr)
[15:05:17] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[15:06:26] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[15:06:55] *** Joins: sobkas (~sobkas@95.175.17.217)
[15:08:07] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:09:28] *** Quits: Santzes (~Santzes@2400:8901::f03c:93ff:fe0a:e964) (Quit: WeeChat 3.4.1)
[15:10:40] *** Quits: dreamon (~dreamon@ppp-88-217-83-128.dynamic.mnet-online.de) (Ping timeout: 272 seconds)
[15:11:04] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[15:13:11] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[15:13:47] *** Quits: irf21k (~irf21k@2401:4900:32a5:d337::1224:88ba) (Remote host closed the connection)
[15:13:56] *** Joins: irf21k (~irf21k@2401:4900:32a5:d337::1224:88ba)
[15:14:49] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:16:37] *** Quits: teut (~teut@103.144.92.214) (Ping timeout: 256 seconds)
[15:16:51] *** Joins: teut (~teut@106.207.199.0)
[15:18:23] *** Joins: zen_coder (~zen_coder@2a02:8109:8c80:904:699f:6e20:195b:1ccd)
[15:18:23] *** Joins: Santzes (~Santzes@2400:8901::f03c:93ff:fe0a:e964)
[15:20:01] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:20:02] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[15:21:16] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[15:21:30] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:22:41] *** Joins: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com)
[15:22:55] *** Quits: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[15:23:05] *** Joins: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94)
[15:23:10] *** Joins: xkuru (~xkuru@user/xkuru)
[15:24:06] *** Joins: rendar (~rendar@user/rendar)
[15:24:11] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[15:24:13] *** Joins: Giovanni (~Giovanni@176.55.124.0)
[15:26:28] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[15:27:34] *** Joins: timkofu (~timkofu@user/timkofu)
[15:27:40] <timkofu> Hellow
[15:28:34] <teut> Hello timkofu
[15:29:02] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 272 seconds)
[15:29:08] *** Joins: charisma (~charisma@223.233.78.138)
[15:29:23] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:29:40] *** Quits: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is) (Ping timeout: 272 seconds)
[15:29:42] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:30:17] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[15:31:10] *** Joins: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is)
[15:31:35] *** Joins: m_tadeu (~quassel@bl7-240-233.dsl.telepac.pt)
[15:31:53] <charisma> Is there a better way to do this? https://bpa.st/2R6A
[15:31:54] <charisma> I want to create a list of samples (a sample is a dict) and store the values stored in the csv from the second column till the rest of the columns.
[15:32:28] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:33:11] <charisma> keeping the first column as the key to another dictionary that stores the rest of the columns.
[15:33:39] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[15:34:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[15:35:00] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[15:35:05] <teut> pandas
[15:35:11] *** Quits: _xor (~xor@74.215.232.169) (Quit: WeeChat 3.4)
[15:35:16] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[15:36:19] <jaez[m]> https://www.educative.io/edpresso/how-to-delete-a-column-in-pandas
[15:37:05] <charisma> Ah, I want to avoid using pandas
[15:37:27] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[15:37:47] <Vrganj> I'd rather not convert it to a list
[15:37:48] *** Quits: teut (~teut@106.207.199.0) (Quit: Ping timeout (120 seconds))
[15:37:51] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[15:38:02] <charisma> What should I do?
[15:38:12] <Vrganj> Instead of reader = list(csv.reader(csv_file)), I'd just do reader = csv.reader(csv_file)
[15:38:24] *** Quits: Giovanni (~Giovanni@176.55.124.0) (Read error: Connection reset by peer)
[15:38:30] <Vrganj> then to get the header, I would use next(reader)
[15:38:37] <Vrganj> then you can just iterate reader and it would just iterate the data
[15:38:38] *** Joins: Giovanni (~Giovanni@45.86.202.164)
[15:38:42] <Vrganj> getting rid of that flag variable
[15:39:24] <charisma> but I also need to store the headers in a list
[15:40:15] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:c1f6:d1cf:be51:57c4)
[15:41:01] <Vrganj> well yeah, you can do that how I said
[15:41:28] <Vrganj> `columns = next(reader)`
[15:41:54] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[15:42:02] <charisma> Oh
[15:42:05] <charisma> That's great
[15:42:15] *** Joins: gdd (~gdd@129.199.146.230)
[15:42:37] <Vrganj> although, why are you iterating each column in each row?
[15:42:50] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[15:43:00] <Vrganj> I'm a bit confused on what you're trying to do
[15:43:29] <charisma> Okay wait
[15:44:20] <charisma> Oh I forgot to remove that for loop
[15:44:27] <charisma> RIP
[15:44:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:45:03] *** Quits: Roedy (Roedy@user/roedy) (Remote host closed the connection)
[15:45:31] *** Joins: Blankspace (~Blankspac@user/blankspace)
[15:46:20] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:535:e539:e5ca:5cf9)
[15:46:33] *** Joins: javanoob (~fourroot@122.161.50.146)
[15:46:37] <javanoob> hello
[15:46:46] <javanoob> can anyone help me in java assignment
[15:47:19] <Vrganj> wrong channel
[15:47:27] <charisma> Vrganj, so I have a csv file with fields: name, xxxx, yyyy, zzzz, etc.
[15:47:27] <charisma> I want to create a list of samples  in which `name` is the key to another dictionary with keys `xxxx`, `yyyy` and `zzzz`
[15:47:28] <charisma> and then I want to store the values of those csv columns into that dictionary
[15:47:28] <charisma> I hope I made sense.
[15:48:09] <charisma> I'm not sure if there's a simpler way to organize data like the way I described
[15:48:52] <Vrganj> not sure whether I can do a newline, kind of new to irc. I'll paste something hold on
[15:48:52] *** Quits: javanoob (~fourroot@122.161.50.146) (Quit: Leaving)
[15:49:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[15:49:36] <Vrganj> Is this what you're trying to do? https://bpa.st/3YDQ
[15:49:56] <charisma> nope
[15:50:02] <anddam> parsnip |   return [for var i in range(4) | (x + i * dx, y + i * dy)];   <<< what syntax is that?
[15:50:05] <charisma> I'll explain it that way one moment
[15:51:05] *** Joins: jpn_ (~jpn@user/jpn)
[15:51:09] <parsnip> anddam: i forgot how to write python. it's accidentally a mix of maybe dart, python and haskell
[15:51:27] <parsnip> anddam: i fixed it a few lines later, right?
[15:51:32] <charisma> Vrganj https://bpa.st/PI7A
[15:51:57] <Vrganj> where'd the a go?
[15:52:07] <charisma> a is not required
[15:52:29] <charisma> because a, in my case, is `name`
[15:52:35] <Vrganj> this is a bit confusing, what are you trying to even do?
[15:52:53] <charisma> I'm trying to read a DNA sample and determine if it's a match for someone
[15:53:19] <Vrganj> ah, well that makes more sense
[15:53:31] <charisma> hmm
[15:53:33] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[15:53:40] <Vrganj> and name is unique, right?
[15:54:22] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[15:55:04] <charisma> yeah I guess
[15:55:05] <charisma> https://bpa.st/ZK3A
[15:56:04] <Vrganj> so you'd want something like: for row in reader: samples[row[0]] = dict(zip(columns[1:], row[1:]))
[15:56:10] <Vrganj> samples being a dict
[15:56:47] <charisma> isn't that the same thing I'm doing too?
[15:57:33] <Vrganj> well it really doesn't get simpler than this
[15:57:38] <charisma> hmm
[15:57:54] <Vrganj> it's 5 lines of code
[15:58:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:58:40] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:58:43] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:59:01] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:00:08] <charisma> okay, which one is better?  https://bpa.st/Y5XA
[16:00:56] <charisma> or, which one is more readable?
[16:01:06] <ChrisWarrick> charisma: the second sample is incomplete
[16:01:26] <ChrisWarrick> charisma: `a = {x: y}` looks better than `a = {}; a[x] = y`
[16:01:40] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 260 seconds)
[16:01:40] <charisma> okay, that's what I wanted to know
[16:02:12] <parsnip> anddam: here's a fun page: https://en.wikipedia.org/wiki/Comparison_of_programming_languages_(list_comprehension)
[16:03:06] *** Quits: dsp00 (~dsp00@20.79.249.135) (Quit: Lost terminal)
[16:03:35] <Vrganj> boo straight up looks like python
[16:03:49] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:04:12] <ChrisWarrick> Boo is a python clone that was created for Unity
[16:04:30] <ChrisWarrick> (although ~everyone uses C# for Unity these days)
[16:05:15] <Vrganj> > until it was dropped in 2014 due to the small userbase
[16:05:16] <Vrganj> mmmyeah
[16:06:03] *** Joins: wakeup (~wakeup@user/wakeup)
[16:06:31] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[16:08:26] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:08:30] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[16:09:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:09:53] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 256 seconds)
[16:10:43] *** Joins: Vonter (~Vonter@49.205.128.205)
[16:12:19] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:4449:d7c0:1687:65cc) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[16:12:33] *** Quits: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[16:12:36] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:4449:d7c0:1687:65cc)
[16:12:44] *** Joins: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[16:12:58] <parsnip> Haskell's the only correct one
[16:13:19] <parsnip> Python is close to Haskell
[16:14:08] *** Quits: Vonter (~Vonter@49.205.128.205) (Client Quit)
[16:15:08] <parsnip> trololol
[16:15:32] <marduk> Man I just opened vim directly to type a commit message instead of `git commit`
[16:15:54] *** Joins: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net)
[16:17:47] <parsnip> Dear Diary, ...
[16:18:23] <parsnip> i am writing this first commit to you, so that we may celebrate this event upon every commit, and every rebase,
[16:18:51] <ChrisWarrick> you’re clearly a novice developer
[16:19:08] <ChrisWarrick> real developers™ would just write "stuff" as their commit message
[16:19:59] <charisma> how do you append to a dictionary?
[16:20:08] <ChrisWarrick> charisma: append?
[16:20:33] <charisma> um
[16:20:36] <charisma> https://bpa.st/C3LQ
[16:20:36] <charisma> has only 1 element in the dictionary (result_pattern)
[16:21:12] <ChrisWarrick> charisma: that’s because you overwrite it
[16:21:25] <charisma> ah damn
[16:21:41] <charisma> what's the proper way to do it?
[16:21:42] <ChrisWarrick> charisma: you will need result_pattern[column] = longest_match(sequence, column)   or a dict comprehension
[16:21:49] <charisma> ah...
[16:21:58] <charisma> thank you
[16:22:13] <ChrisWarrick> alternatively, result_pattern = {column: longest_match(sequence, column) for column in columns[1:]}
[16:22:14] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[16:23:08] <charisma> thanks, that's much better
[16:23:17] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[16:23:21] <charisma> didn't I write a similar syntax above tho?  Oh wait, I'm adding the dictionary to a list there...
[16:23:47] <ChrisWarrick> charisma: you can replace that loop with a list comprehension as well
[16:23:53] <charisma> yeah
[16:24:19] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[16:24:26] <charisma> that makes it less readable right?
[16:24:44] <ChrisWarrick> do you find it less readable?
[16:24:51] <charisma> not at all
[16:25:12] <ChrisWarrick> there, that’s your answer
[16:25:14] *** Joins: wakeup (~wakeup@user/wakeup)
[16:25:15] <charisma> I was advised not to use dict/list comprehensions
[16:25:19] <charisma> but I like using them anyway
[16:26:10] *** Joins: holgersson (~quassel@user/holgersson)
[16:26:38] <Swayze> lol thats terribad advice
[16:26:57] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[16:27:03] <charisma> ikr, I doubted my existence after that
[16:27:07] <ChrisWarrick> advised by whom?
[16:27:20] <charisma> A professor?
[16:27:28] <Swayze> professor muggle
[16:27:36] <ChrisWarrick> ah, classic academic nonsense
[16:27:47] <grym> ChrisWarrick: comprehensions most certainly have a place in your toolkit, and a prominent one.
[16:27:50] <grym> err
[16:27:51] <grym> charisma: ^^
[16:28:27] <charisma> Yep, thanks
[16:28:48] *** Joins: Blankspace (~Blankspac@user/blankspace)
[16:28:52] <grym> you can abuse them, but you can abuse anything
[16:29:26] <charisma> that's true
[16:29:29] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:308f:de35:e19:6888) (Quit: Leaving)
[16:30:30] <charisma> how do I write a list comprehension for the first loop? https://bpa.st/C3LQ
[16:31:04] <charisma> https://bpa.st/DY7Q *
[16:31:08] <charisma> ^^
[16:31:19] <grym> samples = [{row[0] : dict(zip(columns[1:], row[1:]))} for row in reader]
[16:31:32] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[16:31:33] <charisma> hmm
[16:31:51] <grym> you just move the temporary variable into the comprehension
[16:32:11] <charisma> Thanks:)
[16:32:24] <grym> charisma: comp bio or bio info?
[16:32:31] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:32:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:33:07] <charisma> it's computer bio
[16:33:11] <charisma> yep
[16:33:16] <grym> speaking as someone in that sphere of the world; don't take programming practice advice from those professors too seriously :)
[16:33:26] <grym> domain knowledge yes, "best practices" in python no
[16:33:40] *** Joins: xkuru (~xkuru@user/xkuru)
[16:33:59] <charisma> thank you so much!
[16:36:10] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 272 seconds)
[16:37:37] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 240 seconds)
[16:38:23] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:39:44] <nedbat> off-topic, but does anyone know of a documentation toolset for a "choose your own adventure" kind of text? Like, indicate your OS, and from then on the content is adjusted because you chose Windows.
[16:39:55] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 260 seconds)
[16:39:58] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[16:40:03] *** Quits: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:40:54] *** Quits: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is) (Quit: WeeChat 3.4)
[16:41:23] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[16:43:53] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:44:36] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:44:50] <Swayze> Cant you just use markdown
[16:44:56] *** Quits: paul424 (~tom@ip-5-172-233-33.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[16:45:40] <nedbat> Swayze: Markdown doesn't have a way to give users an option ("what OS?"), and then to conditionalize content based on that choice.
[16:45:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[16:45:49] <nedbat> Swayze: unless i'm missing something?
[16:45:51] <Swayze> For example what os: with 3 choices
[16:45:52] <Swayze> 3 links
[16:46:03] <Swayze> 3 diff target pages in your markdown
[16:46:46] <nedbat> Swayze: those three pages might be almost the same, but with different commands shown in the examples. that sounds like a pain to maintain.
[16:46:47] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:46:56] *** Joins: MasterK (~MK@86.127.26.176)
[16:47:08] <Swayze> need more context on your use case i guesss
[16:48:01] <Swayze> Why not use dhtml
[16:48:08] <Swayze> hide/show sections based on selection then
[16:48:39] *** Quits: zen_coder (~zen_coder@2a02:8109:8c80:904:699f:6e20:195b:1ccd) (Ping timeout: 252 seconds)
[16:49:20] <nedbat> right, that could be the result, I'm wondering how best to author...
[16:49:57] <nedbat> there are tools out there, but they are for interactive fiction, which is more about branching than adjusting small bits of content, and they are gui tools.
[16:50:12] *** Joins: bahamas (~lucian@84.232.140.158)
[16:50:53] <nedbat> my use case is probably impossible, but i'm wondering about finally writing "How to get Python installed right", which needs a lot of choices based on the person's OS, skill level, interest in details, domain, etc.
[16:51:15] *** Quits: savolla (~quassel@95.10.200.51) (Ping timeout: 256 seconds)
[16:52:31] <bjs> nedbat: markdown + jinja?
[16:52:47] *** Joins: Blankspace (~Blankspac@user/blankspace)
[16:52:52] <nedbat> bjs: hmm, maybe
[16:52:56] *** Joins: hams (~hams@73.232.205.0)
[16:52:56] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[16:52:56] *** Joins: hams (~hams@user/hams)
[16:53:04] <bjs> ... I've been using jinja2 a lot lately for random templating tasks it wasn't designed for
[16:53:08] <bjs> and it works better than expected.
[16:53:14] <supakeen> You could look at what is available for decision trees.
[16:53:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:53:48] <supakeen> Because a decision tree with single sentence descriptions + anchor link to subsection in article sounds nice?
[16:53:55] <nedbat> bjs: my last two projects (scriv and dinghy) both use jinja
[16:54:03] <bjs> supakeen: when you say "decision tree" what are you imagining?
[16:54:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:54:15] <bjs> I can imagine many things but none of them quite match what I think we're talking about here
[16:54:33] <supakeen> A graph: https://miro.medium.com/max/1648/0*J2l5dvJ2jqRwGDfG.png
[16:54:47] <bjs> Ah
[16:54:48] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[16:55:24] *** Joins: savolla (~quassel@95.10.200.51)
[16:58:49] *** Joins: Iolo (~iolo@user/Iolo)
[17:01:02] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[17:02:35] *** Joins: mh3f_ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[17:02:42] *** Joins: pycurious (~Adium@user/pycurious)
[17:04:17] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 256 seconds)
[17:04:40] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 272 seconds)
[17:07:04] *** Joins: ice9 (~ice9@user/ice9)
[17:08:13] *** Karyon_ is now known as Karyon
[17:10:43] *** Quits: stockholm (~Andreas@p200300d2c72b800071557c39a52517c3.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[17:11:30] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[17:11:44] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[17:13:03] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[17:14:38] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:15:23] *** Quits: schumaml (~schumaml@p200300e2ef26950053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[17:17:20] *** Quits: hams (~hams@user/hams) (Ping timeout: 272 seconds)
[17:17:25] *** Joins: bahamas (~lucian@84.232.140.158)
[17:17:56] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[17:18:56] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[17:19:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[17:19:14] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[17:19:18] *** Quits: Giovanni (~Giovanni@45.86.202.164) (Read error: Connection reset by peer)
[17:20:31] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[17:20:55] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 240 seconds)
[17:21:14] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.179)
[17:21:48] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[17:22:29] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:23:03] *** Joins: jsmooth (~quassel@user/jsmooth)
[17:23:17] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:23:25] <charisma> https://bpa.st/LYAQ
[17:23:26] <charisma> how do I write line 25 properly?
[17:23:54] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[17:24:00] <ChrisWarrick> charisma: how does it fail to work?
[17:24:49] <charisma> So I tried `print(result_pattern in sample.values())` -- the output is `False`
[17:24:56] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 272 seconds)
[17:25:19] <jsmooth> How do I specify directory for file loading and saving?
[17:25:32] <grym> charisma: have you tried printing both result_pattern and sample.values() and comparing them?
[17:25:33] *** Joins: rajkosto (~rajkosto@93-86-136-147.dynamic.isp.telekom.rs)
[17:25:35] <jsmooth> I need to create directory if it doesn't exist
[17:25:48] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[17:26:00] <ChrisWarrick> jsmooth: be more specific?
[17:26:09] <grym> jsmooth: outdir = pathlib.Path(somedirectorypath); outdir.mkdir(exist_ok=True, parents=True)
[17:26:50] <jsmooth> Is that Python?
[17:27:00] <grawity> pathlib.Path is a python thing, yes
[17:27:02] <grym> jsmooth: yes
[17:27:16] <grym> you should write it on two lines though
[17:27:18] <jsmooth> I'm working on a server and trying to setup the settings file stuff
[17:27:19] <grawity> I still use os.makedirs() though
[17:27:40] <grawity> but aside from that, what did you mean by "for file loading and saving"
[17:27:52] <jsmooth> saving to and loading from JSON file
[17:28:19] <jsmooth> I have the file open coe
[17:28:33] <jsmooth> But I want to specify where the file is located
[17:28:41] <grawity> because usually you can just specify the path along with the file name
[17:28:43] <grym> charisma: (or setting a breakpoint and looking in a debugger)
[17:29:06] <charisma> grym, so `result_pattern` is a dict and `sample.values()` is returning a list of a dictionary.  But I don't know how to write a correct check for it
[17:29:33] <bjs> charisma: to check for what exactly?
[17:29:47] <jsmooth> How do I get the current Linux user?
[17:30:01] <grawity> do you want their username, or their home directory path?
[17:30:07] <grym> charisma: well, is the dict in the list of dicts?
[17:30:17] <charisma> yes it is
[17:30:19] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[17:30:31] <grym> jsmooth: pathlib.Path.home()
[17:30:38] <bjs> charisma: how do you know it is?
[17:30:46] <grym> charisma: are you _sure_? can you show us? bpa.st/+python
[17:30:47] <charisma> bjs, I printed the output
[17:31:02] <bjs> charisma: can you show us the code that prints and the output you saw? so we can see what's going on
[17:31:12] <charisma> sure
[17:31:26] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:31:30] *** Joins: stockholm (~Andreas@p200300d2c72b800071557c39a52517c3.dip0.t-ipconnect.de)
[17:32:47] *** Joins: Enitin (~Enitin@82.180.145.230)
[17:34:03] *** Joins: plastico (~plastico@neomutt/plastico)
[17:34:05] *** Quits: kdc (~kdc@196-210-1-81.dynamic.isadsl.co.za) (Remote host closed the connection)
[17:34:09] <charisma> oh, how do you select and copy something in a VSCode terminal?
[17:34:16] *** Quits: mh3f_ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Read error: Connection reset by peer)
[17:34:27] <grym> the usual way, i think
[17:34:30] <grym> it's just text
[17:34:39] *** Joins: mh3f_ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[17:34:47] <charisma> `Keyboard Interrupt:`
[17:34:51] <bjs> Yeah I can just select it and copy it like I do from any other window
[17:35:19] <jsmooth> How's this? https://gist.github.com/longcurve/8fc7dd7aa3e49dd9ebe65963bdf07341
[17:36:21] <bjs> jsmooth: maybe you wanted / not + for the path after home,  and you're missing some () after the `def save` and in the open() the / shouldn't be inside the string probably
[17:36:24] <charisma> https://bpa.st/R6EQ
[17:36:40] <bjs> jsmooth: i'm nots ure what close(file) is supposed to be,  I guess just delete that line?
[17:37:18] <bjs> charisma: well indeed, result_pattern is not in the list at the bottom
[17:37:19] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 260 seconds)
[17:37:40] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:37:44] <jsmooth> That is string concetenation I thought (+)
[17:37:45] <bjs> charisma: notice how the list at the bottom has strings as values not numbers
[17:37:56] *** Joins: TheCat (~TheCat@user/z-cat)
[17:37:57] <bjs> jsmooth: yes but you're working with paths not strings
[17:38:00] <charisma> Ohhh
[17:38:10] <charisma> That's a mistake on my end
[17:38:28] <bjs> jsmooth: like `outputdir = pathlib.Path.home() / ".pysunlightchatserver"`
[17:38:48] <charisma> But the function `longest_match` is returning an integer
[17:39:13] <bjs> charisma: yes, that's why result_pattern has integers in it
[17:39:25] <bjs> but samples is coming from reading the csv file but that's all just text.
[17:39:30] <charisma> ah
[17:39:32] *** Joins: KapZ (kapz@203-174-181-218.per.static-ipl.aapt.com.au)
[17:39:36] <charisma> I understand better now
[17:40:15] <jsmooth> Thanks
[17:40:25] <jsmooth> I had written a server before, but the source got deleted
[17:40:48] <KapZ> does anyone have a minute to help me with some basic code, super simple?
[17:40:54] <Vrganj> sure
[17:40:57] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[17:41:07] *** Quits: jpn_ (~jpn@user/jpn) (Ping timeout: 256 seconds)
[17:41:28] <nedbat> KapZ: Welcome. If you have a question, it's always best to jump right in and ask it.
[17:41:33] <bjs> nedbat: the only caveat I can think of is that if you wanted it "interactive" you'd probably need some fancy javascript stuff,  assuming you're going to do this through the browser
[17:41:46] <KapZ> looking to get a user input to create a variable but need to make sure the input is a number only not a string and if the user doesnt input a number then it stores the variable as 0?
[17:42:11] <nedbat> bjs: i've been mulling it over. i can imagine a jinja/markdown thing that generates static html with the choices encoded in the file names.
[17:43:51] <nedbat> bjs: but i also know that this is exactly the kind of shiny crazy idea I am drawn to, and that might not be worth doing....
[17:44:01] <bjs> nedbat: what about something that uses the i18n machinery?
[17:44:13] <bjs> just treat "windows" and "linux" as different languages :D
[17:44:24] <nedbat> bjs: i can't quite picture how that would work
[17:44:38] *** Joins: _filename (~kilitary@188.242.105.134)
[17:44:54] <Vrganj> KapZ: int will throw an exception if you pass an empty string or an invalid number
[17:45:12] <bjs> nedbat: I'm not sure what the standard way of building multilingual websites is,  perhaps it's basically the same solution
[17:45:40] <bjs> just with a more standardised way of storing and generating different different output strings given an input language choice
[17:45:46] <bjs> which is roughly what you are trying to do
[17:46:00] <nedbat> infobob: redent KapZ try: var = int(input("Give me a number: "));; except ValueError: var = 0
[17:46:11] <nedbat> (maybe infobob doesn't exist anymore?)
[17:46:22] <bjs> is infobob stuck the other side
[17:46:41] <nedbat> this side had its own bot to do mostly what we needed infobob for, i guess we left him
[17:46:52] <bjs> poor bob
[17:47:13] <nedbat> he went to a farm upstate
[17:47:26] *** Joins: Giovanni (~Giovanni@45.86.202.164)
[17:47:50] <charisma> ok so, is there a simpler way to handle this "string-to-int" problem than what I've used in this program? https://bpa.st/NH3A
[17:47:53] *** Quits: namkeleser (~namkelese@101.175.155.55) (Quit: Client closed)
[17:48:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:48:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 260 seconds)
[17:49:00] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 272 seconds)
[17:49:14] <nedbat> KapZ: sorry, did you understand the bit of code I typed before?
[17:49:44] *** Joins: diamondbond (~diamondbo@175.157.58.221)
[17:49:49] *** Quits: timkofu (~timkofu@user/timkofu) (Remote host closed the connection)
[17:49:55] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:535:e539:e5ca:5cf9) (Ping timeout: 260 seconds)
[17:49:58] <KapZ> just not the ;; syntax error?
[17:50:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:50:45] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-dd7d-acc-d2b2-b154.fixed6.kpn.net) (Remote host closed the connection)
[17:50:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:50:50] <KapZ> Can i PM you?
[17:50:54] <bjs> KapZ: yeah that's a syntax error, you need to make a newline and indent it.
[17:51:15] <nedbat> KapZ: https://gist.github.com/nedbat/16f93f8fa540e11ab24573bbdb6d474b
[17:51:53] *** Quits: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net) (Ping timeout: 256 seconds)
[17:52:00] *** Joins: HurricaneHarry (~quassel@2a02-a455-9d06-1-6135-4076-26cc-44c.fixed6.kpn.net)
[17:52:35] <bjs> KapZ: int(some_string) will return the number (integers at least, use `float` rather than `int` if you want decimals too) or will throw a ValueError exception if the input wasn't a number at all
[17:52:43] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[17:52:45] *** Joins: teut (~teut@103.144.92.141)
[17:53:04] *** Joins: jpn (~jpn@user/jpn)
[17:54:15] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[17:55:35] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[17:56:00] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:56:02] *** Joins: timkofu (~timkofu@105.161.206.44)
[17:56:02] *** Quits: timkofu (~timkofu@105.161.206.44) (Changing host)
[17:56:02] *** Joins: timkofu (~timkofu@user/timkofu)
[17:56:13] <anddam> parsnip: yes, you wrote the python version right after that line, but I was curious
[17:56:49] * parsnip nods
[17:57:01] <anddam> parsnip: I briefly skimmed dart while trying to approach flutter, in my desiderata there's always to deliver multi-platform GUI app
[17:57:05] <KapZ> is there an alternative method without using try/except out of curiosity?
[17:57:25] *** Joins: upsala (~zcb@185.209.196.134)
[17:57:48] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:4156:bbe5:9259:5976)
[17:57:57] <anddam> KapZ: you could use if:else: blocks instead
[17:57:57] *** Joins: PaterTemporalis (~woooopsie@dsl-76-143.bl27.telepac.pt)
[17:57:57] <bjs> KapZ: you can `s = input(...)` then do an `if` check to see if the string only contains digits like `if s.isnumeric(): var = int(s) else: var = 0`
[17:58:07] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[17:58:46] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[17:59:14] <bjs> KapZ: but this way you are repeating the checks `int` is doing, and I'm not even sure if isnumeric() is actually the identical check so you'd have to be careful.  try/except is much nicer (in my opinion) as it just lets int decide if it's an int, which seems more logical
[17:59:21] *** Joins: Blankspace (~Blankspac@user/blankspace)
[17:59:44] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[18:00:03] <bjs> KapZ: is there a reason you want to avoid try/except ?
[18:00:11] *** Joins: bahamas (~lucian@84.232.140.158)
[18:00:31] *** Quits: diamondbond (~diamondbo@175.157.58.221) (Quit: Leaving)
[18:01:26] <KapZ> wanted to demonstrate it with if/else if possible but yes try/except is much better I agree
[18:02:40] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[18:02:40] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[18:02:40] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[18:02:40] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[18:02:40] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[18:02:40] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[18:02:40] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[18:02:40] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[18:02:54] *** Joins: l4yer (~l4yer@user/l4yer)
[18:02:54] *** Joins: CombatVet (~c4@user/combatvet)
[18:02:55] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:03:00] *** Joins: fling (~fling@user/fling)
[18:03:01] *** Joins: bindu (~bindu@user/bindu)
[18:03:02] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[18:03:03] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[18:03:03] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[18:03:09] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:03:25] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:03:43] <anddam> time to project euler the sh*t out of that problem
[18:04:35] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[18:04:36] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:04:55] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 256 seconds)
[18:05:24] *** Quits: upsala (~zcb@185.209.196.134) (Ping timeout: 240 seconds)
[18:06:29] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:07:38] *** Joins: upsala (~zcb@185.209.196.134)
[18:07:40] <charisma> https://bpa.st/P5AQ
[18:07:40] <charisma> line 17 or line 18?
[18:07:52] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[18:08:04] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:08:09] *** Quits: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94) (Quit: Konversation terminated!)
[18:08:21] *** PJBoy is now known as Guest4132
[18:08:21] *** Quits: Guest4132 (~PJBoy@user/pjboy) (Killed (zinc.libera.chat (Nickname regained by services)))
[18:08:27] *** Joins: PJBoy (~PJBoy@user/pjboy)
[18:09:13] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[18:09:20] <bjs> charisma: what is the line trying to do?
[18:09:23] <bjs> the lines sorry
[18:09:36] <anddam> charisma: both are quite unreadable to me
[18:09:47] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[18:09:55] <bjs> yeah i can't tell what you're trying to do by reading the line, so probably "neither" :)
[18:10:00] <anddam> well not 17 and 18 but 10 and 13
[18:10:06] <charisma> they are printing the key at which the value is the same as `result_pattern`
[18:10:57] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 240 seconds)
[18:11:10] <anddam> if the choice is between 17 and 18 then 18
[18:11:10] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 272 seconds)
[18:11:29] *** Joins: iomari891 (~iomari891@197.210.53.228)
[18:11:30] <anddam> you human-macro-expanded """list(sample.values()).index(result_pattern)""" to 0
[18:11:31] <bjs> charisma: does each sample only contain 1 key?
[18:11:32] <anddam> brilliant
[18:11:38] <charisma> bjs yes
[18:11:48] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[18:11:52] <bjs> charisma: then maybe you don't want a dictionary at all
[18:11:55] <charisma> the person name
[18:12:03] <charisma> no no
[18:12:07] <bjs> no no?
[18:12:09] <charisma> wait
[18:12:50] <anddam> also you should get the sample key at the first for:
[18:13:01] <anddam> for sample, key in samples.items():
[18:13:10] <charisma> https://bpa.st/R6FQ is how the samples are stored
[18:13:20] <anddam> no need for list(sample.keys())[0]
[18:13:21] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[18:13:27] <anddam> just   key
[18:13:33] <charisma> samples is not a dict tho
[18:13:46] <bjs> charisma: okay, but why?
[18:13:48] *** Joins: jpn (~jpn@user/jpn)
[18:13:52] <anddam> right, at the second for
[18:13:59] *** Quits: yakiza (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net) (Remote host closed the connection)
[18:13:59] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[18:14:00] <anddam> rather than sample.values() use sample.items()
[18:14:01] *** Joins: Sadale (~Sadale@user/sadale)
[18:14:10] <charisma> I couldn't create a dictionary for samples
[18:14:10] <bjs> charisma: a list of single-key dictionaries each with its own single key -- why not just make it a single dictionary with lots of keys?
[18:14:26] <anddam> oh but you always use the first key
[18:14:57] <anddam> can you pastebin a mwe?
[18:14:58] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 272 seconds)
[18:15:57] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[18:16:04] <bjs> charisma: well I think the easiest way to make this code more readable would be to restructure the data structure so it matches better. Instead of a list of dictionaries with a single key in each you could have just 1 big dictionary with lots of keys,  or perhaps a list of pairs (tuples) like [("Vernon", {...}), ("Zacharias", {...}), ...]` then you can go `for (name, sample) in samples: ...`
[18:16:29] <bjs> or `for name, sample in samples.items()` if you go the big dictionary route. Rather than trying to get the .keys() and then extract the one and only key there is
[18:16:34] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[18:16:43] *** Joins: wakeup (~wakeup@user/wakeup)
[18:16:47] <charisma> oh right...
[18:17:30] <anddam> were you trying to preserve orders with the list?
[18:17:34] <anddam> order*
[18:17:39] <charisma> I'll have to think everything from scratch again
[18:17:44] <charisma> also, what's mwe?
[18:18:17] <charisma> yes, the order matters. anddam
[18:18:25] *** Quits: jcass (~cindy@50-0-146-207.dsl.dynamic.fusionbroadband.com) (Remote host closed the connection)
[18:18:42] *** Joins: jcass (~cindy@50-0-146-207.dsl.dynamic.fusionbroadband.com)
[18:19:03] *** Quits: KapZ (kapz@203-174-181-218.per.static-ipl.aapt.com.au) (Quit: Going offline, see ya! (www.adiirc.com))
[18:21:32] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[18:21:49] *** Quits: Vision (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 240 seconds)
[18:23:05] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8c37-a4ab-78fb-661a.res6.spectrum.com)
[18:24:22] *** Joins: Blankspace (~Blankspac@user/blankspace)
[18:24:23] *** Quits: Giovanni (~Giovanni@45.86.202.164) (Read error: Connection reset by peer)
[18:24:30] *** Joins: linux_dream (~linux_dre@2a01:e0a:19:5e70:4ecc:6aff:feb9:b25b)
[18:26:15] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[18:26:32] <anddam> mmm I am not up to date but IIRC order in dict is guaranteed since <certain version maybe 3.8>
[18:26:50] *** Quits: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[18:28:09] *** Joins: kosh (~kosh@user/kosh)
[18:28:30] <charisma> https://bpa.st/CF7Q
[18:28:31] <charisma> using a dictionary now, but what am I wrong? There's no output.
[18:28:59] <anddam> MWE is a minimal working example, something the person reading can run on their own
[18:29:07] <charisma> ohh
[18:29:29] <bjs> charisma: is that `break` supposed to be there?
[18:29:37] <charisma> nope
[18:29:43] <bjs> was the break the probleM/
[18:29:44] <charisma> it should be inside the if block
[18:29:46] <bjs> the problem? *
[18:30:26] <charisma> I removed some code from there and accidently changed the indentation
[18:30:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:30:41] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:30:44] <charisma> works correcly
[18:31:09] <charisma> but the question is: which one of the two programs is more efficient?
[18:31:35] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 240 seconds)
[18:31:53] <bjs> charisma: given how tiny your input seemed to be, it probably doesn't matter.
[18:32:13] <bjs> They're both looping over the whole structure and doing equality on every element.
[18:32:20] <charisma> yeah...
[18:32:42] <charisma> but I do have a database with millions of DNA samples tho
[18:32:43] *** Joins: thiras (~thiras@user/thiras)
[18:33:15] *** Quits: timkofu (~timkofu@user/timkofu) (Ping timeout: 256 seconds)
[18:33:20] *** Joins: Giovanni (~Giovanni@45.86.202.164)
[18:33:35] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 240 seconds)
[18:33:56] *** Quits: Giovanni (~Giovanni@45.86.202.164) (Read error: Connection reset by peer)
[18:34:30] <charisma> the other version has a nested loop which makes it slower than the current version right?
[18:35:02] <Helle> weee writing some, generators producing generators chained to other generators
[18:35:06] <Helle> because generator-ception
[18:35:10] <bjs> charisma: nested loop where?
[18:35:19] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[18:35:20] <charisma> `if result_pattern in sample.values()`
[18:35:26] <bjs> charisma: yeah but there was only 1 value
[18:35:31] <charisma> oh yeah
[18:35:50] <bjs> charisma: I mean the program is doing the exact same amount of work really, in the same way
[18:35:51] *** Joins: Blankspace (~Blankspac@user/blankspace)
[18:36:08] <bjs> differences between them in terms of performance is going to be so tiny I wouldn't even bother trying to measure it
[18:36:16] <charisma> So, which version of this program should I use?
[18:36:31] <bjs> charisma: the one that is easiest to read, understand and maintain
[18:36:34] <bjs> since they're doing the same thing
[18:36:36] <anddam> how do I "shallow-compare" two iterables in a compact way?
[18:36:46] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[18:36:49] <bjs> anddam: what does "shallow compare" mean
[18:36:58] <anddam> i.e. the comparison of [1, 2, 3] and (1, 2, 3) should be true
[18:37:24] <charisma> which one of the two is the easiest to read, understand, and maintain? I'm sorry, I'm not from a CS background...
[18:37:45] <anddam> tuple([1, 2, 3]) == (1, 2, 3)  is true and pretty clear
[18:37:51] <anddam> I wonder why do I return list in first place
[18:37:54] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:37:59] <bjs> charisma: well I think the `for person, sample in ...: if sample == result_pattern` is much easier to read than the {list(sample.keys())[list(sample.values()).index(result_pattern)]} line
[18:38:03] <bjs> don't you?
[18:38:15] <charisma> true
[18:38:23] <charisma> I think I got my answer
[18:38:32] <anddam> "moAr parenthesis!" (cf. Any Lisper)
[18:39:04] <charisma> I'll save both the programs for future reference
[18:39:05] <anddam> full disclaimer: that's a bad joke, those parens are used wrong and I am a wannabe lisper
[18:39:15] <charisma> what's lisper?
[18:39:29] <anddam> glad you asked
[18:39:30] <bjs> anddam: which parens are used wrong?
[18:40:49] <anddam> charisma: https://www.youtube.com/watch?v=FIUJd_ZFmGo&list=PL7BcsI5ueSNFPCEisbaoQ0kXIDX9rR5FF
[18:41:04] <charisma> One more question, though it's not really a serious problem.
[18:41:05] <charisma> Have I used a terrible naming scheme for the variables? `test_sequence`,  `sequences`, `sequence` and so on.
[18:41:16] <bjs> charisma: lisp is a very old programming language (that (looks like (this)))
[18:41:43] *** Quits: stockholm (~Andreas@p200300d2c72b800071557c39a52517c3.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[18:41:48] <charisma> Oh
[18:41:51] <anddam> bjs: those in python function call style (not sure where that syntax originally come from, maybe Algol?)
[18:41:51] <bjs> charisma: not terrible, no.  Do there exist better names? probably.  naming things is hard
[18:42:21] *** Joins: Vision (~Vision@023-084-128-214.res.spectrum.com)
[18:42:39] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[18:43:25] <anddam> bjs: yes it is, yesterday I had to fight a colleague to prevent him to name the variable for the start of a time period "daysToNow"
[18:43:29] <charisma> The person reading the program is likely to forget the role of each variable.
[18:43:29] <charisma> `{sequence: longest_match(test_sequence, sequence) for sequence in sequences[1:]}`
[18:43:30] <charisma> is really hard to read, isn't it?
[18:44:24] <anddam> that "sequence" is ephemeral, I'd short to "seq", keep the idea and gets out the way quick
[18:45:36] <charisma> oh that'll probably do it
[18:45:49] <bjs> anddam: you should be careful with contractions like that because "sequence" has multiple meanings but "seq" usually only corresponds to one of them
[18:45:49] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[18:45:51] <BinarySavior> how can I find the most recent version of flask that still uses markupsafe v2.0.1?
[18:45:52] <bjs> and isn't the meaning charisma is using
[18:46:00] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 272 seconds)
[18:46:18] <charisma> hmm
[18:46:23] <anddam> bjs: what was that quote? "there are only two hard things in computer science: cache invalidation, naming things and off-by-one errors"
[18:46:46] <charisma> that's a really nice quote
[18:46:53] <anddam> bjs: I am not sure to grasp that about "seq"
[18:47:00] <bjs> anddam: is a list a sequence?
[18:47:17] <anddam> charisma: IIRC the off-by-one bit is a joke on the actual quote
[18:47:44] <charisma> Ah okay
[18:47:47] <bjs> anddam: `seq` to me denotes some generic sequence type (i.e. Sequence[T]) but that's not what charisma means by sequence here since they are doing genetics
[18:47:54] *** Quits: Vision (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 272 seconds)
[18:47:58] <anddam> bjs: in parlance, yes it is
[18:48:13] <charisma> yeah
[18:48:55] <charisma> how about `subsequence` ?
[18:49:02] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[18:49:26] <bjs> charisma: I'd look at what proper bio libraries use for variable names, as it can often be nice to be consistent with those
[18:49:32] <bjs> if they use `seq` or `sequence` then I'd do that too
[18:49:38] <charisma> Gotcha
[18:49:58] <bjs> But if they use `dna` instead, or some other phrase to mean "an object containing a sequence" then I'd use that instead
[18:50:20] <charisma> oh I should probably use `dna` instead of `test_sequence`
[18:52:14] <bjs> charisma: naming things is hard, naming things when you're inside a particular subdomain can be even harder
[18:52:16] *** Joins: stockholm (~Andreas@p200300d2c72b800071557c39a52517c3.dip0.t-ipconnect.de)
[18:52:32] <charisma> That's absolutely true
[18:52:56] <bjs> because words might suddenly gain specific meanings *in addition to* their generic meanings (like "sequence" here)
[18:53:09] <charisma> Yeah, that's right
[18:53:38] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:53:47] <charisma> I will use `dna` and `sequence` for now
[18:53:51] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[18:53:54] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:54:02] <anddam> how do I chain a constant value to a generator expression?
[18:54:07] *** Quits: han-solo (~han-solo@user/han-solo) (Read error: Connection reset by peer)
[18:54:31] <charisma> thanks for the help, #python :)
[18:54:34] <anddam> I am returning   return tuple(f for f in range(10))    I'd like the tuple to have 200 as initial item as well
[18:54:41] *** Joins: han-solo (~han-solo@user/han-solo)
[18:54:43] <anddam> I think itertools has something up its sleeve
[18:54:47] <jinsun> itertools.chain
[18:55:30] <anddam> chain
[18:55:41] <jinsun> tuple(itertools.chain((200,), range(10)))
[18:56:42] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:57:14] *** Quits: the4oo4 (~the4oo4@shenzhou.whatbox.ca) (Ping timeout: 260 seconds)
[18:57:21] *** Quits: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru) (Quit: WeeChat 3.4.1)
[18:58:08] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:4156:bbe5:9259:5976) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:58:17] <bjs> charisma: the biopython library seems to have a Seq class, and uses the "seq" "sequence" and "dna" names for generic variables https://github.com/biopython/biopython/blob/master/Bio/Seq.py
[18:58:35] *** Joins: akk (~akk@75.161.150.5)
[18:59:00] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[18:59:29] *** Quits: Blankspace (~Blankspac@user/blankspace) (Quit: Client closed)
[18:59:31] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:59:32] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 252 seconds)
[18:59:34] <bjs> but then has things like `protein_seq` and such for more specificity in less generic parts of the code
[18:59:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:00:19] *** Joins: jokoon (~eio@2a01:e0a:542:e160:d930:938f:f075:3f5a)
[19:00:21] <jokoon> hello
[19:00:35] <jokoon> Is there a way to encrypt data with python 3?
[19:00:41] <jokoon> I mean without custom libs?
[19:01:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[19:01:23] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:b675:9221:6d36:de5f) (Quit: pvergain)
[19:02:08] *** Joins: MikZyth (~MikZyth@host-161-158-66-217.spbmts.ru)
[19:02:16] <jinsun> no, you need external libs for that kind of stuff
[19:02:43] *** Quits: linux_dream (~linux_dre@2a01:e0a:19:5e70:4ecc:6aff:feb9:b25b) (Quit: Client closed)
[19:02:44] <jinsun> https://cryptography.io/ is good
[19:03:12] <jokoon> Yeah I guess it doesn't belong in default python
[19:03:28] <jinsun> there is nacl bindings also https://pynacl.readthedocs.io/
[19:03:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:03:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[19:03:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:03:49] *** Joins: defiant (~defiant@user/defiant)
[19:04:48] *** Joins: fling (~fling@user/fling)
[19:05:33] *** Quits: savolla (~quassel@95.10.200.51) (Ping timeout: 256 seconds)
[19:05:43] <anddam> jokoon: like serious ciphering or rot13?
[19:05:59] <jokoon> Like AES yeah, serious ciphers
[19:06:10] <anddam> cryptography I guess hen
[19:06:14] *** Joins: Giovanni (~Giovanni@45.86.202.164)
[19:06:16] <anddam> x/hen/ i/t/
[19:06:21] <anddam> not calling you a chicken
[19:06:34] <jokoon> I thought ciphers would not require a lot of memory as a default module...
[19:06:52] <jokoon> lol
[19:06:56] <anddam> jeez I ended up writing a test function to figure why my factors() was not factoring
[19:06:57] *** Quits: Speed2u (Speed2u@bnc.speed2u.nu) (Quit: ZNC - https://znc.in)
[19:07:14] <anddam> turns out the problem and I had different definitions of what a factor is
[19:07:34] <anddam> jinsun: I have a sloooow algorithm here
[19:07:34] *** Quits: jpn (~jpn@user/jpn) (Quit: Lost terminal)
[19:07:56] *** Joins: diddly_bop_ (~diddly_bo@107-196-11-132.lightspeed.wchtks.sbcglobal.net)
[19:08:20] <jinsun> which problem?
[19:08:57] *** Quits: diddly_bop (~diddly_bo@107-196-11-132.lightspeed.wchtks.sbcglobal.net) (Ping timeout: 256 seconds)
[19:09:00] *** Quits: sus (zero@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[19:09:06] *** Joins: Speed2u (Speed2u@bnc.speed2u.nu)
[19:09:36] *** Joins: sus (zero@user/zeromomentum)
[19:11:37] <anddam> 12
[19:11:41] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[19:11:52] <anddam> I am doing a bunch, then try to rewrite my solutions (as bad as they are) using hy
[19:11:57] *** Quits: launchd (launchd@bitbot/launchd) (Ping timeout: 240 seconds)
[19:11:59] <anddam> bunch likely be 16 or 25
[19:12:52] <anddam> jinsun: right now I was evaluation factors(n) each time, now I am both adding cache, that never hurts, but most importantly thinking about the argument I am evaluating
[19:12:57] *** Joins: savolla (~quassel@95.10.200.51)
[19:13:30] *** Joins: Vision (~Vision@023-084-128-214.res.spectrum.com)
[19:13:46] <anddam> def factors(number) is taking actually  n * (n + 1) // 2, as you do, so I only need to do half the computation, the first factor would come (cached) from previous step
[19:13:59] *** Joins: zmt01 (~zmt00@user/zmt00)
[19:14:36] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[19:15:04] *** Joins: bahamas (~lucian@84.232.140.158)
[19:15:13] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[19:15:57] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:4156:bbe5:9259:5976)
[19:16:19] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[19:16:42] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[19:18:25] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[19:18:31] *** Joins: the4oo4 (~the4oo4@shenzhou.whatbox.ca)
[19:19:17] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[19:19:29] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[19:19:50] *** Joins: soju-test-user (~soju-test@lfbn-idf2-1-1140-121.w90-92.abo.wanadoo.fr)
[19:21:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:21:25] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:22:06] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[19:22:56] *** Joins: Vision-_- (~Vision@023-084-128-214.res.spectrum.com)
[19:22:56] *** Joins: han-solo (~han-solo@user/han-solo)
[19:23:25] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:25:17] *** Quits: Vision (~Vision@023-084-128-214.res.spectrum.com) (Ping timeout: 240 seconds)
[19:26:25] <jinsun> anddam: calculating number of factors also needs looping upto only isqrt(n), so that saves a lot of time
[19:28:23] *** Quits: rajkosto (~rajkosto@93-86-136-147.dynamic.isp.telekom.rs) (Ping timeout: 260 seconds)
[19:28:34] *** Quits: Quietus (~quietus@2a04:52c0:101:181::) (Quit: No Ping reply in 180 seconds.)
[19:29:00] *** Joins: Pixi (~Pixi@user/pixi)
[19:29:37] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[19:29:49] *** Joins: Quietus (~quietus@2a04:52c0:101:181::)
[19:29:56] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[19:30:03] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:30:53] <theseb> what's the latest python AI news to get excited about since AlphaGo/Zero, GPT-3 and protein folding?
[19:31:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:32:29] <charisma> 40,000 chemicals weapons suggested in an hour by an AI that was created to discover new drugs
[19:33:16] <charisma> bjs, thanks for sharing that github repo.
[19:34:03] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[19:34:27] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 256 seconds)
[19:34:33] *** TheCat is now known as ShoppingCat
[19:34:45] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[19:34:55] <theseb> charisma: hmm
[19:35:20] *** Joins: hvitol (~hvitol@218-145-17-89.fiber.hringdu.is)
[19:35:29] <charisma> that's scary
[19:36:04] <charisma> Scientists swapped the parameters and the result was entirely opposite
[19:36:06] <theseb> charisma: tell me about the other 30,000 good chemicals is suggested to fight cancer, dementia and other illnesses
[19:36:16] <theseb> it*
[19:36:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[19:36:50] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[19:38:04] *** Joins: bahamas (~lucian@84.232.140.158)
[19:38:12] <charisma> That's great @theseb
[19:39:11] *** Joins: alex11 (~alex11@user/alex11)
[19:40:51] <charisma> " Researchers put AI normally used to search for helpful drugs into a kind of “bad actor” mode to show how easily it could be abused at a biological arms control conference."
[19:41:13] *** Quits: charisma (~charisma@223.233.78.138) (Quit: Client closed)
[19:42:18] *** _filename is now known as filename
[19:43:12] *** Quits: Giovanni (~Giovanni@45.86.202.164) (Read error: Connection reset by peer)
[19:43:57] *** Joins: blddk7 (~blddk@user/blddk)
[19:44:54] <anddam> jinsun: does it? I think it requires //2
[19:45:00] *** Joins: uwu57 (~uwu@dynamic-190-25-161-81.dynamic.etb.net.co)
[19:45:24] <anddam> jinsun: these are not prime factors, these are divisors
[19:45:30] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[19:45:47] *** Quits: blddk (~blddk@user/blddk) (Ping timeout: 256 seconds)
[19:45:47] *** blddk7 is now known as blddk
[19:45:48] <anddam> and 1 and <N> are included in the set
[19:45:52] <anddam> (pretty odd to me)
[19:46:26] <anddam> it's still
[19:46:28] <anddam> @cache
[19:46:30] <anddam> def factors_of(number):
[19:46:32] <anddam>     return chain((factor for factor in range(1, number // 2 + 1) if number % factor == 0), [number])
[19:46:37] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:535:e539:e5ca:5cf9)
[19:46:48] <anddam> this is according to the problem specs
[19:47:23] <jinsun> you can do till isqrt(n) for normal divisors too
[19:48:03] <jinsun> because when you find a divisor less than isqrt(n) you automatically find another one that is greater than isqrt(n)
[19:48:20] <jinsun> so you should increase the count by 2
[19:48:39] <jinsun> and stop at isqrt(n) because you would have found everything by then
[19:49:09] <anddam> let's think about 64, isqrt(64) == 8 and you would stop at 8, right?
[19:49:18] <jinsun> yes
[19:49:22] <anddam> but you miss 16, 32 and 64 in doing this
[19:49:36] <anddam> you cannot reduce to prime factors
[19:49:36] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[19:49:49] <anddam> you have to check any numbers whose remainder WRT the number is 0
[19:49:57] <anddam> x/numbers/ c/number/
[19:49:58] <jinsun> no you don't miss then 64 is counted with 1, 32 is counted with 2, 16 is counted with 4
[19:50:17] <jinsun> that is why I said increase count by 2 everytime
[19:50:28] <anddam> mm because you'd add both factor with one match?
[19:50:36] *** Joins: eson123 (~whatever@user/eson123)
[19:51:09] <anddam> I see what you are saying I was just recalling your previous hint at factors, those were only prime factors so 2 would be present with the sixth power
[19:51:24] <anddam> jinsun: oh, count **of factors**
[19:51:29] <anddam> not count( , 2)
[19:51:49] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[19:51:54] *** Joins: yosef36 (~yosefweis@2001:470:69fc:105::1:e501)
[19:52:08] <eson123> is there any default function for coverting time to the latest unit ? for example if i pass in 30 seconds, it will give me "30s" and if i pass in 120 seconds, it will covnert it to "2m" or "2 minutes" and so on, 160 seconds = "2m" and "40 seconds"
[19:52:25] <jinsun> anddam: yeah not itertools.count :D, maybe I should have said counter? or n_factors probably
[19:52:29] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:52:35] <nedbat> eson123: there isn't a built-in for that, but the divmod built-in will be helpful
[19:52:59] <eson123> well, guess i have to manually do the converting then :P
[19:53:15] <anddam> jinsun: ok, I have no way to sort a generator though, so I should switch to just counting the factors
[19:53:21] <anddam> I liked having the actual factors, sorted
[19:53:33] <anddam> I figure sorting is part of the computational complexity
[19:53:46] <nedbat> eson123: minutes, seconds_remaining =  divmod(seconds, 60)
[19:54:15] <jinsun> anddam: this takes 9 seconds here https://bpa.st/YDHQ, not too bad, but looks like there is some math you can do which is not so naive to make the algo even faster
[19:54:18] <anddam> well no, the set of factors is way smaller than the number under calculation
[19:54:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:54:27] <anddam> solution to the problem?
[19:54:43] <anddam> won't open for now, I first have to (decently) solve it on my own
[19:54:55] <anddam> I mean that's the whole idea
[19:55:16] <eson123> nedbat: oh, that's fast
[19:55:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:55:17] <eson123> ok thk
[19:55:45] <jinsun> anddam: okay then don't open it, but the hint is that yes you shouldn't sort or store the factors, you need the count of factors
[19:56:01] <jinsun> anddam: and isqrt thing that I already told
[19:56:09] *** Joins: wakeup (~wakeup@user/wakeup)
[19:56:33] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[19:56:48] <anddam> jinsun: yep but I read the problem at hand and wrote this https://termbin.com/c8mp
[19:56:57] <anddam> to check that my assumptions were right
[19:57:15] <anddam> now I have to change the assert to only compare length, still a bit tested but not really the same
[19:57:36] <anddam> boy I have no idea how to approach this in lisp
[19:57:44] *** Gustavo6046 is now known as Gustavo6046\away
[19:57:46] <anddam> but that's a matter for another channel
[19:58:43] <jinsun> you can do even factors_of without sorting and looping till isqrt only
[19:59:24] *** Joins: pepper (~pepper@user/pepper)
[19:59:38] <anddam> yes, that's what I got from the previous lines
[20:00:02] <jinsun> it will be slower since adding numbers is faster than making lists and appending, but these are not very large numbers, so wouldn't be too slow
[20:00:04] <anddam> no sorting, no return of factors at all, "mark twain" each factor fount up to isqrt(n)
[20:01:05] <anddam> should I care having a generator expression of sake of clarity then or just a for with an integer counter?
[20:01:09] <anddam> e.g.  I have
[20:01:11] <anddam> def factors_of(number):
[20:01:13] <anddam>     return len(factor for factor in range(1, isqrt(number)) if number % factor == 0)
[20:01:28] <anddam> that won't work since generator have no len()
[20:02:04] <anddam> but I wonder if I should len(tuple()) that, or just do a for …: if number % factor == 0: counter += 2
[20:02:07] *** Joins: yakiza (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net)
[20:02:23] <jinsun> for with integer counter is simpler and faster too since you don't make a unnecesary tuple
[20:02:37] <anddam> right
[20:03:02] <anddam> I only have the concept that the generator is lazily evaluated, but in order to count there's need to assemble the inner tuple() call
[20:03:14] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:03:18] <anddam> is there such a thing as a "lazy counter" that will only keep the total count?
[20:03:23] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[20:03:26] <anddam> possibly an accumulator, or reducer
[20:03:27] *** Joins: bloody (~bloody@user/bloody)
[20:03:45] <anddam> I think that would work, consuming the item and only keeping a "total count" state
[20:03:50] <anddam> the reducer I mean
[20:03:56] <jinsun> there is sum(1 for _ in gen)
[20:04:05] <anddam> and that would "functional"
[20:04:08] <jinsun> if you want "len" of gen
[20:04:20] <anddam> oh python makes things so nice
[20:04:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:04:43] <anddam> built-in sum() does the trick there, right? consuming an iterable in a smart way
[20:04:53] <anddam> it does not get the whole (1,1,1,1,1,1) iterable then count it
[20:04:59] *** Joins: Giovanni (~Giovanni@45.86.202.164)
[20:05:00] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[20:05:02] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[20:05:11] <jinsun> yes and actually you need sum(2 for _ in ...)
[20:05:27] <jinsun> each counts twice as I mentioned before
[20:06:05] *** Joins: Bobathan (~admin@cpe-65-29-248-157.wi.res.rr.com)
[20:06:29] *** Quits: Giovanni (~Giovanni@45.86.202.164) (Read error: Connection reset by peer)
[20:06:42] <jinsun> if n is perfect square then isqrt(n) is a factor and it will be counted twice though, so check for that and subtract 1
[20:07:00] *** Joins: wolfshappen (~waff@irc.furworks.de)
[20:07:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[20:07:53] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[20:08:55] *** Joins: fling (~fling@user/fling)
[20:09:00] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 240 seconds)
[20:09:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[20:09:52] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[20:10:12] *** Joins: thiras (~thiras@user/thiras)
[20:12:08] *** Joins: Auron (Auron956@user/auron)
[20:13:24] *** Joins: Giovanni (~Giovanni@45.86.202.164)
[20:13:55] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[20:14:01] *** Quits: Giovanni (~Giovanni@45.86.202.164) (Read error: Connection reset by peer)
[20:15:04] *** Joins: jay-m126 (~jay-m@d75-159-62-172.abhsia.telus.net)
[20:15:30] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[20:15:52] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[20:16:22] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[20:16:49] *** Joins: the_lanetly_052_ (~the_lanet@194.135.154.59)
[20:17:59] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[20:18:02] *** Quits: michaelis (~michaelis@193.183.209.17) (Ping timeout: 240 seconds)
[20:20:08] *** Joins: timkofu (~timkofu@197.179.68.141)
[20:20:08] *** Quits: timkofu (~timkofu@197.179.68.141) (Changing host)
[20:20:08] *** Joins: timkofu (~timkofu@user/timkofu)
[20:21:24] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:21:33] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:21:42] <causasui> gut check, but a class where every member is a @property should just be a dataclass right?
[20:21:57] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:22:03] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[20:22:14] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[20:22:33] <causasui> there is -one- exception, which is __iter__(self) so that dict(instance) is possible
[20:22:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:23:27] *** Quits: akk (~akk@75.161.150.5) (Ping timeout: 260 seconds)
[20:24:21] *** Joins: Pickchea (~private@user/pickchea)
[20:24:40] <jinsun> use dataclasses.asdict for that
[20:24:53] <causasui> right
[20:25:01] <causasui> so in other words, yes this should be a dataclass
[20:25:17] *** Quits: mh3f_ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 240 seconds)
[20:25:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[20:27:33] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[20:27:38] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[20:27:46] *** Joins: Giovanni (~Giovanni@45.86.202.164)
[20:30:30] *** Quits: PaterTemporalis (~woooopsie@dsl-76-143.bl27.telepac.pt) (Ping timeout: 272 seconds)
[20:31:00] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 240 seconds)
[20:32:21] *** Joins: elb0w (~elb0w@pool-98-109-49-7.nwrknj.fios.verizon.net)
[20:34:03] *** Joins: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl)
[20:34:06] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:34:29] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:35:23] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:36:37] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:36:46] *** Joins: dreamon (~dreamon@p57a4c25c.dip0.t-ipconnect.de)
[20:38:44] *** Quits: ericleer (~ericleer@dhcp-077-249-173-130.chello.nl) (Ping timeout: 272 seconds)
[20:38:45] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Quit: Leaving)
[20:39:32] *** Quits: Allegretto (~allegrett@217-197-178-135.pool.digikabel.hu) (Ping timeout: 240 seconds)
[20:39:55] <anddam> jinsun: I think I have _not_ got it
[20:39:58] *** Quits: savolla (~quassel@95.10.200.51) (Read error: Connection reset by peer)
[20:40:22] <anddam> it has been running for couple tens of seconds and the average factors no. is ~250
[20:40:30] *** Joins: savolla (~quassel@95.10.200.51)
[20:40:49] <anddam> I print them out once they are > 200
[20:43:48] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[20:44:08] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Remote host closed the connection)
[20:46:35] *** Quits: uwu57 (~uwu@dynamic-190-25-161-81.dynamic.etb.net.co) (Quit: Client closed)
[20:46:42] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Quit: The Lounge - https://thelounge.chat)
[20:47:22] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:4449:d7c0:1687:65cc) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:47:38] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[20:47:56] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[20:48:16] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[20:48:27] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Client Quit)
[20:48:29] <jinsun> anddam: well you have my version to look at which is not blazing fast but takes < 10 seconds, or paste your version maybe we can find some problem
[20:49:03] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[20:49:08] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Remote host closed the connection)
[20:49:30] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[20:49:45] *** Joins: Bandicoot (~bandicoot@212.58.114.93)
[20:50:04] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[20:50:10] *** Quits: treefrob (~treefrob@pd9e2dc5a.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[20:50:49] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:51:24] *** Joins: Barones (~Barones@user/Barones)
[20:51:43] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Client Quit)
[20:52:10] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[20:52:14] *** Joins: Allegretto (~allegrett@84-236-65-153.pool.digikabel.hu)
[20:54:36] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[20:55:07] *** Joins: _filename (~kilitary@188.242.105.134)
[20:55:28] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:56:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:56:20] *** ShoppingCat is now known as TheCat
[20:56:43] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[20:57:53] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[20:58:36] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 240 seconds)
[20:59:05] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[20:59:24] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 240 seconds)
[21:00:23] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[21:01:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:01:30] *** Quits: redgloboli (~redglobol@user/redgloboli) (Quit: ...enter the matrix...)
[21:01:38] *** Quits: savolla (~quassel@95.10.200.51) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:02:01] *** Joins: ShinyCyril (~ShinyCyri@172.58.140.101)
[21:02:17] *** Quits: Arw (~Arwalk@lfbn-dij-1-16-127.w90-62.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[21:02:25] <causasui> in this dataclass, why do I get a NameError on line 15 but not on line 13? https://dpaste.com/59JDNZPW5
[21:02:27] *** Joins: redgloboli (~redglobol@user/redgloboli)
[21:02:46] <causasui> for that matter, why is the nameerror on blocklist and not base_charset ?
[21:03:50] *** Joins: Arw (~Arwalk@lfbn-dij-1-16-127.w90-62.abo.wanadoo.fr)
[21:03:52] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[21:04:24] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[21:05:00] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[21:06:40] <jinsun> causasui: list comprehensions have their own scope, and class scopes are weird, inner scopes don't get access to stuff in outer class scope
[21:07:10] <causasui> wtf lol
[21:07:17] <causasui> ooookay... so what do i do :V
[21:08:29] <jinsun> keep it "" and make a __post_init__ and put this comprehension there (and keep self.blocklist there instead of blocklist)
[21:08:52] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[21:09:04] <bjs> causasui: don't do things inside the class body. if you're just wanting to create a default value you can use a default_factory https://docs.python.org/3/library/dataclasses.html#default-factory-functions
[21:09:08] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[21:09:19] <bjs> causasui: that way it'll also use the blacklist the user supplies
[21:09:26] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:09:27] <bjs> blocklist*  rather than the one that happens to be default
[21:09:41] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:4449:d7c0:1687:65cc)
[21:09:53] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[21:09:57] <causasui> thanks. this is making me wonder if refactoring into a dataclass is actually the way to go
[21:10:31] <causasui> the caller is actually not supposed to be setting a value for this particular property
[21:11:00] <causasui> base_charset neither
[21:11:11] <bjs> causasui: well dataclasses lets you have fields that are part of the __init__ and fields that aren't
[21:11:21] *** Quits: yakiza (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[21:11:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[21:11:50] *** Quits: teut (~teut@103.144.92.141) (Quit: Client closed)
[21:11:52] *** Quits: _filename (~kilitary@188.242.105.134) (Read error: Connection reset by peer)
[21:12:11] <jinsun> yes field(init=False)
[21:12:12] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Quit: Client closed)
[21:12:26] *** Joins: yakiza (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net)
[21:12:34] <bjs> So you could have some fields that the user can supply (possibly with defaults), but then some fields that are derived but still part of the repr/equality/etc and then of course you can always `self.blah = 42` to make ad-hoc attributes like normal for internal state
[21:12:58] <bjs> e.g. in the __post_init__ method
[21:12:59] *** Joins: fling (~fling@user/fling)
[21:13:05] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:13:21] *** Joins: paul424 (~tom@ip-5-172-235-66.multi.internet.cyfrowypolsat.pl)
[21:13:46] <causasui> oh. so the original version of thi class had a bunch of @property methods and then this derived property. so maybe what I should do is just leave this function alone?
[21:14:46] <jinsun> yes you can have @property in dataclass too
[21:15:04] <causasui> gotcha, I didn't grok that I can mix it up like that, I'll mess with it more. thanks
[21:15:29] <causasui> yeah that worked
[21:15:33] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[21:16:02] <causasui> !next
[21:17:35] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[21:18:21] <anddam> jinsun: ok, it takes 3.5 secs here
[21:18:30] <anddam> jinsun: and you know what helped?
[21:19:52] <jinsun> anddam: well, no :D I didn't see your code
[21:20:02] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 260 seconds)
[21:20:03] <anddam> looping over triangle numbers —as the problem actually asked— rather than keep using the "let me just use count() while writing this function" genius decision
[21:20:24] <anddam> counter was increasngly way slower than it should have
[21:20:30] <anddam> increasing*
[21:20:42] <jinsun> oh so you were calculating n * (n+1) // 2 each time?
[21:21:02] <anddam> well I am now
[21:21:22] *** Quits: ShinyCyril (~ShinyCyri@172.58.140.101) (Quit: ShinyCyril)
[21:21:24] <anddam> before I was doing for counter in count() and splitting counter in factors
[21:21:26] <anddam> not good
[21:21:46] <anddam> now I can check your solution
[21:21:47] <jinsun> ah okay looping over everything, not solving the right problem
[21:21:53] <anddam> yep
[21:22:36] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[21:22:41] *** Quits: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com) (Quit: GoodBye)
[21:22:56] <jinsun> I wasn't calculating n * (n+1) //2 I just made a generator that yielded triangle numbers by adding to a counter
[21:23:33] <anddam> jinsun: oh wow I am generating triangle_numbers wrong
[21:23:45] <anddam> yes, ofc, an accumulator is all you need in life
[21:23:56] *** Joins: treefrob (~treefrob@pd9e2d62e.dip0.t-ipconnect.de)
[21:24:20] <anddam> well mine is a tad slower, but still O(1)
[21:24:53] <jinsun> yeah shouldn't be much difference between the two ways
[21:25:15] *** Quits: the_lanetly_052_ (~the_lanet@194.135.154.59) (Remote host closed the connection)
[21:25:30] *** Quits: the_lanetly_052 (~the_lanet@185.30.90.179) (Remote host closed the connection)
[21:25:30] *** Quits: asocialblade (~quassel@static.16.62.161.5.clients.your-server.de) (Changing host)
[21:25:30] *** Joins: asocialblade (~quassel@user/asocialblade)
[21:25:40] *** Joins: the_lanetly_052_ (~the_lanet@185.30.90.179)
[21:25:55] *** Joins: the_lanetly_052 (~the_lanet@185.30.90.179)
[21:26:07] *** Quits: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[21:26:10] *** Quits: redgloboli (~redglobol@user/redgloboli) (Remote host closed the connection)
[21:26:23] *** Joins: CygniX (~CygniX@2a01:8740:1:727:4e:80:7f:2d)
[21:26:53] *** Joins: redgloboli (~redglobol@user/redgloboli)
[21:27:18] *** Quits: timkofu (~timkofu@user/timkofu) (Remote host closed the connection)
[21:28:56] <jinsun> anddam: this one has a more clever way of counting divisors than just looping https://codereview.stackexchange.com/a/83680
[21:29:44] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[21:29:54] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:31:15] *** Quits: tWqaq (~tWqaq@240e:389:5d41:5900:4177:720f:df3f:d8b2) (Quit: Leaving)
[21:31:29] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:31:44] *** Joins: zaquest (~notzaques@5.130.79.72)
[21:34:45] *** Joins: schumaml (~schumaml@p200300e2ef26950053c1821a43d17d29.dip0.t-ipconnect.de)
[21:34:58] <anddam> jinsun: the coprime bit is what I was thinking about, but I had no proof of the property
[21:35:30] <anddam> xrange() ? how old is that answer
[21:36:09] <jinsun> yeah and it would never have come to my mind
[21:36:27] <jinsun> they were writing in python 2 in 2015 for some reason
[21:38:05] <nedbat> bjs: a quick sketch of the idea, which works!  https://github.com/nedbat/cyoa
[21:38:14] <nedbat> https://nedbat.github.io/cyoa/
[21:38:24] *** Joins: TheCat_ (~TheCat@user/z-cat)
[21:40:35] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[21:40:49] <anddam> https://termbin.com/a0qh
[21:41:06] *** Joins: gitly (~gitly@148.252.132.39)
[21:43:06] <anddam> nedbat: that's nice
[21:43:38] <anddam> what does "cyoa" stand for?
[21:44:10] <nedbat> anddam: Choose Your Own Adventure
[21:45:45] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[21:46:16] <anddam> ahhaha
[21:46:26] <anddam> oh yea I remember those
[21:46:36] <anddam> actually loved them
[21:46:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:46:47] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[21:47:28] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Remote host closed the connection)
[21:47:35] *** Quits: asocialblade (~quassel@user/asocialblade) ()
[21:48:31] *** Joins: asocialblade (~qsl@static.16.62.161.5.clients.your-server.de)
[21:48:31] *** Quits: asocialblade (~qsl@static.16.62.161.5.clients.your-server.de) (Changing host)
[21:48:31] *** Joins: asocialblade (~qsl@user/asocialblade)
[21:50:03] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Ping timeout: 268 seconds)
[21:50:09] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4.1)
[21:50:10] *** TheCat_ is now known as TheCat
[21:50:49] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:50:58] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[21:52:29] *** Joins: rond_ (~rond_@90.254.208.190)
[21:53:31] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[21:56:13] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[21:56:16] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Quit: Client closed)
[21:57:11] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[21:57:26] <nedbat> funny thing is, i never read them as a kid :)
[21:57:29] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:57:32] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:57:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:57:51] <anddam> now you got the chance
[21:57:56] <anddam> this felt like cheating https://termbin.com/zf50
[21:58:29] *** Joins: teut (~teut@103.144.92.200)
[21:58:57] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[22:01:24] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:ec7f:bf70:4897:f9a7) (Ping timeout: 240 seconds)
[22:02:18] *** Quits: bleaker (~bleaker@static-198-54-134-126.cust.tzulo.com) (Remote host closed the connection)
[22:02:19] *** Parts: blissful (~blissful@user/blissful) (WeeChat 3.4.1)
[22:02:37] *** Joins: bleaker (~bleaker@static-198-54-134-126.cust.tzulo.com)
[22:03:47] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 260 seconds)
[22:04:51] *** Joins: craigevil (craig@user/craigevil)
[22:07:48] <jinsun> it is a bit more challenge in C where you don't have big integers built in
[22:07:52] *** Joins: bahamas (~lucian@84.232.140.158)
[22:07:53] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[22:09:01] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[22:12:43] *** Quits: drbeco (~beco@user/beco) (Quit: Leaving)
[22:12:58] <bjs> nedbat: hmm
[22:13:07] <nedbat> bjs: that's the way I feel about it :)
[22:14:16] <bjs> nedbat: your implementation is basically exactly what I would do,  yet I don't feel happy about it
[22:15:01] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:15:34] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:15:48] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:15:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[22:16:17] *** Quits: iomari891 (~iomari891@197.210.53.228) (Ping timeout: 256 seconds)
[22:17:09] *** Joins: fling (~fling@user/fling)
[22:17:14] <SnoopJ> Something about `{% if chose(...)` %}` itches a bit
[22:17:37] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[22:18:03] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Client Quit)
[22:18:18] <foo> Can I reasonably assume it's a "best practice" to use pydantic for type hinting and data validation? We've got a dev who loves to use it everywhere. I have no issues with it, simply not familiar with it myself and still learning. :)
[22:18:18] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:18:57] *** Joins: iryd (~jamesm@c-73-133-85-138.hsd1.va.comcast.net)
[22:18:57] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:4449:d7c0:1687:65cc) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:19:02] *** Parts: iryd (~jamesm@c-73-133-85-138.hsd1.va.comcast.net) ()
[22:19:33] <SnoopJ> foo, it's *a* choice for data modeling but I don't think it's fair to say it's the *best* one
[22:19:45] <SnoopJ> and not all programs will need to do it anyhow
[22:19:45] <bjs> nedbat: have you ever looked at jinja2 extensions?
[22:20:08] <nedbat> bjs: nope.  would they help?
[22:20:28] <nedbat> SnoopJ: the whole chose() thing is awkward, I'm not sure whether or how to make it smoother.
[22:20:42] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 272 seconds)
[22:20:54] *** Joins: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[22:21:07] <foo> SnoopJ: thanks. for example, we had a dev recently build some batch email processing stuff. He used this to validate the mail data that we're sending out... even though a trusted user is doing the entry. There's a part of my brain that thinks validating this wasn't entirely necessary, but I also can see it as a good idea. I'm simply not familiar enough with pydantic to know how common of a use case this is
[22:21:13] <foo> for it. I realize it does "work"
[22:21:27] <bjs> nedbat: well I've never made an extension myself,  but I know the i18n extension adds {% trans %} ... {% endtrans %} which automatically passes the ... through gettext.  I wonder if the choose/if-chose is fine just could be put into a nicer form
[22:21:59] <SnoopJ> nedbat, I think what itches about it is that it's explicitly tied to the previous choice. At a glance it seems like this would tend towards a lot of fanning-out and combinatoric explosion.
[22:22:02] <nedbat> bjs: right, a new control structure
[22:22:09] *** Quits: Bandicoot (~bandicoot@212.58.114.93) (Quit: Leaving)
[22:22:18] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[22:22:24] <nedbat> SnoopJ: it will be an explosion, but does it matter if there are 1000 files output?
[22:22:27] <SnoopJ> (but then, CYOA *is* usually about the last choice, so...maybe what I'm responding to is the genre of graph)
[22:22:37] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:3dfb:4d53:34e0:2a9e)
[22:22:37] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:3dfb:4d53:34e0:2a9e) (Changing host)
[22:22:37] *** Joins: skapata (~Skapata@user/skapata)
[22:23:00] <SnoopJ> nedbat, no, but I can see the silhouette of how it could get unwieldy when you have multiple independent choices in your history and want to address valid combinations
[22:23:12] <SnoopJ> that might be out-of-scope though, just thinking aloud
[22:23:53] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:25:00] <SnoopJ> foo, I would encourage you to think about it as primarily about modeling the data, with validation as a nice perk on the side.
[22:25:08] *** Joins: funhouse (~funhouse@user/funhouse)
[22:25:56] *** Joins: nomic (~nomic@185.217.117.249)
[22:26:49] <foo> SnoopJ: thank you for the encouragement. I'm open to that. Forgive my self-taught-sometimes-non-technical brain, but when you say "primarily about modeling the data" -> are you, in my translation, saying: "Think about it as a way of representing the schema and structure of the data, with validation as a nice perk on the side" ?
[22:27:23] *** Quits: karlpinc (~user@173-161-46-9-Illinois.hfc.comcastbusiness.net) (Remote host closed the connection)
[22:27:25] <SnoopJ> foo, mostly the "structure" part of that (although it can generate schema for you), but yes
[22:27:59] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[22:28:11] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[22:28:19] <foo> SnoopJ: If I wrote this code myself, I would have simply used a dict - pydantic would never be in the picture. Is it reasonable to assume, pydantic is "better than a simple dict" because it has built-in typing *and* can do the validation?
[22:29:18] <SnoopJ> foo, that sounds resaonable to me. It knows how to do a lot of things that relate to bringing a representation of the data you'll be dealing with into your program, that would be pretty cumbersome with dicts (especially if you wanted to compose different representations)
[22:29:56] <foo> SnoopJ: when you say "especially if you wanted to compose different representations" - what does this mean? What's a "different representation" ? An alternative structure of the data?
[22:30:09] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[22:30:12] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 272 seconds)
[22:30:58] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[22:31:26] <SnoopJ> foo, let's suppose I write `class User(BaseModel): ...`, and then I want to represent an object composed out of users. I can do: `class UserGroup(BaseModel): leader: User; members: list[User];` and that sort of thing
[22:32:09] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:32:41] <foo> SnoopJ: very very grateful for the specific use case story so we can "get out of the abstract" on this.
[22:33:08] <foo> SnoopJ: I believe I'm falling. Is there another preferred option and/or "close second" to pydantic that you recommend? Or, if you had similar needs, would you generally default to pydantic?
[22:33:12] <SnoopJ> foo, to me the validation is mostly valid because I know that once I've constructed a User (or whatever model), it is necessarily a valid representation of the relevant data. With dicts, you end up with a lot of checking all over the place.
[22:34:12] <foo> SnoopJ: I agree. Having used dicts in most of my code for many years, the value of this is apparent - I'm wanting to make sure I understand this to the best of my ability (and grateful for devs with a fresh perspective on "code")
[22:34:12] <SnoopJ> foo, dataclasses.dataclass/attrs provide some of the same functionality, although I'm personally pretty likely to bring in Pydantic these days
[22:34:25] <foo> SnoopJ: ah, I've loosely used attrs
[22:34:32] <foo> Ok, that's re-assuring
[22:34:55] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[22:35:04] <foo> SnoopJ: again very appreciative of this conversation as I wrap my head around "my next iteration of learning" as a dev when it comes to typing and validation.
[22:35:18] <foo> ... and modeling, for that matter, per your point
[22:35:39] *** Joins: radny_ (~radny@185.243.55.117)
[22:36:14] *** Quits: radny_ (~radny@185.243.55.117) (Client Quit)
[22:36:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:36:41] *** Joins: fratello (caporegime@46.109.118.130)
[22:36:42] <SnoopJ> foo, I will say at least one thing critical of Pydantic: its root validators are clumsy as heck
[22:36:55] *** Quits: jcass (~cindy@50-0-146-207.dsl.dynamic.fusionbroadband.com) (Remote host closed the connection)
[22:37:04] <SnoopJ> I *much* prefer __attrs_post_init__()
[22:37:12] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:37:17] *** Joins: jcass (~cindy@50-0-146-207.dsl.dynamic.fusionbroadband.com)
[22:37:38] <SnoopJ> or __post_init__() in dataclasses
[22:37:46] <foo> SnoopJ: Finally, some hate here. (hehe, jk) You were being so nice. How so? How is the root validator for pdyantic more clumsy than the attrs?
[22:37:49] <nedbat> bjs: I could also just make it be:  {% if os == "Windows" %}
[22:38:55] *** Joins: Barones (~Barones@user/Barones)
[22:39:04] <anddam> bjs, nedbat: can't "o" be injected in the template context?
[22:39:16] <anddam> nedbat: oh what you just wrote, I was reading scrollback
[22:39:21] <nedbat> anddam: absolutely.  i'm injecting choice/choose/etc in there now.
[22:39:26] *** Quits: rond_ (~rond_@90.254.208.190) (Quit: Client closed)
[22:39:33] <anddam> as functions
[22:39:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[22:40:09] <nedbat> oops, gotta be afk
[22:40:30] <anddam> nedbat: I meant as variables, {% if o == "this" %} feels more natural
[22:40:34] <anddam> see you
[22:40:43] <SnoopJ> foo, it's just a little clunky. The return semantics are weird, the error messages are weird. I grumble every time I need a root validator (which is generally when I need to check something that relies on multiple fields)
[22:40:54] <SnoopJ> Thankfully, this is rare.
[22:41:19] <foo> Separate question: we have some code that sends emails via mailgun. I am overly paranoid about a dev environment sending emails on production data... options to prevent this are: A) use mailgun sandbox API keys in dev (which have limited outbound addresses), B) set a flag to *not* send email if in a dev environment, C) both solution D) something else: ________  ... - how would you solve this? A sufficient? Or
[22:41:22] *** Quits: eson123 (~whatever@user/eson123) (Quit: Leaving)
[22:41:25] <foo> would you do C too?
[22:41:29] <foo> SnoopJ: thanks for sharing. :)
[22:42:04] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[22:43:01] <SnoopJ> foo, (A) sounds good to me, although (B) could be appropriate too, especially if you have other "dev-only" behavior you want to control
[22:43:20] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[22:43:51] <foo> SnoopJ: thank you. There are some situations where we don't have sandbox API keys with limited outbound access. eg. Twilio. Granted, in our API wrapper we could have dev-specific whitelists or such.
[22:44:24] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[22:44:25] <SnoopJ> foo, would it perhaps make sense to mock the part that actually does the sending in testing/dev contexts?
[22:45:00] *** Joins: fef (~thedawn@user/thedawn)
[22:45:35] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 240 seconds)
[22:45:41] <foo> SnoopJ: yes
[22:45:43] <SnoopJ> an allow list could be handy indeed because this approach "fails safe" more often, since everything you haven't explicitly said is okay is forbidden
[22:46:03] <foo> SnoopJ: thank you!!!
[22:46:05] <SnoopJ> a deny list runs the risk of missing edge cases :)
[22:46:14] <SnoopJ> especially if you have multiple systems interacting
[22:46:40] *** Joins: CombatVet (~c4@user/combatvet)
[22:46:54] *** Joins: radny_ (~radny@89.22.211.163)
[22:48:22] *** Quits: radny_ (~radny@89.22.211.163) (Client Quit)
[22:48:36] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:535:e539:e5ca:5cf9) (Ping timeout: 240 seconds)
[22:49:24] *** Quits: jokoon (~eio@2a01:e0a:542:e160:d930:938f:f075:3f5a) (Quit: Leaving)
[22:49:57] *** Quits: radny (~radny@89.22.211.163) (Ping timeout: 256 seconds)
[22:50:30] *** Joins: aslicedbanjo (~aslicedba@host31-48-144-247.range31-48.btcentralplus.com)
[22:51:53] *** Joins: radny (~radny@89.22.211.163)
[22:52:01] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:52:47] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Ping timeout: 260 seconds)
[22:53:16] *** Joins: karlpinc (~user@173-161-46-9-Illinois.hfc.comcastbusiness.net)
[22:55:29] *** Quits: treefrob (~treefrob@pd9e2d62e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[22:56:03] *** Quits: stockholm (~Andreas@p200300d2c72b800071557c39a52517c3.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[22:56:39] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[22:56:45] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:57:35] *** Quits: fratello (caporegime@46.109.118.130) (Remote host closed the connection)
[22:58:22] *** Joins: awmv (~awmv@2a02:1210:18ef:bb00:80f:9b7f:1cc5:b3e5)
[22:58:25] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:58:51] *** Joins: purple_cthulhu (~rax@user/purple-cthulhu/x-9868388)
[22:59:14] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:59:39] *** Joins: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net)
[23:01:11] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 260 seconds)
[23:01:20] <anddam> jinsun: in fact I don't use C
[23:01:30] <anddam> (and that's not even true)
[23:01:33] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:01:51] *** Joins: mh3f_ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[23:02:18] <SnoopJ> anddam I think by "big integers" they are talking about things like Python's arbitrary bigints rather than "wider than `int`" types
[23:02:39] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Quit: HaMsTeRs)
[23:05:03] <blackpawn_> python 2.7 doesn't seem to be available anymore with anaconda. is there a way i can build it from source in a conda environment?
[23:06:48] <ChrisWarrick> are you sure you still need python 2?
[23:06:56] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[23:07:10] <blackpawn_> yeah i need to run and make some changes to old code
[23:07:14] *** Joins: Arw- (~Arwalk@lfbn-dij-1-16-127.w90-62.abo.wanadoo.fr)
[23:07:34] <ChrisWarrick> I’d recommend rewriting it in python 3
[23:07:54] <blackpawn_> that would take months and planned for later
[23:07:59] *** Quits: bleaker (~bleaker@static-198-54-134-126.cust.tzulo.com) (Changing host)
[23:07:59] *** Joins: bleaker (~bleaker@user/bleaker)
[23:08:11] *** Quits: Arw (~Arwalk@lfbn-dij-1-16-127.w90-62.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[23:08:12] <ChrisWarrick> python 2 is EOL since 2020, you should have planned that earlier
[23:08:34] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:08:46] <blackpawn_> not looking for judgement bro just asking if there's way i can create conda environment for python 2.7
[23:08:48] <ChrisWarrick> getting a working copy of py2 is going to be harder every year
[23:08:56] <ChrisWarrick> https://repo.anaconda.com/archive/ might or might not help
[23:09:07] <ChrisWarrick> but you should really just sit down and upgrade already
[23:09:37] <blackpawn_> google made it a nightmare by not bringing a ton of their libraries and APIs to python 3
[23:09:44] <ChrisWarrick> did they really?
[23:09:49] <ChrisWarrick> what libraries are missing?
[23:09:49] <blackpawn_> yep
[23:09:56] <blackpawn_> all the old appengine apis
[23:10:03] <blackpawn_> search, mail, tasks, etc
[23:10:24] <ChrisWarrick> those APIs have more modern replacements.
[23:10:31] *** Joins: flea_ (nosoul@gateway/vpn/protonvpn/nosoul)
[23:10:45] <blackpawn_> no google directs people to find other platforms and solutions
[23:10:46] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[23:11:02] <blackpawn_> but support it still on the python 2.7 line
[23:11:31] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[23:11:35] <Barones> vscode definetly should have a mouse focus btw subwindows
[23:11:39] *** Joins: brabrax (~brabrax@user/brabrax)
[23:12:06] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[23:12:32] *** Joins: luva8 (~luva@185.168.9.235)
[23:12:37] *** Quits: luva (~luva@45.141.152.52) (Ping timeout: 256 seconds)
[23:12:37] *** luva8 is now known as luva
[23:12:44] *** Joins: jazzy (~jaziz@user/jaziz)
[23:12:55] *** Quits: awmv (~awmv@2a02:1210:18ef:bb00:80f:9b7f:1cc5:b3e5) (Quit: Client closed)
[23:13:11] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 256 seconds)
[23:13:40] <SnoopJ> blackpawn_, `conda create -n py2test python==2.7.18` seems to work fine for me on conda 4.12.0
[23:14:25] *** Joins: HiccupJul_ (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[23:14:29] <blackpawn_> is that on Ubuntu or Windows I guess? on macOS it says not available from the conda channels
[23:14:37] <ChrisWarrick> blackpawn_: are you on M1?
[23:14:39] <SnoopJ> Ubuntu 20.04
[23:14:45] <blackpawn_> ChrisWarrick: yeah
[23:14:48] *** Joins: califax (~califax@user/califx)
[23:14:59] <ChrisWarrick> blackpawn_: guess nobody bothered to build an ancient python version for that
[23:15:09] <blackpawn_> macOS has built-in python 2.7 but was hoping to use conda
[23:15:53] <HiccupJul_> when using python selenium to run javascript on a page (in order to edit elements), what is the difference between using "arguments[0]" and just using string formatting to add arguments to the script string?
[23:16:17] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[23:16:35] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[23:17:03] <tdsmith> not in 12.3! https://twitter.com/glyph/status/1507672434975027201
[23:17:27] <blackpawn_> oh wow
[23:17:30] <ChrisWarrick> great!
[23:17:47] <SnoopJ> blackpawn_, looks like pkgs/main has packages for 2.7 for non-M1 macs but not M1 systems (in fact, I don't see anything older than 3.9 for M1)
[23:17:57] <ChrisWarrick> HiccupJul_: string formatting? can you show an example of what you’d do?
[23:18:27] <SnoopJ> you could probably adapt the non-M1 recipes if they don't exist in a contributed package somewhere (I don't really use conda so I don't know how/where to search for that)
[23:18:47] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[23:19:24] <blackpawn_> thanks
[23:19:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[23:19:53] *** Joins: parv (~quass@user/parv)
[23:20:11] <jinsun> probably easier to modernize the code itself at this point
[23:20:32] <blackpawn_> if the same APIs had been supported it would have been trivial to move over
[23:20:33] <HiccupJul_> yeah
[23:20:35] <SnoopJ> assuming that is possible, it could be a better use of the effort
[23:20:38] <HiccupJul_> give me a moment
[23:21:19] <blackpawn_> they changed the datastore api and killed a ton of others and without type checking its a nightmare to update
[23:21:21] *** Joins: fling (~fling@user/fling)
[23:21:22] <purple_cthulhu> Hi, Is it a good/bad idea to combine exception chaining with inheritance? something like this: https://bpa.st/5VQA
[23:21:46] <blackpawn_> the big companies just switched to golang instead of bothering with the disaster of migration
[23:21:47] <SnoopJ> blackpawn_, what's keeping you from using type checking?
[23:21:57] <ChrisWarrick> blackpawn_: you can upgrade your code to type checking as well
[23:22:01] <HiccupJul_> right now i have this
[23:22:03] <ChrisWarrick> blackpawn_: again, you had years to get started
[23:22:04] <HiccupJul_> https://bpa.st/RGRQ
[23:22:06] <SnoopJ> purple_cthulhu, building the exception class inside the handler seems *very* weird
[23:22:09] <HiccupJul_> and this is what i could do instead
[23:22:10] <blackpawn_> i can add type annotations to python 2 code?
[23:22:18] <SnoopJ> no
[23:22:20] *** Gustavo6046\away is now known as Gustavo6046
[23:22:21] <ChrisWarrick> purple_cthulhu: ugh, don’t define classes inside an except block
[23:22:23] <SnoopJ> at least not in-source
[23:22:31] <SnoopJ> blackpawn_, I believe you can add them in a comment though
[23:22:41] <ChrisWarrick> HiccupJul_: that looks very reasonable
[23:22:45] <SnoopJ> i.e. https://mypy.readthedocs.io/en/latest/python2.html
[23:22:55] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:23:10] <SnoopJ> (this is clumsy, granted, but...well, so is Python 2)
[23:23:14] <ChrisWarrick> HiccupJul_: you’re passing the specific objects you want to work on, there is no risk of eg. getElementsByClassName returning things in a differnet order
[23:23:23] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Ping timeout: 256 seconds)
[23:23:30] <bjs> purple_cthulhu: why do you want this new exception to be a subclass of the one you caught? at least in this example, you have no idea what type it even was
[23:23:42] <HiccupJul_> well i was thinking that i could do something like this script = f'{heading_elem}.innerHTML = {heading_html}'
[23:23:43] <HiccupJul_> instead
[23:23:51] <ChrisWarrick> SnoopJ: heh, I remember that for a while, mypy had a custom file encoding, that would rewrite py3-style annotations as comments
[23:23:59] <ChrisWarrick> HiccupJul_: no, can’t do that
[23:24:02] <SnoopJ> ChrisWarrick, oh my
[23:24:18] *** Joins: justOkay (~justache@user/justache)
[23:24:20] <SnoopJ> ChrisWarrick, was that for backwards compat of some sort?
[23:24:35] <HiccupJul_> i guess it wouldn't work for the element as that's a special object, not a string
[23:24:49] <HiccupJul_> its a reference to the element that selenium makes
[23:25:00] <Payam> When using autopep8 in vim two lines are always written to the end of the file saying "done formatting. 1 file formatted". Has anyone seen that? Seem to be a autopep8 related thing.
[23:25:05] *** Quits: davor_ (~davor@user/davor) (Ping timeout: 256 seconds)
[23:25:29] <HiccupJul_> apparently i can use string formatting for the actual HTML, however
[23:25:55] <HiccupJul_> however i guess using the element thing is cleaner, as you don't have to worry about escaping stuff in the string
[23:26:38] *** Joins: davor (~davor@user/davor)
[23:26:46] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:27:24] *** Quits: Arw- (~Arwalk@lfbn-dij-1-16-127.w90-62.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[23:27:45] <ChrisWarrick> SnoopJ: https://github.com/python/mypy/tree/v0.1.0/mypy/codec
[23:28:14] <SnoopJ> makes sense enough I suppose
[23:29:03] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[23:31:31] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[23:32:30] <TML> blackpawn_: Google has a Python3 API for Datastore: https://github.com/googleapis/python-datastore
[23:33:29] <SnoopJ> TML, that doesn't do them much good unless they port their codebase, though
[23:33:34] *** Quits: rsx (~dummy@ppp-188-174-159-56.dynamic.mnet-online.de) (Quit: rsx)
[23:33:38] <SnoopJ> (although it does seem like the better idea)
[23:34:07] <blackpawn_> there was old datastore "db" API they dropped
[23:34:10] <TML> SnoopJ: I just thought they were saying the API doesn't even exist for Python 3, so I was pointing it out. Looking back, I think I misread their statements.
[23:34:48] <blackpawn_> specifically the appengine datastore. they recommend updating all code to use "ndb" which they did bring to python3
[23:35:05] *** Joins: Naan (~naan@user/naan)
[23:37:02] <TML> that is definitely one of the downsides of the Google ecosystem - they love to build and abandon things
[23:37:18] <blackpawn_> but yeah instead of being able to update from python 2 to 3 they made it a change every that touches datastore, reimplement everything using 75% of the apis also. that's why khan academy and other places just said fuck it and moved to golang
[23:37:33] *** Joins: MCx (~MCx@user/mcx)
[23:37:50] <SnoopJ> TML, https://twitter.com/mcclure111/status/1506855650218975233
[23:37:58] *** Joins: Arw (~Arwalk@lfbn-dij-1-16-127.w90-62.abo.wanadoo.fr)
[23:38:02] <blackpawn_> lol
[23:38:35] *** Joins: savolla (~quassel@95.10.200.51)
[23:39:37] <TML> it's more fun to build a new message API than to support Hangouts, Messages, Message Center, YouTube Messages, GCM, Allo, Reply, Spaces, Together, Google Talk, Meebo, or Buzz
[23:40:12] <ChrisWarrick> you forgot at least duo
[23:40:19] <TML> dang
[23:40:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:40:32] <TML> Can't even keep all the dead projects in my head anymore :)
[23:40:43] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:41:51] *** Joins: hams (~hams@73.232.205.0)
[23:41:51] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[23:41:51] *** Joins: hams (~hams@user/hams)
[23:42:14] *** Joins: akk (~akk@75.161.150.5)
[23:42:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[23:44:47] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[23:45:12] *** Joins: treefrob (~treefrob@p2e542bb5.dip0.t-ipconnect.de)
[23:47:51] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Ping timeout: 260 seconds)
[23:49:11] *** Joins: _0x00 (~0x00@user/0x00/x-6246543)
[23:49:19] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[23:53:09] *** Joins: EvilDMP_ (~textual@2001:1c00:30e:1f00:51b9:de4b:a56b:aa97)
[23:53:35] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[23:54:11] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[23:54:33] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[23:55:24] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 240 seconds)
[23:55:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:55:41] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:56:21] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:56:28] *** Joins: humbertowoody (~humbertow@189.132.110.180)
[23:57:44] *** Joins: Pickchea (~private@user/pickchea)
