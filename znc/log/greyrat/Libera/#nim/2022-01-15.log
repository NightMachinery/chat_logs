[00:00:22] <FromDiscord> <hmmm> I tested it for a smol project I abandoned and it seemed to work, afaik it's the best crypto lib we have
[00:00:54] <FromDiscord> <Patitotective> In reply to @QueenFuckingAdrielle "What's everyone working on": NiPrefs: _PREFS_ for _Nim_ 😎  lol
[00:01:52] <FromDiscord> <Isofruit> In reply to @hmmm "I tested it for": Do you know whether it supports pbkdf2? I supposedly does, I've been searching for any sort of function mentioning it for a while (as someone with very little knowledge about cryptography, I'm still not too sure about the concept of digests neither)
[00:02:22] <FromDiscord> <hmmm> ah no idea, wait for the brainy guys 😊
[00:04:29] <FromDiscord> <Isofruit> In reply to @QueenFuckingAdrielle "What's everyone working on": I'm rewriting my REST-API from Django to Nim, because I feel personally slighted that some of my pages need more than 500ms to load even though the serialization etc. should be trivial... and I wanted to learn another language either way, so killing 2 birds with one stone instead of improving the Django backend
[00:06:31] <FromDiscord> <Isofruit> ... which turns out means I'm now also contributing to norm, hopefully my current PR isn't too bad
[00:13:43] <FromDiscord> <Isofruit> In reply to @hmmm "ah no idea, wait": I mean, if you used a function you proooobably had to at one point uses one that uses an "HMAC" type as a param?
[00:23:51] <FromDiscord> <hmmm> hm maybe I don't even remember, I remember using the CTR thing to encrypt stuff
[00:38:55] <FromDiscord> <Elegantbeef> it's declared in the constant `script`↵(@Bung)
[00:55:38] <FromDiscord> <Isofruit> sent a code paste, see https://play.nim-lang.org/#ix=3Mcd
[00:56:19] *** Quits: anadahz (~user@gateway/tor-sasl/anadahz) (Remote host closed the connection)
[00:56:53] *** Joins: anadahz (~user@gateway/tor-sasl/anadahz)
[01:09:57] *** Quits: anadahz (~user@gateway/tor-sasl/anadahz) (Remote host closed the connection)
[01:11:03] *** Joins: anadahz (~user@gateway/tor-sasl/anadahz)
[01:16:29] *** Quits: anadahz (~user@gateway/tor-sasl/anadahz) (Quit: anadahz)
[01:21:26] <NimEventer> New thread by Freeflow: Novice Question: Implement the Step functionality in VBA, see https://forum.nim-lang.org/t/8808
[01:21:59] <NimEventer> New question by Philipp Doerner: How do I re-build django&#39;s password hashing with nimcrypto?, see https://stackoverflow.com/questions/70716906/how-do-i-re-build-djangos-password-hashing-with-nimcrypto
[01:23:06] <FromDiscord> <Isofruit> (Nobody worry about this one, I'm answering it myself so I can also figure out in the future how to use nimcrypto)
[01:27:19] <FromDiscord> <Elegantbeef> No i'm going to worry about it
[01:30:12] <FromDiscord> <leorize> I'm not sure if nimcrypto has been audited yet
[01:30:12] <FromDiscord> <leorize> probably already by the Status folks
[01:31:01] <FromDiscord> <leorize> but for security applications I'd recommend using already established libraries like libsodium which does have a good nim wrapper
[01:31:54] <FromDiscord> <Elegantbeef> Clearly you're supposed to role your own cause that's totally the safest thing possible 😛
[01:32:21] <FromDiscord> <Isofruit> God
[01:32:22] <FromDiscord> <Isofruit> dangit
[01:32:27] <FromDiscord> <Isofruit> Like, I appreciate it leorize
[01:32:33] <FromDiscord> <treeform> sent a long message, see http://ix.io/3Mcs
[01:32:34] <FromDiscord> <Isofruit> But I had assumed nimcrypto was already safe
[01:32:44] <FromDiscord> <Isofruit> And it took me way too long to figure out how to use that lib
[01:33:17] <FromDiscord> <Isofruit> I guess back to the drawing board and looking at libsodium
[01:33:59] <FromDiscord> <QueenFuckingAdrielle> Nice, came back from the store and saw all these cool projects
[01:34:32] <FromDiscord> <leorize> when it comes to security libraries, always check if they are wildly adopted and whether they are audited
[01:34:37] <FromDiscord> <leorize> better be safe than sorry
[01:36:52] <FromDiscord> <Elegantbeef> Lol treeform just linked his entire git 😀
[01:37:11] <FromDiscord> <treeform> No just the nimble published stuff
[01:40:01] <FromDiscord> <evoalg> In reply to @treeform "No just the nimble": I'm enjoying bitty so far ... thank you!
[01:41:03] *** Joins: lispy (~lispy4@84.69.59.93)
[01:41:26] <FromDiscord> <QueenFuckingAdrielle> sent a long message, see http://ix.io/3Mcu
[01:43:22] <FromDiscord> <Isofruit> Is there a largely adopted wrapper of libsodium leorize? I found like 3 different wrappers by now and the one from FredericoCeratto was the most adopted one I could find yet (https://github.com/FedericoCeratto/nim-libsodium)
[01:43:39] <FromDiscord> <leorize> federico is the one I used, I haven't tried the other ones
[01:45:06] <FromDiscord> <treeform> In reply to @evoalg "I'm enjoying bitty so": Thank you for using my stuff.
[01:45:07] <FromDiscord> <Isofruit> Then to figure out how to do that entire sha256+HMAC+pbkdf2 in that one
[01:45:26] <FromDiscord> <QueenFuckingAdrielle> I have seen much activity with some of the nim math libs we are using. I'm worried I'll have to take over maintaining them.
[01:45:34] <FromDiscord> <QueenFuckingAdrielle> (edit) "have" => "havent"
[01:46:41] <FromDiscord> <leorize> you can query the science people for more details
[01:46:51] <FromDiscord> <leorize> they might be shifting development priorities elsewhere
[01:48:14] <FromDiscord> <QueenFuckingAdrielle> Yea that might be a good idea. The main one is arrayfire, which is just c2nim iirc. That's probably the most important lib. We are also using weave/laser/arraymancer some.
[01:49:04] <FromDiscord> <leorize> looks like mratsim just announced that he doesn't have time to maintain arraymancer anymore
[01:49:29] <FromDiscord> <QueenFuckingAdrielle> We are currently looking at ways on inlining nvidia ptx to bypass cuda completely but we haven't figured it out yet.
[01:49:42] <FromDiscord> <QueenFuckingAdrielle> I had thought that might be the case
[01:50:31] <FromDiscord> <QueenFuckingAdrielle> Finding anyone who knows ptx is like, impossible.
[01:50:43] <FromDiscord> <hmmm> In reply to @treeform "I am working on:": print not named printy... it must not production ready 🤔
[01:50:53] <FromDiscord> <hmmm> in treeform-land the y is given to the golden eggs
[01:50:58] *** Joins: joe_mad (~user@2a04:92c7:2:29c::95b4)
[01:51:10] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849)
[01:51:12] <FromDiscord> <evoalg> treeformy
[01:51:55] <FromDiscord> <QueenFuckingAdrielle> What is everyone's opinion on the outlook of nim? I hope it continues to increase in popularity.
[01:53:26] <FromDiscord> <Isofruit> As someone barely in deep enough to be able to contribute to an ORM and even that at debatable levels, I don't think I have a qualified opinion here. ↵I'd assume a growth in popularity, but I know little and the world is complex
[01:53:31] <FromDiscord> <Elegantbeef> Considering its gotten me into compiler dev i hope it dies 😛
[01:53:41] <FromDiscord> <QueenFuckingAdrielle> Lol
[01:53:45] <FromDiscord> <Isofruit> That would be a disaster beef!
[01:53:59] <FromDiscord> <Isofruit> Where else could you abandon your macros as easily as here?
[01:53:59] <FromDiscord> <QueenFuckingAdrielle> There are just no other real options
[01:54:05] <FromDiscord> <hmmm> I'm glad we have it 😊  it must grow at it's own pace imo
[01:54:34] <FromDiscord> <QueenFuckingAdrielle> Say what you will but rust and nim are apples and oranges and they are usually compared to each other.
[01:55:04] <FromDiscord> <QueenFuckingAdrielle> I agree, I'm promoting it in dl and robotics as much as possible
[01:55:29] <FromDiscord> <QueenFuckingAdrielle> But I'm not really an application developer in a traditional sense so idk
[01:56:12] <FromDiscord> <Isofruit> I shill for it in my own circles, got one person to look at it confirmed for now, though she got put a bit off-guard by the antivirus warnings
[01:56:37] <FromDiscord> <leorize> that's the fate of all unpopular languages
[01:56:44] <FromDiscord> <leorize> even go went through that phase
[01:56:44] <FromDiscord> <theSherwood> Speaking of which, are the antivirus warnings an ongoing issue?
[01:57:08] <FromDiscord> <Isofruit> Last I checked 1.6 is once again under antivirus flagging
[01:57:10] <FromDiscord> <Elegantbeef> Yea i'm more of a game dev, which is why i like it, tons of nice features to make life easy there↵(@QueenFuckingAdrielle)
[01:57:22] <FromDiscord> <Isofruit> as is 1.6.2, given that said friend of mine got it immediately flagged as such
[01:57:22] <FromDiscord> <leorize> aren't you a compiler dev?
[01:57:29] <FromDiscord> <Elegantbeef> I hate you leorize
[01:57:33] <FromDiscord> <Elegantbeef> Go die in a hole or something 😛
[01:57:38] <FromDiscord> <leorize> \:P
[01:57:51] <FromDiscord> <QueenFuckingAdrielle> In reply to @Elegantbeef "Yea i'm more of": Oh cool, have you used nim with godot?
[01:58:17] <FromDiscord> <Elegantbeef> I have briefly, but eh godo's native sucks imo
[01:58:26] <FromDiscord> <Elegantbeef> It's not a first class feature and it feels it
[01:58:35] <FromDiscord> <QueenFuckingAdrielle> My gf and I are planning a little indie title and I was going to look at the nim    interface.
[01:58:52] <FromDiscord> <leorize> as more malwares are written in Nim, AV will pick up Nim executables as malicious↵(@Isofruit)
[01:58:56] <FromDiscord> <QueenFuckingAdrielle> Yea, I just hate how bloated unity and unreal are for what we are doing.
[01:59:05] <FromDiscord> <leorize> it's kinda unavoidable until we have mainstream software in Nim
[01:59:06] <FromDiscord> <Elegantbeef> It works and all but it's not fun imo, my most recent stuff is built on my own framework using Opengl/Sdl/Assimp
[01:59:12] <FromDiscord> <Elegantbeef> Might be interested in TheMachinery aswell
[01:59:25] <FromDiscord> <Elegantbeef> Or pay for signing
[01:59:27] <FromDiscord> <QueenFuckingAdrielle> Ah gotcha, I'm not on that level of gamedev
[01:59:32] <FromDiscord> <Isofruit> Okay it appears I'm blind, I can't find a pbkdf2 function or so for the life of me in libsodium
[01:59:49] <FromDiscord> <Elegantbeef> I mean i'm not either
[01:59:50] <FromDiscord> <Elegantbeef> I just play pretend 😛
[01:59:57] <FromDiscord> <Elegantbeef> As i do everywhere
[02:00:05] <FromDiscord> <hmmm> I mean antivirus software is the real malware themselves. We are on the right side of history 🧐
[02:00:34] <FromDiscord> <Elegantbeef> drop-2021-11-19\_19.05.30.mp4 https://media.discordapp.net/attachments/371759389889003532/931676696032182322/drop-2021-11-19_19.05.30.mp4
[02:00:36] <FromDiscord> <Elegantbeef> This is where my project sits if wondering
[02:00:38] <FromDiscord> <hmmm> In reply to @Elegantbeef "I just play pretend": not tru, beef best compiler dev
[02:00:51] <FromDiscord> <evoalg> In reply to @QueenFuckingAdrielle "Ah gotcha, I'm not": do you do like data analysis or ai programming?
[02:01:03] <FromDiscord> <QueenFuckingAdrielle> We are making a witchy version of stardew valley basically. Unreal isn't great for that.
[02:01:11] <FromDiscord> <Isofruit> In reply to @Elegantbeef "drop-2021-11-19\_19.05.30.mp4": puzzle game I take it?
[02:01:20] <FromDiscord> <Elegantbeef> Yea
[02:01:22] <FromDiscord> <Elegantbeef> As all my good games are
[02:01:27] *** Parts: joe_mad (~user@2a04:92c7:2:29c::95b4) (ERC (IRC client for Emacs 27.1))
[02:01:53] <FromDiscord> <leorize> any day now, beef will make a puzzle game about debugging the compiler
[02:01:56] <FromDiscord> <hmmm> In reply to @Elegantbeef "drop-2021-11-19\_19.05.30.mp4": beef put space marines in there
[02:02:30] <FromDiscord> <Isofruit> In reply to @leorize "any day now, beef": with ~~knuckles~~ macros!
[02:02:30] <FromDiscord> <QueenFuckingAdrielle> In reply to @evoalg "do you do like": I do, my background is in cognitive science and cs. My main research is in  neuromorphic computing and cognitive robotics.
[02:03:01] <FromDiscord> <Elegantbeef> Hey with nimscripter that's not too far off just need to make a compiler in nimscripter and purposely put bugs in it 😜
[02:03:19] <FromDiscord> <evoalg> In reply to @QueenFuckingAdrielle "I do, my background": Interesting ... I'm not familiar with those terms ... but is it neural network based?
[02:03:21] <FromDiscord> <Elegantbeef> If you're doing 2D Queen, i can suggest Nico
[02:03:32] <FromDiscord> <Elegantbeef> https://jbeetham.itch.io/linerino was made using Nico
[02:04:14] <FromDiscord> <QueenFuckingAdrielle> In reply to @evoalg "Interesting ... I'm not": Yea I dot alot of neural network training etc. Not just in nim but also with pytorch and Tensorflow... when I have to.
[02:04:31] <FromDiscord> <QueenFuckingAdrielle> In reply to @Elegantbeef "If you're doing 2D": Oh cool, I'll check that out
[02:04:57] <FromDiscord> <evoalg> Oh you prefer Nim to pytorch?
[02:05:13] <FromDiscord> <QueenFuckingAdrielle> We are mostly planning right now, she's an artist and wants to learn to program and the other way around for me.
[02:06:04] <FromDiscord> <QueenFuckingAdrielle> I do prefer nim c or cpp yea. I prefer to use tensor/array libraries directly because of the architectures I work on.
[02:06:59] <FromDiscord> <QueenFuckingAdrielle> Most of them are more tied to simulating how the brain actually functions as opposed to what alot of models do nowadays.
[02:07:29] <FromDiscord> <QueenFuckingAdrielle> We also train transformers and the like, but that's a product of the gpu and von Neumann hardware we use.
[02:08:34] <FromDiscord> <evoalg> wow you sound like a serious ai researcher
[02:09:48] <FromDiscord> <Elegantbeef> Remember AI is nothing but nested if statements
[02:09:48] <FromDiscord> <Elegantbeef> Anyone that says otherwise is a liar
[02:10:32] <FromDiscord> <evoalg> it might be more like voting believe it or not
[02:10:33] <FromDiscord> <QueenFuckingAdrielle> Lol, thanks! Like @ElegantBeef I just kinda do the stuff I do.
[02:10:58] <FromDiscord> <Elegantbeef> Wait i do stuff?
[02:11:05] <FromDiscord> <QueenFuckingAdrielle> Idk, game stuff
[02:11:08] <FromDiscord> <QueenFuckingAdrielle> Sounds like lol
[02:11:22] <FromDiscord> <Elegantbeef> Fuck dont let my mind know that, might make the "Useless narrative" harder to believe!
[02:11:26] <lispy> Besides nim, what would you say your favourite programming language is?
[02:11:37] <FromDiscord> <Elegantbeef> Nimscript 😛
[02:11:45] <FromDiscord> <QueenFuckingAdrielle> Tbh I just wanna be a stay at home mom. But that's expensive nowadays lol.
[02:12:11] <FromDiscord> <Elegantbeef> Jokes aside, i dont really use anything but Nim, so dont really have a second
[02:12:21] <lispy> Don't lie I know it's VBA
[02:12:26] <FromDiscord> <Elegantbeef> I do have respect for Rust/Ada/Odin/Zig 😀
[02:12:31] <FromDiscord> <Elegantbeef> Fuck no
[02:12:35] <lispy> lol
[02:12:39] <FromDiscord> <Elegantbeef> That's a heavily dotnet relying language
[02:13:11] <FromDiscord> <evoalg> In reply to @QueenFuckingAdrielle "Tbh I just wanna": make an ai child?
[02:13:25] <FromDiscord> <QueenFuckingAdrielle> Hmm can't narrow it  past 3.  C and julia I guess. Haxe is kinda neeto.
[02:13:31] <FromDiscord> <Elegantbeef> The benefit of an AI child is you can kill it and no one complains
[02:13:38] <FromDiscord> <QueenFuckingAdrielle> In reply to @evoalg "make an ai child?": That's the goal.
[02:14:31] <FromDiscord> <QueenFuckingAdrielle> Truth. "Is that an affliction tshirt??" Then I just yank the cord to the server.
[02:14:59] <FromDiscord> <Elegantbeef> Do that to a real child and you're called a murderer or something dumb
[02:15:43] <lispy> ikr double standards
[02:16:15] <FromDiscord> <evoalg> In reply to @Elegantbeef "The benefit of an": not if it kills you first, like in ex machina
[02:16:31] <FromDiscord> <Elegantbeef> Jokes on you i dont speak latin
[02:17:11] <FromDiscord> <Isofruit> not knowing latin saves you from ex machina↵Noted!
[02:17:36] <FromDiscord> <Elegantbeef> What you dont know cant harm you, and that's why i'm still alive after smoking 30 packs of cigs a day
[02:19:42] <FromDiscord> <evoalg> In reply to @QueenFuckingAdrielle "That's the goal.": NN's have been put into robots (physical and simulated) and everyone is surprised at how hard it is to make true ai ... it's really difficult
[02:20:29] <FromDiscord> <Elegantbeef> What i've watched Pinocchio, that was a wooden AI
[02:20:52] <FromDiscord> <Elegantbeef> That's a good documentary
[02:22:29] <FromDiscord> <evoalg> lots of trees where you live too I bet beefy
[02:22:56] <FromDiscord> <evoalg> but are you emotionally ready for an ai child?
[02:23:44] <FromDiscord> <Elegantbeef> Nah they call it a boreal forest cause there arent any trees
[02:23:56] <FromDiscord> <evoalg> makes sense
[02:24:35] <FromDiscord> <Elegantbeef> So uhh do any more fun template stuff?
[02:25:29] <FromDiscord> <evoalg> hehe not yet
[02:26:06] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[02:26:36] <FromDiscord> <evoalg> I still can't get over how simple and clean your timing template made things
[02:26:54] <FromDiscord> <Elegantbeef> Lol
[02:27:06] <FromDiscord> <Elegantbeef> Like i said before i went to sleep, welcome to metaprogramming
[02:27:28] <FromDiscord> <Elegantbeef> If you can write the code by hand you can write a macro or template to automate it
[02:29:23] <FromDiscord> <evoalg> yea it finally makes sense to me that it's the next step up from procedures / functions
[02:29:55] <FromDiscord> <Elegantbeef> I'd say they're simpler to procedures, but that's playing semantics 😀
[02:30:10] <FromDiscord> <Elegantbeef> templates i mean
[02:30:48] <FromDiscord> <evoalg> so templates are just procedures that take code as arguments?
[02:31:24] <FromDiscord> <Elegantbeef> Nah
[02:31:35] <FromDiscord> <Elegantbeef> They're callables that take anything as arguments 😀
[02:31:39] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:31:53] <FromDiscord> <Elegantbeef> Procedures by definition run code inside them, templates emit code inside them
[02:32:21] <FromDiscord> <leorize> very important details about templates\: the arguments are AST nodes
[02:33:19] <FromDiscord> <leorize> so be careful about potential side-effects from them
[02:33:30] <FromDiscord> <Elegantbeef> Yea we talked about lazy evaluation yesterday
[02:33:42] <FromDiscord> <Elegantbeef> Well yesterday for me
[02:34:45] <FromDiscord> <evoalg> I understand that (or thought I did) because the template would rewrite it by hand to do the right thing (lazy evaluation), but what has that got to do with AST?
[02:35:04] <FromDiscord> <Elegantbeef> Well leorize is just saying "It doesnt get the result so be cautious"
[02:36:00] <FromDiscord> <evoalg> ahhh ok I think I understand
[02:36:11] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3McD
[02:36:40] <FromDiscord> <evoalg> that is lazy, no
[02:36:48] <FromDiscord> <evoalg> no?
[02:37:00] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3McH
[02:37:44] <FromDiscord> <evoalg> ohhhh you're saying that the "a" arg isn't evaluated!
[02:37:52] <FromDiscord> <Elegantbeef> Yep
[02:38:04] <FromDiscord> <Elegantbeef> And as such you can have a value that is less than `b`
[02:38:48] <FromDiscord> <leorize> https://play.nim-lang.org/#ix=3McJ
[02:39:02] <FromDiscord> <leorize> ^ that one is much easier to follow
[02:39:30] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3McK
[02:39:45] <FromDiscord> <leorize> can't beat deterministic execution \:p
[02:40:02] <FromDiscord> <Elegantbeef> Now the question is "Can evo solve this himself"
[02:41:00] <FromDiscord> <evoalg> I though the if and else block would be substituted in ... hmmmm lemme think
[02:41:25] <FromDiscord> <Elegantbeef> It is
[02:41:57] <FromDiscord> <Elegantbeef> Remember everywhere a template parameter is, the code passed is pasted in
[02:43:01] <FromDiscord> <leorize> https://play.nim-lang.org/#ix=3McL \<- here is the exploded version if you wanna see the answer
[02:43:43] <FromDiscord> <Elegantbeef> Now leorize show how to prevent it in the most mundane way 😛
[02:43:59] <FromDiscord> <leorize> use a proc \:p
[02:44:13] <FromDiscord> <Elegantbeef> No that doesnt work always 😛
[02:44:25] <FromDiscord> <Elegantbeef> \glares at `hasKeyOrPut`
[02:44:32] <FromDiscord> <Isofruit> But what if you use a lot of procs?
[02:44:44] <FromDiscord> <Elegantbeef> What about it
[02:45:06] <FromDiscord> <evoalg> so `s.pop()` is performed twice!
[02:45:16] <FromDiscord> <Elegantbeef> Procs are what you should generally use first unless you need certain behaviour or desires
[02:45:38] <FromDiscord> <Elegantbeef> Indeed
[02:45:48] <FromDiscord> <leorize> https://play.nim-lang.org/#ix=3McM \<- here is how to fix it if you really want to use templates for whatever reason
[02:45:51] <FromDiscord> <Elegantbeef> For instance if you want lazy evaluation you'd use a template
[02:46:26] <FromDiscord> <evoalg> In reply to @evoalg "so `s.pop()` is performed": lol expanded it myself and saw the problem and then I read your expanded version leorize 😉
[02:46:53] <FromDiscord> <Elegantbeef> the table interaction procedures are things that should be templates `hasKeyOrPut` and `getOrDefault` for instance
[02:47:20] <FromDiscord> <Elegantbeef> Just cause your default shouldnt be ran unless you want to insert it
[02:47:41] <FromDiscord> <Elegantbeef> anyone that relies on the behaviour that the default is called should be shot imo
[02:48:01] <FromDiscord> <Elegantbeef> But you use the simplest tool for the job which is generaly a proc
[02:48:01] <FromDiscord> <evoalg> I can see that now!
[02:48:25] <FromDiscord> <evoalg> (being shot I mean)
[02:49:24] <FromDiscord> <evoalg> and yea assigning the args to variables means they are only evaluated once each ... why did you use `_genSym` though leo?
[02:49:50] <FromDiscord> <Elegantbeef> Cause he's showing that you cannot access the variables
[02:50:23] <FromDiscord> <evoalg> ahh
[02:50:34] <FromDiscord> <Elegantbeef> templates are hygienic which means to pollute the scope is an explicit operation
[02:51:07] <FromDiscord> <Elegantbeef> So `tmpA` and `tmpB` are not accessible by you unless you explicitly say you want them with either `var tmpA {.inject.}` or make the template `{.dirty.}`
[02:51:32] <FromDiscord> <evoalg> ah yea I've seen those dirty tricks
[02:52:21] <FromDiscord> <evoalg> so my lesson for today is, args to templates are taken as is and they are evaluated when passed
[02:52:23] <FromDiscord> <Elegantbeef> And now you're a template master
[02:52:40] <FromDiscord> <Elegantbeef> are not\ ?
[02:52:56] <FromDiscord> <evoalg> not
[02:53:03] <FromDiscord> <evoalg> aren't
[02:53:16] <FromDiscord> <Isofruit> to be or not to be?
[02:55:15] <FromDiscord> <evoalg> In reply to @Isofruit "to be or not": apparently once when Bobby Fischer was thinking about taking a potentially poisoned pawn on b2, someone who was watching said "b2 or not b2" and Fischer told them to fuck off
[02:55:34] <FromDiscord> <evoalg> (if might not have been Fischer)
[02:55:58] <FromDiscord> <Isofruit> Either way makes for a funny little story 😄
[02:56:55] <FromDiscord> <leorize> they can be templates once views work
[02:56:58] <FromDiscord> <leorize> maybe in a decade or so
[02:57:12] <FromDiscord> <Elegantbeef> Why do we need views for them?
[02:57:45] <FromDiscord> <leorize> try writing the template, you will end up evaluating the "table" argument more than once
[02:58:05] <FromDiscord> <Elegantbeef> It'd be a `var T`
[02:58:21] <FromDiscord> <leorize> not like templates care and give you a nice pointer \:p
[02:58:33] <FromDiscord> <Elegantbeef> So.. worst comes to worse you cache it and use `byaddr` like logic
[02:59:15] <FromDiscord> <leorize> you can also generate a closure on-the-fly \:p
[03:06:41] <FromDiscord> <Elegantbeef> I can also reset them 😛
[03:06:50] <FromDiscord> <Elegantbeef> Oh wait you dont mean you you
[03:07:46] <NimEventer> New post on r/nim by Pcarbonn: Nim Community Survey 2021 Results, see https://reddit.com/r/nim/comments/s46036/nim_community_survey_2021_results/
[03:34:38] *** Joins: neurocyte091709 (~neurocyte@user/neurocyte)
[03:35:02] <FromDiscord> <that_dude> Can a template do any calculations, or is that reserved entirely to macros?
[03:35:39] <FromDiscord> <Elegantbeef> Templates are code substitution, they cannot compute anything
[03:35:53] <FromDiscord> <that_dude> ok
[03:36:36] *** Quits: neurocyte09170 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[03:37:36] <FromDiscord> <that_dude> and to follow that up, in general, is there a major performance diff to using a template with a lot of if statements when I could just use the macro to properly generate the one path I need
[03:37:59] <FromDiscord> <that_dude> It shouldn't be bad right?
[03:38:13] <FromDiscord> <Elegantbeef> Well yea if you have a bunch of if statements you're evaluating them, why not use when if you can do it in a macro?
[03:39:32] <FromDiscord> <Rika> Well unless if you need it on runtime of course
[03:39:55] <FromDiscord> <that_dude> I'm using it as a helper for another macro I wrote
[03:40:01] <FromDiscord> <Elegantbeef> They said they could generate the single path in a macro rika
[03:40:29] <FromDiscord> <that_dude> > The statements within a branch do not open a new scope.↵What does this mean?
[03:40:40] <FromDiscord> <that_dude> I look up the doc for when statemnt
[03:40:42] <FromDiscord> <that_dude> (edit) "statemnt" => "statement"
[03:40:51] <FromDiscord> <that_dude> So like no proc call?
[03:41:02] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3McW
[03:41:13] <FromDiscord> <Rika> Any statements in a when statement is part of the outer scope only, no branching and local scope variables etc
[03:41:44] <FromDiscord> <Rika> You can access things inside a when from the outside
[03:42:27] <FromDiscord> <that_dude> ah ok
[03:42:41] <FromDiscord> <that_dude> so like a normal if statement
[03:42:54] <FromDiscord> <Elegantbeef> No
[03:42:59] <FromDiscord> <Elegantbeef> If statements make scope
[03:43:03] <FromDiscord> <Elegantbeef> When statements do not make scope
[03:43:04] <FromDiscord> <that_dude> wait they do?
[03:43:22] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3McX
[03:44:06] <FromDiscord> <that_dude> Damn I never encounted that. I always define the `a` before to avoid accidentally going down a path that doesn't set it
[03:44:40] <FromDiscord> <leorize> i take it that you come from python \:p
[03:46:38] <FromDiscord> <that_dude> Yeah lol
[03:47:04] <FromDiscord> <that_dude> Tbh I assumed most do
[03:47:42] <FromDiscord> <Rika> I came from Python and I knew this
[03:48:21] <FromDiscord> <leorize> you just have to remember that no matter how much nim resembles python, it's a very different language
[03:48:55] <FromDiscord> <Rika> It’s something to be thankful of coming from Python lol
[03:49:49] <FromDiscord> <leorize> oh and there's no such thing as global namespace in nim, everything is module-scoped
[03:50:28] <FromDiscord> <leorize> that's a knowledge that will help you avoid the from-import trap that newcomers from python frequently fall into
[04:04:39] <FromDiscord> <theangryepicbanana> lmao people voted for nim's editor support in the community survey
[04:05:04] <FromDiscord> <theangryepicbanana> why tho
[04:05:29] <FromDiscord> <Elegantbeef> What do you mean?
[04:05:49] <FromDiscord> <theangryepicbanana> nim has very poor editor support compared to similar languages
[04:05:58] <FromDiscord> <theangryepicbanana> and uh in general
[04:06:01] <FromDiscord> <Elegantbeef> And they want it better
[04:06:28] <FromDiscord> <theangryepicbanana> well yeah but this was under the "what do you like about nim?" section
[04:06:29] <FromDiscord> <Rika> That’s not what they mean
[04:09:29] <FromDiscord> <huantian> sent a code paste, see https://play.nim-lang.org/#ix=3Md1
[04:09:42] <FromDiscord> <huantian> cast it to an array of Window, not ptr Window
[04:09:46] <FromDiscord> <huantian> sigh
[04:09:59] <FromDiscord> <Elegantbeef> The fuck it says `Window`
[04:12:00] <FromDiscord> <Rika> No I get it
[04:12:04] <FromDiscord> <Rika> It’s a pointer to an array
[04:12:05] <FromDiscord> <Rika> Var array
[04:12:21] <FromDiscord> <Elegantbeef> It's a pointer to an array of pointers to windows
[04:12:34] <FromDiscord> <Rika> That would be a triple pointer
[04:13:09] <FromDiscord> <Elegantbeef> `WIndow` is a pointer to a window
[04:13:19] <FromDiscord> <Rika> Or an array
[04:13:19] <FromDiscord> <Elegantbeef> `Window` is a pointer to an array of pointer windows
[04:13:39] <FromDiscord> <Elegantbeef> This is why pointer collections should be statically typed
[04:13:49] <FromDiscord> <Rika> Beef I think this is where your lack of c knowledge doesn’t help
[04:14:11] <FromDiscord> <Elegantbeef> I mean it's ambiguous
[04:14:24] <FromDiscord> <Rika> Yes but your meaning is not one of the choices
[04:14:34] <FromDiscord> <Rika> It’s either a pointer to an array or an array of pointers
[04:14:50] <FromDiscord> <Elegantbeef> And my meaning is the array of pointers
[04:15:12] <FromDiscord> <leorize> it could also be pointer to pointer \:p
[04:15:17] <FromDiscord> <Rika> Okay I see what you mean now
[04:15:25] <FromDiscord> <Rika> In reply to @leorize "it could also be": I guess?
[04:15:39] <FromDiscord> <Rika> I don’t think it makes much sense though considering it’s named children
[04:15:45] <FromDiscord> <Elegantbeef> It's ambiguous and the reason we cannot have nice things
[04:15:48] <FromDiscord> <Rika> Nor does a double array but yes it can
[04:17:16] <FromDiscord> <leorize> https://linux.die.net/man/3/xquerytree
[04:17:28] <FromDiscord> <Rika> Now I question the meaning and pronunciation of array damn it
[04:17:29] <FromDiscord> <leorize> according to the docs it's pointer to array
[04:18:38] <FromDiscord> <Elegantbeef> "a ray"
[04:29:49] <FromDiscord> <Rika> I mean to me the pronunciation (and context of course) changes the meaning
[04:31:40] <FromDiscord> <huantian> oh yeah funnily enough beef you had this convo with someone else previously
[04:31:52] <FromDiscord> <Elegantbeef> Probably
[04:36:16] <FromDiscord> <Bung> @ElegantBeef hi , after you refactor nimscripter , i dont know how to use it now
[04:36:41] <FromDiscord> <Elegantbeef> It's much simpler now
[04:36:55] <FromDiscord> <Elegantbeef> What's your issue?
[04:37:50] <FromDiscord> <Bung> when call intr.invoke(myMethod) where is myMethod it show compiler cant find it
[04:38:09] <FromDiscord> <Elegantbeef> Put an export marker on `myMethod`
[04:40:18] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 250 seconds)
[04:41:09] <FromDiscord> <Bung> am confusing your first example on readme contains exporto and loadScript
[04:41:36] <FromDiscord> <Bung> dont know which part put into script which put into my main program
[04:42:01] <FromDiscord> <Elegantbeef> I mean the first example doesnt require a script
[04:42:12] <FromDiscord> <Elegantbeef> `assert doThing() == 42` is the script
[04:42:43] <FromDiscord> <Elegantbeef> `exportTo` is how you add stuff to share with the nimscript
[04:43:18] <FromDiscord> <Bung> I only need call script from my main program what should I do ?
[04:43:47] <FromDiscord> <Elegantbeef> You dont want to call anything in your program?
[04:43:51] <FromDiscord> <Elegantbeef> If not you just use loadScript
[04:44:23] <FromDiscord> <Elegantbeef> Then in your script you mark your procedures with `` so you can call them from the nim code
[04:44:43] <FromDiscord> <Elegantbeef> There is an example btw
[04:44:53] <FromDiscord> <Elegantbeef> https://github.com/beef331/nimscripter/blob/master/examples/macrorepl/macrorepl.nim is the main Nim program
[04:44:58] <FromDiscord> <Bung> I do it like https://github.com/beef331/nimscripter#calling-code-from-nim but fancyStuff whill be `Error: undeclared identifier`
[04:45:20] <FromDiscord> <Elegantbeef> It's certainly not
[04:45:47] <FromDiscord> <Elegantbeef> https://github.com/beef331/nimscripter/blob/master/tests/texamples.nim i do test the examples
[04:46:46] <FromDiscord> <Elegantbeef> `fancyStuff` is exported from the script so it's accessible from the compiled Nim code
[04:47:43] <FromDiscord> <Bung> sent a code paste, see https://play.nim-lang.org/#ix=3Md6
[04:48:02] <FromDiscord> <Elegantbeef> What is your themeFIle?
[04:48:47] <FromDiscord> <Bung> it just contains karax render proc like `proc renderLayout(conf: Config; n: VNode = nil): VNode =`
[04:49:18] <FromDiscord> <Elegantbeef> Any chance you can share the example?
[04:50:37] <FromDiscord> <Bung> https://github.com/bung87/crown_ui/tree/nimscripter you can run `nim c -r src/crown_ui.nim build --cwd ./example/` to check
[05:00:16] <FromDiscord> <Elegantbeef> Ah you're passing multiple parameters which might be the issue
[05:00:25] *** Joins: LyndsySimon_ (sid34452@id-34452.lymington.irccloud.com)
[05:00:31] <FromDiscord> <Elegantbeef> You may need to do `[a, b, c]` returnTyp = void\`
[05:02:10] *** Joins: redj_ (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[05:03:44] <FromDiscord> <Bung> it cant return value now ?
[05:03:53] *** Joins: greaser|q (greaser@antihype.space)
[05:04:02] *** Joins: cyraxjoe (~joe@2806:109f:13:79ff:201:2eff:fe80:7df4)
[05:04:41] <FromDiscord> <Elegantbeef> Content has `proc`s as fields
[05:04:44] <FromDiscord> <Elegantbeef> Those are not serializable
[05:05:26] <FromDiscord> <Elegantbeef> You need to convert it to a type that can go across the bridge or again not use nimscripter 😀
[05:06:05] *** Joins: zgasma[m]1 (~mckaymatr@2001:470:69fc:105::1:627c)
[05:06:29] <FromDiscord> <Elegantbeef> I mean i suppose i could just Nil procs
[05:06:31] <FromDiscord> <Bung> oh , I may choose convert it , as I use dll approach but it cant pass variable.
[05:07:21] <FromDiscord> <Bung> I can write macro turn result into string
[05:09:01] <FromDiscord> <Bung> could this be improved that support multiple parameters ? it"s boring combine params to single type
[05:09:04] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 240 seconds)
[05:09:05] *** LyndsySimon_ is now known as LyndsySimon
[05:09:05] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (Ping timeout: 240 seconds)
[05:09:06] *** Quits: zgasma[m] (~mckaymatr@2001:470:69fc:105::1:627c) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: MightyJoe (~joe@2806:109f:13:79ff:201:2eff:fe80:7df4) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: xet7 (~xet7@user/xet7) (Ping timeout: 240 seconds)
[05:09:07] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Ping timeout: 240 seconds)
[05:10:06] <FromDiscord> <Alea> is there some seq like type with arbitrary indexes?
[05:11:42] <FromDiscord> <Elegantbeef> You can just do `libTheme.invoke(renderPost, conf, data, contentNode, returnType = void)`
[05:11:42] <FromDiscord> <Elegantbeef> Right now the issue is `ref seq[string]`
[05:11:42] <FromDiscord> <Elegantbeef> I dont handle ref semantics apparently
[05:11:43] <FromDiscord> <Elegantbeef> Which i guess i'll look at tomorrow
[05:11:44] <FromDiscord> <Elegantbeef> Sorry
[05:16:52] *** Joins: xet7 (~xet7@user/xet7)
[05:16:57] <FromDiscord> <Bung> but I need return value
[05:17:23] <FromDiscord> <Elegantbeef> I mean you can use return type
[05:17:30] <FromDiscord> <Elegantbeef> You just have to explicitly annotate it
[05:17:56] <FromDiscord> <Bung> returnType = VNode  , like this ?
[05:18:21] <FromDiscord> <Elegantbeef> Yea but we presently cannot convert `Vnode`
[05:18:39] <FromDiscord> <Elegantbeef> It has `proc` fields and also `ref seq[string]`
[05:20:03] <FromDiscord> <Bung> ah move one  forward step I get `Error: type mismatch` , I'll use macro turn proc result to string then thing's get simpler
[05:20:13] <FromDiscord> <Elegantbeef> the procs can just be converted to `nil` but the `ref T` needs to handled
[05:21:22] <FromDiscord> <Bung> the conf fields also contains json so this also be a problem ?
[05:21:38] <FromDiscord> <Elegantbeef> Nah i can parse json
[05:21:42] <FromDiscord> <Elegantbeef> Well convert json
[05:21:58] <FromDiscord> <Elegantbeef> I just forgot about `ref T` existing and `proc` being in fields
[05:23:04] <FromDiscord> <Bung> okay, I get it, thanks, Think I can complete my project through nimscripter approach
[05:47:27] <adigitoleo> Can I do type unions in the return typedesc of a proc? Couldn't find the syntax
[05:49:48] <adigitoleo> looking for something like foo(): seq[a|b]
[05:50:58] <FromDiscord> <Elegantbeef> Are you looking for a return type that is heterogenous?
[05:51:11] <adigitoleo> yep but could be seq[a] or seq[b]
[05:51:26] <FromDiscord> <Elegantbeef> Ok so no hetregenous
[05:51:49] <FromDiscord> <Elegantbeef> you can do `seq[a] or seq[b]`
[05:52:09] <FromDiscord> <Elegantbeef> If you want unions https://github.com/alaviss/union
[05:53:18] <adigitoleo> thanks
[05:55:44] *** Joins: neurocyte0917099 (~neurocyte@user/neurocyte)
[05:57:37] *** Quits: neurocyte091709 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[05:57:37] *** neurocyte0917099 is now known as neurocyte091709
[06:15:55] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[06:15:55] *** Joins: greaser|q (greaser@user/greasemonkey)
[06:16:58] *** greaser|q is now known as GreaseMonkey
[06:17:20] <FromDiscord> <Elegantbeef> @IsaacPaul\: didnt you make something like this already? https://forum.nim-lang.org/t/8806
[06:17:41] <FromDiscord> <Elegantbeef> If so ping geekrelief and send them it 😛
[06:25:32] <FromDiscord> <geekrelief> @ElegantBeef does @IsaacPaul have something online?
[06:26:04] <FromDiscord> <Elegantbeef> I think he does but i dont remember his github name so aside from stalking all of his messages i cant get it 😛
[06:27:07] <FromDiscord> <geekrelief> I'm scrolling through them 🙂
[06:27:09] <FromDiscord> <IsaacPaul> Izackp
[06:27:18] <FromDiscord> <IsaacPaul> Is the git hub
[06:27:22] <FromDiscord> <IsaacPaul> Imma send it in a sec
[06:28:13] <FromDiscord> <IsaacPaul> https://github.com/izackp/questionable
[06:28:28] <FromDiscord> <geekrelief> cool! thx
[06:29:45] <FromDiscord> <geekrelief> In reply to @IsaacPaul "https://github.com/izackp/questionable": Do you think your library can solve my issue with this? https://play.nim-lang.org/#ix=3Md8
[06:31:50] <FromDiscord> <geekrelief> My issue with chaining is that it doesn't work if I have a call with args. With no args it works.
[06:32:40] <FromDiscord> <IsaacPaul> I’d like to help but I’m indisposed atm
[06:32:47] <FromDiscord> <IsaacPaul> Check out the readme
[06:32:59] <FromDiscord> <geekrelief> no worries.  yeah I looked at the readme. I'm looking through the code now
[06:33:11] <FromDiscord> <IsaacPaul> In reply to @geekrelief "Do you think your": Also not really my library. Someone else’s + modifications
[06:33:23] <FromDiscord> <geekrelief> oh haha I see
[06:58:23] *** Quits: Lord_Nightmare (~Lord_Nigh@user/lord-nightmare/x-3657113) (Ping timeout: 256 seconds)
[07:09:21] *** redj_ is now known as redj
[07:10:03] *** Quits: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:11:06] *** Joins: redj (~quassel@bras-base-bchmpq5707w-grc-11-74-15-230-188.dsl.bell.ca)
[07:33:07] <NimEventer> New post on r/nim by distractedbytheworld: Using javascript arguments in a Nim function, see https://reddit.com/r/nim/comments/s4bb5g/using_javascript_arguments_in_a_nim_function/
[08:19:11] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:48:22] <adigitoleo> playground is *ahem* playing up for me, but I'm confused why this doesn't work https://x0.at/znQC.txt
[08:52:19] <FromDiscord> <Rika> table.mitems
[08:52:34] <FromDiscord> <Rika> Iterator values are immutable by default
[08:52:56] <adigitoleo> Ah
[09:15:31] <NimEventer> New thread by Cantanima: Suppressing non-exported fields in nim doc, see https://forum.nim-lang.org/t/8809
[10:19:50] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:19:56] <adigitoleo> does unittest run tests in async? I'm getting barf in my logging that I can't seem to repro in a simple example
[10:20:03] <adigitoleo> running with nimble test
[10:22:44] <nrds> <06Prestige99> barf?
[10:22:46] <FromDiscord> <Elegantbeef> I dont think so
[10:22:59] <FromDiscord> <Elegantbeef> I could be wrong, but there is no mention of it and `suite` is just a template
[10:23:23] <adigitoleo> there's some {.threadvar.} in unittest source, I'm not savvy enough to now completely what it's about tho
[10:23:46] <adigitoleo> maybe I need to mark my logger with that also?
[10:25:49] <adigitoleo> nrds: I mean like repeated log entries
[10:29:35] <adigitoleo> Maybe relevant https://nim-lang.org/docs/logging.html#basic-usage-notes-when-using-multiple-threads
[10:29:50] <adigitoleo> Not sure how I'd set the handler in each thread...
[10:40:56] <adigitoleo> Hmm nevermind must be something else, can't see any thread creation in unittest source
[12:17:15] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e9dc:9351:261d:7ec4)
[12:38:39] <FromDiscord> <retkid> my latest nim problem is the compiler is either underflowing or overflowing
[12:38:46] <FromDiscord> <retkid> whats the general cause of this
[12:40:02] <FromDiscord> <mratsim> are you doing compile-time computation?
[12:40:17] <FromDiscord> <retkid> no consts
[12:40:31] <FromDiscord> <retkid> in the entire project
[12:43:07] <FromDiscord> <Elegantbeef> That doesnt answer the question
[12:43:33] <FromDiscord> <Rika> Macros count as compile time
[12:43:44] <FromDiscord> <Elegantbeef> So does `static:`
[12:45:18] <FromDiscord> <Rika> A lot of things too
[12:45:43] <FromDiscord> <Rika> So what exactly is the error?
[12:45:48] <FromDiscord> <retkid> no macros, templates, statics
[12:45:50] <FromDiscord> <retkid> (edit) "statics" => "statics, etc"
[12:46:06] <FromDiscord> <retkid> it just raises overflow and sysfatals
[12:46:13] <FromDiscord> <Rika> That’s not a compiler error
[12:46:15] <FromDiscord> <Rika> That’s a runtime error
[12:46:24] <FromDiscord> <retkid> during compile time
[12:46:24] <FromDiscord> <Rika> The whole error please
[12:48:52] <FromDiscord> <Elegantbeef> There is a non 0 chance they have code that causes a compiler crash, but I'm cautious of that assertion
[12:49:21] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/931839964541485056/unknown.png
[12:49:23] <FromDiscord> <Rika> We can’t tell of course until error and source
[12:49:40] <FromDiscord> <retkid> literally
[12:49:42] <FromDiscord> <retkid> thats it
[12:49:58] <FromDiscord> <retkid> as you can tell its very imformative
[12:49:58] <FromDiscord> <Rika> Okay now that we know it is the compiler what’s the source
[12:50:02] <FromDiscord> <Elegantbeef> That's a compiler error
[12:50:04] <FromDiscord> <retkid> (edit) "imformative" => "informative"
[12:50:11] <FromDiscord> <Elegantbeef> Give me code please
[12:50:29] <FromDiscord> <retkid> In reply to @Rika "Okay now that we": yea I have no clue where it is, 53 of the main doesn't contain any math so its kinda like wat
[12:50:37] <FromDiscord> <Rika> I mean the source code lol
[12:50:43] <FromDiscord> <Elegantbeef> Alternatively build/run with a debug compiler
[12:51:10] <FromDiscord> <Rika> In reply to @Elegantbeef "Alternatively build/run with a": Note that things are somewhat slow this way so if the thing is slow building theeeen
[12:51:59] <FromDiscord> <retkid> i might just start hacking things out because inim doesn't work
[12:52:31] <FromDiscord> <Rika> Well we could help better if we could see the code, of course though it is your choice
[12:52:32] <FromDiscord> <Elegantbeef> like i said if you want to see the issue compile with a debug compiler and you'll get a useful stacktrace to see where the overflow happens
[12:52:43] <FromDiscord> <Elegantbeef> It wont help you much as you arent a compiler dev but it'll say where
[12:53:04] <FromDiscord> <Rika> If you want beef here will guide you with the process of that xddd
[12:53:16] <FromDiscord> <enthus1ast> why is a debug compiler needed for this?
[12:53:43] <FromDiscord> <Elegantbeef> Cause the compiler strips out stacktrace for performance reasons in release
[12:53:45] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[12:53:54] <FromDiscord> <enthus1ast> knowing where the error is could interest any one  imho
[12:54:03] <FromDiscord> <Elegantbeef> Sure but it's also costly for all operations
[12:54:14] <FromDiscord> <Elegantbeef> Storing stack traces slows compilation down
[12:54:19] <FromDiscord> <Rika> I’m assuming a massive performance loss with it in
[12:54:21] <FromDiscord> <Rika> On
[12:54:23] <FromDiscord> <Elegantbeef> Nim now ships with a debug compiller iirc but i could be wrong
[12:54:37] <FromDiscord> <enthus1ast> could it be stripped out on a release build?
[12:54:37] <FromDiscord> <Elegantbeef> Indeed
[12:54:45] <FromDiscord> <retkid> something to do with another function i wrote but that function compiles file
[12:54:49] <FromDiscord> <retkid> so its kindaaaaaaa stupid
[12:54:55] <FromDiscord> <Elegantbeef> I mean it's a compiiler error
[12:55:05] <FromDiscord> <Elegantbeef> I'd happily look into it if you provide a reproduction
[12:55:35] <FromDiscord> <retkid> oh hell no this code isn't code I'd show my therapist
[12:55:51] <FromDiscord> <Rika> We’re not your therapist so it’s fine
[12:55:56] <FromDiscord> <Elegantbeef> Well then i can only say stupid in stupid out
[12:56:14] <FromDiscord> <Rika> Garbage in garbage out you mean?
[12:56:15] <FromDiscord> <retkid> its not stupid, just ugly
[12:56:17] <FromDiscord> <Elegantbeef> The debug compiler option will also give helpful information though
[12:56:32] <FromDiscord> <retkid> how would one do that
[12:56:51] <FromDiscord> <Elegantbeef> Clone https://github.com/nim-lang/Nim
[12:57:06] <FromDiscord> <Elegantbeef> do `./build_all.sh` or `./build_all.bat`
[12:57:17] <FromDiscord> <retkid> how long will building nim from source take...
[12:57:21] <FromDiscord> <retkid> wel
[12:57:22] <FromDiscord> <Elegantbeef> then do `./koch temp c ./path/to/your/nimFile.nim`
[12:57:24] <FromDiscord> <retkid> thats not a good question
[12:57:28] <FromDiscord> <Elegantbeef> Takes about 2 minutes from fresh on my machine
[12:57:48] <FromDiscord> <enthus1ast> choosenim should have an option to also build/download a nim debug compiler and put it next to the release one, maybe called nimdbg
[12:57:50] <FromDiscord> <retkid> alright I'll ``time`` it and see how much faster your machne is
[12:58:01] <FromDiscord> <Elegantbeef> I have a xeon1231v3
[12:58:07] <FromDiscord> <Elegantbeef> Not an amazing cpu but not a shitty one either
[12:58:13] <FromDiscord> <retkid> it-4790S
[12:58:17] <FromDiscord> <retkid> (edit) "it-4790S" => "I5-4790S"
[12:58:24] <FromDiscord> <Elegantbeef> I mean i think araq wants to ship a debug compiler with the standard one
[12:58:28] <FromDiscord> <Elegantbeef> So skips the debug path
[12:58:32] <FromDiscord> <Elegantbeef> Yea about the same IPC
[12:58:37] <FromDiscord> <Elegantbeef> So going to take about the same time
[12:58:55] <FromDiscord> <Elegantbeef> Both haswell  cpus
[12:59:38] <FromDiscord> <Elegantbeef> But yes enthus having easy access to a debug compiler makes bugs like this easier to resolve/provide min repros
[13:00:14] <FromDiscord> <Elegantbeef> Might be a bit biased given my compiler contributions 😀
[13:00:32] <FromDiscord> <Elegantbeef> I feel having the source is just better than a debug binary
[13:00:47] <FromDiscord> <Elegantbeef> Like sure the debug binary gives a line number, but having the source means you can atleast try to fix it
[13:00:53] <FromDiscord> <Elegantbeef> But i also dont mind wasting time
[13:01:14] <FromDiscord> <enthus1ast> yeah i mean, its always annoying when eg an assert breaks your code, but you don't know why and where
[13:01:36] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/931843047564668928/unknown.png
[13:01:39] <FromDiscord> <Elegantbeef> Yea i have compiler cloned so it's more like a puzzle to me than a nuisance 😛
[13:01:40] <FromDiscord> <retkid> optimization is to be had
[13:01:48] <FromDiscord> <enthus1ast> then it feels stupid because i have the feeling that the compiler COULD tell me where it breaks but does not
[13:02:03] <FromDiscord> <Elegantbeef> It's "Aw hell yea, i get to bug hunt and possibly have another PR"
[13:02:38] <FromDiscord> <retkid> In reply to @enthus1ast "yeah i mean, its": seems like a solvable problem
[13:02:55] <FromDiscord> <Elegantbeef> I mean it is with stack traces, they're heavy though
[13:02:58] <FromDiscord> <enthus1ast> sure maybe the debug compiler can do this already
[13:03:11] <FromDiscord> <retkid> what if you just print the line and the file as it goes along
[13:03:15] <FromDiscord> <Elegantbeef> Even timothee's optimized stack traces were considered too heavy iirc
[13:03:15] <FromDiscord> <retkid> so you can see where it stops
[13:03:21] <FromDiscord> <Elegantbeef> I mean that's' a stack trace
[13:03:26] <FromDiscord> <enthus1ast> i mean, you would just use the debug compiler when you want to debug
[13:03:33] <FromDiscord> <Elegantbeef> Exactly
[13:03:44] <FromDiscord> <retkid> it took me 4.4 minutes
[13:04:00] <FromDiscord> <Elegantbeef> is that a mobile Cpu?
[13:04:14] <FromDiscord> <retkid> no lol
[13:04:25] <FromDiscord> <Elegantbeef> I couldnt remember what the S stood for
[13:04:37] <FromDiscord> <retkid> i had no money this was the cheapest ok-cpu i could find
[13:04:41] <FromDiscord> <retkid> I dont know either
[13:04:48] <FromDiscord> <Elegantbeef> Yea that's why i have a xeon1231v3
[13:05:04] <FromDiscord> <Elegantbeef> I couldnt afford a K series so went with the xeon
[13:05:08] <FromDiscord> <enthus1ast> but 4.4 minutes is not bad, i remember the times when arch did not ship with mingw, o my gawd
[13:05:23] <FromDiscord> <enthus1ast> 30 - 60 minutes building mingw
[13:05:25] <FromDiscord> <retkid> well i had ordered the MB before because i thought my old cpu worked
[13:05:43] <FromDiscord> <retkid> I've had data take 8 hours to fully compile and save to a json\
[13:05:46] <FromDiscord> <Elegantbeef> Rust from source laughs
[13:05:51] <FromDiscord> <Elegantbeef> Anyway
[13:05:56] <FromDiscord> <Elegantbeef> Test the code now
[13:06:20] <FromDiscord> <retkid> its goin
[13:06:21] <FromDiscord> <retkid> slowly
[13:06:33] <FromDiscord> <Elegantbeef> Yea debug is slow 😛
[13:06:50] <FromDiscord> <Elegantbeef> I tend to run one build find the path/ast that causes the error then minimize it
[13:07:02] <FromDiscord> <retkid> its also compiling literally every fil
[13:07:37] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/931844562857644053/unknown.png
[13:07:41] <FromDiscord> <enthus1ast> wait\: `./koch temp c ./path/to/your/nimFile.nim` is building the debug compiler then compiles the file with the debug compiler?
[13:07:53] <FromDiscord> <Elegantbeef> Yes
[13:07:53] <FromDiscord> <retkid> In reply to @retkid "": anticlimactic
[13:08:22] <FromDiscord> <enthus1ast> maybe you've cloned the #head
[13:08:34] <FromDiscord> <enthus1ast> not the version your where useing all the time
[13:08:46] <FromDiscord> <enthus1ast> cloned and build i mean
[13:08:49] <FromDiscord> <Elegantbeef> Not using 1.6.2... that's a paddling 😀
[13:09:13] <FromDiscord> <Elegantbeef> I joke cause i'm presently on devel to play with new features!
[13:09:26] <FromDiscord> <Rika> Isnt 1.6.2 the version where a billion regressions reared their heads
[13:09:48] <FromDiscord> <Elegantbeef> Perhaps dont recall, I havent had any issues yet
[13:09:55] <FromDiscord> <Elegantbeef> Thought it was 1.6.0 that had regressions
[13:10:05] <FromDiscord> <Elegantbeef> Surprisingly none have been attributed to my code
[13:10:41] <FromDiscord> <Rika> That could mean no one uses what you added
[13:10:43] <FromDiscord> <Rika> xd
[13:10:47] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/931845359423082526/unknown.png
[13:11:07] <FromDiscord> <Elegantbeef> there we go
[13:11:11] <FromDiscord> <retkid> this is more insightful?
[13:11:21] <FromDiscord> <Rika> Yes
[13:11:45] <FromDiscord> <retkid> im not seein it
[13:12:13] <FromDiscord> <Rika> I intuit that it’s a syntax issue
[13:12:26] <FromDiscord> <Rika> Of course I have no idea because I can’t read the source code
[13:12:27] <FromDiscord> <Elegantbeef> We know it's a lexer issue
[13:12:42] <FromDiscord> <Elegantbeef> I've not touch the lexer so i dont know how to debug it
[13:12:43] <FromDiscord> <retkid> my code is so unreadable that the lexer has given up upon me
[13:12:46] <FromDiscord> <Rika> (I don’t have the source handy right now and I’m on mobile lol)
[13:12:59] <FromDiscord> <Rika> What does the line where it crashes look like at least
[13:13:01] <FromDiscord> <Elegantbeef> Eh the line that's the issue is an `inc` call
[13:13:13] <FromDiscord> <retkid> In reply to @Rika "What does the line": wait where does it say that
[13:13:20] <FromDiscord> <Rika> It’s a question
[13:13:31] <FromDiscord> <retkid> i dont know where it says the line to look at it
[13:13:42] <FromDiscord> <Rika> “What does <the line [of your code] where it crashes> look like, at least?”
[13:13:54] <FromDiscord> <Rika> Ah was it not there I don’t remember
[13:13:56] <FromDiscord> <retkid> ah
[13:13:58] <FromDiscord> <retkid> 78,9
[13:14:14] <FromDiscord> <Elegantbeef> That line is the last known good line
[13:14:27] <FromDiscord> <retkid> ah
[13:14:31] <FromDiscord> <retkid> so we dont know the line
[13:14:32] <NimEventer> New thread by Argl: Namespaces for non-enums without customizing the import statement?, see https://forum.nim-lang.org/t/8810
[13:15:07] <FromDiscord> <Elegantbeef> Well i know it's a string literal
[13:15:16] <FromDiscord> <Elegantbeef> So what string lits do you have after line `78`
[13:15:42] <FromDiscord> <Rika> Oh I’m betting it’s an invalid escape code
[13:16:11] <FromDiscord> <Elegantbeef> To answer "how do you know it's a strlit"
[13:16:33] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3MeL
[13:16:44] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3MeM
[13:17:03] <FromDiscord> <Rika> That’s strange
[13:17:33] <FromDiscord> <retkid> something weird with these strings?
[13:17:37] <FromDiscord> <Rika> No
[13:17:38] <FromDiscord> <retkid> its not in tohex
[13:17:41] <FromDiscord> <Rika> That’s the strange thing
[13:17:44] <FromDiscord> <Rika> Nothing looks weird
[13:18:11] <FromDiscord> <retkid> theres no other string literals in this funtion
[13:18:14] <FromDiscord> <Elegantbeef> If you want to know what causes the error you can go to parser.nim line 731 and put `echo p.tok.literal`
[13:18:16] <FromDiscord> <retkid> (edit) "funtion" => "function"
[13:18:23] <FromDiscord> <Elegantbeef> It doesnt have to be in that function
[13:18:27] <FromDiscord> <Rika> Wouldn’t that mean a recompile of the compiler hahaha
[13:18:32] <FromDiscord> <Elegantbeef> It's anywhere after that module and line is processed
[13:18:36] <FromDiscord> <Elegantbeef> Recompilation is quick
[13:18:37] <FromDiscord> <Rika> Another 4 minutes of waiting for you
[13:18:40] <FromDiscord> <Elegantbeef> Nah
[13:18:45] <FromDiscord> <Rika> Ah true I forgot c cache
[13:18:48] <FromDiscord> <retkid> if not then
[13:18:49] <FromDiscord> <Elegantbeef> It's like 30s on hotpath heavy code
[13:18:57] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3MeN
[13:19:00] <FromDiscord> <retkid> (edit) 
[13:19:02] <FromDiscord> <retkid> these are also literals
[13:19:05] <FromDiscord> <retkid> but its not in quit
[13:19:22] <FromDiscord> <Rika> Seems fine too
[13:19:23] <FromDiscord> <Elegantbeef> Like i said the easiest thing is to put an echo statement inside that line in parser.nim then rerun the koch command
[13:19:32] <FromDiscord> <retkid> ah yea
[13:19:55] <FromDiscord> <Elegantbeef> It'll barf to your stdout but the last line before the stack trace will be what you need to know
[13:20:52] <FromDiscord> <Elegantbeef> All i can say is i think it's attempting to get a token from a strlit, but I dont know the lexer/parser well
[13:21:14] <FromDiscord> <Elegantbeef> Actually it might be a symbol after the strlit
[13:21:45] <FromDiscord> <Rika> In reply to @NimEventer "New thread by Argl:": Beef do you think this is possible? I’ve been thinking about it for a while and I’ve concluded it isn’t easy with a macro, and that the original syntax is wholly impossible
[13:21:55] <FromDiscord> <Rika> Given the wanted features
[13:22:40] <FromDiscord> <retkid> haha
[13:22:46] <FromDiscord> <retkid> as it compiles its barfing it out
[13:23:16] <FromDiscord> <retkid> so strange how compilers are like dogs chasing their own tails
[13:24:39] <FromDiscord> <Elegantbeef> There you go rika
[13:24:41] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3MeO
[13:24:51] <FromDiscord> <Rika> With the features, that is easy
[13:24:53] <FromDiscord> <Elegantbeef> \export `.` of course\`
[13:25:00] <FromDiscord> <Rika> He also wants aliasing and explicit optional
[13:26:25] <FromDiscord> <Elegantbeef> Nim allows importing symbols with a different prefix
[13:26:44] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3MeP
[13:26:51] <FromDiscord> <retkid> now i dont know if i messed with something causing a differentt issue
[13:27:09] <FromDiscord> <Elegantbeef> `import x as y` is valid so i dont know
[13:27:26] <FromDiscord> <Elegantbeef> `Error: cannot open '../../dev/youtube-filehosting/controller.nimc'`
[13:27:35] <FromDiscord> <retkid> ha
[13:27:46] <FromDiscord> <retkid> my ctrl key is broke
[13:27:48] <FromDiscord> <retkid> it happens
[13:27:55] <FromDiscord> <retkid> alright
[13:27:57] <FromDiscord> <retkid> here we are
[13:28:08] <FromDiscord> <Elegantbeef> I dont know what the person wants is not Nim code
[13:28:11] <FromDiscord> <Elegantbeef> They want C++ code in Nim
[13:28:35] <FromDiscord> <Rika> In reply to @Elegantbeef "Nim allows importing symbols": Well yeah but I think he wants not-file-bound namespaces like in C++
[13:28:47] <FromDiscord> <retkid> the last string sent into the lexxxer will surprise you
[13:28:47] <FromDiscord> <Rika> I know yeah
[13:28:48] <FromDiscord> <Elegantbeef> I mean it's technically possible with the macrocache
[13:28:50] <FromDiscord> <Rika> It’s just not possible
[13:28:55] <FromDiscord> <Rika> Well
[13:28:58] <FromDiscord> <Rika> I guess?
[13:29:01] <FromDiscord> <Rika> But that’s a lot of work lmfao
[13:29:02] <FromDiscord> <retkid> thats it
[13:29:06] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3MeR
[13:29:09] <FromDiscord> <Elegantbeef> Idneed
[13:29:15] <FromDiscord> <retkid> (edit) "https://play.nim-lang.org/#ix=3MeR" => "https://play.nim-lang.org/#ix=3MeS"
[13:29:17] <FromDiscord> <Elegantbeef> You no longer use the normal nim import system
[13:29:18] <FromDiscord> <retkid> (edit) 
[13:29:23] <FromDiscord> <retkid> (edit) 
[13:29:36] <FromDiscord> <retkid> the last character is non printable
[13:29:36] <FromDiscord> <Rika> I keep on forgetting the almighty macro cache exists nowadays
[13:29:38] <FromDiscord> <Rika> Hahaha
[13:29:45] <FromDiscord> <retkid> or \n or something idk
[13:30:07] <FromDiscord> <Elegantbeef> well you can do `.toHex` but i think that's the problem
[13:31:02] <FromDiscord> <Elegantbeef> Seems like rika was right
[13:31:11] <FromDiscord> <retkid> what was Rika's guess
[13:31:13] <FromDiscord> <Elegantbeef> that's a first
[13:31:13] <FromDiscord> <retkid> an escape?
[13:31:20] <FromDiscord> <Elegantbeef> A character causing the issue
[13:31:44] <FromDiscord> <retkid> how now i wish i did expr
[13:32:57] <FromDiscord> <Elegantbeef> Anyway there you go you're on the path to becoming a compiler dev now
[13:35:44] <FromDiscord> <retkid> now heres the question bef
[13:35:48] <FromDiscord> <retkid> everything you know about me
[13:35:56] <FromDiscord> <retkid> would you trust me to make a good well thought out PR
[13:36:05] <FromDiscord> <retkid> i would not
[13:36:18] <FromDiscord> <Elegantbeef> Luckily there are multiple other people  working on this project
[13:39:01] <FromDiscord> <Elegantbeef> Though it's still odd a str lit causes this, but seems it increments to eternity
[13:41:31] <FromDiscord> <Isofruit> In terms of stability, how stable are concepts? LIke, still a lot of kinks to figure out, just some edgecases, basically ready for the next nim version?
[13:42:02] <FromDiscord> <Elegantbeef> I mean i use them a lot i know there are issues with them but they're very usable
[13:44:10] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e9dc:9351:261d:7ec4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:44:59] <FromDiscord> <Elegantbeef> The main issue i think is that Araq doesnt like how cryptic they used to  appear
[13:45:31] <FromDiscord> <Elegantbeef> The new concepts are nicer but are also more limited
[13:45:56] <FromDiscord> <Elegantbeef> I personally go for concepts whenever i touch anything that's not truely generic and not constrainable on types
[13:47:19] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Mf3
[13:48:41] <FromDiscord> <Elegantbeef> Isofruit asked a question and got nothing but noise
[14:12:20] <FromDiscord> <retkid> so
[14:12:27] <FromDiscord> <retkid> i figured out what it was i think
[14:12:40] <FromDiscord> <retkid> this is the stupidest error I've ever found
[14:12:58] <FromDiscord> <retkid> so the last line looked blank
[14:13:03] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=
[14:13:10] <FromDiscord> <retkid> (edit) 
[14:13:19] <FromDiscord> <retkid> however it was over 10 thousand spaces
[14:13:35] <FromDiscord> <retkid> i somehow just held the spacebar while dazing off at 4 am
[14:14:47] <FromDiscord> <retkid> @Rika idk if you were right or not
[14:19:14] <FromDiscord> <enthus1ast> Haha↵(@retkid)
[14:19:49] <FromDiscord> <enthus1ast> Can recommend the vscode plugin that removes trailing  whitespaces on save
[14:20:28] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/931862893786460230/unknown.png
[14:20:33] <FromDiscord> <retkid> this shall never happen again
[14:21:00] <FromDiscord> <enthus1ast> Ah its build in now\: https://stackoverflow.com/questions/30884131/remove-trailing-spaces-automatically-or-with-a-shortcut
[14:21:42] *** Joins: Guest44 (~Guest44@46.147.244.129)
[14:21:56] *** Quits: Guest44 (~Guest44@46.147.244.129) (Client Quit)
[14:22:27] <FromDiscord> <Rika> Holy shit lmfao
[14:22:57] <FromDiscord> <retkid> In reply to @enthus1ast "Ah its build in": i still use bracket colorizor
[14:23:09] <FromDiscord> <retkid> cant stop me
[14:26:20] <FromDiscord> <Isofruit> In reply to @Elegantbeef "*Isofruit asked a question": I'm curious how they'll end up looking when finalized
[14:26:58] <FromDiscord> <Isofruit> On an unrelated note, man I have no idea which code Django is wrapping when encrypting their stuff but it appears to be a pretty well optimized library
[14:36:29] <FromDiscord> <Isofruit> O.O↵I take that back, for some reason I expected nimcrypto while compiled in debugmode to beat the performance of django which likely wraps a compiled C library somewhere. Things look a bit different when I stop handicapping nimcrypto and build with -d:release
[14:38:30] <FromDiscord> <Isofruit> Crazily enough, the whole thing is still somewhat faster in Django (170ms - 200ms in Django vs. 260ms-290ms in Nim with nimcrypto) but not by enough that I'm too worried
[14:43:29] *** Joins: dv2 (~dv2@2a01:4f8:c0c:b9f4::1)
[14:52:30] <FromDiscord> <Rika> Crypto libraries are pretty mature and well optimised
[14:58:24] <FromDiscord> <hotdog> In reply to @Isofruit "Crazily enough, the whole": Interesting
[14:58:29] <FromDiscord> <hotdog> How are you testing this?
[15:00:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e9dc:9351:261d:7ec4)
[15:02:30] <FromDiscord> <Isofruit> sent a long message, see https://paste.rs/WfO
[15:03:17] <FromDiscord> <Isofruit> That's not going to tell me what my timing on my HTTP Server (since that's a potato and my laptop, while old and crappy, is still faster than that) will be in the end, but it gives me an indicator on how fast they are in relation to each other.
[15:03:29] <FromDiscord> <Isofruit> (edit) "an" => "a rough"
[15:04:43] <FromDiscord> <Isofruit> (edit) "HTTP Server" => "actual server"
[15:07:29] <FromDiscord> <Isofruit> sent a code paste, see https://play.nim-lang.org/#ix=3Mfi
[15:08:15] <FromDiscord> <Isofruit> (edit) "https://play.nim-lang.org/#ix=3Mfi" => "https://paste.rs/bmt"
[15:08:40] <FromDiscord> <Isofruit> So all I can assume that whatever library Django is wrapping is pretty darn good
[15:08:49] <FromDiscord> <Isofruit> (edit) "So all I can assume ... that" 03added "is"
[15:09:42] <FromDiscord> <Isofruit> (edit) "good" => "good. Since by all means, it's handicapped by everything else this language does, the encryption bit is, I imagine, the only fast part of that API endpoint."
[15:13:35] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e9dc:9351:261d:7ec4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:17:37] *** Quits: neurocyte091709 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[15:20:26] *** Joins: neurocyte091709 (~neurocyte@user/neurocyte)
[15:30:15] <FromDiscord> <hotdog> @Isofruit cool, I think you are right. I’m interested to see how you get on as I’ve also used Django for backends a lot
[15:32:59] <FromDiscord> <Isofruit> The tooling obviously isn't as fleshed out as in Django, but some of the stuff is a dream. I assume you've used Django-REST-Framework at one point? Literally trivial if you also use jsony, you can skip the entire step of setting up serializers, you just directly serialize/deserialize into object types.
[15:33:45] <FromDiscord> <Isofruit> And setting up the models if you use norm + elegantBeef's constructor project is pretty close to Django's model-convenience
[15:33:59] <FromDiscord> <hotdog> In reply to @Isofruit "The tooling obviously isn't": Yeah I use Django pretty much exclusively as just a combo of Django-orm + DRF + Django-admin
[15:35:32] <FromDiscord> <Isofruit> In reply to @hotdog "Yeah I use Django": Once my PR on norm gets through and its next version comes out, norm will also have some helper procs to fetch many-to-one relationships from the model that doesn't have the foreign-key field, as well as many-to-many relationships. Every many to many fetch is still one query though, but at least it tells you at compile time if you're doing sth wrong
[15:35:42] <FromDiscord> <Isofruit> (edit) "doing sth" => "using these helper procs"
[15:36:35] <FromDiscord> <Isofruit> (edit) "though," => "though (so if you want to fetch many-to-many of 2 different entries, that's 2 db queries),"
[15:37:18] <FromDiscord> <Isofruit> But Django admin will be a tough one to say goodbye to, tough enough I might feel tempted to see if I'm competent enough to write a PR for it
[15:37:25] <FromDiscord> <Isofruit> Or see if there's a plugin somewhere or sth
[15:38:21] <FromDiscord> <Isofruit> More likely the latter rather than the former because django admin recreation is likely craptons of work
[15:38:58] *** Quits: neurocyte091709 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[15:41:01] *** Joins: neurocyte091709 (~neurocyte@user/neurocyte)
[15:42:33] <FromDiscord> <hotdog> In reply to @Isofruit "Once my PR on": I’ve been following your PR on GitHub 😊 it’s good to see Norm coming along
[15:42:45] <FromDiscord> <hotdog> I haven’t had time to play with it yet but hopefully soon
[15:43:13] <FromDiscord> <hotdog> In reply to @Isofruit "More likely the latter": Yeah this is a tricky one. One of the main things keeping me stuck on Django
[15:56:29] <FromDiscord> <Rika> Isn’t hashing one of those things easily vectorisable, I forgot
[15:57:56] <FromDiscord> <Isofruit> I'll plead the fifth on that one, I was barely competent enough to comprehend how to use nimcrypto to recreate django's encryption, my knowledge does not go that deeply
[15:59:05] <FromDiscord> <Rika> We’re entering “advanced optimisation” levels, I wouldn’t expect most people to know, even I do not know well
[15:59:40] <FromDiscord> <Isofruit> Good to know that this is at least actually hard for most people 😄
[16:02:50] <FromDiscord> <Rika> It’s the kinda thing you usually need to read a book or take a proper class on I’m led to believe
[16:18:31] <FromDiscord> <ajusa> In reply to @Isofruit "Once my PR on": I'm looking forward to this PR
[16:23:59] *** Joins: Vladar (~Vladar@46.162.2.53)
[16:24:38] <FromDiscord> <Isofruit> In reply to @ajusa "I'm looking forward to": Thanks! I'm honestly fairly excited to see what the final version of that PR will look like, since chances are there are a decent amount of bits and bobs to improve that I may have overlooked
[16:32:54] <FromDiscord> <ajusa> I'm just excited to have Norm be more powerful, so that it can realistically compete with the Python ecosystem. I plan to combine that with my form library to build web apps
[16:41:10] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e9dc:9351:261d:7ec4)
[16:47:56] <adigitoleo> how to get bounds of a slice? tried slice[0] and slice.low but no luck
[16:51:38] <adigitoleo> nvm just have to toSeq first
[16:55:27] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e9dc:9351:261d:7ec4) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:28:16] <FromDiscord> <haxscramper> .a and .b
[17:28:45] <FromDiscord> <haxscramper> Slice is an object, HSlice, defined in system.nim
[17:42:29] <FromDiscord> <auxym> how do I create an UncheckedArray (of 6 `byte`s) on the stack (ie without casting from `alloc`)? Can I (or should I) cast a nim array?
[17:44:38] *** Quits: neurocyte091709 (~neurocyte@user/neurocyte) (Ping timeout: 250 seconds)
[17:45:16] <FromDiscord> <auxym> specifically, to call a C function that takes `uint8_t buf[6]` as an argument
[17:47:16] <adigitoleo> haxscramper: thanks
[17:49:21] *** Joins: neurocyte091709 (~neurocyte@user/neurocyte)
[17:49:38] <FromDiscord> <haxscramper> In reply to @auxym "specifically, to call a": For this one you can start with taking `addr` of an `array[8, uint8]`
[17:50:23] <FromDiscord> <haxscramper> IIRC `UnchekedArray` does not really exist without `ptr` - it is just a wrapper type around C's pointer-can-actually-be-an-array-hack
[17:50:51] <FromDiscord> <haxscramper> So in general, you have to take an address of some data and cast it to `ptr UncheckedArray[T]`
[17:50:54] <FromDiscord> <auxym> ok! just wasn't sure if nim arrays had the same memory layout as a plain c array
[17:52:26] <FromDiscord> <yallxe> how do I convert string to cstring? i've tried doing `cast[cstring](...)` but the output was "".
[18:11:38] *** Joins: arkurious (~arkurious@user/arkurious)
[18:13:11] <FromDiscord> <yallxe> In reply to @yallxe "how do I convert": tried to figure out wtf is going on and actually, if I pass `var string` to `cast[cstring]()`, the output will `""`
[18:13:20] <FromDiscord> <yallxe> but why
[18:20:07] <FromDiscord> <auxym> I'm not sure, but nim strings are quite different internally from raw strings, which are a null-terminated array of chars
[18:21:50] <FromDiscord> <yallxe> In reply to @auxym "I'm not sure, but": yes, i know
[18:22:00] <FromDiscord> <auxym> See this maybe? https://nim-lang.org/docs/system.html#allocCStringArray%2CopenArray%5Bstring%5D
[18:22:23] <FromDiscord> <yallxe> but the issue that `var string` is not converting to `cstring` using cast
[18:22:35] <FromDiscord> <yallxe> while the `let string` or `const string` does
[18:23:20] <FromDiscord> <yallxe> In reply to @auxym "See this maybe? https://nim-lang.org/docs/system.ht": not sure if this is what i need
[18:24:00] <FromDiscord> <yallxe> probably not
[18:25:44] <FromDiscord> <auxym> probably not indeed. Not sure if there's anything built in for what you want or if you'll have to use `copyMem`
[18:28:13] <FromDiscord> <yallxe> In reply to @yallxe "while the `let string`": correction, const string only does.
[18:32:21] <FromDiscord> <Bloss> sent a code paste, see https://paste.rs/Uxf
[18:33:07] <FromDiscord> <haxscramper> you can do this, partially, having two overloads with different names is possible
[18:33:46] <FromDiscord> <haxscramper> so, as usual - "you can probably write a macro for that"
[18:48:21] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[19:19:30] *** Joins: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de)
[19:34:08] *** Quits: adigitoleo (~adigitole@139.168.64.98) (Ping timeout: 260 seconds)
[19:42:18] <FromDiscord> <whisperdev> How does one build an app for iOS or Android with Nim?
[19:42:46] <FromDiscord> <whisperdev> Maybe it would be better for me to go with something mainstream. I just need a simple form with authentication / user management and upload file functionality
[19:43:56] *** Joins: adigitoleo (~adigitole@2001:8003:1d19:4500:46af:28ff:fe3e:6903)
[19:58:11] *** Quits: adigitoleo (~adigitole@2001:8003:1d19:4500:46af:28ff:fe3e:6903) (Ping timeout: 250 seconds)
[20:02:33] *** Joins: adigitoleo (~adigitole@2001:8003:1d19:4500:b133:e1f9:4a39:adc9)
[20:26:42] *** Quits: adigitoleo (~adigitole@2001:8003:1d19:4500:b133:e1f9:4a39:adc9) (Remote host closed the connection)
[20:27:25] *** Joins: adigitoleo (~adigitole@2001:8003:1d19:4500:2ba0:8992:a60b:d9d8)
[20:32:25] *** Quits: adigitoleo (~adigitole@2001:8003:1d19:4500:2ba0:8992:a60b:d9d8) (Remote host closed the connection)
[20:33:08] *** Joins: adigitoleo (~adigitole@2001:8003:1d19:4500:3356:ec29:a6b4:1c74)
[21:19:41] <FromDiscord> <demotomohiro> In reply to @whisperdev "How does one build": Nim forum post related to android app:
[21:19:42] <FromDiscord> <demotomohiro> https://forum.nim-lang.org/t/8491
[21:27:53] <FromDiscord> <ajusa> @whisperdev see https://github.com/iffy/wiish for iOS and Android, haven't tested it myself though
[21:28:51] <FromDiscord> <ajusa> but if you want a tested, mature way to write an iOS app I can't really recommend Nim unless you're willing to spend lots of time
[21:55:39] <FromDiscord> <Tex> What is the best way to profile for bottlenecks in a nim program? Nimprof seems pretty basic compared to something like valgrind.
[21:58:40] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[22:01:11] <FromDiscord> <treeform> In reply to @Tex "What is the best": I made this but its also pretty basic: https://github.com/treeform/hottie
[22:01:16] <FromDiscord> <treeform> Enough for my use case though.
[22:01:51] <FromDiscord> <treeform> I also use Intel vTune and AMD μProf.
[22:02:53] <FromDiscord> <treeform> Also I use approach where I factor out the slow bits and use dedicated bench_ files with https://github.com/treeform/benchy
[22:03:15] <FromDiscord> <treeform> Kind of like performance unit tests.
[22:05:49] <FromDiscord> <Tex> Anything open source that's jus tlike Intel vTune or AMD uProf? I've heard of dr memory.
[22:05:57] <FromDiscord> <Tex> (edit) "jus tlike" => "just like"
[22:06:13] <FromDiscord> <treeform> I tried open source is it was not good. Don't recommend.
[22:06:42] <FromDiscord> <treeform> Both Intel vTune or AMD uProf are free and only target the chipset.
[22:07:15] <FromDiscord> <Tex> I don't understand what you're saying with you tried open source is it was not good. Nimlang itself is free software under the MIT license. Are you referring to a specfic program?
[22:07:16] <FromDiscord> <treeform> But you need to signup and create account.
[22:07:42] <FromDiscord> <treeform> I am referring to open source perf tiles like Intel vTune or AMD uProf.
[22:07:59] <FromDiscord> <treeform> There just isn't a clear good one.
[22:08:24] <FromDiscord> <treeform> That's why I made my own, after using them.
[22:08:36] <FromDiscord> <treeform> (edit) "tiles" => "tools"
[22:09:22] <FromDiscord> <Tex> Thanks for the info treeform. I'll have to mix and match some utilties should I come across any issues.
[22:10:00] <FromDiscord> <treeform> Closet "Ok" open source one was http://lukestackwalker.sourceforge.net/
[22:10:07] <FromDiscord> <treeform> great name pun!
[22:10:18] <FromDiscord> <treeform> But it kind of sux.
[22:10:43] <FromDiscord> <Tex> I would definitely vouch for valgrind, but it's linux only and I'm currently on my windows machine.
[22:10:55] <FromDiscord> <treeform> Yeah I mainly do Windows/Mac.
[22:11:13] <FromDiscord> <Tex> If only valgrind didn't make extensive use of linux syscalls.
[22:11:25] <FromDiscord> <treeform> yeah no valgrind for me
[22:11:48] <FromDiscord> <treeform> I think I have my needs covered with `hottie` + `benchy`
[22:11:52] <FromDiscord> <demotomohiro> gprof doesn't work with Nim?
[22:12:30] <FromDiscord> <treeform> I think when I tried gprof I could not get it to work.
[22:12:35] <FromDiscord> <treeform> On windows.
[22:16:45] <FromDiscord> <demotomohiro> When I run `nim c --passC:-pg -d:danger test.nim`, I got many `undefined reference to `fentry'`.
[22:19:33] <FromDiscord> <gnu+linux user> seems this that words for if and when doesnt for case:
[22:19:52] <FromDiscord> <gnu+linux user> sent a code paste, see https://play.nim-lang.org/#ix=3Mi7
[22:20:34] <FromDiscord> <gnu+linux user> sent a code paste, see https://play.nim-lang.org/#ix=3Mi8
[22:23:59] <FromDiscord> <demotomohiro> `nim c --passC:-pg --passL:-pg -d:danger test.nim` compiled without error but `gprof test gmon.out` shows empty result.
[22:32:07] <FromDiscord> <demotomohiro> sent a code paste, see https://play.nim-lang.org/#ix=3Mif
[22:35:36] <FromDiscord> <mratsim> In reply to @Tex "What is the best": Intel Vtune or Apple Instrument or perf: https://github.com/status-im/nim-taskpools/issues/5↵and https://forum.nim-lang.org/t/8802
[23:25:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:30:01] *** Joins: vicfred (~vicfred@user/vicfred)
