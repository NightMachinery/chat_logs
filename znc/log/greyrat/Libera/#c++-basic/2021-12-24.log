[00:20:08] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Remote host closed the connection)
[00:24:22] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[00:59:08] *** Quits: namo (~nomo@95.87.208.95) (Ping timeout: 252 seconds)
[01:33:23] *** Quits: Cyp (~cyp@213.237.85.9) (Read error: Connection reset by peer)
[01:36:01] *** Quits: AmR (~AmREiSa@156.199.236.68) (Quit: Konversation terminated!)
[01:43:58] *** Joins: Cyp (~cyp@213.237.85.9)
[01:47:14] *** Joins: markong (~kvirc@213.146.188.203)
[02:27:59] *** Quits: kvik_ (~kvik@93-136-231-38.adsl.net.t-com.hr) (Ping timeout: 256 seconds)
[02:29:15] *** Joins: kvik (~kvik@93-136-231-38.adsl.net.t-com.hr)
[03:10:57] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[03:15:34] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[03:26:47] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[03:52:24] *** Joins: Inline__ (~Inline@aftr-37-201-240-204.unity-media.net)
[03:53:01] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Remote host closed the connection)
[03:55:30] *** Quits: magla (~gelignite@55d4c16b.access.ecotel.net) (Quit: Stay safe!)
[03:58:39] *** Quits: kvik (~kvik@93-136-231-38.adsl.net.t-com.hr) (Ping timeout: 256 seconds)
[04:14:56] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[04:18:51] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[04:29:21] *** Quits: Karyon (~Karyon@user/karyon) (Quit: Good bye)
[04:39:42] *** Joins: Karyon (~Karyon@user/karyon)
[04:40:47] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 250 seconds)
[04:48:33] *** Quits: Karyon (~Karyon@user/karyon) (Quit: Good bye)
[04:49:41] *** Joins: seninha (~seninha@user/seninha)
[04:49:59] *** Joins: Karyon (~Karyon@user/karyon)
[04:53:37] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[05:00:02] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 240 seconds)
[05:13:04] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:19:49] *** Quits: Alipha (~AliphaX@user/alipha) (Ping timeout: 240 seconds)
[05:25:20] *** Quits: Karyon (~Karyon@user/karyon) (Quit: Good bye)
[05:29:34] *** Joins: Karyon (~Karyon@user/karyon)
[05:34:33] *** Joins: Alipha (~AliphaX@user/alipha)
[05:39:30] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[05:40:49] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:41:26] *** Joins: PJBoy (~PJBoy@user/pjboy)
[06:39:12] *** Joins: MetaNova (zero-one@znc/supporter/metanova)
[06:55:22] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[08:41:52] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[10:04:24] *** Joins: AmR (~AmREiSa@156.199.236.68)
[10:41:03] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:47:32] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[11:07:26] *** Joins: teut (~teut@2401:4900:1c69:421b:dc41:7f0a:a0c0:3883)
[11:08:24] <teut> https://en.cppreference.com/w/cpp/container/priority_queue  how to delete an element from a priority queue?
[11:11:37] <teut> like delete the number 4 from a queue
[11:22:17] *** Joins: kvik (~kvik@93-142-246-187.adsl.net.t-com.hr)
[11:41:29] *** Quits: teut (~teut@2401:4900:1c69:421b:dc41:7f0a:a0c0:3883) (Ping timeout: 256 seconds)
[12:17:55] *** Quits: montpol (montpol@fine.mouses.xyz) (Quit: The Lounge - hosted by mouses.xyz)
[12:18:14] *** Joins: montpol (montpol@fine.mouses.xyz)
[13:37:20] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:48:14] *** Joins: meator (~meator@user/meator)
[14:05:33] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[14:07:29] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:31:29] *** Quits: kvik (~kvik@93-142-246-187.adsl.net.t-com.hr) (Remote host closed the connection)
[14:31:47] *** Joins: kvik (~kvik@93-142-246-187.adsl.net.t-com.hr)
[14:38:15] *** Joins: meator (~meator@user/meator)
[14:38:28] *** Joins: KoVadim (~Vadim@130-0-36-158.broadband.tenet.odessa.ua)
[15:02:14] *** Joins: teut (~teut@2401:4900:1c69:421b:dc41:7f0a:a0c0:3883)
[15:14:28] *** Joins: seninha (~seninha@user/seninha)
[15:38:08] *** Joins: markong (~kvirc@213.146.188.203)
[16:34:57] *** Inline__ is now known as Inline
[16:35:01] *** Quits: teut (~teut@2401:4900:1c69:421b:dc41:7f0a:a0c0:3883) (Ping timeout: 256 seconds)
[16:42:06] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[16:54:23] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[17:12:08] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[17:20:01] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 268 seconds)
[17:37:57] *** Joins: teut (~teut@2401:4900:1c69:421b:dc41:7f0a:a0c0:3883)
[17:41:21] *** Joins: seninha (~seninha@user/seninha)
[17:53:09] *** Joins: autoptr (~autoptr@user/autoptr)
[17:53:18] *** Quits: autoptr (~autoptr@user/autoptr) (Client Quit)
[19:42:18] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[19:44:37] <Alipha> teut: you can only remove the "front" element from a priority_queue. I would suggest using a std::multiset instead (or std::set, if there's no duplicate elements). Then insert is push, begin is top, and s.erase(s.begin()) is pop. Then you can also use find+erase to remove 4
[19:51:29] <teut> well, a heap does have a delete operation
[19:51:35] <teut> why doesnt it has one?
[19:54:20] <teut> I can otherwise use a hashmap to store the counts'
[20:03:05] <Alipha> teut: there's also no "heap erase" algorithm :-/ There's push_heap, pop_heap, make_heap, etx
[20:03:09] <Alipha> *etc
[20:03:25] <teut> delete an element from heap is there
[20:03:39] <teut> thats what heap sort uses
[20:04:17] <teut> https://www.youtube.com/watch?v=HqPJF2L5h9U
[20:05:20] <teut> oh I can use make_heap
[20:05:44] <teut> vector's erase and then make heap
[20:11:52] <Alipha> It would probably be faster to write your own function to "fix the heap" after you erase from it. I'm not sure how efficient make_heap is if the data is "almost a heap". But if the performance of this isn't critically important, then I wouldn't bother
[20:12:22] <Alipha> https://stackoverflow.com/questions/8705099/how-to-delete-in-a-heap-data-structure
[20:13:32] <Alipha> And instead of vector's erase, I would swap the element with the last element and then pop_back--that's faster than erase shifting all the elements by 1
[20:13:58] <Alipha> (plus I think it'll cause make_heap to be faster?)
[20:17:20] *** Joins: namo (~nomo@95.87.208.95)
[20:19:46] <teut> make_heap is O(n)
[20:19:51] <teut> its heapify
[20:20:44] <teut> yes thats what heap sort does , it doesnt deletes but put the element at last and reduces length of heap
[20:21:51] <teut> the standard should do it if such thing exists
[20:31:26] *** Joins: RoKenn (~RoKenn@2001:a61:3432:ab01:b640:2806:2779:8038)
[20:31:26] *** Quits: RoKenn (~RoKenn@2001:a61:3432:ab01:b640:2806:2779:8038) (Changing host)
[20:31:26] *** Joins: RoKenn (~RoKenn@user/rokenn)
[20:33:08] <Alipha> Yeah, that stackoverflow thread seems to indicate that after you remove the element, you can "heapify" in O(log n). But I'm not sure if it's worth the trouble to do that optimization, since finding the element is already O(n)
[20:33:51] <teut> ya thats true
[20:34:03] <teut> finding the element will be O(n)
[20:35:40] <teut> it would be better to maintain a hashmap which has an element as key and its count as value. Then before using queue's element we can check if it belongs to our deleted map
[20:35:55] <teut> deleted numbers*
[20:36:24] *** Quits: hsv-2 (~weechat@gateway/tor-sasl/hsv-2) (Ping timeout: 276 seconds)
[20:36:24] <teut> thats huge amount of work though, I was solving the leetcode  skyline problem
[20:36:40] <teut> but such thing is used in djistra algo too
[20:36:45] <teut> djikstra*
[20:40:15] *** Joins: hsv-2 (~weechat@gateway/tor-sasl/hsv-2)
[21:05:54] *** Joins: The_Jag (~The_Jag@host-80-117-63-69.retail.telecomitalia.it)
[21:11:01] *** Quits: namo (~nomo@95.87.208.95) (Ping timeout: 240 seconds)
[21:12:37] *** Joins: rito_ (~rito_gh@45.112.243.69)
[21:31:27] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[21:41:25] *** Quits: The_Jag (~The_Jag@host-80-117-63-69.retail.telecomitalia.it) (Quit: The_Jag)
[22:12:17] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 240 seconds)
[22:13:34] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[22:23:43] *** Quits: teut (~teut@2401:4900:1c69:421b:dc41:7f0a:a0c0:3883) (Quit: Client closed)
[22:34:04] *** Joins: ferdna (~ferdna@user/ferdna)
[22:49:46] *** Quits: rito_ (~rito_gh@45.112.243.69) (Quit: Leaving)
[23:52:01] *** Joins: Deneb (~Deneb@30.125.7.51.dyn.plus.net)
[23:56:26] *** Quits: Deneb (~Deneb@30.125.7.51.dyn.plus.net) (Remote host closed the connection)
