[00:15:04] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:e915:8161:61ca:fdb)
[00:24:52] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[00:29:04] <MarcinP[m]> Hi Community,... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/5b16a7cdb79c0e0a2715bdaf8d168efd2c2b85b8)
[01:01:01] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:e915:8161:61ca:fdb) (Quit: uros)
[01:01:41] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:14:32] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:e915:8161:61ca:fdb)
[01:31:39] *** Joins: jacobk (~quassel@129.110.242.224)
[01:52:57] *** Quits: jacobk (~quassel@129.110.242.224) (Ping timeout: 240 seconds)
[01:53:58] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:d471:6d9f:6f1e:b65b)
[01:56:04] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:e915:8161:61ca:fdb) (Quit: uros)
[01:57:56] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[02:11:02] *** Quits: pcero_ (~pcero@187.135.227.167) (Ping timeout: 252 seconds)
[02:49:38] *** Joins: jacobk (~quassel@utdpat242053.utdallas.edu)
[03:24:29] <Kevin-phasewrap[> Hi, hopefully someone can help me understand this behavior. I'm trying to use GNURadio as the first step in my signal processing chain before feeding samples to other software via ZMQ. I've got a GPSDO locked transmitter and a GPSDO receiver, and I'm trying to see the phase shift over time. When using scipy.signal.butter to do an initial bandpass filter on the IQ, the signal phase is not perfect (as expected). However, when I use
[03:24:29] <Kevin-phasewrap[> GNURadio to do it, the signal phase is always "corrected". See here:
[03:24:32] * Kevin-phasewrap[ uploaded an image: (57KiB) < https://libera.ems.host/_matrix/media/r0/download/phasewrap.net/npLrVlAIwejFYZCJKlbIzbsD/image.png >
[03:36:11] *** Quits: jemius (~imperator@200116b82da1020035eb39ee4b0b1689.dip.versatel-1u1.de) (Quit: Leaving)
[03:59:56] *** Joins: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt)
[04:06:04] <Kevin-phasewrap[> I should also mention ^ that the band pass filter has a decimation of 125 and the flowgraph is literally just "file source -> band pass filter -> file sink", and then I processed the rest with numpy to generate those plots. Same source file used for both methods.
[04:15:22] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[04:15:35] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[04:26:12] *** Quits: jacobk (~quassel@utdpat242053.utdallas.edu) (Ping timeout: 240 seconds)
[04:31:51] *** Joins: jacobk (~quassel@utdpat242024.utdallas.edu)
[04:37:33] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[04:43:24] *** Quits: jacobk (~quassel@utdpat242024.utdallas.edu) (Ping timeout: 240 seconds)
[04:45:27] <willcode4[m]> This could be phase wrapping. In numpy, see https://numpy.org/doc/stable/reference/generated/numpy.unwrap.html.
[04:46:02] <willcode4[m]> Interesting that that's you user name?
[04:46:26] *** Quits: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt) (Ping timeout: 272 seconds)
[04:46:27] <Kevin-phasewrap[> Haha yeah, I’m pretty familiar with phase wrapping. I’m pretty sure that’s not it here.
[04:47:02] <Kevin-phasewrap[> My guess was something to do with how gnuradio uses polyphase filterbanks but I just started researching those today.
[04:47:29] <Kevin-phasewrap[> Or maybe Because I’m using an IIR filter in numpy and gnuradio uses FIR? That doesn’t make sense to me though
[04:47:55] <willcode4[m]> There's more overshoot in the scipy version of your graph. Not that the ugly stuff happens right at +/- pi.
[04:48:47] <Kevin-phasewrap[> Yeah, that’s from another part of the recording actually. Might be partially due to the different filter also
[04:50:12] <willcode4[m]> You'd expect different filters to give different results. What looks wrong to you?
[04:50:50] <patchvonbraun[m]> The default band pass filter is just a straight dot product FIR.
[04:51:37] <patchvonbraun[m]> There are ALSO polyphase filterbanks. But you’d have to be using them explicitly.
[04:52:24] <Kevin-phasewrap[> Sure, let me clarify. The GNURadio output maintains the BPSK approximately perfectly around 0 no matter what. For example, even if I do a multiply const with a value of like, 1j*0.3, it will keep the phase rock steady in the middle
[04:53:19] <Kevin-phasewrap[> The phase is actually changing by like 3pi over the course of the recording, but gnuradio is correcting for it somehow, somewhere, silently. I processed the same recording (offline) with scipy and can see the expected effect, but I can't get it to work in a streaming system with gnuradio.
[04:53:35] <Kevin-phasewrap[> patchvonbraun[m]: Good to know, I thought the pfb was used for all filters. Thanks
[04:55:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[04:57:12] <patchvonbraun[m]> GR doesn't have any kind of built-in "analyser".  It, like any other programming environment, MUST be told what to do.  It doesn't *know* what you're trying to do and "enable cleverness".       If your flow really is just input-->filter-->output, it has NO idea what the "desired" phase is of your signal.
[04:58:43] <Kevin-phasewrap[> Right, of course. That's exactly what I'm trying to convey - my perception is that it's automatically correcting the phase drift. If I process the same input data with scipy and just do a straight up lfilter() on it, I see the phase drift that I expect.
[05:00:07] <patchvonbraun[m]> If it's happening, it's an emergent mathematical side-effect, rather than any "conscious" effort on the part of Gnu Radio.
[05:00:34] <Kevin-phasewrap[> That's good to know, I was hoping it was not a "feature"
[05:00:45] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[05:03:32] *** Joins: jacobk (~quassel@64.189.202.128)
[05:08:06] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[05:34:17] *** Joins: epony (epony@user/epony)
[05:59:57] *** Joins: samir89[m] (~samir89gn@2001:470:69fc:105::1:e3e5)
[06:07:37] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:08:39] <samir89[m]> (Hello! i'm 'having a problem criate GNU RADIO BLOCKS on PYCHARM Python editor. When I try to refer gnu radio by writing, for example " from gnuradio import gr" the following massage appers: Unresolved reference 'gnuradio'  (documentation not found).  How can I solve this Issue???      Best regards !
[06:12:19] *** Joins: pcero_ (~pcero@187.135.227.167)
[06:22:36] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[06:30:28] <samir89[m]> I tried to find some answer at GNU radio python tutorial, but I didn't find anything useful
[06:31:54] <samir89[m]> I'am actually new at gnu radio companion, and i using this make my college project
[06:32:55] <muaddib[m]> You probably need to set your PYTHONPATH. 
[06:32:55] <muaddib[m]> Does the import work from a regular python interpreter?
[06:34:46] <samir89[m]> That is actually the first time i'm trying this, so i don't know how to set my Pythonpath
[06:36:47] <samir89[m]> I'm using UBUNTU Linux as OS
[06:43:50] *** Quits: SanShi (rene@vm-140-107.netclusive.cloud) (Ping timeout: 252 seconds)
[06:52:32] <patchvonbraun[m]> ANyone know if you can pack 4 Radio-->PWR_FFT-->IIR-->KEEP_ONE_IN_N  in RFNOC on an N310?
[06:55:23] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:12:13] <muaddib[m]> No, but I have a ball peen hammer you can borrow if that’s helpful.
[07:13:01] <patchvonbraun[m]> muaddib: I have a 10lb sledge.  More efficient :)
[07:14:04] <muaddib[m]> That’s true
[07:15:16] <Kevin-phasewrap[> 10lb sledge sounds like the right tool to solve my issue, lol
[07:15:33] <samir89[m]> I istill don't know how to solve my issue on import gnuradio to my python interpreter. How can I set a PYTHONPATH? by the LINUX terminal?
[07:16:22] <patchvonbraun[m]> samir89: What version of Ubuntu are you using?  Did you even install Gnu Radio?  It doesn't just appear by default.  You have to install it.
[07:16:48] <patchvonbraun[m]> The general question "How do I set environment variables" isn't a pecular-to-Gnu Radio question.
[07:17:48] <patchvonbraun[m]> 5.7 seconds in Google:  https://www.simplilearn.com/tutorials/python-tutorial/python-path
[07:19:51] <samir89[m]> patchvonbraun[m]: Ubuntu 20.04.4 LTS
[07:20:15] <samir89[m]> and i have installed GNU radio
[07:21:04] <patchvonbraun[m]> so if you just "import gnuradio" in the python interactive interpreter, what happens?   If Gnu Radio was installed from packages (via apt-get), you shouldn't need to use PYTHONPATH at all.
[07:26:51] <samir89[m]> <patchvonbraun[m]> "so if you just "import gnuradio"..." <- The massage: " Unresolved reference 'gnuradio' appears
[07:27:38] <samir89[m]> and then says that the documentation was not found
[07:27:59] <patchvonbraun[m]> JUST THE REGULAR PYTHON INTERPRETER--NOT PYCHARM
[07:28:35] <patchvonbraun[m]> just type "python" at the command prompt.  Then try the import
[07:28:58] <samir89[m]> Ok i will try it
[07:39:22] <samir89[m]> it works from the terminal
[07:39:57] <Kevin-phasewrap[> have you tried restarting pycharm?
[07:40:21] <patchvonbraun[m]> samir89: I know almost nothing about Pycharm, per se.  So, I'm outta ideas.
[07:48:44] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[07:58:09] *** Joins: SanShi (rene@vm-140-107.netclusive.cloud)
[08:12:08] <muaddib[m]> <samir89[m]> "it works from the terminal" <- The default pycharm settings use virtual environments. They  won’t have GNURadio by default. You can change the directories where pycharm looks for python packages in the pycharm settings. 
[08:12:08] <muaddib[m]> I can’t tell you specifically how to do it as I’m not in front of my machine, but I promise that Google or the jetbrains forums can tell you. 
[08:17:41] *** Joins: opamp[m] (~opampgnur@2001:470:69fc:105::1:e3f9)
[08:22:09] <opamp[m]> is there a sigmf chat like this? cannot for the life of me get inspectrum to compile w/ sigmf support
[08:23:36] <opamp[m]> nm, found it, sorry new to this /chat/ thing
[08:35:39] *** Quits: harish (~harish@158.140.144.42) (Remote host closed the connection)
[08:36:20] *** Quits: pcero_ (~pcero@187.135.227.167) (Ping timeout: 272 seconds)
[08:36:55] *** Joins: harish (~harish@158.140.144.42)
[09:29:11] *** Joins: isuru[m] (~isurujgnu@2001:470:69fc:105::e155)
[09:29:11] <isuru[m]> Hello everyone, I would like to know if there is any supporting material for this workshop listed here: https://events.gnuradio.org/event/8/contributions/129/ 
[10:50:46] <bkerler[m]> samir89: you can set specific environment settings in the run/debug project settings (Run, Debug as, Settings). I can make a setup guide if needed.
[10:58:55] *** Quits: DiffieHellman (~Username@user/curve25519chacha) (Ping timeout: 240 seconds)
[11:41:28] *** Quits: jacobk (~quassel@64.189.202.128) (Quit: No Ping reply in 180 seconds.)
[11:42:45] *** Joins: jacobk (~quassel@64.189.202.128)
[11:55:42] *** Quits: duude__ (~duude__@user/duude/x-4676560) (Ping timeout: 252 seconds)
[11:56:08] *** Joins: duude__ (~duude__@user/duude/x-4676560)
[11:59:37] *** Joins: duude__- (~duude__@user/duude/x-4676560)
[12:00:38] *** Quits: duude__ (~duude__@user/duude/x-4676560) (Ping timeout: 252 seconds)
[12:00:41] *** duude__- is now known as duude__
[12:04:05] *** Joins: duude__- (~duude__@user/duude/x-4676560)
[12:05:15] *** Quits: duude__ (~duude__@user/duude/x-4676560) (Ping timeout: 260 seconds)
[12:05:16] *** duude__- is now known as duude__
[12:43:44] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[12:46:08] *** Joins: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl)
[12:49:56] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 245 seconds)
[13:07:37] *** Quits: TD-Linux (~Thomas@user/td-linux) (Ping timeout: 256 seconds)
[13:08:12] *** Joins: TD-Linux (~Thomas@user/td-linux)
[13:13:59] *** Joins: massi (~massi@host-188-15-128-106.business.telecomitalia.it)
[13:15:08] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:76b6:c3dd:21a1:2f03)
[13:16:17] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:76b6:c3dd:21a1:2f03) (Client Quit)
[13:16:59] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:76b6:c3dd:21a1:2f03)
[13:24:39] *** Joins: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt)
[13:30:20] *** Quits: seckinoncu[m] (~seckinonc@2001:470:69fc:105::1:c78a) (Quit: You have been kicked for being idle)
[13:30:21] *** Quits: flewkey[m] (~flewkeyma@2001:470:69fc:105::1:54f7) (Quit: You have been kicked for being idle)
[13:59:56] *** Quits: massi (~massi@host-188-15-128-106.business.telecomitalia.it) (Remote host closed the connection)
[14:01:00] *** Joins: massi (~massi@host-188-15-128-106.business.telecomitalia.it)
[14:24:23] *** Joins: toulene9 (~toulene@user/toulene)
[14:25:49] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 240 seconds)
[14:25:49] *** toulene9 is now known as toulene
[14:43:48] *** Quits: electrokitty (~Mercury@185.241.225.133) (Ping timeout: 240 seconds)
[14:45:20] *** Joins: electrokitty (~Mercury@185.241.225.133)
[15:58:53] <MarcinP[m]> <isuru[m]> "Hello everyone, I would like..." <- Like this one?: https://github.com/TheWylieStCoyote/Introduction_to_GNURadio_with_Python_GRCon21
[16:18:18] <l4rrybr3nt[m]> I want to make a deviation list in python, measuring signal power of a defined signal every x khz and build y py function to interpolate over the list and estimate the deviation on that frequency using the list collected before. Is there a function that helps on that? I skipped math in school so what could I google and research into?
[16:24:31] *** Quits: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl) (Ping timeout: 245 seconds)
[16:29:12] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[16:42:44] *** Joins: data-ux[m] (~data-uxgn@2001:470:69fc:105::1:e43f)
[16:45:55] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 240 seconds)
[16:54:19] <Kevin-phasewrap[> <Kevin-phasewrap[> "image.png" <- bumping my issue....still trying to figure this out
[16:55:03] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:d471:6d9f:6f1e:b65b) (Read error: Connection reset by peer)
[17:16:32] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 260 seconds)
[17:18:26] *** Joins: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl)
[17:29:12] *** Joins: bababb (~baracurda@user/parserblabla)
[17:49:49] <MarcinP[m]> Guys, I have no access to the digital.packet_utils, which shows up as I cannot used e.g. default access codes which are stored there. I am using GNU Radio from PPA and its the newest one: v3.11.0.0. Is it possible that packet_utils module was not installed? 
[17:52:37] <MarcinP[m]> it shows: module 'gnuradio.digital' has no attribute 'packet_utils'
[17:52:47] <MarcinP[m]> * it shows: `module 'gnuradio.digital', * attribute 'packet_utils'`
[17:52:55] <drmpeg> It's a bug.
[17:53:11] <drmpeg> Lemme find the fix.
[17:53:30] <MarcinP[m]> was it reported at the github?
[17:53:38] <drmpeg> Hang on.
[17:55:29] <bkerler[m]> mhmm it should ... there is a binding at least with default_access_code and default_access_code_binary
[17:56:09] <drmpeg> I remember fixing this.
[17:56:09] <bkerler[m]> and it's imported as python package in the __init__.py `from . import packet_utils`
[17:56:29] <bkerler[m]> let me check
[17:56:45] <MarcinP[m]> bkerler[m]: init.py in digital module?
[17:56:55] <bkerler[m]> yes
[17:57:29] <bkerler[m]> and it's there
[17:57:31] <bkerler[m]> dir(gnuradio.digital) ==>'packet_utils'
[17:57:42] <drmpeg> https://github.com/gnuradio/gnuradio/commit/b42996b1569722d34dad2057406e4a6c3de99366
[17:58:15] <bkerler[m]> `import gnuradio.digital.packet_utils as packet_utils` works fine
[17:58:55] <bkerler[m]> yep drmpeg . Just tested with latest git from branch main.
[18:00:01] <drmpeg> Here's the PR. https://github.com/gnuradio/gnuradio/pull/5506
[18:00:56] <drmpeg> And it's been backported to 3.10 https://github.com/gnuradio/gnuradio/pull/5519
[18:05:20] <MarcinP[m]> Thanks guys, I found this file where line `import . import packet_utils` should be
[18:06:09] <MarcinP[m]> file init.py is being run every time I import the digital module?
[18:06:35] *** Joins: OnAironaut (~OnAir@user/onaironaut)
[18:13:14] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:76b6:c3dd:21a1:2f03) (Quit: uros)
[18:13:33] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:76b6:c3dd:21a1:2f03)
[18:17:37] *** Joins: DiffieHellman (~Username@user/curve25519chacha)
[18:33:32] <bkerler[m]> yes Marcin Puchlik 
[18:34:33] <bkerler[m]> if it cannot be found, then most likely you don't have the gnuradio package path not in your pythonpath environment setting or it points to an older version somewhere maybe.
[18:35:02] *** Quits: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl) (Ping timeout: 260 seconds)
[18:36:08] * ahmad_sho[m] uploaded an image: (29KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/4ab576a8ab86e62c6cfac61774696e15e71c1ee3/flow.png >
[18:36:10] * ahmad_sho[m] uploaded an image: (18KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/b270d4ad6af2fee1af40cd7e7ee596fd6d27c8d7/results.png >
[18:39:14] <ahmad_sho[m]> Hi, I've created a simple flowgraph and added a python block to do some tests. for now, all it does is multiply the input by a constant. I printed the sizes of the input and the output. I was expecting the input size to be constant at 8192 (buff size), yet what I had is as shown in the snapshot: 8192,4096,2048,...,16, then start with 8192 again. any idea why does this happen?
[18:44:08] <MarcinP[m]> ahmad_sho[m]: Marcus once explained that to me, this is the scheduler issue. You dont have to worry about the sizes of the buffers unless you really have to 
[18:46:56] <willcode4[m]> ahmad_sho: Since each block runs in its own thread, and consumes samples from an input buffer (1) when scheduled, (2) when samples are available and (3) as fast as possible, it is not predicitable how many samples will be available at a time. The pattern you are seeing is common.
[18:47:20] <ahmad_sho[m]> MarcinP[m]: At some point, I'm going to work with tags and multiple hardware. I wanted to make sure that this will not create an issue later
[18:47:50] <willcode4[m]> Your block can specify that a multiple of a certain number of items is available, if it matters.
[18:49:43] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[19:27:48] <ahmad_sho[m]> <willcode4[m]> "Your block can specify that a..." <- How?
[19:29:28] <MarcinP[m]> ahmad_sho[m]: https://www.gnuradio.org/doc/doxygen/classgr_1_1block.html
[19:29:50] <willcode4[m]> `set_output_multiple()` makes the scheduler wait until a multiple of the specified number of items can be produced. For a sync (1:1) block, this effectively does the same for the input.
[19:30:49] <MarcinP[m]> check out the set_min_noutput_items(), willcode4 does this function gives the same result? 
[19:30:56] <MarcinP[m]>  * check out the `set_min_noutput_items()`, willcode4 does this function gives the same result?
[19:31:16] <MarcinP[m]>  * check out the `set_min_noutput_items()`, willcode4 does this function give the same result?
[19:32:16] <ahmad_sho[m]> willcode4[m]: Ok. I'm trying to write a precoder. So I need to know the index of each symbol so it can be precoded according to the matrix of the subcarrier that it will be assigned to later.
[19:32:41] <willcode4[m]> Marcin Puchlik: yes
[19:34:18] <willcode4[m]> ahmad_sho: Consider using vectors for things that have fixed block sizes.
[19:36:26] <willcode4[m]> But you could do this with `set_output_multiple()`, as long as alignment of data is guaranteed somehow (or doesn't matter).
[19:59:43] *** Joins: undltd (~yurb@user/yurb)
[20:03:07] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 260 seconds)
[20:04:44] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[20:09:37] *** Joins: pcero_ (~pcero@187.135.227.167)
[20:37:55] *** Quits: DiffieHellman (~Username@user/curve25519chacha) (Ping timeout: 240 seconds)
[20:40:08] *** Joins: DiffieHellman (~Username@user/curve25519chacha)
[20:42:49] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 250 seconds)
[20:44:58] *** Joins: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl)
[20:51:11] *** Quits: jacobk (~quassel@64.189.202.128) (Ping timeout: 260 seconds)
[21:16:34] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:76b6:c3dd:21a1:2f03) (Quit: uros)
[21:30:40] *** Quits: bababb (~baracurda@user/parserblabla) (Remote host closed the connection)
[21:58:48] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:8483:311f:2ee1:73a2)
[22:07:14] *** Quits: massi (~massi@host-188-15-128-106.business.telecomitalia.it) (Remote host closed the connection)
[22:23:25] <Kevin-phasewrap[> <Kevin-phasewrap[> "Hi, hopefully someone can help..." <- I've solved this issue. For anyone who was curious (perhaps patchvonbraun or willcode4 ), the issue was that the band pass filter was using real taps instead of complex taps
[22:42:14] <patchvonbraun[m]> I’ll note that a complex low pass with real taps effects a symmetric band pass around 0Hz
[23:02:34] *** Joins: hololeap (~hololeap@user/hololeap)
[23:03:31] *** Joins: jemius (~imperator@200116b82dfbcc0058b00c06a6ec956c.dip.versatel-1u1.de)
[23:16:02] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:19:43] *** Joins: jacobk (~quassel@64.189.202.128)
[23:24:18] <MarcinP[m]> Guys, is it possible to transmit using USRP B210 and receive at the same time using two different flowgraphs? 
[23:24:42] <tnt> no
[23:25:05] <tnt> but you can have completely distinct tx and rx chains inside the same flowgraph.
[23:33:11] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:34:32] <patchvonbraun[m]> Basically a restriction of libusb and the kernel, and while you could have a "mux" layer to allow multi-process access to the USRP over USB, it woudl result in considerable performance loss...
[23:34:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:34:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:36:30] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:40:34] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:43:58] <MarcinP[m]> thanks ;)
[23:44:39] <tnt> patchvonbraun[m]: technically you could expose TX and RX on different interfaces and then multiple process could share it.
[23:45:15] <tnt> but then you'd probably also need to have all 9361 control algo done in the device itself to make sure the firmware coordinates access between tx/rx side and doesn't mess thins up.
[23:47:43] <patchvonbraun[m]> tnt: I think that may be manageable on the host side still.  But again, performance...
