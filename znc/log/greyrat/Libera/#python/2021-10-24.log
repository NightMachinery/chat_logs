[00:00:47] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:00:52] <mcon> Yhg1s: yes I see that (I have the diff in front of me), but I don't know is I can just copy "packages" (and also package_data, I think) as-s (with obvious changes) or if syntax/semantics is really different.
[00:02:31] <Yhg1s> mcon: there is no difference between setuptools and distutils. In fact, with 'pip', you _always_ use setuptools.
[00:03:05] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:03:47] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[00:04:07] *** Quits: spiderman (~spiderman@user/spiderman) (Ping timeout: 265 seconds)
[00:04:25] <mcon> Yhg1s: I assume you had a look at both setup.py. Is there a good reason why they listed all directories instead of plain: "packages=['pyqtlet']" ?
[00:04:37] <Yhg1s> mcon: yes: you have to list all the directories.
[00:05:03] <whatsupdoc> Is Python a functional programming language?
[00:05:13] <mcon> Yhg1s: No way to do that recursively?
[00:05:29] <Yhg1s> whatsupdoc: not really. You can write functional code, but it's almost always worse for performance, readability and maintainability.
[00:05:49] *** Joins: rfm (~rfm@user/rfm)
[00:05:51] *** Joins: spiderman (~spiderman@user/spiderman)
[00:05:52] <Yhg1s> mcon: there is, with setuptools.find_packages(). Have you considered reading a tutorial on setup.py files? They're short. packaging.python.org.
[00:05:57] <mcon> One other difference is they changed target leflet version
[00:05:59] *** Quits: mfe_ (~default@84-113-156-178.cable.dynamic.surfer.at) (Ping timeout: 258 seconds)
[00:06:10] *** Quits: kostkon (~kostkon@2a02:587:a104:3da6:4d6c:40e6:f58:8e46) (Ping timeout: 260 seconds)
[00:06:41] <mcon> I have one in front of me (https://setuptools.pypa.io/en/latest/userguide/quickstart.html) is that ok?
[00:06:55] <Yhg1s> it's probably fine, sure.
[00:07:27] *** Quits: ckdCreations (~ckdCreati@147.55.133.138) (Read error: Connection reset by peer)
[00:07:27] <mcon> Yhg1s: Ok. I think I have some reading to do...
[00:07:46] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[00:08:28] *** Joins: darksun (~darksun@user/darksun)
[00:09:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:11:37] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[00:11:38] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[00:12:56] <Gustavo6046> https://bellard.org/textsynth/ is fun, and it assures me that decorators won't mean missile strikes on my house. See here, https://x0.at/8lNh.png
[00:14:17] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[00:14:52] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[00:15:11] *** Quits: cation (cation@user/cation) (Quit: Leaving)
[00:16:52] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[00:17:47] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 264 seconds)
[00:17:49] *** Joins: Ilyu_ (~quassel@gateway/vpn/pia/ilyu)
[00:19:00] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[00:19:32] *** Joins: ali1234 (~al@user/ali1234)
[00:22:44] *** Joins: kostkon (~kostkon@athedsl-282915.home.otenet.gr)
[00:23:42] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 244 seconds)
[00:23:50] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[00:23:59] <haniaF> experimenting with contextvars. can someone explain why does this work: https://bpa.st/FUEA while this doesn't: https://bpa.st/UMEQ ?
[00:24:59] <haniaF> does it have to do with a single-time declaration of ContextVar()? (per. docs: this class is used to declare new Context Variable)
[00:25:38] <haniaF> what about imports then? it's not being re-declared for every file importing the ContextVar instances from context.py?
[00:25:39] *** Joins: willcl_ark (~quassel@user/willcl-ark/x-8282106)
[00:29:02] <Klinda> hello, are the lists in python useless? if you wanna compute some operations with it, is it better to use numpy? the problem with deafult list is that check everytime the wrap and then dispatch with every single value in it
[00:30:44] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[00:31:21] *** Quits: Jefren1 (~Jefren@70.35.67.111) (Ping timeout: 245 seconds)
[00:31:27] *** Joins: rk04 (~rk04@user/rajk)
[00:31:38] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[00:31:40] <amo> Klinda, what do you want to do specifically? no, lists are not useless, but they aren't the best tool for every problem
[00:31:53] <Klinda> I don't know I am just asking
[00:31:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[00:32:09] <Klinda> I only see some functions take a lot of time, just with nested for
[00:32:15] <Klinda> while with numpy is really fast
[00:32:24] <Klinda> 130 ms vs 20 millsec
[00:32:48] <amo> that is primarily the limitation of for-loops, not lists
[00:33:46] <amo> numpy vectorization allows for very efficient algorithms, but only if you can work with a fixed array
[00:34:00] *** Joins: fikran (~fikran@user/fikran)
[00:34:35] <amo> lists allow dynamic growth, which makes them way more flexible than numpy arrays
[00:34:52] <amo> also they are not limited to a single object type
[00:35:24] *** Joins: NorLike (~NorLike@user/norlike)
[00:36:10] *** Quits: Ilyu_ (~quassel@gateway/vpn/pia/ilyu) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:36:11] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[00:37:16] <amo> with numba you can in some cases optimize for-loops to even beat the same operations on numpy arrays
[00:37:23] <amo> speed-wise
[00:38:40] *** Joins: Jefren1 (~Jefren@70.35.67.111)
[00:39:25] <amo> so, if your problem suggests the use of lists and for-loops rather than numpy arrays, you could get lucky if you know how
[00:40:13] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[00:40:29] <amo> the third primary linear datastructure you should know are deques
[00:40:51] <amo> which optimize append and pop operations
[00:41:11] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:55d9:90d5:9c29:ab46) (Ping timeout: 256 seconds)
[00:42:24] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Ping timeout: 258 seconds)
[00:44:51] <mcon> Yhg1s: Sorry, I'm here again :( I did these mods: https://bpa.st/NN6A but "python3 setup.py build" dies with "error: package directory 'pyqtlet2/pyqtlet2' does not exist". That directory do not exist of course (or, to be more precise: .../pyqtlet2/ dir contains both setup.py and another pyqtlet2/) problem is where did I tell it to look for that directory?
[00:46:10] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[00:46:35] <Yhg1s> mcon: don't run 'python3 setup.py build'. Install with 'pip' (in a virtualenv) instead. Your setup.py contains a package_dir directive that tells setuptools to look for the packages you list in the 'pyqtlet2' subdirectory.
[00:46:48] <Yhg1s> mcon: it sounds like that was another mistake.
[00:47:53] *** Joins: monkey_ (~user@190.104.116.134)
[00:48:17] <mcon> Yhg1s: I am running with a venv python3, not with system one.
[00:48:39] *** Joins: Macuser (~Macuser@216.30.159.201)
[00:48:57] <mcon> I am unsure how to use pip to fetch from a directory (I always used it to fetc from PyPi).
[00:49:08] <Yhg1s> mcon: 'pip install path/to/directory'
[00:49:40] <Yhg1s> mcon: as for not running 'setup.py build': https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html
[00:49:46] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[00:50:03] <mcon> Yhg1s: Ok, thanks, but I believe the "oher error must be fixed first, right?
[00:50:24] <Yhg1s> not doing the thing you shouldn't be doing won't fix the other problems you're having, no.
[00:50:27] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[00:52:21] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[00:53:39] *** Quits: bjb (~bjb@sourcerer.ca) (Quit: leaving)
[00:53:40] <mcon> Yhg1s: "Successfully installed pyqtlet2-0.4.3" :D ... now I need to see what I'm still missing ;)
[00:54:09] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[00:54:24] <Klinda> amo so with numpy, you can only work with a single data-type.. I think you can use only numbers. Also as you said can't you add some values to the numpy list? what is numba? what are deques in python?
[00:55:14] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[00:55:31] *** Joins: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net)
[00:56:00] <amo> Klinda, you need to specify what datatype (float, int, bool etc.) you want to put in the numpy array, which can't be mixed in a single array
[00:56:34] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[00:56:57] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 276 seconds)
[00:56:59] <amo> numba is a just-in-time compiler for python, which can speed up some well defined operations ( https://numba.pydata.org/ )
[00:57:02] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[00:57:16] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[00:57:56] *** Joins: Nact (~l@host-85-27-120-251.dynamic.voo.be)
[00:58:17] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[00:58:49] <amo> deques ( https://docs.python.org/3/library/collections.html#collections.deque ) are linked lists you can use to efficiently implement stacks etc where you only need to append or pop elements from the ends of the list
[00:59:24] *** Quits: Jong (~Jong@2620:10d:c090:400::5:fbf2) (Read error: Connection reset by peer)
[00:59:45] *** Joins: Wulf (~Wulf@user/wulf)
[01:01:51] *** Joins: s33ker (~s33ker@cpe-31-15-146-122.cable.telemach.net)
[01:02:34] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:03:15] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:03:22] *** Quits: NorLike (~NorLike@user/norlike) (Quit: Leaving)
[01:03:46] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:04:16] <s33ker> i hope i am not to off topic: i am trying to use python scripts on server - on server that i use (hetzner) there is an option to use docker app i originally wanted to use Debian and than install docker on it. What is the difference between this and using docker app on their server anyone knows ?
[01:05:28] <Gustavo6046> Back
[01:05:56] <s33ker> also is it possible to make another docker image inside docker image ?
[01:08:51] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Ping timeout: 258 seconds)
[01:09:09] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[01:10:07] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[01:12:15] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 244 seconds)
[01:12:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:13:18] <Klinda> amo: I mean with lists, you do list.append(element), with deques is more efficent? why?
[01:13:20] *** Quits: Ard1t (~ard1t@user/ard1t) (Quit: Nettalk6 - www.ntalk.de)
[01:13:45] <amo> because it's more optimized for that purpose
[01:13:49] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:fac5:8990:bd8d:fd54)
[01:13:50] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:14:14] <Yhg1s> Not list.append(), no. Adding to the _front_, though, yes.
[01:14:49] <Klinda> list.append, and the append of the deque is the same?
[01:15:37] <Yhg1s> Pretty much, yes.
[01:16:12] <Klinda> only if you wanna add/remove element in the first index position (0) is useful?
[01:16:25] <Yhg1s> Not _only_, but yes.
[01:17:28] <Klinda> so numpy is good if you are dealing with same data-types
[01:17:38] <Yhg1s> That is a rough approximation, sure.
[01:18:52] <Klinda> but because it doesn't need to check every single value with the for loop you will do with normal lists?
[01:19:37] <Yhg1s> Klinda: I'm not sure what you mean. Numpy is useful because it allows for a lot of different kinds of operations on the data in the array, and it can more efficiently represent that data.
[01:20:01] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[01:21:53] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 258 seconds)
[01:22:04] *** Quits: Jefren1 (~Jefren@70.35.67.111) (Ping timeout: 244 seconds)
[01:23:30] *** Joins: dangrenier83 (~pi@user/dangrenier83)
[01:23:45] *** Quits: twobitsprite (~twobitspr@195.181.171.227) (Ping timeout: 260 seconds)
[01:24:53] *** Joins: Jefren1 (~Jefren@70.35.67.111)
[01:24:57] <Klinda> if you do the sum in numpy, vs the sum of lists, sum() vs np.sum(), np sum will work in efficent time
[01:25:29] *** Joins: twobitsprite (~twobitspr@66.115.175.48)
[01:26:18] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[01:26:20] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[01:26:47] <Klinda> if you do a for loop with lists and do some operation with the list, the time is longer than what does numpy, that's because I think, numpy only work with same data-types, so it doesn't need to check everytime the value in it
[01:27:25] <Yhg1s> Klinda: that's not the only reason it's more efficient.
[01:27:51] <Klinda> what are the other reasons?
[01:27:53] <aphysically> ooooof
[01:28:10] <s33ker> numpy is imutable i think
[01:28:15] <grym> s33ker: no
[01:28:17] <Yhg1s> Klinda: it uses a more efficient representation, and it uses more efficient algorithms.
[01:28:19] <aphysically> ffmpeg's ffconcat protocol can't accept shlex.quote escaped filenames
[01:28:21] <aphysically> ;[
[01:28:28] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:28:43] <aphysically> now I'm going to have to figure out whatever custom quoting they do
[01:29:03] <Yhg1s> aphysically: why would it need to do any quoting?
[01:29:17] *** Joins: kostkon_ (~kostkon@athedsl-254838.home.otenet.gr)
[01:29:18] <aphysically> because it's specified in the standard
[01:29:31] <aphysically> which isn't helpful enough to be specific :)
[01:29:45] <aphysically> here https://ffmpeg.org/ffmpeg-formats.html#concat-1
[01:29:55] <aphysically> "Path to a file to read; special characters and spaces must be escaped with backslash or single quotes."
[01:29:58] *** Quits: kostkon (~kostkon@athedsl-282915.home.otenet.gr) (Ping timeout: 260 seconds)
[01:30:05] <s33ker> grym hmm i just recently saw this somewhere in a tutorial and guess i remember it incorectly and he was talking about something else :P
[01:30:28] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[01:30:32] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[01:30:46] <s33ker> can you explain the me grym why the code is faster then ?
[01:30:59] <s33ker> when using numpy vs lists
[01:31:16] <grym> s33ker: Yhg1s said it already, but numpy is fast because it has a very long lineage of fast code that it has built on
[01:31:17] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:31:23] <aphysically> I had in the past had no problem with printf %q quoting so I assumed shlex.quote() would work too but it seems to not quite work with a file with a ' in it
[01:31:30] <s33ker> o wait
[01:31:32] <grym> people have been writing efficient code for numerics for a very long time
[01:31:33] <s33ker> i rememberis it
[01:31:35] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[01:31:42] <s33ker> becase it is build in c ?
[01:31:45] <s33ker> directly
[01:32:00] <grym> parts of numpy are; dig deep enough and you can find fortran
[01:32:11] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[01:32:11] <s33ker> i see thx
[01:32:27] <grym> but that's another way of saying "numpyuses a more efficient representation, and it uses more efficient algorithms."
[01:32:29] <Yhg1s> Being written in C (or FORTRAN) doesn't make it faster; CPython is also written in C.
[01:33:16] <s33ker> ok i c :D
[01:33:40] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[01:33:58] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 244 seconds)
[01:34:07] *** Gustavo6046_ is now known as Gustavo6046
[01:34:36] <s33ker> first google answer :P
[01:34:37] <s33ker> Even for the delete operation, the Numpy array is faster. As the array size increase, Numpy gets around 30 times faster than Python List. Because the Numpy array is densely packed in memory due to its homogeneous type, it also frees the memory faster.
[01:35:53] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[01:36:07] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[01:36:21] <amo> usually you don't want to delete the whole list or array though
[01:36:23] *** Joins: srhm (~srhm@user/srhm)
[01:36:32] <Klinda> I mean every language is not re-write in C in the end?
[01:36:42] <Yhg1s> Klinda: very much not, no.
[01:37:04] <Klinda> python  has is own compiler?
[01:37:26] <amo> pypy?
[01:37:42] <Yhg1s> Klinda: different Python implementations have their own compiler, yes.
[01:37:42] <Klinda> pypy is written in C I think
[01:37:45] <InPhase> amo: You said that just in time.
[01:37:47] <Yhg1s> it is not.
[01:37:51] <Yhg1s> PyPy is written in Python.
[01:38:03] <Klinda> I mean is a mapping of Python to C
[01:38:07] <Klinda> like Numba?
[01:38:12] <Yhg1s> Klinda: very, very much not the case.
[01:38:22] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[01:38:25] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:38:28] <Klinda> how does it work then?
[01:38:47] <Yhg1s> Klinda: well, you know how C compilers compile C into whatever it needs to be for the computer to run it?
[01:38:54] <Yhg1s> Klinda: PyPy does the same with Python.
[01:38:57] <Klinda> I don't know C :/
[01:39:16] *** Joins: Shou (~nyah@wikipedia/Davepeta)
[01:39:32] <Klinda> so it has C philosopy
[01:39:37] <InPhase> Klinda: pypy turns Python into bytecode, then bytecode into machine code in tight loops so that the important stuff runs right on the processor as native instructions.
[01:39:39] <Yhg1s> Klinda: no, it's a completely separate thing.
[01:39:44] <Yhg1s> Klinda: please stop comparing things to C.
[01:39:49] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[01:40:26] <InPhase> Klinda: The net result is that it gets close to C level performance, only about 2-6 times slower, but C is not involved in the process of doing so.
[01:40:47] <Klinda> so also numpy is not written in the end in C?
[01:41:01] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[01:41:06] <s33ker> has anyone any experience using docker app on a server vs using for example linux...i am confused on how it works can you have smaller containers inside docker app...sorry for getting off topic again idk where to ask but here
[01:41:11] <Yhg1s> Klinda: part of numpy is written in C, yes. I don't know why you keep saying "in the end".
[01:41:17] <InPhase> Klinda: The critical parts of numpy are written in C, or partly Fortran.  Parts of numpy, particularly the front-end pieces, are python.
[01:41:40] *** Quits: src (~src@user/src) (Quit: Leaving)
[01:42:16] <aphysically> Yhg1s: this documentation is very useless :D
[01:42:20] * aphysically goes to find ffmpeg code
[01:43:45] <Gustavo6046> Hi!
[01:43:49] <InPhase> Klinda: The net result is that you essentially get C level performance for the heavy computational parts of numpy usage, but some Python overhead going into and out of numpy routines from Python, and additional overhead constructing numpy arrays.  But it can easily give you a 50x-100x speedup over normal Python for heavy stuff.
[01:44:22] <Klinda> I mean I know that C is very fast at computing operations cause you are working at semi-machine level, maybe python is slower cause are there something to it that doens't make it faster?
[01:44:42] <InPhase> Klinda: If you misuse numpy in a non-performant manner, like creating a lot of small numpy arrays for single use and throwing them out, it will actually be slower than list usage in Python.
[01:45:00] <Yhg1s> Klinda: CPython is slower because of many different reasons.
[01:45:16] *** Quits: Akuli (~Akuli@87-94-109-157.bb.dnainternet.fi) (Quit: Leaving)
[01:46:18] *** Joins: curiosity (uid511277@user/cypris)
[01:46:37] <InPhase> Klinda: Python's design comes with a lot of overhead.  For example every integer is a reference counted object, rather than stored as a value.  If you set two variables to 1, Python is busy keeping track of how many references there are to the object which contains within it the value of 1.
[01:46:41] *** Joins: Jong (~Jong@2620:10d:c091:480::1:a732)
[01:46:51] <aphysically> well this seems to work
[01:46:53] <aphysically> "".join("\\" + c for c in str(fpath.resolve()))
[01:47:02] <aphysically> :D this solution is so silly
[01:47:02] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:47:10] <InPhase> aphysically: os.path.join?
[01:47:37] *** Joins: norwood- (~mostlyhum@104-3-188-144.lightspeed.sntcca.sbcglobal.net)
[01:47:38] <Jong> Could anyone take a look at this? I'm trying to make a simple class that writes to file if a file path is specified, otherwise it writes to an io.StringIO object.  But the code doesn't look elegant.
[01:47:44] <Jong> https://bpa.st/VWZQ
[01:47:46] <aphysically> InPhase: that does escaping?
[01:47:55] <Yhg1s> aphysically: it does not.
[01:47:58] <amo> aphysically, (clippyvoice) it seems you are trying to manipulate a path, maybe you might want to look at pathlib
[01:48:14] <aphysically> this is already pathlib, fpath is a Path object
[01:48:29] <Yhg1s> Jong: you forgot to assign to self.buffer on line 17.
[01:48:50] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:d34f:4c5c:62a0:145a) (Ping timeout: 260 seconds)
[01:48:52] <aphysically> this is writing an ffconcat file, a type of media file recognized by ffmpeg - it accepts filepaths but it requires special quoting that's not equivalent to shell quoting
[01:48:56] <Yhg1s> Jong: once you do that you can just write to self.buffer regardless of what it is.
[01:49:27] <amo> aphysically, ah.
[01:49:28] <Jong> Yhg1s  doing that would cause the file handle to be open for the duration of the object wouldn't it?
[01:49:32] <InPhase> aphysically: I see now you are escaping every character...  That's horrendous.  :)  I thought you were joining elements.
[01:49:42] <Yhg1s> Jong: correct.
[01:50:18] <aphysically> InPhase: yes I am :D the standard document for ffconcat does not specify what constitutes a "special character", so I'm taking the brute force approach
[01:50:30] <Jong> Yhg1s  couldn't that be an inconvenience if someone wants to look at the file while the program runs for a while?
[01:50:37] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[01:50:39] <InPhase> aphysically: I hope you don't plan on running it on Windows.
[01:50:52] <Yhg1s> Jong: why would it be inconvenient? You can flush after writing if you're worried about buffering.
[01:50:53] *** Quits: s33ker (~s33ker@cpe-31-15-146-122.cable.telemach.net) (Ping timeout: 256 seconds)
[01:50:55] <aphysically> mmm why do you think it would matter?
[01:51:21] <aphysically> it's processed internally by ffmpeg after all
[01:51:31] *** Joins: srhm (~srhm@user/srhm)
[01:51:41] <Jong> is a best practice regarding file handles and time scope?  For example if you see code with many   with open(file_path, 'a') as f: statements, is that considered bad practice?
[01:51:41] <InPhase> aphysically: Well, \ is the directory divider.
[01:51:53] <amo> yup..
[01:51:53] <Jong> is there a best practice
[01:51:59] <aphysically> \\ should be okay though I think
[01:52:07] <Yhg1s> aphysically: "\\" is \.
[01:52:22] <aphysically> but this isn't being processed by python
[01:52:28] <InPhase> aphysically: print("\\")
[01:52:33] <Yhg1s> aphysically: "\\" is.
[01:52:42] <InPhase> aphysically: print(len("\\"))
[01:52:58] <amo> aphysically, don't be surprised if it fails horribly, at least you'll know why ;)
[01:53:31] <InPhase> aphysically: I don't have a solution in mind.  But that's the problem.  :)
[01:55:13] *** Quits: kindablue (kindablue@irc.tpurist.com) (Quit: System Rebooting..)
[01:58:44] <Jong> Which do you prefer? if sad case before the if happy case? Or the if happy case before the if sad case?
[01:58:54] *** Quits: ubert (~Thunderbi@77.119.175.138.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[01:59:10] <Jong> s/case/path
[01:59:17] <amo> short before long
[01:59:22] <Jong> ah nice
[01:59:48] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[02:00:30] * aphysically still doesn't understand
[02:02:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:02:54] *** Quits: jay-m1262 (~jay-m@129.0.204.216) (Ping timeout: 244 seconds)
[02:03:30] <Jong> Yhg1s  what variable name would you have used? self.buffer like I did or something else?
[02:03:34] <woky_> Hi. I'm trying to learn how to properly document my Python code. I used Javadoc in Java, and I noticed some convention in other people's code where they write things like " :param foo this sets foo" in function documentation string. It's used a lot, but I struggle to find any specification of this format, let alone PEP. What is it called, what is the authority and what other formats there are?
[02:03:42] <Jong> When I think of buffer, I think of bytes, not a StringIO object
[02:04:02] *** Quits: Jefren1 (~Jefren@70.35.67.111) (Ping timeout: 260 seconds)
[02:04:46] <Yhg1s> Jong: then pick a name that means 'strings' to you. I would just use 'buffer', but that may be because 'buffer' doesn't mean 'bytes' to me.
[02:04:53] <amo> woky_, i can recommend https://marketplace.visualstudio.com/items?itemName=njpwerner.autodocstring for vscode for this
[02:05:09] <Jong> Yhg1s  thanks :-)
[02:05:18] <amo> the docstring formats are google, docblockr, numpy, sphinx
[02:05:25] *** Joins: Jefren1 (~Jefren@70.35.67.111)
[02:05:49] <nedbat> woky_: that syntax  ":param foo:" is the old way to do things.  it's awkward.  Sphinx can now use a more natural style
[02:05:51] <woky_> amo, thanks, I don't use VS code, I'm interested in specification
[02:06:09] <nedbat> woky_: https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html
[02:06:52] <woky_> thanks nedbat, amo
[02:07:19] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[02:07:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:11:17] <aphysically> InPhase: Yhg1s I just tested it on Windows and it works fine; what did you think was going to happen?
[02:11:52] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:fac5:8990:bd8d:fd54) (Quit: Konversation terminated!)
[02:11:57] <Yhg1s> aphysically: I didn't think anything was going to happen.
[02:12:11] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 244 seconds)
[02:12:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:13:13] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[02:13:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:15:39] <aphysically> I do have some concerns about this quoting code, but not with \; it can happen that what ffconcat considers a character may not coincide with what python looping considers a character re: various unicode stuff
[02:15:49] <aphysically> not really sure at all actually
[02:19:23] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-bd47-4550-fa06-7a02.res6.spectrum.com) (Quit: Leaving.)
[02:20:12] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[02:20:35] *** Quits: oprypin (~irc@pryp.in) (Quit: Bye)
[02:20:54] *** Joins: oprypin (~irc@pryp.in)
[02:22:14] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[02:23:37] *** Joins: rfm_ (~rfm@user/rfm)
[02:23:49] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[02:24:10] *** Joins: kn10003 (~kn100@wireguard/tunneler/kn100)
[02:24:32] *** kn10003 is now known as kn100
[02:24:46] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[02:24:59] *** Quits: rfm (~rfm@user/rfm) (Ping timeout: 264 seconds)
[02:25:44] *** Joins: bloody (~bloody@user/bloody)
[02:26:34] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Quit: Leaving)
[02:26:52] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[02:27:11] *** Joins: oriba (~oriba@x4db74bc0.dyn.telefonica.de)
[02:28:10] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Client Quit)
[02:28:21] *** Quits: Metalsutton (~Metalsutt@101.100.152.253) (Quit: Leaving)
[02:29:44] *** Joins: aportnoy (~user@user/aportnoy)
[02:31:24] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[02:33:54] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 260 seconds)
[02:35:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:36:03] *** Joins: interweb (~interweb@user/interweb)
[02:37:24] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:38:45] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[02:39:00] *** Quits: aportnoy (~user@user/aportnoy) (Ping timeout: 260 seconds)
[02:39:25] <woky_> I think I satisfied my urge to find the spec: https://www.sphinx-doc.org/en/master/usage/restructuredtext/domains.html#info-field-lists
[02:39:39] <woky_> now I'm going to ignore it and use the "napoleon" style :-)
[02:40:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[02:41:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[02:41:55] *** Quits: mawk (mawk@wireguard/contributor/mawk) (Ping timeout: 260 seconds)
[02:43:22] *** Joins: fikran (~fikran@user/fikran)
[02:43:33] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:45:47] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[02:51:00] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[02:51:29] *** Joins: srhm (~srhm@user/srhm)
[02:53:00] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[02:53:44] *** Joins: ethrl (~morty@user/doforlove33)
[02:54:42] *** Joins: Wulf (~Wulf@user/wulf)
[02:57:04] *** Quits: ethrl (~morty@user/doforlove33) (Client Quit)
[02:58:25] *** Quits: interweb (~interweb@user/interweb) (Quit: Leaving)
[03:00:52] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:02:23] *** Joins: Roey (~Roey@user/Roey)
[03:02:30] <Roey> hello all o/
[03:02:33] *** Joins: evocatus (~evocatus@84.51.113.13)
[03:03:10] *** Quits: Macuser (~Macuser@216.30.159.201) (Remote host closed the connection)
[03:03:16] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[03:03:32] <Roey> whoah, https://www.youtube.com/watch?v=Iwf17zsDAnY  <-- I've been Pythoning since 1997, never got into __slots__ though.  But I see how they are useful/lighter than unslotted classes, which all have a .__dict__ (unlike slotted classes)
[03:03:52] <Roey> nedbat: have you ever found a use case in your past experience to use __slots__?
[03:04:01] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[03:04:06] <nedbat> Roey: if i have, i don't remember what it was
[03:04:26] <Roey> ahhhh okay
[03:04:44] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:04:45] <Roey> a __slots__ assignment inside a class apparently directs the interpreter not to create a .__dict__ for that class
[03:04:52] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:04:54] <Roey> s/not to create/forgo creating
[03:05:23] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 258 seconds)
[03:06:06] *** Quits: ATAD (~ATAD@user/atad) (Ping timeout: 260 seconds)
[03:06:14] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[03:06:22] *** Joins: ATAD (~ATAD@user/atad)
[03:08:22] *** Quits: gableroux (~gableroux@bras-base-jnqrpq0202w-grc-22-76-65-187-26.dsl.bell.ca) (Remote host closed the connection)
[03:08:50] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[03:09:59] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[03:10:32] <oriba> I tried making packages without __init__.py and that works. But I read that it is necessayry for python to detect packages that the directories contain - at least an empty - file __init__.py    but it works even without that file
[03:11:05] <oriba> is that file not needed anymore?
[03:11:39] *** Joins: haise0 (~haise01@user/haise01)
[03:12:50] *** rfm_ is now known as rfm
[03:12:50] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 260 seconds)
[03:13:10] *** wootehfoot is now known as Supersaiyan_IV
[03:13:39] *** Joins: KombuchaKip (~kip@192.252.230.5)
[03:13:40] *** Supersaiyan_IV is now known as wootehfoot
[03:13:54] <Jong> I made a logger that I'm using in a single-file python program that uses argparse. I made the argument logfile to specify a file name / relative path: parser.add_argument("--logfile", type=str, default=None).
[03:14:10] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:14:26] <Jong> My question:  should I wrap all logger related calls in    if args.fb5logger is not None. ?
[03:15:38] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:16:04] <Jong> I think it's better not to do that and instead make sure the logger works  anyway even when the cli argument is not specified.
[03:17:53] *** Joins: Fiji (~Fiji@user/fiji)
[03:18:31] <tpr> Roey: I once tried to perform some (misguided) optimization using slots. the script was parsing (largeish, gigabytes-sized) pcap files to find some information from the payloads. in the end, the real fix was to fix the underlying parser library by adding a missing Py_DECREF to avoid the memory leak :|
[03:19:08] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[03:19:37] *** Parts: mcon (~Thunderbi@host-79-55-229-50.retail.telecomitalia.it) ()
[03:21:51] <Roey> tpr: !!!
[03:22:00] <Roey> well I mean, at least your code ended up using a lot less memory
[03:22:34] <Roey> because of the slotted classes (I mean, especially if you were holding large lists or tuples of these objects
[03:22:35] <Roey> )
[03:23:56] *** Joins: rfm_ (~rfm@user/rfm)
[03:24:23] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 264 seconds)
[03:24:41] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[03:26:07] *** rfm is now known as Guest6357
[03:26:07] *** Quits: Guest6357 (~rfm@user/rfm) (Killed (cadmium.libera.chat (Nickname regained by services)))
[03:26:07] *** rfm_ is now known as rfm
[03:26:19] *** Joins: nullbytes (~nullbytes@ool-2f1206df.dyn.optonline.net)
[03:26:22] <nullbytes> How can I sort a list of consecutive integers so that the similar integers are as far apart as possible?
[03:27:26] *** Joins: iflema (~ian@user/iflema)
[03:27:56] <Jong> nullbytes  that would depend on the function you choose to use to compute overall far-apartness of the list
[03:28:49] <BtbN> That also sounds like a serious theoretical problem to solve
[03:29:00] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:29:21] <Jong> nullbytes  in ML there's the opposite problem of trying to reduce the idea of similarness down to a single number.  If there was one answer, you wouldn't have so many flavors of loss functions.
[03:29:42] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 244 seconds)
[03:30:03] *** Quits: waxfire (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:30:27] *** Joins: waxfire (~waxfire@65.119.2.240)
[03:30:39] <tpr> Roey: yeah, it saved some when millions and millions of objects were being created, I suppose :) the details escape me as it's been a while, but it offered some temporary solace at that point.
[03:31:04] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[03:31:46] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:31:50] *** Joins: Fiji_ (~Fiji@user/fiji)
[03:33:05] *** Joins: chenqisu12 (~peiycae@183.217.203.91)
[03:33:08] *** Quits: nomic (~nomic@85.203.36.101) (Quit: Leaving)
[03:35:30] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 260 seconds)
[03:35:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:36:03] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[03:42:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:42:32] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[03:44:12] *** Joins: Dr-007 (~nope@92-108-90-26.cable.dynamic.v4.ziggo.nl)
[03:45:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 244 seconds)
[03:46:01] *** Joins: amogorkon (~amogorkon@port-92-196-68-210.dynamic.as20676.net)
[03:46:17] *** Joins: BigShip (~BigShip@user/bigship)
[03:46:30] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:48:08] *** Quits: lovelace (~paul@2.24.23.175) (Quit: Konversation terminated!)
[03:48:17] *** Quits: amo (~amogorkon@port-92-196-112-50.dynamic.as20676.net) (Ping timeout: 244 seconds)
[03:48:30] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[03:48:34] *** Joins: gableroux (~gableroux@bras-base-jnqrpq0202w-grc-22-76-65-187-26.dsl.bell.ca)
[03:48:38] *** Joins: nomic (~nomic@85.203.36.101)
[03:49:14] <Dr-007> Hello, im testing to run some homebrew code on a PSP (playstation portable). It works fine, i used this tutorial: https://pspsdk.fandom.com/wiki/Homebrew_Programming_in_PYTHON on this page they mention pygame to run the code on your pc which id like to do.
[03:49:38] <Dr-007> my question basicly, how can i now target the psp homebrew as a pygame?
[03:49:41] *** Joins: cloudbender61 (~cloudbend@user/cloudbender)
[03:51:32] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:51:36] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[03:52:15] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[03:52:55] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 252 seconds)
[03:53:49] *** Joins: rk04 (~rk04@user/rajk)
[03:54:40] *** Quits: cloudbender61 (~cloudbend@user/cloudbender) (Ping timeout: 265 seconds)
[03:57:19] <Roey> tpr: nice :)
[03:57:26] <Roey> I love this high-level discussion btw :)
[03:58:32] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 265 seconds)
[03:59:40] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-fc59-706b-5e06-cd49.res6.spectrum.com)
[04:00:37] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[04:01:33] <Jong> Is it possible to have one class return the object of another class in place of itself?  Like if foo = bar(). I want class bar to check if an argument was passed to its constructor.  If no argument is passed, give foo an instance of a no-op class instead of an instance of itself.
[04:01:47] *** Quits: nomic (~nomic@85.203.36.101) (Quit: Leaving)
[04:03:44] <nedbat> Jong: that sounds like a good use for a function.
[04:04:00] *** Joins: superboot (~agentgasm@user/superboot)
[04:06:06] <Jong> Do you mean an intermediary function? Turn bar instead a train track switch, that returns either an instance of this class or that class?
[04:06:08] *** Joins: jamwil (~jamwil@user/jamwil)
[04:06:36] <Jong> sure, but that's less elegant. That's glue code introduction right there
[04:06:36] <nedbat> Jong: yes, the function can decide what class of thing to return
[04:06:40] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[04:06:59] <Jong> I was hoping I could find a class decorator that could do the trick
[04:07:01] <nedbat> Jong: no, it's more explicit.  A caller making a Bar() instance, and getting something else, is being lied to.
[04:08:03] <nedbat> Jong: what's the actual class you're thinking about?
[04:08:10] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 260 seconds)
[04:08:20] <Jong> I named it Logger()
[04:08:38] <Jong> I'm trying to think of the name I should use for the intermediary function
[04:08:38] <nedbat> Jong: why is it bad for a user of the logger to call make_logger()?
[04:10:18] <Jong> I thought creation functions were nonpythonic
[04:10:54] <nedbat> Jong: i'm not sure where that idea comes from.
[04:11:54] <nedbat> Jong: python's own logging module in the stdlib has this idiom:   logger = logging.getLogger(__name__)
[04:11:56] <Jong> all python classes I've used I recall use constructors.  Maybe my memory is off now that I think about it.  np.ones((3,2)) isn't a constructor yet it returns an object
[04:12:17] <Jong> nedbat  let me read about python's logging module!
[04:12:42] <nedbat> Jong: it has a very java-like design that many people don't like, btw.
[04:13:16] <Jong> nedbat  so make a static function right? @static
[04:13:35] <nedbat> Jong: or just a function. it doesn't have to be a part of a class
[04:13:47] <nedbat> Jong: if you do want it in the class, then @classmethod is more usual
[04:15:13] <Jong> I thought class methods could be used only once an object is instantiated?
[04:15:55] <Jong> let me test and find out.
[04:15:56] <nedbat> Jong: regular methods are called instance methods, they work on an instance.  @classmethod works on the class
[04:16:09] <nedbat> Jong: but really, try out putting the function outside the class
[04:16:43] <Jong> thanks nedbat.
[04:16:52] *** Joins: cation (cation@user/cation)
[04:17:15] <Dr-007> on windows im running python3. i just installed python2 via pip. there's no python2 command. (there's only a python command, not python3 as it is on linux)
[04:17:36] <nedbat> Dr-007: it's usual that python 2 is called "python"
[04:17:57] <nedbat> Dr-007: though, i didn't think you could install python2  with pip?
[04:18:26] <nedbat> Dr-007: i don't think you got what you wanted to get?  https://pypi.org/project/python2/
[04:19:19] <Dr-007> nedbat: https://bpa.st/NNAQ
[04:19:47] <Dr-007> nedbat, no i didnt get what i wanted. is there a multiversion control thingy im missing?
[04:19:57] <nedbat> Dr-007: from that pypi page: "A library for running Python 2 code from a Python 3 application. This library was created for more whimsical than practical reasons."
[04:19:59] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:20:07] <nedbat> Dr-007: you don't install python with pip
[04:20:37] <nedbat> Dr-007: if you don't mind me asking, why use python 2?
[04:20:42] <Dr-007> ah, ok. confusing package then. ill try a different approach. thanks
[04:21:07] <Dr-007> nedbat: im trying to run python on psp. its quite old and it was made for python2
[04:21:16] <nedbat> Dr-007: wow, exotic
[04:21:49] <Dr-007> hehe, i dusted it off and started it. then i thought lets make something
[04:22:25] *** Quits: oriba (~oriba@x4db74bc0.dyn.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:25:30] *** Quits: magla (~gelignite@55d43ee1.access.ecotel.net) (Quit: Stay safe!)
[04:26:00] *** Quits: flokuehn (~flokuehn@i5e86b381.versanet.de) (Ping timeout: 244 seconds)
[04:27:34] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 244 seconds)
[04:28:01] *** Joins: flokuehn (~flokuehn@muedsl-82-207-236-004.citykom.de)
[04:28:19] *** Joins: ionface (~ionface@user/ionface)
[04:28:45] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Read error: Connection reset by peer)
[04:31:01] *** Joins: djhankb (~djhankb@208.113.164.68)
[04:32:15] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:32:40] *** Joins: Fiji- (~Fiji@user/fiji)
[04:36:38] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 260 seconds)
[04:36:45] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[04:37:28] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[04:37:28] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[04:37:32] *** Joins: vlm (~vlm@user/vlm)
[04:37:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:41:02] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-fc59-706b-5e06-cd49.res6.spectrum.com) (Quit: Client closed)
[04:43:15] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 260 seconds)
[04:47:00] *** Quits: nullbytes (~nullbytes@ool-2f1206df.dyn.optonline.net) (Quit: Client closed)
[04:48:01] *** Quits: evocatus (~evocatus@84.51.113.13) (Quit: Leaving)
[04:50:35] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:50:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[04:52:42] *** Joins: fikran (~fikran@user/fikran)
[04:53:45] *** Quits: hexa- (~hexa-@juno.lossy.network) (Quit: WeeChat 3.1)
[04:53:52] *** Joins: brabrax_ (~brabrax@user/brabrax)
[04:54:26] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 244 seconds)
[04:54:26] *** brabrax_ is now known as brabrax
[04:55:09] *** Joins: hexa- (~hexa-@juno.lossy.network)
[04:55:41] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[04:55:56] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[05:00:43] *** Joins: dld (~davidlowr@2601:197:600:1210:5db6:6f5a:3b6e:25f9)
[05:02:25] *** Joins: The_Jag_ (~The_Jag@host-87-15-17-212.retail.telecomitalia.it)
[05:04:15] *** Quits: The_Jag (~The_Jag@host-87-17-20-218.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[05:06:41] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 265 seconds)
[05:09:24] *** sdfgsdfgs is now known as sdfgsdfg
[05:09:39] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-4c3f-03f6-4a4f-4ab9.res6.spectrum.com) (Read error: Connection reset by peer)
[05:09:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[05:11:00] *** Quits: chenqisu12 (~peiycae@183.217.203.91) (Quit: Leaving)
[05:11:14] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[05:27:01] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:28:13] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Client Quit)
[05:29:41] <Jong> I notice pyfmt doesn't automatically change class and function names to match the PEP8 guidelines. Anyone know a tool that does?
[05:30:28] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[05:31:04] *** Joins: djhankb (~djhankb@208.113.164.68)
[05:32:38] *** Quits: vimart (~vimart@85.255.235.142) (Ping timeout: 260 seconds)
[05:33:29] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[05:34:55] *** Quits: kostkon_ (~kostkon@athedsl-254838.home.otenet.gr) (Remote host closed the connection)
[05:35:44] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:36:01] *** Joins: pycurious (~Adium@user/pycurious)
[05:36:27] *** Joins: vimart (~vimart@85.255.235.142)
[05:40:10] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[05:41:11] *** Quits: Pandadub (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Ping timeout: 264 seconds)
[05:46:24] *** Joins: dbristow (~dbristow@user/dbristow)
[05:46:27] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[05:47:41] *** Joins: white_magic (~white_mag@2600:1700:6ae2:a20:919:853e:550a:e2dd)
[05:48:07] <white_magic> anyone here use sqlalchemy with asyncpg driver? I'm wondering what is the best way to set up a 'data layer'.
[05:51:14] *** Joins: pycurious (~Adium@user/pycurious)
[05:51:45] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-174-201.dsl.scarlet.be) (Ping timeout: 258 seconds)
[05:52:49] *** Joins: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be)
[05:53:27] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[05:53:55] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[05:56:21] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:56:48] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[05:57:21] *** Joins: mickey8 (~user@user/mickey)
[06:00:28] *** Joins: zeden (~zeden@user/zeden)
[06:02:10] *** Quits: spiderman (~spiderman@user/spiderman) (K-Lined)
[06:02:33] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[06:03:17] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[06:05:47] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Quit: https://kn100.me :))
[06:06:40] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[06:08:00] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:08:37] *** Joins: djapo (~archangel@user/djapo)
[06:11:45] *** Quits: Fossil (~Fossil@95.85.23.165) (Quit: Bye)
[06:11:46] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 245 seconds)
[06:11:58] *** Joins: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001)
[06:12:30] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 260 seconds)
[06:13:33] *** Joins: kindablue (znc@irc.tpurist.com)
[06:14:09] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:15:51] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[06:15:51] *** Joins: mickey8 (~user@user/mickey)
[06:17:07] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[06:24:30] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 265 seconds)
[06:30:56] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[06:31:10] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[06:31:30] *** Joins: djhankb (~djhankb@208.113.164.68)
[06:33:16] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:35:02] *** Quits: Shou (~nyah@wikipedia/Davepeta) (Remote host closed the connection)
[06:37:57] <yossarian> Jong: i'm not aware of any tool that does that, outside of maybe an IDE's refactoring functionality
[06:39:10] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[06:40:53] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:41:37] *** Joins: Viewday7 (~Viewday@user/viewday)
[06:42:48] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[06:42:48] *** Viewday7 is now known as Viewday
[06:45:45] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 260 seconds)
[06:47:39] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[06:48:42] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[06:48:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:49:28] *** Joins: Vonter (~Vonter@user/vonter)
[06:54:28] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[06:58:16] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[06:58:54] *** Joins: parv (~quass@user/parv)
[07:00:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[07:02:03] *** Joins: fikran (~fikran@user/fikran)
[07:07:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:09:45] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[07:15:53] *** Joins: kostkon_ (~kostkon@athedsl-394251.home.otenet.gr)
[07:16:01] *** kostkon_ is now known as kostkon
[07:16:07] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[07:20:49] *** Joins: tg (~tg@rockylinux/infra/tg)
[07:20:56] *** Quits: tg (~tg@rockylinux/infra/tg) (Client Quit)
[07:21:20] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[07:21:52] *** Joins: nomic (~nomic@85.203.36.101)
[07:23:45] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 244 seconds)
[07:24:49] *** Joins: dob1_ (~dob1@user/dob1)
[07:25:53] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 265 seconds)
[07:27:17] *** Quits: Player001 (~Player001@user/player001) (Quit: Read Hegel and Lacan and Marx)
[07:28:13] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[07:30:37] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[07:30:41] *** Quits: white_magic (~white_mag@2600:1700:6ae2:a20:919:853e:550a:e2dd) (Quit: Client closed)
[07:31:13] *** Joins: djhankb (~djhankb@208.113.164.68)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:40:47] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 244 seconds)
[07:41:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[07:42:46] *** Joins: analoq (~yashi@user/dies)
[07:44:25] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 244 seconds)
[07:47:29] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[07:48:18] *** Joins: Vonter (~Vonter@user/vonter)
[07:53:57] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Quit: Peace homie)
[07:57:20] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 244 seconds)
[07:58:28] *** Quits: nomic (~nomic@85.203.36.101) (Quit: Leaving)
[07:58:45] *** Quits: jpic (~jpic@82.142.28.130) (Read error: Connection reset by peer)
[08:01:27] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 244 seconds)
[08:02:10] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[08:03:22] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:04:33] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 265 seconds)
[08:05:47] *** Quits: LuKaRo (~LuKaRo@p5deda401.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[08:08:07] *** Joins: LuKaRo_ (~LuKaRo@p4fc32190.dip0.t-ipconnect.de)
[08:08:24] *** Joins: ionface (~ionface@user/ionface)
[08:14:05] *** Joins: nomic (~nomic@85.203.36.101)
[08:16:05] *** Joins: Dunce (~Dunce@gateway/tor-sasl/dunce)
[08:16:47] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:20:15] *** Joins: rk04 (~rk04@user/rajk)
[08:21:39] <Jong> Suppose yy.py contains class Y, and i have the function get_instance_of_Y.  If wrote the code: import yy;  yy = yy.get_instance_of_Y() Would that be considered poor practice to name my variable the same name as the module, even when it's guaranteed that the module won't be called again?
[08:21:59] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 264 seconds)
[08:22:49] *** Quits: Nei (~ailin@user/nemui) (Remote host closed the connection)
[08:23:23] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:24:55] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 260 seconds)
[08:25:04] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[08:26:08] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[08:27:19] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[08:28:07] *** Quits: Disposeable-Nick (~Ident@user/disposeable-nick) (Quit: Leaving)
[08:29:53] *** Quits: Fiji- (~Fiji@user/fiji) (Ping timeout: 244 seconds)
[08:30:48] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[08:31:19] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:32:33] *** Joins: Sadale (~Sadale@user/sadale)
[08:32:49] *** Joins: djapo (~archangel@user/djapo)
[08:33:06] *** Joins: frost (~frost@user/frost)
[08:33:29] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Ping timeout: 244 seconds)
[08:34:39] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[08:35:42] *** Quits: Dunce (~Dunce@gateway/tor-sasl/dunce) (Remote host closed the connection)
[08:37:50] <Jong> I think I found my answer here: https://stackoverflow.com/questions/40527733/is-it-ok-to-name-an-instance-the-same-as-a-module
[08:38:04] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[08:38:04] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[08:38:34] <enrh> Do any of you pydantic fans prefer using pydantic.dataclasses.dataclass over pydantic.BaseModel?
[08:40:44] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Quit: brb)
[08:40:55] <enrh> Oh I just found https://github.com/samuelcolvin/pydantic/issues/710
[08:41:13] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[08:42:28] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[08:42:40] <enrh> Okay yeah forget my question
[08:44:57] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[08:45:09] *** Joins: ravan (~ravan@user/ravan)
[08:45:14] *** Joins: Vonter (~Vonter@user/vonter)
[08:46:17] *** Joins: upsala (~zcb@185.213.155.160)
[08:46:25] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:50:00] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[08:50:09] *** Joins: Sadale_ (~Sadale@user/sadale)
[08:50:30] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[08:55:22] *** Joins: newpy (~newpy@2601:280:4381:1390:786f:52c0:3d37:9946)
[08:56:34] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 260 seconds)
[08:59:20] *** Quits: Dr-007 (~nope@92-108-90-26.cable.dynamic.v4.ziggo.nl) (Ping timeout: 244 seconds)
[09:00:06] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[09:04:36] *** Joins: jazzy2 (~jaziz@user/jaziz)
[09:05:04] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[09:05:31] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 245 seconds)
[09:05:31] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 244 seconds)
[09:06:58] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[09:07:28] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[09:09:10] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 258 seconds)
[09:09:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[09:11:24] *** Joins: fikran (~fikran@user/fikran)
[09:13:54] *** Joins: lannonh (spiderman@user/lannonh)
[09:14:23] *** Joins: p-i- (~Ohmu@223.206.146.151)
[09:14:48] <p-i-> Suppose in my .ipynb cell I `from Foo import Foo`
[09:14:57] <p-i-> Now I do `f = Foo()`
[09:15:06] <p-i-> Now I modify code in Foo.py
[09:15:15] <p-i-> But it seems I have to restart the notebook kernel to see the changes.
[09:15:25] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:15:58] <p-i-> i.e. it must cache upon first import. Rerunning the import has no effect.
[09:16:18] <p-i-> This makes it awkward to use notebooks to debug/test code.
[09:17:38] <u4t> wat
[09:18:44] <u4t> <p-i-> Now I do `f = Foo()`   << why not go the whole hog and make it Foo = Foo()?
[09:18:51] *** Joins: zaquest (~notzaques@5.128.210.178)
[09:18:55] <u4t> from Foo import Foo; Foo = Foo()
[09:19:28] <u4t> alternatively: import Foo; FooObj = Foo.Foo()
[09:19:38] <u4t> then you can use importlib.reload(Foo)
[09:21:03] <u4t> import Foo; FooObj = Foo.Foo(); ...  <code changes> ... importlib.reload(Foo); FooObj = Foo.Foo()
[09:23:01] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[09:24:34] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[09:24:34] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[09:25:50] <Repiphany> Maybe you want to get into writing actual unit tests instead of trying to do too much interactively
[09:26:13] * parv sings of fooos fffooo fffoo fffffooooo ffoo ffoo foo FOO!
[09:27:09] *** Joins: jazzy (~jaziz@user/jaziz)
[09:27:41] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[09:27:45] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[09:30:34] *** Joins: Vonter (~Vonter@user/vonter)
[09:30:44] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[09:31:17] *** Joins: djhankb (~djhankb@208.113.164.68)
[09:33:29] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[09:35:47] *** Joins: rk04 (~rk04@user/rajk)
[09:36:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:37:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:37:50] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 260 seconds)
[09:40:26] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 260 seconds)
[09:41:14] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[09:43:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[09:44:11] *** Joins: ckeshav (~keshavcha@user/ckeshav)
[09:47:48] *** Quits: seednode4 (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:48:49] *** Joins: pro_z__ (~pro_z@37.214.55.89)
[09:49:06] *** Joins: seednode4 (~seednode@user/seednode)
[09:50:40] *** Sadale_ is now known as Sadale
[09:51:55] *** Joins: oneforall2 (~guru@S0106ec086bc3574f.mh.shawcable.net)
[09:53:30] <oneforall2> how would I run  this to test it /tmp/thunderbird-91.2.1/python/mozbuild/mozbuild/virtualenv.py
[09:54:11] <lannonh> python3 /tmp/thunderbird-91.2.1/python/mozbuild/mozbuild/virtualenv.py
[09:54:12] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[09:57:23] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 264 seconds)
[09:58:27] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[09:58:46] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[09:59:55] <ApostleInTriumph> Hello. I've an array of size N,3 where each row signifies a triangle. I'd like to sample K rows (N=13000, K=500) from the array such that the rows of array K are distinct. how do I go about?
[10:02:17] <oneforall2> tried that and said Too few arguments
[10:03:29] *** Joins: node1 (~node1@user/node1)
[10:05:14] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:06:47] *** Joins: kurfen (~kurfen@45.152.181.134)
[10:07:43] *** Joins: djapo (~archangel@user/djapo)
[10:09:28] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[10:11:30] <Feuermagier> I'm having trouble understanding what "if args.LOCAL:" checks. What exactly is args.LOCAL and when can it make sense to check for it?
[10:12:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[10:13:37] <Feuermagier> ah, nvmnd. seems to be a library thing
[10:14:07] *** Joins: manti7 (~manti7@176.10.104.94)
[10:15:32] <Repiphany> ApostleInTriumph: Could do `K[np.random.choice(13000, size = 500, replace = False))]`
[10:17:18] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[10:19:07] <ApostleInTriumph> Repiphany `len(np.unique(faces[np.random.choice(faces.shape[0], size = 500, replace = False)].flatten()))` gives me 1388
[10:19:48] <ApostleInTriumph> Repiphany the faces array looks like this https://bpa.st/PAFQ
[10:20:11] <Repiphany> If you flatten that array, I don't see why there should be any reason for each corner of a triangle to be distinct
[10:20:50] <ApostleInTriumph> If i select `[   3,    0,    2]` I don't want to select [   2,    0,    1] because 0 and 2 repeat.
[10:21:19] <Repiphany> That's very much not clear in your first question
[10:21:20] <ApostleInTriumph> Repiphany oh yes, sorry for being unclear that's actually my goal. select triangle such that each has distinct vertices
[10:21:31] *** Joins: ominionx (~ominionx@173-25-110-118.client.mchsi.com)
[10:22:15] *** Joins: kosh (~kosh@user/kosh)
[10:22:26] <Repiphany> I can't imagine there's a way to do that vectorized
[10:26:53] *** Joins: Disposeable-Nick (~Ident@user/disposeable-nick)
[10:26:55] <ApostleInTriumph> so for loop is the only way?
[10:27:00] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[10:27:10] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 244 seconds)
[10:27:26] <Repiphany> I mean I guess you could partition indices by which triangles share vertices and then sample from those
[10:28:24] <ApostleInTriumph> what is the partition you refer to?
[10:29:28] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[10:29:44] <Disposeable-Nick> Hi, could someone help me with this regex string? ('(?i)^PING (:[^ ]+)$', text) | That searches for PING :, (PING whitespace colon), how do I make it, so it can look for 433.  That is 433 without a space or colon?
[10:30:25] *** Quits: newpy (~newpy@2601:280:4381:1390:786f:52c0:3d37:9946) (Quit: Leaving)
[10:30:48] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:31:19] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[10:31:52] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:31:59] <Wulf> Disposeable-Nick: ^433$
[10:32:05] <Disposeable-Nick> I see
[10:32:13] <Repiphany> Trying a loop seems like the smartest thing to start with unless it's not fast enough for some weird reason
[10:32:44] <Wulf> Disposeable-Nick: that's probably not what you really want, though.
[10:33:21] <Disposeable-Nick> I appreciate that, Wulf, I'll just test it and get back.
[10:35:27] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[10:36:26] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[10:37:50] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[10:40:48] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[10:41:18] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:41:19] <Disposeable-Nick> Wulf, it didn't trigger, but let me show you first, maybe I did  it wrong
[10:41:28] <Wulf> Disposeable-Nick: your approach is wrong
[10:42:05] <Disposeable-Nick> regex = re.match('(?i)^433$ (:[^ ]+)$', text)
[10:42:05] <Disposeable-Nick>     if regex is not None: | indents in correct place etc...
[10:42:27] *** Joins: jay-m1262 (~jay-m@129.0.205.217)
[10:42:50] <Wulf> Disposeable-Nick: I assume you're trying to parse the irc protocool. From what I rememmber there are a few (4?) different formats. I.e. you'd need 4 regexes in total.
[10:43:09] <Disposeable-Nick> wulf, can I show you my working one?
[10:43:42] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 244 seconds)
[10:43:43] *** Joins: tobybl (~tobybl@213.31.135.91)
[10:44:33] <Wulf> Disposeable-Nick: your working what, regex?
[10:44:44] <Disposeable-Nick> https://dpaste.com/HMQWFEDNY
[10:44:56] <Disposeable-Nick> So, basically that triggers perfectly, right
[10:45:01] *** Quits: ckeshav (~keshavcha@user/ckeshav) (Ping timeout: 265 seconds)
[10:45:10] <Disposeable-Nick> And is safe than just search .text.fidn etc...
[10:46:00] <Disposeable-Nick> is safer than just search, text.find *
[10:46:19] <Disposeable-Nick> I just need to do one fro 433, 375 and 376
[10:46:24] <Disposeable-Nick> That's all Wulf
[10:46:34] <Disposeable-Nick> for *
[10:46:51] <Wulf> Disposeable-Nick: you should have one regex that matches many different lines sent by the server.
[10:47:12] <Disposeable-Nick> Just working with that I have
[10:47:13] <Wulf> or maybe a few regexes for the different formats. But not one for every status code.
[10:48:25] <Disposeable-Nick> I'm only have 3, the status codes are for precise timing on when to do and when not to do certain things, Wulf
[10:48:27] *** Quits: tobybl (~tobybl@213.31.135.91) (Ping timeout: 258 seconds)
[10:49:10] *** Joins: tobybl (~tobybl@213.31.135.91)
[10:50:08] <Disposeable-Nick> if "375" in svrtext:
[10:50:08] <Disposeable-Nick>         ircwrite("PRIVMSG NickServ :identify %s\r\n" % (password)) | obviously, anyone can trigger that by saying: SOMETHINGHERE 375, right, that's why I'm doing some regex stuff, but it's all new to me, Wulf
[10:54:15] <Disposeable-Nick> The PING was previously like that too, but I have made it better
[10:58:36] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[10:59:17] *** Joins: ede (~ede@user/ede)
[11:05:01] *** Joins: alzgh (~alzgh@user/alzgh)
[11:06:23] <oneforall2> hmm python3  >>> import packagimg   ModuleNotFoundError: No module named 'packagimg'  I do have python-package  installed
[11:06:45] <oneforall2> python 3.19
[11:06:58] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-1c3c-a25a-4835-4f09.res6.spectrum.com)
[11:07:23] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-1c3c-a25a-4835-4f09.res6.spectrum.com) (Client Quit)
[11:08:09] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-1c3c-a25a-4835-4f09.res6.spectrum.com)
[11:10:11] *** Quits: nomic (~nomic@85.203.36.101) (Quit: Leaving)
[11:10:29] *** Joins: nomic (~nomic@85.203.36.101)
[11:11:41] <Wulf> oneforall2: did I oversleep? Last I checked 3.11 was being developed. And could "packagimg" be a typo?
[11:12:15] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[11:15:19] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:e425:e861:b579:c88b)
[11:16:09] *** Joins: jazzy (~jaziz@user/jaziz)
[11:18:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[11:20:45] *** Joins: fikran (~fikran@user/fikran)
[11:21:20] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[11:21:55] *** Joins: cursey (~cursey@user/cursey)
[11:22:42] *** Joins: ubert (~Thunderbi@178.115.74.156.wireless.dyn.drei.com)
[11:22:58] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 244 seconds)
[11:24:47] *** Joins: iflema (~ian@user/iflema)
[11:26:43] *** Quits: darkstarx (~darkstard@2601:1c2:300:c8a0::6c32) (Remote host closed the connection)
[11:27:03] *** Joins: darkstarx (~darkstard@2601:1c2:300:c8a0::6c32)
[11:28:28] *** Joins: sharperguy (~sharpergu@89.244.121.254)
[11:29:32] *** Joins: Atque (~Atque@user/atque)
[11:30:18] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[11:30:49] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[11:31:22] *** Joins: djhankb (~djhankb@208.113.164.68)
[11:32:51] *** Joins: magla (~gelignite@55d4df94.access.ecotel.net)
[11:34:54] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:35:06] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Remote host closed the connection)
[11:35:46] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:49] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[11:37:37] <oneforall2> lol thanks for noticing that typo ecpert here :)
[11:38:06] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[11:38:13] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[11:38:14] <oneforall2> whats worse I copy pasted that :)
[11:38:30] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:38:56] <oneforall2> m/n amd my patch should work
[11:39:43] <oneforall2> ugh and pyhron 3.19 meant 3.10
[11:39:53] *** Joins: kosh (~kosh@user/kosh)
[11:41:21] <nanonyme> And you actually installed packaging through pip?
[11:41:27] <nanonyme> (or distro package manager)
[11:42:04] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 244 seconds)
[11:42:09] *** Joins: ravan (~ravan@user/ravan)
[11:43:50] <oneforall2> yeah my disto package
[11:44:44] <oneforall2> packaging-21.0.
[11:48:18] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[11:48:24] *** Quits: ominionx (~ominionx@173-25-110-118.client.mchsi.com) (Quit: Leaving)
[11:49:22] *** Joins: src (~src@user/src)
[11:49:29] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[11:49:43] *** Quits: nomic (~nomic@85.203.36.101) (Quit: Leaving)
[11:49:58] *** Joins: mickey8 (~user@user/mickey)
[11:50:25] *** Joins: Nei (~ailin@user/nemui)
[11:52:16] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:56:03] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 276 seconds)
[11:56:18] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[11:56:51] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:58:51] *** Quits: gitly (~gitly@85.255.236.129) (Ping timeout: 245 seconds)
[11:58:52] *** Joins: rendar (~rendar@user/rendar)
[11:59:09] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[12:00:33] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[12:00:58] *** Joins: gitly (~gitly@85.255.232.230)
[12:01:20] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[12:02:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:02:56] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:07:13] *** Joins: Dcode200 (~What@87-63-32-71-dynamic.dk.customer.tdc.net)
[12:08:33] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[12:11:15] *** Quits: parv (~quass@user/parv) (Quit: parv)
[12:15:38] <oneforall2> major, minor, micro = sys.version_info[:3]     NameError: name 'sys' is not defined
[12:16:12] <bpalmer> you have to import sys
[12:20:41] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[12:25:09] *** Joins: orangeextract (~orangeext@user/orangeextract)
[12:25:10] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 260 seconds)
[12:26:19] <oneforall2> 'ah thanks
[12:26:50] <Payam> when hinting about the input type, is it a good idea to use strings? https://bpa.st/CZQQ
[12:26:58] <Payam> or should I use some other method?
[12:27:40] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:d3d1:c27a:b7b1:3f00)
[12:28:03] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Ping timeout: 244 seconds)
[12:28:19] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:30:28] <Payam> another question: I would like to do a yield here in my code but I want the json file to be loaded only once and when I call this function second time it should ignore line 19 and 20. do you have any suggestions: https://bpa.st/SIXA
[12:30:39] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:30:45] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[12:31:19] *** Joins: djhankb (~djhankb@208.113.164.68)
[12:31:40] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[12:31:48] <bpalmer> Payam: saying a parameter is of type str is perfectly reasonable when you're accepting strings. In that case, you might prefer to change to using enums
[12:32:03] <bpalmer> (in the enum.Enum sense).
[12:32:24] <Payam> so I should give them an ID for each type?
[12:36:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[12:37:04] *** Quits: p-i- (~Ohmu@223.206.146.151) (Ping timeout: 252 seconds)
[12:37:22] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 244 seconds)
[12:37:52] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[12:39:12] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[12:40:03] <ChrisWarrick> Payam: you should use https://docs.python.org/3/library/enum.html
[12:40:29] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[12:40:42] <ChrisWarrick> Payam: get_branches_pipelines should be two functions, get_branches and get_pipelines.
[12:40:57] *** Joins: rk04 (~rk04@user/rajk)
[12:40:58] <Payam> ChrisWarrick,  I did. But the typing hinting should it be what?
[12:41:20] <Payam> ChrisWarrick, why should they be two functions?
[12:41:24] <ChrisWarrick> Payam: why should they be one function?
[12:41:36] <Payam> Would be the same function almost.
[12:41:37] <ChrisWarrick> Payam: it’s fairly unusual to control the return type of a function by its parameter
[12:41:49] <Payam> I changed it
[12:41:53] <Payam> I send you now
[12:42:00] <ChrisWarrick> Payam: a much more natural API is to just have two functions, even if they might be similar
[12:42:12] <Payam> https://bpa.st/VD6Q
[12:42:43] <Payam> You think it should be two functions? okej. I will change it
[12:43:02] <oneforall2> verify_python_version(sys.stdout)  that gets the NameError: name 'verify_python_version' is not defined
[12:43:13] <Payam> but how about the yield? From what I can see it will call fetch_info() everytime right?
[12:44:23] <ChrisWarrick> Payam: no, it won’t
[12:44:30] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[12:44:41] <ChrisWarrick> Payam: as in, it will only call fetch_info once per call of get_pipelines
[12:45:17] <Payam> okej thanks. I make two functions
[12:45:43] <ChrisWarrick> Payam: right now, your function always yields pipelines, which seems wrong
[12:46:02] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[12:46:08] <Payam> there is a if statement
[12:46:18] <ChrisWarrick> Payam: without an else
[12:46:35] <ChrisWarrick> Payam: `yield` does not mean the function ends
[12:47:21] <Payam> okey. I though that like return, yield ends it
[12:48:42] *** Quits: Nact (~l@host-85-27-120-251.dynamic.voo.be) (Quit: Konversation terminated!)
[12:51:24] <bpalmer> After a function has yielded, it can be resumed.
[12:53:28] *** Joins: aquaregia (~Guest33@rrcs-173-197-219-139.west.biz.rr.com)
[12:53:34] <aquaregia> hello
[12:54:18] <aquaregia> slightly stupid question, is there any good way to sort a list in python using a dictionary as a key? Tried using lambdas but it doesnt like it
[12:55:42] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[12:56:59] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 244 seconds)
[12:57:17] <leduyquang753> Make your key use those dictionaries to determine the order.
[12:59:25] <aquaregia> I have, sorted(arr, key=lambda a : orderDict[a])
[12:59:37] <aquaregia> it however does not like it, the orderDict dictionary is not in global scope
[12:59:48] <aquaregia> I suppose I could put it in global scope but I feel theres a better way
[13:00:45] <leduyquang753> You will need to have a way to refer to that orderDict.
[13:00:50] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 260 seconds)
[13:01:12] *** Joins: jinsun (~quassel@user/jinsun)
[13:02:11] <aquaregia> so there really is no better way?
[13:02:21] *** Joins: Klinda (~superleag@user/klinda)
[13:02:45] <aquaregia> surprised lambdas dont have this functionality honestly
[13:03:10] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[13:04:37] *** Quits: de-facto (~de-facto@user/de-facto) (Quit: See you around. 💤)
[13:04:51] *** Joins: rannnn8888 (~rannnn888@bzq-79-176-138-108.red.bezeqint.net)
[13:05:04] *** Joins: de-facto (~de-facto@user/de-facto)
[13:05:21] <rannnn8888> Someone here maybe how use TWS API good :D  ?
[13:05:26] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[13:06:53] <leduyquang753> Which functionality?
[13:07:22] <leduyquang753> Referring to a variable in a lambda is the same as referring to it anywhere else.
[13:07:35] *** Joins: plastico (~plastico@neomutt/plastico)
[13:07:43] <aquaregia> crafting a lambda function using a copy of a local variable as a constant
[13:08:21] *** Joins: tobybl (~tobybl@213.31.135.91)
[13:09:32] *** Quits: pro_z__ (~pro_z@37.214.55.89) (Ping timeout: 265 seconds)
[13:09:51] <lambda> aquaregia: you're gonna have to be a lot more specific than "it doesn't like it", whatever that means
[13:10:04] *** Joins: Berrox (~songro@184-23-230-118.dedicated.static.sonic.net)
[13:10:37] <Berrox> Hi. I can't get pycurl to install in Windows. I get error 10 when using pop. I downloaded a .whl file that installed but then I get an error about "libcurl link-time ssl backends (schannel) do not include compile-time ssl backend (openssl)"
[13:10:44] <Berrox> *pip
[13:11:20] <bpalmer> aquaregia: perhaps you can put a simple test case of it not working on a pastebin
[13:13:24] <bjs> aquaregia: what functionality exactly?  Why does it need to be global?
[13:13:35] <ApostleInTriumph> hello. i've a list of list with 6890 distinct elements. shape of the list of list is 13000,3. how do I sample the list of list such that my new list of list is M,3 with each row containing distinct values? I tried a typical for loop but seems very expensive
[13:13:51] <bjs> aquaregia: if you share the code it might be more clear to us what you're trying to do,  it might be that we just misunderstand
[13:14:27] <bjs> ApostleInTriumph: lists don't make "find the distinct elements" an easy operation
[13:14:55] <bjs> you can use a set, but you'll still have to iterate through all the elements
[13:14:59] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:15:09] *** Joins: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl)
[13:15:20] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[13:15:21] *** Joins: rk04 (~rk04@user/rajk)
[13:16:06] *** Joins: brabrax (~brabrax@user/brabrax)
[13:16:20] *** Parts: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl) ()
[13:16:44] <ApostleInTriumph> bjs any numpy or pandas alternative?
[13:16:45] *** Joins: pro_z (~pro_z@37.214.49.15)
[13:16:49] <aquaregia> https://bpa.st/X77A bjs
[13:17:07] <aquaregia> the idea is to sort arr1 by the order of elements in arr2
[13:17:20] <bjs> aquaregia: this isn't the same lambda you had before,  I'm a little confused though what error did you get with the lambda you had before?
[13:17:32] <aquaregia> yea ive been messing with it
[13:17:38] <aquaregia> actually wait I think is solved it one sec
[13:18:11] *** Joins: avikalp (~avikalp@49.36.99.188)
[13:18:24] *** Joins: mei (~mei@user/mei)
[13:18:34] <bjs> aquaregia: because when I try do something like that https://bpa.st/UX6Q it works fine
[13:18:50] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[13:18:56] <aquaregia> yea I think I just didnt realize arr1 could have inputs not in arr2
[13:19:08] <aquaregia> apparently it can, didnt handle that case
[13:19:10] <aquaregia> it actually worked fine
[13:19:37] *** Quits: rfm (~rfm@user/rfm) (Read error: Connection reset by peer)
[13:19:52] <bjs> aquaregia: okay so it wasn't an issue with the lambdas functionality then
[13:19:56] <lambda> so it had nothing to do with orderedDict being visible?
[13:20:07] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:20:14] <aquaregia> lmao sorry for pinging you, yes it turned out python handled it as I thought it would
[13:20:24] <aquaregia> just was getting a vague "keyerror 7" which confused me
[13:20:40] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:a1cc:f344:a47d:7d01)
[13:20:45] <bjs> aquaregia: you didn't check whether orderDict contained the key 7 before blaming the lambdas? :P
[13:21:19] <aquaregia> didnt read the prompt correctly, thought I was guarenteed everything in arr2 to be in arr1
[13:21:20] <aquaregia> oops
[13:21:39] <aquaregia> rather other way around
[13:22:02] <lambda> oh don't worry about the ping, I'd turn that off if it annoyed me :D if it had been about orderedDict's visibility, the NameError would've been for that
[13:26:21] <oneforall2> https://pastebin.com/jsPhTjZb
[13:27:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[13:30:06] *** Joins: fikran (~fikran@user/fikran)
[13:30:17] *** Joins: raxor2k (~raxor2k@78.158.233.120)
[13:30:29] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[13:30:41] <raxor2k> https://bpa.st/PTJA: what am i doing wrong here? even if streaming is paused it still keeps generating new data?
[13:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[13:31:39] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[13:31:48] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[13:31:53] <lambda> raxor2k: your conditions are wrong
[13:32:19] *** Joins: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl)
[13:32:26] <lambda> also "pass" doesn't do anything (in fact, that's exactly what it's for, doing nothing)
[13:32:54] <lambda> I'd move the checks before your main code and return early if they trigger
[13:33:34] <lambda>  also also, why is streaming_paused an int? sounds more like a bool to me
[13:34:22] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[13:35:41] *** Joins: EGH (~EGH@185.25.195.104)
[13:37:00] *** Joins: han-solo (~han-solo@user/han-solo)
[13:37:54] *** Quits: kurfen (~kurfen@45.152.181.134) (Quit: WeeChat 2.3)
[13:38:09] <raxor2k> lambda: well, i also tried this one, before making the paste, but didnt work either: https://bpa.st/D5YQ
[13:38:17] *** Joins: kurfen_ (~kurfen@45.152.181.134)
[13:39:27] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[13:39:55] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[13:40:11] *** Quits: kurfen_ (~kurfen@45.152.181.134) (Client Quit)
[13:40:59] *** Quits: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl) (Quit: Leaving...)
[13:41:00] <oneforall2> any idea what I need yo do change ..
[13:41:05] <hexnewbie> raxor2k: Read your code. Your first example reads ‘If streaming is not paused *or* if streaming has not finished, read data’
[13:41:10] *** Joins: kurfen (~kurfen@45.152.181.134)
[13:41:30] *** Joins: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl)
[13:41:34] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[13:41:51] <hexnewbie> raxor2k: Your second example reads ‘If streaming is pasued, do (print something) and do nothing. If streaming has finished, print something, else read data.
[13:42:04] <hexnewbie> raxor2k: Both sentences imply reading data regardless if streaming is paused
[13:42:09] *** Joins: Atque (~Atque@user/atque)
[13:42:14] *** Quits: kurfen (~kurfen@45.152.181.134) (Client Quit)
[13:42:35] *** Joins: kurfen (~kurfen@45.152.181.134)
[13:42:39] *** Quits: kurfen (~kurfen@45.152.181.134) (Client Quit)
[13:42:39] <raxor2k> hexnewbie: ok, and how to i stop them from reading data then ? "pass" obviously doenst work
[13:42:44] *** Joins: driib9 (~driib@185.65.135.251)
[13:42:55] <hexnewbie> raxor2k: pass doesn't do anything. Do you mean return?
[13:42:55] *** Quits: aquaregia (~Guest33@rrcs-173-197-219-139.west.biz.rr.com) (Quit: Client closed)
[13:43:07] <raxor2k> hewnewbie: return what? false?
[13:43:17] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[13:43:17] <lambda> raxor2k: https://bpa.st/F3EA
[13:43:31] <bjs> raxor2k: just return on its own, it will end the function.  Or use `elif` rather than many `if`s
[13:43:37] *** Joins: kurfen (~kurfen@45.152.181.134)
[13:43:45] <lambda> raxor2k: `return` is short for `return None`
[13:43:55] <bjs> raxor2k: or make the conditions non-overlapping so that only one of them is true at a time
[13:43:56] <raxor2k> hmm.. who was that person who said "pass" would work
[13:44:05] <raxor2k> i always believed "pass" would work in such cases
[13:44:18] <bjs> raxor2k: I'm going to guess you misunderstood what pass did rather than the person got it wrong
[13:44:19] <hexnewbie> raxor2k: pass would only work if all your ifs have an else attached to them
[13:44:39] <hexnewbie> raxor2k: That is, the pass itself does not do anything, just allows you to have an empty if without the print inside
[13:44:49] <lambda> raxor2k: pass does literally nothing at all, writing 'pass' is the same as not writing anything at al
[13:44:53] <lambda> all*
[13:44:55] <bjs> raxor2k: pass doesn't do anything (literally).
[13:44:58] *** Quits: driib (~driib@185.195.233.165) (Ping timeout: 260 seconds)
[13:44:58] *** driib9 is now known as driib
[13:45:06] <raxor2k> bjs: "or make the conditions non-overlapping" i didnt quite understand that
[13:45:07] *** Quits: kurfen (~kurfen@45.152.181.134) (Client Quit)
[13:45:26] <bjs> raxor2k: if I write `if x is even: print("x is even") ;  if x == 8: print("x was 8")`   do you see how these conditions overlap?
[13:45:27] *** Joins: kurfen (~kurfen@45.152.181.134)
[13:45:54] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[13:46:04] <cerill> Hi, I have a newbie question. I submitted a PR and got a review comment I dont understand, and reviewer is apparantly on vacation for a week so was hoping I could get some advice here. I have a couple of lines looking something like: "lines.append(f"config_file = '{config_file}'") and the review comment was: "This stuff could use proper escaping "
[13:46:05] <cerill> <- what is it they want me to change?
[13:46:22] <bjs> raxor2k: you can see both prints because both ifs might be true at the same time.  If you only wanted to see the first print, you'd have to change the condition,  or `return` from the first if, or use an `elif` instead
[13:46:34] <raxor2k> bjs: yes
[13:46:44] <lambda> cerill: can you link the PR?
[13:46:46] <ChrisWarrick> cerill: what kind of file are you writing?
[13:47:07] <bjs> cerill: maybe they want you to write f"config_file = {config_file!r}" or some other specific kind of escaping of the config_file
[13:47:34] <bjs> but that seems unlikely(?)
[13:47:48] <raxor2k> lambda: i used "return" instead of pass, same thing still happening
[13:47:50] <bjs> raxor2k: your code is doing the same, you have many `if`s and it's possible for multiple of them to be true at the same time
[13:48:03] <raxor2k> bjs: ok i see your point
[13:48:23] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[13:48:28] <bjs> raxor2k: using return would work if you do it correctly in the right place,  return will just make the function end when it reaches the `return`
[13:49:55] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[13:51:22] <cerill> lambda its in a private repo unfortunately
[13:51:32] <cerill> ChrisWarrick: just a plain text config file
[13:51:41] <lambda> cerill: how is it parsed?
[13:51:41] <ChrisWarrick> cerill: plain text config file?
[13:52:05] <lambda> what if the filename contains a quote? what if it contains a newline?
[13:52:23] <hexnewbie> Question: If I have a Set that uses comparisons instead of hash to determine if an element is inside the set, it's more correct to leave the TypeError thrown when a non-comparable value is passed to __contains__(), instead of returning False, right? Say, I have Range('a', 'z') and Range(3, 10), 'a' in Range(3, 10) would raise a TypeError in my current code, and I assume that's the better behaviour
[13:52:42] <cerill> lambda: its not, so I suppose that is what they are after
[13:52:56] <bjs> hexnewbie: what do you mean "instead of hash"?  when you say compare do you mean == ?
[13:53:01] <bjs> I'm a little confused as to the setup
[13:53:13] <lambda> cerill: well if it's never parsed, it's not really a config file
[13:53:51] <bjs> raxor2k: https://bpa.st/A6IQ compare these functions for example
[13:53:54] <hexnewbie> bjs: set() uses hash(value) to find the value in the set. I use self.start <= value <= self.end
[13:54:05] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[13:54:08] <bjs> hexnewbie: well it uses == more importantly
[13:55:00] <bjs> hexnewbie: `x in some_set` doesn't look at just the hash, it asks if x == something_in_set
[13:55:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:56:05] <bjs> hexnewbie: if you want `4 in {Range(0, 10), Range("a", "z")}`  then you Range has to implement both __hash__ and __eq__.  But I can't see how to make Range work like this
[13:56:50] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Ping timeout: 260 seconds)
[13:56:50] *** Joins: xrogaan_ (~xrogaan@user/xrogaan)
[13:56:52] *** Quits: kurfen (~kurfen@45.152.181.134) (Quit: WeeChat 2.3)
[13:57:14] *** Joins: kurfen (~kurfen@45.152.181.134)
[13:57:32] <bjs> You'll have to build your own data structure and not use Python's `set`.
[13:58:19] <Berrox> How do I install pycurl in Windows with python 3.9? pip doesn't work and the unofficial build I can find just gives me this error: pycurl: libcurl link-time ssl backends (schannel) do not include compile-time ssl backend (openssl)
[13:58:57] *** Quits: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl) (Remote host closed the connection)
[13:59:34] *** Joins: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl)
[13:59:41] *** Quits: ubert (~Thunderbi@178.115.74.156.wireless.dyn.drei.com) (Ping timeout: 245 seconds)
[14:00:25] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[14:00:58] *** Joins: KSaunderson (~user@142.93.152.208)
[14:01:23] <KSaunderson> hey why does plt.imsave() not save the lines and text overlay i added to the plot?
[14:02:42] <KSaunderson> thx
[14:03:18] <Dcode200> man tail
[14:03:35] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Ping timeout: 256 seconds)
[14:03:41] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:03:41] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:03:57] *** Quits: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl) (Ping timeout: 258 seconds)
[14:05:01] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:05:32] *** Joins: kcrk (~kcrk@user/kcrk)
[14:08:05] *** Joins: lovelace (~Elspeth@2.24.23.175)
[14:08:07] <hexnewbie> bjs: I have class OrdinalRange that is a subset of Set: https://gitlab.com/milkok/typeatlas/-/blob/master/typeatlas/rangemath.py#L608  “'a' in Range(0, 30)” raises a TypeError, because 0 <= 'a' raises one. A set(range(0, 31)) would not, and I'm wondering if that's bad or correct behaviour to have in a set, or should I force a return False then (I guess I also need to return False for 3.76)
[14:08:23] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[14:10:05] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:10:11] <bjs> hexnewbie: oh, if you want it to have the set API then probably it shouldn’t raise typeerror, but this is a case where you should use your judgment
[14:11:14] <bjs> I’m confused why you talked about hash though if you’re not actually using set()
[14:12:23] <lovelace> hexnewbie that's because 'a' could be add to the set set(range(0, 31))
[14:12:24] <hexnewbie> Well, um, because set() would only throw TypeError when hash() fails, but would otherwise simply return False for everything that does not have an equality to an element.
[14:13:25] <bjs> it would also raise if equality over the elements raised
[14:14:04] <bjs> but sure, if you want it to behave like a set of numbers then it shouldn’t raise. whether it’s okay to not behave exactly like a set of numbers is up to you
[14:14:20] *** Parts: orangeextract (~orangeext@user/orangeextract) (Leaving)
[14:14:37] <hexnewbie> Thanks
[14:14:58] <rendar> what about writing the help string of a module? a """ """ string at the start of the file, after the imports?
[14:15:10] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[14:15:18] <rendar> or should i set it to a variable? e.g. __help__ = """ ... """
[14:15:46] <bjs> before the imports
[14:16:06] <rendar> ok
[14:16:09] <KSaunderson> nvm figured it out ,stackoverflow
[14:16:39] <bjs> rendar: it gets saved as __doc__
[14:16:52] <rendar> i see, thanks
[14:16:53] <bjs> like on classes and functions and things
[14:16:58] <rendar> yeah
[14:17:15] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:17:32] *** Quits: lovelace (~Elspeth@2.24.23.175) (Quit: Konversation terminated!)
[14:17:51] *** Joins: lovelace (~Elspeth@2.24.23.175)
[14:18:42] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[14:20:53] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[14:21:21] *** Joins: vit (~vit@chello085216193138.chello.sk)
[14:21:36] *** Joins: henistein (~henistein@2001:8a0:fc8f:9501:db9c:d667:7c93:373e)
[14:21:55] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 260 seconds)
[14:22:49] *** Joins: marcello42 (~mp@p5dedb36a.dip0.t-ipconnect.de)
[14:24:15] *** Joins: carl--- (~carl-@185.103.188.130)
[14:24:52] <henistein> I am trying to solve a simple toy problem about number sequence so I can learn about LSTM. My data is like this: X[20, 21, 22, 23] -> Y[24]. I am using pytorch and I made this model: https://bpa.st/H5LA
[14:25:03] *** vit is now known as freeworld
[14:25:14] <henistein> I want to know if this is the best model I can do to this problem using LSTM
[14:25:15] *** Quits: Catatonic (~Catatonic@ariel.whatbox.ca) (Quit: Quit)
[14:26:46] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[14:27:04] <raxor2k> bjs: how is your example related to mine ?
[14:27:04] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[14:27:06] <raxor2k> i dont see it
[14:27:20] *** freeworld is now known as vit
[14:27:51] <oneforall2> https://bpa.st/ZRKQ
[14:27:54] <henistein> If my data size is just 100 I need about 10000 epochs to get 0.9-1.0 score, if I increase my data size to 1000 it is really hard to get a good score even with +100000 epochs. I wonder if I am doing something wrong
[14:28:11] *** Joins: greedom (~greedom@2001:16b8:2e9d:6500:aaa8:4280:f68e:6d49)
[14:29:28] *** Quits: oz4ga (~tim@93.90.4.233) (Read error: No route to host)
[14:29:39] <bjs> raxor2k: you had multiple ifs that overlapped and didn’t want the second to trigger if the first did
[14:30:22] <bjs> and then my 3 functions g,h,i use each of the techniques that were suggested to you
[14:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[14:30:44] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[14:31:01] <raxor2k> bjs: ok so something like this then ? : https://bpa.st/MO5A
[14:31:06] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:31:11] <bjs> notice how in those 3 functions you won’t see the second if the first happens
[14:31:40] <rannnn8888> Someone here maybe how use TWS API good :D  ?
[14:32:58] <bjs> raxor2k: maybe? I don’t understand the point of the try
[14:33:19] <bjs> also have you seen "elif" before?
[14:33:23] <raxor2k> bjs: yes!! this worked
[14:33:28] <raxor2k> bjs: yes i know elif
[14:33:37] <raxor2k> and elif is sh*t and dont ask me why
[14:33:41] <raxor2k> elif never works for me
[14:33:56] <bjs> because you use it wrong and there’s nothing actually wrong with it?
[14:34:20] <raxor2k> a lot of times i have used elif and it hasnt been working, and then i switch to if and then it works
[14:34:29] <raxor2k> there is nothing you can say to me that convinces me to use elif
[14:34:40] <bjs> that doesn’t sound like a problem with elif
[14:34:41] <raxor2k> but thanks alot for this example you gave me, it works perfectly
[14:35:38] *** Joins: kmh (~kmh@2a00:6020:5004:6800:211e:7687:42cb:a081)
[14:37:01] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:37:04] <raxor2k> bjs: haha its so funny, i tried exactly this example earlier and it didnt work, but now it suddenly works : https://bpa.st/AOYQ
[14:37:09] <raxor2k> xD xD xD ¨
[14:37:21] *** Joins: nomic (~nomic@85.203.36.101)
[14:37:46] *** Quits: jay-m1262 (~jay-m@129.0.205.217) (Read error: Connection reset by peer)
[14:38:46] *** Quits: Keira (~k@lulzsec.co.uk) (Ping timeout: 244 seconds)
[14:40:09] <bjs> if it was exactly the same then it would’ve done the same thing earlier too
[14:40:23] <bjs> Python didn’t change since earlier
[14:41:22] *** Quits: vimart (~vimart@85.255.235.142) (Ping timeout: 252 seconds)
[14:42:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 244 seconds)
[14:42:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:45:22] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:47:17] *** Joins: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl)
[14:47:47] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[14:48:57] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:51:55] *** Joins: portalrat_ (~portalrat@user/portalrat)
[14:51:59] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[14:53:23] *** Joins: Catatonic (~Catatonic@ariel.whatbox.ca)
[14:53:26] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 245 seconds)
[14:53:47] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 264 seconds)
[14:54:53] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:55:39] *** Joins: kvik (~kvik@80.240.23.8)
[14:55:41] <kvik> ircx -t '#python' -s irc.libera.kvik
[14:55:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:56:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:56:44] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[14:58:14] *** Quits: Catatonic (~Catatonic@ariel.whatbox.ca) (Client Quit)
[14:59:09] *** Joins: pycurious (~Adium@user/pycurious)
[14:59:16] *** Quits: carl--- (~carl-@185.103.188.130) (Ping timeout: 245 seconds)
[15:01:09] *** Quits: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl) (Remote host closed the connection)
[15:01:21] *** Joins: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl)
[15:01:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[15:02:11] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[15:02:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:02:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:07:40] *** Joins: rk04 (~rk04@user/rajk)
[15:08:26] *** Joins: mfe_ (~default@84-113-156-178.cable.dynamic.surfer.at)
[15:08:31] <mfe_> I got the following output with print(img.shape) (648,968,3) now I want to get something like that (648,968). I though I can do that with array "selectors" by img.shape[:,:] or img.shape[1,1] but none of them worked
[15:08:37] *** Quits: kvik (~kvik@80.240.23.8) (Read error: Connection reset by peer)
[15:08:48] *** Joins: oz4ga (~tim@93.90.4.233)
[15:09:26] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 260 seconds)
[15:09:42] *** Joins: DerpGusta (~quassel@user/derpgusta)
[15:10:59] *** Joins: Naan (~naan@user/naan)
[15:12:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[15:12:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:15:57] <Repiphany> img[:,:,0]
[15:15:57] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[15:16:12] <Repiphany> would get you the r channel
[15:17:10] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 258 seconds)
[15:17:44] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[15:17:48] *** Joins: masta_ (~oyster@user/masta/x-2645138)
[15:17:52] *** Joins: kvik (~kvik@80.240.23.8)
[15:18:01] <Repiphany> mfe_:
[15:21:21] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Quit: ZNC 1.8.2 - https://znc.in)
[15:22:04] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[15:23:08] *** Joins: jay-m1262 (~jay-m@129.0.204.221)
[15:24:52] *** Joins: DaNeenjah (~jake@adsl-74-230-9-207.hsv.bellsouth.net)
[15:28:08] <kvik> hello
[15:28:08] <kvik> i'm trying to find a generic binary pack / unpack library for python, something similar to lua's string.pack / unpack https://www.lua.org/manual/5.3/manual.html#6.4.2
[15:28:08] <kvik> so far i've been using bytearray() methods, which work but are quite tedious to write in comparison to lua. any recommendations?
[15:28:10] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:28:54] *** Joins: mickey8 (~user@user/mickey)
[15:30:32] <Affliction> kvik: looks very close to https://docs.python.org/3/library/struct.html
[15:31:20] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[15:31:32] <kvik> Affliction: oh wow, that must be it :)
[15:31:35] <kvik> thank you
[15:31:50] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:32:37] <Affliction> There's also https://pypi.org/project/construct/ which is nice when dealing with more complex formats
[15:32:40] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[15:34:26] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[15:34:30] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[15:34:57] <Repiphany> https://numpy.org/doc/stable/reference/generated/numpy.frombuffer.html for less compex 1d data
[15:35:16] <kvik> nice, glad i asked :)
[15:35:47] *** Joins: vakosel (~vakosel@ppp089210242231.access.hol.gr)
[15:35:57] <vakosel> :q
[15:35:59] <vakosel> clear
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:05] *** Parts: vakosel (~vakosel@ppp089210242231.access.hol.gr) ()
[15:36:20] *** Joins: Atque (~Atque@user/atque)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[15:37:49] <enrh> Is it possible to enumerate the uninstantiated class attributes for an instance?
[15:38:22] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 260 seconds)
[15:38:49] <bookworm> what do you call uninstantiated?
[15:39:27] *** Joins: fikran (~fikran@user/fikran)
[15:39:27] <enrh> https://bpa.st/BI5Q
[15:39:28] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[15:39:39] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[15:39:51] <enrh> One can assert Foo.bar == 'baz' but bar is not in __dict__
[15:41:04] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[15:41:31] <bookworm> enrh: dir(Foo)
[15:42:16] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Remote host closed the connection)
[15:42:37] <ChrisWarrick> enrh: you might be interested in getattr(Foo, "bar", None) or hasattr(Foo, "bar")
[15:43:12] <enrh> ChrisWarrick, only useful when I know the name of attribute- trying to get list of attributes like bar, from an instance
[15:43:23] <ChrisWarrick> enrh: ah, then you want dir
[15:43:52] *** Quits: greedom (~greedom@2001:16b8:2e9d:6500:aaa8:4280:f68e:6d49) (Remote host closed the connection)
[15:43:57] <bookworm> then simply filter "^__.*" I guess
[15:44:01] <enrh> bookworm, I meant to say foo = Foo()  and then foo.bar == 'baz' but bar is not in __dict__
[15:44:03] *** Joins: rk04 (~rk04@user/rajk)
[15:44:11] <enrh> How can I find bar?
[15:44:12] <bookworm> it's still in dir()
[15:44:15] *** Joins: carl--- (~carl-@185.103.188.130)
[15:44:16] <enrh> Negative
[15:44:21] *** Joins: vakosel (~vakosel@ppp089210242231.access.hol.gr)
[15:44:28] <bookworm> positive
[15:44:43] <enrh> Okay maybe I missed it :)
[15:44:44] <enrh> One sec
[15:45:14] <enrh> Would you look at that, I was doing it wrong
[15:45:24] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:45:56] *** Parts: vakosel (~vakosel@ppp089210242231.access.hol.gr) ()
[15:45:56] <bookworm> considering it's a class attribute, it doesn't matter if you look at it at the class level though
[15:46:19] <bookworm> out of interest, why do you need that?
[15:46:25] *** Joins: KeiraT (~k@lulzsec.co.uk)
[15:47:01] <enrh> Thank you for the help
[15:47:05] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 260 seconds)
[15:55:49] *** Joins: Helle (~helle@80-100-16-232.ip.xs4all.nl)
[15:56:19] <enrh> bookworm, looking to replicate some of the functionality of pydantic.BaseModel at instantiation w/o all the bells and whistles that comes with the rest of the model
[15:56:42] <enrh> And it works, also forget about some of the inspect utils like ismethod
[15:57:34] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-1c3c-a25a-4835-4f09.res6.spectrum.com) (Quit: Leaving.)
[15:57:42] *** Joins: vakosel (~vakosel@ppp089210242231.access.hol.gr)
[15:57:49] <bookworm> ^^ you could just choose a statically typed language
[15:57:57] *** Parts: vakosel (~vakosel@ppp089210242231.access.hol.gr) ()
[15:58:07] *** Joins: orangeextract (~orangeext@user/orangeextract)
[15:59:13] <enrh> ? I use MyPy and pydantic.validate_arguments pretty heavily
[16:05:33] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[16:06:36] *** Quits: masta_ (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[16:09:23] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 264 seconds)
[16:10:13] *** Quits: gitly (~gitly@85.255.232.230) (Quit: WeeChat 3.3)
[16:11:47] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:13:28] *** Joins: gitly (~gitly@85.255.232.230)
[16:15:58] *** Quits: avikalp (~avikalp@49.36.99.188) (Read error: Connection reset by peer)
[16:19:04] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:19:07] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[16:19:08] *** Quits: Disposeable-Nick (~Ident@user/disposeable-nick) (Quit: Leaving)
[16:19:22] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[16:19:24] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:19:43] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[16:19:53] *** Joins: Pickchea (~private@user/pickchea)
[16:19:59] <Feuermagier> How can I assert that some "bytes" do not contain one specific byte (for example no 0x20)?
[16:20:07] *** Joins: vakosel (~vakosel@ppp089210242231.access.hol.gr)
[16:20:12] *** Quits: vakosel (~vakosel@ppp089210242231.access.hol.gr) (Client Quit)
[16:20:32] *** Joins: avikalp (~avikalp@49.36.99.188)
[16:21:05] *** Joins: Fiji- (~Fiji@user/fiji)
[16:21:59] <bookworm> loop over the array and check?
[16:22:27] <bookworm> any(x == whatever for x in $iter)
[16:22:33] <Feuermagier> bookworm, I could. But I have a feeling that python probably has some really cool way of doing that
[16:23:03] <hexnewbie> Feuermagier: assert 0x20 not in b'abc' # replace b'abc' with your bytes object
[16:23:03] <bookworm> that is the cool way, after all that's what you have to do unless you have a hash map
[16:23:15] <bookworm> as right, not in
[16:23:29] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[16:23:34] <Feuermagier> hexnewbie, ah, perfect
[16:23:55] <hexnewbie> Feuermagier: That's literally for asserting (you think it's not, code will be buggy if it is, and you want to throw an AssertionError in debug mode), otherwise do a simple check and do whatever you want
[16:24:16] *** Joins: Atque (~Atque@user/atque)
[16:24:33] <Feuermagier> hexnewbie, I want to abort execution if there is one, as I'd need to rewrite my code if there is
[16:24:39] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[16:24:50] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:25:07] <hexnewbie> Feuermagier: Yeah, sounds like assert
[16:25:20] <Feuermagier> does python have a "debug" mode - as in will the assert trigger if I press "run" in my IDE or will it only trigger in "debug" mode?
[16:26:20] <hexnewbie> Feuermagier: assertions are not checked under some condition (I think whenever __debug__ is False), but if the conditions under which this occurs are the same as they were 15 years ago, I do not know
[16:26:26] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[16:26:36] *** Quits: raxor2k (~raxor2k@78.158.233.120) ()
[16:26:42] *** Quits: magla (~gelignite@55d4df94.access.ecotel.net) (Quit: Stay safe!)
[16:27:56] <hexnewbie> Feuermagier: https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement
[16:28:35] *** Joins: dez (uid92154@user/dez)
[16:29:52] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[16:30:49] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 252 seconds)
[16:31:02] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[16:31:11] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:31:25] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 244 seconds)
[16:31:34] *** Joins: djhankb (~djhankb@208.113.164.68)
[16:33:06] *** Quits: haniaF (~haniaF@79.191.104.229.ipv4.supernova.orange.pl) (Quit: ZNC 1.8.2 - https://znc.in)
[16:33:19] *** Quits: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl) (Remote host closed the connection)
[16:33:45] *** Joins: Klinda (~superleag@user/klinda)
[16:33:56] *** Joins: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl)
[16:34:06] *** Joins: nos0u1 (~nosoul@78-141-67-137.dynamic.orange.sk)
[16:34:20] *** Quits: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl) (Remote host closed the connection)
[16:34:32] *** Joins: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl)
[16:37:17] *** Joins: BlessJah (~BlessJah@user/blessjah)
[16:37:51] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 265 seconds)
[16:39:12] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[16:39:51] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:41:16] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[16:43:02] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[16:47:42] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[16:47:51] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:51:38] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 260 seconds)
[16:51:39] *** Quits: jay-m1262 (~jay-m@129.0.204.221) (Read error: Connection reset by peer)
[16:52:30] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[16:54:26] <very_sneaky> does anybody know of a good client/server communication implementation that's not HTTP, with a nice API? looking to research different request/response models for implementation guidance
[16:55:20] *** Joins: BlessJah (~BlessJah@user/blessjah)
[16:55:25] <grym> very_sneaky: https://gemini.circumlunar.space/docs/specification.gmi ?
[16:55:30] <grym> it's intentionally weird
[16:56:43] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 244 seconds)
[16:57:10] <very_sneaky> grym: nice, cheers
[16:57:17] <kvik> very_sneaky: i'd say take a look at 9p2000. not aware of python implementations though.
[16:57:51] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[16:58:23] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[16:58:23] <very_sneaky> i'm looking for something similar to that but abstracted away from the socket - i'm less interested in the serialized component, more what a client library would implement/message data structure prior to serialization
[16:58:54] <very_sneaky> basically, trying to inform what my client and server message construction looks like
[16:59:40] <very_sneaky> my use case is closer to an in-memory message passing architecture
[17:00:22] <grym> very_sneaky: https://github.com/cbrews/ignition ?
[17:00:56] *** Joins: jay-m1262 (~jay-m@129.0.204.221)
[17:01:44] <very_sneaky> yep, that's more what i was looking for :)
[17:01:47] *** Joins: BlessJah (~BlessJah@user/blessjah)
[17:01:48] <very_sneaky> looks pretty similar to requests
[17:03:07] <grym> i wonder why :)
[17:03:21] *** Joins: rsx (~dummy@ppp-188-174-139-37.dynamic.mnet-online.de)
[17:03:21] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[17:05:00] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[17:05:59] *** Joins: Pickchea (~private@user/pickchea)
[17:07:36] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:08:54] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[17:09:48] *** Quits: nomic (~nomic@85.203.36.101) (Quit: Leaving)
[17:11:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[17:13:05] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:14:06] *** Joins: slav0nic (slav0nic@python.su)
[17:15:10] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 260 seconds)
[17:15:27] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[17:15:33] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[17:15:54] *** Quits: tg (~tg@rockylinux/infra/tg) (Client Quit)
[17:16:00] <tsujp> I have an object of a custom class `GameState` and I want to copy that object such that changes to the new object do not affect the old. I tried `deepcopy` but it's still by reference -- how can I achieve this?
[17:19:17] *** Parts: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl) (Leaving...)
[17:20:04] *** Quits: Aminda (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[17:20:06] *** Joins: rendar (~rendar@user/rendar)
[17:20:19] *** Quits: ionface (~ionface@user/ionface) (Quit: ionface)
[17:21:13] *** Joins: Aminda (~sid12355@Feneas/Mikaela)
[17:23:40] *** Joins: n0sou1 (nosoul@gateway/vpn/protonvpn/nosoul)
[17:24:13] <tsujp> oh it was because i made them class properties
[17:24:23] <tsujp> TIL self.foo is different to `foo` on the class
[17:24:38] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-4c3f-03f6-4a4f-4ab9.res6.spectrum.com)
[17:25:20] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[17:25:21] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[17:26:15] *** Quits: nos0u1 (~nosoul@78-141-67-137.dynamic.orange.sk) (Ping timeout: 260 seconds)
[17:27:23] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 264 seconds)
[17:28:03] *** Joins: zeden (~zeden@user/zeden)
[17:29:47] *** Quits: n0sou1 (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[17:29:48] <grym> tsujp: very dofferent
[17:29:57] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[17:30:02] *** Joins: n0sou1 (nosoul@gateway/vpn/protonvpn/nosoul)
[17:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[17:30:47] *** n0sou1 is now known as nosoul
[17:30:59] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Ping timeout: 264 seconds)
[17:31:06] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:31:17] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[17:31:19] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Client Quit)
[17:31:26] *** Parts: henistein (~henistein@2001:8a0:fc8f:9501:db9c:d667:7c93:373e) ()
[17:31:39] *** Parts: Dcode200 (~What@87-63-32-71-dynamic.dk.customer.tdc.net) ()
[17:34:06] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[17:34:59] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Client Quit)
[17:35:17] *** xrogaan_ is now known as xrogaan
[17:35:18] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[17:35:53] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[17:36:29] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[17:36:29] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Client Quit)
[17:37:09] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:38:51] *** Quits: kmh (~kmh@2a00:6020:5004:6800:211e:7687:42cb:a081) (Quit: Leaving)
[17:39:16] *** Quits: lucidreamachine (~brian@2600:1700:1c60:16c0:e71d:31e7:a5c4:5ea1) (Ping timeout: 245 seconds)
[17:40:36] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[17:41:09] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:42:23] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[17:43:31] *** Joins: superboot (~agentgasm@user/superboot)
[17:45:08] *** Quits: Coldblackice (~c@user/coldblackice) (Ping timeout: 258 seconds)
[17:46:51] *** Quits: jay-m1262 (~jay-m@129.0.204.221) (Ping timeout: 244 seconds)
[17:46:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[17:47:40] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[17:47:59] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[17:48:47] *** Joins: fikran (~fikran@user/fikran)
[17:50:40] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:52:35] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:52:44] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Client Quit)
[17:53:02] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 244 seconds)
[17:53:15] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[17:54:14] *** Joins: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl)
[17:55:56] *** Joins: wladimir (~doforlove@user/doforlove33)
[17:56:03] *** Joins: magla (~gelignite@55d4df94.access.ecotel.net)
[17:56:38] *** Quits: wladimir (~doforlove@user/doforlove33) (Client Quit)
[17:57:01] *** Quits: Helle (~helle@80-100-16-232.ip.xs4all.nl) (Ping timeout: 258 seconds)
[17:57:07] *** Quits: grandrew (~grandrew@c-73-71-100-231.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[17:57:15] *** Joins: wladimir (~doforlove@user/doforlove33)
[17:57:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[17:57:33] *** Quits: wladimir (~doforlove@user/doforlove33) (Client Quit)
[17:57:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:58:01] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 245 seconds)
[17:58:15] *** Joins: ethrl (uid524335@user/doforlove33)
[17:58:55] *** Quits: cyber-hagen (~cyber-hag@public-gprs216647.centertel.pl) (Ping timeout: 260 seconds)
[18:00:58] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[18:01:20] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[18:01:46] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:02:20] *** Joins: mickey8 (~user@user/mickey)
[18:02:52] *** Quits: redrum88 (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[18:04:12] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Client Quit)
[18:04:17] *** Joins: jay-m1262 (~jay-m@129.0.204.221)
[18:04:44] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[18:07:04] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[18:07:38] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Client Quit)
[18:08:01] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[18:08:37] *** Joins: Pickchea (~private@user/pickchea)
[18:08:38] *** Joins: redrum88 (~redrum88@user/redrum88)
[18:08:49] *** Quits: jcass (~jcass@50-0-146-31.dsl.dynamic.fusionbroadband.com) (Quit: Client closed)
[18:15:02] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[18:15:24] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[18:17:06] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[18:17:11] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[18:17:50] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 244 seconds)
[18:24:06] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[18:24:31] *** Joins: srhm (~srhm@user/srhm)
[18:26:58] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:28:16] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:28:21] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[18:30:59] *** Joins: djhankb (~djhankb@208.113.164.68)
[18:31:17] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 244 seconds)
[18:32:38] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:32:55] *** Quits: Fiji- (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[18:37:06] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Ping timeout: 260 seconds)
[18:40:16] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[18:41:30] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-0d00-af10-da91-027d.res6.spectrum.com)
[18:44:34] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-65d3-fc79-f367-48ae.res6.spectrum.com)
[18:48:11] *** Quits: orangeextract (~orangeext@user/orangeextract) (Quit: Leaving)
[18:49:47] <Payam> so you can not have a yield keyword in a async function?
[18:50:09] *** Joins: CoolerX (~CoolerX@user/coolerx)
[18:51:21] *** Joins: node1 (~node1@user/node1)
[18:51:29] *** Joins: henistein (~henistein@2001:8a0:fc8f:9501:e84c:2e88:ae63:c9cb)
[18:53:36] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[18:54:00] *** Quits: jay-m1262 (~jay-m@129.0.204.221) (Ping timeout: 244 seconds)
[18:55:16] <jinsun> Payam: you can
[18:55:25] <Payam> how?
[18:55:35] *** Joins: zmt00 (~zmt00@user/zmt00)
[18:55:47] <jinsun> just write yield whatever
[18:56:05] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[18:56:43] <Ninpo> Payam: https://www.python.org/dev/peps/pep-0525/
[18:57:04] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:57:22] <Ninpo> search async def ticker, there's an example
[18:57:45] <Payam> got it
[18:57:55] <Payam> thanks Ninpo and jinsun
[18:59:35] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[18:59:51] *** Parts: redrum88 (~redrum88@user/redrum88) (Closing Window)
[19:00:44] *** Quits: avikalp (~avikalp@49.36.99.188) (Ping timeout: 244 seconds)
[19:01:30] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[19:02:24] *** Joins: han-solo (~han-solo@user/han-solo)
[19:02:37] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[19:04:16] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-65d3-fc79-f367-48ae.res6.spectrum.com) (Ping timeout: 245 seconds)
[19:05:00] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[19:05:15] <Payam> https://bpa.st/CFPA I still get 'TypeError: a coroutine was expected, got <async_generator object get_projects.get_branches at 0x7f17622f9ca0>'
[19:05:52] *** Joins: hel0 (~hel0@user/redrum88)
[19:06:17] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[19:07:30] *** Joins: rk04 (~rk04@user/rajk)
[19:09:31] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 244 seconds)
[19:10:02] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 244 seconds)
[19:10:04] *** Joins: jinsun__ (~quassel@user/jinsun)
[19:11:41] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[19:12:09] *** Quits: rk04 (~rk04@user/rajk) (Ping timeout: 258 seconds)
[19:12:37] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 244 seconds)
[19:14:39] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-a16c-f253-0f7d-f003.res6.spectrum.com)
[19:15:56] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:16:00] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[19:19:11] *** haise0 is now known as haise01
[19:19:13] <jinsun__> Payam: putting yield in async def makes it async generator, but create_task wants coroutine
[19:19:22] *** jinsun__ is now known as jinsun
[19:19:26] *** Quits: Mogget (Mogget@vogon.moshwire.com) (Quit: WeeChat 2.7.1)
[19:20:01] <jinsun> Payam: do that async for inside another async def that doesn't have yield, and pass that to create task
[19:20:56] <jinsun> or just don't create task, directly run the async for
[19:21:02] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[19:21:10] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Ping timeout: 260 seconds)
[19:21:24] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[19:23:02] *** Joins: cdown_ (~cdown@89.32.122.5)
[19:24:21] *** Joins: Bakunin (~Lindis@user/lindis)
[19:25:19] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:25:38] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 260 seconds)
[19:25:40] *** cdown_ is now known as cdown
[19:25:55] *** Joins: Klinda (~superleag@user/klinda)
[19:25:58] *** Joins: white_magic (~white_mag@23.19.19.209)
[19:26:27] <white_magic> Greetings. Anyone here use SqlModel with SqlAlchemy?
[19:27:40] *** Joins: weibullguy2 (weibullguy@gateway/vpn/protonvpn/weibullguy)
[19:28:15] *** weibullguy2 is now known as weibullguy
[19:28:40] *** Joins: Mogget (Mogget@vogon02.moshwire.com)
[19:29:17] *** Quits: Aminda (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[19:29:20] *** Quits: Mogget (Mogget@vogon02.moshwire.com) (Client Quit)
[19:29:49] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[19:29:50] *** Joins: Aminda (~sid12355@Feneas/Mikaela)
[19:29:59] <tsujp> can I add functionality to the default __deepcopy__ without having to re-implement the default?
[19:30:17] *** Joins: srhm (~srhm@user/srhm)
[19:30:50] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[19:31:16] *** Quits: wolfgang (~wolfgang@101.174.167.116) (Remote host closed the connection)
[19:33:16] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:33:50] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[19:34:02] *** Joins: dez (uid92154@user/dez)
[19:34:10] *** Joins: Mogget (Mogget@vogon02.moshwire.com)
[19:34:43] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[19:35:20] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[19:35:27] *** Quits: jonaskabrink (~jonaskabr@ip1f128470.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[19:35:34] <tsujp> how can I have a class variable shared (the same value) between all instances of a class?
[19:36:12] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 265 seconds)
[19:36:32] *** Joins: upsala (~zcb@185.213.155.160)
[19:37:28] <Payam> jinsun, a sec
[19:38:47] *** Joins: Auron (~Auron956@user/auron)
[19:38:49] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[19:39:35] *** Joins: ubert (~Thunderbi@91.141.57.54.wireless.dyn.drei.com)
[19:40:14] <Payam> jinsun, so I call get_branches from that async function. but do I have to await get_branches in that function??
[19:40:49] <jinsun_> <tsujp> "how can I have a class variable..." <- you don't have to do anything, they are shared between instances
[19:41:09] <tsujp> it shares if it's a list but not if it's just an int hmmmmmmm jinsun
[19:41:12] <tsujp> jinsun_
[19:42:49] <jinsun_> Payam: better would be to not create_task at all, then you don't need another function, the async for is enough
[19:43:17] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[19:44:33] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-a16c-f253-0f7d-f003.res6.spectrum.com) (Quit: Leaving.)
[19:44:38] *** Joins: Atque (~Atque@user/atque)
[19:44:48] <Payam> jinsun_, This is the error I get now: https://bpa.st/LZ3A
[19:44:49] <jinsun_> tsujp: if you assign to self.variable then it becomes instance variable, access the class variable using ClassName.variable if you want to modify it for all instances
[19:45:04] <tsujp> oh okay jinsun_
[19:46:38] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[19:47:01] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[19:47:03] <jinsun_> Payam: that looks unrelated to async, looks like you are trying to pass a list to json.load which you can't
[19:48:11] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[19:48:24] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Remote host closed the connection)
[19:48:46] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 265 seconds)
[19:48:59] *** Quits: upsala (~zcb@185.213.155.160) (Ping timeout: 264 seconds)
[19:49:02] <Payam> yeah I saw it. thanks :)
[19:50:18] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:5f5:9b58:962f:5742) (Read error: Connection reset by peer)
[19:50:45] *** Joins: upsala (~zcb@185.254.75.51)
[19:51:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[19:56:10] *** Quits: yac (~user@user/yac) (Ping timeout: 260 seconds)
[19:56:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[19:56:30] <Payam> jinsun_, I was under impression that you should always have a task when dealing with asyncio
[19:56:47] *** Quits: Echoz (~chris@user/echoz) (Quit: WeeChat 3.0.1)
[19:58:08] *** Joins: fikran (~fikran@user/fikran)
[19:58:28] <jinsun> there are some asyncio functions that take only tasks and not coroutine
[19:58:29] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[19:58:53] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[19:59:05] <Payam> okej
[19:59:20] <jinsun> but that doesn't mean you always have to create_task, and for your case of looping over async generator it was definitely useless
[19:59:40] *** Quits: zepolen (~zepolen@2a02:587:862e:2f17:3280:1a2d:f367:f8f0) (Ping timeout: 260 seconds)
[20:00:20] *** Quits: driib (~driib@185.65.135.251) (Quit: Ping timeout (120 seconds))
[20:00:29] <Payam> thanks
[20:00:36] *** Joins: driib (~driib@185.65.135.251)
[20:02:07] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Quit: Leaving)
[20:02:55] *** Joins: zepolen (~zepolen@2a02:587:8625:db90:7403:55bd:fb54:a40f)
[20:04:27] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:05:19] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 244 seconds)
[20:05:48] *** Joins: CoolerX (~CoolerX@user/coolerx)
[20:06:20] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:06:34] <Payam> what is the difference between python module and class?
[20:06:56] <Payam> is a module the file and class a part of a module?
[20:07:58] *** Quits: driib (~driib@185.65.135.251) (Quit: Ping timeout (120 seconds))
[20:08:08] *** Joins: driib (~driib@185.65.135.251)
[20:08:22] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:08:53] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 258 seconds)
[20:08:53] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 258 seconds)
[20:09:08] <nanonyme> Payam, modules are a way to organize code, classes are about OO
[20:09:23] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 264 seconds)
[20:11:29] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 265 seconds)
[20:11:50] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:11:55] <Payam> I have sometimes problem undrestanding imports. https://bpa.st/JZSA For instance, class myclass.py imports Engine. but in main.py the Engin is imported via myclass.py. Is it a correct way? or do all classes get imported once for the whole project?
[20:12:18] *** Quits: upsala (~zcb@185.254.75.51) (Ping timeout: 260 seconds)
[20:12:41] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Quit: Leaving...)
[20:13:57] *** Joins: upsala (~zcb@185.213.155.160)
[20:14:47] *** Quits: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 264 seconds)
[20:15:39] *** Joins: bloody (~bloody@user/bloody)
[20:15:47] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[20:15:48] <raek> code in the top level of the module is only executed the first time the module is imported
[20:16:33] *** Quits: white_magic (~white_mag@23.19.19.209) (Quit: Client closed)
[20:16:49] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[20:18:01] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 245 seconds)
[20:18:08] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[20:18:30] <han-solo> Payam: usually one don't have a class per module. So you'd be putting your classes in a module like `mymodule.py` will have the `MyClass`
[20:18:36] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[20:19:47] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 244 seconds)
[20:20:56] *** Quits: Aminda (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[20:21:24] *** Joins: Aminda (~sid12355@Feneas/Mikaela)
[20:21:39] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[20:21:57] *** Joins: Joel (~jjshoe@user/joel)
[20:22:32] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Client Quit)
[20:23:03] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:23:23] *** Joins: damonlynch (~ngaio@static-68-235-44-55.cust.tzulo.com)
[20:24:30] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[20:25:06] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[20:26:24] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[20:27:28] *** Quits: jwhisnant_ (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[20:27:40] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[20:28:12] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[20:28:49] *** Quits: cybniv (~niv@limbo.cypherpunks.io) (Ping timeout: 258 seconds)
[20:30:56] *** Joins: djhankb (~djhankb@208.113.164.68)
[20:31:23] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:31:48] *** Joins: paul424 (~tom@ip-31-0-123-70.multi.internet.cyfrowypolsat.pl)
[20:33:59] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 264 seconds)
[20:34:31] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[20:34:57] *** Quits: lovelace (~Elspeth@2.24.23.175) (Ping timeout: 258 seconds)
[20:36:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:36:07] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[20:37:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:39:50] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[20:41:40] *** Quits: lannonh (spiderman@user/lannonh) (Ping timeout: 260 seconds)
[20:42:11] *** Quits: carl--- (~carl-@185.103.188.130) (Ping timeout: 245 seconds)
[20:42:30] *** Quits: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 244 seconds)
[20:42:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[20:42:49] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Remote host closed the connection)
[20:43:10] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[20:43:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:43:23] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 265 seconds)
[20:43:36] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[20:43:43] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:44:49] *** Joins: lovelace (~Elspeth@2.24.23.175)
[20:45:03] <ChrisWarrick> and even if you have those classes in different modules, I would import from the module where it is defined, not from some other random module that imports it
[20:45:09] *** Joins: Narrat (~omnius@p200300df5f49119906ea56fffe2e7cdc.dip0.t-ipconnect.de)
[20:45:14] <ChrisWarrick> so that it’s clear where to look for its code
[20:45:15] *** Joins: akk (~akk@75.161.146.115)
[20:45:43] *** Quits: zerotypic (~zerotypic@66.96.192.176) (Quit: Lost terminal)
[20:46:17] *** Joins: jazzy (~jaziz@user/jaziz)
[20:48:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[20:49:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:49:14] *** Joins: rk04 (~rk04@user/rajk)
[20:50:16] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 244 seconds)
[20:50:25] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 260 seconds)
[20:50:35] *** Quits: rk04 (~rk04@user/rajk) (Client Quit)
[20:50:38] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[20:51:03] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 258 seconds)
[20:51:23] *** Joins: Klinda (~superleag@user/klinda)
[20:53:26] *** Joins: frostschutz (~frostschu@2a01:c22:d5c3:cc00:b3d4:6ce4:ac34:d4f8)
[20:54:15] *** Joins: spiderman (~spiderman@user/spiderman)
[20:54:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:54:23] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 244 seconds)
[20:55:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:56:50] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Gone.)
[20:57:06] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[20:57:32] *** Quits: lovelace (~Elspeth@2.24.23.175) (Quit: Konversation terminated!)
[20:58:07] *** Quits: haise01 (~haise01@user/haise01) (Ping timeout: 252 seconds)
[20:58:10] *** Joins: lovelace (~Elspeth@2.24.23.175)
[20:58:19] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[20:59:07] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[20:59:28] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:59:49] *** Joins: regulate (~regulate@koduro.com)
[21:00:04] *** Joins: Macuser (~Macuser@216.30.159.201)
[21:01:33] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[21:01:58] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[21:04:09] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[21:04:17] *** Joins: PixelRobot (~PixelRobo@139.47.80.69)
[21:04:25] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[21:04:27] *** Joins: Praise (~Fat@user/praise)
[21:04:56] *** Quits: PixelRobot (~PixelRobo@139.47.80.69) (Remote host closed the connection)
[21:05:36] *** Quits: akimbo (~akimbo@customer-145-40-27-9.stosn.net) (Quit: Ping timeout (120 seconds))
[21:05:50] *** Joins: wolfgang (~wolfgang@101.174.167.116)
[21:06:49] *** Quits: \mSg (mSg@user/msg/x-0285936) (Read error: Connection reset by peer)
[21:08:03] *** Joins: CoolerX (~CoolerX@user/coolerx)
[21:09:05] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[21:09:31] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[21:09:58] *** Joins: \mSg (mSg@user/msg/x-0285936)
[21:10:13] *** Quits: emerent (~quassel@p200300cd5748559eba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[21:10:23] *** Joins: emerent (~quassel@p200300cd574855b8ba27ebfffed28a59.dip0.t-ipconnect.de)
[21:11:14] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[21:12:26] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[21:12:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:14:23] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[21:15:02] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:15:49] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:15:52] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[21:16:10] *** Joins: asa22 (~asa22@103.29.71.186)
[21:16:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[21:16:18] *** Joins: bninja (~bloodninj@user/bloodninja)
[21:16:29] <asa22> anybody know the syntax to add multiple styles to a paragraph in python-docx
[21:16:49] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[21:16:52] <asa22> I cant seem to find the correct one, it works with a single style like this style='Strong'
[21:17:08] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 244 seconds)
[21:17:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:18:07] *** Joins: avikalp (~avikalp@49.36.99.188)
[21:19:30] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 260 seconds)
[21:19:30] *** Joins: fluffyballoon (~user@131.93.208.196)
[21:20:02] <akk> asa22: You can add runs, like para.add_run("blah"); fun.font.size = docx.shared.Pt(14); run = para.add_run("more stuff");
[21:20:10] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Ping timeout: 260 seconds)
[21:20:36] *** Quits: fluffyballoon (~user@131.93.208.196) (Client Quit)
[21:20:56] *** Joins: fluffyballoon (~user@131.93.208.196)
[21:21:03] <akk> That's for the docx module you get with pip install python-docx; I never had any luck with the one you get with pip install docx.
[21:21:29] <asa22> yea im using python-docx
[21:21:53] <asa22> but what you said can be used to apply multiple styles to the same text? like I want a word to be bold and underlined and centered
[21:21:59] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 264 seconds)
[21:22:18] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 244 seconds)
[21:22:54] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:23:14] <akk> Yes, you should be able to have runs with different styles within the same paragraph. At least I've mixed font sizes.
[21:23:28] <akk> and bold/nonbold
[21:23:30] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[21:23:41] <asa22> no I mean, the same run needs to be bold and at the same time underlined
[21:24:19] <akk> yes, you should be able to add multiple styles to one run
[21:24:24] <asa22> how
[21:24:33] <akk> though I think all I've done personally is bold and font size.
[21:25:22] <asa22> only way I found is to add 2 styles, one like style='Strong' and the other at the end like .underline = True
[21:25:32] <asa22> but if I want 3 styles then I dont have space for the third one
[21:25:57] <mickey8> why would box, label, count = cv.detect_common_objects(img) throw an IndexError: invalid index to scalar variable. at me?
[21:26:29] <akk> asa22: I do run.font.size = ... followed by run.bold = True, I would assume that I could then add run.underline = True though I haven't done underlines.
[21:26:53] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 265 seconds)
[21:27:51] *** Joins: Wafficus (~Wafficus@70.126.240.148)
[21:27:53] <akk> asa22: I've only done pretty simple things -- everything I know about python-docx is in https://github.com/akkana/scripts/blob/master/vote411export.py (starting around line 175)
[21:28:17] <Wafficus> hi there, question: How do I force list(filter()) to list directories from A to Z
[21:28:18] <Wafficus> https://bpa.st/FTTQ
[21:29:30] *** Quits: death916 (~death916@user/death916) (Ping timeout: 260 seconds)
[21:30:24] <han-solo> you mean, you want them sorted ?
[21:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[21:30:46] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[21:31:09] *** Joins: djhankb (~djhankb@208.113.164.68)
[21:31:32] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[21:32:02] *** Quits: rsx (~dummy@ppp-188-174-139-37.dynamic.mnet-online.de) (Quit: rsx)
[21:32:04] *** Quits: davor (~davor@user/davor) (Ping timeout: 258 seconds)
[21:32:20] <asa22> akk I understood now, thanks a lot, it worked :D
[21:32:21] <han-solo> also, just use pathlib
[21:32:23] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[21:33:39] *** Joins: mxp (~mxp@185.16.205.131)
[21:33:42] <Wafficus> yeah sorted A to Z han-solo
[21:33:59] <Wafficus> I'd rather just use list(filter()) right now since its an older project
[21:34:02] <Wafficus> just want it to work
[21:34:06] <Wafficus> but to be sorted A to Z
[21:34:06] <han-solo> sorted(x for x in pathlib.Path('/tmp').iterdir() if x.is_dir()) # ?
[21:34:13] <han-solo> i see
[21:34:22] *** Joins: davor (~davor@user/davor)
[21:34:23] <Wafficus> I see what you mean though, appreciate the recommendation
[21:34:31] <Wafficus> totally would take you up on it, but its ancient code lol
[21:34:39] <han-solo> sure
[21:35:11] *** Quits: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 264 seconds)
[21:35:18] *** Quits: henistein (~henistein@2001:8a0:fc8f:9501:e84c:2e88:ae63:c9cb) (Quit: Client closed)
[21:35:30] <olspookishmagus> does "if foo in bar" behave differently than: "while foo in bar" and why?
[21:35:34] <han-solo> in your example, replace the `list` with `sorted`, and it should be good, i guess
[21:36:49] <han-solo> olspookishmagus: different how ?
[21:37:06] <han-solo> one is loop, and other one is just condition check ?
[21:37:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 244 seconds)
[21:37:29] <olspookishmagus> so it needs something else to advance?
[21:37:35] <olspookishmagus> to the next item?
[21:37:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:38:07] *** Joins: Echoz (~chris@user/echoz)
[21:38:19] <han-solo> `for foo in bar` and `while for in bar` does different things, if that's what you mean
[21:38:25] <raek> olspookishmagus: it sounds like you are confusing the "in" operator with the "in" of a for loop: "for foo in bar:"
[21:38:47] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:38:59] <han-solo> s/for/foo/
[21:38:59] *** Parts: jpp (~jpp@user/jpp) (WeeChat 2.3)
[21:39:07] <mav`rik> olspookishmagus: for <name> in <expression>   is significantly different from while <expression> (where expression _can_ be "foo in bar")
[21:40:50] *** Quits: frostschutz (~frostschu@2a01:c22:d5c3:cc00:b3d4:6ce4:ac34:d4f8) (Remote host closed the connection)
[21:42:26] <Wafficus> thanks a ton han-solo that totally worked
[21:42:39] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[21:42:43] *** Joins: cache_return (~c_return@triton.blinkenshell.org)
[21:43:06] *** Joins: PixelRobot (~PixelRobo@139.47.80.69)
[21:45:25] *** Quits: asa22 (~asa22@103.29.71.186) (Ping timeout: 256 seconds)
[21:45:43] *** Joins: kirua (~Username@134.238.50.4)
[21:45:45] <kirua> hi
[21:46:24] <ferros> Hey kirua
[21:46:39] *** Joins: orangeextract (~orangeext@user/orangeextract)
[21:46:43] *** Joins: bparker (~nobody@user/bparker)
[21:47:04] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[21:47:10] <cache_return> I have a class that I want to instantiate. It needs three parameters, one is a function that needs to have its own parameter passed. How do I do this? instance = Class(this, that, other(arg)) doesn't work.
[21:47:30] <han-solo> functools.partial maybe or lambda
[21:47:32] <kirua> if i put characters with accent in a python variable and then try to write it to a file, i have some encoding issue : this is the "string" var :"éà&uiop" and when i output it, i get : "יא&uiop"
[21:47:49] <kirua> how to solve this issue ?
[21:47:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:48:06] <deniska> kirua: how are you writing to a file, and how you are reading it?
[21:48:55] <kirua> with write() method, than i open it in notepad++
[21:49:15] <mav`rik> kirua: is your editor saving your files in UTF-8 encoding?
[21:49:33] <deniska> kirua: notepad++ probably defaults to a different encoding
[21:49:43] <mav`rik> kirua: I think Notepad uses UCS-2, so you're going to end up with issues
[21:49:44] <deniska> (or wrongly autodetects it)
[21:49:58] <deniska> mav`rik: notepad++ is a different editor
[21:49:59] <kirua> no, it's another format (windows-1255) but even if i change it to utf-8, it doesnt display it correctly
[21:50:11] <mav`rik> deniska: ah, sorry, missed the ++
[21:50:19] <ferros> mav`rik: seriously? in 2021 editors don't do utf8?
[21:50:44] <deniska> kirua: you can specify the encoding you want to use when writing to a file, in the open() call
[21:50:48] <mav`rik> ferros: many Windows-specific things still use their "traditional" representation iirc.
[21:51:07] <kirua> mav`rik, with notepad, it workds, thx !
[21:51:24] <deniska> ferros: notepad (the default windows one, not of ++ variety) only learned how to display utf-8 relatively recently
[21:51:32] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Ping timeout: 265 seconds)
[21:51:43] <kirua> deniska, how ? i tried : codecs.open("lol", "w", "utf-8") but it says it's expects an int in the last parameter
[21:51:45] <deniska> and also not throw up on \n line endings
[21:51:49] <kirua> sorry for the bold
[21:51:52] *** Quits: thiras (~thiras@user/thiras) (Quit: Leaving)
[21:51:58] <ferros> UTF is like 20yo now -_-
[21:52:08] *** Joins: opac (~opac@mob-31-158-87-249.net.vodafone.it)
[21:52:10] <ferros> vim is 2000 years old and works with utf8 like a charm
[21:52:19] <deniska> kirua: `open('lol', 'w', encoding='utf-8')`
[21:52:35] <kirua> thx deniska, i'm going to try it
[21:52:37] <deniska> kirua: ('utf-8' is a default since python 3.something)
[21:52:54] <deniska> kirua: so it shouldn't affect anything assuming new enough python
[21:53:09] <deniska> ferros: windows is older than utf-8
[21:53:47] <deniska> Windows is older than vim as well :)
[21:53:47] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[21:53:48] <ferros> It's not like they'd need to rewrite the kernel to add utf8 to notepad ;)
[21:54:18] <mav`rik> ferros: backward compatibility might be an issue, and MS were always quite big on that
[21:56:14] <deniska> ferros: notepad for a long time didn't differ much from "showing the window" hello world. Adding support for, like, anything was a major leap :)
[21:57:13] <ferros> I must admit I know nothing about notepad ;)
[21:57:23] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[21:57:28] <deniska> if the standard text entry widget displays squares for lone \n character, so would notepad
[21:57:45] *** Joins: SallyAhaj_ (~SallyAhaj@user/sallyahaj)
[21:57:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:00:00] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 244 seconds)
[22:01:33] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[22:01:35] <ferros> isn't that fun :)
[22:04:48] *** Joins: nomic (~nomic@85.203.36.101)
[22:05:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[22:05:40] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[22:06:06] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (Quit: ZNC 1.8.2 - https://znc.in)
[22:07:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[22:07:29] *** Joins: fikran (~fikran@user/fikran)
[22:07:53] *** Joins: rany_ (~rany@user/rany)
[22:08:14] *** Quits: zegalch (~zegalch@178.128.75.133) (Remote host closed the connection)
[22:08:17] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[22:08:49] *** Joins: zegalch (~zegalch@178.128.75.133)
[22:09:51] *** Joins: victori (~victori@cpe-76-174-179-126.socal.res.rr.com)
[22:11:37] *** Joins: raxor2k (~raxor2k@78.158.233.120)
[22:14:40] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[22:15:42] *** Quits: SallyAhaj_ (~SallyAhaj@user/sallyahaj) (Ping timeout: 265 seconds)
[22:16:44] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Quit: WeeChat 3.3)
[22:16:56] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[22:17:22] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 260 seconds)
[22:17:53] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Read error: Connection reset by peer)
[22:18:32] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: Lost terminal)
[22:19:05] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[22:21:54] *** Quits: kop (~user@karlpinc-net.karlpinc.com) (Read error: Connection reset by peer)
[22:24:43] <raxor2k> bjs: do you know why the if sentences does not get called? https://bpa.st/NXXQ
[22:25:16] <bjs> raxor2k: probably because you return, which exits the function
[22:25:30] <raxor2k> ok?
[22:25:44] *** Joins: cdown_ (~cdown@89.32.122.5)
[22:25:56] *** Joins: mei (~mei@user/mei)
[22:26:19] <bjs> I don't know what you actually saw
[22:26:24] <bjs> so idk how I can help more than guessing
[22:27:18] <raxor2k> bjs: but you understand what i am trying to do ?
[22:27:26] <bjs> raxor2k: no
[22:27:33] <raxor2k> for real ?
[22:27:39] <ferros> I would be impressed if bjs understood
[22:27:40] <bjs> raxor2k: I don't really read your code
[22:27:43] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[22:28:45] <raxor2k> i mean, either a function returns false, or it returns true
[22:28:56] <ferros> Or it returns 7
[22:29:37] <ferros> raxor2k: you may want to elaborate on what is the problem you're getting
[22:30:24] <raxor2k> this is from another part of my code, and this works perfectly: https://bpa.st/N7SQ
[22:30:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[22:30:41] <raxor2k> so i dont know why thefunction in my first paste doesnt work... python at its best
[22:31:07] *** Joins: djhankb (~djhankb@208.113.164.68)
[22:31:08] <aphysically> jinsun: hmm I'm not sure about a pyright behavior
[22:31:37] *** Quits: mfe_ (~default@84-113-156-178.cable.dynamic.surfer.at) (Ping timeout: 252 seconds)
[22:31:40] <ferros> raxor2k: do you hypothesize that you've found a bug in the main python?
[22:31:42] <bjs> raxor2k: "python at its best"?  I'm still not sure what actually happens, you never told us what the first paste actually did
[22:31:44] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:32:00] <aphysically> it doesn't let you return anything with a noreturn type in a generic
[22:32:02] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[22:32:06] <raxor2k> bjs: i dont need to
[22:32:09] <raxor2k> i will solve this my self
[22:32:20] <aphysically> this happens all the time in flask because flask.abort is a noreturn type
[22:32:29] *** Joins: srhm (~srhm@user/srhm)
[22:32:42] *** Joins: vladoski (~vladoski@2001:b07:add:d406:9d92:cc98:a941:a04e)
[22:33:19] <bjs> raxor2k: then why did you ask me?
[22:34:21] <jinsun> aphysically: it complains if you return something in a function annotated with typing.NoReturn? that is what should happen
[22:34:35] <raxor2k> bjs: maybe you had some good suggesetions
[22:34:41] <aphysically> jinsun: errr, let me show
[22:34:41] *** Quits: pro_z (~pro_z@37.214.49.15) (Ping timeout: 245 seconds)
[22:34:44] <raxor2k> suggestions
[22:35:16] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:35:21] <aphysically> jinsun: it complains here https://bpa.st/FVDA
[22:35:59] <aphysically> flask.abort is a noreturn type and the standard thing to use for return, it complains because it says it can't assign the flask.abort to the generic R
[22:36:27] <bjs> raxor2k: yes, my suggestion is to learn Python and what if/elif and return do
[22:36:51] <bjs> raxor2k: those returns inside that loop is jumping out at me
[22:37:04] *** Joins: mickey82 (~user@user/mickey)
[22:37:15] <aphysically> self contained https://bpa.st/B2GQ
[22:37:35] <aphysically> it's perfectly fine to use flask.abort normally, it's only complaining here when there's a generic for the return type
[22:37:53] <raxor2k> bjs: look at the first and second paste: https://bpa.st/I6ZQ
[22:38:05] <raxor2k> the first one, the return True is returned
[22:38:11] <raxor2k> at the second paste, nothing happens
[22:38:19] <raxor2k> this is why i sometimes hate python
[22:38:23] <ferros> Must be magic
[22:38:45] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[22:38:45] <aphysically> Expression of type "NoReturn" cannot be assigned to return type "R@requires_auth"
[22:38:49] *** mickey82 is now known as mickey8
[22:39:22] <jinsun> aphysically: why return flask.abort and not just flask.abort? if it doesn't return anything then I see so point in returning the result of that
[22:39:23] <deniska> raxor2k: Why do you think in the second file prints should be called?
[22:39:44] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[22:40:15] <aphysically> yeah good point
[22:40:16] <deniska> raxor2k: they're inside a for-loop, how many times this loop gets executed?
[22:40:43] *** Joins: atrigent (~atrigent@50-235-42-169-static.hfc.comcastbusiness.net)
[22:40:56] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-4c3f-03f6-4a4f-4ab9.res6.spectrum.com) (Read error: Connection reset by peer)
[22:41:11] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[22:41:31] <raxor2k> deniska: the second one should be called when "user_email" is not in the list? isnt that obvious ?
[22:41:34] <raxor2k> come an man
[22:41:49] <deniska> raxor2k: you have a for-loop, right?
[22:42:07] <atrigent> in this section: https://docs.pytest.org/en/6.2.x/fixture.html#factories-as-fixtures is it saying that the cleanup code for the previous call of the fixture will be run when another call to it is made?
[22:42:08] <raxor2k> yes `=
[22:42:18] <deniska> raxor2k: how many times does code execute inside a loop?
[22:42:23] <raxor2k> 1 time ?
[22:42:47] <deniska> raxor2k: no. In for-loops code executes however many times as the amount of items in a collection you iterate over
[22:42:50] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:42:59] <twainwek> one of the directories that i am including in Manifest.in only gets created after a script is ran. how can run this script when building a package with setup tools?
[22:43:04] <deniska> raxor2k: so if you iterate over a collection with 0 items, code gets executed 0 times
[22:43:10] <raxor2k> deniska: ok, but that still doesnt explain why the second if is not printes
[22:43:32] <raxor2k> deniska: ok, i see your point
[22:44:13] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 265 seconds)
[22:44:47] <raxor2k> that means i have to change that part of code then
[22:45:03] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:13] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: bbl)
[22:45:14] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:45:33] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[22:46:54] *** Joins: Pickchea (~private@user/pickchea)
[22:47:08] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:12] <nedbat> twainwek: run the script, and then build your package.
[22:47:21] <raxor2k> deniska: thank you
[22:47:25] <raxor2k> i understand it now
[22:50:12] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[22:50:36] *** Joins: rendar (~rendar@user/rendar)
[22:52:27] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[22:53:54] *** Quits: adder (~adder@user/adder) (Quit: Leaving)
[22:53:54] <nedbat> raxor2k: can we get you to stop saying things like, "isn't it obvious, come on man" now?
[22:54:38] <deniska> Nothing is obvious, all code is always suspect
[22:55:14] <ferros> My code is always doing precisely what I wrote
[22:55:20] <ferros> Uusally not what I intended tho
[22:55:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[22:57:09] <domhnall> classic description of logical error
[22:57:35] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 260 seconds)
[22:58:15] *** Quits: mexen-kun (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[22:58:28] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[22:58:31] *** Quits: orangeextract (~orangeext@user/orangeextract) (Quit: Leaving)
[23:00:49] *** Parts: cache_return (~c_return@triton.blinkenshell.org) ()
[23:02:20] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:02:57] <twainwek> in manifest.in, how can i recursively include all files under app/foo while ignoring all files matching app/foo/bar*? using recursive-exclude app/foo bar* ignores all files under app/foo
[23:04:50] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[23:06:19] *** Joins: rendar (~rendar@user/rendar)
[23:06:31] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[23:06:50] *** Quits: paul424 (~tom@ip-31-0-123-70.multi.internet.cyfrowypolsat.pl) (Ping timeout: 260 seconds)
[23:06:54] <twainwek> also doing 'recursive-include app/foo *' followed by 'recursive-exclude app/foo bar*' does not exclude bar
[23:07:38] *** Joins: be3uykpy (~be3uykpy@2a00:a040:19a:b060:a4cf:e53:898c:2741)
[23:07:48] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:08:17] *** Joins: mickey8 (~user@user/mickey)
[23:09:46] *** Quits: opac (~opac@mob-31-158-87-249.net.vodafone.it) (Quit: Going offline, see ya! (www.adiirc.com))
[23:09:53] *** Quits: bfortified (~bfortifie@user/bfortified) (Quit: ZNC 1.8.2 - https://znc.in)
[23:10:41] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[23:12:17] *** Joins: bfortified (~bfortifie@user/bfortified)
[23:12:19] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[23:14:01] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:14:36] *** Joins: henistein (~henistein@2001:8a0:fc8f:9501:e84c:2e88:ae63:c9cb)
[23:15:05] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[23:15:26] *** Joins: rendar (~rendar@user/rendar)
[23:16:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:17:07] <henistein> I can't do plt.show() I get this: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
[23:17:21] <henistein> it never happened before
[23:17:34] <twainwek> i run into that issue annually when i change machines
[23:17:54] <twainwek> create ~/.config/matplotlib/matplotlibrc
[23:18:02] <twainwek> with content backend: tkagg
[23:18:48] <twainwek> pretty sure whatever tool is using manifest.in is broken because it completely ignores exclude directives
[23:19:11] <henistein> now I get this: ModuleNotFoundError: No module named '_tkinter'
[23:19:30] <henistein> I have installed python3-tk
[23:19:54] <mefistofeles> henistein: where are you trying to run plt.show() from?
[23:20:17] *** Joins: defn (~n0b0dy@user/defn)
[23:21:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[23:21:40] *** Joins: Akuli (~Akuli@213.216.211.158)
[23:22:11] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[23:22:38] <oprypin> uhhhh what https://i.imgur.com/lPYik5b.png
[23:22:45] <henistein> mefistofeles I can't run this simple piece of code: https://bpa.st/XMQA, I am running from terminal using ubuntu
[23:22:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:23:52] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[23:24:19] <twainwek> weird that you get that error with python3-tk installed
[23:24:30] <mefistofeles> henistein: how are you running it?
[23:24:45] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:595a:f6da:32d3:4e89)
[23:24:47] <henistein> python3 foo.py
[23:25:56] <twainwek> what does python -c "import tkinter" show
[23:26:25] *** Quits: yitz (~yitz@exercism/yitz) (Quit:  )
[23:27:12] *** Joins: yitz (~yitz@exercism/yitz)
[23:27:27] <mefistofeles> oprypin: ?
[23:27:46] *** Quits: vladoski (~vladoski@2001:b07:add:d406:9d92:cc98:a941:a04e) (Quit: Textual IRC Client: www.textualapp.com)
[23:27:50] *** Joins: auto (~automate4@90.197.238.203)
[23:28:00] <henistein> twainwek https://bpa.st/6DPA
[23:28:27] <henistein> seems like I have to configure tk>
[23:28:32] <henistein> *?
[23:29:07] *** Joins: ijr (~user@user/ijr)
[23:29:14] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:29:24] <jinsun> that looks like pyenv built python, so python3-tk wouldn't help
[23:29:37] <mefistofeles> yeah
[23:29:55] *** Quits: avikalp (~avikalp@49.36.99.188) (Ping timeout: 244 seconds)
[23:30:46] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[23:30:46] <ijr> I am trying to use linux_utils from pypi, it is imported, and I can call linux_utils, but I cannot call it's subfunction using "linux_utils.luks()"
[23:31:21] *** Joins: djhankb (~djhankb@208.113.164.68)
[23:31:24] <henistein> If I run with ipython3 it works
[23:31:33] <henistein> seems like I will use ipython3...
[23:32:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[23:32:32] *** Quits: atrigent (~atrigent@50-235-42-169-static.hfc.comcastbusiness.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:33:11] <twainwek> why can't i exclude a single directory from being included in the tar file. this is crazy
[23:33:15] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:33:26] <twainwek> i've already spent an hour trying every combination i can think of
[23:33:26] <ijr> test.py appears in /usr/lib/python3.9/site-packages/linux_utils, but it still wont execute
[23:33:37] *** Parts: auto (~automate4@90.197.238.203) ()
[23:33:44] *** Bakunin is now known as BackAndToTheLeft
[23:33:57] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[23:34:04] *** BackAndToTheLeft is now known as Bakunin
[23:34:09] <ijr> not test.py luks.py, sorry
[23:34:22] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 260 seconds)
[23:34:42] <jinsun> ijr: that means luks is a module, you cannot call a module
[23:34:49] *** Joins: srhm (~srhm@user/srhm)
[23:34:57] <jinsun> you can call the functions inside it after importing it
[23:36:10] <ijr> That works, thank you!
[23:38:24] <henistein> twainwek like this: tar -czvf foo.tar * , but you want to exclude a directory?
[23:38:35] *** Joins: Fiji- (~Fiji@user/fiji)
[23:39:39] <ijr> What is the recommended way to mount a filesystem in python (linux). I know I can use shell commands but is there a way to do it natively?
[23:39:54] <twainwek> henistein: when running python setup.py release sdist, i want to exclude app/foo/bar from being included in the generated tarball
[23:40:44] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[23:40:45] <henistein> oh ok nvm I don't know
[23:40:52] *** Quits: driib (~driib@185.65.135.251) (Ping timeout: 258 seconds)
[23:41:17] <twainwek> i've tried 'global-exclude app/foo/bar*' 'global-exclude bar*' 'recursive-exclude app/foo bar bar* bar/** *bar*' 'global-exclude *bar*' and none of them hae worked
[23:41:57] *** Parts: src (~src@user/src) (Leaving)
[23:42:20] <twainwek> based on this, i expect them to work, but they dont https://packaging.python.org/guides/using-manifest-in/
[23:43:37] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:46:11] <jinsun> twainwek: it is easier to use package_data in setup.py instead of manifest.in + include_package_data https://setuptools.pypa.io/en/latest/userguide/datafiles.html#data-files-support
[23:46:25] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[23:47:26] <twainwek> why would it be easier?
[23:48:29] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[23:49:28] <jinsun> well I find it easier (maybe because I never bothered to learn manifest.in syntax)
[23:51:00] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Client Quit)
[23:53:04] *** Joins: sandb0y (~pirate@user/sandb0y)
[23:53:12] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[23:59:15] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (Quit: Connection reset by beer)
