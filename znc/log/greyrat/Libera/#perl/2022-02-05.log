[00:01:21] *** Quits: krismatrix (~krismatri@38.80.149.51) (Client Quit)
[00:01:43] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:03:10] *** Quits: Darkcoal (~user@user/Darkcoal) (Read error: Connection reset by peer)
[00:07:54] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:08:43] *** Joins: Darkcoal (~user@user/Darkcoal)
[00:18:37] *** Quits: capn (~capn@user/capn) (Remote host closed the connection)
[00:18:57] *** Joins: capn (~capn@user/capn)
[00:19:10] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 250 seconds)
[00:33:27] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 250 seconds)
[00:35:23] *** Joins: Darkcoal (~user@user/Darkcoal)
[00:36:48] *** Joins: krismatrix (~krismatri@38.80.149.51)
[00:37:38] <krismatrix> question...do the words read, produce and consume have a specific meaning in CS? For example, I am asked to read a file with json data, produce the content, and then consume it. I am trying to understand what is the different between read and consume?
[00:39:41] <xenu> they don't. in this context i suppose "consume" is supposed to mean "process"
[00:39:43] <rewt> they're closeley related; in this context, since produce was mentioned, it means to consume the data from the producer
[00:40:16] <rewt> while read is for reading from the file
[00:40:27] <xenu> anyway there isn't enough details to tell you exactly what is meant by 'consume'
[00:41:57] <krismatrix> hmm...ok. Well..they also have a transform portion. To me that is more like process that you say.
[00:44:23] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Ping timeout: 256 seconds)
[00:46:28] * GumbyPAN welcomes HORIMOTO - Horimoto Yasuhiro to CPAN!
[00:49:06] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:4db1:e3b:c0ba:c184) (Ping timeout: 245 seconds)
[00:51:28] * GumbyPAN CPAN Upload: HealthCheck-Diagnostic-SFTP-v1.4.0 by GSG https://metacpan.org/release/GSG/HealthCheck-Diagnostic-SFTP-v1.4.0
[00:52:53] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[00:52:54] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 260 seconds)
[00:53:30] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:56:29] * GumbyPAN CPAN Upload: Perl5-Dist-Backcompat-0.10 by JKEENAN https://metacpan.org/release/JKEENAN/Perl5-Dist-Backcompat-0.10
[00:57:55] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:03:04] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[01:03:16] *** Joins: nuclightq_ (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru)
[01:03:44] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[01:03:48] *** Quits: nuclightq (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru) (Ping timeout: 250 seconds)
[01:04:20] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[01:05:25] <zgu> consume would just mean take some data and do something with it. read generally means reading from an input device/disk/network etc
[01:07:16] *** Quits: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com) (Ping timeout: 250 seconds)
[01:09:36] *** Joins: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com)
[01:19:25] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[01:22:21] *** Quits: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com) (Ping timeout: 256 seconds)
[01:29:09] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[01:30:16] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[01:31:32] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[01:32:22] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[01:35:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[01:38:01] *** Joins: hurl (~hurl@212.183.219.210.dyn.user.ono.com)
[01:42:20] *** Joins: kensanata (~user@user/kensanata)
[01:44:45] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.4)
[01:45:22] *** Joins: emanuele6 (~emanuele6@net-93-66-69-137.cust.vodafonedsl.it)
[01:46:27] *** Quits: emanuele6 (~emanuele6@net-93-66-69-137.cust.vodafonedsl.it) (Changing host)
[01:46:27] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[01:48:00] *** Quits: deadmarshal (~deadmarsh@95.38.113.90) (Ping timeout: 250 seconds)
[01:49:53] *** Quits: rwbrambler (~Thunderbi@65.183.138.202) (Ping timeout: 256 seconds)
[01:50:05] *** Joins: rwbrambler (~Thunderbi@65.183.138.202)
[01:51:01] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 256 seconds)
[01:51:29] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:51:53] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[01:52:17] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[01:54:10] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:4455:76db:487:e9f8)
[01:56:36] *** Joins: whynot (~whynot@37.73.42.226)
[01:59:45] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 256 seconds)
[02:00:15] *** choroba is now known as choroba_
[02:00:38] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[02:01:23] *** Quits: choroba_ (~E.Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[02:09:03] *** Joins: monkey_ (~user@190.104.116.153)
[02:12:29] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[02:12:51] *** Quits: GEttR (~GEttR@user/gettr) (Ping timeout: 245 seconds)
[02:14:01] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[02:15:03] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 256 seconds)
[02:17:49] *** Joins: GEttR (~GEttR@user/gettr)
[02:20:13] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:4455:76db:487:e9f8) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:22:13] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[02:23:20] *** Joins: Markow (~Markow@176.122.215.103)
[02:25:25] *** Joins: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com)
[02:25:30] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[02:25:35] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[02:27:52] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:30:15] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[02:33:25] *** Quits: pizdets (~pizdets@183.182.111.49) (Ping timeout: 256 seconds)
[02:33:57] *** Joins: pizdets_ (~pizdets@183.182.110.193)
[02:34:17] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[02:34:57] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 240 seconds)
[02:36:33] *** Quits: hurl (~hurl@212.183.219.210.dyn.user.ono.com) (Quit: Leaving...)
[02:43:23] *** Quits: martinus__ (~martin@111.27.202.77.rev.sfr.net) (Ping timeout: 256 seconds)
[02:44:21] *** Joins: proller (~p@80.240.216.69)
[02:45:43] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[02:46:08] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc2-git-9f7fb8d-Pogorze-Karpackie-CUSTOM-KERNEL)
[02:48:47] *** Joins: epony (epony@user/epony)
[02:56:53] <ology> Like "injest", it connotes integration with a system.
[02:57:09] <ology> ingest ugh
[02:59:28] <simcop2387> ology: infinite gest
[03:00:03] <ology> I've seen one of those I think.
[03:00:57] <simcop2387> zgu: i'd also say that consume should also connotate that the data is no longer usable afterwards too.  along the lines of c++'s std:move or rust's moved references and such
[03:03:17] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 240 seconds)
[03:05:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[03:07:17] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[03:07:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:09:51] <pragma-> /  3
[03:10:27] <simcop2387> pragma-: /3: Undefined procedure: foo/2
[03:11:24] <pragma-> whoops
[03:11:30] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[03:12:40] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[03:17:47] *** Quits: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com) (Ping timeout: 268 seconds)
[03:21:42] *** Joins: rorx_ (~rorx@cpe-65-24-161-82.columbus.res.rr.com)
[03:23:41] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[03:28:23] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 256 seconds)
[03:30:59] *** Quits: magla (~gelignite@d5361383.access.ecotel.net) (Quit: Stay safe!)
[03:37:57] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[03:38:27] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[03:41:54] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[03:43:18] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[03:45:56] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[03:51:04] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[03:52:41] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[03:55:07] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:56:23] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:01:17] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[04:05:12] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:07:25] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[04:07:25] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[04:07:25] *** Quits: perldoc (~perldoc@2603-6081-6401-8c00-0000-0000-0000-0d8f.res6.spectrum.com) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[04:07:25] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[04:07:25] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Quit: MEATBOT listens not to your cries for mercy. ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[04:08:40] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[04:08:58] *** Quits: kaitlyn03 (~kaitlyn@user/kaitlyn) (Quit: Ping timeout (120 seconds))
[04:09:10] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[04:09:40] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[04:10:11] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[04:10:11] *** ChanServ sets mode: +v perlbot
[04:11:11] *** Joins: perldoc (~perldoc@2603-6081-6401-8c00-0000-0000-0000-0d8f.res6.spectrum.com)
[04:15:55] *** rorx_ is now known as rorx
[04:31:08] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[04:31:44] <simcop2387> ok rebooting because i broke it all probably
[04:32:11] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[04:32:11] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Quit: MEATBOT listens not to your cries for mercy. ZNC 1.8.2+deb2+b1 - https://znc.in)
[04:32:11] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[04:32:11] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[04:32:11] *** Quits: perldoc (~perldoc@2603-6081-6401-8c00-0000-0000-0000-0d8f.res6.spectrum.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[04:32:17] *** Quits: anthk_ (~anthk_@92.176.105.30) (Ping timeout: 240 seconds)
[04:32:34] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[04:32:48] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[04:33:21] *** Joins: kaitlyn03 (~kaitlyn@user/kaitlyn)
[04:33:52] *** Quits: kaitlyn03 (~kaitlyn@user/kaitlyn) (Client Quit)
[04:34:54] *** Joins: kaitlyn03 (~kaitlyn@user/kaitlyn)
[04:35:54] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[04:36:26] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[04:36:54] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[04:37:16] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[04:37:19] *** Joins: randir_ (~randir@2.92.196.208)
[04:37:27] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[04:37:27] *** ChanServ sets mode: +v perlbot
[04:38:25] *** Joins: perldoc (~perldoc@24.88.49.194)
[04:39:47] *** Quits: randir (~randir@95-26-4-13.broadband.corbina.ru) (Ping timeout: 256 seconds)
[04:41:49] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[04:45:09] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[04:46:23] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[04:47:51] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[04:59:59] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[05:02:16] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:04:17] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[05:08:28] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:11:57] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[05:14:53] *** Joins: krismatrix (~krismatri@38.80.149.51)
[05:16:56] * GumbyPAN CPAN Upload: Dist-Zilla-Plugin-SignReleaseNotes-0.0004 by TIMLEGGE https://metacpan.org/release/TIMLEGGE/Dist-Zilla-Plugin-SignReleaseNotes-0.0004
[05:17:34] <krismatrix> So I was working on a script with nodejs (relative newie there) and I realized that in order to read the contents of a file us 'fs', I have to apply the concept of promises and async/await. But with perl (or python), I typically never do that. I just use open() or the Mojo equivalent. It got me thinking, why does js need async/await/promise to read a file? Or is it that perl automatically does async/await or that I should do this in my perl code? 
[05:18:46] *** Quits: koolazer (~koo@user/koolazer) (Remote host closed the connection)
[05:20:55] <LeoNerd> Howboy that's far too fun a question for me not to answer, but it's also nearly 2am locally and I should go to bed
[05:20:57] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[05:20:58] <LeoNerd> Remind me tomorrow
[05:21:12] <krismatrix> ok. no problem.
[05:21:46] *** Joins: anthk_ (~anthk_@92.176.105.30)
[05:23:48] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[05:26:15] *** Quits: overrider (~overrider@user/overrider) (Read error: Connection reset by peer)
[05:26:50] *** Joins: overrider (~overrider@user/overrider)
[05:27:34] <simcop2387> krismatrix: strictly speaking it doesn't need to.  all the file apis have a ${function}Sync version that can block, but it blocks the whole process and doesn't let any execution happen elsewhere while waiting on the disk.  there's also the callback version of the apis where you pass it a function, which is sort of similar to CSP concurrency. 
[05:28:29] *** Joins: idiocrash (~textual@191.101.132.123)
[05:28:52] <krismatrix> simcop2387...for clarification...are you speaking here about perl or nodejs?
[05:29:22] <simcop2387> krismatrix: the reason it's like this is because node.js chose for it to be so.  Everything in node.js is based around "*THE EVENT LOOP*", so everything ends up looking async-like even if it doesn't strictly need to be.  perl, python, c, etc. don't have that problem because they don't have an event loop in place by default.  this is sort of the problem of JavaScript the language vs Node.JS the
[05:29:28] <simcop2387> platform that you write your JavaScript in.
[05:29:36] <simcop2387> krismatrix: node only
[05:30:22] <krismatrix> ok.
[05:31:13] <krismatrix> you are saying that because nodejs is designed around the concept of event loop (what is that?), many things now need to be async?
[05:31:24] <simcop2387> yes
[05:31:58] <krismatrix> hmmm...it is really annoying to write simple things that I am used to.
[05:32:07] <simcop2387> that async-ness can be done via Promises/Futures and async/await, or a system called Communicating Sequential Processes (it can be modeled with callbacks, but it doesn't require it), or a few other ways too
[05:33:09] <simcop2387> the readSync call will hide all that from you by giving up the option to do something else at the same time (like accept connections over http) while you read a file.  that can be simpler to start with and then you can just start changing it all and sprinkling awaits and async functions as needed later
[05:33:54] <simcop2387> i'd highly recommend just trying to get your head around doing: async function .... { await unlink('/dev/null'); ... } instead of promises directly.
[05:34:30] <simcop2387> using promises directly does give you some other options that can be better though once you wrap your head around it, i.e. multiple async things happening at once that you're waiting on
[05:34:40] <simcop2387> s/i.e./e.g./
[05:35:39] <krismatrix> hmm
[05:36:18] <simcop2387> this will all likely take you multiple attempts at understanding.  there's a cliff to climb learning it
[05:36:33] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[05:36:39] <krismatrix> right.
[05:36:41] <simcop2387> you can get all this in Perl also with IO::Async or ... ugh... AnyEvent.
[05:36:58] * GumbyPAN CPAN Upload: ETL-Pipeline-3.10-a by RBWOHLFAR https://metacpan.org/release/RBWOHLFAR/ETL-Pipeline-3.10-a
[05:37:04] <simcop2387> those are both the same kind of framework/event-loop style things that node.js does everything through
[05:38:16] <simcop2387> POE is mostly like that too but it's more like a smalltalk object oriented way of doing concurrency really.  you pass "messages" around to "sessions", like smalltalk passes messages around to objects.  there's some stuff built on POE to make it look like the other methods though
[05:38:23] <krismatrix> my problem with perl async/await is that I don't think i do anything async in perl. I do it in JS/Node because I have to. So i am not quite sure how to experiment in perl.
[05:39:26] <simcop2387> krismatrix: IO::Async (event loop and friends) + Future (like Promises) + Future::AsyncAwait + Future::IO, or Mojo::IOLoop + Mojo::Promises and the other friends it has that i can't think of off the top of my head
[05:40:04] <simcop2387> conceptually it'll all map pretty well between them, just different APIs but the way they work is all very similar
[05:42:36] <simcop2387> with perl it's just not built into the standard library and/or language
[05:43:21] <krismatrix> right. Well...node needs me to require fs before I can read a file...so i am ok with that i guess. 
[05:43:23] <simcop2387> LeoNerd: i've now got my printer available over the vpn with mdns autoconfiguration working.  any bets on how long before my parents accidentally print on it?
[05:47:00] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39)
[05:55:25] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 250 seconds)
[05:55:29] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 256 seconds)
[05:57:59] *** Quits: Pali (~pali@user/pali) (Ping timeout: 256 seconds)
[05:58:39] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:04:52] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[06:04:53] *** Quits: Su-Shee (~Susanne@p508941b9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:06:32] *** Joins: Su-Shee (~Susanne@p4ff4945d.dip0.t-ipconnect.de)
[06:12:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:13:37] *** Quits: Woodzy_ (~quassel@198.204.246.228) (Ping timeout: 256 seconds)
[06:13:43] *** Joins: Woodzy (~quassel@198.204.246.228)
[06:13:50] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[06:13:57] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 240 seconds)
[06:17:21] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Ping timeout: 256 seconds)
[06:18:37] *** Joins: aspic (~shifty~~~@1.145.26.21)
[06:19:16] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[06:22:18] <aspic> Help - i've lost my regex mojo!  Trying to split on a non-escaped backslash, data example "HOME:434C2C27:23\:62\:4B\:23\:FF\:16:Infra:11:2462 MHz:130 Mbit/s".  My snippet: split /[^\\]:/;
[06:23:29] <SpiceMan> ^ is negation inside []
[06:24:50] *** Joins: vanessa (~vanessa@103.160.128.7)
[06:25:01] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[06:25:44] <aspic> SpiceMan: quite - I want to split on colons, but not where the colon is preceded by a backslash.
[06:26:52] *** Quits: vanessa (~vanessa@103.160.128.7) (Client Quit)
[06:27:08] *** Joins: vanessa (~vanessa@103.160.128.7)
[06:27:17] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[06:28:08] <aspic> (btw: I want to end up with a 7 item list like "HOME~434C2C27~23\:62\:4B\:23\:FF\:16~Infra~11~2462 MHz~130 Mbit/s" where the tilde represents the split point)
[06:34:52] <SpiceMan> then you are splitting on colons not preceded by backslash
[06:35:01] <SpiceMan> you said "split on non-escaped backslash"
[06:36:17] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[06:36:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:38:04] <SpiceMan> eval: $_ = "ads\\:ada\\:adasda:adadasd\\:asdada:"; [ split /(?<!\\):/ ]
[06:38:05] <aspic> SpiceMan: oops, mea culpa, yes I did.  I /meant/ non-escaped (backslashed) colons.
[06:38:05] <perlbot> SpiceMan: ["ads\\:ada\\:adasda","adadasd\\:asdada"]
[06:40:04] <aspic> SpiceMan: perfect!  Would you be so kind as to elaborate /(?<!\\):/ in English?  It's some kind of back-reference, right?
[06:41:36] <SpiceMan> its a negative lookbehind
[06:42:11] <SpiceMan> eval: $_ = "ads\\:ada\\:adasda:adadasd\\:asdada:"; [ split /(?<\\):/ ]
[06:42:12] <perlbot> SpiceMan: ERROR: Group name must start with a non-digit word character in regex; marked by <-- HERE in m/(?<\ <-- HERE \):/ at (IRC) line 1. 
[06:42:25] <aspic> any ideas as to why didn't my version work?
[06:42:26] <SpiceMan> uhm. was under the impression the ! wasn't needed
[06:42:45] <SpiceMan> eval: $_ = "ads\\:ada\\:adasda:adadasd\\:asdada:"; [ split /[^\\]:/ ]
[06:42:47] <perlbot> SpiceMan: ["ads\\:ada\\:adasd","adadasd\\:asdad"]
[06:42:51] <SpiceMan> seems to work :P
[06:43:20] <aspic> no, it chops off the last character - exactly what is happening to me
[06:43:48] <SpiceMan> oh, i missed that
[06:43:51] <SpiceMan> lol
[06:44:57] <aspic> You know, in 20+ years of regex, this is the first occasion I have need to use a lookaround.
[06:47:18] *** Joins: frost (~frost@user/frost)
[06:48:21] *** Quits: frost (~frost@user/frost) (Remote host closed the connection)
[06:50:51] *** Quits: jadesoturi (~jadesotur@user/jadesoturi) (Remote host closed the connection)
[06:51:01] *** Quits: a3r0 (~aero@61.100.184.210) (Ping timeout: 240 seconds)
[06:51:08] *** Joins: a3r0 (~aero@61.100.184.210)
[06:51:51] *** Joins: frost (~frost@user/frost)
[06:52:06] *** Joins: jadesoturi (~jadesotur@user/jadesoturi)
[06:52:57] *** Quits: aspic (~shifty~~~@1.145.26.21) (Read error: No route to host)
[06:54:22] *** Joins: aspic (~shifty~~~@1.145.26.21)
[06:58:40] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[06:59:10] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[07:00:52] *** Quits: aspic (~shifty~~~@1.145.26.21) (Read error: No route to host)
[07:00:57] *** Quits: ominionx (~ominionx@172.58.136.5) (Read error: Connection reset by peer)
[07:02:41] *** Quits: jayray (~jayray@user/jayray) (Ping timeout: 256 seconds)
[07:03:04] *** Joins: aspic (~shifty~~~@1.145.26.21)
[07:04:03] *** Joins: ominionx (~ominionx@172.58.136.5)
[07:06:20] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[07:07:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:08:35] *** Quits: aspic (~shifty~~~@1.145.26.21) (Read error: No route to host)
[07:09:23] <SpiceMan> but when you need it, you are glad it exists =)
[07:09:45] *** Quits: Affliction (affliction@idlerpg/player/affliction) (Quit: Read error: Connection reset by beer)
[07:10:13] *** Joins: Affliction (affliction@idlerpg/player/affliction)
[07:10:28] *** Joins: aspic (~shifty~~~@1.145.26.21)
[07:10:37] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[07:11:39] *** Joins: jayray (~jayray@user/jayray)
[07:12:08] * GumbyPAN CPAN Upload: Markdown-Compiler-0.003 by SYMKAT https://metacpan.org/release/SYMKAT/Markdown-Compiler-0.003
[07:14:19] *** Quits: ominionx (~ominionx@172.58.136.5) (Quit: Leaving)
[07:15:24] *** Quits: aspic (~shifty~~~@1.145.26.21) (Read error: Connection reset by peer)
[07:16:47] *** Joins: aspic (~shifty~~~@1.145.26.21)
[07:18:58] *** Quits: aspic (~shifty~~~@1.145.26.21) (Remote host closed the connection)
[07:18:59] <simcop2387> aspic: look up zero width assertions in perldoc perlre
[07:19:19] <simcop2387> oh wait i see that got answered
[07:19:36] *** Joins: aspic (~shifty~~~@1.145.26.21)
[07:19:58] <simcop2387> i should scroll more
[07:20:22] *** Quits: whynot (~whynot@37.73.42.226) (Quit: leaving)
[07:21:13] <ether> aspic: hello fellow traveller named for things more popular in the 19th century than today
[07:22:09] * GumbyPAN CPAN Upload: Music-Intervals-0.0800 by GENE https://metacpan.org/release/GENE/Music-Intervals-0.0800
[07:24:23] <simcop2387> ether: we just need someone named "opium" for the hat trick then?
[07:27:22] <zgu> i like how you can write ether in ASCIIart as 6
[07:27:29] <zgu> ^O^
[07:28:31] <zgu> and ethanol is ^OH
[07:28:35] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[07:30:31] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[07:31:06] *** Quits: anthk_ (~anthk_@92.176.105.30) (Remote host closed the connection)
[07:36:48] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[07:37:11] * GumbyPAN CPAN Upload: Math-Complex_C-0.14 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-Complex_C-0.14
[07:37:26] *** Joins: vanessa (~vanessa@103.160.128.7)
[07:37:46] *** Joins: anthk_ (~anthk_@92.176.105.30)
[07:49:03] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Ping timeout: 256 seconds)
[07:54:00] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Remote host closed the connection)
[07:54:16] *** Joins: manjaroi3 (~manjaro-i@112.169.116.78)
[07:55:50] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[07:56:04] *** Quits: aspic (~shifty~~~@1.145.26.21) (Read error: No route to host)
[07:56:21] *** Joins: Martchus (~martchus@2a01:c23:bddc:e400:d250:99ff:fe49:3cce)
[07:56:57] *** Quits: Martchus_ (~martchus@2a01:c22:732d:2900:d250:99ff:fe49:3cce) (Ping timeout: 240 seconds)
[07:57:52] *** Joins: aspic (~shifty~~~@1.145.26.21)
[08:02:02] *** Joins: XV8 (~XV8@2601:5cb:c001:50:ac6c:2622:9107:8299)
[08:02:13] * GumbyPAN CPAN Upload: Math-Complex_C-L-0.07 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-Complex_C-L-0.07
[08:03:13] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Ping timeout: 256 seconds)
[08:04:08] *** Quits: XV9 (~XV8@2601:5cb:c001:50:4d1d:eb87:5761:ea2c) (Ping timeout: 250 seconds)
[08:04:52] *** Quits: aspic (~shifty~~~@1.145.26.21) (Ping timeout: 260 seconds)
[08:13:45] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[08:16:46] *** Joins: frost (~frost@user/frost)
[08:18:17] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 256 seconds)
[08:28:24] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:30:26] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[08:31:37] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 240 seconds)
[08:31:55] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[08:42:14] *** Joins: aspic (~shifty~~~@1.145.26.21)
[08:44:37] *** Quits: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com) (Ping timeout: 240 seconds)
[08:45:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[08:46:22] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! ðŸ‘‹)
[08:49:01] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[08:51:28] *** Joins: bluray (~bluray@user/zapdos)
[08:56:19] * GumbyPAN CPAN Upload: Math-Complex_C-Q-0.07 by SISYPHUS https://metacpan.org/release/SISYPHUS/Math-Complex_C-Q-0.07
[08:58:51] *** Quits: vanessa (~vanessa@103.160.128.7) (Quit: WeeChat 3.4)
[08:58:57] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[09:00:26] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[09:01:21] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[09:03:10] *** Joins: frost (~frost@user/frost)
[09:06:20] * GumbyPAN CPAN Upload: Venus-0.04 by CPANERY https://metacpan.org/release/CPANERY/Venus-0.04
[09:06:31] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[09:07:02] *** Quits: aspic (~shifty~~~@1.145.26.21) (Read error: Connection reset by peer)
[09:11:13] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[09:12:42] *** Joins: trillp (~trillp@2001:19f0:6401:72e:c092:4829:25d6:b788)
[09:17:56] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:18:37] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 240 seconds)
[09:20:44] *** Joins: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com)
[09:22:32] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[09:41:03] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[09:41:57] *** Quits: idiocrash (~textual@191.101.132.123) (Ping timeout: 240 seconds)
[09:45:44] *** Joins: skraito (~skraito@user/skraito)
[09:45:51] * skraito [ ASTARA ] TEAM UBUNTU RELEASED ... . JOIN US FOR DEV AND CODE AT ... . https://worldhacker.org/index.php/irc-server/ ... .
[09:45:57] *** Quits: skraito (~skraito@user/skraito) (K-Lined)
[09:46:18] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:47:38] *** Joins: idiocrash (~textual@216.73.163.86)
[09:50:17] *** Joins: idiocrash_ (~textual@216.73.163.85)
[09:52:01] *** Quits: idiocrash (~textual@216.73.163.86) (Ping timeout: 256 seconds)
[09:59:09] *** Quits: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net) (Ping timeout: 256 seconds)
[10:00:47] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[10:06:14] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[10:10:23] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[10:17:17] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 256 seconds)
[10:21:28] * GumbyPAN CPAN Upload: mb-0.39 by INA https://metacpan.org/release/INA/mb-0.39
[10:29:52] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[10:44:53] *** Joins: frost (~frost@user/frost)
[10:45:00] *** Joins: idiocrash (~textual@216.73.163.85)
[10:46:30] *** Joins: seekr (~seekr@130.44.169.77)
[10:48:41] *** Quits: idiocrash_ (~textual@216.73.163.85) (Ping timeout: 256 seconds)
[10:49:51] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[10:56:31] * GumbyPAN CPAN Upload: Lang-HL-Syntax-0.01 by RAJ https://metacpan.org/release/RAJ/Lang-HL-Syntax-0.01
[11:00:19] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[11:04:44] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Remote host closed the connection)
[11:10:33] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[11:13:09] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[11:14:15] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:15:44] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[11:16:33] * GumbyPAN CPAN Upload: Lang-HL-Syntax-0.02 by RAJ https://metacpan.org/release/RAJ/Lang-HL-Syntax-0.02
[11:37:45] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[11:46:37] * GumbyPAN CPAN Upload: Duadua-0.26 by BAYASHI https://metacpan.org/release/BAYASHI/Duadua-0.26
[12:04:03] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[12:04:51] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[12:05:40] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[12:05:57] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[12:07:13] *** Quits: manjaroi3 (~manjaro-i@112.169.116.78) (Ping timeout: 256 seconds)
[12:09:40] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[12:10:06] *** Joins: Markow (~Markow@176.122.215.103)
[12:11:59] *** Quits: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com) (Ping timeout: 256 seconds)
[12:13:19] <rindolf> i have finished adding this old curiousity now: https://www.shlomifish.org/humour/usr-bin-perl/
[12:13:20] <Paperbot_> Link title(s): [ #!/usr/bin/perl - A sitcom about a small web-development house - Shlomi Fishâ€™s Homesite ]
[12:18:45] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[12:30:27] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Ping timeout: 256 seconds)
[12:30:56] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[12:33:22] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[12:34:42] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[12:39:11] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[12:45:31] *** Joins: mowotter (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[12:46:42] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[12:47:05] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[12:48:21] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[12:57:56] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 250 seconds)
[13:03:08] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[13:05:43] <rindolf> perlbot: hi
[13:05:43] <rindolf> damn
[13:05:44] <rindolf> perlbot: cats
[13:05:44] <perlbot> rindolf: https://www.simcop2387.info/kittens.mp4 cats are awesome furry creatures. Resident #perl cats are f00li5h, dhoss, pkrumins, Altreus, kent\n, rindolf, SubStack, dwu, and corwin. For indepth cat-related conversation see #perl-cats
[13:05:45] <perlbot> rindolf: hi
[13:05:47] <rindolf> simcop2387: ^^^
[13:07:31] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[13:10:27] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 256 seconds)
[13:11:57] *** Quits: APic (apic@apic.name) (Ping timeout: 240 seconds)
[13:16:29] *** Joins: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222)
[13:18:05] <dg_dg> hello, how to switch etween regex engines different standard ? I see i can install other regex standard packages, and use them y calling "use"... ut when i'm calling use package::name, i still use also the default regex engine AND the new one... both (it looks like). But i want to use one but not an other... how to do that ?
[13:23:11] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:30:59] *** Quits: idiocrash (~textual@216.73.163.85) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:41:06] *** Joins: ekathva (~ekathva@2001:999:53:cee3:97a6:75f6:a877:3ffd)
[13:41:17] *** Joins: evilgry (~gry@botters/gry)
[13:41:44] <evilgry> https://jobs.perl.org/job/21895 interesting fully remote job, USA or Canada - in case someone here is interested
[13:41:45] <Paperbot_> Link title(s): [ Senior Software Engineer - Full Stack Web - Remote Opportunity (Perl Jobs) ]
[13:41:55] <evilgry> thanks Paperbot_
[13:42:11] <evilgry> (i don't have coi, just got it in my newsletter ...)
[13:49:28] *** Quits: ekathva (~ekathva@2001:999:53:cee3:97a6:75f6:a877:3ffd) (Quit: Leaving)
[13:51:19] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[13:52:08] *** Quits: mowotter (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Read error: Connection reset by peer)
[13:52:14] <bluray> :-/ they could extend these offers to the whole world, not just US and Canada
[13:52:39] <rindolf> evilgry: hi, thanks4sharing, but i'm underqualified
[13:52:41] *** Joins: mowotter (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[13:55:44] *** Joins: proller (~p@80.240.216.69)
[13:57:47] * rindolf is reminded of https://www.shlomifish.org/humour/bits/Emma-Watson-applying-for-a-software-dev-job/#reception ; HR drones won't recognise talent even if it hit them in the face
[14:01:03] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:b4e8:6f53:6fdf:55e6)
[14:09:34] <tm604> dg_dg: `use re::engine` should affect the current lexical scope, i.e. everything from that point to the closing } or end-of-file
[14:11:22] <tm604> e.g. `perl -le'print ref(qr/example/); { use re::engine::RE2 -strict; print ref(qr/example/); } print ref(qr/example/)'`
[14:16:29] <dg_dg> ho yes... the current lexical scope... it was what i was missing ! Should i use "no use" for an other one default engine used by Perl also ?
[14:30:55] *** Quits: evilgry (~gry@botters/gry) (Quit: Leaving)
[14:31:32] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[14:33:51] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[14:44:01] *** Joins: Pali (~pali@user/pali)
[14:51:08] <tm604> yes, `no re::engine::RE2` probably works to switch back in that example, but would suggest testing it first!
[14:52:13] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.17.0-rc2-git-9f7fb8d-Pogorze-Karpackie-CUSTOM-KERNEL)
[14:55:26] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[14:55:33] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[14:56:35] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[14:57:02] <rindolf> tm604: hey, shabbath shalom. sup?
[15:01:38] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[15:05:37] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[15:06:54] *** Joins: Darkcoal (~user@user/Darkcoal)
[15:14:13] *** Quits: mowotter (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Ping timeout: 256 seconds)
[15:16:04] *** dionysos is now known as dilfridge
[15:17:00] * GumbyPAN CPAN Upload: Net-Connector-0.006 by CARELINE https://metacpan.org/release/CARELINE/Net-Connector-0.006
[15:17:00] * GumbyPAN CPAN Upload: Sentry-SDK-v1.0.15 by PMB https://metacpan.org/release/PMB/Sentry-SDK-v1.0.15
[15:20:18] *** Joins: APic (apic@apic.name)
[15:22:00] * GumbyPAN CPAN Upload: Net-Connector-0.007 by CARELINE https://metacpan.org/release/CARELINE/Net-Connector-0.007
[15:22:00] * GumbyPAN CPAN Upload: Net-Connector-0.008 by CARELINE https://metacpan.org/release/CARELINE/Net-Connector-0.008
[15:22:57] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[15:27:23] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:04] *** Joins: csrf (~csrf@user/csrf)
[15:31:57] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[15:32:01] * GumbyPAN CPAN Upload: Net-Connector-0.009 by CARELINE https://metacpan.org/release/CARELINE/Net-Connector-0.009
[15:39:06] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[15:43:02] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 250 seconds)
[15:44:33] *** Joins: Darkcoal (~user@user/Darkcoal)
[15:45:23] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 256 seconds)
[15:45:49] *** Joins: mowotter (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[15:47:48] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Ping timeout: 250 seconds)
[15:47:57] *** Joins: cusion (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[15:48:17] *** Quits: mowotter (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[15:50:37] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 240 seconds)
[15:52:50] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[15:52:52] *** Joins: Darkcoal (~user@user/Darkcoal)
[15:54:08] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:58:22] *** Quits: fuzzix (~fuzzix@46.7.53.110) (Quit: bbl)
[15:59:37] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[16:00:17] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[16:19:21] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[16:23:14] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[16:23:57] *** Quits: APic (apic@apic.name) (Ping timeout: 240 seconds)
[16:42:52] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[16:43:07] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[16:45:27] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[16:54:17] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 256 seconds)
[17:01:19] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[17:14:01] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[17:17:30] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[17:21:05] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[17:22:13] * GumbyPAN CPAN Upload: Lang-HL-Syntax-0.03 by RAJ https://metacpan.org/release/RAJ/Lang-HL-Syntax-0.03
[17:23:20] <dg_dg> How to recompile to take effect a modified Perl CPAN module/package ? (i modified Curses::UI to show vertical buttons on Dialog::Basic
[17:23:21] *** Joins: gast0n (~g4570n@user/gast0n)
[17:24:44] <dg_dg> to recompile or what ever should apply the modification... files are copied in two destinations: .local/share/.cpan/{lib,blib}...
[17:25:53] <LeoNerd> ?
[17:26:23] <LeoNerd> Also, I'd suggest Tickit instead of Curses::UI but I might be biased
[17:28:39] <dg_dg> @LeoNerd, i will try deeper tickit, but i would like to finish what i'm doing on Curses::UI (and i think TicKit is using it as dependency).
[17:29:35] <dg_dg> but the question doesn't target specxificaly on Curses:UI more than any other. But target on "how to apply a modification done on a CPAN package to test it ?"
[17:29:38] <LeoNerd> It verymuch isn't
[17:29:46] <LeoNerd> Tickit is its own independent thing
[17:29:55] <dg_dg> ok, still the question remain valuable.
[17:29:57] <LeoNerd> I don't understand the word "apply"
[17:30:01] <LeoNerd> You have some files. You've edited them
[17:30:05] <LeoNerd> They're in use. Done
[17:30:06] <dg_dg> to apply is a verb.
[17:30:13] <LeoNerd> I'm not sure what thing you are expecting
[17:30:37] <LeoNerd> You need to explain a lot more words about what you're doing
[17:31:11] <dg_dg> i mean that i modify a .pm file inside a CPAN installed module (Curses::UI) and i want to test the modification when i use Curse::UI in a Perl script file.
[17:31:27] <LeoNerd> "inside a CPAN installed module"
[17:31:32] <LeoNerd> Where was the file..? on the filesystem
[17:31:34] <LeoNerd> What path
[17:31:40] <dg_dg> yes i did capn install Curses::UI
[17:32:14] * GumbyPAN CPAN Upload: Boxer-v1.4.3 by JONASS https://metacpan.org/release/JONASS/Boxer-v1.4.3
[17:32:47] <LeoNerd> Yes, and then you edited a file. What was the FULL PATH to the file? What file did you edit?
[17:33:37] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 240 seconds)
[17:33:54] <dg_dg> and after that, later, i was gone inside my ~/.local/share/CPAN/biuld/Curses-UI-0.9609-0/lib/Curses/UI/Dialog/Basic.pm to modify the script to try to get some vertical buttons aligned on dialog...
[17:35:20] <LeoNerd> I suspect the path did not have the typo 'biuld' in it
[17:35:25] <ology> `perldoc -l Curses::UI` might be helpful to know. That's the file to edit. Then you can just re-run your program.
[17:35:26] <LeoNerd> WHAT FILE DID YOU EDIT?
[17:35:30] <dg_dg> and there is an other one Basic.pm file inside /.locale/share/CPAN/build/blib/lib/Curses/UI/Dialog/Basic.pm
[17:36:02] <LeoNerd> But yes if you edit files in the build dir that's temporary and won't matter
[17:36:24] <LeoNerd> Either edit the pristine source and reinstall it, or edit the actual installed files
[17:36:36] <LeoNerd> What you've done is edited a third one that's wrpng
[17:36:37] <dg_dg> @LeoNerd, i told you: both Basic.pm files contained inside the  ~/.locale/share/CPAN/build directory (command find ~/.locale/share/CPAN/build -name "Basic.pm") show them
[17:37:12] <dg_dg> LeoNerd, yes, and that's why i asked how to recompile it after to modify.
[17:37:40] <dg_dg> "edit the pristine source"... where and what is "the pristine source" ?
[17:38:06] <dg_dg> and how to "reinstall it". All my question is exactly on that points.
[17:38:35] <dg_dg> I'm under Fedora-34 Linux distro
[17:39:25] <LeoNerd> The source is wherever you put it
[17:39:59] <LeoNerd> cpan> look Some::Module   edit file; perl Build.PL; ./Build test; ./Build install
[17:40:10] <LeoNerd> or equivakent for make-based ones
[17:40:38] <LeoNerd> but for quick tests I'd just edit the actually-installed thing for quick turnaround while you're testing your idea
[17:40:52] <LeoNerd> then grab that back into source when you know it works
[17:40:53] <dg_dg> ok, i'm going to try from what i'm thinking i understand from what you just told me.
[17:44:09] <dg_dg> @LeoNerd, cpan> look Curses::UI just print me the ~/.local/share/.cpan/build/Curses-UI-0.9609-1 directory where all the files are contained... wher CPAN (not me) put it by default with this distribution configuration default.
[17:44:26] <dg_dg> so nothing new from what i'm described before.
[17:44:39] <LeoNerd> That's the source directory yes
[17:44:59] <LeoNerd> So if you're going with the longwinded source directroy approach, that's the one
[17:45:01] <dg_dg> so now you told me to "edit file Build.PL
[17:45:04] <LeoNerd> Make sure to edit the SOURCE FILE
[17:45:06] <LeoNerd> no I didn't
[17:45:17] <LeoNerd> That semicolon was because IRC doesn't let me put in linefeeds
[17:45:19] <dg_dg> sorry, i miss understood
[17:45:24] <LeoNerd> Do yopu want me to begin right at the beginning?
[17:45:35] <LeoNerd> I started in the middle because I assumed you roughly know what you're doing, from your question
[17:45:39] <LeoNerd> I may have been mistaken
[17:45:46] <dg_dg> thank you for your time. Do as you want for help, i'm happy with that.
[17:45:54] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[17:46:14] <dg_dg> it is a first tiume for me to modify and test a CPAN module installed...
[17:46:29] <dg_dg> So... yes...
[17:46:33] <LeoNerd> Right but this wqay you're not doing that
[17:46:44] <dg_dg> ok, let's try again.
[17:46:56] <LeoNerd> Allover there will be THREE copies of the file. The pristine source, the blib, the installed.
[17:47:02] *** Joins: APic (apic@apic.name)
[17:47:06] <dg_dg> ok
[17:47:06] <LeoNerd> You can edit the first if you like. Or you can edit the third for speed
[17:47:18] <LeoNerd> What -you- did was edit the middle, second one. That is pointless and silly. don't do that
[17:47:26] <LeoNerd> Decide on one of the sensible strategies. either is fine
[17:47:33] <dg_dg> ok
[17:47:36] <LeoNerd> As I said *my* suggestion is just to edit the actual installed file for speed of testing
[17:48:38] <dg_dg> i did edit two Basic.pm files... is these two files are the same "blib" one ? edited the blibi/lib/Curses/UI/Dialog/Basic.pm AND the lib/Cureses/UI/Dialog/Basic.pm 
[17:48:51] <LeoNerd> Notice the word "blib" in the path
[17:48:58] <LeoNerd> Never touch that one. It is temporary junk
[17:49:06] <LeoNerd> Might be overwritten at any time
[17:49:24] <dg_dg> yes, i edited the one with blib (the wrong one) in the directory name, and an other one without blib inside the directory name
[17:49:44] <LeoNerd> Right, so the prisine source is fine
[17:50:00] <LeoNerd> You can edit that then install if you want. It's just a slower roundtrip development time than editing the installed file directly
[17:50:17] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[17:50:55] <dg_dg> the "pristine source" one is the one inside lib (without blib) ?
[17:51:01] <LeoNerd> yes
[17:51:12] <dg_dg> ok. Then how to next, install it again ?
[17:51:22] <LeoNerd> 14:09 <LeoNerd> cpan> look Some::Module   edit file; perl Build.PL; ./Build test; ./Build install
[17:52:05] <dg_dg> it is not clear at this precise point
[17:52:31] <dg_dg> do i neeed to execute cpan command, then from inside act for Build it ?
[17:52:32] <LeoNerd> You have edited a file.  run  perl Build.PL.  Thnem ./Build test. Then ./Build install
[17:52:42] <LeoNerd> From the shell that `cpan> look` gave you
[17:52:43] <dg_dg> ok, from command line.
[17:52:57] <dg_dg> ho... INSIDE cpan
[17:53:03] <LeoNerd> From aynwhere, it matters not
[17:53:05] <LeoNerd> It's a shell
[17:53:10] <dg_dg> ok
[17:53:13] <LeoNerd> cpan look -happens to be- a convenient way to get to it
[17:53:16] <LeoNerd> and is how I thought you got there
[17:53:17] <LeoNerd> but maybe not
[17:53:24] <dg_dg> it is
[17:53:30] <LeoNerd> I keep having to guess because you keep giving me half-information then questioning the responses I give based on those guesses
[17:53:33] <LeoNerd> thus this is difficult
[17:54:10] <dg_dg> yes it is when it is forst time to learn this... it is always difficult to teach something to a beginner.
[17:54:23] <LeoNerd> That's fine. I don;t mind explainign to beginners
[17:54:30] <LeoNerd> I thought you weren't because you started halfway in the middle
[17:54:39] <LeoNerd> So I told you just enough that someone who was starting there should be able to cope with
[17:54:45] <LeoNerd> I am annoyed because Ihad to backtrack over that assumption
[17:55:05] <LeoNerd> If you had started with "Hi I know nothing, how do I edit a source file inside a module then test it out" I would have explained in maybe 5 lines and all would be well
[17:55:12] <dg_dg> i understand, thank you for that.
[17:57:37] <dg_dg> a stupid question most probably: from inside cpan shell i have to run: " perl /.Build.PL " command ?
[17:58:02] <LeoNerd> Now, you see where I typed  ./Build.PL   and I put the dot before the forwardslash, so it looked like ./ and not /.  ?
[17:58:23] <LeoNerd> How does that compare to yours?
[17:59:14] <dg_dg> yes... but i have top execute the command: "perl ./Build.PL" or "run perl ./Build.PL" ?
[17:59:29] <LeoNerd> Just `perl ./Build.PL`
[17:59:34] <dg_dg> ok
[17:59:47] <LeoNerd> I tried to emphasise that with the doublespace
[17:59:57] <LeoNerd> I sometimes think that my eyes are unique in that nobody else can see the presnece of a  doublespace
[18:00:10] <dg_dg> there is answer: no files of this type
[18:00:29] <dg_dg> because you told me it is a shell, then i did ls... an,d see there is none Build.PL file
[18:00:49] <dg_dg> but Makefile.PL exist. Do i try with this one instead ?
[18:00:55] <LeoNerd> I'm not sure what would print a message "no files of this type"
[18:01:11] <LeoNerd> But yes you're now onto my second line:  14:10 <LeoNerd> or equivakent for make-based ones
[18:01:30] <ology> So why not just install the module, then look for the file to edit (with perldoc -l), then sudo +w it and edit the file(s)? 
[18:01:42] <LeoNerd> ology: I've said that about 3 times now and given up
[18:01:44] <dg_dg> why not ? Because i don't know how to do.
[18:02:14] <LeoNerd> Then you can ask
[18:02:21] <dg_dg> i'm asking now.
[18:02:31] <LeoNerd> Technically you're not. You're stating that you don't know
[18:02:36] <LeoNerd> I didn't take that as a request to explain it
[18:02:44] <dg_dg> yes i just do it right now... please.
[18:02:44] <LeoNerd> You're repeatedly not making this easy to help you :)
[18:02:47] <LeoNerd> Right
[18:03:02] <LeoNerd> I'm sure ology already explained it..   perldoc -l Name::Of::The::Module  will print the path to the installed file
[18:03:06] <LeoNerd> So you can just edit it there
[18:03:07] <dg_dg> i'm trying to do really. It is confused for me, can you accept it as it is ?
[18:03:15] <LeoNerd> E.g. I do  nvim `perldoc -l Some::Module`  all the time
[18:03:38] <LeoNerd> It is not about the confusion of the subject. It is about your ability to ask for help
[18:03:41] <dg_dg> let's try...
[18:05:28] <dg_dg> sorry for my so bad ability to ask for help.
[18:06:15] <dg_dg> so i did open with vim backtik perldoc -l Curses:UI" and find Dialog/Basic.pm" to edit, then it was edited same i did...
[18:06:21] <dg_dg> what's next then ?
[18:06:29] <LeoNerd> That's it. All done. You've edited the file
[18:06:48] <dg_dg> and from any script using it the modification will apply now ?
[18:06:54] <LeoNerd> Which is what I thought you had done in the very first place when I said way back: 14:00 <LeoNerd> You have some files. You've edited them | 14:00 <LeoNerd> They're in use. Done
[18:07:13] <ology> dg_dg: Try to run your program and see if it works as you wish it to.
[18:07:18] <dg_dg> that's all done... nothiong more. ok
[18:07:41] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[18:08:41] <dg_dg> @ology, LeoNerd after running my script i can see there is no effect on the change done.
[18:09:01] <LeoNerd> Then maybe the change doesn't do what you thought
[18:09:19] <LeoNerd> Next step I usually put   die "BORK BORK BORK"  as the first line in the file, to prove to myself that I'm even editing the right file
[18:09:28] <LeoNerd> If your program -continues- to run unaffected you'll know you have the wrong file
[18:09:30] <ology> dg_dg: Are you sure your edits took and there were no errors about permission denied or anything?
[18:10:16] <dg_dg> @LeoNerd, inside my modification, i commented lines to control the size of the widget, so that i can see in the same time if modification does effect...
[18:10:44] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[18:10:48] <dg_dg> @ology, no error after to enforce writing  :w!
[18:10:51] <ology> BJÃ¶RK
[18:12:05] <dg_dg> @LeoNerd, i tryed what you requested about BORK... to generate an error. no error...
[18:12:22] <LeoNerd> Then we learn something new: You've got the wrong file
[18:12:32] <LeoNerd> The file you're editing is not the one that your program is reading from
[18:12:36] *** Joins: tomys_ (~tomys@c188-149-14-10.bredband.tele2.se)
[18:12:40] <dg_dg> @ology, do you want i try with BJÃ¶RK (i can joke a bit maybe ?)
[18:13:01] <dg_dg> @LeoNerd, yes, i think the same...
[18:13:19] <dg_dg> my find command show me that there is not thousand of Basic.pm files....
[18:14:01] <LeoNerd> At this point I'd be looking at what program it was you ran and how you ran it
[18:14:13] <LeoNerd> Perhaps there is a reason it is looking elsewhere
[18:16:25] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 250 seconds)
[18:16:35] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:b4e8:6f53:6fdf:55e6) (Read error: Connection reset by peer)
[18:16:51] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:90d6:f3c8:741b:677a)
[18:17:04] *** tomys_ is now known as kevin-oculus
[18:18:39] *** Joins: martinus__ (~martin@111.27.202.77.rev.sfr.net)
[18:19:28] <dg_dg> @LeoNerd, i think that when i use the module Curses::UI::Dialog::Basic if no error, it should then use this module... so if i modify it, it should show the result of the modification. Much more with an error if i add "BORK3 in the first line of the module script i modified...
[18:19:57] <LeoNerd> quite
[18:20:12] <LeoNerd> You might want to check that first with   perl -MCurses::UI::Dialog::Basic -e1
[18:20:14] <dg_dg> and there is no error at script running time... when i call the dialog, it just refuse to print it and show the error message i commented in the module file concerned...
[18:20:27] <dg_dg> ok, i'm trying this
[18:20:28] <LeoNerd> Ah right, so it's being loaded lazily
[18:21:26] <dg_dg> did it (no return), and script doesn't change at running time after that.
[18:21:44] <LeoNerd> That runs OK without the BORK error?
[18:21:58] <dg_dg> with the BORK error that is running the same 
[18:22:04] <dg_dg> no error
[18:22:09] <LeoNerd> OK I'm again having trouble following along
[18:22:18] <LeoNerd> Leave the bork error in. Run the perl -M command. Does it print an error?
[18:22:21] <dg_dg> we having trouble
[18:22:51] <LeoNerd> Advice: use lots of words. Big long detailed descriptions of what you did and what happened will help
[18:23:11] <LeoNerd> I can read lots of words very quickly. Don't be afraid of overwhelming me with a wall of text
[18:24:17] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 240 seconds)
[18:24:24] <dg_dg> ok. So i did removed BORK line and tryed again to run perl -MCurses::UI::Dialog::BASIC -e1
[18:24:33] <LeoNerd> No. Don't. leave it in there
[18:24:38] <dg_dg> and try again to run my own script using it. No change happens.
[18:24:38] <LeoNerd> It is a useful "is this being found?" yes
[18:24:53] <LeoNerd> Leave the error message in. Run the perl -M test and see: does it break?
[18:25:06] <LeoNerd> It should do. If it breaks that proves perl actually finds the real file. If *that* doesn't break we have bigger problems
[18:25:22] <dg_dg> when it breaks it should print an error message, right ?
[18:25:36] <LeoNerd> Indeed it should
[18:25:36] <dg_dg> it didn't.
[18:25:43] <dg_dg> bis repetita
[18:25:54] <LeoNerd> Right. Then we have a bigger problem
[18:26:20] <dg_dg> it looks like...
[18:26:46] *** Joins: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com)
[18:26:48] <LeoNerd> I'd suggest perlmodpath but I still haven't got aroudn to putting it on CPAN yet so instead run  perl -MCurses::UI::Dialog::Basic -E 'say $INC{"Curses/UI/Dialog/Basic.pm"}'  and see what it prints. Comapre that to the output of the perldoc -l and to the file that you actually edited
[18:26:55] <LeoNerd> Check that these are the same path
[18:27:15] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 250 seconds)
[18:27:35] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:28:06] <dg_dg> i have an idea why...
[18:29:50] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[18:30:17] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 256 seconds)
[18:30:17] *** Joins: tylee (~tylee@user/tylee)
[18:30:31] *** Quits: przemoc (~przemoc@89-72-24-4.dynamic.chello.pl) (Ping timeout: 256 seconds)
[18:32:21] <dg_dg> i have also a .cpan directory inside my /root/.local/share/ directory
[18:32:49] <LeoNerd> Compare the paths. Do they match?
[18:33:01] <dg_dg> no, they don't
[18:33:13] <LeoNerd> Roghty. That's fun. \what are they?
[18:33:20] <dg_dg> there is much more versions of Curses-UI
[18:33:25] <LeoNerd> show us. see topic for paste site
[18:33:32] <LeoNerd> Let us see what you see
[18:33:36] <LeoNerd> That helps
[18:34:45] <tylee> hi. how to replace newline as a part of string? for example, i have string 3test\nperl where \n is newline. I want to make string "3test\nscript\nperl" replaced 'test\nscript' with 'test\nscript\nperl'. 3`perl -pe 's/test\n/test\nscript\n/'` works but I want to apply this command only to defined pair of lines
[18:36:20] * GumbyPAN CPAN Upload: Music-Intervals-0.0801 by GENE https://metacpan.org/release/GENE/Music-Intervals-0.0801
[18:36:27] <LeoNerd> tylee: perl -pe  iterates on each individual line of input separately. Thrrefore  s/foo\nbar/... will never work, because it sees the foo one time and the bar the next
[18:36:40] <LeoNerd> You'll want to operate it in slurp mode; add the -0777 option
[18:37:23] <tylee> LeoNerd: thanks!
[18:40:17] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Read error: Connection reset by peer)
[18:40:39] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[18:41:18] <aquanight> perl -pe 'if (/first_line/) { my $prv = $_; my $nx = <>; $_ .= $nx; if (/first_line\nsecond_line) { s//replacement/; } else { print $prv; $_ = $nx; redo; } }' I think can work if for some strange reason you can't or don't want to slurp
[18:42:05] <LeoNerd> Unless your file is -huuuge- and won't fit in RAM, slurp mode is much simpler
[18:42:44] <aquanight> indeed
[18:45:53] *** Joins: krismatrix (~krismatri@38.80.149.51)
[18:49:43] <aquanight> of course, just as annoying is I still haven't figured out a good way to extract aligned text
[18:49:58] <LeoNerd> "extract aligned text"?
[18:50:00] *** Joins: przemoc (~przemoc@user/przemoc)
[18:50:33] <aquanight> best way to describe it would be text aligned in columns
[18:51:34] <aquanight> I mean I could probably hack together something using multiple regexes and the indexes provided by @+/@-
[18:51:54] <LeoNerd> Or just use unpack A*
[18:52:12] <aquanight> I'm sorry what now
[18:52:21] <LeoNerd> eval: [ unpack "A4 x A6 x A12", "hell someth and the rest of the text here" ]
[18:52:23] <perlbot> LeoNerd: ["hell","someth","and the rest"]
[18:52:44] <LeoNerd> 4 chars as a string, skip a byte, 6 chars as a string, skip a byte, 12 chars as a string
[18:52:50] <aquanight> ah
[18:52:58] <aquanight> that works if you know the column width(s) in advance
[18:53:24] <LeoNerd> Yeah. If you don't, you could e.g. regexp match against some heading line and extract the positions/widths, as you say, out of @- / @+
[18:53:49] <LeoNerd> Then form a single unpack template that can extract the rest of the lines. I've done that before as well
[18:54:52] <aquanight> and here I was thinking trying to do it in one regex and having to use (?{}) shenanigans
[18:55:38] <aquanight> because certainly something like /^(\s*)first_line\n\1second_line/ could work for python-type stuff
[18:55:41] <LeoNerd> Depends on the problem. But e.g. if you have a text-formatted table with some headings and then many rows of data, you might do this approach to parse the headings to grab the positions, make an unpack template, then use the unpack template on the data lines
[18:57:39] <aquanight> of course you're going to find that savage animal that uses \t to align things
[18:58:04] <aquanight> but then that means good news: the file is basically TSV and you can just split /\t+/
[18:58:09] <LeoNerd> :)
[18:58:22] <LeoNerd> Oh that reminds me I should add a global --tsv option to my App::csvtool
[18:58:34] <LeoNerd> Did I ever CPAN that?
[18:58:45] <LeoNerd> https://metacpan.org/search?size=20&q=csvtool&search_type=modules  -- huh. apparently I did not
[18:58:46] <Paperbot_> Link title(s): [ Search for "csvtool" - metacpan.org ]
[18:59:20] <aquanight> but more savage is the animal that mixes \t and \x20
[18:59:27] <LeoNerd> Such people deserve to be shot
[18:59:51] <aquanight> I can understand ^\t+\x20+ type situations
[19:00:16] <LeoNerd> Those would be justabout excusable -if- all editors coped sensibly with them. But most don't
[19:00:19] <LeoNerd> Even nvim doesn't by default
[19:00:44] <aquanight> when the idea is "match previous line's indent and then align with some specific thing in it"
[19:00:49] <aquanight> and yeah some code editors can't deal
[19:01:18] <LeoNerd> When you `o`pen a new line, nvim will just inject an amount of whatever it thinks is the current indentation text (depending on 'et), up to the current indentation level. It won't exactly copy the previous line's mix of tabs/spaces
[19:01:27] <aquanight> it sucks because I'm probably one of the 7 people that prefer \t indenting.
[19:01:37] <LeoNerd> I just outright reject \t in any source file other than the sadly-necessary Makefile
[19:01:53] <LeoNerd> But then I also don't use Makefiles for Perl stuff, so in perl I never encounter \t at all. :)
[19:02:17] <aquanight> I mostly advocate for \t because people like to fight over how "wide" an indent should be
[19:02:26] <aquanight> 2 spaces this, 4 that, even 8
[19:02:31] <aquanight> it's like
[19:02:49] <LeoNerd> But then it breaks everything, e.g.  git diff
[19:02:49] <aquanight> everyone use \t, :set tabstop, and everyone's happy
[19:03:59] <aquanight> I'm not sure how it would break git diff?
[19:04:29] <LeoNerd> Take two lines, [ " "x8 . "Hello" ] and [ "\t" . "Hello" ].  cat them. They align
[19:04:32] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[19:04:38] * pragma- pats shiftwidth
[19:04:42] <LeoNerd> edit the "hello" to "goodbye" and show that in  git diff
[19:04:48] <LeoNerd> Observe how they *no longer align*
[19:05:11] <LeoNerd> git diff prnits every line prefixed with "  " or "+ " or "- " or whatever. It prepends *two* characters on every line before it prints them
[19:05:25] <aquanight> well if it was \t in the first place it would align :P
[19:05:30] <LeoNerd> On the space-indented line, those two spaces have pushed the rest of the text out 2 more columns. The hello/goodbye are now in column 10
[19:05:42] <aquanight> I mean yes it's a problem when change the indent
[19:05:51] <LeoNerd> The tab-indented line meanwhile remains on column 8. Because \t doesn't mean "8 spaces". It means "advance to the next column that is a multiple of 8"
[19:05:58] <aquanight> and the one guy decides he hates everything and you get a diff full of whitespace changes
[19:06:13] <LeoNerd> Yup. But we already know most editors *will* screw that uop
[19:06:32] <LeoNerd> If you put \t in a file it is basically inevitable that someone's editor will expand that to spaces at the wrong time
[19:06:49] <LeoNerd> You can easily avoid that by never putting a \t in any source code file ever (except those named Makefile)
[19:07:47] <aquanight> yeah see, the theory behind the \t solution is now everyone can have their own indent widths. The problem of course, is those people with editors that will expand tabs.
[19:07:55] <aquanight> bit of a misfeature if you ask me
[19:08:42] <LeoNerd> Yes; the mistake started when the original vi added the 'ts option in the first place
[19:08:48] <aquanight> also diff itself has both -t and -T that would solve the example scenario, no idea if git diff uses it tho
[19:08:50] <LeoNerd> HT is a terminal control code that advances the cursor
[19:08:56] <LeoNerd> It has *NO BUSINESS* living in a "plain text" file
[19:09:17] <LeoNerd> If people are going to want to put HT in plaintext files, I'm going to start putting allsorts of other terminal control sequences in them
[19:09:29] <LeoNerd> And I can assure you I know a *lot* of very funky exciting control codes :)
[19:09:34] <aquanight> I mean
[19:09:51] <aquanight> people have put VT codes of all kinds in their text files
[19:10:06] <LeoNerd> VT between functions in a .c file used to be quite commonplace, yes
[19:10:12] <aquanight> though to be fair, besides use at a terminal, half the *point* of HT is to be used in text files
[19:10:19] <LeoNerd> When you sent it to a printer, VT acts like "formfeed" and sends each function onto a new page
[19:10:21] <aquanight> it and some of the other whitespace like control codes
[19:10:35] <LeoNerd> I think we should use SGR more
[19:11:06] <aquanight> not sure what SGR is
[19:11:07] <LeoNerd> Why bother with /poor-man's italics/ when we can use {SGR 5}real italics{SGR} instead?
[19:11:22] <LeoNerd> Select Graphical Rendition. CSI m
[19:11:28] <aquanight> ah
[19:12:05] <aquanight> I mean, even some IRC clients aren't always on the ball with things sometimes.
[19:12:25] <aquanight> (yup, snuck a BEL in that one, have fun)
[19:12:37] <LeoNerd> I don't think anyone has ever defined that e.g. SGR should live in IRC text. Infact I'm fairly sure people say it shouldn't
[19:12:48] <aquanight> right
[19:12:55] <LeoNerd> IRC has its own defacto standards (plural, because yes of course there's always more than one to choose from ;) )
[19:13:55] <aquanight> but I guess it's the question of what you define as a "plain text file". A file that is just raw characters, 99% of which happen to be in a language? Or a file that contains "text"?
[19:14:09] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[19:14:11] <LeoNerd> It's a fun question indeed
[19:14:40] <aquanight> because arguably, once UTF-8 enters the equation the file is now in non-raw format
[19:14:43] <LeoNerd> I'd argue that a "plaintext" file is a sequence of CR-terminated sequences of printing characters; be they ASCII or UTF-8
[19:15:00] <aquanight> right, so a file that contains text
[19:15:09] <aquanight> and only text
[19:15:15] <aquanight> also please
[19:15:16] <LeoNerd> And thus aside from the CRs that exist purely to delimit the separate lines, we're not allowing the C0/C1 bytes
[19:15:17] <aquanight> CR LF
[19:15:31] <LeoNerd> I suppose some legacy operating system might be permitted a get-out on the CR-LF pair
[19:15:46] <LeoNerd> CP/M didn't have termios after all
[19:15:59] <aquanight> but I'm amused that of all the line endings you went with the MacOS one
[19:16:20] <LeoNerd> Ohwait they're all NL aren't they.. Hrm
[19:16:30] <LeoNerd> Well anyhow, that detail aside, point remains :)
[19:16:36] <aquanight> a CR text file would just dump everything on one line :)
[19:16:39] <LeoNerd> Stop putting other C0s in your "plain text" files :P
[19:18:07] * aquanight starts sneaking DC2, CAN, and FS into perl files
[19:18:28] <aquanight> but I'd make the argument perl scripts aren't "text" files. They're "perl" files. So the rules can be different :)
[19:18:38] <leont> LeoNerd: yeah I was about to say that, NL not CR
[19:19:38] <aquanight> LeoNerd: and now for some reason I'm thinking back to optrees and wondering how a persistable form of a precompiled optree might work.
[19:19:49] <LeoNerd> Oh *now* the nit-pickers come a-picking nits :P
[19:20:09] <aquanight> (the answer being: not really at all given that the ppaddr is very much not persistable and a very important part of the opcode)
[19:20:32] <LeoNerd> aquanight: I don't follow why. It would be roughly the same CPU effort to resurrect it from disk, as to just recalculate it by parsing the original source code
[19:20:50] <LeoNerd> parse/compiletime is such a tiny portion of the startup cost of running a perl program I don't think it would gain you anything
[19:21:34] <LeoNerd> Yeah exactly; you'd have to go to efforts to ensure all the ppaddrs were correct.. the moment you see an OP_CUSTOM basically all bets are off.
[19:22:01] <LeoNerd> And increasingly now, because of all my Syntax::Keyword:: modules, most of my running code ends up with lots of OP_CUSTOMs in anyway
[19:24:27] *** Quits: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com) (Ping timeout: 250 seconds)
[19:24:32] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[19:25:47] *** Joins: krismatrix (~krismatri@38.80.149.51)
[19:26:25] * GumbyPAN CPAN Upload: Music-Intervals-0.0802 by GENE https://metacpan.org/release/GENE/Music-Intervals-0.0802
[19:28:59] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 256 seconds)
[19:29:01] <krismatrix> Hey LeoNerd...do you want to expand on the Async/Await/promise discussion from yesterday?
[19:31:40] <aquanight> LeoNerd: didn't actually know that regarding parsing. Of course, there's the part where there's theoretically valid optrees that can't be represented syntactically (but those only arise from someone doing shenanigans rather than just parsing perl)
[19:33:03] <aquanight> example: my $x = 4; { my $z = 7; $z += 4; } # is simple enough, but could this optree occur with both lexicals named "$x"? the PADSV op just needs the pad index, doesn't care about the names. It's theoretically a valid optree, but deparse it and things get weird.
[19:33:29] <aquanight> ...
[19:33:35] <aquanight> example: my $x = 4; { my $z = 7; $z += $x; } # is simple enough, but could this optree occur with both lexicals named "$x"? the PADSV op just needs the pad index, doesn't care about the names. It's theoretically a valid optree, but deparse it and things get weird.
[19:33:42] <aquanight> THAT'S what I meant.
[19:33:57] <LeoNerd> krismatrix: Ohmaybe but I saw simcop2387 did a pretty good job. Was anything else left unclear?
[19:34:58] <LeoNerd> aquanight: Yeah certainly... optrees just store pad indexes as numbers. Both F-AA and O-P use this to their advantage
[19:35:00] <krismatrix> probably not. Although I forget whether he said anything about why node made such as choice to run things as an event loop versus the perl way.
[19:35:13] <LeoNerd> They invent extra lexicals that don't have parseable names
[19:35:41] <LeoNerd> krismatrix: oh well for that I've no idea. future-proofing maybe? API consistency?
[19:36:26] <LeoNerd> IMHO -every- systemcall ought to be inherently async and the only blocking syscall should be await... DNIX did that. it was glorious
[19:37:21] <krismatrix> so...you think the node system for reading concents of a file is better than the way perl does it?
[19:37:33] <tm604> vastly better, yes
[19:37:41] <tm604> although it ends up a bit slower
[19:38:25] <LeoNerd> It;s slower on current impls because current OSes have to use threads or othersuch nonsense
[19:38:41] <tm604> more that it will always be slower due to overhead
[19:38:41] <LeoNerd> It has the potential to be much much nicer once OSes play along better
[19:38:48] <tm604> node guarantees all promises are deferred, for example
[19:38:57] *** Joins: fuzzix (~fuzzix@46.7.53.110)
[19:39:00] <LeoNerd> Oh, well that.. heh
[19:39:12] <LeoNerd> I was thinking more likee iouring
[19:39:31] <krismatrix> mmm...i feel like the read interface is so much more confusing in node than perl (or python..etc.)
[19:39:47] <tm604> what part of it is confusing?
[19:40:56] <krismatrix> well...to read a file line by line...all i have to do in perl is .. open(my $fh); while($line = <$fh>) {print $line;}
[19:41:09] <tm604> except you don't handle encoding, or errors
[19:41:18] <LeoNerd> while(await $line = aread $fh) {...}
[19:41:19] <LeoNerd> donr
[19:41:26] <LeoNerd> rrr
[19:41:34] <LeoNerd> while($line = await aread $fh) {...}
[19:41:44] <tm604> "read file" in node really isn't too complicated, is it?
[19:41:47] <krismatrix> ghttps://stackabuse.com/reading-a-file-line-by-line-in-node-js/ for node...a whole page of confusing stuff
[19:41:47] <Paperbot_> Link title(s): [ Reading a File Line by Line in Node.js ]
[19:41:52] <tm604> const fs = require('fs'); console.log(fs.readFileSync(file, 'utf8')) // which part don't we like?
[19:41:54] <LeoNerd> ((I shouldn't type perl from the bath ;) ))
[19:42:35] *** Quits: speskk (~speskk@user/speskk) (Ping timeout: 256 seconds)
[19:42:40] <krismatrix> i just skipped or die in my open statement to keep it simple here.
[19:42:56] <krismatrix> referring to my perl statement...that tm604 is referring to earler.
[19:43:08] <krismatrix> what is readFileSync()?
[19:43:10] <LeoNerd> Hah, yes having a read operation which *gasp* returns the bytes is *hugely* more sensible than one which returns an errorcode and side-effects the bytes by mutating an lvalue passed in by the caller
[19:43:16] <LeoNerd> For that -alone- it is nice
[19:43:41] <krismatrix> LeoNerd are you talking about perl or node here?
[19:43:46] <LeoNerd> node
[19:44:17] <krismatrix> ok...i don't understand any of that i guess.
[19:45:02] <tm604> readFileSync just reads a file, synchronously. https://nodejs.org/api/fs.html#fsreadfilesyncpath-options
[19:45:03] <Paperbot_> Link title(s): [ File system | Node.js v17.4.0 Documentation ]
[19:45:17] *** Quits: cusion (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Ping timeout: 240 seconds)
[19:45:31] <tm604> but I'd suggest not skipping parts to make things simple when you're comparing languages to show which one is more simple...
[19:45:46] <tm604> "in Perl it's just <>, why is node so hard"
[19:46:12] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Remote host closed the connection)
[19:46:35] <LeoNerd> OK lets go right back to the beginning. Forget node, forget perl. Forget *programming* Think really in general, about anything. Maybe boiling the kettle to make tea. Absolutely anything at all.  Would you agree that the process of doing *anything* that is going to take more than zero time, could be described in two steps of "start doing the thing" followed by "wait for the thing to be done" ?
[19:46:53] <krismatrix> ok.
[19:47:33] <LeoNerd> OK. So, ... if you have nothing else to be doing, you might as well consider those two steps in one... "do the thing". Boil the kettle. Make toast. Read 10MiB off a disk. Connect to a remote TCP socket. Whatever. These are "do a thing"
[19:47:54] <LeoNerd> This is what in this field is described as a /synchronous/ operation. That means we wait for it to be finished
[19:48:38] <LeoNerd> But,... sometimes we want to be doing lots of things at once, and then it makes sense to remember that split between "start doing a thing" and "wait for the thing to be done". If we're making a cup of tea and some toast, we could start both of them, then wait for both of them to be finished
[19:48:51] <LeoNerd> If we're going to do that, we need a way to separately express the concepts of "start doing a thing" from "wait for the thing to be done"
[19:49:44] <krismatrix> ok
[19:49:54] <LeoNerd> In many programming languages/libraries/whatever, we often like to be able to talk about "an operation that we're waiting to be finished" as some firstclass thing.. some value, some entity we can hold. E.g here we call it a Future
[19:50:20] <LeoNerd> So we don't wait for the kettle to boil and get water out of it. What we do is we _start_ the kettle boiling, and we get a Future. That Future represents the idea that sometime eventually, the kettle will be done.
[19:50:34] *** Joins: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com)
[19:50:39] <LeoNerd> In the meantime we're free to do something else. Maybe start the toaster. Starting the toaster gets us another Future. We can now hold on to both of these, and wait for -both- of them to be ready
[19:50:56] <krismatrix> To clarify...Future is not part of base perl right?
[19:51:00] <LeoNerd> Again, in Perl those two things can be split into calling some function that returns a Future, and calling `await` on that Future
[19:51:32] <LeoNerd> my $kettlef = Kettle->start; my $toasterf = Toaster->start;   my $water = await $kettlef;  my $toast = await $toasterf;
[19:52:11] <LeoNerd> Now if we only want to do one thing and wait for it, because we literally have nothing else to do, we could write that as   my $water = await Kettle->start;   and maybe in Perl that's quite neat and tidy enough, so all is well
[19:52:27] <LeoNerd> But some other languages don't have this tidy 'await' syntax. So there, it's often neater (especially in C), to have two copies of every function
[19:52:38] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[19:52:46] <LeoNerd> One copy just starts the thing and returns that futrey-promisey object; the other function does the entire waiting and returns the result directly
[19:52:59] <LeoNerd> libuv does this a lot; it has lots of function pairs named thingyAsync() and thingySync()
[19:53:15] <LeoNerd> Node is a fairly thin wrapper around libuv in this regard; and in quite a few places, exposes both copies of those functions
[19:53:57] <LeoNerd> But really, that "having to have two copies of every function" is just an annoying artefact of them not having really convenient 'await' syntax, or at least, not having had it early on in design
[19:55:02] <LeoNerd> If you -want- to be able to see that split between "start reading a file" and "wait for the file read to be finished", then use the Async version. But if you've nothing else to do inbetween, then you don't need to bother. Just use the Sync() version instead.
[19:55:25] *** Joins: seth33 (~seth@ip5f5bed21.dynamic.kabel-deutschland.de)
[19:55:32] <LeoNerd> Does that all make sense?
[19:55:50] <krismatrix> yes.
[19:55:58] *** Joins: cusion (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[19:56:39] <krismatrix> Basically you are saying that perl open and read is a sync operation whereas in node it is an async operation. So If I want it to work like I expect in perl, I need to force the async function to be sync in node.
[19:56:47] <krismatrix> And the await helps with that.
[19:57:31] <krismatrix> I think I want to experiment with perl's async await by reading a file...maybe it will help me understand that a bit better.
[19:57:34] <LeoNerd> Yes
[19:58:13] <tm604> node has async and sync interfaces - with `fs.readFileSync` you don't need the `await`
[19:58:44] <krismatrix> noted tm604. Can I do an short experiment of async with perl where I am reading two files line by line asynchronously with just IO::Async?
[19:58:57] <tm604> so the above example would be something like `use Path::Tiny; print path($file)->slurp_utf8`
[19:59:28] <tm604> you could try, but I'd suggest something other than files - sockets, pipes etc.
[19:59:33] <krismatrix> tm604...when I want something to run async, are we saying all node functions have both a sync and async version?
[19:59:36] <seth33> what could be the reason that LWP needs several minutes(!) for a simple GET request to many domains (where wget or curl need less than 1 second)?
[19:59:37] <seth33> e.g. `perl -e 'use LWP::UserAgent; my $ua=LWP::UserAgent->new(); $ua->get("https://duckduckgo.com");'` needs less <1s, but with `www.wikipedia.org` it needsÂ  sometimes ~2, sometimes ~4.5 minutes. curl and wget need <1s always. how could i debug that in a reasonable way?
[19:59:37] <Paperbot_> Link title(s): [ DuckDuckGo â€” Privacy, simplified. ]
[19:59:41] <tm604> some do, some don't
[19:59:53] <krismatrix> ok.
[20:00:36] <tm604> seth33: try `strace` perhaps? could be User-Agent header, or slow DNS
[20:00:39] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[20:01:22] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[20:01:50] <seth33> i tested other user-agents already. that does not seem to be the problem. DNS: maybe, but why would curl use another resolution than LWP?
[20:02:27] <tm604> try curl -v, see which HTTP version it's using
[20:03:03] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:04:00] <tm604> (Perl isn't very good at HTTP, unfortunately: most of the clients are HTTP/1.1, there's barely any support for HTTP/2, let alone HTTP/3)
[20:05:53] <seth33> the last two strace lines before there is that long "sleep" are
[20:05:53] <seth33> `connect(3, {sa_family=AF_INET6, sin6_port=htons(443), sin6_flowinfo=htonl(0), inet_pton(AF_INET6, "2620:0:862:ed1a::1", &sin6_addr), sin6_scope_id=0}, 28) = -1 EINPROGRESS (Operation now in progress)
[20:05:54] <seth33> select(8, NULL, [3], [3], {tv_sec=180, tv_usec=0}`
[20:05:54] <seth33> does that give any hint?
[20:06:03] *** Quits: bbrtj (~bbrtj@185.24.91.138) (Ping timeout: 256 seconds)
[20:09:07] <tm604> looks like an IPv6 routing issue?
[20:09:48] <seth33> `curl -I` gives me 'HTTP/2' on both duck.com and wikipedia.org.
[20:12:03] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 256 seconds)
[20:12:04] <seth33> hmm, i have the DNS servers 2001:4860:4860::8888, 2001:4860:4860::8844 for ipv6, here on this machine. might that be the problem? but why would that only harm LWP and not curl?
[20:13:39] *** Quits: tylee (~tylee@user/tylee) (Ping timeout: 256 seconds)
[20:14:12] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[20:15:06] <seth33> i'll restart my network to test whether removing those servers changes the problem. i'll be back in a few minutes.
[20:15:17] <tm604> try `curl --http1.1 -6`, see if that's also slow?
[20:15:21] *** Quits: veesh (~veesh@89.237.110.37) (Ping timeout: 256 seconds)
[20:15:25] <LeoNerd> try ping -6 or telnet or whatever
[20:15:44] <LeoNerd> my bet is you don't have ipv6 routing working properly
[20:16:00] <LeoNerd> see also: happy eyeballs. i forget its RFC number
[20:16:01] *** Quits: cusion (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Ping timeout: 250 seconds)
[20:16:06] *** Joins: veesh (~veesh@89.237.105.38)
[20:16:07] <tm604> 6555!
[20:16:24] <LeoNerd> That's the one!
[20:16:53] <tm604> (nice and easy to remember - IPv6, with a small bit of bistable logic welded to the side)
[20:16:54] <LeoNerd> I remembered that it was memorable, I just couldn't remember what ot actually is ;)
[20:17:05] <seth33> oh, indeed! `curl -6` is also very slow.
[20:17:10] *** Joins: deadmarshal (~deadmarsh@95.38.114.62)
[20:17:12] <LeoNerd> 6 555s can play Tocatta and Fugue
[20:17:29] *** Joins: tylee (~tylee@user/tylee)
[20:17:51] <LeoNerd> Though quite what Bach has to do with Happy Eyeballs I can't quite think ;)
[20:18:43] *** Joins: idiocrash (~textual@216.73.163.85)
[20:19:24] <corwin> So that's only 3 557s then, right?
[20:19:59] *** Quits: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com) (Ping timeout: 256 seconds)
[20:20:00] <seth33> oh, i'm still here, although i dis- and re-connected to my LAN, nice!
[20:20:26] <LeoNerd> Good ol' TCP keepalive
[20:20:46] <seth33> now that i'm not using 2001:4860:4860::8888, 2001:4860:4860::8844 any longer, `curl -6` and LWP work like a charm again! :-)
[20:20:52] *** Joins: sokan_ (~sokan@athedsl-303439.home.otenet.gr)
[20:21:24] <LeoNerd> Ohyes, beware SIT gateways and other intermediary fuckeru
[20:21:35] *** Quits: sokan (~sokan@85.73.227.251) (Ping timeout: 256 seconds)
[20:21:35] *** sokan_ is now known as sokan
[20:22:25] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[20:22:55] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[20:24:13] <seth33> what is an SIT gateway? (duckduckgo did not help me.)
[20:24:18] <aquanight> LeoNerd: WRT the async stuff, be glad y'all aint dealing with Win32 async
[20:24:30] <aquanight> to this day I'm still not entirely sure I understand how OVERLAPPED* works
[20:25:18] <tm604> in some respects, overlapped I/O on windows was a far better design than most of the Linux async
[20:26:42] <tm604> (e.g. supporting file I/O without resorting to C library thread hacks!)
[20:27:07] <LeoNerd> session-in-transit; a way of layering IPv6 atop IPv4 for when the routing in the middle can't cope
[20:27:20] <LeoNerd> Yah
[20:27:40] <aquanight> oh wow I don't even remember... does C have a thing to explicitly zero-init a structure? (I know C++ has = {})
[20:27:45] <LeoNerd> Linux's actually-async file read support is nonexistent :(
[20:27:52] <aquanight> I'm guessing it's just memset
[20:27:57] <LeoNerd> = {}
[20:28:02] <LeoNerd> or  = {0}
[20:28:06] <aquanight> oh = {} works in C too?
[20:28:19] <LeoNerd> at declaration time, yes
[20:28:30] <LeoNerd> struct Thing x = {};
[20:29:25] *** Joins: sokan_ (~sokan@athedsl-304416.home.otenet.gr)
[20:30:25] *** Quits: sokan (~sokan@athedsl-303439.home.otenet.gr) (Ping timeout: 256 seconds)
[20:30:25] *** sokan_ is now known as sokan
[20:30:38] <simcop2387> aquanight: can't say i understand the apis but i know they implement things differently.  essentially with the kernel calling into a function pointer you give it when things are ready or something
[20:31:28] <seth33> thanks, guys! bye!
[20:31:31] * GumbyPAN CPAN Upload: App-Cme-1.037 by DDUMONT https://metacpan.org/release/DDUMONT/App-Cme-1.037
[20:31:50] *** Quits: seth33 (~seth@ip5f5bed21.dynamic.kabel-deutschland.de) (Quit: seth33)
[20:35:42] <aquanight> from what I'm reading you pass a pointer to an OVERLAPPED structure
[20:35:55] <aquanight> the API returns FALSE and SetLastError(ERROR_IO_PENDING)
[20:36:25] <aquanight> you're supposed to populate the .hEvent member via CreateEvent(NULL, TRUE, FALSE, NULL) // manual reset
[20:36:39] <aquanight> you can then use that hEvent with wait functions
[20:37:49] <aquanight> you can use RegisterWaitForSingleObject to put the wait in the threadpool to run a callback
[20:37:58] <tm604> cam use completion ports or an APC callback
[20:38:14] <tm604> or poll-style with WaitForMultipleObjectSex
[20:38:29] <tm604> so it's somewhat flexible, with a few quirks
[20:39:56] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 245 seconds)
[20:40:07] <tm604> (such as the infamous "64 objects should be enough for anyone" decision)
[20:42:13] <aquanight> also don't forget MsgWaitForMultipleObjects so you can incorporate it into your window message loop
[20:42:17] *** Quits: rsrchboy (~rsrchboy@207.138.198.250) (Ping timeout: 240 seconds)
[20:43:35] <aquanight> which in this case is very important if it turns out your kettle and toaster are COM objects
[20:45:02] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[20:46:37] *** Quits: martinus__ (~martin@111.27.202.77.rev.sfr.net) (Ping timeout: 256 seconds)
[20:47:58] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[20:51:49] *** Quits: Manderson (~manderson@047-028-019-189.res.spectrum.com) (Quit: Leaving)
[20:52:29] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[20:57:39] <rindolf> perlbot: pb
[20:57:39] <perlbot> rindolf: lead (or more likely http://perl-begin.org/ )
[20:57:53] <rindolf> simcop2387++
[20:59:44] <rindolf> simcop2387: thanks for fixing the lag
[21:00:35] *** Joins: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com)
[21:06:43] *** Joins: haj (~haj@95.91.235.152)
[21:18:22] *** Quits: omegatron (~some@p5b056436.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[21:21:39] *** Joins: cusion (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[21:25:22] <zgu> i always forget that emacs can transparently open files inside tar archives
[21:28:11] <xenu> aquanight: the funny thing about "= {0}" is that it works completely differently in C and C++
[21:28:24] <xenu> in c it means "zero everything" while in c++ it's "zero the first member"
[21:28:25] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39)
[21:30:02] <xenu> also = {} is illegal in C
[21:30:09] <xenu> it works in many compilers but it isn't allowed in the standard
[21:30:15] <leont> C++'s value initialization versus default initialization is also annoying
[21:30:31] <leont> especially wrt integers
[21:30:33] <xenu> which means there's no portable (between the languages) way to zero init a struct
[21:31:53] <zgu> they expect you to write an actual constructor for c++
[21:32:06] <leont> Yeah
[21:33:20] <xenu> however {} will probably be legal in C23
[21:33:36] <xenu> one of the goal of C23 in general is more compatibility with C++
[21:34:02] <xenu> the latest version of the proposal: http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2900.htm
[21:34:03] <Paperbot_> Link title(s): [ N2900: Consistent, Warningless, and Intuitive Initialization with {} ]
[21:34:06] <xenu> goals*
[21:41:39] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Remote host closed the connection)
[21:42:05] *** Joins: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca)
[21:46:39] * GumbyPAN CPAN Upload: Astro-Montenbruck-1.26 by KRUSHI https://metacpan.org/release/KRUSHI/Astro-Montenbruck-1.26
[21:49:06] *** Joins: mrKhosruw (~mrKhosruw@151.246.124.245)
[21:50:40] <mrKhosruw> Hi guys. Hope you have a good time. Is calling an API as Api a correct way to easier pronunciation?
[21:51:03] <mrKhosruw> for example: we call JSON as Json, etc.
[21:51:13] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[21:52:13] <Juerd> In English I'm not sure if people would understand A-pi, but in Dutch I usually pronounce API as ah-pee.
[21:54:29] <mrKhosruw> Juerd, that's right, people won't understand what does Api stand for.. but for marketing purposes, it's easier to call people: "We got an Api!" instead of "We got an A-P-I!"
[21:54:51] *** Quits: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com) (Ping timeout: 256 seconds)
[21:55:36] <Juerd> Well, try it, maybe it catches on... :)
[21:58:59] <mrKhosruw> Juerd, thanks for the info. there's another way too, telling people call our API as an Api!
[21:59:33] <Juerd> Get a picture of a pie with an A on it :)
[21:59:44] <Juerd> And at some point you can upgrade to A+pi :)
[22:00:28] <mrKhosruw> Juerd: haha
[22:01:41] * GumbyPAN CPAN Upload: Astro-Montenbruck-1.26 by KRUSHI https://metacpan.org/release/KRUSHI/Astro-Montenbruck-1.26
[22:02:41] *** Quits: mrKhosruw (~mrKhosruw@151.246.124.245) (Quit: Client closed)
[22:06:22] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[22:16:20] *** Quits: Masklin (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Ping timeout: 252 seconds)
[22:23:18] *** Joins: mixfix41 (~sdenyninn@user/mixfix41)
[22:23:56] *** Joins: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[22:25:41] *** Joins: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com)
[22:28:26] *** Quits: ovid (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[22:33:16] *** Joins: kensanata (~user@user/kensanata)
[22:34:29] *** Quits: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com) (Ping timeout: 252 seconds)
[22:40:59] *** Joins: brainbuz (~brainbuz@pool-74-109-124-28.phlapa.fios.verizon.net)
[22:41:03] *** Joins: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com)
[22:47:17] *** Quits: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com) (Ping timeout: 240 seconds)
[22:47:50] *** Joins: Shells (~michelle@203.206.128.220)
[22:48:17] *** Quits: Michelle (~michelle@203.206.128.220) (Ping timeout: 240 seconds)
[22:48:54] *** Quits: deadmarshal (~deadmarsh@95.38.114.62) (Ping timeout: 260 seconds)
[23:00:49] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[23:01:57] *** Quits: cusion (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Ping timeout: 256 seconds)
[23:02:34] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Max SendQ exceeded)
[23:04:00] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[23:04:21] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Remote host closed the connection)
[23:04:39] *** Joins: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com)
[23:05:51] *** Quits: mowcat (~mowcat@host86-129-162-211.range86-129.btcentralplus.com) (Read error: Connection reset by peer)
[23:07:13] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[23:08:23] *** Joins: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com)
[23:13:37] *** Quits: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com) (Ping timeout: 240 seconds)
[23:17:29] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[23:18:55] *** Parts: trillp (~trillp@2001:19f0:6401:72e:c092:4829:25d6:b788) (WeeChat 3.4)
[23:19:02] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[23:30:39] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:32:37] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:34:44] *** Joins: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com)
[23:35:40] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[23:35:55] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39)
[23:40:49] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[23:41:50] *** Joins: Markow (~Markow@176.122.215.103)
[23:49:43] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[23:50:08] *** Joins: bbrtj (~bbrtj@185.24.91.138)
[23:52:09] *** Quits: bs338 (~pi@host159-180-115-59.range159-180.btcentralplus.com) (Ping timeout: 256 seconds)
[23:53:05] *** Quits: k8yun (~k8yun@198-48-158-40.cpe.pppoe.ca) (Quit: Leaving)
[23:56:15] <ology> My Lyft driver was ex Ukrainian military. Interesting cat.
[23:58:03] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:d154:b93f:c8:b39) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
