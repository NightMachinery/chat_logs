[00:05:58] *** particleflux_ is now known as particleflux
[00:10:59] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[00:11:46] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:11:59] *** Joins: rawtaz (~rawtaz@user/rawtaz)
[00:12:05] <rawtaz> hey gophers
[00:12:40] <rawtaz> can someone recommend a tool that creates a nice graph of the packages, their functions, and how these call each other?
[00:13:01] <rawtaz> i'd like to get a more visual overview than what my brain can provide when having a code base in front of me
[00:13:29] <j416> https://github.com/ofabry/go-callvis
[00:14:37] *** Quits: tane (~tane@dslb-002-201-234-068.002.201.pools.vodafone-ip.de) (Quit: Leaving)
[00:14:58] <j416> pprof can produce graphs, too, but perhaps difficult to read
[00:15:07] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:15:13] *** Joins: moldorcoder7 (~moldorcod@37.120.143.28)
[00:16:25] <rawtaz> that looks nice, thanks :))
[00:16:40] *** Joins: _xor (~xor@72.49.199.147)
[00:17:19] <j416> o/
[00:17:36] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[00:27:34] *** Quits: src (~src@user/src) (Quit: Leaving)
[00:30:44] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 245 seconds)
[00:35:25] *** Quits: mmfood (~mmfood@194.103.157.72) (Ping timeout: 260 seconds)
[00:36:54] *** Quits: Thinkofname (~thinkthin@2a01:430:17:1::ffff:1980) (Quit: Bridge terminating on SIGTERM)
[00:41:09] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[00:46:44] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[00:47:42] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:47:42] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[00:47:42] *** Joins: wroathe (~wroathe@user/wroathe)
[00:52:26] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Remote host closed the connection)
[00:52:57] *** Quits: dch (sid1310@couchdb/committer/dch) (Ping timeout: 250 seconds)
[00:53:16] *** Quits: recursion (sid504862@user/recursion) (Ping timeout: 250 seconds)
[00:53:18] *** Quits: lebster (sid17131@id-17131.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[00:53:22] *** Quits: dreistadt (sid501648@id-501648.lymington.irccloud.com) (Ping timeout: 260 seconds)
[00:53:22] *** Quits: eric_hill (sid323132@id-323132.tinside.irccloud.com) (Ping timeout: 260 seconds)
[00:53:22] *** Quits: cmagina (sid286142@user/cmagina) (Ping timeout: 260 seconds)
[00:53:22] *** Quits: Anderson-D (sid146635@2a03:5180:f::2:3ccb) (Ping timeout: 260 seconds)
[00:53:22] *** Quits: telemachus (sid2004@id-2004.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[00:53:23] *** Quits: psb (sid500598@user/psb) (Ping timeout: 250 seconds)
[00:53:26] *** Quits: wangledorf (sid505185@id-505185.ilkley.irccloud.com) (Ping timeout: 245 seconds)
[00:53:27] *** Quits: r0bby (r0bby@user/r0bby) (Ping timeout: 240 seconds)
[00:53:42] *** Quits: hjmcnew_ (sid86092@id-86092.tinside.irccloud.com) (Ping timeout: 268 seconds)
[00:53:42] *** Quits: bw (sid2730@user/betawaffle) (Ping timeout: 250 seconds)
[00:53:49] *** Quits: nescafe1001 (sid211018@id-211018.tinside.irccloud.com) (Ping timeout: 250 seconds)
[00:53:49] *** Quits: chimeracoder (sid230642@id-230642.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[00:53:50] *** Quits: jakesyl (sid56879@id-56879.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[00:53:55] *** Quits: cespare (sid330206@id-330206.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[00:53:55] *** Quits: jsvcycling (sid369784@id-369784.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[00:53:55] *** Quits: soren (sid124229@id-124229.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[00:54:02] *** Quits: decartes_ (sid240036@id-240036.helmsley.irccloud.com) (Ping timeout: 246 seconds)
[00:54:02] *** Quits: jimcroft_______ (sid148498@id-148498.uxbridge.irccloud.com) (Ping timeout: 246 seconds)
[00:54:02] *** Quits: redlegion (sid429547@id-429547.ilkley.irccloud.com) (Ping timeout: 246 seconds)
[00:54:02] *** Quits: Shrike (sid305680@id-305680.helmsley.irccloud.com) (Ping timeout: 246 seconds)
[00:54:02] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (Ping timeout: 246 seconds)
[00:54:06] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[00:54:07] *** Quits: nikki93 (sid200244@id-200244.tinside.irccloud.com) (Ping timeout: 240 seconds)
[00:54:07] *** Quits: tylerchambers (sid511381@id-511381.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[00:54:08] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[00:54:13] *** Quits: derfj (sid19429@id-19429.tinside.irccloud.com) (Ping timeout: 252 seconds)
[00:54:15] *** Quits: gjnoonan (sid95422@id-95422.lymington.irccloud.com) (Ping timeout: 250 seconds)
[00:54:15] *** Quits: obviyus (sid415299@user/obviyus) (Ping timeout: 250 seconds)
[00:54:18] *** Quits: Balooga_ (sid407689@id-407689.lymington.irccloud.com) (Ping timeout: 260 seconds)
[00:54:30] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[00:54:34] *** Quits: theckman (sid295081@user/theckman) (Ping timeout: 250 seconds)
[00:54:34] *** Quits: liam (sid7517@id-7517.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[00:54:41] *** Quits: seds (sid492514@user/seds) (Ping timeout: 250 seconds)
[00:54:44] *** Quits: kubblai (sid478659@fedora/kubblai) (Ping timeout: 246 seconds)
[00:54:44] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (Ping timeout: 246 seconds)
[00:54:44] *** Quits: fdv (sid27570@id-27570.helmsley.irccloud.com) (Ping timeout: 246 seconds)
[00:54:44] *** Quits: qaisjp (sid26374@user/qaisjp) (Ping timeout: 246 seconds)
[00:54:46] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 260 seconds)
[00:54:46] *** Quits: pl (sid98063@id-98063.helmsley.irccloud.com) (Ping timeout: 252 seconds)
[00:54:47] *** Quits: trollixx (sid289131@id-289131.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[00:54:55] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[00:54:56] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 268 seconds)
[00:54:56] *** Quits: avery (sid501608@id-501608.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[00:55:01] *** Quits: hhes (sid420846@id-420846.ilkley.irccloud.com) (Ping timeout: 250 seconds)
[00:55:02] *** Joins: jimcroft_______ (sid148498@uxbridge.irccloud.com)
[00:55:09] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[00:55:09] *** Quits: aarchi (sid486183@id-486183.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[00:55:14] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Ping timeout: 260 seconds)
[00:55:14] *** Quits: Memory (sid459764@user/memory) (Ping timeout: 260 seconds)
[00:55:14] *** Quits: eruditass (uid248673@id-248673.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[00:55:15] *** Quits: computerquip (sid423484@user/computerquip) (Ping timeout: 260 seconds)
[00:55:15] *** Quits: chromis (sid150893@id-150893.tinside.irccloud.com) (Ping timeout: 260 seconds)
[00:55:15] *** Quits: maxamillion (sid276220@ansible/staff/maxamillion) (Ping timeout: 260 seconds)
[00:55:20] *** Joins: psb (sid500598@user/psb)
[00:55:22] *** Joins: morgabra (sid500580@user/morgabra)
[00:55:22] *** Joins: Manouchehri (sid384576@hampstead.irccloud.com)
[00:55:23] *** Joins: recursion (sid504862@ilkley.irccloud.com)
[00:55:25] *** Joins: cespare (sid330206@hampstead.irccloud.com)
[00:55:33] *** Quits: vds (sid12483@id-12483.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[00:55:33] *** Quits: st3fan (sid43079@id-43079.lymington.irccloud.com) (Ping timeout: 268 seconds)
[00:55:33] *** Quits: mustafa (sid502723@rockylinux/releng/mustafa) (Ping timeout: 268 seconds)
[00:55:33] *** Quits: hdm (sid500490@aha/hacker/hdm) (Ping timeout: 268 seconds)
[00:55:33] *** Quits: jzelinskie (sid17772@user/jzelinskie) (Ping timeout: 268 seconds)
[00:55:38] *** Joins: Memory (sid459764@user/memory)
[00:55:50] *** Quits: Memory (sid459764@user/memory) (Client Quit)
[00:55:54] *** Joins: sa (sid1055@5.254.36.57)
[00:55:55] *** Joins: cmagina (sid286142@user/cmagina)
[00:56:07] *** Joins: seds (sid492514@user/seds)
[00:56:17] *** Joins: nescafe1001 (sid211018@5.254.36.57)
[00:56:30] *** Joins: meinside (uid24933@helmsley.irccloud.com)
[00:56:46] *** Joins: qaisjp (sid26374@user/qaisjp)
[00:57:05] *** Joins: eruditass (uid248673@uxbridge.irccloud.com)
[00:57:07] *** Joins: Anderson-D (sid146635@5.254.36.57)
[00:57:12] *** Joins: r0bby (r0bby@user/r0bby)
[00:57:16] *** Joins: pl (sid98063@helmsley.irccloud.com)
[00:57:16] *** Joins: tylerchambers (sid511381@helmsley.irccloud.com)
[00:57:33] *** Joins: Shrike (sid305680@helmsley.irccloud.com)
[00:57:38] *** Joins: fdv (sid27570@helmsley.irccloud.com)
[00:57:44] *** Joins: mustafa (sid502723@rockylinux/releng/mustafa)
[00:57:56] *** Joins: hdm (sid500490@aha/hacker/hdm)
[00:57:58] *** Joins: theckman (sid295081@user/theckman)
[00:58:04] *** Joins: hhes (sid420846@ilkley.irccloud.com)
[00:58:10] *** Joins: lebster (sid17131@hampstead.irccloud.com)
[00:58:13] *** Joins: jakesyl (sid56879@hampstead.irccloud.com)
[00:58:15] *** Joins: bw (sid2730@user/betawaffle)
[00:58:19] *** Joins: Thinkofname (~thinkthin@37.205.12.211)
[00:58:22] *** Joins: computerquip (sid423484@user/computerquip)
[00:58:45] *** Joins: soren (sid124229@uxbridge.irccloud.com)
[00:58:47] *** Joins: jsvcycling (sid369784@uxbridge.irccloud.com)
[00:58:50] *** Joins: nikki93 (sid200244@5.254.36.57)
[00:58:50] *** Joins: vds (sid12483@helmsley.irccloud.com)
[00:58:50] *** Joins: derfj (sid19429@5.254.36.57)
[00:58:50] *** Joins: obviyus (sid415299@user/obviyus)
[00:58:55] *** Joins: decartes_ (sid240036@helmsley.irccloud.com)
[00:58:57] *** Joins: liam (sid7517@helmsley.irccloud.com)
[00:59:27] *** Joins: kubblai (sid478659@fedora/kubblai)
[00:59:43] *** Joins: redlegion (sid429547@ilkley.irccloud.com)
[00:59:44] *** Quits: Torr (~Torr@user/torr) ()
[00:59:45] *** Joins: itok (sid418430@ilkley.irccloud.com)
[00:59:55] *** Joins: Torr (~Torr@user/torr)
[01:00:03] *** Joins: braxas (sid508886@lymington.irccloud.com)
[01:00:05] *** Joins: Pent (sid313808@lymington.irccloud.com)
[01:00:20] *** Joins: aarchi (sid486183@uxbridge.irccloud.com)
[01:00:23] *** Joins: maxamillion (sid276220@ansible/staff/maxamillion)
[01:00:25] *** Joins: chromis (sid150893@5.254.36.57)
[01:00:30] *** Joins: hjmcnew_ (sid86092@5.254.36.57)
[01:01:05] *** Joins: jzelinskie (sid17772@user/jzelinskie)
[01:01:08] *** Joins: wangledorf (sid505185@ilkley.irccloud.com)
[01:01:30] *** Joins: gjnoonan (sid95422@lymington.irccloud.com)
[01:01:32] *** Joins: st3fan (sid43079@lymington.irccloud.com)
[01:01:57] *** Joins: trollixx (sid289131@uxbridge.irccloud.com)
[01:01:59] *** Joins: avery (sid501608@uxbridge.irccloud.com)
[01:03:52] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Remote host closed the connection)
[01:04:12] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[01:06:21] *** Joins: Balooga_ (sid407689@id-407689.lymington.irccloud.com)
[01:07:43] *** Joins: dreistadt (sid501648@id-501648.lymington.irccloud.com)
[01:07:43] *** Joins: telemachus (sid2004@id-2004.helmsley.irccloud.com)
[01:07:43] *** Joins: eric_hill (sid323132@id-323132.tinside.irccloud.com)
[01:08:14] *** Joins: dch (sid1310@couchdb/committer/dch)
[01:09:04] *** Joins: chimeracoder (sid230642@id-230642.helmsley.irccloud.com)
[01:12:05] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[01:12:35] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[01:15:56] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[01:26:02] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[01:32:08] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87)
[01:33:15] *** Joins: internut (~internut@2601:280:4e00:7b70:987c:61de:312:2261)
[01:34:40] *** Quits: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-152a-2f6e-eee7-8eb1.ip6.gigabit.dk) (Quit: Leaving)
[01:35:30] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:35:30] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:35:30] *** Joins: wroathe (~wroathe@user/wroathe)
[01:49:57] *** Joins: ahappydeath (~silbermm@dsl-74-83-53-157.fuse.net)
[01:50:41] <lungaro_> wtf is going on here
[01:50:45] <lungaro_> go: github.com/go-openapi/strfmt@v0.19.5 requires
[01:50:45] <lungaro_>         go.mongodb.org/mongo-driver@v1.0.3: missing go.sum entry; to add it:
[01:50:45] <lungaro_>         go mod download go.mongodb.org/mongo-driver
[01:51:01] <lungaro_> why does go-openapi depend on a mongodb driver?
[01:52:26] <rewt> looks like for its bson
[01:52:43] <rewt> https://github.com/go-openapi/strfmt/search?q=mongo
[01:56:48] *** Joins: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com)
[01:57:32] *** Quits: DaleNa9g (~DaleNa9g@071-093-142-189.res.spectrum.com) (Client Quit)
[01:58:41] <lungaro_> Yeah, just found a PR to add mongo types to the openapi spec. That's awful
[01:58:53] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[01:58:53] <lungaro_> oh well
[01:59:42] *** Joins: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[02:00:36] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[02:00:59] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[02:01:13] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[02:01:56] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[02:04:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[02:06:40] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[02:06:47] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:06:48] *** Joins: fikran (~fikran@user/fikran)
[02:07:46] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[02:08:28] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Remote host closed the connection)
[02:09:13] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[02:09:13] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[02:09:13] *** Joins: wroathe (~wroathe@user/wroathe)
[02:10:08] *** Joins: Atque (~Atque@user/atque)
[02:12:53] *** Joins: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net)
[02:12:58] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Remote host closed the connection)
[02:17:01] *** Joins: silbermm (~silbermm@dsl-74-83-53-157.fuse.net)
[02:21:09] *** Quits: silbermm (~silbermm@dsl-74-83-53-157.fuse.net) (Ping timeout: 245 seconds)
[02:21:47] *** Quits: nostalgia (~nostalgia@c-24-13-122-176.hsd1.in.comcast.net) (Remote host closed the connection)
[02:22:11] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[02:22:31] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.3)
[02:22:55] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[02:24:16] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 245 seconds)
[02:27:24] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Quit: Leaving)
[02:28:36] *** Quits: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:32:07] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 252 seconds)
[02:34:41] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[02:34:41] <b0nn> 1.17.2 and 1.16.9 released https://groups.google.com/g/golang-announce/c/AEBu9j7yj5A
[02:35:49] *** Joins: Memory (sid459764@user/memory)
[02:36:11] <b0nn> It's security fixes for WASM and some bug fixes for the runtime/compiler/go command/time and text/template packages
[02:37:07] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[02:39:52] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:45:17] *** Joins: Torr (~Torr@user/torr)
[02:45:40] *** Quits: Torr (~Torr@user/torr) (Client Quit)
[02:45:52] *** Joins: Torr (~Torr@user/torr)
[02:48:25] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[02:52:55] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:513a:7acd:bdae:c233)
[02:54:11] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1004)
[02:54:12] *** Joins: chasmo77 (~chas77@71.63.241.168)
[02:54:31] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[02:55:02] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[02:55:29] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:513a:7acd:bdae:c233) (Ping timeout: 246 seconds)
[02:57:51] *** Joins: iateadonut (~dan@121.177.17.154)
[02:57:56] *** Parts: iateadonut (~dan@121.177.17.154) ()
[02:57:57] *** Joins: iateadonut (~dan@121.177.17.154)
[02:58:23] <iateadonut> if i run time.Timer, a timer starts running in the background.  is there a way to query how many timers are running?
[03:16:59] *** Quits: ahappydeath (~silbermm@dsl-74-83-53-157.fuse.net) (Ping timeout: 245 seconds)
[03:18:06] <bpalmer> Not that I know of.
[03:23:01] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[03:23:47] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[03:27:42] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[03:34:29] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 245 seconds)
[03:34:30] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[03:34:46] *** Joins: novns (~novns@user/novns)
[03:34:55] *** Joins: Torr (~Torr@user/torr)
[03:36:12] *** Quits: novns (~novns@user/novns) (Client Quit)
[03:36:40] *** Joins: novns (~novns@user/novns)
[03:40:57] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:43:38] *** Joins: Torr_ (~Torr@user/torr)
[03:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[03:46:18] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[03:47:40] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[03:49:21] *** Quits: attila_lendvai (~alendvai@catv-213-222-131-28.catv.broadband.hu) (Ping timeout: 265 seconds)
[03:50:04] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[03:54:41] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 245 seconds)
[03:59:40] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:59:43] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[04:00:27] *** Quits: NeoCron (~NeoCron@p200300c4cf18cd00433f901d5cf4f3d0.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:01:45] *** Joins: rockyh (~rockyh@user/rockyh)
[04:04:31] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[04:11:28] *** Quits: Kyros (~kyros@user/kyros) (Quit: WeeChat 3.2.1)
[04:11:52] *** Joins: Kyros (~kyros@user/kyros)
[04:12:59] *** Quits: Kyros (~kyros@user/kyros) (Client Quit)
[04:13:59] *** Joins: Kyros (~kyros@user/kyros)
[04:14:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[04:16:08] *** Joins: fikran (~fikran@user/fikran)
[04:27:58] *** Joins: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg)
[04:28:14] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:28:14] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:28:14] *** Joins: wroathe (~wroathe@user/wroathe)
[04:33:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[04:45:23] *** Quits: rockorager (root@2600:3c03::f03c:92ff:feed:820d) (Quit: WeeChat 3.2)
[04:46:59] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[04:48:21] *** Joins: Teckla (~Teckla@user/teckla)
[04:48:34] *** Quits: hentai (~hentai@user/hentai) (Ping timeout: 250 seconds)
[04:54:29] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[04:55:15] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[05:02:06] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[05:02:07] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[05:02:07] *** Joins: wroathe (~wroathe@user/wroathe)
[05:17:52] *** Joins: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net)
[05:29:18] *** Quits: Torr (~Torr@user/torr) ()
[05:30:41] *** Joins: shtirlic_ (~shtirlic@95-55-26-134.dynamic.avangarddsl.ru)
[05:31:28] *** Quits: Torr_ (~Torr@user/torr) (Quit: leaving)
[05:31:42] *** Joins: Torr (~Torr@user/torr)
[05:33:00] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[05:34:22] *** Quits: shtirlic (~shtirlic@pppoe.95-55-136-28.dynamic.avangarddsl.ru) (Ping timeout: 265 seconds)
[05:35:13] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1004) (Quit: ZNC 1.8.2 - https://znc.in)
[05:44:58] *** Joins: hexfive (~eric@50.35.83.177)
[05:45:08] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[05:59:19] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[06:00:19] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[06:05:14] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[06:10:42] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[06:11:02] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Client Quit)
[06:11:17] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[06:23:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[06:25:28] *** Joins: fikran (~fikran@user/fikran)
[06:31:15] *** Quits: k0ta (~k0ta@151.210.175.219) (Ping timeout: 260 seconds)
[06:31:30] *** Joins: k0ta (~k0ta@103.108.94.37)
[06:44:41] *** Parts: A|an (~Alan@173.216.51.200) ()
[06:45:40] *** Joins: silbermm (~silbermm@dsl-74-83-53-157.fuse.net)
[06:49:54] *** Quits: silbermm (~silbermm@dsl-74-83-53-157.fuse.net) (Ping timeout: 245 seconds)
[06:53:39] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[07:01:14] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 265 seconds)
[07:03:18] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 265 seconds)
[07:08:51] *** Joins: rockyh (~rockyh@user/rockyh)
[07:30:29] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[07:30:52] *** Joins: thing (~thing@user/thing)
[07:35:34] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[07:45:49] *** Quits: ItsNotGoodName (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[07:46:40] *** Joins: ItsNotGoodName (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net)
[07:50:09] *** Joins: skeels (~skeels@202.51.76.55)
[07:55:58] <skeels> what is the point of having "Expr" in "Binary" struct? i have similar code and it doesn't matter as long as Binary implements String(). https://play.golang.org/p/8SsVAw5JIAz
[07:56:51] *** Quits: darkapex (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[07:58:06] <seebs> that... seems confused
[07:58:20] *** Joins: darkapex (~darkapex@user/darkapex)
[07:58:38] <KirkMcDonald> It's valid. It means that b.Expr is a field of the struct.
[07:58:56] <skeels> what use is that?
[07:59:02] <KirkMcDonald> This I cannot say.
[07:59:16] <seebs> so the thing is, in that struct, you have effectively declared a member *named* Expr of type Expr, but since it's an interface, it doesn't have any sub-members or anything, and its String() method is overridden (when you use the Binary struct) by the String() method of the containing struct
[07:59:23] <seebs> so, i don't know. what IS the point?
[07:59:34] <seebs> it doesn't seem like it is doing anything useful.
[07:59:51] <KirkMcDonald> I will say that using the term "root class" is at best misleading.
[07:59:56] <seebs> my guess would be that it is a result of someone who wanted to make the Binary struct *implement* Expr, and was confused, so they *embedded* it.
[08:00:00] <seebs> oh yes
[08:00:03] <seebs> i missed that comment
[08:00:17] <seebs> where did you get that source?
[08:00:21] <skeels> KirkMcDonald, i redacted the code and mistakenly left the comments
[08:00:40] <skeels> seebs, https://github.com/jfourkiotis/golox
[08:00:43] <seebs> because my intuition is to think that the original source, if it indeed put an Expr in the Binary struct, is telling us that the originator was very confused about how Go's type system works
[08:00:47] <KirkMcDonald> Well, it's difficult to comment on design decisions like this in isolation.
[08:01:11] <seebs> yeah i...
[08:01:26] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[08:01:43] <seebs> looking at the whole thing, i think they're probably thinking it's like interface-embedding, and not understanding that it's creating a separate member which they never use.
[08:02:03] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[08:02:15] <seebs> Contrast with `type Expr interface { Node }`
[08:02:24] <seebs> that's actually fine! that *does* do what they think it does, approximately.
[08:03:26] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Ping timeout: 245 seconds)
[08:03:50] <KirkMcDonald> It looks like this is a thing for generating S-expressions?
[08:04:27] <KirkMcDonald> Or at least it produces output that's similar.
[08:05:05] <KirkMcDonald> Some sorta prefix notation, anyway.
[08:05:05] <skeels> abstract syntax tree to be passed to the interpreter
[08:06:30] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[08:06:56] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[08:15:26] *** Joins: alzgh (~alzgh@user/alzgh)
[08:20:38] *** Quits: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net) (Ping timeout: 265 seconds)
[08:29:46] *** Quits: tristero (~nobody@user/tristero) (Ping timeout: 260 seconds)
[08:32:36] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[08:34:48] *** Joins: fikran (~fikran@user/fikran)
[08:35:03] *** Joins: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net)
[08:37:49] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[08:45:15] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[08:50:57] *** Quits: LiftLeft (~LiftLeft@102.165.16.193) (Ping timeout: 265 seconds)
[08:51:35] *** Quits: skeels (~skeels@202.51.76.55) (Quit: Leaving)
[08:54:30] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[08:54:48] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[09:01:03] *** Joins: me-sudoer-dentne (~me-sudoer@2405:204:549a:c220:66d4:682d:c966:b6f6)
[09:01:17] *** Joins: gggpkm (~gggpkm@111-251-122-246.dynamic-ip.hinet.net)
[09:08:53] *** Quits: amk (~amk@109.255.169.126) (Ping timeout: 268 seconds)
[09:10:30] *** Joins: amk (~amk@109.255.169.126)
[09:16:33] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:19:33] *** Quits: eNV25 (~quassel@user/env25) (Quit: 😳)
[09:24:51] *** Joins: tristero (~nobody@user/tristero)
[09:30:31] *** Quits: lishanhui (~lishanhui@104-184-3-133.lightspeed.austtx.sbcglobal.net) (Ping timeout: 252 seconds)
[09:31:44] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[09:37:28] *** Joins: eNV25 (~quassel@user/env25)
[09:44:24] *** Joins: mei (~mei@user/mei)
[09:50:03] *** Joins: sizeof_void34 (~Thunderbi@109.252.124.86)
[09:50:15] *** Quits: eNV25 (~quassel@user/env25) (Quit: 😳)
[09:50:47] *** Joins: eNV25 (~quassel@user/env25)
[09:53:59] *** Joins: attila_lendvai (~alendvai@catv-213-222-131-28.catv.broadband.hu)
[09:54:34] *** Joins: mmfood (~mmfood@194.103.157.72)
[09:54:57] *** Quits: eNV25 (~quassel@user/env25) (Client Quit)
[09:57:07] *** Joins: bkircher (~bkircher@2001:a61:252b:1601:507a:3765:2a05:b98f)
[09:59:20] *** Quits: sizeof_void34 (~Thunderbi@109.252.124.86) (Quit: sizeof_void34)
[10:00:39] *** Joins: mrig (~mrig@user/mrig)
[10:01:22] *** Joins: jcajka (~jcajka@ip-86-49-254-207.net.upcbroadband.cz)
[10:02:33] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[10:07:12] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[10:07:17] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[10:08:41] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[10:14:02] *** Joins: kiril (~kiril@85.91.153.163)
[10:21:14] *** Quits: fmac (~fmac@2a01:4f9:c011:29a2::2) (Remote host closed the connection)
[10:21:22] *** Joins: fmac (~fmac@2a01:4f9:c011:29a2::2)
[10:23:53] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[10:24:10] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[10:25:13] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[10:38:36] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[10:42:04] *** Joins: hikhvar796073809 (~thelounge@x4db50013.dyn.telefonica.de)
[10:42:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[10:44:08] *** Joins: fikran (~fikran@user/fikran)
[10:44:49] *** Joins: cation21 (cation@user/cation)
[10:45:42] *** Quits: cation (cation@user/cation) (Ping timeout: 268 seconds)
[10:46:46] *** Quits: me-sudoer-dentne (~me-sudoer@2405:204:549a:c220:66d4:682d:c966:b6f6) (Ping timeout: 245 seconds)
[10:48:12] *** cation21 is now known as cation
[10:54:37] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[10:54:54] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[11:06:49] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[11:19:27] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Read error: Connection reset by peer)
[11:20:54] *** Quits: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg) (Read error: Connection reset by peer)
[11:21:44] *** Joins: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg)
[11:22:56] *** Quits: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[11:23:02] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87)
[11:25:10] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 268 seconds)
[11:26:41] *** Joins: mrig (~mrig@user/mrig)
[11:27:58] *** Quits: gggpkm (~gggpkm@111-251-122-246.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:30:22] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:31:40] *** Joins: gggpkm (~gggpkm@111-251-122-246.dynamic-ip.hinet.net)
[11:44:06] *** Joins: root2 (~root@149.28.48.62)
[11:46:46] *** Quits: mmfood (~mmfood@194.103.157.72) (Ping timeout: 245 seconds)
[11:47:02] *** Joins: mmfood (~mmfood@45.135.187.149)
[11:50:23] *** Quits: root2 (~root@149.28.48.62) (Quit: WeeChat 3.0.1)
[11:52:36] *** Joins: root2 (~root@149.28.48.62)
[11:55:42] *** Quits: root2 (~root@149.28.48.62) (Client Quit)
[11:56:53] *** Joins: root2 (~root@149.28.48.62)
[11:58:26] *** Quits: mmfood (~mmfood@45.135.187.149) (Ping timeout: 245 seconds)
[12:03:01] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[12:07:54] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[12:10:29] *** Parts: spithash (~spithash@user/spithash) ()
[12:10:41] *** Joins: arinov (~arinov@213.194.126.155)
[12:11:08] *** Joins: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg)
[12:16:30] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[12:17:30] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:17:36] *** Quits: root2 (~root@149.28.48.62) (Quit: WeeChat 3.0.1)
[12:18:32] *** Joins: rx0n7 (~root@149.28.48.62)
[12:19:25] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 252 seconds)
[12:23:05] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[12:24:22] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:26:00] *** Joins: rockyh (~rockyh@user/rockyh)
[12:32:26] <fentanyl> Is there a standard library implementation for balanced binary trees? Or does anyone recommend a standard one that most people uses?
[12:37:21] *** Joins: lungaro (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net)
[12:38:40] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 252 seconds)
[12:39:26] *** Quits: lungaro_ (~lungaro@99-117-118-33.lightspeed.sndgca.sbcglobal.net) (Ping timeout: 260 seconds)
[12:39:54] <sztanpet> theres https://github.com/google/btree
[12:40:19] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[12:41:21] <b0nn> fentanyl: when you say "balanced" how do you mean, like, red black, evl, or...
[12:41:32] <b0nn> 2-3-4
[12:41:43] <fentanyl> Yeah
[12:41:53] <sztanpet> :)
[12:42:18] <fentanyl> sztanpet: just came back. thanks for the link.
[12:42:35] <fentanyl> I guess I'd use the Google one.
[12:51:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[12:52:26] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[12:53:28] *** Joins: fikran (~fikran@user/fikran)
[12:54:28] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[12:55:02] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[12:57:25] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[12:57:39] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[13:06:16] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[13:10:42] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[13:14:29] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 245 seconds)
[13:14:33] *** Joins: kiril (~kiril@85.91.153.163)
[13:16:36] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[13:16:45] <krux02> How do I tag in function in go with [[noreturn]]?
[13:17:33] <krux02> I have a function that just calls panic that I use at the end of my function when things go wrong
[13:19:20] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 265 seconds)
[13:20:58] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[13:21:32] *** Joins: Ec11pse (~Ec11pse@user/planet)
[13:21:34] *** Quits: chripell_ (~chripell@109.255.230.3) (Ping timeout: 252 seconds)
[13:22:22] *** Parts: Ec11pse (~Ec11pse@user/planet) ()
[13:23:20] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[13:24:54] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[13:26:18] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[13:26:30] *** Quits: thing (~thing@user/thing) (Ping timeout: 276 seconds)
[13:30:22] *** Joins: kiril (~kiril@85.91.153.163)
[13:36:43] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[13:37:54] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[13:39:45] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[13:42:32] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[13:43:29] *** Joins: chripell (~chripell@109.255.230.3)
[13:45:21] *** Joins: kiril (~kiril@85.91.153.163)
[13:54:14] *** Joins: bpalmer` (~user@user/bpalmer)
[13:56:20] *** Quits: bpalmer (~user@user/bpalmer) (Ping timeout: 252 seconds)
[13:57:24] *** Quits: k0ta (~k0ta@103.108.94.37) (Ping timeout: 245 seconds)
[13:57:44] *** Quits: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg) (Quit: sdfgsdfgDropBear)
[13:59:27] *** Joins: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg)
[14:01:09] *** Quits: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[14:03:14] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[14:03:28] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[14:06:11] *** Joins: mmfood (~mmfood@45.135.187.149)
[14:11:19] *** Joins: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg)
[14:17:04] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 252 seconds)
[14:17:34] *** Joins: thing (~thing@user/thing)
[14:19:16] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[14:21:04] <mikoto-chan> >func handler(w http.ResponseWriter, r *http.Request)
[14:21:25] <mikoto-chan> why is the request of a handler function a pointer?
[14:21:45] <mikoto-chan> I mean, why is the writer passed by value but the request by reference?
[14:21:54] <fizzie> The writer is an interface type.
[14:22:14] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87)
[14:22:21] <fizzie> Most likely the underlying concrete type is a pointer too.
[14:22:52] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[14:23:25] <mikoto-chan> oh, let me check
[14:24:04] <mikoto-chan> there is indeed a difference, w is an interface while r is a struct, interesting
[14:24:15] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[14:27:27] *** Joins: shanoth (~shanoth@197.61.118.152)
[14:27:41] *** Joins: kiril (~kiril@85.91.153.163)
[14:28:02] *** Quits: shanoth (~shanoth@197.61.118.152) (Remote host closed the connection)
[14:29:48] <fizzie> As for why the other one is explicitly a pointer, http.Request is a biggish struct, passing it as a pointer sounds pretty reasonable on those grounds alone. I don't think it's normally mutated by a handler, though, which would be another reason to make it so.
[14:30:12] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[14:30:26] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[14:31:34] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[14:31:43] <sztanpet> krux02 why? are you looking for some optimization that isnt there?
[14:32:32] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[14:34:42] *** Joins: kiril (~kiril@85.91.153.163)
[14:34:56] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[14:36:17] *** Joins: arinov (~arinov@178.240.185.108)
[14:37:26] *** Joins: silbermm (~silbermm@dsl-74-83-53-157.fuse.net)
[14:41:47] *** Quits: zutt (~zutt@user/zutt) (Remote host closed the connection)
[14:41:59] *** Quits: mmfood (~mmfood@45.135.187.149) (Ping timeout: 245 seconds)
[14:42:02] *** Joins: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de)
[14:42:19] *** Joins: zutt (~zutt@user/zutt)
[14:44:01] *** Quits: silbermm (~silbermm@dsl-74-83-53-157.fuse.net) (Ping timeout: 252 seconds)
[14:45:09] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[14:47:51] *** Joins: kiril (~kiril@85.91.153.163)
[14:48:49] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[14:49:02] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[14:49:32] *** Quits: hikhvar796073809 (~thelounge@x4db50013.dyn.telefonica.de) (Quit: The Lounge - https://thelounge.chat)
[14:49:53] *** Joins: clemens3 (~clemens@225.40.150.83.ftth.as8758.net)
[14:50:30] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[14:51:02] *** Quits: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg) (Ping timeout: 265 seconds)
[14:52:19] *** Joins: kiril (~kiril@85.91.153.163)
[14:52:47] *** Joins: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg)
[14:54:28] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[14:55:12] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[14:55:28] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[14:57:54] *** Joins: kiril (~kiril@85.91.153.163)
[15:00:15] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[15:00:44] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[15:01:43] *** Joins: frost (~frost@59.71.244.36)
[15:02:38] *** Joins: kiril (~kiril@85.91.153.163)
[15:02:48] *** Joins: fikran (~fikran@user/fikran)
[15:07:01] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[15:07:14] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[15:09:02] *** Joins: silbermm (~silbermm@dsl-74-83-53-157.fuse.net)
[15:10:56] *** Quits: zutt (~zutt@user/zutt) (Quit: nein)
[15:12:11] *** Joins: zutt (~zutt@user/zutt)
[15:13:46] *** Quits: silbermm (~silbermm@dsl-74-83-53-157.fuse.net) (Ping timeout: 252 seconds)
[15:16:01] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[15:20:26] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[15:20:55] *** Quits: zutt (~zutt@user/zutt) (Quit: nein)
[15:21:11] *** Joins: sizeof_void34 (~Thunderbi@109.252.124.86)
[15:23:11] *** Joins: zutt (~zutt@user/zutt)
[15:23:54] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 265 seconds)
[15:25:12] *** Quits: sdfgsdfgDropBear (~sdfgsdfg@user/sdfgsdfg) (Quit: sdfgsdfgDropBear)
[15:26:42] *** Quits: zutt (~zutt@user/zutt) (Client Quit)
[15:27:52] *** bpalmer` is now known as bpalmer
[15:32:21] <krux02> sztanpet, not really
[15:32:45] <krux02> I am getting an error message that I need to put a return at the end of a function, even though it would be an unreachable return.
[15:33:22] <krux02> And I would like to inform the compiler that this expression is as good as a return or a panic
[15:33:39] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 245 seconds)
[15:34:27] *** Joins: zutt (~zutt@user/zutt)
[15:34:39] <sztanpet> that sounds wrong
[15:34:42] <sztanpet> https://play.golang.org/p/Axbqmts0HWl
[15:34:51] <sztanpet> you obviously are expecting a return value
[15:35:29] <krux02> that is not a noreturn func
[15:35:38] <sztanpet> that is a function without a return statement
[15:35:42] <krux02> a no return func is a function that never returns
[15:35:44] <sztanpet> notice the declaration
[15:35:49] *** Joins: silbermm (~silbermm@dsl-74-83-53-157.fuse.net)
[15:36:08] <krux02> it can be either an infinite loop, or an exit through panic
[15:36:12] <sztanpet> if you declare your function as such, you wont have to use a return statement
[15:36:37] <GinjaNinja32> i think https://play.golang.org/p/Q9BNWiIDHMC is a better representation of what krux02 is trying to do
[15:37:32] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[15:37:40] <krux02> GinjaNinja32, yes
[15:37:45] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[15:38:39] <GinjaNinja32> if the function always calls panic, perhaps something like `panic(someFunc())` instead of doing the panic inside the function?
[15:39:02] <GinjaNinja32> that way the compiler can see the panic in the function and knows it doesn't need a return value
[15:39:36] <GinjaNinja32> i.e. https://play.golang.org/p/eBgoQ2pEZaY
[15:40:28] *** Quits: silbermm (~silbermm@dsl-74-83-53-157.fuse.net) (Ping timeout: 268 seconds)
[15:41:57] <sztanpet> oh, i think there was a bug about this, but cant find it
[15:42:40] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[15:45:43] *** Joins: silbermm (~silbermm@dsl-74-83-53-157.fuse.net)
[15:47:25] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[15:52:22] *** Quits: zutt (~zutt@user/zutt) (Quit: nein)
[15:54:58] *** Quits: iateadonut (~dan@121.177.17.154) (Ping timeout: 252 seconds)
[15:57:01] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[15:57:08] *** Quits: Cork (~Cork@user/cork) (Quit: .)
[15:58:31] *** Joins: Cork (~Cork@user/cork)
[16:01:55] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[16:02:48] *** Joins: omegatron (~some@p5b056a70.dip0.t-ipconnect.de)
[16:03:20] <Cork> anyone can tell me how to get the total size of a map? this play link gives me 8 that i just can't believe... https://play.golang.org/p/cZR55ayYNmE
[16:04:01] *** Quits: kiril (~kiril@85.91.153.163) (Read error: Connection reset by peer)
[16:05:32] <siXy> Cork: The map object itself is just a couple pointers with some bools and uints and so on for metadata
[16:05:54] <Cork> siXy: how do i count for the 1000 entries?
[16:05:56] <siXy> The data contained within the map is not included in that number
[16:06:35] *** Joins: kiril (~kiril@85.91.153.163)
[16:07:04] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[16:08:29] <siXy> I'm not aware of any easy way without iterating through the structure and counting each bucket. Why do you need to know?
[16:08:42] <Cork> i'm trying to compare this against 39 uint16 records in a struct to figure out the storage cost comparison
[16:09:19] <Cork> (the 1000 is from when i always got 8 and went hmmm)
[16:09:40] <siXy> Why are you so worried about marginal overheads on tiny data structures?
[16:10:09] <Cork> siXy: cause i'm going to keep the structure in ram thousends of times
[16:11:03] <Cork> if they are close to similar good, i will take the simplest solution, if one is double or more then i have to go for the other cause of memory
[16:11:07] <siXy> Then I guess you could write a test program that stores the same thing 100k times in ram in a struct, and in a map, and compare RSS of each
[16:11:39] <Cork> true, was hoping to be able to ask directly to not have to relay on system information
[16:12:15] <siXy> this is one of those times when the clunky way is so much easier it's not worth doing properly IMO. You could use pprof if you want a marginally more scientific answer
[16:12:46] <siXy> But I wouldn't expect the map overhead to be significant personally, so I'd lean to just doing the better way
[16:14:13] <Cork> siXy: the uint16 is a bitmap so it is 39 bitmaps (uint16) against 237 entries (at most) in a map[uint16]struct{}
[16:14:34] <Cork> i would be surpriced if that really didn't make a difference
[16:14:56] <GinjaNinja32> Cork: it can't give you the size of an existing map, but you can find how much memory it takes to _construct_ any structure you like via benchmarking: https://play.golang.org/p/IjXvekcXTUJ
[16:15:02] <GinjaNinja32> `go test -bench=. -benchmem`
[16:15:31] <GinjaNinja32> i suspect the struct will be smaller in this case, but the best way to find out is to just test it
[16:15:54] <siXy> well if you have more entries in the map than in the struct, then sure, the struct will be cheaper
[16:16:07] <Cork> GinjaNinja32: that is actually very close to what i'm trying to do. And will work very well thx!
[16:19:56] *** Joins: xiongxin (~quassel@113.116.33.66)
[16:28:43] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[16:28:48] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[16:29:59] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:35:51] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:40:25] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - https://znc.in)
[16:40:35] *** Joins: kiril (~kiril@85.91.153.163)
[16:50:06] *** Quits: securethemews (~securethe@2001:470:69fc:105::9b6d) (Read error: Connection reset by peer)
[16:50:07] *** Quits: bfsuns2k[m] (~bfsuns2km@2001:470:69fc:105::e4ed) (Read error: Connection reset by peer)
[16:50:07] *** Quits: tusf[m] (~tusf@2001:470:69fc:105::eff9) (Read error: Connection reset by peer)
[16:50:07] *** Quits: sordidwhiskey[m] (~sordidwhi@2001:470:69fc:105::c94e) (Read error: Connection reset by peer)
[16:50:07] *** Quits: freswa (~freswa@2001:470:69fc:105::c1ec) (Read error: Connection reset by peer)
[16:50:07] *** Quits: zaibon[m] (~zaibonsyn@2001:470:69fc:105::1019) (Read error: Connection reset by peer)
[16:50:09] *** Quits: psydroid (~psydroid@user/psydroid) (Read error: Connection reset by peer)
[16:50:09] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Write error: Connection reset by peer)
[16:50:09] *** Quits: spudly[m] (~spudly@2001:470:69fc:105::18) (Write error: Connection reset by peer)
[16:50:09] *** Quits: alwaysr[m] (~alwaysrma@2001:470:69fc:105::50a8) (Write error: Connection reset by peer)
[16:50:10] *** Quits: duban (~duban@2001:470:69fc:105::f5fe) (Write error: Connection reset by peer)
[16:50:10] *** Quits: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a) (Write error: Connection reset by peer)
[16:50:10] *** Quits: miquella[m] (~miquellam@2001:470:69fc:105::1:980) (Write error: Connection reset by peer)
[16:50:10] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Read error: Connection reset by peer)
[16:50:10] *** Quits: AshLeece[m] (~ashleecei@2001:470:69fc:105::c987) (Read error: Connection reset by peer)
[16:50:11] *** Quits: dngray[m] (~dngray@user/dngray) (Read error: Connection reset by peer)
[16:50:11] *** Quits: meain1 (~meain@2001:470:69fc:105::2db) (Write error: Connection reset by peer)
[16:50:11] *** Quits: dec (~dec@2001:470:69fc:105::3204) (Write error: Connection reset by peer)
[16:50:11] *** Quits: kadoban (~kadoban@user/kadoban) (Write error: Connection reset by peer)
[16:50:12] *** Quits: TcM1911 (~tcm1911@2001:470:69fc:105::3649) (Remote host closed the connection)
[16:50:12] *** Quits: mambang[m] (~mambang@user/mambang) (Write error: Connection reset by peer)
[16:50:12] *** Quits: bat[m] (~batdice-t@2001:470:69fc:105::19b8) (Write error: Broken pipe)
[16:50:12] *** Quits: bloony (~tjellomat@2001:470:69fc:105::3aac) (Write error: Connection reset by peer)
[16:50:13] *** Quits: fugkco (~fugkcomat@2001:470:69fc:105::c70d) (Write error: Connection reset by peer)
[16:50:13] *** Quits: dung[m] (~dungbrocc@2001:470:69fc:105::d25b) (Read error: Connection reset by peer)
[16:51:33] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[16:54:07] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 240 seconds)
[16:54:30] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[16:54:49] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[16:54:53] *** Joins: kadoban (~kadoban@user/kadoban)
[16:54:53] *** Joins: dec (~dec@2001:470:69fc:105::3204)
[16:54:53] *** Joins: freswa (~freswa@2001:470:69fc:105::c1ec)
[16:54:53] *** Joins: mambang[m] (~mambang@user/mambang)
[16:54:53] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[16:54:53] *** Joins: sordidwhiskey[m] (~sordidwhi@2001:470:69fc:105::c94e)
[16:54:53] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[16:54:53] *** Joins: bloony (~tjellomat@2001:470:69fc:105::3aac)
[16:54:53] *** Joins: securethemews (~securethe@2001:470:69fc:105::9b6d)
[16:54:53] *** Joins: AshLeece[m] (~ashleecei@2001:470:69fc:105::c987)
[16:54:53] *** Joins: duban (~duban@2001:470:69fc:105::f5fe)
[16:54:53] *** Joins: psydroid (~psydroid@user/psydroid)
[16:54:53] *** Joins: bfsuns2k[m] (~bfsuns2km@2001:470:69fc:105::e4ed)
[16:54:53] *** Joins: alwaysr[m] (~alwaysrma@2001:470:69fc:105::50a8)
[16:54:53] *** Joins: miquella[m] (~miquellam@2001:470:69fc:105::1:980)
[16:54:53] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[16:54:56] *** Joins: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a)
[16:55:05] *** Joins: dung[m] (~dungbrocc@2001:470:69fc:105::d25b)
[16:55:05] *** Joins: zaibon[m] (~zaibonsyn@2001:470:69fc:105::1019)
[16:55:05] *** Joins: fugkco (~fugkcomat@2001:470:69fc:105::c70d)
[16:55:07] *** Joins: TcM1911 (~tcm1911@2001:470:69fc:105::3649)
[16:55:07] *** Joins: bat[m] (~batdice-t@2001:470:69fc:105::19b8)
[16:55:07] *** Joins: dngray[m] (~dngray@user/dngray)
[16:55:07] *** Joins: tusf[m] (~tusf@2001:470:69fc:105::eff9)
[16:56:21] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (Ping timeout: 245 seconds)
[16:57:11] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 245 seconds)
[16:59:48] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[17:04:47] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[17:07:05] *** Quits: arinov (~arinov@178.240.185.108) (Ping timeout: 260 seconds)
[17:07:44] <krux02> GinjaNinja32, that actually works, thank you
[17:08:01] *** Joins: holgersson (~quassel@user/holgersson)
[17:09:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[17:10:54] *** Joins: pombreda (sid227801@id-227801.tinside.irccloud.com)
[17:11:45] *** Quits: normen (~normen@p200300d717246e00e0cd339639435124.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[17:12:02] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[17:12:03] *** Quits: krux02 (~krux02@p200300ca8f0d0300fb0f49e84c91d652.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:12:08] *** Joins: fikran (~fikran@user/fikran)
[17:12:15] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[17:12:23] *** Joins: krux02 (~krux02@p200300ca8f0d0300fb0f49e84c91d652.dip0.t-ipconnect.de)
[17:12:34] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (Ping timeout: 268 seconds)
[17:14:17] *** Joins: cp- (~cp-@b157153.ppp.asahi-net.or.jp)
[17:15:36] *** Quits: jjonah (~jjonah@p200300d5d7058900dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:17:52] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Ping timeout: 256 seconds)
[17:21:56] *** silbermm is now known as ahappydeath
[17:29:17] *** Quits: krux02 (~krux02@p200300ca8f0d0300fb0f49e84c91d652.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:29:53] *** Joins: Diego (~textual@user/diego)
[17:30:15] *** Joins: shanoth (~shanoth@197.61.143.63)
[17:32:01] *** Quits: ahappydeath (~silbermm@dsl-74-83-53-157.fuse.net) (Changing host)
[17:32:01] *** Joins: ahappydeath (~silbermm@user/ahappydeath)
[17:33:20] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[17:33:20] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[17:33:20] *** Joins: wroathe (~wroathe@user/wroathe)
[17:34:50] *** Quits: frost (~frost@59.71.244.36) (Quit: Connection closed)
[17:39:01] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[17:39:06] *** Parts: shanoth (~shanoth@197.61.143.63) ()
[17:40:16] *** Quits: ahappydeath (~silbermm@user/ahappydeath) (Quit: WeeChat 3.3)
[17:43:13] *** Joins: ahappydeath (~silbermm@user/ahappydeath)
[17:49:42] *** Joins: normen (~normen@p200300d717246e00b48bfc3ab121bcb8.dip0.t-ipconnect.de)
[17:58:46] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[18:00:06] *** Quits: normen (~normen@p200300d717246e00b48bfc3ab121bcb8.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[18:00:26] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:513a:7acd:bdae:c233)
[18:00:47] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[18:00:56] *** Joins: rek2 (~ReK2@47.62.9.10)
[18:01:04] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 268 seconds)
[18:01:11] *** Joins: thing (~thing@user/thing)
[18:01:17] *** Joins: khrbt (~znc@user/khrbt)
[18:01:48] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[18:02:39] *** Joins: thing (~thing@user/thing)
[18:03:02] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:513a:7acd:bdae:c233) (Ping timeout: 246 seconds)
[18:04:04] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[18:04:22] *** Joins: thing (~thing@user/thing)
[18:05:09] *** Joins: Torr (~Torr@user/torr)
[18:13:00] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 260 seconds)
[18:13:11] *** Joins: Torr_ (~Torr@user/torr)
[18:14:25] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:513a:7acd:bdae:c233)
[18:15:16] <HisShadow> could a conn1.ReadFrom(conn2) return os.ErrDeadlineExceeded instead of nil if SetReadDeadline is set on conn2 and EOF is reached on conn2?
[18:17:02] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:513a:7acd:bdae:c233) (Ping timeout: 246 seconds)
[18:19:13] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[18:19:40] *** Joins: LiftLeft (~LiftLeft@191.96.185.14)
[18:22:05] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:23:05] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[18:23:05] *** Joins: jpw (~jpw@user/jpw)
[18:28:34] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Quit: Leaving)
[18:29:25] *** Joins: me-sudoer-dentne (~me-sudoer@2405:204:549a:c220:f39a:1821:97d2:98a7)
[18:32:00] *** Quits: thing (~thing@user/thing) (Ping timeout: 276 seconds)
[18:34:09] *** Joins: normen (~normen@p200300d717246e00b48bfc3ab121bcb8.dip0.t-ipconnect.de)
[18:35:04] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1004)
[18:35:44] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1004) (Client Quit)
[18:41:40] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[18:44:39] *** Joins: norbinaa (~be3uykpy@2a00:a040:19a:b060:51b1:8a0f:be39:daa0)
[18:48:29] *** Quits: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:5d8f:13c8:6f5e:de35) (Ping timeout: 265 seconds)
[18:50:11] *** Joins: alzgh (~alzgh@user/alzgh)
[18:52:40] *** Quits: normen (~normen@p200300d717246e00b48bfc3ab121bcb8.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[18:53:50] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 260 seconds)
[18:54:41] *** Joins: mrig (~mrig@user/mrig)
[18:54:41] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[18:54:54] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[18:55:36] *** Joins: neurocyte0132889 (~neurocyte@185.238.253.15)
[18:55:36] *** Quits: neurocyte0132889 (~neurocyte@185.238.253.15) (Changing host)
[18:55:37] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:57:40] *** Quits: gggpkm (~gggpkm@111-251-122-246.dynamic-ip.hinet.net) (Ping timeout: 265 seconds)
[18:58:43] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:58:43] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:58:43] *** Joins: wroathe (~wroathe@user/wroathe)
[18:59:45] *** Quits: kulak (~kulak@user/kulak) (Quit: kulak)
[19:01:59] *** Quits: jcajka (~jcajka@ip-86-49-254-207.net.upcbroadband.cz) (Quit: Leaving)
[19:02:49] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[19:15:42] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[19:17:19] *** Joins: darkapex (~darkapex@user/darkapex)
[19:19:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[19:21:28] *** Joins: fikran (~fikran@user/fikran)
[19:22:44] *** Quits: dansan (~daniel@75.81.148.51) (Quit: The C preprocessor is a pathway to many abilities some consider to be unnatural.)
[19:23:10] *** Joins: normen (~normen@p200300d717246e00b48bfc3ab121bcb8.dip0.t-ipconnect.de)
[19:23:16] *** Joins: dansan (~daniel@75.81.148.51)
[19:23:40] *** Joins: mouseghost (~draco@user/mouseghost)
[19:23:42] <mouseghost> hewo
[19:24:32] <mouseghost> can i make a const that doesnt have a set value, but one that is instead chosen by the compiler? so that if i say i have const i and const j in two places, they will end up i!=j and i==i ?
[19:24:42] *** Quits: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl) (Remote host closed the connection)
[19:24:54] *** Quits: Diego (~textual@user/diego) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:26:06] *** Joins: tebruno995 (~tebruno99@user/tebruno99)
[19:26:15] <KirkMcDonald> mouseghost: No, but perhaps you are looking for iota?
[19:26:29] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Ping timeout: 264 seconds)
[19:26:29] *** tebruno995 is now known as tebruno99
[19:27:12] <KirkMcDonald> A const has to have a value. That's the whole point.
[19:28:41] <mouseghost> iota does that to a certain extent, yeah... but if i wanted to make const (i, j = iota), const (k, m = iota), it will be i == k :(
[19:31:48] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[19:33:01] *** Joins: neurocyte0132889 (~neurocyte@185.238.253.15)
[19:33:01] *** Quits: neurocyte0132889 (~neurocyte@185.238.253.15) (Changing host)
[19:33:01] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[19:33:22] *** Quits: normen (~normen@p200300d717246e00b48bfc3ab121bcb8.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[19:35:35] <KirkMcDonald> mouseghost: Can always do: https://play.golang.org/p/YQUppAoVzX1
[19:35:41] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[19:36:21] *** Quits: ahappydeath (~silbermm@user/ahappydeath) (Ping timeout: 245 seconds)
[19:36:58] *** Quits: xiongxin (~quassel@113.116.33.66) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:39:45] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[19:41:46] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 245 seconds)
[19:45:36] *** Joins: ahappydeath (~silbermm@user/ahappydeath)
[19:47:51] *** Joins: mmfood (~mmfood@45.135.187.149)
[19:47:54] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:47:54] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:47:54] *** Joins: wroathe (~wroathe@user/wroathe)
[19:48:04] <mouseghost> KirkMcDonald, i knooow, but that requires mooore woooork
[19:51:29] *** Joins: mrig (~mrig@user/mrig)
[19:52:27] *** Joins: independent56 (~independe@51.15.0.88)
[19:53:22] *** Quits: independent56 (~independe@51.15.0.88) (Read error: Connection reset by peer)
[19:54:45] *** Joins: independent56 (~independe@2.31.88.37)
[19:55:18] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[19:56:43] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[19:58:23] *** Quits: rbn (~rbn@user/rbn) (Read error: Connection reset by peer)
[19:58:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[19:59:33] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[20:00:49] *** Joins: zutt (~zutt@user/zutt)
[20:01:11] *** Quits: Torr (~Torr@user/torr) ()
[20:02:45] <nikki93> mouseghost: does it /have/ to be a const? if not can just use vars that increment a global counter
[20:02:57] <mouseghost> huh
[20:04:15] <nikki93> like --- `var counter = 0; func next() { counter++; return counter }` somewhere, then `var a = next()` and then `var b = next()` etc.
[20:04:32] *** Joins: seabass (~seabass@user/seabass)
[20:04:32] *** Quits: seabass (~seabass@user/seabass) (Quit: Reconnecting)
[20:04:38] <nikki93> a and b won't be consts though
[20:04:52] *** Joins: seabass (~seabass@user/seabass)
[20:05:49] *** Joins: mouseghost_ (~draco@user/mouseghost)
[20:06:39] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:06:39] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:06:39] *** Joins: wroathe (~wroathe@user/wroathe)
[20:06:51] *** Joins: mouseghost__ (~draco@user/mouseghost)
[20:08:07] <ikke> mouseghost: how is that 'work'?
[20:08:14] <ikke> or 'more work'
[20:08:39] *** Quits: mouseghost (~draco@user/mouseghost) (Ping timeout: 245 seconds)
[20:08:47] *** mouseghost__ is now known as mouseghost
[20:10:13] *** Quits: mouseghost_ (~draco@user/mouseghost) (Ping timeout: 252 seconds)
[20:10:43] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 252 seconds)
[20:10:50] *** Joins: rbn (~rbn@user/rbn)
[20:11:16] *** Quits: rbn (~rbn@user/rbn) (Client Quit)
[20:11:34] *** Joins: rbn (~rbn@user/rbn)
[20:11:52] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[20:12:33] *** Joins: mrig (~mrig@user/mrig)
[20:17:30] *** Joins: hexley (examknow@bitbot/launchd)
[20:18:03] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87)
[20:20:21] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[20:21:10] *** Joins: normen (~normen@p200300d717246e00b48bfc3ab121bcb8.dip0.t-ipconnect.de)
[20:22:52] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[20:24:40] *** Joins: thing (~thing@user/thing)
[20:24:55] *** Joins: kulak (~kulak@user/kulak)
[20:32:36] *** Quits: normen (~normen@p200300d717246e00b48bfc3ab121bcb8.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[20:33:06] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:33:06] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:33:06] *** Joins: wroathe (~wroathe@user/wroathe)
[20:34:22] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:36:07] *** Quits: mooff (~mooff@awful.cooking) (Quit: Quit)
[20:36:36] *** Joins: mooff (~mooff@awful.cooking)
[20:39:10] *** Quits: me-sudoer-dentne (~me-sudoer@2405:204:549a:c220:f39a:1821:97d2:98a7) (Ping timeout: 260 seconds)
[20:42:24] *** Quits: mouseghost (~draco@user/mouseghost) (Ping timeout: 245 seconds)
[20:49:30] *** Joins: me-sudoer-dentne (~me-sudoer@2405:204:51a4:9465:51f0:3c68:b150:1ace)
[20:53:07] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 252 seconds)
[20:53:14] *** Quits: lux0r- (~lux0r@65.56.68.34.bc.googleusercontent.com) (Ping timeout: 245 seconds)
[20:54:27] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[20:54:54] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 245 seconds)
[20:55:07] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[20:56:09] *** Joins: lux0r (~lux0r@65.56.68.34.bc.googleusercontent.com)
[20:57:23] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[20:58:00] *** Joins: jpw_ (~jpw@user/jpw)
[21:01:34] *** Quits: jpw (~jpw@user/jpw) (Ping timeout: 260 seconds)
[21:02:44] *** Joins: khrbt (~znc@user/khrbt)
[21:03:36] *** jpw_ is now known as jpw
[21:05:42] *** Joins: Hanicef (~gustaf@81-229-9-108-no92.tbcn.telia.com)
[21:06:56] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:513a:7acd:bdae:c233)
[21:09:35] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:513a:7acd:bdae:c233) (Ping timeout: 246 seconds)
[21:10:54] *** Joins: src (~src@user/src)
[21:13:54] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:14:48] *** Quits: me-sudoer-dentne (~me-sudoer@2405:204:51a4:9465:51f0:3c68:b150:1ace) (Quit: Leaving)
[21:16:09] *** Quits: jpw (~jpw@user/jpw) (Ping timeout: 245 seconds)
[21:17:53] *** Joins: jpw (~jpw@user/jpw)
[21:18:29] <novns> bytes.ReplaceAll acts weirdly if the first parameter is []byte{}, it returns []byte(nil)
[21:18:35] <novns> why?
[21:19:06] <novns> just replace things, and don't change anything if the slice is empty
[21:19:54] <novns> so empty slice is a special case, and hours of debugging
[21:20:01] <novns> *an empty
[21:24:50] *** Joins: neurocyte0132889 (~neurocyte@185.238.253.15)
[21:24:50] *** Quits: neurocyte0132889 (~neurocyte@185.238.253.15) (Changing host)
[21:24:50] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[21:26:31] <bpalmer> novns: sounds like a good bug report.
[21:26:44] <bpalmer> or,rather, bug to be reported
[21:27:35] <novns> yes
[21:27:57] <novns> I will report it soon
[21:28:39] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[21:29:56] <siXy> I'm struggling to reproduce that.
[21:30:48] *** Joins: fikran (~fikran@user/fikran)
[21:30:50] <siXy> https://play.golang.org/p/igZ26QO_Fau isn't the same as what you reported, but _is_ rather wierd.
[21:31:04] *** Joins: gerep (~gerep@187.0.54.17)
[21:31:52] <siXy> ah no that's documented behaviour
[21:32:10] <siXy> fair enough. in which case I can't reproduce the behaviour you describe.
[21:33:57] <novns> siXy, https://play.golang.org/p/zp168o-BoDt
[21:34:11] <novns> here it's reproduced
[21:34:16] *** Joins: normen (~normen@p200300d717246e00b48bfc3ab121bcb8.dip0.t-ipconnect.de)
[21:36:05] *** Quits: mischief2 (~mischief@wopr.sciops.net) (Ping timeout: 264 seconds)
[21:36:45] <siXy> Yeah. I see - this is why: https://cs.opensource.google/go/go/+/refs/tags/go1.17.2:src/bytes/bytes.go;drc=11cdbab9d4f3e4f0ce690d595933c72df54fad33;l=997
[21:37:02] *** Quits: tebruno99 (~tebruno99@user/tebruno99) (Ping timeout: 260 seconds)
[21:37:28] <siXy> eww that's a horrid url. It's trying to give you a copy back, but of course append([]byte(nil), []byte{}...) doesn't give you a copy.
[21:37:35] <j416> novns: I think those are the same thing. https://play.golang.org/p/Mn99nbOk9IF
[21:38:13] <j416> siXy: it isn't?
[21:38:15] <siXy> um, actually, yes. j416 is completely right.
[21:38:19] <novns> j416, not in the case of databases, it turns an empty string '' to NULL value
[21:38:23] <siXy> It's been a long week :/
[21:38:56] <bpalmer> j416: they have similar properties, but []byte(nil) == nil  and []byte{} != nil
[21:39:08] <j416> novns: right, a is not nil, that's true.
[21:39:17] <j416> bpalmer: nod
[21:39:22] *** Joins: tebruno99 (~tebruno99@user/tebruno99)
[21:39:49] <novns> so I first blamed pgx for badly treating empty strings, and tried to debug those SQL queries
[21:39:52] *** Quits: normen (~normen@p200300d717246e00b48bfc3ab121bcb8.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[21:39:59] <j416> bit odd for it to return nil perhaps, but it's nice that it doesn't allocate
[21:40:06] <j416> novns: :/
[21:40:38] <bpalmer> if it did 'if len(s) == 0 { return s } else { return append([]byte(nil), s...) }' it'd also avoid allocating
[21:40:57] <novns> I'll report this
[21:41:23] *** Quits: ahappydeath (~silbermm@user/ahappydeath) (Ping timeout: 265 seconds)
[21:41:24] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-513a-7acd-bdae-c233.inf6.spectrum.com)
[21:42:29] <j416> I don't rememember where I read it, but I remember reading somehwere in the docs a recommendation to not care about nil vs. empty slice
[21:43:33] <novns> databases do care, '' is not NULL
[21:43:48] *** Quits: independent56 (~independe@2.31.88.37) (Ping timeout: 265 seconds)
[21:44:17] *** Quits: mmfood (~mmfood@45.135.187.149) (Ping timeout: 265 seconds)
[21:44:25] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:513a:7acd:bdae:c233) (Ping timeout: 250 seconds)
[21:44:26] <j416> yes, but this was in relation to Go
[21:44:35] <j416> if I can find it, I'll link it.
[21:44:41] <j416> later.
[21:45:05] <bpalmer> that has to be taken with salt, or else go would make sure that both values compare (or don't compare) equal to nil, equivalently
[21:46:06] <j416> that was its point, don't compare to nil, just do len
[21:46:14] <j416> or something along those lines
[21:46:53] <j416> but I may misremember so I'll stop extrapolating it :)
[21:47:26] *** Joins: lofiguy (~lofiguy@87-207-104-205.dynamic.chello.pl)
[21:51:36] *** Joins: independent56 (~independe@2.31.88.37)
[21:54:40] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 260 seconds)
[21:55:02] *** Joins: ahappydeath (~silbermm@user/ahappydeath)
[21:56:56] *** Joins: tane (~tane@dslb-002-201-234-068.002.201.pools.vodafone-ip.de)
[21:57:04] *** Quits: gerep (~gerep@187.0.54.17) (Quit: Connection closed)
[21:57:58] *** Quits: Hanicef (~gustaf@81-229-9-108-no92.tbcn.telia.com) (Quit: leaving)
[22:04:48] *** Joins: devalexandre (~alexandre@2804:14d:e643:87fc:9416:c856:ec74:9113)
[22:04:54] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[22:05:09] *** Quits: devalexandre (~alexandre@2804:14d:e643:87fc:9416:c856:ec74:9113) (Quit: devalexandre)
[22:07:55] *** Quits: eti (~eti@2a07:abc4::1:26e) (Quit: byeeeee)
[22:08:22] *** Quits: lew (~lew@2a07:abc4::1:26e) (Quit: ZNC - https://znc.in)
[22:08:42] *** Joins: a (~lew@2a07:abc4::1:26e)
[22:10:16] <novns> https://github.com/golang/go/issues/48872
[22:10:20] <novns> here it is
[22:11:15] *** Quits: csmarchbanks (~csmarchba@prometheus/team/csmarchbanks) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[22:11:40] *** Joins: eti (~eti@89.234.183.156)
[22:12:51] *** Joins: csmarchbanks (~csmarchba@prometheus/team/csmarchbanks)
[22:19:58] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[22:21:47] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:21:47] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:21:47] *** Joins: wroathe (~wroathe@user/wroathe)
[22:22:19] *** Quits: gregf (~gregf@user/gregf) (Quit: ZNC - https://znc.in)
[22:22:23] *** Quits: a (~lew@2a07:abc4::1:26e) (Quit: ZNC - https://znc.in)
[22:23:15] *** Joins: a (~lew@2a07:abc4::1:26e)
[22:26:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 245 seconds)
[22:27:19] *** Quits: a (~lew@2a07:abc4::1:26e) (Client Quit)
[22:27:57] *** Quits: Torr_ (~Torr@user/torr) (Quit: leaving)
[22:28:10] *** Joins: Torr (~Torr@user/torr)
[22:29:54] *** Joins: a (~lew@89.234.183.156)
[22:33:53] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[22:34:57] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[22:34:58] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[22:39:03] *** Joins: _xor (~xor@72.49.199.147)
[22:46:01] <j416> novns: this'll be interesting to follow. thanks.
[22:50:01] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:29b0:b95c:b328:5aa5)
[22:53:26] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Quit: Leaving)
[22:53:32] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-513a-7acd-bdae-c233.inf6.spectrum.com) (Ping timeout: 265 seconds)
[22:54:29] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[22:55:07] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[22:56:10] *** Joins: normen (~normen@p200300d717246e00b48bfc3ab121bcb8.dip0.t-ipconnect.de)
[22:59:07] *** Joins: greatgatsby_ (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[22:59:37] *** Joins: crm (~crm@70.120.0.94)
[23:00:07] *** Quits: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com) (Ping timeout: 252 seconds)
[23:00:30] *** Joins: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[23:00:31] *** Quits: normen (~normen@p200300d717246e00b48bfc3ab121bcb8.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[23:00:40] *** Quits: cnf (~cnf@d5152daf0.static.telenet.be) (Ping timeout: 252 seconds)
[23:01:02] <j416> novns: fwiw, as far as I can tell, this looks like a regression introduced by https://github.com/golang/go/issues/3844
[23:01:10] *** Joins: cnf (~cnf@d5152daf0.static.telenet.be)
[23:01:10] *** Joins: clarjon_1 (~clarjon1@user/clarjon1)
[23:01:22] *** Quits: sizeof_void34 (~Thunderbi@109.252.124.86) (Quit: sizeof_void34)
[23:01:46] *** Quits: greatgatsby__ (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (Ping timeout: 252 seconds)
[23:02:11] *** Quits: hgl (hgl@67.230.181.248.16clouds.com) (Quit: Bye)
[23:02:19] *** Quits: orthoplex64 (~crm@70.120.0.94) (Ping timeout: 252 seconds)
[23:02:19] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Ping timeout: 252 seconds)
[23:03:35] *** Quits: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net) (Quit: Client closed)
[23:03:49] *** Joins: foobaz212 (~foobaz212@cpc147290-walt27-2-0-cust197.13-2.cable.virginm.net)
[23:04:40] <j416> novns: https://play.golang.org/p/NZD2VU_CgKN
[23:07:46] <novns> j416, thanks
[23:08:13] <j416> novns: seemingly made like that because of a review comment from Rob, saying "b := make([]byte, len(a[0])); copy(b, a[0]); return b" is fine, but you could also do "return append([]byte(nil), a...)". Source https://codereview.appspot.com/6432054
[23:08:53] <novns> it breaks things anyway
[23:09:29] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 245 seconds)
[23:09:42] <j416> what do you mean?
[23:10:09] <j416> ah, sorry, I misread
[23:10:20] <j416> this was from a different function, where it _was_ ok to do this
[23:10:23] <j416> from Join
[23:10:53] <novns> and they have redirected my bug report to a duplicate, not fixed and closed
[23:10:56] <j416> the same commit (c0efcac6a975) also does a similar rewrite of bytes.Replace, where it doesn't work because there's no if len(s) == 1 condition
[23:11:53] <j416> nice; thanks
[23:12:16] <j416> the comments seem to agree with what I read, just still can't remember where I read about nil vs empty to be treated equal
[23:13:33] <j416> that was a quick response from them. hadn't expected it to be this quick. cool.
[23:13:46] <bpalmer> For what it's worth, I think ianlancetaylor's response misses the point; the documentation doesn't say "returns a slice such that every element ...", it says "returns a copy of  the slice"
[23:14:17] <bpalmer> that's a stronger claim, and it's made throughout the bytes package
[23:15:26] <j416> valid.
[23:22:25] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:29b0:b95c:b328:5aa5)
[23:24:46] *** Joins: hgl (hgl@67.230.181.248.16clouds.com)
[23:25:08] <novns> https://github.com/golang/go/issues/46415#issuecomment-939079982
[23:25:19] <novns> I've commented there too
[23:25:23] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:29b0:b95c:b328:5aa5) (Ping timeout: 250 seconds)
[23:26:14] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:a8c8:e13c:8d77:7d71)
[23:27:37] *** Joins: wolfdale8 (~wolfdale@ec2-3-0-147-70.ap-southeast-1.compute.amazonaws.com)
[23:28:06] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[23:29:13] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[23:29:33] *** Joins: alzgh (~alzgh@user/alzgh)
[23:29:58] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:29b0:b95c:b328:5aa5) (Ping timeout: 268 seconds)
[23:37:07] *** Joins: normen (~normen@p200300d717246e00b48bfc3ab121bcb8.dip0.t-ipconnect.de)
[23:38:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[23:39:59] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[23:40:08] *** Joins: fikran (~fikran@user/fikran)
[23:41:04] <novns> it will be a heavy disappointment if this bug will not get fixed
[23:44:50] *** Quits: wolfdale8 (~wolfdale@ec2-3-0-147-70.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[23:46:24] *** Joins: wolfdale8 (~wolfdale@ec2-3-0-147-70.ap-southeast-1.compute.amazonaws.com)
[23:47:28] *** clarjon_1 is now known as clarjon1
[23:49:18] *** Quits: independent56 (~independe@2.31.88.37) (Remote host closed the connection)
[23:49:42] *** Joins: independent56 (~independe@2.31.88.37)
[23:51:23] <j416> might want to mention that docs say that it returns a copy?
[23:52:27] <novns> j416, I can do it, but this issue is closed and will be ignored
[23:52:38] <j416> then why'd you comment? o_O
[23:54:09] <bpalmer> you'll have to special case it in your code either way
[23:55:38] <novns> no, if the exact copy is returned
[23:56:06] <novns> then '' stays '' and not some weird NULL
[23:59:43] <bpalmer> even if they fix it, it won't bereleased for a long while
