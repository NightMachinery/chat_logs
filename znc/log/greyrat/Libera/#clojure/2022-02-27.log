[00:13:12] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[00:15:22] *** Joins: struchu (~struchu@staticline-31-183-165-230.toya.net.pl)
[00:24:56] *** Quits: schmudde (~schmudde@2001:b07:ae6:7d19:1e30:7f9d:67e9:b1e4) (Ping timeout: 250 seconds)
[00:34:16] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:35:27] *** Joins: paul_j` (~user@67.26.169.217.in-addr.arpa)
[00:35:53] *** Quits: paul_j` (~user@67.26.169.217.in-addr.arpa) (Remote host closed the connection)
[00:36:40] *** Joins: v88m (~Xiro@109-252-170-8.dynamic.spd-mgts.ru)
[00:51:34] *** Joins: z3t0_alt (~z3t0_alt@146.71.14.98)
[00:51:55] <z3t0_alt> hi all, I hope you are doing well. Recently I have started using clojure and clojurescript for a new project, and so far its great - just a big learning curve
[00:52:50] <ridcully_> if you are coming from non-fp/non-immutable languages, this is to be expected
[00:52:57] <z3t0_alt> One thing I am trying to figure out is how to decode HTTP requests on the backend. I am using ring, reitit and muuntaja. I know that muuntaja and retit can be setup to decode incoming requests. And I have read the documentation and tried searching for examples. But I can't figure out how to get the parameters
[00:53:02] <ridcully_> yet it will make you better programmer ;)
[00:53:03] <z3t0_alt> If someone knows any examples then that would be greate
[00:53:35] <z3t0_alt> ridcully_ yeah for sure! Its not the fp side thats concerning me so much, i love fp, its just some of the plumbing and learning the different libraries. The docs are great but examples are lacking so for a beginner its a little confusing haha
[00:54:41] <dharrigan> z3t0_alt: you may be interested in a little demo API I put together, that uses reitit. You can find it here: https://github.com/dharrigan/startrek
[00:54:52] <z3t0_alt> thanks!
[00:54:58] <dharrigan> In particular, it uses malli to coerce the data into the appropriate values.
[00:55:01] <z3t0_alt> love the repo name:D
[00:55:11] <ridcully_> what parameters?  i use "ring as a client" and there you put those basically at 3 places (query-params, form-params, body)
[00:55:20] <dharrigan> You can see the glory here (at the bottom): https://github.com/dharrigan/startrek/blob/master/src/startrek/api/starship/routes.clj.
[00:55:47] <dharrigan> The mapper ns, demostrates how to get values out of the parameters etc.
[00:55:51] <dharrigan> Hope it helps.
[00:56:31] <z3t0_alt> thanks!
[00:56:54] <z3t0_alt> dharrigan quick question, I see you are using m/create instead of the default m/instance. Is this because you are doing something specific with your instance?
[00:57:38] <dharrigan> Yes, I'm reconfiguring the json mapper to automatically strip away empty values on the response.
[00:57:45] <dharrigan> You don't have to do that natch.
[00:57:55] <z3t0_alt> Also the :parameters field in the route, is this required or just needed for validation? (https://github.com/dharrigan/startrek/blob/master/src/startrek/api/starship/routes.clj#L69)
[00:58:03] <z3t0_alt> I think this is the part I am misunderstanding in my own implementaiton
[00:58:08] <z3t0_alt> dharrigan understood!
[00:58:50] <dharrigan> Yes, you can think of `parameters` as the key that is put into the request map after malli has done it's work. That work includes converting the data into the "shape" you want based upon the spec you define.
[00:59:24] <dharrigan> (you can see the spec's I define in the spec.clj ns)
[01:00:22] <z3t0_alt> Ah I see, do you know where I can find more documentation about that :parameters option? I am checking the reitit source code but maybe thats not where it is hmm
[01:00:50] <dharrigan> I would encourage you to look at their examples in their github repo. I learnt lots there! :-)
[01:00:54] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:a81a:aef8:4653:fe6c) (Ping timeout: 250 seconds)
[01:02:04] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:e14b:875c:3570:34de)
[01:02:21] <z3t0_alt> oh wow, big miss on my end hah. All this time I was looking for examples in the doc pages, and there was a folder of them in the repo:D  thanks!
[01:02:35] <dharrigan> A good way to view what is happening is just to print out at the repl (or your logger) the request map that is handed to your handler function
[01:02:46] <dharrigan> you can see a lot of juicy data in there that you can play with :-)
[01:03:43] <dharrigan> (and here is the doc page on malli, notice the :parameters key on the route) https://cljdoc.org/d/metosin/reitit/0.5.16/doc/coercion/malli.
[01:04:10] *** Quits: struchu (~struchu@staticline-31-183-165-230.toya.net.pl) (Quit: WeeChat 3.3)
[01:04:19] <z3t0_alt> Thank you!
[01:04:37] <dharrigan> If you look at that page, it's basically saying that there is a "path" parameter that contains a "company" (string) and a user-id (int).
[01:05:18] <dharrigan> So, if someone was to pass in /123/users/abc, then that would fail the malli coercion and return an error (as it's an int then string), but natch, /abc/users/123, is valid.
[01:06:30] <dharrigan> then notice, a little underneath in the "Sucessful coercion" block, what would be printed out if you dumped out the request. There is a parameters key, that is a path, containing two keys, namely company and user-id. All nicely coerced for you.
[01:06:34] *** Joins: struchu (~struchu@staticline-31-183-165-230.toya.net.pl)
[01:06:34] <dharrigan> .
[01:07:01] <z3t0_alt> I see, that's super neat
[01:07:07] <dharrigan> np. have fun!
[01:07:10] <dharrigan> ttfn.
[01:14:31] *** Quits: struchu (~struchu@staticline-31-183-165-230.toya.net.pl) (Quit: WeeChat 3.3)
[01:17:47] *** Quits: lightshadow (~burak@192.222.226.180) (Quit: Konversation terminated!)
[01:24:57] *** Joins: struchu (~struchu@staticline-31-183-165-230.toya.net.pl)
[01:25:24] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[01:28:13] *** Quits: struchu (~struchu@staticline-31-183-165-230.toya.net.pl) (Client Quit)
[01:30:20] <z3t0_alt> So I have a really "dumb" question, I am defining some specs using clojure.spec but this is making me reach the limits of my knowledge of keywords and namespaces
[01:30:30] <z3t0_alt> If I have this in a namespace, (s/def ::user-id string?)
[01:30:52] <z3t0_alt> How do I access that from outside? eg assume the ns is called a and from the repl I want to do    a/::user-id
[01:31:07] <z3t0_alt> Is this something that makes sense to do... or maybe I'm approaching this incorrectly?
[01:32:37] <ridcully_> ::x is a shortcut for "the ns it is in".  so you would use :the-ns/user-id or use aliasing rules
[01:33:41] <ridcully_> using ::kw is a dangerous game though
[01:34:37] <z3t0_alt> I see okay that helps a little, definitely need to read more tutorials/guides
[01:34:56] <z3t0_alt> Currently working through brave clojure, but sometimes the itch just gets so bad I want to go back to building haha
[01:41:11] *** Joins: ltriant (~ltriant@118.102.122.246)
[01:41:31] <ridcully_> ::kw means the-ns/kw if you are currently in this ns; ::ns/kw means the aliased namespace ns
[01:41:45] <ridcully_> it is a shortcut to not write out the ns
[01:42:37] *** Joins: son0p (~ff@181.136.122.143)
[01:45:57] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[01:53:03] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[01:54:05] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[01:58:36] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[02:02:50] *** Quits: \f (~form_feed@user/f/x-7101985) (Killed (NickServ (GHOST command used by form_feed!4c1975b719@user/f/x-7101985)))
[02:03:07] *** Joins: form_fee- (~form_feed@nixon.einval.eu)
[02:12:00] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[02:16:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[02:20:45] *** Joins: \f (4c1975b719@user/f/x-7101985)
[02:42:02] <z3t0_alt> Hi all, I have a general web development question. I am working on a simple todo crud app which is an SPA. I have an app-db (client-side) and a backend with a database. I can do typical create, update, delete etc with an API that I have also implemented on the server-side. So my question is, when I create a new todo item, should I place it in the
[02:42:02] <z3t0_alt> app-db and then do a request to the database to persist the change? Or should I put in the db and then get the new item.
[02:42:03] <z3t0_alt> I'm pretty sure I should put it in the app db immediately, else my SPA may as well be server-side rendered.
[02:42:03] <z3t0_alt> But I'm worried about my app-db todo list becoming inconsistent with the one in the server.
[02:42:34] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:42:40] <z3t0_alt> Is there a term for this kind of problem? I know its a very basic one that I'm sure even small webapps have to think about. I'd like to do some reading but can't seem to figure out what to search for
[02:43:38] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:44:20] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[02:45:31] <z3t0_alt> I think reading more on client-server architectures will give me some ideas
[02:45:36] <z3t0_alt> going to go do that!
[02:46:34] <sobel> if you wait for server confirmation before committing changes to your local model, it's going to make your UI feel sluggish. i would go with a model of user notification in event of failure to commit changes to the server and have the UI assume success, maybe roll back its data model to reality in case of failure
[02:46:57] <sobel> ideally, keep it simple
[02:48:03] <z3t0_alt> great idea, simple it is:D
[02:48:52] <z3t0_alt> And eventually I want to setup a pub sub with websockets, so the client can keep a list of unconfirmed transactions, and then eventually the server can respond back with a confirmation message
[02:49:13] <z3t0_alt> I've been diving deep into reading about software agents hmm, really want to leverage that in my architecture
[02:49:19] *** Joins: yauhsienhuangtw (~Yau-Hsien@61-231-39-29.dynamic-ip.hinet.net)
[02:50:09] <ridcully_> agents in clojure are ff
[02:50:22] <z3t0_alt> ff?
[02:50:30] <ridcully_> fire-and-forget
[02:50:36] <z3t0_alt> ahh
[02:50:39] <z3t0_alt> thats a good thing, right?
[02:51:00] <ridcully_> it usually is not.  but it depends on your problem
[02:52:49] *** Quits: yauhsien_ (~Yau-Hsien@61-231-39-29.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[02:53:30] <z3t0_alt> gotcha
[02:53:34] *** Joins: dansa (~user@177.41.57.176)
[02:53:53] <z3t0_alt> going to go take a break and get some food:D  Talk to you all later! take care
[03:05:20] *** Joins: yoonkn (~user@175.197.208.79)
[03:14:00] *** Quits: z3t0_alt (~z3t0_alt@146.71.14.98) (Quit: Connection closed)
[03:14:40] *** Quits: seschwar (~seschwar@user/seschwar) (Quit: :wq)
[03:20:52] *** rufo_ is now known as rufo
[03:35:42] *** Quits: dansa (~user@177.41.57.176) (Remote host closed the connection)
[03:40:55] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Remote host closed the connection)
[03:51:00] *** Quits: uncleyear (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru) (Ping timeout: 240 seconds)
[03:53:28] *** Quits: op2 (~op2@user/op2) (Ping timeout: 272 seconds)
[03:57:11] *** Joins: Techcable (~Techcable@168.235.93.147)
[03:57:27] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[04:01:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[04:28:31] *** Joins: ltriant (~ltriant@118.102.122.246)
[04:33:16] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 245 seconds)
[06:03:02] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Ping timeout: 240 seconds)
[06:03:24] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[06:09:17] *** Quits: justAstache (~justache@user/justache) (Remote host closed the connection)
[06:10:51] *** Joins: justAstache (~justache@user/justache)
[06:16:49] *** Quits: nivag (~gavin@103-76-144-176.ip.cis.gen.nz) (Remote host closed the connection)
[06:24:10] *** Joins: nivag (~gavin@103-76-144-176.ip.cis.gen.nz)
[07:00:16] *** Joins: ltriant (~ltriant@118.102.122.246)
[07:16:08] *** Quits: v88m (~Xiro@109-252-170-8.dynamic.spd-mgts.ru) (Ping timeout: 272 seconds)
[07:24:52] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[07:29:24] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[07:34:44] *** Joins: SR-71 (~user@user/SR-71)
[07:57:13] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[08:01:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[08:03:38] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Ping timeout: 272 seconds)
[08:04:00] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[08:04:16] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 272 seconds)
[08:07:01] *** Quits: selfsymmetric-mu (~matt@c-73-29-248-41.hsd1.nj.comcast.net) (Remote host closed the connection)
[08:17:31] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[08:18:10] *** Joins: shiranaihito_ (~textual@2001-b011-4011-1e1b-7164-094a-37ff-f4b4.dynamic-ip6.hinet.net)
[08:21:48] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Ping timeout: 240 seconds)
[08:27:24] *** Quits: RedNifre (~RedNifre@dslb-002-206-191-004.002.206.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[08:31:23] *** Quits: lagooned (~lagooned@108-208-149-42.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 256 seconds)
[08:32:32] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[08:36:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[08:41:23] *** Joins: RedNifre (~RedNifre@dslb-002-206-121-030.002.206.pools.vodafone-ip.de)
[08:48:19] *** Joins: lagooned (~lagooned@108-208-149-42.lightspeed.hstntx.sbcglobal.net)
[09:02:42] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[09:03:01] *** Joins: AlaskanEmily (~AlaskanEm@user/alaskanemily)
[09:06:08] *** Joins: selfsymmetric-mu (~matt@c-73-29-248-41.hsd1.nj.comcast.net)
[09:16:46] *** Quits: SR-71 (~user@user/SR-71) (Remote host closed the connection)
[09:30:24] *** Quits: lagooned (~lagooned@108-208-149-42.lightspeed.hstntx.sbcglobal.net) (Quit: Client closed)
[10:01:26] *** Joins: dalek_caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[10:04:33] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[10:08:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[10:20:10] *** Joins: v88m (~Xiro@109-252-170-8.dynamic.spd-mgts.ru)
[10:38:32] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[10:43:00] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[11:13:22] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[11:17:57] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[11:39:45] *** Joins: yauhsien_ (~Yau-Hsien@61-231-39-29.dynamic-ip.hinet.net)
[11:40:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[11:42:55] *** Quits: yauhsienhuangtw (~Yau-Hsien@61-231-39-29.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[11:49:31] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[11:51:10] *** Joins: op2 (~op2@user/op2)
[11:52:51] *** Quits: v88m (~Xiro@109-252-170-8.dynamic.spd-mgts.ru) (Ping timeout: 256 seconds)
[11:53:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[12:01:04] *** Joins: ltriant (~ltriant@118.102.122.246)
[12:04:15] *** Quits: AlaskanEmily (~AlaskanEm@user/alaskanemily) (Remote host closed the connection)
[12:06:09] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[13:00:23] *** Joins: mbuf (~Shakthi@122.162.139.196)
[13:01:21] *** Joins: uncleyear (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru)
[13:01:22] *** Quits: uncleyear (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru) (Remote host closed the connection)
[13:02:26] *** Joins: uncleyear (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru)
[13:25:29] *** Quits: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se) (Quit: WeeChat 2.8)
[13:28:27] *** Joins: jespada (~jespada@148.252.133.30)
[13:33:51] *** Quits: jespada (~jespada@148.252.133.30) (Read error: Connection reset by peer)
[13:38:08] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[13:42:57] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[13:58:46] *** Quits: dalek_caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: dalek_caan)
[14:29:12] *** Joins: seschwar (~seschwar@user/seschwar)
[14:32:25] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Remote host closed the connection)
[14:32:51] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[14:52:20] *** Joins: ltriant (~ltriant@118.102.122.246)
[14:57:50] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 272 seconds)
[15:00:02] *** Quits: henry40408 (~henry4040@175.181.176.30) (Ping timeout: 260 seconds)
[15:22:42] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[15:22:45] *** Joins: henry40408 (~henry4040@175.181.176.30)
[15:27:19] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[15:34:14] *** Quits: uncleyear (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru) (Remote host closed the connection)
[15:35:11] *** Joins: uncleyear (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru)
[15:41:22] *** Joins: dansa (~user@177.98.73.110)
[15:43:24] *** Joins: struchu (~struchu@staticline-31-183-165-230.toya.net.pl)
[15:48:17] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[15:56:55] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[16:01:24] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[16:02:44] *** Quits: struchu (~struchu@staticline-31-183-165-230.toya.net.pl) (Quit: WeeChat 3.3)
[16:20:07] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:34:04] *** Joins: stackbeard (uid543178@id-543178.uxbridge.irccloud.com)
[17:34:13] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[17:37:46] *** Quits: shiranaihito_ (~textual@2001-b011-4011-1e1b-7164-094a-37ff-f4b4.dynamic-ip6.hinet.net) (Ping timeout: 260 seconds)
[17:46:30] *** Joins: yewscion (~yewscion@ec2-34-234-185-163.compute-1.amazonaws.com)
[18:02:07] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[18:06:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[18:16:38] *** Joins: ltriant (~ltriant@118.102.122.246)
[18:19:52] *** Joins: son0p (~ff@181.136.122.143)
[18:21:46] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 272 seconds)
[18:36:41] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[18:41:16] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 250 seconds)
[18:47:44] *** Joins: dalek_caan (~Thunderbi@109.252.124.86)
[19:01:34] *** Joins: v88m (~Xiro@109-252-170-8.dynamic.spd-mgts.ru)
[19:11:28] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[19:15:37] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[19:32:48] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[19:44:05] *** Quits: dansa (~user@177.98.73.110) (Remote host closed the connection)
[19:46:32] *** Quits: mbuf (~Shakthi@122.162.139.196) (Quit: Leaving)
[20:19:48] *** Quits: selfsymmetric-mu (~matt@c-73-29-248-41.hsd1.nj.comcast.net) (Ping timeout: 240 seconds)
[20:20:05] *** Joins: selfsymmetric-mu (~matt@c-73-29-248-41.hsd1.nj.comcast.net)
[20:39:28] *** Joins: mwnaylor (~user@2601:5ce:4300:5560::68b3)
[20:47:47] *** Quits: henry40408 (~henry4040@175.181.176.30) (Ping timeout: 256 seconds)
[20:58:36] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 240 seconds)
[21:07:51] *** Quits: nullm0dem (~nullm0dem@rs232.0x2f8.io) (Quit: leaving)
[21:15:06] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[21:21:46] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 260 seconds)
[21:27:43] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[21:31:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Ping timeout: 240 seconds)
[21:33:25] *** Joins: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se)
[21:49:55] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[22:10:36] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[22:18:13] *** Joins: ltriant (~ltriant@118.102.122.246)
[22:23:20] *** Joins: z3t0_alt (~z3t0_alt@146.71.14.98)
[22:23:42] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 272 seconds)
[22:31:28] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[22:37:53] <z3t0_alt> Is anyone able to access cljdoc.org? I wonder if its down
[22:38:46] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Remote host closed the connection)
[22:39:19] <seebs> timing out for me.
[22:39:22] <Para> Yep, same.
[22:39:34] *** Joins: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a)
[22:39:54] <z3t0_alt> gotcha
[22:39:55] <z3t0_alt> thanks!
[22:39:59] *** Quits: mwnaylor (~user@2601:5ce:4300:5560::68b3) (Ping timeout: 252 seconds)
[22:40:07] <seebs> i can ping it, just not get pages from it
[22:41:08] *** Joins: MetaYan (~MetaYan@c-1555235c.07-84-7462671.bbcust.telenor.se)
[22:41:26] <Para> Bad Gateway
[22:41:45] <Para> Now I'm imagining a dog named Gateway.
[22:42:35] <z3t0_alt> hahah
[22:43:10] <z3t0_alt> I'm trying to find an example of using ring.middleware.cors with reitit, can anyone recommend any github links?
[22:49:48] <Para> I've always written my own CORS middleware, so I don't know :I
[22:49:53] <Para> (don't do what I do)
[22:50:11] <z3t0_alt> haha
[22:50:19] <z3t0_alt> I was actually thinking about that
[22:50:51] <Para> But But anyway, you'll want to have it quite high up in the middleware stack.
[22:52:37] <Para> https://github.com/metosin/reitit/issues/143 this issue (at the end) seems to have a working config
[23:12:51] <selfsymmetric-mu> I can hit cljdoc.org
[23:13:57] <z3t0_alt> selfsymmetric-mu works now for me as well, thank you
[23:14:12] <z3t0_alt> Para thanks! figured it out with your help :)
[23:14:22] *** z3t0_alt is now known as rafi_khan971
[23:14:45] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Ping timeout: 268 seconds)
[23:15:20] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[23:26:14] *** Joins: struchu (~struchu@staticline-31-183-165-230.toya.net.pl)
[23:30:52] *** Quits: Null_A (~null_a@2601:645:8700:2290:c864:fc8b:2d0b:834a) (Remote host closed the connection)
[23:31:07] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[23:46:16] *** Quits: struchu (~struchu@staticline-31-183-165-230.toya.net.pl) (Quit: WeeChat 3.3)
[23:47:40] *** Joins: struchu (~struchu@staticline-31-183-165-230.toya.net.pl)
[23:49:29] *** Quits: struchu (~struchu@staticline-31-183-165-230.toya.net.pl) (Client Quit)
[23:53:00] *** Quits: dalek_caan (~Thunderbi@109.252.124.86) (Quit: dalek_caan)
[23:54:11] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:57:22] *** Joins: Techcable (~Techcable@168.235.93.147)
