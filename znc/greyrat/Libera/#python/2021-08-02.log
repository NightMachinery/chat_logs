[00:00:02] *** Quits: schumaml (~schumaml@p200300e2ef33e70053c1821a43d17d29.dip0.t-ipconnect.de) (Quit: WeeChat 3.0.1)
[00:00:04] <madprops> but i could just use else
[00:00:43] <Dan39> i get it now, list of dictionaries
[00:00:49] *** Joins: kn1003855 (~kn100@wireguard/tunneler/kn100)
[00:00:52] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[00:01:16] <Dan39> so the example would be more like  [x["word"] for x in list_of_dicts]
[00:01:31] <madprops> I was doing this https://www.codewars.com/kata/51e056fe544cf36c410000fb/train/python
[00:01:34] <madprops> fun exercise
[00:01:57] *** Joins: audio (~audio@2603-8081-1800-00ad-7807-e3d7-eb29-1997.res6.spectrum.com)
[00:02:02] <Dan39> oh -_-
[00:02:10] <madprops> I could have used Counter
[00:03:30] *** Joins: stormy (~stormy@p4fc4dc7d.dip0.t-ipconnect.de)
[00:03:47] *** Joins: kn10038557 (~kn100@wireguard/tunneler/kn100)
[00:04:08] *** Quits: kn100385 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 272 seconds)
[00:04:08] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[00:04:54] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[00:05:05] <stormy>  /run scriptassist
[00:05:24] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 272 seconds)
[00:06:40] *** Quits: kn1003855 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 272 seconds)
[00:07:11] *** Joins: korg815 (~korg815@user/korg815)
[00:07:30] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[00:07:52] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[00:08:00] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:addb:a87a:2c4:cf0e)
[00:08:03] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[00:08:28] *** Joins: kn100385570 (~kn100@wireguard/tunneler/kn100)
[00:10:28] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 272 seconds)
[00:10:46] *** Quits: foobaz212 (~foobaz212@52.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[00:10:59] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[00:11:06] *** Quits: kn10038557 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 272 seconds)
[00:11:20] *** Joins: kn1003855702 (~kn100@wireguard/tunneler/kn100)
[00:12:08] *** Joins: caveman_ (~caveman@gateway/tor-sasl/caveman)
[00:13:47] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[00:14:16] *** Quits: kn100385570 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 272 seconds)
[00:14:41] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 265 seconds)
[00:14:52] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:15:06] *** Quits: RBEL (~jigubigul@2001:1c06:19c3:7000:10ef:b427:e2b:b8c7) (Quit: WeeChat 3.2)
[00:15:23] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Killed (NickServ (GHOST command used by caveman_)))
[00:15:28] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[00:15:49] *** caveman_ is now known as cvmn
[00:15:51] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[00:15:53] *** Joins: kn10038557026 (~kn100@wireguard/tunneler/kn100)
[00:15:55] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[00:16:20] *** Joins: cheater (~Username@user/cheater)
[00:17:08] *** Joins: digilink (~digilink@user/digilink)
[00:17:14] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:addb:a87a:2c4:cf0e) (Remote host closed the connection)
[00:18:03] *** Joins: ice99 (~ice9@user/ice9)
[00:18:10] *** Joins: kn100385570262 (~kn100@wireguard/tunneler/kn100)
[00:18:42] *** Quits: kn1003855702 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 272 seconds)
[00:18:53] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:addb:a87a:2c4:cf0e)
[00:19:42] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:20:36] *** Quits: kn10038557026 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 272 seconds)
[00:20:43] *** kn100385570262 is now known as kn10038557026
[00:21:14] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 272 seconds)
[00:21:27] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[00:21:36] *** Joins: y1n-v1 (~y1n@84-115-64-61.wifi.dynamic.surfer.at)
[00:21:53] *** Quits: stormy (~stormy@p4fc4dc7d.dip0.t-ipconnect.de) (Quit: leaving)
[00:22:03] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::791f) (Quit: Konversation terminated!)
[00:22:27] *** Quits: nyloc (~nyloc@p54825146.dip0.t-ipconnect.de) (Quit: Client closed)
[00:23:14] *** Quits: NeoCore (~neocore@89.40.183.16) (Quit: Leaving)
[00:23:58] *** Quits: y1n (~y1n@84-115-64-143.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[00:25:18] *** Joins: kn100385570262 (~kn100@wireguard/tunneler/kn100)
[00:25:33] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 276 seconds)
[00:25:54] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 240 seconds)
[00:25:57] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 250 seconds)
[00:26:56] *** Quits: kn10038557026 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 272 seconds)
[00:27:51] *** Quits: Akuli (~Akuli@82-203-165-255.bb.dnainternet.fi) (Quit: Leaving)
[00:28:07] *** Joins: Akuli (~Akuli@82-203-165-255.bb.dnainternet.fi)
[00:30:01] *** Joins: kn1003855702625 (~kn100@wireguard/tunneler/kn100)
[00:31:47] *** Joins: ice9 (~ice9@user/ice9)
[00:32:00] *** Quits: kn100385570262 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 272 seconds)
[00:32:01] *** kn1003855702625 is now known as kn100385570262
[00:32:39] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Read error: Connection reset by peer)
[00:32:56] *** Joins: Thanatos (~Thanatos@197.210.65.221)
[00:33:01] *** Joins: mh3f_ (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[00:34:01] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 265 seconds)
[00:34:29] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:6467:aa41:cd69:bd89)
[00:36:47] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[00:40:34] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[00:42:04] *** Joins: ferz (~ferz@93.48.251.229)
[00:42:34] *** Joins: kn1003855702625 (~kn100@wireguard/tunneler/kn100)
[00:44:00] *** Quits: kn100385570262 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 252 seconds)
[00:45:08] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:45:56] *** Quits: Thanatos (~Thanatos@197.210.65.221) (Ping timeout: 272 seconds)
[00:48:32] *** Joins: Haxxa (~Haxxa@122.199.45.186)
[00:49:38] *** Quits: kn1003855702625 (~kn100@wireguard/tunneler/kn100) (Quit: https://kn100.me :))
[00:53:14] *** Joins: Dotz0cat_ (~Dotz0cat@h210.234.186.173.dynamic.ip.windstream.net)
[00:53:41] *** Quits: Dotz0cat (~Dotz0cat@h225.173.40.162.dynamic.ip.windstream.net) (Ping timeout: 258 seconds)
[00:54:52] *** Quits: inom (~inom@176.59.99.11) (Quit: Leaving.)
[00:55:44] *** Joins: Dotz0cat (~Dotz0cat@h186.236.31.71.dynamic.ip.windstream.net)
[00:56:09] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f95d-146.dhcp.inet.fi)
[00:57:33] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f95d-146.dhcp.inet.fi) (Client Quit)
[00:57:42] *** Quits: Dotz0cat_ (~Dotz0cat@h210.234.186.173.dynamic.ip.windstream.net) (Ping timeout: 265 seconds)
[01:03:30] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[01:03:37] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Quit: No Ping reply in 180 seconds.)
[01:05:20] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[01:05:54] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 256 seconds)
[01:07:49] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Quit: QUIT)
[01:08:15] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[01:08:29] <rud0lf> will f"{0:.1f:value}" evaluate to 3.3 if value is 10.0 / 3 ?
[01:08:46] <rud0lf> i'm not sure how to join format string and expression, i think with ":" ?
[01:09:17] <KirkMcDonald> rud0lf: f"{value:.1f}"
[01:09:24] <rud0lf> ah
[01:09:25] <rud0lf> thank you
[01:10:58] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[01:11:22] *** Quits: audio (~audio@2603-8081-1800-00ad-7807-e3d7-eb29-1997.res6.spectrum.com) (Remote host closed the connection)
[01:11:40] *** Joins: audio (~audio@2603-8081-1800-00ad-6065-0196-b737-6970.res6.spectrum.com)
[01:15:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:18:12] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[01:18:57] *** Joins: geli (~gelignite@55d4399a.access.ecotel.net)
[01:19:26] *** Joins: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb)
[01:19:44] *** Joins: emika8 (~emika@185.207.249.42)
[01:20:08] *** Quits: emika (~emika@83.136.182.41) (Ping timeout: 258 seconds)
[01:20:09] *** emika8 is now known as emika
[01:20:36] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[01:20:48] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 276 seconds)
[01:20:58] *** Quits: stevieh (~skrodzki@83.135.21.194) (Ping timeout: 240 seconds)
[01:21:23] *** Quits: gentlinux (~gentlinux@2a02:8108:1880:294:3787:9d9d:a422:6d07) (Quit: WeeChat 2.3)
[01:21:37] *** Joins: y1n-v2 (~y1n@84-115-64-61.wifi.dynamic.surfer.at)
[01:22:02] *** Quits: magla (~gelignite@55d482e4.access.ecotel.net) (Ping timeout: 272 seconds)
[01:22:13] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[01:22:14] *** Joins: pnoud (~pnoud@user/pnoud)
[01:23:45] <sveinse> I am contemplating of how I should deal with exceptions in my package, that is also a user space app. On one side it is tempting to use own Exceptions within the package. That makes for a differentiation between anticipated user errors with proper UX response from unexpected errors. However it is not pythonic to wildly litter the code arbitrary exceptions class either. Use the built in when one can. But
[01:23:51] <sveinse> an OSError is harder to distinguish between expected and unexpected error. Any tips on how to balance the two?
[01:23:59] *** Quits: v0lta (~dkmueller@2a01:c22:7a07:3100:54ce:2c9:e7b8:c1d0) (Quit: WeeChat 3.2)
[01:24:17] *** Quits: y1n-v1 (~y1n@84-115-64-61.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[01:27:44] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[01:28:52] *** Quits: sazawal (~sazawal@171.50.134.171) (Quit: Leaving)
[01:28:55] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:30:15] <jochum> sveinse: can you tell me in which case OSError is expected for you?
[01:30:59] *** PJBoy is now known as Guest96
[01:31:08] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:31:12] <securethemews> yeah you can usually work it out by running some other commands like finding out whether its a directory or not
[01:32:57] *** Quits: geli (~gelignite@55d4399a.access.ecotel.net) (Quit: Stay safe!)
[01:33:10] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[01:33:27] <sveinse> jochum: "expected" as in user error. Say if the user entered a non existing directory. For an end-user app you don't really want a full py traceback, but rather a friendly error. However, if you encounter something that truly fails within your program, you want it to traceback as per usual
[01:34:25] <sveinse> OTOH, when a py package is used as an API from py, you don't need or want this distinction. OSError is the only way to go.
[01:34:42] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:34:42] *** Quits: Guest96 (~PJBoy@user/pjboy) (Ping timeout: 272 seconds)
[01:34:58] <jochum> OTOH = Off to Hell?
[01:35:06] <jochum> non native here
[01:35:15] <optimant> jochum: on the other hand
[01:35:29] <jochum> optimant: thx
[01:35:30] <sveinse> haha :D could've been
[01:35:42] <optimant> I think what others are saying is validate user input and return a logical failure if the input is bad
[01:36:12] <jochum> I would go for Custom package Exceptions
[01:36:34] <optimant> Exception handling when the condition can’t be anticipated (eg output size not known, so can’t check if enough space is available)
[01:36:54] <optimant> But logic flow when it can be (known output size? Check destination free space)
[01:37:10] <jinsun> sveinse: who says it is not pythonic to define your own exceptions? I find it simpler to just have your custom exceptions for expected cases and treat all built in ones as unrexpected
[01:39:19] <sveinse> jinsun: I can't find it right now, but I watched a pyconf lecture about it
[01:40:19] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[01:42:18] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[01:42:18] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[01:44:10] <jochum> sveinse: I'm willing to dig about that, can you give more info?
[01:46:42] *** Joins: foobaz212 (~foobaz212@32.188.159.143.dyn.plus.net)
[01:49:25] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[01:49:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[01:51:07] <sveinse> Hmm, I expected it to be easy to find, but I can't. Or more correctly: I haven't found the right sentence to give google...
[01:52:07] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[01:53:02] *** Quits: foobaz212 (~foobaz212@32.188.159.143.dyn.plus.net) (Quit: Client closed)
[01:53:15] *** Joins: foobaz212 (~foobaz212@32.188.159.143.dyn.plus.net)
[01:54:20] *** Joins: pnoud (~pnoud@user/pnoud)
[01:54:26] *** Joins: Fiji (~Fiji@user/fiji)
[01:55:02] *** Quits: MaximB (~MaximB@87.68.164.172) (Quit: Client closed)
[01:56:20] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[01:56:35] *** Joins: V1mV1m (~VimVim@85.184.174.155)
[01:58:02] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[01:58:06] *** Quits: Melantha (~pyon@user/pyon) (Quit: WeeChat 3.2)
[01:58:34] *** Quits: foobaz212 (~foobaz212@32.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[01:59:06] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 240 seconds)
[01:59:58] *** Quits: VimVim (~VimVim@85.191.77.146) (Ping timeout: 272 seconds)
[02:03:10] *** Joins: y1n (~y1n@84-115-64-61.wifi.dynamic.surfer.at)
[02:03:55] *** Quits: y1n-v2 (~y1n@84-115-64-61.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[02:04:10] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[02:07:04] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[02:07:57] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:08:39] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 250 seconds)
[02:09:41] *** Quits: Akuli (~Akuli@82-203-165-255.bb.dnainternet.fi) (Quit: Leaving)
[02:11:06] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[02:12:42] *** Quits: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54) (Ping timeout: 272 seconds)
[02:13:07] *** Joins: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy)
[02:14:14] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[02:14:52] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[02:18:04] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[02:18:37] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:18:45] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:20:07] *** Joins: pnoud (~pnoud@user/pnoud)
[02:21:13] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 250 seconds)
[02:21:36] *** Joins: y1n-v1 (~y1n@84-115-64-61.wifi.dynamic.surfer.at)
[02:22:31] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[02:22:50] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[02:22:54] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[02:23:00] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[02:23:18] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[02:23:39] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[02:24:42] *** Quits: y1n (~y1n@84-115-64-61.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[02:25:22] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 272 seconds)
[02:25:58] *** Joins: foobaz212 (~foobaz212@32.188.159.143.dyn.plus.net)
[02:26:09] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[02:27:12] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[02:28:28] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[02:30:46] *** Quits: foobaz212 (~foobaz212@32.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[02:30:50] *** Joins: tonitch (~tonitch@user/tonitch)
[02:31:29] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[02:32:16] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[02:33:07] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[02:33:21] <tonitch> Hello, I have a list of dict in python and I want a dict of these dict with a ordered number as key values... what is the way of doing that plz ^^
[02:33:32] <tonitch> like [{'test': 1, 'blop': 'blop2'}, {'test': 2, 'blop': 'bar'}]
[02:33:52] <tonitch> I want {0: {...myfirst test 1},
[02:34:06] <tonitch> 1: {..my second test2}}
[02:35:01] <Yhg1s> tonitch: dict(enumerate(your_list))
[02:35:35] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[02:35:40] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[02:36:01] <tonitch> exactly thanks you !
[02:36:05] *** Joins: harleypig (thelounge@harleypig.com)
[02:36:12] *** Joins: r3m (~launch@user/r3m)
[02:36:47] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[02:37:13] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[02:37:30] *** Quits: r3m (~launch@user/r3m) (Client Quit)
[02:37:47] *** Joins: r3m (~launch@user/r3m)
[02:38:02] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 272 seconds)
[02:38:17] <harleypig> Does a module exist that deconstructs a markdown file so I can pick data out of it?
[02:38:49] *** Quits: r3m (~launch@user/r3m) (Client Quit)
[02:39:06] *** Joins: r3m (~launch@user/r3m)
[02:39:33] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[02:40:15] *** Joins: ice9 (~ice9@user/ice9)
[02:41:04] <matsaman> harleypig: might be easier to conver to HTML first and then parse that
[02:41:21] <matsaman> but I wouldn't be surprised if some markdown library out there allows you to get that meaning before converting to HTML, too
[02:41:47] <matsaman> convert* to
[02:41:50] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[02:41:57] <harleypig> I've been looking, but they all seem to think you just want to go straight to whatever you're converting too (which is a fair assumption).
[02:42:20] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[02:42:35] <harleypig> Thanks. I wanted to check before going the md->html->parsing route
[02:42:51] <matsaman> I mean, converting to HTML arguably is assigning & delineating the meaning, yeah
[02:42:59] * matsaman shrugs
[02:43:20] <matsaman> interesting question
[02:43:28] <matsaman> I would hope markdown flavors last longer than HTML, for example
[02:43:37] *** Quits: AsenM (~AsenM@78.90.248.234) (Remote host closed the connection)
[02:43:44] <matsaman> popularly =)
[02:43:44] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 272 seconds)
[02:43:52] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[02:43:52] <matsaman> obviously both will last forever
[02:43:55] <harleypig> :) right
[02:44:00] *** Joins: AsenM (~AsenM@78.90.248.234)
[02:45:23] *** Joins: Thanatos (~Thanatos@197.210.65.221)
[02:46:32] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:47:05] *** Joins: foobaz212 (~foobaz212@32.188.159.143.dyn.plus.net)
[02:47:12] *** Quits: foobaz212 (~foobaz212@32.188.159.143.dyn.plus.net) (Client Quit)
[02:47:21] *** Joins: foobaz212 (~foobaz212@32.188.159.143.dyn.plus.net)
[02:47:55] <matsaman> I mean why not write a web browser that supports markdown interpreted the same as HTML out of the box? <shrug>
[02:48:28] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 256 seconds)
[02:48:58] *** Quits: Narrat (~omnius@p200300df5f45d8d906ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:49:19] *** Quits: bremner (~bremner@notmuch/developer/bremner) (Remote host closed the connection)
[02:49:59] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[02:51:27] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:51:46] <Evolver> If I have multiple virtual environments, how can I debug and/or run code safely in a sandboxed manner?
[02:53:46] *** Joins: d00gy (~tonberry@user/d00gy)
[02:54:05] <matsaman> I'm not sure there are many reports of code leaking out of a virtualenv, but I can't say I've looked into it much.
[02:54:11] *** Quits: freeman_h (~freeman_h@2a02:c7f:fc54:ba00:797e:b2e8:d08a:59c4) (Quit: Leaving)
[02:54:15] <matsaman> if you wanted to double up your security, look into chroots or containers
[02:54:30] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 272 seconds)
[02:54:35] <Evolver> chroots and containers make a lot of sense
[02:55:00] <Evolver> There have been insecure and malware packages on PyPI
[02:55:12] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[02:55:19] *** Joins: Flux (~Fluxx@user/fluxx)
[02:55:34] <matsaman> Evolver: interesting: https://github.com/ihucos/avenv
[02:55:37] <Evolver> I will go further because I will move all this virtual environments into a VM too, then chroot/docker in it
[02:56:08] <matsaman> looks like it's a wrapper for chroot for virtualenv
[02:56:12] <Evolver> i see
[02:56:25] <matsaman> yeah containerizing it should have the same general effect
[02:58:47] <Evolver> some IDE support would be nice.
[02:58:50] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[02:59:06] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Remote host closed the connection)
[02:59:25] <whatsupdoc> What's the equivalent of INT_MIN and INT_MAX in python?
[02:59:43] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:00:14] <Peng> Python has arbitrary precision integers. What do you want them for?
[03:00:32] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[03:01:23] <Evolver> whatsupdoc: Python doesn't have such limits, but there is `sys.maxsize` for low-level use.
[03:01:49] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[03:02:24] <Repiphany> You can use float('inf') if you just need something that is always greater than any number
[03:03:05] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[03:03:19] <Evolver> and similarly `float('-inf')`
[03:03:27] *** Joins: ice9 (~ice9@user/ice9)
[03:03:33] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:04:02] *** Joins: FoodMan (~glucose@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[03:06:42] <whatsupdoc> are  class properties public or private by default?
[03:06:58] <whatsupdoc> ok
[03:07:05] *** Joins: y1n (~y1n@84-115-64-61.wifi.dynamic.surfer.at)
[03:07:37] <Evolver> whatsupdoc: There is generally no public/private separation in Python. It's almost all public. For private, people use a leading underscore.
[03:08:01] <Evolver> ...as a convention, but it's still publicly accessible
[03:08:12] *** Quits: y1n-v1 (~y1n@84-115-64-61.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[03:08:23] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[03:09:42] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 272 seconds)
[03:13:35] *** Joins: bremner (~bremner@notmuch/developer/bremner)
[03:15:43] <phy1729> Double underscore does name mangling, but it's circumventable
[03:17:20] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 244 seconds)
[03:17:48] *** Quits: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (Remote host closed the connection)
[03:18:14] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:18:44] *** Joins: cjb (~cjb@user/cjb)
[03:19:07] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[03:19:41] *** Joins: pnoud (~pnoud@user/pnoud)
[03:20:13] <Evolver> whatsupdoc: combined with a static analyzer, any private property access will be flagged, so it can be good enough
[03:22:06] *** Joins: y1n-v1 (~y1n@84-115-64-40.wifi.dynamic.surfer.at)
[03:23:00] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[03:23:46] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[03:24:34] *** Quits: foobaz212 (~foobaz212@32.188.159.143.dyn.plus.net) (Quit: Client closed)
[03:24:44] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 256 seconds)
[03:24:48] *** Joins: foobaz212 (~foobaz212@32.188.159.143.dyn.plus.net)
[03:24:54] *** Quits: y1n (~y1n@84-115-64-61.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[03:25:59] *** Quits: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4) (Quit: Konversation terminated!)
[03:26:22] *** Joins: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4)
[03:26:58] *** Quits: bn_work (uid268505@id-268505.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[03:28:42] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 272 seconds)
[03:28:42] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 272 seconds)
[03:29:55] *** Quits: foobaz212 (~foobaz212@32.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[03:32:06] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 276 seconds)
[03:38:34] *** Joins: VimVim (~VimVim@85.184.174.155)
[03:40:30] *** Joins: qk1z (~qk1z@110-175-249-154.tpgi.com.au)
[03:41:33] *** Quits: V1mV1m (~VimVim@85.184.174.155) (Ping timeout: 265 seconds)
[03:45:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:47:26] *** Joins: monkey_ (~user@190.104.116.134)
[03:49:15] <shodan45> anyone know of a python http proxy as a module?
[03:49:30] <shodan45> so I can extend it how I want
[03:49:54] <shodan45> I thought this would be a super simple & common thing, but that doesn't seem to be the case
[03:52:16] *** Quits: Psi-Jack (psi-jack@user/psi-jack) (Remote host closed the connection)
[03:52:29] *** Joins: Psi-Jack (psi-jack@user/psi-jack)
[03:52:37] <phy1729> SOCKS is a very simple protocol. It's implementable in a day or so with https://docs.python.org/3/library/socketserver.html
[03:52:46] *** Joins: entuland (~entuland@user/entuland)
[03:53:15] *** Quits: entuland (~entuland@user/entuland) (Remote host closed the connection)
[03:54:24] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:55:38] *** Parts: bremner (~bremner@notmuch/developer/bremner) (Using Circe, the loveliest of all IRC clients)
[03:57:59] <shodan45> phy1729: I only need http
[03:58:53] <shodan45> I *could* just figure out how to code an http proxy, I'm just surprised that something doesn't already exist
[03:59:16] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[03:59:39] *** Joins: Kaml (~Kaml@70.107.96.98)
[04:01:28] *** Joins: philipp64|work (~philipp64@174.27.172.137)
[04:01:43] <Kaml> I'm having some trouble understanding the semantics of floor division for floats. Why does `math.log(64) / math.log(4)` yield 3.0 while `math.log(64) // math.log(4)` yield 2.0?
[04:04:50] <jochum> Kaml: when you try it in a calculator you see why, I guess.
[04:04:54] <Yhg1s> Kaml: because of inexactness in the intermediate values, the result of the division is a float very slightly less than 3.0, which is rounded up to 3.0.
[04:05:21] <jochum> Thats what i meant
[04:05:23] <Yhg1s> or rather, the calculation comes out as slightly less than 3.0, but the closest float to it is 3.0.
[04:05:23] *** Quits: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[04:07:42] *** Joins: tims (~tims@61.69.131.46)
[04:08:19] <Kaml> Yhg1s jochum - ah okay, I didn't realize python did rounding like that automatically, are there any docs for how it decides when to round?
[04:08:19] *** Quits: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4) (Quit: Konversation terminated!)
[04:08:42] *** Joins: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4)
[04:09:13] <Yhg1s> Kaml: it's not Python doing it, it's the platform IEEE 754 double, which Python uses for floats.
[04:09:38] <Yhg1s> Kaml: sometimes it's illustrative to convert the floats to decimals to see the inexactness:
[04:09:41] <Yhg1s> >>> decimal.Decimal(math.log(64)) / decimal.Decimal(math.log(4))
[04:09:44] <Yhg1s> Decimal('2.999999999999999839828674809')
[04:10:01] <Kaml> Yhg1s oh, it just happens that the closest representable float is 3.0?
[04:10:27] <Yhg1s> yes.
[04:10:38] <Kaml> gotcha, tyvm
[04:11:22] *** Joins: Wulf4 (~Wulf@user/wulf)
[04:12:34] *** Quits: katze_ (~brotmann@aftr-82-135-87-187.dynamic.mnet-online.de) (Quit: Leaving)
[04:13:24] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 258 seconds)
[04:14:18] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[04:14:56] *** Quits: Kaml (~Kaml@70.107.96.98) (Quit: Client closed)
[04:14:56] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[04:14:57] *** Wulf4 is now known as Wulf
[04:15:19] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[04:15:44] *** Joins: c10l (~c10l@89.34.167.207)
[04:17:21] <nedbat> i'm coming to terms myself with the idea that floats can represent very tiny intervals, but only near zero. If you want those same intervals near 1, you are out of luck.
[04:17:28] *** Quits: VimVim (~VimVim@85.184.174.155) (Ping timeout: 272 seconds)
[04:17:42] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: switching pcs..  bbl in 15 min.  sry)
[04:17:47] *** Joins: pnoud (~pnoud@user/pnoud)
[04:18:34] <SnoopJ> yea, the non-uniformity of the spacing is a real mind-bender
[04:20:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[04:20:51] *** Quits: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4) (Ping timeout: 276 seconds)
[04:21:44] *** Joins: twinsignal (~twinsigna@68.235.43.20)
[04:22:07] *** Joins: y1n-v2 (~y1n@84-115-64-40.wifi.dynamic.surfer.at)
[04:22:47] <phy1729> It makes sense if you know how they're represented in hardware
[04:22:59] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[04:23:04] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:23:16] <phy1729> Or think of it like scientific notation where you onlt get so many digits
[04:24:04] <SnoopJ> It can be understood from those perspectives, but I don't think that disqualifies it as a mind-bender.
[04:24:31] *** Quits: twinsignal (~twinsigna@68.235.43.20) (Client Quit)
[04:24:34] *** Joins: twobitsprite (~isaac.fre@107.13.51.62)
[04:25:03] *** Quits: y1n-v1 (~y1n@84-115-64-40.wifi.dynamic.surfer.at) (Ping timeout: 265 seconds)
[04:27:10] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[04:27:19] <nedbat> phy1729: it's one of those things I knew, but hadn't been personally disappointed by yet :)
[04:27:32] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 272 seconds)
[04:28:27] <phy1729> Oh then you have a whole legion of disappointment to experience
[04:28:33] <SnoopJ> nedbat, sounds like it changed, recently, heh.
[04:28:38] *** Joins: foobaz212 (~foobaz212@32.188.159.143.dyn.plus.net)
[04:29:58] <phy1729> I really should make it to the end of https://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html one day
[04:30:08] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[04:30:31] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[04:31:40] <SnoopJ> It's a great paper
[04:32:39] <SnoopJ> Or I suppose "paper" is less appropriate than "review" or somesuch. It's good reading, anyway.
[04:32:57] *** Quits: twobitsprite (~isaac.fre@107.13.51.62) (Ping timeout: 258 seconds)
[04:33:16] *** Quits: foobaz212 (~foobaz212@32.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[04:33:51] *** Parts: Psi-Jack (psi-jack@user/psi-jack) ()
[04:34:55] *** Joins: Psi-Jack (psi-jack@user/psi-jack)
[04:37:55] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[04:38:11] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[04:39:27] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[04:39:44] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[04:40:09] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[04:40:11] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[04:40:28] <rud0lf> today i've learned python supports calling functions defined later in the code :o
[04:40:48] <nedbat> rud0lf: as long as they are defined when you try to call them
[04:40:52] <rud0lf> i've always grown my code toward the beggining of code
[04:40:59] <rud0lf> i'm so silly :)
[04:41:09] <rud0lf> i just wonder one thing
[04:41:13] <rud0lf> let me pastebin it
[04:41:20] *** Quits: Thanatos (~Thanatos@197.210.65.221) (Read error: Connection reset by peer)
[04:41:59] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[04:42:14] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[04:43:08] *** Quits: Psi-Jack (psi-jack@user/psi-jack) (Remote host closed the connection)
[04:44:03] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[04:44:17] *** Joins: Thanatos (~Thanatos@197.210.65.82)
[04:44:20] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[04:44:28] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[04:45:00] <rud0lf> could you help me with my variable scope issue? https://bpa.st/YSQA (it's short and simple)
[04:45:20] <rud0lf> i wonder if variable should always be declared outside if .. elif .. else block
[04:45:32] <rud0lf> to avoid any problems with its scope/visibility
[04:47:09] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[04:47:50] <nedbat> rud0lf: Python doesn't have block scope, only function scope
[04:47:58] <rud0lf> i see
[04:48:02] <rud0lf> uneccessary then
[04:48:03] <rud0lf> thank you
[04:48:05] <nedbat> rud0lf: so i would choose between your two choices based on which is most readable
[04:48:21] <rud0lf> i think #1 is cleaner
[04:48:27] <rud0lf> easier to re-read later
[04:49:19] <Repiphany> my_var = 110 if condition else (115 if condition2 else 120) # not serious
[04:51:13] <Repiphany> Actually, readability isn't *that* bad
[04:51:33] <SnoopJ> rud0lf, helpful reading about names: https://nedbatchelder.com/text/names1.html
[04:54:40] <rud0lf> thank you SnoopJ
[05:03:06] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[05:04:59] *** Quits: d00gy (~tonberry@user/d00gy) (Ping timeout: 272 seconds)
[05:08:38] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[05:09:41] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[05:10:30] <stealth_> pypi-support is such a slow process!
[05:11:27] *** Joins: korg815 (~korg815@user/korg815)
[05:17:23] *** Joins: pnoud (~pnoud@user/pnoud)
[05:18:40] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[05:22:05] *** Joins: lalilulelo (~lalilulel@2804:14d:7680:8ed4:b9af:fce0:8189:2d74)
[05:22:06] *** Joins: y1n-v1 (~y1n@84-115-65-27.wifi.dynamic.surfer.at)
[05:22:34] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[05:25:14] *** Quits: y1n-v2 (~y1n@84-115-64-40.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:50] *** Quits: LiftLeft (~LiftLeft@191.96.150.140) (Ping timeout: 272 seconds)
[05:34:30] *** Joins: pnoud (~pnoud@user/pnoud)
[05:35:04] <arkanoid> is it possible with mypy to limit type range like int from 0 to 10?
[05:35:21] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[05:35:27] <foo> If I want an function in an arg to only accept lists, is there a way to force a type and error if a type isn't provided? Short of doing if isinstance(tags, list): at the start of the function?
[05:35:34] <arkanoid> I mean, I want an error if a var if that type is filled with a value outside that range
[05:35:38] *** Joins: r3m (~launch@user/r3m)
[05:36:55] <stealth_> foo, ya `if not isinstance(tags, list): raise TypeError('`tags` must be type `List`'))`
[05:37:41] <foo> stealth_: ah, ok,, no way to force a type in def myFunct(expected_list): ? I thought there was an option here but I may be misremembing
[05:37:58] *** Quits: r3m (~launch@user/r3m) (Client Quit)
[05:38:16] *** Joins: r3m (~launch@user/r3m)
[05:38:23] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:19a2:bd45:758d:1822)
[05:38:28] *** Quits: Thanatos (~Thanatos@197.210.65.82) (Ping timeout: 272 seconds)
[05:38:33] <stealth_> foo, you could! depends what you are doing, say if tags was str, you could do `if isinstance(tags, str): tags = [tags]`
[05:38:47] *** Quits: r3m (~launch@user/r3m) (Client Quit)
[05:39:04] *** Joins: r3m (~launch@user/r3m)
[05:39:32] <foo> stealth_: thanks, I have to imagine there's a best practice here, perhaps? Hmmm. I have done that before now that I think about it
[05:39:57] <stealth_> foo, it really depends on the use-case
[05:39:58] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[05:40:36] *** Quits: r3m (~launch@user/r3m) (Client Quit)
[05:41:35] <stealth_> foo, here i wanted `_fds` to best `List[int]` this is how i went about it https://github.com/YoSTEALTH/Liburing/blob/master/liburing/helper.py#L29
[05:42:06] <foo> stealth_: ah, thank you :)
[05:42:32] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:19a2:bd45:758d:1822) (Ping timeout: 252 seconds)
[05:43:11] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:44:40] *** Joins: califax- (~califax@user/califx)
[05:45:46] *** Quits: emika (~emika@185.207.249.42) (Ping timeout: 265 seconds)
[05:45:58] *** Joins: emika (~emika@83.136.182.27)
[05:47:05] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:47:41] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[05:47:42] *** califax- is now known as califax
[05:48:02] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 272 seconds)
[05:48:03] *** brabrax_ is now known as brabrax
[05:48:42] *** Quits: cman (~Cody@2603:9000:d104:8465:4402:7b8f:7fcc:1412) (Ping timeout: 240 seconds)
[05:50:17] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.2)
[05:52:56] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[05:59:20] *** Joins: marduk (~marduk@172.58.187.37)
[06:03:24] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[06:04:34] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[06:04:44] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[06:04:49] *** Joins: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net)
[06:11:46] *** Joins: dre (~dre@2001:8003:c932:c301:9993:49c7:7392:9609)
[06:13:30] *** Quits: Mechanismus (~LabMonkey@108-246-46-39.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 240 seconds)
[06:14:01] *** Joins: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4)
[06:16:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:17:46] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[06:17:51] *** Joins: jpe__ (~sharpergu@2001:16b8:5c29:e100:c1b2:e4db:be5f:14bd)
[06:18:32] *** Joins: darksun (~darksun@user/darksun)
[06:19:07] *** Joins: pnoud (~pnoud@user/pnoud)
[06:19:19] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[06:20:58] *** Quits: sharperguy_ (~sharpergu@2001:16b8:5c9b:2300:33fe:3790:ba18:2648) (Ping timeout: 272 seconds)
[06:22:06] *** Joins: y1n-v2 (~y1n@84-115-65-123.wifi.dynamic.surfer.at)
[06:22:14] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 272 seconds)
[06:23:28] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 265 seconds)
[06:23:30] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Ping timeout: 272 seconds)
[06:24:07] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[06:24:46] *** Quits: y1n-v1 (~y1n@84-115-65-27.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[06:25:29] *** Joins: euouae (~euouae@user/euouae)
[06:25:42] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:26:00] <euouae> Hello, a couple of questions: 1) How can I log the constructor of an attr class with Eliot ?
[06:26:29] <euouae> 2) Should I have a single exception class for my program that logs all errors, or should I have separate exception classes for each module?
[06:27:11] <arkanoid> is it possible to wrap ALL functions with a decorator in one show? I'm interested in leveraging new Annotated and get_type_hints() in py 3.9
[06:27:21] <arkanoid> s/show/shot
[06:27:59] *** Joins: zebrag (~chris@user/zebrag)
[06:30:51] *** Quits: y1n-v2 (~y1n@84-115-65-123.wifi.dynamic.surfer.at) (Ping timeout: 276 seconds)
[06:33:03] <Jonno_FTW> in gunicorn, how do I get the username to show up in the access log? I'm using flask and have set os.environ["HTTP_AUTHORIZATION"] in @app.before_request but it still shows "-" in the log
[06:33:42] *** Quits: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net) (Remote host closed the connection)
[06:34:29] *** Joins: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net)
[06:35:01] <euouae> Jonno_FTW, https://github.com/benoitc/gunicorn/blob/master/gunicorn/glogging.py#L460 is the culprit
[06:35:20] <euouae> Jonno_FTW: Unless you're using basic http auth it won't show up
[06:35:31] <Jonno_FTW> euouae: yes I've been looking at this bit of code, here's the line I have: os.environ["HTTP_AUTHORIZATION"] = "basic " + base64.b64encode((session["user"]+":0").encode()).decode('ascii')
[06:36:08] <Jonno_FTW> running it with the debugger, the breakpoint at line 448 doesn't trigger
[06:36:26] <euouae> 448?
[06:36:36] <euouae> So it won't retrieve the env variable?
[06:36:51] <Jonno_FTW> well I wanted to stop it there and see if it actually reaches that code
[06:36:59] <Jonno_FTW> the _get_user function is never called
[06:37:22] <Jonno_FTW> or at least the breakpoint there doesn't stop things
[06:37:33] <euouae> to be fair _get_user() doesn't seem to be called anywhere in unicorns source code
[06:37:50] <Jonno_FTW> it's called on line 286
[06:38:32] *** Joins: r3m (~launch@user/r3m)
[06:38:49] <euouae> how about atoms(), is that called in your debugging?
[06:38:53] <Jonno_FTW> no
[06:39:04] <Jonno_FTW> I might try a different debugger instead of the pycharm one
[06:39:06] <euouae> It looks like a function you have to call
[06:39:17] <euouae> it's the interface of Logger
[06:39:31] <Jonno_FTW> well it's being called because stuff comes out in my access.log
[06:39:48] *** Quits: akk (~akk@75.161.157.26) (Quit: +++)
[06:40:02] <euouae> the access log may have stuff from other functions, not necessarily atoms()
[06:40:16] <euouae> It seems that atoms() calls _get_user() and if you don't see the latter, then the former is probably not called
[06:40:18] *** Joins: Mechanismus (~LabMonkey@2602:306:cf62:e270:7563:2a86:83d4:d48d)
[06:40:38] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[06:44:35] *** Joins: darksun (~darksun@user/darksun)
[06:44:52] <Jonno_FTW> maybe it's because it's running in a separate process or sometihng
[06:45:13] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[06:45:29] *** Joins: dcaro_ (~dcaro@user/dcaro)
[06:46:51] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[06:48:27] *** Quits: dcaro (~dcaro@user/dcaro) (Ping timeout: 245 seconds)
[06:48:29] *** dcaro_ is now known as dcaro
[06:49:22] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[06:49:39] <Jonno_FTW> looks like it's not using that bit of code at all
[06:49:50] *** Quits: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net) (Remote host closed the connection)
[06:50:04] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-bcb1-335a-dddc-7a9b.res6.spectrum.com) (Read error: Connection reset by peer)
[06:50:17] <euouae> hehe
[06:50:35] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:50:35] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (sodium.libera.chat (Nickname regained by services)))
[06:50:35] *** finn_elija is now known as FinnElija
[06:50:59] <Jonno_FTW> I set 'l': '123123' in glogging.py and it never comes to the logs
[06:51:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[06:52:01] <euouae> is unicorn using http? Who uses http?
[06:52:42] *** Quits: georgios (~georgios@2a02:587:a018:e1f8:3de:b0d7:7016:11e4) (Ping timeout: 240 seconds)
[06:53:15] *** Quits: FoodMan (~glucose@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 258 seconds)
[06:54:19] <Jonno_FTW> shouldn't be relevant
[06:56:27] <Jonno_FTW> never mind I was looking at the wrong glogging.py
[06:57:06] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[06:57:17] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[06:57:23] *** Quits: dba (uid502594@id-502594.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[06:58:07] <Jonno_FTW> looks like it only uses the incoming request stuff before it ever hits flask
[06:58:45] *** Joins: LiftLeft (~LiftLeft@154.16.192.57)
[06:59:50] <stealth_> euouae, ?
[07:00:05] <Jonno_FTW> I will have to log username via flask itself
[07:00:08] <euouae> stealth_, ?
[07:00:19] <stealth_> euouae, http ?
[07:01:05] <euouae> stealth_, I don't understand your question
[07:01:59] <stealth_> euouae, you are the one asking the question! what does unicorn using http even mean, what else is it suppose to be using ?
[07:02:23] <Jonno_FTW> gunicorn will server http requests, yes
[07:02:24] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[07:02:30] <arkanoid> I'm trying to make mypy work with new Annotated types (py3.9), but I successfully enable one or the other one. How to get NewType work for the Annotated type? https://mypy-play.net/?mypy=latest&python=3.9&gist=42eb3f6d7a19a05f7de7740fa16dba3f
[07:02:49] <euouae> stealth_, https
[07:03:09] *** Joins: gggp_ (~gggp@123.113.184.133)
[07:03:16] *** Joins: darksun (~darksun@user/darksun)
[07:03:26] <gggp_> qt creator is good
[07:03:26] *** Joins: marduk7 (~marduk@172.58.190.251)
[07:03:36] <stealth_> euouae, you probably have to enable it, https is just an ssl/tls wrapper around http
[07:03:49] <stealth_> like encoder/decoder
[07:05:14] <euouae> Enable it how?
[07:05:54] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[07:06:28] <stealth_> euouae, i dono, i don't use gunicorn. see here they are wrapping it https://github.com/benoitc/gunicorn/blob/master/gunicorn/workers/sync.py#L131
[07:07:12] *** Quits: marduk (~marduk@172.58.187.37) (Ping timeout: 272 seconds)
[07:07:13] *** marduk7 is now known as marduk
[07:07:32] <stealth_> i am just making a point that they support both http/https (it wouldn't make sense for such a library not to)
[07:07:53] <euouae> Yeah and I'm making a point that it's insecure
[07:08:12] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 258 seconds)
[07:08:13] <euouae> You can read the comments on the wrap_socket function and module on ssl package and they make a point that you have to be careful to use it
[07:08:14] <stealth_> what is insecure ?
[07:08:27] <euouae> and gunicorn does not exhibit that level of care
[07:08:50] *** Quits: pizdets (~pizdets@183.182.115.135) (Ping timeout: 245 seconds)
[07:08:58] <stealth_> well that's besides the point, if you think there is a bug in their implementation they you should report it to them
[07:09:00] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[07:09:24] <euouae> OK
[07:09:26] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[07:10:09] *** Quits: dcaro (~dcaro@user/dcaro) (Read error: Connection reset by peer)
[07:10:13] *** Joins: dcaro_ (~dcaro@user/dcaro)
[07:12:00] <euouae> I don't know if that is the case. I didn't know that it used wrap_socket()
[07:12:05] *** Joins: tpefreedom (~tsomers@98-125-225-122.dyn.centurytel.net)
[07:12:23] <tpefreedom> gtk vs qt vs tkinter vs fltk
[07:12:32] *** dcaro_ is now known as dcaro
[07:12:48] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 258 seconds)
[07:13:19] *** Joins: djapo (~archangel@user/djapo)
[07:13:40] <stealth_> euouae, that's how its normally done though!, unless you can point me directly to this "insecure" part
[07:15:18] <euouae> stealth_: That's ignorance on my part then. I was not aware
[07:15:43] <tpefreedom> I'm trying to decide which widget toolkit to learn/use.
[07:15:55] <stealth_> euouae, its cool to learn new things
[07:17:29] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[07:18:34] <InPhase> tpefreedom: Qt via pyside6 gets you a very feature-complete professional grade interface.
[07:18:43] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.3-dev)
[07:19:37] <tpefreedom> I've heard of PyQT but not pyside6.
[07:20:05] *** Joins: r3m (~launch@user/r3m)
[07:20:18] *** Joins: darksun (~darksun@user/darksun)
[07:20:20] <InPhase> tpefreedom: PySide gives you Qt under the LGPL, so that your program does not need to be GPL to use it.
[07:20:30] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 272 seconds)
[07:21:00] <tpefreedom> cool
[07:21:25] <tpefreedom> I'm guessing I'd still put the whole program under the gpl or lgpl anyway.
[07:21:58] <InPhase> It is also the "official" implementation.  PyQt was a third party library written first, but they refused to switch to LGPL when the issues were pointed out.
[07:22:34] <stealth_> euouae, you might be making a point of they should use `SSLContext.wrap_socket` vs `ssl.wrap_socket` that is a legit concern. You could create a PR, so for any python version 3.7+ gunicorn should use `SSLContext.wrap_socket`
[07:23:03] *** Joins: marduk0 (~marduk@172.58.187.145)
[07:23:04] <InPhase> Even if you're doing an open source program, I'd generally recommend PySide6 simply from the perspective of building up skills and habits that you can take with you to work if you need to.  :)
[07:23:10] <euouae> stealth_: I was trying to say something like that based on what I read, but I'm not qualified & couldn't assess it
[07:23:40] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 272 seconds)
[07:24:42] <stealth_> euouae, since you only mentioned `wrap_socket` i didn't make the connection myself, but ya its a valid point and they should improve the code to use wrapper
[07:24:50] <stealth_> new wrapper *
[07:25:49] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 265 seconds)
[07:26:35] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[07:26:50] *** Quits: marduk (~marduk@172.58.190.251) (Ping timeout: 272 seconds)
[07:26:51] *** marduk0 is now known as marduk
[07:27:10] <SnoopJ> euouae, if you are curious about that pygame bug, we figured it out, details here: https://github.com/pygame/pygame/issues/2657
[07:27:49] <euouae> SnoopJ, nice!
[07:28:16] <stealth_> SnoopJ, after all that... it was a pygame bug, eh!
[07:29:38] <euouae> no it was a Debian packaging bug or something
[07:29:51] <euouae> or pinwheels rather
[07:30:12] <SnoopJ> Yea, piwheels builds their 3.9 wheel against bullseye, which has the newer libsdl2
[07:31:06] <euouae> SnoopJ: Did the user build from source?
[07:31:18] <euouae> Because I had told them so and I'm curious if they went like "whoa, works!"
[07:31:35] <stealth_> Debian can be pain whey doing anything outside the norm, why i moved away into rolling release like archlinux
[07:32:07] <SnoopJ> euouae, they resolved it by using 3.7, which is built against buster (and therefore a compatible libsdl2)
[07:32:37] <SnoopJ> but I believe that building from source (including by passing `--no-binary pygame` to pip) should resolve it.
[07:33:00] <euouae> Ah okay. I guess building from source is not straightforward
[07:33:09] *** Joins: jess (~jess@libera/staff/jess)
[07:33:38] <SnoopJ> Well, it is if pip does the driving :)
[07:34:30] <SnoopJ> I'm not entirely sure if pygame 2.0.1 is _supposed_ to be okay with that older libsdl2, though. The release notes mention libsdl2 2.0.14...
[07:35:13] <euouae> Yeah I noticed. Why not use an older version of pygame?
[07:35:45] <stealth_> did you check if libsdl2-dev was in stable/testing repo?
[07:35:50] <SnoopJ> euouae, they'd still get their 3.9 wheel from piwheels, and it would still be built against the libsdl2 provided on bullseye, I think.
[07:36:29] <SnoopJ> piwheels is implicitly assuming that the user's Python came from their distro, I guess
[07:37:03] <stealth_> i ma not a fan of wheels, whats wrong with building from source!
[07:37:58] <SnoopJ> euouae, another resolution of the bug would be to install the libsdl2-2.0-0 package from bullseye (and whatever it depends on)
[07:38:50] <euouae> oh yeah right
[07:39:06] <euouae> wait, but I thought they had the right version of libsdl
[07:39:15] <euouae> Ok they must've not had the right version, I didn't even realize
[07:40:38] *** Joins: darksun (~darksun@user/darksun)
[07:40:52] <SnoopJ> they version they have (libsdl2 2.0.9) seems to be an okay version for pygame 2.0.1, but their wheel was built against 2.0.14 and it wanted symbols that didn't exist until that version
[07:41:02] *** Joins: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks)
[07:41:17] <SnoopJ> Anyway, I saw your suggestion, figured you might like to see how it shook out in the end :)
[07:42:02] <euouae> hehe thanks :)
[07:42:44] *** Joins: monkey_ (~user@190.104.116.134)
[07:43:35] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[07:43:56] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[07:44:43] *** Joins: vlm (~vlm@user/vlm)
[07:45:14] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[07:46:12] *** Joins: pnoud (~pnoud@user/pnoud)
[07:46:28] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[07:47:19] <stealth_> i still think its cause they installed libsdl2-dev from testing and that overrode libsdl2 stable to testing and that messed up everything.
[07:48:34] <stealth_> looking at https://github.com/pygame/pygame#dependencies doesn't say anything about needing to use libsdl2-dev
[07:49:15] <euouae> the dependencies listed are not related to packages in distributions right?
[07:49:18] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[07:50:17] <euouae> pygame has C source code in it (see src_c/) and to compile it you need the headers as well as the libraries
[07:50:35] <stealth_> well that user installed libsdl2-dev cause someone told them to, so ya..
[07:50:46] <euouae> hmm yeah no idea about the testing vs stable
[07:51:08] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 258 seconds)
[07:51:09] <euouae> I asked for the dpkg output but I didn't notice where it came from or what the version was
[07:51:34] *** Joins: upsala (~zcb@185.213.155.160)
[07:52:08] <stealth_> mixing those two will mess things up for sure.
[07:52:43] *** Joins: dgdg (~dg_dg@84.252.92.15)
[07:53:53] *** Joins: pnoud (~pnoud@user/pnoud)
[07:55:21] *** Quits: dg_dg (~dg_dg@84.252.92.7) (Ping timeout: 276 seconds)
[07:55:52] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[07:56:11] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:57:28] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[07:58:36] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:58:40] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:58:53] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:00:35] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:00:53] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:05:31] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[08:06:33] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[08:08:47] *** Quits: cdown (~cdown@89.32.122.5) (Quit: Lost terminal)
[08:10:18] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[08:12:09] *** Quits: Teacup (~teacup@user/teacup) (Quit: Teacup)
[08:12:39] *** Joins: Teacup (~teacup@user/teacup)
[08:16:52] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (Remote host closed the connection)
[08:17:35] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[08:17:56] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[08:25:52] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[08:26:33] *** Quits: ferz (~ferz@93.48.251.229) (Ping timeout: 276 seconds)
[08:33:35] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[08:34:02] *** Joins: hendursaga (~weechat@user/hendursaga)
[08:34:23] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:35:29] *** Joins: vicfred (~vicfred@user/vicfred)
[08:35:51] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[08:35:52] *** Quits: LiftLeft (~LiftLeft@154.16.192.57) (Ping timeout: 272 seconds)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:35] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:38:30] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[08:40:28] *** Joins: kmh (~kmh@p200300df5f07d8004dd03bbe727dd565.dip0.t-ipconnect.de)
[08:40:56] *** Quits: adamts (~Adam@user/mysteryblokhed) (Ping timeout: 272 seconds)
[08:41:09] *** Joins: ferz (~ferz@93.48.251.229)
[08:41:22] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:7537:712:172c:c3bc)
[08:41:44] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[08:42:54] *** Quits: euouae (~euouae@user/euouae) (Quit: Client closed)
[08:47:01] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[08:47:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:47:16] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:7537:712:172c:c3bc) (Ping timeout: 272 seconds)
[08:53:19] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[08:54:18] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Client Quit)
[08:55:00] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:56:26] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[08:57:15] *** Joins: euouae (~euouae@user/euouae)
[09:00:49] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Read error: Connection reset by peer)
[09:02:02] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[09:02:23] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[09:03:03] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[09:05:16] *** Joins: darksun (~darksun@user/darksun)
[09:06:04] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[09:07:25] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[09:08:18] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[09:09:37] *** Joins: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com)
[09:10:47] *** Quits: euouae (~euouae@user/euouae) (Quit: Client closed)
[09:10:52] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 258 seconds)
[09:11:34] *** Joins: reumeth (~reumeth@user/reumeth)
[09:11:47] <whatsupdoc> Anyone know why this code gives KeyError: 3
[09:11:49] <whatsupdoc> Line 9
[09:11:49] <whatsupdoc> https://dpaste.org/tsuw
[09:13:06] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[09:13:31] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:7537:712:172c:c3bc)
[09:13:51] *** Joins: LiftLeft (~LiftLeft@37.19.198.39)
[09:14:05] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 265 seconds)
[09:14:08] <Repiphany> whatsupdoc: You're not checking to see whether `count` has `i` in in properly
[09:15:02] <Repiphany> Line 6 should probably be `if i not in count:`
[09:15:34] <Repiphany> But rather you should be using collections.defaultdict or even just collections.Counter
[09:16:44] <Repiphany> Lines 11-13 also probably aren't doing what you want
[09:16:53] <whatsupdoc> oh shoot
[09:16:57] <whatsupdoc> dumb
[09:17:40] <whatsupdoc> collections.defaultdict? collections.Counter?
[09:18:40] <Repiphany> d = collections.defaultdict(int); d[10] += 1 # d[10] is initialized with 0 when something tries to access that key
[09:18:54] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:7537:712:172c:c3bc) (Ping timeout: 256 seconds)
[09:19:05] <Repiphany> collections.Counter(iterable) does all that work automatically for cases like this
[09:19:56] *** Quits: pnoud (~pnoud@user/pnoud) (Quit: Lost terminal)
[09:20:24] *** Joins: jazzy (~jaziz@2600:380:c145:1176:ccc4:f85a:7d87:128)
[09:20:43] *** Joins: sandeepk (~sandeepk@223.130.30.197)
[09:21:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[09:21:57] *** Quits: dfch (~dfch@user/dfch) (Remote host closed the connection)
[09:24:03] *** Joins: dfch (~dfch@user/dfch)
[09:28:55] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[09:29:23] <whatsupdoc> is there .second()?
[09:29:59] <whatsupdoc> .second like in C++?
[09:30:13] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (Ping timeout: 250 seconds)
[09:30:20] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[09:31:14] *** Joins: stranac (~stranac@195.29.239.126)
[09:31:17] *** Joins: djhankb (~djhankb@208.113.164.68)
[09:34:28] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Remote host closed the connection)
[09:34:41] <KombuchaKip> Can anyone tell me what I'm doing wrong here? I'm intentionally giving download_file() a bad URL to test it. When L40 is hit, an exception is thrown (as it should). The exception should be handled by the user, but not before the finally block runs its cleanup logic. Right on L77, as soon as the fileobj is used in any way, including being compared to None, I get this: `int() argument must be a string, a bytes-like object or a number, not
[09:34:41] <KombuchaKip> 'NoneType'`. This is my short code: https://pastebin.com/mAmZRY3g
[09:37:23] *** Quits: hannibal (hannibal@38.87.162.8) (Ping timeout: 252 seconds)
[09:38:13] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[09:38:29] *** Quits: WarpedAI (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[09:38:35] <stealth_> KombuchaKip, `total_size = int(response.headers.get('content-length', 0))`
[09:39:14] *** Joins: noctavian (~noctavian@gateway/tor-sasl/noctavian)
[09:39:38] * KombuchaKip nods
[09:39:43] <KombuchaKip> stealth_: Thank you.
[09:41:19] *** Joins: Snyp (~rksht@49.207.200.32)
[09:41:54] *** Quits: tpefreedom (~tsomers@98-125-225-122.dyn.centurytel.net) (Quit: good night)
[09:42:15] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:7537:712:172c:c3bc)
[09:44:06] *** Quits: upsala (~zcb@185.213.155.160) (Ping timeout: 252 seconds)
[09:44:24] *** Joins: upsala (~zcb@185.213.155.160)
[09:46:18] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:7537:712:172c:c3bc) (Ping timeout: 240 seconds)
[09:47:57] *** Joins: dvx (~dvx@185.63.97.64)
[09:49:32] *** Joins: JanC_ (~janc@user/janc)
[09:51:42] *** Quits: JanC (~janc@user/janc) (Ping timeout: 276 seconds)
[09:51:51] *** JanC_ is now known as JanC
[10:01:50] *** Joins: fdan (~fdan@192.146.154.3)
[10:01:57] <fdan> "\"asdfghjzx/cvbnmwertyur"\" - i have this
[10:02:11] <fdan> i just want to extract the letters asdfghjzx/cvbnmwertyur
[10:02:25] *** Joins: dude-x (~textual@pool-173-70-158-124.nwrknj.fios.verizon.net)
[10:04:00] <stealth_> fdan, `your_string.replace('"', '')`
[10:04:09] *** Joins: inom (~inom@176.59.99.11)
[10:04:34] <stealth_> fdan, `your_string[1:-1]` works as well
[10:04:50] *** Quits: LiftLeft (~LiftLeft@37.19.198.39) (Ping timeout: 265 seconds)
[10:05:01] <fdan> stealth_ it says SyntaxError: unexpected character after line continuation character
[10:05:13] <fdan> i didnt try for the  replace yet
[10:06:04] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[10:06:04] <stealth_> fdan, well ya it would be a syntax error, why do you have that in the first place ?
[10:07:35] <stealth_> fdan, should it have been "\"asdfghjzx/cvbnmwertyur\"" ?
[10:09:40] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 265 seconds)
[10:09:58] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:7537:712:172c:c3bc)
[10:10:02] <stealth_> fdan, btw, you can write above as '"asdfghjzx/cvbnmwertyur"' no need to manually escape with \
[10:10:33] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 276 seconds)
[10:10:34] *** Quits: EvanCarroll (~ecarroll@c-76-30-158-126.hsd1.tx.comcast.net) (Ping timeout: 240 seconds)
[10:11:07] *** Quits: emika (~emika@83.136.182.27) (Ping timeout: 265 seconds)
[10:11:26] <u4t> <fdan> "\"asdfghjzx/cvbnmwertyur"\" - i have this   << you have "\" at the end instead of \""
[10:11:36] <u4t> there's your syntax error
[10:11:39] *** Joins: Affliction` (affliction@user/affliction)
[10:11:46] *** Joins: emika (~emika@83.136.182.62)
[10:11:53] <fdan> ok sure.. but this is  what i get.. let me check once
[10:12:36] *** Joins: EvanCarroll (~ecarroll@c-76-30-158-126.hsd1.tx.comcast.net)
[10:12:57] *** Quits: Affliction (affliction@user/affliction) (Quit: Read error: Connection reset by beer)
[10:14:10] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:7537:712:172c:c3bc) (Ping timeout: 240 seconds)
[10:14:12] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:14:40] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[10:15:46] *** Quits: EvanCarroll (~ecarroll@c-76-30-158-126.hsd1.tx.comcast.net) (Remote host closed the connection)
[10:17:43] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[10:18:08] *** Joins: darksun (~darksun@user/darksun)
[10:19:01] *** Joins: stranac (~stranac@195.29.239.126)
[10:19:28] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:23:32] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[10:24:24] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:25:02] <whatsupdoc> Why do I need to do //= to divide a number by 10 intead of /=?
[10:25:03] <whatsupdoc> https://dpaste.org/u8Aa
[10:26:16] <stealth_> whatsupdoc, / give you float vs // int ?
[10:27:50] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[10:28:46] <stealth_> hmm maybe i didn't say it right
[10:29:27] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[10:30:12] <stealth_> whatsupdoc, https://bpa.st/ZTDQ
[10:32:16] <whatsupdoc> / can return a float?
[10:32:22] <whatsupdoc> /
[10:32:25] <whatsupdoc> \/\/
[10:32:47] <whatsupdoc>  //
[10:33:02] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[10:33:15] <stealth_> / can, yes, you see it in that example i linked
[10:33:23] <stealth_> "//"
[10:33:58] *** Joins: mike (~mike@116.204.144.25)
[10:34:08] *** Joins: amosbird (~amosbird@13.75.119.182)
[10:34:22] <stealth_> you are either getting whole number with `//` hmm is that the right word, whole number?!
[10:34:23] *** mike is now known as Guest1512
[10:34:24] <amosbird> Hello! How can I remove a line of a string that starts with "INDEX HINT"?
[10:35:15] <stealth_> amosbird, `if my_string.sartswith("INDEX HINT"):  # do something or not!`
[10:35:39] <amosbird> stealth_: a line of a string
[10:35:44] <amosbird> not the string that starts with
[10:35:46] *** Joins: greedom (~greedom@2001:16b8:2ea7:af00:c1d7:12ae:83a2:190d)
[10:36:16] <stealth_> amosbird, are you looping it through a `for` loop?
[10:37:53] <amosbird> stealth_: nope. I'm looking for a regex sub method
[10:38:53] *** Joins: y1n-v2 (~y1n@84-115-65-100.wifi.dynamic.surfer.at)
[10:39:05] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:39:11] <stealth_> amosbird, https://bpa.st/L5ZA
[10:40:17] *** Quits: kostkon (~kostkon@2a02:587:a10c:9c2c:302f:7ec2:7a64:db3f) (Remote host closed the connection)
[10:40:19] *** Joins: kostkon_ (~kostkon@2a02:587:a10c:9c2c:302f:7ec2:7a64:db3f)
[10:41:10] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:7537:712:172c:c3bc)
[10:41:36] *** kostkon_ is now known as kostkon
[10:43:22] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[10:45:42] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:7537:712:172c:c3bc) (Ping timeout: 252 seconds)
[10:45:53] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:30] *** Joins: seednode (~seednode@user/seednode)
[10:47:10] *** Joins: euouae (~euouae@user/euouae)
[10:48:07] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[10:50:41] *** Joins: resmo__ (~resmo@2a00:d420:9:8a00:1948:86ad:3bad:1201)
[10:52:12] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[10:52:19] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:52:21] *** Joins: palasso (~palasso@user/palasso)
[10:53:01] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[10:53:32] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[10:53:34] *** Lord_of_Life_ is now known as Lord_of_Life
[10:53:56] *** Quits: resmo_ (~resmo@135-58-239-77.dyn.cable.fcom.ch) (Ping timeout: 272 seconds)
[10:54:03] *** Quits: Snyp (~rksht@49.207.200.32) (Quit: WeeChat 3.2)
[10:58:31] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[11:00:31] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[11:01:42] *** Joins: stranac (~stranac@195.29.239.126)
[11:02:49] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[11:03:44] *** Joins: emerent_ (~quassel@p200300cd57058c90ba27ebfffed28a59.dip0.t-ipconnect.de)
[11:03:45] *** emerent is now known as Guest8217
[11:03:45] *** emerent_ is now known as emerent
[11:04:04] *** Quits: Guest8217 (~quassel@p200300cd57058ca9ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[11:05:05] *** Joins: stevieh (~skrodzki@83.135.21.194)
[11:07:09] *** Joins: TheRedRipper (~TheRedRip@user/theredripper)
[11:08:09] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[11:08:52] *** Joins: darksun (~darksun@user/darksun)
[11:09:50] *** Joins: pneff (~pneff@2a02:168:fedc:0:e532:5b92:d92d:6754)
[11:10:06] *** Joins: Affliction (affliction@user/affliction)
[11:10:12] *** Quits: Affliction` (affliction@user/affliction) (Quit: Read error: Connection reset by beer)
[11:10:58] *** Quits: poorboy (~poorboy@104.131.46.87) (Read error: Connection reset by peer)
[11:13:18] <amosbird> :)
[11:13:25] *** Joins: poorboy (~poorboy@104.131.46.87)
[11:15:26] *** Joins: manti7 (~manti7@176.10.104.94)
[11:17:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:17:54] <foo> Trying to think through how to design something. Could use another brain. I have a small internal shorturl system. The shorturls have tags. I recently added passwords on shorturls that are private... and shorturl passwords can either be applied to a group of shorturls under a tag or individual shorturls. I figured since we have passwords, minds well tie them to a user and log it... but the issue is, if I have
[11:18:00] <foo> two of the same passwords for two shorturl tags, and two people access two different shorturls under the same tag with the same password, I won't know who is who and thus can't track it. I could force uniqueness (compose key?) on password and shorturl tag, perhaps. Any other suggestions?
[11:18:58] *** Joins: magla (~gelignite@55d4c33c.access.ecotel.net)
[11:21:46] <euouae> foo: why can't you track users based on their browser etc?
[11:22:03] <euouae> and why not have a proper user database?
[11:22:44] <stealth_> foo, cookie/session is normally how to go about it, since its returned to you (server)
[11:23:24] <foo> euouae: well, we do. But with shorturls that have passwords, if I want to keep it simple and just have a password for the shorturl, not sure how to do this. Hmm, I've had a long day and may be missing something
[11:23:54] <foo> stealth_: yeah, we store that access is granted in a session (on the server) when someone accesses a shorturl with correct password. eg. on second access, they're not answered.
[11:24:17] <foo> I'm more trying to think through how I'd log that a password was entered on a shorturl... and create a relationship in the schema. But I can't do that with the password if there are two passwords that are the same
[11:24:30] <foo> eg. how will I know which is which when querying the "passwords" table in the database
[11:24:37] <euouae> hashes
[11:25:34] <Repiphany> salt
[11:25:57] <stealth_> you mean signing
[11:25:59] *** Quits: greedom (~greedom@2001:16b8:2ea7:af00:c1d7:12ae:83a2:190d) (Remote host closed the connection)
[11:26:21] <stealth_> foo, can't you tell the different user by their ip/port/browser, ...
[11:26:40] <foo> I may not be being clear.
[11:26:46] *** Joins: greedom (~greedom@2001:16b8:2ea7:af00:c1d7:12ae:83a2:190d)
[11:27:03] <euouae> It's hard to answer because we don't know how you've implemented your server and what kind of applications it is for
[11:27:20] <euouae> or what the security required is
[11:27:40] <foo> euouae: too vague, not following. I can be more clear: if two people set a password as "password" on a url, and when I search for a url in the database - even if I know the user - how do I ... actually, there's a difference here between users who created the shorturl and viewers.
[11:27:53] <foo> Repiphany: also too vague but appreciate you trying ;)
[11:27:54] <euouae> We need to understand what kind of server it is
[11:28:04] <foo> euouae: python + flask?
[11:28:13] <foo> I'm open to sharing more, still trying to wrap my head around this
[11:28:19] <euouae> Is it intranet or internet?
[11:28:24] <foo> internet
[11:28:29] <stealth_> foo, well you have session_id that keep track of the person that entered the password. doesn't matter how many use the same password
[11:29:22] <euouae> foo: Do you have a user credential database?
[11:29:32] <foo> stealth_: thanks for persisting as I try to communicate this. We have a shorturl table, and a shorturl_log table. I was thinking I'd have a relationship with the shorturl_log table and the password that was entered. But I'm having trouble making that relationship when there can be the same password
[11:30:16] <foo> eg. the password "thisispw" that can be used for shorturls with the tag "my-tag" - if someone enters "thisispw" on two urls that have "my-tag" associated, how will I be able to identify the exact one in the database?
[11:30:40] *** Quits: audio (~audio@2603-8081-1800-00ad-6065-0196-b737-6970.res6.spectrum.com) (Ping timeout: 272 seconds)
[11:30:41] <euouae> don't they enter the url as well?
[11:31:18] *** Quits: stevieh (~skrodzki@83.135.21.194) (Ping timeout: 272 seconds)
[11:31:40] <stealth_> foo, the tag needs to be unique? or else how will you redirect it to wherever its suppose to go? or something needs to be unique.
[11:31:42] <foo> euouae: yup
[11:31:58] <euouae> ok so you have a url, which you can look up in the database. What's the problem?
[11:32:00] <foo> stealth_: we have the shorturl hash, plus a tag and paswords
[11:32:22] <euouae> How can you not have the url itself? How do you receive the request?
[11:32:46] <euouae> are you trying to hide the requested url?
[11:33:17] <foo> euouae: the problem: I look up shorturl hash in database, pull the redirect URL, and with that can be an associated tag. Passwords have a relationship to the tags that shorturls can be tagged with. I'm trying to think through my options for looking up the password for a url and associating it with the new entry that's created in the shorturl log
[11:33:48] <foo> euouae: we do a redirect when someone goes to shorturl.com/some-hash, and before the redirect we prompt for a password
[11:34:45] *** Quits: TheRedRipper (~TheRedRip@user/theredripper) (Quit: WeeChat 3.0)
[11:34:45] <euouae> What's your problem again? You've mentioned 2-3 problems and I'm a bit confused
[11:34:52] *** Quits: MetalSutton (~MetalSutt@101.100.153.131) (Quit: Leaving)
[11:35:16] <foo> euouae: the only problem is being able to properly associate the password, that's associated with tags that it grants access to, with the shorturl log item
[11:35:25] <foo> euouae: appreciate you trying to wrap your head around this
[11:35:30] *** Quits: Cyp (~cyp@192038128058.mbb.telenor.dk) (Read error: Connection reset by peer)
[11:36:03] <euouae> You have a password, you can look it up in the database to find the tags it is related to, and you can bring up the urls that are tagged. What's the problem?
[11:36:07] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[11:37:21] <stealth_> foo, you need to have the tag/hash be unique though
[11:38:16] <foo> euouae: I don't really have this problem so it's possible I'm overthinking it. But, the problem is - I have two passwords that are the same, that are both associated with (say) 10 shorturls that each have tagA, if there's a "password match" on password with a shorturl that has tagA and another with shorturl that has tagB - I won't know the exact one in the database since there are two results
[11:38:33] <foo> stealth_: I think I'd need to force passwords to be unique
[11:38:45] <stealth_> foo, if you have "d.com/abc" redirect to "domain.com/page" so "abc" (hash) in this case is unique
[11:38:46] <foo> That's the easiest fix here that I can think of
[11:38:47] *** Joins: kosh (~kosh@user/kosh)
[11:39:06] <euouae> You're being unclear about the whole thing
[11:39:12] <foo> stealth_: thank you, yes, I'm not talking about hashes. I'm talking about passwords - which are passwords entered on a form *before* someone gets redirected
[11:39:14] <euouae> You have some sort of application in mind that you are not explaining
[11:39:44] <foo> euouae: I spent 12 hours on dev today. It's possible it would make sense for me to go to sleep and pastebin a question tomorrow explaining this
[11:39:50] <euouae> It's not about users entering an URL and a password, because no information is missing. You want to somehow search by password and be a mind-reader on who the user was
[11:40:14] <stealth_> foo, o, so someone types "abc" into for input field, then that directs them to "domain.com/page" ?
[11:40:15] <Repiphany> You're describing a username, not a password
[11:40:19] <foo> euouae / stealth_ - thanks for trying, multiple people don't seem to understand me. I'll get some sleep and pick this up again tomorrow. :)
[11:40:23] *** Joins: y1n-v1 (~y1n@84-115-65-30.wifi.dynamic.surfer.at)
[11:40:26] <foo> stealth_: yes.
[11:40:48] <foo> Repiphany: well, if I had a username AND password when someone tries to access a URL, that'd be easy to match in the database since I have two fields
[11:40:54] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[11:41:02] <foo> I was originally trying to just have a single password on URLs... but that's not specific enough for me to match the exact database record
[11:41:11] <foo> (and link it to the log entry created in the database
[11:41:11] <stealth_> foo, i see why you want the password to be unique, but its not password, you should call it hash , maybe ppl got confused with naming.
[11:41:34] <Repiphany> Salt the password with something unique to what you're actually trying to authenticate for
[11:41:53] <foo> stealth_: we have a few elements here as I see it: a shorturl hash (eg. tinyurl.com/shorturl_hash), the password (a form with password field required for entry before the redirect()
[11:42:04] <foo> and a tag (like a category, shorturls can have multiple tags
[11:42:42] <foo> Repiphany: I could also share, these would be user generated passwords. So two users can make a password "password" and enable them for tags "this-tag"
[11:42:53] <Repiphany> If you're entering a password for short_url, you should be checking something like hash(password + short_url_salt)
[11:43:07] <foo> hmm, I could have the passwords for urls be unique within a user, since the user who created the shorturl is also stored
[11:43:20] *** Quits: y1n-v2 (~y1n@84-115-65-100.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[11:43:58] <stealth_> foo, well then it doesn't matter, you just need to match "hash" and "password" = redirect to actual url
[11:44:39] <foo> stealth_: by 'hash' you mean tinyurl.com/hash or do you mean a separate hash stored for that shorturl record?
[11:44:46] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[11:45:12] <stealth_> foo, you can either create hash or password with signed/salt data to actual url then you know where it should go.
[11:45:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:45:29] <stealth_> foo, you search by actual url that way, but the hash/pass can get really long if you go that way
[11:45:44] <stealth_> foo, maybe you need to have either hash or password to be unique
[11:45:48] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:45:49] <foo> stealth_ / Repiphany - I'm going to get some sleep and pastebin this tomorrow with my database models, I still don't see this working - I'm simply not communicating this well.
[11:46:04] <foo> Really appreciate you all trying to understand! My fault for asking this after such a long day
[11:46:29] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:47:01] <foo> stealth_: hash is unique (myshorturldomain.com/hash), password isn't (but I'm building this from ground up... and I can make it unique, that is a very very easy solution to all of this - then I can easily reference the password in the database and associate it on the log entry)
[11:47:15] <foo> It's possible that's my only option here, I was partly asking here to see if there was anything else I was missing
[11:47:38] <euouae> Do you have a user database?
[11:48:19] <stealth_> foo could also do fixed length signature like "domain.com/page" -> "domain" data used for signing, plus pass + hash that becomes very unique
[11:48:21] <Repiphany> Requiring unique passwords sounds like a bad idea
[11:48:37] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[11:48:52] <euouae> Repiphany: then the db can be poked for password exfiltration
[11:49:08] <foo> euouae: yes
[11:49:29] <foo> stealth_: domain is most often always the same
[11:49:37] <foo> Repiphany: that's why I'm here asking, I don't like that idea :)
[11:50:14] <stealth_> foo, you can do first and last part of the original url
[11:50:14] <Repiphany> If you're entering a password, there should be only one thing you're trying to authenticate for
[11:50:23] <Repiphany> I don't see how you get two tags from one password
[11:50:40] <Repiphany> You're either trying to authenticate for tag 1 or tag 2, not for both at the same time
[11:50:42] *** Quits: alnr1 (~alnr@38.125.204.99) (Ping timeout: 240 seconds)
[11:50:45] <stealth_> foo, also if they are from the same domain why would they use the same hash/tag
[11:51:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[11:52:02] <KirkMcDonald> Authentication is the tuple of (thing being authenticated, password)
[11:52:21] <KirkMcDonald> The former is presumably unique, the latter ought not be.
[11:52:57] *** Joins: Warped (~Warped@user/warped)
[11:54:06] <KirkMcDonald> This concept of "tags" is a wrinkle, and I'm not wholly clear on what that means here.
[11:54:45] <KirkMcDonald> A tag is a set of URLs?
[11:54:51] <foo> KirkMcDonald: think of tags like user generated categories. So a password can be created to grant access to any shorturls in a certain tag (category)
[11:55:10] <foo> stealth_: different destination domains
[11:55:49] <KirkMcDonald> So a URL can have a password, and a URL can be part of a tag, and a tag can have a password, and having the password to either the URL or to the tag grants access to the URL?
[11:56:11] <stealth_> foo, you can do a condition match to see if all 3 condition already exists! then get user to use a different password or something
[11:56:44] <stealth_> KirkMcDonald, unless you are GitHub then both username and password needs to be unique
[11:56:48] <foo> Repiphany: if there are two passwords (passy) that grant access for shorturls with tag "this-tag" and someone enters a password on the url, I will know access is granted but I won't know which exact password matched
[11:57:34] <KirkMcDonald> stealth_: Is this a crack about git hash collisions?
[11:57:44] <foo> stealth_: that's an option, I do like that instead of requiring all passwords be unique. That might be the ansswrr
[11:58:06] <stealth_> KirkMcDonald, not sure, was that about password not being unique?
[11:58:12] <KirkMcDonald> stealth_: No.
[11:58:26] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[11:58:41] <KirkMcDonald> But I see no reason to require that passwords (or, presumably, password hashes) be unique.
[11:58:45] *** Joins: Metalsutton (~Metalsutt@101.100.153.131)
[11:59:06] <Repiphany> hash(password + short_url_salt) or hash(password + short_url_salt + tag_salt)
[11:59:29] *** Parts: euouae (~euouae@user/euouae) ()
[11:59:49] <foo> KirkMcDonald: A shorturl can have a tag, a password can be used to gramt access to shorturls with a tag, and I have a shorturl access log that I wanted to add a relationship to the password. But I won't know which password is used if there are two passwords thst are the same that grant access to the same tag
[11:59:52] <stealth_> KirkMcDonald, well i used some lame password and i got a email from github saying my password wasn't unique and others had it as well!
[11:59:55] <KirkMcDonald> Certainly that's how you'd code it. But I don't see why you'd bother enforcing that in the DB schema, say.
[12:00:21] <Repiphany> Maybe they were doing a password check against haveibeenpwned.com
[12:00:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 272 seconds)
[12:00:31] *** gggp_ is now known as gggp
[12:00:37] <foo> Repiphany: That worrks if passwords aren't user generated.
[12:00:43] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:00:45] <KirkMcDonald> stealth_: Hitting your own password database with a dictionary attack seems fairly sensible to me, really.
[12:01:32] <stealth_> KirkMcDonald, Repiphany well i am not sure what it was, but i had to change my password.
[12:01:33] <foo> KirkMcDonald: Not sure who your "certainty..." comment is geared towards
[12:01:46] <KirkMcDonald> foo: That was in response to Repiphany.
[12:03:39] <KirkMcDonald> foo: I guess I'd need to know what the actual user flow is here. It's not clear to me what the distinguishing factor actually is, if the data you're actually tracking on the backend is otherwise identical.
[12:04:33] *** Joins: LiftLeft (~LiftLeft@154.16.192.67)
[12:04:43] <foo> KirkMcDonald: Really appreciate your time, I'll circle back tomorrow on this with a pastebin and a few models. :)
[12:04:51] <KirkMcDonald> foo: It sounds to me like the question is "to whom does a tag belong?"
[12:05:04] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[12:05:09] <Helmholtz> Is PyGetWindow supported on Ubuntu?
[12:05:30] <KirkMcDonald> foo: Is the identity of a tag merely its name, or some tuple of the name and some other factor?
[12:06:12] <foo> KirkMcDonald: only a name
[12:06:13] <stealth_> tag + unique password (if password was already used by same tag name)
[12:06:45] <KirkMcDonald> But plainly it isn't that, if two users can have the same tag with the same password, but there is a desire to have those represent separate "things" in some sense.
[12:06:54] <foo> stealth_: I think that's the answer.
[12:07:10] <KirkMcDonald> Unless that *is* what is wanted.
[12:07:53] <dob1> does f.readlines() preserve line separator?
[12:07:58] <dob1> I am not sure
[12:08:07] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:388f:daee:859e:da03)
[12:08:22] <stealth_> you mean `\n`? no
[12:08:23] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[12:08:41] <dob1> ah ok
[12:08:42] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:08:48] <stealth_> you can add it back '\n'.join(f.readlines())`
[12:09:27] <KirkMcDonald> It *does* keep the line endings, yes.
[12:09:35] <dob1> it does?
[12:09:42] <KirkMcDonald> This is easy enough to test.
[12:10:13] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[12:10:51] <stealth_> i was thinking of `.splitlines()` my bad, bob1
[12:11:25] *** Joins: rendar (~rendar@user/rendar)
[12:11:51] *** Joins: shad (~shad@user/shad)
[12:12:11] <dob1> ah yes it preserve it
[12:12:16] <dob1> no problem stealth_
[12:12:40] *** Joins: saorge (~saorge@ns378138.ip-5-196-67.eu)
[12:13:06] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:388f:daee:859e:da03) (Ping timeout: 272 seconds)
[12:13:21] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[12:14:57] *** Quits: greedom (~greedom@2001:16b8:2ea7:af00:c1d7:12ae:83a2:190d) (Remote host closed the connection)
[12:15:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:16:48] *** Joins: greedom (~greedom@2001:16b8:2ea7:af00:c1d7:12ae:83a2:190d)
[12:17:03] *** Joins: chele (~chele@user/chele)
[12:17:08] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[12:18:10] *** Quits: pneff (~pneff@2a02:168:fedc:0:e532:5b92:d92d:6754) (Ping timeout: 272 seconds)
[12:18:36] <rendar> does python need a '===' operator or 'is' does the same thing?
[12:18:52] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[12:19:17] <stealth_> there is no ===
[12:20:13] <rendar> stealth_: i know, hence i asked python *needs* a === or not
[12:20:53] <supakeen> What does '===' do?
[12:21:12] <stealth_> rendar, most of the time you are wanting to use `==` in rare cases you can use `is` for `True is True` or `object is object`
[12:21:23] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[12:22:07] <rendar> stealth_: yep, that what i was thinking
[12:23:00] *** Joins: pneff (~pneff@2a02:168:fedc:0:e532:5b92:d92d:6754)
[12:23:38] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 256 seconds)
[12:24:52] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[12:25:46] <srji> hey guys, ive this two functions: time_series_monthly and search, which both calls request_api, is it good practice to make request_api a decorator function? what do you think? https://git.sr.ht/~marcuskammer/stocks_data/tree/master/item/alphavantage.py#L40
[12:28:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:28:18] *** Quits: AlanMD_ (~AlanMD@5-12-8-103.residential.rdsnet.ro) (Ping timeout: 272 seconds)
[12:28:24] <stealth_> srji, those two seems to be doing 2 different things
[12:29:18] <KirkMcDonald> rendar: I would hesitate to compare JavaScript's comparison operators to Python's at all.
[12:29:37] <rendar> KirkMcDonald: uhm, can you elaborate?
[12:30:04] *** Joins: oldguy (~oldguy@90.244.127.122)
[12:30:08] <KirkMcDonald> rendar: Neither is really equivalent to the other.
[12:30:51] *** Joins: VaniaPy (~VaniaPy@46.12.81.49.dsl.dyn.forthnet.gr)
[12:30:53] <rendar> KirkMcDonald: well, `if id(a)==id(b)` then we can say a is really equivalent to b, can't we?
[12:30:54] <KirkMcDonald> rendar: If pressed, I'd say that JS's `===` isn't so different from Python's `==`. But they differ in the details.
[12:31:25] *** Quits: oldguy (~oldguy@90.244.127.122) (Client Quit)
[12:31:36] <dob1> can you help me with a simple regexp? I have no idea why it matches https://paste.debian.net/hidden/ef7bb472/
[12:31:56] <KirkMcDonald> rendar: Maybe. https://bpa.st/TRKA
[12:32:11] *** Joins: yogoyo (~yogoyo@user/yogoyo)
[12:32:35] <KirkMcDonald> dob1: You'll want to escape those pipe characters.
[12:32:40] <rendar> KirkMcDonald: oh, i see
[12:33:03] <gcbirzan> what do cool kids use to parse command line arguments nowadays?
[12:33:06] <KirkMcDonald> rendar: You see why this does what it does?
[12:33:18] <KirkMcDonald> gcbirzan: argparse probably. Though some are into click.
[12:33:48] <dob1> KirkMcDonald, damn you right, thanks
[12:34:42] <Helmholtz> easiest way of executing an external program and getting it stdout?
[12:34:51] <KirkMcDonald> Helmholtz: The subprocess module.
[12:35:54] <rendar> KirkMcDonald: i'd say that object() returns a different instance of a class, to it's id() is different (the pointer to the structure), but they are identical objects so 'is' returns True?
[12:36:05] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:25] <KirkMcDonald> rendar: But `is` returned False.
[12:36:48] <rendar> oh
[12:37:11] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:37:36] <rendar> KirkMcDonald: how this is possible??! https://bpa.st/5XPQ
[12:37:37] <stealth_> rendar, `a.__class__ is b.__class__` will return True
[12:37:37] <KirkMcDonald> rendar: Here, this will either clarify or confuse matters more: https://bpa.st/WIBQ
[12:37:54] <Helmholtz> KirkMcDonald, how to put stdout to a variable in a pythonic way?
[12:38:08] <stealth_> rendar, because they are both using the same class, once you initialize it, they are new objects
[12:38:26] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:38:42] <rendar> stealth_: the thing is that in the line before id() returned a different number, when they are in the same line id seems to be the same
[12:39:19] <KirkMcDonald> Helmholtz: p = subprocess.run(args, capture_output=True); print(p.stdout)
[12:39:31] <rendar> KirkMcDonald: uhm, that's interesting.. why that happens?
[12:39:35] *** jpe__ is now known as sharperguy
[12:40:22] <KirkMcDonald> rendar: Because the Python allocator is a mysterious beast.
[12:40:25] <Helmholtz> KirkMcDonald, nice
[12:40:25] *** Joins: y1n-v2 (~y1n@84-115-64-45.wifi.dynamic.surfer.at)
[12:40:34] <Helmholtz> what is this b''?
[12:40:34] <Helmholtz> is it a bytestream?
[12:40:36] *** Joins: Cyp (~cyp@192038128058.mbb.telenor.dk)
[12:40:40] <KirkMcDonald> rendar: And the id() of an object is only meaningful for so long as that object lives.
[12:40:51] <KirkMcDonald> Helmholtz: It is an object of type bytes.
[12:40:56] <rendar> KirkMcDonald: oh! that's right
[12:41:05] <stealth_> rendar, python is reference based language, since you didn't hold on to reference, python used the same object to create a new object.
[12:41:16] <rendar> yes
[12:41:42] <stealth_> it has lead to many head banging for developers :)
[12:41:57] <rendar> i guess that if i type only 'object()' it prints different ids, because the object will be referred by `_` right?
[12:41:59] <Helmholtz> KirkMcDonald, thanks
[12:42:27] <KirkMcDonald> Helmholtz: If you want a string, you might pass `text=True`, or you might pass an explicit encoding, e.g. with `encoding="utf-8"`.
[12:42:54] *** Quits: y1n-v1 (~y1n@84-115-65-30.wifi.dynamic.surfer.at) (Ping timeout: 256 seconds)
[12:42:54] <rendar> but it doesn't seem the case, how come? https://bpa.st/APNQ
[12:43:01] <KirkMcDonald> rendar: No, _ will refer to the integer object returned by id().
[12:43:07] <Helmholtz> KirkMcDonald, nice
[12:43:13] <Helmholtz> I was decoding at end
[12:43:23] *** Quits: greedom (~greedom@2001:16b8:2ea7:af00:c1d7:12ae:83a2:190d) (Remote host closed the connection)
[12:43:27] <rendar> KirkMcDonald: look, i call only obect() https://bpa.st/APNQ
[12:43:41] <KirkMcDonald> rendar: As I said. The allocator is a mysterious beast. It does as it pleases.
[12:44:02] <stealth_> that's optimization :D
[12:44:02] <KirkMcDonald> This is all an implementation detail.
[12:44:45] <Helmholtz> How to parse info from text like 'axb - c^d' ?
[12:44:49] <Helmholtz> Should I use parse library?
[12:44:50] *** Joins: greedom (~greedom@2001:16b8:2ea7:af00:c1d7:12ae:83a2:190d)
[12:44:53] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[12:45:12] <Helmholtz> like scanf in C
[12:45:32] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[12:45:33] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net)
[12:45:50] <stealth_> you can use `re` or just str.methods
[12:45:56] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:45:57] *** Quits: LiftLeft (~LiftLeft@154.16.192.67) (Ping timeout: 245 seconds)
[12:46:12] <stealth_> Helmholtz, what do you want the output to be?
[12:46:32] <Helmholtz> stealth_, I want to capture a, b, c, d as integers
[12:46:40] <Helmholtz> I think regex for this is not pythonic
[12:47:04] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[12:47:07] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:70b0:588:5bdc:e1fe)
[12:47:07] <KirkMcDonald> Oh, that's a mathematical expression?
[12:47:27] *** Joins: zeenk (~zeenk@2a02:2f04:a211:a800:553b:3cb0:5ea1:7e83)
[12:47:55] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[12:47:57] <Helmholtz> KirkMcDonald, yeah but very simple...guaranteed abcd is integer
[12:48:00] <rendar> what is the best asyncio solution to have the first 2 lines of the console as a fixed status, then the bottomest line to read console keyboards (with asyncio) and then all the other lines used to print strings...
[12:48:03] *** Joins: marduk5 (~marduk@172.58.190.121)
[12:48:04] *** Quits: dvx (~dvx@185.63.97.64) (Read error: Connection reset by peer)
[12:48:25] <Helmholtz> and guaranteed that x and - and ^ are printed
[12:48:30] *** Quits: securethemews (~securethe@2a00:23c4:1e9b:2f00::1) (Quit: Leaving)
[12:48:46] *** Joins: securethemews (~securethe@2a00:23c4:1e9b:2f00::1)
[12:49:18] <KirkMcDonald> Helmholtz: If the string is always of that exact form, then a regular expression seems reasonable.
[12:49:37] *** Quits: gggp (~gggp@123.113.184.133) (Read error: Connection reset by peer)
[12:49:58] *** Joins: marduk4 (~marduk@172.58.187.145)
[12:49:59] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[12:50:00] *** Quits: marduk (~marduk@172.58.187.145) (Read error: Connection reset by peer)
[12:50:00] *** marduk4 is now known as marduk
[12:50:05] <dob1> after fd, path = mkstemp() at the end I call os.close(fd)   do I need to remove it too?
[12:50:29] <stealth_> Helmholtz, also stuff like `x` = `*` and `^` == `**` in python
[12:50:49] <srji> ty stealth_
[12:50:52] <shlomif> dob1: remove the file or the variable?
[12:51:03] <dob1> shlomif, the temp file
[12:51:39] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:70b0:588:5bdc:e1fe) (Ping timeout: 252 seconds)
[12:51:41] <KirkMcDonald> dob1: Yes, mkstemp() requires that you delete the file. You might look at the tempfile module.
[12:51:48] <Helmholtz> I think its better to split the text with these delimeters: x, -, ^, \n
[12:51:50] <Helmholtz> How to do this?
[12:51:52] <shlomif> dob1: explicitly "unlink"ing it should not hurt
[12:51:55] *** Joins: sharperguy_ (~sharpergu@2001:1438:4010:3101:10a::3133)
[12:52:18] <dob1> shlomif, without the close ?
[12:52:26] <KirkMcDonald> Helmholtz: What you are describing is called tokenization, or lexical analysis.
[12:52:31] <KirkMcDonald> Or just lexing.
[12:52:34] <stealth_> Helmholtz, is this just a hobby or a important project?
[12:52:42] <Helmholtz> simple project
[12:52:44] <Helmholtz> not imporant
[12:53:08] *** Joins: Vonter (~Vonter@user/vonter)
[12:53:11] <Helmholtz> re.split('x-^\n', text)
[12:53:26] <stealth_> Helmholtz, ok, well python isn't the best language for parsing text like that, so ya `re` is better in this case.
[12:53:47] <Helmholtz> Doesn't this use multiple delimeters?
[12:54:16] *** Quits: marduk5 (~marduk@172.58.190.121) (Ping timeout: 272 seconds)
[12:54:54] *** Quits: sharperguy (~sharpergu@2001:16b8:5c29:e100:c1b2:e4db:be5f:14bd) (Ping timeout: 272 seconds)
[12:54:55] <Helmholtz> nvm fixed it
[12:55:06] <Helmholtz> should have used | between delimeter chars
[12:55:10] <KirkMcDonald> Helmholtz: e.g. https://bpa.st/OZQQ
[12:55:12] <Helmholtz> also + should have been espaced
[12:55:42] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[12:56:25] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[12:56:40] <shlomif> dob1: no - after a close
[12:57:12] <KirkMcDonald> dob1: (Er, whoops, mkstemp is in the tempfile module; for some reason I was thinking it was in os.)
[13:00:14] *** Parts: VaniaPy (~VaniaPy@46.12.81.49.dsl.dyn.forthnet.gr) ()
[13:00:18] *** Joins: enkodr (~sa@2001:818:e6b1:d100:61c2:387c:d0d4:4fb7)
[13:00:46] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[13:00:58] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Quit: Client closed)
[13:01:12] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[13:03:19] *** Quits: y1n-v2 (~y1n@84-115-64-45.wifi.dynamic.surfer.at) (Quit: Leaving)
[13:03:54] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:05:04] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::791f)
[13:06:45] <Metalsutton> SnoopJ, are you here? I fixed it, but I have no idea why
[13:07:25] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[13:09:31] *** Quits: greedom (~greedom@2001:16b8:2ea7:af00:c1d7:12ae:83a2:190d) (Remote host closed the connection)
[13:10:46] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:11:14] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 256 seconds)
[13:14:30] *** Joins: almarwazi (~almarwazi@49.36.191.203)
[13:15:20] *** Joins: P1ro (~quassel@181.208.115.174)
[13:16:08] <almarwazi> How can i generate random token per session using python?
[13:16:28] <supakeen> You use something from the `secrets` module.
[13:17:30] <almarwazi> Can you please give me an example?
[13:18:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[13:18:23] *** Quits: enkodr (~sa@2001:818:e6b1:d100:61c2:387c:d0d4:4fb7) (Quit: WeeChat 3.2)
[13:18:36] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 252 seconds)
[13:18:40] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[13:18:55] *** Joins: enkodr (~enkodr@2001:818:e6b1:d100:61c2:387c:d0d4:4fb7)
[13:19:22] <stealth_> almarwazi, we talking session for web?
[13:20:13] <almarwazi> stealth_: Yes. session token for web.
[13:20:53] <stealth_> almarwazi, what are you using to manage that session? those modules/framework normally provide such things
[13:23:01] <almarwazi> I'm using django & rest API
[13:23:28] *** Quits: avu (~jan@user/avu) (Quit: avu)
[13:23:42] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[13:23:59] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[13:24:59] *** Joins: avu (~jan@user/avu)
[13:25:15] <stealth_> almarwazi, i don't really use djnago but something like `s.session_key`? https://docs.djangoproject.com/en/3.2/topics/http/sessions/#using-sessions-out-of-views
[13:25:37] *** Joins: iflema (~ian@user/iflema)
[13:25:47] *** Joins: FoodMan (~glucose@143.244.39.21)
[13:26:55] <supakeen> When using DRF it's a tadbit weird to have sessions at all.
[13:26:58] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:28:34] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[13:29:14] <stealth_> cookie + session is key part of authentication
[13:30:00] <almarwazi> supakeen: Why do you think so?
[13:30:44] *** Joins: reumeth (~reumeth@user/reumeth)
[13:33:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[13:34:10] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[13:37:34] <supakeen> Because it's the Django *REST* Framework, you don't want to tack on between-requests state on something like that aside from perhaps authentication.
[13:37:41] <supakeen> Which you'd likely not do through a session.
[13:40:31] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[13:41:11] *** Joins: entuland (~entuland@user/entuland)
[13:41:17] *** Joins: Julian (~tos9@python/site-packages/Julian)
[13:41:47] *** Quits: lalilulelo (~lalilulel@2804:14d:7680:8ed4:b9af:fce0:8189:2d74) (Quit: Leaving)
[13:43:32] <stealth_> ?
[13:44:08] <reumeth> Where can I find a high quality Python codebase using Sqlite without an ORM? I'm curious as to how such codebases are structured
[13:44:48] <wyre> how can I know when was added bitstring to bitarray? https://github.com/ilanschnell/bitarray
[13:45:00] <wyre> apparently this is not able for 1.2.1 version 😥
[13:45:52] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Remote host closed the connection)
[13:46:10] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[13:46:25] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Quit: Client closed)
[13:46:33] *** Joins: mickey (~user@user/mickey)
[13:46:39] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[13:46:50] *** Quits: almarwazi (~almarwazi@49.36.191.203) (Quit: Lost terminal)
[13:47:13] <wyre> at least how can I see what classes are available in the namespace of a particular package?
[13:47:37] <iomari891> greetings, how to create a python link that updates when python is updated?
[13:47:54] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:70b0:588:5bdc:e1fe)
[13:49:08] <stealth_> wyre, whatever version you have installed, look in the code in "site-packages/project-name" folder
[13:50:20] <reumeth> ... for instance how to they do migrations, do they convert database content to a class instance, or just handle the data raw (like a dict or something)
[13:50:44] *** Joins: mei (~mei@user/mei)
[13:51:07] <stealth_> reumeth, i am assuming you have looked at https://docs.python.org/3/library/sqlite3.html
[13:51:36] <stealth_> iomari891, what python link?
[13:51:51] <reumeth> stealth_: Yeah, but I'm looking for a more architectural POW. Like how such projects are structured
[13:51:52] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[13:51:54] <iomari891> stealth_: /usr/bin/python3
[13:52:08] <reumeth> stealth_: POV*
[13:52:09] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[13:52:29] <iomari891> sorry, ~/.config/nvim/env/bin/python3
[13:53:03] <iomari891> I want ot to always point to the latest update of python3
[13:53:06] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:70b0:588:5bdc:e1fe) (Ping timeout: 272 seconds)
[13:53:12] <stealth_> reumeth, whatever project you are thinking of look at its source code?
[13:53:18] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:53:30] *** Quits: ATAD (~ATAD@user/atad) (Ping timeout: 240 seconds)
[13:53:38] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[13:54:11] <reumeth> That's kind of my question. Any (not too small) Python-project using SQlite without ORM will do
[13:55:22] *** Joins: grandfso (~quassel@199.232.237.35.bc.googleusercontent.com)
[13:56:14] <stealth_> reumeth, i don't know any off hand, ppl probably just write function/class to do a bunch of commonly done tasks.
[13:56:38] *** Joins: upsala (~zcb@185.213.155.160)
[13:56:54] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[13:58:05] <reumeth> stealth_: Yeah, but that is kind of obvious though. I'm looking for more specific architectures/solutions
[14:00:51] *** Quits: dude-x (~textual@pool-173-70-158-124.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[14:01:02] *** Joins: dude-x (~textual@pool-173-70-158-124.nwrknj.fios.verizon.net)
[14:01:48] <stealth_> reumeth, if you are talking about sqlite, most orm's just get the raw dict/list and build class on top of that
[14:02:47] <stealth_> some database give binary data that orm then can create class on top of that.
[14:03:20] <reumeth> That might be handy to know how they do it, but I'm trying to avoid ending up writing my own ORM.
[14:03:42] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:70b0:588:5bdc:e1fe)
[14:03:57] <Helmholtz> How to time a function elegantly?
[14:03:58] <Helmholtz> inside python
[14:04:36] <stealth_> its easy of use vs complexity. like having to type SQL every time and then parsing data for each execute you do
[14:04:36] *** Joins: michaelis (~michaelis@193.183.209.17)
[14:06:28] <reumeth> stealth_: I know what an ORM is and the trade-offs, I'm just looking for how successful projects handle that trade-off
[14:07:07] <reumeth> That is the trade-off of not using an ORM, because I _really_ hate ORMs
[14:07:27] <stealth_> Helmholtz, time a function?
[14:07:49] <Helmholtz> stealth_, elapsed time
[14:07:54] <jinsun> Helmholtz: if you are using ipython or jupyter there is %timeit https://ipython.readthedocs.io/en/stable/interactive/magics.html#magic-timeit, otherwise you can use https://docs.python.org/3/library/timeit.html
[14:07:56] <Helmholtz> I use t1=time.time()
[14:07:56] <stealth_> reumeth, ya, i don't really like the idea of ORM either
[14:07:57] <Helmholtz> and the diff
[14:08:02] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:70b0:588:5bdc:e1fe) (Ping timeout: 245 seconds)
[14:08:17] <arkanoid> I'm trying to make mypy work with new Annotated types (py3.9), but I successfully enable one or the other one. How to get NewType work for the Annotated type? https://mypy-play.net/?mypy=latest&python=3.9&gist=42eb3f6d7a19a05f7de7740fa16dba3f
[14:08:24] <bjs> Helmholtz: that sounds fine
[14:08:32] <bjs> Helmholtz: what would be more "elegant" to you?
[14:08:52] <Helmholtz> bjs, it needs two line and can't be commented out easily
[14:08:54] <Helmholtz> in bash I use `time function`
[14:09:09] <stealth_> Helmholtz, you trying to profile your code by any chance?
[14:09:23] <Helmholtz> basically I have a time-constraint application. I want to know what part take long
[14:09:25] <Helmholtz> yes
[14:09:25] <bjs> Helmholtz: usually people either want to time everything (a profiler) or nothing
[14:09:33] <bjs> Helmholtz: it's odd to want to time in detail just 1 call.
[14:09:37] <stealth_> Helmholtz, https://github.com/joerick/pyinstrument/
[14:09:40] <Helmholtz> so is there a nice profiler ?
[14:10:15] <stealth_> Helmholtz, `python3 -m pyinstrument --html your_code.py` something like that
[14:10:20] <bjs> Helmholtz: Python comes with one builtin https://docs.python.org/3/library/profile.html#instant-user-s-manual
[14:10:27] <bjs> there are other third-party ones that do fancier things
[14:10:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:12:05] <Helmholtz> thanks
[14:12:17] <Helmholtz> and should I refactor my code into functions?
[14:12:22] <Helmholtz> or does it accept lines?
[14:12:25] <Helmholtz> lines of code
[14:13:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:13:26] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Quit: Client closed)
[14:13:41] *** Joins: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net)
[14:14:42] *** Quits: mei (~mei@user/mei) (Ping timeout: 272 seconds)
[14:14:47] *** dece_ is now known as dece
[14:14:57] <stealth_> Helmholtz, who you asking
[14:15:58] <Helmholtz> stealth_, both of you suggested same? pyinstrument is not the builtin one?
[14:16:41] <stealth_> Helmholtz, you have to install pyinstrument using pip
[14:17:38] <stealth_> Helmholtz, `python3 -m pip install --user pyinstrument`
[14:18:06] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:18:41] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:19:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[14:19:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:19:30] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:70b0:588:5bdc:e1fe)
[14:21:36] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[14:22:19] *** Quits: foobaz212 (~foobaz212@51.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[14:23:54] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:70b0:588:5bdc:e1fe) (Ping timeout: 240 seconds)
[14:24:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:25:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:28:54] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:30:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[14:30:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:33:10] *** Joins: anandprabhu (~anandprab@94.202.243.198)
[14:33:58] *** Joins: ubert (~Thunderbi@91.141.47.113.wireless.dyn.drei.com)
[14:35:18] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:70b0:588:5bdc:e1fe)
[14:35:40] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 256 seconds)
[14:35:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[14:36:21] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[14:36:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:37:26] *** Quits: emika (~emika@83.136.182.62) (Ping timeout: 265 seconds)
[14:37:52] *** Joins: emika (~emika@185.207.249.3)
[14:38:56] <Julian> .2
[14:39:54] *** Quits: pneff (~pneff@2a02:168:fedc:0:e532:5b92:d92d:6754) (Ping timeout: 240 seconds)
[14:40:38] *** Joins: georgios (~georgios@2a02:587:a00e:25da:84ea:e649:a8a1:6cf5)
[14:40:46] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:70b0:588:5bdc:e1fe) (Ping timeout: 256 seconds)
[14:40:52] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[14:41:49] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[14:42:17] *** Joins: dez (uid92154@user/dez)
[14:42:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[14:42:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:48:33] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[14:48:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:49:32] <Helmholtz> is there a channel for openCV?
[14:51:24] *** Joins: oldguy (~oldguy@90.244.127.122)
[14:52:29] *** Joins: pneff (~pneff@2a02:168:fedc:0:e532:5b92:d92d:6754)
[14:53:42] <rendar> https://bpa.st/2EGA -- why this simple snippet never stops?! i clearly specified to stop the loop after 3 seconds, but it goes forever :(
[14:53:43] <rendar> any clue?
[14:54:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[14:54:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:56:06] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[14:56:08] <bjs> rendar: where did you specify when to stop?
[14:56:35] <rendar> loop.call_later(...
[14:57:30] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Client Quit)
[14:57:33] <bjs> rendar: asyncio.run creates its own loop though
[14:57:44] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[14:57:50] <rendar> bjs: oh.. a new event loop?
[14:57:59] <bjs> yes
[14:58:26] <rendar> uhm
[14:58:34] <bjs> rendar: uhm?
[14:59:29] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Client Quit)
[14:59:40] <rendar> ok, now it works https://bpa.st/HNXA
[14:59:43] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[14:59:45] <rendar> of course i get errors
[14:59:58] <rendar> RuntimeError: Event loop stopped before Future completed.
[15:00:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:00:34] <bjs> rendar: yes,  maybe what you really wanted to do was to spawn a task (With create_task) then cancel() it
[15:01:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:01:16] <rendar> bjs: nope, i'm just testing async functions here
[15:01:34] *** Quits: jpic (~jpic@82.142.6.158) (Ping timeout: 272 seconds)
[15:01:41] <rendar> bjs: is there a way to gracefully cancel that `while True:` not using tasks?
[15:02:07] <bjs> rendar: why not using tasks?  and obviously no
[15:02:14] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Quit: Leaving)
[15:02:19] <rendar> bjs: for learning purposes
[15:02:34] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[15:02:48] *** Joins: jpic (~jpic@bernadette.objectif-libre.com)
[15:02:50] <bjs> rendar: but a task is "an async def you cancel" and you're asking "can you cancel an async def that is not an async def you can cancel" and the answer is no
[15:03:46] <rendar> uhm, i see..
[15:04:26] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[15:04:47] *** Joins: hendursa1 (~weechat@user/hendursaga)
[15:04:57] <stealth_> you talking about canceling the loop?
[15:05:18] <rendar> stealth_: cancelling the processing loop, and exit gracefully
[15:06:00] <stealth_> rendar, suppose you could throw exception into it, catch it and exit that way
[15:06:03] <rendar> bjs: the thing is.. i learnt that Task is something that asyncio framework implements, it's not a python builtin, so.. how is that possible that something written in python code can be cancelled and builtin async def functions can't?!
[15:06:05] <bjs> rendar: it's the exiting gracefully part that's hard to do,  making things a task and then cancelling them gives you a chance to do some work as the task closure propagates
[15:06:37] <bjs> rendar: how is it possible that httpx can do HTTP requests but the `math` library can't?!  the math library is built in!
[15:06:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:06:42] <rendar> stealth_: yeah i get this now, https://bpa.st/IRDA but still doesn't work
[15:06:42] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:07:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:07:10] <rendar> bjs: ahahahah ok
[15:07:17] <bjs> rendar: async defs don't really have a concept of "cancellation", it's entirely a concept built ontop of async frameworks like asyncio
[15:07:27] <rendar> bjs: but one thing is "hard to do", another thing is "impossible to do"
[15:07:56] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:cdf3:4e03:729d:9360)
[15:08:28] <bjs> rendar: an async def is basically like a generator, and asyncio keeps track of all the generators and can throw exceptions into them to communicate (e.g. to cancel)
[15:08:52] <bjs> rendar: that's all cancellation is,  but to do it manually is basically just re-implementing all of asyncio's Task machinery
[15:09:16] <bjs> so if you want to do it manually, open asyncio's source and copy/paste the Task class ;)
[15:09:53] <rendar> bjs: but i want that for learning purposes! i don't want to reimplement the wheel
[15:09:57] <rendar> of course i'll use Tasks
[15:10:06] *** Joins: kosh (~kosh@user/kosh)
[15:10:13] <rendar> but i want to understand what underpins Tasks
[15:10:30] <bjs> rendar: i mean it's just one of those async def generators and a Future
[15:10:43] <bjs> (or rather because of classes and inheritance, it *is* a Future)
[15:11:09] <rendar> wait one second!! i did it! i gracefully cancelled tasks https://bpa.st/BXNA
[15:11:52] <bjs> rendar: that's one way (although you dont need all the asyncio.CancelledError stuff there
[15:12:10] <bjs> rendar: task.cancel() is another way
[15:12:19] <rendar> well
[15:12:23] <bjs> well?
[15:12:58] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:cdf3:4e03:729d:9360) (Ping timeout: 272 seconds)
[15:13:16] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[15:13:18] *** Quits: EGH (~EGH@185.25.195.104) (Quit: ZNC - https://znc.in)
[15:14:37] <rendar> loop.stop() is not the way to halt asyncio
[15:14:53] <rendar> what is the proper way to halt asyncio, so it will send CancelledError to everything?
[15:15:33] <stealth_> rendar, could add an event CANCEL and have it shut everything down that way
[15:16:22] <rendar> stealth_: nope, i wish to stop asyncio's run()
[15:16:30] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[15:16:35] <rendar> which in turn will send CancelledError expcetion to everything's running
[15:16:43] <bjs> rendar: https://docs.python.org/3/library/asyncio-task.html#asyncio.all_tasks
[15:16:54] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[15:16:59] <stealth_> rendar, raising can exception can do that as well :p
[15:17:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:18:26] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[15:18:29] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[15:18:30] *** Quits: whatsupdoc (uid509081@id-509081.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[15:18:32] *** Parts: ferz (~ferz@93.48.251.229) ()
[15:18:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:20:08] <bjs> rendar: you can just loop over all tasks and call .cancel;  but really the best way is to propagate the cancellation down normally. To create a task and cancel it
[15:20:26] <bjs> rendar: in the real world there are almost no scenarios where just "stop everything" can ever be done safely automatically
[15:20:36] *** Joins: c10l (~c10l@89.34.167.207)
[15:20:42] *** Joins: EGH (~EGH@185.25.195.104)
[15:20:54] <bjs> there will always have to be careful shutdown of parts of the system written manually to ensure consistency
[15:20:59] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[15:21:12] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 272 seconds)
[15:21:37] <rendar> ok , this is what i wanted to achieve https://bpa.st/JGHQ
[15:22:13] <rendar> bjs: i know, but this is not real world code, it's just testing
[15:22:51] <bjs> rendar: yeah but the thing is with these tiny test programs things can be awkward to write because asyncio doesn't really expose the operation you want;  and it's not always clear what you're trying to test exactly
[15:22:57] <bjs> like if it was just a timeout you wanted you could've said
[15:23:12] <bjs> it looked like a test you were trying to get to kill everything :)
[15:23:16] <rendar> :)
[15:23:41] <stealth_> rendar, o ttl, you are not really canceling, more like that task it done.
[15:23:43] <rendar> bjs: well.. the wait_for() basically does what i wanted to do: after some seconds, close everything
[15:23:44] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:cdf3:4e03:729d:9360)
[15:23:44] <stealth_> is done*
[15:24:18] <rendar> stealth_: huh? that task has an infinite loop, it receives cancellation exception and it breaks the loop then
[15:24:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 276 seconds)
[15:24:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:24:52] <bjs> rendar: not everything. wait_for(f, 3) creates a Task, then after 3 seconds calls task.cancel()  ( sound familiar ?)
[15:25:12] <rendar> yeah, i see
[15:25:12] <stealth_> rendar, you can't really use something like `while active` for more then 1 task right?
[15:25:17] <bjs> so it's only cancelling that thing
[15:25:20] <bjs> stealth_: why not?
[15:25:25] <rendar> stealth_: you can
[15:25:37] <rendar> stealth_: that's the purpose of coroutines
[15:25:38] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[15:25:55] <stealth_> hmm
[15:25:57] <bjs> although the `active` here is not needed now you have wait_for
[15:26:25] <rendar> bjs: which in turn, the Task object sends a CancelledError to it's internal coroutine, right?
[15:26:30] <stealth_> wont canceling 1 task cancel others as well, if you have multiple tasks
[15:26:41] <rendar> stealth_: nope
[15:26:45] <bjs> stealth_: it depends on what you mean by "others"
[15:26:59] <bjs> stealth_: if I cancel Task A, it's not going to start picking random other unrelated tasks and cancelling them too
[15:27:21] <stealth_> well `active` is global state
[15:27:22] <bjs> but if Task A is waiting for other tasks,  then the cancellation might be "propagated"
[15:27:42] <bjs> stealth_: `active` isn't anything to do with cancellation or tasks or asyncio, it's just a boolean variable in that code
[15:27:45] *** Quits: enkodr (~enkodr@2001:818:e6b1:d100:61c2:387c:d0d4:4fb7) (Remote host closed the connection)
[15:27:46] <stealth_> i am assuming multiple tasks would be code at same time
[15:28:07] <bjs> obviously any code that reads `active` will see the value of active because it's just a global variable
[15:28:11] <bjs> and is shared between all tasks
[15:28:24] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:cdf3:4e03:729d:9360) (Ping timeout: 276 seconds)
[15:28:31] <stealth_> ya
[15:28:52] <stealth_> but ya now that `.wait_for` is in place `active` isn't needed
[15:31:00] *** Joins: thiras (~thiras@user/thiras)
[15:31:07] <bjs> rendar: you also not don't need to catch CancelledError everywhere btw, it'll just propagate up like normal
[15:32:29] <rendar> yeah
[15:32:34] <rendar> well, now there is a strange thing
[15:32:36] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[15:33:02] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[15:33:30] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[15:33:30] <rendar> https://bpa.st/YV2Q -- now that i have added asyncio.gather() i get errors
[15:33:40] <rendar> when there wasn't any gather() it worked gracefully!
[15:34:04] *** Joins: giga84 (~giga84@171.78.150.91)
[15:34:39] <giga84> I am a beginner programmer, do you know any tutorials that teach how to make a simple godot game in python
[15:35:05] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[15:35:21] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[15:36:29] <rendar> bjs: if both asyncio.wait_for() and asyncio.gather() uses Task under the hoods, why i get those errors now?
[15:38:34] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[15:40:31] *** Joins: darksun (~darksun@user/darksun)
[15:40:56] <bjs> rendar: there was no error, just a warning
[15:40:56] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[15:40:57] *** Quits: shad (~shad@user/shad) (Ping timeout: 245 seconds)
[15:41:05] *** Joins: Luyin (~daisy@user/luyin)
[15:41:10] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[15:41:16] <giga84> anyone
[15:41:18] <bjs> I'm not even sure how the warning happened
[15:41:26] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:cdf3:4e03:729d:9360)
[15:41:41] <giga84> I am a beginner programmer, do you know any tutorials that teach how to make a simple godot game in python
[15:42:11] <bjs> giga84: you just asked that :)
[15:42:19] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[15:43:25] <giga84> yes i asked here and godotengine :)
[15:43:38] <gordonjcp> giga84: godot engine?
[15:43:44] <gordonjcp> giga84: you'll probably have to wait a bit for that
[15:44:07] <bjs> giga84: does godot even let you use Python?
[15:44:28] <giga84> i don't know that is why i am asking you!
[15:44:43] <giga84> i am currently learning with pygame
[15:44:46] <bjs> giga84: i can't see anything on google about it
[15:44:57] <giga84> but godot looks better
[15:45:19] <stealth_> bjs, https://en.wikipedia.org/wiki/Godot_(game_engine)
[15:45:25] <bjs> stealth_: ... about using Python with it
[15:45:41] <giga84> yes after googling only i came here
[15:46:00] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:cdf3:4e03:729d:9360) (Ping timeout: 252 seconds)
[15:46:47] <rendar> bjs: uhm, i see, how can i suppress that warning, or satisfy it?
[15:46:56] <bjs> rendar: afaik the wait_for should cancel the gather, which should propagate the cancel to the two child tasks (if they're still running) then wait_for would consume the cancellation and emit a timeout error
[15:47:03] <bjs> so why you get a warning I'm not even sure
[15:47:08] <bjs> rendar: what version of Python are you using exactly?
[15:47:26] <stealth_> giga84, bjs seems like they created their own scripting language GDScript which is like python!
[15:47:26] <rendar> bjs: 3.7.3
[15:48:01] <giga84> ok thanks will wait when python support is added
[15:48:26] *** Quits: sandeepk (~sandeepk@223.130.30.197) (Ping timeout: 272 seconds)
[15:48:29] <stealth_> rendar, i don't get that error, i m on 3.10 beta4
[15:49:22] <rendar> stealth_: uhm, i see, yeah with python 3.9.0 i don't get that either
[15:49:25] <rendar> but..why?!
[15:49:33] <rendar> is that a silly warning that has been suppressed?
[15:49:33] <stealth_> giga84, https://docs.godotengine.org/en/stable/getting_started/scripting/gdscript/index.html
[15:50:57] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:51:02] <giga84> ok thanks
[15:51:18] *** Quits: giga84 (~giga84@171.78.150.91) (Quit: Client closed)
[15:51:31] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:51:49] *** Joins: y1n (~y1n@84-115-64-126.wifi.dynamic.surfer.at)
[15:52:09] <Helmholtz> There isn't an openCV chat, right?
[15:52:13] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[15:52:32] <stealth_> rendar, that feature might have been new for older version, now it has matured and accounted for asyncio to not raise that warning
[15:52:33] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[15:53:12] <hogarius> giga84: https://github.com/touilleMan/godot-python
[15:54:09] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[15:54:24] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 276 seconds)
[15:57:11] *** Quits: georgios (~georgios@2a02:587:a00e:25da:84ea:e649:a8a1:6cf5) (Ping timeout: 250 seconds)
[16:00:29] <stealth_> rendar, what python version where you trying that `wait_for` again on?
[16:00:54] <m1dnight> Hi all. Quick question about locks in python 3.9.6. The docs say they are not thread safe. I don't really understand what that would mean. Aren't lock meant to be shared accross threads?
[16:01:21] <stealth_> rendar, looks like it was added in 3.7 https://docs.python.org/3/library/asyncio-task.html#asyncio.wait_for
[16:01:28] <nedbat> m1dnight: can you link us to the docs?
[16:01:31] <m1dnight> https://exbin.call-cc.be/InstateUpas
[16:01:33] <m1dnight> This is my MWED
[16:01:36] <m1dnight> sec, nedbat
[16:01:45] <m1dnight> https://docs.python.org/3/library/asyncio-sync.html
[16:01:51] <m1dnight> "Implements a mutex lock for asyncio tasks. Not thread-safe."
[16:02:42] <nedbat> m1dnight: since you are using async, you don't have to worry about thread safety
[16:03:13] *** Joins: shad (~shad@user/shad)
[16:07:04] <Yhg1s> m1dnight: those locks are for coroutines, not threads.
[16:08:12] *** Quits: inom (~inom@176.59.99.11) (Read error: Connection reset by peer)
[16:08:18] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[16:08:52] *** Joins: ice9 (~ice9@user/ice9)
[16:10:38] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 252 seconds)
[16:11:24] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 2.3)
[16:12:28] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: upekkha)
[16:12:38] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[16:12:45] <stealth_> these are not the locks you are looking for ...
[16:14:07] *** Joins: shad (~shad@user/shad)
[16:14:52] *** Quits: Flux (~Fluxx@user/fluxx) (Remote host closed the connection)
[16:19:06] <bjs> m1dnight: does the example you show not behave as you'd expect with the lock?
[16:19:36] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:19:45] *** Joins: reumeth (~reumeth@user/reumeth)
[16:20:22] *** Joins: varaindemian (~varaindem@86.124.78.162)
[16:21:21] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:21:28] *** Quits: dre (~dre@2001:8003:c932:c301:9993:49c7:7392:9609) (Remote host closed the connection)
[16:22:50] <m1dnight> bjs:it does, it does. I was just wondering what it actually means for a lock to not be thread safe
[16:22:50] <sveinse> .
[16:23:02] <m1dnight> well, asyncio uses coroutines, right?
[16:23:09] <bjs> m1dnight: yes, it uses coroutines not threads
[16:23:19] <m1dnight> oooh, riiiight :)
[16:23:21] <bjs> it's "coroutine-safe" if you want to say
[16:23:32] <m1dnight> Yeah, I missed that part. Sorry about that!
[16:23:35] <m1dnight> Thanks for the patience!
[16:24:19] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[16:24:47] <sveinse> It seems after some debugging that once you enter a os.scandir() context, it won't actually create new class instances until after the context has exited. I suppose this is expected. Is this documented anywhere?
[16:25:36] *** Joins: georgios (~georgios@2a02:587:a00e:25da:84ea:e649:a8a1:6cf5)
[16:26:42] *** Joins: Ergo^ (~ergo@91.238.59.144)
[16:27:03] *** Joins: inom (~inom@176.59.97.154)
[16:27:49] *** Quits: inom (~inom@176.59.97.154) (Read error: Connection reset by peer)
[16:28:11] *** Joins: gggp (~gggp@123.113.188.14)
[16:28:22] *** Joins: LiftLeft (~LiftLeft@37.19.198.36)
[16:28:35] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[16:29:34] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[16:29:48] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[16:30:04] *** Quits: shailangsa (~shailangs@host86-186-196-233.range86-186.btcentralplus.com) (Ping timeout: 268 seconds)
[16:30:47] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[16:32:46] *** Quits: ubert (~Thunderbi@91.141.47.113.wireless.dyn.drei.com) (Ping timeout: 272 seconds)
[16:33:16] <sveinse> No, it gotta be a bug in my code... Never mind
[16:35:04] *** Joins: sandeepk (~sandeepk@223.130.30.197)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:39:48] *** Joins: andika (~andika@subs47-116-206-43-100.three.co.id)
[16:40:18] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[16:42:16] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 272 seconds)
[16:42:52] *** Joins: dhrv (~dhrv@user/dhrv)
[16:45:22] *** Quits: andika (~andika@subs47-116-206-43-100.three.co.id) (Remote host closed the connection)
[16:45:37] *** Joins: Deadly_Alive (Deadly_Ali@user/deadly-alive/x-7001497)
[16:47:02] <Helmholtz> my very simple openCV (circle detector) takes 100ms...Is it normal?
[16:47:08] <Helmholtz> I want <10ms solutoin
[16:47:16] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:cdf3:4e03:729d:9360)
[16:47:20] <Helmholtz> is python the bottleneck here?
[16:47:21] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:47:22] <dhrv> has anyone solved the block problem? I am looking for it's solutions
[16:48:33] *** Quits: Metalsutton (~Metalsutt@101.100.153.131) (Ping timeout: 256 seconds)
[16:49:29] <jochum> dhrv: just joined want to me to read the backlog or can you tell me more?
[16:49:52] *** Quits: gggp (~gggp@123.113.188.14) (Ping timeout: 272 seconds)
[16:49:56] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:50:26] <dhrv> umm, sure
[16:50:32] <dhrv> it is big problem tho
[16:50:47] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 252 seconds)
[16:51:05] <dhrv> You are given a string S consisting of letters 'a' and/or 'b'. A block is a consecutive fragment of S composed of the same letters and surrounded by different letters or string endings. For example, S="abbabbaaa" has five blocks: "a", "bb", "a", "bb" and "aaa".What is the minimum number of additional letters needed to obtain a string containing blocks of equal lengths? Letters can be added at the beginning, between two existing letters, or at the end of the string.
[16:51:11] *** Joins: stevieh (~skrodzki@46.183.103.8)
[16:51:49] *** Joins: frost (~frost@59.71.241.179)
[16:51:52] *** Joins: y1n-v1 (~y1n@84-115-64-243.wifi.dynamic.surfer.at)
[16:51:53] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:cdf3:4e03:729d:9360) (Ping timeout: 252 seconds)
[16:51:56] <dhrv> jochum: entire problem https://bpa.st/7S5Q
[16:53:48] <jochum> dhrv: i look
[16:53:49] *** Quits: goepsilongo (~chacho@2603-7000-ab00-62ed-0000-0000-0000-0bd0.res6.spectrum.com) (Quit: Konversation terminated!)
[16:53:58] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[16:54:12] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[16:54:18] *** Quits: y1n (~y1n@84-115-64-126.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[16:54:23] <dhrv> In the example, it were "babaa"**
[16:54:34] *** Joins: d3sync (~d3sync@77.49.118.37.dsl.dyn.forthnet.gr)
[16:54:42] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[16:56:18] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:56:31] <jochum> dhrv: want me to write it or wanna write on your own while I show you how?
[16:56:38] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[16:56:56] *** Quits: oldguy (~oldguy@90.244.127.122) (Read error: Connection reset by peer)
[16:57:15] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[16:57:16] *** Quits: AsenM (~AsenM@78.90.248.234) (Remote host closed the connection)
[16:57:34] *** Joins: AsenM (~AsenM@78.90.248.234)
[16:59:28] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[17:02:07] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:c50d:e168:3f25:ee18)
[17:02:32] *** Quits: AsenM (~AsenM@78.90.248.234) (Ping timeout: 272 seconds)
[17:02:48] *** Quits: Guest1512 (~mike@116.204.144.25) (Quit: WeeChat 1.9.1)
[17:03:43] *** Joins: inom (~inom@31.173.85.180)
[17:05:06] *** Joins: gstaniak (~gstaniak@162.249.116.2)
[17:06:15] *** Joins: CaraOster (~Guest12@103.22.143.28)
[17:06:20] <CaraOster> Hi
[17:06:28] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[17:06:34] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 2.3)
[17:06:37] <CaraOster> i have a script that is saving data as TXT need it to save as CSV i tried to edit but it is not working properly
[17:06:55] <CaraOster> tried saving as csv it saves all data in single row
[17:07:11] *** Joins: zeden (~zeden@user/zeden)
[17:07:54] <GinFuyou> And what is the problem with that?
[17:08:15] <CaraOster> the data gets mixed and cannot be used
[17:09:12] <Repiphany> You need to write newlines explicitly
[17:09:37] <CaraOster> i did
[17:09:41] <CaraOster> then it gets error
[17:10:01] *** Joins: shad (~shad@user/shad)
[17:10:05] <CaraOster> been looking for the solution over a month now finally found a way today but this is the last issue
[17:10:35] *** Joins: adamts (~Adam@user/mysteryblokhed)
[17:11:10] *** Quits: magla (~gelignite@55d4c33c.access.ecotel.net) (Quit: Stay safe!)
[17:11:20] *** Joins: puzzled (~puzzled@83-85-211-81.cable.dynamic.v4.ziggo.nl)
[17:11:53] <pathos> CaraOster: Are you using python's csv library? https://docs.python.org/3/library/csv.html . Using `writerow` or `writerows` there will give you a valid CSV
[17:12:21] <CaraOster> yes i am using writerow
[17:12:51] <Yhg1s> CaraOster: you'll have to show us your code, the input and the output.
[17:12:59] *** Joins: upsala (~zcb@185.213.155.160)
[17:13:06] *** Joins: foozle (~foozle@2001-b011-c001-1a6c-4fe8-0e32-b955-cf18.dynamic-ip6.hinet.net)
[17:13:21] <CaraOster> from telethon import TelegramClient
[17:13:21] <CaraOster> from telethon.tl.functions.messages import GetDialogsRequest
[17:13:22] <CaraOster> from telethon.tl.types import InputPeerEmpty, InputPeerChannel, InputPeerUser
[17:13:22] <CaraOster> from telethon.errors.rpcerrorlist import (PeerFloodError, UserNotMutualContactError ,
[17:13:23] *** resmo__ is now known as resmo
[17:13:23] *** Quits: resmo (~resmo@2a00:d420:9:8a00:1948:86ad:3bad:1201) (Remote host closed the connection)
[17:13:23] <CaraOster>                                           UserPrivacyRestrictedError, UserChannelsTooMuchError,
[17:13:23] <CaraOster>                                           UserBotError, InputUserDeactivatedError)
[17:13:24] <CaraOster> from telethon.tl.functions.channels import InviteToChannelRequest
[17:13:24] <CaraOster> import time, os, sys, json
[17:13:25] *** Joins: ExeciN (~ExeciN@user/nicexe)
[17:13:25] <CaraOster> wt = (
[17:13:25] <CaraOster>     """
[17:13:26] <CaraOster>   [[ye]]*   )                              (
[17:13:26] <CaraOster> [[re]]` )  /(    )        (      )         )\    )
[17:13:27] <CaraOster>  [[ye]]( )(_))( /(   (    )\    (      (  ((_)( /(
[17:13:27] <CaraOster> [[re]](_(_()) )(_))  )\ )((_)   )\  '  )\  _  )(_))
[17:13:28] <CaraOster> [[gr]]|_   _|((_)_  _(_/( (_) _((_))  ((_)| |((_)_
[17:13:28] <CaraOster>   [[gr]]| |  / _` || ' \))| || '  \()/ _ \| |/ _` |
[17:13:29] <CaraOster>   |_|  \__,_||_||_| |_||_|_|_| \___/|_|\__,_|
[17:13:29] <CaraOster>   Unidentified Cyber Security Team [[re]][erfan4lx][[ye]]
[17:13:29] <jochum> wtf
[17:13:31] <Yhg1s> CaraOster: don't paste here.
[17:13:34] *** ChanServ sets mode: +o Yhg1s
[17:13:38] *** Joins: resmo__ (~resmo@2a00:d420:9:8a00:7ed6:d67:ab0:267a)
[17:13:41] *** Yhg1s sets mode: -o Yhg1s
[17:13:41] <CaraOster>     clear = lambda:os.system('clear')
[17:13:41] <CaraOster> elif clearType == 'c':
[17:13:42] <CaraOster>     clear = lambda:os.system('cls')
[17:13:42] <CaraOster> else:
[17:13:43] <CaraOster>     print('Invalid input!!!')
[17:13:43] <CaraOster>     sys.exit()
[17:13:44] <CaraOster> if sys.version_info[0] < 3:
[17:13:44] *** resmo__ is now known as resmo
[17:13:44] <CaraOster>     telet = lambda :os.system('pip install -U telethon')
[17:13:45] <CaraOster> elif sys.version_info[0] >= 3:
[17:13:45] <CaraOster>     telet = lambda :os.system('pip3 install -U telethon')
[17:13:45] *** ChanServ sets mode: +o Yhg1s
[17:13:46] <CaraOster> telet()
[17:13:46] *** Quits: jazzy (~jaziz@2600:380:c145:1176:ccc4:f85a:7d87:128) (Ping timeout: 256 seconds)
[17:13:46] <CaraOster> time.sleep(1)
[17:13:47] <CaraOster> clear()
[17:13:47] <CaraOster> if os.path.isfile('erfan4lx_log.txt'):
[17:13:48] *** CaraOster was kicked by Yhg1s (CaraOster)
[17:13:49] <jochum> !ops
[17:13:56] *** Yhg1s sets mode: -o Yhg1s
[17:13:58] *** Joins: Melantha (~pyon@user/pyon)
[17:14:01] *** Quits: resmo (~resmo@2a00:d420:9:8a00:7ed6:d67:ab0:267a) (Client Quit)
[17:14:10] *** Joins: resmo (~resmo@2a00:d420:9:8a00:d0f0:55aa:f075:e468)
[17:14:26] *** Quits: georgios (~georgios@2a02:587:a00e:25da:84ea:e649:a8a1:6cf5) (Ping timeout: 252 seconds)
[17:14:49] <sveinse> Yikes. I wonder how long that file really is.... :o
[17:15:22] <Deadly_Alive> why did you have to kick him for?
[17:15:28] *** Quits: jdmark (~jdmark@67.8.137.130) (Read error: Connection reset by peer)
[17:15:30] <Deadly_Alive> i wanted to see more code of his
[17:15:42] <Yhg1s> Deadly_Alive: because it comes in at two lines a second
[17:15:47] <pathos> Is there a client that will automatically convert the lines into separate messages, or were they copy pasting line by line?
[17:15:51] <Yhg1s> Deadly_Alive: IRC is terrible for pasting. That's why we have pastebins.
[17:15:59] <Yhg1s> pathos: most clients do that, yes.
[17:16:30] *** Joins: CaraOsterson (~Guest66@103.22.143.28)
[17:16:34] <CaraOsterson> Hi
[17:16:53] <CaraOsterson> sorry don't know what happened after i pasted my script
[17:16:56] <Yhg1s> CaraOsterson: please us a pastebin instead of pasting into the channel. See the topic.
[17:17:14] <Yhg1s> CaraOsterson: IRC rate-limits lines, so your script came in (partially) at two lines per second. IRC is not good for pasting.
[17:17:47] <CaraOsterson> should i paste in topic?
[17:18:02] <Yhg1s> CaraOsterson: no, you should read the channel topic, in particular the "Don't paste" bit.
[17:18:17] *** Joins: shailangsa (~shailangs@host86-186-196-233.range86-186.btcentralplus.com)
[17:18:19] <CaraOsterson> oh sorry new to this
[17:18:37] <CaraOsterson> where do i find paste bin?
[17:18:54] <Yhg1s> CaraOsterson: have you considered reading the topic? It has a link right there.
[17:20:20] <CaraOsterson> https://bpa.st/5VGQ
[17:20:49] <Yhg1s> CaraOsterson: this code doesn't try to write a CSV file.
[17:21:10] <CaraOsterson> yes it is original i tried changing txt to CSV
[17:21:16] <CaraOsterson> also used UTF-8
[17:21:24] <Yhg1s> CaraOsterson: okay, so show us that code.
[17:22:13] <CaraOsterson> https://bpa.st/UAZQ
[17:22:18] *** Quits: LiftLeft (~LiftLeft@37.19.198.36) (Ping timeout: 258 seconds)
[17:22:56] <Yhg1s> CaraOsterson: that's still not writing CSV data, it's just changing the name of the file. If you want to write CSV data, you have to use the csv module instead of the json module. And you need to do more than just replace 'import json' with 'import csv'.
[17:22:59] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[17:23:13] *** Quits: qk1z (~qk1z@110-175-249-154.tpgi.com.au) (Ping timeout: 265 seconds)
[17:23:25] *** Joins: heco (~redrum@user/redrum88)
[17:24:15] *** Quits: inom (~inom@31.173.85.180) (Quit: Leaving.)
[17:24:24] <sveinse> CaraOsterson: A little tips: Your main is an coroutine (async def), so you shouldn't really to time.sleep() in it. Rather use `await asyncio.sleep()`. That way you don't lock the event loop and prevent anything going on concurrently to stop while waiting.
[17:24:38] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[17:24:52] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[17:24:56] *** Quits: ExeciN (~ExeciN@user/nicexe) (Quit: Ping timeout (120 seconds))
[17:25:04] <sveinse> But I suspect you're not there quite yet
[17:25:09] *** Joins: ExeciN (~ExeciN@user/nicexe)
[17:26:01] *** Quits: stevieh (~skrodzki@46.183.103.8) (Ping timeout: 250 seconds)
[17:26:47] <CaraOsterson> i need it to save each data in separate column eg. Name,  Username, UID
[17:26:58] <supakeen> I think the "Unidentified Cyber Security Team", "Vortex Cyber Security Team", and "M4nifest0 Cyber Security Team", only used the coro because the library it uses requires it.
[17:26:59] <pathos> CaraOsterson: Looks like in your case, using python's `csv.DictWriter` will be the easiest to use. Something like https://bpa.st/G2UA
[17:27:44] <supakeen> And since I have to be a debby downer: why are you gathering this information?
[17:28:03] *** Quits: Alexer (~alexer@alexer.net) (Ping timeout: 258 seconds)
[17:28:19] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:28:52] <CaraOsterson> to remove users in future and since telegram allows to change username you cannot recognise user without ID and that is why you need to export upon joining
[17:30:03] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[17:30:16] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[17:31:23] *** Quits: ExeciN (~ExeciN@user/nicexe) (Quit: Ping timeout (120 seconds))
[17:31:36] *** Joins: ExeciN (~ExeciN@user/nicexe)
[17:31:51] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[17:33:40] <CaraOsterson> https://bpa.st/VX7A tried this pathos giving error
[17:34:31] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[17:34:40] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[17:35:30] *** Joins: trace1918 (~trace1918@94-137-125-182.customers.ownit.se)
[17:36:06] *** Joins: bulletsquid (~bulletsqu@user/bulletsquid)
[17:36:50] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[17:37:41] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[17:39:04] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[17:40:24] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[17:40:44] *** Joins: Alexer (~alexer@alexer.net)
[17:42:10] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 246 seconds)
[17:42:26] *** Joins: ExeciN (~ExeciN@user/nicexe)
[17:42:55] *** Quits: gstaniak (~gstaniak@162.249.116.2) (Ping timeout: 250 seconds)
[17:43:04] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 272 seconds)
[17:43:22] *** Joins: anon16_ (~anon16_@user/anon16)
[17:44:14] *** Joins: vsantana (~Thunderbi@fttx-177136148172.usr.predialnet.com.br)
[17:44:25] *** Joins: tungki (~tngk@subs30-116-206-14-0.three.co.id)
[17:45:26] <Helmholtz> anyone know numpy and PIL here? https://dpaste.com/7YD35ZY7B
[17:45:46] <Helmholtz> I assume this snippet gives me the coordinates of an object with goalcolor in an image
[17:46:03] <Helmholtz> But it doesn't . Some of the coordinates in indices are way off
[17:50:17] *** Quits: frost (~frost@59.71.241.179) (Quit: Ping timeout (120 seconds))
[17:50:25] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[17:50:47] *** Parts: Deadly_Alive (Deadly_Ali@user/deadly-alive/x-7001497) ()
[17:51:15] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:51:32] *** Joins: y1n-v2 (~y1n@84-115-64-187.wifi.dynamic.surfer.at)
[17:51:47] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[17:52:01] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[17:52:52] *** Joins: stevieh (~skrodzki@tmo-080-123.customers.d1-online.com)
[17:53:39] *** Joins: rany (~rany@user/rany)
[17:54:11] *** Quits: y1n-v1 (~y1n@84-115-64-243.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[17:54:53] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 258 seconds)
[17:55:21] *** Joins: timkofu (~timkofu@user/timkofu)
[17:55:23] <timkofu> Hi
[17:55:36] <CaraOsterson> hey
[17:55:44] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[17:55:45] *** Joins: ATAD (~ATAD@user/atad)
[17:56:27] *** Joins: PdimH (~pdimh@user/pdimh)
[17:57:00] *** Quits: trace1918 (~trace1918@94-137-125-182.customers.ownit.se) (Ping timeout: 272 seconds)
[17:58:33] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 276 seconds)
[17:58:54] *** Quits: tungki (~tngk@subs30-116-206-14-0.three.co.id) (Ping timeout: 272 seconds)
[17:58:58] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[18:06:31] *** Joins: frost (~frost@59.71.241.179)
[18:07:30] *** Quits: anandprabhu (~anandprab@94.202.243.198) (Quit: Leaving)
[18:08:22] *** Quits: y1n-v2 (~y1n@84-115-64-187.wifi.dynamic.surfer.at) (Quit: Leaving)
[18:09:42] *** Joins: y1n (~y1n@84-115-64-187.wifi.dynamic.surfer.at)
[18:10:01] *** Quits: CaraOsterson (~Guest66@103.22.143.28) (Quit: Client closed)
[18:10:23] *** Quits: frost (~frost@59.71.241.179) (Client Quit)
[18:10:26] *** Joins: nyah (~nyah@90.221.186.180)
[18:11:44] *** Joins: y3k (~Thunderbi@user/y3k)
[18:12:43] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:13:28] *** Quits: stevieh (~skrodzki@tmo-080-123.customers.d1-online.com) (Ping timeout: 272 seconds)
[18:14:16] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[18:15:07] *** Joins: rany_ (~rany@user/rany)
[18:15:32] *** Quits: rany (~rany@user/rany) (Ping timeout: 256 seconds)
[18:18:25] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:19:24] *** Parts: mawk (mawk@wireguard/contributor/mawk) (Leaving)
[18:19:35] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:19:47] *** Joins: mawk (mawk@wireguard/contributor/mawk)
[18:20:34] *** Joins: uuair (~quassel@2400:8902::f03c:92ff:fefb:21fe)
[18:20:34] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:20:56] <madprops> is there a shortuct to do t += 1 without having to first set t as = 0 ?
[18:21:09] <Julian> madprops: Nope.
[18:21:18] <Julian> Manual counting is often unnecessary though.
[18:21:26] <Julian> Usually you want a for loop.
[18:21:45] *** Joins: Pandadub (~Barones@2804:7f3:8986:c347:a0a7:cf77:2eec:3619)
[18:21:58] *** Quits: y3k (~Thunderbi@user/y3k) (Quit: y3k)
[18:23:49] *** Joins: y3k (~Thunderbi@user/y3k)
[18:24:31] *** Joins: TomyWork (~TomyLobo@p200300e80f133c00edca32a9512e1858.dip0.t-ipconnect.de)
[18:24:33] <TomyWork> hi
[18:24:35] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[18:25:07] *** Quits: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[18:25:18] <TomyWork> is there a way to generate getters/setters in python, like attr_accessor in ruby?
[18:25:22] <y3k> TomyWork: o/
[18:26:02] <y3k> TomyWork: don't know too much Ruby, can you explain a bit  how `attr_accessor` works? Sounds like `getattr`
[18:27:03] <jochum> TomyWork: theres a __getattr__ and __setattr__ per object, when you override it you can do lots of magic with it
[18:27:33] <TomyWork> attr_accessor, when run at class scope, generates getter and setter functions for that class. For instance "attr_accessor :query" would generate getters/setters for @query
[18:27:45] <bjs> TomyWork: maybe you want @property ?
[18:27:51] <jochum> sounds a like
[18:28:25] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:28:29] <TomyWork> bjs, that's kinda the reverse :D
[18:28:31] <bjs> TomyWork: see https://docs.python.org/3/library/functions.html#property  see the paragraph and example starting with "A property object has getter, setter, and deleter methods usable as decorators" for usage
[18:28:33] <bjs> TomyWork: reverse?
[18:29:26] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:29:35] <TomyWork> writing down half a dozen pairs of function that are structurally identical seems too verbose
[18:29:38] <bjs> TomyWork: maybe I didn't understand the line you gave about Ruby then,  what is the purpose of Ruby's attr_accessor?
[18:29:52] <jochum> TomyWork: then look at setattr and getattr
[18:30:39] <TomyWork> jochum, would that allow me to do object.setQuery(...) in the end?
[18:30:43] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:30:46] <bjs> TomyWork: well of course you can write a function that produces structurally the same property objects... but I feel like I must've misunderstood something
[18:30:51] <bjs> TomyWork: what is setQuery(...) ?
[18:31:02] *** Joins: jazzy (~jaziz@2600:380:c145:1176:ccc4:f85a:7d87:128)
[18:31:10] <bjs> TomyWork: ... why do you want setters/getters at all? Can't you just go object.query = ... and print(obj.query) ?
[18:31:14] <bjs> what will your setter/getter do?
[18:31:17] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[18:31:23] <jochum> TomyWork: to be clear, explicit is better than implicit, your IDE will love when you write that dozen
[18:31:38] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-e058-2cd1-f59d-84bf.res6.spectrum.com)
[18:31:38] <TomyWork> i dont use an ide
[18:31:38] *** Quits: uuair (~quassel@2400:8902::f03c:92ff:fefb:21fe) (Changing host)
[18:31:38] *** Joins: uuair (~quassel@user/uuair)
[18:32:03] *** Joins: VimVim (~VimVim@85.184.185.242)
[18:32:50] <jochum> TomyWork: pastebin some code you dont want to type 100 times and we help you with that
[18:33:05] *** Quits: sandeepk (~sandeepk@223.130.30.197) (Ping timeout: 252 seconds)
[18:33:12] <bjs> TomyWork: I'm still not sure what you want these getter/setters to do, so it's hard to tell you what Python code to write to make it do what you want
[18:33:22] <TomyWork> For other dynamically typed languages, I haven't found IDEs to be particularly useful. It's always a bunch of heuristics that might or might not work
[18:34:16] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 265 seconds)
[18:34:21] <TomyWork> so basically the pythonic way is to just not have getters and setters but just have the attributes public?
[18:34:29] <grym> TomyWork: there's no private at all, so yes
[18:34:35] <TomyWork> well that doesn't help me. i have an interface to fulfill :)
[18:34:44] <grym> typing.Protcol!
[18:34:46] <TomyWork> probably have to write it all out then
[18:34:50] <grym> https://www.python.org/dev/peps/pep-0544/#defining-a-protocol
[18:34:52] <grym> e.g.
[18:35:00] <bjs> TomyWork: if your setter/getter just sets and gets a private attribute
[18:35:07] <bjs> TomyWork: how is that different to it just being a public attribute?
[18:35:59] <TomyWork> bjs, like i said, it has to conform to X.setQuery(Y)
[18:36:03] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:36:04] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[18:36:24] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:36:25] <grym> "let's write java in python, by fiat!"
[18:36:29] <grym> sorry dude
[18:36:32] <grym> sounds unpleasant
[18:36:43] <TomyWork> it's actually C++, I believe
[18:36:51] <bjs> TomyWork: that's a weird interface for a Python library, so there's not anything built-in to help.
[18:36:57] <TomyWork> ok
[18:37:13] <bjs> Could probably write some functions that can generate the set/get functions for you if they're very dumb
[18:37:27] *** uuair is now known as uuair_m
[18:37:42] <TomyWork> grym, ooooh, statically typed python? sounds nice
[18:38:08] *** Quits: FoodMan (~glucose@143.244.39.21) (Ping timeout: 265 seconds)
[18:38:09] <grym> TomyWork: not at all, but structural subtyping is very nice!
[18:38:21] <bjs> TomyWork: if you do a lot of this dynamic generation of dumb methods then I'm not surprised you found IDEs don't work so well ;)
[18:38:58] <grym> TomyWork: from the little i've used it, i have found it to be a much more natural fit than abcs (which more or less lie), zope.interface, or the like
[18:38:59] *** Quits: d3sync (~d3sync@77.49.118.37.dsl.dyn.forthnet.gr) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[18:39:28] *** Joins: twobitsprite (~isaac.fre@cpe-173-95-153-183.nc.res.rr.com)
[18:39:30] <grym> bjs: when i was in c# land professionally, there was/is a little niche shop whose product did what we're discussing here -- in the AOT pass of the compiler
[18:39:32] *** uuair_m is now known as uuair
[18:39:47] *** Joins: d3sync- (~d3sync@77.49.118.37.dsl.dyn.forthnet.gr)
[18:39:51] <grym> for INotifyPropertyChanged, which was otherwise this _massive_ amount of boilerplate copypasta
[18:40:13] <grym> (it lets you do something like "when x.foo changes, check x.bar and x.baz too and do $stuff)
[18:40:20] <bjs> grym: it's one of the nice things of Python that you can do all of that stuff just by writing some Python functions
[18:40:35] <bjs> a decorator and some setattr calls (or using descriptors if applicable)
[18:40:37] <grym> instead of what are more or less compiler macros? :D
[18:40:50] <bjs> grym: macros suck
[18:41:05] <grym> (https://www.postsharp.net/ was the tool)
[18:41:29] <grym> bjs: tfw you spend enough time in emacs s.t. you think "the keyboard thing, or the other kind...?"
[18:41:32] <grym> :D
[18:41:45] <bjs> grym: the sad thing is when they're basically the same thing
[18:41:50] <grym> right?
[18:42:00] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[18:44:48] *** Joins: darksun (~darksun@user/darksun)
[18:45:58] *** Joins: varaindemian (~varaindem@86.124.78.162)
[18:46:04] *** Joins: vsantana1 (~Thunderbi@2804:214:829f:90cb:e099:bfb1:282a:3746)
[18:47:21] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:48:18] *** Quits: vsantana (~Thunderbi@fttx-177136148172.usr.predialnet.com.br) (Ping timeout: 272 seconds)
[18:48:19] *** vsantana1 is now known as vsantana
[18:49:38] *** rany_ is now known as rany
[18:49:39] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[18:50:53] *** Quits: dhrv (~dhrv@user/dhrv) (Remote host closed the connection)
[18:51:56] *** Joins: Obo (~roberto@70.pool90-171-81.dynamic.orange.es)
[18:54:18] *** Quits: y1n (~y1n@84-115-64-187.wifi.dynamic.surfer.at) (Ping timeout: 258 seconds)
[18:55:56] *** Quits: nyah (~nyah@90.221.186.180) (Quit: leaving)
[18:57:14] *** Joins: nyah (~nyah@90.221.186.180)
[18:57:29] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[18:57:45] *** Joins: vsantana1 (~Thunderbi@fttx-177136148221.usr.predialnet.com.br)
[18:59:49] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:01:21] *** Quits: vsantana (~Thunderbi@2804:214:829f:90cb:e099:bfb1:282a:3746) (Ping timeout: 250 seconds)
[19:01:21] *** vsantana1 is now known as vsantana
[19:01:26] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[19:01:44] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:01:47] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[19:02:09] *** Joins: fcjsx (~fcjsx@2800:a4:826:9d00:da29:fdfa:73c4:a2ad)
[19:02:16] *** Joins: audio (~audio@2603-8081-1800-00ad-fc9e-4a92-a17f-6cc3.res6.spectrum.com)
[19:02:23] *** Quits: fcjsx (~fcjsx@2800:a4:826:9d00:da29:fdfa:73c4:a2ad) (Remote host closed the connection)
[19:03:26] *** Joins: akk (~akk@75.161.157.26)
[19:04:00] *** Joins: emika3 (~emika@83.136.182.78)
[19:06:40] *** Quits: emika (~emika@185.207.249.3) (Ping timeout: 272 seconds)
[19:06:41] *** emika3 is now known as emika
[19:06:48] *** Joins: y1n (~y1n@84-115-64-117.wifi.dynamic.surfer.at)
[19:09:14] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[19:09:18] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[19:11:05] *** Joins: Guest43 (~Guest43@bzq-84-110-62-22.cablep.bezeqint.net)
[19:11:47] <Guest43> Hi, I saw several comments regarding the usage of absolute\relative imports, Will be glad to hear here what is the most recommended and why?
[19:12:32] <bjs> Guest43: what did the comments say
[19:13:39] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:14:02] <Guest43> That originally relative was not recommended, but after the some changes on python 3.* it's not longer not recommended. That absolute is more readable (Not sure if I agree) and relative allow you to refactor (move) code in same package without import code changes.
[19:15:13] <hexnewbie> The changes in 3.x don't seem to affect actual relative imports, they simply removed implicit relative imports, which broke both relative and absolute imports and were all around horrible to rely on or stumble upon
[19:15:54] <bjs> Guest43: do you have a question about those comments? you seem to have already got a good idea and your own opinion
[19:15:57] *** Quits: puzzled (~puzzled@83-85-211-81.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[19:16:04] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-156.002.203.pools.vodafone-ip.de)
[19:16:19] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:16:21] <Guest43> I tend to use relative imports, but wanted to here any disadvantage if there are any?
[19:16:26] <Guest43> hear*
[19:16:29] *** Parts: bulletsquid (~bulletsqu@user/bulletsquid) (WeeChat 2.8)
[19:17:16] *** Joins: masber (~masber@vpn-91.cscs.ch)
[19:17:21] *** Quits: Pandadub (~Barones@2804:7f3:8986:c347:a0a7:cf77:2eec:3619) (Remote host closed the connection)
[19:17:52] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[19:18:18] *** Quits: jazzy (~jaziz@2600:380:c145:1176:ccc4:f85a:7d87:128) (Ping timeout: 240 seconds)
[19:18:26] *** Abrax is now known as |_
[19:20:47] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[19:22:03] *** |_ is now known as Abrax
[19:22:09] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[19:22:24] *** Joins: Abrax (~Abrax@user/abrax)
[19:22:58] *** Quits: reumeth (~reumeth@user/reumeth) (Ping timeout: 256 seconds)
[19:23:08] *** Quits: jpic (~jpic@bernadette.objectif-libre.com) (Ping timeout: 272 seconds)
[19:23:09] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:23:44] *** Quits: y1n (~y1n@84-115-64-117.wifi.dynamic.surfer.at) (Quit: Leaving)
[19:23:45] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[19:23:46] *** Quits: tims (~tims@61.69.131.46) (Ping timeout: 272 seconds)
[19:24:03] *** Joins: y1n (~y1n@84-115-64-117.wifi.dynamic.surfer.at)
[19:24:16] *** Joins: schumaml (~schumaml@dslb-188-104-191-129.188.104.pools.vodafone-ip.de)
[19:24:30] *** Joins: jpic (~jpic@82.142.6.158)
[19:25:30] *** Quits: Obo (~roberto@70.pool90-171-81.dynamic.orange.es) (Ping timeout: 265 seconds)
[19:25:37] *** Quits: mout (mout@2a01:7e01::f03c:92ff:fe71:e75a) (Remote host closed the connection)
[19:25:45] *** Quits: Guest43 (~Guest43@bzq-84-110-62-22.cablep.bezeqint.net) (Quit: Client closed)
[19:26:02] *** Joins: junktext (~junktext@77.247.181.218)
[19:26:44] *** Joins: mohabaks_ (~mohabaks@gateway/tor-sasl/mohabaks)
[19:27:45] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: See ya!)
[19:28:22] *** Joins: digilink (~digilink@user/digilink)
[19:29:12] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[19:31:46] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[19:33:04] *** Joins: Tempesta (Tempesta@user/tempesta)
[19:34:21] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[19:35:10] *** Quits: ExeciN (~ExeciN@user/nicexe) (Quit: Client closed)
[19:35:16] *** Quits: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net) (Remote host closed the connection)
[19:36:17] <hexnewbie> I've been thinking about adding a crash handler to a program (mostly because I thought it would be relatively easy, not that it is *very* needed) to record traceback and possibly gdb bt on an exception or segfault. Now sys.excepthook *is* easy, but the segfault is not: signal.signal() can't be used with SIGSEGV, an external parent recording traceback spat out by the faulthandler traceback can't launch GDB when the signal is caught, because the process
[19:36:17] <hexnewbie> exists, and core dumps are written to a non-predicable location. So I'm wondering, is there a simple way, a project that already does that, or should I simply give up? (I may still do it, cause the problem fascinates me a little bit, though I still haven't imagined one that doesn't involve Cython yet)
[19:36:23] *** Joins: bandit_za (~bandit@2c0f:ed28:b016:e80::1ed)
[19:37:22] *** Quits: morrigan (~m0rr1gan@user/m0rr1gan) (Ping timeout: 240 seconds)
[19:40:20] <graingert> hexnewbie: like sentry?
[19:40:27] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:40:38] <graingert> hexnewbie: https://docs.sentry.io/platforms/python/
[19:41:00] *** Quits: qlixed (~qlixed@181.44.129.13) (Remote host closed the connection)
[19:41:16] <ammar2> does sentry handle segfaults?
[19:42:30] <hexnewbie> It does look interesting even if it does not, at least from the perspective of making me not reinvent the wheel ;)
[19:42:37] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[19:42:51] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[19:43:00] <ammar2> hexnewbie: normally for segfaults you'd have a wrapper program that checks your child or a crash reporter in core_pattern
[19:43:11] <ammar2> and then sentry takes care of prettifying tracebacks etc
[19:43:34] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:44:20] <hexnewbie> (I've been using pygments to prettify my tracebacks for this purpose previously)
[19:45:57] *** Quits: death916 (~death916@user/death916) (Ping timeout: 245 seconds)
[19:46:07] <hexnewbie> Still, triggering ['gdb' sys.executable(), str(pid)] at the segfault was what I was trying to do before I figured its impossible, and gdb "$pythonexe" core (or whatever the core_pattern) is what I will consider now.
[19:48:10] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[19:50:15] *** Joins: ckdcreation (~ckdCreati@147.55.133.134)
[19:50:28] <SnoopJ> If I understand right, they're saying that `core_pattern` can make your core dump predictable enough to make this approach work.
[19:50:55] *** Joins: zrsm (~mrrobot@173.171.254.123)
[19:51:00] *** Quits: audio (~audio@2603-8081-1800-00ad-fc9e-4a92-a17f-6cc3.res6.spectrum.com) (Ping timeout: 272 seconds)
[19:52:22] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[19:52:30] <SnoopJ> or you can define a command there that gets the core dump as stdin
[19:53:22] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[19:53:33] <cvmn> how to write this more pythonically?  https://gist.github.com/1d8352693e709a001a79dda5103d6915  -  basically i want to get the list of strings that their length is shortest.  i.e. ['ads', 'asdfasf', 'aaa'] should become just ['ads', 'aaa'].
[19:54:17] *** Joins: darksun (~darksun@user/darksun)
[19:54:48] *** Quits: y1n (~y1n@84-115-64-117.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[19:56:21] <grawity> that looks about normal to me
[19:57:04] <grym> cvmn: that seems fine.  you could also do something like collections.Counter(tags_list).most_common()[::-1], but that feels a little contrived
[19:57:32] *** Joins: rany (~rany@user/rany)
[19:57:39] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[19:57:42] <grym> in part because counter doesn't have a least_common
[19:57:48] <deniska> cvmn: you may also come up with a clever database query assuming it works with sql or something similar
[19:58:04] <grym> ^ that'd be ideal
[19:58:05] <SnoopJ> there's also `tagsbylen = sorted(tags_list, key=len)` to sort them by length, but yea, I think it's pretty fine as-is.
[19:59:07] *** Quits: Strom (strom@fedora/strom) ()
[19:59:52] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 272 seconds)
[20:01:11] *** Joins: Strom (strom@fedora/strom)
[20:02:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:02:46] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[20:05:34] *** Quits: PdimH (~pdimh@user/pdimh) (Quit: May we meet again)
[20:05:38] *** Joins: yaalon (~yaalon@2600:100e:b1b9:ddcb:8028:cef4:3626:7041)
[20:05:43] *** Joins: georgios (~georgios@2a02:587:a00e:25da:84ea:e649:a8a1:6cf5)
[20:06:16] *** Joins: darksun (~darksun@user/darksun)
[20:07:18] *** Joins: y1n (~y1n@84-115-64-33.wifi.dynamic.surfer.at)
[20:07:55] *** Quits: yaalon (~yaalon@2600:100e:b1b9:ddcb:8028:cef4:3626:7041) (Read error: Connection reset by peer)
[20:08:48] *** Joins: Roey (~Roey@user/Roey)
[20:12:34] *** Roey is now known as FourchanCookie
[20:13:22] *** Quits: masber (~masber@vpn-91.cscs.ch) (Ping timeout: 246 seconds)
[20:13:48] *** Joins: VSpike (~johncc@2001:bc8:47ac:1a22::1)
[20:14:57] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-55f9-cce3-ab9e-b140.res6.spectrum.com)
[20:16:20] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[20:16:34] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[20:18:18] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-e09d-5ac8-afbf-2237.res6.spectrum.com)
[20:18:32] <hexnewbie> Thanks for the suggestions
[20:18:48] *** Joins: mei (~mei@user/mei)
[20:19:47] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[20:19:50] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:19:53] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[20:20:08] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-55f9-cce3-ab9e-b140.res6.spectrum.com) (Ping timeout: 272 seconds)
[20:20:14] *** Joins: mickey (~user@user/mickey)
[20:21:46] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[20:22:15] *** Joins: rany_ (~rany@user/rany)
[20:23:40] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[20:23:55] *** Quits: mei (~mei@user/mei) (Quit: mei)
[20:24:16] *** Quits: driib (~driib@185.195.233.163) (Quit: The Lounge - https://thelounge.chat)
[20:24:29] *** Joins: Elodin (~weechat@user/elodin)
[20:24:34] *** Quits: rany (~rany@user/rany) (Ping timeout: 272 seconds)
[20:24:38] *** Joins: driib (~driib@185.195.233.163)
[20:25:36] *** Joins: Payam (~Payam@138.106.57.132)
[20:26:09] *** Joins: marduk5 (~marduk@172.58.187.161)
[20:27:03] <Payam> I try to make a .deb file out of my project. This is my setup.py but everytime I try to build the .deb package using stdeb I get this error. AttributeError: 'set' object has no attribute 'get' https://paste.debian.net/1206357/
[20:27:11] <Payam> Can anyone tell me what I am doing wrong?
[20:27:30] <grawity> I think that package_dir= is supposed to be a dict, not a set?
[20:27:38] *** Quits: foozle (~foozle@2001-b011-c001-1a6c-4fe8-0e32-b955-cf18.dynamic-ip6.hinet.net) (Quit: Leaving)
[20:27:38] <grawity> as in {key:value} not just {value}
[20:27:43] *** Joins: marduk4 (~marduk@172.58.187.100)
[20:27:58] <Payam> I have my scripts in src/ folder
[20:28:19] *** FourchanCookie is now known as FourchanCokie
[20:28:20] <grawity> which is kind of not the point
[20:28:43] <Payam> I have setup.py in root and src/ in root.
[20:29:01] <grawity> still not the point, the error is about your python syntax, not about the actual paths
[20:29:20] <Payam> yes. but what should the key be?
[20:29:21] <grawity> if I found the correct docs, package_dir={"": "src"} is what it expects
[20:29:29] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[20:29:36] <grawity> going by https://docs.python.org/3/distutils/setupscript.html#listing-whole-packages and https://docs.python.org/3/distutils/examples.html#pure-python-distribution-by-package
[20:30:16] *** Quits: marduk (~marduk@172.58.187.145) (Ping timeout: 272 seconds)
[20:30:17] *** marduk4 is now known as marduk
[20:31:21] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:31:57] *** Quits: marduk5 (~marduk@172.58.187.161) (Ping timeout: 276 seconds)
[20:33:52] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[20:33:54] *** Joins: morrigan (~m0rr1gan@user/m0rr1gan)
[20:36:21] *** rany_ is now known as rany
[20:37:57] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[20:39:03] *** FourchanCokie is now known as ForShanCokie
[20:39:57] *** ForShanCokie is now known as ForShansCocky
[20:40:00] *** ForShansCocky is now known as Roey
[20:40:35] <Payam> I generated the .deb file now but when I write like "sokbostad" in a terminal it does not open my application
[20:40:58] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[20:41:02] *** Quits: pneff (~pneff@2a02:168:fedc:0:e532:5b92:d92d:6754) (Ping timeout: 272 seconds)
[20:41:49] <Payam> I found it
[20:42:03] <Payam> but this program should only be used with python 3.7 above
[20:42:21] *** Joins: withered_wolf (~withered_@111.sub-174-192-82.myvzw.com)
[20:42:51] *** Joins: Blankspace (~abcd@user/blankspace)
[20:44:12] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[20:44:14] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[20:44:27] <graingert> Payam: 3.6 is EOL this December
[20:44:47] *** Joins: Blankspace (~abcd@user/blankspace)
[20:44:56] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[20:44:57] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[20:45:22] *** Joins: Blankspace (~abcd@user/blankspace)
[20:45:36] <Payam> graingert what do you  mean? I use keywords that are not available in python3.6
[20:46:27] *** Quits: dbristow (~dbristow@user/dbristow) (Remote host closed the connection)
[20:47:22] *** Quits: withered_wolf (~withered_@111.sub-174-192-82.myvzw.com) (Ping timeout: 272 seconds)
[20:47:44] <graingert> Payam: What
[20:47:59] <Payam> This is my __main__ . The one that I want to be run
[20:48:22] <Payam> https://paste.debian.net/1206361/
[20:48:48] <Payam> So how do I point the execution of the program to __name__ when packaging?
[20:48:54] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:49:25] <graingert> Payam: You need to make a `def main()`
[20:49:35] <graingert> Then you can use a console_scripts entry point
[20:49:36] <Payam> but I have a asyncio init
[20:49:43] <Payam> in it
[20:49:50] <graingert> Payam: Yep make a sync `def main():`
[20:50:02] <graingert> And an `async def amain():`
[20:50:10] <Payam> amain?
[20:50:24] <graingert> Yes
[20:51:10] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[20:51:30] <graingert> Then you can do: https://www.irccloud.com/pastebin/1voideOr/entry_point.py
[20:51:34] <graingert> Payam: ^
[20:52:03] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[20:53:09] <graingert> You shouldn't write anything other than `    sys.exit(main())` in your `if __name__ == "__main__":`
[20:53:47] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[20:53:50] *** Joins: pschorf (~user@c-73-77-28-188.hsd1.tx.comcast.net)
[20:54:11] <Payam> graingert https://paste.debian.net/1206362/
[20:54:42] *** Quits: y1n (~y1n@84-115-64-33.wifi.dynamic.surfer.at) (Ping timeout: 276 seconds)
[20:54:44] <graingert> Payam: You should also allow KeyboardInterrupt to raise so the exit code is correctly set to -2
[20:54:55] *** Joins: dbristow (~dbristow@user/dbristow)
[20:55:20] <graingert> Also Exception, KeyboardInterrupt is redundant as they're already BaseException
[20:55:28] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[20:55:39] *** Quits: vsantana (~Thunderbi@fttx-177136148221.usr.predialnet.com.br) (Ping timeout: 252 seconds)
[20:55:52] <graingert> Payam: You can also `return "bye!"`
[20:56:20] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[20:56:24] <Payam> this is what I got when creating the .deb  https://paste.debian.net/1206364/
[20:57:35] <Payam> this is my setup file : https://paste.debian.net/1206365/
[20:58:18] <Payam> and this is the project tree: https://paste.debian.net/1206367/
[20:58:35] *** Joins: luvalon1 (~luva@178.239.167.169)
[20:59:32] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[20:59:54] *** Joins: Blankspace (~abcd@user/blankspace)
[21:00:20] *** Joins: pneff (~pneff@2a02:168:fedc:0:e532:5b92:d92d:6754)
[21:00:34] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[21:00:41] *** Quits: yogoyo (~yogoyo@user/yogoyo) (Quit: bye)
[21:00:56] *** Joins: Blankspace (~abcd@user/blankspace)
[21:01:05] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[21:01:17] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[21:01:26] *** Joins: ice9 (~ice9@user/ice9)
[21:01:31] *** Joins: Blankspace (~abcd@user/blankspace)
[21:02:44] <jinsun> Payam: you should put everything inside a pkg_name subfolder inside src, and do pkg_name.__main__:main in the entry_points
[21:03:23] <Payam> so it should be the package name?
[21:03:28] <Payam> I will take a look. thanks
[21:03:51] <Payam> You mean the name of the folder should be "pkg_name"?
[21:03:59] <jinsun> ya replace pkg_name with your package name
[21:04:05] <Payam> okej thanks.
[21:04:14] <Payam> and I should mve all the source code there?
[21:04:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 276 seconds)
[21:04:39] <ammar2> anyone know when europython tends to upload talks?
[21:04:42] *** Quits: pneff (~pneff@2a02:168:fedc:0:e532:5b92:d92d:6754) (Ping timeout: 240 seconds)
[21:04:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:04:49] <jinsun> Payam: yes, otherwise src becomes a package
[21:05:09] *** Joins: pneff (~pneff@2a02:168:fedc:0:e532:5b92:d92d:6754)
[21:05:24] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[21:05:25] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[21:05:47] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[21:05:50] *** Joins: Blankspace (~abcd@user/blankspace)
[21:05:58] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[21:06:20] *** Joins: Blankspace (~abcd@user/blankspace)
[21:06:28] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[21:06:34] *** Joins: v0lta (~dkmueller@2a01:c23:c5d2:1900:a01f:5215:ecd9:b255)
[21:07:00] *** Joins: Blankspace (~abcd@user/blankspace)
[21:07:00] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 272 seconds)
[21:07:08] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[21:07:09] *** Joins: y1n (~y1n@84-115-64-253.wifi.dynamic.surfer.at)
[21:07:49] *** Joins: Blankspace (~abcd@user/blankspace)
[21:07:56] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[21:08:47] *** Joins: Blankspace (~abcd@user/blankspace)
[21:08:54] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[21:09:32] *** Joins: Blankspace (~abcd@user/blankspace)
[21:09:40] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[21:09:49] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:10:02] *** Joins: Blankspace (~abcd@user/blankspace)
[21:10:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[21:10:11] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[21:10:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:10:45] *** Joins: Blankspace (~abcd@user/blankspace)
[21:10:53] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[21:11:43] *** Joins: Blankspace (~abcd@user/blankspace)
[21:11:50] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[21:11:50] *** Quits: y1n (~y1n@84-115-64-253.wifi.dynamic.surfer.at) (Client Quit)
[21:12:06] *** jarthur_ is now known as jarthur
[21:12:13] *** Joins: y1n (~y1n@84-115-64-253.wifi.dynamic.surfer.at)
[21:12:18] *** Joins: tpefreedom (~tsomers@98-125-225-122.dyn.centurytel.net)
[21:12:39] *** Joins: Blankspace (~abcd@user/blankspace)
[21:12:48] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[21:13:27] *** Joins: arnzzz (~matt@cpc76484-cwma10-2-0-cust118.7-3.cable.virginm.net)
[21:13:40] *** Joins: Blankspace (~abcd@user/blankspace)
[21:13:48] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[21:13:57] <arnzzz> hello im new and have a question about the interactive 'help()' prompt
[21:15:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[21:15:53] <darksun> don't wait to ask. ask
[21:16:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:16:42] *** Joins: reumeth (~reumeth@user/reumeth)
[21:17:08] <arnzzz> i know how to get the help docs on certain things like help(print), but im trying to get the help docs for the read() function of a file. i tried help(read) but its not working
[21:19:39] <darksun> arnzzz: try to type "help(file.read)
[21:19:42] <darksun> "
[21:20:59] *** Parts: tpefreedom (~tsomers@98-125-225-122.dyn.centurytel.net) (Leaving)
[21:21:33] <nedbat> anyone have experience with safetydb? They (incorrectly) listed coverage as having a security issue, and people seem alarmed by it: https://github.com/nedbat/coveragepy/issues/1198
[21:21:35] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[21:21:56] <bjs> nedbat: it is insecure! it's using Python :P
[21:22:05] <bjs> ++and C !
[21:22:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[21:22:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:24:18] *** Joins: mei (~mei@user/mei)
[21:24:37] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[21:25:02] <nedbat> bjs: people will believe you...
[21:25:10] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:6467:aa41:cd69:bd89) (Quit: Textual IRC Client: www.textualapp.com)
[21:25:23] <arnzzz> darksun, ok i feel a LITTLE silly now. i tried what you said and got an error, 'NameError file is not defined', so i defined the file 'f = open('data.txt','r')' and now help(f.read) works as expected lol
[21:26:01] <nedbat> bjs: every once in a while, one of our old friends sends this message to comp.lang.python: https://groups.google.com/g/comp.lang.python/c/adpmU3WbRd0/m/C1SD5nbCBAAJ
[21:27:56] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:28:21] *** Quits: arnzzz (~matt@cpc76484-cwma10-2-0-cust118.7-3.cable.virginm.net) (Quit: Leaving)
[21:28:32] *** Quits: pneff (~pneff@2a02:168:fedc:0:e532:5b92:d92d:6754) (Ping timeout: 272 seconds)
[21:29:06] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 240 seconds)
[21:29:13] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[21:30:13] *** Joins: audio (~audio@2603-8081-1800-00ad-df68-b045-38b9-154d.res6.spectrum.com)
[21:30:32] <noarb-> When writing a python cli program, is there a recommended way to write a manpage? I am using click right now and I see some tools that are click specific (like https://github.com/click-contrib/click-man). I'm also using sphinx for docs, but generating html read the docs style. Can sphinx do both html and manpages? Is there a different tool to use?
[21:30:45] *** Joins: arnzzz (~matt@cpc76484-cwma10-2-0-cust118.7-3.cable.virginm.net)
[21:30:56] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[21:31:22] *** Joins: mickey (~user@user/mickey)
[21:31:36] *** Joins: srhm (~ascii@user/srhm)
[21:31:37] <darksun> noarb-: did you already the doc?
[21:31:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[21:31:42] <darksun> read*
[21:33:19] <Julian> noarb-: Sphinx can do both, yes
[21:33:58] *** Joins: withered_wolf (~withered_@111.sub-174-192-82.myvzw.com)
[21:34:13] *** Joins: y04nn (~y04nn@91.193.4.154)
[21:34:36] *** Quits: SpeakerToMeat__ (~Speaker@user/speakertomeat) (Read error: Connection reset by peer)
[21:35:21] *** Joins: SpeakerToMeat__ (~Speaker@user/speakertomeat)
[21:36:23] *** Quits: resmo (~resmo@2a00:d420:9:8a00:d0f0:55aa:f075:e468) (Remote host closed the connection)
[21:36:36] *** Joins: resmo (~resmo@2a00:d420:9:8a00:9282:2f6e:733a:6826)
[21:36:39] *** Quits: rendar (~rendar@user/rendar) ()
[21:37:27] *** Joins: mattil (~mattilinn@87-92-172-201.rev.dnainternet.fi)
[21:37:37] <noarb-> would I just mantain two separate sphinx source directories? and separately do `sphinx-build -b html sourcedir_html builddir_html` and `sphinx-build -b man sourcedir_man builddir_man`? Is this what most projects do?
[21:38:59] *** Joins: arnzzz2 (~arnzzz@cpc76484-cwma10-2-0-cust118.7-3.cable.virginm.net)
[21:39:24] *** Quits: y3k (~Thunderbi@user/y3k) (Quit: y3k)
[21:39:51] <bjs> nedbat: they are very persistent, i'll give them that
[21:40:30] *** Quits: arnzzz2 (~arnzzz@cpc76484-cwma10-2-0-cust118.7-3.cable.virginm.net) (Client Quit)
[21:40:32] *** Parts: arnzzz (~matt@cpc76484-cwma10-2-0-cust118.7-3.cable.virginm.net) (Leaving)
[21:40:47] <bjs> nedbat: (also can't you ban/quiet people from groups like that?)
[21:41:17] <nedbat> bjs: they are banned from the pure-email list that is mirrored to, but not the newsgroup
[21:43:04] *** Joins: arnzzz (~arnzzz@cpc76484-cwma10-2-0-cust118.7-3.cable.virginm.net)
[21:43:18] *** Quits: arnzzz (~arnzzz@cpc76484-cwma10-2-0-cust118.7-3.cable.virginm.net) (Client Quit)
[21:43:35] *** Joins: arnzzz (~arnzzz@cpc76484-cwma10-2-0-cust118.7-3.cable.virginm.net)
[21:44:27] <ChrisWarrick> nedbat: the usenet group (at least from google groups’ perspective) is so full of spam that I think nothing much would be lost by burning the usenet-email bridge
[21:45:07] <nedbat> ChrisWarrick: it's sad to see google neglect google groups to this point.
[21:45:33] <ChrisWarrick> nedbat: would it be Google’s fault though? How does the list look through some other typical usenet server?
[21:45:57] <SnoopJ> ChrisWarrick, if the spam comes from groups, perhaps?
[21:46:06] <ChrisWarrick> SnoopJ: ah, that’s an option
[21:46:21] <nedbat> ChrisWarrick: if google groups wanted to be a good interface to usenet, it would filter the obvious spam
[21:46:21] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[21:46:36] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[21:47:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:49:42] *** Joins: djapo (~archangel@user/djapo)
[21:49:46] *** Joins: zer071 (~TPK_Remot@mobile-166-175-60-132.mycingular.net)
[21:49:49] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[21:49:52] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: leaving)
[21:51:25] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[21:52:26] *** Joins: kish` (~aqua@user/aqua)
[21:52:28] <arnzzz> its not like google to neglect a project/s (google killedbygoogle)
[21:52:48] <nedbat> arnzzz: yeah, unfortunately, no one is surprised by this
[21:54:15] *** Quits: y1n (~y1n@84-115-64-253.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[21:56:15] *** Joins: rany_ (~rany@user/rany)
[21:57:24] *** rany is now known as Guest4754
[21:57:24] *** Quits: Guest4754 (~rany@user/rany) (Killed (erbium.libera.chat (Nickname regained by services)))
[21:57:24] *** rany_ is now known as rany
[21:57:30] *** Joins: gggp (~gggp@123.113.188.14)
[21:58:22] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:58:54] *** Quits: arnzzz (~arnzzz@cpc76484-cwma10-2-0-cust118.7-3.cable.virginm.net) (Quit: Leaving)
[21:59:14] *** Joins: arnzzz (~arnzzz@cpc76484-cwma10-2-0-cust118.7-3.cable.virginm.net)
[22:00:50] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 272 seconds)
[22:00:51] *** Joins: odoood (~odoood@2601:c8:c003:a550::8)
[22:01:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:03:42] *** Quits: resmo (~resmo@2a00:d420:9:8a00:9282:2f6e:733a:6826) (Read error: Connection reset by peer)
[22:04:21] *** Quits: marduk (~marduk@172.58.187.100) (Quit: The Lounge - https://thelounge.chat)
[22:04:37] *** Joins: resmo (~resmo@2a00:d420:9:8a00:f9b9:4f2e:947c:3224)
[22:05:08] *** Joins: Auron (Auron956@user/auron)
[22:06:08] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[22:07:05] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:07:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[22:07:18] <graingert> nedbat: all versions of reportlab are currently flagged by safety
[22:07:27] *** Joins: y1n (~y1n@84-115-65-223.wifi.dynamic.surfer.at)
[22:07:31] <nedbat> graingert: for a similar reason?
[22:07:42] <graingert> equivalently silly
[22:08:37] <graingert> nedbat: https://snyk.io/vuln/SNYK-PYTHON-REPORTLAB-1022145
[22:08:43] <nedbat> graingert: the disappointing thing is the only reason they listed it was because I fixed a false alarm, and mentioned it in my changes.
[22:09:12] *** Joins: marduk (~marduk@172.58.187.100)
[22:09:33] <graingert> nedbat: I had a CVE minted against a beta version of django-js-reverse
[22:09:50] <nedbat> graingert: I added to the changes entry: https://github.com/nedbat/coveragepy/commit/6adbefa71acf97833ae1e24309fbefd3cda02165
[22:11:32] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[22:12:43] <ammar2> wow that's a stupid entry
[22:14:15] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[22:14:54] <The-Compiler> meh, I hate how people assume you can automatically tell how something is "insecure" based on a list of bad stuff™
[22:15:06] <The-Compiler> reminds me of a paper someone linked to me recently
[22:15:42] <The-Compiler> https://arxiv.org/pdf/2107.12699.pdf
[22:16:18] <The-Compiler> I have to admit I haven't fully read it yet, but it seems to essentially run bandit over the entirity of PyPI, and then assume that most projects on PyPI are insecure because those do e.g. "import subprocess"
[22:16:34] <ammar2> "Use of the exec function"
[22:16:35] <ammar2> lol
[22:17:31] *** Joins: magla (~gelignite@55d4c33c.access.ecotel.net)
[22:18:56] <ammar2> the high severity ones seem legit at least, the rest is typical academic padding.
[22:19:13] <ammar2> well some of them anyway
[22:19:34] <ammar2> importing pycrypto itself is not necessarily a security problem, you could be using it correctly
[22:20:14] *** Joins: Akuli (~Akuli@87-94-111-243.bb.dnainternet.fi)
[22:21:07] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:21:37] <SnoopJ> I feel like you end up back at formal verification rapidly with this kind of analysis
[22:21:43] <SnoopJ> (or just guessing)
[22:23:40] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[22:25:49] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[22:29:00] *** Quits: marduk (~marduk@172.58.187.100) (Quit: The Lounge - https://thelounge.chat)
[22:32:23] <noarb-> does anyone know of a project that uses sphinx to build their unix manpages? I'm struggling to find an example, and the search term "man pages" is making it hard to find one
[22:32:59] *** Joins: marduk (~marduk@172.58.187.100)
[22:34:17] *** Joins: Betal (~Beta@user/betal)
[22:34:31] *** Quits: Elodin (~weechat@user/elodin) (Quit: WeeChat 3.2)
[22:35:40] *** Joins: Elodin (~weechat@user/elodin)
[22:37:07] *** Quits: zer071 (~TPK_Remot@mobile-166-175-60-132.mycingular.net) (Quit: Leaving.)
[22:37:08] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:316f:1a84:f8a0:c03a)
[22:37:22] *** Joins: zer07 (~TPK_Remot@mobile-166-175-60-132.mycingular.net)
[22:40:05] *** Quits: zer07 (~TPK_Remot@mobile-166-175-60-132.mycingular.net) (Max SendQ exceeded)
[22:40:39] *** Joins: zer07 (~TPK_Remot@mobile-166-175-60-132.mycingular.net)
[22:40:51] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[22:42:25] *** Joins: goode_bye (~goode_bye@2600:1700:17c8:8e0:811f:38f0:9754:3a0e)
[22:43:11] *** Quits: jess (~jess@libera/staff/jess) ()
[22:44:28] <goode_bye> looking to integrate an ORM and migration library into a project that runs on aws lambda with rds proxy and whatever else. sqlalchemy is a little swiss army-ish for my taste but the de facto standard, django orm has some django-y boilerplate and possible performance penalty but really good migration autogen and simple api, and peewee is like a
[22:44:28] <goode_bye> lightweight django ORM but no migration autogen. which would you pick?
[22:46:18] *** Joins: humbertowoody (~humbertow@2806:107e:f:6914:7cc0:2b40:8f32:ba9c)
[22:46:34] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[22:47:08] *** Quits: goode_bye (~goode_bye@2600:1700:17c8:8e0:811f:38f0:9754:3a0e) (Quit: Client closed)
[22:47:57] *** Quits: bandit_za (~bandit@2c0f:ed28:b016:e80::1ed) (Quit: Client closed)
[22:47:58] *** Joins: goode_bye (~goode_bye@2600:1700:17c8:8e0:811f:38f0:9754:3a0e)
[22:48:34] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 240 seconds)
[22:49:14] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[22:49:28] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[22:49:39] <GinFuyou> goode_bye, django has a specific way it works, are you sure it fits your project?
[22:49:54] *** Quits: v0lta (~dkmueller@2a01:c23:c5d2:1900:a01f:5215:ecd9:b255) (Ping timeout: 240 seconds)
[22:50:05] <GinFuyou> Not sure what performance penalties it could have, why?
[22:51:55] *** Joins: v0lta (~dkmueller@2a01:c23:c5d2:1900:a01f:5215:ecd9:b255)
[22:52:21] <goode_bye> django ORM can be used standalone with a minimal settings.py configuration. the way django handles its models is compatible with my project. that being said, because it was designed to be a part of a long-running server, there might be some startup overhead that i don't know about vs something like peewee or sqlalchemy which are lightweight and
[22:52:21] <goode_bye> designed to be used in many contexts.
[22:52:37] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[22:54:36] *** Quits: y1n (~y1n@84-115-65-223.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[22:54:54] <GinFuyou> your project will run more like one-shot scripts? Well, true, I'm not sure if django orm takes longer for initialization than others
[22:55:56] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 272 seconds)
[22:55:59] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[22:56:36] *** Quits: v0lta (~dkmueller@2a01:c23:c5d2:1900:a01f:5215:ecd9:b255) (Ping timeout: 256 seconds)
[22:57:30] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[22:58:28] *** Quits: gggp (~gggp@123.113.188.14) (Ping timeout: 272 seconds)
[22:58:51] <goode_bye> yeah, each time the API is hit it will run the lambda. django has my favorite orm in general but i'm not sure if it's the best choice for this project, hoping someone here has some experience with this decision
[22:58:56] *** Joins: Narrat (~omnius@p200300df5f45d8ce06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[23:01:00] *** Quits: twobitsprite (~isaac.fre@cpe-173-95-153-183.nc.res.rr.com) (Ping timeout: 272 seconds)
[23:02:21] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[23:03:02] *** Joins: p-i- (~Ohmu@node-12gc.pool-118-173.dynamic.totinternet.net)
[23:03:23] *** Joins: twobitsprite (~isaac.fre@cpe-173-95-153-183.nc.res.rr.com)
[23:03:55] <p-i-> Is anyone aware of any active scientific computation community? (numpy / scipy / pandas / matplotlib)
[23:05:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 272 seconds)
[23:06:39] <SnoopJ> p-i-, can you say more about what you're looking for in a community?
[23:07:24] *** Joins: y1n (~y1n@84-115-65-223.wifi.dynamic.surfer.at)
[23:07:55] *** Joins: Elodin (~weechat@user/elodin)
[23:08:58] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[23:09:57] *** Joins: V1mV1m (~VimVim@85.191.89.214)
[23:10:14] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:11:09] *** Joins: digilink (~digilink@user/digilink)
[23:13:02] *** Quits: VimVim (~VimVim@85.184.185.242) (Ping timeout: 252 seconds)
[23:14:27] *** Joins: v0lta (~dkmueller@2a01:c23:c5d2:1900:a01f:5215:ecd9:b255)
[23:14:45] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Quit: Client closed)
[23:14:58] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[23:18:07] *** Quits: TomyWork (~TomyLobo@p200300e80f133c00edca32a9512e1858.dip0.t-ipconnect.de) (Quit: Leaving)
[23:19:11] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 258 seconds)
[23:19:24] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[23:19:38] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[23:19:46] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[23:20:00] <p-i-> SnoopJ: where is a good place for numpy questions, for example? Maybe here is best, there seem to be several resident engineers with expertise in numpy.
[23:21:09] *** Gustavo6046_ is now known as Gustavo6046
[23:21:34] <SnoopJ> p-i-, they are relevant here and there are a good number of people in this community that use it regularly, yep.
[23:21:36] *** Quits: georgios (~georgios@2a02:587:a00e:25da:84ea:e649:a8a1:6cf5) (Ping timeout: 276 seconds)
[23:22:22] *** Quits: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net) (Ping timeout: 246 seconds)
[23:22:33] <p-i-> It just seems odd to me that I cannot find a community focused on numpy / scipy / pandas / matplotlib... it seems a logical grouping. And there are so many scientific researchers around the world who must struggle with this toolchain, as it is often nontrivial to wield.
[23:22:35] <SnoopJ> Not sure there is anything formal aside from the mailing list.
[23:23:27] <p-i-> numpy's gitter seems responsive, albeit sparsely used. Like 1-3 convos a month.
[23:23:47] <SnoopJ> p-i-, if you're looking for a grouping, there are certainly Slack/Discord groups that include this stuff under their umbrella. Many of them probably revolving around "data science." Not sure if the Python Discord has channels/a channel for this.
[23:23:48] *** Joins: tokerboker (~vivaan@c-73-71-182-125.hsd1.ca.comcast.net)
[23:24:56] *** Joins: georgios (~georgios@2a02:587:a001:d91:55c3:9b1f:744:834d)
[23:24:56] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 258 seconds)
[23:26:07] <p-i-> I'm delighted by how much I've been able to put together with numpy/matplotlib. I've been building a trading visualizatioin/analysis tool. Progress has slow, but the result is nicely compact, highly performant and allows me to iterate fast over new ideas.
[23:26:59] *** Joins: jay-m126_ (~jay-m@129.0.204.218)
[23:27:06] *** Joins: node1 (~node1@user/node1)
[23:28:05] <SnoopJ> It's a nice ecosystem :)
[23:29:09] *** Joins: foobaz212 (~foobaz212@11.188.159.143.dyn.plus.net)
[23:29:57] *** Joins: emika7 (~emika@83.136.182.25)
[23:30:12] *** Quits: emika (~emika@83.136.182.78) (Ping timeout: 252 seconds)
[23:30:12] *** emika7 is now known as emika
[23:31:17] *** Joins: Thanatos (~Thanatos@197.210.64.153)
[23:31:41] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:32:02] *** Quits: v0lta (~dkmueller@2a01:c23:c5d2:1900:a01f:5215:ecd9:b255) (Ping timeout: 272 seconds)
[23:34:00] *** Quits: Quietus (~quietus@larch.ratcliffefamily.uk) (Ping timeout: 256 seconds)
[23:37:56] *** Parts: zer07 (~TPK_Remot@mobile-166-175-60-132.mycingular.net) ()
[23:38:22] *** Quits: y04nn (~y04nn@91.193.4.154) (Ping timeout: 272 seconds)
[23:38:48] *** Joins: hafat (~hafat@95.70.167.173)
[23:39:41] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::791f) (Quit: Konversation terminated!)
[23:39:52] *** Joins: Quietus (~quietus@larch.ratcliffefamily.uk)
[23:41:21] *** Quits: c10l (~c10l@89.34.167.207) (Quit: Ping timeout (120 seconds))
[23:41:46] *** Joins: c10l (~c10l@89.34.167.207)
[23:43:26] *** Joins: v0lta (~dkmueller@2a01:c23:c5d2:1900:a01f:5215:ecd9:b255)
[23:44:11] *** Quits: dude-x (~textual@pool-173-70-158-124.nwrknj.fios.verizon.net) (Quit: Textual IRC Client: www.textualapp.com)
[23:44:12] *** Joins: matsaman (~matsaman@user/matsaman)
[23:45:29] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[23:47:17] *** Joins: Pickchea (~private@user/pickchea)
[23:47:41] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (Ping timeout: 252 seconds)
[23:49:08] *** Quits: v0lta (~dkmueller@2a01:c23:c5d2:1900:a01f:5215:ecd9:b255) (Ping timeout: 272 seconds)
[23:49:35] *** Joins: Payam (~Payam@c-39bfe255.01-402-73746f25.bbcust.telenor.se)
[23:49:46] *** Quits: c10l (~c10l@89.34.167.207) (Ping timeout: 272 seconds)
[23:49:53] <Payam> Hi it was someone helping me with packaging a python project to .deb file
[23:50:31] *** Joins: c10l (~c10l@89.34.167.207)
[23:51:08] *** Joins: v0lta (~dkmueller@2a01:c23:c5d2:1900:a01f:5215:ecd9:b255)
[23:53:43] *** Joins: puzzled (~puzzled@83-85-211-81.cable.dynamic.v4.ziggo.nl)
[23:53:52] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:54:23] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[23:54:25] *** Joins: afidegnum (~user@41.66.203.57)
[23:54:50] *** Quits: y1n (~y1n@84-115-65-223.wifi.dynamic.surfer.at) (Ping timeout: 272 seconds)
[23:55:10] *** Quits: Thanatos (~Thanatos@197.210.64.153) (Read error: Connection reset by peer)
[23:56:11] <matsaman> Payam: Okay. What's the next step?
[23:56:32] <afidegnum> my dictionary is not updated from the loop. i was expecting content of "z" object to add to the mydict as it happened with t, but no success. https://dpaste.org/6V9Y
[23:58:33] <Payam> matsaman, My application is in need of aiohttp and selenium. I was wondering how I can install those while installing my application
[23:59:08] <Payam> matsaman, https://bpa.st/KFOA
[23:59:11] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Read error: Connection reset by peer)
[23:59:28] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[23:59:29] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[23:59:48] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
