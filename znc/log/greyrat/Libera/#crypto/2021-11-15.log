[00:00:31] *** Joins: mononote (~mononote@user/mononote)
[00:08:48] *** Quits: menace (~someone@user/menace) (Quit: menace)
[00:13:03] *** Joins: rawgreaze (~rawgreaze@c-73-238-236-231.hsd1.nh.comcast.net)
[00:13:04] *** Quits: rawgreaze (~rawgreaze@c-73-238-236-231.hsd1.nh.comcast.net) (Changing host)
[00:13:04] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[00:27:14] *** Joins: hirogen (~hirogen@user/hirogen)
[00:31:15] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[00:35:30] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[00:39:09] *** Quits: ses (uid38151@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:47:58] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[00:54:42] *** Quits: system_error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[00:54:45] *** Quits: Narrat (~omnius@p200300df5f399f5d06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[00:58:06] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[00:58:53] *** Joins: fulldecent (~textual@wikipedia/fulldecent)
[01:02:11] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[01:03:08] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[01:03:20] *** Quits: X-Scale (~ARM@83.223.243.66) (Ping timeout: 256 seconds)
[01:05:00] *** X-Scale` is now known as X-Scale
[01:06:28] *** Joins: CryptoClub (~fafs@87.125.251.76)
[01:07:43] *** Joins: System_Error (~SystemErr@user/systemerror)
[01:11:27] *** Joins: machinedgod (~machinedg@24.105.81.50)
[01:11:58] <wasamasa> http://cryptoisnotcryptocurrency.com/
[01:12:08] <wasamasa> might be something for the /topic
[01:12:22] <wasamasa> ironically the maker of that website now works on cryptocurrencies
[01:26:53] *** Quits: qbt (~qbt@user/edun) (Quit: Leaving.)
[01:31:55] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[01:32:31] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:47:48] *** Quits: fulldecent (~textual@wikipedia/fulldecent) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:47:54] *** kish` is now known as GlobalBanksta
[01:51:34] *** Joins: fulldecent (~textual@wikipedia/fulldecent)
[02:05:01] <Soni> 16k RSA is about ~256 bits of security strength?
[02:06:08] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (Quit: ZNC 1.8.2 - https://znc.in)
[02:06:37] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[02:10:35] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 264 seconds)
[02:13:04] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 268 seconds)
[02:14:56] <Soni> how fast can you generate 16k RSA on a modern computer?
[02:15:52] <Soni> (sadly only have a raspberry pi right now)
[02:21:37] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[02:22:37] <tolarz> ironically, that site doesn't use https
[02:24:16] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 245 seconds)
[02:25:19] *** Joins: ses (uid38151@hampstead.irccloud.com)
[02:26:01] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[02:26:51] *** Joins: rtypo (~alex@user/rtypo)
[02:26:57] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[02:27:09] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[02:30:45] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:39:40] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[02:42:28] *** Quits: trebuh (~trebuh@2001:41d0:a:15c7::1) (Remote host closed the connection)
[02:43:01] *** Joins: trebuh (~trebuh@2001:41d0:a:15c7::1)
[02:44:11] *** Quits: yewscion (~yewscion@72-21-196-65.amazon.com) (Ping timeout: 264 seconds)
[02:48:50] *** Quits: Pythayr (~pither195@64.42.181.51) (Ping timeout: 268 seconds)
[02:51:37] *** Quits: CryptoDavid (uid14990@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[03:03:38] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[03:07:15] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[03:07:22] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[03:11:50] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[03:12:00] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[03:24:58] *** Joins: Pythayr (~pither195@2600:1700:82f0:2fe0:3e18:b3cd:ccb:a0b1)
[03:25:09] *** Quits: Pythayr (~pither195@2600:1700:82f0:2fe0:3e18:b3cd:ccb:a0b1) (Remote host closed the connection)
[03:27:09] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[03:30:30] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 260 seconds)
[03:31:36] *** Quits: hirogen (~hirogen@user/hirogen) (Remote host closed the connection)
[03:33:20] *** Joins: Pythayr (~pither195@64.42.181.51)
[03:36:03] *** Quits: fulldecent (~textual@wikipedia/fulldecent) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:36:55] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[03:37:10] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Remote host closed the connection)
[03:37:28] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:37:41] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[03:42:40] *** Joins: fulldecent (~textual@wikipedia/fulldecent)
[03:44:18] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[03:46:38] *** Quits: fulldecent (~textual@wikipedia/fulldecent) (Client Quit)
[03:49:32] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[03:50:12] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[03:51:34] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[03:54:28] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[03:57:05] *** Quits: piku (~piku@47.202.113.8) (Remote host closed the connection)
[03:57:21] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[03:57:23] *** Joins: piku (~piku@47.202.113.8)
[03:59:51] *** Joins: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04)
[03:59:54] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[04:01:21] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:02:48] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:05:56] *** Quits: kj7rrv (~kj7rrv@72.173.20.27) (Remote host closed the connection)
[04:06:15] *** Joins: kj7rrv (~kj7rrv@72.173.20.27)
[04:07:24] *** Quits: kj7rrv (~kj7rrv@72.173.20.27) (Read error: Connection reset by peer)
[04:07:43] *** Joins: kj7rrv (~kj7rrv@72.173.20.27)
[04:07:52] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: sdfgsdfg)
[04:11:05] <rk4> Soni: re key length checkout https://www.keylength.com/
[04:16:39] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[04:18:05] *** Joins: Wulf (~Wulf@user/wulf)
[04:24:42] <Peng> Soni: Using huge RSA keys is not likely to be useful. You're betting on a new break or quantum computers that are strong but not TOO strong. Might as well use normal-size RSA for now and switch to a post-quantum algorithm later.
[04:25:26] <danieldg> or pick your favorite PQ candidate algorithm and use it
[04:25:59] <danieldg> use both it and rsa if you think it might possibly be worse
[04:28:22] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[04:29:01] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:30:35] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 268 seconds)
[04:45:09] <timmc[m]> Aren't 1TB RSA keys supposed to be secure against quantum computers in general?
[04:47:44] <snappy> yes
[04:48:01] <snappy> that's from djb's pqrsa
[04:48:33] <iz> how are you gonna get 1TB RSA keys?
[04:49:17] <Soni> Peng: RSA has the nice advantage that longer = slower
[04:49:33] <Soni> this means you can easily tune it
[04:49:44] <iz> largest found prime is like 2^82589933 - 1, right?  
[04:49:53] <Soni> (this is for generating keys)
[04:50:53] <Soni> Peng: the quantum properties and stuff are less interesting than being able to tune it
[04:53:07] <Soni> Peng: this is for proof of work/address mining purposes
[04:53:23] <snappy> iz: i think in pqrsa the factors are 4096-bit primes, could be wrong, check the pqrsa paper
[04:54:25] <iz> for 1TB RSA keys?
[04:54:33] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[04:55:02] <iz> like.. i just can't figure out where 1TB of data would come from
[04:55:45] <snappy> yeah
[05:00:11] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 268 seconds)
[05:00:14] *** Quits: Choco (~Choco@host150.200-71-232.telecom.net.ar) (Ping timeout: 256 seconds)
[05:00:27] *** Joins: X-Scale` (~ARM@31.22.167.45)
[05:01:03] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[05:02:29] *** X-Scale` is now known as X-Scale
[05:04:44] *** Quits: ses (uid38151@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:07:16] <bgs> I think it's just LOTS of 4096 bit primes
[05:08:53] <Soni> how many 4096 bit primes are there?
[05:10:04] <Soni> anyway it kinda sucks that you only really see crypto tuning with password hash functions nowadays
[05:10:20] <snappy> i guess you can use prime number theorem to calculate this
[05:11:03] *** Joins: ses (uid38151@hampstead.irccloud.com)
[05:11:11] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[05:11:37] <yanmaani> I know there's papers on doing steganography by packet timings.
[05:11:55] <yanmaani> Has anyone looked into doing something similar for OTR, for MITM prevention?
[05:12:13] <Soni> RSA is kinda the weird one out in that it has tuning and works for encryption and signing
[05:13:14] <bgs> Soni: 2^31 primes according to the paper
[05:14:07] <Soni> bgs: that's not a lot...
[05:14:51] <iz> the other thing about RSA is there are a lot of standard implementations of it that are super vuln to simple power analysis attacks, even just w/ radiated EMR
[05:15:12] <bgs> it took them months to generate them 
[05:15:25] <bgs> Soni: how many did you expect?
[05:16:20] <Soni> 4096 bit primes gives you 8192 bit keys?
[05:16:20] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[05:16:39] <yanmaani> so, basically, the idea is, if you're on a line measured to do let's say 30ms with some jitter, the Nyquist theorem(?) gives us a limit on the tx bw on a noisy channel
[05:16:43] <Soni> and there are only about 2^62 of those?
[05:17:17] <bgs> somewhere around 2^30 makes total sense. 1TB ~= 2^42, 4096 is 2^12 so the answer ahs to be around 2^30
[05:17:37] <yanmaani> so for a toy example: our shared secret is 0..10. If my secret is 0, I send my outbound messages on .000 (even seconds)
[05:17:50] <yanmaani> if shared secret = 1, I send on .100 (100ms after even seconds) 
[05:17:51] <yanmaani> etc
[05:17:57] <yanmaani> obviously there's more sophisticated schemes
[05:18:11] <yanmaani> now, obviously an attacker could thwart this, but only by introducing latency
[05:18:45] <Soni> bgs: oh wait, you're doing 4096 bit primes in 1TB
[05:19:02] <Soni> bgs: what about how many 4096 bit primes are out there, total?
[05:19:03] <bgs> yes
[05:19:23] *** Joins: CryptoClub (~fafs@87.125.251.76)
[05:19:28] <bgs> I thought you were asking about the pqrsa paper
[05:19:34] <Soni> nah
[05:19:59] <Soni> also how many valid keys (total) are there in ed25519?
[05:20:33] <Peng> I forgot. Isn't it around 2^251?
[05:24:43] <Soni> hmm okay
[05:25:04] <Soni> so yeah why shouldn't one use RSA key generation as proof of work?
[05:29:22] <yanmaani> Soni: Isn't verification pretty hard?
[05:29:47] <iz> maybe it's too easy to reuse the work also.. and not easy enough to force variations
[05:30:06] <Soni> yanmaani: verification?
[05:30:45] <yanmaani> Soni: you're generating primes yeah?
[05:30:49] <iz> the way you verify the work was done w/out doing all that work
[05:30:49] <Soni> yeah
[05:30:50] *** Quits: kj7rrv (~kj7rrv@72.173.20.27) (Read error: Connection reset by peer)
[05:30:53] <yanmaani> how do you check 12890371239127312893234787 is a prime?
[05:31:03] <yanmaani> that's very hard
[05:31:08] *** Joins: kj7rrv (~kj7rrv@72.173.20.27)
[05:31:36] <Soni> well uh... how do you check an RSA key is actually an RSA key?
[05:31:58] <Soni> as opposed to just a large number that's easy to factor
[05:32:52] <Soni> that would be a bigger issue
[05:33:13] <iz> well, you are generating them when you generate them
[05:33:32] <iz> not taking a key someone else made and trusting it's valid
[05:33:38] <Soni> yes but how do you know something is actually an RSA public key?
[05:34:34] <Soni> so like the challenge is how do you make a cryptocurrency with built-in UBI
[05:35:51] <Soni> one way to do that is to make it proof of stake and make mining give everyone money
[05:35:52] <Soni> but, generally speaking, you wanna discourage address mining, because that's expensive
[05:35:52] <Soni> you wanna rely on proof of stake instead
[05:36:28] <iz> the public key has the product of two primes and the point is that it's very difficult to factor that number
[05:37:03] <Soni> would anyone use a cryptocurrency with built-in UBI? probably not.
[05:37:03] <iz> you don't really check it, you just use it, with the assumption there is a private key that matches it somewhere
[05:38:09] <Soni> iz: yeah but then any two random numbers that multiply up to 16k bits would "work" and that makes address mining way cheaper than it should be
[05:38:17] <iz> so that's prob the main reason RSA key generation isn't a good proof of work -- too difficult to verify the work
[05:38:49] <Soni> unless there are some obvious ways in which RSA breaks if you don't have two actual primes
[05:39:00] <iz> it certainly would break
[05:39:16] <Soni> (and you could use those to invalidate transactions with invalid RSA keys)
[05:39:31] <iz> i'm lost at what you are even thinking now
[05:40:31] <Soni> iz: is there a cheap automated way to make sure two numbers are prime, given only a public key and some ciphertexts/signatures?
[05:41:19] <iz> if those two number happen to be exactly the two numbers used in the public key, sure
[05:41:35] <Soni> without knowing the numbers
[05:41:43] <iz> no
[05:42:06] <iz> how are you going to know if the numbers are prime or not if you don't know the numbers?
[05:42:09] <Soni> no related ciphertext attacks on non-prime private keys?
[05:44:53] <maroon> soni, you're asking how to know if the public key n was created from only 2 primes multiplied together?
[05:46:15] <Soni> maroon: basically, yes
[05:47:04] <maroon> wouldnt it be true that every odd integer would always be N primes multiplied together, where N >= 1 ?
[05:47:57] <Soni> it's "easy" to tell if an alleged public key is prime, but what about telling if N > 2?
[05:48:00] <maroon> but as for identifying what N is, you'd need to strip away factors until you reached sqrt(N), and N keeps getting shrunken each time you find another factor
[05:48:54] <iz> i guess as long as that odd integer isn't prime
[05:48:55] <maroon> as far as i know, there's not away to tell if N=2 or N=3, except for the fix that openssl made for that situation, to avoid always chooseing primes as number-mod-3=1, which would allow telling if N=2 or N=3
[05:49:08] <iz> but you still end up having to check if the number is prime or not
[05:49:13] <maroon> well if it's prime, then N=1
[05:49:29] <iz> well, then it's not 2 primes multiplied together
[05:50:08] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[05:50:25] <maroon> to be clear, to avoid doing pubkeyN mod 3, to tell if openssl used 2 or 3 primes to create it
[05:52:01] <Soni> it's easy to reject alleged public keys that are prime (actually would the RSA math, particularly signing, even hold if what you have is a prime public key? how would you even make that work?)
[05:53:11] <maroon> it wouldnt work because private-key = ivmod(e,phi) and there's no phi because there's no 'q'
[05:53:30] <maroon> rsa also wont work if both primes are the same number
[05:54:24] <Soni> hmm
[05:54:29] <Soni> meh
[05:54:40] <maroon> ivmod(e,phi) = multiplicative inverse of e, modulo phi
[05:55:00] <Soni> second option: just use Ed25519 and require public keys to have a prefix
[05:55:53] <Soni> that's easier to check yeah?
[05:55:59] <iz> lol
[05:56:02] <iz> it's anything
[05:56:16] <iz> any bitstring is valid
[05:56:43] <Soni> iz: point being you'd have to bruteforce private keys until you find one that matches up with the thing with the prefix
[05:56:52] <iz> well, priv keys are
[05:56:55] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 268 seconds)
[05:57:03] <iz> pub keys i think have to be more specific?
[05:57:20] <iz> for ed25519
[05:57:28] <maroon> i dont understand curves very well, but just observing that they're a departure from how DH and RSA work. DH and RSA need really huge modulus to be strong, while curves are trying (and probably succeeding) in having strength while having a MUCH smaller modulus
[05:58:06] <iz> also w/ ECC the math is just bitwise math on bitstrings
[05:58:08] <maroon> if it turns out that there's a way to solve curve math, then a 256-bit curve would be similar to DH256
[05:58:34] <iz> so big number lib and no RSA CRT implementation to get simple power analysis attacked
[05:58:45] <Soni> iz: so basically putting more constraints on the public key = making it harder to generate keys?
[05:59:16] <iz> no, it's still easy to generate
[05:59:20] *** Quits: akaWolf (~akaWolf@akawolf.org) (Read error: Connection reset by peer)
[05:59:34] <Soni> altho fixing prefixes on a thing with 128 bits of security sounds less than ideal
[05:59:42] <maroon> yes, there's additional constraints for RSA that we didn't mention before, like gcd(e,phi) = 1, and gcd(p-1,q-1) = 2
[05:59:44] <iz> you just have to pick points on the curve for public.. it's not that just any random bitstring will do
[05:59:59] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[06:00:16] <Soni> iz: well it takes weeks to generate vanity bitcoin addresses
[06:00:20] <iz> generation is vastly different than verification of something that is possibly malicious
[06:00:24] <maroon> and not a good idea for q-1 or p-1 to have a lot of small factors
[06:00:47] <iz> that's because they are trying to get a vanity hash value from a hashing algorithm output
[06:01:30] <Soni> iz: isn't an address = a public key?
[06:01:33] <maroon> yeah, trying to create a DH public key whose mime contains a vanity string somewhere within it, is slow
[06:02:03] <iz> it's not the key generation that is the limiting factor there, it's that they are trying to adjust random values to hope to get a certain output in the hash
[06:02:25] <Soni> iz: isn't an address = a public key?
[06:03:05] *** Joins: akaWolf (~akaWolf@akawolf.org)
[06:03:10] <iz> no, it's a hash
[06:03:32] <Soni> how do you go from an address to a public key then?
[06:03:41] <Soni> (so you can do the whole transaction thing)
[06:04:06] <iz> because you are doing it from a transaction not just from an address
[06:04:32] <iz> which is in the blockchain
[06:05:04] <Soni> so how do you make the addresses a proof-of-work game?
[06:05:41] <iz> not with key generation
[06:05:57] <Soni> isn't address generation just key generation?
[06:06:17] <Soni> and if not, why not?
[06:07:01] <Soni> (to discourage using broken keys?)
[06:07:17] <iz> it's not proof-of-work
[06:11:41] <Soni> okay, well, anyway, the basic idea is that making addresses should be time-consuming and proof-of-stake should benefit every valid address, and it would be nice to have some sort of way of doing both of those things
[06:11:46] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[06:12:34] <yanmaani> proof-of-stake doesn't work
[06:12:57] <yanmaani> but address generation is never a bottlenek
[06:12:59] <yanmaani> why would it be
[06:13:00] <Soni> that's like saying UBI doesn't work
[06:13:12] <yanmaani> no, it's like saying perpetual motion machines don't work
[06:14:02] <Soni> yanmaani: the point being anyone with an address participates in the proof-of-stake, and gaining addresses is hard. "UBI" is the only way to make proof-of-stake work.
[06:14:59] <Soni> chances are nobody would use a system like this, because it benefits everyone. but that's okay, it's worth a try at least.
[06:15:07] <yanmaani> well, so, first off if you split something equally across "every valid address", if the keyspace is 2^64, that's 1 in 18 quintillion
[06:15:36] <yanmaani> 2^64 is barely secure
[06:16:38] <Soni> okay so throw Curve448 at it?
[06:16:51] <yanmaani> so if key gen is the limiting factor for money, you already have a big problem
[06:17:04] <yanmaani> okay, and what is the key space of curve448?
[06:17:08] <Soni> nah, it's inflationary
[06:17:27] <yanmaani> "potentially offering 224 bits of security"
[06:17:29] <yanmaani> 2^224
[06:17:30] <Soni> uh it has 200 bits of security or so?
[06:17:51] <yanmaani> yes, so what is 1 over 2^224?
[06:18:23] <yanmaani> (A: 1 in 26 unvigintillion)
[06:19:07] <yanmaani> but on a more general level, huh?
[06:19:13] <Soni> which means you can easily take 64 bits off of it (which would make address generation impossible for normal ppl, 40 bits is more reasonable) and still have a pretty low probability of the address miners colliding with addresses in use
[06:19:40] <yanmaani> why would proof of stake begin to work with "UBI"?
[06:19:49] <yanmaani> yes, for sure
[06:19:52] <Soni> UBI means all valid addresses gain from proof-of-stake
[06:19:58] <yanmaani> what's "address miners" gain you?
[06:20:14] <yanmaani> In what sense do they gain from it? And how does this solve the inherent issues of proof-of-stake?
[06:20:21] <maroon> so about your earlier question about generating 16k RSA keys, the density of primes at 2^8192 would be 1 per log(2^8192) numbers, or 1 per 5678. so your time for finding RSA primes would depend on how picky you are about which primes are good enough
[06:21:15] <maroon> ie 2^n+1 can be prime, but not good choice for rsa
[06:21:16] <Soni> yanmaani: so, because there's UBI, any block in the chain gives every valid address some amount
[06:21:30] <Soni> so the chain depth = the starting value for an address
[06:22:00] <yanmaani> right, but that would be absurdly low
[06:22:01] <Soni> mining addresses means generating private keys that correspond to new addresses. this can be made harder by requiring a fixed prefix on the addresses.
[06:22:25] <Soni> now, there are enough addresses for everyone.
[06:22:37] <yanmaani> if there's 2^224 possible addresses, and each block has a reward of 500 million dollars, then 500,000,000 over 2^224 is not a lot of money
[06:22:39] <Soni> and the proof of stake is simply easier
[06:22:49] <yanmaani> yes, this is the other problem
[06:22:52] <Soni> so ideally this discourages address mining
[06:22:55] <yanmaani> proof of stake doesn't work
[06:23:03] <yanmaani> so how does your proposal fix the issues with it
[06:23:13] <Soni> yanmaani: if there's 2^224 proof of stake participants, how does it not work?
[06:23:46] <Soni> also any amount over any huge amount is not a lot of money
[06:24:06] <Soni> at those scales, it's easier to think about what individual addresses would gain
[06:24:37] <Soni> also note that there's a fixed block size so if you're spamming transactions (from mined addresses) and not participating in the proof of stake your transactions won't actually go anywhere
[06:25:15] <yanmaani> Soni: Because proof of stake is fundamentally flawed, no matter the participants.
[06:25:20] <Soni> (and yes that's how you DDoS the network but this isn't meant to be a practical/usable network, but more of a practical thought experiment)
[06:25:51] <yanmaani> if the individual addresses are to gain $1, then you need a block reward of 26 undevigillion or something
[06:26:04] <yanmaani> unvigintillion, is what they call it these days
[06:26:20] <Soni> yanmaani: this is text on a computer screen, one needs no such thing
[06:26:35] <Soni> one simply needs to check the chain depth to calculate the base amount
[06:28:09] <yanmaani> this is crackpot stuff mate - are you suggesting each address gets registered on the chain, and from that point on it starts getting the $$$?
[06:28:11] <Soni> "the chain is at depth 30, and this address has never been seen before. so this address has 30*1000 coins at this point. this transaction [adds/removes] 100 coins."
[06:29:02] <Soni> yanmaani: nah the current global chain depth is what gives addresses their "starting" amount
[06:30:25] <Soni> "the chain is at depth 300, and this address has spent 10000 coins before. this address has 300*1000-10000 coins at this point."
[06:31:53] <Soni> this UBI/chain depth thing is the only way for proof-of-stake to work
[06:32:04] <Soni> because it's the only way to make sure everyone participates
[06:32:35] <yanmaani> I mean, OK, now you just have a strange version of PoW where the difficulty is static, but that works.
[06:32:50] <Soni> or you could just not mine addresses
[06:32:57] <yanmaani> But the problem with PoS isn't that not everyone participates, it's that it doesn't produce a consensus.
[06:33:08] <Soni> (which is inefficient anyway, because doing so DoSes the network)
[06:33:09] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[06:33:13] *** Joins: frost (~frost@user/frost)
[06:33:21] <yanmaani> So even if everyone participates, you still don't have a consensus mechanism.
[06:33:52] <Soni> "trying to PoW causes DoS" is the best way to prevent PoW
[06:37:28] <yanmaani> what problem are you trying to solve here
[06:37:58] <yanmaani> because it seems to me like you've found a series of cryptographic primitives that seem vaguely intriguing and are trying to string them together in a way that dosn't fundamentally make sense
[06:45:17] <Soni> simpler idea: make blocks smaller with increased hardness
[06:45:33] <Soni> still PoW but it uses the same PoW=DoS technique
[06:46:21] <Soni> you just gotta prevent mining to make your power usage go down
[06:50:54] *** Quits: Malvolio (~Malvolio@user/malvolio) (Quit: brb)
[06:56:39] *** Joins: Malvolio (~Malvolio@user/malvolio)
[07:13:04] <yanmaani> you've entered into the shadow realm of vagueposting my homie
[07:18:20] *** Quits: JollyRoger (~JollyRoge@user/thejollyroger) (Quit: JollyRoger)
[07:23:19] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[07:49:44] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:54:41] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 245 seconds)
[08:00:14] *** Quits: kj7rrv (~kj7rrv@72.173.20.27) (Read error: Connection reset by peer)
[08:00:33] *** Joins: kj7rrv (~kj7rrv@72.173.20.27)
[08:04:42] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[08:07:40] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Client Quit)
[08:09:22] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[08:22:46] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[08:29:18] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[08:29:53] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[08:43:39] *** Quits: kj7rrv (~kj7rrv@72.173.20.27) (Read error: Connection reset by peer)
[08:44:44] *** Quits: ses (uid38151@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[08:52:35] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 264 seconds)
[08:59:13] *** Joins: byteskep1ical (~amnesia@user/byteskeptical)
[09:02:10] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 256 seconds)
[09:29:33] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[09:32:20] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[09:32:39] *** Joins: CryptoClub (~fafs@87.125.251.76)
[09:33:03] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[09:34:42] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[09:34:54] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[09:38:49] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[09:47:28] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Remote host closed the connection)
[09:48:26] *** Joins: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck)
[09:52:19] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpygfx98uk74v59.ipv6.telus.net) (Remote host closed the connection)
[10:06:37] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[10:12:57] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[10:14:22] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[10:26:21] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Ping timeout: 245 seconds)
[10:28:39] *** Quits: fxrh (~fxrh@user/fxrh) (*.net *.split)
[10:28:39] *** Quits: cehteh (~ct@git.pipapo.org) (*.net *.split)
[10:28:39] *** Quits: baakeydow (~baake@163.172.145.178) (*.net *.split)
[10:28:39] *** Quits: koolfy (~pi@lfbn-mon-1-797-212.w86-227.abo.wanadoo.fr) (*.net *.split)
[10:28:39] *** Quits: iokill (~dave@static.16.105.130.94.clients.your-server.de) (*.net *.split)
[10:28:39] *** Quits: snappy (~snappy@user/snappy) (*.net *.split)
[10:28:39] *** Quits: rk4 (~r@user/rk4) (*.net *.split)
[10:28:39] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[10:28:39] *** Quits: introom (introom@2600:3c01::f03c:92ff:fea3:2cf) (*.net *.split)
[10:28:39] *** Quits: Lochnair8 (~Lochnair@wireguard/contributor/lochnair) (*.net *.split)
[10:28:40] *** Quits: drocan (~drocan@user/drocan) (*.net *.split)
[10:28:49] *** Joins: fxrh (~fxrh@user/fxrh)
[10:28:53] *** Joins: iokill (~dave@static.16.105.130.94.clients.your-server.de)
[10:28:57] *** Joins: koolfy (~pi@lfbn-mon-1-797-212.w86-227.abo.wanadoo.fr)
[10:29:10] *** Joins: rk4 (~r@user/rk4)
[10:29:11] *** Joins: snappy (~snappy@45.32.228.130)
[10:29:18] *** Joins: introom (introom@2600:3c01::f03c:92ff:fea3:2cf)
[10:29:20] *** Quits: snappy (~snappy@45.32.228.130) (Signing in (snappy))
[10:29:20] *** Joins: snappy (~snappy@user/snappy)
[10:29:24] *** Joins: cehteh (~ct@git.pipapo.org)
[10:29:32] *** Joins: Lochnair8 (~Lochnair@wireguard/contributor/lochnair)
[10:29:44] *** Joins: drocan (~drocan@user/drocan)
[10:29:52] *** Joins: baakeydow (~baake@2001:bc8:65c:2601::1)
[10:30:29] *** Quits: byteskep1ical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[10:31:04] *** Quits: snappy (~snappy@user/snappy) (Client Quit)
[10:31:17] *** Joins: snappy (~snappy@user/snappy)
[10:34:22] *** Quits: martin02 (~silas@2001:4ca0:0:fe00:0:5efe:a96:1bc1) (*.net *.split)
[10:34:22] *** Quits: sol (~toor@oops.root.sx) (*.net *.split)
[10:34:23] *** Quits: mcf (~mforney@netbsd/developer/mcf) (*.net *.split)
[10:34:29] *** Joins: sol (~toor@oops.root.sx)
[10:34:34] *** Joins: mcf (~mforney@netbsd/developer/mcf)
[10:35:01] *** Joins: martin02 (~silas@141.84.69.76)
[10:35:55] *** Joins: qbt (~qbt@user/edun)
[10:38:08] *** Joins: s1b1 (~s1b1@user/s1b1)
[10:40:56] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 245 seconds)
[10:53:23] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[10:53:35] *** Joins: csknk (~csknk@88.87.164.26)
[10:53:50] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[10:58:47] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[11:01:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:02:45] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[11:06:21] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[11:26:48] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[11:41:23] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:46:39] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:51:53] *** Joins: AsenMx (~AsenMx@user/asenmx)
[12:00:07] *** Joins: nb-ben (~ben@user/nb-ben)
[12:00:20] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:01:10] <nb-ben> are there current implementations of public key algorithms that would be quantum resistant?
[12:06:38] *** Joins: andreasbuhr (~quassel@p549dbb0b.dip0.t-ipconnect.de)
[12:06:47] *** Quits: andreasbuhr (~quassel@p549dbb0b.dip0.t-ipconnect.de) (Client Quit)
[12:29:15] *** Joins: andreasbuhr (~quassel@p549dbb0b.dip0.t-ipconnect.de)
[12:29:23] *** Quits: andreasbuhr (~quassel@p549dbb0b.dip0.t-ipconnect.de) (Client Quit)
[12:36:45] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[12:48:27] *** Joins: mononote (~mononote@user/mononote)
[12:49:42] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[12:50:01] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[13:07:15] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[13:18:05] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:18:52] *** Quits: lord| (~lordpipe@user/lordpipe) (Ping timeout: 256 seconds)
[13:20:34] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[13:25:48] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[13:42:46] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[13:46:17] *** Joins: CryptoClub (~fafs@87.125.251.76)
[13:47:51] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[13:55:15] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 250 seconds)
[13:55:54] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:13:24] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 265 seconds)
[14:13:37] *** Joins: gabriel1_ (~gabriel1@pop.92-184-110-160.mobile.abo.orange.fr)
[14:13:47] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:15:19] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[14:15:19] *** Quits: gabriel1_ (~gabriel1@pop.92-184-110-160.mobile.abo.orange.fr) (Read error: Connection reset by peer)
[14:16:03] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 250 seconds)
[14:16:37] *** Joins: gabriel1_ (~gabriel1@37.171.226.175)
[14:20:42] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[14:31:39] *** Joins: gabriel1__ (~gabriel1@pop.92-184-110-160.mobile.abo.orange.fr)
[14:33:54] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:34:11] *** Quits: gabriel1_ (~gabriel1@37.171.226.175) (Ping timeout: 265 seconds)
[14:34:39] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[14:35:41] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[14:47:31] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[14:57:44] *** Quits: funabashi (funabashi@185.52.0.236) (Ping timeout: 268 seconds)
[14:58:10] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[15:04:03] *** Joins: funabashi (funabashi@185.52.0.236)
[15:04:51] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:301e:cfcd:47ee:8af2)
[15:17:49] *** Joins: darsie (~darsie@84-113-55-200.cable.dynamic.surfer.at)
[15:22:56] *** Parts: darsie (~darsie@84-113-55-200.cable.dynamic.surfer.at) (No boundaries on the net!)
[15:28:58] *** Parts: nb-ben (~ben@user/nb-ben) ()
[15:31:13] *** Quits: csknk (~csknk@88.87.164.26) (Ping timeout: 265 seconds)
[15:37:18] *** Quits: gabriel1__ (~gabriel1@pop.92-184-110-160.mobile.abo.orange.fr) (Read error: Connection reset by peer)
[15:46:46] *** Joins: RickSanchez (~RickSanch@2607:fb90:1d65:509f:f829:feee:5fb4:c4b2)
[15:50:49] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[15:52:35] *** Quits: RickSanchez (~RickSanch@2607:fb90:1d65:509f:f829:feee:5fb4:c4b2) (Ping timeout: 264 seconds)
[15:53:03] *** Joins: RickSanchez (~RickSanch@2607:fb90:1d65:509f:f829:feee:5fb4:c4b2)
[15:53:32] *** Quits: RickSanchez (~RickSanch@2607:fb90:1d65:509f:f829:feee:5fb4:c4b2) (Read error: Connection reset by peer)
[16:02:36] *** Quits: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04) (Quit: WeeChat 3.0)
[16:02:36] *** Joins: yewscion98 (~yewscion@72-21-196-65.amazon.com)
[16:02:53] *** Joins: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04)
[16:03:33] *** yewscion98 is now known as yewscion
[16:06:56] *** Joins: machinedgod (~machinedg@24.105.81.50)
[16:08:56] *** Joins: ravan (~ravan@user/ravan)
[16:09:27] *** Joins: Choco (~Choco@host150.200-71-232.telecom.net.ar)
[16:20:18] *** Quits: rustycl0ck (~ircuser@gateway/tor-sasl/rustycl0ck) (Ping timeout: 276 seconds)
[16:28:42] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[16:38:47] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[16:41:21] *** Quits: stiell (~stiell@gateway/tor-sasl/stiell) (Remote host closed the connection)
[16:41:43] *** Joins: stiell (~stiell@gateway/tor-sasl/stiell)
[16:43:26] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[16:45:17] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[16:45:59] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[16:46:21] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[16:51:36] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:51:39] *** Quits: karu (~karasu@puffy.mat.univie.ac.at) (Quit: brb)
[16:55:15] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[16:55:21] *** Joins: son0p (~ff@181.136.122.143)
[16:56:49] *** Joins: csknk (~csknk@88.87.164.26)
[16:56:57] *** Joins: d34dh0r53 (~d34dh0r53@2600:1700:10e0:ecf:5054:ff:fe7c:35f9)
[16:58:00] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:00:17] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 250 seconds)
[17:01:07] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[17:04:14] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:04:25] *** Joins: rtypo (~alex@user/rtypo)
[17:05:57] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[17:07:47] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[17:13:17] *** Joins: karu (~karasu@puffy.mat.univie.ac.at)
[17:15:51] *** Joins: ses (uid38151@hampstead.irccloud.com)
[17:26:56] *** Quits: d34dh0r53 (~d34dh0r53@2600:1700:10e0:ecf:5054:ff:fe7c:35f9) (Quit: ZNC 1.8.2 - https://znc.in)
[17:28:23] *** Joins: d34dh0r53 (~d34dh0r53@2600:1700:10e0:ecf:5054:ff:fe7c:35f9)
[17:30:39] *** Joins: manic_laughter (~manic_lau@2405:201:e030:f044:2302:61df:8e6e:1603)
[17:31:14] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:32:09] <high_ground> yes
[17:32:40] <high_ground> there is one called NTrue I think
[17:34:22] *** Quits: manic_laughter (~manic_lau@2405:201:e030:f044:2302:61df:8e6e:1603) (Client Quit)
[17:34:37] *** Joins: manic_laughter (~manic_lau@2405:201:e030:f044:2302:61df:8e6e:1603)
[17:34:38] *** Quits: rtypo (~alex@user/rtypo) (Read error: Connection reset by peer)
[17:35:11] *** Joins: rtypo (~alex@user/rtypo)
[17:36:17] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[17:39:00] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[17:41:57] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:42:14] *** Quits: manic_laughter (~manic_lau@2405:201:e030:f044:2302:61df:8e6e:1603) (Quit: Leaving)
[17:42:30] *** Joins: manic_laughter (~manic_lau@2405:201:e030:f044:2302:61df:8e6e:1603)
[17:51:07] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[17:56:12] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[17:56:42] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[17:58:25] *** Joins: Douwd (~douwd@nexus.bsdpro.net)
[17:58:57] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[17:59:31] *** Joins: CryptoClub (~fafs@87.125.251.76)
[18:04:16] *** Douwd is now known as Douwd`
[18:06:02] *** Quits: Douwd` (~douwd@nexus.bsdpro.net) (Quit: So long, and thanks for all the fish.)
[18:08:58] *** Joins: ravan_ (~ravan@user/ravan)
[18:11:34] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 260 seconds)
[18:19:00] *** Joins: skidd0 (~homie@184-090-249-090.res.spectrum.com)
[18:19:23] *** Parts: skidd0 (~homie@184-090-249-090.res.spectrum.com) ()
[18:25:38] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[18:27:32] *** Quits: manic_laughter (~manic_lau@2405:201:e030:f044:2302:61df:8e6e:1603) (Quit: Leaving)
[18:37:27] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[18:54:06] *** Joins: kajus (~kajus@200116b845495d0035e4e13366b9ca9c.dip.versatel-1u1.de)
[18:58:24] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[19:07:02] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) (Read error: Connection reset by peer)
[19:07:09] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[19:12:50] *** Joins: zro (~zro@user/zro)
[19:13:02] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[19:13:36] *** Joins: System_Error (~SystemErr@user/systemerror)
[19:18:35] *** Quits: zro (~zro@user/zro) (Ping timeout: 268 seconds)
[19:19:00] *** Joins: zro (~zro@user/zro)
[19:24:11] *** Joins: BSaboia (~bsaboia@187.19.136.126)
[19:43:37] *** Joins: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net)
[19:47:46] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) (Read error: Connection reset by peer)
[19:47:52] *** Joins: uramhoaH (~Haohmaru@195.24.53.110)
[19:48:12] *** uramhoaH is now known as Haohmaru
[19:50:35] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpxyu4ayytnxjx5.ipv6.telus.net)
[20:00:26] *** Quits: zro (~zro@user/zro) (Ping timeout: 265 seconds)
[20:02:18] *** Joins: zro (~zro@user/zro)
[20:10:42] *** Joins: chasmo77 (~chas77@71.63.241.168)
[20:15:00] *** Joins: ravan__ (~ravan@user/ravan)
[20:17:47] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 268 seconds)
[20:18:46] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Ping timeout: 256 seconds)
[20:19:07] *** Joins: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net)
[20:22:45] <taeaad> I think ECC was in part catalysed by the realisation that RSA could be less secure than expected for a quantum enabled adversary. But I am not up to date with what the newest research has to say on the topic.
[20:23:31] <taeaad> The talk of the town about 10 years ago was that "the military is moving to ECC because they are worried about quantum computers".
[20:23:46] <yawkat> ECC is not quantum-resistant
[20:23:53] <yawkat> it is arguably *less* secure
[20:24:02] <yawkat> (against quantum computers)
[20:26:59] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:301e:cfcd:47ee:8af2) (Ping timeout: 250 seconds)
[20:28:55] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:31:35] *** Quits: son0p (~ff@181.136.122.143) (Ping timeout: 264 seconds)
[20:43:25] <maroon> curves were catalyzed by the need for speed. it's faster when your modulus is 256 bits than when it's 8192
[20:43:39] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[20:58:35] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[21:06:57] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[21:11:29] *** Quits: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 265 seconds)
[21:13:41] *** Joins: Douwd (~douwd@nexus.bsdpro.net)
[21:13:51] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[21:24:10] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[21:32:51] *** Quits: qbt (~qbt@user/edun) (Remote host closed the connection)
[21:43:24] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[21:47:25] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[21:48:33] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[21:54:00] *** Quits: Choco (~Choco@host150.200-71-232.telecom.net.ar) (Ping timeout: 256 seconds)
[21:56:52] *** Joins: aleck1 (~aleck@user/aleck)
[21:59:38] *** Quits: aleck (~aleck@user/aleck) (Ping timeout: 256 seconds)
[21:59:38] *** Quits: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net) (Ping timeout: 256 seconds)
[22:00:16] *** Joins: aliosablack (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[22:01:24] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[22:05:15] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[22:05:30] *** Joins: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net)
[22:06:29] *** Quits: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net) (Read error: Connection reset by peer)
[22:07:16] *** Quits: csknk (~csknk@88.87.164.26) (Quit: leaving)
[22:09:16] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[22:09:41] *** Quits: CryptoClub (~fafs@87.125.251.76) (Read error: Connection reset by peer)
[22:14:15] *** Joins: CryptoClub (~fafs@87.125.251.76)
[22:15:27] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[22:17:48] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[22:22:32] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 265 seconds)
[22:23:12] *** Joins: bgs (~bgs@upc.si.94.140.92.241.dc.cable.static.telemach.net)
[22:26:46] *** Quits: azonenberg (~azonenber@2603:3023:241:40f8:216:3eff:fe6c:95a2) (Ping timeout: 245 seconds)
[22:27:35] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Quit: This computer has gone to sleep)
[22:31:02] *** Joins: BSaboia (~bsaboia@187.19.136.126)
[22:31:11] *** Quits: BSaboia (~bsaboia@187.19.136.126) (Remote host closed the connection)
[22:34:46] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[22:35:15] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[22:37:51] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 250 seconds)
[22:40:09] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[22:40:34] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[22:41:25] *** Joins: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca)
[22:42:11] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 250 seconds)
[22:42:47] *** Joins: Choco (~Choco@host150.200-71-232.telecom.net.ar)
[22:45:23] *** Quits: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 264 seconds)
[22:46:50] *** Joins: dna44 (~dna@47-220-190-100.gtwncmkt04.res.dyn.suddenlink.net)
[22:48:27] *** Quits: aliosablack (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Quit: Leaving)
[22:59:58] *** Joins: DPA (~DPA@2a05:41c0:b:db04::a3c:10d)
[23:06:27] <DPA> I got a wired spam mail, I don't know from whom or why. It may use some kind of cypher. I wonder, what does it say? https://bpa.st/KVHA
[23:08:03] *** Joins: sidj (~sidj@user/sidj)
[23:13:40] <sarnold> hah, the subject is the same, base64 -d --> "ufnitbx ybqarzx efhyykt ortipmw"
[23:16:44] <yawkat> note that the domain is also just 7 letters .ch
[23:16:54] <yawkat> maybe someone just piped pwgen into sendmail...
[23:18:01] <DPA> The from name is also 7 letters
[23:25:03] *** Quits: maroon (tinycrypt@user/maroon) (Quit: Insanity: doing the same thing over and over again and expecting different results. --Albert Einstein)
[23:26:45] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697)
[23:36:39] *** Quits: Wulf (~Wulf@user/wulf) (Remote host closed the connection)
[23:37:15] *** Joins: Wulf (~Wulf@user/wulf)
[23:42:31] *** Quits: eruditass (uid248673@uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[23:42:45] *** Joins: azonenberg (~azonenber@gw-ipv4.poulsbo.antikernel.net)
[23:43:05] *** Joins: eruditass (uid248673@uxbridge.irccloud.com)
[23:44:06] *** Joins: rtypo (~alex@user/rtypo)
[23:44:35] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697) (Ping timeout: 250 seconds)
[23:46:31] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697)
[23:48:56] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:49:41] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697) (Remote host closed the connection)
[23:50:05] *** Joins: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697)
[23:57:35] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:7809:8396:63f0:6697) (Ping timeout: 250 seconds)
