[00:00:38] *** Joins: Shiva (~LordShiva@user/one39dev)
[00:00:48] <Decker> that sort of thing ends up with oscillators to give a sense of time; I didn't actually have any buffering either I guess; that was more what dekware objects gain... but they have goto :)  when processing within a node some input v output you get different rules than the system as a whole I think
[00:01:03] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[00:03:08] <ProfSimm> GeDaMo: Decker: what if all reality is "flow based", which means if things cease moving, state disappears, everything disappears. But flow implies information moves at a finite speed, because if it moved instantly flow wouldn't be able to retain state (no delay). Ergo, speed C.
[00:03:11] *** Quits: shiva__ (LordShiva@user/one39dev) (Ping timeout: 256 seconds)
[00:03:27] <Decker> ProfSimm sounds like wolfram's model
[00:04:02] <pyzozord> never heard of flow based programming, it sounds interesting
[00:04:07] <Decker> from a comp sci point of view I think it's highly relatable - if still a little abstract ATM
[00:04:16] <ProfSimm> Decker: I haven't heard his model implying the graph doesn't exist, but it emerges from flow
[00:04:26] *** Joins: sabry (~sabry@197.37.33.107)
[00:04:55] <Decker> ProfSimm if there's no graph, then there's a generator... and there's still something that exists before
[00:04:59] <ProfSimm> Decker: I think his is a graph that is in some state, and he applies reduction to points of it according to rules
[00:05:11] <Decker> that's one application
[00:05:25] *** chiselfu1e is now known as chiselfuse
[00:05:30] <ProfSimm> Decker: while I'm trying to express it's all energy moving around and that movement is the state itself. 
[00:05:47] <ProfSimm> Decker: a pure flowbased programming implies it's all "move semantics' doesn't it, GeDaMo
[00:05:56] <Decker> ProfSimm right; that it was at a location is incidental to having motion
[00:06:55] *** Quits: sabry (~sabry@197.37.33.107) (Client Quit)
[00:08:02] <ProfSimm> Decker: one thing I don't understand about flow programming is how do you synchronize things when a 'box' let's call it, has 4 inputs arriving async from 4 different places. How do these 4 places sync up so the combination is as intended
[00:08:15] <Decker> ProfSimm maybe consider a broader scope of possible systems that might be modeled; I have a history of a relationship with Union Carbide Chemical; they have these huge sprawling refineries of various processes - yes mostly it's shuttling stuff from place to place, but sometimes there's merges that produces new types/streams... but within a process it might have several steps
[00:08:36] <Decker> maybe like filtering sand grades in various systems... you'd keep stepping through a bunch of steps 
[00:09:15] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:4d19:4ce6:713a:9046)
[00:09:21] <ProfSimm> Decker: I think pipelines are easier to think about if the input is information-free, i.e. it's a resource, like grains, oil, sand, chocolate and so on. Like in a factory
[00:09:31] <Decker> it waits until it receives all inputs.  Or relies on a previous state 
[00:09:39] <ProfSimm> Decker: a synchronization problem occurs when the parts are distinct
[00:10:06] <ProfSimm> I guess we need a "combiner" to multiplex multiple inputs into one package
[00:10:26] <ProfSimm> Maybe
[00:10:46] *** Joins: node1 (~node1@user/node1)
[00:10:53] <node1> Hi morning friends.
[00:10:55] *** Joins: yamchah2_ (~yamchah2@user/yamchah2)
[00:11:00] <Decker> ProfSimm https://shapez.io/ :) 
[00:11:01] <bayaz> Title: shapez.io 
[00:11:08] <Decker> sliders, mergers, painters, turners...
[00:11:13] <Decker> combiner
[00:11:21] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[00:12:14] *** Quits: jjt (~jjt@user/jjt) (Ping timeout: 250 seconds)
[00:12:21] <Decker> https://github.com/d3x0r/SACK/tree/master/src/games/dekware/filters did a bunch of stream based transforms for IO ... tcp stream connects to the telnet stream... telnet stream connects to the ANSI stream...
[00:12:22] <bayaz> Title: SACK/src/games/dekware/filters at master ? d3x0r/SACK 
[00:12:22] *** Quits: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:12:23] <nomagno> node1: Who are your afternoon friends?
[00:12:24] <nomagno> And your night friends?
[00:12:28] <ProfSimm> Decker: :)
[00:13:02] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 240 seconds)
[00:13:02] *** yamchah2_ is now known as yamchah2
[00:14:01] <Decker> SO I creeated a bunch of 'portals' in a room, then you could /enter a portal and it would trigger the connect script to a mud...https://github.com/d3x0r/SACK/blob/master/src/games/dekware/scripts/portal#L50-L64
[00:14:02] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:4d19:4ce6:713a:9046) (Ping timeout: 240 seconds)
[00:14:11] <node1> Hello i'm trying to validateÂ  a factors logic in aÂ  set relations, using tables and co-ordinates. But i'm unable to derived any equations. If you think something is common in between this table or cordinates that could help me to derived an equation related to y or x in terms of co-ordinate i would be highly appreciated.
[00:14:14] <Decker> which each portal could have different steps after the login for configuring a character
[00:14:14] <node1> https://jamboard.google.com/d/1sPNDd3rh_Qq63spLXL33X1IG3rWt9Uay8kgxM6KmPB0/viewer
[00:14:16] <bayaz> Title: Maths Sets - Google Jamboard 
[00:15:59] <node1> nomagno I have missed out `good` here sorry for the typo mistake.
[00:16:06] *** Joins: audiocat (~audio@user/audio)
[00:16:14] <nomagno> :P
[00:16:45] <nomagno> It's fine
[00:17:14] <node1> I'm unable to derived an logic(in co-ordinates and table) which i have framed into two set in terms of relations.
[00:17:22] <node1> Could you please help me out.
[00:17:52] <nomagno> If you can provide a description of what you can't achieve, sure
[00:18:16] <node1> Can youÂ  see the google jamboard link?
[00:18:22] *** Joins: y0m0n (~NA@86.121.143.206)
[00:18:33] <nomagno> Oh yes, sorry
[00:18:34] <nomagno> missed it!
[00:18:41] <node1> https://jamboard.google.com/d/1sPNDd3rh_Qq63spLXL33X1IG3rWt9Uay8kgxM6KmPB0/edit?usp=sharing
[00:18:43] <bayaz> Title: Maths Sets - Google Jamboard 
[00:19:37] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 256 seconds)
[00:19:50] <nomagno> node1: What is your issue?
[00:20:09] <nomagno> That seems fine to me
[00:20:27] <node1> The issue is i am looking to derived an equations that satisfied the table given input and output
[00:20:30] *** Quits: horseface (~horseface@user/horseface) (Quit: https://executingreality.com/)
[00:20:35] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[00:21:16] <node1> something like y = mx +x where it proved that y(input ) range has the relations of factors
[00:22:13] <ProfSimm> Decker: is there a way to make algebra practical if every time you read a constant you move it so it no longer is there to be read again
[00:22:44] <nomagno> node1: x =
[00:22:49] <nomagno> sorry, pressed enter too early
[00:22:52] <ProfSimm> Decker: well I guess this is why nature like to invent methods for copying things.
[00:23:15] <node1> Have you checked the second page of the link it has the co-ordinate
[00:23:19] <Decker> ProfSimm you'll mostly likely have to reference it again and if don't say what it is you're referencing there's no way to know which to use?
[00:23:23] <nomagno> Yes
[00:23:34] <Decker> ProfSimm Life is copying things.
[00:23:38] <Decker> (DNA)
[00:23:43] <node1> Great!! i was just trying to see if i can find any relations there
[00:23:51] <nomagno> node1: Is the relation "is a factor of" or "is a divisor of?"
[00:23:55] *** Joins: horseface (~horseface@user/horseface)
[00:24:17] <node1> is a factor of
[00:24:17] <nomagno> It's the same
[00:24:18] <nomagno> my bad
[00:24:25] <nomagno> Yeah no, it's actually the same
[00:24:27] <ProfSimm> Decker: in a homoiconic language we could model all state as constructed functions that return a value every time they're called I guess.
[00:24:44] <ProfSimm> Decker: I think this is how lamdba calculus does it
[00:25:11] <node1> Even relations are nothing but the cartersian product of two sets. And when it comes to cartesian means matrix also
[00:25:37] *** Quits: y0m0n (~NA@86.121.143.206) (Ping timeout: 240 seconds)
[00:25:51] <Decker> ProfSimm sounds like JS... ()=>{} is a pretty brief function notion
[00:26:13] <Decker> though ()=>() works too for things that don't need a ';' ever
[00:26:32] <node1> But let first find the logical relation into co-ordinates and table here if we can derived some wonderful equations that satisfied these two(co-ordinates and table)
[00:28:22] <Decker> Wolfram has a function 'Table[]' that builds nestable objects of relation data
[00:28:39] <Decker> can rally result in a N dimensional array of various sized things
[00:29:14] <nomagno> node1: x mod y = 0
[00:29:16] <Decker> I could see SQL redone with table( a,b, {expresison to relate colums from A and B} ) ?
[00:29:19] <ProfSimm> Decker: if a program is essentially a graph, and a graph is essentially two tables "nodes" and "edges" it means we could encode a language this way, instead of as an AST tree
[00:29:29] <nomagno> Unsure if you want something else
[00:29:34] *** Quits: Tabmow (~tabmow@user/tabmow) (Ping timeout: 250 seconds)
[00:29:36] *** Joins: wildo (~lain6141@119.224.72.222)
[00:30:13] <Decker> ProfSimm 'there is no spoon' really translates to 'there are no edges'
[00:30:45] <ProfSimm> Decker: but, the edges are how to connect the nodes
[00:30:53] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-167-81df4dec - https://znc.in)
[00:31:04] *** Joins: Tabmow (~tabmow@user/tabmow)
[00:31:27] <node1> you said x mod y = ?
[00:31:58] <Decker> ProfSimm connections exist sure... I think I have a scenario...
[00:32:18] <node1> what does x mod y = 0 meant here?
[00:32:28] <nomagno> modulus
[00:32:34] <ProfSimm> Decker: we could replace edges with coordinates in hilbert space, where proximity means influence from node output
[00:32:35] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[00:32:44] <nomagno> It means the remainder of dividing x by y is zero
[00:32:59] <ProfSimm> Decker: good for neural networks, but possibly impossible for programming
[00:33:40] <node1> so it means y is limit
[00:33:42] <Decker> ProfSimm only nodes that can be connected can be connected; there's lots of places the 'edge' can be, but you never have an edge without a node; 
[00:33:56] <node1> integer mode y
[00:33:59] <nomagno> For any two integers x and y for which the equation 'x mod y = 0' holds true, y is a divisor/factor of x
[00:34:04] *** Joins: magla (~gelignite@55d49afb.access.ecotel.net)
[00:34:17] <ProfSimm> Decker: oh an edge in this case is literally just a pair of node ids.
[00:34:25] <Decker> The edge is really a property of the node; and different nodes end up with different ways to represent relations to other nodes
[00:34:43] *** Joins: Burgundy (~NA@86.121.143.206)
[00:34:46] <ProfSimm> Decker: the problem is that it's a property "between" two nodes. 
[00:35:03] <ProfSimm> Decker: we can model it as property of the first node in unidirectional link from first to second node
[00:35:13] <Decker> with a lot of overhead you can generalize that structure so some outside operator can view them easier, without knowing specific objects and what they specifically have for a relation to other things (how they implemented it, or what specific methods on a node they need to use to get the relations)
[00:35:32] <node1> nomagno for example?
[00:35:46] <node1> x=2 and y=6,8,10,12
[00:36:14] <nomagno> No, the input in this case would be y
[00:36:20] <nomagno> let me redefine: y mod x = 0
[00:36:26] <nomagno> 6 mod 2 = 0
[00:36:36] <Decker> Is it worth the generalization in the end?  I'm not so sure... I had abstract lists of entities for an inventory system and relation to other nodes - it was fairly general, even though you could really only hold one thing, it has a list of things that might be in the hand object
[00:36:41] <nomagno> That is, the REMAINDER of dividing 6 by two is zero
[00:36:50] <nomagno> This is so simple I'm unsure I can break it down further
[00:37:04] <nomagno> I could describe the algorithm for integer devision
[00:37:09] <node1> ok
[00:37:10] <Decker> what if there's an inbetween?  Maybe some meta language in the nodes that might be parsed to find the edges, without a general concept of edge on its own?
[00:37:13] <ProfSimm> Decker: it could allow interesting optimization
[00:37:33] <node1> same like 8 mod 2 and others?
[00:37:41] <Decker> Edges as they are discussed in grpah theory are more like nodes - index nodes that contain quick paths to various otherwise distant points in the graph
[00:37:45] <nomagno> https://en.wikipedia.org/wiki/Euclidean_division
[00:37:46] <bayaz> Title: Euclidean division - Wikipedia 
[00:37:50] <Decker> but tat's really a type of node
[00:37:52] <ProfSimm> Decker: having a list of edges in a list makes it trivial to query, serialize and deserialize, transmit
[00:37:58] <node1> so this is the equation it get derived?
[00:38:03] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-37-70-24-250-33.dsl.bell.ca)
[00:38:16] <Decker> ProfSimm I have no issue with any of the above with 0 edges.
[00:38:31] <Decker> no non trivialities I should say
[00:38:36] <ProfSimm> Decker: I don't think you have 0 edges. You just don't separate your edges
[00:38:59] <nomagno> node1: Yes
[00:39:02] *** Joins: Satin (uid193953@user/Seten)
[00:39:08] <nomagno> 8 mod 2 = 0
[00:39:09] <nomagno> now
[00:39:38] <nomagno> 8 = 2 * n +
[00:39:38] <Decker> ProfSimm an edge is just a node that connects two other nodes
[00:39:54] <Decker> all nodes can connect - but that connection isn't a thing itself
[00:40:40] <ProfSimm> Decker: I see node as a black box that takes input and produces output. An edge in contrast is a transparent wire that takes output from node and sends it as input to another node
[00:40:50] <nomagno> 8 = 2 * n + 0
[00:41:05] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[00:41:11] <node1> yes let imaging i have a clock with only 2 hours to represent i.eÂ  1 and 2 if i move clock wise 8 times thenÂ  i will be at the same position
[00:41:17] *** Joins: rvalue (~rvalue@user/rvalue)
[00:41:21] <ProfSimm> Decker: also I don't know about two other nodes. It's rather N other nodes
[00:41:25] <node1> i.e your 0
[00:41:31] <node1> :D
[00:41:38] <nomagno> node1: Yes, that's the entire premise of modular arithmetic
[00:41:39] <Decker> ProfSimm what's the difference?  I can have nodes that are wires (light bulbs with just higher resistance) and make a wire - now what I have no nodes everything's an edge?
[00:41:54] <nomagno> It's used for unsigned integer overflow in computers
[00:42:04] <node1> When i think modÂ  i think in that way :D
[00:42:11] <ProfSimm> Decker: the difference is like the difference between 2*n vs 2^n
[00:42:31] <nomagno> The mathematical symbol is |
[00:42:36] <Decker> ProfSimm not the same as x*n vs x^n
[00:42:53] <nomagno> So, for x = 2, y = 6, 8...: x | y
[00:42:54] <node1> nomagno Thank you very much for making it clea
[00:42:56] <ProfSimm> Decker: you can connect one node to many other
[00:43:06] <node1> clear without of your help i would be always be blind:p
[00:43:08] <node1> :p
[00:44:04] <ProfSimm> Decker: also one problem is if you wanna trace connections backwards, it's not convenient to index them that way if you bundle the connections with the node
[00:44:16] <nomagno> I didn't really do anything, you already knew how modular arithmetic worked, and the definition of a factor
[00:44:38] <ProfSimm> Decker: you can have just one table of nodes, but it's simply more amorphous
[00:44:41] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[00:44:48] <Decker> ProfSimm make them bidirectional then.   YOu'd have the same issue tracing them backwards in a general serarch function sense too
[00:44:55] <ProfSimm> Decker: it means your node can be of any size, depending on the number of connection
[00:45:03] <node1> yes but i was unable to think into that directions
[00:45:19] *** Quits: password2 (~password8@user/password2) (Ping timeout: 256 seconds)
[00:45:27] *** Joins: Telvana (~capo@user/telvana)
[00:46:59] *** Joins: fredd (~fredd@user/fredd)
[00:47:55] <node1> And what about using co-ordinate can we derived any line equations?
[00:47:57] <ProfSimm> Decker: There is another thing with flow-based programming. In functions they always return output back to the caller who gave them input. In flow it's not necessarily the case.
[00:48:10] <ProfSimm> Decker: but ultimately there's a loop isn't it. The user runs the system, they want the output
[00:48:15] <Decker> ProfSimm I suppose that there's an idea of edges is in that you say it's a graph, of nodes.  Edges are more emergant and ephemeral; I've found it's a trap to make every edge a thing itself... 
[00:48:24] *** Joins: lispy (~lispy3@84.69.59.93)
[00:48:42] <Decker> there's a time you call idle() ya.  when any event wakes you up
[00:48:51] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[00:48:58] <Decker> threads don't loop generally.. even though they do
[00:49:23] <Decker> they don't spend their life looping.... the loop is just to get more work.  If no work, sleep - sleep isn't looping
[00:49:38] <hans> Github Copilot gave me a monstrosity, https://paste.debian.net/1228056/
[00:49:42] <bayaz> Title: debian Pastezone 
[00:50:03] <Decker> my game processes I guess have a loop - for rendering to the screen, but even that should be a OnVsync(redraw) and not really a loop
[00:51:37] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[00:51:48] <Decker> ProfSimm in the case of delayed reasponse?  that's actually a really minor modification to the JS Nerual netowrk graph loop.... that allows it to Promise.all[inputs.value] 
[00:51:55] *** Joins: src (~src@user/src)
[00:51:57] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[00:52:18] <Decker> or Promise.all( inputs.map((input)=>input.value) )
[00:52:57] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[00:53:12] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:53:35] <node1> nomagno Can we consider = as reflexive, symmetry and transitive ?
[00:54:20] <node1> In programming when we use assignment operator could it meant as reflexive, symmetry and transitive ?
[00:56:07] *** stella is now known as Rust
[01:02:57] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 240 seconds)
[01:03:00] <Decker> in some languages
[01:03:41] <Decker> but mostly it's an immediate resolution of the right hand and set to the left
[01:03:41] *** Joins: trevors (~trevors@user/trevors)
[01:04:17] *** Joins: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net)
[01:06:21] <node1> Thanks Decker
[01:07:32] <nomagno> = represents equality
[01:08:03] *** Joins: zaher (~zaher@37.48.189.105)
[01:08:22] *** Joins: davros (~davros@host86-184-180-214.range86-184.btcentralplus.com)
[01:08:34] <nomagno> This means that, for any computable expression/number, foo = bar in mathematics is the same as copying the computation of bar into foo, which is what happens in most programming language
[01:09:25] <nomagno> However, for any other use that isn't assignment, like constraints, you're looking at either a different symbol or a different construct
[01:10:05] <ProfSimm> Decker: I don't know if edges are ephemeral. They're the structure of your code
[01:10:25] <ProfSimm> Decker: neuron connections are also quite persistent in the brain. They change, but they don't change every day
[01:11:07] <Decker> ya... the delayed resolve is := I guess in the one I was thinking of
[01:12:17] <Decker> ProfSimm but synapses are nodes and neurons are nodes and there's space between that they can interact across with static charge fields... the edges in that case are the electron field.
[01:12:29] <nomagno> Decker: depends on the language
[01:12:46] <nomagno> := is for assignment in a few languages
[01:13:02] <Decker> wirth-y ones :)
[01:13:06] <nomagno> Namely ALGOL
[01:13:20] <ProfSimm> Decker: they have diffuse communication, we can include hormones and some neurotransmitters in that number, but that's not where most information is exchanged.
[01:13:50] <Decker> ProfSimm and that diffusion is triggered by...
[01:13:57] *** Joins: duuude (~user@user/duuude)
[01:14:02] <Decker> the diffusion of other things that have fields
[01:14:09] <ProfSimm> Doesn't matter how it's triggered. Most connections are effectively neuron to neuron
[01:15:02] <Decker> via synapse and ganglion
[01:15:14] <ProfSimm> Sure
[01:15:20] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[01:16:06] <vdamewood> Now I need to figure out which will result in more downloads, testing my server deployment scripts while installing updates from public repos, or making my own local repo mirrors.
[01:16:14] <ProfSimm> Decker: don't you find it appealing to edit a big software project the equivalent of millions of lines of C code, as two flat tables.
[01:16:22] <ProfSimm> Decker: , I think it's an interesting idea ;-)
[01:16:31] <vdamewood> Private Repos will be about 48 Gigs of downloads.
[01:16:48] <ProfSimm> Decker: I mean... I guess millions of lines of code is also a table of bytes in the end.
[01:16:58] <ProfSimm> Decker: but hopefully the table rep is more insightful
[01:17:09] <Decker> there have been many code analysis tools - some that were really pretty good that have mostly gone away over the years
[01:17:24] <node1> What's autoconf?
[01:17:31] <ProfSimm> Decker: what is the lesson, we don't wanna analyze our code?
[01:17:39] <node1> I have seen many CÂ  project uses it for compilations
[01:17:44] <vdamewood> node1: A tool to generate build scripts.
[01:18:01] <node1> yes it's very hard to backtrack the code into it
[01:18:42] <vdamewood> As far as I care, autoconf is pretty much obsolete.
[01:18:45] <node1> It's makefile is huge big lines of code, once upon a time i dare to backtrack the makefile and i just loose my hope
[01:18:47] <Decker> ProfSimm I dunno... it ends up never really being the tree you think it is?  I guess an ide like hexrays might be close; at least you end up with a single source of truth for function names, and you rename the function and all other references auto update
[01:19:06] <Decker> but that's for taking somethng existing and indexing it not making new things
[01:19:26] <vdamewood> node1: Autoconf doesn't make big Makefiles. Automake does.
[01:20:08] <Decker> without knowing what inputs you're actually getting to functions you can't build an effective run-graph... you end up graphing all the failure and catch paths which are probably never goingt to get hit, and are just there to satisfy coverage tests
[01:20:08] <ProfSimm> Decker: what bothers me about trees is that they're super neat but they're a lie. AST + variables = graph
[01:20:10] <node1> Might be it's automake.
[01:20:19] <beaky> i like autotools the longest part of the build is always the ./configure script 
[01:20:33] <vdamewood> node1: they are often used together.
[01:21:01] *** Joins: markong (~kvirc@213.146.188.203)
[01:21:39] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[01:21:49] <Decker> ProfSimm https://github.com/acornjs/acorn is used by https://github.com/NeilFraser/JS-Interpreter to run JS... the second part isn't actually that big.
[01:21:50] <bayaz> Title: GitHub - acornjs/acorn: A small, fast, JavaScript-based JavaScript parser 
[01:21:51] <bayaz> Title: GitHub - NeilFraser/JS-Interpreter: A sandboxed JavaScript interpreter in JavaScript. 
[01:22:15] <node1> ok
[01:22:38] <Decker> The first part - acorn parses and generates the AST - was kinda a nice thing, I could get an AST of some script and check for things like while loops, and calling certain thngs like eval(); could almost make a 'ya this code is clean' sort of sanitizer before running foreign scripts
[01:23:05] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:23:21] *** Joins: inlight (~inlight@157.42.200.153)
[01:23:21] *** Quits: inlight (~inlight@157.42.200.153) (Changing host)
[01:23:21] *** Joins: inlight (~inlight@user/inlight)
[01:23:24] <Decker> node1 (autoconf sucks but did a great job when there were 100's of unices to support)
[01:23:53] <node1> unices?
[01:24:21] <Decker> plural of unix?  though
[01:24:21] <ProfSimm> unixae
[01:24:26] <node1> okay
[01:24:28] <Decker> unii
[01:24:36] <node1> I guess FreeBSD is unix
[01:24:55] <Decker> in a permissive general sense :)
[01:25:12] <Decker> don't let a FreeBSD guy hear you say that ; you'll surely be told you're wrong
[01:25:34] <ProfSimm> Decker: all those models of execution, do you think they depend on how we think, or are they fundamenal
[01:26:10] <Decker> ProfSimm mostly the former... models have evolved over time
[01:26:14] <ProfSimm> Decker: can an alien code by just slapping sine waves with different amplitude and frequency together
[01:26:27] <hans> Decker: >FreeBSD is a free and open-source Unix-like operating system descended from the Berkeley Software Distribution (BSD), which was based on Research Unix. 
[01:26:36] <Decker> ProfSimm certainly in an organic sense
[01:26:41] <hans> Unix-Like OS based on Research Unix.. sounds pretty unix-y to me
[01:26:46] <node1> ok
[01:26:54] <ProfSimm> Decker: well I don't know, stacks, ASTs, flow/stream. all kinda have the same root
[01:27:00] <node1> okay i'm off now
[01:27:16] *** Quits: Shiva (~LordShiva@user/one39dev) (Remote host closed the connection)
[01:27:56] <Decker> ProfSimm when you design programmable array logic - all gates process together... it's a different feeling to coding on a model where it's truly parallel
[01:28:06] <Decker> even GPU feels very sequential comparitively
[01:28:08] *** Joins: OneDev (~LordShiva@user/one39dev)
[01:28:11] *** Quits: operateur (~operateur@77-46-222-165.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[01:28:23] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:391c:9275:1cb:f050) (Quit: I have gone to sleep. ZZZzzzâ¦)
[01:29:21] <Decker> and then if you have a dependancy.. you can end up with a delayline sort of bit, that for a few clocks walks through some gates so it's available just a clock later
[01:29:33] *** Quits: user51 (~user51@176.228.148.215) (Remote host closed the connection)
[01:29:56] *** Quits: fredd (~fredd@user/fredd) (Read error: Connection reset by peer)
[01:30:01] <beaky> nice i like gpu
[01:30:25] <Decker> I don't :) it's so limited
[01:30:39] *** Quits: tehenderz (~tehenderz@ti0018a400-8251.bb.online.no) (Ping timeout: 256 seconds)
[01:30:46] <Decker> hard to target multiple targets at once - read from many sure
[01:30:48] *** Joins: tehenderz (~tehenderz@ti0018a400-9578.bb.online.no)
[01:32:16] <ProfSimm> Decker: so what's a language for programming those
[01:32:35] <Decker> some sort of ladder logic... and/or a lot of boolean expressions
[01:33:07] <Decker> inputs have fixed names, outputs have names, internal gates can be assigned names in the language... but all that goes away when it compiles
[01:33:33] <ProfSimm> Decker: this bothers me. That we need names.
[01:33:48] <Decker> depending on the chips- multiple signals can be groups into integer like values
[01:33:49] <ProfSimm> Decker: how to get rid of names and order. 
[01:34:05] <ProfSimm> Decker: replace everything with random squiggles
[01:34:12] <Decker> https://duckduckgo.com/?q=wire+wrap+board&iax=images&ia=images ya.
[01:34:13] <bayaz> Title: wire wrap board at DuckDuckGo 
[01:34:14] <Decker> good plan.
[01:34:19] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[01:34:47] <ProfSimm> Decker: our brain needs a way to assign meaning to a symbol. That symbol doesn't have to be a word or a name
[01:34:58] <ProfSimm> Decker: but it needs to be some pattern that stands from the rest
[01:35:07] <Decker> No- I think symbols will eventually pervail
[01:35:11] <Decker> but it'll be a few generations
[01:35:29] <ProfSimm> Decker: well names are already symbols. Just kinda specific ones
[01:35:40] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:35:42] <ProfSimm> Decker: how do we generalize the idea of a symbol wihout words
[01:35:53] <Decker> I think that's called iconoglyph :) 
[01:36:05] <Decker> can even draw on heiroglyphics
[01:36:21] <ProfSimm> sigyls
[01:36:31] <Decker> emoji
[01:36:33] <ProfSimm> sigil*
[01:36:56] <Decker> :firecracker: :(
[01:37:09] <Decker> ð§¨
[01:37:15] <Decker> for throw
[01:37:15] <ProfSimm> Decker: the reason we use words is to use a shortcut so we can borrow meaning of the name from something else so we know what it is by the name alone
[01:37:26] <Decker> they don't have a old bomba type bomb
[01:37:34] <Decker> or a black kettle - thye have soup though  :(
[01:37:46] <Decker> I guess there's a lot of concepts missing
[01:38:08] <ProfSimm> Decker: do Chinese people have so many symbols because they're smart or because it didn't occur to them to use less
[01:38:13] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[01:39:21] <Decker> hmm I think I'm just goin to say 'no.' and uhh yah I don't know
[01:39:39] <ProfSimm> It's unclear.
[01:39:51] <ProfSimm> It's much better for fonts to have 26 chars than a 1000 chars
[01:39:58] <ProfSimm> But that's about it
[01:40:16] <ProfSimm> I think phonetic-like encoding of words is better because it has more sharing.
[01:40:35] <ProfSimm> Like we use English words to share meaning with words we already know, writing them how they sound shares meaning.
[01:40:43] <Decker> remembering 5 thngs in a row or 5 things that are distinct in the same spot doesn't seem all tha different
[01:41:08] <ProfSimm> In other words it's easier to remember things that rhyme
[01:41:18] <Decker> it's not like the lines are just in any order - there's a specific order to the whole glyph - which if you don't learn how it was written you'd never know after the fact
[01:41:21] <ProfSimm> Not literally, but across semantic spaces
[01:41:41] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[01:42:59] <ProfSimm> Aren't immutable variables the same as mutable one if we imagine every var name is invisibly appended with current time when assigned
[01:43:18] <ProfSimm> foo20:13:42.0128
[01:43:23] <Decker> sure
[01:43:39] <ProfSimm> So why aren't they referentially transparent
[01:43:50] <Decker> to what?
[01:43:56] <Decker> in what way
[01:44:42] <ProfSimm> I think compilers actually do this exact thing. If you assign 3 times to foo, it becomes internally foo1, foo2, foo3
[01:44:52] <ProfSimm> Before it becomes registers or whatever
[01:45:18] <Decker> https://docs.microsoft.com/en-us/dotnet/api/system.data.datarow.item?view=net-6.0#system-data-datarow-item(system-data-datacolumn-system-data-datarowversion)
[01:45:18] <bayaz> Title: DataRow.Item[] Property (System.Data) 
[01:45:29] <Decker> could do something like add an option object to the indexer ?
[01:45:32] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[01:45:50] <Decker> I had started to implement that in JS...
[01:46:00] <node1> Any other network or discord where i can ask for maths related problem?
[01:46:16] <Decker> but then JS itself is such a good ORM I didn't really need all the schema around it, and I could just sorta scribble out problems with datasets
[01:46:20] <ProfSimm> Decker: what indexer
[01:46:51] <ProfSimm> JS would be an excellent ORM if it had values, not objects :P
[01:47:00] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Remote host closed the connection)
[01:47:14] <Decker> node1 that relation group thing?
[01:47:32] <Decker> ProfSimm but that it has objects, it can make values - it even has getters
[01:47:38] <Decker> like .value isn't a value :)
[01:47:47] <Decker> it's a function thta looks on the stack and returns the most recent value
[01:48:24] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:106:253c:5943:daf8)
[01:48:30] <Decker> ProfSimm BUT... to go back to stack and queues.  They are great you can think of just the end points - but there are times you want to interact with the midele
[01:48:45] <Decker> 1) have I already enqueued this to do work (is it still outstanding?)
[01:48:52] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[01:49:01] <Decker> 2) has this already been processed, if so skip (stack tracking usually) 
[01:49:25] *** Joins: ugjka (~ugjka@ugjka.net)
[01:49:26] <ProfSimm> Decker: in js you can only emulate values clumsily with immutables
[01:49:30] <Decker> having a stack.peek(n) where N is 0-N or -1- -N to look within the stack is handy.
[01:49:43] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[01:49:54] <Decker> ProfSimm there's an npm for that?  deepclone?
[01:49:55] *** Quits: Tabmow (~tabmow@user/tabmow) (Ping timeout: 256 seconds)
[01:50:11] <ProfSimm> Decker: to have a value act like a value cloning should be automatic
[01:50:13] <Decker> I find it a waste of space to have values
[01:50:29] <Decker> ProfSimm that's called a factory :)
[01:50:32] <ProfSimm> Decker: it's not a waste of space with COW
[01:50:37] <Decker> or ... memoizing
[01:50:54] <node1> Decker which one?
[01:51:01] *** Joins: Tabmow (~tabmow@user/tabmow)
[01:51:10] <Decker> node1 1?
[01:51:18] <Decker> oh
[01:51:22] <node1> Yes
[01:51:26] <Decker> jamboard google something
[01:51:54] <Decker> what math thing?  I see you did find ##math
[01:52:17] <node1> Oh i was having a question related to co-ordinate system, actually i'm just trying to related set relation logic using co-ordinates
[01:52:21] <Decker> there's also SOme1 (summer of math expo?) that 3blue 1 brown, there's a discord... 
[01:52:23] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[01:52:38] <Decker> https://discord.gg/gc3zAt5b
[01:52:38] <bayaz> Title: Join the 3Blue1Brown Summer of Mathematical Exposition Discord Server! 
[01:53:05] <node1> Thanks for sharing Decker i must joined it
[01:54:29] *** Joins: trevors (~trevors@user/trevors)
[01:54:50] <epony> technically "copy-on-write" is a space-waste schema of data-store at least at the time of write
[01:56:00] <ProfSimm> epony: copy-on-write occurs only when the value is non-unique, in which case the storage is smaller or identical to having to clone your object, or lensing into an immutable
[01:56:28] <ProfSimm> epony: COW doens't imply editing a tree of hashmaps, for example, duplicates the entire tree. What gets copied is only the part that's changed
[01:56:32] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[01:57:18] <epony> wishful thinking is good to some extent too ;-)
[01:58:03] <ProfSimm> epony: unclear what you mean
[01:58:17] *** Joins: jjt (~jjt@user/jjt)
[01:58:27] <Decker> I feel there should be a lot of words starting with 'look....' 
[01:58:40] <epony> reread "copy-on-write" wastes space  Jan23 0020<ProfSimm> Decker: it's not a waste of space with COW
[01:59:05] <Decker> epony now convince me of a use for COW in the first place?
[01:59:23] *** Quits: magla (~gelignite@55d49afb.access.ecotel.net) (Quit: Stay safe!)
[01:59:26] <Decker> that's not often just 'RO'
[01:59:33] <epony> that's someone else's position, I am not a proponent of that idea
[01:59:35] <Decker> or compute once, read many
[01:59:56] <Decker> sure don't mean to drag you in :) .... ya sure I get that
[02:00:15] <epony> you convince you and each other, just a incorrect claim is seen and commented when it just stands out
[02:00:34] <epony> nothing special ;-)
[02:01:55] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:01:56] <ProfSimm> epony: I still don't understand what's incorrect
[02:02:59] <epony> https://en.wikipedia.org/wiki/Copy-on-write#In_computer_storage
[02:02:59] <bayaz> Title: Copy-on-write - Wikipedia 
[02:04:19] <epony> it's wasteful and that is advertised as a "good" thing, but is dubious at best
[02:04:21] *** Quits: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net) (Quit: Textual IRC Client: www.textualapp.com)
[02:04:30] <ProfSimm> epony: what's wasteful
[02:04:52] <Decker> well that I would have to copy it instead of just writing
[02:05:06] <epony> COW data schema and manipulation is, both on CPU cycles, on MEM and DISK (storage pri and sec)
[02:05:12] <ProfSimm> epony: when processes communicate without shared memory, value semantics are the only possible approach. If you use COW it means you have the same semantics whether you share memory or not, and shared memory becomes an optimization of the same semantics.
[02:05:19] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[02:05:24] <ProfSimm> epony: this is incorrect.
[02:05:34] <epony> wow ;-)
[02:05:42] *** Joins: debayer948 (~debayer@76.82.226.116)
[02:05:47] <epony> we have a believer here
[02:06:15] <Decker> do you have shared memory or not?
[02:06:18] <ProfSimm> epony: the mistake you make is thinking about COW in isolation without realizing how it changes your code, i.e. you no longer have to coordinate shared mutable state, which is the biggest source of bugs and tech debt
[02:06:48] <Decker> writing code is the biggest source .....
[02:07:03] <ProfSimm> epony: sure if you modify a second reference, at that exact moment you incur extra hit rather than modifying something in-place. But outside that exact moment your overall code looks quite differently. 
[02:07:11] <epony> the mistake is yours ;-) since you like new as "adopted technique" without the resultant effects on the costs of that
[02:07:40] <epony> and trying to convince everyone that there is no such effect is just not enough correctness in the evaluation
[02:07:47] <ProfSimm> You use COW whether you realize it or not. Ever forked a process? You used COW
[02:08:17] *** Quits: tehenderz (~tehenderz@ti0018a400-9578.bb.online.no) (Ping timeout: 240 seconds)
[02:08:27] <nomagno> Everything would be easier if all systems just surrendered all their memory!
[02:08:36] <epony> for storage however, that is just dead weight on physical machines, really huge costs
[02:08:46] <nomagno> No segfault, all memory addresses are valid
[02:08:48] <nomagno> :D
[02:08:58] *** Joins: tehenderz (~tehenderz@ti0018a400-9591.bb.online.no)
[02:09:05] <epony> "eat the world" ;-)
[02:09:09] <nomagno> What? OS you say? Pfff
[02:09:30] <ProfSimm> epony: when someone uses it for storage, they do it so you have access to the old state, whether to implement transactions, or something else. Calling it dead weight is just ignorant. Obviously if you don't need it... don't use it
[02:10:01] <epony> it's wrong to claim COW is not a waste of space, while it is
[02:10:31] <ProfSimm> epony: calling it a waste implies COW is just some random decision for the hell of it, with no properties and features.
[02:10:46] <epony> that's right the full evaluation is "where?"
[02:10:48] <ProfSimm> epony: furthermore I wasn't talkig about "storage"
[02:11:02] <epony> yeah, just COW is mostly a storage effect
[02:11:11] <epony> memory is storage too, you know
[02:11:40] <epony> at the time of "transaction" you trade space for speed
[02:11:48] <epony> that's it, it is wasteful
[02:11:48] <ProfSimm> epony: again, have you ever forked a process.
[02:12:01] <ProfSimm> I guess everyone's an idiot except you
[02:12:13] <epony> ProfSimm, oh come on, you know you're not forking on WIN/DOS, you're spawning
[02:12:35] <ProfSimm> epony: 1) don't deflect the question 2) windows also uses COW on memory pages
[02:12:55] <epony> there is no question, COW is wasteful on space, get it? ;-)
[02:13:25] <Decker> unless you know how to release all that memory you now have mapped
[02:13:27] <epony> it's also weight on time, and you compensage the wasted space with processing around
[02:13:34] <epony> right
[02:13:49] <epony> there is the fuller evaluation that has to happen for assessment of the cost
[02:13:54] <ProfSimm> The whole idea behind COW is to NOT duplicate areas that are the same.
[02:14:04] <Decker> except it duplicates them all.
[02:14:07] <Decker> ALL
[02:14:12] <epony> and has to process back
[02:14:20] <ProfSimm> Decker: that's just stupid.
[02:14:26] <ProfSimm> Do you folks even know what COW is...
[02:14:34] <Inline> copy on write
[02:14:50] <Decker> if it doesn't have a copy how does it have the ability to read it?
[02:15:01] <Decker> the mapping is duplicated
[02:15:02] <epony> it's good for your soul ;-)
[02:15:08] <ProfSimm> Decker: by reference.
[02:15:16] <bjs> Decker: I think you and ProfSimm are talking past each other
[02:15:21] <ProfSimm> Decker: honestly this is like not knowing at all how COW works..
[02:15:23] <bjs> of course the mapping is duplicated, but the actual memory is not
[02:15:24] <Decker> and when it doesn't want to - there'a all that mapping that doesn't map anything useful
[02:15:40] <ProfSimm> Decker: the mapping... is like a pointer.
[02:16:06] <ProfSimm> Decker: its storage is effectively 0
[02:16:06] <Decker> a list of pointers
[02:16:15] <Decker> a whole scattered list of fragments
[02:16:41] <ProfSimm> So what's your alternative? Let's just copy few megabytes of data just to read it?
[02:16:57] <hans> yeah lets do that
[02:17:03] <ProfSimm> All right.
[02:17:04] <beaky> is hsa the standard for low level general purpose gpu programming http://hsa.glossner.org/wp-content/uploads/2021/02/HSA-Runtime-1.2.pdf
[02:17:04] <bayaz> Type: application/pdf Size: 2.6 MB 
[02:17:08] <ProfSimm> I'll just download more RAM
[02:17:11] *** Quits: murii (~murii@2a02:a58:835a:1100:48e:c12e:a5c8:6d73) (Remote host closed the connection)
[02:17:23] <epony> modern hardware can accommodate the excess load, but that does not mean it is a trade for space, it is a trade for speed
[02:17:47] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[02:18:01] <epony> (an old story, really, just propagates from primary to secondary storage too)
[02:18:24] <ProfSimm> https://www.studytonight.com/operating-system/copyonwrite-in-operating-system
[02:18:26] <bayaz> Title: Copy-on-Write in Operating System - Studytonight 
[02:18:30] <Decker> dont copy?
[02:18:37] *** Quits: Camilo (~hugh@host-92-1-126-125.as13285.net) (Ping timeout: 256 seconds)
[02:18:44] <ProfSimm> Decker: to say "
[02:19:07] <epony> "how dare you!"  --gerty
[02:19:07] <bjs> Decker: Copy-on-Write means two programs can read the same memory without actually copying the memory.  Once one of them needs to write to it, then it must be copied.
[02:19:09] <ProfSimm> Decker: to say "don't copy" means to not understand at all why independent snapshot was needed in the first place
[02:19:36] <ProfSimm> Decker: what happens if you don't copy and two processes now are tweaking each other's memory. 
[02:19:39] <Decker> bjs yes, there's still a managment overhead of that memory - and surely if you use it that's great, but what about when you don't ?
[02:19:46] <ProfSimm> Decker: random corruption and kernel panic
[02:19:53] <Decker> in the case of being a fork of say apache, when youre a CGI program that returns current date?
[02:20:04] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:20:35] <Decker> ProfSimm what does that have to do with developing a process that uses values ?
[02:20:38] <bjs> Decker: what do you mean, when you don't use it?
[02:20:46] <Decker> I really feel this whole thing is fairly derailed.
[02:20:55] <bjs> Decker: if you don't read or write it, then no memory gets copied.  This is how Linux works when it makes a new process
[02:20:59] <ProfSimm> Decker: check how Swift uses COW fo values
[02:21:40] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:21:44] <ProfSimm> Decker: the idea is values are passed by copy. This gets expensive for large values, and COW fixes that problem.
[02:22:17] <ProfSimm> Decker: it's identical to "persistent data structures" in FP, but without the ceremony. You work with values as if they're full copies, but they mostly share the same memory
[02:22:30] <Decker> who passes values and finds value in doing such?
[02:22:37] <bjs> Decker: inside Linux is a bit of data (maybe a couple MB in the worst case) that says how all of memory is chopped up for that process, what parts are read-only and what parts are writeable. This is the management Linux needs to do for processes.
[02:22:46] <bjs> a bit of data for each process*
[02:22:52] <ProfSimm> Decker: it's essential in a whole class of models, like Actor system for example (think Erlang)
[02:23:18] <ProfSimm> Decker: with Actors you don't know if the actor is running on the same machine or not. 
[02:23:19] <Decker> for communicatgions - on the edge boundaries
[02:24:22] <ProfSimm> Decker: not to mention how much more natural code is in general with values rather than by reference. Who likes shared mutable state/
[02:24:24] <ProfSimm> Do you?
[02:24:43] <ProfSimm> i don't :P
[02:26:04] *** Joins: Pickchea (~private@user/pickchea)
[02:28:38] <Decker> why would you have anything else?  so you can justify complex overhead to not copy ?
[02:28:55] *** Quits: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[02:29:17] *** Quits: jjt (~jjt@user/jjt) (Ping timeout: 240 seconds)
[02:30:03] *** Quits: bememory (~Administr@113.25.24.203) (Read error: Connection reset by peer)
[02:30:09] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 256 seconds)
[02:32:19] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[02:32:57] *** Quits: pizdets (~pizdets@183.182.110.154) (Ping timeout: 240 seconds)
[02:33:03] *** Joins: jjt (~jjt@user/jjt)
[02:33:20] *** Quits: OneDev (~LordShiva@user/one39dev) (Quit: Leaving)
[02:33:43] *** Joins: pizdets (~pizdets@183.182.111.1)
[02:34:02] <ProfSimm> Decker: I'm not sure what you're saying. It reads like someone arguing stacks are big and slow so let's go back to goto.
[02:34:49] <Decker> what does any of that have to do with values?
[02:35:21] *** Parts: jjt (~jjt@user/jjt) ()
[02:35:21] <Decker> if you dno't want to change something don't?  I mean the whole point of having a program is so it can change something into something else
[02:36:02] *** Joins: jjt (~jjt@user/jjt)
[02:36:13] <logiz> gotos? lets go back to continuations
[02:36:18] <Decker> hamstringing yourself doesn't seem productive - anyone could code the universe in lang XXX (they haven't yet but sure they could) 
[02:37:05] <Decker> execution stacks are wide distributed things with muultiple entry points - that each run top down code 
[02:37:30] <Decker> if they have a loop, it's a syntax error(?) (add some es lint rule for 'no for loops'?)
[02:37:37] <Decker> what kind of sanity is that?
[02:38:09] <Decker> I mean sure, map and reduce are great too, and even foreach but... 
[02:38:21] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[02:38:30] <Decker> having to use while() just' cause?
[02:38:42] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 250 seconds)
[02:38:44] <ProfSimm> Decker: COW is not hamstringing yourself, it's reverting back to the most natural semantics: values. References are always local, and an artifact of the C family of pointer-oriented languages.
[02:39:04] <bjs> Decker: im not sure what you're trying to argue.
[02:39:38] <ProfSimm> The problem is that modifying things by reference is very narrow and very fragile.
[02:39:47] <Decker> ProfSimm References are such a horrible thing - Bullet3 is based on them... so everything is copied somehwere else 
[02:39:52] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[02:39:52] <Decker> it's so wasteful
[02:40:06] <ProfSimm> I don't know what Bullet3 is
[02:40:56] <ProfSimm> Decker: in any case... any system reliant on COW can also have move semantics, which prevents copying anything 100% of the time
[02:41:01] <ProfSimm> Is this the best of both worlds?
[02:41:05] <Decker> https://pybullet.org/wordpress/ I guess he's bcome pybullet?
[02:41:05] <bayaz> Title: Bullet Real-Time Physics Simulation | Home of Bullet and PyBullet: physics simulation for games, visual effects, robotics and reinforcement learning. 
[02:41:28] <Decker> ProfSimm the other option is don't copy things :)
[02:42:01] <ProfSimm> The point here is 1) if you move it you don't copy it 2) if it's immutable, you don't copy it 3) if you share it and read it, you don't copy it 4) if you share it and write it, you don't copy ALL of it, but only the modified part
[02:42:17] <ProfSimm> How can we have a system literally designed to REDUCE and ELIMINATE copying, and you all complain about copying?
[02:42:46] <Decker> right - seeems like a lot todo about nothing
[02:42:46] <ProfSimm> It's like not understanding what COW is
[02:43:10] <ProfSimm> Decker: you literally don't have to do anything.
[02:43:57] <ProfSimm> COW is not manual, it's automatic
[02:44:21] <bjs> Decker: what are you trying to argue exactly?  it's not very clear
[02:44:42] <ProfSimm> bjs: I've the feeling there's just some meme going around to hate COW for some reason
[02:45:19] <Decker> I'm not hating on it; I'm hating on the logic that thinks it's nessecary or good that it is a thing
[02:45:54] <ProfSimm> So you don't hate it you just hate others don't hate it. OK
[02:46:04] <bjs> Decker: the point here is that in Unix-y systems you have a fork() operation which turns 1 process into 2 that are supposed to be identical copies of one-another.
[02:46:18] <bjs> Decker: if you dislike CoW because of the Copy part, then it's not really CoW you dislike but fork()
[02:46:20] <Decker> the whole idea that passing values is in general a great idea is flawed
[02:47:01] <ProfSimm> Decker: you're going against most of computing 
[02:47:12] <duuude> lol
[02:47:17] <ProfSimm> Decker: can you express what's the flaw exactly
[02:47:50] <Decker> because you get extra copies - more notable if someone writes something to 1 and none of the others update
[02:48:05] <Decker> that it manages to do that efficiently is beside the point
[02:48:14] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[02:48:36] <Decker> if you're working on a project that is duplicating a state (say a chess algorithm) sure the board as a value sorta makes sense - but then you really just have a factory that adds a new state
[02:49:07] <epony> that's the real dramatic problem, most of computing is going towards the needs of big data storage pools and machines, and you pay the price for extra weight in case you adopt that prematurely before your hardware and finances are ready for that
[02:49:09] <bjs> Decker: copy-on-write is a way to create copies of something efficiently, yes. 
[02:49:16] <beaky> so gpus do everything in parallel but then how come the code for it looks very scalar just like programming non-simd x86 https://bpa.st/PKWQ
[02:49:17] <bayaz> Title: View paste PKWQ 
[02:49:30] <bjs> Decker: you just dislike copying things?
[02:49:39] <ProfSimm> Decker: you
[02:49:52] <duuude> ProfSimm: no u
[02:49:53] <Decker> bjs I hate to see people 'I passed this value, and changed it, but when I print it in the caller it's still the same'
[02:50:03] <epony> it's going against your money and resources ;-)  <ProfSimm> Decker: you're going against most of computing 
[02:50:04] <ProfSimm> Decker: you are describing it as if you're on a value system you'll uncontrollably copy your entire program's state by passing it to every function
[02:50:21] <ProfSimm> Decker: you realize you fully control what you pass and what you don'
[02:50:23] <ProfSimm> don't..
[02:50:43] <bjs> Decker: well if it's still the same they didn't change it ;)
[02:50:55] <bjs> Decker: so it's a question of what "change" means and the different ways of "changing" a thing.
[02:50:58] *** Joins: kilitary (~kilitary@188.242.187.4)
[02:51:26] <bjs> classic examples are binding vs mutation, if i re-bind a name to a new value i've not changed (or copied) anything
[02:51:35] <bjs> but the original is still "the same"
[02:51:59] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[02:52:06] <ProfSimm> It's all a habit. You can have a habit to see values as independent, or as objects.
[02:52:23] <ProfSimm> Thing is references are the wrong habit in multithreaded and distributed code
[02:52:36] <ProfSimm> You can't modify something that another thread sees. It's bad news.
[02:52:47] <bjs> Decker: e.g. in python `x = y = []; x = [42]; print(y)`  here y hasn't "changed", but if I go `x.append(42)` instead then y does "change".
[02:53:20] <logiz> it bites you and you cry
[02:53:43] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[02:53:46] <Decker> bjs exactly.
[02:53:57] <Decker> but if you return [].clone()
[02:54:01] <Decker> and change 0
[02:54:05] <bjs> Decker: okay but this isn't anything to do with copying, or copy-on-write or anything.
[02:54:06] <ProfSimm> references are also not serializable. You can only serialize values
[02:54:11] <Decker> then x still has 42 and something else had 40
[02:54:31] <Decker> ProfSimm What.?
[02:54:39] <ProfSimm> Decker: please don't make me explain this. Again
[02:55:02] <Decker> https://github.com/d3x0r/JSOX I have no problem serialzing references.
[02:55:03] <bayaz> Title: GitHub - d3x0r/JSOX: JavaScript Object eXchange format; extended JSON/JSON6 
[02:55:17] <Decker> or deserlialzing
[02:55:46] <ProfSimm> Decker: you're not serializing references in any program's memory space. If you save an object and load it back, everything in your program that had reference to the original now doesn't see your new copy.
[02:55:57] <ProfSimm> Decker: the same will occur with serializing on the wire and so on.
[02:56:07] <ProfSimm> Decker: references exist strictly within their space
[02:56:27] <ProfSimm> Decker: you can maintain internal references like in your JSOX, but that's not the full space those references should be maintained in
[02:56:38] <ProfSimm> Decker: you'd have to serialize your whole program and back. With stack and everything
[02:56:43] <Decker> https://github.com/d3x0r/flatland/blob/main/flatland_client/flatland.classes.mjs and this even tracks that the same object on A is the same object on B.
[02:56:44] <bayaz> Title: flatland/flatland.classes.mjs at main ? d3x0r/flatland 
[02:57:10] <ProfSimm> Decker: meanwhile with values you don't have to track shit. Things just work
[02:58:15] <Decker> *shrug* 'what do they teach kids these dayz' 
[02:59:06] <ProfSimm> In the long run, shared mutable references will be looked at as you using GOTO in your code
[02:59:22] <Decker> there's no free lunch.  
[02:59:23] *** Joins: molson__ (~molson@2001:48f8:704a:123d::75f:1027)
[02:59:30] <Decker> when you need it you need it; and when you don't you don't sure.
[02:59:33] <Decker> same thing .
[02:59:50] <Decker> but more often you don't need it so it's mute in the long run.
[02:59:54] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[03:01:08] *** Hash_ is now known as Hash
[03:01:34] <ProfSimm> Decker: the reality of real-world code is that even in Java where everything (almost) is objects, most objects are created and immediately collected.
[03:02:06] *** Quits: molson_ (~molson@2001-48F8-704A-123D-0-0-75F-1024-static.midco.net) (Ping timeout: 250 seconds)
[03:02:10] <ProfSimm> Decker: shared mutability is not something most code needs. It's just a bad habit.
[03:02:26] <ProfSimm> Tell an avid smoker to stop smoking and they'll get annoyed too.
[03:03:06] <ProfSimm> Values don't stop shared mutable state either. They just make it explicit.
[03:04:53] *** Joins: chenqisu12 (~bhca7d@183.217.201.21)
[03:04:56] <ProfSimm> It's actually very telling that most high performance or parralelizable code dealing with entities uses indirection and "entity id" to refer to objects. Not objects.
[03:05:04] *** Quits: chenqisu12 (~bhca7d@183.217.201.21) (Read error: Connection reset by peer)
[03:05:10] <ProfSimm> This is the same thing you'd do with values
[03:05:55] *** Quits: tehenderz (~tehenderz@ti0018a400-9591.bb.online.no) (Ping timeout: 268 seconds)
[03:06:10] *** Joins: tehenderz (~tehenderz@ti0018a400-9612.bb.online.no)
[03:06:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[03:07:04] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[03:07:43] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:08:09] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:08:33] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[03:09:17] <epony> if you can't convince someone, there is no need to feel bad about it ;-) if you benefit from the effects of automatic dances around inefficiencies trading for speed and space CORRECTLY where it matters, how YOU CHOOSE then you're using a more advanced tooling
[03:09:41] *** Joins: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com)
[03:10:54] <ProfSimm> epony: it's not about convincing anyone, it's the fact you're literally using an OS using COW right now and ignorant of it. Your hardware also uses COW in caching layers, databases use it for transactional logic and so on
[03:11:25] <ProfSimm> epony: what's annoying is people taking benefit of COW every single moment and bashing it out of ignorance
[03:12:18] <epony> ProfSimm, don't call me ignorant, if you can refrain from it, it would be better for the ecosystem ;-)
[03:13:16] <epony> we're not bashing COW, we're criticising ZFS and virtualisation storage overhead and deduplication disasters on snapshots
[03:14:05] <epony> just accept the critique point that "it's not space but performance trade in" with a dynamic effect and move on
[03:14:41] *** Quits: Akuli (~Akuli@82-203-165-119.bb.dnainternet.fi) (Quit: Akuli)
[03:15:05] *** Joins: monkey_ (~user@190.104.116.153)
[03:15:49] <ProfSimm> COW as a technique has nothing to do with the issues specific to ZFS
[03:16:26] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:17:30] <Decker> so how's this math work? 
[03:17:34] <Decker> :/ 
[03:17:50] *** Joins: adder (~adder@user/adder)
[03:18:02] <Decker> I want to sort of cache chunks of displacments for say a galaxy so I don't have to recompute them all all the time
[03:18:41] <Decker> like generally only a few away would really matter anyway... though I suppose for fun I need to figure at least their relative origins..hm
[03:19:42] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Quit: Leaving)
[03:20:20] <epony> the point was, know better and know more of the effects and costs, and how it works and what it trades and the effects on storage, cause it's not just RAM and RAM shuffling has costs too, which are very pronounced and hardware handles inefficiencies, where acceleration has to be pushed and happening, instead of in main processor "dances" with regards to memory management
[03:21:18] *** Quits: jjt (~jjt@user/jjt) (Quit: Lost terminal)
[03:21:30] *** Joins: Atque (~Atque@user/atque)
[03:21:30] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[03:22:21] *** Joins: jjt (~jjt@user/jjt)
[03:22:39] *** Quits: horseface (~horseface@user/horseface) (Quit: https://executingreality.com/)
[03:22:55] <epony> find the COW in the picture:  https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/The_Linux_Storage_Stack_Diagram.svg/1260px-The_Linux_Storage_Stack_Diagram.svg.png
[03:22:56] <bayaz> Type: image/png Size: 268.9 kB 
[03:22:57] *** Joins: monr0e (~monr0e@mail.vixen.international)
[03:23:27] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:24:38] <epony> hint: in the BIO "reactor" ;-)
[03:25:56] *** Quits: duuude (~user@user/duuude) (Ping timeout: 250 seconds)
[03:26:00] *** Quits: kilitary (~kilitary@188.242.187.4) (Quit: entering irc ...)
[03:26:06] *** Joins: horseface (~horseface@user/horseface)
[03:26:35] *** Quits: dudek (~dudek@185.150.236.105) (Read error: Connection reset by peer)
[03:27:05] *** Joins: duuude (~user@user/duuude)
[03:29:58] *** Joins: kilitary (~kilitary@185.193.143.131)
[03:31:11] *** Quits: leonarth (~leonarth@user/leonarth) (Quit: 84R6CDo3S62HkuYSkVXBr7fXp2wn1XRHeQZ8QPrqxbXvfXP33EH4MhueE2ifPcRbbQQhVXPheMD957muhhBtrvs2QKykeA3)
[03:32:33] *** Quits: zaher (~zaher@37.48.189.105) (Read error: Connection reset by peer)
[03:33:26] <ProfSimm> epony: it's all over this picture, in places you don't suspect.
[03:33:40] <ProfSimm> epony: in fact your SSD does something similar to COW
[03:34:13] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:34:17] *** Joins: zaher (~zaher@37.48.185.58)
[03:34:25] <epony> assuming I am an SSD person again ;-)
[03:34:51] <epony> yes, in general view, it's used a lot as a technique
[03:34:53] *** Joins: zaher_ (~zaher@178.171.200.233)
[03:35:14] <ProfSimm> epony: well hell, my condolences if you're not
[03:35:21] <epony> so the usage in file system layers is one of the less efficient places to have it (a source of problems)
[03:36:08] <epony> nobody has died because of late adoption of an unreliable and expensive hardware (optional) component
[03:38:29] <epony> taking a positiong of "accusations and dismissals" is supposed to be replaced with the interest of educational argumentation after all ;-)
[03:38:40] <Sqaure> Facebook AI chief scientist seams to admit defeat on self driving cars as they still cannot drive better than humans. AI community thinks the solution is that the car AI needs to learn "background information".   
[03:38:43] *** Quits: zaher (~zaher@37.48.185.58) (Ping timeout: 256 seconds)
[03:39:04] <ProfSimm> epony: your system's bottleneck is your HDD if you have no SSD for your system partition at least.
[03:39:24] <ProfSimm> epony: but anyway I sense a thread of peculiar positions and I don't wanna delve further
[03:39:35] <epony> Sqaure, on the news: "the self-driving winter version 2 rages"
[03:39:53] <apotheon> I missed whatever was actually at issue in this case.  Was it ZFS resource usage and performance?
[03:39:53] <epony> *alluding to the AI winter version 1 rage*
[03:40:17] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 240 seconds)
[03:40:20] <Sqaure> epony, =D
[03:40:22] <ProfSimm> Sqaure: the real news is Facebook was into self-driving cars
[03:40:36] <ProfSimm> Sqaure: they'll give up because it's not their core business.
[03:40:49] <apotheon> WTF is "the self-driving winter version 2"?
[03:41:00] <ProfSimm> Sqaure: others like Tesla are more motivated to succeed. It's not a spring, it's a marathon
[03:41:05] <ProfSimm> sprint*
[03:41:22] <epony> we need more ZFS fandom
[03:41:23] <Sqaure> ProfSimm, oh.. i didnt know what they were up to it. Just thought he commented on the communitys lack of progress on it
[03:41:47] <epony> and faster SSDs with less COW
[03:41:53] <ProfSimm> Sqaure: the AI in Teslas is progressing every release. 
[03:42:14] *** Joins: Kacper_ (~kasper93@89-74-110-199.dynamic.chello.pl)
[03:42:19] <ProfSimm> Sqaure: obviously not at the scam-artist levels Elon Musk likes to predict. But still, they're pushing on
[03:42:20] <epony> into a full blown RC car :-)
[03:42:51] <epony> subscribe to our self-driving digital assistant (mechanical turk version 3 winter incoming rage)
[03:43:24] <ProfSimm> Here's a question: what data semantics do neural networks use: 1) by reference 2) by value 3) move
[03:43:49] *** Quits: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl) (Ping timeout: 256 seconds)
[03:43:49] *** Kacper_ is now known as kasper93
[03:43:52] <ProfSimm> 4) something else
[03:44:24] *** Quits: kilitary (~kilitary@185.193.143.131) (Remote host closed the connection)
[03:44:30] <epony> computers have all.. don't know about your neural networks
[03:44:47] <ProfSimm> I mean artificial neural networks
[03:46:02] <Sqaure> Im not sure i know the definiton of "data sementics"
[03:46:14] <Sqaure> semantics*
[03:46:24] *** Joins: kilitary (~kilitary@185.193.143.131)
[03:46:25] <edgar-rft> cementics
[03:46:43] <Sqaure> concrete!
[03:46:54] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:47:02] <epony> what is more expensive, fixing the lane signalling in the road infrastructure or creating remote controlled wirelessly cars?
[03:47:28] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:46c:66a:397d:836a)
[03:47:50] <Sqaure> you need 1 coal plant per 3 AI scientist
[03:47:51] <ProfSimm> epony: it's not a function of cost alone
[03:48:02] <edgar-rft> concrete math -> https://www.calculator.net/concrete-calculator.html
[03:48:03] <bayaz> Title: Concrete Calculator 
[03:48:12] <epony> and the answer is, both.. check out how planes have it, and then you'll know what lanes will have (it)
[03:49:26] <ProfSimm> epony: if you're comparing airplane autopilot with cars, planes are much simpler.
[03:49:28] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:49:29] <epony> so, driver assist ships and trains and buses first, RC cars.. on a need basis ;-)
[03:49:37] <ProfSimm> Much is an understatement actually
[03:50:27] *** Joins: trevors (~trevors@user/trevors)
[03:50:37] <epony> the least use of self-driving bicycle noted for future reference
[03:50:45] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[03:51:01] *** Quits: plastico (~plastico@neomutt/plastico) (Remote host closed the connection)
[03:51:59] *** Joins: sheepduck_ (~sheepduck@user/sheepduck)
[03:52:22] *** Joins: plastico (~plastico@neomutt/plastico)
[03:52:26] *** Joins: operateur (~operateur@77-46-222-165.dynamic.isp.telekom.rs)
[03:54:57] *** Quits: sheepduck (~sheepduck@user/sheepduck) (Ping timeout: 256 seconds)
[03:55:23] <epony> there is an upcoming commercialisation (in progress) of the city airports infrastructure that got pushed back (delayed) for "wireless network" reasons
[03:55:29] <kodah-> mmm, automation of anything will always be at cost contention with resources
[03:56:19] <kodah-> epony: what commercialization are you referring to at airports?
[03:56:54] <epony> hubs need automation, with data it's copying and sorting (parallelising) with transport it's serialisation and packeting (utilisation)
[03:57:13] *** Quits: operateur (~operateur@77-46-222-165.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[03:57:26] <epony> processing has costs ;-)
[03:59:16] <kodah-> it's still not clear what you're talking about. the early 2000's saw luggage systems in US airports entirely overhauled. subsequent innovation had to do with scheduling and logistics (automated check-ins, plane entertainment tech, wireless access which was a byproduct of inmarsats development of satcomm)
[03:59:44] <epony> "dynamic" (scheduler / logic schema control is needed) compared to "static" (acceleration and block modular-composition)
[04:00:25] <epony> now we're at the stage of airspace lease to commerce with drone / automatic unmanned aeriel vehicles
[04:00:44] *** Quits: Inari (~Pinkishu@p4fe7ec4d.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[04:00:44] <epony> it's progressing rapidly ;-) the future is here
[04:00:49] <epony> almost
[04:00:53] <kodah-> so you're talking about automated airspace clearance?
[04:00:54] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[04:01:25] <epony> air traffic control for UAVs for commercial operators
[04:02:06] <kilitary> Lag: 10 ms
[04:03:28] <epony> well, 100 vs 1000 Hz kernel tick choices is still a debate (jokingly)
[04:04:29] <Sqaure> why cant they just shut down airports. 50 percent of all trips are just for pure leisure. 
[04:05:11] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[04:05:23] *** Joins: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca)
[04:05:26] <Sqaure> oh wait, 80 of the world seems unaware of climate change.
[04:05:29] <epony> sh*tdown leisure suit larry?! are you kidding.. tourism countries will collapse, will have to work and grow crops again..
[04:05:38] *** Joins: debayer948 (~debayer@76.82.226.116)
[04:06:31] *** Joins: bloodElk (~bloodElk@user/bloodelk)
[04:07:02] <epony> turns out mobility on computing was a bit premature for personal use with the mobility limitations in place
[04:09:13] *** Joins: hexingb (~hexingb@36.155.28.143)
[04:10:27] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[04:12:09] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[04:14:25] *** Quits: jjt (~jjt@user/jjt) (Ping timeout: 256 seconds)
[04:14:29] *** Quits: jaysicks (~jaysicks@87-97-5-238.pool.digikabel.hu) (Remote host closed the connection)
[04:15:46] *** Quits: sner (~paul@user/sner) (Ping timeout: 250 seconds)
[04:15:50] <ProfSimm> epony: you are wrong sir, about something.
[04:16:06] <ProfSimm> (sorry I'm not reading the log, but I wanna feel engaged in the conversation)
[04:17:34] *** Joins: murii (~murii@2a02:a58:835a:1100:48e:c12e:a5c8:6d73)
[04:18:53] *** Quits: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[04:18:55] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:19:15] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[04:19:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[04:19:51] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[04:20:05] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[04:20:06] *** Quits: victori (~victori@cpe-76-174-185-227.socal.res.rr.com) (Ping timeout: 250 seconds)
[04:20:44] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[04:20:49] <epony> ProfSimm, ok, it's very likely you know exactly the situation then.. glad to see it's proceeding fine there ;-)
[04:20:58] *** Quits: xff0x (~xff0x@2001:1a81:52f4:b00:92cd:1cec:76b4:462b) (Ping timeout: 250 seconds)
[04:21:09] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:21:23] *** Joins: nitrix (~nitrix@user/nitrix)
[04:21:43] *** Joins: xff0x (~xff0x@2001:1a81:52f4:b00:bacd:f4ac:13db:1a99)
[04:22:23] *** Quits: murii (~murii@2a02:a58:835a:1100:48e:c12e:a5c8:6d73) (Ping timeout: 268 seconds)
[04:23:04] *** Joins: victori (~victori@cpe-76-174-185-227.socal.res.rr.com)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:25:41] <ProfSimm> What if instead of terminating lines with semicolon; we prepend lines with say * or # as a bullet point, to mean "new line of code begins"
[04:25:53] <ProfSimm> Which means you can freely wrap lines without semicolon.
[04:27:19] <apotheon> meh
[04:27:34] <ProfSimm> We combine this with indentation for blocks, so no {}
[04:27:59] <pavonia> In what language do you terminate lines of code with a semicolon?
[04:28:18] <ProfSimm> Most?
[04:28:36] <pavonia> Name one
[04:28:49] <duuude> pavonia: C?
[04:28:57] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 256 seconds)
[04:29:06] <pavonia> But that's not lines of code, that's statements
[04:30:08] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[04:30:45] <epony> code blocks ;-)
[04:31:01] <duuude> With that definition of line of code there is only two ways you can terminate a line, \n and \r\n, but ProfSimm obviously means something else
[04:31:15] <duuude> maybe more
[04:31:21] <duuude> \v and friends
[04:31:39] <epony> think about the procedures (blocks), some languages have explicit wording for that, others just syntax
[04:31:41] <pavonia> I mean you can have several statements on one line. If you'd use * or # for separating them, that would be confusing or even syntactically wrong if those characters are used for other purposes already
[04:31:50] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:32:10] <epony> sigils are used to change the "address" mode of the token
[04:32:34] <epony> it's probably an idea to change that for code blocks too, so interesting idea, ProfSimm 
[04:32:56] <epony> ProfSimm, is this what you meant?
[04:33:09] *** Joins: brabrax (~brabrax@user/brabrax)
[04:34:19] <ProfSimm> https://pastebin.com/yWxFHSAa
[04:34:21] <bayaz> Title: # loop 1 100 # i: ? # is (i % 15 = 0) yes: # - Pastebin.com 
[04:34:24] <ProfSimm> It's kinda ugly.
[04:34:32] <ProfSimm> But maybe can be worked on
[04:35:34] <pavonia> Why do you need the # when you already have indentation?
[04:35:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[04:36:24] <duuude> would look ugly with indentation and wont solve so much of an issue
[04:36:25] <ProfSimm> pavonia: the "yes" and "no" are named arguments to a function "is" from the previous lines. So the "is" line actually spans multiple lines, and has the nested blocks delimited by #
[04:36:38] <ProfSimm> Basically it's to both allow nested blocks and multiline statements
[04:37:11] <ProfSimm> Everything is a function in this concept
[04:37:22] <ProfSimm> arguments can be positional or named, like on CLI
[04:38:20] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[04:39:05] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[04:39:52] <pavonia> Not sure I understand the syntax
[04:40:29] <ProfSimm> # is cond yes: expr no: expr
[04:41:25] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 256 seconds)
[04:41:36] <pavonia> But print is not an expression?
[04:41:50] <ProfSimm> pavonia: it's an expression but with a side-effect
[04:42:37] <pavonia> So does indentation change the meaning of the code?
[04:43:58] *** Quits: stagas (~stagas@2a02:587:c43a:e9ef:6fa8:4c3:7e3f:5431) (Ping timeout: 268 seconds)
[04:44:23] <ProfSimm> pavonia: you have to indent the subsequent lines of a statement in order to continue the same statement
[04:44:38] <ProfSimm> pavonia: consequtive statements form a block
[04:45:27] <ProfSimm> pavonia: question mark is an input parameter (in this case loop calls a closure with param i)
[04:46:53] <pavonia> Okay
[04:47:35] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:46c:66a:397d:836a) (Quit: I have gone to sleep. ZZZzzzâ¦)
[04:47:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[04:48:17] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[04:48:25] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[04:49:31] <ProfSimm> pavonia: looks like the cure is worse than the problem
[04:52:32] <ProfSimm> This may be a more traditional way of using the same syntax:
[04:52:33] <ProfSimm> https://pastebin.com/4MrwZvM4
[04:52:35] <bayaz> Title: # loop 1 100 # i: ? # if (i % 15 = 0) # print "FizzBuz - Pastebin.com 
[04:53:51] *** Joins: resamvi (~resamvi@user/resamvi)
[04:55:13] *** Quits: tehenderz (~tehenderz@ti0018a400-9612.bb.online.no) (Ping timeout: 256 seconds)
[04:55:48] *** Joins: tehenderz (~tehenderz@ti0018a400-9789.bb.online.no)
[04:57:29] *** Joins: trevors (~trevors@user/trevors)
[04:57:33] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[04:57:51] *** Joins: gargus (~user@125-209-154-224.tpgi.com.au)
[04:57:55] *** moose` is now known as moose
[04:58:14] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 250 seconds)
[04:58:42] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:58:50] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[04:59:18] *** Joins: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de)
[04:59:18] *** Quits: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de) (Changing host)
[04:59:18] *** Joins: resamvi (~resamvi@user/resamvi)
[05:02:52] *** Joins: jazzy (~jaziz@user/jaziz)
[05:03:52] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 250 seconds)
[05:05:04] *** Joins: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de)
[05:05:04] *** Quits: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de) (Changing host)
[05:05:04] *** Joins: resamvi (~resamvi@user/resamvi)
[05:07:07] *** Quits: Pook (~Pook@2001:8a0:f996:1400:54d:49af:8293:a965) (Quit: Leaving)
[05:07:34] <apotheon> You're better off with a leading character only on wrap.
[05:08:12] <apotheon> This kind of "there are leading characters fucking everywhere" approach where it's on every line that isn't a wrap is awful.
[05:09:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[05:14:46] *** Joins: vysn (~vysn@user/vysn)
[05:15:37] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[05:16:01] *** Joins: Rounin (~david@84.212.130.215)
[05:19:15] *** Joins: duuude (~user@user/duuude)
[05:19:37] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 240 seconds)
[05:20:45] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[05:23:17] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[05:24:57] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[05:25:37] *** Quits: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:26:07] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[05:26:46] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[05:27:35] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[05:27:59] *** Joins: Crowley99 (~Crowley99@208.59.191.14)
[05:29:31] *** Joins: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca)
[05:32:37] *** Quits: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca) (Remote host closed the connection)
[05:39:13] *** Quits: justache (~justache@user/justache) (Ping timeout: 256 seconds)
[05:41:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[05:42:38] *** Quits: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl) (Remote host closed the connection)
[05:44:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:45:16] <pikapika> Video gamers have no moral standing to criticize cryptominers
[05:45:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[05:45:44] <pikapika> Both are completely superfluous wastes of energy, while the latter at least had some noble aims regarding money
[05:46:34] <FloridaMan> Not that they ever claim to be primarily used for the purpose of therapy, but video games can be therapeutic.
[05:46:54] <FloridaMan> But yes, mostly a waste of time.
[05:47:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[05:47:15] <pikapika> FloridaMan, they can be. But my main point is, they have no moral position to criticize crypto as a waste of energy.
[05:47:27] <FloridaMan> Indeed.
[05:47:44] <pikapika> I find it amusing how video game people are reacting to gpu shortages caused by crypto, lacking the self awareness to see they are the same people
[05:48:13] <eXtr3m0> In games however the main functioanlity is not to use as much energy as possible.
[05:48:21] <eXtr3m0> Not all games are triple A games.
[05:48:23] <pikapika> If I had to assign value to the usage of a scarce computing resource I would bench it as video games << crypto <<< scientific computing
[05:48:51] <pikapika> eXtr3m0, but the precondition is that we are already talking about video games that require power hungry gpus
[05:49:44] <eXtr3m0> Well if you like to drink water but then somebody comes and buys off all the water in your area, because he wants to create paint from it, its not the intended use case
[05:49:52] *** Quits: kilitary (~kilitary@185.193.143.131) (Quit: ZNC - https://znc.in)
[05:50:12] <pikapika> eXtr3m0, that is an incorrect analogy
[05:50:18] <eXtr3m0> I see, because there is the overlap
[05:50:21] <pikapika> Both gaming and crypto are equally superfluous
[05:50:27] <pikapika> while drinking water is essential to survival
[05:50:56] <FloridaMan> drinking water is superfluidous
[05:50:57] <FloridaMan> :P
[05:50:59] <eXtr3m0> But still its being done in the real world. :D
[05:51:02] *** Quits: phil294 (~phi@ip1f13feb8.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[05:51:11] <pikapika> It is a wrong analogy
[05:51:19] <pikapika> It would work if you replaced games with hpc a bit better
[05:52:12] <pikapika> HPC is an intended use case of GPUs, and while I'd prefer the hpc to be for scientic computation etc, it cannot be claimed crypto is not a kind of hpc itself
[05:53:19] <FloridaMan> I mean, computers were never "meant" to be used for games at all in the first place, but things evolve and more use cases are created.
[05:53:51] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:54:16] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[05:54:32] *** Joins: justache (~justache@user/justache)
[05:54:43] *** Quits: zaher_ (~zaher@178.171.200.233) (Ping timeout: 256 seconds)
[05:54:48] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[05:55:02] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 240 seconds)
[05:55:11] *** Quits: peace-angel (uid530400@user/star1) (Quit: Connection closed for inactivity)
[05:55:17] *** Quits: xff0x (~xff0x@2001:1a81:52f4:b00:bacd:f4ac:13db:1a99) (Ping timeout: 240 seconds)
[05:57:10] *** Quits: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[05:57:25] *** Joins: xff0x (~xff0x@2001:1a81:5332:3500:27a3:a6cb:e9bf:c60f)
[05:58:27] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[05:59:05] *** Joins: hexingb (~hexingb@36.155.28.143)
[05:59:24] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:02:37] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[06:03:13] *** Joins: Akiva (~Akiva@user/Akiva)
[06:03:38] <kzootech> computers are games
[06:05:17] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[06:05:35] *** Joins: debayer948 (~debayer@76.82.226.116)
[06:09:00] <pikapika> kzootech, since I am in a venting mood lets talk about another, unrelated topic.
[06:09:16] *** Joins: jjt (~jjt@user/jjt)
[06:09:18] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[06:09:57] <pikapika> Mainly how the dev environment for an os running on phones way weaker than my pc requires more hardware than running three desktop linux vms in parallel
[06:10:21] *** Joins: peace-angel (uid530400@user/star1)
[06:10:32] <pikapika> Android really is something else honestly
[06:10:46] <vysn> games are a major contributor in speeding up the development of advanced computer hardware though. 
[06:11:04] <vysn> it helped moved the whole industry forward
[06:11:08] <vysn> move*
[06:11:11] <pikapika> vysn, yeah I'd say its in a sense nice
[06:11:20] <kzootech> pikapika: i think maybe you misunderstood, programming, etc is a game itself imo
[06:11:28] <pikapika> because they are paying for hardware developments that in time used to trickle down to commodity hardware
[06:11:42] <pikapika> However, for a decade at least moore's law is dead
[06:11:45] <pikapika> so that doesn't work either
[06:12:31] <pikapika> kzootech, I understand what you were trying to say, I just was talking about another annoying topic
[06:12:52] <pikapika> Anyways another even more critical thing is, in a key sense both iphone and android were dead and butchered on arrival
[06:13:14] <pikapika> We don't see this level of clamping down on general purpose computing hardware ever before
[06:13:37] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[06:13:41] <pikapika> A device where its basically impossible to install anything else, and all the drivers are complete blackboxes: its a dream for hardware manufacturers
[06:14:14] *** Quits: boycott_ (~boycott@166.ip-149-56-46.net) (Quit: Done)
[06:14:35] *** Joins: boycott (~boycott@166.ip-149-56-46.net)
[06:14:35] *** Quits: boycott (~boycott@166.ip-149-56-46.net) (Changing host)
[06:14:35] *** Joins: boycott (~boycott@user/boycott)
[06:14:44] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:16:34] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:17:49] *** Joins: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[06:17:50] <JimmyRustles> hi
[06:18:06] <JimmyRustles> i wrote an evolution simulator but i want to make the behaviour of the animals in it more interesting
[06:18:18] <JimmyRustles> so far there are rabbits of different colours and plants spread around the environment that regenerate
[06:18:26] *** Quits: gargus (~user@125-209-154-224.tpgi.com.au) (Quit: Leaving)
[06:18:34] <JimmyRustles> and the rabbits can mate with each other to make new rabbits and eat the food and they die if they don't eat enough food
[06:19:07] <JimmyRustles> and so far their behaviour is to sit for a set amount of time, hop in a direction for a set amount of time, then change their direction by a set angle
[06:19:22] <JimmyRustles> and the sit time, hop time, and angle are all passed onto their offspring with a slight mutation
[06:19:35] <FloridaMan> "This game is cool, but man, they're really fucking like rabbits here"
[06:19:51] <JimmyRustles> lol
[06:20:47] <pikapika> Make the spiders mate with the plants and see what they produce
[06:20:53] <pikapika> *rabbits
[06:21:58] <JimmyRustles> https://www.youtube.com/watch?v=XnV_n7VjLY4
[06:21:59] <bayaz> Title: Bunny Bedlam - Mating and breeding 
[06:22:00] <JimmyRustles> that's what i've got so far
[06:22:17] *** Joins: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl)
[06:23:26] * PlanckWalk imagines that an equilibrium could be reached with a wave of rabbits expanding outward at near maximum hop-speed
[06:23:50] <PlanckWalk> (If you simulate a large enough world)
[06:23:54] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:4d19:4ce6:713a:9046)
[06:24:11] *** Quits: ghost64 (~ghost64@user/ghost64) (Remote host closed the connection)
[06:24:38] *** Joins: nshire (~nshire@user/nshire)
[06:24:46] <PlanckWalk> The rabbits behind the wave all dying out back to a lesser density through lack of food.
[06:25:28] *** Quits: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl) (Remote host closed the connection)
[06:26:25] <JimmyRustles> i'm not sure what attributes i can give them that will allow them maximum chance of survival
[06:26:30] <JimmyRustles> or at least be able to evolve those attributes to get that
[06:26:43] <JimmyRustles> right now they seem pretty random and the luckiest rabbits win
[06:27:12] <PlanckWalk> Maximum chance of survival per rabbit isn't necessarily a fitness trait
[06:28:28] <PlanckWalk> If the plants just regenerate in-place then I suspect that sitting next to one for as long as possible might be a survival trait
[06:28:40] *** Joins: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl)
[06:28:59] <PlanckWalk> If they regenerate fast enough for a rabbit to survive that is
[06:29:16] <JimmyRustles> the plants regenerate randomly
[06:29:30] <JimmyRustles> every 5 in-game seconds a new batch of plants is spawned
[06:29:35] <PlanckWalk> Ah.  I;m not sure that survival traits exist then.
[06:29:37] *** Quits: MatSharrow (~matthew@169.99.9.51.dyn.plus.net) (Ping timeout: 240 seconds)
[06:30:28] <PlanckWalk> If food appears randomly then there's not much a rabbit can do to increase or decrease their chances of getting it
[06:30:39] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:4d19:4ce6:713a:9046) (Ping timeout: 268 seconds)
[06:30:55] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:31:05] <JimmyRustles> well a rabbit with a turn angle of 180 degrees would fail at getting food since they'd walk back and forward in a small line
[06:31:12] <JimmyRustles> whereas one with 45 degrees would spread out and find food better
[06:31:25] <PlanckWalk> Those bot seem equivalent
[06:31:28] <PlanckWalk> both*
[06:31:28] <FloridaMan> you need to introduce wolves
[06:31:39] <FloridaMan> :P
[06:31:53] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 268 seconds)
[06:31:53] *** brabrax_ is now known as brabrax
[06:32:09] *** Quits: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl) (Remote host closed the connection)
[06:32:12] <JimmyRustles> i could introduce wolves and plot the plants/rabbits/wolves on a graph and see the delayed rise and drop in populations between them
[06:32:12] <PlanckWalk> I don't think range matters
[06:33:04] <PlanckWalk> Except in the case where rabbit population is way below maximum equilibrium.
[06:33:48] <PlanckWalk> And in this environment I think equilibrium would be reached pretty quickly
[06:34:25] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[06:34:59] *** Joins: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl)
[06:35:09] *** Joins: ghost64 (~ghost64@user/ghost64)
[06:35:46] *** Quits: maxzor_ (~maxzor@2a01cb04054faa007be9cf74e735c838.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[06:35:49] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[06:35:53] <JimmyRustles> hm
[06:35:57] <JimmyRustles> i think some rabbits have actually found a strategy
[06:36:10] <JimmyRustles> there's a load of food built up on the right edge because not many rabbits have gone there
[06:36:20] <JimmyRustles> and some rabbits have started going back and forth between the right edge to keep eating the food
[06:36:24] <JimmyRustles> seems to be keeping them alive
[06:37:44] *** Joins: EdFletcher (~PKD@user/edfletcher)
[06:37:59] *** Quits: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl) (Remote host closed the connection)
[06:38:28] *** Joins: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl)
[06:38:42] *** Quits: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl) (Changing host)
[06:38:42] *** Joins: kasper93 (~kasper93@user/kasper93)
[06:39:15] *** Quits: kasper93 (~kasper93@user/kasper93) (Remote host closed the connection)
[06:39:36] <PlanckWalk> Oh I see, you have groups of food spawning, not just random items.
[06:40:00] *** Joins: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl)
[06:40:09] *** Quits: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl) (Remote host closed the connection)
[06:40:41] *** Joins: kasper93 (~kasper93@user/kasper93)
[06:40:43] <PlanckWalk> In that case I see what you mean about back and forth hopping
[06:41:00] <PlanckWalk> That wouldn't each much of the group
[06:42:22] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:42:23] <JimmyRustles> i think i've finally given them enough food that they never run out
[06:42:33] <JimmyRustles> currently on the 118th generation of bunnies in this run
[06:44:09] *** Quits: kasper93 (~kasper93@user/kasper93) (Remote host closed the connection)
[06:44:34] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[06:45:08] *** Quits: cliluw (~cliluw@47.147.73.223) (Read error: Connection reset by peer)
[06:46:40] <epony> rabbids
[06:47:53] <epony> https://en.wikipedia.org/wiki/Rayman_Raving_Rabbids#Plot
[06:47:53] <bayaz> Title: Rayman Raving Rabbids - Wikipedia 
[06:48:04] <PlanckWalk> Until I saw the video I was imagining more like 100k generations
[06:49:26] *** Joins: kasper93 (~kasper93@user/kasper93)
[06:49:37] <epony> here is a riddle for you, find out how many generations of people have lived so far and why only the last 3-4 are named after letters?
[06:49:45] *** Quits: lilgopher (~textual@2601:241:8000:38f0:91a4:b6ab:aace:8b1) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[06:49:57] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 240 seconds)
[06:50:49] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[06:52:22] *** Joins: phil294 (~phi@ip1f13feb8.dynamic.kabel-deutschland.de)
[06:55:02] <FloridaMan> let's see, life began sometime around 1949, sooo
[06:55:06] * FloridaMan counts on fingers
[06:56:28] *** Quits: Rust (~aoei@nethackscoreboard/aoei) (Quit: brb)
[06:56:59] *** Joins: stella (~aoei@nethackscoreboard/aoei)
[06:57:17] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: Ping timeout (120 seconds))
[06:57:35] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[06:59:18] <PlanckWalk> The last 3-4 are Boomers, Gen X, Millenials, and Zoomers?
[06:59:45] <FloridaMan> X, Y, Z, Alpha
[07:00:27] *** Quits: etolier (~somewhere@122-199-44-127.ip4.superloop.com) (Ping timeout: 256 seconds)
[07:00:43] <vysn> and maybe soon Metas? from the metaverse
[07:00:43] *** Joins: etolier (~somewhere@122-199-44-127.ip4.superloop.com)
[07:01:13] <FloridaMan> well they're starting to line up with the COVID variants
[07:01:19] <FloridaMan> so I think Omicron is the latest
[07:01:24] <PlanckWalk> Gen O
[07:01:45] <FloridaMan> it's a bit like when Samsung skipped a generation of the Note to match up with their Galaxy S line
[07:01:50] <apotheon> Gen O My Gob
[07:02:01] <PlanckWalk> Heh, looking up this crap is ridiculous.
[07:02:06] <apotheon> yes
[07:02:32] <PlanckWalk> One source puts zoomers as birth years in the range 2001 to 2011.  That's not a generation!
[07:02:47] <PlanckWalk> Unless you have some reallllly strange families.
[07:03:07] <apotheon> It's an intergeneration, like Y, I guess.
[07:03:13] <FloridaMan> even Millennials are sometimes split depending on who you talk to into Xennials and Millennials
[07:03:17] <FloridaMan> I would be a Xennial
[07:03:19] <apotheon> X (Y) Millennials
[07:03:27] <FloridaMan> otherwise known as the "Oregon Trail Generation"
[07:03:44] <apotheon> Xennials would be Y, basically.
[07:03:56] <apotheon> aka The Ignored Generation
[07:04:34] <apotheon> People keep trying to stuff people who were part of a weird intergenerational cohort into the end of X or the beginning of Millennials.
[07:04:36] <FloridaMan> well no Xennials would be at the beginning of the Millennial generation I believe
[07:04:40] <FloridaMan> hence the "X" part
[07:05:02] <FloridaMan> Millennials as a whole are Y
[07:05:08] <apotheon> nah
[07:05:26] <apotheon> There was a whole revision thing that went on with the name change.
[07:05:55] <FloridaMan> https://en.wikipedia.org/wiki/Xennials
[07:05:55] <bayaz> Title: Xennials - Wikipedia 
[07:06:01] <FloridaMan> https://en.wikipedia.org/wiki/Millennials
[07:06:01] <bayaz> Title: Millennials - Wikipedia 
[07:06:06] <PlanckWalk> The terminology is just fucked up.
[07:06:11] <apotheon> People decided to move the dividing line around at the same time, effectively creating a small block that was originally Y and before the beginning of Millennial according to the New Naming.
[07:06:16] <PlanckWalk> Nobody seems to agree on which terms refer to what.
[07:06:21] <apotheon> . . . and now people are trying to rationalize them between the two.
[07:06:44] <FloridaMan> Xennials are described as a  '"cross-over generation" of people whose birth years are between the late 1970s and the early 1980s'
[07:07:01] *** Joins: fe23 (~fe23@2409:8a34:461:9470:243e:b641:395d:993d)
[07:07:15] <apotheon> Of course, the whole thing is stupidly about imposing biases (via sharp divisions) on what's actually a spectrum.
[07:07:25] <FloridaMan> it's a silly idea for sure
[07:07:34] <apotheon> . . . so it's mostly just an exercise in internet personality tests.
[07:08:24] <FloridaMan> Slitherin woooo
[07:08:24] <eXtr3m0> Well I think the point is that when you grow up, you have no idea of what just happened
[07:08:28] <FloridaMan> lol
[07:08:48] <eXtr3m0> its like the blind spot of history.
[07:08:57] *** Quits: phil294 (~phi@ip1f13feb8.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[07:08:59] <apotheon> We're better off just saying that, for instance, Gen X is people significantly influenced by formative association with people like Wynona Ryder, new wave bands, and the Brat Pack.
[07:09:07] <apotheon> there, done
[07:09:10] <apotheon> It's not about age.
[07:09:26] <PlanckWalk> Is that music things?
[07:09:29] <apotheon> Many people don't fit into Gen X, even from the same birth era.
[07:09:40] <apotheon> Wynona Ryder and the Brat Pack were actors.
[07:09:47] <PlanckWalk> OH okay
[07:09:52] <apotheon> New Wave is indeed a music genre.
[07:10:29] <apotheon> Millennials should be associated with '90s butt rock, for instance.  (Grunge and "alternative" in general would be tail-end Gen X stuff, pretty much.)
[07:10:31] <FloridaMan> If you hear "Cyrus" and think "Billy Ray" you're a millennial. If you think "Mylie" you're some form of young kid
[07:10:40] <apotheon> hmm
[07:10:40] <FloridaMan> heheh
[07:11:09] <apotheon> If you hear "Cyrus" and you think "Billy Ray" you're c'untry.
[07:11:35] <PlanckWalk> And if you think "did you mean Cyrix" then you're Gen X and a nerd.
[07:11:51] <apotheon> That's more like me.
[07:13:16] *** Joins: Brett[Air] (~Brett@27-32-147-253.static.tpgi.com.au)
[07:13:17] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 240 seconds)
[07:15:31] <FloridaMan> PlanckWalk: actually I'm a Xennial and I vividly recall the Cyrix processors, unfortunately
[07:16:25] <FloridaMan> I also started fairly early on my descent into nerdom
[07:17:08] <FloridaMan> like 10 years old when I got my new Wang 386 20MHz
[07:17:13] <FloridaMan> 25MB Seagate
[07:19:59] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[07:20:39] *** Quits: duuude (~user@user/duuude) (Ping timeout: 256 seconds)
[07:25:45] *** Joins: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de)
[07:25:45] *** Quits: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de) (Changing host)
[07:25:45] *** Joins: resamvi (~resamvi@user/resamvi)
[07:27:03] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[07:27:43] *** Quits: torstenvl (~torstenvl@2601:14b:200:1e9c:ec74:83cf:9126:6a4f) (Quit: Leaving...)
[07:28:22] *** Joins: lilgopher (~textual@c-24-12-183-227.hsd1.il.comcast.net)
[07:30:02] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 240 seconds)
[07:30:09] *** Joins: duuude (~user@user/duuude)
[07:31:23] *** Joins: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de)
[07:31:23] *** Quits: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de) (Changing host)
[07:31:23] *** Joins: resamvi (~resamvi@user/resamvi)
[07:32:32] <arahael> Ugh. Cyris.
[07:32:34] <arahael> *Cyrix.
[07:32:44] <arahael> The x86 processor for people who were too cheap to get a real one.
[07:33:04] *** Joins: phil294 (~phi@ip1f13feb8.dynamic.kabel-deutschland.de)
[07:35:38] <amigojapan> arahael: they were good
[07:36:51] <arahael> amigojapan: You and I seem to have had quite different experiences.
[07:38:28] *** Parts: laman1 (~laman@rego.ai) (WeeChat 3.3)
[07:42:36] <amigojapan> Intel killed them off by nameing the Pentium generation of CPUs Pentium
[07:42:49] *** Joins: Colt (~Colt@user/colt)
[07:44:43] <oldlaptop> Cyrix was good, and then it wasn't.
[07:44:50] <amigojapan> They tried selling as "586
[07:49:11] *** Quits: turlando (~turlando@user/turlando) (Ping timeout: 256 seconds)
[07:59:31] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[08:02:28] *** Joins: sner (~paul@user/sner)
[08:03:32] *** Joins: cynomys (~cynomys@user/cynomys)
[08:04:57] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[08:05:15] <PlanckWalk> They did pretty well until 3D games
[08:05:34] *** Joins: debayer948 (~debayer@76.82.226.116)
[08:07:41] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Ping timeout: 256 seconds)
[08:09:28] *** Joins: blahboybaz (~blahboyba@c-67-161-96-192.hsd1.wa.comcast.net)
[08:11:49] *** Quits: lilgopher (~textual@c-24-12-183-227.hsd1.il.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[08:15:17] *** Joins: radu2424078210 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[08:15:32] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[08:15:32] *** radu2424078210 is now known as radu242407821
[08:15:57] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 240 seconds)
[08:16:29] <blahboybaz> I feel like I'm in the Twilight Zone or something.. I'm trying to find the aspect ratio of s screen size (360 x 800) and what I'm getting isn't corroborated by other sources. [1]: I have never heard of a 16:7 aspect ratio as being anything commone out there.. [2]: I can not find any article or documentation on a 16:7 aspect ratio.. [3]: But 16:7 is what an online calculator gives me (and what 
[08:16:35] <blahboybaz> SEEMS to be the right answer - the answer makes sense mathematically).. [4]: In addition to all that I can't find any reference to a 360 x 800 screen size except the source I got it from to begin with (ie: no corroboration) - however I consider the original source to be highly reliable --> https://gs.statcounter.com/screen-resolution-stats/mobile/worldwide
[08:16:44] <blahboybaz> Can anyone offer any insight into this?
[08:16:49] *** Quits: jjt (~jjt@user/jjt) (Remote host closed the connection)
[08:17:24] <Decker> 20:9
[08:18:18] <Decker> 360x800->36x80->18x40 -> 9x20
[08:18:53] *** Joins: murii (~murii@2a02:a58:835a:1100:48e:c12e:a5c8:6d73)
[08:19:08] *** Joins: sonny (~user@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca)
[08:19:31] <blahboybaz> Decker: thx but why am I not finding litearature on it?
[08:19:41] <Decker> it's a pretty odd ratio
[08:20:15] <blahboybaz> According to statcounter it's the most popular in recent times
[08:20:31] <Decker> 480x800 3:5 I tink is more common... or used to be 800x600 (3:4)  
[08:20:35] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[08:20:39] <blahboybaz> https://gs.statcounter.com/screen-resolution-stats/mobile/worldwide
[08:20:40] <Decker> ya on like small portable devices?
[08:21:20] <blahboybaz> Well then I've got a real dilemma
[08:23:12] *** Quits: murii (~murii@2a02:a58:835a:1100:48e:c12e:a5c8:6d73) (Ping timeout: 250 seconds)
[08:23:32] <blahboybaz> I'd like to base my design off of real data (which statcounter seems to provide) - not a story about data, not something out of date, real, reliable data collected from real devices. If the ranking I'm finding is placing some strange aspect ratio at the top then wtf!
[08:25:04] <Decker> https://frittliv.autonomtech.se/eTechsite/TrackIT/phptrackit.php?Plugin=Client_Screen_Resolution ya like 6 on here
[08:25:30] <Decker> couldn't find a list of devices by screen size though - no idea what sort of device that would be 
[08:26:14] *** Quits: xff0x (~xff0x@2001:1a81:5332:3500:27a3:a6cb:e9bf:c60f) (Ping timeout: 250 seconds)
[08:26:38] <blahboybaz> Won't open for me
[08:27:00] *** Joins: xff0x (~xff0x@2001:1a81:5332:3500:12ba:a184:ba98:5b9c)
[08:27:19] *** Quits: src (~src@user/src) (Quit: Leaving)
[08:27:59] <blahboybaz> Decker: The source I got it from says it the most popular mobile screen size as of Dec 2021
[08:28:12] <blahboybaz> Not by a huge margine but it is at the top
[08:28:25] <epony> a mobile phone screen probably previous generation with 16:9 360p screen and reserved space for buttons / interface icons and status
[08:28:43] <Decker> it is 20:9 though
[08:30:02] <blahboybaz> Wow, these guys (not you guys) are gonna fuck up my design one way or another. I'm like not real experienced at this and this weirdness just screws me up
[08:30:29] <blahboybaz> epony: I was thinking about what you said when I wrote that ^
[08:30:44] <blahboybaz> I would never even think of that
[08:31:01] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[08:31:02] <Decker> https://screensiz.es/phone  doesn't list anything in that range... I wonder if it's like a 1600x720 or something and is doing a request rescaled
[08:31:05] <epony> phone screens have larger aspect ratios
[08:31:30] <epony> could be a camera screen too
[08:32:02] *** Joins: img (~img@user/img)
[08:32:07] <blahboybaz> I can see I'm going to have to investigate what stats are actually being reported by that site
[08:32:11] <Decker> ahh  Mobile	Samsung S20	360 x 800	1440 x 3200	6.2â³	4.0
[08:32:27] <Decker> ahh  Mobile	Samsung S20 360 x 800  1440 x 3200 6.2â³ 4.0
[08:32:53] <blahboybaz> hmm.. where did you find that Decker ?
[08:33:14] <Decker> google search https://yesviz.com/viewport/  "device with 800-by-360 display"
[08:33:14] <bayaz> Title: Viewport Size for Devices | Screen Sizes, Phone Dimensions and Device Resolution | YesViz.com 
[08:33:43] <blahboybaz> Nice!
[08:36:12] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[08:36:22] *** Joins: audiocat (~audio@user/audio)
[08:36:46] *** audiocat is now known as audiobirb
[08:36:56] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[08:37:41] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:4d19:4ce6:713a:9046)
[08:38:07] <blahboybaz> I'm starting to wonder what practices designers have for approaching their design. What made sense to me (what seemed intuitive) was to design for aspect ratios - pick the couple most common and design for them - then use screen sizes as break point to decide when to use a mobile vs. desktop layout. So the desing itself would have like 2 layouts X a few aspect ratios. Now I'm wondering what the 
[08:38:13] <blahboybaz> most reliable source of aspect ratio and screen size data is.  Do designers just pick a certain company to go with (eg: iphone or samsung or somthing else) and just design for that and call it good?
[08:38:21] *** Joins: quartz (~quartz@user/quartz)
[08:38:36] <Decker> me - I'm a one-size-fits-all sorta guy :) if the screen is rectangular - fit it.
[08:38:37] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 240 seconds)
[08:39:09] <Decker> but a lot of application platforms limit you to a single font scale - which controls height and width together instead of independant ratios
[08:39:19] <blahboybaz> Decker: you're funny..  I don't want my junk all bent out of shape from one device to the next
[08:39:32] <Decker> blahboybaz noone will know.
[08:39:54] <blahboybaz> I won't but the guy looking at it will  :p
[08:39:55] <Decker> each experience is likely a 1-off and has no other basis of comparison 
[08:40:10] <Decker> meh - they never do
[08:40:18] *** audiobirb is now known as audiocat
[08:40:38] <blahboybaz> Well I guess I'll just do the best I can - what else can be expected of me?
[08:41:01] *** Joins: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz)
[08:41:05] *** Quits: Jantz (~IceChat95@118-93-132-243.dsl.dyn.ihug.co.nz) (Excess Flood)
[08:42:37] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:4d19:4ce6:713a:9046) (Ping timeout: 268 seconds)
[08:43:50] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[08:45:14] *** Joins: img (~img@user/img)
[08:47:11] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[08:48:46] *** Quits: duuude (~user@user/duuude) (Ping timeout: 250 seconds)
[08:48:46] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[08:48:51] <epony> a couple of beers ;-)
[08:49:13] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Max SendQ exceeded)
[08:49:46] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[08:49:48] <Decker> https://youtu.be/Cxh9dm7V3jE?t=38  "Ill keep doing my best, what else can I do?" I think is the line :)
[08:49:49] <bayaz> Title: The Moody Blues Every Good Boy Deserves Favour 05 after you came 
[08:52:27] *** Joins: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de)
[08:52:27] *** Quits: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de) (Changing host)
[08:52:27] *** Joins: resamvi (~resamvi@user/resamvi)
[08:52:43] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[08:52:53] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[08:55:51] *** Joins: jjt (~jjt@user/jjt)
[08:56:59] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 256 seconds)
[08:57:47] *** Joins: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de)
[08:57:47] *** Quits: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de) (Changing host)
[08:57:47] *** Joins: resamvi (~resamvi@user/resamvi)
[08:58:37] *** Joins: raym (~raym@user/raym)
[08:59:49] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 256 seconds)
[09:00:16] *** Joins: hexingb (~hexingb@36.155.28.143)
[09:01:57] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 240 seconds)
[09:02:36] *** Joins: Atque (~Atque@user/atque)
[09:03:35] *** Joins: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de)
[09:03:35] *** Quits: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de) (Changing host)
[09:03:35] *** Joins: resamvi (~resamvi@user/resamvi)
[09:04:17] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 240 seconds)
[09:09:09] *** Joins: stagas (~stagas@2a02:587:c43a:e9ef:c91b:2d4:5736:e725)
[09:11:21] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 256 seconds)
[09:18:37] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[09:19:06] *** Quits: xff0x (~xff0x@2001:1a81:5332:3500:12ba:a184:ba98:5b9c) (Ping timeout: 250 seconds)
[09:19:18] *** Joins: sandman13 (sandman13@sandman13.jujube.ircnow.org)
[09:19:59] *** Joins: xff0x (~xff0x@2001:1a81:5332:3500:cae3:31:4918:e255)
[09:20:58] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[09:21:16] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[09:21:37] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 240 seconds)
[09:26:54] *** Joins: password2 (~password8@user/password2)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:15] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:35:34] *** Joins: loganlee (~Thunderbi@user/loganlee)
[09:36:20] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ¦)
[09:38:47] *** Joins: yin846 (~user@2001:5b0:2a59:f4e8:d898:84ae:3b3b:b943)
[09:39:27] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[09:40:03] *** Joins: hexingb (~hexingb@2409:8902:7bc5:3a8d:25fe:c874:4f4f:f03a)
[09:44:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[09:45:06] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[09:46:08] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: Connection closed for inactivity)
[09:46:09] *** Quits: nitrix (~nitrix@user/nitrix) (Quit: ZNC 1.8.2 - https://znc.in)
[09:46:30] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[09:46:35] *** Quits: yin846 (~user@2001:5b0:2a59:f4e8:d898:84ae:3b3b:b943) (Quit: WeeChat 3.0)
[09:48:37] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 240 seconds)
[09:56:02] *** Quits: xff0x (~xff0x@2001:1a81:5332:3500:cae3:31:4918:e255) (Ping timeout: 240 seconds)
[09:57:14] *** Joins: xff0x (~xff0x@2001:1a81:5332:3500:8d55:d8c4:1b30:723c)
[09:58:11] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[10:03:53] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[10:04:46] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[10:05:31] *** Joins: debayer948 (~debayer@76.82.226.116)
[10:09:00] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:11:49] *** Joins: lilgopher (~textual@2601:241:8000:38f0:91a4:b6ab:aace:8b1)
[10:13:40] *** Quits: lilgopher (~textual@2601:241:8000:38f0:91a4:b6ab:aace:8b1) (Client Quit)
[10:14:37] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[10:21:11] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:f1c1:13f7:6f87:4b90) (Read error: Connection reset by peer)
[10:23:32] *** Quits: phil294 (~phi@ip1f13feb8.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[10:23:57] *** Quits: hexingb (~hexingb@2409:8902:7bc5:3a8d:25fe:c874:4f4f:f03a) (Ping timeout: 240 seconds)
[10:25:06] *** Joins: hexingb (~hexingb@180.212.209.125)
[10:26:37] *** Quits: tehenderz (~tehenderz@ti0018a400-9789.bb.online.no) (Ping timeout: 240 seconds)
[10:26:43] *** Quits: blahboybaz (~blahboyba@c-67-161-96-192.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[10:27:22] *** Joins: user51 (~user51@176.228.148.215)
[10:27:30] *** Joins: tehenderz (~tehenderz@ti0018a400-11022.bb.online.no)
[10:30:29] *** Quits: horseface (~horseface@user/horseface) (Quit: https://executingreality.com/)
[10:33:43] *** Joins: edun (~qbt@user/edun)
[10:34:04] *** Parts: edun (~qbt@user/edun) ()
[10:34:23] *** Joins: vigumnov (~victori@cpe-76-174-185-227.socal.res.rr.com)
[10:34:50] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[10:35:13] *** Quits: victori (~victori@cpe-76-174-185-227.socal.res.rr.com) (Ping timeout: 256 seconds)
[10:35:38] *** Joins: horseface (~horseface@user/horseface)
[10:35:47] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[10:38:35] *** Joins: kotshie (~kotshie@68.72.208.140)
[10:39:45] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[10:45:59] *** Quits: hexingb (~hexingb@180.212.209.125) (Ping timeout: 256 seconds)
[10:46:21] *** Joins: hexingb (~hexingb@36.155.28.143)
[10:51:51] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[10:52:17] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[10:53:09] *** Joins: UPXTcgv7 (~KTC2gV3Y@74.5.131.75)
[10:55:17] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[10:57:54] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 250 seconds)
[10:58:38] *** Joins: hexingb (~hexingb@111.32.64.41)
[10:59:27] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:59:43] *** Joins: mishugana (~mishugana@user/mishugana)
[11:00:45] <vdamewood> Hi, people etc.
[11:01:15] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ¦)
[11:02:53] <Rounin> Hi there
[11:03:05] *** Joins: terminalpusher (~terminalp@2a01:586:2a30:1:d3c4:1c64:1e25:f0f2)
[11:03:23] *** Quits: terminalpusher (~terminalp@2a01:586:2a30:1:d3c4:1c64:1e25:f0f2) (Remote host closed the connection)
[11:05:42] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 250 seconds)
[11:05:50] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[11:07:28] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:07:37] *** Joins: _z3r0_ (~Z3R0@2a02:2f0f:920b:b800:89ed:4f7c:9680:bd77)
[11:11:28] *** Quits: lithium_sulfate (~li2so4@sr388.sophieversum.net) (Quit: .)
[11:12:18] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[11:12:18] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[11:12:18] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[11:13:56] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[11:16:06] *** Joins: lithium_sulfate (~li2so4@sr388.sophieversum.net)
[11:16:35] *** Joins: victori (~victori@cpe-76-89-139-69.socal.res.rr.com)
[11:16:53] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:17:09] *** Quits: vigumnov (~victori@cpe-76-174-185-227.socal.res.rr.com) (Ping timeout: 256 seconds)
[11:17:51] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[11:18:04] *** Joins: The_Blode_ (uid537595@user/the-blode/x-7164444)
[11:19:00] *** Quits: kotshie (~kotshie@68.72.208.140) (Quit: Leaving)
[11:20:31] *** Joins: joe_colben (~joe____co@185.190.112.211)
[11:21:33] *** Joins: vigumnov (~victori@cpe-76-89-139-69.socal.res.rr.com)
[11:21:35] *** Quits: victori (~victori@cpe-76-89-139-69.socal.res.rr.com) (Read error: Connection reset by peer)
[11:27:03] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[11:27:21] *** Joins: joe_colben (~joe____co@185.190.112.211)
[11:30:46] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[11:30:57] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[11:33:01] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[11:33:28] *** Joins: aradesh (~aradesh@user/aradesh)
[11:33:59] *** Joins: dan01 (~dan01@2a02:2f0f:311c:1500:79c1:f45:56c2:de77)
[11:39:21] *** Joins: Camilo (~hugh@host-92-1-126-125.as13285.net)
[11:41:23] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[11:44:01] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-d49e-2693-ff7b-69a7.res6.spectrum.com) (Quit: jarthur)
[11:46:41] *** vinleod is now known as vdamewood
[11:51:17] *** Quits: Cashlin (~hp@user/cashlin) (Ping timeout: 240 seconds)
[11:51:37] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[11:52:05] *** Joins: Cashlin (~hp@user/cashlin)
[11:52:32] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:f83e:378c:1afc:a9b5) (Ping timeout: 240 seconds)
[11:53:56] *** Joins: leonarth (~leonarth@user/leonarth)
[11:58:50] *** Joins: palasso (~palasso@user/palasso)
[12:01:21] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:4d19:4ce6:713a:9046)
[12:01:57] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[12:04:33] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[12:08:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[12:09:29] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[12:11:09] *** Joins: shiit (~Administr@113.25.24.203)
[12:11:52] *** Joins: diophantoz (~diophanto@user/diophantoz)
[12:12:59] *** Joins: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374)
[12:13:15] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 256 seconds)
[12:14:12] *** Joins: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr)
[12:14:32] *** Quits: dan01 (~dan01@2a02:2f0f:311c:1500:79c1:f45:56c2:de77) (Ping timeout: 240 seconds)
[12:15:08] *** Quits: chomwitt (~chomwitt@2a02:587:dc03:8b00:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[12:16:32] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[12:17:01] *** Quits: Duchess (~Duchess@24.109.185.150) (Ping timeout: 256 seconds)
[12:19:48] *** Quits: sonny (~user@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca) (Ping timeout: 250 seconds)
[12:20:20] *** Joins: murii (~murii@2a02:a58:835a:1100:48e:c12e:a5c8:6d73)
[12:24:11] *** Joins: Burgundy (~NA@86.121.143.206)
[12:24:29] *** Quits: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[12:24:37] *** Quits: murii (~murii@2a02:a58:835a:1100:48e:c12e:a5c8:6d73) (Ping timeout: 240 seconds)
[12:25:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[12:25:59] *** Joins: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de)
[12:25:59] *** Quits: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de) (Changing host)
[12:25:59] *** Joins: resamvi (~resamvi@user/resamvi)
[12:27:07] *** Joins: inlight (~inlight@157.42.246.147)
[12:27:07] *** Quits: inlight (~inlight@157.42.246.147) (Changing host)
[12:27:07] *** Joins: inlight (~inlight@user/inlight)
[12:29:08] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[12:30:34] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:30:38] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 250 seconds)
[12:31:31] *** Joins: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de)
[12:31:31] *** Quits: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de) (Changing host)
[12:31:31] *** Joins: resamvi (~resamvi@user/resamvi)
[12:35:11] *** Parts: sandman13 (sandman13@sandman13.jujube.ircnow.org) (#rekt)
[12:35:57] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 240 seconds)
[12:37:20] *** Joins: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de)
[12:37:20] *** Quits: resamvi (~resamvi@p57948ee0.dip0.t-ipconnect.de) (Changing host)
[12:37:20] *** Joins: resamvi (~resamvi@user/resamvi)
[12:37:42] *** Joins: freep (~freepppp@62.1.35.210.dsl.dyn.forthnet.gr)
[12:38:09] *** Quits: shiit (~Administr@113.25.24.203) (Read error: Connection reset by peer)
[12:38:33] *** Joins: shiit (~Administr@113.25.24.203)
[12:39:57] *** Joins: sonny (~user@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca)
[12:40:26] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:41:16] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[12:47:14] *** Joins: dan01 (~dan01@2a02:2f0f:311c:1500:79c1:f45:56c2:de77)
[12:47:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[12:48:12] *** Joins: tboehme (~tboehme@p200300ce1710ed434a9bf556c35070f0.dip0.t-ipconnect.de)
[12:49:34] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[12:50:02] *** Quits: tboehme (~tboehme@p200300ce1710ed434a9bf556c35070f0.dip0.t-ipconnect.de) (Client Quit)
[12:51:14] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[12:52:13] *** Joins: Fairy97 (~Fairy@2001:464a:4992:0:7dea:a064:ef4b:9600)
[12:55:11] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 256 seconds)
[12:55:32] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e160:8c45:e86d:6d90) (Ping timeout: 240 seconds)
[12:57:50] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[13:01:58] *** Quits: hexingb (~hexingb@111.32.64.41) (Read error: Connection reset by peer)
[13:02:07] *** Joins: loganlee (~Thunderbi@user/loganlee)
[13:02:20] *** Joins: hexingb (~hexingb@111.32.64.41)
[13:02:39] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[13:03:43] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[13:04:41] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:05:19] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:4d19:4ce6:713a:9046) (Ping timeout: 268 seconds)
[13:05:31] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[13:05:33] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[13:05:56] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:06:20] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:06:47] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[13:07:05] *** Quits: sonny (~user@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca) (Ping timeout: 256 seconds)
[13:08:16] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[13:13:41] *** Quits: sner (~paul@user/sner) (Ping timeout: 256 seconds)
[13:18:27] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[13:20:43] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[13:31:08] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[13:31:20] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:25:3430:6d5f:c01)
[13:34:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[13:35:43] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[13:36:21] <davros> https://www.youtube.com/watch?v=YQ_xWvX1n9g "the problem with NFTs" .. anyone agree/disagree?
[13:36:22] <bayaz> Title: The Problem With NFTs 
[13:36:27] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[13:37:41] <Stryyker> not watching it but there are no shortage of issues - like whatever you purchased disappearing. For example you purchased a weblink and the site goes down, things get moved, deleted etc.
[13:38:50] <davros> his basic point is... it's worse than that,  it's all about pumping crypto generally its critical to their whole plan to "financialise every micro level interaction", and if they suceed we end up in a dystopia where this all becomes compulsory eg to interact with anyone else in law etc 
[13:39:57] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[13:40:05] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:40:34] *** Joins: kcrk (~kcrk@user/kcrk)
[13:41:14] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[13:44:21] *** Joins: Kacper_ (~kasper93@user/kasper93)
[13:45:52] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[13:45:59] *** Quits: kasper93 (~kasper93@user/kasper93) (Ping timeout: 256 seconds)
[13:51:37] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[13:52:53] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[13:53:02] *** Joins: murii (~murii@2a02:a58:835a:1100:48e:c12e:a5c8:6d73)
[13:53:40] *** Joins: spinningCat (~spinningC@94.54.210.37)
[13:53:40] *** Quits: spinningCat (~spinningC@94.54.210.37) (Changing host)
[13:53:40] *** Joins: spinningCat (~spinningC@about/web/muscles)
[13:53:40] *** Joins: MatSharrow (~matthew@169.99.9.51.dyn.plus.net)
[13:54:33] <cynomys> also agree... a lot of web3 hype seems to come from the desire to decentralize interactions and platforms, without really understanding what makes online communities and ecosystems work in the first place
[13:55:27] <cynomys> the financialisation of everything (as you mentioned) just promotes greed and mistrust, and it's a lot harder to program your way out of *that*
[13:55:53] *** Quits: Crowley99 (~Crowley99@208.59.191.14) (Quit: Connection closed)
[13:57:05] <davros> after watching that, i've gone from "i despise NFTs for causing GPU shortages" to being quite scared of the whole movement now, like, what if they actually suceed :/
[13:57:10] <shiit> what's financialisation, is there any clear explaination of it? 
[13:57:44] <davros> the video's claim is: the people behind crypto want every little interaction between people to be market, speculation driven
[13:57:44] *** Quits: jjt (~jjt@user/jjt) (Ping timeout: 250 seconds)
[13:58:41] <davros> imagie for example, what if regular web browsers with "right click save" stopped being available, what if these guys got in control of the hardware platforms.
[13:58:54] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[13:59:06] <GeDaMo> https://www.gamespot.com/articles/reddit-co-founder-says-play-to-earn-crypto-games-will-be-90-of-gaming-market-in-5-years/1100-6499700/
[13:59:41] <davros> play to earn.. the difference between fruit machines , and actual arcade games when i was growing up
[14:00:03] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[14:00:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[14:00:19] <davros> like.. what if they stop making games to serve people who play them to enjoy them..
[14:00:39] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:00:43] <GeDaMo> We'll have to make our own games! With blackjack and hookers! :P
[14:01:18] <davros> what if they end up controlling all the hardware platforms, note that crypto people are buying up all the GPUs
[14:01:31] <inhahe_> i'm guessing if the play to earn games aren't that enjoyable, there will always be a market for games we play just to enjoy them
[14:01:35] *** Joins: jaysicks (~jaysicks@87-97-5-238.pool.digikabel.hu)
[14:02:21] <GeDaMo> People already buy and play games with loot boxes and microtransactions
[14:02:40] <cynomys> I think in the grand scheme of things, it's mostly a fad. Seems like pretty much everyone who predicts that NFTs will become the new medium of interaction not-so-coincidentally have a large stake in their success 
[14:03:09] <cynomys> They're not very convenient for users or developers
[14:03:19] <inhahe_> seems too ridiculous to me not to be a fad
[14:03:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[14:04:01] <cynomys> and people have been predicting for years that "soon every store will support bitcoin" which hasn't really panned out
[14:04:32] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[14:04:32] <pyzozord> there are already farming companies in china or japan that hire games to farm items in World of Warcraft to sell for real world money
[14:04:53] *** Joins: debayer948 (~debayer@76.82.226.116)
[14:05:20] *** Joins: img (~img@user/img)
[14:06:00] <pyzozord> I think this might be actually to a lesser degree in AAA market, but very ubiquitous in the mobile/casual market
[14:06:45] <cynomys> what would that look like in a game though?
[14:07:04] <davros> right mobile/casual is .. a different kettle of fish
[14:07:10] <pyzozord> in mobile/casual market you just replace the ingame currency with crypto
[14:07:31] <pyzozord> in AAA space you can buy dlcs for crypto
[14:07:33] <GeDaMo> Any game which allows players to transfer items between them is open to farming
[14:08:23] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[14:08:23] <pyzozord> looks like economists will be hired by game companies
[14:08:25] <cynomys> but from a marketing/development perspective, it seems like a lot of effort for something that players won't really feel the difference 
[14:08:31] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[14:08:31] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[14:08:31] *** Joins: menace (~someone@user/menace)
[14:08:39] *** Quits: inky (~inky@46.36.119.105) (Read error: Connection reset by peer)
[14:08:44] *** menace is now known as Deknos
[14:08:52] <GeDaMo> pyzozord: I'd be surprised if there aren't already
[14:09:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[14:09:18] <pyzozord> that might be true, especially in that mobile/casual market
[14:09:24] <GeDaMo> I'm pretty sure they hire psychologists to design addictive game mechanics
[14:09:25] *** Quits: hexingb (~hexingb@111.32.64.41) (Ping timeout: 256 seconds)
[14:09:38] *** Joins: hexingb (~hexingb@36.155.28.143)
[14:09:46] <pyzozord> yeah I heard of that too
[14:10:15] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:11:07] *** Joins: plastico (~plastico@neomutt/plastico)
[14:12:58] *** Joins: inky (~inky@46.36.119.105)
[14:14:11] <user51> http://0x0.st/ooWr.png 
[14:14:12] <bayaz> Type: image/png Size: 93.7 kB 
[14:14:15] <GeDaMo> I wonder if medical ethics committees will ever put a stop to that
[14:14:17] <pyzozord> Magic The Gathering has tremendous potential to exploit blockchain technology, both the cryptocurrencies and nft
[14:14:45] <davros> 'hire psychologists to..'   well pretty much "a game designer" is "a psychologist who designs addictive game mechanics"
[14:15:06] <user51> i wonder if they get addicted to their own games
[14:15:30] <davros> "playing your own game is sad.." i've heard one say.
[14:16:18] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:16:19] <davros> but i tihnk its pretty normal for people to make a game they want to play
[14:16:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[14:16:31] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:16:35] *** Joins: mickey8 (~user@user/mickey)
[14:16:42] <pyzozord> davros: not really, a game designer is simply a person who designs levels / game mechanics. A psychologist with something educated in psychology. We meant the latter
[14:16:56] <davros> a certain type of game designer, i should ay
[14:16:59] <davros> say^
[14:17:23] <davros> the person at the top of the designer tree who has the final say on this is the one who is trusted to do that psychology
[14:17:34] <pyzozord> there can be a psychologist who is also a game designer, but I rather assume psychologists are hired as consultants for the game designers
[14:17:35] <davros> i.e. "i know what will keep players coming back"
[14:17:49] *** Lord_of_Life_ is now known as Lord_of_Life
[14:18:12] <davros> i know what you're saying r.e. "hiring psychologists" but i dont think psychologists academically trained would have the insight into the right kind of psychology,
[14:18:19] <pyzozord> I wouldn't call that psychology no more than trying to get your friend to do something for you
[14:18:22] <davros> i think many fields involve "domain specific psychology"
[14:18:25] <shiit> from the perspective of designer and user playability and playable are different things 
[14:18:46] <pyzozord> but well it's semantics, nvm
[14:19:00] <davros> kind of like how there's a discipline of "mathematician" but engineers, physicicts, economists all have their own applied maths
[14:19:12] <davros> right pyzozord i dont want to start a semantic argument :)
[14:19:21] <davros> what i should say is
[14:19:43] <davros> "a sucessful game designer must have an intuitive grasp of the subset of psychology relevant to this"
[14:20:44] <davros> its their responsibility to figure out the difference between the developpers/design team making the game *they* want to play, vs the game *customers* want to play
[14:20:49] <pyzozord> for sure it's part of the thing, I was just saying we were talking about hiring officially educated/licensed psychologists
[14:21:00] <davros> yeah fair enough
[14:21:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[14:21:31] *** Joins: joe_colben (~joe____co@185.190.112.211)
[14:21:55] *** Quits: _z3r0_ (~Z3R0@2a02:2f0f:920b:b800:89ed:4f7c:9680:bd77) (Quit: WeeChat 3.4)
[14:23:16] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:23:24] <davros> "trained psychologist" vs someone  trained in anything else
[14:24:06] <GeDaMo> Armchair psychologist! :P
[14:24:27] <user51> i'm trying to increase my productivity with vimlovian conditioning.
[14:25:06] <GeDaMo> Every time you touch the mouse, you get an electric shock? :|
[14:26:59] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:4d19:4ce6:713a:9046)
[14:27:37] <user51> one of the many possibilities..
[14:31:39] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:4d19:4ce6:713a:9046) (Ping timeout: 268 seconds)
[14:32:24] *** Quits: molson__ (~molson@2001:48f8:704a:123d::75f:1027) (Ping timeout: 250 seconds)
[14:33:23] *** Joins: zaher (~zaher@37.48.145.125)
[14:36:38] *** Joins: coodre (~no@105.157.212.12)
[14:36:57] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[14:37:21] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:42:43] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[14:45:16] <magga> im making an app that creates a lot of .ics files. does anyone know if its possible to specify the timezone for the whole calendar file in the VCALENDAR component? :)
[14:46:57] *** Joins: frost (~frost@user/frost)
[14:47:57] *** Quits: joe_colben (~joe____co@185.190.112.211) (Ping timeout: 240 seconds)
[14:52:31] <pyzozord> I don't know what people have against wordpress, it's a great tool for what it does
[14:52:37] *** Joins: Twipply (~Twipply@user/twipply)
[14:52:47] <pyzozord> wordpress is _the_ killer app for php
[14:53:00] <inhahe_> i like wordpress
[14:53:06] <inhahe_> i'm editing something on wordpress.com right now=yp
[14:53:12] <inhahe_> =p
[14:53:25] *** Joins: mishugana (~mishugana@user/mishugana)
[14:53:35] <GeDaMo> https://www.bleepingcomputer.com/news/security/over-90-wordpress-themes-plugins-backdoored-in-supply-chain-attack/
[14:53:37] <bayaz> Title: Over 90 WordPress themes, plugins backdoored in supply chain attack 
[14:54:23] <pyzozord> oh fair it's probably not that secure, especially if you use third party plugins
[14:54:33] *** Quits: Brett[Air] (~Brett@27-32-147-253.static.tpgi.com.au) (Ping timeout: 256 seconds)
[14:55:00] <pyzozord> but I'm not sure if poor plugin security can be attributed to the wordpress itself
[14:57:14] <inhahe_> what about the themes insecurity?
[14:57:19] <nomagno> I have never really understood the appeal of WordPress
[14:57:19] <nomagno> what does it offer over a dumb HTML server?
[14:57:38] <nomagno> slash HTTP
[14:57:50] <pyzozord> hmm... themes and plugins? :D
[14:57:58] <pyzozord> damn
[14:58:03] <coodre> people should make their own wordpress theme in bais cHTML
[14:58:07] <coodre> basic HTML
[14:58:14] <coodre> it's much more lightweight
[15:01:20] <nomagno> Any recommendations for RSS feed generators?
[15:01:23] <pyzozord> that's fair security is probably a big issue of wordpress
[15:01:34] <pyzozord> but if it was secure, it would be great
[15:01:41] <nomagno> I'm not really familiar with how to work with RSS on the server side
[15:01:42] <nomagno> So just any lightweight tool will do I guess
[15:01:46] *** Joins: duuude (~user@user/duuude)
[15:01:58] <coodre> isn't RSS just a XML file?
[15:02:00] <pyzozord> isn't rss just xml?
[15:02:14] <pyzozord> with some schema
[15:03:11] <nomagno> Well yes, but just like I don't write my websites in HTML because it's too cumbersome
[15:03:39] <nomagno> Isn't there some tool that will generate an RSS feed from a folder?
[15:03:45] <pyzozord> I'd probably just find some library for whatever language I'm using
[15:04:05] <pyzozord> but for this one it might just be an xml library
[15:04:23] <nomagno> I'm not using any language tho
[15:04:52] <nomagno> My framework for writing websites is the Unix filesystem, a webserver, and a script that does symlinks
[15:05:19] <pyzozord> what do you want th generate the xml from?
[15:05:35] <pyzozord> s/xml/rss/
[15:05:43] <nomagno> So I don't have many libraries at my disposal
[15:05:52] *** Joins: Atque (~Atque@user/atque)
[15:06:08] *** Joins: Fausto (~dante@gateway/tor-sasl/filohuhum)
[15:06:48] <coodre> so, you're saying you want to generate RSS from a directory, but what format is the input files gonna be
[15:07:00] <GeDaMo> Markdown! :P
[15:07:24] <GeDaMo> Even better, plain text!
[15:07:36] <nomagno> Well, a list of files...
[15:08:11] <GeDaMo> You need a title/heading at least for an RSS feed, though
[15:09:17] <coodre> list of files, but what format
[15:09:47] *** Joins: joe_colben (~joe____co@185.190.112.211)
[15:10:21] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[15:11:06] <nomagno> You know, I can probably just write a simple shell script to do this
[15:11:44] <coodre> maybe a makefile
[15:11:58] <nomagno> the XML format is dead simple
[15:12:45] <nomagno> and RSS too
[15:12:47] <nomagno> Markdown OR HTML, or possibly it doesn't matter
[15:12:53] <nomagno> I could just encode all relevant information in the file name
[15:13:03] <nomagno> I'm working on it,
[15:13:05] <coodre> rss doesn't even have formatting (at least in the description)
[15:14:52] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Client Quit)
[15:15:09] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[15:15:28] *** Joins: joe_colben (~joe____co@185.190.112.211)
[15:16:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[15:16:51] *** Quits: tehenderz (~tehenderz@ti0018a400-11022.bb.online.no) (Ping timeout: 256 seconds)
[15:17:08] *** Joins: tehenderz (~tehenderz@ti0018a400-10201.bb.online.no)
[15:17:59] *** Quits: _inky (~inky_@46.36.119.105) (Ping timeout: 256 seconds)
[15:18:11] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[15:18:24] <coodre> is gnu coding standard good?
[15:19:40] *** Joins: python476 (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[15:19:40] <mishugana> coodre: as compared to ?
[15:20:12] <coodre> linux or something
[15:21:02] <mishugana> coodre: depends ... for C, I like to follow K&R style (2nd edition).. gnu diverges from that style
[15:21:15] <mishugana> linux' bizarre 8 spaces per tab et al are not to my liking at all
[15:21:42] <coodre> 8 spaces/braces on the same line as function definition/long function names
[15:21:49] <coodre> yet 80 char per line
[15:22:02] <mishugana> it's visually jarring for me
[15:22:21] <mishugana> I uses two spaces per tab ... maybe some people will find that odd. A lot of people use 4 per tab, I believe
[15:22:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[15:22:46] <mishugana> I use* (sorry for sounding like Jar Jar there. Heh.)
[15:23:02] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[15:23:07] <GeDaMo> I use 2 spaces
[15:23:12] <mishugana> nice!
[15:23:16] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[15:23:43] <coodre> i find GNU to be good for the 80 char limit
[15:23:47] <shiit> 2 tabs is just fine with monospace font 
[15:24:06] <mishugana> excellent .. good to learn that I'm not the odd one out! :)
[15:24:07] *** Joins: haliucinas (~haliucina@5.20.153.21)
[15:24:23] <mishugana> coodre: maybe so, but I dislike their brace positioning on while, for etc.
[15:24:24] <pyzozord> I use two spaces for web stuff, and 1 tab for "native" stuff
[15:24:40] <pyzozord> my editor is configured to show 2 spacs as 2 spaces but 1 tab as 8 spaces (but keep it as a tab)
[15:25:16] *** Quits: duuude (~user@user/duuude) (Ping timeout: 250 seconds)
[15:25:27] <potatoxel[m]> ofc i use -2 spaces (jk)... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/6eee454bc435dc71f0dc6c7bb031ca2e32126f02)
[15:27:47] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:29:30] *** Parts: python476 (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[15:29:52] *** Joins: Kanth (~Gabriel@138-117-61-53.rev.multiplicnet.com.br)
[15:31:17] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 240 seconds)
[15:31:37] *** Joins: hexingb (~hexingb@36.155.28.143)
[15:32:00] <deniska> fibonacci indentation: 0 1 1 2 3 5 8 etc spaces :D
[15:32:42] *** Quits: dan01 (~dan01@2a02:2f0f:311c:1500:79c1:f45:56c2:de77) (Ping timeout: 268 seconds)
[15:34:32] *** Quits: inky (~inky@46.36.119.105) (Ping timeout: 240 seconds)
[15:35:05] <GeDaMo> https://nickgravgaard.com/elastic-tabstops/
[15:35:06] <bayaz> Title: Elastic tabstops - a better way to indent and align code 
[15:35:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[15:35:44] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:35:53] *** Quits: Kanth (~Gabriel@138-117-61-53.rev.multiplicnet.com.br) (Quit: Leaving)
[15:36:59] *** Joins: frost (~frost@user/frost)
[15:38:23] *** Quits: cynomys (~cynomys@user/cynomys) (Ping timeout: 256 seconds)
[15:38:24] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[15:40:42] <pyzozord> ooh that's cool
[15:40:45] <pyzozord> how does this work
[15:41:12] <pyzozord> must be parsing language syntax
[15:41:19] *** Joins: dan01 (~dan01@2a02:2f0f:311c:1500:79c1:f45:56c2:de77)
[15:41:36] <GeDaMo> No, it's just adjusting the position of the tabstop according to the amount of text
[15:41:45] <phogg> cool but impractical. As soon as you try and view the code anywhere outside your fancy editor everything falls over, and half the problem with the indent war is that any two people might have different ideas of what is correct. This is just another incompatible solution.
[15:44:10] <pyzozord> in practice there are usually code style guides per project, this could work
[15:44:19] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[15:45:18] <phogg> The author seems to think the issue is a disagreement about the number of spaces represented by a tab character, which is mostly not the issue. When used correctly tab indent doesn't care how many spaces are displayed (everything still works out okay).
[15:45:38] *** Joins: Klinda (~superleag@user/klinda)
[15:45:39] <phogg> pyzozord: until git diff learns it I don't see the practicality
[15:46:03] <pyzozord> I usually turn off white space in git diffs
[15:46:18] <phogg> pyzozord: I would also include kdiff3 (my GUI diff tool of choice) and probably diff(1), but in general you would need to either restrict the tooling used by your team or have it all be compatible
[15:46:34] <nomagno> https://termbin.com/gcy5
[15:46:35] <bayaz> Type: text/plain; charset=utf-8 
[15:46:49] <phogg> even if you don't show whitespace as a difference you still need the indent to understand how snippets relate
[15:46:53] <nomagno> Fixed, shell script that replaces underscore with space and generates feed from files in folder
[15:46:55] <phogg> it matters more in a diff than in regular code
[15:47:05] <nomagno> Well, I have to make it remove the extension, that's true
[15:48:26] <phogg> nomagno: str='some_snake_case'; printf %s\\n "${str//_/ }"
[15:48:33] <pyzozord> nomagno: nice
[15:48:53] <deniska> Tab being configurable is actually problematic. The same code feels quite different with width set to 2 and to 8
[15:49:28] <phogg> deniska: how it feels is a personal aesthetic choice. Just don't look at my screen!
[15:50:22] <phogg> I work every day (and exchange code with) a gentleman who uses a tab stop of 4, and I use 8. We have no real issues. It doesn't have to be a big deal.
[15:50:43] <phogg> The only people who screw it up for everyone is those who use spaces.
[15:50:51] <phogg> ds/is/are/
[15:52:35] <deniska> With spaces code looks exactly like the author intended on every machine
[15:53:10] <deniska> (I mean, fonts and editor theme still may vary, but they're of much less importance to how people perceive code)
[15:53:14] <GeDaMo> Unless their editor uses proportional fonts :|
[15:54:23] <phogg> deniska: if code were read only you might have an argument
[15:54:45] <phogg> but even so if I have to read it then the "2 spaces feels different" problem comes up.
[15:54:48] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:106:253c:5943:daf8) (Read error: Connection reset by peer)
[15:55:33] <deniska> It's the issue when people are writing the code. 2-columns tab person will nest code much more deeply because it doesn't look as bad on their screen
[15:55:35] <phogg> and if I have to modify it the first thing I must do is mechanically replace spaces with the equivalent number of tabs, which is *almost always* not going to work since the space-loving author will have failed at consistency.
[15:55:55] <phogg> deniska: No. If they do that they're wrong and need to be slapped hard.
[15:56:07] <phogg> ONE tab is ONE level of indent, period. You add ONE level for each block, period.
[15:56:16] <phogg> Use whatever tab stop gives you the visual appeal you want.
[15:56:56] <phogg> Like I said before, if used *correctly* tab indent doesn't cause any issues.
[15:56:56] <deniska> phogg: sure, but if their tab is rendered as two spaces, they will put classes in classes in functions in functions ifs in ifs 10 levels deep because it's just 20 columns on their screen
[15:57:20] <phogg> deniska: people who do that are monsters in any case. That's where local coding style guides come in to play.
[15:59:24] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[16:00:20] <coodre> what IDE do you guys use
[16:01:19] <phogg> emacs, eclipse, nano, notepad++ (depending on what I'm doing and where I am)
[16:01:25] <deniska> neovim
[16:01:35] <coodre> emacs mainly
[16:02:14] *** Joins: markong (~kvirc@213.146.188.203)
[16:02:50] <leduyquang753> `vim`.
[16:03:08] <GeDaMo> ideone :P
[16:03:33] <coodre> i use vim for small stuff
[16:03:58] <Athas> Emacs best.
[16:04:04] <Athas> My IDE is Unix.
[16:04:24] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[16:04:50] *** Joins: debayer948 (~debayer@76.82.226.116)
[16:05:01] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[16:05:29] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[16:05:49] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[16:06:36] <nomagno> Yup
[16:06:44] <nomagno> You know, since I switched to managing websites using the actual filesystem, I'm much happier
[16:06:46] <nomagno> everything's so much easier
[16:07:01] <coodre> static websites
[16:07:01] <beaky> nice i like filesystems
[16:07:17] <beaky> with filesystems it feels like everything is a file that you can use and do anything with
[16:07:43] <nomagno> coodre: I don't make websites with dynamic content, so yeah
[16:07:43] <coodre> wait i thought you didn't wanna write your website in HTML
[16:07:47] <phogg> nomagno: https://termbin.com/g8cx for your consideration
[16:07:48] <bayaz> Type: text/plain; charset=utf-8 
[16:08:42] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:08:43] <nomagno> coodre: I use pandoc to convert from Markdown
[16:08:44] <phogg> The thing understood by people who generate static websites that is often missed by those who assume dynamism in web sites is that speed is entirely about caching.
[16:09:00] <coodre> phogg: i keep reading half-world as half-life
[16:09:36] <nomagno> `pandoc --ascii -f markdown-auto_identifiers -t html FILE.md`
[16:10:13] <phogg> nomagno: my paste requires bash (I should have put in a bang line) but the upshot is zero extra processes are spawned and only one file write happens.
[16:10:23] <nomagno> Then I copy paste my header template, which is like 5 lines
[16:11:13] <nomagno> phogg: Meh, I've made a habit out of portability at this point
[16:12:14] <nomagno> The whole point of the entire project is that I ask effectively nothing out of the user, or rather out of the user's tools
[16:12:45] <nomagno> Compared to modern projects, anyways
[16:13:32] <nomagno> See-through development
[16:13:36] <Athas> nomagno: yes!  It drives me nuts how much modern tools and languages try to hide the file system.
[16:13:50] <nomagno> You can almost reach my soul through that git repo :P
[16:14:19] <coodre> reminds me about that news article about how gen Z kids don't know what a file or directory is
[16:14:27] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 256 seconds)
[16:15:07] <deniska> https://bpa.st/3W2Q Totally Professional Web Development Framework I used for a recent freelance jobby :)
[16:15:08] <bayaz> Title: View paste 3W2Q 
[16:15:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[16:16:01] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[16:16:14] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[16:17:45] <deniska> oops, forgot the CI script https://bpa.st/ZVGQ
[16:17:47] <bayaz> Title: View paste ZVGQ 
[16:18:22] *** Quits: UPXTcgv7 (~KTC2gV3Y@74.5.131.75) (Quit: Quitting)
[16:19:00] <phogg> nomagno: sadly ${var//} is not portable.
[16:19:07] <phogg> at least not yet
[16:19:13] <nomagno> Also the production instance of my website is literally just a symlink to the docs/ folder of my git repo :P
[16:19:16] <pyzozord> deniska doing CI/CD like it's 1999 :D
[16:19:24] <nomagno> Most responsive CI ever
[16:19:41] <nomagno> deniska: that's too modern!
[16:19:42] <nomagno> Too much file copy
[16:19:56] <deniska> nomagno: compootors are fast
[16:20:00] <nomagno> :D
[16:20:14] <nomagno> I know
[16:20:19] <pyzozord> deniska: your framework is classy
[16:20:25] <nomagno> A symlink triggers instantaneously though
[16:20:49] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[16:20:58] <nomagno> deniska: My PDP-11 disagrees
[16:23:37] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 240 seconds)
[16:23:52] *** Joins: chomwitt (~chomwitt@2a02:587:dc06:be00:12c3:7bff:fe6d:d374)
[16:25:38] *** Joins: rvalue (~rvalue@user/rvalue)
[16:25:51] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[16:27:04] *** Joins: WhO (~V@43.242.116.106)
[16:32:50] *** Joins: node1 (~hex@user/node1)
[16:34:01] *** Quits: node1 (~hex@user/node1) (Remote host closed the connection)
[16:34:33] *** Joins: node1 (~hex@user/node1)
[16:35:09] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[16:35:22] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[16:36:24] <node1> Hello folks!
[16:37:31] *** Quits: node1 (~hex@user/node1) (Remote host closed the connection)
[16:37:55] *** Joins: node1 (~hex@user/node1)
[16:38:15] <nomagno> Hi
[16:39:22] <hans> why is Chrome Dev Tools lying about the "Content-Length" header on this page? https://directip.loltek.net/
[16:39:22] <bayaz> Type: text/plain; charset=utf-8 Size: 15 B 
[16:39:31] *** Quits: node1 (~hex@user/node1) (Remote host closed the connection)
[16:39:40] <hans> devtools says "Content-Length: 32", but the actual number the server sends is 12...
[16:40:01] *** Joins: node1 (~hex@user/node1)
[16:40:38] <hans> (which can be easily confirmed with > curl --dump-header - 'http://directip.loltek.net/'
[16:41:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[16:42:03] <hans> err, at least for me its 12, i suppose it could be anywhere between "1.1.1.1".length - "255.255.255.255".length inclusive 
[16:42:26] <hans> but devtools is still lying about it
[16:42:30] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[16:42:45] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[16:43:00] *** Joins: hex_ (~hex@43.230.42.145)
[16:43:45] *** Quits: node1 (~hex@user/node1) (Read error: Connection reset by peer)
[16:44:21] *** Joins: rtypo (~alex@user/rtypo)
[16:45:25] <hans> ohhh no i get it... curl doesn't use compression by default, but the browser does, the browser sends "Accept-Encoding: ...gzip...", and the server decide to use gzip, and gzip "compresses" the response from 12 bytes to 32 bytes, so 32 bytes is actually correct, 32 with gzip overhead
[16:46:25] *** Joins: inky (~inky@37.186.122.130)
[16:47:21] *** Quits: WhO (~V@43.242.116.106) (Quit: Leaving)
[16:48:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[16:48:52] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[16:49:09] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[16:51:01] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:51:41] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[16:52:12] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Quit: brb)
[16:52:29] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Quit: WeeChat 3.4)
[16:53:26] *** Joins: frost (~frost@user/frost)
[16:53:44] *** Quits: rtypo (~alex@user/rtypo) (Read error: Connection reset by peer)
[16:56:20] *** Joins: _z3r0_ (~Z3R0@2a02:2f0f:920b:b800:89ed:4f7c:9680:bd77)
[16:57:18] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:59:47] *** Quits: joe_colben (~joe____co@185.190.112.211) (Ping timeout: 256 seconds)
[17:00:04] <nomagno> That's dumb
[17:00:31] *** Joins: magla (~gelignite@55d42e32.access.ecotel.net)
[17:01:47] *** Joins: Inari (~Pinkishu@p4fe7ebfe.dip0.t-ipconnect.de)
[17:01:55] *** Quits: xeno (~xeno@user/xeno) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[17:02:28] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[17:03:11] *** hex_ is now known as node1
[17:03:21] *** Quits: node1 (~hex@43.230.42.145) (Changing host)
[17:03:21] *** Joins: node1 (~hex@user/node1)
[17:07:42] *** Joins: joe_colben (~joe____co@185.190.112.211)
[17:08:37] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 240 seconds)
[17:09:06] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[17:10:00] *** Quits: raym (~raym@user/raym) (Remote host closed the connection)
[17:10:25] *** Karyon_ is now known as Karyon
[17:13:21] *** Joins: vysn (~vysn@user/vysn)
[17:16:49] *** Joins: algebwarf (~dw4rfc4t@78.167.65.212)
[17:16:52] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[17:18:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[17:19:24] *** Joins: raym (~raym@user/raym)
[17:19:35] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[17:21:34] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[17:22:53] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[17:25:03] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[17:25:43] <ProfSimm> A language where every statetement is preceded by "#" like a bullet point and indentation is significant: https://pastebin.com/nJCjcQpr
[17:25:44] <bayaz> Title: # loop 1 100 # i: ? # print # is (i % 15 = 0) yes: "Fi - Pastebin.com 
[17:26:02] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 240 seconds)
[17:26:04] <ProfSimm> Yas or nay
[17:26:25] *** Joins: hexingb (~hexingb@36.155.28.143)
[17:28:44] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[17:30:29] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Ping timeout: 268 seconds)
[17:30:35] *** Quits: zaher (~zaher@37.48.145.125) (Ping timeout: 256 seconds)
[17:30:49] *** Joins: NEYi (~NEYi@109.251.216.38)
[17:31:21] <coodre> what if ISPs made a deal with popular websites to make their websites unnessecarily bloated, for more expensive data plans
[17:31:55] *** Joins: pulse (~pulse@user/pulse)
[17:32:14] <ProfSimm> coodre: you can raise prices without giving a reason
[17:32:57] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[17:33:08] <coodre> but then it would be more obvious
[17:33:48] <coodre> the best way is to make it as if the modern web is really deserving of a fast and bigger data plan
[17:34:14] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[17:36:12] <ProfSimm> coodre: and conversely needing to serve more data doesn't imply higher prices. It depends on what the market can bear.
[17:36:30] <ProfSimm> coodre: case in point, in Europe Internet is dirt cheap and we download shit all day
[17:37:09] <coodre> 1 GB (4G) costs like 5 dh here
[17:37:27] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:37:38] <mishugana> coodre: that's actually cheap ... no?
[17:37:45] <eXtr3m0> that scales only with the speed. since its so fast to load amount X, it's considered fine.
[17:37:59] <coodre> it's about 0.5 eur
[17:38:13] <mishugana> Hmmm... yeah,not really cheap
[17:39:02] <ProfSimm> coodre: maybe last nail in the coffin of that theory is the assumption that you need some reason for things to be bloated. It's actually the default of any system to grow uninhibited until it hits severe scarcity
[17:39:13] *** Joins: lispy (~lispy3@84.69.59.93)
[17:39:34] <ProfSimm> coodre: if we programmed like it's the 80s on modern hardware, your smartphone would never run out of space on 32GB and need charge once a week
[17:39:50] *** Quits: lispy (~lispy3@84.69.59.93) (Remote host closed the connection)
[17:39:52] <coodre> yes
[17:40:29] <ProfSimm> In fact if internet gets far more expensive, then we'll suddenly see a major push with "manifestos" meme and so on, how to make smaller websites
[17:40:35] <ProfSimm> People will start hating frameworks
[17:40:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[17:40:37] <ProfSimm> And so on
[17:40:47] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:40:48] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[17:40:50] <coodre> what plan do you guys even have
[17:40:59] <coodre> i mean internet plan
[17:41:39] <ProfSimm> coodre: 100mbps optic at home for $8
[17:41:50] *** Joins: lispy (~lispy3@84.69.59.93)
[17:41:50] <ProfSimm> I could get faster, but I don't need it
[17:41:52] <pulse> whatever the neighbor has, just hack his wpa2 :p
[17:42:02] <coodre> $8 thats way too cheap
[17:42:14] <ProfSimm> 1000mbps for about $20
[17:42:21] <mishugana> 100Mbps?
[17:42:30] <mishugana> or 100mpbs? :D
[17:42:52] <ProfSimm> I didn't realize it matters whether we capitalize the m
[17:43:06] <mishugana> haha... practically speaking, it doesn't
[17:43:10] <coodre> 100mbps costs 500dh per month here
[17:43:26] <ProfSimm> Wut
[17:43:42] *** Joins: Pickchea (~private@user/pickchea)
[17:43:51] <ProfSimm> coodre: United Arab Emirates?
[17:43:56] <coodre> check my IP
[17:44:17] <mishugana> I'm a digital nomad ... where I am right now, I get 50-75Mbps at around $15 (unlimited with no throttling though). 
[17:44:31] <mishugana> (per month)
[17:44:52] <coodre> there's also the price for installation which the ISP doesn't pay for, and you do, and it's about ~2500 dh
[17:44:59] <coodre> or 5000dh
[17:45:05] <ProfSimm> coodre: it's a function of competition, territory size and overall market size and saturation it seems
[17:45:13] <ProfSimm> Europe is densely populated and lots of competition
[17:45:22] <mishugana> plus the cost of living or even PPP
[17:45:22] <lispy> I am from 2142. We don't have to pay anything here, 9712EB per month
[17:46:44] <coodre> fiber optic is way too expensive, and thats why we use ADSL or some other slow ass internet
[17:46:45] *** Joins: rtypo (~alex@user/rtypo)
[17:46:52] <mishugana> that sucks
[17:47:33] <mishugana> some folks in Australia still use dial-up IIRC .. so, could be worse?
[17:47:53] <lispy> I can't imagine still using dial-up...
[17:48:13] <ProfSimm> coodre: optic cable is technically cheaper than what carries ADSL, it might be a problem of existing infrastructure or who knows
[17:48:20] <coodre> CDMA 150kbps costs 100dh per month anyway
[17:48:23] <mishugana> I miss the sounds though ... hehe
[17:48:55] *** Joins: trevors (~trevors@user/trevors)
[17:48:57] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[17:49:09] <mishugana> a big problem when you're a kid trying to hit up some dirty sites though ... hahaha
[17:49:25] *** Joins: rsx (~dummy@ppp-188-174-147-229.dynamic.mnet-online.de)
[17:49:34] *** Quits: chomwitt (~chomwitt@2a02:587:dc06:be00:12c3:7bff:fe6d:d374) (Ping timeout: 250 seconds)
[17:50:09] *** Joins: chomwitt (~chomwitt@2a02:587:dc06:be00:12c3:7bff:fe6d:d374)
[17:50:26] <ProfSimm> What about a programming language that's a sequence of "word expression word expression word" where words are treated literally as their name, and expressions are calculated? It'd allow clean named parameters and structs
[17:50:53] <ProfSimm> https://pastebin.com/xpaJ0yMe
[17:50:54] <bayaz> Title: # loop 1 to 100 # @i ? # print # is (i % 15 = 0) yes "FizzBuzz - Pastebin.com 
[17:51:00] <mishugana> sounds a bit like LOGO
[17:51:47] <ProfSimm> Does logo have some sort of order-dependent interpretation of tokens?
[17:52:02] <mishugana> yes, I do believe so
[17:52:07] <ProfSimm> hmm
[17:52:14] *** Quits: lispy (~lispy3@84.69.59.93) (Remote host closed the connection)
[17:52:30] *** Joins: lispy (~lispy3@84.69.59.93)
[17:52:31] <mishugana> that's why some of the primitives are baked in and have to be loaded up before interpretation... also makes parsing LOGO difficult IIRC
[17:52:37] <ProfSimm> We can also have comma be a valid "word" hence allowing unlabeled list like  1, 2, 3, 4
[17:54:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[17:54:45] <ProfSimm> It's a bit like SmallTalk messages, except it's dynamic
[17:55:19] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[17:56:20] <mishugana> What do you mean by dynamic?
[17:56:29] <mishugana> The interpretation of the symbol?
[17:57:18] <ProfSimm> mishugana: in SmallTalk you take the entire message and intepret it as a single unit. In my case I want the message to be fed into the receiver like a stream, which they interpret on the fly. Which allows constructing messages dynamically
[17:57:44] <ProfSimm> mishugana: in this example notice you can do elseifs (is yes is yes is yes no) of arbitrary length: https://pastebin.com/xpaJ0yMe
[17:57:45] <bayaz> Title: # loop 1 to 100 # @i ? # print # is (i % 15 = 0) yes "FizzBuzz - Pastebin.com 
[17:57:57] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 240 seconds)
[17:58:03] <ProfSimm> the first "is" is the receiver 
[17:58:12] <ProfSimm> And it interprets according to what it gets
[17:58:36] <mishugana> Hmm
[17:58:46] <mishugana> So how does `is` know when to stop?
[17:59:08] <mishugana> it doesn't, and the language keeps looking till `no`?
[17:59:20] <ProfSimm> mishugana: statements are like bullet points precedes by #. A statement is terminated by source end, or the next # at its indentation level
[17:59:51] <ProfSimm> So basically it's like semicolons, but before a statement, not after it
[17:59:58] <mishugana> so everything till the next `#` is part of the current statement, right?
[18:00:02] <mishugana> right
[18:00:04] <ProfSimm> right
[18:00:12] <ProfSimm> At the same indentation level, because indentation is significant
[18:00:13] <mishugana> and it's a dynamic interpreted language?
[18:00:51] <ProfSimm> It's more dynamic than others I guess. But you can fold a lot of those expressions before runtime and optimize them statically
[18:01:17] <ProfSimm> The compiler can argue which expressions are pure, with known input/structure and fold them
[18:01:29] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[18:01:41] <mishugana> so it's unbounded lookup in a way, right? Since #is could have as many 'branches" as the user desires
[18:02:35] <mishugana> which is fine since any sequential data structure has the same constraints anyway in the number of elements... 
[18:02:41] <ProfSimm> mishugana: it's unbounded as it's a stream of token/value pairs, but is it a lookup I don't know. It's a pattern
[18:03:27] *** Quits: ornxka (~ornxka@user/ornxka) (Ping timeout: 256 seconds)
[18:03:37] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[18:03:39] <mishugana> I mean from a static type checking perspective
[18:04:10] *** Joins: ornxka (~ornxka@user/ornxka)
[18:04:13] <ProfSimm> mishugana: well from static type checking perspective, the compiler looks for patterns and transforms them to something more optimal, it's what compilers do most of the time.
[18:04:13] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[18:04:19] <ProfSimm> Even if it's not directly related to type
[18:04:42] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[18:04:48] *** Joins: debayer948 (~debayer@76.82.226.116)
[18:05:46] *** Quits: algebwarf (~dw4rfc4t@78.167.65.212) (Quit: Leaving)
[18:05:46] <ProfSimm> Now when I look at it, it's kinda like smalltalk a lot, but I have few operators like algebra and comparisons with higher precedence just so coders can maintain their sanity
[18:06:03] <mishugana> is there another use case? the if-else bit is making it a bit more nebulous .. how is it substantially advantageous over a simple switch?
[18:06:57] *** Joins: Tom (~Tom@2a01:e0a:2de:8130:b537:8cda:3f97:3535)
[18:06:59] <ProfSimm> mishugana: the idea is the language has no keywords, and looks like a nested TODO list
[18:07:17] <ProfSimm> mishugana: and the vocabulary is partly determined by the functions, allowing flexible DSLs
[18:07:24] <ProfSimm> which all core constructs are themselves implemented in
[18:07:49] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[18:08:09] <mishugana> So `is` is a function?
[18:08:16] <ProfSimm> mishugana: I'm toying with the idea of making coding more natural, but more natural to someone who isn't used to C, JS, Python and so on. Clean slate
[18:08:58] <ProfSimm> mishugana: yes "is" is a function. The subsequent yes/is/yes/is/no terms it receives as is and can interpret at will or delegate to other functions
[18:09:13] <coodre> is your language english-only
[18:09:29] <hans> no it's mostly japanese
[18:09:29] <ProfSimm> coodre: without keywords it opens the possibility if being translated
[18:09:31] <mishugana> sounds a bit like what Forth set out to do
[18:09:39] <mishugana> or even (stretching a bit), Lisps
[18:10:08] <coodre> i wonder how you handle mixed RTL with LTR
[18:10:18] <ProfSimm> coodre: ouch, that would be a pain point
[18:10:41] <ProfSimm> coodre: how do coders in your region feel about rtl/ltr, does it make coding unintuitive
[18:11:07] <cis> write in applescript for a while and see how much you enjoy writing code in natural language
[18:11:11] <ProfSimm> coodre: actually it'd be relatively easy to switch the whole language and source view RTL
[18:11:16] <coodre> it's already a mess trying to backspace RTL text without messing up the entire text
[18:11:17] <mishugana> cis: hahaha
[18:11:18] <ProfSimm> coodre: but mixing them would be a small nightmare
[18:11:51] <mishugana> ProfSimm: I think a bigger sample would be useful in critiquing the idea/language
[18:11:56] <ProfSimm> mishugana: of course
[18:11:57] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[18:11:57] *** The_Blode_ is now known as The_Blode
[18:12:12] *** Joins: Fauto_ (~dante@gateway/tor-sasl/filohuhum)
[18:12:17] <ProfSimm> mishugana: I'm just brainstorming syntax, the AST is relatively stable but I'm stuck bikeshedding how to present it to users
[18:12:33] *** Quits: Fausto (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[18:12:53] <mishugana> LOGO, for instance, allows almost fluid interpretation too, almost English-like, but it needs to use parentheses to resolve amibiguities - such as when too many parameters are passed
[18:13:02] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[18:13:32] <mishugana> ProfSimm: so the grammar is stable (if it has one)?
[18:13:33] <ProfSimm> mishugana: I allow parens too but my goal is to have as few of them as possible (hence the # semantics)
[18:13:40] <mishugana> right
[18:14:35] *** Quits: inky (~inky@37.186.122.130) (Ping timeout: 256 seconds)
[18:14:35] <ProfSimm> mishugana: I didn't start with a grammar, but with the AST disembodied of syntax and now figuring out what syntax it has. Bit backwards. I didn't want to unintentionally make it look like existing languages
[18:15:47] <ProfSimm> In smalltalk when you have expressions for an argument do you need parens?
[18:16:17] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 256 seconds)
[18:16:30] *** Quits: rtypo (~alex@user/rtypo) (Quit: WeeChat 3.4)
[18:16:41] <mishugana> ProfSimm: You mean in LOGO? If so, then no ... the thing there is each "function" (called a "word") has a fixed number of arities 
[18:16:59] <mishugana> if ambiguity arises as to which variant is intended, parentheses are required
[18:17:08] <ProfSimm> Ah
[18:17:32] <mishugana> it's mostly meant to be read from left to right - like repeat 10 print "Hello,world, where each "word" knows how many args it requires
[18:17:33] <ProfSimm> In my case it's not fixed. In fact most arguments on high-level APIs are optional and can be specified out of order
[18:17:44] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[18:17:55] <mishugana> ProfSimm: That'd be interesting to see 
[18:17:58] *** Joins: Atque (~Atque@user/atque)
[18:18:06] <mishugana> once you've fleshed out the impl more
[18:18:11] <ProfSimm> Right
[18:18:17] <ProfSimm> Thanks for the feedback
[18:18:57] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[18:19:06] *** Joins: rtypo (~alex@user/rtypo)
[18:20:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[18:21:05] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[18:21:25] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[18:22:14] <mishugana> ProfSimm: No worries at all ... I hope better feedback can be given when things are more concrete, but it does sound intriguing... maybe some unknown issues might pop up, maybe not. Do share the project when you feel comfortable!
[18:25:24] *** Quits: Fauto_ (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[18:25:53] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[18:26:03] *** Joins: maxzor_ (~maxzor@2a01cb04054faa00d026b44b733dceee.ipv6.abo.wanadoo.fr)
[18:26:11] *** Quits: maxzor (~maxzor@2a01cb04054faa00d026b44b733dceee.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[18:28:34] *** Quits: node1 (~hex@user/node1) (Quit: Leaving)
[18:28:48] *** Quits: password2 (~password8@user/password2) (Read error: No route to host)
[18:29:33] *** Joins: Satin (uid193953@user/Seten)
[18:30:08] *** Quits: leonarth (~leonarth@user/leonarth) (Quit: 84R6CDo3S62HkuYSkVXBr7fXp2wn1XRHeQZ8QPrqxbXvfXP33EH4MhueE2ifPcRbbQQhVXPheMD957muhhBtrvs2QKykeA3)
[18:30:44] *** Joins: lilgopher (~textual@c-24-12-183-227.hsd1.il.comcast.net)
[18:32:34] *** Joins: operateur (~operateur@77-46-222-165.dynamic.isp.telekom.rs)
[18:33:39] *** Joins: leonarth (~leonarth@user/leonarth)
[18:35:11] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[18:35:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[18:35:42] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[18:36:32] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Read error: Connection reset by peer)
[18:38:30] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:38:33] *** Quits: raym (~raym@user/raym) (Quit: leaving)
[18:45:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[18:48:05] <ProfSimm> Decker: https://www.youtube.com/watch?v=r_fUPbBNmBw&t=1s "there are no nodes, just edges"
[18:48:06] <bayaz> Title: Carlo Rovelli on Consciousness, the Illusion of Time, & Philosophy of Relational Quantum Mechanics 
[18:48:06] <ProfSimm> ;-)
[18:48:31] <ProfSimm> Decker: relational QM argues all properties are on the edges, not the nodes
[18:48:56] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 250 seconds)
[18:49:21] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[18:50:30] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:4d19:4ce6:713a:9046)
[18:50:53] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:51:00] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:51:27] *** Joins: raym (~raym@user/raym)
[18:51:40] *** Joins: inlight (~inlight@157.42.246.147)
[18:51:40] *** Quits: inlight (~inlight@157.42.246.147) (Changing host)
[18:51:40] *** Joins: inlight (~inlight@user/inlight)
[18:52:21] *** Joins: password (~password8@user/password2)
[18:52:44] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[18:53:22] *** Joins: maxzor (~maxzor@2a01cb04054faa00af2f90c1788d2cd7.ipv6.abo.wanadoo.fr)
[18:55:00] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:4d19:4ce6:713a:9046) (Ping timeout: 250 seconds)
[18:58:17] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 240 seconds)
[19:00:37] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:6978:fe33:30af:ede6)
[19:01:11] *** Joins: inlight (~inlight@157.42.246.147)
[19:01:11] *** Quits: inlight (~inlight@157.42.246.147) (Changing host)
[19:01:11] *** Joins: inlight (~inlight@user/inlight)
[19:02:32] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[19:06:12] <[itchyjunk]> https://johannesklingebiel.de/2022/01/12/hype-as-a-scale.html
[19:06:13] <bayaz> Title: clojure.lang.LazySeq@8f2edf61 
[19:06:42] *** Quits: ornxka (~ornxka@user/ornxka) (Ping timeout: 250 seconds)
[19:07:50] <nomagno> Finally figured out how to make nginx serve over both HTTP and HTTPS
[19:08:25] *** Quits: immibis (~hexchat@62.156.144.218) (Ping timeout: 256 seconds)
[19:10:50] *** Parts: nulleip (~luiz@user/nulleip) ()
[19:11:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[19:12:18] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[19:13:26] *** Joins: nulleip (~luiz@user/nulleip)
[19:14:15] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[19:17:22] <FloridaMan> [itchyjunk]: I like that article
[19:18:36] <[itchyjunk]> same, i learned something new in it.
[19:19:46] <FloridaMan> it allows for a nice categorization of whatever you're being told about some [relatively new] technology
[19:20:32] *** Joins: Auron (Auron956@user/auron)
[19:20:52] <[itchyjunk]> NFT's are great btw. It will change the future. All the problems are very fixable. Only the old people say it's bad.
[19:22:16] <pulse> nfts: "so imagine if i wanted to sell you nothing"
[19:23:20] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[19:24:22] *** coodre is now known as testtor
[19:25:13] *** Joins: epony (epony@user/epony)
[19:25:13] *** Joins: joe_colben (~joe____co@185.190.112.211)
[19:25:14] <FloridaMan> [itchyjunk]: if you don't take advantage of NFTs you'll surely miss out and regret it
[19:25:47] <[itchyjunk]> Yes exactly
[19:26:33] *** Quits: testtor (~no@105.157.212.12) (Quit: Leaving)
[19:26:59] <FloridaMan> I can actually see some of these used by the marketing departments of companies I have worked at heh
[19:27:51] <FloridaMan> which is probably just good business, but still something that's nice to say "this is what you call level 3 hype" for example :)
[19:29:19] <cis> It's funny how NFTs are so polarizing.
[19:30:23] <FloridaMan> I actually think about them almost zero times a day
[19:30:34] <FloridaMan> but I can see how they fit on all levels of this scale
[19:31:06] <FloridaMan> Facebook is another example of these various levels over the years
[19:31:42] <FloridaMan> and now it's firmly seated at the "what?! You don't have Facebook?!" level 5, as it has been for some time now
[19:32:31] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:32:46] <FloridaMan> although I will admit it's more common to come across people that don't have it/have closed their account down now
[19:33:05] <FloridaMan> (probably as a result of all the bad publicity and documentaries)
[19:36:07] *** Joins: inky (~inky@46.36.119.105)
[19:36:12] <[itchyjunk]> cis, i think anything involving post hoc rationalizing are polarizing
[19:37:51] <cis> so... everything
[19:38:25] <[itchyjunk]> No, not everythign is post hoc rationalized.
[19:39:14] <cis> seems like there's some contention on that
[19:39:25] <[itchyjunk]> No, not at all.
[19:39:37] <cis> we're polarized already
[19:39:46] <[itchyjunk]> If I ask someone what (4-2)*2 is, they don't post hoc rationalize that.
[19:39:51] *** Joins: ornxka (~ornxka@user/ornxka)
[19:39:57] <[itchyjunk]> No one claimed all polarization is post hoc rationalizaiton.
[19:40:28] <[itchyjunk]> In the example, people will rationalize to get a decision.
[19:40:40] <[itchyjunk]> Post hoc rationalization is where a decision comes before the rationalization part.
[19:40:50] <[itchyjunk]> It is a specific, narrow concept.
[19:41:39] <cis> seems like it applies to all history
[19:42:12] <[itchyjunk]> It doesn't, but seems like you're not interested in actual conversation.
[19:42:22] <cis> likewise
[19:43:10] <[itchyjunk]> Was doing fine before you "so... everything" comment, actually.
[19:45:56] <[itchyjunk]> https://www.wsj.com/articles/gamestop-entering-nft-and-cryptocurrency-markets-as-part-of-turnaround-plan-11641504417
[19:45:57] <bayaz> Title: WSJ News Exclusive | GameStop Entering NFT and Cryptocurrency Markets as Part of Turnaround Plan 
[19:46:12] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[19:47:01] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[19:48:30] *** Joins: lvetritti (~lvetritti@177.30.38.9)
[19:48:42] *** Joins: zaher (~zaher@37.48.150.41)
[19:49:51] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:50:12] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[19:50:50] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:51:15] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[19:51:37] <[itchyjunk]> "The findings provide first-time size estimates of ProQuest and EbscoHost and indicate that Google Scholarâs size might have been underestimated so far by more than 50%. By our estimation Google Scholar, with 389 million records, is currently the most comprehensive academic search engine."
[19:51:43] <[itchyjunk]> https://link.springer.com/article/10.1007/s11192-018-2958-5
[19:51:46] <bayaz> Title: Google Scholar to overshadow them all? Comparing the sizes of 12 academic search engines and bibliographic databases - Scientometrics 
[19:51:46] *** Joins: kasper93 (~kasper93@user/kasper93)
[19:52:21] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Client Quit)
[19:52:37] <GeDaMo> What about libgen and scihub? :|
[19:52:37] *** Quits: Kacper_ (~kasper93@user/kasper93) (Ping timeout: 240 seconds)
[19:52:40] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[19:52:48] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:53:56] *** Joins: berkhan (~berkhan@159.146.42.222)
[19:54:23] <adder``> I don't get why the cost of a single subproblem is 1? T(n) = 2T(n-1) + 1
[19:54:27] <[itchyjunk]> GeDaMo, good point
[19:54:40] <[itchyjunk]> Guess they ignore scihub
[19:54:52] <[itchyjunk]> libgen isn't that big wrt full papers iirc
[19:55:38] <[itchyjunk]> Is that a recursion relation?
[19:55:41] *** Joins: junebug (~junebug@2600:1700:3db0:2540:6711:ce96:a34d:9ed2)
[19:55:44] <[itchyjunk]> What T(0) = ?
[19:55:51] *** Joins: rsonx (~lost_leve@user/rsonx)
[19:56:02] *** Quits: hexingb (~hexingb@36.155.28.143) (Ping timeout: 240 seconds)
[19:56:08] <[itchyjunk]> you can't define T_n in terms of T_{n-1} and not give a value of some T_{a} where a < n.
[19:56:14] <GeDaMo> Something to do with binary trees?
[19:56:20] *** Quits: lilgopher (~textual@c-24-12-183-227.hsd1.il.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[19:56:21] <adder``> it's a recurrence, you need to determine the upper bound
[19:57:07] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[19:58:17] <adder``> https://atekihcan.github.io/CLRS/04/E04.04-04/
[19:58:18] <bayaz> Title: CLRS Solutions | Exercise 4.4-4 | Divide-and-Conquer 
[19:58:20] <nomagno> Libgen is nice but there are a few... Contributions I might have a go at making
[19:58:28] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[19:58:51] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[19:59:09] <berkhan> I have an an `menu` model that stores custom menu places. Some items such as "About Us" may include multiple items under it. I guess that is called multi-level navigation. Should I use self-referential association to solve this problem?
[19:59:10] *** Joins: darthtilde (~dsd@user/ironsoba)
[19:59:12] <nomagno> Too much copyrighted non-English works that will not be profited of of anymore
[19:59:39] <berkhan> Some people in SQLite done this my setting up a `level` column that is integer. If it's zero, then the item is in the navigation bar, but if it's one or two, that is under the previous 0 item in the table
[20:00:16] <rsonx> Consider this grammar G: [S->AAc , A->Ba|? , B->Ab|d], what will be the first set of S, A and B?
[20:00:26] <berkhan> So with that, item can be under as many as it is defined in the `level`
[20:02:45] *** Joins: programmar (~whatever@118.69.128.37)
[20:03:55] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[20:04:10] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[20:04:46] *** Joins: debayer948 (~debayer@76.82.226.116)
[20:05:06] <adder``> GeDaMo, how did you guess it's a binary tree?
[20:05:21] <GeDaMo> 2T(n-1)
[20:05:25] <adder``> I get that '2' divides it into 2 subproblems
[20:05:32] <adder``> what does n-1 do?
[20:05:35] <GeDaMo> Two children off the parent node
[20:06:33] *** Joins: lilgopher (~textual@2601:241:8000:38f0:91a4:b6ab:aace:8b1)
[20:08:58] *** Quits: dan01 (~dan01@2a02:2f0f:311c:1500:79c1:f45:56c2:de77) (Ping timeout: 268 seconds)
[20:12:59] <programmar> i am trying to apply a regex pattern to search for all string which consists of a substring, so this what i wrote (.*)(TEXT).*, currently all of my testcases wrok on regex101 but is there any potential drawback or it is not sufficient enough :/ ?
[20:13:09] <programmar> where TEXT is the substring
[20:15:16] *** Joins: dan01 (~dan01@2a02:2f0f:311c:1500:79c1:f45:56c2:de77)
[20:15:37] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[20:15:48] <Decker> wouldn't   TEXT  also just work?
[20:16:17] <programmar> nope, it doesn't sellect the entire string containing TEXT, it only gives me TEXT
[20:16:27] <Decker> oh
[20:16:27] *** Quits: junebug (~junebug@2600:1700:3db0:2540:6711:ce96:a34d:9ed2) (Quit: Leaving)
[20:16:47] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[20:16:58] <GeDaMo> Do you need the two separate capture groups?
[20:17:17] <programmar> idk but i feel safe doing that somehow :P
[20:17:54] <programmar> like in case i want to get the first part behind TEXT or before TEXT, it can be esaily extracted 
[20:19:46] <GeDaMo> Fair enough :)
[20:19:47] <programmar> so i guess that works good ? i was googling around for existing regex on text searching tho but it's either my google skill was too bad or i can't find any so i tried to build me own, if you happen to know an existing one written by experts which guarantees accuracy on regexing, i would be appreciated to have it :P
[20:23:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[20:24:09] *** Quits: dislabled_ (~dislabled@115.229.164.82.customer.cdi.no) (Quit: ZNC 1.8.2 - https://znc.in)
[20:24:37] *** Quits: inky (~inky@46.36.119.105) (Remote host closed the connection)
[20:24:50] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[20:24:50] *** Joins: inky (~inky@46.36.119.105)
[20:24:51] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[20:24:51] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[20:25:35] *** Quits: ornxka (~ornxka@user/ornxka) (Quit: WeeChat 3.4)
[20:27:01] *** Joins: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de)
[20:27:30] *** Quits: password (~password8@user/password2) (Remote host closed the connection)
[20:28:03] *** Joins: password (~password8@user/password2)
[20:28:18] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Remote host closed the connection)
[20:28:57] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[20:29:30] *** Quits: password (~password8@user/password2) (Remote host closed the connection)
[20:29:36] *** Joins: inky_ (~inky@5.77.208.34)
[20:29:53] *** Joins: password (~password8@user/password2)
[20:30:02] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[20:30:14] *** Joins: Amadiro (~Amadiro@31.11.55.179)
[20:31:54] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[20:32:23] *** Joins: _inky (~inky_@46.36.119.105)
[20:33:17] *** Quits: inky (~inky@46.36.119.105) (Ping timeout: 240 seconds)
[20:33:52] *** Joins: zaher_ (~zaher@37.48.156.15)
[20:33:59] *** Quits: inky_ (~inky@5.77.208.34) (Ping timeout: 256 seconds)
[20:35:18] <[itchyjunk]> Wait, can you actually write partial function in haskell
[20:35:19] <[itchyjunk]> ?
[20:35:36] <[itchyjunk]> if blah then blah else ..?
[20:35:37] *** Quits: zaher (~zaher@37.48.150.41) (Ping timeout: 240 seconds)
[20:36:47] <rsonx> what is partial function.
[20:37:13] <rsonx> loop forever
[20:37:34] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[20:37:39] <[itchyjunk]> ?
[20:38:10] *** Quits: magla (~gelignite@55d42e32.access.ecotel.net) (Quit: Stay safe!)
[20:38:13] <[itchyjunk]> A partial function from X to Y is a function f:S->Y , S \subset X
[20:38:32] <rsonx> I mean if you want your function to be undefined on some input then loop and do not return on them.
[20:38:45] <[itchyjunk]> That makes no sense to me.
[20:38:47] <[itchyjunk]> Loop what?
[20:39:00] <rsonx> while(true);
[20:39:03] <[itchyjunk]> ...
[20:39:11] <[itchyjunk]> I am not taking some input from a user.
[20:39:35] <[itchyjunk]> You're describing a total function, not a partial one.
[20:39:38] *** Joins: Akuli (~Akuli@87-94-108-141.bb.dnainternet.fi)
[20:40:07] *** Joins: inky_ (~inky@46.36.119.105)
[20:40:37] *** Quits: monr0e (~monr0e@mail.vixen.international) (Ping timeout: 240 seconds)
[20:41:43] <Amadiro> [itchyjunk], yes, you can
[20:42:11] <[itchyjunk]> Ah, then I am just approaching it wrong
[20:42:16] <Amadiro> agda (which is somewhat based on haskell) forces you to write total functions
[20:42:18] <[itchyjunk]> https://bpa.st/TA5A
[20:42:20] <bayaz> Title: View paste TA5A 
[20:42:27] <[itchyjunk]> this is tthe type signature i am trying to satisfy
[20:42:44] <[itchyjunk]> So is that because adga is dependently typed?
[20:42:56] <[itchyjunk]> dependently typed => no partial functions?
[20:43:49] <scubagear[m]> [itchyjunk]: `head`?
[20:45:41] *** Joins: jjt (~jjt@user/jjt)
[20:45:48] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[20:45:48] <[itchyjunk]> Head? 
[20:46:15] <[itchyjunk]> I'd looking up `case-of` now.
[20:46:42] <scubagear[m]> [itchyjunk]: in this case I think you can use `undefined`
[20:47:58] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (Quit: ZNC 1.8.2 - https://znc.in)
[20:54:21] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[20:54:55] *** Quits: rsonx (~lost_leve@user/rsonx) (Quit: Konversation terminated!)
[20:56:35] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[20:57:09] <bjs> [itchyjunk]: yeah Haskell has partial functions. Dependent types let you write more natural functions and have them be total. E.g. instead of `Maybe a -> a` you can have `Just a -> a` so it wouldn't typecheck if you gave it something that could be a Nothing.
[20:57:51] <bjs> a function with type `Maybe a -> a`, without any other constraints, really would have to be partial
[20:58:23] <[itchyjunk]> hmm i see
[20:58:48] *** Joins: chir4gm (~chirag@user/chir4gm)
[20:58:57] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[20:59:08] <bjs> [itchyjunk]: Haskell has this function, it's called Data.Maybe.fromJust
[20:59:25] <bjs> (that is it's called `fromJust` and it's in the Data.Maybe library)
[20:59:47] <bjs> `fromJust Nothing` is undefined and so you get an exception in Haskell.
[21:01:20] <pyzozord> so I ran wordpress in kubernetes on my minikube, but it's kinda slow, it take take even few seconds to refresh some admin pages, is that normal?
[21:01:38] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[21:01:52] <pyzozord> as far as I can tell wordpress should be instant on i5@2.5Ghz / 8GB / SSD
[21:02:57] <[itchyjunk]> can't think with stomach making noise
[21:03:02] * [itchyjunk] scavanges
[21:04:31] *** Joins: ejjfunky (~ejjfunky2@125.164.22.34)
[21:05:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[21:07:55] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[21:08:02] <pulse> pyzozord, if your question is "is it normal for wordpress to be slow" then yes, yes it is
[21:08:43] <pyzozord> isn't wordpress supposed to be like instant?
[21:10:10] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[21:10:24] *** Quits: fe23 (~fe23@2409:8a34:461:9470:243e:b641:395d:993d) (Quit: fe23)
[21:10:56] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[21:12:20] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[21:13:01] <FloridaMan> pyzozord: it really depends on plugins and theme I think
[21:13:06] <pyzozord> i ran wordpress just on docker without kubernetes and it was kinda slow too
[21:13:12] *** Quits: maxzor_ (~maxzor@2a01cb04054faa00d026b44b733dceee.ipv6.abo.wanadoo.fr) (Quit: compiuter crash)
[21:13:26] <FloridaMan> I used to develop custom themes exclusively for Wordpress, but that was years ago now. Not really up-to-date on the state of things at present
[21:13:27] <pyzozord> I don't really want to run it natively on my machine, I'd need to set up php mysql and all kinds of crap
[21:13:56] <pyzozord> also btw isn't docker on linux like using native processes, so it should be effectively as fast as native processes
[21:14:08] <FloridaMan> it's never going to be
[21:14:19] <pyzozord> that would mean that wordpress kind of slow on my machine, which would be very strange
[21:14:20] <FloridaMan> Docker is software, and like any software it takes resources to run
[21:15:09] <FloridaMan> also you could take a look at how much you're allocating or if you're capping the container's resources
[21:15:31] <pyzozord> hmm yeah
[21:16:23] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[21:16:42] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:17:00] <FloridaMan> pyzozord: couple of things to look at there would be the overall Docker engine resources allocated and then the k8s caps if you have any
[21:17:05] <nomagno> pyzozord: what are you trying to setup? Specifically WordPress or just a website?
[21:18:01] <pyzozord> no, just learning kubernetes and as example set up wordpress in k8s
[21:18:09] <pyzozord> and is too slow, this should be instnat
[21:18:37] <FloridaMan> pyzozord: also, if you have a bunch of tiny little files and you're using bind volume mounts from host to container you may want to consider doing something like using Mutagen to make file sync quicker (it is actually significantly faster filesystem access than built-in volume mount)
[21:18:59] <nomagno> Also WordPress on MacOS is nonnative
[21:19:31] <nomagno> Sorry, docker*
[21:19:59] <pyzozord> wordpress's docker image already uses php opcode cache https://github.com/docker-library/wordpress/blob/bd3350fc17d7a8f76dfb68271de65ebc4edb073c/latest/php7.4/apache/Dockerfile#L80
[21:20:00] <bayaz> Title: wordpress/Dockerfile at bd3350fc17d7a8f76dfb68271de65ebc4edb073c ? docker-library/wordpress 
[21:20:45] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[21:21:08] <pyzozord> that's the only thing I know that makes php faster
[21:22:21] *** Quits: tehenderz (~tehenderz@ti0018a400-10201.bb.online.no) (Ping timeout: 256 seconds)
[21:22:48] *** Joins: tehenderz (~tehenderz@ti0018a400-10451.bb.online.no)
[21:22:57] *** Quits: jjt (~jjt@user/jjt) (Ping timeout: 240 seconds)
[21:23:40] *** Joins: ornxka (~ornxka@user/ornxka)
[21:23:56] *** Joins: joe_colben (~joe____co@185.190.112.211)
[21:25:30] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[21:25:49] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:28:09] *** zaher_ is now known as zaher
[21:28:56] *** Quits: rsx (~dummy@ppp-188-174-147-229.dynamic.mnet-online.de) (Quit: rsx)
[21:30:05] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[21:30:45] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:30:57] *** Quits: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de) (Ping timeout: 240 seconds)
[21:31:36] *** Joins: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de)
[21:31:42] *** Quits: rcoote (~rcoote@ip-176-198-113-232.hsi05.unitymediagroup.de) (Client Quit)
[21:33:27] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[21:33:37] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 240 seconds)
[21:33:46] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:36:19] *** Joins: trevors (~trevors@user/trevors)
[21:39:03] *** Joins: xeno (~xeno@user/xeno)
[21:42:16] *** Joins: magla (~gelignite@55d42e32.access.ecotel.net)
[21:43:28] *** Quits: magla (~gelignite@55d42e32.access.ecotel.net) (Read error: Connection reset by peer)
[21:43:39] *** Joins: magla (~gelignite@55d42e32.access.ecotel.net)
[21:46:39] *** Joins: hlauk (~hlauk@176.33.108.116)
[21:46:46] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[21:47:41] *** Joins: node1 (~hex@user/node1)
[21:47:59] *** Quits: EtherNet (~ethernet@user/ethernet) (Quit: WeeChat 3.5-dev)
[21:49:03] *** Joins: duuude (~user@user/duuude)
[21:49:31] *** Joins: lispy (~lispy3@84.69.59.93)
[21:55:13] <pyzozord> yeah no, it's just slow
[21:55:37] <pyzozord> main document response is anything between 50ms to 1200ms
[21:56:10] <pyzozord> but rest of the files comes in around 1000ms
[21:56:24] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[21:56:24] <pyzozord> so effecitvely the first meaningful paint is late anyway
[21:56:44] *** Joins: joe_colben (~joe____co@185.190.112.211)
[21:56:55] <pyzozord> kind of surprised by this, maybe my nostalgia made me remember wordpress was faster than it was
[21:57:00] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Remote host closed the connection)
[21:57:19] *** Joins: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg)
[21:58:14] <pyzozord> also possibly kubernetes has different default image repository than docker, will need to check that
[21:58:23] <pyzozord> but in conclusion: things are slow
[21:58:27] *** Quits: node1 (~hex@user/node1) (Quit: Leaving)
[21:58:37] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[21:59:04] <FloridaMan> pyzozord: Wordpress has always been a little too bloated imo
[21:59:16] <[itchyjunk]> Me too
[21:59:29] *** Quits: shiit (~Administr@113.25.24.203) (Read error: Connection reset by peer)
[22:00:34] <pyzozord> I'm curious how slow it would be if I ran it natively without docker
[22:00:56] <pyzozord> although docker is supposed to be native already. Maybe my docker setup is somehow misconfigured
[22:01:17] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[22:01:49] *** Quits: ProfSimm (~ProfSimm@176-12-60-137.pon.spectrumnet.bg) (Ping timeout: 256 seconds)
[22:03:41] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:03:48] <FloridaMan> pyzozord: you're on linux?
[22:04:00] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[22:04:07] <pyzozord> yeah
[22:04:44] *** Joins: debayer948 (~debayer@76.82.226.116)
[22:04:56] *** Joins: jjt (~jjt@user/jjt)
[22:05:10] *** Joins: EtherNet (~ethernet@user/ethernet)
[22:05:17] *** Quits: programmar (~whatever@118.69.128.37) (Quit: Leaving)
[22:06:02] *** Quits: stagas (~stagas@2a02:587:c43a:e9ef:c91b:2d4:5736:e725) (Ping timeout: 240 seconds)
[22:07:40] <FloridaMan> pyzozord: you can take a look at docker stats
[22:07:49] <FloridaMan> `docker stats`
[22:08:21] <pyzozord> minikube container takes 20% cpu and 1.6gb
[22:08:33] *** Joins: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca)
[22:08:45] *** Joins: tane (~tane@user/tane)
[22:08:46] <pyzozord> is that all of my cpu?
[22:09:07] *** Joins: stagas (~stagas@2a02:587:c414:4d9d:c42a:e9dc:215c:ddc4)
[22:10:33] <FloridaMan> pyzozord: you can start minikube with certain resources with command line params if that helps
[22:10:39] *** Joins: phil294 (~phi@ip1f13feb8.dynamic.kabel-deutschland.de)
[22:10:49] <FloridaMan> cpus and memory
[22:11:06] <pyzozord> I started minikube with 2 cpus, but it doesn't matter I think
[22:11:29] <pyzozord> I ran wordpress directly on docker and on minikube (that is in docker0 and both wordpresses had the same times
[22:11:52] <pyzozord> minikube is not slowing things down at least not noticibly
[22:12:30] <FloridaMan> ah ok
[22:12:35] *** Quits: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[22:13:19] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[22:13:53] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Quit: WeeChat 3.3)
[22:14:22] *** Quits: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) ()
[22:15:39] <Sqaure> If your are encrypting short pieces of information, does that make it way easier to decipher? Say like a 16 digit numbers? 
[22:15:57] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 240 seconds)
[22:16:20] *** Joins: inlight (~inlight@157.42.246.147)
[22:16:20] *** Quits: inlight (~inlight@157.42.246.147) (Changing host)
[22:16:20] *** Joins: inlight (~inlight@user/inlight)
[22:16:39] *** Quits: soapsudsxx_ (~soapsudsx@141.193.188.140) (Read error: Connection reset by peer)
[22:16:40] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[22:16:51] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[22:17:18] *** Joins: lispy (~lispy3@84.69.59.93)
[22:17:37] <GeDaMo> If you know that they're 16 digits numbers, that helps a lot
[22:17:50] *** Joins: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[22:17:53] *** Quits: tehenderz (~tehenderz@ti0018a400-10451.bb.online.no) (Ping timeout: 256 seconds)
[22:18:28] *** Joins: tehenderz (~tehenderz@ti0018a400-10598.bb.online.no)
[22:19:03] *** Joins: testtor (~no@gateway/tor-sasl/testtor)
[22:19:39] *** Joins: Blackpajamas (~Srain@gateway/vpn/pia/blackpajamas)
[22:19:44] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:a4ef:ecd0:38e1:cb34)
[22:20:25] <FloridaMan> credit cards are usually 16 digits
[22:20:29] * FloridaMan does thinking face
[22:23:41] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[22:24:00] *** Quits: testtor (~no@gateway/tor-sasl/testtor) (Quit: leaving)
[22:24:35] *** Joins: coodre (~no@105.157.212.12)
[22:27:36] *** Quits: Blackpajamas (~Srain@gateway/vpn/pia/blackpajamas) (Remote host closed the connection)
[22:28:03] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpw0hxqmcu11bcx.ipv6.telus.net) (Remote host closed the connection)
[22:29:05] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpwaupb8ren0he5.ipv6.telus.net)
[22:29:23] <DPA> I need alternatives for the symbols ðððð. In theory, I can draw utf8 symbols, but in practice, most seam to be missing in the legacy x11 fonts (or maybe I don't load the right ones?).
[22:29:23] <DPA> So far, I've replaced the first 2 with _X, but I still need a replacement for the other 2.
[22:30:10] <[itchyjunk]> Those symbols don't render for me.
[22:30:17] <[itchyjunk]> I see : 
[22:30:18] <[itchyjunk]> <DPA> I need alternatives for the symbols ðððð.
[22:31:10] <GeDaMo> Minimize, X Mark, Maximize, Window
[22:31:16] <koollman> DPA: Oo , or ^v
[22:31:20] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[22:31:40] *** Quits: hlauk (~hlauk@176.33.108.116) (Quit: Leaving)
[22:31:50] <GeDaMo> Hmmm .. that last one may be 'overlap'
[22:31:53] <DPA> U+1F5D5, U+1F5D9, U+1F5D6, U+1F5D7
[22:32:21] <GeDaMo> I see boxes with the hex code in :P
[22:33:43] <InPhase> DPA:  "-x[]=#."
[22:33:56] <InPhase> DPA: Ascii art?  :)
[22:34:07] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[22:34:26] <DPA> I think [] I couldunderstand. Not sure about =#
[22:34:44] <InPhase> Well I don't know what you see, but I see a bottom left box and a top right box.
[22:34:46] *** Quits: ChanServ (ChanServ@services.libera.chat) (shutting down)
[22:35:12] <InPhase> ,,'' could be chosen
[22:35:18] *** Joins: ChanServ (ChanServ@services.libera.chat)
[22:35:18] *** erbium.libera.chat sets mode: +o ChanServ
[22:35:42] *** Joins: immibis (~hexchat@62.156.144.218)
[22:36:15] <GeDaMo> â§
[22:36:45] <GeDaMo> U+29C9 two joined squares
[22:36:52] <oldlaptop> DPA: surely most or all software that needs those symbols in practice brings along its own bitmaps?
[22:37:06] <oldlaptop> or vectors, if you'd rather do that
[22:37:40] <GeDaMo> U+2612 ballot box with X â
[22:37:53] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[22:37:57] <DPA> I could use a picture, but I'd have to add a lot of new code, so...
[22:38:21] <Rounin> InPhase: Or perhaps Perl?
[22:39:04] <DPA> No luck with â§ and â either...
[22:41:35] *** Joins: lispy (~lispy3@84.69.59.93)
[22:43:06] <GeDaMo> U+A4 currency symbol Â¤
[22:44:23] *** Quits: NChief (~nchief@irc.nortv.net) (Changing host)
[22:44:23] *** Joins: NChief (~nchief@user/nchief)
[22:45:04] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:45] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[22:47:25] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[22:47:34] *** Quits: joe_colben (~joe____co@185.190.112.211) (Remote host closed the connection)
[22:47:53] *** Joins: joe_colben (~joe____co@185.190.112.211)
[22:49:00] *** Quits: xff0x (~xff0x@2001:1a81:5332:3500:8d55:d8c4:1b30:723c) (Ping timeout: 250 seconds)
[22:49:56] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:50:00] *** Joins: xff0x (~xff0x@2001:1a81:5332:3500:b49d:8e28:9fba:6720)
[22:50:21] <GeDaMo> There's a whole lot of arrows starting at U+2190 â
[22:51:01] <GeDaMo> U+21F1 â± and U+21F2 â²
[22:52:12] <DPA> Â¤ and â¡ seams to work
[22:52:38] *** Joins: flakland (~flaknet99@32.211.211.39)
[22:52:49] <DPA> I think I'll use â¡ for maximize
[22:53:18] <DPA> So now I just need the last one. I'll check if I can use one of the arrows
[22:54:38] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:4d19:4ce6:713a:9046)
[22:55:43] <GeDaMo> â³ U+25F3
[22:58:56] <pulse> (â_â)
[22:59:03] *** Quits: jjt (~jjt@user/jjt) (Ping timeout: 256 seconds)
[22:59:47] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:4d19:4ce6:713a:9046) (Ping timeout: 268 seconds)
[23:00:14] <GeDaMo> à² _à² 
[23:00:23] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:00:49] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[23:01:22] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[23:01:38] <pulse> GeDaMo, https://i.imgur.com/yVol8rw.png
[23:01:38] <bayaz> Type: image/png Size: 1.4 kB 
[23:01:51] *** Quits: lispy (~lispy3@84.69.59.93) (Quit: Leaving)
[23:02:19] <GeDaMo> Not my fault you don't have the necessary fonts :P
[23:02:55] <GeDaMo> http://www.disapprovallook.com/
[23:03:01] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Remote host closed the connection)
[23:03:17] <pulse> (â¯Â°â¡Â°)â¯ï¸µ â»ââ»
[23:03:33] <DPA> It's so random what ends up rendering and what not. (Also, X11 font rendering without anti aliasing is pretty awful for the diagonal of arrows...)
[23:03:38] <pyzozord> â¬ââ¬ã(à² _à² ã) 
[23:03:45] <pyzozord> lets keep things in place
[23:04:17] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[23:04:20] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[23:04:49] <pulse> https://i.imgur.com/1baoOeB.png
[23:04:49] <bayaz> Type: image/png Size: 6.1 kB 
[23:04:57] <pulse> unicode: hexchat disapproves
[23:04:58] <flakland> anti aliased fonts!? what's next ray tracing ?
[23:05:02] <pyzozord> aw :(
[23:05:25] <pulse> flakland, wordart
[23:05:36] <pyzozord> https://imgur.com/a/NLl9cO6
[23:05:45] <flakland> i don't think i have enough VRAM for word art in this modern age
[23:05:57] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 268 seconds)
[23:06:07] <Sqaure> creating world peace i see
[23:06:37] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[23:07:34] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[23:07:38] *** Joins: duuude (~user@user/duuude)
[23:07:46] <Rounin> Hmm well, I use hexchat and can see most everything... But every time I install Linux I spend like 90 days installing fonts
[23:08:51] <pulse> how come i see squares regardless of what font i pick
[23:08:57] <pulse> do i have to... gasp.. restart the client
[23:09:26] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[23:11:17] <Rounin> Hmmm, probably... Most font and input method-related things require a restart I think, at least with GTK... I don't know about Qt
[23:12:05] *** Quits: kmh (~kmh@2a00:6020:5004:6800:3db0:2ab3:b04b:3605) (Quit: Leaving)
[23:12:28] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[23:14:28] *** Quits: Akuli (~Akuli@87-94-108-141.bb.dnainternet.fi) (Quit: Akuli)
[23:14:57] <pyzozord> so I'm really excited I get to learn kubernetes and do web things at big scale
[23:15:05] *** Joins: Akuli (~Akuli@87-94-108-141.bb.dnainternet.fi)
[23:15:11] <pyzozord> but also that's kind of the last thing I am interested in web in general
[23:15:50] <pyzozord> I wager 3 good years of honest learning of this and I'm pretty done with web completely
[23:16:03] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[23:16:03] *** Quits: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca) (Ping timeout: 256 seconds)
[23:16:28] <pulse> i have almost 0 idea what kubernetes are
[23:16:32] <pulse> some kind of generalized container?
[23:16:55] <DPA> I think I'll just use a v for the last symbol. It doesn't look great, but that'll be something for future me to worry about.
[23:16:58] *** Joins: cynomys (~cynomys@user/cynomys)
[23:16:59] <pyzozord> no it's of orchestration of containers 
[23:17:04] <Rounin> It's an application server which makes deploying some simple applications as simple and convenient as controlling a multi-million dollar corporations with 9000 servers
[23:17:23] <Amadiro> Rounin, discovering/loading fonts is a surprisingly hard and slow process on most OS' I've tried it on, even programs like word and illustrator don't do it dynamically I think
[23:17:43] <pyzozord> it's got a lot of objects like Deployment, Pod, ReplicaSet, Ingress, LoadBalancer, Service and what not
[23:17:48] <Rounin> For programmers who measure the value they create in complexity, Kubernetes is the highest pleasure attainable
[23:17:53] <Amadiro> If you have a lot of fonts installed, illustrator can take minutes to start up
[23:17:54] <Decker> , Î, V  
[23:18:03] <pyzozord> it's all about routing traffic within this network of contianers and managing these containers
[23:18:21] <Rounin> Amadiro: Ah, yes... And never mind trying to select one of the fonts once they're installed
[23:19:42] <nomagno> Rounin: That sounds quite inefficient
[23:19:51] <nomagno> I don't need to spend 9000 billion on a single page
[23:19:53] <nomagno> :D
[23:19:53] *** Joins: gamara (~gamara@cpe9050cade20e3-cm9050cade20e0.cpe.net.cable.rogers.com)
[23:20:21] <pyzozord> Also all that kubernetes stuff feels... Like it could be done with a programming language. Maybe that's what scala does
[23:20:33] <Rounin> nomagno: Yeah, hehe... Well, as pyzozord says, it does have a lot of features... You can define what services get to talk to what other services quite easily, for instance... But it has taken the concept of being overkill to another level
[23:21:03] <pyzozord> yeah it's massive
[23:21:19] <pyzozord> and it's got an ever bigger ecosystem that adds even more of these objects into it
[23:21:34] <pyzozord> in my current company they have 4 layers of this sh*t
[23:21:46] *** Quits: moniker- (~mon@dh207-123-102.xnet.hr) (Remote host closed the connection)
[23:21:51] *** Joins: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca)
[23:22:34] <pyzozord> onpremise servers, in them kubernetes, inside it there is serivce mesh, and on top of service mesh some kind of other tool to manage that service mesh
[23:22:37] <nomagno> I think I'll stick with chroot for VMs and the filesystem for websites :P
[23:22:55] <pyzozord> yes chroot is like 80% of all of this :D
[23:23:19] *** Joins: src (~src@user/src)
[23:24:02] <pyzozord> really a lot of layers of abstraction that boil down to deciding who talks to who, who gets chrooted and who needs to be ran again because they just died
[23:24:58] <deniska> if you have a few racks of servers, something like kubernetes may make sense
[23:25:06] <pyzozord> it feels severly overcomplicated for sure
[23:25:17] <pyzozord> but apparently that's what google, amazon and the rest uses
[23:25:22] <deniska> if you have, like, 4 servers, something like kubernetes makes much less sense
[23:25:28] <flakland> how does load balance work, just like somepatched DNS server?
[23:26:14] <Rounin> Hm, well... Kubernetes services do get (sub)domains... So there's probably some sort of round-robin mechanism there
[23:26:17] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[23:26:24] <nomagno> (I know chroot isn't even a form of proper isolation, it's a joke)
[23:26:41] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[23:26:46] <nomagno> I'm angry POSIX deprecated chroot
[23:26:50] <pyzozord> i don't know how it's implemented, as far as I know it's eithre through proxies forwarding stuff or internal virual dns servers or though automated updating of local hosts files in each node/pod/container
[23:27:07] <deniska> flakland: depends, it can be multiple web servers each having an A record, it can also be a proxy server proxying incoming requests to different servers etc
[23:27:08] <nomagno> They didn't even give a good reason
[23:27:26] <pyzozord> nomagno: as far as I know chroot is the foundation of containers
[23:27:49] <pyzozord> there is more in cgroups in linux especialy cgroups2 lets you also limit memory and cpu and stuff
[23:27:55] <GeDaMo> I thought containers were built on hardware virtualization
[23:28:26] <pyzozord> linux containers are normal linux processes, except they are separated from the rest of the system
[23:28:27] <Rounin> Hm... Well, a container can run an entier OS, different from the host OS
[23:28:50] <Rounin> But it might just be the C library and userland etc., and not the kernel
[23:29:26] <deniska> GeDaMo: docker uses namespaces
[23:29:37] <deniska> there're other implementations which do use virtualization
[23:29:46] <nomagno> Rounin: that's a VM, not a container
[23:30:02] <nomagno> I personally draw the line at kernel access
[23:30:08] <pyzozord> this video is amazing on explaing how it basically works https://www.youtube.com/watch?v=8fi7uSYlOdc
[23:30:10] <bayaz> Title: Containers From Scratch ? Liz Rice ? GOTO 2018 
[23:30:10] <Rounin> nomagno: So are you saying Docker is a VM or what
[23:30:34] <pyzozord> very simple stuff, essentially linux kernel offers a bunch of syscalls to separate the process
[23:31:18] <flakland> they're not really separate, you have to jump through all sorts of non-obvious hoops and even then the base system could be accessible
[23:31:30] <pyzozord> https://en.wikipedia.org/wiki/Cgroups
[23:31:31] <flakland> beyond a simple clone/unshare
[23:31:31] <bayaz> Title: cgroups - Wikipedia 
[23:31:38] <nomagno> Rounin: Docker shares the kernel with the host OS.
[23:32:02] <Rounin> nomagno: So not a VM then
[23:32:16] <pyzozord> yes, not a vm
[23:32:29] <nomagno> Yeah, not a VM
[23:32:41] <deniska> "it's like a vm, but isn't" is how I often explain docker to people
[23:32:44] <nomagno> It is a VM on MacOS
[23:33:01] <nomagno> But I'm unsure anyone runs Docker on MacOS except for testing
[23:33:05] <pyzozord> nomagno: *it runs in a vm on macos
[23:33:19] <nomagno> Certainly not in production
[23:33:21] <deniska> not counting some windows server shenanigans, it's fairly linux-specific, so you'd run it in a VM on other platforms
[23:33:44] <pyzozord> bsd's have jails and stuff
[23:33:45] <Decker> docker integrates with wsl
[23:34:14] <pyzozord> theoretically probably a native bsd (and mac) version of docker could exist
[23:35:00] <nomagno> And on Windows it does something similar
[23:35:17] <nomagno> Uses a hypervisor
[23:35:19] *** Quits: sonny (~sonny@bras-base-london1483w-grc-28-70-48-35-173.dsl.bell.ca) (Ping timeout: 256 seconds)
[23:35:20] *** Quits: operateur (~operateur@77-46-222-165.dynamic.isp.telekom.rs) (Quit: WeeChat 2.8)
[23:35:31] <nomagno> My main issue with docker is it makes testing on BSD just... Not a think
[23:35:44] <pyzozord> I'm not sure what hypervisor is, I thought it was a hardware accelerated vm feature in cpus
[23:35:48] <nomagno> "Take the dockerfile, its portable now shut up"
[23:35:48] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 250 seconds)
[23:35:50] <DPA> Modern containers indeed don't use chroot. Instead, a mount namespace is created, stuff mounted, then they do pivot_root, and optionally unmount the old root.
[23:36:14] <deniska> And then there's tooling to run OCI containers as VMs, e.g. https://github.com/weaveworks/ignite :)
[23:36:15] <bayaz> Title: GitHub - weaveworks/ignite: Ignite a Firecracker microVM 
[23:36:33] <pyzozord> DPA: what's the difference between chroot and pivot_root
[23:37:01] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[23:37:11] <nomagno> pyzozord: conceptually the same, syscalls have become specialized
[23:37:24] <nomagno> You have jails on BSD, LXC on Linux
[23:38:07] <flakland> pivot root hides the real paths
[23:38:09] <Amadiro> I think there was a newer (maybe still experimental?) macos version of docker that drops the VM in favor of some custom kernel module it loads
[23:38:17] <DPA> Pivot_root changes the root of a mount namespace to sume subdirectory, and mount the subdirectory somewhere else. chroot just redirects stuff somehow differently, but can be escaped by a process entering its own mount namespace.
[23:38:29] <DPA> *some
[23:38:30] <Amadiro> not sure if that's part of the generally available version of docker for mac yet, I remember people had some issues with it, it would crash peoples kernel or somesuch
[23:38:49] <nomagno> pivot_root uses the Linux kernel's fancy namespacing features
[23:39:12] <DPA> *the subdirectory root else
[23:39:19] <DPA> somewhere else
[23:39:29] <pyzozord> what's the fancy namespacing feature about?
[23:39:39] <DPA> Arg, I can't think anymore, it's too late...
[23:40:30] *** Joins: kmh (~kmh@2a00:6020:5004:6800:cd60:cbb0:6593:6004)
[23:40:37] <DPA> With a mount namespace, you can have a completely differnt set of mount points. Including a different root.
[23:41:16] <flakland> without pivot root you would be seeing initramfs as the actual root
[23:42:09] *** Parts: grumb2 (~grumb@rint.osaka) (The Lounge - https://thelounge.chat)
[23:42:30] <nomagno> Chroot is useful from an administrative point of view, but useless for security
[23:42:47] *** Joins: node1 (~hex@user/node1)
[23:43:27] <flakland> you have to do some weird shimmy so it can't ../ out
[23:43:33] <nomagno> It makes you able to recreate the userspace of a system on a whim, to increase portability and reproducibility of things like compilation
[23:43:54] <node1> Hi
[23:44:31] <nomagno> There's also the ischroot utility
[23:44:45] <DPA> As an example of how unshare & pivot_root can be used, a while ago, I wrote this: https://gist.github.com/Daniel-Abrecht/5cd05da1525abf80ea8e63d63a5fdf82
[23:44:46] <bayaz> Title: A simple jail using unprivileged userspace namespaces 
[23:44:49] <nomagno> Which tells you if you're in a chroot
[23:45:01] <nomagno> So you can see it's really not meant for security
[23:45:24] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[23:45:34] *** Joins: KillerWasp (~KillerWas@user/killerwasp)
[23:45:56] *** Joins: Cashlin (~hp@user/cashlin)
[23:47:08] <KillerWasp> hello random parading guys
[23:47:40] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[23:47:41] <pyzozord> that's cool
[23:47:47] <pyzozord> would be even cooler to have this per thread
[23:48:04] <KillerWasp> i want cool here
[23:48:59] <KillerWasp> maybe I should also parade in a suit full of working coolers.
[23:49:31] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Remote host closed the connection)
[23:49:55] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[23:50:45] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[23:51:31] <node1> What does it mean `âhas the same number of factors asâ on the set N` ?
[23:52:28] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[23:53:30] <KillerWasp> node1: I think it refers to a vector of N elements and you have to calculate the number of factor numbers.
[23:53:51] <node1> KillerWasp, For example?
[23:54:38] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[23:54:39] <KillerWasp> for(i=0;i<N;i++)if(factor(vect[i]))printf("This's a factor.\n");
[23:54:57] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:55:30] *** Quits: Akuli (~Akuli@87-94-108-141.bb.dnainternet.fi) (Quit: Akuli)
[23:55:44] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Quit: ThePhilgrim)
[23:55:44] <node1> And what does this function (factor(vect[i]) do?
[23:55:53] *** Joins: wildo (~lain6141@119.224.72.222)
[23:56:13] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[23:56:44] <node1> What do you meant here vector? What's vector stands here? is it something to deal with magnitude and directions?
[23:57:21] <node1> I need to simply understand what does this  statement meant on natural number.
[23:57:49] <node1> same number of factor means what?
[23:57:54] *** Joins: Akuli (~Akuli@87-94-108-141.bb.dnainternet.fi)
[23:58:35] *** Joins: lispy (~controlle@84.69.59.93)
