[00:17:41] <pl> selwyn: because FPGAs can't achieve the same densities or frequencies
[00:17:55] <selwyn> shka: idk it just sounds weird
[00:18:07] <pl> selwyn: also, if your production runs are big enough, ASICs get cheaper
[00:18:10] <gilberth> Good morning #lispcafe!
[00:18:11] <selwyn> when i first read it i thought it was misspelled
[00:18:13] <selwyn> hi gilberth
[00:18:19] <selwyn> pl: i see
[00:18:33] <selwyn> this makes a lot of sense actually
[00:18:35] <Qwnavery> morning gilberth
[00:19:24] <pl> selwyn: for example it's common to have programmable logic in server grade hw, where it replaces /a ton/ of discrete glue logic, but at the same time the production runs aren't big enough to justify making an ASIC
[00:19:41] <pl> especially these days with shorter iteration times on server hw
[00:20:06] <selwyn> wow never heard of that
[00:21:01] <selwyn> fpgas are on my radar because physics experimentalists are sometimes very excited to use them to drive experimental controls
[00:21:30] <Qwnavery> FPGAs are sick
[00:21:45] <pl> selwyn: TALOS2 for example uses FPGA (ECP5 series I think?), I encountered Dell servers with CPLDs that were updateable in the field, sometimes you encounter very, very small FPGAs being used to sequence power in computers
[00:21:52] <Qwnavery> Hopefully in the future you'll be able to write an FPGA circuit in a running program.
[00:21:53] <pl> selwyn: this goes all the way to old PALs
[00:22:03] <pl> Qwnavery: why can't you do it now?
[00:22:15] <Qwnavery> It's not feasable with the lifetime of FPGA switches.
[00:22:26] <pl> I mean, it's explicitly done in several products that were deployed for last decade
[00:22:50] <Qwnavery> $$$
[00:23:26] <pl> Qwnavery: Dynamically programming FPGAs was restricted mostly by /speed of reprogramming/ for several years now
[00:23:55] <Qwnavery> hm.
[00:23:56] <pl> so several projects have been involved in partitioning FPGAs for faster reprogramming
[00:24:29] <pl> as in, how to partition your HDL so that you can reprogram it faster in the field by replacing now unusued block without disturbing others
[00:24:37] <Qwnavery> I'll need to look into all this. I'm pretty new to FPGAs and probably shouldn't have made a comment in the first place. Apologies.
[00:25:19] <pl> Zynq7 series from Xilinx are afaik explicitly made to support programming by random software you have running on the ARM part of it
[00:25:50] <pl> as in, you can boot the ARM side with linux with FPGA having no bitstream loaded
[00:26:00] <pl> and then load bitstream from linux
[00:27:09] <Qwnavery> So say if you wanted to load a "hardware accelleration module" for an FPGA and integrate it into the running CPU that's possible? I.e a Hardware AES circuit.
[00:27:55] <Qwnavery> Then unload that from the FPGA and write a different module, say a hardware accelerated module for gzip or some compression standard.
[00:28:37] <Qwnavery> You can do all this during runtime of a kernel program, not unlike linux or unix/bsd derivatives.
[00:29:19] <pl> Qwnavery: that's explicitly the model targeted by Zynq, yes
[00:29:27] <pl> but it's also just a service you can buy on AWS
[00:29:42] <pl> fintech of course was big chunk of early market
[00:29:58] <Qwnavery> damn. That's crazy.
[00:30:15] <pl> but also supercomputers from Cray, where you had Opterons linked with hypertransport directly to FPGA
[00:32:14] <pl> https://aws.amazon.com/ec2/instance-types/f1/ AWS Instances with Xilinx FPGAs
[00:32:15] -ixelp- Amazon EC2 F1 Instances
[00:32:51] <Qwnavery> ..and these are also durable?!
[00:33:56] <pl> "durable enough"
[00:34:17] <pl> also, FPGA "repurposing" is not a new thing
[00:34:38] <pl> thing is, older FPGAs often weren't on-line programmable and also took longer to program
[00:34:39] <Qwnavery> Fair. I must ask though, are there any lisp projects with bindings to VHDL or any other HDL for live hardware programming?
[00:36:30] <pl> Qwnavery: there was one but it was afaik all closed source, no idea if it ever went public
[00:36:44] <Qwnavery> :(
[00:36:54] <Qwnavery> That's a shame.
[00:37:22] <pl> it was used to develop fintech code, generated (IIRC) VHDL, which was then compiled with vendor tools and loaded into FPGA
[00:38:40] <Qwnavery> hm.
[00:40:57] <Qwnavery> very cool, I'll have to get myself one day.
[00:44:44] <selwyn> there is a book about doing automated trading with lisp
[00:44:47] <selwyn> maybe it mentions it
[01:17:19] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[01:17:33] <dave0> maw
[01:20:58] <selwyn> wondering whether to adopt org mode
[01:22:42] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 260 seconds)
[01:33:39] <Qwnavery> selwyn: dew it.
[01:33:47] <Qwnavery> morning dave0 
[01:33:58] <dave0> maw Qwnavery 
[01:34:20] <Qwnavery> does maw stand for anything in particular?
[01:35:45] <selwyn> maw ning
[01:35:55] <Qwnavery> oh
[01:36:19] <Qwnavery> I was inclined to think he mawing me.
[01:36:49] <selwyn> org mode looks nice for organising things
[01:36:55] <selwyn> i am not that big on literate programming though
[01:37:38] <Qwnavery> with org mode you can write code in an org buffer and execute it, it also works with pandoc for creating things like TeX documents 
[01:37:44] <selwyn> hm
[01:38:03] <Qwnavery> org agenda allows you to allocate time
[01:38:17] <Qwnavery> (I personally don't use it that much because I'm lazy)
[01:38:42] <selwyn> like m4 or something?
[01:38:57] <Qwnavery> I mostly use org todo
[01:39:01] <Qwnavery> m4?
[01:39:23] <selwyn> you say it can create tex documents
[01:39:30] <selwyn> is it like a macro preprocessor or something
[01:39:35] <Qwnavery> Pandoc can, from a .org file.
[01:39:37] <Qwnavery> No.
[01:39:43] <Qwnavery> But you can use pandoc with it.
[01:39:56] <selwyn> oh ok
[01:40:34] <Qwnavery> I have yet to explore all the features though.
[01:40:45] <selwyn> org todo seems like a good start
[01:40:56] <Qwnavery> ~/org/todo.org
[01:41:21] <Qwnavery> I just throw all my stuff in there lol
[01:43:17] <Qwnavery> alright, cyas
[01:43:18] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[01:43:42] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 260 seconds)
[01:47:09] <Catie> ray
[01:47:18] <Catie> whoops wrong window, sorry
[01:47:31] <edgar-rft> ray charles?
[01:47:45] <Catie> ray gun, I'm working on a doomsday device
[01:52:43] <dave0> point of view gun: https://www.youtube.com/watch?v=zxo3Jy3p8zo
[01:52:43] -ixelp- The Hitchhikers Guide to the Galaxy - Point Of View Gun - YouTube
[02:22:36] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[02:27:52] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[02:30:09] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[02:47:35] <hayley> https://newspeaklanguage.org/pubs/newspeak-exemplars.pdf doubleplusgood paper
[02:51:17] *** Joins: hendursaga (~weechat@user/hendursaga)
[03:17:57] <pl> selwyn: org-mode has native latex support, doesn't need pandoc 
[03:19:47] <hayley> "What does this C program do?" "It overflows password_buffer" "That is what the bug is, but what does it do?" "Just that, but sometimes it checks passwords too."
[03:44:27] *** Quits: rogersm (~rogersm@90.166.177.48) (Read error: Connection reset by peer)
[03:44:57] *** Joins: rogersm (~rogersm@90.166.177.48)
[03:52:25] <hayley> TIL data/control-flow analysis is not static analysis and requires running the code
[04:13:21] <contrapunctus> hayley: "Our design is based on the idea that the writer of a program provides metatadata that describes how every method is invoked."
[04:13:32] <contrapunctus> > metatadata
[04:24:14] *** Quits: random-nick (~random-ni@87.116.183.63) (Ping timeout: 260 seconds)
[04:24:52] *** Joins: aeth_ (~aeth@user/aeth)
[04:25:10] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[04:25:15] *** aeth_ is now known as aeth
[04:29:07] *** Quits: aeth (~aeth@user/aeth) (Read error: Connection reset by peer)
[04:29:51] *** Joins: aeth (~aeth@user/aeth)
[04:44:11] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 264 seconds)
[04:57:46] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[04:58:57] *** Joins: hendursaga (~weechat@user/hendursaga)
[06:01:16] *** Quits: molson (~molson@2001-48F8-704A-CA1-0-0-75F-1034-static.midco.net) (Ping timeout: 252 seconds)
[06:38:44] <gilberth> This is hilarious: Drawing a mere bitmap is 10x slower with Quartz than with X11 using XQuartz.
[06:40:26] <gilberth> But this is the nice thing with Quatz, there are a dozen ways to do the same thing and only one is fast with macOS. Another may be faster with iOS.
[06:44:39] <gilberth> And it gets pretty sluggish. I want my late 90s set-up back, it could run sw rendered Quake and blitter its frames while keeping responsive.
[06:45:53] <gilberth> With less than 1/10th of the CPU clock. And 1/1000th of RAM.
[06:45:58] <gilberth> *sigh*
[06:49:52] <hayley> Today I learned that (in the context of vulnerability detection) control-flow and data-flow analysis don't exist.
[06:50:17] <gilberth> No? What else?
[06:51:09] <hayley> It'd have to be dynamic analysis that you don't overflow some buffer, even if the program looks like { if (strlen(s) >= N) return; strcpy(s2, s); }
[06:52:06] <gilberth> You meant <= ?
[06:52:59] <hayley> We return before copying if it's too long, but you get the idea?
[06:53:48] <gilberth> Ah, I missed that.
[06:54:25] <hayley> Must be fun to take this class without having written some of a compiler.
[06:54:26] <gilberth> Yep, strlen(s) could change. strncpy(3) would have been better.
[06:56:04] <hayley> Suppose so. Let's assume there's only one thread and that nothing happens between the bounds check and strcpy.
[06:56:38] <gilberth> Where does N come from? And s2?
[06:57:14] <hayley> char s2[N + 1];
[06:57:36] <hayley> N is any natural number, pick your favourite.
[06:58:09] <gilberth> I pick 42.
[06:59:33] <gilberth> What's in s2 before we do that? Is it used after?
[07:04:34] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[07:14:29] <hayley> s2 is stack allocated, so who knows. I suppose s2 would be used after.
[07:14:58] <gilberth> Then you better initialize s2.
[07:16:21] <hayley> strcpy initialises s2?
[07:18:05] <gilberth> You don't call it in the first place.
[07:18:35] <hayley> Oh, you want to know if s2 is used if the bounds check fails. No, we don't use s2 then.
[07:20:57] <hayley> I'll give you the full program when I get home from my walk.
[07:24:28] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[07:26:27] *** Quits: semz (~none@user/semz) (Ping timeout: 258 seconds)
[07:35:28] <gilberth> Notes: (1) why not strdup? (2) if (snprintf (s2, sizeof(s2), "%s", s) >= sizeof(s2)) goto bust;
[07:36:10] <Mondenkind> I thought the point was that it is bad code
[07:37:45] <gilberth> Bad because of what? Using C in the first place?
[07:39:18] *** Joins: semz (~none@user/semz)
[07:45:30] <hayley> In part, yes.
[07:51:29] * hayley posted a file: auth_overflow.c (1KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/WEcmFNjHLtjVheYGuJeXxNFW >
[07:52:57] <Mondenkind> so what is the goal?  ROP check_authentication() into system("sh")?
[07:54:05] <hayley> I have no idea. The lecturers still think you can execute the stack (which might be true on some embedded platform, but no desktop OS), so let's just go with not hitting UB.
[07:55:40] <Mondenkind> oh, so you have to fix it?
[07:56:16] <gilberth> You could still forge the return address.
[07:56:26] <hayley> Yes, that would be ROP.
[07:56:49] <hayley> It was used to demonstrate static analysis tools. By their definition, apparently the tools just grep for "strcpy".
[07:57:11] <gilberth> lol
[07:57:16] <Mondenkind> (incidentally, ROP is completely prevented by using a separate data stack, even in c.  But apparently they can't bring themselves to do that... ¯\_(ツ)_/¯)
[07:57:33] <Mondenkind> even riscv which was supposed to be a 'clean redesign' still uses the old shitty abi
[07:57:36] <gilberth> And note that strncpy is evil, it doesn't guarantee to write a NIL byte.
[07:58:00] <Mondenkind> yes.  Praise strlcpy.  Or was that stpcpy?  strcpy_s??
[07:58:27] <gilberth> Take your pick. Hope it's available.
[07:58:48] <gilberth> Even with a separate data stack, I face a security risk.
[08:00:09] <Mondenkind> sure.  But it's not nearly so hard to exploit
[08:01:07] <gilberth> BTW even with XENIX the stack was already non-executable, as was the data segment.
[08:01:53] <gilberth> No need for this shiny need non-executable flag, a plain i386 could do that.
[08:02:23] <gilberth> * new
[08:06:15] <hayley> But, say I did add a bounds check before the call to strcpy, as I suggested. Now the analysis tool should note that strcpy isn't reachable on any path where we could overflow, and shut up.
[08:06:35] <hayley> Hence why it's all a bit of flow analysis.
[08:08:17] <gilberth> I hope 's' is then of type 'char * restrict s'
[08:10:14] *** Quits: Catie (~user@24.19.51.175) (Quit: rcirc on GNU Emacs 29.0.50)
[08:16:48] <dave0> gilberth: earlier.. 286 had that flag
[08:17:45] <dave0> it was for a segment though and no one used segments on 386
[08:17:53] <gilberth> dave0: For segments, yes. And that is the trick, don't make CS = DS on the i386, too. Linux didn't.
[08:18:26] <gilberth> dave0: You have to use segments, you usually don't assign the segment register. These days FS is often used for TLS.
[08:19:26] <dave0> gilberth: i need executable AND writable for Forth ... it can construct code at runtime
[08:19:45] <gilberth> dave0: As does Lisp.
[08:20:05] <dave0> nice
[08:20:20] <gilberth> With XENIX you needed to issue a system call first, to mark a set of pages as writable and executable.
[08:20:23] <dave0> hayley's regular expression compiler would need it too :-)
[08:20:38] <dave0> ah okay xenix was a microsoft thing?
[08:20:59] <dave0> maybe no one really wants unix
[08:21:50] <gilberth> Kind of. And as being from MS, the compiler sucked. As I ported X11, I first needed to port GCC 1.3<something> to port GCC 2.<somethingelse> which then could finally compile X11.
[08:21:54] <dave0> i haven't used a mac in a long time but i bet mac users don't drop into a shell and type cryptic commands like ls and cat
[08:22:54] <gilberth> Heck, I do. But macOS is on its way to become an iOS. Macs will get phones with a keyboard and no SIM card.
[08:23:22] <gilberth> Windows at least comes with ftp and telnet, macOS doesn't anymore.
[08:23:48] <dave0> gilberth: guess another command in windows... curl !
[08:23:52] <dave0> oh and bsdtar
[08:24:18] * gilberth hates curl and prefers wget.
[08:24:18] <dave0> C:\Users\dave>tar --version
[08:24:18] <dave0> bsdtar 3.3.2 - libarchive 3.3.2 zlib/1.2.5.f-ipp
[08:24:44] <gilberth> You use Windows? Seriously?
[08:25:07] <dave0> yes for internet
[08:25:51] <dave0> i cant get the wifi working on netbsd
[08:26:00] <gilberth> Windows comes with TCP/IP?
[08:26:07] <hayley> gilberth: What are we restricting s for? Though we'd also need to check s isn't NULL too.
[08:26:27] <dave0> gilberth: not at first! microsoft ignored the internet until netscape !
[08:26:39] <Mondenkind>  const char s[restrict static 1]
[08:26:46] <gilberth> hayley: For no one else having a pointer to that object. But you said, you were single threaded anyway.
[08:29:15] <hayley> https://www.youtube.com/watch?v=OsSsM4dG1l0
[08:29:15] -ixelp- cirkus (for gordon haskell) - YouTube
[08:43:41] <gilberth> Hmm. Should it be "TAR /VERSION"?
[08:45:42] * hayley attempts to play Garry's mod again
[08:45:58] <hayley> It seems all the servers require downloading 1GB or more of random shit.
[08:46:51] <hayley> At least the loading message for one told me to change my settings to just download the map. That's nice.
[08:48:16] <gilberth> BTW, I once read that Xenix was used quite a bit inside MS. And when you look at the new DOS 2.0 BDOS calls, you recognize that they mimic UNIX. Like open(2), read(2), write(2), close(2) and ioctl(2)! There are even some comments in the source code about that.
[08:49:05] <gilberth> The the character used for options could be configured to '-' from '/'.
[08:55:22] * hayley watches "Downloaded nnnn of 4037 Lua files"
[09:09:16] <hayley> T'was a boring server anyway.
[09:11:48] <gilberth> What is in all that Lua?
[09:11:56] <hayley> I dunno.
[09:12:12] <gilberth> You don't know what you downloaded?
[09:12:52] <hayley> Yeah, there were 4,037 files so I didn't check them all. Probably all the plugins only admins are allowed to use.
[09:13:15] <gilberth> What kind of plugins?
[09:13:29] <hayley> They mostly added other crap to the game.
[09:13:48] <gilberth> What game?
[09:14:07] <hayley> Garry's Mod.
[09:14:19] <gilberth> Mod of what?
[09:16:23] <hayley> Half Life 2 IIRC
[09:17:21] <gilberth> Ah sounds interesting.
[09:27:38] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[09:42:43] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[09:51:09] <hayley> https://www.youtube.com/watch?v=k7OqjisABps
[09:51:09] -ixelp- David Bowie - Sense Of Doubt/Moss Garden/Neuköln - YouTube
[10:00:04] <hayley> It appears the "inductive" nature of replicated data structures is good and bad. Good that you just do proof by induction to verify that a chain of events is legit, bad that you have to check all the events.
[10:01:49] <hayley> A really trustless client would need to (temporarily) store all objects and hashes during validation.
[10:34:20] <hayley> https://twitter.com/RonFilipkowski/status/1451295349293953028 Candace Owens wants to invade Australia
[10:35:00] <Mondenkind> hayley: only in a trustless context
[10:35:31] <hayley> IMO trustless should be the default.
[10:36:31] <Mondenkind> (granted wot doesn't work for obvious reasons.  Still.)
[10:38:14] <Mondenkind> hayley: I guess it depends on what you want to replicate, and why, and with whom.  I guess you are referring to netfarm (which I have not looked into closely yet)
[10:39:11] <hayley> Right. And let's say that I run a chat application, wherein every event refers to events which happened before it in order to make a "timeline".
[10:41:39] <hayley> Maybe I should instead try to allocate "blocks" of 100 messages or so, and sort each block on the client, which would still be O(n), but cut the constant factor drastically.
[10:41:52] <hayley> (Still not a blockchain, though it is a DAG of blocks.)
[10:43:31] <hayley> IIRC I planned to have a skip list of predecessors rather than a normal linked list for faster navigation.
[10:46:12] *** Joins: makomo (~makomo@user/makomo)
[10:54:40] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[10:55:03] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[11:01:05] <hayley> ...but chunking wouldn't work because you can still write to old chunks. Maybe I need to recurse and have a DAG of DAGs somehow.
[11:06:03] <Aurora_v_kosmose> Why was it that ABCL couldn't work on Android again?
[11:06:39] <hayley> I think the VM is just different?
[11:07:10] <Mondenkind> other jvm languages can run on android, though, afaik
[11:07:24] <Aurora_v_kosmose> Yeah, that's what confuses me.
[11:08:42] <pjb> They would need a second target, since the bytecode is different.
[11:09:09] <pjb> Or they would use a bytecode translator, which may be inefficient
[11:10:46] <Aurora_v_kosmose> Huh, finally found some old ABCL mailing list thread about it. Seems the Android Java runtime is missing a bunch of stuff.
[11:12:07] <White_Flame> hayley: nice to see the left & right are equally stupid at taking out-of-context bait
[11:12:31] * hayley uploaded an image: (19KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/euVDcnbjTwYZZLrPAQQvqmDr/bruhcha.jpg >
[11:12:34] <White_Flame> crazy how many of those responses go whoosh
[11:13:29] <Mondenkind> context?
[11:14:03] <White_Flame> hypothetical trumpeted as truth, look at bad thing person said
[11:15:03] <White_Flame> manipulators gonna manipulate
[11:15:46] <White_Flame> it's funny how the right claims that the left makes stuff up, and the left claims that the right makes stuff up.  They're both right in their accusations! ;)
[11:23:33] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[11:28:10] *** Joins: humasect (~humasect@2001:1970:57e0:4100::141e)
[11:34:40] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[11:35:00] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[11:40:39] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[11:40:57] <Qwnavery> afternoon
[11:43:10] *** Joins: retropikzel (~retropikz@83-245-255-135-nat-p.elisa-mobile.fi)
[12:12:01] *** Quits: humasect (~humasect@2001:1970:57e0:4100::141e) (Remote host closed the connection)
[12:12:59] *** Joins: humasect (~humasect@2001:1970:57e0:4100::141e)
[12:18:01] *** Quits: humasect (~humasect@2001:1970:57e0:4100::141e) (Ping timeout: 252 seconds)
[12:19:51] *** Joins: humasect (~humasect@2001:1970:57e0:4100::141e)
[12:45:45] *** Quits: retropikzel (~retropikz@83-245-255-135-nat-p.elisa-mobile.fi) (Quit: Leaving)
[12:46:02] *** Joins: retropikzel (~retropikz@83-245-255-135-nat-p.elisa-mobile.fi)
[12:54:17] *** Quits: humasect (~humasect@2001:1970:57e0:4100::141e) (Remote host closed the connection)
[13:05:09] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[13:41:14] <lisp123> Trivia: How many symbols (excluding CL) do you currently have interned your package?
[13:41:23] <lisp123> 495 for me right now, feels pro :)
[13:41:33] <lisp123> (also excluding any libraries)
[13:45:18] <gilberth> Hmm, (length (remove (find-package :cl) (remove-duplicates (apropos-list "" :climi)) :key #'symbol-package)) => 3716 ;does that count?
[13:45:33] *** Joins: random-nick (~random-ni@87.116.183.63)
[13:45:59] <lisp123> Nice!
[14:10:56] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[14:11:15] *** Quits: X-Scale (~ARM@46.50.2.19) (Ping timeout: 258 seconds)
[14:11:41] <Gnuxie> https://www.youtube.com/watch?v=hrqhgTjFkLo
[14:11:42] -ixelp- I Hear You - YouTube
[14:12:22] *** X-Scale` is now known as X-Scale
[14:14:37] <shka> https://www.youtube.com/watch?v=mzQuq2FHdeE
[14:14:37] -ixelp- P-47 Thunderbolt Pt. 1 Design and Speed - YouTube
[14:14:44] <hayley> 323 in one-more-re-nightmare
[14:14:46] <shka> really cool channel
[14:15:00] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 276 seconds)
[14:15:10] <hayley> 841 in Netfarm. Not very high numbers.
[14:15:29] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[14:16:16] <selwyn> gnuxie: https://cdn.discordapp.com/attachments/718431389942415360/901048149660024912/unknown.png
[14:16:52] <Gnuxie> wtf 
[14:16:57] <selwyn> lol
[14:16:58] <hayley> https://www.youtube.com/watch?v=3Eouj8901o8
[14:16:59] -ixelp- - YouTube
[14:17:19] <hayley> Oh, they removed the I AM NOW POL JOSEPH WATSON video.
[14:17:54] <Gnuxie> no what 
[14:18:05] <hayley> THE MAIN STREAM MEATIER got to him
[14:18:18] <selwyn> hayley: pjw lives next to battersea power station of animals fame
[14:18:21] <Gnuxie> noooooooooooooo
[14:18:37] <hayley> https://www.youtube.com/watch?v=xadaM-rMy0Q
[14:18:38] -ixelp- Paul Joseph Watson meme - YouTube
[14:18:39] <selwyn> i keep hoping to run into him on the street and say hi
[14:19:07] <hayley> https://www.youtube.com/playlist?list=PL9aQpxYz_ZjSKMYMg_dIF8KsLZTlL5ujF
[14:19:08] -ixelp- A holy grail of Paul Joseph Watson memes - YouTube
[14:19:09] <Gnuxie> pol joseph stalin is gone?
[14:19:11] <shka> dunno, Watson seems to be an idiot
[14:19:28] <selwyn> he is an idiot
[14:19:38] <selwyn> sorry, i am being sarcastic :)
[14:19:48] <Gnuxie> https://www.youtube.com/watch?v=jY9Ca_0hxXg
[14:19:49] -ixelp- Pol Joseph Stalin - Why Communism is Great - YouTube
[14:19:50] <hayley> Gnuxie 💜🐝: https://www.youtube.com/watch?v=DmjgYfHPZyQ
[14:19:50] -ixelp- Pol Joseph Stalin - I Hate Skinny Jeans! - YouTube
[14:19:54] <shka> right
[14:19:55] <Gnuxie> yay
[14:20:09] <shka> i really don't like the political youtube
[14:20:36] <shka> Kraut is ok I guess
[14:20:40] <selwyn> i think he is a good candidate for someone who had their brain melted by the internet
[14:20:55] <selwyn> unlike some, pjw is very earnest about what he believes, there's no cynical detachment
[14:21:15] <shka> oh, that is even worse
[14:21:18] <Gnuxie> https://www.youtube.com/watch?v=Dab2svhmp18
[14:21:18] -ixelp- Pol Joseph Stalin - The Inauguration Protests Ruled! - YouTube
[14:21:50] <hayley> https://www.youtube.com/watch?v=yXcDCNv_Cno
[14:21:51] -ixelp- Paul Joseph Watson says "Imagine my shock" over 1 million times - YouTube
[14:22:24] <selwyn> shka: kraut is ok but i don't think he is a subject matter expert on a lot of stuff and it shows sometimes
[14:22:48] *** Joins: humasect (~humasect@d24-235-145-145.home1.cgocable.net)
[14:23:18] <selwyn> i watched a 2 hour documentary he did on turkey and it was better than a lot of tv documentaries
[14:23:23] <shka> well, should i stream on youtube? then you guys will have something else then the Watson
[14:24:10] <shka> selwyn: I would say that you may criticize Kraut videos, there is plenty to complain about
[14:24:11] <shka> BUT
[14:24:12] <selwyn> but for want of a better phrase he is a 'western chauvinist' guy which kind of limits his analysis of modern turkey
[14:24:18] <shka> there is nothing lazy about them 
[14:24:22] <selwyn> no there isn't
[14:24:48] <Gnuxie> https://www.youtube.com/watch?v=0vKUhYWgjEk
[14:24:49] -ixelp- Pol Joseph Stalin - Happy New Years, Comrades! - YouTube
[14:25:06] <selwyn> shka: it's damning that this is what makes them special compared to other content
[14:25:33] <shka> not really honestly, this all is like it was before
[14:26:09] <shka> back in the day, there was a lot of religious youtube channels 
[14:26:23] <shka> this spew reaction of aggressive atheist channels 
[14:26:33] <selwyn> cringe
[14:26:45] <shka> that quickly outgrew what they were supposed to counter
[14:26:51] <shka> and became lazy as fuck
[14:26:56] <selwyn> reddit atheism
[14:27:28] <hayley> https://i.redd.it/0x0ijm9tiz051.png
[14:27:31] <shka> reactionary youtube tends to simply degenerate
[14:28:00] <selwyn> i could never watch political youtube anyway, i can't concentrate for that long
[14:28:08] <shka> and there are just so many ways to say "god does not exists"
[14:28:12] <selwyn> unintended good consequence of my twitter addiction
[14:28:14] <shka> as there are "sjw bad"
[14:28:54] <shka> regardless, i think that downfall of political youtube is what is taking place now
[14:28:59] <Gnuxie> atheist youtube is cringe and more dogmatic and religious than actual religious people 
[14:29:29] <selwyn> internet atheism hasn't produced interesting new thoughts since 2008 either
[14:29:46] <selwyn> they came up with somewhat novel ways of being reactionary
[14:29:48] <hayley> anti-anti-theist twitter is more cringe than anti-theist twitter somehow
[14:30:20] <hayley> reacting to strawmen of reacting to strawmen
[14:31:03] <hayley> moral of the story IMO is that if X is a coherent thing, anti-X is usually not coherent
[14:31:21] <selwyn> good point
[14:31:37] <hayley> anti-anti-X is FUBAR
[14:32:45] <hayley> (I admit, I like to join in sometimes, like once someone said "but look, it's not all christianity, _clearly_ your critiques are on west european sects" and I was baptized greek orthodox and still got the same shit sooo)
[14:32:54] <selwyn> honestly its depressing how much atheism got channeled into the 'english prejudices'
[14:32:59] <selwyn> anti catholic, anti muslim
[14:33:38] <shka> evangelicals are such a better target  
[14:34:27] <shka> they have that sweet, sweet heretical flavor
[14:34:42] <selwyn> return to net zero https://pbs.twimg.com/media/FCTHsWnXMAAkavW?format=jpg&name=small
[14:37:02] <hayley> (I do remember that the church I was baptised in gave out flyers asking people to vote against the gay marriage referendum. Can I get un-baptised?)
[14:37:05] <selwyn> shka: you should go to your local church and set up one of those 'god doesn't exist change my mind' stalls
[14:37:41] <shka> no point in doing that
[14:38:13] * hayley reads r/atheism and r/occult to come to a conclusion
[14:38:23] <shka> you can't use logic someone from the position that was not reached using logic 
[14:39:46] *** Joins: X-Scale` (~ARM@83.223.233.104)
[14:39:54] <selwyn> somehow i would always choose to be orthodox over cringe c of e
[14:40:08] <hayley> "I want to get unbaptised from the Orthodox Church. How can this happen?" "Be baptised in reverse. 1. They hold your head under water till he stops preaching then. 2. Lifts your head out of water 3. You climb backwards out of the water…."
[14:40:13] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[14:40:47] * hayley continues reading
[14:40:53] <pjb> hayley: in Catholic Church, you just send a letter to your bishop, to be erased from the register.  I guess it's the same in the Orthodox Chuch.
[14:40:59] <hayley> "As for homosexuality in particular, it has become a very political issue and views regarding it are being pushed very earnestly. The Church has had to hold on to the position she has always had for the past 2,000 years in regards to homosexuality, namely that homosexual acts and fantasies are sinful."
[14:41:11] <hayley> Thankyou I am still considering renouncing my baptism
[14:41:23] *** X-Scale` is now known as X-Scale
[14:41:24] <selwyn> hayley: you can join the turkish orthodox church instead
[14:41:52] <hayley> selwyn: Hell no.
[14:42:00] <selwyn> it has like 300 people so you have a good shot at becoming pope, or something
[14:42:20] <pjb> Just try not to write this letter with your blood, on your human skin, and with the seal of Satan; you'd risk having the whole church pray for your Soul!
[14:42:33] <hayley> pjb: Alright. Though I probably want to move somewhere far away, else I will get in a lot of shit with all the Greek grandmas in a 10km radius.
[14:44:22] <pjb> Now, just a little question: Once you've sold your soul to satan, how do you resign your contract?  Is a mere letter to the boss enough?
[14:45:01] <hayley> Sell it to satan? All things are nothing to me, you innocent child.
[14:47:42] <hayley> Apparently for catholics you write to a bishop expressing "your denial of an essential truth of the faith". Seems pretty easy
[14:48:39] <hayley> "To whom it may concern: I have set my affair on myself, all things are nothing to me. Signed: hayley ~~~~~"
[14:51:48] *** Quits: humasect (~humasect@d24-235-145-145.home1.cgocable.net) (Remote host closed the connection)
[14:52:08] *** Joins: humasect (~humasect@2001:1970:57e0:4100::141e)
[14:59:53] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[15:00:18] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[15:00:35] <dave0> pray to superman
[15:01:36] <hayley> What part of "all things" do you not understand?
[15:02:01] <dave0> are you a nihilist?
[15:02:07] <hayley> Yes,
[15:03:00] <dave0> check out "the big lebowski"
[15:04:39] <selwyn> nihilists dude
[15:05:17] <selwyn> https://www.youtube.com/watch?v=x36ge2W7QOs
[15:05:17] -ixelp- Futurama: Don't Date Robots! - YouTube
[15:05:20] * hayley uploaded an image: (27KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/hcqmhHPhAhIfUdbhMnDEdXUi/has-science-gone-too-far.jpg >
[15:05:42] <hayley> I still ponder how I almost married a human.
[15:06:00] <selwyn> https://cdn.discordapp.com/attachments/718431389942415360/900153077150146630/unknown.png
[15:06:06] <ck_> .."we cuts off your johnson"
[15:06:13] <dave0> hayley: what's the right answer?!
[15:06:18] <hayley> https://www.youtube.com/watch?v=oFd9OhnKqvw
[15:06:18] -ixelp- I Nearly Married A Human (Remastered) - YouTube
[15:06:51] <hayley> dave0: C'est ne pas un pipe (pardon my French)
[15:07:08] <dave0> that's crazytalk
[15:10:53] <hayley> Well, the closest thing to dating I have now is with a furry, I guess, so I have still managed to avoid marrying a human.
[15:13:23] <selwyn> lol
[15:14:57] <selwyn> https://www.youtube.com/watch?v=dw1sekg6SUY
[15:14:57] -ixelp- Why Magnetic Monopoles SHOULD Exist - YouTube
[15:16:00] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[15:19:11] <hayley> But I could say something about egoism and my ex. I think, for a while, she wasn't in love with me, she was in love with what she thought she could do to me. Particuarly, based on why we went our ways, that I would be a more sociable person.
[15:21:33] <hayley> I wonder what she thinks of me now. Doesn't really matter.
[15:41:58] <dave0> i'm a fix-er-upper
[15:42:27] <dave0> a lump of clay ready to be molded
[15:42:36] <hayley> Can you fix my parents' marriage? Or, alternately, refer me to demolition agents so it can be trashed quicker?
[15:42:47] <selwyn> golem go brr
[15:43:32] <dave0> no no i am the one who needs to be fixed
[15:43:39] <hayley> Alternately alternately, fix my lack of publicity after wasting my life writing like 20k words on online organisation esoterica?
[15:43:48] <hayley> Oh, okay.
[15:44:10] <pjb> hayley: « Ce n'est pas une pipe. »  ou   « Ceci n'est pas une pipe. » 
[15:44:23] <hayley> Thanks!
[15:45:04] <pjb> "It's not a pipe."  vs. "This is not a pipe."
[15:46:34] <pl> fix-er-upper is slang for "it needs some fixing" ;)
[15:48:17] <pjb> hayley: was that a real image or a fake image? What is a fake image? Aren't all images real images?
[15:50:27] <pjb> Man Arrested for Unblurring Japanese Porn with AI in First Deepfake Case <https://www.vice.com/en/article/xgdq87/deepfakes-japan-arrest-japanese-porn>
[15:50:27] -ixelp- Man Arrested for Uncensoring Japanese Porn With AI in First Deepfake Case
[15:50:28] <pjb> LOL
[15:51:00] <selwyn> wtf
[15:52:10] <pjb> He sold forbidden images.  His mistake was not to sell the software to unblur pictures, but to sell unblurred pictures.
[15:53:47] * hayley uploaded an image: (129KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/FjdoCNsRrmnPIQfuguCpDDXy/producer-consumer.png >
[15:54:12] <selwyn> a friend of mine comments that 'porn has replaced war as the main driver of technology'
[15:54:20] <pjb> You may not sell all kind data, but you should be able to sell software to generate all kind of data.  If not, you should be able to sell software to generate software to generate all kind of data.  If not, you should be able to sell software to generate software to generate software to generate all kind of data.  
[15:54:39] <hayley> Mars, the Bringer of Porn
[15:54:49] <pjb> Well, you still don't develop supersonic dildo, do you? Or do you?
[15:54:49] <selwyn> hahaha
[15:55:19] * hayley still cannot play Mars properly following the OLM recording
[15:58:15] <hayley> https://www.youtube.com/watch?v=tpOVDeQ_wwE Kurzkestagt (or something)'s onlyfans apparently
[15:58:16] -ixelp- [YTP] Kurzgesagt ANNIHILATES the moon using your grandmother and nukes. - YouTube
[15:58:25] <hayley> Close enough
[16:01:26] <hayley> pjb: On earth, people eat bleach, so a nuke isn't a big deal, but there's no bleach on the moon, so all the moon rocks turn into CP2077 apparently
[16:02:40] <hayley> Highly educational video IMO
[16:03:36] *** Quits: humasect (~humasect@2001:1970:57e0:4100::141e) (Remote host closed the connection)
[16:09:48] <pjb> Alec Baldwin fires prop gun on movie set, killing cinematographer <https://www.reuters.com/lifestyle/alec-baldwin-fires-gun-movie-set-killing-cinematographer-authorities-say-2021-10-22/>
[16:09:48] -ixelp- Alec Baldwin fires prop gun on movie set, killing cinematographer | Reuters
[16:10:03] <pjb> Reality rejoin fiction.
[16:10:35] <pjb> How many movies and theater show where a prop gun actually kills an actor or somebody on scene!?
[16:11:02] <selwyn> https://www.youtube.com/watch?v=T0qagA4_eVQ
[16:11:02] -ixelp- A Grand Day Out - Landing on the Moon - Wallace and Gromit - YouTube
[16:11:14] <pjb> I saw 2 or 3 of them only last week; there are a few Columbo episodes about that.
[16:11:24] <pjb> Yah W&G are the best.
[16:11:31] *** Joins: humasect (~humasect@2001:1970:57e0:4100::141e)
[16:11:52] <pjb> And you know, the girl in W&G, I've seen real girls exactly like her!
[16:11:57] <selwyn> ?
[16:12:25] <pjb> https://static.wikia.nocookie.net/wallaceandgromit/images/3/30/Helena_bonham_carter_tottington.jpg/revision/latest/top-crop/width/360/height/450?cb=20140526171857
[16:12:27] <hayley> There are a few girls in W&G.
[16:12:36] <selwyn> oh
[16:12:54] <pjb> Lady Tottington
[16:13:41] <pjb> There https://www.youtube.com/watch?v=y6RSGjolKzY
[16:13:42] -ixelp- I was Wondering where I havr seen here, it is lady campanula tottington - YouTube
[16:14:29] * hayley uploaded an image: (79KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/uROgUdbZsjhzLjhfMeRKdZbX/Screenshot_2020-06-16_11-05-05(1)(1).png >
[16:14:43] <hayley> Anyone seen the meme with Assad which goes "who must go"?
[16:15:20] <selwyn> there's probably a dick cheney one now
[16:15:50] *** Quits: humasect (~humasect@2001:1970:57e0:4100::141e) (Ping timeout: 258 seconds)
[16:16:16] <hayley> Something like "CL must go" "Who must go?" *parastat fucking dies*
[16:16:52] <selwyn> a c backend for what
[16:17:10] <selwyn> idk what parastat is
[16:17:49] <hayley> Once 1.25 years ago I wrote an article meming it out of existence
[16:18:33] <hayley> https://applied-langua.ge/posts/parastatal-problem.html They wanted to use C for a web server fwiw
[16:19:04] <hayley> (and I assume not like "use nginx" since it was a custom binary)
[16:19:42] <dave0> has youtube started throttling youtube-dl ?
[16:20:09] <hayley> I find it's 50-50 to get a fast download or not. Try restarting and see if it improves.
[16:20:27] <pjb> C has been used to write a lot of web servers.  It can be used for anything.
[16:20:29] <dave0> ah okay thanks hayley 
[16:20:46] * hayley uploaded an image: (241KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/acKgSpBthgepuOAvEoNLipKC/faa-committee.jpeg >
[16:21:11] <hayley> pjb: if you don't have as many hackers as nginx, I don't trust you to just "not write bugs" with C.
[16:21:38] <pjb> does generating C code with lisp programs count as "many hackers"?
[16:22:10] <hayley> It also gets messier with concurrency and trying to optimize for itty bitty machined as they did.
[16:22:43] <hayley> If the C code has C "semantics" with no bounds and variant checks by default, then still no.
[16:22:43] <pjb> Well, the C standard includes concurrency operators, a thing that the CL standard is lacking.
[16:22:59] <pjb> Of course :-)
[16:23:11] <hayley> That doesn't mean that they are easy to not blow off your feet with.
[16:24:37] <hayley> For a two person job with such scope (you want correctness and efficiency) I would not think C is going to be productive. And I think I was shown right.
[16:24:59] <selwyn> meh
[16:25:02] <selwyn> people will never learn
[16:25:57] <hayley> The invisible hand of software engineering struck, and I will say that I got to celebrate the birthday of that article as the original website went down.
[16:26:45] <pjb> selwyn: peoplep always learn, but the population of programmers double every 5 years, therefore at any time, half the programmers have less than 5 years experience / learning behind them.
[16:27:15] <hayley> Apparently they had like 10 years experience in C. What does beach say...most people have one year of experience ten times?
[16:27:51] <hayley> Or, as Henry Baker said, "I'm sure that your productivity is high compared with most other C++ programmers, but that still probably leaves you in the 'pathetic' category compared with other languages/systems."
[16:27:53] <selwyn> someone should make a 'collected sayings of beach'
[16:28:14] <hayley> 1. Good morning everyone! 2. Good morning everyone!
[16:28:22] <semz> dave0 yes it has. youtube-dl is currently not maintained because of irl issues for the maintainer. yt-dlp is a more maintained fork that works with sane speeds.
[16:29:00] <semz> they really want you to see those ads
[16:29:06] <dave0> semz: ah cool thanks!
[16:29:26] <dave0> i get ads before and after
[16:30:40] * hayley uploaded an image: (86KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/bAilwNizIcZhBAYoXygFLBis/everyone-i-dont-like-is-a-techbro.jpg >
[16:30:46] <hayley> Also, as well as the article, we also got this book
[16:31:24] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[16:31:25] <pjb> Well, it seems that we're in the sigmoid: (loop for ((y0 n0) (y1 n1)) on '((2018 23e6) (2019 23.9e6) (2020 25.5e6)) by 'cdr while n1 collect (/ n1 n0)) #| --> (1.0391304 1.0669456) |#  (expt 1.05 5) #| --> 1.2762812
[16:32:36] *** Joins: hendursaga (~weechat@user/hendursaga)
[16:32:58] <hayley> What are these numbers?
[16:33:12] <pjb> doubling period is now (/ 2 (log (sqrt (/ 25.5e6 23e6)))) #| --> 38.765587 |# years.
[16:33:27] <pjb> "According to Statista, in 2019 the number of software developers in the world grew to 23,9 million, while in 2018 there were only 23 million programmers and it's predicted to reach 28,7 million software developers by 2024."
[16:33:34] <hayley> Well.
[16:33:49] <pjb> "The global developer population is expected to reach 28.7 million people by 2024, an increase of 3.2 million from the number seen in 2020."
[16:34:15] <selwyn> what
[16:34:36] <pjb> I guess experience will improve, and salaries will increase.
[16:35:55] <pjb> Also, if you write a CL compiler, your market is 23 million, if you write a silly Android game, your market is billions.
[16:36:43] <pjb> but still… (<  (* 23e6 1000)  (* 6e9 4.00)) #| --> t |# 
[16:37:37] <semz> the solution is clearly a hybrid approach here
[16:37:40] <semz> put ads into the CL compiler
[16:38:13] <pjb> :-)
[16:39:53] <selwyn> no way is a cl market 23 million, but i take your point
[16:39:58] <selwyn> it must be more like 10000
[16:40:18] <hayley> concurrent-hash-tables market in shambles
[16:40:24] *** Joins: vats (~vats@103.158.91.165)
[16:40:33] <hayley> 9999 just want help with AI class homework
[16:40:40] <selwyn> lol
[16:40:53] <selwyn> or emacs config files
[16:43:55] *** Joins: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d)
[16:46:32] *** Quits: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d) (Quit: Leaving)
[16:47:53] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[16:48:25] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[16:57:29] *** Joins: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d)
[17:15:53] *** Quits: sham1 (~sham1@212-146-44-107.aboa.net) (Quit: ZNC 1.8.2 - https://znc.in)
[17:17:39] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[17:18:04] *** Joins: sham1 (~sham1@212-146-44-107.aboa.net)
[17:18:09] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[17:24:52] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[17:37:01] *** Quits: vats (~vats@103.158.91.165) (Ping timeout: 252 seconds)
[17:43:08] *** Joins: vats (~vats@103.158.91.165)
[17:51:34] *** Quits: random-nick (~random-ni@87.116.183.63) (Ping timeout: 260 seconds)
[17:51:38] <mfiano> lisp123: How long have you been using Emacs btw?
[17:55:00] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 265 seconds)
[17:58:02] <dave0> nite all
[17:58:38] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:40:25] *** Joins: humasect (~humasect@2001:1970:57e0:4100::141e)
[18:44:47] *** Quits: humasect (~humasect@2001:1970:57e0:4100::141e) (Ping timeout: 264 seconds)
[18:45:14] *** Joins: makomo (~makomo@user/makomo)
[18:53:51] *** Joins: ln43 (~ln43@user/ln43)
[18:54:09] <ln43> Hi all
[19:15:17] *** Quits: raeda (~raeda@72.49.219.33) (Quit: Leaving)
[19:18:14] <selwyn> hi
[19:18:45] <ln43> Hello selwyn
[19:27:35] *** Joins: molson (~molson@2001-48F8-704A-CA1-0-0-75F-1038-static.midco.net)
[19:30:27] *** Quits: ln43 (~ln43@user/ln43) (Quit: Connection closed)
[19:57:24] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[19:58:52] <lisp123> mfiano: 1 year, u?
[19:59:22] <mfiano> Ah. 10 or so?
[19:59:35] <lisp123> Nice
[20:08:02] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[20:28:34] *** Joins: humasect (~humasect@2001:1970:57e0:4100::141e)
[20:34:35] *** Quits: slyrus (~slyrus@192-184-223-165.static.sonic.net) (Ping timeout: 258 seconds)
[20:40:56] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[20:55:17] *** Quits: vats (~vats@103.158.91.165) (Ping timeout: 265 seconds)
[20:56:43] *** Joins: vats (~vats@42.111.13.59)
[20:57:13] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 252 seconds)
[20:59:07] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[21:01:00] *** Quits: vats (~vats@42.111.13.59) (Ping timeout: 260 seconds)
[21:01:15] *** Joins: vats (~vats@42.111.22.112)
[21:10:35] *** Quits: humasect (~humasect@2001:1970:57e0:4100::141e) (Ping timeout: 264 seconds)
[21:15:35] *** Joins: Psybur (~Psybur@mobile-166-170-29-82.mycingular.net)
[21:22:31] *** Joins: humasect (~humasect@2001:1970:57e0:4100::141e)
[21:27:26] *** Quits: humasect (~humasect@2001:1970:57e0:4100::141e) (Remote host closed the connection)
[21:29:51] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[21:31:01] <mfiano> Ugh. I hate wasting a whole day with a certain class of developer that thinks they know more than a user.
[21:31:06] *** Joins: humasect (~humasect@2001:1970:57e0:4100::141e)
[21:31:41] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[21:37:14] <mfiano> I submitted an extensive bug report for an Emacs package with all information required to look into it further. The issue is a compatibility failure with recent-ish Orgmode, which I even bisected to a specific commit for them. Back and forth the discussion goes, with each message from them dismissing the data I provide as false. I provided a specific commit as mentioned, and they cannot reproduce
[21:37:16] <mfiano> so my information must be false. Skip 8 hours later, and it turns out they are using Doom Emacs, with a custom fork of the package in question, as the commit hash they are on cannot be located in any of the branches of Orgmode. Moral of this story: If you maintain an extension project of another Emacs package, make sure that other package comes from upstream and not some random Emacs
[21:37:18] <mfiano> distribution's fork of it. This is your duty as a developer if you welcome bug reports and don't want to waste you and anyone's time.
[21:38:59] <lisp123> mfiano: Damn, that's a painful waste of time
[21:40:14] *** Quits: vats (~vats@42.111.22.112) (Ping timeout: 265 seconds)
[21:40:30] *** Joins: vats (~vats@103.158.91.165)
[21:40:57] <mfiano> I use straight.el which normally would allow me to pin the bisected commit of Orgmode to my config so I can use this package...but
[21:41:27] <mfiano> magit is not very good at huge repositories. I've been waiting for it to create a new branch for 2 hours now.
[21:41:30] <mfiano> ORgmode is massive
[21:42:19] <lisp123> Yeah they are applications in their own right
[21:42:20] <mfiano> It's cpu bound, with barely any memory being used. This always happens with large repositories when using Magit. It must be some quadratic or more algorithm
[21:43:04] <lisp123> 2 hours sounds excessive though
[21:43:05] <mfiano> My week spent trying to modernize my Emacs in an effort to like it a little more than I did, resulted in just the opposite so far
[21:43:13] <lisp123> lol
[21:44:05] <lisp123> That's Emacs for you
[21:44:09] *** Quits: humasect (~humasect@2001:1970:57e0:4100::141e) (Remote host closed the connection)
[21:44:49] <lisp123> I think the problem also is that with Emacs, its relatively straightforward (or at least possible) to find a solution for a problem, so we are never satisfied until every last bit is perfect
[21:45:04] <lisp123> Whereas with other editors we tend to accept it and move on and just use them
[21:45:53] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 258 seconds)
[21:46:04] <mfiano> I don't agree. Emacs is always easy to configure, on the 3rd Tuesday of the month when the moon is full.
[21:46:57] <mfiano> I must have just missed my opportunity. Severe errors when loading packages because Emacs has no package namespacing or versioned dependencies makes it a moving target when you go to create a new configuration.
[21:47:27] <mfiano> Normally I'd just pin specific versions that I have tested to work well together, but I can't because one of them is Orgmode, and Magit is choking on such a large repo.
[21:47:52] <lisp123> I see
[21:48:10] <mfiano> It's not like I update Emacs packages frequently; I prefer to do it every few months so I can actually get work done instead of this mess
[21:48:40] <lisp123> I never update packages anymore
[21:49:01] <mfiano> But the initial installation of them hit the single point of failure that is Magit, so I have to reaquaint myself with CLI git to do a bunch of crazy rebasing and such
[21:49:49] <lisp123> :*
[21:49:51] <lisp123> :(
[21:50:26] <lisp123> Org mode also keeps making breaking changes
[21:50:31] <lisp123> I hate packages that do that
[21:50:43] <lisp123> I get it keeps improving, but feels like bad stye
[21:50:45] <lisp123> style*
[21:50:45] <mfiano> Yes, I dislike the CI style of development
[21:51:32] <mfiano> CI means there is only one source of truth, the current version. Rather than say a workflow like Git Flow.
[21:54:40] <lisp123> Terrible way of development, but what do I know, I'm not a professional developer
[21:55:36] <lisp123> NPM has a lot of these issues, I came to CL partly because of how much of a nightmare Node was and somebody wrote an easy to use CL tutorial on web dev, which worked within 1 hour
[22:01:16] *** Joins: notzmv (~zmv@user/notzmv)
[22:08:51] *** Joins: seere (~seere@user/seere)
[22:24:17] *** Joins: random-nick (~random-ni@87.116.183.63)
[22:26:18] *** Joins: humasect (~humasect@2001:1970:57e0:4100::141e)
[22:30:18] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:33:02] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[22:34:51] *** Quits: humasect (~humasect@2001:1970:57e0:4100::141e) (Remote host closed the connection)
[22:38:00] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:42:46] *** Joins: MichaelRaskin (~MichaelRa@ipb21a9944.dynamic.kabel-deutschland.de)
[22:42:46] *** ChanServ sets mode: +o MichaelRaskin
[22:48:41] *** Joins: humasect (~humasect@2001:1970:57e0:4100::141e)
[22:52:41] *** Quits: humasect (~humasect@2001:1970:57e0:4100::141e) (Remote host closed the connection)
[23:04:49] *** Quits: vats (~vats@103.158.91.165) (Ping timeout: 265 seconds)
[23:04:52] *** Joins: humasect (~humasect@d24-235-145-145.home1.cgocable.net)
[23:04:52] *** Quits: humasect (~humasect@d24-235-145-145.home1.cgocable.net) (Client Quit)
[23:05:34] *** Joins: vats (~vats@42.111.22.162)
[23:15:28] * mfiano got around the Org issue finally
[23:15:52] <mfiano> Was easier to work around it on emacs 28 git than stable
[23:16:09] <mfiano> But I here that 28 is to be released very soon, either this year or early next
[23:16:19] <mfiano> So might as well make my stuff compatible
[23:16:36] <mfiano> s/here/hear/
[23:23:34] <pl> lisp123: about the only way where CI doesn't work best is when you need to have long-lived support branches, but consider that: trunk-based development (that good CI requires) is how all *BSDs are developed
[23:38:25] <lisp123> pl: I see
[23:39:37] <pl> lisp123: the idea for CI is that you do not have long-lived branches that become a pain to integrate
[23:40:02] <pl> but even the proponents of it agree that there are models where it doesn't work, for example many open-source projects that don't have big staff
[23:40:04] <lisp123> But what happens when a feature is remove?
[23:40:29] <lisp123> :s/remove/removed
[23:40:43] <pl> lisp123: it's removed, just like anywhere else. The source code management is there for you to refer to older versions if you need them
[23:41:17] <pl> lisp123: what changes is that you have less time lost reintegrating changes
[23:42:06] <lisp123> pl: Oh so i can continue to refer to an older version?
[23:42:34] <lisp123> Or does everybody have to upgrade to the latest and greatest
[23:42:55] <pl> lisp123: yes, you can. CI is about the workflow of /developers/ of the code, not people who just use it
[23:43:10] <lisp123> pl: Understood, thanks :)
[23:43:58] <pl> release management still exists and creates artifacts from the source - in fact, CI in ultimate goes to CD - Continuous Delivery - meaning you always can release a version from current master
[23:44:22] <pl> what usually happens is that a point in repository is tagged with version number and off you go
[23:45:15] <pl> unrelated - https://news.ycombinator.com/item?id=28961987 https://lisp-journey.gitlab.io/blog/lisp-interview-kina/
[23:45:16] -ixelp- Kina Knowledge, using Common Lisp extensively in their document processing stack | Hacker News
[23:45:25] <pl> impressive use of CL and custom lisp
[23:47:27] <lisp123> I saw that on reddit, looks really cool
[23:47:35] <lisp123> Especially their editor!
[23:47:55] <lisp123> But I wonder, is it written in JavaScript or CL (it said somewhere it transpiles to JS)
[23:48:35] <pl> They implemented their own Lisp (DLisp) that compiles to JS, but most importantly, you can modify the code at runtime from the browser (and it's a feature available to end users!)
[23:48:58] <pl> the backend is SBCL
[23:50:59] <lisp123> I see. So the efficiency & speed they mention is due to compiling CL and not running JS code
[23:51:45] <pl> some of the efficiencies are due to CL, some are due to DLisp - the latter are from my understanding efficiencies of development (short iteration, easy customization)
[23:53:14] *** Quits: random-nick (~random-ni@87.116.183.63) (Ping timeout: 260 seconds)
[23:54:58] <lisp123> Upvoted on HN, hopefully it goes to the front page
