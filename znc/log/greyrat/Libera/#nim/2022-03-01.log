[00:42:20] <FromDiscord> <Waldecir Santos> In reply to @Isofruit "Turns out I can't,": can't you do it with a macro ?
[00:44:17] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3R2h
[00:44:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f)
[00:44:57] <FromDiscord> <Phil> (edit) "https://play.nim-lang.org/#ix=3R2h" => "https://play.nim-lang.org/#ix=3R2j"
[00:46:03] <FromDiscord> <Phil> In reply to @Waldecir Santos "can't you do it": Haven't tried, I'm not particularly at the point where I actually "do" macros
[00:58:08] *** Joins: ltriant (~ltriant@118.102.122.246)
[01:00:50] <FromDiscord> <haolian9 (高浩亮)> can anyone explain the replies a bit in [this thread](https://forum.nim-lang.org/t/8962)? seems i just asked a stupid question.
[01:01:07] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d0d7:ba7d:5a5a:630f) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:02:37] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 240 seconds)
[01:14:18] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:15:27] <FromDiscord> <haxscramper> I don't know where the "code is invalid regardless of the used mm scheme" came from, because to me it seems like a hole in the spec, where `cstring()` works like `addr` on one MM scheme, and works differently on the other one
[01:15:46] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3R2u
[01:16:10] <FromDiscord> <haxscramper> arc does switch underlying C string implementation to a different behavior IIRC
[01:22:12] <FromDiscord> <ynfle> sent a code paste, see https://play.nim-lang.org/#ix=3R2y
[01:25:45] <FromDiscord> <haolian9 (高浩亮)> thanks. anyway, i dont want to ask it further
[01:30:13] *** Joins: ltriant (~ltriant@118.102.122.246)
[01:57:56] <FromDiscord> <dom96> In reply to @haolian9 (高浩亮) "can anyone explain the": There are no stupid questions here. Getting different behaviour based on MM scheme does seem confusing
[01:58:04] <FromDiscord> <dom96> (edit) "In reply to @haolian9 (高浩亮) "can anyone explain the": There are no stupid questions here. Getting different behaviour based on MM scheme does seem confusing ... " 03added "here"
[01:59:33] <FromDiscord> <demotomohiro> In reply to @haolian9 (高浩亮) "can anyone explain the": I think it means `y.add("d")` can reallocate internal storage and `z` become invalid pointer.
[02:15:40] <FromDiscord> <Elegantbeef> @Phil\: there are multiple solutions here, you can manual subscribe procedures using a macro if you so wished, you could use something like traitor, could just expose the procedure and deal with instantiation errors if it's not in scope of instantiation
[02:16:19] <FromDiscord> <Elegantbeef> The issue is how generics are instantiated, Nim doesnt bind anything but hooks to types, as such you cannot have a procedure call a procedure that doesnt exist in scope of instantiation
[02:16:24] <FromDiscord> <Elegantbeef> After the procedure is instantiated it's fair game
[02:44:41] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[02:52:38] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:54:52] *** Joins: girvo (~default@125.119.218.139.dyn.wbroadband.net.au)
[02:55:17] <girvo> hey all :)
[02:55:30] <FromDiscord> <huantian> hewwo
[02:55:48] <girvo> finally back to using Nim in anger at work, stoked lol
[02:58:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[03:03:22] *** Quits: oprypin (~irc@pryp.in) (Quit: Bye)
[03:03:32] *** Joins: oprypin (~irc@pryp.in)
[03:04:54] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 260 seconds)
[03:07:28] <FromDiscord> <Elegantbeef> Nice
[03:08:30] <FromDiscord> <Elegantbeef> Hopefully the anger is due to another language abusing you 😛
[03:12:24] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:21:38] *** Quits: shalokshalom (~quassel@2a02:1748:dd5e:7f60:b5dc:871:61:d7) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:41:37] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:47:31] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[03:54:36] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[03:56:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:57:57] <girvo> Hah "using in anger" is a turn of phrase, no actual anger, just means "for real" :)
[03:58:21] <girvo> Using it to build our IoT platforms firmware on the ESP32 platform with our custom boards
[03:59:32] <FromDiscord> <Elegantbeef> Ah sounds fun
[04:00:09] <girvo> Challenging for sure, as ESP-IDF's compilers are... um... not great haha. But beats the crap out of doing it in raw C or god forbid C++
[04:13:06] <girvo> Fun challenge. So nimbase.h for 1.6.4 seems to complain when I'm trying to use it within ESP-IDF
[04:13:13] <girvo> // Test to see if Nim and the C compiler agree on the size of a pointer.
[04:13:16] <girvo> NIM_STATIC_ASSERT(sizeof(NI) == sizeof(void*) && NIM_INTBITS == sizeof(NI)*8, "");
[04:15:58] <girvo> Nim/this C compiles int size doesn't match the pointer size I guess? Can I fix that somehow?
[04:16:32] <FromDiscord> <Elegantbeef> are you compiling with the right flags?
[04:16:46] <FromDiscord> <Elegantbeef> inotherwords is your `arch` set properly?
[04:17:18] <girvo> Great question actually, let me check
[04:17:43] <girvo> Though in this case, Nim isn't delegating to the toolchain, PlatformIO runs the C toolchain -- I'm outputting compileOnly C files instead
[04:18:20] <FromDiscord> <Elegantbeef> Sure but if Nim assumes the arch you're compiling for is 64bit but the target is 32bit that'll cause the issue afaik
[04:19:19] <girvo> Yeah bang on :)
[04:19:23] <girvo> I'm looking into that now, cheers
[04:20:20] <girvo> Hah thank the guy who added --cpu:esp -- its working :)
[04:20:34] <girvo> Cheers mate!
[04:21:04] <FromDiscord> <Elegantbeef> Cant tell if aussie or brit, either no problem 😛
[04:22:50] <girvo> Aussie ;)
[04:23:08] <girvo> My firmware built, deployed, and is now yelling "another test" at me over serial lol
[04:25:15] <FromDiscord> <Elegantbeef> Test failed successfully
[04:31:54] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[04:33:27] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:42:42] <girvo> So I'm currently trying to write a dodgy build task, to make the constant "cd src/ && nim c main.nim (now repeat for every nim file)" but its been a long while since I tried to
[04:43:10] <girvo> I've quickly attempted to within the `project.nimble` file as a task build_example -- but getParams, and other nimscript API things I expected are apparently not there?
[04:44:46] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/Bhn
[04:45:12] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/nimscript.html will have the api you need to use
[04:46:07] <girvo> I can write an `import` within the core project.nimble no worries? per-task, or above it?
[04:46:14] <girvo> And yeah that's the API I was trying to use :)
[04:46:26] <FromDiscord> <Elegantbeef> you will need to write it at top level
[04:46:29] <FromDiscord> <Elegantbeef> Imports have to be top level
[04:48:59] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[04:50:42] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:54:53] <girvo> Okay sweet
[04:55:01] <girvo> Been ages since I did any Nimble/nimscript work
[05:00:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[05:02:30] <FromDiscord> <Patitotective> I don't know why but when I try to generate the documentation for my code there's an error with the `runnableExamples` saying that `toOrderedTable` identifier is not defined and I'm not sure why since if I run the "example" in that file it works and it is importing `std/tables`↵(Not sure if the error message is helpful, here it is https://play.nim-lang.org/#ix=3R35)
[05:03:19] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/KTE
[05:03:26] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3R36
[05:03:54] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3R37
[05:03:58] <FromDiscord> <Elegantbeef> It very much should
[05:04:00] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3R37" => "https://paste.rs/Hbv"
[05:04:12] <FromDiscord> <Elegantbeef> `bindSym"toOrderedTable"`
[05:04:23] <FromDiscord> <Elegantbeef> make sure that file with that macro imports tables
[05:07:14] <FromDiscord> <Patitotective> sent a code paste, see https://paste.rs/C2k
[05:07:28] <FromDiscord> <Elegantbeef> Nice private repo
[05:07:42] <FromDiscord> <Patitotective> LOL
[05:07:42] <FromDiscord> <Patitotective> sorry
[05:07:45] <FromDiscord> <Patitotective> 😢
[05:08:26] <FromDiscord> <Patitotective> done 🙃
[05:09:07] <FromDiscord> <Patitotective> oh, and here is the line https://github.com/Patitotective/niprefs/blob/main/src/niprefs/prefsnode.nim#L151↵sorry
[05:10:02] <FromDiscord> <Elegantbeef> What does teh file it generate look like?
[05:10:12] <FromDiscord> <Elegantbeef> `/home/cristobal/.cache/nim/niprefs_d/runnableExamples/prefsnode_examples_1.nim`
[05:11:03] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3R38
[05:17:57] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[05:19:29] <FromDiscord> <Elegantbeef> No clue why it's erroring then, perhaps just use codeblock
[05:20:03] <girvo> Hah I just realised my mistake. I was trying to call a non-exported proc from nimscriptapi
[05:20:28] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:22:52] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3R3a
[05:23:14] <FromDiscord> <Elegantbeef> No there is proper codeblocks
[05:23:17] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3R3a" => "https://paste.rs/a8N"
[05:23:45] <FromDiscord> <Patitotective> 😕
[05:23:56] <FromDiscord> <Patitotective> (edit) "😕" => "+😕"
[05:25:14] <FromDiscord> <Patitotective> how?
[05:25:55] <FromDiscord> <Elegantbeef> How what
[05:26:28] <FromDiscord> <Patitotective> what are codeblocks?
[05:26:39] <FromDiscord> <Elegantbeef> What i just showed you
[05:27:09] <FromDiscord> <Patitotective> huh? what did you show me 😕
[05:27:17] <FromDiscord> <Elegantbeef> https://github.com/nim-lang/Nim/blob/devel/lib/system.nim#L2325-L2333
[05:27:22] <FromDiscord> <Elegantbeef> Matrix bridge didnt like it
[05:28:18] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3R3b
[05:28:24] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3R3b" => "https://paste.rs/rGr"
[05:28:28] <FromDiscord> <Elegantbeef> No codeblocks like i showed render like runnable examples
[05:28:45] <FromDiscord> <Elegantbeef> What you showed shows as a doc comment not rendered code
[05:41:43] <FromDiscord> <Patitotective> worked thanks 🙃
[05:45:32] <FromDiscord> <Patitotective> the search section in the generated docs needs something to work? it's not working for me locally 😕
[05:45:35] <girvo> Hooray. PlatformIO integration is now working wonderfully. Can in theory work with _any_ arch that Nim supports for embedded work. Bit of extra stuff to add and wrap up but its working well
[06:01:20] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:10:10] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[06:10:42] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[06:34:38] *** Joins: ltriant (~ltriant@118.102.122.246)
[06:35:31] *** Quits: girvo (~default@125.119.218.139.dyn.wbroadband.net.au) (Remote host closed the connection)
[06:36:37] *** Joins: girvo (~default@125.119.218.139.dyn.wbroadband.net.au)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:49:11] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:49:49] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[08:01:47] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (Quit: ZNC - https://znc.in)
[08:22:17] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:11:53] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:12:53] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[09:13:09] *** Joins: ltriant (~ltriant@118.102.122.246)
[09:13:42] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Read error: Connection reset by peer)
[09:18:54] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[09:47:41] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[09:50:37] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[09:50:51] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[10:14:39] *** Joins: kenran (~kenran@ip-037-024-119-190.um08.pools.vodafone-ip.de)
[10:24:18] *** Joins: ltriant (~ltriant@118.102.122.246)
[10:30:20] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 272 seconds)
[10:37:16] <FromDiscord> <Sense> I wish Nim docs were a bit better.
[10:41:03] <FromDiscord> <Elegantbeef> Do they have you stymied ?
[10:41:35] <FromDiscord> <congusbongus> I usually learn new languages by asking dumb questions on stack overflow
[11:00:01] *** Joins: ltriant (~ltriant@118.102.122.246)
[11:04:37] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 240 seconds)
[11:05:42] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (Ping timeout: 252 seconds)
[11:05:55] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[11:15:24] <FromDiscord> <retkid> hey so
[11:15:46] <FromDiscord> <retkid> whats happening with my async?
[11:16:04] <FromDiscord> <retkid> its automatically waiting for it to complete which is making its asyncness completely irrelevant
[11:16:16] *** Quits: girvo (~default@125.119.218.139.dyn.wbroadband.net.au) (Read error: Connection reset by peer)
[11:16:22] <FromDiscord> <Elegantbeef> Ah looking at your code the issue is clear
[11:16:25] <FromDiscord> <Rika> On first call the async is run until the first yield
[11:16:45] <FromDiscord> <Rika> I don’t know why exactly that is done but it is
[11:17:37] <FromDiscord> <retkid> In reply to @Rika "On first call the": no but all of them in the loop are
[11:17:46] <FromDiscord> <Rika> What
[11:18:11] <FromDiscord> <enthus1ast> i dont see his code \:/
[11:18:18] <FromDiscord> <Elegantbeef> That's the joke
[11:18:24] <FromDiscord> <enthus1ast> ah ok
[11:18:32] <FromDiscord> <retkid> not in an async proc
[11:18:32] <FromDiscord> <Rika> Your joke is not obvious that it is
[11:18:34] <FromDiscord> <retkid> sent a code paste, see https://paste.rs/PMx
[11:18:37] <FromDiscord> <retkid> No i got it
[11:19:18] <FromDiscord> <retkid> between the echo it does not wait
[11:19:27] <FromDiscord> <retkid> (edit) "it does not wait" => "waits"
[11:19:29] <FromDiscord> <enthus1ast> but sleep there
[11:19:32] <FromDiscord> <enthus1ast> pu
[11:19:32] <FromDiscord> <enthus1ast> t
[11:19:37] <FromDiscord> <retkid> thats not............
[11:19:45] <FromDiscord> <Rika> What is the async proc
[11:19:59] <FromDiscord> <Rika> If there’s a lot of code before the first time you await in the proc, then that’s why
[11:20:01] <FromDiscord> <retkid> some http stuff
[11:20:02] <FromDiscord> <enthus1ast> or↵for idx in 0..10000\: shasum("troll?")
[11:20:06] <FromDiscord> <Rika> That part before the first await is still run
[11:20:22] <FromDiscord> <enthus1ast> thats called busy wait ya know
[11:20:41] <FromDiscord> <Rika> I do not know what your point is enthusiast
[11:21:00] <FromDiscord> <retkid> no theres no code between each execution apart form the async function itself
[11:21:10] <FromDiscord> <retkid> thats literally the entire loop
[11:21:24] <FromDiscord> <Rika> Yes what is the async proc
[11:21:25] <FromDiscord> <retkid> sent a code paste, see https://paste.rs/7Y1
[11:21:41] <FromDiscord> <retkid> http code
[11:21:46] <FromDiscord> <retkid> just fetches websites
[11:21:48] <FromDiscord> <retkid> nothing big
[11:21:57] <FromDiscord> <retkid> though there is time to wait
[11:21:58] <FromDiscord> <Rika> From the top of that proc down to the first time you await in the proc, that is still run in the loop
[11:22:58] <FromDiscord> <retkid> if all the code is being run in a completely non parallel way then why am i doing async at all
[11:23:00] *** Joins: PMunch (~PMunch@user/pmunch)
[11:23:05] <FromDiscord> <Rika> It’s not parallel
[11:23:08] <FromDiscord> <Rika> Async is not parallel
[11:23:22] <FromDiscord> <retkid> im aware its not parallel i just dont know the word of the top of my head to describe it
[11:23:26] <FromDiscord> <Rika> Concurrent?
[11:23:27] <FromDiscord> <enthus1ast> @Rika\: i think the bridge did not work, i just don't see any code
[11:23:32] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (Ping timeout: 240 seconds)
[11:23:35] <FromDiscord> <retkid> yes
[11:23:46] <FromDiscord> <Rika> It won’t make any difference if the code above the await was run in the loop or not really
[11:23:46] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[11:23:53] <FromDiscord> <Rika> in this case
[11:24:10] <FromDiscord> <Rika> It will still run one by one until each proc awaits
[11:24:42] <FromDiscord> <retkid> well, I dont want it to run in a loop obviously, i want it to que  up the procs then wait for all of them to be complete
[11:24:45] <FromDiscord> <Rika> It’s still concurrent
[11:24:57] <FromDiscord> <Rika> Yes it’s still gonna be concurrent in the end
[11:25:16] <PMunch> As long as the http fetching code is done correctly*
[11:25:33] <FromDiscord> <Rika> I assumed that was a given
[11:25:34] <FromDiscord> <enthus1ast> loop through the futures, check if theire done, if done await the result; in an endless loop
[11:25:44] <FromDiscord> <Rika> You don’t need to do that
[11:25:55] <FromDiscord> <enthus1ast> this way you can always add new stuff
[11:26:18] <FromDiscord> <retkid> In reply to @Rika "I assumed that was": even though instead of just adding the future to the sequence then continuing, its waiting for the code to return to then move onto the next one, it is somehow still concurrent?
[11:26:20] <FromDiscord> <Rika> If that’s what is desired then sure
[11:26:29] <FromDiscord> <Rika> In reply to @retkid "even though instead of": Yes
[11:26:39] <FromDiscord> <Rika> It isn’t waiting to return
[11:26:43] <FromDiscord> <Rika> It’s waiting to yield
[11:27:19] <FromDiscord> <retkid> so this is suppose to make any difference to my code in any way how?
[11:27:34] <FromDiscord> <retkid> sorry i might just be to dumb to understand how this isn't sequential
[11:27:51] <FromDiscord> <Rika> I’d draw if I could but I do not have my tablet
[11:28:09] <PMunch> Have you seen this @retkid https://peterme.net/asynchronous-programming-in-nim.html
[11:28:52] <FromDiscord> <Elegantbeef> Who's this peterme guy, probably a weirdo
[11:29:03] <FromDiscord> <retkid> i wonder
[11:29:04] <FromDiscord> <retkid> hmmmmm
[11:29:57] <FromDiscord> <retkid> alright I'm never touching async again and I'll just thread it
[11:30:07] <PMunch> @retkid, the way async works is that when you call `helloRika` it will run all the code until the first `await`.
[11:30:17] <FromDiscord> <Rika> That’s what I have been saying
[11:30:30] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[11:30:32] <PMunch> Multi-threading this kind of network access won't really give you much of a benefit though
[11:30:40] <FromDiscord> <Rika> I think you just need to understand the difference between concurrency and parallelism
[11:30:43] <PMunch> So you'd rather learn how to use both
[11:31:17] <FromDiscord> <fbpyr> sent a code paste, see https://play.nim-lang.org/#ix=3R4h
[11:31:34] <PMunch> Once it hits the first await, it takes the handle of the thing it is awaiting, adds it to the async dispatcher, and yields the control back to the caller.
[11:31:42] <FromDiscord> <retkid> In reply to @PMunch "Multi-threading this kind of": I dunno man, every single other language I have had no problems grasping asynchronous tasks,.
[11:31:53] <FromDiscord> <Elegantbeef> The first example shows how fbpyr https://github.com/disruptek/gittyup#usage
[11:32:02] <FromDiscord> <Rika> In reply to @retkid "I dunno man, every": And I assure you this is the same behaviour
[11:32:09] <PMunch> @retkid, asynchronous != multi-threaded
[11:32:09] <FromDiscord> <fbpyr> the example does not compile here.
[11:32:10] <FromDiscord> <retkid> even with pythons funky language shenanigans  I was able to grasp it
[11:32:15] <FromDiscord> <retkid> In reply to @PMunch "<@217459674700578816>, asynchronous != multi-thread": I am aware of this
[11:32:16] <FromDiscord> <Elegantbeef> well `.get`
[11:32:19] <FromDiscord> <fbpyr> as in issue 2.
[11:32:31] <FromDiscord> <Rika> In reply to @retkid "even with pythons funky": Then I am unsure what the issue is here
[11:32:53] <FromDiscord> <Rika> Nothing major changed here
[11:33:04] <PMunch> @retkid, I'm not sure what you find particularly challenging with Nims async system, it works pretty much the same way as every other such system
[11:33:33] <FromDiscord> <fbpyr> sry, as in this issue\: https://github.com/disruptek/gittyup/issues/17
[11:33:44] <FromDiscord> <retkid> I am as well because I dont quite understand why an asynchronous function would need to wait to complete a procs function before continuing in the host proc even though I've never encountered that in any other asynchronous situation
[11:34:12] <FromDiscord> <Elegantbeef> gittyup is using https://github.com/disruptek/badresults fbpyr
[11:34:17] <FromDiscord> <fbpyr> ..maybe I also misunderstood the "walrus opreator" there..
[11:34:20] <FromDiscord> <retkid> that soungs much less like async and much more like a then b then c then d rather than a then b then a then c
[11:34:27] <FromDiscord> <Rika> It is just a slight difference in Nim. It is the same behaviour otherwise in Python and other languages
[11:34:33] <FromDiscord> <fbpyr> ahh thank you for the pointer [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org) ! 🙂
[11:34:49] <FromDiscord> <Rika> In reply to @Rika "It is just a": The behaviour is equivalent, I mean
[11:34:50] <FromDiscord> <Rika> Wholly
[11:34:57] <FromDiscord> <Elegantbeef> the `:=` afaict handles the error and assignment
[11:35:26] <PMunch> @retkid, try to throw in a small `await sleepAsync(0)` at the beginning of your `helloRika` procedure
[11:35:29] <FromDiscord> <Rika> There is no difference between running the first part of an async proc in the loop versus running the parts in the dispatcher
[11:35:46] <FromDiscord> <Rika> Since they will run one by one either way
[11:35:54] <FromDiscord> <Rika> And there is no time benefit
[11:36:04] <PMunch> That should make your procedure return control immediately, before running any more code
[11:36:18] <PMunch> I guess some frameworks might do this by default, but that seems a bit odd
[11:36:34] <FromDiscord> <Rika> It is
[11:36:38] <FromDiscord> <Rika> I found it odd at first
[11:37:01] <PMunch> That Nim doesn't do it, or that some languages do it?
[11:37:13] <FromDiscord> <Rika> Former
[11:37:41] <PMunch> Ah, I guess it all depends on what you're expecting
[11:38:38] <FromDiscord> <retkid> In reply to @PMunch "<@217459674700578816>, try to throw": that works however they are still returning separately with no cpu usage meaning that even though it skipped everything its still being executed sequentially
[11:38:43] <FromDiscord> <retkid> though
[11:38:45] <FromDiscord> <retkid> i can be wrong
[11:38:47] <FromDiscord> <Rika> ?
[11:38:55] <FromDiscord> <Rika> Of course they are you’re making them sequentially
[11:38:57] <FromDiscord> <Rika> I don’t get it
[11:38:59] <FromDiscord> <Elegantbeef> fbpyr i'd probably suggest using the walrus op given the conventions
[11:39:27] <FromDiscord> <retkid> In reply to @Rika "Of course they are": then how would i cause them to execute concurrently and not sequentially?
[11:39:37] <FromDiscord> <Rika> Those are not mutually exclusive.
[11:39:39] <PMunch> @retkid, again I'm not 100% sure you actually understand the difference between async and threading. Async will only run on a single thread, and if it is waiting for IO bound tasks it can easily end up just idling your CPU
[11:39:47] <FromDiscord> <retkid> yes
[11:39:57] <PMunch> If you don't have work to do for the CPU there is no reason for it to do anything
[11:40:24] <FromDiscord> <retkid> In reply to @PMunch "<@217459674700578816>, again I'm not": > waiting for IO bound tasks it can easily end up just idling your CPU↵Unless it is an OS / cpu level issue there should be no IO level bottleneck but i will check top
[11:40:30] <FromDiscord> <Rika> What?
[11:40:34] <FromDiscord> <fbpyr> walrus op, it looked elegant in the example(and I like it in python, too),↵but this is where I get the compile error - so trying it now with badresults.. 🙂
[11:40:39] <FromDiscord> <Rika> A network call is an IO bottleneck
[11:41:05] <PMunch> If you don't have an IO bottleneck then async isn't what you're supposed to do
[11:41:06] <FromDiscord> <Elegantbeef> The walrus op is apart of gittyup
[11:41:18] <FromDiscord> <Rika> I’m confused
[11:41:21] <PMunch> The whole point of async is getting around IO bottlenecks
[11:41:39] <FromDiscord> <retkid> In reply to @Rika "A network call is": But didn't you tell me a while ago that I shouldn't crawl with threads?
[11:41:54] <FromDiscord> <retkid> if a network call is an io bottleneck shouldn't it be a threaded task?
[11:41:55] <PMunch> And by IO bottleneck I mean everything from file reads to network access
[11:41:59] <PMunch> No?
[11:42:05] <FromDiscord> <Rika> No?
[11:42:10] <FromDiscord> <Rika> IO -> async
[11:42:12] <PMunch> Again, the entire point of async is to get around IO bottlenecks
[11:42:21] <PMunch> Threads are for getting around CPU bottlenecks
[11:42:24] <FromDiscord> <retkid> alright this is going in circles and is completely pointless ¯\_(ツ)_/¯
[11:42:32] <FromDiscord> <Rika> Well
[11:42:38] <FromDiscord> <Rika> If you say so, I guess
[11:42:39] <PMunch> Throwing more CPU power onto an IO bound problem will do nothing more than heat up your room
[11:42:58] <FromDiscord> <Rika> In reply to @PMunch "Throwing more CPU power": Not just your own room when it’s a network call 😄
[11:43:00] <FromDiscord> <retkid> In reply to @PMunch "Throwing more CPU power": I dont know why you're telling me this when i explicitly said my cpu usage is low meaning that is not the bottleneck
[11:43:01] <FromDiscord> <Elegantbeef> It's a win win, i get my information at the same speed and my room is warm
[11:43:16] <FromDiscord> <Elegantbeef> You do know it's a single threaded operation
[11:43:20] <FromDiscord> <retkid> REALLY
[11:43:21] <FromDiscord> <Rika> In reply to @Elegantbeef "It's a win win,": True, sometimes that’s a win lol
[11:43:23] <FromDiscord> <retkid> you dont say?
[11:43:29] <FromDiscord> <Rika> In reply to @Elegantbeef "It's a win win,": But power usage isn’t
[11:43:30] <FromDiscord> <Elegantbeef> Meaning at most you can use 1 core, and in my case it's 12.5% of the entire cpu
[11:43:34] <FromDiscord> <retkid> holy shit
[11:43:37] <FromDiscord> <retkid> i never knew that
[11:43:43] <FromDiscord> <Elegantbeef> Nice sarcasm
[11:43:51] <FromDiscord> <Rika> Okay
[11:43:56] <FromDiscord> <Elegantbeef> Now just maybe channel it to someone else that actually wants to take it
[11:44:00] <FromDiscord> <Rika> This is getting a bit heated heh
[11:44:01] <FromDiscord> <Rika> But really
[11:44:04] <PMunch> Okay, let's take a step back here
[11:44:20] <FromDiscord> <Rika> You’re making a network call right? CPU isn’t the bottleneck here, as you say
[11:44:22] <FromDiscord> <retkid> my point was is that if the tasks are executing together at once on 1 cpu i'd be able to see the botlte neck by looking for any CPU being above like 75%
[11:44:27] <FromDiscord> <Elegantbeef> Nah i never retreat, into the breach is what i say
[11:44:30] <FromDiscord> <Rika> It’s IO right? Can we agree on this at least
[11:44:37] <PMunch> Not really
[11:45:00] <FromDiscord> <Rika> In reply to @retkid "my point was is": If the code isn’t saturating a single core then no
[11:45:06] <PMunch> Basically your OS gets interrupts from the network card when packets come in
[11:45:11] <FromDiscord> <Rika> Which is usually the case when doing networking stuff
[11:45:28] <FromDiscord> <Rika> In reply to @PMunch "Basically your OS gets": Oh man here we go semi-low-level stuff
[11:45:31] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/948131357152911370/unknown.png
[11:45:32] <PMunch> So if all you're doing is sitting there waiting for network traffic the CPU will sit idle until the network card pings it with new data
[11:46:06] <FromDiscord> <Rika> In reply to @retkid "": What is your point with this image
[11:46:07] <PMunch> @retkid, not quite sure what you wanted to show with that screenshot
[11:46:12] <FromDiscord> <Rika> Me neither..
[11:46:40] <PMunch> Okay, let me type up a long-winded explanation for how all this works which will hopefully help us all get on the same page.
[11:47:02] <FromDiscord> <retkid> The os has to delegate packs, and sometimes this results in waiting on a single cpu? correcty
[11:47:03] <FromDiscord> <Elegantbeef> Ah nifty he's going to write a book so we can all get on the same page
[11:47:04] <FromDiscord> <retkid> (edit) "correcty" => "correct?"
[11:47:13] <FromDiscord> <Rika> Sorry if anything was rude lol I have been told by many that I speak like a robot half of the time
[11:47:37] <FromDiscord> <retkid> https://www.youtube.com/watch?v=JxlZ4i3VjXY
[11:47:43] <FromDiscord> <Rika> In reply to @retkid "The os has to": Waiting means the CPU isn’t being overwhelmed meaning it is not a CPU bottleneck?
[11:47:46] <FromDiscord> <retkid> this is pretty much how this conversation feels
[11:48:20] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[11:48:48] <FromDiscord> <fbpyr> sent a long message, see http://ix.io/3R4m
[11:49:01] <FromDiscord> <retkid> In reply to @Rika "Waiting means the CPU": yes
[11:49:03] <FromDiscord> <retkid> it is idle
[11:49:08] <FromDiscord> <fbpyr> so is there a wa to ask for `Some()` ?
[11:49:15] <FromDiscord> <Rika> Yes so the bottleneck is elsewhere
[11:49:27] <FromDiscord> <retkid> this has been the entire point of my conversation, its not a cpu issue
[11:49:31] <FromDiscord> <Rika> Yes
[11:49:59] <FromDiscord> <Rika> And threads is a CPU bottleneck solver, so it isn’t appropriate for this issue
[11:50:22] <FromDiscord> <retkid> as is why im not using threads
[11:50:28] <FromDiscord> <retkid> because thats way overkill
[11:50:32] <FromDiscord> <Rika> Okay honestly I have to stop speaking I have no idea what we are arguing about anymore
[11:50:42] <FromDiscord> <Rika> What are you arguing against
[11:51:28] <FromDiscord> <retkid> why am I calling an asynchronous function, and they are executing in the order in which they were received rather than returning (yielding) in clumps
[11:52:07] <FromDiscord> <retkid> it is the same speed as me executing it in serial
[11:52:25] <FromDiscord> <retkid> ~~specifically cinnamon toast crunch~~
[11:52:31] <FromDiscord> <Rika> Perhaps because your IO is quick
[11:52:35] <FromDiscord> <Elegantbeef> No fbpyr the issue is that you dont have `import std/[uri, logging]`
[11:52:38] <FromDiscord> <Rika> And you aren’t having internet issues
[11:52:52] <FromDiscord> <Elegantbeef> `error` there is to write to the stdout and close the program "gracefully"
[11:53:16] <FromDiscord> <fbpyr> [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)\:  thanks! uri I added, but not logging - let ..me try
[11:53:39] <FromDiscord> <Elegantbeef> There might be another `error` procedure that does it, i dont know
[11:53:44] <FromDiscord> <Rika> The best that async can get in terms of speed is the speed of sequential sync code with the IO delay removed
[11:53:49] <FromDiscord> <Rika> It cannot get any quicker than that
[11:54:05] <FromDiscord> <Rika> Because single core
[11:54:09] <FromDiscord> <fbpyr> ahaa! now the complaints are gone! 😀
[11:54:24] <FromDiscord> <retkid> so async cannot get any faster than a single core
[11:54:25] <FromDiscord> <fbpyr> [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)\:  thank you so much!
[11:54:40] <FromDiscord> <Rika> If for some reason (you probably do have a good reason since this is a scraper) you need quicker speeds then I assume threads are now appropriate
[11:55:06] <FromDiscord> <retkid> yes im doing this soley for speed
[11:55:10] <FromDiscord> <Rika> By the way you can run threads AND async combined
[11:55:13] <FromDiscord> <Elegantbeef> So i'd say leave the issue but with the added information
[11:55:18] <FromDiscord> <retkid> In reply to @Rika "By the way you": im aware of this
[11:55:26] <FromDiscord> <Rika> Making sure
[11:55:26] <FromDiscord> <retkid> its in the asyncserver module
[11:55:29] <FromDiscord> <Rika> Some people aren’t
[11:55:36] <FromDiscord> <retkid> whats the proper name uh
[11:55:45] <FromDiscord> <retkid> asynchttpserver
[11:56:19] <FromDiscord> <retkid> somewhere it is (was?) "theoretically you can use this with threads and async"
[11:56:20] <FromDiscord> <retkid> etc
[11:57:11] <FromDiscord> <Rika> I remember having this problem now
[11:57:23] <FromDiscord> <Rika> The http client is kind of slow setting up its code
[11:57:26] <FromDiscord> <Rika> From what I recall
[11:57:40] <FromDiscord> <Rika> Might need optimisation in some way
[11:58:16] <FromDiscord> <retkid> im the women for the job
[11:58:21] <FromDiscord> <retkid> time to butcher the code >:)
[12:02:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[12:16:56] *** Joins: ltriant (~ltriant@118.102.122.246)
[12:18:26] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/948139637837271060/unknown.png
[12:19:02] <PMunch> @retkid, ready for wall-of-text time?
[12:19:05] <PMunch> http://ix.io/3R4o
[12:22:08] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 252 seconds)
[12:34:53] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:19:20] <FromDiscord> <fbpyr> hmm.. 🤔 ↵now trying to compile some nim that uses gittyup on a windows box (it compiles fine on debian after installing libgit2-dev).  on windows though, it understandably complains about the missing gitlib headers (which do not seem to be included in portable git). ↵is there somewhere where I can read up on how to get the git headers for win and get them to be recognized by nim compiler? ↵or would cross-compiling from linux to win
[13:22:08] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[13:22:41] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[13:24:44] <FromDiscord> <Elegantbeef> I do not know where to get the windows headers
[13:29:48] <PMunch> I'd guess the libgit website is a good way to start: https://libgit2.org/
[13:29:58] <FromDiscord> <fbpyr> so far for the solutions for git on windows, I have only seen it either via mingw (portable git) or via this .net library libgt2sharp.dll ↵the latter I successfully used at some earlier point from python via pythonnet. ↵maybe I should look into using it, and if it works figure out how I can bundle the dll with the nim program.
[13:30:09] <PMunch> You should be able to just download them from there and hand them to Windows by using --passL I guess
[13:32:13] *** Joins: shalokshalom (~quassel@2a02:1748:dd5e:7f60:b5dc:871:61:d7)
[13:35:19] *** Joins: ltriant (~ltriant@118.102.122.246)
[13:38:06] <FromDiscord> <fbpyr> oh wow - https://github.com/libgit2/libgit2 just built - I take that as a good sign.. 🙂
[13:40:23] <FromDiscord> <0ffh> In your opinion, what's the best ressource/tutorial on how to make/generate bindings for a C++ library?↵I've found some stuff, but I'm not sure there's nothing better out there.
[13:43:04] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 250 seconds)
[13:43:52] <NimEventer> New thread by Flajr: Static musl compilation with db_mysql module and external libraries mysqlclient and openssl, see https://forum.nim-lang.org/t/8966
[13:53:54] <FromDiscord> <fbpyr> sent a long message, see http://ix.io/3R4G
[13:56:02] <FromDiscord> <fbpyr> nvm I found `--cincludes` with that it finds the headers. but now complains about `could not load: libgit2.so`
[14:05:58] <FromDiscord> <retkid> i need to make thread arrays that are not of a set compile time size
[14:06:01] <FromDiscord> <retkid> how can i do that?
[14:06:01] <FromDiscord> <fbpyr> hmm.. 🤔 even when passing cincludes and clibdir like this\:↵`nim c -d:release --cincludes:c:/tools/libgit2/include --clibdir:c:/tools/libgit2/lib  -r installer.nim`↵it still insists\: `could not load: libgit2.so`  (even when I tried to copy `git2.dll` to `git2.so`) .. so close.. 🙁
[14:06:15] <FromDiscord> <Elegantbeef> seq↵(@retkid)
[14:06:30] <FromDiscord> <retkid> In reply to @Elegantbeef "seq (<@217459674700578816>)": i can initiate a seq the same way i can an array?
[14:06:42] <FromDiscord> <Elegantbeef> What do you mean?
[14:07:08] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=
[14:07:30] <FromDiscord> <Elegantbeef> `seq[Thread[...]]`
[14:08:11] <FromDiscord> <retkid> In reply to @Elegantbeef "`seq[Thread[...]]`": but then its not of any size?
[14:08:22] <FromDiscord> <Elegantbeef> What?
[14:08:33] <FromDiscord> <retkid> its not defined to a size like the array
[14:08:44] <FromDiscord> <retkid> i cant iterate over it
[14:08:55] <FromDiscord> <retkid> to use in create thread
[14:09:01] <FromDiscord> <retkid> createThread
[14:09:02] <FromDiscord> <Elegantbeef> `var myColl = newSeq[Thread[void]](10)`
[14:09:51] <FromDiscord> <retkid> thank you :3
[14:13:22] *** Joins: ltriant (~ltriant@118.102.122.246)
[14:18:13] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 240 seconds)
[14:23:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[15:05:42] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[15:06:52] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[15:10:03] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Excess Flood)
[15:14:08] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[15:24:12] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (Ping timeout: 240 seconds)
[15:25:58] <PMunch> Hmm, is there a way to parse timestamps with variable sub-second precision
[15:26:56] <PMunch> I have a format that sometimes returns things like both: 12:54:18.5062643 and 12:54:04.253155
[15:27:06] <PMunch> So either 6 or 7 characters
[15:29:56] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:31:27] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:53:52] *** Joins: jjido (~Denis@94.4.149.217)
[15:55:23] <FromDiscord> <fbpyr> ghaa.. that is frustrating\: after adjusting PATH for a while, to prevent mingw-confusion.↵it finally compiled with\: `nim c -d:release --cincludes:c:/tools/libgit2/include  --verbosity:3 installer.nim`↵...BUT\: when I try to run it, it says\: `could not load: libgit2.so` 😦↵there is a way to instead statically compile this, right?
[16:01:55] <FromDiscord> <retkid> I've completely forgotton how to make objects with sequences
[16:02:10] <PMunch> I think you then first need to make the static library `cmake -DBUILD_SHARED_LIBS=OFF` or something like that
[16:02:13] <PMunch> And then link with that
[16:02:24] <PMunch> @retkid, objects with sequences?
[16:03:00] <FromDiscord> <retkid> thats sounds weird, its not the sequences in the type thats the problem
[16:03:02] <FromDiscord> <retkid> 🤔
[16:03:30] <FromDiscord> <retkid> cant compile when i have these sequences in there but if i remove the other ones they're fine
[16:03:59] <FromDiscord> <auxym> can you make a minimal example that reproduces the problem?
[16:04:30] *** Joins: ltriant (~ltriant@118.102.122.246)
[16:04:40] <FromDiscord> <whisperdev> Hi. What is that lib which I can use for ssl so I dont have to ship (libcrypto-1_1-x64|libeay64).dll with the binary?
[16:06:13] <FromDiscord> <retkid> In reply to @auxym "can you make a": its unrelated to that
[16:06:17] <FromDiscord> <retkid> its a compiler problem?
[16:06:24] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3R4X
[16:06:52] <FromDiscord> <retkid> I found it
[16:06:52] <FromDiscord> <retkid> lol
[16:06:54] <FromDiscord> <auxym> In reply to @whisperdev "Hi. What is that": Assuming you mean "for https", this? https://github.com/treeform/puppy
[16:06:55] <FromDiscord> <retkid> typo
[16:12:25] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/948198521423679558/unknown.png
[16:12:43] <FromDiscord> <retkid> the things that you think should be really resource light always are the most intensive
[16:14:15] <FromDiscord> <whisperdev> In reply to @auxym "Assuming you mean "for": Oh I think so.
[16:14:22] <FromDiscord> <whisperdev> How do I download a file with this?
[16:15:53] <FromDiscord> <retkid> In reply to @retkid "": 😔 had 500 chromiums running
[16:17:33] <FromDiscord> <auxym> In reply to @whisperdev "How do I download": never used it, but I assume the raw bytes would be in the `Response.body` string, then  you can just dump them to a file. Hoping you're not downloading from multi-gb files
[16:17:56] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (Remote host closed the connection)
[16:18:09] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[16:20:07] <FromDiscord> <ShalokShalom> Who here tried Nim > LLVM > GraalVM already?
[16:20:22] <FromDiscord> <whisperdev> In reply to @auxym "never used it, but": Ah thanks I guess i can just do what downloadFile does from httpclient
[16:29:04] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:29:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[16:48:21] *** Quits: shalokshalom (~quassel@2a02:1748:dd5e:7f60:b5dc:871:61:d7) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:54:01] <FromDiscord> <fbpyr> sent a long message, see https://paste.rs/Mvf
[17:21:12] <FromDiscord> <0ffh> In reply to @0ffh "In your opinion, what's": Okay this one seems to be the nicest guide I've found so far.↵https://gist.github.com/zacharycarter/846869eb3423e20af04dea226b65c18f
[17:37:37] <FromDiscord> <Sense> hej, dudes can anyone give me compiler args for nim which are compressing to the smallest size
[17:38:26] <FromDiscord> <ynfle> In reply to @Sense "hej, dudes can anyone": `--opt:size -d:danger`? Not sure what you mean
[17:39:13] <FromDiscord> <Sense> In reply to @ynfle "`--opt:size -d:danger`? Not sure": this is what i use actually xd
[17:41:17] <Amun-Ra> -d=release --passL=-flto etc.
[17:41:46] <PMunch> @retkid, what are you doing now? If those numbers are from a web scraper you are probably doing something wrong.. Higher CPU != more good
[17:42:12] <FromDiscord> <retkid> In reply to @PMunch "<@217459674700578816>, what are you": nah im pretty sure bigger is always bette
[17:42:12] <FromDiscord> <retkid> (edit) "bette" => "better"
[17:42:16] <FromDiscord> <retkid> anyway
[17:42:21] <PMunch> @Sense, what kind of target are you compiling for?
[17:42:25] <FromDiscord> <retkid> no i just had like 500 chrome tabs open because selenium
[17:42:35] *** Quits: kenran (~kenran@ip-037-024-119-190.um08.pools.vodafone-ip.de) (Quit: WeeChat info:version)
[17:43:00] <FromDiscord> <Sense> In reply to @PMunch "<@790153860130799616>, what kind of": I am compiling for Windows x64, my aim is to make the most tiny executable which could work without any issues.
[17:43:08] <FromDiscord> <Sense> Let me put my current args rn
[17:43:16] <PMunch> In general `-d:danger --gc:arc --opt:size --passL:"-flto" would give a fairly low size
[17:44:02] <PMunch> @retkid, `while true: echo "No it's not"` run that and watch it 100% peg a CPU core without getting anything done :P
[17:44:04] <FromDiscord> <ynfle> danger removes all runtime checks though
[17:44:13] <FromDiscord> <Sense> `nim c -d:danger --gc:arc --debuginfo:off --opt:size --passc=-flto --passl=-flto --app:gui --panics:on <file>.nim`
[17:44:30] <PMunch> But yeah 500 chrome tabs will do that to your CPU :P
[17:44:30] <FromDiscord> <retkid> why are panics on?
[17:44:33] <Amun-Ra> and -passl=-s
[17:45:00] <PMunch> And --app:gui?
[17:45:23] <PMunch> --debuginfo:off should be on when compiling with -d:danger
[17:45:36] <PMunch> By the way, once it's done you might also want to strip the executable
[17:45:46] <FromDiscord> <0ffh> In reply to @PMunch "<@217459674700578816>, `while true: echo": Well if you pay the CPU, then according to Keynsianism, economic value is created.
[17:45:57] <PMunch> @Sense, this might interest you: https://hookrace.net/blog/nim-binary-size/
[17:45:58] <FromDiscord> <Sense> In reply to @PMunch "By the way, once": Does stripping breaks executables no?
[17:46:04] <PMunch> No?
[17:46:16] <PMunch> If it broke executable why would anyone do it :P
[17:46:18] <FromDiscord> <Sense> Uh... OK?
[17:46:45] <FromDiscord> <Sense> Also, I found out that when I try to build to `cpp` instead of `c` it seems that executable doesn't work afterwards xD
[17:46:57] <PMunch> @0ffh, haha yay capitalism!
[17:47:11] <PMunch> @Sense, then you probably did something else wrong
[17:47:32] <PMunch> Building with C++ should work just fine
[17:48:15] <PMunch> By the way they use `-d:release` in that article, that switch was renamed to `-d:danger` and a new slightly less aggressive switch was introduced and called `-d:release`
[17:49:07] <PMunch> Of course if you want the smallest program you quite possibly need to do some things with your program as well
[17:49:13] <PMunch> Switches will only get you so far
[17:50:49] <FromDiscord> <A_Person> is there any implementations of rdp/vnc in nim?
[17:51:43] *** Joins: arkurious (~arkurious@user/arkurious)
[17:55:54] <FromDiscord> <Sense> In reply to @PMunch "Building with C++ should": Hehe, what I meant here is that C++ binary works on Windows, but if you try to run through Wine on Linux it will not just work.
[17:58:44] <FromDiscord> <auxym> that might be more of an issue with WINE configuration... Why are you not compiling natively for linux?
[17:59:37] <FromDiscord> <Sense> In reply to @auxym "that might be more": My software is unironically Windows only. And I test it on my Windows 10 VM and through Wine to ensure everything works.
[18:01:22] <FromDiscord> <auxym> from what I know about wine (very little), it has a thousand compatibility settings that you have to tweak just right for each executable
[18:02:04] <FromDiscord> <Sense> well by default winecfg is on win 10
[18:06:20] <PMunch> @auxym, haha it's not quite that bad
[18:07:34] <FromDiscord> <Sense> In reply to @PMunch "<@882793909246369864>, haha it's not": Btw, I checked the compiler guide and I have seen three things. ARC, ORC, and useMalloc. What these means?
[18:07:44] <FromDiscord> <Sense> Also, what's difference between these?
[18:09:22] <PMunch> Well useMalloc is just a general thing for all the garbage collectors
[18:09:45] <PMunch> It basically tells the compiler to just use malloc and the other basic memory allocation calls and not try to do anything fancy
[18:10:04] <PMunch> By default Nim will grab a chunk of memory and then handle that chunk itself
[18:10:23] <PMunch> Which leads to better performance, but it makes it harder to profile, and might not work on all platforms (e.g. an Arduino)
[18:11:01] <PMunch> ARC and ORC are memory management siblings meant to replace the current deferred reference counting algorithm
[18:11:46] <PMunch> ARC is automatic reference counting, ORC is ARC but with a cycle collector added in (by default ARC will leak cyclic data).
[18:13:01] <FromDiscord> <Sense> Hm... so it's doesn't really matter what to choose right?
[18:13:14] <PMunch> Well, it definitely matters
[18:13:23] <PMunch> But in the end they all do sort of the same thing
[18:13:28] *** Joins: shalokshalom (~quassel@2a02:1748:dd5e:7f60:b5dc:871:61:d7)
[18:13:42] <FromDiscord> <Sense> Just as I said my main aim is to have a very tiny executable
[18:14:06] <PMunch> I mean if you really want to have a tiny executable --gc:none is what you want
[18:14:26] <PMunch> But --gc:arc turns into --gc:none if you don't have any garbage collected memory
[18:14:53] <PMunch> Why are you aiming for tiny executables exactly?
[18:15:27] <PMunch> Apart from viruses and microcontrollers being very aggressive about program size doesn't really make much sense nowadays
[18:15:40] <FromDiscord> <Sense> When I was doing some programming on Rust and Golang they were both producing pretty large executables.
[18:15:44] <FromDiscord> <Sense> Ever heard of demoscene?
[18:16:15] <PMunch> Oh right, well Nim should by default be quite a bit smaller than either of those
[18:16:40] <PMunch> demoscene, that's the keygen music/cool visualisation thingies right?
[18:16:47] <FromDiscord> <Sense> In reply to @PMunch "demoscene, that's the keygen": Das right
[18:17:06] <FromDiscord> <Sense> I think that Nim will be the best choice for this kind of stuff
[18:17:16] <PMunch> Should certainly be a good fit
[18:19:06] <FromDiscord> <Sense> In reply to @PMunch "Should certainly be a": It will not pain in the ass to write, and will not produce large executables.
[18:24:02] <FromDiscord> <fbpyr> is there a good place to read up on using c# .net dll in from nim?
[18:24:07] <PMunch> I guess that's why Nim is so popular with virus creators. Easy to work with, tiny standalone binaries
[18:24:51] <PMunch> @fbpyr, this might be a good start: https://forum.nim-lang.org/t/7265
[18:26:00] <FromDiscord> <fbpyr> looks very good - thank you so much! 🙂
[18:26:07] <PMunch> Oh well, I've gotta go
[18:26:09] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: Leaving)
[18:59:00] <FromDiscord> <mratsim> In reply to @PMunch "Well useMalloc is just": useMalloc is only available for arc/orc iirc
[18:59:23] <FromDiscord> <mratsim> I opened a feature request a year ago or so to have it on the classic GC
[18:59:55] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (Ping timeout: 256 seconds)
[19:01:58] *** Joins: Guest71 (~Guest71@63-232-95-4.dia.static.qwest.net)
[19:08:28] <FromDiscord> <dom96> In reply to @Sense "Ever heard of demoscene?": I love the Demoscene, plz make some Nim demos 😄
[19:12:53] <FromDiscord> <0ffh> In reply to @Sense "Ever heard of demoscene?": As a demo only has limited time to allocate garbage you might get away with no GC. But then you should test what the minimum free memory requirement is and make sure it's below free memory on the presentation machine.
[19:19:34] <FromDiscord> <Sense> In reply to @dom96 "I love the Demoscene,": Same, but I dumbass in terms of graphics xD
[19:21:42] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[19:22:30] <FromDiscord> <Waldecir Santos> Can someone help me with generics I'm doing this https://play.nim-lang.org, but for some reason the add inside `solve` is expecting string 🤔
[19:37:29] *** Quits: Guest71 (~Guest71@63-232-95-4.dia.static.qwest.net) (Quit: Client closed)
[19:42:58] *** Quits: shalokshalom (~quassel@2a02:1748:dd5e:7f60:b5dc:871:61:d7) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:58:43] <FromDiscord> <ynfle> In reply to @Waldecir Santos "Can someone help me": The link doesn't have code
[19:58:57] <FromDiscord> <Waldecir Santos> Sorry https://play.nim-lang.org/#ix=3R5M
[19:59:36] <FromDiscord> <ynfle> I needs to be var
[20:01:14] <FromDiscord> <Phil> In reply to @Elegantbeef "<@180601887916163073>\: there are multiple": I'm starting to believe that templates might actually be a better call for making essentially entirely generic modules, as long as your parameters are very limited. ↵What were the limitations you ran into while using templates, since you noted you played around with that approach
[20:01:37] <FromDiscord> <Waldecir Santos> In reply to @ynfle "I needs to be": what is `I`. ? can you show me ?
[20:07:37] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:22:38] <FromDiscord> <ynfle> it
[20:23:06] <FromDiscord> <ynfle> It can't be generic, because you are adding an int to a seq that may not be of int
[20:24:44] <FromDiscord> <ynfle> In reply to @Waldecir Santos "what is `I`. ?": https://play.nim-lang.org/#ix=3R69
[20:27:34] <FromDiscord> <Waldecir Santos> Oh my example was also wrong it needs to be `obj.list.add` and not `obj.add` too, https://play.nim-lang.org/#ix=t%20wr without var, not sure if this is right tho
[20:29:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[20:30:00] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:31:15] <FromDiscord> <ynfle> In reply to @Waldecir Santos "Oh my example was": I'm pretty sure that's not the link you intended
[20:31:24] <FromDiscord> <ynfle> But yes, you don't need var because it's a ref object
[20:31:37] <FromDiscord> <Waldecir Santos> generated it again https://play.nim-lang.org/#ix=3xc6
[20:31:40] <FromDiscord> <ynfle> I personally would avoid something like that and enable strictFuncs
[20:33:14] <FromDiscord> <Waldecir Santos> Got it for that I just add this `{.experimental: "strictFuncs".}` to the top of the file, right ?
[20:33:55] <FromDiscord> <ynfle> Ya and use a func instead of a proc. I'm sure many would be ok with that, and I'm definitely not an expert programmer
[20:35:51] <FromDiscord> <Waldecir Santos> Got it, I did the example to show the same issue I'm having with my code, but the still failing on my code, not sure how to create a small reproducible project
[20:36:15] <FromDiscord> <ynfle> In reply to @Waldecir Santos "Got it, I did": Is the code online?
[20:36:33] <FromDiscord> <Waldecir Santos> nope
[20:36:50] <FromDiscord> <Waldecir Santos> let me see if I can share one file
[20:39:59] <FromDiscord> <ynfle> What is the error?
[20:40:10] <FromDiscord> <Waldecir Santos> https://play.nim-lang.org/#ix=3R6j
[20:40:22] <FromDiscord> <Waldecir Santos> sent a code paste, see https://play.nim-lang.org/#ix=3R6k
[20:42:00] <FromDiscord> <Waldecir Santos> I'm using this project to also learn nim so pardon any dumb mistake 😄
[20:42:05] <FromDiscord> <ynfle> It's not var
[20:48:59] <FromDiscord> <Waldecir Santos> I'm not sure how exactly convert this to use `var` could you show me ?
[20:55:19] <FromDiscord> <ynfle> In reply to @Waldecir Santos "I'm not sure how": I can't see you code
[20:55:35] <FromDiscord> <Waldecir Santos> https://play.nim-lang.org/#ix=3R6j this ?
[20:58:20] <FromDiscord> <ynfle> sent a code paste, see https://play.nim-lang.org/#ix=3R6p
[20:58:21] <FromDiscord> <ynfle> See the 2 above changes
[21:00:36] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:01:05] <FromDiscord> <Waldecir Santos> Oh it worked, thank you, what was the culprit to you based on the error message ?
[21:03:10] <FromDiscord> <ynfle> `but expression 'queryset.result_cache' is immutable, not 'var'`
[21:03:40] <FromDiscord> <ynfle> `.add` modifies the seq. Seqs can't be modified if that aren't var
[21:07:13] <FromDiscord> <Waldecir Santos> queryset being var is enough to make `result_cache`  mutable ?
[21:22:10] <FromDiscord> <auxym> the default `result` is always var, so `result.result_cache` is mutable
[21:28:11] <FromDiscord> <ynfle> In reply to @auxym "the default `result` is": That's not what we are talking about
[21:28:21] <FromDiscord> <ynfle> In reply to @Waldecir Santos "queryset being var is": Yes. The whole object is now mutable
[21:29:32] <FromDiscord> <auxym> oh, I ctrl-f'd in that playground link for `result_cache`, and the first one that came up is `result.result_cache`
[21:33:03] *** Quits: ehmry (~quassel@2a03:3b40:fe:ab::1) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:34:05] *** Joins: ehmry (~quassel@2a03:3b40:fe:ab::1)
[21:40:20] <FromDiscord> <Waldecir Santos> Thank you guys I'm back on track !
[21:40:27] <FromDiscord> <ynfle> 👍
[21:45:02] <FromDiscord> <Sense> wtf https://media.discordapp.net/attachments/371759389889003532/948282231636525136/unknown.png
[21:45:21] <FromDiscord> <Sense> i compiled the executable as cpp one and have this
[21:48:27] <FromDiscord> <Sense> solution: pass `--passl="-static-libgcc -static-libstdc++ -flto"`
[21:56:28] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[22:00:58] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95)
[22:07:30] <FromDiscord> <ynfle> Interesting
[22:33:00] <FromDiscord> <Sense> just fucking great... https://media.discordapp.net/attachments/371759389889003532/948294302071660564/unknown.png
[22:33:37] *** Quits: kayabaNerve_ (~kayabaNer@user/kayabanerve) (Ping timeout: 240 seconds)
[22:36:04] <FromDiscord> <ynfle> Compile without -d:release or dange
[22:42:35] <FromDiscord> <Sense> In reply to @ynfle "Compile without -d:release or": ok
[22:43:44] <NimEventer> New thread by Dlesnoff: Factorial computation in Nim, see https://forum.nim-lang.org/t/8967
[22:49:06] <FromDiscord> <Sense> hm... thanks it seems to be issues with regex library
[22:49:08] <FromDiscord> <Sense> ffs
[23:10:29] <FromDiscord> <Waldecir Santos> Is it possible to make a property of a object be iterable through the object like in here ?
[23:10:35] <FromDiscord> <Waldecir Santos> sent a code paste, see https://play.nim-lang.org/#ix=3R6U
[23:10:48] <FromDiscord> <Waldecir Santos> (edit) "https://play.nim-lang.org/#ix=3R6U" => "https://play.nim-lang.org/#ix=3R6V"
[23:10:53] <FromDiscord> <Waldecir Santos> (edit) 
[23:11:23] <FromDiscord> <Sense> ??? https://media.discordapp.net/attachments/371759389889003532/948303959368544306/unknown.png
[23:11:39] <FromDiscord> <ynfle> sent a code paste, see https://play.nim-lang.org/#ix=3R6W
[23:11:54] <FromDiscord> <Waldecir Santos> so the for loop calls items internally, right ?
[23:12:14] <FromDiscord> <ynfle> In reply to @Waldecir Santos "so the for loop": Yup
[23:12:17] <FromDiscord> <Waldecir Santos> Ty @ynfle I'll try out
[23:12:26] <FromDiscord> <ynfle> and pairs if there are two variables
[23:14:00] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:e4e8:d997:3422:7c95) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:29:11] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[23:29:33] *** Quits: madprops (hj8oijo@user/madprops) (Ping timeout: 250 seconds)
[23:34:12] *** Joins: madprops (hj8oijo@2600:3c01::f03c:91ff:fe02:60d8)
[23:34:12] *** Quits: madprops (hj8oijo@2600:3c01::f03c:91ff:fe02:60d8) (Changing host)
[23:34:12] *** Joins: madprops (hj8oijo@user/madprops)
[23:34:22] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[23:39:06] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[23:40:01] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[23:41:06] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[23:42:55] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[23:50:06] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Quit: Ping timeout (120 seconds))
[23:50:25] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[23:52:32] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[23:52:52] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:57:06] <FromDiscord> <b4mbus> What is the nim way of defining an abstract (interface) type, that cannot be instantiated in any way, but it can be referenced in function parameters and derived from so I have some kind of virtual functions?
