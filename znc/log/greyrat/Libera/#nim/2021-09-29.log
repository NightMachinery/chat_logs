[00:00:08] <Guest55> Thanks all
[00:00:34] <nrds> <06Prestige99> !eval var i = 0; i.inc; echo i
[00:00:38] <NimBot> 1
[00:00:38] <nrds> <12R2D299> 1
[00:00:39] <nrds> <06Prestige99> or this ^
[00:00:55] <nrds> <06Prestige99> or `inc i` however you want
[00:01:51] <FromDiscord> <Yardanico> @Guest55 it's encouraged to add space both before and after the +
[00:16:18] <FromDiscord> <haxscramper> Forgot I need .incompleteStruct. annotation
[00:30:29] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[00:46:19] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[00:52:57] <NimEventer> New thread by Alexeypetrushin: Can't link C library, see https://forum.nim-lang.org/t/8467
[01:08:45] <Guest55> Is it possible to return the void for the nim's proc?
[01:16:16] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:17:01] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[01:19:14] *** Gustavo6046_ is now known as Gustavo6046
[01:26:48] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Quit: Connection closed)
[01:35:28] <FromDiscord> <Elegantbeef> What do you mean "the void"
[01:42:37] <PMunch> You know, the vast emptiness
[01:43:48] <PMunch> The emptiness that envelops the universe, the darkness that permeates everything
[01:43:58] <PMunch> Not sure if that's a type in Nim..
[01:44:19] <PMunch> But Guest55 if you want to just not return something simply omit the return type
[01:44:43] <PMunch> Or I think you can have the return type be `void` as well, but not 100% sure
[01:45:04] <FromDiscord> <Elegantbeef> No return type == void
[01:45:08] <PMunch> I mean, look at that ease: https://forum.nim-lang.org/t/8467
[01:45:08] <FromDiscord> <Elegantbeef> Hello pmunch
[01:45:12] <PMunch> Hello
[01:45:14] <PMunch> What's up?
[01:45:32] <FromDiscord> <Elegantbeef> Fuck all
[01:45:39] <PMunch> Huh?
[01:45:45] <FromDiscord> <Elegantbeef> More bug fixes i guess
[01:45:58] <FromDiscord> <Elegantbeef> Fuck all == nothing
[01:45:58] <PMunch> I'm not following :P
[01:46:03] <PMunch> Ah :P
[01:46:13] <PMunch> I thought you where mad at everything there for a second
[01:46:27] <nrds> <11sorcerer99> im mad at everything
[01:46:28] <FromDiscord> <Elegantbeef> Lol
[01:46:29] <nrds> <11sorcerer99> ACTION throws stuff
[01:46:43] <FromDiscord> <Elegantbeef> You're a sorcerer so be less sterotypical
[01:47:00] <nrds> <11sorcerer99> ACTION casts a spell on elegantbeef
[01:47:12] * PMunch puts on his robe and wizard hat
[01:47:18] <FromDiscord> <Elegantbeef> Let me guess i'm even more untolerable
[01:47:19] <nrds> <11sorcerer99> LOL
[01:47:30] <nrds> <11sorcerer99> im only joking :)
[01:47:34] <nrds> <11sorcerer99> im a jokester
[01:47:53] <FromDiscord> <Elegantbeef> Oh yea i was totally serious
[01:48:03] <PMunch> (do people still get bash.org quotes? Or are those too old?)
[01:48:05] <FromDiscord> <Elegantbeef> Are you new here or just a lurker?
[01:48:23] <nrds> <11sorcerer99> im a professional lurker, i have a degree for it
[01:48:28] <FromDiscord> <Elegantbeef> I know i wouldnt pmunch
[01:48:38] <nrds> <11sorcerer99> pmunch, i havent seen a bash.org quotes bot in awhile
[01:48:38] <FromDiscord> <Elegantbeef> Either way hello sorcerer
[01:48:47] <nrds> <11sorcerer99> howdy elegantbeef :)
[01:49:07] <FromDiscord> <Elegantbeef> Anyone got some fun problems to solve?!
[01:49:14] <PMunch> @ElegantBeef: http://bash.org/?top http://bash.org/?top2 <- Some good ol' IRC memes
[01:49:18] <FromDiscord> <Elegantbeef> I dont want to look at handleGenericInvocation for a bit
[01:49:33] <nrds> <11sorcerer99> i dont know nim, im just a good friend and person... i joined for prestige and i randomly watch here to see if i can understand anything... one my PCs runs nimdow
[01:49:57] <FromDiscord> <Elegantbeef> Well time to learn Nim!
[01:50:11] <nrds> <11sorcerer99> lol maybe if i wasnt so tired from my job
[01:50:13] <PMunch> Well, I need to take a set of update regions and combine them to one big region but not if some of the regions are really small
[01:50:22] <nrds> <11sorcerer99> i sleep most of the time and when im not sleeping, i run this irc network on this side
[01:50:24] <FromDiscord> <Elegantbeef> How much could i charge to tutor people to write Nim... probably not much
[01:50:42] <PMunch> I've been thinking about the same thing :P
[01:50:55] <PMunch> Maybe Status newhires would be interested
[01:50:56] <FromDiscord> <Elegantbeef> Sleep or tutoring 😛
[01:52:03] <PMunch> Hmm, I really should go to bed
[01:52:18] <FromDiscord> <Elegantbeef> I have thought about streaming me doing compiler bug fixes but it's just me slightly modifying code until the tests pass
[01:52:32] <FromDiscord> <Elegantbeef> Nah you need all the daylight whilst you still have it!
[01:52:45] <FromDiscord> <Elegantbeef> Stay up all the hours and sleep when there is no sun!
[01:53:55] <nrds> <11sorcerer99> no pmunch
[01:53:59] <nrds> <11sorcerer99> you cant 
[01:54:11] <nrds> <11sorcerer99> theres zombies in the channel calling your name lol
[01:54:19] <FromDiscord> <Elegantbeef> Also who the fuck openly admits to being friends with prestige
[01:54:30] <nrds> <11sorcerer99> i do
[01:54:35] <FromDiscord> <Elegantbeef> Sorry sorcerer sucks to be use!
[01:54:35] <FromDiscord> <Elegantbeef> you\ even
[01:54:37] <PMunch> Daylight?
[01:54:38] <nrds> <11sorcerer99> i openly admit hes one of my besties
[01:54:43] <PMunch> It's pitch dark out right now :P
[01:54:43] <nrds> <11sorcerer99> nope it doesnt
[01:55:05] <PMunch> > Also who the fuck openly admits to being friends with prestige
[01:55:16] <PMunch> And people wonder why this channel is sometimes seen as hostile :P
[01:55:22] <nrds> <11sorcerer99> lol
[01:55:27] <nrds> <11sorcerer99> yea im not sure if that was a joke or serious
[01:55:34] <nrds> <11sorcerer99> so i responded nicely, instead of my normal rude way
[01:55:34] <PMunch> Definitely a joke
[01:55:37] <nrds> <11sorcerer99> :P
[01:55:42] <FromDiscord> <Elegantbeef> Hey if you cant take my light hearted banter you cannot take my light hearted banter
[01:55:56] <nrds> <11sorcerer99> lol just making sure, i dont know anyone around here ;P
[01:56:11] <PMunch> Oh yeah, I wasn't saying anything against it. But imagine if someone joined and just saw that message :P
[01:56:29] <PMunch> Like sorcerer apparently *shrugs*
[01:56:31] <FromDiscord> <Elegantbeef> You could say that about 99% of my messages
[01:56:35] <nrds> <11sorcerer99> lol
[01:56:41] <FromDiscord> <Elegantbeef> the answer is always "This guy is a fuckwit, let's move one"
[01:56:55] <PMunch> Wait, are you temping for disruptek?
[01:57:20] <FromDiscord> <Elegantbeef> Temping? I acted this way when he was here
[01:57:27] <PMunch> Haha, fair point :P
[01:57:41] <PMunch> Anyways, I've got work in the morning..
[01:57:47] <FromDiscord> <Elegantbeef> Well buh bye
[01:57:55] <nrds> <11sorcerer99> adios amigos
[01:58:07] <FromDiscord> <Elegantbeef> Oh i have to leave?!
[01:58:26] <nrds> <11sorcerer99> amigo? lol
[01:58:35] <PMunch> @ElegantBeef, if you want another challenge have a look at the Futhark TODO ;)
[01:58:47] <PMunch> There's one there that might require some compiler info
[01:58:56] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[01:59:10] <FromDiscord> <Elegantbeef> Ugh if you insist
[02:03:16] *** Quits: max22- (~maxime@2a01cb0883359800a9478b4b8829df15.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:05:54] <hexology> hello, newbie here. what
[02:06:06] <FromDiscord> <Elegantbeef> Indeed what
[02:06:09] <hexology> what's the best  way to accumulate values in an array? i'm using collect() from the 'sugar' module
[02:06:11] <hexology> lol :D
[02:06:50] <FromDiscord> <Elegantbeef> Accumulate means what percisely?
[02:07:43] <FromDiscord> <Elegantbeef> I know from the implication but much prefer to hear exactly what people are after
[02:09:56] <hexology> i have a `while true` loop, getting arguments from OptParser() that meet certain criteria. i want to append each one to an array, python-style, to the extent that's possible
[02:10:59] <FromDiscord> <Elegantbeef> Collect may be the best method, also there are iterators for OptParsers https://nim-lang.org/docs/parseopt.html#15
[02:11:21] <hexology> ah, that's nicer
[02:11:23] <hexology> thank you
[02:14:56] *** Quits: Guest55 (~Guest55@99-6-76-144.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[02:21:56] *** Joins: vicfred (~vicfred@user/vicfred)
[02:24:08] <hexology> hm, collect() doesn't seem to like it when i don't "return" something at every iteration. it says my loop "has no type (or is ambiguous)". so maybe i need to "manually" append in this case
[02:27:57] <FromDiscord> <Elegantbeef> Are you wanting to stop the iteration or stop the function?
[02:28:50] <FromDiscord> <Elegantbeef> Code would help
[02:30:15] <hexology> like this: https://bpa.st/XOEA
[02:31:18] <hexology> it makes sense why this would be the case - i assume the macro does something like "look for the last expression and use that as the value to collect", so it's sensible that it wouldn't know how to handle this type of code
[02:31:43] <FromDiscord> <Elegantbeef> Well it's more of a case of that's an invalid expression
[02:31:54] <FromDiscord> <Elegantbeef> Actually does `discard` work there?
[02:32:02] <FromDiscord> <Elegantbeef> I doubt the macro handles it
[02:32:33] <FromDiscord> <Elegantbeef> I'd say make this a function in this case
[02:34:33] <nrds> <06Prestige99> Lol @Elegantbeef & PMunch
[02:35:24] <hexology> interesting https://nim-lang.org/docs/tut1.html#procedures-discard-statement
[02:35:58] <hexology> in this case the logic has several branches, so i'd probably have to `discard` each branch
[02:36:03] <hexology> i'll post the actual code in a moment
[02:36:15] <FromDiscord> <Elegantbeef> Like i said probably best to make a proc
[02:37:57] <FromDiscord> <Professor Actual Factual> sent a code paste, see https://play.nim-lang.org/#ix=3AgV
[02:39:05] <hexology> (this isn't #python, but i feel obligated to point out that you probably want AsyncIterable and not AsyncIterator in that type signature)
[02:39:50] <FromDiscord> <Professor Actual Factual> There's a python channel in this discord server?
[02:39:56] <hexology> oh sorry, i'm on IRC
[02:40:18] <FromDiscord> <Elegantbeef> There is not a python channel \:D
[02:40:20] <hexology> @Elegantbeef that's why i want to post my code anyway, this is turning into a bit of a long block of code and i'd be interested to see what an experienced nimmer would write instead
[02:42:44] <FromDiscord> <Elegantbeef> Hopefully someone that uses async can pop in prof, i've not so cannot say much
[02:43:09] <FromDiscord> <Elegantbeef> Well when you post it i'll happily show you what i'd do
[02:51:08] <hexology> @Elegantbeef https://paste.pythondiscord.com/ijosufucow.nim it's more or less how i'd do it in a dynamic language, which is nice, but that's kind of a big long block of cli parsing. maybe there's some nice 3rd party library that supports a more declarative config?
[02:51:19] <hexology> s/dynamic/dynamically typed/
[02:52:44] <hexology> this also only handles `--key=val` options and i guess i'd have to parse `--key val` myself, which is going to be even more boring loopy/state-tracking stuff that i don't want to mess with
[03:00:56] <FromDiscord> <deech> Macro question: if I have a macro `macro m (t:typedesc) ..` inside the macro `t` is  a `NimNode` not a `typedesc` how do I recover that so I can eg. call `default t` inside the macro?
[03:08:52] <FromDiscord> <impbox [ftsf]> Can you just make the macro call default(t)?
[03:09:27] <FromDiscord> <impbox [ftsf]> `newCall("default", t)` or something, sorry not at my computer atm
[03:11:23] <FromDiscord> <deech> Right but how would I use that result of that in my macro? I'm not looking to generate that code, I want to call `(default a).fieldPairs` at compile time.
[03:11:34] <FromDiscord> <deech> (edit) "a).fieldPairs`" => "t).fieldPairs`"
[03:15:34] <FromDiscord> <impbox [ftsf]> newCall("fieldPairs", newCall("default", t))
[03:17:35] <FromDiscord> <Elegantbeef> Well i just got back and yea procedures save lives hexology \:p
[03:23:36] <FromDiscord> <impbox [ftsf]> @deech maybe you can just use a compiletime proc
[03:25:07] <FromDiscord> <deech> Thanks, but the problem is how do I call that from a macro? The macro changes the type of everything passed to it to `NimNode` so if I have a `proc p(t:typedesc) ...` you still can't call that from a macro.
[03:25:37] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:27:02] <FromDiscord> <impbox [ftsf]> can you share what you're working on?
[03:28:57] <FromDiscord> <Elegantbeef> hexology this is better but still dont like those tables https://play.nim-lang.org/#ix=3Ah2
[03:29:03] <FromDiscord> <Elegantbeef> Ok now deech's issue \:D
[03:29:32] <FromDiscord> <impbox [ftsf]> beef i'm sure you'll be able to help more than me
[03:29:41] <hexology> i've been using mostly python and lua, tables everywhere :)
[03:30:12] <FromDiscord> <Elegantbeef> Yea i mean they work fine but nim has string casestatements which map tables
[03:30:19] <FromDiscord> <Elegantbeef> Which gives you more control
[03:30:58] <hexology> so instead of an `inputConverters` table, you'd just have a proc that raises an exception or something?
[03:31:03] <hexology> or returns nil
[03:31:20] <FromDiscord> <Elegantbeef> Yea
[03:33:55] <hexology> i tend to try to avoid calling a function like quit() inside anything but main() -- so maybe i'd raise various exceptions and then handle them in main(). that's a lot like how i write my python programs nowadays
[03:34:33] <hexology> i would also be interested in any 3rd-party libraries for cli arg parsing, with a higher-level and/or more-declarative interface
[03:35:02] <FromDiscord> <Elegantbeef> There's https://github.com/c-blake/cligen
[03:35:05] <nrds> <12R2D299> 4GitHub: 7"Nim library to infer/generate command-line-interfaces / option / argument parsing; Docs At"
[03:35:09] <FromDiscord> <Elegantbeef> It's one of the more popular ones
[03:36:01] <FromDiscord> <Elegantbeef> Yea deech i think the way yo do it is to emit a new macro which has the typedesc
[03:37:33] <FromDiscord> <deech> @ElegantBeef Could you elaborate?
[03:38:43] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3Ah8
[03:39:18] <FromDiscord> <Elegantbeef> If you have an example i could see what makes more sense
[03:39:31] <FromDiscord> <deech> Oh wow.
[03:41:40] <FromDiscord> <deech> So there's no way to "recover" that typedesc directly?
[03:42:12] <FromDiscord> <Elegantbeef> Well it's decayed to a Nimnode so requires the compiler to return the type
[03:43:22] <FromDiscord> <Elegantbeef> For other types you annotate it with `static` but that doesnt work for typedesc is seems as it's a complicated generic
[03:57:45] <FromDiscord> <Professor Actual Factual> sent a code paste, see https://play.nim-lang.org/#ix=3Ahf
[03:58:35] <FromDiscord> <Elegantbeef> Wish i could tell you
[04:01:53] <hexology> should i be using ref types "by default"? e.g. for little scripts like mine that just do some quick computaions and then quit
[04:07:35] <FromDiscord> <Elegantbeef> You should use ref when you need reference semantics
[04:07:45] <FromDiscord> <Elegantbeef> People have weird views of ref vs value
[04:07:46] <FromDiscord> <Professor Actual Factual> sent a long message, see http://ix.io/3Ahj
[04:08:15] <FromDiscord> <Elegantbeef> Here are reasons to consider them https://forum.nim-lang.org/t/8426#54529
[04:10:35] <hexology> ah, interesting. nim has move semantics
[04:11:26] <hexology> or, will have them?
[04:11:33] <FromDiscord> <Elegantbeef> It has them
[04:11:38] <FromDiscord> <Elegantbeef> Though they make more sense with arc/orc
[04:11:42] <FromDiscord> <impbox [ftsf]> @ElegantBeef really nice writeup! should include that in the manual =)
[04:13:16] <FromDiscord> <Elegantbeef> Well i should fill in the `any other traits i missed` and make it more authorative
[04:13:42] <FromDiscord> <Elegantbeef> But yea a concise reason to consider ref vs non would be nice
[04:14:27] <hexology> seems like ref-less is a good default. immutability is good
[04:14:36] <hexology> what's this stuff i'm seeing about arc/orc and multiple gc versions?
[04:14:55] <hexology> i found this... will read https://nim-lang.org/blog/2020/10/15/introduction-to-arc-orc-in-nim.html
[04:16:36] <FromDiscord> <Elegantbeef> Arc/orc are new memory management methods and in araqs words "the only way to manage memory" 😛
[04:19:26] <FromDiscord> <cabboose> But I have Alzheimer’s
[04:20:52] *** Joins: Guest18 (~Guest18@99-6-76-144.lightspeed.rcsntx.sbcglobal.net)
[04:24:03] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:24:19] <FromDiscord> <Professor Actual Factual> ARC is more experimental then ORC. I've tried ORC a while back and it was amazing. Anywhere between 1-3x on memory heavy workloads
[04:24:37] <FromDiscord> <Professor Actual Factual> (edit) "is" => "and ORC are" | "then ORC." => "than traditional GC."
[04:25:03] <FromDiscord> <Professor Actual Factual> (edit) "ARC and ORC are more experimental than traditional GC. I've tried ORC a while back and it was amazing. Anywhere between 1-3x ... on" 03added "performance"
[04:25:24] <FromDiscord> <Elegantbeef> Yea they work lovely + enable cooler features
[04:26:08] <FromDiscord> <Elegantbeef> Now have copy, sink, destroy, and trace hooks
[04:42:30] <FromDiscord> <cabboose> Yeah I have definitely destroyed my memory
[05:02:31] <FromDiscord> <Rika> In reply to @Professor Actual Factual "Probably opinionated question. I've": Second scenario would still fit object
[05:08:16] <FromDiscord> <Professor Actual Factual> In reply to @Rika "Second scenario would still": Can you further elaborate? I've done some naive benchmarks back in the day with simulations of 1M+ objects vs ref objects. The ref objects gave me 2x performance. Am I missing something?
[05:09:07] <FromDiscord> <Professor Actual Factual> (edit) "objects." => "objects with lots of many-to-many relationships."
[05:14:21] <FromDiscord> <impbox [ftsf]> slow copies?
[05:14:42] <FromDiscord> <impbox [ftsf]> if you have large objects
[05:14:52] <FromDiscord> <impbox [ftsf]> and you're passing by value
[05:15:39] <FromDiscord> <Professor Actual Factual> Ya I think that was the case, I was dealing with a history array which was an array of objects. When i changed it to ref objects I got the speed up. The objects were pretty large (lots of string fields too).
[05:16:03] <FromDiscord> <Professor Actual Factual> (edit) "objects." => "objects that changed per iteration/cycle."
[05:42:06] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:45:51] <hexology> https://play.nim-lang.org/#ix=3Ahy is there a better way to do this? the goal is to have some kind of type-level guarantee about what kinds of exceptions are used within the application.
[05:46:23] <hexology> could you generate all these overloaded proc definitions with a macro?
[05:46:28] <hexology> or is there just some other way to do this
[05:58:32] <FromDiscord> <Elegantbeef> You could of course, not that it's overly suggested
[05:59:18] <hexology> this one checks at runtime, but involves this other ugly exception type and the risk of the user seeing it: https://play.nim-lang.org/#ix=3AhC
[05:59:47] <FromDiscord> <Elegantbeef> You do know defects are special right?
[06:00:07] <hexology> i was under the impression that they were "things that shouldn't ever happen"
[06:00:12] <FromDiscord> <Elegantbeef> They're not to be caught and if they're raised the program should be ended
[06:00:23] <FromDiscord> <Elegantbeef> Yes they are, just making sure you knew that
[06:00:45] <hexology> yeah, in this case it means "the programmer tried to use an unsupported exception, go file a bug report"
[06:01:18] <hexology> and this one which just has an assertion, equally nasty imo: https://play.nim-lang.org/#ix=3AhE
[06:01:19] <FromDiscord> <Elegantbeef> You might be able just do https://play.nim-lang.org/#ix=3AhF
[06:02:05] <FromDiscord> <Elegantbeef> Oh sorry those second two should be `ref object of CliUsageError`
[06:04:14] <NimEventer> New Nimble package! selenimum - WebDriver for Selenium(selenium-hub)., see https://github.com/myamyu/selenimum
[06:04:17] <nrds> <12R2D299> 4GitHub: 7"WebDriver for Selenium(selenium-hub) by Nim."
[06:04:19] <hexology> oh dear, did the playground go down?
[06:04:34] <hexology> @Elegantbeef i could also make them all inherit from some base type, right?
[06:05:06] <FromDiscord> <Elegantbeef> Yea that's what that link was https://hatebin.com/nsieohqruk
[06:05:48] <hexology> and why are the `ref`s important here? i saw in your post that you said tagged unions were the equivalent for non-ref types. got a link to read about those in nim? i couldn't find it in the manual
[06:06:01] <hexology> the ref just allows you to inherit?
[06:06:25] <FromDiscord> <Elegantbeef> Well it's no different since you exceptions are raised references
[06:06:35] <FromDiscord> <Elegantbeef> But yea ref is typically used for normal OOp
[06:06:49] <FromDiscord> <Elegantbeef> In Nim tagged unions are called object variants https://nim-lang.org/docs/manual.html#types-object-variants
[06:07:04] <FromDiscord> <Elegantbeef> I dumbly move between speech since i talk a bit to people that write other system langauges
[06:08:36] <hexology> ah, so you can't really make a "tagged union" of Exceptions then?
[06:09:01] <hexology> at least, it wouldn't be any more type-safe than the if/else, it just allows you to use `case`
[06:09:37] <FromDiscord> <Elegantbeef> Indeed
[06:10:12] <FromDiscord> <Elegantbeef> The benefit is mostly not having a pointer, you still of course need to delimit logic for specific casees
[06:15:39] <FromDiscord> <Elegantbeef> Doesnt work for user extended types though
[06:26:46] <hexology> makes sense
[07:03:50] *** Quits: clemens3 (~clemens@225.40.150.83.ftth.as8758.net) (Ping timeout: 246 seconds)
[07:04:22] <NimEventer> New thread by Rb3: Advice needed on exporting symbols from DLL, see https://forum.nim-lang.org/t/8468
[07:05:42] *** Joins: clemens3 (~clemens@225.40.150.83.ftth.as8758.net)
[07:09:43] <hexology> https://bpa.st/2D5A what am i doing wrong here? i was following this: https://nim-lang.org/docs/tut2.html#exceptions-raise-statement
[07:10:56] <FromDiscord> <Elegantbeef> What's `InvalidInputFormatError` type definition?
[07:11:34] <FromDiscord> <Elegantbeef> Oh it might be the strformat try `"Unknown input format: " & $key`
[07:16:13] <hexology> wasn't the strformat. here it is again w/ the types: https://bpa.st/RXZQ
[07:16:38] <hexology> i was attempting to follow the example you gave me
[07:18:51] <FromDiscord> <Elegantbeef> Seems it's the ref, i havent used exceptions much so my bad
[07:20:03] <hexology> aha, removing that fixed it
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:08:22] <FromDiscord> <cabboose> Beef doesn’t believe in exceptions
[08:08:34] <FromDiscord> <cabboose> You can’t have errors if you don’t code them in
[08:08:36] <FromDiscord> <Elegantbeef> Indeed
[08:08:55] <FromDiscord> <Elegantbeef> Alternatively my software never gets to the point it needs to worry about errors
[08:09:20] <FromDiscord> <cabboose> it’s hard to get past writing the file name sometimes yeah
[08:09:32] <FromDiscord> <Elegantbeef> Fuck you get the file name, i dont even open up my text editor
[08:09:57] <FromDiscord> <cabboose> At least you have a computer
[08:10:10] <FromDiscord> <cabboose> Pen and paper coding sucks
[08:10:10] <FromDiscord> <Elegantbeef> My text editor is a literal notebook
[08:10:53] <FromDiscord> <cabboose> The paper I use is made from the loose hair on my head
[08:15:32] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:44:55] <FromDiscord> <cabboose> Man I can’t even sign up to the forum
[08:44:57] <FromDiscord> <cabboose> what is this
[08:45:42] <FromDiscord> <cabboose> How am I supposed to advertise my steamin turd library if I can’t get to the forum
[09:03:25] <FromDiscord> <NullCode> lmao
[09:03:29] <FromDiscord> <NullCode> whats this library
[09:08:08] <FromDiscord> <cabboose> well now hold on
[09:08:15] <FromDiscord> <cabboose> are you going to do some malware trickery with it
[09:08:32] <FromDiscord> <cabboose> 🤣
[09:09:03] <FromDiscord> <Elegantbeef> Remember they're not a malware author they just have malware on the github
[09:09:44] <FromDiscord> <NullCode> he fyi
[09:09:57] <FromDiscord> <NullCode> In reply to @cabboose "are you going to": idek what sort of lib it is
[09:10:49] <FromDiscord> <NullCode> In reply to @Elegantbeef "Remember they're not a": yeah someone else made them
[09:10:54] <FromDiscord> <NullCode> and I'm storing them on github
[09:11:13] <FromDiscord> <Elegantbeef> No one is going to believe that
[09:11:35] <FromDiscord> <NullCode> why not
[09:15:32] <FromDiscord> <cabboose> SoCiOpAtHy101
[09:15:46] <FromDiscord> <cabboose> instead of trying to resist evidence
[09:16:02] <FromDiscord> <cabboose> use a more relatable reason that is innocent of the connotation
[09:16:04] <FromDiscord> <cabboose> like
[09:16:05] <FromDiscord> <cabboose> yessir
[09:16:21] <FromDiscord> <cabboose> I am a white hat malware dev for security company bla
[09:16:22] <FromDiscord> <cabboose> I mean
[09:16:48] <FromDiscord> <cabboose> that sells better than having malware on your github and trying to say its not yours or you dont use it \>.\>
[09:17:31] <FromDiscord> <cabboose> either way its just an innocent MPMC lock & leak free queue
[09:17:55] <FromDiscord> <cabboose> https://github.com/nim-works/loony
[09:17:58] <nrds> <12R2D299> 4GitHub: 7"Experimenting to make a high throughput MPMC lock-free queue based on a paper by Giersch, Nolte et al."
[09:23:27] <FromDiscord> <NullCode> nice i didn't understand a single thing
[09:23:51] <FromDiscord> <NullCode> well i did start coding this year
[09:24:04] <FromDiscord> <NullCode> so not up-to-snuff about everything
[09:26:35] <FromDiscord> <Rika> Many “malware devs” are just script kiddies though
[09:26:44] *** Quits: Guest18 (~Guest18@99-6-76-144.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[09:28:05] <FromDiscord> <NullCode> yes
[09:28:16] <FromDiscord> <NullCode> which is why i want to make sure nobody calls me a script kiddie
[09:28:43] <FromDiscord> <impbox [ftsf]> maybe don't post your age then ;)
[09:29:00] <FromDiscord> <NullCode> a script kiddie is defined by the usage of uhh
[09:29:03] <FromDiscord> <NullCode> whats that thing called
[09:29:05] <FromDiscord> <NullCode> metasploit
[09:29:06] <FromDiscord> <NullCode> and stuff
[09:29:09] <FromDiscord> <NullCode> not by your age ;)
[09:30:09] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[09:30:49] <FromDiscord> <NullCode> even a 10 year old could be a real haxor
[09:31:23] <FromDiscord> <impbox [ftsf]> for sure, i'm joking, age has nothing to do with anything
[09:31:31] <FromDiscord> <NullCode> yes
[09:31:33] <FromDiscord> <impbox [ftsf]> though it does colour people's expectations
[09:31:51] <FromDiscord> <NullCode> meh
[09:31:57] <FromDiscord> <NullCode> my parents have 0 expectations from me
[09:32:03] <FromDiscord> <NullCode> i don't expect anybody else to have any
[09:32:10] <FromDiscord> <impbox [ftsf]> ahh i mean more in terms of getting work in the industry
[09:32:14] <FromDiscord> <impbox [ftsf]> if that is your goal
[09:32:21] <FromDiscord> <NullCode> oh
[09:32:30] <FromDiscord> <NullCode> i thought if you had good code in github
[09:32:39] <FromDiscord> <NullCode> you could get work easier?
[09:32:54] <FromDiscord> <Elegantbeef> impbox dont say experience in the industry when they have malware on the github!
[09:33:08] <FromDiscord> <NullCode> once again, he
[09:33:34] <FromDiscord> <NullCode> and yeah i know most of you are adults and stuff
[09:33:37] <FromDiscord> <impbox [ftsf]> yeah, but maybe don't lead with your age if you don't want to be considered a "script kiddy"
[09:33:47] <FromDiscord> <NullCode> but that doesn't mean i can't get to code until I'm 20 or stuff
[09:33:47] <FromDiscord> <Elegantbeef> Luckily `they` is completely gender neutral
[09:34:23] <FromDiscord> <NullCode> In reply to @impbox "yeah, but maybe don't": well if anyone wants to call me a script kiddie, thats where my github comes in
[09:34:39] <FromDiscord> <NullCode> i can show i don't use bullshit like metasploit and airgeddon
[09:34:41] <FromDiscord> <NullCode> etc et
[09:34:43] <FromDiscord> <impbox [ftsf]> i've been coding since i was a kid too, so totally agree, but sometimes it's best to keep that info hidden, let people find out later
[09:34:43] <FromDiscord> <NullCode> (edit) "et" => "etc"
[09:34:54] <FromDiscord> <impbox [ftsf]> if at all
[09:35:31] <FromDiscord> <Elegantbeef> Yea like impbox knows i'm a terrible programmer thanks to the myriad of bad PR's he's' accepted \:D
[09:35:37] <FromDiscord> <NullCode> In reply to @impbox "i've been coding since": i see good idea
[09:35:46] <FromDiscord> <impbox [ftsf]> @ElegantBeef they ;)
[09:36:02] <FromDiscord> <Elegantbeef> I'll fucking break they's legs
[09:36:34] <FromDiscord> <NullCode> LMFAO
[09:36:40] <FromDiscord> <NullCode> now i see why beef uses they
[09:37:11] <FromDiscord> <NullCode> anyway i do want to make legitimate programs
[09:37:15] <FromDiscord> <Elegantbeef> It's a gender neutral pronoun that's easy to avoid people raging about incorrect usage
[09:37:19] <FromDiscord> <NullCode> but i just have 0 ideas
[09:37:30] <FromDiscord> <NullCode> and since I've been watching danoct for YEARS
[09:37:37] <FromDiscord> <NullCode> i just thought why not make some fun stuff
[09:38:34] <FromDiscord> <NullCode> (edit) "YEARS" => "YEARS↵↵(context: dan used to review old old malware https://www.youtube.com/c/danooct1)"
[09:39:01] <FromDiscord> <NullCode> (edit) "used to review old old" => "reviews" | "https://www.youtube.com/c/danooct1)" => "from the DOS days ↵https://www.youtube.com/c/danooct1)"
[09:39:23] <FromDiscord> <NullCode> In reply to @Elegantbeef "It's a gender neutral": people who fuss about gender are plain stupid
[09:39:57] <FromDiscord> <Elegantbeef> Says the person that corrected 'they' twice
[09:40:14] <FromDiscord> <impbox [ftsf]> a bit #offtopic but using people's preferred pronouns or they is polite
[09:41:12] <FromDiscord> <Elegantbeef> Anywho there is tons of software that isnt malicious you can make, so try to not aid in the software i'd not mind to get nuked from orbit
[09:41:35] <FromDiscord> <NullCode> In reply to @Elegantbeef "*Says the person that": no i mean like "HOW DARE YOU ASSUME MY GENDER, I'M A QUEER TRANS BI 60 420"
[09:41:41] <FromDiscord> <NullCode> (edit) "60" => "69"
[09:41:49] <FromDiscord> <NullCode> i just politely told I'm a guy
[09:41:54] <FromDiscord> <NullCode> so it's alright in my books
[09:42:12] <FromDiscord> <NullCode> In reply to @Elegantbeef "Anywho there is tons": can you give some examples tho
[09:42:18] <FromDiscord> <Elegantbeef> Itch.io for instance is flooded with malware similar to what you created and it makes it harder to trust the platform/downloads from there
[09:42:36] <FromDiscord> <impbox [ftsf]> use code to solve problems you have
[09:42:45] <FromDiscord> <impbox [ftsf]> or problems other people have
[09:42:56] <FromDiscord> <impbox [ftsf]> make pretty things
[09:42:57] <FromDiscord> <Elegantbeef> No the problem cannot be "i want that guy's password"
[09:43:01] <FromDiscord> <impbox [ftsf]> make fun things
[09:43:22] <FromDiscord> <Elegantbeef> Easy for us to say impbox being game focused developers 😛
[09:43:34] <FromDiscord> <impbox [ftsf]> ehh i make all sorts of things, not just games =)
[09:43:43] <FromDiscord> <NullCode> In reply to @impbox "use code to solve": i think I've already done that
[09:43:53] <FromDiscord> <NullCode> automated basically anything possible with ahk
[09:43:58] <FromDiscord> <Elegantbeef> I said game focused 😛
[09:44:18] <FromDiscord> <Elegantbeef> I'd say the compiler isnt a game, but it's pretty much a weird version of whack a mole
[09:44:18] <FromDiscord> <NullCode> In reply to @impbox "make pretty things": argh i can't make GUIs
[09:44:27] <FromDiscord> <impbox [ftsf]> don't need guis
[09:44:34] <FromDiscord> <NullCode> thats just the one thing I'd love to do
[09:44:35] <FromDiscord> <NullCode> but can't
[09:44:36] <FromDiscord> <NullCode> GUis
[09:44:46] <FromDiscord> <NullCode> just don't fit in my head very well
[09:44:50] <FromDiscord> <NullCode> (edit) "GUis" => "GUIs"
[09:44:59] <FromDiscord> <impbox [ftsf]> dear imgui is great, i hate doing GUIs but it makes it a pleasure
[09:45:22] <FromDiscord> <impbox [ftsf]> made a cool music visualiser + trippy visual creator
[09:45:27] <FromDiscord> <Elegantbeef> Though not overly great for a proper desktop application, but for tooling works well
[09:45:43] <FromDiscord> <NullCode> whats a good one for "proper desktop applications"
[09:45:48] <FromDiscord> <NullCode> cuz thats the thing i want to do
[09:46:06] <FromDiscord> <impbox [ftsf]> win32 api
[09:46:09] <FromDiscord> <Elegantbeef> Gtk, Qml, Nigui
[09:46:33] <FromDiscord> <NullCode> In reply to @impbox "win32 api": what
[09:46:47] <FromDiscord> <NullCode> you mean creating msgboxes with vbscript? :P
[09:47:12] <FromDiscord> <Rika> Challenge: game in pure NimScript
[09:47:46] <FromDiscord> <Elegantbeef> Rika making challenges that are only difficult on a compiler without libcffi
[09:47:49] <FromDiscord> <impbox [ftsf]> yeah, don't actually use win32 api
[09:49:29] <FromDiscord> <NullCode>  https://media.discordapp.net/attachments/371759389889003532/892656807766532106/unknown.png
[09:49:36] <FromDiscord> <NullCode> oh also whats this weird font i get when running nim stuff
[09:49:39] <FromDiscord> <NullCode> can't i change it
[09:50:20] <FromDiscord> <Elegantbeef> Not a clue might just be a setting on the terminal output
[09:51:33] <FromDiscord> <cabboose> nimqml
[09:52:08] <FromDiscord> <cabboose> although I am a fan of qt shit anyway
[09:52:14] <FromDiscord> <cabboose> but their qml stuff is good
[09:52:20] <FromDiscord> <NullCode> ohhhhhhh it's the TrueType font
[09:52:48] <FromDiscord> <Elegantbeef> But cabboose i dont have qt themed so it's blindingly white 😛
[09:53:07] <FromDiscord> <NullCode> In reply to @cabboose "although I am a": only thing i like about qt is qt-designer
[09:53:35] <FromDiscord> <cabboose> you’re mad beef
[09:53:44] <FromDiscord> <cabboose> thats qt widgets
[09:53:46] <FromDiscord> <impbox [ftsf]> no they're elegant
[09:53:47] <FromDiscord> <Rika> Took you a while to realise
[09:53:51] <FromDiscord> <cabboose> you bonk
[09:54:01] <FromDiscord> <cabboose> i said qml
[09:54:09] <FromDiscord> <NullCode> In reply to @cabboose "thats qt widgets": what
[09:54:21] <FromDiscord> <NullCode> ok i see now
[09:54:22] <FromDiscord> <cabboose> qt widgets uses QtDesigner
[09:54:24] <FromDiscord> <cabboose> qml uses Designer Studio
[09:54:33] <FromDiscord> <impbox [ftsf]> is QT still c++?
[09:54:40] <FromDiscord> <cabboose> ye
[09:54:44] <FromDiscord> <impbox [ftsf]> i remember that made it a real pain to bind
[09:54:59] <FromDiscord> <cabboose> there are working bindings for qml engine
[09:55:11] <FromDiscord> <cabboose> and hax is doing qt when hcparse is up and running
[09:55:31] <FromDiscord> <cabboose> I mean the front end can all be done in qml and backend in nim pretty easily
[09:56:07] <FromDiscord> <cabboose> and qml has a good designer to back it up
[09:56:10] <FromDiscord> <cabboose> the biggest issue is just licensing
[09:56:46] <FromDiscord> <cabboose> Time to go back to the library to try cram another 10 lectures
[09:56:48] <FromDiscord> <cabboose> \~yay\~
[10:01:34] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[10:31:26] *** Joins: Vladar (~Vladar@46.162.2.53)
[10:31:36] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[10:37:40] *** Quits: NimEventer (~NimBot@static.224.140.47.78.clients.your-server.de) (Remote host closed the connection)
[10:37:48] *** Joins: NimEventer (~NimBot@static.224.140.47.78.clients.your-server.de)
[10:57:01] <NimEventer> New thread by DPixie: Errors in VM code called from Nimscript is hidden, see https://forum.nim-lang.org/t/8469
[11:09:14] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[11:52:25] *** Quits: Terry[m] (~h4n1virus@2001:470:69fc:105::f391) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Quit: Bridge terminating on SIGTERM)
[11:52:29] *** Quits: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1) (Quit: Bridge terminating on SIGTERM)
[11:55:48] <FromDiscord> <dom96> In reply to @impbox "a bit <#371759607934353448> but": this++
[11:55:59] *** Joins: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1)
[11:59:21] *** Quits: ozzz (~oz@46.49.41.80) (Ping timeout: 265 seconds)
[12:11:19] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
[12:11:30] *** Joins: Terry[m] (~h4n1virus@2001:470:69fc:105::f391)
[12:59:27] *** Joins: ozzz (~oz@46.49.41.80)
[13:47:18] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1)
[14:01:30] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:22:05] <FromDiscord> <enthus1ast> when i have a header only lib, do i have other options than ` {.emit: "#include <" & getProjectPath() / "tinyjpeg.h" & ">".}`
[14:22:19] <FromDiscord> <enthus1ast> (which does not work correctly btw)
[14:23:09] <FromDiscord> <enthus1ast> the issue then is that the c files where move to the cache location and the relative include does not find it any more
[14:23:34] <FromDiscord> <haxscramper> your other option is to properly use `header`
[14:23:44] <FromDiscord> <enthus1ast> but this can only be bound to an object
[14:23:45] <FromDiscord> <haxscramper> `header: absolute-or-relative-path`
[14:23:51] <FromDiscord> <haxscramper> no
[14:23:58] <FromDiscord> <haxscramper> this can be bound to anything
[14:24:11] <FromDiscord> <enthus1ast> but not on module scope
[14:24:18] <FromDiscord> <enthus1ast> at least it did not work for me
[14:24:30] <FromDiscord> <haxscramper> what module scope is even?
[14:24:30] <FromDiscord> <haxscramper> there are types and procs
[14:24:36] <FromDiscord> <haxscramper> you need to import what? proc?
[14:24:44] <FromDiscord> <haxscramper> then put `header:` on proc definition
[14:25:41] <FromDiscord> <enthus1ast> this i can try
[14:26:05] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3Ajd
[14:26:20] <FromDiscord> <haxscramper> you didn't mention you also need `#define`
[14:26:28] <FromDiscord> <haxscramper> and NO
[14:26:32] <FromDiscord> <haxscramper> you put header on proc
[14:26:37] <FromDiscord> <haxscramper> not on module scope
[14:26:39] <FromDiscord> <enthus1ast> yeah this is the reason i emitted include
[14:26:47] <FromDiscord> <haxscramper> you put `header` on the thing you want to import
[14:28:27] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3Ajf
[14:28:57] <FromDiscord> <haxscramper> You can put anything in `header` text, it does not have to be a file only
[14:29:10] <FromDiscord> <haxscramper> you can put any random garbage and it would be pasted in the generated headers as-si
[14:29:17] <FromDiscord> <haxscramper> `<file>` and `"file"` just get special treatment
[14:29:24] <FromDiscord> <enthus1ast> just once or several time?
[14:29:30] <FromDiscord> <haxscramper> should do it once
[14:29:36] <PMunch> You could copy tinyjpeg into the cache directory
[14:29:41] <FromDiscord> <haxscramper> buy you can `#ifdef` around it if it does so multiple times
[14:29:43] <PMunch> Wait
[14:30:01] <PMunch> You need to do `#include ""` and not `#include <>` right?
[14:30:10] <FromDiscord> <haxscramper> this would require copying into cache directory of every build↵(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[14:30:12] <FromDiscord> <haxscramper> al
[14:30:19] <PMunch> Otherwise it searches the compiler search path..
[14:30:20] <FromDiscord> <haxscramper> also you can do it really proeprly
[14:30:20] <FromDiscord> <enthus1ast> then afaik its easier to just have a import emit on top of the module
[14:30:25] <FromDiscord> <haxscramper> and just use default compiler features
[14:30:26] <FromDiscord> <haxscramper> such as
[14:30:38] <FromDiscord> <haxscramper> `{.passc: "-I<dir>".}`
[14:30:48] <FromDiscord> <haxscramper> And C compiler would search the headers when compiling
[14:30:53] <FromDiscord> <haxscramper> at least this is the best approach IMO
[14:30:57] <FromDiscord> <haxscramper> for this specific issue
[14:30:58] <FromDiscord> <enthus1ast> yes
[14:31:21] <FromDiscord> <haxscramper> you still need to do `header: "zzzzz.h"` of course
[14:31:39] <FromDiscord> <haxscramper> If you want to save yourself some typing you can `{.push.}` the header
[14:31:42] <PMunch> Yeah just `#include "tinyjpeg.h"` and `"-I" & getProjectPath()` should work
[14:32:04] <FromDiscord> <haxscramper> there is a `getProjectPath()`?
[14:32:05] <FromDiscord> <haxscramper> TIL
[14:32:15] <FromDiscord> <enthus1ast> yeah in macros
[14:32:17] <FromDiscord> <enthus1ast> BUT
[14:32:27] <FromDiscord> <enthus1ast> this uses the current module
[14:32:29] <FromDiscord> <haxscramper> no, the project path is incorrect from what i understand
[14:32:48] <FromDiscord> <haxscramper> it uses thing I started compilation with, not relative to the current source
[14:32:57] <FromDiscord> <enthus1ast> yes exactly
[14:33:07] <FromDiscord> <haxscramper> so I can't reliably predict where getProjectPath() would be
[14:33:20] <FromDiscord> <haxscramper> IMO there should be a currentSourceDir() in addition to source path
[14:34:07] <PMunch> I mean there is https://nim-lang.org/docs/system.html#currentSourcePath.t
[14:34:37] <FromDiscord> <haxscramper> source DIR
[14:34:48] <PMunch> currentSourcePath.parentDir
[14:34:50] <PMunch> There
[14:34:59] <FromDiscord> <haxscramper> `import std/os`
[14:35:02] <FromDiscord> <haxscramper> forgot this
[14:38:39] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3Ajk
[14:38:59] <FromDiscord> <haxscramper> ...
[14:39:04] <FromDiscord> <haxscramper> well, okay, if it works then it works
[14:39:28] <FromDiscord> <enthus1ast> why do you think should it not work?
[14:40:11] <FromDiscord> <haxscramper> no, this is like the most hacky solution of all ones presented
[14:40:41] <FromDiscord> <haxscramper> and does this work when you import things?
[14:40:48] <FromDiscord> <haxscramper> because some proc might be required in multiple modules
[14:41:02] <FromDiscord> <haxscramper> `emit` has a property of failing for multi-file projects as well
[14:41:20] <FromDiscord> <enthus1ast> mh i see
[14:41:24] <FromDiscord> <haxscramper> because there might be call somehwere else, but codegen does only one emit, so other calls are broken
[14:41:44] <FromDiscord> <enthus1ast> then prolly i must do #ifdef cage
[14:42:07] <FromDiscord> <enthus1ast> this and pasl
[14:42:08] <FromDiscord> <haxscramper> there is already one in header, at least if it is written properly
[14:42:09] <FromDiscord> <haxscramper> so no need to
[14:42:10] <FromDiscord> <enthus1ast> or passc
[14:42:52] <FromDiscord> <haxscramper> passc does not work properly if you need to define, so the best approach given requiremenets would be to hack around with `const headerText = ` which includes `#define` and `#include`
[15:09:01] <FromDiscord> <fae> messing around a little bit more with trying to make a pure wasm Nim playground, based on this https://github.com/binji/wasm-clang
[15:09:03] <nrds> <12R2D299> 4GitHub: 7"Running Clang/LLD in WebAssembly Demo"
[15:09:33] <FromDiscord> <fae> I was able to take a compiled hello world, get the `stdlib_system.c` and `stdlib_io.c` compiled in the browser and all linked
[15:09:42] <FromDiscord> <fae>  https://media.discordapp.net/attachments/371759389889003532/892737390647607336/Screen_Shot_2021-09-29_at_4.37.18_AM.png
[15:10:32] <FromDiscord> <fae> (edit) "take" => "compile" | 04removed "compiled" | "world," => "world in Nim to c,"
[15:11:58] <FromDiscord> <fae> had to hack a few things out and im sure there is plenty broken if I were to try a slightly more complex example, but kind of excited that i got this working considering I have not much idea what i'm really doing lol
[15:12:25] <FromDiscord> <fae> now back to trying to get the Nim compiler running in the browser
[15:12:37] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:15:18] <FromDiscord> <haxscramper> In reply to @fae "now back to trying": https://github.com/haxscramper/hack/tree/4b3672348cef91bb8e9441d29c127e73be5d4b69/testing/c/wasm/niminterop this builds nim parser and runs it in browser via wasm
[15:17:56] <FromDiscord> <fae> In reply to @haxscramper "https://github.com/haxscramper/hack/tree/4b3672348c": Thanks, I'll look at this for reference. It's been a few days since I last worked on this, but I had gotten the nim compiler compiled to wasm and running in the browser, but didn't get much further than that
[15:18:42] <FromDiscord> <haxscramper> also this is a simplified example of the full compilation pipeline https://github.com/haxscramper/hack/blob/master/testing/nim/compilerapi/test11/full_compilation_pipeline.nim
[15:18:43] <FromDiscord> <fae> Like I couldn't get any files parsing, much less compiling to c output
[15:18:47] <FromDiscord> <haxscramper> from `.nim` to `.c`
[15:19:09] <FromDiscord> <haxscramper> you can try to use `.tcc` library, there is a `--lean-compiler` option or something similar in koch
[15:19:17] <FromDiscord> <haxscramper> when it builds
[15:19:32] <FromDiscord> <haxscramper> but generally I didn't go any further than parsing
[15:19:33] <FromDiscord> <haxscramper> And I don't even know whether my earlier example still works
[15:20:26] <FromDiscord> <fae> Do you actually think this whole pipeline is a viable approach? i.e. putting both nim and clang in the browser and having the full pipeline. I thought about just doing nim -> js but this seems cooler.
[15:21:30] <FromDiscord> <fae> one thing i'd like to do is enable pulling nimble packages in the playground
[15:21:56] <ehmry> fae: is there ever a reason to run a compiler in a browser?
[15:22:08] <FromDiscord> <haxscramper> the eaiest one would be to run nim vm
[15:22:13] <FromDiscord> <haxscramper> it does not require anything else
[15:22:16] <FromDiscord> <haxscramper> and it is fairly capable
[15:22:24] <FromDiscord> <haxscramper> so you just run nim compiler
[15:22:33] <FromDiscord> <haxscramper> I have an example for it as well, let me see
[15:23:26] <FromDiscord> <fae> In reply to @ehmry "fae: is there ever": fun, idk
[15:24:13] <FromDiscord> <haxscramper> https://github.com/haxscramper/hack/blob/4b3672348cef91bb8e9441d29c127e73be5d4b69/testing/nim/compilerapi/test6.nim#L78
[15:24:15] <FromDiscord> <haxscramper> okay
[15:24:23] <FromDiscord> <haxscramper> again, no promises about it working
[15:24:32] <FromDiscord> <haxscramper> but thisis a REPL turned inside out
[15:24:48] <FromDiscord> <haxscramper> so I can feed it using queue of lines, I was testing something like
[15:24:58] <FromDiscord> <haxscramper> "can VM handle failures in input"
[15:25:11] <FromDiscord> <haxscramper> test 6 or test 8 might have something else
[15:25:29] <FromDiscord> <fae> nice I'll have a look through these tomorrow, sleep time for now
[15:25:32] <FromDiscord> <haxscramper> but honestly this is a huge pile of garbage, sorry i didn't try to keep these examples really
[15:25:39] <FromDiscord> <haxscramper> good for examples
[15:25:53] <FromDiscord> <haxscramper> So if you have any question you can ping me sometimes later, right now I got to go
[15:28:40] <FromDiscord> <xflywind> https://github.com/slangmgh/nims
[15:28:42] <nrds> <12R2D299> 4GitHub: 7"simple nim repl"
[15:28:52] <FromDiscord> <xflywind> Maybe also play with libffi
[15:30:44] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:42:07] <FromDiscord> <DMisener> !eval 1+2
[15:42:10] <NimBot> Compile failed: /usercode/in.nim(1, 2) Error: expression '3' is of type 'int literal(3)' and has to be used (or discarded)
[15:43:03] <FromDiscord> <DMisener> !help
[15:43:41] <FromDiscord> <DMisener> !eval echo 1+2
[15:43:44] <NimBot> 3
[15:55:36] <PMunch> @DMisener, the eval command just runs your code with the Nim playground and copies one line of output here
[15:58:35] <FromDiscord> <Yardanico> not one line though :P
[15:58:54] <FromDiscord> <Yardanico> !eval for x in ..10: echo x
[15:58:57] <NimBot> 0↵1↵2↵3↵4↵5↵6↵7↵8↵9↵10
[16:02:08] <PMunch> Ah okay, it only spits out one line though
[16:06:04] <PMunch> Hmm, anyone got a parser for some simple C statements? I guess I could rip something out of c2nim..
[16:11:10] *** Joins: arkurious (~arkurious@user/arkurious)
[16:12:32] <PMunch> Essentially I want to parse things like `(1 << 2)` and `0x07U`
[16:29:02] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[16:31:00] *** Joins: Vladar (~Vladar@46.162.2.53)
[16:32:28] <FromDiscord> <haxscramper> fixing enums?
[16:32:50] <FromDiscord> <haxscramper> for futhark
[16:35:23] <PMunch> Nah, macros
[16:35:42] <PMunch> clang already handles enums just fine
[16:36:28] <PMunch> But macros by their very nature can't be described the same way. Since they're essentially text expansion in C it would be wrong to pre-compute the result
[16:37:40] <PMunch> #define FIVE 2+3
[16:37:48] <FromDiscord> <haxscramper> well, then I don't think you can implement this using 'simple' parser. The best approach I've managed to comu with is
[16:37:51] <PMunch> printf("%d\n", FIVE * FIVE);
[16:37:55] <PMunch> Guess what that prints out
[16:38:00] <FromDiscord> <haxscramper> offs
[16:38:10] <FromDiscord> <haxscramper> I don't care about this bullshit honestly
[16:38:15] <FromDiscord> <haxscramper> and neither should you
[16:38:21] <FromDiscord> <haxscramper> how many libs there is that
[16:38:25] <FromDiscord> <haxscramper> (1) worht wrapping
[16:38:31] <FromDiscord> <haxscramper> (2) use dirty hacks like this?
[16:38:40] <FromDiscord> <haxscramper> this is hardly possible to replicate in nim anyway
[16:38:44] *** Joins: Guest9380 (~Guest93@99-6-76-144.lightspeed.rcsntx.sbcglobal.net)
[16:38:50] <PMunch> Oh yeah, I wouldn't want to have that behaviour in Nim
[16:39:09] <PMunch> I was just saying why clang won't give me the value of a macro but will give me the value of an enum
[16:39:23] <FromDiscord> <haxscramper> because it is not the same
[16:39:31] <FromDiscord> <haxscramper> enums are handled by sema
[16:39:44] <FromDiscord> <haxscramper> macros are handled by preprocessor callbacks that run two pipeline stages earlier
[16:40:00] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1)
[16:40:04] <Guest9380> Hello everyone. I have a very naïve question since I am very new to Nim. Did nim pass the array by value to a function (changes of the array within the function is invisible to the caller's scope)? 
[16:40:05] <FromDiscord> <haxscramper> did you notice macro expansions are placed on top of the translation unit for example?
[16:40:12] <FromDiscord> <haxscramper> they are always on the toplevel
[16:40:24] <PMunch> There are a couple of ways of doing it. I can either A) try to parse them, which is fine for simple things like magic numbers and masks or B) output some kind of statement that equals the name of the macro and re-parse the file
[16:40:25] <FromDiscord> <Yardanico> @Guest9380 yes, because arrays are value types
[16:40:28] <FromDiscord> <haxscramper> `proc changesArray(arr: var array[3, int])`↵(<@709044657232936960_=47uest9380=5b=49=52=43=5d>)
[16:40:41] <Guest9380> Thank you!
[16:40:42] <FromDiscord> <Yardanico> if you want to modify the values in the array in a function, you need to use the `var` modifier for the argument, like haxscramper showed above
[16:41:10] <Guest9380> Great to know.
[16:41:16] <FromDiscord> <haxscramper> The best approach that I managed to come up with is↵(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[16:41:22] <FromDiscord> <haxscramper> I take macro definition token sequence
[16:41:26] <PMunch> Guest9380, that's a truth with some modifications. Nim will probably pass it by reference simply because it's faster. But it won't allow you to modify it if you don't tag it as `var`
[16:42:05] <PMunch> But if you use `unsafeAddr` you might be able to modify the underlying array that was passed into your procedure.
[16:42:32] <FromDiscord> <haxscramper> and then i replace `<tok> ## <tok>` with specially constructed token names like `TOK_INDEX_1CONCATTOK_INDEX_2`
[16:42:36] <FromDiscord> <haxscramper> And then I reparse things backj
[16:42:57] <FromDiscord> <haxscramper> but we have stilk have to operate under assumption that token body forms a valid C code
[16:42:57] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1) (Client Quit)
[16:43:00] <FromDiscord> <haxscramper> which is of course not the case
[16:43:22] <FromDiscord> <haxscramper> so I need to effectively emulate token expansion process, cutting out as soon as I can ensure that declaration is valid
[16:43:31] <PMunch> Yeah, currently I just try to parse the value of a macro as an int or a hex number and emit that..
[16:43:36] <FromDiscord> <haxscramper> so one level of expansion might not be correct
[16:43:42] <FromDiscord> <haxscramper> but two levels of expansion might be correct
[16:43:53] <PMunch> That would probably cover 80% of usecases
[16:44:20] <PMunch> With identifiers and some simple math and bit shifting implemented I think it would be closer to 95% of all usecases
[16:45:18] <FromDiscord> <haxscramper> laughs in X11 api↵(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[16:45:40] <FromDiscord> <haxscramper> but constant defines are important
[16:45:58] <FromDiscord> <haxscramper> so might not be eighty percent, but still the best when it comes to effort/value
[16:48:14] <PMunch> X11 API? I wrapped that the other day with Futhark and wrote a small compositor thingy with it for my epaper display. Didn't have any issues with macros that didn't fall into those 80%
[16:49:27] <FromDiscord> <haxscramper> anyway, this is not really important, I might be confusing it with something else
[16:49:36] <FromDiscord> <haxscramper> but C preprocessor is still the
[16:49:37] <FromDiscord> <haxscramper> well
[16:49:39] <FromDiscord> <haxscramper> `const`
[16:49:45] <FromDiscord> <haxscramper> and `#define`
[16:50:01] <FromDiscord> <haxscramper> two horrors that will haunt nim interop for a long time
[16:50:27] <FromDiscord> <haxscramper> of course there are also `virtual`, `T...` and other things
[16:50:39] <FromDiscord> <haxscramper> but those are mostly about C++
[16:51:48] <FromDiscord> <haxscramper> https://ink.library.smu.edu.sg/cgi/viewcontent.cgi?article=1494&context=sis_research http://mbeddr.com/files/tomassettiratiu-extractingvariabilityfromcandliftingittombeddr.pdf there should be something along those lines
[16:52:00] <FromDiscord> <haxscramper> For extracting semantic value from macros
[16:52:24] <FromDiscord> <haxscramper> but tree-sitter is the best implementation approximation for handling this
[16:52:41] <FromDiscord> <haxscramper> boost wave allows to hook into macro transformation process
[16:52:50] <FromDiscord> <haxscramper> so I can implement replay I was talking about
[16:54:31] <FromDiscord> <haxscramper> https://ruche-home.net/program/boost/wave#hooks-member-expanded-macro
[16:55:10] <FromDiscord> <haxscramper> https://www.boost.org/doc/libs/1_75_0/libs/wave/doc/class_reference_ctxpolicy.html#expanding_function_like_macro
[16:57:13] <FromDiscord> <haxscramper> if only C was a single language ...
[16:57:31] <FromDiscord> <haxscramper> This is literally this meme with "if X was ..." a
[16:58:34] <FromDiscord> <haxscramper> https://www.cs.cmu.edu/~ckaestne/pdf/tse17-refactoringifdef.pdf "Refactoring of Preprocessor↵Directives in the #ifdef Hell"
[16:58:43] <FromDiscord> <haxscramper> Very telling names tbh
[17:00:12] *** Joins: rockcavera (~rc@192.12.112.207)
[17:00:12] *** Quits: rockcavera (~rc@192.12.112.207) (Changing host)
[17:00:12] *** Joins: rockcavera (~rc@user/rockcavera)
[17:28:58] *** Quits: Guest9380 (~Guest93@99-6-76-144.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[17:29:35] *** Joins: max22- (~maxime@2a01cb0883359800129990ac0bc95b23.ipv6.abo.wanadoo.fr)
[17:52:01] <PMunch> Okay, pushed something to Futhark that should allow it to wrap simple macros
[17:52:06] <PMunch> Totally untested..
[17:52:12] <PMunch> And now I've gotta run
[17:52:12] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[18:01:09] *** Joins: tiorock (~rc@192.12.112.207)
[18:01:10] *** Quits: tiorock (~rc@192.12.112.207) (Changing host)
[18:01:10] *** Joins: tiorock (~rc@user/rockcavera)
[18:01:10] *** Quits: rockcavera (~rc@user/rockcavera) (Killed (sodium.libera.chat (Nickname regained by services)))
[18:01:10] *** tiorock is now known as rockcavera
[18:34:01] <FromDiscord> <Yandong Zhang> Hello everyone. Would anyone recommend a format prettier for the Nim?
[18:34:44] <FromDiscord> <xflywind> nimpretty
[18:35:18] <FromDiscord> <Yandong Zhang> Thank you. I will try it.
[18:41:14] <nrds> <06Prestige99> Hm just found morepretty, maybe I'll try that out
[18:41:19] <nrds> <06Prestige99> https://github.com/treeform/morepretty
[18:41:20] <nrds> <12R2D299> 4GitHub: 7"Morepretty - like nimpretty but with more stuff."
[18:43:42] <FromDiscord> <xflywind> It seems to be an enhanced nimpretty using its own parser.
[18:46:30] <FromDiscord> <xflywind> Using compiler API may be more robust https://github.com/FedericoCeratto/nimfmt
[18:46:33] <nrds> <12R2D299> 4GitHub: 7"Nim code formatter / linter / style checker"
[18:47:15] <FromDiscord> <xflywind> (though it is more easily broken caused by compiler changes)
[18:49:38] <FromDiscord> <Yandong Zhang> I guess that the nimpretty is the most reliable one since it is installed by default (I just tried).
[18:50:19] <FromDiscord> <Yandong Zhang> Do want to have a distaste by the beauty. 😀
[18:53:37] *** Joins: Guest6265 (~Guest62@138019243104.ctinets.com)
[18:53:57] *** Quits: Guest6265 (~Guest62@138019243104.ctinets.com) (Client Quit)
[18:57:23] <FromDiscord> <Daniel> show us after and before 😄
[19:18:09] <FromDiscord> <Yandong Zhang> @Daniel\: Supposedly, those formatter/prettier/... should keep the original somewhere by default.
[19:19:16] <FromDiscord> <Yandong Zhang> Maybe I can add a wrapper to do\: Step 1\: save the backup Step2. nimfmt
[19:21:04] <FromDiscord> <NullCode> In reply to @Daniel "show us after and": I wanna see too
[19:21:14] <FromDiscord> <NullCode> Before format and after format
[19:29:34] <FromDiscord> <konsumlamm> PMunch: btw, are you aware that futhark is also the name of a programming language?↵https://futhark-lang.org/
[19:30:00] <FromDiscord> <NullCode> I wonder what futhark is
[19:30:43] <FromDiscord> <NullCode> Damn the lang is pretty cool
[19:30:55] <FromDiscord> <NullCode> But i can only do so much googling on mobile
[19:41:09] *** Quits: max22- (~maxime@2a01cb0883359800129990ac0bc95b23.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[19:41:59] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[19:55:21] <FromDiscord> <Lefl> sent a long message, see http://ix.io/3Ala
[19:55:56] <FromDiscord> <Gumber> In reply to @Lefl "Hey there,  I'm": going to be pretty difficult to debug your issue without a stacktrace or any other error information....
[19:56:07] <FromDiscord> <Gumber> just giving us your SQL statement(s) isn't really going to help....
[19:56:42] <FromDiscord> <Lefl> (edit) "long message," => "code paste," | "http://ix.io/3Ala" => "https://play.nim-lang.org/#ix=3Alb"
[19:56:49] <FromDiscord> <Gumber> In reply to @NullCode "I wonder what futhark": huh? it's not a language from my understanding - it's another take on using tree sitter (I think) to produce C bindings automatically
[19:57:00] <FromDiscord> <Gumber> That's still not enough info @Lefl
[19:57:05] <FromDiscord> <Gumber> we need to see the error / stacktrace
[19:57:06] <FromDiscord> <Gumber> thanks
[19:57:11] <FromDiscord> <Lefl> sent a code paste, see https://play.nim-lang.org/#ix=3Alc
[19:57:18] <FromDiscord> <Gumber> okay soooooo you're not using `MariaDB` right?
[19:57:22] <FromDiscord> <Lefl> I am
[19:57:24] <FromDiscord> <Gumber> you're using `MySQL`?
[19:57:27] <FromDiscord> <Lefl> no
[19:57:48] <FromDiscord> <Gumber> now I'm very confused because above you mentioned MySQL
[19:58:01] <FromDiscord> <Lefl> It doesn't matter, the syntax is fine
[19:58:08] <FromDiscord> <Gumber> well apparently it's not
[19:58:14] <FromDiscord> <Lefl> It is
[19:58:16] <FromDiscord> <Gumber> at least the SQL the DB engine is receiving is not
[19:58:39] <FromDiscord> <Lefl> I'm running it through DBeaver and it works. if I print the sql before running it and copy it into dbeaver it works
[19:58:42] <FromDiscord> <enthus1ast> @Lefl\: split the commands by ";" and run them command by command
[19:58:55] <FromDiscord> <Lefl> hmm I'll try
[19:58:56] <FromDiscord> <Gumber> okay you have to understand though
[19:59:12] <FromDiscord> <Gumber> you have a layer in between your SQL's execution engine and your SQL statement now
[19:59:19] <FromDiscord> <Gumber> which is your Nim program / the db client lib
[19:59:28] <FromDiscord> <Lefl> Yes
[19:59:31] <FromDiscord> <Lefl> I know
[19:59:31] <FromDiscord> <Gumber> so you can't say I get this result when I run this in my SQL editor
[19:59:37] <FromDiscord> <Lefl> Yes I can
[19:59:38] <FromDiscord> <Gumber> so it is totally valid SQL for my Nim program right?
[19:59:47] <FromDiscord> <Gumber> okay please just be patient with my typing and responses
[20:00:06] <FromDiscord> <Gumber> I'm not trying to be critical of you I'm trying to help you understand why it's not an apples to apples comparison
[20:00:16] <FromDiscord> <Gumber> appears to be the problematic statement
[20:00:17] <FromDiscord> <Gumber> sent a code paste, see https://play.nim-lang.org/#ix=3Ale
[20:00:54] <FromDiscord> <Gumber> now can you please give me the full Nim code you're using to execute these statements?
[20:00:59] <FromDiscord> <Gumber> so I can understand what modules you're importing
[20:01:04] <FromDiscord> <Gumber> etc....
[20:01:19] <FromDiscord> <Gumber> I don't need the entire codebase just the module that is executing these SQL statements
[20:01:42] <FromDiscord> <Lefl> db_mysql
[20:02:15] <FromDiscord> <Gumber> thanks
[20:02:49] <FromDiscord> <Lefl> In reply to @enthus1ast "<@241571229692198915>\: split the commands": Ah splitting it seems to have worked
[20:02:56] <FromDiscord> <Gumber> Nice
[20:03:01] <FromDiscord> <Lefl> Thanks
[20:03:08] <FromDiscord> <Gumber> Well it was all enthus1ast
[20:03:24] <FromDiscord> <Gumber> and I apologize if I came off a certain way - it's not my intention at all, it's just the way I type / my brain works
[20:03:35] <FromDiscord> <Gumber> my goal was to help you 🙂
[20:03:40] <FromDiscord> <Lefl> Don't worry
[20:03:44] <FromDiscord> <Gumber> but I'm glad you've gotten it figured out now!
[20:03:53] <FromDiscord> <Lefl> Sorry if I seemed angry or something
[20:03:56] <FromDiscord> <Gumber> nah it's cool
[20:04:00] <FromDiscord> <Gumber> I have ADHD / spectrum stuff
[20:04:05] <FromDiscord> <deech> sent a code paste, see https://paste.rs/ewg
[20:04:07] <FromDiscord> <Gumber> so I can't always like relate / interpret things correctly
[20:04:34] <FromDiscord> <Gumber> but yeah - I'm glad it's sorted out now 😄
[20:18:14] *** Joins: Guest55 (~Guest55@99-6-76-144.lightspeed.rcsntx.sbcglobal.net)
[20:18:46] <Guest55> Hello everyone, I found this interesting repository . https://github.com/oakes/vim_cubed
[20:18:55] <nrds> <12R2D299> 4GitHub: 7"Vim rendered on a cube for no reason"
[20:19:18] <Guest55> But when I run the
[20:19:18] <Guest55> nimble install, it is reported error
[20:19:32] <Guest55> Error: Could not find a file with a .nimble extension inside the specified directory: C:\WINDOWS\system32
[20:19:52] <Guest55> This line work well: nimble install paravim
[20:20:06] <Guest55> But the "nimble install" does not work
[20:20:56] <Guest55> Have anyone tried it?
[20:23:03] <FromDiscord> <Marcin> any MySQL ORM for windows are there maby?
[20:23:52] <FromDiscord> <Gumber> for windows?
[20:23:56] <FromDiscord> <Marcin> yep
[20:23:58] <FromDiscord> <Gumber> ORMs generally aren't platform specific
[20:23:59] <FromDiscord> <enthus1ast> well we have ormin and norm
[20:24:02] <FromDiscord> <Gumber> just FYI
[20:24:08] <FromDiscord> <Gumber> they're DB specific
[20:24:13] <FromDiscord> <Gumber> or dbengine specific rather
[20:24:21] <FromDiscord> <Gumber> and sometimes not even then
[20:24:24] <FromDiscord> <enthus1ast> and another one but i forgot the name
[20:24:29] <FromDiscord> <Gumber> sometimes they can handle a bunch of db engines
[20:24:32] <FromDiscord> <Gumber> like spring data
[20:25:02] <FromDiscord> <Marcin> In reply to @enthus1ast "well we have ormin": but i see they aren't support mysql? 😦
[20:25:30] <FromDiscord> <enthus1ast> ah good point
[20:25:34] <FromDiscord> <enthus1ast> i guess then not
[20:25:41] <FromDiscord> <Marcin> Gumber yeah but i try allographer and its great but not working on windows for example. I'll make PR later but i need it for now 😉
[20:26:07] <FromDiscord> <Marcin> business need this for now so im lookin around to get something working at the moment
[20:26:59] <FromDiscord> <Gumber> gotcha
[20:27:02] <FromDiscord> <Marcin> ok so we know now what we need for expand the community of Nim 😉
[20:27:11] <FromDiscord> <Marcin> maby if i ll get some free time il make one
[20:27:14] <FromDiscord> <Gumber> well, to expand the web dev sector anyway xD
[20:27:17] <FromDiscord> <Gumber> or app dev sector
[20:27:22] <FromDiscord> <Marcin> yep 🙂
[20:27:24] <FromDiscord> <Gumber> I don't have much use for ORMs or MySQL
[20:27:25] <FromDiscord> <Gumber> 🙂
[20:27:39] <FromDiscord> <enthus1ast> i like ormin but it lacks a lot of features
[20:27:40] <FromDiscord> <Marcin> by default im fan of raw sql
[20:27:46] <FromDiscord> <Marcin> but somethimes to make prototypes
[20:27:51] <FromDiscord> <Gumber> I mean I'm pretty sure ou can just do prepared statements w/ Nim etc
[20:27:57] <FromDiscord> <Marcin> its nice to get some production speed 😉
[20:27:58] <FromDiscord> <Gumber> but yeah I feel you sometimes ORMs are nice
[20:28:03] <FromDiscord> <Gumber> Spring data spoiled me a lot
[20:28:14] <FromDiscord> <Gumber> but I don't do web dev in my spare time anymore - only game dev and soon embedded stuff hopefully
[20:28:20] <FromDiscord> <Gumber> once I get my pine64 phone
[20:28:28] <FromDiscord> <Gumber> and I start building my ADHD software
[20:29:09] <FromDiscord> <Marcin> In reply to @Gumber "but I don't do": yeah it's can help to make some of network code.
[20:29:30] <FromDiscord> <Marcin> but for network code of games we dont use ORM right? 😉
[20:30:05] <FromDiscord> <Marcin> but anyway its nice to have in ecosystem
[20:30:16] <FromDiscord> <Marcin> so ill help with that in free time
[20:30:20] <FromDiscord> <Gumber> well a lot of games don't use databases
[20:30:26] <FromDiscord> <Marcin> yea u right
[20:30:27] <FromDiscord> <Gumber> like mine doesn't - and it's a 3d networked RTS
[20:30:34] <FromDiscord> <Gumber> but I mean - some games do, especially MMOs etc
[20:30:45] <FromDiscord> <Gumber> a lot of games that need a DB type deal will use flatfiles or an in-memory DB
[20:30:46] <FromDiscord> <Marcin> yeah online games are based
[20:30:54] <FromDiscord> <Gumber> and the abstraction could be useful there - but IMO simple is better always
[20:30:55] <FromDiscord> <Marcin> if not for game - for analytics, telemetry etc
[20:30:59] <FromDiscord> <Gumber> yeah
[20:31:02] <FromDiscord> <Gumber> exactly that kind of stuff
[20:31:07] <FromDiscord> <Gumber> but my games are like thick client desktop apps
[20:31:14] <FromDiscord> <Gumber> the only network communication they do is to steam / other gamer services
[20:31:18] <FromDiscord> <JohnAD (John Dupuy)> You are making an app that solves ADHD? You, sir, are going to make a fortune selling that to programmers.
[20:31:24] <Guest55> The vim3 is totally amazing. https://github.com/oakes/vim_cubed
[20:31:26] <FromDiscord> <Gumber> well I'm making one that works for me 🙂
[20:31:26] <nrds> <12R2D299> 4GitHub: 7"Vim rendered on a cube for no reason"
[20:31:27] <FromDiscord> <Marcin> In reply to @Gumber "and the abstraction could": simple is better - You are 100% right 😉
[20:31:30] <FromDiscord> <Gumber> because I have really really bad ADHD
[20:31:35] <Guest55> Eveyone should use it to do the code review.
[20:31:46] <Guest55> So we can have a wide vision.
[20:31:52] <FromDiscord> <Gumber> I'm not sure how useful it will be to others - but my goal is to streamline all of my todolists / reminders / notifications / etc....
[20:32:06] <FromDiscord> <Gumber> In reply to @Guest55 "So we can have": Not really sure what you're talking about
[20:32:15] <FromDiscord> <Gumber> get them sent to my smartwatch
[20:32:42] <FromDiscord> <Gumber> and also just kind of build a custom tailored software solution that helps me with forgetfulness, time management, staying on task, prioritizing life and organizing plans to achieve long term goals
[20:32:53] <FromDiscord> <Gumber> without the ridiculous interfaces / flashy crap a lot of the productivity apps have
[20:33:02] *** Quits: Guest55 (~Guest55@99-6-76-144.lightspeed.rcsntx.sbcglobal.net) (Quit: Client closed)
[20:33:41] <FromDiscord> <Gumber> no gamification or journey crap - just like here's a tool to help you manage your life with high usability and acessibility
[20:33:55] <FromDiscord> <Gumber> nothing I've found really works in that way - or at least doesn't solve the whole picture for me
[20:34:22] <FromDiscord> <Gumber> anywho - gotta run to my dr appt, bbl!
[20:34:27] <FromDiscord> <JohnAD (John Dupuy)> That would be nice; especially if it can do good filters to block stuff also. I'm often asking, how can get less communication. And yet still see the important things.
[20:36:27] <FromDiscord> <fae> @haxscramper was trying out your minimal compiler example but was having issues with `hmisc` on osx
[20:36:49] <FromDiscord> <fae> `clang: error: the clang compiler does not support -pg option on versions of OS X 10.9 and later`
[20:37:25] <FromDiscord> <haxscramper> I can't do anything with this, I don't even know where `-pg` comes from
[20:37:34] <FromDiscord> <haxscramper> And why it was added
[20:37:36] <FromDiscord> <fae> i imagine here https://github.com/haxscramper/hmisc/blob/06873884a15d06483bc688839c3d50e547913b75/src/hmisc/scripts/nim.cfg#L3
[20:38:01] <FromDiscord> <fae> is there a way to override cfg from a consuming package?
[20:38:19] <FromDiscord> <haxscramper> this cfg should not be touched in the first place
[20:38:20] <FromDiscord> <haxscramper> and no
[20:38:36] <FromDiscord> <haxscramper> well, you can just go to the `.nimble` and edit things there
[20:38:45] <FromDiscord> <fae> (edit) "https://github.com/haxscramper/hmisc/blob/06873884a15d06483bc688839c3d50e547913b75/src/hmisc/scripts/nim.cfg#L3" => "https://github.com/haxscramper/hmisc/blob/master/src/hmisc/scripts/nim.cfg#L3"
[20:38:53] <FromDiscord> <haxscramper> `~/.nimble/pkgs/hmisc-...`
[20:39:03] <FromDiscord> <haxscramper> just edit the file
[20:39:13] <FromDiscord> <fae> yea i already did that, was just letting you know
[20:57:29] <FromDiscord> <konsumlamm> In reply to @Gumber "huh? it's not a": it's also the name of a language: https://futhark-lang.org/
[20:59:41] <FromDiscord> <Yardanico> lol
[20:59:56] <FromDiscord> <dom96> Naming is hard
[21:00:10] <FromDiscord> <Recruit_main707> ^
[21:12:07] <FromDiscord> <Shoto> In reply to @Gumber "because I have really": Oh a fellow neurodivergent-
[21:26:52] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3AlB
[21:27:50] <FromDiscord> <Rika> Setting and using that value at the same time
[21:36:33] <FromDiscord> <reilly> In reply to @Rika "Setting and using that": But since there's no condition, what ends the loop?
[21:40:29] <FromDiscord> <Rika> When the value is falsey
[21:40:37] <FromDiscord> <Rika> C has no Booleans
[21:40:53] <FromDiscord> <Rika> 0 is “falsey” and anything else is truths I believe
[21:40:58] <FromDiscord> <Rika> (edit) "truths" => "truthy"
[21:50:06] <FromDiscord> <reilly> When `instr` is falsey?
[21:50:36] <FromDiscord> <Rika> When it is set to a false value
[21:57:30] <FromDiscord> <treeform> In reply to @exelotl "there's also treeform's nimtemplate:": Yeah I use it a ton, but its not for everyone.
[22:02:27] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[22:26:01] *** Joins: max22- (~maxime@2a01cb088335980073a4b4db0ef417b5.ipv6.abo.wanadoo.fr)
[22:32:11] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1)
[22:40:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:40:44] <FromDiscord> <Gumber> In reply to @konsumlamm "it's also the name": oh jesus, thanks for waking me up to that lol
[22:40:51] <FromDiscord> <Gumber> too many similar named things
[22:41:28] <FromDiscord> <Gumber> btw @konsumlamm I need to apologize to you - I think I replied to something you said and maybe i didn't understand it and I think my reply was a little callous / not very helpful or productive so if you remember what I'm speaking to, I apologize
[22:42:01] <FromDiscord> <Gumber> I don't even remember the specific context at this point, but I know I said something that I later regretted / didn't mean to make it sound the way I did, so if I did so, I'm sorry~!
[22:42:03] <FromDiscord> <Gumber> (edit) "sorry~!" => "sorry!"
[22:47:23] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (Ping timeout: 252 seconds)
[22:47:40] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[22:52:40] <nrds> <06Prestige99> What is the use of the `end` keyword?
[22:53:43] <FromDiscord> <konsumlamm> In reply to @Gumber "btw <@!312654963694108674> I need": i don't remember anything like that, so all fine
[22:59:22] <FromDiscord> <Yardanico> @Prestige it's used for SCFs\
[22:59:23] <FromDiscord> <Yardanico> (edit) "SCFs\" => "SCFs"
[23:00:00] <FromDiscord> <Yardanico> well, those are deprecated now anyway
[23:00:12] <FromDiscord> <Yardanico> ah right, they're not
[23:00:13] <FromDiscord> <Yardanico> https://nim-lang.org/docs/filters.html
[23:00:47] <nrds> <06Prestige99> hmm
[23:14:44] <NimEventer> New post on r/nim by wrestlingwithbadgers: How to iterate over a distinct type, see https://reddit.com/r/nim/comments/py3142/how_to_iterate_over_a_distinct_type/
[23:17:20] <FromDiscord> <Yardanico> wonder what's the usefulness of using "distinct" in his code
[23:18:18] <nrds> <06Prestige99> maybe just an example
[23:29:01] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cab:622d:7a3d:a6f1)
[23:44:45] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[23:47:59] *** Quits: dom96 (~dom@mail.nim-lang.org) (Ping timeout: 268 seconds)
[23:52:49] *** Joins: dom96 (~dom@mail.nim-lang.org)
