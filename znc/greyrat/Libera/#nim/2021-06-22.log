[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:36] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:40] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:37:12] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[08:55:57] <FromDiscord> <Avahe> is `table{"someKey"}` syntax not used? I'm getting a warning but it's not very clear
[08:59:09] <FromDiscord> <Elegant Beef> It's not an operator in the `tables` module if that's what you mean
[09:00:02] <FromDiscord> <Avahe> oh woops, meant to say this is a TomlValueRef
[09:00:41] <FromDiscord> <Avahe> https://github.com/NimParsers/parsetoml/blob/master/src/parsetoml.nim#L1861 seems fine to me
[09:01:37] <FromDiscord> <Avahe> sent a code paste, see https://play.nim-lang.org/#ix=3qI8
[09:01:48] <FromDiscord> <Avahe> with `table{"networks"}`
[09:13:07] <FromDiscord> <codic> In reply to @◊û◊®◊ï◊ñ ◊ú◊ï◊• "**Poll**\: –î–Ω–æ BTC –ø–æ": 100000000 000 0000000000 %
[09:13:10] <FromDiscord> <codic> (edit) "%" => "$"
[09:14:29] <FromDiscord> <codic> why is the `Vote with` in English but the rest in Russian
[09:14:32] <FromDiscord> <codic> and why is your username in hebrew
[09:14:40] <FromDiscord> <codic> weird scam bot
[09:42:41] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[09:43:48] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:59:42] *** Quits: jkl (~jkl@2600:1700:2420:6d10::3f1) (Ping timeout: 264 seconds)
[10:00:52] <FromDiscord> <hamidb80> In reply to @Elegant Beef "I can deadlift 400kg,": both
[10:55:20] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[10:57:49] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:03:27] *** Joins: max22- (~maxime@2a01cb08833598002dfb1b6833a8ed57.ipv6.abo.wanadoo.fr)
[11:04:25] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[11:12:34] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[11:27:54] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:44:02] *** Quits: Epsilon (~Epsilon@user/epsilon) (Remote host closed the connection)
[11:44:06] *** Joins: Epsilon- (~Epsilon@user/epsilon)
[11:57:28] <FromDiscord> <gogolxdong (liuxiaodong)> How to do UInt256 divisionÔºü
[12:07:58] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[12:10:58] <FromDiscord> <elph> hello everyone. I want to work on a Nim library that could used (obviously) from Nim, but also from Python. I've been quite happy using the `nimpy`'s `{.exportpy.}` method. My question is what would be the best method: a Nim "only" lib and then just a separate lib just re-declaring everything with `{.exportpy.}`? Or is there no major downside to have methods declare `{.exportpy.}` by default?
[12:11:51] <FromDiscord> <elph> (edit) "hello everyone. I want to work on a Nim library that could ... useddeclared" 03added "be" | "declare" => "declared with "
[12:12:27] <FromDiscord> <Elegant Beef> Would it make any more sense to make it a system library that could be used from any language?
[12:13:15] <FromDiscord> <Elegant Beef> Yes you'd have to make bindings, but if it's a library that's useful it'd be the most reusable possible \:D
[12:14:08] <FromDiscord> <elph> @ElegantBeef yes, that's a good point üôÇ and then use it from Python with something like `ctypes` I supporse
[12:14:12] <FromDiscord> <elph> (edit) "supporse" => "suppose"
[12:14:22] <FromDiscord> <Elegant Beef> Yep
[12:14:31] <FromDiscord> <elph> üëç thanks
[12:15:17] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[12:16:25] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[12:17:13] <FromDiscord> <Stuffe> Does anyone know how to compute an array at compile time based on a const table? Here is an example of what I am trying to do: https://play.nim-lang.org/#ix=3qIH
[12:18:39] <FromDiscord> <Elegant Beef> Like this? https://play.nim-lang.org/#ix=3qIJ
[12:19:24] <FromDiscord> <Stuffe> that one has empty entries in the array. let me fiddle with it a bit
[12:19:38] <FromDiscord> <Elegant Beef> Shouldnt there be empties?
[12:19:46] <FromDiscord> <Elegant Beef> you only have 1 `2` in the table
[12:20:03] <FromDiscord> <Stuffe> No empties
[12:20:10] <FromDiscord> <Stuffe> It is just a minimized example
[12:20:56] <FromDiscord> <Stuffe> I have a table with 100 structs, but all over the place I need a list of the structs that meets a certain condition
[12:21:12] <FromDiscord> <Elegant Beef> Ok
[12:21:19] <FromDiscord> <vindaar> you need to split the `tmp` seq into its own `const` variable\: https://play.nim-lang.org/#ix=3qIK
[12:22:53] <FromDiscord> <Elegant Beef> Or if you want it all blocked together https://play.nim-lang.org/#ix=3qIN
[12:23:11] *** Joins: SebastianM (~Sebastian@user/sebastianm)
[12:23:20] <FromDiscord> <vindaar> huh, works with collect. nice
[12:23:32] <FromDiscord> <vindaar> makes sense I guess
[12:23:39] *** Joins: PMunch (~PMunch@178.74.36.198)
[12:23:45] <FromDiscord> <Stuffe> @Vindaar @ElegantBeef I'll take the second one. Thanks üôÇ
[12:23:56] <FromDiscord> <Stuffe> Since I don't need the tmp in the run time scope
[12:29:05] <FromDiscord> <Elegant Beef> Better luck next time vindaar üòõ
[12:29:26] <FromDiscord> <vindaar> damn, I'll try harder üòú
[12:33:20] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[12:37:43] <FromDiscord> <Varriount> Araq/@Araq: Is this suppose to be "doesn't need to be done with deferredImport", or "does need to be done with deferredImport"?‚Üµhttps://github.com/nim-lang/Nim/pull/18251#issuecomment-860404870
[12:49:50] <FromDiscord> <Varriount> Araq / @Araq : Is this suppose to be "doesn't need to be done with deferredImport", or "does need to be done with deferredImport"?‚Üµhttps://github.com/nim-lang/Nim/pull/18251#issuecomment-860404870
[12:50:54] *** Quits: SebastianM (~Sebastian@user/sebastianm) (Quit: SebastianM)
[12:52:47] <FromDiscord> <Varriount> I believe adding deferredImport would be a mistake. It wouldn't be used often enough to be memorable (or possibly even discoverable), and people new to the language would expect `import` to do the right thing automatically.
[13:17:04] <FromDiscord> <timotheecour> Then don't use it if you don't understand it. I have real use cases for it that are hard to achieve without this feature.
[13:18:37] <FromDiscord> <timotheecour> (edit) "Then don't use it if you don't understand it. I have real use cases for it that are hard to achieve without this feature. ... " 03added "Same goes with the other modules; no-ones's forcing you to use those APIs, but they're here for a reason."
[13:21:17] *** Joins: Vladar (~Vladar@46.162.2.53)
[13:23:14] <FromDiscord> <Araq> I corrected my typo
[13:23:36] <FromDiscord> <Araq> sorry for the confusion, deferredImport is not required afaict
[13:35:29] *** Quits: max22- (~maxime@2a01cb08833598002dfb1b6833a8ed57.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[13:38:49] <FromDiscord> <timotheecour> @Araq I think there's a  misunderstanding regarding this PR; it allows registering root modules that should be compiled, as done in other languages eg:‚Üµ`dmd main.d mylib.d`, or `clang main.cpp mylib.cpp`, and can be thought of extending the `{.compiles: mylib.c.}` to also consider nim files (but reusing module graph so each module is compiled just once); it's equivalent to adding `import mylib` at the end of the main module
[13:40:02] <FromDiscord> <timotheecour> I even remember you were discussing something related recently, mentioning that having to rely on a main module import a dependency is fragile; this solves that problem.
[13:40:17] *** Joins: max22- (~maxime@2a01cb088335980046b9424dfdcac51d.ipv6.abo.wanadoo.fr)
[13:42:30] <FromDiscord> <Araq> well if I don't understand, maybe it's because it lacks an RFC
[13:44:34] <FromDiscord> <timotheecour> well i can write an RFC but it shouldn't be dismissed just because it's not as well explained as it could
[13:45:13] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[13:45:33] <FromDiscord> <timotheecour> (edit) "could" => "could. RFC on my TODO list."
[13:45:54] <FromDiscord> <Araq> no it would be dismissed because I hope to come up with a better design
[13:46:49] <FromDiscord> <Araq> I can write the spec
[13:47:17] <FromDiscord> <timotheecour> if you come up with a better design, the better design wins, no problem. But note that the PR is actually extremely simple, and it does solve a real, problem, i've used this successfully to write compiler extensions for eg.
[13:48:26] <FromDiscord> <timotheecour> (edit) "eg." => "eg, avoiding having to do large refactorings, cyclic issues, and allowing to recompile a single module once (last part needs more explanation)."
[14:06:28] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[14:19:43] *** Quits: max22- (~maxime@2a01cb088335980046b9424dfdcac51d.ipv6.abo.wanadoo.fr) (Ping timeout: 244 seconds)
[14:30:38] *** Joins: max22- (~maxime@2a01cb0883359800413a02bea1558c99.ipv6.abo.wanadoo.fr)
[14:31:35] *** Joins: elph (uid286227@id-286227.tooting.irccloud.com)
[14:42:22] <FromDiscord> <Araq> simple to implement doesn't mean "simple to use/understand"
[14:48:50] <FromDiscord> <dom96> if this is blocking you @timotheecour, any chance we could accept it behind a feature flag? or maybe @timotheecour can maintain a fork for a bit until this is fixed in a way that's acceptable?
[14:49:16] <FromDiscord> <timotheecour> i'd be totally ok with `--experimental:deferImport`
[14:49:44] <FromDiscord> <Araq> he is doing that but the features only get enough exposure when they land in standard Nim, I think.
[14:53:18] *** Quits: max22- (~maxime@2a01cb0883359800413a02bea1558c99.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[14:54:04] <FromDiscord> <Araq> and removing experimental features is always hard
[14:54:34] <FromDiscord> <dom96> why is that? isn't it just a case of removing any code that's inside a `if experimental(blah):` branch?
[14:56:16] *** Joins: Torro (Torro@gateway/vpn/protonvpn/torro)
[14:57:17] <FromDiscord> <Araq> the longer an experimental switch is alive the more it gets used and then your dependencies might use it if you don't use it yourself
[14:57:18] <FromDiscord> <timotheecour> separate branch won't solve anything (i might as well use my private branch) because it'd have to be constantly rebased (conflicts, etc); `--experimental:deferImport` would not have such issue. Useless experimental features that no-one use are easy to remove.
[14:57:35] <FromDiscord> <Araq> or if you're willing to update your own code
[14:57:49] <FromDiscord> <clyybber> In reply to @timotheecour "<@413679055897100289> I think there's": well than add `import mylib` to the end of the module, this cannot block you then
[14:58:17] <FromDiscord> <Araq> try to remove --experimental:codeReordering and see how far you get üòõ
[14:59:13] <FromDiscord> <timotheecour> i just removed injectstmt for eg üôÇ
[14:59:54] <FromDiscord> <Araq> you didn't. you removed its documentation
[15:05:15] <FromDiscord> <haxscramper> Btw, on the topic of experimental switches - is there anything blocking case stmt macros to be enabled by default? So far I've encountered zero complaints with pattern matching that were caused by bugs in this feature
[15:06:49] <FromDiscord> <Araq> no, please create a PR.
[15:07:47] <FromDiscord> <Araq> and I suspected it to cause no trouble btw. As it's  a very localized feature.
[15:11:04] *** Quits: xet7 (~xet7@85-156-127-25.elisa-laajakaista.fi) (Quit: Leaving)
[15:27:41] *** Joins: huria4 (~huria4@c-24-30-27-91.hsd1.ga.comcast.net)
[15:28:07] <huria4> I'm using emacs nim mode and it has a tendency to lag for a second or two when typing. What's going on, this doesn't happen in any other mode.
[15:28:54] *** Joins: max22- (~maxime@2a01cb08833598001045ed527bea28ff.ipv6.abo.wanadoo.fr)
[15:39:19] <FromDiscord> <zetashift> In reply to @huria4 "I'm using emacs nim": If you turn off syntax highlighting does it sti